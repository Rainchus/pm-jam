% Script File: Move_PowerBounce.bscr
% Decoded from: 743DF0 to 746E10 (Move_PowerBounce)

#new:Function $Function_802A1000
{
    0:  ADDIU     SP, SP, FFD8
    4:  LA        V1, 800DC070
    C:  SW        RA, 20 (SP)
   10:  SW        S1, 1C (SP)
   14:  SW        S0, 18 (SP)
   18:  LW        V0, D8 (V1)
   1C:  COPY      S0, A0
   20:  LWC1      F2, 1C (V0)
   24:  LWC1      F12, 144 (V0)
   28:  LWC1      F14, 148 (V0)
   2C:  LWC1      F4, 14C (V0)
   30:  LWC1      F6, 18 (V0)
   34:  LWC1      F0, 20 (V0)
   38:  MFC1      A2, F4
   3C:  MFC1      A3, F6
   40:  COPY      S1, V1
   44:  SWC1      F2, 10 (SP)
   48:  JAL       ~Func:dist3D
   4C:  SWC1      F0, 14 (SP)
   50:  LIF       F2, 15.0
   58:  NOP
   5C:  MUL.S     F0, F0, F2
   60:  NOP
   64:  LIF       F2, 100.0
   6C:  NOP
   70:  DIV.S     F0, F0, F2
   74:  TRUNC.W.S F8, F0
   78:  MFC1      V0, F8
   7C:  NOP
   80:  SW        V0, 84 (S0)
   84:  SLTI      V0, V0, 15
   88:  BNE       V0, R0, .o94
   8C:  LI        V0, 14
   90:  SW        V0, 84 (S0)
        .o94
   94:  LB        V0, 83 (S1)
   98:  BEQ       V0, R0, .oB8
   9C:  NOP
   A0:  LW        V0, 84 (S0)
   A4:  SLTI      V0, V0, 6
   A8:  BEQ       V0, R0, .oCC
   AC:  LI        V0, 6
   B0:  BEQ       R0, R0, .oCC
   B4:  SW        V0, 84 (S0)
        .oB8
   B8:  LW        V0, 84 (S0)
   BC:  SLTI      V0, V0, C
   C0:  BEQ       V0, R0, .oCC
   C4:  LI        V0, C
   C8:  SW        V0, 84 (S0)
        .oCC
   CC:  LW        RA, 20 (SP)
   D0:  LW        S1, 1C (SP)
   D4:  LW        S0, 18 (SP)
   D8:  LI        V0, 2
   DC:  JR        RA
   E0:  ADDIU     SP, SP, 28
}

#new:Function $Function_GetHitChance
{
    0:  ADDIU     SP, SP, FFE0
    4:  SW        S2, 18 (SP)
    8:  COPY      S2, A0
    C:  SW        RA, 1C (SP)
   10:  SW        S1, 14 (SP)
   14:  SW        S0, 10 (SP)
   18:  JAL       ~Func:get_actor
   1C:  LW        A0, 148 (S2)
   20:  JAL       ~Func:get_actor
   24:  LH        A0, 428 (V0)
   28:  LI        V1, 63
   2C:  SW        V1, 84 (S2)
   30:  LW        V0, 8 (V0)
   34:  LBU       S1, 1E (V0)
   38:  JAL       ~Func:is_ability_active
   3C:  CLEAR     A0
   40:  BNEL      V0, R0, .o48
   44:  ADDIU     S1, S1, 7
        .o48
   48:  LA        S0, $???_802A2730
   50:  LW        V1, 0 (S0)
   54:  MULT      V1, S1
   58:  MFLO      V1
   5C:  LI        V0, 51EB851F
   64:  MULT      V1, V0
   68:  LI        A0, 64
   6C:  SRA       V1, V1, 1F
   70:  MFHI      A2
   74:  SRA       V0, A2, 5
   78:  SUBU      V0, V0, V1
   7C:  JAL       ~Func:rand_int
   80:  SW        V0, 0 (S0)
   84:  LW        V1, 0 (S0)
   88:  SLT       V1, V1, V0
   8C:  BNEL      V1, R0, .o94
   90:  SW        R0, 84 (S2)
        .o94
   94:  LW        RA, 1C (SP)
   98:  LW        S2, 18 (SP)
   9C:  LW        S1, 14 (SP)
   A0:  LW        S0, 10 (SP)
   A4:  LI        V0, 2
   A8:  JR        RA
   AC:  ADDIU     SP, SP, 20
}

#new:Function $Function_InitializeHitCounter
{
    0:  SAW       R0, $End[0]
    8:  JR        RA
    C:  LI        V0, 2
}

#new:Function $Function_IncrementHitCounter
{
    0:  LA        V1, $End[0]
    8:  LW        V0, 0 (V1)
    C:  ADDIU     V0, V0, 1
   10:  SW        V0, 0 (V1)
   14:  JR        RA
   18:  LI        V0, 2
}

#new:Function $Function_StoreHitCountRecord
{
    0:  LA        A1, 8010F290
    8:  LA        A0, $End[0]
   10:  LHU       V0, 2A0 (A1)
   14:  LW        V1, 0 (A0)
   18:  SLT       V0, V0, V1
   1C:  BEQ       V0, R0, .o2C
   20:  NOP
   24:  LHU       V0, 2 (A0)
   28:  SH        V0, 2A0 (A1)
        .o2C
   2C:  JR        RA
   30:  LI        V0, 2
}

PADDING: 802A11F4 to 802A1200 (00743FE4 to 00743FF0)
00000000 00000000 00000000

% Origin: HEURISTIC
#new:Unknown $???_802A1200
{
	00000009 00000003 00000009 00000003 00000009 00000003 00000008 00000003
	00000007 00000003 00000006 00000002 00000005 00000002 00000004 00000002
}

#new:Script $Script_802A1240
{
    0:  Call  SetAnimation  ( .Actor:Player 00000000 00010006 )
   18:  Loop  00000005
   24:  	Call  CheckButtonPress  ( ~Flags:Buttons:A *Var0 )
   38:  	If  *Var0  ==  .True
   48:  		BreakLoop
   50:  	EndIf
   58:  	Wait  1`
   64:  EndLoop
   6C:  Return
   74:  End
}

#new:Script $Script_802A12BC
{
    0:  Call  SetGoalToFirstTarget  ( .Actor:Self )
   10:  Call  GetGoalPos        ( .Actor:Self *Var0 *Var1 *Var2 )
   2C:  Sub   *Var0  00000028
   3C:  Call  InitTargetIterator ( )
   48:  Call  SetGoalToTarget   ( .Actor:Player )
   58:  Call  GetGoalPos        ( .Actor:Player *Var3 *Var4 *Var5 )
   74:  Sub   *Var3  *Fixed[70.0]
   84:  If  *Var0  <  *Var3
   94:  	Set   *Var3  *Var0
   A4:  EndIf
   AC:  Call  SetGoalPos    ( .Actor:Player *Var3 *Var4 *Var5 )
   C8:  Call  UseBattleCamPreset        ( 0000001A )
   D8:  Call  SetActorSpeed ( .Actor:Player *Fixed[5.0] )
   EC:  Call  SetAnimation  ( .Actor:Player 00000000 00010005 )
  104:  Call  CancelablePlayerRunToGoal ( 00000000 *Var0 )
  118:  Call  SetAnimation  ( .Actor:Player 00000000 00010002 )
  130:  Call  SetGoalToTarget   ( .Actor:Player )
  140:  ExecWait  $Script_802A1240
  14C:  Call  SetAnimation  ( .Actor:Player 00000000 00010006 )
  164:  Return
  16C:  End
}

#new:Script $Script_802A1430
{
    0:  Call  SetGoalToTarget   ( .Actor:Player )
   10:  Call  GetGoalPos        ( .Actor:Player *Var6 *Var7 *Var8 )
   2C:  Call  GetActorPos       ( .Actor:Player *Var7 *Var8 *Var9 )
   48:  If  *Var6  >  *Var7
   58:  	Sub   *Var6  *Var7
   68:  Else
   70:  	Sub   *Var7  *Var6
   80:  	Set   *Var6  *Var7
   90:  EndIf
   98:  Sub   *Var6  00000014
   A8:  DivF  *Var6  *Fixed[10.588867]
   B8:  AddF  *Var6  0000000F
   C8:  Set   *VarA  *Var6
   D8:  Return
   E0:  End
}

% Origin: HEURISTIC
#new:Script $Script_802A1518
{
    0:  Call  SetGoalToTarget   ( .Actor:Player )
   10:  Call  GetGoalPos        ( .Actor:Player *Var6 *Var7 *Var8 )
   2C:  Call  GetActorPos       ( .Actor:Player *Var7 *Var8 *Var9 )
   48:  If  *Var6  >  *Var7
   58:  	Sub   *Var6  *Var7
   68:  Else
   70:  	Sub   *Var7  *Var6
   80:  	Set   *Var6  *Var7
   90:  EndIf
   98:  Sub   *Var6  00000014
   A8:  DivF  *Var6  *Fixed[22.5]
   B8:  AddF  *Var6  0000000F
   C8:  Set   *VarA  *Var6
   D8:  Return
   E0:  End
}

% Origin: HEURISTIC
#new:Script $Script_802A1600
{
    0:  Call  SetGoalToTarget   ( .Actor:Player )
   10:  Call  GetGoalPos        ( .Actor:Player *Var6 *Var7 *Var8 )
   2C:  Call  GetActorPos       ( .Actor:Player *Var7 *Var8 *Var9 )
   48:  If  *Var6  >  *Var7
   58:  	Sub   *Var6  *Var7
   68:  Else
   70:  	Sub   *Var7  *Var6
   80:  	Set   *Var6  *Var7
   90:  EndIf
   98:  Sub   *Var6  00000014
   A8:  DivF  *Var6  *Fixed[18.0]
   B8:  AddF  *Var6  00000016
   C8:  Set   *VarA  *Var6
   D8:  Return
   E0:  End
}

#new:Script $Script_802A16E8
{
    0:  Call  80276EFC ( )
    C:  Call  SetBattleFlagBits ( 00000100 .False )
   20:  Call  UseBattleCamPreset    ( 00000003 )
   30:  Call  802693F0 ( )
   3C:  Call  SetGoalToHome ( .Actor:Player )
   4C:  Call  GetGoalPos    ( .Actor:Player *Var0 *Var1 *Var2 )
   68:  Add   *Var0  00000028
   78:  Call  SetJumpAnimations ( .Actor:Player 00000000 00010007 00010008 00010009 )
   98:  Call  SetActorJumpGravity   ( .Actor:Player *Fixed[1.3] )
   AC:  Call  SetGoalPos    ( .Actor:Player *Var0 *Var1 *Var2 )
   C8:  Call  $Function_802A1000 ( )
   D4:  Call  80273444      ( *Var0 00000000 00000000 )
   EC:  Call  SetAnimation  ( .Actor:Player 00000000 00010009 )
  104:  Wait  1`
  110:  Call  AddGoalPos    ( .Actor:Player  -20`  0`  0` )
  12C:  Call  80273444      ( 00000006 00000000 00000002 )
  144:  Call  SetAnimation  ( .Actor:Player 00000000 00010009 )
  15C:  Wait  5`
  168:  Call  EnablePlayerBlur  ( FFFFFFFF )
  178:  Call  SetGoalToHome ( .Actor:Player )
  188:  Call  SetActorSpeed ( .Actor:Player *Fixed[8.0] )
  19C:  Call  SetAnimation  ( .Actor:Player 00000000 00010005 )
  1B4:  Call  PlayerRunToGoal   ( 00000000 )
  1C4:  Call  SetAnimation  ( .Actor:Player 00000000 00010002 )
  1DC:  Return
  1E4:  End
}

% Origin: HEURISTIC
#new:Script $Script_802A18D4
{
    0:  Call  80276EFC ( )
    C:  Call  SetBattleFlagBits ( 00000100 .False )
   20:  Call  UseBattleCamPreset    ( 00000003 )
   30:  Call  802693F0 ( )
   3C:  Call  GetActorPos   ( .Actor:Player *Var0 *Var1 *Var2 )
   58:  Sub   *Var0  00000032
   68:  Set   *Var1  00000000
   78:  Call  SetGoalPos    ( .Actor:Player *Var0 *Var1 *Var2 )
   94:  Call  SetJumpAnimations ( .Actor:Player 00000000 00010007 00010008 00010009 )
   B4:  Call  SetActorJumpGravity   ( .Actor:Player *Fixed[0.8] )
   C8:  Call  $Function_802A1000 ( )
   D4:  Call  80273444      ( *Var0 00000000 00000000 )
   EC:  Call  SetAnimation  ( .Actor:Player 00000000 00010009 )
  104:  Wait  1`
  110:  Call  AddGoalPos    ( .Actor:Player  -30`  0`  0` )
  12C:  Call  80273444      ( 00000006 00000000 00000002 )
  144:  Call  SetAnimation  ( .Actor:Player 00000000 00010009 )
  15C:  Wait  2`
  168:  Call  EnablePlayerBlur  ( FFFFFFFF )
  178:  Call  SetGoalToHome ( .Actor:Player )
  188:  Call  SetActorSpeed ( .Actor:Player *Fixed[8.0] )
  19C:  Call  SetAnimation  ( .Actor:Player 00000000 00010005 )
  1B4:  Call  PlayerRunToGoal   ( 00000000 )
  1C4:  Call  SetAnimation  ( .Actor:Player 00000000 00010002 )
  1DC:  Return
  1E4:  End
}

#new:Script $Script_802A1AC0
{
    0:  Call  80276EFC ( )
    C:  Call  SetBattleFlagBits ( 00000100 .False )
   20:  Call  UseBattleCamPreset    ( 0000001D )
   30:  Call  802693F0 ( )
   3C:  Call  GetActorPos   ( .Actor:Player *Var0 *Var1 *Var2 )
   58:  Sub   *Var0  00000028
   68:  Set   *Var1  00000000
   78:  Call  SetGoalPos    ( .Actor:Player *Var0 *Var1 *Var2 )
   94:  Call  SetJumpAnimations ( .Actor:Player 00000000 00010007 00010008 00010009 )
   B4:  Call  SetActorJumpGravity   ( .Actor:Player *Fixed[1.0] )
   C8:  Call  $Function_802A1000 ( )
   D4:  Call  80273444      ( *Var0 00000000 00000000 )
   EC:  Call  SetAnimation  ( .Actor:Player 00000000 00010009 )
  104:  Wait  1`
  110:  Call  AddGoalPos    ( .Actor:Player  -20`  0`  0` )
  12C:  Call  80273444      ( 00000006 00000000 00000002 )
  144:  Call  SetAnimation  ( .Actor:Player 00000000 00010009 )
  15C:  Wait  2`
  168:  Call  EnablePlayerBlur  ( FFFFFFFF )
  178:  Call  SetGoalToHome ( .Actor:Player )
  188:  Call  SetActorSpeed ( .Actor:Player *Fixed[8.0] )
  19C:  Call  SetAnimation  ( .Actor:Player 00000000 00010005 )
  1B4:  Call  PlayerRunToGoal   ( 00000000 )
  1C4:  Call  SetAnimation  ( .Actor:Player 00000000 00010002 )
  1DC:  Return
  1E4:  End
}

% Origin: HEURISTIC
#new:Script $Script_802A1CAC
{
    0:  Call  80276EFC ( )
    C:  Call  SetBattleFlagBits ( 00000100 .False )
   20:  Call  UseBattleCamPreset    ( 00000003 )
   30:  Call  802693F0 ( )
   3C:  Call  GetActorPos   ( .Actor:Player *Var0 *Var1 *Var2 )
   58:  Sub   *Var0  0000003C
   68:  Set   *Var1  00000000
   78:  Call  SetGoalPos    ( .Actor:Player *Var0 *Var1 *Var2 )
   94:  Call  SetJumpAnimations ( .Actor:Player 00000000 00010007 00010008 00010009 )
   B4:  Call  SetActorJumpGravity   ( .Actor:Player *Fixed[0.8] )
   C8:  Call  $Function_802A1000 ( )
   D4:  Call  80273444      ( *Var0 00000000 00000000 )
   EC:  Call  SetAnimation  ( .Actor:Player 00000000 00010009 )
  104:  Wait  1`
  110:  Call  AddGoalPos    ( .Actor:Player  -20`  0`  0` )
  12C:  Call  80273444      ( 00000006 00000000 00000002 )
  144:  Call  SetAnimation  ( .Actor:Player 00000000 00010009 )
  15C:  Wait  2`
  168:  Call  EnablePlayerBlur  ( FFFFFFFF )
  178:  Call  SetGoalToHome ( .Actor:Player )
  188:  Call  SetActorSpeed ( .Actor:Player *Fixed[8.0] )
  19C:  Call  SetAnimation  ( .Actor:Player 00000000 00010005 )
  1B4:  Call  PlayerRunToGoal   ( 00000000 )
  1C4:  Call  SetAnimation  ( .Actor:Player 00000000 00010002 )
  1DC:  Return
  1E4:  End
}

% Origin: HEURISTIC
#new:Script $Script_802A1E98
{
    0:  Call  80276EFC ( )
    C:  Call  SetBattleFlagBits ( 00000100 .False )
   20:  Call  EnablePlayerBlur  ( FFFFFFFF )
   30:  Call  UseBattleCamPreset    ( 00000003 )
   40:  Call  802693F0 ( )
   4C:  Call  SetGoalToHome     ( .Actor:Player )
   5C:  Call  GetGoalPos        ( .Actor:Player *Var0 *Var1 *Var2 )
   78:  Add   *Var0  0000003C
   88:  Set   *Var1  00000000
   98:  Call  SetGoalPos        ( .Actor:Player *Var0 *Var1 *Var2 )
   B4:  Call  SetActorJumpGravity   ( .Actor:Player *Fixed[1.0] )
   C8:  Call  SetJumpAnimations ( .Actor:Player 00000000 00010017 00010017 00010009 )
   E8:  Call  $Function_802A1000 ( )
   F4:  Call  80273444  ( *Var0 00000000 00000000 )
  10C:  ChildThread
  114:  	Call  ShakeCam  ( .Cam:Battle 00000000  4` *Fixed[1.0] )
  130:  EndChildThread
  138:  Call  AddGoalPos    ( .Actor:Player  -30`  0`  0` )
  154:  Call  80273444      ( 00000008 00000000 00000002 )
  16C:  ChildThread
  174:  	Call  ShakeCam  ( .Cam:Battle 00000000  4` *Fixed[1.0] )
  190:  EndChildThread
  198:  Call  AddGoalPos    ( .Actor:Player  -20`  0`  0` )
  1B4:  Call  SetGoalPos    ( .Actor:Player *Var0 *Var1 *Var2 )
  1D0:  Call  80273444      ( 00000006 00000000 00000002 )
  1E8:  ChildThread
  1F0:  	Call  ShakeCam  ( .Cam:Battle 00000000  4` *Fixed[1.0] )
  20C:  EndChildThread
  214:  Call  SetGoalToHome ( .Actor:Player )
  224:  Call  80273444      ( 00000004 00000000 00000002 )
  23C:  Call  SetAnimation  ( .Actor:Player 00000000 00010002 )
  254:  Return
  25C:  End
}

#new:Script $Script_802A20FC
{
    0:  Call  SetJumpAnimations ( .Actor:Player 00000000 00000000 00000000 0001000C )
   20:  Call  PlayerLandJump ( )
   2C:  Call  SetAnimation      ( .Actor:Player 00000000 0001000C )
   44:  Wait  2`
   50:  ChildThread
   58:  	Call  ShakeCam  ( .Cam:Battle 00000000  5` *Fixed[1.0] )
   74:  EndChildThread
   7C:  Call  PlaySoundAtActor  ( .Actor:Player 00000162 )
   90:  Call  SetAnimation      ( .Actor:Player 00000000 00010030 )
   A8:  Wait  10`
   B4:  Call  SetAnimation      ( .Actor:Player 00000000 00010031 )
   CC:  Wait  20`
   D8:  Call  SetBattleFlagBits ( 00000100 .False )
   EC:  Call  UseBattleCamPreset    ( 00000003 )
   FC:  Call  802693F0 ( )
  108:  Call  EnablePlayerBlur  ( FFFFFFFF )
  118:  Call  80276EFC ( )
  124:  Call  SetGoalToHome     ( .Actor:Player )
  134:  Call  SetActorSpeed     ( .Actor:Player *Fixed[8.0] )
  148:  Call  SetAnimation      ( .Actor:Player 00000000 00010005 )
  160:  Call  PlayerRunToGoal   ( 00000000 )
  170:  Call  SetAnimation      ( .Actor:Player 00000000 00010002 )
  188:  Return
  190:  End
}

% Origin: HEURISTIC
#new:Script $Script_802A2294
{
    0:  Call  LoadActionCommand ( .ActionCommand:Jump )
   10:  Call  802A9000 ( )
   1C:  ExecWait  $Script_802A12BC
   28:  ExecWait  $Script_802A1430
   34:  Call  802A9120  ( *VarA 00000003 )
   48:  Call  UseBattleCamPreset    ( 00000022 )
   58:  Call  SetGoalToTarget   ( .Actor:Player )
   68:  Call  SetJumpAnimations ( .Actor:Player 00000000 00010007 00010008 00030000 )
   88:  Call  80274A18  ( *VarA 00000000 )
   9C:  Return
   A4:  End
}

% Origin: HEURISTIC
#new:Script $Script_802A2340
{
    0:  Call  LoadActionCommand ( .ActionCommand:Jump )
   10:  Call  802A9000 ( )
   1C:  ExecWait  $Script_802A12BC
   28:  Call  InitTargetIterator ( )
   34:  ExecWait  $Script_802A1518
   40:  Set   *VarB  *VarA
   50:  Add   *VarB  0000000E
   60:  Add   *VarB  FFFFFFFD
   70:  Call  802A9120  ( *VarB 00000003 )
   84:  Call  UseBattleCamPreset    ( 00000025 )
   94:  Call  SetGoalToTarget   ( .Actor:Player )
   A4:  Call  SetJumpAnimations ( .Actor:Player 00000000 00010007 0001000A 0001000B )
   C4:  Call  802752AC  ( *VarA 00000000 )
   D8:  Wait  7`
   E4:  Call  DidActionSucceed  ( *Var0 )
   F4:  Switch  *Var0
  100:  	Case  >  .False
  10C:  		Call  802752AC  ( 00000003 00000001 )
  120:  	Default
  128:  		Call  802752AC  ( 00000005 00000001 )
  13C:  EndSwitch
  144:  Return
  14C:  End
}

% Origin: HEURISTIC
#new:Script $Script_802A2494
{
    0:  Call  LoadActionCommand ( .ActionCommand:Jump )
   10:  Call  802A9000 ( )
   1C:  ExecWait  $Script_802A12BC
   28:  ExecWait  $Script_802A1600
   34:  Call  8026919C  ( $???_802A1200 )
   44:  Set   *VarB  *VarA
   54:  Sub   *VarB  00000004
   64:  Add   *VarB  FFFFFFFD
   74:  Call  802A9120  ( *VarB 00000003 )
   88:  Call  UseBattleCamPreset    ( 00000026 )
   98:  Call  SetGoalToTarget   ( .Actor:Player )
   A8:  Call  SetJumpAnimations ( .Actor:Player 00000000 00010007 00080000 00030000 )
   C8:  Call  80275F00  ( *VarA 00000000 )
   DC:  Call  CloseActionCommandInfo ( )
   E8:  Set   *Var9  00000000
   F8:  Call  DidActionSucceed  ( *Var0 )
  108:  If  *Var0  >  .False
  118:  	Set   *Var9  00000001
  128:  	Call  SetAnimation      ( .Actor:Player 00000000 00030000 )
  140:  	Call  SetActorRotation  ( .Actor:Self 00000000 00000000 00000000 )
  15C:  	Call  SetActorDispOffset    ( .Actor:Self 00000000 FFFFFFFE 00000000 )
  178:  	Wait  2`
  184:  	Call  SetActorDispOffset    ( .Actor:Self 00000000 00000000 00000000 )
  1A0:  	Call  LoadActionCommand ( .ActionCommand:Jump )
  1B0:  	Call  802A9000 ( )
  1BC:  	Call  802A9120  ( 0000000D 00000003 )
  1D0:  	Call  UseBattleCamPreset    ( 00000027 )
  1E0:  	Call  80275F00  ( 0000000F 00000002 )
  1F4:  	Goto  A
  200:  Else
  208:  	Call  LoadActionCommand ( .ActionCommand:Jump )
  218:  	Call  802A9000 ( )
  224:  	Call  802A9120  ( 00000002 00000003 )
  238:  	Call  80275F00  ( 00000004 00000001 )
  24C:  	Goto  A
  258:  EndIf
  260:  Label  A
  26C:  Return
  274:  End
}

#new:Unknown $???_802A2710
{
	00000007 00000006 00000005 00000004 00000003 00000002 00000001 00000000
}

#new:Unknown $???_802A2730
{
	000000C8
}

#new:Script_Use $Script_UseMove0
{
    0:  Set   *Flag[0A]  .False
   10:  Call  802694A4  ( 00000001 )
   20:  Call  $Function_InitializeHitCounter ( )
   2C:  Call  GetMenuSelection  ( *Var0 *Var1 *Var2 )
   44:  Switch  *Var1
   50:  	Case  ==  .Item:Nothing % 0
   5C:  		Set   *VarC  00000001
   6C:  		ExecWait  $Script_802A2820
   78:  	Case  ==  .Item:Jump % 1
   84:  		Set   *VarC  00000002
   94:  		ExecWait  $Script_802A3024
   A0:  	Case  ==  .Item:SpinJump % 2
   AC:  		Set   *VarC  00000003
   BC:  		ExecWait  $Script_802A383C
   C8:  EndSwitch
   D0:  Call  $Function_StoreHitCountRecord ( )
   DC:  Return
   E4:  End
}

#new:Script $Script_802A2820
{
    0:  Call  LoadActionCommand ( .ActionCommand:Jump )
   10:  Call  802A9000 ( )
   1C:  Call  8026919C  ( $???_802A2710 )
   2C:  ExecWait  $Script_802A12BC
   38:  ExecWait  $Script_802A1430
   44:  Call  802A9120  ( *VarA 00000001 )
   58:  Call  UseBattleCamPreset    ( 00000022 )
   68:  Call  SetGoalToTarget   ( .Actor:Player )
   78:  Call  SetJumpAnimations ( .Actor:Player 00000000 00010007 00010008 00030000 )
   98:  Call  80274A18  ( *VarA 00000000 )
   AC:  Call  PlayerTestEnemy   ( *Var0 ~Flags:DamageType:Jump 00000000 00000000 00000001 00000000 )
   D0:  If  *Var0  ==  .HitResult:Miss % 6
   E0:  	ExecWait  $Script_802A20FC
   EC:  	Return
   F4:  EndIf
   FC:  Wait  1`
  108:  Call  DidActionSucceed  ( *Var0 )
  118:  Switch  *Var0
  124:  	Case  >  .False
  130:  		Call  SetActorSounds    ( .Actor:Player .ActorSound:Hurt 0000015A 00000000 )
  14C:  		Call  PlayerDamageEnemy ( *Var0 ~Flags:DamageType:PowerBounce|Jump 00000000 00000000 *VarC 00000050 )
  170:  	Default
  178:  		Call  SetActorSounds    ( .Actor:Player .ActorSound:Hurt 0000015A 00000000 )
  194:  		Call  PlayerDamageEnemy ( *Var0 ~Flags:DamageType:PowerBounce|Jump 00000000 00000000 *VarC 00000030 )
  1B8:  EndSwitch
  1C0:  Switch  *Var0
  1CC:  	CaseOR  ==  .HitResult:Hit % 0
  1D8:  	CaseOR  ==  .HitResult:QuakeImmune % 2
  1E4:  		ExecWait  $Script_802A1AC0
  1F0:  		Return
  1F8:  	EndCaseGroup
  200:  	CaseOR  ==  00000001 % 1
  20C:  	CaseOR  ==  00000003 % 3
  218:  	EndCaseGroup
  220:  EndSwitch
  228:  ChildThread
  230:  	Call  UseBattleCamPreset    ( 0000001B )
  240:  	Wait  5`
  24C:  	Call  SetGoalToTarget       ( .Actor:Player )
  25C:  	Call  UseBattleCamPreset    ( 00000023 )
  26C:  EndChildThread
  274:  Call  80269524  ( *VarE )
  284:  Call  $Function_IncrementHitCounter ( )
  290:  Set   *VarD  00000000
  2A0:  Set   *VarF  00000000
  2B0:  Set   *Flag[00]  .False
  2C0:  Label  A
  2CC:  ChildThread
  2D4:  	Call  UseBattleCamPreset    ( 0000001B )
  2E4:  	Wait  5`
  2F0:  	Call  SetGoalToTarget       ( .Actor:Player )
  300:  	Call  UseBattleCamPreset    ( 00000023 )
  310:  EndChildThread
  318:  Call  CloseActionCommandInfo ( )
  324:  Call  8026919C  ( $???_802A2710 )
  334:  Call  LoadActionCommand ( .ActionCommand:Jump )
  344:  Call  802A9000 ( )
  350:  Set   *VarA  00000018
  360:  Switch  *VarF
  36C:  	Case  ==  00000000
  378:  		Call  802A9120  ( *VarA 00000001 )
  38C:  	Case  ==  00000001
  398:  		Call  802A9120  ( *VarA 00000002 )
  3AC:  	Case  ==  00000002
  3B8:  		Call  802A9120  ( *VarA 00000003 )
  3CC:  	Case  ==  00000003
  3D8:  		Call  802A9120  ( *VarA 00000004 )
  3EC:  	Default
  3F4:  		Call  802A9120  ( *VarA 00000005 )
  408:  EndSwitch
  410:  Sub   *VarD  00000001
  420:  Call  SetJumpAnimations ( .Actor:Player 00000000 00010007 00010008 0001000C )
  440:  Call  SetGoalToTarget   ( .Actor:Player )
  450:  If  *VarF  ==  00000000
  460:  	Call  80274A18  ( 00000018 00000003 )
  474:  Else
  47C:  	Call  80274A18  ( 00000018 00000004 )
  490:  EndIf
  498:  Call  SetCommandAutoSuccess ( *Var1 )
  4A8:  If  *Var1  ==  00000001
  4B8:  	If  *VarF  >=  00000003
  4C8:  		Set   *Flag[00]  .True
  4D8:  	EndIf
  4E0:  EndIf
  4E8:  Call  $Function_GetHitChance ( )
  4F4:  If  *VarF  >=  *Var0
  504:  	Set   *Flag[00]  .True
  514:  EndIf
  51C:  Wait  1`
  528:  Call  DidActionSucceed  ( *Var0 )
  538:  Switch  *Var0
  544:  	Case  >  .False
  550:  		If  *Flag[00]  ==  .False
  560:  			Call  SetActorSounds    ( .Actor:Player .ActorSound:Hurt 0000015A 00000000 )
  57C:  			Call  PlayerPowerBounceEnemy    ( *Var0 ~Flags:DamageType:PowerBounce|Jump 00000000 00000000 *VarC *VarD 00000040 )
  5A4:  		Else
  5AC:  			Call  SetActorSounds    ( .Actor:Player .ActorSound:Hurt 0000015A 00000000 )
  5C8:  			Call  PlayerPowerBounceEnemy    ( *Var0 ~Flags:DamageType:PowerBounce|Jump 00000000 00000000 *VarC *VarD 000000E0 )
  5F0:  		EndIf
  5F8:  	Default
  600:  		Call  SetActorSounds    ( .Actor:Player .ActorSound:Hurt 0000015A 00000000 )
  61C:  		Call  PlayerPowerBounceEnemy    ( *Var0 ~Flags:DamageType:PowerBounce|Jump 00000000 00000000 *VarC *VarD 00000020 )
  644:  EndSwitch
  64C:  Switch  *VarF
  658:  	Case  ==  00000000
  664:  		Call  PlaySoundAtActor  ( .Actor:Player 00000235 )
  678:  	Case  ==  00000001
  684:  		Call  PlaySoundAtActor  ( .Actor:Player 00000236 )
  698:  	Case  ==  00000002
  6A4:  		Call  PlaySoundAtActor  ( .Actor:Player 00000237 )
  6B8:  	Case  ==  00000003
  6C4:  		Call  PlaySoundAtActor  ( .Actor:Player 00000238 )
  6D8:  	Default
  6E0:  		Call  PlaySoundAtActor  ( .Actor:Player 00000238 )
  6F4:  EndSwitch
  6FC:  Call  80269550  ( *VarE )
  70C:  Switch  *Var0
  718:  	CaseOR  ==  .HitResult:Hit % 0
  724:  	CaseOR  ==  .HitResult:QuakeImmune % 2
  730:  		If  *Flag[00]  ==  .True
  740:  			ExecWait  $Script_802A16E8
  74C:  			Return
  754:  		EndIf
  75C:  		ExecWait  $Script_802A1AC0
  768:  		Return
  770:  	EndCaseGroup
  778:  	CaseOR  ==  00000001 % 1
  784:  	CaseOR  ==  00000003 % 3
  790:  		If  *Flag[00]  ==  .True
  7A0:  			ExecWait  $Script_802A16E8
  7AC:  			Return
  7B4:  		EndIf
  7BC:  	EndCaseGroup
  7C4:  EndSwitch
  7CC:  Add   *VarF  00000001
  7DC:  Call  $Function_IncrementHitCounter ( )
  7E8:  Goto  A
  7F4:  Return
  7FC:  End
}

#new:Script $Script_802A3024
{
    0:  Call  LoadActionCommand ( .ActionCommand:Jump )
   10:  Call  802A9000 ( )
   1C:  Call  8026919C  ( $???_802A2710 )
   2C:  ExecWait  $Script_802A12BC
   38:  ExecWait  $Script_802A1430
   44:  Call  802A9120  ( *VarA 00000001 )
   58:  Call  UseBattleCamPreset    ( 00000022 )
   68:  Call  SetGoalToTarget   ( .Actor:Player )
   78:  Call  SetJumpAnimations ( .Actor:Player 00000000 00010007 00010008 00030000 )
   98:  Call  80274A18  ( *VarA 00000000 )
   AC:  Call  PlayerTestEnemy   ( *Var0 ~Flags:DamageType:Jump 00000000 00000000 00000001 00000000 )
   D0:  If  *Var0  ==  .HitResult:Miss % 6
   E0:  	ExecWait  $Script_802A20FC
   EC:  	Return
   F4:  EndIf
   FC:  Wait  1`
  108:  Call  DidActionSucceed  ( *Var0 )
  118:  Switch  *Var0
  124:  	Case  >  .False
  130:  		Call  SetActorSounds    ( .Actor:Player .ActorSound:Hurt 0000015B 00000000 )
  14C:  		Call  PlayerDamageEnemy ( *Var0 ~Flags:DamageType:PowerBounce|Jump 00000000 00000000 *VarC 00000050 )
  170:  	Default
  178:  		Call  SetActorSounds    ( .Actor:Player .ActorSound:Hurt 0000015B 00000000 )
  194:  		Call  PlayerDamageEnemy ( *Var0 ~Flags:DamageType:PowerBounce|Jump 00000000 00000000 *VarC 00000030 )
  1B8:  EndSwitch
  1C0:  Switch  *Var0
  1CC:  	CaseOR  ==  .HitResult:Hit % 0
  1D8:  	CaseOR  ==  .HitResult:QuakeImmune % 2
  1E4:  		ExecWait  $Script_802A1AC0
  1F0:  		Return
  1F8:  	EndCaseGroup
  200:  	CaseOR  ==  00000001 % 1
  20C:  	CaseOR  ==  00000003 % 3
  218:  	EndCaseGroup
  220:  EndSwitch
  228:  Call  80269524  ( *VarE )
  238:  Call  $Function_IncrementHitCounter ( )
  244:  Set   *VarD  00000000
  254:  Set   *VarF  00000000
  264:  Set   *Flag[00]  .False
  274:  Label  A
  280:  ChildThread
  288:  	Call  UseBattleCamPreset    ( 0000001B )
  298:  	Wait  5`
  2A4:  	Call  SetGoalToTarget       ( .Actor:Player )
  2B4:  	Call  UseBattleCamPreset    ( 00000023 )
  2C4:  EndChildThread
  2CC:  Call  CloseActionCommandInfo ( )
  2D8:  Call  8026919C  ( $???_802A2710 )
  2E8:  Call  LoadActionCommand ( .ActionCommand:Jump )
  2F8:  Call  802A9000 ( )
  304:  Set   *VarA  00000025
  314:  Switch  *VarF
  320:  	Case  ==  00000000
  32C:  		Call  802A9120  ( *VarA 00000001 )
  340:  	Case  ==  00000001
  34C:  		Call  802A9120  ( *VarA 00000002 )
  360:  	Case  ==  00000002
  36C:  		Call  802A9120  ( *VarA 00000003 )
  380:  	Case  ==  00000003
  38C:  		Call  802A9120  ( *VarA 00000004 )
  3A0:  	Default
  3A8:  		Call  802A9120  ( *VarA 00000005 )
  3BC:  EndSwitch
  3C4:  Sub   *VarD  00000001
  3D4:  Call  SetGoalToTarget   ( .Actor:Player )
  3E4:  Call  SetJumpAnimations ( .Actor:Player 00000000 00010007 0001000A 0001000B )
  404:  Call  EnablePlayerBlur  ( 00000001 )
  414:  If  *VarF  ==  00000000
  424:  	Call  802752AC  ( 00000014 00000003 )
  438:  	Wait  7`
  444:  	Call  802752AC  ( 00000003 00000006 )
  458:  Else
  460:  	Call  802752AC  ( 00000014 00000004 )
  474:  	Wait  7`
  480:  	Call  802752AC  ( 00000003 00000005 )
  494:  EndIf
  49C:  Call  EnablePlayerBlur      ( 00000000 )
  4AC:  Call  SetCommandAutoSuccess ( *Var1 )
  4BC:  If  *Var1  ==  00000001
  4CC:  	If  *VarF  >  00000003
  4DC:  		Set   *Flag[00]  .True
  4EC:  	EndIf
  4F4:  EndIf
  4FC:  Call  $Function_GetHitChance ( )
  508:  If  *VarF  >  *Var0
  518:  	Set   *Flag[00]  .True
  528:  EndIf
  530:  Wait  1`
  53C:  Call  DidActionSucceed  ( *Var0 )
  54C:  Switch  *Var0
  558:  	Case  >  .False
  564:  		If  *Flag[00]  ==  .False
  574:  			Call  SetActorSounds    ( .Actor:Player .ActorSound:Hurt 0000015B 00000000 )
  590:  			Call  PlayerPowerBounceEnemy    ( *Var0 ~Flags:DamageType:PowerBounce|Jump 00000000 00000000 *VarC *VarD 00000040 )
  5B8:  		Else
  5C0:  			Call  SetActorSounds    ( .Actor:Player .ActorSound:Hurt 0000015B 00000000 )
  5DC:  			Call  PlayerPowerBounceEnemy    ( *Var0 ~Flags:DamageType:PowerBounce|Jump 00000000 00000000 *VarC *VarD 000000E0 )
  604:  		EndIf
  60C:  	Default
  614:  		Call  SetActorSounds    ( .Actor:Player .ActorSound:Hurt 0000015B 00000000 )
  630:  		Call  PlayerPowerBounceEnemy    ( *Var0 ~Flags:DamageType:PowerBounce|Jump 00000000 00000000 *VarC *VarD 00000020 )
  658:  EndSwitch
  660:  Switch  *VarF
  66C:  	Case  ==  00000000
  678:  		Call  PlaySoundAtActor  ( .Actor:Player 00000235 )
  68C:  	Case  ==  00000001
  698:  		Call  PlaySoundAtActor  ( .Actor:Player 00000236 )
  6AC:  	Case  ==  00000002
  6B8:  		Call  PlaySoundAtActor  ( .Actor:Player 00000237 )
  6CC:  	Case  ==  00000003
  6D8:  		Call  PlaySoundAtActor  ( .Actor:Player 00000238 )
  6EC:  	Default
  6F4:  		Call  PlaySoundAtActor  ( .Actor:Player 00000238 )
  708:  EndSwitch
  710:  Call  80269550  ( *VarE )
  720:  Switch  *Var0
  72C:  	CaseOR  ==  .HitResult:Hit % 0
  738:  	CaseOR  ==  .HitResult:QuakeImmune % 2
  744:  		If  *Flag[00]  ==  .True
  754:  			ExecWait  $Script_802A16E8
  760:  			Return
  768:  		EndIf
  770:  		ExecWait  $Script_802A1AC0
  77C:  		Return
  784:  	EndCaseGroup
  78C:  	CaseOR  ==  00000001 % 1
  798:  	CaseOR  ==  00000003 % 3
  7A4:  		If  *Flag[00]  ==  .True
  7B4:  			ExecWait  $Script_802A16E8
  7C0:  			Return
  7C8:  		EndIf
  7D0:  	EndCaseGroup
  7D8:  EndSwitch
  7E0:  Add   *VarF  00000001
  7F0:  Call  $Function_IncrementHitCounter ( )
  7FC:  Goto  A
  808:  Return
  810:  End
}

#new:Script $Script_802A383C
{
    0:  Call  LoadActionCommand ( .ActionCommand:Jump )
   10:  Call  802A9000 ( )
   1C:  Call  8026919C  ( $???_802A2710 )
   2C:  ExecWait  $Script_802A12BC
   38:  ExecWait  $Script_802A1430
   44:  Call  802A9120  ( *VarA 00000001 )
   58:  Call  UseBattleCamPreset    ( 00000022 )
   68:  Call  SetGoalToTarget   ( .Actor:Player )
   78:  Call  SetJumpAnimations ( .Actor:Player 00000000 00010007 00010008 00030000 )
   98:  Call  80274A18  ( *VarA 00000000 )
   AC:  Call  PlayerTestEnemy   ( *Var0 ~Flags:DamageType:Jump 00000000 00000000 00000001 00000000 )
   D0:  If  *Var0  ==  .HitResult:Miss % 6
   E0:  	ExecWait  $Script_802A20FC
   EC:  	Return
   F4:  EndIf
   FC:  Wait  1`
  108:  Call  DidActionSucceed  ( *Var0 )
  118:  Switch  *Var0
  124:  	Case  >  .False
  130:  		Call  SetActorSounds    ( .Actor:Player .ActorSound:Hurt 0000015C 00000000 )
  14C:  		Call  PlayerDamageEnemy ( *Var0 ~Flags:DamageType:PowerBounce|Jump 00000000 00000000 *VarC 00000050 )
  170:  	Default
  178:  		Call  SetActorSounds    ( .Actor:Player .ActorSound:Hurt 0000015C 00000000 )
  194:  		Call  PlayerDamageEnemy ( *Var0 ~Flags:DamageType:PowerBounce|Jump 00000000 00000000 *VarC 00000030 )
  1B8:  EndSwitch
  1C0:  Switch  *Var0
  1CC:  	CaseOR  ==  .HitResult:Hit % 0
  1D8:  	CaseOR  ==  .HitResult:QuakeImmune % 2
  1E4:  		ExecWait  $Script_802A1AC0
  1F0:  		Return
  1F8:  	EndCaseGroup
  200:  	CaseOR  ==  00000001 % 1
  20C:  	CaseOR  ==  00000003 % 3
  218:  	EndCaseGroup
  220:  EndSwitch
  228:  Call  80269524  ( *VarE )
  238:  Call  $Function_IncrementHitCounter ( )
  244:  Set   *VarD  00000000
  254:  Set   *VarF  00000000
  264:  Set   *Flag[00]  .False
  274:  Label  A
  280:  ChildThread
  288:  	Call  UseBattleCamPreset    ( 0000001C )
  298:  	Wait  5`
  2A4:  	Call  SetGoalToTarget       ( .Actor:Player )
  2B4:  	Call  UseBattleCamPreset    ( 00000023 )
  2C4:  EndChildThread
  2CC:  Call  CloseActionCommandInfo ( )
  2D8:  Call  8026919C  ( $???_802A2710 )
  2E8:  Call  LoadActionCommand ( .ActionCommand:Jump )
  2F8:  Call  802A9000 ( )
  304:  Set   *VarA  00000019
  314:  Switch  *VarF
  320:  	Case  ==  00000000
  32C:  		Call  802A9120  ( *VarA 00000001 )
  340:  	Case  ==  00000001
  34C:  		Call  802A9120  ( *VarA 00000002 )
  360:  	Case  ==  00000002
  36C:  		Call  802A9120  ( *VarA 00000003 )
  380:  	Case  ==  00000003
  38C:  		Call  802A9120  ( *VarA 00000004 )
  3A0:  	Default
  3A8:  		Call  802A9120  ( *VarA 00000005 )
  3BC:  EndSwitch
  3C4:  Sub   *VarD  00000001
  3D4:  Call  SetGoalToTarget   ( .Actor:Player )
  3E4:  Call  EnablePlayerBlur  ( 00000001 )
  3F4:  Call  SetJumpAnimations ( .Actor:Player 00000000 00010007 00010007 0001000C )
  414:  If  *VarF  ==  00000000
  424:  	Call  80275F00  ( 00000019 00000002 )
  438:  Else
  440:  	Call  80275F00  ( 00000019 00000004 )
  454:  EndIf
  45C:  Call  EnablePlayerBlur      ( 00000000 )
  46C:  Call  SetCommandAutoSuccess ( *Var1 )
  47C:  If  *Var1  ==  00000001
  48C:  	If  *VarF  >  00000003
  49C:  		Set   *Flag[00]  .True
  4AC:  	EndIf
  4B4:  EndIf
  4BC:  Call  $Function_GetHitChance ( )
  4C8:  If  *VarF  >  *Var0
  4D8:  	Set   *Flag[00]  .True
  4E8:  EndIf
  4F0:  Wait  1`
  4FC:  Call  DidActionSucceed  ( *Var0 )
  50C:  Switch  *Var0
  518:  	Case  >  .False
  524:  		If  *Flag[00]  ==  .False
  534:  			Call  SetActorSounds    ( .Actor:Player .ActorSound:Hurt 0000015C 00000000 )
  550:  			Call  PlayerPowerBounceEnemy    ( *Var0 ~Flags:DamageType:PowerBounce|Jump 00000000 00000000 *VarC *VarD 00000040 )
  578:  		Else
  580:  			Call  SetActorSounds    ( .Actor:Player .ActorSound:Hurt 0000015C 00000000 )
  59C:  			Call  PlayerPowerBounceEnemy    ( *Var0 ~Flags:DamageType:PowerBounce|Jump 00000000 00000000 *VarC *VarD 000000E0 )
  5C4:  		EndIf
  5CC:  	Default
  5D4:  		Call  SetActorSounds    ( .Actor:Player .ActorSound:Hurt 0000015C 00000000 )
  5F0:  		Call  PlayerPowerBounceEnemy    ( *Var0 ~Flags:DamageType:PowerBounce|Jump 00000000 00000000 *VarC *VarD 00000020 )
  618:  EndSwitch
  620:  Switch  *VarF
  62C:  	Case  ==  00000000
  638:  		Call  PlaySoundAtActor  ( .Actor:Player 00000235 )
  64C:  	Case  ==  00000001
  658:  		Call  PlaySoundAtActor  ( .Actor:Player 00000236 )
  66C:  	Case  ==  00000002
  678:  		Call  PlaySoundAtActor  ( .Actor:Player 00000237 )
  68C:  	Case  ==  00000003
  698:  		Call  PlaySoundAtActor  ( .Actor:Player 00000238 )
  6AC:  	Default
  6B4:  		Call  PlaySoundAtActor  ( .Actor:Player 00000238 )
  6C8:  EndSwitch
  6D0:  Call  80269550  ( *VarE )
  6E0:  Switch  *Var0
  6EC:  	CaseOR  ==  .HitResult:Hit % 0
  6F8:  	CaseOR  ==  .HitResult:QuakeImmune % 2
  704:  		If  *Flag[00]  ==  .True
  714:  			ExecWait  $Script_802A16E8
  720:  			Return
  728:  		EndIf
  730:  		ExecWait  $Script_802A1AC0
  73C:  		Return
  744:  	EndCaseGroup
  74C:  	CaseOR  ==  00000001 % 1
  758:  	CaseOR  ==  00000003 % 3
  764:  		If  *Flag[00]  ==  .True
  774:  			ExecWait  $Script_802A16E8
  780:  			Return
  788:  		EndIf
  790:  	EndCaseGroup
  798:  EndSwitch
  7A0:  Add   *VarF  00000001
  7B0:  Call  $Function_IncrementHitCounter ( )
  7BC:  Goto  A
  7C8:  Return
  7D0:  End
}

PADDING: 802A4014 to 802A4020 (00746E04 to 00746E10)
00000000 00000000 00000000

