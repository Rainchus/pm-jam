% Script File: Moves_Unused.bscr
% Decoded from: 779C90 to 77CB80 (Moves_Unused)

#new:Function $Function_802A1000
{
    0:  ADDIU     SP, SP, FFD8
    4:  LA        V1, 800DC070
    C:  SW        RA, 20 (SP)
   10:  SW        S1, 1C (SP)
   14:  SW        S0, 18 (SP)
   18:  LW        V0, D8 (V1)
   1C:  COPY      S0, A0
   20:  LWC1      F2, 1C (V0)
   24:  LWC1      F12, 144 (V0)
   28:  LWC1      F14, 148 (V0)
   2C:  LWC1      F4, 14C (V0)
   30:  LWC1      F6, 18 (V0)
   34:  LWC1      F0, 20 (V0)
   38:  MFC1      A2, F4
   3C:  MFC1      A3, F6
   40:  COPY      S1, V1
   44:  SWC1      F2, 10 (SP)
   48:  JAL       ~Func:dist3D
   4C:  SWC1      F0, 14 (SP)
   50:  LIF       F2, 15.0
   58:  NOP
   5C:  MUL.S     F0, F0, F2
   60:  NOP
   64:  LIF       F2, 100.0
   6C:  NOP
   70:  DIV.S     F0, F0, F2
   74:  TRUNC.W.S F8, F0
   78:  MFC1      V0, F8
   7C:  NOP
   80:  SW        V0, 84 (S0)
   84:  SLTI      V0, V0, 15
   88:  BNE       V0, R0, .o94
   8C:  LI        V0, 14
   90:  SW        V0, 84 (S0)
        .o94
   94:  LB        V0, 83 (S1)
   98:  BEQ       V0, R0, .oB8
   9C:  NOP
   A0:  LW        V0, 84 (S0)
   A4:  SLTI      V0, V0, 6
   A8:  BEQ       V0, R0, .oCC
   AC:  LI        V0, 6
   B0:  BEQ       R0, R0, .oCC
   B4:  SW        V0, 84 (S0)
        .oB8
   B8:  LW        V0, 84 (S0)
   BC:  SLTI      V0, V0, C
   C0:  BEQ       V0, R0, .oCC
   C4:  LI        V0, C
   C8:  SW        V0, 84 (S0)
        .oCC
   CC:  LW        RA, 20 (SP)
   D0:  LW        S1, 1C (SP)
   D4:  LW        S0, 18 (SP)
   D8:  LI        V0, 2
   DC:  JR        RA
   E0:  ADDIU     SP, SP, 28
}

#new:Function $Function_802A10E4
{
    0:  ADDIU     SP, SP, FFE0
    4:  SW        S2, 18 (SP)
    8:  COPY      S2, A0
    C:  SW        RA, 1C (SP)
   10:  SW        S1, 14 (SP)
   14:  SW        S0, 10 (SP)
   18:  JAL       ~Func:get_actor
   1C:  LW        A0, 148 (S2)
   20:  JAL       ~Func:get_actor
   24:  LH        A0, 428 (V0)
   28:  LI        V1, 63
   2C:  SW        V1, 84 (S2)
   30:  LW        V0, 8 (V0)
   34:  LBU       S1, 1E (V0)
   38:  JAL       ~Func:is_ability_active
   3C:  CLEAR     A0
   40:  BNEL      V0, R0, .o48
   44:  ADDIU     S1, S1, 7
        .o48
   48:  LA        S0, $???_802A26D0
   50:  LW        V1, 0 (S0)
   54:  MULT      V1, S1
   58:  MFLO      V1
   5C:  LI        V0, 51EB851F
   64:  MULT      V1, V0
   68:  LI        A0, 64
   6C:  SRA       V1, V1, 1F
   70:  MFHI      A2
   74:  SRA       V0, A2, 5
   78:  SUBU      V0, V0, V1
   7C:  JAL       ~Func:rand_int
   80:  SW        V0, 0 (S0)
   84:  LW        V1, 0 (S0)
   88:  SLT       V1, V1, V0
   8C:  BNEL      V1, R0, .o94
   90:  SW        R0, 84 (S2)
        .o94
   94:  LW        RA, 1C (SP)
   98:  LW        S2, 18 (SP)
   9C:  LW        S1, 14 (SP)
   A0:  LW        S0, 10 (SP)
   A4:  LI        V0, 2
   A8:  JR        RA
   AC:  ADDIU     SP, SP, 20
}

PADDING: 802A1194 to 802A11A0 (00779E24 to 00779E30)
00000000 00000000 00000000

% Origin: HEURISTIC
#new:Unknown $???_802A11A0
{
	00000009 00000003 00000009 00000003 00000009 00000003 00000008 00000003
	00000007 00000003 00000006 00000002 00000005 00000002 00000004 00000002
}

#new:Script $Script_802A11E0
{
    0:  Call  SetAnimation  ( .Actor:Player 00000000 00010006 )
   18:  Loop  00000005
   24:  	Call  CheckButtonPress  ( ~Flags:Buttons:A *Var0 )
   38:  	If  *Var0  ==  .True
   48:  		BreakLoop
   50:  	EndIf
   58:  	Wait  1`
   64:  EndLoop
   6C:  Return
   74:  End
}

#new:Script $Script_802A125C
{
    0:  Call  SetGoalToFirstTarget  ( .Actor:Self )
   10:  Call  GetGoalPos        ( .Actor:Self *Var0 *Var1 *Var2 )
   2C:  Sub   *Var0  00000028
   3C:  Call  InitTargetIterator ( )
   48:  Call  SetGoalToTarget   ( .Actor:Player )
   58:  Call  GetGoalPos        ( .Actor:Player *Var3 *Var4 *Var5 )
   74:  Sub   *Var3  *Fixed[70.0]
   84:  If  *Var0  <  *Var3
   94:  	Set   *Var3  *Var0
   A4:  EndIf
   AC:  Call  SetGoalPos    ( .Actor:Player *Var3 *Var4 *Var5 )
   C8:  Call  UseBattleCamPreset        ( 0000001A )
   D8:  Call  SetActorSpeed ( .Actor:Player *Fixed[5.0] )
   EC:  Call  SetAnimation  ( .Actor:Player 00000000 00010005 )
  104:  Call  CancelablePlayerRunToGoal ( 00000000 *Var0 )
  118:  Call  SetAnimation  ( .Actor:Player 00000000 00010002 )
  130:  Call  SetGoalToTarget   ( .Actor:Player )
  140:  ExecWait  $Script_802A11E0
  14C:  Call  SetAnimation  ( .Actor:Player 00000000 00010006 )
  164:  Return
  16C:  End
}

#new:Script $Script_802A13D0
{
    0:  Call  SetGoalToTarget   ( .Actor:Player )
   10:  Call  GetGoalPos        ( .Actor:Player *Var6 *Var7 *Var8 )
   2C:  Call  GetActorPos       ( .Actor:Player *Var7 *Var8 *Var9 )
   48:  If  *Var6  >  *Var7
   58:  	Sub   *Var6  *Var7
   68:  Else
   70:  	Sub   *Var7  *Var6
   80:  	Set   *Var6  *Var7
   90:  EndIf
   98:  Sub   *Var6  00000014
   A8:  DivF  *Var6  *Fixed[10.588867]
   B8:  AddF  *Var6  0000000F
   C8:  Set   *VarA  *Var6
   D8:  Return
   E0:  End
}

% Origin: HEURISTIC
#new:Script $Script_802A14B8
{
    0:  Call  SetGoalToTarget   ( .Actor:Player )
   10:  Call  GetGoalPos        ( .Actor:Player *Var6 *Var7 *Var8 )
   2C:  Call  GetActorPos       ( .Actor:Player *Var7 *Var8 *Var9 )
   48:  If  *Var6  >  *Var7
   58:  	Sub   *Var6  *Var7
   68:  Else
   70:  	Sub   *Var7  *Var6
   80:  	Set   *Var6  *Var7
   90:  EndIf
   98:  Sub   *Var6  00000014
   A8:  DivF  *Var6  *Fixed[22.5]
   B8:  AddF  *Var6  0000000F
   C8:  Set   *VarA  *Var6
   D8:  Return
   E0:  End
}

% Origin: HEURISTIC
#new:Script $Script_802A15A0
{
    0:  Call  SetGoalToTarget   ( .Actor:Player )
   10:  Call  GetGoalPos        ( .Actor:Player *Var6 *Var7 *Var8 )
   2C:  Call  GetActorPos       ( .Actor:Player *Var7 *Var8 *Var9 )
   48:  If  *Var6  >  *Var7
   58:  	Sub   *Var6  *Var7
   68:  Else
   70:  	Sub   *Var7  *Var6
   80:  	Set   *Var6  *Var7
   90:  EndIf
   98:  Sub   *Var6  00000014
   A8:  DivF  *Var6  *Fixed[18.0]
   B8:  AddF  *Var6  00000016
   C8:  Set   *VarA  *Var6
   D8:  Return
   E0:  End
}

#new:Script $Script_802A1688
{
    0:  Call  80276EFC ( )
    C:  Call  SetBattleFlagBits ( 00000100 .False )
   20:  Call  UseBattleCamPreset    ( 00000003 )
   30:  Call  802693F0 ( )
   3C:  Call  SetGoalToHome ( .Actor:Player )
   4C:  Call  GetGoalPos    ( .Actor:Player *Var0 *Var1 *Var2 )
   68:  Add   *Var0  00000028
   78:  Call  SetJumpAnimations ( .Actor:Player 00000000 00010007 00010008 00010009 )
   98:  Call  SetActorJumpGravity   ( .Actor:Player *Fixed[1.3] )
   AC:  Call  SetGoalPos    ( .Actor:Player *Var0 *Var1 *Var2 )
   C8:  Call  $Function_802A1000 ( )
   D4:  Call  80273444      ( *Var0 00000000 00000000 )
   EC:  Call  SetAnimation  ( .Actor:Player 00000000 00010009 )
  104:  Wait  1`
  110:  Call  AddGoalPos    ( .Actor:Player  -20`  0`  0` )
  12C:  Call  80273444      ( 00000006 00000000 00000002 )
  144:  Call  SetAnimation  ( .Actor:Player 00000000 00010009 )
  15C:  Wait  5`
  168:  Call  EnablePlayerBlur  ( FFFFFFFF )
  178:  Call  SetGoalToHome ( .Actor:Player )
  188:  Call  SetActorSpeed ( .Actor:Player *Fixed[8.0] )
  19C:  Call  SetAnimation  ( .Actor:Player 00000000 00010005 )
  1B4:  Call  PlayerRunToGoal   ( 00000000 )
  1C4:  Call  SetAnimation  ( .Actor:Player 00000000 00010002 )
  1DC:  Return
  1E4:  End
}

% Origin: HEURISTIC
#new:Script $Script_802A1874
{
    0:  Call  80276EFC ( )
    C:  Call  SetBattleFlagBits ( 00000100 .False )
   20:  Call  UseBattleCamPreset    ( 00000003 )
   30:  Call  802693F0 ( )
   3C:  Call  GetActorPos   ( .Actor:Player *Var0 *Var1 *Var2 )
   58:  Sub   *Var0  00000032
   68:  Set   *Var1  00000000
   78:  Call  SetGoalPos    ( .Actor:Player *Var0 *Var1 *Var2 )
   94:  Call  SetJumpAnimations ( .Actor:Player 00000000 00010007 00010008 00010009 )
   B4:  Call  SetActorJumpGravity   ( .Actor:Player *Fixed[0.8] )
   C8:  Call  $Function_802A1000 ( )
   D4:  Call  80273444      ( *Var0 00000000 00000000 )
   EC:  Call  SetAnimation  ( .Actor:Player 00000000 00010009 )
  104:  Wait  1`
  110:  Call  AddGoalPos    ( .Actor:Player  -30`  0`  0` )
  12C:  Call  80273444      ( 00000006 00000000 00000002 )
  144:  Call  SetAnimation  ( .Actor:Player 00000000 00010009 )
  15C:  Wait  2`
  168:  Call  EnablePlayerBlur  ( FFFFFFFF )
  178:  Call  SetGoalToHome ( .Actor:Player )
  188:  Call  SetActorSpeed ( .Actor:Player *Fixed[8.0] )
  19C:  Call  SetAnimation  ( .Actor:Player 00000000 00010005 )
  1B4:  Call  PlayerRunToGoal   ( 00000000 )
  1C4:  Call  SetAnimation  ( .Actor:Player 00000000 00010002 )
  1DC:  Return
  1E4:  End
}

#new:Script $Script_802A1A60
{
    0:  Call  80276EFC ( )
    C:  Call  SetBattleFlagBits ( 00000100 .False )
   20:  Call  UseBattleCamPreset    ( 0000001D )
   30:  Call  802693F0 ( )
   3C:  Call  GetActorPos   ( .Actor:Player *Var0 *Var1 *Var2 )
   58:  Sub   *Var0  00000028
   68:  Set   *Var1  00000000
   78:  Call  SetGoalPos    ( .Actor:Player *Var0 *Var1 *Var2 )
   94:  Call  SetJumpAnimations ( .Actor:Player 00000000 00010007 00010008 00010009 )
   B4:  Call  SetActorJumpGravity   ( .Actor:Player *Fixed[1.0] )
   C8:  Call  $Function_802A1000 ( )
   D4:  Call  80273444      ( *Var0 00000000 00000000 )
   EC:  Call  SetAnimation  ( .Actor:Player 00000000 00010009 )
  104:  Wait  1`
  110:  Call  AddGoalPos    ( .Actor:Player  -20`  0`  0` )
  12C:  Call  80273444      ( 00000006 00000000 00000002 )
  144:  Call  SetAnimation  ( .Actor:Player 00000000 00010009 )
  15C:  Wait  2`
  168:  Call  EnablePlayerBlur  ( FFFFFFFF )
  178:  Call  SetGoalToHome ( .Actor:Player )
  188:  Call  SetActorSpeed ( .Actor:Player *Fixed[8.0] )
  19C:  Call  SetAnimation  ( .Actor:Player 00000000 00010005 )
  1B4:  Call  PlayerRunToGoal   ( 00000000 )
  1C4:  Call  SetAnimation  ( .Actor:Player 00000000 00010002 )
  1DC:  Return
  1E4:  End
}

% Origin: HEURISTIC
#new:Script $Script_802A1C4C
{
    0:  Call  80276EFC ( )
    C:  Call  SetBattleFlagBits ( 00000100 .False )
   20:  Call  UseBattleCamPreset    ( 00000003 )
   30:  Call  802693F0 ( )
   3C:  Call  GetActorPos   ( .Actor:Player *Var0 *Var1 *Var2 )
   58:  Sub   *Var0  0000003C
   68:  Set   *Var1  00000000
   78:  Call  SetGoalPos    ( .Actor:Player *Var0 *Var1 *Var2 )
   94:  Call  SetJumpAnimations ( .Actor:Player 00000000 00010007 00010008 00010009 )
   B4:  Call  SetActorJumpGravity   ( .Actor:Player *Fixed[0.8] )
   C8:  Call  $Function_802A1000 ( )
   D4:  Call  80273444      ( *Var0 00000000 00000000 )
   EC:  Call  SetAnimation  ( .Actor:Player 00000000 00010009 )
  104:  Wait  1`
  110:  Call  AddGoalPos    ( .Actor:Player  -20`  0`  0` )
  12C:  Call  80273444      ( 00000006 00000000 00000002 )
  144:  Call  SetAnimation  ( .Actor:Player 00000000 00010009 )
  15C:  Wait  2`
  168:  Call  EnablePlayerBlur  ( FFFFFFFF )
  178:  Call  SetGoalToHome ( .Actor:Player )
  188:  Call  SetActorSpeed ( .Actor:Player *Fixed[8.0] )
  19C:  Call  SetAnimation  ( .Actor:Player 00000000 00010005 )
  1B4:  Call  PlayerRunToGoal   ( 00000000 )
  1C4:  Call  SetAnimation  ( .Actor:Player 00000000 00010002 )
  1DC:  Return
  1E4:  End
}

% Origin: HEURISTIC
#new:Script $Script_802A1E38
{
    0:  Call  80276EFC ( )
    C:  Call  SetBattleFlagBits ( 00000100 .False )
   20:  Call  EnablePlayerBlur  ( FFFFFFFF )
   30:  Call  UseBattleCamPreset    ( 00000003 )
   40:  Call  802693F0 ( )
   4C:  Call  SetGoalToHome     ( .Actor:Player )
   5C:  Call  GetGoalPos        ( .Actor:Player *Var0 *Var1 *Var2 )
   78:  Add   *Var0  0000003C
   88:  Set   *Var1  00000000
   98:  Call  SetGoalPos        ( .Actor:Player *Var0 *Var1 *Var2 )
   B4:  Call  SetActorJumpGravity   ( .Actor:Player *Fixed[1.0] )
   C8:  Call  SetJumpAnimations ( .Actor:Player 00000000 00010017 00010017 00010009 )
   E8:  Call  $Function_802A1000 ( )
   F4:  Call  80273444  ( *Var0 00000000 00000000 )
  10C:  ChildThread
  114:  	Call  ShakeCam  ( .Cam:Battle 00000000  4` *Fixed[1.0] )
  130:  EndChildThread
  138:  Call  AddGoalPos    ( .Actor:Player  -30`  0`  0` )
  154:  Call  80273444      ( 00000008 00000000 00000002 )
  16C:  ChildThread
  174:  	Call  ShakeCam  ( .Cam:Battle 00000000  4` *Fixed[1.0] )
  190:  EndChildThread
  198:  Call  AddGoalPos    ( .Actor:Player  -20`  0`  0` )
  1B4:  Call  SetGoalPos    ( .Actor:Player *Var0 *Var1 *Var2 )
  1D0:  Call  80273444      ( 00000006 00000000 00000002 )
  1E8:  ChildThread
  1F0:  	Call  ShakeCam  ( .Cam:Battle 00000000  4` *Fixed[1.0] )
  20C:  EndChildThread
  214:  Call  SetGoalToHome ( .Actor:Player )
  224:  Call  80273444      ( 00000004 00000000 00000002 )
  23C:  Call  SetAnimation  ( .Actor:Player 00000000 00010002 )
  254:  Return
  25C:  End
}

#new:Script $Script_802A209C
{
    0:  Call  SetJumpAnimations ( .Actor:Player 00000000 00000000 00000000 0001000C )
   20:  Call  PlayerLandJump ( )
   2C:  Call  SetAnimation      ( .Actor:Player 00000000 0001000C )
   44:  Wait  2`
   50:  ChildThread
   58:  	Call  ShakeCam  ( .Cam:Battle 00000000  5` *Fixed[1.0] )
   74:  EndChildThread
   7C:  Call  PlaySoundAtActor  ( .Actor:Player 00000162 )
   90:  Call  SetAnimation      ( .Actor:Player 00000000 00010030 )
   A8:  Wait  10`
   B4:  Call  SetAnimation      ( .Actor:Player 00000000 00010031 )
   CC:  Wait  20`
   D8:  Call  SetBattleFlagBits ( 00000100 .False )
   EC:  Call  UseBattleCamPreset    ( 00000003 )
   FC:  Call  802693F0 ( )
  108:  Call  EnablePlayerBlur  ( FFFFFFFF )
  118:  Call  80276EFC ( )
  124:  Call  SetGoalToHome     ( .Actor:Player )
  134:  Call  SetActorSpeed     ( .Actor:Player *Fixed[8.0] )
  148:  Call  SetAnimation      ( .Actor:Player 00000000 00010005 )
  160:  Call  PlayerRunToGoal   ( 00000000 )
  170:  Call  SetAnimation      ( .Actor:Player 00000000 00010002 )
  188:  Return
  190:  End
}

% Origin: HEURISTIC
#new:Script $Script_802A2234
{
    0:  Call  LoadActionCommand ( .ActionCommand:Jump )
   10:  Call  802A9000 ( )
   1C:  ExecWait  $Script_802A125C
   28:  ExecWait  $Script_802A13D0
   34:  Call  802A9120  ( *VarA 00000003 )
   48:  Call  UseBattleCamPreset    ( 00000022 )
   58:  Call  SetGoalToTarget   ( .Actor:Player )
   68:  Call  SetJumpAnimations ( .Actor:Player 00000000 00010007 00010008 00030000 )
   88:  Call  80274A18  ( *VarA 00000000 )
   9C:  Return
   A4:  End
}

% Origin: HEURISTIC
#new:Script $Script_802A22E0
{
    0:  Call  LoadActionCommand ( .ActionCommand:Jump )
   10:  Call  802A9000 ( )
   1C:  ExecWait  $Script_802A125C
   28:  Call  InitTargetIterator ( )
   34:  ExecWait  $Script_802A14B8
   40:  Set   *VarB  *VarA
   50:  Add   *VarB  0000000E
   60:  Add   *VarB  FFFFFFFD
   70:  Call  802A9120  ( *VarB 00000003 )
   84:  Call  UseBattleCamPreset    ( 00000025 )
   94:  Call  SetGoalToTarget   ( .Actor:Player )
   A4:  Call  SetJumpAnimations ( .Actor:Player 00000000 00010007 0001000A 0001000B )
   C4:  Call  802752AC  ( *VarA 00000000 )
   D8:  Wait  7`
   E4:  Call  DidActionSucceed  ( *Var0 )
   F4:  Switch  *Var0
  100:  	Case  >  .False
  10C:  		Call  802752AC  ( 00000003 00000001 )
  120:  	Default
  128:  		Call  802752AC  ( 00000005 00000001 )
  13C:  EndSwitch
  144:  Return
  14C:  End
}

% Origin: HEURISTIC
#new:Script $Script_802A2434
{
    0:  Call  LoadActionCommand ( .ActionCommand:Jump )
   10:  Call  802A9000 ( )
   1C:  ExecWait  $Script_802A125C
   28:  ExecWait  $Script_802A15A0
   34:  Call  8026919C  ( $???_802A11A0 )
   44:  Set   *VarB  *VarA
   54:  Sub   *VarB  00000004
   64:  Add   *VarB  FFFFFFFD
   74:  Call  802A9120  ( *VarB 00000003 )
   88:  Call  UseBattleCamPreset    ( 00000026 )
   98:  Call  SetGoalToTarget   ( .Actor:Player )
   A8:  Call  SetJumpAnimations ( .Actor:Player 00000000 00010007 00080000 00030000 )
   C8:  Call  80275F00  ( *VarA 00000000 )
   DC:  Call  CloseActionCommandInfo ( )
   E8:  Set   *Var9  00000000
   F8:  Call  DidActionSucceed  ( *Var0 )
  108:  If  *Var0  >  .False
  118:  	Set   *Var9  00000001
  128:  	Call  SetAnimation      ( .Actor:Player 00000000 00030000 )
  140:  	Call  SetActorRotation  ( .Actor:Self 00000000 00000000 00000000 )
  15C:  	Call  SetActorDispOffset    ( .Actor:Self 00000000 FFFFFFFE 00000000 )
  178:  	Wait  2`
  184:  	Call  SetActorDispOffset    ( .Actor:Self 00000000 00000000 00000000 )
  1A0:  	Call  LoadActionCommand ( .ActionCommand:Jump )
  1B0:  	Call  802A9000 ( )
  1BC:  	Call  802A9120  ( 0000000D 00000003 )
  1D0:  	Call  UseBattleCamPreset    ( 00000027 )
  1E0:  	Call  80275F00  ( 0000000F 00000002 )
  1F4:  	Goto  A
  200:  Else
  208:  	Call  LoadActionCommand ( .ActionCommand:Jump )
  218:  	Call  802A9000 ( )
  224:  	Call  802A9120  ( 00000002 00000003 )
  238:  	Call  80275F00  ( 00000004 00000001 )
  24C:  	Goto  A
  258:  EndIf
  260:  Label  A
  26C:  Return
  274:  End
}

#new:Unknown $???_802A26B0
{
	00000007 00000006 00000005 00000004 00000003 00000002 00000001 00000000
}

#new:Unknown $???_802A26D0
{
	000000C8 00000024 00000002 FBD3E28A 00000000
}

#new:Script_Use $Script_UseMove0
{
    0:  Call  802694A4  ( 00000001 )
   10:  Call  SetBattleFlagBits ( 00001000 .True )
   24:  Call  GetMenuSelection  ( *Var0 *Var1 *Var2 )
   3C:  Switch  *Var1
   48:  	Case  ==  .Item:Nothing % 0
   54:  		Set   *VarC  00000001
   64:  		ExecWait  $Script_802A27BC
   70:  	Case  ==  .Item:Jump % 1
   7C:  		Set   *VarC  00000002
   8C:  		ExecWait  $Script_802A2F7C
   98:  	Case  ==  .Item:SpinJump % 2
   A4:  		Set   *VarC  00000003
   B4:  		ExecWait  $Script_802A3750
   C0:  EndSwitch
   C8:  Return
   D0:  End
}

#new:Script $Script_802A27BC
{
    0:  Call  LoadActionCommand ( .ActionCommand:Jump )
   10:  Call  802A9000 ( )
   1C:  Call  8026919C  ( $???_802A26B0 )
   2C:  ExecWait  $Script_802A125C
   38:  ExecWait  $Script_802A13D0
   44:  Call  802A9120  ( *VarA 00000001 )
   58:  Call  UseBattleCamPreset    ( 00000022 )
   68:  Call  SetGoalToTarget   ( .Actor:Player )
   78:  Call  SetJumpAnimations ( .Actor:Player 00000000 00010007 00010008 00030000 )
   98:  Call  80274A18  ( *VarA 00000000 )
   AC:  Call  PlayerTestEnemy   ( *Var0 ~Flags:DamageType:Jump 00000000 00000000 00000001 00000000 )
   D0:  If  *Var0  ==  .HitResult:Miss % 6
   E0:  	ExecWait  $Script_802A209C
   EC:  	Return
   F4:  EndIf
   FC:  Wait  1`
  108:  Call  DidActionSucceed  ( *Var0 )
  118:  Switch  *Var0
  124:  	Case  >  .False
  130:  		Call  SetActorSounds    ( .Actor:Player .ActorSound:Hurt 0000015A 00000000 )
  14C:  		Call  PlayerDamageEnemy ( *Var0 ~Flags:DamageType:PowerBounce|Jump 00000000 00000000 *VarC 00000050 )
  170:  	Default
  178:  		Call  SetActorSounds    ( .Actor:Player .ActorSound:Hurt 0000015A 00000000 )
  194:  		Call  PlayerDamageEnemy ( *Var0 ~Flags:DamageType:PowerBounce|Jump 00000000 00000000 *VarC 00000030 )
  1B8:  EndSwitch
  1C0:  Switch  *Var0
  1CC:  	CaseOR  ==  .HitResult:Hit % 0
  1D8:  	CaseOR  ==  .HitResult:QuakeImmune % 2
  1E4:  		ExecWait  $Script_802A1A60
  1F0:  		Return
  1F8:  	EndCaseGroup
  200:  	CaseOR  ==  00000001 % 1
  20C:  	CaseOR  ==  00000003 % 3
  218:  	EndCaseGroup
  220:  EndSwitch
  228:  ChildThread
  230:  	Call  UseBattleCamPreset    ( 0000001B )
  240:  	Wait  5`
  24C:  	Call  SetGoalToTarget       ( .Actor:Player )
  25C:  	Call  UseBattleCamPreset    ( 00000023 )
  26C:  EndChildThread
  274:  Call  80269524  ( *VarE )
  284:  Set   *VarD  00000000
  294:  Set   *VarF  00000000
  2A4:  Set   *Flag[00]  .False
  2B4:  Label  A
  2C0:  ChildThread
  2C8:  	Call  UseBattleCamPreset    ( 0000001B )
  2D8:  	Wait  5`
  2E4:  	Call  SetGoalToTarget       ( .Actor:Player )
  2F4:  	Call  UseBattleCamPreset    ( 00000023 )
  304:  EndChildThread
  30C:  Call  CloseActionCommandInfo ( )
  318:  Call  8026919C  ( $???_802A26B0 )
  328:  Call  LoadActionCommand ( .ActionCommand:Jump )
  338:  Call  802A9000 ( )
  344:  Set   *VarA  00000018
  354:  Switch  *VarF
  360:  	Case  ==  00000000
  36C:  		Call  802A9120  ( *VarA 00000001 )
  380:  	Case  ==  00000001
  38C:  		Call  802A9120  ( *VarA 00000002 )
  3A0:  	Case  ==  00000002
  3AC:  		Call  802A9120  ( *VarA 00000003 )
  3C0:  	Case  ==  00000003
  3CC:  		Call  802A9120  ( *VarA 00000004 )
  3E0:  	Default
  3E8:  		Call  802A9120  ( *VarA 00000005 )
  3FC:  EndSwitch
  404:  Sub   *VarD  00000001
  414:  Call  SetJumpAnimations ( .Actor:Player 00000000 00010007 00010008 0001000C )
  434:  Call  SetGoalToTarget   ( .Actor:Player )
  444:  If  *VarF  ==  00000000
  454:  	Call  80274A18  ( 00000018 00000003 )
  468:  Else
  470:  	Call  80274A18  ( 00000018 00000004 )
  484:  EndIf
  48C:  Call  SetCommandAutoSuccess ( *Var1 )
  49C:  If  *Var1  ==  00000001
  4AC:  	If  *VarF  >=  00000003
  4BC:  		Set   *Flag[00]  .True
  4CC:  	EndIf
  4D4:  EndIf
  4DC:  Call  $Function_802A10E4 ( )
  4E8:  If  *VarF  >=  *Var0
  4F8:  	Set   *Flag[00]  .True
  508:  EndIf
  510:  Wait  1`
  51C:  Call  DidActionSucceed  ( *Var0 )
  52C:  Switch  *Var0
  538:  	Case  >  .False
  544:  		If  *Flag[00]  ==  .False
  554:  			Call  SetActorSounds    ( .Actor:Player .ActorSound:Hurt 0000015A 00000000 )
  570:  			Call  PlayerPowerBounceEnemy    ( *Var0 ~Flags:DamageType:PowerBounce|Jump 00000000 00000000 *VarC *VarD 00000040 )
  598:  		Else
  5A0:  			Call  SetActorSounds    ( .Actor:Player .ActorSound:Hurt 0000015A 00000000 )
  5BC:  			Call  PlayerPowerBounceEnemy    ( *Var0 ~Flags:DamageType:PowerBounce|Jump 00000000 00000000 *VarC *VarD 000000E0 )
  5E4:  		EndIf
  5EC:  	Default
  5F4:  		Call  SetActorSounds    ( .Actor:Player .ActorSound:Hurt 0000015A 00000000 )
  610:  		Call  PlayerPowerBounceEnemy    ( *Var0 ~Flags:DamageType:PowerBounce|Jump 00000000 00000000 *VarC *VarD 00000020 )
  638:  EndSwitch
  640:  Switch  *VarF
  64C:  	Case  ==  00000000
  658:  		Call  PlaySoundAtActor  ( .Actor:Player 00000235 )
  66C:  	Case  ==  00000001
  678:  		Call  PlaySoundAtActor  ( .Actor:Player 00000236 )
  68C:  	Case  ==  00000002
  698:  		Call  PlaySoundAtActor  ( .Actor:Player 00000237 )
  6AC:  	Case  ==  00000003
  6B8:  		Call  PlaySoundAtActor  ( .Actor:Player 00000238 )
  6CC:  	Default
  6D4:  		Call  PlaySoundAtActor  ( .Actor:Player 00000238 )
  6E8:  EndSwitch
  6F0:  Call  80269550  ( *VarE )
  700:  Switch  *Var0
  70C:  	CaseOR  ==  .HitResult:Hit % 0
  718:  	CaseOR  ==  .HitResult:QuakeImmune % 2
  724:  		ExecWait  $Script_802A1A60
  730:  		Return
  738:  	EndCaseGroup
  740:  	CaseOR  ==  00000001 % 1
  74C:  	CaseOR  ==  00000003 % 3
  758:  		If  *Flag[00]  ==  .True
  768:  			ExecWait  $Script_802A1688
  774:  			Return
  77C:  		EndIf
  784:  	EndCaseGroup
  78C:  EndSwitch
  794:  Add   *VarF  00000001
  7A4:  Goto  A
  7B0:  Return
  7B8:  End
}

#new:Script $Script_802A2F7C
{
    0:  Call  LoadActionCommand ( .ActionCommand:Jump )
   10:  Call  802A9000 ( )
   1C:  Call  8026919C  ( $???_802A26B0 )
   2C:  ExecWait  $Script_802A125C
   38:  ExecWait  $Script_802A13D0
   44:  Call  802A9120  ( *VarA 00000001 )
   58:  Call  UseBattleCamPreset    ( 00000022 )
   68:  Call  SetGoalToTarget   ( .Actor:Player )
   78:  Call  SetJumpAnimations ( .Actor:Player 00000000 00010007 00010008 00030000 )
   98:  Call  80274A18  ( *VarA 00000000 )
   AC:  Call  PlayerTestEnemy   ( *Var0 ~Flags:DamageType:Jump 00000000 00000000 00000001 00000000 )
   D0:  If  *Var0  ==  .HitResult:Miss % 6
   E0:  	ExecWait  $Script_802A209C
   EC:  	Return
   F4:  EndIf
   FC:  Wait  1`
  108:  Call  DidActionSucceed  ( *Var0 )
  118:  Switch  *Var0
  124:  	Case  >  .False
  130:  		Call  SetActorSounds    ( .Actor:Player .ActorSound:Hurt 0000015B 00000000 )
  14C:  		Call  PlayerDamageEnemy ( *Var0 ~Flags:DamageType:PowerBounce|Jump 00000000 00000000 *VarC 00000050 )
  170:  	Default
  178:  		Call  SetActorSounds    ( .Actor:Player .ActorSound:Hurt 0000015B 00000000 )
  194:  		Call  PlayerDamageEnemy ( *Var0 ~Flags:DamageType:PowerBounce|Jump 00000000 00000000 *VarC 00000030 )
  1B8:  EndSwitch
  1C0:  Switch  *Var0
  1CC:  	CaseOR  ==  .HitResult:Hit % 0
  1D8:  	CaseOR  ==  .HitResult:QuakeImmune % 2
  1E4:  		ExecWait  $Script_802A1A60
  1F0:  		Return
  1F8:  	EndCaseGroup
  200:  	CaseOR  ==  00000001 % 1
  20C:  	CaseOR  ==  00000003 % 3
  218:  	EndCaseGroup
  220:  EndSwitch
  228:  Call  80269524  ( *VarE )
  238:  Set   *VarD  00000000
  248:  Set   *VarF  00000000
  258:  Set   *Flag[00]  .False
  268:  Label  A
  274:  ChildThread
  27C:  	Call  UseBattleCamPreset    ( 0000001B )
  28C:  	Wait  5`
  298:  	Call  SetGoalToTarget       ( .Actor:Player )
  2A8:  	Call  UseBattleCamPreset    ( 00000023 )
  2B8:  EndChildThread
  2C0:  Call  CloseActionCommandInfo ( )
  2CC:  Call  8026919C  ( $???_802A26B0 )
  2DC:  Call  LoadActionCommand ( .ActionCommand:Jump )
  2EC:  Call  802A9000 ( )
  2F8:  Set   *VarA  00000025
  308:  Switch  *VarF
  314:  	Case  ==  00000000
  320:  		Call  802A9120  ( *VarA 00000001 )
  334:  	Case  ==  00000001
  340:  		Call  802A9120  ( *VarA 00000002 )
  354:  	Case  ==  00000002
  360:  		Call  802A9120  ( *VarA 00000003 )
  374:  	Case  ==  00000003
  380:  		Call  802A9120  ( *VarA 00000004 )
  394:  	Default
  39C:  		Call  802A9120  ( *VarA 00000005 )
  3B0:  EndSwitch
  3B8:  Sub   *VarD  00000001
  3C8:  Call  SetGoalToTarget   ( .Actor:Player )
  3D8:  Call  SetJumpAnimations ( .Actor:Player 00000000 00010007 0001000A 0001000B )
  3F8:  Call  EnablePlayerBlur  ( 00000001 )
  408:  If  *VarF  ==  00000000
  418:  	Call  802752AC  ( 00000014 00000003 )
  42C:  	Wait  7`
  438:  	Call  802752AC  ( 00000003 00000006 )
  44C:  Else
  454:  	Call  802752AC  ( 00000014 00000004 )
  468:  	Wait  7`
  474:  	Call  802752AC  ( 00000003 00000005 )
  488:  EndIf
  490:  Call  EnablePlayerBlur      ( 00000000 )
  4A0:  Call  SetCommandAutoSuccess ( *Var1 )
  4B0:  If  *Var1  ==  00000001
  4C0:  	If  *VarF  >  00000003
  4D0:  		Set   *Flag[00]  .True
  4E0:  	EndIf
  4E8:  EndIf
  4F0:  Call  $Function_802A10E4 ( )
  4FC:  If  *VarF  >  *Var0
  50C:  	Set   *Flag[00]  .True
  51C:  EndIf
  524:  Wait  1`
  530:  Call  DidActionSucceed  ( *Var0 )
  540:  Switch  *Var0
  54C:  	Case  >  .False
  558:  		If  *Flag[00]  ==  .False
  568:  			Call  SetActorSounds    ( .Actor:Player .ActorSound:Hurt 0000015B 00000000 )
  584:  			Call  PlayerPowerBounceEnemy    ( *Var0 ~Flags:DamageType:PowerBounce|Jump 00000000 00000000 *VarC *VarD 00000040 )
  5AC:  		Else
  5B4:  			Call  SetActorSounds    ( .Actor:Player .ActorSound:Hurt 0000015B 00000000 )
  5D0:  			Call  PlayerPowerBounceEnemy    ( *Var0 ~Flags:DamageType:PowerBounce|Jump 00000000 00000000 *VarC *VarD 000000E0 )
  5F8:  		EndIf
  600:  	Default
  608:  		Call  SetActorSounds    ( .Actor:Player .ActorSound:Hurt 0000015B 00000000 )
  624:  		Call  PlayerPowerBounceEnemy    ( *Var0 ~Flags:DamageType:PowerBounce|Jump 00000000 00000000 *VarC *VarD 00000020 )
  64C:  EndSwitch
  654:  Switch  *VarF
  660:  	Case  ==  00000000
  66C:  		Call  PlaySoundAtActor  ( .Actor:Player 00000235 )
  680:  	Case  ==  00000001
  68C:  		Call  PlaySoundAtActor  ( .Actor:Player 00000236 )
  6A0:  	Case  ==  00000002
  6AC:  		Call  PlaySoundAtActor  ( .Actor:Player 00000237 )
  6C0:  	Case  ==  00000003
  6CC:  		Call  PlaySoundAtActor  ( .Actor:Player 00000238 )
  6E0:  	Default
  6E8:  		Call  PlaySoundAtActor  ( .Actor:Player 00000238 )
  6FC:  EndSwitch
  704:  Call  80269550  ( *VarE )
  714:  Switch  *Var0
  720:  	CaseOR  ==  .HitResult:Hit % 0
  72C:  	CaseOR  ==  .HitResult:QuakeImmune % 2
  738:  		ExecWait  $Script_802A1A60
  744:  		Return
  74C:  	EndCaseGroup
  754:  	CaseOR  ==  00000001 % 1
  760:  	CaseOR  ==  00000003 % 3
  76C:  		If  *Flag[00]  ==  .True
  77C:  			ExecWait  $Script_802A1688
  788:  			Return
  790:  		EndIf
  798:  	EndCaseGroup
  7A0:  EndSwitch
  7A8:  Add   *VarF  00000001
  7B8:  Goto  A
  7C4:  Return
  7CC:  End
}

#new:Script $Script_802A3750
{
    0:  Call  LoadActionCommand ( .ActionCommand:Jump )
   10:  Call  802A9000 ( )
   1C:  Call  8026919C  ( $???_802A26B0 )
   2C:  ExecWait  $Script_802A125C
   38:  ExecWait  $Script_802A13D0
   44:  Call  802A9120  ( *VarA 00000001 )
   58:  Call  UseBattleCamPreset    ( 00000022 )
   68:  Call  SetGoalToTarget   ( .Actor:Player )
   78:  Call  SetJumpAnimations ( .Actor:Player 00000000 00010007 00010008 00030000 )
   98:  Call  80274A18  ( *VarA 00000000 )
   AC:  Call  PlayerTestEnemy   ( *Var0 ~Flags:DamageType:Jump 00000000 00000000 00000001 00000000 )
   D0:  If  *Var0  ==  .HitResult:Miss % 6
   E0:  	ExecWait  $Script_802A209C
   EC:  	Return
   F4:  EndIf
   FC:  Wait  1`
  108:  Call  DidActionSucceed  ( *Var0 )
  118:  Switch  *Var0
  124:  	Case  >  .False
  130:  		Call  SetActorSounds    ( .Actor:Player .ActorSound:Hurt 0000015C 00000000 )
  14C:  		Call  PlayerDamageEnemy ( *Var0 ~Flags:DamageType:PowerBounce|Jump 00000000 00000000 *VarC 00000050 )
  170:  	Default
  178:  		Call  SetActorSounds    ( .Actor:Player .ActorSound:Hurt 0000015C 00000000 )
  194:  		Call  PlayerDamageEnemy ( *Var0 ~Flags:DamageType:PowerBounce|Jump 00000000 00000000 *VarC 00000030 )
  1B8:  EndSwitch
  1C0:  Switch  *Var0
  1CC:  	CaseOR  ==  .HitResult:Hit % 0
  1D8:  	CaseOR  ==  .HitResult:QuakeImmune % 2
  1E4:  		ExecWait  $Script_802A1A60
  1F0:  		Return
  1F8:  	EndCaseGroup
  200:  	CaseOR  ==  00000001 % 1
  20C:  	CaseOR  ==  00000003 % 3
  218:  	EndCaseGroup
  220:  EndSwitch
  228:  Call  80269524  ( *VarE )
  238:  Set   *VarD  00000000
  248:  Set   *VarF  00000000
  258:  Set   *Flag[00]  .False
  268:  Label  A
  274:  ChildThread
  27C:  	Call  UseBattleCamPreset    ( 0000001C )
  28C:  	Wait  5`
  298:  	Call  SetGoalToTarget       ( .Actor:Player )
  2A8:  	Call  UseBattleCamPreset    ( 00000023 )
  2B8:  EndChildThread
  2C0:  Call  CloseActionCommandInfo ( )
  2CC:  Call  8026919C  ( $???_802A26B0 )
  2DC:  Call  LoadActionCommand ( .ActionCommand:Jump )
  2EC:  Call  802A9000 ( )
  2F8:  Set   *VarA  00000019
  308:  Switch  *VarF
  314:  	Case  ==  00000000
  320:  		Call  802A9120  ( *VarA 00000001 )
  334:  	Case  ==  00000001
  340:  		Call  802A9120  ( *VarA 00000002 )
  354:  	Case  ==  00000002
  360:  		Call  802A9120  ( *VarA 00000003 )
  374:  	Case  ==  00000003
  380:  		Call  802A9120  ( *VarA 00000004 )
  394:  	Default
  39C:  		Call  802A9120  ( *VarA 00000005 )
  3B0:  EndSwitch
  3B8:  Sub   *VarD  00000001
  3C8:  Call  SetGoalToTarget   ( .Actor:Player )
  3D8:  Call  EnablePlayerBlur  ( 00000001 )
  3E8:  Call  SetJumpAnimations ( .Actor:Player 00000000 00010007 00010007 0001000C )
  408:  If  *VarF  ==  00000000
  418:  	Call  80275F00  ( 00000019 00000002 )
  42C:  Else
  434:  	Call  80275F00  ( 00000019 00000004 )
  448:  EndIf
  450:  Call  EnablePlayerBlur      ( 00000000 )
  460:  Call  SetCommandAutoSuccess ( *Var1 )
  470:  If  *Var1  ==  00000001
  480:  	If  *VarF  >  00000003
  490:  		Set   *Flag[00]  .True
  4A0:  	EndIf
  4A8:  EndIf
  4B0:  Call  $Function_802A10E4 ( )
  4BC:  If  *VarF  >  *Var0
  4CC:  	Set   *Flag[00]  .True
  4DC:  EndIf
  4E4:  Wait  1`
  4F0:  Call  DidActionSucceed  ( *Var0 )
  500:  Switch  *Var0
  50C:  	Case  >  .False
  518:  		If  *Flag[00]  ==  .False
  528:  			Call  SetActorSounds    ( .Actor:Player .ActorSound:Hurt 0000015C 00000000 )
  544:  			Call  PlayerPowerBounceEnemy    ( *Var0 ~Flags:DamageType:PowerBounce|Jump 00000000 00000000 *VarC *VarD 00000040 )
  56C:  		Else
  574:  			Call  SetActorSounds    ( .Actor:Player .ActorSound:Hurt 0000015C 00000000 )
  590:  			Call  PlayerPowerBounceEnemy    ( *Var0 ~Flags:DamageType:PowerBounce|Jump 00000000 00000000 *VarC *VarD 000000E0 )
  5B8:  		EndIf
  5C0:  	Default
  5C8:  		Call  SetActorSounds    ( .Actor:Player .ActorSound:Hurt 0000015C 00000000 )
  5E4:  		Call  PlayerPowerBounceEnemy    ( *Var0 ~Flags:DamageType:PowerBounce|Jump 00000000 00000000 *VarC *VarD 00000020 )
  60C:  EndSwitch
  614:  Switch  *VarF
  620:  	Case  ==  00000000
  62C:  		Call  PlaySoundAtActor  ( .Actor:Player 00000235 )
  640:  	Case  ==  00000001
  64C:  		Call  PlaySoundAtActor  ( .Actor:Player 00000236 )
  660:  	Case  ==  00000002
  66C:  		Call  PlaySoundAtActor  ( .Actor:Player 00000237 )
  680:  	Case  ==  00000003
  68C:  		Call  PlaySoundAtActor  ( .Actor:Player 00000238 )
  6A0:  	Default
  6A8:  		Call  PlaySoundAtActor  ( .Actor:Player 00000238 )
  6BC:  EndSwitch
  6C4:  Call  80269550  ( *VarE )
  6D4:  Switch  *Var0
  6E0:  	CaseOR  ==  .HitResult:Hit % 0
  6EC:  	CaseOR  ==  .HitResult:QuakeImmune % 2
  6F8:  		ExecWait  $Script_802A1A60
  704:  		Return
  70C:  	EndCaseGroup
  714:  	CaseOR  ==  00000001 % 1
  720:  	CaseOR  ==  00000003 % 3
  72C:  		If  *Flag[00]  ==  .True
  73C:  			ExecWait  $Script_802A1688
  748:  			Return
  750:  		EndIf
  758:  	EndCaseGroup
  760:  EndSwitch
  768:  Add   *VarF  00000001
  778:  Goto  A
  784:  Return
  78C:  End
}

PADDING: 802A3EE4 to 802A3EF0 (0077CB74 to 0077CB80)
00000000 00000000 00000000

