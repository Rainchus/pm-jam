% Script File: 25 Area KPA4.bscr
% Decoded from: 6CC070 to 6DBDA0 (25 Area KPA4)

#new:Function $Function_80218000
{
    0:  LA        V0, $SpecialFormation_80218DF4
    8:  LI        V1, 1
    C:  SW        V1, C (V0)
   10:  LW        V1, 148 (A0)
   14:  SW        V1, 10 (V0)
   18:  JR        RA
   1C:  LI        V0, 2
}

#new:Function $Function_80218020
{
    0:  ADDIU     SP, SP, FFD8
    4:  SW        S1, 14 (SP)
    8:  COPY      S1, A0
    C:  SW        RA, 20 (SP)
   10:  SW        S3, 1C (SP)
   14:  SW        S2, 18 (SP)
   18:  SW        S0, 10 (SP)
   1C:  LW        S0, C (S1)
   20:  LW        A1, 0 (S0)
   24:  JAL       ~Func:get_variable
   28:  ADDIU     S0, S0, 4
   2C:  LW        A1, 0 (S0)
   30:  ADDIU     S0, S0, 4
   34:  COPY      A0, S1
   38:  JAL       ~Func:get_variable
   3C:  COPY      S3, V0
   40:  LW        A1, 0 (S0)
   44:  ADDIU     S0, S0, 4
   48:  COPY      A0, S1
   4C:  JAL       ~Func:get_variable
   50:  COPY      S2, V0
   54:  COPY      A0, S1
   58:  LW        A1, 0 (S0)
   5C:  JAL       ~Func:get_variable
   60:  COPY      S0, V0
   64:  LW        A0, 148 (S1)
   68:  JAL       ~Func:get_actor
   6C:  COPY      S1, V0
   70:  COPY      V1, V0
   74:  LW        V0, 8 (V1)
   78:  LBU       V0, 24 (V0)
   7C:  LW        A0, 8 (V1)
   80:  SUBU      S3, S3, V0
   84:  SB        S3, 194 (V1)
   88:  LBU       V0, 25 (A0)
   8C:  SUBU      S2, S2, V0
   90:  SB        S2, 195 (V1)
   94:  LBU       V0, 26 (A0)
   98:  SUBU      S0, S0, V0
   9C:  SB        S0, 196 (V1)
   A0:  LBU       A0, 27 (A0)
   A4:  SUBU      S1, S1, A0
   A8:  SB        S1, 197 (V1)
   AC:  LW        RA, 20 (SP)
   B0:  LW        S3, 1C (SP)
   B4:  LW        S2, 18 (SP)
   B8:  LW        S1, 14 (SP)
   BC:  LW        S0, 10 (SP)
   C0:  LI        V0, 2
   C4:  JR        RA
   C8:  ADDIU     SP, SP, 28
}

#new:Function $Function_802180EC
{
    0:  ADDIU     SP, SP, FFE0
    4:  SW        S1, 14 (SP)
    8:  COPY      S1, A0
    C:  SW        RA, 18 (SP)
   10:  SW        S0, 10 (SP)
   14:  LW        S0, C (S1)
   18:  LW        A1, 0 (S0)
   1C:  JAL       ~Func:get_variable
   20:  ADDIU     S0, S0, 4
   24:  COPY      A0, S1
   28:  LW        A1, 0 (S0)
   2C:  JAL       ~Func:get_variable
   30:  COPY      S0, V0
   34:  COPY      A0, S0
   38:  JAL       ~Func:start_rumble
   3C:  COPY      A1, V0
   40:  LW        RA, 18 (SP)
   44:  LW        S1, 14 (SP)
   48:  LW        S0, 10 (SP)
   4C:  LI        V0, 2
   50:  JR        RA
   54:  ADDIU     SP, SP, 20
}

PADDING: 80218144 to 80218150 (006CC1B4 to 006CC1C0)
00000000 00000000 00000000

% Origin: HINT
#new:Function $Function_80218150
{
    0:  ADDIU     SP, SP, FFA0
    4:  SW        S1, 24 (SP)
    8:  COPY      S1, A0
    C:  SW        RA, 28 (SP)
   10:  SW        S0, 20 (SP)
   14:  SDC1      F30, 58 (SP)
   18:  SDC1      F28, 50 (SP)
   1C:  SDC1      F26, 48 (SP)
   20:  SDC1      F24, 40 (SP)
   24:  SDC1      F22, 38 (SP)
   28:  SDC1      F20, 30 (SP)
   2C:  LW        S0, C (S1)
   30:  LW        A1, 0 (S0)
   34:  JAL       ~Func:get_float_variable
   38:  ADDIU     S0, S0, 4
   3C:  LW        A1, 0 (S0)
   40:  ADDIU     S0, S0, 4
   44:  COPY      A0, S1
   48:  JAL       ~Func:get_float_variable
   4C:  MOV.S     F30, F0
   50:  LW        A1, 0 (S0)
   54:  ADDIU     S0, S0, 4
   58:  COPY      A0, S1
   5C:  JAL       ~Func:get_float_variable
   60:  MOV.S     F20, F0
   64:  LW        A1, 0 (S0)
   68:  ADDIU     S0, S0, 4
   6C:  COPY      A0, S1
   70:  JAL       ~Func:get_float_variable
   74:  MOV.S     F28, F0
   78:  LW        A1, 0 (S0)
   7C:  ADDIU     S0, S0, 4
   80:  COPY      A0, S1
   84:  JAL       ~Func:get_float_variable
   88:  MOV.S     F26, F0
   8C:  LW        A1, 0 (S0)
   90:  ADDIU     S0, S0, 4
   94:  COPY      A0, S1
   98:  JAL       ~Func:get_float_variable
   9C:  MOV.S     F24, F0
   A0:  COPY      A0, S1
   A4:  LW        A1, 0 (S0)
   A8:  JAL       ~Func:get_variable
   AC:  MOV.S     F22, F0
   B0:  LW        A0, 148 (S1)
   B4:  JAL       ~Func:get_actor
   B8:  COPY      S0, V0
   BC:  CVT.D.S   F20, F20
   C0:  MFC1      A1, F30
   C4:  LIF       F1, 2.3125
   CC:  MTC1      R0, F0
   D0:  MFC1      A3, F28
   D4:  ADD.D     F20, F20, F0
   D8:  CLEAR     A0
   DC:  SW        S0, 1C (SP)
   E0:  CVT.S.D   F20, F20
   E4:  MFC1      A2, F20
   E8:  COPY      S0, V0
   EC:  SWC1      F26, 10 (SP)
   F0:  SWC1      F24, 14 (SP)
   F4:  JAL       ~Func:playFX_12
   F8:  SWC1      F22, 18 (SP)
   FC:  COPY      A0, V0
  100:  LB        V1, 210 (S0)
  104:  LI        V0, A
  108:  BNE       V1, V0, .o128
  10C:  NOP
  110:  LW        V0, C (A0)
  114:  LIF       F0, 0.39804688
  120:  NOP
  124:  SWC1      F0, 28 (V0)
        .o128
  128:  LW        RA, 28 (SP)
  12C:  LW        S1, 24 (SP)
  130:  LW        S0, 20 (SP)
  134:  LDC1      F30, 58 (SP)
  138:  LDC1      F28, 50 (SP)
  13C:  LDC1      F26, 48 (SP)
  140:  LDC1      F24, 40 (SP)
  144:  LDC1      F22, 38 (SP)
  148:  LDC1      F20, 30 (SP)
  14C:  LI        V0, 2
  150:  JR        RA
  154:  ADDIU     SP, SP, 60
}

% Origin: HINT
#new:Function $Function_802182A8
{
    0:  ADDIU     SP, SP, FFB8
    4:  SW        S2, 18 (SP)
    8:  COPY      S2, A0
    C:  SW        RA, 28 (SP)
   10:  SW        S5, 24 (SP)
   14:  SW        S4, 20 (SP)
   18:  SW        S3, 1C (SP)
   1C:  SW        S1, 14 (SP)
   20:  SW        S0, 10 (SP)
   24:  SDC1      F24, 40 (SP)
   28:  SDC1      F22, 38 (SP)
   2C:  SDC1      F20, 30 (SP)
   30:  LW        S0, C (S2)
   34:  LW        S4, 0 (S0)
   38:  ADDIU     S0, S0, 4
   3C:  JAL       ~Func:get_variable
   40:  COPY      A1, S4
   44:  COPY      S3, V0
   48:  LW        S5, 0 (S0)
   4C:  ADDIU     S0, S0, 4
   50:  LW        A1, 0 (S0)
   54:  ADDIU     S0, S0, 4
   58:  JAL       ~Func:get_float_variable
   5C:  COPY      A0, S2
   60:  LW        A1, 0 (S0)
   64:  ADDIU     S0, S0, 4
   68:  COPY      A0, S2
   6C:  JAL       ~Func:get_float_variable
   70:  MOV.S     F24, F0
   74:  LW        A1, 0 (S0)
   78:  ADDIU     S0, S0, 4
   7C:  COPY      A0, S2
   80:  JAL       ~Func:get_variable
   84:  MOV.S     F20, F0
   88:  LW        A1, 0 (S0)
   8C:  ADDIU     S0, S0, 4
   90:  COPY      A0, S2
   94:  JAL       ~Func:get_variable
   98:  COPY      S1, V0
   9C:  COPY      A0, S2
   A0:  LW        A1, 0 (S0)
   A4:  JAL       ~Func:get_float_variable
   A8:  COPY      S0, V0
   AC:  LIF       F2, 180.0
   B4:  LIF       F4, 3.141592
   C0:  DIV.S     F0, F0, F2
   C4:  MUL.S     F22, F0, F4
   C8:  NOP
   CC:  SUB.S     F20, F20, F24
   D0:  LIF       F0, 0.5
   D8:  NOP
   DC:  MUL.S     F20, F20, F0
   E0:  NOP
   E4:  BEQ       S0, R0, .o104
   E8:  SLT       V0, S1, S3
   EC:  BEQ       V0, R0, .o104
   F0:  COPY      A0, S2
   F4:  COPY      S3, S1
   F8:  COPY      A1, S4
   FC:  JAL       ~Func:set_variable
  100:  COPY      A2, S1
        .o104
  104:  LIF       F0, 3.141592
  110:  MTC1      S3, F12
  114:  NOP
  118:  CVT.S.W   F12, F12
  11C:  MUL.S     F12, F12, F0
  120:  NOP
  124:  MTC1      S1, F0
  128:  NOP
  12C:  CVT.S.W   F0, F0
  130:  DIV.S     F12, F12, F0
  134:  JAL       ~Func:cos_rad
  138:  ADD.S     F12, F12, F22
  13C:  MUL.S     F0, F20, F0
  140:  NOP
  144:  ADD.S     F2, F24, F20
  148:  SUB.S     F2, F2, F0
  14C:  COPY      A0, S2
  150:  MFC1      A2, F2
  154:  JAL       ~Func:set_float_variable
  158:  COPY      A1, S5
  15C:  LW        RA, 28 (SP)
  160:  LW        S5, 24 (SP)
  164:  LW        S4, 20 (SP)
  168:  LW        S3, 1C (SP)
  16C:  LW        S2, 18 (SP)
  170:  LW        S1, 14 (SP)
  174:  LW        S0, 10 (SP)
  178:  LDC1      F24, 40 (SP)
  17C:  LDC1      F22, 38 (SP)
  180:  LDC1      F20, 30 (SP)
  184:  LI        V0, 2
  188:  JR        RA
  18C:  ADDIU     SP, SP, 48
}

% Origin: HINT
#new:Function $Function_80218438
{
    0:  ADDIU     SP, SP, FFE8
    4:  SW        RA, 10 (SP)
    8:  LW        V0, C (A0)
    C:  LAH       A2, 800DC1EC
   14:  JAL       ~Func:set_variable
   18:  LW        A1, 0 (V0)
   1C:  LW        RA, 10 (SP)
   20:  LI        V0, 2
   24:  JR        RA
   28:  ADDIU     SP, SP, 18
}

% Origin: HINT
#new:Function $Function_80218464
{
    0:  ADDIU     SP, SP, FFD8
    4:  SW        S1, 14 (SP)
    8:  COPY      S1, A0
    C:  SW        RA, 20 (SP)
   10:  SW        S3, 1C (SP)
   14:  SW        S2, 18 (SP)
   18:  SW        S0, 10 (SP)
   1C:  LW        S0, C (S1)
   20:  LW        A1, 0 (S0)
   24:  JAL       ~Func:get_variable
   28:  ADDIU     S0, S0, 4
   2C:  LW        A1, 0 (S0)
   30:  ADDIU     S0, S0, 4
   34:  COPY      A0, S1
   38:  JAL       ~Func:get_variable
   3C:  COPY      S3, V0
   40:  LW        A1, 0 (S0)
   44:  ADDIU     S0, S0, 4
   48:  COPY      A0, S1
   4C:  JAL       ~Func:get_variable
   50:  COPY      S2, V0
   54:  COPY      A0, S1
   58:  LW        A1, 0 (S0)
   5C:  JAL       ~Func:get_variable
   60:  COPY      S0, V0
   64:  LW        A0, 148 (S1)
   68:  JAL       ~Func:get_actor
   6C:  COPY      S1, V0
   70:  COPY      V1, V0
   74:  LW        V0, 8 (V1)
   78:  LBU       V0, 24 (V0)
   7C:  LW        A0, 8 (V1)
   80:  SUBU      S3, S3, V0
   84:  SB        S3, 194 (V1)
   88:  LBU       V0, 25 (A0)
   8C:  SUBU      S2, S2, V0
   90:  SB        S2, 195 (V1)
   94:  LBU       V0, 26 (A0)
   98:  SUBU      S0, S0, V0
   9C:  SB        S0, 196 (V1)
   A0:  LBU       A0, 27 (A0)
   A4:  SUBU      S1, S1, A0
   A8:  SB        S1, 197 (V1)
   AC:  LW        RA, 20 (SP)
   B0:  LW        S3, 1C (SP)
   B4:  LW        S2, 18 (SP)
   B8:  LW        S1, 14 (SP)
   BC:  LW        S0, 10 (SP)
   C0:  LI        V0, 2
   C4:  JR        RA
   C8:  ADDIU     SP, SP, 28
}

% Origin: HINT
#new:Function $Function_80218530
{
    0:  ADDIU     SP, SP, FFE0
    4:  SW        S1, 14 (SP)
    8:  COPY      S1, A0
    C:  SW        RA, 18 (SP)
   10:  SW        S0, 10 (SP)
   14:  LW        S0, C (S1)
   18:  LW        A1, 0 (S0)
   1C:  JAL       ~Func:get_variable
   20:  ADDIU     S0, S0, 4
   24:  COPY      A0, S1
   28:  LW        A1, 0 (S0)
   2C:  JAL       ~Func:get_variable
   30:  COPY      S0, V0
   34:  COPY      A0, S0
   38:  JAL       ~Func:start_rumble
   3C:  COPY      A1, V0
   40:  LW        RA, 18 (SP)
   44:  LW        S1, 14 (SP)
   48:  LW        S0, 10 (SP)
   4C:  LI        V0, 2
   50:  JR        RA
   54:  ADDIU     SP, SP, 20
}

% Origin: HINT
#new:Function $Function_80218588
{
    0:  ADDIU     SP, SP, FFE0
    4:  SW        S1, 14 (SP)
    8:  COPY      S1, A0
    C:  SW        RA, 18 (SP)
   10:  SW        S0, 10 (SP)
   14:  LW        S0, C (S1)
   18:  LW        A1, 0 (S0)
   1C:  JAL       ~Func:get_variable
   20:  ADDIU     S0, S0, 4
   24:  COPY      A0, V0
   28:  LI        V0, FF81
   2C:  BNE       A0, V0, .o38
   30:  NOP
   34:  LW        A0, 148 (S1)
        .o38
   38:  JAL       ~Func:get_actor
   3C:  NOP
   40:  COPY      A0, V0
   44:  LBU       V1, 136 (A0)
   48:  LI        V0, 47
   4C:  BEQ       V1, V0, .o7C
   50:  SLT       V0, V1, V0
   54:  BNEL      V0, R0, .o9C
   58:  COPY      A0, S1
   5C:  SLTI      V0, V1, 65
   60:  BEQ       V0, R0, .o98
   64:  SLTI      V0, V1, 4D
   68:  BNE       V0, R0, .o9C
   6C:  COPY      A0, S1
   70:  LW        A1, 0 (S0)
   74:  BEQ       R0, R0, .oA4
   78:  LI        A2, FFFF
        .o7C
   7C:  LW        V1, A8 (A0)
   80:  LI        V0, 1
   84:  BNE       V1, V0, .o9C
   88:  COPY      A0, S1
   8C:  LW        A1, 0 (S0)
   90:  BEQ       R0, R0, .oA4
   94:  LI        A2, FFFF
        .o98
   98:  COPY      A0, S1
        .o9C
   9C:  LW        A1, 0 (S0)
   A0:  CLEAR     A2
        .oA4
   A4:  JAL       ~Func:set_variable
   A8:  NOP
   AC:  LW        RA, 18 (SP)
   B0:  LW        S1, 14 (SP)
   B4:  LW        S0, 10 (SP)
   B8:  LI        V0, 2
   BC:  JR        RA
   C0:  ADDIU     SP, SP, 20
}

PADDING: 8021864C to 80218650 (006CC6BC to 006CC6C0)
00000000

#new:DefenseTable $DefenseTable_80218650
{
	.Element:Normal 00000004
	.Element:End
}

#new:StatusTable $StatusTable_8021865C
{
	.Status:Normal      0`
	.Status:Default     0`
	.Status:Sleep       0`
	.Status:Poison      0`
	.Status:Frozen      0`
	.Status:Dizzy       0`
	.Status:Fear        0`
	.Status:Static      0`
	.Status:Paralyze    0`
	.Status:Shrink     50`
	.Status:Stop        0`
	.Status:DefaultTurnMod    0`
	.Status:SleepTurnMod      0`
	.Status:PoisonTurnMod     0`
	.Status:FrozenTurnMod     0`
	.Status:DizzyTurnMod      0`
	.Status:FearTurnMod       0`
	.Status:StaticTurnMod     0`
	.Status:ParalyzeTurnMod   0`
	.Status:ShrinkTurnMod     0`
	.Status:StopTurnMod      -1`
	.Status:End
}

#new:PartsTable $PartsTable_80218708
{
	00800000 01000000 FA1D00FF $IdleAnimations_80218754 $DefenseTable_80218650 00000000 00000000 00F70000 00000000
}

#new:Actor $BombshellBlaster
{
	% stats
	[Index]        49b
	[Level]        27`b
	[MaxHP]        10`b
	[Coins]         2`b
	[Flags]       00000000
	[StatusTable] $StatusTable_8021865C
	% ai
	[PartsCount]    1`s
	[PartsTable]  $PartsTable_80218708
	[Script]      $Script_Init_80218778
	% move effectiveness
	[Escape]        0`b
	[Item]          0`b
	[AirLift]      15`b
	[Hurricane]    10`b % Bow's "Spook" as well
	[UpAndAway]    95`b
	[PowerBounce] 100`b
	[SpinSmash]     4`b % weight (0-4)
	% ui positions
	[Size]         55`b  32`b % width height
	[HealthBar]     0`b   0`b % dx dy
	[StatusTurn]  -24`b  20`b % dx dy
	[StatusIcon]    5`b  25`b % dx dy
}

#new:IdleAnimations $IdleAnimations_80218754
{
	.Status:Normal    002E0101
	.Status:Stone     002E0100
	.Status:Stop      002E0100
	.Status:Paralyze  002E0100
	.Status:End
}

#new:Script $Script_Init_80218778
{
    0:  Call  BindTakeTurn  ( .Actor:Self $Script_TakeTurn_80218B0C )
   14:  Call  BindIdle      ( .Actor:Self $Script_Idle_802187DC )
   28:  Call  BindHandleEvent   ( .Actor:Self $Script_HandleEvent_802187EC )
   3C:  Call  SetActorVar   ( .Actor:Self 00000008 00000000 )
   54:  Return
   5C:  End
}

#new:Script $Script_Idle_802187DC
{
    0:  Return
    8:  End
}

#new:Script $Script_HandleEvent_802187EC
{
    0:  Call  UseIdleAnimation  ( .Actor:Self .False )
   14:  Call  EnableIdleScript  ( .Actor:Self 00000000 )
   28:  Call  GetLastEvent      ( .Actor:Self *Var0 )
   3C:  Switch  *Var0
   48:  	CaseOR  ==  .Event:HitCombo % 9
   54:  	CaseOR  ==  .Event:Hit % A
   60:  		SetConst  *Var0  00000001
   70:  		SetConst  *Var1  002E0103
   80:  		ExecWait  DoNormalHit
   8C:  	EndCaseGroup
   94:  	Case  ==  .Event:BurnHit % E
   A0:  		SetConst  *Var0  00000001
   B0:  		SetConst  *Var1  002E0103
   C0:  		SetConst  *Var2  FFFFFFFF
   D0:  		ExecWait  DoBurnHit
   DC:  	Case  ==  .Event:BurnDeath % 24
   E8:  		SetConst  *Var0  00000001
   F8:  		SetConst  *Var1  002E0103
  108:  		SetConst  *Var2  FFFFFFFF
  118:  		ExecWait  DoBurnHit
  124:  		SetConst  *Var0  00000001
  134:  		SetConst  *Var1  002E0103
  144:  		ExecWait  DoDeath
  150:  		Return
  158:  	CaseOR  ==  00000017 % 17
  164:  	CaseOR  ==  .Event:Immune % 19
  170:  	CaseOR  ==  .Event:AirLiftFailed % 1F
  17C:  		SetConst  *Var0  00000001
  18C:  		SetConst  *Var1  002E0101
  19C:  		ExecWait  DoImmune
  1A8:  	EndCaseGroup
  1B0:  	Case  ==  .Event:Death % 20
  1BC:  		SetConst  *Var0  00000001
  1CC:  		SetConst  *Var1  002E0103
  1DC:  		ExecWait  DoNormalHit
  1E8:  		Wait  10`
  1F4:  		SetConst  *Var0  00000001
  204:  		SetConst  *Var1  002E0103
  214:  		ExecWait  DoDeath
  220:  		Return
  228:  	Case  ==  .Event:RecoverStatus % 31
  234:  		SetConst  *Var0  00000001
  244:  		SetConst  *Var1  002E0101
  254:  		ExecWait  DoRecover
  260:  	Case  ==  .Event:BeginAirLift % 3A
  26C:  		SetConst  *Var0  00000001
  27C:  		SetConst  *Var1  002E0103
  28C:  		ExecWait  DoAirLift
  298:  	Case  ==  .Event:BlowAway % 16
  2A4:  		SetConst  *Var0  00000001
  2B4:  		SetConst  *Var1  002E0103
  2C4:  		ExecWait  DoBlowAway
  2D0:  		Return
  2D8:  	Default
  2E0:  EndSwitch
  2E8:  Call  EnableIdleScript  ( .Actor:Self 00000001 )
  2FC:  Call  UseIdleAnimation  ( .Actor:Self .True )
  310:  Return
  318:  End
}

#new:Script $Script_TakeTurn_80218B0C
{
    0:  Call  UseIdleAnimation  ( .Actor:Self .False )
   14:  Call  EnableIdleScript  ( .Actor:Self 00000000 )
   28:  Call  GetActorVar       ( .Actor:Self 00000008 *Var0 )
   40:  Switch  *Var0
   4C:  	Case  ==  00000000
   58:  		ExecWait  $Script_FireBombshell
   64:  	Case  ==  00000001
   70:  		ExecWait  $Script_SkipTurn
   7C:  EndSwitch
   84:  Call  EnableIdleScript  ( .Actor:Self 00000001 )
   98:  Call  UseIdleAnimation  ( .Actor:Self .True )
   AC:  Return
   B4:  End
}

#new:Script $Script_FireBombshell
{
    0:  Call  SetAnimation  ( .Actor:Self 00000001 002E0102 )
   18:  Wait  13`
   24:  Thread
   2C:  	Call  ShakeCam  ( .Cam:Battle 00000000  10` *Fixed[1.0] )
   48:  EndThread
   50:  Call  StartRumble   ( 00000009 )
   60:  Call  PlaySoundAtActor  ( .Actor:Self 000002C8 )
   74:  Call  GetActorPos   ( .Actor:Self *Var0 *Var1 *Var2 )
   90:  Sub   *Var0  00000021
   A0:  Add   *Var1  00000013
   B0:  Add   *Var2  00000003
   C0:  Call  PlayEffect    ( ~FX:BigSteamPuff *Var0 *Var1 *Var2 00000002 00000005 00000000 00000002 00000000 00000000 00000000 00000000 00000000 00000000 )
  104:  Call  PlayEffect    ( ~FX:BigSteamPuff *Var0 *Var1 *Var2 00000002 00000005 00000002 00000002 00000000 00000000 00000000 00000000 00000000 00000000 )
  148:  Wait  2`
  154:  Call  $Function_80218000 ( )
  160:  Call  SummonEnemy   ( $SpecialFormation_80218DF4 00000000 )
  174:  Call  SetActorVar   ( .Actor:Self 00000000 *Var0 )
  18C:  Call  SetActorVar   ( .Actor:Self 00000008 00000001 )
  1A4:  Return
  1AC:  End
}

#new:Script $Script_SkipTurn
{
    0:  Call  GetActorVar   ( .Actor:Self 00000000 *Var0 )
   18:  Call  ActorExists   ( *Var0 *Var1 )
   2C:  If  *Var1  ==  .False
   3C:  	Call  SetActorVar   ( .Actor:Self 00000008 00000000 )
   54:  EndIf
   5C:  Return
   64:  End
}

#new:Vector3D $Vector3D_80218DE8
{
	0` -1000` 0`
}

#new:SpecialFormation $SpecialFormation_80218DF4
{
	$BombshellBill $Vector3D_80218DE8 00000064 00000000 00000000 00000000 00000000
}

#new:DefenseTable $DefenseTable_80218E10
{
	.Element:Normal 00000000
	.Element:End
}

#new:StatusTable $StatusTable_80218E1C
{
	.Status:Normal      0`
	.Status:Default     0`
	.Status:Sleep       0`
	.Status:Poison      0`
	.Status:Frozen      0`
	.Status:Dizzy     100`
	.Status:Fear        0`
	.Status:Static      0`
	.Status:Paralyze    0`
	.Status:Shrink    100`
	.Status:Stop        0`
	.Status:DefaultTurnMod    0`
	.Status:SleepTurnMod     -1`
	.Status:PoisonTurnMod     0`
	.Status:FrozenTurnMod     0`
	.Status:DizzyTurnMod      0`
	.Status:FearTurnMod       0`
	.Status:StaticTurnMod     0`
	.Status:ParalyzeTurnMod  -1`
	.Status:ShrinkTurnMod     0`
	.Status:StopTurnMod      -2`
	.Status:End
}

#new:PartsTable $PartsTable_80218EC8
{
	00800000 01000000 001000FF $IdleAnimations_80218F14 $DefenseTable_80218E10 00000400 00000000 00FA0000 00000000
}

#new:Actor $BombshellBill
{
	% stats
	[Index]        4Ab
	[Level]        24`b
	[MaxHP]         3`b
	[Coins]         0`b
	[Flags]       00000200
	[StatusTable] $StatusTable_80218E1C
	% ai
	[PartsCount]    1`s
	[PartsTable]  $PartsTable_80218EC8
	[Script]      $Script_Init_80218F38
	% move effectiveness
	[Escape]       40`b
	[Item]          0`b
	[AirLift]     100`b
	[Hurricane]    95`b % Bow's "Spook" as well
	[UpAndAway]    95`b
	[PowerBounce]  80`b
	[SpinSmash]     0`b % weight (0-4)
	% ui positions
	[Size]         28`b  22`b % width height
	[HealthBar]     0`b   0`b % dx dy
	[StatusTurn]  -10`b  20`b % dx dy
	[StatusIcon]   10`b  20`b % dx dy
}

#new:IdleAnimations $IdleAnimations_80218F14
{
	.Status:Normal    002D0101
	.Status:Stone     002D0100
	.Status:Stop      002D0100
	.Status:Paralyze  002D0100
	.Status:End
}

#new:Script $Script_Init_80218F38
{
    0:  Call  BindTakeTurn  ( .Actor:Self $Script_TakeTurn_80219670 )
   14:  Call  BindIdle      ( .Actor:Self $Script_Idle_80219230 )
   28:  Call  BindHandleEvent   ( .Actor:Self $Script_HandleEvent_80219298 )
   3C:  Call  GetActorVar   ( .Actor:Self 00000000 *Var0 )
   54:  If  *Var0  ==  00000000
   64:  	Call  GetActorPos   ( .Actor:Self *Var0 *Var1 *Var2 )
   80:  	Add   *Var1  00000010
   90:  	Call  SetActorPos   ( .Actor:Self *Var0 *Var1 *Var2 )
   AC:  	Call  ForceHomePos  ( .Actor:Self *Var0 *Var1 *Var2 )
   C8:  	Call  HPBarToHome   ( .Actor:Self )
   D8:  Else
   E0:  	Call  GetActorVar       ( .Actor:Self 00000001 *Var0 )
   F8:  	Call  GetActorPos       ( *Var0 *Var1 *Var2 *Var3 )
  114:  	Call  GetStatusFlags    ( *Var0 *Var4 )
  128:  	If  *Var4  &  ~Flags:StatusFlags:Shrink % 80000
  138:  		Set   *Var5  FFFFFFF3
  148:  		Set   *Var6  00000004
  158:  	Else
  160:  		Set   *Var5  FFFFFFDF
  170:  		Set   *Var6  0000000B
  180:  	EndIf
  188:  	Add   *Var1  *Var5
  198:  	Add   *Var2  *Var6
  1A8:  	Call  SetActorPos   ( .Actor:Self *Var1 *Var2 *Var3 )
  1C4:  	Call  CopyStatusEffects     ( *Var0 .Actor:Self )
  1D8:  	Call  CopyBuffs     ( *Var0 .Actor:Self )
  1EC:  	Call  SetActorSounds        ( .Actor:Self .ActorSound:Jump 00000000 00000000 )
  208:  	Call  GetActorPos   ( *Var0 *Var1 *VarB *VarC )
  224:  	Sub   *Var1  0000005A
  234:  	Call  SetActorJumpGravity   ( .Actor:Self *Fixed[0.01] )
  248:  	Call  SetAnimation  ( .Actor:Self 00000001 002D0103 )
  260:  	Call  SetGoalPos    ( .Actor:Self *Var1 *Var2 *Var3 )
  27C:  	Call  JumpToGoal    ( .Actor:Self  5` .False .True .False )
  29C:  	Call  SetAnimation  ( .Actor:Self 00000001 002D0101 )
  2B4:  	Call  ForceHomePos  ( .Actor:Self *Var1 *Var2 *Var3 )
  2D0:  	Call  HPBarToHome   ( .Actor:Self )
  2E0:  EndIf
  2E8:  Return
  2F0:  End
}

#new:Script $Script_Idle_80219230
{
    0:  Return
    8:  End
}

#new:Script $Script_80219240
{
    0:  ExecWait  $Script_80219A90
    C:  SetConst  *Var0  00000001
   1C:  SetConst  *Var1  002D0107
   2C:  Set   *Var2  FFFFCFC7
   3C:  ExecWait  DoDeath
   48:  Return
   50:  End
}

#new:Script $Script_HandleEvent_80219298
{
    0:  Call  UseIdleAnimation  ( .Actor:Self .False )
   14:  Call  EnableIdleScript  ( .Actor:Self 00000000 )
   28:  Call  GetLastEvent      ( .Actor:Self *Var0 )
   3C:  Switch  *Var0
   48:  	Case  ==  .Event:HitCombo % 9
   54:  		SetConst  *Var0  00000001
   64:  		SetConst  *Var1  002D0105
   74:  		ExecWait  DoNormalHit
   80:  	Case  ==  .Event:Hit % A
   8C:  		SetConst  *Var0  00000001
   9C:  		SetConst  *Var1  002D0105
   AC:  		ExecWait  DoNormalHit
   B8:  	Case  ==  .Event:BurnHit % E
   C4:  		ExecWait  $Script_80219240
   D0:  		Return
   D8:  	Case  ==  .Event:BurnDeath % 24
   E4:  		ExecWait  $Script_80219240
   F0:  		Return
   F8:  	Case  ==  .Event:SpinSmashHit % B
  104:  		ExecWait  $Script_80219240
  110:  		Return
  118:  	Case  ==  .Event:SpinSmashDeath % 21
  124:  		ExecWait  $Script_80219240
  130:  		Return
  138:  	Case  ==  .Event:ShockHit % 2F
  144:  		SetConst  *Var0  00000001
  154:  		SetConst  *Var1  002D0105
  164:  		ExecWait  DoShockHit
  170:  		ExecWait  $Script_80219240
  17C:  		Return
  184:  	Case  ==  .Event:ShockDeath % 26
  190:  		SetConst  *Var0  00000001
  1A0:  		SetConst  *Var1  002D0105
  1B0:  		ExecWait  DoShockHit
  1BC:  		ExecWait  $Script_80219240
  1C8:  		Return
  1D0:  	CaseOR  ==  00000017 % 17
  1DC:  	CaseOR  ==  .Event:Immune % 19
  1E8:  	CaseOR  ==  .Event:AirLiftFailed % 1F
  1F4:  		SetConst  *Var0  00000001
  204:  		SetConst  *Var1  002D0101
  214:  		ExecWait  DoImmune
  220:  	EndCaseGroup
  228:  	Case  ==  .Event:Death % 20
  234:  		SetConst  *Var0  00000001
  244:  		SetConst  *Var1  002D0105
  254:  		ExecWait  DoNormalHit
  260:  		ExecWait  $Script_80219240
  26C:  		Return
  274:  	Case  ==  .Event:ExplodeTrigger % 22
  280:  		ExecWait  $Script_80219240
  28C:  		Return
  294:  	Case  ==  .Event:RecoverStatus % 31
  2A0:  		SetConst  *Var0  00000001
  2B0:  		SetConst  *Var1  002D0101
  2C0:  		ExecWait  DoRecover
  2CC:  	Case  ==  .Event:ScareAway % 39
  2D8:  		SetConst  *Var0  00000001
  2E8:  		SetConst  *Var1  002D0105
  2F8:  		ExecWait  DoNormalHit
  304:  		ExecWait  $Script_80219240
  310:  		Return
  318:  	Case  ==  .Event:BeginAirLift % 3A
  324:  		SetConst  *Var0  00000001
  334:  		SetConst  *Var1  002D0103
  344:  		ExecWait  DoAirLift
  350:  	Case  ==  .Event:BlowAway % 16
  35C:  		SetConst  *Var0  00000001
  36C:  		SetConst  *Var1  002D0103
  37C:  		ExecWait  DoBlowAway
  388:  		Return
  390:  	Default
  398:  EndSwitch
  3A0:  Call  EnableIdleScript  ( .Actor:Self 00000001 )
  3B4:  Call  UseIdleAnimation  ( .Actor:Self .True )
  3C8:  Return
  3D0:  End
}

#new:Script $Script_TakeTurn_80219670
{
    0:  Call  UseIdleAnimation  ( .Actor:Self .False )
   14:  Call  EnableIdleScript  ( .Actor:Self 00000000 )
   28:  Call  SetTargetActor    ( .Actor:Self .Actor:Player )
   3C:  Call  SetGoalToTarget   ( .Actor:Self )
   4C:  Call  UseBattleCamPreset    ( 0000003F )
   5C:  Call  BattleCamTargetActor  ( .Actor:Self )
   6C:  Call  8024ECF8  ( FFFFFFFF 00000001 00000000 )
   84:  Call  SetAnimation      ( .Actor:Self 00000001 002D0104 )
   9C:  Call  SetActorDispOffset    ( .Actor:Self 00000000 FFFFFFFF 00000000 )
   B8:  Wait  1`
   C4:  Call  SetActorDispOffset    ( .Actor:Self 00000000 FFFFFFFE 00000000 )
   E0:  Wait  15`
   EC:  Call  8024E664  ( 00000013 )
   FC:  Call  EnemyTestTarget   ( .Actor:Self *Var0 ~Flags:DamageType:0 00000000 00000006 00000010 )
  120:  Switch  *Var0
  12C:  	CaseOR  ==  .HitResult:Miss % 6
  138:  	CaseOR  ==  .HitResult:Lucky % 5
  144:  		Set   *VarA  *Var0
  154:  		Call  GetActorPos   ( .Actor:Self *Var0 *Var1 *Var2 )
  170:  		Set   *Var3  *Var1
  180:  		Call  GetActorPos   ( .Actor:Player *Var0 *Var1 *Var2 )
  19C:  		Set   *Var1  *Var3
  1AC:  		Sub   *Var0  0000005A
  1BC:  		Call  SetActorJumpGravity   ( .Actor:Self *Fixed[0.01] )
  1D0:  		Call  SetGoalPos    ( .Actor:Self *Var0 *Var1 *Var2 )
  1EC:  		Call  JumpToGoal    ( .Actor:Self  18` .False .True .False )
  20C:  		If  *VarA  ==  .HitResult:Lucky % 5
  21C:  			Call  EnemyTestTarget   ( .Actor:Self *Var0 ~Flags:DamageType:TriggerLucky 00000000 00000000 00000000 )
  240:  		EndIf
  248:  		Call  UseBattleCamPreset    ( 00000002 )
  258:  		Call  YieldTurn ( )
  264:  		Call  8027D32C  ( FFFFFF81 )
  274:  		Call  UseIdleAnimation  ( .Actor:Self .False )
  288:  		Call  RemoveActor       ( .Actor:Self )
  298:  		Return
  2A0:  	EndCaseGroup
  2A8:  EndSwitch
  2B0:  Call  GetActorPos       ( .Actor:Self *Var0 *Var1 *Var2 )
  2CC:  Set   *Var3  *Var1
  2DC:  Call  GetActorPos       ( .Actor:Player *Var0 *Var1 *Var2 )
  2F8:  Set   *Var1  *Var3
  308:  Add   *Var0  0000000A
  318:  Call  SetActorJumpGravity   ( .Actor:Self *Fixed[0.01] )
  32C:  Call  SetGoalPos        ( .Actor:Self *Var0 *Var1 *Var2 )
  348:  Call  JumpToGoal        ( .Actor:Self  12` .False .True .False )
  368:  ExecWait  $Script_80219A90
  374:  Call  SetGoalToTarget   ( .Actor:Self )
  384:  Wait  2`
  390:  Call  EnemyDamageTarget ( .Actor:Self *Var0 ~Flags:DamageType:IgnoreDefense 00000000 00000000 00000006 00000020 )
  3B8:  Call  UseBattleCamPreset    ( 00000002 )
  3C8:  Call  YieldTurn ( )
  3D4:  SetConst  *Var0  00000001
  3E4:  SetConst  *Var1  002D0107
  3F4:  Set   *Var2  FFFFCFC7
  404:  ExecWait  DoDeath
  410:  Return
  418:  End
}

#new:Script $Script_80219A90
{
    0:  Call  GetActorPos   ( .Actor:Self *Var0 *Var1 *Var2 )
   1C:  Add   *Var2  00000002
   2C:  Call  PlayEffect    ( ~FX:SmokeRing:Blast1 *Var0 *Var1 *Var2 00000000 00000000 00000000 00000000 00000000 00000000 00000000 00000000 00000000 )
   70:  Add   *Var1  00000010
   80:  Add   *Var2  00000002
   90:  Call  PlayEffect    ( ~FX:FaintDustCloud *Var0 *Var1 *Var2 *Fixed[3.0] 0000001E 00000000 00000000 00000000 00000000 00000000 00000000 00000000 )
   D4:  Call  PlaySoundAtActor  ( .Actor:Self 00002078 )
   E8:  Call  StartRumble   ( 0000000B )
   F8:  Thread
  100:  	Call  ShakeCam  ( .Cam:Battle 00000000  5` *Fixed[1.0] )
  11C:  EndThread
  124:  Return
  12C:  End
}

PADDING: 80219BC4 to 80219BD0 (006CDC34 to 006CDC40)
00000000 00000000 00000000

#new:IdleAnimations $IdleAnimations_80219BD0
{
	.Status:Normal    00590001
	.Status:Stone     00590000
	.Status:Sleep     00590011
	.Status:Poison    00590001
	.Status:Stop      00590000
	.Status:Static    00590001
	.Status:Paralyze  00590000
	.Status:Dizzy     00590013
	.Status:Fear      00590013
	.Status:End
}

#new:IdleAnimations $IdleAnimations_80219C1C
{
	.Status:Normal    00590003
	.Status:Stone     00590000
	.Status:Sleep     00590011
	.Status:Poison    00590003
	.Status:Stop      00590000
	.Status:Static    00590003
	.Status:Paralyze  00590000
	.Status:Dizzy     00590013
	.Status:Fear      00590013
	.Status:End
}

#new:IdleAnimations $IdleAnimations_80219C68
{
	.Status:Normal    0059000F
	.Status:Stone     00590010
	.Status:Sleep     00590012
	.Status:Poison    0059000F
	.Status:Stop      00590010
	.Status:Static    0059000F
	.Status:Paralyze  00590010
	.Status:Dizzy     00590014
	.Status:Fear      00590014
	.Status:End
}

#new:IdleAnimations $IdleAnimations_80219CB4
{
	.Status:Normal    00590006
	.Status:Stone     00590006
	.Status:Sleep     00590006
	.Status:Poison    00590006
	.Status:Stop      00590006
	.Status:Static    00590006
	.Status:Paralyze  00590006
	.Status:Dizzy     00590006
	.Status:Fear      00590006
	.Status:End
}

#new:DefenseTable $DefenseTable_80219D00
{
	.Element:Normal 00000003
	.Element:Shock  00000003
	.Element:End
}

#new:DefenseTable $DefenseTable_80219D14
{
	.Element:Normal 00000000
	.Element:End
}

#new:DefenseTable $DefenseTable_80219D20
{
	.Element:Normal 00000003
	.Element:Fire   00000003
	.Element:End
}

#new:StatusTable $StatusTable_80219D34
{
	.Status:Normal      0`
	.Status:Default     0`
	.Status:Sleep      50`
	.Status:Poison     60`
	.Status:Frozen      0`
	.Status:Dizzy      75`
	.Status:Fear        0`
	.Status:Static     80`
	.Status:Paralyze   75`
	.Status:Shrink     70`
	.Status:Stop       80`
	.Status:DefaultTurnMod    0`
	.Status:SleepTurnMod     -1`
	.Status:PoisonTurnMod     0`
	.Status:FrozenTurnMod     0`
	.Status:DizzyTurnMod      0`
	.Status:FearTurnMod       0`
	.Status:StaticTurnMod     0`
	.Status:ParalyzeTurnMod   0`
	.Status:ShrinkTurnMod     0`
	.Status:StopTurnMod      -1`
	.Status:End
}

#new:StatusTable $StatusTable_80219DE0
{
	.Status:Normal      0`
	.Status:Default     0`
	.Status:Sleep       0`
	.Status:Poison      0`
	.Status:Dizzy       0`
	.Status:Fear        0`
	.Status:Static      0`
	.Status:Paralyze    0`
	.Status:Shrink      0`
	.Status:Stop        0`
	.Status:DefaultTurnMod    0`
	.Status:SleepTurnMod      0`
	.Status:PoisonTurnMod     0`
	.Status:DizzyTurnMod      0`
	.Status:FearTurnMod       0`
	.Status:StaticTurnMod     0`
	.Status:ParalyzeTurnMod   0`
	.Status:ShrinkTurnMod     0`
	.Status:StopTurnMod       0`
	.Status:End
}

#new:PartsTable $PartsTable_80219E7C
{
	00800000 01000000 002000FF $IdleAnimations_80219BD0 $DefenseTable_80219D00 00001010 00000000 00F40000 00000000
}

#new:Actor $Koopatrol
{
	% stats
	[Index]        4Cb
	[Level]        25`b
	[MaxHP]         8`b
	[Coins]         2`b
	[Flags]       00000000
	[StatusTable] $StatusTable_80219D34
	% ai
	[PartsCount]    1`s
	[PartsTable]  $PartsTable_80219E7C
	[Script]      $Script_Init_80219EC8
	% move effectiveness
	[Escape]       50`b
	[Item]         60`b
	[AirLift]      75`b
	[Hurricane]    65`b % Bow's "Spook" as well
	[UpAndAway]    95`b
	[PowerBounce]  85`b
	[SpinSmash]     0`b % weight (0-4)
	% ui positions
	[Size]         32`b  42`b % width height
	[HealthBar]     0`b   0`b % dx dy
	[StatusTurn]  -15`b  32`b % dx dy
	[StatusIcon]    5`b  32`b % dx dy
}

#new:Script $Script_Init_80219EC8
{
    0:  Call  BindTakeTurn  ( .Actor:Self $Script_TakeTurn_8021DF34 )
   14:  Call  BindIdle      ( .Actor:Self $Script_Idle_8021A23C )
   28:  Call  BindHandleEvent   ( .Actor:Self $Script_HandleEvent_8021A724 )
   3C:  Call  BindNextTurn  ( .Actor:Self $Script_NextTurn_8021A018 )
   50:  Call  SetActorVar   ( .Actor:Self 00000000 00000000 )
   68:  Call  SetActorVar   ( .Actor:Self 00000001 00000000 )
   80:  Call  GetIndexFromHome  ( .Actor:Self *Var0 )
   94:  Call  SetActorVar   ( .Actor:Self 00000002 *Var0 )
   AC:  Switch  *Var0
   B8:  	Case  ==  00000000
   C4:  		Call  SetBattleVar  ( 00000004 00000000 )
   D8:  	Case  ==  00000001
   E4:  		Call  SetBattleVar  ( 00000005 00000000 )
   F8:  	Case  ==  00000002
  104:  		Call  SetBattleVar  ( 00000006 00000000 )
  118:  	Case  ==  00000003
  124:  		Call  SetBattleVar  ( 00000007 00000000 )
  138:  EndSwitch
  140:  Return
  148:  End
}

#new:Script $Script_NextTurn_8021A018
{
    0:  Call  GetBattlePhase    ( *Var0 )
   10:  Switch  *Var0
   1C:  	Case  ==  0000000A
   28:  	Case  ==  0000000C
   34:  	Case  ==  0000000B
   40:  		Call  SetBattleVar  ( 00000001 00000000 )
   54:  EndSwitch
   5C:  Return
   64:  End
}

#new:Script $Script_8021A084
{
    0:  Switch  *Var0
    C:  	Case  ==  00000000
   18:  		If  *Var1  &  00041000
   28:  			Call  SetTargetOffset       ( .Actor:Self 00000001  -5`  15` )
   44:  			Call  8027D4C8  ( FFFFFF81 00000001 00000000 00000000 )
   60:  			Call  $Function_80218020    ( FFFFFFF6 00000014 0000000A 00000014 )
   7C:  		Else
   84:  			Call  SetTargetOffset       ( .Actor:Self 00000001  -4`  32` )
   A0:  			Call  8027D4C8  ( FFFFFF81 00000001 FFFFFFFF FFFFFFFC )
   BC:  			Call  $Function_80218020    ( FFFFFFF1 00000020 00000005 00000020 )
   D8:  		EndIf
   E0:  	Case  ==  00000001
   EC:  		Call  SetTargetOffset       ( .Actor:Self 00000001  -5`  15` )
  108:  		Call  8027D4C8  ( FFFFFF81 00000001 00000000 00000000 )
  124:  		Call  $Function_80218020    ( FFFFFFF6 00000014 0000000A 00000014 )
  140:  	Case  ==  00000002
  14C:  		Call  SetTargetOffset       ( .Actor:Self 00000001  -4`  20` )
  168:  		Call  8027D4C8  ( FFFFFF81 00000001 00000000 FFFFFFFA )
  184:  		Call  $Function_80218020    ( FFFFFFF1 00000016 00000005 00000016 )
  1A0:  EndSwitch
  1A8:  Return
  1B0:  End
}

#new:Script $Script_Idle_8021A23C
{
    0:  Label  0
    C:  Call  RandInt   ( 00000050 *VarA )
   20:  Add   *VarA  00000050
   30:  Loop  *VarA
   3C:  	Label  1
   48:  	Call  GetActorVar       ( .Actor:Self 00000000 *Var0 )
   60:  	Call  GetStatusFlags    ( .Actor:Self *Var1 )
   74:  	ExecWait  $Script_8021A084
   80:  	If  *Var0  ==  00000001
   90:  		Wait  1`
   9C:  		Goto  1
   A8:  	EndIf
   B0:  	If  *Var1  &  0235D000
   C0:  		Wait  1`
   CC:  		Goto  1
   D8:  	EndIf
   E0:  	Wait  1`
   EC:  EndLoop
   F4:  Call  GetActorPos   ( .Actor:Self *Var0 *Var1 *Var2 )
  110:  Add   *Var0  00000005
  120:  Call  SetActorIdleSpeed ( .Actor:Self *Fixed[1.0] )
  134:  Call  SetIdleAnimations ( .Actor:Self 00000001 $IdleAnimations_80219C1C )
  14C:  Call  SetIdleGoal   ( .Actor:Self *Var0 *Var1 *Var2 )
  168:  Call  IdleRunToGoal ( .Actor:Self  0` )
  17C:  Call  GetActorVar   ( .Actor:Self 00000000 *Var0 )
  194:  Switch  *Var0
  1A0:  	Case  ==  00000000
  1AC:  		Call  SetIdleAnimations ( .Actor:Self 00000001 $IdleAnimations_80219BD0 )
  1C4:  	Case  ==  00000001
  1D0:  		Call  SetIdleAnimations ( .Actor:Self 00000001 $IdleAnimations_80219C68 )
  1E8:  EndSwitch
  1F0:  Loop  00000014
  1FC:  	Label  2
  208:  	Call  GetActorVar       ( .Actor:Self 00000000 *Var0 )
  220:  	Call  GetStatusFlags    ( .Actor:Self *Var1 )
  234:  	ExecWait  $Script_8021A084
  240:  	If  *Var0  ==  00000001
  250:  		Wait  1`
  25C:  		Goto  2
  268:  	EndIf
  270:  	If  *Var1  &  0235D000
  280:  		Wait  1`
  28C:  		Goto  2
  298:  	EndIf
  2A0:  	Wait  1`
  2AC:  EndLoop
  2B4:  Call  GetActorPos   ( .Actor:Self *Var0 *Var1 *Var2 )
  2D0:  Sub   *Var0  00000005
  2E0:  Call  SetActorIdleSpeed ( .Actor:Self *Fixed[1.0] )
  2F4:  Call  SetIdleAnimations ( .Actor:Self 00000001 $IdleAnimations_80219C1C )
  30C:  Call  SetIdleGoal   ( .Actor:Self *Var0 *Var1 *Var2 )
  328:  Call  IdleRunToGoal ( .Actor:Self  0` )
  33C:  Call  GetActorVar   ( .Actor:Self 00000000 *Var0 )
  354:  Switch  *Var0
  360:  	Case  ==  00000000
  36C:  		Call  SetIdleAnimations ( .Actor:Self 00000001 $IdleAnimations_80219BD0 )
  384:  	Case  ==  00000001
  390:  		Call  SetIdleAnimations ( .Actor:Self 00000001 $IdleAnimations_80219C68 )
  3A8:  EndSwitch
  3B0:  Loop  00000050
  3BC:  	Label  3
  3C8:  	Call  GetActorVar       ( .Actor:Self 00000000 *Var0 )
  3E0:  	Call  GetStatusFlags    ( .Actor:Self *Var1 )
  3F4:  	ExecWait  $Script_8021A084
  400:  	If  *Var0  ==  00000001
  410:  		Wait  1`
  41C:  		Goto  3
  428:  	EndIf
  430:  	If  *Var1  &  0235D000
  440:  		Wait  1`
  44C:  		Goto  3
  458:  	EndIf
  460:  	Wait  1`
  46C:  EndLoop
  474:  Goto  0
  480:  Return
  488:  End
}

#new:IntTable $IntTable_8021A6CC
{
	00000009 00000010 00000016 0000001A 0000001E 00000020 00000021 00000020
	0000001E 0000001A 00000016 00000010 00000009 00000000 00000004 00000006
	00000007 00000006 00000004 00000000 00000002 00000000
}

#new:Script $Script_HandleEvent_8021A724
{
    0:  Call  UseIdleAnimation  ( .Actor:Self .False )
   14:  Call  EnableIdleScript  ( .Actor:Self 00000000 )
   28:  Call  SetActorYaw       ( .Actor:Self  0` )
   3C:  Call  GetLastEvent      ( .Actor:Self *Var0 )
   50:  Switch  *Var0
   5C:  	CaseOR  ==  .Event:HitCombo % 9
   68:  	CaseOR  ==  .Event:Hit % A
   74:  		Call  GetActorVar   ( .Actor:Self 00000000 *Var0 )
   8C:  		Switch  *Var0
   98:  			CaseOR  ==  00000000
   A4:  			CaseOR  ==  00000001
   B0:  				SetConst  *Var0  00000001
   C0:  				SetConst  *Var1  0059000B
   D0:  				ExecWait  DoNormalHit
   DC:  			EndCaseGroup
   E4:  			Case  ==  00000002
   F0:  				SetConst  *Var0  00000001
  100:  				SetConst  *Var1  00590006
  110:  				ExecWait  DoNormalHit
  11C:  		EndSwitch
  124:  	EndCaseGroup
  12C:  	Case  ==  .Event:BurnHit % E
  138:  		SetConst  *Var0  00000001
  148:  		SetConst  *Var1  0059000C
  158:  		SetConst  *Var2  0059000D
  168:  		ExecWait  DoBurnHit
  174:  	Case  ==  .Event:BurnDeath % 24
  180:  		SetConst  *Var0  00000001
  190:  		SetConst  *Var1  0059000C
  1A0:  		SetConst  *Var2  0059000D
  1B0:  		ExecWait  DoBurnHit
  1BC:  		SetConst  *Var0  00000001
  1CC:  		SetConst  *Var1  0059000D
  1DC:  		ExecWait  DoDeath
  1E8:  		Return
  1F0:  	Case  ==  .Event:SpinSmashHit % B
  1FC:  		Call  GetActorVar   ( .Actor:Self 00000000 *Var0 )
  214:  		Switch  *Var0
  220:  			CaseOR  ==  00000000
  22C:  			CaseOR  ==  00000001
  238:  				SetConst  *Var0  00000001
  248:  				SetConst  *Var1  0059000B
  258:  				ExecWait  DoSpinSmashHit
  264:  			EndCaseGroup
  26C:  			Case  ==  00000002
  278:  				SetConst  *Var0  00000001
  288:  				SetConst  *Var1  00590006
  298:  				ExecWait  DoSpinSmashHit
  2A4:  		EndSwitch
  2AC:  	Case  ==  .Event:SpinSmashDeath % 21
  2B8:  		Call  GetActorVar   ( .Actor:Self 00000000 *Var0 )
  2D0:  		Switch  *Var0
  2DC:  			CaseOR  ==  00000000
  2E8:  			CaseOR  ==  00000001
  2F4:  				SetConst  *Var0  00000001
  304:  				SetConst  *Var1  0059000B
  314:  				ExecWait  DoSpinSmashHit
  320:  				SetConst  *Var0  00000001
  330:  				SetConst  *Var1  0059000B
  340:  				ExecWait  DoDeath
  34C:  			EndCaseGroup
  354:  			Case  ==  00000002
  360:  				SetConst  *Var0  00000001
  370:  				SetConst  *Var1  00590006
  380:  				ExecWait  DoSpinSmashHit
  38C:  				Call  SetAnimation  ( .Actor:Self 00000001 00590008 )
  3A4:  				Wait  5`
  3B0:  				SetConst  *Var0  00000001
  3C0:  				SetConst  *Var1  0059000B
  3D0:  				ExecWait  DoDeath
  3DC:  		EndSwitch
  3E4:  	Case  ==  .Event:FlipTrigger % D
  3F0:  		Call  SetActorVar       ( .Actor:Self 00000000 00000001 )
  408:  		Call  SetActorVar       ( .Actor:Self 00000009 00000001 )
  420:  		Call  SetDefenseTable   ( .Actor:Self 00000001 $DefenseTable_80219D14 )
  438:  		Call  SetIdleAnimations ( .Actor:Self 00000001 $IdleAnimations_80219C68 )
  450:  		Call  SetTargetOffset   ( .Actor:Self 00000001  -5`  15` )
  46C:  		Call  8027D4C8  ( FFFFFF81 00000001 00000000 00000000 )
  488:  		Call  SetPartEventBits  ( .Actor:Self 00000001 00000010 .False )
  4A4:  		Call  SetActorFlagBits  ( .Actor:Self 00000400 .True )
  4BC:  		Call  SetAnimation      ( .Actor:Self 00000001 0059000B )
  4D4:  		Call  SetActorRotationOffset    ( .Actor:Self 00000000 0000000C 00000000 )
  4F0:  		Thread
  4F8:  			Wait  4`
  504:  			Call  SetActorRotation  ( .Actor:Self 00000000 00000000 0000001E )
  520:  			Wait  1`
  52C:  			Call  SetActorRotation  ( .Actor:Self 00000000 00000000 00000000 )
  548:  			Wait  1`
  554:  			Call  SetActorRotation  ( .Actor:Self 00000000 00000000 FFFFFFE2 )
  570:  			Wait  1`
  57C:  			Call  SetActorRotation  ( .Actor:Self 00000000 00000000 FFFFFFC4 )
  598:  			Wait  1`
  5A4:  			Call  SetActorRotation  ( .Actor:Self 00000000 00000000 FFFFFFB5 )
  5C0:  			Wait  1`
  5CC:  		EndThread
  5D4:  		UseIntBuffer  $IntTable_8021A6CC
  5E0:  		Loop  00000016
  5EC:  			Get1Int  *Var0
  5F8:  			Call  SetActorDispOffset    ( .Actor:Self 00000000 *Var0 00000000 )
  614:  			Wait  1`
  620:  		EndLoop
  628:  		Call  SetActorRotationOffset    ( .Actor:Self 00000000 00000000 00000000 )
  644:  		Call  SetActorRotation  ( .Actor:Self 00000000 00000000 00000000 )
  660:  		Call  SetAnimation  ( .Actor:Self 00000001 0059000F )
  678:  	Case  ==  .Event:ShockHit % 2F
  684:  		SetConst  *Var0  00000001
  694:  		SetConst  *Var1  0059000B
  6A4:  		ExecWait  DoShockHit
  6B0:  		SetConst  *Var0  00000001
  6C0:  		SetConst  *Var1  0059000B
  6D0:  		ExecWait  DoJumpBack
  6DC:  		Call  JumpToGoal    ( .Actor:Self  5` .False .True .False )
  6FC:  		SetConst  *Var0  00000001
  70C:  		SetConst  *Var1  00590004
  71C:  		ExecWait  DoReturnHome
  728:  		Call  SetActorJumpGravity   ( .Actor:Self *Fixed[1.6] )
  73C:  		Call  JumpToGoal    ( .Actor:Self  5` .False .True .False )
  75C:  	Case  ==  .Event:ShockDeath % 26
  768:  		SetConst  *Var0  00000001
  778:  		SetConst  *Var1  0059000B
  788:  		ExecWait  DoShockHit
  794:  		SetConst  *Var0  00000001
  7A4:  		SetConst  *Var1  0059000B
  7B4:  		ExecWait  DoDeath
  7C0:  		Return
  7C8:  	Case  ==  .Event:StarBeam % 13
  7D4:  		Call  GetActorVar   ( .Actor:Self 00000000 *Var0 )
  7EC:  		If  *Var0  ==  00000002
  7FC:  			Call  SetStatusTable    ( .Actor:Self $StatusTable_80219D34 )
  810:  			Call  SetDefenseTable   ( .Actor:Self 00000001 $DefenseTable_80219D00 )
  828:  			Call  SetPartEventBits  ( .Actor:Self 00000001 00001000 .True )
  844:  			Call  SetActorVar       ( .Actor:Self 00000000 00000000 )
  85C:  			Call  SetIdleAnimations ( .Actor:Self 00000001 $IdleAnimations_80219BD0 )
  874:  			Call  GetStatusFlags    ( .Actor:Self *VarA )
  888:  			If  *VarA  !&  ~Flags:StatusFlags:AttackBoost|DefenseBoost % 18000000
  898:  				Call  EnableActorGlow   ( .Actor:Self .False )
  8AC:  			EndIf
  8B4:  			Call  SetPartEventBits  ( .Actor:Self 00000001 00400000 .False )
  8D0:  			SetConst  *Var0  00000001
  8E0:  			SetConst  *Var1  00590008
  8F0:  			ExecWait  DoImmune
  8FC:  		EndIf
  904:  	CaseOR  ==  00000017 % 17
  910:  	CaseOR  ==  .Event:Immune % 19
  91C:  		Call  GetActorVar   ( .Actor:Self 00000000 *Var0 )
  934:  		Switch  *Var0
  940:  			Case  ==  00000000
  94C:  				SetConst  *Var0  00000001
  95C:  				SetConst  *Var1  00590007
  96C:  				ExecWait  DoImmune
  978:  				Call  GetStatusFlags    ( .Actor:Self *Var0 )
  98C:  				If  *Var0  !&  ~Flags:StatusFlags:Sleep|Frozen|Fear|Paralyze|Dizzy|Stone|Stop % 35D000
  99C:  					Call  SetAnimation  ( .Actor:Self 00000001 00590008 )
  9B4:  					Wait  10`
  9C0:  				EndIf
  9C8:  			Case  ==  00000001
  9D4:  				SetConst  *Var0  00000001
  9E4:  				SetConst  *Var1  0059000F
  9F4:  				ExecWait  DoImmune
  A00:  			Case  ==  00000002
  A0C:  				SetConst  *Var0  00000001
  A1C:  				SetConst  *Var1  00590006
  A2C:  				ExecWait  DoImmune
  A38:  		EndSwitch
  A40:  	EndCaseGroup
  A48:  	Case  ==  .Event:SpikeTaunt % 1B
  A54:  		Wait  10`
  A60:  		Set   *Flag[00]  .False
  A70:  		Call  GetActorPos       ( .Actor:Self *Var0 *Var1 *Var2 )
  A8C:  		Call  GetStatusFlags    ( .Actor:Self *Var3 )
  AA0:  		If  *Var3  &  ~Flags:StatusFlags:Shrink % 80000
  AB0:  			Add   *Var1  00000010
  AC0:  			Set   *Flag[00]  .True
  AD0:  		EndIf
  AD8:  		If  *Var3  &  ~Flags:StatusFlags:Dizzy % 40000
  AE8:  			Add   *Var0  FFFFFFF2
  AF8:  			Add   *Var1  00000014
  B08:  			Set   *Flag[00]  .True
  B18:  		EndIf
  B20:  		If  *Var3  &  ~Flags:StatusFlags:Sleep % 1000
  B30:  			Add   *Var0  FFFFFFF2
  B40:  			Add   *Var1  00000014
  B50:  			Set   *Flag[00]  .True
  B60:  		EndIf
  B68:  		Call  GetActorVar   ( .Actor:Self 00000000 *VarA )
  B80:  		If  *VarA  ==  00000002
  B90:  			Add   *Var1  00000017
  BA0:  			Set   *Flag[00]  .True
  BB0:  		EndIf
  BB8:  		If  *Flag[00]  ==  .False
  BC8:  			Add   *Var1  0000002A
  BD8:  		EndIf
  BE0:  		Call  PlayEffect    ( ~FX:LensFlare:Rotating *Var0 *Var1 *Var2 00000014 00000000 00000000 00000000 00000000 00000000 00000000 00000000 00000000 )
  C24:  		Wait  20`
  C30:  	Case  ==  .Event:Death % 20
  C3C:  		Call  GetActorVar   ( .Actor:Self 00000000 *Var0 )
  C54:  		Switch  *Var0
  C60:  			CaseOR  ==  00000000
  C6C:  			CaseOR  ==  00000001
  C78:  				SetConst  *Var0  00000001
  C88:  				SetConst  *Var1  0059000B
  C98:  				ExecWait  DoNormalHit
  CA4:  				Wait  10`
  CB0:  				SetConst  *Var0  00000001
  CC0:  				SetConst  *Var1  0059000B
  CD0:  				ExecWait  DoDeath
  CDC:  				Return
  CE4:  			EndCaseGroup
  CEC:  			Case  ==  00000002
  CF8:  				SetConst  *Var0  00000001
  D08:  				SetConst  *Var1  00590006
  D18:  				ExecWait  DoNormalHit
  D24:  				Call  SetAnimation  ( .Actor:Self 00000001 00590008 )
  D3C:  				Wait  5`
  D48:  				SetConst  *Var0  00000001
  D58:  				SetConst  *Var1  0059000B
  D68:  				ExecWait  DoDeath
  D74:  				Return
  D7C:  		EndSwitch
  D84:  	Case  ==  .Event:RecoverStatus % 31
  D90:  		Call  GetActorVar   ( .Actor:Self 00000000 *Var0 )
  DA8:  		Switch  *Var0
  DB4:  			Case  ==  00000000
  DC0:  				SetConst  *Var0  00000001
  DD0:  				SetConst  *Var1  00590001
  DE0:  				ExecWait  DoRecover
  DEC:  			Case  ==  00000001
  DF8:  				SetConst  *Var0  00000001
  E08:  				SetConst  *Var1  0059000F
  E18:  				ExecWait  DoImmune
  E24:  			Case  ==  00000002
  E30:  				SetConst  *Var0  00000001
  E40:  				SetConst  *Var1  00590006
  E50:  				ExecWait  DoRecover
  E5C:  		EndSwitch
  E64:  	Case  ==  .Event:ScareAway % 39
  E70:  		Call  GetActorVar   ( .Actor:Self 00000000 *Var0 )
  E88:  		Switch  *Var0
  E94:  			CaseOR  ==  00000000
  EA0:  			CaseOR  ==  00000002
  EAC:  				SetConst  *Var0  00000001
  EBC:  				SetConst  *Var1  00590004
  ECC:  				SetConst  *Var2  0059000B
  EDC:  				ExecWait  DoScareAway
  EE8:  				Return
  EF0:  			EndCaseGroup
  EF8:  			Case  ==  00000001
  F04:  				SetConst  *Var0  00000001
  F14:  				SetConst  *Var1  0059000F
  F24:  				ExecWait  DoImmune
  F30:  		EndSwitch
  F38:  	Case  ==  .Event:BeginAirLift % 3A
  F44:  		Call  GetActorVar   ( .Actor:Self 00000000 *Var0 )
  F5C:  		Switch  *Var0
  F68:  			Case  ==  00000000
  F74:  				SetConst  *Var0  00000001
  F84:  				SetConst  *Var1  00590016
  F94:  				ExecWait  DoAirLift
  FA0:  			Case  ==  00000001
  FAC:  				SetConst  *Var0  00000001
  FBC:  				SetConst  *Var1  0059000F
  FCC:  				ExecWait  DoAirLift
  FD8:  			Case  ==  00000002
  FE4:  				SetConst  *Var0  00000001
  FF4:  				SetConst  *Var1  0059000F
 1004:  				ExecWait  DoAirLift
 1010:  		EndSwitch
 1018:  	Case  ==  .Event:BlowAway % 16
 1024:  		Call  GetActorVar   ( .Actor:Self 00000000 *Var0 )
 103C:  		Switch  *Var0
 1048:  			Case  ==  00000000
 1054:  				SetConst  *Var0  00000001
 1064:  				SetConst  *Var1  00590016
 1074:  			Case  ==  00000001
 1080:  				SetConst  *Var0  00000001
 1090:  				SetConst  *Var1  0059000F
 10A0:  			Case  ==  00000002
 10AC:  				SetConst  *Var0  00000001
 10BC:  				SetConst  *Var1  0059000F
 10CC:  		EndSwitch
 10D4:  		ExecWait  DoBlowAway
 10E0:  		Return
 10E8:  	Case  ==  .Event:AirLiftFailed % 1F
 10F4:  		Call  GetActorVar   ( .Actor:Self 00000000 *Var0 )
 110C:  		Switch  *Var0
 1118:  			Case  ==  00000000
 1124:  				SetConst  *Var0  00000001
 1134:  				SetConst  *Var1  00590001
 1144:  			Case  ==  00000001
 1150:  				SetConst  *Var0  00000001
 1160:  				SetConst  *Var1  0059000F
 1170:  			Case  ==  00000002
 117C:  				SetConst  *Var0  00000001
 118C:  				SetConst  *Var1  0059000F
 119C:  		EndSwitch
 11A4:  		ExecWait  DoImmune
 11B0:  EndSwitch
 11B8:  Call  EnableIdleScript  ( .Actor:Self FFFFFFFF )
 11CC:  Call  UseIdleAnimation  ( .Actor:Self .True )
 11E0:  Return
 11E8:  End
}

#new:Script $Script_ShellToss
{
    0:  Call  UseIdleAnimation  ( .Actor:Self .False )
   14:  Call  EnableIdleScript  ( .Actor:Self 00000000 )
   28:  Call  SetTargetActor    ( .Actor:Self .Actor:Player )
   3C:  Call  GetBattlePhase    ( *Var0 )
   4C:  If  *Var0  ==  00000001
   5C:  	Call  SetAnimation  ( .Actor:Self 00000001 00590006 )
   74:  Else
   7C:  	Call  GetActorVar   ( .Actor:Self 00000000 *Var0 )
   94:  	If  *Var0  ==  00000001
   A4:  		Call  GetActorVar   ( .Actor:Self 00000009 *Var0 )
   BC:  		Sub   *Var0  00000001
   CC:  		If  *Var0  >  00000000
   DC:  			Call  SetActorVar   ( .Actor:Self 00000009 *Var0 )
   F4:  			Call  AddActorDecoration    ( .Actor:Self 00000001 00000000 .Decoration:Sweat )
  110:  			Call  SetAnimationRate      ( .Actor:Self 00000001 *Fixed[3.0] )
  128:  			Wait  15`
  134:  			Call  SetAnimationRate      ( .Actor:Self 00000001 *Fixed[1.0] )
  14C:  			Call  RemoveActorDecoration ( .Actor:Self 00000001 00000000 )
  164:  		Else
  16C:  			Call  AddActorDecoration        ( .Actor:Self 00000001 00000000 .Decoration:Sweat )
  188:  			Call  SetAnimationRate  ( .Actor:Self 00000001 *Fixed[3.0] )
  1A0:  			Wait  10`
  1AC:  			Call  SetAnimationRate  ( .Actor:Self 00000001 *Fixed[1.0] )
  1C4:  			Call  RemoveActorDecoration     ( .Actor:Self 00000001 00000000 )
  1DC:  			Call  SetActorSounds    ( .Actor:Self .ActorSound:Jump 00000000 00000000 )
  1F8:  			Call  PlaySoundAtActor  ( .Actor:Self .Sound:Jump )
  20C:  			Call  SetAnimation      ( .Actor:Self 00000001 0059000F )
  224:  			Set   *Var0  00000000
  234:  			Call  SetActorRotationOffset    ( .Actor:Self 00000000 0000000C 00000000 )
  250:  			Thread
  258:  				Loop  00000005
  264:  					Add   *Var0  0000000F
  274:  					Call  SetActorRotation  ( .Actor:Self 00000000 00000000 *Var0 )
  290:  					Wait  1`
  29C:  				EndLoop
  2A4:  			EndThread
  2AC:  			Call  GetActorPos       ( .Actor:Self *Var0 *Var1 *Var2 )
  2C8:  			Call  SetGoalPos        ( .Actor:Self *Var0 *Var1 *Var2 )
  2E4:  			Call  SetActorJumpGravity       ( .Actor:Self *Fixed[3.0] )
  2F8:  			Call  JumpToGoal        ( .Actor:Self  8` .False .True .False )
  318:  			Call  PlaySoundAtActor  ( .Actor:Self 000020BA )
  32C:  			Call  SetActorRotationOffset    ( .Actor:Self 00000000 00000000 00000000 )
  348:  			Call  SetActorRotation  ( .Actor:Self 00000000 00000000 00000000 )
  364:  			Call  SetActorDispOffset        ( .Actor:Self 00000000 00000000 00000000 )
  380:  			Call  SetAnimation      ( .Actor:Self 00000001 00590001 )
  398:  			Call  SetActorVar       ( .Actor:Self 00000000 00000000 )
  3B0:  			Call  SetIdleAnimations ( .Actor:Self 00000001 $IdleAnimations_80219BD0 )
  3C8:  			Call  SetDefenseTable   ( .Actor:Self 00000001 $DefenseTable_80219D00 )
  3E0:  			Call  SetTargetOffset   ( .Actor:Self 00000001  -4`  32` )
  3FC:  			Call  8027D4C8  ( FFFFFF81 00000001 FFFFFFFF FFFFFFFC )
  418:  			Call  SetPartEventBits  ( .Actor:Self 00000001 00000010 .True )
  434:  			Call  SetActorFlagBits  ( .Actor:Self 00000400 .False )
  44C:  		EndIf
  454:  		Call  EnableIdleScript  ( .Actor:Self 00000001 )
  468:  		Call  UseIdleAnimation  ( .Actor:Self .True )
  47C:  		Return
  484:  	EndIf
  48C:  	Call  UseBattleCamPreset    ( 0000003F )
  49C:  	Call  BattleCamTargetActor  ( .Actor:Self )
  4AC:  	Call  8024ECF8  ( FFFFFFFF 00000001 00000000 )
  4C4:  	Wait  10`
  4D0:  	Call  SetAnimation  ( .Actor:Self 00000001 00590007 )
  4E8:  	Wait  10`
  4F4:  	Thread
  4FC:  		Call  GetActorPos   ( .Actor:Self *Var0 *Var1 *Var2 )
  518:  		Add   *Var1  00000004
  528:  		Call  PlayEffect    ( ~FX:SmokeImpact:Small *Var0 *Var1 *Var2 00000020 00000004 00000000 0000000A 00000000 00000000 00000000 00000000 00000000 )
  56C:  		Wait  3`
  578:  		Call  PlayEffect    ( ~FX:SmokeImpact:Small *Var0 *Var1 *Var2 00000020 00000004 00000000 0000000A 00000000 00000000 00000000 00000000 00000000 )
  5BC:  		Wait  2`
  5C8:  		Call  PlayEffect    ( ~FX:SmokeImpact:Small *Var0 *Var1 *Var2 00000020 00000004 00000000 0000000A 00000000 00000000 00000000 00000000 00000000 )
  60C:  	EndThread
  614:  	Call  PlaySoundAtActor  ( .Actor:Self 00002021 )
  628:  	Call  SetAnimation      ( .Actor:Self 00000001 00590006 )
  640:  	Wait  10`
  64C:  	Call  8024ECF8  ( FFFFFFFF 00000001 00000000 )
  664:  EndIf
  66C:  Call  PlaySoundAtActor  ( .Actor:Self 000020D3 )
  680:  Call  SetActorSounds    ( .Actor:Self .ActorSound:Walk 00000000 00000000 )
  69C:  Call  EnemyTestTarget   ( .Actor:Self *Var0 ~Flags:DamageType:0 00000000 00000004 00000010 )
  6C0:  Switch  *Var0
  6CC:  	CaseOR  ==  .HitResult:Miss % 6
  6D8:  	CaseOR  ==  .HitResult:Lucky % 5
  6E4:  		Set   *VarA  *Var0
  6F4:  		Call  SetGoalToTarget   ( .Actor:Self )
  704:  		Call  AddGoalPos        ( .Actor:Self  -40`  0`  0` )
  720:  		Call  SetActorSpeed     ( .Actor:Self *Fixed[16.0] )
  734:  		Call  RunToGoal ( .Actor:Self  0` .False )
  74C:  		Call  GetBattlePhase    ( *Var0 )
  75C:  		If  *Var0  ==  00000001
  76C:  			Call  UseBattleCamPreset    ( 00000005 )
  77C:  			Call  SetBattleCamZoom      (  300` )
  78C:  			Call  SetBattleCamOffsetZ   (  20` )
  79C:  			Call  MoveBattleCamOver     (  10` )
  7AC:  			Call  8024ECF8  ( FFFFFFFF 00000001 00000000 )
  7C4:  		EndIf
  7CC:  		If  *VarA  ==  .HitResult:Lucky % 5
  7DC:  			Call  EnemyTestTarget   ( .Actor:Self *Var0 ~Flags:DamageType:TriggerLucky 00000000 00000000 00000000 )
  800:  		EndIf
  808:  		Call  SetAnimation  ( .Actor:Self 00000001 00590008 )
  820:  		Wait  8`
  82C:  		Call  ResetAllActorSounds   ( .Actor:Self )
  83C:  		Call  SetActorYaw   ( .Actor:Self  180` )
  850:  		Wait  4`
  85C:  		Call  SetAnimation  ( .Actor:Self 00000001 00590016 )
  874:  		Wait  1`
  880:  		Call  SetAnimation  ( .Actor:Self 00000001 00590016 )
  898:  		Call  GetActorPos   ( .Actor:Self *Var0 *Var1 *Var2 )
  8B4:  		Add   *Var1  00000014
  8C4:  		Call  SetGoalPos    ( .Actor:Self *Var0 *Var1 *Var2 )
  8E0:  		Call  SetActorJumpGravity   ( .Actor:Self *Fixed[2.0] )
  8F4:  		Call  JumpToGoal    ( .Actor:Self  5` .False .True .False )
  914:  		Call  SetAnimation  ( .Actor:Self 00000001 00590016 )
  92C:  		Wait  6`
  938:  		Sub   *Var1  00000014
  948:  		Call  SetGoalPos    ( .Actor:Self *Var0 *Var1 *Var2 )
  964:  		Call  JumpToGoal    ( .Actor:Self  5` .False .True .False )
  984:  		Call  UseBattleCamPreset    ( 00000002 )
  994:  		Call  YieldTurn ( )
  9A0:  		Call  SetActorYaw   ( .Actor:Self  180` )
  9B4:  		Call  AddActorDecoration    ( .Actor:Self 00000001 00000000 .Decoration:Sweat )
  9D0:  		Call  SetAnimation  ( .Actor:Self 00000001 00590016 )
  9E8:  		Call  SetGoalToHome ( .Actor:Self )
  9F8:  		Call  SetActorSpeed ( .Actor:Self *Fixed[8.0] )
  A0C:  		Call  RunToGoal     ( .Actor:Self  0` .False )
  A24:  		Call  SetAnimation  ( .Actor:Self 00000001 00590001 )
  A3C:  		Call  RemoveActorDecoration ( .Actor:Self 00000001 00000000 )
  A54:  		Call  SetPartYaw    ( .Actor:Self 00000001  0` )
  A6C:  		Call  SetActorYaw   ( .Actor:Self  0` )
  A80:  		Call  EnableIdleScript      ( .Actor:Self 00000001 )
  A94:  		Call  UseIdleAnimation      ( .Actor:Self .True )
  AA8:  		Return
  AB0:  	EndCaseGroup
  AB8:  EndSwitch
  AC0:  Call  SetGoalToTarget   ( .Actor:Self )
  AD0:  Call  SetActorSpeed     ( .Actor:Self *Fixed[16.0] )
  AE4:  Call  RunToGoal ( .Actor:Self  0` .False )
  AFC:  Call  ResetAllActorSounds   ( .Actor:Self )
  B0C:  Wait  2`
  B18:  Call  EnemyDamageTarget ( .Actor:Self *Var0 ~Flags:DamageType:0 0000FFFF 00000000 00000004 00000020 )
  B40:  Switch  *Var0
  B4C:  	CaseOR  ==  .HitResult:Hit % 0
  B58:  	CaseOR  ==  .HitResult:QuakeImmune % 2
  B64:  		Call  UseBattleCamPreset    ( 00000002 )
  B74:  		Call  GetGoalPos    ( .Actor:Self *Var0 *Var1 *Var2 )
  B90:  		Add   *Var0  00000028
  BA0:  		Set   *Var1  00000000
  BB0:  		Call  SetActorJumpGravity   ( .Actor:Self *Fixed[1.8] )
  BC4:  		Call  SetGoalPos    ( .Actor:Self *Var0 *Var1 *Var2 )
  BE0:  		Call  JumpToGoal    ( .Actor:Self  10` .False .True .False )
  C00:  		Add   *Var0  0000001E
  C10:  		Call  SetGoalPos    ( .Actor:Self *Var0 *Var1 *Var2 )
  C2C:  		Call  JumpToGoal    ( .Actor:Self  8` .False .True .False )
  C4C:  		Add   *Var0  00000014
  C5C:  		Call  SetGoalPos    ( .Actor:Self *Var0 *Var1 *Var2 )
  C78:  		Call  JumpToGoal    ( .Actor:Self  6` .False .True .False )
  C98:  		Call  SetAnimation  ( .Actor:Self 00000001 00590008 )
  CB0:  		Wait  8`
  CBC:  		Call  YieldTurn ( )
  CC8:  		SetConst  *Var0  00000001
  CD8:  		SetConst  *Var1  00590004
  CE8:  		ExecWait  DoReturnHome
  CF4:  		Call  SetAnimation  ( .Actor:Self 00000001 00590001 )
  D0C:  	EndCaseGroup
  D14:  EndSwitch
  D1C:  Call  EnableIdleScript  ( .Actor:Self 00000001 )
  D30:  Call  UseIdleAnimation  ( .Actor:Self .True )
  D44:  Return
  D4C:  End
}

#new:Script $Script_SuperShellToss
{
    0:  Call  UseIdleAnimation  ( .Actor:Self .False )
   14:  Call  EnableIdleScript  ( .Actor:Self 00000000 )
   28:  Call  SetTargetActor    ( .Actor:Self .Actor:Player )
   3C:  Call  SetGoalToTarget   ( .Actor:Self )
   4C:  Call  GetActorVar       ( .Actor:Self 00000000 *Var0 )
   64:  If  *Var0  ==  00000000
   74:  	Call  UseBattleCamPreset    ( 0000000E )
   84:  	Call  BattleCamTargetActor  ( .Actor:Self )
   94:  	Call  MoveBattleCamOver (  20` )
   A4:  	Call  PlaySoundAtActor  ( .Actor:Self .Sound:PowerUp )
   B8:  	Call  GetActorPos       ( .Actor:Self *Var0 *Var1 *Var2 )
   D4:  	Add   *Var1  0000000A
   E4:  	Call  PlayEffect        ( ~FX:EnergyIn:LongStreaks1 *Var0 *Var1 *Var2 *Fixed[1.0] 0000002D 00000000 00000000 00000000 00000000 00000000 00000000 00000000 )
  128:  	Call  SetAnimation      ( .Actor:Self 00000001 00590015 )
  140:  	Wait  30`
  14C:  	Call  UseBattleCamPreset    ( 00000002 )
  15C:  	Call  MoveBattleCamOver (  20` )
  16C:  	Thread
  174:  		Wait  8`
  180:  		Call  SetAnimation  ( .Actor:Self 00000001 00590007 )
  198:  	EndThread
  1A0:  	Call  SetActorJumpGravity   ( .Actor:Self *Fixed[1.0] )
  1B4:  	Call  GetActorPos       ( .Actor:Self *Var0 *Var1 *Var2 )
  1D0:  	Call  SetGoalPos        ( .Actor:Self *Var0 *Var1 *Var2 )
  1EC:  	Call  JumpToGoal        ( .Actor:Self  16` .False .True .False )
  20C:  	Call  PlaySoundAtActor  ( .Actor:Self 000020BA )
  220:  	Call  $Function_802180EC    ( 00000080 0000000A )
  234:  	Thread
  23C:  		Call  ShakeCam  ( .Cam:Battle 00000000  5` *Fixed[0.5] )
  258:  	EndThread
  260:  	Call  SetAnimation      ( .Actor:Self 00000001 00590006 )
  278:  	Call  SetStatusTable    ( .Actor:Self $StatusTable_80219DE0 )
  28C:  	Call  SetDefenseTable   ( .Actor:Self 00000001 $DefenseTable_80219D20 )
  2A4:  	Call  SetPartEventBits  ( .Actor:Self 00000001 00001000 .False )
  2C0:  	Call  SetActorVar       ( .Actor:Self 00000000 00000002 )
  2D8:  	Call  SetIdleAnimations ( .Actor:Self 00000001 $IdleAnimations_80219CB4 )
  2F0:  	Call  EnableActorGlow   ( .Actor:Self .True )
  304:  	Call  SetPartEventBits  ( .Actor:Self 00000001 00400000 .True )
  320:  	Wait  10`
  32C:  	Call  UseIdleAnimation  ( .Actor:Self .True )
  340:  	Call  EnableIdleScript  ( .Actor:Self 00000001 )
  354:  	Return
  35C:  EndIf
  364:  Call  UseBattleCamPreset    ( 0000003F )
  374:  Call  BattleCamTargetActor  ( .Actor:Self )
  384:  Call  8024ECF8  ( FFFFFFFF 00000001 00000000 )
  39C:  Loop  00000014
  3A8:  	Call  SetActorDispOffset    ( .Actor:Self 00000001 00000000 00000000 )
  3C4:  	Wait  1`
  3D0:  	Call  SetActorDispOffset    ( .Actor:Self FFFFFFFF 00000000 00000000 )
  3EC:  	Wait  1`
  3F8:  EndLoop
  400:  Call  SetActorDispOffset    ( .Actor:Self 00000000 00000000 00000000 )
  41C:  Call  PlaySoundAtActor  ( .Actor:Self 0000037C )
  430:  Call  SetActorSounds    ( .Actor:Self .ActorSound:Walk 00000000 00000000 )
  44C:  Call  EnemyTestTarget   ( .Actor:Self *Var0 ~Flags:DamageType:0 00000000 00000004 00000010 )
  470:  Switch  *Var0
  47C:  	CaseOR  ==  .HitResult:Miss % 6
  488:  	CaseOR  ==  .HitResult:Lucky % 5
  494:  		Set   *VarA  *Var0
  4A4:  		Thread
  4AC:  			Loop
  4B8:  				Call  GetActorPos   ( .Actor:Player *Var0 *Var1 *Var2 )
  4D4:  				Add   *Var0  0000001E
  4E4:  				Call  GetActorPos   ( .Actor:Self *Var3 *Var4 *Var5 )
  500:  				If  *Var0  >  *Var3
  510:  					BreakLoop
  518:  				EndIf
  520:  				Wait  1`
  52C:  			EndLoop
  534:  			Call  UseBattleCamPreset    ( 00000001 )
  544:  			If  *VarA  ==  .HitResult:Lucky % 5
  554:  				Call  EnemyTestTarget   ( .Actor:Self *Var0 ~Flags:DamageType:TriggerLucky 00000000 00000000 00000000 )
  578:  			EndIf
  580:  			Wait  15`
  58C:  			Call  UseBattleCamPreset    ( 00000002 )
  59C:  		EndThread
  5A4:  		Thread
  5AC:  			Loop  0000001E
  5B8:  				Call  GetActorPos   ( .Actor:Self *Var0 *Var1 *Var2 )
  5D4:  				Call  PlayEffect    ( ~FX:Steam:Ring *Var0 *Var1 *Var2 00000000 00000000 00000000 00000000 00000000 00000000 00000000 00000000 00000000 )
  618:  				Wait  1`
  624:  			EndLoop
  62C:  		EndThread
  634:  		Call  SetGoalToTarget   ( .Actor:Self )
  644:  		Call  AddGoalPos        ( .Actor:Self  -200`  0`  0` )
  660:  		Call  SetActorSpeed     ( .Actor:Self *Fixed[16.0] )
  674:  		Call  RunToGoal ( .Actor:Self  0` .False )
  68C:  		Wait  15`
  698:  		Call  GetStatusFlags    ( .Actor:Self *VarA )
  6AC:  		If  *VarA  !&  ~Flags:StatusFlags:AttackBoost|DefenseBoost % 18000000
  6BC:  			Call  EnableActorGlow   ( .Actor:Self .False )
  6D0:  		EndIf
  6D8:  		Call  SetPartEventBits  ( .Actor:Self 00000001 00400000 .False )
  6F4:  		Call  YieldTurn ( )
  700:  		Call  ResetAllActorSounds   ( .Actor:Self )
  710:  		Call  SetActorPos       ( .Actor:Self  300`  0`  0` )
  72C:  		Call  AddActorDecoration    ( .Actor:Self 00000001 00000000 .Decoration:Sweat )
  748:  		Call  SetActorSpeed     ( .Actor:Self *Fixed[16.0] )
  75C:  		Call  SetGoalToHome     ( .Actor:Self )
  76C:  		Call  RunToGoal ( .Actor:Self  0` .False )
  784:  		Call  SetAnimation      ( .Actor:Self 00000001 00590008 )
  79C:  		Call  RemoveActorDecoration ( .Actor:Self 00000001 00000000 )
  7B4:  		Call  SetStatusTable    ( .Actor:Self $StatusTable_80219D34 )
  7C8:  		Call  SetDefenseTable   ( .Actor:Self 00000001 $DefenseTable_80219D00 )
  7E0:  		Call  SetPartEventBits  ( .Actor:Self 00000001 00001000 .True )
  7FC:  		Call  SetActorVar       ( .Actor:Self 00000000 00000000 )
  814:  		Call  SetIdleAnimations ( .Actor:Self 00000001 $IdleAnimations_80219BD0 )
  82C:  		Wait  10`
  838:  		Call  EnableIdleScript  ( .Actor:Self 00000001 )
  84C:  		Call  UseIdleAnimation  ( .Actor:Self .True )
  860:  		Return
  868:  	EndCaseGroup
  870:  EndSwitch
  878:  Thread
  880:  	Loop  0000001E
  88C:  		Call  GetActorPos   ( .Actor:Self *Var0 *Var1 *Var2 )
  8A8:  		Call  PlayEffect    ( ~FX:Steam:Ring *Var0 *Var1 *Var2 00000000 00000000 00000000 00000000 00000000 00000000 00000000 00000000 00000000 )
  8EC:  		Wait  1`
  8F8:  	EndLoop
  900:  EndThread
  908:  Call  SetGoalToTarget   ( .Actor:Self )
  918:  Call  SetActorSpeed     ( .Actor:Self *Fixed[16.0] )
  92C:  Call  RunToGoal ( .Actor:Self  0` .False )
  944:  Wait  2`
  950:  Call  EnemyDamageTarget ( .Actor:Self *VarA ~Flags:DamageType:0 0000FFFF 00000000 0000000A 00000020 )
  978:  Switch  *VarA
  984:  	CaseOR  ==  .HitResult:Hit % 0
  990:  	CaseOR  ==  .HitResult:QuakeImmune % 2
  99C:  		Call  UseBattleCamPreset    ( 00000002 )
  9AC:  		Thread
  9B4:  			Call  SetActorRotationOffset    ( .Actor:Self 00000000 00000010 00000000 )
  9D0:  			Set   *Var0  00000000
  9E0:  			Loop  0000003C
  9EC:  				Add   *Var0  00000012
  9FC:  				Call  SetActorRotation  ( .Actor:Self 00000000 00000000 *Var0 )
  A18:  				Wait  1`
  A24:  			EndLoop
  A2C:  			Call  SetActorRotationOffset    ( .Actor:Self 00000000 00000000 00000000 )
  A48:  			Call  SetActorRotation  ( .Actor:Self 00000000 00000000 00000000 )
  A64:  		EndThread
  A6C:  		Call  SetActorJumpGravity   ( .Actor:Self *Fixed[1.0] )
  A80:  		Call  GetActorPos   ( .Actor:Self *Var0 *Var1 *Var2 )
  A9C:  		Sub   *Var0  00000032
  AAC:  		Call  SetGoalPos    ( .Actor:Self *Var0 *Var1 *Var2 )
  AC8:  		Call  JumpToGoal    ( .Actor:Self  30` .False .True .False )
  AE8:  		Sub   *Var0  00000028
  AF8:  		Call  SetGoalPos    ( .Actor:Self *Var0 *Var1 *Var2 )
  B14:  		Call  JumpToGoal    ( .Actor:Self  20` .False .True .False )
  B34:  		Sub   *Var0  0000001E
  B44:  		Call  SetGoalPos    ( .Actor:Self *Var0 *Var1 *Var2 )
  B60:  		Call  JumpToGoal    ( .Actor:Self  10` .False .True .False )
  B80:  		Wait  20`
  B8C:  		Call  YieldTurn ( )
  B98:  		Call  GetStatusFlags        ( .Actor:Self *VarA )
  BAC:  		If  *VarA  !&  ~Flags:StatusFlags:AttackBoost|DefenseBoost % 18000000
  BBC:  			Call  EnableActorGlow   ( .Actor:Self .False )
  BD0:  		EndIf
  BD8:  		Call  SetPartEventBits  ( .Actor:Self 00000001 00400000 .False )
  BF4:  		Call  ResetAllActorSounds   ( .Actor:Self )
  C04:  		Call  SetActorPos       ( .Actor:Self  300`  0`  0` )
  C20:  		SetConst  *Var0  00000001
  C30:  		SetConst  *Var1  00590004
  C40:  		ExecWait  DoReturnHome
  C4C:  		Call  SetAnimation      ( .Actor:Self 00000001 00590001 )
  C64:  		Call  SetStatusTable    ( .Actor:Self $StatusTable_80219D34 )
  C78:  		Call  SetDefenseTable   ( .Actor:Self 00000001 $DefenseTable_80219D00 )
  C90:  		Call  SetPartEventBits  ( .Actor:Self 00000001 00001000 .True )
  CAC:  		Call  SetActorVar       ( .Actor:Self 00000000 00000000 )
  CC4:  		Call  SetIdleAnimations ( .Actor:Self 00000001 $IdleAnimations_80219BD0 )
  CDC:  	EndCaseGroup
  CE4:  EndSwitch
  CEC:  Call  EnableIdleScript  ( .Actor:Self 00000001 )
  D00:  Call  UseIdleAnimation  ( .Actor:Self .True )
  D14:  Return
  D1C:  End
}

#new:Script $Script_8021D38C
{
    0:  Call  EnemyCreateTargetList ( 00008002 )
   10:  Call  InitTargetIterator ( )
   1C:  Label  1
   28:  Call  GetOwnerTarget        ( *Var0 *Var1 )
   3C:  Call  GetOriginalActorType  ( *Var0 *Var2 )
   50:  Switch  *Var2
   5C:  	CaseOR  ==  00000010
   68:  	CaseOR  ==  00000049
   74:  		Set   *VarA  FFFFFFFF
   84:  		Return
   8C:  	EndCaseGroup
   94:  EndSwitch
   9C:  Call  ChooseNextTarget  ( .Iter:Next *Var0 )
   B0:  If  *Var0  !=  FFFFFFFF
   C0:  	Goto  1
   CC:  EndIf
   D4:  Set   *Flag[01]  .False
   E4:  Set   *Flag[02]  .False
   F4:  Set   *Flag[03]  .False
  104:  Set   *Flag[04]  .False
  114:  Call  EnemyCreateTargetList ( 00008002 )
  124:  Call  InitTargetIterator ( )
  130:  Label  0
  13C:  Call  GetOwnerTarget        ( *Var0 *Var1 )
  150:  Call  GetIndexFromHome      ( *Var0 *Var1 )
  164:  Mod   *Var1  00000004
  174:  Switch  *Var1
  180:  	Case  ==  00000000
  18C:  		Set   *Flag[01]  .True
  19C:  	Case  ==  00000001
  1A8:  		Set   *Flag[02]  .True
  1B8:  	Case  ==  00000002
  1C4:  		Set   *Flag[03]  .True
  1D4:  	Case  ==  00000003
  1E0:  		Set   *Flag[04]  .True
  1F0:  EndSwitch
  1F8:  Call  ChooseNextTarget  ( .Iter:Next *Var0 )
  20C:  If  *Var0  !=  FFFFFFFF
  21C:  	Goto  0
  228:  EndIf
  230:  If  *Flag[01]  ==  .False
  240:  	Set   *VarA  00000000
  250:  	Return
  258:  EndIf
  260:  If  *Flag[02]  ==  .False
  270:  	Set   *VarA  00000001
  280:  	Return
  288:  EndIf
  290:  If  *Flag[03]  ==  .False
  2A0:  	Set   *VarA  00000002
  2B0:  	Return
  2B8:  EndIf
  2C0:  If  *Flag[04]  ==  .False
  2D0:  	Set   *VarA  00000003
  2E0:  	Return
  2E8:  EndIf
  2F0:  Set   *VarA  FFFFFFFF
  300:  Return
  308:  End
}

#new:Vector3D $Vector3D_8021D69C
{
	0` -1000` 0`
}

#new:SpecialFormation $SpecialFormation_8021D6A8
{
	$Koopatrol $Vector3D_8021D69C 00000064 00000000 00000000 00000000 00000000
}

#new:Script $Script_SummonBackup
{
    0:  Call  UseIdleAnimation  ( .Actor:Self .False )
   14:  Call  EnableIdleScript  ( .Actor:Self 00000000 )
   28:  Call  UseBattleCamPreset    ( 0000000E )
   38:  Call  BattleCamTargetActor  ( .Actor:Self )
   48:  Call  MoveBattleCamOver (  20` )
   58:  Call  PlaySoundAtActor  ( .Actor:Self 000002E5 )
   6C:  Call  SetAnimation      ( .Actor:Self 00000001 00590002 )
   84:  Wait  20`
   90:  Loop  00000002
   9C:  	Call  SetAnimation  ( .Actor:Self 00000001 00590002 )
   B4:  	Wait  8`
   C0:  	Call  PlaySoundAtActor  ( .Actor:Self 000002E5 )
   D4:  	Call  SetActorYaw   ( .Actor:Self  180` )
   E8:  	Call  SetAnimation  ( .Actor:Self 00000001 00590009 )
  100:  	Wait  8`
  10C:  	Call  SetAnimation  ( .Actor:Self 00000001 00590002 )
  124:  	Wait  8`
  130:  	Call  PlaySoundAtActor  ( .Actor:Self 000002E5 )
  144:  	Call  SetActorYaw   ( .Actor:Self  0` )
  158:  	Call  SetAnimation  ( .Actor:Self 00000001 00590009 )
  170:  	Wait  8`
  17C:  EndLoop
  184:  Call  UseBattleCamPreset    ( 00000002 )
  194:  Call  MoveBattleCamOver     (  15` )
  1A4:  Thread
  1AC:  	Wait  8`
  1B8:  	Call  GetActorPos       ( .Actor:Self *Var0 *Var1 *Var2 )
  1D4:  	Call  PlayEffect        ( ~FX:Sparkles:Star *Var0 *Var1 *Var2 0000001E 00000000 00000000 00000000 00000000 00000000 00000000 00000000 00000000 )
  218:  	Call  PlaySoundAtActor  ( .Actor:Self 0000206D )
  22C:  EndThread
  234:  Call  SetAnimation  ( .Actor:Self 00000001 00590016 )
  24C:  Call  SetActorJumpGravity   ( .Actor:Self *Fixed[1.0] )
  260:  Call  GetActorPos   ( .Actor:Self *Var0 *Var1 *Var2 )
  27C:  Call  SetGoalPos    ( .Actor:Self *Var0 *Var1 *Var2 )
  298:  Call  JumpToGoal    ( .Actor:Self  16` .False .True .False )
  2B8:  Call  SummonEnemy   ( $SpecialFormation_8021D6A8 00000000 )
  2CC:  Call  GetActorPos   ( .Actor:Self *Var1 *Var2 *Var3 )
  2E8:  Add   *Var1  000000C8
  2F8:  Call  SetActorPos   ( *Var0 *Var1 *Var2 *Var3 )
  314:  Call  SetGoalToIndex    ( *Var0 *VarA )
  328:  Call  PlaySoundAtActor  ( *Var0 000020D3 )
  33C:  Call  SetActorSounds    ( *Var0 .ActorSound:Walk 00000000 00000000 )
  358:  Call  SetAnimation  ( *Var0 00000001 00590006 )
  370:  Call  SetActorSpeed ( *Var0 *Fixed[6.0] )
  384:  Call  RunToGoal     ( *Var0  0` .False )
  39C:  Call  SetAnimation  ( *Var0 00000001 00590008 )
  3B4:  Wait  10`
  3C0:  Call  SetAnimation  ( *Var0 00000001 00590001 )
  3D8:  Call  GetActorPos   ( *Var0 *Var1 *Var2 *Var3 )
  3F4:  Call  ForceHomePos  ( *Var0 *Var1 *Var2 *Var3 )
  410:  Call  HPBarToHome   ( *Var0 )
  420:  Call  GetActorVar   ( .Actor:Self 00000001 *Var1 )
  438:  Switch  *Var1
  444:  	Case  ==  00000000
  450:  		Call  SetActorVar   ( *Var0 00000001 00000001 )
  468:  	Case  ==  00000001
  474:  		Call  SetActorVar   ( *Var0 00000001 00000002 )
  48C:  EndSwitch
  494:  Call  GetActorVar   ( .Actor:Self 00000002 *Var1 )
  4AC:  Call  SetActorVar   ( *Var0 00000002 *Var1 )
  4C4:  Switch  *Var1
  4D0:  	Case  ==  00000000
  4DC:  		Call  GetBattleVar  ( 00000004 *Var0 )
  4F0:  		Add   *Var0  00000001
  500:  		Call  SetBattleVar  ( 00000004 *Var0 )
  514:  	Case  ==  00000001
  520:  		Call  GetBattleVar  ( 00000005 *Var0 )
  534:  		Add   *Var0  00000001
  544:  		Call  SetBattleVar  ( 00000005 *Var0 )
  558:  	Case  ==  00000002
  564:  		Call  GetBattleVar  ( 00000006 *Var0 )
  578:  		Add   *Var0  00000001
  588:  		Call  SetBattleVar  ( 00000006 *Var0 )
  59C:  	Case  ==  00000003
  5A8:  		Call  GetBattleVar  ( 00000007 *Var0 )
  5BC:  		Add   *Var0  00000001
  5CC:  		Call  SetBattleVar  ( 00000007 *Var0 )
  5E0:  EndSwitch
  5E8:  Call  EnableIdleScript  ( .Actor:Self 00000001 )
  5FC:  Call  UseIdleAnimation  ( .Actor:Self .True )
  610:  Return
  618:  End
}

#new:Script $Script_8021DCE4
{
    0:  Set   *Var9  00000000
   10:  Call  EnemyCreateTargetList ( 00008002 )
   20:  Call  InitTargetIterator ( )
   2C:  Label  0
   38:  Call  GetOwnerTarget        ( *Var0 *Var1 )
   4C:  Call  GetOriginalActorType  ( *Var0 *Var2 )
   60:  Switch  *Var2
   6C:  	Case  ==  0000004C
   78:  		Call  GetStatusFlags    ( *Var0 *Var3 )
   8C:  		If  *Var3  !&  ~Flags:StatusFlags:Sleep|Frozen|Fear|Paralyze|Dizzy|Stone|Stop % 35D000
   9C:  			Call  GetActorVar   ( *Var0 00000000 *Var3 )
   B4:  			If  *Var3  ==  00000000
   C4:  				Call  GetActorVar   ( *Var0 00000001 *Var3 )
   DC:  				Switch  *Var3
   E8:  					CaseOR  ==  00000000
   F4:  					CaseOR  ==  00000001
  100:  						Call  GetActorVar   ( .Actor:Self 00000002 *Var3 )
  118:  						Switch  *Var3
  124:  							Case  ==  00000000
  130:  								Call  GetBattleVar  ( 00000004 *Var4 )
  144:  							Case  ==  00000001
  150:  								Call  GetBattleVar  ( 00000005 *Var4 )
  164:  							Case  ==  00000002
  170:  								Call  GetBattleVar  ( 00000006 *Var4 )
  184:  							Case  ==  00000003
  190:  								Call  GetBattleVar  ( 00000007 *Var4 )
  1A4:  						EndSwitch
  1AC:  						If  *Var4  <  00000002
  1BC:  							Add   *Var9  00000001
  1CC:  						EndIf
  1D4:  					EndCaseGroup
  1DC:  					Case  ==  00000002
  1E8:  				EndSwitch
  1F0:  			EndIf
  1F8:  		EndIf
  200:  EndSwitch
  208:  Call  ChooseNextTarget  ( .Iter:Next *Var0 )
  21C:  If  *Var0  !=  FFFFFFFF
  22C:  	Goto  0
  238:  EndIf
  240:  Return
  248:  End
}

#new:Script $Script_TakeTurn_8021DF34
{
    0:  Call  GetBattlePhase    ( *Var0 )
   10:  If  *Var0  ==  00000001
   20:  	Call  SetBattleVar  ( 00000001 00000001 )
   34:  	ExecWait  $Script_ShellToss
   40:  	Return
   48:  EndIf
   50:  Call  GetActorVar   ( .Actor:Self 00000000 *Var0 )
   68:  Switch  *Var0
   74:  	Case  ==  00000000
   80:  		Call  GetBattleVar  ( 00000001 *Var0 )
   94:  		Switch  *Var0
   A0:  			Case  ==  00000000
   AC:  				Call  GetActorVar   ( .Actor:Self 00000001 *Var0 )
   C4:  				Switch  *Var0
   D0:  					CaseOR  ==  00000000
   DC:  					CaseOR  ==  00000001
   E8:  						Call  GetActorVar   ( .Actor:Self 00000002 *Var0 )
  100:  						Switch  *Var0
  10C:  							Case  ==  00000000
  118:  								Call  GetBattleVar  ( 00000004 *Var1 )
  12C:  							Case  ==  00000001
  138:  								Call  GetBattleVar  ( 00000005 *Var1 )
  14C:  							Case  ==  00000002
  158:  								Call  GetBattleVar  ( 00000006 *Var1 )
  16C:  							Case  ==  00000003
  178:  								Call  GetBattleVar  ( 00000007 *Var1 )
  18C:  						EndSwitch
  194:  						If  *Var1  >=  00000002
  1A4:  							Call  RandInt   ( 000003E8 *Var0 )
  1B8:  							If  *Var0  <  0000012C
  1C8:  								Call  SetBattleVar  ( 00000001 00000002 )
  1DC:  								ExecWait  $Script_SuperShellToss
  1E8:  							Else
  1F0:  								Call  SetBattleVar  ( 00000001 00000001 )
  204:  								ExecWait  $Script_ShellToss
  210:  							EndIf
  218:  							Return
  220:  						EndIf
  228:  					EndCaseGroup
  230:  					Case  ==  00000002
  23C:  						Call  RandInt   ( 000003E8 *Var0 )
  250:  						If  *Var0  <  0000012C
  260:  							Call  SetBattleVar  ( 00000001 00000002 )
  274:  							ExecWait  $Script_SuperShellToss
  280:  						Else
  288:  							Call  SetBattleVar  ( 00000001 00000001 )
  29C:  							ExecWait  $Script_ShellToss
  2A8:  						EndIf
  2B0:  						Return
  2B8:  				EndSwitch
  2C0:  				ExecWait  $Script_8021D38C
  2CC:  				If  *VarA  ==  FFFFFFFF
  2DC:  					Call  RandInt   ( 000003E8 *Var0 )
  2F0:  					If  *Var0  <  0000012C
  300:  						Call  SetBattleVar  ( 00000001 00000002 )
  314:  						ExecWait  $Script_SuperShellToss
  320:  					Else
  328:  						Call  SetBattleVar  ( 00000001 00000001 )
  33C:  						ExecWait  $Script_ShellToss
  348:  					EndIf
  350:  					Return
  358:  				EndIf
  360:  				ExecWait  $Script_8021DCE4
  36C:  				Switch  *Var9
  378:  					Case  ==  00000001
  384:  						Call  RandInt   ( 000003E8 *Var0 )
  398:  						If  *Var0  <  00000190
  3A8:  							Call  SetBattleVar  ( 00000001 00000001 )
  3BC:  							ExecWait  $Script_SummonBackup
  3C8:  							Return
  3D0:  						EndIf
  3D8:  					Case  ==  00000002
  3E4:  						Call  RandInt   ( 000003E8 *Var0 )
  3F8:  						If  *Var0  <  000000C8
  408:  							Call  SetBattleVar  ( 00000001 00000001 )
  41C:  							ExecWait  $Script_SummonBackup
  428:  							Return
  430:  						EndIf
  438:  					Case  ==  00000003
  444:  						Call  RandInt   ( 000003E8 *Var0 )
  458:  						If  *Var0  <  00000064
  468:  							Call  SetBattleVar  ( 00000001 00000001 )
  47C:  							ExecWait  $Script_SummonBackup
  488:  							Return
  490:  						EndIf
  498:  				EndSwitch
  4A0:  				Call  RandInt   ( 000003E8 *Var0 )
  4B4:  				If  *Var0  <  0000012C
  4C4:  					Call  SetBattleVar  ( 00000001 00000002 )
  4D8:  					ExecWait  $Script_SuperShellToss
  4E4:  				Else
  4EC:  					Call  SetBattleVar  ( 00000001 00000001 )
  500:  					ExecWait  $Script_ShellToss
  50C:  				EndIf
  514:  			Case  ==  00000001
  520:  				Call  GetActorVar   ( .Actor:Self 00000001 *Var0 )
  538:  				Switch  *Var0
  544:  					CaseOR  ==  00000000
  550:  					CaseOR  ==  00000001
  55C:  						Call  GetActorVar   ( .Actor:Self 00000002 *Var0 )
  574:  						Switch  *Var0
  580:  							Case  ==  00000000
  58C:  								Call  GetBattleVar  ( 00000004 *Var1 )
  5A0:  							Case  ==  00000001
  5AC:  								Call  GetBattleVar  ( 00000005 *Var1 )
  5C0:  							Case  ==  00000002
  5CC:  								Call  GetBattleVar  ( 00000006 *Var1 )
  5E0:  							Case  ==  00000003
  5EC:  								Call  GetBattleVar  ( 00000007 *Var1 )
  600:  						EndSwitch
  608:  						If  *Var1  >=  00000002
  618:  							Call  RandInt   ( 000003E8 *Var0 )
  62C:  							If  *Var0  <  0000012C
  63C:  								Call  SetBattleVar  ( 00000001 00000002 )
  650:  								ExecWait  $Script_SuperShellToss
  65C:  							Else
  664:  								Call  SetBattleVar  ( 00000001 00000001 )
  678:  								ExecWait  $Script_ShellToss
  684:  							EndIf
  68C:  							Return
  694:  						EndIf
  69C:  					EndCaseGroup
  6A4:  					Case  ==  00000002
  6B0:  						ExecWait  $Script_ShellToss
  6BC:  						Return
  6C4:  				EndSwitch
  6CC:  				ExecWait  $Script_8021D38C
  6D8:  				If  *VarA  ==  FFFFFFFF
  6E8:  					ExecWait  $Script_ShellToss
  6F4:  					Return
  6FC:  				EndIf
  704:  				ExecWait  $Script_8021DCE4
  710:  				Switch  *Var9
  71C:  					Case  ==  00000001
  728:  						Call  RandInt   ( 000003E8 *Var0 )
  73C:  						If  *Var0  <  00000190
  74C:  							ExecWait  $Script_SummonBackup
  758:  							Return
  760:  						EndIf
  768:  					Case  ==  00000002
  774:  						Call  RandInt   ( 000003E8 *Var0 )
  788:  						If  *Var0  <  000000C8
  798:  							ExecWait  $Script_SummonBackup
  7A4:  							Return
  7AC:  						EndIf
  7B4:  					Case  ==  00000003
  7C0:  						Call  RandInt   ( 000003E8 *Var0 )
  7D4:  						If  *Var0  <  00000064
  7E4:  							ExecWait  $Script_SummonBackup
  7F0:  							Return
  7F8:  						EndIf
  800:  				EndSwitch
  808:  				ExecWait  $Script_ShellToss
  814:  			Case  ==  00000002
  820:  				ExecWait  $Script_SuperShellToss
  82C:  		EndSwitch
  834:  	Case  ==  00000001
  840:  		Call  SetBattleVar  ( 00000001 00000001 )
  854:  		ExecWait  $Script_ShellToss
  860:  	Case  ==  00000002
  86C:  		ExecWait  $Script_SuperShellToss
  878:  EndSwitch
  880:  Return
  888:  End
}

PADDING: 8021E7C4 to 8021E7D0 (006D2834 to 006D2840)
00000000 00000000 00000000

#new:DefenseTable $DefenseTable_8021E7D0
{
	.Element:Normal 00000000
	.Element:End
}

% Origin: HINT
#new:DefenseTable $DefenseTable_8021E7DC
{
	.Element:Normal 00000000
	.Element:End
}

#new:StatusTable $StatusTable_8021E7E8
{
	.Status:Normal      0`
	.Status:Default     0`
	.Status:Sleep      40`
	.Status:Poison     50`
	.Status:Frozen      0`
	.Status:Dizzy      75`
	.Status:Fear        0`
	.Status:Static     50`
	.Status:Paralyze   75`
	.Status:Shrink     60`
	.Status:Stop       80`
	.Status:DefaultTurnMod    0`
	.Status:SleepTurnMod     -1`
	.Status:PoisonTurnMod     0`
	.Status:FrozenTurnMod     0`
	.Status:DizzyTurnMod     -1`
	.Status:FearTurnMod       0`
	.Status:StaticTurnMod     0`
	.Status:ParalyzeTurnMod  -1`
	.Status:ShrinkTurnMod    -1`
	.Status:StopTurnMod      -2`
	.Status:End
}

% Origin: HINT
#new:StatusTable $StatusTable_8021E894
{
	.Status:Normal      0`
	.Status:Default     0`
	.Status:Sleep      40`
	.Status:Poison     50`
	.Status:Frozen      0`
	.Status:Dizzy     100`
	.Status:Fear        0`
	.Status:Static     50`
	.Status:Paralyze   75`
	.Status:Shrink     60`
	.Status:Stop       80`
	.Status:DefaultTurnMod    0`
	.Status:SleepTurnMod     -1`
	.Status:PoisonTurnMod     0`
	.Status:FrozenTurnMod     0`
	.Status:DizzyTurnMod     -1`
	.Status:FearTurnMod       0`
	.Status:StaticTurnMod     0`
	.Status:ParalyzeTurnMod  -1`
	.Status:ShrinkTurnMod    -1`
	.Status:StopTurnMod      -2`
	.Status:End
}

#new:PartsTable $PartsTable_8021E940
{
	00800000 01000000 022300FF $IdleAnimations_8021EA20 $DefenseTable_8021E7D0 00000000 00000000 FBF40000 00000000
}

% Origin: HINT
#new:PartsTable $PartsTable_8021E964
{
	00020001 01000000 022300FF $IdleAnimations_8021EA20 $DefenseTable_8021E7DC 00000000 00000000 FBF40000 00000000
	00800000 02000000 F62300FF $IdleAnimations_8021EA6C $DefenseTable_8021E7DC 00800000 00000000 00F80000 00000000
	00020001 03000000 000000FF $IdleAnimations_8021EAB8 $DefenseTable_8021E7DC 00000000 00000000 00000000 00000000
}

#new:Actor $Magikoopa
{
	% stats
	[Index]        4Db
	[Level]        26`b
	[MaxHP]        11`b
	[Coins]         2`b
	[Flags]       00000000
	[StatusTable] $StatusTable_8021E7E8
	% ai
	[PartsCount]    1`s
	[PartsTable]  $PartsTable_8021E940
	[Script]      $Script_Init_8021F610
	% move effectiveness
	[Escape]       40`b
	[Item]         40`b
	[AirLift]      80`b
	[Hurricane]    70`b % Bow's "Spook" as well
	[UpAndAway]    95`b
	[PowerBounce]  80`b
	[SpinSmash]     0`b % weight (0-4)
	% ui positions
	[Size]         36`b  40`b % width height
	[HealthBar]     0`b   0`b % dx dy
	[StatusTurn]  -10`b  20`b % dx dy
	[StatusIcon]   10`b  32`b % dx dy
}

% Origin: HINT
#new:Actor $FlyingMagikoopa
{
	% stats
	[Index]        4Eb
	[Level]        26`b
	[MaxHP]        11`b
	[Coins]         2`b
	[Flags]       00000200
	[StatusTable] $StatusTable_8021E894
	% ai
	[PartsCount]    3`s
	[PartsTable]  $PartsTable_8021E964
	[Script]      $Script_Init_8021F7D0
	% move effectiveness
	[Escape]       40`b
	[Item]         40`b
	[AirLift]      85`b
	[Hurricane]    75`b % Bow's "Spook" as well
	[UpAndAway]    95`b
	[PowerBounce]  80`b
	[SpinSmash]     0`b % weight (0-4)
	% ui positions
	[Size]         48`b  40`b % width height
	[HealthBar]     0`b   0`b % dx dy
	[StatusTurn]  -25`b  20`b % dx dy
	[StatusIcon]    1`b  34`b % dx dy
}

% Origin: HINT
#new:IdleAnimations $IdleAnimations_8021EA20
{
	.Status:Normal    00560001
	.Status:Stone     00560000
	.Status:Sleep     00560008
	.Status:Poison    00560001
	.Status:Stop      00560000
	.Status:Static    00560001
	.Status:Paralyze  00560000
	.Status:Dizzy     00560007
	.Status:Fear      00560007
	.Status:End
}

% Origin: HINT
#new:IdleAnimations $IdleAnimations_8021EA6C
{
	.Status:Normal    00570001
	.Status:Stone     00570000
	.Status:Sleep     00570008
	.Status:Poison    00570001
	.Status:Stop      00570000
	.Status:Static    00570001
	.Status:Paralyze  00570000
	.Status:Dizzy     00570007
	.Status:Fear      00570007
	.Status:End
}

% Origin: HINT
#new:IdleAnimations $IdleAnimations_8021EAB8
{
	.Status:Normal    0057000A
	.Status:End
}

% Origin: HINT
#new:Script $Script_Idle_8021EAC4
{
    0:  Set   *VarF  00000000
   10:  Label  0
   1C:  Call  GetActorVar   ( .Actor:Self 00000009 *Var0 )
   34:  Call  ActorExists   ( *Var0 *Var1 )
   48:  If  *Var1  ==  .True
   58:  	Call  $Function_802182A8    ( *VarF *Var1 *Fixed[254.0] *Fixed[100.0] 00000014 00000000 00000000 )
   80:  	Add   *VarF  00000001
   90:  	Call  GetActorFlags ( .Actor:Self *Var2 )
   A4:  	If  *Var2  &  00000200
   B4:  		Call  SetPartAlpha  ( .Actor:Self 00000002 *Var1 )
   CC:  		Call  SetPartAlpha  ( *Var0 00000001 *Var1 )
   E4:  	Else
   EC:  		Call  SetPartAlpha  ( .Actor:Self 00000001 *Var1 )
  104:  		Call  SetPartAlpha  ( *Var0 00000001 *Var1 )
  11C:  	EndIf
  124:  Else
  12C:  	Set   *VarF  00000000
  13C:  	Call  GetActorFlags ( .Actor:Self *Var2 )
  150:  	If  *Var2  &  00000200
  160:  		Call  SetPartAlpha  ( .Actor:Self 00000002 000000FF )
  178:  	Else
  180:  		Call  SetPartAlpha  ( .Actor:Self 00000001 000000FF )
  198:  	EndIf
  1A0:  EndIf
  1A8:  Wait  1`
  1B4:  Goto  0
  1C0:  Return
  1C8:  End
}

% Origin: HINT
#new:Script $Script_8021EC94
{
    0:  Call  GetBattleFlags    ( *Var0 )
   10:  If  *Var0  !&  00080000
   20:  	If  *Var0  &  00000240
   30:  		Call  SetActorVar   ( .Actor:Self 00000002 00000001 )
   48:  	EndIf
   50:  Else
   58:  	Call  $Function_80218438    ( *Var0 )
   68:  	Switch  *Var0
   74:  		CaseOR  ==  00000083
   80:  		CaseOR  ==  00000084
   8C:  		CaseOR  ==  00000085
   98:  		CaseOR  ==  00000088
   A4:  			Call  GetBattleFlags    ( *Var0 )
   B4:  			If  *Var0  &  00000240
   C4:  				Call  SetActorVar   ( .Actor:Self 00000002 00000001 )
   DC:  			EndIf
   E4:  		EndCaseGroup
   EC:  	EndSwitch
   F4:  EndIf
   FC:  Return
  104:  End
}

% Origin: HINT
#new:Script $Script_8021EDA0
{
    0:  Call  GetActorVar   ( .Actor:Self 00000002 *Var0 )
   18:  If  *Var0  ==  00000001
   28:  	Call  SetAnimation  ( .Actor:Self 00000001 00560004 )
   40:  	Goto  0
   4C:  EndIf
   54:  Call  GetLastElement    ( *Var0 )
   64:  If  *Var0  &  00000400
   74:  	Call  SetAnimation  ( .Actor:Self 00000001 00560004 )
   8C:  	Goto  0
   98:  EndIf
   A0:  Return
   A8:  Label  0
   B4:  Call  8027D32C  ( FFFFFF81 )
   C4:  Call  GetStatusFlags    ( .Actor:Self *Var0 )
   D8:  If  *Var0  &  ~Flags:StatusFlags:Shrink % 80000
   E8:  	Call  SetPartScale  ( .Actor:Self 00000003 *Fixed[0.4] *Fixed[0.4] *Fixed[0.4] )
  108:  EndIf
  110:  Call  SetPartFlagBits   ( .Actor:Self 00000001 00800000 .True )
  12C:  Call  SetPartFlagBits   ( .Actor:Self 00000001 00020001 .False )
  148:  Call  SetPartFlagBits   ( .Actor:Self 00000002 00020001 .True )
  164:  Call  SetPartFlagBits   ( .Actor:Self 00000002 00800000 .False )
  180:  Call  SetPartFlagBits   ( .Actor:Self 00000003 00100000 .True )
  19C:  Call  SetPartFlagBits   ( .Actor:Self 00000003 00000001 .False )
  1B8:  Call  GetActorPos       ( .Actor:Self *Var0 *Var1 *Var2 )
  1D4:  Sub   *Var2  00000001
  1E4:  Call  SetPartPos        ( .Actor:Self 00000003 *Var0 *Var1 *Var2 )
  204:  Call  PlaySoundAtActor  ( .Actor:Self 00000301 )
  218:  Call  GetActorPos       ( .Actor:Self *Var0 *Var1 *Var2 )
  234:  Set   *Var1  00000000
  244:  Call  SetActorJumpGravity   ( .Actor:Self *Fixed[0.8] )
  258:  Call  SetGoalPos        ( .Actor:Self *Var0 *Var1 *Var2 )
  274:  Call  JumpToGoal        ( .Actor:Self  15` .False .True .False )
  294:  Call  $Function_80218530    ( 00000096 0000000A )
  2A8:  Thread
  2B0:  	Call  ShakeCam  ( .Cam:Battle 00000000  5` *Fixed[0.7] )
  2CC:  EndThread
  2D4:  Call  GetLastEvent  ( .Actor:Self *Var3 )
  2E8:  If  *Var3  ==  0000000F % F
  2F8:  	Call  SetAnimation  ( .Actor:Self 00000001 00560004 )
  310:  	Call  GetActorPos   ( .Actor:Self *Var3 *Var4 *Var5 )
  32C:  	Add   *Var4  0000000A
  33C:  	Add   *Var5  00000005
  34C:  	Call  PlayEffect    ( ~FX:SmokeBurst:Black *Var3 *Var4 *Var5 *Fixed[1.0] 0000000A 00000000 00000000 00000000 00000000 00000000 00000000 00000000 )
  390:  EndIf
  398:  Call  SetGoalPos    ( .Actor:Self *Var0 *Var1 *Var2 )
  3B4:  Call  JumpToGoal    ( .Actor:Self  10` .False .True .False )
  3D4:  Call  SetGoalPos    ( .Actor:Self *Var0 *Var1 *Var2 )
  3F0:  Call  JumpToGoal    ( .Actor:Self  5` .False .True .False )
  410:  Loop  00000014
  41C:  	Call  SetPartFlagBits   ( .Actor:Self 00000003 00000001 .True )
  438:  	Wait  1`
  444:  	Call  SetPartFlagBits   ( .Actor:Self 00000003 00000001 .False )
  460:  	Wait  1`
  46C:  EndLoop
  474:  Call  SetPartFlagBits   ( .Actor:Self 00000003 00000001 .True )
  490:  Call  SetAnimation      ( .Actor:Self 00000001 00560001 )
  4A8:  Call  SetActorFlagBits  ( .Actor:Self 00000200 .False )
  4C0:  Call  BindHandleEvent   ( .Actor:Self $Script_HandleEvent_8021FBE8 )
  4D4:  Call  SetActorType      ( .Actor:Self 0000004D )
  4E8:  Call  SetStatusTable    ( .Actor:Self $StatusTable_8021E7E8 )
  4FC:  Call  $Function_80218464    ( FFFFFFF6 00000014 0000000A 00000020 )
  518:  Call  SetActorFlagBits  ( .Actor:Self 00001000 .True )
  530:  Call  ResetAllActorSounds   ( .Actor:Self )
  540:  Call  GetIndexFromPos   ( .Actor:Self *Var0 )
  554:  Mod   *Var0  00000004
  564:  Call  SetGoalToIndex    ( .Actor:Self *Var0 )
  578:  Call  SetActorSpeed     ( .Actor:Self *Fixed[4.0] )
  58C:  Call  RunToGoal ( .Actor:Self  0` .False )
  5A4:  Call  GetGoalPos        ( .Actor:Self *Var0 *Var1 *Var2 )
  5C0:  Call  ForceHomePos      ( .Actor:Self *Var0 *Var1 *Var2 )
  5DC:  Call  HPBarToHome       ( .Actor:Self )
  5EC:  Return
  5F4:  End
}

% Origin: HINT
#new:Script $Script_RunAway
{
    0:  Call  UseIdleAnimation  ( .Actor:Self .False )
   14:  Call  EnableIdleScript  ( .Actor:Self 00000000 )
   28:  Call  8027D32C  ( FFFFFF81 )
   38:  Call  GetLastEvent      ( .Actor:Self *Var0 )
   4C:  If  *Var0  !=  .Event:ScareAway % 39
   5C:  	Call  UseBattleCamPreset    ( 0000000E )
   6C:  	Call  BattleCamTargetActor  ( .Actor:Self )
   7C:  	Call  MoveBattleCamOver     (  15` )
   8C:  	Wait  15`
   98:  	Call  UseBattleCamPreset    ( 00000001 )
   A8:  EndIf
   B0:  Call  SetActorSpeed ( .Actor:Self *Fixed[1.0] )
   C4:  Call  GetActorPos   ( .Actor:Self *Var0 *Var1 *Var2 )
   E0:  Add   *Var0  00000014
   F0:  Call  SetGoalPos    ( .Actor:Self *Var0 *Var1 *Var2 )
  10C:  Call  RunToGoal     ( .Actor:Self  0` .False )
  124:  Wait  10`
  130:  Call  SetActorYaw   ( .Actor:Self  180` )
  144:  Call  EnableActorBlur       ( .Actor:Self 00000001 )
  158:  Call  SetActorSpeed ( .Actor:Self *Fixed[10.0] )
  16C:  Call  GetActorPos   ( .Actor:Self *Var0 *Var1 *Var2 )
  188:  Add   *Var0  000000C8
  198:  Call  SetGoalPos    ( .Actor:Self *Var0 *Var1 *Var2 )
  1B4:  Call  RunToGoal     ( .Actor:Self  0` .False )
  1CC:  Call  YieldTurn ( )
  1D8:  Call  UseBattleCamPreset    ( 00000002 )
  1E8:  ExecWait  ForceNextTarget
  1F4:  Call  8027D32C      ( FFFFFF81 )
  204:  Call  RemoveActor   ( .Actor:Self )
  214:  Return
  21C:  End
}

#new:Script $Script_NextTurn_8021F5C0
{
    0:  Call  GetActorVar   ( .Actor:Self 00000000 *Var0 )
   18:  ConstAND  *Var0 FFFFFFFE
   28:  Call  SetActorVar   ( .Actor:Self 00000000 *Var0 )
   40:  Return
   48:  End
}

#new:Script $Script_Init_8021F610
{
    0:  Call  BindIdle      ( .Actor:Self $Script_Idle_8021EAC4 )
   14:  Call  BindTakeTurn  ( .Actor:Self $Script_TakeTurn_80225034 )
   28:  Call  BindHandleEvent   ( .Actor:Self $Script_HandleEvent_8021FBE8 )
   3C:  Call  BindNextTurn  ( .Actor:Self $Script_NextTurn_8021F5C0 )
   50:  Call  GetBattleVar  ( 00000002 *Var0 )
   64:  If  *Var0  ==  00000000
   74:  	Call  SetBattleVar  ( 00000002 FFFFFFFF )
   88:  EndIf
   90:  Call  SetActorVar   ( .Actor:Self 00000000 00000000 )
   A8:  Call  SetActorVar   ( .Actor:Self 00000001 00000000 )
   C0:  Call  SetActorVar   ( .Actor:Self 00000002 00000000 )
   D8:  Call  SetActorVar   ( .Actor:Self 00000003 00000000 )
   F0:  Call  SetActorVar   ( .Actor:Self 00000004 00000000 )
  108:  Call  SetActorVar   ( .Actor:Self 00000005 00000000 )
  120:  Call  SetActorVar   ( .Actor:Self 00000006 00000000 )
  138:  Call  SetActorVar   ( .Actor:Self 00000007 00000000 )
  150:  Call  SetActorVar   ( .Actor:Self 00000008 00000000 )
  168:  Call  SetActorVar   ( .Actor:Self 00000009 FFFFFFFF )
  180:  Call  SetActorVar   ( .Actor:Self 0000000A 00000000 )
  198:  Call  SetActorVar   ( .Actor:Self 0000000B FFFFFFFF )
  1B0:  Return
  1B8:  End
}

% Origin: HINT
#new:Script $Script_Init_8021F7D0
{
    0:  Call  BindIdle      ( .Actor:Self $Script_Idle_8021EAC4 )
   14:  Call  BindTakeTurn  ( .Actor:Self $Script_TakeTurn_80225034 )
   28:  Call  BindHandleEvent   ( .Actor:Self $Script_HandleEvent_80220300 )
   3C:  Call  GetBattleVar  ( 00000002 *Var0 )
   50:  If  *Var0  ==  00000000
   60:  	Call  SetBattleVar  ( 00000002 FFFFFFFF )
   74:  EndIf
   7C:  Call  SetActorVar   ( .Actor:Self 00000000 00000000 )
   94:  Call  SetActorVar   ( .Actor:Self 00000001 00000000 )
   AC:  Call  SetActorVar   ( .Actor:Self 00000002 00000000 )
   C4:  Call  SetActorVar   ( .Actor:Self 00000003 00000000 )
   DC:  Call  SetActorVar   ( .Actor:Self 00000004 00000000 )
   F4:  Call  SetActorVar   ( .Actor:Self 00000005 00000000 )
  10C:  Call  SetActorVar   ( .Actor:Self 00000006 00000000 )
  124:  Call  SetActorVar   ( .Actor:Self 00000007 00000000 )
  13C:  Call  SetActorVar   ( .Actor:Self 00000008 00000000 )
  154:  Call  SetActorVar   ( .Actor:Self 00000009 FFFFFFFF )
  16C:  Call  SetActorVar   ( .Actor:Self 0000000A 00000000 )
  184:  Call  SetActorVar   ( .Actor:Self 0000000B FFFFFFFF )
  19C:  Return
  1A4:  End
}

% Origin: HINT
#new:Script $Script_8021F97C
{
    0:  Call  GetActorVar   ( .Actor:Self 00000001 *Var0 )
   18:  If  *Var0  ==  00000001
   28:  	Return
   30:  EndIf
   38:  Call  GetActorVar   ( .Actor:Self 00000009 *Var0 )
   50:  Call  ActorExists   ( *Var0 *Var1 )
   64:  If  *Var1  ==  .False
   74:  	Return
   7C:  EndIf
   84:  Call  SetActorVar       ( .Actor:Self 0000000A 00000000 )
   9C:  Call  GetLastElement    ( *VarA )
   AC:  If  *VarA  &  20000000
   BC:  	Label  0
   C8:  	Call  GetBattleFlags    ( *VarA )
   D8:  	If  *VarA  &  00000100
   E8:  		Wait  1`
   F4:  		Goto  0
  100:  	EndIf
  108:  EndIf
  110:  Call  GetActorVar   ( .Actor:Self 00000009 *Var0 )
  128:  Call  SetActorVar   ( .Actor:Self 00000009 FFFFFFFF )
  140:  Call  GetActorFlags ( .Actor:Self *VarA )
  154:  If  *VarA  &  00000200
  164:  	Call  SetPartEventBits  ( .Actor:Self 00000002 00400000 .False )
  180:  Else
  188:  	Call  SetPartEventBits  ( .Actor:Self 00000001 00400000 .False )
  1A4:  EndIf
  1AC:  Call  GetActorPos   ( *Var0 *Var1 *Var2 *Var3 )
  1C8:  Call  RemoveActor   ( *Var0 )
  1D8:  Thread
  1E0:  	Add   *Var3  00000002
  1F0:  	Loop  00000002
  1FC:  		Call  PlayEffect    ( ~FX:BigSmokePuff *Var1 *Var2 *Var3 00000000 00000000 00000000 00000000 00000000 00000000 00000000 00000000 00000000 00000000 )
  240:  		Wait  2`
  24C:  	EndLoop
  254:  EndThread
  25C:  Return
  264:  End
}

#new:Script $Script_HandleEvent_8021FBE8
{
    0:  Call  UseIdleAnimation  ( .Actor:Self .False )
   14:  Call  EnableIdleScript  ( .Actor:Self 00000000 )
   28:  Call  SetPartAlpha      ( .Actor:Self 00000001 000000FF )
   40:  Call  GetLastEvent      ( .Actor:Self *Var0 )
   54:  Switch  *Var0
   60:  	Case  ==  .Event:HitCombo % 9
   6C:  		Call  GetActorVar   ( .Actor:Self 00000000 *Var0 )
   84:  		ConstOR  *Var0 00000001
   94:  		Call  SetActorVar   ( .Actor:Self 00000000 *Var0 )
   AC:  		SetConst  *Var0  00000001
   BC:  		SetConst  *Var1  00560004
   CC:  		ExecWait  DoNormalHit
   D8:  	CaseOR  ==  .Event:Hit % A
   E4:  	CaseOR  ==  .Event:UpAndAway % 3D
   F0:  		SetConst  *Var0  00000001
  100:  		SetConst  *Var1  00560004
  110:  		ExecWait  DoNormalHit
  11C:  		ExecWait  $Script_8021F97C
  128:  	EndCaseGroup
  130:  	Case  ==  .Event:BurnHit % E
  13C:  		SetConst  *Var0  00000001
  14C:  		SetConst  *Var1  00560005
  15C:  		SetConst  *Var2  00560006
  16C:  		ExecWait  DoBurnHit
  178:  		ExecWait  $Script_8021F97C
  184:  	Case  ==  .Event:BurnDeath % 24
  190:  		SetConst  *Var0  00000001
  1A0:  		SetConst  *Var1  00560005
  1B0:  		SetConst  *Var2  00560006
  1C0:  		ExecWait  DoBurnHit
  1CC:  		ExecWait  $Script_8021F97C
  1D8:  		SetConst  *Var0  00000001
  1E8:  		SetConst  *Var1  00560006
  1F8:  		ExecWait  DoDeath
  204:  		Return
  20C:  	Case  ==  .Event:SpinSmashHit % B
  218:  		SetConst  *Var0  00000001
  228:  		SetConst  *Var1  00560004
  238:  		ExecWait  DoSpinSmashHit
  244:  		ExecWait  $Script_8021F97C
  250:  	Case  ==  .Event:SpinSmashDeath % 21
  25C:  		SetConst  *Var0  00000001
  26C:  		SetConst  *Var1  00560004
  27C:  		ExecWait  DoSpinSmashHit
  288:  		ExecWait  $Script_8021F97C
  294:  		SetConst  *Var0  00000001
  2A4:  		SetConst  *Var1  00560004
  2B4:  		ExecWait  DoDeath
  2C0:  		Return
  2C8:  	Case  ==  00000017 % 17
  2D4:  		SetConst  *Var0  00000001
  2E4:  		SetConst  *Var1  00560001
  2F4:  		ExecWait  DoImmune
  300:  	Case  ==  .Event:Immune % 19
  30C:  		SetConst  *Var0  00000001
  31C:  		SetConst  *Var1  00560001
  32C:  		ExecWait  DoImmune
  338:  		Call  GetActorVar   ( .Actor:Self 00000000 *Var0 )
  350:  		If  *Var0  &  00000001
  360:  			ExecWait  $Script_8021F97C
  36C:  			Return
  374:  		EndIf
  37C:  		Call  GetStatusFlags    ( .Actor:Self *Var0 )
  390:  		If  *Var0  !=  ~Flags:StatusFlags:0 % 0
  3A0:  			ExecWait  $Script_8021F97C
  3AC:  		EndIf
  3B4:  	Case  ==  .Event:Death % 20
  3C0:  		SetConst  *Var0  00000001
  3D0:  		SetConst  *Var1  00560004
  3E0:  		ExecWait  DoNormalHit
  3EC:  		ExecWait  $Script_8021F97C
  3F8:  		Wait  10`
  404:  		SetConst  *Var0  00000001
  414:  		SetConst  *Var1  00560004
  424:  		ExecWait  DoDeath
  430:  		Return
  438:  	Case  ==  .Event:RecoverStatus % 31
  444:  		SetConst  *Var0  00000001
  454:  		SetConst  *Var1  00560001
  464:  		ExecWait  DoRecover
  470:  	Case  ==  .Event:ScareAway % 39
  47C:  		ExecWait  $Script_8021F97C
  488:  		Call  SetAnimation  ( .Actor:Self 00000001 00560004 )
  4A0:  		Call  SetActorJumpGravity   ( .Actor:Self *Fixed[1.5] )
  4B4:  		Call  GetActorPos   ( .Actor:Self *Var0 *Var1 *Var2 )
  4D0:  		Call  SetGoalPos    ( .Actor:Self *Var0 *Var1 *Var2 )
  4EC:  		Call  JumpToGoal    ( .Actor:Self  15` .False .True .False )
  50C:  		Wait  15`
  518:  		Call  SetAnimation  ( .Actor:Self 00000001 00560002 )
  530:  		ExecWait  $Script_RunAway
  53C:  		Return
  544:  	Case  ==  .Event:BeginAirLift % 3A
  550:  		SetConst  *Var0  00000001
  560:  		SetConst  *Var1  00560002
  570:  		ExecWait  DoAirLift
  57C:  	Case  ==  .Event:BlowAway % 16
  588:  		ExecWait  $Script_8021F97C
  594:  		Call  GetStatusFlags    ( .Actor:Self *Var0 )
  5A8:  		If  *Var0  !&  ~Flags:StatusFlags:Sleep|Frozen|Fear|Paralyze|Dizzy|Stone|Stop % 35D000
  5B8:  			If  *Var0  &  ~Flags:StatusFlags:Shrink % 80000
  5C8:  				Call  SetPartDispOffset ( .Actor:Self 00000001 00000000 00000002 00000000 )
  5E8:  			Else
  5F0:  				Call  SetPartDispOffset ( .Actor:Self 00000001 FFFFFFFC 00000005 00000000 )
  610:  			EndIf
  618:  		EndIf
  620:  		SetConst  *Var0  00000001
  630:  		SetConst  *Var1  00560004
  640:  		ExecWait  DoBlowAway
  64C:  		Return
  654:  	Case  ==  .Event:AirLiftFailed % 1F
  660:  		SetConst  *Var0  00000001
  670:  		SetConst  *Var1  00560001
  680:  		ExecWait  DoImmune
  68C:  	Case  ==  .Event:StarBeam % 13
  698:  		SetConst  *Var0  00000001
  6A8:  		SetConst  *Var1  00560004
  6B8:  		ExecWait  DoNormalHit
  6C4:  		ExecWait  $Script_8021F97C
  6D0:  	Default
  6D8:  EndSwitch
  6E0:  Call  EnableIdleScript  ( .Actor:Self 00000001 )
  6F4:  Call  UseIdleAnimation  ( .Actor:Self .True )
  708:  Return
  710:  End
}

% Origin: HINT
#new:Script $Script_HandleEvent_80220300
{
    0:  Call  UseIdleAnimation  ( .Actor:Self .False )
   14:  Call  EnableIdleScript  ( .Actor:Self 00000000 )
   28:  Call  SetPartAlpha      ( .Actor:Self 00000002 000000FF )
   40:  Call  GetLastEvent      ( .Actor:Self *Var0 )
   54:  Switch  *Var0
   60:  	Case  ==  .Event:HitCombo % 9
   6C:  		Call  GetActorVar   ( .Actor:Self 00000000 *Var0 )
   84:  		ConstOR  *Var0 00000001
   94:  		Call  SetActorVar   ( .Actor:Self 00000000 *Var0 )
   AC:  		ExecWait  $Script_8021EC94
   B8:  		SetConst  *Var0  00000002
   C8:  		SetConst  *Var1  00570004
   D8:  		ExecWait  DoNormalHit
   E4:  	CaseOR  ==  .Event:Hit % A
   F0:  	CaseOR  ==  .Event:FallTrigger % C
   FC:  		ExecWait  $Script_8021EC94
  108:  		SetConst  *Var0  00000002
  118:  		SetConst  *Var1  00570004
  128:  		ExecWait  DoNormalHit
  134:  		ExecWait  $Script_8021F97C
  140:  		ExecWait  $Script_8021EDA0
  14C:  	EndCaseGroup
  154:  	Case  ==  .Event:UpAndAway % 3D
  160:  		SetConst  *Var0  00000002
  170:  		SetConst  *Var1  00570004
  180:  		ExecWait  DoNormalHit
  18C:  		ExecWait  $Script_8021F97C
  198:  	CaseOR  ==  .Event:BurnHit % E
  1A4:  	CaseOR  ==  0000000F % F
  1B0:  		ExecWait  $Script_8021EC94
  1BC:  		SetConst  *Var0  00000002
  1CC:  		SetConst  *Var1  00570005
  1DC:  		SetConst  *Var2  00570006
  1EC:  		ExecWait  DoBurnHit
  1F8:  		ExecWait  $Script_8021F97C
  204:  		ExecWait  $Script_8021EDA0
  210:  	EndCaseGroup
  218:  	Case  ==  .Event:BurnDeath % 24
  224:  		SetConst  *Var0  00000002
  234:  		SetConst  *Var1  00570005
  244:  		SetConst  *Var2  00570006
  254:  		ExecWait  DoBurnHit
  260:  		ExecWait  $Script_8021F97C
  26C:  		SetConst  *Var0  00000002
  27C:  		SetConst  *Var1  00570006
  28C:  		ExecWait  DoDeath
  298:  		Return
  2A0:  	Case  ==  .Event:SpinSmashHit % B
  2AC:  		SetConst  *Var0  00000002
  2BC:  		SetConst  *Var1  00570004
  2CC:  		ExecWait  DoSpinSmashHit
  2D8:  		ExecWait  $Script_8021F97C
  2E4:  	Case  ==  .Event:SpinSmashDeath % 21
  2F0:  		SetConst  *Var0  00000002
  300:  		SetConst  *Var1  00570004
  310:  		ExecWait  DoSpinSmashHit
  31C:  		ExecWait  $Script_8021F97C
  328:  		SetConst  *Var0  00000002
  338:  		SetConst  *Var1  00570004
  348:  		ExecWait  DoDeath
  354:  		Return
  35C:  	Case  ==  00000017 % 17
  368:  		SetConst  *Var0  00000002
  378:  		SetConst  *Var1  00570001
  388:  		ExecWait  DoImmune
  394:  	Case  ==  .Event:Immune % 19
  3A0:  		SetConst  *Var0  00000002
  3B0:  		SetConst  *Var1  00570001
  3C0:  		ExecWait  DoImmune
  3CC:  		Call  GetActorVar   ( .Actor:Self 00000000 *Var0 )
  3E4:  		If  *Var0  &  00000001
  3F4:  			ExecWait  $Script_8021F97C
  400:  			Return
  408:  		EndIf
  410:  		Call  GetStatusFlags    ( .Actor:Self *Var0 )
  424:  		If  *Var0  !=  ~Flags:StatusFlags:0 % 0
  434:  			ExecWait  $Script_8021F97C
  440:  		EndIf
  448:  	Case  ==  .Event:Death % 20
  454:  		SetConst  *Var0  00000002
  464:  		SetConst  *Var1  00570004
  474:  		ExecWait  DoNormalHit
  480:  		ExecWait  $Script_8021F97C
  48C:  		Wait  10`
  498:  		SetConst  *Var0  00000002
  4A8:  		SetConst  *Var1  00570004
  4B8:  		ExecWait  DoDeath
  4C4:  		Return
  4CC:  	Case  ==  .Event:BeginFirstStrike % 38
  4D8:  		Call  SetActorPos       ( .Actor:Self  20`  0`  0` )
  4F4:  		Call  HPBarToCurrent    ( .Actor:Self )
  504:  	Case  ==  .Event:EndFirstStrike % 35
  510:  		Call  SetAnimation  ( .Actor:Self 00000002 00570001 )
  528:  		Call  SetGoalToHome ( .Actor:Self )
  538:  		Call  SetActorSpeed ( .Actor:Self *Fixed[4.0] )
  54C:  		Call  FlyToGoal     ( .Actor:Self  0`  1` .Easing:Linear )
  568:  		Call  SetAnimation  ( .Actor:Self 00000002 00570001 )
  580:  		Call  HPBarToHome   ( .Actor:Self )
  590:  	Case  ==  .Event:RecoverStatus % 31
  59C:  		SetConst  *Var0  00000002
  5AC:  		SetConst  *Var1  00570001
  5BC:  		ExecWait  DoRecover
  5C8:  	Case  ==  .Event:ScareAway % 39
  5D4:  		ExecWait  $Script_8021F97C
  5E0:  		Call  SetAnimation  ( .Actor:Self 00000002 00570004 )
  5F8:  		Call  SetActorJumpGravity   ( .Actor:Self *Fixed[1.5] )
  60C:  		Call  GetActorPos   ( .Actor:Self *Var0 *Var1 *Var2 )
  628:  		Call  SetGoalPos    ( .Actor:Self *Var0 *Var1 *Var2 )
  644:  		Call  JumpToGoal    ( .Actor:Self  15` .False .True .False )
  664:  		Wait  15`
  670:  		Call  SetAnimation  ( .Actor:Self 00000002 00570002 )
  688:  		ExecWait  $Script_RunAway
  694:  		Return
  69C:  	Case  ==  .Event:BeginAirLift % 3A
  6A8:  		SetConst  *Var0  00000002
  6B8:  		SetConst  *Var1  00570002
  6C8:  		ExecWait  DoAirLift
  6D4:  	Case  ==  .Event:BlowAway % 16
  6E0:  		ExecWait  $Script_8021F97C
  6EC:  		Call  GetStatusFlags    ( .Actor:Self *Var0 )
  700:  		If  *Var0  !&  ~Flags:StatusFlags:Sleep|Frozen|Fear|Paralyze|Dizzy|Stone|Stop % 35D000
  710:  			If  *Var0  &  ~Flags:StatusFlags:Shrink % 80000
  720:  				Call  SetPartDispOffset ( .Actor:Self 00000002 FFFFFFFD 00000000 00000000 )
  740:  			Else
  748:  				Call  SetPartDispOffset ( .Actor:Self 00000002 FFFFFFF1 00000000 00000000 )
  768:  			EndIf
  770:  		EndIf
  778:  		SetConst  *Var0  00000002
  788:  		SetConst  *Var1  00570004
  798:  		ExecWait  DoBlowAway
  7A4:  		Return
  7AC:  	Case  ==  .Event:AirLiftFailed % 1F
  7B8:  		SetConst  *Var0  00000002
  7C8:  		SetConst  *Var1  00570001
  7D8:  		ExecWait  DoImmune
  7E4:  	Case  ==  .Event:StarBeam % 13
  7F0:  		SetConst  *Var0  00000002
  800:  		SetConst  *Var1  00570004
  810:  		ExecWait  DoNormalHit
  81C:  		ExecWait  $Script_8021F97C
  828:  	Default
  830:  EndSwitch
  838:  Call  EnableIdleScript  ( .Actor:Self 00000001 )
  84C:  Call  UseIdleAnimation  ( .Actor:Self .True )
  860:  Return
  868:  End
}

% Origin: HINT
#new:Script $Script_HealOne
{
    0:  Call  SetActorVar       ( .Actor:Self 0000000A 00000000 )
   18:  Call  SetActorVar       ( .Actor:Self 0000000B 00000000 )
   30:  Call  AddActorVar       ( .Actor:Self 00000004 00000001 )
   48:  Call  UseIdleAnimation  ( .Actor:Self .False )
   5C:  Call  EnableIdleScript  ( .Actor:Self 00000000 )
   70:  Call  SetTargetActor    ( .Actor:Self .Actor:Player )
   84:  Call  UseBattleCamPreset    ( 0000000E )
   94:  Call  BattleCamTargetActor  ( .Actor:Self )
   A4:  Call  MoveBattleCamOver (  15` )
   B4:  Wait  15`
   C0:  Call  GetActorFlags     ( .Actor:Self *Var0 )
   D4:  If  *Var0  !&  00000200
   E4:  	Call  SetAnimation  ( .Actor:Self 00000001 00560002 )
   FC:  Else
  104:  	Call  SetAnimation  ( .Actor:Self 00000002 00570002 )
  11C:  EndIf
  124:  Wait  5`
  130:  Call  PlaySoundAtActor  ( .Actor:Self .Sound:SpellCast1 )
  144:  Call  GetActorFlags     ( .Actor:Self *Var0 )
  158:  If  *Var0  !&  00000200
  168:  	Call  GetActorPos       ( .Actor:Self *Var0 *Var1 *Var2 )
  184:  	Call  GetStatusFlags    ( .Actor:Self *VarA )
  198:  	If  *VarA  &  ~Flags:StatusFlags:Shrink % 80000
  1A8:  		Sub   *Var0  00000006
  1B8:  		Add   *Var1  0000000C
  1C8:  		Sub   *Var2  00000002
  1D8:  		Call  PlayEffect    ( ~FX:RadialFlowOut:RedEnergy *Var0 *Var1 *Var2 *Fixed[0.12] 0000001E 00000000 00000000 00000000 00000000 00000000 00000000 00000000 )
  21C:  	Else
  224:  		Sub   *Var0  00000010
  234:  		Add   *Var1  0000001F
  244:  		Sub   *Var2  00000002
  254:  		Call  PlayEffect    ( ~FX:RadialFlowOut:RedEnergy *Var0 *Var1 *Var2 *Fixed[0.3] 0000001E 00000000 00000000 00000000 00000000 00000000 00000000 00000000 )
  298:  	EndIf
  2A0:  Else
  2A8:  	Call  GetActorPos       ( .Actor:Self *Var0 *Var1 *Var2 )
  2C4:  	Call  GetStatusFlags    ( .Actor:Self *VarA )
  2D8:  	If  *VarA  &  ~Flags:StatusFlags:Shrink % 80000
  2E8:  		Sub   *Var0  0000000C
  2F8:  		Add   *Var1  0000000E
  308:  		Sub   *Var2  00000002
  318:  		Call  PlayEffect    ( ~FX:RadialFlowOut:RedEnergy *Var0 *Var1 *Var2 *Fixed[0.12] 0000001E 00000000 00000000 00000000 00000000 00000000 00000000 00000000 )
  35C:  	Else
  364:  		Sub   *Var0  0000001E
  374:  		Add   *Var1  00000024
  384:  		Sub   *Var2  00000002
  394:  		Call  PlayEffect    ( ~FX:RadialFlowOut:RedEnergy *Var0 *Var1 *Var2 *Fixed[0.3] 0000001E 00000000 00000000 00000000 00000000 00000000 00000000 00000000 )
  3D8:  	EndIf
  3E0:  EndIf
  3E8:  Wait  30`
  3F4:  Call  GetActorFlags ( .Actor:Self *Var0 )
  408:  If  *Var0  !&  00000200
  418:  	Call  SetAnimation  ( .Actor:Self 00000001 00560001 )
  430:  Else
  438:  	Call  SetAnimation  ( .Actor:Self 00000002 00570001 )
  450:  EndIf
  458:  Wait  5`
  464:  Thread
  46C:  	Wait  5`
  478:  	Call  PlaySoundAtActor  ( *VarB 0000206D )
  48C:  	Call  PlaySoundAtActor  ( *VarB 00000214 )
  4A0:  	Wait  30`
  4AC:  	Call  PlaySoundAtActor  ( *VarB 0000025C )
  4C0:  EndThread
  4C8:  Thread
  4D0:  	Call  8026BF48  ( 00000001 )
  4E0:  	Call  HealActor ( *VarB 00000005 .False )
  4F8:  	Call  8026BF48  ( 00000000 )
  508:  EndThread
  510:  Call  WaitForBuffDone ( )
  51C:  Call  UseBattleCamPreset    ( 00000002 )
  52C:  Call  MoveBattleCamOver (  10` )
  53C:  Wait  10`
  548:  Call  YieldTurn ( )
  554:  Call  EnableIdleScript  ( .Actor:Self 00000001 )
  568:  Call  UseIdleAnimation  ( .Actor:Self .True )
  57C:  Return
  584:  End
}

% Origin: HINT
#new:Script $Script_HealAll
{
    0:  Call  SetActorVar       ( .Actor:Self 0000000A 00000000 )
   18:  Call  SetActorVar       ( .Actor:Self 0000000B 00000001 )
   30:  Call  AddActorVar       ( .Actor:Self 00000003 00000001 )
   48:  Call  UseIdleAnimation  ( .Actor:Self .False )
   5C:  Call  EnableIdleScript  ( .Actor:Self 00000000 )
   70:  Call  SetTargetActor    ( .Actor:Self .Actor:Player )
   84:  Call  UseBattleCamPreset    ( 0000000E )
   94:  Call  BattleCamTargetActor  ( .Actor:Self )
   A4:  Call  MoveBattleCamOver (  15` )
   B4:  Wait  15`
   C0:  Call  GetActorFlags     ( .Actor:Self *Var0 )
   D4:  If  *Var0  !&  00000200
   E4:  	Call  SetAnimation  ( .Actor:Self 00000001 00560002 )
   FC:  Else
  104:  	Call  SetAnimation  ( .Actor:Self 00000002 00570002 )
  11C:  EndIf
  124:  Wait  5`
  130:  Call  PlaySoundAtActor  ( .Actor:Self .Sound:SpellCast1 )
  144:  Call  GetActorFlags     ( .Actor:Self *Var0 )
  158:  If  *Var0  !&  00000200
  168:  	Call  GetActorPos       ( .Actor:Self *Var0 *Var1 *Var2 )
  184:  	Call  GetStatusFlags    ( .Actor:Self *VarA )
  198:  	If  *VarA  &  ~Flags:StatusFlags:Shrink % 80000
  1A8:  		Sub   *Var0  00000006
  1B8:  		Add   *Var1  0000000C
  1C8:  		Sub   *Var2  00000002
  1D8:  		Call  PlayEffect    ( ~FX:RadialFlowOut:RedEnergy *Var0 *Var1 *Var2 *Fixed[0.12] 0000001E 00000000 00000000 00000000 00000000 00000000 00000000 00000000 )
  21C:  	Else
  224:  		Sub   *Var0  00000010
  234:  		Add   *Var1  0000001F
  244:  		Sub   *Var2  00000002
  254:  		Call  PlayEffect    ( ~FX:RadialFlowOut:RedEnergy *Var0 *Var1 *Var2 *Fixed[0.3] 0000001E 00000000 00000000 00000000 00000000 00000000 00000000 00000000 )
  298:  	EndIf
  2A0:  Else
  2A8:  	Call  GetActorPos       ( .Actor:Self *Var0 *Var1 *Var2 )
  2C4:  	Call  GetStatusFlags    ( .Actor:Self *VarA )
  2D8:  	If  *VarA  &  ~Flags:StatusFlags:Shrink % 80000
  2E8:  		Sub   *Var0  0000000C
  2F8:  		Add   *Var1  0000000E
  308:  		Sub   *Var2  00000002
  318:  		Call  PlayEffect    ( ~FX:RadialFlowOut:RedEnergy *Var0 *Var1 *Var2 *Fixed[0.12] 0000001E 00000000 00000000 00000000 00000000 00000000 00000000 00000000 )
  35C:  	Else
  364:  		Sub   *Var0  0000001E
  374:  		Add   *Var1  00000024
  384:  		Sub   *Var2  00000002
  394:  		Call  PlayEffect    ( ~FX:RadialFlowOut:RedEnergy *Var0 *Var1 *Var2 *Fixed[0.3] 0000001E 00000000 00000000 00000000 00000000 00000000 00000000 00000000 )
  3D8:  	EndIf
  3E0:  EndIf
  3E8:  Wait  30`
  3F4:  Call  GetActorFlags ( .Actor:Self *Var0 )
  408:  If  *Var0  !&  00000200
  418:  	Call  SetAnimation  ( .Actor:Self 00000001 00560001 )
  430:  Else
  438:  	Call  SetAnimation  ( .Actor:Self 00000002 00570001 )
  450:  EndIf
  458:  Wait  5`
  464:  Call  EnemyCreateTargetList ( 00008002 )
  474:  Call  InitTargetIterator ( )
  480:  Label  0
  48C:  Set   *Flag[00]  .False
  49C:  Call  GetOwnerTarget        ( *Var0 *Var1 )
  4B0:  Call  GetOriginalActorType  ( *Var0 *Var1 )
  4C4:  If  *Var1  ==  00000047
  4D4:  	Call  GetActorVar   ( *Var0 00000008 *Var1 )
  4EC:  	If  *Var1  ==  00000001
  4FC:  		Set   *Flag[00]  .True
  50C:  	EndIf
  514:  EndIf
  51C:  If  *Flag[00]  ==  .False
  52C:  	Thread
  534:  		Wait  5`
  540:  		Call  PlaySoundAtActor  ( *Var0 0000206D )
  554:  		Call  PlaySoundAtActor  ( *Var0 00000214 )
  568:  		Wait  30`
  574:  		Call  PlaySoundAtActor  ( *Var0 0000025C )
  588:  	EndThread
  590:  	Thread
  598:  		Call  8026BF48  ( 00000001 )
  5A8:  		Call  HealActor ( *Var0 00000003 .True )
  5C0:  		Call  8026BF48  ( 00000000 )
  5D0:  	EndThread
  5D8:  EndIf
  5E0:  Call  ChooseNextTarget  ( .Iter:Next *Var0 )
  5F4:  If  *Var0  !=  FFFFFFFF
  604:  	Goto  0
  610:  EndIf
  618:  Call  WaitForBuffDone ( )
  624:  Wait  1`
  630:  Call  UseBattleCamPreset    ( 00000002 )
  640:  Call  MoveBattleCamOver (  10` )
  650:  Wait  10`
  65C:  Call  YieldTurn ( )
  668:  Call  EnableIdleScript  ( .Actor:Self 00000001 )
  67C:  Call  UseIdleAnimation  ( .Actor:Self .True )
  690:  Return
  698:  End
}

% Origin: HINT
#new:Script $Script_ShapeSpell
{
    0:  Call  SetActorVar   ( .Actor:Self 0000000B 00000002 )
   18:  Set   *Flag[00]  .False
   28:  Set   *Flag[01]  .False
   38:  Call  GetActorVar   ( .Actor:Self 0000000A *Var0 )
   50:  If  *Var0  ==  00000001
   60:  	Set   *Flag[00]  .True
   70:  	Call  GetActorVar   ( .Actor:Self 00000009 *VarA )
   88:  EndIf
   90:  Call  GetActorFlags ( .Actor:Self *Var0 )
   A4:  If  *Var0  &  00000200
   B4:  	Set   *Flag[01]  .True
   C4:  EndIf
   CC:  Call  UseIdleAnimation  ( .Actor:Self .False )
   E0:  If  *Flag[00]  ==  .True
   F0:  	Call  UseIdleAnimation  ( *VarA .False )
  104:  EndIf
  10C:  Call  SetTargetActor    ( .Actor:Self .Actor:Player )
  120:  Call  GetBattlePhase    ( *Var0 )
  130:  If  *Var0  ==  00000001
  140:  	Call  UseBattleCamPreset    ( 00000002 )
  150:  	Call  MoveBattleCamOver     (  1` )
  160:  Else
  168:  	Call  UseBattleCamPreset    ( 00000002 )
  178:  	Call  MoveBattleCamOver     (  10` )
  188:  EndIf
  190:  Call  PlaySoundAtActor  ( .Actor:Self .Sound:SpellCast1 )
  1A4:  If  *Flag[01]  ==  .False
  1B4:  	If  *Flag[00]  ==  .True
  1C4:  		Call  SetAnimation  ( *VarA 00000001 00560002 )
  1DC:  		Call  GetActorPos   ( *VarA *Var0 *Var1 *Var2 )
  1F8:  		Sub   *Var0  00000011
  208:  		Add   *Var1  00000021
  218:  		Call  PlayEffect    ( ~FX:GatherMagic:Pink *Var0 *Var1 *Var2 *Fixed[0.5] 0000001E 00000000 00000000 00000000 00000000 00000000 00000000 00000000 )
  25C:  	EndIf
  264:  	Call  SetAnimation      ( .Actor:Self 00000001 00560002 )
  27C:  	Call  GetActorPos       ( .Actor:Self *Var0 *Var1 *Var2 )
  298:  	Call  GetStatusFlags    ( .Actor:Self *Var3 )
  2AC:  	If  *Var3  &  ~Flags:StatusFlags:Shrink % 80000
  2BC:  		Sub   *Var0  00000006
  2CC:  		Add   *Var1  0000000D
  2DC:  	Else
  2E4:  		Sub   *Var0  00000011
  2F4:  		Add   *Var1  00000021
  304:  	EndIf
  30C:  	Call  PlayEffect    ( ~FX:GatherMagic:Pink *Var0 *Var1 *Var2 *Fixed[0.5] 0000001E 00000000 00000000 00000000 00000000 00000000 00000000 00000000 )
  350:  Else
  358:  	If  *Flag[00]  ==  .True
  368:  		Call  SetAnimation  ( *VarA 00000001 00570002 )
  380:  		Call  GetActorPos   ( *VarA *Var0 *Var1 *Var2 )
  39C:  		Sub   *Var0  0000001E
  3AC:  		Add   *Var1  00000024
  3BC:  		Call  PlayEffect    ( ~FX:GatherMagic:Pink *Var0 *Var1 *Var2 *Fixed[0.5] 0000001E 00000000 00000000 00000000 00000000 00000000 00000000 00000000 )
  400:  	EndIf
  408:  	Call  SetAnimation      ( .Actor:Self 00000002 00570002 )
  420:  	Call  GetActorPos       ( .Actor:Self *Var0 *Var1 *Var2 )
  43C:  	Call  GetStatusFlags    ( .Actor:Self *Var3 )
  450:  	If  *Var3  &  ~Flags:StatusFlags:Shrink % 80000
  460:  		Sub   *Var0  0000000C
  470:  		Add   *Var1  0000000E
  480:  	Else
  488:  		Sub   *Var0  0000001E
  498:  		Add   *Var1  00000024
  4A8:  	EndIf
  4B0:  	Call  PlayEffect    ( ~FX:GatherMagic:Pink *Var0 *Var1 *Var2 *Fixed[0.5] 0000001E 00000000 00000000 00000000 00000000 00000000 00000000 00000000 )
  4F4:  EndIf
  4FC:  Wait  30`
  508:  Call  EnemyTestTarget   ( .Actor:Self *Var9 ~Flags:DamageType:0 00000000 00000001 00000010 )
  52C:  Switch  *Var9
  538:  	CaseOR  ==  .HitResult:Miss % 6
  544:  	CaseOR  ==  .HitResult:Lucky % 5
  550:  		If  *Flag[00]  ==  .True
  560:  			Call  PlaySoundAtActor  ( *VarA .Sound:SpellCast2 )
  574:  		EndIf
  57C:  		Call  PlaySoundAtActor  ( .Actor:Self .Sound:SpellCast2 )
  590:  		If  *Flag[01]  ==  .False
  5A0:  			If  *Flag[00]  ==  .True
  5B0:  				Call  SetAnimation  ( *VarA 00000001 00560003 )
  5C8:  			EndIf
  5D0:  			Call  SetAnimation  ( .Actor:Self 00000001 00560003 )
  5E8:  		Else
  5F0:  			If  *Flag[00]  ==  .True
  600:  				Call  SetAnimation  ( *VarA 00000001 00570003 )
  618:  			EndIf
  620:  			Call  SetAnimation  ( .Actor:Self 00000002 00570003 )
  638:  		EndIf
  640:  		Wait  5`
  64C:  		Call  SetGoalToTarget   ( .Actor:Self )
  65C:  		Call  GetGoalPos        ( .Actor:Self *Var4 *Var5 *Var6 )
  678:  		Sub   *Var4  00000032
  688:  		Set   *Var5  00000000
  698:  		If  *Flag[01]  ==  .False
  6A8:  			If  *Flag[00]  ==  .True
  6B8:  				Call  GetActorPos   ( *VarA *Var0 *Var1 *Var2 )
  6D4:  				Sub   *Var0  00000014
  6E4:  				Add   *Var1  00000014
  6F4:  				Call  $Function_80218150    ( *Var0 *Var1 *Var6 *Var4 *Var5 *Var6 0000001E )
  71C:  			EndIf
  724:  			Call  GetActorPos       ( .Actor:Self *Var0 *Var1 *Var2 )
  740:  			Call  GetStatusFlags    ( .Actor:Self *Var3 )
  754:  			If  *Var3  &  ~Flags:StatusFlags:Shrink % 80000
  764:  				Sub   *Var0  00000008
  774:  				Add   *Var1  00000008
  784:  			Else
  78C:  				Sub   *Var0  00000014
  79C:  				Add   *Var1  00000014
  7AC:  			EndIf
  7B4:  			Call  $Function_80218150    ( *Var0 *Var1 *Var6 *Var4 *Var5 *Var6 0000001E )
  7DC:  		Else
  7E4:  			If  *Flag[00]  ==  .True
  7F4:  				Call  GetActorPos   ( *VarA *Var0 *Var1 *Var2 )
  810:  				Sub   *Var0  00000014
  820:  				Add   *Var1  00000014
  830:  				Call  $Function_80218150    ( *Var0 *Var1 *Var6 *Var4 *Var5 *Var6 0000001E )
  858:  			EndIf
  860:  			Call  GetActorPos       ( .Actor:Self *Var0 *Var1 *Var2 )
  87C:  			Call  GetStatusFlags    ( .Actor:Self *Var3 )
  890:  			If  *Var3  &  ~Flags:StatusFlags:Shrink % 80000
  8A0:  				Sub   *Var0  00000008
  8B0:  				Add   *Var1  00000008
  8C0:  			Else
  8C8:  				Sub   *Var0  00000014
  8D8:  				Add   *Var1  00000014
  8E8:  			EndIf
  8F0:  			Call  $Function_80218150    ( *Var0 *Var1 *Var6 *Var4 *Var5 *Var6 0000001E )
  918:  		EndIf
  920:  		Wait  50`
  92C:  		If  *Var9  ==  .HitResult:Lucky % 5
  93C:  			Call  EnemyTestTarget   ( .Actor:Self *Var0 ~Flags:DamageType:TriggerLucky 00000000 00000000 00000000 )
  960:  		EndIf
  968:  		Wait  15`
  974:  		Call  YieldTurn ( )
  980:  		Call  UseIdleAnimation  ( .Actor:Self .True )
  994:  		If  *Flag[00]  ==  .True
  9A4:  			Call  UseIdleAnimation  ( *VarA .True )
  9B8:  		EndIf
  9C0:  		Return
  9C8:  	EndCaseGroup
  9D0:  EndSwitch
  9D8:  If  *Flag[00]  ==  .True
  9E8:  	Call  PlaySoundAtActor  ( *VarA .Sound:SpellCast2 )
  9FC:  EndIf
  A04:  Call  PlaySoundAtActor  ( .Actor:Self .Sound:SpellCast2 )
  A18:  If  *Flag[01]  ==  .False
  A28:  	If  *Flag[00]  ==  .True
  A38:  		Call  SetAnimation  ( *VarA 00000001 00560003 )
  A50:  	EndIf
  A58:  	Call  SetAnimation  ( .Actor:Self 00000001 00560003 )
  A70:  Else
  A78:  	If  *Flag[00]  ==  .True
  A88:  		Call  SetAnimation  ( *VarA 00000001 00570003 )
  AA0:  	EndIf
  AA8:  	Call  SetAnimation  ( .Actor:Self 00000002 00570003 )
  AC0:  EndIf
  AC8:  Wait  5`
  AD4:  Call  SetGoalToTarget   ( .Actor:Self )
  AE4:  Call  GetGoalPos        ( .Actor:Self *Var4 *Var5 *Var6 )
  B00:  If  *Flag[01]  ==  .False
  B10:  	If  *Flag[00]  ==  .True
  B20:  		Call  GetActorPos   ( *VarA *Var0 *Var1 *Var2 )
  B3C:  		Sub   *Var0  00000014
  B4C:  		Add   *Var1  00000014
  B5C:  		Call  $Function_80218150    ( *Var0 *Var1 *Var6 *Var4 *Var5 *Var6 00000014 )
  B84:  	EndIf
  B8C:  	Call  GetActorPos       ( .Actor:Self *Var0 *Var1 *Var2 )
  BA8:  	Call  GetStatusFlags    ( .Actor:Self *Var3 )
  BBC:  	If  *Var3  &  ~Flags:StatusFlags:Shrink % 80000
  BCC:  		Sub   *Var0  00000008
  BDC:  		Add   *Var1  00000008
  BEC:  	Else
  BF4:  		Sub   *Var0  00000014
  C04:  		Add   *Var1  00000014
  C14:  	EndIf
  C1C:  	Call  $Function_80218150    ( *Var0 *Var1 *Var6 *Var4 *Var5 *Var6 00000014 )
  C44:  Else
  C4C:  	If  *Flag[00]  ==  .True
  C5C:  		Call  GetActorPos   ( *VarA *Var0 *Var1 *Var2 )
  C78:  		Sub   *Var0  00000014
  C88:  		Add   *Var1  00000014
  C98:  		Call  $Function_80218150    ( *Var0 *Var1 *Var6 *Var4 *Var5 *Var6 00000014 )
  CC0:  	EndIf
  CC8:  	Call  GetActorPos       ( .Actor:Self *Var0 *Var1 *Var2 )
  CE4:  	Call  GetStatusFlags    ( .Actor:Self *Var3 )
  CF8:  	If  *Var3  &  ~Flags:StatusFlags:Shrink % 80000
  D08:  		Sub   *Var0  00000008
  D18:  		Add   *Var1  00000008
  D28:  	Else
  D30:  		Sub   *Var0  00000014
  D40:  		Add   *Var1  00000014
  D50:  	EndIf
  D58:  	Call  $Function_80218150    ( *Var0 *Var1 *Var6 *Var4 *Var5 *Var6 00000014 )
  D80:  EndIf
  D88:  Wait  18`
  D94:  If  *Flag[00]  ==  .True
  DA4:  	Wait  2`
  DB0:  	Call  EnemyDamageTarget ( .Actor:Self *Var0 ~Flags:DamageType:NoContact|Magic 00000000 00000000 00000006 00000020 )
  DD8:  Else
  DE0:  	Wait  2`
  DEC:  	Call  EnemyDamageTarget ( .Actor:Self *Var0 ~Flags:DamageType:NoContact|Magic 00000000 00000000 00000006 00000020 )
  E14:  EndIf
  E1C:  Switch  *Var0
  E28:  	CaseOR  ==  .HitResult:Hit % 0
  E34:  	CaseOR  ==  .HitResult:QuakeImmune % 2
  E40:  		Wait  20`
  E4C:  		Call  YieldTurn ( )
  E58:  	EndCaseGroup
  E60:  EndSwitch
  E68:  Call  UseIdleAnimation  ( .Actor:Self .True )
  E7C:  If  *Flag[00]  ==  .True
  E8C:  	Call  UseIdleAnimation  ( *VarA .True )
  EA0:  EndIf
  EA8:  Return
  EB0:  End
}

% Origin: HINT
#new:Script $Script_80222654
{
    0:  Call  EnemyCreateTargetList ( 00008002 )
   10:  Call  InitTargetIterator ( )
   1C:  Label  0
   28:  Call  GetOwnerTarget        ( *Var0 *Var1 )
   3C:  Call  GetIndexFromHome      ( *Var0 *Var1 )
   50:  Mod   *Var1  00000004
   60:  Switch  *Var1
   6C:  	Case  ==  00000000
   78:  		Set   *Flag[0B]  .True
   88:  	Case  ==  00000001
   94:  		Set   *Flag[0C]  .True
   A4:  	Case  ==  00000002
   B0:  		Set   *Flag[0D]  .True
   C0:  	Case  ==  00000003
   CC:  		Set   *Flag[0E]  .True
   DC:  EndSwitch
   E4:  Call  ChooseNextTarget  ( .Iter:Next *Var0 )
   F8:  If  *Var0  !=  FFFFFFFF
  108:  	Goto  0
  114:  EndIf
  11C:  Set   *Var0  FFFFFFFF
  12C:  Call  GetIndexFromHome  ( .Actor:Self *Var1 )
  140:  Mod   *Var1  00000004
  150:  Switch  *Var1
  15C:  	Case  ==  00000000
  168:  		If  *Flag[0C]  ==  .False
  178:  			Set   *Var0  00000001
  188:  		EndIf
  190:  	Case  ==  00000001
  19C:  		If  *Flag[0B]  ==  .False
  1AC:  			Set   *Var0  00000000
  1BC:  		EndIf
  1C4:  		If  *Flag[0D]  ==  .False
  1D4:  			Set   *Var0  00000002
  1E4:  		EndIf
  1EC:  	Case  ==  00000002
  1F8:  		If  *Flag[0C]  ==  .False
  208:  			Set   *Var0  00000001
  218:  		EndIf
  220:  		If  *Flag[0E]  ==  .False
  230:  			Set   *Var0  00000003
  240:  		EndIf
  248:  	Case  ==  00000003
  254:  		If  *Flag[0D]  ==  .False
  264:  			Set   *Var0  00000002
  274:  		EndIf
  27C:  EndSwitch
  284:  If  *Var0  !=  FFFFFFFF
  294:  	Call  GetActorFlags ( .Actor:Self *Var1 )
  2A8:  	If  *Var1  &  00000200
  2B8:  		Add   *Var0  00000004
  2C8:  	EndIf
  2D0:  EndIf
  2D8:  Return
  2E0:  End
}

% Origin: HINT
#new:Script $Script_HandleEvent_8022293C
{
    0:  Return
    8:  End
}

% Origin: HINT
#new:Script $Script_Init_8022294C
{
    0:  Call  BindHandleEvent   ( .Actor:Self $Script_HandleEvent_8022293C )
   14:  Call  SetActorVar       ( .Actor:Self 00000001 00000001 )
   2C:  Return
   34:  End
}

% Origin: HINT
#new:Script $Script_Init_80222988
{
    0:  Call  BindHandleEvent   ( .Actor:Self $Script_HandleEvent_8022293C )
   14:  Call  SetActorVar       ( .Actor:Self 00000001 00000001 )
   2C:  Return
   34:  End
}

% Origin: HINT
#new:DefenseTable $DefenseTable_802229C4
{
	.Element:Normal 00000000
	.Element:End
}

% Origin: HINT
#new:DefenseTable $DefenseTable_802229D0
{
	.Element:Normal 00000000
	.Element:End
}

% Origin: HINT
#new:StatusTable $StatusTable_802229DC
{
	.Status:Normal      0`
	.Status:Default     0`
	.Status:Sleep       0`
	.Status:Poison      0`
	.Status:Frozen      0`
	.Status:Dizzy       0`
	.Status:Fear        0`
	.Status:Static      0`
	.Status:Paralyze    0`
	.Status:Shrink      0`
	.Status:Stop        0`
	.Status:DefaultTurnMod    0`
	.Status:SleepTurnMod      0`
	.Status:PoisonTurnMod     0`
	.Status:FrozenTurnMod     0`
	.Status:DizzyTurnMod      0`
	.Status:FearTurnMod       0`
	.Status:StaticTurnMod     0`
	.Status:ParalyzeTurnMod   0`
	.Status:ShrinkTurnMod     0`
	.Status:StopTurnMod       0`
	.Status:End
}

% Origin: HINT
#new:StatusTable $StatusTable_80222A88
{
	.Status:Normal      0`
	.Status:Default     0`
	.Status:Sleep       0`
	.Status:Poison      0`
	.Status:Frozen      0`
	.Status:Dizzy       0`
	.Status:Fear        0`
	.Status:Static      0`
	.Status:Paralyze    0`
	.Status:Shrink      0`
	.Status:Stop        0`
	.Status:DefaultTurnMod    0`
	.Status:SleepTurnMod      0`
	.Status:PoisonTurnMod     0`
	.Status:FrozenTurnMod     0`
	.Status:DizzyTurnMod      0`
	.Status:FearTurnMod       0`
	.Status:StaticTurnMod     0`
	.Status:ParalyzeTurnMod   0`
	.Status:ShrinkTurnMod     0`
	.Status:StopTurnMod       0`
	.Status:End
}

% Origin: HINT
#new:PartsTable $PartsTable_80222B34
{
	00800000 01000000 022300FF $IdleAnimations_8021EA20 $DefenseTable_802229C4 00000020 00000000 FBF40000 00000000
}

% Origin: HINT
#new:PartsTable $PartsTable_80222B58
{
	00800000 01000000 F62300FF $IdleAnimations_8021EA6C $DefenseTable_802229D0 00000020 00000000 00F80000 00000000
}

% Origin: HINT
#new:Actor $Magiclone
{
	% stats
	[Index]        4Fb
	[Level]        26`b
	[MaxHP]        11`b
	[Coins]         0`b
	[Flags]       00200000
	[StatusTable] $StatusTable_802229DC
	% ai
	[PartsCount]    1`s
	[PartsTable]  $PartsTable_80222B34
	[Script]      $Script_Init_8022294C
	% move effectiveness
	[Escape]       40`b
	[Item]          0`b
	[AirLift]       0`b
	[Hurricane]     0`b % Bow's "Spook" as well
	[UpAndAway]     0`b
	[PowerBounce]  75`b
	[SpinSmash]     0`b % weight (0-4)
	% ui positions
	[Size]         36`b  40`b % width height
	[HealthBar]     0`b   0`b % dx dy
	[StatusTurn]  -10`b  20`b % dx dy
	[StatusIcon]   10`b  32`b % dx dy
}

% Origin: HINT
#new:Actor $FlyingMagiclone
{
	% stats
	[Index]        50b
	[Level]        26`b
	[MaxHP]        11`b
	[Coins]         2`b
	[Flags]       00200200
	[StatusTable] $StatusTable_80222A88
	% ai
	[PartsCount]    1`s
	[PartsTable]  $PartsTable_80222B58
	[Script]      $Script_Init_80222988
	% move effectiveness
	[Escape]       40`b
	[Item]          0`b
	[AirLift]       0`b
	[Hurricane]     0`b % Bow's "Spook" as well
	[UpAndAway]     0`b
	[PowerBounce]  75`b
	[SpinSmash]     0`b % weight (0-4)
	% ui positions
	[Size]         48`b  40`b % width height
	[HealthBar]     0`b   0`b % dx dy
	[StatusTurn]  -25`b  20`b % dx dy
	[StatusIcon]    1`b  34`b % dx dy
}

% Origin: HINT
#new:Vector3D $Vector3D_80222BCC
{
	0` -1000` 0`
}

% Origin: HINT
#new:SpecialFormation $SpecialFormation_80222BD8
{
	$Magiclone $Vector3D_80222BCC 00000000 00000000 00000000 00000000 00000000
}

% Origin: HINT
#new:SpecialFormation $SpecialFormation_80222BF4
{
	$FlyingMagiclone $Vector3D_80222BCC 00000000 00000000 00000000 00000000 00000000
}

% Origin: HINT
#new:Script $Script_MakeCopy
{
    0:  Call  CountPlayerTargets    ( .Actor:Self 00008002 *Var0 )
   18:  If  *Var0  ==  00000001
   28:  	ExecWait  $Script_RunAway
   34:  	Return
   3C:  EndIf
   44:  Call  SetActorVar   ( .Actor:Self 0000000A 00000001 )
   5C:  Call  SetActorVar   ( .Actor:Self 0000000B 00000003 )
   74:  Set   *Flag[00]  .False
   84:  Call  GetActorFlags ( .Actor:Self *Var0 )
   98:  If  *Var0  &  00000200
   A8:  	Set   *Flag[00]  .True
   B8:  EndIf
   C0:  If  *Flag[00]  ==  .False
   D0:  	Call  SummonEnemy   ( $SpecialFormation_80222BD8 00000000 )
   E4:  Else
   EC:  	Call  SummonEnemy   ( $SpecialFormation_80222BF4 00000000 )
  100:  EndIf
  108:  Call  SetActorVar       ( .Actor:Self 00000009 *Var0 )
  120:  Set   *VarA  *Var0
  130:  Call  EnableIdleScript  ( .Actor:Self 00000000 )
  144:  Call  EnableIdleScript  ( *VarA 00000000 )
  158:  Call  UseIdleAnimation  ( .Actor:Self .False )
  16C:  Call  UseIdleAnimation  ( *VarA .False )
  180:  Call  SetTargetActor    ( .Actor:Self .Actor:Player )
  194:  Call  UseBattleCamPreset    ( 0000000E )
  1A4:  Call  BattleCamTargetActor  ( .Actor:Self )
  1B4:  Call  MoveBattleCamOver (  25` )
  1C4:  Wait  25`
  1D0:  Call  PlaySoundAtActor  ( .Actor:Self .Sound:SpellCast3 )
  1E4:  If  *Flag[00]  ==  .False
  1F4:  	Call  SetAnimation  ( .Actor:Self 00000001 00560002 )
  20C:  	Call  SetAnimation  ( *VarA 00000001 00560002 )
  224:  	Call  GetActorPos   ( .Actor:Self *Var0 *Var1 *Var2 )
  240:  	Add   *Var1  00000017
  250:  Else
  258:  	Call  SetAnimation  ( .Actor:Self 00000002 00570002 )
  270:  	Call  SetAnimation  ( *VarA 00000001 00570002 )
  288:  	Call  GetActorPos   ( .Actor:Self *Var0 *Var1 *Var2 )
  2A4:  	Add   *Var1  00000017
  2B4:  EndIf
  2BC:  Call  PlayEffect        ( ~FX:EnergyIn:Stars *Var0 *Var1 *Var2 *Fixed[1.0] 0000001E 00000000 00000000 00000000 00000000 00000000 00000000 00000000 )
  300:  Wait  10`
  30C:  Call  EnableIdleScript  ( .Actor:Self 00000001 )
  320:  Call  EnableIdleScript  ( *Var9 00000001 )
  334:  Wait  30`
  340:  Call  GetActorPos       ( .Actor:Self *Var0 *Var1 *Var2 )
  35C:  Add   *Var2  FFFFFFFD
  36C:  Call  SetActorPos       ( *VarA *Var0 *Var1 *Var2 )
  388:  Set   *Var9  *VarA
  398:  Wait  15`
  3A4:  Call  UseBattleCamPreset    ( 00000002 )
  3B4:  Call  MoveBattleCamOver (  30` )
  3C4:  Call  PlaySoundAtActor  ( .Actor:Self .Sound:SpellCast4 )
  3D8:  Call  PlaySoundAtActor  ( *Var9 .Sound:SpellCast4 )
  3EC:  Call  SetPartFlagBits   ( *Var9 00000001 00800000 .False )
  408:  Call  RandInt   ( 000003E8 *Var0 )
  41C:  If  *Var0  <  000001F4
  42C:  	Call  SetActorSpeed     ( .Actor:Self *Fixed[2.0] )
  440:  	ExecWait  $Script_80222654
  44C:  	Call  SetGoalToIndex    ( .Actor:Self *Var0 )
  460:  	Call  FlyToGoal ( .Actor:Self  0`  0` .Easing:Linear )
  47C:  Else
  484:  	Call  SetActorSpeed     ( *Var9 *Fixed[2.0] )
  498:  	ExecWait  $Script_80222654
  4A4:  	Call  SetGoalToIndex    ( *Var9 *Var0 )
  4B8:  	Call  FlyToGoal ( *Var9  0`  0` .Easing:Linear )
  4D4:  EndIf
  4DC:  Call  SetPartFlagBits   ( *Var9 00000001 00800000 .True )
  4F8:  Call  GetActorHP    ( .Actor:Self *Var0 )
  50C:  Call  SetEnemyHP    ( *Var9 *Var0 )
  520:  Call  GetActorPos   ( .Actor:Self *Var0 *Var1 *Var2 )
  53C:  Call  ForceHomePos  ( .Actor:Self *Var0 *Var1 *Var2 )
  558:  Call  HPBarToHome   ( .Actor:Self )
  568:  Call  GetActorPos   ( *Var9 *Var0 *Var1 *Var2 )
  584:  Call  ForceHomePos  ( *Var9 *Var0 *Var1 *Var2 )
  5A0:  Call  HPBarToHome   ( *Var9 )
  5B0:  If  *Flag[00]  ==  .False
  5C0:  	Call  SetPartEventBits  ( .Actor:Self 00000001 00400000 .True )
  5DC:  Else
  5E4:  	Call  SetPartEventBits  ( .Actor:Self 00000002 00400000 .True )
  600:  EndIf
  608:  If  *Flag[00]  ==  .False
  618:  	Call  SetAnimation  ( .Actor:Self 00000001 00560001 )
  630:  	Call  SetAnimation  ( *Var9 00000001 00560001 )
  648:  Else
  650:  	Call  SetAnimation  ( .Actor:Self 00000002 00570001 )
  668:  	Call  SetAnimation  ( *Var9 00000001 00570001 )
  680:  EndIf
  688:  Call  UseIdleAnimation  ( .Actor:Self .True )
  69C:  Call  UseIdleAnimation  ( *Var9 .True )
  6B0:  Return
  6B8:  End
}

% Origin: HINT
#new:Script $Script_BoostAttack
{
    0:  Set   *Flag[00]  .False
   10:  Label  A
   1C:  Call  EnemyCreateTargetList ( 00008002 )
   2C:  Call  InitTargetIterator ( )
   38:  Label  0
   44:  Call  GetOwnerTarget    ( *Var0 *Var1 )
   58:  Call  GetIndexFromHome  ( *Var0 *Var1 )
   6C:  Call  GetBattleVar      ( 00000002 *Var2 )
   80:  If  *Var1  >  *Var2
   90:  	Call  $Function_80218588    ( *Var0 *Var3 )
   A4:  	If  *Var3  ==  00000000
   B4:  		Call  GetActorAttackBoost   ( *Var0 *Var4 )
   C8:  		If  *Var4  <  00000003
   D8:  			Set   *Var8  *Var0
   E8:  			Call  SetBattleVar  ( 00000002 *Var1 )
   FC:  			Goto  64
  108:  		EndIf
  110:  	EndIf
  118:  EndIf
  120:  Call  ChooseNextTarget  ( .Iter:Next *Var0 )
  134:  If  *Var0  !=  FFFFFFFF
  144:  	Goto  0
  150:  EndIf
  158:  If  *Flag[00]  ==  .False
  168:  	Set   *Flag[00]  .True
  178:  	Call  SetBattleVar  ( 00000002 FFFFFFFF )
  18C:  	Goto  A
  198:  EndIf
  1A0:  Call  CountPlayerTargets    ( .Actor:Self 00008002 *Var0 )
  1B8:  If  *Var0  ==  00000001
  1C8:  	ExecWait  $Script_RunAway
  1D4:  	Return
  1DC:  EndIf
  1E4:  ExecWait  $Script_ShapeSpell
  1F0:  Return
  1F8:  Label  64
  204:  Call  SetActorVar       ( .Actor:Self 0000000A 00000000 )
  21C:  Call  SetActorVar       ( .Actor:Self 0000000B 00000004 )
  234:  Call  AddActorVar       ( .Actor:Self 00000005 00000001 )
  24C:  Call  UseIdleAnimation  ( .Actor:Self .False )
  260:  Call  EnableIdleScript  ( .Actor:Self 00000000 )
  274:  Call  SetTargetActor    ( .Actor:Self .Actor:Player )
  288:  Call  UseBattleCamPreset    ( 0000000E )
  298:  Call  BattleCamTargetActor  ( .Actor:Self )
  2A8:  Call  MoveBattleCamOver (  15` )
  2B8:  Wait  15`
  2C4:  Call  GetActorFlags     ( .Actor:Self *Var0 )
  2D8:  If  *Var0  !&  00000200
  2E8:  	Call  SetAnimation  ( .Actor:Self 00000001 00560002 )
  300:  Else
  308:  	Call  SetAnimation  ( .Actor:Self 00000002 00570002 )
  320:  EndIf
  328:  Wait  5`
  334:  Call  PlaySoundAtActor  ( .Actor:Self .Sound:SpellCast1 )
  348:  Call  GetActorFlags     ( .Actor:Self *Var0 )
  35C:  If  *Var0  !&  00000200
  36C:  	Call  GetActorPos       ( .Actor:Self *Var0 *Var1 *Var2 )
  388:  	Call  GetStatusFlags    ( .Actor:Self *VarA )
  39C:  	If  *VarA  &  ~Flags:StatusFlags:Shrink % 80000
  3AC:  		Sub   *Var0  00000006
  3BC:  		Add   *Var1  0000000C
  3CC:  		Sub   *Var2  00000002
  3DC:  		Call  PlayEffect    ( ~FX:RadialFlowOut:YellowEnergy *Var0 *Var1 *Var2 *Fixed[0.12] 0000001E 00000000 00000000 00000000 00000000 00000000 00000000 00000000 )
  420:  	Else
  428:  		Sub   *Var0  00000010
  438:  		Add   *Var1  0000001F
  448:  		Sub   *Var2  00000002
  458:  		Call  PlayEffect    ( ~FX:RadialFlowOut:YellowEnergy *Var0 *Var1 *Var2 *Fixed[0.3] 0000001E 00000000 00000000 00000000 00000000 00000000 00000000 00000000 )
  49C:  	EndIf
  4A4:  Else
  4AC:  	Call  GetActorPos       ( .Actor:Self *Var0 *Var1 *Var2 )
  4C8:  	Call  GetStatusFlags    ( .Actor:Self *VarA )
  4DC:  	If  *VarA  &  ~Flags:StatusFlags:Shrink % 80000
  4EC:  		Sub   *Var0  0000000C
  4FC:  		Add   *Var1  0000000E
  50C:  		Sub   *Var2  00000002
  51C:  		Call  PlayEffect    ( ~FX:RadialFlowOut:YellowEnergy *Var0 *Var1 *Var2 *Fixed[0.12] 0000001E 00000000 00000000 00000000 00000000 00000000 00000000 00000000 )
  560:  	Else
  568:  		Sub   *Var0  0000001E
  578:  		Add   *Var1  00000024
  588:  		Sub   *Var2  00000002
  598:  		Call  PlayEffect    ( ~FX:RadialFlowOut:YellowEnergy *Var0 *Var1 *Var2 *Fixed[0.3] 0000001E 00000000 00000000 00000000 00000000 00000000 00000000 00000000 )
  5DC:  	EndIf
  5E4:  EndIf
  5EC:  Wait  30`
  5F8:  Call  GetActorFlags ( .Actor:Self *Var0 )
  60C:  If  *Var0  !&  00000200
  61C:  	Call  SetAnimation  ( .Actor:Self 00000001 00560001 )
  634:  Else
  63C:  	Call  SetAnimation  ( .Actor:Self 00000002 00570001 )
  654:  EndIf
  65C:  Wait  5`
  668:  Thread
  670:  	Wait  10`
  67C:  	Call  PlaySoundAtActor  ( *Var8 000002DD )
  690:  EndThread
  698:  Thread
  6A0:  	Call  8026BF48      ( 00000001 )
  6B0:  	Call  BoostAttack   ( *Var8 00000001 )
  6C4:  	Call  8026BF48      ( 00000000 )
  6D4:  EndThread
  6DC:  Call  WaitForBuffDone ( )
  6E8:  Call  UseBattleCamPreset    ( 00000002 )
  6F8:  Wait  10`
  704:  Call  YieldTurn ( )
  710:  Call  EnableIdleScript      ( .Actor:Self 00000001 )
  724:  Call  UseIdleAnimation      ( .Actor:Self .True )
  738:  Return
  740:  End
}

% Origin: HINT
#new:Script $Script_BoostDefense
{
    0:  Set   *Flag[00]  .False
   10:  Label  A
   1C:  Call  EnemyCreateTargetList ( 00008002 )
   2C:  Call  InitTargetIterator ( )
   38:  Label  0
   44:  Call  GetOwnerTarget    ( *Var0 *Var1 )
   58:  Call  GetIndexFromHome  ( *Var0 *Var1 )
   6C:  Call  GetBattleVar      ( 00000002 *Var2 )
   80:  If  *Var1  >  *Var2
   90:  	Call  $Function_80218588    ( *Var0 *Var3 )
   A4:  	If  *Var3  ==  00000000
   B4:  		Call  GetActorDefenseBoost  ( *Var0 *Var4 )
   C8:  		If  *Var4  <  00000003
   D8:  			Set   *Var8  *Var0
   E8:  			Call  SetBattleVar  ( 00000002 *Var1 )
   FC:  			Goto  64
  108:  		EndIf
  110:  	EndIf
  118:  EndIf
  120:  Call  ChooseNextTarget  ( .Iter:Next *Var0 )
  134:  If  *Var0  !=  FFFFFFFF
  144:  	Goto  0
  150:  EndIf
  158:  If  *Flag[00]  ==  .False
  168:  	Set   *Flag[00]  .True
  178:  	Call  SetBattleVar  ( 00000002 FFFFFFFF )
  18C:  	Goto  A
  198:  EndIf
  1A0:  Call  CountPlayerTargets    ( .Actor:Self 00008002 *Var0 )
  1B8:  If  *Var0  ==  00000001
  1C8:  	ExecWait  $Script_RunAway
  1D4:  	Return
  1DC:  EndIf
  1E4:  ExecWait  $Script_ShapeSpell
  1F0:  Return
  1F8:  Label  64
  204:  Call  SetActorVar       ( .Actor:Self 0000000A 00000000 )
  21C:  Call  SetActorVar       ( .Actor:Self 0000000B 00000005 )
  234:  Call  AddActorVar       ( .Actor:Self 00000006 00000001 )
  24C:  Call  UseIdleAnimation  ( .Actor:Self .False )
  260:  Call  EnableIdleScript  ( .Actor:Self 00000000 )
  274:  Call  SetTargetActor    ( .Actor:Self .Actor:Player )
  288:  Call  UseBattleCamPreset    ( 0000000E )
  298:  Call  BattleCamTargetActor  ( .Actor:Self )
  2A8:  Call  MoveBattleCamOver (  15` )
  2B8:  Wait  15`
  2C4:  Call  GetActorFlags     ( .Actor:Self *Var0 )
  2D8:  If  *Var0  !&  00000200
  2E8:  	Call  SetAnimation  ( .Actor:Self 00000001 00560002 )
  300:  Else
  308:  	Call  SetAnimation  ( .Actor:Self 00000002 00570002 )
  320:  EndIf
  328:  Wait  5`
  334:  Call  PlaySoundAtActor  ( .Actor:Self .Sound:SpellCast1 )
  348:  Call  GetActorFlags     ( .Actor:Self *Var0 )
  35C:  If  *Var0  !&  00000200
  36C:  	Call  GetActorPos       ( .Actor:Self *Var0 *Var1 *Var2 )
  388:  	Call  GetStatusFlags    ( .Actor:Self *VarA )
  39C:  	If  *VarA  &  ~Flags:StatusFlags:Shrink % 80000
  3AC:  		Sub   *Var0  00000006
  3BC:  		Add   *Var1  0000000C
  3CC:  		Sub   *Var2  00000002
  3DC:  		Call  PlayEffect    ( ~FX:RadialFlowOut:YellowEnergy *Var0 *Var1 *Var2 *Fixed[0.12] 0000001E 00000000 00000000 00000000 00000000 00000000 00000000 00000000 )
  420:  	Else
  428:  		Sub   *Var0  00000010
  438:  		Add   *Var1  0000001F
  448:  		Sub   *Var2  00000002
  458:  		Call  PlayEffect    ( ~FX:RadialFlowOut:YellowEnergy *Var0 *Var1 *Var2 *Fixed[0.3] 0000001E 00000000 00000000 00000000 00000000 00000000 00000000 00000000 )
  49C:  	EndIf
  4A4:  Else
  4AC:  	Call  GetActorPos       ( .Actor:Self *Var0 *Var1 *Var2 )
  4C8:  	Call  GetStatusFlags    ( .Actor:Self *VarA )
  4DC:  	If  *VarA  &  ~Flags:StatusFlags:Shrink % 80000
  4EC:  		Sub   *Var0  0000000C
  4FC:  		Add   *Var1  0000000E
  50C:  		Sub   *Var2  00000002
  51C:  		Call  PlayEffect    ( ~FX:RadialFlowOut:YellowEnergy *Var0 *Var1 *Var2 *Fixed[0.12] 0000001E 00000000 00000000 00000000 00000000 00000000 00000000 00000000 )
  560:  	Else
  568:  		Sub   *Var0  0000001E
  578:  		Add   *Var1  00000024
  588:  		Sub   *Var2  00000002
  598:  		Call  PlayEffect    ( ~FX:RadialFlowOut:YellowEnergy *Var0 *Var1 *Var2 *Fixed[0.3] 0000001E 00000000 00000000 00000000 00000000 00000000 00000000 00000000 )
  5DC:  	EndIf
  5E4:  EndIf
  5EC:  Wait  30`
  5F8:  Call  GetActorFlags ( .Actor:Self *Var0 )
  60C:  If  *Var0  !&  00000200
  61C:  	Call  SetAnimation  ( .Actor:Self 00000001 00560001 )
  634:  Else
  63C:  	Call  SetAnimation  ( .Actor:Self 00000002 00570001 )
  654:  EndIf
  65C:  Wait  5`
  668:  Thread
  670:  	Wait  10`
  67C:  	Call  PlaySoundAtActor  ( *Var8 000002DD )
  690:  EndThread
  698:  Thread
  6A0:  	Call  8026BF48      ( 00000001 )
  6B0:  	Call  BoostDefense  ( *Var8 00000001 )
  6C4:  	Call  8026BF48      ( 00000000 )
  6D4:  EndThread
  6DC:  Call  WaitForBuffDone ( )
  6E8:  Call  UseBattleCamPreset    ( 00000002 )
  6F8:  Wait  10`
  704:  Call  YieldTurn ( )
  710:  Call  EnableIdleScript      ( .Actor:Self 00000001 )
  724:  Call  UseIdleAnimation      ( .Actor:Self .True )
  738:  Return
  740:  End
}

% Origin: HINT
#new:Script $Script_Electrify
{
    0:  Set   *Flag[00]  .False
   10:  Label  A
   1C:  Call  EnemyCreateTargetList ( 00008002 )
   2C:  Call  InitTargetIterator ( )
   38:  Label  0
   44:  Call  GetOwnerTarget    ( *Var0 *Var1 )
   58:  Call  GetIndexFromHome  ( *Var0 *Var1 )
   6C:  Call  GetBattleVar      ( 00000002 *Var2 )
   80:  If  *Var1  >  *Var2
   90:  	Call  $Function_80218588    ( *Var0 *Var3 )
   A4:  	If  *Var3  ==  00000000
   B4:  		Call  GetStatusFlags    ( *Var0 *Var4 )
   C8:  		If  *Var4  !&  ~Flags:StatusFlags:Static|Transparent % 4002000
   D8:  			Set   *Var8  *Var0
   E8:  			Call  SetBattleVar  ( 00000002 *Var1 )
   FC:  			Goto  64
  108:  		EndIf
  110:  	EndIf
  118:  EndIf
  120:  Call  ChooseNextTarget  ( .Iter:Next *Var0 )
  134:  If  *Var0  !=  FFFFFFFF
  144:  	Goto  0
  150:  EndIf
  158:  If  *Flag[00]  ==  .False
  168:  	Set   *Flag[00]  .True
  178:  	Call  SetBattleVar  ( 00000002 FFFFFFFF )
  18C:  	Goto  A
  198:  EndIf
  1A0:  Call  CountPlayerTargets    ( .Actor:Self 00008002 *Var0 )
  1B8:  If  *Var0  ==  00000001
  1C8:  	ExecWait  $Script_RunAway
  1D4:  	Return
  1DC:  EndIf
  1E4:  ExecWait  $Script_ShapeSpell
  1F0:  Return
  1F8:  Label  64
  204:  Call  SetActorVar       ( .Actor:Self 0000000A 00000000 )
  21C:  Call  SetActorVar       ( .Actor:Self 0000000B 00000006 )
  234:  Call  AddActorVar       ( .Actor:Self 00000007 00000001 )
  24C:  Call  UseIdleAnimation  ( .Actor:Self .False )
  260:  Call  EnableIdleScript  ( .Actor:Self 00000000 )
  274:  Call  SetTargetActor    ( .Actor:Self .Actor:Player )
  288:  Call  UseBattleCamPreset    ( 0000000E )
  298:  Call  BattleCamTargetActor  ( .Actor:Self )
  2A8:  Call  MoveBattleCamOver (  15` )
  2B8:  Wait  15`
  2C4:  Call  GetActorFlags     ( .Actor:Self *Var0 )
  2D8:  If  *Var0  !&  00000200
  2E8:  	Call  SetAnimation  ( .Actor:Self 00000001 00560002 )
  300:  Else
  308:  	Call  SetAnimation  ( .Actor:Self 00000002 00570002 )
  320:  EndIf
  328:  Wait  5`
  334:  Call  PlaySoundAtActor  ( .Actor:Self 000002F0 )
  348:  Call  GetActorFlags     ( .Actor:Self *Var0 )
  35C:  If  *Var0  !&  00000200
  36C:  	Call  GetActorPos       ( .Actor:Self *Var0 *Var1 *Var2 )
  388:  	Call  GetStatusFlags    ( .Actor:Self *VarA )
  39C:  	If  *VarA  &  ~Flags:StatusFlags:Shrink % 80000
  3AC:  		Sub   *Var0  00000006
  3BC:  		Add   *Var1  0000000C
  3CC:  		Sub   *Var2  00000002
  3DC:  		Call  PlayEffect    ( ~FX:SnakingStatic *Var0 *Var1 *Var2 *Fixed[0.12] 0000001E 00000000 00000000 00000000 00000000 00000000 00000000 00000000 )
  420:  	Else
  428:  		Sub   *Var0  00000010
  438:  		Add   *Var1  0000001F
  448:  		Sub   *Var2  00000002
  458:  		Call  PlayEffect    ( ~FX:SnakingStatic *Var0 *Var1 *Var2 *Fixed[0.3] 0000001E 00000000 00000000 00000000 00000000 00000000 00000000 00000000 )
  49C:  	EndIf
  4A4:  Else
  4AC:  	Call  GetActorPos       ( .Actor:Self *Var0 *Var1 *Var2 )
  4C8:  	Call  GetStatusFlags    ( .Actor:Self *VarA )
  4DC:  	If  *VarA  &  ~Flags:StatusFlags:Shrink % 80000
  4EC:  		Sub   *Var0  0000000C
  4FC:  		Add   *Var1  0000000E
  50C:  		Sub   *Var2  00000002
  51C:  		Call  PlayEffect    ( ~FX:SnakingStatic *Var0 *Var1 *Var2 *Fixed[0.12] 0000001E 00000000 00000000 00000000 00000000 00000000 00000000 00000000 )
  560:  	Else
  568:  		Sub   *Var0  0000001E
  578:  		Add   *Var1  00000024
  588:  		Sub   *Var2  00000002
  598:  		Call  PlayEffect    ( ~FX:SnakingStatic *Var0 *Var1 *Var2 *Fixed[0.3] 0000001E 00000000 00000000 00000000 00000000 00000000 00000000 00000000 )
  5DC:  	EndIf
  5E4:  EndIf
  5EC:  Wait  30`
  5F8:  Call  GetActorFlags ( .Actor:Self *Var0 )
  60C:  If  *Var0  !&  00000200
  61C:  	Call  SetAnimation  ( .Actor:Self 00000001 00560001 )
  634:  Else
  63C:  	Call  SetAnimation  ( .Actor:Self 00000002 00570001 )
  654:  EndIf
  65C:  Wait  5`
  668:  Thread
  670:  	Wait  10`
  67C:  	Loop  00000004
  688:  		Call  PlaySoundAtActor  ( *Var8 000003D2 )
  69C:  		Call  RandInt   ( 00000003 *Var0 )
  6B0:  		Add   *Var0  00000003
  6C0:  		Wait  *Var0
  6CC:  	EndLoop
  6D4:  EndThread
  6DC:  Thread
  6E4:  	Call  8026BF48  ( 00000001 )
  6F4:  	Call  ElectrifyActor    ( *Var8 00000003 )
  708:  	Call  8026BF48  ( 00000000 )
  718:  EndThread
  720:  Call  WaitForBuffDone ( )
  72C:  Call  UseBattleCamPreset    ( 00000002 )
  73C:  Wait  10`
  748:  Call  YieldTurn ( )
  754:  Call  EnableIdleScript      ( .Actor:Self 00000001 )
  768:  Call  UseIdleAnimation      ( .Actor:Self .True )
  77C:  Return
  784:  End
}

% Origin: HINT
#new:Script $Script_Vanish
{
    0:  Set   *Flag[00]  .False
   10:  Label  A
   1C:  Call  EnemyCreateTargetList ( 00008002 )
   2C:  Call  InitTargetIterator ( )
   38:  Label  0
   44:  Call  GetOwnerTarget    ( *Var0 *Var1 )
   58:  Call  GetIndexFromHome  ( *Var0 *Var1 )
   6C:  Call  GetBattleVar      ( 00000002 *Var2 )
   80:  If  *Var1  >  *Var2
   90:  	Call  $Function_80218588    ( *Var0 *Var3 )
   A4:  	If  *Var3  ==  00000000
   B4:  		Call  GetStatusFlags    ( *Var0 *Var4 )
   C8:  		If  *Var4  !&  ~Flags:StatusFlags:Static|Transparent % 4002000
   D8:  			Set   *Var8  *Var0
   E8:  			Call  SetBattleVar  ( 00000002 *Var1 )
   FC:  			Goto  64
  108:  		EndIf
  110:  	EndIf
  118:  EndIf
  120:  Call  ChooseNextTarget  ( .Iter:Next *Var0 )
  134:  If  *Var0  !=  FFFFFFFF
  144:  	Goto  0
  150:  EndIf
  158:  If  *Flag[00]  ==  .False
  168:  	Set   *Flag[00]  .True
  178:  	Call  SetBattleVar  ( 00000002 FFFFFFFF )
  18C:  	Goto  A
  198:  EndIf
  1A0:  Call  CountPlayerTargets    ( .Actor:Self 00008002 *Var0 )
  1B8:  If  *Var0  ==  00000001
  1C8:  	ExecWait  $Script_RunAway
  1D4:  	Return
  1DC:  EndIf
  1E4:  ExecWait  $Script_ShapeSpell
  1F0:  Return
  1F8:  Label  64
  204:  Call  SetActorVar       ( .Actor:Self 0000000A 00000000 )
  21C:  Call  SetActorVar       ( .Actor:Self 0000000B 00000007 )
  234:  Call  AddActorVar       ( .Actor:Self 00000008 00000001 )
  24C:  Call  UseIdleAnimation  ( .Actor:Self .False )
  260:  Call  EnableIdleScript  ( .Actor:Self 00000000 )
  274:  Call  SetTargetActor    ( .Actor:Self .Actor:Player )
  288:  Call  UseBattleCamPreset    ( 0000000E )
  298:  Call  BattleCamTargetActor  ( .Actor:Self )
  2A8:  Call  MoveBattleCamOver (  15` )
  2B8:  Wait  15`
  2C4:  Call  GetActorFlags     ( .Actor:Self *Var0 )
  2D8:  If  *Var0  !&  00000200
  2E8:  	Call  SetAnimation  ( .Actor:Self 00000001 00560002 )
  300:  Else
  308:  	Call  SetAnimation  ( .Actor:Self 00000002 00570002 )
  320:  EndIf
  328:  Wait  5`
  334:  Call  PlaySoundAtActor  ( .Actor:Self .Sound:SpellCast1 )
  348:  Call  GetActorFlags     ( .Actor:Self *Var0 )
  35C:  If  *Var0  !&  00000200
  36C:  	Call  GetActorPos       ( .Actor:Self *Var0 *Var1 *Var2 )
  388:  	Call  GetStatusFlags    ( .Actor:Self *VarA )
  39C:  	If  *VarA  &  ~Flags:StatusFlags:Shrink % 80000
  3AC:  		Sub   *Var0  00000006
  3BC:  		Add   *Var1  0000000C
  3CC:  		Sub   *Var2  00000002
  3DC:  		Call  PlayEffect    ( ~FX:RadialFlowOut:WhiteWaves *Var0 *Var1 *Var2 *Fixed[0.12] 0000001E 00000000 00000000 00000000 00000000 00000000 00000000 00000000 )
  420:  	Else
  428:  		Sub   *Var0  00000010
  438:  		Add   *Var1  0000001F
  448:  		Sub   *Var2  00000002
  458:  		Call  PlayEffect    ( ~FX:RadialFlowOut:WhiteWaves *Var0 *Var1 *Var2 *Fixed[0.3] 0000001E 00000000 00000000 00000000 00000000 00000000 00000000 00000000 )
  49C:  	EndIf
  4A4:  Else
  4AC:  	Call  GetActorPos       ( .Actor:Self *Var0 *Var1 *Var2 )
  4C8:  	Call  GetStatusFlags    ( .Actor:Self *VarA )
  4DC:  	If  *VarA  &  ~Flags:StatusFlags:Shrink % 80000
  4EC:  		Sub   *Var0  0000000C
  4FC:  		Add   *Var1  0000000E
  50C:  		Sub   *Var2  00000002
  51C:  		Call  PlayEffect    ( ~FX:RadialFlowOut:WhiteWaves *Var0 *Var1 *Var2 *Fixed[0.12] 0000001E 00000000 00000000 00000000 00000000 00000000 00000000 00000000 )
  560:  	Else
  568:  		Sub   *Var0  0000001E
  578:  		Add   *Var1  00000024
  588:  		Sub   *Var2  00000002
  598:  		Call  PlayEffect    ( ~FX:RadialFlowOut:WhiteWaves *Var0 *Var1 *Var2 *Fixed[0.3] 0000001E 00000000 00000000 00000000 00000000 00000000 00000000 00000000 )
  5DC:  	EndIf
  5E4:  EndIf
  5EC:  Wait  30`
  5F8:  Call  GetActorFlags ( .Actor:Self *Var0 )
  60C:  If  *Var0  !&  00000200
  61C:  	Call  SetAnimation  ( .Actor:Self 00000001 00560001 )
  634:  Else
  63C:  	Call  SetAnimation  ( .Actor:Self 00000002 00570001 )
  654:  EndIf
  65C:  Wait  5`
  668:  Thread
  670:  	Wait  10`
  67C:  	Call  PlaySoundAtActor  ( *Var8 000002DB )
  690:  EndThread
  698:  Thread
  6A0:  	Call  8026BF48      ( 00000001 )
  6B0:  	Call  VanishActor   ( *Var8 00000002 )
  6C4:  	Call  8026BF48      ( 00000000 )
  6D4:  EndThread
  6DC:  Call  WaitForBuffDone ( )
  6E8:  Call  UseBattleCamPreset    ( 00000002 )
  6F8:  Wait  10`
  704:  Call  YieldTurn ( )
  710:  Call  EnableIdleScript      ( .Actor:Self 00000001 )
  724:  Call  UseIdleAnimation      ( .Actor:Self .True )
  738:  Return
  740:  End
}

% Origin: HINT
#new:Script $Script_TakeTurn_80225034
{
    0:  Call  GetBattlePhase    ( *Var0 )
   10:  If  *Var0  ==  00000001
   20:  	ExecWait  $Script_ShapeSpell
   2C:  	Return
   34:  EndIf
   3C:  Call  GetActorVar   ( .Actor:Self 0000000A *Var0 )
   54:  If  *Var0  ==  00000001
   64:  	Goto  14
   70:  EndIf
   78:  Set   *VarA  00000000
   88:  Call  EnemyCreateTargetList ( 00008002 )
   98:  Call  InitTargetIterator ( )
   A4:  Label  0
   B0:  Set   *Flag[00]  .False
   C0:  Call  GetOwnerTarget        ( *Var0 *Var1 )
   D4:  Call  GetOriginalActorType  ( *Var0 *Var1 )
   E8:  If  *Var1  ==  00000047
   F8:  	Call  GetActorVar   ( *Var0 00000008 *Var1 )
  110:  	If  *Var1  ==  00000001
  120:  		Set   *Flag[00]  .True
  130:  	EndIf
  138:  EndIf
  140:  Call  GetActorHP    ( *Var0 *Var2 )
  154:  Call  GetEnemyMaxHP ( *Var0 *Var3 )
  168:  MulF  *Var2  *Fixed[100.0]
  178:  DivF  *Var2  *Var3
  188:  If  *Flag[00]  ==  .False
  198:  	If  *Var2  <=  00000019
  1A8:  		Call  RandInt   ( 00000063 *Var4 )
  1BC:  		Add   *Var4  00000001
  1CC:  		If  *Var4  <  0000004B
  1DC:  			Add   *VarA  00000001
  1EC:  			Set   *VarB  *Var0
  1FC:  		EndIf
  204:  	EndIf
  20C:  EndIf
  214:  Call  ChooseNextTarget  ( .Iter:Next *Var0 )
  228:  If  *Var0  !=  FFFFFFFF
  238:  	Goto  0
  244:  EndIf
  24C:  If  *VarA  >  00000000
  25C:  	Goto  A
  268:  EndIf
  270:  Set   *VarA  00000000
  280:  Call  EnemyCreateTargetList ( 00008002 )
  290:  Call  InitTargetIterator ( )
  29C:  Label  1
  2A8:  Set   *Flag[00]  .False
  2B8:  Call  GetOwnerTarget        ( *Var0 *Var1 )
  2CC:  Call  GetOriginalActorType  ( *Var0 *Var1 )
  2E0:  If  *Var1  ==  00000047
  2F0:  	Call  GetActorVar   ( *Var0 00000008 *Var1 )
  308:  	If  *Var1  ==  00000001
  318:  		Set   *Flag[00]  .True
  328:  	EndIf
  330:  EndIf
  338:  Call  GetActorHP    ( *Var0 *Var2 )
  34C:  Call  GetEnemyMaxHP ( *Var0 *Var3 )
  360:  MulF  *Var2  *Fixed[100.0]
  370:  DivF  *Var2  *Var3
  380:  If  *Flag[00]  ==  .False
  390:  	If  *Var2  <=  00000014
  3A0:  		Call  RandInt   ( 00000063 *Var4 )
  3B4:  		Add   *Var4  00000001
  3C4:  		If  *Var4  <  00000050
  3D4:  			Add   *VarA  00000001
  3E4:  			Set   *VarB  *Var0
  3F4:  		EndIf
  3FC:  	EndIf
  404:  EndIf
  40C:  Call  ChooseNextTarget  ( .Iter:Next *Var0 )
  420:  If  *Var0  !=  FFFFFFFF
  430:  	Goto  1
  43C:  EndIf
  444:  If  *VarA  >  00000000
  454:  	Goto  A
  460:  EndIf
  468:  Set   *VarA  00000000
  478:  Call  EnemyCreateTargetList ( 00008002 )
  488:  Call  InitTargetIterator ( )
  494:  Label  2
  4A0:  Set   *Flag[00]  .False
  4B0:  Call  GetOwnerTarget        ( *Var0 *Var1 )
  4C4:  Call  GetOriginalActorType  ( *Var0 *Var1 )
  4D8:  If  *Var1  ==  00000047
  4E8:  	Call  GetActorVar   ( *Var0 00000008 *Var1 )
  500:  	If  *Var1  ==  00000001
  510:  		Set   *Flag[00]  .True
  520:  	EndIf
  528:  EndIf
  530:  Call  GetActorHP    ( *Var0 *Var2 )
  544:  Call  GetEnemyMaxHP ( *Var0 *Var3 )
  558:  MulF  *Var2  *Fixed[100.0]
  568:  DivF  *Var2  *Var3
  578:  If  *Flag[00]  ==  .False
  588:  	If  *Var2  <=  0000000F
  598:  		Call  RandInt   ( 00000063 *Var4 )
  5AC:  		Add   *Var4  00000001
  5BC:  		If  *Var4  <  00000064
  5CC:  			Add   *VarA  00000001
  5DC:  			Set   *VarB  *Var0
  5EC:  		EndIf
  5F4:  	EndIf
  5FC:  EndIf
  604:  Call  ChooseNextTarget  ( .Iter:Next *Var0 )
  618:  If  *Var0  !=  FFFFFFFF
  628:  	Goto  2
  634:  EndIf
  63C:  If  *VarA  >  00000000
  64C:  	Goto  A
  658:  EndIf
  660:  Goto  14
  66C:  Label  A
  678:  Call  CountPlayerTargets    ( .Actor:Self 00008002 *Var0 )
  690:  If  *Var0  ==  00000001
  6A0:  	ExecWait  $Script_RunAway
  6AC:  	Return
  6B4:  EndIf
  6BC:  If  *VarA  ==  00000001
  6CC:  	Call  GetActorVar   ( .Actor:Self 00000004 *Var0 )
  6E4:  	If  *Var0  <  00000002
  6F4:  		Call  RandInt   ( 000003E8 *Var0 )
  708:  		If  *Var0  <  000001F4
  718:  			ExecWait  $Script_HealOne
  724:  			Return
  72C:  		EndIf
  734:  	Else
  73C:  		Call  GetActorVar   ( .Actor:Self 00000003 *Var0 )
  754:  		If  *Var0  <  00000002
  764:  			Call  RandInt   ( 000003E8 *Var0 )
  778:  			If  *Var0  <  000001F4
  788:  				ExecWait  $Script_HealAll
  794:  				Return
  79C:  			EndIf
  7A4:  		EndIf
  7AC:  	EndIf
  7B4:  Else
  7BC:  	Call  GetActorVar   ( .Actor:Self 00000003 *Var0 )
  7D4:  	If  *Var0  <  00000002
  7E4:  		Call  RandInt   ( 000003E8 *Var0 )
  7F8:  		If  *Var0  <  000001F4
  808:  			ExecWait  $Script_HealAll
  814:  			Return
  81C:  		EndIf
  824:  	Else
  82C:  		Call  GetActorVar   ( .Actor:Self 00000004 *Var0 )
  844:  		If  *Var0  <  00000002
  854:  			SetF  *Var9  *Fixed[100.0]
  864:  			Call  EnemyCreateTargetList ( 00008002 )
  874:  			Call  InitTargetIterator ( )
  880:  			Label  B
  88C:  			Set   *Flag[00]  .False
  89C:  			Call  GetOwnerTarget        ( *Var0 *Var1 )
  8B0:  			Call  GetOriginalActorType  ( *Var0 *Var1 )
  8C4:  			If  *Var1  ==  00000047
  8D4:  				Call  GetActorVar   ( *Var0 00000008 *Var1 )
  8EC:  				If  *Var1  ==  00000001
  8FC:  					Set   *Flag[00]  .True
  90C:  				EndIf
  914:  			EndIf
  91C:  			Call  GetActorHP    ( *Var0 *Var2 )
  930:  			Call  GetEnemyMaxHP ( *Var0 *Var3 )
  944:  			MulF  *Var2  *Fixed[100.0]
  954:  			DivF  *Var2  *Var3
  964:  			If  *Flag[00]  ==  .False
  974:  				If  *Var2  <=  *Var9
  984:  					SetF  *Var9  *Var2
  994:  					Set   *VarB  *Var0
  9A4:  				EndIf
  9AC:  			EndIf
  9B4:  			Call  ChooseNextTarget  ( .Iter:Next *Var0 )
  9C8:  			If  *Var0  !=  FFFFFFFF
  9D8:  				Goto  B
  9E4:  			EndIf
  9EC:  			Call  RandInt   ( 000003E8 *Var0 )
  A00:  			If  *Var0  <  000001F4
  A10:  				ExecWait  $Script_HealOne
  A1C:  				Return
  A24:  			EndIf
  A2C:  		EndIf
  A34:  	EndIf
  A3C:  EndIf
  A44:  Label  14
  A50:  Set   *VarA  0000000A
  A60:  Set   *VarB  0000000A
  A70:  Set   *VarC  0000000A
  A80:  Set   *VarD  0000000A
  A90:  Set   *VarE  0000000A
  AA0:  Set   *VarF  0000000A
  AB0:  Call  GetActorVar   ( .Actor:Self 0000000A *Var0 )
  AC8:  If  *Var0  ==  00000001
  AD8:  	Set   *VarA  00000064
  AE8:  	Set   *VarB  00000000
  AF8:  	Set   *VarC  00000000
  B08:  	Set   *VarD  00000000
  B18:  	Set   *VarE  00000000
  B28:  	Set   *VarF  00000000
  B38:  	Goto  7B
  B44:  Else
  B4C:  	ExecWait  $Script_80222654
  B58:  	If  *Var0  ==  FFFFFFFF
  B68:  		Set   *VarB  00000000
  B78:  	EndIf
  B80:  EndIf
  B88:  Call  GetStatusFlags    ( .Actor:Self *Var0 )
  B9C:  If  *Var0  !=  ~Flags:StatusFlags:0 % 0
  BAC:  	Set   *VarB  00000000
  BBC:  EndIf
  BC4:  Call  GetActorVar   ( .Actor:Self 0000000B *Var0 )
  BDC:  Switch  *Var0
  BE8:  	Case  ==  00000004
  BF4:  		Call  GetActorVar   ( .Actor:Self 00000005 *Var1 )
  C0C:  		If  *Var1  <  00000003
  C1C:  			Call  RandInt   ( 00000063 *Var0 )
  C30:  			Add   *Var0  00000001
  C40:  			If  *Var0  <=  00000032
  C50:  				Set   *VarA  00000000
  C60:  				Set   *VarB  00000000
  C70:  				Set   *VarC  00000064
  C80:  				Set   *VarD  00000000
  C90:  				Set   *VarE  00000000
  CA0:  				Set   *VarF  00000000
  CB0:  			EndIf
  CB8:  		EndIf
  CC0:  	Case  ==  00000005
  CCC:  		Call  GetActorVar   ( .Actor:Self 00000006 *Var1 )
  CE4:  		If  *Var1  <  00000003
  CF4:  			Call  RandInt   ( 00000063 *Var0 )
  D08:  			Add   *Var0  00000001
  D18:  			If  *Var0  <=  00000032
  D28:  				Set   *VarA  00000000
  D38:  				Set   *VarB  00000000
  D48:  				Set   *VarC  00000000
  D58:  				Set   *VarD  00000064
  D68:  				Set   *VarE  00000000
  D78:  				Set   *VarF  00000000
  D88:  			EndIf
  D90:  		EndIf
  D98:  EndSwitch
  DA0:  Call  GetActorVar   ( .Actor:Self 00000005 *Var0 )
  DB8:  If  *Var0  >=  00000003
  DC8:  	Set   *VarC  00000000
  DD8:  EndIf
  DE0:  Call  GetActorVar   ( .Actor:Self 00000006 *Var0 )
  DF8:  If  *Var0  >=  00000003
  E08:  	Set   *VarD  00000000
  E18:  EndIf
  E20:  Call  GetActorVar   ( .Actor:Self 00000007 *Var0 )
  E38:  If  *Var0  >=  00000003
  E48:  	Set   *VarE  00000000
  E58:  EndIf
  E60:  Call  GetActorVar   ( .Actor:Self 00000008 *Var0 )
  E78:  If  *Var0  >=  00000003
  E88:  	Set   *VarF  00000000
  E98:  EndIf
  EA0:  Label  7B
  EAC:  Set   *Var9  00000000
  EBC:  Add   *Var9  *VarA
  ECC:  Add   *Var9  *VarB
  EDC:  Add   *Var9  *VarC
  EEC:  Add   *Var9  *VarD
  EFC:  Add   *Var9  *VarE
  F0C:  Add   *Var9  *VarF
  F1C:  Sub   *Var9  00000001
  F2C:  Call  RandInt   ( *Var9 *Var0 )
  F40:  Add   *Var0  00000001
  F50:  If  *Var0  <=  *VarA
  F60:  	ExecWait  $Script_ShapeSpell
  F6C:  	Return
  F74:  EndIf
  F7C:  Add   *VarA  *VarB
  F8C:  If  *Var0  <=  *VarA
  F9C:  	ExecWait  $Script_MakeCopy
  FA8:  	Return
  FB0:  EndIf
  FB8:  Add   *VarA  *VarC
  FC8:  If  *Var0  <=  *VarA
  FD8:  	ExecWait  $Script_BoostAttack
  FE4:  	Return
  FEC:  EndIf
  FF4:  Add   *VarA  *VarD
 1004:  If  *Var0  <=  *VarA
 1014:  	ExecWait  $Script_BoostDefense
 1020:  	Return
 1028:  EndIf
 1030:  Add   *VarA  *VarE
 1040:  If  *Var0  <=  *VarA
 1050:  	ExecWait  $Script_Electrify
 105C:  	Return
 1064:  EndIf
 106C:  ExecWait  $Script_Vanish
 1078:  Return
 1080:  End
}

PADDING: 802260BC to 802260C0 (006DA12C to 006DA130)
00000000

#new:Script $Script_802260C0
{
    0:  Set   *VarA  *Var0
   10:  Call  SetTexPanner  ( *VarA 00000001 )
   24:  Set   *Var0  00000000
   34:  Set   *Var1  00000000
   44:  Loop
   50:  	Call  SetTexPanOffset   ( 00000001 00000000 *Var0 *Var1 )
   6C:  	Add   *Var0  00008000
   7C:  	Add   *Var1  00000000
   8C:  	Wait  5`
   98:  EndLoop
   A0:  Return
   A8:  End
}

#new:Script $Script_BeforeBattle_80226170
{
    0:  Call  SetSpriteShading  ( FFFFFFFF )
   10:  Call  SetCamBGColor     ( .Cam:Battle  0`  0`  0` )
   2C:  Call  SetGroupEnabled   ( ~Model:kpa_bt01:switch 00000000 )
   40:  Thread
   48:  	Set   *Var0  00000025
   58:  	Exec  $Script_802260C0
   64:  	Wait  5`
   70:  	Set   *Var0  00000027
   80:  	Exec  $Script_802260C0
   8C:  EndThread
   94:  Return
   9C:  End
}

#new:Script $Script_AfterBattle_80226214
{
    0:  Return
    8:  End
}

#new:ForegroundModelList $ForegroundModelList_80226224
{
	~Model:kpa_bt01:o383
	~Model:kpa_bt01:o382
	~Model:kpa_bt01:o381
	00000000
}

#new:Stage $Stage_80226234
{
	$ASCII_80227A20  % kpa_tex
	$ASCII_80227A10  % kpa_bt01_shape
	$ASCII_80227A00  % kpa_bt01_hit
	$Script_BeforeBattle_80226170
	$Script_AfterBattle_80226214
	00000000
	$ForegroundModelList_80226224
	00000000
	00000000
	00000000
}

PADDING: 8022625C to 80226260 (006DA2CC to 006DA2D0)
00000000

#new:Script $Script_80226260
{
    0:  Set   *VarA  *Var0
   10:  Call  SetTexPanner  ( *VarA 00000001 )
   24:  Set   *Var0  00000000
   34:  Set   *Var1  00000000
   44:  Loop
   50:  	Call  SetTexPanOffset   ( 00000001 00000000 *Var0 *Var1 )
   6C:  	Add   *Var0  00008000
   7C:  	Add   *Var1  00000000
   8C:  	Wait  5`
   98:  EndLoop
   A0:  Return
   A8:  End
}

#new:Script $Script_BeforeBattle_80226310
{
    0:  Call  SetSpriteShading  ( FFFFFFFF )
   10:  Call  SetCamBGColor     ( .Cam:Battle  0`  0`  0` )
   2C:  Call  SetGroupEnabled   ( ~Model:kpa_bt01:hasira 00000000 )
   40:  Set   *Var0  00000025
   50:  Exec  $Script_80226260
   5C:  Set   *Var0  00000027
   6C:  Exec  $Script_80226260
   78:  Return
   80:  End
}

#new:Script $Script_AfterBattle_80226398
{
    0:  Return
    8:  End
}

#new:ForegroundModelList $ForegroundModelList_802263A8
{
	~Model:kpa_bt01:o383
	~Model:kpa_bt01:o382
	~Model:kpa_bt01:o381
	00000000
}

#new:Stage $Stage_802263B8
{
	$ASCII_80227A48  % kpa_tex
	$ASCII_80227A38  % kpa_bt01_shape
	$ASCII_80227A28  % kpa_bt01_hit
	$Script_BeforeBattle_80226310
	$Script_AfterBattle_80226398
	00000000
	$ForegroundModelList_802263A8
	00000000
	00000000
	00000000
}

% Origin: HEURISTIC
#new:Script $Script_802263E0
{
    0:  Set   *VarA  *Var1
   10:  Set   *VarB  *Var2
   20:  Set   *VarC  *Var3
   30:  Call  SetTexPanner  ( *Var0 *Var1 )
   44:  Set   *Var0  00000000
   54:  Set   *Var1  00000000
   64:  Loop
   70:  	Call  SetTexPanOffset   ( *VarA 00000000 *Var0 *Var1 )
   8C:  	Add   *Var0  *VarB
   9C:  	Add   *Var1  *VarC
   AC:  	Wait  1`
   B8:  EndLoop
   C0:  Return
   C8:  End
}

#new:Script $Script_802264B0
{
    0:  Set   *VarA  *Var1
   10:  Set   *VarB  *Var2
   20:  Set   *VarC  *Var3
   30:  Call  SetTexPanner  ( *Var0 *Var1 )
   44:  Set   *Var0  00000000
   54:  Set   *Var1  00000000
   64:  Loop
   70:  	Call  SetTexPanOffset   ( *VarA 00000000 *Var0 00000000 )
   8C:  	Call  SetTexPanOffset   ( *VarA 00000001 *Var1 00000000 )
   A8:  	Add   *Var0  *VarB
   B8:  	Add   *Var1  *VarC
   C8:  	Wait  1`
   D4:  EndLoop
   DC:  Return
   E4:  End
}

#new:Script $Script_8022659C
{
    0:  Set   *VarA  *Var1
   10:  Set   *VarB  *Var2
   20:  Set   *VarC  *Var3
   30:  Call  SetTexPanner  ( *Var0 *Var1 )
   44:  Set   *Var0  00000000
   54:  Set   *Var1  00000000
   64:  Loop
   70:  	Call  SetTexPanOffset   ( *VarA 00000000 00000000 *Var0 )
   8C:  	Call  SetTexPanOffset   ( *VarA 00000001 00000000 *Var1 )
   A8:  	Add   *Var0  *VarB
   B8:  	Add   *Var1  *VarC
   C8:  	Wait  1`
   D4:  EndLoop
   DC:  Return
   E4:  End
}

#new:Script $Script_BeforeBattle_80226688
{
    0:  Call  SetSpriteShading  ( FFFFFFFF )
   10:  Call  SetCamBGColor     ( .Cam:Battle  0`  0`  0` )
   2C:  Set   *Var0  00000010
   3C:  Set   *Var1  00000001
   4C:  Set   *Var2  FFFFFE70
   5C:  Set   *Var3  FFFFFCE0
   6C:  Exec  $Script_802264B0
   78:  Set   *Var0  00000013
   88:  Set   *Var1  00000003
   98:  Set   *Var2  FFFFFE70
   A8:  Set   *Var3  FFFFFCE0
   B8:  Exec  $Script_802264B0
   C4:  Set   *Var0  00000011
   D4:  Set   *Var1  00000000
   E4:  Set   *Var2  FFFFFE70
   F4:  Set   *Var3  FFFFFCE0
  104:  Exec  $Script_8022659C
  110:  Set   *Var0  00000012
  120:  Set   *Var1  00000002
  130:  Set   *Var2  FFFFFE70
  140:  Set   *Var3  FFFFFCE0
  150:  Exec  $Script_8022659C
  15C:  Return
  164:  End
}

#new:Script $Script_AfterBattle_802267F4
{
    0:  Return
    8:  End
}

#new:ForegroundModelList $ForegroundModelList_80226804
{
	~Model:kpa_bt02:saku
	00000000
}

#new:Stage $Stage_8022680C
{
	$ASCII_80227A70  % kpa_tex
	$ASCII_80227A60  % kpa_bt02_shape
	$ASCII_80227A50  % kpa_bt02_hit
	$Script_BeforeBattle_80226688
	$Script_AfterBattle_802267F4
	00000000
	$ForegroundModelList_80226804
	00000000
	00000000
	00000000
}

PADDING: 80226834 to 80226840 (006DA8A4 to 006DA8B0)
00000000 00000000 00000000

% Origin: HEURISTIC
#new:Script $Script_80226840
{
    0:  Call  SetSpriteShading  ( FFFFFFFF )
   10:  Call  SetCamBGColor     ( .Cam:Battle  0`  0`  0` )
   2C:  Call  80253734  ( 00000001 )
   3C:  Return
   44:  End
}

#new:Unknown $???_8022688C
{
	00000002 00000000 00000001 00000000
}

#new:Unknown $???_8022689C
{
	00000019 00000000 $ASCII_80227A98 $ASCII_80227A88 $ASCII_80227A78 $Script_80226840 $???_8022688C 00000000
	$???_8022689C 00000000 00000000 00000000 00000000
}

#new:Script $Script_802268D0
{
    0:  Set   *VarA  *Var0
   10:  Call  SetTexPanner  ( *VarA 00000001 )
   24:  Set   *Var0  00000000
   34:  Set   *Var1  00000000
   44:  Loop
   50:  	Call  SetTexPanOffset   ( 00000001 00000000 *Var0 *Var1 )
   6C:  	Add   *Var0  00008000
   7C:  	Add   *Var1  00000000
   8C:  	Wait  5`
   98:  EndLoop
   A0:  Return
   A8:  End
}

#new:Script $Script_BeforeBattle_80226980
{
    0:  Call  SetSpriteShading  ( FFFFFFFF )
   10:  Call  SetCamBGColor     ( .Cam:Battle  0`  0`  0` )
   2C:  Call  SetGroupEnabled   ( ~Model:kpa_bt04:g3 00000000 )
   40:  Call  SetGroupEnabled   ( ~Model:kpa_bt04:wa 00000000 )
   54:  Call  SetGroupEnabled   ( ~Model:kpa_bt04:kusari 00000000 )
   68:  Call  SetGroupEnabled   ( ~Model:kpa_bt04:g4 00000000 )
   7C:  Call  SetGroupEnabled   ( ~Model:kpa_bt04:hi1 00000000 )
   90:  Call  SetGroupEnabled   ( ~Model:kpa_bt04:hi2 00000000 )
   A4:  Call  SetGroupEnabled   ( ~Model:kpa_bt04:hi3 00000000 )
   B8:  Call  SetGroupEnabled   ( ~Model:kpa_bt04:hi4 00000000 )
   CC:  Set   *Var0  00000020
   DC:  Exec  $Script_802268D0
   E8:  Set   *Var0  00000022
   F8:  Exec  $Script_802268D0
  104:  Set   *Var0  00000024
  114:  Exec  $Script_802268D0
  120:  Return
  128:  End
}

#new:Script $Script_AfterBattle_80226AB0
{
    0:  Return
    8:  End
}

#new:Stage $Stage_80226AC0
{
	$ASCII_80227AC0  % kpa_tex
	$ASCII_80227AB0  % kpa_bt04_shape
	$ASCII_80227AA0  % kpa_bt04_hit
	$Script_BeforeBattle_80226980
	$Script_AfterBattle_80226AB0
	00000000
	00000000
	00000000
	00000000
	00000000
}

PADDING: 80226AE8 to 80226AF0 (006DAB58 to 006DAB60)
00000000 00000000

#new:Script $Script_80226AF0
{
    0:  Set   *VarA  *Var0
   10:  Call  SetTexPanner  ( *VarA 00000001 )
   24:  Set   *Var0  00000000
   34:  Set   *Var1  00000000
   44:  Loop
   50:  	Call  SetTexPanOffset   ( 00000001 00000000 *Var0 *Var1 )
   6C:  	Add   *Var0  00008000
   7C:  	Add   *Var1  00000000
   8C:  	Wait  5`
   98:  EndLoop
   A0:  Return
   A8:  End
}

#new:Script $Script_BeforeBattle_80226BA0
{
    0:  Call  SetSpriteShading  ( FFFFFFFF )
   10:  Call  SetCamBGColor     ( .Cam:Battle  0`  0`  0` )
   2C:  Call  SetGroupEnabled   ( ~Model:kpa_bt04:g2 00000000 )
   40:  Call  SetGroupEnabled   ( ~Model:kpa_bt04:wa 00000000 )
   54:  Call  SetGroupEnabled   ( ~Model:kpa_bt04:kusari 00000000 )
   68:  Call  SetGroupEnabled   ( ~Model:kpa_bt04:hi1 00000000 )
   7C:  Call  SetGroupEnabled   ( ~Model:kpa_bt04:hi2 00000000 )
   90:  Call  SetGroupEnabled   ( ~Model:kpa_bt04:hi3 00000000 )
   A4:  Call  SetGroupEnabled   ( ~Model:kpa_bt04:hi4 00000000 )
   B8:  Set   *Var0  00000020
   C8:  Exec  $Script_80226AF0
   D4:  Set   *Var0  00000022
   E4:  Exec  $Script_80226AF0
   F0:  Set   *Var0  00000024
  100:  Exec  $Script_80226AF0
  10C:  Return
  114:  End
}

#new:Script $Script_AfterBattle_80226CBC
{
    0:  Return
    8:  End
}

#new:Stage $Stage_80226CCC
{
	$ASCII_80227AE8  % kpa_tex
	$ASCII_80227AD8  % kpa_bt04_shape
	$ASCII_80227AC8  % kpa_bt04_hit
	$Script_BeforeBattle_80226BA0
	$Script_AfterBattle_80226CBC
	00000000
	00000000
	00000000
	00000000
	00000000
}

PADDING: 80226CF4 to 80226D00 (006DAD64 to 006DAD70)
00000000 00000000 00000000

#new:Script $Script_80226D00
{
    0:  Set   *VarA  *Var0
   10:  Call  SetTexPanner  ( *VarA 00000001 )
   24:  Set   *Var0  00000000
   34:  Set   *Var1  00000000
   44:  Loop
   50:  	Call  SetTexPanOffset   ( 00000001 00000000 *Var0 *Var1 )
   6C:  	Add   *Var0  00008000
   7C:  	Add   *Var1  00000000
   8C:  	Wait  5`
   98:  EndLoop
   A0:  Return
   A8:  End
}

#new:Script $Script_BeforeBattle_80226DB0
{
    0:  Call  SetSpriteShading  ( FFFFFFFF )
   10:  Call  SetCamBGColor     ( .Cam:Battle  0`  0`  0` )
   2C:  Call  SetGroupEnabled   ( ~Model:kpa_bt04:o415 00000000 )
   40:  Call  SetGroupEnabled   ( ~Model:kpa_bt04:o453 00000000 )
   54:  Call  SetGroupEnabled   ( ~Model:kpa_bt04:o452 00000000 )
   68:  Call  SetGroupEnabled   ( ~Model:kpa_bt04:o454 00000000 )
   7C:  Call  SetGroupEnabled   ( ~Model:kpa_bt04:o451 00000000 )
   90:  Call  SetGroupEnabled   ( ~Model:kpa_bt04:o450 00000000 )
   A4:  Set   *Var0  00000012
   B4:  Exec  $Script_80226D00
   C0:  Set   *Var0  00000014
   D0:  Exec  $Script_80226D00
   DC:  Set   *Var0  00000016
   EC:  Exec  $Script_80226D00
   F8:  Set   *Var0  00000018
  108:  Exec  $Script_80226D00
  114:  Return
  11C:  End
}

#new:Script $Script_AfterBattle_80226ED4
{
    0:  Return
    8:  End
}

#new:Stage $Stage_80226EE4
{
	$ASCII_80227B10  % kpa_tex
	$ASCII_80227B00  % kpa_bt04_shape
	$ASCII_80227AF0  % kpa_bt04_hit
	$Script_BeforeBattle_80226DB0
	$Script_AfterBattle_80226ED4
	00000000
	00000000
	00000000
	00000000
	00000000
}

PADDING: 80226F0C to 80226F10 (006DAF7C to 006DAF80)
00000000

#new:Script $Script_BeforeBattle_80226F10
{
    0:  Call  SetSpriteShading  ( FFFFFFFF )
   10:  Call  SetCamBGColor     ( .Cam:Battle  0`  0`  0` )
   2C:  Return
   34:  End
}

#new:Script $Script_AfterBattle_80226F4C
{
    0:  Return
    8:  End
}

#new:ForegroundModelList $ForegroundModelList_80226F5C
{
	~Model:kpa_bt05:saku
	00000000
}

#new:Stage $Stage_80226F64
{
	$ASCII_80227B38  % kpa_tex
	$ASCII_80227B28  % kpa_bt05_shape
	$ASCII_80227B18  % kpa_bt05_hit
	$Script_BeforeBattle_80226F10
	$Script_AfterBattle_80226F4C
	00000000
	$ForegroundModelList_80226F5C
	00000000
	00000000
	00000000
}

PADDING: 80226F8C to 80226F90 (006DAFFC to 006DB000)
00000000

#new:Script $Script_80226F90
{
    0:  Set   *VarA  *Var1
   10:  Set   *VarB  *Var2
   20:  Set   *VarC  *Var3
   30:  Call  SetTexPanner  ( *Var0 *Var1 )
   44:  Set   *Var0  00000000
   54:  Set   *Var1  00000000
   64:  Loop
   70:  	Call  SetTexPanOffset   ( *VarA 00000000 *Var0 *Var1 )
   8C:  	Add   *Var0  *VarB
   9C:  	Add   *Var1  *VarC
   AC:  	Wait  1`
   B8:  EndLoop
   C0:  Return
   C8:  End
}

% Origin: HEURISTIC
#new:Script $Script_80227060
{
    0:  Set   *VarA  *Var1
   10:  Set   *VarB  *Var2
   20:  Set   *VarC  *Var3
   30:  Call  SetTexPanner  ( *Var0 *Var1 )
   44:  Set   *Var0  00000000
   54:  Set   *Var1  00000000
   64:  Loop
   70:  	Call  SetTexPanOffset   ( *VarA 00000000 *Var0 00000000 )
   8C:  	Call  SetTexPanOffset   ( *VarA 00000001 *Var1 00000000 )
   A8:  	Add   *Var0  *VarB
   B8:  	Add   *Var1  *VarC
   C8:  	Wait  1`
   D4:  EndLoop
   DC:  Return
   E4:  End
}

% Origin: HEURISTIC
#new:Script $Script_8022714C
{
    0:  Set   *VarA  *Var1
   10:  Set   *VarB  *Var2
   20:  Set   *VarC  *Var3
   30:  Call  SetTexPanner  ( *Var0 *Var1 )
   44:  Set   *Var0  00000000
   54:  Set   *Var1  00000000
   64:  Loop
   70:  	Call  SetTexPanOffset   ( *VarA 00000000 00000000 *Var0 )
   8C:  	Call  SetTexPanOffset   ( *VarA 00000001 00000000 *Var1 )
   A8:  	Add   *Var0  *VarB
   B8:  	Add   *Var1  *VarC
   C8:  	Wait  1`
   D4:  EndLoop
   DC:  Return
   E4:  End
}

#new:Script $Script_BeforeBattle_80227238
{
    0:  Call  SetSpriteShading  ( FFFFFFFF )
   10:  Call  SetCamBGColor     ( .Cam:Battle  0`  0`  0` )
   2C:  Set   *Var0  00000010
   3C:  Set   *Var1  00000000
   4C:  Set   *Var2  FFFFFF38
   5C:  Set   *Var3  00000000
   6C:  Exec  $Script_80226F90
   78:  Set   *Var0  00000011
   88:  Set   *Var1  00000001
   98:  Set   *Var2  FFFFFF88
   A8:  Set   *Var3  00000000
   B8:  Exec  $Script_80226F90
   C4:  Set   *Var0  00000000
   D4:  Set   *Var1  00000002
   E4:  Set   *Var2  FFFFFF9C
   F4:  Set   *Var3  00000000
  104:  Exec  $Script_80226F90
  110:  Return
  118:  End
}

#new:Script $Script_AfterBattle_80227358
{
    0:  Return
    8:  End
}

#new:ForegroundModelList $ForegroundModelList_80227368
{
	~Model:kpa_bt07:kemu1
	00000000
}

#new:Stage $Stage_80227370
{
	$ASCII_80227B60  % kpa_tex
	$ASCII_80227B50  % kpa_bt07_shape
	$ASCII_80227B40  % kpa_bt07_hit
	$Script_BeforeBattle_80227238
	$Script_AfterBattle_80227358
	00000000
	$ForegroundModelList_80227368
	00000000
	00000000
	00000000
}

PADDING: 80227398 to 802273A0 (006DB408 to 006DB410)
00000000 00000000

#new:Script $Script_BeforeBattle_802273A0
{
    0:  Call  SetSpriteShading  ( FFFFFFFF )
   10:  Call  SetCamBGColor     ( .Cam:Battle  0`  0`  0` )
   2C:  Return
   34:  End
}

#new:Script $Script_AfterBattle_802273DC
{
    0:  Return
    8:  End
}

#new:ForegroundModelList $ForegroundModelList_802273EC
{
	~Model:kpa_bt08:o478
	00000000
}

#new:Stage $Stage_802273F4
{
	$ASCII_80227B88  % kpa_tex
	$ASCII_80227B78  % kpa_bt08_shape
	$ASCII_80227B68  % kpa_bt08_hit
	$Script_BeforeBattle_802273A0
	$Script_AfterBattle_802273DC
	00000000
	$ForegroundModelList_802273EC
	00000000
	00000000
	00000000
}

PADDING: 8022741C to 80227420 (006DB48C to 006DB490)
00000000

#new:Script $Script_BeforeBattle_80227420
{
    0:  Call  SetSpriteShading  ( FFFFFFFF )
   10:  Call  SetCamBGColor     ( .Cam:Battle  0`  0`  0` )
   2C:  Return
   34:  End
}

#new:Script $Script_AfterBattle_8022745C
{
    0:  Return
    8:  End
}

#new:ForegroundModelList $ForegroundModelList_8022746C
{
	~Model:kpa_bt09:o353
	00000000
}

#new:Stage $Stage_80227474
{
	$ASCII_80227BB0  % kpa_tex
	$ASCII_80227BA0  % kpa_bt09_shape
	$ASCII_80227B90  % kpa_bt09_hit
	$Script_BeforeBattle_80227420
	$Script_AfterBattle_8022745C
	00000000
	$ForegroundModelList_8022746C
	00000000
	00000000
	00000000
}

PADDING: 8022749C to 802274A0 (006DB50C to 006DB510)
00000000

#new:Script $Script_BeforeBattle_802274A0
{
    0:  Call  SetSpriteShading  ( FFFFFFFF )
   10:  Call  SetCamBGColor     ( .Cam:Battle  0`  0`  0` )
   2C:  Return
   34:  End
}

#new:Script $Script_AfterBattle_802274DC
{
    0:  Return
    8:  End
}

#new:ForegroundModelList $ForegroundModelList_802274EC
{
	~Model:kpa_bt11:h2
	00000000
}

#new:Stage $Stage_802274F4
{
	$ASCII_80227BD8  % kpa_tex
	$ASCII_80227BC8  % kpa_bt11_shape
	$ASCII_80227BB8  % kpa_bt11_hit
	$Script_BeforeBattle_802274A0
	$Script_AfterBattle_802274DC
	00000000
	$ForegroundModelList_802274EC
	00000000
	00000000
	00000000
}

PADDING: 8022751C to 80227520 (006DB58C to 006DB590)
00000000

% Origin: HEURISTIC
#new:Script $Script_80227520
{
    0:  Set   *VarA  *Var0
   10:  Call  SetTexPanner  ( *VarA 00000001 )
   24:  Set   *Var0  00000000
   34:  Set   *Var1  00000000
   44:  Loop
   50:  	Call  SetTexPanOffset   ( 00000001 00000000 *Var0 *Var1 )
   6C:  	Add   *Var0  00008000
   7C:  	Add   *Var1  00000000
   8C:  	Wait  5`
   98:  EndLoop
   A0:  Return
   A8:  End
}

#new:Script $Script_BeforeBattle_802275D0
{
    0:  Call  SetSpriteShading  ( FFFFFFFF )
   10:  Call  SetCamBGColor     ( .Cam:Battle  0`  0`  0` )
   2C:  Return
   34:  End
}

#new:Script $Script_AfterBattle_8022760C
{
    0:  Return
    8:  End
}

#new:Stage $Stage_8022761C
{
	$ASCII_80227C00  % kpa_tex
	$ASCII_80227BF0  % kpa_bt13_shape
	$ASCII_80227BE0  % kpa_bt13_hit
	$Script_BeforeBattle_802275D0
	$Script_AfterBattle_8022760C
	00000000
	00000000
	00000000
	00000000
	00000000
}

PADDING: 80227644 to 80227650 (006DB6B4 to 006DB6C0)
00000000 00000000 00000000

% Origin: HEURISTIC
#new:Script $Script_80227650
{
    0:  Set   *VarA  *Var0
   10:  Call  SetTexPanner  ( *VarA 00000001 )
   24:  Set   *Var0  00000000
   34:  Set   *Var1  00000000
   44:  Loop
   50:  	Call  SetTexPanOffset   ( 00000001 00000000 *Var0 *Var1 )
   6C:  	Add   *Var0  00008000
   7C:  	Add   *Var1  00000000
   8C:  	Wait  5`
   98:  EndLoop
   A0:  Return
   A8:  End
}

#new:Script $Script_BeforeBattle_80227700
{
    0:  Call  SetSpriteShading  ( FFFFFFFF )
   10:  Call  SetCamBGColor     ( .Cam:Battle  0`  0`  0` )
   2C:  Return
   34:  End
}

#new:Script $Script_AfterBattle_8022773C
{
    0:  Return
    8:  End
}

#new:Stage $Stage_8022774C
{
	$ASCII_80227C28  % kpa_tex
	$ASCII_80227C18  % kpa_bt14_shape
	$ASCII_80227C08  % kpa_bt14_hit
	$Script_BeforeBattle_80227700
	$Script_AfterBattle_8022773C
	00000000
	00000000
	00000000
	00000000
	00000000
}

PADDING: 80227774 to 80227780 (006DB7E4 to 006DB7F0)
00000000 00000000 00000000

#new:Formation $Formation_00
{
	$BombshellBill 00000001 0000000A 00000000 00000000 00000000 00000000
	$BombshellBill 00000002 00000009 00000000 00000000 00000000 00000000
}

#new:Formation $Formation_01
{
	$BombshellBill 00000000 0000000A 00000000 00000000 00000000 00000000
	$BombshellBill 00000001 00000009 00000000 00000000 00000000 00000000
	$BombshellBill 00000002 00000008 00000000 00000000 00000000 00000000
}

#new:Vector3D $Vector3D_8022780C
{
	70` 0` -20`
}

#new:Vector3D $Vector3D_80227818
{
	100` 0` 0`
}

#new:Formation $Formation_02
{
	$BombshellBlaster $Vector3D_8022780C 0000000A 00000000 00000000 00000000 00000000
	$BombshellBlaster $Vector3D_80227818 00000009 00000000 00000000 00000000 00000000
}

#new:Vector3D $Vector3D_8022785C
{
	130` 0` 25`
}

#new:Formation $Formation_03
{
	$BombshellBlaster $Vector3D_8022780C 0000000A 00000000 00000000 00000000 00000000
	$BombshellBlaster $Vector3D_80227818 00000009 00000000 00000000 00000000 00000000
	$Koopatrol $Vector3D_8022785C 00000008 00000000 00000000 00000000 00000000
}

#new:Formation $Formation_04
{
	$BombshellBlaster $Vector3D_8022780C 0000000A 00000000 00000000 00000000 00000000
	$BombshellBlaster $Vector3D_80227818 00000009 00000000 00000000 00000000 00000000
	$Magikoopa $Vector3D_8022785C 00000008 00000000 00000000 00000000 00000000
}

#new:FormationTable $FormationTable
{
	$SJIS_80227CA8 00000002 $Formation_00 $Stage_80226234 00000000
	$SJIS_80227C94 00000003 $Formation_01 $Stage_80226234 00000000
	$SJIS_80227C78 00000002 $Formation_02 $Stage_80226234 00000000
	$SJIS_80227C54 00000003 $Formation_03 $Stage_80226234 00000000
	$SJIS_80227C30 00000003 $Formation_04 $Stage_80226234 00000000
	00000000 00000000 00000000 00000000 00000000
}

#new:StageTable $StageTable
{
	$ASCII_80227D24 $Stage_80226234
	$ASCII_80227D1C $Stage_802263B8
	$ASCII_80227D14 $Stage_8022680C
	$ASCII_80227D0C $Stage_80226AC0
	$ASCII_80227D04 $Stage_80226AC0
	$ASCII_80227CFC $Stage_80226CCC
	$ASCII_80227CF4 $Stage_80226EE4
	$ASCII_80227CEC $Stage_80226F64
	$ASCII_80227CE4 $Stage_80227370
	$ASCII_80227CDC $Stage_802273F4
	$ASCII_80227CD4 $Stage_80227474
	$ASCII_80227CCC $Stage_802274F4
	$ASCII_80227CC4 $Stage_8022761C
	$ASCII_80227CBC $Stage_8022774C
	00000000 00000000
}

#new:ASCII $ASCII_80227A00
{
	"kpa_bt01_hit"
}

#new:ASCII $ASCII_80227A10
{
	"kpa_bt01_shape"
}

#new:ASCII $ASCII_80227A20
{
	"kpa_tex"
}

#new:ASCII $ASCII_80227A28
{
	"kpa_bt01_hit"
}

#new:ASCII $ASCII_80227A38
{
	"kpa_bt01_shape"
}

#new:ASCII $ASCII_80227A48
{
	"kpa_tex"
}

#new:ASCII $ASCII_80227A50
{
	"kpa_bt02_hit"
}

#new:ASCII $ASCII_80227A60
{
	"kpa_bt02_shape"
}

#new:ASCII $ASCII_80227A70
{
	"kpa_tex"
}

% Origin: HEURISTIC
#new:ASCII $ASCII_80227A78
{
	"kpa_bt03_hit"
}

% Origin: HEURISTIC
#new:ASCII $ASCII_80227A88
{
	"kpa_bt03_shape"
}

% Origin: HEURISTIC
#new:ASCII $ASCII_80227A98
{
	"kpa_tex"
}

#new:ASCII $ASCII_80227AA0
{
	"kpa_bt04_hit"
}

#new:ASCII $ASCII_80227AB0
{
	"kpa_bt04_shape"
}

#new:ASCII $ASCII_80227AC0
{
	"kpa_tex"
}

#new:ASCII $ASCII_80227AC8
{
	"kpa_bt04_hit"
}

#new:ASCII $ASCII_80227AD8
{
	"kpa_bt04_shape"
}

#new:ASCII $ASCII_80227AE8
{
	"kpa_tex"
}

#new:ASCII $ASCII_80227AF0
{
	"kpa_bt04_hit"
}

#new:ASCII $ASCII_80227B00
{
	"kpa_bt04_shape"
}

#new:ASCII $ASCII_80227B10
{
	"kpa_tex"
}

#new:ASCII $ASCII_80227B18
{
	"kpa_bt05_hit"
}

#new:ASCII $ASCII_80227B28
{
	"kpa_bt05_shape"
}

#new:ASCII $ASCII_80227B38
{
	"kpa_tex"
}

#new:ASCII $ASCII_80227B40
{
	"kpa_bt07_hit"
}

#new:ASCII $ASCII_80227B50
{
	"kpa_bt07_shape"
}

#new:ASCII $ASCII_80227B60
{
	"kpa_tex"
}

#new:ASCII $ASCII_80227B68
{
	"kpa_bt08_hit"
}

#new:ASCII $ASCII_80227B78
{
	"kpa_bt08_shape"
}

#new:ASCII $ASCII_80227B88
{
	"kpa_tex"
}

#new:ASCII $ASCII_80227B90
{
	"kpa_bt09_hit"
}

#new:ASCII $ASCII_80227BA0
{
	"kpa_bt09_shape"
}

#new:ASCII $ASCII_80227BB0
{
	"kpa_tex"
}

#new:ASCII $ASCII_80227BB8
{
	"kpa_bt11_hit"
}

#new:ASCII $ASCII_80227BC8
{
	"kpa_bt11_shape"
}

#new:ASCII $ASCII_80227BD8
{
	"kpa_tex"
}

#new:ASCII $ASCII_80227BE0
{
	"kpa_bt13_hit"
}

#new:ASCII $ASCII_80227BF0
{
	"kpa_bt13_shape"
}

#new:ASCII $ASCII_80227C00
{
	"kpa_tex"
}

#new:ASCII $ASCII_80227C08
{
	"kpa_bt14_hit"
}

#new:ASCII $ASCII_80227C18
{
	"kpa_bt14_shape"
}

#new:ASCII $ASCII_80227C28
{
	"kpa_tex"
}

#new:SJIS $SJIS_80227C30
{
	スーパーキラーたいほうx２,カメック % su-pa-kira-taihoux2,kamekku
}

#new:SJIS $SJIS_80227C54
{
	スーパーキラーたいほうx２,トゲノコ % su-pa-kira-taihoux2,togenoko
}

#new:SJIS $SJIS_80227C78
{
	スーパーキラーたいほうx２ % su-pa-kira-taihoux2
}

#new:SJIS $SJIS_80227C94
{
	スーパーキラーx３ % su-pa-kira-x3
}

#new:SJIS $SJIS_80227CA8
{
	スーパーキラーx２ % su-pa-kira-x2
}

#new:ASCII $ASCII_80227CBC
{
	"kpa_14"
}

#new:ASCII $ASCII_80227CC4
{
	"kpa_13"
}

#new:ASCII $ASCII_80227CCC
{
	"kpa_11"
}

#new:ASCII $ASCII_80227CD4
{
	"kpa_09"
}

#new:ASCII $ASCII_80227CDC
{
	"kpa_08"
}

#new:ASCII $ASCII_80227CE4
{
	"kpa_07"
}

#new:ASCII $ASCII_80227CEC
{
	"kpa_05"
}

#new:ASCII $ASCII_80227CF4
{
	"kpa_04c"
}

#new:ASCII $ASCII_80227CFC
{
	"kpa_04b"
}

#new:ASCII $ASCII_80227D04
{
	"kpa_04"
}

#new:ASCII $ASCII_80227D0C
{
	"kpa_03"
}

#new:ASCII $ASCII_80227D14
{
	"kpa_02"
}

#new:ASCII $ASCII_80227D1C
{
	"kpa_01b"
}

#new:ASCII $ASCII_80227D24
{
	"kpa_01"
}

PADDING: 80227D2C to 80227D30 (006DBD9C to 006DBDA0)
00000000

