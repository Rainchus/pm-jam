% Script File: 09 Area IWA.bscr
% Decoded from: 4D01F0 to 4DA5E0 (09 Area IWA)

#new:Function $Function_80218000
{
    0:  ADDIU     SP, SP, FFE8
    4:  SW        S0, 10 (SP)
    8:  COPY      S0, A0
    C:  SW        RA, 14 (SP)
   10:  LW        V0, C (S0)
   14:  JAL       ~Func:get_variable
   18:  LW        A1, 0 (V0)
   1C:  LW        A0, 148 (S0)
   20:  JAL       ~Func:get_actor
   24:  COPY      S0, V0
   28:  BNE       S0, R0, .o40
   2C:  NOP
   30:  LW        V1, 8 (V0)
   34:  LI        V0, 4
   38:  BEQ       R0, R0, .o48
   3C:  SB        V0, 1D (V1)
        .o40
   40:  LW        V0, 8 (V0)
   44:  SB        R0, 1D (V0)
        .o48
   48:  LW        RA, 14 (SP)
   4C:  LW        S0, 10 (SP)
   50:  LI        V0, 2
   54:  JR        RA
   58:  ADDIU     SP, SP, 18
}

#new:Function $Function_8021805C
{
    0:  ADDIU     SP, SP, FFE0
    4:  SW        S1, 14 (SP)
    8:  COPY      S1, A0
    C:  SW        RA, 18 (SP)
   10:  SW        S0, 10 (SP)
   14:  LW        S0, C (S1)
   18:  LW        A1, 0 (S0)
   1C:  JAL       ~Func:get_variable
   20:  ADDIU     S0, S0, 4
   24:  COPY      A0, S1
   28:  LW        A1, 0 (S0)
   2C:  JAL       ~Func:get_variable
   30:  COPY      S0, V0
   34:  COPY      A0, S0
   38:  JAL       ~Func:start_rumble
   3C:  COPY      A1, V0
   40:  LW        RA, 18 (SP)
   44:  LW        S1, 14 (SP)
   48:  LW        S0, 10 (SP)
   4C:  LI        V0, 2
   50:  JR        RA
   54:  ADDIU     SP, SP, 20
}

PADDING: 802180B4 to 802180C0 (004D02A4 to 004D02B0)
00000000 00000000 00000000

#new:Function $Function_802180C0
{
    0:  ADDIU     SP, SP, FFE0
    4:  SW        S1, 14 (SP)
    8:  COPY      S1, A0
    C:  SW        RA, 18 (SP)
   10:  SW        S0, 10 (SP)
   14:  LW        S0, C (S1)
   18:  LW        A1, 0 (S0)
   1C:  JAL       ~Func:get_variable
   20:  ADDIU     S0, S0, 4
   24:  COPY      A0, S1
   28:  LW        A1, 0 (S0)
   2C:  JAL       ~Func:get_variable
   30:  COPY      S0, V0
   34:  COPY      A0, S0
   38:  JAL       ~Func:start_rumble
   3C:  COPY      A1, V0
   40:  LW        RA, 18 (SP)
   44:  LW        S1, 14 (SP)
   48:  LW        S0, 10 (SP)
   4C:  LI        V0, 2
   50:  JR        RA
   54:  ADDIU     SP, SP, 20
}

PADDING: 80218118 to 80218120 (004D0308 to 004D0310)
00000000 00000000

#new:Function $Function_80218120
{
    0:  ADDIU     SP, SP, FFE8
    4:  SW        S0, 10 (SP)
    8:  COPY      S0, A0
    C:  LI        A1, *GB_IWA00_Whacka_HitCount
   14:  CLEAR     A0
   18:  SW        RA, 14 (SP)
   1C:  JAL       ~Func:get_variable
   20:  SW        R0, 84 (S0)
   24:  SLTI      V0, V0, 8
   28:  BNE       V0, R0, .o34
   2C:  LI        V0, 1
   30:  SW        V0, 84 (S0)
        .o34
   34:  LW        RA, 14 (SP)
   38:  LW        S0, 10 (SP)
   3C:  LI        V0, 2
   40:  JR        RA
   44:  ADDIU     SP, SP, 18
}

PADDING: 80218168 to 80218170 (004D0358 to 004D0360)
00000000 00000000

#new:Function $Function_80218170
{
    0:  ADDIU     SP, SP, FFE8
    4:  SW        S0, 10 (SP)
    8:  COPY      S0, A0
    C:  LI        A1, *GB_IWA00_Whacka_HitCount
   14:  CLEAR     A0
   18:  SW        RA, 14 (SP)
   1C:  JAL       ~Func:get_variable
   20:  SW        R0, 84 (S0)
   24:  SLTI      V0, V0, 8
   28:  BNE       V0, R0, .o34
   2C:  LI        V0, 1
   30:  SW        V0, 84 (S0)
        .o34
   34:  LW        RA, 14 (SP)
   38:  LW        S0, 10 (SP)
   3C:  LI        V0, 2
   40:  JR        RA
   44:  ADDIU     SP, SP, 18
}

PADDING: 802181B8 to 802181C0 (004D03A8 to 004D03B0)
00000000 00000000

#new:Function $Function_802181C0
{
    0:  ADDIU     SP, SP, FFE8
    4:  SW        S0, 10 (SP)
    8:  COPY      S0, A0
    C:  LI        A1, *GB_IWA00_Whacka_HitCount
   14:  CLEAR     A0
   18:  SW        RA, 14 (SP)
   1C:  JAL       ~Func:get_variable
   20:  SW        R0, 84 (S0)
   24:  SLTI      V0, V0, 8
   28:  BNE       V0, R0, .o34
   2C:  LI        V0, 1
   30:  SW        V0, 84 (S0)
        .o34
   34:  LW        RA, 14 (SP)
   38:  LW        S0, 10 (SP)
   3C:  LI        V0, 2
   40:  JR        RA
   44:  ADDIU     SP, SP, 18
}

PADDING: 80218208 to 80218210 (004D03F8 to 004D0400)
00000000 00000000

#new:Formation $Formation_00
{
	$Cleft 00000001 0000000A 00000000 00000000 00000000 00000000
}

#new:Formation $Formation_01
{
	$Cleft 00000001 0000000A 00000000 00000000 00000000 00000000
	$Cleft 00000002 00000009 00000000 00000000 00000000 00000000
}

#new:Formation $Formation_02
{
	$Cleft 00000000 0000000A 00000000 00000000 00000000 00000000
	$Cleft 00000001 00000009 00000000 00000000 00000000 00000000
	$Cleft 00000002 00000008 00000000 00000000 00000000 00000000
}

#new:Formation $Formation_03
{
	$Cleft 00000001 0000000A 00000000 00000000 00000000 00000000
	$MontyMole 00000002 00000009 00000000 00000000 00000000 00000000
}

#new:Formation $Formation_04
{
	$Cleft 00000000 0000000A 00000000 00000000 00000000 00000000
	$MontyMole 00000001 00000009 00000000 00000000 00000000 00000000
	$MontyMole 00000002 00000008 00000000 00000000 00000000 00000000
}

#new:Formation $Formation_05
{
	$MontyMole 00000001 0000000A 00000000 00000000 00000000 00000000
}

#new:Formation $Formation_06
{
	$MontyMole 00000001 0000000A 00000000 00000000 00000000 00000000
	$MontyMole 00000002 00000009 00000000 00000000 00000000 00000000
}

#new:Formation $Formation_07
{
	$MontyMole 00000000 0000000A 00000000 00000000 00000000 00000000
	$MontyMole 00000001 00000009 00000000 00000000 00000000 00000000
	$MontyMole 00000002 00000008 00000000 00000000 00000000 00000000
}

#new:Formation $Formation_08
{
	$MontyMole 00000000 0000000A 00000000 00000000 00000000 00000000
	$MontyMole 00000001 00000009 00000000 00000000 00000000 00000000
	$MontyMole 00000002 00000008 00000000 00000000 00000000 00000000
	$MontyMole 00000003 00000007 00000000 00000000 00000000 00000000
}

#new:Formation $Formation_09
{
	$MontyMole 00000001 0000000A 00000000 00000000 00000000 00000000
	$Cleft 00000002 00000009 00000000 00000000 00000000 00000000
}

#new:Formation $Formation_0A
{
	$MontyMole 00000000 0000000A 00000000 00000000 00000000 00000000
	$MontyMole 00000001 00000009 00000000 00000000 00000000 00000000
	$Cleft 00000002 00000008 00000000 00000000 00000000 00000000
}

#new:Formation $Formation_0B
{
	$MontyMole 00000000 0000000A 00000000 00000000 00000000 00000000
	$Cleft 00000001 00000009 00000000 00000000 00000000 00000000
	$MontyMole 00000002 00000008 00000000 00000000 00000000 00000000
}

#new:Vector3D $Vector3D_8021853C
{
	90` 70` 0`
}

#new:Formation $Formation_0C
{
	$Buzzar $Vector3D_8021853C 0000000A 00000000 00000000 00000000 00000000
}

#new:Formation $Formation_0D
{
	$Cleft 00000000 0000000A 00000000 00000000 00000000 00000000
	$MontyMole 00000001 00000009 00000000 00000000 00000000 00000000
	$WhackaA 00000002 00000008 00000000 00000000 00000000 00000000
}

#new:FormationTable $FormationTable
{
	$SJIS_80222330 00000001 $Formation_00 $Stage_802208B0 00000000
	$SJIS_80222320 00000002 $Formation_01 $Stage_802208B0 00000000
	$SJIS_80222310 00000003 $Formation_02 $Stage_802208B0 00000000
	$SJIS_802222F8 00000002 $Formation_03 $Stage_802208B0 00000000
	$SJIS_802222DC 00000003 $Formation_04 $Stage_802208B0 00000000
	$SJIS_802222D0 00000001 $Formation_05 $Stage_802208B0 00000000
	$SJIS_802222C0 00000002 $Formation_06 $Stage_802208B0 00000000
	$SJIS_802222B0 00000003 $Formation_07 $Stage_802208B0 00000000
	$SJIS_802222A0 00000004 $Formation_08 $Stage_802208B0 00000000
	$SJIS_80222288 00000002 $Formation_09 $Stage_802208B0 00000000
	$SJIS_8022226C 00000003 $Formation_0A $Stage_802208B0 00000000
	$SJIS_80222248 00000003 $Formation_0B $Stage_802208B0 00000000
	$SJIS_8022223C 00000001 $Formation_0C $Stage_802215CC 00000000
	$SJIS_80222230 00000003 $Formation_0D $Stage_802215CC 00000000
	00000000 00000000 00000000 00000000 00000000
}

#new:StageTable $StageTable
{
	$ASCII_8022234C $Stage_802208B0
	$ASCII_80222344 $Stage_80221560
	$ASCII_8022233C $Stage_802215CC
	00000000 00000000
}

PADDING: 80218704 to 80218710 (004D08F4 to 004D0900)
00000000 00000000 00000000

#new:DefenseTable $DefenseTable_80218710
{
	.Element:Normal 00000002
	.Element:Fire   00000063
	.Element:Magic  00000000
	.Element:End
}

#new:DefenseTable $DefenseTable_8021872C
{
	.Element:Normal 00000000
	.Element:Fire   00000063
	.Element:End
}

#new:StatusTable $StatusTable_80218740
{
	.Status:Normal      0`
	.Status:Default     0`
	.Status:Sleep      40`
	.Status:Poison     50`
	.Status:Frozen    100`
	.Status:Dizzy      50`
	.Status:Fear        0`
	.Status:Static     50`
	.Status:Paralyze   50`
	.Status:Shrink     75`
	.Status:Stop       90`
	.Status:DefaultTurnMod    0`
	.Status:SleepTurnMod     -1`
	.Status:PoisonTurnMod     0`
	.Status:FrozenTurnMod     0`
	.Status:DizzyTurnMod     -1`
	.Status:FearTurnMod       0`
	.Status:StaticTurnMod     0`
	.Status:ParalyzeTurnMod   0`
	.Status:ShrinkTurnMod     0`
	.Status:StopTurnMod       0`
	.Status:End
}

#new:PartsTable $PartsTable_802187EC
{
	00800000 01000000 001600FF $IdleAnimations_80218838 $DefenseTable_80218710 00000010 00000000 00F60000 00000000
}

#new:Actor $Cleft
{
	% stats
	[Index]        11b
	[Level]        10`b
	[MaxHP]         2`b
	[Coins]         2`b
	[Flags]       00000000
	[StatusTable] $StatusTable_80218740
	% ai
	[PartsCount]    1`s
	[PartsTable]  $PartsTable_802187EC
	[Script]      $Script_Init_802188D0
	% move effectiveness
	[Escape]       80`b
	[Item]         40`b
	[AirLift]      40`b
	[Hurricane]    40`b % Bow's "Spook" as well
	[UpAndAway]    95`b
	[PowerBounce]  95`b
	[SpinSmash]     0`b % weight (0-4)
	% ui positions
	[Size]         44`b  36`b % width height
	[HealthBar]     0`b   0`b % dx dy
	[StatusTurn]  -10`b  20`b % dx dy
	[StatusIcon]   10`b  20`b % dx dy
}

#new:IdleAnimations $IdleAnimations_80218838
{
	.Status:Normal    00300002
	.Status:Stone     00300000
	.Status:Sleep     0030000C
	.Status:Poison    00300002
	.Status:Stop      00300000
	.Status:Static    00300002
	.Status:Paralyze  00300000
	.Status:Dizzy     0030000E
	.Status:Fear      0030000E
	.Status:End
}

#new:IdleAnimations $IdleAnimations_80218884
{
	.Status:Normal    00300005
	.Status:Stone     00300001
	.Status:Sleep     0030000D
	.Status:Poison    00300005
	.Status:Stop      00300001
	.Status:Static    00300005
	.Status:Paralyze  00300001
	.Status:Dizzy     0030000F
	.Status:Fear      0030000F
	.Status:End
}

#new:Script $Script_Init_802188D0
{
    0:  Call  BindIdle      ( .Actor:Self $Script_Idle_80218934 )
   14:  Call  BindTakeTurn  ( .Actor:Self $Script_TakeTurn_8021A3EC )
   28:  Call  BindHandleEvent   ( .Actor:Self $Script_HandleEvent_80218C3C )
   3C:  Call  SetActorVar   ( .Actor:Self 00000000 00000000 )
   54:  Return
   5C:  End
}

#new:Script $Script_Idle_80218934
{
    0:  Return
    8:  End
}

#new:Script $Script_80218944
{
    0:  Call  SetActorVar   ( .Actor:Self 00000000 00000001 )
   18:  Call  SetActorVar   ( .Actor:Self 00000001 00000002 )
   30:  Call  SetAnimation  ( .Actor:Self 00000001 00300007 )
   48:  Call  SetActorRotationOffset    ( .Actor:Self 00000000 00000010 00000000 )
   64:  Thread
   6C:  	Set   *Var0  00000000
   7C:  	Loop  00000005
   88:  		Add   *Var0  FFFFFFDC
   98:  		Call  SetActorRotation  ( .Actor:Self 00000000 00000000 *Var0 )
   B4:  		Wait  1`
   C0:  	EndLoop
   C8:  EndThread
   D0:  Call  GetActorPos   ( .Actor:Self *Var0 *Var1 *Var2 )
   EC:  Call  SetActorJumpGravity   ( .Actor:Self *Fixed[1.3] )
  100:  Sub   *Var1  00000006
  110:  Call  SetGoalPos    ( .Actor:Self *Var0 *Var1 *Var2 )
  12C:  Call  JumpToGoal    ( .Actor:Self  20` .False .True .False )
  14C:  Call  $Function_8021805C    ( 000000C8 0000000A )
  160:  Thread
  168:  	Call  ShakeCam  ( .Cam:Battle 00000000  5` *Fixed[1.0] )
  184:  EndThread
  18C:  Call  PlayEffect        ( ~FX:SmokeImpact:Large *Var0 *Var1 *Var2 00000028 00000008 *Fixed[0.0] 00000014 00000000 00000000 00000000 00000000 00000000 )
  1D0:  Call  SetActorPos       ( .Actor:Self *Var0  0` *Var2 )
  1EC:  Call  SetActorRotationOffset    ( .Actor:Self 00000000 00000000 00000000 )
  208:  Call  SetActorRotation  ( .Actor:Self 00000000 00000000 00000000 )
  224:  Call  SetAnimation      ( .Actor:Self 00000001 00300003 )
  23C:  Call  SetIdleAnimations ( .Actor:Self 00000001 $IdleAnimations_80218884 )
  254:  Call  SetDefenseTable   ( .Actor:Self 00000001 $DefenseTable_8021872C )
  26C:  Call  SetTargetOffset   ( .Actor:Self 00000001  0`  15` )
  288:  Call  8027D4C8  ( FFFFFF81 00000001 00000000 FFFFFFF9 )
  2A4:  Call  SetPartEventBits  ( .Actor:Self 00000001 00000010 .False )
  2C0:  Call  $Function_80218000        ( 00000000 )
  2D0:  Call  SetActorFlagBits  ( .Actor:Self 00000400 .True )
  2E8:  Return
  2F0:  End
}

#new:Script $Script_HandleEvent_80218C3C
{
    0:  Call  UseIdleAnimation  ( .Actor:Self .False )
   14:  Call  EnableIdleScript  ( .Actor:Self 00000000 )
   28:  Call  GetLastEvent      ( .Actor:Self *Var0 )
   3C:  Switch  *Var0
   48:  	CaseOR  ==  .Event:HitCombo % 9
   54:  	CaseOR  ==  .Event:Hit % A
   60:  		Call  GetLastElement    ( *Var0 )
   70:  		Switch  *Var0
   7C:  			Case  &  00000200
   88:  				ExecWait  $Script_80218944
   94:  			Default
   9C:  				Call  GetActorVar   ( .Actor:Self 00000000 *Var0 )
   B4:  				If  *Var0  ==  00000001
   C4:  					SetConst  *Var1  00300009
   D4:  				Else
   DC:  					SetConst  *Var1  00300008
   EC:  				EndIf
   F4:  				SetConst  *Var0  00000001
  104:  				ExecWait  DoNormalHit
  110:  		EndSwitch
  118:  	EndCaseGroup
  120:  	Case  ==  .Event:BurnHit % E
  12C:  		Call  GetLastElement    ( *Var0 )
  13C:  		Switch  *Var0
  148:  			Case  &  00000200
  154:  				ExecWait  $Script_80218944
  160:  			Default
  168:  				Call  SetPartEventBits  ( .Actor:Self 00000001 00000200 .True )
  184:  				Call  GetActorVar       ( .Actor:Self 00000000 *Var0 )
  19C:  				If  *Var0  ==  00000001
  1AC:  					SetConst  *Var0  00000001
  1BC:  					SetConst  *Var1  00300009
  1CC:  					SetConst  *Var2  FFFFFFFF
  1DC:  					ExecWait  DoBurnHit
  1E8:  				Else
  1F0:  					SetConst  *Var0  00000001
  200:  					SetConst  *Var1  00300008
  210:  					SetConst  *Var2  FFFFFFFF
  220:  					ExecWait  DoBurnHit
  22C:  				EndIf
  234:  				Call  SetPartEventBits  ( .Actor:Self 00000001 00000200 .False )
  250:  		EndSwitch
  258:  	Case  ==  .Event:BurnDeath % 24
  264:  		Call  GetActorVar   ( .Actor:Self 00000000 *Var0 )
  27C:  		If  *Var0  ==  00000001
  28C:  			SetConst  *Var0  00000001
  29C:  			SetConst  *Var1  00300009
  2AC:  			SetConst  *Var2  FFFFFFFF
  2BC:  			ExecWait  DoBurnHit
  2C8:  			SetConst  *Var0  00000001
  2D8:  			SetConst  *Var1  00300009
  2E8:  			ExecWait  DoDeath
  2F4:  		Else
  2FC:  			SetConst  *Var0  00000001
  30C:  			SetConst  *Var1  00300008
  31C:  			SetConst  *Var2  FFFFFFFF
  32C:  			ExecWait  DoBurnHit
  338:  			SetConst  *Var0  00000001
  348:  			SetConst  *Var1  00300008
  358:  			ExecWait  DoDeath
  364:  		EndIf
  36C:  		Return
  374:  	Case  ==  .Event:SpinSmashHit % B
  380:  		Call  GetActorVar   ( .Actor:Self 00000000 *Var0 )
  398:  		If  *Var0  ==  00000001
  3A8:  			SetConst  *Var1  00300009
  3B8:  		Else
  3C0:  			SetConst  *Var1  00300008
  3D0:  		EndIf
  3D8:  		SetConst  *Var0  00000001
  3E8:  		ExecWait  DoSpinSmashHit
  3F4:  	Case  ==  .Event:SpinSmashDeath % 21
  400:  		Call  GetActorVar   ( .Actor:Self 00000000 *Var0 )
  418:  		If  *Var0  ==  00000001
  428:  			SetConst  *Var0  00000001
  438:  			SetConst  *Var1  00300009
  448:  			ExecWait  DoSpinSmashHit
  454:  			SetConst  *Var0  00000001
  464:  			SetConst  *Var1  00300009
  474:  			ExecWait  DoDeath
  480:  		Else
  488:  			SetConst  *Var0  00000001
  498:  			SetConst  *Var1  00300008
  4A8:  			ExecWait  DoSpinSmashHit
  4B4:  			SetConst  *Var0  00000001
  4C4:  			SetConst  *Var1  00300008
  4D4:  			ExecWait  DoDeath
  4E0:  		EndIf
  4E8:  		Return
  4F0:  	Case  ==  .Event:ShockHit % 2F
  4FC:  		SetConst  *Var0  00000001
  50C:  		SetConst  *Var1  00300008
  51C:  		ExecWait  DoShockHit
  528:  		SetConst  *Var0  00000001
  538:  		SetConst  *Var1  00300008
  548:  		ExecWait  DoJumpBack
  554:  		Call  JumpToGoal    ( .Actor:Self  5` .False .True .False )
  574:  		SetConst  *Var0  00000001
  584:  		SetConst  *Var1  00300007
  594:  		ExecWait  DoReturnHome
  5A0:  		Call  SetActorJumpGravity   ( .Actor:Self *Fixed[1.6] )
  5B4:  		Call  JumpToGoal    ( .Actor:Self  5` .False .True .False )
  5D4:  	Case  ==  .Event:ShockDeath % 26
  5E0:  		SetConst  *Var0  00000001
  5F0:  		SetConst  *Var1  00300008
  600:  		ExecWait  DoShockHit
  60C:  		SetConst  *Var0  00000001
  61C:  		SetConst  *Var1  00300008
  62C:  		ExecWait  DoDeath
  638:  		Return
  640:  	Case  ==  .Event:StarBeam % 13
  64C:  	Case  ==  .Event:SpikeTaunt % 1B
  658:  		Call  GetStatusFlags    ( .Actor:Self *Var0 )
  66C:  		If  *Var0  !&  ~Flags:StatusFlags:Sleep|Frozen|Fear|Paralyze|Dizzy|Stone|Stop % 35D000
  67C:  			Call  SetAnimation  ( .Actor:Self 00000001 00300018 )
  694:  		EndIf
  69C:  		Wait  10`
  6A8:  		Call  GetActorPos       ( .Actor:Self *Var0 *Var1 *Var2 )
  6C4:  		Call  GetStatusFlags    ( .Actor:Self *Var3 )
  6D8:  		If  *Var3  &  ~Flags:StatusFlags:Shrink % 80000
  6E8:  			Add   *Var0  FFFFFFFD
  6F8:  			Add   *Var1  0000000A
  708:  		Else
  710:  			Add   *Var0  FFFFFFF8
  720:  			Add   *Var1  0000001B
  730:  		EndIf
  738:  		Call  PlayEffect    ( ~FX:LensFlare:Rotating *Var0 *Var1 *Var2 00000014 00000000 00000000 00000000 00000000 00000000 00000000 00000000 00000000 )
  77C:  		Wait  20`
  788:  	CaseOR  ==  00000017 % 17
  794:  	CaseOR  ==  .Event:Immune % 19
  7A0:  	CaseOR  ==  .Event:AirLiftFailed % 1F
  7AC:  		Call  GetActorVar   ( .Actor:Self 00000000 *Var0 )
  7C4:  		If  *Var0  ==  00000001
  7D4:  			SetConst  *Var1  00300003
  7E4:  		Else
  7EC:  			SetConst  *Var1  00300002
  7FC:  		EndIf
  804:  		SetConst  *Var0  00000001
  814:  		ExecWait  DoImmune
  820:  	EndCaseGroup
  828:  	Case  ==  .Event:Death % 20
  834:  		Call  GetActorVar   ( .Actor:Self 00000000 *Var0 )
  84C:  		If  *Var0  ==  00000001
  85C:  			SetConst  *Var0  00000001
  86C:  			SetConst  *Var1  00300009
  87C:  			ExecWait  DoNormalHit
  888:  			Wait  10`
  894:  			SetConst  *Var0  00000001
  8A4:  			SetConst  *Var1  00300009
  8B4:  			ExecWait  DoDeath
  8C0:  		Else
  8C8:  			SetConst  *Var0  00000001
  8D8:  			SetConst  *Var1  00300008
  8E8:  			ExecWait  DoNormalHit
  8F4:  			Wait  10`
  900:  			SetConst  *Var0  00000001
  910:  			SetConst  *Var1  00300008
  920:  			ExecWait  DoDeath
  92C:  		EndIf
  934:  		Return
  93C:  	Case  ==  .Event:RecoverStatus % 31
  948:  		Call  GetActorVar   ( .Actor:Self 00000000 *Var0 )
  960:  		If  *Var0  ==  00000000
  970:  			SetConst  *Var0  00000001
  980:  			SetConst  *Var1  00300002
  990:  			ExecWait  DoRecover
  99C:  		EndIf
  9A4:  	Case  ==  .Event:ScareAway % 39
  9B0:  		Call  GetActorVar   ( .Actor:Self 00000000 *Var0 )
  9C8:  		If  *Var0  ==  00000001
  9D8:  			SetConst  *Var0  00000001
  9E8:  			SetConst  *Var1  00300003
  9F8:  			ExecWait  DoImmune
  A04:  		Else
  A0C:  			SetConst  *Var0  00000001
  A1C:  			SetConst  *Var1  00300007
  A2C:  			SetConst  *Var2  00300008
  A3C:  			ExecWait  DoScareAway
  A48:  			Return
  A50:  		EndIf
  A58:  	Case  ==  .Event:BeginAirLift % 3A
  A64:  		SetConst  *Var0  00000001
  A74:  		SetConst  *Var1  0030000F
  A84:  		ExecWait  DoAirLift
  A90:  	Case  ==  .Event:BlowAway % 16
  A9C:  		Call  GetActorVar   ( .Actor:Self 00000000 *Var0 )
  AB4:  		If  *Var0  ==  00000001
  AC4:  			SetConst  *Var0  00000001
  AD4:  			SetConst  *Var1  0030000F
  AE4:  		Else
  AEC:  			SetConst  *Var0  00000001
  AFC:  			SetConst  *Var1  00300008
  B0C:  		EndIf
  B14:  		ExecWait  DoBlowAway
  B20:  		Return
  B28:  	Default
  B30:  EndSwitch
  B38:  Call  EnableIdleScript  ( .Actor:Self 00000001 )
  B4C:  Call  UseIdleAnimation  ( .Actor:Self .True )
  B60:  Return
  B68:  End
}

#new:Script $Script_802197AC
{
    0:  Call  UseIdleAnimation  ( .Actor:Self .False )
   14:  Call  EnableIdleScript  ( .Actor:Self 00000000 )
   28:  Call  AddActorDecoration    ( .Actor:Self 00000001 00000000 .Decoration:Sweat )
   44:  Call  SetAnimationRate  ( .Actor:Self 00000001 *Fixed[3.0] )
   5C:  Call  SetAnimation      ( .Actor:Self 00000001 00300003 )
   74:  Wait  20`
   80:  Call  SetAnimationRate  ( .Actor:Self 00000001 *Fixed[1.0] )
   98:  Call  SetAnimation      ( .Actor:Self 00000001 00300005 )
   B0:  Call  RemoveActorDecoration ( .Actor:Self 00000001 00000000 )
   C8:  Call  GetActorVar       ( .Actor:Self 00000001 *Var0 )
   E0:  If  *Var0  >  00000000
   F0:  	Sub   *Var0  00000001
  100:  	Call  SetActorVar   ( .Actor:Self 00000001 *Var0 )
  118:  Else
  120:  	Call  SetActorRotationOffset    ( .Actor:Self 00000000 00000010 00000000 )
  13C:  	Call  SetAnimation  ( .Actor:Self 00000001 00300003 )
  154:  	Thread
  15C:  		Wait  3`
  168:  		Loop  00000005
  174:  			Add   *Var0  00000024
  184:  			Call  SetActorRotation  ( .Actor:Self 00000000 00000000 *Var0 )
  1A0:  			Wait  1`
  1AC:  		EndLoop
  1B4:  	EndThread
  1BC:  	Call  GetActorPos   ( .Actor:Self *Var0 *Var1 *Var2 )
  1D8:  	Sub   *Var1  00000006
  1E8:  	Call  SetActorJumpGravity   ( .Actor:Self *Fixed[1.3] )
  1FC:  	Call  SetGoalPos    ( .Actor:Self *Var0 *Var1 *Var2 )
  218:  	Call  JumpToGoal    ( .Actor:Self  10` .False .True .False )
  238:  	Call  $Function_8021805C    ( 000000C8 0000000A )
  24C:  	Thread
  254:  		Call  ShakeCam  ( .Cam:Battle 00000000  5` *Fixed[1.0] )
  270:  	EndThread
  278:  	Call  SetActorRotationOffset    ( .Actor:Self 00000000 00000000 00000000 )
  294:  	Call  SetActorRotation  ( .Actor:Self 00000000 00000000 00000000 )
  2B0:  	Call  SetActorPos       ( .Actor:Self *Var0  0` *Var2 )
  2CC:  	Call  SetActorVar       ( .Actor:Self 00000000 00000000 )
  2E4:  	Call  SetAnimation      ( .Actor:Self 00000001 00300002 )
  2FC:  	Call  SetIdleAnimations ( .Actor:Self 00000001 $IdleAnimations_80218838 )
  314:  	Call  SetDefenseTable   ( .Actor:Self 00000001 $DefenseTable_80218710 )
  32C:  	Call  SetTargetOffset   ( .Actor:Self 00000001  0`  22` )
  348:  	Call  8027D4C8  ( FFFFFF81 00000001 00000000 FFFFFFF6 )
  364:  	Call  SetPartEventBits  ( .Actor:Self 00000001 00000010 .True )
  380:  	Wait  1`
  38C:  	Call  $Function_80218000        ( 00000001 )
  39C:  	Call  SetActorFlagBits  ( .Actor:Self 00000400 .False )
  3B4:  EndIf
  3BC:  Call  EnableIdleScript  ( .Actor:Self 00000001 )
  3D0:  Call  UseIdleAnimation  ( .Actor:Self .True )
  3E4:  Return
  3EC:  End
}

#new:Script $Script_80219BA0
{
    0:  Call  UseIdleAnimation  ( .Actor:Self .False )
   14:  Call  EnableIdleScript  ( .Actor:Self 00000000 )
   28:  Call  SetTargetActor    ( .Actor:Self .Actor:Player )
   3C:  Call  SetGoalToTarget   ( .Actor:Self )
   4C:  Call  UseBattleCamPreset    ( 0000003F )
   5C:  Call  BattleCamTargetActor  ( .Actor:Self )
   6C:  Call  8024ECF8  ( FFFFFFFF 00000001 00000000 )
   84:  Call  MoveBattleCamOver (  30` )
   94:  Thread
   9C:  	Call  GetActorPos   ( .Actor:Self *Var0 *Var1 *Var2 )
   B8:  	Call  PlayEffect    ( ~FX:SmokeImpact:Small *Var0 *Var1 *Var2 00000020 00000004 00000000 0000000A 00000000 00000000 00000000 00000000 00000000 )
   FC:  	Wait  10`
  108:  	Call  PlayEffect    ( ~FX:SmokeImpact:Small *Var0 *Var1 *Var2 00000020 00000004 00000000 0000000A 00000000 00000000 00000000 00000000 00000000 )
  14C:  	Wait  5`
  158:  	Call  PlayEffect    ( ~FX:SmokeImpact:Small *Var0 *Var1 *Var2 00000020 00000004 00000000 0000000A 00000000 00000000 00000000 00000000 00000000 )
  19C:  EndThread
  1A4:  Call  SetAnimation      ( .Actor:Self 00000001 00300010 )
  1BC:  Wait  10`
  1C8:  Call  SetTargetActor    ( .Actor:Self .Actor:Player )
  1DC:  Call  SetAnimation      ( .Actor:Self 00000001 00300011 )
  1F4:  Call  SetGoalToTarget   ( .Actor:Self )
  204:  Call  AddGoalPos        ( .Actor:Self  50`  0`  -5` )
  220:  Call  SetActorSpeed     ( .Actor:Self *Fixed[4.0] )
  234:  Call  RunToGoal ( .Actor:Self  0` .False )
  24C:  Call  SetAnimation      ( .Actor:Self 00000001 00300000 )
  264:  Wait  8`
  270:  Call  PlaySoundAtActor  ( .Actor:Self 000020D1 )
  284:  Call  SetActorSounds    ( .Actor:Self .ActorSound:Walk 00000000 00000000 )
  2A0:  Call  EnemyTestTarget   ( .Actor:Self *Var0 ~Flags:DamageType:0 00000000 00000002 00000010 )
  2C4:  Switch  *Var0
  2D0:  	CaseOR  ==  .HitResult:Miss % 6
  2DC:  	CaseOR  ==  .HitResult:Lucky % 5
  2E8:  		Set   *VarA  *Var0
  2F8:  		If  *VarA  ==  .HitResult:Lucky % 5
  308:  			Thread
  310:  				Wait  10`
  31C:  				Call  EnemyTestTarget   ( .Actor:Self *Var0 ~Flags:DamageType:TriggerLucky 00000000 00000000 00000000 )
  340:  			EndThread
  348:  		EndIf
  350:  		Call  SetAnimation  ( .Actor:Self 00000001 00300011 )
  368:  		Call  SetGoalToTarget       ( .Actor:Self )
  378:  		Call  GetGoalPos    ( .Actor:Self *Var0 *Var1 *Var2 )
  394:  		Sub   *Var0  00000064
  3A4:  		Set   *Var1  00000000
  3B4:  		Call  SetGoalPos    ( .Actor:Self *Var0 *Var1 *Var2 )
  3D0:  		Call  SetActorSpeed ( .Actor:Self *Fixed[8.0] )
  3E4:  		Call  RunToGoal     ( .Actor:Self  0` .False )
  3FC:  		Call  SetPartRotation       ( .Actor:Self 00000001 00000000 00000000 0000002D )
  41C:  		Call  SetAnimation  ( .Actor:Self 00000001 00300008 )
  434:  		Wait  15`
  440:  		Wait  8`
  44C:  		Call  ResetAllActorSounds   ( .Actor:Self )
  45C:  		Call  UseBattleCamPreset    ( 00000002 )
  46C:  		Call  YieldTurn ( )
  478:  		Call  SetPartRotation       ( .Actor:Self 00000001 00000000 00000000 00000000 )
  498:  		Call  SetActorYaw   ( .Actor:Self  180` )
  4AC:  		Call  AddActorDecoration    ( .Actor:Self 00000001 00000000 .Decoration:Sweat )
  4C8:  		Call  SetAnimation  ( .Actor:Self 00000001 00300007 )
  4E0:  		Call  SetGoalToHome ( .Actor:Self )
  4F0:  		Call  SetActorSpeed ( .Actor:Self *Fixed[8.0] )
  504:  		Call  RunToGoal     ( .Actor:Self  0` .False )
  51C:  		Call  SetAnimation  ( .Actor:Self 00000001 00300002 )
  534:  		Call  RemoveActorDecoration ( .Actor:Self 00000001 00000000 )
  54C:  		Call  SetActorYaw   ( .Actor:Self  0` )
  560:  		Call  EnableIdleScript      ( .Actor:Self 00000001 )
  574:  		Call  UseIdleAnimation      ( .Actor:Self .True )
  588:  		Return
  590:  	EndCaseGroup
  598:  EndSwitch
  5A0:  Call  SetAnimation  ( .Actor:Self 00000001 00300011 )
  5B8:  Call  GetActorPos   ( .Actor:Player *Var0 *Var1 *Var2 )
  5D4:  Add   *Var0  00000014
  5E4:  Call  SetGoalPos    ( .Actor:Self *Var0 *Var1 *Var2 )
  600:  Call  SetActorSpeed ( .Actor:Self *Fixed[8.0] )
  614:  Call  RunToGoal     ( .Actor:Self  0` .False )
  62C:  Call  ResetAllActorSounds   ( .Actor:Self )
  63C:  Wait  2`
  648:  Call  SetGoalToTarget       ( .Actor:Self )
  658:  Call  EnemyDamageTarget     ( .Actor:Self *Var0 ~Flags:DamageType:0 00000000 00000000 00000002 00000020 )
  680:  Call  SetAnimation  ( .Actor:Self 00000001 00300002 )
  698:  Call  UseBattleCamPreset    ( 00000002 )
  6A8:  Switch  *Var0
  6B4:  	CaseOR  ==  .HitResult:Hit % 0
  6C0:  	CaseOR  ==  .HitResult:QuakeImmune % 2
  6CC:  		Call  UseBattleCamPreset    ( 00000002 )
  6DC:  		Call  GetGoalPos    ( .Actor:Self *Var0 *Var1 *Var2 )
  6F8:  		Add   *Var0  0000000F
  708:  		Set   *Var1  00000000
  718:  		Call  SetActorJumpGravity   ( .Actor:Self *Fixed[2.4] )
  72C:  		Call  SetGoalPos    ( .Actor:Self *Var0 *Var1 *Var2 )
  748:  		Call  JumpToGoal    ( .Actor:Self  6` .False .True .False )
  768:  		Call  SetAnimation  ( .Actor:Self 00000001 00300002 )
  780:  		Wait  5`
  78C:  		Call  YieldTurn ( )
  798:  		Call  SetAnimation  ( .Actor:Self 00000001 00300007 )
  7B0:  		Call  SetActorSpeed ( .Actor:Self *Fixed[8.0] )
  7C4:  		Call  SetGoalToHome ( .Actor:Self )
  7D4:  		Call  RunToGoal     ( .Actor:Self  0` .False )
  7EC:  		Call  SetAnimation  ( .Actor:Self 00000001 00300002 )
  804:  	EndCaseGroup
  80C:  EndSwitch
  814:  Call  EnableIdleScript  ( .Actor:Self 00000001 )
  828:  Call  UseIdleAnimation  ( .Actor:Self .True )
  83C:  Return
  844:  End
}

#new:Script $Script_TakeTurn_8021A3EC
{
    0:  Call  GetActorVar   ( .Actor:Self 00000000 *Var0 )
   18:  If  *Var0  ==  00000001
   28:  	ExecWait  $Script_802197AC
   34:  Else
   3C:  	ExecWait  $Script_80219BA0
   48:  EndIf
   50:  Return
   58:  End
}

PADDING: 8021A44C to 8021A450 (004D263C to 004D2640)
00000000

#new:DefenseTable $DefenseTable_8021A450
{
	.Element:Normal 00000000
	.Element:End
}

#new:StatusTable $StatusTable_8021A45C
{
	.Status:Normal      0`
	.Status:Default     0`
	.Status:Sleep      90`
	.Status:Poison     80`
	.Status:Frozen    100`
	.Status:Dizzy      90`
	.Status:Fear        0`
	.Status:Static     10`
	.Status:Paralyze  100`
	.Status:Shrink     90`
	.Status:Stop      100`
	.Status:DefaultTurnMod    0`
	.Status:SleepTurnMod      0`
	.Status:PoisonTurnMod     0`
	.Status:FrozenTurnMod     0`
	.Status:DizzyTurnMod     -1`
	.Status:FearTurnMod       0`
	.Status:StaticTurnMod     0`
	.Status:ParalyzeTurnMod   1`
	.Status:ShrinkTurnMod     0`
	.Status:StopTurnMod       0`
	.Status:End
}

#new:PartsTable $PartsTable_8021A508
{
	00020000 01000000 FE1000FF $IdleAnimations_8021A59C $DefenseTable_8021A450 00000000 00000000 00F90000 00000000
	80800001 020000F1 FE0C00FF $IdleAnimations_8021A59C $DefenseTable_8021A450 00000000 00000000 00F90000 00000000
	00120001 03000000 000000FF $IdleAnimations_8021A5E8 $DefenseTable_8021A450 00000000 00000000 00000000 00000000
}

#new:Actor $MontyMole
{
	% stats
	[Index]        12b
	[Level]         8`b
	[MaxHP]         3`b
	[Coins]         1`b
	[Flags]       00000000
	[StatusTable] $StatusTable_8021A45C
	% ai
	[PartsCount]    3`s
	[PartsTable]  $PartsTable_8021A508
	[Script]      $Script_Init_8021A7B0
	% move effectiveness
	[Escape]       80`b
	[Item]         85`b
	[AirLift]      70`b
	[Hurricane]    50`b % Bow's "Spook" as well
	[UpAndAway]    95`b
	[PowerBounce] 100`b
	[SpinSmash]     4`b % weight (0-4)
	% ui positions
	[Size]         34`b  18`b % width height
	[HealthBar]     0`b   0`b % dx dy
	[StatusTurn]  -10`b  20`b % dx dy
	[StatusIcon]   10`b  20`b % dx dy
}

#new:IdleAnimations $IdleAnimations_8021A59C
{
	.Status:Normal    002F0001
	.Status:Stone     002F0000
	.Status:Sleep     002F0014
	.Status:Poison    002F0001
	.Status:Stop      002F0000
	.Status:Static    002F0001
	.Status:Paralyze  002F0000
	.Status:Dizzy     002F0014
	.Status:Fear      002F0014
	.Status:End
}

#new:IdleAnimations $IdleAnimations_8021A5E8
{
	.Status:Normal    002F000F
	.Status:End
}

#new:IdleAnimations $IdleAnimations_8021A5F4
{
	.Status:Normal    002F0012
	.Status:End
}

MISSING: 8021A600 to 8021A60C (004D27F0 to 004D27FC)
00000001 002F0006 00000000

#new:PartsTable $PartsTable_8021A60C
{
	00022000 01000000 000000FF $IdleAnimations_8021A5F4 00000000 00000000 00000000 00000000 00000000
}

#new:Script $Script_Init_8021A630
{
    0:  Call  GetActorVar   ( .Actor:Self 00000000 *Var0 )
   18:  If  *Var0  ==  00000001
   28:  	Call  SetPartScale  ( .Actor:Self 00000001 *Fixed[0.4] *Fixed[0.4] *Fixed[0.4] )
   48:  EndIf
   50:  Return
   58:  End
}

#new:Actor $EmptyMoleHole
{
	% stats
	[Index]        6Bb
	[Level]         9`b
	[MaxHP]         5`b
	[Coins]         2`b
	[Flags]       00640004
	[StatusTable] 00000000
	% ai
	[PartsCount]    1`s
	[PartsTable]  $PartsTable_8021A60C
	[Script]      $Script_Init_8021A630
	% move effectiveness
	[Escape]       80`b
	[Item]         80`b
	[AirLift]       0`b
	[Hurricane]    80`b % Bow's "Spook" as well
	[UpAndAway]    90`b
	[PowerBounce]  90`b
	[SpinSmash]     4`b % weight (0-4)
	% ui positions
	[Size]         32`b  18`b % width height
	[HealthBar]     0`b   0`b % dx dy
	[StatusTurn]  -10`b  20`b % dx dy
	[StatusIcon]   10`b  20`b % dx dy
}

#new:Vector3D $Vector3D_8021A6B8
{
	0` -1000` 0`
}

#new:SpecialFormation $SpecialFormation_8021A6C4
{
	$EmptyMoleHole $Vector3D_8021A6B8 00000000 00000000 00000000 00000000 00000000
}

#new:SpecialFormation $SpecialFormation_8021A6E0
{
	$EmptyMoleHole $Vector3D_8021A6B8 00000000 00000001 00000000 00000000 00000000
}

#new:Script $Script_8021A6FC
{
    0:  Call  GetStatusFlags    ( .Actor:Self *Var0 )
   14:  If  *Var0  &  ~Flags:StatusFlags:Shrink % 80000
   24:  	Call  SummonEnemy   ( $SpecialFormation_8021A6E0 00000000 )
   38:  Else
   40:  	Call  SummonEnemy   ( $SpecialFormation_8021A6C4 00000000 )
   54:  EndIf
   5C:  Call  GetActorPos   ( .Actor:Self *Var1 *Var2 *Var3 )
   78:  Sub   *Var3  00000001
   88:  Call  SetActorPos   ( *Var0 *Var1 *Var2 *Var3 )
   A4:  Return
   AC:  End
}

#new:Script $Script_Init_8021A7B0
{
    0:  Call  BindTakeTurn      ( .Actor:Self $Script_TakeTurn_8021AFAC )
   14:  Call  BindIdle  ( .Actor:Self $Script_Idle_8021A814 )
   28:  Call  BindHandleEvent   ( .Actor:Self $Script_HandleEvent_8021A824 )
   3C:  Call  SetActorFlagBits  ( .Actor:Self 00000004 .True )
   54:  Return
   5C:  End
}

#new:Script $Script_Idle_8021A814
{
    0:  Return
    8:  End
}

#new:Script $Script_HandleEvent_8021A824
{
    0:  Call  UseIdleAnimation  ( .Actor:Self .False )
   14:  Call  EnableIdleScript  ( .Actor:Self 00000000 )
   28:  Call  GetLastElement    ( *VarE )
   38:  Call  GetLastEvent      ( .Actor:Self *Var0 )
   4C:  Switch  *Var0
   58:  	CaseOR  ==  .Event:HitCombo % 9
   64:  	CaseOR  ==  .Event:Hit % A
   70:  		If  *VarE  &  00000040
   80:  			ChildThread
   88:  				Wait  8`
   94:  				Call  SetAnimation  ( .Actor:Self 00000001 002F0007 )
   AC:  			EndChildThread
   B4:  			SetConst  *Var0  00000001
   C4:  			SetConst  *Var1  002F0006
   D4:  			ExecWait  DoNormalHit
   E0:  			Call  SetAnimation  ( .Actor:Self 00000001 002F0008 )
   F8:  			Wait  10`
  104:  		Else
  10C:  			SetConst  *Var0  00000001
  11C:  			SetConst  *Var1  002F0005
  12C:  			ExecWait  DoNormalHit
  138:  		EndIf
  140:  	EndCaseGroup
  148:  	Case  ==  .Event:BurnHit % E
  154:  		SetConst  *Var0  00000001
  164:  		SetConst  *Var1  002F000A
  174:  		SetConst  *Var2  002F000B
  184:  		ExecWait  DoBurnHit
  190:  	Case  ==  .Event:BurnDeath % 24
  19C:  		SetConst  *Var0  00000001
  1AC:  		SetConst  *Var1  002F000A
  1BC:  		SetConst  *Var2  002F000B
  1CC:  		ExecWait  DoBurnHit
  1D8:  		ExecWait  $Script_8021A6FC
  1E4:  		SetConst  *Var0  00000001
  1F4:  		SetConst  *Var1  002F000C
  204:  		ExecWait  DoDeath
  210:  		Return
  218:  	CaseOR  ==  00000017 % 17
  224:  	CaseOR  ==  .Event:Immune % 19
  230:  		Call  GetLastElement    ( *Var0 )
  240:  		If  *Var0  &  00000040
  250:  			Call  PlaySoundAtActor  ( .Actor:Self .Sound:MoleDig )
  264:  			Call  SetAnimationRate  ( .Actor:Self 00000001 *Fixed[2.0] )
  27C:  			Call  SetAnimation      ( .Actor:Self 00000001 002F0011 )
  294:  			Wait  80`
  2A0:  			Call  PlaySoundAtActor  ( .Actor:Self .Sound:MoleSurface )
  2B4:  			Call  SetAnimationRate  ( .Actor:Self 00000001 *Fixed[1.0] )
  2CC:  			Call  SetAnimation      ( .Actor:Self 00000001 002F0010 )
  2E4:  			Wait  20`
  2F0:  			Call  SetAnimation      ( .Actor:Self 00000001 002F0014 )
  308:  			Wait  20`
  314:  		Else
  31C:  			SetConst  *Var0  00000001
  32C:  			SetConst  *Var1  002F0001
  33C:  			ExecWait  DoImmune
  348:  		EndIf
  350:  	EndCaseGroup
  358:  	Case  ==  .Event:Death % 20
  364:  		SetConst  *Var0  00000001
  374:  		SetConst  *Var1  002F0005
  384:  		ExecWait  DoNormalHit
  390:  		Call  SetAnimation  ( .Actor:Self 00000001 002F0006 )
  3A8:  		Wait  10`
  3B4:  		ExecWait  $Script_8021A6FC
  3C0:  		SetConst  *Var0  00000001
  3D0:  		SetConst  *Var1  002F0009
  3E0:  		ExecWait  DoDeath
  3EC:  		Return
  3F4:  	Case  ==  .Event:RecoverStatus % 31
  400:  		Call  SetAnimation  ( .Actor:Self 00000001 002F0006 )
  418:  		Wait  8`
  424:  		Call  SetAnimation  ( .Actor:Self 00000001 002F0007 )
  43C:  		Wait  5`
  448:  		Call  SetAnimation  ( .Actor:Self 00000001 002F0008 )
  460:  		Wait  8`
  46C:  	Case  ==  .Event:ScareAway % 39
  478:  		Call  SetAnimation      ( .Actor:Self 00000001 002F0006 )
  490:  		Wait  15`
  49C:  		Call  SetAnimation      ( .Actor:Self 00000001 002F0007 )
  4B4:  		Wait  15`
  4C0:  		Call  SetAnimation      ( .Actor:Self 00000001 002F0008 )
  4D8:  		Wait  15`
  4E4:  		Call  SetActorFlagBits  ( .Actor:Self 00404000 .True )
  4FC:  		Call  SetIdleAnimations ( .Actor:Self 00000001 $IdleAnimations_8021A5F4 )
  514:  		Return
  51C:  	Case  ==  .Event:BeginAirLift % 3A
  528:  		SetConst  *Var0  00000001
  538:  		SetConst  *Var1  002F0005
  548:  		ExecWait  DoAirLift
  554:  	Case  ==  .Event:BlowAway % 16
  560:  		ExecWait  $Script_8021A6FC
  56C:  		Call  GetStatusFlags    ( .Actor:Self *Var0 )
  580:  		If  *Var0  &  ~Flags:StatusFlags:Sleep|Frozen|Fear|Paralyze|Dizzy|Stone|Stop % 35D000
  590:  			Call  SetActorDispOffset    ( .Actor:Self 00000000 FFFFFFFB 00000000 )
  5AC:  			Call  SetAnimation  ( .Actor:Self 00000001 002F0019 )
  5C4:  		Else
  5CC:  			If  *Var0  &  ~Flags:StatusFlags:Shrink % 80000
  5DC:  				Call  SetActorDispOffset    ( .Actor:Self 00000000 FFFFFFF7 00000000 )
  5F8:  			Else
  600:  				Call  SetActorDispOffset    ( .Actor:Self 00000000 FFFFFFE9 00000000 )
  61C:  			EndIf
  624:  			Call  SetAnimation  ( .Actor:Self 00000001 002F0009 )
  63C:  		EndIf
  644:  		Wait  1000`
  650:  		Return
  658:  	Case  ==  .Event:AirLiftFailed % 1F
  664:  		Call  PlaySoundAtActor  ( .Actor:Self .Sound:MoleDig )
  678:  		Call  SetAnimationRate  ( .Actor:Self 00000001 *Fixed[2.0] )
  690:  		Call  SetAnimation      ( .Actor:Self 00000001 002F0011 )
  6A8:  		Wait  40`
  6B4:  		Call  PlaySoundAtActor  ( .Actor:Self .Sound:MoleSurface )
  6C8:  		Call  SetAnimationRate  ( .Actor:Self 00000001 *Fixed[1.0] )
  6E0:  		Call  SetAnimation      ( .Actor:Self 00000001 002F0010 )
  6F8:  		Wait  20`
  704:  		Call  SetAnimation      ( .Actor:Self 00000001 002F0014 )
  71C:  		Wait  20`
  728:  	Case  ==  .Event:UpAndAway % 3D
  734:  		ExecWait  $Script_8021A6FC
  740:  	Default
  748:  EndSwitch
  750:  Call  EnableIdleScript  ( .Actor:Self 00000001 )
  764:  Call  UseIdleAnimation  ( .Actor:Self .True )
  778:  Return
  780:  End
}

#new:Script $Script_TakeTurn_8021AFAC
{
    0:  Call  UseIdleAnimation  ( .Actor:Self .False )
   14:  Call  EnableIdleScript  ( .Actor:Self 00000000 )
   28:  Call  SetTargetActor    ( .Actor:Self .Actor:Player )
   3C:  Call  SetGoalToTarget   ( .Actor:Self )
   4C:  Call  GetBattlePhase    ( *Var0 )
   5C:  If  *Var0  ==  00000001
   6C:  	Call  UseBattleCamPreset    ( 00000002 )
   7C:  	Call  MoveBattleCamOver     (  1` )
   8C:  EndIf
   94:  ChildThread
   9C:  	Call  PlaySoundAtActor  ( .Actor:Self .Sound:MoleDig )
   B0:  	Wait  20`
   BC:  	Call  PlaySoundAtActor  ( .Actor:Self .Sound:MoleSurface )
   D0:  EndChildThread
   D8:  Call  SetAnimation      ( .Actor:Self 00000001 002F0004 )
   F0:  Wait  37`
   FC:  Call  GetActorPos       ( .Actor:Self *Var0 *Var1 *Var2 )
  118:  Add   *Var1  00000014
  128:  Call  SetPartPos        ( .Actor:Self 00000003 *Var0 *Var1 *Var2 )
  148:  Wait  1`
  154:  Call  SetPartFlagBits   ( .Actor:Self 00000003 00000001 .False )
  170:  Call  GetStatusFlags    ( .Actor:Self *Var0 )
  184:  If  *Var0  &  ~Flags:StatusFlags:Shrink % 80000
  194:  	Call  SetPartScale  ( .Actor:Self 00000003 *Fixed[0.4] *Fixed[0.4] *Fixed[0.4] )
  1B4:  Else
  1BC:  	Call  SetPartScale  ( .Actor:Self 00000003 *Fixed[1.0] *Fixed[1.0] *Fixed[1.0] )
  1DC:  EndIf
  1E4:  Call  PlaySoundAtPart   ( .Actor:Self 00000003 .Sound:MoleThrow )
  1FC:  Call  SetPartSounds     ( .Actor:Self 00000003 .ActorSound:Fly 00000000 00000000 )
  21C:  Call  EnemyTestTarget   ( .Actor:Self *Var0 ~Flags:DamageType:NoContact 00000000 00000002 00000020 )
  240:  Switch  *Var0
  24C:  	CaseOR  ==  .HitResult:Miss % 6
  258:  	CaseOR  ==  .HitResult:Lucky % 5
  264:  		Set   *VarA  *Var0
  274:  		Call  SetTargetActor    ( .Actor:Self .Actor:Player )
  288:  		Call  SetGoalToTarget   ( .Actor:Self )
  298:  		Call  GetGoalPos        ( .Actor:Self *Var0 *Var1 *Var2 )
  2B4:  		Sub   *Var0  00000064
  2C4:  		Set   *Var1  FFFFFFFB
  2D4:  		Call  SetPartMoveSpeed  ( .Actor:Self 00000003 *Fixed[12.0] )
  2EC:  		Call  SetPartJumpGravity    ( .Actor:Self 00000003 *Fixed[0.1] )
  304:  		Call  SetAnimation      ( .Actor:Self 00000003 002F000F )
  31C:  		Call  FlyPartTo ( .Actor:Self 00000003 *Var0 *Var1 *Var2  0`  30` .Easing:Linear )
  348:  		Call  SetPartFlagBits   ( .Actor:Self 00000003 00000001 .True )
  364:  		If  *VarA  ==  .HitResult:Lucky % 5
  374:  			Call  EnemyTestTarget   ( .Actor:Self *Var0 ~Flags:DamageType:TriggerLucky 00000000 00000000 00000000 )
  398:  		EndIf
  3A0:  		Call  YieldTurn ( )
  3AC:  		Call  EnableIdleScript  ( .Actor:Self 00000001 )
  3C0:  		Call  UseIdleAnimation  ( .Actor:Self .True )
  3D4:  		Return
  3DC:  	EndCaseGroup
  3E4:  EndSwitch
  3EC:  Call  SetTargetActor    ( .Actor:Self .Actor:Player )
  400:  Call  SetGoalToTarget   ( .Actor:Self )
  410:  Call  GetGoalPos        ( .Actor:Self *Var0 *Var1 *Var2 )
  42C:  Call  SetPartMoveSpeed  ( .Actor:Self 00000003 *Fixed[12.0] )
  444:  Call  SetPartJumpGravity    ( .Actor:Self 00000003 *Fixed[0.1] )
  45C:  Call  SetAnimation      ( .Actor:Self 00000003 002F000F )
  474:  Call  FlyPartTo ( .Actor:Self 00000003 *Var0 *Var1 *Var2  0`  20` .Easing:Linear )
  4A0:  Wait  2`
  4AC:  Call  EnemyDamageTarget ( .Actor:Self *Var0 ~Flags:DamageType:NoContact 00000000 00000000 00000002 00000020 )
  4D4:  Switch  *Var0
  4E0:  	CaseOR  ==  .HitResult:Hit % 0
  4EC:  	CaseOR  ==  .HitResult:QuakeImmune % 2
  4F8:  		Call  GetActorPos       ( .Actor:Player *Var0 *Var1 *Var2 )
  514:  		Sub   *Var0  00000037
  524:  		Set   *Var1  00000000
  534:  		Call  SetPartMoveSpeed  ( .Actor:Self 00000003 *Fixed[6.0] )
  54C:  		Call  SetPartJumpGravity    ( .Actor:Self 00000003 *Fixed[0.1] )
  564:  		Call  FlyPartTo ( .Actor:Self 00000003 *Var0 *Var1 *Var2  0`  25` .Easing:Linear )
  590:  		Call  SetPartMoveSpeed  ( .Actor:Self 00000003 *Fixed[4.0] )
  5A8:  		Sub   *Var0  00000014
  5B8:  		Call  FlyPartTo ( .Actor:Self 00000003 *Var0 *Var1 *Var2  0`  21` .Easing:Linear )
  5E4:  		Call  SetPartFlagBits   ( .Actor:Self 00000003 00000001 .True )
  600:  	EndCaseGroup
  608:  EndSwitch
  610:  Call  EnableIdleScript  ( .Actor:Self 00000001 )
  624:  Call  UseIdleAnimation  ( .Actor:Self .True )
  638:  Return
  640:  End
}

PADDING: 8021B5F4 to 8021B600 (004D37E4 to 004D37F0)
00000000 00000000 00000000

#new:IdleAnimations $IdleAnimations_8021B600
{
	.Status:Normal    00670001
	.Status:Stone     00670000
	.Status:Sleep     00670019
	.Status:Stop      00670000
	.Status:Static    0067000C
	.Status:Paralyze  0067000C
	.Status:Dizzy     0067000C
	.Status:Shrink    00670001
	.Status:End
}

#new:IdleAnimations $IdleAnimations_8021B644
{
	.Status:Normal    00670014
	.Status:End
}

#new:DefenseTable $DefenseTable_8021B650
{
	.Element:Normal 00000000
	.Element:End
}

#new:StatusTable $StatusTable_8021B65C
{
	.Status:Normal      0`
	.Status:Default     0`
	.Status:Sleep      60`
	.Status:Poison      0`
	.Status:Frozen      0`
	.Status:Dizzy      70`
	.Status:Fear        0`
	.Status:Static      0`
	.Status:Paralyze   70`
	.Status:Shrink     75`
	.Status:Stop       70`
	.Status:DefaultTurnMod    0`
	.Status:SleepTurnMod     -1`
	.Status:PoisonTurnMod     0`
	.Status:FrozenTurnMod     0`
	.Status:DizzyTurnMod      1`
	.Status:FearTurnMod       0`
	.Status:StaticTurnMod     0`
	.Status:ParalyzeTurnMod  -1`
	.Status:ShrinkTurnMod    -1`
	.Status:StopTurnMod      -1`
	.Status:End
}

#new:PartsTable $PartsTable_8021B708
{
	00020000 01000000 EC3C00FF $IdleAnimations_8021B600 $DefenseTable_8021B650 00000000 00000000 00000000 00000000
	00800001 02001F00 F21400FF $IdleAnimations_8021B600 $DefenseTable_8021B650 00000000 00000000 00F20000 00000000
	00120001 03000000 000000FF $IdleAnimations_8021B644 $DefenseTable_8021B650 00000000 00000000 00000000 00000000
	00120001 04000000 000000FF $IdleAnimations_8021B644 $DefenseTable_8021B650 00000000 00000000 00000000 00000000
	00120001 05000000 000000FF $IdleAnimations_8021B644 $DefenseTable_8021B650 00000000 00000000 00000000 00000000
}

#new:Actor $Buzzar
{
	% stats
	[Index]        A0b
	[Level]        35`b
	[MaxHP]        40`b
	[Coins]         0`b
	[Flags]       00000200
	[StatusTable] $StatusTable_8021B65C
	% ai
	[PartsCount]    5`s
	[PartsTable]  $PartsTable_8021B708
	[Script]      $Script_Init_8021B7E4
	% move effectiveness
	[Escape]        0`b
	[Item]          0`b
	[AirLift]       0`b
	[Hurricane]     0`b % Bow's "Spook" as well
	[UpAndAway]     0`b
	[PowerBounce]  75`b
	[SpinSmash]     4`b % weight (0-4)
	% ui positions
	[Size]         78`b  74`b % width height
	[HealthBar]     0`b   0`b % dx dy
	[StatusTurn]  -35`b  65`b % dx dy
	[StatusIcon]    1`b  58`b % dx dy
}

#new:Script $Script_Init_8021B7E4
{
    0:  Call  SetActorVar   ( .Actor:Self 00000001 00000000 )
   18:  Call  SetActorVar   ( .Actor:Self 00000000 00000000 )
   30:  Call  SetActorVar   ( .Actor:Self 00000002 00000000 )
   48:  Call  SetActorVar   ( .Actor:Self 00000003 00000000 )
   60:  Call  BindTakeTurn  ( .Actor:Self $Script_TakeTurn_8021BCD8 )
   74:  Call  BindIdle      ( .Actor:Self $Script_Idle_8021B930 )
   88:  Call  BindHandleEvent   ( .Actor:Self $Script_HandleEvent_8021B940 )
   9C:  Call  BindNextTurn  ( .Actor:Self $Script_NextTurn_8021B918 )
   B0:  Call  GetActorPos   ( .Actor:Self *Var0 *Var1 *Var2 )
   CC:  Set   *Var1  00000028
   DC:  Call  SetActorPos   ( .Actor:Self *Var0 *Var1 *Var2 )
   F8:  Call  ForceHomePos  ( .Actor:Self *Var0 *Var1 *Var2 )
  114:  Call  HPBarToHome   ( .Actor:Self )
  124:  Return
  12C:  End
}

#new:Script $Script_NextTurn_8021B918
{
    0:  Return
    8:  Return
   10:  End
}

#new:Script $Script_Idle_8021B930
{
    0:  Return
    8:  End
}

#new:Script $Script_HandleEvent_8021B940
{
    0:  Call  UseIdleAnimation  ( .Actor:Self .False )
   14:  Call  GetLastEvent      ( .Actor:Self *Var0 )
   28:  Switch  *Var0
   34:  	Case  ==  .Event:HitCombo % 9
   40:  		SetConst  *Var0  00000001
   50:  		SetConst  *Var1  0067000B
   60:  		ExecWait  DoNormalHit
   6C:  	Case  ==  .Event:Hit % A
   78:  		SetConst  *Var0  00000001
   88:  		SetConst  *Var1  0067000B
   98:  		ExecWait  DoNormalHit
   A4:  		ExecWait  $Script_8021FC34
   B0:  	Case  ==  .Event:BurnHit % E
   BC:  		SetConst  *Var0  00000001
   CC:  		SetConst  *Var1  0067000B
   DC:  		SetConst  *Var2  FFFFFFFF
   EC:  		ExecWait  DoBurnHit
   F8:  	Case  ==  .Event:BurnDeath % 24
  104:  		SetConst  *Var0  00000001
  114:  		SetConst  *Var1  0067000B
  124:  		SetConst  *Var2  FFFFFFFF
  134:  		ExecWait  DoBurnHit
  140:  		SetConst  *Var0  00000001
  150:  		SetConst  *Var1  0067000B
  160:  		ExecWait  DoDeath
  16C:  		Return
  174:  	Case  ==  .Event:ShockHit % 2F
  180:  		SetConst  *Var0  00000001
  190:  		SetConst  *Var1  0067000B
  1A0:  		ExecWait  DoShockHit
  1AC:  		Call  UseBattleCamPreset    ( 00000002 )
  1BC:  		Call  MoveBattleCamOver     (  20` )
  1CC:  		Call  SetActorVar   ( .Actor:Self 00000000 00000000 )
  1E4:  		ExecWait  $Script_8021F7EC
  1F0:  	Case  ==  .Event:ShockDeath % 26
  1FC:  		SetConst  *Var0  00000001
  20C:  		SetConst  *Var1  0067000B
  21C:  		ExecWait  DoShockHit
  228:  		SetConst  *Var0  00000001
  238:  		SetConst  *Var1  0067000B
  248:  		ExecWait  DoDeath
  254:  		Return
  25C:  	CaseOR  ==  00000017 % 17
  268:  	CaseOR  ==  .Event:Immune % 19
  274:  	CaseOR  ==  .Event:AirLiftFailed % 1F
  280:  		SetConst  *Var0  00000001
  290:  		SetConst  *Var1  00670001
  2A0:  		ExecWait  DoImmune
  2AC:  	EndCaseGroup
  2B4:  	Case  ==  .Event:Death % 20
  2C0:  		SetConst  *Var0  00000001
  2D0:  		SetConst  *Var1  0067000B
  2E0:  		ExecWait  DoNormalHit
  2EC:  		Wait  10`
  2F8:  		SetConst  *Var0  00000001
  308:  		SetConst  *Var1  0067000B
  318:  		ExecWait  DoDeath
  324:  		Return
  32C:  	Case  ==  .Event:RecoverStatus % 31
  338:  		SetConst  *Var0  00000001
  348:  		SetConst  *Var1  00670001
  358:  		ExecWait  DoRecover
  364:  	Default
  36C:  EndSwitch
  374:  Call  UseIdleAnimation  ( .Actor:Self .True )
  388:  Return
  390:  End
}

#new:Script $Script_TakeTurn_8021BCD8
{
    0:  Call  UseIdleAnimation  ( .Actor:Self .False )
   14:  Call  EnableIdleScript  ( .Actor:Self 00000000 )
   28:  Call  GetStatusFlags    ( .Actor:Self *Var0 )
   3C:  If  *Var0  &  ~Flags:StatusFlags:Shrink % 80000
   4C:  	Call  SetActorVar   ( .Actor:Self 00000000 00000002 )
   64:  EndIf
   6C:  Call  GetActorVar   ( .Actor:Self 00000000 *Var0 )
   84:  Switch  *Var0
   90:  	Case  ==  00000000
   9C:  		Call  SetActorVar   ( .Actor:Self 00000000 00000001 )
   B4:  		ExecWait  $Script_8021BEBC
   C0:  	Case  ==  00000002
   CC:  		Call  SetActorVar   ( .Actor:Self 00000000 00000003 )
   E4:  		ExecWait  $Script_8021F030
   F0:  	Case  ==  00000004
   FC:  		Call  SetActorVar   ( .Actor:Self 00000000 00000005 )
  114:  		ExecWait  $Script_8021CCE8
  120:  	Default
  128:  		Call  GetActorVar   ( .Actor:Self 00000000 *Var0 )
  140:  		If  *Var0  ==  00000005
  150:  			Set   *Var0  00000000
  160:  		Else
  168:  			Add   *Var0  00000001
  178:  		EndIf
  180:  		Call  SetActorVar   ( .Actor:Self 00000000 *Var0 )
  198:  		ExecWait  $Script_8021DF2C
  1A4:  EndSwitch
  1AC:  Call  EnableIdleScript  ( .Actor:Self 00000001 )
  1C0:  Call  UseIdleAnimation  ( .Actor:Self .True )
  1D4:  Return
  1DC:  End
}

#new:Script $Script_8021BEBC
{
    0:  Call  SetTargetActor    ( .Actor:Self .Actor:Player )
   14:  Call  SetGoalToTarget   ( .Actor:Self )
   24:  Call  UseBattleCamPreset    ( 0000000D )
   34:  Call  SetBattleCamZoom  (  180` )
   44:  Call  BattleCamTargetActor  ( .Actor:Self )
   54:  Call  MoveBattleCamOver (  120` )
   64:  Call  SetActorSpeed     ( .Actor:Self *Fixed[1.0] )
   78:  Call  GetActorPos       ( .Actor:Self *Var0 *Var1 *Var2 )
   94:  Call  SetGoalPos        ( .Actor:Self *Var0  70` *Var2 )
   B0:  Call  GetAnimation      ( .Actor:Self 00000001 *Var0 )
   C8:  Switch  *Var0
   D4:  	CaseOR  ==  00670001
   E0:  	CaseOR  ==  00670002
   EC:  	CaseOR  ==  0067000D
   F8:  	CaseOR  ==  00670016
  104:  	CaseOR  ==  00670017
  110:  		Loop
  11C:  			Call  8026DF88  ( FFFFFF81 00000001 *Var0 )
  134:  			If  *Var0  ==  00000001
  144:  				BreakLoop
  14C:  			EndIf
  154:  			Wait  1`
  160:  		EndLoop
  168:  	EndCaseGroup
  170:  EndSwitch
  178:  Call  SetAnimation      ( .Actor:Self 00000001 00670002 )
  190:  Call  FlyToGoal ( .Actor:Self  0`  -10` .Easing:CosInOut )
  1AC:  Call  EnemyTestTarget   ( .Actor:Self *VarA ~Flags:DamageType:NoContact 00000000 00000001 00000020 )
  1D0:  Switch  *VarA
  1DC:  	Case  ==  .HitResult:Miss % 6
  1E8:  		Call  SetTargetActor    ( .Actor:Self .Actor:Partner )
  1FC:  		Call  EnemyTestTarget   ( .Actor:Self *VarA ~Flags:DamageType:NoContact 00000000 00000001 00000020 )
  220:  		Switch  *VarA
  22C:  			Case  ==  .HitResult:Miss % 6
  238:  				Call  SetTargetActor    ( .Actor:Self .Actor:Player )
  24C:  				Wait  8`
  258:  				Call  SetAnimation      ( .Actor:Self 00000001 00670011 )
  270:  				Wait  15`
  27C:  				Call  SetAnimation      ( .Actor:Self 00000001 00670013 )
  294:  				Wait  6`
  2A0:  				Call  PlaySoundAtActor  ( .Actor:Self 000020F0 )
  2B4:  				Call  UseBattleCamPreset    ( 00000002 )
  2C4:  				Call  MoveBattleCamOver (  50` )
  2D4:  				Thread
  2DC:  					Call  ShakeCam  ( .Cam:Battle 00000000  90` *Fixed[0.5] )
  2F8:  				EndThread
  300:  				Call  $Function_802180C0    ( 00000046 00000064 )
  314:  				Thread
  31C:  					Loop  00000014
  328:  						Call  SetGoalToTarget   ( .Actor:Self )
  338:  						Call  GetGoalPos        ( .Actor:Self *Var0 *Var1 *Var2 )
  354:  						Add   *Var0  0000000A
  364:  						Call  PlayEffect        ( ~FX:DeadLeaves:Gust3 *Var0 0000000A *Var2 00000000 00000000 00000000 00000000 00000000 00000000 00000000 00000000 00000000 )
  3A8:  						Wait  3`
  3B4:  					EndLoop
  3BC:  				EndThread
  3C4:  				Wait  60`
  3D0:  				Call  SetAnimation  ( .Actor:Self 00000001 00670001 )
  3E8:  				If  *VarA  ==  .HitResult:Lucky % 5
  3F8:  					Call  EnemyTestTarget   ( .Actor:Self *Var0 ~Flags:DamageType:TriggerLucky 00000000 00000000 00000000 )
  41C:  				EndIf
  424:  				Wait  25`
  430:  				ExecWait  $Script_8021F7EC
  43C:  				Return
  444:  			Default
  44C:  				Call  SetTargetActor    ( .Actor:Self .Actor:Partner )
  460:  				Call  ShowMessageBox    ( 00000041 0000005A )
  474:  				Call  802694A4  ( 00000001 )
  484:  				Call  LoadActionCommand ( .ActionCommand:Whirlwind )
  494:  				Call  802A9000  ( 00000001 )
  4A4:  				Call  SetupMashMeter    ( 00000003 00000028 00000046 00000064 00000000 00000000 )
  4C8:  				Wait  8`
  4D4:  				Call  SetAnimation      ( .Actor:Self 00000001 00670011 )
  4EC:  				Wait  15`
  4F8:  				Call  SetAnimation      ( .Actor:Self 00000001 00670013 )
  510:  				Wait  6`
  51C:  				Call  PlaySoundAtActor  ( .Actor:Self 000020F0 )
  530:  				Call  SetBattleFlagBits ( 00004000 .False )
  544:  				Call  802A91E0  ( 00000000 00000058 00000003 )
  55C:  				Call  UseBattleCamPreset    ( 00000013 )
  56C:  				Call  SetBattleCamTarget    (  -25`  60`  0` )
  584:  				Call  SetBattleCamZoom  (  460` )
  594:  				Call  SetBattleCamOffsetZ   (  0` )
  5A4:  				Call  MoveBattleCamOver (  50` )
  5B4:  				Call  $Function_802180C0    ( 00000046 00000082 )
  5C8:  				Thread
  5D0:  					Loop  0000001E
  5DC:  						Call  SetGoalToTarget   ( .Actor:Self )
  5EC:  						Call  GetGoalPos        ( .Actor:Self *Var0 *Var1 *Var2 )
  608:  						Add   *Var0  0000000A
  618:  						Call  PlayEffect        ( ~FX:DeadLeaves:Gust3 *Var0 0000000A *Var2 00000000 00000000 00000000 00000000 00000000 00000000 00000000 00000000 00000000 )
  65C:  						Wait  3`
  668:  					EndLoop
  670:  				EndThread
  678:  				Thread
  680:  					Call  ShakeCam  ( .Cam:Battle 00000000  90` *Fixed[0.5] )
  69C:  				EndThread
  6A4:  				Call  ActorExists   ( .Actor:Partner *Var0 )
  6B8:  				If  *Var0  ==  .True
  6C8:  					Thread
  6D0:  						Call  UseIdleAnimation  ( .Actor:Partner .False )
  6E4:  						Set   *Var0  00000000
  6F4:  						Set   *Var1  00000003
  704:  						Loop  0000005D
  710:  							Call  SetActorYaw   ( .Actor:Partner *Var0 )
  724:  							Add   *Var0  *Var1
  734:  							Add   *Var1  00000001
  744:  							Wait  1`
  750:  						EndLoop
  758:  						Call  SetActorYaw   ( .Actor:Partner  0` )
  76C:  					EndThread
  774:  				EndIf
  77C:  				Wait  90`
  788:  				Call  GetActionResult   ( *Var1 )
  798:  				Call  ActorExists       ( .Actor:Partner *Var0 )
  7AC:  				If  *Var0  ==  .True
  7BC:  					Wait  3`
  7C8:  					Call  UseIdleAnimation  ( .Actor:Partner .True )
  7DC:  					Call  SetTargetActor    ( .Actor:Self .Actor:Partner )
  7F0:  					Call  SetGoalToTarget   ( .Actor:Self )
  800:  					Call  EnemyDamageTarget ( .Actor:Self *Var0 ~Flags:DamageType:Unblockable|NoOtherDamagePopups 0000FFFF 00000000 *Var1 00000020 )
  828:  				EndIf
  830:  				Call  SetAnimation  ( .Actor:Self 00000001 00670001 )
  848:  				Wait  25`
  854:  				Call  UseBattleCamPreset    ( 00000002 )
  864:  				Call  MoveBattleCamOver     (  20` )
  874:  				ExecWait  $Script_8021F7EC
  880:  				Return
  888:  		EndSwitch
  890:  	Default
  898:  EndSwitch
  8A0:  Call  ShowMessageBox    ( 00000041 0000005A )
  8B4:  Call  802694A4  ( 00000001 )
  8C4:  Call  LoadActionCommand ( .ActionCommand:Whirlwind )
  8D4:  Call  802A9000  ( 00000001 )
  8E4:  Call  SetupMashMeter    ( 00000003 00000028 00000046 00000064 00000000 00000000 )
  908:  Wait  8`
  914:  Call  SetAnimation      ( .Actor:Self 00000001 00670011 )
  92C:  Wait  15`
  938:  Call  SetAnimation      ( .Actor:Self 00000001 00670013 )
  950:  Wait  6`
  95C:  Call  PlaySoundAtActor  ( .Actor:Self 000020F0 )
  970:  Call  SetBattleFlagBits ( 00004000 .False )
  984:  Call  802A91E0  ( 00000000 00000058 00000003 )
  99C:  Call  UseBattleCamPreset    ( 00000013 )
  9AC:  Call  SetBattleCamTarget    (  -25`  60`  0` )
  9C4:  Call  SetBattleCamZoom  (  460` )
  9D4:  Call  SetBattleCamOffsetZ   (  0` )
  9E4:  Call  MoveBattleCamOver (  50` )
  9F4:  Call  $Function_802180C0    ( 00000046 00000082 )
  A08:  Thread
  A10:  	Loop  0000001E
  A1C:  		Call  SetGoalToTarget   ( .Actor:Self )
  A2C:  		Call  GetGoalPos        ( .Actor:Self *Var0 *Var1 *Var2 )
  A48:  		Add   *Var0  0000000A
  A58:  		Call  PlayEffect        ( ~FX:DeadLeaves:Gust3 *Var0 0000000A *Var2 00000000 00000000 00000000 00000000 00000000 00000000 00000000 00000000 00000000 )
  A9C:  		Wait  3`
  AA8:  	EndLoop
  AB0:  EndThread
  AB8:  Thread
  AC0:  	Call  ShakeCam  ( .Cam:Battle 00000000  90` *Fixed[0.5] )
  ADC:  EndThread
  AE4:  Call  GetStatusFlags    ( .Actor:Player *Var1 )
  AF8:  If  *Var1  !&  ~Flags:StatusFlags:Stone % 100000
  B08:  	Thread
  B10:  		Call  UseIdleAnimation  ( .Actor:Player .False )
  B24:  		Call  SetAnimation      ( .Actor:Player 00000000 0001002E )
  B3C:  		Set   *Var0  00000000
  B4C:  		Set   *Var1  00000003
  B5C:  		Loop  0000005A
  B68:  			Call  SetActorYaw   ( .Actor:Player *Var0 )
  B7C:  			Add   *Var0  *Var1
  B8C:  			Add   *Var1  00000001
  B9C:  			Wait  1`
  BA8:  		EndLoop
  BB0:  		Call  SetActorYaw   ( .Actor:Player  0` )
  BC4:  	EndThread
  BCC:  EndIf
  BD4:  Call  ActorExists   ( .Actor:Partner *Var0 )
  BE8:  If  *Var0  ==  .True
  BF8:  	Thread
  C00:  		Call  UseIdleAnimation  ( .Actor:Partner .False )
  C14:  		Set   *Var0  00000000
  C24:  		Set   *Var1  00000003
  C34:  		Loop  0000005D
  C40:  			Call  SetActorYaw   ( .Actor:Partner *Var0 )
  C54:  			Add   *Var0  *Var1
  C64:  			Add   *Var1  00000001
  C74:  			Wait  1`
  C80:  		EndLoop
  C88:  		Call  SetActorYaw   ( .Actor:Partner  0` )
  C9C:  	EndThread
  CA4:  EndIf
  CAC:  Call  8026BF48  ( 00000001 )
  CBC:  Wait  90`
  CC8:  Call  GetActionResult   ( *Var1 )
  CD8:  Call  SetTargetActor    ( .Actor:Self .Actor:Player )
  CEC:  Call  SetGoalToTarget   ( .Actor:Self )
  CFC:  Call  EnemyDamageTarget ( .Actor:Self *Var0 ~Flags:DamageType:Unblockable|NoOtherDamagePopups 0000FFFF 00000000 *Var1 00000020 )
  D24:  Call  ActorExists       ( .Actor:Partner *Var0 )
  D38:  If  *Var0  ==  .True
  D48:  	Wait  3`
  D54:  	Call  UseIdleAnimation  ( .Actor:Partner .True )
  D68:  	Call  SetTargetActor    ( .Actor:Self .Actor:Partner )
  D7C:  	Call  SetGoalToTarget   ( .Actor:Self )
  D8C:  	Call  EnemyDamageTarget ( .Actor:Self *Var0 ~Flags:DamageType:Unblockable|NoOtherDamagePopups 0000FFFF 00000000 *Var1 00000020 )
  DB4:  EndIf
  DBC:  Call  SetAnimation      ( .Actor:Self 00000001 00670001 )
  DD4:  Wait  25`
  DE0:  Call  UseBattleCamPreset    ( 00000002 )
  DF0:  Call  MoveBattleCamOver (  20` )
  E00:  ExecWait  $Script_8021F7EC
  E0C:  Call  8026BF48  ( 00000000 )
  E1C:  Return
  E24:  End
}

#new:Script $Script_8021CCE8
{
    0:  Call  UseIdleAnimation  ( .Actor:Self .False )
   14:  Call  EnableIdleScript  ( .Actor:Self 00000000 )
   28:  Call  SetTargetActor    ( .Actor:Self .Actor:Player )
   3C:  Call  SetGoalToTarget   ( .Actor:Self )
   4C:  Call  UseBattleCamPreset    ( 00000005 )
   5C:  Call  SetBattleCamZoom  (  180` )
   6C:  Call  SetBattleCamOffsetZ   (  0` )
   7C:  Call  BattleCamTargetActor  ( .Actor:Self )
   8C:  Call  MoveBattleCamOver (  40` )
   9C:  Call  SetActorSpeed     ( .Actor:Self *Fixed[4.0] )
   B0:  Call  SetGoalToTarget   ( .Actor:Self )
   C0:  Call  AddGoalPos        ( .Actor:Self  90`  35`  0` )
   DC:  Call  GetAnimation      ( .Actor:Self 00000001 *Var0 )
   F4:  Switch  *Var0
  100:  	CaseOR  ==  00670001
  10C:  	CaseOR  ==  00670002
  118:  	CaseOR  ==  0067000D
  124:  	CaseOR  ==  00670016
  130:  	CaseOR  ==  00670017
  13C:  		Loop
  148:  			Call  8026DF88  ( FFFFFF81 00000001 *Var0 )
  160:  			If  *Var0  ==  00000001
  170:  				BreakLoop
  178:  			EndIf
  180:  			Wait  1`
  18C:  		EndLoop
  194:  	EndCaseGroup
  19C:  EndSwitch
  1A4:  Call  SetAnimation  ( .Actor:Self 00000001 00670002 )
  1BC:  Call  FlyToGoal     ( .Actor:Self  0`  -15` .Easing:CosInOut )
  1D8:  Call  GetActorPos   ( .Actor:Self *Var0 *Var1 *Var2 )
  1F4:  Add   *Var0  FFFFFFE2
  204:  Add   *Var1  00000019
  214:  Call  SetPartPos    ( .Actor:Self 00000003 *Var0 *Var1 *Var2 )
  234:  Call  GetActorPos   ( .Actor:Self *Var0 *Var1 *Var2 )
  250:  Add   *Var0  FFFFFFE2
  260:  Add   *Var1  00000023
  270:  Call  SetPartPos    ( .Actor:Self 00000004 *Var0 *Var1 *Var2 )
  290:  Call  GetActorPos   ( .Actor:Self *Var0 *Var1 *Var2 )
  2AC:  Add   *Var0  FFFFFFEC
  2BC:  Add   *Var1  00000019
  2CC:  Call  SetPartPos    ( .Actor:Self 00000005 *Var0 *Var1 *Var2 )
  2EC:  Call  SetAnimation  ( .Actor:Self 00000001 0067000E )
  304:  Wait  15`
  310:  Call  GetActorPos   ( .Actor:Self *Var0 *Var1 *Var2 )
  32C:  Add   *Var0  00000018
  33C:  Add   *Var1  00000018
  34C:  Call  PlayEffect    ( ~FX:ShinyFlare *Var0 *Var1 *Var2 *Fixed[0.6] 00000000 00000000 00000000 00000000 00000000 00000000 00000000 00000000 )
  390:  Call  PlaySoundAtActor      ( .Actor:Self 000020F3 )
  3A4:  Wait  10`
  3B0:  Call  SetPartSounds ( .Actor:Self 00000003 .ActorSound:Fly 00000000 00000000 )
  3D0:  Call  SetPartSounds ( .Actor:Self 00000004 .ActorSound:Fly 00000000 00000000 )
  3F0:  Call  SetPartSounds ( .Actor:Self 00000005 .ActorSound:Fly 00000000 00000000 )
  410:  Call  UseBattleCamPreset    ( 00000002 )
  420:  Call  MoveBattleCamOver     (  20` )
  430:  Thread
  438:  	Wait  20`
  444:  	Call  SetAnimation  ( .Actor:Self 00000001 00670001 )
  45C:  EndThread
  464:  Call  SetAnimation      ( .Actor:Self 00000001 00670010 )
  47C:  Call  SetPartRotation   ( .Actor:Self 00000003 00000000 00000000 FFFFFFD3 )
  49C:  Call  SetPartRotation   ( .Actor:Self 00000004 00000000 00000000 FFFFFFD3 )
  4BC:  Call  SetPartRotation   ( .Actor:Self 00000005 00000000 00000000 FFFFFFD3 )
  4DC:  Wait  10`
  4E8:  Call  SetAnimation      ( .Actor:Self 00000003 00670014 )
  500:  Call  SetAnimation      ( .Actor:Self 00000004 00670014 )
  518:  Call  SetAnimation      ( .Actor:Self 00000005 00670014 )
  530:  Call  SetPartFlagBits   ( .Actor:Self 00000003 00000001 .False )
  54C:  Call  SetPartFlagBits   ( .Actor:Self 00000004 00000001 .False )
  568:  Call  SetPartFlagBits   ( .Actor:Self 00000005 00000001 .False )
  584:  Call  SetPartMoveSpeed  ( .Actor:Self 00000003 *Fixed[6.0] )
  59C:  Call  SetPartJumpGravity    ( .Actor:Self 00000003 *Fixed[0.1] )
  5B4:  Call  SetPartMoveSpeed  ( .Actor:Self 00000004 *Fixed[6.0] )
  5CC:  Call  SetPartJumpGravity    ( .Actor:Self 00000004 *Fixed[0.1] )
  5E4:  Call  SetPartMoveSpeed  ( .Actor:Self 00000005 *Fixed[6.0] )
  5FC:  Call  SetPartJumpGravity    ( .Actor:Self 00000005 *Fixed[0.1] )
  614:  Call  PlaySoundAtActor  ( .Actor:Self 000020F4 )
  628:  Call  EnemyTestTarget   ( .Actor:Self *Var0 ~Flags:DamageType:NoContact 00000000 00000002 00000010 )
  64C:  Switch  *Var0
  658:  	CaseOR  ==  .HitResult:Miss % 6
  664:  	CaseOR  ==  .HitResult:Lucky % 5
  670:  		Set   *VarA  *Var0
  680:  		Call  SetGoalToTarget   ( .Actor:Self )
  690:  		Thread
  698:  			Call  GetGoalPos    ( .Actor:Self *Var0 *Var1 *Var2 )
  6B4:  			Call  RandInt       ( 0000000A *Var3 )
  6C8:  			Sub   *Var3  0000001E
  6D8:  			Add   *Var0  *Var3
  6E8:  			Call  FlyPartTo     ( .Actor:Self 00000004 *Var0  5` *Var2  9`  0` .Easing:Linear )
  714:  			Call  SetAnimation  ( .Actor:Self 00000004 00670015 )
  72C:  		EndThread
  734:  		Thread
  73C:  			Call  GetGoalPos    ( .Actor:Self *Var0 *Var1 *Var2 )
  758:  			Call  RandInt       ( 0000000A *Var3 )
  76C:  			Sub   *Var3  00000028
  77C:  			Add   *Var0  *Var3
  78C:  			Call  FlyPartTo     ( .Actor:Self 00000005 *Var0  5` *Var2  9`  0` .Easing:Linear )
  7B8:  			Call  SetAnimation  ( .Actor:Self 00000005 00670015 )
  7D0:  		EndThread
  7D8:  		Call  GetGoalPos    ( .Actor:Self *Var0 *Var1 *Var2 )
  7F4:  		Sub   *Var0  0000001E
  804:  		Call  FlyPartTo     ( .Actor:Self 00000003 *Var0  5` *Var2  9`  0` .Easing:Linear )
  830:  		Call  SetAnimation  ( .Actor:Self 00000003 00670015 )
  848:  		Thread
  850:  			Wait  10`
  85C:  			Call  SetAnimation      ( .Actor:Self 00000003 00670014 )
  874:  			Call  SetAnimation      ( .Actor:Self 00000004 00670014 )
  88C:  			Call  SetAnimation      ( .Actor:Self 00000005 00670014 )
  8A4:  			Wait  20`
  8B0:  			Call  SetPartFlagBits   ( .Actor:Self 00000003 00000001 .True )
  8CC:  			Call  SetPartFlagBits   ( .Actor:Self 00000004 00000001 .True )
  8E8:  			Call  SetPartFlagBits   ( .Actor:Self 00000005 00000001 .True )
  904:  		EndThread
  90C:  		Wait  10`
  918:  		Call  8024ECF8  ( 00000000 00000001 00000000 )
  930:  		Wait  10`
  93C:  		If  *VarA  ==  .HitResult:Lucky % 5
  94C:  			Call  EnemyTestTarget   ( .Actor:Self *Var0 ~Flags:DamageType:TriggerLucky 00000000 00000000 00000000 )
  970:  		EndIf
  978:  		ExecWait  $Script_8021F7EC
  984:  		Call  EnableIdleScript  ( .Actor:Self 00000001 )
  998:  		Call  UseIdleAnimation  ( .Actor:Self .True )
  9AC:  		Return
  9B4:  	EndCaseGroup
  9BC:  	Default
  9C4:  EndSwitch
  9CC:  Call  8024ECF8  ( 00000000 00000001 00000000 )
  9E4:  Call  SetGoalToTarget   ( .Actor:Self )
  9F4:  Thread
  9FC:  	Call  GetGoalPos    ( .Actor:Self *Var0 *Var1 *Var2 )
  A18:  	Call  RandInt       ( 0000000A *Var3 )
  A2C:  	Sub   *Var3  0000000A
  A3C:  	Add   *Var1  *Var3
  A4C:  	Call  FlyPartTo     ( .Actor:Self 00000004 *Var0 *Var1 *Var2  6`  0` .Easing:Linear )
  A78:  EndThread
  A80:  Thread
  A88:  	Call  GetGoalPos    ( .Actor:Self *Var0 *Var1 *Var2 )
  AA4:  	Call  RandInt       ( 0000000A *Var3 )
  AB8:  	Add   *Var3  0000000A
  AC8:  	Add   *Var1  *Var3
  AD8:  	Call  FlyPartTo     ( .Actor:Self 00000005 *Var0 *Var1 *Var2  6`  0` .Easing:Linear )
  B04:  EndThread
  B0C:  Call  GetGoalPos        ( .Actor:Self *Var0 *Var1 *Var2 )
  B28:  Call  FlyPartTo ( .Actor:Self 00000003 *Var0 *Var1 *Var2  6`  0` .Easing:Linear )
  B54:  Wait  2`
  B60:  Call  EnemyDamageTarget ( .Actor:Self *Var0 ~Flags:DamageType:NoContact 00000000 00000000 00000002 00000020 )
  B88:  Set   *VarF  *Var0
  B98:  Switch  *VarF
  BA4:  	Default
  BAC:  		Thread
  BB4:  			Call  SetPartRotation   ( .Actor:Self 00000004 00000000 0000002D 0000005A )
  BD4:  			Call  GetPartOffset     ( .Actor:Self 00000004 *Var0 *Var1 *Var2 )
  BF4:  			Sub   *Var0  00000028
  C04:  			Set   *Var1  00000002
  C14:  			Call  SetPartJumpGravity    ( .Actor:Self 00000004 *Fixed[1.5] )
  C2C:  			Call  JumpPartTo        ( .Actor:Self 00000004 *Var0 *Var1 *Var2  10` .True )
  C54:  			Call  SetPartRotation   ( .Actor:Self 00000004 00000000 00000050 0000005A )
  C74:  			Wait  8`
  C80:  			Loop  0000000F
  C8C:  				Call  SetPartFlagBits   ( .Actor:Self 00000004 00000001 .False )
  CA8:  				Wait  1`
  CB4:  				Call  SetPartFlagBits   ( .Actor:Self 00000004 00000001 .True )
  CD0:  				Wait  1`
  CDC:  			EndLoop
  CE4:  		EndThread
  CEC:  		Thread
  CF4:  			Call  SetPartRotation   ( .Actor:Self 00000005 00000000 0000002D FFFFFFA6 )
  D14:  			Call  GetPartOffset     ( .Actor:Self 00000005 *Var0 *Var1 *Var2 )
  D34:  			Add   *Var0  00000014
  D44:  			Set   *Var1  00000004
  D54:  			Call  SetPartJumpGravity    ( .Actor:Self 00000005 *Fixed[1.5] )
  D6C:  			Call  JumpPartTo        ( .Actor:Self 00000005 *Var0 *Var1 *Var2  10` .True )
  D94:  			Call  SetPartRotation   ( .Actor:Self 00000005 00000000 0000005A FFFFFFA6 )
  DB4:  			Wait  8`
  DC0:  			Loop  0000000F
  DCC:  				Call  SetPartFlagBits   ( .Actor:Self 00000005 00000001 .False )
  DE8:  				Wait  1`
  DF4:  				Call  SetPartFlagBits   ( .Actor:Self 00000005 00000001 .True )
  E10:  				Wait  1`
  E1C:  			EndLoop
  E24:  		EndThread
  E2C:  		Thread
  E34:  			Call  SetPartRotation   ( .Actor:Self 00000003 00000000 0000002D FFFFFFA6 )
  E54:  			Call  GetPartOffset     ( .Actor:Self 00000003 *Var0 *Var1 *Var2 )
  E74:  			Sub   *Var0  00000005
  E84:  			Set   *Var1  00000004
  E94:  			Call  SetPartJumpGravity    ( .Actor:Self 00000003 *Fixed[1.5] )
  EAC:  			Call  JumpPartTo        ( .Actor:Self 00000003 *Var0 *Var1 *Var2  10` .True )
  ED4:  			Call  SetPartRotation   ( .Actor:Self 00000003 00000000 0000005A FFFFFFA6 )
  EF4:  			Wait  8`
  F00:  			Loop  0000000F
  F0C:  				Call  SetPartFlagBits   ( .Actor:Self 00000003 00000001 .False )
  F28:  				Wait  1`
  F34:  				Call  SetPartFlagBits   ( .Actor:Self 00000003 00000001 .True )
  F50:  				Wait  1`
  F5C:  			EndLoop
  F64:  		EndThread
  F6C:  		Wait  30`
  F78:  		Call  YieldTurn ( )
  F84:  		ExecWait  $Script_8021F7EC
  F90:  EndSwitch
  F98:  Call  EnableIdleScript  ( .Actor:Self 00000001 )
  FAC:  Call  UseIdleAnimation  ( .Actor:Self .True )
  FC0:  Return
  FC8:  End
}

#new:Script $Script_8021DCB8
{
    0:  Call  GetAnimation  ( .Actor:Self 00000001 *Var0 )
   18:  Switch  *Var0
   24:  	CaseOR  ==  00670001
   30:  	CaseOR  ==  00670002
   3C:  	CaseOR  ==  0067000D
   48:  	CaseOR  ==  00670016
   54:  	CaseOR  ==  00670017
   60:  		Loop
   6C:  			Call  8026DF88  ( FFFFFF81 00000001 *Var0 )
   84:  			If  *Var0  ==  00000001
   94:  				BreakLoop
   9C:  			EndIf
   A4:  			Wait  1`
   B0:  		EndLoop
   B8:  	EndCaseGroup
   C0:  EndSwitch
   C8:  Call  ResetActorSounds  ( .Actor:Self .ActorSound:Fly )
   DC:  Call  SetActorSounds    ( .Actor:Self .ActorSound:FlyIncrement FFFFFFF8 00000000 )
   F8:  ChildThread
  100:  	Loop
  10C:  		Call  $Function_802180C0    ( 00000064 0000000A )
  120:  		Wait  10`
  12C:  	EndLoop
  134:  EndChildThread
  13C:  ChildThread
  144:  	Call  SetActorSpeed ( .Actor:Player *Fixed[5.0] )
  158:  	Call  SetActorJumpGravity   ( .Actor:Player *Fixed[0.1] )
  16C:  	Call  GetActorPos   ( .Actor:Player *Var0 *Var1 *Var2 )
  188:  	Add   *Var1  000000B4
  198:  	Call  SetGoalPos    ( .Actor:Player *Var0 *Var1 *Var2 )
  1B4:  	Call  FlyToGoal     ( .Actor:Player  99`  0` .Easing:Linear )
  1D0:  EndChildThread
  1D8:  Call  SetActorSpeed ( .Actor:Self *Fixed[5.0] )
  1EC:  Call  SetActorJumpGravity   ( .Actor:Self *Fixed[0.1] )
  200:  Call  GetActorPos   ( .Actor:Self *Var0 *Var1 *Var2 )
  21C:  Add   *Var1  000000B4
  22C:  Call  SetGoalPos    ( .Actor:Self *Var0 *Var1 *Var2 )
  248:  Call  FlyToGoal     ( .Actor:Self  99`  0` .Easing:Linear )
  264:  Return
  26C:  End
}

#new:Script $Script_8021DF2C
{
    0:  Call  UseIdleAnimation  ( .Actor:Self .False )
   14:  Call  EnableIdleScript  ( .Actor:Self 00000000 )
   28:  Call  SetTargetActor    ( .Actor:Self .Actor:Player )
   3C:  Call  SetGoalToTarget   ( .Actor:Self )
   4C:  Call  UseBattleCamPreset    ( 0000003F )
   5C:  Call  SetBattleCamZoom  (  240` )
   6C:  Call  BattleCamTargetActor  ( .Actor:Self )
   7C:  Call  SetActorSpeed     ( .Actor:Self *Fixed[4.0] )
   90:  Call  SetGoalToTarget   ( .Actor:Self )
   A0:  Call  AddGoalPos        ( .Actor:Self  45`  55`  0` )
   BC:  Call  GetAnimation      ( .Actor:Self 00000001 *Var0 )
   D4:  Switch  *Var0
   E0:  	CaseOR  ==  00670001
   EC:  	CaseOR  ==  00670002
   F8:  	CaseOR  ==  0067000D
  104:  	CaseOR  ==  00670016
  110:  	CaseOR  ==  00670017
  11C:  		Loop
  128:  			Call  8026DF88  ( FFFFFF81 00000001 *Var0 )
  140:  			If  *Var0  ==  00000001
  150:  				BreakLoop
  158:  			EndIf
  160:  			Wait  1`
  16C:  		EndLoop
  174:  	EndCaseGroup
  17C:  EndSwitch
  184:  Call  SetAnimation      ( .Actor:Self 00000001 00670002 )
  19C:  Call  FlyToGoal ( .Actor:Self  0`  -10` .Easing:CosInOut )
  1B8:  Call  EnemyTestTarget   ( .Actor:Self *VarA ~Flags:DamageType:0 00000000 00000004 00000010 )
  1DC:  Switch  *VarA
  1E8:  	CaseOR  ==  .HitResult:Miss % 6
  1F4:  	CaseOR  ==  .HitResult:Lucky % 5
  200:  		Wait  10`
  20C:  		Call  UseBattleCamPreset    ( 00000042 )
  21C:  		Call  SetBattleCamZoom  (  240` )
  22C:  		Call  SetBattleCamOffsetZ   (  -10` )
  23C:  		Call  BattleCamTargetActor  ( .Actor:Self )
  24C:  		Call  PlaySoundAtActor  ( .Actor:Self 000020F1 )
  260:  		Call  SetActorSpeed     ( .Actor:Self *Fixed[5.0] )
  274:  		Call  SetActorJumpGravity   ( .Actor:Self *Fixed[1.8] )
  288:  		Call  GetActorPos       ( .Actor:Self *Var0 *Var1 *Var2 )
  2A4:  		Call  SetGoalPos        ( .Actor:Self *Var0 *Var1 *Var2 )
  2C0:  		Call  JumpToGoal        ( .Actor:Self  10` .False .True .False )
  2E0:  		Call  PlaySoundAtActor  ( .Actor:Self 000020F2 )
  2F4:  		Call  SetActorSounds    ( .Actor:Self .ActorSound:Fly 00000000 00000000 )
  310:  		Call  SetGoalToTarget   ( .Actor:Self )
  320:  		Call  AddGoalPos        ( .Actor:Self  -45`  -20`  0` )
  33C:  		Call  SetActorSpeed     ( .Actor:Self *Fixed[6.0] )
  350:  		Call  SetAnimation      ( .Actor:Self 00000001 00670018 )
  368:  		Call  FlyToGoal ( .Actor:Self  12`  -12` .Easing:Linear )
  384:  		Call  SetAnimation      ( .Actor:Self 00000001 00670001 )
  39C:  		Wait  10`
  3A8:  		Call  UseBattleCamPreset    ( 00000002 )
  3B8:  		If  *VarA  ==  .HitResult:Lucky % 5
  3C8:  			Call  EnemyTestTarget   ( .Actor:Self *Var0 ~Flags:DamageType:TriggerLucky 00000000 00000000 00000000 )
  3EC:  		EndIf
  3F4:  		ExecWait  $Script_8021F808
  400:  		Call  EnableIdleScript  ( .Actor:Self 00000001 )
  414:  		Call  UseIdleAnimation  ( .Actor:Self .True )
  428:  		Return
  430:  	EndCaseGroup
  438:  	Case  ==  .HitResult:Immune % 8
  444:  		Call  UseBattleCamPreset    ( 00000042 )
  454:  		Call  SetBattleCamZoom  (  240` )
  464:  		Call  SetBattleCamOffsetZ   (  -10` )
  474:  		Call  BattleCamTargetActor  ( .Actor:Self )
  484:  		Call  PlaySoundAtActor  ( .Actor:Self 000020F1 )
  498:  		Call  SetActorSpeed     ( .Actor:Self *Fixed[5.0] )
  4AC:  		Call  SetActorJumpGravity   ( .Actor:Self *Fixed[1.8] )
  4C0:  		Call  GetActorPos       ( .Actor:Self *Var0 *Var1 *Var2 )
  4DC:  		Call  SetGoalPos        ( .Actor:Self *Var0 *Var1 *Var2 )
  4F8:  		Call  JumpToGoal        ( .Actor:Self  10` .False .True .False )
  518:  		Call  PlaySoundAtActor  ( .Actor:Self 000020F2 )
  52C:  		Call  SetActorSounds    ( .Actor:Self .ActorSound:Fly 00000000 00000000 )
  548:  		Call  SetGoalToTarget   ( .Actor:Self )
  558:  		Call  AddGoalPos        ( .Actor:Self  -15`  -10`  0` )
  574:  		Call  SetActorSpeed     ( .Actor:Self *Fixed[6.0] )
  588:  		Call  SetAnimation      ( .Actor:Self 00000001 00670018 )
  5A0:  		Call  FlyToGoal ( .Actor:Self  8`  -5` .Easing:Linear )
  5BC:  		Call  EnemyDamageTarget ( .Actor:Self *Var0 ~Flags:DamageType:0 00000000 00000000 00000004 00000020 )
  5E4:  		Call  SetGoalToTarget   ( .Actor:Self )
  5F4:  		Call  AddGoalPos        ( .Actor:Self  40`  10`  0` )
  610:  		Call  SetActorSpeed     ( .Actor:Self *Fixed[6.0] )
  624:  		Call  GetAnimation      ( .Actor:Self 00000001 *Var0 )
  63C:  		Switch  *Var0
  648:  			CaseOR  ==  00670001
  654:  			CaseOR  ==  00670002
  660:  			CaseOR  ==  0067000D
  66C:  			CaseOR  ==  00670016
  678:  			CaseOR  ==  00670017
  684:  				Loop
  690:  					Call  8026DF88  ( FFFFFF81 00000001 *Var0 )
  6A8:  					If  *Var0  ==  00000001
  6B8:  						BreakLoop
  6C0:  					EndIf
  6C8:  					Wait  1`
  6D4:  				EndLoop
  6DC:  			EndCaseGroup
  6E4:  		EndSwitch
  6EC:  		Call  ResetActorSounds  ( .Actor:Self .ActorSound:Fly )
  700:  		Call  SetActorSounds    ( .Actor:Self .ActorSound:FlyIncrement FFFFFFF2 00000000 )
  71C:  		Call  SetAnimation      ( .Actor:Self 00000001 00670002 )
  734:  		Call  FlyToGoal ( .Actor:Self  0`  0` .Easing:Linear )
  750:  		Wait  20`
  75C:  		Call  UseBattleCamPreset    ( 00000002 )
  76C:  		ExecWait  $Script_8021F7EC
  778:  		Call  EnableIdleScript  ( .Actor:Self 00000001 )
  78C:  		Call  UseIdleAnimation  ( .Actor:Self .True )
  7A0:  		Return
  7A8:  	Default
  7B0:  EndSwitch
  7B8:  Wait  10`
  7C4:  Call  8024E664  ( 00000013 )
  7D4:  Call  SetBattleCamZoom  (  360` )
  7E4:  Call  MoveBattleCamOver (  30` )
  7F4:  Thread
  7FC:  	Wait  5`
  808:  	Call  UseBattleCamPreset    ( 00000013 )
  818:  	Call  SetBattleCamZoom      (  360` )
  828:  	Call  GetActorPos   ( .Actor:Player *Var0 *Var1 *Var2 )
  844:  	Set   *Var1  0000001B
  854:  	Call  SetBattleCamTarget    ( *Var0 *Var1 *Var2 )
  86C:  	Call  MoveBattleCamOver     (  20` )
  87C:  EndThread
  884:  Call  PlaySoundAtActor  ( .Actor:Self 000020F1 )
  898:  Call  SetActorSpeed ( .Actor:Self *Fixed[5.0] )
  8AC:  Call  SetActorJumpGravity   ( .Actor:Self *Fixed[1.8] )
  8C0:  Call  GetActorPos   ( .Actor:Self *Var0 *Var1 *Var2 )
  8DC:  Call  SetGoalPos    ( .Actor:Self *Var0 *Var1 *Var2 )
  8F8:  Call  JumpToGoal    ( .Actor:Self  10` .False .True .False )
  918:  Call  PlaySoundAtActor  ( .Actor:Self 000020F2 )
  92C:  Call  SetActorSounds    ( .Actor:Self .ActorSound:Fly 00000000 00000000 )
  948:  Call  SetGoalToTarget   ( .Actor:Self )
  958:  Call  AddGoalPos    ( .Actor:Self  -15`  -10`  0` )
  974:  Call  SetActorSpeed ( .Actor:Self *Fixed[6.0] )
  988:  Call  SetAnimation  ( .Actor:Self 00000001 00670018 )
  9A0:  Call  FlyToGoal     ( .Actor:Self  8`  -5` .Easing:Linear )
  9BC:  If  *VarA  ==  00000007
  9CC:  	Call  EnemyDamageTarget ( .Actor:Self *Var0 ~Flags:DamageType:0 00000000 00000000 00000004 00000020 )
  9F4:  EndIf
  9FC:  Call  PlaySoundAtActor  ( .Actor:Self 000020F5 )
  A10:  Call  SetAnimation      ( .Actor:Self 00000001 00670016 )
  A28:  Call  $Function_802180C0    ( 000000B4 00000014 )
  A3C:  Call  UseIdleAnimation  ( .Actor:Player .False )
  A50:  Call  SetAnimation      ( .Actor:Player 00000000 0001002B )
  A68:  Call  ShowMessageBox    ( 00000040 0000005A )
  A7C:  Thread
  A84:  	Loop  0000005A
  A90:  		Call  SetMessageBoxDuration ( 00000063 )
  AA0:  		Wait  1`
  AAC:  	EndLoop
  AB4:  	Call  SetMessageBoxDuration ( 00000000 )
  AC4:  EndThread
  ACC:  Wait  20`
  AD8:  Call  LoadActionCommand ( .ActionCommand:BreakFree )
  AE8:  Call  802A9000 ( )
  AF4:  Call  SetupMashMeter    ( 00000001 0000001E 00000000 00000000 00000000 00000000 )
  B18:  Wait  10`
  B24:  Call  SetAnimation      ( .Actor:Self 00000001 00670017 )
  B3C:  Call  UseBattleCamPreset    ( 00000042 )
  B4C:  Call  SetBattleCamZoom  (  240` )
  B5C:  Call  SetBattleCamOffsetZ   (  -10` )
  B6C:  Call  BattleCamTargetActor  ( .Actor:Self )
  B7C:  Call  MoveBattleCamOver (  60` )
  B8C:  Call  SetBattleFlagBits ( 00004000 .False )
  BA0:  Call  802694A4  ( 00000001 )
  BB0:  Call  802A91B0  ( 00000000 0000003C 0000001E 00000003 )
  BCC:  Exec  $Script_8021DCB8 *VarA
  BDC:  Wait  62`
  BE8:  Call  GetActionSuccessCopy  ( *Var0 )
  BF8:  If  *Var0  >  00000000
  C08:  	Call  SetAnimation      ( .Actor:Self 00000001 00670001 )
  C20:  	Wait  2`
  C2C:  	Kill  *VarA
  C38:  	Call  SetJumpAnimations ( .Actor:Player 00000000 00010007 00010007 00010009 )
  C58:  	Call  SetActorSpeed     ( .Actor:Player *Fixed[5.0] )
  C6C:  	Call  SetActorJumpGravity   ( .Actor:Player *Fixed[1.8] )
  C80:  	Call  GetActorPos       ( .Actor:Player *Var0 *Var1 *Var2 )
  C9C:  	Set   *Var1  00000000
  CAC:  	Call  SetGoalPos        ( .Actor:Player *Var0 *Var1 *Var2 )
  CC8:  	Call  PlayerFallToGoal  ( 0000000F )
  CD8:  	Wait  8`
  CE4:  	Call  SetAnimation      ( .Actor:Player 00000000 00010002 )
  CFC:  	Call  UseIdleAnimation  ( .Actor:Player .True )
  D10:  	Wait  8`
  D1C:  	Call  UseBattleCamPreset    ( 00000002 )
  D2C:  	ExecWait  $Script_8021F808
  D38:  	Call  EnableIdleScript  ( .Actor:Self 00000001 )
  D4C:  	Call  UseIdleAnimation  ( .Actor:Self .True )
  D60:  	Return
  D68:  EndIf
  D70:  Call  UseBattleCamPreset    ( 00000013 )
  D80:  Call  SetBattleCamZoom  (  360` )
  D90:  Call  GetActorPos       ( .Actor:Player *Var0 *Var1 *Var2 )
  DAC:  Set   *Var1  00000032
  DBC:  Call  SetBattleCamTarget    ( *Var0 *Var1 *Var2 )
  DD4:  Call  MoveBattleCamOver (  200` )
  DE4:  Wait  39`
  DF0:  Wait  10`
  DFC:  Call  SetJumpAnimations ( .Actor:Player 00000000 0001001B 0001001B 0001001B )
  E1C:  Call  SetActorSpeed     ( .Actor:Player *Fixed[5.0] )
  E30:  Call  SetActorJumpGravity   ( .Actor:Player *Fixed[1.2] )
  E44:  Call  GetActorPos       ( .Actor:Player *Var0 *Var1 *Var2 )
  E60:  Set   *Var1  00000000
  E70:  Call  SetGoalPos        ( .Actor:Player *Var0 *Var1 *Var2 )
  E8C:  Call  PlayerFallToGoal  ( 00000018 )
  E9C:  Call  UseIdleAnimation  ( .Actor:Player .True )
  EB0:  Call  SetGoalToTarget   ( .Actor:Self )
  EC0:  Call  EnemyDamageTarget ( .Actor:Self *Var0 ~Flags:DamageType:0 00000000 00000000 00000004 00000020 )
  EE8:  Set   *VarF  *Var0
  EF8:  Switch  *VarF
  F04:  	CaseOR  ==  .HitResult:Hit % 0
  F10:  	CaseOR  ==  .HitResult:QuakeImmune % 2
  F1C:  		Call  SetGoalToTarget   ( .Actor:Self )
  F2C:  		Call  AddGoalPos    ( .Actor:Self  50`  10`  0` )
  F48:  		Call  SetActorSpeed ( .Actor:Self *Fixed[4.0] )
  F5C:  		Call  GetAnimation  ( .Actor:Self 00000001 *Var0 )
  F74:  		Switch  *Var0
  F80:  			CaseOR  ==  00670001
  F8C:  			CaseOR  ==  00670002
  F98:  			CaseOR  ==  0067000D
  FA4:  			CaseOR  ==  00670016
  FB0:  			CaseOR  ==  00670017
  FBC:  				Loop
  FC8:  					Call  8026DF88  ( FFFFFF81 00000001 *Var0 )
  FE0:  					If  *Var0  ==  00000001
  FF0:  						BreakLoop
  FF8:  					EndIf
 1000:  					Wait  1`
 100C:  				EndLoop
 1014:  			EndCaseGroup
 101C:  		EndSwitch
 1024:  		Call  ResetActorSounds  ( .Actor:Self .ActorSound:Fly )
 1038:  		Call  SetActorSounds    ( .Actor:Self .ActorSound:FlyIncrement FFFFFFF2 00000000 )
 1054:  		Call  SetAnimation      ( .Actor:Self 00000001 00670002 )
 106C:  		Call  FlyToGoal ( .Actor:Self  0`  -10` .Easing:Linear )
 1088:  		Wait  10`
 1094:  		Call  UseBattleCamPreset    ( 00000002 )
 10A4:  		Call  YieldTurn ( )
 10B0:  		ExecWait  $Script_8021F7EC
 10BC:  	EndCaseGroup
 10C4:  EndSwitch
 10CC:  Call  EnableIdleScript  ( .Actor:Self 00000001 )
 10E0:  Call  UseIdleAnimation  ( .Actor:Self .True )
 10F4:  Return
 10FC:  End
}

#new:Script $Script_8021F030
{
    0:  Call  UseIdleAnimation  ( .Actor:Self .False )
   14:  Call  EnableIdleScript  ( .Actor:Self 00000000 )
   28:  Call  SetTargetActor    ( .Actor:Self .Actor:Player )
   3C:  Call  SetGoalToTarget   ( .Actor:Self )
   4C:  Call  UseBattleCamPreset    ( 0000003F )
   5C:  Call  SetBattleCamZoom  (  240` )
   6C:  Call  BattleCamTargetActor  ( .Actor:Self )
   7C:  Call  8024ECF8  ( FFFFFFFF 00000001 00000000 )
   94:  Call  SetActorSpeed     ( .Actor:Self *Fixed[4.0] )
   A8:  Call  SetGoalToTarget   ( .Actor:Self )
   B8:  Call  AddGoalPos        ( .Actor:Self  60`  15`  0` )
   D4:  Call  GetAnimation      ( .Actor:Self 00000001 *Var0 )
   EC:  Switch  *Var0
   F8:  	CaseOR  ==  00670001
  104:  	CaseOR  ==  00670002
  110:  	CaseOR  ==  0067000D
  11C:  	CaseOR  ==  00670016
  128:  	CaseOR  ==  00670017
  134:  		Loop
  140:  			Call  8026DF88  ( FFFFFF81 00000001 *Var0 )
  158:  			If  *Var0  ==  00000001
  168:  				BreakLoop
  170:  			EndIf
  178:  			Wait  1`
  184:  		EndLoop
  18C:  	EndCaseGroup
  194:  EndSwitch
  19C:  Call  SetAnimation      ( .Actor:Self 00000001 00670002 )
  1B4:  Call  FlyToGoal ( .Actor:Self  0`  -15` .Easing:CosInOut )
  1D0:  Call  EnemyTestTarget   ( .Actor:Self *Var0 ~Flags:DamageType:0 00000000 00000003 00000010 )
  1F4:  Switch  *Var0
  200:  	CaseOR  ==  .HitResult:Miss % 6
  20C:  	CaseOR  ==  .HitResult:Lucky % 5
  218:  		Set   *VarA  *Var0
  228:  		Wait  10`
  234:  		Call  PlaySoundAtActor  ( .Actor:Self 000020F1 )
  248:  		Call  SetActorSpeed ( .Actor:Self *Fixed[5.0] )
  25C:  		Call  SetActorJumpGravity   ( .Actor:Self *Fixed[1.8] )
  270:  		Call  GetActorPos   ( .Actor:Self *Var0 *Var1 *Var2 )
  28C:  		Call  SetGoalPos    ( .Actor:Self *Var0 *Var1 *Var2 )
  2A8:  		Call  JumpToGoal    ( .Actor:Self  10` .False .True .False )
  2C8:  		Call  PlaySoundAtActor  ( .Actor:Self 000020F2 )
  2DC:  		Call  SetActorSounds    ( .Actor:Self .ActorSound:Fly 00000000 00000000 )
  2F8:  		Call  SetGoalToTarget   ( .Actor:Self )
  308:  		Call  AddGoalPos    ( .Actor:Self  -45`  -20`  0` )
  324:  		Call  SetActorSpeed ( .Actor:Self *Fixed[6.0] )
  338:  		Call  SetAnimation  ( .Actor:Self 00000001 00670018 )
  350:  		Call  FlyToGoal     ( .Actor:Self  12`  -12` .Easing:Linear )
  36C:  		Call  SetAnimation  ( .Actor:Self 00000001 00670001 )
  384:  		Wait  10`
  390:  		Call  UseBattleCamPreset    ( 00000002 )
  3A0:  		If  *VarA  ==  .HitResult:Lucky % 5
  3B0:  			Call  EnemyTestTarget   ( .Actor:Self *Var0 ~Flags:DamageType:TriggerLucky 00000000 00000000 00000000 )
  3D4:  		EndIf
  3DC:  		ExecWait  $Script_8021F7EC
  3E8:  		Call  EnableIdleScript  ( .Actor:Self 00000001 )
  3FC:  		Call  UseIdleAnimation  ( .Actor:Self .True )
  410:  		Return
  418:  	EndCaseGroup
  420:  EndSwitch
  428:  Wait  10`
  434:  Call  PlaySoundAtActor  ( .Actor:Self 000020F1 )
  448:  Call  SetActorSpeed ( .Actor:Self *Fixed[5.0] )
  45C:  Call  SetActorJumpGravity   ( .Actor:Self *Fixed[1.8] )
  470:  Call  GetActorPos   ( .Actor:Self *Var0 *Var1 *Var2 )
  48C:  Call  SetGoalPos    ( .Actor:Self *Var0 *Var1 *Var2 )
  4A8:  Call  JumpToGoal    ( .Actor:Self  10` .False .True .False )
  4C8:  Call  PlaySoundAtActor  ( .Actor:Self 000020F2 )
  4DC:  Call  SetActorSounds    ( .Actor:Self .ActorSound:Fly 00000000 00000000 )
  4F8:  Call  SetGoalToTarget   ( .Actor:Self )
  508:  Call  AddGoalPos    ( .Actor:Self  -5`  -10`  0` )
  524:  Call  SetActorSpeed ( .Actor:Self *Fixed[6.0] )
  538:  Call  SetAnimation  ( .Actor:Self 00000001 00670018 )
  550:  Call  FlyToGoal     ( .Actor:Self  8`  0` .Easing:Linear )
  56C:  Wait  2`
  578:  Call  EnemyDamageTarget ( .Actor:Self *Var0 ~Flags:DamageType:0 00000000 00000000 00000003 00000020 )
  5A0:  Set   *VarF  *Var0
  5B0:  Switch  *VarF
  5BC:  	CaseOR  ==  .HitResult:Hit % 0
  5C8:  	CaseOR  ==  .HitResult:QuakeImmune % 2
  5D4:  		Call  GetAnimation  ( .Actor:Self 00000001 *Var0 )
  5EC:  		Switch  *Var0
  5F8:  			CaseOR  ==  00670001
  604:  			CaseOR  ==  00670002
  610:  			CaseOR  ==  0067000D
  61C:  			CaseOR  ==  00670016
  628:  			CaseOR  ==  00670017
  634:  				Loop
  640:  					Call  8026DF88  ( FFFFFF81 00000001 *Var0 )
  658:  					If  *Var0  ==  00000001
  668:  						BreakLoop
  670:  					EndIf
  678:  					Wait  1`
  684:  				EndLoop
  68C:  			EndCaseGroup
  694:  		EndSwitch
  69C:  		Call  ResetActorSounds  ( .Actor:Self .ActorSound:Fly )
  6B0:  		Call  SetActorSounds    ( .Actor:Self .ActorSound:FlyIncrement FFFFFFF2 00000000 )
  6CC:  		Call  SetGoalToTarget   ( .Actor:Self )
  6DC:  		Call  AddGoalPos        ( .Actor:Self  50`  10`  0` )
  6F8:  		Call  SetActorSpeed     ( .Actor:Self *Fixed[6.0] )
  70C:  		Call  SetAnimation      ( .Actor:Self 00000001 00670002 )
  724:  		Call  FlyToGoal ( .Actor:Self  0`  0` .Easing:Linear )
  740:  		Wait  10`
  74C:  		Call  UseBattleCamPreset    ( 00000002 )
  75C:  		Call  YieldTurn ( )
  768:  		ExecWait  $Script_8021F7EC
  774:  	EndCaseGroup
  77C:  EndSwitch
  784:  Call  EnableIdleScript  ( .Actor:Self 00000001 )
  798:  Call  UseIdleAnimation  ( .Actor:Self .True )
  7AC:  Return
  7B4:  End
}

#new:Script $Script_8021F7EC
{
    0:  ExecWait  $Script_8021F824
    C:  Return
   14:  End
}

#new:Script $Script_8021F808
{
    0:  ExecWait  $Script_8021FA2C
    C:  Return
   14:  End
}

#new:Script $Script_8021F824
{
    0:  Call  GetAnimation  ( .Actor:Self 00000001 *Var0 )
   18:  Switch  *Var0
   24:  	CaseOR  ==  00670001
   30:  	CaseOR  ==  00670002
   3C:  	CaseOR  ==  0067000D
   48:  	CaseOR  ==  00670016
   54:  	CaseOR  ==  00670017
   60:  		Loop
   6C:  			Call  8026DF88  ( FFFFFF81 00000001 *Var0 )
   84:  			If  *Var0  ==  00000001
   94:  				BreakLoop
   9C:  			EndIf
   A4:  			Wait  1`
   B0:  		EndLoop
   B8:  	EndCaseGroup
   C0:  EndSwitch
   C8:  Call  ResetActorSounds  ( .Actor:Self .ActorSound:Fly )
   DC:  Call  SetActorSpeed ( .Actor:Self *Fixed[4.0] )
   F0:  Call  SetGoalToHome ( .Actor:Self )
  100:  Call  GetGoalPos    ( .Actor:Self *Var0 *Var1 *Var2 )
  11C:  Set   *Var1  00000028
  12C:  Call  SetAnimation  ( .Actor:Self 00000001 00670001 )
  144:  Call  SetActorSounds    ( .Actor:Self .ActorSound:FlyIncrement FFFFFFEC 00000000 )
  160:  Call  SetGoalPos    ( .Actor:Self *Var0 *Var1 *Var2 )
  17C:  Call  FlyToGoal     ( .Actor:Self  0`  -10` .Easing:Linear )
  198:  Call  GetActorPos   ( .Actor:Self *Var0 *Var1 *Var2 )
  1B4:  Call  ForceHomePos  ( .Actor:Self *Var0 *Var1 *Var2 )
  1D0:  Call  SetAnimation  ( .Actor:Self 00000001 00670001 )
  1E8:  Call  HPBarToHome   ( .Actor:Self )
  1F8:  Return
  200:  End
}

#new:Script $Script_8021FA2C
{
    0:  Call  GetAnimation  ( .Actor:Self 00000001 *Var0 )
   18:  Switch  *Var0
   24:  	CaseOR  ==  00670001
   30:  	CaseOR  ==  00670002
   3C:  	CaseOR  ==  0067000D
   48:  	CaseOR  ==  00670016
   54:  	CaseOR  ==  00670017
   60:  		Loop
   6C:  			Call  8026DF88  ( FFFFFF81 00000001 *Var0 )
   84:  			If  *Var0  ==  00000001
   94:  				BreakLoop
   9C:  			EndIf
   A4:  			Wait  1`
   B0:  		EndLoop
   B8:  	EndCaseGroup
   C0:  EndSwitch
   C8:  Call  ResetActorSounds  ( .Actor:Self .ActorSound:Fly )
   DC:  Call  SetActorSpeed ( .Actor:Self *Fixed[6.0] )
   F0:  Call  SetGoalToHome ( .Actor:Self )
  100:  Call  GetGoalPos    ( .Actor:Self *Var0 *Var1 *Var2 )
  11C:  Set   *Var1  00000028
  12C:  Call  SetAnimation  ( .Actor:Self 00000001 00670001 )
  144:  Call  SetActorSounds    ( .Actor:Self .ActorSound:FlyIncrement FFFFFFEC 00000000 )
  160:  Call  SetGoalPos    ( .Actor:Self *Var0 *Var1 *Var2 )
  17C:  Call  FlyToGoal     ( .Actor:Self  0`  45` .Easing:Linear )
  198:  Call  GetActorPos   ( .Actor:Self *Var0 *Var1 *Var2 )
  1B4:  Call  ForceHomePos  ( .Actor:Self *Var0 *Var1 *Var2 )
  1D0:  Call  SetAnimation  ( .Actor:Self 00000001 00670001 )
  1E8:  Call  HPBarToHome   ( .Actor:Self )
  1F8:  Return
  200:  End
}

#new:Script $Script_8021FC34
{
    0:  Return
    8:  Return
   10:  End
}

PADDING: 8021FC4C to 8021FC50 (004D7E3C to 004D7E40)
00000000

#new:IdleAnimations $IdleAnimations_8021FC50
{
	.Status:Normal    00920001
	.Status:Stone     00920000
	.Status:Sleep     00920001
	.Status:Poison    00920001
	.Status:Stop      00920000
	.Status:Static    00920001
	.Status:Paralyze  00920000
	.Status:Dizzy     00920001
	.Status:Fear      00920001
	.Status:End
}

#new:DefenseTable $DefenseTable_8021FC9C
{
	.Element:Normal 00000000
	.Element:End
}

#new:StatusTable $StatusTable_8021FCA8
{
	.Status:Normal      0`
	.Status:Default     0`
	.Status:Sleep       0`
	.Status:Poison      0`
	.Status:Frozen      0`
	.Status:Dizzy       0`
	.Status:Fear        0`
	.Status:Static      0`
	.Status:Paralyze    0`
	.Status:Shrink      0`
	.Status:Stop        0`
	.Status:DefaultTurnMod    0`
	.Status:SleepTurnMod      0`
	.Status:PoisonTurnMod     0`
	.Status:FrozenTurnMod     0`
	.Status:DizzyTurnMod      0`
	.Status:FearTurnMod       0`
	.Status:StaticTurnMod     0`
	.Status:ParalyzeTurnMod   0`
	.Status:ShrinkTurnMod     0`
	.Status:StopTurnMod       0`
	.Status:End
}

#new:PartsTable $PartsTable_8021FD54
{
	00800000 01000000 001E00FF $IdleAnimations_8021FC50 $DefenseTable_8021FC9C 00000000 00000000 00FB0000 00000000
}

#new:Actor $WhackaA
{
	% stats
	[Index]        D0b
	[Level]         0`b
	[MaxHP]        99`b
	[Coins]         0`b
	[Flags]       00040004
	[StatusTable] $StatusTable_8021FCA8
	% ai
	[PartsCount]    1`s
	[PartsTable]  $PartsTable_8021FD54
	[Script]      $Script_Init_8021FDA0
	% move effectiveness
	[Escape]        0`b
	[Item]          0`b
	[AirLift]       0`b
	[Hurricane]     0`b % Bow's "Spook" as well
	[UpAndAway]     0`b
	[PowerBounce]  50`b
	[SpinSmash]     4`b % weight (0-4)
	% ui positions
	[Size]         47`b  32`b % width height
	[HealthBar]     0`b   0`b % dx dy
	[StatusTurn]  -20`b  40`b % dx dy
	[StatusIcon]   10`b  30`b % dx dy
}

#new:Script $Script_Init_8021FDA0
{
    0:  Call  BindTakeTurn  ( .Actor:Self $Script_TakeTurn_80220634 )
   14:  Call  BindIdle      ( .Actor:Self $Script_Idle_8021FE5C )
   28:  Call  BindHandleEvent   ( .Actor:Self $Script_HandleEvent_8021FE90 )
   3C:  Call  SetActorVar   ( .Actor:Self 00000000 00000000 )
   54:  Call  $Function_80218120 ( )
   60:  If  *Var0  ==  00000000
   70:  	Call  SetActorFlagBits  ( .Actor:Self 00600001 .True )
   88:  	Call  SetPartFlagBits   ( .Actor:Self 00000001 00020000 .True )
   A4:  EndIf
   AC:  Return
   B4:  End
}

#new:Script $Script_Idle_8021FE5C
{
    0:  Label  0
    C:  Wait  1`
   18:  Goto  0
   24:  Return
   2C:  End
}

#new:Script $Script_HandleEvent_8021FE90
{
    0:  Call  UseIdleAnimation  ( .Actor:Self .False )
   14:  Call  EnableIdleScript  ( .Actor:Self 00000000 )
   28:  Call  GetLastEvent      ( .Actor:Self *Var0 )
   3C:  Switch  *Var0
   48:  	Case  ==  .Event:HitCombo % 9
   54:  		Call  PlaySoundAtActor  ( .Actor:Self 00002073 )
   68:  		SetConst  *Var0  00000001
   78:  		SetConst  *Var1  00920001
   88:  		ExecWait  DoNormalHit
   94:  	Case  ==  .Event:Hit % A
   A0:  		SetConst  *Var0  00000001
   B0:  		SetConst  *Var1  00920004
   C0:  		ExecWait  $Script_80220684
   CC:  		ExecWait  DoNormalHit
   D8:  		Call  RandInt   ( 00000064 *Var0 )
   EC:  		If  *Var0  <=  00000064
   FC:  			ExecWait  $Script_80220764
  108:  			Return
  110:  		EndIf
  118:  	Case  ==  .Event:BurnHit % E
  124:  		SetConst  *Var0  00000001
  134:  		SetConst  *Var1  00920001
  144:  		SetConst  *Var2  00920001
  154:  		ExecWait  $Script_80220684
  160:  		ExecWait  DoNormalHit
  16C:  		Call  RandInt   ( 00000064 *Var0 )
  180:  		If  *Var0  <=  00000064
  190:  			ExecWait  $Script_80220764
  19C:  			Return
  1A4:  		EndIf
  1AC:  	Case  ==  .Event:BurnDeath % 24
  1B8:  		SetConst  *Var0  00000001
  1C8:  		SetConst  *Var1  00920001
  1D8:  		SetConst  *Var2  00920001
  1E8:  		ExecWait  $Script_80220684
  1F4:  		ExecWait  DoNormalHit
  200:  		If  00000064  >=  00000064
  210:  			ExecWait  $Script_80220764
  21C:  			Return
  224:  		Else
  22C:  			SetConst  *Var0  00000001
  23C:  			SetConst  *Var1  00920001
  24C:  			ExecWait  DoDeath
  258:  			Return
  260:  		EndIf
  268:  	Case  ==  .Event:SpinSmashHit % B
  274:  		SetConst  *Var0  00000001
  284:  		SetConst  *Var1  00920001
  294:  		ExecWait  DoSpinSmashHit
  2A0:  		Call  RandInt   ( 00000064 *Var0 )
  2B4:  		If  *Var0  <=  00000064
  2C4:  			ExecWait  $Script_80220764
  2D0:  			Return
  2D8:  		EndIf
  2E0:  	Case  ==  .Event:SpinSmashDeath % 21
  2EC:  		SetConst  *Var0  00000001
  2FC:  		SetConst  *Var1  00920001
  30C:  		ExecWait  DoSpinSmashHit
  318:  		If  00000064  >=  00000064
  328:  			ExecWait  $Script_80220764
  334:  			Return
  33C:  		Else
  344:  			SetConst  *Var0  00000001
  354:  			SetConst  *Var1  00920001
  364:  			ExecWait  DoDeath
  370:  			Return
  378:  		EndIf
  380:  	Case  ==  .Event:ShockHit % 2F
  38C:  		SetConst  *Var0  00000001
  39C:  		SetConst  *Var1  00920001
  3AC:  		ExecWait  DoShockHit
  3B8:  		SetConst  *Var0  00000001
  3C8:  		SetConst  *Var1  00920001
  3D8:  		ExecWait  DoJumpBack
  3E4:  		SetConst  *Var0  00000001
  3F4:  		SetConst  *Var1  00920001
  404:  		ExecWait  DoReturnHome
  410:  	Case  ==  .Event:ShockDeath % 26
  41C:  		SetConst  *Var0  00000001
  42C:  		SetConst  *Var1  00920001
  43C:  		ExecWait  DoShockHit
  448:  		SetConst  *Var0  00000001
  458:  		SetConst  *Var1  00920001
  468:  		ExecWait  DoDeath
  474:  		Return
  47C:  	Case  ==  00000017 % 17
  488:  		SetConst  *Var0  00000001
  498:  		SetConst  *Var1  00920001
  4A8:  		ExecWait  DoImmune
  4B4:  	Case  ==  .Event:Immune % 19
  4C0:  		SetConst  *Var0  00000001
  4D0:  		SetConst  *Var1  00920001
  4E0:  		ExecWait  DoImmune
  4EC:  		Call  RandInt   ( 00000064 *Var0 )
  500:  		If  *Var0  <=  00000064
  510:  			ExecWait  $Script_80220764
  51C:  			Return
  524:  		EndIf
  52C:  	Case  ==  .Event:AirLiftFailed % 1F
  538:  		SetConst  *Var0  00000001
  548:  		SetConst  *Var1  00920001
  558:  		ExecWait  DoImmune
  564:  		Call  RandInt   ( 00000064 *Var0 )
  578:  		If  *Var0  <=  00000064
  588:  			ExecWait  $Script_80220764
  594:  			Return
  59C:  		EndIf
  5A4:  	Case  ==  .Event:Death % 20
  5B0:  		SetConst  *Var0  00000001
  5C0:  		SetConst  *Var1  00920004
  5D0:  		ExecWait  $Script_80220684
  5DC:  		ExecWait  DoNormalHit
  5E8:  		Wait  10`
  5F4:  		If  00000064  >=  00000064
  604:  			ExecWait  $Script_80220764
  610:  			Return
  618:  		Else
  620:  			SetConst  *Var0  00000001
  630:  			SetConst  *Var1  00920001
  640:  			ExecWait  DoDeath
  64C:  			Return
  654:  		EndIf
  65C:  	Case  ==  .Event:RecoverStatus % 31
  668:  		SetConst  *Var0  00000001
  678:  		SetConst  *Var1  00920001
  688:  		ExecWait  DoRecover
  694:  	Case  ==  .Event:ScareAway % 39
  6A0:  		SetConst  *Var0  00000001
  6B0:  		SetConst  *Var1  00920001
  6C0:  		SetConst  *Var2  00920001
  6D0:  		ExecWait  DoScareAway
  6DC:  		Return
  6E4:  	Case  ==  .Event:BeginAirLift % 3A
  6F0:  		SetConst  *Var0  00000001
  700:  		SetConst  *Var1  00920001
  710:  		ExecWait  DoAirLift
  71C:  	Case  ==  .Event:BlowAway % 16
  728:  		SetConst  *Var0  00000001
  738:  		SetConst  *Var1  00920001
  748:  		ExecWait  DoBlowAway
  754:  		Return
  75C:  	Default
  764:  EndSwitch
  76C:  Call  EnableIdleScript  ( .Actor:Self 00000001 )
  780:  Call  UseIdleAnimation  ( .Actor:Self .True )
  794:  Return
  79C:  End
}

#new:Script $Script_TakeTurn_80220634
{
    0:  Call  RandInt   ( 00000064 *Var0 )
   14:  If  *Var0  <=  00000064
   24:  	ExecWait  $Script_80220764
   30:  	Return
   38:  EndIf
   40:  Return
   48:  End
}

#new:Script $Script_80220684
{
    0:  Call  SetActorVar       ( .Actor:Self 00000000 00000001 )
   18:  Call  PlaySoundAtActor  ( .Actor:Self 00002073 )
   2C:  Thread
   34:  	Wait  15`
   40:  	Call  SetAnimation      ( .Actor:Self 00000001 00920001 )
   58:  	Call  GetActorPos       ( .Actor:Self *Var0 *Var1 *Var2 )
   74:  	Add   *Var0  00000005
   84:  	Add   *Var1  00000014
   94:  	Add   *Var2  0000000A
   A4:  	Call  MakeItemEntity    ( .Item:WhackasBump *Var0 *Var1 *Var2 .ItemSpawnMode:Fall_SpawnAlways 00000000 )
   C8:  EndThread
   D0:  Return
   D8:  End
}

#new:Script $Script_80220764
{
    0:  Call  UseIdleAnimation  ( .Actor:Self .False )
   14:  Call  EnableIdleScript  ( .Actor:Self 00000000 )
   28:  Call  PlaySoundAtActor  ( .Actor:Self .Sound:MoleDig )
   3C:  Call  SetAnimation      ( .Actor:Self 00000001 00920003 )
   54:  Wait  40`
   60:  Call  GetActorVar       ( .Actor:Self 00000000 *Var0 )
   78:  If  *Var0  !=  00000000
   88:  	Call  SetBattleFlagBits2    ( 10000000 .True )
   9C:  EndIf
   A4:  Call  SetPartFlagBits   ( .Actor:Self 00000001 00020000 .True )
   C0:  Call  SetActorFlagBits  ( .Actor:Self 00600001 .True )
   D8:  Call  RemoveActor       ( .Actor:Self )
   E8:  Return
   F0:  End
}

PADDING: 8022085C to 80220860 (004D8A4C to 004D8A50)
00000000

#new:Script $Script_BeforeBattle_80220860
{
    0:  Call  SetSpriteShading  ( FFFFFFFF )
   10:  Call  SetGroupEnabled   ( ~Model:iwa_bt01:b 00000000 )
   24:  Return
   2C:  End
}

#new:Script $Script_AfterBattle_80220894
{
    0:  Return
    8:  End
}

#new:ForegroundModelList $ForegroundModelList_802208A4
{
	~Model:iwa_bt01:iwa1
	~Model:iwa_bt01:o331
	00000000
}

#new:Stage $Stage_802208B0
{
	$ASCII_8022237C  % iwa_tex
	$ASCII_8022236C  % iwa_bt01_shape
	$ASCII_8022235C  % iwa_bt01_hit
	$Script_BeforeBattle_80220860
	$Script_AfterBattle_80220894
	$ASCII_80222354  % iwa_bg
	$ForegroundModelList_802208A4
	00000001
	$SpecialFormation_802208E4
	00000200
}

#new:Vector3D $Vector3D_802208D8
{
	116` 0` -30`
}

#new:SpecialFormation $SpecialFormation_802208E4
{
	$WhackaB $Vector3D_802208D8 00000000 00000000 00000000 00000000 00000000
}

#new:IdleAnimations $IdleAnimations_80220900
{
	.Status:Normal    00920001
	.Status:Stone     00920000
	.Status:Sleep     00920001
	.Status:Poison    00920001
	.Status:Stop      00920000
	.Status:Static    00920001
	.Status:Paralyze  00920000
	.Status:Dizzy     00920001
	.Status:Fear      00920001
	.Status:End
}

#new:DefenseTable $DefenseTable_8022094C
{
	.Element:Normal 00000000
	.Element:End
}

#new:StatusTable $StatusTable_80220958
{
	.Status:Normal      0`
	.Status:Default     0`
	.Status:Sleep       0`
	.Status:Poison      0`
	.Status:Frozen      0`
	.Status:Dizzy       0`
	.Status:Fear        0`
	.Status:Static      0`
	.Status:Paralyze    0`
	.Status:Shrink      0`
	.Status:Stop        0`
	.Status:DefaultTurnMod    0`
	.Status:SleepTurnMod      0`
	.Status:PoisonTurnMod     0`
	.Status:FrozenTurnMod     0`
	.Status:DizzyTurnMod      0`
	.Status:FearTurnMod       0`
	.Status:StaticTurnMod     0`
	.Status:ParalyzeTurnMod   0`
	.Status:ShrinkTurnMod     0`
	.Status:StopTurnMod       0`
	.Status:End
}

#new:PartsTable $PartsTable_80220A04
{
	00800000 01000000 001E00FF $IdleAnimations_80220900 $DefenseTable_8022094C 00000000 00000000 00FB0000 00000000
}

#new:Actor $WhackaB
{
	% stats
	[Index]        D0b
	[Level]         0`b
	[MaxHP]        99`b
	[Coins]         0`b
	[Flags]       00040004
	[StatusTable] $StatusTable_80220958
	% ai
	[PartsCount]    1`s
	[PartsTable]  $PartsTable_80220A04
	[Script]      $Script_Init_80220A50
	% move effectiveness
	[Escape]        0`b
	[Item]          0`b
	[AirLift]       0`b
	[Hurricane]     0`b % Bow's "Spook" as well
	[UpAndAway]     0`b
	[PowerBounce]  50`b
	[SpinSmash]     4`b % weight (0-4)
	% ui positions
	[Size]         47`b  32`b % width height
	[HealthBar]     0`b   0`b % dx dy
	[StatusTurn]  -20`b  40`b % dx dy
	[StatusIcon]   10`b  30`b % dx dy
}

#new:Script $Script_Init_80220A50
{
    0:  Call  BindTakeTurn  ( .Actor:Self $Script_TakeTurn_802212E4 )
   14:  Call  BindIdle      ( .Actor:Self $Script_Idle_80220B0C )
   28:  Call  BindHandleEvent   ( .Actor:Self $Script_HandleEvent_80220B40 )
   3C:  Call  SetActorVar   ( .Actor:Self 00000000 00000000 )
   54:  Call  $Function_80218170 ( )
   60:  If  *Var0  ==  00000000
   70:  	Call  SetActorFlagBits  ( .Actor:Self 00600001 .True )
   88:  	Call  SetPartFlagBits   ( .Actor:Self 00000001 00020000 .True )
   A4:  EndIf
   AC:  Return
   B4:  End
}

#new:Script $Script_Idle_80220B0C
{
    0:  Label  0
    C:  Wait  1`
   18:  Goto  0
   24:  Return
   2C:  End
}

#new:Script $Script_HandleEvent_80220B40
{
    0:  Call  UseIdleAnimation  ( .Actor:Self .False )
   14:  Call  EnableIdleScript  ( .Actor:Self 00000000 )
   28:  Call  GetLastEvent      ( .Actor:Self *Var0 )
   3C:  Switch  *Var0
   48:  	Case  ==  .Event:HitCombo % 9
   54:  		Call  PlaySoundAtActor  ( .Actor:Self 00002073 )
   68:  		SetConst  *Var0  00000001
   78:  		SetConst  *Var1  00920001
   88:  		ExecWait  DoNormalHit
   94:  	Case  ==  .Event:Hit % A
   A0:  		SetConst  *Var0  00000001
   B0:  		SetConst  *Var1  00920004
   C0:  		ExecWait  $Script_80221334
   CC:  		ExecWait  DoNormalHit
   D8:  		Call  RandInt   ( 00000064 *Var0 )
   EC:  		If  *Var0  <=  00000064
   FC:  			ExecWait  $Script_80221414
  108:  			Return
  110:  		EndIf
  118:  	Case  ==  .Event:BurnHit % E
  124:  		SetConst  *Var0  00000001
  134:  		SetConst  *Var1  00920001
  144:  		SetConst  *Var2  00920001
  154:  		ExecWait  $Script_80221334
  160:  		ExecWait  DoNormalHit
  16C:  		Call  RandInt   ( 00000064 *Var0 )
  180:  		If  *Var0  <=  00000064
  190:  			ExecWait  $Script_80221414
  19C:  			Return
  1A4:  		EndIf
  1AC:  	Case  ==  .Event:BurnDeath % 24
  1B8:  		SetConst  *Var0  00000001
  1C8:  		SetConst  *Var1  00920001
  1D8:  		SetConst  *Var2  00920001
  1E8:  		ExecWait  $Script_80221334
  1F4:  		ExecWait  DoNormalHit
  200:  		If  00000064  >=  00000064
  210:  			ExecWait  $Script_80221414
  21C:  			Return
  224:  		Else
  22C:  			SetConst  *Var0  00000001
  23C:  			SetConst  *Var1  00920001
  24C:  			ExecWait  DoDeath
  258:  			Return
  260:  		EndIf
  268:  	Case  ==  .Event:SpinSmashHit % B
  274:  		SetConst  *Var0  00000001
  284:  		SetConst  *Var1  00920001
  294:  		ExecWait  DoSpinSmashHit
  2A0:  		Call  RandInt   ( 00000064 *Var0 )
  2B4:  		If  *Var0  <=  00000064
  2C4:  			ExecWait  $Script_80221414
  2D0:  			Return
  2D8:  		EndIf
  2E0:  	Case  ==  .Event:SpinSmashDeath % 21
  2EC:  		SetConst  *Var0  00000001
  2FC:  		SetConst  *Var1  00920001
  30C:  		ExecWait  DoSpinSmashHit
  318:  		If  00000064  >=  00000064
  328:  			ExecWait  $Script_80221414
  334:  			Return
  33C:  		Else
  344:  			SetConst  *Var0  00000001
  354:  			SetConst  *Var1  00920001
  364:  			ExecWait  DoDeath
  370:  			Return
  378:  		EndIf
  380:  	Case  ==  .Event:ShockHit % 2F
  38C:  		SetConst  *Var0  00000001
  39C:  		SetConst  *Var1  00920001
  3AC:  		ExecWait  DoShockHit
  3B8:  		SetConst  *Var0  00000001
  3C8:  		SetConst  *Var1  00920001
  3D8:  		ExecWait  DoJumpBack
  3E4:  		SetConst  *Var0  00000001
  3F4:  		SetConst  *Var1  00920001
  404:  		ExecWait  DoReturnHome
  410:  	Case  ==  .Event:ShockDeath % 26
  41C:  		SetConst  *Var0  00000001
  42C:  		SetConst  *Var1  00920001
  43C:  		ExecWait  DoShockHit
  448:  		SetConst  *Var0  00000001
  458:  		SetConst  *Var1  00920001
  468:  		ExecWait  DoDeath
  474:  		Return
  47C:  	Case  ==  00000017 % 17
  488:  		SetConst  *Var0  00000001
  498:  		SetConst  *Var1  00920001
  4A8:  		ExecWait  DoImmune
  4B4:  	Case  ==  .Event:Immune % 19
  4C0:  		SetConst  *Var0  00000001
  4D0:  		SetConst  *Var1  00920001
  4E0:  		ExecWait  DoImmune
  4EC:  		Call  RandInt   ( 00000064 *Var0 )
  500:  		If  *Var0  <=  00000064
  510:  			ExecWait  $Script_80221414
  51C:  			Return
  524:  		EndIf
  52C:  	Case  ==  .Event:AirLiftFailed % 1F
  538:  		SetConst  *Var0  00000001
  548:  		SetConst  *Var1  00920001
  558:  		ExecWait  DoImmune
  564:  		Call  RandInt   ( 00000064 *Var0 )
  578:  		If  *Var0  <=  00000064
  588:  			ExecWait  $Script_80221414
  594:  			Return
  59C:  		EndIf
  5A4:  	Case  ==  .Event:Death % 20
  5B0:  		SetConst  *Var0  00000001
  5C0:  		SetConst  *Var1  00920004
  5D0:  		ExecWait  $Script_80221334
  5DC:  		ExecWait  DoNormalHit
  5E8:  		Wait  10`
  5F4:  		If  00000064  >=  00000064
  604:  			ExecWait  $Script_80221414
  610:  			Return
  618:  		Else
  620:  			SetConst  *Var0  00000001
  630:  			SetConst  *Var1  00920001
  640:  			ExecWait  DoDeath
  64C:  			Return
  654:  		EndIf
  65C:  	Case  ==  .Event:RecoverStatus % 31
  668:  		SetConst  *Var0  00000001
  678:  		SetConst  *Var1  00920001
  688:  		ExecWait  DoRecover
  694:  	Case  ==  .Event:ScareAway % 39
  6A0:  		SetConst  *Var0  00000001
  6B0:  		SetConst  *Var1  00920001
  6C0:  		SetConst  *Var2  00920001
  6D0:  		ExecWait  DoScareAway
  6DC:  		Return
  6E4:  	Case  ==  .Event:BeginAirLift % 3A
  6F0:  		SetConst  *Var0  00000001
  700:  		SetConst  *Var1  00920001
  710:  		ExecWait  DoAirLift
  71C:  	Case  ==  .Event:BlowAway % 16
  728:  		SetConst  *Var0  00000001
  738:  		SetConst  *Var1  00920001
  748:  		ExecWait  DoBlowAway
  754:  		Return
  75C:  	Default
  764:  EndSwitch
  76C:  Call  EnableIdleScript  ( .Actor:Self 00000001 )
  780:  Call  UseIdleAnimation  ( .Actor:Self .True )
  794:  Return
  79C:  End
}

#new:Script $Script_TakeTurn_802212E4
{
    0:  Call  RandInt   ( 00000064 *Var0 )
   14:  If  *Var0  <=  00000064
   24:  	ExecWait  $Script_80221414
   30:  	Return
   38:  EndIf
   40:  Return
   48:  End
}

#new:Script $Script_80221334
{
    0:  Call  SetActorVar       ( .Actor:Self 00000000 00000001 )
   18:  Call  PlaySoundAtActor  ( .Actor:Self 00002073 )
   2C:  Thread
   34:  	Wait  15`
   40:  	Call  SetAnimation      ( .Actor:Self 00000001 00920001 )
   58:  	Call  GetActorPos       ( .Actor:Self *Var0 *Var1 *Var2 )
   74:  	Add   *Var0  00000005
   84:  	Add   *Var1  00000014
   94:  	Add   *Var2  0000000A
   A4:  	Call  MakeItemEntity    ( .Item:WhackasBump *Var0 *Var1 *Var2 .ItemSpawnMode:Fall_SpawnAlways 00000000 )
   C8:  EndThread
   D0:  Return
   D8:  End
}

#new:Script $Script_80221414
{
    0:  Call  UseIdleAnimation  ( .Actor:Self .False )
   14:  Call  EnableIdleScript  ( .Actor:Self 00000000 )
   28:  Call  PlaySoundAtActor  ( .Actor:Self .Sound:MoleDig )
   3C:  Call  SetAnimation      ( .Actor:Self 00000001 00920003 )
   54:  Wait  40`
   60:  Call  GetActorVar       ( .Actor:Self 00000000 *Var0 )
   78:  If  *Var0  !=  00000000
   88:  	Call  SetBattleFlagBits2    ( 10000000 .True )
   9C:  EndIf
   A4:  Call  SetPartFlagBits   ( .Actor:Self 00000001 00020000 .True )
   C0:  Call  SetActorFlagBits  ( .Actor:Self 00600001 .True )
   D8:  Call  RemoveActor       ( .Actor:Self )
   E8:  Return
   F0:  End
}

PADDING: 8022150C to 80221510 (004D96FC to 004D9700)
00000000

#new:Script $Script_BeforeBattle_80221510
{
    0:  Call  SetSpriteShading  ( FFFFFFFF )
   10:  Call  SetGroupEnabled   ( ~Model:iwa_bt01:a 00000000 )
   24:  Return
   2C:  End
}

#new:Script $Script_AfterBattle_80221544
{
    0:  Return
    8:  End
}

#new:ForegroundModelList $ForegroundModelList_80221554
{
	~Model:iwa_bt01:iwa1
	~Model:iwa_bt01:o331
	00000000
}

#new:Stage $Stage_80221560
{
	$ASCII_802223AC  % iwa_tex
	$ASCII_8022239C  % iwa_bt01_shape
	$ASCII_8022238C  % iwa_bt01_hit
	$Script_BeforeBattle_80221510
	$Script_AfterBattle_80221544
	$ASCII_80222384  % iwa_bg
	$ForegroundModelList_80221554
	00000000
	00000000
	00000000
}

PADDING: 80221588 to 80221590 (004D9778 to 004D9780)
00000000 00000000

#new:Script $Script_BeforeBattle_80221590
{
    0:  Call  SetSpriteShading  ( FFFFFFFF )
   10:  Return
   18:  End
}

#new:Script $Script_AfterBattle_802215B0
{
    0:  Return
    8:  End
}

#new:ForegroundModelList $ForegroundModelList_802215C0
{
	~Model:iwa_bt02:o331
	~Model:iwa_bt02:iwa1
	00000000
}

#new:Stage $Stage_802215CC
{
	$ASCII_802223DC  % iwa_tex
	$ASCII_802223CC  % iwa_bt02_shape
	$ASCII_802223BC  % iwa_bt02_hit
	$Script_BeforeBattle_80221590
	$Script_AfterBattle_802215B0
	$ASCII_802223B4  % iwa_bg
	$ForegroundModelList_802215C0
	00000000
	00000000
	00000000
}

#new:Unknown $???_802215F4
{
	00000000 00000000 00000000 $WhackaC $???_802215F4 00000000 00000000 00000000
	00000000 00000000
}

#new:IdleAnimations $IdleAnimations_8022161C
{
	.Status:Normal    00920001
	.Status:Stone     00920000
	.Status:Sleep     00920001
	.Status:Poison    00920001
	.Status:Stop      00920000
	.Status:Static    00920001
	.Status:Paralyze  00920000
	.Status:Dizzy     00920001
	.Status:Fear      00920001
	.Status:End
}

#new:DefenseTable $DefenseTable_80221668
{
	.Element:Normal 00000000
	.Element:End
}

#new:StatusTable $StatusTable_80221674
{
	.Status:Normal      0`
	.Status:Default     0`
	.Status:Sleep       0`
	.Status:Poison      0`
	.Status:Frozen      0`
	.Status:Dizzy       0`
	.Status:Fear        0`
	.Status:Static      0`
	.Status:Paralyze    0`
	.Status:Shrink      0`
	.Status:Stop        0`
	.Status:DefaultTurnMod    0`
	.Status:SleepTurnMod      0`
	.Status:PoisonTurnMod     0`
	.Status:FrozenTurnMod     0`
	.Status:DizzyTurnMod      0`
	.Status:FearTurnMod       0`
	.Status:StaticTurnMod     0`
	.Status:ParalyzeTurnMod   0`
	.Status:ShrinkTurnMod     0`
	.Status:StopTurnMod       0`
	.Status:End
}

#new:PartsTable $PartsTable_80221720
{
	00800000 01000000 001E00FF $IdleAnimations_8022161C $DefenseTable_80221668 00000000 00000000 00FB0000 00000000
}

#new:Actor $WhackaC
{
	% stats
	[Index]        D0b
	[Level]         0`b
	[MaxHP]        99`b
	[Coins]         0`b
	[Flags]       00040004
	[StatusTable] $StatusTable_80221674
	% ai
	[PartsCount]    1`s
	[PartsTable]  $PartsTable_80221720
	[Script]      $Script_Init_8022176C
	% move effectiveness
	[Escape]        0`b
	[Item]          0`b
	[AirLift]       0`b
	[Hurricane]     0`b % Bow's "Spook" as well
	[UpAndAway]     0`b
	[PowerBounce]  50`b
	[SpinSmash]     4`b % weight (0-4)
	% ui positions
	[Size]         47`b  32`b % width height
	[HealthBar]     0`b   0`b % dx dy
	[StatusTurn]  -20`b  40`b % dx dy
	[StatusIcon]   10`b  30`b % dx dy
}

#new:Script $Script_Init_8022176C
{
    0:  Call  BindTakeTurn  ( .Actor:Self $Script_TakeTurn_80222000 )
   14:  Call  BindIdle      ( .Actor:Self $Script_Idle_80221828 )
   28:  Call  BindHandleEvent   ( .Actor:Self $Script_HandleEvent_8022185C )
   3C:  Call  SetActorVar   ( .Actor:Self 00000000 00000000 )
   54:  Call  $Function_802181C0 ( )
   60:  If  *Var0  ==  00000000
   70:  	Call  SetActorFlagBits  ( .Actor:Self 00600001 .True )
   88:  	Call  SetPartFlagBits   ( .Actor:Self 00000001 00020000 .True )
   A4:  EndIf
   AC:  Return
   B4:  End
}

#new:Script $Script_Idle_80221828
{
    0:  Label  0
    C:  Wait  1`
   18:  Goto  0
   24:  Return
   2C:  End
}

#new:Script $Script_HandleEvent_8022185C
{
    0:  Call  UseIdleAnimation  ( .Actor:Self .False )
   14:  Call  EnableIdleScript  ( .Actor:Self 00000000 )
   28:  Call  GetLastEvent      ( .Actor:Self *Var0 )
   3C:  Switch  *Var0
   48:  	Case  ==  .Event:HitCombo % 9
   54:  		Call  PlaySoundAtActor  ( .Actor:Self 00002073 )
   68:  		SetConst  *Var0  00000001
   78:  		SetConst  *Var1  00920001
   88:  		ExecWait  DoNormalHit
   94:  	Case  ==  .Event:Hit % A
   A0:  		SetConst  *Var0  00000001
   B0:  		SetConst  *Var1  00920004
   C0:  		ExecWait  $Script_80222050
   CC:  		ExecWait  DoNormalHit
   D8:  		Call  RandInt   ( 00000064 *Var0 )
   EC:  		If  *Var0  <=  00000064
   FC:  			ExecWait  $Script_80222130
  108:  			Return
  110:  		EndIf
  118:  	Case  ==  .Event:BurnHit % E
  124:  		SetConst  *Var0  00000001
  134:  		SetConst  *Var1  00920001
  144:  		SetConst  *Var2  00920001
  154:  		ExecWait  $Script_80222050
  160:  		ExecWait  DoNormalHit
  16C:  		Call  RandInt   ( 00000064 *Var0 )
  180:  		If  *Var0  <=  00000064
  190:  			ExecWait  $Script_80222130
  19C:  			Return
  1A4:  		EndIf
  1AC:  	Case  ==  .Event:BurnDeath % 24
  1B8:  		SetConst  *Var0  00000001
  1C8:  		SetConst  *Var1  00920001
  1D8:  		SetConst  *Var2  00920001
  1E8:  		ExecWait  $Script_80222050
  1F4:  		ExecWait  DoNormalHit
  200:  		If  00000064  >=  00000064
  210:  			ExecWait  $Script_80222130
  21C:  			Return
  224:  		Else
  22C:  			SetConst  *Var0  00000001
  23C:  			SetConst  *Var1  00920001
  24C:  			ExecWait  DoDeath
  258:  			Return
  260:  		EndIf
  268:  	Case  ==  .Event:SpinSmashHit % B
  274:  		SetConst  *Var0  00000001
  284:  		SetConst  *Var1  00920001
  294:  		ExecWait  DoSpinSmashHit
  2A0:  		Call  RandInt   ( 00000064 *Var0 )
  2B4:  		If  *Var0  <=  00000064
  2C4:  			ExecWait  $Script_80222130
  2D0:  			Return
  2D8:  		EndIf
  2E0:  	Case  ==  .Event:SpinSmashDeath % 21
  2EC:  		SetConst  *Var0  00000001
  2FC:  		SetConst  *Var1  00920001
  30C:  		ExecWait  DoSpinSmashHit
  318:  		If  00000064  >=  00000064
  328:  			ExecWait  $Script_80222130
  334:  			Return
  33C:  		Else
  344:  			SetConst  *Var0  00000001
  354:  			SetConst  *Var1  00920001
  364:  			ExecWait  DoDeath
  370:  			Return
  378:  		EndIf
  380:  	Case  ==  .Event:ShockHit % 2F
  38C:  		SetConst  *Var0  00000001
  39C:  		SetConst  *Var1  00920001
  3AC:  		ExecWait  DoShockHit
  3B8:  		SetConst  *Var0  00000001
  3C8:  		SetConst  *Var1  00920001
  3D8:  		ExecWait  DoJumpBack
  3E4:  		SetConst  *Var0  00000001
  3F4:  		SetConst  *Var1  00920001
  404:  		ExecWait  DoReturnHome
  410:  	Case  ==  .Event:ShockDeath % 26
  41C:  		SetConst  *Var0  00000001
  42C:  		SetConst  *Var1  00920001
  43C:  		ExecWait  DoShockHit
  448:  		SetConst  *Var0  00000001
  458:  		SetConst  *Var1  00920001
  468:  		ExecWait  DoDeath
  474:  		Return
  47C:  	Case  ==  00000017 % 17
  488:  		SetConst  *Var0  00000001
  498:  		SetConst  *Var1  00920001
  4A8:  		ExecWait  DoImmune
  4B4:  	Case  ==  .Event:Immune % 19
  4C0:  		SetConst  *Var0  00000001
  4D0:  		SetConst  *Var1  00920001
  4E0:  		ExecWait  DoImmune
  4EC:  		Call  RandInt   ( 00000064 *Var0 )
  500:  		If  *Var0  <=  00000064
  510:  			ExecWait  $Script_80222130
  51C:  			Return
  524:  		EndIf
  52C:  	Case  ==  .Event:AirLiftFailed % 1F
  538:  		SetConst  *Var0  00000001
  548:  		SetConst  *Var1  00920001
  558:  		ExecWait  DoImmune
  564:  		Call  RandInt   ( 00000064 *Var0 )
  578:  		If  *Var0  <=  00000064
  588:  			ExecWait  $Script_80222130
  594:  			Return
  59C:  		EndIf
  5A4:  	Case  ==  .Event:Death % 20
  5B0:  		SetConst  *Var0  00000001
  5C0:  		SetConst  *Var1  00920004
  5D0:  		ExecWait  $Script_80222050
  5DC:  		ExecWait  DoNormalHit
  5E8:  		Wait  10`
  5F4:  		If  00000064  >=  00000064
  604:  			ExecWait  $Script_80222130
  610:  			Return
  618:  		Else
  620:  			SetConst  *Var0  00000001
  630:  			SetConst  *Var1  00920001
  640:  			ExecWait  DoDeath
  64C:  			Return
  654:  		EndIf
  65C:  	Case  ==  .Event:RecoverStatus % 31
  668:  		SetConst  *Var0  00000001
  678:  		SetConst  *Var1  00920001
  688:  		ExecWait  DoRecover
  694:  	Case  ==  .Event:ScareAway % 39
  6A0:  		SetConst  *Var0  00000001
  6B0:  		SetConst  *Var1  00920001
  6C0:  		SetConst  *Var2  00920001
  6D0:  		ExecWait  DoScareAway
  6DC:  		Return
  6E4:  	Case  ==  .Event:BeginAirLift % 3A
  6F0:  		SetConst  *Var0  00000001
  700:  		SetConst  *Var1  00920001
  710:  		ExecWait  DoAirLift
  71C:  	Case  ==  .Event:BlowAway % 16
  728:  		SetConst  *Var0  00000001
  738:  		SetConst  *Var1  00920001
  748:  		ExecWait  DoBlowAway
  754:  		Return
  75C:  	Default
  764:  EndSwitch
  76C:  Call  EnableIdleScript  ( .Actor:Self 00000001 )
  780:  Call  UseIdleAnimation  ( .Actor:Self .True )
  794:  Return
  79C:  End
}

#new:Script $Script_TakeTurn_80222000
{
    0:  Call  RandInt   ( 00000064 *Var0 )
   14:  If  *Var0  <=  00000064
   24:  	ExecWait  $Script_80222130
   30:  	Return
   38:  EndIf
   40:  Return
   48:  End
}

#new:Script $Script_80222050
{
    0:  Call  SetActorVar       ( .Actor:Self 00000000 00000001 )
   18:  Call  PlaySoundAtActor  ( .Actor:Self 00002073 )
   2C:  Thread
   34:  	Wait  15`
   40:  	Call  SetAnimation      ( .Actor:Self 00000001 00920001 )
   58:  	Call  GetActorPos       ( .Actor:Self *Var0 *Var1 *Var2 )
   74:  	Add   *Var0  00000005
   84:  	Add   *Var1  00000014
   94:  	Add   *Var2  0000000A
   A4:  	Call  MakeItemEntity    ( .Item:WhackasBump *Var0 *Var1 *Var2 .ItemSpawnMode:Fall_SpawnAlways 00000000 )
   C8:  EndThread
   D0:  Return
   D8:  End
}

#new:Script $Script_80222130
{
    0:  Call  UseIdleAnimation  ( .Actor:Self .False )
   14:  Call  EnableIdleScript  ( .Actor:Self 00000000 )
   28:  Call  PlaySoundAtActor  ( .Actor:Self .Sound:MoleDig )
   3C:  Call  SetAnimation      ( .Actor:Self 00000001 00920003 )
   54:  Wait  40`
   60:  Call  GetActorVar       ( .Actor:Self 00000000 *Var0 )
   78:  If  *Var0  !=  00000000
   88:  	Call  SetBattleFlagBits2    ( 10000000 .True )
   9C:  EndIf
   A4:  Call  SetPartFlagBits   ( .Actor:Self 00000001 00020000 .True )
   C0:  Call  SetActorFlagBits  ( .Actor:Self 00600001 .True )
   D8:  Call  RemoveActor       ( .Actor:Self )
   E8:  Return
   F0:  End
}

PADDING: 80222228 to 80222230 (004DA418 to 004DA420)
00000000 00000000

#new:SJIS $SJIS_80222230
{
	コブロン % koburon
}

#new:SJIS $SJIS_8022223C
{
	ゲーハー % ge-ha-
}

#new:SJIS $SJIS_80222248
{
	チョロプー,シンエモン,チョロプー % choropu-,shin'emon,choropu-
}

#new:SJIS $SJIS_8022226C
{
	チョロプーx２,シンエモン % choropu-x2,shin'emon
}

#new:SJIS $SJIS_80222288
{
	チョロプー,シンエモン % choropu-,shin'emon
}

#new:SJIS $SJIS_802222A0
{
	チョロプーx４ % choropu-x4
}

#new:SJIS $SJIS_802222B0
{
	チョロプーx３ % choropu-x3
}

#new:SJIS $SJIS_802222C0
{
	チョロプーx２ % choropu-x2
}

#new:SJIS $SJIS_802222D0
{
	チョロプー % choropu-
}

#new:SJIS $SJIS_802222DC
{
	シンエモン,チョロプーx２ % shin'emon,choropu-x2
}

#new:SJIS $SJIS_802222F8
{
	シンエモン,チョロプー % shin'emon,choropu-
}

#new:SJIS $SJIS_80222310
{
	シンエモンx３ % shin'emonx3
}

#new:SJIS $SJIS_80222320
{
	シンエモンx２ % shin'emonx2
}

#new:SJIS $SJIS_80222330
{
	シンエモン % shin'emon
}

#new:ASCII $ASCII_8022233C
{
	"iwa_02"
}

#new:ASCII $ASCII_80222344
{
	"iwa_01b"
}

#new:ASCII $ASCII_8022234C
{
	"iwa_01"
}

#new:ASCII $ASCII_80222354
{
	"iwa_bg"
}

#new:ASCII $ASCII_8022235C
{
	"iwa_bt01_hit"
}

#new:ASCII $ASCII_8022236C
{
	"iwa_bt01_shape"
}

#new:ASCII $ASCII_8022237C
{
	"iwa_tex"
}

#new:ASCII $ASCII_80222384
{
	"iwa_bg"
}

#new:ASCII $ASCII_8022238C
{
	"iwa_bt01_hit"
}

#new:ASCII $ASCII_8022239C
{
	"iwa_bt01_shape"
}

#new:ASCII $ASCII_802223AC
{
	"iwa_tex"
}

#new:ASCII $ASCII_802223B4
{
	"iwa_bg"
}

#new:ASCII $ASCII_802223BC
{
	"iwa_bt02_hit"
}

#new:ASCII $ASCII_802223CC
{
	"iwa_bt02_shape"
}

#new:ASCII $ASCII_802223DC
{
	"iwa_tex"
}

PADDING: 802223E4 to 802223F0 (004DA5D4 to 004DA5E0)
00000000 00000000 00000000

