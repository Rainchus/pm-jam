% Script File: 0A Area SBK.bscr
% Decoded from: 4DA5E0 to 4E2740 (0A Area SBK)

#new:Function $Function_80218000
{
    0:  ADDIU     SP, SP, FFD8
    4:  SW        S1, 14 (SP)
    8:  COPY      S1, A0
    C:  SW        RA, 20 (SP)
   10:  SW        S3, 1C (SP)
   14:  SW        S2, 18 (SP)
   18:  SW        S0, 10 (SP)
   1C:  LW        S0, C (S1)
   20:  LW        A1, 0 (S0)
   24:  JAL       ~Func:get_variable
   28:  ADDIU     S0, S0, 4
   2C:  LW        A1, 0 (S0)
   30:  ADDIU     S0, S0, 4
   34:  COPY      A0, S1
   38:  JAL       ~Func:get_variable
   3C:  COPY      S3, V0
   40:  LW        A1, 0 (S0)
   44:  ADDIU     S0, S0, 4
   48:  COPY      A0, S1
   4C:  JAL       ~Func:get_variable
   50:  COPY      S2, V0
   54:  COPY      A0, S1
   58:  LW        A1, 0 (S0)
   5C:  JAL       ~Func:get_variable
   60:  COPY      S0, V0
   64:  LW        A0, 148 (S1)
   68:  JAL       ~Func:get_actor
   6C:  COPY      S1, V0
   70:  COPY      V1, V0
   74:  LW        V0, 8 (V1)
   78:  LBU       V0, 24 (V0)
   7C:  LW        A0, 8 (V1)
   80:  SUBU      S3, S3, V0
   84:  SB        S3, 194 (V1)
   88:  LBU       V0, 25 (A0)
   8C:  SUBU      S2, S2, V0
   90:  SB        S2, 195 (V1)
   94:  LBU       V0, 26 (A0)
   98:  SUBU      S0, S0, V0
   9C:  SB        S0, 196 (V1)
   A0:  LBU       A0, 27 (A0)
   A4:  SUBU      S1, S1, A0
   A8:  SB        S1, 197 (V1)
   AC:  LW        RA, 20 (SP)
   B0:  LW        S3, 1C (SP)
   B4:  LW        S2, 18 (SP)
   B8:  LW        S1, 14 (SP)
   BC:  LW        S0, 10 (SP)
   C0:  LI        V0, 2
   C4:  JR        RA
   C8:  ADDIU     SP, SP, 28
}

PADDING: 802180CC to 802180D0 (004DA6AC to 004DA6B0)
00000000

#new:Function $Function_802180D0
{
    0:  ADDIU     SP, SP, FF78
    4:  SW        S1, 54 (SP)
    8:  COPY      S1, A0
    C:  SW        RA, 60 (SP)
   10:  SW        S3, 5C (SP)
   14:  SW        S2, 58 (SP)
   18:  SW        S0, 50 (SP)
   1C:  SDC1      F26, 80 (SP)
   20:  SDC1      F24, 78 (SP)
   24:  SDC1      F22, 70 (SP)
   28:  SDC1      F20, 68 (SP)
   2C:  LW        S0, C (S1)
   30:  LW        A1, 0 (S0)
   34:  JAL       ~Func:get_variable
   38:  ADDIU     S0, S0, 4
   3C:  MTC1      V0, F20
   40:  NOP
   44:  CVT.D.W   F20, F20
   48:  LIF       F1, 2.5625
   50:  MTC1      R0, F0
   54:  LW        S2, 0 (S0)
   58:  ADDIU     S0, S0, 4
   5C:  DIV.D     F20, F20, F0
   60:  LIF       F0, 6.28318
   6C:  CVT.S.D   F20, F20
   70:  MUL.S     F20, F20, F0
   74:  NOP
   78:  LW        S3, 0 (S0)
   7C:  LW        S0, 4 (S0)
   80:  LIF       F0, 360.0
   88:  LIF       F24, 150.0
   90:  DIV.S     F20, F20, F0
   94:  JAL       ~Func:sin_rad
   98:  MOV.S     F12, F20
   9C:  MUL.S     F22, F0, F24
   A0:  NOP
   A4:  MTC1      R0, F26
   A8:  NOP
   AC:  ADD.S     F22, F22, F26
   B0:  JAL       ~Func:cos_rad
   B4:  MOV.S     F12, F20
   B8:  MUL.S     F20, F0, F24
   BC:  NOP
   C0:  LIF       F24, -252.0
   C8:  LWC1      F0, B8 (S1)
   CC:  CVT.S.W   F0, F0
   D0:  SUB.S     F24, F24, F0
   D4:  LWC1      F0, B0 (S1)
   D8:  CVT.S.W   F0, F0
   DC:  SUB.S     F22, F22, F0
   E0:  COPY      A0, S1
   E4:  COPY      A1, S2
   E8:  ADD.S     F20, F20, F26
   EC:  LWC1      F0, B4 (S1)
   F0:  CVT.S.W   F0, F0
   F4:  MFC1      A2, F22
   F8:  JAL       ~Func:set_float_variable
   FC:  SUB.S     F20, F20, F0
  100:  COPY      A0, S1
  104:  MFC1      A2, F20
  108:  JAL       ~Func:set_float_variable
  10C:  COPY      A1, S3
  110:  COPY      A0, S1
  114:  MFC1      A2, F24
  118:  JAL       ~Func:set_float_variable
  11C:  COPY      A1, S0
  120:  LW        RA, 60 (SP)
  124:  LW        S3, 5C (SP)
  128:  LW        S2, 58 (SP)
  12C:  LW        S1, 54 (SP)
  130:  LW        S0, 50 (SP)
  134:  LDC1      F26, 80 (SP)
  138:  LDC1      F24, 78 (SP)
  13C:  LDC1      F22, 70 (SP)
  140:  LDC1      F20, 68 (SP)
  144:  LI        V0, 2
  148:  JR        RA
  14C:  ADDIU     SP, SP, 88
}

#new:Function $Function_80218220
{
    0:  ADDIU     SP, SP, FFE8
    4:  SW        S0, 10 (SP)
    8:  COPY      S0, A0
    C:  SW        RA, 14 (SP)
   10:  JAL       ~Func:get_model_list_index_from_tree_index
   14:  LW        A0, AC (S0)
   18:  JAL       ~Func:get_model_from_list_index
   1C:  COPY      A0, V0
   20:  LWC1      F0, 98 (V0)
   24:  TRUNC.W.S F2, F0
   28:  SWC1      F2, B0 (S0)
   2C:  LWC1      F0, 9C (V0)
   30:  TRUNC.W.S F2, F0
   34:  SWC1      F2, B4 (S0)
   38:  LWC1      F0, A0 (V0)
   3C:  TRUNC.W.S F2, F0
   40:  SWC1      F2, B8 (S0)
   44:  LW        RA, 14 (SP)
   48:  LW        S0, 10 (SP)
   4C:  LI        V0, 2
   50:  JR        RA
   54:  ADDIU     SP, SP, 18
}

PADDING: 80218278 to 80218280 (004DA858 to 004DA860)
00000000 00000000

#new:DefenseTable $DefenseTable_80218280
{
	.Element:Normal 00000000
	.Element:End
}

#new:StatusTable $StatusTable_8021828C
{
	.Status:Normal      0`
	.Status:Default     0`
	.Status:Sleep      90`
	.Status:Poison      0`
	.Status:Frozen      0`
	.Status:Dizzy      90`
	.Status:Fear        0`
	.Status:Static      0`
	.Status:Paralyze  100`
	.Status:Shrink     90`
	.Status:Stop      100`
	.Status:DefaultTurnMod    0`
	.Status:SleepTurnMod      0`
	.Status:PoisonTurnMod     0`
	.Status:FrozenTurnMod     0`
	.Status:DizzyTurnMod      0`
	.Status:FearTurnMod       0`
	.Status:StaticTurnMod     0`
	.Status:ParalyzeTurnMod   0`
	.Status:ShrinkTurnMod     0`
	.Status:StopTurnMod       0`
	.Status:End
}

#new:PartsTable $PartsTable_80218338
{
	00020000 01000000 001400FF $IdleAnimations_80218438 $DefenseTable_80218280 00200010 00000000 00000000 00000000
	00800001 02000000 004800FF 00000000 $DefenseTable_80218280 00200010 00000000 00F80000 00000000
	00020001 03000000 003600FF 00000000 $DefenseTable_80218280 00200010 00000000 00F80000 00000000
	00020001 04000000 002400FF 00000000 $DefenseTable_80218280 00200010 00000000 00F80000 00000000
	00020001 05000000 001000FF 00000000 $DefenseTable_80218280 00200010 00000000 00F80000 00000000
	00120001 06000000 000000FF $IdleAnimations_80218528 $DefenseTable_80218280 00200010 00000000 00000000 00000000
}

#new:Actor $Pokey
{
	% stats
	[Index]        14b
	[Level]         9`b
	[MaxHP]         4`b
	[Coins]         1`b
	[Flags]       00000000
	[StatusTable] $StatusTable_8021828C
	% ai
	[PartsCount]    6`s
	[PartsTable]  $PartsTable_80218338
	[Script]      $Script_Init_80218534
	% move effectiveness
	[Escape]       70`b
	[Item]         70`b
	[AirLift]      90`b
	[Hurricane]    85`b % Bow's "Spook" as well
	[UpAndAway]    95`b
	[PowerBounce] 100`b
	[SpinSmash]     0`b % weight (0-4)
	% ui positions
	[Size]         24`b  80`b % width height
	[HealthBar]     0`b   0`b % dx dy
	[StatusTurn]  -15`b  75`b % dx dy
	[StatusIcon]   10`b  65`b % dx dy
}

#new:IdleAnimations $IdleAnimations_80218438
{
	.Status:Normal    00310004
	.Status:Stone     00310000
	.Status:Sleep     00310025
	.Status:Stop      00310000
	.Status:Paralyze  00310000
	.Status:Dizzy     00310021
	.Status:Fear      00310021
	.Status:End
}

#new:IdleAnimations $IdleAnimations_80218474
{
	.Status:Normal    00310005
	.Status:Stone     00310001
	.Status:Sleep     00310026
	.Status:Stop      00310001
	.Status:Paralyze  00310001
	.Status:Dizzy     00310022
	.Status:Fear      00310022
	.Status:End
}

#new:IdleAnimations $IdleAnimations_802184B0
{
	.Status:Normal    00310006
	.Status:Stone     00310002
	.Status:Sleep     00310027
	.Status:Stop      00310002
	.Status:Paralyze  00310002
	.Status:Dizzy     00310023
	.Status:Fear      00310023
	.Status:End
}

#new:IdleAnimations $IdleAnimations_802184EC
{
	.Status:Normal    00310007
	.Status:Stone     00310003
	.Status:Sleep     00310028
	.Status:Stop      00310003
	.Status:Paralyze  00310003
	.Status:Dizzy     00310024
	.Status:Fear      00310024
	.Status:End
}

#new:IdleAnimations $IdleAnimations_80218528
{
	.Status:Normal    00310016
	.Status:End
}

#new:Script $Script_Init_80218534
{
    0:  Call  BindTakeTurn  ( .Actor:Self $Script_TakeTurn_8021A018 )
   14:  Call  BindIdle      ( .Actor:Self $Script_Idle_802186B0 )
   28:  Call  BindHandleEvent   ( .Actor:Self $Script_HandleEvent_802186C0 )
   3C:  Call  SetActorVar   ( .Actor:Self 0000000A 00000000 )
   54:  Call  GetActorVar   ( .Actor:Self 00000001 *Var0 )
   6C:  Call  SetActorVar   ( .Actor:Self 00000009 *Var0 )
   84:  Call  SetActorVar   ( .Actor:Self 00000000 00000000 )
   9C:  Call  SetActorVar   ( .Actor:Self 00000001 00310004 )
   B4:  Call  SetActorVar   ( .Actor:Self 00000002 00310008 )
   CC:  Call  SetActorVar   ( .Actor:Self 00000003 0031000C )
   E4:  Call  SetActorVar   ( .Actor:Self 00000004 00310010 )
   FC:  Call  SetActorVar   ( .Actor:Self 00000005 00310011 )
  114:  Call  SetActorVar   ( .Actor:Self 00000006 00310018 )
  12C:  Call  SetActorVar   ( .Actor:Self 00000007 00310019 )
  144:  Call  EnableIdleScript  ( .Actor:Self 00000001 )
  158:  Call  UseIdleAnimation  ( .Actor:Self .True )
  16C:  Return
  174:  End
}

#new:Script $Script_Idle_802186B0
{
    0:  Return
    8:  End
}

#new:Script $Script_HandleEvent_802186C0
{
    0:  Call  UseIdleAnimation  ( .Actor:Self .False )
   14:  Call  EnableIdleScript  ( .Actor:Self 00000000 )
   28:  Call  GetLastEvent      ( .Actor:Self *Var0 )
   3C:  Switch  *Var0
   48:  	Case  ==  .Event:HitCombo % 9
   54:  		SetConst  *Var0  00000001
   64:  		Call  GetActorVar   ( .Actor:Self 00000003 *Var1 )
   7C:  		ExecWait  DoNormalHit
   88:  	Case  ==  .Event:Hit % A
   94:  		Call  GetStatusFlags    ( .Actor:Self *Var0 )
   A8:  		If  *Var0  &  ~Flags:StatusFlags:Shrink % 80000
   B8:  			SetConst  *Var0  00000001
   C8:  			Call  GetActorVar   ( .Actor:Self 00000003 *Var1 )
   E0:  			ExecWait  DoNormalHit
   EC:  		Else
   F4:  			Call  GetActorVar   ( .Actor:Self 00000000 *VarA )
  10C:  			If  *VarA  ==  00000003
  11C:  				SetConst  *Var0  00000001
  12C:  				Call  GetActorVar   ( .Actor:Self 00000003 *Var1 )
  144:  				ExecWait  DoNormalHit
  150:  			Else
  158:  				Call  80269E80  ( *Var0 )
  168:  				Switch  *Var0
  174:  					CaseOR  ==  00000006
  180:  					CaseOR  ==  00000007
  18C:  					CaseOR  ==  00000009
  198:  						ExecWait  $Script_8021CCAC
  1A4:  					EndCaseGroup
  1AC:  					Default
  1B4:  						SetConst  *Var0  00000001
  1C4:  						Call  GetActorVar   ( .Actor:Self 00000003 *Var1 )
  1DC:  						ExecWait  DoNormalHit
  1E8:  				EndSwitch
  1F0:  			EndIf
  1F8:  		EndIf
  200:  	Case  ==  .Event:Death % 20
  20C:  		Call  GetStatusFlags    ( .Actor:Self *Var0 )
  220:  		If  *Var0  &  ~Flags:StatusFlags:Shrink % 80000
  230:  			SetConst  *Var0  00000001
  240:  			Call  GetActorVar   ( .Actor:Self 00000003 *Var1 )
  258:  			ExecWait  DoNormalHit
  264:  			Wait  10`
  270:  		Else
  278:  			Call  GetActorVar   ( .Actor:Self 00000000 *VarA )
  290:  			If  *VarA  ==  00000003
  2A0:  				SetConst  *Var0  00000001
  2B0:  				Call  GetActorVar   ( .Actor:Self 00000003 *Var1 )
  2C8:  				ExecWait  DoNormalHit
  2D4:  				Wait  10`
  2E0:  			Else
  2E8:  				Call  80269E80  ( *Var0 )
  2F8:  				Switch  *Var0
  304:  					CaseOR  ==  00000006
  310:  					CaseOR  ==  00000007
  31C:  					CaseOR  ==  00000009
  328:  						ExecWait  $Script_8021CCAC
  334:  					EndCaseGroup
  33C:  					Default
  344:  						SetConst  *Var0  00000001
  354:  						Call  GetActorVar   ( .Actor:Self 00000003 *Var1 )
  36C:  						ExecWait  DoNormalHit
  378:  						Wait  10`
  384:  				EndSwitch
  38C:  			EndIf
  394:  		EndIf
  39C:  		SetConst  *Var0  00000001
  3AC:  		Call  GetActorVar   ( .Actor:Self 00000003 *Var1 )
  3C4:  		ExecWait  DoDeath
  3D0:  		Return
  3D8:  	Case  ==  .Event:BurnHit % E
  3E4:  		Call  GetActorVar       ( .Actor:Self 00000006 *Var1 )
  3FC:  		Call  GetActorVar       ( .Actor:Self 00000007 *Var2 )
  414:  		SetConst  *Var0  00000001
  424:  		Call  GetStatusFlags    ( .Actor:Self *Var3 )
  438:  		If  *Var3  &  ~Flags:StatusFlags:Shrink % 80000
  448:  			ExecWait  DoBurnHit
  454:  		Else
  45C:  			Call  GetActorVar   ( .Actor:Self 00000000 *VarA )
  474:  			If  *VarA  ==  00000003
  484:  				ExecWait  DoBurnHit
  490:  			Else
  498:  				Call  80269E80  ( *VarA )
  4A8:  				Switch  *VarA
  4B4:  					CaseOR  ==  00000006
  4C0:  					CaseOR  ==  00000007
  4CC:  					CaseOR  ==  00000009
  4D8:  						ExecWait  $Script_8021CCAC
  4E4:  					EndCaseGroup
  4EC:  					Default
  4F4:  						ExecWait  DoBurnHit
  500:  				EndSwitch
  508:  			EndIf
  510:  		EndIf
  518:  	CaseOR  ==  .Event:BurnDeath % 24
  524:  		Call  GetActorVar       ( .Actor:Self 00000006 *Var1 )
  53C:  		Call  GetActorVar       ( .Actor:Self 00000007 *Var2 )
  554:  		SetConst  *Var0  00000001
  564:  		Call  GetStatusFlags    ( .Actor:Self *Var3 )
  578:  		If  *Var3  &  ~Flags:StatusFlags:Shrink % 80000
  588:  			ExecWait  DoBurnHit
  594:  		Else
  59C:  			Call  GetActorVar   ( .Actor:Self 00000000 *VarA )
  5B4:  			If  *VarA  ==  00000003
  5C4:  				ExecWait  DoBurnHit
  5D0:  			Else
  5D8:  				Call  80269E80  ( *VarA )
  5E8:  				Switch  *VarA
  5F4:  					CaseOR  ==  00000006
  600:  					CaseOR  ==  00000007
  60C:  					CaseOR  ==  00000009
  618:  						ExecWait  $Script_8021CCAC
  624:  					EndCaseGroup
  62C:  					Default
  634:  						ExecWait  DoBurnHit
  640:  				EndSwitch
  648:  			EndIf
  650:  		EndIf
  658:  		SetConst  *Var0  00000001
  668:  		Call  GetActorVar   ( .Actor:Self 00000007 *Var1 )
  680:  		ExecWait  DoDeath
  68C:  		Return
  694:  	Case  ==  .Event:SpinSmashHit % B
  6A0:  		ExecWait  $Script_8021BF50
  6AC:  	Case  ==  .Event:SpinSmashDeath % 21
  6B8:  		ExecWait  $Script_8021BF50
  6C4:  		SetConst  *Var0  00000001
  6D4:  		Call  GetActorVar   ( .Actor:Self 00000003 *Var1 )
  6EC:  		ExecWait  DoDeath
  6F8:  		Return
  700:  	Case  ==  .Event:SpinSmashLaunchHit % 11
  70C:  		Call  GetStatusFlags    ( .Actor:Self *Var3 )
  720:  		If  *Var3  &  ~Flags:StatusFlags:Shrink % 80000
  730:  			SetConst  *Var0  00000001
  740:  			Call  GetActorVar   ( .Actor:Self 00000003 *Var1 )
  758:  			ExecWait  DoNormalHit
  764:  		Else
  76C:  			ExecWait  $Script_8021CCAC
  778:  		EndIf
  780:  	Case  ==  00000025 % 25
  78C:  		Call  GetStatusFlags    ( .Actor:Self *Var3 )
  7A0:  		If  *Var3  &  ~Flags:StatusFlags:Shrink % 80000
  7B0:  			SetConst  *Var0  00000001
  7C0:  			Call  GetActorVar   ( .Actor:Self 00000003 *Var1 )
  7D8:  			ExecWait  DoNormalHit
  7E4:  		Else
  7EC:  			ExecWait  $Script_8021CCAC
  7F8:  		EndIf
  800:  		SetConst  *Var0  00000001
  810:  		SetConst  *Var1  FFFFFFFF
  820:  		ExecWait  DoDeath
  82C:  		Return
  834:  	Case  ==  .Event:ShockHit % 2F
  840:  		Call  SetActorRotation      ( .Actor:Self 00000000 00000000 00000000 )
  85C:  		SetConst  *Var0  00000001
  86C:  		Call  GetActorVar   ( .Actor:Self 00000003 *Var1 )
  884:  		ExecWait  DoShockHit
  890:  		Call  GetActorVar   ( .Actor:Self 00000002 *Var1 )
  8A8:  		Call  SetAnimation  ( .Actor:Self 00000001 *Var1 )
  8C0:  		Call  SetGoalToHome ( .Actor:Self )
  8D0:  		Call  GetGoalPos    ( .Actor:Self *Var0 *Var1 *Var2 )
  8EC:  		Call  SetActorSpeed ( .Actor:Self *Fixed[4.0] )
  900:  		Call  SetActorJumpGravity   ( .Actor:Self *Fixed[2.0] )
  914:  		ExecWait  8029C12C
  920:  	Case  ==  .Event:ShockDeath % 26
  92C:  		Call  SetActorRotation  ( .Actor:Self 00000000 00000000 00000000 )
  948:  		SetConst  *Var0  00000001
  958:  		Call  GetActorVar       ( .Actor:Self 00000003 *Var1 )
  970:  		ExecWait  DoShockHit
  97C:  		SetConst  *Var0  00000001
  98C:  		Call  GetActorVar       ( .Actor:Self 00000003 *Var1 )
  9A4:  		ExecWait  DoDeath
  9B0:  		Return
  9B8:  	CaseOR  ==  00000017 % 17
  9C4:  	CaseOR  ==  .Event:Immune % 19
  9D0:  		SetConst  *Var0  00000001
  9E0:  		Call  GetActorVar   ( .Actor:Self 00000001 *Var1 )
  9F8:  		ExecWait  DoImmune
  A04:  	EndCaseGroup
  A0C:  	Case  ==  .Event:SpikeTaunt % 1B
  A18:  		Call  GetActorVar   ( .Actor:Self 00000000 *Var0 )
  A30:  		Switch  *Var0
  A3C:  			Case  ==  00000000
  A48:  				Set   *Var0  00000000
  A58:  				Set   *Var1  0000004D
  A68:  				SetConst  *Var2  00310021
  A78:  			Case  ==  00000001
  A84:  				Set   *Var0  00000000
  A94:  				Set   *Var1  0000003B
  AA4:  				SetConst  *Var2  00310022
  AB4:  			Case  ==  00000002
  AC0:  				Set   *Var0  00000000
  AD0:  				Set   *Var1  00000029
  AE0:  				SetConst  *Var2  00310023
  AF0:  			Case  ==  00000003
  AFC:  				Set   *Var0  00000000
  B0C:  				Set   *Var1  00000017
  B1C:  				SetConst  *Var2  00310024
  B2C:  		EndSwitch
  B34:  		Call  GetStatusFlags    ( .Actor:Self *Var3 )
  B48:  		If  *Var3  !&  ~Flags:StatusFlags:Sleep % 1000
  B58:  			Call  SetAnimation  ( .Actor:Self 00000001 *Var2 )
  B70:  		EndIf
  B78:  		Call  GetActorPos       ( .Actor:Self *Var3 *Var4 *Var5 )
  B94:  		Call  GetStatusFlags    ( .Actor:Self *Var6 )
  BA8:  		If  *Var6  &  ~Flags:StatusFlags:Shrink % 80000
  BB8:  			MulF  *Var0  *Fixed[0.4]
  BC8:  			MulF  *Var1  *Fixed[0.4]
  BD8:  		EndIf
  BE0:  		AddF  *Var3  *Var0
  BF0:  		AddF  *Var4  *Var1
  C00:  		Call  PlayEffect    ( ~FX:LensFlare:Rotating *Var3 *Var4 *Var5 00000014 00000000 00000000 00000000 00000000 00000000 00000000 00000000 00000000 )
  C44:  		Wait  30`
  C50:  	Case  ==  .Event:RecoverStatus % 31
  C5C:  		SetConst  *Var0  00000001
  C6C:  		Call  GetActorVar   ( .Actor:Self 00000001 *Var1 )
  C84:  		ExecWait  DoRecover
  C90:  	Case  ==  .Event:ScareAway % 39
  C9C:  		ExecWait  $Script_8021D184
  CA8:  		Return
  CB0:  	Default
  CB8:  EndSwitch
  CC0:  Call  EnableIdleScript  ( .Actor:Self 00000001 )
  CD4:  Call  UseIdleAnimation  ( .Actor:Self .True )
  CE8:  Return
  CF0:  End
}

#new:Script $Script_802193B8
{
    0:  Call  UseIdleAnimation  ( .Actor:Self .False )
   14:  Call  EnableIdleScript  ( .Actor:Self 00000000 )
   28:  Call  SetTargetActor    ( .Actor:Self .Actor:Player )
   3C:  Call  UseBattleCamPreset    ( 0000003F )
   4C:  Call  BattleCamTargetActor  ( .Actor:Self )
   5C:  Call  8024ECF8  ( FFFFFFFF 00000001 00000000 )
   74:  Call  SetGoalToTarget   ( .Actor:Self )
   84:  Call  GetActorVar       ( .Actor:Self 00000000 *Var0 )
   9C:  Switch  *Var0
   A8:  	Case  ==  00000000
   B4:  		Call  GetStatusFlags    ( .Actor:Self *Var0 )
   C8:  		If  *Var0  !&  ~Flags:StatusFlags:Shrink % 80000
   D8:  			Call  AddGoalPos    ( .Actor:Self  60`  0`  0` )
   F4:  		Else
   FC:  			Call  AddGoalPos    ( .Actor:Self  24`  0`  0` )
  118:  		EndIf
  120:  		Call  SetAnimation  ( .Actor:Self 00000001 00310008 )
  138:  		Call  SetActorSpeed ( .Actor:Self *Fixed[4.0] )
  14C:  		Call  RunToGoal     ( .Actor:Self  0` .False )
  164:  		Call  SetAnimation  ( .Actor:Self 00000001 00310004 )
  17C:  	Case  ==  00000001
  188:  		Call  GetStatusFlags    ( .Actor:Self *Var0 )
  19C:  		If  *Var0  !&  ~Flags:StatusFlags:Shrink % 80000
  1AC:  			Call  AddGoalPos    ( .Actor:Self  40`  0`  0` )
  1C8:  		Else
  1D0:  			Call  AddGoalPos    ( .Actor:Self  16`  0`  0` )
  1EC:  		EndIf
  1F4:  		Call  SetAnimation  ( .Actor:Self 00000001 00310009 )
  20C:  		Call  SetActorSpeed ( .Actor:Self *Fixed[4.0] )
  220:  		Call  RunToGoal     ( .Actor:Self  0` .False )
  238:  		Call  SetAnimation  ( .Actor:Self 00000001 00310005 )
  250:  	Case  ==  00000002
  25C:  		Call  GetStatusFlags    ( .Actor:Self *Var0 )
  270:  		If  *Var0  !&  ~Flags:StatusFlags:Shrink % 80000
  280:  			Call  AddGoalPos    ( .Actor:Self  20`  0`  0` )
  29C:  		Else
  2A4:  			Call  AddGoalPos    ( .Actor:Self  8`  0`  0` )
  2C0:  		EndIf
  2C8:  		Call  SetAnimation  ( .Actor:Self 00000001 0031000A )
  2E0:  		Call  SetActorSpeed ( .Actor:Self *Fixed[4.0] )
  2F4:  		Call  RunToGoal     ( .Actor:Self  0` .False )
  30C:  		Call  SetAnimation  ( .Actor:Self 00000001 00310006 )
  324:  EndSwitch
  32C:  Call  PlaySoundAtActor  ( .Actor:Self 00000342 )
  340:  Call  MakeLerp  ( 00000000 FFFFFFD8 00000014 .Easing:CosInOut )
  35C:  Label  0
  368:  Call  UpdateLerp ( )
  374:  Call  SetActorRotation  ( .Actor:Self 00000000 00000000 *Var0 )
  390:  Wait  1`
  39C:  If  *Var1  ==  00000001
  3AC:  	Goto  0
  3B8:  EndIf
  3C0:  ChildThread
  3C8:  	Wait  3`
  3D4:  	Call  PlaySoundAtActor  ( .Actor:Self 000002ED )
  3E8:  EndChildThread
  3F0:  Call  MakeLerp  ( FFFFFFD8 0000005A 00000005 .Easing:QuadraticIn )
  40C:  Label  3
  418:  Call  UpdateLerp ( )
  424:  Call  SetActorRotation  ( .Actor:Self 00000000 00000000 *Var0 )
  440:  Wait  1`
  44C:  If  *Var1  ==  00000001
  45C:  	Goto  3
  468:  EndIf
  470:  Call  EnemyTestTarget   ( .Actor:Self *Var0 ~Flags:DamageType:0 00000000 00000000 00000020 )
  494:  Switch  *Var0
  4A0:  	CaseOR  ==  .HitResult:Miss % 6
  4AC:  	CaseOR  ==  .HitResult:Lucky % 5
  4B8:  		Set   *VarA  *Var0
  4C8:  		Call  MakeLerp  ( 0000005A 00000000 00000005 .Easing:Linear )
  4E4:  		Label  4
  4F0:  		Call  UpdateLerp ( )
  4FC:  		Call  SetActorRotation  ( .Actor:Self 00000000 00000000 *Var0 )
  518:  		Wait  1`
  524:  		If  *Var1  ==  00000001
  534:  			Goto  4
  540:  		EndIf
  548:  		If  *VarA  ==  .HitResult:Lucky % 5
  558:  			Call  EnemyTestTarget   ( .Actor:Self *Var0 ~Flags:DamageType:TriggerLucky 00000000 00000000 00000000 )
  57C:  		EndIf
  584:  		Call  YieldTurn ( )
  590:  		Call  UseBattleCamPreset    ( 00000002 )
  5A0:  		Call  AddActorDecoration    ( .Actor:Self 00000001 00000000 .Decoration:Sweat )
  5BC:  		Call  GetActorVar   ( .Actor:Self 00000000 *Var0 )
  5D4:  		Switch  *Var0
  5E0:  			Case  ==  00000000
  5EC:  				Call  SetAnimation  ( .Actor:Self 00000001 00310008 )
  604:  				Call  SetActorSpeed ( .Actor:Self *Fixed[8.0] )
  618:  				Call  SetGoalToHome ( .Actor:Self )
  628:  				Call  RunToGoal     ( .Actor:Self  0` .False )
  640:  				Call  SetAnimation  ( .Actor:Self 00000001 00310004 )
  658:  			Case  ==  00000001
  664:  				Call  SetAnimation  ( .Actor:Self 00000001 00310009 )
  67C:  				Call  SetActorSpeed ( .Actor:Self *Fixed[8.0] )
  690:  				Call  SetGoalToHome ( .Actor:Self )
  6A0:  				Call  RunToGoal     ( .Actor:Self  0` .False )
  6B8:  				Call  SetAnimation  ( .Actor:Self 00000001 00310005 )
  6D0:  			Case  ==  00000002
  6DC:  				Call  SetAnimation  ( .Actor:Self 00000001 0031000A )
  6F4:  				Call  SetActorSpeed ( .Actor:Self *Fixed[8.0] )
  708:  				Call  SetGoalToHome ( .Actor:Self )
  718:  				Call  RunToGoal     ( .Actor:Self  0` .False )
  730:  				Call  SetAnimation  ( .Actor:Self 00000001 00310006 )
  748:  		EndSwitch
  750:  		Call  RemoveActorDecoration ( .Actor:Self 00000001 00000000 )
  768:  		Call  EnableIdleScript      ( .Actor:Self 00000001 )
  77C:  		Call  UseIdleAnimation      ( .Actor:Self .True )
  790:  		Return
  798:  EndSwitch
  7A0:  Call  GetActorVar   ( .Actor:Self 00000000 *Var0 )
  7B8:  Switch  *Var0
  7C4:  	Case  ==  00000000
  7D0:  		Set   *Var1  00000002
  7E0:  	Case  ==  00000001
  7EC:  		Set   *Var1  00000002
  7FC:  	Default
  804:  		Set   *Var1  00000002
  814:  EndSwitch
  81C:  Call  SetGoalToTarget   ( .Actor:Self )
  82C:  Wait  2`
  838:  Call  EnemyDamageTarget ( .Actor:Self *Var0 ~Flags:DamageType:0 00000000 ~DebuffType:Poison:3:0` *Var1 00000020 )
  860:  Switch  *Var0
  86C:  	CaseOR  ==  .HitResult:Hit % 0
  878:  	CaseOR  ==  .HitResult:QuakeImmune % 2
  884:  		Call  UseBattleCamPreset    ( 00000002 )
  894:  		Call  MakeLerp  ( 0000005A 00000000 0000000A .Easing:Linear )
  8B0:  		Label  5
  8BC:  		Call  UpdateLerp ( )
  8C8:  		Call  SetActorRotation      ( .Actor:Self 00000000 00000000 *Var0 )
  8E4:  		Wait  1`
  8F0:  		If  *Var1  ==  00000001
  900:  			Goto  5
  90C:  		EndIf
  914:  		Call  YieldTurn ( )
  920:  		Call  GetActorVar   ( .Actor:Self 00000000 *Var0 )
  938:  		Switch  *Var0
  944:  			Case  ==  00000000
  950:  				Call  SetAnimation  ( .Actor:Self 00000001 00310008 )
  968:  				Call  SetActorSpeed ( .Actor:Self *Fixed[8.0] )
  97C:  				Call  SetGoalToHome ( .Actor:Self )
  98C:  				Call  RunToGoal     ( .Actor:Self  0` .False )
  9A4:  				Call  SetAnimation  ( .Actor:Self 00000001 00310004 )
  9BC:  			Case  ==  00000001
  9C8:  				Call  SetAnimation  ( .Actor:Self 00000001 00310009 )
  9E0:  				Call  SetActorSpeed ( .Actor:Self *Fixed[8.0] )
  9F4:  				Call  SetGoalToHome ( .Actor:Self )
  A04:  				Call  RunToGoal     ( .Actor:Self  0` .False )
  A1C:  				Call  SetAnimation  ( .Actor:Self 00000001 00310005 )
  A34:  			Case  ==  00000002
  A40:  				Call  SetAnimation  ( .Actor:Self 00000001 0031000A )
  A58:  				Call  SetActorSpeed ( .Actor:Self *Fixed[8.0] )
  A6C:  				Call  SetGoalToHome ( .Actor:Self )
  A7C:  				Call  RunToGoal     ( .Actor:Self  0` .False )
  A94:  				Call  SetAnimation  ( .Actor:Self 00000001 00310006 )
  AAC:  		EndSwitch
  AB4:  	EndCaseGroup
  ABC:  EndSwitch
  AC4:  Call  EnableIdleScript  ( .Actor:Self 00000001 )
  AD8:  Call  UseIdleAnimation  ( .Actor:Self .True )
  AEC:  Return
  AF4:  End
}

#new:Script $Script_80219EB4
{
    0:  Set   *Var9  00000000
   10:  Call  EnemyCreateTargetList ( 00008002 )
   20:  Call  InitTargetIterator ( )
   2C:  Label  0
   38:  Call  GetOwnerTarget        ( *Var0 *Var1 )
   4C:  Call  GetOriginalActorType  ( *Var0 *Var2 )
   60:  Switch  *Var2
   6C:  	Case  ==  00000014
   78:  		Call  GetStatusFlags    ( *Var0 *Var3 )
   8C:  		If  *Var3  !&  ~Flags:StatusFlags:Sleep|Frozen|Fear|Paralyze|Dizzy|Shrink|Stone|Stop % 3DD000
   9C:  			Call  GetActorVar   ( .Actor:Self 00000000 *Var3 )
   B4:  			If  *Var3  ==  00000000
   C4:  				Call  GetActorVar   ( *Var0 0000000A *Var3 )
   DC:  				If  *Var3  !=  00000002
   EC:  					Add   *Var9  00000001
   FC:  				EndIf
  104:  			EndIf
  10C:  		EndIf
  114:  EndSwitch
  11C:  Call  ChooseNextTarget  ( .Iter:Next *Var0 )
  130:  If  *Var0  !=  FFFFFFFF
  140:  	Goto  0
  14C:  EndIf
  154:  Return
  15C:  End
}

#new:Script $Script_TakeTurn_8021A018
{
    0:  Call  GetActorVar   ( .Actor:Self 00000000 *VarA )
   18:  If  *VarA  ==  00000003
   28:  	ExecWait  $Script_8021B590
   34:  	Return
   3C:  EndIf
   44:  Call  GetActorVar   ( .Actor:Self 00000009 *Var0 )
   5C:  If  *Var0  ==  00000000
   6C:  	Call  GetActorVar   ( .Actor:Self 0000000A *Var0 )
   84:  	If  *Var0  ==  00000002
   94:  		Goto  7B
   A0:  	EndIf
   A8:  	ExecWait  $Script_8021AB44
   B4:  	If  *VarE  ==  FFFFFFFF
   C4:  		Goto  7B
   D0:  	EndIf
   D8:  	ExecWait  $Script_80219EB4
   E4:  	Switch  *Var9
   F0:  		Case  ==  00000001
   FC:  			Call  RandInt   ( 000003E8 *Var0 )
  110:  			If  *Var0  <  00000190
  120:  				ExecWait  $Script_8021AE2C
  12C:  				Return
  134:  			EndIf
  13C:  		Case  ==  00000002
  148:  			Call  RandInt   ( 000003E8 *Var0 )
  15C:  			If  *Var0  <  000000C8
  16C:  				ExecWait  $Script_8021AE2C
  178:  				Return
  180:  			EndIf
  188:  		Case  ==  00000003
  194:  			Call  RandInt   ( 000003E8 *Var0 )
  1A8:  			If  *Var0  <  00000064
  1B8:  				ExecWait  $Script_8021AE2C
  1C4:  				Return
  1CC:  			EndIf
  1D4:  	EndSwitch
  1DC:  EndIf
  1E4:  Label  7B
  1F0:  Call  RandInt   ( 000003E8 *Var0 )
  204:  If  *Var0  <  000001F4
  214:  	ExecWait  $Script_802193B8
  220:  	Return
  228:  EndIf
  230:  Call  UseIdleAnimation  ( .Actor:Self .False )
  244:  Call  EnableIdleScript  ( .Actor:Self 00000000 )
  258:  Call  GetBattlePhase    ( *Var0 )
  268:  If  *Var0  ==  00000001
  278:  	Call  UseBattleCamPreset    ( 00000002 )
  288:  	Call  MoveBattleCamOver     (  1` )
  298:  EndIf
  2A0:  Call  SetPartSounds     ( .Actor:Self 00000006 .ActorSound:Jump 00000000 00000000 )
  2C0:  Call  GetStatusFlags    ( .Actor:Self *Var0 )
  2D4:  If  *Var0  !&  ~Flags:StatusFlags:Shrink % 80000
  2E4:  	Call  SetPartScale  ( .Actor:Self 00000006 *Fixed[1.0] *Fixed[1.0] *Fixed[1.0] )
  304:  Else
  30C:  	Call  SetPartScale  ( .Actor:Self 00000006 *Fixed[0.4] *Fixed[0.4] *Fixed[1.0] )
  32C:  EndIf
  334:  ChildThread
  33C:  	Call  SetPartFlagBits   ( .Actor:Self 00000006 00000001 .False )
  358:  	Call  GetActorPos       ( .Actor:Self *Var0 *Var1 *Var2 )
  374:  	Call  SetPartPos        ( .Actor:Self 00000006 *Var0 *Var1 *Var2 )
  394:  	Call  SetPartJumpGravity    ( .Actor:Self 00000006 *Fixed[2.2] )
  3AC:  	Call  SetAnimation      ( .Actor:Self 00000006 00310016 )
  3C4:  	Call  GetStatusFlags    ( .Actor:Self *Var5 )
  3D8:  	Call  GetActorVar       ( .Actor:Self 00000000 *VarA )
  3F0:  	Switch  *VarA
  3FC:  		Case  ==  00000000
  408:  			If  *Var5  !&  ~Flags:StatusFlags:Shrink % 80000
  418:  				Add   *Var1  00000026
  428:  			Else
  430:  				Add   *Var1  0000000F
  440:  				Call  SetPartJumpGravity    ( .Actor:Self 00000006 *Fixed[1.2] )
  458:  			EndIf
  460:  			Call  JumpPartTo    ( .Actor:Self 00000006 *Var0 *Var1 *Var2  15` .True )
  488:  		Case  ==  00000001
  494:  			If  *Var5  !&  ~Flags:StatusFlags:Shrink % 80000
  4A4:  				Add   *Var1  00000014
  4B4:  			Else
  4BC:  				Add   *Var1  00000008
  4CC:  				Call  SetPartJumpGravity    ( .Actor:Self 00000006 *Fixed[1.2] )
  4E4:  			EndIf
  4EC:  			Call  JumpPartTo    ( .Actor:Self 00000006 *Var0 *Var1 *Var2  15` .True )
  514:  		Case  ==  00000002
  520:  			If  *Var5  !&  ~Flags:StatusFlags:Shrink % 80000
  530:  				Add   *Var1  00000008
  540:  			Else
  548:  				Add   *Var1  00000003
  558:  				Call  SetPartJumpGravity    ( .Actor:Self 00000006 *Fixed[1.2] )
  570:  			EndIf
  578:  			Call  JumpPartTo    ( .Actor:Self 00000006 *Var0 *Var1 *Var2  15` .True )
  5A0:  		Case  ==  00000003
  5AC:  	EndSwitch
  5B4:  EndChildThread
  5BC:  Call  PlaySoundAtActor  ( .Actor:Self 00000342 )
  5D0:  Call  GetActorVar       ( .Actor:Self 00000004 *Var1 )
  5E8:  Call  SetAnimation      ( .Actor:Self 00000001 *Var1 )
  600:  Wait  12`
  60C:  Call  GetActorVar       ( .Actor:Self 00000005 *Var1 )
  624:  Call  SetAnimation      ( .Actor:Self 00000001 *Var1 )
  63C:  Wait  1`
  648:  Call  PlaySoundAtActor  ( .Actor:Self 000002CE )
  65C:  Wait  3`
  668:  ExecWait  $Script_8021C07C
  674:  Call  SetTargetActor    ( .Actor:Self .Actor:Player )
  688:  Call  EnemyTestTarget   ( .Actor:Self *Var0 ~Flags:DamageType:NoContact 00000000 00000002 00000020 )
  6AC:  Switch  *Var0
  6B8:  	CaseOR  ==  .HitResult:Miss % 6
  6C4:  	CaseOR  ==  .HitResult:Lucky % 5
  6D0:  		If  *Var0  ==  .HitResult:Lucky % 5
  6E0:  			ChildThread
  6E8:  				Wait  5`
  6F4:  				Call  EnemyTestTarget   ( .Actor:Self *Var0 ~Flags:DamageType:TriggerLucky 00000000 00000000 00000000 )
  718:  			EndChildThread
  720:  		EndIf
  728:  		Call  SetTargetActor    ( .Actor:Self .Actor:Player )
  73C:  		Call  SetGoalToTarget   ( .Actor:Self )
  74C:  		Call  GetGoalPos        ( .Actor:Self *Var0 *Var1 *Var2 )
  768:  		Sub   *Var0  00000050
  778:  		Sub   *Var1  00000005
  788:  		Call  SetPartMoveSpeed  ( .Actor:Self 00000006 *Fixed[20.0] )
  7A0:  		Call  SetPartJumpGravity    ( .Actor:Self 00000006 *Fixed[0.1] )
  7B8:  		Call  SetAnimation      ( .Actor:Self 00000006 00310016 )
  7D0:  		Call  JumpPartTo        ( .Actor:Self 00000006 *Var0 *Var1 *Var2  0` .True )
  7F8:  		Call  SetPartFlagBits   ( .Actor:Self 00000006 00000001 .True )
  814:  		Call  GetActorVar       ( .Actor:Self 00000002 *Var1 )
  82C:  		Call  SetAnimation      ( .Actor:Self 00000001 *Var1 )
  844:  		Return
  84C:  	EndCaseGroup
  854:  EndSwitch
  85C:  Call  SetTargetActor    ( .Actor:Self .Actor:Player )
  870:  Call  SetGoalToTarget   ( .Actor:Self )
  880:  Call  GetGoalPos        ( .Actor:Self *Var0 *Var1 *Var2 )
  89C:  Call  SetPartMoveSpeed  ( .Actor:Self 00000006 *Fixed[20.0] )
  8B4:  Call  SetPartJumpGravity    ( .Actor:Self 00000006 *Fixed[0.1] )
  8CC:  Call  SetAnimation      ( .Actor:Self 00000006 00310016 )
  8E4:  Call  JumpPartTo        ( .Actor:Self 00000006 *Var0 *Var1 *Var2  0` .True )
  90C:  Call  EnemyDamageTarget ( .Actor:Self *Var0 ~Flags:DamageType:NoContact 00000000 ~DebuffType:Poison:3:0` 00000002 00000020 )
  934:  Call  GetActorVar       ( .Actor:Self 00000002 *Var1 )
  94C:  Call  SetAnimation      ( .Actor:Self 00000001 *Var1 )
  964:  Switch  *Var0
  970:  	CaseOR  ==  .HitResult:Hit % 0
  97C:  	CaseOR  ==  .HitResult:QuakeImmune % 2
  988:  		Call  GetActorPos       ( .Actor:Player *Var0 *Var1 *Var2 )
  9A4:  		Sub   *Var0  00000037
  9B4:  		Set   *Var1  00000000
  9C4:  		Call  SetPartMoveSpeed  ( .Actor:Self 00000006 *Fixed[6.0] )
  9DC:  		Call  SetPartJumpGravity    ( .Actor:Self 00000006 *Fixed[0.1] )
  9F4:  		Call  FlyPartTo ( .Actor:Self 00000006 *Var0 *Var1 *Var2  0`  25` .Easing:Linear )
  A20:  		Call  SetPartMoveSpeed  ( .Actor:Self 00000006 *Fixed[4.0] )
  A38:  		Sub   *Var0  00000018
  A48:  		Call  FlyPartTo ( .Actor:Self 00000006 *Var0 *Var1 *Var2  0`  21` .Easing:Linear )
  A74:  		Call  SetPartMoveSpeed  ( .Actor:Self 00000006 *Fixed[3.0] )
  A8C:  		Sub   *Var0  00000014
  A9C:  		Call  FlyPartTo ( .Actor:Self 00000006 *Var0 *Var1 *Var2  0`  20` .Easing:Linear )
  AC8:  		Call  SetPartFlagBits   ( .Actor:Self 00000006 00000001 .True )
  AE4:  	EndCaseGroup
  AEC:  EndSwitch
  AF4:  Call  EnableIdleScript  ( .Actor:Self 00000001 )
  B08:  Call  UseIdleAnimation  ( .Actor:Self .True )
  B1C:  Return
  B24:  End
}

#new:Script $Script_8021AB44
{
    0:  Set   *VarE  FFFFFFFF
   10:  Call  GetStatusFlags    ( .Actor:Self *Var0 )
   24:  If  *Var0  &  ~Flags:StatusFlags:Shrink % 80000
   34:  	Return
   3C:  EndIf
   44:  Call  GetActorVar   ( .Actor:Self 00000000 *Var0 )
   5C:  If  *Var0  !=  00000000
   6C:  	Return
   74:  EndIf
   7C:  Set   *Flag[01]  .False
   8C:  Set   *Flag[02]  .False
   9C:  Set   *Flag[03]  .False
   AC:  Set   *Flag[04]  .False
   BC:  Call  EnemyCreateTargetList ( 00008002 )
   CC:  Call  InitTargetIterator ( )
   D8:  Label  0
   E4:  Call  GetOwnerTarget        ( *Var0 *Var5 )
   F8:  Call  GetIndexFromHome      ( *Var0 *Var5 )
  10C:  Mod   *Var5  00000004
  11C:  Switch  *Var5
  128:  	Case  ==  00000000
  134:  		Set   *Flag[01]  .True
  144:  	Case  ==  00000001
  150:  		Set   *Flag[02]  .True
  160:  	Case  ==  00000002
  16C:  		Set   *Flag[03]  .True
  17C:  	Case  ==  00000003
  188:  		Set   *Flag[04]  .True
  198:  EndSwitch
  1A0:  Call  ChooseNextTarget  ( .Iter:Next *Var0 )
  1B4:  If  *Var0  !=  FFFFFFFF
  1C4:  	Goto  0
  1D0:  EndIf
  1D8:  Call  GetIndexFromHome  ( .Actor:Self *Var1 )
  1EC:  Switch  *Var1
  1F8:  	Case  ==  00000000
  204:  		Return
  20C:  	Case  ==  00000001
  218:  		If  *Flag[01]  ==  .False
  228:  			Set   *VarE  00000000
  238:  		EndIf
  240:  	Case  ==  00000002
  24C:  		If  *Flag[02]  ==  .False
  25C:  			Set   *VarE  00000001
  26C:  		EndIf
  274:  	Case  ==  00000003
  280:  		If  *Flag[03]  ==  .False
  290:  			Set   *VarE  00000002
  2A0:  		EndIf
  2A8:  EndSwitch
  2B0:  Return
  2B8:  End
}

#new:Vector3D $Vector3D_8021AE04
{
	400` -100` 0`
}

#new:SpecialFormation $SpecialFormation_8021AE10
{
	$Pokey $Vector3D_8021AE04 00000064 00000000 00000000 00000000 00000000
}

#new:Script $Script_8021AE2C
{
    0:  Call  UseIdleAnimation  ( .Actor:Self .False )
   14:  Call  EnableIdleScript  ( .Actor:Self 00000000 )
   28:  Call  SetTargetActor    ( .Actor:Self .Actor:Player )
   3C:  Call  UseBattleCamPreset    ( 0000000E )
   4C:  Call  BattleCamTargetActor  ( .Actor:Self )
   5C:  Call  MoveBattleCamOver (  30` )
   6C:  Call  SetAnimation      ( .Actor:Self 00000001 00310004 )
   84:  Call  MakeLerp  ( 00000000 FFFFFFEC 00000014 .Easing:CosInOut )
   A0:  Label  0
   AC:  Call  UpdateLerp ( )
   B8:  Call  SetActorRotation  ( .Actor:Self 00000000 00000000 *Var0 )
   D4:  Wait  1`
   E0:  If  *Var1  ==  00000001
   F0:  	Goto  0
   FC:  EndIf
  104:  ChildThread
  10C:  	Wait  8`
  118:  	Call  PlaySoundAtActor  ( .Actor:Self 00000344 )
  12C:  EndChildThread
  134:  Call  MakeLerp  ( FFFFFFEC 0000001E 00000014 .Easing:CosInOut )
  150:  Label  1
  15C:  Call  UpdateLerp ( )
  168:  Call  SetActorRotation  ( .Actor:Self 00000000 00000000 *Var0 )
  184:  Wait  1`
  190:  If  *Var1  ==  00000001
  1A0:  	Goto  1
  1AC:  EndIf
  1B4:  ChildThread
  1BC:  	Wait  6`
  1C8:  	Call  PlaySoundAtActor  ( .Actor:Self 00000345 )
  1DC:  EndChildThread
  1E4:  Call  MakeLerp  ( 0000001E FFFFFFD8 00000014 .Easing:CosInOut )
  200:  Label  2
  20C:  Call  UpdateLerp ( )
  218:  Call  SetActorRotation  ( .Actor:Self 00000000 00000000 *Var0 )
  234:  Wait  1`
  240:  If  *Var1  ==  00000001
  250:  	Goto  2
  25C:  EndIf
  264:  ChildThread
  26C:  	Wait  4`
  278:  	Call  PlaySoundAtActor  ( .Actor:Self 000002EE )
  28C:  EndChildThread
  294:  Call  MakeLerp  ( FFFFFFD8 0000005A 0000000A .Easing:CosInOut )
  2B0:  Label  3
  2BC:  Call  UpdateLerp ( )
  2C8:  Call  SetActorRotation  ( .Actor:Self 00000000 00000000 *Var0 )
  2E4:  Wait  1`
  2F0:  If  *Var1  ==  00000001
  300:  	Goto  3
  30C:  EndIf
  314:  Wait  20`
  320:  Call  PlaySoundAtActor  ( .Actor:Self 00000346 )
  334:  Call  StartRumble       ( 00000009 )
  344:  Thread
  34C:  	Call  ShakeCam  ( .Cam:Battle 00000000  10` *Fixed[1.0] )
  368:  EndThread
  370:  Call  SummonEnemy   ( $SpecialFormation_8021AE10 00000000 )
  384:  Set   *VarB  *Var0
  394:  Call  GetActorPos   ( .Actor:Self *Var0 *Var1 *Var2 )
  3B0:  Sub   *Var0  00000028
  3C0:  Sub   *Var1  00000050
  3D0:  Call  SetActorPos   ( *VarB *Var0 *Var1 *Var2 )
  3EC:  ChildThread
  3F4:  	Call  PlayEffect    ( ~FX:ShockWave:Sand *Var0 00000000 *Var2 00000000 00000000 00000000 00000000 00000000 00000000 00000000 00000000 00000000 )
  438:  	Call  UseIdleAnimation      ( *VarB .False )
  44C:  	Call  SetAnimation  ( *VarB 00000001 0031000C )
  464:  	Call  GetActorPos   ( *VarB *Var0 *Var1 *Var2 )
  480:  	Call  SetActorJumpGravity   ( *VarB *Fixed[1.2] )
  494:  	Call  SetGoalPos    ( *VarB *Var0  0` *Var2 )
  4B0:  	Call  JumpToGoal    ( *VarB  20` .False .True .False )
  4D0:  	Wait  20`
  4DC:  	Call  GetActorPos   ( *VarB *Var0 *Var1 *Var2 )
  4F8:  	Call  SetAnimation  ( *VarB 00000001 00310004 )
  510:  	Call  SetHomePos    ( *VarB *Var0 *Var1 *Var2 )
  52C:  	Call  HPBarToHome   ( *VarB )
  53C:  	Call  UseIdleAnimation      ( *VarB .True )
  550:  EndChildThread
  558:  Call  GetActorVar   ( .Actor:Self 0000000A *Var1 )
  570:  Switch  *Var1
  57C:  	Case  ==  00000000
  588:  		Call  SetActorVar   ( *VarB 0000000A 00000001 )
  5A0:  	Case  ==  00000001
  5AC:  		Call  SetActorVar   ( *VarB 0000000A 00000002 )
  5C4:  EndSwitch
  5CC:  Call  UseBattleCamPreset    ( 00000002 )
  5DC:  Call  MoveBattleCamOver (  20` )
  5EC:  Set   *VarA  *Var0
  5FC:  Call  MakeLerp  ( 0000005A FFFFFFE2 00000007 .Easing:QuadraticOut )
  618:  Label  4
  624:  Call  UpdateLerp ( )
  630:  Call  SetActorRotation  ( .Actor:Self 00000000 00000000 *Var0 )
  64C:  Wait  1`
  658:  If  *Var1  ==  00000001
  668:  	Goto  4
  674:  EndIf
  67C:  Wait  20`
  688:  Call  MakeLerp  ( FFFFFFE2 00000000 0000000A .Easing:CosInOut )
  6A4:  Label  5
  6B0:  Call  UpdateLerp ( )
  6BC:  Call  SetActorRotation  ( .Actor:Self 00000000 00000000 *Var0 )
  6D8:  Wait  1`
  6E4:  If  *Var1  ==  00000001
  6F4:  	Goto  5
  700:  EndIf
  708:  Wait  20`
  714:  Call  SetAnimation      ( .Actor:Self 00000001 00310004 )
  72C:  Call  EnableIdleScript  ( .Actor:Self 00000001 )
  740:  Call  UseIdleAnimation  ( .Actor:Self .True )
  754:  Return
  75C:  End
}

#new:Script $Script_8021B590
{
    0:  Call  UseIdleAnimation  ( .Actor:Self .False )
   14:  Call  EnableIdleScript  ( .Actor:Self 00000000 )
   28:  Call  SetActorSounds    ( .Actor:Self .ActorSound:Walk 000002EC 000002EC )
   44:  Call  SetActorSounds    ( .Actor:Self .ActorSound:Jump 000002EC 00000000 )
   60:  Call  UseBattleCamPreset    ( 0000003F )
   70:  Call  BattleCamTargetActor  ( .Actor:Self )
   80:  Call  8024ECF8  ( FFFFFFFF 00000001 00000000 )
   98:  Call  SetTargetActor    ( .Actor:Self .Actor:Player )
   AC:  Call  SetGoalToTarget   ( .Actor:Self )
   BC:  Call  GetGoalPos        ( .Actor:Self *Var0 *Var1 *Var2 )
   D8:  Add   *Var0  00000032
   E8:  Set   *Var1  00000000
   F8:  Call  SetActorJumpGravity   ( .Actor:Self *Fixed[1.8] )
  10C:  Call  SetAnimation      ( .Actor:Self 00000001 0031000B )
  124:  Call  SetActorSpeed     ( .Actor:Self *Fixed[4.0] )
  138:  Call  SetActorJumpGravity   ( .Actor:Self *Fixed[2.0] )
  14C:  ExecWait  8029C12C
  158:  Call  SetAnimation      ( .Actor:Self 00000001 00310007 )
  170:  Wait  4`
  17C:  Call  SetActorDispOffset    ( .Actor:Self 00000000 FFFFFFFF 00000000 )
  198:  Wait  1`
  1A4:  Call  SetActorDispOffset    ( .Actor:Self 00000000 FFFFFFFE 00000000 )
  1C0:  Wait  4`
  1CC:  Call  SetActorDispOffset    ( .Actor:Self 00000000 00000000 00000000 )
  1E8:  Call  SetAnimation      ( .Actor:Self 00000001 0031000B )
  200:  Call  EnemyTestTarget   ( .Actor:Self *Var0 ~Flags:DamageType:0 00000000 00000002 00000010 )
  224:  Switch  *Var0
  230:  	CaseOR  ==  .HitResult:Miss % 6
  23C:  	CaseOR  ==  .HitResult:Lucky % 5
  248:  		Set   *VarA  *Var0
  258:  		Call  SetGoalToTarget   ( .Actor:Self )
  268:  		Call  GetGoalPos        ( .Actor:Self *Var0 *Var1 *Var2 )
  284:  		Sub   *Var0  00000005
  294:  		Set   *Var1  0000000A
  2A4:  		Call  SetGoalPos        ( .Actor:Self *Var0 *Var1 *Var2 )
  2C0:  		Call  SetActorJumpGravity   ( .Actor:Self *Fixed[1.1] )
  2D4:  		ChildThread
  2DC:  			Wait  2`
  2E8:  			Set   *Var0  00000000
  2F8:  			Loop  00000005
  304:  				Add   *Var0  0000001E
  314:  				Call  SetActorRotation  ( .Actor:Self 00000000 00000000 *Var0 )
  330:  				Wait  1`
  33C:  			EndLoop
  344:  		EndChildThread
  34C:  		Call  JumpToGoal    ( .Actor:Self  22` .False .True .False )
  36C:  		If  *VarA  ==  .HitResult:Lucky % 5
  37C:  			Call  EnemyTestTarget   ( .Actor:Self *Var0 ~Flags:DamageType:TriggerLucky 00000000 00000000 00000000 )
  3A0:  		EndIf
  3A8:  		Call  SetActorRotationOffset    ( .Actor:Self 00000000 0000000A 00000000 )
  3C4:  		ChildThread
  3CC:  			Wait  2`
  3D8:  			Set   *Var0  000000B4
  3E8:  			Loop  00000006
  3F4:  				Add   *Var0  0000001E
  404:  				If  *Var0  ==  00000168
  414:  					Set   *Var0  00000000
  424:  				EndIf
  42C:  				Call  SetActorRotation  ( .Actor:Self 00000000 00000000 *Var0 )
  448:  				Wait  1`
  454:  			EndLoop
  45C:  			Call  SetActorRotationOffset    ( .Actor:Self 00000000 00000000 00000000 )
  478:  		EndChildThread
  480:  		Call  SetActorJumpGravity   ( .Actor:Self *Fixed[2.0] )
  494:  		Call  GetActorPos   ( .Actor:Self *Var0 *Var1 *Var2 )
  4B0:  		Sub   *Var0  0000001E
  4C0:  		Set   *Var1  00000000
  4D0:  		Call  SetGoalPos    ( .Actor:Self *Var0 *Var1 *Var2 )
  4EC:  		Call  JumpToGoal    ( .Actor:Self  6` .False .True .False )
  50C:  		Wait  15`
  518:  		Call  UseBattleCamPreset    ( 00000002 )
  528:  		Call  YieldTurn ( )
  534:  		Call  AddActorDecoration    ( .Actor:Self 00000001 00000000 .Decoration:Sweat )
  550:  		Call  SetGoalToHome ( .Actor:Self )
  560:  		Call  GetGoalPos    ( .Actor:Self *Var0 *Var1 *Var2 )
  57C:  		Call  SetActorSpeed ( .Actor:Self *Fixed[4.0] )
  590:  		Call  SetAnimation  ( .Actor:Self 00000001 0031000B )
  5A8:  		Call  SetActorJumpGravity   ( .Actor:Self *Fixed[2.0] )
  5BC:  		ExecWait  8029C12C
  5C8:  		Call  RemoveActorDecoration ( .Actor:Self 00000001 00000000 )
  5E0:  		Call  SetAnimation  ( .Actor:Self 00000001 00310007 )
  5F8:  		Return
  600:  	EndCaseGroup
  608:  EndSwitch
  610:  Call  SetGoalToTarget       ( .Actor:Self )
  620:  Call  SetActorJumpGravity   ( .Actor:Self *Fixed[1.1] )
  634:  ChildThread
  63C:  	Wait  2`
  648:  	Set   *Var0  00000000
  658:  	Loop  00000005
  664:  		Add   *Var0  0000001E
  674:  		Call  SetActorRotation  ( .Actor:Self 00000000 00000000 *Var0 )
  690:  		Wait  1`
  69C:  	EndLoop
  6A4:  EndChildThread
  6AC:  Call  JumpToGoal        ( .Actor:Self  18` .False .True .False )
  6CC:  Wait  2`
  6D8:  Call  EnemyDamageTarget ( .Actor:Self *Var0 ~Flags:DamageType:0 00000000 ~DebuffType:Poison:3:0` 00000002 00000020 )
  700:  Call  SetAnimation      ( .Actor:Self 00000001 00310007 )
  718:  Switch  *Var0
  724:  	CaseOR  ==  .HitResult:Hit % 0
  730:  	CaseOR  ==  .HitResult:QuakeImmune % 2
  73C:  		Call  UseBattleCamPreset    ( 00000002 )
  74C:  		Call  SetActorRotation      ( .Actor:Self 00000000 00000000 00000000 )
  768:  		Call  SetActorDispOffset    ( .Actor:Self 00000000 00000000 00000000 )
  784:  		Call  GetGoalPos    ( .Actor:Self *Var0 *Var1 *Var2 )
  7A0:  		Add   *Var0  00000028
  7B0:  		Set   *Var1  00000000
  7C0:  		Call  SetActorJumpGravity   ( .Actor:Self *Fixed[1.8] )
  7D4:  		Call  SetGoalPos    ( .Actor:Self *Var0 *Var1 *Var2 )
  7F0:  		Call  JumpToGoal    ( .Actor:Self  10` .False .True .False )
  810:  		Add   *Var0  0000001E
  820:  		Call  SetGoalPos    ( .Actor:Self *Var0 *Var1 *Var2 )
  83C:  		Call  JumpToGoal    ( .Actor:Self  8` .False .True .False )
  85C:  		Add   *Var0  00000014
  86C:  		Call  SetGoalPos    ( .Actor:Self *Var0 *Var1 *Var2 )
  888:  		Call  JumpToGoal    ( .Actor:Self  6` .False .True .False )
  8A8:  		Sub   *Var0  0000000A
  8B8:  		Call  JumpToGoal    ( .Actor:Self  4` .False .True .False )
  8D8:  		Call  SetAnimation  ( .Actor:Self 00000001 00310007 )
  8F0:  		Call  SetGoalToHome ( .Actor:Self )
  900:  		Call  GetGoalPos    ( .Actor:Self *Var0 *Var1 *Var2 )
  91C:  		Call  SetActorSpeed ( .Actor:Self *Fixed[4.0] )
  930:  		Call  SetAnimation  ( .Actor:Self 00000001 0031000B )
  948:  		Call  SetActorJumpGravity   ( .Actor:Self *Fixed[2.0] )
  95C:  		ExecWait  8029C12C
  968:  		Call  SetAnimation  ( .Actor:Self 00000001 00310007 )
  980:  EndSwitch
  988:  Call  EnableIdleScript  ( .Actor:Self 00000001 )
  99C:  Call  UseIdleAnimation  ( .Actor:Self .True )
  9B0:  Return
  9B8:  End
}

#new:Script $Script_8021BF50
{
    0:  Call  GetStatusFlags    ( .Actor:Self *VarA )
   14:  If  *VarA  &  ~Flags:StatusFlags:Shrink % 80000
   24:  	SetConst  *Var0  00000001
   34:  	Call  GetActorVar   ( .Actor:Self 00000003 *Var1 )
   4C:  	ExecWait  DoSpinSmashHit
   58:  	Return
   60:  EndIf
   68:  Call  GetActorVar   ( .Actor:Self 00000000 *VarA )
   80:  Switch  *VarA
   8C:  	Case  ==  00000000
   98:  		ExecWait  $Script_8021C860
   A4:  	Case  ==  00000001
   B0:  		ExecWait  $Script_8021C860
   BC:  	Case  ==  00000002
   C8:  		ExecWait  $Script_8021C860
   D4:  	Case  ==  00000003
   E0:  		SetConst  *Var0  00000001
   F0:  		Call  GetActorVar   ( .Actor:Self 00000003 *Var1 )
  108:  		ExecWait  DoSpinSmashHit
  114:  EndSwitch
  11C:  Return
  124:  End
}

#new:Script $Script_8021C07C
{
    0:  Call  GetActorVar   ( .Actor:Self 00000000 *VarA )
   18:  Switch  *VarA
   24:  	Case  ==  00000000
   30:  		Call  SetActorVar   ( .Actor:Self 00000001 00310005 )
   48:  		Call  SetActorVar   ( .Actor:Self 00000002 00310009 )
   60:  		Call  SetActorVar   ( .Actor:Self 00000003 0031000D )
   78:  		Call  SetActorVar   ( .Actor:Self 00000004 00310012 )
   90:  		Call  SetActorVar   ( .Actor:Self 00000005 00310013 )
   A8:  		Call  SetActorVar   ( .Actor:Self 00000006 0031001A )
   C0:  		Call  SetActorVar   ( .Actor:Self 00000007 0031001B )
   D8:  		Call  SetIdleAnimations ( .Actor:Self 00000001 $IdleAnimations_80218474 )
   F0:  		Call  SetPartFlagBits   ( .Actor:Self 00000002 00800000 .False )
  10C:  		Call  SetPartFlagBits   ( .Actor:Self 00000002 00020000 .True )
  128:  		Call  SetPartFlagBits   ( .Actor:Self 00000003 00020000 .False )
  144:  		Call  SetPartFlagBits   ( .Actor:Self 00000003 00800000 .True )
  160:  		Call  SetActorVar   ( .Actor:Self 00000000 00000001 )
  178:  		Call  SetActorSize  ( .Actor:Self  62`  -250000000` )
  190:  		Call  SetPartSize   ( .Actor:Self 00000001  62`  -250000000` )
  1AC:  		Call  $Function_80218000    ( FFFFFFF1 00000037 0000000A 0000002D )
  1C8:  	Case  ==  00000001
  1D4:  		Call  SetActorVar   ( .Actor:Self 00000001 00310006 )
  1EC:  		Call  SetActorVar   ( .Actor:Self 00000002 0031000A )
  204:  		Call  SetActorVar   ( .Actor:Self 00000003 0031000E )
  21C:  		Call  SetActorVar   ( .Actor:Self 00000004 00310014 )
  234:  		Call  SetActorVar   ( .Actor:Self 00000005 00310015 )
  24C:  		Call  SetActorVar   ( .Actor:Self 00000006 0031001C )
  264:  		Call  SetActorVar   ( .Actor:Self 00000007 0031001D )
  27C:  		Call  SetIdleAnimations ( .Actor:Self 00000001 $IdleAnimations_802184B0 )
  294:  		Call  SetPartFlagBits   ( .Actor:Self 00000003 00800000 .False )
  2B0:  		Call  SetPartFlagBits   ( .Actor:Self 00000003 00020000 .True )
  2CC:  		Call  SetPartFlagBits   ( .Actor:Self 00000004 00020000 .False )
  2E8:  		Call  SetPartFlagBits   ( .Actor:Self 00000004 00800000 .True )
  304:  		Call  SetActorVar   ( .Actor:Self 00000000 00000002 )
  31C:  		Call  SetActorSize  ( .Actor:Self  44`  -250000000` )
  334:  		Call  SetPartSize   ( .Actor:Self 00000001  44`  -250000000` )
  350:  		Call  $Function_80218000    ( FFFFFFF1 00000023 0000000A 00000019 )
  36C:  	Case  ==  00000002
  378:  		Call  SetActorVar   ( .Actor:Self 00000001 00310007 )
  390:  		Call  SetActorVar   ( .Actor:Self 00000002 0031000B )
  3A8:  		Call  SetActorVar   ( .Actor:Self 00000003 0031000F )
  3C0:  		Call  SetActorVar   ( .Actor:Self 00000006 0031001E )
  3D8:  		Call  SetActorVar   ( .Actor:Self 00000007 0031001F )
  3F0:  		Call  SetIdleAnimations ( .Actor:Self 00000001 $IdleAnimations_802184EC )
  408:  		Call  SetPartFlagBits   ( .Actor:Self 00000004 00800000 .False )
  424:  		Call  SetPartFlagBits   ( .Actor:Self 00000004 00020000 .True )
  440:  		Call  SetPartFlagBits   ( .Actor:Self 00000005 00020000 .False )
  45C:  		Call  SetPartFlagBits   ( .Actor:Self 00000005 00800000 .True )
  478:  		Call  SetActorVar   ( .Actor:Self 00000000 00000003 )
  490:  		Call  SetActorSize  ( .Actor:Self  26`  -250000000` )
  4A8:  		Call  SetPartSize   ( .Actor:Self 00000001  26`  -250000000` )
  4C4:  		Call  $Function_80218000    ( FFFFFFF1 0000000F 0000000A 00000005 )
  4E0:  EndSwitch
  4E8:  Return
  4F0:  End
}

#new:Script $Script_8021C574
{
    0:  Call  GetActorPos   ( .Actor:Self *Var0 *Var1 *Var2 )
   1C:  Add   *Var1  00000012
   2C:  Call  SetActorPos   ( .Actor:Self *Var0 *Var1 *Var2 )
   48:  Call  GetActorPos   ( .Actor:Self *Var0 *Var1 *Var2 )
   64:  Set   *Var3  *Var1
   74:  Wait  2`
   80:  Sub   *Var3  00000001
   90:  Call  SetActorPos   ( .Actor:Self *Var0 *Var3 *Var2 )
   AC:  Wait  3`
   B8:  Sub   *Var3  00000002
   C8:  Call  SetActorPos   ( .Actor:Self *Var0 *Var3 *Var2 )
   E4:  Wait  2`
   F0:  Sub   *Var3  00000003
  100:  Call  SetActorPos   ( .Actor:Self *Var0 *Var3 *Var2 )
  11C:  Wait  1`
  128:  Sub   *Var3  00000005
  138:  Call  SetActorPos   ( .Actor:Self *Var0 *Var3 *Var2 )
  154:  Wait  1`
  160:  Sub   *Var3  00000007
  170:  Call  SetActorPos   ( .Actor:Self *Var0 *Var3 *Var2 )
  18C:  Wait  1`
  198:  Add   *Var3  00000002
  1A8:  Call  SetActorPos   ( .Actor:Self *Var0 *Var3 *Var2 )
  1C4:  Wait  1`
  1D0:  Add   *Var3  00000003
  1E0:  Call  SetActorPos   ( .Actor:Self *Var0 *Var3 *Var2 )
  1FC:  Wait  1`
  208:  Add   *Var3  00000003
  218:  Call  SetActorPos   ( .Actor:Self *Var0 *Var3 *Var2 )
  234:  Wait  1`
  240:  Sub   *Var3  00000003
  250:  Call  SetActorPos   ( .Actor:Self *Var0 *Var3 *Var2 )
  26C:  Wait  1`
  278:  Sub   *Var3  00000003
  288:  Call  SetActorPos   ( .Actor:Self *Var0 *Var3 *Var2 )
  2A4:  Wait  1`
  2B0:  Sub   *Var3  00000002
  2C0:  Call  SetActorPos   ( .Actor:Self *Var0 *Var3 *Var2 )
  2DC:  Return
  2E4:  End
}

#new:Script $Script_8021C860
{
    0:  Call  GetActorPos       ( .Actor:Self *Var0 *Var1 *Var2 )
   1C:  Call  SetPartPos        ( .Actor:Self 00000006 *Var0 *Var1 *Var2 )
   3C:  Call  SetPartFlagBits   ( .Actor:Self 00000006 00000001 .False )
   58:  Call  GetStatusFlags    ( .Actor:Self *Var0 )
   6C:  If  *Var0  !&  ~Flags:StatusFlags:Shrink % 80000
   7C:  	Call  SetPartScale  ( .Actor:Self 00000006 *Fixed[1.0] *Fixed[1.0] *Fixed[1.0] )
   9C:  Else
   A4:  	Call  SetPartScale  ( .Actor:Self 00000006 *Fixed[0.4] *Fixed[0.4] *Fixed[1.0] )
   C4:  EndIf
   CC:  ExecWait  $Script_8021C07C
   D8:  SetConst  *Var0  00000001
   E8:  Call  GetActorVar   ( .Actor:Self 00000003 *Var1 )
  100:  Call  SetAnimation  ( .Actor:Self *Var0 *Var1 )
  118:  ChildThread
  120:  	Wait  4`
  12C:  	ExecWait  $Script_8021C574
  138:  EndChildThread
  140:  Call  EnemyCreateTargetList ( 00018004 )
  150:  Call  InitTargetIterator ( )
  15C:  Label  0
  168:  Call  GetOwnerID    ( *Var1 )
  178:  Call  GetOwnerTarget        ( *Var0 *Var9 )
  18C:  If  *Var1  !=  *Var0
  19C:  	Call  ChooseNextTarget  ( .Iter:Next *Var0 )
  1B0:  	Goto  0
  1BC:  EndIf
  1C4:  Label  1
  1D0:  Add   *VarF  00000001
  1E0:  Call  ChooseNextTarget  ( .Iter:Next *Var0 )
  1F4:  If  *Var0  ==  FFFFFFFF
  204:  	Goto  A
  210:  EndIf
  218:  Call  GetOwnerTarget    ( *Var0 *Var9 )
  22C:  Call  GetActorFlags     ( *Var0 *Var1 )
  240:  If  *Var1  &  00004000
  250:  	Goto  1
  25C:  EndIf
  264:  Call  GetOwnerID        ( *Var0 )
  274:  Call  GetOwnerTarget    ( *Var0 *Var1 )
  288:  Call  SetGoalToTarget   ( .Actor:Self )
  298:  Call  GetGoalPos        ( .Actor:Self *Var0 *Var1 *Var2 )
  2B4:  Set   *Var1  00000000
  2C4:  Call  SetPartJumpGravity    ( .Actor:Self 00000006 *Fixed[0.1] )
  2DC:  Call  SetPartMoveSpeed  ( .Actor:Self 00000006 *Fixed[7.0] )
  2F4:  Call  JumpPartTo        ( .Actor:Self 00000006 *Var0 *Var1 *Var2  0` .True )
  31C:  ChildThread
  324:  	Call  ShakeCam  ( .Cam:Battle 00000000  2` *Fixed[1.0] )
  340:  EndChildThread
  348:  Call  SetGoalToTarget   ( .Actor:Self )
  358:  Call  GetOwnerTarget    ( *Var0 *Var1 )
  36C:  Call  DispatchDamageEvent   ( *Var0 00000001 .Event:SpinSmashLaunchHit )
  384:  Goto  1
  390:  Label  A
  39C:  Call  UseBattleCamPreset    ( 00000003 )
  3AC:  Call  SetPartJumpGravity    ( .Actor:Self 00000006 *Fixed[0.1] )
  3C4:  Call  SetPartMoveSpeed  ( .Actor:Self 00000006 *Fixed[6.0] )
  3DC:  Call  JumpPartTo        ( .Actor:Self 00000006  296`  0`  0`  0` .True )
  404:  Call  SetPartFlagBits   ( .Actor:Self 00000006 00020000 .True )
  420:  Call  SetPartFlagBits   ( .Actor:Self 00000006 00000001 .True )
  43C:  Return
  444:  End
}

#new:Script $Script_8021CCAC
{
    0:  Call  GetStatusFlags    ( .Actor:Self *Var0 )
   14:  If  *Var0  !&  ~Flags:StatusFlags:Shrink % 80000
   24:  	Call  SetPartScale  ( .Actor:Self 00000006 *Fixed[1.0] *Fixed[1.0] *Fixed[1.0] )
   44:  Else
   4C:  	Call  SetPartScale  ( .Actor:Self 00000006 *Fixed[0.4] *Fixed[0.4] *Fixed[1.0] )
   6C:  EndIf
   74:  ExecWait  $Script_8021C07C
   80:  SetConst  *Var0  00000001
   90:  Call  GetLastEvent  ( .Actor:Self *Var1 )
   A4:  Switch  *Var1
   B0:  	CaseOR  ==  .Event:BurnHit % E
   BC:  	CaseOR  ==  .Event:BurnDeath % 24
   C8:  		Call  SetAnimation  ( .Actor:Self 00000006 00310020 )
   E0:  		Call  GetActorVar   ( .Actor:Self 00000006 *Var1 )
   F8:  	EndCaseGroup
  100:  	Default
  108:  		Call  GetActorVar   ( .Actor:Self 00000003 *Var1 )
  120:  EndSwitch
  128:  Call  SetAnimation  ( .Actor:Self *Var0 *Var1 )
  140:  ChildThread
  148:  	Wait  4`
  154:  	ExecWait  $Script_8021C574
  160:  EndChildThread
  168:  Call  GetActorVar   ( .Actor:Self 00000000 *VarA )
  180:  If  *VarA  !=  00000003
  190:  	Call  GetActorPos   ( .Actor:Self *Var0 *Var1 *Var2 )
  1AC:  	Call  SetPartPos    ( .Actor:Self 00000006 *Var0 *Var1 *Var2 )
  1CC:  	Call  SetPartFlagBits   ( .Actor:Self 00000006 00000001 .False )
  1E8:  	Call  SetPartMoveSpeed  ( .Actor:Self 00000006 *Fixed[6.0] )
  200:  	Call  GetActorPos   ( .Actor:Self *Var0 *Var1 *Var2 )
  21C:  	Add   *Var0  0000001E
  22C:  	Set   *Var1  00000000
  23C:  	Call  FlyPartTo     ( .Actor:Self 00000006 *Var0 *Var1 *Var2  10`  18` .Easing:Linear )
  268:  	Add   *Var0  00000014
  278:  	Call  FlyPartTo     ( .Actor:Self 00000006 *Var0 *Var1 *Var2  8`  10` .Easing:Linear )
  2A4:  	Loop  00000014
  2B0:  		Call  SetPartFlagBits   ( .Actor:Self 00000006 00000001 .True )
  2CC:  		Wait  1`
  2D8:  		Call  SetPartFlagBits   ( .Actor:Self 00000006 00000001 .False )
  2F4:  		Wait  1`
  300:  	EndLoop
  308:  	Call  SetPartFlagBits   ( .Actor:Self 00000006 00020000 .True )
  324:  	Call  SetPartFlagBits   ( .Actor:Self 00000006 00000001 .True )
  340:  Else
  348:  	Wait  30`
  354:  EndIf
  35C:  Call  GetLastEvent  ( .Actor:Self *Var0 )
  370:  Switch  *Var0
  37C:  	Case  ==  .Event:BurnHit % E
  388:  		Call  GetActorVar   ( .Actor:Self 00000007 *Var1 )
  3A0:  		Call  SetAnimation  ( .Actor:Self 00000001 *Var1 )
  3B8:  		Call  GetActorPos   ( .Actor:Self *Var0 *Var1 *Var2 )
  3D4:  		Call  GetActorSize  ( .Actor:Self *Var3 *Var4 )
  3EC:  		Div   *Var3  00000002
  3FC:  		Add   *Var1  *Var3
  40C:  		Add   *Var2  00000005
  41C:  		DivF  *Var3  *Fixed[10.0]
  42C:  		Call  PlayEffect    ( ~FX:SmokeBurst:Black *Var0 *Var1 *Var2 *Var3 0000000A 00000000 00000000 00000000 00000000 00000000 00000000 00000000 )
  470:  	Case  ==  .Event:BurnDeath % 24
  47C:  		Call  GetActorVar   ( .Actor:Self 00000007 *Var1 )
  494:  		Call  SetAnimation  ( .Actor:Self 00000001 *Var1 )
  4AC:  		Wait  10`
  4B8:  	Default
  4C0:  EndSwitch
  4C8:  Return
  4D0:  End
}

#new:Script $Script_8021D184
{
    0:  SetConst  *Var0  00000001
   10:  Call  GetActorVar   ( .Actor:Self 00000003 *Var1 )
   28:  Call  UseBattleCamPreset    ( 00000002 )
   38:  Call  GetActorFlags ( .Actor:Self *Var9 )
   4C:  Call  SetActorJumpGravity   ( .Actor:Self *Fixed[0.05] )
   60:  Call  GetActorPos   ( .Actor:Self *VarA *VarB *VarC )
   7C:  Set   *VarD  *VarB
   8C:  Add   *VarD  00000028
   9C:  Call  SetGoalPos    ( .Actor:Self *VarA *VarD *VarC )
   B8:  Call  JumpToGoal    ( .Actor:Self  5` .False .True .False )
   D8:  Call  SetAnimation  ( .Actor:Self *Var0 *Var1 )
   F0:  Wait  20`
   FC:  Call  SetGoalPos    ( .Actor:Self *VarA *VarB *VarC )
  118:  Call  FallToGoal    ( .Actor:Self  10` )
  12C:  Wait  20`
  138:  Call  SetActorYaw   ( .Actor:Self  180` )
  14C:  Wait  5`
  158:  Call  SetActorVar   ( .Actor:Self 00000000 *Var2 )
  170:  Switch  *Var2
  17C:  	Case  ==  00000000
  188:  		Set   *Var2  00000060
  198:  		Set   *Var6  00000004
  1A8:  	Case  ==  00000001
  1B4:  		Set   *Var2  00000048
  1C4:  		Set   *Var6  00000003
  1D4:  	Case  ==  00000002
  1E0:  		Set   *Var2  00000030
  1F0:  		Set   *Var6  00000002
  200:  	Default
  208:  		Set   *Var2  00000018
  218:  		Set   *Var6  00000001
  228:  EndSwitch
  230:  ChildThread
  238:  	Call  GetActorPos   ( .Actor:Self *VarA *VarB *VarC )
  254:  	Loop  *Var6
  260:  		Call  PlayEffect    ( ~FX:ShockWave:Sand *VarA 00000000 *VarC 00000000 00000000 00000000 00000000 00000000 00000000 00000000 00000000 00000000 )
  2A4:  		Wait  10`
  2B0:  	EndLoop
  2B8:  EndChildThread
  2C0:  Call  SetActorSpeed ( .Actor:Self *Fixed[2.0] )
  2D4:  Call  GetActorPos   ( .Actor:Self *Var3 *Var4 *Var5 )
  2F0:  Sub   *Var4  *Var2
  300:  Call  SetGoalPos    ( .Actor:Self *Var3 *Var4 *Var5 )
  31C:  Call  FlyToGoal     ( .Actor:Self  0`  0` .Easing:Linear )
  338:  Wait  8`
  344:  Call  8027D32C      ( FFFFFF81 )
  354:  Call  UseIdleAnimation  ( .Actor:Self .False )
  368:  Call  RemoveActor   ( .Actor:Self )
  378:  Return
  380:  End
}

PADDING: 8021D50C to 8021D510 (004DFAEC to 004DFAF0)
00000000

#new:IdleAnimations $IdleAnimations_8021D510
{
	.Status:Normal    00320001
	.Status:Stone     00320000
	.Status:Sleep     00320010
	.Status:Poison    00320001
	.Status:Stop      00320000
	.Status:Static    00320001
	.Status:Paralyze  00320000
	.Status:Dizzy     00320011
	.Status:Fear      00320011
	.Status:End
}

#new:IdleAnimations $IdleAnimations_8021D55C
{
	.Status:Normal    00320002
	.Status:Stone     00320004
	.Status:Sleep     00320010
	.Status:Poison    00320002
	.Status:Stop      00320004
	.Status:Static    00320002
	.Status:Paralyze  00320004
	.Status:Dizzy     00320011
	.Status:Fear      00320011
	.Status:End
}

#new:IdleAnimations $IdleAnimations_8021D5A8
{
	.Status:Normal    00320014
	.Status:End
}

#new:DefenseTable $DefenseTable_8021D5B4
{
	.Element:Normal 00000000
	.Element:End
}

#new:StatusTable $StatusTable_8021D5C0
{
	.Status:Normal      0`
	.Status:Default     0`
	.Status:Sleep      70`
	.Status:Poison     20`
	.Status:Frozen    100`
	.Status:Dizzy      90`
	.Status:Fear       50`
	.Status:Static     30`
	.Status:Paralyze  100`
	.Status:Shrink     90`
	.Status:Stop      100`
	.Status:DefaultTurnMod    0`
	.Status:SleepTurnMod      0`
	.Status:PoisonTurnMod     0`
	.Status:FrozenTurnMod     0`
	.Status:DizzyTurnMod      0`
	.Status:FearTurnMod       0`
	.Status:StaticTurnMod     0`
	.Status:ParalyzeTurnMod   1`
	.Status:ShrinkTurnMod     0`
	.Status:StopTurnMod       0`
	.Status:End
}

#new:PartsTable $PartsTable_8021D66C
{
	00800000 01000000 FE1C00FF $IdleAnimations_8021D510 $DefenseTable_8021D5B4 00000000 00000000 00F40000 00000000
	00020001 02001E00 000000FF $IdleAnimations_8021D5A8 $DefenseTable_8021D5B4 00000000 00000000 00000000 00000000
}

#new:PartsTable $PartsTable_8021D6B4
{
	00020000 02000000 000000FF $IdleAnimations_8021D5A8 $DefenseTable_8021D5B4 00000000 00000000 00000000 00000000
}

#new:Actor $BanditA
{
	% stats
	[Index]        13b
	[Level]         9`b
	[MaxHP]         5`b
	[Coins]         1`b
	[Flags]       00000000
	[StatusTable] $StatusTable_8021D5C0
	% ai
	[PartsCount]    2`s
	[PartsTable]  $PartsTable_8021D66C
	[Script]      $Script_Init_8021D750
	% move effectiveness
	[Escape]       40`b
	[Item]         90`b
	[AirLift]      90`b
	[Hurricane]    90`b % Bow's "Spook" as well
	[UpAndAway]    95`b
	[PowerBounce]  80`b
	[SpinSmash]     0`b % weight (0-4)
	% ui positions
	[Size]         26`b  32`b % width height
	[HealthBar]     0`b   0`b % dx dy
	[StatusTurn]  -10`b  25`b % dx dy
	[StatusIcon]   10`b  25`b % dx dy
}

#new:Actor $BanditB
{
	% stats
	[Index]        13b
	[Level]         9`b
	[MaxHP]         5`b
	[Coins]         1`b
	[Flags]       00600000
	[StatusTable] $StatusTable_8021D5C0
	% ai
	[PartsCount]    1`s
	[PartsTable]  $PartsTable_8021D6B4
	[Script]      $Script_Init_8021D7C4
	% move effectiveness
	[Escape]       40`b
	[Item]         90`b
	[AirLift]      90`b
	[Hurricane]    90`b % Bow's "Spook" as well
	[UpAndAway]    95`b
	[PowerBounce]  80`b
	[SpinSmash]     0`b % weight (0-4)
	% ui positions
	[Size]         26`b  32`b % width height
	[HealthBar]     0`b   0`b % dx dy
	[StatusTurn]  -10`b  25`b % dx dy
	[StatusIcon]   10`b  25`b % dx dy
}

#new:Vector3D $Vector3D_8021D728
{
	0` -1000` 0`
}

#new:SpecialFormation $SpecialFormation_8021D734
{
	$BanditB $Vector3D_8021D728 00000000 00000000 00000000 00000000 00000000
}

#new:Script $Script_Init_8021D750
{
    0:  Call  BindTakeTurn  ( .Actor:Self $Script_TakeTurn_8021E900 )
   14:  Call  BindIdle      ( .Actor:Self $Script_Idle_8021D810 )
   28:  Call  BindHandleEvent   ( .Actor:Self $Script_HandleEvent_8021DF88 )
   3C:  Call  SetActorVar   ( .Actor:Self 00000000 00000000 )
   54:  Return
   5C:  End
}

#new:Script $Script_HandleEvent_8021D7B4
{
    0:  Return
    8:  End
}

#new:Script $Script_Init_8021D7C4
{
    0:  Call  BindTakeTurn      ( .Actor:Self $Script_HandleEvent_8021D7B4 )
   14:  Call  BindIdle  ( .Actor:Self $Script_HandleEvent_8021D7B4 )
   28:  Call  BindHandleEvent   ( .Actor:Self $Script_HandleEvent_8021D7B4 )
   3C:  Return
   44:  End
}

#new:Script $Script_Idle_8021D810
{
    0:  Return
    8:  End
}

#new:Script $Script_8021D820
{
    0:  Call  GetActorVar   ( .Actor:Self 00000000 *Var0 )
   18:  Switch  *Var0
   24:  	Case  ==  00000000
   30:  	Case  ==  00000001
   3C:  		Call  SetActorVar   ( .Actor:Self 00000000 00000000 )
   54:  		Call  SetIdleAnimations ( .Actor:Self 00000001 $IdleAnimations_8021D510 )
   6C:  		Call  SetPartFlagBits   ( .Actor:Self 00000002 00100000 .False )
   88:  		Call  SummonEnemy   ( $SpecialFormation_8021D734 00000000 )
   9C:  		Set   *VarA  *Var0
   AC:  		Call  GetPartOffset ( .Actor:Self 00000002 *Var1 *Var2 *Var3 )
   CC:  		Call  SetActorPos   ( *VarA *Var1 *Var2 *Var3 )
   E8:  		Call  SetPartFlagBits   ( .Actor:Self 00000002 00000001 .True )
  104:  		Call  GetActorVar   ( .Actor:Self 00000001 *Var0 )
  11C:  		Call  SetActorVar   ( *VarA 00000001 *Var0 )
  134:  		Call  SetActorJumpGravity   ( *VarA *Fixed[1.0] )
  148:  		Call  RandInt       ( 00000168 *Var0 )
  15C:  		Call  GetActorPos   ( .Actor:Self *Var1 *Var2 *Var3 )
  178:  		Add   *Var2  0000001E
  188:  		Call  SetActorPos   ( *VarA *Var1 *Var2 *Var3 )
  1A4:  		Call  SetActorSounds    ( *VarA .ActorSound:Jump 00000000 00000000 )
  1C0:  		Call  AddVectorPolar    ( *Var1 *Var3 *Fixed[40.0] *Var0 )
  1DC:  		Call  SetGoalPos    ( *VarA *Var1  0` *Var3 )
  1F8:  		Call  JumpToGoal    ( *VarA  20` .False .True .False )
  218:  		Call  PlaySoundAtActor  ( *VarA 00000212 )
  22C:  		Call  AddVectorPolar    ( *Var1 *Var3 *Fixed[20.0] *Var0 )
  248:  		Call  SetGoalPos    ( *VarA *Var1  0` *Var3 )
  264:  		Call  JumpToGoal    ( *VarA  10` .False .True .False )
  284:  		Call  PlaySoundAtActor  ( *VarA 00000212 )
  298:  		Call  AddVectorPolar    ( *Var1 *Var3 *Fixed[10.0] *Var0 )
  2B4:  		Call  SetGoalPos    ( *VarA *Var1  0` *Var3 )
  2D0:  		Call  JumpToGoal    ( *VarA  5` .False .True .False )
  2F0:  		Call  PlaySoundAtActor  ( *VarA 00000212 )
  304:  		Loop
  310:  			Call  GetBattleFlags    ( *Var1 )
  320:  			If  *Var1  &  00080000
  330:  				BreakLoop
  338:  			EndIf
  340:  			If  *Var1  !&  00000100
  350:  				BreakLoop
  358:  			EndIf
  360:  			Wait  1`
  36C:  		EndLoop
  374:  		Wait  15`
  380:  		Call  SetActorJumpGravity   ( *VarA *Fixed[1.0] )
  394:  		Call  SetActorSpeed ( *VarA *Fixed[6.0] )
  3A8:  		Set   *Var0  FFFFFFBA
  3B8:  		Set   *Var1  00000000
  3C8:  		Set   *Var2  0000000A
  3D8:  		Label  5
  3E4:  		Call  GetActorPos   ( *VarA *Var3 *Var4 *Var5 )
  400:  		If  *Var3  ==  *Var0
  410:  			Goto  A
  41C:  		EndIf
  424:  		If  *Var3  <  *Var0
  434:  			Set   *Var4  *Var0
  444:  			Sub   *Var4  *Var3
  454:  			If  *Var4  <  0000001E
  464:  				Call  SetGoalPos        ( *VarA *Var0 *Var1 *Var2 )
  480:  				Call  JumpToGoal        ( *VarA  5` .False .True .False )
  4A0:  				Call  PlaySoundAtActor  ( *VarA 00000212 )
  4B4:  			Else
  4BC:  				Set   *Var4  *Var3
  4CC:  				Add   *Var3  0000001E
  4DC:  				Call  SetGoalPos        ( *VarA *Var3 *Var1 *Var2 )
  4F8:  				Call  JumpToGoal        ( *VarA  0` .False .True .False )
  518:  				Call  PlaySoundAtActor  ( *VarA 00000212 )
  52C:  			EndIf
  534:  		Else
  53C:  			Set   *Var4  *Var3
  54C:  			Sub   *Var4  *Var0
  55C:  			If  *Var4  <  0000001E
  56C:  				Call  SetGoalPos        ( *VarA *Var0 *Var1 *Var2 )
  588:  				Call  JumpToGoal        ( *VarA  5` .False .True .False )
  5A8:  				Call  PlaySoundAtActor  ( *VarA 00000212 )
  5BC:  			Else
  5C4:  				Sub   *Var3  0000001E
  5D4:  				Call  SetGoalPos        ( *VarA *Var3 *Var1 *Var2 )
  5F0:  				Call  JumpToGoal        ( *VarA  0` .False .True .False )
  610:  				Call  PlaySoundAtActor  ( *VarA 00000212 )
  624:  			EndIf
  62C:  		EndIf
  634:  		Goto  5
  640:  		Label  A
  64C:  		Call  EnableActorBlur   ( *VarA 00000001 )
  660:  		Call  SetTargetActor    ( *VarA .Actor:Player )
  674:  		Call  SetGoalToTarget   ( *VarA )
  684:  		Call  JumpToGoal    ( *VarA  15` .False .False .False )
  6A4:  		Call  GetGoalPos    ( *VarA *Var0 *Var1 *Var2 )
  6C0:  		Call  PlayEffect    ( ~FX:SmallGoldSparkle *Var0 *Var1 *Var2 *Fixed[1.0] 00000000 00000000 00000000 00000000 00000000 00000000 00000000 00000000 )
  704:  		Call  PlaySoundAtActor  ( *VarA 00000211 )
  718:  		Call  GetActorVar   ( *VarA 00000001 *Var0 )
  730:  		Call  AddCoin       ( *Var0 )
  740:  		Call  RemoveActor   ( *VarA )
  750:  EndSwitch
  758:  Return
  760:  End
}

#new:Script $Script_HandleEvent_8021DF88
{
    0:  UseArray  $End[0]
    C:  Call  UseIdleAnimation  ( .Actor:Self .False )
   20:  Call  EnableIdleScript  ( .Actor:Self 00000000 )
   34:  Call  GetLastEvent      ( .Actor:Self *Var0 )
   48:  Switch  *Var0
   54:  	Case  ==  .Event:HitCombo % 9
   60:  		Exec  $Script_8021D820 *Array[0]
   70:  		SetConst  *Var0  00000001
   80:  		SetConst  *Var1  00320009
   90:  		ExecWait  DoNormalHit
   9C:  		Loop
   A8:  			DoesScriptExist  *Array[0] *Var0
   B8:  			If  *Var0  ==  00000000
   C8:  				BreakLoop
   D0:  			EndIf
   D8:  			Wait  1`
   E4:  		EndLoop
   EC:  	CaseOR  ==  .Event:Hit % A
   F8:  	CaseOR  ==  .Event:SpinSmashLaunchHit % 11
  104:  		Exec  $Script_8021D820 *Array[0]
  114:  		SetConst  *Var0  00000001
  124:  		SetConst  *Var1  00320009
  134:  		ExecWait  DoNormalHit
  140:  		Loop
  14C:  			DoesScriptExist  *Array[0] *Var0
  15C:  			If  *Var0  ==  00000000
  16C:  				BreakLoop
  174:  			EndIf
  17C:  			Wait  1`
  188:  		EndLoop
  190:  	EndCaseGroup
  198:  	Case  ==  .Event:BurnHit % E
  1A4:  		Exec  $Script_8021D820 *Array[0]
  1B4:  		SetConst  *Var0  00000001
  1C4:  		SetConst  *Var1  0032000A
  1D4:  		SetConst  *Var2  0032000B
  1E4:  		ExecWait  DoBurnHit
  1F0:  		Loop
  1FC:  			DoesScriptExist  *Array[0] *Var0
  20C:  			If  *Var0  ==  00000000
  21C:  				BreakLoop
  224:  			EndIf
  22C:  			Wait  1`
  238:  		EndLoop
  240:  	Case  ==  .Event:BurnDeath % 24
  24C:  		Exec  $Script_8021D820 *Array[0]
  25C:  		SetConst  *Var0  00000001
  26C:  		SetConst  *Var1  0032000A
  27C:  		SetConst  *Var2  0032000B
  28C:  		ExecWait  DoBurnHit
  298:  		SetConst  *Var0  00000001
  2A8:  		SetConst  *Var1  0032000B
  2B8:  		ExecWait  DoDeath
  2C4:  		Loop
  2D0:  			DoesScriptExist  *Array[0] *Var0
  2E0:  			If  *Var0  ==  00000000
  2F0:  				BreakLoop
  2F8:  			EndIf
  300:  			Wait  1`
  30C:  		EndLoop
  314:  		Return
  31C:  	Case  ==  .Event:SpinSmashHit % B
  328:  		Exec  $Script_8021D820 *Array[0]
  338:  		SetConst  *Var0  00000001
  348:  		SetConst  *Var1  00320009
  358:  		ExecWait  DoSpinSmashHit
  364:  		Loop
  370:  			DoesScriptExist  *Array[0] *Var0
  380:  			If  *Var0  ==  00000000
  390:  				BreakLoop
  398:  			EndIf
  3A0:  			Wait  1`
  3AC:  		EndLoop
  3B4:  	Case  ==  .Event:SpinSmashDeath % 21
  3C0:  		Exec  $Script_8021D820 *Array[0]
  3D0:  		SetConst  *Var0  00000001
  3E0:  		SetConst  *Var1  00320009
  3F0:  		ExecWait  DoSpinSmashHit
  3FC:  		SetConst  *Var0  00000001
  40C:  		SetConst  *Var1  00320009
  41C:  		ExecWait  DoDeath
  428:  		Loop
  434:  			DoesScriptExist  *Array[0] *Var0
  444:  			If  *Var0  ==  00000000
  454:  				BreakLoop
  45C:  			EndIf
  464:  			Wait  1`
  470:  		EndLoop
  478:  		Return
  480:  	Case  ==  .Event:ShockHit % 2F
  48C:  		SetConst  *Var0  00000001
  49C:  		SetConst  *Var1  00320009
  4AC:  		ExecWait  DoShockHit
  4B8:  		SetConst  *Var0  00000001
  4C8:  		SetConst  *Var1  00320009
  4D8:  		ExecWait  DoJumpBack
  4E4:  		SetConst  *Var0  00000001
  4F4:  		SetConst  *Var1  00320007
  504:  		ExecWait  DoReturnHome
  510:  		Call  SetActorJumpGravity   ( .Actor:Self *Fixed[1.6] )
  524:  		Call  JumpToGoal    ( .Actor:Self  5` .False .True .False )
  544:  	Case  ==  .Event:ShockDeath % 26
  550:  		SetConst  *Var0  00000001
  560:  		SetConst  *Var1  00320009
  570:  		ExecWait  DoShockHit
  57C:  		SetConst  *Var0  00000001
  58C:  		SetConst  *Var1  00320009
  59C:  		ExecWait  DoDeath
  5A8:  		Return
  5B0:  	CaseOR  ==  00000017 % 17
  5BC:  	CaseOR  ==  .Event:Immune % 19
  5C8:  	CaseOR  ==  .Event:AirLiftFailed % 1F
  5D4:  		Call  GetActorVar   ( .Actor:Self 00000000 *Var0 )
  5EC:  		Switch  *Var0
  5F8:  			Case  ==  00000000
  604:  				SetConst  *Var1  00320001
  614:  			Case  ==  00000001
  620:  				SetConst  *Var1  00320002
  630:  		EndSwitch
  638:  		SetConst  *Var0  00000001
  648:  		ExecWait  DoImmune
  654:  	EndCaseGroup
  65C:  	CaseOR  ==  .Event:Death % 20
  668:  	CaseOR  ==  00000025 % 25
  674:  		Exec  $Script_8021D820 *Array[0]
  684:  		SetConst  *Var0  00000001
  694:  		SetConst  *Var1  00320009
  6A4:  		ExecWait  DoNormalHit
  6B0:  		Wait  10`
  6BC:  		SetConst  *Var0  00000001
  6CC:  		SetConst  *Var1  00320009
  6DC:  		ExecWait  DoDeath
  6E8:  		Loop
  6F4:  			DoesScriptExist  *Array[0] *Var0
  704:  			If  *Var0  ==  00000000
  714:  				BreakLoop
  71C:  			EndIf
  724:  			Wait  1`
  730:  		EndLoop
  738:  		Return
  740:  	EndCaseGroup
  748:  	Case  ==  .Event:RecoverStatus % 31
  754:  		SetConst  *Var0  00000001
  764:  		SetConst  *Var1  00320001
  774:  		ExecWait  DoRecover
  780:  	Case  ==  .Event:ScareAway % 39
  78C:  		Exec  $Script_8021D820 *Array[0]
  79C:  		SetConst  *Var0  00000001
  7AC:  		SetConst  *Var1  00320007
  7BC:  		SetConst  *Var2  00320009
  7CC:  		ExecWait  DoScareAway
  7D8:  		Loop
  7E4:  			DoesScriptExist  *Array[0] *Var0
  7F4:  			If  *Var0  ==  00000000
  804:  				BreakLoop
  80C:  			EndIf
  814:  			Wait  1`
  820:  		EndLoop
  828:  		Return
  830:  	Case  ==  .Event:BeginAirLift % 3A
  83C:  		Exec  $Script_8021D820 *Array[0]
  84C:  		SetConst  *Var0  00000001
  85C:  		SetConst  *Var1  00320009
  86C:  		ExecWait  DoAirLift
  878:  		Loop
  884:  			DoesScriptExist  *Array[0] *Var0
  894:  			If  *Var0  ==  00000000
  8A4:  				BreakLoop
  8AC:  			EndIf
  8B4:  			Wait  1`
  8C0:  		EndLoop
  8C8:  	Case  ==  .Event:BlowAway % 16
  8D4:  		SetConst  *Var0  00000001
  8E4:  		SetConst  *Var1  00320009
  8F4:  		SetConst  *Var2  00040000
  904:  		ExecWait  DoBlowAway
  910:  		Return
  918:  	Default
  920:  EndSwitch
  928:  Call  SetAnimation      ( .Actor:Self 00000001 00320001 )
  940:  Call  EnableIdleScript  ( .Actor:Self 00000001 )
  954:  Call  UseIdleAnimation  ( .Actor:Self .True )
  968:  Return
  970:  End
}

#new:Script $Script_TakeTurn_8021E900
{
    0:  Call  UseIdleAnimation  ( .Actor:Self .False )
   14:  Call  EnableIdleScript  ( .Actor:Self 00000000 )
   28:  Call  SetTargetActor    ( .Actor:Self .Actor:Player )
   3C:  Call  GetActorVar       ( .Actor:Self 00000000 *Var0 )
   54:  If  *Var0  ==  00000001
   64:  	Call  SetActorYaw   ( .Actor:Self  180` )
   78:  	Call  SetAnimation  ( .Actor:Self 00000001 00320008 )
   90:  	Wait  30`
   9C:  	Call  SetActorSpeed ( .Actor:Self *Fixed[10.0] )
   B0:  	Call  SetGoalPos    ( .Actor:Self  300`  0`  0` )
   CC:  	Call  RunToGoal     ( .Actor:Self  0` .False )
   E4:  	Call  SetBattleFlagBits ( 00040000 .True )
   F8:  	Call  8027D32C      ( FFFFFF81 )
  108:  	Call  RemoveActor   ( .Actor:Self )
  118:  	Return
  120:  EndIf
  128:  Call  UseBattleCamPreset    ( 0000003F )
  138:  Call  BattleCamTargetActor  ( .Actor:Self )
  148:  Call  8024ECF8  ( FFFFFFFF 00000001 00000000 )
  160:  Call  GetBattlePhase        ( *Var0 )
  170:  If  *Var0  ==  00000001
  180:  	Call  SetGoalToTarget   ( .Actor:Self )
  190:  	Call  GetGoalPos        ( .Actor:Self *Var0 *Var1 *Var2 )
  1AC:  	Add   *Var0  00000032
  1BC:  	Set   *Var1  00000000
  1CC:  	Call  SetActorPos       ( .Actor:Self *Var0 *Var1 *Var2 )
  1E8:  Else
  1F0:  	Call  SetAnimation  ( .Actor:Self 00000001 00320007 )
  208:  	Call  SetGoalToTarget   ( .Actor:Self )
  218:  	Call  AddGoalPos    ( .Actor:Self  50`  0`  0` )
  234:  	Call  SetActorSpeed ( .Actor:Self *Fixed[6.0] )
  248:  	Call  RunToGoal     ( .Actor:Self  0` .False )
  260:  	Call  SetAnimation  ( .Actor:Self 00000001 00320001 )
  278:  	Wait  6`
  284:  EndIf
  28C:  Call  SetActorSpeed     ( .Actor:Self *Fixed[2.0] )
  2A0:  Call  SetAnimation      ( .Actor:Self 00000001 00320005 )
  2B8:  Call  SetGoalToTarget   ( .Actor:Self )
  2C8:  Call  AddGoalPos        ( .Actor:Self  35`  0`  0` )
  2E4:  Call  RunToGoal ( .Actor:Self  0` .False )
  2FC:  Call  PlaySoundAtActor  ( .Actor:Self 000020C2 )
  310:  Call  SetActorSounds    ( .Actor:Self .ActorSound:Walk 00000000 00000000 )
  32C:  Call  EnemyTestTarget   ( .Actor:Self *Var0 ~Flags:DamageType:0 00000000 00000001 00000010 )
  350:  Switch  *Var0
  35C:  	CaseOR  ==  .HitResult:Miss % 6
  368:  	CaseOR  ==  .HitResult:Lucky % 5
  374:  		Set   *VarA  *Var0
  384:  		Call  SetAnimation  ( .Actor:Self 00000001 0032000D )
  39C:  		Call  SetGoalToTarget       ( .Actor:Self )
  3AC:  		Call  SetActorSpeed ( .Actor:Self *Fixed[8.0] )
  3C0:  		Call  RunToGoal     ( .Actor:Self  0` .False )
  3D8:  		Call  ResetAllActorSounds   ( .Actor:Self )
  3E8:  		Call  SetActorSpeed ( .Actor:Self *Fixed[6.0] )
  3FC:  		Call  SetActorJumpGravity   ( .Actor:Self *Fixed[0.5] )
  410:  		Call  GetActorPos   ( .Actor:Self *Var0 *Var1 *Var2 )
  42C:  		Sub   *Var0  0000001E
  43C:  		Call  SetGoalPos    ( .Actor:Self *Var0 *Var1 *Var2 )
  458:  		Call  JumpToGoal    ( .Actor:Self  8` .False .True .False )
  478:  		Sub   *Var0  00000014
  488:  		Call  SetGoalPos    ( .Actor:Self *Var0 *Var1 *Var2 )
  4A4:  		Call  JumpToGoal    ( .Actor:Self  8` .False .True .False )
  4C4:  		Wait  5`
  4D0:  		If  *VarA  ==  .HitResult:Lucky % 5
  4E0:  			Call  EnemyTestTarget   ( .Actor:Self *Var0 ~Flags:DamageType:TriggerLucky 00000000 00000000 00000000 )
  504:  		EndIf
  50C:  		Wait  5`
  518:  		Call  UseBattleCamPreset    ( 00000002 )
  528:  		Call  YieldTurn ( )
  534:  		Call  SetActorYaw   ( .Actor:Self  180` )
  548:  		Call  AddActorDecoration    ( .Actor:Self 00000001 00000000 .Decoration:Sweat )
  564:  		Call  SetAnimation  ( .Actor:Self 00000001 00320007 )
  57C:  		Call  SetGoalToHome ( .Actor:Self )
  58C:  		Call  SetActorSpeed ( .Actor:Self *Fixed[8.0] )
  5A0:  		Call  RunToGoal     ( .Actor:Self  0` .False )
  5B8:  		Call  SetAnimation  ( .Actor:Self 00000001 00320001 )
  5D0:  		Call  RemoveActorDecoration ( .Actor:Self 00000001 00000000 )
  5E8:  		Call  SetActorYaw   ( .Actor:Self  0` )
  5FC:  		Call  EnableIdleScript      ( .Actor:Self 00000001 )
  610:  		Call  UseIdleAnimation      ( .Actor:Self .True )
  624:  		Return
  62C:  	EndCaseGroup
  634:  EndSwitch
  63C:  Call  SetAnimation      ( .Actor:Self 00000001 0032000D )
  654:  Call  SetGoalToTarget   ( .Actor:Self )
  664:  Call  SetActorSpeed     ( .Actor:Self *Fixed[8.0] )
  678:  Call  RunToGoal ( .Actor:Self  0` .False )
  690:  Call  ResetAllActorSounds   ( .Actor:Self )
  6A0:  Wait  2`
  6AC:  Call  EnemyDamageTarget ( .Actor:Self *Var0 ~Flags:DamageType:0 00000000 00000000 00000002 00000020 )
  6D4:  Switch  *Var0
  6E0:  	CaseOR  ==  .HitResult:Hit % 0
  6EC:  	CaseOR  ==  .HitResult:QuakeImmune % 2
  6F8:  		Call  GetLastDamage ( .Actor:Player *Var0 )
  70C:  		If  *Var0  <=  00000000
  71C:  			Set   *Var0  00000001
  72C:  			Goto  A
  738:  		EndIf
  740:  		Call  GetBattleFlags    ( *Var0 )
  750:  		If  *Var0  &  80000000
  760:  			Set   *Var0  00000001
  770:  			Goto  A
  77C:  		EndIf
  784:  		Call  GetStatusFlags    ( .Actor:Self *Var0 )
  798:  		If  *Var0  &  ~Flags:StatusFlags:Shrink % 80000
  7A8:  			Set   *Var0  00000000
  7B8:  			Goto  A
  7C4:  		EndIf
  7CC:  		Call  GetStatusFlags    ( .Actor:Player *Var0 )
  7E0:  		If  *Var0  &  ~Flags:StatusFlags:Stone % 100000
  7F0:  			Set   *Var0  00000000
  800:  			Goto  A
  80C:  		EndIf
  814:  		Call  AddCoin   ( 00000000 )
  824:  		Switch  *Var0
  830:  			Case  ==  00000000
  83C:  				Set   *Var0  00000001
  84C:  			Case  <  0000000A
  858:  				Call  SetActorVar   ( .Actor:Self 00000001 *Var0 )
  870:  				Set   *Var0  00000002
  880:  			Case  >=  0000000A
  88C:  				Call  SetActorVar   ( .Actor:Self 00000001 0000000A )
  8A4:  				Set   *Var0  00000002
  8B4:  		EndSwitch
  8BC:  		Label  A
  8C8:  		Switch  *Var0
  8D4:  			Case  ==  00000000
  8E0:  				Call  GetGoalPos    ( .Actor:Self *Var0 *Var1 *Var2 )
  8FC:  				Add   *Var0  0000001E
  90C:  				Set   *Var1  00000000
  91C:  				Call  SetActorJumpGravity   ( .Actor:Self *Fixed[1.8] )
  930:  				Call  SetGoalPos    ( .Actor:Self *Var0 *Var1 *Var2 )
  94C:  				Call  JumpToGoal    ( .Actor:Self  10` .False .True .False )
  96C:  				Call  SetAnimation  ( .Actor:Self 00000001 00320001 )
  984:  				Wait  20`
  990:  				Call  SetAnimation  ( .Actor:Self 00000001 00320007 )
  9A8:  			Case  ==  00000001
  9B4:  				Call  GetGoalPos    ( .Actor:Self *Var0 *Var1 *Var2 )
  9D0:  				Add   *Var0  0000001E
  9E0:  				Set   *Var1  00000000
  9F0:  				Call  SetActorJumpGravity   ( .Actor:Self *Fixed[1.8] )
  A04:  				Call  SetGoalPos    ( .Actor:Self *Var0 *Var1 *Var2 )
  A20:  				Call  JumpToGoal    ( .Actor:Self  10` .False .True .False )
  A40:  				Call  SetAnimation  ( .Actor:Self 00000001 0032000E )
  A58:  				Wait  20`
  A64:  				Call  PlaySoundAtActor      ( .Actor:Self 000020C3 )
  A78:  				Call  SetAnimation  ( .Actor:Self 00000001 00320010 )
  A90:  				Wait  20`
  A9C:  				Call  SetAnimation  ( .Actor:Self 00000001 00320007 )
  AB4:  			Default
  ABC:  				Call  SetGoalToTarget   ( .Actor:Self )
  ACC:  				Call  GetGoalPos    ( .Actor:Self *VarA *VarB *VarC )
  AE8:  				Add   *VarA  0000001E
  AF8:  				Set   *VarB  00000000
  B08:  				Call  GetActorVar   ( .Actor:Self 00000001 *Var0 )
  B20:  				Mul   *Var0  FFFFFFFF
  B30:  				Call  AddCoin       ( *Var0 )
  B40:  				Thread
  B48:  					Call  SetPartFlagBits   ( .Actor:Self 00000002 00100000 .True )
  B64:  					Call  SetPartFlagBits   ( .Actor:Self 00000002 00000001 .False )
  B80:  					Call  GetActorPos       ( .Actor:Player *Var0 *Var1 *Var2 )
  B9C:  					Call  SetPartPos        ( .Actor:Self 00000002 *Var0 *Var1 *Var2 )
  BBC:  					Call  SetPartJumpGravity    ( .Actor:Self 00000002 *Fixed[1.0] )
  BD4:  					Add   *VarB  0000001E
  BE4:  					Call  JumpPartTo        ( .Actor:Self 00000002 *VarA *VarB *VarC  22` .True )
  C0C:  					Call  SetPartFlagBits   ( .Actor:Self 00000002 00100000 .False )
  C28:  				EndThread
  C30:  				Thread
  C38:  					Call  GetActorVar   ( .Actor:Self 00000001 *Var0 )
  C50:  					Loop  *Var0
  C5C:  						Call  PlaySoundAtActor  ( .Actor:Self 00000212 )
  C70:  						Wait  1`
  C7C:  					EndLoop
  C84:  				EndThread
  C8C:  				Call  SetActorJumpGravity   ( .Actor:Self *Fixed[1.8] )
  CA0:  				Call  SetGoalPos    ( .Actor:Self *VarA *VarB *VarC )
  CBC:  				Call  JumpToGoal    ( .Actor:Self  10` .False .True .False )
  CDC:  				Call  SetIdleAnimations     ( .Actor:Self 00000001 $IdleAnimations_8021D55C )
  CF4:  				Call  SetAnimation  ( .Actor:Self 00000001 0032000E )
  D0C:  				Call  SetActorVar   ( .Actor:Self 00000000 00000001 )
  D24:  				Wait  7`
  D30:  				Call  SetAnimation  ( .Actor:Self 00000001 0032000F )
  D48:  				Wait  20`
  D54:  				Call  SetAnimation  ( .Actor:Self 00000001 00320008 )
  D6C:  		EndSwitch
  D74:  		Call  UseBattleCamPreset    ( 00000002 )
  D84:  		Call  YieldTurn ( )
  D90:  		Call  SetGoalToHome ( .Actor:Self )
  DA0:  		Call  SetActorSpeed ( .Actor:Self *Fixed[8.0] )
  DB4:  		Call  RunToGoal     ( .Actor:Self  0` .False )
  DCC:  	EndCaseGroup
  DD4:  EndSwitch
  DDC:  Call  EnableIdleScript  ( .Actor:Self 00000001 )
  DF0:  Call  UseIdleAnimation  ( .Actor:Self .True )
  E04:  Return
  E0C:  End
}

PADDING: 8021F714 to 8021F720 (004E1CF4 to 004E1D00)
00000000 00000000 00000000

#new:Script $Script_8021F720
{
    0:  Set   *VarA  *Var0
   10:  Set   *Var7  *Var1
   20:  Mul   *Var7  0000000A
   30:  Call  $Function_80218220 ( )
   3C:  Label  0
   48:  Add   *Var7  00000001
   58:  If  *Var7  >  00000E0F
   68:  	Sub   *Var7  00000E10
   78:  EndIf
   80:  Call  $Function_802180D0    ( *Var7 *Var0 *Var1 *Var2 )
   9C:  Call  TranslateModel        ( *VarA *Var0 *Var1 *Var2 )
   B8:  Wait  1`
   C4:  Goto  0
   D0:  Return
   D8:  End
}

#new:Script $Script_BeforeBattle_8021F800
{
    0:  Call  SetSpriteShading  ( FFFFFFFF )
   10:  Set   *Var0  00000001
   20:  Set   *Var1  00000000
   30:  Exec  $Script_8021F720
   3C:  Set   *Var0  00000003
   4C:  Set   *Var1  00000078
   5C:  Exec  $Script_8021F720
   68:  Set   *Var0  00000005
   78:  Set   *Var1  000000F0
   88:  Exec  $Script_8021F720
   94:  Call  PlayEffect        ( ~FX:SunRays:RightCorner 00000000 00000000 00000000 00000000 00000000 00000000 00000000 00000000 00000000 00000000 00000000 00000000 )
   D8:  Return
   E0:  End
}

#new:Script $Script_AfterBattle_8021F8E8
{
    0:  Return
    8:  End
}

#new:ForegroundModelList $ForegroundModelList_8021F8F8
{
	~Model:sbk_bt02:o322
	~Model:sbk_bt02:o321
	~Model:sbk_bt02:o320
	~Model:sbk_bt02:o319
	00000000
}

#new:Stage $Stage_8021F90C
{
	$ASCII_80220028  % sbk_tex
	$ASCII_80220018  % sbk_bt02_shape
	$ASCII_80220008  % sbk_bt02_hit
	$Script_BeforeBattle_8021F800
	$Script_AfterBattle_8021F8E8
	$ASCII_80220000  % sbk_bg
	$ForegroundModelList_8021F8F8
	00000000
	00000000
	00000000
}

PADDING: 8021F934 to 8021F940 (004E1F14 to 004E1F20)
00000000 00000000 00000000

#new:Formation $Formation_00
{
	$Pokey 00000001 0000000A 00000000 00000000 00000000 00000000
}

#new:Formation $Formation_01
{
	$Pokey 00000001 0000000A 00000000 00000000 00000000 00000000
	$Pokey 00000002 00000009 00000000 00000000 00000000 00000000
}

#new:Formation $Formation_02
{
	$Pokey 00000000 0000000A 00000000 00000000 00000000 00000000
	$Pokey 00000001 00000009 00000000 00000000 00000000 00000000
	$Pokey 00000002 00000008 00000000 00000000 00000000 00000000
}

#new:Formation $Formation_03
{
	$Pokey 00000000 0000000A 00000000 00000000 00000000 00000000
	$Pokey 00000001 00000009 00000000 00000000 00000000 00000000
	$Pokey 00000002 00000008 00000000 00000000 00000000 00000000
	$Pokey 00000003 00000007 00000000 00000000 00000000 00000000
}

#new:Formation $Formation_04
{
	$Pokey 00000001 0000000A 00000000 00000000 00000000 00000000
	$BanditA 00000002 00000009 00000000 00000000 00000000 00000000
}

#new:Formation $Formation_05
{
	$Pokey 00000000 0000000A 00000000 00000000 00000000 00000000
	$Pokey 00000001 00000009 00000000 00000000 00000000 00000000
	$BanditA 00000002 00000008 00000000 00000000 00000000 00000000
}

#new:Formation $Formation_06
{
	$Pokey 00000000 0000000A 00000000 00000000 00000000 00000000
	$Pokey 00000001 00000009 00000000 00000000 00000000 00000000
	$BanditA 00000002 00000008 00000000 00000000 00000000 00000000
	$BanditA 00000003 00000007 00000000 00000000 00000000 00000000
}

#new:Formation $Formation_07
{
	$Pokey 00000000 0000000A 00000000 00000000 00000000 00000000
	$BanditA 00000001 00000009 00000000 00000000 00000000 00000000
	$Pokey 00000002 00000008 00000000 00000000 00000000 00000000
}

#new:Formation $Formation_08
{
	$Pokey 00000000 0000000A 00000000 00000000 00000000 00000000
	$Pokey 00000001 00000009 00000000 00000000 00000000 00000000
	$BanditA 00000002 00000008 00000000 00000000 00000000 00000000
	$Pokey 00000003 00000007 00000000 00000000 00000000 00000000
}

#new:Formation $Formation_09
{
	$BanditA 00000001 0000000A 00000000 00000000 00000000 00000000
}

#new:Formation $Formation_0A
{
	$BanditA 00000001 0000000A 00000000 00000000 00000000 00000000
	$BanditA 00000002 00000009 00000000 00000000 00000000 00000000
}

#new:Formation $Formation_0B
{
	$BanditA 00000000 0000000A 00000000 00000000 00000000 00000000
	$BanditA 00000001 00000009 00000000 00000000 00000000 00000000
	$BanditA 00000002 00000008 00000000 00000000 00000000 00000000
}

#new:Formation $Formation_0C
{
	$BanditA 00000000 0000000A 00000000 00000000 00000000 00000000
	$BanditA 00000001 00000009 00000000 00000000 00000000 00000000
	$BanditA 00000002 00000008 00000000 00000000 00000000 00000000
	$BanditA 00000003 00000007 00000000 00000000 00000000 00000000
}

#new:Formation $Formation_0D
{
	$BanditA 00000001 0000000A 00000000 00000000 00000000 00000000
	$Pokey 00000002 00000009 00000000 00000000 00000000 00000000
}

#new:Formation $Formation_0E
{
	$BanditA 00000000 0000000A 00000000 00000000 00000000 00000000
	$BanditA 00000001 00000009 00000000 00000000 00000000 00000000
	$Pokey 00000002 00000008 00000000 00000000 00000000 00000000
}

#new:Formation $Formation_0F
{
	$BanditA 00000000 0000000A 00000000 00000000 00000000 00000000
	$BanditA 00000001 00000009 00000000 00000000 00000000 00000000
	$Pokey 00000002 00000008 00000000 00000000 00000000 00000000
	$Pokey 00000003 00000007 00000000 00000000 00000000 00000000
}

#new:Formation $Formation_10
{
	$BanditA 00000000 0000000A 00000000 00000000 00000000 00000000
	$Pokey 00000001 00000009 00000000 00000000 00000000 00000000
	$BanditA 00000002 00000008 00000000 00000000 00000000 00000000
}

#new:FormationTable $FormationTable
{
	$SJIS_80220148 00000001 $Formation_00 $Stage_8021F90C 00000000
	$SJIS_8022013C 00000002 $Formation_01 $Stage_8021F90C 00000000
	$SJIS_80220130 00000003 $Formation_02 $Stage_8021F90C 00000000
	$SJIS_80220120 00000004 $Formation_03 $Stage_8021F90C 00000000
	$SJIS_80220110 00000002 $Formation_04 $Stage_8021F90C 00000000
	$SJIS_802200FC 00000003 $Formation_05 $Stage_8021F90C 00000000
	$SJIS_802200E8 00000004 $Formation_06 $Stage_8021F90C 00000000
	$SJIS_802200D0 00000003 $Formation_07 $Stage_8021F90C 00000000
	$SJIS_802200B4 00000004 $Formation_08 $Stage_8021F90C 00000000
	$SJIS_802200A8 00000001 $Formation_09 $Stage_8021F90C 00000000
	$SJIS_8022009C 00000002 $Formation_0A $Stage_8021F90C 00000000
	$SJIS_80220090 00000003 $Formation_0B $Stage_8021F90C 00000000
	$SJIS_80220084 00000004 $Formation_0C $Stage_8021F90C 00000000
	$SJIS_80220074 00000002 $Formation_0D $Stage_8021F90C 00000000
	$SJIS_80220060 00000003 $Formation_0E $Stage_8021F90C 00000000
	$SJIS_8022004C 00000004 $Formation_0F $Stage_8021F90C 00000000
	$SJIS_80220030 00000003 $Formation_10 $Stage_8021F90C 00000000
	00000000 00000000 00000000 00000000 00000000
}

#new:StageTable $StageTable
{
	$ASCII_80220150 $Stage_8021F90C
	00000000 00000000
}

PADDING: 8021FFF8 to 80220000 (004E25D8 to 004E25E0)
00000000 00000000

#new:ASCII $ASCII_80220000
{
	"sbk_bg"
}

#new:ASCII $ASCII_80220008
{
	"sbk_bt02_hit"
}

#new:ASCII $ASCII_80220018
{
	"sbk_bt02_shape"
}

#new:ASCII $ASCII_80220028
{
	"sbk_tex"
}

#new:SJIS $SJIS_80220030
{
	ボロドー,サンボ,ボロドー % borodo-,sanbo,borodo-
}

#new:SJIS $SJIS_8022004C
{
	ボロドーx2,サンボx2 % borodo-x2,sanbox2
}

#new:SJIS $SJIS_80220060
{
	ボロドーx2,サンボ % borodo-x2,sanbo
}

#new:SJIS $SJIS_80220074
{
	ボロドー,サンボ % borodo-,sanbo
}

#new:SJIS $SJIS_80220084
{
	ボロドーx4 % borodo-x4
}

#new:SJIS $SJIS_80220090
{
	ボロドーx3 % borodo-x3
}

#new:SJIS $SJIS_8022009C
{
	ボロドーx2 % borodo-x2
}

#new:SJIS $SJIS_802200A8
{
	ボロドー % borodo-
}

#new:SJIS $SJIS_802200B4
{
	サンボx2,ボロドー,サンボ % sanbox2,borodo-,sanbo
}

#new:SJIS $SJIS_802200D0
{
	サンボ,ボロドー,サンボ % sanbo,borodo-,sanbo
}

#new:SJIS $SJIS_802200E8
{
	サンボx2,ボロドーx2 % sanbox2,borodo-x2
}

#new:SJIS $SJIS_802200FC
{
	サンボx2,ボロドー % sanbox2,borodo-
}

#new:SJIS $SJIS_80220110
{
	サンボ,ボロドー % sanbo,borodo-
}

#new:SJIS $SJIS_80220120
{
	きいろサンボx4 % kiirosanbox4
}

#new:SJIS $SJIS_80220130
{
	サンボx3 % sanbox3
}

#new:SJIS $SJIS_8022013C
{
	サンボx2 % sanbox2
}

#new:SJIS $SJIS_80220148
{
	サンボ % sanbo
}

#new:ASCII $ASCII_80220150
{
	"sbk_01"
}

PADDING: 80220158 to 80220160 (004E2738 to 004E2740)
00000000 00000000

