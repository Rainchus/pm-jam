% Script File: 13 Area KGR.bscr
% Decoded from: 56E2A0 to 573920 (13 Area KGR)

#new:Function $Function_80218000
{
    0:  ADDIU     SP, SP, FFD8
    4:  SW        S1, 14 (SP)
    8:  COPY      S1, A0
    C:  SW        RA, 20 (SP)
   10:  SW        S3, 1C (SP)
   14:  SW        S2, 18 (SP)
   18:  SW        S0, 10 (SP)
   1C:  LW        S0, C (S1)
   20:  LW        A1, 0 (S0)
   24:  JAL       ~Func:get_variable
   28:  ADDIU     S0, S0, 4
   2C:  LW        A1, 0 (S0)
   30:  ADDIU     S0, S0, 4
   34:  COPY      A0, S1
   38:  JAL       ~Func:get_variable
   3C:  COPY      S3, V0
   40:  LW        A1, 0 (S0)
   44:  ADDIU     S0, S0, 4
   48:  COPY      A0, S1
   4C:  JAL       ~Func:get_variable
   50:  COPY      S2, V0
   54:  COPY      A0, S1
   58:  LW        A1, 0 (S0)
   5C:  JAL       ~Func:get_variable
   60:  COPY      S0, V0
   64:  LW        A0, 148 (S1)
   68:  JAL       ~Func:get_actor
   6C:  COPY      S1, V0
   70:  COPY      V1, V0
   74:  LW        V0, 8 (V1)
   78:  LBU       V0, 24 (V0)
   7C:  LW        A0, 8 (V1)
   80:  SUBU      S3, S3, V0
   84:  SB        S3, 194 (V1)
   88:  LBU       V0, 25 (A0)
   8C:  SUBU      S2, S2, V0
   90:  SB        S2, 195 (V1)
   94:  LBU       V0, 26 (A0)
   98:  SUBU      S0, S0, V0
   9C:  SB        S0, 196 (V1)
   A0:  LBU       A0, 27 (A0)
   A4:  SUBU      S1, S1, A0
   A8:  SB        S1, 197 (V1)
   AC:  LW        RA, 20 (SP)
   B0:  LW        S3, 1C (SP)
   B4:  LW        S2, 18 (SP)
   B8:  LW        S1, 14 (SP)
   BC:  LW        S0, 10 (SP)
   C0:  LI        V0, 2
   C4:  JR        RA
   C8:  ADDIU     SP, SP, 28
}

#new:Function $Function_802180CC
{
    0:  ADDIU     SP, SP, FFD8
    4:  SW        S2, 18 (SP)
    8:  COPY      S2, A0
    C:  SW        RA, 1C (SP)
   10:  SW        S1, 14 (SP)
   14:  SW        S0, 10 (SP)
   18:  SDC1      F20, 20 (SP)
   1C:  BEQ       A1, R0, .o130
   20:  LW        S0, C (S2)
   24:  JAL       ~Func:heap_malloc
   28:  LI        A0, 24
   2C:  COPY      S1, V0
   30:  SW        S1, 70 (S2)
   34:  LW        A1, 0 (S0)
   38:  ADDIU     S0, S0, 4
   3C:  JAL       ~Func:get_variable
   40:  COPY      A0, S2
   44:  SW        V0, 20 (S1)
   48:  LW        A1, 0 (S0)
   4C:  ADDIU     S0, S0, 4
   50:  JAL       ~Func:get_float_variable
   54:  COPY      A0, S2
   58:  SWC1      F0, 0 (S1)
   5C:  LW        A1, 0 (S0)
   60:  ADDIU     S0, S0, 4
   64:  JAL       ~Func:get_float_variable
   68:  COPY      A0, S2
   6C:  SWC1      F0, 4 (S1)
   70:  LW        A1, 0 (S0)
   74:  ADDIU     S0, S0, 4
   78:  JAL       ~Func:get_float_variable
   7C:  COPY      A0, S2
   80:  SWC1      F0, 8 (S1)
   84:  LW        A1, 0 (S0)
   88:  ADDIU     S0, S0, 4
   8C:  JAL       ~Func:get_variable
   90:  COPY      A0, S2
   94:  SW        V0, 1C (S1)
   98:  LW        A1, 0 (S0)
   9C:  JAL       ~Func:get_float_variable
   A0:  COPY      A0, S2
   A4:  LW        A0, 20 (S1)
   A8:  JAL       ~Func:get_item_entity
   AC:  SWC1      F0, 10 (S1)
   B0:  COPY      S0, V0
   B4:  LWC1      F12, 8 (S0)
   B8:  LWC1      F14, 10 (S0)
   BC:  LW        A2, 0 (S1)
   C0:  JAL       ~Func:dist2D
   C4:  LW        A3, 8 (S1)
   C8:  LWC1      F12, 8 (S0)
   CC:  LWC1      F14, 10 (S0)
   D0:  LW        A2, 0 (S1)
   D4:  LW        A3, 8 (S1)
   D8:  JAL       ~Func:atan2
   DC:  MOV.S     F20, F0
   E0:  LWC1      F4, 10 (S1)
   E4:  LWC1      F6, 1C (S1)
   E8:  CVT.S.W   F6, F6
   EC:  MUL.S     F4, F4, F6
   F0:  NOP
   F4:  LIF       F2, 0.5
   FC:  NOP
  100:  MUL.S     F4, F4, F2
  104:  NOP
  108:  SWC1      F0, C (S1)
  10C:  LWC1      F0, 4 (S1)
  110:  LWC1      F2, C (S0)
  114:  SUB.S     F0, F0, F2
  118:  MOV.S     F2, F6
  11C:  DIV.S     F0, F0, F6
  120:  ADD.S     F4, F4, F0
  124:  DIV.S     F20, F20, F2
  128:  SWC1      F20, 14 (S1)
  12C:  SWC1      F4, 18 (S1)
        .o130
  130:  LW        S1, 70 (S2)
  134:  JAL       ~Func:get_item_entity
  138:  LW        A0, 20 (S1)
  13C:  COPY      S0, V0
  140:  BNE       S0, R0, .o158
  144:  NOP
  148:  JAL       ~Func:heap_free
  14C:  LW        A0, 70 (S2)
  150:  BEQ       R0, R0, .o1FC
  154:  LI        V0, 2
        .o158
  158:  LWC1      F12, C (S1)
  15C:  JAL       ~Func:sin_deg
  160:  NOP
  164:  LWC1      F2, 14 (S1)
  168:  MUL.S     F2, F2, F0
  16C:  NOP
  170:  LWC1      F0, 8 (S0)
  174:  ADD.S     F0, F0, F2
  178:  SWC1      F0, 8 (S0)
  17C:  JAL       ~Func:cos_deg
  180:  LWC1      F12, C (S1)
  184:  LWC1      F2, 14 (S1)
  188:  MUL.S     F2, F2, F0
  18C:  NOP
  190:  LWC1      F0, 10 (S0)
  194:  SUB.S     F0, F0, F2
  198:  SWC1      F0, 10 (S0)
  19C:  LWC1      F0, C (S0)
  1A0:  LWC1      F2, 18 (S1)
  1A4:  ADD.S     F0, F0, F2
  1A8:  SWC1      F0, C (S0)
  1AC:  LWC1      F0, 18 (S1)
  1B0:  LWC1      F2, 10 (S1)
  1B4:  LW        V0, 1C (S1)
  1B8:  SUB.S     F0, F0, F2
  1BC:  ADDIU     V0, V0, FFFF
  1C0:  SW        V0, 1C (S1)
  1C4:  BLTZ      V0, .o1D4
  1C8:  SWC1      F0, 18 (S1)
  1CC:  BEQ       R0, R0, .o1FC
  1D0:  CLEAR     V0
        .o1D4
  1D4:  LWC1      F0, 0 (S1)
  1D8:  SWC1      F0, 8 (S0)
  1DC:  LWC1      F0, 4 (S1)
  1E0:  SWC1      F0, C (S0)
  1E4:  LWC1      F0, 8 (S1)
  1E8:  SWC1      F0, 10 (S0)
  1EC:  SW        R0, 18 (S1)
  1F0:  JAL       ~Func:heap_free
  1F4:  LW        A0, 70 (S2)
  1F8:  LI        V0, 1
        .o1FC
  1FC:  LW        RA, 1C (SP)
  200:  LW        S2, 18 (SP)
  204:  LW        S1, 14 (SP)
  208:  LW        S0, 10 (SP)
  20C:  LDC1      F20, 20 (SP)
  210:  JR        RA
  214:  ADDIU     SP, SP, 28
}

#new:Function $Function_802182E4
{
    0:  ADDIU     SP, SP, FFC0
    4:  SW        S3, 2C (SP)
    8:  COPY      S3, A0
    C:  SW        S0, 20 (SP)
   10:  CLEAR     S0
   14:  SW        S2, 28 (SP)
   18:  LA        S2, 800DC070
   20:  SW        S4, 30 (SP)
   24:  LA        S4, 8010F290
   2C:  SW        S5, 34 (SP)
   30:  LI        A0, FFFF
   34:  SW        RA, 38 (SP)
   38:  SW        S1, 24 (SP)
   3C:  LB        V0, AE (S2)
   40:  LW        S1, C (S3)
   44:  BNE       V0, A0, .o54
   48:  COPY      S5, S4
   4C:  SW        R0, 10 (SP)
   50:  LI        S0, 1
        .o54
   54:  LB        V0, AF (S2)
   58:  BNE       V0, A0, .o70
   5C:  SLL       V0, S0, 2
   60:  ADDU      V1, SP, V0
   64:  LI        V0, 1
   68:  SW        V0, 10 (V1)
   6C:  ADDU      S0, S0, V0
        .o70
   70:  LB        V0, B0 (S2)
   74:  BNE       V0, A0, .o8C
   78:  SLL       V0, S0, 2
   7C:  ADDU      V1, SP, V0
   80:  LI        V0, 2
   84:  SW        V0, 10 (V1)
   88:  ADDIU     S0, S0, 1
        .o8C
   8C:  JAL       ~Func:rand_int
   90:  LI        A0, 2
   94:  ADDIU     A0, S0, FFFF
   98:  JAL       ~Func:rand_int
   9C:  ADDIU     S0, V0, 2
   A0:  SLL       V0, V0, 2
   A4:  ADDU      V0, SP, V0
   A8:  LW        V1, 10 (V0)
   AC:  LI        V0, 1
   B0:  BEQ       V1, V0, .o124
   B4:  SLTI      V0, V1, 2
   B8:  BEQ       V0, R0, .oD0
   BC:  LI        V0, 2
   C0:  BEQL      V1, R0, .oE0
   C4:  SB        S0, AE (S2)
   C8:  BEQ       R0, R0, .o194
   CC:  NOP
        .oD0
   D0:  BEQL      V1, V0, .o16C
   D4:  SB        S0, B0 (S2)
   D8:  BEQ       R0, R0, .o194
   DC:  NOP
        .oE0
   E0:  LW        A1, 0 (S1)
   E4:  LB        V0, 1 (S4)
   E8:  ADDIU     S1, S1, 4
   EC:  SLL       V0, V0, 2
   F0:  LTW       A2, V0 ($IntTable_8021AFD8)
   FC:  JAL       ~Func:set_variable
  100:  COPY      A0, S3
  104:  LB        V0, 1 (S4)
  108:  LW        A1, 0 (S1)
  10C:  SLL       V0, V0, 2
  110:  LTW       A2, V0 ($IntTable_8021AFE4)
  11C:  BEQ       R0, R0, .o18C
  120:  COPY      A0, S3
        .o124
  124:  SB        S0, AF (S2)
  128:  LW        A1, 0 (S1)
  12C:  LB        V0, 0 (S5)
  130:  ADDIU     S1, S1, 4
  134:  SLL       V0, V0, 2
  138:  LTW       A2, V0 ($IntTable_8021AFF0)
  144:  JAL       ~Func:set_variable
  148:  COPY      A0, S3
  14C:  LB        V0, 0 (S5)
  150:  LW        A1, 0 (S1)
  154:  SLL       V0, V0, 2
  158:  LTW       A2, V0 ($IntTable_8021AFFC)
  164:  BEQ       R0, R0, .o18C
  168:  COPY      A0, S3
        .o16C
  16C:  LW        A1, 0 (S1)
  170:  ADDIU     S1, S1, 4
  174:  COPY      A0, S3
  178:  JAL       ~Func:set_variable
  17C:  LI        A2, 16C
  180:  COPY      A0, S3
  184:  LW        A1, 0 (S1)
  188:  LI        A2, 4F
        .o18C
  18C:  JAL       ~Func:set_variable
  190:  NOP
        .o194
  194:  LW        RA, 38 (SP)
  198:  LW        S5, 34 (SP)
  19C:  LW        S4, 30 (SP)
  1A0:  LW        S3, 2C (SP)
  1A4:  LW        S2, 28 (SP)
  1A8:  LW        S1, 24 (SP)
  1AC:  LW        S0, 20 (SP)
  1B0:  LI        V0, 2
  1B4:  JR        RA
  1B8:  ADDIU     SP, SP, 40
}

#new:Function $Function_802184A0
{
    0:  ADDIU     SP, SP, FFE0
    4:  SW        S1, 14 (SP)
    8:  COPY      S1, A0
    C:  SW        RA, 18 (SP)
   10:  SW        S0, 10 (SP)
   14:  LW        S0, C (S1)
   18:  LW        A1, 0 (S0)
   1C:  JAL       ~Func:get_variable
   20:  ADDIU     S0, S0, 4
   24:  COPY      A0, S1
   28:  LW        A1, 0 (S0)
   2C:  JAL       ~Func:get_variable
   30:  COPY      S0, V0
   34:  COPY      A0, S0
   38:  JAL       ~Func:start_rumble
   3C:  COPY      A1, V0
   40:  LW        RA, 18 (SP)
   44:  LW        S1, 14 (SP)
   48:  LW        S0, 10 (SP)
   4C:  LI        V0, 2
   50:  JR        RA
   54:  ADDIU     SP, SP, 20
}

#new:Function $Function_802184F8
{
    0:  ADDIU     SP, SP, FFE8
    4:  LA        V1, 800DC070
    C:  LI        A2, FFFF
   10:  SW        RA, 10 (SP)
   14:  LB        V0, AE (V1)
   18:  BEQ       V0, A2, .o38
   1C:  LW        A1, C (A0)
   20:  LB        V0, AF (V1)
   24:  BEQ       V0, A2, .o38
   28:  NOP
   2C:  LB        V0, B0 (V1)
   30:  BNE       V0, A2, .o44
   34:  NOP
        .o38
   38:  LW        A1, 0 (A1)
   3C:  BEQ       R0, R0, .o48
   40:  CLEAR     A2
        .o44
   44:  LW        A1, 0 (A1)
        .o48
   48:  JAL       ~Func:set_variable
   4C:  NOP
   50:  LW        RA, 10 (SP)
   54:  LI        V0, 2
   58:  JR        RA
   5C:  ADDIU     SP, SP, 18
}

PADDING: 80218558 to 80218560 (0056E7F8 to 0056E800)
00000000 00000000

% Origin: HEURISTIC
#new:Function $Function_80218560
{
    0:  ADDIU     SP, SP, FFA0
    4:  SW        S0, 20 (SP)
    8:  COPY      S0, A0
    C:  SW        RA, 28 (SP)
   10:  SW        S1, 24 (SP)
   14:  SDC1      F30, 58 (SP)
   18:  SDC1      F28, 50 (SP)
   1C:  SDC1      F26, 48 (SP)
   20:  SDC1      F24, 40 (SP)
   24:  SDC1      F22, 38 (SP)
   28:  SDC1      F20, 30 (SP)
   2C:  LW        V0, C (S0)
   30:  JAL       ~Func:get_variable
   34:  LW        A1, 0 (V0)
   38:  COPY      S1, V0
   3C:  LI        A0, 1
   40:  BEQ       S1, A0, .o100
   44:  SW        S1, 70 (S0)
   48:  SLTI      V0, S1, 2
   4C:  BEQ       V0, R0, .o64
   50:  LI        V0, 2
   54:  BEQ       S1, R0, .o7C
   58:  LI        V0, 8E
   5C:  BEQ       R0, R0, .o400
   60:  NOP
        .o64
   64:  BEQ       S1, V0, .o27C
   68:  LI        V0, 3
   6C:  BEQ       S1, V0, .oBC
   70:  LI        V1, 5B
   74:  BEQ       R0, R0, .o400
   78:  NOP
        .o7C
   7C:  LIF       F4, 142.0
   84:  LIF       F30, -118.0
   8C:  LI        V1, FF8A
   90:  SW        R0, 14 (SP)
   94:  SWC1      F4, 10 (SP)
   98:  SW        V0, 90 (S0)
   9C:  LI        V0, 2C
   A0:  SW        V0, 9C (S0)
   A4:  LI        V0, 3
   A8:  SW        R0, 94 (S0)
   AC:  SW        V1, 98 (S0)
   B0:  SW        V1, A0 (S0)
   B4:  BEQ       R0, R0, .oF0
   B8:  SW        V0, A4 (S0)
        .oBC
   BC:  LIF       F4, 91.0
   C4:  LIF       F30, -118.0
   CC:  LI        V0, FF8A
   D0:  SW        R0, 14 (SP)
   D4:  SWC1      F4, 10 (SP)
   D8:  SW        V1, 90 (S0)
   DC:  SW        R0, 94 (S0)
   E0:  SW        V0, 98 (S0)
   E4:  SW        V1, 9C (S0)
   E8:  SW        V0, A0 (S0)
   EC:  SW        S1, A4 (S0)
        .oF0
   F0:  SW        R0, A8 (S0)
   F4:  SW        R0, B0 (S0)
   F8:  BEQ       R0, R0, .o400
   FC:  SW        A0, 70 (S0)
        .o100
  100:  LW        V0, A8 (S0)
  104:  LW        V1, A4 (S0)
  108:  ADDU      V0, V0, V1
  10C:  SW        V0, A8 (S0)
  110:  SLTI      V0, V0, 2E
  114:  BNE       V0, R0, .o124
  118:  NOP
  11C:  LI        V0, 2D
  120:  SW        V0, A8 (S0)
        .o124
  124:  LWC1      F4, 90 (S0)
  128:  CVT.S.W   F4, F4
  12C:  SWC1      F4, 10 (SP)
  130:  LWC1      F4, 94 (S0)
  134:  CVT.S.W   F4, F4
  138:  SWC1      F4, 14 (SP)
  13C:  LWC1      F12, A8 (S0)
  140:  CVT.S.W   F12, F12
  144:  LIF       F26, 6.28318
  150:  LWC1      F30, 98 (S0)
  154:  CVT.S.W   F30, F30
  158:  MUL.S     F12, F12, F26
  15C:  NOP
  160:  LWC1      F28, 9C (S0)
  164:  CVT.S.W   F28, F28
  168:  LIF       F24, 360.0
  170:  LWC1      F4, A0 (S0)
  174:  CVT.S.W   F4, F4
  178:  SWC1      F4, 18 (SP)
  17C:  JAL       ~Func:sin_rad
  180:  DIV.S     F12, F12, F24
  184:  CVT.D.S   F0, F0
  188:  LIF       F23, 1.875
  190:  MTC1      R0, F22
  194:  LWC1      F4, 10 (SP)
  198:  SUB.D     F0, F22, F0
  19C:  CVT.D.S   F20, F4
  1A0:  MUL.D     F20, F20, F0
  1A4:  NOP
  1A8:  LWC1      F12, A8 (S0)
  1AC:  CVT.S.W   F12, F12
  1B0:  MUL.S     F12, F12, F26
  1B4:  NOP
  1B8:  JAL       ~Func:sin_rad
  1BC:  DIV.S     F12, F12, F24
  1C0:  MUL.S     F0, F28, F0
  1C4:  NOP
  1C8:  LW        V0, A8 (S0)
  1CC:  SLL       V0, V0, 1
  1D0:  MTC1      V0, F12
  1D4:  NOP
  1D8:  CVT.S.W   F12, F12
  1DC:  MUL.S     F12, F12, F26
  1E0:  NOP
  1E4:  CVT.D.S   F0, F0
  1E8:  ADD.D     F20, F20, F0
  1EC:  DIV.S     F12, F12, F24
  1F0:  CVT.S.D   F20, F20
  1F4:  JAL       ~Func:sin_rad
  1F8:  SWC1      F20, 10 (SP)
  1FC:  LWC1      F12, A8 (S0)
  200:  CVT.S.W   F12, F12
  204:  MUL.S     F12, F12, F26
  208:  NOP
  20C:  LIF       F2, 90.0
  214:  NOP
  218:  MUL.S     F0, F0, F2
  21C:  NOP
  220:  LWC1      F4, 14 (SP)
  224:  ADD.S     F4, F4, F0
  228:  DIV.S     F12, F12, F24
  22C:  JAL       ~Func:sin_rad
  230:  SWC1      F4, 14 (SP)
  234:  LWC1      F12, A8 (S0)
  238:  CVT.S.W   F12, F12
  23C:  MUL.S     F12, F12, F26
  240:  NOP
  244:  CVT.D.S   F0, F0
  248:  SUB.D     F22, F22, F0
  24C:  CVT.D.S   F20, F30
  250:  MUL.D     F20, F20, F22
  254:  NOP
  258:  JAL       ~Func:sin_rad
  25C:  DIV.S     F12, F12, F24
  260:  LWC1      F4, 18 (SP)
  264:  MUL.S     F0, F4, F0
  268:  NOP
  26C:  CVT.D.S   F0, F0
  270:  ADD.D     F20, F20, F0
  274:  BEQ       R0, R0, .o3F0
  278:  LI        V0, 2D
        .o27C
  27C:  LW        V0, A8 (S0)
  280:  LW        V1, A4 (S0)
  284:  ADDU      V0, V0, V1
  288:  SW        V0, A8 (S0)
  28C:  SLTI      V0, V0, 5B
  290:  BNE       V0, R0, .o29C
  294:  LI        V0, 5A
  298:  SW        V0, A8 (S0)
        .o29C
  29C:  LWC1      F4, 90 (S0)
  2A0:  CVT.S.W   F4, F4
  2A4:  SWC1      F4, 10 (SP)
  2A8:  LWC1      F4, 94 (S0)
  2AC:  CVT.S.W   F4, F4
  2B0:  SWC1      F4, 14 (SP)
  2B4:  LWC1      F12, A8 (S0)
  2B8:  CVT.S.W   F12, F12
  2BC:  LIF       F26, 6.28318
  2C8:  LWC1      F30, 98 (S0)
  2CC:  CVT.S.W   F30, F30
  2D0:  MUL.S     F12, F12, F26
  2D4:  NOP
  2D8:  LWC1      F28, 9C (S0)
  2DC:  CVT.S.W   F28, F28
  2E0:  LIF       F24, 360.0
  2E8:  LWC1      F4, A0 (S0)
  2EC:  CVT.S.W   F4, F4
  2F0:  SWC1      F4, 18 (SP)
  2F4:  JAL       ~Func:sin_rad
  2F8:  DIV.S     F12, F12, F24
  2FC:  CVT.D.S   F0, F0
  300:  LIF       F23, 1.875
  308:  MTC1      R0, F22
  30C:  LWC1      F4, 10 (SP)
  310:  SUB.D     F0, F22, F0
  314:  CVT.D.S   F20, F4
  318:  MUL.D     F20, F20, F0
  31C:  NOP
  320:  LWC1      F12, A8 (S0)
  324:  CVT.S.W   F12, F12
  328:  MUL.S     F12, F12, F26
  32C:  NOP
  330:  JAL       ~Func:sin_rad
  334:  DIV.S     F12, F12, F24
  338:  MUL.S     F0, F28, F0
  33C:  NOP
  340:  LW        V0, A8 (S0)
  344:  SLL       V0, V0, 1
  348:  MTC1      V0, F12
  34C:  NOP
  350:  CVT.S.W   F12, F12
  354:  MUL.S     F12, F12, F26
  358:  NOP
  35C:  CVT.D.S   F0, F0
  360:  ADD.D     F20, F20, F0
  364:  DIV.S     F12, F12, F24
  368:  CVT.S.D   F20, F20
  36C:  JAL       ~Func:sin_rad
  370:  SWC1      F20, 10 (SP)
  374:  LWC1      F12, A8 (S0)
  378:  CVT.S.W   F12, F12
  37C:  MUL.S     F12, F12, F26
  380:  NOP
  384:  LIF       F2, 90.0
  38C:  NOP
  390:  MUL.S     F0, F0, F2
  394:  NOP
  398:  LWC1      F4, 14 (SP)
  39C:  ADD.S     F4, F4, F0
  3A0:  DIV.S     F12, F12, F24
  3A4:  JAL       ~Func:sin_rad
  3A8:  SWC1      F4, 14 (SP)
  3AC:  LWC1      F12, A8 (S0)
  3B0:  CVT.S.W   F12, F12
  3B4:  MUL.S     F12, F12, F26
  3B8:  NOP
  3BC:  CVT.D.S   F0, F0
  3C0:  SUB.D     F22, F22, F0
  3C4:  CVT.D.S   F20, F30
  3C8:  MUL.D     F20, F20, F22
  3CC:  NOP
  3D0:  JAL       ~Func:sin_rad
  3D4:  DIV.S     F12, F12, F24
  3D8:  LWC1      F4, 18 (SP)
  3DC:  MUL.S     F0, F4, F0
  3E0:  NOP
  3E4:  CVT.D.S   F0, F0
  3E8:  ADD.D     F20, F20, F0
  3EC:  LI        V0, 5A
        .o3F0
  3F0:  LW        V1, A8 (S0)
  3F4:  BNE       V1, V0, .o400
  3F8:  CVT.S.D   F30, F20
  3FC:  SW        S1, B0 (S0)
        .o400
  400:  LWC1      F4, 10 (SP)
  404:  TRUNC.W.S F4, F4
  408:  SWC1      F4, 84 (S0)
  40C:  LWC1      F4, 14 (SP)
  410:  TRUNC.W.S F4, F4
  414:  SWC1      F4, 88 (S0)
  418:  TRUNC.W.S F4, F30
  41C:  SWC1      F4, 8C (S0)
  420:  LW        RA, 28 (SP)
  424:  LW        S1, 24 (SP)
  428:  LW        S0, 20 (SP)
  42C:  LDC1      F30, 58 (SP)
  430:  LDC1      F28, 50 (SP)
  434:  LDC1      F26, 48 (SP)
  438:  LDC1      F24, 40 (SP)
  43C:  LDC1      F22, 38 (SP)
  440:  LDC1      F20, 30 (SP)
  444:  LI        V0, 2
  448:  JR        RA
  44C:  ADDIU     SP, SP, 60
}

#new:IdleAnimations $IdleAnimations_802189B0
{
	.Status:Normal    00410004
	.Status:Stone     00410000
	.Status:Sleep     00410029
	.Status:Poison    00410004
	.Status:Stop      00410000
	.Status:Static    00410004
	.Status:Paralyze  00410000
	.Status:Dizzy     00410026
	.Status:Fear      00410026
	.Status:End
}

#new:IdleAnimations $IdleAnimations_802189FC
{
	.Status:Normal    00410006
	.Status:Stone     00410002
	.Status:Sleep     0041002A
	.Status:Poison    00410006
	.Status:Stop      00410002
	.Status:Static    00410006
	.Status:Paralyze  00410002
	.Status:Dizzy     00410027
	.Status:Fear      00410027
	.Status:End
}

#new:DefenseTable $DefenseTable_80218A48
{
	.Element:Normal 00000000
	.Element:End
}

#new:StatusTable $StatusTable_80218A54
{
	.Status:Normal      0`
	.Status:Default     0`
	.Status:Sleep      50`
	.Status:Poison      0`
	.Status:Frozen      0`
	.Status:Dizzy      50`
	.Status:Fear        0`
	.Status:Static      0`
	.Status:Paralyze   75`
	.Status:Shrink     50`
	.Status:Stop       75`
	.Status:DefaultTurnMod    0`
	.Status:SleepTurnMod     -1`
	.Status:PoisonTurnMod     0`
	.Status:FrozenTurnMod     0`
	.Status:DizzyTurnMod     -1`
	.Status:FearTurnMod       0`
	.Status:StaticTurnMod     0`
	.Status:ParalyzeTurnMod   0`
	.Status:ShrinkTurnMod     0`
	.Status:StopTurnMod      -2`
	.Status:End
}

#new:PartsTable $PartsTable_80218B00
{
	00020000 01000000 021800FF $IdleAnimations_802189B0 $DefenseTable_80218A48 00000000 00000000 FEF60000 00000000
	80800001 02002800 02F000FF 00000000 $DefenseTable_80218A48 00000000 00000000 FEF60000 00000000
}

#new:Actor $Fuzzipede
{
	% stats
	[Index]        25b
	[Level]        43`b
	[MaxHP]        20`b
	[Coins]         0`b
	[Flags]       00000000
	[StatusTable] $StatusTable_80218A54
	% ai
	[PartsCount]    2`s
	[PartsTable]  $PartsTable_80218B00
	[Script]      $Script_Init_80218B70
	% move effectiveness
	[Escape]        0`b
	[Item]          0`b
	[AirLift]       0`b
	[Hurricane]     0`b % Bow's "Spook" as well
	[UpAndAway]    95`b
	[PowerBounce]  75`b
	[SpinSmash]     0`b % weight (0-4)
	% ui positions
	[Size]         26`b  38`b % width height
	[HealthBar]     0`b   0`b % dx dy
	[StatusTurn]  -10`b  20`b % dx dy
	[StatusIcon]   10`b  20`b % dx dy
}

#new:Script $Script_Init_80218B70
{
    0:  Call  BindTakeTurn  ( .Actor:Self $Script_TakeTurn_8021C1A4 )
   14:  Call  BindIdle      ( .Actor:Self $Script_Idle_80218D58 )
   28:  Call  BindHandleEvent   ( .Actor:Self $Script_HandleEvent_802197FC )
   3C:  Call  BindNextTurn  ( .Actor:Self $Script_NextTurn_80218C58 )
   50:  Call  SetActorVar   ( .Actor:Self 00000000 00000000 )
   68:  Call  SetActorVar   ( .Actor:Self 00000002 00000000 )
   80:  Call  SetActorPos   ( .Actor:Self  125`  33`  -15` )
   9C:  Call  SetHomePos    ( .Actor:Self  125`  33`  -15` )
   B8:  Call  HPBarToHome   ( .Actor:Self )
   C8:  Call  80253734      ( 00000001 )
   D8:  Return
   E0:  End
}

#new:Script $Script_NextTurn_80218C58
{
    0:  Call  GetActorVar   ( .Actor:Self 00000002 *Var0 )
   18:  If  *Var0  ==  00000000
   28:  	Call  SetActorVar   ( .Actor:Self 00000002 00000001 )
   40:  	Call  UseBattleCamPreset    ( 00000008 )
   50:  	Call  BattleCamTargetActor  ( .Actor:Self )
   60:  	Call  SetBattleCamZoom      (  200` )
   70:  	Call  SetBattleCamOffsetZ   (  10` )
   80:  	Call  MoveBattleCamOver     (  30` )
   90:  	Wait  30`
   9C:  	Call  ActorSpeak    ( 0007009C .Actor:Self 00000001 00410024 00410004 ) % Hey, fella! You wanna piece o' this? You got it! I ...
   BC:  	Call  UseBattleCamPreset    ( 00000002 )
   CC:  	Call  MoveBattleCamOver     (  30` )
   DC:  	Wait  30`
   E8:  EndIf
   F0:  Return
   F8:  End
}

#new:Script $Script_Idle_80218D58
{
    0:  Return
    8:  End
}

#new:Script $Script_80218D68
{
    0:  Call  SetHomePos        ( .Actor:Self  125`  33`  -15` )
   1C:  Call  SetActorJumpGravity   ( .Actor:Self *Fixed[1.8] )
   30:  Call  SetActorSpeed     ( .Actor:Self *Fixed[7.0] )
   44:  Call  SetActorYaw       ( .Actor:Self  180` )
   58:  Call  SetAnimation      ( .Actor:Self 00000001 0041000A )
   70:  Call  SetGoalToHome     ( .Actor:Self )
   80:  Call  GetGoalPos        ( .Actor:Self *Var0 *Var1 *Var2 )
   9C:  Sub   *Var0  0000003C
   AC:  Set   *Var1  00000000
   BC:  ExecWait  8029C12C
   C8:  Call  SetGoalToHome     ( .Actor:Self )
   D8:  Call  SetActorJumpGravity   ( .Actor:Self *Fixed[1.2] )
   EC:  Call  JumpToGoal        ( .Actor:Self  15` .False .True .False )
  10C:  Call  SetAnimation      ( .Actor:Self 00000001 00410004 )
  124:  Call  SetActorYaw       ( .Actor:Self  0` )
  138:  Call  SetIdleAnimations ( .Actor:Self 00000001 $IdleAnimations_802189B0 )
  150:  Call  BindHandleEvent   ( .Actor:Self $Script_HandleEvent_802197FC )
  164:  Call  SetActorFlagBits  ( .Actor:Self 00000A00 .False )
  17C:  Call  SetTargetOffset   ( .Actor:Self 00000001  2`  24` )
  198:  Call  8027D4C8  ( FFFFFF81 00000001 FFFFFFFE FFFFFFF6 )
  1B4:  Call  $Function_80218000    ( FFFFFFF6 00000014 0000000A 00000014 )
  1D0:  Call  SetPartFlagBits   ( .Actor:Self 00000001 00800000 .False )
  1EC:  Call  SetPartFlagBits   ( .Actor:Self 00000001 00020000 .True )
  208:  Call  SetPartFlagBits   ( .Actor:Self 00000002 00800000 .True )
  224:  Call  SetPartFlagBits   ( .Actor:Self 00000002 00020000 .False )
  240:  Call  HPBarToHome       ( .Actor:Self )
  250:  Return
  258:  End
}

#new:Script $Script_80218FC8
{
    0:  Call  SetHomePos        ( .Actor:Self  60`  0`  15` )
   1C:  Call  SetActorJumpGravity   ( .Actor:Self *Fixed[1.8] )
   30:  Call  SetActorSpeed     ( .Actor:Self *Fixed[7.0] )
   44:  Call  SetActorYaw       ( .Actor:Self  180` )
   58:  Call  SetAnimation      ( .Actor:Self 00000001 0041000A )
   70:  Call  SetGoalToHome     ( .Actor:Self )
   80:  Call  GetGoalPos        ( .Actor:Self *Var0 *Var1 *Var2 )
   9C:  ExecWait  8029C12C
   A8:  Call  SetActorYaw       ( .Actor:Self  0` )
   BC:  Call  SetIdleAnimations ( .Actor:Self 00000001 $IdleAnimations_802189B0 )
   D4:  Call  BindHandleEvent   ( .Actor:Self $Script_HandleEvent_802197FC )
   E8:  Call  SetActorFlagBits  ( .Actor:Self 00000A00 .False )
  100:  Call  SetTargetOffset   ( .Actor:Self 00000001  2`  24` )
  11C:  Call  8027D4C8  ( FFFFFF81 00000001 FFFFFFFE FFFFFFF6 )
  138:  Call  $Function_80218000    ( FFFFFFF6 00000014 0000000A 00000014 )
  154:  Call  SetPartFlagBits   ( .Actor:Self 00000001 00800000 .True )
  170:  Call  SetPartFlagBits   ( .Actor:Self 00000001 00020000 .False )
  18C:  Call  SetPartFlagBits   ( .Actor:Self 00000002 00800000 .False )
  1A8:  Call  SetPartFlagBits   ( .Actor:Self 00000002 00020000 .True )
  1C4:  Call  HPBarToHome       ( .Actor:Self )
  1D4:  Return
  1DC:  End
}

#new:Script $Script_802191AC
{
    0:  Call  SetHomePos    ( .Actor:Self  30`  115`  -28` )
   1C:  Call  SetActorJumpGravity   ( .Actor:Self *Fixed[1.8] )
   30:  Call  SetActorSpeed ( .Actor:Self *Fixed[7.0] )
   44:  Call  SetActorYaw   ( .Actor:Self  180` )
   58:  Call  SetAnimation  ( .Actor:Self 00000001 0041000A )
   70:  Set   *Var0  00000041
   80:  Set   *Var1  00000000
   90:  Set   *Var2  FFFFFFF1
   A0:  ExecWait  8029C12C
   AC:  Call  SetActorJumpGravity   ( .Actor:Self *Fixed[1.2] )
   C0:  Call  SetGoalPos    ( .Actor:Self  125`  33`  -15` )
   DC:  Call  JumpToGoal    ( .Actor:Self  15` .False .True .False )
   FC:  Call  SetActorYaw   ( .Actor:Self  0` )
  110:  Call  SetGoalPos    ( .Actor:Self  130`  100`  -28` )
  12C:  Call  JumpToGoal    ( .Actor:Self  10` .False .True .False )
  14C:  Call  SetActorJumpGravity   ( .Actor:Self *Fixed[1.2] )
  160:  Call  SetGoalPos    ( .Actor:Self  110`  109`  -28` )
  17C:  Call  JumpToGoal    ( .Actor:Self  5` .False .True .False )
  19C:  Call  SetGoalPos    ( .Actor:Self  90`  117`  -28` )
  1B8:  Call  JumpToGoal    ( .Actor:Self  5` .False .True .False )
  1D8:  Call  SetGoalPos    ( .Actor:Self  70`  120`  -28` )
  1F4:  Call  JumpToGoal    ( .Actor:Self  5` .False .True .False )
  214:  Call  SetGoalPos    ( .Actor:Self  50`  125`  -28` )
  230:  Call  JumpToGoal    ( .Actor:Self  5` .False .True .False )
  250:  Call  SetGoalPos    ( .Actor:Self  30`  130`  -28` )
  26C:  Call  JumpToGoal    ( .Actor:Self  5` .False .True .False )
  28C:  Thread
  294:  	Call  GetActorPos   ( .Actor:Self *Var0 *Var1 *Var2 )
  2B0:  	Loop  0000000A
  2BC:  		AddF  *Var1  *Fixed[-1.5]
  2CC:  		Call  SetActorPos   ( .Actor:Self *Var0 *Var1 *Var2 )
  2E8:  		Wait  1`
  2F4:  	EndLoop
  2FC:  EndThread
  304:  Set   *Var0  00000000
  314:  Loop  0000000A
  320:  	Add   *Var0  00000012
  330:  	Call  SetActorRotation  ( .Actor:Self *Var0 00000000 00000000 )
  34C:  	Wait  1`
  358:  EndLoop
  360:  Call  SetActorRotation  ( .Actor:Self 00000000 00000000 00000000 )
  37C:  Call  SetIdleAnimations ( .Actor:Self 00000001 $IdleAnimations_802189FC )
  394:  Call  SetAnimation      ( .Actor:Self 00000001 00410006 )
  3AC:  Call  BindHandleEvent   ( .Actor:Self $Script_HandleEvent_80219ED4 )
  3C0:  Call  SetActorFlagBits  ( .Actor:Self 00000800 .True )
  3D8:  Call  SetTargetOffset   ( .Actor:Self 00000001  2`  24` )
  3F4:  Call  8027D4C8  ( FFFFFF81 00000001 00000002 00000008 )
  410:  Call  $Function_80218000    ( FFFFFFF6 FFFFFFE7 0000000A FFFFFFE2 )
  42C:  Call  SetPartFlagBits   ( .Actor:Self 00000001 00800000 .True )
  448:  Call  SetPartFlagBits   ( .Actor:Self 00000001 00020000 .False )
  464:  Call  SetPartFlagBits   ( .Actor:Self 00000002 00800000 .False )
  480:  Call  SetPartFlagBits   ( .Actor:Self 00000002 00020000 .True )
  49C:  Call  HPBarToHome       ( .Actor:Self )
  4AC:  Return
  4B4:  End
}

#new:Script $Script_80219668
{
    0:  Call  8027D32C      ( FFFFFF81 )
   10:  Call  GetActorVar   ( .Actor:Self 00000000 *Var0 )
   28:  Switch  *Var0
   34:  	Case  ==  00000000
   40:  		Call  SetActorVar   ( .Actor:Self 00000000 00000001 )
   58:  	Case  ==  00000001
   64:  		Call  SetActorVar   ( .Actor:Self 00000000 00000002 )
   7C:  	Case  ==  00000002
   88:  		Call  SetActorVar   ( .Actor:Self 00000000 00000003 )
   A0:  	Case  ==  00000003
   AC:  		Call  SetActorVar   ( .Actor:Self 00000000 00000004 )
   C4:  	Case  ==  00000004
   D0:  		Call  SetActorVar   ( .Actor:Self 00000000 00000000 )
   E8:  EndSwitch
   F0:  Call  GetActorVar   ( .Actor:Self 00000000 *Var0 )
  108:  Switch  *Var0
  114:  	Case  ==  00000000
  120:  		ExecWait  $Script_80218D68
  12C:  	CaseOR  ==  00000001
  138:  	CaseOR  ==  00000002
  144:  	CaseOR  ==  00000004
  150:  		ExecWait  $Script_802191AC
  15C:  	EndCaseGroup
  164:  	Case  ==  00000003
  170:  		ExecWait  $Script_80218FC8
  17C:  EndSwitch
  184:  Return
  18C:  End
}

#new:Script $Script_HandleEvent_802197FC
{
    0:  Call  SetActorScale     ( .Actor:Self *Fixed[1.0] *Fixed[1.0] *Fixed[1.0] )
   1C:  Call  UseIdleAnimation  ( .Actor:Self .False )
   30:  Call  EnableIdleScript  ( .Actor:Self 00000000 )
   44:  Call  GetLastEvent      ( .Actor:Self *Var0 )
   58:  Switch  *Var0
   64:  	CaseOR  ==  .Event:HitCombo % 9
   70:  	CaseOR  ==  .Event:Hit % A
   7C:  		SetConst  *Var0  00000001
   8C:  		SetConst  *Var1  0041001B
   9C:  		ExecWait  DoNormalHit
   A8:  	EndCaseGroup
   B0:  	Case  ==  .Event:BurnHit % E
   BC:  		SetConst  *Var0  00000001
   CC:  		SetConst  *Var1  0041001E
   DC:  		SetConst  *Var2  0041001F
   EC:  		ExecWait  DoBurnHit
   F8:  	Case  ==  .Event:BurnDeath % 24
  104:  		SetConst  *Var0  00000001
  114:  		SetConst  *Var1  0041001E
  124:  		SetConst  *Var2  0041001F
  134:  		ExecWait  DoBurnHit
  140:  		SetConst  *Var0  00000001
  150:  		SetConst  *Var1  0041001F
  160:  		ExecWait  DoDeath
  16C:  		Return
  174:  	Case  ==  .Event:SpinSmashHit % B
  180:  		SetConst  *Var0  00000001
  190:  		SetConst  *Var1  0041001B
  1A0:  		ExecWait  DoSpinSmashHit
  1AC:  	Case  ==  .Event:SpinSmashDeath % 21
  1B8:  		SetConst  *Var0  00000001
  1C8:  		SetConst  *Var1  0041001B
  1D8:  		ExecWait  DoSpinSmashHit
  1E4:  		SetConst  *Var0  00000001
  1F4:  		SetConst  *Var1  0041001B
  204:  		ExecWait  DoDeath
  210:  		Return
  218:  	Case  ==  .Event:ShockHit % 2F
  224:  		Call  SetActorRotationOffset    ( .Actor:Self 00000000 00000000 00000000 )
  240:  		Call  SetActorRotation  ( .Actor:Self 00000000 00000000 00000000 )
  25C:  		SetConst  *Var0  00000001
  26C:  		SetConst  *Var1  0041001B
  27C:  		ExecWait  DoShockHit
  288:  		SetConst  *Var0  00000001
  298:  		SetConst  *Var1  00410008
  2A8:  		ExecWait  DoJumpBack
  2B4:  		ExecWait  $Script_80219668
  2C0:  	Case  ==  .Event:ShockDeath % 26
  2CC:  		Call  SetActorRotationOffset    ( .Actor:Self 00000000 00000000 00000000 )
  2E8:  		Call  SetActorRotation  ( .Actor:Self 00000000 00000000 00000000 )
  304:  		SetConst  *Var0  00000001
  314:  		SetConst  *Var1  0041001B
  324:  		ExecWait  DoShockHit
  330:  		SetConst  *Var0  00000001
  340:  		SetConst  *Var1  0041001B
  350:  		ExecWait  DoDeath
  35C:  		Return
  364:  	CaseOR  ==  00000017 % 17
  370:  	CaseOR  ==  .Event:Immune % 19
  37C:  		SetConst  *Var0  00000001
  38C:  		SetConst  *Var1  00410004
  39C:  		ExecWait  DoImmune
  3A8:  	EndCaseGroup
  3B0:  	Case  ==  .Event:Death % 20
  3BC:  		SetConst  *Var0  00000001
  3CC:  		SetConst  *Var1  0041001B
  3DC:  		ExecWait  DoNormalHit
  3E8:  		Wait  10`
  3F4:  		SetConst  *Var0  00000001
  404:  		SetConst  *Var1  0041001B
  414:  		ExecWait  DoDeath
  420:  		Return
  428:  	Case  ==  .Event:RecoverStatus % 31
  434:  		Call  SetActorYaw   ( .Actor:Self  0` )
  448:  		SetConst  *Var0  00000001
  458:  		SetConst  *Var1  00410004
  468:  		ExecWait  DoRecover
  474:  	Case  ==  .Event:SwapPartner % 3F
  480:  		Call  SetAnimation  ( .Actor:Self 00000001 00410019 )
  498:  		Call  UseBattleCamPreset    ( 00000001 )
  4A8:  		Call  SetActorJumpGravity   ( .Actor:Self *Fixed[1.0] )
  4BC:  		Call  GetActorPos   ( .Actor:Self *Var0 *Var1 *Var2 )
  4D8:  		Call  SetGoalPos    ( .Actor:Self *Var0 *Var1 *Var2 )
  4F4:  		Call  JumpToGoal    ( .Actor:Self  10` .False .True .False )
  514:  		Call  UseBattleCamPreset    ( 00000002 )
  524:  	Default
  52C:  EndSwitch
  534:  Call  EnableIdleScript  ( .Actor:Self 00000001 )
  548:  Call  UseIdleAnimation  ( .Actor:Self .True )
  55C:  Return
  564:  End
}

#new:Script $Script_80219D68
{
    0:  Call  GetLastDamage ( .Actor:Self *Var0 )
   14:  If  *Var0  <=  00000000
   24:  	Return
   2C:  EndIf
   34:  Call  8027D32C  ( FFFFFF81 )
   44:  ExecWait  $Script_8021A2E8
   50:  Call  SetIdleAnimations ( .Actor:Self 00000001 $IdleAnimations_802189B0 )
   68:  Call  BindHandleEvent   ( .Actor:Self $Script_HandleEvent_802197FC )
   7C:  Call  SetActorFlagBits  ( .Actor:Self 00000A00 .False )
   94:  Call  SetTargetOffset   ( .Actor:Self 00000001  2`  24` )
   B0:  Call  8027D4C8  ( FFFFFF81 00000001 FFFFFFFE FFFFFFF6 )
   CC:  Call  $Function_80218000    ( FFFFFFF6 00000014 0000000A 00000014 )
   E8:  Call  GetStatusFlags    ( .Actor:Self *VarA )
   FC:  If  *VarA  &  ~Flags:StatusFlags:Sleep|Frozen|Fear|Paralyze|Dizzy|Stone|Stop % 35D000
  10C:  	Call  SetActorVar       ( .Actor:Self 00000000 00000003 )
  124:  	Call  HPBarToCurrent    ( .Actor:Self )
  134:  Else
  13C:  	ExecWait  $Script_802191AC
  148:  	Wait  20`
  154:  EndIf
  15C:  Return
  164:  End
}

#new:Script $Script_HandleEvent_80219ED4
{
    0:  Call  SetActorScale     ( .Actor:Self *Fixed[1.0] *Fixed[1.0] *Fixed[1.0] )
   1C:  Call  UseIdleAnimation  ( .Actor:Self .False )
   30:  Call  EnableIdleScript  ( .Actor:Self 00000000 )
   44:  Call  GetLastEvent      ( .Actor:Self *Var0 )
   58:  Switch  *Var0
   64:  	Case  ==  .Event:HitCombo % 9
   70:  		SetConst  *Var0  00000001
   80:  		SetConst  *Var1  0041001C
   90:  		ExecWait  DoNormalHit
   9C:  	Case  ==  .Event:Hit % A
   A8:  		SetConst  *Var0  00000001
   B8:  		SetConst  *Var1  0041001C
   C8:  		ExecWait  DoNormalHit
   D4:  		ExecWait  $Script_80219D68
   E0:  	Case  ==  .Event:BurnHit % E
   EC:  		SetConst  *Var0  00000001
   FC:  		SetConst  *Var1  00410020
  10C:  		SetConst  *Var2  00410021
  11C:  		ExecWait  DoBurnHit
  128:  		ExecWait  $Script_80219D68
  134:  	Case  ==  .Event:BurnDeath % 24
  140:  		SetConst  *Var0  00000001
  150:  		SetConst  *Var1  00410020
  160:  		SetConst  *Var2  00410021
  170:  		ExecWait  DoBurnHit
  17C:  		SetConst  *Var0  00000001
  18C:  		SetConst  *Var1  00410021
  19C:  		ExecWait  DoDeath
  1A8:  		Return
  1B0:  	Case  ==  .Event:ShockHit % 2F
  1BC:  		Call  SetActorRotationOffset    ( .Actor:Self 00000000 00000000 00000000 )
  1D8:  		Call  SetActorRotation  ( .Actor:Self 00000000 00000000 00000000 )
  1F4:  		SetConst  *Var0  00000001
  204:  		SetConst  *Var1  0041001B
  214:  		ExecWait  DoShockHit
  220:  		SetConst  *Var0  00000001
  230:  		SetConst  *Var1  00410008
  240:  		ExecWait  DoJumpBack
  24C:  		ExecWait  $Script_80219668
  258:  	Case  ==  .Event:ShockDeath % 26
  264:  		Call  SetActorRotationOffset    ( .Actor:Self 00000000 00000000 00000000 )
  280:  		Call  SetActorRotation  ( .Actor:Self 00000000 00000000 00000000 )
  29C:  		SetConst  *Var0  00000001
  2AC:  		SetConst  *Var1  0041001B
  2BC:  		ExecWait  DoShockHit
  2C8:  		SetConst  *Var0  00000001
  2D8:  		SetConst  *Var1  0041001B
  2E8:  		ExecWait  DoDeath
  2F4:  		Return
  2FC:  	CaseOR  ==  00000017 % 17
  308:  	CaseOR  ==  .Event:Immune % 19
  314:  	CaseOR  ==  .Event:RecoverStatus % 31
  320:  		SetConst  *Var0  00000001
  330:  		SetConst  *Var1  00410006
  340:  		ExecWait  DoImmune
  34C:  	EndCaseGroup
  354:  	Case  ==  .Event:Death % 20
  360:  		SetConst  *Var0  00000001
  370:  		SetConst  *Var1  0041001C
  380:  		ExecWait  DoNormalHit
  38C:  		Wait  10`
  398:  		SetConst  *Var0  00000001
  3A8:  		SetConst  *Var1  0041001C
  3B8:  		ExecWait  DoDeath
  3C4:  		Return
  3CC:  	Default
  3D4:  EndSwitch
  3DC:  Call  EnableIdleScript  ( .Actor:Self 00000001 )
  3F0:  Call  UseIdleAnimation  ( .Actor:Self .True )
  404:  Return
  40C:  End
}

#new:Script $Script_8021A2E8
{
    0:  Call  GetActorVar   ( .Actor:Self 00000000 *Var0 )
   18:  Switch  *Var0
   24:  	Case  ==  00000000
   30:  		Call  GetActorPos   ( .Actor:Self *Var0 *Var1 *Var2 )
   4C:  		Sub   *Var0  0000003C
   5C:  		Set   *Var1  00000000
   6C:  		Call  SetActorJumpGravity   ( .Actor:Self *Fixed[1.2] )
   80:  		Call  SetGoalPos    ( .Actor:Self *Var0 *Var1 *Var2 )
   9C:  		Call  JumpToGoal    ( .Actor:Self  15` .False .True .False )
   BC:  	Case  ==  00000003
   C8:  	CaseOR  ==  00000001
   D4:  	CaseOR  ==  00000002
   E0:  	CaseOR  ==  00000004
   EC:  		Call  SetActorFlagBits  ( .Actor:Self 00000A00 .False )
  104:  		Call  SetAnimation      ( .Actor:Self 00000001 00410004 )
  11C:  		Call  SetActorRotation  ( .Actor:Self 00000000 00000000 000000B4 )
  138:  		Call  SetActorYaw       ( .Actor:Self  180` )
  14C:  		Call  SetActorJumpGravity   ( .Actor:Self *Fixed[0.001953125] )
  160:  		Call  GetActorPos       ( .Actor:Self *Var0 *Var1 *Var2 )
  17C:  		Call  GetStatusFlags    ( .Actor:Self *VarA )
  190:  		If  *VarA  &  ~Flags:StatusFlags:Shrink % 80000
  1A0:  			Set   *Var1  0000000B
  1B0:  		Else
  1B8:  			Set   *Var1  0000001C
  1C8:  		EndIf
  1D0:  		Call  SetGoalPos    ( .Actor:Self *Var0 *Var1 *Var2 )
  1EC:  		Call  JumpToGoal    ( .Actor:Self  8` .False .True .False )
  20C:  		Call  SetActorScale ( .Actor:Self *Fixed[1.1] *Fixed[0.8] *Fixed[1.0] )
  228:  		Wait  1`
  234:  		Call  SetActorScale ( .Actor:Self *Fixed[1.3] *Fixed[0.5] *Fixed[1.0] )
  250:  		Wait  1`
  25C:  		Thread
  264:  			Call  SetActorScale ( .Actor:Self *Fixed[1.1] *Fixed[0.8] *Fixed[1.0] )
  280:  			Wait  1`
  28C:  			Call  SetActorScale ( .Actor:Self *Fixed[1.0] *Fixed[1.0] *Fixed[1.0] )
  2A8:  		EndThread
  2B0:  		Thread
  2B8:  			Call  SetActorRotationOffset    ( .Actor:Self 00000000 0000000E 00000000 )
  2D4:  			Set   *Var0  000000B4
  2E4:  			Loop  00000008
  2F0:  				Sub   *Var0  00000016
  300:  				Call  SetActorRotation  ( .Actor:Self 00000000 00000000 *Var0 )
  31C:  				Wait  1`
  328:  			EndLoop
  330:  		EndThread
  338:  		Call  SetActorJumpGravity   ( .Actor:Self *Fixed[1.2] )
  34C:  		Add   *Var0  00000014
  35C:  		Call  SetGoalPos    ( .Actor:Self *Var0  0` *Var2 )
  378:  		Call  JumpToGoal    ( .Actor:Self  8` .False .True .False )
  398:  		Call  SetActorRotationOffset    ( .Actor:Self 00000000 00000000 00000000 )
  3B4:  		Call  SetActorRotation      ( .Actor:Self 00000000 00000000 00000000 )
  3D0:  	EndCaseGroup
  3D8:  EndSwitch
  3E0:  Return
  3E8:  End
}

#new:Script $Script_8021A6D8
{
    0:  Call  UseIdleAnimation  ( .Actor:Self .False )
   14:  Call  EnableIdleScript  ( .Actor:Self 00000000 )
   28:  Call  SetTargetActor    ( .Actor:Self .Actor:Player )
   3C:  Call  UseBattleCamPreset    ( 0000003F )
   4C:  Call  BattleCamTargetActor  ( .Actor:Self )
   5C:  Call  8024ECF8  ( FFFFFFFF 00000001 00000000 )
   74:  ExecWait  $Script_8021A2E8
   80:  Call  SetActorYaw       ( .Actor:Self  0` )
   94:  Call  SetAnimation      ( .Actor:Self 00000001 0041000A )
   AC:  Call  SetActorJumpGravity   ( .Actor:Self *Fixed[1.8] )
   C0:  Call  SetActorSpeed     ( .Actor:Self *Fixed[6.0] )
   D4:  Call  SetGoalToTarget   ( .Actor:Self )
   E4:  Call  GetGoalPos        ( .Actor:Self *Var0 *Var1 *Var2 )
  100:  Add   *Var0  00000032
  110:  Set   *Var1  00000000
  120:  ExecWait  8029C12C
  12C:  Call  SetAnimation      ( .Actor:Self 00000001 00410012 )
  144:  Wait  10`
  150:  Call  PlaySoundAtActor  ( .Actor:Self 000020DA )
  164:  Call  SetActorSounds    ( .Actor:Self .ActorSound:Jump 00000000 00000000 )
  180:  Call  EnemyTestTarget   ( .Actor:Self *VarF ~Flags:DamageType:0 00000000 00000001 00000010 )
  1A4:  Switch  *VarF
  1B0:  	CaseOR  ==  .HitResult:Miss % 6
  1BC:  	CaseOR  ==  .HitResult:Lucky % 5
  1C8:  		Set   *VarA  *Var0
  1D8:  		Call  SetAnimation  ( .Actor:Self 00000001 00410005 )
  1F0:  		Thread
  1F8:  			Set   *Var0  00000000
  208:  			Call  SetActorRotationOffset    ( .Actor:Self 00000000 0000000E 00000000 )
  224:  			Loop  00000014
  230:  				Add   *Var0  00000009
  240:  				Call  SetActorRotation  ( .Actor:Self 00000000 00000000 *Var0 )
  25C:  				Wait  1`
  268:  			EndLoop
  270:  		EndThread
  278:  		Call  SetGoalToTarget       ( .Actor:Self )
  288:  		Call  AddGoalPos    ( .Actor:Self  -20`  0`  5` )
  2A4:  		Call  GetGoalPos    ( .Actor:Self *Var0 *Var1 *Var2 )
  2C0:  		Call  SetActorJumpGravity   ( .Actor:Self *Fixed[1.8] )
  2D4:  		Call  SetGoalPos    ( .Actor:Self *Var0  -5` *Var2 )
  2F0:  		Call  JumpToGoal    ( .Actor:Self  20` .False .True .False )
  310:  		If  *VarF  ==  .HitResult:Lucky % 5
  320:  			Call  EnemyTestTarget   ( .Actor:Self *VarF ~Flags:DamageType:TriggerLucky 00000000 00000000 00000000 )
  344:  		EndIf
  34C:  		Wait  30`
  358:  		Call  ResetAllActorSounds   ( .Actor:Self )
  368:  		Thread
  370:  			Wait  5`
  37C:  			Call  SetAnimation  ( .Actor:Self 00000001 00410004 )
  394:  		EndThread
  39C:  		Call  SetActorRotationOffset    ( .Actor:Self 00000000 00000000 00000000 )
  3B8:  		Call  SetActorRotation      ( .Actor:Self 00000000 00000000 00000000 )
  3D4:  		Call  SetGoalPos    ( .Actor:Self *Var0  0` *Var2 )
  3F0:  		Call  JumpToGoal    ( .Actor:Self  10` .False .True .False )
  410:  		Wait  20`
  41C:  		Call  UseBattleCamPreset    ( 00000002 )
  42C:  		Call  AddActorDecoration    ( .Actor:Self 00000001 00000000 .Decoration:Sweat )
  448:  		ExecWait  $Script_80219668
  454:  		Call  RemoveActorDecoration ( .Actor:Self 00000001 00000000 )
  46C:  		Call  EnableIdleScript      ( .Actor:Self 00000001 )
  480:  		Call  UseIdleAnimation      ( .Actor:Self .True )
  494:  		Return
  49C:  EndSwitch
  4A4:  Call  SetAnimation  ( .Actor:Self 00000001 00410005 )
  4BC:  Thread
  4C4:  	Set   *Var0  00000000
  4D4:  	Call  SetActorRotationOffset    ( .Actor:Self 00000000 0000000E 00000000 )
  4F0:  	Loop  00000014
  4FC:  		Add   *Var0  00000009
  50C:  		Call  SetActorRotation  ( .Actor:Self 00000000 00000000 *Var0 )
  528:  		Wait  1`
  534:  	EndLoop
  53C:  EndThread
  544:  Call  SetGoalToTarget   ( .Actor:Self )
  554:  Call  SetActorJumpGravity   ( .Actor:Self *Fixed[1.4] )
  568:  Call  JumpToGoal        ( .Actor:Self  20` .False .True .False )
  588:  Call  SetActorScale     ( .Actor:Self *Fixed[1.1] *Fixed[0.8] *Fixed[1.0] )
  5A4:  Wait  1`
  5B0:  Call  SetActorScale     ( .Actor:Self *Fixed[1.3] *Fixed[0.5] *Fixed[1.0] )
  5CC:  Wait  1`
  5D8:  Call  ResetAllActorSounds   ( .Actor:Self )
  5E8:  Wait  2`
  5F4:  Call  EnemyDamageTarget ( .Actor:Self *VarF ~Flags:DamageType:0 00000000 00000000 00000003 00000020 )
  61C:  Call  SetActorScale     ( .Actor:Self *Fixed[1.1] *Fixed[0.8] *Fixed[1.0] )
  638:  Wait  1`
  644:  Call  SetActorScale     ( .Actor:Self *Fixed[1.0] *Fixed[1.0] *Fixed[1.0] )
  660:  Switch  *VarF
  66C:  	CaseOR  ==  .HitResult:Hit % 0
  678:  	CaseOR  ==  .HitResult:QuakeImmune % 2
  684:  		Call  UseBattleCamPreset    ( 00000002 )
  694:  		Call  SetAnimation  ( .Actor:Self 00000001 00410004 )
  6AC:  		Thread
  6B4:  			Set   *Var0  000000B4
  6C4:  			Call  SetActorRotationOffset    ( .Actor:Self 00000000 0000000E 00000000 )
  6E0:  			Loop  0000000A
  6EC:  				Sub   *Var0  00000012
  6FC:  				Call  SetActorRotation  ( .Actor:Self 00000000 00000000 *Var0 )
  718:  				Wait  1`
  724:  			EndLoop
  72C:  		EndThread
  734:  		Call  SetGoalToTarget       ( .Actor:Self )
  744:  		Call  GetGoalPos    ( .Actor:Self *Var0 *Var1 *Var2 )
  760:  		Add   *Var0  0000001E
  770:  		Set   *Var1  00000000
  780:  		Call  SetActorJumpGravity   ( .Actor:Self *Fixed[1.8] )
  794:  		Call  SetGoalPos    ( .Actor:Self *Var0 *Var1 *Var2 )
  7B0:  		Call  JumpToGoal    ( .Actor:Self  10` .False .True .False )
  7D0:  		Call  SetActorRotationOffset    ( .Actor:Self 00000000 00000000 00000000 )
  7EC:  		Call  SetActorRotation      ( .Actor:Self 00000000 00000000 00000000 )
  808:  		Add   *Var0  00000014
  818:  		Call  SetGoalPos    ( .Actor:Self *Var0 *Var1 *Var2 )
  834:  		Call  JumpToGoal    ( .Actor:Self  8` .False .True .False )
  854:  		Add   *Var0  0000000A
  864:  		Call  SetGoalPos    ( .Actor:Self *Var0 *Var1 *Var2 )
  880:  		Call  JumpToGoal    ( .Actor:Self  6` .False .True .False )
  8A0:  		Wait  8`
  8AC:  		ExecWait  $Script_80219668
  8B8:  	EndCaseGroup
  8C0:  EndSwitch
  8C8:  Call  EnableIdleScript  ( .Actor:Self 00000001 )
  8DC:  Call  UseIdleAnimation  ( .Actor:Self .True )
  8F0:  Return
  8F8:  End
}

#new:IntTable $IntTable_8021AFD8
{
	00000166 00000167 00000168
}

#new:IntTable $IntTable_8021AFE4
{
	00000049 0000004A 0000004B
}

#new:IntTable $IntTable_8021AFF0
{
	00000169 0000016A 0000016B
}

#new:IntTable $IntTable_8021AFFC
{
	0000004C 0000004D 0000004E
}

#new:Script $Script_8021B008
{
    0:  Label  0
    C:  Call  GetActorVar   ( .Actor:Self 00000001 *VarA )
   24:  Switch  *VarA
   30:  	Case  ==  00000000
   3C:  	Case  ==  00000001
   48:  		Call  GetActorPos   ( .Actor:Player *Var1 *Var2 *Var3 )
   64:  		Set   *Var2  00000000
   74:  		Sub   *Var3  00000001
   84:  		Call  $Function_802182E4    ( *Var4 *Var5 )
   98:  		Call  MakeItemEntity        ( *Var4 *Var1 *Var2 *Var3 .ItemSpawnMode:Decoration 00000000 )
   BC:  		Add   *Var1  0000001E
   CC:  		Call  $Function_802180CC    ( *Var0 *Var1 *Var2 *Var3 00000014 *Fixed[1.0] )
   F0:  		Add   *Var1  00000014
  100:  		Call  $Function_802180CC    ( *Var0 *Var1 *Var2 *Var3 0000000A *Fixed[1.0] )
  124:  		Add   *Var1  0000000A
  134:  		Call  $Function_802180CC    ( *Var0 *Var1 *Var2 *Var3 00000005 *Fixed[1.0] )
  158:  		Call  SetActorVar   ( .Actor:Self 00000001 00000000 )
  170:  	Case  ==  00000002
  17C:  		Call  ShowMessageBox    ( *Var5 0000003C )
  190:  		Sub   *Var1  00000096
  1A0:  		Call  $Function_802180CC    ( *Var0 *Var1 *Var2 *Var3 0000001E *Fixed[1.0] )
  1C4:  		Call  RemoveItemEntity  ( *Var0 )
  1D4:  		Call  SetActorVar       ( .Actor:Self 00000001 00000003 )
  1EC:  		Return
  1F4:  EndSwitch
  1FC:  Wait  1`
  208:  Goto  0
  214:  Return
  21C:  End
}

#new:Script $Script_8021B22C
{
    0:  Call  UseIdleAnimation  ( .Actor:Self .False )
   14:  Call  EnableIdleScript  ( .Actor:Self 00000000 )
   28:  Call  SetTargetActor    ( .Actor:Self .Actor:Player )
   3C:  Call  UseBattleCamPreset    ( 0000003F )
   4C:  Call  BattleCamTargetActor  ( .Actor:Self )
   5C:  Call  8024ECF8  ( FFFFFFFF 00000001 00000000 )
   74:  ExecWait  $Script_8021A2E8
   80:  Call  SetActorYaw       ( .Actor:Self  0` )
   94:  Call  SetAnimation      ( .Actor:Self 00000001 0041000A )
   AC:  Call  SetActorJumpGravity   ( .Actor:Self *Fixed[1.8] )
   C0:  Call  SetActorSpeed     ( .Actor:Self *Fixed[6.0] )
   D4:  Call  SetGoalToTarget   ( .Actor:Self )
   E4:  Call  GetGoalPos        ( .Actor:Self *Var0 *Var1 *Var2 )
  100:  Add   *Var0  00000050
  110:  Set   *Var1  00000000
  120:  ExecWait  8029C12C
  12C:  Call  SetAnimation      ( .Actor:Self 00000001 00410012 )
  144:  Wait  30`
  150:  Call  PlaySoundAtActor  ( .Actor:Self 000020DB )
  164:  Call  SetActorSounds    ( .Actor:Self .ActorSound:Jump 00000000 00000000 )
  180:  Call  EnemyTestTarget   ( .Actor:Self *VarF ~Flags:DamageType:0 00000000 00000001 00000010 )
  1A4:  Switch  *VarF
  1B0:  	CaseOR  ==  .HitResult:Miss % 6
  1BC:  	CaseOR  ==  .HitResult:Lucky % 5
  1C8:  		Call  SetAnimation  ( .Actor:Self 00000001 00410011 )
  1E0:  		Call  SetGoalToTarget       ( .Actor:Self )
  1F0:  		Call  SetActorJumpGravity   ( .Actor:Self *Fixed[0.001953125] )
  204:  		Call  GetGoalPos    ( .Actor:Self *Var0 *Var1 *Var2 )
  220:  		Sub   *Var0  0000001E
  230:  		Set   *Var1  00000000
  240:  		Call  SetGoalPos    ( .Actor:Self *Var0 *Var1 *Var2 )
  25C:  		Call  JumpToGoal    ( .Actor:Self  5` .False .True .False )
  27C:  		If  *VarF  ==  .HitResult:Lucky % 5
  28C:  			Call  EnemyTestTarget   ( .Actor:Self *VarF ~Flags:DamageType:TriggerLucky 00000000 00000000 00000000 )
  2B0:  		EndIf
  2B8:  		Call  ResetAllActorSounds   ( .Actor:Self )
  2C8:  		Call  SetAnimation  ( .Actor:Self 00000001 00410004 )
  2E0:  		Thread
  2E8:  			Set   *Var0  0000005A
  2F8:  			Call  SetActorRotationOffset    ( .Actor:Self 00000000 0000000E 00000000 )
  314:  			Loop  00000006
  320:  				Add   *Var0  0000000F
  330:  				Call  SetActorRotation  ( .Actor:Self 00000000 00000000 *Var0 )
  34C:  				Wait  1`
  358:  			EndLoop
  360:  		EndThread
  368:  		Sub   *Var0  0000001E
  378:  		Call  SetActorJumpGravity   ( .Actor:Self *Fixed[1.3] )
  38C:  		Call  SetGoalPos    ( .Actor:Self *Var0 *Var1 *Var2 )
  3A8:  		Call  JumpToGoal    ( .Actor:Self  6` .False .True .False )
  3C8:  		Thread
  3D0:  			Set   *Var0  000000B4
  3E0:  			Call  SetActorRotationOffset    ( .Actor:Self 00000000 0000000E 00000000 )
  3FC:  			Loop  00000007
  408:  				Add   *Var0  00000019
  418:  				Call  SetActorRotation  ( .Actor:Self 00000000 00000000 *Var0 )
  434:  				Wait  1`
  440:  			EndLoop
  448:  		EndThread
  450:  		Sub   *Var0  00000014
  460:  		Call  SetActorJumpGravity   ( .Actor:Self *Fixed[1.5] )
  474:  		Call  SetGoalPos    ( .Actor:Self *Var0 *Var1 *Var2 )
  490:  		Call  JumpToGoal    ( .Actor:Self  7` .False .True .False )
  4B0:  		Call  SetActorRotationOffset    ( .Actor:Self 00000000 00000000 00000000 )
  4CC:  		Call  SetActorRotation      ( .Actor:Self 00000000 00000000 00000000 )
  4E8:  		Wait  20`
  4F4:  		Call  UseBattleCamPreset    ( 00000002 )
  504:  		Call  AddActorDecoration    ( .Actor:Self 00000001 00000000 .Decoration:Sweat )
  520:  		ExecWait  $Script_80219668
  52C:  		Call  RemoveActorDecoration ( .Actor:Self 00000001 00000000 )
  544:  		Call  EnableIdleScript      ( .Actor:Self 00000001 )
  558:  		Call  UseIdleAnimation      ( .Actor:Self .True )
  56C:  		Return
  574:  	EndCaseGroup
  57C:  EndSwitch
  584:  Call  SetAnimation  ( .Actor:Self 00000001 00410011 )
  59C:  Call  SetGoalToTarget       ( .Actor:Self )
  5AC:  Call  SetActorJumpGravity   ( .Actor:Self *Fixed[0.001953125] )
  5C0:  Call  GetGoalPos    ( .Actor:Self *Var0 *Var1 *Var2 )
  5DC:  Add   *Var2  00000001
  5EC:  Call  SetGoalPos    ( .Actor:Self *Var0 *Var1 *Var2 )
  608:  Call  JumpToGoal    ( .Actor:Self  5` .False .True .False )
  628:  Call  SetActorScale ( .Actor:Self *Fixed[1.1] *Fixed[0.8] *Fixed[1.0] )
  644:  Wait  1`
  650:  Call  SetActorScale ( .Actor:Self *Fixed[1.3] *Fixed[0.5] *Fixed[1.0] )
  66C:  Wait  1`
  678:  Call  ResetAllActorSounds   ( .Actor:Self )
  688:  Wait  2`
  694:  Call  EnemyDamageTarget     ( .Actor:Self *VarF ~Flags:DamageType:0 00000000 00000000 00000003 00000020 )
  6BC:  Thread
  6C4:  	Call  SetActorScale ( .Actor:Self *Fixed[1.1] *Fixed[0.8] *Fixed[1.0] )
  6E0:  	Wait  1`
  6EC:  	Call  SetActorScale ( .Actor:Self *Fixed[1.0] *Fixed[1.0] *Fixed[1.0] )
  708:  EndThread
  710:  Switch  *VarF
  71C:  	CaseOR  ==  .HitResult:Hit % 0
  728:  	CaseOR  ==  .HitResult:QuakeImmune % 2
  734:  		Set   *Flag[00]  .False
  744:  		Call  GetBattleFlags    ( *Var0 )
  754:  		If  *Var0  !&  80000000
  764:  			Set   *Flag[00]  .True
  774:  		EndIf
  77C:  		Call  GetLastDamage ( .Actor:Player *Var0 )
  790:  		If  *Var0  <=  00000000
  7A0:  			Set   *Flag[00]  .False
  7B0:  		EndIf
  7B8:  		Call  GetStatusFlags    ( .Actor:Self *Var0 )
  7CC:  		If  *Var0  &  ~Flags:StatusFlags:Shrink % 80000
  7DC:  			Set   *Flag[00]  .False
  7EC:  		EndIf
  7F4:  		Call  GetStatusFlags    ( .Actor:Player *Var0 )
  808:  		If  *Var0  &  ~Flags:StatusFlags:Stone|RightOn % 40100000
  818:  			Set   *Flag[00]  .False
  828:  		EndIf
  830:  		If  *Flag[00]  ==  .True
  840:  			Call  SetActorVar   ( .Actor:Self 00000001 00000001 )
  858:  			Exec  $Script_8021B008
  864:  			Call  SetAnimation  ( .Actor:Self 00000001 00410004 )
  87C:  			Call  GetGoalPos    ( .Actor:Self *Var0 *Var1 *Var2 )
  898:  			Add   *Var0  00000028
  8A8:  			Set   *Var1  00000000
  8B8:  			Call  SetActorJumpGravity   ( .Actor:Self *Fixed[1.8] )
  8CC:  			Call  SetGoalPos    ( .Actor:Self *Var0 *Var1 *Var2 )
  8E8:  			Call  JumpToGoal    ( .Actor:Self  10` .False .True .False )
  908:  			Add   *Var0  0000001E
  918:  			Call  SetGoalPos    ( .Actor:Self *Var0 *Var1 *Var2 )
  934:  			Call  JumpToGoal    ( .Actor:Self  8` .False .True .False )
  954:  			Add   *Var0  00000014
  964:  			Call  SetGoalPos    ( .Actor:Self *Var0 *Var1 *Var2 )
  980:  			Call  JumpToGoal    ( .Actor:Self  6` .False .True .False )
  9A0:  			Add   *Var0  0000000A
  9B0:  			Call  SetGoalPos    ( .Actor:Self *Var0 *Var1 *Var2 )
  9CC:  			Call  JumpToGoal    ( .Actor:Self  4` .False .True .False )
  9EC:  			Call  SetAnimation  ( .Actor:Self 00000001 00410004 )
  A04:  			Wait  8`
  A10:  			Label  0
  A1C:  			Call  GetActorVar   ( .Actor:Self 00000001 *Var0 )
  A34:  			If  *Var0  !=  00000000
  A44:  				Wait  1`
  A50:  				Goto  0
  A5C:  			EndIf
  A64:  			Call  GetActorPos   ( .Actor:Self *Var0 *Var1 *Var2 )
  A80:  			Loop  00000003
  A8C:  				Sub   *Var0  0000000A
  A9C:  				Call  SetGoalPos    ( .Actor:Self *Var0 *Var1 *Var2 )
  AB8:  				Call  JumpToGoal    ( .Actor:Self  6` .False .True .False )
  AD8:  			EndLoop
  AE0:  			Wait  10`
  AEC:  			Call  SetActorVar   ( .Actor:Self 00000001 00000002 )
  B04:  			Call  PlayEffect    ( ~FX:Firework:White *Var0 *Var1 *Var2 *Fixed[1.0] 00000000 00000000 00000000 00000000 00000000 00000000 00000000 00000000 )
  B48:  			Call  $Function_802184A0    ( 000000C8 0000000A )
  B5C:  			Call  PlaySoundAtActor      ( .Actor:Self 000020DC )
  B70:  			Call  SetAnimation  ( .Actor:Self 00000001 00410013 )
  B88:  			Wait  20`
  B94:  			Call  SetAnimation  ( .Actor:Self 00000001 00410004 )
  BAC:  		Else
  BB4:  			Call  SetAnimation  ( .Actor:Self 00000001 00410004 )
  BCC:  			Call  GetGoalPos    ( .Actor:Self *Var0 *Var1 *Var2 )
  BE8:  			Add   *Var0  00000028
  BF8:  			Set   *Var1  00000000
  C08:  			Call  SetActorJumpGravity   ( .Actor:Self *Fixed[1.8] )
  C1C:  			Call  SetGoalPos    ( .Actor:Self *Var0 *Var1 *Var2 )
  C38:  			Call  JumpToGoal    ( .Actor:Self  10` .False .True .False )
  C58:  			Add   *Var0  0000001E
  C68:  			Call  SetGoalPos    ( .Actor:Self *Var0 *Var1 *Var2 )
  C84:  			Call  JumpToGoal    ( .Actor:Self  8` .False .True .False )
  CA4:  			Add   *Var0  00000014
  CB4:  			Call  SetGoalPos    ( .Actor:Self *Var0 *Var1 *Var2 )
  CD0:  			Call  JumpToGoal    ( .Actor:Self  6` .False .True .False )
  CF0:  			Add   *Var0  0000000A
  D00:  			Call  SetGoalPos    ( .Actor:Self *Var0 *Var1 *Var2 )
  D1C:  			Call  JumpToGoal    ( .Actor:Self  4` .False .True .False )
  D3C:  			Call  SetAnimation  ( .Actor:Self 00000001 00410004 )
  D54:  			Wait  8`
  D60:  			Wait  10`
  D6C:  		EndIf
  D74:  		Call  UseBattleCamPreset    ( 00000002 )
  D84:  		ExecWait  $Script_80219668
  D90:  	EndCaseGroup
  D98:  EndSwitch
  DA0:  Call  EnableIdleScript  ( .Actor:Self 00000001 )
  DB4:  Call  UseIdleAnimation  ( .Actor:Self .True )
  DC8:  Return
  DD0:  End
}

#new:Script $Script_8021C004
{
    0:  Call  UseIdleAnimation  ( .Actor:Self .False )
   14:  Call  EnableIdleScript  ( .Actor:Self 00000000 )
   28:  Call  UseBattleCamPreset    ( 0000000E )
   38:  Call  BattleCamTargetActor  ( .Actor:Self )
   48:  Call  MoveBattleCamOver (  20` )
   58:  Wait  20`
   64:  Call  SetAnimation      ( .Actor:Self 00000001 00410012 )
   7C:  Wait  30`
   88:  Call  SetAnimation      ( .Actor:Self 00000001 00410004 )
   A0:  Thread
   A8:  	Wait  5`
   B4:  	Call  PlaySoundAtActor  ( .Actor:Self 0000206D )
   C8:  	Call  PlaySoundAtActor  ( .Actor:Self 00000214 )
   DC:  	Wait  30`
   E8:  	Call  PlaySoundAtActor  ( .Actor:Self 0000025C )
   FC:  EndThread
  104:  Thread
  10C:  	Call  8026BF48  ( 00000001 )
  11C:  	Call  HealActor ( .Actor:Self 00000004 .False )
  134:  	Call  8026BF48  ( 00000000 )
  144:  EndThread
  14C:  Call  WaitForBuffDone ( )
  158:  Call  UseBattleCamPreset    ( 00000002 )
  168:  Call  EnableIdleScript      ( .Actor:Self 00000001 )
  17C:  Call  UseIdleAnimation      ( .Actor:Self .True )
  190:  Return
  198:  End
}

#new:Script $Script_TakeTurn_8021C1A4
{
    0:  Call  GetActorVar   ( .Actor:Self 00000000 *Var0 )
   18:  Switch  *Var0
   24:  	CaseOR  ==  00000000
   30:  	CaseOR  ==  00000003
   3C:  		Call  GetActorHP    ( .Actor:Self *Var0 )
   50:  		Call  GetEnemyMaxHP ( .Actor:Self *Var1 )
   64:  		Mul   *Var0  00000064
   74:  		Div   *Var0  *Var1
   84:  		If  *Var0  <=  00000023
   94:  			Call  RandInt   ( 000003E8 *Var0 )
   A8:  			If  *Var0  <  000001F4
   B8:  				ExecWait  $Script_8021C004
   C4:  				Return
   CC:  			EndIf
   D4:  		EndIf
   DC:  	EndCaseGroup
   E4:  EndSwitch
   EC:  Call  RandInt   ( 000003E8 *Var0 )
  100:  If  *Var0  <  000001F4
  110:  	ExecWait  $Script_8021A6D8
  11C:  Else
  124:  	Call  $Function_802184F8    ( *Var0 )
  134:  	If  *Var0  ==  00000000
  144:  		ExecWait  $Script_8021B22C
  150:  	Else
  158:  		ExecWait  $Script_8021A6D8
  164:  	EndIf
  16C:  EndIf
  174:  Return
  17C:  End
}

PADDING: 8021C328 to 8021C330 (005725C8 to 005725D0)
00000000 00000000

% Origin: HEURISTIC
#new:Script $Script_8021C330
{
    0:  Set   *VarA  *Var0
   10:  Label  0
   1C:  Call  $Function_80218560    ( 00000000 )
   2C:  Call  TranslateModel        ( *VarA *Var0 *Var1 *Var2 )
   48:  Call  RotateModel   ( *VarA FFFFFFEC 00000000 00000000 00000001 )
   68:  Wait  1`
   74:  Loop
   80:  	Call  $Function_80218560    ( 00000001 )
   90:  	Call  TranslateModel        ( *VarA *Var0 *Var1 *Var2 )
   AC:  	Call  RotateModel   ( *VarA FFFFFFEC 00000000 00000000 00000001 )
   CC:  	Wait  1`
   D8:  	If  *VarB  ==  00000001
   E8:  		BreakLoop
   F0:  	EndIf
   F8:  EndLoop
  100:  Call  TranslateModel    ( *VarA *Var0 *Var1 *Var2 )
  11C:  Call  RotateModel       ( *VarA FFFFFFF9 00000000 00000000 00000001 )
  13C:  Wait  5`
  148:  Call  TranslateModel    ( *VarA *Var0 *Var1 *Var2 )
  164:  Call  RotateModel       ( *VarA FFFFFFE5 00000000 00000000 00000001 )
  184:  Wait  2`
  190:  Call  TranslateModel    ( *VarA *Var0 *Var1 *Var2 )
  1AC:  Call  RotateModel       ( *VarA FFFFFFFB 00000000 00000000 00000001 )
  1CC:  Wait  3`
  1D8:  Call  TranslateModel    ( *VarA *Var0 *Var1 *Var2 )
  1F4:  Call  RotateModel       ( *VarA FFFFFFEC 00000000 00000000 00000001 )
  214:  Wait  5`
  220:  Loop
  22C:  	Call  $Function_80218560    ( 00000002 )
  23C:  	Call  TranslateModel        ( *VarA *Var0 *Var1 *Var2 )
  258:  	Call  RotateModel   ( *VarA FFFFFFEC 00000000 00000000 00000001 )
  278:  	Wait  1`
  284:  	If  *VarB  ==  00000002
  294:  		BreakLoop
  29C:  	EndIf
  2A4:  EndLoop
  2AC:  Call  RandInt   ( 00000050 *VarB )
  2C0:  Add   *VarB  0000001E
  2D0:  Loop  *VarB
  2DC:  	Call  TranslateModel    ( *VarA *Var0 *Var1 *Var2 )
  2F8:  	Call  RotateModel       ( *VarA FFFFFFEC 00000000 00000000 00000001 )
  318:  	Wait  1`
  324:  EndLoop
  32C:  Call  RandInt   ( 00000005 *Var0 )
  340:  If  *Var0  !=  00000000
  350:  	Goto  0
  35C:  EndIf
  364:  Call  $Function_80218560    ( 00000003 )
  374:  Call  TranslateModel        ( *VarA *Var0 *Var1 *Var2 )
  390:  Call  RotateModel   ( *VarA FFFFFFEC 00000000 00000000 00000001 )
  3B0:  Wait  1`
  3BC:  Loop
  3C8:  	Call  $Function_80218560    ( 00000001 )
  3D8:  	Call  TranslateModel        ( *VarA *Var0 *Var1 *Var2 )
  3F4:  	Call  RotateModel   ( *VarA FFFFFFEC 00000000 00000000 00000001 )
  414:  	Wait  1`
  420:  	If  *VarB  ==  00000001
  430:  		BreakLoop
  438:  	EndIf
  440:  EndLoop
  448:  Call  TranslateModel    ( *VarA *Var0 *Var1 *Var2 )
  464:  Call  RotateModel       ( *VarA FFFFFFF9 00000000 00000000 00000001 )
  484:  Wait  5`
  490:  Call  TranslateModel    ( *VarA *Var0 *Var1 *Var2 )
  4AC:  Call  RotateModel       ( *VarA FFFFFFE5 00000000 00000000 00000001 )
  4CC:  Wait  2`
  4D8:  Call  TranslateModel    ( *VarA *Var0 *Var1 *Var2 )
  4F4:  Call  RotateModel       ( *VarA FFFFFFFB 00000000 00000000 00000001 )
  514:  Wait  3`
  520:  Call  TranslateModel    ( *VarA *Var0 *Var1 *Var2 )
  53C:  Call  RotateModel       ( *VarA FFFFFFEC 00000000 00000000 00000001 )
  55C:  Wait  5`
  568:  Loop
  574:  	Call  $Function_80218560    ( 00000002 )
  584:  	Call  TranslateModel        ( *VarA *Var0 *Var1 *Var2 )
  5A0:  	Call  RotateModel   ( *VarA FFFFFFEC 00000000 00000000 00000001 )
  5C0:  	Wait  1`
  5CC:  	If  *VarB  ==  00000002
  5DC:  		BreakLoop
  5E4:  	EndIf
  5EC:  EndLoop
  5F4:  Call  RandInt   ( 00000050 *VarB )
  608:  Add   *VarB  0000001E
  618:  Loop  *VarB
  624:  	Call  TranslateModel    ( *VarA *Var0 *Var1 *Var2 )
  640:  	Call  RotateModel       ( *VarA FFFFFFEC 00000000 00000000 00000001 )
  660:  	Wait  1`
  66C:  EndLoop
  674:  Goto  0
  680:  Return
  688:  End
}

% Origin: HEURISTIC
#new:Script $Script_8021C9C0
{
    0:  Set   *VarA  *Var0
   10:  Loop
   1C:  	Call  TranslateModel    ( *VarA 00000001 00000000 00000000 )
   38:  	Wait  2`
   44:  	Call  TranslateModel    ( *VarA 00000001 00000000 00000000 )
   60:  	Wait  2`
   6C:  	Call  TranslateModel    ( *VarA 00000001 FFFFFFFF 00000000 )
   88:  	Wait  2`
   94:  	Call  TranslateModel    ( *VarA 00000002 FFFFFFFF 00000000 )
   B0:  	Wait  2`
   BC:  	Call  TranslateModel    ( *VarA 00000002 FFFFFFFF 00000000 )
   D8:  	Wait  2`
   E4:  	Call  TranslateModel    ( *VarA 00000002 FFFFFFFF 00000000 )
  100:  	Wait  2`
  10C:  	Call  TranslateModel    ( *VarA 00000003 FFFFFFFE 00000000 )
  128:  	Wait  2`
  134:  	Call  TranslateModel    ( *VarA 00000003 FFFFFFFE 00000000 )
  150:  	Wait  2`
  15C:  	Call  TranslateModel    ( *VarA 00000003 FFFFFFFD 00000000 )
  178:  	Wait  2`
  184:  	Call  TranslateModel    ( *VarA 00000003 FFFFFFFD 00000000 )
  1A0:  	Wait  2`
  1AC:  	Call  TranslateModel    ( *VarA 00000003 FFFFFFFD 00000000 )
  1C8:  	Wait  2`
  1D4:  	Call  TranslateModel    ( *VarA 00000003 FFFFFFFE 00000000 )
  1F0:  	Wait  2`
  1FC:  	Call  TranslateModel    ( *VarA 00000002 FFFFFFFE 00000000 )
  218:  	Wait  2`
  224:  	Call  TranslateModel    ( *VarA 00000002 FFFFFFFF 00000000 )
  240:  	Wait  2`
  24C:  	Call  TranslateModel    ( *VarA 00000001 00000000 00000000 )
  268:  	Wait  2`
  274:  	Call  TranslateModel    ( *VarA 00000001 00000001 00000000 )
  290:  	Wait  2`
  29C:  	Call  TranslateModel    ( *VarA 00000000 00000001 00000000 )
  2B8:  	Wait  2`
  2C4:  	Call  TranslateModel    ( *VarA FFFFFFFF 00000001 00000000 )
  2E0:  	Wait  2`
  2EC:  	Call  TranslateModel    ( *VarA FFFFFFFF 00000001 00000000 )
  308:  	Wait  2`
  314:  	Call  TranslateModel    ( *VarA FFFFFFFF 00000000 00000000 )
  330:  	Wait  2`
  33C:  	Call  TranslateModel    ( *VarA FFFFFFFF 00000000 00000000 )
  358:  	Wait  2`
  364:  	Call  TranslateModel    ( *VarA 00000000 00000000 00000000 )
  380:  	Wait  2`
  38C:  EndLoop
  394:  Return
  39C:  End
}

% Origin: HEURISTIC
#new:IntTable $IntTable_8021CD64
{
	00000000 FFFFFFFF FFFFFFFF FFFFFFFE FFFFFFFE FFFFFFFD FFFFFFFB FFFFFFF8
	FFFFFFF8 FFFFFFF9 FFFFFFFA FFFFFFFC FFFFFFFE FFFFFFFF 00000000 000000FF
}

% Origin: HEURISTIC
#new:Script $Script_8021CDA4
{
    0:  Set   *VarA  *Var0
   10:  Set   *VarB  *Var1
   20:  Set   *Var5  00000005
   30:  UseIntBuffer  $IntTable_8021CD64
   3C:  Label  0
   48:  Get1Int  *Var1
   54:  If  *Var1  ==  000000FF
   64:  	UseIntBuffer  $IntTable_8021CD64
   70:  	Get1Int  *Var1
   7C:  EndIf
   84:  Set   *Var0  *Var5
   94:  Call  TranslateModel    ( *VarA *Var0 *Var1 00000000 )
   B0:  Wait  1`
   BC:  Add   *Var5  00000001
   CC:  Set   *VarC  *VarB
   DC:  Sub   *VarC  00000014
   EC:  If  *Var5  >  *VarC
   FC:  	Goto  1
  108:  EndIf
  110:  Set   *Var0  *Var5
  120:  Call  TranslateModel    ( *VarA *Var0 *Var1 00000000 )
  13C:  Wait  1`
  148:  Add   *Var5  00000001
  158:  Set   *VarC  *VarB
  168:  Sub   *VarC  00000014
  178:  If  *Var5  >  *VarC
  188:  	Goto  1
  194:  EndIf
  19C:  Goto  0
  1A8:  Label  1
  1B4:  Set   *Var2  00000000
  1C4:  Loop  00000014
  1D0:  	Add   *Var5  00000001
  1E0:  	Sub   *Var1  00000002
  1F0:  	Set   *Var0  *Var5
  200:  	Call  TranslateModel    ( *VarA *Var0 *Var1 00000000 )
  21C:  	Wait  1`
  228:  EndLoop
  230:  Sub   *Var5  00000118
  240:  Set   *Var1  00000000
  250:  Goto  0
  25C:  Return
  264:  End
}

#new:Script $Script_8021D010
{
    0:  Set   *VarA  *Var0
   10:  Loop
   1C:  	Call  TranslateModel    ( *VarA 00000000 00000000 00000000 )
   38:  	Wait  2`
   44:  	Call  TranslateModel    ( *VarA 00000000 00000000 00000000 )
   60:  	Wait  2`
   6C:  	Call  TranslateModel    ( *VarA 00000000 FFFFFFFF 00000000 )
   88:  	Wait  2`
   94:  	Call  TranslateModel    ( *VarA 00000000 FFFFFFFF 00000000 )
   B0:  	Wait  2`
   BC:  	Call  TranslateModel    ( *VarA 00000000 FFFFFFFF 00000000 )
   D8:  	Wait  2`
   E4:  	Call  TranslateModel    ( *VarA 00000000 FFFFFFFF 00000000 )
  100:  	Wait  2`
  10C:  	Call  TranslateModel    ( *VarA 00000000 FFFFFFFE 00000000 )
  128:  	Wait  2`
  134:  	Call  TranslateModel    ( *VarA 00000000 FFFFFFFE 00000000 )
  150:  	Wait  2`
  15C:  	Call  TranslateModel    ( *VarA 00000000 FFFFFFFD 00000000 )
  178:  	Wait  2`
  184:  	Call  TranslateModel    ( *VarA 00000000 FFFFFFFD 00000000 )
  1A0:  	Wait  2`
  1AC:  	Call  TranslateModel    ( *VarA 00000000 FFFFFFFD 00000000 )
  1C8:  	Wait  2`
  1D4:  	Call  TranslateModel    ( *VarA 00000000 FFFFFFFE 00000000 )
  1F0:  	Wait  2`
  1FC:  	Call  TranslateModel    ( *VarA 00000000 FFFFFFFE 00000000 )
  218:  	Wait  2`
  224:  	Call  TranslateModel    ( *VarA 00000000 FFFFFFFF 00000000 )
  240:  	Wait  2`
  24C:  	Call  TranslateModel    ( *VarA 00000000 00000000 00000000 )
  268:  	Wait  2`
  274:  	Call  TranslateModel    ( *VarA 00000000 00000001 00000000 )
  290:  	Wait  2`
  29C:  	Call  TranslateModel    ( *VarA 00000000 00000001 00000000 )
  2B8:  	Wait  2`
  2C4:  	Call  TranslateModel    ( *VarA 00000000 00000001 00000000 )
  2E0:  	Wait  2`
  2EC:  	Call  TranslateModel    ( *VarA 00000000 00000001 00000000 )
  308:  	Wait  2`
  314:  	Call  TranslateModel    ( *VarA 00000000 00000000 00000000 )
  330:  	Wait  2`
  33C:  	Call  TranslateModel    ( *VarA 00000000 00000000 00000000 )
  358:  	Wait  2`
  364:  	Call  TranslateModel    ( *VarA 00000000 00000000 00000000 )
  380:  	Wait  2`
  38C:  EndLoop
  394:  Return
  39C:  End
}

#new:Script $Script_BeforeBattle_8021D3B4
{
    0:  Call  SetSpriteShading  ( FFFFFFFF )
   10:  Call  SetCamBGColor     ( .Cam:Battle  0`  0`  0` )
   2C:  Thread
   34:  	Set   *Var0  00000013
   44:  	Exec  $Script_8021D010
   50:  	Wait  4`
   5C:  	Set   *Var0  00000014
   6C:  	Exec  $Script_8021D010
   78:  	Wait  4`
   84:  	Set   *Var0  00000015
   94:  	Exec  $Script_8021D010
   A0:  	Wait  4`
   AC:  	Set   *Var0  00000016
   BC:  	Exec  $Script_8021D010
   C8:  EndThread
   D0:  Thread
   D8:  	Set   *Var0  0000000E
   E8:  	Exec  $Script_8021D010
   F4:  	Wait  4`
  100:  	Set   *Var0  0000000F
  110:  	Exec  $Script_8021D010
  11C:  	Wait  4`
  128:  	Set   *Var0  00000010
  138:  	Exec  $Script_8021D010
  144:  	Wait  4`
  150:  	Set   *Var0  00000011
  160:  	Exec  $Script_8021D010
  16C:  	Wait  4`
  178:  	Set   *Var0  00000012
  188:  	Exec  $Script_8021D010
  194:  EndThread
  19C:  Set   *Var0  0000000B
  1AC:  Exec  $Script_8021D010
  1B8:  Set   *Var0  0000000C
  1C8:  Exec  $Script_8021D010
  1D4:  Return
  1DC:  End
}

#new:Script $Script_AfterBattle_8021D598
{
    0:  Return
    8:  End
}

#new:ForegroundModelList $ForegroundModelList_8021D5A8
{
	~Model:kgr_bt01:hone
	~Model:kgr_bt01:hako4
	00000000
}

#new:Stage $Stage_8021D5B4
{
	$ASCII_8021D660  % kgr_tex
	$ASCII_8021D650  % kgr_bt01_shape
	$ASCII_8021D640  % kgr_bt01_hit
	$Script_BeforeBattle_8021D3B4
	$Script_AfterBattle_8021D598
	00000000
	$ForegroundModelList_8021D5A8
	00000000
	00000000
	00000000
}

PADDING: 8021D5DC to 8021D5E0 (0057387C to 00573880)
00000000

#new:Formation $Formation_00
{
	$Fuzzipede 00000002 0000000A 00000000 00000000 00000000 00000000
}

#new:FormationTable $FormationTable
{
	$SJIS_8021D668 00000001 $Formation_00 $Stage_8021D5B4 00000000
	00000000 00000000 00000000 00000000 00000000
}

#new:StageTable $StageTable
{
	$ASCII_8021D670 $Stage_8021D5B4
	00000000 00000000
}

PADDING: 8021D634 to 8021D640 (005738D4 to 005738E0)
00000000 00000000 00000000

#new:ASCII $ASCII_8021D640
{
	"kgr_bt01_hit"
}

#new:ASCII $ASCII_8021D650
{
	"kgr_bt01_shape"
}

#new:ASCII $ASCII_8021D660
{
	"kgr_tex"
}

#new:SJIS $SJIS_8021D668
{
	ケムシ % kemushi
}

#new:ASCII $ASCII_8021D670
{
	"kgr_01"
}

PADDING: 8021D678 to 8021D680 (00573918 to 00573920)
00000000 00000000

