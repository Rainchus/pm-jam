% Script File: 14 Area JAN.bscr
% Decoded from: 573920 to 584940 (14 Area JAN)

#new:Function $Function_80218000
{
    0:  ADDIU     SP, SP, FFD8
    4:  SW        S1, 14 (SP)
    8:  COPY      S1, A0
    C:  SW        RA, 20 (SP)
   10:  SW        S3, 1C (SP)
   14:  SW        S2, 18 (SP)
   18:  SW        S0, 10 (SP)
   1C:  LW        S0, C (S1)
   20:  LW        A1, 0 (S0)
   24:  JAL       ~Func:get_variable
   28:  ADDIU     S0, S0, 4
   2C:  LW        A1, 0 (S0)
   30:  ADDIU     S0, S0, 4
   34:  COPY      A0, S1
   38:  JAL       ~Func:get_variable
   3C:  COPY      S3, V0
   40:  LW        A1, 0 (S0)
   44:  ADDIU     S0, S0, 4
   48:  COPY      A0, S1
   4C:  JAL       ~Func:get_variable
   50:  COPY      S2, V0
   54:  COPY      A0, S1
   58:  LW        A1, 0 (S0)
   5C:  JAL       ~Func:get_variable
   60:  COPY      S0, V0
   64:  LW        A0, 148 (S1)
   68:  JAL       ~Func:get_actor
   6C:  COPY      S1, V0
   70:  COPY      V1, V0
   74:  LW        V0, 8 (V1)
   78:  LBU       V0, 24 (V0)
   7C:  LW        A0, 8 (V1)
   80:  SUBU      S3, S3, V0
   84:  SB        S3, 194 (V1)
   88:  LBU       V0, 25 (A0)
   8C:  SUBU      S2, S2, V0
   90:  SB        S2, 195 (V1)
   94:  LBU       V0, 26 (A0)
   98:  SUBU      S0, S0, V0
   9C:  SB        S0, 196 (V1)
   A0:  LBU       A0, 27 (A0)
   A4:  SUBU      S1, S1, A0
   A8:  SB        S1, 197 (V1)
   AC:  LW        RA, 20 (SP)
   B0:  LW        S3, 1C (SP)
   B4:  LW        S2, 18 (SP)
   B8:  LW        S1, 14 (SP)
   BC:  LW        S0, 10 (SP)
   C0:  LI        V0, 2
   C4:  JR        RA
   C8:  ADDIU     SP, SP, 28
}

PADDING: 802180CC to 802180D0 (005739EC to 005739F0)
00000000

#new:Function $Function_802180D0
{
    0:  ADDIU     SP, SP, FFD8
    4:  SW        S1, 14 (SP)
    8:  COPY      S1, A0
    C:  SW        RA, 20 (SP)
   10:  SW        S3, 1C (SP)
   14:  SW        S2, 18 (SP)
   18:  SW        S0, 10 (SP)
   1C:  LW        S0, C (S1)
   20:  LW        A1, 0 (S0)
   24:  JAL       ~Func:get_variable
   28:  ADDIU     S0, S0, 4
   2C:  LW        A1, 0 (S0)
   30:  ADDIU     S0, S0, 4
   34:  COPY      A0, S1
   38:  JAL       ~Func:get_variable
   3C:  COPY      S3, V0
   40:  LW        A1, 0 (S0)
   44:  ADDIU     S0, S0, 4
   48:  COPY      A0, S1
   4C:  JAL       ~Func:get_variable
   50:  COPY      S2, V0
   54:  COPY      A0, S1
   58:  LW        A1, 0 (S0)
   5C:  JAL       ~Func:get_variable
   60:  COPY      S0, V0
   64:  LW        A0, 148 (S1)
   68:  JAL       ~Func:get_actor
   6C:  COPY      S1, V0
   70:  COPY      V1, V0
   74:  LW        V0, 8 (V1)
   78:  LBU       V0, 24 (V0)
   7C:  LW        A0, 8 (V1)
   80:  SUBU      S3, S3, V0
   84:  SB        S3, 194 (V1)
   88:  LBU       V0, 25 (A0)
   8C:  SUBU      S2, S2, V0
   90:  SB        S2, 195 (V1)
   94:  LBU       V0, 26 (A0)
   98:  SUBU      S0, S0, V0
   9C:  SB        S0, 196 (V1)
   A0:  LBU       A0, 27 (A0)
   A4:  SUBU      S1, S1, A0
   A8:  SB        S1, 197 (V1)
   AC:  LW        RA, 20 (SP)
   B0:  LW        S3, 1C (SP)
   B4:  LW        S2, 18 (SP)
   B8:  LW        S1, 14 (SP)
   BC:  LW        S0, 10 (SP)
   C0:  LI        V0, 2
   C4:  JR        RA
   C8:  ADDIU     SP, SP, 28
}

PADDING: 8021819C to 802181A0 (00573ABC to 00573AC0)
00000000

#new:Function $Function_802181A0
{
    0:  ADDIU     SP, SP, FFD8
    4:  SW        S1, 14 (SP)
    8:  COPY      S1, A0
    C:  SW        RA, 20 (SP)
   10:  SW        S3, 1C (SP)
   14:  SW        S2, 18 (SP)
   18:  SW        S0, 10 (SP)
   1C:  LW        S0, C (S1)
   20:  LW        A1, 0 (S0)
   24:  JAL       ~Func:get_variable
   28:  ADDIU     S0, S0, 4
   2C:  LW        A1, 0 (S0)
   30:  ADDIU     S0, S0, 4
   34:  COPY      A0, S1
   38:  JAL       ~Func:get_variable
   3C:  COPY      S3, V0
   40:  LW        A1, 0 (S0)
   44:  ADDIU     S0, S0, 4
   48:  COPY      A0, S1
   4C:  JAL       ~Func:get_variable
   50:  COPY      S2, V0
   54:  COPY      A0, S1
   58:  LW        A1, 0 (S0)
   5C:  JAL       ~Func:get_variable
   60:  COPY      S0, V0
   64:  MTC1      S3, F12
   68:  NOP
   6C:  CVT.S.W   F12, F12
   70:  MTC1      S2, F14
   74:  NOP
   78:  CVT.S.W   F14, F14
   7C:  MTC1      S0, F0
   80:  NOP
   84:  CVT.S.W   F0, F0
   88:  MFC1      A2, F0
   8C:  JAL       802D7460
   90:  COPY      A3, V0
   94:  LW        RA, 20 (SP)
   98:  LW        S3, 1C (SP)
   9C:  LW        S2, 18 (SP)
   A0:  LW        S1, 14 (SP)
   A4:  LW        S0, 10 (SP)
   A8:  LI        V0, 2
   AC:  JR        RA
   B0:  ADDIU     SP, SP, 28
}

#new:Function $Function_80218254
{
    0:  ADDIU     SP, SP, FFD8
    4:  SW        S1, 14 (SP)
    8:  COPY      S1, A0
    C:  SW        RA, 20 (SP)
   10:  SW        S3, 1C (SP)
   14:  SW        S2, 18 (SP)
   18:  SW        S0, 10 (SP)
   1C:  LW        S0, C (S1)
   20:  LW        A1, 0 (S0)
   24:  JAL       ~Func:get_variable
   28:  ADDIU     S0, S0, 4
   2C:  LW        A1, 0 (S0)
   30:  ADDIU     S0, S0, 4
   34:  COPY      A0, S1
   38:  JAL       ~Func:get_variable
   3C:  COPY      S3, V0
   40:  LW        A1, 0 (S0)
   44:  ADDIU     S0, S0, 4
   48:  COPY      A0, S1
   4C:  JAL       ~Func:get_variable
   50:  COPY      S2, V0
   54:  COPY      A0, S1
   58:  LW        A1, 0 (S0)
   5C:  JAL       ~Func:get_variable
   60:  COPY      S0, V0
   64:  MTC1      S3, F12
   68:  NOP
   6C:  CVT.S.W   F12, F12
   70:  MTC1      S2, F14
   74:  NOP
   78:  CVT.S.W   F14, F14
   7C:  MTC1      S0, F0
   80:  NOP
   84:  CVT.S.W   F0, F0
   88:  MFC1      A2, F0
   8C:  JAL       802D74C0
   90:  COPY      A3, V0
   94:  LW        RA, 20 (SP)
   98:  LW        S3, 1C (SP)
   9C:  LW        S2, 18 (SP)
   A0:  LW        S1, 14 (SP)
   A4:  LW        S0, 10 (SP)
   A8:  LI        V0, 2
   AC:  JR        RA
   B0:  ADDIU     SP, SP, 28
}

PADDING: 80218308 to 80218310 (00573C28 to 00573C30)
00000000 00000000

#new:Function $Function_80218310
{
    0:  ADDIU     SP, SP, FFD8
    4:  SW        S1, 14 (SP)
    8:  COPY      S1, A0
    C:  SW        RA, 20 (SP)
   10:  SW        S3, 1C (SP)
   14:  SW        S2, 18 (SP)
   18:  SW        S0, 10 (SP)
   1C:  LW        S0, C (S1)
   20:  LW        A1, 0 (S0)
   24:  JAL       ~Func:get_variable
   28:  ADDIU     S0, S0, 4
   2C:  LW        A1, 0 (S0)
   30:  ADDIU     S0, S0, 4
   34:  COPY      A0, S1
   38:  JAL       ~Func:get_variable
   3C:  COPY      S3, V0
   40:  LW        A1, 0 (S0)
   44:  ADDIU     S0, S0, 4
   48:  COPY      A0, S1
   4C:  JAL       ~Func:get_variable
   50:  COPY      S2, V0
   54:  COPY      A0, S1
   58:  LW        A1, 0 (S0)
   5C:  JAL       ~Func:get_variable
   60:  COPY      S0, V0
   64:  LW        A0, 148 (S1)
   68:  JAL       ~Func:get_actor
   6C:  COPY      S1, V0
   70:  COPY      V1, V0
   74:  LW        V0, 8 (V1)
   78:  LBU       V0, 24 (V0)
   7C:  LW        A0, 8 (V1)
   80:  SUBU      S3, S3, V0
   84:  SB        S3, 194 (V1)
   88:  LBU       V0, 25 (A0)
   8C:  SUBU      S2, S2, V0
   90:  SB        S2, 195 (V1)
   94:  LBU       V0, 26 (A0)
   98:  SUBU      S0, S0, V0
   9C:  SB        S0, 196 (V1)
   A0:  LBU       A0, 27 (A0)
   A4:  SUBU      S1, S1, A0
   A8:  SB        S1, 197 (V1)
   AC:  LW        RA, 20 (SP)
   B0:  LW        S3, 1C (SP)
   B4:  LW        S2, 18 (SP)
   B8:  LW        S1, 14 (SP)
   BC:  LW        S0, 10 (SP)
   C0:  LI        V0, 2
   C4:  JR        RA
   C8:  ADDIU     SP, SP, 28
}

#new:Function $Function_802183DC
{
    0:  ADDIU     SP, SP, FFD0
    4:  SW        S1, 14 (SP)
    8:  COPY      S1, A0
    C:  SW        RA, 24 (SP)
   10:  SW        S4, 20 (SP)
   14:  SW        S3, 1C (SP)
   18:  SW        S2, 18 (SP)
   1C:  SW        S0, 10 (SP)
   20:  SDC1      F20, 28 (SP)
   24:  LW        S0, C (S1)
   28:  LW        A1, 0 (S0)
   2C:  JAL       ~Func:get_variable
   30:  ADDIU     S0, S0, 4
   34:  LW        S4, 0 (S0)
   38:  ADDIU     S0, S0, 4
   3C:  LW        A1, 0 (S0)
   40:  ADDIU     S0, S0, 4
   44:  COPY      A0, S1
   48:  JAL       ~Func:get_variable
   4C:  COPY      S2, V0
   50:  LW        A1, 0 (S0)
   54:  ADDIU     S0, S0, 4
   58:  COPY      A0, S1
   5C:  JAL       ~Func:get_variable
   60:  COPY      S3, V0
   64:  COPY      A0, S1
   68:  LW        A1, 0 (S0)
   6C:  JAL       ~Func:get_float_variable
   70:  COPY      S0, V0
   74:  LIF       F8, 6.283184
   80:  MTC1      S2, F4
   84:  NOP
   88:  CVT.S.W   F4, F4
   8C:  MUL.S     F8, F4, F8
   90:  NOP
   94:  MTC1      S0, F6
   98:  NOP
   9C:  CVT.S.W   F6, F6
   A0:  LIF       F2, 1.0
   A8:  DIV.S     F4, F4, F6
   AC:  SUB.S     F2, F2, F4
   B0:  MUL.S     F20, F0, F2
   B4:  NOP
   B8:  MTC1      S3, F12
   BC:  NOP
   C0:  CVT.S.W   F12, F12
   C4:  JAL       ~Func:cos_rad
   C8:  DIV.S     F12, F8, F12
   CC:  MUL.S     F20, F20, F0
   D0:  NOP
   D4:  COPY      A0, S1
   D8:  TRUNC.W.S F10, F20
   DC:  MFC1      A2, F10
   E0:  JAL       ~Func:set_variable
   E4:  COPY      A1, S4
   E8:  LW        RA, 24 (SP)
   EC:  LW        S4, 20 (SP)
   F0:  LW        S3, 1C (SP)
   F4:  LW        S2, 18 (SP)
   F8:  LW        S1, 14 (SP)
   FC:  LW        S0, 10 (SP)
  100:  LDC1      F20, 28 (SP)
  104:  LI        V0, 2
  108:  JR        RA
  10C:  ADDIU     SP, SP, 30
}

PADDING: 802184EC to 802184F0 (00573E0C to 00573E10)
00000000

#new:Function $Function_802184F0
{
    0:  ADDIU     SP, SP, FFD8
    4:  SW        S1, 14 (SP)
    8:  COPY      S1, A0
    C:  SW        RA, 20 (SP)
   10:  SW        S3, 1C (SP)
   14:  SW        S2, 18 (SP)
   18:  SW        S0, 10 (SP)
   1C:  LW        S0, C (S1)
   20:  LW        A1, 0 (S0)
   24:  JAL       ~Func:get_variable
   28:  ADDIU     S0, S0, 4
   2C:  LW        A1, 0 (S0)
   30:  ADDIU     S0, S0, 4
   34:  COPY      A0, S1
   38:  JAL       ~Func:get_variable
   3C:  COPY      S3, V0
   40:  LW        A1, 0 (S0)
   44:  ADDIU     S0, S0, 4
   48:  COPY      A0, S1
   4C:  JAL       ~Func:get_variable
   50:  COPY      S2, V0
   54:  COPY      A0, S1
   58:  LW        A1, 0 (S0)
   5C:  JAL       ~Func:get_variable
   60:  COPY      S0, V0
   64:  LW        A0, 148 (S1)
   68:  JAL       ~Func:get_actor
   6C:  COPY      S1, V0
   70:  COPY      V1, V0
   74:  LW        V0, 8 (V1)
   78:  LBU       V0, 24 (V0)
   7C:  LW        A0, 8 (V1)
   80:  SUBU      S3, S3, V0
   84:  SB        S3, 194 (V1)
   88:  LBU       V0, 25 (A0)
   8C:  SUBU      S2, S2, V0
   90:  SB        S2, 195 (V1)
   94:  LBU       V0, 26 (A0)
   98:  SUBU      S0, S0, V0
   9C:  SB        S0, 196 (V1)
   A0:  LBU       A0, 27 (A0)
   A4:  SUBU      S1, S1, A0
   A8:  SB        S1, 197 (V1)
   AC:  LW        RA, 20 (SP)
   B0:  LW        S3, 1C (SP)
   B4:  LW        S2, 18 (SP)
   B8:  LW        S1, 14 (SP)
   BC:  LW        S0, 10 (SP)
   C0:  LI        V0, 2
   C4:  JR        RA
   C8:  ADDIU     SP, SP, 28
}

PADDING: 802185BC to 802185C0 (00573EDC to 00573EE0)
00000000

#new:IdleAnimations $IdleAnimations_802185C0
{
	.Status:Normal    00420004
	.Status:Stone     00420002
	.Status:Sleep     0042000D
	.Status:Poison    0042000F
	.Status:Stop      00420002
	.Status:Static    00420004
	.Status:Paralyze  00420002
	.Status:Dizzy     0042000F
	.Status:Fear      0042000F
	.Status:End
}

#new:IdleAnimations $IdleAnimations_8021860C
{
	.Status:Normal    00420003
	.Status:Stone     0042000D
	.Status:Sleep     0042000D
	.Status:Poison    0042000F
	.Status:Stop      00420001
	.Status:Static    00420003
	.Status:Paralyze  00420001
	.Status:Dizzy     0042000F
	.Status:Fear      0042000F
	.Status:End
}

#new:IdleAnimations $IdleAnimations_80218658
{
	.Status:Normal    00420014
	.Status:End
}

#new:IdleAnimations $IdleAnimations_80218664
{
	.Status:Normal    00420019
	.Status:End
}

#new:DefenseTable $DefenseTable_80218670
{
	.Element:Normal 00000000
	.Element:Fire   00000000
	.Element:End
}

#new:DefenseTable $DefenseTable_80218684
{
	.Element:Normal 00000000
	.Element:Shock  00000000
	.Element:End
}

#new:StatusTable $StatusTable_80218698
{
	.Status:Normal      0`
	.Status:Default     0`
	.Status:Sleep      70`
	.Status:Poison     50`
	.Status:Frozen      0`
	.Status:Dizzy      90`
	.Status:Fear      100`
	.Status:Static     50`
	.Status:Paralyze   90`
	.Status:Shrink     75`
	.Status:Stop       80`
	.Status:DefaultTurnMod    0`
	.Status:SleepTurnMod      0`
	.Status:PoisonTurnMod     0`
	.Status:FrozenTurnMod     0`
	.Status:DizzyTurnMod      0`
	.Status:FearTurnMod       0`
	.Status:StaticTurnMod     0`
	.Status:ParalyzeTurnMod   1`
	.Status:ShrinkTurnMod     0`
	.Status:StopTurnMod       0`
	.Status:End
}

#new:StatusTable $StatusTable_80218744
{
	.Status:Normal      0`
	.Status:Default     0`
	.Status:Sleep      70`
	.Status:Poison     50`
	.Status:Frozen      0`
	.Status:Dizzy      90`
	.Status:Fear      100`
	.Status:Static     50`
	.Status:Paralyze   90`
	.Status:Shrink     75`
	.Status:Stop       90`
	.Status:DefaultTurnMod    0`
	.Status:SleepTurnMod      0`
	.Status:PoisonTurnMod     0`
	.Status:FrozenTurnMod     0`
	.Status:DizzyTurnMod      0`
	.Status:FearTurnMod       0`
	.Status:StaticTurnMod     0`
	.Status:ParalyzeTurnMod   1`
	.Status:ShrinkTurnMod     0`
	.Status:StopTurnMod       0`
	.Status:End
}

#new:PartsTable $PartsTable_802187F0
{
	00800000 02000000 001600FF $IdleAnimations_802185C0 $DefenseTable_80218670 00010000 00000000 FDF80000 00000000
	00022001 01000000 001800FF $IdleAnimations_8021BF40 $DefenseTable_80218684 00000000 00000000 FFF60000 00000000
	00122001 03000000 000000FF $IdleAnimations_80218658 $DefenseTable_80218684 00000000 00000000 00000000 00000000
	00122001 04000000 000000FF $IdleAnimations_80218664 $DefenseTable_80218684 00000000 00000000 00000000 00000000
}

#new:Actor $SpearGuy
{
	% stats
	[Index]        2Ab
	[Level]        16`b
	[MaxHP]         7`b
	[Coins]         2`b
	[Flags]       00000000
	[StatusTable] $StatusTable_80218698
	% ai
	[PartsCount]    4`s
	[PartsTable]  $PartsTable_802187F0
	[Script]      $Script_Init_80218980
	% move effectiveness
	[Escape]       50`b
	[Item]         70`b
	[AirLift]      85`b
	[Hurricane]    80`b % Bow's "Spook" as well
	[UpAndAway]    95`b
	[PowerBounce]  85`b
	[SpinSmash]     0`b % weight (0-4)
	% ui positions
	[Size]         24`b  24`b % width height
	[HealthBar]     0`b   0`b % dx dy
	[StatusTurn]  -10`b  20`b % dx dy
	[StatusIcon]   10`b  20`b % dx dy
}

#new:Script $Script_SetSpearStance
{
    0:  Switch  *Var0
    C:  	Case  ==  00000002
   18:  	Case  ==  00000000
   24:  		Call  SetActorVar       ( .Actor:Self 00000000 00000000 )
   3C:  		Call  SetIdleAnimations ( .Actor:Self 00000002 $IdleAnimations_802185C0 )
   54:  		Call  SetPartEventFlags ( .Actor:Self 00000002 00010000 )
   6C:  	Case  ==  00000001
   78:  		Call  SetActorVar       ( .Actor:Self 00000000 00000001 )
   90:  		Call  SetIdleAnimations ( .Actor:Self 00000002 $IdleAnimations_8021860C )
   A8:  		Call  SetPartEventFlags ( .Actor:Self 00000002 00000010 )
   C0:  EndSwitch
   C8:  Return
   D0:  End
}

#new:Script $Script_Init_80218980
{
    0:  Call  GetActorVar   ( .Actor:Self 00000000 *Var0 )
   18:  Switch  *Var0
   24:  	Case  ==  00000000
   30:  		ExecWait  $Script_SetSpearStance
   3C:  		Call  SetAnimation  ( .Actor:Self 00000002 00420004 )
   54:  	Case  ==  00000001
   60:  		ExecWait  $Script_SetSpearStance
   6C:  		Call  SetPartEventFlags ( .Actor:Self 00000002 00000010 )
   84:  		Call  SetAnimation      ( .Actor:Self 00000002 00420003 )
   9C:  EndSwitch
   A4:  Call  BindTakeTurn      ( .Actor:Self $Script_TakeTurn_8021BCB4 )
   B8:  Call  BindHandleEvent   ( .Actor:Self $Script_HandleEvent_80218E3C )
   CC:  Call  BindNextTurn      ( .Actor:Self $Script_NextTurn_80218B24 )
   E0:  Call  SetActorVar       ( .Actor:Self 00000001 00000000 )
   F8:  Call  GetEncounterState ( *Var0 )
  108:  Switch  *Var0
  114:  	Case  ==  00000002
  120:  	CaseOR  ==  00000004
  12C:  	CaseOR  ==  00000006
  138:  		Call  SetPartEventBits  ( .Actor:Self 00000002 00010000 .False )
  154:  		Call  SetIdleAnimations ( .Actor:Self 00000002 $IdleAnimations_8021860C )
  16C:  		Call  SetAnimation      ( .Actor:Self 00000002 00420003 )
  184:  	EndCaseGroup
  18C:  EndSwitch
  194:  Return
  19C:  End
}

#new:Script $Script_NextTurn_80218B24
{
    0:  Call  BindNextTurn  ( .Actor:Self 00000000 )
   14:  Call  BindIdle      ( .Actor:Self $Script_Idle_80218BE0 )
   28:  Return
   30:  End
}

#new:Script $Script_80218B5C
{
    0:  Call  GetActorVar   ( .Actor:Self 00000000 *VarA )
   18:  If  *VarA  ==  00000000
   28:  	Call  GetStatusFlags    ( .Actor:Self *VarB )
   3C:  	If  *VarB  &  ~Flags:StatusFlags:Sleep|Fear|Dizzy % 49000
   4C:  	Else
   54:  		Set   *Var1  *Var2
   64:  	EndIf
   6C:  EndIf
   74:  Return
   7C:  End
}

#new:Script $Script_Idle_80218BE0
{
    0:  Label  0
    C:  Call  GetActorVar   ( .Actor:Self 00000000 *Var0 )
   24:  Switch  *Var0
   30:  	Case  ==  00000000
   3C:  		Call  GetStatusFlags    ( .Actor:Self *Var0 )
   50:  		If  *Var0  &  ~Flags:StatusFlags:Sleep|Fear|Dizzy % 49000
   60:  			Call  SetIdleAnimations ( .Actor:Self 00000002 $IdleAnimations_8021860C )
   78:  			Call  SetPartEventBits  ( .Actor:Self 00000002 00000010 .True )
   94:  			Call  SetPartEventBits  ( .Actor:Self 00000002 00010000 .False )
   B0:  		Else
   B8:  			Call  SetIdleAnimations ( .Actor:Self 00000002 $IdleAnimations_802185C0 )
   D0:  			Call  SetPartEventBits  ( .Actor:Self 00000002 00000010 .False )
   EC:  			Call  SetPartEventBits  ( .Actor:Self 00000002 00010000 .True )
  108:  		EndIf
  110:  	Case  ==  00000001
  11C:  		Call  SetIdleAnimations ( .Actor:Self 00000002 $IdleAnimations_8021860C )
  134:  		Call  SetPartEventBits  ( .Actor:Self 00000002 00000010 .True )
  150:  		Call  SetPartEventBits  ( .Actor:Self 00000002 00010000 .False )
  16C:  EndSwitch
  174:  Wait  1`
  180:  Goto  0
  18C:  Return
  194:  End
}

#new:Script $Script_80218D7C
{
    0:  Call  UseBattleCamPreset    ( 00000002 )
   10:  SetConst  *Var0  00000002
   20:  SetConst  *Var1  00420006
   30:  ExecWait  DoReturnHome
   3C:  Call  GetActorVar   ( .Actor:Self 00000000 *Var0 )
   54:  Switch  *Var0
   60:  	Case  ==  00000000
   6C:  		Call  SetAnimation  ( .Actor:Self 00000002 00420004 )
   84:  	Case  ==  00000001
   90:  		Call  SetAnimation  ( .Actor:Self 00000002 00420003 )
   A8:  EndSwitch
   B0:  Return
   B8:  End
}

#new:Script $Script_HandleEvent_80218E3C
{
    0:  Call  UseIdleAnimation  ( .Actor:Self .False )
   14:  Call  EnableIdleScript  ( .Actor:Self 00000000 )
   28:  Call  GetLastEvent      ( .Actor:Self *Var0 )
   3C:  Switch  *Var0
   48:  	CaseOR  ==  .Event:HitCombo % 9
   54:  	CaseOR  ==  .Event:Hit % A
   60:  		SetConst  *Var0  00000002
   70:  		SetConst  *Var1  00420007
   80:  		SetConst  *Var2  00420008
   90:  		ExecWait  $Script_80218B5C
   9C:  		ExecWait  DoNormalHit
   A8:  	EndCaseGroup
   B0:  	Case  ==  .Event:BurnHit % E
   BC:  		Call  GetActorVar   ( .Actor:Self 00000000 *Var0 )
   D4:  		If  *Var0  ==  00000000
   E4:  			Call  GetStatusFlags    ( .Actor:Self *VarB )
   F8:  			If  *VarB  &  ~Flags:StatusFlags:Sleep|Fear|Dizzy % 49000
  108:  				SetConst  *Var0  00000002
  118:  				SetConst  *Var1  0042000A
  128:  				SetConst  *Var2  0042000C
  138:  			Else
  140:  				SetConst  *Var0  00000002
  150:  				SetConst  *Var1  0042000B
  160:  				SetConst  *Var2  FFFFFFFF
  170:  			EndIf
  178:  		Else
  180:  			SetConst  *Var0  00000002
  190:  			SetConst  *Var1  0042000A
  1A0:  			SetConst  *Var2  0042000C
  1B0:  		EndIf
  1B8:  		ExecWait  DoBurnHit
  1C4:  	Case  ==  .Event:BurnDeath % 24
  1D0:  		Call  GetActorVar   ( .Actor:Self 00000000 *Var0 )
  1E8:  		If  *Var0  ==  00000000
  1F8:  			Call  GetStatusFlags    ( .Actor:Self *VarB )
  20C:  			If  *VarB  &  ~Flags:StatusFlags:Sleep|Fear|Dizzy % 49000
  21C:  				SetConst  *Var0  00000002
  22C:  				SetConst  *Var1  0042000A
  23C:  				SetConst  *Var2  0042000C
  24C:  				ExecWait  DoBurnHit
  258:  				SetConst  *Var0  00000002
  268:  				SetConst  *Var1  0042000C
  278:  				ExecWait  DoDeath
  284:  			Else
  28C:  				SetConst  *Var0  00000002
  29C:  				SetConst  *Var1  0042000B
  2AC:  				SetConst  *Var2  FFFFFFFF
  2BC:  				ExecWait  DoBurnHit
  2C8:  				SetConst  *Var0  00000002
  2D8:  				SetConst  *Var1  0042000B
  2E8:  				ExecWait  DoDeath
  2F4:  			EndIf
  2FC:  		Else
  304:  			SetConst  *Var0  00000002
  314:  			SetConst  *Var1  0042000A
  324:  			SetConst  *Var2  0042000C
  334:  			ExecWait  DoBurnHit
  340:  			SetConst  *Var0  00000002
  350:  			SetConst  *Var1  0042000C
  360:  			ExecWait  DoDeath
  36C:  		EndIf
  374:  		Return
  37C:  	Case  ==  .Event:SpinSmashHit % B
  388:  		SetConst  *Var0  00000002
  398:  		SetConst  *Var1  00420007
  3A8:  		SetConst  *Var2  00420008
  3B8:  		ExecWait  $Script_80218B5C
  3C4:  		ExecWait  DoSpinSmashHit
  3D0:  	Case  ==  .Event:SpinSmashDeath % 21
  3DC:  		SetConst  *Var0  00000002
  3EC:  		SetConst  *Var1  00420007
  3FC:  		SetConst  *Var2  00420008
  40C:  		ExecWait  $Script_80218B5C
  418:  		ExecWait  DoSpinSmashHit
  424:  		SetConst  *Var0  00000002
  434:  		SetConst  *Var1  00420009
  444:  		SetConst  *Var2  00420008
  454:  		ExecWait  $Script_80218B5C
  460:  		ExecWait  DoDeath
  46C:  		Return
  474:  	Case  ==  .Event:ShockHit % 2F
  480:  		SetConst  *Var0  00000002
  490:  		SetConst  *Var1  00420007
  4A0:  		SetConst  *Var2  00420008
  4B0:  		ExecWait  $Script_80218B5C
  4BC:  		ExecWait  DoShockHit
  4C8:  		SetConst  *Var0  00000002
  4D8:  		SetConst  *Var1  00420007
  4E8:  		SetConst  *Var2  00420008
  4F8:  		ExecWait  $Script_80218B5C
  504:  		ExecWait  DoJumpBack
  510:  		ExecWait  $Script_80218D7C
  51C:  	Case  ==  .Event:ShockDeath % 26
  528:  		SetConst  *Var0  00000002
  538:  		SetConst  *Var1  00420007
  548:  		ExecWait  DoShockHit
  554:  		SetConst  *Var0  00000002
  564:  		SetConst  *Var1  00420009
  574:  		ExecWait  DoDeath
  580:  		Return
  588:  	CaseOR  ==  00000017 % 17
  594:  	CaseOR  ==  .Event:Immune % 19
  5A0:  	CaseOR  ==  .Event:AirLiftFailed % 1F
  5AC:  		SetConst  *Var0  00000002
  5BC:  		SetConst  *Var1  00420003
  5CC:  		SetConst  *Var2  00420004
  5DC:  		ExecWait  $Script_80218B5C
  5E8:  		ExecWait  DoImmune
  5F4:  	EndCaseGroup
  5FC:  	Case  ==  .Event:Death % 20
  608:  		SetConst  *Var0  00000002
  618:  		SetConst  *Var1  00420007
  628:  		SetConst  *Var2  00420008
  638:  		ExecWait  $Script_80218B5C
  644:  		ExecWait  DoNormalHit
  650:  		Wait  10`
  65C:  		SetConst  *Var0  00000002
  66C:  		SetConst  *Var1  00420009
  67C:  		SetConst  *Var2  00420008
  68C:  		ExecWait  $Script_80218B5C
  698:  		ExecWait  DoDeath
  6A4:  		Return
  6AC:  	Case  ==  .Event:RecoverStatus % 31
  6B8:  		Call  GetActorVar   ( .Actor:Self 00000000 *Var0 )
  6D0:  		Switch  *Var0
  6DC:  			Case  ==  00000000
  6E8:  				SetConst  *Var0  00000002
  6F8:  				SetConst  *Var1  00420004
  708:  				ExecWait  DoRecover
  714:  			Case  ==  00000001
  720:  				SetConst  *Var0  00000002
  730:  				SetConst  *Var1  00420003
  740:  				ExecWait  DoRecover
  74C:  		EndSwitch
  754:  	Case  ==  .Event:ScareAway % 39
  760:  		SetConst  *Var0  00000002
  770:  		SetConst  *Var1  00420006
  780:  		SetConst  *Var2  00420007
  790:  		ExecWait  DoScareAway
  79C:  		Return
  7A4:  	Case  ==  .Event:BeginAirLift % 3A
  7B0:  		SetConst  *Var0  00000002
  7C0:  		SetConst  *Var1  00420004
  7D0:  		ExecWait  DoAirLift
  7DC:  	Case  ==  .Event:BlowAway % 16
  7E8:  		SetConst  *Var0  00000002
  7F8:  		SetConst  *Var1  00420004
  808:  		ExecWait  DoBlowAway
  814:  		Return
  81C:  	Case  ==  .Event:SpikeTaunt % 1B
  828:  		Wait  10`
  834:  		Set   *Flag[00]  .False
  844:  		Call  GetActorPos       ( .Actor:Self *Var0 *Var1 *Var2 )
  860:  		Call  GetStatusFlags    ( .Actor:Self *Var3 )
  874:  		Call  GetActorVar       ( .Actor:Self 00000000 *VarA )
  88C:  		Switch  *VarA
  898:  			Case  ==  00000000
  8A4:  				If  *Var3  &  ~Flags:StatusFlags:Shrink % 80000
  8B4:  					Add   *Var0  FFFFFFF5
  8C4:  					Add   *Var1  00000003
  8D4:  					Set   *Flag[00]  .True
  8E4:  				EndIf
  8EC:  				If  *Var3  &  ~Flags:StatusFlags:Dizzy % 40000
  8FC:  					Add   *Var0  FFFFFFFC
  90C:  					Add   *Var1  00000024
  91C:  					Set   *Flag[00]  .True
  92C:  				EndIf
  934:  				If  *Var3  &  ~Flags:StatusFlags:Sleep % 1000
  944:  					Add   *Var0  FFFFFFF8
  954:  					Add   *Var1  00000024
  964:  					Set   *Flag[00]  .True
  974:  				EndIf
  97C:  				If  *Flag[00]  ==  .False
  98C:  					Add   *Var0  FFFFFFE4
  99C:  					Add   *Var1  00000008
  9AC:  				EndIf
  9B4:  			Case  ==  00000001
  9C0:  				If  *Var3  &  ~Flags:StatusFlags:Shrink % 80000
  9D0:  					Add   *Var0  FFFFFFFC
  9E0:  					Add   *Var1  0000000F
  9F0:  					Set   *Flag[00]  .True
  A00:  				EndIf
  A08:  				If  *Var3  &  ~Flags:StatusFlags:Dizzy % 40000
  A18:  					Add   *Var0  FFFFFFFC
  A28:  					Add   *Var1  00000024
  A38:  					Set   *Flag[00]  .True
  A48:  				EndIf
  A50:  				If  *Var3  &  ~Flags:StatusFlags:Sleep % 1000
  A60:  					Add   *Var0  FFFFFFF8
  A70:  					Add   *Var1  00000024
  A80:  					Set   *Flag[00]  .True
  A90:  				EndIf
  A98:  				If  *Flag[00]  ==  .False
  AA8:  					Add   *Var0  FFFFFFF6
  AB8:  					Add   *Var1  00000026
  AC8:  				EndIf
  AD0:  		EndSwitch
  AD8:  		Call  PlayEffect    ( ~FX:LensFlare:Rotating *Var0 *Var1 *Var2 00000014 00000000 00000000 00000000 00000000 00000000 00000000 00000000 00000000 )
  B1C:  		Wait  20`
  B28:  	Default
  B30:  EndSwitch
  B38:  Call  EnableIdleScript  ( .Actor:Self 00000001 )
  B4C:  Call  UseIdleAnimation  ( .Actor:Self .True )
  B60:  Return
  B68:  End
}

#new:Script $Script_SpearStab
{
    0:  Call  UseIdleAnimation  ( .Actor:Self .False )
   14:  Call  EnableIdleScript  ( .Actor:Self 00000000 )
   28:  Call  SetTargetActor    ( .Actor:Self .Actor:Player )
   3C:  Call  UseBattleCamPreset    ( 0000003F )
   4C:  Call  BattleCamTargetActor  ( .Actor:Self )
   5C:  Call  8024ECF8  ( FFFFFFFF 00000001 00000000 )
   74:  Call  SetAnimation      ( .Actor:Self 00000002 00420006 )
   8C:  Call  SetActorSpeed     ( .Actor:Self *Fixed[6.0] )
   A0:  Call  SetGoalToTarget   ( .Actor:Self )
   B0:  Call  GetGoalPos        ( .Actor:Self *Var0 *Var1 *Var2 )
   CC:  Call  GetStatusFlags    ( .Actor:Self *VarA )
   E0:  If  *VarA  &  ~Flags:StatusFlags:Shrink % 80000
   F0:  	Add   *Var0  0000000A
  100:  Else
  108:  	Add   *Var0  00000019
  118:  EndIf
  120:  Set   *Var1  00000000
  130:  Add   *Var2  00000001
  140:  Call  SetGoalPos    ( .Actor:Self *Var0 *Var1 *Var2 )
  15C:  Call  RunToGoal     ( .Actor:Self  0` .False )
  174:  Call  SetAnimation  ( .Actor:Self 00000002 00420004 )
  18C:  Wait  5`
  198:  Call  SetAnimation  ( .Actor:Self 00000002 0042001A )
  1B0:  Wait  15`
  1BC:  Call  EnemyTestTarget   ( .Actor:Self *Var0 ~Flags:DamageType:0 00000000 00000001 00000010 )
  1E0:  Switch  *Var0
  1EC:  	CaseOR  ==  .HitResult:Miss % 6
  1F8:  	CaseOR  ==  .HitResult:Lucky % 5
  204:  		Set   *VarA  *Var0
  214:  		Call  PlaySoundAtActor      ( .Actor:Self 00000309 )
  228:  		Call  SetAnimation  ( .Actor:Self 00000002 0042001B )
  240:  		Call  SetActorJumpGravity   ( .Actor:Self *Fixed[0.5] )
  254:  		Call  GetActorPos   ( .Actor:Self *Var0 *Var1 *Var2 )
  270:  		Sub   *Var0  0000001E
  280:  		Call  SetGoalPos    ( .Actor:Self *Var0 *Var1 *Var2 )
  29C:  		Call  JumpToGoal    ( .Actor:Self  8` .False .True .False )
  2BC:  		If  *VarA  ==  .HitResult:Lucky % 5
  2CC:  			Call  EnemyTestTarget   ( .Actor:Self *VarA ~Flags:DamageType:TriggerLucky 00000000 00000000 00000000 )
  2F0:  		EndIf
  2F8:  		Sub   *Var0  00000014
  308:  		Call  SetGoalPos        ( .Actor:Self *Var0 *Var1 *Var2 )
  324:  		Call  JumpToGoal        ( .Actor:Self  8` .False .True .False )
  344:  		Wait  15`
  350:  		Wait  20`
  35C:  		Call  UseBattleCamPreset    ( 00000002 )
  36C:  		Call  SetActorYaw       ( .Actor:Self  180` )
  380:  		Call  AddActorDecoration    ( .Actor:Self 00000002 00000000 .Decoration:Sweat )
  39C:  		ExecWait  $Script_80218D7C
  3A8:  		Call  RemoveActorDecoration ( .Actor:Self 00000002 00000000 )
  3C0:  		Call  SetActorYaw       ( .Actor:Self  0` )
  3D4:  		Call  EnableIdleScript  ( .Actor:Self 00000001 )
  3E8:  		Call  UseIdleAnimation  ( .Actor:Self .True )
  3FC:  		Return
  404:  	EndCaseGroup
  40C:  EndSwitch
  414:  Call  PlaySoundAtActor  ( .Actor:Self 00000309 )
  428:  Call  SetAnimation      ( .Actor:Self 00000002 0042001B )
  440:  Wait  5`
  44C:  Wait  2`
  458:  Call  SetGoalToTarget   ( .Actor:Self )
  468:  Call  EnemyDamageTarget ( .Actor:Self *Var0 ~Flags:DamageType:NoContact 00000000 00000000 00000003 00000020 )
  490:  Switch  *Var0
  49C:  	CaseOR  ==  .HitResult:Hit % 0
  4A8:  	CaseOR  ==  .HitResult:QuakeImmune % 2
  4B4:  		Call  UseBattleCamPreset    ( 00000002 )
  4C4:  		Wait  20`
  4D0:  		ExecWait  $Script_80218D7C
  4DC:  	EndCaseGroup
  4E4:  EndSwitch
  4EC:  Call  EnableIdleScript  ( .Actor:Self 00000001 )
  500:  Call  UseIdleAnimation  ( .Actor:Self .True )
  514:  Return
  51C:  End
}

#new:Script $Script_SummonBackup
{
    0:  Call  UseIdleAnimation  ( .Actor:Self .False )
   14:  Call  EnableIdleScript  ( .Actor:Self 00000000 )
   28:  Call  UseBattleCamPreset    ( 0000000E )
   38:  Call  BattleCamTargetActor  ( .Actor:Self )
   48:  Call  MoveBattleCamOver (  15` )
   58:  Wait  15`
   64:  Call  UseBattleCamPreset    ( 00000001 )
   74:  Call  SetAnimation      ( .Actor:Self 00000002 00420005 )
   8C:  Call  SetActorSpeed     ( .Actor:Self *Fixed[4.0] )
   A0:  Thread
   A8:  	Wait  5`
   B4:  	Call  PlaySoundAtActor  ( .Actor:Self 000002FA )
   C8:  	Wait  15`
   D4:  	Call  PlaySoundAtActor  ( .Actor:Self 000002FB )
   E8:  EndThread
   F0:  Call  SetActorYaw   ( .Actor:Self  0` )
  104:  Call  GetActorPos   ( .Actor:Self *Var0 *Var1 *Var2 )
  120:  Sub   *Var0  0000000A
  130:  Call  SetAnimation  ( .Actor:Self 00000002 00420005 )
  148:  Call  SetGoalPos    ( .Actor:Self *Var0 *Var1 *Var2 )
  164:  Call  RunToGoal     ( .Actor:Self  0` .False )
  17C:  Call  SetAnimation  ( .Actor:Self 00000002 00420010 )
  194:  Wait  25`
  1A0:  Thread
  1A8:  	Wait  5`
  1B4:  	Call  PlaySoundAtActor  ( .Actor:Self 000002FA )
  1C8:  	Wait  15`
  1D4:  	Call  PlaySoundAtActor  ( .Actor:Self 000002FB )
  1E8:  EndThread
  1F0:  Call  SetActorYaw   ( .Actor:Self  180` )
  204:  Call  GetActorPos   ( .Actor:Self *Var0 *Var1 *Var2 )
  220:  Add   *Var0  00000014
  230:  Call  SetAnimation  ( .Actor:Self 00000002 00420005 )
  248:  Call  SetGoalPos    ( .Actor:Self *Var0 *Var1 *Var2 )
  264:  Call  RunToGoal     ( .Actor:Self  0` .False )
  27C:  Call  SetAnimation  ( .Actor:Self 00000002 00420010 )
  294:  Wait  30`
  2A0:  Call  SetActorYaw   ( .Actor:Self  0` )
  2B4:  Call  GetActorPos   ( .Actor:Self *Var0 *Var1 *Var2 )
  2D0:  Sub   *Var0  0000000A
  2E0:  Call  SetAnimation  ( .Actor:Self 00000002 00420005 )
  2F8:  Call  SetGoalPos    ( .Actor:Self *Var0 *Var1 *Var2 )
  314:  Call  RunToGoal     ( .Actor:Self  0` .False )
  32C:  Call  GetActorPos   ( .Actor:Self *Var0 *Var1 *Var2 )
  348:  Add   *Var1  0000000F
  358:  Call  PlayEffect    ( ~FX:Sparkles:Star *Var0 *Var1 *Var2 0000001E 00000000 00000000 00000000 00000000 00000000 00000000 00000000 00000000 )
  39C:  Call  PlaySoundAtActor      ( .Actor:Self 0000206D )
  3B0:  Call  SetAnimation  ( .Actor:Self 00000002 0042000E )
  3C8:  Wait  20`
  3D4:  Call  GetOriginalActorType  ( .Actor:Self *Var0 )
  3E8:  Call  EnemyCreateTargetList ( 00008004 )
  3F8:  Call  InitTargetIterator ( )
  404:  Label  0
  410:  Call  GetOwnerTarget        ( *Var1 *Var2 )
  424:  Call  GetOriginalActorType  ( *Var1 *Var2 )
  438:  If  *Var0  ==  *Var2
  448:  	Call  SetAnimation      ( *Var1 00000002 00420004 )
  460:  	Call  GetIndexFromHome  ( *Var1 *Var3 )
  474:  	If  *VarA  <  *Var3
  484:  		Call  GetActorVar   ( *Var1 00000000 *Var4 )
  49C:  		If  *Var4  ==  00000000
  4AC:  			Call  SetActorVar       ( *Var1 00000000 00000001 )
  4C4:  			Call  SetIdleAnimations ( *Var1 00000002 $IdleAnimations_8021860C )
  4DC:  			Call  SetPartEventFlags ( *Var1 00000002 00000010 )
  4F4:  			Call  SetAnimation      ( *Var1 00000002 00420003 )
  50C:  		EndIf
  514:  	EndIf
  51C:  EndIf
  524:  Call  ChooseNextTarget  ( .Iter:Next *Var1 )
  538:  If  *Var1  !=  FFFFFFFF
  548:  	Goto  0
  554:  EndIf
  55C:  Set   *Flag[00]  .False
  56C:  Call  EnemyCreateTargetList ( 00008004 )
  57C:  Call  InitTargetIterator ( )
  588:  Label  1
  594:  Call  GetOwnerTarget        ( *Var0 *Var1 )
  5A8:  Call  GetIndexFromHome      ( *Var0 *Var1 )
  5BC:  If  *Var1  <  *VarA
  5CC:  	Set   *Flag[00]  .True
  5DC:  EndIf
  5E4:  Call  ChooseNextTarget  ( .Iter:Next *Var0 )
  5F8:  If  *Var0  !=  FFFFFFFF
  608:  	Goto  1
  614:  EndIf
  61C:  If  *Flag[00]  ==  .False
  62C:  	Call  SummonEnemy   ( $SpecialFormation_8021A8C0 00000000 )
  640:  Else
  648:  	Call  SummonEnemy   ( $SpecialFormation_8021A8DC 00000000 )
  65C:  EndIf
  664:  Set   *VarB  *Var0
  674:  Call  UseBattleCamPreset    ( 00000002 )
  684:  Call  SetAnimation      ( *VarB 00000002 00420010 )
  69C:  Call  SetGoalToIndex    ( *VarB *VarA )
  6B0:  Call  GetGoalPos        ( *VarB *Var0 *Var1 *Var2 )
  6CC:  Add   *Var0  000000DC
  6DC:  Call  SetActorPos       ( *VarB *Var0  0`  0` )
  6F8:  Call  SetActorSounds    ( .Actor:Self .ActorSound:Walk 00000000 00000000 )
  714:  Thread
  71C:  	Call  PlaySoundAtActor  ( .Actor:Self 000002FA )
  730:  	Wait  15`
  73C:  	Call  PlaySoundAtActor  ( .Actor:Self 000002FA )
  750:  	Wait  15`
  75C:  	Call  PlaySoundAtActor  ( .Actor:Self 000002FB )
  770:  	Wait  15`
  77C:  	Call  PlaySoundAtActor  ( .Actor:Self 000002FB )
  790:  	Wait  15`
  79C:  EndThread
  7A4:  Call  SetActorSpeed ( *VarB *Fixed[4.0] )
  7B8:  Call  RunToGoal     ( *VarB  0` .False )
  7D0:  Call  ResetAllActorSounds   ( .Actor:Self )
  7E0:  Call  PlaySoundAtActor      ( .Actor:Self 0000206D )
  7F4:  Call  GetActorPos   ( *VarB *Var0 *Var1 *Var2 )
  810:  Add   *Var1  0000000F
  820:  Call  PlayEffect    ( ~FX:Sparkles:Star *Var0 *Var1 *Var2 0000001E 00000000 00000000 00000000 00000000 00000000 00000000 00000000 00000000 )
  864:  Call  SetAnimation  ( *VarB 00000002 0042000E )
  87C:  Wait  20`
  888:  If  *Flag[00]  ==  .False
  898:  	Call  SetAnimation  ( *VarB 00000002 00420004 )
  8B0:  Else
  8B8:  	Call  SetAnimation  ( *VarB 00000002 00420003 )
  8D0:  EndIf
  8D8:  Call  GetActorPos   ( *VarB *Var0 *Var1 *Var2 )
  8F4:  Call  ForceHomePos  ( *VarB *Var0 *Var1 *Var2 )
  910:  Call  HPBarToHome   ( *VarB )
  920:  Call  GetActorVar   ( .Actor:Self 00000001 *Var0 )
  938:  Switch  *Var0
  944:  	Case  ==  00000000
  950:  		Call  SetActorVar   ( *VarB 00000001 00000001 )
  968:  	Case  ==  00000001
  974:  		Call  SetActorVar   ( *VarB 00000001 00000002 )
  98C:  EndSwitch
  994:  Call  SetActorVar       ( .Actor:Self 00000001 00000003 )
  9AC:  Call  EnableIdleScript  ( .Actor:Self 00000001 )
  9C0:  Call  UseIdleAnimation  ( .Actor:Self .True )
  9D4:  Return
  9DC:  End
}

#new:Vector3D $Vector3D_8021A8B4
{
	0` -1000` 0`
}

#new:SpecialFormation $SpecialFormation_8021A8C0
{
	$SpearGuy $Vector3D_8021A8B4 00000064 00000000 00000000 00000000 00000000
}

#new:SpecialFormation $SpecialFormation_8021A8DC
{
	$SpearGuy $Vector3D_8021A8B4 00000064 00000001 00000000 00000000 00000000
}

#new:Script $Script_BecomeShyGuy
{
    0:  Call  SetActorVar   ( .Actor:Self 00000000 00000002 )
   18:  Wait  10`
   24:  Call  GetActorPos   ( .Actor:Self *Var0 *Var1 *Var2 )
   40:  Call  SetHomePos    ( .Actor:Self *Var0 *Var1 *Var2 )
   5C:  Call  SetAnimation  ( .Actor:Self 00000002 00420013 )
   74:  Wait  5`
   80:  Call  SetAnimation  ( .Actor:Self 00000002 00420018 )
   98:  Call  GetActorPos   ( .Actor:Self *Var0 *Var1 *Var2 )
   B4:  Sub   *Var0  0000000A
   C4:  Add   *Var1  0000000F
   D4:  Sub   *Var2  00000001
   E4:  Call  SetPartPos    ( .Actor:Self 00000004 *Var0 *Var1 *Var2 )
  104:  Call  SetPartFlagBits       ( .Actor:Self 00000004 00000001 .False )
  120:  Call  SetPartJumpGravity    ( .Actor:Self 00000004 *Fixed[0.5] )
  138:  Add   *Var0  00000032
  148:  Sub   *Var2  0000001E
  158:  Thread
  160:  	Loop  0000000F
  16C:  		Call  SetPartRotation   ( .Actor:Self 00000004 00000000 00000000 0000000A )
  18C:  		Wait  1`
  198:  		Call  SetPartRotation   ( .Actor:Self 00000004 00000000 00000000 FFFFFFF6 )
  1B8:  		Wait  1`
  1C4:  	EndLoop
  1CC:  EndThread
  1D4:  Call  PlaySoundAtActor  ( .Actor:Self 0000206D )
  1E8:  Thread
  1F0:  	Loop  0000000A
  1FC:  		Call  GetPartOffset ( .Actor:Self 00000004 *Var0 *Var1 *Var2 )
  21C:  		Call  PlayEffect    ( 00000011 00000003 *Var0 *Var1 *Var2 00000005 00000000 00000000 00000000 00000000 00000000 00000000 00000000 00000000 )
  260:  		Wait  3`
  26C:  	EndLoop
  274:  EndThread
  27C:  Call  PlaySoundAtPart   ( .Actor:Self 00000004 000002FC )
  294:  Call  SetPartSounds ( .Actor:Self 00000004 .ActorSound:Jump 00000000 00000000 )
  2B4:  Call  JumpPartTo    ( .Actor:Self 00000004 *Var0  0` *Var2  30` .True )
  2DC:  Wait  5`
  2E8:  Call  SetPartFlags  ( .Actor:Self 00000002 00022005 )
  300:  Call  SetPartFlags  ( .Actor:Self 00000001 00800004 )
  318:  Call  SetPartFlags  ( .Actor:Self 00000003 00022005 )
  330:  Call  SetPartFlags  ( .Actor:Self 00000004 00022005 )
  348:  ExecWait  $Script_8021BF8C
  354:  Call  SetActorType  ( .Actor:Self 0000001F )
  368:  Call  SetActorFlagBits  ( .Actor:Self 00001000 .True )
  380:  Call  SetStatusTable    ( .Actor:Self $StatusTable_80218744 )
  394:  Call  HPBarToHome   ( .Actor:Self )
  3A4:  Call  ResetAllActorSounds   ( .Actor:Self )
  3B4:  Return
  3BC:  End
}

#new:Script $Script_SpearThrow
{
    0:  Call  UseIdleAnimation  ( .Actor:Self .False )
   14:  Call  EnableIdleScript  ( .Actor:Self 00000000 )
   28:  Call  SetTargetActor    ( .Actor:Self .Actor:Player )
   3C:  Call  SetActorYaw   ( .Actor:Self  180` )
   50:  Call  SetAnimation  ( .Actor:Self 00000002 00420006 )
   68:  Call  GetActorPos   ( .Actor:Self *Var0 *Var1 *Var2 )
   84:  Add   *Var0  000000C8
   94:  Call  SetActorSpeed ( .Actor:Self *Fixed[4.0] )
   A8:  Call  SetGoalPos    ( .Actor:Self *Var0 *Var1 *Var2 )
   C4:  Call  RunToGoal     ( .Actor:Self  0` .False )
   DC:  Call  SetAnimation  ( .Actor:Self 00000002 00420015 )
   F4:  Call  SetActorYaw   ( .Actor:Self  0` )
  108:  Sub   *Var0  00000064
  118:  Call  SetActorSpeed ( .Actor:Self *Fixed[6.0] )
  12C:  Call  SetGoalPos    ( .Actor:Self *Var0 *Var1 *Var2 )
  148:  Call  RunToGoal     ( .Actor:Self  0` .False )
  160:  Sub   *Var0  00000046
  170:  Call  SetActorSpeed ( .Actor:Self *Fixed[8.0] )
  184:  Call  SetGoalPos    ( .Actor:Self *Var0 *Var1 *Var2 )
  1A0:  Call  RunToGoal     ( .Actor:Self  0` .False )
  1B8:  Call  GetStatusFlags    ( .Actor:Self *Var0 )
  1CC:  If  *Var0  &  ~Flags:StatusFlags:Shrink % 80000
  1DC:  	Call  SetPartScale  ( .Actor:Self 00000003 *Fixed[0.4] *Fixed[0.4] *Fixed[0.4] )
  1FC:  	Call  SetPartScale  ( .Actor:Self 00000004 *Fixed[0.4] *Fixed[0.4] *Fixed[0.4] )
  21C:  Else
  224:  	Call  SetPartScale  ( .Actor:Self 00000003 *Fixed[1.0] *Fixed[1.0] *Fixed[1.0] )
  244:  	Call  SetPartScale  ( .Actor:Self 00000004 *Fixed[1.0] *Fixed[1.0] *Fixed[1.0] )
  264:  EndIf
  26C:  Call  EnemyTestTarget   ( .Actor:Self *Var0 ~Flags:DamageType:0 00000000 00000001 00000010 )
  290:  Switch  *Var0
  29C:  	CaseOR  ==  .HitResult:Miss % 6
  2A8:  	CaseOR  ==  .HitResult:Lucky % 5
  2B4:  		Set   *VarA  *Var0
  2C4:  		Call  SetAnimation  ( .Actor:Self 00000002 00420011 )
  2DC:  		Wait  5`
  2E8:  		Thread
  2F0:  			Call  SetAnimation  ( .Actor:Self 00000002 00420017 )
  308:  			Call  SetActorJumpGravity   ( .Actor:Self *Fixed[0.5] )
  31C:  			Call  GetActorPos   ( .Actor:Self *Var0 *Var1 *Var2 )
  338:  			Sub   *Var0  00000014
  348:  			Call  SetGoalPos    ( .Actor:Self *Var0 *Var1 *Var2 )
  364:  			Call  JumpToGoal    ( .Actor:Self  10` .False .True .False )
  384:  			Sub   *Var0  0000000A
  394:  			Call  SetGoalPos    ( .Actor:Self *Var0 *Var1 *Var2 )
  3B0:  			Call  JumpToGoal    ( .Actor:Self  5` .False .True .False )
  3D0:  			Call  SetAnimation  ( .Actor:Self 00000002 00420012 )
  3E8:  		EndThread
  3F0:  		Call  GetActorPos       ( .Actor:Self *Var0 *Var1 *Var2 )
  40C:  		Call  SetPartPos        ( .Actor:Self 00000003 *Var0  20` *Var2 )
  42C:  		Call  SetPartRotation   ( .Actor:Self 00000003 00000000 00000000 FFFFFFE2 )
  44C:  		Call  SetPartFlagBits   ( .Actor:Self 00000003 00000001 .False )
  468:  		Thread
  470:  			Call  MakeLerp  ( FFFFFFE2 0000002D 00000014 .Easing:Linear )
  48C:  			Label  0
  498:  			Call  UpdateLerp ( )
  4A4:  			Call  SetPartRotation   ( .Actor:Self 00000003 00000000 00000000 *Var0 )
  4C4:  			Wait  1`
  4D0:  			If  *Var1  ==  00000001
  4E0:  				Goto  0
  4EC:  			EndIf
  4F4:  		EndThread
  4FC:  		Call  PlaySoundAtPart   ( .Actor:Self 00000003 0000030A )
  514:  		Call  SetPartSounds     ( .Actor:Self 00000003 .ActorSound:Jump 00000000 00000000 )
  534:  		Call  SetGoalToTarget   ( .Actor:Self )
  544:  		Call  GetGoalPos        ( .Actor:Self *Var0 *Var1 *Var2 )
  560:  		Sub   *Var0  00000014
  570:  		Set   *Var1  0000000A
  580:  		Add   *Var2  00000002
  590:  		Call  SetPartJumpGravity    ( .Actor:Self 00000003 *Fixed[0.7] )
  5A8:  		Call  JumpPartTo        ( .Actor:Self 00000003 *Var0 *Var1 *Var2  20` .True )
  5D0:  		Wait  10`
  5DC:  		Call  SetPartFlagBits   ( .Actor:Self 00000003 00000001 .True )
  5F8:  		If  *VarA  ==  .HitResult:Lucky % 5
  608:  			Call  EnemyTestTarget   ( .Actor:Self *Var0 ~Flags:DamageType:TriggerLucky 00000000 00000000 00000000 )
  62C:  		EndIf
  634:  		Call  AddActorDecoration    ( .Actor:Self 00000002 00000000 .Decoration:Sweat )
  650:  		Wait  30`
  65C:  		Call  RemoveActorDecoration ( .Actor:Self 00000002 00000000 )
  674:  		Wait  10`
  680:  		ExecWait  $Script_BecomeShyGuy
  68C:  		Call  YieldTurn ( )
  698:  		Call  EnableIdleScript      ( .Actor:Self 00000001 )
  6AC:  		Call  UseIdleAnimation      ( .Actor:Self .True )
  6C0:  		Return
  6C8:  	EndCaseGroup
  6D0:  EndSwitch
  6D8:  Call  SetAnimation  ( .Actor:Self 00000002 00420011 )
  6F0:  Wait  5`
  6FC:  Thread
  704:  	Call  SetAnimation  ( .Actor:Self 00000002 00420017 )
  71C:  	Call  SetActorJumpGravity   ( .Actor:Self *Fixed[0.5] )
  730:  	Call  GetActorPos   ( .Actor:Self *Var0 *Var1 *Var2 )
  74C:  	Sub   *Var0  00000014
  75C:  	Call  SetGoalPos    ( .Actor:Self *Var0 *Var1 *Var2 )
  778:  	Call  JumpToGoal    ( .Actor:Self  10` .False .True .False )
  798:  	Sub   *Var0  0000000A
  7A8:  	Call  SetGoalPos    ( .Actor:Self *Var0 *Var1 *Var2 )
  7C4:  	Call  JumpToGoal    ( .Actor:Self  5` .False .True .False )
  7E4:  	Call  SetAnimation  ( .Actor:Self 00000002 00420012 )
  7FC:  EndThread
  804:  Call  GetActorPos       ( .Actor:Self *Var0 *Var1 *Var2 )
  820:  Call  SetPartPos        ( .Actor:Self 00000003 *Var0  20` *Var2 )
  840:  Call  SetPartRotation   ( .Actor:Self 00000003 00000000 00000000 FFFFFFE2 )
  860:  Call  SetPartFlagBits   ( .Actor:Self 00000003 00000001 .False )
  87C:  Thread
  884:  	Call  MakeLerp  ( FFFFFFE2 0000002D 00000014 .Easing:Linear )
  8A0:  	Label  0
  8AC:  	Call  UpdateLerp ( )
  8B8:  	Call  SetPartRotation   ( .Actor:Self 00000003 00000000 00000000 *Var0 )
  8D8:  	Wait  1`
  8E4:  	If  *Var1  ==  00000001
  8F4:  		Goto  0
  900:  	EndIf
  908:  EndThread
  910:  Call  PlaySoundAtPart   ( .Actor:Self 00000003 0000030A )
  928:  Call  SetPartSounds     ( .Actor:Self 00000003 .ActorSound:Jump 00000000 00000000 )
  948:  Call  SetGoalToTarget   ( .Actor:Self )
  958:  Call  GetGoalPos        ( .Actor:Self *Var0 *Var1 *Var2 )
  974:  Sub   *Var2  00000002
  984:  Call  SetPartJumpGravity    ( .Actor:Self 00000003 *Fixed[0.7] )
  99C:  Call  JumpPartTo        ( .Actor:Self 00000003 *Var0 *Var1 *Var2  20` .True )
  9C4:  Wait  2`
  9D0:  Call  SetGoalToTarget   ( .Actor:Self )
  9E0:  Call  EnemyDamageTarget ( .Actor:Self *Var0 ~Flags:DamageType:NoContact 00000000 00000000 00000003 00000020 )
  A08:  Wait  3`
  A14:  Call  SetPartFlagBits   ( .Actor:Self 00000003 00000001 .True )
  A30:  Wait  20`
  A3C:  ExecWait  $Script_BecomeShyGuy
  A48:  Switch  *Var0
  A54:  	CaseOR  ==  00000000
  A60:  	CaseOR  ==  00000002
  A6C:  	EndCaseGroup
  A74:  EndSwitch
  A7C:  Call  EnableIdleScript  ( .Actor:Self 00000001 )
  A90:  Call  UseIdleAnimation  ( .Actor:Self .True )
  AA4:  Return
  AAC:  End
}

#new:Script $Script_8021B770
{
    0:  Call  EnemyCreateTargetList ( 00008002 )
   10:  Call  InitTargetIterator ( )
   1C:  Label  0
   28:  Call  GetOwnerTarget        ( *Var0 *Var5 )
   3C:  Call  GetIndexFromHome      ( *Var0 *Var5 )
   50:  Mod   *Var5  00000004
   60:  Switch  *Var5
   6C:  	Case  ==  00000000
   78:  		Set   *Flag[01]  .True
   88:  	Case  ==  00000001
   94:  		Set   *Flag[02]  .True
   A4:  	Case  ==  00000002
   B0:  		Set   *Flag[03]  .True
   C0:  	Case  ==  00000003
   CC:  		Set   *Flag[04]  .True
   DC:  EndSwitch
   E4:  Call  ChooseNextTarget  ( .Iter:Next *Var0 )
   F8:  If  *Var0  !=  FFFFFFFF
  108:  	Goto  0
  114:  EndIf
  11C:  If  *Flag[01]  ==  .False
  12C:  	Set   *VarA  00000000
  13C:  	Return
  144:  EndIf
  14C:  If  *Flag[02]  ==  .False
  15C:  	Set   *VarA  00000001
  16C:  	Return
  174:  EndIf
  17C:  If  *Flag[03]  ==  .False
  18C:  	Set   *VarA  00000002
  19C:  	Return
  1A4:  EndIf
  1AC:  If  *Flag[04]  ==  .False
  1BC:  	Set   *VarA  00000003
  1CC:  	Return
  1D4:  EndIf
  1DC:  Set   *VarA  FFFFFFFF
  1EC:  Return
  1F4:  End
}

#new:Script $Script_8021B96C
{
    0:  Set   *Var9  00000000
   10:  Call  EnemyCreateTargetList ( 00008002 )
   20:  Call  InitTargetIterator ( )
   2C:  Label  0
   38:  Call  GetOwnerTarget        ( *Var0 *Var1 )
   4C:  Call  GetOriginalActorType  ( *Var0 *Var2 )
   60:  Switch  *Var2
   6C:  	Case  ==  00000029
   78:  		Call  GetStatusFlags    ( *Var0 *Var3 )
   8C:  		If  *Var3  !&  ~Flags:StatusFlags:Sleep|Frozen|Fear|Paralyze|Dizzy|Stone|Stop % 35D000
   9C:  			Call  GetActorVar   ( *Var0 00000000 *Var3 )
   B4:  			If  *Var3  !=  00000002
   C4:  				Add   *Var9  00000001
   D4:  			EndIf
   DC:  		EndIf
   E4:  	Case  ==  0000002A
   F0:  		Call  GetStatusFlags    ( *Var0 *Var3 )
  104:  		If  *Var3  !&  ~Flags:StatusFlags:Sleep|Frozen|Fear|Paralyze|Dizzy|Stone|Stop % 35D000
  114:  			Call  GetActorVar   ( *Var0 00000001 *Var3 )
  12C:  			If  *Var3  <  00000002
  13C:  				Add   *Var9  00000001
  14C:  			EndIf
  154:  		EndIf
  15C:  EndSwitch
  164:  Call  ChooseNextTarget  ( .Iter:Next *Var0 )
  178:  If  *Var0  !=  FFFFFFFF
  188:  	Goto  0
  194:  EndIf
  19C:  Return
  1A4:  End
}

#new:Script $Script_8021BB18
{
    0:  Call  GetIndexFromHome  ( .Actor:Self *VarA )
   14:  Set   *Flag[00]  .False
   24:  Call  EnemyCreateTargetList ( 00008004 )
   34:  Call  InitTargetIterator ( )
   40:  Label  0
   4C:  Call  GetOwnerTarget    ( *Var0 *Var1 )
   60:  Call  GetIndexFromHome  ( *Var0 *Var1 )
   74:  If  *Var1  <  *VarA
   84:  	Set   *Flag[00]  .True
   94:  EndIf
   9C:  Call  ChooseNextTarget  ( .Iter:Next *Var0 )
   B0:  If  *Var0  !=  FFFFFFFF
   C0:  	Goto  0
   CC:  EndIf
   D4:  If  *Flag[00]  ==  .True
   E4:  	Call  GetActorVar   ( .Actor:Self 00000000 *Var0 )
   FC:  	If  *Var0  ==  00000000
  10C:  		Set   *Var0  00000001
  11C:  		ExecWait  $Script_SetSpearStance
  128:  	EndIf
  130:  Else
  138:  	Call  GetActorVar   ( .Actor:Self 00000000 *Var0 )
  150:  	If  *Var0  ==  00000001
  160:  		Set   *Var0  00000000
  170:  		ExecWait  $Script_SetSpearStance
  17C:  	EndIf
  184:  EndIf
  18C:  Return
  194:  End
}

#new:Script $Script_TakeTurn_8021BCB4
{
    0:  Call  GetBattlePhase    ( *Var0 )
   10:  If  *Var0  ==  00000001
   20:  	ExecWait  $Script_SpearStab
   2C:  	ExecWait  $Script_8021BB18
   38:  	Return
   40:  EndIf
   48:  Call  GetActorVar   ( .Actor:Self 00000001 *Var0 )
   60:  Switch  *Var0
   6C:  	CaseOR  ==  00000000
   78:  	CaseOR  ==  00000001
   84:  		ExecWait  $Script_8021B770
   90:  		If  *VarA  ==  FFFFFFFF
   A0:  			ExecWait  $Script_SpearStab
   AC:  			ExecWait  $Script_8021BB18
   B8:  			Return
   C0:  		EndIf
   C8:  		ExecWait  $Script_8021B96C
   D4:  		Switch  *Var9
   E0:  			Case  ==  00000001
   EC:  				Call  RandInt   ( 000003E8 *Var0 )
  100:  				If  *Var0  <  0000012C
  110:  					ExecWait  $Script_SummonBackup
  11C:  					Return
  124:  				EndIf
  12C:  			Case  ==  00000002
  138:  				Call  RandInt   ( 000003E8 *Var0 )
  14C:  				If  *Var0  <  00000096
  15C:  					ExecWait  $Script_SummonBackup
  168:  					Return
  170:  				EndIf
  178:  			Case  ==  00000003
  184:  				Call  RandInt   ( 000003E8 *Var0 )
  198:  				If  *Var0  <  00000064
  1A8:  					ExecWait  $Script_SummonBackup
  1B4:  					Return
  1BC:  				EndIf
  1C4:  		EndSwitch
  1CC:  		ExecWait  $Script_SpearStab
  1D8:  		ExecWait  $Script_8021BB18
  1E4:  	EndCaseGroup
  1EC:  	Case  ==  00000002
  1F8:  		Call  EnemyCreateTargetList ( 00008002 )
  208:  		Call  GetTargetListLength   ( *Var0 )
  218:  		If  *Var0  ==  00000001
  228:  			ExecWait  $Script_SpearThrow
  234:  			Return
  23C:  		EndIf
  244:  		ExecWait  $Script_SpearStab
  250:  		ExecWait  $Script_8021BB18
  25C:  	Case  ==  00000003
  268:  		ExecWait  $Script_SpearThrow
  274:  EndSwitch
  27C:  Return
  284:  End
}

#new:IdleAnimations $IdleAnimations_8021BF40
{
	.Status:Normal    003B0001
	.Status:Stone     003B0000
	.Status:Sleep     003B0012
	.Status:Poison    003B0001
	.Status:Stop      003B0000
	.Status:Static    003B0001
	.Status:Paralyze  003B0000
	.Status:Dizzy     003B0013
	.Status:Fear      003B0013
	.Status:End
}

#new:Script $Script_8021BF8C
{
    0:  Call  BindTakeTurn      ( .Actor:Self $Script_TakeTurn_8021D8D8 )
   14:  Call  BindIdle  ( .Actor:Self $Script_Idle_8021BFD8 )
   28:  Call  BindHandleEvent   ( .Actor:Self $Script_HandleEvent_8021C14C )
   3C:  Return
   44:  End
}

#new:Script $Script_Idle_8021BFD8
{
    0:  Label  0
    C:  Call  GetStatusFlags    ( .Actor:Self *Var0 )
   20:  If  *Var0  &  ~Flags:StatusFlags:Sleep % 1000
   30:  	Call  SetTargetOffset       ( .Actor:Self 00000001  -4`  14` )
   4C:  	Call  8027D4C8  ( FFFFFF81 00000001 00000000 00000000 )
   68:  	Call  $Function_80218000    ( FFFFFFF6 0000000D 0000000A 0000000D )
   84:  Else
   8C:  	Call  SetTargetOffset       ( .Actor:Self 00000001  0`  24` )
   A8:  	Call  8027D4C8  ( FFFFFF81 00000001 FFFFFFFF FFFFFFF6 )
   C4:  	Call  $Function_80218000    ( FFFFFFF6 00000014 0000000A 00000014 )
   E0:  EndIf
   E8:  Wait  1`
   F4:  Goto  0
  100:  Return
  108:  End
}

#new:Script $Script_8021C0E8
{
    0:  Call  ResetAllActorSounds   ( .Actor:Self )
   10:  SetConst  *Var0  00000001
   20:  SetConst  *Var1  003B0003
   30:  ExecWait  DoReturnHome
   3C:  Call  SetAnimation  ( .Actor:Self 00000001 003B0001 )
   54:  Return
   5C:  End
}

#new:Script $Script_HandleEvent_8021C14C
{
    0:  Call  UseIdleAnimation  ( .Actor:Self .False )
   14:  Call  GetLastEvent      ( .Actor:Self *Var0 )
   28:  Switch  *Var0
   34:  	CaseOR  ==  .Event:HitCombo % 9
   40:  	CaseOR  ==  .Event:Hit % A
   4C:  		SetConst  *Var0  00000001
   5C:  		SetConst  *Var1  003B000C
   6C:  		ExecWait  DoNormalHit
   78:  	EndCaseGroup
   80:  	Case  ==  .Event:BurnHit % E
   8C:  		SetConst  *Var0  00000001
   9C:  		SetConst  *Var1  003B000D
   AC:  		SetConst  *Var2  003B000E
   BC:  		ExecWait  DoBurnHit
   C8:  	Case  ==  .Event:BurnDeath % 24
   D4:  		SetConst  *Var0  00000001
   E4:  		SetConst  *Var1  003B000D
   F4:  		SetConst  *Var2  003B000E
  104:  		ExecWait  DoBurnHit
  110:  		SetConst  *Var0  00000001
  120:  		SetConst  *Var1  003B000E
  130:  		ExecWait  DoDeath
  13C:  		Return
  144:  	Case  ==  .Event:SpinSmashHit % B
  150:  		SetConst  *Var0  00000001
  160:  		SetConst  *Var1  003B000C
  170:  		ExecWait  DoSpinSmashHit
  17C:  	Case  ==  .Event:SpinSmashDeath % 21
  188:  		SetConst  *Var0  00000001
  198:  		SetConst  *Var1  003B000C
  1A8:  		ExecWait  DoSpinSmashHit
  1B4:  		SetConst  *Var0  00000001
  1C4:  		SetConst  *Var1  003B000C
  1D4:  		ExecWait  DoDeath
  1E0:  		Return
  1E8:  	Case  ==  .Event:ShockHit % 2F
  1F4:  		SetConst  *Var0  00000001
  204:  		SetConst  *Var1  003B000C
  214:  		ExecWait  DoShockHit
  220:  		SetConst  *Var0  00000001
  230:  		SetConst  *Var1  003B000C
  240:  		ExecWait  DoJumpBack
  24C:  		Call  SetActorSpeed ( .Actor:Self *Fixed[4.0] )
  260:  		ExecWait  $Script_8021C0E8
  26C:  	Case  ==  .Event:ShockDeath % 26
  278:  		SetConst  *Var0  00000001
  288:  		SetConst  *Var1  003B000C
  298:  		ExecWait  DoShockHit
  2A4:  		SetConst  *Var0  00000001
  2B4:  		SetConst  *Var1  003B000C
  2C4:  		ExecWait  DoDeath
  2D0:  		Return
  2D8:  	CaseOR  ==  00000017 % 17
  2E4:  	CaseOR  ==  .Event:Immune % 19
  2F0:  	CaseOR  ==  .Event:AirLiftFailed % 1F
  2FC:  		SetConst  *Var0  00000001
  30C:  		SetConst  *Var1  003B0001
  31C:  		ExecWait  DoImmune
  328:  	EndCaseGroup
  330:  	Case  ==  .Event:Death % 20
  33C:  		SetConst  *Var0  00000001
  34C:  		SetConst  *Var1  003B000C
  35C:  		ExecWait  DoNormalHit
  368:  		Wait  10`
  374:  		SetConst  *Var0  00000001
  384:  		SetConst  *Var1  003B000C
  394:  		ExecWait  DoDeath
  3A0:  		Return
  3A8:  	Case  ==  .Event:RecoverStatus % 31
  3B4:  		SetConst  *Var0  00000001
  3C4:  		SetConst  *Var1  003B0001
  3D4:  		ExecWait  DoRecover
  3E0:  	Case  ==  .Event:ScareAway % 39
  3EC:  		SetConst  *Var0  00000001
  3FC:  		SetConst  *Var1  003B0003
  40C:  		SetConst  *Var2  003B0014
  41C:  		ExecWait  DoScareAway
  428:  		Return
  430:  	Case  ==  .Event:BeginAirLift % 3A
  43C:  		SetConst  *Var0  00000001
  44C:  		SetConst  *Var1  003B000C
  45C:  		ExecWait  DoAirLift
  468:  	Case  ==  .Event:BlowAway % 16
  474:  		SetConst  *Var0  00000001
  484:  		SetConst  *Var1  003B000C
  494:  		ExecWait  DoBlowAway
  4A0:  		Return
  4A8:  	Default
  4B0:  EndSwitch
  4B8:  Call  UseIdleAnimation  ( .Actor:Self .True )
  4CC:  Return
  4D4:  End
}

#new:Script $Script_8021C628
{
    0:  Call  UseIdleAnimation  ( .Actor:Self .False )
   14:  Call  EnableIdleScript  ( .Actor:Self 00000000 )
   28:  Call  SetTargetActor    ( .Actor:Self .Actor:Player )
   3C:  Call  UseBattleCamPreset    ( 0000003F )
   4C:  Call  BattleCamTargetActor  ( .Actor:Self )
   5C:  Call  MoveBattleCamOver (  20` )
   6C:  Call  8024ECF8  ( FFFFFFFF 00000001 00000000 )
   84:  Call  SetAnimation      ( .Actor:Self 00000001 003B0003 )
   9C:  Call  SetActorSpeed     ( .Actor:Self *Fixed[4.0] )
   B0:  Call  SetGoalToTarget   ( .Actor:Self )
   C0:  Call  GetGoalPos        ( .Actor:Self *Var0 *Var1 *Var2 )
   DC:  Add   *Var0  00000032
   EC:  Set   *Var1  00000000
   FC:  Call  SetGoalPos        ( .Actor:Self *Var0 *Var1 *Var2 )
  118:  Call  RunToGoal ( .Actor:Self  0` .False )
  130:  Call  EnemyTestTarget   ( .Actor:Self *Var0 ~Flags:DamageType:0 00000000 00000001 00000010 )
  154:  Switch  *Var0
  160:  	CaseOR  ==  .HitResult:Miss % 6
  16C:  	CaseOR  ==  .HitResult:Lucky % 5
  178:  		Set   *VarA  *Var0
  188:  		Call  SetActorSounds    ( .Actor:Self .ActorSound:Jump 000002EF 00000000 )
  1A4:  		Call  SetActorSounds    ( .Actor:Self .ActorSound:Walk 000020BA 000003B4 )
  1C0:  		Call  SetActorSounds    ( .Actor:Self .ActorSound:WalkIncrement 0000000A 00000000 )
  1DC:  		Call  SetActorSpeed ( .Actor:Self *Fixed[6.0] )
  1F0:  		Call  SetAnimation  ( .Actor:Self 00000001 003B0004 )
  208:  		Call  SetGoalToTarget   ( .Actor:Self )
  218:  		Call  RunToGoal     ( .Actor:Self  0` .False )
  230:  		Call  SetAnimation  ( .Actor:Self 00000001 003B0005 )
  248:  		Call  SetActorSpeed ( .Actor:Self *Fixed[6.0] )
  25C:  		Call  SetActorJumpGravity   ( .Actor:Self *Fixed[0.5] )
  270:  		Call  GetActorPos   ( .Actor:Self *Var0 *Var1 *Var2 )
  28C:  		Sub   *Var0  0000001E
  29C:  		Call  SetGoalPos    ( .Actor:Self *Var0 *Var1 *Var2 )
  2B8:  		Call  JumpToGoal    ( .Actor:Self  8` .False .True .False )
  2D8:  		If  *VarA  ==  .HitResult:Lucky % 5
  2E8:  			Call  EnemyTestTarget   ( .Actor:Self *VarA ~Flags:DamageType:TriggerLucky 00000000 00000000 00000000 )
  30C:  		EndIf
  314:  		Call  ResetAllActorSounds   ( .Actor:Self )
  324:  		Sub   *Var0  00000014
  334:  		Call  SetGoalPos        ( .Actor:Self *Var0 *Var1 *Var2 )
  350:  		Call  JumpToGoal        ( .Actor:Self  8` .False .True .False )
  370:  		Wait  15`
  37C:  		Call  UseBattleCamPreset    ( 00000002 )
  38C:  		Call  SetActorYaw       ( .Actor:Self  180` )
  3A0:  		Call  AddActorDecoration    ( .Actor:Self 00000001 00000000 .Decoration:Sweat )
  3BC:  		Call  SetActorSpeed     ( .Actor:Self *Fixed[4.0] )
  3D0:  		SetConst  *Var0  00000001
  3E0:  		SetConst  *Var1  003B0004
  3F0:  		ExecWait  DoReturnHome
  3FC:  		Call  RemoveActorDecoration ( .Actor:Self 00000001 00000000 )
  414:  		Call  SetActorYaw       ( .Actor:Self  0` )
  428:  		Call  SetAnimation      ( .Actor:Self 00000001 003B0001 )
  440:  		Call  EnableIdleScript  ( .Actor:Self 00000001 )
  454:  		Call  UseIdleAnimation  ( .Actor:Self .True )
  468:  		Return
  470:  	EndCaseGroup
  478:  EndSwitch
  480:  Thread
  488:  	Wait  3`
  494:  	Call  PlaySoundAtActor  ( .Actor:Self 000002EF )
  4A8:  EndThread
  4B0:  Call  SetActorSounds    ( .Actor:Self .ActorSound:Walk 000020BA 000003B4 )
  4CC:  Call  SetActorSounds    ( .Actor:Self .ActorSound:WalkIncrement 0000000A 00000000 )
  4E8:  Call  SetActorSpeed     ( .Actor:Self *Fixed[6.0] )
  4FC:  Call  SetAnimation      ( .Actor:Self 00000001 003B0004 )
  514:  Call  SetGoalToTarget   ( .Actor:Self )
  524:  Call  GetGoalPos        ( .Actor:Self *Var0 *Var1 *Var2 )
  540:  Add   *Var0  0000000A
  550:  Set   *Var1  00000000
  560:  Call  SetGoalPos        ( .Actor:Self *Var0 *Var1 *Var2 )
  57C:  Call  RunToGoal ( .Actor:Self  0` .False )
  594:  Call  SetAnimation      ( .Actor:Self 00000001 003B0005 )
  5AC:  Wait  2`
  5B8:  Call  SetGoalToTarget   ( .Actor:Self )
  5C8:  Call  EnemyDamageTarget ( .Actor:Self *Var0 ~Flags:DamageType:0 00000000 00000000 00000002 00000020 )
  5F0:  Call  ResetAllActorSounds   ( .Actor:Self )
  600:  Call  UseBattleCamPreset    ( 00000002 )
  610:  Call  MoveBattleCamOver (  15` )
  620:  Call  GetGoalPos        ( .Actor:Self *Var0 *Var1 *Var2 )
  63C:  Add   *Var0  0000001E
  64C:  Set   *Var1  00000000
  65C:  Call  SetActorJumpGravity   ( .Actor:Self *Fixed[1.8] )
  670:  Call  SetGoalPos        ( .Actor:Self *Var0 *Var1 *Var2 )
  68C:  Call  JumpToGoal        ( .Actor:Self  10` .False .True .False )
  6AC:  Call  SetAnimation      ( .Actor:Self 00000001 003B0001 )
  6C4:  Wait  8`
  6D0:  Call  SetActorSpeed     ( .Actor:Self *Fixed[6.0] )
  6E4:  ExecWait  $Script_8021C0E8
  6F0:  Call  EnableIdleScript  ( .Actor:Self 00000001 )
  704:  Call  UseIdleAnimation  ( .Actor:Self .True )
  718:  Return
  720:  End
}

#new:Script $Script_8021CD50
{
    0:  Call  UseIdleAnimation  ( .Actor:Self .False )
   14:  Call  EnableIdleScript  ( .Actor:Self 00000000 )
   28:  Call  SetTargetActor    ( .Actor:Self .Actor:Player )
   3C:  Call  UseBattleCamPreset    ( 0000003F )
   4C:  Call  BattleCamTargetActor  ( .Actor:Self )
   5C:  Call  MoveBattleCamOver (  20` )
   6C:  Call  8024ECF8  ( FFFFFFFF 00000001 00000000 )
   84:  Call  PlaySoundAtActor  ( .Actor:Self 00000234 )
   98:  Call  SetAnimation      ( .Actor:Self 00000001 003B0009 )
   B0:  Wait  20`
   BC:  Call  SetAnimation      ( .Actor:Self 00000001 003B0003 )
   D4:  Call  SetActorSpeed     ( .Actor:Self *Fixed[3.0] )
   E8:  Call  SetGoalToTarget   ( .Actor:Self )
   F8:  Call  GetGoalPos        ( .Actor:Self *Var0 *Var1 *Var2 )
  114:  Add   *Var0  00000050
  124:  Set   *Var1  00000000
  134:  Call  SetGoalPos        ( .Actor:Self *Var0 *Var1 *Var2 )
  150:  Call  RunToGoal ( .Actor:Self  0` .False )
  168:  Call  SetActorSounds    ( .Actor:Self .ActorSound:Walk 000020BA 000003B4 )
  184:  Call  SetActorSounds    ( .Actor:Self .ActorSound:WalkIncrement 0000000A 00000000 )
  1A0:  Call  SetAnimation      ( .Actor:Self 00000001 003B0004 )
  1B8:  Call  SetActorSpeed     ( .Actor:Self *Fixed[5.0] )
  1CC:  Sub   *Var0  00000028
  1DC:  Call  SetGoalPos        ( .Actor:Self *Var0 *Var1 *Var2 )
  1F8:  Call  RunToGoal ( .Actor:Self  0` .False )
  210:  Call  EnemyTestTarget   ( .Actor:Self *Var0 ~Flags:DamageType:0 00000000 00000001 00000010 )
  234:  Switch  *Var0
  240:  	CaseOR  ==  .HitResult:Miss % 6
  24C:  	CaseOR  ==  .HitResult:Lucky % 5
  258:  		Set   *VarA  *Var0
  268:  		Call  SetActorSpeed ( .Actor:Self *Fixed[6.0] )
  27C:  		Call  SetAnimation  ( .Actor:Self 00000001 003B0009 )
  294:  		Thread
  29C:  			Wait  12`
  2A8:  			Call  SetAnimation  ( .Actor:Self 00000001 003B000A )
  2C0:  		EndThread
  2C8:  		Call  SetActorJumpGravity   ( .Actor:Self *Fixed[0.8] )
  2DC:  		Call  SetGoalToTarget   ( .Actor:Self )
  2EC:  		Call  GetGoalPos        ( .Actor:Self *Var0 *Var1 *Var2 )
  308:  		Sub   *Var0  0000000A
  318:  		Set   *Var1  00000000
  328:  		Call  SetGoalPos        ( .Actor:Self *Var0 *Var1 *Var2 )
  344:  		Call  JumpToGoal        ( .Actor:Self  24` .False .True .False )
  364:  		If  *VarA  ==  .HitResult:Lucky % 5
  374:  			Call  EnemyTestTarget   ( .Actor:Self *Var0 ~Flags:DamageType:TriggerLucky 00000000 00000000 00000000 )
  398:  		EndIf
  3A0:  		Call  SetAnimation  ( .Actor:Self 00000001 003B0005 )
  3B8:  		Call  SetActorSpeed ( .Actor:Self *Fixed[6.0] )
  3CC:  		Call  SetActorJumpGravity   ( .Actor:Self *Fixed[0.5] )
  3E0:  		Call  GetActorPos   ( .Actor:Self *Var0 *Var1 *Var2 )
  3FC:  		Sub   *Var0  0000001E
  40C:  		Call  SetGoalPos    ( .Actor:Self *Var0 *Var1 *Var2 )
  428:  		Call  JumpToGoal    ( .Actor:Self  8` .False .True .False )
  448:  		Sub   *Var0  00000014
  458:  		Call  SetGoalPos    ( .Actor:Self *Var0 *Var1 *Var2 )
  474:  		Call  JumpToGoal    ( .Actor:Self  8` .False .True .False )
  494:  		Wait  15`
  4A0:  		Call  UseBattleCamPreset    ( 00000002 )
  4B0:  		Call  MoveBattleCamOver     (  15` )
  4C0:  		Call  SetActorYaw   ( .Actor:Self  180` )
  4D4:  		Call  AddActorDecoration    ( .Actor:Self 00000001 00000000 .Decoration:Sweat )
  4F0:  		Call  SetActorSpeed ( .Actor:Self *Fixed[6.0] )
  504:  		SetConst  *Var0  00000001
  514:  		SetConst  *Var1  003B0004
  524:  		ExecWait  DoReturnHome
  530:  		Call  RemoveActorDecoration ( .Actor:Self 00000001 00000000 )
  548:  		Call  SetActorYaw   ( .Actor:Self  0` )
  55C:  		Call  SetAnimation  ( .Actor:Self 00000001 003B0001 )
  574:  		Call  EnableIdleScript      ( .Actor:Self 00000001 )
  588:  		Call  UseIdleAnimation      ( .Actor:Self .True )
  59C:  		Return
  5A4:  	EndCaseGroup
  5AC:  EndSwitch
  5B4:  Call  SetActorSpeed ( .Actor:Self *Fixed[6.0] )
  5C8:  Call  SetAnimation  ( .Actor:Self 00000001 003B0009 )
  5E0:  Thread
  5E8:  	Wait  9`
  5F4:  	Call  SetAnimation  ( .Actor:Self 00000001 003B000A )
  60C:  EndThread
  614:  Call  SetActorJumpGravity   ( .Actor:Self *Fixed[0.8] )
  628:  Call  SetGoalToTarget   ( .Actor:Self )
  638:  Call  JumpToGoal        ( .Actor:Self  18` .False .True .False )
  658:  Wait  2`
  664:  Call  EnemyDamageTarget ( .Actor:Self *Var0 ~Flags:DamageType:0 00000000 00000000 00000003 00000020 )
  68C:  Switch  *Var0
  698:  	CaseOR  ==  .HitResult:Hit % 0
  6A4:  	CaseOR  ==  .HitResult:QuakeImmune % 2
  6B0:  		Call  UseBattleCamPreset    ( 00000002 )
  6C0:  		Call  MoveBattleCamOver     (  15` )
  6D0:  		Thread
  6D8:  			Call  SetActorRotationOffset    ( .Actor:Self 00000000 0000000E 00000000 )
  6F4:  			Set   *Var3  00000000
  704:  			Loop  00000014
  710:  				Sub   *Var3  0000001E
  720:  				If  *Var3  <  00000000
  730:  					Add   *Var3  00000168
  740:  				EndIf
  748:  				Call  SetActorRotation  ( .Actor:Self 00000000 00000000 *Var3 )
  764:  				Wait  1`
  770:  			EndLoop
  778:  			Call  SetActorRotation  ( .Actor:Self 00000000 00000000 00000000 )
  794:  			Call  SetActorRotationOffset    ( .Actor:Self 00000000 00000000 00000000 )
  7B0:  		EndThread
  7B8:  		Call  GetBattleFlags    ( *Var0 )
  7C8:  		If  *Var0  &  80000000
  7D8:  			Goto  1
  7E4:  		EndIf
  7EC:  		Call  GetLastDamage ( .Actor:Player *Var0 )
  800:  		If  *Var0  ==  00000000
  810:  			Goto  1
  81C:  		EndIf
  824:  		Call  GetGoalPos    ( .Actor:Self *Var0 *Var1 *Var2 )
  840:  		Add   *Var0  00000028
  850:  		Set   *Var1  00000000
  860:  		Call  SetActorJumpGravity   ( .Actor:Self *Fixed[0.8] )
  874:  		Call  SetGoalPos    ( .Actor:Self *Var0 *Var1 *Var2 )
  890:  		Call  JumpToGoal    ( .Actor:Self  20` .False .True .False )
  8B0:  		Call  PlaySoundAtActor      ( .Actor:Self 00000349 )
  8C4:  		Call  PlaySoundAtActor      ( .Actor:Self 00000749 )
  8D8:  		Call  SetAnimation  ( .Actor:Self 00000001 003B0009 )
  8F0:  		Wait  10`
  8FC:  		Call  SetAnimation  ( .Actor:Self 00000001 003B0007 )
  914:  		Wait  15`
  920:  		Goto  2
  92C:  		Label  1
  938:  		Call  GetGoalPos    ( .Actor:Self *Var0 *Var1 *Var2 )
  954:  		Add   *Var0  00000028
  964:  		Set   *Var1  00000000
  974:  		Call  SetActorJumpGravity   ( .Actor:Self *Fixed[0.8] )
  988:  		Call  SetGoalPos    ( .Actor:Self *Var0 *Var1 *Var2 )
  9A4:  		Call  JumpToGoal    ( .Actor:Self  20` .False .True .False )
  9C4:  		Call  PlaySoundAtActor      ( .Actor:Self 000020E4 )
  9D8:  		Call  SetAnimation  ( .Actor:Self 00000001 003B0010 )
  9F0:  		Wait  10`
  9FC:  		Call  PlaySoundAtActor      ( .Actor:Self 000020C3 )
  A10:  		Call  AddActorDecoration    ( .Actor:Self 00000001 00000000 .Decoration:Sweat )
  A2C:  		Call  RandInt       ( 00000064 *Var0 )
  A40:  		If  *Var0  <  00000032
  A50:  			Call  SetAnimation  ( .Actor:Self 00000001 003B0011 )
  A68:  		Else
  A70:  			Call  SetAnimation  ( .Actor:Self 00000001 003B0013 )
  A88:  		EndIf
  A90:  		Wait  25`
  A9C:  		Call  RemoveActorDecoration ( .Actor:Self 00000001 00000000 )
  AB4:  		Call  SetActorYaw   ( .Actor:Self  180` )
  AC8:  		Label  2
  AD4:  		Call  SetActorSpeed ( .Actor:Self *Fixed[6.0] )
  AE8:  		SetConst  *Var0  00000001
  AF8:  		SetConst  *Var1  003B0004
  B08:  		ExecWait  DoReturnHome
  B14:  		Call  SetActorYaw   ( .Actor:Self  0` )
  B28:  		Call  SetAnimation  ( .Actor:Self 00000001 003B0001 )
  B40:  	EndCaseGroup
  B48:  EndSwitch
  B50:  Call  EnableIdleScript  ( .Actor:Self 00000001 )
  B64:  Call  UseIdleAnimation  ( .Actor:Self .True )
  B78:  Return
  B80:  End
}

#new:Script $Script_TakeTurn_8021D8D8
{
    0:  Call  RandInt   ( 00000001 *Var0 )
   14:  If  *Var0  ==  00000000
   24:  	ExecWait  $Script_8021C628
   30:  Else
   38:  	ExecWait  $Script_8021CD50
   44:  EndIf
   4C:  Return
   54:  End
}

PADDING: 8021D934 to 8021D940 (00579254 to 00579260)
00000000 00000000 00000000

#new:IdleAnimations $IdleAnimations_8021D940
{
	.Status:Normal    00440002
	.Status:Stone     00440000
	.Status:Sleep     0044000C
	.Status:Poison    00440002
	.Status:Stop      00440000
	.Status:Static    00440002
	.Status:Paralyze  00440000
	.Status:Dizzy     00440009
	.Status:Fear      00440009
	.Status:End
}

#new:DefenseTable $DefenseTable_8021D98C
{
	.Element:Normal 00000000
	.Element:Fire   00000000
	.Element:End
}

#new:StatusTable $StatusTable_8021D9A0
{
	.Status:Normal      0`
	.Status:Default     0`
	.Status:Sleep      95`
	.Status:Poison     50`
	.Status:Frozen      0`
	.Status:Dizzy      50`
	.Status:Fear        0`
	.Status:Static     50`
	.Status:Paralyze   90`
	.Status:Shrink     75`
	.Status:Stop       90`
	.Status:DefaultTurnMod    0`
	.Status:SleepTurnMod      1`
	.Status:PoisonTurnMod     0`
	.Status:FrozenTurnMod     0`
	.Status:DizzyTurnMod     -1`
	.Status:FearTurnMod       0`
	.Status:StaticTurnMod     0`
	.Status:ParalyzeTurnMod   0`
	.Status:ShrinkTurnMod     0`
	.Status:StopTurnMod       0`
	.Status:End
}

#new:PartsTable $PartsTable_8021DA4C
{
	00800000 01000000 F61800FF $IdleAnimations_8021D940 $DefenseTable_8021D98C 00000000 00000000 F8FB0000 00000000
}

#new:Actor $HurtPlant
{
	% stats
	[Index]        26b
	[Level]        16`b
	[MaxHP]         8`b
	[Coins]         1`b
	[Flags]       00000000
	[StatusTable] $StatusTable_8021D9A0
	% ai
	[PartsCount]    1`s
	[PartsTable]  $PartsTable_8021DA4C
	[Script]      $Script_Init_8021DA98
	% move effectiveness
	[Escape]       70`b
	[Item]         70`b
	[AirLift]      20`b
	[Hurricane]    20`b % Bow's "Spook" as well
	[UpAndAway]    95`b
	[PowerBounce]  95`b
	[SpinSmash]     0`b % weight (0-4)
	% ui positions
	[Size]         40`b  35`b % width height
	[HealthBar]     0`b   0`b % dx dy
	[StatusTurn]  -18`b  23`b % dx dy
	[StatusIcon]    1`b  20`b % dx dy
}

#new:Script $Script_Init_8021DA98
{
    0:  Call  BindTakeTurn      ( .Actor:Self $Script_TakeTurn_8021E33C )
   14:  Call  BindIdle  ( .Actor:Self $Script_Idle_8021DAE4 )
   28:  Call  BindHandleEvent   ( .Actor:Self $Script_HandleEvent_8021DCF4 )
   3C:  Return
   44:  End
}

#new:Script $Script_Idle_8021DAE4
{
    0:  Label  0
    C:  Call  GetStatusFlags    ( .Actor:Self *Var0 )
   20:  Switch  *Var0
   2C:  	Case  &  ~Flags:StatusFlags:Sleep % 1000
   38:  		Call  SetTargetOffset       ( .Actor:Self 00000001  -6`  14` )
   54:  		Call  8027D4C8  ( FFFFFF81 00000001 FFFFFFFE FFFFFFFB )
   70:  		Call  $Function_802180D0    ( FFFFFFEC 00000008 00000000 0000000E )
   8C:  	Default
   94:  		Call  SetTargetOffset       ( .Actor:Self 00000001  -10`  24` )
   B0:  		Call  8027D4C8  ( FFFFFF81 00000001 FFFFFFF8 FFFFFFFB )
   CC:  		Call  $Function_802180D0    ( FFFFFFEE 00000017 00000001 00000014 )
   E8:  EndSwitch
   F0:  Wait  1`
   FC:  Goto  0
  108:  Return
  110:  End
}

#new:Script $Script_8021DBFC
{
    0:  Call  SetActorFlagBits  ( .Actor:Self 00000004 .True )
   18:  Call  PlaySoundAtActor  ( .Actor:Self .Sound:MoleDig )
   2C:  Call  SetAnimation      ( .Actor:Self 00000001 00440004 )
   44:  Wait  10`
   50:  Call  SetGoalToHome     ( .Actor:Self )
   60:  Call  GetGoalPos        ( .Actor:Self *Var0 *Var1 *Var2 )
   7C:  Call  SetActorPos       ( .Actor:Self *Var0 *Var1 *Var2 )
   98:  Call  PlaySoundAtActor  ( .Actor:Self .Sound:MoleSurface )
   AC:  Call  SetAnimation      ( .Actor:Self 00000001 00440003 )
   C4:  Wait  10`
   D0:  Call  SetActorFlagBits  ( .Actor:Self 00000004 .False )
   E8:  Return
   F0:  End
}

#new:Script $Script_HandleEvent_8021DCF4
{
    0:  Call  UseIdleAnimation  ( .Actor:Self .False )
   14:  Call  EnableIdleScript  ( .Actor:Self 00000000 )
   28:  Call  GetLastEvent      ( .Actor:Self *Var0 )
   3C:  Switch  *Var0
   48:  	CaseOR  ==  .Event:HitCombo % 9
   54:  	CaseOR  ==  .Event:Hit % A
   60:  		Call  SetAnimation  ( .Actor:Self 00000001 0044000D )
   78:  		Wait  3`
   84:  		SetConst  *Var0  00000001
   94:  		SetConst  *Var1  0044000E
   A4:  		ExecWait  DoNormalHit
   B0:  	EndCaseGroup
   B8:  	Case  ==  .Event:BurnHit % E
   C4:  		SetConst  *Var0  00000001
   D4:  		SetConst  *Var1  0044000A
   E4:  		SetConst  *Var2  FFFFFFFF
   F4:  		ExecWait  DoBurnHit
  100:  	Case  ==  .Event:BurnDeath % 24
  10C:  		SetConst  *Var0  00000001
  11C:  		SetConst  *Var1  0044000A
  12C:  		SetConst  *Var2  FFFFFFFF
  13C:  		ExecWait  DoBurnHit
  148:  		SetConst  *Var0  00000001
  158:  		SetConst  *Var1  0044000A
  168:  		ExecWait  DoDeath
  174:  		Return
  17C:  	Case  ==  .Event:SpinSmashHit % B
  188:  		Call  SetAnimation  ( .Actor:Self 00000001 0044000D )
  1A0:  		Wait  3`
  1AC:  		SetConst  *Var0  00000001
  1BC:  		SetConst  *Var1  0044000E
  1CC:  		ExecWait  DoSpinSmashHit
  1D8:  	Case  ==  .Event:SpinSmashDeath % 21
  1E4:  		Call  SetAnimation  ( .Actor:Self 00000001 0044000D )
  1FC:  		Wait  3`
  208:  		SetConst  *Var0  00000001
  218:  		SetConst  *Var1  0044000E
  228:  		ExecWait  DoSpinSmashHit
  234:  		SetConst  *Var0  00000001
  244:  		SetConst  *Var1  0044000E
  254:  		ExecWait  DoDeath
  260:  		Return
  268:  	Case  ==  .Event:ShockHit % 2F
  274:  		Call  SetAnimation  ( .Actor:Self 00000001 0044000D )
  28C:  		Wait  3`
  298:  		SetConst  *Var0  00000001
  2A8:  		SetConst  *Var1  0044000E
  2B8:  		ExecWait  DoShockHit
  2C4:  		Call  SetActorSpeed ( .Actor:Self *Fixed[4.0] )
  2D8:  		ExecWait  $Script_8021DBFC
  2E4:  	Case  ==  .Event:ShockDeath % 26
  2F0:  		Call  SetAnimation  ( .Actor:Self 00000001 0044000D )
  308:  		Wait  3`
  314:  		SetConst  *Var0  00000001
  324:  		SetConst  *Var1  0044000E
  334:  		ExecWait  DoShockHit
  340:  		SetConst  *Var0  00000001
  350:  		SetConst  *Var1  0044000E
  360:  		ExecWait  DoDeath
  36C:  		Return
  374:  	CaseOR  ==  00000017 % 17
  380:  	CaseOR  ==  .Event:Immune % 19
  38C:  	CaseOR  ==  .Event:AirLiftFailed % 1F
  398:  		SetConst  *Var0  00000001
  3A8:  		SetConst  *Var1  00440002
  3B8:  		ExecWait  DoImmune
  3C4:  	EndCaseGroup
  3CC:  	Case  ==  .Event:Death % 20
  3D8:  		Call  SetAnimation  ( .Actor:Self 00000001 0044000D )
  3F0:  		Wait  3`
  3FC:  		SetConst  *Var0  00000001
  40C:  		SetConst  *Var1  0044000E
  41C:  		ExecWait  DoNormalHit
  428:  		Wait  10`
  434:  		SetConst  *Var0  00000001
  444:  		SetConst  *Var1  0044000E
  454:  		ExecWait  DoDeath
  460:  		Return
  468:  	Case  ==  .Event:RecoverStatus % 31
  474:  		SetConst  *Var0  00000001
  484:  		SetConst  *Var1  00440002
  494:  		ExecWait  DoRecover
  4A0:  	Case  ==  .Event:ScareAway % 39
  4AC:  		Call  SetAnimation      ( .Actor:Self 00000001 0044000D )
  4C4:  		Wait  3`
  4D0:  		SetConst  *Var0  00000001
  4E0:  		SetConst  *Var1  0044000E
  4F0:  		ExecWait  DoNormalHit
  4FC:  		Call  PlaySoundAtActor  ( .Actor:Self .Sound:MoleDig )
  510:  		Call  SetAnimation      ( .Actor:Self 00000001 00440004 )
  528:  		Call  SetActorFlagBits  ( .Actor:Self 00000004 .True )
  540:  		Wait  20`
  54C:  		Call  8027D32C  ( FFFFFF81 )
  55C:  		Call  UseIdleAnimation  ( .Actor:Self .False )
  570:  		Call  RemoveActor       ( .Actor:Self )
  580:  		Return
  588:  	Case  ==  .Event:BeginAirLift % 3A
  594:  		SetConst  *Var0  00000001
  5A4:  		SetConst  *Var1  00440002
  5B4:  		ExecWait  DoAirLift
  5C0:  	Case  ==  .Event:BlowAway % 16
  5CC:  		SetConst  *Var0  00000001
  5DC:  		SetConst  *Var1  00440002
  5EC:  		ExecWait  DoBlowAway
  5F8:  		Return
  600:  	Default
  608:  EndSwitch
  610:  Call  EnableIdleScript  ( .Actor:Self 00000001 )
  624:  Call  UseIdleAnimation  ( .Actor:Self .True )
  638:  Return
  640:  End
}

#new:Script $Script_TakeTurn_8021E33C
{
    0:  Call  UseIdleAnimation  ( .Actor:Self .False )
   14:  Call  EnableIdleScript  ( .Actor:Self 00000000 )
   28:  Call  SetTargetActor    ( .Actor:Self .Actor:Player )
   3C:  Call  GetBattlePhase    ( *Var0 )
   4C:  If  *Var0  ==  00000001
   5C:  	Call  SetAnimation      ( .Actor:Self 00000001 00440004 )
   74:  	Call  SetActorFlagBits  ( .Actor:Self 00000004 .True )
   8C:  	Call  UseBattleCamPreset    ( 0000003F )
   9C:  	Call  BattleCamTargetActor  ( .Actor:Self )
   AC:  	Call  8024ECF8  ( FFFFFFFF 00000001 00000000 )
   C4:  	Call  MoveBattleCamOver (  1` )
   D4:  	Call  SetGoalToTarget   ( .Actor:Self )
   E4:  	Call  GetGoalPos        ( .Actor:Self *Var0 *Var1 *Var2 )
  100:  	Add   *Var0  0000001B
  110:  	Set   *Var1  00000000
  120:  	Call  SetActorPos       ( .Actor:Self *Var0 *Var1 *Var2 )
  13C:  	Wait  15`
  148:  	Goto  7B
  154:  EndIf
  15C:  Call  PlaySoundAtActor  ( .Actor:Self .Sound:MoleDig )
  170:  Call  SetAnimation      ( .Actor:Self 00000001 00440004 )
  188:  Call  SetActorFlagBits  ( .Actor:Self 00000004 .True )
  1A0:  Wait  8`
  1AC:  Call  UseBattleCamPreset    ( 00000013 )
  1BC:  Call  SetGoalToTarget   ( .Actor:Self )
  1CC:  Call  GetGoalPos        ( .Actor:Self *Var0 *Var1 *Var2 )
  1E8:  Add   *Var0  0000001B
  1F8:  Set   *Var1  00000000
  208:  Call  SetBattleCamTarget    ( *Var0 *Var1 *Var2 )
  220:  Call  SetBattleCamZoom  (  350` )
  230:  Call  SetBattleCamOffsetZ   (  45` )
  240:  Call  8024ECF8  ( FFFFFFFF 00000001 00000000 )
  258:  Call  MoveBattleCamOver (  20` )
  268:  Call  SetGoalToTarget   ( .Actor:Self )
  278:  Call  GetGoalPos        ( .Actor:Self *Var0 *Var1 *Var2 )
  294:  Add   *Var0  0000001B
  2A4:  Set   *Var1  00000000
  2B4:  Call  SetActorJumpGravity   ( .Actor:Self *Fixed[1.0] )
  2C8:  Call  SetActorSounds    ( .Actor:Self .ActorSound:Jump 00000000 00000000 )
  2E4:  Call  SetGoalPos        ( .Actor:Self *Var0 *Var1 *Var2 )
  300:  Call  JumpToGoal        ( .Actor:Self  20` .False .True .False )
  320:  Label  7B
  32C:  Call  PlaySoundAtActor  ( .Actor:Self .Sound:MoleSurface )
  340:  Call  SetActorPos       ( .Actor:Self *Var0 *Var1 *Var2 )
  35C:  Call  SetActorFlagBits  ( .Actor:Self 00000004 .False )
  374:  Call  SetAnimation      ( .Actor:Self 00000001 00440003 )
  38C:  Wait  10`
  398:  Call  SetAnimation      ( .Actor:Self 00000001 00440005 )
  3B0:  Wait  10`
  3BC:  Call  PlaySoundAtActor  ( .Actor:Self 000002C4 )
  3D0:  Call  SetAnimation      ( .Actor:Self 00000001 00440006 )
  3E8:  Wait  6`
  3F4:  Call  EnemyTestTarget   ( .Actor:Self *Var0 ~Flags:DamageType:0 00000000 00000001 00000010 )
  418:  Switch  *Var0
  424:  	CaseOR  ==  .HitResult:Miss % 6
  430:  	CaseOR  ==  .HitResult:Lucky % 5
  43C:  		Set   *VarA  *Var0
  44C:  		Call  SetAnimation  ( .Actor:Self 00000001 00440007 )
  464:  		Wait  5`
  470:  		If  *VarA  ==  .HitResult:Lucky % 5
  480:  			Call  EnemyTestTarget   ( .Actor:Self *Var0 ~Flags:DamageType:TriggerLucky 00000000 00000000 00000000 )
  4A4:  		EndIf
  4AC:  		Wait  15`
  4B8:  		Call  UseBattleCamPreset    ( 00000002 )
  4C8:  		Call  SetActorSpeed     ( .Actor:Self *Fixed[4.0] )
  4DC:  		ExecWait  $Script_8021DBFC
  4E8:  		Call  EnableIdleScript  ( .Actor:Self 00000001 )
  4FC:  		Call  UseIdleAnimation  ( .Actor:Self .True )
  510:  		Return
  518:  	EndCaseGroup
  520:  EndSwitch
  528:  Call  SetGoalToTarget   ( .Actor:Self )
  538:  Wait  2`
  544:  Call  GetStatusFlags    ( .Actor:Player *Var0 )
  558:  If  *Var0  &  ~Flags:StatusFlags:Poison % 20000
  568:  	Call  EnemyDamageTarget ( .Actor:Self *Var0 ~Flags:DamageType:0 00000000 00000000 00000002 00000020 )
  590:  Else
  598:  	Call  EnemyDamageTarget ( .Actor:Self *Var0 ~Flags:DamageType:0 00000000 ~DebuffType:Poison:3:100` 00000002 00000020 )
  5C0:  EndIf
  5C8:  Switch  *Var0
  5D4:  	CaseOR  ==  .HitResult:Hit % 0
  5E0:  	CaseOR  ==  .HitResult:QuakeImmune % 2
  5EC:  		Call  UseBattleCamPreset    ( 00000002 )
  5FC:  		Call  SetAnimation  ( .Actor:Self 00000001 00440007 )
  614:  		Wait  5`
  620:  		Call  SetActorSpeed ( .Actor:Self *Fixed[6.0] )
  634:  		ExecWait  $Script_8021DBFC
  640:  	EndCaseGroup
  648:  EndSwitch
  650:  Call  EnableIdleScript  ( .Actor:Self 00000001 )
  664:  Call  UseIdleAnimation  ( .Actor:Self .True )
  678:  Return
  680:  End
}

PADDING: 8021E9C4 to 8021E9D0 (0057A2E4 to 0057A2F0)
00000000 00000000 00000000

#new:DefenseTable $DefenseTable_8021E9D0
{
	.Element:Normal 00000000
	.Element:Fire   00000000
	.Element:End
}

#new:StatusTable $StatusTable_8021E9E4
{
	.Status:Normal      0`
	.Status:Default     0`
	.Status:Sleep      95`
	.Status:Poison     50`
	.Status:Frozen      0`
	.Status:Dizzy      90`
	.Status:Fear        0`
	.Status:Static     70`
	.Status:Paralyze   75`
	.Status:Shrink     75`
	.Status:Stop       90`
	.Status:DefaultTurnMod    0`
	.Status:SleepTurnMod     -1`
	.Status:PoisonTurnMod     0`
	.Status:FrozenTurnMod     0`
	.Status:DizzyTurnMod      0`
	.Status:FearTurnMod       0`
	.Status:StaticTurnMod     0`
	.Status:ParalyzeTurnMod   0`
	.Status:ShrinkTurnMod     0`
	.Status:StopTurnMod       0`
	.Status:End
}

#new:PartsTable $PartsTable_8021EA90
{
	00800000 01000000 001400FF $IdleAnimations_8021EADC $DefenseTable_8021E9D0 00000000 00000000 00F60000 00000000
}

#new:Actor $JungleFuzzy
{
	% stats
	[Index]        29b
	[Level]        16`b
	[MaxHP]         7`b
	[Coins]         1`b
	[Flags]       00000000
	[StatusTable] $StatusTable_8021E9E4
	% ai
	[PartsCount]    1`s
	[PartsTable]  $PartsTable_8021EA90
	[Script]      $Script_Init_8021EB28
	% move effectiveness
	[Escape]       30`b
	[Item]         75`b
	[AirLift]      85`b
	[Hurricane]    80`b % Bow's "Spook" as well
	[UpAndAway]    95`b
	[PowerBounce] 100`b
	[SpinSmash]     0`b % weight (0-4)
	% ui positions
	[Size]         33`b  28`b % width height
	[HealthBar]     0`b   0`b % dx dy
	[StatusTurn]  -10`b  20`b % dx dy
	[StatusIcon]   10`b  20`b % dx dy
}

#new:IdleAnimations $IdleAnimations_8021EADC
{
	.Status:Normal    002B0301
	.Status:Stone     002B0300
	.Status:Sleep     002B030E
	.Status:Poison    002B0301
	.Status:Stop      002B0300
	.Status:Static    002B0301
	.Status:Paralyze  002B0300
	.Status:Dizzy     002B030F
	.Status:Fear      002B030F
	.Status:End
}

#new:Script $Script_Init_8021EB28
{
    0:  Call  BindTakeTurn  ( .Actor:Self $Script_TakeTurn_80221628 )
   14:  Call  BindIdle      ( .Actor:Self $Script_Idle_8021EB8C )
   28:  Call  BindHandleEvent   ( .Actor:Self $Script_HandleEvent_8021EB9C )
   3C:  Call  SetActorVar   ( .Actor:Self 00000000 00000000 )
   54:  Return
   5C:  End
}

#new:Script $Script_Idle_8021EB8C
{
    0:  Return
    8:  End
}

#new:Script $Script_HandleEvent_8021EB9C
{
    0:  Call  UseIdleAnimation  ( .Actor:Self .False )
   14:  Call  EnableIdleScript  ( .Actor:Self 00000000 )
   28:  Call  SetActorScale     ( .Actor:Self *Fixed[1.0] *Fixed[1.0] *Fixed[1.0] )
   44:  Call  SetActorDispOffset    ( .Actor:Self 00000000 00000000 00000000 )
   60:  Call  GetLastEvent      ( .Actor:Self *Var0 )
   74:  Switch  *Var0
   80:  	CaseOR  ==  .Event:HitCombo % 9
   8C:  	CaseOR  ==  .Event:Hit % A
   98:  		Call  GetLastElement    ( *Var0 )
   A8:  		If  *Var0  &  00000020
   B8:  			SetConst  *Var0  00000001
   C8:  			SetConst  *Var1  002B0313
   D8:  		Else
   E0:  			SetConst  *Var0  00000001
   F0:  			SetConst  *Var1  002B0308
  100:  		EndIf
  108:  		ExecWait  DoNormalHit
  114:  	EndCaseGroup
  11C:  	Case  ==  .Event:BurnHit % E
  128:  		SetConst  *Var0  00000001
  138:  		SetConst  *Var1  002B0310
  148:  		SetConst  *Var2  002B0312
  158:  		ExecWait  DoBurnHit
  164:  	Case  ==  .Event:BurnDeath % 24
  170:  		SetConst  *Var0  00000001
  180:  		SetConst  *Var1  002B0310
  190:  		SetConst  *Var2  002B0312
  1A0:  		ExecWait  DoBurnHit
  1AC:  		SetConst  *Var0  00000001
  1BC:  		SetConst  *Var1  002B0312
  1CC:  		ExecWait  DoDeath
  1D8:  		Return
  1E0:  	Case  ==  .Event:SpinSmashHit % B
  1EC:  		SetConst  *Var0  00000001
  1FC:  		SetConst  *Var1  002B0308
  20C:  		ExecWait  DoSpinSmashHit
  218:  	Case  ==  .Event:SpinSmashDeath % 21
  224:  		SetConst  *Var0  00000001
  234:  		SetConst  *Var1  002B0308
  244:  		ExecWait  DoSpinSmashHit
  250:  		SetConst  *Var0  00000001
  260:  		SetConst  *Var1  002B0308
  270:  		ExecWait  DoDeath
  27C:  		Return
  284:  	Case  ==  .Event:ShockHit % 2F
  290:  		Call  80269470 ( )
  29C:  		SetConst  *Var0  00000001
  2AC:  		SetConst  *Var1  002B0313
  2BC:  		ExecWait  DoShockHit
  2C8:  		SetConst  *Var0  00000001
  2D8:  		SetConst  *Var1  002B0313
  2E8:  		ExecWait  DoJumpBack
  2F4:  		Call  JumpToGoal    ( .Actor:Self  5` .False .True .False )
  314:  		SetConst  *Var0  00000001
  324:  		SetConst  *Var1  002B0303
  334:  		ExecWait  8029C0A4
  340:  		Call  SetActorJumpGravity   ( .Actor:Self *Fixed[1.6] )
  354:  		Call  JumpToGoal    ( .Actor:Self  5` .False .True .False )
  374:  	Case  ==  .Event:ShockDeath % 26
  380:  		Call  80269470 ( )
  38C:  		SetConst  *Var0  00000001
  39C:  		SetConst  *Var1  002B0313
  3AC:  		ExecWait  DoShockHit
  3B8:  		SetConst  *Var0  00000001
  3C8:  		SetConst  *Var1  002B0313
  3D8:  		ExecWait  DoDeath
  3E4:  		Return
  3EC:  	CaseOR  ==  00000017 % 17
  3F8:  	CaseOR  ==  .Event:Immune % 19
  404:  		SetConst  *Var0  00000001
  414:  		SetConst  *Var1  002B0301
  424:  		ExecWait  DoImmune
  430:  	EndCaseGroup
  438:  	Case  ==  .Event:Death % 20
  444:  		Call  GetLastElement    ( *Var0 )
  454:  		If  *Var0  &  00000020
  464:  			SetConst  *Var0  00000001
  474:  			SetConst  *Var1  002B0313
  484:  			ExecWait  DoNormalHit
  490:  			Wait  10`
  49C:  			SetConst  *Var0  00000001
  4AC:  			SetConst  *Var1  002B0313
  4BC:  			ExecWait  DoDeath
  4C8:  		Else
  4D0:  			SetConst  *Var0  00000001
  4E0:  			SetConst  *Var1  002B0308
  4F0:  			ExecWait  DoNormalHit
  4FC:  			Wait  10`
  508:  			SetConst  *Var0  00000001
  518:  			SetConst  *Var1  002B0308
  528:  			ExecWait  DoDeath
  534:  		EndIf
  53C:  		Return
  544:  	Case  ==  .Event:RecoverStatus % 31
  550:  		SetConst  *Var0  00000001
  560:  		SetConst  *Var1  002B0301
  570:  		ExecWait  DoRecover
  57C:  	Case  ==  .Event:ScareAway % 39
  588:  		SetConst  *Var0  00000001
  598:  		SetConst  *Var1  002B0303
  5A8:  		SetConst  *Var2  002B0309
  5B8:  		ExecWait  DoScareAway
  5C4:  		Return
  5CC:  	Case  ==  .Event:BeginAirLift % 3A
  5D8:  		SetConst  *Var0  00000001
  5E8:  		SetConst  *Var1  002B0303
  5F8:  		ExecWait  DoAirLift
  604:  	Case  ==  .Event:BlowAway % 16
  610:  		SetConst  *Var0  00000001
  620:  		SetConst  *Var1  002B0303
  630:  		ExecWait  DoBlowAway
  63C:  		Return
  644:  	Case  ==  .Event:AirLiftFailed % 1F
  650:  		SetConst  *Var0  00000001
  660:  		SetConst  *Var1  002B0301
  670:  		ExecWait  DoImmune
  67C:  	Default
  684:  EndSwitch
  68C:  Call  EnableIdleScript  ( .Actor:Self 00000001 )
  6A0:  Call  UseIdleAnimation  ( .Actor:Self .True )
  6B4:  Return
  6BC:  End
}

#new:Script $Script_Divide
{
    0:  Call  UseIdleAnimation      ( .Actor:Self .False )
   14:  Call  EnableIdleScript      ( .Actor:Self 00000000 )
   28:  Call  UseBattleCamPreset    ( 00000013 )
   38:  Call  GetActorPos   ( .Actor:Self *Var0 *Var1 *Var2 )
   54:  Call  SetBattleCamTarget    ( *Var0 *Var1 *Var2 )
   6C:  Call  SetBattleCamZoom      (  330` )
   7C:  Call  SetBattleCamOffsetZ   (  30` )
   8C:  Call  MoveBattleCamOver     (  20` )
   9C:  Wait  20`
   A8:  Call  SetActorDispOffset    ( .Actor:Self 00000000 00000000 00000000 )
   C4:  Call  UseBattleCamPreset    ( 00000001 )
   D4:  Thread
   DC:  	Wait  30`
   E8:  	Call  PlaySoundAtActor  ( .Actor:Self 0000206E )
   FC:  	Wait  30`
  108:  	Loop  00000004
  114:  		Call  PlaySoundAtActor  ( .Actor:Self 0000206F )
  128:  		Wait  11`
  134:  	EndLoop
  13C:  	Call  PlaySoundAtActor  ( .Actor:Self 00002070 )
  150:  EndThread
  158:  Call  SetAnimation  ( .Actor:Self 00000001 002B030D )
  170:  Wait  130`
  17C:  Call  SetAnimation  ( .Actor:Self 00000001 002B0302 )
  194:  Call  SummonEnemy   ( $SpecialFormation_8022180C 00000000 )
  1A8:  Call  GetActorPos   ( .Actor:Self *Var1 *Var2 *Var3 )
  1C4:  Call  SetActorPos   ( *Var0 *Var1 *Var2 *Var3 )
  1E0:  Call  SetGoalToIndex        ( *Var0 *VarA )
  1F4:  Call  UseBattleCamPreset    ( 00000002 )
  204:  Call  MoveBattleCamOver     (  20` )
  214:  Thread
  21C:  	Call  SetAnimation  ( .Actor:Self 00000001 002B0302 )
  234:  	Call  SetActorJumpGravity   ( .Actor:Self *Fixed[1.4] )
  248:  	Call  GetActorPos   ( .Actor:Self *Var1 *Var2 *Var3 )
  264:  	Call  SetGoalPos    ( .Actor:Self *Var1 *Var2 *Var3 )
  280:  	Call  JumpToGoal    ( .Actor:Self  14` .False .True .False )
  2A0:  EndThread
  2A8:  Wait  1`
  2B4:  Call  SetAnimation  ( *Var0 00000001 002B0302 )
  2CC:  Call  SetActorJumpGravity   ( *Var0 *Fixed[1.4] )
  2E0:  Call  JumpToGoal    ( *Var0  14` .False .True .False )
  300:  Call  GetActorPos   ( *Var0 *Var1 *Var2 *Var3 )
  31C:  Call  ForceHomePos  ( *Var0 *Var1 *Var2 *Var3 )
  338:  Call  HPBarToHome   ( *Var0 )
  348:  Call  SetAnimation  ( *Var0 00000001 002B0301 )
  360:  Call  GetActorVar   ( .Actor:Self 00000000 *Var1 )
  378:  Switch  *Var1
  384:  	Case  ==  00000000
  390:  		Call  SetActorVar   ( *Var0 00000000 00000001 )
  3A8:  	Case  ==  00000001
  3B4:  		Call  SetActorVar   ( *Var0 00000000 00000002 )
  3CC:  EndSwitch
  3D4:  Call  EnableIdleScript  ( .Actor:Self 00000001 )
  3E8:  Call  UseIdleAnimation  ( .Actor:Self .True )
  3FC:  Return
  404:  End
}

#new:Script $Script_LeechAttack
{
    0:  Call  UseIdleAnimation  ( .Actor:Self .False )
   14:  Call  EnableIdleScript  ( .Actor:Self 00000000 )
   28:  Call  UseBattleCamPreset    ( 0000003F )
   38:  Call  BattleCamTargetActor  ( .Actor:Self )
   48:  Call  8024ECF8  ( FFFFFFFF 00000001 00000000 )
   60:  Call  GetBattlePhase    ( *Var0 )
   70:  If  *Var0  ==  00000001
   80:  	Call  SetGoalToTarget   ( .Actor:Self )
   90:  	Call  GetGoalPos        ( .Actor:Self *Var0 *Var1 *Var2 )
   AC:  	Add   *Var0  00000032
   BC:  	Set   *Var1  00000000
   CC:  	Call  SetActorPos       ( .Actor:Self *Var0 *Var1 *Var2 )
   E8:  	Goto  64
   F4:  EndIf
   FC:  Call  SetTargetActor    ( .Actor:Self .Actor:Player )
  110:  Call  SetAnimation      ( .Actor:Self 00000001 002B0303 )
  128:  Call  SetGoalToTarget   ( .Actor:Self )
  138:  Call  GetGoalPos        ( .Actor:Self *Var0 *Var1 *Var2 )
  154:  Add   *Var0  00000032
  164:  Set   *Var1  00000000
  174:  Call  SetActorSpeed     ( .Actor:Self *Fixed[6.0] )
  188:  Call  SetActorJumpGravity   ( .Actor:Self *Fixed[1.8] )
  19C:  ExecWait  8029C12C
  1A8:  Call  SetAnimation      ( .Actor:Self 00000001 002B0301 )
  1C0:  Label  64
  1CC:  Call  SetActorDispOffset    ( .Actor:Self 00000000 0000000A 00000000 )
  1E8:  Call  SetAnimation      ( .Actor:Self 00000001 002B0304 )
  200:  Call  SetActorDispOffset    ( .Actor:Self 00000000 00000009 00000000 )
  21C:  Wait  1`
  228:  Call  SetActorDispOffset    ( .Actor:Self 00000000 00000008 00000000 )
  244:  Wait  5`
  250:  Call  EnemyTestTarget   ( .Actor:Self *Var0 ~Flags:DamageType:IgnoreDefense 00000000 00000002 00000010 )
  274:  Switch  *Var0
  280:  	CaseOR  ==  .HitResult:Miss % 6
  28C:  	CaseOR  ==  .HitResult:Lucky % 5
  298:  		Set   *VarA  *Var0
  2A8:  		Call  SetGoalToTarget       ( .Actor:Self )
  2B8:  		Call  GetGoalPos    ( .Actor:Self *Var0 *Var1 *Var2 )
  2D4:  		Sub   *Var0  00000005
  2E4:  		Set   *Var1  00000000
  2F4:  		Sub   *Var2  00000005
  304:  		Call  SetActorJumpGravity   ( .Actor:Self *Fixed[3.0] )
  318:  		Call  SetAnimation  ( .Actor:Self 00000001 002B0305 )
  330:  		Call  SetGoalPos    ( .Actor:Self *Var0 *Var1 *Var2 )
  34C:  		Call  JumpToGoal    ( .Actor:Self  11` .False .True .False )
  36C:  		Call  SetActorDispOffset    ( .Actor:Self 00000000 00000000 00000000 )
  388:  		Call  SetAnimation  ( .Actor:Self 00000001 002B0309 )
  3A0:  		Call  GetGoalPos    ( .Actor:Self *Var0 *Var1 *Var2 )
  3BC:  		Sub   *Var0  00000014
  3CC:  		Call  SetActorJumpGravity   ( .Actor:Self *Fixed[3.0] )
  3E0:  		Call  SetGoalPos    ( .Actor:Self *Var0 *Var1 *Var2 )
  3FC:  		Call  JumpToGoal    ( .Actor:Self  6` .False .True .False )
  41C:  		Call  GetGoalPos    ( .Actor:Self *Var0 *Var1 *Var2 )
  438:  		Sub   *Var0  0000000F
  448:  		Call  SetActorJumpGravity   ( .Actor:Self *Fixed[3.0] )
  45C:  		Call  SetGoalPos    ( .Actor:Self *Var0 *Var1 *Var2 )
  478:  		Call  JumpToGoal    ( .Actor:Self  5` .False .True .False )
  498:  		Call  GetGoalPos    ( .Actor:Self *Var0 *Var1 *Var2 )
  4B4:  		Wait  4`
  4C0:  		Wait  5`
  4CC:  		If  *VarA  ==  .HitResult:Lucky % 5
  4DC:  			Call  EnemyTestTarget   ( .Actor:Self *Var0 ~Flags:DamageType:TriggerLucky 00000000 00000000 00000000 )
  500:  		EndIf
  508:  		Wait  5`
  514:  		Call  UseBattleCamPreset    ( 00000002 )
  524:  		Call  YieldTurn ( )
  530:  		Call  SetActorYaw       ( .Actor:Self  180` )
  544:  		Call  AddActorDecoration    ( .Actor:Self 00000001 00000000 .Decoration:Sweat )
  560:  		Call  SetAnimation      ( .Actor:Self 00000001 002B0303 )
  578:  		Call  SetGoalToHome     ( .Actor:Self )
  588:  		Call  GetGoalPos        ( .Actor:Self *Var0 *Var1 *Var2 )
  5A4:  		Call  SetActorSpeed     ( .Actor:Self *Fixed[8.0] )
  5B8:  		Call  SetActorJumpGravity   ( .Actor:Self *Fixed[1.8] )
  5CC:  		ExecWait  8029C12C
  5D8:  		Call  RemoveActorDecoration ( .Actor:Self 00000001 00000000 )
  5F0:  		Call  SetActorYaw       ( .Actor:Self  0` )
  604:  		Call  EnableIdleScript  ( .Actor:Self 00000001 )
  618:  		Call  UseIdleAnimation  ( .Actor:Self .True )
  62C:  		Return
  634:  	EndCaseGroup
  63C:  	Case  ==  .HitResult:HitStatic % 7
  648:  		Call  GetStatusFlags    ( .Actor:Self *Var0 )
  65C:  		If  *Var0  &  ~Flags:StatusFlags:Static % 2000
  66C:  			Set   *Flag[00]  .False
  67C:  		Else
  684:  			Set   *Flag[00]  .True
  694:  		EndIf
  69C:  EndSwitch
  6A4:  Call  SetGoalToTarget   ( .Actor:Self )
  6B4:  Call  AddGoalPos        ( .Actor:Self  -3`  -12`  -15` )
  6D0:  Call  SetActorJumpGravity   ( .Actor:Self *Fixed[3.0] )
  6E4:  Call  SetAnimation      ( .Actor:Self 00000001 002B0305 )
  6FC:  Call  JumpToGoal        ( .Actor:Self  8` .False .True .False )
  71C:  If  *Flag[00]  ==  .True
  72C:  	Call  EnemyDamageTarget ( .Actor:Self *Var0 ~Flags:DamageType:IgnoreDefense 00000000 00000000 00000000 00000020 )
  754:  	Return
  75C:  EndIf
  764:  Call  GetStatusFlags    ( .Actor:Player *Var1 )
  778:  If  *Var1  &  ~Flags:StatusFlags:Stone % 100000
  788:  	Wait  10`
  794:  	Loop  00000002
  7A0:  		Call  PlaySoundAtActor  ( .Actor:Self 000003E0 )
  7B4:  		Call  SetAnimation  ( .Actor:Self 00000001 002B0307 )
  7CC:  		Wait  21`
  7D8:  		Call  SetAnimation  ( .Actor:Self 00000001 002B0300 )
  7F0:  		Call  SetActorRotation  ( .Actor:Self 00000000 00000000 0000014A )
  80C:  		Call  PlaySoundAtActor  ( .Actor:Self 000003E0 )
  820:  		Call  SetActorDispOffset    ( .Actor:Self FFFFFFFD FFFFFFFE 00000000 )
  83C:  		Call  SetActorScale ( .Actor:Self *Fixed[1.0] *Fixed[1.0] *Fixed[1.0] )
  858:  		Wait  1`
  864:  		Call  SetActorScale ( .Actor:Self *Fixed[0.9] *Fixed[1.2] *Fixed[1.0] )
  880:  		Wait  1`
  88C:  		Call  SetActorScale ( .Actor:Self *Fixed[0.8] *Fixed[1.3] *Fixed[1.0] )
  8A8:  		Wait  1`
  8B4:  		Call  SetActorScale ( .Actor:Self *Fixed[0.7] *Fixed[1.4] *Fixed[1.0] )
  8D0:  		Wait  1`
  8DC:  		Call  SetActorScale ( .Actor:Self *Fixed[0.7] *Fixed[1.5] *Fixed[1.0] )
  8F8:  		Wait  2`
  904:  		Call  SetActorScale ( .Actor:Self *Fixed[0.6] *Fixed[1.6] *Fixed[1.0] )
  920:  		Wait  10`
  92C:  		Wait  2`
  938:  		Call  EnemyDamageTarget ( .Actor:Self *VarA ~Flags:DamageType:IgnoreDefense 00000000 00000000 00000002 00000040 )
  960:  		Call  SetActorRotation  ( .Actor:Self 00000000 00000000 00000000 )
  97C:  		Call  SetActorDispOffset    ( .Actor:Self 00000000 00000008 00000000 )
  998:  		Call  SetActorScale ( .Actor:Self *Fixed[1.0] *Fixed[1.0] *Fixed[1.0] )
  9B4:  		Call  SetAnimation  ( .Actor:Self 00000001 002B0305 )
  9CC:  		Wait  30`
  9D8:  	EndLoop
  9E0:  Else
  9E8:  	Call  ShowMessageBox    ( 00000031 00007FFF )
  9FC:  	Call  802694A4  ( 00000001 )
  A0C:  	Call  LoadActionCommand ( .ActionCommand:StopLeech )
  A1C:  	Call  802A9000 ( )
  A28:  	Call  SetupMashMeter    ( 00000001 00000017 00000000 00000000 00000000 00000000 )
  A4C:  	Wait  10`
  A58:  	Call  SetBattleFlagBits ( 00004000 .False )
  A6C:  	Call  802A9110  ( 00000000 00007FFF 00000003 )
  A84:  	Set   *VarD  00000000
  A94:  	Loop  00000005
  AA0:  		Call  UseIdleAnimation  ( .Actor:Player .False )
  AB4:  		Call  SetAnimation      ( .Actor:Player 00000000 0003000C )
  ACC:  		Call  PlaySoundAtActor  ( .Actor:Self 000003E0 )
  AE0:  		Call  SetAnimation      ( .Actor:Self 00000001 002B0307 )
  AF8:  		Set   *Flag[00]  .False
  B08:  		Loop  00000015
  B14:  			Call  GetActionSuccessCopy  ( *Var1 )
  B24:  			If  *Var1  ==  00000001
  B34:  				Set   *Flag[00]  .True
  B44:  				BreakLoop
  B4C:  			EndIf
  B54:  			Wait  1`
  B60:  		EndLoop
  B68:  		If  *Flag[00]  ==  .True
  B78:  			Call  UseIdleAnimation  ( .Actor:Player .True )
  B8C:  			BreakLoop
  B94:  		EndIf
  B9C:  		Call  SetAnimation      ( .Actor:Self 00000001 002B0300 )
  BB4:  		Call  SetActorRotation  ( .Actor:Self 00000000 00000000 0000014A )
  BD0:  		Call  PlaySoundAtActor  ( .Actor:Self 000003E0 )
  BE4:  		Call  SetActorDispOffset    ( .Actor:Self FFFFFFFD FFFFFFFE 00000000 )
  C00:  		Call  SetActorScale     ( .Actor:Self *Fixed[1.0] *Fixed[1.0] *Fixed[1.0] )
  C1C:  		Set   *Flag[00]  .False
  C2C:  		Loop  00000001
  C38:  			Call  GetActionSuccessCopy  ( *Var1 )
  C48:  			If  *Var1  ==  00000001
  C58:  				Set   *Flag[00]  .True
  C68:  				BreakLoop
  C70:  			EndIf
  C78:  			Wait  1`
  C84:  		EndLoop
  C8C:  		If  *Flag[00]  ==  .True
  C9C:  			Call  UseIdleAnimation  ( .Actor:Player .True )
  CB0:  			BreakLoop
  CB8:  		EndIf
  CC0:  		Call  SetActorScale ( .Actor:Self *Fixed[0.9] *Fixed[1.2] *Fixed[1.0] )
  CDC:  		Set   *Flag[00]  .False
  CEC:  		Loop  00000001
  CF8:  			Call  GetActionSuccessCopy  ( *Var1 )
  D08:  			If  *Var1  ==  00000001
  D18:  				Set   *Flag[00]  .True
  D28:  				BreakLoop
  D30:  			EndIf
  D38:  			Wait  1`
  D44:  		EndLoop
  D4C:  		If  *Flag[00]  ==  .True
  D5C:  			Call  UseIdleAnimation  ( .Actor:Player .True )
  D70:  			BreakLoop
  D78:  		EndIf
  D80:  		Call  SetActorScale ( .Actor:Self *Fixed[0.8] *Fixed[1.3] *Fixed[1.0] )
  D9C:  		Set   *Flag[00]  .False
  DAC:  		Loop  00000001
  DB8:  			Call  GetActionSuccessCopy  ( *Var1 )
  DC8:  			If  *Var1  ==  00000001
  DD8:  				Set   *Flag[00]  .True
  DE8:  				BreakLoop
  DF0:  			EndIf
  DF8:  			Wait  1`
  E04:  		EndLoop
  E0C:  		If  *Flag[00]  ==  .True
  E1C:  			Call  UseIdleAnimation  ( .Actor:Player .True )
  E30:  			BreakLoop
  E38:  		EndIf
  E40:  		Call  SetActorScale ( .Actor:Self *Fixed[0.7] *Fixed[1.4] *Fixed[1.0] )
  E5C:  		Set   *Flag[00]  .False
  E6C:  		Loop  00000001
  E78:  			Call  GetActionSuccessCopy  ( *Var1 )
  E88:  			If  *Var1  ==  00000001
  E98:  				Set   *Flag[00]  .True
  EA8:  				BreakLoop
  EB0:  			EndIf
  EB8:  			Wait  1`
  EC4:  		EndLoop
  ECC:  		If  *Flag[00]  ==  .True
  EDC:  			Call  UseIdleAnimation  ( .Actor:Player .True )
  EF0:  			BreakLoop
  EF8:  		EndIf
  F00:  		Call  SetActorScale ( .Actor:Self *Fixed[0.7] *Fixed[1.5] *Fixed[1.0] )
  F1C:  		Set   *Flag[00]  .False
  F2C:  		Loop  00000002
  F38:  			Call  GetActionSuccessCopy  ( *Var1 )
  F48:  			If  *Var1  ==  00000001
  F58:  				Set   *Flag[00]  .True
  F68:  				BreakLoop
  F70:  			EndIf
  F78:  			Wait  1`
  F84:  		EndLoop
  F8C:  		If  *Flag[00]  ==  .True
  F9C:  			Call  UseIdleAnimation  ( .Actor:Player .True )
  FB0:  			BreakLoop
  FB8:  		EndIf
  FC0:  		Call  SetActorScale ( .Actor:Self *Fixed[0.6] *Fixed[1.6] *Fixed[1.0] )
  FDC:  		Set   *Flag[00]  .False
  FEC:  		Loop  0000000A
  FF8:  			Call  GetActionSuccessCopy  ( *Var1 )
 1008:  			If  *Var1  ==  00000001
 1018:  				Set   *Flag[00]  .True
 1028:  				BreakLoop
 1030:  			EndIf
 1038:  			Wait  1`
 1044:  		EndLoop
 104C:  		If  *Flag[00]  ==  .True
 105C:  			Call  UseIdleAnimation  ( .Actor:Player .True )
 1070:  			BreakLoop
 1078:  		EndIf
 1080:  		Set   *Flag[00]  .False
 1090:  		Loop  00000002
 109C:  			Call  GetActionSuccessCopy  ( *Var1 )
 10AC:  			If  *Var1  ==  00000001
 10BC:  				Set   *Flag[00]  .True
 10CC:  				BreakLoop
 10D4:  			EndIf
 10DC:  			Wait  1`
 10E8:  		EndLoop
 10F0:  		If  *Flag[00]  ==  .True
 1100:  			Call  UseIdleAnimation  ( .Actor:Player .True )
 1114:  			BreakLoop
 111C:  		EndIf
 1124:  		Call  UseIdleAnimation  ( .Actor:Player .True )
 1138:  		Call  EnemyDamageTarget ( .Actor:Self *VarA ~Flags:DamageType:Unblockable|IgnoreDefense 00000000 00000000 00000002 00000040 )
 1160:  		Call  GetLastDamage     ( .Actor:Player *Var3 )
 1174:  		If  *Var3  !=  00000000
 1184:  			Call  PlaySoundAtActor  ( .Actor:Self 0000206D )
 1198:  			Call  PlaySoundAtActor  ( .Actor:Self 00000214 )
 11AC:  			Call  GetActorPos       ( .Actor:Self *Var0 *Var1 *Var2 )
 11C8:  			Add   *Var1  0000000A
 11D8:  			Call  $Function_802181A0    ( *Var0 *Var1 *Var2 *Var3 )
 11F4:  			Thread
 11FC:  				Wait  15`
 1208:  				Call  PlaySoundAtActor      ( .Actor:Self 0000025C )
 121C:  				Call  $Function_80218254    ( *Var0 *Var1 *Var2 *Var3 )
 1238:  			EndThread
 1240:  			Add   *Var0  00000014
 1250:  			Add   *Var1  00000014
 1260:  			Call  PlayEffect    ( ~FX:Recover:HP *Var0 *Var1 *Var2 *Var3 00000000 00000000 00000000 00000000 00000000 00000000 00000000 00000000 )
 12A4:  			Call  GetActorHP    ( .Actor:Self *Var0 )
 12B8:  			Add   *Var0  *Var3
 12C8:  			Call  SetEnemyHP    ( .Actor:Self *Var0 )
 12DC:  		Else
 12E4:  			Add   *VarD  00000001
 12F4:  			If  *VarD  >  00000001
 1304:  				Call  80269470 ( )
 1310:  				BreakLoop
 1318:  			EndIf
 1320:  		EndIf
 1328:  		Call  SetActorRotation  ( .Actor:Self 00000000 00000000 00000000 )
 1344:  		Call  SetActorDispOffset    ( .Actor:Self 00000000 00000008 00000000 )
 1360:  		Call  SetActorScale     ( .Actor:Self *Fixed[1.0] *Fixed[1.0] *Fixed[1.0] )
 137C:  		Call  SetAnimation      ( .Actor:Self 00000001 002B0305 )
 1394:  		Call  GetPlayerHP       ( *Var1 )
 13A4:  		If  *Var1  ==  00000000
 13B4:  			Call  80269470 ( )
 13C0:  			BreakLoop
 13C8:  		EndIf
 13D0:  		Set   *Flag[00]  .False
 13E0:  		Loop  00000023
 13EC:  			Call  GetActionSuccessCopy  ( *Var1 )
 13FC:  			If  *Var1  ==  00000001
 140C:  				Set   *Flag[00]  .True
 141C:  				BreakLoop
 1424:  			EndIf
 142C:  			Wait  1`
 1438:  		EndLoop
 1440:  		If  *Flag[00]  ==  .True
 1450:  			BreakLoop
 1458:  		EndIf
 1460:  	EndLoop
 1468:  	Call  80269470 ( )
 1474:  	Call  SetActorRotation  ( .Actor:Self 00000000 00000000 00000000 )
 1490:  	Call  SetActorDispOffset    ( .Actor:Self 00000000 00000008 00000000 )
 14AC:  	Call  SetActorScale     ( .Actor:Self *Fixed[1.0] *Fixed[1.0] *Fixed[1.0] )
 14C8:  	Call  SetAnimation      ( .Actor:Self 00000001 002B0305 )
 14E0:  EndIf
 14E8:  Call  SetActorDispOffset    ( .Actor:Self 00000000 00000000 00000000 )
 1504:  Call  SetAnimation  ( .Actor:Self 00000001 002B0301 )
 151C:  Call  UseBattleCamPreset    ( 00000002 )
 152C:  Thread
 1534:  	Call  SetActorScale     ( .Actor:Self *Fixed[1.6] *Fixed[0.6] *Fixed[1.0] )
 1550:  	Call  SetActorRotationOffset    ( .Actor:Self 00000000 0000000A 00000000 )
 156C:  	Wait  1`
 1578:  	Call  SetActorRotation  ( .Actor:Self 00000000 00000000 0000014A )
 1594:  	Wait  1`
 15A0:  	Call  SetActorScale     ( .Actor:Self *Fixed[0.7] *Fixed[1.5] *Fixed[1.0] )
 15BC:  	Call  SetActorRotation  ( .Actor:Self 00000000 00000000 0000012C )
 15D8:  	Wait  1`
 15E4:  	Call  SetActorRotation  ( .Actor:Self 00000000 00000000 0000010E )
 1600:  	Wait  1`
 160C:  	Call  SetActorScale     ( .Actor:Self *Fixed[1.0] *Fixed[0.7] *Fixed[1.0] )
 1628:  	Call  SetActorRotation  ( .Actor:Self 00000000 00000000 000000F0 )
 1644:  	Wait  1`
 1650:  	Call  SetActorRotation  ( .Actor:Self 00000000 00000000 000000D2 )
 166C:  	Wait  1`
 1678:  	Call  SetActorScale     ( .Actor:Self *Fixed[0.7] *Fixed[1.4] *Fixed[1.0] )
 1694:  	Call  SetActorRotation  ( .Actor:Self 00000000 00000000 000000B4 )
 16B0:  	Wait  2`
 16BC:  	Call  SetActorScale     ( .Actor:Self *Fixed[1.0] *Fixed[0.7] *Fixed[1.0] )
 16D8:  	Wait  2`
 16E4:  	Call  SetActorScale     ( .Actor:Self *Fixed[1.2] *Fixed[0.5] *Fixed[1.0] )
 1700:  EndThread
 1708:  Call  GetGoalPos    ( .Actor:Self *Var0 *Var1 *Var2 )
 1724:  Add   *Var0  00000028
 1734:  Set   *Var1  00000000
 1744:  Call  SetActorJumpGravity   ( .Actor:Self *Fixed[1.8] )
 1758:  Call  SetGoalPos    ( .Actor:Self *Var0 *Var1 *Var2 )
 1774:  Call  JumpToGoal    ( .Actor:Self  10` .False .True .False )
 1794:  Call  SetActorScale ( .Actor:Self *Fixed[1.4] *Fixed[0.2] *Fixed[1.0] )
 17B0:  Wait  1`
 17BC:  Thread
 17C4:  	Wait  1`
 17D0:  	Call  SetActorScale     ( .Actor:Self *Fixed[1.2] *Fixed[0.5] *Fixed[1.0] )
 17EC:  	Call  SetActorRotation  ( .Actor:Self 00000000 00000000 00000096 )
 1808:  	Wait  1`
 1814:  	Call  SetActorScale     ( .Actor:Self *Fixed[1.0] *Fixed[1.0] *Fixed[1.0] )
 1830:  	Call  SetActorRotation  ( .Actor:Self 00000000 00000000 00000078 )
 184C:  	Wait  1`
 1858:  	Call  SetActorRotation  ( .Actor:Self 00000000 00000000 0000005A )
 1874:  	Wait  1`
 1880:  	Call  SetActorRotation  ( .Actor:Self 00000000 00000000 0000003C )
 189C:  	Wait  1`
 18A8:  	Call  SetActorRotation  ( .Actor:Self 00000000 00000000 0000001E )
 18C4:  	Wait  1`
 18D0:  	Call  SetActorRotation  ( .Actor:Self 00000000 00000000 00000000 )
 18EC:  	Call  SetActorRotationOffset    ( .Actor:Self 00000000 00000000 00000000 )
 1908:  EndThread
 1910:  Call  GetGoalPos    ( .Actor:Self *Var0 *Var1 *Var2 )
 192C:  Add   *Var0  0000001E
 193C:  Call  SetGoalPos    ( .Actor:Self *Var0 *Var1 *Var2 )
 1958:  Call  JumpToGoal    ( .Actor:Self  8` .False .True .False )
 1978:  Wait  5`
 1984:  Call  YieldTurn ( )
 1990:  Call  SetActorDispOffset    ( .Actor:Self 00000000 00000000 00000000 )
 19AC:  Call  SetAnimation  ( .Actor:Self 00000001 002B0303 )
 19C4:  Call  SetGoalToHome ( .Actor:Self )
 19D4:  Call  GetGoalPos    ( .Actor:Self *Var0 *Var1 *Var2 )
 19F0:  Call  SetActorSpeed ( .Actor:Self *Fixed[8.0] )
 1A04:  Call  SetActorJumpGravity   ( .Actor:Self *Fixed[1.8] )
 1A18:  ExecWait  8029C12C
 1A24:  Call  SetAnimation  ( .Actor:Self 00000001 002B0301 )
 1A3C:  Call  EnableIdleScript      ( .Actor:Self 00000001 )
 1A50:  Call  UseIdleAnimation      ( .Actor:Self .True )
 1A64:  Return
 1A6C:  End
}

#new:Script $Script_802210E0
{
    0:  Set   *Flag[01]  .False
   10:  Set   *Flag[02]  .False
   20:  Set   *Flag[03]  .False
   30:  Set   *Flag[04]  .False
   40:  Call  EnemyCreateTargetList ( 00008002 )
   50:  Call  InitTargetIterator ( )
   5C:  Label  0
   68:  Call  GetOwnerTarget        ( *Var0 *Var5 )
   7C:  Call  GetIndexFromHome      ( *Var0 *Var5 )
   90:  Mod   *Var5  00000004
   A0:  Switch  *Var5
   AC:  	Case  ==  00000000
   B8:  		Set   *Flag[01]  .True
   C8:  	Case  ==  00000001
   D4:  		Set   *Flag[02]  .True
   E4:  	Case  ==  00000002
   F0:  		Set   *Flag[03]  .True
  100:  	Case  ==  00000003
  10C:  		Set   *Flag[04]  .True
  11C:  EndSwitch
  124:  Call  ChooseNextTarget  ( .Iter:Next *Var0 )
  138:  If  *Var0  !=  FFFFFFFF
  148:  	Goto  0
  154:  EndIf
  15C:  Set   *VarA  FFFFFFFF
  16C:  Set   *VarB  FFFFFFFF
  17C:  Call  GetIndexFromHome  ( .Actor:Self *Var0 )
  190:  Switch  *Var0
  19C:  	Case  ==  00000000
  1A8:  		If  *Flag[02]  ==  .False
  1B8:  			Set   *VarA  00000001
  1C8:  		EndIf
  1D0:  	Case  ==  00000001
  1DC:  		If  *Flag[01]  ==  .False
  1EC:  			Set   *VarA  00000000
  1FC:  		EndIf
  204:  		If  *Flag[03]  ==  .False
  214:  			If  *VarA  ==  FFFFFFFF
  224:  				Set   *VarA  00000002
  234:  			Else
  23C:  				Set   *VarB  00000002
  24C:  			EndIf
  254:  		EndIf
  25C:  	Case  ==  00000002
  268:  		If  *Flag[02]  ==  .False
  278:  			Set   *VarA  00000001
  288:  		EndIf
  290:  		If  *Flag[04]  ==  .False
  2A0:  			If  *VarA  ==  FFFFFFFF
  2B0:  				Set   *VarA  00000003
  2C0:  			Else
  2C8:  				Set   *VarB  00000003
  2D8:  			EndIf
  2E0:  		EndIf
  2E8:  	Case  ==  00000003
  2F4:  		If  *Flag[03]  ==  .False
  304:  			Set   *VarA  00000002
  314:  		EndIf
  31C:  EndSwitch
  324:  If  *VarB  !=  FFFFFFFF
  334:  	Call  RandInt   ( 000003E8 *Var0 )
  348:  	If  *Var0  <  000001F4
  358:  		Set   *VarA  *VarB
  368:  	EndIf
  370:  EndIf
  378:  Return
  380:  End
}

#new:Script $Script_80221468
{
    0:  Set   *Var9  00000000
   10:  Call  EnemyCreateTargetList ( 00008002 )
   20:  Call  InitTargetIterator ( )
   2C:  Label  0
   38:  Call  GetOwnerTarget        ( *Var0 *Var1 )
   4C:  Call  GetOriginalActorType  ( *Var0 *Var2 )
   60:  Switch  *Var2
   6C:  	CaseOR  ==  0000001A
   78:  	CaseOR  ==  00000029
   84:  		Call  GetStatusFlags    ( *Var0 *Var3 )
   98:  		If  *Var3  !&  ~Flags:StatusFlags:Sleep|Frozen|Fear|Paralyze|Dizzy|Stone|Stop % 35D000
   A8:  			Call  GetActorVar   ( *Var0 00000000 *Var3 )
   C0:  			If  *Var3  !=  00000002
   D0:  				Add   *Var9  00000001
   E0:  			EndIf
   E8:  		EndIf
   F0:  	EndCaseGroup
   F8:  	Case  ==  0000002A
  104:  		Call  GetStatusFlags    ( *Var0 *Var3 )
  118:  		If  *Var3  !&  ~Flags:StatusFlags:Sleep|Frozen|Fear|Paralyze|Dizzy|Stone|Stop % 35D000
  128:  			Call  GetActorVar   ( *Var0 00000001 *Var3 )
  140:  			If  *Var3  <  00000002
  150:  				Add   *Var9  00000001
  160:  			EndIf
  168:  		EndIf
  170:  EndSwitch
  178:  Call  ChooseNextTarget  ( .Iter:Next *Var0 )
  18C:  If  *Var0  !=  FFFFFFFF
  19C:  	Goto  0
  1A8:  EndIf
  1B0:  Return
  1B8:  End
}

#new:Script $Script_TakeTurn_80221628
{
    0:  Call  GetBattlePhase    ( *Var0 )
   10:  If  *Var0  ==  00000001
   20:  	ExecWait  $Script_LeechAttack
   2C:  	Return
   34:  EndIf
   3C:  Call  GetActorVar   ( .Actor:Self 00000000 *Var0 )
   54:  If  *Var0  ==  00000002
   64:  	ExecWait  $Script_LeechAttack
   70:  	Return
   78:  EndIf
   80:  ExecWait  $Script_802210E0
   8C:  If  *VarA  ==  FFFFFFFF
   9C:  	ExecWait  $Script_LeechAttack
   A8:  	Return
   B0:  EndIf
   B8:  ExecWait  $Script_80221468
   C4:  Switch  *Var9
   D0:  	Case  ==  00000001
   DC:  		Call  RandInt   ( 000003E8 *Var0 )
   F0:  		If  *Var0  <  00000190
  100:  			ExecWait  $Script_Divide
  10C:  			Return
  114:  		EndIf
  11C:  	Case  ==  00000002
  128:  		Call  RandInt   ( 000003E8 *Var0 )
  13C:  		If  *Var0  <  00000096
  14C:  			ExecWait  $Script_Divide
  158:  			Return
  160:  		EndIf
  168:  	Case  ==  00000003
  174:  		Call  RandInt   ( 000003E8 *Var0 )
  188:  		If  *Var0  <  00000046
  198:  			ExecWait  $Script_Divide
  1A4:  			Return
  1AC:  		EndIf
  1B4:  EndSwitch
  1BC:  ExecWait  $Script_LeechAttack
  1C8:  Return
  1D0:  End
}

#new:Vector3D $Vector3D_80221800
{
	0` -1000` 0`
}

#new:SpecialFormation $SpecialFormation_8022180C
{
	$JungleFuzzy $Vector3D_80221800 00000000 00000000 00000000 00000000 00000000
}

PADDING: 80221828 to 80221830 (0057D148 to 0057D150)
00000000 00000000

#new:IdleAnimations $IdleAnimations_80221830
{
	.Status:Normal    00450002
	.Status:Stone     00450001
	.Status:Sleep     00450008
	.Status:Poison    00450002
	.Status:Stop      00450001
	.Status:Static    00450002
	.Status:Paralyze  00450001
	.Status:Dizzy     00450009
	.Status:Fear      00450009
	.Status:End
}

#new:DefenseTable $DefenseTable_8022187C
{
	.Element:Normal 00000000
	.Element:Fire   00000000
	.Element:End
}

#new:StatusTable $StatusTable_80221890
{
	.Status:Normal      0`
	.Status:Default     0`
	.Status:Sleep      95`
	.Status:Poison     50`
	.Status:Frozen      0`
	.Status:Dizzy      50`
	.Status:Fear        0`
	.Status:Static     50`
	.Status:Paralyze   90`
	.Status:Shrink     75`
	.Status:Stop       90`
	.Status:DefaultTurnMod    0`
	.Status:SleepTurnMod      1`
	.Status:PoisonTurnMod     0`
	.Status:FrozenTurnMod     0`
	.Status:DizzyTurnMod     -1`
	.Status:FearTurnMod       0`
	.Status:StaticTurnMod     0`
	.Status:ParalyzeTurnMod   0`
	.Status:ShrinkTurnMod     0`
	.Status:StopTurnMod       0`
	.Status:End
}

#new:PartsTable $PartsTable_8022193C
{
	00800000 01000000 FE1600FF $IdleAnimations_80221830 $DefenseTable_8022187C 00000000 00000000 00F60000 00000000
}

#new:Actor $MBush
{
	% stats
	[Index]        27b
	[Level]        16`b
	[MaxHP]         8`b
	[Coins]         1`b
	[Flags]       00000000
	[StatusTable] $StatusTable_80221890
	% ai
	[PartsCount]    1`s
	[PartsTable]  $PartsTable_8022193C
	[Script]      $Script_Init_80221988
	% move effectiveness
	[Escape]       70`b
	[Item]         60`b
	[AirLift]      85`b
	[Hurricane]    80`b % Bow's "Spook" as well
	[UpAndAway]    95`b
	[PowerBounce]  85`b
	[SpinSmash]     0`b % weight (0-4)
	% ui positions
	[Size]         32`b  30`b % width height
	[HealthBar]     0`b   0`b % dx dy
	[StatusTurn]  -10`b  20`b % dx dy
	[StatusIcon]   10`b  20`b % dx dy
}

#new:Script $Script_Init_80221988
{
    0:  Call  BindTakeTurn      ( .Actor:Self $Script_TakeTurn_80221F78 )
   14:  Call  BindIdle  ( .Actor:Self $Script_Idle_802219D4 )
   28:  Call  BindHandleEvent   ( .Actor:Self $Script_HandleEvent_80221A74 )
   3C:  Return
   44:  End
}

#new:Script $Script_Idle_802219D4
{
    0:  Return
    8:  End
}

#new:Script $Script_802219E4
{
    0:  Call  SetActorYaw   ( .Actor:Self  180` )
   14:  Call  SetAnimation  ( .Actor:Self 00000001 00450005 )
   2C:  Call  SetGoalToHome ( .Actor:Self )
   3C:  Call  RunToGoal     ( .Actor:Self  0` .False )
   54:  Call  SetAnimation  ( .Actor:Self 00000001 00450002 )
   6C:  Call  SetActorYaw   ( .Actor:Self  0` )
   80:  Return
   88:  End
}

#new:Script $Script_HandleEvent_80221A74
{
    0:  Call  UseIdleAnimation  ( .Actor:Self .False )
   14:  Call  EnableIdleScript  ( .Actor:Self 00000000 )
   28:  Call  GetLastEvent      ( .Actor:Self *Var0 )
   3C:  Switch  *Var0
   48:  	CaseOR  ==  .Event:HitCombo % 9
   54:  	CaseOR  ==  .Event:Hit % A
   60:  		SetConst  *Var0  00000001
   70:  		SetConst  *Var1  00450007
   80:  		ExecWait  DoNormalHit
   8C:  	EndCaseGroup
   94:  	Case  ==  .Event:BurnHit % E
   A0:  		SetConst  *Var0  00000001
   B0:  		SetConst  *Var1  0045000A
   C0:  		SetConst  *Var2  0045000B
   D0:  		ExecWait  DoBurnHit
   DC:  	Case  ==  .Event:BurnDeath % 24
   E8:  		SetConst  *Var0  00000001
   F8:  		SetConst  *Var1  0045000A
  108:  		SetConst  *Var2  0045000B
  118:  		ExecWait  DoBurnHit
  124:  		SetConst  *Var0  00000001
  134:  		SetConst  *Var1  0045000B
  144:  		ExecWait  DoDeath
  150:  		Return
  158:  	Case  ==  .Event:SpinSmashHit % B
  164:  		SetConst  *Var0  00000001
  174:  		SetConst  *Var1  00450007
  184:  		ExecWait  DoSpinSmashHit
  190:  	Case  ==  .Event:SpinSmashDeath % 21
  19C:  		SetConst  *Var0  00000001
  1AC:  		SetConst  *Var1  00450007
  1BC:  		ExecWait  DoSpinSmashHit
  1C8:  		SetConst  *Var0  00000001
  1D8:  		SetConst  *Var1  00450007
  1E8:  		ExecWait  DoDeath
  1F4:  		Return
  1FC:  	Case  ==  .Event:ShockHit % 2F
  208:  		SetConst  *Var0  00000001
  218:  		SetConst  *Var1  00450007
  228:  		ExecWait  DoShockHit
  234:  		SetConst  *Var0  00000001
  244:  		SetConst  *Var1  00450007
  254:  		ExecWait  DoJumpBack
  260:  		Call  SetActorSpeed ( .Actor:Self *Fixed[4.0] )
  274:  		ExecWait  $Script_802219E4
  280:  	Case  ==  .Event:ShockDeath % 26
  28C:  		SetConst  *Var0  00000001
  29C:  		SetConst  *Var1  00450007
  2AC:  		ExecWait  DoShockHit
  2B8:  		SetConst  *Var0  00000001
  2C8:  		SetConst  *Var1  00450007
  2D8:  		ExecWait  DoDeath
  2E4:  		Return
  2EC:  	CaseOR  ==  00000017 % 17
  2F8:  	CaseOR  ==  .Event:Immune % 19
  304:  	CaseOR  ==  .Event:AirLiftFailed % 1F
  310:  		SetConst  *Var0  00000001
  320:  		SetConst  *Var1  00450002
  330:  		ExecWait  DoImmune
  33C:  	EndCaseGroup
  344:  	Case  ==  .Event:Death % 20
  350:  		SetConst  *Var0  00000001
  360:  		SetConst  *Var1  00450007
  370:  		ExecWait  DoNormalHit
  37C:  		Wait  10`
  388:  		SetConst  *Var0  00000001
  398:  		SetConst  *Var1  00450007
  3A8:  		ExecWait  DoDeath
  3B4:  		Return
  3BC:  	Case  ==  .Event:RecoverStatus % 31
  3C8:  		SetConst  *Var0  00000001
  3D8:  		SetConst  *Var1  00450002
  3E8:  		ExecWait  DoRecover
  3F4:  	Case  ==  .Event:ScareAway % 39
  400:  		SetConst  *Var0  00000001
  410:  		SetConst  *Var1  00450005
  420:  		SetConst  *Var2  00450009
  430:  		ExecWait  DoScareAway
  43C:  		Return
  444:  	Case  ==  .Event:BeginAirLift % 3A
  450:  		SetConst  *Var0  00000001
  460:  		SetConst  *Var1  00450005
  470:  		ExecWait  DoAirLift
  47C:  	Case  ==  .Event:BlowAway % 16
  488:  		SetConst  *Var0  00000001
  498:  		SetConst  *Var1  00450005
  4A8:  		ExecWait  DoBlowAway
  4B4:  		Return
  4BC:  	Default
  4C4:  EndSwitch
  4CC:  Call  EnableIdleScript  ( .Actor:Self 00000001 )
  4E0:  Call  UseIdleAnimation  ( .Actor:Self .True )
  4F4:  Return
  4FC:  End
}

#new:Script $Script_TakeTurn_80221F78
{
    0:  Call  UseIdleAnimation  ( .Actor:Self .False )
   14:  Call  EnableIdleScript  ( .Actor:Self 00000000 )
   28:  Call  SetTargetActor    ( .Actor:Self .Actor:Player )
   3C:  Call  UseBattleCamPreset    ( 0000003F )
   4C:  Call  BattleCamTargetActor  ( .Actor:Self )
   5C:  Call  8024ECF8  ( FFFFFFFF 00000001 00000000 )
   74:  Call  SetAnimation      ( .Actor:Self 00000001 00450004 )
   8C:  Call  SetGoalToTarget   ( .Actor:Self )
   9C:  Call  GetGoalPos        ( .Actor:Self *Var0 *Var1 *Var2 )
   B8:  Add   *Var0  00000032
   C8:  Set   *Var1  00000000
   D8:  Call  SetActorSpeed     ( .Actor:Self *Fixed[4.0] )
   EC:  Call  SetGoalPos        ( .Actor:Self *Var0 *Var1 *Var2 )
  108:  Call  RunToGoal ( .Actor:Self  0` .False )
  120:  Call  SetActorSounds    ( .Actor:Self .ActorSound:Jump 000020C9 00000000 )
  13C:  Call  EnemyTestTarget   ( .Actor:Self *Var0 ~Flags:DamageType:0 00000000 00000001 00000010 )
  160:  Switch  *Var0
  16C:  	CaseOR  ==  .HitResult:Miss % 6
  178:  	CaseOR  ==  .HitResult:Lucky % 5
  184:  		Set   *VarA  *Var0
  194:  		Call  SetAnimation      ( .Actor:Self 00000001 00450006 )
  1AC:  		Call  SetActorJumpGravity   ( .Actor:Self *Fixed[1.0] )
  1C0:  		Call  SetGoalToTarget   ( .Actor:Self )
  1D0:  		Call  GetGoalPos        ( .Actor:Self *Var0 *Var1 *Var2 )
  1EC:  		Sub   *Var0  0000001E
  1FC:  		Set   *Var1  00000000
  20C:  		Call  SetGoalPos        ( .Actor:Self *Var0 *Var1 *Var2 )
  228:  		Call  JumpToGoal        ( .Actor:Self  20` .False .True .False )
  248:  		Call  ResetAllActorSounds   ( .Actor:Self )
  258:  		If  *VarA  ==  .HitResult:Lucky % 5
  268:  			Call  EnemyTestTarget   ( .Actor:Self *VarA ~Flags:DamageType:TriggerLucky 00000000 00000000 00000000 )
  28C:  		EndIf
  294:  		Sub   *Var0  00000014
  2A4:  		Call  SetGoalPos        ( .Actor:Self *Var0 *Var1 *Var2 )
  2C0:  		Call  JumpToGoal        ( .Actor:Self  10` .False .True .False )
  2E0:  		Wait  15`
  2EC:  		Call  SetAnimation      ( .Actor:Self 00000001 00450002 )
  304:  		Wait  15`
  310:  		Call  UseBattleCamPreset    ( 00000002 )
  320:  		Call  YieldTurn ( )
  32C:  		Call  AddActorDecoration    ( .Actor:Self 00000001 00000000 .Decoration:Sweat )
  348:  		Call  SetActorSpeed     ( .Actor:Self *Fixed[6.0] )
  35C:  		ExecWait  $Script_802219E4
  368:  		Call  RemoveActorDecoration ( .Actor:Self 00000001 00000000 )
  380:  		Call  EnableIdleScript  ( .Actor:Self 00000001 )
  394:  		Call  UseIdleAnimation  ( .Actor:Self .True )
  3A8:  		Return
  3B0:  	EndCaseGroup
  3B8:  EndSwitch
  3C0:  Call  SetAnimation      ( .Actor:Self 00000001 00450006 )
  3D8:  Call  SetGoalToTarget   ( .Actor:Self )
  3E8:  Call  GetGoalPos        ( .Actor:Self *Var0 *Var1 *Var2 )
  404:  Call  SetActorJumpGravity   ( .Actor:Self *Fixed[1.0] )
  418:  Call  JumpToGoal        ( .Actor:Self  10` .False .True .False )
  438:  Call  ResetAllActorSounds   ( .Actor:Self )
  448:  Wait  2`
  454:  Call  EnemyDamageTarget ( .Actor:Self *Var0 ~Flags:DamageType:0 00000000 ~DebuffType:Poison:2:25` 00000003 00000020 )
  47C:  Switch  *Var0
  488:  	CaseOR  ==  .HitResult:Hit % 0
  494:  	CaseOR  ==  .HitResult:QuakeImmune % 2
  4A0:  		Call  UseBattleCamPreset    ( 00000002 )
  4B0:  		Call  GetGoalPos    ( .Actor:Self *Var0 *Var1 *Var2 )
  4CC:  		Add   *Var0  0000001E
  4DC:  		Set   *Var1  00000000
  4EC:  		Call  SetActorJumpGravity   ( .Actor:Self *Fixed[1.8] )
  500:  		Call  SetGoalPos    ( .Actor:Self *Var0 *Var1 *Var2 )
  51C:  		Call  JumpToGoal    ( .Actor:Self  10` .False .True .False )
  53C:  		Call  SetAnimation  ( .Actor:Self 00000001 00450002 )
  554:  		Wait  8`
  560:  		Call  YieldTurn ( )
  56C:  		Call  SetActorSpeed ( .Actor:Self *Fixed[6.0] )
  580:  		ExecWait  $Script_802219E4
  58C:  	EndCaseGroup
  594:  EndSwitch
  59C:  Call  EnableIdleScript  ( .Actor:Self 00000001 )
  5B0:  Call  UseIdleAnimation  ( .Actor:Self .True )
  5C4:  Return
  5CC:  End
}

PADDING: 8022254C to 80222550 (0057DE6C to 0057DE70)
00000000

#new:IdleAnimations $IdleAnimations_80222550
{
	.Status:Normal    00400001
	.Status:Stone     00400000
	.Status:Sleep     00400004
	.Status:Poison    00400001
	.Status:Stop      00400000
	.Status:Static    00400001
	.Status:Paralyze  00400000
	.Status:Dizzy     0040000A
	.Status:Fear      0040000A
	.Status:End
}

#new:DefenseTable $DefenseTable_8022259C
{
	.Element:Normal 00000000
	.Element:Shock  00000000
	.Element:End
}

#new:StatusTable $StatusTable_802225B0
{
	.Status:Normal      0`
	.Status:Default     0`
	.Status:Sleep      70`
	.Status:Poison     50`
	.Status:Frozen      0`
	.Status:Dizzy      90`
	.Status:Fear      100`
	.Status:Static     50`
	.Status:Paralyze   90`
	.Status:Shrink     75`
	.Status:Stop       90`
	.Status:DefaultTurnMod    0`
	.Status:SleepTurnMod      0`
	.Status:PoisonTurnMod     0`
	.Status:FrozenTurnMod     0`
	.Status:DizzyTurnMod      1`
	.Status:FearTurnMod       0`
	.Status:StaticTurnMod     0`
	.Status:ParalyzeTurnMod   1`
	.Status:ShrinkTurnMod     0`
	.Status:StopTurnMod       0`
	.Status:End
}

#new:PartsTable $PartsTable_8022265C
{
	00800000 01000000 FE2600FF $IdleAnimations_80222550 $DefenseTable_8022259C 00000000 00000000 FFFB0000 00000000
}

#new:Actor $MediGuy
{
	% stats
	[Index]        22b
	[Level]        14`b
	[MaxHP]         7`b
	[Coins]         2`b
	[Flags]       00000200
	[StatusTable] $StatusTable_802225B0
	% ai
	[PartsCount]    1`s
	[PartsTable]  $PartsTable_8022265C
	[Script]      $Script_Init_802226A8
	% move effectiveness
	[Escape]       60`b
	[Item]         70`b
	[AirLift]      90`b
	[Hurricane]    95`b % Bow's "Spook" as well
	[UpAndAway]    95`b
	[PowerBounce]  90`b
	[SpinSmash]     0`b % weight (0-4)
	% ui positions
	[Size]         24`b  40`b % width height
	[HealthBar]     0`b   0`b % dx dy
	[StatusTurn]  -10`b  20`b % dx dy
	[StatusIcon]   12`b  31`b % dx dy
}

#new:Script $Script_Init_802226A8
{
    0:  Call  BindTakeTurn  ( .Actor:Self $Script_TakeTurn_80223A8C )
   14:  Call  BindIdle      ( .Actor:Self $Script_Idle_8022274C )
   28:  Call  BindHandleEvent   ( .Actor:Self $Script_HandleEvent_80222920 )
   3C:  Call  GetActorPos   ( .Actor:Self *Var0 *Var1 *Var2 )
   58:  Sub   *Var1  00000005
   68:  Call  ForceHomePos  ( .Actor:Self *Var0 *Var1 *Var2 )
   84:  Call  HPBarToHome   ( .Actor:Self )
   94:  Return
   9C:  End
}

#new:Script $Script_Idle_8022274C
{
    0:  Label  0
    C:  Call  GetStatusFlags    ( .Actor:Self *Var0 )
   20:  If  *Var0  &  ~Flags:StatusFlags:Sleep % 1000
   30:  	Call  SetTargetOffset       ( .Actor:Self 00000001  -2`  24` )
   4C:  	Call  8027D4C8  ( FFFFFF81 00000001 FFFFFFFF FFFFFFFB )
   68:  	Call  $Function_80218310    ( FFFFFFF6 00000014 0000000A 00000014 )
   84:  Else
   8C:  	Call  SetTargetOffset       ( .Actor:Self 00000001  -2`  38` )
   A8:  	Call  8027D4C8  ( FFFFFF81 00000001 FFFFFFFF FFFFFFFB )
   C4:  	Call  $Function_80218310    ( FFFFFFF6 00000014 0000000C 0000001F )
   E0:  EndIf
   E8:  Wait  1`
   F4:  Goto  0
  100:  Return
  108:  End
}

#new:Script $Script_8022285C
{
    0:  Call  ResetAllActorSounds   ( .Actor:Self )
   10:  Call  SetPartRotation       ( .Actor:Self 00000001 00000000 00000000 00000000 )
   30:  Call  SetActorYaw   ( .Actor:Self  180` )
   44:  Call  SetAnimation  ( .Actor:Self 00000001 00400003 )
   5C:  Call  SetGoalToHome ( .Actor:Self )
   6C:  Call  FlyToGoal     ( .Actor:Self  0`  1` .Easing:Linear )
   88:  Call  SetAnimation  ( .Actor:Self 00000001 00400001 )
   A0:  Call  SetActorYaw   ( .Actor:Self  0` )
   B4:  Return
   BC:  End
}

#new:Script $Script_HandleEvent_80222920
{
    0:  Call  UseIdleAnimation  ( .Actor:Self .False )
   14:  Call  EnableIdleScript  ( .Actor:Self 00000000 )
   28:  Call  GetLastEvent      ( .Actor:Self *Var0 )
   3C:  Switch  *Var0
   48:  	CaseOR  ==  .Event:HitCombo % 9
   54:  	CaseOR  ==  .Event:Hit % A
   60:  		SetConst  *Var0  00000001
   70:  		SetConst  *Var1  00400006
   80:  		ExecWait  DoNormalHit
   8C:  	EndCaseGroup
   94:  	Case  ==  .Event:BurnHit % E
   A0:  		SetConst  *Var0  00000001
   B0:  		SetConst  *Var1  00400008
   C0:  		SetConst  *Var2  00400009
   D0:  		ExecWait  DoBurnHit
   DC:  	Case  ==  .Event:BurnDeath % 24
   E8:  		SetConst  *Var0  00000001
   F8:  		SetConst  *Var1  00400008
  108:  		SetConst  *Var2  00400009
  118:  		ExecWait  DoBurnHit
  124:  		SetConst  *Var0  00000001
  134:  		SetConst  *Var1  00400009
  144:  		ExecWait  DoDeath
  150:  		Return
  158:  	Case  ==  .Event:SpinSmashHit % B
  164:  		SetConst  *Var0  00000001
  174:  		SetConst  *Var1  00400006
  184:  		ExecWait  DoSpinSmashHit
  190:  	Case  ==  .Event:SpinSmashDeath % 21
  19C:  		SetConst  *Var0  00000001
  1AC:  		SetConst  *Var1  00400006
  1BC:  		ExecWait  DoSpinSmashHit
  1C8:  		SetConst  *Var0  00000001
  1D8:  		SetConst  *Var1  00400007
  1E8:  		ExecWait  DoDeath
  1F4:  		Return
  1FC:  	Case  ==  .Event:ShockHit % 2F
  208:  		SetConst  *Var0  00000001
  218:  		SetConst  *Var1  00400006
  228:  		ExecWait  DoShockHit
  234:  		SetConst  *Var0  00000001
  244:  		SetConst  *Var1  00400006
  254:  		ExecWait  DoJumpBack
  260:  		Call  SetActorSpeed ( .Actor:Self *Fixed[4.0] )
  274:  		ExecWait  $Script_8022285C
  280:  	Case  ==  .Event:ShockDeath % 26
  28C:  		SetConst  *Var0  00000001
  29C:  		SetConst  *Var1  00400006
  2AC:  		ExecWait  DoShockHit
  2B8:  		Call  SetPartRotation   ( .Actor:Self 00000001 00000000 00000000 00000000 )
  2D8:  		SetConst  *Var0  00000001
  2E8:  		SetConst  *Var1  00400007
  2F8:  		ExecWait  DoDeath
  304:  		Return
  30C:  	CaseOR  ==  00000017 % 17
  318:  	CaseOR  ==  .Event:Immune % 19
  324:  	CaseOR  ==  .Event:AirLiftFailed % 1F
  330:  		SetConst  *Var0  00000001
  340:  		SetConst  *Var1  00400001
  350:  		ExecWait  DoImmune
  35C:  	EndCaseGroup
  364:  	Case  ==  .Event:Death % 20
  370:  		SetConst  *Var0  00000001
  380:  		SetConst  *Var1  00400006
  390:  		ExecWait  DoNormalHit
  39C:  		Wait  10`
  3A8:  		SetConst  *Var0  00000001
  3B8:  		SetConst  *Var1  00400007
  3C8:  		ExecWait  DoDeath
  3D4:  		Return
  3DC:  	Case  ==  .Event:BeginFirstStrike % 38
  3E8:  		Call  SetActorPos       ( .Actor:Self  20`  0`  0` )
  404:  		Call  HPBarToCurrent    ( .Actor:Self )
  414:  	Case  ==  .Event:EndFirstStrike % 35
  420:  		Call  SetActorSpeed ( .Actor:Self *Fixed[6.0] )
  434:  		ExecWait  $Script_8022285C
  440:  		Call  HPBarToHome   ( .Actor:Self )
  450:  	Case  ==  .Event:RecoverStatus % 31
  45C:  		SetConst  *Var0  00000001
  46C:  		SetConst  *Var1  00400001
  47C:  		ExecWait  DoRecover
  488:  	Case  ==  .Event:ScareAway % 39
  494:  		Call  SetActorFlagBits  ( .Actor:Self 00000200 .False )
  4AC:  		SetConst  *Var0  00000001
  4BC:  		SetConst  *Var1  00400003
  4CC:  		SetConst  *Var2  0040000B
  4DC:  		ExecWait  DoScareAway
  4E8:  		Return
  4F0:  	Case  ==  .Event:BeginAirLift % 3A
  4FC:  		SetConst  *Var0  00000001
  50C:  		SetConst  *Var1  00400006
  51C:  		ExecWait  DoAirLift
  528:  	Case  ==  .Event:BlowAway % 16
  534:  		SetConst  *Var0  00000001
  544:  		SetConst  *Var1  00400006
  554:  		ExecWait  DoBlowAway
  560:  		Return
  568:  	Default
  570:  EndSwitch
  578:  Call  EnableIdleScript  ( .Actor:Self 00000001 )
  58C:  Call  UseIdleAnimation  ( .Actor:Self .True )
  5A0:  Return
  5A8:  End
}

#new:Script $Script_FlyingAttack
{
    0:  Call  UseIdleAnimation  ( .Actor:Self .False )
   14:  Call  EnableIdleScript  ( .Actor:Self 00000000 )
   28:  Call  SetTargetActor    ( .Actor:Self .Actor:Player )
   3C:  Call  UseBattleCamPreset    ( 0000003F )
   4C:  Call  BattleCamTargetActor  ( .Actor:Self )
   5C:  Call  8024ECF8  ( FFFFFFFF 00000001 00000000 )
   74:  Thread
   7C:  	SetF  *Var0  *Fixed[0.0]
   8C:  	Loop  0000000F
   98:  		AddF  *Var0  *Fixed[2.0]
   A8:  		Call  SetPartRotation   ( .Actor:Self 00000001 00000000 00000000 *Var0 )
   C8:  		Wait  1`
   D4:  	EndLoop
   DC:  EndThread
   E4:  Call  SetAnimation  ( .Actor:Self 00000001 00400003 )
   FC:  Call  SetGoalToTarget   ( .Actor:Self )
  10C:  Call  AddGoalPos    ( .Actor:Self  50`  0`  0` )
  128:  Call  SetActorSpeed ( .Actor:Self *Fixed[5.0] )
  13C:  Call  FlyToGoal     ( .Actor:Self  0`  -4` .Easing:CosIn )
  158:  Call  EnemyTestTarget   ( .Actor:Self *VarA ~Flags:DamageType:0 00000000 00000001 00000010 )
  17C:  Switch  *VarA
  188:  	CaseOR  ==  .HitResult:Miss % 6
  194:  	CaseOR  ==  .HitResult:Lucky % 5
  1A0:  		Wait  10`
  1AC:  		Call  PlaySoundAtActor  ( .Actor:Self 000002F8 )
  1C0:  		Call  SetActorSpeed     ( .Actor:Self *Fixed[5.0] )
  1D4:  		Call  SetActorJumpGravity   ( .Actor:Self *Fixed[1.8] )
  1E8:  		Call  SetAnimation      ( .Actor:Self 00000001 00400005 )
  200:  		Call  GetActorPos       ( .Actor:Self *Var0 *Var1 *Var2 )
  21C:  		Call  SetGoalPos        ( .Actor:Self *Var0 *Var1 *Var2 )
  238:  		Call  JumpToGoal        ( .Actor:Self  10` .False .True .False )
  258:  		Call  SetActorSounds    ( .Actor:Self .ActorSound:Fly 00000000 00000000 )
  274:  		Call  PlaySoundAtActor  ( .Actor:Self 000002F9 )
  288:  		Thread
  290:  			Wait  5`
  29C:  			Set   *Var0  00000000
  2AC:  			Loop  0000003C
  2B8:  				Call  $Function_802183DC    ( *Var0 *Var1 0000000F 0000003C *Fixed[30.0] )
  2D8:  				Call  SetPartRotation       ( .Actor:Self 00000001 00000000 00000000 *Var1 )
  2F8:  				Add   *Var0  00000001
  308:  				Wait  1`
  314:  			EndLoop
  31C:  		EndThread
  324:  		Call  SetGoalToTarget   ( .Actor:Self )
  334:  		Call  GetGoalPos    ( .Actor:Self *Var0 *Var1 *Var2 )
  350:  		Sub   *Var0  00000032
  360:  		Add   *Var2  00000001
  370:  		Call  SetGoalPos    ( .Actor:Self *Var0 *Var1 *Var2 )
  38C:  		Call  SetActorSpeed ( .Actor:Self *Fixed[8.0] )
  3A0:  		Call  SetAnimation  ( .Actor:Self 00000001 00400005 )
  3B8:  		Call  FlyToGoal     ( .Actor:Self  0`  -10` .Easing:QuadraticOut )
  3D4:  		If  *VarA  ==  .HitResult:Lucky % 5
  3E4:  			Call  EnemyTestTarget   ( .Actor:Self *Var0 ~Flags:DamageType:TriggerLucky 00000000 00000000 00000000 )
  408:  		EndIf
  410:  		Wait  30`
  41C:  		Call  ResetAllActorSounds   ( .Actor:Self )
  42C:  		Call  UseBattleCamPreset    ( 00000002 )
  43C:  		Call  AddActorDecoration    ( .Actor:Self 00000001 00000000 .Decoration:Sweat )
  458:  		Call  SetActorSpeed ( .Actor:Self *Fixed[10.0] )
  46C:  		ExecWait  $Script_8022285C
  478:  		Call  RemoveActorDecoration ( .Actor:Self 00000001 00000000 )
  490:  		Call  EnableIdleScript      ( .Actor:Self 00000001 )
  4A4:  		Call  UseIdleAnimation      ( .Actor:Self .True )
  4B8:  		Return
  4C0:  	EndCaseGroup
  4C8:  EndSwitch
  4D0:  Wait  10`
  4DC:  Call  PlaySoundAtActor  ( .Actor:Self 000002F8 )
  4F0:  Call  SetActorSpeed ( .Actor:Self *Fixed[5.0] )
  504:  Call  SetActorJumpGravity   ( .Actor:Self *Fixed[1.8] )
  518:  Call  SetAnimation  ( .Actor:Self 00000001 00400005 )
  530:  Call  GetActorPos   ( .Actor:Self *Var0 *Var1 *Var2 )
  54C:  Call  SetGoalPos    ( .Actor:Self *Var0 *Var1 *Var2 )
  568:  Call  JumpToGoal    ( .Actor:Self  10` .False .True .False )
  588:  Set   *VarA  *Var0
  598:  Set   *VarB  *Var1
  5A8:  Set   *VarC  *Var2
  5B8:  Call  SetActorSounds    ( .Actor:Self .ActorSound:Fly 00000000 00000000 )
  5D4:  Call  PlaySoundAtActor  ( .Actor:Self 000002F9 )
  5E8:  Call  SetGoalToTarget   ( .Actor:Self )
  5F8:  Call  GetGoalPos    ( .Actor:Self *Var0 *Var1 *Var2 )
  614:  Add   *Var2  00000001
  624:  Call  SetGoalPos    ( .Actor:Self *Var0 *Var1 *Var2 )
  640:  Call  SetActorSpeed ( .Actor:Self *Fixed[8.0] )
  654:  Call  SetAnimation  ( .Actor:Self 00000001 00400005 )
  66C:  Call  FlyToGoal     ( .Actor:Self  0`  -10` .Easing:QuadraticOut )
  688:  Wait  2`
  694:  Call  EnemyDamageTarget ( .Actor:Self *Var0 ~Flags:DamageType:0 00000000 00000000 00000001 00000020 )
  6BC:  Switch  *Var0
  6C8:  	CaseOR  ==  .HitResult:Hit % 0
  6D4:  	CaseOR  ==  .HitResult:QuakeImmune % 2
  6E0:  		Call  ResetAllActorSounds   ( .Actor:Self )
  6F0:  		Call  UseBattleCamPreset    ( 00000002 )
  700:  		Call  GetActorPos   ( .Actor:Self *Var0 *Var1 *Var2 )
  71C:  		Add   *Var0  0000001E
  72C:  		Call  SetActorJumpGravity   ( .Actor:Self *Fixed[1.0] )
  740:  		Call  SetGoalPos    ( .Actor:Self *Var0 *Var1 *Var2 )
  75C:  		Call  JumpWithBounce        ( .Actor:Self  10` *Fixed[2.0] )
  774:  		Wait  20`
  780:  		Call  SetActorSpeed ( .Actor:Self *Fixed[6.0] )
  794:  		ExecWait  $Script_8022285C
  7A0:  	EndCaseGroup
  7A8:  EndSwitch
  7B0:  Call  EnableIdleScript  ( .Actor:Self 00000001 )
  7C4:  Call  UseIdleAnimation  ( .Actor:Self .True )
  7D8:  Return
  7E0:  End
}

#new:Script $Script_HealOneAlly
{
    0:  Set   *VarA  *Var0
   10:  Call  UseIdleAnimation  ( .Actor:Self .False )
   24:  Call  EnableIdleScript  ( .Actor:Self 00000000 )
   38:  Call  UseBattleCamPreset    ( 0000003F )
   48:  Call  BattleCamTargetActor  ( .Actor:Self )
   58:  Call  GetOwnerID        ( *Var0 )
   68:  Call  GetActorPos       ( *Var0 *Var1 *Var2 *Var3 )
   84:  Call  PlaySoundAtActor  ( .Actor:Self 000002F8 )
   98:  Call  PlaySoundAtActor  ( .Actor:Self 00000214 )
   AC:  Call  PlaySoundAtActor  ( .Actor:Self 00000000 )
   C0:  Call  SetAnimation      ( .Actor:Self 00000001 00400005 )
   D8:  Add   *Var2  00000032
   E8:  Call  PlayEffect        ( ~FX:Sparkles:Random *Var1 *Var2 *Var3 0000000A 00000000 00000000 00000000 00000000 00000000 00000000 00000000 00000000 )
  12C:  Call  PlayEffect        ( ~FX:Recover:LittleHeart *Var1 *Var2 *Var3 00000000 00000000 00000000 00000000 00000000 00000000 00000000 00000000 00000000 )
  170:  Wait  30`
  17C:  Call  SetAnimation      ( .Actor:Self 00000001 00400001 )
  194:  Wait  10`
  1A0:  Call  UseBattleCamPreset    ( 0000003F )
  1B0:  Call  BattleCamTargetActor  ( *VarA )
  1C0:  Call  GetEnemyMaxHP     ( *VarA *Var4 )
  1D4:  Mul   *Var4  0000003C
  1E4:  Div   *Var4  00000064
  1F4:  Thread
  1FC:  	Wait  5`
  208:  	Call  PlaySoundAtActor  ( *VarA 0000206D )
  21C:  	Call  PlaySoundAtActor  ( *VarA 00000214 )
  230:  	Wait  30`
  23C:  	Call  PlaySoundAtActor  ( *VarA 0000025C )
  250:  EndThread
  258:  Thread
  260:  	Call  8026BF48  ( 00000001 )
  270:  	Call  HealActor ( *VarA *Var4 .False )
  288:  	Call  8026BF48  ( 00000000 )
  298:  EndThread
  2A0:  Call  WaitForBuffDone ( )
  2AC:  Call  UseBattleCamPreset    ( 00000002 )
  2BC:  Call  EnableIdleScript      ( .Actor:Self 00000001 )
  2D0:  Call  UseIdleAnimation      ( .Actor:Self .True )
  2E4:  Return
  2EC:  End
}

#new:Script $Script_802239AC
{
    0:  Call  EnemyCreateTargetList ( 00000002 )
   10:  Call  InitTargetIterator ( )
   1C:  Label  0
   28:  Call  GetOwnerTarget    ( *Var0 *Var1 )
   3C:  Call  GetActorHP        ( *Var0 *Var2 )
   50:  Call  GetEnemyMaxHP     ( *Var0 *Var3 )
   64:  If  *Var2  !=  *Var3
   74:  	Call  GetOwnerTarget    ( *Var0 *Var1 )
   88:  	Return
   90:  EndIf
   98:  Call  ChooseNextTarget  ( .Iter:Next *Var0 )
   AC:  If  *Var0  !=  FFFFFFFF
   BC:  	Goto  0
   C8:  EndIf
   D0:  Return
   D8:  End
}

#new:Script $Script_TakeTurn_80223A8C
{
    0:  ExecWait  $Script_802239AC
    C:  If  *Var0  ==  FFFFFFFF
   1C:  	ExecWait  $Script_FlyingAttack
   28:  Else
   30:  	Call  RandInt   ( 000003E8 *VarA )
   44:  	If  *VarA  <  00000258
   54:  		ExecWait  $Script_HealOneAlly
   60:  	Else
   68:  		ExecWait  $Script_FlyingAttack
   74:  	EndIf
   7C:  EndIf
   84:  Return
   8C:  End
}

#new:DefenseTable $DefenseTable_80223B20
{
	.Element:Normal 00000004
	.Element:Fire   00000063
	.Element:Blast  00000063
	.Element:End
}

#new:DefenseTable $DefenseTable_80223B3C
{
	.Element:Normal 00000000
	.Element:End
}

#new:StatusTable $StatusTable_80223B48
{
	.Status:Normal      0`
	.Status:Default     0`
	.Status:Sleep      60`
	.Status:Poison     50`
	.Status:Frozen      0`
	.Status:Dizzy      75`
	.Status:Fear        0`
	.Status:Static     50`
	.Status:Paralyze   75`
	.Status:Shrink     75`
	.Status:Stop       90`
	.Status:DefaultTurnMod    0`
	.Status:SleepTurnMod     -1`
	.Status:PoisonTurnMod     0`
	.Status:FrozenTurnMod     0`
	.Status:DizzyTurnMod      1`
	.Status:FearTurnMod       0`
	.Status:StaticTurnMod     0`
	.Status:ParalyzeTurnMod   0`
	.Status:ShrinkTurnMod     0`
	.Status:StopTurnMod       0`
	.Status:End
}

#new:PartsTable $PartsTable_80223BF4
{
	00800000 01000000 001800FF $IdleAnimations_80223C8C $DefenseTable_80223B20 00001010 00000000 000E0000 00000000
}

#new:Actor $SpikeTop
{
	% stats
	[Index]        2Cb
	[Level]        17`b
	[MaxHP]         4`b
	[Coins]         1`b
	[Flags]       00000800
	[StatusTable] $StatusTable_80223B48
	% ai
	[PartsCount]    1`s
	[PartsTable]  $PartsTable_80223BF4
	[Script]      $Script_Init_80223D1C
	% move effectiveness
	[Escape]       60`b
	[Item]         60`b
	[AirLift]      70`b
	[Hurricane]    65`b % Bow's "Spook" as well
	[UpAndAway]    95`b
	[PowerBounce]  90`b
	[SpinSmash]     0`b % weight (0-4)
	% ui positions
	[Size]         24`b  24`b % width height
	[HealthBar]     0`b   0`b % dx dy
	[StatusTurn]   -8`b  16`b % dx dy
	[StatusIcon]    8`b  13`b % dx dy
}

#new:IdleAnimations $IdleAnimations_80223C40
{
	.Status:Normal    004D0003
	.Status:Stone     004D0000
	.Status:Sleep     004D001B
	.Status:Poison    004D0003
	.Status:Stop      004D0000
	.Status:Static    004D0003
	.Status:Paralyze  004D0000
	.Status:Dizzy     004D001E
	.Status:Fear      004D001E
	.Status:End
}

#new:IdleAnimations $IdleAnimations_80223C8C
{
	.Status:Normal    004D0004
	.Status:Stone     004D0001
	.Status:Sleep     004D001C
	.Status:Poison    004D0004
	.Status:Stop      004D0001
	.Status:Static    004D0004
	.Status:Paralyze  004D0001
	.Status:Dizzy     004D001F
	.Status:Fear      004D001F
	.Status:End
}

#new:IdleAnimations $IdleAnimations_80223CD8
{
	.Status:Normal    004D0005
	.Status:Stone     004D0002
	.Status:Sleep     004D001D
	.Status:Poison    004D0005
	.Status:Stop      004D0002
	.Status:Static    004D0005
	.Status:Dizzy     004D0020
	.Status:Fear      004D0020
	.Status:End
}

#new:Script $Script_Init_80223D1C
{
    0:  Call  BindIdle      ( .Actor:Self $Script_Idle_80223EEC )
   14:  Call  GetActorVar   ( .Actor:Self 00000000 *Var0 )
   2C:  If  *Var0  ==  00000001
   3C:  	Call  SetActorVar       ( .Actor:Self 00000008 00000000 )
   54:  	Call  $Function_802184F0    ( FFFFFFF6 00000000 0000000A 00000000 )
   70:  	Call  BindTakeTurn      ( .Actor:Self $Script_TakeTurn_80225624 )
   84:  	Call  BindHandleEvent   ( .Actor:Self $Script_HandleEvent_80224330 )
   98:  	Call  SetPartEventBits  ( .Actor:Self 00000001 00001000 .False )
   B4:  Else
   BC:  	Call  SetActorVar       ( .Actor:Self 00000008 00000001 )
   D4:  	Call  SetTargetOffset   ( .Actor:Self 00000001  0`  24` )
   F0:  	Call  8027D4C8  ( FFFFFF81 00000001 FFFFFFFF FFFFFFF7 )
  10C:  	Call  BindTakeTurn      ( .Actor:Self $Script_TakeTurn_802260DC )
  120:  	Call  BindHandleEvent   ( .Actor:Self $Script_HandleEvent_80224888 )
  134:  	Call  SetIdleAnimations ( .Actor:Self 00000001 $IdleAnimations_80223C40 )
  14C:  	Call  SetActorFlagBits  ( .Actor:Self 00000800 .False )
  164:  	Call  SetPartEventBits  ( .Actor:Self 00000001 00001000 .True )
  180:  EndIf
  188:  Call  HPBarToHome       ( .Actor:Self )
  198:  Call  EnableIdleScript  ( .Actor:Self 00000001 )
  1AC:  Call  UseIdleAnimation  ( .Actor:Self .True )
  1C0:  Return
  1C8:  End
}

#new:Script $Script_Idle_80223EEC
{
    0:  Return
    8:  End
}

#new:Script $Script_80223EFC
{
    0:  Call  8027D32C      ( FFFFFF81 )
   10:  Call  SetActorVar   ( .Actor:Self 00000008 00000002 )
   28:  Call  SetTargetOffset   ( .Actor:Self 00000001  1`  20` )
   44:  Call  8027D4C8      ( FFFFFF81 00000001 FFFFFFFD FFFFFFF8 )
   60:  Call  $Function_802184F0    ( FFFFFFF6 00000014 0000000A 00000014 )
   7C:  Call  BindTakeTurn  ( .Actor:Self $Script_TakeTurn_802260DC )
   90:  Call  BindHandleEvent   ( .Actor:Self $Script_HandleEvent_80224888 )
   A4:  Call  SetActorVar   ( .Actor:Self 00000009 00000001 )
   BC:  Call  SetDefenseTable   ( .Actor:Self 00000001 $DefenseTable_80223B3C )
   D4:  Call  SetIdleAnimations ( .Actor:Self 00000001 $IdleAnimations_80223CD8 )
   EC:  Call  SetActorFlagBits  ( .Actor:Self 00000800 .False )
  104:  Call  SetPartEventBits  ( .Actor:Self 00000001 00000010 .False )
  120:  Call  SetPartEventBits  ( .Actor:Self 00000001 00001000 .True )
  13C:  Call  SetActorFlagBits  ( .Actor:Self 00000400 .True )
  154:  Call  SetAnimation  ( .Actor:Self 00000001 004D0015 )
  16C:  Call  SetActorYaw   ( .Actor:Self  180` )
  180:  Call  GetActorPos   ( .Actor:Self *Var0 *Var1 *Var2 )
  19C:  Sub   *Var1  00000018
  1AC:  Call  SetActorPos   ( .Actor:Self *Var0 *Var1 *Var2 )
  1C8:  Set   *Var1  00000000
  1D8:  Call  SetActorSounds    ( .Actor:Self .ActorSound:Jump 00000301 00000000 )
  1F4:  Call  SetActorJumpGravity   ( .Actor:Self *Fixed[0.8] )
  208:  Call  SetGoalPos    ( .Actor:Self *Var0 *Var1 *Var2 )
  224:  Call  JumpToGoal    ( .Actor:Self  15` .False .True .False )
  244:  Call  GetIndexFromPos   ( .Actor:Self *VarA )
  258:  Mod   *VarA  00000004
  268:  Call  SetGoalToIndex    ( .Actor:Self *VarA )
  27C:  Call  GetGoalPos    ( .Actor:Self *VarA *VarB *VarC )
  298:  Call  SetHomePos    ( .Actor:Self *VarA *VarB *VarC )
  2B4:  Set   *VarD  *VarA
  2C4:  Set   *VarE  *VarB
  2D4:  Set   *VarF  *VarC
  2E4:  Sub   *VarD  *Var0
  2F4:  Sub   *VarE  *Var1
  304:  Sub   *VarF  *Var2
  314:  Div   *VarD  00000002
  324:  Div   *VarE  00000002
  334:  Div   *VarF  00000002
  344:  Add   *Var0  *VarD
  354:  Add   *Var1  *VarE
  364:  Add   *Var2  *VarF
  374:  Call  ResetAllActorSounds   ( .Actor:Self )
  384:  Call  SetAnimation  ( .Actor:Self 00000001 004D0005 )
  39C:  Call  SetGoalPos    ( .Actor:Self *Var0 *Var1 *Var2 )
  3B8:  Call  JumpToGoal    ( .Actor:Self  10` .False .True .False )
  3D8:  Call  SetGoalPos    ( .Actor:Self *VarA *VarB *VarC )
  3F4:  Call  JumpToGoal    ( .Actor:Self  5` .False .True .False )
  414:  Call  HPBarToHome   ( .Actor:Self )
  424:  Return
  42C:  End
}

#new:Script $Script_HandleEvent_80224330
{
    0:  Call  UseIdleAnimation  ( .Actor:Self .False )
   14:  Call  EnableIdleScript  ( .Actor:Self 00000000 )
   28:  Call  GetLastEvent      ( .Actor:Self *Var0 )
   3C:  Switch  *Var0
   48:  	Case  ==  .Event:HitCombo % 9
   54:  		SetConst  *Var0  00000001
   64:  		SetConst  *Var1  004D0014
   74:  		ExecWait  DoNormalHit
   80:  	Case  ==  .Event:Hit % A
   8C:  		SetConst  *Var0  00000001
   9C:  		SetConst  *Var1  004D0014
   AC:  		ExecWait  DoNormalHit
   B8:  		ExecWait  $Script_80223EFC
   C4:  	Case  ==  .Event:FlipTrigger % D
   D0:  		SetConst  *Var0  00000001
   E0:  		SetConst  *Var1  004D0014
   F0:  		ExecWait  DoNormalHit
   FC:  		ExecWait  $Script_80223EFC
  108:  	Case  ==  .Event:BurnHit % E
  114:  		SetConst  *Var0  00000001
  124:  		SetConst  *Var1  004D0019
  134:  		SetConst  *Var2  004D001A
  144:  		ExecWait  DoBurnHit
  150:  		ExecWait  $Script_80223EFC
  15C:  	Case  ==  .Event:BurnDeath % 24
  168:  		SetConst  *Var0  00000001
  178:  		SetConst  *Var1  004D0019
  188:  		SetConst  *Var2  004D001A
  198:  		ExecWait  DoBurnHit
  1A4:  		SetConst  *Var0  00000001
  1B4:  		SetConst  *Var1  004D001A
  1C4:  		ExecWait  DoDeath
  1D0:  		Return
  1D8:  	Case  ==  .Event:ShockHit % 2F
  1E4:  		SetConst  *Var0  00000001
  1F4:  		SetConst  *Var1  004D0014
  204:  		ExecWait  DoShockHit
  210:  		SetConst  *Var0  00000001
  220:  		SetConst  *Var1  004D0013
  230:  		ExecWait  DoJumpBack
  23C:  		SetConst  *Var0  00000001
  24C:  		SetConst  *Var1  004D0008
  25C:  		ExecWait  DoReturnHome
  268:  	Case  ==  .Event:ShockDeath % 26
  274:  		SetConst  *Var0  00000001
  284:  		SetConst  *Var1  004D0014
  294:  		ExecWait  DoShockHit
  2A0:  		SetConst  *Var0  00000001
  2B0:  		SetConst  *Var1  004D0013
  2C0:  		ExecWait  DoDeath
  2CC:  		Return
  2D4:  	Case  ==  00000017 % 17
  2E0:  		SetConst  *Var0  00000001
  2F0:  		SetConst  *Var1  004D000D
  300:  		ExecWait  DoImmune
  30C:  	Case  ==  .Event:Immune % 19
  318:  		SetConst  *Var0  00000001
  328:  		SetConst  *Var1  004D000D
  338:  		ExecWait  DoImmune
  344:  		Wait  2`
  350:  		Call  GetStatusFlags    ( .Actor:Self *Var0 )
  364:  		If  *Var0  !&  ~Flags:StatusFlags:Stop % 200000
  374:  			ExecWait  $Script_80223EFC
  380:  		EndIf
  388:  	Case  ==  .Event:Death % 20
  394:  		SetConst  *Var0  00000001
  3A4:  		SetConst  *Var1  004D0014
  3B4:  		ExecWait  DoNormalHit
  3C0:  		Wait  10`
  3CC:  		SetConst  *Var0  00000001
  3DC:  		SetConst  *Var1  004D0014
  3EC:  		ExecWait  DoDeath
  3F8:  		Return
  400:  	Case  ==  .Event:RecoverStatus % 31
  40C:  	Case  ==  .Event:ScareAway % 39
  418:  		Call  SetActorFlagBits  ( .Actor:Self 00000200 .True )
  430:  		SetConst  *Var0  00000001
  440:  		SetConst  *Var1  004D0009
  450:  		SetConst  *Var2  004D0014
  460:  		ExecWait  DoScareAway
  46C:  		Return
  474:  	Default
  47C:  EndSwitch
  484:  Call  EnableIdleScript  ( .Actor:Self 00000001 )
  498:  Call  UseIdleAnimation  ( .Actor:Self .True )
  4AC:  Return
  4B4:  End
}

#new:Script $Script_802247EC
{
    0:  Call  GetActorVar   ( .Actor:Self 00000008 *Var3 )
   18:  If  *Var3  ==  00000002
   28:  	Set   *Var1  *Var2
   38:  EndIf
   40:  Return
   48:  End
}

#new:IntTable $IntTable_8022483C
{
	00000007 0000000D 00000011 00000015 00000017 00000018 00000017 00000015
	00000011 0000000D 00000007 00000000 00000004 00000007 00000006 00000004
	00000000 00000002 00000000
}

#new:Script $Script_HandleEvent_80224888
{
    0:  Call  UseIdleAnimation  ( .Actor:Self .False )
   14:  Call  EnableIdleScript  ( .Actor:Self 00000000 )
   28:  Call  GetLastEvent      ( .Actor:Self *Var0 )
   3C:  Switch  *Var0
   48:  	CaseOR  ==  .Event:HitCombo % 9
   54:  	CaseOR  ==  .Event:Hit % A
   60:  		SetConst  *Var0  00000001
   70:  		SetConst  *Var1  004D0013
   80:  		SetConst  *Var2  004D0015
   90:  		ExecWait  $Script_802247EC
   9C:  		ExecWait  DoNormalHit
   A8:  	EndCaseGroup
   B0:  	Case  ==  .Event:BurnHit % E
   BC:  		Call  GetActorVar   ( .Actor:Self 00000008 *Var0 )
   D4:  		If  *Var0  !=  00000002
   E4:  			SetConst  *Var0  00000001
   F4:  			SetConst  *Var1  004D0016
  104:  			SetConst  *Var2  004D0017
  114:  			ExecWait  DoBurnHit
  120:  		Else
  128:  			SetConst  *Var0  00000001
  138:  			SetConst  *Var1  004D0018
  148:  			SetConst  *Var2  004D0018
  158:  			ExecWait  DoBurnHit
  164:  		EndIf
  16C:  	Case  ==  .Event:BurnDeath % 24
  178:  		Call  GetActorVar   ( .Actor:Self 00000008 *Var0 )
  190:  		If  *Var0  !=  00000002
  1A0:  			SetConst  *Var0  00000001
  1B0:  			SetConst  *Var1  004D0016
  1C0:  			SetConst  *Var2  004D0017
  1D0:  			ExecWait  DoBurnHit
  1DC:  			SetConst  *Var0  00000001
  1EC:  			SetConst  *Var1  004D0017
  1FC:  			ExecWait  DoDeath
  208:  		Else
  210:  			SetConst  *Var0  00000001
  220:  			SetConst  *Var1  004D0018
  230:  			SetConst  *Var2  004D0018
  240:  			ExecWait  DoBurnHit
  24C:  			SetConst  *Var0  00000001
  25C:  			SetConst  *Var1  004D0018
  26C:  			ExecWait  DoDeath
  278:  		EndIf
  280:  		Return
  288:  	Case  ==  .Event:SpinSmashHit % B
  294:  		SetConst  *Var0  00000001
  2A4:  		SetConst  *Var1  004D0013
  2B4:  		SetConst  *Var2  004D0015
  2C4:  		ExecWait  $Script_802247EC
  2D0:  		ExecWait  DoSpinSmashHit
  2DC:  	Case  ==  .Event:FlipTrigger % D
  2E8:  		Call  SetActorVar       ( .Actor:Self 00000008 00000002 )
  300:  		Call  SetTargetOffset   ( .Actor:Self 00000001  1`  20` )
  31C:  		Call  8027D4C8  ( FFFFFF81 00000001 FFFFFFFD FFFFFFF8 )
  338:  		Call  SetActorVar       ( .Actor:Self 00000009 00000001 )
  350:  		Call  SetDefenseTable   ( .Actor:Self 00000001 $DefenseTable_80223B3C )
  368:  		Call  SetIdleAnimations ( .Actor:Self 00000001 $IdleAnimations_80223CD8 )
  380:  		Call  SetPartEventBits  ( .Actor:Self 00000001 00000010 .False )
  39C:  		Call  SetActorFlagBits  ( .Actor:Self 00000400 .True )
  3B4:  		Call  SetAnimation      ( .Actor:Self 00000001 004D0013 )
  3CC:  		Call  SetActorRotationOffset    ( .Actor:Self 00000000 0000000C 00000000 )
  3E8:  		Thread
  3F0:  			Wait  1`
  3FC:  			Call  SetActorRotation  ( .Actor:Self 00000000 00000000 00000000 )
  418:  			Wait  1`
  424:  			Call  SetActorRotation  ( .Actor:Self 00000000 00000000 FFFFFFD3 )
  440:  			Wait  1`
  44C:  			Call  SetActorRotation  ( .Actor:Self 00000000 00000000 FFFFFFA6 )
  468:  			Wait  1`
  474:  			Call  SetActorRotation  ( .Actor:Self 00000000 00000000 FFFFFF79 )
  490:  			Wait  1`
  49C:  			Call  SetActorRotation  ( .Actor:Self 00000000 00000000 FFFFFF4C )
  4B8:  			Wait  1`
  4C4:  		EndThread
  4CC:  		UseIntBuffer  $IntTable_8022483C
  4D8:  		Loop  00000013
  4E4:  			Get1Int  *Var0
  4F0:  			Call  SetActorDispOffset    ( .Actor:Self 00000000 *Var0 00000000 )
  50C:  			Wait  1`
  518:  		EndLoop
  520:  		Call  SetActorDispOffset    ( .Actor:Self 00000000 00000000 00000000 )
  53C:  		Call  SetActorRotationOffset    ( .Actor:Self 00000000 00000000 00000000 )
  558:  		Call  SetActorRotation      ( .Actor:Self 00000000 00000000 00000000 )
  574:  		Call  SetAnimation  ( .Actor:Self 00000001 004D0015 )
  58C:  	Case  ==  .Event:ShockHit % 2F
  598:  		SetConst  *Var0  00000001
  5A8:  		SetConst  *Var1  004D0013
  5B8:  		ExecWait  DoShockHit
  5C4:  		SetConst  *Var0  00000001
  5D4:  		SetConst  *Var1  004D0013
  5E4:  		ExecWait  DoJumpBack
  5F0:  		SetConst  *Var0  00000001
  600:  		SetConst  *Var1  004D0008
  610:  		ExecWait  DoReturnHome
  61C:  	Case  ==  .Event:ShockDeath % 26
  628:  		SetConst  *Var0  00000001
  638:  		SetConst  *Var1  004D0013
  648:  		ExecWait  DoShockHit
  654:  		SetConst  *Var0  00000001
  664:  		SetConst  *Var1  004D0013
  674:  		ExecWait  DoDeath
  680:  		Return
  688:  	Case  ==  00000017 % 17
  694:  		Call  GetActorVar   ( .Actor:Self 00000008 *Var0 )
  6AC:  		If  *Var0  ==  00000001
  6BC:  			SetConst  *Var0  00000001
  6CC:  			SetConst  *Var1  004D000B
  6DC:  			ExecWait  DoImmune
  6E8:  			Call  SetAnimation  ( .Actor:Self 00000001 004D000E )
  700:  			Wait  8`
  70C:  		Else
  714:  			SetConst  *Var0  00000001
  724:  			SetConst  *Var1  004D0005
  734:  			ExecWait  DoImmune
  740:  		EndIf
  748:  	Case  ==  .Event:Immune % 19
  754:  		Call  GetActorVar   ( .Actor:Self 00000008 *Var0 )
  76C:  		If  *Var0  ==  00000001
  77C:  			SetConst  *Var0  00000001
  78C:  			SetConst  *Var1  004D000B
  79C:  			ExecWait  DoImmune
  7A8:  			Call  SetAnimation  ( .Actor:Self 00000001 004D000C )
  7C0:  			Wait  8`
  7CC:  		Else
  7D4:  			SetConst  *Var0  00000001
  7E4:  			SetConst  *Var1  004D0005
  7F4:  			ExecWait  DoImmune
  800:  		EndIf
  808:  	Case  ==  .Event:SpikeTaunt % 1B
  814:  		Wait  10`
  820:  		Call  GetActorPos       ( .Actor:Self *Var0 *Var1 *Var2 )
  83C:  		Call  GetStatusFlags    ( .Actor:Self *Var3 )
  850:  		If  *Var3  &  ~Flags:StatusFlags:Shrink % 80000
  860:  			Add   *Var1  00000009
  870:  		Else
  878:  			Add   *Var1  00000018
  888:  		EndIf
  890:  		Call  PlayEffect    ( ~FX:LensFlare:Rotating *Var0 *Var1 *Var2 00000014 00000000 00000000 00000000 00000000 00000000 00000000 00000000 00000000 )
  8D4:  		Wait  20`
  8E0:  	Case  ==  .Event:Death % 20
  8EC:  		SetConst  *Var0  00000001
  8FC:  		SetConst  *Var1  004D0013
  90C:  		SetConst  *Var2  004D0015
  91C:  		ExecWait  $Script_802247EC
  928:  		ExecWait  DoNormalHit
  934:  		Wait  10`
  940:  		SetConst  *Var0  00000001
  950:  		SetConst  *Var1  004D0013
  960:  		SetConst  *Var2  004D0015
  970:  		ExecWait  $Script_802247EC
  97C:  		ExecWait  DoDeath
  988:  		Return
  990:  	Case  ==  .Event:SpinSmashDeath % 21
  99C:  		SetConst  *Var0  00000001
  9AC:  		SetConst  *Var1  004D0013
  9BC:  		SetConst  *Var2  004D0015
  9CC:  		ExecWait  $Script_802247EC
  9D8:  		ExecWait  DoSpinSmashHit
  9E4:  		SetConst  *Var0  00000001
  9F4:  		SetConst  *Var1  004D0013
  A04:  		SetConst  *Var2  004D0015
  A14:  		ExecWait  $Script_802247EC
  A20:  		ExecWait  DoDeath
  A2C:  		Return
  A34:  	Case  ==  .Event:RecoverStatus % 31
  A40:  		Call  GetActorVar   ( .Actor:Self 00000008 *Var0 )
  A58:  		If  *Var0  ==  00000001
  A68:  			SetConst  *Var0  00000001
  A78:  			SetConst  *Var1  004D0003
  A88:  			ExecWait  DoRecover
  A94:  		EndIf
  A9C:  	Case  ==  .Event:ScareAway % 39
  AA8:  		Call  GetActorVar   ( .Actor:Self 00000008 *Var0 )
  AC0:  		If  *Var0  ==  00000001
  AD0:  			SetConst  *Var0  00000001
  AE0:  			SetConst  *Var1  004D0008
  AF0:  			SetConst  *Var2  004D0013
  B00:  			ExecWait  DoScareAway
  B0C:  			Return
  B14:  		Else
  B1C:  			SetConst  *Var0  00000001
  B2C:  			SetConst  *Var1  004D0005
  B3C:  			ExecWait  DoImmune
  B48:  		EndIf
  B50:  	Case  ==  .Event:BeginAirLift % 3A
  B5C:  		Call  GetActorVar   ( .Actor:Self 00000008 *Var0 )
  B74:  		If  *Var0  ==  00000001
  B84:  			SetConst  *Var0  00000001
  B94:  			SetConst  *Var1  004D0008
  BA4:  		Else
  BAC:  			SetConst  *Var0  00000001
  BBC:  			SetConst  *Var1  004D0005
  BCC:  		EndIf
  BD4:  		ExecWait  DoAirLift
  BE0:  	Case  ==  .Event:BlowAway % 16
  BEC:  		Call  SetActorDispOffset    ( .Actor:Self 00000007 00000000 00000000 )
  C08:  		Call  GetActorVar   ( .Actor:Self 00000008 *Var0 )
  C20:  		If  *Var0  ==  00000001
  C30:  			SetConst  *Var0  00000001
  C40:  			SetConst  *Var1  004D0013
  C50:  		Else
  C58:  			SetConst  *Var0  00000001
  C68:  			SetConst  *Var1  004D0015
  C78:  		EndIf
  C80:  		ExecWait  DoBlowAway
  C8C:  		Return
  C94:  	Case  ==  .Event:AirLiftFailed % 1F
  CA0:  		Call  GetActorVar   ( .Actor:Self 00000008 *Var0 )
  CB8:  		If  *Var0  ==  00000001
  CC8:  			SetConst  *Var0  00000001
  CD8:  			SetConst  *Var1  004D000B
  CE8:  			ExecWait  DoImmune
  CF4:  			Call  SetAnimation  ( .Actor:Self 00000001 004D000C )
  D0C:  			Wait  8`
  D18:  		Else
  D20:  			SetConst  *Var0  00000001
  D30:  			SetConst  *Var1  004D0005
  D40:  			ExecWait  DoImmune
  D4C:  		EndIf
  D54:  	Default
  D5C:  EndSwitch
  D64:  Call  EnableIdleScript  ( .Actor:Self 00000001 )
  D78:  Call  UseIdleAnimation  ( .Actor:Self .True )
  D8C:  Return
  D94:  End
}

#new:Script $Script_TakeTurn_80225624
{
    0:  Call  UseIdleAnimation  ( .Actor:Self .False )
   14:  Call  EnableIdleScript  ( .Actor:Self 00000000 )
   28:  Call  SetTargetActor    ( .Actor:Self .Actor:Player )
   3C:  Call  SetActorVar       ( .Actor:Self 00000008 00000001 )
   54:  Call  SetTargetOffset   ( .Actor:Self 00000001  0`  24` )
   70:  Call  8027D4C8  ( FFFFFF81 00000001 FFFFFFFF FFFFFFF7 )
   8C:  Call  $Function_802184F0    ( FFFFFFF6 00000014 0000000A 00000014 )
   A8:  Call  BindTakeTurn      ( .Actor:Self $Script_TakeTurn_802260DC )
   BC:  Call  BindHandleEvent   ( .Actor:Self $Script_HandleEvent_80224888 )
   D0:  Call  SetIdleAnimations ( .Actor:Self 00000001 $IdleAnimations_80223C40 )
   E8:  Call  SetActorFlagBits  ( .Actor:Self 00000800 .False )
  100:  Call  SetPartEventBits  ( .Actor:Self 00000001 00001000 .True )
  11C:  Call  GetIndexFromPos   ( .Actor:Self *Var0 )
  130:  Mod   *Var0  00000004
  140:  Call  SetGoalToIndex    ( .Actor:Self *Var0 )
  154:  Call  GetGoalPos        ( .Actor:Self *Var0 *Var1 *Var2 )
  170:  Call  SetHomePos        ( .Actor:Self *Var0 *Var1 *Var2 )
  18C:  Call  HPBarToHome       ( .Actor:Self )
  19C:  Call  UseBattleCamPreset    ( 0000003F )
  1AC:  Call  BattleCamTargetActor  ( .Actor:Self )
  1BC:  Call  8024ECF8  ( FFFFFFFF 00000001 00000000 )
  1D4:  Call  GetBattlePhase    ( *Var0 )
  1E4:  If  *Var0  ==  00000001
  1F4:  	Call  SetGoalToTarget   ( .Actor:Self )
  204:  	Call  GetActorPos   ( .Actor:Self *Var3 *Var4 *Var5 )
  220:  	Call  GetGoalPos    ( .Actor:Self *Var0 *Var1 *Var2 )
  23C:  	Call  SetActorPos   ( .Actor:Self *Var0 *Var4 *Var2 )
  258:  	Call  SetAnimation  ( .Actor:Self 00000001 004D0001 )
  270:  Else
  278:  	Call  SetAnimation  ( .Actor:Self 00000001 004D0009 )
  290:  	Call  SetGoalToTarget   ( .Actor:Self )
  2A0:  	Call  GetActorPos   ( .Actor:Self *Var3 *Var4 *Var5 )
  2BC:  	Call  GetGoalPos    ( .Actor:Self *Var0 *Var1 *Var2 )
  2D8:  	Call  SetGoalPos    ( .Actor:Self *Var0 *Var4 *Var2 )
  2F4:  	Call  SetActorSpeed ( .Actor:Self *Fixed[6.0] )
  308:  	Call  RunToGoal     ( .Actor:Self  0` .False )
  320:  	Call  SetAnimation  ( .Actor:Self 00000001 004D0001 )
  338:  	Wait  8`
  344:  EndIf
  34C:  Call  SetActorSounds    ( .Actor:Self .ActorSound:Jump 00000301 00000000 )
  368:  Call  GetBattlePhase    ( *Var0 )
  378:  If  *Var0  ==  00000001
  388:  	Call  UseBattleCamPreset    ( 00000005 )
  398:  	Call  SetBattleCamZoom      (  430` )
  3A8:  	Call  SetBattleCamOffsetZ   (  20` )
  3B8:  	Call  MoveBattleCamOver     (  10` )
  3C8:  	Call  8024ECF8  ( FFFFFFFF 00000001 00000000 )
  3E0:  EndIf
  3E8:  Call  EnemyTestTarget   ( .Actor:Self *Var0 ~Flags:DamageType:0 00000000 00000004 00000010 )
  40C:  Switch  *Var0
  418:  	CaseOR  ==  .HitResult:Miss % 6
  424:  	CaseOR  ==  .HitResult:Lucky % 5
  430:  		Set   *VarA  *Var0
  440:  		Call  SetActorYaw   ( .Actor:Self  180` )
  454:  		Call  SetPartYaw    ( .Actor:Self 00000001  180` )
  46C:  		Call  SetAnimation  ( .Actor:Self 00000001 004D0015 )
  484:  		Call  GetActorPos   ( .Actor:Self *Var0 *Var1 *Var2 )
  4A0:  		Sub   *Var1  00000018
  4B0:  		Call  SetActorPos   ( .Actor:Self *Var0 *Var1 *Var2 )
  4CC:  		Call  SetActorJumpGravity   ( .Actor:Self *Fixed[0.8] )
  4E0:  		Call  GetActorPos   ( .Actor:Self *Var0 *Var1 *Var2 )
  4FC:  		Set   *Var1  00000000
  50C:  		Call  SetGoalPos    ( .Actor:Self *Var0 *Var1 *Var2 )
  528:  		Call  JumpToGoal    ( .Actor:Self  15` .False .True .False )
  548:  		If  *VarA  ==  .HitResult:Lucky % 5
  558:  			Call  EnemyTestTarget   ( .Actor:Self *Var0 ~Flags:DamageType:TriggerLucky 00000000 00000000 00000000 )
  57C:  		EndIf
  584:  		Call  ResetAllActorSounds   ( .Actor:Self )
  594:  		Add   *Var0  0000001E
  5A4:  		Call  SetGoalPos    ( .Actor:Self *Var0 *Var1 *Var2 )
  5C0:  		Call  JumpToGoal    ( .Actor:Self  15` .False .True .False )
  5E0:  		Thread
  5E8:  			Wait  5`
  5F4:  			Call  SetAnimation  ( .Actor:Self 00000001 004D0000 )
  60C:  		EndThread
  614:  		Add   *Var0  00000014
  624:  		Call  SetGoalPos    ( .Actor:Self *Var0 *Var1 *Var2 )
  640:  		Call  JumpToGoal    ( .Actor:Self  8` .False .True .False )
  660:  		Wait  8`
  66C:  		Call  UseBattleCamPreset    ( 00000002 )
  67C:  		Call  YieldTurn ( )
  688:  		Call  SetGoalToHome ( .Actor:Self )
  698:  		Call  SetActorSpeed ( .Actor:Self *Fixed[6.0] )
  6AC:  		Call  SetAnimation  ( .Actor:Self 00000001 004D0008 )
  6C4:  		Call  AddActorDecoration    ( .Actor:Self 00000001 00000000 .Decoration:Sweat )
  6E0:  		Call  RunToGoal     ( .Actor:Self  0` .False )
  6F8:  		Call  SetAnimation  ( .Actor:Self 00000001 004D0003 )
  710:  		Call  RemoveActorDecoration ( .Actor:Self 00000001 00000000 )
  728:  		Call  SetActorYaw   ( .Actor:Self  0` )
  73C:  		Call  EnableIdleScript      ( .Actor:Self 00000001 )
  750:  		Call  UseIdleAnimation      ( .Actor:Self .True )
  764:  		Return
  76C:  	EndCaseGroup
  774:  EndSwitch
  77C:  Call  SetActorYaw   ( .Actor:Self  180` )
  790:  Call  SetAnimation  ( .Actor:Self 00000001 004D0015 )
  7A8:  Call  GetActorPos   ( .Actor:Self *Var0 *Var1 *Var2 )
  7C4:  Sub   *Var1  00000018
  7D4:  Call  SetActorPos   ( .Actor:Self *Var0 *Var1 *Var2 )
  7F0:  Call  SetActorJumpGravity   ( .Actor:Self *Fixed[0.8] )
  804:  Call  SetGoalToTarget       ( .Actor:Self )
  814:  Call  GetGoalPos    ( .Actor:Self *Var3 *Var4 *Var5 )
  830:  Call  GetActorPos   ( .Actor:Self *Var0 *Var1 *Var2 )
  84C:  Set   *Var1  *Var4
  85C:  Call  SetGoalPos    ( .Actor:Self *Var0 *Var1 *Var2 )
  878:  Call  JumpToGoal    ( .Actor:Self  15` .False .True .False )
  898:  Call  ResetAllActorSounds   ( .Actor:Self )
  8A8:  Wait  2`
  8B4:  Call  EnemyDamageTarget     ( .Actor:Self *Var0 ~Flags:DamageType:0 0000FFFF 00000000 00000004 00000020 )
  8DC:  Switch  *Var0
  8E8:  	CaseOR  ==  .HitResult:Hit % 0
  8F4:  	CaseOR  ==  .HitResult:QuakeImmune % 2
  900:  		Call  UseBattleCamPreset    ( 00000002 )
  910:  		Call  GetActorPos   ( .Actor:Self *Var0 *Var1 *Var2 )
  92C:  		Add   *Var0  0000001E
  93C:  		Set   *Var1  00000000
  94C:  		Call  SetGoalPos    ( .Actor:Self *Var0 *Var1 *Var2 )
  968:  		Call  JumpToGoal    ( .Actor:Self  15` .False .True .False )
  988:  		Thread
  990:  			Wait  5`
  99C:  			Call  SetAnimation  ( .Actor:Self 00000001 004D0000 )
  9B4:  		EndThread
  9BC:  		Add   *Var0  00000014
  9CC:  		Call  SetGoalPos    ( .Actor:Self *Var0 *Var1 *Var2 )
  9E8:  		Call  JumpToGoal    ( .Actor:Self  8` .False .True .False )
  A08:  		Wait  8`
  A14:  		Call  YieldTurn ( )
  A20:  		SetConst  *Var0  00000001
  A30:  		SetConst  *Var1  004D0008
  A40:  		ExecWait  DoReturnHome
  A4C:  		Call  SetAnimation  ( .Actor:Self 00000001 004D0003 )
  A64:  	EndCaseGroup
  A6C:  EndSwitch
  A74:  Label  A
  A80:  Call  EnableIdleScript  ( .Actor:Self 00000001 )
  A94:  Call  UseIdleAnimation  ( .Actor:Self .True )
  AA8:  Return
  AB0:  End
}

#new:Script $Script_TakeTurn_802260DC
{
    0:  Call  UseIdleAnimation  ( .Actor:Self .False )
   14:  Call  EnableIdleScript  ( .Actor:Self 00000000 )
   28:  Call  GetActorVar       ( .Actor:Self 00000008 *Var0 )
   40:  If  *Var0  ==  00000002
   50:  	Call  GetActorVar   ( .Actor:Self 00000009 *Var0 )
   68:  	Sub   *Var0  00000001
   78:  	If  *Var0  >  00000000
   88:  		Call  SetActorVar   ( .Actor:Self 00000009 *Var0 )
   A0:  		Call  AddActorDecoration    ( .Actor:Self 00000001 00000000 .Decoration:Sweat )
   BC:  		Wait  30`
   C8:  		Call  RemoveActorDecoration ( .Actor:Self 00000001 00000000 )
   E0:  		Call  UseBattleCamPreset    ( 00000002 )
   F0:  	Else
   F8:  		Call  AddActorDecoration    ( .Actor:Self 00000001 00000000 .Decoration:Sweat )
  114:  		Wait  20`
  120:  		Call  RemoveActorDecoration ( .Actor:Self 00000001 00000000 )
  138:  		SetConst  *Var0  00000001
  148:  		SetConst  *Var1  004D0005
  158:  		SetConst  *Var2  004D0003
  168:  		ExecWait  8029BBB4
  174:  		Call  SetActorYaw       ( .Actor:Self  0` )
  188:  		Call  SetActorVar       ( .Actor:Self 00000008 00000001 )
  1A0:  		Call  SetTargetOffset   ( .Actor:Self 00000001  0`  24` )
  1BC:  		Call  8027D4C8  ( FFFFFF81 00000001 FFFFFFFF FFFFFFF7 )
  1D8:  		Call  SetDefenseTable   ( .Actor:Self 00000001 $DefenseTable_80223B20 )
  1F0:  		Call  SetIdleAnimations ( .Actor:Self 00000001 $IdleAnimations_80223C40 )
  208:  		Call  BindIdle  ( .Actor:Self $Script_Idle_80223EEC )
  21C:  		Call  SetActorFlagBits  ( .Actor:Self 00000400 .False )
  234:  		Call  SetPartEventBits  ( .Actor:Self 00000001 00000010 .True )
  250:  	EndIf
  258:  	Call  EnableIdleScript  ( .Actor:Self 00000001 )
  26C:  	Call  UseIdleAnimation  ( .Actor:Self .True )
  280:  	Return
  288:  EndIf
  290:  Call  SetTargetActor    ( .Actor:Self .Actor:Player )
  2A4:  Call  UseBattleCamPreset    ( 0000003F )
  2B4:  Call  BattleCamTargetActor  ( .Actor:Self )
  2C4:  Call  8024ECF8  ( FFFFFFFF 00000001 00000000 )
  2DC:  Call  SetAnimation      ( .Actor:Self 00000001 004D000B )
  2F4:  Wait  10`
  300:  Call  SetAnimation      ( .Actor:Self 00000001 004D000F )
  318:  Thread
  320:  	Call  GetActorPos   ( .Actor:Self *Var0 *Var1 *Var2 )
  33C:  	Call  PlayEffect    ( ~FX:SmokeImpact:Small *Var0 *Var1 *Var2 00000020 00000004 00000000 0000000A 00000000 00000000 00000000 00000000 00000000 )
  380:  	Wait  10`
  38C:  	Call  PlayEffect    ( ~FX:SmokeImpact:Small *Var0 *Var1 *Var2 00000020 00000004 00000000 0000000A 00000000 00000000 00000000 00000000 00000000 )
  3D0:  	Wait  5`
  3DC:  	Call  PlayEffect    ( ~FX:SmokeImpact:Small *Var0 *Var1 *Var2 00000020 00000004 00000000 0000000A 00000000 00000000 00000000 00000000 00000000 )
  420:  EndThread
  428:  Call  PlaySoundAtActor  ( .Actor:Self 00002021 )
  43C:  Call  SetAnimation      ( .Actor:Self 00000001 004D000A )
  454:  Wait  20`
  460:  Call  SetActorSounds    ( .Actor:Self .ActorSound:Walk 00000000 00000000 )
  47C:  Call  PlaySoundAtActor  ( .Actor:Self 000020D3 )
  490:  Call  EnemyTestTarget   ( .Actor:Self *Var0 ~Flags:DamageType:0 00000000 00000003 00000010 )
  4B4:  Switch  *Var0
  4C0:  	CaseOR  ==  .HitResult:Miss % 6
  4CC:  	CaseOR  ==  .HitResult:Lucky % 5
  4D8:  		Set   *VarA  *Var0
  4E8:  		Thread
  4F0:  			Loop
  4FC:  				Call  GetActorPos   ( .Actor:Player *Var0 *Var1 *Var2 )
  518:  				Add   *Var0  0000001E
  528:  				Call  GetActorPos   ( .Actor:Self *Var3 *Var4 *Var5 )
  544:  				If  *Var0  >  *Var3
  554:  					BreakLoop
  55C:  				EndIf
  564:  				Wait  1`
  570:  			EndLoop
  578:  			Call  UseBattleCamPreset    ( 00000001 )
  588:  			If  *VarA  ==  .HitResult:Lucky % 5
  598:  				Call  EnemyTestTarget   ( .Actor:Self *Var0 ~Flags:DamageType:TriggerLucky 00000000 00000000 00000000 )
  5BC:  			EndIf
  5C4:  			Wait  15`
  5D0:  			Call  UseBattleCamPreset    ( 00000002 )
  5E0:  		EndThread
  5E8:  		Call  SetGoalToTarget       ( .Actor:Self )
  5F8:  		Call  AddGoalPos    ( .Actor:Self  -150`  0`  0` )
  614:  		Call  SetActorSpeed ( .Actor:Self *Fixed[14.0] )
  628:  		Call  RunToGoal     ( .Actor:Self  0` .False )
  640:  		Wait  15`
  64C:  		Call  YieldTurn ( )
  658:  		Call  ResetAllActorSounds   ( .Actor:Self )
  668:  		Call  AddActorDecoration    ( .Actor:Self 00000001 00000000 .Decoration:Sweat )
  684:  		Call  SetGoalToHome ( .Actor:Self )
  694:  		Call  GetGoalPos    ( .Actor:Self *Var0 *Var1 *Var2 )
  6B0:  		Add   *Var0  000000C8
  6C0:  		Call  SetActorPos   ( .Actor:Self *Var0 *Var1 *Var2 )
  6DC:  		Call  SetActorSpeed ( .Actor:Self *Fixed[10.0] )
  6F0:  		Call  RunToGoal     ( .Actor:Self  0` .False )
  708:  		Wait  10`
  714:  		Call  SetAnimation  ( .Actor:Self 00000001 004D000C )
  72C:  		Wait  10`
  738:  		Call  RemoveActorDecoration ( .Actor:Self 00000001 00000000 )
  750:  		Call  EnableIdleScript      ( .Actor:Self 00000001 )
  764:  		Call  UseIdleAnimation      ( .Actor:Self .True )
  778:  		Return
  780:  	EndCaseGroup
  788:  EndSwitch
  790:  Call  SetGoalToTarget   ( .Actor:Self )
  7A0:  Call  SetActorSpeed     ( .Actor:Self *Fixed[14.0] )
  7B4:  Call  RunToGoal ( .Actor:Self  0` .False )
  7CC:  Wait  2`
  7D8:  Call  EnemyDamageTarget ( .Actor:Self *Var0 ~Flags:DamageType:0 0000FFFF 00000000 00000003 00000020 )
  800:  Switch  *Var0
  80C:  	CaseOR  ==  .HitResult:Hit % 0
  818:  	CaseOR  ==  .HitResult:QuakeImmune % 2
  824:  		Call  UseBattleCamPreset    ( 00000002 )
  834:  		Call  GetGoalPos    ( .Actor:Self *Var0 *Var1 *Var2 )
  850:  		Add   *Var0  00000028
  860:  		Set   *Var1  00000000
  870:  		Call  SetActorJumpGravity   ( .Actor:Self *Fixed[1.8] )
  884:  		Call  SetGoalPos    ( .Actor:Self *Var0 *Var1 *Var2 )
  8A0:  		Call  JumpToGoal    ( .Actor:Self  10` .False .True .False )
  8C0:  		Add   *Var0  0000001E
  8D0:  		Call  SetGoalPos    ( .Actor:Self *Var0 *Var1 *Var2 )
  8EC:  		Call  JumpToGoal    ( .Actor:Self  8` .False .True .False )
  90C:  		Add   *Var0  00000014
  91C:  		Call  SetGoalPos    ( .Actor:Self *Var0 *Var1 *Var2 )
  938:  		Call  JumpToGoal    ( .Actor:Self  6` .False .True .False )
  958:  		Call  SetAnimation  ( .Actor:Self 00000001 004D0003 )
  970:  		Wait  8`
  97C:  		Call  YieldTurn ( )
  988:  		Call  ResetAllActorSounds   ( .Actor:Self )
  998:  		SetConst  *Var0  00000001
  9A8:  		SetConst  *Var1  004D0008
  9B8:  		ExecWait  DoReturnHome
  9C4:  		Call  SetAnimation  ( .Actor:Self 00000001 004D0003 )
  9DC:  	EndCaseGroup
  9E4:  EndSwitch
  9EC:  Call  EnableIdleScript  ( .Actor:Self 00000001 )
  A00:  Call  UseIdleAnimation  ( .Actor:Self .True )
  A14:  Return
  A1C:  End
}

#new:Script $Script_80226B00
{
    0:  Set   *VarA  *Var0
   10:  Label  0
   1C:  Call  RotateGroup   ( *VarA 00000002 00000000 00000000 00000001 )
   3C:  Wait  5`
   48:  Call  RotateGroup   ( *VarA 00000001 00000000 00000000 00000001 )
   68:  Wait  5`
   74:  Call  RotateGroup   ( *VarA FFFFFFFE 00000000 00000000 00000001 )
   94:  Wait  5`
   A0:  Call  RotateGroup   ( *VarA 00000001 00000000 00000000 00000001 )
   C0:  Wait  5`
   CC:  Call  RandInt       ( 0000001E *Var0 )
   E0:  Add   *Var0  0000001E
   F0:  Wait  *Var0
   FC:  Goto  0
  108:  Return
  110:  End
}

#new:Script $Script_80226C18
{
    0:  Set   *VarA  *Var0
   10:  Loop
   1C:  	Call  TranslateModel    ( *VarA 00000001 00000000 00000000 )
   38:  	Wait  2`
   44:  	Call  TranslateModel    ( *VarA 00000001 00000000 00000000 )
   60:  	Wait  1`
   6C:  	Call  TranslateModel    ( *VarA 00000001 *Fixed[-0.5] 00000000 )
   88:  	Wait  1`
   94:  	Call  TranslateModel    ( *VarA 00000001 FFFFFFFF 00000000 )
   B0:  	Wait  1`
   BC:  	Call  TranslateModel    ( *VarA *Fixed[1.5] FFFFFFFF 00000000 )
   D8:  	Wait  1`
   E4:  	Call  TranslateModel    ( *VarA 00000002 FFFFFFFF 00000000 )
  100:  	Wait  2`
  10C:  	Call  TranslateModel    ( *VarA 00000002 FFFFFFFF 00000000 )
  128:  	Wait  2`
  134:  	Call  TranslateModel    ( *VarA 00000002 FFFFFFFF 00000000 )
  150:  	Wait  1`
  15C:  	Call  TranslateModel    ( *VarA *Fixed[2.5] *Fixed[-1.5] 00000000 )
  178:  	Wait  1`
  184:  	Call  TranslateModel    ( *VarA 00000003 FFFFFFFE 00000000 )
  1A0:  	Wait  2`
  1AC:  	Call  TranslateModel    ( *VarA 00000003 FFFFFFFE 00000000 )
  1C8:  	Wait  1`
  1D4:  	Call  TranslateModel    ( *VarA 00000003 *Fixed[-2.5] 00000000 )
  1F0:  	Wait  1`
  1FC:  	Call  TranslateModel    ( *VarA 00000003 FFFFFFFD 00000000 )
  218:  	Wait  2`
  224:  	Call  TranslateModel    ( *VarA 00000003 FFFFFFFD 00000000 )
  240:  	Wait  2`
  24C:  	Call  TranslateModel    ( *VarA 00000003 FFFFFFFD 00000000 )
  268:  	Wait  1`
  274:  	Call  TranslateModel    ( *VarA 00000003 *Fixed[-2.5] 00000000 )
  290:  	Wait  1`
  29C:  	Call  TranslateModel    ( *VarA 00000003 FFFFFFFE 00000000 )
  2B8:  	Wait  1`
  2C4:  	Call  TranslateModel    ( *VarA *Fixed[2.5] FFFFFFFE 00000000 )
  2E0:  	Wait  1`
  2EC:  	Call  TranslateModel    ( *VarA 00000002 FFFFFFFE 00000000 )
  308:  	Wait  1`
  314:  	Call  TranslateModel    ( *VarA 00000002 *Fixed[-1.5] 00000000 )
  330:  	Wait  1`
  33C:  	Call  TranslateModel    ( *VarA 00000002 FFFFFFFF 00000000 )
  358:  	Wait  1`
  364:  	Call  TranslateModel    ( *VarA *Fixed[1.5] *Fixed[-0.5] 00000000 )
  380:  	Wait  1`
  38C:  	Call  TranslateModel    ( *VarA 00000001 00000000 00000000 )
  3A8:  	Wait  1`
  3B4:  	Call  TranslateModel    ( *VarA 00000001 *Fixed[0.5] 00000000 )
  3D0:  	Wait  1`
  3DC:  	Call  TranslateModel    ( *VarA 00000001 00000001 00000000 )
  3F8:  	Wait  1`
  404:  	Call  TranslateModel    ( *VarA *Fixed[0.5] 00000001 00000000 )
  420:  	Wait  1`
  42C:  	Call  TranslateModel    ( *VarA 00000000 00000001 00000000 )
  448:  	Wait  1`
  454:  	Call  TranslateModel    ( *VarA *Fixed[-0.5] 00000001 00000000 )
  470:  	Wait  1`
  47C:  	Call  TranslateModel    ( *VarA FFFFFFFF 00000001 00000000 )
  498:  	Wait  2`
  4A4:  	Call  TranslateModel    ( *VarA FFFFFFFF 00000001 00000000 )
  4C0:  	Wait  1`
  4CC:  	Call  TranslateModel    ( *VarA FFFFFFFF *Fixed[0.5] 00000000 )
  4E8:  	Wait  1`
  4F4:  	Call  TranslateModel    ( *VarA FFFFFFFF 00000000 00000000 )
  510:  	Wait  2`
  51C:  	Call  TranslateModel    ( *VarA FFFFFFFF 00000000 00000000 )
  538:  	Wait  1`
  544:  	Call  TranslateModel    ( *VarA *Fixed[-0.5] 00000000 00000000 )
  560:  	Wait  1`
  56C:  	Call  TranslateModel    ( *VarA 00000000 00000000 00000000 )
  588:  	Wait  2`
  594:  EndLoop
  59C:  Return
  5A4:  End
}

#new:Script $Script_BeforeBattle_802271C4
{
    0:  Call  SetSpriteShading  ( FFFFFFFF )
   10:  Call  SetCamBGColor     ( .Cam:Battle  0`  0`  0` )
   2C:  Set   *Var0  00000020
   3C:  Exec  $Script_80226B00
   48:  Set   *Var0  0000002B
   58:  Exec  $Script_80226B00
   64:  Set   *Var0  00000035
   74:  Exec  $Script_80226C18
   80:  Call  PlayEffect        ( ~FX:SunRays:RightCorner 00000000 00000000 00000000 00000000 00000000 00000000 00000000 00000000 00000000 00000000 00000000 00000000 )
   C4:  Return
   CC:  End
}

#new:Script $Script_AfterBattle_80227298
{
    0:  Return
    8:  End
}

#new:Stage $Stage_802272A8
{
	$ASCII_80228CD8  % jan_tex
	$ASCII_80228CC8  % jan_bt00_shape
	$ASCII_80228CB8  % jan_bt00_hit
	$Script_BeforeBattle_802271C4
	$Script_AfterBattle_80227298
	$ASCII_80228CB0  % yos_bg
	00000000
	00000000
	00000000
	00000000
}

% Origin: HEURISTIC
#new:Script $Script_802272D0
{
    0:  Set   *VarA  *Var0
   10:  Label  0
   1C:  Call  RotateGroup   ( *VarA 00000002 00000000 00000000 00000001 )
   3C:  Wait  5`
   48:  Call  RotateGroup   ( *VarA 00000001 00000000 00000000 00000001 )
   68:  Wait  5`
   74:  Call  RotateGroup   ( *VarA FFFFFFFE 00000000 00000000 00000001 )
   94:  Wait  5`
   A0:  Call  RotateGroup   ( *VarA 00000001 00000000 00000000 00000001 )
   C0:  Wait  5`
   CC:  Call  RandInt       ( 0000001E *Var0 )
   E0:  Add   *Var0  0000001E
   F0:  Wait  *Var0
   FC:  Goto  0
  108:  Return
  110:  End
}

#new:Script $Script_802273E8
{
    0:  Set   *VarA  *Var0
   10:  Loop
   1C:  	Call  TranslateModel    ( *VarA 00000001 00000000 00000000 )
   38:  	Wait  2`
   44:  	Call  TranslateModel    ( *VarA 00000001 00000000 00000000 )
   60:  	Wait  1`
   6C:  	Call  TranslateModel    ( *VarA 00000001 *Fixed[-0.5] 00000000 )
   88:  	Wait  1`
   94:  	Call  TranslateModel    ( *VarA 00000001 FFFFFFFF 00000000 )
   B0:  	Wait  1`
   BC:  	Call  TranslateModel    ( *VarA *Fixed[1.5] FFFFFFFF 00000000 )
   D8:  	Wait  1`
   E4:  	Call  TranslateModel    ( *VarA 00000002 FFFFFFFF 00000000 )
  100:  	Wait  2`
  10C:  	Call  TranslateModel    ( *VarA 00000002 FFFFFFFF 00000000 )
  128:  	Wait  2`
  134:  	Call  TranslateModel    ( *VarA 00000002 FFFFFFFF 00000000 )
  150:  	Wait  1`
  15C:  	Call  TranslateModel    ( *VarA *Fixed[2.5] *Fixed[-1.5] 00000000 )
  178:  	Wait  1`
  184:  	Call  TranslateModel    ( *VarA 00000003 FFFFFFFE 00000000 )
  1A0:  	Wait  2`
  1AC:  	Call  TranslateModel    ( *VarA 00000003 FFFFFFFE 00000000 )
  1C8:  	Wait  1`
  1D4:  	Call  TranslateModel    ( *VarA 00000003 *Fixed[-2.5] 00000000 )
  1F0:  	Wait  1`
  1FC:  	Call  TranslateModel    ( *VarA 00000003 FFFFFFFD 00000000 )
  218:  	Wait  2`
  224:  	Call  TranslateModel    ( *VarA 00000003 FFFFFFFD 00000000 )
  240:  	Wait  2`
  24C:  	Call  TranslateModel    ( *VarA 00000003 FFFFFFFD 00000000 )
  268:  	Wait  1`
  274:  	Call  TranslateModel    ( *VarA 00000003 *Fixed[-2.5] 00000000 )
  290:  	Wait  1`
  29C:  	Call  TranslateModel    ( *VarA 00000003 FFFFFFFE 00000000 )
  2B8:  	Wait  1`
  2C4:  	Call  TranslateModel    ( *VarA *Fixed[2.5] FFFFFFFE 00000000 )
  2E0:  	Wait  1`
  2EC:  	Call  TranslateModel    ( *VarA 00000002 FFFFFFFE 00000000 )
  308:  	Wait  1`
  314:  	Call  TranslateModel    ( *VarA 00000002 *Fixed[-1.5] 00000000 )
  330:  	Wait  1`
  33C:  	Call  TranslateModel    ( *VarA 00000002 FFFFFFFF 00000000 )
  358:  	Wait  1`
  364:  	Call  TranslateModel    ( *VarA *Fixed[1.5] *Fixed[-0.5] 00000000 )
  380:  	Wait  1`
  38C:  	Call  TranslateModel    ( *VarA 00000001 00000000 00000000 )
  3A8:  	Wait  1`
  3B4:  	Call  TranslateModel    ( *VarA 00000001 *Fixed[0.5] 00000000 )
  3D0:  	Wait  1`
  3DC:  	Call  TranslateModel    ( *VarA 00000001 00000001 00000000 )
  3F8:  	Wait  1`
  404:  	Call  TranslateModel    ( *VarA *Fixed[0.5] 00000001 00000000 )
  420:  	Wait  1`
  42C:  	Call  TranslateModel    ( *VarA 00000000 00000001 00000000 )
  448:  	Wait  1`
  454:  	Call  TranslateModel    ( *VarA *Fixed[-0.5] 00000001 00000000 )
  470:  	Wait  1`
  47C:  	Call  TranslateModel    ( *VarA FFFFFFFF 00000001 00000000 )
  498:  	Wait  2`
  4A4:  	Call  TranslateModel    ( *VarA FFFFFFFF 00000001 00000000 )
  4C0:  	Wait  1`
  4CC:  	Call  TranslateModel    ( *VarA FFFFFFFF *Fixed[0.5] 00000000 )
  4E8:  	Wait  1`
  4F4:  	Call  TranslateModel    ( *VarA FFFFFFFF 00000000 00000000 )
  510:  	Wait  2`
  51C:  	Call  TranslateModel    ( *VarA FFFFFFFF 00000000 00000000 )
  538:  	Wait  1`
  544:  	Call  TranslateModel    ( *VarA *Fixed[-0.5] 00000000 00000000 )
  560:  	Wait  1`
  56C:  	Call  TranslateModel    ( *VarA 00000000 00000000 00000000 )
  588:  	Wait  2`
  594:  EndLoop
  59C:  Return
  5A4:  End
}

#new:Script $Script_BeforeBattle_80227994
{
    0:  Call  SetSpriteShading  ( FFFFFFFF )
   10:  Call  SetCamBGColor     ( .Cam:Battle  0`  0`  0` )
   2C:  Call  SetGroupEnabled   ( ~Model:jan_bt01:g18 00000000 )
   40:  Thread
   48:  	Wait  5`
   54:  	Set   *Var0  00000009
   64:  	Exec  $Script_802273E8
   70:  	Wait  5`
   7C:  	Set   *Var0  0000000A
   8C:  	Exec  $Script_802273E8
   98:  	Wait  5`
   A4:  	Set   *Var0  0000000B
   B4:  	Exec  $Script_802273E8
   C0:  EndThread
   C8:  Return
   D0:  End
}

#new:Script $Script_AfterBattle_80227A6C
{
    0:  Return
    8:  End
}

#new:ForegroundModelList $ForegroundModelList_80227A7C
{
	~Model:jan_bt01:o85
	00000000
}

#new:Stage $Stage_80227A84
{
	$ASCII_80228D08  % jan_tex
	$ASCII_80228CF8  % jan_bt01_shape
	$ASCII_80228CE8  % jan_bt01_hit
	$Script_BeforeBattle_80227994
	$Script_AfterBattle_80227A6C
	$ASCII_80228CE0  % yos_bg
	$ForegroundModelList_80227A7C
	00000000
	00000000
	00000000
}

PADDING: 80227AAC to 80227AB0 (005833CC to 005833D0)
00000000

% Origin: HEURISTIC
#new:Script $Script_80227AB0
{
    0:  Set   *VarA  *Var0
   10:  Label  0
   1C:  Call  RotateGroup   ( *VarA 00000002 00000000 00000000 00000001 )
   3C:  Wait  5`
   48:  Call  RotateGroup   ( *VarA 00000001 00000000 00000000 00000001 )
   68:  Wait  5`
   74:  Call  RotateGroup   ( *VarA FFFFFFFE 00000000 00000000 00000001 )
   94:  Wait  5`
   A0:  Call  RotateGroup   ( *VarA 00000001 00000000 00000000 00000001 )
   C0:  Wait  5`
   CC:  Call  RandInt       ( 0000001E *Var0 )
   E0:  Add   *Var0  0000001E
   F0:  Wait  *Var0
   FC:  Goto  0
  108:  Return
  110:  End
}

#new:Script $Script_80227BC8
{
    0:  Set   *VarA  *Var0
   10:  Loop
   1C:  	Call  TranslateModel    ( *VarA 00000001 00000000 00000000 )
   38:  	Wait  2`
   44:  	Call  TranslateModel    ( *VarA 00000001 00000000 00000000 )
   60:  	Wait  1`
   6C:  	Call  TranslateModel    ( *VarA 00000001 *Fixed[-0.5] 00000000 )
   88:  	Wait  1`
   94:  	Call  TranslateModel    ( *VarA 00000001 FFFFFFFF 00000000 )
   B0:  	Wait  1`
   BC:  	Call  TranslateModel    ( *VarA *Fixed[1.5] FFFFFFFF 00000000 )
   D8:  	Wait  1`
   E4:  	Call  TranslateModel    ( *VarA 00000002 FFFFFFFF 00000000 )
  100:  	Wait  2`
  10C:  	Call  TranslateModel    ( *VarA 00000002 FFFFFFFF 00000000 )
  128:  	Wait  2`
  134:  	Call  TranslateModel    ( *VarA 00000002 FFFFFFFF 00000000 )
  150:  	Wait  1`
  15C:  	Call  TranslateModel    ( *VarA *Fixed[2.5] *Fixed[-1.5] 00000000 )
  178:  	Wait  1`
  184:  	Call  TranslateModel    ( *VarA 00000003 FFFFFFFE 00000000 )
  1A0:  	Wait  2`
  1AC:  	Call  TranslateModel    ( *VarA 00000003 FFFFFFFE 00000000 )
  1C8:  	Wait  1`
  1D4:  	Call  TranslateModel    ( *VarA 00000003 *Fixed[-2.5] 00000000 )
  1F0:  	Wait  1`
  1FC:  	Call  TranslateModel    ( *VarA 00000003 FFFFFFFD 00000000 )
  218:  	Wait  2`
  224:  	Call  TranslateModel    ( *VarA 00000003 FFFFFFFD 00000000 )
  240:  	Wait  2`
  24C:  	Call  TranslateModel    ( *VarA 00000003 FFFFFFFD 00000000 )
  268:  	Wait  1`
  274:  	Call  TranslateModel    ( *VarA 00000003 *Fixed[-2.5] 00000000 )
  290:  	Wait  1`
  29C:  	Call  TranslateModel    ( *VarA 00000003 FFFFFFFE 00000000 )
  2B8:  	Wait  1`
  2C4:  	Call  TranslateModel    ( *VarA *Fixed[2.5] FFFFFFFE 00000000 )
  2E0:  	Wait  1`
  2EC:  	Call  TranslateModel    ( *VarA 00000002 FFFFFFFE 00000000 )
  308:  	Wait  1`
  314:  	Call  TranslateModel    ( *VarA 00000002 *Fixed[-1.5] 00000000 )
  330:  	Wait  1`
  33C:  	Call  TranslateModel    ( *VarA 00000002 FFFFFFFF 00000000 )
  358:  	Wait  1`
  364:  	Call  TranslateModel    ( *VarA *Fixed[1.5] *Fixed[-0.5] 00000000 )
  380:  	Wait  1`
  38C:  	Call  TranslateModel    ( *VarA 00000001 00000000 00000000 )
  3A8:  	Wait  1`
  3B4:  	Call  TranslateModel    ( *VarA 00000001 *Fixed[0.5] 00000000 )
  3D0:  	Wait  1`
  3DC:  	Call  TranslateModel    ( *VarA 00000001 00000001 00000000 )
  3F8:  	Wait  1`
  404:  	Call  TranslateModel    ( *VarA *Fixed[0.5] 00000001 00000000 )
  420:  	Wait  1`
  42C:  	Call  TranslateModel    ( *VarA 00000000 00000001 00000000 )
  448:  	Wait  1`
  454:  	Call  TranslateModel    ( *VarA *Fixed[-0.5] 00000001 00000000 )
  470:  	Wait  1`
  47C:  	Call  TranslateModel    ( *VarA FFFFFFFF 00000001 00000000 )
  498:  	Wait  2`
  4A4:  	Call  TranslateModel    ( *VarA FFFFFFFF 00000001 00000000 )
  4C0:  	Wait  1`
  4CC:  	Call  TranslateModel    ( *VarA FFFFFFFF *Fixed[0.5] 00000000 )
  4E8:  	Wait  1`
  4F4:  	Call  TranslateModel    ( *VarA FFFFFFFF 00000000 00000000 )
  510:  	Wait  2`
  51C:  	Call  TranslateModel    ( *VarA FFFFFFFF 00000000 00000000 )
  538:  	Wait  1`
  544:  	Call  TranslateModel    ( *VarA *Fixed[-0.5] 00000000 00000000 )
  560:  	Wait  1`
  56C:  	Call  TranslateModel    ( *VarA 00000000 00000000 00000000 )
  588:  	Wait  2`
  594:  EndLoop
  59C:  Return
  5A4:  End
}

#new:Script $Script_BeforeBattle_80228174
{
    0:  Call  SetSpriteShading  ( FFFFFFFF )
   10:  Call  SetCamBGColor     ( .Cam:Battle  0`  0`  0` )
   2C:  Call  SetGroupEnabled   ( ~Model:jan_bt01:g17 00000000 )
   40:  Thread
   48:  	Wait  5`
   54:  	Set   *Var0  00000009
   64:  	Exec  $Script_80227BC8
   70:  	Wait  5`
   7C:  	Set   *Var0  0000000A
   8C:  	Exec  $Script_80227BC8
   98:  	Wait  5`
   A4:  	Set   *Var0  0000000B
   B4:  	Exec  $Script_80227BC8
   C0:  EndThread
   C8:  Return
   D0:  End
}

#new:Script $Script_AfterBattle_8022824C
{
    0:  Return
    8:  End
}

#new:ForegroundModelList $ForegroundModelList_8022825C
{
	~Model:jan_bt01:o85
	00000000
}

#new:Stage $Stage_80228264
{
	$ASCII_80228D38  % jan_tex
	$ASCII_80228D28  % jan_bt01_shape
	$ASCII_80228D18  % jan_bt01_hit
	$Script_BeforeBattle_80228174
	$Script_AfterBattle_8022824C
	$ASCII_80228D10  % yos_bg
	$ForegroundModelList_8022825C
	00000000
	00000000
	00000000
}

PADDING: 8022828C to 80228290 (00583BAC to 00583BB0)
00000000

#new:Script $Script_BeforeBattle_80228290
{
    0:  Call  SetSpriteShading  ( FFFFFFFF )
   10:  Call  SetCamBGColor     ( .Cam:Battle  0`  0`  0` )
   2C:  Return
   34:  End
}

#new:Script $Script_AfterBattle_802282CC
{
    0:  Return
    8:  End
}

#new:ForegroundModelList $ForegroundModelList_802282DC
{
	~Model:jan_bt02:o64
	~Model:jan_bt02:o65
	~Model:jan_bt02:o66
	00000000
}

#new:Stage $Stage_802282EC
{
	$ASCII_80228D68  % jan_tex
	$ASCII_80228D58  % jan_bt02_shape
	$ASCII_80228D48  % jan_bt02_hit
	$Script_BeforeBattle_80228290
	$Script_AfterBattle_802282CC
	$ASCII_80228D40  % yos_bg
	$ForegroundModelList_802282DC
	00000000
	00000000
	00000000
}

PADDING: 80228314 to 80228320 (00583C34 to 00583C40)
00000000 00000000 00000000

#new:Script $Script_BeforeBattle_80228320
{
    0:  Call  SetSpriteShading  ( FFFFFFFF )
   10:  Call  SetCamBGColor     ( .Cam:Battle  0`  0`  0` )
   2C:  Call  SetGroupEnabled   ( ~Model:jan_bt03:g2 00000000 )
   40:  Return
   48:  End
}

#new:Script $Script_AfterBattle_80228370
{
    0:  Return
    8:  End
}

#new:ForegroundModelList $ForegroundModelList_80228380
{
	~Model:jan_bt03:o91
	~Model:jan_bt03:o90
	~Model:jan_bt03:o86
	00000000
}

#new:Stage $Stage_80228390
{
	$ASCII_80228D98  % jan_tex
	$ASCII_80228D88  % jan_bt03_shape
	$ASCII_80228D78  % jan_bt03_hit
	$Script_BeforeBattle_80228320
	$Script_AfterBattle_80228370
	$ASCII_80228D70  % jan_bg
	$ForegroundModelList_80228380
	00000000
	00000000
	00000000
}

PADDING: 802283B8 to 802283C0 (00583CD8 to 00583CE0)
00000000 00000000

#new:Script $Script_BeforeBattle_802283C0
{
    0:  Call  SetSpriteShading  ( FFFFFFFF )
   10:  Call  SetCamBGColor     ( .Cam:Battle  0`  0`  0` )
   2C:  Call  SetGroupEnabled   ( ~Model:jan_bt03:g39 00000000 )
   40:  Return
   48:  End
}

#new:Script $Script_AfterBattle_80228410
{
    0:  Return
    8:  End
}

#new:ForegroundModelList $ForegroundModelList_80228420
{
	~Model:jan_bt03:o91
	~Model:jan_bt03:o90
	~Model:jan_bt03:o86
	00000000
}

#new:Stage $Stage_80228430
{
	$ASCII_80228DC8  % jan_tex
	$ASCII_80228DB8  % jan_bt03_shape
	$ASCII_80228DA8  % jan_bt03_hit
	$Script_BeforeBattle_802283C0
	$Script_AfterBattle_80228410
	$ASCII_80228DA0  % jan_bg
	$ForegroundModelList_80228420
	00000000
	00000000
	00000000
}

PADDING: 80228458 to 80228460 (00583D78 to 00583D80)
00000000 00000000

#new:Script $Script_BeforeBattle_80228460
{
    0:  Call  SetSpriteShading  ( FFFFFFFF )
   10:  Call  SetCamBGColor     ( .Cam:Battle  0`  0`  0` )
   2C:  Call  SetGroupEnabled   ( ~Model:jan_bt04:g111 00000000 )
   40:  Return
   48:  End
}

#new:Script $Script_AfterBattle_802284B0
{
    0:  Return
    8:  End
}

#new:ForegroundModelList $ForegroundModelList_802284C0
{
	~Model:jan_bt04:o31
	00000000
}

#new:Stage $Stage_802284C8
{
	$ASCII_80228DF8  % jan_tex
	$ASCII_80228DE8  % jan_bt04_shape
	$ASCII_80228DD8  % jan_bt04_hit
	$Script_BeforeBattle_80228460
	$Script_AfterBattle_802284B0
	$ASCII_80228DD0  % jan_bg
	$ForegroundModelList_802284C0
	00000000
	00000000
	00000000
}

#new:Script $Script_BeforeBattle_802284F0
{
    0:  Call  SetSpriteShading  ( FFFFFFFF )
   10:  Call  SetCamBGColor     ( .Cam:Battle  0`  0`  0` )
   2C:  Call  SetGroupEnabled   ( ~Model:jan_bt04:g2 00000000 )
   40:  Return
   48:  End
}

#new:Script $Script_AfterBattle_80228540
{
    0:  Return
    8:  End
}

#new:ForegroundModelList $ForegroundModelList_80228550
{
	~Model:jan_bt04:o31
	00000000
}

#new:Stage $Stage_80228558
{
	$ASCII_80228E28  % jan_tex
	$ASCII_80228E18  % jan_bt04_shape
	$ASCII_80228E08  % jan_bt04_hit
	$Script_BeforeBattle_802284F0
	$Script_AfterBattle_80228540
	$ASCII_80228E00  % jan_bg
	$ForegroundModelList_80228550
	00000000
	00000000
	00000000
}

#new:Formation $Formation_00
{
	$SpearGuy 00000001 0000000A 00000000 00000000 00000000 00000000
	$SpearGuy 00000002 00000009 00000001 00000000 00000000 00000000
}

#new:Formation $Formation_01
{
	$SpearGuy 00000000 0000000A 00000000 00000000 00000000 00000000
	$SpearGuy 00000001 00000009 00000001 00000000 00000000 00000000
	$SpearGuy 00000002 00000008 00000001 00000000 00000000 00000000
}

#new:Formation $Formation_02
{
	$SpearGuy 00000001 0000000A 00000000 00000000 00000000 00000000
	$JungleFuzzy 00000002 00000009 00000000 00000000 00000000 00000000
}

#new:Formation $Formation_03
{
	$SpearGuy 00000000 0000000A 00000000 00000000 00000000 00000000
	$JungleFuzzy 00000001 00000009 00000000 00000000 00000000 00000000
	$JungleFuzzy 00000002 00000008 00000000 00000000 00000000 00000000
	$JungleFuzzy 00000003 00000007 00000000 00000000 00000000 00000000
}

#new:Formation $Formation_04
{
	$SpearGuy 00000000 0000000A 00000000 00000000 00000000 00000000
	$JungleFuzzy 00000001 00000009 00000000 00000000 00000000 00000000
	$JungleFuzzy 00000002 00000008 00000000 00000000 00000000 00000000
}

#new:Formation $Formation_05
{
	$SpearGuy 00000000 0000000A 00000000 00000000 00000000 00000000
	$JungleFuzzy 00000001 00000009 00000000 00000000 00000000 00000000
	$SpearGuy 00000002 00000008 00000001 00000000 00000000 00000000
}

#new:Formation $Formation_06
{
	$SpearGuy 00000000 0000000A 00000000 00000000 00000000 00000000
	$JungleFuzzy 00000001 00000009 00000000 00000000 00000000 00000000
	$SpearGuy 00000002 00000008 00000001 00000000 00000000 00000000
	$JungleFuzzy 00000003 00000007 00000000 00000000 00000000 00000000
}

#new:Formation $Formation_07
{
	$SpearGuy 00000000 0000000A 00000000 00000000 00000000 00000000
	$MediGuy 00000005 00000009 00000000 00000000 00000000 00000000
	$SpikeTop 00000002 00000008 00000000 00000000 00000000 00000000
}

#new:Formation $Formation_08
{
	$HurtPlant 00000001 0000000A 00000000 00000000 00000000 00000000
	$HurtPlant 00000002 0000000A 00000000 00000000 00000000 00000000
}

#new:Formation $Formation_09
{
	$HurtPlant 00000000 0000000A 00000000 00000000 00000000 00000000
	$HurtPlant 00000001 00000009 00000000 00000000 00000000 00000000
	$HurtPlant 00000002 00000008 00000000 00000000 00000000 00000000
}

#new:Formation $Formation_0A
{
	$JungleFuzzy 00000001 0000000A 00000000 00000000 00000000 00000000
	$JungleFuzzy 00000002 00000009 00000000 00000000 00000000 00000000
}

#new:Formation $Formation_0B
{
	$JungleFuzzy 00000000 0000000A 00000000 00000000 00000000 00000000
	$JungleFuzzy 00000001 00000009 00000000 00000000 00000000 00000000
	$JungleFuzzy 00000002 00000008 00000000 00000000 00000000 00000000
}

#new:Formation $Formation_0C
{
	$JungleFuzzy 00000000 0000000A 00000000 00000000 00000000 00000000
	$JungleFuzzy 00000001 00000009 00000000 00000000 00000000 00000000
	$JungleFuzzy 00000002 00000008 00000000 00000000 00000000 00000000
	$JungleFuzzy 00000003 00000007 00000000 00000000 00000000 00000000
}

#new:Formation $Formation_0D
{
	$JungleFuzzy 00000000 0000000A 00000000 00000000 00000000 00000000
	$SpearGuy 00000001 00000009 00000001 00000000 00000000 00000000
	$JungleFuzzy 00000002 00000008 00000000 00000000 00000000 00000000
}

#new:Formation $Formation_0E
{
	$MBush 00000001 0000000A 00000000 00000000 00000000 00000000
	$MBush 00000002 00000009 00000000 00000000 00000000 00000000
}

#new:Formation $Formation_0F
{
	$MBush 00000000 0000000A 00000000 00000000 00000000 00000000
	$MBush 00000001 00000009 00000000 00000000 00000000 00000000
	$MBush 00000002 00000008 00000000 00000000 00000000 00000000
}

#new:Formation $Formation_10
{
	$MBush 00000000 0000000A 00000000 00000000 00000000 00000000
	$MBush 00000001 00000009 00000000 00000000 00000000 00000000
	$MBush 00000002 00000008 00000000 00000000 00000000 00000000
	$MBush 00000003 00000007 00000000 00000000 00000000 00000000
}

#new:FormationTable $FormationTable
{
	$SJIS_80228FC8 00000002 $Formation_00 $Stage_80227A84 00000000
	$SJIS_80228FB8 00000003 $Formation_01 $Stage_80227A84 00000000
	$SJIS_80228FA0 00000002 $Formation_02 $Stage_80227A84 00000000
	$SJIS_80228F84 00000004 $Formation_03 $Stage_80227A84 00000000
	$SJIS_80228F68 00000003 $Formation_04 $Stage_80227A84 00000000
	$SJIS_80228F40 00000003 $Formation_05 $Stage_80227A84 00000000
	$SJIS_80228F10 00000004 $Formation_06 $Stage_80227A84 00000000
	$SJIS_80228EE4 00000003 $Formation_07 $Stage_80227A84 00000000
	$SJIS_80228ECC 00000002 $Formation_08 $Stage_80227A84 00000000
	$SJIS_80228EB4 00000003 $Formation_09 $Stage_80227A84 00000000
	$SJIS_80228EA4 00000002 $Formation_0A $Stage_80227A84 00000000
	$SJIS_80228E94 00000003 $Formation_0B $Stage_80227A84 00000000
	$SJIS_80228E84 00000004 $Formation_0C $Stage_80227A84 00000000
	$SJIS_80228E60 00000003 $Formation_0D $Stage_80227A84 00000000
	$SJIS_80228E50 00000002 $Formation_0E $Stage_80227A84 00000000
	$SJIS_80228E40 00000003 $Formation_0F $Stage_80227A84 00000000
	$SJIS_80228E30 00000004 $Formation_10 $Stage_80227A84 00000000
	00000000 00000000 00000000 00000000 00000000
}

#new:StageTable $StageTable
{
	$ASCII_80229010 $Stage_802272A8
	$ASCII_80229008 $Stage_80227A84
	$ASCII_80229000 $Stage_80228264
	$ASCII_80228FF8 $Stage_802282EC
	$ASCII_80228FF0 $Stage_80228390
	$ASCII_80228FE8 $Stage_80228430
	$ASCII_80228FE0 $Stage_802284C8
	$ASCII_80228FD8 $Stage_80228558
	00000000 00000000
}

PADDING: 80228CA8 to 80228CB0 (005845C8 to 005845D0)
00000000 00000000

#new:ASCII $ASCII_80228CB0
{
	"yos_bg"
}

#new:ASCII $ASCII_80228CB8
{
	"jan_bt00_hit"
}

#new:ASCII $ASCII_80228CC8
{
	"jan_bt00_shape"
}

#new:ASCII $ASCII_80228CD8
{
	"jan_tex"
}

#new:ASCII $ASCII_80228CE0
{
	"yos_bg"
}

#new:ASCII $ASCII_80228CE8
{
	"jan_bt01_hit"
}

#new:ASCII $ASCII_80228CF8
{
	"jan_bt01_shape"
}

#new:ASCII $ASCII_80228D08
{
	"jan_tex"
}

#new:ASCII $ASCII_80228D10
{
	"yos_bg"
}

#new:ASCII $ASCII_80228D18
{
	"jan_bt01_hit"
}

#new:ASCII $ASCII_80228D28
{
	"jan_bt01_shape"
}

#new:ASCII $ASCII_80228D38
{
	"jan_tex"
}

#new:ASCII $ASCII_80228D40
{
	"yos_bg"
}

#new:ASCII $ASCII_80228D48
{
	"jan_bt02_hit"
}

#new:ASCII $ASCII_80228D58
{
	"jan_bt02_shape"
}

#new:ASCII $ASCII_80228D68
{
	"jan_tex"
}

#new:ASCII $ASCII_80228D70
{
	"jan_bg"
}

#new:ASCII $ASCII_80228D78
{
	"jan_bt03_hit"
}

#new:ASCII $ASCII_80228D88
{
	"jan_bt03_shape"
}

#new:ASCII $ASCII_80228D98
{
	"jan_tex"
}

#new:ASCII $ASCII_80228DA0
{
	"jan_bg"
}

#new:ASCII $ASCII_80228DA8
{
	"jan_bt03_hit"
}

#new:ASCII $ASCII_80228DB8
{
	"jan_bt03_shape"
}

#new:ASCII $ASCII_80228DC8
{
	"jan_tex"
}

#new:ASCII $ASCII_80228DD0
{
	"jan_bg"
}

#new:ASCII $ASCII_80228DD8
{
	"jan_bt04_hit"
}

#new:ASCII $ASCII_80228DE8
{
	"jan_bt04_shape"
}

#new:ASCII $ASCII_80228DF8
{
	"jan_tex"
}

#new:ASCII $ASCII_80228E00
{
	"jan_bg"
}

#new:ASCII $ASCII_80228E08
{
	"jan_bt04_hit"
}

#new:ASCII $ASCII_80228E18
{
	"jan_bt04_shape"
}

#new:ASCII $ASCII_80228E28
{
	"jan_tex"
}

#new:SJIS $SJIS_80228E30
{
	ぎたいそうx4 % gitaisoux4
}

#new:SJIS $SJIS_80228E40
{
	ぎたいそうx3 % gitaisoux3
}

#new:SJIS $SJIS_80228E50
{
	ぎたいそうx2 % gitaisoux2
}

#new:SJIS $SJIS_80228E60
{
	トロピカル,ヤリダンサー,トロピカル % toropikaru,yaridansa-,toropikaru
}

#new:SJIS $SJIS_80228E84
{
	トロピカルx4 % toropikarux4
}

#new:SJIS $SJIS_80228E94
{
	トロピカルx3 % toropikarux3
}

#new:SJIS $SJIS_80228EA4
{
	トロピカルx2 % toropikarux2
}

#new:SJIS $SJIS_80228EB4
{
	ピロリンそうだましx3 % pirorinsoudamashix3
}

#new:SJIS $SJIS_80228ECC
{
	ピロリンそうだましx2 % pirorinsoudamashix2
}

#new:SJIS $SJIS_80228EE4
{
	ヤリダンサー,かいふくヘイホー,トゲメット % yaridansa-,kaifukuheiho-,togemetto
}

#new:SJIS $SJIS_80228F10
{
	ヤリダンサー,トロピカル,ヤリダンサー,トロピカル % yaridansa-,toropikaru,yaridansa-,toropikaru
}

#new:SJIS $SJIS_80228F40
{
	ヤリダンサー,トロピカル,ヤリダンサー % yaridansa-,toropikaru,yaridansa-
}

#new:SJIS $SJIS_80228F68
{
	ヤリダンサー,トロピカルx２ % yaridansa-,toropikarux2
}

#new:SJIS $SJIS_80228F84
{
	ヤリダンサー,トロピカルx３ % yaridansa-,toropikarux3
}

#new:SJIS $SJIS_80228FA0
{
	ヤリダンサー,トロピカル % yaridansa-,toropikaru
}

#new:SJIS $SJIS_80228FB8
{
	ヤリダンサーx3 % yaridansa-x3
}

#new:SJIS $SJIS_80228FC8
{
	ヤリダンサーx2 % yaridansa-x2
}

#new:ASCII $ASCII_80228FD8
{
	"jan_04b"
}

#new:ASCII $ASCII_80228FE0
{
	"jan_04"
}

#new:ASCII $ASCII_80228FE8
{
	"jan_03b"
}

#new:ASCII $ASCII_80228FF0
{
	"jan_03"
}

#new:ASCII $ASCII_80228FF8
{
	"jan_02"
}

#new:ASCII $ASCII_80229000
{
	"jan_01b"
}

#new:ASCII $ASCII_80229008
{
	"jan_01"
}

#new:ASCII $ASCII_80229010
{
	"jan_00"
}

PADDING: 80229018 to 80229020 (00584938 to 00584940)
00000000 00000000

