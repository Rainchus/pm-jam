% Script File: 10 Area OMO.bscr
% Decoded from: 5125D0 to 52B6A0 (10 Area OMO)

#new:Function $Function_80218000
{
    0:  ADDIU     SP, SP, FFD8
    4:  SW        S1, 14 (SP)
    8:  COPY      S1, A0
    C:  SW        RA, 20 (SP)
   10:  SW        S3, 1C (SP)
   14:  SW        S2, 18 (SP)
   18:  SW        S0, 10 (SP)
   1C:  LW        S0, C (S1)
   20:  LW        A1, 0 (S0)
   24:  JAL       ~Func:get_variable
   28:  ADDIU     S0, S0, 4
   2C:  LW        A1, 0 (S0)
   30:  ADDIU     S0, S0, 4
   34:  COPY      A0, S1
   38:  JAL       ~Func:get_variable
   3C:  COPY      S3, V0
   40:  LW        A1, 0 (S0)
   44:  ADDIU     S0, S0, 4
   48:  COPY      A0, S1
   4C:  JAL       ~Func:get_variable
   50:  COPY      S2, V0
   54:  COPY      A0, S1
   58:  LW        A1, 0 (S0)
   5C:  JAL       ~Func:get_variable
   60:  COPY      S0, V0
   64:  LW        A0, 148 (S1)
   68:  JAL       ~Func:get_actor
   6C:  COPY      S1, V0
   70:  COPY      V1, V0
   74:  LW        V0, 8 (V1)
   78:  LBU       V0, 24 (V0)
   7C:  LW        A0, 8 (V1)
   80:  SUBU      S3, S3, V0
   84:  SB        S3, 194 (V1)
   88:  LBU       V0, 25 (A0)
   8C:  SUBU      S2, S2, V0
   90:  SB        S2, 195 (V1)
   94:  LBU       V0, 26 (A0)
   98:  SUBU      S0, S0, V0
   9C:  SB        S0, 196 (V1)
   A0:  LBU       A0, 27 (A0)
   A4:  SUBU      S1, S1, A0
   A8:  SB        S1, 197 (V1)
   AC:  LW        RA, 20 (SP)
   B0:  LW        S3, 1C (SP)
   B4:  LW        S2, 18 (SP)
   B8:  LW        S1, 14 (SP)
   BC:  LW        S0, 10 (SP)
   C0:  LI        V0, 2
   C4:  JR        RA
   C8:  ADDIU     SP, SP, 28
}

PADDING: 802180CC to 802180D0 (0051269C to 005126A0)
00000000

#new:Function $Function_802180D0
{
    0:  ADDIU     SP, SP, FFD8
    4:  SW        S1, 14 (SP)
    8:  COPY      S1, A0
    C:  SW        RA, 20 (SP)
   10:  SW        S3, 1C (SP)
   14:  SW        S2, 18 (SP)
   18:  SW        S0, 10 (SP)
   1C:  LW        S0, C (S1)
   20:  LW        A1, 0 (S0)
   24:  JAL       ~Func:get_variable
   28:  ADDIU     S0, S0, 4
   2C:  LW        A1, 0 (S0)
   30:  ADDIU     S0, S0, 4
   34:  COPY      A0, S1
   38:  JAL       ~Func:get_variable
   3C:  COPY      S3, V0
   40:  LW        A1, 0 (S0)
   44:  ADDIU     S0, S0, 4
   48:  COPY      A0, S1
   4C:  JAL       ~Func:get_variable
   50:  COPY      S2, V0
   54:  COPY      A0, S1
   58:  LW        A1, 0 (S0)
   5C:  JAL       ~Func:get_variable
   60:  COPY      S0, V0
   64:  LW        A0, 148 (S1)
   68:  JAL       ~Func:get_actor
   6C:  COPY      S1, V0
   70:  COPY      V1, V0
   74:  LW        V0, 8 (V1)
   78:  LBU       V0, 24 (V0)
   7C:  LW        A0, 8 (V1)
   80:  SUBU      S3, S3, V0
   84:  SB        S3, 194 (V1)
   88:  LBU       V0, 25 (A0)
   8C:  SUBU      S2, S2, V0
   90:  SB        S2, 195 (V1)
   94:  LBU       V0, 26 (A0)
   98:  SUBU      S0, S0, V0
   9C:  SB        S0, 196 (V1)
   A0:  LBU       A0, 27 (A0)
   A4:  SUBU      S1, S1, A0
   A8:  SB        S1, 197 (V1)
   AC:  LW        RA, 20 (SP)
   B0:  LW        S3, 1C (SP)
   B4:  LW        S2, 18 (SP)
   B8:  LW        S1, 14 (SP)
   BC:  LW        S0, 10 (SP)
   C0:  LI        V0, 2
   C4:  JR        RA
   C8:  ADDIU     SP, SP, 28
}

PADDING: 8021819C to 802181A0 (0051276C to 00512770)
00000000

#new:Function $Function_802181A0
{
    0:  ADDIU     SP, SP, FFD8
    4:  SW        S1, 14 (SP)
    8:  COPY      S1, A0
    C:  SW        RA, 20 (SP)
   10:  SW        S3, 1C (SP)
   14:  SW        S2, 18 (SP)
   18:  SW        S0, 10 (SP)
   1C:  LW        S0, C (S1)
   20:  LW        A1, 0 (S0)
   24:  JAL       ~Func:get_variable
   28:  ADDIU     S0, S0, 4
   2C:  LW        A1, 0 (S0)
   30:  ADDIU     S0, S0, 4
   34:  COPY      A0, S1
   38:  JAL       ~Func:get_variable
   3C:  COPY      S3, V0
   40:  LW        A1, 0 (S0)
   44:  ADDIU     S0, S0, 4
   48:  COPY      A0, S1
   4C:  JAL       ~Func:get_variable
   50:  COPY      S2, V0
   54:  COPY      A0, S1
   58:  LW        A1, 0 (S0)
   5C:  JAL       ~Func:get_variable
   60:  COPY      S0, V0
   64:  LW        A0, 148 (S1)
   68:  JAL       ~Func:get_actor
   6C:  COPY      S1, V0
   70:  COPY      V1, V0
   74:  LW        V0, 8 (V1)
   78:  LBU       V0, 24 (V0)
   7C:  LW        A0, 8 (V1)
   80:  SUBU      S3, S3, V0
   84:  SB        S3, 194 (V1)
   88:  LBU       V0, 25 (A0)
   8C:  SUBU      S2, S2, V0
   90:  SB        S2, 195 (V1)
   94:  LBU       V0, 26 (A0)
   98:  SUBU      S0, S0, V0
   9C:  SB        S0, 196 (V1)
   A0:  LBU       A0, 27 (A0)
   A4:  SUBU      S1, S1, A0
   A8:  SB        S1, 197 (V1)
   AC:  LW        RA, 20 (SP)
   B0:  LW        S3, 1C (SP)
   B4:  LW        S2, 18 (SP)
   B8:  LW        S1, 14 (SP)
   BC:  LW        S0, 10 (SP)
   C0:  LI        V0, 2
   C4:  JR        RA
   C8:  ADDIU     SP, SP, 28
}

PADDING: 8021826C to 80218270 (0051283C to 00512840)
00000000

#new:Function $Function_80218270
{
    0:  ADDIU     SP, SP, FFD8
    4:  SW        S1, 14 (SP)
    8:  COPY      S1, A0
    C:  SW        RA, 20 (SP)
   10:  SW        S3, 1C (SP)
   14:  SW        S2, 18 (SP)
   18:  SW        S0, 10 (SP)
   1C:  LW        S0, C (S1)
   20:  LW        A1, 0 (S0)
   24:  JAL       ~Func:get_variable
   28:  ADDIU     S0, S0, 4
   2C:  LW        A1, 0 (S0)
   30:  ADDIU     S0, S0, 4
   34:  COPY      A0, S1
   38:  JAL       ~Func:get_variable
   3C:  COPY      S3, V0
   40:  LW        A1, 0 (S0)
   44:  ADDIU     S0, S0, 4
   48:  COPY      A0, S1
   4C:  JAL       ~Func:get_variable
   50:  COPY      S2, V0
   54:  COPY      A0, S1
   58:  LW        A1, 0 (S0)
   5C:  JAL       ~Func:get_variable
   60:  COPY      S0, V0
   64:  LW        A0, 148 (S1)
   68:  JAL       ~Func:get_actor
   6C:  COPY      S1, V0
   70:  COPY      V1, V0
   74:  LW        V0, 8 (V1)
   78:  LBU       V0, 24 (V0)
   7C:  LW        A0, 8 (V1)
   80:  SUBU      S3, S3, V0
   84:  SB        S3, 194 (V1)
   88:  LBU       V0, 25 (A0)
   8C:  SUBU      S2, S2, V0
   90:  SB        S2, 195 (V1)
   94:  LBU       V0, 26 (A0)
   98:  SUBU      S0, S0, V0
   9C:  SB        S0, 196 (V1)
   A0:  LBU       A0, 27 (A0)
   A4:  SUBU      S1, S1, A0
   A8:  SB        S1, 197 (V1)
   AC:  LW        RA, 20 (SP)
   B0:  LW        S3, 1C (SP)
   B4:  LW        S2, 18 (SP)
   B8:  LW        S1, 14 (SP)
   BC:  LW        S0, 10 (SP)
   C0:  LI        V0, 2
   C4:  JR        RA
   C8:  ADDIU     SP, SP, 28
}

PADDING: 8021833C to 80218340 (0051290C to 00512910)
00000000

#new:Function $Function_80218340
{
    0:  ADDIU     SP, SP, FFD8
    4:  SW        S1, 14 (SP)
    8:  COPY      S1, A0
    C:  SW        RA, 20 (SP)
   10:  SW        S3, 1C (SP)
   14:  SW        S2, 18 (SP)
   18:  SW        S0, 10 (SP)
   1C:  LW        S0, C (S1)
   20:  LW        A1, 0 (S0)
   24:  JAL       ~Func:get_variable
   28:  ADDIU     S0, S0, 4
   2C:  LW        A1, 0 (S0)
   30:  ADDIU     S0, S0, 4
   34:  COPY      A0, S1
   38:  JAL       ~Func:get_variable
   3C:  COPY      S3, V0
   40:  LW        A1, 0 (S0)
   44:  ADDIU     S0, S0, 4
   48:  COPY      A0, S1
   4C:  JAL       ~Func:get_variable
   50:  COPY      S2, V0
   54:  COPY      A0, S1
   58:  LW        A1, 0 (S0)
   5C:  JAL       ~Func:get_variable
   60:  COPY      S0, V0
   64:  LW        A0, 148 (S1)
   68:  JAL       ~Func:get_actor
   6C:  COPY      S1, V0
   70:  COPY      V1, V0
   74:  LW        V0, 8 (V1)
   78:  LBU       V0, 24 (V0)
   7C:  LW        A0, 8 (V1)
   80:  SUBU      S3, S3, V0
   84:  SB        S3, 194 (V1)
   88:  LBU       V0, 25 (A0)
   8C:  SUBU      S2, S2, V0
   90:  SB        S2, 195 (V1)
   94:  LBU       V0, 26 (A0)
   98:  SUBU      S0, S0, V0
   9C:  SB        S0, 196 (V1)
   A0:  LBU       A0, 27 (A0)
   A4:  SUBU      S1, S1, A0
   A8:  SB        S1, 197 (V1)
   AC:  LW        RA, 20 (SP)
   B0:  LW        S3, 1C (SP)
   B4:  LW        S2, 18 (SP)
   B8:  LW        S1, 14 (SP)
   BC:  LW        S0, 10 (SP)
   C0:  LI        V0, 2
   C4:  JR        RA
   C8:  ADDIU     SP, SP, 28
}

PADDING: 8021840C to 80218410 (005129DC to 005129E0)
00000000

#new:Function $Function_80218410
{
    0:  ADDIU     SP, SP, FFD8
    4:  SW        S1, 14 (SP)
    8:  COPY      S1, A0
    C:  SW        RA, 20 (SP)
   10:  SW        S3, 1C (SP)
   14:  SW        S2, 18 (SP)
   18:  SW        S0, 10 (SP)
   1C:  LW        S0, C (S1)
   20:  LW        A1, 0 (S0)
   24:  JAL       ~Func:get_variable
   28:  ADDIU     S0, S0, 4
   2C:  LW        A1, 0 (S0)
   30:  ADDIU     S0, S0, 4
   34:  COPY      A0, S1
   38:  JAL       ~Func:get_variable
   3C:  COPY      S3, V0
   40:  LW        A1, 0 (S0)
   44:  ADDIU     S0, S0, 4
   48:  COPY      A0, S1
   4C:  JAL       ~Func:get_variable
   50:  COPY      S2, V0
   54:  COPY      A0, S1
   58:  LW        A1, 0 (S0)
   5C:  JAL       ~Func:get_variable
   60:  COPY      S0, V0
   64:  LW        A0, 148 (S1)
   68:  JAL       ~Func:get_actor
   6C:  COPY      S1, V0
   70:  COPY      V1, V0
   74:  LW        V0, 8 (V1)
   78:  LBU       V0, 24 (V0)
   7C:  LW        A0, 8 (V1)
   80:  SUBU      S3, S3, V0
   84:  SB        S3, 194 (V1)
   88:  LBU       V0, 25 (A0)
   8C:  SUBU      S2, S2, V0
   90:  SB        S2, 195 (V1)
   94:  LBU       V0, 26 (A0)
   98:  SUBU      S0, S0, V0
   9C:  SB        S0, 196 (V1)
   A0:  LBU       A0, 27 (A0)
   A4:  SUBU      S1, S1, A0
   A8:  SB        S1, 197 (V1)
   AC:  LW        RA, 20 (SP)
   B0:  LW        S3, 1C (SP)
   B4:  LW        S2, 18 (SP)
   B8:  LW        S1, 14 (SP)
   BC:  LW        S0, 10 (SP)
   C0:  LI        V0, 2
   C4:  JR        RA
   C8:  ADDIU     SP, SP, 28
}

PADDING: 802184DC to 802184E0 (00512AAC to 00512AB0)
00000000

#new:Function $Function_802184E0
{
    0:  ADDIU     SP, SP, FFD8
    4:  SW        S1, 14 (SP)
    8:  COPY      S1, A0
    C:  SW        RA, 20 (SP)
   10:  SW        S3, 1C (SP)
   14:  SW        S2, 18 (SP)
   18:  SW        S0, 10 (SP)
   1C:  LW        S0, C (S1)
   20:  LW        A1, 0 (S0)
   24:  JAL       ~Func:get_variable
   28:  ADDIU     S0, S0, 4
   2C:  LW        A1, 0 (S0)
   30:  ADDIU     S0, S0, 4
   34:  COPY      A0, S1
   38:  JAL       ~Func:get_variable
   3C:  COPY      S3, V0
   40:  LW        A1, 0 (S0)
   44:  ADDIU     S0, S0, 4
   48:  COPY      A0, S1
   4C:  JAL       ~Func:get_variable
   50:  COPY      S2, V0
   54:  COPY      A0, S1
   58:  LW        A1, 0 (S0)
   5C:  JAL       ~Func:get_variable
   60:  COPY      S0, V0
   64:  LW        A0, 148 (S1)
   68:  JAL       ~Func:get_actor
   6C:  COPY      S1, V0
   70:  COPY      V1, V0
   74:  LW        V0, 8 (V1)
   78:  LBU       V0, 24 (V0)
   7C:  LW        A0, 8 (V1)
   80:  SUBU      S3, S3, V0
   84:  SB        S3, 194 (V1)
   88:  LBU       V0, 25 (A0)
   8C:  SUBU      S2, S2, V0
   90:  SB        S2, 195 (V1)
   94:  LBU       V0, 26 (A0)
   98:  SUBU      S0, S0, V0
   9C:  SB        S0, 196 (V1)
   A0:  LBU       A0, 27 (A0)
   A4:  SUBU      S1, S1, A0
   A8:  SB        S1, 197 (V1)
   AC:  LW        RA, 20 (SP)
   B0:  LW        S3, 1C (SP)
   B4:  LW        S2, 18 (SP)
   B8:  LW        S1, 14 (SP)
   BC:  LW        S0, 10 (SP)
   C0:  LI        V0, 2
   C4:  JR        RA
   C8:  ADDIU     SP, SP, 28
}

#new:Function $Function_802185AC
{
    0:  ADDIU     SP, SP, FFD0
    4:  SW        S1, 14 (SP)
    8:  COPY      S1, A0
    C:  SW        RA, 24 (SP)
   10:  SW        S4, 20 (SP)
   14:  SW        S3, 1C (SP)
   18:  SW        S2, 18 (SP)
   1C:  SW        S0, 10 (SP)
   20:  SDC1      F20, 28 (SP)
   24:  LW        S0, C (S1)
   28:  LW        A1, 0 (S0)
   2C:  JAL       ~Func:get_variable
   30:  ADDIU     S0, S0, 4
   34:  LW        S4, 0 (S0)
   38:  ADDIU     S0, S0, 4
   3C:  LW        A1, 0 (S0)
   40:  ADDIU     S0, S0, 4
   44:  COPY      A0, S1
   48:  JAL       ~Func:get_variable
   4C:  COPY      S2, V0
   50:  LW        A1, 0 (S0)
   54:  ADDIU     S0, S0, 4
   58:  COPY      A0, S1
   5C:  JAL       ~Func:get_variable
   60:  COPY      S3, V0
   64:  COPY      A0, S1
   68:  LW        A1, 0 (S0)
   6C:  JAL       ~Func:get_float_variable
   70:  COPY      S0, V0
   74:  LIF       F8, 6.283184
   80:  MTC1      S2, F4
   84:  NOP
   88:  CVT.S.W   F4, F4
   8C:  MUL.S     F8, F4, F8
   90:  NOP
   94:  MTC1      S0, F6
   98:  NOP
   9C:  CVT.S.W   F6, F6
   A0:  LIF       F2, 1.0
   A8:  DIV.S     F4, F4, F6
   AC:  SUB.S     F2, F2, F4
   B0:  MUL.S     F20, F0, F2
   B4:  NOP
   B8:  MTC1      S3, F12
   BC:  NOP
   C0:  CVT.S.W   F12, F12
   C4:  JAL       ~Func:cos_rad
   C8:  DIV.S     F12, F8, F12
   CC:  MUL.S     F20, F20, F0
   D0:  NOP
   D4:  COPY      A0, S1
   D8:  TRUNC.W.S F10, F20
   DC:  MFC1      A2, F10
   E0:  JAL       ~Func:set_variable
   E4:  COPY      A1, S4
   E8:  LW        RA, 24 (SP)
   EC:  LW        S4, 20 (SP)
   F0:  LW        S3, 1C (SP)
   F4:  LW        S2, 18 (SP)
   F8:  LW        S1, 14 (SP)
   FC:  LW        S0, 10 (SP)
  100:  LDC1      F20, 28 (SP)
  104:  LI        V0, 2
  108:  JR        RA
  10C:  ADDIU     SP, SP, 30
}

PADDING: 802186BC to 802186C0 (00512C8C to 00512C90)
00000000

#new:Function $Function_802186C0
{
    0:  ADDIU     SP, SP, FFD8
    4:  SW        S1, 14 (SP)
    8:  COPY      S1, A0
    C:  SW        RA, 20 (SP)
   10:  SW        S3, 1C (SP)
   14:  SW        S2, 18 (SP)
   18:  SW        S0, 10 (SP)
   1C:  LW        S0, C (S1)
   20:  LW        A1, 0 (S0)
   24:  JAL       ~Func:get_variable
   28:  ADDIU     S0, S0, 4
   2C:  LW        A1, 0 (S0)
   30:  ADDIU     S0, S0, 4
   34:  COPY      A0, S1
   38:  JAL       ~Func:get_variable
   3C:  COPY      S3, V0
   40:  LW        A1, 0 (S0)
   44:  ADDIU     S0, S0, 4
   48:  COPY      A0, S1
   4C:  JAL       ~Func:get_variable
   50:  COPY      S2, V0
   54:  COPY      A0, S1
   58:  LW        A1, 0 (S0)
   5C:  JAL       ~Func:get_variable
   60:  COPY      S0, V0
   64:  LW        A0, 148 (S1)
   68:  JAL       ~Func:get_actor
   6C:  COPY      S1, V0
   70:  COPY      V1, V0
   74:  LW        V0, 8 (V1)
   78:  LBU       V0, 24 (V0)
   7C:  LW        A0, 8 (V1)
   80:  SUBU      S3, S3, V0
   84:  SB        S3, 194 (V1)
   88:  LBU       V0, 25 (A0)
   8C:  SUBU      S2, S2, V0
   90:  SB        S2, 195 (V1)
   94:  LBU       V0, 26 (A0)
   98:  SUBU      S0, S0, V0
   9C:  SB        S0, 196 (V1)
   A0:  LBU       A0, 27 (A0)
   A4:  SUBU      S1, S1, A0
   A8:  SB        S1, 197 (V1)
   AC:  LW        RA, 20 (SP)
   B0:  LW        S3, 1C (SP)
   B4:  LW        S2, 18 (SP)
   B8:  LW        S1, 14 (SP)
   BC:  LW        S0, 10 (SP)
   C0:  LI        V0, 2
   C4:  JR        RA
   C8:  ADDIU     SP, SP, 28
}

#new:Function $Function_8021878C
{
    0:  ADDIU     SP, SP, FFD0
    4:  SW        S1, 14 (SP)
    8:  COPY      S1, A0
    C:  SW        RA, 24 (SP)
   10:  SW        S4, 20 (SP)
   14:  SW        S3, 1C (SP)
   18:  SW        S2, 18 (SP)
   1C:  SW        S0, 10 (SP)
   20:  SDC1      F20, 28 (SP)
   24:  LW        S0, C (S1)
   28:  LW        A1, 0 (S0)
   2C:  JAL       ~Func:get_variable
   30:  ADDIU     S0, S0, 4
   34:  LW        A1, 0 (S0)
   38:  ADDIU     S0, S0, 4
   3C:  COPY      A0, S1
   40:  JAL       ~Func:get_variable
   44:  COPY      S4, V0
   48:  LW        A1, 0 (S0)
   4C:  ADDIU     S0, S0, 4
   50:  COPY      A0, S1
   54:  JAL       ~Func:get_variable
   58:  COPY      S3, V0
   5C:  LW        A1, 0 (S0)
   60:  ADDIU     S0, S0, 4
   64:  COPY      A0, S1
   68:  JAL       ~Func:get_float_variable
   6C:  COPY      S2, V0
   70:  COPY      A0, S1
   74:  LW        A1, 0 (S0)
   78:  JAL       ~Func:get_variable
   7C:  MOV.S     F20, F0
   80:  LI        A0, 6
   84:  LA        A1, $End[0]
   8C:  MTC1      S4, F0
   90:  NOP
   94:  CVT.S.W   F0, F0
   98:  SWC1      F0, 28 (A1)
   9C:  MTC1      S3, F0
   A0:  NOP
   A4:  CVT.S.W   F0, F0
   A8:  SWC1      F0, 2C (A1)
   AC:  MTC1      S2, F0
   B0:  NOP
   B4:  CVT.S.W   F0, F0
   B8:  MFC1      A2, F20
   BC:  COPY      A3, V0
   C0:  JAL       ~Func:playFX_46_whirlwind
   C4:  SWC1      F0, 30 (A1)
   C8:  LW        RA, 24 (SP)
   CC:  LW        S4, 20 (SP)
   D0:  LW        S3, 1C (SP)
   D4:  LW        S2, 18 (SP)
   D8:  LW        S1, 14 (SP)
   DC:  LW        S0, 10 (SP)
   E0:  LDC1      F20, 28 (SP)
   E4:  LI        V0, 2
   E8:  JR        RA
   EC:  ADDIU     SP, SP, 30
}

PADDING: 8021887C to 80218880 (00512E4C to 00512E50)
00000000

#new:Function $Function_80218880
{
    0:  ADDIU     SP, SP, FFD8
    4:  SW        S2, 18 (SP)
    8:  COPY      S2, A0
    C:  SW        RA, 1C (SP)
   10:  SW        S1, 14 (SP)
   14:  SW        S0, 10 (SP)
   18:  SDC1      F20, 20 (SP)
   1C:  BEQ       A1, R0, .o130
   20:  LW        S0, C (S2)
   24:  JAL       ~Func:heap_malloc
   28:  LI        A0, 24
   2C:  COPY      S1, V0
   30:  SW        S1, 70 (S2)
   34:  LW        A1, 0 (S0)
   38:  ADDIU     S0, S0, 4
   3C:  JAL       ~Func:get_variable
   40:  COPY      A0, S2
   44:  SW        V0, 20 (S1)
   48:  LW        A1, 0 (S0)
   4C:  ADDIU     S0, S0, 4
   50:  JAL       ~Func:get_float_variable
   54:  COPY      A0, S2
   58:  SWC1      F0, 0 (S1)
   5C:  LW        A1, 0 (S0)
   60:  ADDIU     S0, S0, 4
   64:  JAL       ~Func:get_float_variable
   68:  COPY      A0, S2
   6C:  SWC1      F0, 4 (S1)
   70:  LW        A1, 0 (S0)
   74:  ADDIU     S0, S0, 4
   78:  JAL       ~Func:get_float_variable
   7C:  COPY      A0, S2
   80:  SWC1      F0, 8 (S1)
   84:  LW        A1, 0 (S0)
   88:  ADDIU     S0, S0, 4
   8C:  JAL       ~Func:get_variable
   90:  COPY      A0, S2
   94:  SW        V0, 1C (S1)
   98:  LW        A1, 0 (S0)
   9C:  JAL       ~Func:get_float_variable
   A0:  COPY      A0, S2
   A4:  LW        A0, 20 (S1)
   A8:  JAL       ~Func:get_item_entity
   AC:  SWC1      F0, 10 (S1)
   B0:  COPY      S0, V0
   B4:  LWC1      F12, 8 (S0)
   B8:  LWC1      F14, 10 (S0)
   BC:  LW        A2, 0 (S1)
   C0:  JAL       ~Func:dist2D
   C4:  LW        A3, 8 (S1)
   C8:  LWC1      F12, 8 (S0)
   CC:  LWC1      F14, 10 (S0)
   D0:  LW        A2, 0 (S1)
   D4:  LW        A3, 8 (S1)
   D8:  JAL       ~Func:atan2
   DC:  MOV.S     F20, F0
   E0:  LWC1      F4, 10 (S1)
   E4:  LWC1      F6, 1C (S1)
   E8:  CVT.S.W   F6, F6
   EC:  MUL.S     F4, F4, F6
   F0:  NOP
   F4:  LIF       F2, 0.5
   FC:  NOP
  100:  MUL.S     F4, F4, F2
  104:  NOP
  108:  SWC1      F0, C (S1)
  10C:  LWC1      F0, 4 (S1)
  110:  LWC1      F2, C (S0)
  114:  SUB.S     F0, F0, F2
  118:  MOV.S     F2, F6
  11C:  DIV.S     F0, F0, F6
  120:  ADD.S     F4, F4, F0
  124:  DIV.S     F20, F20, F2
  128:  SWC1      F20, 14 (S1)
  12C:  SWC1      F4, 18 (S1)
        .o130
  130:  LW        S1, 70 (S2)
  134:  JAL       ~Func:get_item_entity
  138:  LW        A0, 20 (S1)
  13C:  COPY      S0, V0
  140:  BNE       S0, R0, .o158
  144:  NOP
  148:  JAL       ~Func:heap_free
  14C:  LW        A0, 70 (S2)
  150:  BEQ       R0, R0, .o1FC
  154:  LI        V0, 2
        .o158
  158:  LWC1      F12, C (S1)
  15C:  JAL       ~Func:sin_deg
  160:  NOP
  164:  LWC1      F2, 14 (S1)
  168:  MUL.S     F2, F2, F0
  16C:  NOP
  170:  LWC1      F0, 8 (S0)
  174:  ADD.S     F0, F0, F2
  178:  SWC1      F0, 8 (S0)
  17C:  JAL       ~Func:cos_deg
  180:  LWC1      F12, C (S1)
  184:  LWC1      F2, 14 (S1)
  188:  MUL.S     F2, F2, F0
  18C:  NOP
  190:  LWC1      F0, 10 (S0)
  194:  SUB.S     F0, F0, F2
  198:  SWC1      F0, 10 (S0)
  19C:  LWC1      F0, C (S0)
  1A0:  LWC1      F2, 18 (S1)
  1A4:  ADD.S     F0, F0, F2
  1A8:  SWC1      F0, C (S0)
  1AC:  LWC1      F0, 18 (S1)
  1B0:  LWC1      F2, 10 (S1)
  1B4:  LW        V0, 1C (S1)
  1B8:  SUB.S     F0, F0, F2
  1BC:  ADDIU     V0, V0, FFFF
  1C0:  SW        V0, 1C (S1)
  1C4:  BLTZ      V0, .o1D4
  1C8:  SWC1      F0, 18 (S1)
  1CC:  BEQ       R0, R0, .o1FC
  1D0:  CLEAR     V0
        .o1D4
  1D4:  LWC1      F0, 0 (S1)
  1D8:  SWC1      F0, 8 (S0)
  1DC:  LWC1      F0, 4 (S1)
  1E0:  SWC1      F0, C (S0)
  1E4:  LWC1      F0, 8 (S1)
  1E8:  SWC1      F0, 10 (S0)
  1EC:  SW        R0, 18 (S1)
  1F0:  JAL       ~Func:heap_free
  1F4:  LW        A0, 70 (S2)
  1F8:  LI        V0, 1
        .o1FC
  1FC:  LW        RA, 1C (SP)
  200:  LW        S2, 18 (SP)
  204:  LW        S1, 14 (SP)
  208:  LW        S0, 10 (SP)
  20C:  LDC1      F20, 20 (SP)
  210:  JR        RA
  214:  ADDIU     SP, SP, 28
}

#new:Function $Function_80218A98
{
    0:  ADDIU     SP, SP, FFE0
    4:  SW        S2, 18 (SP)
    8:  COPY      S2, A0
    C:  SW        RA, 1C (SP)
   10:  SW        S1, 14 (SP)
   14:  SW        S0, 10 (SP)
   18:  LW        S0, C (S2)
   1C:  LW        A1, 0 (S0)
   20:  JAL       ~Func:get_variable
   24:  ADDIU     S0, S0, 4
   28:  JAL       ~Func:get_item_entity
   2C:  COPY      A0, V0
   30:  LW        A1, 0 (S0)
   34:  ADDIU     S0, S0, 4
   38:  COPY      S1, V0
   3C:  LWC1      F0, 8 (S1)
   40:  TRUNC.W.S F2, F0
   44:  MFC1      A2, F2
   48:  JAL       ~Func:set_variable
   4C:  COPY      A0, S2
   50:  LW        A1, 0 (S0)
   54:  ADDIU     S0, S0, 4
   58:  LWC1      F0, C (S1)
   5C:  TRUNC.W.S F2, F0
   60:  MFC1      A2, F2
   64:  JAL       ~Func:set_variable
   68:  COPY      A0, S2
   6C:  LWC1      F0, 10 (S1)
   70:  LW        A1, 0 (S0)
   74:  TRUNC.W.S F2, F0
   78:  MFC1      A2, F2
   7C:  JAL       ~Func:set_variable
   80:  COPY      A0, S2
   84:  LW        RA, 1C (SP)
   88:  LW        S2, 18 (SP)
   8C:  LW        S1, 14 (SP)
   90:  LW        S0, 10 (SP)
   94:  LI        V0, 2
   98:  JR        RA
   9C:  ADDIU     SP, SP, 20
}

#new:Function $Function_80218B38
{
    0:  ADDIU     SP, SP, FFC0
    4:  SW        S3, 2C (SP)
    8:  COPY      S3, A0
    C:  SW        S0, 20 (SP)
   10:  CLEAR     S0
   14:  SW        S2, 28 (SP)
   18:  LA        S2, 800DC070
   20:  SW        S4, 30 (SP)
   24:  LA        S4, 8010F290
   2C:  SW        S5, 34 (SP)
   30:  LI        A0, FFFF
   34:  SW        RA, 38 (SP)
   38:  SW        S1, 24 (SP)
   3C:  LB        V0, AE (S2)
   40:  LW        S1, C (S3)
   44:  BNE       V0, A0, .o54
   48:  COPY      S5, S4
   4C:  SW        R0, 10 (SP)
   50:  LI        S0, 1
        .o54
   54:  LB        V0, AF (S2)
   58:  BNE       V0, A0, .o70
   5C:  SLL       V0, S0, 2
   60:  ADDU      V1, SP, V0
   64:  LI        V0, 1
   68:  SW        V0, 10 (V1)
   6C:  ADDU      S0, S0, V0
        .o70
   70:  LB        V0, B0 (S2)
   74:  BNE       V0, A0, .o8C
   78:  SLL       V0, S0, 2
   7C:  ADDU      V1, SP, V0
   80:  LI        V0, 2
   84:  SW        V0, 10 (V1)
   88:  ADDIU     S0, S0, 1
        .o8C
   8C:  JAL       ~Func:rand_int
   90:  LI        A0, 2
   94:  ADDIU     A0, S0, FFFF
   98:  JAL       ~Func:rand_int
   9C:  ADDIU     S0, V0, 2
   A0:  SLL       V0, V0, 2
   A4:  ADDU      V0, SP, V0
   A8:  LW        V1, 10 (V0)
   AC:  LI        V0, 1
   B0:  BEQ       V1, V0, .o124
   B4:  SLTI      V0, V1, 2
   B8:  BEQ       V0, R0, .oD0
   BC:  LI        V0, 2
   C0:  BEQL      V1, R0, .oE0
   C4:  SB        S0, AE (S2)
   C8:  BEQ       R0, R0, .o194
   CC:  NOP
        .oD0
   D0:  BEQL      V1, V0, .o16C
   D4:  SB        S0, B0 (S2)
   D8:  BEQ       R0, R0, .o194
   DC:  NOP
        .oE0
   E0:  LW        A1, 0 (S1)
   E4:  LB        V0, 1 (S4)
   E8:  ADDIU     S1, S1, 4
   EC:  SLL       V0, V0, 2
   F0:  LTW       A2, V0 ($IntTable_80228748)
   FC:  JAL       ~Func:set_variable
  100:  COPY      A0, S3
  104:  LB        V0, 1 (S4)
  108:  LW        A1, 0 (S1)
  10C:  SLL       V0, V0, 2
  110:  LTW       A2, V0 ($IntTable_80228754)
  11C:  BEQ       R0, R0, .o18C
  120:  COPY      A0, S3
        .o124
  124:  SB        S0, AF (S2)
  128:  LW        A1, 0 (S1)
  12C:  LB        V0, 0 (S5)
  130:  ADDIU     S1, S1, 4
  134:  SLL       V0, V0, 2
  138:  LTW       A2, V0 ($IntTable_80228760)
  144:  JAL       ~Func:set_variable
  148:  COPY      A0, S3
  14C:  LB        V0, 0 (S5)
  150:  LW        A1, 0 (S1)
  154:  SLL       V0, V0, 2
  158:  LTW       A2, V0 ($IntTable_8022876C)
  164:  BEQ       R0, R0, .o18C
  168:  COPY      A0, S3
        .o16C
  16C:  LW        A1, 0 (S1)
  170:  ADDIU     S1, S1, 4
  174:  COPY      A0, S3
  178:  JAL       ~Func:set_variable
  17C:  LI        A2, 16C
  180:  COPY      A0, S3
  184:  LW        A1, 0 (S1)
  188:  LI        A2, 4F
        .o18C
  18C:  JAL       ~Func:set_variable
  190:  NOP
        .o194
  194:  LW        RA, 38 (SP)
  198:  LW        S5, 34 (SP)
  19C:  LW        S4, 30 (SP)
  1A0:  LW        S3, 2C (SP)
  1A4:  LW        S2, 28 (SP)
  1A8:  LW        S1, 24 (SP)
  1AC:  LW        S0, 20 (SP)
  1B0:  LI        V0, 2
  1B4:  JR        RA
  1B8:  ADDIU     SP, SP, 40
}

#new:Function $Function_80218CF4
{
    0:  ADDIU     SP, SP, FFE8
    4:  LA        V1, 800DC070
    C:  LI        A2, FFFF
   10:  SW        RA, 10 (SP)
   14:  LB        V0, AE (V1)
   18:  BEQ       V0, A2, .o38
   1C:  LW        A1, C (A0)
   20:  LB        V0, AF (V1)
   24:  BEQ       V0, A2, .o38
   28:  NOP
   2C:  LB        V0, B0 (V1)
   30:  BNE       V0, A2, .o44
   34:  NOP
        .o38
   38:  LW        A1, 0 (A1)
   3C:  BEQ       R0, R0, .o48
   40:  CLEAR     A2
        .o44
   44:  LW        A1, 0 (A1)
        .o48
   48:  JAL       ~Func:set_variable
   4C:  NOP
   50:  LW        RA, 10 (SP)
   54:  LI        V0, 2
   58:  JR        RA
   5C:  ADDIU     SP, SP, 18
}

#new:Function $Function_80218D54
{
    0:  ADDIU     SP, SP, FFE0
    4:  SW        S1, 14 (SP)
    8:  COPY      S1, A0
    C:  SW        RA, 18 (SP)
   10:  SW        S0, 10 (SP)
   14:  LW        S0, C (S1)
   18:  LW        A1, 0 (S0)
   1C:  JAL       ~Func:get_variable
   20:  ADDIU     S0, S0, 4
   24:  COPY      A0, S1
   28:  LW        A1, 0 (S0)
   2C:  JAL       ~Func:get_variable
   30:  COPY      S0, V0
   34:  COPY      A0, S0
   38:  JAL       ~Func:start_rumble
   3C:  COPY      A1, V0
   40:  LW        RA, 18 (SP)
   44:  LW        S1, 14 (SP)
   48:  LW        S0, 10 (SP)
   4C:  LI        V0, 2
   50:  JR        RA
   54:  ADDIU     SP, SP, 20
}

PADDING: 80218DAC to 80218DB0 (0051337C to 00513380)
00000000

#new:Function $Function_80218DB0
{
    0:  ADDIU     SP, SP, FFE0
    4:  SW        S1, 14 (SP)
    8:  COPY      S1, A0
    C:  SW        RA, 18 (SP)
   10:  SW        S0, 10 (SP)
   14:  LW        S0, C (S1)
   18:  LW        A1, 0 (S0)
   1C:  JAL       ~Func:get_variable
   20:  ADDIU     S0, S0, 4
   24:  COPY      A0, S1
   28:  LW        A1, 0 (S0)
   2C:  JAL       ~Func:get_variable
   30:  COPY      S0, V0
   34:  COPY      A0, S0
   38:  JAL       ~Func:start_rumble
   3C:  COPY      A1, V0
   40:  LW        RA, 18 (SP)
   44:  LW        S1, 14 (SP)
   48:  LW        S0, 10 (SP)
   4C:  LI        V0, 2
   50:  JR        RA
   54:  ADDIU     SP, SP, 20
}

#new:Function $Function_80218E08
{
    0:  ADDIU     SP, SP, FFD8
    4:  SW        S1, 14 (SP)
    8:  COPY      S1, A0
    C:  SW        RA, 20 (SP)
   10:  SW        S3, 1C (SP)
   14:  SW        S2, 18 (SP)
   18:  SW        S0, 10 (SP)
   1C:  LW        S0, C (S1)
   20:  LW        A1, 0 (S0)
   24:  JAL       ~Func:get_variable
   28:  ADDIU     S0, S0, 4
   2C:  LW        A1, 0 (S0)
   30:  ADDIU     S0, S0, 4
   34:  COPY      A0, S1
   38:  JAL       ~Func:get_variable
   3C:  COPY      S3, V0
   40:  LW        A1, 0 (S0)
   44:  ADDIU     S0, S0, 4
   48:  COPY      A0, S1
   4C:  JAL       ~Func:get_variable
   50:  COPY      S2, V0
   54:  COPY      A0, S1
   58:  LW        A1, 0 (S0)
   5C:  JAL       ~Func:get_variable
   60:  COPY      S0, V0
   64:  LW        A0, 148 (S1)
   68:  JAL       ~Func:get_actor
   6C:  COPY      S1, V0
   70:  COPY      V1, V0
   74:  LW        V0, 8 (V1)
   78:  LBU       V0, 24 (V0)
   7C:  LW        A0, 8 (V1)
   80:  SUBU      S3, S3, V0
   84:  SB        S3, 194 (V1)
   88:  LBU       V0, 25 (A0)
   8C:  SUBU      S2, S2, V0
   90:  SB        S2, 195 (V1)
   94:  LBU       V0, 26 (A0)
   98:  SUBU      S0, S0, V0
   9C:  SB        S0, 196 (V1)
   A0:  LBU       A0, 27 (A0)
   A4:  SUBU      S1, S1, A0
   A8:  SB        S1, 197 (V1)
   AC:  LW        RA, 20 (SP)
   B0:  LW        S3, 1C (SP)
   B4:  LW        S2, 18 (SP)
   B8:  LW        S1, 14 (SP)
   BC:  LW        S0, 10 (SP)
   C0:  LI        V0, 2
   C4:  JR        RA
   C8:  ADDIU     SP, SP, 28
}

PADDING: 80218ED4 to 80218EE0 (005134A4 to 005134B0)
00000000 00000000 00000000

#new:Function $Function_80218EE0
{
    0:  ADDIU     SP, SP, FFD8
    4:  SW        S1, 14 (SP)
    8:  COPY      S1, A0
    C:  SW        RA, 20 (SP)
   10:  SW        S3, 1C (SP)
   14:  SW        S2, 18 (SP)
   18:  SW        S0, 10 (SP)
   1C:  LW        S0, C (S1)
   20:  LW        A1, 0 (S0)
   24:  JAL       ~Func:get_variable
   28:  ADDIU     S0, S0, 4
   2C:  LW        A1, 0 (S0)
   30:  ADDIU     S0, S0, 4
   34:  COPY      A0, S1
   38:  JAL       ~Func:get_variable
   3C:  COPY      S3, V0
   40:  LW        A1, 0 (S0)
   44:  ADDIU     S0, S0, 4
   48:  COPY      A0, S1
   4C:  JAL       ~Func:get_variable
   50:  COPY      S2, V0
   54:  COPY      A0, S1
   58:  LW        A1, 0 (S0)
   5C:  JAL       ~Func:get_variable
   60:  COPY      S0, V0
   64:  LW        A0, 148 (S1)
   68:  JAL       ~Func:get_actor
   6C:  COPY      S1, V0
   70:  COPY      V1, V0
   74:  LW        V0, 8 (V1)
   78:  LBU       V0, 24 (V0)
   7C:  LW        A0, 8 (V1)
   80:  SUBU      S3, S3, V0
   84:  SB        S3, 194 (V1)
   88:  LBU       V0, 25 (A0)
   8C:  SUBU      S2, S2, V0
   90:  SB        S2, 195 (V1)
   94:  LBU       V0, 26 (A0)
   98:  SUBU      S0, S0, V0
   9C:  SB        S0, 196 (V1)
   A0:  LBU       A0, 27 (A0)
   A4:  SUBU      S1, S1, A0
   A8:  SB        S1, 197 (V1)
   AC:  LW        RA, 20 (SP)
   B0:  LW        S3, 1C (SP)
   B4:  LW        S2, 18 (SP)
   B8:  LW        S1, 14 (SP)
   BC:  LW        S0, 10 (SP)
   C0:  LI        V0, 2
   C4:  JR        RA
   C8:  ADDIU     SP, SP, 28
}

PADDING: 80218FAC to 80218FB0 (0051357C to 00513580)
00000000

#new:Function $Function_80218FB0
{
    0:  ADDIU     SP, SP, FF30
    4:  SW        S5, AC (SP)
    8:  SW        RA, B0 (SP)
    C:  SW        S4, A8 (SP)
   10:  SW        S3, A4 (SP)
   14:  SW        S2, A0 (SP)
   18:  SW        S1, 9C (SP)
   1C:  SW        S0, 98 (SP)
   20:  SDC1      F24, C8 (SP)
   24:  SDC1      F22, C0 (SP)
   28:  SDC1      F20, B8 (SP)
   2C:  BEQ       A1, R0, .oAC
   30:  COPY      S5, A0
   34:  JAL       ~Func:heap_malloc
   38:  LI        A0, 18
   3C:  COPY      S2, V0
   40:  CLEAR     S4
   44:  ADDIU     S0, S2, C
   48:  LA        S3, $Script_8022DA34
   50:  LIF       F20, 3.5
   58:  LA        S1, $???_8022DA30
   60:  SW        S2, 70 (S5)
        .o64
   64:  LW        V0, 0 (S1)
   68:  ADDIU     S1, S1, 4
   6C:  ADDIU     S4, S4, 1
   70:  SW        V0, 4 (S0)
   74:  COPY      A0, V0
   78:  LW        V0, 0 (S3)
   7C:  ADDIU     S3, S3, 4
   80:  JAL       ~Func:get_model_list_index_from_tree_index
   84:  SW        V0, 8 (S0)
   88:  JAL       ~Func:get_model_from_list_index
   8C:  COPY      A0, V0
   90:  SW        R0, 0 (S2)
   94:  SW        R0, FFF8 (S0)
   98:  SWC1      F20, FFFC (S0)
   9C:  SW        R0, 0 (S0)
   A0:  ADDIU     S0, S0, 18
   A4:  BEQ       S4, R0, .o64
   A8:  ADDIU     S2, S2, 18
        .oAC
   AC:  CLEAR     S4
   B0:  ADDIU     S3, SP, 58
   B4:  LW        S2, 70 (S5)
   B8:  MTC1      R0, F24
   BC:  ADDIU     S1, S2, 4
        .oC0
   C0:  LWC1      F12, 8 (S1)
   C4:  LWC1      F0, 4 (S1)
   C8:  ADD.S     F12, F12, F0
   CC:  JAL       ~Func:clamp_angle
   D0:  SWC1      F12, 8 (S1)
   D4:  LIF       F12, 3.124375
   E0:  NOP
   E4:  MUL.S     F12, F0, F12
   E8:  NOP
   EC:  LIF       F2, 180.0
   F4:  SWC1      F0, 8 (S1)
   F8:  JAL       ~Func:sin_rad
   FC:  DIV.S     F12, F12, F2
  100:  LIF       F2, 20.0
  108:  NOP
  10C:  MUL.S     F20, F0, F2
  110:  NOP
  114:  MUL.S     F22, F20, F20
  118:  NOP
  11C:  ADDIU     S4, S4, 1
  120:  LIF       F0, 90.0
  128:  LW        A0, C (S1)
  12C:  JAL       ~Func:get_model_list_index_from_tree_index
  130:  DIV.S     F22, F22, F0
  134:  JAL       ~Func:get_model_from_list_index
  138:  COPY      A0, V0
  13C:  COPY      S0, V0
  140:  LHU       V0, 0 (S0)
  144:  MFC1      A2, F24
  148:  ORI       V0, V0, 1400
  14C:  SH        V0, 0 (S0)
  150:  LWC1      F0, 0 (S2)
  154:  LWC1      F2, 0 (S1)
  158:  NEG.S     F0, F0
  15C:  NEG.S     F2, F2
  160:  MFC1      A1, F0
  164:  MFC1      A3, F2
  168:  JAL       ~Func:guTranslateF
  16C:  ADDIU     A0, SP, 18
  170:  MFC1      A1, F20
  174:  MFC1      A2, F24
  178:  MFC1      A3, F24
  17C:  LIF       F0, 1.0
  184:  COPY      A0, S3
  188:  JAL       ~Func:guRotateF
  18C:  SWC1      F0, 10 (SP)
  190:  ADDIU     A0, SP, 18
  194:  COPY      A1, S3
  198:  ADDIU     S0, S0, 58
  19C:  JAL       ~Func:guMtxCatF
  1A0:  COPY      A2, S0
  1A4:  ADDIU     A0, SP, 18
  1A8:  LW        A3, 0 (S1)
  1AC:  ADDIU     S1, S1, 18
  1B0:  LW        A1, 0 (S2)
  1B4:  MFC1      A2, F22
  1B8:  JAL       ~Func:guTranslateF
  1BC:  ADDIU     S2, S2, 18
  1C0:  COPY      A0, S0
  1C4:  ADDIU     A1, SP, 18
  1C8:  JAL       ~Func:guMtxCatF
  1CC:  COPY      A2, A0
  1D0:  BEQ       S4, R0, .oC0
  1D4:  CLEAR     V0
  1D8:  LW        RA, B0 (SP)
  1DC:  LW        S5, AC (SP)
  1E0:  LW        S4, A8 (SP)
  1E4:  LW        S3, A4 (SP)
  1E8:  LW        S2, A0 (SP)
  1EC:  LW        S1, 9C (SP)
  1F0:  LW        S0, 98 (SP)
  1F4:  LDC1      F24, C8 (SP)
  1F8:  LDC1      F22, C0 (SP)
  1FC:  LDC1      F20, B8 (SP)
  200:  JR        RA
  204:  ADDIU     SP, SP, D0
}

PADDING: 802191B8 to 802191C0 (00513788 to 00513790)
00000000 00000000

#new:Function $Function_802191C0
{
    0:  LAW       V0, 8007419C
    8:  SW        R0, 84 (A0)
    C:  LBU       V0, AA (V0)
   10:  ANDI      V0, V0, 1
   14:  BEQ       V0, R0, .o20
   18:  LI        V0, 1
   1C:  SW        V0, 84 (A0)
        .o20
   20:  JR        RA
   24:  LI        V0, 2
}

#new:Function $Function_802191E8
{
    0:  ADDIU     SP, SP, FFE8
    4:  SW        RA, 10 (SP)
    8:  JAL       ~Func:add_coins
    C:  LI        A0, 1
   10:  LW        RA, 10 (SP)
   14:  LI        V0, 2
   18:  JR        RA
   1C:  ADDIU     SP, SP, 18
}

PADDING: 80219208 to 80219210 (005137D8 to 005137E0)
00000000 00000000

#new:DefenseTable $DefenseTable_80219210
{
	.Element:Normal 00000000
	.Element:Shock  00000000
	.Element:End
}

#new:StatusTable $StatusTable_80219224
{
	.Status:Normal      0`
	.Status:Default     0`
	.Status:Sleep      70`
	.Status:Poison     50`
	.Status:Frozen      0`
	.Status:Dizzy      90`
	.Status:Fear      100`
	.Status:Static     50`
	.Status:Paralyze   90`
	.Status:Shrink     75`
	.Status:Stop       90`
	.Status:DefaultTurnMod    0`
	.Status:SleepTurnMod      0`
	.Status:PoisonTurnMod     0`
	.Status:FrozenTurnMod     0`
	.Status:DizzyTurnMod      0`
	.Status:FearTurnMod       0`
	.Status:StaticTurnMod     0`
	.Status:ParalyzeTurnMod   1`
	.Status:ShrinkTurnMod     0`
	.Status:StopTurnMod       0`
	.Status:End
}

#new:PartsTable $PartsTable_802192D0
{
	00800000 01000000 001800FF $IdleAnimations_8021931C $DefenseTable_80219210 00000000 00000000 FFF60000 00000000
}

#new:Actor $ShyGuy_RED
{
	% stats
	[Index]        1Fb
	[Level]        14`b
	[MaxHP]         7`b
	[Coins]         1`b
	[Flags]       00000000
	[StatusTable] $StatusTable_80219224
	% ai
	[PartsCount]    1`s
	[PartsTable]  $PartsTable_802192D0
	[Script]      $Script_Init_80219368
	% move effectiveness
	[Escape]       60`b
	[Item]         80`b
	[AirLift]      85`b
	[Hurricane]    80`b % Bow's "Spook" as well
	[UpAndAway]    95`b
	[PowerBounce] 100`b
	[SpinSmash]     0`b % weight (0-4)
	% ui positions
	[Size]         28`b  24`b % width height
	[HealthBar]     0`b   0`b % dx dy
	[StatusTurn]  -10`b  20`b % dx dy
	[StatusIcon]   10`b  20`b % dx dy
}

#new:IdleAnimations $IdleAnimations_8021931C
{
	.Status:Normal    003B0001
	.Status:Stone     003B0000
	.Status:Sleep     003B0012
	.Status:Poison    003B0001
	.Status:Stop      003B0000
	.Status:Static    003B0001
	.Status:Paralyze  003B0000
	.Status:Dizzy     003B0013
	.Status:Fear      003B0013
	.Status:End
}

#new:Script $Script_Init_80219368
{
    0:  Call  BindTakeTurn      ( .Actor:Self $Script_TakeTurn_8021ACB4 )
   14:  Call  BindIdle  ( .Actor:Self $Script_Idle_802193B4 )
   28:  Call  BindHandleEvent   ( .Actor:Self $Script_HandleEvent_80219528 )
   3C:  Return
   44:  End
}

#new:Script $Script_Idle_802193B4
{
    0:  Label  0
    C:  Call  GetStatusFlags    ( .Actor:Self *Var0 )
   20:  If  *Var0  &  ~Flags:StatusFlags:Sleep % 1000
   30:  	Call  SetTargetOffset       ( .Actor:Self 00000001  -4`  14` )
   4C:  	Call  8027D4C8  ( FFFFFF81 00000001 00000000 00000000 )
   68:  	Call  $Function_80218000    ( FFFFFFF6 0000000D 0000000A 0000000D )
   84:  Else
   8C:  	Call  SetTargetOffset       ( .Actor:Self 00000001  0`  24` )
   A8:  	Call  8027D4C8  ( FFFFFF81 00000001 FFFFFFFF FFFFFFF6 )
   C4:  	Call  $Function_80218000    ( FFFFFFF6 00000014 0000000A 00000014 )
   E0:  EndIf
   E8:  Wait  1`
   F4:  Goto  0
  100:  Return
  108:  End
}

#new:Script $Script_802194C4
{
    0:  Call  ResetAllActorSounds   ( .Actor:Self )
   10:  SetConst  *Var0  00000001
   20:  SetConst  *Var1  003B0003
   30:  ExecWait  DoReturnHome
   3C:  Call  SetAnimation  ( .Actor:Self 00000001 003B0001 )
   54:  Return
   5C:  End
}

#new:Script $Script_HandleEvent_80219528
{
    0:  Call  UseIdleAnimation  ( .Actor:Self .False )
   14:  Call  GetLastEvent      ( .Actor:Self *Var0 )
   28:  Switch  *Var0
   34:  	CaseOR  ==  .Event:HitCombo % 9
   40:  	CaseOR  ==  .Event:Hit % A
   4C:  		SetConst  *Var0  00000001
   5C:  		SetConst  *Var1  003B000C
   6C:  		ExecWait  DoNormalHit
   78:  	EndCaseGroup
   80:  	Case  ==  .Event:BurnHit % E
   8C:  		SetConst  *Var0  00000001
   9C:  		SetConst  *Var1  003B000D
   AC:  		SetConst  *Var2  003B000E
   BC:  		ExecWait  DoBurnHit
   C8:  	Case  ==  .Event:BurnDeath % 24
   D4:  		SetConst  *Var0  00000001
   E4:  		SetConst  *Var1  003B000D
   F4:  		SetConst  *Var2  003B000E
  104:  		ExecWait  DoBurnHit
  110:  		SetConst  *Var0  00000001
  120:  		SetConst  *Var1  003B000E
  130:  		ExecWait  DoDeath
  13C:  		Return
  144:  	Case  ==  .Event:SpinSmashHit % B
  150:  		SetConst  *Var0  00000001
  160:  		SetConst  *Var1  003B000C
  170:  		ExecWait  DoSpinSmashHit
  17C:  	Case  ==  .Event:SpinSmashDeath % 21
  188:  		SetConst  *Var0  00000001
  198:  		SetConst  *Var1  003B000C
  1A8:  		ExecWait  DoSpinSmashHit
  1B4:  		SetConst  *Var0  00000001
  1C4:  		SetConst  *Var1  003B000C
  1D4:  		ExecWait  DoDeath
  1E0:  		Return
  1E8:  	Case  ==  .Event:ShockHit % 2F
  1F4:  		SetConst  *Var0  00000001
  204:  		SetConst  *Var1  003B000C
  214:  		ExecWait  DoShockHit
  220:  		SetConst  *Var0  00000001
  230:  		SetConst  *Var1  003B000C
  240:  		ExecWait  DoJumpBack
  24C:  		Call  SetActorSpeed ( .Actor:Self *Fixed[4.0] )
  260:  		ExecWait  $Script_802194C4
  26C:  	Case  ==  .Event:ShockDeath % 26
  278:  		SetConst  *Var0  00000001
  288:  		SetConst  *Var1  003B000C
  298:  		ExecWait  DoShockHit
  2A4:  		SetConst  *Var0  00000001
  2B4:  		SetConst  *Var1  003B000C
  2C4:  		ExecWait  DoDeath
  2D0:  		Return
  2D8:  	CaseOR  ==  00000017 % 17
  2E4:  	CaseOR  ==  .Event:Immune % 19
  2F0:  	CaseOR  ==  .Event:AirLiftFailed % 1F
  2FC:  		SetConst  *Var0  00000001
  30C:  		SetConst  *Var1  003B0001
  31C:  		ExecWait  DoImmune
  328:  	EndCaseGroup
  330:  	Case  ==  .Event:Death % 20
  33C:  		SetConst  *Var0  00000001
  34C:  		SetConst  *Var1  003B000C
  35C:  		ExecWait  DoNormalHit
  368:  		Wait  10`
  374:  		SetConst  *Var0  00000001
  384:  		SetConst  *Var1  003B000C
  394:  		ExecWait  DoDeath
  3A0:  		Return
  3A8:  	Case  ==  .Event:RecoverStatus % 31
  3B4:  		SetConst  *Var0  00000001
  3C4:  		SetConst  *Var1  003B0001
  3D4:  		ExecWait  DoRecover
  3E0:  	Case  ==  .Event:ScareAway % 39
  3EC:  		SetConst  *Var0  00000001
  3FC:  		SetConst  *Var1  003B0003
  40C:  		SetConst  *Var2  003B0014
  41C:  		ExecWait  DoScareAway
  428:  		Return
  430:  	Case  ==  .Event:BeginAirLift % 3A
  43C:  		SetConst  *Var0  00000001
  44C:  		SetConst  *Var1  003B000C
  45C:  		ExecWait  DoAirLift
  468:  	Case  ==  .Event:BlowAway % 16
  474:  		SetConst  *Var0  00000001
  484:  		SetConst  *Var1  003B000C
  494:  		ExecWait  DoBlowAway
  4A0:  		Return
  4A8:  	Default
  4B0:  EndSwitch
  4B8:  Call  UseIdleAnimation  ( .Actor:Self .True )
  4CC:  Return
  4D4:  End
}

#new:Script $Script_80219A04
{
    0:  Call  UseIdleAnimation  ( .Actor:Self .False )
   14:  Call  EnableIdleScript  ( .Actor:Self 00000000 )
   28:  Call  SetTargetActor    ( .Actor:Self .Actor:Player )
   3C:  Call  UseBattleCamPreset    ( 0000003F )
   4C:  Call  BattleCamTargetActor  ( .Actor:Self )
   5C:  Call  MoveBattleCamOver (  20` )
   6C:  Call  8024ECF8  ( FFFFFFFF 00000001 00000000 )
   84:  Call  SetAnimation      ( .Actor:Self 00000001 003B0003 )
   9C:  Call  SetActorSpeed     ( .Actor:Self *Fixed[4.0] )
   B0:  Call  SetGoalToTarget   ( .Actor:Self )
   C0:  Call  GetGoalPos        ( .Actor:Self *Var0 *Var1 *Var2 )
   DC:  Add   *Var0  00000032
   EC:  Set   *Var1  00000000
   FC:  Call  SetGoalPos        ( .Actor:Self *Var0 *Var1 *Var2 )
  118:  Call  RunToGoal ( .Actor:Self  0` .False )
  130:  Call  EnemyTestTarget   ( .Actor:Self *Var0 ~Flags:DamageType:0 00000000 00000001 00000010 )
  154:  Switch  *Var0
  160:  	CaseOR  ==  .HitResult:Miss % 6
  16C:  	CaseOR  ==  .HitResult:Lucky % 5
  178:  		Set   *VarA  *Var0
  188:  		Call  SetActorSounds    ( .Actor:Self .ActorSound:Jump 000002EF 00000000 )
  1A4:  		Call  SetActorSounds    ( .Actor:Self .ActorSound:Walk 000020BA 000003B4 )
  1C0:  		Call  SetActorSounds    ( .Actor:Self .ActorSound:WalkIncrement 0000000A 00000000 )
  1DC:  		Call  SetActorSpeed ( .Actor:Self *Fixed[6.0] )
  1F0:  		Call  SetAnimation  ( .Actor:Self 00000001 003B0004 )
  208:  		Call  SetGoalToTarget   ( .Actor:Self )
  218:  		Call  RunToGoal     ( .Actor:Self  0` .False )
  230:  		Call  SetAnimation  ( .Actor:Self 00000001 003B0005 )
  248:  		Call  SetActorSpeed ( .Actor:Self *Fixed[6.0] )
  25C:  		Call  SetActorJumpGravity   ( .Actor:Self *Fixed[0.5] )
  270:  		Call  GetActorPos   ( .Actor:Self *Var0 *Var1 *Var2 )
  28C:  		Sub   *Var0  0000001E
  29C:  		Call  SetGoalPos    ( .Actor:Self *Var0 *Var1 *Var2 )
  2B8:  		Call  JumpToGoal    ( .Actor:Self  8` .False .True .False )
  2D8:  		If  *VarA  ==  .HitResult:Lucky % 5
  2E8:  			Call  EnemyTestTarget   ( .Actor:Self *VarA ~Flags:DamageType:TriggerLucky 00000000 00000000 00000000 )
  30C:  		EndIf
  314:  		Call  ResetAllActorSounds   ( .Actor:Self )
  324:  		Sub   *Var0  00000014
  334:  		Call  SetGoalPos        ( .Actor:Self *Var0 *Var1 *Var2 )
  350:  		Call  JumpToGoal        ( .Actor:Self  8` .False .True .False )
  370:  		Wait  15`
  37C:  		Call  UseBattleCamPreset    ( 00000002 )
  38C:  		Call  SetActorYaw       ( .Actor:Self  180` )
  3A0:  		Call  AddActorDecoration    ( .Actor:Self 00000001 00000000 .Decoration:Sweat )
  3BC:  		Call  SetActorSpeed     ( .Actor:Self *Fixed[4.0] )
  3D0:  		SetConst  *Var0  00000001
  3E0:  		SetConst  *Var1  003B0004
  3F0:  		ExecWait  DoReturnHome
  3FC:  		Call  RemoveActorDecoration ( .Actor:Self 00000001 00000000 )
  414:  		Call  SetActorYaw       ( .Actor:Self  0` )
  428:  		Call  SetAnimation      ( .Actor:Self 00000001 003B0001 )
  440:  		Call  EnableIdleScript  ( .Actor:Self 00000001 )
  454:  		Call  UseIdleAnimation  ( .Actor:Self .True )
  468:  		Return
  470:  	EndCaseGroup
  478:  EndSwitch
  480:  Thread
  488:  	Wait  3`
  494:  	Call  PlaySoundAtActor  ( .Actor:Self 000002EF )
  4A8:  EndThread
  4B0:  Call  SetActorSounds    ( .Actor:Self .ActorSound:Walk 000020BA 000003B4 )
  4CC:  Call  SetActorSounds    ( .Actor:Self .ActorSound:WalkIncrement 0000000A 00000000 )
  4E8:  Call  SetActorSpeed     ( .Actor:Self *Fixed[6.0] )
  4FC:  Call  SetAnimation      ( .Actor:Self 00000001 003B0004 )
  514:  Call  SetGoalToTarget   ( .Actor:Self )
  524:  Call  GetGoalPos        ( .Actor:Self *Var0 *Var1 *Var2 )
  540:  Add   *Var0  0000000A
  550:  Set   *Var1  00000000
  560:  Call  SetGoalPos        ( .Actor:Self *Var0 *Var1 *Var2 )
  57C:  Call  RunToGoal ( .Actor:Self  0` .False )
  594:  Call  SetAnimation      ( .Actor:Self 00000001 003B0005 )
  5AC:  Wait  2`
  5B8:  Call  SetGoalToTarget   ( .Actor:Self )
  5C8:  Call  EnemyDamageTarget ( .Actor:Self *Var0 ~Flags:DamageType:0 00000000 00000000 00000002 00000020 )
  5F0:  Call  ResetAllActorSounds   ( .Actor:Self )
  600:  Call  UseBattleCamPreset    ( 00000002 )
  610:  Call  MoveBattleCamOver (  15` )
  620:  Call  GetGoalPos        ( .Actor:Self *Var0 *Var1 *Var2 )
  63C:  Add   *Var0  0000001E
  64C:  Set   *Var1  00000000
  65C:  Call  SetActorJumpGravity   ( .Actor:Self *Fixed[1.8] )
  670:  Call  SetGoalPos        ( .Actor:Self *Var0 *Var1 *Var2 )
  68C:  Call  JumpToGoal        ( .Actor:Self  10` .False .True .False )
  6AC:  Call  SetAnimation      ( .Actor:Self 00000001 003B0001 )
  6C4:  Wait  8`
  6D0:  Call  SetActorSpeed     ( .Actor:Self *Fixed[6.0] )
  6E4:  ExecWait  $Script_802194C4
  6F0:  Call  EnableIdleScript  ( .Actor:Self 00000001 )
  704:  Call  UseIdleAnimation  ( .Actor:Self .True )
  718:  Return
  720:  End
}

#new:Script $Script_8021A12C
{
    0:  Call  UseIdleAnimation  ( .Actor:Self .False )
   14:  Call  EnableIdleScript  ( .Actor:Self 00000000 )
   28:  Call  SetTargetActor    ( .Actor:Self .Actor:Player )
   3C:  Call  UseBattleCamPreset    ( 0000003F )
   4C:  Call  BattleCamTargetActor  ( .Actor:Self )
   5C:  Call  MoveBattleCamOver (  20` )
   6C:  Call  8024ECF8  ( FFFFFFFF 00000001 00000000 )
   84:  Call  PlaySoundAtActor  ( .Actor:Self 00000234 )
   98:  Call  SetAnimation      ( .Actor:Self 00000001 003B0009 )
   B0:  Wait  20`
   BC:  Call  SetAnimation      ( .Actor:Self 00000001 003B0003 )
   D4:  Call  SetActorSpeed     ( .Actor:Self *Fixed[3.0] )
   E8:  Call  SetGoalToTarget   ( .Actor:Self )
   F8:  Call  GetGoalPos        ( .Actor:Self *Var0 *Var1 *Var2 )
  114:  Add   *Var0  00000050
  124:  Set   *Var1  00000000
  134:  Call  SetGoalPos        ( .Actor:Self *Var0 *Var1 *Var2 )
  150:  Call  RunToGoal ( .Actor:Self  0` .False )
  168:  Call  SetActorSounds    ( .Actor:Self .ActorSound:Walk 000020BA 000003B4 )
  184:  Call  SetActorSounds    ( .Actor:Self .ActorSound:WalkIncrement 0000000A 00000000 )
  1A0:  Call  SetAnimation      ( .Actor:Self 00000001 003B0004 )
  1B8:  Call  SetActorSpeed     ( .Actor:Self *Fixed[5.0] )
  1CC:  Sub   *Var0  00000028
  1DC:  Call  SetGoalPos        ( .Actor:Self *Var0 *Var1 *Var2 )
  1F8:  Call  RunToGoal ( .Actor:Self  0` .False )
  210:  Call  EnemyTestTarget   ( .Actor:Self *Var0 ~Flags:DamageType:0 00000000 00000001 00000010 )
  234:  Switch  *Var0
  240:  	CaseOR  ==  .HitResult:Miss % 6
  24C:  	CaseOR  ==  .HitResult:Lucky % 5
  258:  		Set   *VarA  *Var0
  268:  		Call  SetActorSpeed ( .Actor:Self *Fixed[6.0] )
  27C:  		Call  SetAnimation  ( .Actor:Self 00000001 003B0009 )
  294:  		Thread
  29C:  			Wait  12`
  2A8:  			Call  SetAnimation  ( .Actor:Self 00000001 003B000A )
  2C0:  		EndThread
  2C8:  		Call  SetActorJumpGravity   ( .Actor:Self *Fixed[0.8] )
  2DC:  		Call  SetGoalToTarget   ( .Actor:Self )
  2EC:  		Call  GetGoalPos        ( .Actor:Self *Var0 *Var1 *Var2 )
  308:  		Sub   *Var0  0000000A
  318:  		Set   *Var1  00000000
  328:  		Call  SetGoalPos        ( .Actor:Self *Var0 *Var1 *Var2 )
  344:  		Call  JumpToGoal        ( .Actor:Self  24` .False .True .False )
  364:  		If  *VarA  ==  .HitResult:Lucky % 5
  374:  			Call  EnemyTestTarget   ( .Actor:Self *Var0 ~Flags:DamageType:TriggerLucky 00000000 00000000 00000000 )
  398:  		EndIf
  3A0:  		Call  SetAnimation  ( .Actor:Self 00000001 003B0005 )
  3B8:  		Call  SetActorSpeed ( .Actor:Self *Fixed[6.0] )
  3CC:  		Call  SetActorJumpGravity   ( .Actor:Self *Fixed[0.5] )
  3E0:  		Call  GetActorPos   ( .Actor:Self *Var0 *Var1 *Var2 )
  3FC:  		Sub   *Var0  0000001E
  40C:  		Call  SetGoalPos    ( .Actor:Self *Var0 *Var1 *Var2 )
  428:  		Call  JumpToGoal    ( .Actor:Self  8` .False .True .False )
  448:  		Sub   *Var0  00000014
  458:  		Call  SetGoalPos    ( .Actor:Self *Var0 *Var1 *Var2 )
  474:  		Call  JumpToGoal    ( .Actor:Self  8` .False .True .False )
  494:  		Wait  15`
  4A0:  		Call  UseBattleCamPreset    ( 00000002 )
  4B0:  		Call  MoveBattleCamOver     (  15` )
  4C0:  		Call  SetActorYaw   ( .Actor:Self  180` )
  4D4:  		Call  AddActorDecoration    ( .Actor:Self 00000001 00000000 .Decoration:Sweat )
  4F0:  		Call  SetActorSpeed ( .Actor:Self *Fixed[6.0] )
  504:  		SetConst  *Var0  00000001
  514:  		SetConst  *Var1  003B0004
  524:  		ExecWait  DoReturnHome
  530:  		Call  RemoveActorDecoration ( .Actor:Self 00000001 00000000 )
  548:  		Call  SetActorYaw   ( .Actor:Self  0` )
  55C:  		Call  SetAnimation  ( .Actor:Self 00000001 003B0001 )
  574:  		Call  EnableIdleScript      ( .Actor:Self 00000001 )
  588:  		Call  UseIdleAnimation      ( .Actor:Self .True )
  59C:  		Return
  5A4:  	EndCaseGroup
  5AC:  EndSwitch
  5B4:  Call  SetActorSpeed ( .Actor:Self *Fixed[6.0] )
  5C8:  Call  SetAnimation  ( .Actor:Self 00000001 003B0009 )
  5E0:  Thread
  5E8:  	Wait  9`
  5F4:  	Call  SetAnimation  ( .Actor:Self 00000001 003B000A )
  60C:  EndThread
  614:  Call  SetActorJumpGravity   ( .Actor:Self *Fixed[0.8] )
  628:  Call  SetGoalToTarget   ( .Actor:Self )
  638:  Call  JumpToGoal        ( .Actor:Self  18` .False .True .False )
  658:  Wait  2`
  664:  Call  EnemyDamageTarget ( .Actor:Self *Var0 ~Flags:DamageType:0 00000000 00000000 00000003 00000020 )
  68C:  Switch  *Var0
  698:  	CaseOR  ==  .HitResult:Hit % 0
  6A4:  	CaseOR  ==  .HitResult:QuakeImmune % 2
  6B0:  		Call  UseBattleCamPreset    ( 00000002 )
  6C0:  		Call  MoveBattleCamOver     (  15` )
  6D0:  		Thread
  6D8:  			Call  SetActorRotationOffset    ( .Actor:Self 00000000 0000000E 00000000 )
  6F4:  			Set   *Var3  00000000
  704:  			Loop  00000014
  710:  				Sub   *Var3  0000001E
  720:  				If  *Var3  <  00000000
  730:  					Add   *Var3  00000168
  740:  				EndIf
  748:  				Call  SetActorRotation  ( .Actor:Self 00000000 00000000 *Var3 )
  764:  				Wait  1`
  770:  			EndLoop
  778:  			Call  SetActorRotation  ( .Actor:Self 00000000 00000000 00000000 )
  794:  			Call  SetActorRotationOffset    ( .Actor:Self 00000000 00000000 00000000 )
  7B0:  		EndThread
  7B8:  		Call  GetBattleFlags    ( *Var0 )
  7C8:  		If  *Var0  &  80000000
  7D8:  			Goto  1
  7E4:  		EndIf
  7EC:  		Call  GetLastDamage ( .Actor:Player *Var0 )
  800:  		If  *Var0  ==  00000000
  810:  			Goto  1
  81C:  		EndIf
  824:  		Call  GetGoalPos    ( .Actor:Self *Var0 *Var1 *Var2 )
  840:  		Add   *Var0  00000028
  850:  		Set   *Var1  00000000
  860:  		Call  SetActorJumpGravity   ( .Actor:Self *Fixed[0.8] )
  874:  		Call  SetGoalPos    ( .Actor:Self *Var0 *Var1 *Var2 )
  890:  		Call  JumpToGoal    ( .Actor:Self  20` .False .True .False )
  8B0:  		Call  PlaySoundAtActor      ( .Actor:Self 00000349 )
  8C4:  		Call  PlaySoundAtActor      ( .Actor:Self 00000749 )
  8D8:  		Call  SetAnimation  ( .Actor:Self 00000001 003B0009 )
  8F0:  		Wait  10`
  8FC:  		Call  SetAnimation  ( .Actor:Self 00000001 003B0007 )
  914:  		Wait  15`
  920:  		Goto  2
  92C:  		Label  1
  938:  		Call  GetGoalPos    ( .Actor:Self *Var0 *Var1 *Var2 )
  954:  		Add   *Var0  00000028
  964:  		Set   *Var1  00000000
  974:  		Call  SetActorJumpGravity   ( .Actor:Self *Fixed[0.8] )
  988:  		Call  SetGoalPos    ( .Actor:Self *Var0 *Var1 *Var2 )
  9A4:  		Call  JumpToGoal    ( .Actor:Self  20` .False .True .False )
  9C4:  		Call  PlaySoundAtActor      ( .Actor:Self 000020E4 )
  9D8:  		Call  SetAnimation  ( .Actor:Self 00000001 003B0010 )
  9F0:  		Wait  10`
  9FC:  		Call  PlaySoundAtActor      ( .Actor:Self 000020C3 )
  A10:  		Call  AddActorDecoration    ( .Actor:Self 00000001 00000000 .Decoration:Sweat )
  A2C:  		Call  RandInt       ( 00000064 *Var0 )
  A40:  		If  *Var0  <  00000032
  A50:  			Call  SetAnimation  ( .Actor:Self 00000001 003B0011 )
  A68:  		Else
  A70:  			Call  SetAnimation  ( .Actor:Self 00000001 003B0013 )
  A88:  		EndIf
  A90:  		Wait  25`
  A9C:  		Call  RemoveActorDecoration ( .Actor:Self 00000001 00000000 )
  AB4:  		Call  SetActorYaw   ( .Actor:Self  180` )
  AC8:  		Label  2
  AD4:  		Call  SetActorSpeed ( .Actor:Self *Fixed[6.0] )
  AE8:  		SetConst  *Var0  00000001
  AF8:  		SetConst  *Var1  003B0004
  B08:  		ExecWait  DoReturnHome
  B14:  		Call  SetActorYaw   ( .Actor:Self  0` )
  B28:  		Call  SetAnimation  ( .Actor:Self 00000001 003B0001 )
  B40:  	EndCaseGroup
  B48:  EndSwitch
  B50:  Call  EnableIdleScript  ( .Actor:Self 00000001 )
  B64:  Call  UseIdleAnimation  ( .Actor:Self .True )
  B78:  Return
  B80:  End
}

#new:Script $Script_TakeTurn_8021ACB4
{
    0:  Call  RandInt   ( 00000001 *Var0 )
   14:  If  *Var0  ==  00000000
   24:  	ExecWait  $Script_80219A04
   30:  Else
   38:  	ExecWait  $Script_8021A12C
   44:  EndIf
   4C:  Return
   54:  End
}

#new:DefenseTable $DefenseTable_8021AD10
{
	.Element:Normal 00000000
	.Element:Shock  00000000
	.Element:End
}

#new:StatusTable $StatusTable_8021AD24
{
	.Status:Normal      0`
	.Status:Default     0`
	.Status:Sleep      70`
	.Status:Poison     50`
	.Status:Frozen      0`
	.Status:Dizzy      90`
	.Status:Fear      100`
	.Status:Static     50`
	.Status:Paralyze   90`
	.Status:Shrink     75`
	.Status:Stop       90`
	.Status:DefaultTurnMod    0`
	.Status:SleepTurnMod      0`
	.Status:PoisonTurnMod     0`
	.Status:FrozenTurnMod     0`
	.Status:DizzyTurnMod      0`
	.Status:FearTurnMod       0`
	.Status:StaticTurnMod     0`
	.Status:ParalyzeTurnMod   1`
	.Status:ShrinkTurnMod     0`
	.Status:StopTurnMod       0`
	.Status:End
}

#new:PartsTable $PartsTable_8021ADD0
{
	00800000 01000000 001800FF $IdleAnimations_8021AE1C $DefenseTable_8021AD10 00000000 00000000 FFF60000 00000000
}

#new:Actor $ShyGuy_BLU
{
	% stats
	[Index]        1Fb
	[Level]        14`b
	[MaxHP]         7`b
	[Coins]         1`b
	[Flags]       00000000
	[StatusTable] $StatusTable_8021AD24
	% ai
	[PartsCount]    1`s
	[PartsTable]  $PartsTable_8021ADD0
	[Script]      $Script_Init_8021AE68
	% move effectiveness
	[Escape]       60`b
	[Item]         80`b
	[AirLift]      85`b
	[Hurricane]    80`b % Bow's "Spook" as well
	[UpAndAway]    95`b
	[PowerBounce] 100`b
	[SpinSmash]     0`b % weight (0-4)
	% ui positions
	[Size]         28`b  24`b % width height
	[HealthBar]     0`b   0`b % dx dy
	[StatusTurn]  -10`b  20`b % dx dy
	[StatusIcon]   10`b  20`b % dx dy
}

#new:IdleAnimations $IdleAnimations_8021AE1C
{
	.Status:Normal    003B0101
	.Status:Stone     003B0100
	.Status:Sleep     003B0112
	.Status:Poison    003B0101
	.Status:Stop      003B0100
	.Status:Static    003B0101
	.Status:Paralyze  003B0100
	.Status:Dizzy     003B0113
	.Status:Fear      003B0113
	.Status:End
}

#new:Script $Script_Init_8021AE68
{
    0:  Call  BindTakeTurn      ( .Actor:Self $Script_TakeTurn_8021C7B4 )
   14:  Call  BindIdle  ( .Actor:Self $Script_Idle_8021AEB4 )
   28:  Call  BindHandleEvent   ( .Actor:Self $Script_HandleEvent_8021B028 )
   3C:  Return
   44:  End
}

#new:Script $Script_Idle_8021AEB4
{
    0:  Label  0
    C:  Call  GetStatusFlags    ( .Actor:Self *Var0 )
   20:  If  *Var0  &  ~Flags:StatusFlags:Sleep % 1000
   30:  	Call  SetTargetOffset       ( .Actor:Self 00000001  -4`  14` )
   4C:  	Call  8027D4C8  ( FFFFFF81 00000001 00000000 00000000 )
   68:  	Call  $Function_802180D0    ( FFFFFFF6 0000000D 0000000A 0000000D )
   84:  Else
   8C:  	Call  SetTargetOffset       ( .Actor:Self 00000001  0`  24` )
   A8:  	Call  8027D4C8  ( FFFFFF81 00000001 FFFFFFFF FFFFFFF6 )
   C4:  	Call  $Function_802180D0    ( FFFFFFF6 00000014 0000000A 00000014 )
   E0:  EndIf
   E8:  Wait  1`
   F4:  Goto  0
  100:  Return
  108:  End
}

#new:Script $Script_8021AFC4
{
    0:  Call  ResetAllActorSounds   ( .Actor:Self )
   10:  SetConst  *Var0  00000001
   20:  SetConst  *Var1  003B0103
   30:  ExecWait  DoReturnHome
   3C:  Call  SetAnimation  ( .Actor:Self 00000001 003B0101 )
   54:  Return
   5C:  End
}

#new:Script $Script_HandleEvent_8021B028
{
    0:  Call  UseIdleAnimation  ( .Actor:Self .False )
   14:  Call  GetLastEvent      ( .Actor:Self *Var0 )
   28:  Switch  *Var0
   34:  	CaseOR  ==  .Event:HitCombo % 9
   40:  	CaseOR  ==  .Event:Hit % A
   4C:  		SetConst  *Var0  00000001
   5C:  		SetConst  *Var1  003B010C
   6C:  		ExecWait  DoNormalHit
   78:  	EndCaseGroup
   80:  	Case  ==  .Event:BurnHit % E
   8C:  		SetConst  *Var0  00000001
   9C:  		SetConst  *Var1  003B010D
   AC:  		SetConst  *Var2  003B010E
   BC:  		ExecWait  DoBurnHit
   C8:  	Case  ==  .Event:BurnDeath % 24
   D4:  		SetConst  *Var0  00000001
   E4:  		SetConst  *Var1  003B010D
   F4:  		SetConst  *Var2  003B010E
  104:  		ExecWait  DoBurnHit
  110:  		SetConst  *Var0  00000001
  120:  		SetConst  *Var1  003B010E
  130:  		ExecWait  DoDeath
  13C:  		Return
  144:  	Case  ==  .Event:SpinSmashHit % B
  150:  		SetConst  *Var0  00000001
  160:  		SetConst  *Var1  003B010C
  170:  		ExecWait  DoSpinSmashHit
  17C:  	Case  ==  .Event:SpinSmashDeath % 21
  188:  		SetConst  *Var0  00000001
  198:  		SetConst  *Var1  003B010C
  1A8:  		ExecWait  DoSpinSmashHit
  1B4:  		SetConst  *Var0  00000001
  1C4:  		SetConst  *Var1  003B010C
  1D4:  		ExecWait  DoDeath
  1E0:  		Return
  1E8:  	Case  ==  .Event:ShockHit % 2F
  1F4:  		SetConst  *Var0  00000001
  204:  		SetConst  *Var1  003B010C
  214:  		ExecWait  DoShockHit
  220:  		SetConst  *Var0  00000001
  230:  		SetConst  *Var1  003B010C
  240:  		ExecWait  DoJumpBack
  24C:  		Call  SetActorSpeed ( .Actor:Self *Fixed[4.0] )
  260:  		ExecWait  $Script_8021AFC4
  26C:  	Case  ==  .Event:ShockDeath % 26
  278:  		SetConst  *Var0  00000001
  288:  		SetConst  *Var1  003B010C
  298:  		ExecWait  DoShockHit
  2A4:  		SetConst  *Var0  00000001
  2B4:  		SetConst  *Var1  003B010C
  2C4:  		ExecWait  DoDeath
  2D0:  		Return
  2D8:  	CaseOR  ==  00000017 % 17
  2E4:  	CaseOR  ==  .Event:Immune % 19
  2F0:  	CaseOR  ==  .Event:AirLiftFailed % 1F
  2FC:  		SetConst  *Var0  00000001
  30C:  		SetConst  *Var1  003B0101
  31C:  		ExecWait  DoImmune
  328:  	EndCaseGroup
  330:  	Case  ==  .Event:Death % 20
  33C:  		SetConst  *Var0  00000001
  34C:  		SetConst  *Var1  003B010C
  35C:  		ExecWait  DoNormalHit
  368:  		Wait  10`
  374:  		SetConst  *Var0  00000001
  384:  		SetConst  *Var1  003B010C
  394:  		ExecWait  DoDeath
  3A0:  		Return
  3A8:  	Case  ==  .Event:RecoverStatus % 31
  3B4:  		SetConst  *Var0  00000001
  3C4:  		SetConst  *Var1  003B0101
  3D4:  		ExecWait  DoRecover
  3E0:  	Case  ==  .Event:ScareAway % 39
  3EC:  		SetConst  *Var0  00000001
  3FC:  		SetConst  *Var1  003B0103
  40C:  		SetConst  *Var2  003B0114
  41C:  		ExecWait  DoScareAway
  428:  		Return
  430:  	Case  ==  .Event:BeginAirLift % 3A
  43C:  		SetConst  *Var0  00000001
  44C:  		SetConst  *Var1  003B010C
  45C:  		ExecWait  DoAirLift
  468:  	Case  ==  .Event:BlowAway % 16
  474:  		SetConst  *Var0  00000001
  484:  		SetConst  *Var1  003B010C
  494:  		ExecWait  DoBlowAway
  4A0:  		Return
  4A8:  	Default
  4B0:  EndSwitch
  4B8:  Call  UseIdleAnimation  ( .Actor:Self .True )
  4CC:  Return
  4D4:  End
}

#new:Script $Script_8021B504
{
    0:  Call  UseIdleAnimation  ( .Actor:Self .False )
   14:  Call  EnableIdleScript  ( .Actor:Self 00000000 )
   28:  Call  SetTargetActor    ( .Actor:Self .Actor:Player )
   3C:  Call  UseBattleCamPreset    ( 0000003F )
   4C:  Call  BattleCamTargetActor  ( .Actor:Self )
   5C:  Call  MoveBattleCamOver (  20` )
   6C:  Call  8024ECF8  ( FFFFFFFF 00000001 00000000 )
   84:  Call  SetAnimation      ( .Actor:Self 00000001 003B0103 )
   9C:  Call  SetActorSpeed     ( .Actor:Self *Fixed[4.0] )
   B0:  Call  SetGoalToTarget   ( .Actor:Self )
   C0:  Call  GetGoalPos        ( .Actor:Self *Var0 *Var1 *Var2 )
   DC:  Add   *Var0  00000032
   EC:  Set   *Var1  00000000
   FC:  Call  SetGoalPos        ( .Actor:Self *Var0 *Var1 *Var2 )
  118:  Call  RunToGoal ( .Actor:Self  0` .False )
  130:  Call  EnemyTestTarget   ( .Actor:Self *Var0 ~Flags:DamageType:0 00000000 00000001 00000010 )
  154:  Switch  *Var0
  160:  	CaseOR  ==  .HitResult:Miss % 6
  16C:  	CaseOR  ==  .HitResult:Lucky % 5
  178:  		Set   *VarA  *Var0
  188:  		Call  SetActorSounds    ( .Actor:Self .ActorSound:Jump 000002EF 00000000 )
  1A4:  		Call  SetActorSounds    ( .Actor:Self .ActorSound:Walk 000020BA 000003B4 )
  1C0:  		Call  SetActorSounds    ( .Actor:Self .ActorSound:WalkIncrement 0000000A 00000000 )
  1DC:  		Call  SetActorSpeed ( .Actor:Self *Fixed[6.0] )
  1F0:  		Call  SetAnimation  ( .Actor:Self 00000001 003B0104 )
  208:  		Call  SetGoalToTarget   ( .Actor:Self )
  218:  		Call  RunToGoal     ( .Actor:Self  0` .False )
  230:  		Call  SetAnimation  ( .Actor:Self 00000001 003B0105 )
  248:  		Call  SetActorSpeed ( .Actor:Self *Fixed[6.0] )
  25C:  		Call  SetActorJumpGravity   ( .Actor:Self *Fixed[0.5] )
  270:  		Call  GetActorPos   ( .Actor:Self *Var0 *Var1 *Var2 )
  28C:  		Sub   *Var0  0000001E
  29C:  		Call  SetGoalPos    ( .Actor:Self *Var0 *Var1 *Var2 )
  2B8:  		Call  JumpToGoal    ( .Actor:Self  8` .False .True .False )
  2D8:  		If  *VarA  ==  .HitResult:Lucky % 5
  2E8:  			Call  EnemyTestTarget   ( .Actor:Self *VarA ~Flags:DamageType:TriggerLucky 00000000 00000000 00000000 )
  30C:  		EndIf
  314:  		Call  ResetAllActorSounds   ( .Actor:Self )
  324:  		Sub   *Var0  00000014
  334:  		Call  SetGoalPos        ( .Actor:Self *Var0 *Var1 *Var2 )
  350:  		Call  JumpToGoal        ( .Actor:Self  8` .False .True .False )
  370:  		Wait  15`
  37C:  		Call  UseBattleCamPreset    ( 00000002 )
  38C:  		Call  SetActorYaw       ( .Actor:Self  180` )
  3A0:  		Call  AddActorDecoration    ( .Actor:Self 00000001 00000000 .Decoration:Sweat )
  3BC:  		Call  SetActorSpeed     ( .Actor:Self *Fixed[4.0] )
  3D0:  		SetConst  *Var0  00000001
  3E0:  		SetConst  *Var1  003B0104
  3F0:  		ExecWait  DoReturnHome
  3FC:  		Call  RemoveActorDecoration ( .Actor:Self 00000001 00000000 )
  414:  		Call  SetActorYaw       ( .Actor:Self  0` )
  428:  		Call  SetAnimation      ( .Actor:Self 00000001 003B0101 )
  440:  		Call  EnableIdleScript  ( .Actor:Self 00000001 )
  454:  		Call  UseIdleAnimation  ( .Actor:Self .True )
  468:  		Return
  470:  	EndCaseGroup
  478:  EndSwitch
  480:  Thread
  488:  	Wait  3`
  494:  	Call  PlaySoundAtActor  ( .Actor:Self 000002EF )
  4A8:  EndThread
  4B0:  Call  SetActorSounds    ( .Actor:Self .ActorSound:Walk 000020BA 000003B4 )
  4CC:  Call  SetActorSounds    ( .Actor:Self .ActorSound:WalkIncrement 0000000A 00000000 )
  4E8:  Call  SetActorSpeed     ( .Actor:Self *Fixed[6.0] )
  4FC:  Call  SetAnimation      ( .Actor:Self 00000001 003B0104 )
  514:  Call  SetGoalToTarget   ( .Actor:Self )
  524:  Call  GetGoalPos        ( .Actor:Self *Var0 *Var1 *Var2 )
  540:  Add   *Var0  0000000A
  550:  Set   *Var1  00000000
  560:  Call  SetGoalPos        ( .Actor:Self *Var0 *Var1 *Var2 )
  57C:  Call  RunToGoal ( .Actor:Self  0` .False )
  594:  Call  SetAnimation      ( .Actor:Self 00000001 003B0105 )
  5AC:  Wait  2`
  5B8:  Call  SetGoalToTarget   ( .Actor:Self )
  5C8:  Call  EnemyDamageTarget ( .Actor:Self *Var0 ~Flags:DamageType:0 00000000 00000000 00000002 00000020 )
  5F0:  Call  ResetAllActorSounds   ( .Actor:Self )
  600:  Call  UseBattleCamPreset    ( 00000002 )
  610:  Call  MoveBattleCamOver (  15` )
  620:  Call  GetGoalPos        ( .Actor:Self *Var0 *Var1 *Var2 )
  63C:  Add   *Var0  0000001E
  64C:  Set   *Var1  00000000
  65C:  Call  SetActorJumpGravity   ( .Actor:Self *Fixed[1.8] )
  670:  Call  SetGoalPos        ( .Actor:Self *Var0 *Var1 *Var2 )
  68C:  Call  JumpToGoal        ( .Actor:Self  10` .False .True .False )
  6AC:  Call  SetAnimation      ( .Actor:Self 00000001 003B0101 )
  6C4:  Wait  8`
  6D0:  Call  SetActorSpeed     ( .Actor:Self *Fixed[6.0] )
  6E4:  ExecWait  $Script_8021AFC4
  6F0:  Call  EnableIdleScript  ( .Actor:Self 00000001 )
  704:  Call  UseIdleAnimation  ( .Actor:Self .True )
  718:  Return
  720:  End
}

#new:Script $Script_8021BC2C
{
    0:  Call  UseIdleAnimation  ( .Actor:Self .False )
   14:  Call  EnableIdleScript  ( .Actor:Self 00000000 )
   28:  Call  SetTargetActor    ( .Actor:Self .Actor:Player )
   3C:  Call  UseBattleCamPreset    ( 0000003F )
   4C:  Call  BattleCamTargetActor  ( .Actor:Self )
   5C:  Call  MoveBattleCamOver (  20` )
   6C:  Call  8024ECF8  ( FFFFFFFF 00000001 00000000 )
   84:  Call  PlaySoundAtActor  ( .Actor:Self 00000234 )
   98:  Call  SetAnimation      ( .Actor:Self 00000001 003B0109 )
   B0:  Wait  20`
   BC:  Call  SetAnimation      ( .Actor:Self 00000001 003B0103 )
   D4:  Call  SetActorSpeed     ( .Actor:Self *Fixed[3.0] )
   E8:  Call  SetGoalToTarget   ( .Actor:Self )
   F8:  Call  GetGoalPos        ( .Actor:Self *Var0 *Var1 *Var2 )
  114:  Add   *Var0  00000050
  124:  Set   *Var1  00000000
  134:  Call  SetGoalPos        ( .Actor:Self *Var0 *Var1 *Var2 )
  150:  Call  RunToGoal ( .Actor:Self  0` .False )
  168:  Call  SetActorSounds    ( .Actor:Self .ActorSound:Walk 000020BA 000003B4 )
  184:  Call  SetActorSounds    ( .Actor:Self .ActorSound:WalkIncrement 0000000A 00000000 )
  1A0:  Call  SetAnimation      ( .Actor:Self 00000001 003B0104 )
  1B8:  Call  SetActorSpeed     ( .Actor:Self *Fixed[5.0] )
  1CC:  Sub   *Var0  00000028
  1DC:  Call  SetGoalPos        ( .Actor:Self *Var0 *Var1 *Var2 )
  1F8:  Call  RunToGoal ( .Actor:Self  0` .False )
  210:  Call  EnemyTestTarget   ( .Actor:Self *Var0 ~Flags:DamageType:0 00000000 00000001 00000010 )
  234:  Switch  *Var0
  240:  	CaseOR  ==  .HitResult:Miss % 6
  24C:  	CaseOR  ==  .HitResult:Lucky % 5
  258:  		Set   *VarA  *Var0
  268:  		Call  SetActorSpeed ( .Actor:Self *Fixed[6.0] )
  27C:  		Call  SetAnimation  ( .Actor:Self 00000001 003B0109 )
  294:  		Thread
  29C:  			Wait  12`
  2A8:  			Call  SetAnimation  ( .Actor:Self 00000001 003B010A )
  2C0:  		EndThread
  2C8:  		Call  SetActorJumpGravity   ( .Actor:Self *Fixed[0.8] )
  2DC:  		Call  SetGoalToTarget   ( .Actor:Self )
  2EC:  		Call  GetGoalPos        ( .Actor:Self *Var0 *Var1 *Var2 )
  308:  		Sub   *Var0  0000000A
  318:  		Set   *Var1  00000000
  328:  		Call  SetGoalPos        ( .Actor:Self *Var0 *Var1 *Var2 )
  344:  		Call  JumpToGoal        ( .Actor:Self  24` .False .True .False )
  364:  		If  *VarA  ==  .HitResult:Lucky % 5
  374:  			Call  EnemyTestTarget   ( .Actor:Self *Var0 ~Flags:DamageType:TriggerLucky 00000000 00000000 00000000 )
  398:  		EndIf
  3A0:  		Call  SetAnimation  ( .Actor:Self 00000001 003B0105 )
  3B8:  		Call  SetActorSpeed ( .Actor:Self *Fixed[6.0] )
  3CC:  		Call  SetActorJumpGravity   ( .Actor:Self *Fixed[0.5] )
  3E0:  		Call  GetActorPos   ( .Actor:Self *Var0 *Var1 *Var2 )
  3FC:  		Sub   *Var0  0000001E
  40C:  		Call  SetGoalPos    ( .Actor:Self *Var0 *Var1 *Var2 )
  428:  		Call  JumpToGoal    ( .Actor:Self  8` .False .True .False )
  448:  		Sub   *Var0  00000014
  458:  		Call  SetGoalPos    ( .Actor:Self *Var0 *Var1 *Var2 )
  474:  		Call  JumpToGoal    ( .Actor:Self  8` .False .True .False )
  494:  		Wait  15`
  4A0:  		Call  UseBattleCamPreset    ( 00000002 )
  4B0:  		Call  MoveBattleCamOver     (  15` )
  4C0:  		Call  SetActorYaw   ( .Actor:Self  180` )
  4D4:  		Call  AddActorDecoration    ( .Actor:Self 00000001 00000000 .Decoration:Sweat )
  4F0:  		Call  SetActorSpeed ( .Actor:Self *Fixed[6.0] )
  504:  		SetConst  *Var0  00000001
  514:  		SetConst  *Var1  003B0104
  524:  		ExecWait  DoReturnHome
  530:  		Call  RemoveActorDecoration ( .Actor:Self 00000001 00000000 )
  548:  		Call  SetActorYaw   ( .Actor:Self  0` )
  55C:  		Call  SetAnimation  ( .Actor:Self 00000001 003B0101 )
  574:  		Call  EnableIdleScript      ( .Actor:Self 00000001 )
  588:  		Call  UseIdleAnimation      ( .Actor:Self .True )
  59C:  		Return
  5A4:  	EndCaseGroup
  5AC:  EndSwitch
  5B4:  Call  SetActorSpeed ( .Actor:Self *Fixed[6.0] )
  5C8:  Call  SetAnimation  ( .Actor:Self 00000001 003B0109 )
  5E0:  Thread
  5E8:  	Wait  9`
  5F4:  	Call  SetAnimation  ( .Actor:Self 00000001 003B010A )
  60C:  EndThread
  614:  Call  SetActorJumpGravity   ( .Actor:Self *Fixed[0.8] )
  628:  Call  SetGoalToTarget   ( .Actor:Self )
  638:  Call  JumpToGoal        ( .Actor:Self  18` .False .True .False )
  658:  Wait  2`
  664:  Call  EnemyDamageTarget ( .Actor:Self *Var0 ~Flags:DamageType:0 00000000 00000000 00000003 00000020 )
  68C:  Switch  *Var0
  698:  	CaseOR  ==  .HitResult:Hit % 0
  6A4:  	CaseOR  ==  .HitResult:QuakeImmune % 2
  6B0:  		Call  UseBattleCamPreset    ( 00000002 )
  6C0:  		Call  MoveBattleCamOver     (  15` )
  6D0:  		Thread
  6D8:  			Call  SetActorRotationOffset    ( .Actor:Self 00000000 0000000E 00000000 )
  6F4:  			Set   *Var3  00000000
  704:  			Loop  00000014
  710:  				Sub   *Var3  0000001E
  720:  				If  *Var3  <  00000000
  730:  					Add   *Var3  00000168
  740:  				EndIf
  748:  				Call  SetActorRotation  ( .Actor:Self 00000000 00000000 *Var3 )
  764:  				Wait  1`
  770:  			EndLoop
  778:  			Call  SetActorRotation  ( .Actor:Self 00000000 00000000 00000000 )
  794:  			Call  SetActorRotationOffset    ( .Actor:Self 00000000 00000000 00000000 )
  7B0:  		EndThread
  7B8:  		Call  GetBattleFlags    ( *Var0 )
  7C8:  		If  *Var0  &  80000000
  7D8:  			Goto  1
  7E4:  		EndIf
  7EC:  		Call  GetLastDamage ( .Actor:Player *Var0 )
  800:  		If  *Var0  ==  00000000
  810:  			Goto  1
  81C:  		EndIf
  824:  		Call  GetGoalPos    ( .Actor:Self *Var0 *Var1 *Var2 )
  840:  		Add   *Var0  00000028
  850:  		Set   *Var1  00000000
  860:  		Call  SetActorJumpGravity   ( .Actor:Self *Fixed[0.8] )
  874:  		Call  SetGoalPos    ( .Actor:Self *Var0 *Var1 *Var2 )
  890:  		Call  JumpToGoal    ( .Actor:Self  20` .False .True .False )
  8B0:  		Call  PlaySoundAtActor      ( .Actor:Self 00000349 )
  8C4:  		Call  PlaySoundAtActor      ( .Actor:Self 00000749 )
  8D8:  		Call  SetAnimation  ( .Actor:Self 00000001 003B0109 )
  8F0:  		Wait  10`
  8FC:  		Call  SetAnimation  ( .Actor:Self 00000001 003B0107 )
  914:  		Wait  15`
  920:  		Goto  2
  92C:  		Label  1
  938:  		Call  GetGoalPos    ( .Actor:Self *Var0 *Var1 *Var2 )
  954:  		Add   *Var0  00000028
  964:  		Set   *Var1  00000000
  974:  		Call  SetActorJumpGravity   ( .Actor:Self *Fixed[0.8] )
  988:  		Call  SetGoalPos    ( .Actor:Self *Var0 *Var1 *Var2 )
  9A4:  		Call  JumpToGoal    ( .Actor:Self  20` .False .True .False )
  9C4:  		Call  PlaySoundAtActor      ( .Actor:Self 000020E4 )
  9D8:  		Call  SetAnimation  ( .Actor:Self 00000001 003B0110 )
  9F0:  		Wait  10`
  9FC:  		Call  PlaySoundAtActor      ( .Actor:Self 000020C3 )
  A10:  		Call  AddActorDecoration    ( .Actor:Self 00000001 00000000 .Decoration:Sweat )
  A2C:  		Call  RandInt       ( 00000064 *Var0 )
  A40:  		If  *Var0  <  00000032
  A50:  			Call  SetAnimation  ( .Actor:Self 00000001 003B0111 )
  A68:  		Else
  A70:  			Call  SetAnimation  ( .Actor:Self 00000001 003B0113 )
  A88:  		EndIf
  A90:  		Wait  25`
  A9C:  		Call  RemoveActorDecoration ( .Actor:Self 00000001 00000000 )
  AB4:  		Call  SetActorYaw   ( .Actor:Self  180` )
  AC8:  		Label  2
  AD4:  		Call  SetActorSpeed ( .Actor:Self *Fixed[6.0] )
  AE8:  		SetConst  *Var0  00000001
  AF8:  		SetConst  *Var1  003B0104
  B08:  		ExecWait  DoReturnHome
  B14:  		Call  SetActorYaw   ( .Actor:Self  0` )
  B28:  		Call  SetAnimation  ( .Actor:Self 00000001 003B0101 )
  B40:  	EndCaseGroup
  B48:  EndSwitch
  B50:  Call  EnableIdleScript  ( .Actor:Self 00000001 )
  B64:  Call  UseIdleAnimation  ( .Actor:Self .True )
  B78:  Return
  B80:  End
}

#new:Script $Script_TakeTurn_8021C7B4
{
    0:  Call  RandInt   ( 00000001 *Var0 )
   14:  If  *Var0  ==  00000000
   24:  	ExecWait  $Script_8021B504
   30:  Else
   38:  	ExecWait  $Script_8021BC2C
   44:  EndIf
   4C:  Return
   54:  End
}

#new:DefenseTable $DefenseTable_8021C810
{
	.Element:Normal 00000000
	.Element:Shock  00000000
	.Element:End
}

#new:StatusTable $StatusTable_8021C824
{
	.Status:Normal      0`
	.Status:Default     0`
	.Status:Sleep      70`
	.Status:Poison     50`
	.Status:Frozen      0`
	.Status:Dizzy      90`
	.Status:Fear      100`
	.Status:Static     50`
	.Status:Paralyze   90`
	.Status:Shrink     75`
	.Status:Stop       90`
	.Status:DefaultTurnMod    0`
	.Status:SleepTurnMod      0`
	.Status:PoisonTurnMod     0`
	.Status:FrozenTurnMod     0`
	.Status:DizzyTurnMod      0`
	.Status:FearTurnMod       0`
	.Status:StaticTurnMod     0`
	.Status:ParalyzeTurnMod   1`
	.Status:ShrinkTurnMod     0`
	.Status:StopTurnMod       0`
	.Status:End
}

#new:PartsTable $PartsTable_8021C8D0
{
	00800000 01000000 001800FF $IdleAnimations_8021C91C $DefenseTable_8021C810 00000000 00000000 FFF60000 00000000
}

#new:Actor $ShyGuy_YLW
{
	% stats
	[Index]        1Fb
	[Level]        14`b
	[MaxHP]         7`b
	[Coins]         1`b
	[Flags]       00000000
	[StatusTable] $StatusTable_8021C824
	% ai
	[PartsCount]    1`s
	[PartsTable]  $PartsTable_8021C8D0
	[Script]      $Script_Init_8021C968
	% move effectiveness
	[Escape]       60`b
	[Item]         80`b
	[AirLift]      85`b
	[Hurricane]    80`b % Bow's "Spook" as well
	[UpAndAway]    95`b
	[PowerBounce] 100`b
	[SpinSmash]     0`b % weight (0-4)
	% ui positions
	[Size]         28`b  24`b % width height
	[HealthBar]     0`b   0`b % dx dy
	[StatusTurn]  -10`b  20`b % dx dy
	[StatusIcon]   10`b  20`b % dx dy
}

#new:IdleAnimations $IdleAnimations_8021C91C
{
	.Status:Normal    003B0401
	.Status:Stone     003B0400
	.Status:Sleep     003B0412
	.Status:Poison    003B0401
	.Status:Stop      003B0400
	.Status:Static    003B0401
	.Status:Paralyze  003B0400
	.Status:Dizzy     003B0413
	.Status:Fear      003B0413
	.Status:End
}

#new:Script $Script_Init_8021C968
{
    0:  Call  BindTakeTurn      ( .Actor:Self $Script_TakeTurn_8021E2B4 )
   14:  Call  BindIdle  ( .Actor:Self $Script_Idle_8021C9B4 )
   28:  Call  BindHandleEvent   ( .Actor:Self $Script_HandleEvent_8021CB28 )
   3C:  Return
   44:  End
}

#new:Script $Script_Idle_8021C9B4
{
    0:  Label  0
    C:  Call  GetStatusFlags    ( .Actor:Self *Var0 )
   20:  If  *Var0  &  ~Flags:StatusFlags:Sleep % 1000
   30:  	Call  SetTargetOffset       ( .Actor:Self 00000001  -4`  14` )
   4C:  	Call  8027D4C8  ( FFFFFF81 00000001 00000000 00000000 )
   68:  	Call  $Function_802181A0    ( FFFFFFF6 0000000D 0000000A 0000000D )
   84:  Else
   8C:  	Call  SetTargetOffset       ( .Actor:Self 00000001  0`  24` )
   A8:  	Call  8027D4C8  ( FFFFFF81 00000001 FFFFFFFF FFFFFFF6 )
   C4:  	Call  $Function_802181A0    ( FFFFFFF6 00000014 0000000A 00000014 )
   E0:  EndIf
   E8:  Wait  1`
   F4:  Goto  0
  100:  Return
  108:  End
}

#new:Script $Script_8021CAC4
{
    0:  Call  ResetAllActorSounds   ( .Actor:Self )
   10:  SetConst  *Var0  00000001
   20:  SetConst  *Var1  003B0403
   30:  ExecWait  DoReturnHome
   3C:  Call  SetAnimation  ( .Actor:Self 00000001 003B0401 )
   54:  Return
   5C:  End
}

#new:Script $Script_HandleEvent_8021CB28
{
    0:  Call  UseIdleAnimation  ( .Actor:Self .False )
   14:  Call  GetLastEvent      ( .Actor:Self *Var0 )
   28:  Switch  *Var0
   34:  	CaseOR  ==  .Event:HitCombo % 9
   40:  	CaseOR  ==  .Event:Hit % A
   4C:  		SetConst  *Var0  00000001
   5C:  		SetConst  *Var1  003B040C
   6C:  		ExecWait  DoNormalHit
   78:  	EndCaseGroup
   80:  	Case  ==  .Event:BurnHit % E
   8C:  		SetConst  *Var0  00000001
   9C:  		SetConst  *Var1  003B040D
   AC:  		SetConst  *Var2  003B040E
   BC:  		ExecWait  DoBurnHit
   C8:  	Case  ==  .Event:BurnDeath % 24
   D4:  		SetConst  *Var0  00000001
   E4:  		SetConst  *Var1  003B040D
   F4:  		SetConst  *Var2  003B040E
  104:  		ExecWait  DoBurnHit
  110:  		SetConst  *Var0  00000001
  120:  		SetConst  *Var1  003B040E
  130:  		ExecWait  DoDeath
  13C:  		Return
  144:  	Case  ==  .Event:SpinSmashHit % B
  150:  		SetConst  *Var0  00000001
  160:  		SetConst  *Var1  003B040C
  170:  		ExecWait  DoSpinSmashHit
  17C:  	Case  ==  .Event:SpinSmashDeath % 21
  188:  		SetConst  *Var0  00000001
  198:  		SetConst  *Var1  003B040C
  1A8:  		ExecWait  DoSpinSmashHit
  1B4:  		SetConst  *Var0  00000001
  1C4:  		SetConst  *Var1  003B040C
  1D4:  		ExecWait  DoDeath
  1E0:  		Return
  1E8:  	Case  ==  .Event:ShockHit % 2F
  1F4:  		SetConst  *Var0  00000001
  204:  		SetConst  *Var1  003B040C
  214:  		ExecWait  DoShockHit
  220:  		SetConst  *Var0  00000001
  230:  		SetConst  *Var1  003B040C
  240:  		ExecWait  DoJumpBack
  24C:  		Call  SetActorSpeed ( .Actor:Self *Fixed[4.0] )
  260:  		ExecWait  $Script_8021CAC4
  26C:  	Case  ==  .Event:ShockDeath % 26
  278:  		SetConst  *Var0  00000001
  288:  		SetConst  *Var1  003B040C
  298:  		ExecWait  DoShockHit
  2A4:  		SetConst  *Var0  00000001
  2B4:  		SetConst  *Var1  003B040C
  2C4:  		ExecWait  DoDeath
  2D0:  		Return
  2D8:  	CaseOR  ==  00000017 % 17
  2E4:  	CaseOR  ==  .Event:Immune % 19
  2F0:  	CaseOR  ==  .Event:AirLiftFailed % 1F
  2FC:  		SetConst  *Var0  00000001
  30C:  		SetConst  *Var1  003B0401
  31C:  		ExecWait  DoImmune
  328:  	EndCaseGroup
  330:  	Case  ==  .Event:Death % 20
  33C:  		SetConst  *Var0  00000001
  34C:  		SetConst  *Var1  003B040C
  35C:  		ExecWait  DoNormalHit
  368:  		Wait  10`
  374:  		SetConst  *Var0  00000001
  384:  		SetConst  *Var1  003B040C
  394:  		ExecWait  DoDeath
  3A0:  		Return
  3A8:  	Case  ==  .Event:RecoverStatus % 31
  3B4:  		SetConst  *Var0  00000001
  3C4:  		SetConst  *Var1  003B0401
  3D4:  		ExecWait  DoRecover
  3E0:  	Case  ==  .Event:ScareAway % 39
  3EC:  		SetConst  *Var0  00000001
  3FC:  		SetConst  *Var1  003B0403
  40C:  		SetConst  *Var2  003B0414
  41C:  		ExecWait  DoScareAway
  428:  		Return
  430:  	Case  ==  .Event:BeginAirLift % 3A
  43C:  		SetConst  *Var0  00000001
  44C:  		SetConst  *Var1  003B040C
  45C:  		ExecWait  DoAirLift
  468:  	Case  ==  .Event:BlowAway % 16
  474:  		SetConst  *Var0  00000001
  484:  		SetConst  *Var1  003B040C
  494:  		ExecWait  DoBlowAway
  4A0:  		Return
  4A8:  	Default
  4B0:  EndSwitch
  4B8:  Call  UseIdleAnimation  ( .Actor:Self .True )
  4CC:  Return
  4D4:  End
}

#new:Script $Script_8021D004
{
    0:  Call  UseIdleAnimation  ( .Actor:Self .False )
   14:  Call  EnableIdleScript  ( .Actor:Self 00000000 )
   28:  Call  SetTargetActor    ( .Actor:Self .Actor:Player )
   3C:  Call  UseBattleCamPreset    ( 0000003F )
   4C:  Call  BattleCamTargetActor  ( .Actor:Self )
   5C:  Call  MoveBattleCamOver (  20` )
   6C:  Call  8024ECF8  ( FFFFFFFF 00000001 00000000 )
   84:  Call  SetAnimation      ( .Actor:Self 00000001 003B0403 )
   9C:  Call  SetActorSpeed     ( .Actor:Self *Fixed[4.0] )
   B0:  Call  SetGoalToTarget   ( .Actor:Self )
   C0:  Call  GetGoalPos        ( .Actor:Self *Var0 *Var1 *Var2 )
   DC:  Add   *Var0  00000032
   EC:  Set   *Var1  00000000
   FC:  Call  SetGoalPos        ( .Actor:Self *Var0 *Var1 *Var2 )
  118:  Call  RunToGoal ( .Actor:Self  0` .False )
  130:  Call  EnemyTestTarget   ( .Actor:Self *Var0 ~Flags:DamageType:0 00000000 00000001 00000010 )
  154:  Switch  *Var0
  160:  	CaseOR  ==  .HitResult:Miss % 6
  16C:  	CaseOR  ==  .HitResult:Lucky % 5
  178:  		Set   *VarA  *Var0
  188:  		Call  SetActorSounds    ( .Actor:Self .ActorSound:Jump 000002EF 00000000 )
  1A4:  		Call  SetActorSounds    ( .Actor:Self .ActorSound:Walk 000020BA 000003B4 )
  1C0:  		Call  SetActorSounds    ( .Actor:Self .ActorSound:WalkIncrement 0000000A 00000000 )
  1DC:  		Call  SetActorSpeed ( .Actor:Self *Fixed[6.0] )
  1F0:  		Call  SetAnimation  ( .Actor:Self 00000001 003B0404 )
  208:  		Call  SetGoalToTarget   ( .Actor:Self )
  218:  		Call  RunToGoal     ( .Actor:Self  0` .False )
  230:  		Call  SetAnimation  ( .Actor:Self 00000001 003B0405 )
  248:  		Call  SetActorSpeed ( .Actor:Self *Fixed[6.0] )
  25C:  		Call  SetActorJumpGravity   ( .Actor:Self *Fixed[0.5] )
  270:  		Call  GetActorPos   ( .Actor:Self *Var0 *Var1 *Var2 )
  28C:  		Sub   *Var0  0000001E
  29C:  		Call  SetGoalPos    ( .Actor:Self *Var0 *Var1 *Var2 )
  2B8:  		Call  JumpToGoal    ( .Actor:Self  8` .False .True .False )
  2D8:  		If  *VarA  ==  .HitResult:Lucky % 5
  2E8:  			Call  EnemyTestTarget   ( .Actor:Self *VarA ~Flags:DamageType:TriggerLucky 00000000 00000000 00000000 )
  30C:  		EndIf
  314:  		Call  ResetAllActorSounds   ( .Actor:Self )
  324:  		Sub   *Var0  00000014
  334:  		Call  SetGoalPos        ( .Actor:Self *Var0 *Var1 *Var2 )
  350:  		Call  JumpToGoal        ( .Actor:Self  8` .False .True .False )
  370:  		Wait  15`
  37C:  		Call  UseBattleCamPreset    ( 00000002 )
  38C:  		Call  SetActorYaw       ( .Actor:Self  180` )
  3A0:  		Call  AddActorDecoration    ( .Actor:Self 00000001 00000000 .Decoration:Sweat )
  3BC:  		Call  SetActorSpeed     ( .Actor:Self *Fixed[4.0] )
  3D0:  		SetConst  *Var0  00000001
  3E0:  		SetConst  *Var1  003B0404
  3F0:  		ExecWait  DoReturnHome
  3FC:  		Call  RemoveActorDecoration ( .Actor:Self 00000001 00000000 )
  414:  		Call  SetActorYaw       ( .Actor:Self  0` )
  428:  		Call  SetAnimation      ( .Actor:Self 00000001 003B0401 )
  440:  		Call  EnableIdleScript  ( .Actor:Self 00000001 )
  454:  		Call  UseIdleAnimation  ( .Actor:Self .True )
  468:  		Return
  470:  	EndCaseGroup
  478:  EndSwitch
  480:  Thread
  488:  	Wait  3`
  494:  	Call  PlaySoundAtActor  ( .Actor:Self 000002EF )
  4A8:  EndThread
  4B0:  Call  SetActorSounds    ( .Actor:Self .ActorSound:Walk 000020BA 000003B4 )
  4CC:  Call  SetActorSounds    ( .Actor:Self .ActorSound:WalkIncrement 0000000A 00000000 )
  4E8:  Call  SetActorSpeed     ( .Actor:Self *Fixed[6.0] )
  4FC:  Call  SetAnimation      ( .Actor:Self 00000001 003B0404 )
  514:  Call  SetGoalToTarget   ( .Actor:Self )
  524:  Call  GetGoalPos        ( .Actor:Self *Var0 *Var1 *Var2 )
  540:  Add   *Var0  0000000A
  550:  Set   *Var1  00000000
  560:  Call  SetGoalPos        ( .Actor:Self *Var0 *Var1 *Var2 )
  57C:  Call  RunToGoal ( .Actor:Self  0` .False )
  594:  Call  SetAnimation      ( .Actor:Self 00000001 003B0405 )
  5AC:  Wait  2`
  5B8:  Call  SetGoalToTarget   ( .Actor:Self )
  5C8:  Call  EnemyDamageTarget ( .Actor:Self *Var0 ~Flags:DamageType:0 00000000 00000000 00000002 00000020 )
  5F0:  Call  ResetAllActorSounds   ( .Actor:Self )
  600:  Call  UseBattleCamPreset    ( 00000002 )
  610:  Call  MoveBattleCamOver (  15` )
  620:  Call  GetGoalPos        ( .Actor:Self *Var0 *Var1 *Var2 )
  63C:  Add   *Var0  0000001E
  64C:  Set   *Var1  00000000
  65C:  Call  SetActorJumpGravity   ( .Actor:Self *Fixed[1.8] )
  670:  Call  SetGoalPos        ( .Actor:Self *Var0 *Var1 *Var2 )
  68C:  Call  JumpToGoal        ( .Actor:Self  10` .False .True .False )
  6AC:  Call  SetAnimation      ( .Actor:Self 00000001 003B0401 )
  6C4:  Wait  8`
  6D0:  Call  SetActorSpeed     ( .Actor:Self *Fixed[6.0] )
  6E4:  ExecWait  $Script_8021CAC4
  6F0:  Call  EnableIdleScript  ( .Actor:Self 00000001 )
  704:  Call  UseIdleAnimation  ( .Actor:Self .True )
  718:  Return
  720:  End
}

#new:Script $Script_8021D72C
{
    0:  Call  UseIdleAnimation  ( .Actor:Self .False )
   14:  Call  EnableIdleScript  ( .Actor:Self 00000000 )
   28:  Call  SetTargetActor    ( .Actor:Self .Actor:Player )
   3C:  Call  UseBattleCamPreset    ( 0000003F )
   4C:  Call  BattleCamTargetActor  ( .Actor:Self )
   5C:  Call  MoveBattleCamOver (  20` )
   6C:  Call  8024ECF8  ( FFFFFFFF 00000001 00000000 )
   84:  Call  PlaySoundAtActor  ( .Actor:Self 00000234 )
   98:  Call  SetAnimation      ( .Actor:Self 00000001 003B0409 )
   B0:  Wait  20`
   BC:  Call  SetAnimation      ( .Actor:Self 00000001 003B0403 )
   D4:  Call  SetActorSpeed     ( .Actor:Self *Fixed[3.0] )
   E8:  Call  SetGoalToTarget   ( .Actor:Self )
   F8:  Call  GetGoalPos        ( .Actor:Self *Var0 *Var1 *Var2 )
  114:  Add   *Var0  00000050
  124:  Set   *Var1  00000000
  134:  Call  SetGoalPos        ( .Actor:Self *Var0 *Var1 *Var2 )
  150:  Call  RunToGoal ( .Actor:Self  0` .False )
  168:  Call  SetActorSounds    ( .Actor:Self .ActorSound:Walk 000020BA 000003B4 )
  184:  Call  SetActorSounds    ( .Actor:Self .ActorSound:WalkIncrement 0000000A 00000000 )
  1A0:  Call  SetAnimation      ( .Actor:Self 00000001 003B0404 )
  1B8:  Call  SetActorSpeed     ( .Actor:Self *Fixed[5.0] )
  1CC:  Sub   *Var0  00000028
  1DC:  Call  SetGoalPos        ( .Actor:Self *Var0 *Var1 *Var2 )
  1F8:  Call  RunToGoal ( .Actor:Self  0` .False )
  210:  Call  EnemyTestTarget   ( .Actor:Self *Var0 ~Flags:DamageType:0 00000000 00000001 00000010 )
  234:  Switch  *Var0
  240:  	CaseOR  ==  .HitResult:Miss % 6
  24C:  	CaseOR  ==  .HitResult:Lucky % 5
  258:  		Set   *VarA  *Var0
  268:  		Call  SetActorSpeed ( .Actor:Self *Fixed[6.0] )
  27C:  		Call  SetAnimation  ( .Actor:Self 00000001 003B0409 )
  294:  		Thread
  29C:  			Wait  12`
  2A8:  			Call  SetAnimation  ( .Actor:Self 00000001 003B040A )
  2C0:  		EndThread
  2C8:  		Call  SetActorJumpGravity   ( .Actor:Self *Fixed[0.8] )
  2DC:  		Call  SetGoalToTarget   ( .Actor:Self )
  2EC:  		Call  GetGoalPos        ( .Actor:Self *Var0 *Var1 *Var2 )
  308:  		Sub   *Var0  0000000A
  318:  		Set   *Var1  00000000
  328:  		Call  SetGoalPos        ( .Actor:Self *Var0 *Var1 *Var2 )
  344:  		Call  JumpToGoal        ( .Actor:Self  24` .False .True .False )
  364:  		If  *VarA  ==  .HitResult:Lucky % 5
  374:  			Call  EnemyTestTarget   ( .Actor:Self *Var0 ~Flags:DamageType:TriggerLucky 00000000 00000000 00000000 )
  398:  		EndIf
  3A0:  		Call  SetAnimation  ( .Actor:Self 00000001 003B0405 )
  3B8:  		Call  SetActorSpeed ( .Actor:Self *Fixed[6.0] )
  3CC:  		Call  SetActorJumpGravity   ( .Actor:Self *Fixed[0.5] )
  3E0:  		Call  GetActorPos   ( .Actor:Self *Var0 *Var1 *Var2 )
  3FC:  		Sub   *Var0  0000001E
  40C:  		Call  SetGoalPos    ( .Actor:Self *Var0 *Var1 *Var2 )
  428:  		Call  JumpToGoal    ( .Actor:Self  8` .False .True .False )
  448:  		Sub   *Var0  00000014
  458:  		Call  SetGoalPos    ( .Actor:Self *Var0 *Var1 *Var2 )
  474:  		Call  JumpToGoal    ( .Actor:Self  8` .False .True .False )
  494:  		Wait  15`
  4A0:  		Call  UseBattleCamPreset    ( 00000002 )
  4B0:  		Call  MoveBattleCamOver     (  15` )
  4C0:  		Call  SetActorYaw   ( .Actor:Self  180` )
  4D4:  		Call  AddActorDecoration    ( .Actor:Self 00000001 00000000 .Decoration:Sweat )
  4F0:  		Call  SetActorSpeed ( .Actor:Self *Fixed[6.0] )
  504:  		SetConst  *Var0  00000001
  514:  		SetConst  *Var1  003B0404
  524:  		ExecWait  DoReturnHome
  530:  		Call  RemoveActorDecoration ( .Actor:Self 00000001 00000000 )
  548:  		Call  SetActorYaw   ( .Actor:Self  0` )
  55C:  		Call  SetAnimation  ( .Actor:Self 00000001 003B0401 )
  574:  		Call  EnableIdleScript      ( .Actor:Self 00000001 )
  588:  		Call  UseIdleAnimation      ( .Actor:Self .True )
  59C:  		Return
  5A4:  	EndCaseGroup
  5AC:  EndSwitch
  5B4:  Call  SetActorSpeed ( .Actor:Self *Fixed[6.0] )
  5C8:  Call  SetAnimation  ( .Actor:Self 00000001 003B0409 )
  5E0:  Thread
  5E8:  	Wait  9`
  5F4:  	Call  SetAnimation  ( .Actor:Self 00000001 003B040A )
  60C:  EndThread
  614:  Call  SetActorJumpGravity   ( .Actor:Self *Fixed[0.8] )
  628:  Call  SetGoalToTarget   ( .Actor:Self )
  638:  Call  JumpToGoal        ( .Actor:Self  18` .False .True .False )
  658:  Wait  2`
  664:  Call  EnemyDamageTarget ( .Actor:Self *Var0 ~Flags:DamageType:0 00000000 00000000 00000003 00000020 )
  68C:  Switch  *Var0
  698:  	CaseOR  ==  .HitResult:Hit % 0
  6A4:  	CaseOR  ==  .HitResult:QuakeImmune % 2
  6B0:  		Call  UseBattleCamPreset    ( 00000002 )
  6C0:  		Call  MoveBattleCamOver     (  15` )
  6D0:  		Thread
  6D8:  			Call  SetActorRotationOffset    ( .Actor:Self 00000000 0000000E 00000000 )
  6F4:  			Set   *Var3  00000000
  704:  			Loop  00000014
  710:  				Sub   *Var3  0000001E
  720:  				If  *Var3  <  00000000
  730:  					Add   *Var3  00000168
  740:  				EndIf
  748:  				Call  SetActorRotation  ( .Actor:Self 00000000 00000000 *Var3 )
  764:  				Wait  1`
  770:  			EndLoop
  778:  			Call  SetActorRotation  ( .Actor:Self 00000000 00000000 00000000 )
  794:  			Call  SetActorRotationOffset    ( .Actor:Self 00000000 00000000 00000000 )
  7B0:  		EndThread
  7B8:  		Call  GetBattleFlags    ( *Var0 )
  7C8:  		If  *Var0  &  80000000
  7D8:  			Goto  1
  7E4:  		EndIf
  7EC:  		Call  GetLastDamage ( .Actor:Player *Var0 )
  800:  		If  *Var0  ==  00000000
  810:  			Goto  1
  81C:  		EndIf
  824:  		Call  GetGoalPos    ( .Actor:Self *Var0 *Var1 *Var2 )
  840:  		Add   *Var0  00000028
  850:  		Set   *Var1  00000000
  860:  		Call  SetActorJumpGravity   ( .Actor:Self *Fixed[0.8] )
  874:  		Call  SetGoalPos    ( .Actor:Self *Var0 *Var1 *Var2 )
  890:  		Call  JumpToGoal    ( .Actor:Self  20` .False .True .False )
  8B0:  		Call  PlaySoundAtActor      ( .Actor:Self 00000349 )
  8C4:  		Call  PlaySoundAtActor      ( .Actor:Self 00000749 )
  8D8:  		Call  SetAnimation  ( .Actor:Self 00000001 003B0409 )
  8F0:  		Wait  10`
  8FC:  		Call  SetAnimation  ( .Actor:Self 00000001 003B0407 )
  914:  		Wait  15`
  920:  		Goto  2
  92C:  		Label  1
  938:  		Call  GetGoalPos    ( .Actor:Self *Var0 *Var1 *Var2 )
  954:  		Add   *Var0  00000028
  964:  		Set   *Var1  00000000
  974:  		Call  SetActorJumpGravity   ( .Actor:Self *Fixed[0.8] )
  988:  		Call  SetGoalPos    ( .Actor:Self *Var0 *Var1 *Var2 )
  9A4:  		Call  JumpToGoal    ( .Actor:Self  20` .False .True .False )
  9C4:  		Call  PlaySoundAtActor      ( .Actor:Self 000020E4 )
  9D8:  		Call  SetAnimation  ( .Actor:Self 00000001 003B0410 )
  9F0:  		Wait  10`
  9FC:  		Call  PlaySoundAtActor      ( .Actor:Self 000020C3 )
  A10:  		Call  AddActorDecoration    ( .Actor:Self 00000001 00000000 .Decoration:Sweat )
  A2C:  		Call  RandInt       ( 00000064 *Var0 )
  A40:  		If  *Var0  <  00000032
  A50:  			Call  SetAnimation  ( .Actor:Self 00000001 003B0411 )
  A68:  		Else
  A70:  			Call  SetAnimation  ( .Actor:Self 00000001 003B0413 )
  A88:  		EndIf
  A90:  		Wait  25`
  A9C:  		Call  RemoveActorDecoration ( .Actor:Self 00000001 00000000 )
  AB4:  		Call  SetActorYaw   ( .Actor:Self  180` )
  AC8:  		Label  2
  AD4:  		Call  SetActorSpeed ( .Actor:Self *Fixed[6.0] )
  AE8:  		SetConst  *Var0  00000001
  AF8:  		SetConst  *Var1  003B0404
  B08:  		ExecWait  DoReturnHome
  B14:  		Call  SetActorYaw   ( .Actor:Self  0` )
  B28:  		Call  SetAnimation  ( .Actor:Self 00000001 003B0401 )
  B40:  	EndCaseGroup
  B48:  EndSwitch
  B50:  Call  EnableIdleScript  ( .Actor:Self 00000001 )
  B64:  Call  UseIdleAnimation  ( .Actor:Self .True )
  B78:  Return
  B80:  End
}

#new:Script $Script_TakeTurn_8021E2B4
{
    0:  Call  RandInt   ( 00000001 *Var0 )
   14:  If  *Var0  ==  00000000
   24:  	ExecWait  $Script_8021D004
   30:  Else
   38:  	ExecWait  $Script_8021D72C
   44:  EndIf
   4C:  Return
   54:  End
}

#new:DefenseTable $DefenseTable_8021E310
{
	.Element:Normal 00000000
	.Element:Shock  00000000
	.Element:End
}

#new:StatusTable $StatusTable_8021E324
{
	.Status:Normal      0`
	.Status:Default     0`
	.Status:Sleep      70`
	.Status:Poison     50`
	.Status:Frozen      0`
	.Status:Dizzy      90`
	.Status:Fear      100`
	.Status:Static     50`
	.Status:Paralyze   90`
	.Status:Shrink     75`
	.Status:Stop       90`
	.Status:DefaultTurnMod    0`
	.Status:SleepTurnMod      0`
	.Status:PoisonTurnMod     0`
	.Status:FrozenTurnMod     0`
	.Status:DizzyTurnMod      0`
	.Status:FearTurnMod       0`
	.Status:StaticTurnMod     0`
	.Status:ParalyzeTurnMod   1`
	.Status:ShrinkTurnMod     0`
	.Status:StopTurnMod       0`
	.Status:End
}

#new:PartsTable $PartsTable_8021E3D0
{
	00800000 01000000 001800FF $IdleAnimations_8021E41C $DefenseTable_8021E310 00000000 00000000 FFF60000 00000000
}

#new:Actor $ShyGuy_PNK
{
	% stats
	[Index]        1Fb
	[Level]        14`b
	[MaxHP]         7`b
	[Coins]         1`b
	[Flags]       00000000
	[StatusTable] $StatusTable_8021E324
	% ai
	[PartsCount]    1`s
	[PartsTable]  $PartsTable_8021E3D0
	[Script]      $Script_Init_8021E468
	% move effectiveness
	[Escape]       60`b
	[Item]         80`b
	[AirLift]      85`b
	[Hurricane]    80`b % Bow's "Spook" as well
	[UpAndAway]    95`b
	[PowerBounce] 100`b
	[SpinSmash]     0`b % weight (0-4)
	% ui positions
	[Size]         28`b  24`b % width height
	[HealthBar]     0`b   0`b % dx dy
	[StatusTurn]  -10`b  20`b % dx dy
	[StatusIcon]   10`b  20`b % dx dy
}

#new:IdleAnimations $IdleAnimations_8021E41C
{
	.Status:Normal    003B0301
	.Status:Stone     003B0300
	.Status:Sleep     003B0312
	.Status:Poison    003B0301
	.Status:Stop      003B0300
	.Status:Static    003B0301
	.Status:Paralyze  003B0300
	.Status:Dizzy     003B0313
	.Status:Fear      003B0313
	.Status:End
}

#new:Script $Script_Init_8021E468
{
    0:  Call  BindTakeTurn      ( .Actor:Self $Script_TakeTurn_8021FDB4 )
   14:  Call  BindIdle  ( .Actor:Self $Script_Idle_8021E4B4 )
   28:  Call  BindHandleEvent   ( .Actor:Self $Script_HandleEvent_8021E628 )
   3C:  Return
   44:  End
}

#new:Script $Script_Idle_8021E4B4
{
    0:  Label  0
    C:  Call  GetStatusFlags    ( .Actor:Self *Var0 )
   20:  If  *Var0  &  ~Flags:StatusFlags:Sleep % 1000
   30:  	Call  SetTargetOffset       ( .Actor:Self 00000001  -4`  14` )
   4C:  	Call  8027D4C8  ( FFFFFF81 00000001 00000000 00000000 )
   68:  	Call  $Function_80218270    ( FFFFFFF6 0000000D 0000000A 0000000D )
   84:  Else
   8C:  	Call  SetTargetOffset       ( .Actor:Self 00000001  0`  24` )
   A8:  	Call  8027D4C8  ( FFFFFF81 00000001 FFFFFFFF FFFFFFF6 )
   C4:  	Call  $Function_80218270    ( FFFFFFF6 00000014 0000000A 00000014 )
   E0:  EndIf
   E8:  Wait  1`
   F4:  Goto  0
  100:  Return
  108:  End
}

#new:Script $Script_8021E5C4
{
    0:  Call  ResetAllActorSounds   ( .Actor:Self )
   10:  SetConst  *Var0  00000001
   20:  SetConst  *Var1  003B0303
   30:  ExecWait  DoReturnHome
   3C:  Call  SetAnimation  ( .Actor:Self 00000001 003B0301 )
   54:  Return
   5C:  End
}

#new:Script $Script_HandleEvent_8021E628
{
    0:  Call  UseIdleAnimation  ( .Actor:Self .False )
   14:  Call  GetLastEvent      ( .Actor:Self *Var0 )
   28:  Switch  *Var0
   34:  	CaseOR  ==  .Event:HitCombo % 9
   40:  	CaseOR  ==  .Event:Hit % A
   4C:  		SetConst  *Var0  00000001
   5C:  		SetConst  *Var1  003B030C
   6C:  		ExecWait  DoNormalHit
   78:  	EndCaseGroup
   80:  	Case  ==  .Event:BurnHit % E
   8C:  		SetConst  *Var0  00000001
   9C:  		SetConst  *Var1  003B030D
   AC:  		SetConst  *Var2  003B030E
   BC:  		ExecWait  DoBurnHit
   C8:  	Case  ==  .Event:BurnDeath % 24
   D4:  		SetConst  *Var0  00000001
   E4:  		SetConst  *Var1  003B030D
   F4:  		SetConst  *Var2  003B030E
  104:  		ExecWait  DoBurnHit
  110:  		SetConst  *Var0  00000001
  120:  		SetConst  *Var1  003B030E
  130:  		ExecWait  DoDeath
  13C:  		Return
  144:  	Case  ==  .Event:SpinSmashHit % B
  150:  		SetConst  *Var0  00000001
  160:  		SetConst  *Var1  003B030C
  170:  		ExecWait  DoSpinSmashHit
  17C:  	Case  ==  .Event:SpinSmashDeath % 21
  188:  		SetConst  *Var0  00000001
  198:  		SetConst  *Var1  003B030C
  1A8:  		ExecWait  DoSpinSmashHit
  1B4:  		SetConst  *Var0  00000001
  1C4:  		SetConst  *Var1  003B030C
  1D4:  		ExecWait  DoDeath
  1E0:  		Return
  1E8:  	Case  ==  .Event:ShockHit % 2F
  1F4:  		SetConst  *Var0  00000001
  204:  		SetConst  *Var1  003B030C
  214:  		ExecWait  DoShockHit
  220:  		SetConst  *Var0  00000001
  230:  		SetConst  *Var1  003B030C
  240:  		ExecWait  DoJumpBack
  24C:  		Call  SetActorSpeed ( .Actor:Self *Fixed[4.0] )
  260:  		ExecWait  $Script_8021E5C4
  26C:  	Case  ==  .Event:ShockDeath % 26
  278:  		SetConst  *Var0  00000001
  288:  		SetConst  *Var1  003B030C
  298:  		ExecWait  DoShockHit
  2A4:  		SetConst  *Var0  00000001
  2B4:  		SetConst  *Var1  003B030C
  2C4:  		ExecWait  DoDeath
  2D0:  		Return
  2D8:  	CaseOR  ==  00000017 % 17
  2E4:  	CaseOR  ==  .Event:Immune % 19
  2F0:  	CaseOR  ==  .Event:AirLiftFailed % 1F
  2FC:  		SetConst  *Var0  00000001
  30C:  		SetConst  *Var1  003B0301
  31C:  		ExecWait  DoImmune
  328:  	EndCaseGroup
  330:  	Case  ==  .Event:Death % 20
  33C:  		SetConst  *Var0  00000001
  34C:  		SetConst  *Var1  003B030C
  35C:  		ExecWait  DoNormalHit
  368:  		Wait  10`
  374:  		SetConst  *Var0  00000001
  384:  		SetConst  *Var1  003B030C
  394:  		ExecWait  DoDeath
  3A0:  		Return
  3A8:  	Case  ==  .Event:RecoverStatus % 31
  3B4:  		SetConst  *Var0  00000001
  3C4:  		SetConst  *Var1  003B0301
  3D4:  		ExecWait  DoRecover
  3E0:  	Case  ==  .Event:ScareAway % 39
  3EC:  		SetConst  *Var0  00000001
  3FC:  		SetConst  *Var1  003B0303
  40C:  		SetConst  *Var2  003B0314
  41C:  		ExecWait  DoScareAway
  428:  		Return
  430:  	Case  ==  .Event:BeginAirLift % 3A
  43C:  		SetConst  *Var0  00000001
  44C:  		SetConst  *Var1  003B030C
  45C:  		ExecWait  DoAirLift
  468:  	Case  ==  .Event:BlowAway % 16
  474:  		SetConst  *Var0  00000001
  484:  		SetConst  *Var1  003B030C
  494:  		ExecWait  DoBlowAway
  4A0:  		Return
  4A8:  	Default
  4B0:  EndSwitch
  4B8:  Call  UseIdleAnimation  ( .Actor:Self .True )
  4CC:  Return
  4D4:  End
}

#new:Script $Script_8021EB04
{
    0:  Call  UseIdleAnimation  ( .Actor:Self .False )
   14:  Call  EnableIdleScript  ( .Actor:Self 00000000 )
   28:  Call  SetTargetActor    ( .Actor:Self .Actor:Player )
   3C:  Call  UseBattleCamPreset    ( 0000003F )
   4C:  Call  BattleCamTargetActor  ( .Actor:Self )
   5C:  Call  MoveBattleCamOver (  20` )
   6C:  Call  8024ECF8  ( FFFFFFFF 00000001 00000000 )
   84:  Call  SetAnimation      ( .Actor:Self 00000001 003B0303 )
   9C:  Call  SetActorSpeed     ( .Actor:Self *Fixed[4.0] )
   B0:  Call  SetGoalToTarget   ( .Actor:Self )
   C0:  Call  GetGoalPos        ( .Actor:Self *Var0 *Var1 *Var2 )
   DC:  Add   *Var0  00000032
   EC:  Set   *Var1  00000000
   FC:  Call  SetGoalPos        ( .Actor:Self *Var0 *Var1 *Var2 )
  118:  Call  RunToGoal ( .Actor:Self  0` .False )
  130:  Call  EnemyTestTarget   ( .Actor:Self *Var0 ~Flags:DamageType:0 00000000 00000001 00000010 )
  154:  Switch  *Var0
  160:  	CaseOR  ==  .HitResult:Miss % 6
  16C:  	CaseOR  ==  .HitResult:Lucky % 5
  178:  		Set   *VarA  *Var0
  188:  		Call  SetActorSounds    ( .Actor:Self .ActorSound:Jump 000002EF 00000000 )
  1A4:  		Call  SetActorSounds    ( .Actor:Self .ActorSound:Walk 000020BA 000003B4 )
  1C0:  		Call  SetActorSounds    ( .Actor:Self .ActorSound:WalkIncrement 0000000A 00000000 )
  1DC:  		Call  SetActorSpeed ( .Actor:Self *Fixed[6.0] )
  1F0:  		Call  SetAnimation  ( .Actor:Self 00000001 003B0304 )
  208:  		Call  SetGoalToTarget   ( .Actor:Self )
  218:  		Call  RunToGoal     ( .Actor:Self  0` .False )
  230:  		Call  SetAnimation  ( .Actor:Self 00000001 003B0305 )
  248:  		Call  SetActorSpeed ( .Actor:Self *Fixed[6.0] )
  25C:  		Call  SetActorJumpGravity   ( .Actor:Self *Fixed[0.5] )
  270:  		Call  GetActorPos   ( .Actor:Self *Var0 *Var1 *Var2 )
  28C:  		Sub   *Var0  0000001E
  29C:  		Call  SetGoalPos    ( .Actor:Self *Var0 *Var1 *Var2 )
  2B8:  		Call  JumpToGoal    ( .Actor:Self  8` .False .True .False )
  2D8:  		If  *VarA  ==  .HitResult:Lucky % 5
  2E8:  			Call  EnemyTestTarget   ( .Actor:Self *VarA ~Flags:DamageType:TriggerLucky 00000000 00000000 00000000 )
  30C:  		EndIf
  314:  		Call  ResetAllActorSounds   ( .Actor:Self )
  324:  		Sub   *Var0  00000014
  334:  		Call  SetGoalPos        ( .Actor:Self *Var0 *Var1 *Var2 )
  350:  		Call  JumpToGoal        ( .Actor:Self  8` .False .True .False )
  370:  		Wait  15`
  37C:  		Call  UseBattleCamPreset    ( 00000002 )
  38C:  		Call  SetActorYaw       ( .Actor:Self  180` )
  3A0:  		Call  AddActorDecoration    ( .Actor:Self 00000001 00000000 .Decoration:Sweat )
  3BC:  		Call  SetActorSpeed     ( .Actor:Self *Fixed[4.0] )
  3D0:  		SetConst  *Var0  00000001
  3E0:  		SetConst  *Var1  003B0304
  3F0:  		ExecWait  DoReturnHome
  3FC:  		Call  RemoveActorDecoration ( .Actor:Self 00000001 00000000 )
  414:  		Call  SetActorYaw       ( .Actor:Self  0` )
  428:  		Call  SetAnimation      ( .Actor:Self 00000001 003B0301 )
  440:  		Call  EnableIdleScript  ( .Actor:Self 00000001 )
  454:  		Call  UseIdleAnimation  ( .Actor:Self .True )
  468:  		Return
  470:  	EndCaseGroup
  478:  EndSwitch
  480:  Thread
  488:  	Wait  3`
  494:  	Call  PlaySoundAtActor  ( .Actor:Self 000002EF )
  4A8:  EndThread
  4B0:  Call  SetActorSounds    ( .Actor:Self .ActorSound:Walk 000020BA 000003B4 )
  4CC:  Call  SetActorSounds    ( .Actor:Self .ActorSound:WalkIncrement 0000000A 00000000 )
  4E8:  Call  SetActorSpeed     ( .Actor:Self *Fixed[6.0] )
  4FC:  Call  SetAnimation      ( .Actor:Self 00000001 003B0304 )
  514:  Call  SetGoalToTarget   ( .Actor:Self )
  524:  Call  GetGoalPos        ( .Actor:Self *Var0 *Var1 *Var2 )
  540:  Add   *Var0  0000000A
  550:  Set   *Var1  00000000
  560:  Call  SetGoalPos        ( .Actor:Self *Var0 *Var1 *Var2 )
  57C:  Call  RunToGoal ( .Actor:Self  0` .False )
  594:  Call  SetAnimation      ( .Actor:Self 00000001 003B0305 )
  5AC:  Wait  2`
  5B8:  Call  SetGoalToTarget   ( .Actor:Self )
  5C8:  Call  EnemyDamageTarget ( .Actor:Self *Var0 ~Flags:DamageType:0 00000000 00000000 00000002 00000020 )
  5F0:  Call  ResetAllActorSounds   ( .Actor:Self )
  600:  Call  UseBattleCamPreset    ( 00000002 )
  610:  Call  MoveBattleCamOver (  15` )
  620:  Call  GetGoalPos        ( .Actor:Self *Var0 *Var1 *Var2 )
  63C:  Add   *Var0  0000001E
  64C:  Set   *Var1  00000000
  65C:  Call  SetActorJumpGravity   ( .Actor:Self *Fixed[1.8] )
  670:  Call  SetGoalPos        ( .Actor:Self *Var0 *Var1 *Var2 )
  68C:  Call  JumpToGoal        ( .Actor:Self  10` .False .True .False )
  6AC:  Call  SetAnimation      ( .Actor:Self 00000001 003B0301 )
  6C4:  Wait  8`
  6D0:  Call  SetActorSpeed     ( .Actor:Self *Fixed[6.0] )
  6E4:  ExecWait  $Script_8021E5C4
  6F0:  Call  EnableIdleScript  ( .Actor:Self 00000001 )
  704:  Call  UseIdleAnimation  ( .Actor:Self .True )
  718:  Return
  720:  End
}

#new:Script $Script_8021F22C
{
    0:  Call  UseIdleAnimation  ( .Actor:Self .False )
   14:  Call  EnableIdleScript  ( .Actor:Self 00000000 )
   28:  Call  SetTargetActor    ( .Actor:Self .Actor:Player )
   3C:  Call  UseBattleCamPreset    ( 0000003F )
   4C:  Call  BattleCamTargetActor  ( .Actor:Self )
   5C:  Call  MoveBattleCamOver (  20` )
   6C:  Call  8024ECF8  ( FFFFFFFF 00000001 00000000 )
   84:  Call  PlaySoundAtActor  ( .Actor:Self 00000234 )
   98:  Call  SetAnimation      ( .Actor:Self 00000001 003B0309 )
   B0:  Wait  20`
   BC:  Call  SetAnimation      ( .Actor:Self 00000001 003B0303 )
   D4:  Call  SetActorSpeed     ( .Actor:Self *Fixed[3.0] )
   E8:  Call  SetGoalToTarget   ( .Actor:Self )
   F8:  Call  GetGoalPos        ( .Actor:Self *Var0 *Var1 *Var2 )
  114:  Add   *Var0  00000050
  124:  Set   *Var1  00000000
  134:  Call  SetGoalPos        ( .Actor:Self *Var0 *Var1 *Var2 )
  150:  Call  RunToGoal ( .Actor:Self  0` .False )
  168:  Call  SetActorSounds    ( .Actor:Self .ActorSound:Walk 000020BA 000003B4 )
  184:  Call  SetActorSounds    ( .Actor:Self .ActorSound:WalkIncrement 0000000A 00000000 )
  1A0:  Call  SetAnimation      ( .Actor:Self 00000001 003B0304 )
  1B8:  Call  SetActorSpeed     ( .Actor:Self *Fixed[5.0] )
  1CC:  Sub   *Var0  00000028
  1DC:  Call  SetGoalPos        ( .Actor:Self *Var0 *Var1 *Var2 )
  1F8:  Call  RunToGoal ( .Actor:Self  0` .False )
  210:  Call  EnemyTestTarget   ( .Actor:Self *Var0 ~Flags:DamageType:0 00000000 00000001 00000010 )
  234:  Switch  *Var0
  240:  	CaseOR  ==  .HitResult:Miss % 6
  24C:  	CaseOR  ==  .HitResult:Lucky % 5
  258:  		Set   *VarA  *Var0
  268:  		Call  SetActorSpeed ( .Actor:Self *Fixed[6.0] )
  27C:  		Call  SetAnimation  ( .Actor:Self 00000001 003B0309 )
  294:  		Thread
  29C:  			Wait  12`
  2A8:  			Call  SetAnimation  ( .Actor:Self 00000001 003B030A )
  2C0:  		EndThread
  2C8:  		Call  SetActorJumpGravity   ( .Actor:Self *Fixed[0.8] )
  2DC:  		Call  SetGoalToTarget   ( .Actor:Self )
  2EC:  		Call  GetGoalPos        ( .Actor:Self *Var0 *Var1 *Var2 )
  308:  		Sub   *Var0  0000000A
  318:  		Set   *Var1  00000000
  328:  		Call  SetGoalPos        ( .Actor:Self *Var0 *Var1 *Var2 )
  344:  		Call  JumpToGoal        ( .Actor:Self  24` .False .True .False )
  364:  		If  *VarA  ==  .HitResult:Lucky % 5
  374:  			Call  EnemyTestTarget   ( .Actor:Self *Var0 ~Flags:DamageType:TriggerLucky 00000000 00000000 00000000 )
  398:  		EndIf
  3A0:  		Call  SetAnimation  ( .Actor:Self 00000001 003B0305 )
  3B8:  		Call  SetActorSpeed ( .Actor:Self *Fixed[6.0] )
  3CC:  		Call  SetActorJumpGravity   ( .Actor:Self *Fixed[0.5] )
  3E0:  		Call  GetActorPos   ( .Actor:Self *Var0 *Var1 *Var2 )
  3FC:  		Sub   *Var0  0000001E
  40C:  		Call  SetGoalPos    ( .Actor:Self *Var0 *Var1 *Var2 )
  428:  		Call  JumpToGoal    ( .Actor:Self  8` .False .True .False )
  448:  		Sub   *Var0  00000014
  458:  		Call  SetGoalPos    ( .Actor:Self *Var0 *Var1 *Var2 )
  474:  		Call  JumpToGoal    ( .Actor:Self  8` .False .True .False )
  494:  		Wait  15`
  4A0:  		Call  UseBattleCamPreset    ( 00000002 )
  4B0:  		Call  MoveBattleCamOver     (  15` )
  4C0:  		Call  SetActorYaw   ( .Actor:Self  180` )
  4D4:  		Call  AddActorDecoration    ( .Actor:Self 00000001 00000000 .Decoration:Sweat )
  4F0:  		Call  SetActorSpeed ( .Actor:Self *Fixed[6.0] )
  504:  		SetConst  *Var0  00000001
  514:  		SetConst  *Var1  003B0304
  524:  		ExecWait  DoReturnHome
  530:  		Call  RemoveActorDecoration ( .Actor:Self 00000001 00000000 )
  548:  		Call  SetActorYaw   ( .Actor:Self  0` )
  55C:  		Call  SetAnimation  ( .Actor:Self 00000001 003B0301 )
  574:  		Call  EnableIdleScript      ( .Actor:Self 00000001 )
  588:  		Call  UseIdleAnimation      ( .Actor:Self .True )
  59C:  		Return
  5A4:  	EndCaseGroup
  5AC:  EndSwitch
  5B4:  Call  SetActorSpeed ( .Actor:Self *Fixed[6.0] )
  5C8:  Call  SetAnimation  ( .Actor:Self 00000001 003B0309 )
  5E0:  Thread
  5E8:  	Wait  9`
  5F4:  	Call  SetAnimation  ( .Actor:Self 00000001 003B030A )
  60C:  EndThread
  614:  Call  SetActorJumpGravity   ( .Actor:Self *Fixed[0.8] )
  628:  Call  SetGoalToTarget   ( .Actor:Self )
  638:  Call  JumpToGoal        ( .Actor:Self  18` .False .True .False )
  658:  Wait  2`
  664:  Call  EnemyDamageTarget ( .Actor:Self *Var0 ~Flags:DamageType:0 00000000 00000000 00000003 00000020 )
  68C:  Switch  *Var0
  698:  	CaseOR  ==  .HitResult:Hit % 0
  6A4:  	CaseOR  ==  .HitResult:QuakeImmune % 2
  6B0:  		Call  UseBattleCamPreset    ( 00000002 )
  6C0:  		Call  MoveBattleCamOver     (  15` )
  6D0:  		Thread
  6D8:  			Call  SetActorRotationOffset    ( .Actor:Self 00000000 0000000E 00000000 )
  6F4:  			Set   *Var3  00000000
  704:  			Loop  00000014
  710:  				Sub   *Var3  0000001E
  720:  				If  *Var3  <  00000000
  730:  					Add   *Var3  00000168
  740:  				EndIf
  748:  				Call  SetActorRotation  ( .Actor:Self 00000000 00000000 *Var3 )
  764:  				Wait  1`
  770:  			EndLoop
  778:  			Call  SetActorRotation  ( .Actor:Self 00000000 00000000 00000000 )
  794:  			Call  SetActorRotationOffset    ( .Actor:Self 00000000 00000000 00000000 )
  7B0:  		EndThread
  7B8:  		Call  GetBattleFlags    ( *Var0 )
  7C8:  		If  *Var0  &  80000000
  7D8:  			Goto  1
  7E4:  		EndIf
  7EC:  		Call  GetLastDamage ( .Actor:Player *Var0 )
  800:  		If  *Var0  ==  00000000
  810:  			Goto  1
  81C:  		EndIf
  824:  		Call  GetGoalPos    ( .Actor:Self *Var0 *Var1 *Var2 )
  840:  		Add   *Var0  00000028
  850:  		Set   *Var1  00000000
  860:  		Call  SetActorJumpGravity   ( .Actor:Self *Fixed[0.8] )
  874:  		Call  SetGoalPos    ( .Actor:Self *Var0 *Var1 *Var2 )
  890:  		Call  JumpToGoal    ( .Actor:Self  20` .False .True .False )
  8B0:  		Call  PlaySoundAtActor      ( .Actor:Self 00000349 )
  8C4:  		Call  PlaySoundAtActor      ( .Actor:Self 00000749 )
  8D8:  		Call  SetAnimation  ( .Actor:Self 00000001 003B0309 )
  8F0:  		Wait  10`
  8FC:  		Call  SetAnimation  ( .Actor:Self 00000001 003B0307 )
  914:  		Wait  15`
  920:  		Goto  2
  92C:  		Label  1
  938:  		Call  GetGoalPos    ( .Actor:Self *Var0 *Var1 *Var2 )
  954:  		Add   *Var0  00000028
  964:  		Set   *Var1  00000000
  974:  		Call  SetActorJumpGravity   ( .Actor:Self *Fixed[0.8] )
  988:  		Call  SetGoalPos    ( .Actor:Self *Var0 *Var1 *Var2 )
  9A4:  		Call  JumpToGoal    ( .Actor:Self  20` .False .True .False )
  9C4:  		Call  PlaySoundAtActor      ( .Actor:Self 000020E4 )
  9D8:  		Call  SetAnimation  ( .Actor:Self 00000001 003B0310 )
  9F0:  		Wait  10`
  9FC:  		Call  PlaySoundAtActor      ( .Actor:Self 000020C3 )
  A10:  		Call  AddActorDecoration    ( .Actor:Self 00000001 00000000 .Decoration:Sweat )
  A2C:  		Call  RandInt       ( 00000064 *Var0 )
  A40:  		If  *Var0  <  00000032
  A50:  			Call  SetAnimation  ( .Actor:Self 00000001 003B0311 )
  A68:  		Else
  A70:  			Call  SetAnimation  ( .Actor:Self 00000001 003B0313 )
  A88:  		EndIf
  A90:  		Wait  25`
  A9C:  		Call  RemoveActorDecoration ( .Actor:Self 00000001 00000000 )
  AB4:  		Call  SetActorYaw   ( .Actor:Self  180` )
  AC8:  		Label  2
  AD4:  		Call  SetActorSpeed ( .Actor:Self *Fixed[6.0] )
  AE8:  		SetConst  *Var0  00000001
  AF8:  		SetConst  *Var1  003B0304
  B08:  		ExecWait  DoReturnHome
  B14:  		Call  SetActorYaw   ( .Actor:Self  0` )
  B28:  		Call  SetAnimation  ( .Actor:Self 00000001 003B0301 )
  B40:  	EndCaseGroup
  B48:  EndSwitch
  B50:  Call  EnableIdleScript  ( .Actor:Self 00000001 )
  B64:  Call  UseIdleAnimation  ( .Actor:Self .True )
  B78:  Return
  B80:  End
}

#new:Script $Script_TakeTurn_8021FDB4
{
    0:  Call  RandInt   ( 00000001 *Var0 )
   14:  If  *Var0  ==  00000000
   24:  	ExecWait  $Script_8021EB04
   30:  Else
   38:  	ExecWait  $Script_8021F22C
   44:  EndIf
   4C:  Return
   54:  End
}

#new:DefenseTable $DefenseTable_8021FE10
{
	.Element:Normal 00000000
	.Element:Shock  00000000
	.Element:End
}

#new:StatusTable $StatusTable_8021FE24
{
	.Status:Normal      0`
	.Status:Default     0`
	.Status:Sleep      70`
	.Status:Poison     50`
	.Status:Frozen      0`
	.Status:Dizzy      90`
	.Status:Fear      100`
	.Status:Static     50`
	.Status:Paralyze   90`
	.Status:Shrink     75`
	.Status:Stop       90`
	.Status:DefaultTurnMod    0`
	.Status:SleepTurnMod      0`
	.Status:PoisonTurnMod     0`
	.Status:FrozenTurnMod     0`
	.Status:DizzyTurnMod      0`
	.Status:FearTurnMod       0`
	.Status:StaticTurnMod     0`
	.Status:ParalyzeTurnMod   1`
	.Status:ShrinkTurnMod     0`
	.Status:StopTurnMod       0`
	.Status:End
}

#new:PartsTable $PartsTable_8021FED0
{
	00800000 01000000 001800FF $IdleAnimations_8021FF1C $DefenseTable_8021FE10 00000000 00000000 FFF60000 00000000
}

#new:Actor $ShyGuy_GRN
{
	% stats
	[Index]        1Fb
	[Level]        14`b
	[MaxHP]         7`b
	[Coins]         1`b
	[Flags]       00000000
	[StatusTable] $StatusTable_8021FE24
	% ai
	[PartsCount]    1`s
	[PartsTable]  $PartsTable_8021FED0
	[Script]      $Script_Init_8021FF68
	% move effectiveness
	[Escape]       60`b
	[Item]         80`b
	[AirLift]      85`b
	[Hurricane]    80`b % Bow's "Spook" as well
	[UpAndAway]    95`b
	[PowerBounce] 100`b
	[SpinSmash]     0`b % weight (0-4)
	% ui positions
	[Size]         28`b  24`b % width height
	[HealthBar]     0`b   0`b % dx dy
	[StatusTurn]  -10`b  20`b % dx dy
	[StatusIcon]   10`b  20`b % dx dy
}

#new:IdleAnimations $IdleAnimations_8021FF1C
{
	.Status:Normal    003B0201
	.Status:Stone     003B0200
	.Status:Sleep     003B0212
	.Status:Poison    003B0201
	.Status:Stop      003B0200
	.Status:Static    003B0201
	.Status:Paralyze  003B0200
	.Status:Dizzy     003B0213
	.Status:Fear      003B0213
	.Status:End
}

#new:Script $Script_Init_8021FF68
{
    0:  Call  BindTakeTurn      ( .Actor:Self $Script_TakeTurn_802218B4 )
   14:  Call  BindIdle  ( .Actor:Self $Script_Idle_8021FFB4 )
   28:  Call  BindHandleEvent   ( .Actor:Self $Script_HandleEvent_80220128 )
   3C:  Return
   44:  End
}

#new:Script $Script_Idle_8021FFB4
{
    0:  Label  0
    C:  Call  GetStatusFlags    ( .Actor:Self *Var0 )
   20:  If  *Var0  &  ~Flags:StatusFlags:Sleep % 1000
   30:  	Call  SetTargetOffset       ( .Actor:Self 00000001  -4`  14` )
   4C:  	Call  8027D4C8  ( FFFFFF81 00000001 00000000 00000000 )
   68:  	Call  $Function_80218340    ( FFFFFFF6 0000000D 0000000A 0000000D )
   84:  Else
   8C:  	Call  SetTargetOffset       ( .Actor:Self 00000001  0`  24` )
   A8:  	Call  8027D4C8  ( FFFFFF81 00000001 FFFFFFFF FFFFFFF6 )
   C4:  	Call  $Function_80218340    ( FFFFFFF6 00000014 0000000A 00000014 )
   E0:  EndIf
   E8:  Wait  1`
   F4:  Goto  0
  100:  Return
  108:  End
}

#new:Script $Script_802200C4
{
    0:  Call  ResetAllActorSounds   ( .Actor:Self )
   10:  SetConst  *Var0  00000001
   20:  SetConst  *Var1  003B0203
   30:  ExecWait  DoReturnHome
   3C:  Call  SetAnimation  ( .Actor:Self 00000001 003B0201 )
   54:  Return
   5C:  End
}

#new:Script $Script_HandleEvent_80220128
{
    0:  Call  UseIdleAnimation  ( .Actor:Self .False )
   14:  Call  GetLastEvent      ( .Actor:Self *Var0 )
   28:  Switch  *Var0
   34:  	CaseOR  ==  .Event:HitCombo % 9
   40:  	CaseOR  ==  .Event:Hit % A
   4C:  		SetConst  *Var0  00000001
   5C:  		SetConst  *Var1  003B020C
   6C:  		ExecWait  DoNormalHit
   78:  	EndCaseGroup
   80:  	Case  ==  .Event:BurnHit % E
   8C:  		SetConst  *Var0  00000001
   9C:  		SetConst  *Var1  003B020D
   AC:  		SetConst  *Var2  003B020E
   BC:  		ExecWait  DoBurnHit
   C8:  	Case  ==  .Event:BurnDeath % 24
   D4:  		SetConst  *Var0  00000001
   E4:  		SetConst  *Var1  003B020D
   F4:  		SetConst  *Var2  003B020E
  104:  		ExecWait  DoBurnHit
  110:  		SetConst  *Var0  00000001
  120:  		SetConst  *Var1  003B020E
  130:  		ExecWait  DoDeath
  13C:  		Return
  144:  	Case  ==  .Event:SpinSmashHit % B
  150:  		SetConst  *Var0  00000001
  160:  		SetConst  *Var1  003B020C
  170:  		ExecWait  DoSpinSmashHit
  17C:  	Case  ==  .Event:SpinSmashDeath % 21
  188:  		SetConst  *Var0  00000001
  198:  		SetConst  *Var1  003B020C
  1A8:  		ExecWait  DoSpinSmashHit
  1B4:  		SetConst  *Var0  00000001
  1C4:  		SetConst  *Var1  003B020C
  1D4:  		ExecWait  DoDeath
  1E0:  		Return
  1E8:  	Case  ==  .Event:ShockHit % 2F
  1F4:  		SetConst  *Var0  00000001
  204:  		SetConst  *Var1  003B020C
  214:  		ExecWait  DoShockHit
  220:  		SetConst  *Var0  00000001
  230:  		SetConst  *Var1  003B020C
  240:  		ExecWait  DoJumpBack
  24C:  		Call  SetActorSpeed ( .Actor:Self *Fixed[4.0] )
  260:  		ExecWait  $Script_802200C4
  26C:  	Case  ==  .Event:ShockDeath % 26
  278:  		SetConst  *Var0  00000001
  288:  		SetConst  *Var1  003B020C
  298:  		ExecWait  DoShockHit
  2A4:  		SetConst  *Var0  00000001
  2B4:  		SetConst  *Var1  003B020C
  2C4:  		ExecWait  DoDeath
  2D0:  		Return
  2D8:  	CaseOR  ==  00000017 % 17
  2E4:  	CaseOR  ==  .Event:Immune % 19
  2F0:  	CaseOR  ==  .Event:AirLiftFailed % 1F
  2FC:  		SetConst  *Var0  00000001
  30C:  		SetConst  *Var1  003B0201
  31C:  		ExecWait  DoImmune
  328:  	EndCaseGroup
  330:  	Case  ==  .Event:Death % 20
  33C:  		SetConst  *Var0  00000001
  34C:  		SetConst  *Var1  003B020C
  35C:  		ExecWait  DoNormalHit
  368:  		Wait  10`
  374:  		SetConst  *Var0  00000001
  384:  		SetConst  *Var1  003B020C
  394:  		ExecWait  DoDeath
  3A0:  		Return
  3A8:  	Case  ==  .Event:RecoverStatus % 31
  3B4:  		SetConst  *Var0  00000001
  3C4:  		SetConst  *Var1  003B0201
  3D4:  		ExecWait  DoRecover
  3E0:  	Case  ==  .Event:ScareAway % 39
  3EC:  		SetConst  *Var0  00000001
  3FC:  		SetConst  *Var1  003B0203
  40C:  		SetConst  *Var2  003B0214
  41C:  		ExecWait  DoScareAway
  428:  		Return
  430:  	Case  ==  .Event:BeginAirLift % 3A
  43C:  		SetConst  *Var0  00000001
  44C:  		SetConst  *Var1  003B020C
  45C:  		ExecWait  DoAirLift
  468:  	Case  ==  .Event:BlowAway % 16
  474:  		SetConst  *Var0  00000001
  484:  		SetConst  *Var1  003B020C
  494:  		ExecWait  DoBlowAway
  4A0:  		Return
  4A8:  	Default
  4B0:  EndSwitch
  4B8:  Call  UseIdleAnimation  ( .Actor:Self .True )
  4CC:  Return
  4D4:  End
}

#new:Script $Script_80220604
{
    0:  Call  UseIdleAnimation  ( .Actor:Self .False )
   14:  Call  EnableIdleScript  ( .Actor:Self 00000000 )
   28:  Call  SetTargetActor    ( .Actor:Self .Actor:Player )
   3C:  Call  UseBattleCamPreset    ( 0000003F )
   4C:  Call  BattleCamTargetActor  ( .Actor:Self )
   5C:  Call  MoveBattleCamOver (  20` )
   6C:  Call  8024ECF8  ( FFFFFFFF 00000001 00000000 )
   84:  Call  SetAnimation      ( .Actor:Self 00000001 003B0203 )
   9C:  Call  SetActorSpeed     ( .Actor:Self *Fixed[4.0] )
   B0:  Call  SetGoalToTarget   ( .Actor:Self )
   C0:  Call  GetGoalPos        ( .Actor:Self *Var0 *Var1 *Var2 )
   DC:  Add   *Var0  00000032
   EC:  Set   *Var1  00000000
   FC:  Call  SetGoalPos        ( .Actor:Self *Var0 *Var1 *Var2 )
  118:  Call  RunToGoal ( .Actor:Self  0` .False )
  130:  Call  EnemyTestTarget   ( .Actor:Self *Var0 ~Flags:DamageType:0 00000000 00000001 00000010 )
  154:  Switch  *Var0
  160:  	CaseOR  ==  .HitResult:Miss % 6
  16C:  	CaseOR  ==  .HitResult:Lucky % 5
  178:  		Set   *VarA  *Var0
  188:  		Call  SetActorSounds    ( .Actor:Self .ActorSound:Jump 000002EF 00000000 )
  1A4:  		Call  SetActorSounds    ( .Actor:Self .ActorSound:Walk 000020BA 000003B4 )
  1C0:  		Call  SetActorSounds    ( .Actor:Self .ActorSound:WalkIncrement 0000000A 00000000 )
  1DC:  		Call  SetActorSpeed ( .Actor:Self *Fixed[6.0] )
  1F0:  		Call  SetAnimation  ( .Actor:Self 00000001 003B0204 )
  208:  		Call  SetGoalToTarget   ( .Actor:Self )
  218:  		Call  RunToGoal     ( .Actor:Self  0` .False )
  230:  		Call  SetAnimation  ( .Actor:Self 00000001 003B0205 )
  248:  		Call  SetActorSpeed ( .Actor:Self *Fixed[6.0] )
  25C:  		Call  SetActorJumpGravity   ( .Actor:Self *Fixed[0.5] )
  270:  		Call  GetActorPos   ( .Actor:Self *Var0 *Var1 *Var2 )
  28C:  		Sub   *Var0  0000001E
  29C:  		Call  SetGoalPos    ( .Actor:Self *Var0 *Var1 *Var2 )
  2B8:  		Call  JumpToGoal    ( .Actor:Self  8` .False .True .False )
  2D8:  		If  *VarA  ==  .HitResult:Lucky % 5
  2E8:  			Call  EnemyTestTarget   ( .Actor:Self *VarA ~Flags:DamageType:TriggerLucky 00000000 00000000 00000000 )
  30C:  		EndIf
  314:  		Call  ResetAllActorSounds   ( .Actor:Self )
  324:  		Sub   *Var0  00000014
  334:  		Call  SetGoalPos        ( .Actor:Self *Var0 *Var1 *Var2 )
  350:  		Call  JumpToGoal        ( .Actor:Self  8` .False .True .False )
  370:  		Wait  15`
  37C:  		Call  UseBattleCamPreset    ( 00000002 )
  38C:  		Call  SetActorYaw       ( .Actor:Self  180` )
  3A0:  		Call  AddActorDecoration    ( .Actor:Self 00000001 00000000 .Decoration:Sweat )
  3BC:  		Call  SetActorSpeed     ( .Actor:Self *Fixed[4.0] )
  3D0:  		SetConst  *Var0  00000001
  3E0:  		SetConst  *Var1  003B0204
  3F0:  		ExecWait  DoReturnHome
  3FC:  		Call  RemoveActorDecoration ( .Actor:Self 00000001 00000000 )
  414:  		Call  SetActorYaw       ( .Actor:Self  0` )
  428:  		Call  SetAnimation      ( .Actor:Self 00000001 003B0201 )
  440:  		Call  EnableIdleScript  ( .Actor:Self 00000001 )
  454:  		Call  UseIdleAnimation  ( .Actor:Self .True )
  468:  		Return
  470:  	EndCaseGroup
  478:  EndSwitch
  480:  Thread
  488:  	Wait  3`
  494:  	Call  PlaySoundAtActor  ( .Actor:Self 000002EF )
  4A8:  EndThread
  4B0:  Call  SetActorSounds    ( .Actor:Self .ActorSound:Walk 000020BA 000003B4 )
  4CC:  Call  SetActorSounds    ( .Actor:Self .ActorSound:WalkIncrement 0000000A 00000000 )
  4E8:  Call  SetActorSpeed     ( .Actor:Self *Fixed[6.0] )
  4FC:  Call  SetAnimation      ( .Actor:Self 00000001 003B0204 )
  514:  Call  SetGoalToTarget   ( .Actor:Self )
  524:  Call  GetGoalPos        ( .Actor:Self *Var0 *Var1 *Var2 )
  540:  Add   *Var0  0000000A
  550:  Set   *Var1  00000000
  560:  Call  SetGoalPos        ( .Actor:Self *Var0 *Var1 *Var2 )
  57C:  Call  RunToGoal ( .Actor:Self  0` .False )
  594:  Call  SetAnimation      ( .Actor:Self 00000001 003B0205 )
  5AC:  Wait  2`
  5B8:  Call  SetGoalToTarget   ( .Actor:Self )
  5C8:  Call  EnemyDamageTarget ( .Actor:Self *Var0 ~Flags:DamageType:0 00000000 00000000 00000002 00000020 )
  5F0:  Call  ResetAllActorSounds   ( .Actor:Self )
  600:  Call  UseBattleCamPreset    ( 00000002 )
  610:  Call  MoveBattleCamOver (  15` )
  620:  Call  GetGoalPos        ( .Actor:Self *Var0 *Var1 *Var2 )
  63C:  Add   *Var0  0000001E
  64C:  Set   *Var1  00000000
  65C:  Call  SetActorJumpGravity   ( .Actor:Self *Fixed[1.8] )
  670:  Call  SetGoalPos        ( .Actor:Self *Var0 *Var1 *Var2 )
  68C:  Call  JumpToGoal        ( .Actor:Self  10` .False .True .False )
  6AC:  Call  SetAnimation      ( .Actor:Self 00000001 003B0201 )
  6C4:  Wait  8`
  6D0:  Call  SetActorSpeed     ( .Actor:Self *Fixed[6.0] )
  6E4:  ExecWait  $Script_802200C4
  6F0:  Call  EnableIdleScript  ( .Actor:Self 00000001 )
  704:  Call  UseIdleAnimation  ( .Actor:Self .True )
  718:  Return
  720:  End
}

#new:Script $Script_80220D2C
{
    0:  Call  UseIdleAnimation  ( .Actor:Self .False )
   14:  Call  EnableIdleScript  ( .Actor:Self 00000000 )
   28:  Call  SetTargetActor    ( .Actor:Self .Actor:Player )
   3C:  Call  UseBattleCamPreset    ( 0000003F )
   4C:  Call  BattleCamTargetActor  ( .Actor:Self )
   5C:  Call  MoveBattleCamOver (  20` )
   6C:  Call  8024ECF8  ( FFFFFFFF 00000001 00000000 )
   84:  Call  PlaySoundAtActor  ( .Actor:Self 00000234 )
   98:  Call  SetAnimation      ( .Actor:Self 00000001 003B0209 )
   B0:  Wait  20`
   BC:  Call  SetAnimation      ( .Actor:Self 00000001 003B0203 )
   D4:  Call  SetActorSpeed     ( .Actor:Self *Fixed[3.0] )
   E8:  Call  SetGoalToTarget   ( .Actor:Self )
   F8:  Call  GetGoalPos        ( .Actor:Self *Var0 *Var1 *Var2 )
  114:  Add   *Var0  00000050
  124:  Set   *Var1  00000000
  134:  Call  SetGoalPos        ( .Actor:Self *Var0 *Var1 *Var2 )
  150:  Call  RunToGoal ( .Actor:Self  0` .False )
  168:  Call  SetActorSounds    ( .Actor:Self .ActorSound:Walk 000020BA 000003B4 )
  184:  Call  SetActorSounds    ( .Actor:Self .ActorSound:WalkIncrement 0000000A 00000000 )
  1A0:  Call  SetAnimation      ( .Actor:Self 00000001 003B0204 )
  1B8:  Call  SetActorSpeed     ( .Actor:Self *Fixed[5.0] )
  1CC:  Sub   *Var0  00000028
  1DC:  Call  SetGoalPos        ( .Actor:Self *Var0 *Var1 *Var2 )
  1F8:  Call  RunToGoal ( .Actor:Self  0` .False )
  210:  Call  EnemyTestTarget   ( .Actor:Self *Var0 ~Flags:DamageType:0 00000000 00000001 00000010 )
  234:  Switch  *Var0
  240:  	CaseOR  ==  .HitResult:Miss % 6
  24C:  	CaseOR  ==  .HitResult:Lucky % 5
  258:  		Set   *VarA  *Var0
  268:  		Call  SetActorSpeed ( .Actor:Self *Fixed[6.0] )
  27C:  		Call  SetAnimation  ( .Actor:Self 00000001 003B0209 )
  294:  		Thread
  29C:  			Wait  12`
  2A8:  			Call  SetAnimation  ( .Actor:Self 00000001 003B020A )
  2C0:  		EndThread
  2C8:  		Call  SetActorJumpGravity   ( .Actor:Self *Fixed[0.8] )
  2DC:  		Call  SetGoalToTarget   ( .Actor:Self )
  2EC:  		Call  GetGoalPos        ( .Actor:Self *Var0 *Var1 *Var2 )
  308:  		Sub   *Var0  0000000A
  318:  		Set   *Var1  00000000
  328:  		Call  SetGoalPos        ( .Actor:Self *Var0 *Var1 *Var2 )
  344:  		Call  JumpToGoal        ( .Actor:Self  24` .False .True .False )
  364:  		If  *VarA  ==  .HitResult:Lucky % 5
  374:  			Call  EnemyTestTarget   ( .Actor:Self *Var0 ~Flags:DamageType:TriggerLucky 00000000 00000000 00000000 )
  398:  		EndIf
  3A0:  		Call  SetAnimation  ( .Actor:Self 00000001 003B0205 )
  3B8:  		Call  SetActorSpeed ( .Actor:Self *Fixed[6.0] )
  3CC:  		Call  SetActorJumpGravity   ( .Actor:Self *Fixed[0.5] )
  3E0:  		Call  GetActorPos   ( .Actor:Self *Var0 *Var1 *Var2 )
  3FC:  		Sub   *Var0  0000001E
  40C:  		Call  SetGoalPos    ( .Actor:Self *Var0 *Var1 *Var2 )
  428:  		Call  JumpToGoal    ( .Actor:Self  8` .False .True .False )
  448:  		Sub   *Var0  00000014
  458:  		Call  SetGoalPos    ( .Actor:Self *Var0 *Var1 *Var2 )
  474:  		Call  JumpToGoal    ( .Actor:Self  8` .False .True .False )
  494:  		Wait  15`
  4A0:  		Call  UseBattleCamPreset    ( 00000002 )
  4B0:  		Call  MoveBattleCamOver     (  15` )
  4C0:  		Call  SetActorYaw   ( .Actor:Self  180` )
  4D4:  		Call  AddActorDecoration    ( .Actor:Self 00000001 00000000 .Decoration:Sweat )
  4F0:  		Call  SetActorSpeed ( .Actor:Self *Fixed[6.0] )
  504:  		SetConst  *Var0  00000001
  514:  		SetConst  *Var1  003B0204
  524:  		ExecWait  DoReturnHome
  530:  		Call  RemoveActorDecoration ( .Actor:Self 00000001 00000000 )
  548:  		Call  SetActorYaw   ( .Actor:Self  0` )
  55C:  		Call  SetAnimation  ( .Actor:Self 00000001 003B0201 )
  574:  		Call  EnableIdleScript      ( .Actor:Self 00000001 )
  588:  		Call  UseIdleAnimation      ( .Actor:Self .True )
  59C:  		Return
  5A4:  	EndCaseGroup
  5AC:  EndSwitch
  5B4:  Call  SetActorSpeed ( .Actor:Self *Fixed[6.0] )
  5C8:  Call  SetAnimation  ( .Actor:Self 00000001 003B0209 )
  5E0:  Thread
  5E8:  	Wait  9`
  5F4:  	Call  SetAnimation  ( .Actor:Self 00000001 003B020A )
  60C:  EndThread
  614:  Call  SetActorJumpGravity   ( .Actor:Self *Fixed[0.8] )
  628:  Call  SetGoalToTarget   ( .Actor:Self )
  638:  Call  JumpToGoal        ( .Actor:Self  18` .False .True .False )
  658:  Wait  2`
  664:  Call  EnemyDamageTarget ( .Actor:Self *Var0 ~Flags:DamageType:0 00000000 00000000 00000003 00000020 )
  68C:  Switch  *Var0
  698:  	CaseOR  ==  .HitResult:Hit % 0
  6A4:  	CaseOR  ==  .HitResult:QuakeImmune % 2
  6B0:  		Call  UseBattleCamPreset    ( 00000002 )
  6C0:  		Call  MoveBattleCamOver     (  15` )
  6D0:  		Thread
  6D8:  			Call  SetActorRotationOffset    ( .Actor:Self 00000000 0000000E 00000000 )
  6F4:  			Set   *Var3  00000000
  704:  			Loop  00000014
  710:  				Sub   *Var3  0000001E
  720:  				If  *Var3  <  00000000
  730:  					Add   *Var3  00000168
  740:  				EndIf
  748:  				Call  SetActorRotation  ( .Actor:Self 00000000 00000000 *Var3 )
  764:  				Wait  1`
  770:  			EndLoop
  778:  			Call  SetActorRotation  ( .Actor:Self 00000000 00000000 00000000 )
  794:  			Call  SetActorRotationOffset    ( .Actor:Self 00000000 00000000 00000000 )
  7B0:  		EndThread
  7B8:  		Call  GetBattleFlags    ( *Var0 )
  7C8:  		If  *Var0  &  80000000
  7D8:  			Goto  1
  7E4:  		EndIf
  7EC:  		Call  GetLastDamage ( .Actor:Player *Var0 )
  800:  		If  *Var0  ==  00000000
  810:  			Goto  1
  81C:  		EndIf
  824:  		Call  GetGoalPos    ( .Actor:Self *Var0 *Var1 *Var2 )
  840:  		Add   *Var0  00000028
  850:  		Set   *Var1  00000000
  860:  		Call  SetActorJumpGravity   ( .Actor:Self *Fixed[0.8] )
  874:  		Call  SetGoalPos    ( .Actor:Self *Var0 *Var1 *Var2 )
  890:  		Call  JumpToGoal    ( .Actor:Self  20` .False .True .False )
  8B0:  		Call  PlaySoundAtActor      ( .Actor:Self 00000349 )
  8C4:  		Call  PlaySoundAtActor      ( .Actor:Self 00000749 )
  8D8:  		Call  SetAnimation  ( .Actor:Self 00000001 003B0209 )
  8F0:  		Wait  10`
  8FC:  		Call  SetAnimation  ( .Actor:Self 00000001 003B0207 )
  914:  		Wait  15`
  920:  		Goto  2
  92C:  		Label  1
  938:  		Call  GetGoalPos    ( .Actor:Self *Var0 *Var1 *Var2 )
  954:  		Add   *Var0  00000028
  964:  		Set   *Var1  00000000
  974:  		Call  SetActorJumpGravity   ( .Actor:Self *Fixed[0.8] )
  988:  		Call  SetGoalPos    ( .Actor:Self *Var0 *Var1 *Var2 )
  9A4:  		Call  JumpToGoal    ( .Actor:Self  20` .False .True .False )
  9C4:  		Call  PlaySoundAtActor      ( .Actor:Self 000020E4 )
  9D8:  		Call  SetAnimation  ( .Actor:Self 00000001 003B0210 )
  9F0:  		Wait  10`
  9FC:  		Call  PlaySoundAtActor      ( .Actor:Self 000020C3 )
  A10:  		Call  AddActorDecoration    ( .Actor:Self 00000001 00000000 .Decoration:Sweat )
  A2C:  		Call  RandInt       ( 00000064 *Var0 )
  A40:  		If  *Var0  <  00000032
  A50:  			Call  SetAnimation  ( .Actor:Self 00000001 003B0211 )
  A68:  		Else
  A70:  			Call  SetAnimation  ( .Actor:Self 00000001 003B0213 )
  A88:  		EndIf
  A90:  		Wait  25`
  A9C:  		Call  RemoveActorDecoration ( .Actor:Self 00000001 00000000 )
  AB4:  		Call  SetActorYaw   ( .Actor:Self  180` )
  AC8:  		Label  2
  AD4:  		Call  SetActorSpeed ( .Actor:Self *Fixed[6.0] )
  AE8:  		SetConst  *Var0  00000001
  AF8:  		SetConst  *Var1  003B0204
  B08:  		ExecWait  DoReturnHome
  B14:  		Call  SetActorYaw   ( .Actor:Self  0` )
  B28:  		Call  SetAnimation  ( .Actor:Self 00000001 003B0201 )
  B40:  	EndCaseGroup
  B48:  EndSwitch
  B50:  Call  EnableIdleScript  ( .Actor:Self 00000001 )
  B64:  Call  UseIdleAnimation  ( .Actor:Self .True )
  B78:  Return
  B80:  End
}

#new:Script $Script_TakeTurn_802218B4
{
    0:  Call  RandInt   ( 00000001 *Var0 )
   14:  If  *Var0  ==  00000000
   24:  	ExecWait  $Script_80220604
   30:  Else
   38:  	ExecWait  $Script_80220D2C
   44:  EndIf
   4C:  Return
   54:  End
}

#new:DefenseTable $DefenseTable_80221910
{
	.Element:Normal 00000000
	.Element:End
}

#new:StatusTable $StatusTable_8022191C
{
	.Status:Normal      0`
	.Status:Default     0`
	.Status:Sleep      50`
	.Status:Poison      0`
	.Status:Frozen      0`
	.Status:Dizzy      50`
	.Status:Fear        0`
	.Status:Static      0`
	.Status:Paralyze   60`
	.Status:Shrink     50`
	.Status:Stop       50`
	.Status:DefaultTurnMod    0`
	.Status:SleepTurnMod     -1`
	.Status:PoisonTurnMod     0`
	.Status:FrozenTurnMod     0`
	.Status:DizzyTurnMod     -1`
	.Status:FearTurnMod       0`
	.Status:StaticTurnMod     0`
	.Status:ParalyzeTurnMod   0`
	.Status:ShrinkTurnMod    -1`
	.Status:StopTurnMod      -2`
	.Status:End
}

#new:PartsTable $PartsTable_802219C8
{
	00800000 01000000 001800FF $IdleAnimations_80221A14 $DefenseTable_80221910 00000000 00000000 FFF60000 00000000
}

#new:Actor $AntiGuy
{
	% stats
	[Index]        AFb
	[Level]        42`b
	[MaxHP]        50`b
	[Coins]         0`b
	[Flags]       00000000
	[StatusTable] $StatusTable_8022191C
	% ai
	[PartsCount]    1`s
	[PartsTable]  $PartsTable_802219C8
	[Script]      $Script_Init_80221A60
	% move effectiveness
	[Escape]       50`b
	[Item]          0`b
	[AirLift]       0`b
	[Hurricane]     0`b % Bow's "Spook" as well
	[UpAndAway]     0`b
	[PowerBounce]  75`b
	[SpinSmash]     0`b % weight (0-4)
	% ui positions
	[Size]         30`b  30`b % width height
	[HealthBar]     0`b   0`b % dx dy
	[StatusTurn]  -10`b  20`b % dx dy
	[StatusIcon]   10`b  20`b % dx dy
}

#new:IdleAnimations $IdleAnimations_80221A14
{
	.Status:Normal    003B0501
	.Status:Stone     003B0500
	.Status:Sleep     003B0512
	.Status:Poison    003B0501
	.Status:Stop      003B0500
	.Status:Static    003B0501
	.Status:Paralyze  003B0500
	.Status:Dizzy     003B0513
	.Status:Fear      003B0513
	.Status:End
}

#new:Script $Script_Init_80221A60
{
    0:  Call  BindTakeTurn      ( .Actor:Self $Script_TakeTurn_802233AC )
   14:  Call  BindIdle  ( .Actor:Self $Script_Idle_80221AAC )
   28:  Call  BindHandleEvent   ( .Actor:Self $Script_HandleEvent_80221C20 )
   3C:  Return
   44:  End
}

#new:Script $Script_Idle_80221AAC
{
    0:  Label  0
    C:  Call  GetStatusFlags    ( .Actor:Self *Var0 )
   20:  If  *Var0  &  ~Flags:StatusFlags:Sleep % 1000
   30:  	Call  SetTargetOffset       ( .Actor:Self 00000001  -4`  14` )
   4C:  	Call  8027D4C8  ( FFFFFF81 00000001 00000000 00000000 )
   68:  	Call  $Function_80218410    ( FFFFFFF6 0000000D 0000000A 0000000D )
   84:  Else
   8C:  	Call  SetTargetOffset       ( .Actor:Self 00000001  0`  24` )
   A8:  	Call  8027D4C8  ( FFFFFF81 00000001 FFFFFFFF FFFFFFF6 )
   C4:  	Call  $Function_80218410    ( FFFFFFF6 00000014 0000000A 00000014 )
   E0:  EndIf
   E8:  Wait  1`
   F4:  Goto  0
  100:  Return
  108:  End
}

#new:Script $Script_80221BBC
{
    0:  Call  ResetAllActorSounds   ( .Actor:Self )
   10:  SetConst  *Var0  00000001
   20:  SetConst  *Var1  003B0503
   30:  ExecWait  DoReturnHome
   3C:  Call  SetAnimation  ( .Actor:Self 00000001 003B0501 )
   54:  Return
   5C:  End
}

#new:Script $Script_HandleEvent_80221C20
{
    0:  Call  UseIdleAnimation  ( .Actor:Self .False )
   14:  Call  GetLastEvent      ( .Actor:Self *Var0 )
   28:  Switch  *Var0
   34:  	CaseOR  ==  .Event:HitCombo % 9
   40:  	CaseOR  ==  .Event:Hit % A
   4C:  		SetConst  *Var0  00000001
   5C:  		SetConst  *Var1  003B050C
   6C:  		ExecWait  DoNormalHit
   78:  	EndCaseGroup
   80:  	Case  ==  .Event:BurnHit % E
   8C:  		SetConst  *Var0  00000001
   9C:  		SetConst  *Var1  003B050D
   AC:  		SetConst  *Var2  003B050E
   BC:  		ExecWait  DoBurnHit
   C8:  	Case  ==  .Event:BurnDeath % 24
   D4:  		SetConst  *Var0  00000001
   E4:  		SetConst  *Var1  003B050D
   F4:  		SetConst  *Var2  003B050E
  104:  		ExecWait  DoBurnHit
  110:  		SetConst  *Var0  00000001
  120:  		SetConst  *Var1  003B050E
  130:  		ExecWait  DoDeath
  13C:  		Return
  144:  	Case  ==  .Event:SpinSmashHit % B
  150:  		SetConst  *Var0  00000001
  160:  		SetConst  *Var1  003B050C
  170:  		ExecWait  DoSpinSmashHit
  17C:  	Case  ==  .Event:SpinSmashDeath % 21
  188:  		SetConst  *Var0  00000001
  198:  		SetConst  *Var1  003B050C
  1A8:  		ExecWait  DoSpinSmashHit
  1B4:  		SetConst  *Var0  00000001
  1C4:  		SetConst  *Var1  003B050C
  1D4:  		ExecWait  DoDeath
  1E0:  		Return
  1E8:  	Case  ==  .Event:ShockHit % 2F
  1F4:  		SetConst  *Var0  00000001
  204:  		SetConst  *Var1  003B050C
  214:  		ExecWait  DoShockHit
  220:  		SetConst  *Var0  00000001
  230:  		SetConst  *Var1  003B050C
  240:  		ExecWait  DoJumpBack
  24C:  		Call  SetActorSpeed ( .Actor:Self *Fixed[4.0] )
  260:  		ExecWait  $Script_80221BBC
  26C:  	Case  ==  .Event:ShockDeath % 26
  278:  		SetConst  *Var0  00000001
  288:  		SetConst  *Var1  003B050C
  298:  		ExecWait  DoShockHit
  2A4:  		SetConst  *Var0  00000001
  2B4:  		SetConst  *Var1  003B050C
  2C4:  		ExecWait  DoDeath
  2D0:  		Return
  2D8:  	CaseOR  ==  00000017 % 17
  2E4:  	CaseOR  ==  .Event:Immune % 19
  2F0:  	CaseOR  ==  .Event:AirLiftFailed % 1F
  2FC:  		SetConst  *Var0  00000001
  30C:  		SetConst  *Var1  003B0501
  31C:  		ExecWait  DoImmune
  328:  	EndCaseGroup
  330:  	Case  ==  .Event:Death % 20
  33C:  		SetConst  *Var0  00000001
  34C:  		SetConst  *Var1  003B050C
  35C:  		ExecWait  DoNormalHit
  368:  		Wait  10`
  374:  		SetConst  *Var0  00000001
  384:  		SetConst  *Var1  003B050C
  394:  		ExecWait  DoDeath
  3A0:  		Return
  3A8:  	Case  ==  .Event:RecoverStatus % 31
  3B4:  		SetConst  *Var0  00000001
  3C4:  		SetConst  *Var1  003B0501
  3D4:  		ExecWait  DoRecover
  3E0:  	Case  ==  .Event:ScareAway % 39
  3EC:  		SetConst  *Var0  00000001
  3FC:  		SetConst  *Var1  003B0503
  40C:  		SetConst  *Var2  003B0514
  41C:  		ExecWait  DoScareAway
  428:  		Return
  430:  	Case  ==  .Event:BeginAirLift % 3A
  43C:  		SetConst  *Var0  00000001
  44C:  		SetConst  *Var1  003B050C
  45C:  		ExecWait  DoAirLift
  468:  	Case  ==  .Event:BlowAway % 16
  474:  		SetConst  *Var0  00000001
  484:  		SetConst  *Var1  003B050C
  494:  		ExecWait  DoBlowAway
  4A0:  		Return
  4A8:  	Default
  4B0:  EndSwitch
  4B8:  Call  UseIdleAnimation  ( .Actor:Self .True )
  4CC:  Return
  4D4:  End
}

#new:Script $Script_802220FC
{
    0:  Call  UseIdleAnimation  ( .Actor:Self .False )
   14:  Call  EnableIdleScript  ( .Actor:Self 00000000 )
   28:  Call  SetTargetActor    ( .Actor:Self .Actor:Player )
   3C:  Call  UseBattleCamPreset    ( 0000003F )
   4C:  Call  BattleCamTargetActor  ( .Actor:Self )
   5C:  Call  MoveBattleCamOver (  20` )
   6C:  Call  8024ECF8  ( FFFFFFFF 00000001 00000000 )
   84:  Call  SetAnimation      ( .Actor:Self 00000001 003B0503 )
   9C:  Call  SetActorSpeed     ( .Actor:Self *Fixed[4.0] )
   B0:  Call  SetGoalToTarget   ( .Actor:Self )
   C0:  Call  GetGoalPos        ( .Actor:Self *Var0 *Var1 *Var2 )
   DC:  Add   *Var0  00000032
   EC:  Set   *Var1  00000000
   FC:  Call  SetGoalPos        ( .Actor:Self *Var0 *Var1 *Var2 )
  118:  Call  RunToGoal ( .Actor:Self  0` .False )
  130:  Call  EnemyTestTarget   ( .Actor:Self *Var0 ~Flags:DamageType:0 00000000 00000001 00000010 )
  154:  Switch  *Var0
  160:  	CaseOR  ==  .HitResult:Miss % 6
  16C:  	CaseOR  ==  .HitResult:Lucky % 5
  178:  		Set   *VarA  *Var0
  188:  		Call  SetActorSounds    ( .Actor:Self .ActorSound:Jump 000002EF 00000000 )
  1A4:  		Call  SetActorSounds    ( .Actor:Self .ActorSound:Walk 000020BA 000003B4 )
  1C0:  		Call  SetActorSounds    ( .Actor:Self .ActorSound:WalkIncrement 0000000A 00000000 )
  1DC:  		Call  SetActorSpeed ( .Actor:Self *Fixed[6.0] )
  1F0:  		Call  SetAnimation  ( .Actor:Self 00000001 003B0504 )
  208:  		Call  SetGoalToTarget   ( .Actor:Self )
  218:  		Call  RunToGoal     ( .Actor:Self  0` .False )
  230:  		Call  SetAnimation  ( .Actor:Self 00000001 003B0505 )
  248:  		Call  SetActorSpeed ( .Actor:Self *Fixed[6.0] )
  25C:  		Call  SetActorJumpGravity   ( .Actor:Self *Fixed[0.5] )
  270:  		Call  GetActorPos   ( .Actor:Self *Var0 *Var1 *Var2 )
  28C:  		Sub   *Var0  0000001E
  29C:  		Call  SetGoalPos    ( .Actor:Self *Var0 *Var1 *Var2 )
  2B8:  		Call  JumpToGoal    ( .Actor:Self  8` .False .True .False )
  2D8:  		If  *VarA  ==  .HitResult:Lucky % 5
  2E8:  			Call  EnemyTestTarget   ( .Actor:Self *VarA ~Flags:DamageType:TriggerLucky 00000000 00000000 00000000 )
  30C:  		EndIf
  314:  		Call  ResetAllActorSounds   ( .Actor:Self )
  324:  		Sub   *Var0  00000014
  334:  		Call  SetGoalPos        ( .Actor:Self *Var0 *Var1 *Var2 )
  350:  		Call  JumpToGoal        ( .Actor:Self  8` .False .True .False )
  370:  		Wait  15`
  37C:  		Call  UseBattleCamPreset    ( 00000002 )
  38C:  		Call  SetActorYaw       ( .Actor:Self  180` )
  3A0:  		Call  AddActorDecoration    ( .Actor:Self 00000001 00000000 .Decoration:Sweat )
  3BC:  		Call  SetActorSpeed     ( .Actor:Self *Fixed[4.0] )
  3D0:  		SetConst  *Var0  00000001
  3E0:  		SetConst  *Var1  003B0504
  3F0:  		ExecWait  DoReturnHome
  3FC:  		Call  RemoveActorDecoration ( .Actor:Self 00000001 00000000 )
  414:  		Call  SetActorYaw       ( .Actor:Self  0` )
  428:  		Call  SetAnimation      ( .Actor:Self 00000001 003B0501 )
  440:  		Call  EnableIdleScript  ( .Actor:Self 00000001 )
  454:  		Call  UseIdleAnimation  ( .Actor:Self .True )
  468:  		Return
  470:  	EndCaseGroup
  478:  EndSwitch
  480:  Thread
  488:  	Wait  3`
  494:  	Call  PlaySoundAtActor  ( .Actor:Self 000002EF )
  4A8:  EndThread
  4B0:  Call  SetActorSounds    ( .Actor:Self .ActorSound:Walk 000020BA 000003B4 )
  4CC:  Call  SetActorSounds    ( .Actor:Self .ActorSound:WalkIncrement 0000000A 00000000 )
  4E8:  Call  SetActorSpeed     ( .Actor:Self *Fixed[6.0] )
  4FC:  Call  SetAnimation      ( .Actor:Self 00000001 003B0504 )
  514:  Call  SetGoalToTarget   ( .Actor:Self )
  524:  Call  GetGoalPos        ( .Actor:Self *Var0 *Var1 *Var2 )
  540:  Add   *Var0  0000000A
  550:  Set   *Var1  00000000
  560:  Call  SetGoalPos        ( .Actor:Self *Var0 *Var1 *Var2 )
  57C:  Call  RunToGoal ( .Actor:Self  0` .False )
  594:  Call  SetAnimation      ( .Actor:Self 00000001 003B0505 )
  5AC:  Wait  2`
  5B8:  Call  SetGoalToTarget   ( .Actor:Self )
  5C8:  Call  EnemyDamageTarget ( .Actor:Self *Var0 ~Flags:DamageType:0 00000000 00000000 0000000A 00000020 )
  5F0:  Call  ResetAllActorSounds   ( .Actor:Self )
  600:  Call  UseBattleCamPreset    ( 00000002 )
  610:  Call  MoveBattleCamOver (  15` )
  620:  Call  GetGoalPos        ( .Actor:Self *Var0 *Var1 *Var2 )
  63C:  Add   *Var0  0000001E
  64C:  Set   *Var1  00000000
  65C:  Call  SetActorJumpGravity   ( .Actor:Self *Fixed[1.8] )
  670:  Call  SetGoalPos        ( .Actor:Self *Var0 *Var1 *Var2 )
  68C:  Call  JumpToGoal        ( .Actor:Self  10` .False .True .False )
  6AC:  Call  SetAnimation      ( .Actor:Self 00000001 003B0501 )
  6C4:  Wait  8`
  6D0:  Call  SetActorSpeed     ( .Actor:Self *Fixed[6.0] )
  6E4:  ExecWait  $Script_80221BBC
  6F0:  Call  EnableIdleScript  ( .Actor:Self 00000001 )
  704:  Call  UseIdleAnimation  ( .Actor:Self .True )
  718:  Return
  720:  End
}

#new:Script $Script_80222824
{
    0:  Call  UseIdleAnimation  ( .Actor:Self .False )
   14:  Call  EnableIdleScript  ( .Actor:Self 00000000 )
   28:  Call  SetTargetActor    ( .Actor:Self .Actor:Player )
   3C:  Call  UseBattleCamPreset    ( 0000003F )
   4C:  Call  BattleCamTargetActor  ( .Actor:Self )
   5C:  Call  MoveBattleCamOver (  20` )
   6C:  Call  8024ECF8  ( FFFFFFFF 00000001 00000000 )
   84:  Call  PlaySoundAtActor  ( .Actor:Self 00000234 )
   98:  Call  SetAnimation      ( .Actor:Self 00000001 003B0509 )
   B0:  Wait  20`
   BC:  Call  SetAnimation      ( .Actor:Self 00000001 003B0503 )
   D4:  Call  SetActorSpeed     ( .Actor:Self *Fixed[3.0] )
   E8:  Call  SetGoalToTarget   ( .Actor:Self )
   F8:  Call  GetGoalPos        ( .Actor:Self *Var0 *Var1 *Var2 )
  114:  Add   *Var0  00000050
  124:  Set   *Var1  00000000
  134:  Call  SetGoalPos        ( .Actor:Self *Var0 *Var1 *Var2 )
  150:  Call  RunToGoal ( .Actor:Self  0` .False )
  168:  Call  SetActorSounds    ( .Actor:Self .ActorSound:Walk 000020BA 000003B4 )
  184:  Call  SetActorSounds    ( .Actor:Self .ActorSound:WalkIncrement 0000000A 00000000 )
  1A0:  Call  SetAnimation      ( .Actor:Self 00000001 003B0504 )
  1B8:  Call  SetActorSpeed     ( .Actor:Self *Fixed[5.0] )
  1CC:  Sub   *Var0  00000028
  1DC:  Call  SetGoalPos        ( .Actor:Self *Var0 *Var1 *Var2 )
  1F8:  Call  RunToGoal ( .Actor:Self  0` .False )
  210:  Call  EnemyTestTarget   ( .Actor:Self *Var0 ~Flags:DamageType:0 00000000 00000001 00000010 )
  234:  Switch  *Var0
  240:  	CaseOR  ==  .HitResult:Miss % 6
  24C:  	CaseOR  ==  .HitResult:Lucky % 5
  258:  		Set   *VarA  *Var0
  268:  		Call  SetActorSpeed ( .Actor:Self *Fixed[6.0] )
  27C:  		Call  SetAnimation  ( .Actor:Self 00000001 003B0509 )
  294:  		Thread
  29C:  			Wait  12`
  2A8:  			Call  SetAnimation  ( .Actor:Self 00000001 003B050A )
  2C0:  		EndThread
  2C8:  		Call  SetActorJumpGravity   ( .Actor:Self *Fixed[0.8] )
  2DC:  		Call  SetGoalToTarget   ( .Actor:Self )
  2EC:  		Call  GetGoalPos        ( .Actor:Self *Var0 *Var1 *Var2 )
  308:  		Sub   *Var0  0000000A
  318:  		Set   *Var1  00000000
  328:  		Call  SetGoalPos        ( .Actor:Self *Var0 *Var1 *Var2 )
  344:  		Call  JumpToGoal        ( .Actor:Self  24` .False .True .False )
  364:  		If  *VarA  ==  .HitResult:Lucky % 5
  374:  			Call  EnemyTestTarget   ( .Actor:Self *Var0 ~Flags:DamageType:TriggerLucky 00000000 00000000 00000000 )
  398:  		EndIf
  3A0:  		Call  SetAnimation  ( .Actor:Self 00000001 003B0505 )
  3B8:  		Call  SetActorSpeed ( .Actor:Self *Fixed[6.0] )
  3CC:  		Call  SetActorJumpGravity   ( .Actor:Self *Fixed[0.5] )
  3E0:  		Call  GetActorPos   ( .Actor:Self *Var0 *Var1 *Var2 )
  3FC:  		Sub   *Var0  0000001E
  40C:  		Call  SetGoalPos    ( .Actor:Self *Var0 *Var1 *Var2 )
  428:  		Call  JumpToGoal    ( .Actor:Self  8` .False .True .False )
  448:  		Sub   *Var0  00000014
  458:  		Call  SetGoalPos    ( .Actor:Self *Var0 *Var1 *Var2 )
  474:  		Call  JumpToGoal    ( .Actor:Self  8` .False .True .False )
  494:  		Wait  15`
  4A0:  		Call  UseBattleCamPreset    ( 00000002 )
  4B0:  		Call  MoveBattleCamOver     (  15` )
  4C0:  		Call  SetActorYaw   ( .Actor:Self  180` )
  4D4:  		Call  AddActorDecoration    ( .Actor:Self 00000001 00000000 .Decoration:Sweat )
  4F0:  		Call  SetActorSpeed ( .Actor:Self *Fixed[6.0] )
  504:  		SetConst  *Var0  00000001
  514:  		SetConst  *Var1  003B0504
  524:  		ExecWait  DoReturnHome
  530:  		Call  RemoveActorDecoration ( .Actor:Self 00000001 00000000 )
  548:  		Call  SetActorYaw   ( .Actor:Self  0` )
  55C:  		Call  SetAnimation  ( .Actor:Self 00000001 003B0501 )
  574:  		Call  EnableIdleScript      ( .Actor:Self 00000001 )
  588:  		Call  UseIdleAnimation      ( .Actor:Self .True )
  59C:  		Return
  5A4:  	EndCaseGroup
  5AC:  EndSwitch
  5B4:  Call  SetActorSpeed ( .Actor:Self *Fixed[6.0] )
  5C8:  Call  SetAnimation  ( .Actor:Self 00000001 003B0509 )
  5E0:  Thread
  5E8:  	Wait  9`
  5F4:  	Call  SetAnimation  ( .Actor:Self 00000001 003B050A )
  60C:  EndThread
  614:  Call  SetActorJumpGravity   ( .Actor:Self *Fixed[0.8] )
  628:  Call  SetGoalToTarget   ( .Actor:Self )
  638:  Call  JumpToGoal        ( .Actor:Self  18` .False .True .False )
  658:  Wait  2`
  664:  Call  EnemyDamageTarget ( .Actor:Self *Var0 ~Flags:DamageType:0 00000000 00000000 0000000C 00000020 )
  68C:  Switch  *Var0
  698:  	CaseOR  ==  .HitResult:Hit % 0
  6A4:  	CaseOR  ==  .HitResult:QuakeImmune % 2
  6B0:  		Call  UseBattleCamPreset    ( 00000002 )
  6C0:  		Call  MoveBattleCamOver     (  15` )
  6D0:  		Thread
  6D8:  			Call  SetActorRotationOffset    ( .Actor:Self 00000000 0000000E 00000000 )
  6F4:  			Set   *Var3  00000000
  704:  			Loop  00000014
  710:  				Sub   *Var3  0000001E
  720:  				If  *Var3  <  00000000
  730:  					Add   *Var3  00000168
  740:  				EndIf
  748:  				Call  SetActorRotation  ( .Actor:Self 00000000 00000000 *Var3 )
  764:  				Wait  1`
  770:  			EndLoop
  778:  			Call  SetActorRotation  ( .Actor:Self 00000000 00000000 00000000 )
  794:  			Call  SetActorRotationOffset    ( .Actor:Self 00000000 00000000 00000000 )
  7B0:  		EndThread
  7B8:  		Call  GetBattleFlags    ( *Var0 )
  7C8:  		If  *Var0  &  80000000
  7D8:  			Goto  1
  7E4:  		EndIf
  7EC:  		Call  GetLastDamage ( .Actor:Player *Var0 )
  800:  		If  *Var0  ==  00000000
  810:  			Goto  1
  81C:  		EndIf
  824:  		Call  GetGoalPos    ( .Actor:Self *Var0 *Var1 *Var2 )
  840:  		Add   *Var0  00000028
  850:  		Set   *Var1  00000000
  860:  		Call  SetActorJumpGravity   ( .Actor:Self *Fixed[0.8] )
  874:  		Call  SetGoalPos    ( .Actor:Self *Var0 *Var1 *Var2 )
  890:  		Call  JumpToGoal    ( .Actor:Self  20` .False .True .False )
  8B0:  		Call  PlaySoundAtActor      ( .Actor:Self 00000349 )
  8C4:  		Call  PlaySoundAtActor      ( .Actor:Self 00000749 )
  8D8:  		Call  SetAnimation  ( .Actor:Self 00000001 003B0509 )
  8F0:  		Wait  10`
  8FC:  		Call  SetAnimation  ( .Actor:Self 00000001 003B0507 )
  914:  		Wait  15`
  920:  		Goto  2
  92C:  		Label  1
  938:  		Call  GetGoalPos    ( .Actor:Self *Var0 *Var1 *Var2 )
  954:  		Add   *Var0  00000028
  964:  		Set   *Var1  00000000
  974:  		Call  SetActorJumpGravity   ( .Actor:Self *Fixed[0.8] )
  988:  		Call  SetGoalPos    ( .Actor:Self *Var0 *Var1 *Var2 )
  9A4:  		Call  JumpToGoal    ( .Actor:Self  20` .False .True .False )
  9C4:  		Call  PlaySoundAtActor      ( .Actor:Self 000020E4 )
  9D8:  		Call  SetAnimation  ( .Actor:Self 00000001 003B0510 )
  9F0:  		Wait  10`
  9FC:  		Call  PlaySoundAtActor      ( .Actor:Self 000020C3 )
  A10:  		Call  AddActorDecoration    ( .Actor:Self 00000001 00000000 .Decoration:Sweat )
  A2C:  		Call  RandInt       ( 00000064 *Var0 )
  A40:  		If  *Var0  <  00000032
  A50:  			Call  SetAnimation  ( .Actor:Self 00000001 003B0511 )
  A68:  		Else
  A70:  			Call  SetAnimation  ( .Actor:Self 00000001 003B0513 )
  A88:  		EndIf
  A90:  		Wait  25`
  A9C:  		Call  RemoveActorDecoration ( .Actor:Self 00000001 00000000 )
  AB4:  		Call  SetActorYaw   ( .Actor:Self  180` )
  AC8:  		Label  2
  AD4:  		Call  SetActorSpeed ( .Actor:Self *Fixed[6.0] )
  AE8:  		SetConst  *Var0  00000001
  AF8:  		SetConst  *Var1  003B0504
  B08:  		ExecWait  DoReturnHome
  B14:  		Call  SetActorYaw   ( .Actor:Self  0` )
  B28:  		Call  SetAnimation  ( .Actor:Self 00000001 003B0501 )
  B40:  	EndCaseGroup
  B48:  EndSwitch
  B50:  Call  EnableIdleScript  ( .Actor:Self 00000001 )
  B64:  Call  UseIdleAnimation  ( .Actor:Self .True )
  B78:  Return
  B80:  End
}

#new:Script $Script_TakeTurn_802233AC
{
    0:  Call  RandInt   ( 00000001 *Var0 )
   14:  If  *Var0  ==  00000000
   24:  	ExecWait  $Script_802220FC
   30:  Else
   38:  	ExecWait  $Script_80222824
   44:  EndIf
   4C:  Return
   54:  End
}

PADDING: 80223408 to 80223410 (0051D9D8 to 0051D9E0)
00000000 00000000

#new:IdleAnimations $IdleAnimations_80223410
{
	.Status:Normal    00400001
	.Status:Stone     00400000
	.Status:Sleep     00400004
	.Status:Poison    00400001
	.Status:Stop      00400000
	.Status:Static    00400001
	.Status:Paralyze  00400000
	.Status:Dizzy     0040000A
	.Status:Fear      0040000A
	.Status:End
}

#new:DefenseTable $DefenseTable_8022345C
{
	.Element:Normal 00000000
	.Element:Shock  00000000
	.Element:End
}

#new:StatusTable $StatusTable_80223470
{
	.Status:Normal      0`
	.Status:Default     0`
	.Status:Sleep      70`
	.Status:Poison     50`
	.Status:Frozen      0`
	.Status:Dizzy      90`
	.Status:Fear      100`
	.Status:Static     50`
	.Status:Paralyze   90`
	.Status:Shrink     75`
	.Status:Stop       90`
	.Status:DefaultTurnMod    0`
	.Status:SleepTurnMod      0`
	.Status:PoisonTurnMod     0`
	.Status:FrozenTurnMod     0`
	.Status:DizzyTurnMod      1`
	.Status:FearTurnMod       0`
	.Status:StaticTurnMod     0`
	.Status:ParalyzeTurnMod   1`
	.Status:ShrinkTurnMod     0`
	.Status:StopTurnMod       0`
	.Status:End
}

#new:PartsTable $PartsTable_8022351C
{
	00800000 01000000 FE2600FF $IdleAnimations_80223410 $DefenseTable_8022345C 00000000 00000000 FFFB0000 00000000
}

#new:Actor $MediGuy
{
	% stats
	[Index]        22b
	[Level]        14`b
	[MaxHP]         7`b
	[Coins]         2`b
	[Flags]       00000200
	[StatusTable] $StatusTable_80223470
	% ai
	[PartsCount]    1`s
	[PartsTable]  $PartsTable_8022351C
	[Script]      $Script_Init_80223568
	% move effectiveness
	[Escape]       60`b
	[Item]         70`b
	[AirLift]      90`b
	[Hurricane]    95`b % Bow's "Spook" as well
	[UpAndAway]    95`b
	[PowerBounce]  90`b
	[SpinSmash]     0`b % weight (0-4)
	% ui positions
	[Size]         24`b  40`b % width height
	[HealthBar]     0`b   0`b % dx dy
	[StatusTurn]  -10`b  20`b % dx dy
	[StatusIcon]   12`b  31`b % dx dy
}

#new:Script $Script_Init_80223568
{
    0:  Call  BindTakeTurn  ( .Actor:Self $Script_TakeTurn_8022494C )
   14:  Call  BindIdle      ( .Actor:Self $Script_Idle_8022360C )
   28:  Call  BindHandleEvent   ( .Actor:Self $Script_HandleEvent_802237E0 )
   3C:  Call  GetActorPos   ( .Actor:Self *Var0 *Var1 *Var2 )
   58:  Sub   *Var1  00000005
   68:  Call  ForceHomePos  ( .Actor:Self *Var0 *Var1 *Var2 )
   84:  Call  HPBarToHome   ( .Actor:Self )
   94:  Return
   9C:  End
}

#new:Script $Script_Idle_8022360C
{
    0:  Label  0
    C:  Call  GetStatusFlags    ( .Actor:Self *Var0 )
   20:  If  *Var0  &  ~Flags:StatusFlags:Sleep % 1000
   30:  	Call  SetTargetOffset       ( .Actor:Self 00000001  -2`  24` )
   4C:  	Call  8027D4C8  ( FFFFFF81 00000001 FFFFFFFF FFFFFFFB )
   68:  	Call  $Function_802184E0    ( FFFFFFF6 00000014 0000000A 00000014 )
   84:  Else
   8C:  	Call  SetTargetOffset       ( .Actor:Self 00000001  -2`  38` )
   A8:  	Call  8027D4C8  ( FFFFFF81 00000001 FFFFFFFF FFFFFFFB )
   C4:  	Call  $Function_802184E0    ( FFFFFFF6 00000014 0000000C 0000001F )
   E0:  EndIf
   E8:  Wait  1`
   F4:  Goto  0
  100:  Return
  108:  End
}

#new:Script $Script_8022371C
{
    0:  Call  ResetAllActorSounds   ( .Actor:Self )
   10:  Call  SetPartRotation       ( .Actor:Self 00000001 00000000 00000000 00000000 )
   30:  Call  SetActorYaw   ( .Actor:Self  180` )
   44:  Call  SetAnimation  ( .Actor:Self 00000001 00400003 )
   5C:  Call  SetGoalToHome ( .Actor:Self )
   6C:  Call  FlyToGoal     ( .Actor:Self  0`  1` .Easing:Linear )
   88:  Call  SetAnimation  ( .Actor:Self 00000001 00400001 )
   A0:  Call  SetActorYaw   ( .Actor:Self  0` )
   B4:  Return
   BC:  End
}

#new:Script $Script_HandleEvent_802237E0
{
    0:  Call  UseIdleAnimation  ( .Actor:Self .False )
   14:  Call  EnableIdleScript  ( .Actor:Self 00000000 )
   28:  Call  GetLastEvent      ( .Actor:Self *Var0 )
   3C:  Switch  *Var0
   48:  	CaseOR  ==  .Event:HitCombo % 9
   54:  	CaseOR  ==  .Event:Hit % A
   60:  		SetConst  *Var0  00000001
   70:  		SetConst  *Var1  00400006
   80:  		ExecWait  DoNormalHit
   8C:  	EndCaseGroup
   94:  	Case  ==  .Event:BurnHit % E
   A0:  		SetConst  *Var0  00000001
   B0:  		SetConst  *Var1  00400008
   C0:  		SetConst  *Var2  00400009
   D0:  		ExecWait  DoBurnHit
   DC:  	Case  ==  .Event:BurnDeath % 24
   E8:  		SetConst  *Var0  00000001
   F8:  		SetConst  *Var1  00400008
  108:  		SetConst  *Var2  00400009
  118:  		ExecWait  DoBurnHit
  124:  		SetConst  *Var0  00000001
  134:  		SetConst  *Var1  00400009
  144:  		ExecWait  DoDeath
  150:  		Return
  158:  	Case  ==  .Event:SpinSmashHit % B
  164:  		SetConst  *Var0  00000001
  174:  		SetConst  *Var1  00400006
  184:  		ExecWait  DoSpinSmashHit
  190:  	Case  ==  .Event:SpinSmashDeath % 21
  19C:  		SetConst  *Var0  00000001
  1AC:  		SetConst  *Var1  00400006
  1BC:  		ExecWait  DoSpinSmashHit
  1C8:  		SetConst  *Var0  00000001
  1D8:  		SetConst  *Var1  00400007
  1E8:  		ExecWait  DoDeath
  1F4:  		Return
  1FC:  	Case  ==  .Event:ShockHit % 2F
  208:  		SetConst  *Var0  00000001
  218:  		SetConst  *Var1  00400006
  228:  		ExecWait  DoShockHit
  234:  		SetConst  *Var0  00000001
  244:  		SetConst  *Var1  00400006
  254:  		ExecWait  DoJumpBack
  260:  		Call  SetActorSpeed ( .Actor:Self *Fixed[4.0] )
  274:  		ExecWait  $Script_8022371C
  280:  	Case  ==  .Event:ShockDeath % 26
  28C:  		SetConst  *Var0  00000001
  29C:  		SetConst  *Var1  00400006
  2AC:  		ExecWait  DoShockHit
  2B8:  		Call  SetPartRotation   ( .Actor:Self 00000001 00000000 00000000 00000000 )
  2D8:  		SetConst  *Var0  00000001
  2E8:  		SetConst  *Var1  00400007
  2F8:  		ExecWait  DoDeath
  304:  		Return
  30C:  	CaseOR  ==  00000017 % 17
  318:  	CaseOR  ==  .Event:Immune % 19
  324:  	CaseOR  ==  .Event:AirLiftFailed % 1F
  330:  		SetConst  *Var0  00000001
  340:  		SetConst  *Var1  00400001
  350:  		ExecWait  DoImmune
  35C:  	EndCaseGroup
  364:  	Case  ==  .Event:Death % 20
  370:  		SetConst  *Var0  00000001
  380:  		SetConst  *Var1  00400006
  390:  		ExecWait  DoNormalHit
  39C:  		Wait  10`
  3A8:  		SetConst  *Var0  00000001
  3B8:  		SetConst  *Var1  00400007
  3C8:  		ExecWait  DoDeath
  3D4:  		Return
  3DC:  	Case  ==  .Event:BeginFirstStrike % 38
  3E8:  		Call  SetActorPos       ( .Actor:Self  20`  0`  0` )
  404:  		Call  HPBarToCurrent    ( .Actor:Self )
  414:  	Case  ==  .Event:EndFirstStrike % 35
  420:  		Call  SetActorSpeed ( .Actor:Self *Fixed[6.0] )
  434:  		ExecWait  $Script_8022371C
  440:  		Call  HPBarToHome   ( .Actor:Self )
  450:  	Case  ==  .Event:RecoverStatus % 31
  45C:  		SetConst  *Var0  00000001
  46C:  		SetConst  *Var1  00400001
  47C:  		ExecWait  DoRecover
  488:  	Case  ==  .Event:ScareAway % 39
  494:  		Call  SetActorFlagBits  ( .Actor:Self 00000200 .False )
  4AC:  		SetConst  *Var0  00000001
  4BC:  		SetConst  *Var1  00400003
  4CC:  		SetConst  *Var2  0040000B
  4DC:  		ExecWait  DoScareAway
  4E8:  		Return
  4F0:  	Case  ==  .Event:BeginAirLift % 3A
  4FC:  		SetConst  *Var0  00000001
  50C:  		SetConst  *Var1  00400006
  51C:  		ExecWait  DoAirLift
  528:  	Case  ==  .Event:BlowAway % 16
  534:  		SetConst  *Var0  00000001
  544:  		SetConst  *Var1  00400006
  554:  		ExecWait  DoBlowAway
  560:  		Return
  568:  	Default
  570:  EndSwitch
  578:  Call  EnableIdleScript  ( .Actor:Self 00000001 )
  58C:  Call  UseIdleAnimation  ( .Actor:Self .True )
  5A0:  Return
  5A8:  End
}

#new:Script $Script_FlyingAttack
{
    0:  Call  UseIdleAnimation  ( .Actor:Self .False )
   14:  Call  EnableIdleScript  ( .Actor:Self 00000000 )
   28:  Call  SetTargetActor    ( .Actor:Self .Actor:Player )
   3C:  Call  UseBattleCamPreset    ( 0000003F )
   4C:  Call  BattleCamTargetActor  ( .Actor:Self )
   5C:  Call  8024ECF8  ( FFFFFFFF 00000001 00000000 )
   74:  Thread
   7C:  	SetF  *Var0  *Fixed[0.0]
   8C:  	Loop  0000000F
   98:  		AddF  *Var0  *Fixed[2.0]
   A8:  		Call  SetPartRotation   ( .Actor:Self 00000001 00000000 00000000 *Var0 )
   C8:  		Wait  1`
   D4:  	EndLoop
   DC:  EndThread
   E4:  Call  SetAnimation  ( .Actor:Self 00000001 00400003 )
   FC:  Call  SetGoalToTarget   ( .Actor:Self )
  10C:  Call  AddGoalPos    ( .Actor:Self  50`  0`  0` )
  128:  Call  SetActorSpeed ( .Actor:Self *Fixed[5.0] )
  13C:  Call  FlyToGoal     ( .Actor:Self  0`  -4` .Easing:CosIn )
  158:  Call  EnemyTestTarget   ( .Actor:Self *VarA ~Flags:DamageType:0 00000000 00000001 00000010 )
  17C:  Switch  *VarA
  188:  	CaseOR  ==  .HitResult:Miss % 6
  194:  	CaseOR  ==  .HitResult:Lucky % 5
  1A0:  		Wait  10`
  1AC:  		Call  PlaySoundAtActor  ( .Actor:Self 000002F8 )
  1C0:  		Call  SetActorSpeed     ( .Actor:Self *Fixed[5.0] )
  1D4:  		Call  SetActorJumpGravity   ( .Actor:Self *Fixed[1.8] )
  1E8:  		Call  SetAnimation      ( .Actor:Self 00000001 00400005 )
  200:  		Call  GetActorPos       ( .Actor:Self *Var0 *Var1 *Var2 )
  21C:  		Call  SetGoalPos        ( .Actor:Self *Var0 *Var1 *Var2 )
  238:  		Call  JumpToGoal        ( .Actor:Self  10` .False .True .False )
  258:  		Call  SetActorSounds    ( .Actor:Self .ActorSound:Fly 00000000 00000000 )
  274:  		Call  PlaySoundAtActor  ( .Actor:Self 000002F9 )
  288:  		Thread
  290:  			Wait  5`
  29C:  			Set   *Var0  00000000
  2AC:  			Loop  0000003C
  2B8:  				Call  $Function_802185AC    ( *Var0 *Var1 0000000F 0000003C *Fixed[30.0] )
  2D8:  				Call  SetPartRotation       ( .Actor:Self 00000001 00000000 00000000 *Var1 )
  2F8:  				Add   *Var0  00000001
  308:  				Wait  1`
  314:  			EndLoop
  31C:  		EndThread
  324:  		Call  SetGoalToTarget   ( .Actor:Self )
  334:  		Call  GetGoalPos    ( .Actor:Self *Var0 *Var1 *Var2 )
  350:  		Sub   *Var0  00000032
  360:  		Add   *Var2  00000001
  370:  		Call  SetGoalPos    ( .Actor:Self *Var0 *Var1 *Var2 )
  38C:  		Call  SetActorSpeed ( .Actor:Self *Fixed[8.0] )
  3A0:  		Call  SetAnimation  ( .Actor:Self 00000001 00400005 )
  3B8:  		Call  FlyToGoal     ( .Actor:Self  0`  -10` .Easing:QuadraticOut )
  3D4:  		If  *VarA  ==  .HitResult:Lucky % 5
  3E4:  			Call  EnemyTestTarget   ( .Actor:Self *Var0 ~Flags:DamageType:TriggerLucky 00000000 00000000 00000000 )
  408:  		EndIf
  410:  		Wait  30`
  41C:  		Call  ResetAllActorSounds   ( .Actor:Self )
  42C:  		Call  UseBattleCamPreset    ( 00000002 )
  43C:  		Call  AddActorDecoration    ( .Actor:Self 00000001 00000000 .Decoration:Sweat )
  458:  		Call  SetActorSpeed ( .Actor:Self *Fixed[10.0] )
  46C:  		ExecWait  $Script_8022371C
  478:  		Call  RemoveActorDecoration ( .Actor:Self 00000001 00000000 )
  490:  		Call  EnableIdleScript      ( .Actor:Self 00000001 )
  4A4:  		Call  UseIdleAnimation      ( .Actor:Self .True )
  4B8:  		Return
  4C0:  	EndCaseGroup
  4C8:  EndSwitch
  4D0:  Wait  10`
  4DC:  Call  PlaySoundAtActor  ( .Actor:Self 000002F8 )
  4F0:  Call  SetActorSpeed ( .Actor:Self *Fixed[5.0] )
  504:  Call  SetActorJumpGravity   ( .Actor:Self *Fixed[1.8] )
  518:  Call  SetAnimation  ( .Actor:Self 00000001 00400005 )
  530:  Call  GetActorPos   ( .Actor:Self *Var0 *Var1 *Var2 )
  54C:  Call  SetGoalPos    ( .Actor:Self *Var0 *Var1 *Var2 )
  568:  Call  JumpToGoal    ( .Actor:Self  10` .False .True .False )
  588:  Set   *VarA  *Var0
  598:  Set   *VarB  *Var1
  5A8:  Set   *VarC  *Var2
  5B8:  Call  SetActorSounds    ( .Actor:Self .ActorSound:Fly 00000000 00000000 )
  5D4:  Call  PlaySoundAtActor  ( .Actor:Self 000002F9 )
  5E8:  Call  SetGoalToTarget   ( .Actor:Self )
  5F8:  Call  GetGoalPos    ( .Actor:Self *Var0 *Var1 *Var2 )
  614:  Add   *Var2  00000001
  624:  Call  SetGoalPos    ( .Actor:Self *Var0 *Var1 *Var2 )
  640:  Call  SetActorSpeed ( .Actor:Self *Fixed[8.0] )
  654:  Call  SetAnimation  ( .Actor:Self 00000001 00400005 )
  66C:  Call  FlyToGoal     ( .Actor:Self  0`  -10` .Easing:QuadraticOut )
  688:  Wait  2`
  694:  Call  EnemyDamageTarget ( .Actor:Self *Var0 ~Flags:DamageType:0 00000000 00000000 00000001 00000020 )
  6BC:  Switch  *Var0
  6C8:  	CaseOR  ==  .HitResult:Hit % 0
  6D4:  	CaseOR  ==  .HitResult:QuakeImmune % 2
  6E0:  		Call  ResetAllActorSounds   ( .Actor:Self )
  6F0:  		Call  UseBattleCamPreset    ( 00000002 )
  700:  		Call  GetActorPos   ( .Actor:Self *Var0 *Var1 *Var2 )
  71C:  		Add   *Var0  0000001E
  72C:  		Call  SetActorJumpGravity   ( .Actor:Self *Fixed[1.0] )
  740:  		Call  SetGoalPos    ( .Actor:Self *Var0 *Var1 *Var2 )
  75C:  		Call  JumpWithBounce        ( .Actor:Self  10` *Fixed[2.0] )
  774:  		Wait  20`
  780:  		Call  SetActorSpeed ( .Actor:Self *Fixed[6.0] )
  794:  		ExecWait  $Script_8022371C
  7A0:  	EndCaseGroup
  7A8:  EndSwitch
  7B0:  Call  EnableIdleScript  ( .Actor:Self 00000001 )
  7C4:  Call  UseIdleAnimation  ( .Actor:Self .True )
  7D8:  Return
  7E0:  End
}

#new:Script $Script_HealOneAlly
{
    0:  Set   *VarA  *Var0
   10:  Call  UseIdleAnimation  ( .Actor:Self .False )
   24:  Call  EnableIdleScript  ( .Actor:Self 00000000 )
   38:  Call  UseBattleCamPreset    ( 0000003F )
   48:  Call  BattleCamTargetActor  ( .Actor:Self )
   58:  Call  GetOwnerID        ( *Var0 )
   68:  Call  GetActorPos       ( *Var0 *Var1 *Var2 *Var3 )
   84:  Call  PlaySoundAtActor  ( .Actor:Self 000002F8 )
   98:  Call  PlaySoundAtActor  ( .Actor:Self 00000214 )
   AC:  Call  PlaySoundAtActor  ( .Actor:Self 00000000 )
   C0:  Call  SetAnimation      ( .Actor:Self 00000001 00400005 )
   D8:  Add   *Var2  00000032
   E8:  Call  PlayEffect        ( ~FX:Sparkles:Random *Var1 *Var2 *Var3 0000000A 00000000 00000000 00000000 00000000 00000000 00000000 00000000 00000000 )
  12C:  Call  PlayEffect        ( ~FX:Recover:LittleHeart *Var1 *Var2 *Var3 00000000 00000000 00000000 00000000 00000000 00000000 00000000 00000000 00000000 )
  170:  Wait  30`
  17C:  Call  SetAnimation      ( .Actor:Self 00000001 00400001 )
  194:  Wait  10`
  1A0:  Call  UseBattleCamPreset    ( 0000003F )
  1B0:  Call  BattleCamTargetActor  ( *VarA )
  1C0:  Call  GetEnemyMaxHP     ( *VarA *Var4 )
  1D4:  Mul   *Var4  0000003C
  1E4:  Div   *Var4  00000064
  1F4:  Thread
  1FC:  	Wait  5`
  208:  	Call  PlaySoundAtActor  ( *VarA 0000206D )
  21C:  	Call  PlaySoundAtActor  ( *VarA 00000214 )
  230:  	Wait  30`
  23C:  	Call  PlaySoundAtActor  ( *VarA 0000025C )
  250:  EndThread
  258:  Thread
  260:  	Call  8026BF48  ( 00000001 )
  270:  	Call  HealActor ( *VarA *Var4 .False )
  288:  	Call  8026BF48  ( 00000000 )
  298:  EndThread
  2A0:  Call  WaitForBuffDone ( )
  2AC:  Call  UseBattleCamPreset    ( 00000002 )
  2BC:  Call  EnableIdleScript      ( .Actor:Self 00000001 )
  2D0:  Call  UseIdleAnimation      ( .Actor:Self .True )
  2E4:  Return
  2EC:  End
}

#new:Script $Script_8022486C
{
    0:  Call  EnemyCreateTargetList ( 00000002 )
   10:  Call  InitTargetIterator ( )
   1C:  Label  0
   28:  Call  GetOwnerTarget    ( *Var0 *Var1 )
   3C:  Call  GetActorHP        ( *Var0 *Var2 )
   50:  Call  GetEnemyMaxHP     ( *Var0 *Var3 )
   64:  If  *Var2  !=  *Var3
   74:  	Call  GetOwnerTarget    ( *Var0 *Var1 )
   88:  	Return
   90:  EndIf
   98:  Call  ChooseNextTarget  ( .Iter:Next *Var0 )
   AC:  If  *Var0  !=  FFFFFFFF
   BC:  	Goto  0
   C8:  EndIf
   D0:  Return
   D8:  End
}

#new:Script $Script_TakeTurn_8022494C
{
    0:  ExecWait  $Script_8022486C
    C:  If  *Var0  ==  FFFFFFFF
   1C:  	ExecWait  $Script_FlyingAttack
   28:  Else
   30:  	Call  RandInt   ( 000003E8 *VarA )
   44:  	If  *VarA  <  00000258
   54:  		ExecWait  $Script_HealOneAlly
   60:  	Else
   68:  		ExecWait  $Script_FlyingAttack
   74:  	EndIf
   7C:  EndIf
   84:  Return
   8C:  End
}

#new:IdleAnimations $IdleAnimations_802249E0
{
	.Status:Normal    003C0001
	.Status:Stone     003C0000
	.Status:Sleep     003C0006
	.Status:Poison    003C0001
	.Status:Stop      003C0000
	.Status:Static    003C0001
	.Status:Paralyze  003C0000
	.Status:Dizzy     003C0007
	.Status:Fear      003C0007
	.Status:End
}

#new:DefenseTable $DefenseTable_80224A2C
{
	.Element:Normal 00000000
	.Element:Shock  00000000
	.Element:End
}

#new:StatusTable $StatusTable_80224A40
{
	.Status:Normal      0`
	.Status:Default     0`
	.Status:Sleep      70`
	.Status:Poison     50`
	.Status:Frozen      0`
	.Status:Dizzy      50`
	.Status:Fear      100`
	.Status:Static     50`
	.Status:Paralyze   90`
	.Status:Shrink     75`
	.Status:Stop       80`
	.Status:DefaultTurnMod    0`
	.Status:SleepTurnMod      0`
	.Status:PoisonTurnMod     0`
	.Status:FrozenTurnMod     0`
	.Status:DizzyTurnMod     -1`
	.Status:FearTurnMod       0`
	.Status:StaticTurnMod     0`
	.Status:ParalyzeTurnMod   1`
	.Status:ShrinkTurnMod     0`
	.Status:StopTurnMod       0`
	.Status:End
}

#new:PartsTable $PartsTable_80224AEC
{
	00800000 01000000 001800FF $IdleAnimations_802249E0 $DefenseTable_80224A2C 00000000 00000000 00F60000 00000000
}

#new:Actor $GrooveGuy
{
	% stats
	[Index]        20b
	[Level]        15`b
	[MaxHP]         7`b
	[Coins]         2`b
	[Flags]       00000000
	[StatusTable] $StatusTable_80224A40
	% ai
	[PartsCount]    1`s
	[PartsTable]  $PartsTable_80224AEC
	[Script]      $Script_Init_80224B38
	% move effectiveness
	[Escape]       50`b
	[Item]         70`b
	[AirLift]      85`b
	[Hurricane]    80`b % Bow's "Spook" as well
	[UpAndAway]    95`b
	[PowerBounce]  80`b
	[SpinSmash]     0`b % weight (0-4)
	% ui positions
	[Size]         28`b  28`b % width height
	[HealthBar]     0`b   0`b % dx dy
	[StatusTurn]  -10`b  20`b % dx dy
	[StatusIcon]   10`b  20`b % dx dy
}

#new:Script $Script_Init_80224B38
{
    0:  Call  BindTakeTurn  ( .Actor:Self $Script_TakeTurn_80226338 )
   14:  Call  BindIdle      ( .Actor:Self $Script_Idle_80224B9C )
   28:  Call  BindHandleEvent   ( .Actor:Self $Script_HandleEvent_80224D10 )
   3C:  Call  SetActorVar   ( .Actor:Self 00000000 00000000 )
   54:  Return
   5C:  End
}

#new:Script $Script_Idle_80224B9C
{
    0:  Label  0
    C:  Call  GetStatusFlags    ( .Actor:Self *Var0 )
   20:  If  *Var0  &  ~Flags:StatusFlags:Sleep % 1000
   30:  	Call  SetTargetOffset       ( .Actor:Self 00000001  -4`  14` )
   4C:  	Call  8027D4C8  ( FFFFFF81 00000001 00000000 00000000 )
   68:  	Call  $Function_802186C0    ( FFFFFFF3 0000000F 00000004 0000000D )
   84:  Else
   8C:  	Call  SetTargetOffset       ( .Actor:Self 00000001  0`  24` )
   A8:  	Call  8027D4C8  ( FFFFFF81 00000001 00000000 FFFFFFF6 )
   C4:  	Call  $Function_802186C0    ( FFFFFFF6 00000014 0000000A 00000014 )
   E0:  EndIf
   E8:  Wait  1`
   F4:  Goto  0
  100:  Return
  108:  End
}

#new:Script $Script_80224CAC
{
    0:  Call  ResetAllActorSounds   ( .Actor:Self )
   10:  SetConst  *Var0  00000001
   20:  SetConst  *Var1  003C0004
   30:  ExecWait  DoReturnHome
   3C:  Call  SetAnimation  ( .Actor:Self 00000001 003C0001 )
   54:  Return
   5C:  End
}

#new:Script $Script_HandleEvent_80224D10
{
    0:  Call  UseIdleAnimation  ( .Actor:Self .False )
   14:  Call  EnableIdleScript  ( .Actor:Self 00000000 )
   28:  Call  GetLastEvent      ( .Actor:Self *Var0 )
   3C:  Switch  *Var0
   48:  	CaseOR  ==  .Event:HitCombo % 9
   54:  	CaseOR  ==  .Event:Hit % A
   60:  		SetConst  *Var0  00000001
   70:  		SetConst  *Var1  003C0008
   80:  		ExecWait  DoNormalHit
   8C:  	EndCaseGroup
   94:  	Case  ==  .Event:BurnHit % E
   A0:  		SetConst  *Var0  00000001
   B0:  		SetConst  *Var1  003C000E
   C0:  		SetConst  *Var2  003C000F
   D0:  		ExecWait  DoBurnHit
   DC:  	Case  ==  .Event:BurnDeath % 24
   E8:  		SetConst  *Var0  00000001
   F8:  		SetConst  *Var1  003C000E
  108:  		SetConst  *Var2  003C000F
  118:  		ExecWait  DoBurnHit
  124:  		SetConst  *Var0  00000001
  134:  		SetConst  *Var1  003C000F
  144:  		ExecWait  DoDeath
  150:  		Return
  158:  	Case  ==  .Event:SpinSmashHit % B
  164:  		SetConst  *Var0  00000001
  174:  		SetConst  *Var1  003C0008
  184:  		ExecWait  DoSpinSmashHit
  190:  	Case  ==  .Event:SpinSmashDeath % 21
  19C:  		SetConst  *Var0  00000001
  1AC:  		SetConst  *Var1  003C0008
  1BC:  		ExecWait  DoSpinSmashHit
  1C8:  		SetConst  *Var0  00000001
  1D8:  		SetConst  *Var1  003C0008
  1E8:  		ExecWait  DoDeath
  1F4:  		Return
  1FC:  	Case  ==  .Event:ShockHit % 2F
  208:  		SetConst  *Var0  00000001
  218:  		SetConst  *Var1  003C0008
  228:  		ExecWait  DoShockHit
  234:  		SetConst  *Var0  00000001
  244:  		SetConst  *Var1  003C0008
  254:  		ExecWait  DoJumpBack
  260:  		Call  SetActorSpeed ( .Actor:Self *Fixed[4.0] )
  274:  		ExecWait  $Script_80224CAC
  280:  	Case  ==  .Event:ShockDeath % 26
  28C:  		SetConst  *Var0  00000001
  29C:  		SetConst  *Var1  003C0008
  2AC:  		ExecWait  DoShockHit
  2B8:  		SetConst  *Var0  00000001
  2C8:  		SetConst  *Var1  003C0008
  2D8:  		ExecWait  DoDeath
  2E4:  		Return
  2EC:  	CaseOR  ==  00000017 % 17
  2F8:  	CaseOR  ==  .Event:Immune % 19
  304:  		SetConst  *Var0  00000001
  314:  		SetConst  *Var1  003C0001
  324:  		ExecWait  DoImmune
  330:  	EndCaseGroup
  338:  	Case  ==  .Event:Death % 20
  344:  		SetConst  *Var0  00000001
  354:  		SetConst  *Var1  003C0008
  364:  		ExecWait  DoNormalHit
  370:  		Wait  10`
  37C:  		SetConst  *Var0  00000001
  38C:  		SetConst  *Var1  003C0008
  39C:  		ExecWait  DoDeath
  3A8:  		Return
  3B0:  	Case  ==  .Event:RecoverStatus % 31
  3BC:  		SetConst  *Var0  00000001
  3CC:  		SetConst  *Var1  003C0001
  3DC:  		ExecWait  DoRecover
  3E8:  	Case  ==  .Event:ScareAway % 39
  3F4:  		SetConst  *Var0  00000001
  404:  		SetConst  *Var1  003C0004
  414:  		SetConst  *Var2  003C0011
  424:  		ExecWait  DoScareAway
  430:  		Return
  438:  	Case  ==  .Event:BeginAirLift % 3A
  444:  		SetConst  *Var0  00000001
  454:  		SetConst  *Var1  003C0004
  464:  		ExecWait  DoAirLift
  470:  	CaseOR  ==  .Event:BlowAway % 16
  47C:  		SetConst  *Var0  00000001
  48C:  		SetConst  *Var1  003C0004
  49C:  		ExecWait  DoBlowAway
  4A8:  		Return
  4B0:  	Case  ==  .Event:AirLiftFailed % 1F
  4BC:  		SetConst  *Var0  00000001
  4CC:  		SetConst  *Var1  003C0001
  4DC:  		ExecWait  DoImmune
  4E8:  	Default
  4F0:  EndSwitch
  4F8:  Call  EnableIdleScript  ( .Actor:Self 00000001 )
  50C:  Call  UseIdleAnimation  ( .Actor:Self .True )
  520:  Return
  528:  End
}

#new:Script $Script_BasicAttack
{
    0:  Call  UseIdleAnimation  ( .Actor:Self .False )
   14:  Call  EnableIdleScript  ( .Actor:Self 00000000 )
   28:  Call  SetTargetActor    ( .Actor:Self .Actor:Player )
   3C:  Call  UseBattleCamPreset    ( 0000003F )
   4C:  Call  BattleCamTargetActor  ( .Actor:Self )
   5C:  Call  8024ECF8  ( FFFFFFFF 00000001 00000000 )
   74:  Call  SetAnimation      ( .Actor:Self 00000001 003C0004 )
   8C:  Call  SetActorSpeed     ( .Actor:Self *Fixed[4.0] )
   A0:  Call  SetGoalToTarget   ( .Actor:Self )
   B0:  Call  GetGoalPos        ( .Actor:Self *Var0 *Var1 *Var2 )
   CC:  Add   *Var0  00000032
   DC:  Set   *Var1  00000000
   EC:  Call  SetGoalPos        ( .Actor:Self *Var0 *Var1 *Var2 )
  108:  Call  RunToGoal ( .Actor:Self  0` .False )
  120:  Call  EnemyTestTarget   ( .Actor:Self *Var0 ~Flags:DamageType:0 00000000 00000001 00000010 )
  144:  Switch  *Var0
  150:  	CaseOR  ==  .HitResult:Miss % 6
  15C:  	CaseOR  ==  .HitResult:Lucky % 5
  168:  		Set   *VarA  *Var0
  178:  		Call  SetActorSounds    ( .Actor:Self .ActorSound:Jump 000002EF 00000000 )
  194:  		Call  SetActorSounds    ( .Actor:Self .ActorSound:Walk 000020BA 000003B4 )
  1B0:  		Call  SetActorSounds    ( .Actor:Self .ActorSound:WalkIncrement 0000000A 00000000 )
  1CC:  		Call  SetActorSpeed ( .Actor:Self *Fixed[6.0] )
  1E0:  		Call  SetAnimation  ( .Actor:Self 00000001 003C0010 )
  1F8:  		Call  SetGoalToTarget   ( .Actor:Self )
  208:  		Call  RunToGoal     ( .Actor:Self  0` .False )
  220:  		Call  SetActorSpeed ( .Actor:Self *Fixed[6.0] )
  234:  		Call  SetActorJumpGravity   ( .Actor:Self *Fixed[0.5] )
  248:  		Call  GetActorPos   ( .Actor:Self *Var0 *Var1 *Var2 )
  264:  		Sub   *Var0  0000001E
  274:  		Call  SetGoalPos    ( .Actor:Self *Var0 *Var1 *Var2 )
  290:  		Call  JumpToGoal    ( .Actor:Self  8` .False .True .False )
  2B0:  		If  *VarA  ==  .HitResult:Lucky % 5
  2C0:  			Call  EnemyTestTarget   ( .Actor:Self *VarA ~Flags:DamageType:TriggerLucky 00000000 00000000 00000000 )
  2E4:  		EndIf
  2EC:  		Call  ResetAllActorSounds   ( .Actor:Self )
  2FC:  		Sub   *Var0  00000014
  30C:  		Call  SetGoalPos        ( .Actor:Self *Var0 *Var1 *Var2 )
  328:  		Call  JumpToGoal        ( .Actor:Self  8` .False .True .False )
  348:  		Wait  15`
  354:  		Call  UseBattleCamPreset    ( 00000002 )
  364:  		Call  SetActorYaw       ( .Actor:Self  180` )
  378:  		Call  AddActorDecoration    ( .Actor:Self 00000001 00000000 .Decoration:Sweat )
  394:  		Call  SetActorSpeed     ( .Actor:Self *Fixed[6.0] )
  3A8:  		ExecWait  $Script_80224CAC
  3B4:  		Call  RemoveActorDecoration ( .Actor:Self 00000001 00000000 )
  3CC:  		Call  SetActorYaw       ( .Actor:Self  0` )
  3E0:  		Call  EnableIdleScript  ( .Actor:Self 00000001 )
  3F4:  		Call  UseIdleAnimation  ( .Actor:Self .True )
  408:  		Return
  410:  	EndCaseGroup
  418:  EndSwitch
  420:  Thread
  428:  	Wait  3`
  434:  	Call  PlaySoundAtActor  ( .Actor:Self 000002EF )
  448:  EndThread
  450:  Call  SetActorSounds    ( .Actor:Self .ActorSound:Walk 000020BA 000003B4 )
  46C:  Call  SetActorSounds    ( .Actor:Self .ActorSound:WalkIncrement 0000000A 00000000 )
  488:  Call  SetActorSpeed     ( .Actor:Self *Fixed[6.0] )
  49C:  Call  SetAnimation      ( .Actor:Self 00000001 003C0010 )
  4B4:  Call  SetGoalToTarget   ( .Actor:Self )
  4C4:  Call  GetGoalPos        ( .Actor:Self *Var0 *Var1 *Var2 )
  4E0:  Add   *Var0  0000000A
  4F0:  Set   *Var1  00000000
  500:  Call  SetGoalPos        ( .Actor:Self *Var0 *Var1 *Var2 )
  51C:  Call  RunToGoal ( .Actor:Self  0` .False )
  534:  Wait  2`
  540:  Call  EnemyDamageTarget ( .Actor:Self *Var0 ~Flags:DamageType:0 00000000 00000000 00000002 00000020 )
  568:  Switch  *Var0
  574:  	CaseOR  ==  .HitResult:Hit % 0
  580:  	CaseOR  ==  .HitResult:QuakeImmune % 2
  58C:  		Call  ResetAllActorSounds   ( .Actor:Self )
  59C:  		Call  UseBattleCamPreset    ( 00000002 )
  5AC:  		Call  GetGoalPos    ( .Actor:Self *Var0 *Var1 *Var2 )
  5C8:  		Add   *Var0  0000001E
  5D8:  		Set   *Var1  00000000
  5E8:  		Call  SetActorJumpGravity   ( .Actor:Self *Fixed[1.8] )
  5FC:  		Call  SetGoalPos    ( .Actor:Self *Var0 *Var1 *Var2 )
  618:  		Call  JumpToGoal    ( .Actor:Self  10` .False .True .False )
  638:  		Call  SetAnimation  ( .Actor:Self 00000001 003C0001 )
  650:  		Wait  8`
  65C:  		Call  SetActorSpeed ( .Actor:Self *Fixed[6.0] )
  670:  		ExecWait  $Script_80224CAC
  67C:  	EndCaseGroup
  684:  EndSwitch
  68C:  Call  EnableIdleScript  ( .Actor:Self 00000001 )
  6A0:  Call  UseIdleAnimation  ( .Actor:Self .True )
  6B4:  Return
  6BC:  End
}

#new:Script $Script_SleepySpin
{
    0:  Call  UseIdleAnimation  ( .Actor:Self .False )
   14:  Call  EnableIdleScript  ( .Actor:Self 00000000 )
   28:  Call  SetTargetActor    ( .Actor:Self .Actor:Player )
   3C:  Call  UseBattleCamPreset    ( 0000003F )
   4C:  Call  BattleCamTargetActor  ( .Actor:Self )
   5C:  Call  8024ECF8  ( FFFFFFFF 00000001 00000000 )
   74:  Call  SetActorSounds    ( .Actor:Self .ActorSound:Walk 000020BA 000003B4 )
   90:  Call  SetActorSounds    ( .Actor:Self .ActorSound:WalkIncrement 0000000A 00000000 )
   AC:  Call  SetAnimation      ( .Actor:Self 00000001 003C0010 )
   C4:  Call  SetActorSpeed     ( .Actor:Self *Fixed[4.0] )
   D8:  Call  SetGoalToTarget   ( .Actor:Self )
   E8:  Call  GetGoalPos        ( .Actor:Self *Var0 *Var1 *Var2 )
  104:  Add   *Var0  0000000A
  114:  Set   *Var1  00000000
  124:  Call  SetGoalPos        ( .Actor:Self *Var0 *Var1 *Var2 )
  140:  Call  RunToGoal ( .Actor:Self  0` .False )
  158:  Call  PlaySoundAtActor  ( .Actor:Self 000002E2 )
  16C:  Call  SetAnimation      ( .Actor:Self 00000001 003C000C )
  184:  Set   *Var0  00000000
  194:  Loop  0000001E
  1A0:  	Add   *Var0  00000030
  1B0:  	Mod   *Var0  00000168
  1C0:  	Call  SetActorYaw   ( .Actor:Self *Var0 )
  1D4:  	Wait  1`
  1E0:  EndLoop
  1E8:  Call  SetActorYaw       ( .Actor:Self  0` )
  1FC:  Call  EnemyTestTarget   ( .Actor:Self *Var0 ~Flags:DamageType:0 00000000 00000001 00000020 )
  220:  Switch  *Var0
  22C:  	CaseOR  ==  .HitResult:Miss % 6
  238:  	CaseOR  ==  .HitResult:Lucky % 5
  244:  		Call  SetAnimation  ( .Actor:Self 00000001 003C000B )
  25C:  		Wait  20`
  268:  		If  *Var0  ==  .HitResult:Lucky % 5
  278:  			Call  EnemyTestTarget   ( .Actor:Self *Var0 ~Flags:DamageType:TriggerLucky 00000000 00000000 00000000 )
  29C:  		EndIf
  2A4:  		Call  UseBattleCamPreset    ( 00000002 )
  2B4:  		Call  ResetAllActorSounds   ( .Actor:Self )
  2C4:  		Call  SetActorSpeed ( .Actor:Self *Fixed[6.0] )
  2D8:  		ExecWait  $Script_80224CAC
  2E4:  		Call  EnableIdleScript      ( .Actor:Self 00000001 )
  2F8:  		Call  UseIdleAnimation      ( .Actor:Self .True )
  30C:  		Return
  314:  	EndCaseGroup
  31C:  EndSwitch
  324:  Call  SetGoalToTarget   ( .Actor:Self )
  334:  Call  EnemyDamageTarget ( .Actor:Self *Var0 ~Flags:DamageType:StatusAlwaysHits 00000000 ~DebuffType:Dizzy:2:50` 00000000 00000020 )
  35C:  Switch  *Var0
  368:  	CaseOR  ==  .HitResult:Hit % 0
  374:  	CaseOR  ==  .HitResult:QuakeImmune % 2
  380:  		Call  WasStatusInflicted    ( .Actor:Self *Var0 )
  394:  		If  *Var0  ==  00000001
  3A4:  			Thread
  3AC:  				Set   *Var0  00000000
  3BC:  				Loop  0000001E
  3C8:  					Add   *Var0  00000030
  3D8:  					Mod   *Var0  00000168
  3E8:  					Call  SetActorYaw   ( .Actor:Player *Var0 )
  3FC:  					Wait  1`
  408:  				EndLoop
  410:  				Call  SetActorYaw   ( .Actor:Player  0` )
  424:  			EndThread
  42C:  		EndIf
  434:  		Call  PlaySoundAtActor  ( .Actor:Self 000002E3 )
  448:  		Call  SetAnimation      ( .Actor:Self 00000001 003C000B )
  460:  		Set   *Var0  00000000
  470:  		Loop  0000000F
  47C:  			Add   *Var0  00000018
  48C:  			Mod   *Var0  00000168
  49C:  			Call  SetActorYaw   ( .Actor:Self *Var0 )
  4B0:  			Wait  1`
  4BC:  		EndLoop
  4C4:  		Call  SetActorYaw       ( .Actor:Self  0` )
  4D8:  		Call  SetAnimation      ( .Actor:Self 00000001 003C000C )
  4F0:  		Call  UseBattleCamPreset    ( 00000002 )
  500:  		Call  PlaySoundAtActor  ( .Actor:Self 000002E4 )
  514:  		Thread
  51C:  			Set   *Var0  00000000
  52C:  			Loop  00000014
  538:  				Add   *Var0  00000048
  548:  				Mod   *Var0  00000168
  558:  				Call  SetActorYaw   ( .Actor:Self *Var0 )
  56C:  				Wait  1`
  578:  			EndLoop
  580:  			Call  SetActorYaw   ( .Actor:Self *Var0 )
  594:  		EndThread
  59C:  		Call  GetGoalPos    ( .Actor:Self *Var0 *Var1 *Var2 )
  5B8:  		Add   *Var0  00000028
  5C8:  		Set   *Var1  00000000
  5D8:  		Call  SetActorJumpGravity   ( .Actor:Self *Fixed[1.0] )
  5EC:  		Call  SetGoalPos    ( .Actor:Self *Var0 *Var1 *Var2 )
  608:  		Call  JumpToGoal    ( .Actor:Self  20` .False .True .False )
  628:  		Call  SetAnimation  ( .Actor:Self 00000001 003C000A )
  640:  		Wait  25`
  64C:  		Call  ResetAllActorSounds   ( .Actor:Self )
  65C:  		Call  SetActorSpeed ( .Actor:Self *Fixed[6.0] )
  670:  		ExecWait  $Script_80224CAC
  67C:  	EndCaseGroup
  684:  EndSwitch
  68C:  Call  EnableIdleScript  ( .Actor:Self 00000001 )
  6A0:  Call  UseIdleAnimation  ( .Actor:Self .True )
  6B4:  Return
  6BC:  End
}

#new:Script $Script_GetFirstOpenColumn
{
    0:  Set   *Flag[01]  .False
   10:  Set   *Flag[02]  .False
   20:  Set   *Flag[03]  .False
   30:  Set   *Flag[04]  .False
   40:  Call  EnemyCreateTargetList ( 00008002 )
   50:  Call  InitTargetIterator ( )
   5C:  Label  0
   68:  Call  GetOwnerTarget        ( *Var0 *Var5 )
   7C:  Call  GetIndexFromHome      ( *Var0 *Var5 )
   90:  Mod   *Var5  00000004
   A0:  Switch  *Var5
   AC:  	Case  ==  00000000
   B8:  		Set   *Flag[01]  .True
   C8:  	Case  ==  00000001
   D4:  		Set   *Flag[02]  .True
   E4:  	Case  ==  00000002
   F0:  		Set   *Flag[03]  .True
  100:  	Case  ==  00000003
  10C:  		Set   *Flag[04]  .True
  11C:  EndSwitch
  124:  Call  ChooseNextTarget  ( .Iter:Next *Var0 )
  138:  If  *Var0  !=  FFFFFFFF
  148:  	Goto  0
  154:  EndIf
  15C:  If  *Flag[01]  ==  .False
  16C:  	Set   *VarA  00000000
  17C:  	Return
  184:  EndIf
  18C:  If  *Flag[02]  ==  .False
  19C:  	Set   *VarA  00000001
  1AC:  	Return
  1B4:  EndIf
  1BC:  If  *Flag[03]  ==  .False
  1CC:  	Set   *VarA  00000002
  1DC:  	Return
  1E4:  EndIf
  1EC:  If  *Flag[04]  ==  .False
  1FC:  	Set   *VarA  00000003
  20C:  	Return
  214:  EndIf
  21C:  Set   *VarA  FFFFFFFF
  22C:  Return
  234:  End
}

#new:Script $Script_CountActiveSummoners
{
    0:  Set   *Var9  00000000
   10:  Call  EnemyCreateTargetList ( 00008002 )
   20:  Call  InitTargetIterator ( )
   2C:  Label  0
   38:  Call  GetOwnerTarget        ( *Var0 *Var1 )
   4C:  Call  GetOriginalActorType  ( *Var0 *Var2 )
   60:  Switch  *Var2
   6C:  	Case  ==  00000020
   78:  		Call  GetStatusFlags    ( *Var0 *Var3 )
   8C:  		If  *Var3  !&  ~Flags:StatusFlags:Sleep|Frozen|Fear|Paralyze|Dizzy|Stone|Stop % 35D000
   9C:  			Call  GetActorVar   ( *Var0 00000000 *Var3 )
   B4:  			If  *Var3  !=  00000002
   C4:  				Add   *Var9  00000001
   D4:  			EndIf
   DC:  		EndIf
   E4:  EndSwitch
   EC:  Call  ChooseNextTarget  ( .Iter:Next *Var0 )
  100:  If  *Var0  !=  FFFFFFFF
  110:  	Goto  0
  11C:  EndIf
  124:  Return
  12C:  End
}

#new:Script $Script_TakeTurn_80226338
{
    0:  Call  GetActorVar   ( .Actor:Self 00000000 *Var0 )
   18:  If  *Var0  ==  00000002
   28:  	Call  RandInt   ( 00000064 *Var0 )
   3C:  	If  *Var0  <  0000003C
   4C:  		Call  GetStatusFlags    ( .Actor:Player *Var0 )
   60:  		If  *Var0  &  ~Flags:StatusFlags:Dizzy % 40000
   70:  			ExecWait  $Script_BasicAttack
   7C:  		Else
   84:  			ExecWait  $Script_SleepySpin
   90:  		EndIf
   98:  	Else
   A0:  		ExecWait  $Script_BasicAttack
   AC:  	EndIf
   B4:  	Return
   BC:  EndIf
   C4:  ExecWait  $Script_GetFirstOpenColumn
   D0:  If  *VarA  ==  FFFFFFFF
   E0:  	Call  RandInt   ( 00000064 *Var0 )
   F4:  	If  *Var0  <  0000003C
  104:  		Call  GetStatusFlags    ( .Actor:Player *Var0 )
  118:  		If  *Var0  &  ~Flags:StatusFlags:Dizzy % 40000
  128:  			ExecWait  $Script_BasicAttack
  134:  		Else
  13C:  			ExecWait  $Script_SleepySpin
  148:  		EndIf
  150:  	Else
  158:  		ExecWait  $Script_BasicAttack
  164:  	EndIf
  16C:  	Return
  174:  EndIf
  17C:  ExecWait  $Script_CountActiveSummoners
  188:  Switch  *Var9
  194:  	Case  ==  00000001
  1A0:  		Call  RandInt   ( 000003E8 *Var0 )
  1B4:  		If  *Var0  <  0000012C
  1C4:  			ExecWait  $Script_RandomSummon
  1D0:  			Return
  1D8:  		EndIf
  1E0:  	Case  ==  00000002
  1EC:  		Call  RandInt   ( 000003E8 *Var0 )
  200:  		If  *Var0  <  00000096
  210:  			ExecWait  $Script_RandomSummon
  21C:  			Return
  224:  		EndIf
  22C:  	Case  ==  00000003
  238:  		Call  RandInt   ( 000003E8 *Var0 )
  24C:  		If  *Var0  <  00000064
  25C:  			ExecWait  $Script_RandomSummon
  268:  			Return
  270:  		EndIf
  278:  EndSwitch
  280:  Call  RandInt   ( 00000064 *Var0 )
  294:  If  *Var0  <  0000003C
  2A4:  	Call  GetStatusFlags    ( .Actor:Player *Var0 )
  2B8:  	If  *Var0  &  ~Flags:StatusFlags:Dizzy % 40000
  2C8:  		ExecWait  $Script_BasicAttack
  2D4:  	Else
  2DC:  		ExecWait  $Script_SleepySpin
  2E8:  	EndIf
  2F0:  Else
  2F8:  	ExecWait  $Script_BasicAttack
  304:  EndIf
  30C:  Return
  314:  End
}

#new:Script $Script_RandomSummon
{
    0:  Call  UseBattleCamPreset    ( 0000000B )
   10:  Call  BattleCamTargetActor  ( .Actor:Self )
   20:  Call  RandInt   ( 00000002 *Var1 )
   34:  Switch  *Var1
   40:  	Case  ==  00000000
   4C:  		ExecWait  $Script_80226C00
   58:  	Case  ==  00000001
   64:  		ExecWait  $Script_80226DEC
   70:  	Case  ==  00000002
   7C:  		ExecWait  $Script_802271A0
   88:  EndSwitch
   90:  Call  UseBattleCamPreset    ( 00000002 )
   A0:  Call  SetIdleAnimations     ( .Actor:Self 00000001 $IdleAnimations_802249E0 )
   B8:  Return
   C0:  End
}

#new:Script $Script_8022671C
{
    0:  Thread
    8:  	Wait  1`
   14:  	Call  PlaySoundAtActor  ( .Actor:Self 000002E5 )
   28:  EndThread
   30:  Call  SetAnimation  ( .Actor:Self 00000001 003C000C )
   48:  Wait  4`
   54:  Thread
   5C:  	Wait  1`
   68:  	Call  PlaySoundAtActor  ( .Actor:Self 000002E5 )
   7C:  EndThread
   84:  Call  SetAnimation  ( .Actor:Self 00000001 003C000B )
   9C:  Wait  4`
   A8:  Thread
   B0:  	Wait  1`
   BC:  	Call  PlaySoundAtActor  ( .Actor:Self 000002E5 )
   D0:  EndThread
   D8:  Call  SetAnimation  ( .Actor:Self 00000001 003C000C )
   F0:  Wait  4`
   FC:  Thread
  104:  	Wait  1`
  110:  	Call  PlaySoundAtActor  ( .Actor:Self 000002E5 )
  124:  EndThread
  12C:  Call  SetAnimation  ( .Actor:Self 00000001 003C000D )
  144:  Wait  4`
  150:  Thread
  158:  	Wait  1`
  164:  	Call  PlaySoundAtActor  ( .Actor:Self 000002E5 )
  178:  EndThread
  180:  Call  SetAnimation  ( .Actor:Self 00000001 003C000C )
  198:  Wait  4`
  1A4:  Thread
  1AC:  	Wait  1`
  1B8:  	Call  PlaySoundAtActor  ( .Actor:Self 000002E5 )
  1CC:  EndThread
  1D4:  Call  SetAnimation  ( .Actor:Self 00000001 003C000B )
  1EC:  Wait  4`
  1F8:  Thread
  200:  	Wait  1`
  20C:  	Call  PlaySoundAtActor  ( .Actor:Self 000002E5 )
  220:  EndThread
  228:  Call  SetAnimation  ( .Actor:Self 00000001 003C000C )
  240:  Wait  4`
  24C:  Thread
  254:  	Wait  1`
  260:  	Call  PlaySoundAtActor  ( .Actor:Self 000002E5 )
  274:  EndThread
  27C:  Call  SetAnimation  ( .Actor:Self 00000001 003C000D )
  294:  Wait  4`
  2A0:  Thread
  2A8:  	Wait  1`
  2B4:  	Call  PlaySoundAtActor  ( .Actor:Self 000002E5 )
  2C8:  EndThread
  2D0:  Call  SetAnimation      ( .Actor:Self 00000001 003C000C )
  2E8:  Call  GetStatusFlags    ( .Actor:Self *Var3 )
  2FC:  If  *Var3  !&  ~Flags:StatusFlags:Shrink % 80000
  30C:  	SetF  *Var3  *Fixed[1.0]
  31C:  Else
  324:  	SetF  *Var3  *Fixed[0.4]
  334:  EndIf
  33C:  Call  GetActorPos   ( .Actor:Self *Var0 *Var1 *Var2 )
  358:  Call  $Function_8021878C    ( *Var0 *Var1 *Var2 *Var3 00000030 )
  378:  Call  PlaySoundAtActor      ( .Actor:Self 000002E6 )
  38C:  Set   *Var0  00000000
  39C:  Loop  00000030
  3A8:  	Add   *Var0  0000001E
  3B8:  	If  *Var0  >=  00000168
  3C8:  		Sub   *Var0  00000168
  3D8:  	EndIf
  3E0:  	Call  SetActorRotation  ( .Actor:Self 00000000 *Var0 00000000 )
  3FC:  	Wait  1`
  408:  EndLoop
  410:  Call  SetActorRotation  ( .Actor:Self 00000000 00000000 00000000 )
  42C:  Call  GetActorPos       ( .Actor:Self *Var0 *Var1 *Var2 )
  448:  Add   *Var1  0000001E
  458:  Call  PlayEffect        ( ~FX:Sparkles:Star *Var0 *Var1 *Var2 0000001E 00000000 00000000 00000000 00000000 00000000 00000000 00000000 00000000 )
  49C:  Call  PlaySoundAtActor  ( .Actor:Self 0000206D )
  4B0:  Call  SetAnimation      ( .Actor:Self 00000001 003C000A )
  4C8:  Wait  8`
  4D4:  Return
  4DC:  End
}

#new:Script $Script_80226C00
{
    0:  Call  UseIdleAnimation  ( .Actor:Self .False )
   14:  Call  EnableIdleScript  ( .Actor:Self 00000000 )
   28:  ExecWait  $Script_8022671C
   34:  Call  SummonEnemy       ( $SpecialFormation_802273A8 00000000 )
   48:  Set   *VarB  *Var0
   58:  Set   *Var0  000000C8
   68:  Set   *Var1  00000000
   78:  Set   *Var2  00000000
   88:  Call  SetActorPos       ( *VarB *Var0 *Var1 *Var2 )
   A4:  Call  SetAnimation      ( *VarB 00000001 003B0004 )
   BC:  Call  UseBattleCamPreset    ( 00000003 )
   CC:  Call  BattleCamTargetActor  ( .Actor:Self )
   DC:  Call  SetGoalToIndex    ( *VarB *VarA )
   F0:  Call  SetActorSounds    ( .Actor:Self .ActorSound:Walk 000020BA 000003B4 )
  10C:  Call  SetActorSounds    ( .Actor:Self .ActorSound:WalkIncrement 0000000A 00000000 )
  128:  Call  SetActorSpeed     ( *VarB *Fixed[4.0] )
  13C:  Call  RunToGoal ( *VarB  0` .False )
  154:  Call  SetAnimation      ( *VarB 00000001 003B0001 )
  16C:  Call  GetActorPos       ( *VarB *Var0 *Var1 *Var2 )
  188:  Call  ForceHomePos      ( *VarB *Var0 *Var1 *Var2 )
  1A4:  Call  HPBarToHome       ( *VarB )
  1B4:  Call  EnableIdleScript  ( .Actor:Self 00000001 )
  1C8:  Call  UseIdleAnimation  ( .Actor:Self .True )
  1DC:  Return
  1E4:  End
}

#new:Script $Script_80226DEC
{
    0:  Call  UseIdleAnimation  ( .Actor:Self .False )
   14:  Call  EnableIdleScript  ( .Actor:Self 00000000 )
   28:  ExecWait  $Script_8022671C
   34:  Call  UseBattleCamPreset    ( 00000003 )
   44:  Call  BattleCamTargetActor  ( .Actor:Self )
   54:  Call  SummonEnemy       ( $SpecialFormation_802273C4 00000000 )
   68:  Set   *VarB  *Var0
   78:  Call  SetAnimation      ( *VarB 00000001 003C000C )
   90:  Call  SetGoalToIndex    ( *VarB *VarA )
   A4:  Call  GetGoalPos        ( *VarB *Var3 *Var4 *Var5 )
   C0:  Add   *Var3  000000C8
   D0:  Call  SetActorPos       ( *VarB *Var3 *Var4 *Var5 )
   EC:  Thread
   F4:  	Set   *Var6  00000000
  104:  	Loop  00000032
  110:  		Add   *Var6  0000001E
  120:  		Mod   *Var6  00000168
  130:  		Call  SetActorYaw   ( *VarB *Var6 )
  144:  		Wait  1`
  150:  	EndLoop
  158:  	Call  SetActorYaw   ( *VarB  0` )
  16C:  EndThread
  174:  Call  SetActorSounds    ( *VarB .ActorSound:Walk 00000000 00000000 )
  190:  Thread
  198:  	Loop  00000002
  1A4:  		Call  PlaySoundAtActor  ( *VarB 000002E2 )
  1B8:  		Wait  25`
  1C4:  	EndLoop
  1CC:  EndThread
  1D4:  Call  SetActorSpeed ( *VarB *Fixed[4.0] )
  1E8:  Call  RunToGoal     ( *VarB  0` .False )
  200:  Call  PlaySoundAtActor  ( .Actor:Self 000020F3 )
  214:  Call  SetAnimation  ( *VarB 00000001 003C000A )
  22C:  Call  GetActorPos   ( *VarB *Var0 *Var1 *Var2 )
  248:  Add   *Var1  00000014
  258:  Call  PlayEffect    ( ~FX:LensFlare:Rotating *Var0 *Var1 *Var2 0000001E 00000000 00000000 00000000 00000000 00000000 00000000 00000000 00000000 )
  29C:  Call  GetActorPos   ( *VarB *Var0 *Var1 *Var2 )
  2B8:  Call  ForceHomePos  ( *VarB *Var0 *Var1 *Var2 )
  2D4:  Wait  25`
  2E0:  Call  SetAnimation  ( *VarB 00000001 003C0001 )
  2F8:  Call  HPBarToHome   ( *VarB )
  308:  Call  EnableIdleScript  ( .Actor:Self 00000001 )
  31C:  Call  UseIdleAnimation  ( .Actor:Self .True )
  330:  Call  GetActorVar   ( .Actor:Self 00000000 *Var0 )
  348:  Switch  *Var0
  354:  	Case  ==  00000000
  360:  		Call  SetActorVar   ( *VarB 00000000 00000001 )
  378:  	Case  ==  00000001
  384:  		Call  SetActorVar   ( *VarB 00000000 00000002 )
  39C:  EndSwitch
  3A4:  Return
  3AC:  End
}

#new:Script $Script_802271A0
{
    0:  Call  UseIdleAnimation  ( .Actor:Self .False )
   14:  Call  EnableIdleScript  ( .Actor:Self 00000000 )
   28:  ExecWait  $Script_8022671C
   34:  Call  SummonEnemy   ( $SpecialFormation_802273E0 00000000 )
   48:  Set   *VarB  *Var0
   58:  Call  SetAnimation  ( *VarB 00000001 00400005 )
   70:  Add   *VarA  00000004
   80:  Call  SetGoalToIndex    ( *VarB *VarA )
   94:  Call  GetGoalPos    ( *VarB *Var3 *Var4 *Var5 )
   B0:  Set   *Var0  000000C8
   C0:  Set   *Var1  *Var4
   D0:  Set   *Var2  *Var5
   E0:  Call  SetActorPos   ( *VarB *Var0 *Var1 *Var2 )
   FC:  Call  SetActorSounds    ( *VarB .ActorSound:Walk 00000380 00000000 )
  118:  Call  UseBattleCamPreset    ( 00000003 )
  128:  Call  BattleCamTargetActor  ( .Actor:Self )
  138:  Call  SetActorSpeed ( *VarB *Fixed[4.0] )
  14C:  Call  RunToGoal     ( *VarB  0` .False )
  164:  Call  SetAnimation  ( *VarB 00000001 00400001 )
  17C:  Call  GetActorPos   ( *VarB *Var0 *Var1 *Var2 )
  198:  Call  ForceHomePos  ( *VarB *Var0 *Var1 *Var2 )
  1B4:  Call  HPBarToHome   ( *VarB )
  1C4:  Call  EnableIdleScript  ( .Actor:Self 00000001 )
  1D8:  Call  UseIdleAnimation  ( .Actor:Self .True )
  1EC:  Return
  1F4:  End
}

#new:Vector3D $Vector3D_8022739C
{
	0` -1000` 0`
}

#new:SpecialFormation $SpecialFormation_802273A8
{
	$ShyGuy_RED $Vector3D_8022739C 00000064 00000000 00000000 00000000 00000000
}

#new:SpecialFormation $SpecialFormation_802273C4
{
	$GrooveGuy $Vector3D_8022739C 00000064 00000000 00000000 00000000 00000000
}

#new:SpecialFormation $SpecialFormation_802273E0
{
	$MediGuy $Vector3D_8022739C 00000064 00000000 00000000 00000000 00000000
}

PADDING: 802273FC to 80227400 (005219CC to 005219D0)
00000000

#new:IdleAnimations $IdleAnimations_80227400
{
	.Status:Normal    003F0003
	.Status:Stone     003F0001
	.Status:Sleep     003F000F
	.Status:Poison    003F0003
	.Status:Stop      003F0001
	.Status:Static    003F0003
	.Status:Paralyze  003F0001
	.Status:Dizzy     003F0012
	.Status:Fear      003F0012
	.Status:End
}

#new:IdleAnimations $IdleAnimations_8022744C
{
	.Status:Normal    003F0002
	.Status:Stone     003F0000
	.Status:Sleep     003F000F
	.Status:Poison    003F0002
	.Status:Stop      003F0000
	.Status:Static    003F0002
	.Status:Paralyze  003F0000
	.Status:Dizzy     003F0012
	.Status:Fear      003F0012
	.Status:End
}

#new:IdleAnimations $IdleAnimations_80227498
{
	.Status:Normal    003F0010
	.Status:End
}

#new:DefenseTable $DefenseTable_802274A4
{
	.Element:Normal 00000000
	.Element:Shock  00000000
	.Element:End
}

#new:StatusTable $StatusTable_802274B8
{
	.Status:Normal      0`
	.Status:Default     0`
	.Status:Sleep      70`
	.Status:Poison     50`
	.Status:Frozen      0`
	.Status:Dizzy      80`
	.Status:Fear      100`
	.Status:Static      0`
	.Status:Paralyze   90`
	.Status:Shrink     75`
	.Status:Stop       90`
	.Status:DefaultTurnMod    0`
	.Status:SleepTurnMod      0`
	.Status:PoisonTurnMod     0`
	.Status:FrozenTurnMod     0`
	.Status:DizzyTurnMod      0`
	.Status:FearTurnMod       0`
	.Status:StaticTurnMod     0`
	.Status:ParalyzeTurnMod   1`
	.Status:ShrinkTurnMod     0`
	.Status:StopTurnMod       0`
	.Status:End
}

#new:PartsTable $PartsTable_80227564
{
	00800000 01000000 001E00FF $IdleAnimations_80227400 $DefenseTable_802274A4 00000000 00000000 FFF30000 00000000
	00120001 02000000 001800FF $IdleAnimations_80227498 $DefenseTable_802274A4 00000000 00000000 FFF60000 00000000
}

#new:Actor $SpyGuy
{
	% stats
	[Index]        24b
	[Level]        15`b
	[MaxHP]         7`b
	[Coins]         1`b
	[Flags]       00000000
	[StatusTable] $StatusTable_802274B8
	% ai
	[PartsCount]    2`s
	[PartsTable]  $PartsTable_80227564
	[Script]      $Script_Init_802275D4
	% move effectiveness
	[Escape]       50`b
	[Item]         60`b
	[AirLift]      85`b
	[Hurricane]    80`b % Bow's "Spook" as well
	[UpAndAway]    95`b
	[PowerBounce]  85`b
	[SpinSmash]     0`b % weight (0-4)
	% ui positions
	[Size]         32`b  32`b % width height
	[HealthBar]     0`b   0`b % dx dy
	[StatusTurn]  -10`b  20`b % dx dy
	[StatusIcon]   10`b  20`b % dx dy
}

#new:Script $Script_Init_802275D4
{
    0:  Call  BindTakeTurn  ( .Actor:Self $Script_TakeTurn_802293DC )
   14:  Call  BindIdle      ( .Actor:Self $Script_Idle_802276C4 )
   28:  Call  BindHandleEvent   ( .Actor:Self $Script_HandleEvent_80227ABC )
   3C:  Call  SetActorVar   ( .Actor:Self 00000002 00000001 )
   54:  Call  SetActorVar   ( .Actor:Self 00000003 00000000 )
   6C:  Call  8027D75C      ( FFFFFF81 *Var0 )
   80:  If  *Var0  !=  00000000
   90:  	Call  SetActorVar       ( .Actor:Self 00000002 00000000 )
   A8:  	Call  SetIdleAnimations ( .Actor:Self 00000001 $IdleAnimations_8022744C )
   C0:  	Call  SetAnimation      ( .Actor:Self 00000001 003F0002 )
   D8:  EndIf
   E0:  Return
   E8:  End
}

#new:Script $Script_Idle_802276C4
{
    0:  Return
    8:  End
}

#new:Script $Script_802276D4
{
    0:  Call  GetActorVar   ( .Actor:Self 00000003 *Var0 )
   18:  If  *Var0  ==  00000000
   28:  	Return
   30:  EndIf
   38:  Call  GetLastDamage ( .Actor:Self *Var0 )
   4C:  If  *Var0  ==  00000000
   5C:  	Call  SetActorVar   ( .Actor:Self 00000003 00000000 )
   74:  	Return
   7C:  EndIf
   84:  Call  GetStatusFlags    ( .Actor:Self *Var0 )
   98:  If  *Var0  &  ~Flags:StatusFlags:Sleep|Frozen|Fear|Paralyze|Dizzy|Stone|Stop % 35D000
   A8:  	Call  SetActorVar   ( .Actor:Self 00000003 00000000 )
   C0:  	Return
   C8:  EndIf
   D0:  Call  GetActorVar   ( .Actor:Self 00000002 *Var0 )
   E8:  Switch  *Var0
   F4:  	Case  ==  00000000
  100:  		Call  SetAnimation  ( .Actor:Self 00000001 003F0002 )
  118:  	Case  ==  00000001
  124:  		Call  SetAnimation  ( .Actor:Self 00000001 003F0003 )
  13C:  EndSwitch
  144:  Label  0
  150:  Call  GetBattleFlags    ( *Var0 )
  160:  If  *Var0  &  00000100
  170:  	Wait  1`
  17C:  	Goto  0
  188:  EndIf
  190:  Call  GetActorVar   ( .Actor:Self 00000002 *Var0 )
  1A8:  Switch  *Var0
  1B4:  	Case  ==  00000000
  1C0:  		Call  SetActorVar   ( .Actor:Self 00000002 00000001 )
  1D8:  		Call  SetIdleAnimations     ( .Actor:Self 00000001 $IdleAnimations_80227400 )
  1F0:  		Call  SetAnimation  ( .Actor:Self 00000001 003F0017 )
  208:  		Call  GetActorPos   ( .Actor:Self *Var0 *Var1 *Var2 )
  224:  		Call  SetActorJumpGravity   ( .Actor:Self *Fixed[1.4] )
  238:  		Call  SetGoalPos    ( .Actor:Self *Var0 *Var1 *Var2 )
  254:  		Call  JumpToGoal    ( .Actor:Self  15` .False .True .False )
  274:  		Call  SetAnimation  ( .Actor:Self 00000001 003F0019 )
  28C:  		Wait  5`
  298:  		Call  SetAnimation  ( .Actor:Self 00000001 003F0003 )
  2B0:  	Case  ==  00000001
  2BC:  		Call  SetActorVar   ( .Actor:Self 00000002 00000000 )
  2D4:  		Call  SetIdleAnimations     ( .Actor:Self 00000001 $IdleAnimations_8022744C )
  2EC:  		Call  SetAnimation  ( .Actor:Self 00000001 003F0018 )
  304:  		Call  GetActorPos   ( .Actor:Self *Var0 *Var1 *Var2 )
  320:  		Call  SetActorJumpGravity   ( .Actor:Self *Fixed[1.4] )
  334:  		Call  SetGoalPos    ( .Actor:Self *Var0 *Var1 *Var2 )
  350:  		Call  JumpToGoal    ( .Actor:Self  15` .False .True .False )
  370:  		Call  SetAnimation  ( .Actor:Self 00000001 003F001A )
  388:  		Wait  5`
  394:  		Call  SetAnimation  ( .Actor:Self 00000001 003F0002 )
  3AC:  EndSwitch
  3B4:  Wait  10`
  3C0:  Call  SetActorVar   ( .Actor:Self 00000003 00000000 )
  3D8:  Return
  3E0:  End
}

#new:Script $Script_HandleEvent_80227ABC
{
    0:  Call  UseIdleAnimation  ( .Actor:Self .False )
   14:  Call  GetLastEvent      ( .Actor:Self *Var0 )
   28:  Switch  *Var0
   34:  	Case  ==  .Event:HitCombo % 9
   40:  		SetConst  *Var0  00000001
   50:  		SetConst  *Var1  003F000B
   60:  		ExecWait  DoNormalHit
   6C:  		Call  SetActorVar   ( .Actor:Self 00000003 00000001 )
   84:  	Case  ==  .Event:Hit % A
   90:  		SetConst  *Var0  00000001
   A0:  		SetConst  *Var1  003F000B
   B0:  		ExecWait  DoNormalHit
   BC:  		Call  SetActorVar   ( .Actor:Self 00000003 00000001 )
   D4:  		ExecWait  $Script_802276D4
   E0:  	Case  ==  .Event:BurnHit % E
   EC:  		SetConst  *Var0  00000001
   FC:  		SetConst  *Var1  003F000D
  10C:  		SetConst  *Var2  003F000E
  11C:  		ExecWait  DoBurnHit
  128:  		Call  SetActorVar   ( .Actor:Self 00000003 00000001 )
  140:  		ExecWait  $Script_802276D4
  14C:  	Case  ==  .Event:BurnDeath % 24
  158:  		SetConst  *Var0  00000001
  168:  		SetConst  *Var1  003F000D
  178:  		SetConst  *Var2  003F000E
  188:  		ExecWait  DoBurnHit
  194:  		SetConst  *Var0  00000001
  1A4:  		SetConst  *Var1  003F000E
  1B4:  		ExecWait  DoDeath
  1C0:  		Return
  1C8:  	Case  ==  .Event:SpinSmashHit % B
  1D4:  		SetConst  *Var0  00000001
  1E4:  		SetConst  *Var1  003F000B
  1F4:  		ExecWait  DoSpinSmashHit
  200:  		Call  SetActorVar   ( .Actor:Self 00000003 00000001 )
  218:  		ExecWait  $Script_802276D4
  224:  	Case  ==  .Event:SpinSmashDeath % 21
  230:  		SetConst  *Var0  00000001
  240:  		SetConst  *Var1  003F000B
  250:  		ExecWait  DoSpinSmashHit
  25C:  		SetConst  *Var0  00000001
  26C:  		SetConst  *Var1  003F000C
  27C:  		ExecWait  DoDeath
  288:  		Return
  290:  	Case  ==  00000017 % 17
  29C:  		SetConst  *Var0  00000001
  2AC:  		Call  GetActorVar   ( .Actor:Self 00000002 *Var1 )
  2C4:  		If  *Var1  ==  00000000
  2D4:  			SetConst  *Var1  003F0002
  2E4:  		Else
  2EC:  			SetConst  *Var1  003F0003
  2FC:  		EndIf
  304:  		ExecWait  DoImmune
  310:  	CaseOR  ==  .Event:Immune % 19
  31C:  	CaseOR  ==  .Event:AirLiftFailed % 1F
  328:  		SetConst  *Var0  00000001
  338:  		Call  GetActorVar   ( .Actor:Self 00000002 *Var1 )
  350:  		If  *Var1  ==  00000000
  360:  			SetConst  *Var1  003F0002
  370:  		Else
  378:  			SetConst  *Var1  003F0003
  388:  		EndIf
  390:  		ExecWait  DoImmune
  39C:  		ExecWait  $Script_802276D4
  3A8:  	EndCaseGroup
  3B0:  	Case  ==  .Event:Death % 20
  3BC:  		SetConst  *Var0  00000001
  3CC:  		SetConst  *Var1  003F000B
  3DC:  		ExecWait  DoNormalHit
  3E8:  		Wait  10`
  3F4:  		SetConst  *Var0  00000001
  404:  		SetConst  *Var1  003F000C
  414:  		ExecWait  DoDeath
  420:  		Return
  428:  	Case  ==  .Event:RecoverStatus % 31
  434:  		SetConst  *Var0  00000001
  444:  		Call  GetActorVar   ( .Actor:Self 00000002 *Var1 )
  45C:  		If  *Var1  ==  00000000
  46C:  			SetConst  *Var1  003F0002
  47C:  		Else
  484:  			SetConst  *Var1  003F0003
  494:  		EndIf
  49C:  		ExecWait  DoRecover
  4A8:  	Case  ==  .Event:ScareAway % 39
  4B4:  		SetConst  *Var0  00000001
  4C4:  		Call  GetActorVar   ( .Actor:Self 00000002 *Var1 )
  4DC:  		If  *Var1  ==  00000000
  4EC:  			SetConst  *Var1  003F0006
  4FC:  		Else
  504:  			SetConst  *Var1  003F0007
  514:  		EndIf
  51C:  		SetConst  *Var2  003F0011
  52C:  		ExecWait  DoScareAway
  538:  		Return
  540:  	Case  ==  .Event:BeginAirLift % 3A
  54C:  		SetConst  *Var0  00000001
  55C:  		Call  GetActorVar   ( .Actor:Self 00000002 *Var1 )
  574:  		If  *Var1  ==  00000000
  584:  			SetConst  *Var1  003F0006
  594:  		Else
  59C:  			SetConst  *Var1  003F0007
  5AC:  		EndIf
  5B4:  		ExecWait  DoAirLift
  5C0:  	Case  ==  .Event:BlowAway % 16
  5CC:  		SetConst  *Var0  00000001
  5DC:  		Call  GetActorVar   ( .Actor:Self 00000002 *Var1 )
  5F4:  		If  *Var1  ==  00000000
  604:  			SetConst  *Var1  003F0006
  614:  		Else
  61C:  			SetConst  *Var1  003F0007
  62C:  		EndIf
  634:  		ExecWait  DoBlowAway
  640:  		Return
  648:  	Default
  650:  EndSwitch
  658:  Call  UseIdleAnimation  ( .Actor:Self .True )
  66C:  Return
  674:  End
}

#new:Script $Script_SlingshotAttack
{
    0:  Call  UseIdleAnimation  ( .Actor:Self .False )
   14:  Call  EnableIdleScript  ( .Actor:Self 00000000 )
   28:  Call  SetTargetActor    ( .Actor:Self .Actor:Player )
   3C:  Call  GetBattlePhase    ( *Var0 )
   4C:  If  *Var0  ==  00000001
   5C:  	Call  UseBattleCamPreset    ( 00000002 )
   6C:  	Call  MoveBattleCamOver     (  1` )
   7C:  EndIf
   84:  Call  PlaySoundAtActor  ( .Actor:Self 000002E7 )
   98:  Call  SetAnimation      ( .Actor:Self 00000001 003F0015 )
   B0:  Wait  12`
   BC:  Wait  12`
   C8:  Call  SetAnimation      ( .Actor:Self 00000001 003F0016 )
   E0:  Call  GetActorPos       ( .Actor:Self *Var0 *Var1 *Var2 )
   FC:  Add   *Var0  0000000A
  10C:  Add   *Var1  0000000A
  11C:  Call  SetPartPos        ( .Actor:Self 00000002 *Var0 *Var1 *Var2 )
  13C:  Call  SetPartFlagBits   ( .Actor:Self 00000002 00000001 .False )
  158:  Call  GetStatusFlags    ( .Actor:Self *Var0 )
  16C:  If  *Var0  &  ~Flags:StatusFlags:Shrink % 80000
  17C:  	Call  SetPartScale  ( .Actor:Self 00000002 *Fixed[0.4] *Fixed[0.4] *Fixed[0.4] )
  19C:  EndIf
  1A4:  Call  PlaySoundAtActor  ( .Actor:Self 000002E8 )
  1B8:  Call  SetPartSounds     ( .Actor:Self 00000002 .ActorSound:Jump 00000000 00000000 )
  1D8:  Call  EnemyTestTarget   ( .Actor:Self *Var0 ~Flags:DamageType:0 00000000 00000001 00000010 )
  1FC:  Switch  *Var0
  208:  	CaseOR  ==  .HitResult:Miss % 6
  214:  	CaseOR  ==  .HitResult:Lucky % 5
  220:  		Set   *VarA  *Var0
  230:  		Thread
  238:  			Loop
  244:  				Call  GetActorPos   ( .Actor:Player *Var0 *Var1 *Var2 )
  260:  				Call  GetPartOffset ( .Actor:Self 00000002 *Var3 *Var4 *Var5 )
  280:  				If  *Var0  >  *Var3
  290:  					BreakLoop
  298:  				EndIf
  2A0:  				Wait  1`
  2AC:  			EndLoop
  2B4:  			If  *VarA  ==  .HitResult:Lucky % 5
  2C4:  				Call  EnemyTestTarget   ( .Actor:Self *Var0 ~Flags:DamageType:TriggerLucky 00000000 00000000 00000000 )
  2E8:  			EndIf
  2F0:  		EndThread
  2F8:  		Call  SetGoalToTarget   ( .Actor:Self )
  308:  		Call  AddGoalPos        ( .Actor:Self  -100`  0`  0` )
  324:  		Call  GetGoalPos        ( .Actor:Self *Var0 *Var1 *Var2 )
  340:  		Call  SetPartMoveSpeed  ( .Actor:Self 00000002 *Fixed[14.0] )
  358:  		Call  SetPartJumpGravity    ( .Actor:Self 00000002 *Fixed[0.001953125] )
  370:  		Call  JumpPartTo        ( .Actor:Self 00000002 *Var0 *Var1 *Var2  0` .True )
  398:  		Call  SetPartFlagBits   ( .Actor:Self 00000002 00000001 .True )
  3B4:  		Call  YieldTurn ( )
  3C0:  		Call  AddActorDecoration    ( .Actor:Self 00000001 00000000 .Decoration:Sweat )
  3DC:  		Wait  15`
  3E8:  		Call  RemoveActorDecoration ( .Actor:Self 00000001 00000000 )
  400:  		Call  EnableIdleScript  ( .Actor:Self 00000001 )
  414:  		Call  UseIdleAnimation  ( .Actor:Self .True )
  428:  		Return
  430:  	EndCaseGroup
  438:  EndSwitch
  440:  Call  SetTargetActor    ( .Actor:Self .Actor:Player )
  454:  Call  SetGoalToTarget   ( .Actor:Self )
  464:  Call  GetGoalPos        ( .Actor:Self *Var0 *Var1 *Var2 )
  480:  Call  SetPartMoveSpeed  ( .Actor:Self 00000002 *Fixed[14.0] )
  498:  Call  SetPartJumpGravity    ( .Actor:Self 00000002 *Fixed[0.001953125] )
  4B0:  Call  JumpPartTo        ( .Actor:Self 00000002 *Var0 *Var1 *Var2  0` .True )
  4D8:  Wait  2`
  4E4:  Call  EnemyDamageTarget ( .Actor:Self *Var0 ~Flags:DamageType:NoContact 00000000 00000000 00000002 00000020 )
  50C:  Switch  *Var0
  518:  	CaseOR  ==  .HitResult:Hit % 0
  524:  	CaseOR  ==  .HitResult:QuakeImmune % 2
  530:  		Call  GetPartOffset     ( .Actor:Self 00000002 *Var0 *Var1 *Var2 )
  550:  		Sub   *Var0  00000064
  560:  		Call  SetPartJumpGravity    ( .Actor:Self 00000002 *Fixed[0.7] )
  578:  		Call  JumpPartTo        ( .Actor:Self 00000002 *Var0  0` *Var2  30` .True )
  5A0:  		Call  SetPartFlagBits   ( .Actor:Self 00000002 00000001 .True )
  5BC:  		Call  YieldTurn ( )
  5C8:  	EndCaseGroup
  5D0:  EndSwitch
  5D8:  Call  EnableIdleScript  ( .Actor:Self 00000001 )
  5EC:  Call  UseIdleAnimation  ( .Actor:Self .True )
  600:  Return
  608:  End
}

#new:IntTable $IntTable_80228748
{
	00000166 00000167 00000168
}

#new:IntTable $IntTable_80228754
{
	00000049 0000004A 0000004B
}

#new:IntTable $IntTable_80228760
{
	00000169 0000016A 0000016B
}

#new:IntTable $IntTable_8022876C
{
	0000004C 0000004D 0000004E
}

#new:Script $Script_80228778
{
    0:  Label  0
    C:  Call  GetActorVar   ( .Actor:Self 00000000 *VarA )
   24:  Switch  *VarA
   30:  	Case  ==  00000000
   3C:  	Case  ==  00000001
   48:  		Call  GetActorPos   ( .Actor:Player *Var1 *Var2 *Var3 )
   64:  		Set   *Var2  00000000
   74:  		Sub   *Var3  00000001
   84:  		Call  $Function_80218B38    ( *Var4 *Var5 )
   98:  		Call  MakeItemEntity        ( *Var4 *Var1 *Var2 *Var3 .ItemSpawnMode:Decoration 00000000 )
   BC:  		Call  SetActorVar   ( .Actor:Self 00000001 *Var0 )
   D4:  		Add   *Var1  0000001E
   E4:  		Call  $Function_80218880    ( *Var0 *Var1 *Var2 *Var3 00000014 *Fixed[1.0] )
  108:  		Add   *Var1  00000014
  118:  		Call  $Function_80218880    ( *Var0 *Var1 *Var2 *Var3 0000000A *Fixed[1.0] )
  13C:  		Add   *Var1  0000000A
  14C:  		Call  $Function_80218880    ( *Var0 *Var1 *Var2 *Var3 00000005 *Fixed[1.0] )
  170:  		Call  SetActorVar   ( .Actor:Self 00000000 00000000 )
  188:  	Case  ==  00000002
  194:  		Call  ShowMessageBox    ( *Var5 0000003C )
  1A8:  		Sub   *Var1  00000096
  1B8:  		Call  $Function_80218880    ( *Var0 *Var1 *Var2 *Var3 0000001E *Fixed[1.0] )
  1DC:  		Call  RemoveItemEntity  ( *Var0 )
  1EC:  		Call  SetActorVar       ( .Actor:Self 00000000 00000003 )
  204:  		Return
  20C:  EndSwitch
  214:  Wait  1`
  220:  Goto  0
  22C:  Return
  234:  End
}

#new:Script $Script_HammerAttack
{
    0:  Call  UseIdleAnimation  ( .Actor:Self .False )
   14:  Call  EnableIdleScript  ( .Actor:Self 00000000 )
   28:  Call  SetTargetActor    ( .Actor:Self .Actor:Player )
   3C:  Call  UseBattleCamPreset    ( 0000003F )
   4C:  Call  BattleCamTargetActor  ( .Actor:Self )
   5C:  Call  8024ECF8  ( FFFFFFFF 00000001 00000000 )
   74:  Call  SetAnimation      ( .Actor:Self 00000001 003F0007 )
   8C:  Call  SetActorSpeed     ( .Actor:Self *Fixed[6.0] )
   A0:  Call  SetGoalToTarget   ( .Actor:Self )
   B0:  Call  AddGoalPos        ( .Actor:Self  70`  0`  0` )
   CC:  Call  RunToGoal ( .Actor:Self  0` .False )
   E4:  Call  SetActorSounds    ( .Actor:Self .ActorSound:Walk 000020BA 000003B4 )
  100:  Call  SetActorSounds    ( .Actor:Self .ActorSound:WalkIncrement 0000000A 00000000 )
  11C:  Call  SetAnimation      ( .Actor:Self 00000001 003F0007 )
  134:  Call  SetActorSpeed     ( .Actor:Self *Fixed[8.0] )
  148:  Call  SetGoalToTarget   ( .Actor:Self )
  158:  Call  GetStatusFlags    ( .Actor:Self *Var1 )
  16C:  If  *Var1  !&  ~Flags:StatusFlags:Shrink % 80000
  17C:  	Call  AddGoalPos    ( .Actor:Self  20`  0`  0` )
  198:  EndIf
  1A0:  Call  RunToGoal     ( .Actor:Self  0` .False )
  1B8:  Call  SetAnimation  ( .Actor:Self 00000001 003F0003 )
  1D0:  Wait  10`
  1DC:  Call  8024ECF8      ( FFFFFFFF 00000001 00000000 )
  1F4:  Thread
  1FC:  	Wait  4`
  208:  	Call  PlaySoundAtActor  ( .Actor:Self 00000327 )
  21C:  EndThread
  224:  Call  EnemyTestTarget   ( .Actor:Self *Var0 ~Flags:DamageType:0 00000000 00000001 00000010 )
  248:  Switch  *Var0
  254:  	CaseOR  ==  .HitResult:Miss % 6
  260:  	CaseOR  ==  .HitResult:Lucky % 5
  26C:  		Set   *VarA  *Var0
  27C:  		Call  SetAnimation  ( .Actor:Self 00000001 003F000A )
  294:  		Wait  6`
  2A0:  		If  *VarA  ==  .HitResult:Lucky % 5
  2B0:  			Call  EnemyTestTarget   ( .Actor:Self *Var0 ~Flags:DamageType:TriggerLucky 00000000 00000000 00000000 )
  2D4:  		EndIf
  2DC:  		Wait  15`
  2E8:  		Call  UseBattleCamPreset    ( 00000002 )
  2F8:  		Call  SetActorYaw   ( .Actor:Self  180` )
  30C:  		Call  AddActorDecoration    ( .Actor:Self 00000001 00000000 .Decoration:Sweat )
  328:  		SetConst  *Var0  00000001
  338:  		SetConst  *Var1  003F0007
  348:  		ExecWait  DoReturnHome
  354:  		Call  RemoveActorDecoration ( .Actor:Self 00000001 00000000 )
  36C:  		Call  SetActorYaw   ( .Actor:Self  0` )
  380:  		Call  EnableIdleScript      ( .Actor:Self 00000001 )
  394:  		Call  UseIdleAnimation      ( .Actor:Self .True )
  3A8:  		Return
  3B0:  	EndCaseGroup
  3B8:  EndSwitch
  3C0:  Call  SetAnimation      ( .Actor:Self 00000001 003F000A )
  3D8:  Wait  5`
  3E4:  Wait  2`
  3F0:  Wait  2`
  3FC:  Call  EnemyDamageTarget ( .Actor:Self *Var0 ~Flags:DamageType:NoContact 00000000 00000000 00000002 00000020 )
  424:  Switch  *Var0
  430:  	CaseOR  ==  .HitResult:Hit % 0
  43C:  	CaseOR  ==  .HitResult:QuakeImmune % 2
  448:  		Set   *Flag[00]  .False
  458:  		Call  GetBattleFlags    ( *Var0 )
  468:  		If  *Var0  !&  80000000
  478:  			Call  $Function_80218CF4    ( *Var0 )
  488:  			If  *Var0  !=  FFFFFFFF
  498:  				Set   *Flag[00]  .True
  4A8:  			EndIf
  4B0:  		EndIf
  4B8:  		Call  GetLastDamage ( .Actor:Player *Var0 )
  4CC:  		If  *Var0  <=  00000000
  4DC:  			Wait  20`
  4E8:  			Goto  64
  4F4:  		EndIf
  4FC:  		Call  GetStatusFlags    ( .Actor:Self *Var1 )
  510:  		If  *Var1  &  ~Flags:StatusFlags:Shrink % 80000
  520:  			Wait  20`
  52C:  			Goto  64
  538:  		EndIf
  540:  		Call  GetStatusFlags    ( .Actor:Player *Var1 )
  554:  		If  *Var1  &  ~Flags:StatusFlags:Stone|RightOn % 40100000
  564:  			Wait  20`
  570:  			Goto  64
  57C:  		EndIf
  584:  		If  *Flag[00]  ==  .True
  594:  			Call  SetActorVar   ( .Actor:Self 00000000 00000001 )
  5AC:  			Exec  $Script_80228778
  5B8:  			Wait  8`
  5C4:  			Call  SetAnimation  ( .Actor:Self 00000001 003F0007 )
  5DC:  			Call  GetActorPos   ( .Actor:Self *Var0 *Var1 *Var2 )
  5F8:  			Add   *Var0  00000046
  608:  			Call  SetActorSpeed ( .Actor:Self *Fixed[4.0] )
  61C:  			Call  SetGoalPos    ( .Actor:Self *Var0 *Var1 *Var2 )
  638:  			Call  RunToGoal     ( .Actor:Self  0` .False )
  650:  			Call  SetAnimation  ( .Actor:Self 00000001 003F0003 )
  668:  			Label  0
  674:  			Call  GetActorVar   ( .Actor:Self 00000000 *Var0 )
  68C:  			If  *Var0  !=  00000000
  69C:  				Wait  1`
  6A8:  				Goto  0
  6B4:  			EndIf
  6BC:  			Call  SetAnimation  ( .Actor:Self 00000001 003F0007 )
  6D4:  			Call  GetActorVar   ( .Actor:Self 00000001 *Var0 )
  6EC:  			Call  $Function_80218A98    ( *Var0 *Var1 *Var2 *Var3 )
  708:  			Add   *Var1  00000014
  718:  			Sub   *Var3  00000002
  728:  			Call  SetActorSpeed ( .Actor:Self *Fixed[4.0] )
  73C:  			Call  SetGoalPos    ( .Actor:Self *Var1 *Var2 *Var3 )
  758:  			Call  RunToGoal     ( .Actor:Self  0` .False )
  770:  			Thread
  778:  				Wait  5`
  784:  				Call  PlaySoundAtActor      ( .Actor:Self 000020DC )
  798:  				Call  $Function_80218D54    ( 000000C8 0000000A )
  7AC:  			EndThread
  7B4:  			Call  SetAnimation  ( .Actor:Self 00000001 003F0009 )
  7CC:  			Wait  5`
  7D8:  			Call  SetActorVar   ( .Actor:Self 00000000 00000002 )
  7F0:  			Sub   *Var1  00000007
  800:  			Call  PlayEffect    ( ~FX:Firework:White *Var1 *Var2 *Var3 *Fixed[1.0] 00000000 00000000 00000000 00000000 00000000 00000000 00000000 00000000 )
  844:  			Wait  40`
  850:  		Else
  858:  			Wait  8`
  864:  			Call  SetAnimation  ( .Actor:Self 00000001 003F0007 )
  87C:  			Call  GetActorPos   ( .Actor:Self *Var0 *Var1 *Var2 )
  898:  			Add   *Var0  00000046
  8A8:  			Call  SetActorSpeed ( .Actor:Self *Fixed[4.0] )
  8BC:  			Call  SetGoalPos    ( .Actor:Self *Var0 *Var1 *Var2 )
  8D8:  			Call  RunToGoal     ( .Actor:Self  0` .False )
  8F0:  			Call  SetAnimation  ( .Actor:Self 00000001 003F0003 )
  908:  			Wait  10`
  914:  			Call  GetActorPos   ( .Actor:Self *Var0 *Var1 *Var2 )
  930:  			Add   *Var1  0000000A
  940:  			Call  PlayEffect    ( ~FX:EmoteIcon:Question 00000000 *Var0 *Var1 *Var2 00000019 FFFFFFD3 00000014 00000000 00000000 00000000 00000000 00000000 )
  984:  			Wait  20`
  990:  		EndIf
  998:  		Label  64
  9A4:  		Call  UseBattleCamPreset    ( 00000002 )
  9B4:  		SetConst  *Var0  00000001
  9C4:  		SetConst  *Var1  003F0007
  9D4:  		ExecWait  DoReturnHome
  9E0:  	EndCaseGroup
  9E8:  EndSwitch
  9F0:  Call  EnableIdleScript  ( .Actor:Self 00000001 )
  A04:  Call  UseIdleAnimation  ( .Actor:Self .True )
  A18:  Return
  A20:  End
}

#new:Script $Script_TakeTurn_802293DC
{
    0:  Call  GetBattlePhase    ( *Var0 )
   10:  If  *Var0  ==  00000001
   20:  	Call  SetActorVar       ( .Actor:Self 00000002 00000000 )
   38:  	Call  SetIdleAnimations ( .Actor:Self 00000001 $IdleAnimations_8022744C )
   50:  	Call  SetAnimation      ( .Actor:Self 00000001 003F0002 )
   68:  EndIf
   70:  Call  GetActorVar   ( .Actor:Self 00000002 *Var0 )
   88:  Switch  *Var0
   94:  	Case  ==  00000000
   A0:  		ExecWait  $Script_SlingshotAttack
   AC:  	Case  ==  00000001
   B8:  		ExecWait  $Script_HammerAttack
   C4:  EndSwitch
   CC:  Return
   D4:  End
}

PADDING: 802294B8 to 802294C0 (00523A88 to 00523A90)
00000000 00000000

#new:IdleAnimations $IdleAnimations_802294C0
{
	.Status:Normal    003D0001
	.Status:Stone     003D0000
	.Status:Sleep     003D0004
	.Status:Poison    003D0001
	.Status:Stop      003D0000
	.Status:Static    003D0001
	.Status:Paralyze  003D0000
	.Status:Dizzy     003D0005
	.Status:Fear      003D0005
	.Status:End
}

#new:IdleAnimations $IdleAnimations_8022950C
{
	.Status:Normal    003D0010
	.Status:Stone     003D000D
	.Status:Sleep     003D0019
	.Status:Poison    003D0010
	.Status:Stop      003D000D
	.Status:Static    003D0010
	.Status:Paralyze  003D000D
	.Status:Dizzy     003D0010
	.Status:Fear      003D0010
	.Status:End
}

#new:IdleAnimations $IdleAnimations_80229558
{
	.Status:Normal    003D000F
	.Status:Stone     003D000C
	.Status:Sleep     003D0018
	.Status:Poison    003D000F
	.Status:Stop      003D000C
	.Status:Static    003D000F
	.Status:Paralyze  003D000C
	.Status:Dizzy     003D000F
	.Status:Fear      003D000F
	.Status:End
}

#new:IdleAnimations $IdleAnimations_802295A4
{
	.Status:Normal    003D0011
	.Status:Stone     003D000E
	.Status:Sleep     003D001A
	.Status:Poison    003D0011
	.Status:Stop      003D000E
	.Status:Static    003D0011
	.Status:Paralyze  003D000E
	.Status:Dizzy     003D0011
	.Status:Fear      003D0011
	.Status:End
}

#new:IdleAnimations $IdleAnimations_802295F0
{
	.Status:Normal    003D000B
	.Status:End
}

#new:DefenseTable $DefenseTable_802295FC
{
	.Element:Normal 00000000
	.Element:Shock  00000000
	.Element:End
}

#new:DefenseTable $DefenseTable_80229610
{
	.Element:Normal 00000000
	.Element:Shock  00000000
	.Element:End
}

#new:StatusTable $StatusTable_80229624
{
	.Status:Normal      0`
	.Status:Default     0`
	.Status:Sleep      70`
	.Status:Poison     50`
	.Status:Frozen      0`
	.Status:Dizzy      90`
	.Status:Fear      100`
	.Status:Static     50`
	.Status:Paralyze   90`
	.Status:Shrink     75`
	.Status:Stop       90`
	.Status:DefaultTurnMod    0`
	.Status:SleepTurnMod      0`
	.Status:PoisonTurnMod     0`
	.Status:FrozenTurnMod     0`
	.Status:DizzyTurnMod      1`
	.Status:FearTurnMod       0`
	.Status:StaticTurnMod     0`
	.Status:ParalyzeTurnMod   1`
	.Status:ShrinkTurnMod     0`
	.Status:StopTurnMod       0`
	.Status:End
}

MISSING: 802296D0 to 8022977C (00523CA0 to 00523D4C)
00000001 00000000 00000002 00000000 00000006 00000046 00000009 00000032
00000007 00000000 00000004 0000005A 00000003 00000064 0000000B 00000032
00000005 0000005A 0000000A 0000004B 00000008 0000005A 0000001F 00000000
00000020 00000000 00000025 00000000 00000022 00000000 00000024 00000000
00000023 00000000 00000021 00000000 00000026 00000001 00000027 00000000
00000029 00000000 00000000

#new:PartsTable $PartsTable_8022977C
{
	00020001 01000000 002000FF $IdleAnimations_8022B104 $DefenseTable_80229610 00000000 00000000 00F60000 00000000
	00800000 02000000 001800FF $IdleAnimations_802294C0 $DefenseTable_802295FC 00000000 00000000 FFF60000 00000000
	00100003 03000000 023200FF $IdleAnimations_8022950C $DefenseTable_802295FC 00000000 00000000 FFF60000 0029007E
	00122003 04000000 001800FF $IdleAnimations_80229558 $DefenseTable_802295FC 00000000 00000000 FFF60000 00000000
	00122003 05000000 001800FF $IdleAnimations_802295A4 $DefenseTable_802295FC 00000000 00000000 FFF60000 00000000
	00120001 06000000 001800FF $IdleAnimations_802295F0 $DefenseTable_802295FC 00000000 00000000 FFF60000 00000000
}

#new:Actor $SkyGuy
{
	% stats
	[Index]        21b
	[Level]        14`b
	[MaxHP]         7`b
	[Coins]         1`b
	[Flags]       00000200
	[StatusTable] $StatusTable_80229624
	% ai
	[PartsCount]    6`s
	[PartsTable]  $PartsTable_8022977C
	[Script]      $Script_Init_8022987C
	% move effectiveness
	[Escape]       50`b
	[Item]         80`b
	[AirLift]      90`b
	[Hurricane]    90`b % Bow's "Spook" as well
	[UpAndAway]    95`b
	[PowerBounce]  90`b
	[SpinSmash]     0`b % weight (0-4)
	% ui positions
	[Size]         28`b  28`b % width height
	[HealthBar]     0`b   0`b % dx dy
	[StatusTurn]  -10`b  20`b % dx dy
	[StatusIcon]   10`b  20`b % dx dy
}

#new:Script $Script_Init_8022987C
{
    0:  Call  BindTakeTurn  ( .Actor:Self $Script_TakeTurn_8022A9D0 )
   14:  Call  BindIdle      ( .Actor:Self $Script_Idle_80229A24 )
   28:  Call  BindHandleEvent   ( .Actor:Self $Script_HandleEvent_8022A398 )
   3C:  Call  SetActorVar   ( .Actor:Self 00000008 00000000 )
   54:  Call  GetActorPos   ( .Actor:Self *Var0 *Var1 *Var2 )
   70:  Call  SetPartPos    ( .Actor:Self 00000003 *Var0 *Var1 *Var2 )
   90:  Call  SetPartPos    ( .Actor:Self 00000004 *Var0 *Var1 *Var2 )
   B0:  Call  SetPartPos    ( .Actor:Self 00000005 *Var0 *Var1 *Var2 )
   D0:  Call  SetPartFlagBits   ( .Actor:Self 00000003 00100001 .False )
   EC:  Call  SetPartFlagBits   ( .Actor:Self 00000004 00100001 .False )
  108:  Call  SetPartFlagBits   ( .Actor:Self 00000005 00100001 .False )
  124:  Call  GetActorPos   ( .Actor:Self *Var0 *Var1 *Var2 )
  140:  Sub   *Var1  00000005
  150:  Call  ForceHomePos  ( .Actor:Self *Var0 *Var1 *Var2 )
  16C:  Call  HPBarToHome   ( .Actor:Self )
  17C:  Call  SetPartTargetFlagBits ( .Actor:Self 00000003 00000004 .True )
  198:  Return
  1A0:  End
}

#new:Script $Script_Idle_80229A24
{
    0:  Return
    8:  End
}

#new:Script $Script_80229A34
{
    0:  Call  GetActorVar   ( .Actor:Self 00000008 *Var2 )
   18:  If  *Var2  !=  00000000
   28:  	ExecWait  DoDeath
   34:  Else
   3C:  	Call  SetActorVar   ( .Actor:Self 00000008 00000001 )
   54:  	Call  GetActorPos   ( .Actor:Self *Var7 *Var8 *Var9 )
   70:  	Add   *Var8  00000014
   80:  	Call  PlayEffect    ( ~FX:Balloon:Orange *Var7 *Var8 *Var9 *Fixed[1.0] 00000096 00000000 00000000 00000000 00000000 00000000 00000000 00000000 )
   C4:  	Sub   *Var7  0000000E
   D4:  	Sub   *Var8  00000004
   E4:  	Call  PlayEffect    ( ~FX:Balloon:Red *Var7 *Var8 *Var9 *Fixed[1.0] 00000096 00000000 00000000 00000000 00000000 00000000 00000000 00000000 )
  128:  	Add   *Var7  0000001C
  138:  	Call  PlayEffect    ( ~FX:Balloon:Blue *Var7 *Var8 *Var9 *Fixed[1.0] 00000096 00000000 00000000 00000000 00000000 00000000 00000000 00000000 )
  17C:  	Call  SetActorVar   ( .Actor:Self 00000008 00000002 )
  194:  	Call  SetPartFlagBits   ( .Actor:Self 00000003 00020001 .True )
  1B0:  	Call  SetPartFlagBits   ( .Actor:Self 00000004 00020001 .True )
  1CC:  	Call  SetPartFlagBits   ( .Actor:Self 00000005 00020001 .True )
  1E8:  	ExecWait  DoDeath
  1F4:  EndIf
  1FC:  Return
  204:  End
}

#new:Script $Script_80229C40
{
    0:  Call  SetAnimation  ( .Actor:Self 00000002 003D0002 )
   18:  Call  SetAnimation  ( .Actor:Self 00000003 003D0013 )
   30:  Call  SetAnimation  ( .Actor:Self 00000004 003D0012 )
   48:  Call  SetAnimation  ( .Actor:Self 00000005 003D0014 )
   60:  Return
   68:  End
}

#new:Script $Script_80229CB0
{
    0:  Call  MakeLerp      ( 00000064 00000050 00000007 .Easing:CubicOut )
   1C:  Label  0
   28:  Call  UpdateLerp ( )
   34:  DivF  *Var0  *Fixed[100.0]
   44:  SetF  *Var2  *Fixed[2.0]
   54:  SubF  *Var2  *Var0
   64:  Call  SetPartScale  ( .Actor:Self 00000003 *Var2 *Var0 *Fixed[1.0] )
   84:  Call  SetPartScale  ( .Actor:Self 00000004 *Var2 *Var0 *Fixed[1.0] )
   A4:  Call  SetPartScale  ( .Actor:Self 00000005 *Var2 *Var0 *Fixed[1.0] )
   C4:  Wait  1`
   D0:  If  *Var1  ==  00000001
   E0:  	Goto  0
   EC:  EndIf
   F4:  Call  MakeLerp      ( 00000050 00000064 00000007 .Easing:CosFastOvershoot )
  110:  Label  1
  11C:  Call  UpdateLerp ( )
  128:  DivF  *Var0  *Fixed[100.0]
  138:  SetF  *Var2  *Fixed[2.0]
  148:  SubF  *Var2  *Var0
  158:  Call  SetPartScale  ( .Actor:Self 00000003 *Var2 *Var0 *Fixed[1.0] )
  178:  Call  SetPartScale  ( .Actor:Self 00000004 *Var2 *Var0 *Fixed[1.0] )
  198:  Call  SetPartScale  ( .Actor:Self 00000005 *Var2 *Var0 *Fixed[1.0] )
  1B8:  Wait  1`
  1C4:  If  *Var1  ==  00000001
  1D4:  	Goto  1
  1E0:  EndIf
  1E8:  Call  SetPartScale  ( .Actor:Self 00000003 *Fixed[1.0] *Fixed[1.0] *Fixed[1.0] )
  208:  Call  SetPartScale  ( .Actor:Self 00000004 *Fixed[1.0] *Fixed[1.0] *Fixed[1.0] )
  228:  Call  SetPartScale  ( .Actor:Self 00000005 *Fixed[1.0] *Fixed[1.0] *Fixed[1.0] )
  248:  Return
  250:  End
}

#new:Script $Script_80229F08
{
    0:  Call  GetLastElement    ( *Var0 )
   10:  Set   *Var0  00010000
   20:  If  *Var0  &  00014202
   30:  	Call  8027D32C  ( FFFFFF81 )
   40:  	Thread
   48:  		Wait  20`
   54:  		Call  PlaySoundAtActor  ( .Actor:Self 000002E1 )
   68:  	EndThread
   70:  	Call  SetAnimation  ( .Actor:Self 00000003 003D002E )
   88:  	Call  SetAnimation  ( .Actor:Self 00000004 003D002D )
   A0:  	Call  SetAnimation  ( .Actor:Self 00000005 003D002F )
   B8:  	Wait  30`
   C4:  	Call  SetPartFlagBits   ( .Actor:Self 00000003 00020001 .True )
   E0:  	Call  SetPartFlagBits   ( .Actor:Self 00000004 00020001 .True )
   FC:  	Call  SetPartFlagBits   ( .Actor:Self 00000005 00020001 .True )
  118:  	Call  SetActorVar   ( .Actor:Self 00000008 00000002 )
  130:  	Wait  15`
  13C:  	Call  GetActorPos   ( .Actor:Self *Var0 *Var1 *Var2 )
  158:  	Call  SetAnimation  ( .Actor:Self 00000002 003D0000 )
  170:  	Call  PlaySoundAtActor  ( .Actor:Self 00000263 )
  184:  	Call  PlayEffect    ( ~FX:EmoteIcon:Question 00000000 *Var0 *Var1 *Var2 00000018 00000000 00000019 00000000 00000000 00000000 00000000 00000000 )
  1C8:  	Wait  25`
  1D4:  	Call  SetAnimation  ( .Actor:Self 00000002 003D0006 )
  1EC:  	Wait  30`
  1F8:  	Call  SetAnimation  ( .Actor:Self 00000002 003D0006 )
  210:  	Call  SetActorJumpGravity   ( .Actor:Self *Fixed[0.5] )
  224:  	Call  GetActorPos   ( .Actor:Self *Var0 *Var1 *Var2 )
  240:  	Set   *Var1  00000000
  250:  	Call  SetHomePos    ( .Actor:Self *Var0 *Var1 *Var2 )
  26C:  	Call  SetActorSounds    ( .Actor:Self .ActorSound:Jump 00000301 00000000 )
  288:  	Call  SetGoalPos    ( .Actor:Self *Var0 *Var1 *Var2 )
  2A4:  	Call  JumpToGoal    ( .Actor:Self  10` .False .True .False )
  2C4:  	Call  $Function_80218DB0    ( 00000078 0000000A )
  2D8:  	Thread
  2E0:  		Call  ShakeCam  ( .Cam:Battle 00000000  5` *Fixed[0.5] )
  2FC:  	EndThread
  304:  	Call  PlaySoundAtActor  ( .Actor:Self 000020E4 )
  318:  	Call  ResetActorSounds  ( .Actor:Self .ActorSound:Jump )
  32C:  	Call  SetPartFlags  ( .Actor:Self 00000002 00020005 )
  344:  	Call  SetPartFlags  ( .Actor:Self 00000001 00800004 )
  35C:  	Call  SetAnimation  ( .Actor:Self 00000001 003B0012 )
  374:  	Call  PlayEffect    ( ~FX:Steam:FloatingRings *Var0 *Var1 *Var2 00000000 00000000 00000000 00000000 00000000 00000000 00000000 00000000 00000000 )
  3B8:  	Wait  40`
  3C4:  	Call  SetActorFlagBits  ( .Actor:Self 00000200 .False )
  3DC:  	Call  BindTakeTurn  ( .Actor:Self $Script_TakeTurn_8022CA9C )
  3F0:  	Call  BindIdle      ( .Actor:Self $Script_Idle_8022B19C )
  404:  	Call  BindHandleEvent   ( .Actor:Self $Script_HandleEvent_8022B310 )
  418:  	Call  SetActorType  ( .Actor:Self 0000001F )
  42C:  	Call  SetActorFlagBits  ( .Actor:Self 00001000 .True )
  444:  	Call  HPBarToHome   ( .Actor:Self )
  454:  	Call  ResetAllActorSounds   ( .Actor:Self )
  464:  Else
  46C:  	ExecWait  $Script_80229CB0
  478:  EndIf
  480:  Return
  488:  End
}

#new:Script $Script_HandleEvent_8022A398
{
    0:  Call  UseIdleAnimation  ( .Actor:Self .False )
   14:  Call  GetLastEvent      ( .Actor:Self *Var0 )
   28:  Switch  *Var0
   34:  	Case  ==  .Event:HitCombo % 9
   40:  		Call  8026E914  ( *Var0 *Var1 )
   54:  		If  *Var1  >=  00000003
   64:  			ExecWait  $Script_80229CB0
   70:  		Else
   78:  			SetConst  *Var0  00000002
   88:  			SetConst  *Var1  003D0006
   98:  			ExecWait  DoNormalHit
   A4:  		EndIf
   AC:  	Case  ==  .Event:Hit % A
   B8:  		Call  8026E914  ( *Var0 *Var1 )
   CC:  		If  *Var1  >=  00000003
   DC:  			ExecWait  $Script_80229CB0
   E8:  			ExecWait  $Script_80229F08
   F4:  		Else
   FC:  			SetConst  *Var0  00000002
  10C:  			SetConst  *Var1  003D0006
  11C:  			ExecWait  DoNormalHit
  128:  		EndIf
  130:  	Case  ==  .Event:BurnHit % E
  13C:  		SetConst  *Var0  00000002
  14C:  		SetConst  *Var1  003D0009
  15C:  		SetConst  *Var2  003D000A
  16C:  		ExecWait  DoBurnHit
  178:  	Case  ==  .Event:BurnDeath % 24
  184:  		SetConst  *Var0  00000002
  194:  		SetConst  *Var1  003D0009
  1A4:  		SetConst  *Var2  003D000A
  1B4:  		ExecWait  DoBurnHit
  1C0:  		SetConst  *Var0  00000002
  1D0:  		SetConst  *Var1  003D000A
  1E0:  		ExecWait  $Script_80229A34
  1EC:  		Return
  1F4:  	Case  ==  00000017 % 17
  200:  		Call  8026E914  ( *Var0 *Var1 )
  214:  		If  *Var1  >=  00000003
  224:  			ExecWait  $Script_80229CB0
  230:  		Else
  238:  			SetConst  *Var0  00000002
  248:  			SetConst  *Var1  003D0001
  258:  			ExecWait  DoImmune
  264:  		EndIf
  26C:  	CaseOR  ==  .Event:Immune % 19
  278:  	CaseOR  ==  .Event:AirLiftFailed % 1F
  284:  		Call  8026E914  ( *Var0 *Var1 )
  298:  		If  *Var1  >=  00000003
  2A8:  			ExecWait  $Script_80229CB0
  2B4:  		Else
  2BC:  			SetConst  *Var0  00000002
  2CC:  			SetConst  *Var1  003D0001
  2DC:  			ExecWait  DoImmune
  2E8:  		EndIf
  2F0:  	EndCaseGroup
  2F8:  	Case  ==  .Event:Death % 20
  304:  		SetConst  *Var0  00000002
  314:  		SetConst  *Var1  003D0006
  324:  		ExecWait  DoNormalHit
  330:  		Wait  10`
  33C:  		SetConst  *Var0  00000002
  34C:  		SetConst  *Var1  003D0006
  35C:  		ExecWait  $Script_80229A34
  368:  		Return
  370:  	Case  ==  .Event:BeginFirstStrike % 38
  37C:  		Call  SetActorPos       ( .Actor:Self  20`  0`  0` )
  398:  		Call  HPBarToCurrent    ( .Actor:Self )
  3A8:  	Case  ==  .Event:EndFirstStrike % 35
  3B4:  		Call  SetActorYaw   ( .Actor:Self  180` )
  3C8:  		Call  SetAnimation  ( .Actor:Self 00000002 003D0003 )
  3E0:  		Call  SetGoalToHome ( .Actor:Self )
  3F0:  		Call  SetActorSpeed ( .Actor:Self *Fixed[4.0] )
  404:  		Call  FlyToGoal     ( .Actor:Self  0`  1` .Easing:Linear )
  420:  		Call  SetAnimation  ( .Actor:Self 00000002 003D0001 )
  438:  		Call  SetActorYaw   ( .Actor:Self  0` )
  44C:  		Call  HPBarToHome   ( .Actor:Self )
  45C:  	Case  ==  .Event:RecoverStatus % 31
  468:  		SetConst  *Var0  00000002
  478:  		SetConst  *Var1  003D0001
  488:  		ExecWait  DoRecover
  494:  	Case  ==  .Event:ScareAway % 39
  4A0:  		Call  SetPartFlagBits   ( .Actor:Self 00000003 00100000 .False )
  4BC:  		Call  SetPartFlagBits   ( .Actor:Self 00000004 00100000 .False )
  4D8:  		Call  SetPartFlagBits   ( .Actor:Self 00000005 00100000 .False )
  4F4:  		Call  SetAnimation      ( .Actor:Self 00000003 003D001F )
  50C:  		Call  SetAnimation      ( .Actor:Self 00000004 003D001E )
  524:  		Call  SetAnimation      ( .Actor:Self 00000005 003D0020 )
  53C:  		SetConst  *Var0  00000002
  54C:  		SetConst  *Var1  003D0003
  55C:  		SetConst  *Var2  003D0006
  56C:  		ExecWait  DoScareAway
  578:  		Return
  580:  	Case  ==  .Event:BeginAirLift % 3A
  58C:  		SetConst  *Var0  00000002
  59C:  		SetConst  *Var1  003D0003
  5AC:  		ExecWait  DoAirLift
  5B8:  	Case  ==  .Event:BlowAway % 16
  5C4:  		SetConst  *Var0  00000002
  5D4:  		SetConst  *Var1  003D0007
  5E4:  		ExecWait  DoBlowAway
  5F0:  		Return
  5F8:  	Default
  600:  EndSwitch
  608:  ExecWait  $Script_80229C40
  614:  Call  UseIdleAnimation  ( .Actor:Self .True )
  628:  Return
  630:  End
}

#new:Script $Script_TakeTurn_8022A9D0
{
    0:  Call  UseIdleAnimation  ( .Actor:Self .False )
   14:  Call  EnableIdleScript  ( .Actor:Self 00000000 )
   28:  Call  SetTargetActor    ( .Actor:Self .Actor:Player )
   3C:  Call  SetGoalToTarget   ( .Actor:Self )
   4C:  Call  GetBattlePhase    ( *Var0 )
   5C:  If  *Var0  ==  00000001
   6C:  	Call  UseBattleCamPreset    ( 00000002 )
   7C:  	Call  MoveBattleCamOver     (  1` )
   8C:  EndIf
   94:  Call  PlaySoundAtActor  ( .Actor:Self 000002E7 )
   A8:  Call  SetAnimation      ( .Actor:Self 00000002 003D0008 )
   C0:  Wait  12`
   CC:  Call  GetActorPos       ( .Actor:Self *Var0 *Var1 *Var2 )
   E8:  Add   *Var1  00000014
   F8:  Add   *Var2  00000002
  108:  Call  SetPartPos        ( .Actor:Self 00000006 *Var0 *Var1 *Var2 )
  128:  Call  SetAnimation      ( .Actor:Self 00000006 003D000B )
  140:  Wait  12`
  14C:  Call  SetPartFlagBits   ( .Actor:Self 00000006 00000001 .False )
  168:  Call  PlaySoundAtActor  ( .Actor:Self 000002E8 )
  17C:  Call  SetPartSounds     ( .Actor:Self 00000006 .ActorSound:Jump 00000000 00000000 )
  19C:  Call  EnemyTestTarget   ( .Actor:Self *Var0 ~Flags:DamageType:NoContact 00000000 00000003 00000020 )
  1C0:  Switch  *Var0
  1CC:  	Case  ==  .HitResult:Miss % 6
  1D8:  		Call  SetTargetActor    ( .Actor:Self .Actor:Player )
  1EC:  		Call  SetGoalToTarget   ( .Actor:Self )
  1FC:  		Call  GetGoalPos        ( .Actor:Self *Var0 *Var1 *Var2 )
  218:  		Sub   *Var0  00000078
  228:  		Set   *Var1  00000000
  238:  		Call  SetPartMoveSpeed  ( .Actor:Self 00000006 *Fixed[12.0] )
  250:  		Call  SetPartJumpGravity    ( .Actor:Self 00000006 *Fixed[0.1] )
  268:  		Call  JumpPartTo        ( .Actor:Self 00000006 *Var0 *Var1 *Var2  0` .True )
  290:  		Call  SetPartFlagBits   ( .Actor:Self 00000006 00000001 .True )
  2AC:  		ExecWait  $Script_80229C40
  2B8:  		Call  EnableIdleScript  ( .Actor:Self 00000001 )
  2CC:  		Call  UseIdleAnimation  ( .Actor:Self .True )
  2E0:  		Return
  2E8:  	Case  ==  .HitResult:Lucky % 5
  2F4:  		Call  SetTargetActor    ( .Actor:Self .Actor:Player )
  308:  		Call  SetGoalToTarget   ( .Actor:Self )
  318:  		Call  GetGoalPos        ( .Actor:Self *Var0 *Var1 *Var2 )
  334:  		Sub   *Var0  00000032
  344:  		Set   *Var1  FFFFFFFB
  354:  		Call  SetPartMoveSpeed  ( .Actor:Self 00000006 *Fixed[14.0] )
  36C:  		Call  SetPartJumpGravity    ( .Actor:Self 00000006 *Fixed[0.1] )
  384:  		Call  FlyPartTo ( .Actor:Self 00000006 *Var0 *Var1 *Var2  0`  30` .Easing:Linear )
  3B0:  		Call  SetAnimation      ( .Actor:Self 00000002 003D0007 )
  3C8:  		Call  EnemyTestTarget   ( .Actor:Self *Var0 ~Flags:DamageType:TriggerLucky 00000000 00000000 00000000 )
  3EC:  		Call  GetActorPos       ( .Actor:Player *Var0 *Var1 *Var2 )
  408:  		Sub   *Var0  00000041
  418:  		Set   *Var1  FFFFFFFB
  428:  		Call  SetPartMoveSpeed  ( .Actor:Self 00000006 *Fixed[6.0] )
  440:  		Call  SetPartJumpGravity    ( .Actor:Self 00000006 *Fixed[0.1] )
  458:  		Call  FlyPartTo ( .Actor:Self 00000006 *Var0 *Var1 *Var2  0`  15` .Easing:Linear )
  484:  		Call  SetPartFlagBits   ( .Actor:Self 00000006 00000001 .True )
  4A0:  		ExecWait  $Script_80229C40
  4AC:  		Call  EnableIdleScript  ( .Actor:Self 00000001 )
  4C0:  		Call  UseIdleAnimation  ( .Actor:Self .True )
  4D4:  		Return
  4DC:  EndSwitch
  4E4:  Call  SetTargetActor    ( .Actor:Self .Actor:Player )
  4F8:  Call  SetGoalToTarget   ( .Actor:Self )
  508:  Call  GetGoalPos        ( .Actor:Self *Var0 *Var1 *Var2 )
  524:  Call  SetPartMoveSpeed  ( .Actor:Self 00000006 *Fixed[14.0] )
  53C:  Call  SetPartJumpGravity    ( .Actor:Self 00000006 *Fixed[0.1] )
  554:  Call  FlyPartTo ( .Actor:Self 00000006 *Var0 *Var1 *Var2  0`  15` .Easing:Linear )
  580:  Wait  2`
  58C:  Call  EnemyDamageTarget ( .Actor:Self *VarF ~Flags:DamageType:NoContact 00000000 00000000 00000003 00000020 )
  5B4:  Switch  *VarF
  5C0:  	CaseOR  ==  .HitResult:Hit % 0
  5CC:  	CaseOR  ==  .HitResult:QuakeImmune % 2
  5D8:  		Call  GetActorPos       ( .Actor:Player *Var0 *Var1 *Var2 )
  5F4:  		Sub   *Var0  00000037
  604:  		Set   *Var1  00000000
  614:  		Call  SetPartMoveSpeed  ( .Actor:Self 00000006 *Fixed[6.0] )
  62C:  		Call  SetPartJumpGravity    ( .Actor:Self 00000006 *Fixed[0.1] )
  644:  		Call  FlyPartTo ( .Actor:Self 00000006 *Var0 *Var1 *Var2  0`  25` .Easing:Linear )
  670:  		Call  SetPartMoveSpeed  ( .Actor:Self 00000006 *Fixed[4.0] )
  688:  		Sub   *Var0  00000014
  698:  		Call  FlyPartTo ( .Actor:Self 00000006 *Var0 *Var1 *Var2  0`  21` .Easing:Linear )
  6C4:  		Call  SetPartFlagBits   ( .Actor:Self 00000006 00000001 .True )
  6E0:  	EndCaseGroup
  6E8:  EndSwitch
  6F0:  ExecWait  $Script_80229C40
  6FC:  Call  EnableIdleScript  ( .Actor:Self 00000001 )
  710:  Call  UseIdleAnimation  ( .Actor:Self .True )
  724:  Return
  72C:  End
}

#new:IdleAnimations $IdleAnimations_8022B104
{
	.Status:Normal    003B0001
	.Status:Stone     003B0000
	.Status:Sleep     003B0012
	.Status:Poison    003B0001
	.Status:Stop      003B0000
	.Status:Static    003B0001
	.Status:Paralyze  003B0000
	.Status:Dizzy     003B0013
	.Status:Fear      003B0013
	.Status:End
}

% Origin: HEURISTIC
#new:Script $Script_8022B150
{
    0:  Call  BindTakeTurn      ( .Actor:Self $Script_TakeTurn_8022CA9C )
   14:  Call  BindIdle  ( .Actor:Self $Script_Idle_8022B19C )
   28:  Call  BindHandleEvent   ( .Actor:Self $Script_HandleEvent_8022B310 )
   3C:  Return
   44:  End
}

#new:Script $Script_Idle_8022B19C
{
    0:  Label  0
    C:  Call  GetStatusFlags    ( .Actor:Self *Var0 )
   20:  If  *Var0  &  ~Flags:StatusFlags:Sleep % 1000
   30:  	Call  SetTargetOffset       ( .Actor:Self 00000001  -4`  14` )
   4C:  	Call  8027D4C8  ( FFFFFF81 00000001 00000000 00000000 )
   68:  	Call  $Function_80218E08    ( FFFFFFF6 0000000D 0000000A 0000000D )
   84:  Else
   8C:  	Call  SetTargetOffset       ( .Actor:Self 00000001  0`  24` )
   A8:  	Call  8027D4C8  ( FFFFFF81 00000001 FFFFFFFF FFFFFFF6 )
   C4:  	Call  $Function_80218E08    ( FFFFFFF6 00000014 0000000A 00000014 )
   E0:  EndIf
   E8:  Wait  1`
   F4:  Goto  0
  100:  Return
  108:  End
}

#new:Script $Script_8022B2AC
{
    0:  Call  ResetAllActorSounds   ( .Actor:Self )
   10:  SetConst  *Var0  00000001
   20:  SetConst  *Var1  003B0003
   30:  ExecWait  DoReturnHome
   3C:  Call  SetAnimation  ( .Actor:Self 00000001 003B0001 )
   54:  Return
   5C:  End
}

#new:Script $Script_HandleEvent_8022B310
{
    0:  Call  UseIdleAnimation  ( .Actor:Self .False )
   14:  Call  GetLastEvent      ( .Actor:Self *Var0 )
   28:  Switch  *Var0
   34:  	CaseOR  ==  .Event:HitCombo % 9
   40:  	CaseOR  ==  .Event:Hit % A
   4C:  		SetConst  *Var0  00000001
   5C:  		SetConst  *Var1  003B000C
   6C:  		ExecWait  DoNormalHit
   78:  	EndCaseGroup
   80:  	Case  ==  .Event:BurnHit % E
   8C:  		SetConst  *Var0  00000001
   9C:  		SetConst  *Var1  003B000D
   AC:  		SetConst  *Var2  003B000E
   BC:  		ExecWait  DoBurnHit
   C8:  	Case  ==  .Event:BurnDeath % 24
   D4:  		SetConst  *Var0  00000001
   E4:  		SetConst  *Var1  003B000D
   F4:  		SetConst  *Var2  003B000E
  104:  		ExecWait  DoBurnHit
  110:  		SetConst  *Var0  00000001
  120:  		SetConst  *Var1  003B000E
  130:  		ExecWait  DoDeath
  13C:  		Return
  144:  	Case  ==  .Event:SpinSmashHit % B
  150:  		SetConst  *Var0  00000001
  160:  		SetConst  *Var1  003B000C
  170:  		ExecWait  DoSpinSmashHit
  17C:  	Case  ==  .Event:SpinSmashDeath % 21
  188:  		SetConst  *Var0  00000001
  198:  		SetConst  *Var1  003B000C
  1A8:  		ExecWait  DoSpinSmashHit
  1B4:  		SetConst  *Var0  00000001
  1C4:  		SetConst  *Var1  003B000C
  1D4:  		ExecWait  DoDeath
  1E0:  		Return
  1E8:  	Case  ==  .Event:ShockHit % 2F
  1F4:  		SetConst  *Var0  00000001
  204:  		SetConst  *Var1  003B000C
  214:  		ExecWait  DoShockHit
  220:  		SetConst  *Var0  00000001
  230:  		SetConst  *Var1  003B000C
  240:  		ExecWait  DoJumpBack
  24C:  		Call  SetActorSpeed ( .Actor:Self *Fixed[4.0] )
  260:  		ExecWait  $Script_8022B2AC
  26C:  	Case  ==  .Event:ShockDeath % 26
  278:  		SetConst  *Var0  00000001
  288:  		SetConst  *Var1  003B000C
  298:  		ExecWait  DoShockHit
  2A4:  		SetConst  *Var0  00000001
  2B4:  		SetConst  *Var1  003B000C
  2C4:  		ExecWait  DoDeath
  2D0:  		Return
  2D8:  	CaseOR  ==  00000017 % 17
  2E4:  	CaseOR  ==  .Event:Immune % 19
  2F0:  	CaseOR  ==  .Event:AirLiftFailed % 1F
  2FC:  		SetConst  *Var0  00000001
  30C:  		SetConst  *Var1  003B0001
  31C:  		ExecWait  DoImmune
  328:  	EndCaseGroup
  330:  	Case  ==  .Event:Death % 20
  33C:  		SetConst  *Var0  00000001
  34C:  		SetConst  *Var1  003B000C
  35C:  		ExecWait  DoNormalHit
  368:  		Wait  10`
  374:  		SetConst  *Var0  00000001
  384:  		SetConst  *Var1  003B000C
  394:  		ExecWait  DoDeath
  3A0:  		Return
  3A8:  	Case  ==  .Event:RecoverStatus % 31
  3B4:  		SetConst  *Var0  00000001
  3C4:  		SetConst  *Var1  003B0001
  3D4:  		ExecWait  DoRecover
  3E0:  	Case  ==  .Event:ScareAway % 39
  3EC:  		SetConst  *Var0  00000001
  3FC:  		SetConst  *Var1  003B0003
  40C:  		SetConst  *Var2  003B0014
  41C:  		ExecWait  DoScareAway
  428:  		Return
  430:  	Case  ==  .Event:BeginAirLift % 3A
  43C:  		SetConst  *Var0  00000001
  44C:  		SetConst  *Var1  003B000C
  45C:  		ExecWait  DoAirLift
  468:  	Case  ==  .Event:BlowAway % 16
  474:  		SetConst  *Var0  00000001
  484:  		SetConst  *Var1  003B000C
  494:  		ExecWait  DoBlowAway
  4A0:  		Return
  4A8:  	Default
  4B0:  EndSwitch
  4B8:  Call  UseIdleAnimation  ( .Actor:Self .True )
  4CC:  Return
  4D4:  End
}

#new:Script $Script_8022B7EC
{
    0:  Call  UseIdleAnimation  ( .Actor:Self .False )
   14:  Call  EnableIdleScript  ( .Actor:Self 00000000 )
   28:  Call  SetTargetActor    ( .Actor:Self .Actor:Player )
   3C:  Call  UseBattleCamPreset    ( 0000003F )
   4C:  Call  BattleCamTargetActor  ( .Actor:Self )
   5C:  Call  MoveBattleCamOver (  20` )
   6C:  Call  8024ECF8  ( FFFFFFFF 00000001 00000000 )
   84:  Call  SetAnimation      ( .Actor:Self 00000001 003B0003 )
   9C:  Call  SetActorSpeed     ( .Actor:Self *Fixed[4.0] )
   B0:  Call  SetGoalToTarget   ( .Actor:Self )
   C0:  Call  GetGoalPos        ( .Actor:Self *Var0 *Var1 *Var2 )
   DC:  Add   *Var0  00000032
   EC:  Set   *Var1  00000000
   FC:  Call  SetGoalPos        ( .Actor:Self *Var0 *Var1 *Var2 )
  118:  Call  RunToGoal ( .Actor:Self  0` .False )
  130:  Call  EnemyTestTarget   ( .Actor:Self *Var0 ~Flags:DamageType:0 00000000 00000001 00000010 )
  154:  Switch  *Var0
  160:  	CaseOR  ==  .HitResult:Miss % 6
  16C:  	CaseOR  ==  .HitResult:Lucky % 5
  178:  		Set   *VarA  *Var0
  188:  		Call  SetActorSounds    ( .Actor:Self .ActorSound:Jump 000002EF 00000000 )
  1A4:  		Call  SetActorSounds    ( .Actor:Self .ActorSound:Walk 000020BA 000003B4 )
  1C0:  		Call  SetActorSounds    ( .Actor:Self .ActorSound:WalkIncrement 0000000A 00000000 )
  1DC:  		Call  SetActorSpeed ( .Actor:Self *Fixed[6.0] )
  1F0:  		Call  SetAnimation  ( .Actor:Self 00000001 003B0004 )
  208:  		Call  SetGoalToTarget   ( .Actor:Self )
  218:  		Call  RunToGoal     ( .Actor:Self  0` .False )
  230:  		Call  SetAnimation  ( .Actor:Self 00000001 003B0005 )
  248:  		Call  SetActorSpeed ( .Actor:Self *Fixed[6.0] )
  25C:  		Call  SetActorJumpGravity   ( .Actor:Self *Fixed[0.5] )
  270:  		Call  GetActorPos   ( .Actor:Self *Var0 *Var1 *Var2 )
  28C:  		Sub   *Var0  0000001E
  29C:  		Call  SetGoalPos    ( .Actor:Self *Var0 *Var1 *Var2 )
  2B8:  		Call  JumpToGoal    ( .Actor:Self  8` .False .True .False )
  2D8:  		If  *VarA  ==  .HitResult:Lucky % 5
  2E8:  			Call  EnemyTestTarget   ( .Actor:Self *VarA ~Flags:DamageType:TriggerLucky 00000000 00000000 00000000 )
  30C:  		EndIf
  314:  		Call  ResetAllActorSounds   ( .Actor:Self )
  324:  		Sub   *Var0  00000014
  334:  		Call  SetGoalPos        ( .Actor:Self *Var0 *Var1 *Var2 )
  350:  		Call  JumpToGoal        ( .Actor:Self  8` .False .True .False )
  370:  		Wait  15`
  37C:  		Call  UseBattleCamPreset    ( 00000002 )
  38C:  		Call  SetActorYaw       ( .Actor:Self  180` )
  3A0:  		Call  AddActorDecoration    ( .Actor:Self 00000001 00000000 .Decoration:Sweat )
  3BC:  		Call  SetActorSpeed     ( .Actor:Self *Fixed[4.0] )
  3D0:  		SetConst  *Var0  00000001
  3E0:  		SetConst  *Var1  003B0004
  3F0:  		ExecWait  DoReturnHome
  3FC:  		Call  RemoveActorDecoration ( .Actor:Self 00000001 00000000 )
  414:  		Call  SetActorYaw       ( .Actor:Self  0` )
  428:  		Call  SetAnimation      ( .Actor:Self 00000001 003B0001 )
  440:  		Call  EnableIdleScript  ( .Actor:Self 00000001 )
  454:  		Call  UseIdleAnimation  ( .Actor:Self .True )
  468:  		Return
  470:  	EndCaseGroup
  478:  EndSwitch
  480:  Thread
  488:  	Wait  3`
  494:  	Call  PlaySoundAtActor  ( .Actor:Self 000002EF )
  4A8:  EndThread
  4B0:  Call  SetActorSounds    ( .Actor:Self .ActorSound:Walk 000020BA 000003B4 )
  4CC:  Call  SetActorSounds    ( .Actor:Self .ActorSound:WalkIncrement 0000000A 00000000 )
  4E8:  Call  SetActorSpeed     ( .Actor:Self *Fixed[6.0] )
  4FC:  Call  SetAnimation      ( .Actor:Self 00000001 003B0004 )
  514:  Call  SetGoalToTarget   ( .Actor:Self )
  524:  Call  GetGoalPos        ( .Actor:Self *Var0 *Var1 *Var2 )
  540:  Add   *Var0  0000000A
  550:  Set   *Var1  00000000
  560:  Call  SetGoalPos        ( .Actor:Self *Var0 *Var1 *Var2 )
  57C:  Call  RunToGoal ( .Actor:Self  0` .False )
  594:  Call  SetAnimation      ( .Actor:Self 00000001 003B0005 )
  5AC:  Wait  2`
  5B8:  Call  SetGoalToTarget   ( .Actor:Self )
  5C8:  Call  EnemyDamageTarget ( .Actor:Self *Var0 ~Flags:DamageType:0 00000000 00000000 00000002 00000020 )
  5F0:  Call  ResetAllActorSounds   ( .Actor:Self )
  600:  Call  UseBattleCamPreset    ( 00000002 )
  610:  Call  MoveBattleCamOver (  15` )
  620:  Call  GetGoalPos        ( .Actor:Self *Var0 *Var1 *Var2 )
  63C:  Add   *Var0  0000001E
  64C:  Set   *Var1  00000000
  65C:  Call  SetActorJumpGravity   ( .Actor:Self *Fixed[1.8] )
  670:  Call  SetGoalPos        ( .Actor:Self *Var0 *Var1 *Var2 )
  68C:  Call  JumpToGoal        ( .Actor:Self  10` .False .True .False )
  6AC:  Call  SetAnimation      ( .Actor:Self 00000001 003B0001 )
  6C4:  Wait  8`
  6D0:  Call  SetActorSpeed     ( .Actor:Self *Fixed[6.0] )
  6E4:  ExecWait  $Script_8022B2AC
  6F0:  Call  EnableIdleScript  ( .Actor:Self 00000001 )
  704:  Call  UseIdleAnimation  ( .Actor:Self .True )
  718:  Return
  720:  End
}

#new:Script $Script_8022BF14
{
    0:  Call  UseIdleAnimation  ( .Actor:Self .False )
   14:  Call  EnableIdleScript  ( .Actor:Self 00000000 )
   28:  Call  SetTargetActor    ( .Actor:Self .Actor:Player )
   3C:  Call  UseBattleCamPreset    ( 0000003F )
   4C:  Call  BattleCamTargetActor  ( .Actor:Self )
   5C:  Call  MoveBattleCamOver (  20` )
   6C:  Call  8024ECF8  ( FFFFFFFF 00000001 00000000 )
   84:  Call  PlaySoundAtActor  ( .Actor:Self 00000234 )
   98:  Call  SetAnimation      ( .Actor:Self 00000001 003B0009 )
   B0:  Wait  20`
   BC:  Call  SetAnimation      ( .Actor:Self 00000001 003B0003 )
   D4:  Call  SetActorSpeed     ( .Actor:Self *Fixed[3.0] )
   E8:  Call  SetGoalToTarget   ( .Actor:Self )
   F8:  Call  GetGoalPos        ( .Actor:Self *Var0 *Var1 *Var2 )
  114:  Add   *Var0  00000050
  124:  Set   *Var1  00000000
  134:  Call  SetGoalPos        ( .Actor:Self *Var0 *Var1 *Var2 )
  150:  Call  RunToGoal ( .Actor:Self  0` .False )
  168:  Call  SetActorSounds    ( .Actor:Self .ActorSound:Walk 000020BA 000003B4 )
  184:  Call  SetActorSounds    ( .Actor:Self .ActorSound:WalkIncrement 0000000A 00000000 )
  1A0:  Call  SetAnimation      ( .Actor:Self 00000001 003B0004 )
  1B8:  Call  SetActorSpeed     ( .Actor:Self *Fixed[5.0] )
  1CC:  Sub   *Var0  00000028
  1DC:  Call  SetGoalPos        ( .Actor:Self *Var0 *Var1 *Var2 )
  1F8:  Call  RunToGoal ( .Actor:Self  0` .False )
  210:  Call  EnemyTestTarget   ( .Actor:Self *Var0 ~Flags:DamageType:0 00000000 00000001 00000010 )
  234:  Switch  *Var0
  240:  	CaseOR  ==  .HitResult:Miss % 6
  24C:  	CaseOR  ==  .HitResult:Lucky % 5
  258:  		Set   *VarA  *Var0
  268:  		Call  SetActorSpeed ( .Actor:Self *Fixed[6.0] )
  27C:  		Call  SetAnimation  ( .Actor:Self 00000001 003B0009 )
  294:  		Thread
  29C:  			Wait  12`
  2A8:  			Call  SetAnimation  ( .Actor:Self 00000001 003B000A )
  2C0:  		EndThread
  2C8:  		Call  SetActorJumpGravity   ( .Actor:Self *Fixed[0.8] )
  2DC:  		Call  SetGoalToTarget   ( .Actor:Self )
  2EC:  		Call  GetGoalPos        ( .Actor:Self *Var0 *Var1 *Var2 )
  308:  		Sub   *Var0  0000000A
  318:  		Set   *Var1  00000000
  328:  		Call  SetGoalPos        ( .Actor:Self *Var0 *Var1 *Var2 )
  344:  		Call  JumpToGoal        ( .Actor:Self  24` .False .True .False )
  364:  		If  *VarA  ==  .HitResult:Lucky % 5
  374:  			Call  EnemyTestTarget   ( .Actor:Self *Var0 ~Flags:DamageType:TriggerLucky 00000000 00000000 00000000 )
  398:  		EndIf
  3A0:  		Call  SetAnimation  ( .Actor:Self 00000001 003B0005 )
  3B8:  		Call  SetActorSpeed ( .Actor:Self *Fixed[6.0] )
  3CC:  		Call  SetActorJumpGravity   ( .Actor:Self *Fixed[0.5] )
  3E0:  		Call  GetActorPos   ( .Actor:Self *Var0 *Var1 *Var2 )
  3FC:  		Sub   *Var0  0000001E
  40C:  		Call  SetGoalPos    ( .Actor:Self *Var0 *Var1 *Var2 )
  428:  		Call  JumpToGoal    ( .Actor:Self  8` .False .True .False )
  448:  		Sub   *Var0  00000014
  458:  		Call  SetGoalPos    ( .Actor:Self *Var0 *Var1 *Var2 )
  474:  		Call  JumpToGoal    ( .Actor:Self  8` .False .True .False )
  494:  		Wait  15`
  4A0:  		Call  UseBattleCamPreset    ( 00000002 )
  4B0:  		Call  MoveBattleCamOver     (  15` )
  4C0:  		Call  SetActorYaw   ( .Actor:Self  180` )
  4D4:  		Call  AddActorDecoration    ( .Actor:Self 00000001 00000000 .Decoration:Sweat )
  4F0:  		Call  SetActorSpeed ( .Actor:Self *Fixed[6.0] )
  504:  		SetConst  *Var0  00000001
  514:  		SetConst  *Var1  003B0004
  524:  		ExecWait  DoReturnHome
  530:  		Call  RemoveActorDecoration ( .Actor:Self 00000001 00000000 )
  548:  		Call  SetActorYaw   ( .Actor:Self  0` )
  55C:  		Call  SetAnimation  ( .Actor:Self 00000001 003B0001 )
  574:  		Call  EnableIdleScript      ( .Actor:Self 00000001 )
  588:  		Call  UseIdleAnimation      ( .Actor:Self .True )
  59C:  		Return
  5A4:  	EndCaseGroup
  5AC:  EndSwitch
  5B4:  Call  SetActorSpeed ( .Actor:Self *Fixed[6.0] )
  5C8:  Call  SetAnimation  ( .Actor:Self 00000001 003B0009 )
  5E0:  Thread
  5E8:  	Wait  9`
  5F4:  	Call  SetAnimation  ( .Actor:Self 00000001 003B000A )
  60C:  EndThread
  614:  Call  SetActorJumpGravity   ( .Actor:Self *Fixed[0.8] )
  628:  Call  SetGoalToTarget   ( .Actor:Self )
  638:  Call  JumpToGoal        ( .Actor:Self  18` .False .True .False )
  658:  Wait  2`
  664:  Call  EnemyDamageTarget ( .Actor:Self *Var0 ~Flags:DamageType:0 00000000 00000000 00000003 00000020 )
  68C:  Switch  *Var0
  698:  	CaseOR  ==  .HitResult:Hit % 0
  6A4:  	CaseOR  ==  .HitResult:QuakeImmune % 2
  6B0:  		Call  UseBattleCamPreset    ( 00000002 )
  6C0:  		Call  MoveBattleCamOver     (  15` )
  6D0:  		Thread
  6D8:  			Call  SetActorRotationOffset    ( .Actor:Self 00000000 0000000E 00000000 )
  6F4:  			Set   *Var3  00000000
  704:  			Loop  00000014
  710:  				Sub   *Var3  0000001E
  720:  				If  *Var3  <  00000000
  730:  					Add   *Var3  00000168
  740:  				EndIf
  748:  				Call  SetActorRotation  ( .Actor:Self 00000000 00000000 *Var3 )
  764:  				Wait  1`
  770:  			EndLoop
  778:  			Call  SetActorRotation  ( .Actor:Self 00000000 00000000 00000000 )
  794:  			Call  SetActorRotationOffset    ( .Actor:Self 00000000 00000000 00000000 )
  7B0:  		EndThread
  7B8:  		Call  GetBattleFlags    ( *Var0 )
  7C8:  		If  *Var0  &  80000000
  7D8:  			Goto  1
  7E4:  		EndIf
  7EC:  		Call  GetLastDamage ( .Actor:Player *Var0 )
  800:  		If  *Var0  ==  00000000
  810:  			Goto  1
  81C:  		EndIf
  824:  		Call  GetGoalPos    ( .Actor:Self *Var0 *Var1 *Var2 )
  840:  		Add   *Var0  00000028
  850:  		Set   *Var1  00000000
  860:  		Call  SetActorJumpGravity   ( .Actor:Self *Fixed[0.8] )
  874:  		Call  SetGoalPos    ( .Actor:Self *Var0 *Var1 *Var2 )
  890:  		Call  JumpToGoal    ( .Actor:Self  20` .False .True .False )
  8B0:  		Call  PlaySoundAtActor      ( .Actor:Self 00000349 )
  8C4:  		Call  PlaySoundAtActor      ( .Actor:Self 00000749 )
  8D8:  		Call  SetAnimation  ( .Actor:Self 00000001 003B0009 )
  8F0:  		Wait  10`
  8FC:  		Call  SetAnimation  ( .Actor:Self 00000001 003B0007 )
  914:  		Wait  15`
  920:  		Goto  2
  92C:  		Label  1
  938:  		Call  GetGoalPos    ( .Actor:Self *Var0 *Var1 *Var2 )
  954:  		Add   *Var0  00000028
  964:  		Set   *Var1  00000000
  974:  		Call  SetActorJumpGravity   ( .Actor:Self *Fixed[0.8] )
  988:  		Call  SetGoalPos    ( .Actor:Self *Var0 *Var1 *Var2 )
  9A4:  		Call  JumpToGoal    ( .Actor:Self  20` .False .True .False )
  9C4:  		Call  PlaySoundAtActor      ( .Actor:Self 000020E4 )
  9D8:  		Call  SetAnimation  ( .Actor:Self 00000001 003B0010 )
  9F0:  		Wait  10`
  9FC:  		Call  PlaySoundAtActor      ( .Actor:Self 000020C3 )
  A10:  		Call  AddActorDecoration    ( .Actor:Self 00000001 00000000 .Decoration:Sweat )
  A2C:  		Call  RandInt       ( 00000064 *Var0 )
  A40:  		If  *Var0  <  00000032
  A50:  			Call  SetAnimation  ( .Actor:Self 00000001 003B0011 )
  A68:  		Else
  A70:  			Call  SetAnimation  ( .Actor:Self 00000001 003B0013 )
  A88:  		EndIf
  A90:  		Wait  25`
  A9C:  		Call  RemoveActorDecoration ( .Actor:Self 00000001 00000000 )
  AB4:  		Call  SetActorYaw   ( .Actor:Self  180` )
  AC8:  		Label  2
  AD4:  		Call  SetActorSpeed ( .Actor:Self *Fixed[6.0] )
  AE8:  		SetConst  *Var0  00000001
  AF8:  		SetConst  *Var1  003B0004
  B08:  		ExecWait  DoReturnHome
  B14:  		Call  SetActorYaw   ( .Actor:Self  0` )
  B28:  		Call  SetAnimation  ( .Actor:Self 00000001 003B0001 )
  B40:  	EndCaseGroup
  B48:  EndSwitch
  B50:  Call  EnableIdleScript  ( .Actor:Self 00000001 )
  B64:  Call  UseIdleAnimation  ( .Actor:Self .True )
  B78:  Return
  B80:  End
}

#new:Script $Script_TakeTurn_8022CA9C
{
    0:  Call  RandInt   ( 00000001 *Var0 )
   14:  If  *Var0  ==  00000000
   24:  	ExecWait  $Script_8022B7EC
   30:  Else
   38:  	ExecWait  $Script_8022BF14
   44:  EndIf
   4C:  Return
   54:  End
}

PADDING: 8022CAF8 to 8022CB00 (005270C8 to 005270D0)
00000000 00000000

#new:IdleAnimations $IdleAnimations_8022CB00
{
	.Status:Normal    003E0001
	.Status:Stone     003E0000
	.Status:Sleep     003E0007
	.Status:Poison    003E0001
	.Status:Stop      003E0000
	.Status:Static    003E0001
	.Status:Paralyze  003E0000
	.Status:Dizzy     003E0008
	.Status:Fear      003E0008
	.Status:End
}

#new:DefenseTable $DefenseTable_8022CB4C
{
	.Element:Normal 00000000
	.Element:Water  FFFFFFFE
	.Element:Ice    FFFFFFFE
	.Element:Fire   00000063
	.Element:Shock  00000000
	.Element:Hammer 00000000
	.Element:Blast  FFFFFFFF
	.Element:End
}

#new:StatusTable $StatusTable_8022CB88
{
	.Status:Normal      0`
	.Status:Default     0`
	.Status:Sleep      70`
	.Status:Poison     50`
	.Status:Frozen      0`
	.Status:Dizzy      80`
	.Status:Fear      100`
	.Status:Static     50`
	.Status:Paralyze   90`
	.Status:Shrink     75`
	.Status:Stop       90`
	.Status:DefaultTurnMod    0`
	.Status:SleepTurnMod      0`
	.Status:PoisonTurnMod     0`
	.Status:FrozenTurnMod     0`
	.Status:DizzyTurnMod      0`
	.Status:FearTurnMod       0`
	.Status:StaticTurnMod     0`
	.Status:ParalyzeTurnMod   1`
	.Status:ShrinkTurnMod     0`
	.Status:StopTurnMod       0`
	.Status:End
}

#new:PartsTable $PartsTable_8022CC34
{
	00800000 01000000 001800FF $IdleAnimations_8022CB00 $DefenseTable_8022CB4C 00000002 00000000 FFF60000 00000000
}

#new:Actor $PyroGuy
{
	% stats
	[Index]        23b
	[Level]        15`b
	[MaxHP]         7`b
	[Coins]         1`b
	[Flags]       00000000
	[StatusTable] $StatusTable_8022CB88
	% ai
	[PartsCount]    1`s
	[PartsTable]  $PartsTable_8022CC34
	[Script]      $Script_Init_8022CC80
	% move effectiveness
	[Escape]       60`b
	[Item]         60`b
	[AirLift]      85`b
	[Hurricane]    80`b % Bow's "Spook" as well
	[UpAndAway]    95`b
	[PowerBounce]  85`b
	[SpinSmash]     0`b % weight (0-4)
	% ui positions
	[Size]         28`b  36`b % width height
	[HealthBar]     0`b   0`b % dx dy
	[StatusTurn]  -10`b  20`b % dx dy
	[StatusIcon]   10`b  20`b % dx dy
}

#new:Script $Script_Init_8022CC80
{
    0:  Call  BindTakeTurn      ( .Actor:Self $Script_TakeTurn_8022D344 )
   14:  Call  BindIdle  ( .Actor:Self $Script_Idle_8022CCCC )
   28:  Call  BindHandleEvent   ( .Actor:Self $Script_HandleEvent_8022CE60 )
   3C:  Return
   44:  End
}

#new:Script $Script_Idle_8022CCCC
{
    0:  Label  0
    C:  Call  GetStatusFlags    ( .Actor:Self *Var0 )
   20:  If  *Var0  &  ~Flags:StatusFlags:Sleep % 1000
   30:  	Call  SetTargetOffset       ( .Actor:Self 00000001  -4`  14` )
   4C:  	Call  8027D4C8  ( FFFFFF81 00000001 00000000 00000000 )
   68:  	Call  $Function_80218EE0    ( FFFFFFF6 0000000D 0000000A 0000000D )
   84:  Else
   8C:  	Call  SetTargetOffset       ( .Actor:Self 00000001  0`  24` )
   A8:  	Call  8027D4C8  ( FFFFFF81 00000001 FFFFFFFF FFFFFFF6 )
   C4:  	Call  $Function_80218EE0    ( FFFFFFF6 00000014 0000000A 00000014 )
   E0:  EndIf
   E8:  Wait  1`
   F4:  Goto  0
  100:  Return
  108:  End
}

#new:Script $Script_8022CDDC
{
    0:  Call  SetActorSounds    ( .Actor:Self .ActorSound:Walk 000020BA 000003B4 )
   1C:  Call  SetActorSounds    ( .Actor:Self .ActorSound:WalkIncrement 0000000A 00000000 )
   38:  SetConst  *Var0  00000001
   48:  SetConst  *Var1  003E0004
   58:  SetConst  *Var2  003E0001
   68:  ExecWait  DoReturnHome
   74:  Return
   7C:  End
}

#new:Script $Script_HandleEvent_8022CE60
{
    0:  Call  UseIdleAnimation  ( .Actor:Self .False )
   14:  Call  GetLastEvent      ( .Actor:Self *Var0 )
   28:  Switch  *Var0
   34:  	CaseOR  ==  .Event:HitCombo % 9
   40:  	CaseOR  ==  .Event:Hit % A
   4C:  		SetConst  *Var0  00000001
   5C:  		SetConst  *Var1  003E0006
   6C:  		ExecWait  DoNormalHit
   78:  	EndCaseGroup
   80:  	Case  ==  .Event:BurnHit % E
   8C:  		SetConst  *Var0  00000001
   9C:  		SetConst  *Var1  003E0006
   AC:  		SetConst  *Var2  FFFFFFFF
   BC:  		ExecWait  DoBurnHit
   C8:  	Case  ==  .Event:BurnDeath % 24
   D4:  		SetConst  *Var0  00000001
   E4:  		SetConst  *Var1  003E0006
   F4:  		SetConst  *Var2  FFFFFFFF
  104:  		ExecWait  DoBurnHit
  110:  		SetConst  *Var0  00000001
  120:  		SetConst  *Var1  003E0006
  130:  		ExecWait  DoDeath
  13C:  		Return
  144:  	Case  ==  .Event:SpinSmashHit % B
  150:  		SetConst  *Var0  00000001
  160:  		SetConst  *Var1  003E0006
  170:  		ExecWait  DoSpinSmashHit
  17C:  	Case  ==  .Event:SpinSmashDeath % 21
  188:  		SetConst  *Var0  00000001
  198:  		SetConst  *Var1  003E0006
  1A8:  		ExecWait  DoSpinSmashHit
  1B4:  		SetConst  *Var0  00000001
  1C4:  		SetConst  *Var1  003E0006
  1D4:  		ExecWait  DoDeath
  1E0:  		Return
  1E8:  	Case  ==  .Event:ShockHit % 2F
  1F4:  		SetConst  *Var0  00000001
  204:  		SetConst  *Var1  003E0006
  214:  		ExecWait  DoShockHit
  220:  		SetConst  *Var0  00000001
  230:  		SetConst  *Var1  003E0006
  240:  		ExecWait  DoJumpBack
  24C:  		Call  SetActorSpeed ( .Actor:Self *Fixed[4.0] )
  260:  		ExecWait  $Script_8022CDDC
  26C:  	Case  ==  .Event:ShockDeath % 26
  278:  		SetConst  *Var0  00000001
  288:  		SetConst  *Var1  003E0006
  298:  		ExecWait  DoShockHit
  2A4:  		SetConst  *Var0  00000001
  2B4:  		SetConst  *Var1  003E0006
  2C4:  		ExecWait  DoDeath
  2D0:  		Return
  2D8:  	CaseOR  ==  00000017 % 17
  2E4:  	CaseOR  ==  .Event:Immune % 19
  2F0:  	CaseOR  ==  .Event:AirLiftFailed % 1F
  2FC:  		SetConst  *Var0  00000001
  30C:  		SetConst  *Var1  003E0001
  31C:  		ExecWait  DoImmune
  328:  	EndCaseGroup
  330:  	Case  ==  .Event:Death % 20
  33C:  		SetConst  *Var0  00000001
  34C:  		SetConst  *Var1  003E0006
  35C:  		ExecWait  DoNormalHit
  368:  		SetConst  *Var0  00000001
  378:  		SetConst  *Var1  003E0006
  388:  		ExecWait  DoDeath
  394:  		Return
  39C:  	Case  ==  .Event:RecoverStatus % 31
  3A8:  		SetConst  *Var0  00000001
  3B8:  		SetConst  *Var1  003E0001
  3C8:  		ExecWait  DoRecover
  3D4:  	Case  ==  .Event:ScareAway % 39
  3E0:  		SetConst  *Var0  00000001
  3F0:  		SetConst  *Var1  003E0003
  400:  		SetConst  *Var2  003E0009
  410:  		ExecWait  DoScareAway
  41C:  		Return
  424:  	Case  ==  .Event:BeginAirLift % 3A
  430:  		SetConst  *Var0  00000001
  440:  		SetConst  *Var1  003E0003
  450:  		ExecWait  DoAirLift
  45C:  	Case  ==  .Event:BlowAway % 16
  468:  		SetConst  *Var0  00000001
  478:  		SetConst  *Var1  003E0003
  488:  		ExecWait  DoBlowAway
  494:  		Return
  49C:  	Case  ==  .Event:UpAndAway % 3D
  4A8:  		Return
  4B0:  	Default
  4B8:  EndSwitch
  4C0:  Call  UseIdleAnimation  ( .Actor:Self .True )
  4D4:  Return
  4DC:  End
}

#new:Script $Script_TakeTurn_8022D344
{
    0:  Call  UseIdleAnimation  ( .Actor:Self .False )
   14:  Call  SetTargetActor    ( .Actor:Self .Actor:Player )
   28:  Call  UseBattleCamPreset    ( 0000003F )
   38:  Call  BattleCamTargetActor  ( .Actor:Self )
   48:  Call  8024ECF8      ( FFFFFFFF 00000001 00000000 )
   60:  Call  SetAnimation  ( .Actor:Self 00000001 003E0003 )
   78:  Call  SetActorSpeed ( .Actor:Self *Fixed[4.0] )
   8C:  Call  SetGoalToTarget   ( .Actor:Self )
   9C:  Call  GetGoalPos    ( .Actor:Self *Var0 *Var1 *Var2 )
   B8:  Add   *Var0  00000046
   C8:  Set   *Var1  00000000
   D8:  Call  SetGoalPos    ( .Actor:Self *Var0 *Var1 *Var2 )
   F4:  Call  RunToGoal     ( .Actor:Self  0` .False )
  10C:  Call  SetActorSounds    ( .Actor:Self .ActorSound:Walk 000020BA 000003B4 )
  128:  Call  SetActorSounds    ( .Actor:Self .ActorSound:WalkIncrement 0000000A 00000000 )
  144:  Call  SetAnimation  ( .Actor:Self 00000001 003E0004 )
  15C:  Call  SetActorSpeed ( .Actor:Self *Fixed[6.0] )
  170:  Call  SetGoalToTarget   ( .Actor:Self )
  180:  Call  GetGoalPos    ( .Actor:Self *Var0 *Var1 *Var2 )
  19C:  Add   *Var0  00000014
  1AC:  Set   *Var1  00000000
  1BC:  Call  SetGoalPos    ( .Actor:Self *Var0 *Var1 *Var2 )
  1D8:  Call  RunToGoal     ( .Actor:Self  0` .False )
  1F0:  Call  EnemyTestTarget   ( .Actor:Self *Var0 ~Flags:DamageType:0 00000000 00000001 00000010 )
  214:  Switch  *Var0
  220:  	CaseOR  ==  .HitResult:Miss % 6
  22C:  	CaseOR  ==  .HitResult:Lucky % 5
  238:  		Set   *VarA  *Var0
  248:  		Call  SetActorSounds        ( .Actor:Self .ActorSound:Jump 000002EF 00000000 )
  264:  		Call  SetAnimation  ( .Actor:Self 00000001 003E0005 )
  27C:  		Call  SetGoalToTarget       ( .Actor:Self )
  28C:  		Call  RunToGoal     ( .Actor:Self  0` .False )
  2A4:  		Call  SetActorSpeed ( .Actor:Self *Fixed[6.0] )
  2B8:  		Call  SetActorJumpGravity   ( .Actor:Self *Fixed[0.5] )
  2CC:  		Call  GetActorPos   ( .Actor:Self *Var0 *Var1 *Var2 )
  2E8:  		Sub   *Var0  0000001E
  2F8:  		Call  SetGoalPos    ( .Actor:Self *Var0 *Var1 *Var2 )
  314:  		Call  JumpToGoal    ( .Actor:Self  8` .False .True .False )
  334:  		If  *VarA  ==  .HitResult:Lucky % 5
  344:  			Call  EnemyTestTarget   ( .Actor:Self *VarA ~Flags:DamageType:TriggerLucky 00000000 00000000 00000000 )
  368:  		EndIf
  370:  		Call  ResetAllActorSounds   ( .Actor:Self )
  380:  		Sub   *Var0  00000014
  390:  		Call  SetGoalPos        ( .Actor:Self *Var0 *Var1 *Var2 )
  3AC:  		Call  JumpToGoal        ( .Actor:Self  8` .False .True .False )
  3CC:  		Wait  15`
  3D8:  		Call  UseBattleCamPreset    ( 00000002 )
  3E8:  		Call  YieldTurn ( )
  3F4:  		Call  SetActorYaw       ( .Actor:Self  180` )
  408:  		Call  AddActorDecoration    ( .Actor:Self 00000001 00000000 .Decoration:Sweat )
  424:  		Call  SetActorSpeed     ( .Actor:Self *Fixed[4.0] )
  438:  		ExecWait  $Script_8022CDDC
  444:  		Call  RemoveActorDecoration ( .Actor:Self 00000001 00000000 )
  45C:  		Call  SetActorYaw       ( .Actor:Self  0` )
  470:  		Call  UseIdleAnimation  ( .Actor:Self .True )
  484:  		Return
  48C:  	EndCaseGroup
  494:  EndSwitch
  49C:  Call  PlaySoundAtActor  ( .Actor:Self 000002EF )
  4B0:  Call  SetAnimation      ( .Actor:Self 00000001 003E0005 )
  4C8:  Call  SetGoalToTarget   ( .Actor:Self )
  4D8:  Call  GetGoalPos        ( .Actor:Self *Var0 *Var1 *Var2 )
  4F4:  Add   *Var0  0000000A
  504:  Set   *Var1  00000000
  514:  Call  SetGoalPos        ( .Actor:Self *Var0 *Var1 *Var2 )
  530:  Call  RunToGoal ( .Actor:Self  0` .False )
  548:  Wait  2`
  554:  Call  SetGoalToTarget   ( .Actor:Self )
  564:  Call  EnemyDamageTarget ( .Actor:Self *Var0 ~Flags:DamageType:Fire 00000000 00000000 00000004 00000020 )
  58C:  Switch  *Var0
  598:  	CaseOR  ==  .HitResult:Hit % 0
  5A4:  	CaseOR  ==  .HitResult:QuakeImmune % 2
  5B0:  		Call  ResetAllActorSounds   ( .Actor:Self )
  5C0:  		Call  UseBattleCamPreset    ( 00000002 )
  5D0:  		Call  GetGoalPos    ( .Actor:Self *Var0 *Var1 *Var2 )
  5EC:  		Add   *Var0  0000001E
  5FC:  		Set   *Var1  00000000
  60C:  		Call  SetActorJumpGravity   ( .Actor:Self *Fixed[1.8] )
  620:  		Call  SetGoalPos    ( .Actor:Self *Var0 *Var1 *Var2 )
  63C:  		Call  JumpToGoal    ( .Actor:Self  10` .False .True .False )
  65C:  		Call  SetAnimation  ( .Actor:Self 00000001 003E0001 )
  674:  		Wait  8`
  680:  		Call  YieldTurn ( )
  68C:  		Call  SetActorSpeed ( .Actor:Self *Fixed[6.0] )
  6A0:  		ExecWait  $Script_8022CDDC
  6AC:  	EndCaseGroup
  6B4:  EndSwitch
  6BC:  Call  UseIdleAnimation  ( .Actor:Self .True )
  6D0:  Return
  6D8:  End
}

PADDING: 8022DA24 to 8022DA30 (00527FF4 to 00528000)
00000000 00000000 00000000

#new:Unknown $???_8022DA30
{
	00000019
}

#new:Script $Script_8022DA34
{
    0:  Call  $Function_80218FB0 ( )
    C:  Return
   14:  End
}

#new:Script $Script_BeforeBattle_8022DA50
{
    0:  Call  SetSpriteShading  ( FFFFFFFF )
   10:  Call  SetCamBGColor     ( .Cam:Battle  0`  0`  0` )
   2C:  Thread
   34:  	SetF  *Var0  *Fixed[0.0]
   44:  	SetF  *Var1  *Fixed[0.0]
   54:  	Loop
   60:  		Call  RotateModel       ( ~Model:omo_bt01:o367 *Var1 00000000 00000000 00000001 )
   80:  		Call  RotateModel       ( ~Model:omo_bt01:hari *Var0 00000000 00000000 00000001 )
   A0:  		SubF  *Var0  *Fixed[0.6]
   B0:  		SubF  *Var1  *Fixed[7.2]
   C0:  		Call  ClampAngleFloat   ( *Var0 )
   D0:  		Call  ClampAngleFloat   ( *Var1 )
   E0:  		Wait  1`
   EC:  	EndLoop
   F4:  EndThread
   FC:  Exec  $Script_8022DA34
  108:  Return
  110:  End
}

#new:Script $Script_AfterBattle_8022DB68
{
    0:  Return
    8:  End
}

#new:Stage $Stage_8022DB78
{
	$ASCII_80230B48  % omo_tex
	$ASCII_80230B38  % omo_bt01_shape
	$ASCII_80230B28  % omo_bt01_hit
	$Script_BeforeBattle_8022DA50
	$Script_AfterBattle_8022DB68
	$ASCII_80230B20  % omo_bg
	00000000
	00000000
	00000000
	00000000
}

#new:Script $Script_BeforeBattle_8022DBA0
{
    0:  Call  SetSpriteShading  ( FFFFFFFF )
   10:  Call  SetCamBGColor     ( .Cam:Battle  0`  0`  0` )
   2C:  Return
   34:  End
}

#new:Script $Script_AfterBattle_8022DBDC
{
    0:  Return
    8:  End
}

#new:Stage $Stage_8022DBEC
{
	$ASCII_80230B78  % omo_tex
	$ASCII_80230B68  % omo_bt02_shape
	$ASCII_80230B58  % omo_bt02_hit
	$Script_BeforeBattle_8022DBA0
	$Script_AfterBattle_8022DBDC
	$ASCII_80230B50  % omo_bg
	00000000
	00000000
	00000000
	00000000
}

PADDING: 8022DC14 to 8022DC20 (005281E4 to 005281F0)
00000000 00000000 00000000

#new:Script $Script_BeforeBattle_8022DC20
{
    0:  Call  SetSpriteShading  ( FFFFFFFF )
   10:  Call  SetCamBGColor     ( .Cam:Battle  0`  0`  0` )
   2C:  Call  SetGroupEnabled   ( ~Model:omo_bt03:g97 00000000 )
   40:  Return
   48:  End
}

#new:Script $Script_AfterBattle_8022DC70
{
    0:  Return
    8:  End
}

#new:Stage $Stage_8022DC80
{
	$ASCII_80230BA8  % omo_tex
	$ASCII_80230B98  % omo_bt03_shape
	$ASCII_80230B88  % omo_bt03_hit
	$Script_BeforeBattle_8022DC20
	$Script_AfterBattle_8022DC70
	$ASCII_80230B80  % omo_bg
	00000000
	00000000
	00000000
	00000000
}

PADDING: 8022DCA8 to 8022DCB0 (00528278 to 00528280)
00000000 00000000

#new:Script $Script_BeforeBattle_8022DCB0
{
    0:  Call  SetSpriteShading  ( FFFFFFFF )
   10:  Call  SetCamBGColor     ( .Cam:Battle  0`  0`  0` )
   2C:  Return
   34:  End
}

#new:Script $Script_AfterBattle_8022DCEC
{
    0:  Return
    8:  End
}

#new:Stage $Stage_8022DCFC
{
	$ASCII_80230BD8  % omo_tex
	$ASCII_80230BC8  % omo_bt03_shape
	$ASCII_80230BB8  % omo_bt03_hit
	$Script_BeforeBattle_8022DCB0
	$Script_AfterBattle_8022DCEC
	$ASCII_80230BB0  % omo_bg
	00000000
	00000000
	00000000
	00000000
}

PADDING: 8022DD24 to 8022DD30 (005282F4 to 00528300)
00000000 00000000 00000000

#new:Script $Script_BeforeBattle_8022DD30
{
    0:  Call  SetSpriteShading  ( FFFFFFFF )
   10:  Call  SetCamBGColor     ( .Cam:Battle  0`  0`  0` )
   2C:  Call  SetTexPanner      ( ~Model:omo_bt04:o409 0000000A )
   40:  Thread
   48:  	Set   *VarE  00000000
   58:  	Loop
   64:  		Add   *VarE  00008000
   74:  		Call  SetTexPanOffset   ( 0000000A 00000000 *VarE 00000000 )
   90:  		Wait  10`
   9C:  	EndLoop
   A4:  EndThread
   AC:  Return
   B4:  End
}

#new:Script $Script_AfterBattle_8022DDEC
{
    0:  Return
    8:  End
}

#new:ForegroundModelList $ForegroundModelList_8022DDFC
{
	~Model:omo_bt04:itigo
	~Model:omo_bt04:kisya
	~Model:omo_bt04:kusari
	00000000
}

#new:Stage $Stage_8022DE0C
{
	$ASCII_80230C08  % omo_tex
	$ASCII_80230BF8  % omo_bt04_shape
	$ASCII_80230BE8  % omo_bt04_hit
	$Script_BeforeBattle_8022DD30
	$Script_AfterBattle_8022DDEC
	$ASCII_80230BE0  % omo_bg
	$ForegroundModelList_8022DDFC
	00000004
	$SpecialFormation_8022DE64
	00000000
}

#new:Vector3D $Vector3D_8022DE34
{
	-49` 56` -68`
}

#new:Vector3D $Vector3D_8022DE40
{
	-13` 56` -68`
}

#new:Vector3D $Vector3D_8022DE4C
{
	20` 56` -68`
}

#new:Vector3D $Vector3D_8022DE58
{
	53` 56` -68`
}

#new:SpecialFormation $SpecialFormation_8022DE64
{
	$SlotMachineStart $Vector3D_8022DE34 00000000 00000000 00000000 00000000 00000000
	$SlotMachineStop $Vector3D_8022DE40 00000000 00000001 00000000 00000000 00000000
	$SlotMachineStop $Vector3D_8022DE4C 00000000 00000002 00000000 00000000 00000000
	$SlotMachineStop $Vector3D_8022DE58 00000000 00000003 00000000 00000000 00000000
}

#new:IntTable $IntTable_8022DED4
{
	00000000 00000001 00000000 00000002 00000000 00000002 00000000 00000002
}

#new:IntTable $IntTable_8022DEF4
{
	00000000 00000001 00000000 00000002 00000001 00000002 00000000 00000002
}

#new:IntTable $IntTable_8022DF14
{
	00000000 00000001 00000000 00000002 00000000 00000002 00000000 00000002
}

#new:DefenseTable $DefenseTable_8022DF34
{
	.Element:Normal 00000000
	.Element:End
}

#new:StatusTable $StatusTable_8022DF40
{
	.Status:Normal      0`
	.Status:Default     0`
	.Status:Sleep       0`
	.Status:Poison      0`
	.Status:Frozen      0`
	.Status:Dizzy       0`
	.Status:Fear        0`
	.Status:Static      0`
	.Status:Paralyze    0`
	.Status:Shrink      0`
	.Status:Stop        0`
	.Status:DefaultTurnMod    0`
	.Status:SleepTurnMod      0`
	.Status:PoisonTurnMod     0`
	.Status:FrozenTurnMod     0`
	.Status:DizzyTurnMod      0`
	.Status:FearTurnMod       0`
	.Status:StaticTurnMod     0`
	.Status:ParalyzeTurnMod   0`
	.Status:ShrinkTurnMod     0`
	.Status:StopTurnMod       0`
	.Status:End
}

#new:PartsTable $PartsTable_8022DFEC
{
	00800000 01000000 000000FF 00000000 $DefenseTable_8022DF34 00000000 00000000 00000000 00000000
}

#new:Actor $SlotMachineStop
{
	% stats
	[Index]        CFb
	[Level]        99`b
	[MaxHP]        99`b
	[Coins]         0`b
	[Flags]       00244005
	[StatusTable] $StatusTable_8022DF40
	% ai
	[PartsCount]    1`s
	[PartsTable]  $PartsTable_8022DFEC
	[Script]      $Script_Init_8022E060
	% move effectiveness
	[Escape]        0`b
	[Item]          0`b
	[AirLift]       0`b
	[Hurricane]     0`b % Bow's "Spook" as well
	[UpAndAway]     0`b
	[PowerBounce]   0`b
	[SpinSmash]     0`b % weight (0-4)
	% ui positions
	[Size]         44`b  40`b % width height
	[HealthBar]     0`b   0`b % dx dy
	[StatusTurn]  -10`b  20`b % dx dy
	[StatusIcon]   10`b  20`b % dx dy
}

#new:Actor $SlotMachineStart
{
	% stats
	[Index]        CEb
	[Level]        99`b
	[MaxHP]        99`b
	[Coins]         0`b
	[Flags]       00244005
	[StatusTable] $StatusTable_8022DF40
	% ai
	[PartsCount]    1`s
	[PartsTable]  $PartsTable_8022DFEC
	[Script]      $Script_Init_8022E060
	% move effectiveness
	[Escape]        0`b
	[Item]          0`b
	[AirLift]       0`b
	[Hurricane]     0`b % Bow's "Spook" as well
	[UpAndAway]     0`b
	[PowerBounce]   0`b
	[SpinSmash]     0`b % weight (0-4)
	% ui positions
	[Size]         44`b  40`b % width height
	[HealthBar]     0`b   0`b % dx dy
	[StatusTurn]  -10`b  20`b % dx dy
	[StatusIcon]   10`b  20`b % dx dy
}

#new:Script $Script_Init_8022E060
{
    0:  UseArray  $End[290]
    C:  Call  BindTakeTurn      ( .Actor:Self $Script_TakeTurn_8022F4A8 )
   20:  Call  BindIdle  ( .Actor:Self $Script_Idle_8022E1F8 )
   34:  Call  BindHandleEvent   ( .Actor:Self $Script_HandleEvent_8022ED54 )
   48:  Set   *Array[1]  00000000
   58:  Set   *Array[2]  00000000
   68:  Set   *Array[3]  00000000
   78:  Set   *Array[4]  00000000
   88:  Call  RandInt   ( 00000008 *Var0 )
   9C:  Mul   *Var0  0000002D
   AC:  Set   *Array[5]  *Var0
   BC:  Call  RandInt   ( 00000008 *Var0 )
   D0:  Mul   *Var0  0000002D
   E0:  Set   *Array[6]  *Var0
   F0:  Call  RandInt   ( 00000008 *Var0 )
  104:  Mul   *Var0  0000002D
  114:  Set   *Array[7]  *Var0
  124:  Call  $Function_802191C0 ( )
  130:  If  *Var0  ==  00000001
  140:  	Set   *Array[1]  00000001
  150:  	Set   *Array[2]  00000001
  160:  	Set   *Array[3]  00000001
  170:  	Set   *Array[4]  00000001
  180:  EndIf
  188:  Return
  190:  End
}

#new:Script $Script_Idle_8022E1F8
{
    0:  UseArray  $End[290]
    C:  Call  EnableTexPanning  ( 0000002D .True )
   20:  Set   *VarE  00000000
   30:  Set   *VarF  00000000
   40:  Label  0
   4C:  Call  GetActorVar       ( .Actor:Self 00000000 *Var0 )
   64:  Switch  *Var0
   70:  	Case  ==  00000000
   7C:  	Case  ==  00000001
   88:  		Switch  *Array[2]
   94:  			Case  ==  00000000
   A0:  			Case  ==  00000001
   AC:  				Add   *Array[5]  00000005
   BC:  			Case  ==  00000002
   C8:  				If  *Array[8]  >  00000000
   D8:  					Add   *Array[5]  00000005
   E8:  					Sub   *Array[8]  00000005
   F8:  					BreakCase
  100:  				EndIf
  108:  				Set   *Var0  *Array[5]
  118:  				Mod   *Var0  0000002D
  128:  				If  *Var0  !=  00000000
  138:  					Add   *Array[5]  00000005
  148:  				Else
  150:  					Set   *Array[2]  00000003
  160:  				EndIf
  168:  		EndSwitch
  170:  		Call  RotateModel   ( 00000020 *Array[5] 00000001 00000000 00000000 )
  190:  		Call  RotateModel   ( 00000021 *Array[5] 00000001 00000000 00000000 )
  1B0:  		Call  RotateModel   ( 00000022 *Array[5] 00000001 00000000 00000000 )
  1D0:  	Case  ==  00000002
  1DC:  		Switch  *Array[3]
  1E8:  			Case  ==  00000000
  1F4:  			Case  ==  00000001
  200:  				Add   *Array[6]  00000005
  210:  			Case  ==  00000002
  21C:  				If  *Array[9]  >  00000000
  22C:  					Add   *Array[6]  00000005
  23C:  					Sub   *Array[9]  00000005
  24C:  					BreakCase
  254:  				EndIf
  25C:  				Set   *Var0  *Array[6]
  26C:  				Mod   *Var0  0000002D
  27C:  				If  *Var0  !=  00000000
  28C:  					Add   *Array[6]  00000005
  29C:  				Else
  2A4:  					Set   *Array[3]  00000003
  2B4:  				EndIf
  2BC:  		EndSwitch
  2C4:  		Call  RotateModel   ( 00000024 *Array[6] 00000001 00000000 00000000 )
  2E4:  		Call  RotateModel   ( 00000025 *Array[6] 00000001 00000000 00000000 )
  304:  		Call  RotateModel   ( 00000026 *Array[6] 00000001 00000000 00000000 )
  324:  	Case  ==  00000003
  330:  		Switch  *Array[4]
  33C:  			Case  ==  00000000
  348:  			Case  ==  00000001
  354:  				Add   *Array[7]  00000005
  364:  			Case  ==  00000002
  370:  				If  *Array[A]  >  00000000
  380:  					Add   *Array[7]  00000005
  390:  					Sub   *Array[A]  00000005
  3A0:  					BreakCase
  3A8:  				EndIf
  3B0:  				Set   *Var0  *Array[7]
  3C0:  				Mod   *Var0  0000002D
  3D0:  				If  *Var0  !=  00000000
  3E0:  					Add   *Array[7]  00000005
  3F0:  				Else
  3F8:  					Set   *Array[4]  00000003
  408:  				EndIf
  410:  		EndSwitch
  418:  		Call  RotateModel   ( 00000028 *Array[7] 00000001 00000000 00000000 )
  438:  		Call  RotateModel   ( 00000029 *Array[7] 00000001 00000000 00000000 )
  458:  		Call  RotateModel   ( 0000002A *Array[7] 00000001 00000000 00000000 )
  478:  EndSwitch
  480:  If  *Array[5]  >=  00000168
  490:  	Sub   *Array[5]  00000168
  4A0:  EndIf
  4A8:  If  *Array[6]  >=  00000168
  4B8:  	Sub   *Array[6]  00000168
  4C8:  EndIf
  4D0:  If  *Array[7]  >=  00000168
  4E0:  	Sub   *Array[7]  00000168
  4F0:  EndIf
  4F8:  If  *Array[1]  ==  00000000
  508:  	Add   *VarF  FFFFFEEB
  518:  	Call  SetTexPanOffset   ( 0000000B 00000000 00000000 *VarF )
  534:  EndIf
  53C:  If  *Array[1]  ==  00000001
  54C:  	Add   *VarF  FFFFFBAA
  55C:  	Call  SetTexPanOffset   ( 0000000B 00000000 00000000 *VarF )
  578:  EndIf
  580:  If  *Array[1]  ==  00000002
  590:  	Add   *VarF  FFFFF2FE
  5A0:  	Call  SetTexPanOffset   ( 0000000B 00000000 00000000 *VarF )
  5BC:  EndIf
  5C4:  If  *Array[1]  ==  00000002
  5D4:  	Goto  1
  5E0:  EndIf
  5E8:  If  *Array[1]  ==  00000000
  5F8:  	Goto  1
  604:  EndIf
  60C:  Call  GetActorVar   ( .Actor:Self 00000000 *Var0 )
  624:  If  *Var0  !=  00000000
  634:  	Goto  1
  640:  EndIf
  648:  Set   *Var0  *Array[2]
  658:  Add   *Var0  *Array[3]
  668:  Add   *Var0  *Array[4]
  678:  If  *Var0  ==  00000009
  688:  	Set   *Var0  *Array[5]
  698:  	Div   *Var0  0000002D
  6A8:  	UseIntBuffer  $IntTable_8022DED4
  6B4:  	GetIntN  *VarA *Var0
  6C4:  	Set   *Var0  *Array[6]
  6D4:  	Div   *Var0  0000002D
  6E4:  	UseIntBuffer  $IntTable_8022DEF4
  6F0:  	GetIntN  *VarB *Var0
  700:  	Set   *Var0  *Array[7]
  710:  	Div   *Var0  0000002D
  720:  	UseIntBuffer  $IntTable_8022DF14
  72C:  	GetIntN  *VarC *Var0
  73C:  	Loop
  748:  		If  *VarA  !=  *VarB
  758:  			BreakLoop
  760:  		EndIf
  768:  		If  *VarA  !=  *VarC
  778:  			BreakLoop
  780:  		EndIf
  788:  		If  *VarB  !=  *VarC
  798:  			BreakLoop
  7A0:  		EndIf
  7A8:  		Thread
  7B0:  			Call  8026BF48  ( 00000001 )
  7C0:  			Call  UseBattleCamPreset    ( 00000013 )
  7D0:  			Call  SetBattleCamTarget    (  0`  100`  0` )
  7E8:  			Call  SetBattleCamOffsetZ   (  0` )
  7F8:  			Call  SetBattleCamZoom      (  340` )
  808:  			Call  MoveBattleCamOver     (  10` )
  818:  			Switch  *VarA
  824:  				Case  ==  00000000
  830:  					Loop  0000000A
  83C:  						Call  MakeItemEntity    ( .Item:Coin FFFFFFF9 00000069 FFFFFFB6 .ItemSpawnMode:Toss_SpawnAlways_Small 00000000 )
  860:  						Call  $Function_802191E8 ( )
  86C:  						Wait  1`
  878:  						Call  MakeItemEntity    ( .Item:Coin 00000011 00000069 FFFFFFB6 .ItemSpawnMode:Toss_SpawnAlways_Small 00000000 )
  89C:  						Call  $Function_802191E8 ( )
  8A8:  						Wait  1`
  8B4:  						Call  MakeItemEntity    ( .Item:Coin 0000002A 00000069 FFFFFFB6 .ItemSpawnMode:Toss_SpawnAlways_Small 00000000 )
  8D8:  						Call  $Function_802191E8 ( )
  8E4:  						Wait  10`
  8F0:  					EndLoop
  8F8:  				Case  ==  00000001
  904:  					Loop  0000000A
  910:  						Call  MakeItemEntity    ( .Item:Coin FFFFFFF9 00000069 FFFFFFB6 .ItemSpawnMode:Toss_SpawnAlways_Small 00000000 )
  934:  						Call  $Function_802191E8 ( )
  940:  						Wait  1`
  94C:  						Call  MakeItemEntity    ( .Item:Coin 00000011 00000069 FFFFFFB6 .ItemSpawnMode:Toss_SpawnAlways_Small 00000000 )
  970:  						Call  $Function_802191E8 ( )
  97C:  						Wait  1`
  988:  						Call  MakeItemEntity    ( .Item:Coin 0000002A 00000069 FFFFFFB6 .ItemSpawnMode:Toss_SpawnAlways_Small 00000000 )
  9AC:  						Call  $Function_802191E8 ( )
  9B8:  						Wait  10`
  9C4:  					EndLoop
  9CC:  				Case  ==  00000002
  9D8:  					Loop  0000000A
  9E4:  						Call  MakeItemEntity    ( .Item:Coin FFFFFFF9 00000069 FFFFFFB6 .ItemSpawnMode:Toss_SpawnAlways_Small 00000000 )
  A08:  						Call  $Function_802191E8 ( )
  A14:  						Wait  1`
  A20:  						Call  MakeItemEntity    ( .Item:Coin 00000011 00000069 FFFFFFB6 .ItemSpawnMode:Toss_SpawnAlways_Small 00000000 )
  A44:  						Call  $Function_802191E8 ( )
  A50:  						Wait  1`
  A5C:  						Call  MakeItemEntity    ( .Item:Coin 0000002A 00000069 FFFFFFB6 .ItemSpawnMode:Toss_SpawnAlways_Small 00000000 )
  A80:  						Call  $Function_802191E8 ( )
  A8C:  						Wait  10`
  A98:  					EndLoop
  AA0:  			EndSwitch
  AA8:  			Set   *Array[1]  00000000
  AB8:  			Set   *Array[2]  00000000
  AC8:  			Set   *Array[3]  00000000
  AD8:  			Set   *Array[4]  00000000
  AE8:  			Call  8026BF48  ( 00000000 )
  AF8:  		EndThread
  B00:  		Set   *Array[1]  00000002
  B10:  		BreakLoop
  B18:  	EndLoop
  B20:  EndIf
  B28:  Label  1
  B34:  Wait  1`
  B40:  Goto  0
  B4C:  Return
  B54:  End
}

#new:Script $Script_HandleEvent_8022ED54
{
    0:  UseArray  $End[290]
    C:  Call  UseIdleAnimation  ( .Actor:Self .False )
   20:  Call  GetLastEvent      ( .Actor:Self *Var0 )
   34:  Switch  *Var0
   40:  	CaseOR  ==  .Event:HitCombo % 9
   4C:  	CaseOR  ==  .Event:Hit % A
   58:  	CaseOR  ==  .Event:BurnHit % E
   64:  	CaseOR  ==  .Event:ShockHit % 2F
   70:  		Call  GetActorVar   ( .Actor:Self 00000000 *Var0 )
   88:  		Switch  *Var0
   94:  			Case  ==  00000000
   A0:  				Call  TranslateModel    ( 0000001C 00000000 FFFFFFFE 00000000 )
   BC:  				Wait  1`
   C8:  				Call  TranslateModel    ( 0000001C 00000000 FFFFFFFA 00000000 )
   E4:  				Wait  1`
   F0:  				Call  TranslateModel    ( 0000001C 00000000 FFFFFFF9 00000000 )
  10C:  				Wait  4`
  118:  				Call  TranslateModel    ( 0000001C 00000000 FFFFFFFC 00000000 )
  134:  				Wait  1`
  140:  				Call  TranslateModel    ( 0000001C 00000000 FFFFFFFE 00000000 )
  15C:  				Wait  1`
  168:  				Call  TranslateModel    ( 0000001C 00000000 FFFFFFFF 00000000 )
  184:  				Wait  1`
  190:  				Call  TranslateModel    ( 0000001C 00000000 00000000 00000000 )
  1AC:  				Set   *Array[1]  00000001
  1BC:  				Set   *Array[2]  00000001
  1CC:  				Set   *Array[3]  00000001
  1DC:  				Set   *Array[4]  00000001
  1EC:  			Case  ==  00000001
  1F8:  				Call  TranslateModel    ( 0000001D 00000000 FFFFFFFE 00000000 )
  214:  				Wait  1`
  220:  				Call  TranslateModel    ( 0000001D 00000000 FFFFFFFA 00000000 )
  23C:  				Wait  1`
  248:  				Call  TranslateModel    ( 0000001D 00000000 FFFFFFF9 00000000 )
  264:  				Wait  4`
  270:  				Call  TranslateModel    ( 0000001D 00000000 FFFFFFFC 00000000 )
  28C:  				Wait  1`
  298:  				Call  TranslateModel    ( 0000001D 00000000 FFFFFFFE 00000000 )
  2B4:  				Wait  1`
  2C0:  				Call  TranslateModel    ( 0000001D 00000000 FFFFFFFF 00000000 )
  2DC:  				Wait  1`
  2E8:  				Call  TranslateModel    ( 0000001D 00000000 00000000 00000000 )
  304:  				If  *Array[2]  ==  00000001
  314:  					Set   *Array[8]  00000064
  324:  					Set   *Array[9]  00000096
  334:  					Set   *Array[A]  000000C8
  344:  					Set   *Array[2]  00000002
  354:  					Set   *Array[3]  00000002
  364:  					Set   *Array[4]  00000002
  374:  				EndIf
  37C:  			Case  ==  00000002
  388:  				Call  TranslateModel    ( 0000001D 00000000 FFFFFFFE 00000000 )
  3A4:  				Wait  1`
  3B0:  				Call  TranslateModel    ( 0000001D 00000000 FFFFFFFA 00000000 )
  3CC:  				Wait  1`
  3D8:  				Call  TranslateModel    ( 0000001D 00000000 FFFFFFF9 00000000 )
  3F4:  				Wait  4`
  400:  				Call  TranslateModel    ( 0000001D 00000000 FFFFFFFC 00000000 )
  41C:  				Wait  1`
  428:  				Call  TranslateModel    ( 0000001D 00000000 FFFFFFFE 00000000 )
  444:  				Wait  1`
  450:  				Call  TranslateModel    ( 0000001D 00000000 FFFFFFFF 00000000 )
  46C:  				Wait  1`
  478:  				Call  TranslateModel    ( 0000001D 00000000 00000000 00000000 )
  494:  				If  *Array[3]  ==  00000001
  4A4:  					Set   *Array[8]  00000096
  4B4:  					Set   *Array[9]  00000064
  4C4:  					Set   *Array[A]  000000C8
  4D4:  					Set   *Array[2]  00000002
  4E4:  					Set   *Array[3]  00000002
  4F4:  					Set   *Array[4]  00000002
  504:  				EndIf
  50C:  			Case  ==  00000003
  518:  				Call  TranslateModel    ( 0000001D 00000000 FFFFFFFE 00000000 )
  534:  				Wait  1`
  540:  				Call  TranslateModel    ( 0000001D 00000000 FFFFFFFA 00000000 )
  55C:  				Wait  1`
  568:  				Call  TranslateModel    ( 0000001D 00000000 FFFFFFF9 00000000 )
  584:  				Wait  4`
  590:  				Call  TranslateModel    ( 0000001D 00000000 FFFFFFFC 00000000 )
  5AC:  				Wait  1`
  5B8:  				Call  TranslateModel    ( 0000001D 00000000 FFFFFFFE 00000000 )
  5D4:  				Wait  1`
  5E0:  				Call  TranslateModel    ( 0000001D 00000000 FFFFFFFF 00000000 )
  5FC:  				Wait  1`
  608:  				Call  TranslateModel    ( 0000001D 00000000 00000000 00000000 )
  624:  				If  *Array[4]  ==  00000001
  634:  					Set   *Array[8]  000000C8
  644:  					Set   *Array[9]  00000096
  654:  					Set   *Array[A]  00000064
  664:  					Set   *Array[2]  00000002
  674:  					Set   *Array[3]  00000002
  684:  					Set   *Array[4]  00000002
  694:  				EndIf
  69C:  		EndSwitch
  6A4:  	EndCaseGroup
  6AC:  	CaseOR  ==  .Event:BurnDeath % 24
  6B8:  	CaseOR  ==  .Event:SpinSmashHit % B
  6C4:  	CaseOR  ==  .Event:ShockDeath % 26
  6D0:  	CaseOR  ==  .Event:Death % 20
  6DC:  	CaseOR  ==  .Event:SpinSmashDeath % 21
  6E8:  	CaseOR  ==  .Event:SpikeContact % 2A
  6F4:  	CaseOR  ==  .Event:BurnContact % 2C
  700:  	EndCaseGroup
  708:  	CaseOR  ==  00000017 % 17
  714:  	CaseOR  ==  .Event:Immune % 19
  720:  	EndCaseGroup
  728:  EndSwitch
  730:  Call  UseIdleAnimation  ( .Actor:Self .True )
  744:  Return
  74C:  End
}

#new:Script $Script_TakeTurn_8022F4A8
{
    0:  UseArray  $End[290]
    C:  Return
   14:  End
}

PADDING: 8022F4C4 to 8022F4D0 (00529A94 to 00529AA0)
00000000 00000000 00000000

#new:Script $Script_BeforeBattle_8022F4D0
{
    0:  Call  SetSpriteShading  ( FFFFFFFF )
   10:  Call  SetCamBGColor     ( .Cam:Battle  0`  0`  0` )
   2C:  Call  SetGroupEnabled   ( ~Model:omo_bt05:g1 00000000 )
   40:  Call  SetGroupEnabled   ( ~Model:omo_bt05:dai1 00000000 )
   54:  Return
   5C:  End
}

#new:Script $Script_AfterBattle_8022F534
{
    0:  Return
    8:  End
}

#new:ForegroundModelList $ForegroundModelList_8022F544
{
	~Model:omo_bt05:itigo
	~Model:omo_bt05:kisya
	00000000
}

#new:Stage $Stage_8022F550
{
	$ASCII_80230C38  % omo_tex
	$ASCII_80230C28  % omo_bt05_shape
	$ASCII_80230C18  % omo_bt05_hit
	$Script_BeforeBattle_8022F4D0
	$Script_AfterBattle_8022F534
	$ASCII_80230C10  % omo_bg
	$ForegroundModelList_8022F544
	00000000
	00000000
	00000000
}

PADDING: 8022F578 to 8022F580 (00529B48 to 00529B50)
00000000 00000000

#new:Script $Script_BeforeBattle_8022F580
{
    0:  Call  SetSpriteShading  ( FFFFFFFF )
   10:  Call  SetCamBGColor     ( .Cam:Battle  0`  0`  0` )
   2C:  Call  SetGroupEnabled   ( ~Model:omo_bt05:g2 00000000 )
   40:  Call  SetGroupEnabled   ( ~Model:omo_bt05:dai2 00000000 )
   54:  Return
   5C:  End
}

#new:Script $Script_AfterBattle_8022F5E4
{
    0:  Return
    8:  End
}

#new:ForegroundModelList $ForegroundModelList_8022F5F4
{
	~Model:omo_bt05:mae2
	00000000
}

#new:Stage $Stage_8022F5FC
{
	$ASCII_80230C68  % omo_tex
	$ASCII_80230C58  % omo_bt05_shape
	$ASCII_80230C48  % omo_bt05_hit
	$Script_BeforeBattle_8022F580
	$Script_AfterBattle_8022F5E4
	$ASCII_80230C40  % omo_bg
	$ForegroundModelList_8022F5F4
	00000000
	00000000
	00000000
}

PADDING: 8022F624 to 8022F630 (00529BF4 to 00529C00)
00000000 00000000 00000000

#new:Script $Script_8022F630
{
    0:  Set   *VarA  *Var0
   10:  Set   *Var9  *Var1
   20:  Set   *Var8  *Var2
   30:  Label  0
   3C:  Call  MakeLerp  ( 00000000 *Var9 *Var8 .Easing:CosInOut )
   58:  Loop
   64:  	Call  UpdateLerp ( )
   70:  	Call  TranslateGroup    ( *VarA 00000000 *Var0 00000000 )
   8C:  	Wait  1`
   98:  	If  *Var1  ==  00000000
   A8:  		BreakLoop
   B0:  	EndIf
   B8:  EndLoop
   C0:  Call  MakeLerp  ( *Var9 00000000 *Var8 .Easing:CosInOut )
   DC:  Loop
   E8:  	Call  UpdateLerp ( )
   F4:  	Call  TranslateGroup    ( *VarA 00000000 *Var0 00000000 )
  110:  	Wait  1`
  11C:  	If  *Var1  ==  00000000
  12C:  		BreakLoop
  134:  	EndIf
  13C:  EndLoop
  144:  Goto  0
  150:  Return
  158:  End
}

#new:Script $Script_BeforeBattle_8022F790
{
    0:  Call  SetSpriteShading  ( FFFFFFFF )
   10:  Call  SetCamBGColor     ( .Cam:Battle  0`  0`  0` )
   2C:  Thread
   34:  	Set   *Var0  0000001A
   44:  	Set   *Var1  FFFFFFCE
   54:  	Set   *Var2  00000078
   64:  	Exec  $Script_8022F630
   70:  	Wait  10`
   7C:  	Set   *Var0  0000001E
   8C:  	Set   *Var1  FFFFFFB0
   9C:  	Set   *Var2  00000096
   AC:  	Exec  $Script_8022F630
   B8:  EndThread
   C0:  Return
   C8:  End
}

#new:Script $Script_AfterBattle_8022F860
{
    0:  Return
    8:  End
}

#new:ForegroundModelList $ForegroundModelList_8022F870
{
	~Model:omo_bt06:kuruma
	~Model:omo_bt06:hosi
	00000000
}

#new:Stage $Stage_8022F87C
{
	$ASCII_80230C98  % omo_tex
	$ASCII_80230C88  % omo_bt06_shape
	$ASCII_80230C78  % omo_bt06_hit
	$Script_BeforeBattle_8022F790
	$Script_AfterBattle_8022F860
	$ASCII_80230C70  % omo_bg
	$ForegroundModelList_8022F870
	00000000
	00000000
	00000000
}

PADDING: 8022F8A4 to 8022F8B0 (00529E74 to 00529E80)
00000000 00000000 00000000

#new:Script $Script_BeforeBattle_8022F8B0
{
    0:  Call  SetSpriteShading  ( FFFFFFFF )
   10:  Call  SetCamBGColor     ( .Cam:Battle  0`  0`  0` )
   2C:  Return
   34:  End
}

#new:Script $Script_AfterBattle_8022F8EC
{
    0:  Return
    8:  End
}

#new:Stage $Stage_8022F8FC
{
	$ASCII_80230CC0  % omo_tex
	$ASCII_80230CB0  % omo_bt07_shape
	$ASCII_80230CA0  % omo_bt07_hit
	$Script_BeforeBattle_8022F8B0
	$Script_AfterBattle_8022F8EC
	00000000
	00000000
	00000000
	00000000
	00000000
}

PADDING: 8022F924 to 8022F930 (00529EF4 to 00529F00)
00000000 00000000 00000000

#new:Formation $Formation_00
{
	$ShyGuy_RED 00000001 0000000A 00000000 00000000 00000000 00000000
	$ShyGuy_RED 00000002 00000009 00000000 00000000 00000000 00000000
}

#new:Formation $Formation_01
{
	$ShyGuy_BLU 00000001 0000000A 00000000 00000000 00000000 00000000
	$ShyGuy_BLU 00000002 00000009 00000000 00000000 00000000 00000000
}

#new:Formation $Formation_02
{
	$ShyGuy_YLW 00000001 0000000A 00000000 00000000 00000000 00000000
	$ShyGuy_YLW 00000002 00000009 00000000 00000000 00000000 00000000
}

#new:Formation $Formation_03
{
	$ShyGuy_YLW 00000000 0000000A 00000000 00000000 00000000 00000000
	$ShyGuy_YLW 00000001 00000009 00000000 00000000 00000000 00000000
	$ShyGuy_YLW 00000002 00000008 00000000 00000000 00000000 00000000
}

#new:Formation $Formation_04
{
	$ShyGuy_PNK 00000001 0000000A 00000000 00000000 00000000 00000000
	$ShyGuy_PNK 00000002 00000009 00000000 00000000 00000000 00000000
}

#new:Formation $Formation_05
{
	$ShyGuy_GRN 00000001 0000000A 00000000 00000000 00000000 00000000
	$ShyGuy_GRN 00000002 00000009 00000000 00000000 00000000 00000000
}

#new:Formation $Formation_06
{
	$ShyGuy_RED 00000000 0000000A 00000000 00000000 00000000 00000000
	$MediGuy 00000005 00000009 00000000 00000000 00000000 00000000
	$MediGuy 00000006 00000008 00000000 00000000 00000000 00000000
}

#new:Formation $Formation_07
{
	$ShyGuy_BLU 00000000 0000000A 00000000 00000000 00000000 00000000
	$GrooveGuy 00000001 00000009 00000000 00000000 00000000 00000000
	$MediGuy 00000006 00000008 00000000 00000000 00000000 00000000
}

#new:Formation $Formation_08
{
	$ShyGuy_YLW 00000000 0000000A 00000000 00000000 00000000 00000000
	$SpyGuy 00000001 00000009 00000000 00000000 00000000 00000000
	$MediGuy 00000006 00000008 00000000 00000000 00000000 00000000
}

#new:Formation $Formation_09
{
	$ShyGuy_YLW 00000000 0000000A 00000000 00000000 00000000 00000000
	$ShyGuy_GRN 00000001 00000009 00000000 00000000 00000000 00000000
	$ShyGuy_RED 00000002 00000008 00000000 00000000 00000000 00000000
	$ShyGuy_BLU 00000003 00000007 00000000 00000000 00000000 00000000
}

#new:Formation $Formation_0A
{
	$ShyGuy_PNK 00000000 0000000A 00000000 00000000 00000000 00000000
	$PyroGuy 00000001 00000009 00000000 00000000 00000000 00000000
	$MediGuy 00000006 00000008 00000000 00000000 00000000 00000000
}

#new:Formation $Formation_0B
{
	$ShyGuy_PNK 00000000 0000000A 00000000 00000000 00000000 00000000
	$GrooveGuy 00000001 00000009 00000000 00000000 00000000 00000000
	$MediGuy 00000006 00000008 00000000 00000000 00000000 00000000
	$MediGuy 00000007 00000007 00000000 00000000 00000000 00000000
}

#new:Formation $Formation_0C
{
	$ShyGuy_GRN 00000000 0000000A 00000000 00000000 00000000 00000000
	$SkyGuy 00000005 00000009 00000000 00000000 00000000 00000000
	$MediGuy 00000006 00000008 00000000 00000000 00000000 00000000
}

#new:Formation $Formation_0D
{
	$SkyGuy 00000005 0000000A 00000000 00000000 00000000 00000000
	$SkyGuy 00000006 00000009 00000000 00000000 00000000 00000000
}

#new:Formation $Formation_0E
{
	$SkyGuy 00000005 0000000A 00000000 00000000 00000000 00000000
	$ShyGuy_YLW 00000002 00000009 00000000 00000000 00000000 00000000
}

#new:Formation $Formation_0F
{
	$SkyGuy 00000004 0000000A 00000000 00000000 00000000 00000000
	$SkyGuy 00000005 00000009 00000000 00000000 00000000 00000000
	$ShyGuy_YLW 00000002 00000008 00000000 00000000 00000000 00000000
}

#new:Formation $Formation_10
{
	$SkyGuy 00000005 0000000A 00000000 00000000 00000000 00000000
	$MediGuy 00000006 00000009 00000000 00000000 00000000 00000000
}

#new:Formation $Formation_11
{
	$SkyGuy 00000004 0000000A 00000000 00000000 00000000 00000000
	$SkyGuy 00000005 00000009 00000000 00000000 00000000 00000000
	$SpyGuy 00000002 00000008 00000000 00000000 00000000 00000000
}

#new:Formation $Formation_12
{
	$SkyGuy 00000004 0000000A 00000000 00000000 00000000 00000000
	$ShyGuy_GRN 00000001 00000009 00000000 00000000 00000000 00000000
	$MediGuy 00000006 00000008 00000000 00000000 00000000 00000000
}

#new:Formation $Formation_13
{
	$SkyGuy 00000004 0000000A 00000000 00000000 00000000 00000000
	$ShyGuy_GRN 00000001 00000009 00000000 00000000 00000000 00000000
	$MediGuy 00000006 00000008 00000000 00000000 00000000 00000000
	$MediGuy 00000007 00000007 00000000 00000000 00000000 00000000
}

#new:Formation $Formation_14
{
	$SkyGuy 00000004 0000000A 00000000 00000000 00000000 00000000
	$GrooveGuy 00000001 00000009 00000000 00000000 00000000 00000000
	$MediGuy 00000006 00000008 00000000 00000000 00000000 00000000
}

#new:Formation $Formation_15
{
	$SpyGuy 00000001 0000000A 00000000 00000000 00000000 00000000
	$SpyGuy 00000002 00000009 00000000 00000000 00000000 00000000
}

#new:Formation $Formation_16
{
	$SpyGuy 00000001 0000000A 00000000 00000000 00000000 00000000
	$PyroGuy 00000002 00000009 00000000 00000000 00000000 00000000
}

#new:Formation $Formation_17
{
	$SpyGuy 00000001 0000000A 00000000 00000000 00000000 00000000
	$MediGuy 00000006 00000009 00000000 00000000 00000000 00000000
}

#new:Formation $Formation_18
{
	$SpyGuy 00000000 0000000A 00000000 00000000 00000000 00000000
	$SpyGuy 00000001 00000009 00000000 00000000 00000000 00000000
	$MediGuy 00000006 00000008 00000000 00000000 00000000 00000000
}

#new:Formation $Formation_19
{
	$SpyGuy 00000000 0000000A 00000000 00000000 00000000 00000000
	$SpyGuy 00000001 00000009 00000000 00000000 00000000 00000000
	$SpyGuy 00000002 00000008 00000000 00000000 00000000 00000000
	$MediGuy 00000007 00000007 00000000 00000000 00000000 00000000
}

#new:Formation $Formation_1A
{
	$SpyGuy 00000000 0000000A 00000000 00000000 00000000 00000000
	$SpyGuy 00000001 00000009 00000000 00000000 00000000 00000000
	$SpyGuy 00000002 00000008 00000000 00000000 00000000 00000000
	$SpyGuy 00000003 00000007 00000000 00000000 00000000 00000000
}

#new:Formation $Formation_1B
{
	$SpyGuy 00000000 0000000A 00000000 00000000 00000000 00000000
	$PyroGuy 00000001 00000009 00000000 00000000 00000000 00000000
	$GrooveGuy 00000002 00000008 00000000 00000000 00000000 00000000
	$MediGuy 00000007 00000007 00000000 00000000 00000000 00000000
}

#new:Formation $Formation_1C
{
	$PyroGuy 00000001 0000000A 00000000 00000000 00000000 00000000
	$PyroGuy 00000002 00000009 00000000 00000000 00000000 00000000
}

#new:Formation $Formation_1D
{
	$PyroGuy 00000000 0000000A 00000000 00000000 00000000 00000000
	$PyroGuy 00000001 00000009 00000000 00000000 00000000 00000000
	$PyroGuy 00000002 00000008 00000000 00000000 00000000 00000000
}

#new:Formation $Formation_1E
{
	$PyroGuy 00000001 0000000A 00000000 00000000 00000000 00000000
	$MediGuy 00000006 00000009 00000000 00000000 00000000 00000000
}

#new:Formation $Formation_1F
{
	$PyroGuy 00000000 0000000A 00000000 00000000 00000000 00000000
	$PyroGuy 00000001 00000009 00000000 00000000 00000000 00000000
	$MediGuy 00000006 00000008 00000000 00000000 00000000 00000000
}

#new:Formation $Formation_20
{
	$PyroGuy 00000000 0000000A 00000000 00000000 00000000 00000000
	$PyroGuy 00000001 00000009 00000000 00000000 00000000 00000000
	$MediGuy 00000006 00000008 00000000 00000000 00000000 00000000
	$MediGuy 00000007 00000007 00000000 00000000 00000000 00000000
}

#new:Formation $Formation_21
{
	$PyroGuy 00000000 0000000A 00000000 00000000 00000000 00000000
	$GrooveGuy 00000001 00000009 00000000 00000000 00000000 00000000
	$PyroGuy 00000002 00000008 00000000 00000000 00000000 00000000
}

#new:Formation $Formation_22
{
	$PyroGuy 00000000 0000000A 00000000 00000000 00000000 00000000
	$SpyGuy 00000001 00000009 00000000 00000000 00000000 00000000
	$GrooveGuy 00000002 00000008 00000000 00000000 00000000 00000000
}

#new:Formation $Formation_23
{
	$PyroGuy 00000000 0000000A 00000000 00000000 00000000 00000000
	$GrooveGuy 00000001 00000009 00000000 00000000 00000000 00000000
	$MediGuy 00000006 00000008 00000000 00000000 00000000 00000000
	$MediGuy 00000007 00000007 00000000 00000000 00000000 00000000
}

#new:Formation $Formation_24
{
	$PyroGuy 00000000 0000000A 00000000 00000000 00000000 00000000
	$PyroGuy 00000001 00000009 00000000 00000000 00000000 00000000
	$SpyGuy 00000002 00000008 00000000 00000000 00000000 00000000
}

#new:Formation $Formation_25
{
	$GrooveGuy 00000001 0000000A 00000000 00000000 00000000 00000000
	$GrooveGuy 00000002 00000009 00000000 00000000 00000000 00000000
}

#new:Formation $Formation_26
{
	$GrooveGuy 00000000 0000000A 00000000 00000000 00000000 00000000
	$GrooveGuy 00000001 00000009 00000000 00000000 00000000 00000000
	$GrooveGuy 00000002 00000008 00000000 00000000 00000000 00000000
}

#new:Formation $Formation_27
{
	$GrooveGuy 00000000 0000000A 00000000 00000000 00000000 00000000
	$MediGuy 00000005 00000009 00000000 00000000 00000000 00000000
	$MediGuy 00000006 00000008 00000000 00000000 00000000 00000000
}

#new:Formation $Formation_28
{
	$GrooveGuy 00000000 0000000A 00000000 00000000 00000000 00000000
	$GrooveGuy 00000001 00000009 00000000 00000000 00000000 00000000
	$MediGuy 00000006 00000008 00000000 00000000 00000000 00000000
}

#new:Formation $Formation_29
{
	$GrooveGuy 00000000 0000000A 00000000 00000000 00000000 00000000
	$GrooveGuy 00000001 00000009 00000000 00000000 00000000 00000000
	$MediGuy 00000006 00000008 00000000 00000000 00000000 00000000
	$MediGuy 00000007 00000007 00000000 00000000 00000000 00000000
}

#new:Formation $Formation_2A
{
	$GrooveGuy 00000000 0000000A 00000000 00000000 00000000 00000000
	$GrooveGuy 00000001 00000009 00000000 00000000 00000000 00000000
	$PyroGuy 00000002 00000008 00000000 00000000 00000000 00000000
}

#new:Formation $Formation_2B
{
	$GrooveGuy 00000000 0000000A 00000000 00000000 00000000 00000000
	$ShyGuy_BLU 00000001 00000009 00000000 00000000 00000000 00000000
	$SkyGuy 00000006 00000008 00000000 00000000 00000000 00000000
}

#new:Formation $Formation_2C
{
	$AntiGuy 00000001 0000000A 00000000 00000000 00000000 00000000
}

#new:FormationTable $FormationTable
{
	$SJIS_8023107C 00000002 $Formation_00 $Stage_8022DE0C 00000000
	$SJIS_80231074 00000002 $Formation_01 $Stage_8022DE0C 00000000
	$SJIS_80231068 00000002 $Formation_02 $Stage_8022DE0C 00000000
	$SJIS_8023105C 00000003 $Formation_03 $Stage_8022DE0C 00000000
	$SJIS_80231054 00000002 $Formation_04 $Stage_8022DE0C 00000000
	$SJIS_80231048 00000002 $Formation_05 $Stage_8022DE0C 00000000
	$SJIS_80231034 00000003 $Formation_06 $Stage_8022DE0C 00000000
	$SJIS_80231018 00000003 $Formation_07 $Stage_8022DE0C 00000000
	$SJIS_80230FFC 00000003 $Formation_08 $Stage_8022DE0C 00000000
	$SJIS_80230FE4 00000004 $Formation_09 $Stage_8022DE0C 00000000
	$SJIS_80230FCC 00000003 $Formation_0A $Stage_8022DE0C 00000000
	$SJIS_80230FB0 00000004 $Formation_0B $Stage_8022DE0C 00000000
	$SJIS_80230F94 00000003 $Formation_0C $Stage_8022DE0C 00000000
	$SJIS_80230F88 00000002 $Formation_0D $Stage_8022DE0C 00000000
	$SJIS_80230F78 00000002 $Formation_0E $Stage_8022DE0C 00000000
	$SJIS_80230F64 00000003 $Formation_0F $Stage_8022DE0C 00000000
	$SJIS_80230F50 00000002 $Formation_10 $Stage_8022DE0C 00000000
	$SJIS_80230F38 00000003 $Formation_11 $Stage_8022DE0C 00000000
	$SJIS_80230F1C 00000003 $Formation_12 $Stage_8022DE0C 00000000
	$SJIS_80230F00 00000004 $Formation_13 $Stage_8022DE0C 00000000
	$SJIS_80230EE0 00000003 $Formation_14 $Stage_8022DE0C 00000000
	$SJIS_80230ED4 00000002 $Formation_15 $Stage_8022DE0C 00000000
	$SJIS_80230EC0 00000002 $Formation_16 $Stage_8022DE0C 00000000
	$SJIS_80230EAC 00000002 $Formation_17 $Stage_8022DE0C 00000000
	$SJIS_80230E94 00000003 $Formation_18 $Stage_8022DE0C 00000000
	$SJIS_80230E7C 00000004 $Formation_19 $Stage_8022DE0C 00000000
	$SJIS_80230E70 00000004 $Formation_1A $Stage_8022DE0C 00000000
	$SJIS_80230E48 00000004 $Formation_1B $Stage_8022DE0C 00000000
	$SJIS_80230E3C 00000002 $Formation_1C $Stage_8022DE0C 00000000
	$SJIS_80230E30 00000003 $Formation_1D $Stage_8022DE0C 00000000
	$SJIS_80230E1C 00000002 $Formation_1E $Stage_8022DE0C 00000000
	$SJIS_80230E04 00000003 $Formation_1F $Stage_8022DE0C 00000000
	$SJIS_80230DEC 00000004 $Formation_20 $Stage_8022DE0C 00000000
	$SJIS_80230DCC 00000003 $Formation_21 $Stage_8022DE0C 00000000
	$SJIS_80230DAC 00000003 $Formation_22 $Stage_8022DE0C 00000000
	$SJIS_80230D8C 00000004 $Formation_23 $Stage_8022DE0C 00000000
	$SJIS_80230D78 00000003 $Formation_24 $Stage_8022DE0C 00000000
	$SJIS_80230D68 00000002 $Formation_25 $Stage_8022DE0C 00000000
	$SJIS_80230D58 00000003 $Formation_26 $Stage_8022DE0C 00000000
	$SJIS_80230D40 00000003 $Formation_27 $Stage_8022DE0C 00000000
	$SJIS_80230D28 00000003 $Formation_28 $Stage_8022DE0C 00000000
	$SJIS_80230D0C 00000004 $Formation_29 $Stage_8022DE0C 00000000
	$SJIS_80230CF0 00000003 $Formation_2A $Stage_8022DE0C 00000000
	$SJIS_80230CD4 00000003 $Formation_2B $Stage_8022DE0C 00000000
	$SJIS_80230CC8 00000001 $Formation_2C $Stage_8022DE0C 00000000
	00000000 00000000 00000000 00000000 00000000
}

#new:StageTable $StageTable
{
	$ASCII_802310C4 $Stage_8022DB78
	$ASCII_802310BC $Stage_8022DBEC
	$ASCII_802310B4 $Stage_8022DC80
	$ASCII_802310AC $Stage_8022DCFC
	$ASCII_802310A4 $Stage_8022DE0C
	$ASCII_8023109C $Stage_8022F550
	$ASCII_80231094 $Stage_8022F5FC
	$ASCII_8023108C $Stage_8022F87C
	$ASCII_80231084 $Stage_8022F8FC
	00000000 00000000
}

PADDING: 80230B18 to 80230B20 (0052B0E8 to 0052B0F0)
00000000 00000000

#new:ASCII $ASCII_80230B20
{
	"omo_bg"
}

#new:ASCII $ASCII_80230B28
{
	"omo_bt01_hit"
}

#new:ASCII $ASCII_80230B38
{
	"omo_bt01_shape"
}

#new:ASCII $ASCII_80230B48
{
	"omo_tex"
}

#new:ASCII $ASCII_80230B50
{
	"omo_bg"
}

#new:ASCII $ASCII_80230B58
{
	"omo_bt02_hit"
}

#new:ASCII $ASCII_80230B68
{
	"omo_bt02_shape"
}

#new:ASCII $ASCII_80230B78
{
	"omo_tex"
}

#new:ASCII $ASCII_80230B80
{
	"omo_bg"
}

#new:ASCII $ASCII_80230B88
{
	"omo_bt03_hit"
}

#new:ASCII $ASCII_80230B98
{
	"omo_bt03_shape"
}

#new:ASCII $ASCII_80230BA8
{
	"omo_tex"
}

#new:ASCII $ASCII_80230BB0
{
	"omo_bg"
}

#new:ASCII $ASCII_80230BB8
{
	"omo_bt03_hit"
}

#new:ASCII $ASCII_80230BC8
{
	"omo_bt03_shape"
}

#new:ASCII $ASCII_80230BD8
{
	"omo_tex"
}

#new:ASCII $ASCII_80230BE0
{
	"omo_bg"
}

#new:ASCII $ASCII_80230BE8
{
	"omo_bt04_hit"
}

#new:ASCII $ASCII_80230BF8
{
	"omo_bt04_shape"
}

#new:ASCII $ASCII_80230C08
{
	"omo_tex"
}

#new:ASCII $ASCII_80230C10
{
	"omo_bg"
}

#new:ASCII $ASCII_80230C18
{
	"omo_bt05_hit"
}

#new:ASCII $ASCII_80230C28
{
	"omo_bt05_shape"
}

#new:ASCII $ASCII_80230C38
{
	"omo_tex"
}

#new:ASCII $ASCII_80230C40
{
	"omo_bg"
}

#new:ASCII $ASCII_80230C48
{
	"omo_bt05_hit"
}

#new:ASCII $ASCII_80230C58
{
	"omo_bt05_shape"
}

#new:ASCII $ASCII_80230C68
{
	"omo_tex"
}

#new:ASCII $ASCII_80230C70
{
	"omo_bg"
}

#new:ASCII $ASCII_80230C78
{
	"omo_bt06_hit"
}

#new:ASCII $ASCII_80230C88
{
	"omo_bt06_shape"
}

#new:ASCII $ASCII_80230C98
{
	"omo_tex"
}

#new:ASCII $ASCII_80230CA0
{
	"omo_bt07_hit"
}

#new:ASCII $ASCII_80230CB0
{
	"omo_bt07_shape"
}

#new:ASCII $ASCII_80230CC0
{
	"omo_tex"
}

#new:SJIS $SJIS_80230CC8
{
	ブラック % burakku
}

#new:SJIS $SJIS_80230CD4
{
	ダンシング,あお,バルーン % danshingu,ao,baru-n
}

#new:SJIS $SJIS_80230CF0
{
	ダンシングx２,ファイアー % danshingux2,faia-
}

#new:SJIS $SJIS_80230D0C
{
	ダンシングx２,かいふくx２ % danshingux2,kaifukux2
}

#new:SJIS $SJIS_80230D28
{
	ダンシングx２,かいふく % danshingux2,kaifuku
}

#new:SJIS $SJIS_80230D40
{
	ダンシング,かいふくx２ % danshingu,kaifukux2
}

#new:SJIS $SJIS_80230D58
{
	ダンシングx３ % danshingux3
}

#new:SJIS $SJIS_80230D68
{
	ダンシングx２ % danshingux2
}

#new:SJIS $SJIS_80230D78
{
	ファイアx2,コマンド % faiax2,komando
}

#new:SJIS $SJIS_80230D8C
{
	ファイア,ダンシング,かいふくx2 % faia,danshingu,kaifukux2
}

#new:SJIS $SJIS_80230DAC
{
	ファイア,コマンド,ダンシング % faia,komando,danshingu
}

#new:SJIS $SJIS_80230DCC
{
	ファイア,ダンシング,ファイア % faia,danshingu,faia
}

#new:SJIS $SJIS_80230DEC
{
	ファイアx２,かいふくx２ % faiax2,kaifukux2
}

#new:SJIS $SJIS_80230E04
{
	ファイアx２,かいふく % faiax2,kaifuku
}

#new:SJIS $SJIS_80230E1C
{
	ファイア,かいふく % faia,kaifuku
}

#new:SJIS $SJIS_80230E30
{
	ファイアx３ % faiax3
}

#new:SJIS $SJIS_80230E3C
{
	ファイアx２ % faiax2
}

#new:SJIS $SJIS_80230E48
{
	コマンド,ファイア,ダンシング,かいふく % komando,faia,danshingu,kaifuku
}

#new:SJIS $SJIS_80230E70
{
	コマンドx４ % komandox4
}

#new:SJIS $SJIS_80230E7C
{
	コマンドx３,かいふく % komandox3,kaifuku
}

#new:SJIS $SJIS_80230E94
{
	コマンドx２,かいふく % komandox2,kaifuku
}

#new:SJIS $SJIS_80230EAC
{
	コマンド,かいふく % komando,kaifuku
}

#new:SJIS $SJIS_80230EC0
{
	コマンド,ファイア % komando,faia
}

#new:SJIS $SJIS_80230ED4
{
	コマンドx２ % komandox2
}

#new:SJIS $SJIS_80230EE0
{
	バルーン,ダンシング,かいふく % baru-n,danshingu,kaifuku
}

#new:SJIS $SJIS_80230F00
{
	バルーン,みどり,かいふくx２ % baru-n,midori,kaifukux2
}

#new:SJIS $SJIS_80230F1C
{
	バルーン,みどり,かいふく % baru-n,midori,kaifuku
}

#new:SJIS $SJIS_80230F38
{
	バルーンx２,コマンド % baru-nx2,komando
}

#new:SJIS $SJIS_80230F50
{
	バルーン,かいふく % baru-n,kaifuku
}

#new:SJIS $SJIS_80230F64
{
	バルーンx２,きいろ % baru-nx2,kiiro
}

#new:SJIS $SJIS_80230F78
{
	バルーン,きいろ % baru-n,kiiro
}

#new:SJIS $SJIS_80230F88
{
	バルーンx２ % baru-nx2
}

#new:SJIS $SJIS_80230F94
{
	みどり,バルーン,かいふく % midori,baru-n,kaifuku
}

#new:SJIS $SJIS_80230FB0
{
	もも,ダンシング,かいふくx２ % momo,danshingu,kaifukux2
}

#new:SJIS $SJIS_80230FCC
{
	もも,ファイア,かいふく % momo,faia,kaifuku
}

#new:SJIS $SJIS_80230FE4
{
	きいろ,みどり,あか,あお % kiiro,midori,aka,ao
}

#new:SJIS $SJIS_80230FFC
{
	きいろ,コマンド,かいふく % kiiro,komando,kaifuku
}

#new:SJIS $SJIS_80231018
{
	あお,ダンシング,かいふく % ao,danshingu,kaifuku
}

#new:SJIS $SJIS_80231034
{
	あか,かいふくx２ % aka,kaifukux2
}

#new:SJIS $SJIS_80231048
{
	みどりx２ % midorix2
}

#new:SJIS $SJIS_80231054
{
	ももx２ % momox2
}

#new:SJIS $SJIS_8023105C
{
	きいろx３ % kiirox3
}

#new:SJIS $SJIS_80231068
{
	きいろx２ % kiirox2
}

#new:SJIS $SJIS_80231074
{
	あおx２ % aox2
}

#new:SJIS $SJIS_8023107C
{
	あかx２ % akax2
}

#new:ASCII $ASCII_80231084
{
	"omo_07"
}

#new:ASCII $ASCII_8023108C
{
	"omo_06"
}

#new:ASCII $ASCII_80231094
{
	"omo_05b"
}

#new:ASCII $ASCII_8023109C
{
	"omo_05"
}

#new:ASCII $ASCII_802310A4
{
	"omo_04"
}

#new:ASCII $ASCII_802310AC
{
	"omo_03b"
}

#new:ASCII $ASCII_802310B4
{
	"omo_03"
}

#new:ASCII $ASCII_802310BC
{
	"omo_02"
}

#new:ASCII $ASCII_802310C4
{
	"omo_01"
}

PADDING: 802310CC to 802310D0 (0052B69C to 0052B6A0)
00000000

