% Script File: 1B Area TIK2.bscr
% Decoded from: 608AB0 to 6186F0 (1B Area TIK2)

% Origin: HEURISTIC
#new:Function $Function_80218000
{
    0:  ADDIU     SP, SP, FFE0
    4:  SW        S1, 14 (SP)
    8:  COPY      S1, A0
    C:  SW        RA, 18 (SP)
   10:  SW        S0, 10 (SP)
   14:  LW        S0, C (S1)
   18:  LW        A1, 0 (S0)
   1C:  JAL       ~Func:get_variable
   20:  ADDIU     S0, S0, 4
   24:  COPY      A0, S1
   28:  LW        A1, 0 (S0)
   2C:  JAL       ~Func:get_variable
   30:  COPY      S0, V0
   34:  COPY      A0, S0
   38:  JAL       ~Func:start_rumble
   3C:  COPY      A1, V0
   40:  LW        RA, 18 (SP)
   44:  LW        S1, 14 (SP)
   48:  LW        S0, 10 (SP)
   4C:  LI        V0, 2
   50:  JR        RA
   54:  ADDIU     SP, SP, 20
}

#new:Function $Function_80218058
{
    0:  ADDIU     SP, SP, FFB0
    4:  SW        S1, 1C (SP)
    8:  COPY      S1, A0
    C:  SW        RA, 20 (SP)
   10:  SW        S0, 18 (SP)
   14:  SDC1      F28, 48 (SP)
   18:  SDC1      F26, 40 (SP)
   1C:  SDC1      F24, 38 (SP)
   20:  SDC1      F22, 30 (SP)
   24:  SDC1      F20, 28 (SP)
   28:  LW        S0, C (S1)
   2C:  LW        A1, 0 (S0)
   30:  JAL       ~Func:get_variable
   34:  ADDIU     S0, S0, 4
   38:  LW        A1, 0 (S0)
   3C:  ADDIU     S0, S0, 4
   40:  MTC1      V0, F28
   44:  NOP
   48:  CVT.S.W   F28, F28
   4C:  JAL       ~Func:get_variable
   50:  COPY      A0, S1
   54:  LW        A1, 0 (S0)
   58:  ADDIU     S0, S0, 4
   5C:  MTC1      V0, F26
   60:  NOP
   64:  CVT.S.W   F26, F26
   68:  JAL       ~Func:get_variable
   6C:  COPY      A0, S1
   70:  LW        A1, 0 (S0)
   74:  ADDIU     S0, S0, 4
   78:  JAL       ~Func:get_variable
   7C:  COPY      A0, S1
   80:  LW        A1, 0 (S0)
   84:  ADDIU     S0, S0, 4
   88:  MTC1      V0, F20
   8C:  NOP
   90:  CVT.S.W   F20, F20
   94:  JAL       ~Func:get_variable
   98:  COPY      A0, S1
   9C:  LW        A1, 0 (S0)
   A0:  MTC1      V0, F22
   A4:  NOP
   A8:  CVT.S.W   F22, F22
   AC:  JAL       ~Func:get_variable
   B0:  COPY      A0, S1
   B4:  LIF       F0, 40.0
   BC:  MTC1      V0, F24
   C0:  NOP
   C4:  CVT.S.W   F24, F24
   C8:  ADD.S     F0, F22, F0
   CC:  MOV.S     F12, F28
   D0:  MFC1      A2, F20
   D4:  MFC1      A3, F0
   D8:  JAL       ~Func:atan2
   DC:  MOV.S     F14, F26
   E0:  LIF       F2, 10.0
   E8:  CLEAR     A0
   EC:  SUB.S     F20, F20, F2
   F0:  LIF       F2, 60.0
   F8:  LIF       F4, 2.5
  100:  ADD.S     F22, F22, F2
  104:  LIF       F2, 20.0
  10C:  LI        V0, 28
  110:  SW        V0, 14 (SP)
  114:  SWC1      F4, 10 (SP)
  118:  ADD.S     F24, F24, F2
  11C:  MFC1      A1, F20
  120:  MFC1      A2, F22
  124:  MFC1      A3, F24
  128:  JAL       ~Func:playFX_5C
  12C:  MOV.S     F20, F0
  130:  LW        V1, C (V0)
  134:  SWC1      F20, 38 (V1)
  138:  LW        V1, C (V0)
  13C:  LI        A0, 2
  140:  SW        A0, 18 (V1)
  144:  LW        V1, C (V0)
  148:  SW        A0, 1C (V1)
  14C:  LW        V1, C (V0)
  150:  SW        A0, 20 (V1)
  154:  LW        V1, C (V0)
  158:  LI        A0, 50
  15C:  SW        A0, 28 (V1)
  160:  LW        V1, C (V0)
  164:  SW        A0, 2C (V1)
  168:  LW        V1, C (V0)
  16C:  SW        A0, 30 (V1)
  170:  LW        RA, 20 (SP)
  174:  LW        S1, 1C (SP)
  178:  LW        S0, 18 (SP)
  17C:  LDC1      F28, 48 (SP)
  180:  LDC1      F26, 40 (SP)
  184:  LDC1      F24, 38 (SP)
  188:  LDC1      F22, 30 (SP)
  18C:  LDC1      F20, 28 (SP)
  190:  LI        V0, 2
  194:  JR        RA
  198:  ADDIU     SP, SP, 50
}

PADDING: 802181F4 to 80218200 (00608CA4 to 00608CB0)
00000000 00000000 00000000

#new:Function $Function_80218200
{
    0:  ADDIU     SP, SP, FFE0
    4:  SW        S1, 14 (SP)
    8:  COPY      S1, A0
    C:  SW        RA, 18 (SP)
   10:  SW        S0, 10 (SP)
   14:  LW        S0, C (S1)
   18:  LW        A1, 0 (S0)
   1C:  JAL       ~Func:get_variable
   20:  ADDIU     S0, S0, 4
   24:  COPY      A0, S1
   28:  LW        A1, 0 (S0)
   2C:  JAL       ~Func:get_variable
   30:  COPY      S0, V0
   34:  COPY      A0, S0
   38:  JAL       ~Func:start_rumble
   3C:  COPY      A1, V0
   40:  LW        RA, 18 (SP)
   44:  LW        S1, 14 (SP)
   48:  LW        S0, 10 (SP)
   4C:  LI        V0, 2
   50:  JR        RA
   54:  ADDIU     SP, SP, 20
}

% Origin: HEURISTIC
#new:Function $Function_80218258
{
    0:  ADDIU     SP, SP, FFD8
    4:  SW        S0, 10 (SP)
    8:  COPY      S0, A0
    C:  SW        RA, 18 (SP)
   10:  SW        S1, 14 (SP)
   14:  SDC1      F20, 20 (SP)
   18:  LW        V0, C (S0)
   1C:  LW        A1, 4 (V0)
   20:  JAL       ~Func:get_float_variable
   24:  LW        S1, 0 (V0)
   28:  MOV.S     F20, F0
   2C:  COPY      A0, S0
   30:  JAL       ~Func:get_float_variable
   34:  COPY      A1, S1
   38:  LIF       F2, 6.28318
   44:  NOP
   48:  MUL.S     F0, F0, F2
   4C:  NOP
   50:  LIF       F12, 360.0
   58:  JAL       ~Func:sin_rad
   5C:  DIV.S     F12, F0, F12
   60:  MUL.S     F20, F20, F0
   64:  NOP
   68:  COPY      A0, S0
   6C:  MFC1      A2, F20
   70:  JAL       ~Func:set_float_variable
   74:  COPY      A1, S1
   78:  LW        RA, 18 (SP)
   7C:  LW        S1, 14 (SP)
   80:  LW        S0, 10 (SP)
   84:  LDC1      F20, 20 (SP)
   88:  LI        V0, 2
   8C:  JR        RA
   90:  ADDIU     SP, SP, 28
}

#new:Function $Function_802182EC
{
    0:  ADDIU     SP, SP, FFE8
    4:  SW        S0, 10 (SP)
    8:  COPY      S0, A0
    C:  BEQ       A1, R0, .o48
   10:  SW        RA, 14 (SP)
   14:  JAL       ~Func:mdl_set_all_fog_mode
   18:  LI        A0, 1
   1C:  CLEAR     A0
   20:  COPY      A1, A0
   24:  COPY      A2, A0
   28:  COPY      A3, A0
   2C:  LAW       V0, 801512F0
   34:  LI        V1, 1
   38:  JAL       ~Func:set_background_color_blend
   3C:  SB        V1, 0 (V0)
   40:  LI        V0, 14
   44:  SW        V0, 70 (S0)
        .o48
   48:  CLEAR     A0
   4C:  COPY      A1, A0
   50:  COPY      A2, A0
   54:  LW        V1, 70 (S0)
   58:  LI        V0, 14
   5C:  SUBU      V0, V0, V1
   60:  SLL       A3, V0, 2
   64:  ADDU      A3, A3, V0
   68:  SLL       A3, A3, 1
   6C:  JAL       ~Func:set_background_color_blend
   70:  ANDI      A3, A3, FE
   74:  LW        V0, 70 (S0)
   78:  ADDIU     V0, V0, FFFF
   7C:  SW        V0, 70 (S0)
   80:  SLTIU     V0, V0, 1
   84:  LW        RA, 14 (SP)
   88:  LW        S0, 10 (SP)
   8C:  SLL       V0, V0, 1
   90:  JR        RA
   94:  ADDIU     SP, SP, 18
}

#new:Function $Function_80218384
{
    0:  ADDIU     SP, SP, FFE8
    4:  SW        S0, 10 (SP)
    8:  COPY      S0, A0
    C:  BEQ       A1, R0, .o1C
   10:  SW        RA, 14 (SP)
   14:  LI        V0, 14
   18:  SW        V0, 70 (S0)
        .o1C
   1C:  CLEAR     A0
   20:  COPY      A1, A0
   24:  LW        V0, 70 (S0)
   28:  COPY      A2, A0
   2C:  SLL       A3, V0, 2
   30:  ADDU      A3, A3, V0
   34:  SLL       A3, A3, 1
   38:  JAL       ~Func:set_background_color_blend
   3C:  ANDI      A3, A3, FE
   40:  LW        V0, 70 (S0)
   44:  ADDIU     V0, V0, FFFF
   48:  BEQ       V0, R0, .o58
   4C:  SW        V0, 70 (S0)
   50:  BEQ       R0, R0, .o70
   54:  CLEAR     V0
        .o58
   58:  CLEAR     A0
   5C:  COPY      A1, A0
   60:  COPY      A2, A0
   64:  JAL       ~Func:set_background_color_blend
   68:  COPY      A3, A0
   6C:  LI        V0, 2
        .o70
   70:  LW        RA, 14 (SP)
   74:  LW        S0, 10 (SP)
   78:  JR        RA
   7C:  ADDIU     SP, SP, 18
}

#new:Function $Function_80218404
{
    0:  ADDIU     SP, SP, FFC8
    4:  SW        S1, 14 (SP)
    8:  COPY      S1, A0
    C:  SW        RA, 1C (SP)
   10:  SW        S2, 18 (SP)
   14:  SW        S0, 10 (SP)
   18:  SDC1      F24, 30 (SP)
   1C:  SDC1      F22, 28 (SP)
   20:  SDC1      F20, 20 (SP)
   24:  LW        S0, C (S1)
   28:  LW        A1, 0 (S0)
   2C:  JAL       ~Func:get_variable
   30:  ADDIU     S0, S0, 4
   34:  LW        A1, 0 (S0)
   38:  ADDIU     S0, S0, 4
   3C:  COPY      A0, S1
   40:  JAL       ~Func:get_variable
   44:  COPY      S2, V0
   48:  LW        A1, 0 (S0)
   4C:  ADDIU     S0, S0, 4
   50:  MTC1      V0, F24
   54:  NOP
   58:  CVT.S.W   F24, F24
   5C:  JAL       ~Func:get_variable
   60:  COPY      A0, S1
   64:  LW        A1, 0 (S0)
   68:  ADDIU     S0, S0, 4
   6C:  MTC1      V0, F22
   70:  NOP
   74:  CVT.S.W   F22, F22
   78:  JAL       ~Func:get_variable
   7C:  COPY      A0, S1
   80:  LW        A1, 0 (S0)
   84:  MTC1      V0, F20
   88:  NOP
   8C:  CVT.S.W   F20, F20
   90:  JAL       ~Func:get_float_variable
   94:  COPY      A0, S1
   98:  LW        V0, C (S2)
   9C:  SWC1      F24, 4 (V0)
   A0:  LW        V0, C (S2)
   A4:  SWC1      F22, 8 (V0)
   A8:  LW        V0, C (S2)
   AC:  SWC1      F20, C (V0)
   B0:  LW        V1, C (S2)
   B4:  SWC1      F0, 38 (V1)
   B8:  LW        RA, 1C (SP)
   BC:  LW        S2, 18 (SP)
   C0:  LW        S1, 14 (SP)
   C4:  LW        S0, 10 (SP)
   C8:  LDC1      F24, 30 (SP)
   CC:  LDC1      F22, 28 (SP)
   D0:  LDC1      F20, 20 (SP)
   D4:  LI        V0, 2
   D8:  JR        RA
   DC:  ADDIU     SP, SP, 38
}

#new:Function $Function_802184E4
{
    0:  ADDIU     SP, SP, FFB0
    4:  SW        S1, 1C (SP)
    8:  COPY      S1, A0
    C:  SW        RA, 20 (SP)
   10:  SW        S0, 18 (SP)
   14:  SDC1      F28, 48 (SP)
   18:  SDC1      F26, 40 (SP)
   1C:  SDC1      F24, 38 (SP)
   20:  SDC1      F22, 30 (SP)
   24:  SDC1      F20, 28 (SP)
   28:  LW        S0, C (S1)
   2C:  LW        A1, 0 (S0)
   30:  JAL       ~Func:get_variable
   34:  ADDIU     S0, S0, 4
   38:  LW        A1, 0 (S0)
   3C:  ADDIU     S0, S0, 4
   40:  MTC1      V0, F28
   44:  NOP
   48:  CVT.S.W   F28, F28
   4C:  JAL       ~Func:get_variable
   50:  COPY      A0, S1
   54:  LW        A1, 0 (S0)
   58:  ADDIU     S0, S0, 4
   5C:  MTC1      V0, F26
   60:  NOP
   64:  CVT.S.W   F26, F26
   68:  JAL       ~Func:get_variable
   6C:  COPY      A0, S1
   70:  LW        A1, 0 (S0)
   74:  ADDIU     S0, S0, 4
   78:  JAL       ~Func:get_variable
   7C:  COPY      A0, S1
   80:  LW        A1, 0 (S0)
   84:  ADDIU     S0, S0, 4
   88:  MTC1      V0, F20
   8C:  NOP
   90:  CVT.S.W   F20, F20
   94:  JAL       ~Func:get_variable
   98:  COPY      A0, S1
   9C:  LW        A1, 0 (S0)
   A0:  MTC1      V0, F22
   A4:  NOP
   A8:  CVT.S.W   F22, F22
   AC:  JAL       ~Func:get_variable
   B0:  COPY      A0, S1
   B4:  LIF       F0, 40.0
   BC:  MTC1      V0, F24
   C0:  NOP
   C4:  CVT.S.W   F24, F24
   C8:  ADD.S     F0, F22, F0
   CC:  MOV.S     F12, F28
   D0:  MFC1      A2, F20
   D4:  MFC1      A3, F0
   D8:  JAL       ~Func:atan2
   DC:  MOV.S     F14, F26
   E0:  LIF       F2, 10.0
   E8:  CLEAR     A0
   EC:  SUB.S     F20, F20, F2
   F0:  LIF       F2, 60.0
   F8:  LIF       F4, 2.5
  100:  ADD.S     F22, F22, F2
  104:  LIF       F2, 20.0
  10C:  LI        V0, 28
  110:  SW        V0, 14 (SP)
  114:  SWC1      F4, 10 (SP)
  118:  ADD.S     F24, F24, F2
  11C:  MFC1      A1, F20
  120:  MFC1      A2, F22
  124:  MFC1      A3, F24
  128:  JAL       ~Func:playFX_5C
  12C:  MOV.S     F20, F0
  130:  LW        V1, C (V0)
  134:  SWC1      F20, 38 (V1)
  138:  LW        V1, C (V0)
  13C:  LI        A0, 2
  140:  SW        A0, 18 (V1)
  144:  LW        V1, C (V0)
  148:  SW        A0, 1C (V1)
  14C:  LW        V1, C (V0)
  150:  SW        A0, 20 (V1)
  154:  LW        V1, C (V0)
  158:  LI        A0, 50
  15C:  SW        A0, 28 (V1)
  160:  LW        V1, C (V0)
  164:  SW        A0, 2C (V1)
  168:  LW        V1, C (V0)
  16C:  SW        A0, 30 (V1)
  170:  LW        RA, 20 (SP)
  174:  LW        S1, 1C (SP)
  178:  LW        S0, 18 (SP)
  17C:  LDC1      F28, 48 (SP)
  180:  LDC1      F26, 40 (SP)
  184:  LDC1      F24, 38 (SP)
  188:  LDC1      F22, 30 (SP)
  18C:  LDC1      F20, 28 (SP)
  190:  LI        V0, 2
  194:  JR        RA
  198:  ADDIU     SP, SP, 50
}

#new:Function $Function_80218680
{
    0:  ADDIU     SP, SP, FFE0
    4:  SW        S1, 14 (SP)
    8:  COPY      S1, A0
    C:  SW        RA, 18 (SP)
   10:  SW        S0, 10 (SP)
   14:  LW        S0, C (S1)
   18:  LW        A1, 0 (S0)
   1C:  JAL       ~Func:get_variable
   20:  ADDIU     S0, S0, 4
   24:  COPY      A0, S1
   28:  LW        A1, 0 (S0)
   2C:  JAL       ~Func:get_variable
   30:  COPY      S0, V0
   34:  COPY      A0, S0
   38:  JAL       ~Func:start_rumble
   3C:  COPY      A1, V0
   40:  LW        RA, 18 (SP)
   44:  LW        S1, 14 (SP)
   48:  LW        S0, 10 (SP)
   4C:  LI        V0, 2
   50:  JR        RA
   54:  ADDIU     SP, SP, 20
}

% Origin: HEURISTIC
#new:Function $Function_802186D8
{
    0:  ADDIU     SP, SP, FFD8
    4:  SW        S0, 10 (SP)
    8:  COPY      S0, A0
    C:  SW        RA, 18 (SP)
   10:  SW        S1, 14 (SP)
   14:  SDC1      F20, 20 (SP)
   18:  LW        V0, C (S0)
   1C:  LW        A1, 4 (V0)
   20:  JAL       ~Func:get_float_variable
   24:  LW        S1, 0 (V0)
   28:  MOV.S     F20, F0
   2C:  COPY      A0, S0
   30:  JAL       ~Func:get_float_variable
   34:  COPY      A1, S1
   38:  LIF       F2, 6.28318
   44:  NOP
   48:  MUL.S     F0, F0, F2
   4C:  NOP
   50:  LIF       F12, 360.0
   58:  JAL       ~Func:sin_rad
   5C:  DIV.S     F12, F0, F12
   60:  MUL.S     F20, F20, F0
   64:  NOP
   68:  COPY      A0, S0
   6C:  MFC1      A2, F20
   70:  JAL       ~Func:set_float_variable
   74:  COPY      A1, S1
   78:  LW        RA, 18 (SP)
   7C:  LW        S1, 14 (SP)
   80:  LW        S0, 10 (SP)
   84:  LDC1      F20, 20 (SP)
   88:  LI        V0, 2
   8C:  JR        RA
   90:  ADDIU     SP, SP, 28
}

#new:Function $Function_8021876C
{
    0:  ADDIU     SP, SP, FFE8
    4:  SW        S0, 10 (SP)
    8:  COPY      S0, A0
    C:  BEQ       A1, R0, .o48
   10:  SW        RA, 14 (SP)
   14:  JAL       ~Func:mdl_set_all_fog_mode
   18:  LI        A0, 1
   1C:  CLEAR     A0
   20:  COPY      A1, A0
   24:  COPY      A2, A0
   28:  COPY      A3, A0
   2C:  LAW       V0, 801512F0
   34:  LI        V1, 1
   38:  JAL       ~Func:set_background_color_blend
   3C:  SB        V1, 0 (V0)
   40:  LI        V0, 14
   44:  SW        V0, 70 (S0)
        .o48
   48:  CLEAR     A0
   4C:  COPY      A1, A0
   50:  COPY      A2, A0
   54:  LW        V1, 70 (S0)
   58:  LI        V0, 14
   5C:  SUBU      V0, V0, V1
   60:  SLL       A3, V0, 2
   64:  ADDU      A3, A3, V0
   68:  SLL       A3, A3, 1
   6C:  JAL       ~Func:set_background_color_blend
   70:  ANDI      A3, A3, FE
   74:  LW        V0, 70 (S0)
   78:  ADDIU     V0, V0, FFFF
   7C:  SW        V0, 70 (S0)
   80:  SLTIU     V0, V0, 1
   84:  LW        RA, 14 (SP)
   88:  LW        S0, 10 (SP)
   8C:  SLL       V0, V0, 1
   90:  JR        RA
   94:  ADDIU     SP, SP, 18
}

#new:Function $Function_80218804
{
    0:  ADDIU     SP, SP, FFE8
    4:  SW        S0, 10 (SP)
    8:  COPY      S0, A0
    C:  BEQ       A1, R0, .o1C
   10:  SW        RA, 14 (SP)
   14:  LI        V0, 14
   18:  SW        V0, 70 (S0)
        .o1C
   1C:  CLEAR     A0
   20:  COPY      A1, A0
   24:  LW        V0, 70 (S0)
   28:  COPY      A2, A0
   2C:  SLL       A3, V0, 2
   30:  ADDU      A3, A3, V0
   34:  SLL       A3, A3, 1
   38:  JAL       ~Func:set_background_color_blend
   3C:  ANDI      A3, A3, FE
   40:  LW        V0, 70 (S0)
   44:  ADDIU     V0, V0, FFFF
   48:  BEQ       V0, R0, .o58
   4C:  SW        V0, 70 (S0)
   50:  BEQ       R0, R0, .o70
   54:  CLEAR     V0
        .o58
   58:  CLEAR     A0
   5C:  COPY      A1, A0
   60:  COPY      A2, A0
   64:  JAL       ~Func:set_background_color_blend
   68:  COPY      A3, A0
   6C:  LI        V0, 2
        .o70
   70:  LW        RA, 14 (SP)
   74:  LW        S0, 10 (SP)
   78:  JR        RA
   7C:  ADDIU     SP, SP, 18
}

#new:Function $Function_80218884
{
    0:  ADDIU     SP, SP, FFB0
    4:  SW        S1, 1C (SP)
    8:  COPY      S1, A0
    C:  SW        RA, 20 (SP)
   10:  SW        S0, 18 (SP)
   14:  SDC1      F28, 48 (SP)
   18:  SDC1      F26, 40 (SP)
   1C:  SDC1      F24, 38 (SP)
   20:  SDC1      F22, 30 (SP)
   24:  SDC1      F20, 28 (SP)
   28:  LW        S0, C (S1)
   2C:  LW        A1, 0 (S0)
   30:  JAL       ~Func:get_variable
   34:  ADDIU     S0, S0, 4
   38:  LW        A1, 0 (S0)
   3C:  ADDIU     S0, S0, 4
   40:  MTC1      V0, F28
   44:  NOP
   48:  CVT.S.W   F28, F28
   4C:  JAL       ~Func:get_variable
   50:  COPY      A0, S1
   54:  LW        A1, 0 (S0)
   58:  ADDIU     S0, S0, 4
   5C:  MTC1      V0, F26
   60:  NOP
   64:  CVT.S.W   F26, F26
   68:  JAL       ~Func:get_variable
   6C:  COPY      A0, S1
   70:  LW        A1, 0 (S0)
   74:  ADDIU     S0, S0, 4
   78:  JAL       ~Func:get_variable
   7C:  COPY      A0, S1
   80:  LW        A1, 0 (S0)
   84:  ADDIU     S0, S0, 4
   88:  MTC1      V0, F20
   8C:  NOP
   90:  CVT.S.W   F20, F20
   94:  JAL       ~Func:get_variable
   98:  COPY      A0, S1
   9C:  LW        A1, 0 (S0)
   A0:  MTC1      V0, F22
   A4:  NOP
   A8:  CVT.S.W   F22, F22
   AC:  JAL       ~Func:get_variable
   B0:  COPY      A0, S1
   B4:  LIF       F0, 40.0
   BC:  MTC1      V0, F24
   C0:  NOP
   C4:  CVT.S.W   F24, F24
   C8:  ADD.S     F0, F22, F0
   CC:  MOV.S     F12, F28
   D0:  MFC1      A2, F20
   D4:  MFC1      A3, F0
   D8:  JAL       ~Func:atan2
   DC:  MOV.S     F14, F26
   E0:  LIF       F2, 10.0
   E8:  CLEAR     A0
   EC:  SUB.S     F20, F20, F2
   F0:  LIF       F2, 60.0
   F8:  LIF       F4, 2.5
  100:  ADD.S     F22, F22, F2
  104:  LIF       F2, 20.0
  10C:  LI        V0, 28
  110:  SW        V0, 14 (SP)
  114:  SWC1      F4, 10 (SP)
  118:  ADD.S     F24, F24, F2
  11C:  MFC1      A1, F20
  120:  MFC1      A2, F22
  124:  MFC1      A3, F24
  128:  JAL       ~Func:playFX_5C
  12C:  MOV.S     F20, F0
  130:  LW        V1, C (V0)
  134:  SWC1      F20, 38 (V1)
  138:  LW        V1, C (V0)
  13C:  LI        A0, 2
  140:  SW        A0, 18 (V1)
  144:  LW        V1, C (V0)
  148:  SW        A0, 1C (V1)
  14C:  LW        V1, C (V0)
  150:  SW        A0, 20 (V1)
  154:  LW        V1, C (V0)
  158:  LI        A0, 50
  15C:  SW        A0, 28 (V1)
  160:  LW        V1, C (V0)
  164:  SW        A0, 2C (V1)
  168:  LW        V1, C (V0)
  16C:  SW        A0, 30 (V1)
  170:  LW        RA, 20 (SP)
  174:  LW        S1, 1C (SP)
  178:  LW        S0, 18 (SP)
  17C:  LDC1      F28, 48 (SP)
  180:  LDC1      F26, 40 (SP)
  184:  LDC1      F24, 38 (SP)
  188:  LDC1      F22, 30 (SP)
  18C:  LDC1      F20, 28 (SP)
  190:  LI        V0, 2
  194:  JR        RA
  198:  ADDIU     SP, SP, 50
}

#new:Function $Function_80218A20
{
    0:  ADDIU     SP, SP, FFE0
    4:  SW        S1, 14 (SP)
    8:  COPY      S1, A0
    C:  SW        RA, 18 (SP)
   10:  SW        S0, 10 (SP)
   14:  LW        S0, C (S1)
   18:  LW        A1, 0 (S0)
   1C:  JAL       ~Func:get_variable
   20:  ADDIU     S0, S0, 4
   24:  COPY      A0, S1
   28:  LW        A1, 0 (S0)
   2C:  JAL       ~Func:get_variable
   30:  COPY      S0, V0
   34:  COPY      A0, S0
   38:  JAL       ~Func:start_rumble
   3C:  COPY      A1, V0
   40:  LW        RA, 18 (SP)
   44:  LW        S1, 14 (SP)
   48:  LW        S0, 10 (SP)
   4C:  LI        V0, 2
   50:  JR        RA
   54:  ADDIU     SP, SP, 20
}

#new:Function $Function_80218A78
{
    0:  ADDIU     SP, SP, FFD8
    4:  SW        S1, 14 (SP)
    8:  COPY      S1, A0
    C:  SW        RA, 20 (SP)
   10:  SW        S3, 1C (SP)
   14:  SW        S2, 18 (SP)
   18:  SW        S0, 10 (SP)
   1C:  LW        S0, C (S1)
   20:  LW        A1, 0 (S0)
   24:  JAL       ~Func:get_variable
   28:  ADDIU     S0, S0, 4
   2C:  LW        A1, 0 (S0)
   30:  ADDIU     S0, S0, 4
   34:  COPY      A0, S1
   38:  JAL       ~Func:get_variable
   3C:  COPY      S3, V0
   40:  LW        A1, 0 (S0)
   44:  ADDIU     S0, S0, 4
   48:  COPY      A0, S1
   4C:  JAL       ~Func:get_variable
   50:  COPY      S2, V0
   54:  COPY      A0, S1
   58:  LW        A1, 0 (S0)
   5C:  JAL       ~Func:get_variable
   60:  COPY      S0, V0
   64:  MTC1      S3, F12
   68:  NOP
   6C:  CVT.S.W   F12, F12
   70:  MTC1      S2, F14
   74:  NOP
   78:  CVT.S.W   F14, F14
   7C:  MTC1      S0, F0
   80:  NOP
   84:  CVT.S.W   F0, F0
   88:  MFC1      A2, F0
   8C:  JAL       802D7460
   90:  COPY      A3, V0
   94:  LW        RA, 20 (SP)
   98:  LW        S3, 1C (SP)
   9C:  LW        S2, 18 (SP)
   A0:  LW        S1, 14 (SP)
   A4:  LW        S0, 10 (SP)
   A8:  LI        V0, 2
   AC:  JR        RA
   B0:  ADDIU     SP, SP, 28
}

#new:Function $Function_80218B2C
{
    0:  ADDIU     SP, SP, FFD8
    4:  SW        S1, 14 (SP)
    8:  COPY      S1, A0
    C:  SW        RA, 20 (SP)
   10:  SW        S3, 1C (SP)
   14:  SW        S2, 18 (SP)
   18:  SW        S0, 10 (SP)
   1C:  LW        S0, C (S1)
   20:  LW        A1, 0 (S0)
   24:  JAL       ~Func:get_variable
   28:  ADDIU     S0, S0, 4
   2C:  LW        A1, 0 (S0)
   30:  ADDIU     S0, S0, 4
   34:  COPY      A0, S1
   38:  JAL       ~Func:get_variable
   3C:  COPY      S3, V0
   40:  LW        A1, 0 (S0)
   44:  ADDIU     S0, S0, 4
   48:  COPY      A0, S1
   4C:  JAL       ~Func:get_variable
   50:  COPY      S2, V0
   54:  COPY      A0, S1
   58:  LW        A1, 0 (S0)
   5C:  JAL       ~Func:get_variable
   60:  COPY      S0, V0
   64:  MTC1      S3, F12
   68:  NOP
   6C:  CVT.S.W   F12, F12
   70:  MTC1      S2, F14
   74:  NOP
   78:  CVT.S.W   F14, F14
   7C:  MTC1      S0, F0
   80:  NOP
   84:  CVT.S.W   F0, F0
   88:  MFC1      A2, F0
   8C:  JAL       802D74C0
   90:  COPY      A3, V0
   94:  LW        RA, 20 (SP)
   98:  LW        S3, 1C (SP)
   9C:  LW        S2, 18 (SP)
   A0:  LW        S1, 14 (SP)
   A4:  LW        S0, 10 (SP)
   A8:  LI        V0, 2
   AC:  JR        RA
   B0:  ADDIU     SP, SP, 28
}

#new:Function $Function_80218BE0
{
    0:  ADDIU     SP, SP, FFB0
    4:  SW        S4, 20 (SP)
    8:  COPY      S4, A0
    C:  SW        RA, 28 (SP)
   10:  SW        S5, 24 (SP)
   14:  SW        S3, 1C (SP)
   18:  SW        S2, 18 (SP)
   1C:  SW        S1, 14 (SP)
   20:  SW        S0, 10 (SP)
   24:  SDC1      F26, 48 (SP)
   28:  SDC1      F24, 40 (SP)
   2C:  SDC1      F22, 38 (SP)
   30:  SDC1      F20, 30 (SP)
   34:  LW        V0, C (S4)
   38:  JAL       ~Func:get_variable
   3C:  LW        A1, 0 (V0)
   40:  JAL       ~Func:get_model_list_index_from_tree_index
   44:  COPY      A0, V0
   48:  JAL       ~Func:get_model_from_list_index
   4C:  COPY      A0, V0
   50:  LA        S2, 800DC070
   58:  SW        R0, 8C (S4)
   5C:  LW        S0, D8 (S2)
   60:  BEQ       S0, R0, .o154
   64:  COPY      S1, V0
   68:  LWC1      F2, 144 (S0)
   6C:  LWC1      F0, 98 (S1)
   70:  SUB.S     F2, F2, F0
   74:  MUL.S     F6, F2, F2
   78:  NOP
   7C:  LWC1      F0, A0 (S1)
   80:  LWC1      F2, 14C (S0)
   84:  SUB.S     F2, F2, F0
   88:  MUL.S     F4, F2, F2
   8C:  NOP
   90:  LBU       V0, 191 (S0)
   94:  LWC1      F2, 148 (S0)
   98:  MTC1      V0, F0
   9C:  NOP
   A0:  CVT.S.W   F0, F0
   A4:  ADD.S     F2, F2, F0
   A8:  LIF       F0, 1.5
   B0:  NOP
   B4:  SUB.S     F2, F2, F0
   B8:  ADD.S     F12, F6, F4
   BC:  LWC1      F0, 9C (S1)
   C0:  SUB.S     F20, F2, F0
   C4:  SQRT.S    F2, F12
   C8:  C.EQ.S    F2, F2
   CC:  NOP
   D0:  BC1T      .oE4
   D4:  NOP
   D8:  JAL       ~Func:sqrtf
   DC:  NOP
   E0:  MOV.S     F2, F0
        .oE4
   E4:  MTC1      R0, F0
   E8:  NOP
   EC:  C.LT.S    F0, F20
   F0:  NOP
   F4:  BC1F      .o154
   F8:  MOV.S     F4, F2
   FC:  LBU       V0, 191 (S0)
  100:  MTC1      V0, F0
  104:  NOP
  108:  CVT.S.W   F0, F0
  10C:  C.LT.S    F20, F0
  110:  NOP
  114:  BC1F      .o154
  118:  NOP
  11C:  LBU       V0, 190 (S0)
  120:  LIF       F2, 0.5
  128:  MTC1      V0, F0
  12C:  NOP
  130:  CVT.S.W   F0, F0
  134:  MUL.S     F0, F0, F2
  138:  NOP
  13C:  C.LT.S    F4, F0
  140:  NOP
  144:  BC1F      .o154
  148:  LI        V0, 1
  14C:  BEQ       R0, R0, .o45C
  150:  SW        V0, 8C (S4)
        .o154
  154:  LW        S0, DC (S2)
  158:  BEQ       S0, R0, .o260
  15C:  CLEAR     S3
  160:  LWC1      F2, 144 (S0)
  164:  LWC1      F0, 98 (S1)
  168:  SUB.S     F2, F2, F0
  16C:  MUL.S     F6, F2, F2
  170:  NOP
  174:  LWC1      F0, A0 (S1)
  178:  LWC1      F2, 14C (S0)
  17C:  SUB.S     F2, F2, F0
  180:  MUL.S     F4, F2, F2
  184:  NOP
  188:  LBU       V0, 191 (S0)
  18C:  LWC1      F2, 148 (S0)
  190:  MTC1      V0, F0
  194:  NOP
  198:  CVT.S.W   F0, F0
  19C:  ADD.S     F2, F2, F0
  1A0:  LIF       F0, 1.5
  1A8:  NOP
  1AC:  SUB.S     F2, F2, F0
  1B0:  ADD.S     F12, F6, F4
  1B4:  LWC1      F0, 9C (S1)
  1B8:  SUB.S     F20, F2, F0
  1BC:  SQRT.S    F2, F12
  1C0:  C.EQ.S    F2, F2
  1C4:  NOP
  1C8:  BC1T      .o1DC
  1CC:  NOP
  1D0:  JAL       ~Func:sqrtf
  1D4:  NOP
  1D8:  MOV.S     F2, F0
        .o1DC
  1DC:  MTC1      R0, F0
  1E0:  NOP
  1E4:  C.LT.S    F0, F20
  1E8:  NOP
  1EC:  BC1F      .o25C
  1F0:  MOV.S     F4, F2
  1F4:  LBU       V0, 191 (S0)
  1F8:  MTC1      V0, F0
  1FC:  NOP
  200:  CVT.S.W   F0, F0
  204:  C.LT.S    F20, F0
  208:  NOP
  20C:  BC1F      .o260
  210:  CLEAR     S3
  214:  LBU       V0, 190 (S0)
  218:  LIF       F2, 0.5
  220:  MTC1      V0, F0
  224:  NOP
  228:  CVT.S.W   F0, F0
  22C:  MUL.S     F0, F0, F2
  230:  NOP
  234:  C.LT.S    F4, F0
  238:  NOP
  23C:  BC1F      .o260
  240:  LI        V0, 1
  244:  BEQ       R0, R0, .o45C
  248:  SW        V0, 8C (S4)
        .o24C
  24C:  BEQ       R0, R0, .o45C
  250:  SW        V0, 8C (S4)
        .o254
  254:  BEQ       R0, R0, .o45C
  258:  SW        V0, 8C (S4)
        .o25C
  25C:  CLEAR     S3
        .o260
  260:  LUI       S5, 10
  264:  LIF       F26, 1.5
  26C:  MTC1      R0, F24
  270:  LIF       F22, 0.5
        .o278
  278:  LW        S0, E0 (S2)
  27C:  BEQL      S0, R0, .o450
  280:  ADDIU     S3, S3, 1
  284:  LW        V0, 0 (S0)
  288:  ANDI      V0, V0, 1
  28C:  BNEL      V0, R0, .o450
  290:  ADDIU     S3, S3, 1
  294:  LWC1      F2, 144 (S0)
  298:  LWC1      F0, 98 (S1)
  29C:  SUB.S     F2, F2, F0
  2A0:  MUL.S     F6, F2, F2
  2A4:  NOP
  2A8:  LWC1      F0, A0 (S1)
  2AC:  LWC1      F2, 14C (S0)
  2B0:  SUB.S     F2, F2, F0
  2B4:  MUL.S     F4, F2, F2
  2B8:  NOP
  2BC:  LBU       V0, 191 (S0)
  2C0:  LWC1      F2, 148 (S0)
  2C4:  MTC1      V0, F0
  2C8:  NOP
  2CC:  CVT.S.W   F0, F0
  2D0:  ADD.S     F2, F2, F0
  2D4:  SUB.S     F2, F2, F26
  2D8:  ADD.S     F12, F6, F4
  2DC:  LWC1      F0, 9C (S1)
  2E0:  SUB.S     F20, F2, F0
  2E4:  SQRT.S    F0, F12
  2E8:  C.EQ.S    F0, F0
  2EC:  NOP
  2F0:  BC1T      .o300
  2F4:  NOP
  2F8:  JAL       ~Func:sqrtf
  2FC:  NOP
        .o300
  300:  C.LT.S    F24, F20
  304:  NOP
  308:  BC1F      .o358
  30C:  MOV.S     F4, F0
  310:  LBU       V0, 191 (S0)
  314:  MTC1      V0, F0
  318:  NOP
  31C:  CVT.S.W   F0, F0
  320:  C.LT.S    F20, F0
  324:  NOP
  328:  BC1F      .o358
  32C:  NOP
  330:  LBU       V0, 190 (S0)
  334:  MTC1      V0, F0
  338:  NOP
  33C:  CVT.S.W   F0, F0
  340:  MUL.S     F0, F0, F22
  344:  NOP
  348:  C.LT.S    F4, F0
  34C:  NOP
  350:  BC1T      .o24C
  354:  LI        V0, 1
        .o358
  358:  LW        S0, 1F4 (S0)
  35C:  BEQL      S0, R0, .o450
  360:  ADDIU     S3, S3, 1
        .o364
  364:  LW        V1, 0 (S0)
  368:  ANDI      V0, V1, 1
  36C:  BNE       V0, R0, .o440
  370:  AND       V0, V1, S5
  374:  BEQ       V0, R0, .o440
  378:  NOP
  37C:  LWC1      F2, 58 (S0)
  380:  LWC1      F0, 98 (S1)
  384:  SUB.S     F2, F2, F0
  388:  MUL.S     F6, F2, F2
  38C:  NOP
  390:  LWC1      F0, A0 (S1)
  394:  LWC1      F2, 60 (S0)
  398:  SUB.S     F2, F2, F0
  39C:  MUL.S     F4, F2, F2
  3A0:  NOP
  3A4:  LBU       V0, 73 (S0)
  3A8:  LWC1      F0, 5C (S0)
  3AC:  MTC1      V0, F2
  3B0:  NOP
  3B4:  CVT.S.W   F2, F2
  3B8:  ADD.S     F0, F0, F2
  3BC:  SUB.S     F0, F0, F26
  3C0:  ADD.S     F12, F6, F4
  3C4:  LWC1      F2, 9C (S1)
  3C8:  SUB.S     F20, F0, F2
  3CC:  SQRT.S    F0, F12
  3D0:  C.EQ.S    F0, F0
  3D4:  NOP
  3D8:  BC1T      .o3E8
  3DC:  NOP
  3E0:  JAL       ~Func:sqrtf
  3E4:  NOP
        .o3E8
  3E8:  C.LT.S    F24, F20
  3EC:  NOP
  3F0:  BC1F      .o440
  3F4:  MOV.S     F4, F0
  3F8:  LBU       V0, 73 (S0)
  3FC:  MTC1      V0, F0
  400:  NOP
  404:  CVT.S.W   F0, F0
  408:  C.LT.S    F20, F0
  40C:  NOP
  410:  BC1F      .o440
  414:  NOP
  418:  LBU       V0, 72 (S0)
  41C:  MTC1      V0, F0
  420:  NOP
  424:  CVT.S.W   F0, F0
  428:  MUL.S     F0, F0, F22
  42C:  NOP
  430:  C.LT.S    F4, F0
  434:  NOP
  438:  BC1T      .o254
  43C:  LI        V0, 1
        .o440
  440:  LW        S0, C (S0)
  444:  BNE       S0, R0, .o364
  448:  NOP
  44C:  ADDIU     S3, S3, 1
        .o450
  450:  SLTI      V0, S3, 18
  454:  BNE       V0, R0, .o278
  458:  ADDIU     S2, S2, 4
        .o45C
  45C:  LI        V0, 2
  460:  LW        RA, 28 (SP)
  464:  LW        S5, 24 (SP)
  468:  LW        S4, 20 (SP)
  46C:  LW        S3, 1C (SP)
  470:  LW        S2, 18 (SP)
  474:  LW        S1, 14 (SP)
  478:  LW        S0, 10 (SP)
  47C:  LDC1      F26, 48 (SP)
  480:  LDC1      F24, 40 (SP)
  484:  LDC1      F22, 38 (SP)
  488:  LDC1      F20, 30 (SP)
  48C:  JR        RA
  490:  ADDIU     SP, SP, 50
}

PADDING: 80219074 to 80219080 (00609B24 to 00609B30)
00000000 00000000 00000000

#new:Function $Function_80219080
{
    0:  ADDIU     SP, SP, FFB0
    4:  SW        S4, 20 (SP)
    8:  COPY      S4, A0
    C:  SW        RA, 28 (SP)
   10:  SW        S5, 24 (SP)
   14:  SW        S3, 1C (SP)
   18:  SW        S2, 18 (SP)
   1C:  SW        S1, 14 (SP)
   20:  SW        S0, 10 (SP)
   24:  SDC1      F26, 48 (SP)
   28:  SDC1      F24, 40 (SP)
   2C:  SDC1      F22, 38 (SP)
   30:  SDC1      F20, 30 (SP)
   34:  LW        V0, C (S4)
   38:  JAL       ~Func:get_variable
   3C:  LW        A1, 0 (V0)
   40:  JAL       ~Func:get_model_list_index_from_tree_index
   44:  COPY      A0, V0
   48:  JAL       ~Func:get_model_from_list_index
   4C:  COPY      A0, V0
   50:  LA        S2, 800DC070
   58:  SW        R0, 8C (S4)
   5C:  LW        S0, D8 (S2)
   60:  BEQ       S0, R0, .o154
   64:  COPY      S1, V0
   68:  LWC1      F2, 144 (S0)
   6C:  LWC1      F0, 98 (S1)
   70:  SUB.S     F2, F2, F0
   74:  MUL.S     F6, F2, F2
   78:  NOP
   7C:  LWC1      F0, A0 (S1)
   80:  LWC1      F2, 14C (S0)
   84:  SUB.S     F2, F2, F0
   88:  MUL.S     F4, F2, F2
   8C:  NOP
   90:  LBU       V0, 191 (S0)
   94:  LWC1      F2, 148 (S0)
   98:  MTC1      V0, F0
   9C:  NOP
   A0:  CVT.S.W   F0, F0
   A4:  ADD.S     F2, F2, F0
   A8:  LIF       F0, 1.5
   B0:  NOP
   B4:  SUB.S     F2, F2, F0
   B8:  ADD.S     F12, F6, F4
   BC:  LWC1      F0, 9C (S1)
   C0:  SUB.S     F20, F2, F0
   C4:  SQRT.S    F2, F12
   C8:  C.EQ.S    F2, F2
   CC:  NOP
   D0:  BC1T      .oE4
   D4:  NOP
   D8:  JAL       ~Func:sqrtf
   DC:  NOP
   E0:  MOV.S     F2, F0
        .oE4
   E4:  MTC1      R0, F0
   E8:  NOP
   EC:  C.LT.S    F0, F20
   F0:  NOP
   F4:  BC1F      .o154
   F8:  MOV.S     F4, F2
   FC:  LBU       V0, 191 (S0)
  100:  MTC1      V0, F0
  104:  NOP
  108:  CVT.S.W   F0, F0
  10C:  C.LT.S    F20, F0
  110:  NOP
  114:  BC1F      .o154
  118:  NOP
  11C:  LBU       V0, 190 (S0)
  120:  LIF       F2, 0.5
  128:  MTC1      V0, F0
  12C:  NOP
  130:  CVT.S.W   F0, F0
  134:  MUL.S     F0, F0, F2
  138:  NOP
  13C:  C.LT.S    F4, F0
  140:  NOP
  144:  BC1F      .o154
  148:  LI        V0, 1
  14C:  BEQ       R0, R0, .o45C
  150:  SW        V0, 8C (S4)
        .o154
  154:  LW        S0, DC (S2)
  158:  BEQ       S0, R0, .o260
  15C:  CLEAR     S3
  160:  LWC1      F2, 144 (S0)
  164:  LWC1      F0, 98 (S1)
  168:  SUB.S     F2, F2, F0
  16C:  MUL.S     F6, F2, F2
  170:  NOP
  174:  LWC1      F0, A0 (S1)
  178:  LWC1      F2, 14C (S0)
  17C:  SUB.S     F2, F2, F0
  180:  MUL.S     F4, F2, F2
  184:  NOP
  188:  LBU       V0, 191 (S0)
  18C:  LWC1      F2, 148 (S0)
  190:  MTC1      V0, F0
  194:  NOP
  198:  CVT.S.W   F0, F0
  19C:  ADD.S     F2, F2, F0
  1A0:  LIF       F0, 1.5
  1A8:  NOP
  1AC:  SUB.S     F2, F2, F0
  1B0:  ADD.S     F12, F6, F4
  1B4:  LWC1      F0, 9C (S1)
  1B8:  SUB.S     F20, F2, F0
  1BC:  SQRT.S    F2, F12
  1C0:  C.EQ.S    F2, F2
  1C4:  NOP
  1C8:  BC1T      .o1DC
  1CC:  NOP
  1D0:  JAL       ~Func:sqrtf
  1D4:  NOP
  1D8:  MOV.S     F2, F0
        .o1DC
  1DC:  MTC1      R0, F0
  1E0:  NOP
  1E4:  C.LT.S    F0, F20
  1E8:  NOP
  1EC:  BC1F      .o25C
  1F0:  MOV.S     F4, F2
  1F4:  LBU       V0, 191 (S0)
  1F8:  MTC1      V0, F0
  1FC:  NOP
  200:  CVT.S.W   F0, F0
  204:  C.LT.S    F20, F0
  208:  NOP
  20C:  BC1F      .o260
  210:  CLEAR     S3
  214:  LBU       V0, 190 (S0)
  218:  LIF       F2, 0.5
  220:  MTC1      V0, F0
  224:  NOP
  228:  CVT.S.W   F0, F0
  22C:  MUL.S     F0, F0, F2
  230:  NOP
  234:  C.LT.S    F4, F0
  238:  NOP
  23C:  BC1F      .o260
  240:  LI        V0, 1
  244:  BEQ       R0, R0, .o45C
  248:  SW        V0, 8C (S4)
        .o24C
  24C:  BEQ       R0, R0, .o45C
  250:  SW        V0, 8C (S4)
        .o254
  254:  BEQ       R0, R0, .o45C
  258:  SW        V0, 8C (S4)
        .o25C
  25C:  CLEAR     S3
        .o260
  260:  LUI       S5, 10
  264:  LIF       F26, 1.5
  26C:  MTC1      R0, F24
  270:  LIF       F22, 0.5
        .o278
  278:  LW        S0, E0 (S2)
  27C:  BEQL      S0, R0, .o450
  280:  ADDIU     S3, S3, 1
  284:  LW        V0, 0 (S0)
  288:  ANDI      V0, V0, 1
  28C:  BNEL      V0, R0, .o450
  290:  ADDIU     S3, S3, 1
  294:  LWC1      F2, 144 (S0)
  298:  LWC1      F0, 98 (S1)
  29C:  SUB.S     F2, F2, F0
  2A0:  MUL.S     F6, F2, F2
  2A4:  NOP
  2A8:  LWC1      F0, A0 (S1)
  2AC:  LWC1      F2, 14C (S0)
  2B0:  SUB.S     F2, F2, F0
  2B4:  MUL.S     F4, F2, F2
  2B8:  NOP
  2BC:  LBU       V0, 191 (S0)
  2C0:  LWC1      F2, 148 (S0)
  2C4:  MTC1      V0, F0
  2C8:  NOP
  2CC:  CVT.S.W   F0, F0
  2D0:  ADD.S     F2, F2, F0
  2D4:  SUB.S     F2, F2, F26
  2D8:  ADD.S     F12, F6, F4
  2DC:  LWC1      F0, 9C (S1)
  2E0:  SUB.S     F20, F2, F0
  2E4:  SQRT.S    F0, F12
  2E8:  C.EQ.S    F0, F0
  2EC:  NOP
  2F0:  BC1T      .o300
  2F4:  NOP
  2F8:  JAL       ~Func:sqrtf
  2FC:  NOP
        .o300
  300:  C.LT.S    F24, F20
  304:  NOP
  308:  BC1F      .o358
  30C:  MOV.S     F4, F0
  310:  LBU       V0, 191 (S0)
  314:  MTC1      V0, F0
  318:  NOP
  31C:  CVT.S.W   F0, F0
  320:  C.LT.S    F20, F0
  324:  NOP
  328:  BC1F      .o358
  32C:  NOP
  330:  LBU       V0, 190 (S0)
  334:  MTC1      V0, F0
  338:  NOP
  33C:  CVT.S.W   F0, F0
  340:  MUL.S     F0, F0, F22
  344:  NOP
  348:  C.LT.S    F4, F0
  34C:  NOP
  350:  BC1T      .o24C
  354:  LI        V0, 1
        .o358
  358:  LW        S0, 1F4 (S0)
  35C:  BEQL      S0, R0, .o450
  360:  ADDIU     S3, S3, 1
        .o364
  364:  LW        V1, 0 (S0)
  368:  ANDI      V0, V1, 1
  36C:  BNE       V0, R0, .o440
  370:  AND       V0, V1, S5
  374:  BEQ       V0, R0, .o440
  378:  NOP
  37C:  LWC1      F2, 58 (S0)
  380:  LWC1      F0, 98 (S1)
  384:  SUB.S     F2, F2, F0
  388:  MUL.S     F6, F2, F2
  38C:  NOP
  390:  LWC1      F0, A0 (S1)
  394:  LWC1      F2, 60 (S0)
  398:  SUB.S     F2, F2, F0
  39C:  MUL.S     F4, F2, F2
  3A0:  NOP
  3A4:  LBU       V0, 73 (S0)
  3A8:  LWC1      F0, 5C (S0)
  3AC:  MTC1      V0, F2
  3B0:  NOP
  3B4:  CVT.S.W   F2, F2
  3B8:  ADD.S     F0, F0, F2
  3BC:  SUB.S     F0, F0, F26
  3C0:  ADD.S     F12, F6, F4
  3C4:  LWC1      F2, 9C (S1)
  3C8:  SUB.S     F20, F0, F2
  3CC:  SQRT.S    F0, F12
  3D0:  C.EQ.S    F0, F0
  3D4:  NOP
  3D8:  BC1T      .o3E8
  3DC:  NOP
  3E0:  JAL       ~Func:sqrtf
  3E4:  NOP
        .o3E8
  3E8:  C.LT.S    F24, F20
  3EC:  NOP
  3F0:  BC1F      .o440
  3F4:  MOV.S     F4, F0
  3F8:  LBU       V0, 73 (S0)
  3FC:  MTC1      V0, F0
  400:  NOP
  404:  CVT.S.W   F0, F0
  408:  C.LT.S    F20, F0
  40C:  NOP
  410:  BC1F      .o440
  414:  NOP
  418:  LBU       V0, 72 (S0)
  41C:  MTC1      V0, F0
  420:  NOP
  424:  CVT.S.W   F0, F0
  428:  MUL.S     F0, F0, F22
  42C:  NOP
  430:  C.LT.S    F4, F0
  434:  NOP
  438:  BC1T      .o254
  43C:  LI        V0, 1
        .o440
  440:  LW        S0, C (S0)
  444:  BNE       S0, R0, .o364
  448:  NOP
  44C:  ADDIU     S3, S3, 1
        .o450
  450:  SLTI      V0, S3, 18
  454:  BNE       V0, R0, .o278
  458:  ADDIU     S2, S2, 4
        .o45C
  45C:  LI        V0, 2
  460:  LW        RA, 28 (SP)
  464:  LW        S5, 24 (SP)
  468:  LW        S4, 20 (SP)
  46C:  LW        S3, 1C (SP)
  470:  LW        S2, 18 (SP)
  474:  LW        S1, 14 (SP)
  478:  LW        S0, 10 (SP)
  47C:  LDC1      F26, 48 (SP)
  480:  LDC1      F24, 40 (SP)
  484:  LDC1      F22, 38 (SP)
  488:  LDC1      F20, 30 (SP)
  48C:  JR        RA
  490:  ADDIU     SP, SP, 50
}

PADDING: 80219514 to 80219520 (00609FC4 to 00609FD0)
00000000 00000000 00000000

#new:Function $Function_80219520
{
    0:  ADDIU     SP, SP, FFB0
    4:  SW        S4, 20 (SP)
    8:  COPY      S4, A0
    C:  SW        RA, 28 (SP)
   10:  SW        S5, 24 (SP)
   14:  SW        S3, 1C (SP)
   18:  SW        S2, 18 (SP)
   1C:  SW        S1, 14 (SP)
   20:  SW        S0, 10 (SP)
   24:  SDC1      F26, 48 (SP)
   28:  SDC1      F24, 40 (SP)
   2C:  SDC1      F22, 38 (SP)
   30:  SDC1      F20, 30 (SP)
   34:  LW        V0, C (S4)
   38:  JAL       ~Func:get_variable
   3C:  LW        A1, 0 (V0)
   40:  JAL       ~Func:get_model_list_index_from_tree_index
   44:  COPY      A0, V0
   48:  JAL       ~Func:get_model_from_list_index
   4C:  COPY      A0, V0
   50:  LA        S2, 800DC070
   58:  SW        R0, 8C (S4)
   5C:  LW        S0, D8 (S2)
   60:  BEQ       S0, R0, .o154
   64:  COPY      S1, V0
   68:  LWC1      F2, 144 (S0)
   6C:  LWC1      F0, 98 (S1)
   70:  SUB.S     F2, F2, F0
   74:  MUL.S     F6, F2, F2
   78:  NOP
   7C:  LWC1      F0, A0 (S1)
   80:  LWC1      F2, 14C (S0)
   84:  SUB.S     F2, F2, F0
   88:  MUL.S     F4, F2, F2
   8C:  NOP
   90:  LBU       V0, 191 (S0)
   94:  LWC1      F2, 148 (S0)
   98:  MTC1      V0, F0
   9C:  NOP
   A0:  CVT.S.W   F0, F0
   A4:  ADD.S     F2, F2, F0
   A8:  LIF       F0, 1.5
   B0:  NOP
   B4:  SUB.S     F2, F2, F0
   B8:  ADD.S     F12, F6, F4
   BC:  LWC1      F0, 9C (S1)
   C0:  SUB.S     F20, F2, F0
   C4:  SQRT.S    F2, F12
   C8:  C.EQ.S    F2, F2
   CC:  NOP
   D0:  BC1T      .oE4
   D4:  NOP
   D8:  JAL       ~Func:sqrtf
   DC:  NOP
   E0:  MOV.S     F2, F0
        .oE4
   E4:  MTC1      R0, F0
   E8:  NOP
   EC:  C.LT.S    F0, F20
   F0:  NOP
   F4:  BC1F      .o154
   F8:  MOV.S     F4, F2
   FC:  LBU       V0, 191 (S0)
  100:  MTC1      V0, F0
  104:  NOP
  108:  CVT.S.W   F0, F0
  10C:  C.LT.S    F20, F0
  110:  NOP
  114:  BC1F      .o154
  118:  NOP
  11C:  LBU       V0, 190 (S0)
  120:  LIF       F2, 0.5
  128:  MTC1      V0, F0
  12C:  NOP
  130:  CVT.S.W   F0, F0
  134:  MUL.S     F0, F0, F2
  138:  NOP
  13C:  C.LT.S    F4, F0
  140:  NOP
  144:  BC1F      .o154
  148:  LI        V0, 1
  14C:  BEQ       R0, R0, .o45C
  150:  SW        V0, 8C (S4)
        .o154
  154:  LW        S0, DC (S2)
  158:  BEQ       S0, R0, .o260
  15C:  CLEAR     S3
  160:  LWC1      F2, 144 (S0)
  164:  LWC1      F0, 98 (S1)
  168:  SUB.S     F2, F2, F0
  16C:  MUL.S     F6, F2, F2
  170:  NOP
  174:  LWC1      F0, A0 (S1)
  178:  LWC1      F2, 14C (S0)
  17C:  SUB.S     F2, F2, F0
  180:  MUL.S     F4, F2, F2
  184:  NOP
  188:  LBU       V0, 191 (S0)
  18C:  LWC1      F2, 148 (S0)
  190:  MTC1      V0, F0
  194:  NOP
  198:  CVT.S.W   F0, F0
  19C:  ADD.S     F2, F2, F0
  1A0:  LIF       F0, 1.5
  1A8:  NOP
  1AC:  SUB.S     F2, F2, F0
  1B0:  ADD.S     F12, F6, F4
  1B4:  LWC1      F0, 9C (S1)
  1B8:  SUB.S     F20, F2, F0
  1BC:  SQRT.S    F2, F12
  1C0:  C.EQ.S    F2, F2
  1C4:  NOP
  1C8:  BC1T      .o1DC
  1CC:  NOP
  1D0:  JAL       ~Func:sqrtf
  1D4:  NOP
  1D8:  MOV.S     F2, F0
        .o1DC
  1DC:  MTC1      R0, F0
  1E0:  NOP
  1E4:  C.LT.S    F0, F20
  1E8:  NOP
  1EC:  BC1F      .o25C
  1F0:  MOV.S     F4, F2
  1F4:  LBU       V0, 191 (S0)
  1F8:  MTC1      V0, F0
  1FC:  NOP
  200:  CVT.S.W   F0, F0
  204:  C.LT.S    F20, F0
  208:  NOP
  20C:  BC1F      .o260
  210:  CLEAR     S3
  214:  LBU       V0, 190 (S0)
  218:  LIF       F2, 0.5
  220:  MTC1      V0, F0
  224:  NOP
  228:  CVT.S.W   F0, F0
  22C:  MUL.S     F0, F0, F2
  230:  NOP
  234:  C.LT.S    F4, F0
  238:  NOP
  23C:  BC1F      .o260
  240:  LI        V0, 1
  244:  BEQ       R0, R0, .o45C
  248:  SW        V0, 8C (S4)
        .o24C
  24C:  BEQ       R0, R0, .o45C
  250:  SW        V0, 8C (S4)
        .o254
  254:  BEQ       R0, R0, .o45C
  258:  SW        V0, 8C (S4)
        .o25C
  25C:  CLEAR     S3
        .o260
  260:  LUI       S5, 10
  264:  LIF       F26, 1.5
  26C:  MTC1      R0, F24
  270:  LIF       F22, 0.5
        .o278
  278:  LW        S0, E0 (S2)
  27C:  BEQL      S0, R0, .o450
  280:  ADDIU     S3, S3, 1
  284:  LW        V0, 0 (S0)
  288:  ANDI      V0, V0, 1
  28C:  BNEL      V0, R0, .o450
  290:  ADDIU     S3, S3, 1
  294:  LWC1      F2, 144 (S0)
  298:  LWC1      F0, 98 (S1)
  29C:  SUB.S     F2, F2, F0
  2A0:  MUL.S     F6, F2, F2
  2A4:  NOP
  2A8:  LWC1      F0, A0 (S1)
  2AC:  LWC1      F2, 14C (S0)
  2B0:  SUB.S     F2, F2, F0
  2B4:  MUL.S     F4, F2, F2
  2B8:  NOP
  2BC:  LBU       V0, 191 (S0)
  2C0:  LWC1      F2, 148 (S0)
  2C4:  MTC1      V0, F0
  2C8:  NOP
  2CC:  CVT.S.W   F0, F0
  2D0:  ADD.S     F2, F2, F0
  2D4:  SUB.S     F2, F2, F26
  2D8:  ADD.S     F12, F6, F4
  2DC:  LWC1      F0, 9C (S1)
  2E0:  SUB.S     F20, F2, F0
  2E4:  SQRT.S    F0, F12
  2E8:  C.EQ.S    F0, F0
  2EC:  NOP
  2F0:  BC1T      .o300
  2F4:  NOP
  2F8:  JAL       ~Func:sqrtf
  2FC:  NOP
        .o300
  300:  C.LT.S    F24, F20
  304:  NOP
  308:  BC1F      .o358
  30C:  MOV.S     F4, F0
  310:  LBU       V0, 191 (S0)
  314:  MTC1      V0, F0
  318:  NOP
  31C:  CVT.S.W   F0, F0
  320:  C.LT.S    F20, F0
  324:  NOP
  328:  BC1F      .o358
  32C:  NOP
  330:  LBU       V0, 190 (S0)
  334:  MTC1      V0, F0
  338:  NOP
  33C:  CVT.S.W   F0, F0
  340:  MUL.S     F0, F0, F22
  344:  NOP
  348:  C.LT.S    F4, F0
  34C:  NOP
  350:  BC1T      .o24C
  354:  LI        V0, 1
        .o358
  358:  LW        S0, 1F4 (S0)
  35C:  BEQL      S0, R0, .o450
  360:  ADDIU     S3, S3, 1
        .o364
  364:  LW        V1, 0 (S0)
  368:  ANDI      V0, V1, 1
  36C:  BNE       V0, R0, .o440
  370:  AND       V0, V1, S5
  374:  BEQ       V0, R0, .o440
  378:  NOP
  37C:  LWC1      F2, 58 (S0)
  380:  LWC1      F0, 98 (S1)
  384:  SUB.S     F2, F2, F0
  388:  MUL.S     F6, F2, F2
  38C:  NOP
  390:  LWC1      F0, A0 (S1)
  394:  LWC1      F2, 60 (S0)
  398:  SUB.S     F2, F2, F0
  39C:  MUL.S     F4, F2, F2
  3A0:  NOP
  3A4:  LBU       V0, 73 (S0)
  3A8:  LWC1      F0, 5C (S0)
  3AC:  MTC1      V0, F2
  3B0:  NOP
  3B4:  CVT.S.W   F2, F2
  3B8:  ADD.S     F0, F0, F2
  3BC:  SUB.S     F0, F0, F26
  3C0:  ADD.S     F12, F6, F4
  3C4:  LWC1      F2, 9C (S1)
  3C8:  SUB.S     F20, F0, F2
  3CC:  SQRT.S    F0, F12
  3D0:  C.EQ.S    F0, F0
  3D4:  NOP
  3D8:  BC1T      .o3E8
  3DC:  NOP
  3E0:  JAL       ~Func:sqrtf
  3E4:  NOP
        .o3E8
  3E8:  C.LT.S    F24, F20
  3EC:  NOP
  3F0:  BC1F      .o440
  3F4:  MOV.S     F4, F0
  3F8:  LBU       V0, 73 (S0)
  3FC:  MTC1      V0, F0
  400:  NOP
  404:  CVT.S.W   F0, F0
  408:  C.LT.S    F20, F0
  40C:  NOP
  410:  BC1F      .o440
  414:  NOP
  418:  LBU       V0, 72 (S0)
  41C:  MTC1      V0, F0
  420:  NOP
  424:  CVT.S.W   F0, F0
  428:  MUL.S     F0, F0, F22
  42C:  NOP
  430:  C.LT.S    F4, F0
  434:  NOP
  438:  BC1T      .o254
  43C:  LI        V0, 1
        .o440
  440:  LW        S0, C (S0)
  444:  BNE       S0, R0, .o364
  448:  NOP
  44C:  ADDIU     S3, S3, 1
        .o450
  450:  SLTI      V0, S3, 18
  454:  BNE       V0, R0, .o278
  458:  ADDIU     S2, S2, 4
        .o45C
  45C:  LI        V0, 2
  460:  LW        RA, 28 (SP)
  464:  LW        S5, 24 (SP)
  468:  LW        S4, 20 (SP)
  46C:  LW        S3, 1C (SP)
  470:  LW        S2, 18 (SP)
  474:  LW        S1, 14 (SP)
  478:  LW        S0, 10 (SP)
  47C:  LDC1      F26, 48 (SP)
  480:  LDC1      F24, 40 (SP)
  484:  LDC1      F22, 38 (SP)
  488:  LDC1      F20, 30 (SP)
  48C:  JR        RA
  490:  ADDIU     SP, SP, 50
}

PADDING: 802199B4 to 802199C0 (0060A464 to 0060A470)
00000000 00000000 00000000

% Origin: HEURISTIC
#new:Function $Function_802199C0
{
    0:  ADDIU     SP, SP, FFA0
    4:  SW        S0, 20 (SP)
    8:  COPY      S0, A0
    C:  SW        RA, 28 (SP)
   10:  SW        S1, 24 (SP)
   14:  SDC1      F30, 58 (SP)
   18:  SDC1      F28, 50 (SP)
   1C:  SDC1      F26, 48 (SP)
   20:  SDC1      F24, 40 (SP)
   24:  SDC1      F22, 38 (SP)
   28:  SDC1      F20, 30 (SP)
   2C:  LW        V0, C (S0)
   30:  JAL       ~Func:get_variable
   34:  LW        A1, 0 (V0)
   38:  COPY      S1, V0
   3C:  LI        A0, 1
   40:  BEQ       S1, A0, .o100
   44:  SW        S1, 70 (S0)
   48:  SLTI      V0, S1, 2
   4C:  BEQ       V0, R0, .o64
   50:  LI        V0, 2
   54:  BEQ       S1, R0, .o7C
   58:  LI        V0, 8E
   5C:  BEQ       R0, R0, .o400
   60:  NOP
        .o64
   64:  BEQ       S1, V0, .o27C
   68:  LI        V0, 3
   6C:  BEQ       S1, V0, .oBC
   70:  LI        V1, 5B
   74:  BEQ       R0, R0, .o400
   78:  NOP
        .o7C
   7C:  LIF       F4, 142.0
   84:  LIF       F30, -118.0
   8C:  LI        V1, FF8A
   90:  SW        R0, 14 (SP)
   94:  SWC1      F4, 10 (SP)
   98:  SW        V0, 90 (S0)
   9C:  LI        V0, 2C
   A0:  SW        V0, 9C (S0)
   A4:  LI        V0, 3
   A8:  SW        R0, 94 (S0)
   AC:  SW        V1, 98 (S0)
   B0:  SW        V1, A0 (S0)
   B4:  BEQ       R0, R0, .oF0
   B8:  SW        V0, A4 (S0)
        .oBC
   BC:  LIF       F4, 91.0
   C4:  LIF       F30, -118.0
   CC:  LI        V0, FF8A
   D0:  SW        R0, 14 (SP)
   D4:  SWC1      F4, 10 (SP)
   D8:  SW        V1, 90 (S0)
   DC:  SW        R0, 94 (S0)
   E0:  SW        V0, 98 (S0)
   E4:  SW        V1, 9C (S0)
   E8:  SW        V0, A0 (S0)
   EC:  SW        S1, A4 (S0)
        .oF0
   F0:  SW        R0, A8 (S0)
   F4:  SW        R0, B0 (S0)
   F8:  BEQ       R0, R0, .o400
   FC:  SW        A0, 70 (S0)
        .o100
  100:  LW        V0, A8 (S0)
  104:  LW        V1, A4 (S0)
  108:  ADDU      V0, V0, V1
  10C:  SW        V0, A8 (S0)
  110:  SLTI      V0, V0, 2E
  114:  BNE       V0, R0, .o124
  118:  NOP
  11C:  LI        V0, 2D
  120:  SW        V0, A8 (S0)
        .o124
  124:  LWC1      F4, 90 (S0)
  128:  CVT.S.W   F4, F4
  12C:  SWC1      F4, 10 (SP)
  130:  LWC1      F4, 94 (S0)
  134:  CVT.S.W   F4, F4
  138:  SWC1      F4, 14 (SP)
  13C:  LWC1      F12, A8 (S0)
  140:  CVT.S.W   F12, F12
  144:  LIF       F26, 6.28318
  150:  LWC1      F30, 98 (S0)
  154:  CVT.S.W   F30, F30
  158:  MUL.S     F12, F12, F26
  15C:  NOP
  160:  LWC1      F28, 9C (S0)
  164:  CVT.S.W   F28, F28
  168:  LIF       F24, 360.0
  170:  LWC1      F4, A0 (S0)
  174:  CVT.S.W   F4, F4
  178:  SWC1      F4, 18 (SP)
  17C:  JAL       ~Func:sin_rad
  180:  DIV.S     F12, F12, F24
  184:  CVT.D.S   F0, F0
  188:  LIF       F23, 1.875
  190:  MTC1      R0, F22
  194:  LWC1      F4, 10 (SP)
  198:  SUB.D     F0, F22, F0
  19C:  CVT.D.S   F20, F4
  1A0:  MUL.D     F20, F20, F0
  1A4:  NOP
  1A8:  LWC1      F12, A8 (S0)
  1AC:  CVT.S.W   F12, F12
  1B0:  MUL.S     F12, F12, F26
  1B4:  NOP
  1B8:  JAL       ~Func:sin_rad
  1BC:  DIV.S     F12, F12, F24
  1C0:  MUL.S     F0, F28, F0
  1C4:  NOP
  1C8:  LW        V0, A8 (S0)
  1CC:  SLL       V0, V0, 1
  1D0:  MTC1      V0, F12
  1D4:  NOP
  1D8:  CVT.S.W   F12, F12
  1DC:  MUL.S     F12, F12, F26
  1E0:  NOP
  1E4:  CVT.D.S   F0, F0
  1E8:  ADD.D     F20, F20, F0
  1EC:  DIV.S     F12, F12, F24
  1F0:  CVT.S.D   F20, F20
  1F4:  JAL       ~Func:sin_rad
  1F8:  SWC1      F20, 10 (SP)
  1FC:  LWC1      F12, A8 (S0)
  200:  CVT.S.W   F12, F12
  204:  MUL.S     F12, F12, F26
  208:  NOP
  20C:  LIF       F2, 90.0
  214:  NOP
  218:  MUL.S     F0, F0, F2
  21C:  NOP
  220:  LWC1      F4, 14 (SP)
  224:  ADD.S     F4, F4, F0
  228:  DIV.S     F12, F12, F24
  22C:  JAL       ~Func:sin_rad
  230:  SWC1      F4, 14 (SP)
  234:  LWC1      F12, A8 (S0)
  238:  CVT.S.W   F12, F12
  23C:  MUL.S     F12, F12, F26
  240:  NOP
  244:  CVT.D.S   F0, F0
  248:  SUB.D     F22, F22, F0
  24C:  CVT.D.S   F20, F30
  250:  MUL.D     F20, F20, F22
  254:  NOP
  258:  JAL       ~Func:sin_rad
  25C:  DIV.S     F12, F12, F24
  260:  LWC1      F4, 18 (SP)
  264:  MUL.S     F0, F4, F0
  268:  NOP
  26C:  CVT.D.S   F0, F0
  270:  ADD.D     F20, F20, F0
  274:  BEQ       R0, R0, .o3F0
  278:  LI        V0, 2D
        .o27C
  27C:  LW        V0, A8 (S0)
  280:  LW        V1, A4 (S0)
  284:  ADDU      V0, V0, V1
  288:  SW        V0, A8 (S0)
  28C:  SLTI      V0, V0, 5B
  290:  BNE       V0, R0, .o29C
  294:  LI        V0, 5A
  298:  SW        V0, A8 (S0)
        .o29C
  29C:  LWC1      F4, 90 (S0)
  2A0:  CVT.S.W   F4, F4
  2A4:  SWC1      F4, 10 (SP)
  2A8:  LWC1      F4, 94 (S0)
  2AC:  CVT.S.W   F4, F4
  2B0:  SWC1      F4, 14 (SP)
  2B4:  LWC1      F12, A8 (S0)
  2B8:  CVT.S.W   F12, F12
  2BC:  LIF       F26, 6.28318
  2C8:  LWC1      F30, 98 (S0)
  2CC:  CVT.S.W   F30, F30
  2D0:  MUL.S     F12, F12, F26
  2D4:  NOP
  2D8:  LWC1      F28, 9C (S0)
  2DC:  CVT.S.W   F28, F28
  2E0:  LIF       F24, 360.0
  2E8:  LWC1      F4, A0 (S0)
  2EC:  CVT.S.W   F4, F4
  2F0:  SWC1      F4, 18 (SP)
  2F4:  JAL       ~Func:sin_rad
  2F8:  DIV.S     F12, F12, F24
  2FC:  CVT.D.S   F0, F0
  300:  LIF       F23, 1.875
  308:  MTC1      R0, F22
  30C:  LWC1      F4, 10 (SP)
  310:  SUB.D     F0, F22, F0
  314:  CVT.D.S   F20, F4
  318:  MUL.D     F20, F20, F0
  31C:  NOP
  320:  LWC1      F12, A8 (S0)
  324:  CVT.S.W   F12, F12
  328:  MUL.S     F12, F12, F26
  32C:  NOP
  330:  JAL       ~Func:sin_rad
  334:  DIV.S     F12, F12, F24
  338:  MUL.S     F0, F28, F0
  33C:  NOP
  340:  LW        V0, A8 (S0)
  344:  SLL       V0, V0, 1
  348:  MTC1      V0, F12
  34C:  NOP
  350:  CVT.S.W   F12, F12
  354:  MUL.S     F12, F12, F26
  358:  NOP
  35C:  CVT.D.S   F0, F0
  360:  ADD.D     F20, F20, F0
  364:  DIV.S     F12, F12, F24
  368:  CVT.S.D   F20, F20
  36C:  JAL       ~Func:sin_rad
  370:  SWC1      F20, 10 (SP)
  374:  LWC1      F12, A8 (S0)
  378:  CVT.S.W   F12, F12
  37C:  MUL.S     F12, F12, F26
  380:  NOP
  384:  LIF       F2, 90.0
  38C:  NOP
  390:  MUL.S     F0, F0, F2
  394:  NOP
  398:  LWC1      F4, 14 (SP)
  39C:  ADD.S     F4, F4, F0
  3A0:  DIV.S     F12, F12, F24
  3A4:  JAL       ~Func:sin_rad
  3A8:  SWC1      F4, 14 (SP)
  3AC:  LWC1      F12, A8 (S0)
  3B0:  CVT.S.W   F12, F12
  3B4:  MUL.S     F12, F12, F26
  3B8:  NOP
  3BC:  CVT.D.S   F0, F0
  3C0:  SUB.D     F22, F22, F0
  3C4:  CVT.D.S   F20, F30
  3C8:  MUL.D     F20, F20, F22
  3CC:  NOP
  3D0:  JAL       ~Func:sin_rad
  3D4:  DIV.S     F12, F12, F24
  3D8:  LWC1      F4, 18 (SP)
  3DC:  MUL.S     F0, F4, F0
  3E0:  NOP
  3E4:  CVT.D.S   F0, F0
  3E8:  ADD.D     F20, F20, F0
  3EC:  LI        V0, 5A
        .o3F0
  3F0:  LW        V1, A8 (S0)
  3F4:  BNE       V1, V0, .o400
  3F8:  CVT.S.D   F30, F20
  3FC:  SW        S1, B0 (S0)
        .o400
  400:  LWC1      F4, 10 (SP)
  404:  TRUNC.W.S F4, F4
  408:  SWC1      F4, 84 (S0)
  40C:  LWC1      F4, 14 (SP)
  410:  TRUNC.W.S F4, F4
  414:  SWC1      F4, 88 (S0)
  418:  TRUNC.W.S F4, F30
  41C:  SWC1      F4, 8C (S0)
  420:  LW        RA, 28 (SP)
  424:  LW        S1, 24 (SP)
  428:  LW        S0, 20 (SP)
  42C:  LDC1      F30, 58 (SP)
  430:  LDC1      F28, 50 (SP)
  434:  LDC1      F26, 48 (SP)
  438:  LDC1      F24, 40 (SP)
  43C:  LDC1      F22, 38 (SP)
  440:  LDC1      F20, 30 (SP)
  444:  LI        V0, 2
  448:  JR        RA
  44C:  ADDIU     SP, SP, 60
}

#new:Function $Function_80219E10
{
    0:  ADDIU     SP, SP, FFE8
    4:  SW        S0, 10 (SP)
    8:  COPY      S0, A0
    C:  SW        RA, 14 (SP)
   10:  LW        V1, A8 (S0)
   14:  LW        V0, 88 (S0)
   18:  ADDU      V1, V1, V0
   1C:  BGEZ      V1, .o30
   20:  SW        V1, A8 (S0)
   24:  LUI       V0, 2
   28:  BEQ       R0, R0, .o40
   2C:  ADDU      V0, V1, V0
        .o30
   30:  LUI       A0, 2
   34:  SLT       V0, A0, V1
   38:  BEQ       V0, R0, .o44
   3C:  SUBU      V0, V1, A0
        .o40
   40:  SW        V0, A8 (S0)
        .o44
   44:  LW        V1, AC (S0)
   48:  LW        V0, 8C (S0)
   4C:  ADDU      V1, V1, V0
   50:  BGEZ      V1, .o64
   54:  SW        V1, AC (S0)
   58:  LUI       V0, 2
   5C:  BEQ       R0, R0, .o74
   60:  ADDU      V0, V1, V0
        .o64
   64:  LUI       A0, 2
   68:  SLT       V0, A0, V1
   6C:  BEQ       V0, R0, .o78
   70:  SUBU      V0, V1, A0
        .o74
   74:  SW        V0, AC (S0)
        .o78
   78:  LW        V1, B0 (S0)
   7C:  LW        V0, 90 (S0)
   80:  ADDU      V1, V1, V0
   84:  BGEZ      V1, .o98
   88:  SW        V1, B0 (S0)
   8C:  LUI       V0, 2
   90:  BEQ       R0, R0, .oA8
   94:  ADDU      V0, V1, V0
        .o98
   98:  LUI       A0, 2
   9C:  SLT       V0, A0, V1
   A0:  BEQ       V0, R0, .oAC
   A4:  SUBU      V0, V1, A0
        .oA8
   A8:  SW        V0, B0 (S0)
        .oAC
   AC:  LW        V1, B4 (S0)
   B0:  LW        V0, 94 (S0)
   B4:  ADDU      V1, V1, V0
   B8:  BGEZ      V1, .oCC
   BC:  SW        V1, B4 (S0)
   C0:  LUI       V0, 2
   C4:  BEQ       R0, R0, .oDC
   C8:  ADDU      V0, V1, V0
        .oCC
   CC:  LUI       A0, 2
   D0:  SLT       V0, A0, V1
   D4:  BEQ       V0, R0, .oE0
   D8:  SUBU      V0, V1, A0
        .oDC
   DC:  SW        V0, B4 (S0)
        .oE0
   E0:  LW        A0, 84 (S0)
   E4:  JAL       ~Func:set_main_pan_u
   E8:  LW        A1, A8 (S0)
   EC:  LW        A0, 84 (S0)
   F0:  JAL       ~Func:set_main_pan_v
   F4:  LW        A1, AC (S0)
   F8:  LW        A0, 84 (S0)
   FC:  JAL       ~Func:set_aux_pan_u
  100:  LW        A1, B0 (S0)
  104:  LW        A0, 84 (S0)
  108:  JAL       ~Func:set_aux_pan_v
  10C:  LW        A1, B4 (S0)
  110:  LW        RA, 14 (SP)
  114:  LW        S0, 10 (SP)
  118:  CLEAR     V0
  11C:  JR        RA
  120:  ADDIU     SP, SP, 18
}

#new:Function $Function_80219F34
{
    0:  ADDIU     SP, SP, FFE8
    4:  SW        S0, 10 (SP)
    8:  COPY      S0, A0
    C:  BEQ       A1, R0, .o24
   10:  SW        RA, 14 (SP)
   14:  SW        R0, 70 (S0)
   18:  SW        R0, 74 (S0)
   1C:  SW        R0, 78 (S0)
   20:  SW        R0, 7C (S0)
        .o24
   24:  LW        V0, 70 (S0)
   28:  BNE       V0, R0, .o64
   2C:  NOP
   30:  LW        V1, A8 (S0)
   34:  LW        V0, 88 (S0)
   38:  ADDU      V1, V1, V0
   3C:  BGEZ      V1, .o50
   40:  SW        V1, A8 (S0)
   44:  LUI       V0, 2
   48:  BEQ       R0, R0, .o60
   4C:  ADDU      V0, V1, V0
        .o50
   50:  LUI       A0, 2
   54:  SLT       V0, A0, V1
   58:  BEQ       V0, R0, .o64
   5C:  SUBU      V0, V1, A0
        .o60
   60:  SW        V0, A8 (S0)
        .o64
   64:  LW        V0, 74 (S0)
   68:  BNE       V0, R0, .oA4
   6C:  NOP
   70:  LW        V1, AC (S0)
   74:  LW        V0, 8C (S0)
   78:  ADDU      V1, V1, V0
   7C:  BGEZ      V1, .o90
   80:  SW        V1, AC (S0)
   84:  LUI       V0, 2
   88:  BEQ       R0, R0, .oA0
   8C:  ADDU      V0, V1, V0
        .o90
   90:  LUI       A0, 2
   94:  SLT       V0, A0, V1
   98:  BEQ       V0, R0, .oA4
   9C:  SUBU      V0, V1, A0
        .oA0
   A0:  SW        V0, AC (S0)
        .oA4
   A4:  LW        V0, 78 (S0)
   A8:  BNE       V0, R0, .oE4
   AC:  NOP
   B0:  LW        V1, B0 (S0)
   B4:  LW        V0, 90 (S0)
   B8:  ADDU      V1, V1, V0
   BC:  BGEZ      V1, .oD0
   C0:  SW        V1, B0 (S0)
   C4:  LUI       V0, 2
   C8:  BEQ       R0, R0, .oE0
   CC:  ADDU      V0, V1, V0
        .oD0
   D0:  LUI       A0, 2
   D4:  SLT       V0, A0, V1
   D8:  BEQ       V0, R0, .oE4
   DC:  SUBU      V0, V1, A0
        .oE0
   E0:  SW        V0, B0 (S0)
        .oE4
   E4:  LW        V0, 7C (S0)
   E8:  BNE       V0, R0, .o124
   EC:  NOP
   F0:  LW        V1, B4 (S0)
   F4:  LW        V0, 94 (S0)
   F8:  ADDU      V1, V1, V0
   FC:  BGEZ      V1, .o110
  100:  SW        V1, B4 (S0)
  104:  LUI       V0, 2
  108:  BEQ       R0, R0, .o120
  10C:  ADDU      V0, V1, V0
        .o110
  110:  LUI       A0, 2
  114:  SLT       V0, A0, V1
  118:  BEQ       V0, R0, .o124
  11C:  SUBU      V0, V1, A0
        .o120
  120:  SW        V0, B4 (S0)
        .o124
  124:  LW        A0, 84 (S0)
  128:  JAL       ~Func:set_main_pan_u
  12C:  LW        A1, A8 (S0)
  130:  LW        A0, 84 (S0)
  134:  JAL       ~Func:set_main_pan_v
  138:  LW        A1, AC (S0)
  13C:  LW        A0, 84 (S0)
  140:  JAL       ~Func:set_aux_pan_u
  144:  LW        A1, B0 (S0)
  148:  LW        A0, 84 (S0)
  14C:  JAL       ~Func:set_aux_pan_v
  150:  LW        A1, B4 (S0)
  154:  LW        V0, 70 (S0)
  158:  LW        V1, 78 (S0)
  15C:  LW        A0, 98 (S0)
  160:  ADDIU     V0, V0, 1
  164:  SW        V0, 70 (S0)
  168:  LW        V0, 74 (S0)
  16C:  ADDIU     V1, V1, 1
  170:  SW        V1, 78 (S0)
  174:  LW        V1, 70 (S0)
  178:  ADDIU     V0, V0, 1
  17C:  SW        V0, 74 (S0)
  180:  LW        V0, 7C (S0)
  184:  SLT       V1, V1, A0
  188:  ADDIU     V0, V0, 1
  18C:  BNE       V1, R0, .o198
  190:  SW        V0, 7C (S0)
  194:  SW        R0, 70 (S0)
        .o198
  198:  LW        V0, 74 (S0)
  19C:  LW        V1, 9C (S0)
  1A0:  SLT       V0, V0, V1
  1A4:  BEQL      V0, R0, .o1AC
  1A8:  SW        R0, 74 (S0)
        .o1AC
  1AC:  LW        V0, 78 (S0)
  1B0:  LW        V1, A0 (S0)
  1B4:  SLT       V0, V0, V1
  1B8:  BEQL      V0, R0, .o1C0
  1BC:  SW        R0, 78 (S0)
        .o1C0
  1C0:  LW        V0, 7C (S0)
  1C4:  LW        V1, A4 (S0)
  1C8:  SLT       V0, V0, V1
  1CC:  BEQL      V0, R0, .o1D4
  1D0:  SW        R0, 7C (S0)
        .o1D4
  1D4:  LW        RA, 14 (SP)
  1D8:  LW        S0, 10 (SP)
  1DC:  CLEAR     V0
  1E0:  JR        RA
  1E4:  ADDIU     SP, SP, 18
}

PADDING: 8021A11C to 8021A120 (0060ABCC to 0060ABD0)
00000000

#new:Script $Script_8021A120
{
    0:  Call  SetAnimation  ( .Actor:Self 00000001 00500000 )
   18:  Call  SetAnimation  ( .Actor:Self 00000001 0050000C )
   30:  Call  GetActorPos   ( .Actor:Self *VarA *VarB *VarC )
   4C:  If  *VarB  >  00000014
   5C:  	Sub   *VarB  00000014
   6C:  Else
   74:  	Set   *VarB  00000000
   84:  EndIf
   8C:  Call  SetActorJumpGravity   ( .Actor:Self *Fixed[0.3] )
   A0:  Call  SetGoalPos    ( .Actor:Self *VarA *VarB *VarC )
   BC:  Call  FallToGoal    ( .Actor:Self  8` )
   D0:  Call  GetActorPos   ( .Actor:Self *Var4 *Var5 *Var6 )
   EC:  Call  PlaySoundAtActor      ( .Actor:Self 000003DC )
  100:  Set   *Var7  *Var4
  110:  Add   *Var7  *Var4
  120:  Add   *Var7  *Var0
  130:  MulF  *Var7  *Fixed[0.33]
  140:  Set   *Var8  *Var5
  150:  Add   *Var8  *Var5
  160:  Add   *Var8  *Var1
  170:  MulF  *Var8  *Fixed[0.33]
  180:  Set   *Var9  *Var6
  190:  Add   *Var9  *Var6
  1A0:  Add   *Var9  *Var2
  1B0:  MulF  *Var9  *Fixed[0.33]
  1C0:  Call  SetActorSpeed ( .Actor:Self *Fixed[3.0] )
  1D4:  Call  SetGoalPos    ( .Actor:Self *Var7 *Var8 *Var9 )
  1F0:  Call  FlyToGoal     ( .Actor:Self *Var3  -2` .Easing:CubicOut )
  20C:  Call  SetAnimation  ( .Actor:Self 00000001 00500000 )
  224:  Call  SetAnimation  ( .Actor:Self 00000001 0050000C )
  23C:  Call  GetActorPos   ( .Actor:Self *VarA *VarB *VarC )
  258:  Sub   *VarB  00000014
  268:  Call  SetGoalPos    ( .Actor:Self *VarA *VarB *VarC )
  284:  Call  SetActorJumpGravity   ( .Actor:Self *Fixed[0.3] )
  298:  Call  FallToGoal    ( .Actor:Self  8` )
  2AC:  Call  PlaySoundAtActor      ( .Actor:Self 000003DC )
  2C0:  Set   *Var7  *Var0
  2D0:  Add   *Var7  *Var0
  2E0:  Add   *Var7  *Var4
  2F0:  MulF  *Var7  *Fixed[0.33]
  300:  Set   *Var8  *Var1
  310:  Add   *Var8  *Var1
  320:  Add   *Var8  *Var5
  330:  MulF  *Var8  *Fixed[0.33]
  340:  Set   *Var9  *Var2
  350:  Add   *Var9  *Var2
  360:  Add   *Var9  *Var6
  370:  MulF  *Var9  *Fixed[0.33]
  380:  Call  SetActorSpeed ( .Actor:Self *Fixed[3.0] )
  394:  Call  SetGoalPos    ( .Actor:Self *Var7 *Var8 *Var9 )
  3B0:  Call  FlyToGoal     ( .Actor:Self *Var3  -2` .Easing:CubicOut )
  3CC:  Call  SetAnimation  ( .Actor:Self 00000001 00500000 )
  3E4:  Call  SetAnimation  ( .Actor:Self 00000001 0050000C )
  3FC:  Call  GetActorPos   ( .Actor:Self *VarA *VarB *VarC )
  418:  Sub   *VarB  00000014
  428:  Call  SetGoalPos    ( .Actor:Self *VarA *VarB *VarC )
  444:  Call  SetActorJumpGravity   ( .Actor:Self *Fixed[0.3] )
  458:  Call  FallToGoal    ( .Actor:Self  8` )
  46C:  Call  PlaySoundAtActor      ( .Actor:Self 000003DC )
  480:  Call  SetActorSpeed ( .Actor:Self *Fixed[3.0] )
  494:  Call  SetGoalPos    ( .Actor:Self *Var0 *Var1 *Var2 )
  4B0:  Call  FlyToGoal     ( .Actor:Self *Var3  -2` .Easing:CubicOut )
  4CC:  Return
  4D4:  End
}

#new:Script $Script_8021A5FC
{
    0:  Call  SetGoalToHome ( .Actor:Self )
   10:  Call  GetGoalPos    ( .Actor:Self *Var0 *Var1 *Var2 )
   2C:  Set   *Var3  0000000C
   3C:  ExecWait  $Script_8021A120
   48:  Return
   50:  End
}

#new:IdleAnimations $IdleAnimations_8021A654
{
	.Status:Normal    00500000
	.Status:Stop      00500000
	.Status:Sleep     00500007
	.Status:Paralyze  00500008
	.Status:Paralyze  00500000
	.Status:Dizzy     00500008
	.Status:Shrink    00500000
	.Status:End
}

#new:IdleAnimations $IdleAnimations_8021A690
{
	.Status:Normal    0050000C
	.Status:Stop      00500000
	.Status:Sleep     00500007
	.Status:Paralyze  00500008
	.Status:Paralyze  00500000
	.Status:Dizzy     00500008
	.Status:Shrink    0050000C
	.Status:End
}

#new:IdleAnimations $IdleAnimations_8021A6CC
{
	.Status:Normal    00500000
	.Status:Stop      00500000
	.Status:Sleep     00500007
	.Status:Paralyze  00500008
	.Status:Paralyze  00500000
	.Status:Dizzy     00500008
	.Status:Shrink    00500000
	.Status:End
}

#new:DefenseTable $DefenseTable_8021A708
{
	.Element:Normal 00000000
	.Element:End
}

#new:StatusTable $StatusTable_8021A714
{
	.Status:Normal      0`
	.Status:Default     0`
	.Status:Sleep      70`
	.Status:Poison      0`
	.Status:Frozen      0`
	.Status:Dizzy      80`
	.Status:Fear        0`
	.Status:Static      0`
	.Status:Paralyze   90`
	.Status:Shrink     90`
	.Status:Stop      100`
	.Status:DefaultTurnMod    0`
	.Status:SleepTurnMod      0`
	.Status:PoisonTurnMod     0`
	.Status:FrozenTurnMod     0`
	.Status:DizzyTurnMod      1`
	.Status:FearTurnMod       0`
	.Status:StaticTurnMod     0`
	.Status:ParalyzeTurnMod  -1`
	.Status:ShrinkTurnMod    -1`
	.Status:StopTurnMod       0`
	.Status:End
}

#new:PartsTable $PartsTable_8021A7C0
{
	00020000 01000000 003200FF $IdleAnimations_8021A654 $DefenseTable_8021A708 00000000 00000000 00000000 00000000
	00800000 02001400 001E00FF 00000000 $DefenseTable_8021A708 00000000 00000000 00DB0000 00000000
}

#new:Actor $Blooper
{
	% stats
	[Index]        C7b
	[Level]        44`b
	[MaxHP]        30`b
	[Coins]         0`b
	[Flags]       00000200
	[StatusTable] $StatusTable_8021A714
	% ai
	[PartsCount]    2`s
	[PartsTable]  $PartsTable_8021A7C0
	[Script]      $Script_Init_8021A830
	% move effectiveness
	[Escape]        0`b
	[Item]          0`b
	[AirLift]       0`b
	[Hurricane]     0`b % Bow's "Spook" as well
	[UpAndAway]     0`b
	[PowerBounce]  90`b
	[SpinSmash]     4`b % weight (0-4)
	% ui positions
	[Size]         57`b  61`b % width height
	[HealthBar]     0`b   0`b % dx dy
	[StatusTurn]    0`b  22`b % dx dy
	[StatusIcon]   15`b  55`b % dx dy
}

#new:Script $Script_Init_8021A830
{
    0:  Call  SetActorScale ( .Actor:Self *Fixed[0.75] *Fixed[0.75] *Fixed[1.0] )
   1C:  Call  ForceHomePos  ( .Actor:Self  90`  45`  -10` )
   38:  Call  HPBarToHome   ( .Actor:Self )
   48:  Call  BindTakeTurn  ( .Actor:Self $Script_TakeTurn_Blooper )
   5C:  Call  BindIdle      ( .Actor:Self $Script_Idle_8021A8C4 )
   70:  Call  BindHandleEvent   ( .Actor:Self $Script_HandleEvent_8021ACFC )
   84:  Return
   8C:  End
}

#new:Script $Script_Idle_8021A8C4
{
    0:  Label  0
    C:  Call  GetStatusFlags    ( .Actor:Self *VarA )
   20:  If  *VarA  &  ~Flags:StatusFlags:Sleep|Paralyze|Dizzy|Stone|Stop % 351000
   30:  	Wait  1`
   3C:  	Goto  0
   48:  EndIf
   50:  Call  SetIdleGoalToHome ( .Actor:Self )
   60:  Call  GetIdleGoal       ( .Actor:Self *Var0 *Var1 *Var2 )
   7C:  Add   *Var1  00000000
   8C:  Call  GetActorPos       ( .Actor:Self *Var3 *Var4 *Var5 )
   A8:  If  *Var4  >=  *Var1
   B8:  	Goto  B
   C4:  EndIf
   CC:  Call  SetIdleAnimations ( .Actor:Self 00000001 $IdleAnimations_8021A690 )
   E4:  Call  SetAnimation      ( .Actor:Self 00000001 00500000 )
   FC:  Wait  9`
  108:  Call  SetAnimation      ( .Actor:Self 00000001 0050000C )
  120:  Call  SetActorIdleJumpGravity   ( .Actor:Self *Fixed[1.0] )
  134:  Call  SetActorIdleSpeed ( .Actor:Self *Fixed[1.0] )
  148:  Call  SetIdleGoal       ( .Actor:Self *Var0 *Var1 *Var2 )
  164:  Call  IdleFlyToGoal     ( .Actor:Self  0`  0` .Easing:SinOut )
  180:  Label  B
  18C:  Call  GetStatusFlags    ( .Actor:Self *VarA )
  1A0:  If  *VarA  &  ~Flags:StatusFlags:Sleep|Paralyze|Dizzy|Stone|Stop % 351000
  1B0:  	Wait  1`
  1BC:  	Goto  0
  1C8:  EndIf
  1D0:  Call  SetIdleGoalToHome ( .Actor:Self )
  1E0:  Call  GetIdleGoal       ( .Actor:Self *Var0 *Var1 *Var2 )
  1FC:  Add   *Var1  0000000A
  20C:  Call  GetActorPos       ( .Actor:Self *Var3 *Var4 *Var5 )
  228:  If  *Var4  >=  *Var1
  238:  	Goto  C
  244:  EndIf
  24C:  Call  SetIdleAnimations ( .Actor:Self 00000001 $IdleAnimations_8021A690 )
  264:  Call  SetAnimation      ( .Actor:Self 00000001 00500000 )
  27C:  Wait  9`
  288:  Call  SetAnimation      ( .Actor:Self 00000001 0050000C )
  2A0:  Call  SetActorIdleJumpGravity   ( .Actor:Self *Fixed[1.0] )
  2B4:  Call  SetActorIdleSpeed ( .Actor:Self *Fixed[1.0] )
  2C8:  Call  SetIdleGoal       ( .Actor:Self *Var0 *Var1 *Var2 )
  2E4:  Call  IdleFlyToGoal     ( .Actor:Self  0`  0` .Easing:SinOut )
  300:  Wait  3`
  30C:  Label  C
  318:  Call  GetStatusFlags    ( .Actor:Self *VarA )
  32C:  If  *VarA  &  ~Flags:StatusFlags:Sleep|Paralyze|Dizzy|Stone|Stop % 351000
  33C:  	Wait  1`
  348:  	Goto  0
  354:  EndIf
  35C:  Call  SetIdleAnimations ( .Actor:Self 00000001 $IdleAnimations_8021A6CC )
  374:  Call  SetIdleGoalToHome ( .Actor:Self )
  384:  Call  GetIdleGoal       ( .Actor:Self *Var0 *Var1 *Var2 )
  3A0:  Add   *Var1  FFFFFFF6
  3B0:  Call  SetActorIdleJumpGravity   ( .Actor:Self *Fixed[0.8] )
  3C4:  Call  SetActorIdleSpeed ( .Actor:Self *Fixed[0.3] )
  3D8:  Call  SetIdleGoal       ( .Actor:Self *Var0 *Var1 *Var2 )
  3F4:  Call  IdleFlyToGoal     ( .Actor:Self  0`  1` .Easing:SinOut )
  410:  Wait  1`
  41C:  Goto  0
  428:  Return
  430:  End
}

#new:Script $Script_HandleEvent_8021ACFC
{
    0:  Call  UseIdleAnimation  ( .Actor:Self .False )
   14:  Call  EnableIdleScript  ( .Actor:Self 00000000 )
   28:  Call  GetLastEvent      ( .Actor:Self *Var0 )
   3C:  Switch  *Var0
   48:  	CaseOR  ==  .Event:HitCombo % 9
   54:  	CaseOR  ==  .Event:Hit % A
   60:  		SetConst  *Var0  00000001
   70:  		SetConst  *Var1  00500004
   80:  		ExecWait  DoNormalHit
   8C:  	EndCaseGroup
   94:  	Case  ==  .Event:Death % 20
   A0:  		SetConst  *Var0  00000001
   B0:  		SetConst  *Var1  00500004
   C0:  		ExecWait  DoNormalHit
   CC:  		SetConst  *Var1  00500004
   DC:  		ExecWait  $Script_8021B13C
   E8:  		Return
   F0:  	Case  ==  .Event:BurnHit % E
   FC:  		Set   *Var0  00000001
  10C:  		Set   *Var1  00500005
  11C:  		Set   *Var2  00500006
  12C:  		ExecWait  DoBurnHit
  138:  	Case  ==  .Event:BurnDeath % 24
  144:  		Set   *Var0  00000001
  154:  		Set   *Var1  00500005
  164:  		Set   *Var2  00500006
  174:  		ExecWait  DoBurnHit
  180:  		SetConst  *Var1  00500006
  190:  		ExecWait  $Script_8021B13C
  19C:  		Return
  1A4:  	Case  ==  .Event:SpinSmashHit % B
  1B0:  		SetConst  *Var0  00000001
  1C0:  		SetConst  *Var1  00500004
  1D0:  		ExecWait  DoSpinSmashHit
  1DC:  	Case  ==  .Event:SpinSmashDeath % 21
  1E8:  		SetConst  *Var0  00000001
  1F8:  		SetConst  *Var1  00500004
  208:  		ExecWait  DoSpinSmashHit
  214:  		SetConst  *Var0  00000001
  224:  		SetConst  *Var1  00500004
  234:  		ExecWait  $Script_8021B13C
  240:  		Return
  248:  	CaseOR  ==  00000017 % 17
  254:  	CaseOR  ==  .Event:Immune % 19
  260:  	CaseOR  ==  .Event:AirLiftFailed % 1F
  26C:  		SetConst  *Var0  00000001
  27C:  		SetConst  *Var1  00500000
  28C:  		ExecWait  DoImmune
  298:  	EndCaseGroup
  2A0:  	Case  ==  .Event:ShockHit % 2F
  2AC:  		SetConst  *Var0  00000001
  2BC:  		SetConst  *Var1  00500004
  2CC:  		ExecWait  DoShockHit
  2D8:  		SetConst  *Var0  00000001
  2E8:  		SetConst  *Var1  00500004
  2F8:  		ExecWait  DoJumpBack
  304:  		ExecWait  $Script_8021A5FC
  310:  	Case  ==  .Event:ShockDeath % 26
  31C:  		SetConst  *Var0  00000001
  32C:  		SetConst  *Var1  00500004
  33C:  		ExecWait  DoShockHit
  348:  		SetConst  *Var0  00000001
  358:  		SetConst  *Var1  00500004
  368:  		ExecWait  DoJumpBack
  374:  		SetConst  *Var0  00000001
  384:  		SetConst  *Var1  00500004
  394:  		ExecWait  $Script_8021B13C
  3A0:  		Return
  3A8:  	Case  ==  .Event:EndFirstStrike % 35
  3B4:  		ExecWait  $Script_8021A5FC
  3C0:  	Case  ==  .Event:RecoverStatus % 31
  3CC:  		SetConst  *Var0  00000001
  3DC:  		SetConst  *Var1  00500000
  3EC:  		ExecWait  DoRecover
  3F8:  	Default
  400:  EndSwitch
  408:  Call  EnableIdleScript  ( .Actor:Self FFFFFFFF )
  41C:  Call  UseIdleAnimation  ( .Actor:Self .True )
  430:  Return
  438:  End
}

#new:Script $Script_8021B13C
{
    0:  SetConst  *Var0  00000001
   10:  ExecWait  DoDeath
   1C:  Return
   24:  End
}

#new:Script $Script_TakeTurn_Blooper
{
    0:  Call  GetStatusFlags    ( .Actor:Self *Var0 )
   14:  If  *Var0  !&  ~Flags:StatusFlags:Shrink % 80000
   24:  	Call  RandInt   ( 00000064 *Var0 )
   38:  	If  *Var0  <  00000032
   48:  		ExecWait  $Script_Tackle
   54:  	Else
   5C:  		ExecWait  $Script_SprayInk
   68:  	EndIf
   70:  Else
   78:  	ExecWait  $Script_Tackle
   84:  EndIf
   8C:  Return
   94:  End
}

#new:Script $Script_Tackle
{
    0:  Call  UseIdleAnimation  ( .Actor:Self .False )
   14:  Call  EnableIdleScript  ( .Actor:Self 00000000 )
   28:  Call  SetTargetActor    ( .Actor:Self .Actor:Player )
   3C:  Call  GetStatusFlags    ( .Actor:Self *Var0 )
   50:  If  *Var0  !&  ~Flags:StatusFlags:Shrink % 80000
   60:  	Call  GetActorPos   ( .Actor:Player *Var0 *Var1 *Var2 )
   7C:  	Add   *Var1  0000005F
   8C:  	Call  UseBattleCamPreset    ( 00000013 )
   9C:  	Call  SetBattleCamTarget    ( *Var0 *Var1 *Var2 )
   B4:  	Call  SetBattleCamZoom      (  400` )
   C4:  	Call  MoveBattleCamOver     (  130` )
   D4:  Else
   DC:  	Call  GetActorPos   ( .Actor:Player *Var0 *Var1 *Var2 )
   F8:  	Add   *Var1  00000048
  108:  	Call  UseBattleCamPreset    ( 00000013 )
  118:  	Call  SetBattleCamTarget    ( *Var0 *Var1 *Var2 )
  130:  	Call  SetBattleCamZoom      (  340` )
  140:  	Call  MoveBattleCamOver     (  130` )
  150:  EndIf
  158:  Call  GetActorPos       ( .Actor:Player *Var0 *Var1 *Var2 )
  174:  Set   *Var1  00000064
  184:  Set   *Var3  0000000F
  194:  ExecWait  $Script_8021A120
  1A0:  Call  PlaySoundAtActor  ( .Actor:Self 000003DD )
  1B4:  Call  EnemyTestTarget   ( .Actor:Self *VarF ~Flags:DamageType:0 00000000 00000001 00000010 )
  1D8:  Switch  *VarF
  1E4:  	CaseOR  ==  .HitResult:Miss % 6
  1F0:  	CaseOR  ==  .HitResult:Lucky % 5
  1FC:  		Thread
  204:  			Set   *Var0  00000000
  214:  			Loop  00000024
  220:  				Add   *Var0  0000001E
  230:  				Call  SetActorYaw   ( .Actor:Self *Var0 )
  244:  				Wait  1`
  250:  			EndLoop
  258:  			Call  SetActorYaw   ( .Actor:Self  0` )
  26C:  		EndThread
  274:  		Call  SetAnimation      ( .Actor:Self 00000001 0050000D )
  28C:  		Call  GetActorPos       ( .Actor:Player *Var0 *Var1 *Var2 )
  2A8:  		Call  SetActorJumpGravity   ( .Actor:Self *Fixed[1.5] )
  2BC:  		Call  SetGoalPos        ( .Actor:Self *Var0 *Var1 *Var2 )
  2D8:  		Call  JumpToGoal        ( .Actor:Self  16` .False .True .False )
  2F8:  		Call  UseBattleCamPreset    ( 00000002 )
  308:  		Call  MoveBattleCamOver (  20` )
  318:  		If  *VarF  ==  .HitResult:Lucky % 5
  328:  			Call  EnemyTestTarget   ( .Actor:Self *VarF ~Flags:DamageType:TriggerLucky 00000000 00000000 00000000 )
  34C:  		EndIf
  354:  		Add   *Var0  0000001E
  364:  		Call  SetGoalPos    ( .Actor:Self *Var0 *Var1 *Var2 )
  380:  		Call  JumpToGoal    ( .Actor:Self  12` .False .True .False )
  3A0:  		Add   *Var0  00000014
  3B0:  		Call  SetGoalPos    ( .Actor:Self *Var0 *Var1 *Var2 )
  3CC:  		Call  JumpToGoal    ( .Actor:Self  8` .False .True .False )
  3EC:  		ExecWait  $Script_8021A5FC
  3F8:  		Call  EnableIdleScript  ( .Actor:Self FFFFFFFF )
  40C:  		Call  UseIdleAnimation  ( .Actor:Self .True )
  420:  		Return
  428:  	EndCaseGroup
  430:  EndSwitch
  438:  Thread
  440:  	Set   *Var0  00000000
  450:  	Loop  00000010
  45C:  		Add   *Var0  0000001E
  46C:  		Call  SetActorYaw   ( .Actor:Self *Var0 )
  480:  		Wait  1`
  48C:  	EndLoop
  494:  	Call  SetActorYaw   ( .Actor:Self  0` )
  4A8:  EndThread
  4B0:  Call  SetAnimation      ( .Actor:Self 00000001 0050000D )
  4C8:  Call  SetActorJumpGravity   ( .Actor:Self *Fixed[1.5] )
  4DC:  Call  GetActorPos       ( .Actor:Player *Var0 *Var1 *Var2 )
  4F8:  Add   *Var1  0000001E
  508:  Call  SetGoalPos        ( .Actor:Self *Var0 *Var1 *Var2 )
  524:  Call  JumpToGoal        ( .Actor:Self  16` .False .True .False )
  544:  Wait  2`
  550:  Call  EnemyDamageTarget ( .Actor:Self *Var0 ~Flags:DamageType:0 00000000 00000000 00000003 00000020 )
  578:  Call  UseBattleCamPreset    ( 00000002 )
  588:  Call  MoveBattleCamOver (  20` )
  598:  Call  GetStatusFlags    ( .Actor:Player *Var0 )
  5AC:  If  *Var0  &  ~Flags:StatusFlags:Stone % 100000
  5BC:  	Call  SetAnimation  ( .Actor:Self 00000001 00500004 )
  5D4:  Else
  5DC:  	Call  SetAnimation  ( .Actor:Self 00000001 00500000 )
  5F4:  EndIf
  5FC:  Call  GetActorPos       ( .Actor:Self *Var0 *Var1 *Var2 )
  618:  Add   *Var0  0000001E
  628:  Sub   *Var1  0000000F
  638:  Call  SetActorJumpGravity   ( .Actor:Self *Fixed[1.2] )
  64C:  Call  SetGoalPos        ( .Actor:Self *Var0 *Var1 *Var2 )
  668:  Call  JumpToGoal        ( .Actor:Self  10` .False .True .False )
  688:  ExecWait  $Script_8021A5FC
  694:  Call  EnableIdleScript  ( .Actor:Self FFFFFFFF )
  6A8:  Call  UseIdleAnimation  ( .Actor:Self .True )
  6BC:  Return
  6C4:  End
}

#new:Script $Script_SprayInk
{
    0:  Call  UseIdleAnimation  ( .Actor:Self .False )
   14:  Call  EnableIdleScript  ( .Actor:Self 00000000 )
   28:  Call  SetTargetActor    ( .Actor:Self .Actor:Player )
   3C:  Call  SetGoalToTarget   ( .Actor:Self )
   4C:  Call  GetGoalPos        ( .Actor:Self *Var0 *Var1 *Var2 )
   68:  Add   *Var0  00000055
   78:  Add   *Var1  0000002D
   88:  Call  SetAnimation      ( .Actor:Self 00000001 00500000 )
   A0:  Call  SetAnimation      ( .Actor:Self 00000001 0050000C )
   B8:  Call  GetActorPos       ( .Actor:Self *VarA *VarB *VarC )
   D4:  If  *VarB  >  0000001E
   E4:  	Sub   *VarB  0000001E
   F4:  Else
   FC:  	Set   *VarB  00000000
  10C:  EndIf
  114:  Call  SetActorJumpGravity   ( .Actor:Self *Fixed[0.3] )
  128:  Call  SetGoalPos    ( .Actor:Self *VarA *VarB *VarC )
  144:  Call  FallToGoal    ( .Actor:Self  8` )
  158:  Thread
  160:  	Call  UseBattleCamPreset    ( 00000013 )
  170:  	Sub   *Var0  0000001E
  180:  	Call  SetBattleCamTarget    ( *Var0 *Var1 *Var2 )
  198:  	Call  SetBattleCamZoom      (  350` )
  1A8:  	Call  MoveBattleCamOver     (  50` )
  1B8:  EndThread
  1C0:  Call  GetActorPos   ( .Actor:Self *Var4 *Var5 *Var6 )
  1DC:  Call  PlaySoundAtActor      ( .Actor:Self 000003DC )
  1F0:  Set   *Var7  *Var4
  200:  Add   *Var7  *Var0
  210:  MulF  *Var7  *Fixed[0.5]
  220:  Set   *Var8  *Var5
  230:  Add   *Var8  *Var1
  240:  MulF  *Var8  *Fixed[0.5]
  250:  Set   *Var9  *Var6
  260:  Add   *Var9  *Var2
  270:  MulF  *Var9  *Fixed[0.5]
  280:  Call  SetActorSpeed ( .Actor:Self *Fixed[3.0] )
  294:  Call  SetGoalPos    ( .Actor:Self *Var7 *Var8 *Var9 )
  2B0:  Call  FlyToGoal     ( .Actor:Self  15`  -2` .Easing:CubicOut )
  2CC:  Call  SetAnimation  ( .Actor:Self 00000001 00500000 )
  2E4:  Call  SetAnimation  ( .Actor:Self 00000001 0050000C )
  2FC:  Call  GetActorPos   ( .Actor:Self *VarA *VarB *VarC )
  318:  Sub   *VarB  00000014
  328:  Call  SetGoalPos    ( .Actor:Self *VarA *VarB *VarC )
  344:  Call  SetActorJumpGravity   ( .Actor:Self *Fixed[0.3] )
  358:  Call  FallToGoal    ( .Actor:Self  8` )
  36C:  Call  PlaySoundAtActor      ( .Actor:Self 000003DC )
  380:  Call  SetActorSpeed ( .Actor:Self *Fixed[3.0] )
  394:  Call  SetGoalPos    ( .Actor:Self *Var0 *Var1 *Var2 )
  3B0:  Call  FlyToGoal     ( .Actor:Self  15`  -2` .Easing:CubicOut )
  3CC:  Call  SetAnimation  ( .Actor:Self 00000001 00500003 )
  3E4:  Call  GetActorPos   ( .Actor:Self *VarA *VarB *VarC )
  400:  Sub   *VarB  0000001E
  410:  Call  SetActorJumpGravity   ( .Actor:Self *Fixed[0.2] )
  424:  Call  SetActorSpeed ( .Actor:Self *Fixed[1.0] )
  438:  Call  SetGoalPos    ( .Actor:Self *VarA *VarB *VarC )
  454:  Call  FlyToGoal     ( .Actor:Self  16`  0` .Easing:Linear )
  470:  Call  UseBattleCamPreset    ( 00000002 )
  480:  Call  MoveBattleCamOver     (  10` )
  490:  Call  SetActorRotationOffset    ( .Actor:Self 00000000 00000028 00000000 )
  4AC:  Call  SetActorRotation      ( .Actor:Self 00000000 00000000 FFFFFFD8 )
  4C8:  Call  PlaySoundAtActor      ( .Actor:Self 000003DE )
  4DC:  Call  GetActorPos   ( .Actor:Self *Var3 *Var4 *Var5 )
  4F8:  Add   *Var3  00000001
  508:  Sub   *Var4  0000001B
  518:  Sub   *Var5  00000003
  528:  Call  GetActorPos   ( .Actor:Player *Var0 *Var1 *Var2 )
  544:  Call  $Function_80218058    ( *Var0 *Var1 *Var2 *Var3 *Var4 *Var5 )
  568:  Call  EnemyTestTarget       ( .Actor:Self *VarF ~Flags:DamageType:NoContact 00000000 00000001 00000010 )
  58C:  Switch  *VarF
  598:  	CaseOR  ==  .HitResult:Miss % 6
  5A4:  	CaseOR  ==  .HitResult:Lucky % 5
  5B0:  		Wait  10`
  5BC:  		If  *VarF  ==  .HitResult:Lucky % 5
  5CC:  			Call  EnemyTestTarget   ( .Actor:Self *VarF ~Flags:DamageType:TriggerLucky 00000000 00000000 00000000 )
  5F0:  		EndIf
  5F8:  		Wait  30`
  604:  		Call  SetAnimation      ( .Actor:Self 00000001 00500000 )
  61C:  		Call  SetActorRotation  ( .Actor:Self 00000000 00000000 00000000 )
  638:  		Call  SetActorRotationOffset    ( .Actor:Self 00000000 00000000 00000000 )
  654:  		ExecWait  $Script_8021A5FC
  660:  		Call  EnableIdleScript  ( .Actor:Self FFFFFFFF )
  674:  		Call  UseIdleAnimation  ( .Actor:Self .True )
  688:  		Return
  690:  	EndCaseGroup
  698:  EndSwitch
  6A0:  Wait  10`
  6AC:  Call  SetGoalToTarget   ( .Actor:Self )
  6BC:  Call  80269EAC  ( 0000001A )
  6CC:  Call  EnemyDamageTarget ( .Actor:Self *VarF ~Flags:DamageType:NoContact 00000000 00000000 00000003 00000020 )
  6F4:  Wait  30`
  700:  Call  SetAnimation      ( .Actor:Self 00000001 00500000 )
  718:  Call  SetActorRotation  ( .Actor:Self 00000000 00000000 00000000 )
  734:  Call  SetActorRotationOffset    ( .Actor:Self 00000000 00000000 00000000 )
  750:  ExecWait  $Script_8021A5FC
  75C:  Call  EnableIdleScript  ( .Actor:Self FFFFFFFF )
  770:  Call  UseIdleAnimation  ( .Actor:Self .True )
  784:  Return
  78C:  End
}

PADDING: 8021C064 to 8021C070 (0060CB14 to 0060CB20)
00000000 00000000 00000000

#new:Script $Script_8021C070
{
    0:  Call  SetAnimation  ( .Actor:Self 00000001 00500000 )
   18:  Call  SetAnimation  ( .Actor:Self 00000001 0050000C )
   30:  Call  GetActorPos   ( .Actor:Self *VarA *VarB *VarC )
   4C:  If  *VarB  >  00000014
   5C:  	Sub   *VarB  00000014
   6C:  Else
   74:  	Set   *VarB  00000000
   84:  EndIf
   8C:  Call  SetActorJumpGravity   ( .Actor:Self *Fixed[0.3] )
   A0:  Call  SetGoalPos    ( .Actor:Self *VarA *VarB *VarC )
   BC:  Call  FallToGoal    ( .Actor:Self  8` )
   D0:  Call  GetActorPos   ( .Actor:Self *Var4 *Var5 *Var6 )
   EC:  Call  PlaySoundAtActor      ( .Actor:Self 000003DC )
  100:  Set   *Var7  *Var4
  110:  Add   *Var7  *Var4
  120:  Add   *Var7  *Var0
  130:  MulF  *Var7  *Fixed[0.33]
  140:  Set   *Var8  *Var5
  150:  Add   *Var8  *Var5
  160:  Add   *Var8  *Var1
  170:  MulF  *Var8  *Fixed[0.33]
  180:  Set   *Var9  *Var6
  190:  Add   *Var9  *Var6
  1A0:  Add   *Var9  *Var2
  1B0:  MulF  *Var9  *Fixed[0.33]
  1C0:  Call  SetActorSpeed ( .Actor:Self *Fixed[3.0] )
  1D4:  Call  SetGoalPos    ( .Actor:Self *Var7 *Var8 *Var9 )
  1F0:  Call  FlyToGoal     ( .Actor:Self *Var3  -2` .Easing:CubicOut )
  20C:  Call  SetAnimation  ( .Actor:Self 00000001 00500000 )
  224:  Call  SetAnimation  ( .Actor:Self 00000001 0050000C )
  23C:  Call  GetActorPos   ( .Actor:Self *VarA *VarB *VarC )
  258:  Sub   *VarB  00000014
  268:  Call  SetGoalPos    ( .Actor:Self *VarA *VarB *VarC )
  284:  Call  SetActorJumpGravity   ( .Actor:Self *Fixed[0.3] )
  298:  Call  FallToGoal    ( .Actor:Self  8` )
  2AC:  Call  PlaySoundAtActor      ( .Actor:Self 000003DC )
  2C0:  Set   *Var7  *Var0
  2D0:  Add   *Var7  *Var0
  2E0:  Add   *Var7  *Var4
  2F0:  MulF  *Var7  *Fixed[0.33]
  300:  Set   *Var8  *Var1
  310:  Add   *Var8  *Var1
  320:  Add   *Var8  *Var5
  330:  MulF  *Var8  *Fixed[0.33]
  340:  Set   *Var9  *Var2
  350:  Add   *Var9  *Var2
  360:  Add   *Var9  *Var6
  370:  MulF  *Var9  *Fixed[0.33]
  380:  Call  SetActorSpeed ( .Actor:Self *Fixed[3.0] )
  394:  Call  SetGoalPos    ( .Actor:Self *Var7 *Var8 *Var9 )
  3B0:  Call  FlyToGoal     ( .Actor:Self *Var3  -2` .Easing:CubicOut )
  3CC:  Call  SetAnimation  ( .Actor:Self 00000001 00500000 )
  3E4:  Call  SetAnimation  ( .Actor:Self 00000001 0050000C )
  3FC:  Call  GetActorPos   ( .Actor:Self *VarA *VarB *VarC )
  418:  Sub   *VarB  00000014
  428:  Call  SetGoalPos    ( .Actor:Self *VarA *VarB *VarC )
  444:  Call  SetActorJumpGravity   ( .Actor:Self *Fixed[0.3] )
  458:  Call  FallToGoal    ( .Actor:Self  8` )
  46C:  Call  PlaySoundAtActor      ( .Actor:Self 000003DC )
  480:  Call  SetActorSpeed ( .Actor:Self *Fixed[3.0] )
  494:  Call  SetGoalPos    ( .Actor:Self *Var0 *Var1 *Var2 )
  4B0:  Call  FlyToGoal     ( .Actor:Self *Var3  -2` .Easing:CubicOut )
  4CC:  Return
  4D4:  End
}

#new:Script $Script_8021C54C
{
    0:  Call  SetGoalToHome ( .Actor:Self )
   10:  Call  GetGoalPos    ( .Actor:Self *Var0 *Var1 *Var2 )
   2C:  Set   *Var3  0000000C
   3C:  ExecWait  $Script_8021C070
   48:  Return
   50:  End
}

#new:IdleAnimations $IdleAnimations_8021C5A4
{
	.Status:Normal    00500000
	.Status:Stop      00500000
	.Status:Sleep     00500007
	.Status:Paralyze  00500008
	.Status:Paralyze  00500000
	.Status:Dizzy     00500008
	.Status:Shrink    00500000
	.Status:End
}

#new:IdleAnimations $IdleAnimations_8021C5E0
{
	.Status:Normal    0050000C
	.Status:Stop      00500000
	.Status:Sleep     00500007
	.Status:Paralyze  00500008
	.Status:Paralyze  00500000
	.Status:Dizzy     00500008
	.Status:Shrink    0050000C
	.Status:End
}

#new:IdleAnimations $IdleAnimations_8021C61C
{
	.Status:Normal    00500000
	.Status:Stop      00500000
	.Status:Sleep     00500007
	.Status:Paralyze  00500008
	.Status:Paralyze  00500000
	.Status:Dizzy     00500008
	.Status:Shrink    00500000
	.Status:End
}

#new:DefenseTable $DefenseTable_8021C658
{
	.Element:Normal 00000000
	.Element:End
}

#new:StatusTable $StatusTable_8021C664
{
	.Status:Normal      0`
	.Status:Default     0`
	.Status:Sleep      50`
	.Status:Poison      0`
	.Status:Frozen      0`
	.Status:Dizzy      60`
	.Status:Fear        0`
	.Status:Static      0`
	.Status:Paralyze   50`
	.Status:Shrink     80`
	.Status:Stop       80`
	.Status:DefaultTurnMod    0`
	.Status:SleepTurnMod     -1`
	.Status:PoisonTurnMod     0`
	.Status:FrozenTurnMod     0`
	.Status:DizzyTurnMod      0`
	.Status:FearTurnMod       0`
	.Status:StaticTurnMod     0`
	.Status:ParalyzeTurnMod  -1`
	.Status:ShrinkTurnMod    -1`
	.Status:StopTurnMod      -1`
	.Status:End
}

#new:StatusTable $StatusTable_8021C710
{
	.Status:Normal      0`
	.Status:Default     0`
	.Status:Sleep      25`
	.Status:Poison      0`
	.Status:Frozen      0`
	.Status:Dizzy      30`
	.Status:Fear        0`
	.Status:Static      0`
	.Status:Paralyze    0`
	.Status:Shrink     70`
	.Status:Stop        0`
	.Status:DefaultTurnMod    0`
	.Status:SleepTurnMod     -1`
	.Status:PoisonTurnMod     0`
	.Status:FrozenTurnMod     0`
	.Status:DizzyTurnMod      0`
	.Status:FearTurnMod       0`
	.Status:StaticTurnMod     0`
	.Status:ParalyzeTurnMod  -1`
	.Status:ShrinkTurnMod    -1`
	.Status:StopTurnMod      -1`
	.Status:End
}

#new:PartsTable $PartsTable_8021C7BC
{
	00020000 01000000 005000FF $IdleAnimations_8021C5A4 $DefenseTable_8021C658 00000000 00000000 00000000 00000000
	00800000 02001400 003C00FF 00000000 $DefenseTable_8021C658 00000000 00000000 00DB0000 00000000
}

#new:Actor $ElectroBlooper
{
	% stats
	[Index]        C8b
	[Level]        50`b
	[MaxHP]        50`b
	[Coins]         0`b
	[Flags]       00000200
	[StatusTable] $StatusTable_8021C664
	% ai
	[PartsCount]    2`s
	[PartsTable]  $PartsTable_8021C7BC
	[Script]      $Script_Init_8021C82C
	% move effectiveness
	[Escape]        0`b
	[Item]          0`b
	[AirLift]       0`b
	[Hurricane]     0`b % Bow's "Spook" as well
	[UpAndAway]     0`b
	[PowerBounce]  85`b
	[SpinSmash]     4`b % weight (0-4)
	% ui positions
	[Size]         95`b 105`b % width height
	[HealthBar]     0`b   0`b % dx dy
	[StatusTurn]    0`b  40`b % dx dy
	[StatusIcon]   25`b  85`b % dx dy
}

#new:Script $Script_Init_8021C82C
{
    0:  Call  ForceHomePos  ( .Actor:Self  90`  45`  -10` )
   1C:  Call  HPBarToHome   ( .Actor:Self )
   2C:  Call  SetActorScale ( .Actor:Self *Fixed[1.25] *Fixed[1.25] *Fixed[1.0] )
   48:  Call  SetActorVar   ( .Actor:Self 00000000 00000000 )
   60:  Call  SetActorVar   ( .Actor:Self 00000001 00000000 )
   78:  Call  SetActorVar   ( .Actor:Self 00000002 00000000 )
   90:  Exec  $Script_UpdateElectictyPosition
   9C:  Call  BindTakeTurn  ( .Actor:Self $Script_TakeTurn_8021D40C )
   B0:  Call  BindIdle      ( .Actor:Self $Script_Idle_8021CAB0 )
   C4:  Call  BindHandleEvent   ( .Actor:Self $Script_HandleEvent_8021CEE8 )
   D8:  Return
   E0:  End
}

#new:Script $Script_UpdateElectictyPosition
{
    0:  Label  0
    C:  Call  ActorExists   ( .Actor:Self *Var0 )
   20:  If  *Var0  ==  .False
   30:  	Return
   38:  EndIf
   40:  Call  GetActorVar   ( .Actor:Self 00000000 *Var0 )
   58:  If  *Var0  !=  00000001
   68:  	Goto  63
   74:  EndIf
   7C:  Call  GetActorVar   ( .Actor:Self 00000001 *Var0 )
   94:  If  *Var0  ==  00000000
   A4:  	Goto  63
   B0:  EndIf
   B8:  Call  GetActorPos       ( .Actor:Self *Var1 *Var2 *Var3 )
   D4:  Call  GetStatusFlags    ( .Actor:Self *Var4 )
   E8:  If  *Var4  !&  ~Flags:StatusFlags:Shrink % 80000
   F8:  	Add   *Var2  0000002D
  108:  	SetF  *Var4  *Fixed[1.6]
  118:  Else
  120:  	Add   *Var2  00000012
  130:  	SetF  *Var4  *Fixed[0.64]
  140:  EndIf
  148:  Call  $Function_80218404    ( *Var0 *Var1 *Var2 *Var3 *Var4 )
  168:  Label  63
  174:  Wait  1`
  180:  Goto  0
  18C:  Return
  194:  End
}

#new:Script $Script_Idle_8021CAB0
{
    0:  Label  0
    C:  Call  GetStatusFlags    ( .Actor:Self *VarA )
   20:  If  *VarA  &  ~Flags:StatusFlags:Sleep|Paralyze|Dizzy|Stone|Stop % 351000
   30:  	Wait  1`
   3C:  	Goto  0
   48:  EndIf
   50:  Call  SetIdleGoalToHome ( .Actor:Self )
   60:  Call  GetIdleGoal       ( .Actor:Self *Var0 *Var1 *Var2 )
   7C:  Add   *Var1  00000000
   8C:  Call  GetActorPos       ( .Actor:Self *Var3 *Var4 *Var5 )
   A8:  If  *Var4  >=  *Var1
   B8:  	Goto  B
   C4:  EndIf
   CC:  Call  SetIdleAnimations ( .Actor:Self 00000001 $IdleAnimations_8021C5E0 )
   E4:  Call  SetAnimation      ( .Actor:Self 00000001 00500000 )
   FC:  Wait  9`
  108:  Call  SetAnimation      ( .Actor:Self 00000001 0050000C )
  120:  Call  SetActorIdleJumpGravity   ( .Actor:Self *Fixed[1.0] )
  134:  Call  SetActorIdleSpeed ( .Actor:Self *Fixed[1.0] )
  148:  Call  SetIdleGoal       ( .Actor:Self *Var0 *Var1 *Var2 )
  164:  Call  IdleFlyToGoal     ( .Actor:Self  0`  0` .Easing:SinOut )
  180:  Label  B
  18C:  Call  GetStatusFlags    ( .Actor:Self *VarA )
  1A0:  If  *VarA  &  ~Flags:StatusFlags:Sleep|Paralyze|Dizzy|Stone|Stop % 351000
  1B0:  	Wait  1`
  1BC:  	Goto  0
  1C8:  EndIf
  1D0:  Call  SetIdleGoalToHome ( .Actor:Self )
  1E0:  Call  GetIdleGoal       ( .Actor:Self *Var0 *Var1 *Var2 )
  1FC:  Add   *Var1  0000000A
  20C:  Call  GetActorPos       ( .Actor:Self *Var3 *Var4 *Var5 )
  228:  If  *Var4  >=  *Var1
  238:  	Goto  C
  244:  EndIf
  24C:  Call  SetIdleAnimations ( .Actor:Self 00000001 $IdleAnimations_8021C5E0 )
  264:  Call  SetAnimation      ( .Actor:Self 00000001 00500000 )
  27C:  Wait  9`
  288:  Call  SetAnimation      ( .Actor:Self 00000001 0050000C )
  2A0:  Call  SetActorIdleJumpGravity   ( .Actor:Self *Fixed[1.0] )
  2B4:  Call  SetActorIdleSpeed ( .Actor:Self *Fixed[1.0] )
  2C8:  Call  SetIdleGoal       ( .Actor:Self *Var0 *Var1 *Var2 )
  2E4:  Call  IdleFlyToGoal     ( .Actor:Self  0`  0` .Easing:SinOut )
  300:  Wait  3`
  30C:  Label  C
  318:  Call  GetStatusFlags    ( .Actor:Self *VarA )
  32C:  If  *VarA  &  ~Flags:StatusFlags:Sleep|Paralyze|Dizzy|Stone|Stop % 351000
  33C:  	Wait  1`
  348:  	Goto  0
  354:  EndIf
  35C:  Call  SetIdleAnimations ( .Actor:Self 00000001 $IdleAnimations_8021C61C )
  374:  Call  SetIdleGoalToHome ( .Actor:Self )
  384:  Call  GetIdleGoal       ( .Actor:Self *Var0 *Var1 *Var2 )
  3A0:  Add   *Var1  FFFFFFF6
  3B0:  Call  SetActorIdleJumpGravity   ( .Actor:Self *Fixed[0.8] )
  3C4:  Call  SetActorIdleSpeed ( .Actor:Self *Fixed[0.3] )
  3D8:  Call  SetIdleGoal       ( .Actor:Self *Var0 *Var1 *Var2 )
  3F4:  Call  IdleFlyToGoal     ( .Actor:Self  0`  1` .Easing:SinOut )
  410:  Wait  1`
  41C:  Goto  0
  428:  Return
  430:  End
}

#new:Script $Script_HandleEvent_8021CEE8
{
    0:  Call  UseIdleAnimation  ( .Actor:Self .False )
   14:  Call  EnableIdleScript  ( .Actor:Self 00000000 )
   28:  Call  GetLastEvent      ( .Actor:Self *Var0 )
   3C:  Switch  *Var0
   48:  	CaseOR  ==  .Event:HitCombo % 9
   54:  	CaseOR  ==  .Event:Hit % A
   60:  		SetConst  *Var0  00000001
   70:  		SetConst  *Var1  00500004
   80:  		ExecWait  DoNormalHit
   8C:  		ExecWait  $Script_8021EE44
   98:  	EndCaseGroup
   A0:  	Case  ==  .Event:Death % 20
   AC:  		SetConst  *Var0  00000001
   BC:  		SetConst  *Var1  00500004
   CC:  		ExecWait  DoNormalHit
   D8:  		ExecWait  $Script_8021EE44
   E4:  		SetConst  *Var1  00500004
   F4:  		ExecWait  $Script_8021D3E0
  100:  		Return
  108:  	Case  ==  .Event:BurnHit % E
  114:  		Set   *Var0  00000001
  124:  		Set   *Var1  00500005
  134:  		Set   *Var2  00500006
  144:  		ExecWait  DoBurnHit
  150:  		ExecWait  $Script_8021EE44
  15C:  	Case  ==  .Event:BurnDeath % 24
  168:  		Set   *Var0  00000001
  178:  		Set   *Var1  00500005
  188:  		Set   *Var2  00500006
  198:  		ExecWait  DoBurnHit
  1A4:  		ExecWait  $Script_8021EE44
  1B0:  		SetConst  *Var1  00500006
  1C0:  		ExecWait  $Script_8021D3E0
  1CC:  		Return
  1D4:  	Case  ==  .Event:SpinSmashHit % B
  1E0:  		SetConst  *Var0  00000001
  1F0:  		SetConst  *Var1  00500004
  200:  		ExecWait  DoSpinSmashHit
  20C:  		ExecWait  $Script_8021EE44
  218:  	Case  ==  .Event:SpinSmashDeath % 21
  224:  		SetConst  *Var0  00000001
  234:  		SetConst  *Var1  00500004
  244:  		ExecWait  DoSpinSmashHit
  250:  		ExecWait  $Script_8021EE44
  25C:  		SetConst  *Var0  00000001
  26C:  		SetConst  *Var1  00500004
  27C:  		ExecWait  $Script_8021D3E0
  288:  		Return
  290:  	CaseOR  ==  00000017 % 17
  29C:  	CaseOR  ==  .Event:Immune % 19
  2A8:  	CaseOR  ==  .Event:AirLiftFailed % 1F
  2B4:  	CaseOR  ==  0000001D % 1D
  2C0:  	CaseOR  ==  0000001E % 1E
  2CC:  		SetConst  *Var0  00000001
  2DC:  		SetConst  *Var1  00500000
  2EC:  		ExecWait  DoImmune
  2F8:  	EndCaseGroup
  300:  	CaseOR  ==  .Event:StarBeam % 13
  30C:  	CaseOR  ==  00000014 % 14
  318:  		ExecWait  $Script_8021EE44
  324:  		SetConst  *Var0  00000001
  334:  		SetConst  *Var1  00500004
  344:  		ExecWait  DoNormalHit
  350:  	EndCaseGroup
  358:  	Case  ==  .Event:ShockHit % 2F
  364:  		SetConst  *Var0  00000001
  374:  		SetConst  *Var1  00500004
  384:  		ExecWait  DoShockHit
  390:  		SetConst  *Var0  00000001
  3A0:  		SetConst  *Var1  00500004
  3B0:  		ExecWait  DoJumpBack
  3BC:  		ExecWait  $Script_8021C54C
  3C8:  	Case  ==  .Event:ShockDeath % 26
  3D4:  		SetConst  *Var0  00000001
  3E4:  		SetConst  *Var1  00500004
  3F4:  		ExecWait  DoShockHit
  400:  		SetConst  *Var0  00000001
  410:  		SetConst  *Var1  00500004
  420:  		ExecWait  DoJumpBack
  42C:  		SetConst  *Var0  00000001
  43C:  		SetConst  *Var1  00500004
  44C:  		ExecWait  $Script_8021D3E0
  458:  		Return
  460:  	Case  ==  .Event:EndFirstStrike % 35
  46C:  		ExecWait  $Script_8021C54C
  478:  	Case  ==  .Event:RecoverStatus % 31
  484:  		SetConst  *Var0  00000001
  494:  		SetConst  *Var1  00500000
  4A4:  		ExecWait  DoRecover
  4B0:  	Default
  4B8:  EndSwitch
  4C0:  Call  EnableIdleScript  ( .Actor:Self FFFFFFFF )
  4D4:  Call  UseIdleAnimation  ( .Actor:Self .True )
  4E8:  Return
  4F0:  End
}

#new:Script $Script_8021D3E0
{
    0:  SetConst  *Var0  00000001
   10:  ExecWait  DoDeath
   1C:  Return
   24:  End
}

#new:Script $Script_TakeTurn_8021D40C
{
    0:  Call  GetActorVar   ( .Actor:Self 00000000 *Var0 )
   18:  If  *Var0  ==  00000001
   28:  	Call  SetActorVar   ( .Actor:Self 00000002 00000000 )
   40:  	ExecWait  $Script_ElectroTackle
   4C:  	Return
   54:  EndIf
   5C:  Call  GetActorVar   ( .Actor:Self 00000002 *Var0 )
   74:  If  *Var0  ==  00000001
   84:  	ExecWait  $Script_Electrify
   90:  	Return
   98:  Else
   A0:  	Call  GetStatusFlags    ( .Actor:Self *Var0 )
   B4:  	If  *Var0  !&  ~Flags:StatusFlags:Shrink % 80000
   C4:  		Call  SetActorVar   ( .Actor:Self 00000002 00000001 )
   DC:  		Call  RandInt       ( 00000064 *Var0 )
   F0:  		If  *Var0  <  00000032
  100:  			ExecWait  $Script_Tackle_ElectroBlooper
  10C:  		Else
  114:  			ExecWait  $Script_SprayInk_ElectroBlooper
  120:  		EndIf
  128:  	Else
  130:  		ExecWait  $Script_Tackle_ElectroBlooper
  13C:  	EndIf
  144:  EndIf
  14C:  Return
  154:  End
}

#new:Script $Script_Electrify
{
    0:  Call  UseIdleAnimation  ( .Actor:Self .False )
   14:  Call  EnableIdleScript  ( .Actor:Self 00000000 )
   28:  Call  GetActorPos       ( .Actor:Self *Var0 *Var1 *Var2 )
   44:  Add   *Var1  00000041
   54:  Call  UseBattleCamPreset    ( 00000013 )
   64:  Call  SetBattleCamTarget    ( *Var0 *Var1 *Var2 )
   7C:  Call  SetBattleCamZoom  (  320` )
   8C:  Call  MoveBattleCamOver (  50` )
   9C:  Wait  20`
   A8:  Call  $Function_802182EC ( )
   B4:  Call  $Function_80218200    ( 00000046 00000050 )
   C8:  Thread
   D0:  	Call  ShakeCam  ( .Cam:Battle 00000000  40` *Fixed[0.3] )
   EC:  EndThread
   F4:  Call  SetAnimation      ( .Actor:Self 00000001 00500009 )
  10C:  Wait  10`
  118:  Call  SetAnimation      ( .Actor:Self 00000001 0050000A )
  130:  Wait  10`
  13C:  Call  SetAnimation      ( .Actor:Self 00000001 0050000B )
  154:  Wait  10`
  160:  ExecWait  $Script_8021EC88
  16C:  Wait  20`
  178:  Call  UseBattleCamPreset    ( 00000002 )
  188:  Call  MoveBattleCamOver (  30` )
  198:  Call  $Function_80218384 ( )
  1A4:  Call  EnableIdleScript  ( .Actor:Self FFFFFFFF )
  1B8:  Call  UseIdleAnimation  ( .Actor:Self .True )
  1CC:  Return
  1D4:  Return
  1DC:  End
}

#new:Script $Script_Tackle_ElectroBlooper
{
    0:  Call  UseIdleAnimation  ( .Actor:Self .False )
   14:  Call  EnableIdleScript  ( .Actor:Self 00000000 )
   28:  Call  SetTargetActor    ( .Actor:Self .Actor:Player )
   3C:  Call  GetStatusFlags    ( .Actor:Self *Var0 )
   50:  If  *Var0  !&  ~Flags:StatusFlags:Shrink % 80000
   60:  	Call  GetActorPos   ( .Actor:Player *Var0 *Var1 *Var2 )
   7C:  	Add   *Var1  00000070
   8C:  	Call  UseBattleCamPreset    ( 00000013 )
   9C:  	Call  SetBattleCamTarget    ( *Var0 *Var1 *Var2 )
   B4:  	Call  SetBattleCamZoom      (  500` )
   C4:  	Call  MoveBattleCamOver     (  130` )
   D4:  Else
   DC:  	Call  GetActorPos   ( .Actor:Player *Var0 *Var1 *Var2 )
   F8:  	Add   *Var1  00000052
  108:  	Call  UseBattleCamPreset    ( 00000013 )
  118:  	Call  SetBattleCamTarget    ( *Var0 *Var1 *Var2 )
  130:  	Call  SetBattleCamZoom      (  385` )
  140:  	Call  MoveBattleCamOver     (  130` )
  150:  EndIf
  158:  Call  GetActorPos       ( .Actor:Player *Var0 *Var1 *Var2 )
  174:  Set   *Var1  00000064
  184:  Set   *Var3  0000000F
  194:  ExecWait  $Script_8021C070
  1A0:  Call  PlaySoundAtActor  ( .Actor:Self 000003DD )
  1B4:  Call  EnemyTestTarget   ( .Actor:Self *VarF ~Flags:DamageType:0 00000000 00000001 00000010 )
  1D8:  Switch  *VarF
  1E4:  	CaseOR  ==  .HitResult:Miss % 6
  1F0:  	CaseOR  ==  .HitResult:Lucky % 5
  1FC:  		Thread
  204:  			Set   *Var0  00000000
  214:  			Loop  00000024
  220:  				Add   *Var0  0000001E
  230:  				Call  SetActorYaw   ( .Actor:Self *Var0 )
  244:  				Wait  1`
  250:  			EndLoop
  258:  			Call  SetActorYaw   ( .Actor:Self  0` )
  26C:  		EndThread
  274:  		Call  SetAnimation      ( .Actor:Self 00000001 0050000D )
  28C:  		Call  GetActorPos       ( .Actor:Player *Var0 *Var1 *Var2 )
  2A8:  		Call  SetActorJumpGravity   ( .Actor:Self *Fixed[1.5] )
  2BC:  		Call  SetGoalPos        ( .Actor:Self *Var0 *Var1 *Var2 )
  2D8:  		Call  JumpToGoal        ( .Actor:Self  16` .False .True .False )
  2F8:  		Call  UseBattleCamPreset    ( 00000002 )
  308:  		Call  MoveBattleCamOver (  20` )
  318:  		If  *VarF  ==  .HitResult:Lucky % 5
  328:  			Call  EnemyTestTarget   ( .Actor:Self *VarF ~Flags:DamageType:TriggerLucky 00000000 00000000 00000000 )
  34C:  		EndIf
  354:  		Add   *Var0  0000001E
  364:  		Call  SetGoalPos    ( .Actor:Self *Var0 *Var1 *Var2 )
  380:  		Call  JumpToGoal    ( .Actor:Self  12` .False .True .False )
  3A0:  		Add   *Var0  00000014
  3B0:  		Call  SetGoalPos    ( .Actor:Self *Var0 *Var1 *Var2 )
  3CC:  		Call  JumpToGoal    ( .Actor:Self  8` .False .True .False )
  3EC:  		ExecWait  $Script_8021C54C
  3F8:  		Call  EnableIdleScript  ( .Actor:Self FFFFFFFF )
  40C:  		Call  UseIdleAnimation  ( .Actor:Self .True )
  420:  		Return
  428:  	EndCaseGroup
  430:  EndSwitch
  438:  Thread
  440:  	Set   *Var0  00000000
  450:  	Loop  00000010
  45C:  		Add   *Var0  0000001E
  46C:  		Call  SetActorYaw   ( .Actor:Self *Var0 )
  480:  		Wait  1`
  48C:  	EndLoop
  494:  	Call  SetActorYaw   ( .Actor:Self  0` )
  4A8:  EndThread
  4B0:  Call  SetAnimation      ( .Actor:Self 00000001 0050000D )
  4C8:  Call  SetActorJumpGravity   ( .Actor:Self *Fixed[1.5] )
  4DC:  Call  GetActorPos       ( .Actor:Player *Var0 *Var1 *Var2 )
  4F8:  Add   *Var1  0000001E
  508:  Call  SetGoalPos        ( .Actor:Self *Var0 *Var1 *Var2 )
  524:  Call  JumpToGoal        ( .Actor:Self  16` .False .True .False )
  544:  Wait  2`
  550:  Call  EnemyDamageTarget ( .Actor:Self *Var0 ~Flags:DamageType:0 00000000 00000000 00000004 00000020 )
  578:  Call  UseBattleCamPreset    ( 00000002 )
  588:  Call  MoveBattleCamOver (  20` )
  598:  Call  GetStatusFlags    ( .Actor:Player *Var0 )
  5AC:  If  *Var0  &  ~Flags:StatusFlags:Stone % 100000
  5BC:  	Call  SetAnimation  ( .Actor:Self 00000001 00500004 )
  5D4:  Else
  5DC:  	Call  SetAnimation  ( .Actor:Self 00000001 00500000 )
  5F4:  EndIf
  5FC:  Call  GetActorPos       ( .Actor:Self *Var0 *Var1 *Var2 )
  618:  Add   *Var0  0000001E
  628:  Sub   *Var1  0000000F
  638:  Call  SetActorJumpGravity   ( .Actor:Self *Fixed[1.2] )
  64C:  Call  SetGoalPos        ( .Actor:Self *Var0 *Var1 *Var2 )
  668:  Call  JumpToGoal        ( .Actor:Self  10` .False .True .False )
  688:  ExecWait  $Script_8021C54C
  694:  Call  EnableIdleScript  ( .Actor:Self FFFFFFFF )
  6A8:  Call  UseIdleAnimation  ( .Actor:Self .True )
  6BC:  Return
  6C4:  End
}

#new:Script $Script_ElectroTackle
{
    0:  Call  UseIdleAnimation  ( .Actor:Self .False )
   14:  Call  EnableIdleScript  ( .Actor:Self 00000000 )
   28:  Call  SetTargetActor    ( .Actor:Self .Actor:Player )
   3C:  Call  GetStatusFlags    ( .Actor:Self *Var0 )
   50:  If  *Var0  !&  ~Flags:StatusFlags:Shrink % 80000
   60:  	Call  GetActorPos   ( .Actor:Player *Var0 *Var1 *Var2 )
   7C:  	Add   *Var1  00000070
   8C:  	Call  UseBattleCamPreset    ( 00000013 )
   9C:  	Call  SetBattleCamTarget    ( *Var0 *Var1 *Var2 )
   B4:  	Call  SetBattleCamZoom      (  500` )
   C4:  	Call  MoveBattleCamOver     (  130` )
   D4:  Else
   DC:  	Call  GetActorPos   ( .Actor:Player *Var0 *Var1 *Var2 )
   F8:  	Add   *Var1  00000052
  108:  	Call  UseBattleCamPreset    ( 00000013 )
  118:  	Call  SetBattleCamTarget    ( *Var0 *Var1 *Var2 )
  130:  	Call  SetBattleCamZoom      (  385` )
  140:  	Call  MoveBattleCamOver     (  130` )
  150:  EndIf
  158:  Call  GetActorPos       ( .Actor:Player *Var0 *Var1 *Var2 )
  174:  Set   *Var1  00000064
  184:  Set   *Var3  0000000F
  194:  ExecWait  $Script_8021C070
  1A0:  Call  EnemyTestTarget   ( .Actor:Self *VarF ~Flags:DamageType:Electric 00000000 00000001 00000010 )
  1C4:  Switch  *VarF
  1D0:  	CaseOR  ==  .HitResult:Miss % 6
  1DC:  	CaseOR  ==  .HitResult:Lucky % 5
  1E8:  		Thread
  1F0:  			Set   *Var0  00000000
  200:  			Loop  00000024
  20C:  				Add   *Var0  0000001E
  21C:  				Call  SetActorYaw   ( .Actor:Self *Var0 )
  230:  				Wait  1`
  23C:  			EndLoop
  244:  			Call  SetActorYaw   ( .Actor:Self  0` )
  258:  		EndThread
  260:  		Call  SetAnimation      ( .Actor:Self 00000001 0050000D )
  278:  		Call  GetActorPos       ( .Actor:Player *Var0 *Var1 *Var2 )
  294:  		Call  SetActorJumpGravity   ( .Actor:Self *Fixed[1.5] )
  2A8:  		Call  SetGoalPos        ( .Actor:Self *Var0 *Var1 *Var2 )
  2C4:  		Call  JumpToGoal        ( .Actor:Self  16` .False .True .False )
  2E4:  		Call  UseBattleCamPreset    ( 00000002 )
  2F4:  		Call  MoveBattleCamOver (  20` )
  304:  		If  *VarF  ==  .HitResult:Lucky % 5
  314:  			Call  EnemyTestTarget   ( .Actor:Self *VarF ~Flags:DamageType:TriggerLucky 00000000 00000000 00000000 )
  338:  		EndIf
  340:  		Add   *Var0  0000001E
  350:  		Call  SetGoalPos    ( .Actor:Self *Var0 *Var1 *Var2 )
  36C:  		Call  JumpToGoal    ( .Actor:Self  12` .False .True .False )
  38C:  		Add   *Var0  00000014
  39C:  		Call  SetGoalPos    ( .Actor:Self *Var0 *Var1 *Var2 )
  3B8:  		Call  JumpToGoal    ( .Actor:Self  8` .False .True .False )
  3D8:  		ExecWait  $Script_8021C54C
  3E4:  		Call  EnableIdleScript  ( .Actor:Self FFFFFFFF )
  3F8:  		Call  UseIdleAnimation  ( .Actor:Self .True )
  40C:  		Return
  414:  	EndCaseGroup
  41C:  EndSwitch
  424:  Thread
  42C:  	Set   *Var0  00000000
  43C:  	Loop  00000010
  448:  		Add   *Var0  0000001E
  458:  		Call  SetActorYaw   ( .Actor:Self *Var0 )
  46C:  		Wait  1`
  478:  	EndLoop
  480:  	Call  SetActorYaw   ( .Actor:Self  0` )
  494:  EndThread
  49C:  Call  SetAnimation  ( .Actor:Self 00000001 0050000D )
  4B4:  Call  SetActorJumpGravity   ( .Actor:Self *Fixed[1.5] )
  4C8:  Call  GetActorPos   ( .Actor:Player *Var0 *Var1 *Var2 )
  4E4:  Add   *Var1  0000001E
  4F4:  Call  SetGoalPos    ( .Actor:Self *Var0 *Var1 *Var2 )
  510:  Call  JumpToGoal    ( .Actor:Self  16` .False .True .False )
  530:  Wait  2`
  53C:  Call  EnemyDamageTarget     ( .Actor:Self *Var0 ~Flags:DamageType:Electric 00000008 00000000 00000006 00000020 )
  564:  If  *VarF  !=  00000007
  574:  	ExecWait  $Script_8021EE44
  580:  EndIf
  588:  Call  UseBattleCamPreset    ( 00000002 )
  598:  Call  MoveBattleCamOver     (  20` )
  5A8:  Call  GetStatusFlags        ( .Actor:Player *Var0 )
  5BC:  If  *Var0  &  ~Flags:StatusFlags:Stone % 100000
  5CC:  	Call  SetAnimation  ( .Actor:Self 00000001 00500004 )
  5E4:  Else
  5EC:  	Call  SetAnimation  ( .Actor:Self 00000001 00500000 )
  604:  EndIf
  60C:  Call  GetActorPos       ( .Actor:Self *Var0 *Var1 *Var2 )
  628:  Add   *Var0  0000001E
  638:  Sub   *Var1  0000000F
  648:  Call  SetActorJumpGravity   ( .Actor:Self *Fixed[1.2] )
  65C:  Call  SetGoalPos        ( .Actor:Self *Var0 *Var1 *Var2 )
  678:  Call  JumpToGoal        ( .Actor:Self  10` .False .True .False )
  698:  ExecWait  $Script_8021C54C
  6A4:  Call  EnableIdleScript  ( .Actor:Self FFFFFFFF )
  6B8:  Call  UseIdleAnimation  ( .Actor:Self .True )
  6CC:  Return
  6D4:  End
}

#new:Script $Script_SprayInk_ElectroBlooper
{
    0:  Call  UseIdleAnimation  ( .Actor:Self .False )
   14:  Call  EnableIdleScript  ( .Actor:Self 00000000 )
   28:  Call  SetTargetActor    ( .Actor:Self .Actor:Player )
   3C:  Call  SetGoalToTarget   ( .Actor:Self )
   4C:  Call  GetGoalPos        ( .Actor:Self *Var0 *Var1 *Var2 )
   68:  Add   *Var0  00000055
   78:  Add   *Var1  0000002D
   88:  Call  SetAnimation      ( .Actor:Self 00000001 00500000 )
   A0:  Call  SetAnimation      ( .Actor:Self 00000001 0050000C )
   B8:  Call  GetActorPos       ( .Actor:Self *VarA *VarB *VarC )
   D4:  If  *VarB  >  0000001E
   E4:  	Sub   *VarB  0000001E
   F4:  Else
   FC:  	Set   *VarB  00000000
  10C:  EndIf
  114:  Call  SetActorJumpGravity   ( .Actor:Self *Fixed[0.3] )
  128:  Call  SetGoalPos    ( .Actor:Self *VarA *VarB *VarC )
  144:  Call  FallToGoal    ( .Actor:Self  8` )
  158:  Thread
  160:  	Call  UseBattleCamPreset    ( 00000013 )
  170:  	Sub   *Var0  0000001E
  180:  	Call  SetBattleCamTarget    ( *Var0 *Var1 *Var2 )
  198:  	Call  SetBattleCamZoom      (  350` )
  1A8:  	Call  MoveBattleCamOver     (  80` )
  1B8:  EndThread
  1C0:  Call  GetActorPos   ( .Actor:Self *Var4 *Var5 *Var6 )
  1DC:  Call  PlaySoundAtActor      ( .Actor:Self 000003DC )
  1F0:  Set   *Var7  *Var4
  200:  Add   *Var7  *Var0
  210:  MulF  *Var7  *Fixed[0.5]
  220:  Set   *Var8  *Var5
  230:  Add   *Var8  *Var1
  240:  MulF  *Var8  *Fixed[0.5]
  250:  Set   *Var9  *Var6
  260:  Add   *Var9  *Var2
  270:  MulF  *Var9  *Fixed[0.5]
  280:  Call  SetActorSpeed ( .Actor:Self *Fixed[3.0] )
  294:  Call  SetGoalPos    ( .Actor:Self *Var7 *Var8 *Var9 )
  2B0:  Call  FlyToGoal     ( .Actor:Self  15`  -2` .Easing:CubicOut )
  2CC:  Call  SetAnimation  ( .Actor:Self 00000001 00500000 )
  2E4:  Call  SetAnimation  ( .Actor:Self 00000001 0050000C )
  2FC:  Call  GetActorPos   ( .Actor:Self *VarA *VarB *VarC )
  318:  Sub   *VarB  00000014
  328:  Call  SetGoalPos    ( .Actor:Self *VarA *VarB *VarC )
  344:  Call  SetActorJumpGravity   ( .Actor:Self *Fixed[0.3] )
  358:  Call  FallToGoal    ( .Actor:Self  8` )
  36C:  Call  PlaySoundAtActor      ( .Actor:Self 000003DC )
  380:  Call  SetActorSpeed ( .Actor:Self *Fixed[3.0] )
  394:  Call  SetGoalPos    ( .Actor:Self *Var0 *Var1 *Var2 )
  3B0:  Call  FlyToGoal     ( .Actor:Self  15`  -2` .Easing:CubicOut )
  3CC:  Call  SetAnimation  ( .Actor:Self 00000001 00500003 )
  3E4:  Call  GetActorPos   ( .Actor:Self *VarA *VarB *VarC )
  400:  Sub   *VarB  0000001E
  410:  Call  SetActorJumpGravity   ( .Actor:Self *Fixed[0.2] )
  424:  Call  SetActorSpeed ( .Actor:Self *Fixed[1.0] )
  438:  Call  SetGoalPos    ( .Actor:Self *VarA *VarB *VarC )
  454:  Call  FlyToGoal     ( .Actor:Self  16`  0` .Easing:Linear )
  470:  Call  UseBattleCamPreset    ( 00000002 )
  480:  Call  MoveBattleCamOver     (  10` )
  490:  Call  SetActorRotationOffset    ( .Actor:Self 00000000 00000028 00000000 )
  4AC:  Call  SetActorRotation      ( .Actor:Self 00000000 00000000 FFFFFFD8 )
  4C8:  Call  PlaySoundAtActor      ( .Actor:Self 000003DE )
  4DC:  Call  GetActorPos   ( .Actor:Self *Var3 *Var4 *Var5 )
  4F8:  Add   *Var3  00000001
  508:  Sub   *Var4  0000001C
  518:  Sub   *Var5  00000003
  528:  Call  GetActorPos   ( .Actor:Player *Var0 *Var1 *Var2 )
  544:  Call  $Function_802184E4    ( *Var0 *Var1 *Var2 *Var3 *Var4 *Var5 )
  568:  Call  EnemyTestTarget       ( .Actor:Self *VarF ~Flags:DamageType:NoContact 00000000 00000001 00000010 )
  58C:  Switch  *VarF
  598:  	CaseOR  ==  .HitResult:Miss % 6
  5A4:  	CaseOR  ==  .HitResult:Lucky % 5
  5B0:  		Wait  10`
  5BC:  		If  *VarF  ==  .HitResult:Lucky % 5
  5CC:  			Call  EnemyTestTarget   ( .Actor:Self *VarF ~Flags:DamageType:TriggerLucky 00000000 00000000 00000000 )
  5F0:  		EndIf
  5F8:  		Wait  30`
  604:  		Call  SetAnimation      ( .Actor:Self 00000001 00500000 )
  61C:  		Call  SetActorRotation  ( .Actor:Self 00000000 00000000 00000000 )
  638:  		Call  SetActorRotationOffset    ( .Actor:Self 00000000 00000000 00000000 )
  654:  		ExecWait  $Script_8021C54C
  660:  		Call  EnableIdleScript  ( .Actor:Self FFFFFFFF )
  674:  		Call  UseIdleAnimation  ( .Actor:Self .True )
  688:  		Return
  690:  	EndCaseGroup
  698:  EndSwitch
  6A0:  Wait  10`
  6AC:  Call  SetGoalToTarget   ( .Actor:Self )
  6BC:  Call  80269EAC  ( 0000001A )
  6CC:  Call  EnemyDamageTarget ( .Actor:Self *VarF ~Flags:DamageType:NoContact 00000000 00000000 00000004 00000020 )
  6F4:  Wait  30`
  700:  Call  SetAnimation      ( .Actor:Self 00000001 00500000 )
  718:  Call  SetActorRotation  ( .Actor:Self 00000000 00000000 00000000 )
  734:  Call  SetActorRotationOffset    ( .Actor:Self 00000000 00000000 00000000 )
  750:  ExecWait  $Script_8021C54C
  75C:  Call  EnableIdleScript  ( .Actor:Self FFFFFFFF )
  770:  Call  UseIdleAnimation  ( .Actor:Self .True )
  784:  Return
  78C:  End
}

#new:Script $Script_8021EC88
{
    0:  Call  GetActorVar   ( .Actor:Self 00000000 *Var0 )
   18:  If  *Var0  !=  00000000
   28:  	Return
   30:  EndIf
   38:  Call  SetActorVar       ( .Actor:Self 00000000 00000001 )
   50:  Call  GetActorPos       ( .Actor:Self *Var0 *Var1 *Var2 )
   6C:  Call  GetStatusFlags    ( .Actor:Self *Var3 )
   80:  If  *Var3  !&  ~Flags:StatusFlags:Shrink % 80000
   90:  	Add   *Var1  0000002D
   A0:  	SetF  *Var3  *Fixed[1.6]
   B0:  Else
   B8:  	Add   *Var1  00000012
   C8:  	SetF  *Var3  *Fixed[0.64]
   D8:  EndIf
   E0:  Call  PlayEffect        ( ~FX:SnakingStatic *Var0 *Var1 *Var2 *Var3 FFFFFFFF 00000000 00000000 00000000 00000000 00000000 00000000 00000000 )
  124:  Call  SetActorVar       ( .Actor:Self 00000001 *VarF )
  13C:  Call  PlaySoundAtActor  ( .Actor:Self 0000035C )
  150:  Call  SetPartEventFlags ( .Actor:Self 00000002 00400080 )
  168:  Call  8026ED20  ( FFFFFF81 00000001 00000001 )
  180:  Call  8026EA7C  ( FFFFFF81 00000001 00000004 )
  198:  Call  SetStatusTable    ( .Actor:Self $StatusTable_8021C710 )
  1AC:  Return
  1B4:  End
}

#new:Script $Script_8021EE44
{
    0:  Call  GetActorVar   ( .Actor:Self 00000000 *Var0 )
   18:  If  *Var0  !=  00000001
   28:  	Return
   30:  EndIf
   38:  Call  SetActorVar   ( .Actor:Self 00000002 00000000 )
   50:  Call  SetActorVar   ( .Actor:Self 00000000 00000000 )
   68:  Call  GetActorVar   ( .Actor:Self 00000001 *Var0 )
   80:  If  *Var0  !=  00000000
   90:  	Call  RemoveEffect  ( *Var0 )
   A0:  	Call  SetActorVar   ( .Actor:Self 00000001 00000000 )
   B8:  EndIf
   C0:  Call  SetPartEventFlags ( .Actor:Self 00000002 00000000 )
   D8:  Call  8026ED20  ( FFFFFF81 00000001 00000000 )
   F0:  Call  SetStatusTable    ( .Actor:Self $StatusTable_8021C664 )
  104:  Return
  10C:  End
}

PADDING: 8021EF58 to 8021EF60 (0060FA08 to 0060FA10)
00000000 00000000

#new:Script $Script_8021EF60
{
    0:  Call  SetAnimation  ( .Actor:Self 00000001 00500000 )
   18:  Call  SetAnimation  ( .Actor:Self 00000001 0050000C )
   30:  Call  GetActorPos   ( .Actor:Self *VarA *VarB *VarC )
   4C:  If  *VarB  >  00000014
   5C:  	Sub   *VarB  00000014
   6C:  Else
   74:  	Set   *VarB  00000000
   84:  EndIf
   8C:  Call  SetActorJumpGravity   ( .Actor:Self *Fixed[0.3] )
   A0:  Call  SetGoalPos    ( .Actor:Self *VarA *VarB *VarC )
   BC:  Call  FallToGoal    ( .Actor:Self  8` )
   D0:  Call  GetActorPos   ( .Actor:Self *Var4 *Var5 *Var6 )
   EC:  Call  PlaySoundAtActor      ( .Actor:Self 000003DC )
  100:  Set   *Var7  *Var4
  110:  Add   *Var7  *Var4
  120:  Add   *Var7  *Var0
  130:  MulF  *Var7  *Fixed[0.33]
  140:  Set   *Var8  *Var5
  150:  Add   *Var8  *Var5
  160:  Add   *Var8  *Var1
  170:  MulF  *Var8  *Fixed[0.33]
  180:  Set   *Var9  *Var6
  190:  Add   *Var9  *Var6
  1A0:  Add   *Var9  *Var2
  1B0:  MulF  *Var9  *Fixed[0.33]
  1C0:  Call  SetActorSpeed ( .Actor:Self *Fixed[3.0] )
  1D4:  Call  SetGoalPos    ( .Actor:Self *Var7 *Var8 *Var9 )
  1F0:  Call  FlyToGoal     ( .Actor:Self *Var3  -2` .Easing:CubicOut )
  20C:  Call  SetAnimation  ( .Actor:Self 00000001 00500000 )
  224:  Call  SetAnimation  ( .Actor:Self 00000001 0050000C )
  23C:  Call  GetActorPos   ( .Actor:Self *VarA *VarB *VarC )
  258:  Sub   *VarB  00000014
  268:  Call  SetGoalPos    ( .Actor:Self *VarA *VarB *VarC )
  284:  Call  SetActorJumpGravity   ( .Actor:Self *Fixed[0.3] )
  298:  Call  FallToGoal    ( .Actor:Self  8` )
  2AC:  Call  PlaySoundAtActor      ( .Actor:Self 000003DC )
  2C0:  Set   *Var7  *Var0
  2D0:  Add   *Var7  *Var0
  2E0:  Add   *Var7  *Var4
  2F0:  MulF  *Var7  *Fixed[0.33]
  300:  Set   *Var8  *Var1
  310:  Add   *Var8  *Var1
  320:  Add   *Var8  *Var5
  330:  MulF  *Var8  *Fixed[0.33]
  340:  Set   *Var9  *Var2
  350:  Add   *Var9  *Var2
  360:  Add   *Var9  *Var6
  370:  MulF  *Var9  *Fixed[0.33]
  380:  Call  SetActorSpeed ( .Actor:Self *Fixed[3.0] )
  394:  Call  SetGoalPos    ( .Actor:Self *Var7 *Var8 *Var9 )
  3B0:  Call  FlyToGoal     ( .Actor:Self *Var3  -2` .Easing:CubicOut )
  3CC:  Call  SetAnimation  ( .Actor:Self 00000001 00500000 )
  3E4:  Call  SetAnimation  ( .Actor:Self 00000001 0050000C )
  3FC:  Call  GetActorPos   ( .Actor:Self *VarA *VarB *VarC )
  418:  Sub   *VarB  00000014
  428:  Call  SetGoalPos    ( .Actor:Self *VarA *VarB *VarC )
  444:  Call  SetActorJumpGravity   ( .Actor:Self *Fixed[0.3] )
  458:  Call  FallToGoal    ( .Actor:Self  8` )
  46C:  Call  PlaySoundAtActor      ( .Actor:Self 000003DC )
  480:  Call  SetActorSpeed ( .Actor:Self *Fixed[3.0] )
  494:  Call  SetGoalPos    ( .Actor:Self *Var0 *Var1 *Var2 )
  4B0:  Call  FlyToGoal     ( .Actor:Self *Var3  -2` .Easing:CubicOut )
  4CC:  Return
  4D4:  End
}

#new:Script $Script_8021F43C
{
    0:  Call  SetGoalToHome ( .Actor:Self )
   10:  Call  GetGoalPos    ( .Actor:Self *Var0 *Var1 *Var2 )
   2C:  Set   *Var3  0000000C
   3C:  ExecWait  $Script_8021EF60
   48:  Return
   50:  End
}

#new:IdleAnimations $IdleAnimations_8021F494
{
	.Status:Normal    00500000
	.Status:Stop      00500000
	.Status:Sleep     00500007
	.Status:Paralyze  00500008
	.Status:Paralyze  00500000
	.Status:Dizzy     00500008
	.Status:Shrink    00500000
	.Status:End
}

#new:IdleAnimations $IdleAnimations_8021F4D0
{
	.Status:Normal    0050000C
	.Status:Stop      00500000
	.Status:Sleep     00500007
	.Status:Paralyze  00500008
	.Status:Paralyze  00500000
	.Status:Dizzy     00500008
	.Status:Shrink    0050000C
	.Status:End
}

#new:IdleAnimations $IdleAnimations_8021F50C
{
	.Status:Normal    00500000
	.Status:Stop      00500000
	.Status:Sleep     00500007
	.Status:Paralyze  00500008
	.Status:Paralyze  00500000
	.Status:Dizzy     00500008
	.Status:Shrink    00500000
	.Status:End
}

#new:DefenseTable $DefenseTable_8021F548
{
	.Element:Normal 00000000
	.Element:End
}

#new:StatusTable $StatusTable_8021F554
{
	.Status:Normal      0`
	.Status:Default     0`
	.Status:Sleep      40`
	.Status:Poison      0`
	.Status:Frozen      0`
	.Status:Dizzy      60`
	.Status:Fear        0`
	.Status:Static      0`
	.Status:Paralyze   50`
	.Status:Shrink     70`
	.Status:Stop       60`
	.Status:DefaultTurnMod    0`
	.Status:SleepTurnMod     -1`
	.Status:PoisonTurnMod     0`
	.Status:FrozenTurnMod     0`
	.Status:DizzyTurnMod      0`
	.Status:FearTurnMod       0`
	.Status:StaticTurnMod     0`
	.Status:ParalyzeTurnMod  -1`
	.Status:ShrinkTurnMod    -1`
	.Status:StopTurnMod      -2`
	.Status:End
}

#new:StatusTable $StatusTable_8021F600
{
	.Status:Normal      0`
	.Status:Default     0`
	.Status:Sleep       0`
	.Status:Poison      0`
	.Status:Frozen      0`
	.Status:Dizzy       0`
	.Status:Fear        0`
	.Status:Static      0`
	.Status:Paralyze    0`
	.Status:Shrink      0`
	.Status:Stop        0`
	.Status:DefaultTurnMod    0`
	.Status:SleepTurnMod     -1`
	.Status:PoisonTurnMod     0`
	.Status:FrozenTurnMod     0`
	.Status:DizzyTurnMod      0`
	.Status:FearTurnMod       0`
	.Status:StaticTurnMod     0`
	.Status:ParalyzeTurnMod  -1`
	.Status:ShrinkTurnMod    -1`
	.Status:StopTurnMod      -2`
	.Status:End
}

#new:PartsTable $PartsTable_8021F6AC
{
	00020000 01000000 005000FF $IdleAnimations_8021F494 $DefenseTable_8021F548 00000000 00000000 00000000 00000000
	00800000 02001400 003C00FF 00000000 $DefenseTable_8021F548 00000000 00000000 00E20000 00000000
}

#new:Actor $SuperBlooper
{
	% stats
	[Index]        CAb
	[Level]        65`b
	[MaxHP]        70`b
	[Coins]         0`b
	[Flags]       00000200
	[StatusTable] $StatusTable_8021F554
	% ai
	[PartsCount]    2`s
	[PartsTable]  $PartsTable_8021F6AC
	[Script]      $Script_Init_8021F71C
	% move effectiveness
	[Escape]        0`b
	[Item]          0`b
	[AirLift]       0`b
	[Hurricane]     0`b % Bow's "Spook" as well
	[UpAndAway]     0`b
	[PowerBounce]  75`b
	[SpinSmash]     4`b % weight (0-4)
	% ui positions
	[Size]        -111`b -88`b % width height
	[HealthBar]     0`b   0`b % dx dy
	[StatusTurn]    0`b  60`b % dx dy
	[StatusIcon]   40`b  80`b % dx dy
}

#new:Script $Script_Init_8021F71C
{
    0:  Call  ForceHomePos  ( .Actor:Self  90`  45`  -10` )
   1C:  Call  HPBarToHome   ( .Actor:Self )
   2C:  Call  SetActorScale ( .Actor:Self *Fixed[2.0] *Fixed[2.0] *Fixed[2.0] )
   48:  Call  SetActorVar   ( .Actor:Self 00000000 00000000 )
   60:  Call  SetActorVar   ( .Actor:Self 00000001 00000000 )
   78:  Call  BindTakeTurn  ( .Actor:Self $Script_TakeTurn_SuperBlooper )
   8C:  Call  BindIdle      ( .Actor:Self $Script_Idle_8021F7E0 )
   A0:  Call  BindHandleEvent   ( .Actor:Self $Script_HandleEvent_8021FC18 )
   B4:  Return
   BC:  End
}

#new:Script $Script_Idle_8021F7E0
{
    0:  Label  0
    C:  Call  GetStatusFlags    ( .Actor:Self *VarA )
   20:  If  *VarA  &  ~Flags:StatusFlags:Sleep|Paralyze|Dizzy|Stone|Stop % 351000
   30:  	Wait  1`
   3C:  	Goto  0
   48:  EndIf
   50:  Call  SetIdleGoalToHome ( .Actor:Self )
   60:  Call  GetIdleGoal       ( .Actor:Self *Var0 *Var1 *Var2 )
   7C:  Add   *Var1  00000000
   8C:  Call  GetActorPos       ( .Actor:Self *Var3 *Var4 *Var5 )
   A8:  If  *Var4  >=  *Var1
   B8:  	Goto  B
   C4:  EndIf
   CC:  Call  SetIdleAnimations ( .Actor:Self 00000001 $IdleAnimations_8021F4D0 )
   E4:  Call  SetAnimation      ( .Actor:Self 00000001 00500000 )
   FC:  Wait  9`
  108:  Call  SetAnimation      ( .Actor:Self 00000001 0050000C )
  120:  Call  SetActorIdleJumpGravity   ( .Actor:Self *Fixed[1.0] )
  134:  Call  SetActorIdleSpeed ( .Actor:Self *Fixed[1.0] )
  148:  Call  SetIdleGoal       ( .Actor:Self *Var0 *Var1 *Var2 )
  164:  Call  IdleFlyToGoal     ( .Actor:Self  0`  0` .Easing:SinOut )
  180:  Label  B
  18C:  Call  GetStatusFlags    ( .Actor:Self *VarA )
  1A0:  If  *VarA  &  ~Flags:StatusFlags:Sleep|Paralyze|Dizzy|Stone|Stop % 351000
  1B0:  	Wait  1`
  1BC:  	Goto  0
  1C8:  EndIf
  1D0:  Call  SetIdleGoalToHome ( .Actor:Self )
  1E0:  Call  GetIdleGoal       ( .Actor:Self *Var0 *Var1 *Var2 )
  1FC:  Add   *Var1  0000000A
  20C:  Call  GetActorPos       ( .Actor:Self *Var3 *Var4 *Var5 )
  228:  If  *Var4  >=  *Var1
  238:  	Goto  C
  244:  EndIf
  24C:  Call  SetIdleAnimations ( .Actor:Self 00000001 $IdleAnimations_8021F4D0 )
  264:  Call  SetAnimation      ( .Actor:Self 00000001 00500000 )
  27C:  Wait  9`
  288:  Call  SetAnimation      ( .Actor:Self 00000001 0050000C )
  2A0:  Call  SetActorIdleJumpGravity   ( .Actor:Self *Fixed[1.0] )
  2B4:  Call  SetActorIdleSpeed ( .Actor:Self *Fixed[1.0] )
  2C8:  Call  SetIdleGoal       ( .Actor:Self *Var0 *Var1 *Var2 )
  2E4:  Call  IdleFlyToGoal     ( .Actor:Self  0`  0` .Easing:SinOut )
  300:  Wait  3`
  30C:  Label  C
  318:  Call  GetStatusFlags    ( .Actor:Self *VarA )
  32C:  If  *VarA  &  ~Flags:StatusFlags:Sleep|Paralyze|Dizzy|Stone|Stop % 351000
  33C:  	Wait  1`
  348:  	Goto  0
  354:  EndIf
  35C:  Call  SetIdleAnimations ( .Actor:Self 00000001 $IdleAnimations_8021F50C )
  374:  Call  SetIdleGoalToHome ( .Actor:Self )
  384:  Call  GetIdleGoal       ( .Actor:Self *Var0 *Var1 *Var2 )
  3A0:  Add   *Var1  FFFFFFF6
  3B0:  Call  SetActorIdleJumpGravity   ( .Actor:Self *Fixed[0.8] )
  3C4:  Call  SetActorIdleSpeed ( .Actor:Self *Fixed[0.3] )
  3D8:  Call  SetIdleGoal       ( .Actor:Self *Var0 *Var1 *Var2 )
  3F4:  Call  IdleFlyToGoal     ( .Actor:Self  0`  1` .Easing:SinOut )
  410:  Wait  1`
  41C:  Goto  0
  428:  Return
  430:  End
}

#new:Script $Script_HandleEvent_8021FC18
{
    0:  Call  UseIdleAnimation  ( .Actor:Self .False )
   14:  Call  EnableIdleScript  ( .Actor:Self 00000000 )
   28:  Call  GetLastEvent      ( .Actor:Self *Var0 )
   3C:  Switch  *Var0
   48:  	CaseOR  ==  .Event:HitCombo % 9
   54:  	CaseOR  ==  .Event:Hit % A
   60:  		SetConst  *Var0  00000001
   70:  		SetConst  *Var1  00500004
   80:  		ExecWait  DoNormalHit
   8C:  	EndCaseGroup
   94:  	Case  ==  .Event:Death % 20
   A0:  		SetConst  *Var0  00000001
   B0:  		SetConst  *Var1  00500004
   C0:  		ExecWait  DoNormalHit
   CC:  		SetConst  *Var0  00000001
   DC:  		SetConst  *Var1  00500004
   EC:  		ExecWait  $Script_80220100
   F8:  		Return
  100:  	Case  ==  .Event:BurnHit % E
  10C:  		Set   *Var0  00000001
  11C:  		Set   *Var1  00500005
  12C:  		Set   *Var2  00500006
  13C:  		ExecWait  DoBurnHit
  148:  	Case  ==  .Event:BurnDeath % 24
  154:  		Set   *Var0  00000001
  164:  		Set   *Var1  00500005
  174:  		Set   *Var2  00500006
  184:  		ExecWait  DoBurnHit
  190:  		SetConst  *Var0  00000001
  1A0:  		SetConst  *Var1  00500006
  1B0:  		ExecWait  $Script_80220100
  1BC:  		Return
  1C4:  	Case  ==  .Event:SpinSmashHit % B
  1D0:  		SetConst  *Var0  00000001
  1E0:  		SetConst  *Var1  00500004
  1F0:  		ExecWait  DoSpinSmashHit
  1FC:  	Case  ==  .Event:SpinSmashDeath % 21
  208:  		SetConst  *Var0  00000001
  218:  		SetConst  *Var1  00500004
  228:  		ExecWait  DoSpinSmashHit
  234:  		SetConst  *Var0  00000001
  244:  		SetConst  *Var1  00500004
  254:  		ExecWait  $Script_80220100
  260:  		Return
  268:  	CaseOR  ==  00000017 % 17
  274:  	CaseOR  ==  .Event:Immune % 19
  280:  	CaseOR  ==  .Event:AirLiftFailed % 1F
  28C:  	CaseOR  ==  0000001D % 1D
  298:  	CaseOR  ==  0000001E % 1E
  2A4:  		SetConst  *Var0  00000001
  2B4:  		SetConst  *Var1  00500000
  2C4:  		ExecWait  DoImmune
  2D0:  	EndCaseGroup
  2D8:  	CaseOR  ==  .Event:StarBeam % 13
  2E4:  	CaseOR  ==  00000014 % 14
  2F0:  		ExecWait  $Script_80221E80
  2FC:  		SetConst  *Var0  00000001
  30C:  		SetConst  *Var1  00500004
  31C:  		ExecWait  DoNormalHit
  328:  	EndCaseGroup
  330:  	Case  ==  .Event:ShockHit % 2F
  33C:  		ExecWait  $Script_80221E80
  348:  		SetConst  *Var0  00000001
  358:  		SetConst  *Var1  00500004
  368:  		ExecWait  DoShockHit
  374:  		SetConst  *Var0  00000001
  384:  		SetConst  *Var1  00500004
  394:  		ExecWait  DoJumpBack
  3A0:  		ExecWait  $Script_8021F43C
  3AC:  	Case  ==  .Event:ShockDeath % 26
  3B8:  		ExecWait  $Script_80221E80
  3C4:  		SetConst  *Var0  00000001
  3D4:  		SetConst  *Var1  00500004
  3E4:  		ExecWait  DoShockHit
  3F0:  		SetConst  *Var0  00000001
  400:  		SetConst  *Var1  00500004
  410:  		ExecWait  DoJumpBack
  41C:  		SetConst  *Var0  00000001
  42C:  		SetConst  *Var1  00500004
  43C:  		ExecWait  $Script_80220100
  448:  		Return
  450:  	Case  ==  .Event:EndFirstStrike % 35
  45C:  		ExecWait  $Script_8021F43C
  468:  	Case  ==  .Event:RecoverStatus % 31
  474:  		SetConst  *Var0  00000001
  484:  		SetConst  *Var1  00500000
  494:  		ExecWait  DoRecover
  4A0:  	Default
  4A8:  EndSwitch
  4B0:  Call  EnableIdleScript  ( .Actor:Self FFFFFFFF )
  4C4:  Call  UseIdleAnimation  ( .Actor:Self .True )
  4D8:  Return
  4E0:  End
}

#new:Script $Script_80220100
{
    0:  ExecWait  DoDeath
    C:  Return
   14:  End
}

#new:Script $Script_TakeTurn_SuperBlooper
{
    0:  Call  GetActorVar   ( .Actor:Self 00000001 *Var0 )
   18:  Switch  *Var0
   24:  	Case  ==  00000003
   30:  		Call  GetActorVar   ( .Actor:Self 00000000 *Var0 )
   48:  		If  *Var0  ==  00000000
   58:  			Call  SetActorVar   ( .Actor:Self 00000001 00000000 )
   70:  		EndIf
   78:  	Case  ==  00000001
   84:  		Call  GetStatusFlags    ( .Actor:Self *Var0 )
   98:  		If  *Var0  &  ~Flags:StatusFlags:Shrink % 80000
   A8:  			Call  SetActorVar   ( .Actor:Self 00000001 00000002 )
   C0:  		Else
   C8:  			Call  ActorExists   ( .Actor:Enemy1 *Var0 )
   DC:  			If  *Var0  !=  .False
   EC:  				Call  ActorExists   ( .Actor:Enemy2 *Var0 )
  100:  				If  *Var0  !=  .False
  110:  					Call  SetActorVar   ( .Actor:Self 00000001 00000002 )
  128:  				EndIf
  130:  			EndIf
  138:  		EndIf
  140:  	Default
  148:  EndSwitch
  150:  Call  GetActorVar   ( .Actor:Self 00000001 *Var0 )
  168:  Switch  *Var0
  174:  	Case  ==  00000001
  180:  		Call  SetActorVar   ( .Actor:Self 00000001 00000002 )
  198:  		ExecWait  $Script_SpawnBabies
  1A4:  		Return
  1AC:  	Case  ==  00000002
  1B8:  		Call  SetActorVar   ( .Actor:Self 00000001 00000003 )
  1D0:  		ExecWait  $Script_Enrage
  1DC:  		Return
  1E4:  	Case  ==  00000003
  1F0:  		Call  SetActorVar   ( .Actor:Self 00000001 00000000 )
  208:  		ExecWait  $Script_EnragedTackle
  214:  		Return
  21C:  	Default
  224:  		Call  GetStatusFlags    ( .Actor:Self *Var0 )
  238:  		If  *Var0  !&  ~Flags:StatusFlags:Shrink % 80000
  248:  			Call  SetActorVar   ( .Actor:Self 00000001 00000001 )
  260:  			Call  RandInt       ( 00000064 *Var0 )
  274:  			If  *Var0  <  00000032
  284:  				ExecWait  $Script_Tackle_SuperBlooper
  290:  			Else
  298:  				ExecWait  $Script_SprayInk_SuperBlooper
  2A4:  			EndIf
  2AC:  		Else
  2B4:  			ExecWait  $Script_Tackle_SuperBlooper
  2C0:  		EndIf
  2C8:  EndSwitch
  2D0:  Return
  2D8:  End
}

#new:Script $Script_Tackle_SuperBlooper
{
    0:  Call  UseIdleAnimation  ( .Actor:Self .False )
   14:  Call  EnableIdleScript  ( .Actor:Self 00000000 )
   28:  Call  SetTargetActor    ( .Actor:Self .Actor:Player )
   3C:  Call  GetActorPos       ( .Actor:Player *Var0 *Var1 *Var2 )
   58:  Set   *Var1  00000064
   68:  Set   *Var3  0000000F
   78:  ExecWait  $Script_8021EF60
   84:  Call  PlaySoundAtActor  ( .Actor:Self 000003DD )
   98:  Call  EnemyTestTarget   ( .Actor:Self *VarF ~Flags:DamageType:0 00000000 00000001 00000010 )
   BC:  Switch  *VarF
   C8:  	CaseOR  ==  .HitResult:Miss % 6
   D4:  	CaseOR  ==  .HitResult:Lucky % 5
   E0:  		Thread
   E8:  			Set   *Var0  00000000
   F8:  			Loop  00000024
  104:  				Add   *Var0  0000001E
  114:  				Call  SetActorYaw   ( .Actor:Self *Var0 )
  128:  				Wait  1`
  134:  			EndLoop
  13C:  			Call  SetActorYaw   ( .Actor:Self  0` )
  150:  		EndThread
  158:  		Call  SetAnimation  ( .Actor:Self 00000001 0050000D )
  170:  		Call  GetActorPos   ( .Actor:Player *Var0 *Var1 *Var2 )
  18C:  		Call  SetActorJumpGravity   ( .Actor:Self *Fixed[1.5] )
  1A0:  		Call  SetGoalPos    ( .Actor:Self *Var0 *Var1 *Var2 )
  1BC:  		Call  JumpToGoal    ( .Actor:Self  16` .False .True .False )
  1DC:  		If  *VarF  ==  .HitResult:Lucky % 5
  1EC:  			Call  EnemyTestTarget   ( .Actor:Self *VarF ~Flags:DamageType:TriggerLucky 00000000 00000000 00000000 )
  210:  		EndIf
  218:  		Add   *Var0  0000001E
  228:  		Call  SetGoalPos    ( .Actor:Self *Var0 *Var1 *Var2 )
  244:  		Call  JumpToGoal    ( .Actor:Self  12` .False .True .False )
  264:  		Add   *Var0  00000014
  274:  		Call  SetGoalPos    ( .Actor:Self *Var0 *Var1 *Var2 )
  290:  		Call  JumpToGoal    ( .Actor:Self  8` .False .True .False )
  2B0:  		ExecWait  $Script_8021F43C
  2BC:  		Call  EnableIdleScript  ( .Actor:Self FFFFFFFF )
  2D0:  		Call  UseIdleAnimation  ( .Actor:Self .True )
  2E4:  		Return
  2EC:  	EndCaseGroup
  2F4:  EndSwitch
  2FC:  Thread
  304:  	Set   *Var0  00000000
  314:  	Loop  00000010
  320:  		Add   *Var0  0000001E
  330:  		Call  SetActorYaw   ( .Actor:Self *Var0 )
  344:  		Wait  1`
  350:  	EndLoop
  358:  	Call  SetActorYaw   ( .Actor:Self  0` )
  36C:  EndThread
  374:  Call  SetAnimation      ( .Actor:Self 00000001 0050000D )
  38C:  Call  SetActorJumpGravity   ( .Actor:Self *Fixed[1.5] )
  3A0:  Call  GetActorPos       ( .Actor:Player *Var0 *Var1 *Var2 )
  3BC:  Add   *Var1  0000001E
  3CC:  Call  SetGoalPos        ( .Actor:Self *Var0 *Var1 *Var2 )
  3E8:  Call  JumpToGoal        ( .Actor:Self  16` .False .True .False )
  408:  Wait  2`
  414:  Call  EnemyDamageTarget ( .Actor:Self *Var0 ~Flags:DamageType:0 00000000 00000000 00000005 00000020 )
  43C:  Call  GetStatusFlags    ( .Actor:Player *Var0 )
  450:  If  *Var0  &  ~Flags:StatusFlags:Stone % 100000
  460:  	Call  SetAnimation  ( .Actor:Self 00000001 00500004 )
  478:  Else
  480:  	Call  SetAnimation  ( .Actor:Self 00000001 00500000 )
  498:  EndIf
  4A0:  Call  GetActorPos       ( .Actor:Self *Var0 *Var1 *Var2 )
  4BC:  Add   *Var0  0000001E
  4CC:  Sub   *Var1  0000000F
  4DC:  Call  SetActorJumpGravity   ( .Actor:Self *Fixed[1.2] )
  4F0:  Call  SetGoalPos        ( .Actor:Self *Var0 *Var1 *Var2 )
  50C:  Call  JumpToGoal        ( .Actor:Self  10` .False .True .False )
  52C:  ExecWait  $Script_8021F43C
  538:  Call  EnableIdleScript  ( .Actor:Self FFFFFFFF )
  54C:  Call  UseIdleAnimation  ( .Actor:Self .True )
  560:  Return
  568:  End
}

#new:Script $Script_SprayInk_SuperBlooper
{
    0:  Call  UseIdleAnimation  ( .Actor:Self .False )
   14:  Call  EnableIdleScript  ( .Actor:Self 00000000 )
   28:  Call  SetTargetActor    ( .Actor:Self .Actor:Player )
   3C:  Call  SetGoalToTarget   ( .Actor:Self )
   4C:  Call  GetGoalPos        ( .Actor:Self *Var0 *Var1 *Var2 )
   68:  Add   *Var0  00000055
   78:  Add   *Var1  0000002D
   88:  Call  SetAnimation      ( .Actor:Self 00000001 00500000 )
   A0:  Call  SetAnimation      ( .Actor:Self 00000001 0050000C )
   B8:  Call  GetActorPos       ( .Actor:Self *VarA *VarB *VarC )
   D4:  If  *VarB  >  0000001E
   E4:  	Sub   *VarB  0000001E
   F4:  Else
   FC:  	Set   *VarB  00000000
  10C:  EndIf
  114:  Call  SetActorJumpGravity   ( .Actor:Self *Fixed[0.3] )
  128:  Call  SetGoalPos    ( .Actor:Self *VarA *VarB *VarC )
  144:  Call  FallToGoal    ( .Actor:Self  8` )
  158:  Call  GetActorPos   ( .Actor:Self *Var4 *Var5 *Var6 )
  174:  Call  PlaySoundAtActor      ( .Actor:Self 000003DC )
  188:  Set   *Var7  *Var4
  198:  Add   *Var7  *Var0
  1A8:  MulF  *Var7  *Fixed[0.5]
  1B8:  Set   *Var8  *Var5
  1C8:  Add   *Var8  *Var1
  1D8:  MulF  *Var8  *Fixed[0.5]
  1E8:  Set   *Var9  *Var6
  1F8:  Add   *Var9  *Var2
  208:  MulF  *Var9  *Fixed[0.5]
  218:  Call  SetActorSpeed ( .Actor:Self *Fixed[3.0] )
  22C:  Call  SetGoalPos    ( .Actor:Self *Var7 *Var8 *Var9 )
  248:  Call  FlyToGoal     ( .Actor:Self  15`  -2` .Easing:CubicOut )
  264:  Call  SetAnimation  ( .Actor:Self 00000001 00500000 )
  27C:  Call  SetAnimation  ( .Actor:Self 00000001 0050000C )
  294:  Call  GetActorPos   ( .Actor:Self *VarA *VarB *VarC )
  2B0:  Sub   *VarB  00000014
  2C0:  Call  SetGoalPos    ( .Actor:Self *VarA *VarB *VarC )
  2DC:  Call  SetActorJumpGravity   ( .Actor:Self *Fixed[0.3] )
  2F0:  Call  FallToGoal    ( .Actor:Self  8` )
  304:  Call  PlaySoundAtActor      ( .Actor:Self 000003DC )
  318:  Call  SetActorSpeed ( .Actor:Self *Fixed[3.0] )
  32C:  Call  SetGoalPos    ( .Actor:Self *Var0 *Var1 *Var2 )
  348:  Call  FlyToGoal     ( .Actor:Self  15`  -2` .Easing:CubicOut )
  364:  Call  SetAnimation  ( .Actor:Self 00000001 00500003 )
  37C:  Call  GetActorPos   ( .Actor:Self *VarA *VarB *VarC )
  398:  Sub   *VarB  0000001E
  3A8:  Call  SetActorJumpGravity   ( .Actor:Self *Fixed[0.2] )
  3BC:  Call  SetActorSpeed ( .Actor:Self *Fixed[1.0] )
  3D0:  Call  SetGoalPos    ( .Actor:Self *VarA *VarB *VarC )
  3EC:  Call  FlyToGoal     ( .Actor:Self  16`  0` .Easing:Linear )
  408:  Call  SetActorRotationOffset    ( .Actor:Self 00000000 00000028 00000000 )
  424:  Call  SetActorRotation      ( .Actor:Self 00000000 00000000 FFFFFFD8 )
  440:  Call  PlaySoundAtActor      ( .Actor:Self 000003DE )
  454:  Call  GetActorPos   ( .Actor:Self *Var3 *Var4 *Var5 )
  470:  Add   *Var3  00000001
  480:  Sub   *Var4  0000001E
  490:  Call  GetActorPos   ( .Actor:Player *Var0 *Var1 *Var2 )
  4AC:  Call  $Function_80218884    ( *Var0 *Var1 *Var2 *Var3 *Var4 *Var5 )
  4D0:  Call  EnemyTestTarget       ( .Actor:Self *VarF ~Flags:DamageType:NoContact 00000000 00000001 00000010 )
  4F4:  Switch  *VarF
  500:  	CaseOR  ==  .HitResult:Miss % 6
  50C:  	CaseOR  ==  .HitResult:Lucky % 5
  518:  		Wait  10`
  524:  		If  *VarF  ==  .HitResult:Lucky % 5
  534:  			Call  EnemyTestTarget   ( .Actor:Self *VarF ~Flags:DamageType:TriggerLucky 00000000 00000000 00000000 )
  558:  		EndIf
  560:  		Wait  30`
  56C:  		Call  SetAnimation      ( .Actor:Self 00000001 00500000 )
  584:  		Call  SetActorRotation  ( .Actor:Self 00000000 00000000 00000000 )
  5A0:  		Call  SetActorRotationOffset    ( .Actor:Self 00000000 00000000 00000000 )
  5BC:  		ExecWait  $Script_8021F43C
  5C8:  		Call  EnableIdleScript  ( .Actor:Self FFFFFFFF )
  5DC:  		Call  UseIdleAnimation  ( .Actor:Self .True )
  5F0:  		Return
  5F8:  	EndCaseGroup
  600:  EndSwitch
  608:  Wait  10`
  614:  Call  SetGoalToTarget   ( .Actor:Self )
  624:  Call  80269EAC  ( 0000001A )
  634:  Call  EnemyDamageTarget ( .Actor:Self *VarF ~Flags:DamageType:NoContact 00000000 00000000 00000005 00000020 )
  65C:  Wait  30`
  668:  Call  SetAnimation      ( .Actor:Self 00000001 00500000 )
  680:  Call  SetActorRotation  ( .Actor:Self 00000000 00000000 00000000 )
  69C:  Call  SetActorRotationOffset    ( .Actor:Self 00000000 00000000 00000000 )
  6B8:  ExecWait  $Script_8021F43C
  6C4:  Call  EnableIdleScript  ( .Actor:Self FFFFFFFF )
  6D8:  Call  UseIdleAnimation  ( .Actor:Self .True )
  6EC:  Return
  6F4:  End
}

#new:Script $Script_SpawnBabies
{
    0:  Call  UseIdleAnimation  ( .Actor:Self .False )
   14:  Call  EnableIdleScript  ( .Actor:Self 00000000 )
   28:  Call  GetActorPos       ( .Actor:Self *Var0 *Var1 *Var2 )
   44:  Call  SetGoalPos        ( .Actor:Self *Var0 *Var1 *Var2 )
   60:  Call  UseBattleCamPreset    ( 00000007 )
   70:  Call  BattleCamTargetActor  ( .Actor:Self )
   80:  Call  SetBattleCamOffsetZ   (  50` )
   90:  Call  SetBattleCamZoom  (  330` )
   A0:  Call  MoveBattleCamOver (  40` )
   B0:  Wait  20`
   BC:  Call  PlaySoundAtActor  ( .Actor:Self .Sound:BigPowerUp )
   D0:  Call  $Function_8021876C ( )
   DC:  Call  $Function_80218680    ( 00000032 00000014 )
   F0:  Thread
   F8:  	Call  ShakeCam  ( .Cam:Battle 00000000  10` *Fixed[0.3] )
  114:  EndThread
  11C:  Call  UseBattleCamPreset    ( 00000007 )
  12C:  Call  BattleCamTargetActor  ( .Actor:Self )
  13C:  Call  SetBattleCamOffsetZ   (  65` )
  14C:  Call  SetBattleCamZoom      (  240` )
  15C:  Call  MoveBattleCamOver     (  15` )
  16C:  Call  SetAnimation  ( .Actor:Self 00000001 00500009 )
  184:  Wait  15`
  190:  Call  $Function_80218680    ( 00000064 00000014 )
  1A4:  Thread
  1AC:  	Call  ShakeCam  ( .Cam:Battle 00000000  10` *Fixed[0.4] )
  1C8:  EndThread
  1D0:  Call  UseBattleCamPreset    ( 00000007 )
  1E0:  Call  BattleCamTargetActor  ( .Actor:Self )
  1F0:  Call  SetBattleCamOffsetZ   (  80` )
  200:  Call  SetBattleCamZoom      (  150` )
  210:  Call  MoveBattleCamOver     (  15` )
  220:  Call  SetAnimation  ( .Actor:Self 00000001 0050000A )
  238:  Wait  15`
  244:  Call  $Function_80218680    ( 00000096 00000014 )
  258:  Thread
  260:  	Call  ShakeCam  ( .Cam:Battle 00000000  10` *Fixed[0.5] )
  27C:  EndThread
  284:  Call  UseBattleCamPreset    ( 00000007 )
  294:  Call  BattleCamTargetActor  ( .Actor:Self )
  2A4:  Call  SetBattleCamOffsetZ   (  95` )
  2B4:  Call  SetBattleCamZoom  (  60` )
  2C4:  Call  MoveBattleCamOver (  15` )
  2D4:  Call  SetAnimation      ( .Actor:Self 00000001 0050000B )
  2EC:  Wait  30`
  2F8:  Call  UseBattleCamPreset    ( 00000002 )
  308:  Call  MoveBattleCamOver (  20` )
  318:  Call  SetAnimation      ( .Actor:Self 00000001 00500003 )
  330:  Wait  10`
  33C:  Call  ActorExists       ( .Actor:Enemy1 *Var1 )
  350:  If  *Var1  ==  .False
  360:  	Call  PlaySoundAtActor  ( .Actor:Self 000003D9 )
  374:  	Call  SummonEnemy       ( $SpecialFormation_80221EFC 00000000 )
  388:  EndIf
  390:  Call  ActorExists   ( .Actor:Enemy2 *Var1 )
  3A4:  If  *Var1  ==  .False
  3B4:  	Call  PlaySoundAtActor  ( .Actor:Self 000003D9 )
  3C8:  	Call  SummonEnemy       ( $SpecialFormation_80221F18 00000000 )
  3DC:  EndIf
  3E4:  Wait  2`
  3F0:  Call  SetAnimation      ( .Actor:Self 00000001 0050000C )
  408:  Call  $Function_80218804 ( )
  414:  Call  EnableIdleScript  ( .Actor:Self FFFFFFFF )
  428:  Call  UseIdleAnimation  ( .Actor:Self .True )
  43C:  Return
  444:  Return
  44C:  End
}

#new:Script $Script_Enrage
{
    0:  Call  UseIdleAnimation  ( .Actor:Self .False )
   14:  Call  EnableIdleScript  ( .Actor:Self 00000000 )
   28:  Call  GetActorPos       ( .Actor:Self *Var0 *Var1 *Var2 )
   44:  Call  SetGoalPos        ( .Actor:Self *Var0 *Var1 *Var2 )
   60:  Call  UseBattleCamPreset    ( 00000007 )
   70:  Call  BattleCamTargetActor  ( .Actor:Self )
   80:  Call  SetBattleCamOffsetZ   (  28` )
   90:  Call  SetBattleCamZoom  (  297` )
   A0:  Call  MoveBattleCamOver (  50` )
   B0:  Wait  20`
   BC:  Call  PlaySoundAtActor  ( .Actor:Self .Sound:BigPowerUp )
   D0:  Call  $Function_8021876C ( )
   DC:  Call  $Function_80218680    ( 00000046 00000050 )
   F0:  Thread
   F8:  	Call  ShakeCam  ( .Cam:Battle 00000000  40` *Fixed[0.3] )
  114:  EndThread
  11C:  Call  SetAnimation      ( .Actor:Self 00000001 00500009 )
  134:  Wait  10`
  140:  Call  SetAnimation      ( .Actor:Self 00000001 0050000A )
  158:  Wait  10`
  164:  Call  SetAnimation      ( .Actor:Self 00000001 0050000B )
  17C:  Wait  10`
  188:  ExecWait  $Script_80221DC4
  194:  Call  UseBattleCamPreset    ( 00000002 )
  1A4:  Call  MoveBattleCamOver (  30` )
  1B4:  Call  $Function_80218804 ( )
  1C0:  Call  EnableIdleScript  ( .Actor:Self FFFFFFFF )
  1D4:  Call  UseIdleAnimation  ( .Actor:Self .True )
  1E8:  Return
  1F0:  Return
  1F8:  End
}

#new:Script $Script_EnragedTackle
{
    0:  Call  UseIdleAnimation  ( .Actor:Self .False )
   14:  Call  EnableIdleScript  ( .Actor:Self 00000000 )
   28:  Call  SetTargetActor    ( .Actor:Self .Actor:Player )
   3C:  Call  GetActorPos       ( .Actor:Player *Var0 *Var1 *Var2 )
   58:  Set   *Var1  00000064
   68:  Set   *Var3  0000000F
   78:  ExecWait  $Script_8021EF60
   84:  Call  PlaySoundAtActor  ( .Actor:Self 000003DD )
   98:  Call  EnemyTestTarget   ( .Actor:Self *VarF ~Flags:DamageType:0 00000000 00000001 00000010 )
   BC:  Switch  *VarF
   C8:  	CaseOR  ==  .HitResult:Miss % 6
   D4:  	CaseOR  ==  .HitResult:Lucky % 5
   E0:  		Thread
   E8:  			Set   *Var0  00000000
   F8:  			Loop  00000024
  104:  				Add   *Var0  0000001E
  114:  				Call  SetActorYaw   ( .Actor:Self *Var0 )
  128:  				Wait  1`
  134:  			EndLoop
  13C:  			Call  SetActorYaw   ( .Actor:Self  0` )
  150:  		EndThread
  158:  		Call  SetAnimation  ( .Actor:Self 00000001 0050000D )
  170:  		Call  GetActorPos   ( .Actor:Player *Var0 *Var1 *Var2 )
  18C:  		Call  SetActorJumpGravity   ( .Actor:Self *Fixed[1.5] )
  1A0:  		Call  SetGoalPos    ( .Actor:Self *Var0 *Var1 *Var2 )
  1BC:  		Call  JumpToGoal    ( .Actor:Self  16` .False .True .False )
  1DC:  		ExecWait  $Script_80221E80
  1E8:  		If  *VarF  ==  00000005
  1F8:  			Call  EnemyTestTarget   ( .Actor:Self *VarF ~Flags:DamageType:TriggerLucky 00000000 00000000 00000000 )
  21C:  		EndIf
  224:  		Add   *Var0  0000001E
  234:  		Call  SetGoalPos    ( .Actor:Self *Var0 *Var1 *Var2 )
  250:  		Call  JumpToGoal    ( .Actor:Self  12` .False .True .False )
  270:  		Add   *Var0  00000014
  280:  		Call  SetGoalPos    ( .Actor:Self *Var0 *Var1 *Var2 )
  29C:  		Call  JumpToGoal    ( .Actor:Self  8` .False .True .False )
  2BC:  		ExecWait  $Script_8021F43C
  2C8:  		Call  EnableIdleScript  ( .Actor:Self FFFFFFFF )
  2DC:  		Call  UseIdleAnimation  ( .Actor:Self .True )
  2F0:  		Return
  2F8:  	EndCaseGroup
  300:  EndSwitch
  308:  Thread
  310:  	Set   *Var0  00000000
  320:  	Loop  00000010
  32C:  		Add   *Var0  0000001E
  33C:  		Call  SetActorYaw   ( .Actor:Self *Var0 )
  350:  		Wait  1`
  35C:  	EndLoop
  364:  	Call  SetActorYaw   ( .Actor:Self  0` )
  378:  EndThread
  380:  Call  SetAnimation  ( .Actor:Self 00000001 0050000D )
  398:  Call  SetActorJumpGravity   ( .Actor:Self *Fixed[1.5] )
  3AC:  Call  GetActorPos   ( .Actor:Player *Var0 *Var1 *Var2 )
  3C8:  Add   *Var1  0000001E
  3D8:  Call  SetGoalPos    ( .Actor:Self *Var0 *Var1 *Var2 )
  3F4:  Call  JumpToGoal    ( .Actor:Self  16` .False .True .False )
  414:  Call  GetStatusFlags        ( .Actor:Player *VarE )
  428:  If  *VarE  &  ~Flags:StatusFlags:Stone % 100000
  438:  	Goto  0
  444:  EndIf
  44C:  Wait  2`
  458:  Call  EnemyDamageTarget ( .Actor:Self *VarF ~Flags:DamageType:0 00000000 00000000 0000000A 00000040 )
  480:  Call  GetPlayerHP       ( *VarE )
  490:  If  *VarE  ==  00000000
  4A0:  	Goto  1
  4AC:  EndIf
  4B4:  Thread
  4BC:  	Set   *Var0  00000000
  4CC:  	Loop  00000014
  4D8:  		Add   *Var0  00000024
  4E8:  		Call  SetActorYaw   ( .Actor:Self *Var0 )
  4FC:  		Wait  1`
  508:  	EndLoop
  510:  	Call  SetActorYaw   ( .Actor:Self  0` )
  524:  EndThread
  52C:  Call  SetActorJumpGravity   ( .Actor:Self *Fixed[0.4] )
  540:  Call  SetGoalPos        ( .Actor:Self *Var0 *Var1 *Var2 )
  55C:  Call  JumpToGoal        ( .Actor:Self  20` .False .True .False )
  57C:  Label  0
  588:  Wait  2`
  594:  Call  EnemyDamageTarget ( .Actor:Self *VarF ~Flags:DamageType:0 00000000 00000000 0000000A 00000020 )
  5BC:  Label  1
  5C8:  Call  GetStatusFlags    ( .Actor:Player *Var0 )
  5DC:  If  *Var0  &  ~Flags:StatusFlags:Stone % 100000
  5EC:  	Call  SetAnimation  ( .Actor:Self 00000001 00500004 )
  604:  Else
  60C:  	Call  SetAnimation  ( .Actor:Self 00000001 00500000 )
  624:  EndIf
  62C:  Call  GetActorPos       ( .Actor:Self *Var0 *Var1 *Var2 )
  648:  Add   *Var0  0000001E
  658:  Sub   *Var1  0000000F
  668:  Call  SetActorJumpGravity   ( .Actor:Self *Fixed[1.2] )
  67C:  Call  SetGoalPos        ( .Actor:Self *Var0 *Var1 *Var2 )
  698:  Call  JumpToGoal        ( .Actor:Self  10` .False .True .False )
  6B8:  ExecWait  $Script_80221E80
  6C4:  ExecWait  $Script_8021F43C
  6D0:  Call  EnableIdleScript  ( .Actor:Self FFFFFFFF )
  6E4:  Call  UseIdleAnimation  ( .Actor:Self .True )
  6F8:  Return
  700:  End
}

#new:Script $Script_80221DC4
{
    0:  Call  SetActorVar   ( .Actor:Self 00000000 00000001 )
   18:  Call  8026ED20      ( FFFFFF81 00000001 00000001 )
   30:  Call  8026EBF8      ( FFFFFF81 00000001 00000000 00000002 00000000 00000006 0000000C 00000006 00000000 00000000 )
   64:  Call  8026EA7C      ( FFFFFF81 00000001 0000000F )
   7C:  Call  SetStatusTable    ( .Actor:Self $StatusTable_8021F600 )
   90:  Call  SetPartEventBits  ( .Actor:Self 00000002 00400000 .True )
   AC:  Return
   B4:  End
}

#new:Script $Script_80221E80
{
    0:  Call  SetActorVar       ( .Actor:Self 00000000 00000000 )
   18:  Call  8026ED20  ( FFFFFF81 00000001 00000000 )
   30:  Call  SetStatusTable    ( .Actor:Self $StatusTable_8021F554 )
   44:  Call  SetPartEventBits  ( .Actor:Self 00000002 00400000 .False )
   60:  Return
   68:  End
}

#new:Vector3D $Vector3D_80221EF0
{
	400` 0` 0`
}

#new:SpecialFormation $SpecialFormation_80221EFC
{
	$BlooperBaby $Vector3D_80221EF0 0000005F 0000001E 00000044 00000000 00000000
}

#new:SpecialFormation $SpecialFormation_80221F18
{
	$BlooperBaby $Vector3D_80221EF0 0000005E 00000086 0000002D 00000000 00000000
}

PADDING: 80221F34 to 80221F40 (006129E4 to 006129F0)
00000000 00000000 00000000

#new:Script $Script_80221F40
{
    0:  Call  SetAnimation  ( .Actor:Self 00000001 00510000 )
   18:  Call  SetAnimation  ( .Actor:Self 00000001 00510001 )
   30:  Call  GetActorPos   ( .Actor:Self *VarA *VarB *VarC )
   4C:  If  *VarB  >  00000014
   5C:  	Sub   *VarB  00000014
   6C:  Else
   74:  	Set   *VarB  00000000
   84:  EndIf
   8C:  Call  SetActorJumpGravity   ( .Actor:Self *Fixed[0.3] )
   A0:  Call  SetGoalPos    ( .Actor:Self *VarA *VarB *VarC )
   BC:  Call  FallToGoal    ( .Actor:Self  8` )
   D0:  Call  GetActorPos   ( .Actor:Self *Var4 *Var5 *Var6 )
   EC:  Call  PlaySoundAtActor      ( .Actor:Self 0000035F )
  100:  Set   *Var7  *Var4
  110:  Add   *Var7  *Var4
  120:  Add   *Var7  *Var0
  130:  MulF  *Var7  *Fixed[0.33]
  140:  Set   *Var8  *Var5
  150:  Add   *Var8  *Var5
  160:  Add   *Var8  *Var1
  170:  MulF  *Var8  *Fixed[0.33]
  180:  Set   *Var9  *Var6
  190:  Add   *Var9  *Var6
  1A0:  Add   *Var9  *Var2
  1B0:  MulF  *Var9  *Fixed[0.33]
  1C0:  Call  SetActorSpeed ( .Actor:Self *Fixed[3.0] )
  1D4:  Call  SetGoalPos    ( .Actor:Self *Var7 *Var8 *Var9 )
  1F0:  Call  FlyToGoal     ( .Actor:Self *Var3  -2` .Easing:CubicOut )
  20C:  Call  SetAnimation  ( .Actor:Self 00000001 00510000 )
  224:  Call  SetAnimation  ( .Actor:Self 00000001 00510001 )
  23C:  Call  GetActorPos   ( .Actor:Self *VarA *VarB *VarC )
  258:  Sub   *VarB  00000014
  268:  Call  SetGoalPos    ( .Actor:Self *VarA *VarB *VarC )
  284:  Call  SetActorJumpGravity   ( .Actor:Self *Fixed[0.3] )
  298:  Call  FallToGoal    ( .Actor:Self  8` )
  2AC:  Call  PlaySoundAtActor      ( .Actor:Self 0000035F )
  2C0:  Set   *Var7  *Var0
  2D0:  Add   *Var7  *Var0
  2E0:  Add   *Var7  *Var4
  2F0:  MulF  *Var7  *Fixed[0.33]
  300:  Set   *Var8  *Var1
  310:  Add   *Var8  *Var1
  320:  Add   *Var8  *Var5
  330:  MulF  *Var8  *Fixed[0.33]
  340:  Set   *Var9  *Var2
  350:  Add   *Var9  *Var2
  360:  Add   *Var9  *Var6
  370:  MulF  *Var9  *Fixed[0.33]
  380:  Call  SetActorSpeed ( .Actor:Self *Fixed[3.0] )
  394:  Call  SetGoalPos    ( .Actor:Self *Var7 *Var8 *Var9 )
  3B0:  Call  FlyToGoal     ( .Actor:Self *Var3  -2` .Easing:CubicOut )
  3CC:  Call  SetAnimation  ( .Actor:Self 00000001 00510000 )
  3E4:  Call  SetAnimation  ( .Actor:Self 00000001 00510001 )
  3FC:  Call  GetActorPos   ( .Actor:Self *VarA *VarB *VarC )
  418:  Sub   *VarB  00000014
  428:  Call  SetGoalPos    ( .Actor:Self *VarA *VarB *VarC )
  444:  Call  SetActorJumpGravity   ( .Actor:Self *Fixed[0.3] )
  458:  Call  FallToGoal    ( .Actor:Self  8` )
  46C:  Call  PlaySoundAtActor      ( .Actor:Self 0000035F )
  480:  Call  SetActorSpeed ( .Actor:Self *Fixed[3.0] )
  494:  Call  SetGoalPos    ( .Actor:Self *Var0 *Var1 *Var2 )
  4B0:  Call  FlyToGoal     ( .Actor:Self *Var3  -2` .Easing:CubicOut )
  4CC:  Return
  4D4:  End
}

#new:Script $Script_8022241C
{
    0:  Call  SetGoalToHome ( .Actor:Self )
   10:  Call  GetGoalPos    ( .Actor:Self *Var0 *Var1 *Var2 )
   2C:  Set   *Var3  0000000C
   3C:  ExecWait  $Script_80221F40
   48:  Return
   50:  End
}

#new:IdleAnimations $IdleAnimations_80222474
{
	.Status:Normal    00510000
	.Status:Stop      00510000
	.Status:Sleep     00510006
	.Status:Paralyze  00510007
	.Status:Paralyze  00510000
	.Status:Dizzy     00510007
	.Status:Shrink    00510000
	.Status:End
}

#new:IdleAnimations $IdleAnimations_802224B0
{
	.Status:Normal    00510001
	.Status:Stop      00510000
	.Status:Sleep     00510006
	.Status:Paralyze  00510007
	.Status:Paralyze  00510000
	.Status:Dizzy     00510007
	.Status:Shrink    00510001
	.Status:End
}

#new:IdleAnimations $IdleAnimations_802224EC
{
	.Status:Normal    00510000
	.Status:Stop      00510000
	.Status:Sleep     00510006
	.Status:Paralyze  00510007
	.Status:Paralyze  00510000
	.Status:Dizzy     00510007
	.Status:Shrink    00510000
	.Status:End
}

#new:DefenseTable $DefenseTable_80222528
{
	.Element:Normal 00000000
	.Element:End
}

#new:StatusTable $StatusTable_80222534
{
	.Status:Normal      0`
	.Status:Default     0`
	.Status:Sleep     100`
	.Status:Poison      0`
	.Status:Frozen      0`
	.Status:Dizzy     100`
	.Status:Fear        0`
	.Status:Static      0`
	.Status:Paralyze  100`
	.Status:Shrink      0`
	.Status:Stop      100`
	.Status:DefaultTurnMod    0`
	.Status:SleepTurnMod     -1`
	.Status:PoisonTurnMod     0`
	.Status:FrozenTurnMod     0`
	.Status:DizzyTurnMod      0`
	.Status:FearTurnMod       0`
	.Status:StaticTurnMod     0`
	.Status:ParalyzeTurnMod  -1`
	.Status:ShrinkTurnMod    -1`
	.Status:StopTurnMod      -2`
	.Status:End
}

#new:PartsTable $PartsTable_802225E0
{
	00020000 01000000 005500FF $IdleAnimations_80222474 $DefenseTable_80222528 00000000 00000000 00000000 00000000
	00800000 02001B00 000000FF 00000000 $DefenseTable_80222528 00000000 00000000 01F30000 00000000
}

#new:Actor $BlooperBaby
{
	% stats
	[Index]        CCb
	[Level]         0`b
	[MaxHP]         6`b
	[Coins]         0`b
	[Flags]       00000200
	[StatusTable] $StatusTable_80222534
	% ai
	[PartsCount]    2`s
	[PartsTable]  $PartsTable_802225E0
	[Script]      $Script_Init_80222650
	% move effectiveness
	[Escape]        0`b
	[Item]          0`b
	[AirLift]       0`b
	[Hurricane]     0`b % Bow's "Spook" as well
	[UpAndAway]     0`b
	[PowerBounce]  95`b
	[SpinSmash]     0`b % weight (0-4)
	% ui positions
	[Size]         28`b  25`b % width height
	[HealthBar]     0`b   0`b % dx dy
	[StatusTurn]  -12`b  20`b % dx dy
	[StatusIcon]   10`b  25`b % dx dy
}

#new:Script $Script_Init_80222650
{
    0:  Call  BindTakeTurn  ( .Actor:Self $Script_TakeTurn_8022319C )
   14:  Call  BindHandleEvent       ( .Actor:Self $Script_HandleEvent_80222CF8 )
   28:  Call  PlaySoundAtActor      ( .Actor:Self 0000035F )
   3C:  Call  $Function_80218A20    ( 00000050 00000014 )
   50:  Call  SetAnimation  ( .Actor:Self 00000001 00510000 )
   68:  Call  SetAnimation  ( .Actor:Self 00000001 00510001 )
   80:  Call  GetActorPos   ( .Actor:Enemy0 *Var0 *Var1 *Var2 )
   9C:  Add   *Var1  0000000A
   AC:  Sub   *Var2  0000000A
   BC:  Call  SetActorPos   ( .Actor:Self *Var0 *Var1 *Var2 )
   D8:  Set   *Var1  00000014
   E8:  Call  SetActorJumpGravity   ( .Actor:Self *Fixed[0.3] )
   FC:  Call  SetActorSpeed ( .Actor:Self *Fixed[0.3] )
  110:  Call  SetGoalPos    ( .Actor:Self *Var0 *Var1 *Var2 )
  12C:  Call  FlyToGoal     ( .Actor:Self  8`  0` .Easing:Linear )
  148:  Call  PlaySoundAtActor      ( .Actor:Self 0000035F )
  15C:  Call  $Function_80218A20    ( 00000050 00000014 )
  170:  Call  GetActorVar   ( .Actor:Self 00000000 *Var0 )
  188:  Call  GetActorVar   ( .Actor:Self 00000001 *Var1 )
  1A0:  Call  GetActorVar   ( .Actor:Self 00000002 *Var2 )
  1B8:  Call  SetGoalPos    ( .Actor:Self *Var0 *Var1 *Var2 )
  1D4:  Call  SetActorSpeed ( .Actor:Self *Fixed[3.0] )
  1E8:  Call  SetGoalPos    ( .Actor:Self *Var0 *Var1 *Var2 )
  204:  Call  FlyToGoal     ( .Actor:Self  12`  -2` .Easing:CubicOut )
  220:  Call  ForceHomePos  ( .Actor:Self *Var0 *Var1 *Var2 )
  23C:  Call  BindIdle      ( .Actor:Self $Script_Idle_802228C0 )
  250:  Call  HPBarToHome   ( .Actor:Self )
  260:  Return
  268:  End
}

#new:Script $Script_Idle_802228C0
{
    0:  Label  0
    C:  Call  GetStatusFlags    ( .Actor:Self *VarA )
   20:  If  *VarA  &  ~Flags:StatusFlags:Sleep|Paralyze|Dizzy|Stone|Stop % 351000
   30:  	Wait  1`
   3C:  	Goto  0
   48:  EndIf
   50:  Call  SetGoalToHome ( .Actor:Self )
   60:  Call  GetGoalPos    ( .Actor:Self *Var0 *Var1 *Var2 )
   7C:  Add   *Var1  00000000
   8C:  Call  GetActorPos   ( .Actor:Self *Var3 *Var4 *Var5 )
   A8:  If  *Var4  >=  *Var1
   B8:  	Goto  B
   C4:  EndIf
   CC:  Call  SetIdleAnimations ( .Actor:Self 00000001 $IdleAnimations_802224B0 )
   E4:  Call  SetAnimation      ( .Actor:Self 00000001 00510000 )
   FC:  Wait  9`
  108:  Call  SetAnimation      ( .Actor:Self 00000001 00510001 )
  120:  Call  SetActorIdleJumpGravity   ( .Actor:Self *Fixed[1.0] )
  134:  Call  SetActorIdleSpeed ( .Actor:Self *Fixed[1.0] )
  148:  Call  SetIdleGoal       ( .Actor:Self *Var0 *Var1 *Var2 )
  164:  Call  IdleFlyToGoal     ( .Actor:Self  0`  0` .Easing:SinOut )
  180:  Label  B
  18C:  Call  GetStatusFlags    ( .Actor:Self *VarA )
  1A0:  If  *VarA  &  ~Flags:StatusFlags:Sleep|Paralyze|Dizzy|Stone|Stop % 351000
  1B0:  	Wait  1`
  1BC:  	Goto  0
  1C8:  EndIf
  1D0:  Call  SetGoalToHome ( .Actor:Self )
  1E0:  Call  GetGoalPos    ( .Actor:Self *Var0 *Var1 *Var2 )
  1FC:  Add   *Var1  00000005
  20C:  Call  GetActorPos   ( .Actor:Self *Var3 *Var4 *Var5 )
  228:  If  *Var4  >=  *Var1
  238:  	Goto  C
  244:  EndIf
  24C:  Call  SetIdleAnimations ( .Actor:Self 00000001 $IdleAnimations_802224B0 )
  264:  Call  SetAnimation      ( .Actor:Self 00000001 00510000 )
  27C:  Wait  9`
  288:  Call  SetAnimation      ( .Actor:Self 00000001 00510001 )
  2A0:  Call  SetActorIdleJumpGravity   ( .Actor:Self *Fixed[1.0] )
  2B4:  Call  SetActorIdleSpeed ( .Actor:Self *Fixed[1.0] )
  2C8:  Call  SetIdleGoal       ( .Actor:Self *Var0 *Var1 *Var2 )
  2E4:  Call  IdleFlyToGoal     ( .Actor:Self  0`  0` .Easing:SinOut )
  300:  Wait  3`
  30C:  Label  C
  318:  Call  GetStatusFlags    ( .Actor:Self *VarA )
  32C:  If  *VarA  &  ~Flags:StatusFlags:Sleep|Paralyze|Dizzy|Stone|Stop % 351000
  33C:  	Wait  1`
  348:  	Goto  0
  354:  EndIf
  35C:  Call  SetIdleAnimations ( .Actor:Self 00000001 $IdleAnimations_802224EC )
  374:  Call  SetGoalToHome     ( .Actor:Self )
  384:  Call  GetGoalPos        ( .Actor:Self *Var0 *Var1 *Var2 )
  3A0:  Add   *Var1  FFFFFFFB
  3B0:  Call  SetActorIdleJumpGravity   ( .Actor:Self *Fixed[0.8] )
  3C4:  Call  SetActorIdleSpeed ( .Actor:Self *Fixed[0.3] )
  3D8:  Call  SetIdleGoal       ( .Actor:Self *Var0 *Var1 *Var2 )
  3F4:  Call  IdleFlyToGoal     ( .Actor:Self  0`  1` .Easing:SinOut )
  410:  Wait  1`
  41C:  Goto  0
  428:  Return
  430:  End
}

#new:Script $Script_HandleEvent_80222CF8
{
    0:  Call  UseIdleAnimation  ( .Actor:Self .False )
   14:  Call  EnableIdleScript  ( .Actor:Self 00000000 )
   28:  Call  GetLastEvent      ( .Actor:Self *Var0 )
   3C:  Switch  *Var0
   48:  	CaseOR  ==  .Event:HitCombo % 9
   54:  	CaseOR  ==  .Event:Hit % A
   60:  		SetConst  *Var0  00000001
   70:  		SetConst  *Var1  00510002
   80:  		ExecWait  DoNormalHit
   8C:  	EndCaseGroup
   94:  	Case  ==  .Event:Death % 20
   A0:  		SetConst  *Var0  00000001
   B0:  		SetConst  *Var1  00510002
   C0:  		ExecWait  DoNormalHit
   CC:  		SetConst  *Var1  00510003
   DC:  		ExecWait  $Script_80223170
   E8:  		Return
   F0:  	Case  ==  .Event:BurnHit % E
   FC:  		Set   *Var0  00000001
  10C:  		Set   *Var1  00510004
  11C:  		Set   *Var2  00510005
  12C:  		ExecWait  DoBurnHit
  138:  	Case  ==  .Event:BurnDeath % 24
  144:  		Set   *Var0  00000001
  154:  		Set   *Var1  00510004
  164:  		Set   *Var2  00510005
  174:  		ExecWait  DoBurnHit
  180:  		SetConst  *Var1  00510005
  190:  		ExecWait  $Script_80223170
  19C:  		Return
  1A4:  	Case  ==  .Event:SpinSmashHit % B
  1B0:  		SetConst  *Var0  00000001
  1C0:  		SetConst  *Var1  00510002
  1D0:  		ExecWait  DoSpinSmashHit
  1DC:  	Case  ==  .Event:SpinSmashDeath % 21
  1E8:  		SetConst  *Var0  00000001
  1F8:  		SetConst  *Var1  00510002
  208:  		ExecWait  DoSpinSmashHit
  214:  		SetConst  *Var0  00000001
  224:  		SetConst  *Var1  00510003
  234:  		ExecWait  $Script_80223170
  240:  		Return
  248:  	CaseOR  ==  00000017 % 17
  254:  	CaseOR  ==  .Event:Immune % 19
  260:  	CaseOR  ==  .Event:AirLiftFailed % 1F
  26C:  		SetConst  *Var0  00000001
  27C:  		SetConst  *Var1  00510000
  28C:  		ExecWait  DoImmune
  298:  	EndCaseGroup
  2A0:  	Case  ==  .Event:ShockHit % 2F
  2AC:  		Call  SetActorScale ( .Actor:Self *Fixed[1.0] *Fixed[1.0] *Fixed[1.0] )
  2C8:  		SetConst  *Var0  00000001
  2D8:  		SetConst  *Var1  00510002
  2E8:  		ExecWait  DoShockHit
  2F4:  		SetConst  *Var0  00000001
  304:  		SetConst  *Var1  00510002
  314:  		ExecWait  DoJumpBack
  320:  		ExecWait  $Script_8022241C
  32C:  	CaseOR  ==  .Event:ShockDeath % 26
  338:  		Call  SetActorScale ( .Actor:Self *Fixed[1.0] *Fixed[1.0] *Fixed[1.0] )
  354:  		SetConst  *Var0  00000001
  364:  		SetConst  *Var1  00510002
  374:  		ExecWait  DoShockHit
  380:  		SetConst  *Var0  00000001
  390:  		SetConst  *Var1  00510002
  3A0:  		ExecWait  DoJumpBack
  3AC:  		SetConst  *Var0  00000001
  3BC:  		SetConst  *Var1  00510003
  3CC:  		ExecWait  $Script_80223170
  3D8:  		Return
  3E0:  	Case  ==  .Event:EndFirstStrike % 35
  3EC:  		ExecWait  $Script_8022241C
  3F8:  	Case  ==  .Event:RecoverStatus % 31
  404:  		SetConst  *Var0  00000001
  414:  		SetConst  *Var1  00510000
  424:  		ExecWait  DoRecover
  430:  	Default
  438:  EndSwitch
  440:  Call  EnableIdleScript  ( .Actor:Self FFFFFFFF )
  454:  Call  UseIdleAnimation  ( .Actor:Self .True )
  468:  Return
  470:  End
}

#new:Script $Script_80223170
{
    0:  SetConst  *Var0  00000001
   10:  ExecWait  DoDeath
   1C:  Return
   24:  End
}

#new:Script $Script_TakeTurn_8022319C
{
    0:  Call  UseIdleAnimation  ( .Actor:Self .False )
   14:  Call  EnableIdleScript  ( .Actor:Self 00000000 )
   28:  Call  SetTargetActor    ( .Actor:Self .Actor:Player )
   3C:  Call  SetGoalToTarget   ( .Actor:Self )
   4C:  Call  GetGoalPos        ( .Actor:Self *Var0 *Var1 *Var2 )
   68:  Set   *Var1  00000064
   78:  Set   *Var3  0000000C
   88:  ExecWait  $Script_80221F40
   94:  Thread
   9C:  	Wait  2`
   A8:  	Call  PlaySoundAtActor  ( .Actor:Self 00000301 )
   BC:  EndThread
   C4:  Call  EnemyTestTarget   ( .Actor:Self *VarF ~Flags:DamageType:0 00000000 00000001 00000010 )
   E8:  Switch  *VarF
   F4:  	CaseOR  ==  .HitResult:Miss % 6
  100:  	CaseOR  ==  .HitResult:Lucky % 5
  10C:  		Call  SetAnimation  ( .Actor:Self 00000001 00510002 )
  124:  		Call  SetGoalToTarget       ( .Actor:Self )
  134:  		Call  GetGoalPos    ( .Actor:Self *Var0 *Var1 *Var2 )
  150:  		Set   *Var1  00000000
  160:  		Call  SetActorJumpGravity   ( .Actor:Self *Fixed[0.8] )
  174:  		Call  SetGoalPos    ( .Actor:Self *Var0 *Var1 *Var2 )
  190:  		Call  JumpToGoal    ( .Actor:Self  16` .False .True .False )
  1B0:  		If  *VarF  ==  .HitResult:Lucky % 5
  1C0:  			Call  EnemyTestTarget   ( .Actor:Self *VarF ~Flags:DamageType:TriggerLucky 00000000 00000000 00000000 )
  1E4:  		EndIf
  1EC:  		Add   *Var0  0000001E
  1FC:  		Call  SetGoalPos    ( .Actor:Self *Var0 *Var1 *Var2 )
  218:  		Call  JumpToGoal    ( .Actor:Self  12` .False .True .False )
  238:  		Add   *Var0  00000014
  248:  		Call  SetGoalPos    ( .Actor:Self *Var0 *Var1 *Var2 )
  264:  		Call  JumpToGoal    ( .Actor:Self  8` .False .True .False )
  284:  		ExecWait  $Script_8022241C
  290:  		Call  EnableIdleScript  ( .Actor:Self FFFFFFFF )
  2A4:  		Call  UseIdleAnimation  ( .Actor:Self .True )
  2B8:  		Return
  2C0:  	EndCaseGroup
  2C8:  	CaseOR  ==  .HitResult:HitStatic % 7
  2D4:  	CaseOR  ==  .HitResult:Immune % 8
  2E0:  		Call  SetAnimation  ( .Actor:Self 00000001 00510002 )
  2F8:  		Call  SetGoalToTarget       ( .Actor:Self )
  308:  		Call  GetGoalPos    ( .Actor:Self *Var0 *Var1 *Var2 )
  324:  		Call  SetActorJumpGravity   ( .Actor:Self *Fixed[1.5] )
  338:  		Call  SetGoalPos    ( .Actor:Self *Var0 *Var1 *Var2 )
  354:  		Call  JumpToGoal    ( .Actor:Self  16` .False .True .False )
  374:  		If  *VarF  ==  00000007
  384:  			Call  EnemyDamageTarget ( .Actor:Self *VarF ~Flags:DamageType:0 00000000 00000000 00000000 00000040 )
  3AC:  		EndIf
  3B4:  		Add   *Var0  0000001E
  3C4:  		Call  SetGoalPos        ( .Actor:Self *Var0 *Var1 *Var2 )
  3E0:  		Call  JumpToGoal        ( .Actor:Self  15` .False .True .False )
  400:  		ExecWait  $Script_8022241C
  40C:  		Call  EnableIdleScript  ( .Actor:Self FFFFFFFF )
  420:  		Call  UseIdleAnimation  ( .Actor:Self .True )
  434:  		Return
  43C:  	EndCaseGroup
  444:  EndSwitch
  44C:  Call  GetActorPos       ( .Actor:Player *Var0 *Var1 *Var2 )
  468:  Add   *Var1  00000032
  478:  Call  UseBattleCamPreset    ( 00000013 )
  488:  Call  SetBattleCamTarget    ( *Var0 *Var1 *Var2 )
  4A0:  Call  SetBattleCamZoom  (  325` )
  4B0:  Call  MoveBattleCamOver (  30` )
  4C0:  Call  SetAnimation      ( .Actor:Self 00000001 00510002 )
  4D8:  Call  SetActorJumpGravity   ( .Actor:Self *Fixed[0.8] )
  4EC:  Call  SetGoalToTarget   ( .Actor:Self )
  4FC:  Call  GetGoalPos        ( .Actor:Self *Var0 *Var1 *Var2 )
  518:  Sub   *Var1  0000000A
  528:  Sub   *Var2  00000005
  538:  Call  SetGoalPos        ( .Actor:Self *Var0 *Var1 *Var2 )
  554:  Call  JumpToGoal        ( .Actor:Self  16` .False .True .False )
  574:  Call  SetGoalToTarget   ( .Actor:Self )
  584:  Call  SetAnimation      ( .Actor:Self 00000001 00510008 )
  59C:  Call  ShowMessageBox    ( 00000031 00007FFF )
  5B0:  Call  802694A4  ( 00000001 )
  5C0:  Call  LoadActionCommand ( .ActionCommand:StopLeech )
  5D0:  Call  802A9000 ( )
  5DC:  Call  SetupMashMeter    ( 00000001 0000000F 00000000 00000000 00000000 00000000 )
  600:  Wait  10`
  60C:  Call  SetBattleFlagBits ( 00004000 .False )
  620:  Call  802A9110  ( 00000000 00007FFF 00000003 )
  638:  Loop  00000005
  644:  	Call  UseIdleAnimation  ( .Actor:Player .False )
  658:  	Call  SetAnimation      ( .Actor:Player 00000000 0003000C )
  670:  	Set   *Flag[00]  .False
  680:  	Loop  0000000A
  68C:  		Call  GetActionSuccessCopy  ( *Var1 )
  69C:  		If  *Var1  ==  00000001
  6AC:  			Set   *Flag[00]  .True
  6BC:  			BreakLoop
  6C4:  		EndIf
  6CC:  		Wait  1`
  6D8:  	EndLoop
  6E0:  	If  *Flag[00]  ==  .True
  6F0:  		Call  DispatchEventPlayer   ( 00000042 )
  700:  		Call  UseIdleAnimation      ( .Actor:Player .True )
  714:  		BreakLoop
  71C:  	EndIf
  724:  	Call  PlaySoundAtActor  ( .Actor:Self 000003E0 )
  738:  	Call  SetActorScale     ( .Actor:Self *Fixed[1.0] *Fixed[1.0] *Fixed[1.0] )
  754:  	Set   *Flag[00]  .False
  764:  	Loop  00000002
  770:  		Call  GetActionSuccessCopy  ( *Var1 )
  780:  		If  *Var1  ==  00000001
  790:  			Set   *Flag[00]  .True
  7A0:  			BreakLoop
  7A8:  		EndIf
  7B0:  		Wait  1`
  7BC:  	EndLoop
  7C4:  	If  *Flag[00]  ==  .True
  7D4:  		Call  DispatchEventPlayer   ( 00000042 )
  7E4:  		Call  UseIdleAnimation      ( .Actor:Player .True )
  7F8:  		BreakLoop
  800:  	EndIf
  808:  	Call  SetActorScale ( .Actor:Self *Fixed[0.9] *Fixed[1.1] *Fixed[1.0] )
  824:  	Set   *Flag[00]  .False
  834:  	Loop  00000002
  840:  		Call  GetActionSuccessCopy  ( *Var1 )
  850:  		If  *Var1  ==  00000001
  860:  			Set   *Flag[00]  .True
  870:  			BreakLoop
  878:  		EndIf
  880:  		Wait  1`
  88C:  	EndLoop
  894:  	If  *Flag[00]  ==  .True
  8A4:  		Call  DispatchEventPlayer   ( 00000042 )
  8B4:  		Call  UseIdleAnimation      ( .Actor:Player .True )
  8C8:  		BreakLoop
  8D0:  	EndIf
  8D8:  	Call  SetActorScale ( .Actor:Self *Fixed[0.8] *Fixed[1.2] *Fixed[1.0] )
  8F4:  	Set   *Flag[00]  .False
  904:  	Loop  00000003
  910:  		Call  GetActionSuccessCopy  ( *Var1 )
  920:  		If  *Var1  ==  00000001
  930:  			Set   *Flag[00]  .True
  940:  			BreakLoop
  948:  		EndIf
  950:  		Wait  1`
  95C:  	EndLoop
  964:  	If  *Flag[00]  ==  .True
  974:  		Call  DispatchEventPlayer   ( 00000042 )
  984:  		Call  UseIdleAnimation      ( .Actor:Player .True )
  998:  		BreakLoop
  9A0:  	EndIf
  9A8:  	Call  SetActorScale ( .Actor:Self *Fixed[0.7] *Fixed[1.4] *Fixed[1.0] )
  9C4:  	Set   *Flag[00]  .False
  9D4:  	Loop  00000002
  9E0:  		Call  GetActionSuccessCopy  ( *Var1 )
  9F0:  		If  *Var1  ==  00000001
  A00:  			Set   *Flag[00]  .True
  A10:  			BreakLoop
  A18:  		EndIf
  A20:  		Wait  1`
  A2C:  	EndLoop
  A34:  	If  *Flag[00]  ==  .True
  A44:  		Call  DispatchEventPlayer   ( 00000042 )
  A54:  		Call  UseIdleAnimation      ( .Actor:Player .True )
  A68:  		BreakLoop
  A70:  	EndIf
  A78:  	Call  UseIdleAnimation  ( .Actor:Player .True )
  A8C:  	Call  80269EAC  ( 00000001 )
  A9C:  	Call  EnemyDamageTarget ( .Actor:Self *Var0 ~Flags:DamageType:Unblockable|IgnoreDefense 00000000 00000000 00000002 00000040 )
  AC4:  	Call  StartRumble       ( 00000002 )
  AD4:  	Call  GetLastDamage     ( .Actor:Player *Var3 )
  AE8:  	If  *Var3  !=  00000000
  AF8:  		Call  PlaySoundAtActor  ( .Actor:Self 0000206D )
  B0C:  		Call  PlaySoundAtActor  ( .Actor:Self 00000214 )
  B20:  		Call  GetActorPos       ( .Actor:Self *Var0 *Var1 *Var2 )
  B3C:  		Add   *Var1  0000000A
  B4C:  		Call  $Function_80218A78    ( *Var0 *Var1 *Var2 *Var3 )
  B68:  		Thread
  B70:  			Wait  15`
  B7C:  			Call  PlaySoundAtActor      ( .Actor:Self 0000025C )
  B90:  			Call  $Function_80218B2C    ( *Var0 *Var1 *Var2 *Var3 )
  BAC:  		EndThread
  BB4:  		Add   *Var0  00000014
  BC4:  		Add   *Var1  00000014
  BD4:  		Call  PlayEffect    ( ~FX:Recover:HP *Var0 *Var1 *Var2 *Var3 00000000 00000000 00000000 00000000 00000000 00000000 00000000 00000000 )
  C18:  		Call  GetEnemyMaxHP ( .Actor:Self *Var1 )
  C2C:  		Call  GetActorHP    ( .Actor:Self *Var0 )
  C40:  		Add   *Var0  *Var3
  C50:  		If  *Var0  >  *Var1
  C60:  			Set   *Var0  *Var1
  C70:  		EndIf
  C78:  		Call  SetEnemyHP    ( .Actor:Self *Var0 )
  C8C:  	Else
  C94:  		Call  SetActorScale ( .Actor:Self *Fixed[1.0] *Fixed[1.0] *Fixed[1.0] )
  CB0:  		Call  DispatchEventPlayer   ( 00000042 )
  CC0:  		Call  80269470 ( )
  CCC:  		BreakLoop
  CD4:  	EndIf
  CDC:  	Call  SetActorScale ( .Actor:Self *Fixed[0.7] *Fixed[1.4] *Fixed[1.0] )
  CF8:  	Set   *Flag[00]  .False
  D08:  	Loop  00000003
  D14:  		Call  GetActionSuccessCopy  ( *Var1 )
  D24:  		If  *Var1  ==  00000001
  D34:  			Set   *Flag[00]  .True
  D44:  			BreakLoop
  D4C:  		EndIf
  D54:  		Wait  1`
  D60:  	EndLoop
  D68:  	If  *Flag[00]  ==  .True
  D78:  		Call  DispatchEventPlayer   ( 00000042 )
  D88:  		Call  UseIdleAnimation      ( .Actor:Player .True )
  D9C:  		BreakLoop
  DA4:  	EndIf
  DAC:  	Call  SetActorScale ( .Actor:Self *Fixed[0.8] *Fixed[1.2] *Fixed[1.0] )
  DC8:  	Set   *Flag[00]  .False
  DD8:  	Loop  00000002
  DE4:  		Call  GetActionSuccessCopy  ( *Var1 )
  DF4:  		If  *Var1  ==  00000001
  E04:  			Set   *Flag[00]  .True
  E14:  			BreakLoop
  E1C:  		EndIf
  E24:  		Wait  1`
  E30:  	EndLoop
  E38:  	If  *Flag[00]  ==  .True
  E48:  		Call  DispatchEventPlayer   ( 00000042 )
  E58:  		Call  UseIdleAnimation      ( .Actor:Player .True )
  E6C:  		BreakLoop
  E74:  	EndIf
  E7C:  	Call  SetActorScale ( .Actor:Self *Fixed[0.9] *Fixed[1.1] *Fixed[1.0] )
  E98:  	Set   *Flag[00]  .False
  EA8:  	Loop  00000002
  EB4:  		Call  GetActionSuccessCopy  ( *Var1 )
  EC4:  		If  *Var1  ==  00000001
  ED4:  			Set   *Flag[00]  .True
  EE4:  			BreakLoop
  EEC:  		EndIf
  EF4:  		Wait  1`
  F00:  	EndLoop
  F08:  	If  *Flag[00]  ==  .True
  F18:  		Call  DispatchEventPlayer   ( 00000042 )
  F28:  		Call  UseIdleAnimation      ( .Actor:Player .True )
  F3C:  		BreakLoop
  F44:  	EndIf
  F4C:  	Call  SetActorScale ( .Actor:Self *Fixed[1.0] *Fixed[1.0] *Fixed[1.0] )
  F68:  	Call  GetPlayerHP   ( *Var1 )
  F78:  	If  *Var1  ==  00000000
  F88:  		Call  DispatchEventPlayer   ( 00000042 )
  F98:  		Call  80269470 ( )
  FA4:  		BreakLoop
  FAC:  	EndIf
  FB4:  	Set   *Flag[00]  .False
  FC4:  	Loop  0000000C
  FD0:  		Call  GetActionSuccessCopy  ( *Var1 )
  FE0:  		If  *Var1  ==  00000001
  FF0:  			Set   *Flag[00]  .True
 1000:  			BreakLoop
 1008:  		EndIf
 1010:  		Wait  1`
 101C:  	EndLoop
 1024:  	If  *Flag[00]  ==  .True
 1034:  		Call  DispatchEventPlayer   ( 00000042 )
 1044:  		BreakLoop
 104C:  	EndIf
 1054:  EndLoop
 105C:  Call  DispatchEventPlayer   ( 00000042 )
 106C:  Call  80269470 ( )
 1078:  Call  UseIdleAnimation      ( .Actor:Player .True )
 108C:  Call  UseBattleCamPreset    ( 00000002 )
 109C:  Call  MoveBattleCamOver     (  20` )
 10AC:  Call  GetStatusFlags        ( .Actor:Player *Var0 )
 10C0:  If  *Var0  &  ~Flags:StatusFlags:Stone % 100000
 10D0:  	Call  SetAnimation  ( .Actor:Self 00000001 00510002 )
 10E8:  Else
 10F0:  	Call  SetAnimation  ( .Actor:Self 00000001 00510000 )
 1108:  EndIf
 1110:  Call  SetActorScale     ( .Actor:Self *Fixed[1.0] *Fixed[1.0] *Fixed[1.0] )
 112C:  Call  GetActorPos       ( .Actor:Self *Var0 *Var1 *Var2 )
 1148:  Add   *Var0  0000001E
 1158:  Sub   *Var1  0000000F
 1168:  Call  SetActorJumpGravity   ( .Actor:Self *Fixed[1.2] )
 117C:  Call  SetGoalPos        ( .Actor:Self *Var0 *Var1 *Var2 )
 1198:  Call  JumpToGoal        ( .Actor:Self  10` .False .True .False )
 11B8:  ExecWait  $Script_8022241C
 11C4:  Call  EnableIdleScript  ( .Actor:Self FFFFFFFF )
 11D8:  Call  UseIdleAnimation  ( .Actor:Self .True )
 11EC:  Return
 11F4:  End
}

PADDING: 80224398 to 802243A0 (00614E48 to 00614E50)
00000000 00000000

#new:Script $Script_802243A0
{
    0:  Set   *VarA  *Var1
   10:  Set   *VarB  *Var2
   20:  Set   *VarC  *Var3
   30:  Call  SetTexPanner  ( *Var0 *Var1 )
   44:  Set   *Var0  00000000
   54:  Set   *Var1  00000000
   64:  Loop
   70:  	Call  SetTexPanOffset   ( *VarA 00000000 *Var0 *Var1 )
   8C:  	Add   *Var0  *VarB
   9C:  	Add   *Var1  *VarC
   AC:  	Wait  1`
   B8:  EndLoop
   C0:  Return
   C8:  End
}

% Origin: HEURISTIC
#new:Script $Script_80224470
{
    0:  Set   *VarA  *Var1
   10:  Set   *VarB  *Var2
   20:  Set   *VarC  *Var3
   30:  Call  SetTexPanner  ( *Var0 *Var1 )
   44:  Set   *Var0  00000000
   54:  Set   *Var1  00000000
   64:  Loop
   70:  	Call  SetTexPanOffset   ( *VarA 00000000 *Var0 00000000 )
   8C:  	Call  SetTexPanOffset   ( *VarA 00000001 *Var1 00000000 )
   A8:  	Add   *Var0  *VarB
   B8:  	Add   *Var1  *VarC
   C8:  	Wait  1`
   D4:  EndLoop
   DC:  Return
   E4:  End
}

% Origin: HEURISTIC
#new:Script $Script_8022455C
{
    0:  Set   *VarA  *Var1
   10:  Set   *VarB  *Var2
   20:  Set   *VarC  *Var3
   30:  Call  SetTexPanner  ( *Var0 *Var1 )
   44:  Set   *Var0  00000000
   54:  Set   *Var1  00000000
   64:  Loop
   70:  	Call  SetTexPanOffset   ( *VarA 00000000 00000000 *Var0 )
   8C:  	Call  SetTexPanOffset   ( *VarA 00000001 00000000 *Var1 )
   A8:  	Add   *Var0  *VarB
   B8:  	Add   *Var1  *VarC
   C8:  	Wait  1`
   D4:  EndLoop
   DC:  Return
   E4:  End
}

#new:Script $Script_80224648
{
    0:  Set   *Var1  *Array[5]
   10:  Add   *Var1  00000001
   20:  Set   *Var2  *Array[0]
   30:  Set   *Var3  *Array[1]
   40:  Set   *Var4  *Array[5]
   50:  Add   *Var4  00000002
   60:  Set   *Var5  *Array[0]
   70:  Set   *Var6  *Array[1]
   80:  Set   *Var7  *Array[5]
   90:  Add   *Var7  00000003
   A0:  Set   *Var8  *Array[0]
   B0:  Set   *Var9  *Array[1]
   C0:  Set   *VarA  *Array[5]
   D0:  Add   *VarA  00000004
   E0:  Set   *VarB  *Array[0]
   F0:  Set   *VarC  *Array[1]
  100:  Call  EnableModel   ( *Var1 .True )
  114:  Call  EnableModel   ( *Var4 .True )
  128:  Call  EnableModel   ( *Var7 .True )
  13C:  Call  EnableModel   ( *VarA .True )
  150:  Loop  00000005
  15C:  	Add   *Var0  00000001
  16C:  	Add   *Var2  00000001
  17C:  	Add   *Var3  00000001
  18C:  	Call  TranslateModel    ( *Var1 *Var2 *Var0 *Var3 )
  1A8:  	Call  ScaleModel        ( *Var1 *Fixed[0.5] *Fixed[0.5] *Fixed[0.5] )
  1C4:  	Add   *Var5  FFFFFFFF
  1D4:  	Add   *Var6  00000001
  1E4:  	Call  TranslateModel    ( *Var4 *Var5 *Var0 *Var6 )
  200:  	Call  ScaleModel        ( *Var4 *Fixed[0.5] *Fixed[0.5] *Fixed[0.5] )
  21C:  	Add   *Var8  00000001
  22C:  	Add   *Var9  FFFFFFFF
  23C:  	Call  TranslateModel    ( *Var7 *Var8 *Var0 *Var9 )
  258:  	Call  ScaleModel        ( *Var7 *Fixed[0.5] *Fixed[0.5] *Fixed[0.5] )
  274:  	Add   *VarB  FFFFFFFF
  284:  	Add   *VarC  FFFFFFFF
  294:  	Call  TranslateModel    ( *VarA *VarB *Var0 *VarC )
  2B0:  	Call  ScaleModel        ( *VarA *Fixed[0.5] *Fixed[0.5] *Fixed[0.5] )
  2CC:  	Wait  1`
  2D8:  EndLoop
  2E0:  Loop  00000005
  2EC:  	Add   *Var0  FFFFFFFF
  2FC:  	Add   *Var2  00000001
  30C:  	Add   *Var3  00000001
  31C:  	Call  TranslateModel    ( *Var1 *Var2 *Var0 *Var3 )
  338:  	Call  ScaleModel        ( *Var1 *Fixed[0.5] *Fixed[0.5] *Fixed[0.5] )
  354:  	Add   *Var5  FFFFFFFF
  364:  	Add   *Var6  00000001
  374:  	Call  TranslateModel    ( *Var4 *Var5 *Var0 *Var6 )
  390:  	Call  ScaleModel        ( *Var4 *Fixed[0.5] *Fixed[0.5] *Fixed[0.5] )
  3AC:  	Add   *Var8  00000001
  3BC:  	Add   *Var9  FFFFFFFF
  3CC:  	Call  TranslateModel    ( *Var7 *Var8 *Var0 *Var9 )
  3E8:  	Call  ScaleModel        ( *Var7 *Fixed[0.5] *Fixed[0.5] *Fixed[0.5] )
  404:  	Add   *VarB  FFFFFFFF
  414:  	Add   *VarC  FFFFFFFF
  424:  	Call  TranslateModel    ( *VarA *VarB *Var0 *VarC )
  440:  	Call  ScaleModel        ( *VarA *Fixed[0.5] *Fixed[0.5] *Fixed[0.5] )
  45C:  	Wait  1`
  468:  EndLoop
  470:  Call  EnableModel   ( *Var1 .False )
  484:  Call  EnableModel   ( *Var4 .False )
  498:  Call  EnableModel   ( *Var7 .False )
  4AC:  Call  EnableModel   ( *VarA .False )
  4C0:  Return
  4C8:  End
}

#new:Script $Script_80224B18
{
    0:  SetGroup  00000000
    C:  UseArray  *VarA
   18:  Set   *Var5  *Array[5]
   28:  Loop  00000005
   34:  	Call  CloneModel        ( ~Model:tik_bt01:o351 *Var5 )
   48:  	Call  TranslateModel    ( *Var5 *Array[0] *Array[2] *Array[1] )
   64:  	Add   *Var5  00000001
   74:  EndLoop
   7C:  Label  0
   88:  Call  RandInt   ( 000000C8 *Var0 )
   9C:  Add   *Var0  00000032
   AC:  Wait  *Var0
   B8:  Call  EnableModel       ( *Array[5] .True )
   CC:  Call  MakeLerp  ( *Array[2] *Array[3] *Array[4] .Easing:QuadraticIn )
   E8:  Label  1
   F4:  Call  UpdateLerp ( )
  100:  Call  TranslateModel    ( *Array[5] *Array[0] *Var0 *Array[1] )
  11C:  Wait  1`
  128:  Call  $Function_80218BE0    ( *Array[5] )
  138:  If  *Var2  ==  00000001
  148:  	Goto  A
  154:  EndIf
  15C:  If  *Var1  ==  00000001
  16C:  	Goto  1
  178:  EndIf
  180:  Label  A
  18C:  Call  EnableModel   ( *Array[5] .False )
  1A0:  ExecWait  $Script_80224648
  1AC:  Goto  0
  1B8:  Return
  1C0:  End
}

#new:Script $Script_80224CE0
{
    0:  Set   *VarF  00002710
   10:  UseIntBuffer  *Var0
   1C:  Get1Int  *Var1
   28:  Loop  *Var1
   34:  	Get4Int  *Var2 *Var3 *Var4 *Var5
   4C:  	Get3Int  *Var6 *Var7 *Var8
   60:  	Get1Int  *Var9
   6C:  	Loop  *Var9
   78:  		NewArray  00000006 *VarA
   88:  		UseArray  *VarA
   94:  		Call  RandInt   ( *Var4 *VarB )
   A8:  		Call  RandInt   ( *Var5 *VarC )
   BC:  		Set   *VarD  *Var2
   CC:  		Set   *VarE  *Var3
   DC:  		Add   *VarD  *VarB
   EC:  		Add   *VarE  *VarC
   FC:  		Set   *Array[0]  *VarD
  10C:  		Set   *Array[1]  *VarE
  11C:  		Set   *Array[2]  *Var6
  12C:  		Set   *Array[3]  *Var7
  13C:  		Set   *Array[4]  *Var8
  14C:  		Set   *Array[5]  *VarF
  15C:  		ChildThread
  164:  			Exec  $Script_80224B18
  170:  		EndChildThread
  178:  		Add   *VarF  00000005
  188:  	EndLoop
  190:  EndLoop
  198:  Call  EnableModel   ( ~Model:tik_bt01:o351 .False )
  1AC:  Return
  1B4:  End
}

#new:Unknown $???_80224E9C
{
	00000001 FFFFFF9C FFFFFFCE 000000C8 00000064 000000C8 00000000 0000003C
	00000004
}

#new:Script $Script_BeforeBattle_80224EC0
{
    0:  Call  SetSpriteShading  ( FFFFFFFF )
   10:  Call  SetCamBGColor     ( .Cam:Battle  0`  0`  0` )
   2C:  Set   *Var0  0000000D
   3C:  Set   *Var1  00000000
   4C:  Set   *Var2  00000000
   5C:  Set   *Var3  FFFFFE0C
   6C:  Exec  $Script_802243A0
   78:  Set   *Var0  $???_80224E9C
   88:  Exec  $Script_80224CE0
   94:  Return
   9C:  End
}

#new:Script $Script_AfterBattle_80224F64
{
    0:  Return
    8:  End
}

#new:Stage $Stage_80224F74
{
	$ASCII_80227B30  % tik_tex
	$ASCII_80227B20  % tik_bt01_shape
	$ASCII_80227B10  % tik_bt01_hit
	$Script_BeforeBattle_80224EC0
	$Script_AfterBattle_80224F64
	00000000
	00000000
	00000000
	00000000
	00000000
}

PADDING: 80224F9C to 80224FA0 (00615A4C to 00615A50)
00000000

#new:Script $Script_80224FA0
{
    0:  Set   *VarA  *Var1
   10:  Set   *VarB  *Var2
   20:  Set   *VarC  *Var3
   30:  Call  SetTexPanner  ( *Var0 *Var1 )
   44:  Set   *Var0  00000000
   54:  Set   *Var1  00000000
   64:  Loop
   70:  	Call  SetTexPanOffset   ( *VarA 00000000 *Var0 *Var1 )
   8C:  	Add   *Var0  *VarB
   9C:  	Add   *Var1  *VarC
   AC:  	Wait  1`
   B8:  EndLoop
   C0:  Return
   C8:  End
}

% Origin: HEURISTIC
#new:Script $Script_80225070
{
    0:  Set   *VarA  *Var1
   10:  Set   *VarB  *Var2
   20:  Set   *VarC  *Var3
   30:  Call  SetTexPanner  ( *Var0 *Var1 )
   44:  Set   *Var0  00000000
   54:  Set   *Var1  00000000
   64:  Loop
   70:  	Call  SetTexPanOffset   ( *VarA 00000000 *Var0 00000000 )
   8C:  	Call  SetTexPanOffset   ( *VarA 00000001 *Var1 00000000 )
   A8:  	Add   *Var0  *VarB
   B8:  	Add   *Var1  *VarC
   C8:  	Wait  1`
   D4:  EndLoop
   DC:  Return
   E4:  End
}

% Origin: HEURISTIC
#new:Script $Script_8022515C
{
    0:  Set   *VarA  *Var1
   10:  Set   *VarB  *Var2
   20:  Set   *VarC  *Var3
   30:  Call  SetTexPanner  ( *Var0 *Var1 )
   44:  Set   *Var0  00000000
   54:  Set   *Var1  00000000
   64:  Loop
   70:  	Call  SetTexPanOffset   ( *VarA 00000000 00000000 *Var0 )
   8C:  	Call  SetTexPanOffset   ( *VarA 00000001 00000000 *Var1 )
   A8:  	Add   *Var0  *VarB
   B8:  	Add   *Var1  *VarC
   C8:  	Wait  1`
   D4:  EndLoop
   DC:  Return
   E4:  End
}

#new:Script $Script_80225248
{
    0:  Set   *Var1  *Array[5]
   10:  Add   *Var1  00000001
   20:  Set   *Var2  *Array[0]
   30:  Set   *Var3  *Array[1]
   40:  Set   *Var4  *Array[5]
   50:  Add   *Var4  00000002
   60:  Set   *Var5  *Array[0]
   70:  Set   *Var6  *Array[1]
   80:  Set   *Var7  *Array[5]
   90:  Add   *Var7  00000003
   A0:  Set   *Var8  *Array[0]
   B0:  Set   *Var9  *Array[1]
   C0:  Set   *VarA  *Array[5]
   D0:  Add   *VarA  00000004
   E0:  Set   *VarB  *Array[0]
   F0:  Set   *VarC  *Array[1]
  100:  Call  EnableModel   ( *Var1 .True )
  114:  Call  EnableModel   ( *Var4 .True )
  128:  Call  EnableModel   ( *Var7 .True )
  13C:  Call  EnableModel   ( *VarA .True )
  150:  Loop  00000005
  15C:  	Add   *Var0  00000001
  16C:  	Add   *Var2  00000001
  17C:  	Add   *Var3  00000001
  18C:  	Call  TranslateModel    ( *Var1 *Var2 *Var0 *Var3 )
  1A8:  	Call  ScaleModel        ( *Var1 *Fixed[0.5] *Fixed[0.5] *Fixed[0.5] )
  1C4:  	Add   *Var5  FFFFFFFF
  1D4:  	Add   *Var6  00000001
  1E4:  	Call  TranslateModel    ( *Var4 *Var5 *Var0 *Var6 )
  200:  	Call  ScaleModel        ( *Var4 *Fixed[0.5] *Fixed[0.5] *Fixed[0.5] )
  21C:  	Add   *Var8  00000001
  22C:  	Add   *Var9  FFFFFFFF
  23C:  	Call  TranslateModel    ( *Var7 *Var8 *Var0 *Var9 )
  258:  	Call  ScaleModel        ( *Var7 *Fixed[0.5] *Fixed[0.5] *Fixed[0.5] )
  274:  	Add   *VarB  FFFFFFFF
  284:  	Add   *VarC  FFFFFFFF
  294:  	Call  TranslateModel    ( *VarA *VarB *Var0 *VarC )
  2B0:  	Call  ScaleModel        ( *VarA *Fixed[0.5] *Fixed[0.5] *Fixed[0.5] )
  2CC:  	Wait  1`
  2D8:  EndLoop
  2E0:  Loop  00000005
  2EC:  	Add   *Var0  FFFFFFFF
  2FC:  	Add   *Var2  00000001
  30C:  	Add   *Var3  00000001
  31C:  	Call  TranslateModel    ( *Var1 *Var2 *Var0 *Var3 )
  338:  	Call  ScaleModel        ( *Var1 *Fixed[0.5] *Fixed[0.5] *Fixed[0.5] )
  354:  	Add   *Var5  FFFFFFFF
  364:  	Add   *Var6  00000001
  374:  	Call  TranslateModel    ( *Var4 *Var5 *Var0 *Var6 )
  390:  	Call  ScaleModel        ( *Var4 *Fixed[0.5] *Fixed[0.5] *Fixed[0.5] )
  3AC:  	Add   *Var8  00000001
  3BC:  	Add   *Var9  FFFFFFFF
  3CC:  	Call  TranslateModel    ( *Var7 *Var8 *Var0 *Var9 )
  3E8:  	Call  ScaleModel        ( *Var7 *Fixed[0.5] *Fixed[0.5] *Fixed[0.5] )
  404:  	Add   *VarB  FFFFFFFF
  414:  	Add   *VarC  FFFFFFFF
  424:  	Call  TranslateModel    ( *VarA *VarB *Var0 *VarC )
  440:  	Call  ScaleModel        ( *VarA *Fixed[0.5] *Fixed[0.5] *Fixed[0.5] )
  45C:  	Wait  1`
  468:  EndLoop
  470:  Call  EnableModel   ( *Var1 .False )
  484:  Call  EnableModel   ( *Var4 .False )
  498:  Call  EnableModel   ( *Var7 .False )
  4AC:  Call  EnableModel   ( *VarA .False )
  4C0:  Return
  4C8:  End
}

#new:Script $Script_80225718
{
    0:  SetGroup  00000000
    C:  UseArray  *VarA
   18:  Set   *Var5  *Array[5]
   28:  Loop  00000005
   34:  	Call  CloneModel        ( ~Model:tik_bt02:o354 *Var5 )
   48:  	Call  TranslateModel    ( *Var5 *Array[0] *Array[2] *Array[1] )
   64:  	Add   *Var5  00000001
   74:  EndLoop
   7C:  Label  0
   88:  Call  RandInt   ( 000000C8 *Var0 )
   9C:  Add   *Var0  00000032
   AC:  Wait  *Var0
   B8:  Call  EnableModel       ( *Array[5] .True )
   CC:  Call  MakeLerp  ( *Array[2] *Array[3] *Array[4] .Easing:QuadraticIn )
   E8:  Label  1
   F4:  Call  UpdateLerp ( )
  100:  Call  TranslateModel    ( *Array[5] *Array[0] *Var0 *Array[1] )
  11C:  Wait  1`
  128:  Call  $Function_80219080    ( *Array[5] )
  138:  If  *Var2  ==  00000001
  148:  	Goto  A
  154:  EndIf
  15C:  If  *Var1  ==  00000001
  16C:  	Goto  1
  178:  EndIf
  180:  Label  A
  18C:  Call  EnableModel   ( *Array[5] .False )
  1A0:  ExecWait  $Script_80225248
  1AC:  Goto  0
  1B8:  Return
  1C0:  End
}

#new:Script $Script_802258E0
{
    0:  Set   *VarF  00002710
   10:  UseIntBuffer  *Var0
   1C:  Get1Int  *Var1
   28:  Loop  *Var1
   34:  	Get4Int  *Var2 *Var3 *Var4 *Var5
   4C:  	Get3Int  *Var6 *Var7 *Var8
   60:  	Get1Int  *Var9
   6C:  	Loop  *Var9
   78:  		NewArray  00000006 *VarA
   88:  		UseArray  *VarA
   94:  		Call  RandInt   ( *Var4 *VarB )
   A8:  		Call  RandInt   ( *Var5 *VarC )
   BC:  		Set   *VarD  *Var2
   CC:  		Set   *VarE  *Var3
   DC:  		Add   *VarD  *VarB
   EC:  		Add   *VarE  *VarC
   FC:  		Set   *Array[0]  *VarD
  10C:  		Set   *Array[1]  *VarE
  11C:  		Set   *Array[2]  *Var6
  12C:  		Set   *Array[3]  *Var7
  13C:  		Set   *Array[4]  *Var8
  14C:  		Set   *Array[5]  *VarF
  15C:  		ChildThread
  164:  			Exec  $Script_80225718
  170:  		EndChildThread
  178:  		Add   *VarF  00000005
  188:  	EndLoop
  190:  EndLoop
  198:  Call  EnableModel   ( ~Model:tik_bt02:o354 .False )
  1AC:  Return
  1B4:  End
}

#new:Unknown $???_80225A9C
{
	00000001 FFFFFF9C FFFFFFCE 000000C8 00000064 000000C8 00000000 0000003C
	00000004
}

#new:Script $Script_BeforeBattle_80225AC0
{
    0:  Call  SetSpriteShading  ( FFFFFFFF )
   10:  Call  SetCamBGColor     ( .Cam:Battle  0`  0`  0` )
   2C:  Set   *Var0  $???_80225A9C
   3C:  Exec  $Script_802258E0
   48:  Set   *Var0  0000000E
   58:  Set   *Var1  00000000
   68:  Set   *Var2  00000000
   78:  Set   *Var3  FFFFFE0C
   88:  Exec  $Script_80224FA0
   94:  Return
   9C:  End
}

#new:Script $Script_AfterBattle_80225B64
{
    0:  Return
    8:  End
}

#new:Stage $Stage_80225B74
{
	$ASCII_80227B58  % tik_tex
	$ASCII_80227B48  % tik_bt02_shape
	$ASCII_80227B38  % tik_bt02_hit
	$Script_BeforeBattle_80225AC0
	$Script_AfterBattle_80225B64
	00000000
	00000000
	00000000
	00000000
	00000000
}

PADDING: 80225B9C to 80225BA0 (0061664C to 00616650)
00000000

#new:Script $Script_80225BA0
{
    0:  Set   *Var1  *Array[5]
   10:  Add   *Var1  00000001
   20:  Set   *Var2  *Array[0]
   30:  Set   *Var3  *Array[1]
   40:  Set   *Var4  *Array[5]
   50:  Add   *Var4  00000002
   60:  Set   *Var5  *Array[0]
   70:  Set   *Var6  *Array[1]
   80:  Set   *Var7  *Array[5]
   90:  Add   *Var7  00000003
   A0:  Set   *Var8  *Array[0]
   B0:  Set   *Var9  *Array[1]
   C0:  Set   *VarA  *Array[5]
   D0:  Add   *VarA  00000004
   E0:  Set   *VarB  *Array[0]
   F0:  Set   *VarC  *Array[1]
  100:  Call  EnableModel   ( *Var1 .True )
  114:  Call  EnableModel   ( *Var4 .True )
  128:  Call  EnableModel   ( *Var7 .True )
  13C:  Call  EnableModel   ( *VarA .True )
  150:  Loop  00000005
  15C:  	Add   *Var0  00000001
  16C:  	Add   *Var2  00000001
  17C:  	Add   *Var3  00000001
  18C:  	Call  TranslateModel    ( *Var1 *Var2 *Var0 *Var3 )
  1A8:  	Call  ScaleModel        ( *Var1 *Fixed[0.5] *Fixed[0.5] *Fixed[0.5] )
  1C4:  	Add   *Var5  FFFFFFFF
  1D4:  	Add   *Var6  00000001
  1E4:  	Call  TranslateModel    ( *Var4 *Var5 *Var0 *Var6 )
  200:  	Call  ScaleModel        ( *Var4 *Fixed[0.5] *Fixed[0.5] *Fixed[0.5] )
  21C:  	Add   *Var8  00000001
  22C:  	Add   *Var9  FFFFFFFF
  23C:  	Call  TranslateModel    ( *Var7 *Var8 *Var0 *Var9 )
  258:  	Call  ScaleModel        ( *Var7 *Fixed[0.5] *Fixed[0.5] *Fixed[0.5] )
  274:  	Add   *VarB  FFFFFFFF
  284:  	Add   *VarC  FFFFFFFF
  294:  	Call  TranslateModel    ( *VarA *VarB *Var0 *VarC )
  2B0:  	Call  ScaleModel        ( *VarA *Fixed[0.5] *Fixed[0.5] *Fixed[0.5] )
  2CC:  	Wait  1`
  2D8:  EndLoop
  2E0:  Loop  00000005
  2EC:  	Add   *Var0  FFFFFFFF
  2FC:  	Add   *Var2  00000001
  30C:  	Add   *Var3  00000001
  31C:  	Call  TranslateModel    ( *Var1 *Var2 *Var0 *Var3 )
  338:  	Call  ScaleModel        ( *Var1 *Fixed[0.5] *Fixed[0.5] *Fixed[0.5] )
  354:  	Add   *Var5  FFFFFFFF
  364:  	Add   *Var6  00000001
  374:  	Call  TranslateModel    ( *Var4 *Var5 *Var0 *Var6 )
  390:  	Call  ScaleModel        ( *Var4 *Fixed[0.5] *Fixed[0.5] *Fixed[0.5] )
  3AC:  	Add   *Var8  00000001
  3BC:  	Add   *Var9  FFFFFFFF
  3CC:  	Call  TranslateModel    ( *Var7 *Var8 *Var0 *Var9 )
  3E8:  	Call  ScaleModel        ( *Var7 *Fixed[0.5] *Fixed[0.5] *Fixed[0.5] )
  404:  	Add   *VarB  FFFFFFFF
  414:  	Add   *VarC  FFFFFFFF
  424:  	Call  TranslateModel    ( *VarA *VarB *Var0 *VarC )
  440:  	Call  ScaleModel        ( *VarA *Fixed[0.5] *Fixed[0.5] *Fixed[0.5] )
  45C:  	Wait  1`
  468:  EndLoop
  470:  Call  EnableModel   ( *Var1 .False )
  484:  Call  EnableModel   ( *Var4 .False )
  498:  Call  EnableModel   ( *Var7 .False )
  4AC:  Call  EnableModel   ( *VarA .False )
  4C0:  Return
  4C8:  End
}

#new:Script $Script_80226070
{
    0:  SetGroup  00000000
    C:  UseArray  *VarA
   18:  Set   *Var5  *Array[5]
   28:  Loop  00000005
   34:  	Call  CloneModel        ( ~Model:tik_bt03:o371 *Var5 )
   48:  	Call  TranslateModel    ( *Var5 *Array[0] *Array[2] *Array[1] )
   64:  	Add   *Var5  00000001
   74:  EndLoop
   7C:  Label  0
   88:  Call  RandInt   ( 000000C8 *Var0 )
   9C:  Add   *Var0  00000032
   AC:  Wait  *Var0
   B8:  Call  EnableModel       ( *Array[5] .True )
   CC:  Call  MakeLerp  ( *Array[2] *Array[3] *Array[4] .Easing:QuadraticIn )
   E8:  Label  1
   F4:  Call  UpdateLerp ( )
  100:  Call  TranslateModel    ( *Array[5] *Array[0] *Var0 *Array[1] )
  11C:  Wait  1`
  128:  Call  $Function_80219520    ( *Array[5] )
  138:  If  *Var2  ==  00000001
  148:  	Goto  A
  154:  EndIf
  15C:  If  *Var1  ==  00000001
  16C:  	Goto  1
  178:  EndIf
  180:  Label  A
  18C:  Call  EnableModel   ( *Array[5] .False )
  1A0:  ExecWait  $Script_80225BA0
  1AC:  Goto  0
  1B8:  Return
  1C0:  End
}

#new:Script $Script_80226238
{
    0:  Set   *VarF  00002710
   10:  UseIntBuffer  *Var0
   1C:  Get1Int  *Var1
   28:  Loop  *Var1
   34:  	Get4Int  *Var2 *Var3 *Var4 *Var5
   4C:  	Get3Int  *Var6 *Var7 *Var8
   60:  	Get1Int  *Var9
   6C:  	Loop  *Var9
   78:  		NewArray  00000006 *VarA
   88:  		UseArray  *VarA
   94:  		Call  RandInt   ( *Var4 *VarB )
   A8:  		Call  RandInt   ( *Var5 *VarC )
   BC:  		Set   *VarD  *Var2
   CC:  		Set   *VarE  *Var3
   DC:  		Add   *VarD  *VarB
   EC:  		Add   *VarE  *VarC
   FC:  		Set   *Array[0]  *VarD
  10C:  		Set   *Array[1]  *VarE
  11C:  		Set   *Array[2]  *Var6
  12C:  		Set   *Array[3]  *Var7
  13C:  		Set   *Array[4]  *Var8
  14C:  		Set   *Array[5]  *VarF
  15C:  		ChildThread
  164:  			Exec  $Script_80226070
  170:  		EndChildThread
  178:  		Add   *VarF  00000005
  188:  	EndLoop
  190:  EndLoop
  198:  Call  EnableModel   ( ~Model:tik_bt03:o371 .False )
  1AC:  Return
  1B4:  End
}

#new:Unknown $???_802263F4
{
	00000001 FFFFFF9C FFFFFFCE 000000C8 00000064 000000C8 00000000 0000003C
	00000004
}

#new:Script $Script_BeforeBattle_80226418
{
    0:  Call  SetSpriteShading  ( FFFFFFFF )
   10:  Call  SetCamBGColor     ( .Cam:Battle  0`  0`  0` )
   2C:  Set   *Var0  $???_802263F4
   3C:  Exec  $Script_80226238
   48:  Return
   50:  End
}

#new:Script $Script_AfterBattle_80226470
{
    0:  Return
    8:  End
}

#new:Stage $Stage_80226480
{
	$ASCII_80227B80  % tik_tex
	$ASCII_80227B70  % tik_bt03_shape
	$ASCII_80227B60  % tik_bt03_hit
	$Script_BeforeBattle_80226418
	$Script_AfterBattle_80226470
	00000000
	00000000
	00000000
	00000000
	00000000
}

PADDING: 802264A8 to 802264B0 (00616F58 to 00616F60)
00000000 00000000

% Origin: HEURISTIC
#new:Script $Script_802264B0
{
    0:  Set   *VarA  *Var0
   10:  Label  0
   1C:  Call  $Function_802199C0    ( 00000000 )
   2C:  Call  TranslateModel        ( *VarA *Var0 *Var1 *Var2 )
   48:  Call  RotateModel   ( *VarA FFFFFFEC 00000000 00000000 00000001 )
   68:  Wait  1`
   74:  Loop
   80:  	Call  $Function_802199C0    ( 00000001 )
   90:  	Call  TranslateModel        ( *VarA *Var0 *Var1 *Var2 )
   AC:  	Call  RotateModel   ( *VarA FFFFFFEC 00000000 00000000 00000001 )
   CC:  	Wait  1`
   D8:  	If  *VarB  ==  00000001
   E8:  		BreakLoop
   F0:  	EndIf
   F8:  EndLoop
  100:  Call  TranslateModel    ( *VarA *Var0 *Var1 *Var2 )
  11C:  Call  RotateModel       ( *VarA FFFFFFF9 00000000 00000000 00000001 )
  13C:  Wait  5`
  148:  Call  TranslateModel    ( *VarA *Var0 *Var1 *Var2 )
  164:  Call  RotateModel       ( *VarA FFFFFFE5 00000000 00000000 00000001 )
  184:  Wait  2`
  190:  Call  TranslateModel    ( *VarA *Var0 *Var1 *Var2 )
  1AC:  Call  RotateModel       ( *VarA FFFFFFFB 00000000 00000000 00000001 )
  1CC:  Wait  3`
  1D8:  Call  TranslateModel    ( *VarA *Var0 *Var1 *Var2 )
  1F4:  Call  RotateModel       ( *VarA FFFFFFEC 00000000 00000000 00000001 )
  214:  Wait  5`
  220:  Loop
  22C:  	Call  $Function_802199C0    ( 00000002 )
  23C:  	Call  TranslateModel        ( *VarA *Var0 *Var1 *Var2 )
  258:  	Call  RotateModel   ( *VarA FFFFFFEC 00000000 00000000 00000001 )
  278:  	Wait  1`
  284:  	If  *VarB  ==  00000002
  294:  		BreakLoop
  29C:  	EndIf
  2A4:  EndLoop
  2AC:  Call  RandInt   ( 00000050 *VarB )
  2C0:  Add   *VarB  0000001E
  2D0:  Loop  *VarB
  2DC:  	Call  TranslateModel    ( *VarA *Var0 *Var1 *Var2 )
  2F8:  	Call  RotateModel       ( *VarA FFFFFFEC 00000000 00000000 00000001 )
  318:  	Wait  1`
  324:  EndLoop
  32C:  Call  RandInt   ( 00000005 *Var0 )
  340:  If  *Var0  !=  00000000
  350:  	Goto  0
  35C:  EndIf
  364:  Call  $Function_802199C0    ( 00000003 )
  374:  Call  TranslateModel        ( *VarA *Var0 *Var1 *Var2 )
  390:  Call  RotateModel   ( *VarA FFFFFFEC 00000000 00000000 00000001 )
  3B0:  Wait  1`
  3BC:  Loop
  3C8:  	Call  $Function_802199C0    ( 00000001 )
  3D8:  	Call  TranslateModel        ( *VarA *Var0 *Var1 *Var2 )
  3F4:  	Call  RotateModel   ( *VarA FFFFFFEC 00000000 00000000 00000001 )
  414:  	Wait  1`
  420:  	If  *VarB  ==  00000001
  430:  		BreakLoop
  438:  	EndIf
  440:  EndLoop
  448:  Call  TranslateModel    ( *VarA *Var0 *Var1 *Var2 )
  464:  Call  RotateModel       ( *VarA FFFFFFF9 00000000 00000000 00000001 )
  484:  Wait  5`
  490:  Call  TranslateModel    ( *VarA *Var0 *Var1 *Var2 )
  4AC:  Call  RotateModel       ( *VarA FFFFFFE5 00000000 00000000 00000001 )
  4CC:  Wait  2`
  4D8:  Call  TranslateModel    ( *VarA *Var0 *Var1 *Var2 )
  4F4:  Call  RotateModel       ( *VarA FFFFFFFB 00000000 00000000 00000001 )
  514:  Wait  3`
  520:  Call  TranslateModel    ( *VarA *Var0 *Var1 *Var2 )
  53C:  Call  RotateModel       ( *VarA FFFFFFEC 00000000 00000000 00000001 )
  55C:  Wait  5`
  568:  Loop
  574:  	Call  $Function_802199C0    ( 00000002 )
  584:  	Call  TranslateModel        ( *VarA *Var0 *Var1 *Var2 )
  5A0:  	Call  RotateModel   ( *VarA FFFFFFEC 00000000 00000000 00000001 )
  5C0:  	Wait  1`
  5CC:  	If  *VarB  ==  00000002
  5DC:  		BreakLoop
  5E4:  	EndIf
  5EC:  EndLoop
  5F4:  Call  RandInt   ( 00000050 *VarB )
  608:  Add   *VarB  0000001E
  618:  Loop  *VarB
  624:  	Call  TranslateModel    ( *VarA *Var0 *Var1 *Var2 )
  640:  	Call  RotateModel       ( *VarA FFFFFFEC 00000000 00000000 00000001 )
  660:  	Wait  1`
  66C:  EndLoop
  674:  Goto  0
  680:  Return
  688:  End
}

#new:Script $Script_80226B40
{
    0:  Set   *VarA  *Var0
   10:  Loop
   1C:  	Call  TranslateModel    ( *VarA 00000001 00000000 00000000 )
   38:  	Wait  2`
   44:  	Call  TranslateModel    ( *VarA 00000001 00000000 00000000 )
   60:  	Wait  2`
   6C:  	Call  TranslateModel    ( *VarA 00000001 FFFFFFFF 00000000 )
   88:  	Wait  2`
   94:  	Call  TranslateModel    ( *VarA 00000002 FFFFFFFF 00000000 )
   B0:  	Wait  2`
   BC:  	Call  TranslateModel    ( *VarA 00000002 FFFFFFFF 00000000 )
   D8:  	Wait  2`
   E4:  	Call  TranslateModel    ( *VarA 00000002 FFFFFFFF 00000000 )
  100:  	Wait  2`
  10C:  	Call  TranslateModel    ( *VarA 00000003 FFFFFFFE 00000000 )
  128:  	Wait  2`
  134:  	Call  TranslateModel    ( *VarA 00000003 FFFFFFFE 00000000 )
  150:  	Wait  2`
  15C:  	Call  TranslateModel    ( *VarA 00000003 FFFFFFFD 00000000 )
  178:  	Wait  2`
  184:  	Call  TranslateModel    ( *VarA 00000003 FFFFFFFD 00000000 )
  1A0:  	Wait  2`
  1AC:  	Call  TranslateModel    ( *VarA 00000003 FFFFFFFD 00000000 )
  1C8:  	Wait  2`
  1D4:  	Call  TranslateModel    ( *VarA 00000003 FFFFFFFE 00000000 )
  1F0:  	Wait  2`
  1FC:  	Call  TranslateModel    ( *VarA 00000002 FFFFFFFE 00000000 )
  218:  	Wait  2`
  224:  	Call  TranslateModel    ( *VarA 00000002 FFFFFFFF 00000000 )
  240:  	Wait  2`
  24C:  	Call  TranslateModel    ( *VarA 00000001 00000000 00000000 )
  268:  	Wait  2`
  274:  	Call  TranslateModel    ( *VarA 00000001 00000001 00000000 )
  290:  	Wait  2`
  29C:  	Call  TranslateModel    ( *VarA 00000000 00000001 00000000 )
  2B8:  	Wait  2`
  2C4:  	Call  TranslateModel    ( *VarA FFFFFFFF 00000001 00000000 )
  2E0:  	Wait  2`
  2EC:  	Call  TranslateModel    ( *VarA FFFFFFFF 00000001 00000000 )
  308:  	Wait  2`
  314:  	Call  TranslateModel    ( *VarA FFFFFFFF 00000000 00000000 )
  330:  	Wait  2`
  33C:  	Call  TranslateModel    ( *VarA FFFFFFFF 00000000 00000000 )
  358:  	Wait  2`
  364:  	Call  TranslateModel    ( *VarA 00000000 00000000 00000000 )
  380:  	Wait  2`
  38C:  EndLoop
  394:  Return
  39C:  End
}

#new:IntTable $IntTable_80226EE4
{
	00000000 FFFFFFFF FFFFFFFF FFFFFFFE FFFFFFFE FFFFFFFD FFFFFFFB FFFFFFF8
	FFFFFFF8 FFFFFFF9 FFFFFFFA FFFFFFFC FFFFFFFE FFFFFFFF 00000000 000000FF
}

#new:Script $Script_80226F24
{
    0:  Set   *VarA  *Var0
   10:  Set   *VarB  *Var1
   20:  Set   *Var5  00000005
   30:  UseIntBuffer  $IntTable_80226EE4
   3C:  Label  0
   48:  Get1Int  *Var1
   54:  If  *Var1  ==  000000FF
   64:  	UseIntBuffer  $IntTable_80226EE4
   70:  	Get1Int  *Var1
   7C:  EndIf
   84:  Set   *Var0  *Var5
   94:  Call  TranslateModel    ( *VarA *Var0 *Var1 00000000 )
   B0:  Wait  1`
   BC:  Add   *Var5  00000001
   CC:  Set   *VarC  *VarB
   DC:  Sub   *VarC  00000014
   EC:  If  *Var5  >  *VarC
   FC:  	Goto  1
  108:  EndIf
  110:  Set   *Var0  *Var5
  120:  Call  TranslateModel    ( *VarA *Var0 *Var1 00000000 )
  13C:  Wait  1`
  148:  Add   *Var5  00000001
  158:  Set   *VarC  *VarB
  168:  Sub   *VarC  00000014
  178:  If  *Var5  >  *VarC
  188:  	Goto  1
  194:  EndIf
  19C:  Goto  0
  1A8:  Label  1
  1B4:  Set   *Var2  00000000
  1C4:  Loop  00000014
  1D0:  	Add   *Var5  00000001
  1E0:  	Sub   *Var1  00000002
  1F0:  	Set   *Var0  *Var5
  200:  	Call  TranslateModel    ( *VarA *Var0 *Var1 00000000 )
  21C:  	Wait  1`
  228:  EndLoop
  230:  Sub   *Var5  00000118
  240:  Set   *Var1  00000000
  250:  Goto  0
  25C:  Return
  264:  End
}

% Origin: HEURISTIC
#new:Script $Script_80227190
{
    0:  Set   *VarA  *Var0
   10:  Loop
   1C:  	Call  TranslateModel    ( *VarA 00000000 00000000 00000000 )
   38:  	Wait  2`
   44:  	Call  TranslateModel    ( *VarA 00000000 00000000 00000000 )
   60:  	Wait  2`
   6C:  	Call  TranslateModel    ( *VarA 00000000 FFFFFFFF 00000000 )
   88:  	Wait  2`
   94:  	Call  TranslateModel    ( *VarA 00000000 FFFFFFFF 00000000 )
   B0:  	Wait  2`
   BC:  	Call  TranslateModel    ( *VarA 00000000 FFFFFFFF 00000000 )
   D8:  	Wait  2`
   E4:  	Call  TranslateModel    ( *VarA 00000000 FFFFFFFF 00000000 )
  100:  	Wait  2`
  10C:  	Call  TranslateModel    ( *VarA 00000000 FFFFFFFE 00000000 )
  128:  	Wait  2`
  134:  	Call  TranslateModel    ( *VarA 00000000 FFFFFFFE 00000000 )
  150:  	Wait  2`
  15C:  	Call  TranslateModel    ( *VarA 00000000 FFFFFFFD 00000000 )
  178:  	Wait  2`
  184:  	Call  TranslateModel    ( *VarA 00000000 FFFFFFFD 00000000 )
  1A0:  	Wait  2`
  1AC:  	Call  TranslateModel    ( *VarA 00000000 FFFFFFFD 00000000 )
  1C8:  	Wait  2`
  1D4:  	Call  TranslateModel    ( *VarA 00000000 FFFFFFFE 00000000 )
  1F0:  	Wait  2`
  1FC:  	Call  TranslateModel    ( *VarA 00000000 FFFFFFFE 00000000 )
  218:  	Wait  2`
  224:  	Call  TranslateModel    ( *VarA 00000000 FFFFFFFF 00000000 )
  240:  	Wait  2`
  24C:  	Call  TranslateModel    ( *VarA 00000000 00000000 00000000 )
  268:  	Wait  2`
  274:  	Call  TranslateModel    ( *VarA 00000000 00000001 00000000 )
  290:  	Wait  2`
  29C:  	Call  TranslateModel    ( *VarA 00000000 00000001 00000000 )
  2B8:  	Wait  2`
  2C4:  	Call  TranslateModel    ( *VarA 00000000 00000001 00000000 )
  2E0:  	Wait  2`
  2EC:  	Call  TranslateModel    ( *VarA 00000000 00000001 00000000 )
  308:  	Wait  2`
  314:  	Call  TranslateModel    ( *VarA 00000000 00000000 00000000 )
  330:  	Wait  2`
  33C:  	Call  TranslateModel    ( *VarA 00000000 00000000 00000000 )
  358:  	Wait  2`
  364:  	Call  TranslateModel    ( *VarA 00000000 00000000 00000000 )
  380:  	Wait  2`
  38C:  EndLoop
  394:  Return
  39C:  End
}

#new:Script $Script_BeforeBattle_80227534
{
    0:  Call  SetSpriteShading  ( FFFFFFFF )
   10:  Call  SetCamBGColor     ( .Cam:Battle  0`  0`  0` )
   2C:  Thread
   34:  	Set   *Var0  0000000F
   44:  	Exec  $Script_80226B40
   50:  	Wait  5`
   5C:  	Set   *Var0  00000010
   6C:  	Exec  $Script_80226B40
   78:  	Wait  5`
   84:  	Set   *Var0  00000011
   94:  	Exec  $Script_80226B40
   A0:  EndThread
   A8:  Thread
   B0:  	Wait  5`
   BC:  	Set   *Var0  00000009
   CC:  	Set   *Var1  00000091
   DC:  	Exec  $Script_80226F24
   E8:  	Set   *Var0  0000000A
   F8:  	Set   *Var1  00000091
  108:  	Exec  $Script_80226F24
  114:  EndThread
  11C:  Set   *Var0  0000000C
  12C:  Set   *Var1  0000003C
  13C:  Exec  $Script_80226F24
  148:  Set   *Var0  0000000D
  158:  Set   *Var1  0000003C
  168:  Exec  $Script_80226F24
  174:  Return
  17C:  End
}

#new:Script $Script_AfterBattle_802276B8
{
    0:  Return
    8:  End
}

#new:Stage $Stage_802276C8
{
	$ASCII_80227BA8  % tik_tex
	$ASCII_80227B98  % tik_bt04_shape
	$ASCII_80227B88  % tik_bt04_hit
	$Script_BeforeBattle_80227534
	$Script_AfterBattle_802276B8
	00000000
	00000000
	00000000
	00000000
	00000000
}

#new:Script $Script_802276F0
{
    0:  SetGroup  00000000
    C:  If  *Var5  ==  00000001
   1C:  	If  *Var6  ==  00000001
   2C:  		If  *Var7  ==  00000001
   3C:  			If  *Var8  ==  00000001
   4C:  				Call  $Function_80219E10 ( )
   58:  				Return
   60:  			EndIf
   68:  		EndIf
   70:  	EndIf
   78:  EndIf
   80:  Call  $Function_80219F34 ( )
   8C:  Return
   94:  End
}

#new:Script $Script_BeforeBattle_8022778C
{
    0:  Call  SetSpriteShading  ( FFFFFFFF )
   10:  Call  SetCamBGColor     ( .Cam:Battle  0`  0`  0` )
   2C:  Call  SetTexPanner      ( ~Model:tik_bt05:taki1 00000001 )
   40:  Call  EnableTexPanning  ( ~Model:tik_bt05:taki1 .True )
   54:  Thread
   5C:  	Set   *Var0  00000001
   6C:  	Set   *Var1  00000000
   7C:  	Set   *Var2  FFFFF574
   8C:  	Set   *Var3  00000000
   9C:  	Set   *Var4  FFFFF448
   AC:  	Set   *Var5  00000001
   BC:  	Set   *Var6  00000001
   CC:  	Set   *Var7  00000001
   DC:  	Set   *Var8  00000001
   EC:  	Set   *Var9  00000000
   FC:  	Set   *VarA  00000000
  10C:  	Set   *VarB  00000000
  11C:  	Set   *VarC  00000000
  12C:  	Exec  $Script_802276F0
  138:  EndThread
  140:  Call  SetTexPanner      ( ~Model:tik_bt05:taki2 00000002 )
  154:  Call  EnableTexPanning  ( ~Model:tik_bt05:taki2 .True )
  168:  Thread
  170:  	Set   *Var0  00000002
  180:  	Set   *Var1  00000032
  190:  	Set   *Var2  FFFFFF38
  1A0:  	Set   *Var3  0000006E
  1B0:  	Set   *Var4  FFFFFE0C
  1C0:  	Set   *Var5  00000001
  1D0:  	Set   *Var6  00000001
  1E0:  	Set   *Var7  00000001
  1F0:  	Set   *Var8  00000001
  200:  	Set   *Var9  00000000
  210:  	Set   *VarA  00000000
  220:  	Set   *VarB  00000000
  230:  	Set   *VarC  00000000
  240:  	Exec  $Script_802276F0
  24C:  EndThread
  254:  Return
  25C:  End
}

#new:Script $Script_AfterBattle_802279F0
{
    0:  Return
    8:  End
}

#new:ForegroundModelList $ForegroundModelList_80227A00
{
	~Model:tik_bt05:taki1
	00000000
}

#new:Stage $Stage_80227A08
{
	$ASCII_80227BD0  % tik_tex
	$ASCII_80227BC0  % tik_bt05_shape
	$ASCII_80227BB0  % tik_bt05_hit
	$Script_BeforeBattle_8022778C
	$Script_AfterBattle_802279F0
	00000000
	$ForegroundModelList_80227A00
	00000000
	00000000
	00000000
}

#new:Vector3D $Vector3D_80227A30
{
	80` 45` -10`
}

#new:Formation $Formation_00
{
	$Blooper $Vector3D_80227A30 0000000A 00000000 00000000 00000000 00000000
}

#new:Formation $Formation_01
{
	$ElectroBlooper $Vector3D_80227A30 0000000A 00000000 00000000 00000000 00000000
}

#new:Formation $Formation_02
{
	$SuperBlooper $Vector3D_80227A30 0000000A 00000000 00000000 00000000 00000000
}

#new:FormationTable $FormationTable
{
	$SJIS_80227C0C 00000001 $Formation_00 $Stage_80224F74 00000000
	$SJIS_80227BF8 00000001 $Formation_01 $Stage_80224F74 00000000
	$SJIS_80227BD8 00000001 $Formation_02 $Stage_80224F74 00000000
	00000000 00000000 00000000 00000000 00000000
}

#new:StageTable $StageTable
{
	$ASCII_80227C38 $Stage_80224F74
	$ASCII_80227C30 $Stage_80225B74
	$ASCII_80227C28 $Stage_80226480
	$ASCII_80227C20 $Stage_802276C8
	$ASCII_80227C18 $Stage_80227A08
	00000000 00000000
}

#new:ASCII $ASCII_80227B10
{
	"tik_bt01_hit"
}

#new:ASCII $ASCII_80227B20
{
	"tik_bt01_shape"
}

#new:ASCII $ASCII_80227B30
{
	"tik_tex"
}

#new:ASCII $ASCII_80227B38
{
	"tik_bt02_hit"
}

#new:ASCII $ASCII_80227B48
{
	"tik_bt02_shape"
}

#new:ASCII $ASCII_80227B58
{
	"tik_tex"
}

#new:ASCII $ASCII_80227B60
{
	"tik_bt03_hit"
}

#new:ASCII $ASCII_80227B70
{
	"tik_bt03_shape"
}

#new:ASCII $ASCII_80227B80
{
	"tik_tex"
}

#new:ASCII $ASCII_80227B88
{
	"tik_bt04_hit"
}

#new:ASCII $ASCII_80227B98
{
	"tik_bt04_shape"
}

#new:ASCII $ASCII_80227BA8
{
	"tik_tex"
}

#new:ASCII $ASCII_80227BB0
{
	"tik_bt05_hit"
}

#new:ASCII $ASCII_80227BC0
{
	"tik_bt05_shape"
}

#new:ASCII $ASCII_80227BD0
{
	"tik_tex"
}

#new:SJIS $SJIS_80227BD8
{
	ビッグゲッソー　チビゲッソー % biggugesso- chibigesso-
}

#new:SJIS $SJIS_80227BF8
{
	ビリビリゲッソー % biribirigesso-
}

#new:SJIS $SJIS_80227C0C
{
	ゲッソー % gesso-
}

#new:ASCII $ASCII_80227C18
{
	"tik_05"
}

#new:ASCII $ASCII_80227C20
{
	"tik_04"
}

#new:ASCII $ASCII_80227C28
{
	"tik_03"
}

#new:ASCII $ASCII_80227C30
{
	"tik_02"
}

#new:ASCII $ASCII_80227C38
{
	"tik_01"
}

