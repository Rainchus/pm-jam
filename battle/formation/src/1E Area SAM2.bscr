% Script File: 1E Area SAM2.bscr
% Decoded from: 63D1E0 to 648E10 (1E Area SAM2)

#new:Function $Function_80218000
{
    0:  ADDIU     SP, SP, FF48
    4:  SW        S2, 88 (SP)
    8:  COPY      S2, A0
    C:  SW        RA, 98 (SP)
   10:  SW        S5, 94 (SP)
   14:  SW        S4, 90 (SP)
   18:  SW        S3, 8C (SP)
   1C:  SW        S1, 84 (SP)
   20:  SW        S0, 80 (SP)
   24:  SDC1      F24, B0 (SP)
   28:  SDC1      F22, A8 (SP)
   2C:  SDC1      F20, A0 (SP)
   30:  LW        A0, 148 (S2)
   34:  JAL       ~Func:get_actor
   38:  COPY      S0, A1
   3C:  COPY      A0, V0
   40:  JAL       ~Func:get_actor_part
   44:  LI        A1, 1
   48:  BEQ       S0, R0, .o84
   4C:  COPY      S4, V0
   50:  CLEAR     A1
   54:  LI        A2, 11
   58:  LI        V0, FF
   5C:  SW        R0, 74 (S2)
   60:  SW        R0, 78 (S2)
   64:  SW        R0, 70 (S2)
   68:  SW        R0, 10 (SP)
   6C:  SW        R0, 14 (SP)
   70:  SW        V0, 18 (SP)
   74:  SW        R0, 1C (SP)
   78:  LW        A0, 84 (S4)
   7C:  JAL       802DE780
   80:  LI        A3, 14
        .o84
   84:  LI        A1, 1
   88:  LI        V0, FF
   8C:  SW        V0, 10 (SP)
   90:  SW        R0, 14 (SP)
   94:  SW        V0, 18 (SP)
   98:  SW        R0, 1C (SP)
   9C:  LW        A0, 84 (S4)
   A0:  LA        A3, $???_8021A2B8
   A8:  JAL       802DE780
   AC:  LI        A2, F
   B0:  LW        V0, 74 (S2)
   B4:  ADDIU     A0, V0, A
   B8:  SLTI      V0, A0, 168
   BC:  BNE       V0, R0, .o100
   C0:  SW        A0, 74 (S2)
   C4:  LI        V0, B60B60B7
   CC:  MULT      A0, V0
   D0:  SRA       V1, A0, 1F
   D4:  MFHI      T0
   D8:  ADDU      V0, T0, A0
   DC:  SRA       V0, V0, 8
   E0:  SUBU      V0, V0, V1
   E4:  SLL       V1, V0, 1
   E8:  ADDU      V1, V1, V0
   EC:  SLL       V0, V1, 4
   F0:  SUBU      V0, V0, V1
   F4:  SLL       V0, V0, 3
   F8:  SUBU      V0, A0, V0
   FC:  SW        V0, 74 (S2)
        .o100
  100:  CLEAR     S0
  104:  LUI       S3, 8000
  108:  COPY      S1, S0
  10C:  LIF       F25, 1.875
  114:  MTC1      R0, F24
  118:  LIF       F23, 3.1875
  120:  MTC1      R0, F22
  124:  LIF       F21, 28.0
  12C:  MTC1      R0, F20
        .o130
  130:  LHU       A0, 76 (S2)
  134:  ADDU      A0, A0, S1
  138:  SLL       A0, A0, 10
  13C:  JAL       ~Func:cosine
  140:  SRA       A0, A0, 10
  144:  CVT.D.S   F0, F0
  148:  ADD.D     F0, F0, F24
  14C:  MUL.D     F0, F0, F22
  150:  NOP
  154:  ADDIU     V0, SP, 20
  158:  C.LE.D    F20, F0
  15C:  NOP
  160:  BC1T      .o178
  164:  ADDU      V0, V0, S0
  168:  TRUNC.W.D F2, F0
  16C:  MFC1      V1, F2
  170:  BEQ       R0, R0, .o190
  174:  SB        V1, 0 (V0)
        .o178
  178:  SUB.D     F0, F0, F20
  17C:  TRUNC.W.D F2, F0
  180:  MFC1      V1, F2
  184:  NOP
  188:  OR        V1, V1, S3
  18C:  SB        V1, 0 (V0)
        .o190
  190:  LHU       A0, 76 (S2)
  194:  ADDU      A0, A0, S1
  198:  ADDIU     A0, A0, 2D
  19C:  SLL       A0, A0, 10
  1A0:  JAL       ~Func:cosine
  1A4:  SRA       A0, A0, 10
  1A8:  CVT.D.S   F0, F0
  1AC:  ADD.D     F0, F0, F24
  1B0:  MUL.D     F0, F0, F22
  1B4:  NOP
  1B8:  ADDIU     V0, SP, 38
  1BC:  C.LE.D    F20, F0
  1C0:  NOP
  1C4:  BC1T      .o1DC
  1C8:  ADDU      V0, V0, S0
  1CC:  TRUNC.W.D F2, F0
  1D0:  MFC1      V1, F2
  1D4:  BEQ       R0, R0, .o1F4
  1D8:  SB        V1, 0 (V0)
        .o1DC
  1DC:  SUB.D     F0, F0, F20
  1E0:  TRUNC.W.D F2, F0
  1E4:  MFC1      V1, F2
  1E8:  NOP
  1EC:  OR        V1, V1, S3
  1F0:  SB        V1, 0 (V0)
        .o1F4
  1F4:  LHU       A0, 76 (S2)
  1F8:  ADDU      A0, A0, S1
  1FC:  ADDIU     A0, A0, 5A
  200:  SLL       A0, A0, 10
  204:  JAL       ~Func:cosine
  208:  SRA       A0, A0, 10
  20C:  CVT.D.S   F0, F0
  210:  ADD.D     F0, F0, F24
  214:  MUL.D     F0, F0, F22
  218:  NOP
  21C:  ADDIU     V0, SP, 50
  220:  C.LE.D    F20, F0
  224:  NOP
  228:  BC1T      .o240
  22C:  ADDU      V0, V0, S0
  230:  TRUNC.W.D F2, F0
  234:  MFC1      V1, F2
  238:  BEQ       R0, R0, .o258
  23C:  SB        V1, 0 (V0)
        .o240
  240:  SUB.D     F0, F0, F20
  244:  TRUNC.W.D F2, F0
  248:  MFC1      V1, F2
  24C:  NOP
  250:  OR        V1, V1, S3
  254:  SB        V1, 0 (V0)
        .o258
  258:  ADDIU     S0, S0, 1
  25C:  SLTI      V0, S0, 14
  260:  BNE       V0, R0, .o130
  264:  ADDIU     S1, S1, 19
  268:  CLEAR     S0
  26C:  ADDIU     S3, SP, 20
  270:  ADDIU     S2, SP, 38
  274:  ADDIU     S1, SP, 50
  278:  LI        S5, FF
  27C:  CLEAR     A1
        .o280
  280:  LI        A2, C
  284:  ADDU      V0, S3, S0
  288:  ADDU      V1, S2, S0
  28C:  ADDU      A0, S1, S0
  290:  LBU       V0, 0 (V0)
  294:  LBU       V1, 0 (V1)
  298:  LBU       A0, 0 (A0)
  29C:  COPY      A3, S0
  2A0:  SW        R0, 14 (SP)
  2A4:  SW        S5, 18 (SP)
  2A8:  SW        R0, 1C (SP)
  2AC:  SLL       V0, V0, 18
  2B0:  SLL       V1, V1, 10
  2B4:  OR        V0, V0, V1
  2B8:  SLL       A0, A0, 8
  2BC:  OR        V0, V0, A0
  2C0:  ORI       V0, V0, FF
  2C4:  SW        V0, 10 (SP)
  2C8:  LW        A0, 84 (S4)
  2CC:  JAL       802DE780
  2D0:  ADDIU     S0, S0, 1
  2D4:  SLTI      V0, S0, 14
  2D8:  BNE       V0, R0, .o280
  2DC:  CLEAR     A1
  2E0:  LW        RA, 98 (SP)
  2E4:  LW        S5, 94 (SP)
  2E8:  LW        S4, 90 (SP)
  2EC:  LW        S3, 8C (SP)
  2F0:  LW        S2, 88 (SP)
  2F4:  LW        S1, 84 (SP)
  2F8:  LW        S0, 80 (SP)
  2FC:  LDC1      F24, B0 (SP)
  300:  LDC1      F22, A8 (SP)
  304:  LDC1      F20, A0 (SP)
  308:  CLEAR     V0
  30C:  JR        RA
  310:  ADDIU     SP, SP, B8
}

% Origin: HEURISTIC
#new:Function $Function_80218314
{
    0:  ADDIU     SP, SP, FFD0
    4:  SW        S6, 28 (SP)
    8:  COPY      S6, A0
    C:  SW        RA, 2C (SP)
   10:  SW        S5, 24 (SP)
   14:  SW        S4, 20 (SP)
   18:  SW        S3, 1C (SP)
   1C:  SW        S2, 18 (SP)
   20:  SW        S1, 14 (SP)
   24:  SW        S0, 10 (SP)
   28:  LW        S5, C (S6)
   2C:  LW        A1, 0 (S5)
   30:  JAL       ~Func:get_variable
   34:  ADDIU     S5, S5, 4
   38:  LW        A1, 0 (S5)
   3C:  ADDIU     S5, S5, 4
   40:  COPY      A0, S6
   44:  JAL       ~Func:get_variable
   48:  COPY      S3, V0
   4C:  LW        A1, 0 (S5)
   50:  ADDIU     S5, S5, 4
   54:  COPY      A0, S6
   58:  JAL       ~Func:get_variable
   5C:  COPY      S2, V0
   60:  LW        A1, 0 (S5)
   64:  ADDIU     S5, S5, 4
   68:  COPY      A0, S6
   6C:  JAL       ~Func:get_variable
   70:  COPY      S0, V0
   74:  LW        A1, 0 (S5)
   78:  ADDIU     S5, S5, 4
   7C:  COPY      A0, S6
   80:  JAL       ~Func:get_variable
   84:  COPY      S4, V0
   88:  COPY      A0, S6
   8C:  LW        A1, 0 (S5)
   90:  JAL       ~Func:get_variable
   94:  COPY      S1, V0
   98:  SUBU      S3, S3, S4
   9C:  MTC1      S3, F4
   A0:  NOP
   A4:  CVT.S.W   F4, F4
   A8:  MUL.S     F4, F4, F4
   AC:  NOP
   B0:  SUBU      S2, S2, S1
   B4:  MTC1      S2, F2
   B8:  NOP
   BC:  CVT.S.W   F2, F2
   C0:  MUL.S     F2, F2, F2
   C4:  NOP
   C8:  SUBU      S0, S0, V0
   CC:  MTC1      S0, F0
   D0:  NOP
   D4:  CVT.S.W   F0, F0
   D8:  MUL.S     F0, F0, F0
   DC:  NOP
   E0:  ADD.S     F4, F4, F2
   E4:  ADD.S     F12, F4, F0
   E8:  SQRT.S    F0, F12
   EC:  C.EQ.S    F0, F0
   F0:  NOP
   F4:  BC1T      .o104
   F8:  ADDIU     S5, S5, 4
   FC:  JAL       ~Func:sqrtf
  100:  NOP
        .o104
  104:  LW        A1, 0 (S5)
  108:  TRUNC.W.S F6, F0
  10C:  MFC1      A2, F6
  110:  JAL       ~Func:set_variable
  114:  COPY      A0, S6
  118:  LW        RA, 2C (SP)
  11C:  LW        S6, 28 (SP)
  120:  LW        S5, 24 (SP)
  124:  LW        S4, 20 (SP)
  128:  LW        S3, 1C (SP)
  12C:  LW        S2, 18 (SP)
  130:  LW        S1, 14 (SP)
  134:  LW        S0, 10 (SP)
  138:  LI        V0, 2
  13C:  JR        RA
  140:  ADDIU     SP, SP, 30
}

#new:Function $Function_80218458
{
    0:  ADDIU     SP, SP, FFE8
    4:  SW        RA, 10 (SP)
    8:  JAL       ~Func:mdl_set_all_fog_mode
    C:  LI        A0, 1
   10:  CLEAR     A0
   14:  LI        V0, 1
   18:  COPY      A1, A0
   1C:  COPY      A2, A0
   20:  LAW       V1, 801512F0
   28:  COPY      A3, A0
   2C:  JAL       ~Func:set_background_color_blend
   30:  SB        V0, 0 (V1)
   34:  LW        RA, 10 (SP)
   38:  LI        V0, 2
   3C:  JR        RA
   40:  ADDIU     SP, SP, 18
}

#new:Function $Function_8021849C
{
    0:  ADDIU     SP, SP, FFE8
    4:  SW        RA, 10 (SP)
    8:  LW        V0, C (A0)
    C:  JAL       ~Func:get_variable
   10:  LW        A1, 0 (V0)
   14:  CLEAR     A0
   18:  COPY      A1, A0
   1C:  COPY      A2, A0
   20:  JAL       ~Func:set_background_color_blend
   24:  ANDI      A3, V0, FF
   28:  LW        RA, 10 (SP)
   2C:  LI        V0, 2
   30:  JR        RA
   34:  ADDIU     SP, SP, 18
}

#new:Function $Function_802184D4
{
    0:  ADDIU     SP, SP, FFE0
    4:  SW        S1, 14 (SP)
    8:  COPY      S1, A0
    C:  SW        RA, 18 (SP)
   10:  SW        S0, 10 (SP)
   14:  LW        S0, C (S1)
   18:  LW        A1, 0 (S0)
   1C:  JAL       ~Func:get_variable
   20:  ADDIU     S0, S0, 4
   24:  COPY      A0, S1
   28:  LW        A1, 0 (S0)
   2C:  JAL       ~Func:get_variable
   30:  COPY      S0, V0
   34:  COPY      A0, S0
   38:  JAL       ~Func:start_rumble
   3C:  COPY      A1, V0
   40:  LW        RA, 18 (SP)
   44:  LW        S1, 14 (SP)
   48:  LW        S0, 10 (SP)
   4C:  LI        V0, 2
   50:  JR        RA
   54:  ADDIU     SP, SP, 20
}

PADDING: 8021852C to 80218530 (0063D70C to 0063D710)
00000000

#new:Function $Function_80218530
{
    0:  ADDIU     SP, SP, FFE0
    4:  SW        S1, 14 (SP)
    8:  COPY      S1, A0
    C:  SW        RA, 18 (SP)
   10:  SW        S0, 10 (SP)
   14:  LW        S0, C (S1)
   18:  LW        A1, 0 (S0)
   1C:  JAL       ~Func:get_variable
   20:  ADDIU     S0, S0, 4
   24:  COPY      A0, S1
   28:  LW        A1, 0 (S0)
   2C:  JAL       ~Func:get_variable
   30:  COPY      S0, V0
   34:  COPY      A0, S0
   38:  JAL       ~Func:start_rumble
   3C:  COPY      A1, V0
   40:  LW        RA, 18 (SP)
   44:  LW        S1, 14 (SP)
   48:  LW        S0, 10 (SP)
   4C:  LI        V0, 2
   50:  JR        RA
   54:  ADDIU     SP, SP, 20
}

#new:Function $Function_80218588
{
    0:  ADDIU     SP, SP, FFD8
    4:  SDC1      F22, 20 (SP)
    8:  MOV.S     F22, F12
    C:  SDC1      F20, 18 (SP)
   10:  SW        RA, 10 (SP)
   14:  JAL       ~Func:length2D
   18:  MOV.S     F20, F14
   1C:  TRUNC.W.S F6, F20
   20:  MFC1      V0, F6
   24:  NOP
   28:  BLTZL     V0, .o30
   2C:  SUBU      V0, R0, V0
        .o30
   30:  MTC1      V0, F2
   34:  NOP
   38:  CVT.S.W   F2, F2
   3C:  DIV.S     F4, F2, F0
   40:  CLEAR     A0
   44:  LI        A2, 5A
   48:  COPY      A1, A0
   4C:  LA        A3, $FloatTable_8021E2FC
   54:  ANDI      V0, A2, FFFF
        .o58
   58:  ANDI      V1, A0, FFFF
   5C:  SUBU      V0, V0, V1
   60:  SRL       V1, V0, 1F
   64:  ADDU      V0, V0, V1
   68:  SRA       V0, V0, 1
   6C:  ADDU      V1, A0, V0
   70:  ANDI      V0, V1, FFFF
   74:  SLL       V0, V0, 2
   78:  ADDU      V0, V0, A3
   7C:  LWC1      F0, 0 (V0)
   80:  C.LT.S    F0, F4
   84:  NOP
   88:  BC1FL     .o94
   8C:  COPY      A2, V1
   90:  COPY      A0, V1
        .o94
   94:  ADDIU     A1, A1, 1
   98:  ANDI      V0, A1, FFFF
   9C:  SLTIU     V0, V0, 7
   A0:  BNE       V0, R0, .o58
   A4:  ANDI      V0, A2, FFFF
   A8:  ANDI      V0, A0, FFFF
   AC:  SLL       V0, V0, 2
   B0:  ANDI      V1, A2, FFFF
   B4:  LTF       F2, V0 ($FloatTable_8021E2FC)
   C0:  SLL       V1, V1, 2
   C4:  SUB.S     F2, F2, F4
   C8:  LTF       F0, V1 ($FloatTable_8021E2FC)
   D4:  SUB.S     F0, F0, F4
   D8:  ABS.S     F2, F2
   DC:  ABS.S     F0, F0
   E0:  C.LT.S    F2, F0
   E4:  NOP
   E8:  BC1F      .oF4
   EC:  COPY      V1, A2
   F0:  COPY      V1, A0
        .oF4
   F4:  MTC1      R0, F0
   F8:  NOP
   FC:  C.LT.S    F22, F0
  100:  NOP
  104:  BC1F      .o130
  108:  NOP
  10C:  C.LE.S    F0, F20
  110:  NOP
  114:  BC1F      .o128
  118:  LI        V0, B4
  11C:  SUBU      V1, V0, V1
  120:  MTC1      R0, F0
  124:  NOP
        .o128
  128:  C.LT.S    F22, F0
  12C:  NOP
        .o130
  130:  BC1F      .o148
  134:  NOP
  138:  C.LT.S    F20, F0
  13C:  NOP
  140:  BC1TL     .o148
  144:  ADDIU     V1, V1, B4
        .o148
  148:  MTC1      R0, F0
  14C:  NOP
  150:  C.LE.S    F0, F22
  154:  NOP
  158:  BC1F      .o174
  15C:  NOP
  160:  C.LT.S    F20, F0
  164:  NOP
  168:  BC1F      .o174
  16C:  LI        V0, 168
  170:  SUBU      V1, V0, V1
        .o174
  174:  LW        RA, 10 (SP)
  178:  LDC1      F22, 20 (SP)
  17C:  LDC1      F20, 18 (SP)
  180:  ANDI      V0, V1, FFFF
  184:  JR        RA
  188:  ADDIU     SP, SP, 28
}

#new:Function $Function_80218714
{
    0:  ADDIU     SP, SP, FFD8
    4:  SW        S4, 20 (SP)
    8:  COPY      S4, A0
    C:  SW        RA, 24 (SP)
   10:  SW        S3, 1C (SP)
   14:  SW        S2, 18 (SP)
   18:  SW        S1, 14 (SP)
   1C:  SW        S0, 10 (SP)
   20:  LW        S2, C (S4)
   24:  LW        A1, 0 (S2)
   28:  JAL       ~Func:get_variable
   2C:  ADDIU     S2, S2, 4
   30:  LW        A1, 0 (S2)
   34:  ADDIU     S2, S2, 4
   38:  COPY      A0, S4
   3C:  JAL       ~Func:get_variable
   40:  COPY      S0, V0
   44:  LW        A1, 0 (S2)
   48:  ADDIU     S2, S2, 4
   4C:  COPY      A0, S4
   50:  JAL       ~Func:get_variable
   54:  COPY      S1, V0
   58:  COPY      S3, V0
   5C:  LW        A1, 0 (S2)
   60:  ADDIU     S2, S2, 4
   64:  COPY      A0, S4
   68:  JAL       ~Func:get_variable
   6C:  SUBU      S3, S3, S0
   70:  COPY      S0, V0
   74:  COPY      A0, S4
   78:  LW        A1, 0 (S2)
   7C:  JAL       ~Func:get_variable
   80:  SUBU      S0, S0, S1
   84:  BNE       S3, R0, .oA0
   88:  NOP
   8C:  BNE       S0, R0, .oA0
   90:  COPY      A0, S4
   94:  LW        A1, 0 (S2)
   98:  BEQ       R0, R0, .oC8
   9C:  COPY      A2, V0
        .oA0
   A0:  MTC1      S3, F12
   A4:  NOP
   A8:  CVT.S.W   F12, F12
   AC:  MTC1      S0, F14
   B0:  NOP
   B4:  JAL       $Function_80218588
   B8:  CVT.S.W   F14, F14
   BC:  COPY      A0, S4
   C0:  LW        A1, 0 (S2)
   C4:  ADDIU     A2, V0, FFA6
        .oC8
   C8:  JAL       ~Func:set_variable
   CC:  NOP
   D0:  LI        V0, 2
   D4:  LW        RA, 24 (SP)
   D8:  LW        S4, 20 (SP)
   DC:  LW        S3, 1C (SP)
   E0:  LW        S2, 18 (SP)
   E4:  LW        S1, 14 (SP)
   E8:  LW        S0, 10 (SP)
   EC:  JR        RA
   F0:  ADDIU     SP, SP, 28
}

PADDING: 80218808 to 80218810 (0063D9E8 to 0063D9F0)
00000000 00000000

% Origin: HINT
#new:Function $Function_80218810
{
    0:  ADDIU     SP, SP, FFA0
    4:  SW        S1, 24 (SP)
    8:  COPY      S1, A0
    C:  SW        RA, 28 (SP)
   10:  SW        S0, 20 (SP)
   14:  SDC1      F30, 58 (SP)
   18:  SDC1      F28, 50 (SP)
   1C:  SDC1      F26, 48 (SP)
   20:  SDC1      F24, 40 (SP)
   24:  SDC1      F22, 38 (SP)
   28:  SDC1      F20, 30 (SP)
   2C:  LW        S0, C (S1)
   30:  LW        A1, 0 (S0)
   34:  JAL       ~Func:get_float_variable
   38:  ADDIU     S0, S0, 4
   3C:  LW        A1, 0 (S0)
   40:  ADDIU     S0, S0, 4
   44:  COPY      A0, S1
   48:  JAL       ~Func:get_float_variable
   4C:  MOV.S     F30, F0
   50:  LW        A1, 0 (S0)
   54:  ADDIU     S0, S0, 4
   58:  COPY      A0, S1
   5C:  JAL       ~Func:get_float_variable
   60:  MOV.S     F20, F0
   64:  LW        A1, 0 (S0)
   68:  ADDIU     S0, S0, 4
   6C:  COPY      A0, S1
   70:  JAL       ~Func:get_float_variable
   74:  MOV.S     F28, F0
   78:  LW        A1, 0 (S0)
   7C:  ADDIU     S0, S0, 4
   80:  COPY      A0, S1
   84:  JAL       ~Func:get_float_variable
   88:  MOV.S     F26, F0
   8C:  LW        A1, 0 (S0)
   90:  ADDIU     S0, S0, 4
   94:  COPY      A0, S1
   98:  JAL       ~Func:get_float_variable
   9C:  MOV.S     F24, F0
   A0:  COPY      A0, S1
   A4:  LW        A1, 0 (S0)
   A8:  JAL       ~Func:get_variable
   AC:  MOV.S     F22, F0
   B0:  LW        A0, 148 (S1)
   B4:  JAL       ~Func:get_actor
   B8:  COPY      S0, V0
   BC:  CVT.D.S   F20, F20
   C0:  MFC1      A1, F30
   C4:  LIF       F1, 2.3125
   CC:  MTC1      R0, F0
   D0:  MFC1      A3, F28
   D4:  ADD.D     F20, F20, F0
   D8:  CLEAR     A0
   DC:  SW        S0, 1C (SP)
   E0:  CVT.S.D   F20, F20
   E4:  MFC1      A2, F20
   E8:  COPY      S0, V0
   EC:  SWC1      F26, 10 (SP)
   F0:  SWC1      F24, 14 (SP)
   F4:  JAL       ~Func:playFX_12
   F8:  SWC1      F22, 18 (SP)
   FC:  COPY      A0, V0
  100:  LB        V1, 210 (S0)
  104:  LI        V0, A
  108:  BNE       V1, V0, .o128
  10C:  NOP
  110:  LW        V0, C (A0)
  114:  LIF       F0, 0.39804688
  120:  NOP
  124:  SWC1      F0, 28 (V0)
        .o128
  128:  LW        RA, 28 (SP)
  12C:  LW        S1, 24 (SP)
  130:  LW        S0, 20 (SP)
  134:  LDC1      F30, 58 (SP)
  138:  LDC1      F28, 50 (SP)
  13C:  LDC1      F26, 48 (SP)
  140:  LDC1      F24, 40 (SP)
  144:  LDC1      F22, 38 (SP)
  148:  LDC1      F20, 30 (SP)
  14C:  LI        V0, 2
  150:  JR        RA
  154:  ADDIU     SP, SP, 60
}

% Origin: HINT
#new:Function $Function_80218968
{
    0:  ADDIU     SP, SP, FFE8
    4:  SW        RA, 10 (SP)
    8:  LW        V0, C (A0)
    C:  LAH       A2, 800DC1EC
   14:  JAL       ~Func:set_variable
   18:  LW        A1, 0 (V0)
   1C:  LW        RA, 10 (SP)
   20:  LI        V0, 2
   24:  JR        RA
   28:  ADDIU     SP, SP, 18
}

% Origin: HINT
#new:Function $Function_80218994
{
    0:  ADDIU     SP, SP, FFD8
    4:  SW        S1, 14 (SP)
    8:  COPY      S1, A0
    C:  SW        RA, 20 (SP)
   10:  SW        S3, 1C (SP)
   14:  SW        S2, 18 (SP)
   18:  SW        S0, 10 (SP)
   1C:  LW        S0, C (S1)
   20:  LW        A1, 0 (S0)
   24:  JAL       ~Func:get_variable
   28:  ADDIU     S0, S0, 4
   2C:  LW        A1, 0 (S0)
   30:  ADDIU     S0, S0, 4
   34:  COPY      A0, S1
   38:  JAL       ~Func:get_variable
   3C:  COPY      S3, V0
   40:  LW        A1, 0 (S0)
   44:  ADDIU     S0, S0, 4
   48:  COPY      A0, S1
   4C:  JAL       ~Func:get_variable
   50:  COPY      S2, V0
   54:  COPY      A0, S1
   58:  LW        A1, 0 (S0)
   5C:  JAL       ~Func:get_variable
   60:  COPY      S0, V0
   64:  LW        A0, 148 (S1)
   68:  JAL       ~Func:get_actor
   6C:  COPY      S1, V0
   70:  COPY      V1, V0
   74:  LW        V0, 8 (V1)
   78:  LBU       V0, 24 (V0)
   7C:  LW        A0, 8 (V1)
   80:  SUBU      S3, S3, V0
   84:  SB        S3, 194 (V1)
   88:  LBU       V0, 25 (A0)
   8C:  SUBU      S2, S2, V0
   90:  SB        S2, 195 (V1)
   94:  LBU       V0, 26 (A0)
   98:  SUBU      S0, S0, V0
   9C:  SB        S0, 196 (V1)
   A0:  LBU       A0, 27 (A0)
   A4:  SUBU      S1, S1, A0
   A8:  SB        S1, 197 (V1)
   AC:  LW        RA, 20 (SP)
   B0:  LW        S3, 1C (SP)
   B4:  LW        S2, 18 (SP)
   B8:  LW        S1, 14 (SP)
   BC:  LW        S0, 10 (SP)
   C0:  LI        V0, 2
   C4:  JR        RA
   C8:  ADDIU     SP, SP, 28
}

% Origin: HINT
#new:Function $Function_80218A60
{
    0:  ADDIU     SP, SP, FFE0
    4:  SW        S1, 14 (SP)
    8:  COPY      S1, A0
    C:  SW        RA, 18 (SP)
   10:  SW        S0, 10 (SP)
   14:  LW        S0, C (S1)
   18:  LW        A1, 0 (S0)
   1C:  JAL       ~Func:get_variable
   20:  ADDIU     S0, S0, 4
   24:  COPY      A0, S1
   28:  LW        A1, 0 (S0)
   2C:  JAL       ~Func:get_variable
   30:  COPY      S0, V0
   34:  COPY      A0, S0
   38:  JAL       ~Func:start_rumble
   3C:  COPY      A1, V0
   40:  LW        RA, 18 (SP)
   44:  LW        S1, 14 (SP)
   48:  LW        S0, 10 (SP)
   4C:  LI        V0, 2
   50:  JR        RA
   54:  ADDIU     SP, SP, 20
}

% Origin: HINT
#new:Function $Function_80218AB8
{
    0:  ADDIU     SP, SP, FFE0
    4:  SW        S1, 14 (SP)
    8:  COPY      S1, A0
    C:  SW        RA, 18 (SP)
   10:  SW        S0, 10 (SP)
   14:  LW        S0, C (S1)
   18:  LW        A1, 0 (S0)
   1C:  JAL       ~Func:get_variable
   20:  ADDIU     S0, S0, 4
   24:  COPY      A0, V0
   28:  LI        V0, FF81
   2C:  BNE       A0, V0, .o38
   30:  NOP
   34:  LW        A0, 148 (S1)
        .o38
   38:  JAL       ~Func:get_actor
   3C:  NOP
   40:  COPY      A0, V0
   44:  LBU       V1, 136 (A0)
   48:  LI        V0, 47
   4C:  BEQ       V1, V0, .o7C
   50:  SLT       V0, V1, V0
   54:  BNEL      V0, R0, .o9C
   58:  COPY      A0, S1
   5C:  SLTI      V0, V1, 65
   60:  BEQ       V0, R0, .o98
   64:  SLTI      V0, V1, 4D
   68:  BNE       V0, R0, .o9C
   6C:  COPY      A0, S1
   70:  LW        A1, 0 (S0)
   74:  BEQ       R0, R0, .oA4
   78:  LI        A2, FFFF
        .o7C
   7C:  LW        V1, A8 (A0)
   80:  LI        V0, 1
   84:  BNE       V1, V0, .o9C
   88:  COPY      A0, S1
   8C:  LW        A1, 0 (S0)
   90:  BEQ       R0, R0, .oA4
   94:  LI        A2, FFFF
        .o98
   98:  COPY      A0, S1
        .o9C
   9C:  LW        A1, 0 (S0)
   A0:  CLEAR     A2
        .oA4
   A4:  JAL       ~Func:set_variable
   A8:  NOP
   AC:  LW        RA, 18 (SP)
   B0:  LW        S1, 14 (SP)
   B4:  LW        S0, 10 (SP)
   B8:  LI        V0, 2
   BC:  JR        RA
   C0:  ADDIU     SP, SP, 20
}

PADDING: 80218B7C to 80218B80 (0063DD5C to 0063DD60)
00000000

% Origin: HEURISTIC
#new:Function $Function_80218B80
{
    0:  ADDIU     SP, SP, FFC0
    4:  SW        S6, 38 (SP)
    8:  COPY      S6, A0
    C:  ADDIU     A1, SP, 10
   10:  ADDIU     A2, SP, 14
   14:  ADDIU     A3, SP, 18
   18:  SW        RA, 3C (SP)
   1C:  SW        S5, 34 (SP)
   20:  SW        S4, 30 (SP)
   24:  SW        S3, 2C (SP)
   28:  SW        S2, 28 (SP)
   2C:  SW        S1, 24 (SP)
   30:  JAL       ~Func:mdl_get_copied_vertices
   34:  SW        S0, 20 (SP)
   38:  LW        V0, 18 (SP)
   3C:  BLEZ      V0, .o188
   40:  CLEAR     S0
   44:  LA        V1, $???_80221DF0
   4C:  SLL       V0, S6, 1
   50:  ADDU      S4, V0, V1
   54:  LI        S3, 55555556
   5C:  ORI       S5, R0, 8000
   60:  MULT      S0, S3
        .o64
   64:  SRA       S2, S0, 1F
   68:  MFHI      V1
   6C:  SUBU      V1, V1, S2
   70:  SLL       V0, V1, 1
   74:  ADDU      V0, V0, V1
   78:  SUBU      V0, S0, V0
   7C:  LHU       V1, 0 (S4)
   80:  ADDIU     V0, V0, 1
   84:  MULT      V1, V0
   88:  SLL       V0, S0, 4
   8C:  MFLO      V1
   90:  ADDU      A0, V1, S0
   94:  LW        V1, 14 (SP)
   98:  ANDI      A0, A0, FFFF
   9C:  JAL       ~Func:sins
   A0:  ADDU      S1, V1, V0
   A4:  SLL       V0, V0, 10
   A8:  SRA       V0, V0, 10
   AC:  ADDU      V0, V0, S5
   B0:  SRL       V1, V0, 1F
   B4:  ADDU      V0, V0, V1
   B8:  SLL       V0, V0, F
   BC:  SRA       V0, V0, 10
   C0:  SLL       V1, V0, 2
   C4:  ADDU      V1, V1, V0
   C8:  SLL       V0, V1, 5
   CC:  SUBU      V1, V0, V1
   D0:  BGEZ      V1, .oDC
   D4:  COPY      V0, V1
   D8:  ADDIU     V0, V1, 7FFF
        .oDC
   DC:  SRA       A0, V0, F
   E0:  ADDIU     V0, A0, 64
   E4:  SB        V0, E (S1)
   E8:  ADDIU     V0, A0, 32
   EC:  SUBU      V1, S0, S2
   F0:  SRA       A1, V1, 1
   F4:  MULT      A1, S3
   F8:  SB        V0, D (S1)
   FC:  LHU       A0, 0 (S4)
  100:  SRA       V1, V1, 1F
  104:  SRL       A2, A0, F
  108:  MFHI      T1
  10C:  SUBU      V1, T1, V1
  110:  SLL       V0, V1, 1
  114:  ADDU      V0, V0, V1
  118:  SUBU      A1, A1, V0
  11C:  ADDIU     A1, A1, 1
  120:  SLL       A1, A1, F
  124:  MULT      A2, A1
  128:  SRL       A0, A0, E
  12C:  SLL       A0, A0, F
  130:  MFLO      V1
  134:  ADDU      A0, V1, A0
  138:  ADDU      A0, A0, S0
  13C:  JAL       ~Func:sins
  140:  ANDI      A0, A0, FFFF
  144:  SLL       V0, V0, 10
  148:  SRA       V0, V0, 10
  14C:  LBU       V1, C (S1)
  150:  ADDU      V0, V0, S5
  154:  MULT      V1, V0
  158:  MFLO      V1
  15C:  BGEZ      V1, .o170
  160:  SRA       V0, V1, 10
  164:  ORI       V0, R0, FFFF
  168:  ADDU      V1, V1, V0
  16C:  SRA       V0, V1, 10
        .o170
  170:  SB        V0, C (S1)
  174:  LW        V0, 18 (SP)
  178:  ADDIU     S0, S0, 1
  17C:  SLT       V0, S0, V0
  180:  BNE       V0, R0, .o64
  184:  MULT      S0, S3
        .o188
  188:  LA        V1, 8009A66C
  190:  LW        V0, 0 (V1)
  194:  COPY      A0, S6
  198:  COPY      S0, V0
  19C:  ADDIU     V0, V0, 8
  1A0:  SW        V0, 0 (V1)
  1A4:  LUI       V0, DE00
  1A8:  JAL       ~Func:mdl_get_copied_gfx
  1AC:  SW        V0, 0 (S0)
  1B0:  SW        V0, 4 (S0)
  1B4:  LA        V0, $???_80221DF0
  1BC:  SLL       V1, S6, 1
  1C0:  ADDU      V1, V1, V0
  1C4:  LHU       V0, 0 (V1)
  1C8:  ADDIU     V0, V0, 253
  1CC:  SH        V0, 0 (V1)
  1D0:  LW        RA, 3C (SP)
  1D4:  LW        S6, 38 (SP)
  1D8:  LW        S5, 34 (SP)
  1DC:  LW        S4, 30 (SP)
  1E0:  LW        S3, 2C (SP)
  1E4:  LW        S2, 28 (SP)
  1E8:  LW        S1, 24 (SP)
  1EC:  LW        S0, 20 (SP)
  1F0:  JR        RA
  1F4:  ADDIU     SP, SP, 40
}

#new:Function $Function_80218D78
{
    0:  ADDIU     SP, SP, FFE8
    4:  CLEAR     A0
    8:  SW        RA, 10 (SP)
    C:  JAL       ~Func:playFX_45
   10:  LI        A1, 10
   14:  LW        RA, 10 (SP)
   18:  LI        V0, 2
   1C:  JR        RA
   20:  ADDIU     SP, SP, 18
}

#new:Function $Function_80218D9C
{
    0:  ADDIU     SP, SP, FFD0
    4:  SW        S1, 14 (SP)
    8:  COPY      S1, A0
    C:  SW        RA, 20 (SP)
   10:  SW        S3, 1C (SP)
   14:  SW        S2, 18 (SP)
   18:  SW        S0, 10 (SP)
   1C:  SDC1      F20, 28 (SP)
   20:  LW        S0, C (S1)
   24:  LW        A1, 0 (S0)
   28:  JAL       ~Func:get_variable
   2C:  ADDIU     S0, S0, 4
   30:  LI        V1, 66666667
   38:  MULT      V0, V1
   3C:  SRA       V0, V0, 1F
   40:  LIF       F0, 6.28318
   4C:  MFHI      A3
   50:  SRA       V1, A3, 2
   54:  SUBU      V1, V1, V0
   58:  MTC1      V1, F12
   5C:  NOP
   60:  CVT.S.W   F12, F12
   64:  MUL.S     F12, F12, F0
   68:  NOP
   6C:  LIF       F0, 360.0
   74:  LIF       F2, 8.0
   7C:  DIV.S     F12, F12, F0
   80:  MUL.S     F12, F12, F2
   84:  NOP
   88:  LW        S2, 0 (S0)
   8C:  ADDIU     S0, S0, 4
   90:  LW        S3, 0 (S0)
   94:  JAL       ~Func:sin_rad
   98:  LW        S0, 4 (S0)
   9C:  COPY      A0, S1
   A0:  LIF       F2, 10.0
   A8:  COPY      A1, S2
   AC:  MUL.S     F20, F0, F2
   B0:  NOP
   B4:  JAL       ~Func:set_variable
   B8:  CLEAR     A2
   BC:  COPY      A0, S1
   C0:  TRUNC.W.S F4, F20
   C4:  MFC1      A2, F4
   C8:  JAL       ~Func:set_variable
   CC:  COPY      A1, S3
   D0:  COPY      A0, S1
   D4:  COPY      A1, S0
   D8:  JAL       ~Func:set_variable
   DC:  CLEAR     A2
   E0:  LW        RA, 20 (SP)
   E4:  LW        S3, 1C (SP)
   E8:  LW        S2, 18 (SP)
   EC:  LW        S1, 14 (SP)
   F0:  LW        S0, 10 (SP)
   F4:  LDC1      F20, 28 (SP)
   F8:  LI        V0, 2
   FC:  JR        RA
  100:  ADDIU     SP, SP, 30
}

% Origin: HEURISTIC
#new:Function $Function_80218EA0
{
    0:  ADDIU     SP, SP, FFC0
    4:  SW        S6, 38 (SP)
    8:  COPY      S6, A0
    C:  ADDIU     A1, SP, 10
   10:  ADDIU     A2, SP, 14
   14:  ADDIU     A3, SP, 18
   18:  SW        RA, 3C (SP)
   1C:  SW        S5, 34 (SP)
   20:  SW        S4, 30 (SP)
   24:  SW        S3, 2C (SP)
   28:  SW        S2, 28 (SP)
   2C:  SW        S1, 24 (SP)
   30:  JAL       ~Func:mdl_get_copied_vertices
   34:  SW        S0, 20 (SP)
   38:  LW        V0, 18 (SP)
   3C:  BLEZ      V0, .o188
   40:  CLEAR     S0
   44:  LA        V1, $???_80222200
   4C:  SLL       V0, S6, 1
   50:  ADDU      S4, V0, V1
   54:  LI        S3, 55555556
   5C:  ORI       S5, R0, 8000
   60:  MULT      S0, S3
        .o64
   64:  SRA       S2, S0, 1F
   68:  MFHI      V1
   6C:  SUBU      V1, V1, S2
   70:  SLL       V0, V1, 1
   74:  ADDU      V0, V0, V1
   78:  SUBU      V0, S0, V0
   7C:  LHU       V1, 0 (S4)
   80:  ADDIU     V0, V0, 1
   84:  MULT      V1, V0
   88:  SLL       V0, S0, 4
   8C:  MFLO      V1
   90:  ADDU      A0, V1, S0
   94:  LW        V1, 14 (SP)
   98:  ANDI      A0, A0, FFFF
   9C:  JAL       ~Func:sins
   A0:  ADDU      S1, V1, V0
   A4:  SLL       V0, V0, 10
   A8:  SRA       V0, V0, 10
   AC:  ADDU      V0, V0, S5
   B0:  SRL       V1, V0, 1F
   B4:  ADDU      V0, V0, V1
   B8:  SLL       V0, V0, F
   BC:  SRA       V0, V0, 10
   C0:  SLL       V1, V0, 2
   C4:  ADDU      V1, V1, V0
   C8:  SLL       V0, V1, 5
   CC:  SUBU      V1, V0, V1
   D0:  BGEZ      V1, .oDC
   D4:  COPY      V0, V1
   D8:  ADDIU     V0, V1, 7FFF
        .oDC
   DC:  SRA       A0, V0, F
   E0:  ADDIU     V0, A0, 64
   E4:  SB        V0, E (S1)
   E8:  ADDIU     V0, A0, 32
   EC:  SUBU      V1, S0, S2
   F0:  SRA       A1, V1, 1
   F4:  MULT      A1, S3
   F8:  SB        V0, D (S1)
   FC:  LHU       A0, 0 (S4)
  100:  SRA       V1, V1, 1F
  104:  SRL       A2, A0, F
  108:  MFHI      T1
  10C:  SUBU      V1, T1, V1
  110:  SLL       V0, V1, 1
  114:  ADDU      V0, V0, V1
  118:  SUBU      A1, A1, V0
  11C:  ADDIU     A1, A1, 1
  120:  SLL       A1, A1, F
  124:  MULT      A2, A1
  128:  SRL       A0, A0, E
  12C:  SLL       A0, A0, F
  130:  MFLO      V1
  134:  ADDU      A0, V1, A0
  138:  ADDU      A0, A0, S0
  13C:  JAL       ~Func:sins
  140:  ANDI      A0, A0, FFFF
  144:  SLL       V0, V0, 10
  148:  SRA       V0, V0, 10
  14C:  LBU       V1, C (S1)
  150:  ADDU      V0, V0, S5
  154:  MULT      V1, V0
  158:  MFLO      V1
  15C:  BGEZ      V1, .o170
  160:  SRA       V0, V1, 10
  164:  ORI       V0, R0, FFFF
  168:  ADDU      V1, V1, V0
  16C:  SRA       V0, V1, 10
        .o170
  170:  SB        V0, C (S1)
  174:  LW        V0, 18 (SP)
  178:  ADDIU     S0, S0, 1
  17C:  SLT       V0, S0, V0
  180:  BNE       V0, R0, .o64
  184:  MULT      S0, S3
        .o188
  188:  LA        V1, 8009A66C
  190:  LW        V0, 0 (V1)
  194:  COPY      A0, S6
  198:  COPY      S0, V0
  19C:  ADDIU     V0, V0, 8
  1A0:  SW        V0, 0 (V1)
  1A4:  LUI       V0, DE00
  1A8:  JAL       ~Func:mdl_get_copied_gfx
  1AC:  SW        V0, 0 (S0)
  1B0:  SW        V0, 4 (S0)
  1B4:  LA        V0, $???_80222200
  1BC:  SLL       V1, S6, 1
  1C0:  ADDU      V1, V1, V0
  1C4:  LHU       V0, 0 (V1)
  1C8:  ADDIU     V0, V0, 253
  1CC:  SH        V0, 0 (V1)
  1D0:  LW        RA, 3C (SP)
  1D4:  LW        S6, 38 (SP)
  1D8:  LW        S5, 34 (SP)
  1DC:  LW        S4, 30 (SP)
  1E0:  LW        S3, 2C (SP)
  1E4:  LW        S2, 28 (SP)
  1E8:  LW        S1, 24 (SP)
  1EC:  LW        S0, 20 (SP)
  1F0:  JR        RA
  1F4:  ADDIU     SP, SP, 40
}

#new:Function $Function_80219098
{
    0:  ADDIU     SP, SP, FFE8
    4:  CLEAR     A0
    8:  SW        RA, 10 (SP)
    C:  JAL       ~Func:playFX_45
   10:  LI        A1, 10
   14:  LW        RA, 10 (SP)
   18:  LI        V0, 2
   1C:  JR        RA
   20:  ADDIU     SP, SP, 18
}

#new:Function $Function_802190BC
{
    0:  ADDIU     SP, SP, FFD0
    4:  SW        S1, 14 (SP)
    8:  COPY      S1, A0
    C:  SW        RA, 20 (SP)
   10:  SW        S3, 1C (SP)
   14:  SW        S2, 18 (SP)
   18:  SW        S0, 10 (SP)
   1C:  SDC1      F20, 28 (SP)
   20:  LW        S0, C (S1)
   24:  LW        A1, 0 (S0)
   28:  JAL       ~Func:get_variable
   2C:  ADDIU     S0, S0, 4
   30:  LI        V1, 66666667
   38:  MULT      V0, V1
   3C:  SRA       V0, V0, 1F
   40:  LIF       F0, 6.28318
   4C:  MFHI      A3
   50:  SRA       V1, A3, 2
   54:  SUBU      V1, V1, V0
   58:  MTC1      V1, F12
   5C:  NOP
   60:  CVT.S.W   F12, F12
   64:  MUL.S     F12, F12, F0
   68:  NOP
   6C:  LIF       F0, 360.0
   74:  LIF       F2, 8.0
   7C:  DIV.S     F12, F12, F0
   80:  MUL.S     F12, F12, F2
   84:  NOP
   88:  LW        S2, 0 (S0)
   8C:  ADDIU     S0, S0, 4
   90:  LW        S3, 0 (S0)
   94:  JAL       ~Func:sin_rad
   98:  LW        S0, 4 (S0)
   9C:  COPY      A0, S1
   A0:  LIF       F2, 10.0
   A8:  COPY      A1, S2
   AC:  MUL.S     F20, F0, F2
   B0:  NOP
   B4:  JAL       ~Func:set_variable
   B8:  CLEAR     A2
   BC:  COPY      A0, S1
   C0:  TRUNC.W.S F4, F20
   C4:  MFC1      A2, F4
   C8:  JAL       ~Func:set_variable
   CC:  COPY      A1, S3
   D0:  COPY      A0, S1
   D4:  COPY      A1, S0
   D8:  JAL       ~Func:set_variable
   DC:  CLEAR     A2
   E0:  LW        RA, 20 (SP)
   E4:  LW        S3, 1C (SP)
   E8:  LW        S2, 18 (SP)
   EC:  LW        S1, 14 (SP)
   F0:  LW        S0, 10 (SP)
   F4:  LDC1      F20, 28 (SP)
   F8:  LI        V0, 2
   FC:  JR        RA
  100:  ADDIU     SP, SP, 30
}

% Origin: HEURISTIC
#new:Function $Function_802191C0
{
    0:  ADDIU     SP, SP, FFC0
    4:  SW        S6, 38 (SP)
    8:  COPY      S6, A0
    C:  ADDIU     A1, SP, 10
   10:  ADDIU     A2, SP, 14
   14:  ADDIU     A3, SP, 18
   18:  SW        RA, 3C (SP)
   1C:  SW        S5, 34 (SP)
   20:  SW        S4, 30 (SP)
   24:  SW        S3, 2C (SP)
   28:  SW        S2, 28 (SP)
   2C:  SW        S1, 24 (SP)
   30:  JAL       ~Func:mdl_get_copied_vertices
   34:  SW        S0, 20 (SP)
   38:  LW        V0, 18 (SP)
   3C:  BLEZ      V0, .o188
   40:  CLEAR     S0
   44:  LA        V1, $???_80222640
   4C:  SLL       V0, S6, 1
   50:  ADDU      S4, V0, V1
   54:  LI        S3, 55555556
   5C:  ORI       S5, R0, 8000
   60:  MULT      S0, S3
        .o64
   64:  SRA       S2, S0, 1F
   68:  MFHI      V1
   6C:  SUBU      V1, V1, S2
   70:  SLL       V0, V1, 1
   74:  ADDU      V0, V0, V1
   78:  SUBU      V0, S0, V0
   7C:  LHU       V1, 0 (S4)
   80:  ADDIU     V0, V0, 1
   84:  MULT      V1, V0
   88:  SLL       V0, S0, 4
   8C:  MFLO      V1
   90:  ADDU      A0, V1, S0
   94:  LW        V1, 14 (SP)
   98:  ANDI      A0, A0, FFFF
   9C:  JAL       ~Func:sins
   A0:  ADDU      S1, V1, V0
   A4:  SLL       V0, V0, 10
   A8:  SRA       V0, V0, 10
   AC:  ADDU      V0, V0, S5
   B0:  SRL       V1, V0, 1F
   B4:  ADDU      V0, V0, V1
   B8:  SLL       V0, V0, F
   BC:  SRA       V0, V0, 10
   C0:  SLL       V1, V0, 2
   C4:  ADDU      V1, V1, V0
   C8:  SLL       V0, V1, 5
   CC:  SUBU      V1, V0, V1
   D0:  BGEZ      V1, .oDC
   D4:  COPY      V0, V1
   D8:  ADDIU     V0, V1, 7FFF
        .oDC
   DC:  SRA       A0, V0, F
   E0:  ADDIU     V0, A0, 64
   E4:  SB        V0, E (S1)
   E8:  ADDIU     V0, A0, 32
   EC:  SUBU      V1, S0, S2
   F0:  SRA       A1, V1, 1
   F4:  MULT      A1, S3
   F8:  SB        V0, D (S1)
   FC:  LHU       A0, 0 (S4)
  100:  SRA       V1, V1, 1F
  104:  SRL       A2, A0, F
  108:  MFHI      T1
  10C:  SUBU      V1, T1, V1
  110:  SLL       V0, V1, 1
  114:  ADDU      V0, V0, V1
  118:  SUBU      A1, A1, V0
  11C:  ADDIU     A1, A1, 1
  120:  SLL       A1, A1, F
  124:  MULT      A2, A1
  128:  SRL       A0, A0, E
  12C:  SLL       A0, A0, F
  130:  MFLO      V1
  134:  ADDU      A0, V1, A0
  138:  ADDU      A0, A0, S0
  13C:  JAL       ~Func:sins
  140:  ANDI      A0, A0, FFFF
  144:  SLL       V0, V0, 10
  148:  SRA       V0, V0, 10
  14C:  LBU       V1, C (S1)
  150:  ADDU      V0, V0, S5
  154:  MULT      V1, V0
  158:  MFLO      V1
  15C:  BGEZ      V1, .o170
  160:  SRA       V0, V1, 10
  164:  ORI       V0, R0, FFFF
  168:  ADDU      V1, V1, V0
  16C:  SRA       V0, V1, 10
        .o170
  170:  SB        V0, C (S1)
  174:  LW        V0, 18 (SP)
  178:  ADDIU     S0, S0, 1
  17C:  SLT       V0, S0, V0
  180:  BNE       V0, R0, .o64
  184:  MULT      S0, S3
        .o188
  188:  LA        V1, 8009A66C
  190:  LW        V0, 0 (V1)
  194:  COPY      A0, S6
  198:  COPY      S0, V0
  19C:  ADDIU     V0, V0, 8
  1A0:  SW        V0, 0 (V1)
  1A4:  LUI       V0, DE00
  1A8:  JAL       ~Func:mdl_get_copied_gfx
  1AC:  SW        V0, 0 (S0)
  1B0:  SW        V0, 4 (S0)
  1B4:  LA        V0, $???_80222640
  1BC:  SLL       V1, S6, 1
  1C0:  ADDU      V1, V1, V0
  1C4:  LHU       V0, 0 (V1)
  1C8:  ADDIU     V0, V0, 253
  1CC:  SH        V0, 0 (V1)
  1D0:  LW        RA, 3C (SP)
  1D4:  LW        S6, 38 (SP)
  1D8:  LW        S5, 34 (SP)
  1DC:  LW        S4, 30 (SP)
  1E0:  LW        S3, 2C (SP)
  1E4:  LW        S2, 28 (SP)
  1E8:  LW        S1, 24 (SP)
  1EC:  LW        S0, 20 (SP)
  1F0:  JR        RA
  1F4:  ADDIU     SP, SP, 40
}

#new:Function $Function_802193B8
{
    0:  ADDIU     SP, SP, FFE8
    4:  CLEAR     A0
    8:  SW        RA, 10 (SP)
    C:  JAL       ~Func:playFX_45
   10:  LI        A1, 10
   14:  LW        RA, 10 (SP)
   18:  LI        V0, 2
   1C:  JR        RA
   20:  ADDIU     SP, SP, 18
}

% Origin: HEURISTIC
#new:Function $Function_802193DC
{
    0:  ADDIU     SP, SP, FFD0
    4:  SW        S1, 14 (SP)
    8:  COPY      S1, A0
    C:  SW        RA, 20 (SP)
   10:  SW        S3, 1C (SP)
   14:  SW        S2, 18 (SP)
   18:  SW        S0, 10 (SP)
   1C:  SDC1      F20, 28 (SP)
   20:  LW        S0, C (S1)
   24:  LW        A1, 0 (S0)
   28:  JAL       ~Func:get_variable
   2C:  ADDIU     S0, S0, 4
   30:  LI        V1, 66666667
   38:  MULT      V0, V1
   3C:  SRA       V0, V0, 1F
   40:  LIF       F0, 6.28318
   4C:  MFHI      A3
   50:  SRA       V1, A3, 2
   54:  SUBU      V1, V1, V0
   58:  MTC1      V1, F12
   5C:  NOP
   60:  CVT.S.W   F12, F12
   64:  MUL.S     F12, F12, F0
   68:  NOP
   6C:  LIF       F0, 360.0
   74:  LIF       F2, 8.0
   7C:  DIV.S     F12, F12, F0
   80:  MUL.S     F12, F12, F2
   84:  NOP
   88:  LW        S2, 0 (S0)
   8C:  ADDIU     S0, S0, 4
   90:  LW        S3, 0 (S0)
   94:  JAL       ~Func:sin_rad
   98:  LW        S0, 4 (S0)
   9C:  COPY      A0, S1
   A0:  LIF       F2, 10.0
   A8:  COPY      A1, S2
   AC:  MUL.S     F20, F0, F2
   B0:  NOP
   B4:  JAL       ~Func:set_variable
   B8:  CLEAR     A2
   BC:  COPY      A0, S1
   C0:  TRUNC.W.S F4, F20
   C4:  MFC1      A2, F4
   C8:  JAL       ~Func:set_variable
   CC:  COPY      A1, S3
   D0:  COPY      A0, S1
   D4:  COPY      A1, S0
   D8:  JAL       ~Func:set_variable
   DC:  CLEAR     A2
   E0:  LW        RA, 20 (SP)
   E4:  LW        S3, 1C (SP)
   E8:  LW        S2, 18 (SP)
   EC:  LW        S1, 14 (SP)
   F0:  LW        S0, 10 (SP)
   F4:  LDC1      F20, 28 (SP)
   F8:  LI        V0, 2
   FC:  JR        RA
  100:  ADDIU     SP, SP, 30
}

% Origin: HEURISTIC
#new:Function $Function_802194E0
{
    0:  ADDIU     SP, SP, FFC0
    4:  SW        S6, 38 (SP)
    8:  COPY      S6, A0
    C:  ADDIU     A1, SP, 10
   10:  ADDIU     A2, SP, 14
   14:  ADDIU     A3, SP, 18
   18:  SW        RA, 3C (SP)
   1C:  SW        S5, 34 (SP)
   20:  SW        S4, 30 (SP)
   24:  SW        S3, 2C (SP)
   28:  SW        S2, 28 (SP)
   2C:  SW        S1, 24 (SP)
   30:  JAL       ~Func:mdl_get_copied_vertices
   34:  SW        S0, 20 (SP)
   38:  LW        V0, 18 (SP)
   3C:  BLEZ      V0, .o188
   40:  CLEAR     S0
   44:  LA        V1, $???_80222990
   4C:  SLL       V0, S6, 1
   50:  ADDU      S4, V0, V1
   54:  LI        S3, 55555556
   5C:  ORI       S5, R0, 8000
   60:  MULT      S0, S3
        .o64
   64:  SRA       S2, S0, 1F
   68:  MFHI      V1
   6C:  SUBU      V1, V1, S2
   70:  SLL       V0, V1, 1
   74:  ADDU      V0, V0, V1
   78:  SUBU      V0, S0, V0
   7C:  LHU       V1, 0 (S4)
   80:  ADDIU     V0, V0, 1
   84:  MULT      V1, V0
   88:  SLL       V0, S0, 4
   8C:  MFLO      V1
   90:  ADDU      A0, V1, S0
   94:  LW        V1, 14 (SP)
   98:  ANDI      A0, A0, FFFF
   9C:  JAL       ~Func:sins
   A0:  ADDU      S1, V1, V0
   A4:  SLL       V0, V0, 10
   A8:  SRA       V0, V0, 10
   AC:  ADDU      V0, V0, S5
   B0:  SRL       V1, V0, 1F
   B4:  ADDU      V0, V0, V1
   B8:  SLL       V0, V0, F
   BC:  SRA       V0, V0, 10
   C0:  SLL       V1, V0, 2
   C4:  ADDU      V1, V1, V0
   C8:  SLL       V0, V1, 5
   CC:  SUBU      V1, V0, V1
   D0:  BGEZ      V1, .oDC
   D4:  COPY      V0, V1
   D8:  ADDIU     V0, V1, 7FFF
        .oDC
   DC:  SRA       A0, V0, F
   E0:  ADDIU     V0, A0, 64
   E4:  SB        V0, E (S1)
   E8:  ADDIU     V0, A0, 32
   EC:  SUBU      V1, S0, S2
   F0:  SRA       A1, V1, 1
   F4:  MULT      A1, S3
   F8:  SB        V0, D (S1)
   FC:  LHU       A0, 0 (S4)
  100:  SRA       V1, V1, 1F
  104:  SRL       A2, A0, F
  108:  MFHI      T1
  10C:  SUBU      V1, T1, V1
  110:  SLL       V0, V1, 1
  114:  ADDU      V0, V0, V1
  118:  SUBU      A1, A1, V0
  11C:  ADDIU     A1, A1, 1
  120:  SLL       A1, A1, F
  124:  MULT      A2, A1
  128:  SRL       A0, A0, E
  12C:  SLL       A0, A0, F
  130:  MFLO      V1
  134:  ADDU      A0, V1, A0
  138:  ADDU      A0, A0, S0
  13C:  JAL       ~Func:sins
  140:  ANDI      A0, A0, FFFF
  144:  SLL       V0, V0, 10
  148:  SRA       V0, V0, 10
  14C:  LBU       V1, C (S1)
  150:  ADDU      V0, V0, S5
  154:  MULT      V1, V0
  158:  MFLO      V1
  15C:  BGEZ      V1, .o170
  160:  SRA       V0, V1, 10
  164:  ORI       V0, R0, FFFF
  168:  ADDU      V1, V1, V0
  16C:  SRA       V0, V1, 10
        .o170
  170:  SB        V0, C (S1)
  174:  LW        V0, 18 (SP)
  178:  ADDIU     S0, S0, 1
  17C:  SLT       V0, S0, V0
  180:  BNE       V0, R0, .o64
  184:  MULT      S0, S3
        .o188
  188:  LA        V1, 8009A66C
  190:  LW        V0, 0 (V1)
  194:  COPY      A0, S6
  198:  COPY      S0, V0
  19C:  ADDIU     V0, V0, 8
  1A0:  SW        V0, 0 (V1)
  1A4:  LUI       V0, DE00
  1A8:  JAL       ~Func:mdl_get_copied_gfx
  1AC:  SW        V0, 0 (S0)
  1B0:  SW        V0, 4 (S0)
  1B4:  LA        V0, $???_80222990
  1BC:  SLL       V1, S6, 1
  1C0:  ADDU      V1, V1, V0
  1C4:  LHU       V0, 0 (V1)
  1C8:  ADDIU     V0, V0, 253
  1CC:  SH        V0, 0 (V1)
  1D0:  LW        RA, 3C (SP)
  1D4:  LW        S6, 38 (SP)
  1D8:  LW        S5, 34 (SP)
  1DC:  LW        S4, 30 (SP)
  1E0:  LW        S3, 2C (SP)
  1E4:  LW        S2, 28 (SP)
  1E8:  LW        S1, 24 (SP)
  1EC:  LW        S0, 20 (SP)
  1F0:  JR        RA
  1F4:  ADDIU     SP, SP, 40
}

#new:Function $Function_802196D8
{
    0:  ADDIU     SP, SP, FFE8
    4:  CLEAR     A0
    8:  SW        RA, 10 (SP)
    C:  JAL       ~Func:playFX_45
   10:  LI        A1, 10
   14:  LW        RA, 10 (SP)
   18:  LI        V0, 2
   1C:  JR        RA
   20:  ADDIU     SP, SP, 18
}

% Origin: HEURISTIC
#new:Function $Function_802196FC
{
    0:  ADDIU     SP, SP, FFD0
    4:  SW        S1, 14 (SP)
    8:  COPY      S1, A0
    C:  SW        RA, 20 (SP)
   10:  SW        S3, 1C (SP)
   14:  SW        S2, 18 (SP)
   18:  SW        S0, 10 (SP)
   1C:  SDC1      F20, 28 (SP)
   20:  LW        S0, C (S1)
   24:  LW        A1, 0 (S0)
   28:  JAL       ~Func:get_variable
   2C:  ADDIU     S0, S0, 4
   30:  LI        V1, 66666667
   38:  MULT      V0, V1
   3C:  SRA       V0, V0, 1F
   40:  LIF       F0, 6.28318
   4C:  MFHI      A3
   50:  SRA       V1, A3, 2
   54:  SUBU      V1, V1, V0
   58:  MTC1      V1, F12
   5C:  NOP
   60:  CVT.S.W   F12, F12
   64:  MUL.S     F12, F12, F0
   68:  NOP
   6C:  LIF       F0, 360.0
   74:  LIF       F2, 8.0
   7C:  DIV.S     F12, F12, F0
   80:  MUL.S     F12, F12, F2
   84:  NOP
   88:  LW        S2, 0 (S0)
   8C:  ADDIU     S0, S0, 4
   90:  LW        S3, 0 (S0)
   94:  JAL       ~Func:sin_rad
   98:  LW        S0, 4 (S0)
   9C:  COPY      A0, S1
   A0:  LIF       F2, 10.0
   A8:  COPY      A1, S2
   AC:  MUL.S     F20, F0, F2
   B0:  NOP
   B4:  JAL       ~Func:set_variable
   B8:  CLEAR     A2
   BC:  COPY      A0, S1
   C0:  TRUNC.W.S F4, F20
   C4:  MFC1      A2, F4
   C8:  JAL       ~Func:set_variable
   CC:  COPY      A1, S3
   D0:  COPY      A0, S1
   D4:  COPY      A1, S0
   D8:  JAL       ~Func:set_variable
   DC:  CLEAR     A2
   E0:  LW        RA, 20 (SP)
   E4:  LW        S3, 1C (SP)
   E8:  LW        S2, 18 (SP)
   EC:  LW        S1, 14 (SP)
   F0:  LW        S0, 10 (SP)
   F4:  LDC1      F20, 28 (SP)
   F8:  LI        V0, 2
   FC:  JR        RA
  100:  ADDIU     SP, SP, 30
}

% Origin: HEURISTIC
#new:Function $Function_80219800
{
    0:  ADDIU     SP, SP, FFC0
    4:  SW        S6, 38 (SP)
    8:  COPY      S6, A0
    C:  ADDIU     A1, SP, 10
   10:  ADDIU     A2, SP, 14
   14:  ADDIU     A3, SP, 18
   18:  SW        RA, 3C (SP)
   1C:  SW        S5, 34 (SP)
   20:  SW        S4, 30 (SP)
   24:  SW        S3, 2C (SP)
   28:  SW        S2, 28 (SP)
   2C:  SW        S1, 24 (SP)
   30:  JAL       ~Func:mdl_get_copied_vertices
   34:  SW        S0, 20 (SP)
   38:  LW        V0, 18 (SP)
   3C:  BLEZ      V0, .o188
   40:  CLEAR     S0
   44:  LA        V1, $???_80222D00
   4C:  SLL       V0, S6, 1
   50:  ADDU      S4, V0, V1
   54:  LI        S3, 55555556
   5C:  ORI       S5, R0, 8000
   60:  MULT      S0, S3
        .o64
   64:  SRA       S2, S0, 1F
   68:  MFHI      V1
   6C:  SUBU      V1, V1, S2
   70:  SLL       V0, V1, 1
   74:  ADDU      V0, V0, V1
   78:  SUBU      V0, S0, V0
   7C:  LHU       V1, 0 (S4)
   80:  ADDIU     V0, V0, 1
   84:  MULT      V1, V0
   88:  SLL       V0, S0, 4
   8C:  MFLO      V1
   90:  ADDU      A0, V1, S0
   94:  LW        V1, 14 (SP)
   98:  ANDI      A0, A0, FFFF
   9C:  JAL       ~Func:sins
   A0:  ADDU      S1, V1, V0
   A4:  SLL       V0, V0, 10
   A8:  SRA       V0, V0, 10
   AC:  ADDU      V0, V0, S5
   B0:  SRL       V1, V0, 1F
   B4:  ADDU      V0, V0, V1
   B8:  SLL       V0, V0, F
   BC:  SRA       V0, V0, 10
   C0:  SLL       V1, V0, 2
   C4:  ADDU      V1, V1, V0
   C8:  SLL       V0, V1, 5
   CC:  SUBU      V1, V0, V1
   D0:  BGEZ      V1, .oDC
   D4:  COPY      V0, V1
   D8:  ADDIU     V0, V1, 7FFF
        .oDC
   DC:  SRA       A0, V0, F
   E0:  ADDIU     V0, A0, 64
   E4:  SB        V0, E (S1)
   E8:  ADDIU     V0, A0, 32
   EC:  SUBU      V1, S0, S2
   F0:  SRA       A1, V1, 1
   F4:  MULT      A1, S3
   F8:  SB        V0, D (S1)
   FC:  LHU       A0, 0 (S4)
  100:  SRA       V1, V1, 1F
  104:  SRL       A2, A0, F
  108:  MFHI      T1
  10C:  SUBU      V1, T1, V1
  110:  SLL       V0, V1, 1
  114:  ADDU      V0, V0, V1
  118:  SUBU      A1, A1, V0
  11C:  ADDIU     A1, A1, 1
  120:  SLL       A1, A1, F
  124:  MULT      A2, A1
  128:  SRL       A0, A0, E
  12C:  SLL       A0, A0, F
  130:  MFLO      V1
  134:  ADDU      A0, V1, A0
  138:  ADDU      A0, A0, S0
  13C:  JAL       ~Func:sins
  140:  ANDI      A0, A0, FFFF
  144:  SLL       V0, V0, 10
  148:  SRA       V0, V0, 10
  14C:  LBU       V1, C (S1)
  150:  ADDU      V0, V0, S5
  154:  MULT      V1, V0
  158:  MFLO      V1
  15C:  BGEZ      V1, .o170
  160:  SRA       V0, V1, 10
  164:  ORI       V0, R0, FFFF
  168:  ADDU      V1, V1, V0
  16C:  SRA       V0, V1, 10
        .o170
  170:  SB        V0, C (S1)
  174:  LW        V0, 18 (SP)
  178:  ADDIU     S0, S0, 1
  17C:  SLT       V0, S0, V0
  180:  BNE       V0, R0, .o64
  184:  MULT      S0, S3
        .o188
  188:  LA        V1, 8009A66C
  190:  LW        V0, 0 (V1)
  194:  COPY      A0, S6
  198:  COPY      S0, V0
  19C:  ADDIU     V0, V0, 8
  1A0:  SW        V0, 0 (V1)
  1A4:  LUI       V0, DE00
  1A8:  JAL       ~Func:mdl_get_copied_gfx
  1AC:  SW        V0, 0 (S0)
  1B0:  SW        V0, 4 (S0)
  1B4:  LA        V0, $???_80222D00
  1BC:  SLL       V1, S6, 1
  1C0:  ADDU      V1, V1, V0
  1C4:  LHU       V0, 0 (V1)
  1C8:  ADDIU     V0, V0, 253
  1CC:  SH        V0, 0 (V1)
  1D0:  LW        RA, 3C (SP)
  1D4:  LW        S6, 38 (SP)
  1D8:  LW        S5, 34 (SP)
  1DC:  LW        S4, 30 (SP)
  1E0:  LW        S3, 2C (SP)
  1E4:  LW        S2, 28 (SP)
  1E8:  LW        S1, 24 (SP)
  1EC:  LW        S0, 20 (SP)
  1F0:  JR        RA
  1F4:  ADDIU     SP, SP, 40
}

#new:Function $Function_802199F8
{
    0:  ADDIU     SP, SP, FFE8
    4:  CLEAR     A0
    8:  SW        RA, 10 (SP)
    C:  JAL       ~Func:playFX_45
   10:  LI        A1, 10
   14:  LW        RA, 10 (SP)
   18:  LI        V0, 2
   1C:  JR        RA
   20:  ADDIU     SP, SP, 18
}

% Origin: HEURISTIC
#new:Function $Function_80219A1C
{
    0:  ADDIU     SP, SP, FFD0
    4:  SW        S1, 14 (SP)
    8:  COPY      S1, A0
    C:  SW        RA, 20 (SP)
   10:  SW        S3, 1C (SP)
   14:  SW        S2, 18 (SP)
   18:  SW        S0, 10 (SP)
   1C:  SDC1      F20, 28 (SP)
   20:  LW        S0, C (S1)
   24:  LW        A1, 0 (S0)
   28:  JAL       ~Func:get_variable
   2C:  ADDIU     S0, S0, 4
   30:  LI        V1, 66666667
   38:  MULT      V0, V1
   3C:  SRA       V0, V0, 1F
   40:  LIF       F0, 6.28318
   4C:  MFHI      A3
   50:  SRA       V1, A3, 2
   54:  SUBU      V1, V1, V0
   58:  MTC1      V1, F12
   5C:  NOP
   60:  CVT.S.W   F12, F12
   64:  MUL.S     F12, F12, F0
   68:  NOP
   6C:  LIF       F0, 360.0
   74:  LIF       F2, 8.0
   7C:  DIV.S     F12, F12, F0
   80:  MUL.S     F12, F12, F2
   84:  NOP
   88:  LW        S2, 0 (S0)
   8C:  ADDIU     S0, S0, 4
   90:  LW        S3, 0 (S0)
   94:  JAL       ~Func:sin_rad
   98:  LW        S0, 4 (S0)
   9C:  COPY      A0, S1
   A0:  LIF       F2, 10.0
   A8:  COPY      A1, S2
   AC:  MUL.S     F20, F0, F2
   B0:  NOP
   B4:  JAL       ~Func:set_variable
   B8:  CLEAR     A2
   BC:  COPY      A0, S1
   C0:  TRUNC.W.S F4, F20
   C4:  MFC1      A2, F4
   C8:  JAL       ~Func:set_variable
   CC:  COPY      A1, S3
   D0:  COPY      A0, S1
   D4:  COPY      A1, S0
   D8:  JAL       ~Func:set_variable
   DC:  CLEAR     A2
   E0:  LW        RA, 20 (SP)
   E4:  LW        S3, 1C (SP)
   E8:  LW        S2, 18 (SP)
   EC:  LW        S1, 14 (SP)
   F0:  LW        S0, 10 (SP)
   F4:  LDC1      F20, 28 (SP)
   F8:  LI        V0, 2
   FC:  JR        RA
  100:  ADDIU     SP, SP, 30
}

% Origin: HEURISTIC
#new:Function $Function_80219B20
{
    0:  ADDIU     SP, SP, FFC0
    4:  SW        S6, 38 (SP)
    8:  COPY      S6, A0
    C:  ADDIU     A1, SP, 10
   10:  ADDIU     A2, SP, 14
   14:  ADDIU     A3, SP, 18
   18:  SW        RA, 3C (SP)
   1C:  SW        S5, 34 (SP)
   20:  SW        S4, 30 (SP)
   24:  SW        S3, 2C (SP)
   28:  SW        S2, 28 (SP)
   2C:  SW        S1, 24 (SP)
   30:  JAL       ~Func:mdl_get_copied_vertices
   34:  SW        S0, 20 (SP)
   38:  LW        V0, 18 (SP)
   3C:  BLEZ      V0, .o188
   40:  CLEAR     S0
   44:  LA        V1, $???_80223080
   4C:  SLL       V0, S6, 1
   50:  ADDU      S4, V0, V1
   54:  LI        S3, 55555556
   5C:  ORI       S5, R0, 8000
   60:  MULT      S0, S3
        .o64
   64:  SRA       S2, S0, 1F
   68:  MFHI      V1
   6C:  SUBU      V1, V1, S2
   70:  SLL       V0, V1, 1
   74:  ADDU      V0, V0, V1
   78:  SUBU      V0, S0, V0
   7C:  LHU       V1, 0 (S4)
   80:  ADDIU     V0, V0, 1
   84:  MULT      V1, V0
   88:  SLL       V0, S0, 4
   8C:  MFLO      V1
   90:  ADDU      A0, V1, S0
   94:  LW        V1, 14 (SP)
   98:  ANDI      A0, A0, FFFF
   9C:  JAL       ~Func:sins
   A0:  ADDU      S1, V1, V0
   A4:  SLL       V0, V0, 10
   A8:  SRA       V0, V0, 10
   AC:  ADDU      V0, V0, S5
   B0:  SRL       V1, V0, 1F
   B4:  ADDU      V0, V0, V1
   B8:  SLL       V0, V0, F
   BC:  SRA       V0, V0, 10
   C0:  SLL       V1, V0, 2
   C4:  ADDU      V1, V1, V0
   C8:  SLL       V0, V1, 5
   CC:  SUBU      V1, V0, V1
   D0:  BGEZ      V1, .oDC
   D4:  COPY      V0, V1
   D8:  ADDIU     V0, V1, 7FFF
        .oDC
   DC:  SRA       A0, V0, F
   E0:  ADDIU     V0, A0, 64
   E4:  SB        V0, E (S1)
   E8:  ADDIU     V0, A0, 32
   EC:  SUBU      V1, S0, S2
   F0:  SRA       A1, V1, 1
   F4:  MULT      A1, S3
   F8:  SB        V0, D (S1)
   FC:  LHU       A0, 0 (S4)
  100:  SRA       V1, V1, 1F
  104:  SRL       A2, A0, F
  108:  MFHI      T1
  10C:  SUBU      V1, T1, V1
  110:  SLL       V0, V1, 1
  114:  ADDU      V0, V0, V1
  118:  SUBU      A1, A1, V0
  11C:  ADDIU     A1, A1, 1
  120:  SLL       A1, A1, F
  124:  MULT      A2, A1
  128:  SRL       A0, A0, E
  12C:  SLL       A0, A0, F
  130:  MFLO      V1
  134:  ADDU      A0, V1, A0
  138:  ADDU      A0, A0, S0
  13C:  JAL       ~Func:sins
  140:  ANDI      A0, A0, FFFF
  144:  SLL       V0, V0, 10
  148:  SRA       V0, V0, 10
  14C:  LBU       V1, C (S1)
  150:  ADDU      V0, V0, S5
  154:  MULT      V1, V0
  158:  MFLO      V1
  15C:  BGEZ      V1, .o170
  160:  SRA       V0, V1, 10
  164:  ORI       V0, R0, FFFF
  168:  ADDU      V1, V1, V0
  16C:  SRA       V0, V1, 10
        .o170
  170:  SB        V0, C (S1)
  174:  LW        V0, 18 (SP)
  178:  ADDIU     S0, S0, 1
  17C:  SLT       V0, S0, V0
  180:  BNE       V0, R0, .o64
  184:  MULT      S0, S3
        .o188
  188:  LA        V1, 8009A66C
  190:  LW        V0, 0 (V1)
  194:  COPY      A0, S6
  198:  COPY      S0, V0
  19C:  ADDIU     V0, V0, 8
  1A0:  SW        V0, 0 (V1)
  1A4:  LUI       V0, DE00
  1A8:  JAL       ~Func:mdl_get_copied_gfx
  1AC:  SW        V0, 0 (S0)
  1B0:  SW        V0, 4 (S0)
  1B4:  LA        V0, $???_80223080
  1BC:  SLL       V1, S6, 1
  1C0:  ADDU      V1, V1, V0
  1C4:  LHU       V0, 0 (V1)
  1C8:  ADDIU     V0, V0, 253
  1CC:  SH        V0, 0 (V1)
  1D0:  LW        RA, 3C (SP)
  1D4:  LW        S6, 38 (SP)
  1D8:  LW        S5, 34 (SP)
  1DC:  LW        S4, 30 (SP)
  1E0:  LW        S3, 2C (SP)
  1E4:  LW        S2, 28 (SP)
  1E8:  LW        S1, 24 (SP)
  1EC:  LW        S0, 20 (SP)
  1F0:  JR        RA
  1F4:  ADDIU     SP, SP, 40
}

#new:Function $Function_80219D18
{
    0:  ADDIU     SP, SP, FFE8
    4:  CLEAR     A0
    8:  SW        RA, 10 (SP)
    C:  JAL       ~Func:playFX_45
   10:  LI        A1, 10
   14:  LW        RA, 10 (SP)
   18:  LI        V0, 2
   1C:  JR        RA
   20:  ADDIU     SP, SP, 18
}

#new:Function $Function_80219D3C
{
    0:  ADDIU     SP, SP, FFD0
    4:  SW        S1, 14 (SP)
    8:  COPY      S1, A0
    C:  SW        RA, 20 (SP)
   10:  SW        S3, 1C (SP)
   14:  SW        S2, 18 (SP)
   18:  SW        S0, 10 (SP)
   1C:  SDC1      F20, 28 (SP)
   20:  LW        S0, C (S1)
   24:  LW        A1, 0 (S0)
   28:  JAL       ~Func:get_variable
   2C:  ADDIU     S0, S0, 4
   30:  LI        V1, 66666667
   38:  MULT      V0, V1
   3C:  SRA       V0, V0, 1F
   40:  LIF       F0, 6.28318
   4C:  MFHI      A3
   50:  SRA       V1, A3, 2
   54:  SUBU      V1, V1, V0
   58:  MTC1      V1, F12
   5C:  NOP
   60:  CVT.S.W   F12, F12
   64:  MUL.S     F12, F12, F0
   68:  NOP
   6C:  LIF       F0, 360.0
   74:  LIF       F2, 8.0
   7C:  DIV.S     F12, F12, F0
   80:  MUL.S     F12, F12, F2
   84:  NOP
   88:  LW        S2, 0 (S0)
   8C:  ADDIU     S0, S0, 4
   90:  LW        S3, 0 (S0)
   94:  JAL       ~Func:sin_rad
   98:  LW        S0, 4 (S0)
   9C:  COPY      A0, S1
   A0:  LIF       F2, 10.0
   A8:  COPY      A1, S2
   AC:  MUL.S     F20, F0, F2
   B0:  NOP
   B4:  JAL       ~Func:set_variable
   B8:  CLEAR     A2
   BC:  COPY      A0, S1
   C0:  TRUNC.W.S F4, F20
   C4:  MFC1      A2, F4
   C8:  JAL       ~Func:set_variable
   CC:  COPY      A1, S3
   D0:  COPY      A0, S1
   D4:  COPY      A1, S0
   D8:  JAL       ~Func:set_variable
   DC:  CLEAR     A2
   E0:  LW        RA, 20 (SP)
   E4:  LW        S3, 1C (SP)
   E8:  LW        S2, 18 (SP)
   EC:  LW        S1, 14 (SP)
   F0:  LW        S0, 10 (SP)
   F4:  LDC1      F20, 28 (SP)
   F8:  LI        V0, 2
   FC:  JR        RA
  100:  ADDIU     SP, SP, 30
}

% Origin: HEURISTIC
#new:Function $Function_80219E40
{
    0:  ADDIU     SP, SP, FFE8
    4:  SW        RA, 10 (SP)
    8:  JAL       ~Func:enable_background_wave
    C:  NOP
   10:  LW        RA, 10 (SP)
   14:  JR        RA
   18:  ADDIU     SP, SP, 18
}

PADDING: 80219E5C to 80219E60 (0063F03C to 0063F040)
00000000

#new:DefenseTable $DefenseTable_80219E60
{
	.Element:Normal 00000000
	.Element:Cosmic 00000063
	.Element:End
}

#new:StatusTable $StatusTable_80219E74
{
	.Status:Normal      0`
	.Status:Default     0`
	.Status:Sleep       0`
	.Status:Poison      0`
	.Status:Frozen      0`
	.Status:Dizzy       0`
	.Status:Fear        0`
	.Status:Static      0`
	.Status:Paralyze    0`
	.Status:Shrink      0`
	.Status:Stop        0`
	.Status:DefaultTurnMod    0`
	.Status:SleepTurnMod      0`
	.Status:PoisonTurnMod     0`
	.Status:FrozenTurnMod     0`
	.Status:DizzyTurnMod      0`
	.Status:FearTurnMod       0`
	.Status:StaticTurnMod     0`
	.Status:ParalyzeTurnMod   0`
	.Status:ShrinkTurnMod     0`
	.Status:StopTurnMod       0`
	.Status:End
}

#new:PartsTable $PartsTable_80219F20
{
	00020000 01000000 000000FF $IdleAnimations_80219F90 $DefenseTable_80219E60 00000100 00000000 01F10000 00000000
	80800001 02003200 FA1400FF $IdleAnimations_80219F90 $DefenseTable_80219E60 00000100 00000000 01F10000 00000000
}

#new:Actor $Monstar
{
	% stats
	[Index]        BCb
	[Level]        45`b
	[MaxHP]        20`b
	[Coins]         0`b
	[Flags]       00000200
	[StatusTable] $StatusTable_80219E74
	% ai
	[PartsCount]    2`s
	[PartsTable]  $PartsTable_80219F20
	[Script]      $Script_Init_80219FF0
	% move effectiveness
	[Escape]        0`b
	[Item]          0`b
	[AirLift]       0`b
	[Hurricane]     0`b % Bow's "Spook" as well
	[UpAndAway]     0`b
	[PowerBounce]  90`b
	[SpinSmash]     4`b % weight (0-4)
	% ui positions
	[Size]        100`b  98`b % width height
	[HealthBar]     0`b  16`b % dx dy
	[StatusTurn]  -10`b  20`b % dx dy
	[StatusIcon]   10`b  20`b % dx dy
}

#new:IdleAnimations $IdleAnimations_80219F90
{
	.Status:Normal    007E0001
	.Status:Stone     007E0000
	.Status:Sleep     007E0001
	.Status:Poison    007E0001
	.Status:Stop      007E0000
	.Status:Static    007E0001
	.Status:Paralyze  007E0000
	.Status:Paralyze  007E0000
	.Status:Dizzy     007E0001
	.Status:Dizzy     007E0001
	.Status:End
}

% Origin: HEURISTIC
#new:IdleAnimations $IdleAnimations_80219FE4
{
	.Status:Normal    007E0004
	.Status:End
}

#new:Script $Script_Init_80219FF0
{
    0:  Call  BindTakeTurn  ( .Actor:Self $Script_TakeTurn_8021B394 )
   14:  Call  BindIdle      ( .Actor:Self $Script_Idle_8021A2D0 )
   28:  Call  BindHandleEvent   ( .Actor:Self $Script_HandleEvent_8021A4FC )
   3C:  Call  BindNextTurn  ( .Actor:Self $Script_NextTurn_8021B384 )
   50:  Call  SetActorVar   ( .Actor:Self 00000000 00000000 )
   68:  Call  SetActorVar   ( .Actor:Self 00000001 00000000 )
   80:  Call  SetActorVar   ( .Actor:Self 00000003 00000000 )
   98:  Return
   A0:  End
}

#new:Unknown $???_8021A098
{
	00000000 00000000 00000000 00000000 00000011 00000000 00000000 00000000
	00000133 10000000 00000000 00000000 00000133 10000000 00000000 14100000
	00000011 00000000 00000001 55510000 00000000 00000000 00000001 25210000
	00000000 00000000 00000001 42410000 00000000 0000000B EB000000 11100000
	00000000 000000BF FFB00000 00000000 00000000 000000BC FCB00000 00000000
	06A00000 000000BF CFB00000 00000000 6AAA6000 0000000B BB000000 00000000
	67A76000 00000000 00000000 00000000 6A7A6000 00000000 00000000 06660000
	06660000 00000000 00000000 66966000 00000000 00000000 00000006 67A76600
	00000000 00001100 00000007 AAAAA700 00000000 00015510 00000006 79A97600
	00000000 00015510 00000006 8A8A8600 00000000 00001100 00000006 98689600
	00000000 00000000 00000000 66666000 0000BEB0 00000000 00000000 00000000
	000BEFEB 00000000 00000000 00000000 000BCECB 00000000 00000000 00000000
	000BECEB 00000000 00000000 00000000 0000BBB0 00000000 00000000 00000066
	60000000 00000000 12100000 000006AA 60000000 00000001 15110000 000006AA
	00000000 00000002 55520000 00000066 00000000 00000001 25210000 00000000
	00000000 00000002 51520000 00000000 00000000 00000000 11100000 00000000
}

#new:Unknown $???_8021A298
{
	11142A55 43D75517 6E9987D9 4119715D 9963C9A7 F9AB1A1D 22E52BEF 34B73DBF
}

#new:Unknown $???_8021A2B8
{
	$???_8021A098 $???_8021A298 00200020 FFFFFFFC 00000000 $???_80223570
}

#new:Script $Script_Idle_8021A2D0
{
    0:  ChildThread
    8:  	Call  $Function_80218000 ( )
   14:  EndChildThread
   1C:  Label  0
   28:  Call  GetActorPos   ( .Actor:Self *Var2 *Var3 *Var4 )
   44:  Call  MakeLerp      ( 00000000 0000000A 0000001E .Easing:CosInOut )
   60:  Label  1
   6C:  Call  UpdateLerp ( )
   78:  Add   *Var0  *Var3
   88:  Call  SetActorPos   ( .Actor:Self *Var2 *Var0 *Var4 )
   A4:  Label  2
   B0:  Call  GetActorVar   ( .Actor:Self 00000001 *Var5 )
   C8:  Wait  1`
   D4:  If  *Var5  ==  00000001
   E4:  	Goto  2
   F0:  EndIf
   F8:  If  *Var1  ==  00000001
  108:  	Goto  1
  114:  EndIf
  11C:  Call  GetActorPos   ( .Actor:Self *Var2 *Var3 *Var4 )
  138:  Call  MakeLerp      ( 00000000 FFFFFFF6 0000001E .Easing:CosInOut )
  154:  Label  3
  160:  Call  UpdateLerp ( )
  16C:  Add   *Var0  *Var3
  17C:  Call  SetActorPos   ( .Actor:Self *Var2 *Var0 *Var4 )
  198:  Label  4
  1A4:  Call  GetActorVar   ( .Actor:Self 00000001 *Var5 )
  1BC:  Wait  1`
  1C8:  If  *Var5  ==  00000001
  1D8:  	Goto  4
  1E4:  EndIf
  1EC:  If  *Var1  ==  00000001
  1FC:  	Goto  3
  208:  EndIf
  210:  Goto  0
  21C:  Return
  224:  End
}

#new:Script $Script_HandleEvent_8021A4FC
{
    0:  Call  UseIdleAnimation  ( .Actor:Self .False )
   14:  Call  SetActorVar       ( .Actor:Self 00000001 00000001 )
   2C:  Call  GetLastEvent      ( .Actor:Self *Var0 )
   40:  Switch  *Var0
   4C:  	CaseOR  ==  .Event:HitCombo % 9
   58:  	CaseOR  ==  .Event:Hit % A
   64:  		SetConst  *Var0  00000001
   74:  		SetConst  *Var1  007E0008
   84:  		ExecWait  DoNormalHit
   90:  	EndCaseGroup
   98:  	Case  ==  .Event:BurnHit % E
   A4:  		Set   *Var0  00000001
   B4:  		Set   *Var1  007E0008
   C4:  		Set   *Var2  FFFFFFFF
   D4:  		ExecWait  $Script_8021B898
   E0:  	Case  ==  .Event:BurnDeath % 24
   EC:  		Set   *Var0  00000001
   FC:  		Set   *Var1  007E0008
  10C:  		Set   *Var2  FFFFFFFF
  11C:  		ExecWait  $Script_8021B898
  128:  		SetConst  *Var0  00000001
  138:  		SetConst  *Var1  007E0008
  148:  		ExecWait  $Script_8021B55C
  154:  		Return
  15C:  	Case  ==  00000017 % 17
  168:  		Call  GetActorVar   ( .Actor:Self 00000000 *Var0 )
  180:  		Switch  *Var0
  18C:  			Case  ==  00000000
  198:  				SetConst  *Var0  00000001
  1A8:  				SetConst  *Var1  007E0001
  1B8:  			Case  ==  00000001
  1C4:  				SetConst  *Var0  00000001
  1D4:  				SetConst  *Var1  007E0004
  1E4:  		EndSwitch
  1EC:  		ExecWait  DoImmune
  1F8:  	Case  ==  .Event:Immune % 19
  204:  		Call  GetActorVar   ( .Actor:Self 00000000 *Var0 )
  21C:  		Switch  *Var0
  228:  			Case  ==  00000000
  234:  				SetConst  *Var0  00000001
  244:  				SetConst  *Var1  007E0001
  254:  			Case  ==  00000001
  260:  				SetConst  *Var0  00000001
  270:  				SetConst  *Var1  007E0004
  280:  		EndSwitch
  288:  		ExecWait  DoImmune
  294:  	Case  ==  .Event:Death % 20
  2A0:  		SetConst  *Var0  00000001
  2B0:  		SetConst  *Var1  007E0008
  2C0:  		ExecWait  DoNormalHit
  2CC:  		Wait  10`
  2D8:  		SetConst  *Var0  00000001
  2E8:  		SetConst  *Var1  007E0008
  2F8:  		ExecWait  $Script_8021B55C
  304:  		Return
  30C:  	Case  ==  .Event:RecoverStatus % 31
  318:  		SetConst  *Var0  00000001
  328:  		SetConst  *Var1  007E0001
  338:  		ExecWait  DoRecover
  344:  	Case  ==  .Event:BeginAirLift % 3A
  350:  		Call  GetActorVar   ( .Actor:Self 00000000 *Var0 )
  368:  		Switch  *Var0
  374:  			Case  ==  00000000
  380:  				SetConst  *Var0  00000001
  390:  				SetConst  *Var1  007E0001
  3A0:  			Case  ==  00000001
  3AC:  				SetConst  *Var0  00000001
  3BC:  				SetConst  *Var1  007E0004
  3CC:  		EndSwitch
  3D4:  		ExecWait  DoAirLift
  3E0:  	Case  ==  .Event:AirLiftFailed % 1F
  3EC:  		Call  GetActorVar   ( .Actor:Self 00000000 *Var0 )
  404:  		Switch  *Var0
  410:  			Case  ==  00000000
  41C:  				SetConst  *Var0  00000001
  42C:  				SetConst  *Var1  007E0001
  43C:  			Case  ==  00000001
  448:  				SetConst  *Var0  00000001
  458:  				SetConst  *Var1  007E0004
  468:  		EndSwitch
  470:  		ExecWait  DoImmune
  47C:  EndSwitch
  484:  Call  SetActorVar       ( .Actor:Self 00000001 00000000 )
  49C:  Call  UseIdleAnimation  ( .Actor:Self .True )
  4B0:  Return
  4B8:  End
}

% Origin: HEURISTIC
#new:Script $Script_8021A9BC
{
    0:  Call  UseIdleAnimation  ( .Actor:Self .False )
   14:  Call  SetActorVar       ( .Actor:Self 00000001 00000001 )
   2C:  Call  SetTargetActor    ( .Actor:Self .Actor:Player )
   40:  Call  UseBattleCamPreset    ( 0000000D )
   50:  Call  SetBattleCamZoom  (  10` )
   60:  Call  SetBattleCamOffsetZ   (  5` )
   70:  Call  BattleCamTargetActor  ( .Actor:Self )
   80:  Call  MoveBattleCamOver (  30` )
   90:  Call  SetAnimation      ( .Actor:Self 00000001 007E0004 )
   A8:  Call  SetIdleAnimations ( .Actor:Self 00000001 $IdleAnimations_80219FE4 )
   C0:  Call  GetActorPos       ( .Actor:Self *Var0 *Var1 *Var2 )
   DC:  Add   *Var1  00000028
   EC:  Sub   *Var2  00000005
   FC:  Call  PlayEffect        ( ~FX:RadialFlowIn:BlueSpikes *Var0 *Var1 *Var2 *Fixed[1.0] 0000012C 00000000 00000000 00000000 00000000 00000000 00000000 00000000 )
  140:  Wait  75`
  14C:  Call  UseBattleCamPreset    ( 00000002 )
  15C:  Call  MoveBattleCamOver (  20` )
  16C:  Call  SetActorVar       ( .Actor:Self 00000001 00000000 )
  184:  Call  UseIdleAnimation  ( .Actor:Self .True )
  198:  Return
  1A0:  End
}

#new:Script $Script_8021AB64
{
    0:  Call  UseIdleAnimation  ( .Actor:Self .False )
   14:  Call  SetActorVar       ( .Actor:Self 00000001 00000001 )
   2C:  Call  SetTargetActor    ( .Actor:Self .Actor:Player )
   40:  Call  UseBattleCamPreset    ( 00000013 )
   50:  Call  GetActorPos       ( .Actor:Self *Var0 *Var1 *Var2 )
   6C:  Call  SetBattleCamTarget    ( *Var0 *Var1 *Var2 )
   84:  Call  SetBattleCamZoom  (  250` )
   94:  Call  SetBattleCamOffsetZ   (  55` )
   A4:  Call  BattleCamTargetActor  ( .Actor:Self )
   B4:  Call  MoveBattleCamOver (  30` )
   C4:  Wait  30`
   D0:  Thread
   D8:  	Call  SetAnimation  ( .Actor:Self 00000001 007E0004 )
   F0:  	Wait  20`
   FC:  	Call  SetAnimation  ( .Actor:Self 00000001 007E0005 )
  114:  	Wait  20`
  120:  	Call  SetAnimation  ( .Actor:Self 00000001 007E0006 )
  138:  EndThread
  140:  Thread
  148:  	Call  $Function_80218458 ( )
  154:  	Call  MakeLerp  ( 00000000 000000C8 0000003C .Easing:QuadraticIn )
  170:  	Label  0
  17C:  	Call  UpdateLerp ( )
  188:  	Call  $Function_8021849C    ( *Var0 )
  198:  	Wait  1`
  1A4:  	If  *Var1  ==  00000001
  1B4:  		Goto  0
  1C0:  	EndIf
  1C8:  EndThread
  1D0:  Call  PlaySoundAtActor      ( .Actor:Self .Sound:BigPowerUp )
  1E4:  Call  $Function_802184D4    ( 00000050 00000078 )
  1F8:  Call  UseBattleCamPreset    ( 00000013 )
  208:  Call  GetActorPos   ( .Actor:Self *Var0 *Var1 *Var2 )
  224:  Call  SetBattleCamTarget    ( *Var0 *Var1 *Var2 )
  23C:  Call  SetBattleCamZoom      (  100` )
  24C:  Call  SetBattleCamOffsetZ   (  60` )
  25C:  Call  BattleCamTargetActor  ( .Actor:Self )
  26C:  Call  MoveBattleCamOver     (  60` )
  27C:  Wait  60`
  288:  Call  PlaySoundAtActor      ( .Actor:Self 000002EA )
  29C:  Call  PlaySoundAtActor      ( .Actor:Self 0000036E )
  2B0:  Thread
  2B8:  	Wait  10`
  2C4:  	Loop  00000012
  2D0:  		Call  RandInt   ( 00000096 *Var0 )
  2E4:  		Add   *Var0  00000064
  2F4:  		Call  $Function_802184D4    ( *Var0 00000014 )
  308:  		Wait  10`
  314:  	EndLoop
  31C:  EndThread
  324:  Thread
  32C:  	Loop  0000003C
  338:  		Call  RandInt   ( 00000001 *Var0 )
  34C:  		Add   *Var0  00000002
  35C:  		Call  RandInt   ( 00000190 *Var1 )
  370:  		Sub   *Var1  00000064
  380:  		Call  RandInt   ( 00000064 *Var2 )
  394:  		Sub   *Var2  00000032
  3A4:  		Set   *Var3  *Var1
  3B4:  		Sub   *Var3  000000C8
  3C4:  		Set   *Var4  *Var2
  3D4:  		Call  RandInt   ( 0000000A *Var5 )
  3E8:  		Add   *Var5  0000000A
  3F8:  		Call  PlayEffect    ( 0000000F *Var0 *Var1 000000F0 *Var2 *Var3 00000000 *Var4 *Var5 00000000 00000000 00000000 00000000 00000000 )
  43C:  		Wait  3`
  448:  	EndLoop
  450:  EndThread
  458:  Wait  8`
  464:  Call  UseBattleCamPreset    ( 00000002 )
  474:  Call  MoveBattleCamOver (  10` )
  484:  Call  GetActorPos       ( .Actor:Self *Var0 *Var1 *Var2 )
  4A0:  Add   *Var1  00000032
  4B0:  Add   *Var2  00000005
  4C0:  Call  PlayEffect        ( ~FX:RadialFlowOut:BlueSpikes *Var0 *Var1 *Var2 *Fixed[0.8] 000000A0 00000000 00000000 00000000 00000000 00000000 00000000 00000000 )
  504:  Call  SetAnimation      ( .Actor:Self 00000001 007E0007 )
  51C:  Call  EnemyTestTarget   ( .Actor:Self *Var0 ~Flags:DamageType:0 00000000 00000000 00000010 )
  540:  Switch  *Var0
  54C:  	CaseOR  ==  .HitResult:Miss % 6
  558:  	CaseOR  ==  .HitResult:Lucky % 5
  564:  		Set   *VarA  *Var0
  574:  		Wait  170`
  580:  		Call  SetAnimation      ( .Actor:Self 00000001 007E0001 )
  598:  		Call  SetIdleAnimations ( .Actor:Self 00000001 $IdleAnimations_80219F90 )
  5B0:  		Call  MakeLerp  ( 000000C8 00000000 0000003C .Easing:Linear )
  5CC:  		Label  1
  5D8:  		Call  UpdateLerp ( )
  5E4:  		Call  $Function_8021849C    ( *Var0 )
  5F4:  		Wait  1`
  600:  		If  *Var1  ==  00000001
  610:  			Goto  1
  61C:  		EndIf
  624:  		If  *VarA  ==  .HitResult:Lucky % 5
  634:  			Call  EnemyTestTarget   ( .Actor:Self *Var0 ~Flags:DamageType:TriggerLucky 00000000 00000000 00000000 )
  658:  		EndIf
  660:  		Wait  20`
  66C:  		Call  SetActorVar       ( .Actor:Self 00000001 00000000 )
  684:  		Call  UseIdleAnimation  ( .Actor:Self .True )
  698:  		Return
  6A0:  	EndCaseGroup
  6A8:  EndSwitch
  6B0:  Wait  170`
  6BC:  Wait  2`
  6C8:  Call  SetGoalToTarget   ( .Actor:Self )
  6D8:  Call  EnemyDamageTarget ( .Actor:Self *Var0 ~Flags:DamageType:NoContact|Cosmic 00000000 00000000 00000001 00000020 )
  700:  Switch  *Var0
  70C:  	CaseOR  ==  .HitResult:Hit % 0
  718:  	CaseOR  ==  .HitResult:QuakeImmune % 2
  724:  		Call  SetAnimation      ( .Actor:Self 00000001 007E0001 )
  73C:  		Call  SetIdleAnimations ( .Actor:Self 00000001 $IdleAnimations_80219F90 )
  754:  		Call  MakeLerp  ( 000000C8 00000000 0000003C .Easing:Linear )
  770:  		Label  2
  77C:  		Call  UpdateLerp ( )
  788:  		Call  $Function_8021849C    ( *Var0 )
  798:  		Wait  1`
  7A4:  		If  *Var1  ==  00000001
  7B4:  			Goto  2
  7C0:  		EndIf
  7C8:  		Wait  20`
  7D4:  	EndCaseGroup
  7DC:  EndSwitch
  7E4:  Call  SetActorVar       ( .Actor:Self 00000001 00000000 )
  7FC:  Call  UseIdleAnimation  ( .Actor:Self .True )
  810:  Return
  818:  End
}

#new:Script $Script_NextTurn_8021B384
{
    0:  Return
    8:  End
}

#new:Script $Script_TakeTurn_8021B394
{
    0:  ExecWait  $Script_8021AB64
    C:  Call  UseBattleCamPreset    ( 00000013 )
   1C:  Call  GetActorPos       ( .Actor:Self *Var0 *Var1 *Var2 )
   38:  Add   *Var1  00000048
   48:  Call  SetBattleCamTarget    ( *Var0 *Var1 *Var2 )
   60:  Call  SetBattleCamZoom  (  340` )
   70:  Call  MoveBattleCamOver (  20` )
   80:  Call  UseIdleAnimation  ( .Actor:Self .False )
   94:  Call  GetActorVar       ( .Actor:Self 00000003 *Var0 )
   AC:  Switch  *Var0
   B8:  	Case  ==  00000000
   C4:  		Call  ActorSpeak    ( 001200E5 .Actor:Self 00000001 007E0009 007E0009 ) % Are you scaaaaared yet?
   E4:  	Case  ==  00000001
   F0:  		Call  ActorSpeak    ( 001200E6 .Actor:Self 00000001 007E0009 007E0009 ) % Ho ho ho ho! Your puuuuny attack doesn't hurt me a ...
  110:  	Case  ==  00000002
  11C:  		Call  ActorSpeak    ( 001200E7 .Actor:Self 00000001 007E0009 007E0009 ) % Thiiiis is your only chance!
  13C:  	Default
  144:  		Call  ActorSpeak    ( 001200E6 .Actor:Self 00000001 007E0009 007E0009 ) % Ho ho ho ho! Your puuuuny attack doesn't hurt me a ...
  164:  EndSwitch
  16C:  Call  AddActorVar       ( .Actor:Self 00000003 00000001 )
  184:  Call  UseIdleAnimation  ( .Actor:Self .True )
  198:  Call  UseBattleCamPreset    ( 00000002 )
  1A8:  Call  MoveBattleCamOver (  20` )
  1B8:  Return
  1C0:  End
}

#new:Script $Script_8021B55C
{
    0:  Call  8027D32C  ( FFFFFF81 )
   10:  Call  UseIdleAnimation  ( .Actor:Self .False )
   24:  If  *Var1  !=  FFFFFFFF
   34:  	Call  SetAnimation  ( .Actor:Self *Var0 *Var1 )
   4C:  	Wait  10`
   58:  EndIf
   60:  Call  80269E80  ( *Var5 )
   70:  Switch  *Var5
   7C:  	CaseOR  ==  0000000A
   88:  	CaseOR  ==  0000000E
   94:  	CaseOR  ==  0000000C
   A0:  	CaseOR  ==  00000010
   AC:  	CaseOR  ==  0000000B
   B8:  	CaseOR  ==  0000000F
   C4:  	CaseOR  ==  0000000D
   D0:  	CaseOR  ==  00000011
   DC:  	CaseOR  ==  00000002
   E8:  	EndCaseGroup
   F0:  	Default
   F8:  		Set   *Flag[00]  .False
  108:  		Call  GetOriginalActorType  ( .Actor:Self *Var1 )
  11C:  		Switch  *Var1
  128:  			CaseOR  ==  0000000D
  134:  			CaseOR  ==  0000000F
  140:  			CaseOR  ==  0000004A
  14C:  			EndCaseGroup
  154:  			Default
  15C:  		EndSwitch
  164:  		If  *Var2  !=  FFFFCFC7
  174:  			Set   *Var2  00000000
  184:  			Loop  00000018
  190:  				Call  SetActorYaw   ( .Actor:Self *Var2 )
  1A4:  				Add   *Var2  0000001E
  1B4:  				Wait  1`
  1C0:  			EndLoop
  1C8:  			Call  SetActorYaw   ( .Actor:Self  0` )
  1DC:  		EndIf
  1E4:  EndSwitch
  1EC:  Call  GetActorPos       ( .Actor:Self *Var0 *Var1 *Var2 )
  208:  Add   *Var1  0000000A
  218:  Add   *Var2  0000000A
  228:  Call  PlayEffect        ( ~FX:BigSmokePuff *Var0 *Var1 *Var2 00000000 00000000 00000000 00000000 00000000 00000000 00000000 00000000 00000000 00000000 )
  26C:  Call  PlaySoundAtActor  ( .Actor:Self .Sound:Death )
  280:  Call  DropStarPoints    ( .Actor:Self )
  290:  Call  SetActorYaw       ( .Actor:Self  0` )
  2A4:  Set   *Var3  00000000
  2B4:  Loop  0000000C
  2C0:  	Call  SetActorRotation  ( .Actor:Self *Var3 00000000 00000000 )
  2DC:  	Add   *Var3  00000008
  2EC:  	Wait  1`
  2F8:  EndLoop
  300:  Call  UseBattleCamPreset    ( 00000002 )
  310:  ExecWait  ForceNextTarget
  31C:  Call  RemoveActor   ( .Actor:Self )
  32C:  Return
  334:  End
}

#new:Script $Script_8021B898
{
    0:  Call  SetAnimation  ( .Actor:Self *Var0 *Var1 )
   18:  Call  80269E80      ( *Var3 )
   28:  Switch  *Var3
   34:  	Case  ==  00000009
   40:  		Call  GetOriginalActorType  ( .Actor:Self *Var7 )
   54:  		Switch  *Var7
   60:  			CaseOR  ==  00000012
   6C:  			CaseOR  ==  00000030
   78:  			EndCaseGroup
   80:  			Default
   88:  				Call  GetActorPos   ( .Actor:Self *Var4 *Var5 *Var6 )
   A4:  				Call  SetActorJumpGravity   ( .Actor:Self *Fixed[0.01] )
   B8:  				Add   *Var5  00000037
   C8:  				Call  SetGoalPos    ( .Actor:Self *Var4 *Var5 *Var6 )
   E4:  				Call  JumpToGoal    ( .Actor:Self  8` .False .False .False )
  104:  		EndSwitch
  10C:  		Set   *Var7  00000000
  11C:  		Loop  0000001E
  128:  			Add   *Var7  00000030
  138:  			Call  SetActorYaw   ( .Actor:Self *Var7 )
  14C:  			Wait  1`
  158:  		EndLoop
  160:  		Call  GetOriginalActorType  ( .Actor:Self *Var7 )
  174:  		Switch  *Var7
  180:  			CaseOR  ==  00000012
  18C:  			CaseOR  ==  00000030
  198:  				Wait  30`
  1A4:  			EndCaseGroup
  1AC:  			Default
  1B4:  				Sub   *Var5  00000037
  1C4:  				Call  SetActorJumpGravity   ( .Actor:Self *Fixed[0.8] )
  1D8:  				If  *Var5  ==  00000000
  1E8:  					Call  SetGoalPos    ( .Actor:Self *Var4 *Var5 *Var6 )
  204:  					Call  JumpToGoal    ( .Actor:Self  15` .False .True .False )
  224:  					Call  SetGoalPos    ( .Actor:Self *Var4 *Var5 *Var6 )
  240:  					Call  JumpToGoal    ( .Actor:Self  10` .False .True .False )
  260:  					Call  SetGoalPos    ( .Actor:Self *Var4 *Var5 *Var6 )
  27C:  					Call  JumpToGoal    ( .Actor:Self  5` .False .True .False )
  29C:  				Else
  2A4:  					Call  SetGoalPos    ( .Actor:Self *Var4 *Var5 *Var6 )
  2C0:  					Call  JumpToGoal    ( .Actor:Self  15` .False .False .False )
  2E0:  					Call  SetGoalPos    ( .Actor:Self *Var4 *Var5 *Var6 )
  2FC:  					Call  JumpToGoal    ( .Actor:Self  10` .False .False .False )
  31C:  					Call  SetGoalPos    ( .Actor:Self *Var4 *Var5 *Var6 )
  338:  					Call  JumpToGoal    ( .Actor:Self  5` .False .False .False )
  358:  				EndIf
  360:  		EndSwitch
  368:  	Default
  370:  		Wait  20`
  37C:  EndSwitch
  384:  If  *Var2  !=  FFFFFFFF
  394:  	Call  SetAnimation  ( .Actor:Self *Var0 *Var2 )
  3AC:  EndIf
  3B4:  Wait  10`
  3C0:  Call  GetLastEvent  ( .Actor:Self *Var1 )
  3D4:  Switch  *Var1
  3E0:  	Case  ==  .Event:BurnHit % E
  3EC:  		Call  GetPartEventFlags ( .Actor:Self *Var0 *Var1 )
  404:  		If  *Var1  !&  00000202
  414:  			Call  GetActorPos       ( .Actor:Self *Var0 *Var1 *Var2 )
  430:  			Call  GetActorSize      ( .Actor:Self *Var3 *Var4 )
  448:  			Call  GetStatusFlags    ( .Actor:Self *Var5 )
  45C:  			If  *Var5  &  ~Flags:StatusFlags:Shrink % 80000
  46C:  				MulF  *Var3  *Fixed[0.4]
  47C:  				MulF  *Var4  *Fixed[0.4]
  48C:  			EndIf
  494:  			DivF  *Var3  *Fixed[2.0]
  4A4:  			Call  GetActorFlags ( .Actor:Self *Var5 )
  4B8:  			If  *Var5  &  00000800
  4C8:  				SubF  *Var1  *Var3
  4D8:  			Else
  4E0:  				AddF  *Var1  *Var3
  4F0:  			EndIf
  4F8:  			AddF  *Var2  *Fixed[5.0]
  508:  			DivF  *Var3  *Fixed[10.0]
  518:  			Call  GetStatusFlags    ( .Actor:Self *Var5 )
  52C:  			If  *Var5  &  ~Flags:StatusFlags:Shrink % 80000
  53C:  				MulF  *Var3  *Fixed[0.4]
  54C:  				If  *Var3  <  00000001
  55C:  					SetF  *Var3  *Fixed[1.0]
  56C:  				EndIf
  574:  			EndIf
  57C:  			Call  PlayEffect    ( ~FX:SmokeBurst:Black *Var0 *Var1 *Var2 *Var3 0000000A 00000000 00000000 00000000 00000000 00000000 00000000 00000000 )
  5C0:  		EndIf
  5C8:  	Case  ==  .Event:BurnDeath % 24
  5D4:  EndSwitch
  5DC:  Return
  5E4:  End
}

PADDING: 8021BE84 to 8021BE90 (00641064 to 00641070)
00000000 00000000 00000000

#new:DefenseTable $DefenseTable_8021BE90
{
	.Element:Normal 00000000
	.Element:End
}

#new:DefenseTable $DefenseTable_8021BE9C
{
	.Element:Normal 00000000
	.Element:End
}

#new:StatusTable $StatusTable_8021BEA8
{
	.Status:Normal      0`
	.Status:Default     0`
	.Status:Sleep     100`
	.Status:Poison    100`
	.Status:Frozen    100`
	.Status:Dizzy     100`
	.Status:Fear      100`
	.Status:Static    100`
	.Status:Paralyze  100`
	.Status:Shrink    100`
	.Status:Stop      100`
	.Status:DefaultTurnMod    0`
	.Status:SleepTurnMod      0`
	.Status:PoisonTurnMod     0`
	.Status:FrozenTurnMod     0`
	.Status:DizzyTurnMod      0`
	.Status:FearTurnMod       0`
	.Status:StaticTurnMod     0`
	.Status:ParalyzeTurnMod   0`
	.Status:ShrinkTurnMod     0`
	.Status:StopTurnMod       0`
	.Status:End
}

#new:StatusTable $StatusTable_8021BF54
{
	.Status:Normal      0`
	.Status:Default     0`
	.Status:Sleep     100`
	.Status:Poison     80`
	.Status:Frozen    100`
	.Status:Dizzy     100`
	.Status:Fear       80`
	.Status:Static     80`
	.Status:Paralyze  100`
	.Status:Shrink    100`
	.Status:Stop      100`
	.Status:DefaultTurnMod    0`
	.Status:SleepTurnMod      0`
	.Status:PoisonTurnMod     0`
	.Status:FrozenTurnMod     0`
	.Status:DizzyTurnMod      1`
	.Status:FearTurnMod       0`
	.Status:StaticTurnMod     0`
	.Status:ParalyzeTurnMod   0`
	.Status:ShrinkTurnMod     0`
	.Status:StopTurnMod       0`
	.Status:End
}

#new:PartsTable $PartsTable_8021C000
{
	00020001 01000000 001400FF $IdleAnimations_8021D87C $DefenseTable_8021BE90 00000000 00000000 00F60000 00000000
	00800000 02000000 001800FF $IdleAnimations_8021C0B8 $DefenseTable_8021BE9C 00004000 00000000 00F60000 00000000
	00020001 03000000 F01800FF $IdleAnimations_8021C150 $DefenseTable_8021BE90 00000000 00000000 00F60000 00000000
	00020001 04000000 F01800FF $IdleAnimations_8021C15C $DefenseTable_8021BE90 00000000 00000000 00F60000 00000000
}

#new:Actor $Paragoomba
{
	% stats
	[Index]         8b
	[Level]         6`b
	[MaxHP]         2`b
	[Coins]         1`b
	[Flags]       00000200
	[StatusTable] $StatusTable_8021BF54
	% ai
	[PartsCount]    4`s
	[PartsTable]  $PartsTable_8021C000
	[Script]      $Script_Init_8021C168
	% move effectiveness
	[Escape]       90`b
	[Item]        100`b
	[AirLift]     100`b
	[Hurricane]   100`b % Bow's "Spook" as well
	[UpAndAway]    95`b
	[PowerBounce] 100`b
	[SpinSmash]     0`b % weight (0-4)
	% ui positions
	[Size]         36`b  26`b % width height
	[HealthBar]     0`b   0`b % dx dy
	[StatusTurn]  -10`b  20`b % dx dy
	[StatusIcon]   10`b  20`b % dx dy
}

#new:IdleAnimations $IdleAnimations_8021C0B8
{
	.Status:Normal    00280001
	.Status:Stone     00280000
	.Status:Sleep     0028000B
	.Status:Poison    00280001
	.Status:Stop      00280000
	.Status:Static    00280001
	.Status:Paralyze  00280000
	.Status:Dizzy     0028000C
	.Status:Fear      0028000C
	.Status:End
}

#new:IdleAnimations $IdleAnimations_8021C104
{
	.Status:Normal    00280004
	.Status:Stone     00280000
	.Status:Sleep     0028000B
	.Status:Poison    00280001
	.Status:Stop      00280000
	.Status:Static    00280004
	.Status:Paralyze  00280000
	.Status:Dizzy     0028000C
	.Status:Fear      0028000C
	.Status:End
}

#new:IdleAnimations $IdleAnimations_8021C150
{
	.Status:Normal    00280009
	.Status:End
}

#new:IdleAnimations $IdleAnimations_8021C15C
{
	.Status:Normal    0028000A
	.Status:End
}

#new:Script $Script_Init_8021C168
{
    0:  Call  BindTakeTurn      ( .Actor:Self $Script_TakeTurn_8021CADC )
   14:  Call  BindIdle  ( .Actor:Self $Script_Idle_8021C1B4 )
   28:  Call  BindHandleEvent   ( .Actor:Self $Script_HandleEvent_8021C4E8 )
   3C:  Return
   44:  End
}

#new:Script $Script_Idle_8021C1B4
{
    0:  Label  A
    C:  Call  RandInt   ( 00000050 *Var0 )
   20:  Add   *Var0  00000050
   30:  Loop  *Var0
   3C:  	Label  0
   48:  	Call  GetStatusFlags    ( .Actor:Self *Var1 )
   5C:  	If  *Var1  &  ~Flags:StatusFlags:Sleep|Frozen|Fear|Paralyze|Dizzy|Stone|Stop % 35D000
   6C:  		Wait  1`
   78:  		Goto  0
   84:  	EndIf
   8C:  	Wait  1`
   98:  EndLoop
   A0:  Call  GetActorPos       ( .Actor:Self *Var0 *Var1 *Var2 )
   BC:  Add   *Var0  00000005
   CC:  Call  SetActorIdleSpeed ( .Actor:Self *Fixed[0.6] )
   E0:  Call  SetIdleAnimations ( .Actor:Self 00000002 $IdleAnimations_8021C104 )
   F8:  Call  SetIdleGoal       ( .Actor:Self *Var0 *Var1 *Var2 )
  114:  Call  IdleFlyToGoal     ( .Actor:Self  0`  -5` .Easing:Linear )
  130:  Loop  00000014
  13C:  	Label  1
  148:  	Call  GetStatusFlags    ( .Actor:Self *Var1 )
  15C:  	If  *Var1  &  ~Flags:StatusFlags:Sleep|Frozen|Fear|Paralyze|Dizzy|Stone|Stop % 35D000
  16C:  		Wait  1`
  178:  		Goto  1
  184:  	EndIf
  18C:  	Wait  1`
  198:  EndLoop
  1A0:  Call  GetActorPos       ( .Actor:Self *Var0 *Var1 *Var2 )
  1BC:  Sub   *Var0  00000005
  1CC:  Call  SetActorIdleSpeed ( .Actor:Self *Fixed[0.6] )
  1E0:  Call  SetIdleGoal       ( .Actor:Self *Var0 *Var1 *Var2 )
  1FC:  Call  IdleFlyToGoal     ( .Actor:Self  0`  -5` .Easing:Linear )
  218:  Call  SetIdleAnimations ( .Actor:Self 00000002 $IdleAnimations_8021C0B8 )
  230:  Loop  00000028
  23C:  	Label  2
  248:  	Call  GetStatusFlags    ( .Actor:Self *Var1 )
  25C:  	If  *Var1  &  ~Flags:StatusFlags:Sleep|Frozen|Fear|Paralyze|Dizzy|Stone|Stop % 35D000
  26C:  		Wait  1`
  278:  		Goto  2
  284:  	EndIf
  28C:  	Wait  1`
  298:  EndLoop
  2A0:  Goto  A
  2AC:  Return
  2B4:  End
}

#new:Script $Script_8021C470
{
    0:  Call  ResetAllActorSounds   ( .Actor:Self )
   10:  Call  SetGoalToHome ( .Actor:Self )
   20:  Call  SetActorSpeed ( .Actor:Self *Fixed[7.0] )
   34:  Call  FlyToGoal     ( .Actor:Self  0`  1` .Easing:SinOut )
   50:  Call  SetAnimation  ( .Actor:Self 00000002 00280001 )
   68:  Return
   70:  End
}

#new:Script $Script_HandleEvent_8021C4E8
{
    0:  Call  UseIdleAnimation  ( .Actor:Self .False )
   14:  Call  EnableIdleScript  ( .Actor:Self 00000000 )
   28:  Call  GetLastEvent      ( .Actor:Self *Var0 )
   3C:  Switch  *Var0
   48:  	CaseOR  ==  .Event:HitCombo % 9
   54:  	CaseOR  ==  .Event:Hit % A
   60:  		SetConst  *Var0  00000002
   70:  		SetConst  *Var1  00280006
   80:  		ExecWait  DoNormalHit
   8C:  		Call  GetBattlePhase    ( *Var0 )
   9C:  		If  *Var0  ==  00000001
   AC:  			Call  GetEncounterState ( *Var0 )
   BC:  			If  *Var0  ==  00000004
   CC:  				ExecWait  $Script_8021D2F4
   D8:  			EndIf
   E0:  		EndIf
   E8:  	EndCaseGroup
   F0:  	Case  ==  .Event:BurnHit % E
   FC:  		SetConst  *Var0  00000002
  10C:  		SetConst  *Var1  0028000D
  11C:  		SetConst  *Var2  0028000E
  12C:  		ExecWait  DoBurnHit
  138:  	Case  ==  .Event:BurnDeath % 24
  144:  		SetConst  *Var0  00000002
  154:  		SetConst  *Var1  0028000D
  164:  		SetConst  *Var2  0028000E
  174:  		ExecWait  DoBurnHit
  180:  		SetConst  *Var0  00000002
  190:  		SetConst  *Var1  0028000E
  1A0:  		ExecWait  DoDeath
  1AC:  		Return
  1B4:  	Case  ==  .Event:FallTrigger % C
  1C0:  		SetConst  *Var0  00000002
  1D0:  		SetConst  *Var1  00280006
  1E0:  		ExecWait  DoNormalHit
  1EC:  		ExecWait  $Script_8021D2F4
  1F8:  	Case  ==  0000000F % F
  204:  		SetConst  *Var0  00000002
  214:  		SetConst  *Var1  0028000D
  224:  		SetConst  *Var2  0028000E
  234:  		ExecWait  DoBurnHit
  240:  		ExecWait  $Script_8021D2F4
  24C:  	Case  ==  .Event:ShockHit % 2F
  258:  		SetConst  *Var0  00000002
  268:  		SetConst  *Var1  0028000F
  278:  		ExecWait  DoShockHit
  284:  		SetConst  *Var0  00000002
  294:  		SetConst  *Var1  00280006
  2A4:  		ExecWait  DoJumpBack
  2B0:  		Call  SetAnimation  ( .Actor:Self 00000002 0028000C )
  2C8:  		ExecWait  $Script_8021C470
  2D4:  	Case  ==  .Event:ShockDeath % 26
  2E0:  		SetConst  *Var0  00000002
  2F0:  		SetConst  *Var1  0028000F
  300:  		ExecWait  DoShockHit
  30C:  		SetConst  *Var0  00000002
  31C:  		SetConst  *Var1  00280007
  32C:  		ExecWait  DoDeath
  338:  		Return
  340:  	Case  ==  .Event:StarBeam % 13
  34C:  	CaseOR  ==  00000017 % 17
  358:  	CaseOR  ==  .Event:Immune % 19
  364:  	CaseOR  ==  .Event:AirLiftFailed % 1F
  370:  		SetConst  *Var0  00000002
  380:  		SetConst  *Var1  00280001
  390:  		ExecWait  DoImmune
  39C:  	EndCaseGroup
  3A4:  	Case  ==  .Event:Death % 20
  3B0:  		SetConst  *Var0  00000002
  3C0:  		SetConst  *Var1  00280006
  3D0:  		ExecWait  DoNormalHit
  3DC:  		Wait  10`
  3E8:  		SetConst  *Var0  00000002
  3F8:  		SetConst  *Var1  00280007
  408:  		ExecWait  DoDeath
  414:  		Return
  41C:  	Case  ==  .Event:BeginFirstStrike % 38
  428:  		Call  SetActorPos       ( .Actor:Self  20`  0`  0` )
  444:  		Call  HPBarToCurrent    ( .Actor:Self )
  454:  	Case  ==  .Event:EndFirstStrike % 35
  460:  		Call  SetAnimation  ( .Actor:Self 00000002 00280004 )
  478:  		ExecWait  $Script_8021C470
  484:  		Call  HPBarToHome   ( .Actor:Self )
  494:  	Case  ==  .Event:RecoverStatus % 31
  4A0:  		SetConst  *Var0  00000002
  4B0:  		SetConst  *Var1  00280001
  4C0:  		ExecWait  DoRecover
  4CC:  	Case  ==  .Event:ScareAway % 39
  4D8:  		Call  SetActorFlagBits  ( .Actor:Self 00000200 .False )
  4F0:  		SetConst  *Var0  00000002
  500:  		SetConst  *Var1  00280004
  510:  		SetConst  *Var2  00280006
  520:  		ExecWait  DoScareAway
  52C:  		Return
  534:  	Case  ==  .Event:BeginAirLift % 3A
  540:  		SetConst  *Var0  00000002
  550:  		SetConst  *Var1  00280004
  560:  		ExecWait  DoAirLift
  56C:  	Case  ==  .Event:BlowAway % 16
  578:  		SetConst  *Var0  00000002
  588:  		SetConst  *Var1  00280006
  598:  		ExecWait  DoBlowAway
  5A4:  		Return
  5AC:  	Default
  5B4:  EndSwitch
  5BC:  Call  EnableIdleScript  ( .Actor:Self FFFFFFFF )
  5D0:  Call  UseIdleAnimation  ( .Actor:Self .True )
  5E4:  Return
  5EC:  End
}

#new:Script $Script_TakeTurn_8021CADC
{
    0:  Call  UseIdleAnimation  ( .Actor:Self .False )
   14:  Call  EnableIdleScript  ( .Actor:Self 00000000 )
   28:  Call  SetTargetActor    ( .Actor:Self .Actor:Player )
   3C:  Call  SetGoalToTarget   ( .Actor:Self )
   4C:  Call  UseBattleCamPreset    ( 0000003F )
   5C:  Call  BattleCamTargetActor  ( .Actor:Self )
   6C:  Call  8024ECF8  ( FFFFFFFF 00000001 00000000 )
   84:  Call  SetAnimation      ( .Actor:Self 00000002 00280004 )
   9C:  Call  SetGoalToTarget   ( .Actor:Self )
   AC:  Call  AddGoalPos        ( .Actor:Self  50`  0`  0` )
   C8:  Call  SetActorSpeed     ( .Actor:Self *Fixed[6.0] )
   DC:  Call  FlyToGoal ( .Actor:Self  0`  -4` .Easing:Linear )
   F8:  Call  EnemyTestTarget   ( .Actor:Self *Var0 ~Flags:DamageType:0 00000000 00000001 00000010 )
  11C:  Switch  *Var0
  128:  	CaseOR  ==  .HitResult:Miss % 6
  134:  	CaseOR  ==  .HitResult:Lucky % 5
  140:  		Set   *VarA  *Var0
  150:  		Wait  10`
  15C:  		Call  UseBattleCamPreset    ( 00000042 )
  16C:  		Call  SetBattleCamZoom  (  300` )
  17C:  		Call  BattleCamTargetActor  ( .Actor:Self )
  18C:  		Call  8024ECF8  ( FFFFFFFF 00000001 00000000 )
  1A4:  		Call  PlaySoundAtActor  ( .Actor:Self 000020E0 )
  1B8:  		Call  SetActorSounds    ( .Actor:Self .ActorSound:Jump 00000000 00000000 )
  1D4:  		Call  SetActorSpeed     ( .Actor:Self *Fixed[5.0] )
  1E8:  		Call  SetActorJumpGravity   ( .Actor:Self *Fixed[1.8] )
  1FC:  		Call  SetAnimation      ( .Actor:Self 00000002 00280005 )
  214:  		Call  GetActorPos       ( .Actor:Self *Var0 *Var1 *Var2 )
  230:  		Call  SetGoalPos        ( .Actor:Self *Var0 *Var1 *Var2 )
  24C:  		Call  JumpToGoal        ( .Actor:Self  10` .False .False .False )
  26C:  		Call  PlaySoundAtActor  ( .Actor:Self 000002C1 )
  280:  		Call  SetActorSounds    ( .Actor:Self .ActorSound:Fly 00000000 00000000 )
  29C:  		Call  SetGoalToTarget   ( .Actor:Self )
  2AC:  		Sub   *Var0  00000050
  2BC:  		Set   *Var1  00000014
  2CC:  		Call  SetGoalPos        ( .Actor:Self *Var0 *Var1 *Var2 )
  2E8:  		Call  SetActorSpeed     ( .Actor:Self *Fixed[8.0] )
  2FC:  		Call  SetAnimation      ( .Actor:Self 00000002 00280005 )
  314:  		Call  FlyToGoal ( .Actor:Self  0`  -10` .Easing:QuadraticOut )
  330:  		Thread
  338:  			Loop  00000004
  344:  				Call  PlaySoundAtActor  ( .Actor:Self 000020DF )
  358:  				Wait  4`
  364:  			EndLoop
  36C:  		EndThread
  374:  		Call  SetAnimation  ( .Actor:Self 00000002 00280002 )
  38C:  		Call  AddActorDecoration    ( .Actor:Self 00000002 00000000 .Decoration:Sweat )
  3A8:  		Call  SetAnimationRate      ( .Actor:Self 00000002 *Fixed[3.0] )
  3C0:  		Wait  10`
  3CC:  		If  *VarA  ==  .HitResult:Lucky % 5
  3DC:  			Call  EnemyTestTarget   ( .Actor:Self *Var0 ~Flags:DamageType:TriggerLucky 00000000 00000000 00000000 )
  400:  		EndIf
  408:  		Wait  10`
  414:  		Call  SetAnimationRate  ( .Actor:Self 00000002 *Fixed[1.0] )
  42C:  		Call  UseBattleCamPreset    ( 00000002 )
  43C:  		Call  ResetAllActorSounds   ( .Actor:Self )
  44C:  		Call  YieldTurn ( )
  458:  		Call  SetAnimation      ( .Actor:Self 00000002 00280004 )
  470:  		Call  SetActorYaw       ( .Actor:Self  180` )
  484:  		ExecWait  $Script_8021C470
  490:  		Call  SetActorYaw       ( .Actor:Self  0` )
  4A4:  		Call  RemoveActorDecoration ( .Actor:Self 00000002 00000000 )
  4BC:  		Call  EnableIdleScript  ( .Actor:Self FFFFFFFF )
  4D0:  		Call  UseIdleAnimation  ( .Actor:Self .True )
  4E4:  		Return
  4EC:  	EndCaseGroup
  4F4:  	Default
  4FC:  		Wait  10`
  508:  		Call  UseBattleCamPreset    ( 00000042 )
  518:  		Call  SetBattleCamZoom  (  300` )
  528:  		Call  BattleCamTargetActor  ( .Actor:Self )
  538:  		Call  8024ECF8  ( FFFFFFFF 00000001 00000000 )
  550:  		Call  PlaySoundAtActor  ( .Actor:Self 000020E0 )
  564:  		Call  SetActorSounds    ( .Actor:Self .ActorSound:Jump 00000000 00000000 )
  580:  		Call  SetActorSpeed     ( .Actor:Self *Fixed[5.0] )
  594:  		Call  SetActorJumpGravity   ( .Actor:Self *Fixed[1.8] )
  5A8:  		Call  SetAnimation      ( .Actor:Self 00000002 00280005 )
  5C0:  		Call  GetActorPos       ( .Actor:Self *Var0 *Var1 *Var2 )
  5DC:  		Call  SetGoalPos        ( .Actor:Self *Var0 *Var1 *Var2 )
  5F8:  		Call  JumpToGoal        ( .Actor:Self  10` .False .False .False )
  618:  		Call  PlaySoundAtActor  ( .Actor:Self 000002C1 )
  62C:  		Call  SetActorSounds    ( .Actor:Self .ActorSound:Fly 00000000 00000000 )
  648:  		Call  SetGoalToTarget   ( .Actor:Self )
  658:  		Call  SetActorSpeed     ( .Actor:Self *Fixed[8.0] )
  66C:  		Call  SetAnimation      ( .Actor:Self 00000002 00280005 )
  684:  		Call  FlyToGoal ( .Actor:Self  0`  -10` .Easing:Linear )
  6A0:  EndSwitch
  6A8:  Wait  2`
  6B4:  Call  EnemyDamageTarget ( .Actor:Self *Var0 ~Flags:DamageType:0 00000000 00000000 00000001 00000020 )
  6DC:  Switch  *Var0
  6E8:  	CaseOR  ==  .HitResult:Hit % 0
  6F4:  	CaseOR  ==  .HitResult:QuakeImmune % 2
  700:  		Call  UseBattleCamPreset    ( 00000002 )
  710:  		Call  SetGoalToTarget       ( .Actor:Self )
  720:  		Call  AddGoalPos    ( .Actor:Self  50`  10`  0` )
  73C:  		Call  SetActorSpeed ( .Actor:Self *Fixed[6.0] )
  750:  		Call  SetAnimation  ( .Actor:Self 00000002 00280004 )
  768:  		Call  FlyToGoal     ( .Actor:Self  0`  -10` .Easing:Linear )
  784:  		Call  ResetAllActorSounds   ( .Actor:Self )
  794:  		Wait  5`
  7A0:  		Call  YieldTurn ( )
  7AC:  		Call  SetAnimation  ( .Actor:Self 00000002 00280004 )
  7C4:  		ExecWait  $Script_8021C470
  7D0:  	EndCaseGroup
  7D8:  EndSwitch
  7E0:  Call  EnableIdleScript  ( .Actor:Self FFFFFFFF )
  7F4:  Call  UseIdleAnimation  ( .Actor:Self .True )
  808:  Return
  810:  End
}

#new:Script $Script_8021D2F4
{
    0:  Call  8027D32C      ( FFFFFF81 )
   10:  Call  SetPartFlags  ( .Actor:Self 00000002 00020005 )
   28:  Call  SetPartFlags  ( .Actor:Self 00000003 00120004 )
   40:  Call  SetPartFlags  ( .Actor:Self 00000004 00120004 )
   58:  Call  SetPartFlags  ( .Actor:Self 00000001 00800004 )
   70:  Call  GetActorPos   ( .Actor:Self *Var0 *Var1 *Var2 )
   8C:  Call  SetPartPos    ( .Actor:Self 00000003 *Var0 *Var1 *Var2 )
   AC:  Call  SetPartDispOffset ( .Actor:Self 00000003 FFFFFFF7 00000007 FFFFFFFE )
   CC:  Call  SetPartPos    ( .Actor:Self 00000004 *Var0 *Var1 *Var2 )
   EC:  Call  SetPartDispOffset ( .Actor:Self 00000004 0000000B 00000007 FFFFFFFE )
  10C:  Call  GetLastEvent  ( .Actor:Self *Var0 )
  120:  If  *Var0  ==  0000000F % F
  130:  	Call  SetAnimation  ( .Actor:Self 00000001 0026000A )
  148:  Else
  150:  	Call  SetAnimation  ( .Actor:Self 00000001 00260005 )
  168:  EndIf
  170:  Call  SetActorSounds    ( .Actor:Self .ActorSound:Jump 00000301 00000000 )
  18C:  Call  GetActorPos       ( .Actor:Self *Var0 *Var1 *Var2 )
  1A8:  Set   *Var1  00000000
  1B8:  Call  SetActorJumpGravity   ( .Actor:Self *Fixed[0.8] )
  1CC:  Call  SetGoalPos        ( .Actor:Self *Var0 *Var1 *Var2 )
  1E8:  Call  JumpToGoal        ( .Actor:Self  15` .False .True .False )
  208:  Call  $Function_80218530    ( 00000064 0000000A )
  21C:  Thread
  224:  	Call  ShakeCam  ( .Cam:Battle 00000000  5` *Fixed[0.3] )
  240:  EndThread
  248:  Call  ResetActorSounds  ( .Actor:Self .ActorSound:Jump )
  25C:  Call  GetLastEvent      ( .Actor:Self *Var3 )
  270:  If  *Var3  ==  0000000F % F
  280:  	Call  SetAnimation  ( .Actor:Self 00000001 00260005 )
  298:  	Call  GetActorPos   ( .Actor:Self *Var3 *Var4 *Var5 )
  2B4:  	Add   *Var4  0000000A
  2C4:  	Add   *Var5  00000005
  2D4:  	Call  PlayEffect    ( ~FX:SmokeBurst:Black *Var3 *Var4 *Var5 *Fixed[1.0] 0000000A 00000000 00000000 00000000 00000000 00000000 00000000 00000000 )
  318:  EndIf
  320:  Call  SetGoalPos    ( .Actor:Self *Var0 *Var1 *Var2 )
  33C:  Call  JumpToGoal    ( .Actor:Self  10` .False .True .False )
  35C:  Call  SetGoalPos    ( .Actor:Self *Var0 *Var1 *Var2 )
  378:  Call  JumpToGoal    ( .Actor:Self  5` .False .True .False )
  398:  Loop  0000000A
  3A4:  	Call  SetPartFlagBits   ( .Actor:Self 00000003 00000001 .True )
  3C0:  	Call  SetPartFlagBits   ( .Actor:Self 00000004 00000001 .True )
  3DC:  	Wait  1`
  3E8:  	Call  SetPartFlagBits   ( .Actor:Self 00000003 00000001 .False )
  404:  	Call  SetPartFlagBits   ( .Actor:Self 00000004 00000001 .False )
  420:  	Wait  1`
  42C:  EndLoop
  434:  Call  SetPartFlagBits   ( .Actor:Self 00000003 00000001 .True )
  450:  Call  SetPartFlagBits   ( .Actor:Self 00000004 00000001 .True )
  46C:  Call  GetIndexFromHome  ( .Actor:Self *Var0 )
  480:  Mod   *Var0  00000004
  490:  Call  SetGoalToIndex    ( .Actor:Self *Var0 )
  4A4:  Call  GetGoalPos        ( .Actor:Self *Var0 *Var1 *Var2 )
  4C0:  Call  SetHomePos        ( .Actor:Self *Var0 *Var1 *Var2 )
  4DC:  Call  SetAnimation      ( .Actor:Self 00000001 00260001 )
  4F4:  Call  SetActorFlagBits  ( .Actor:Self 00000200 .False )
  50C:  Call  SetStatusTable    ( .Actor:Self $StatusTable_8021BEA8 )
  520:  Call  SetActorType      ( .Actor:Self 00000007 )
  534:  ExecWait  $Script_8021D914
  540:  Call  SetActorFlagBits  ( .Actor:Self 00001000 .True )
  558:  Call  HPBarToHome       ( .Actor:Self )
  568:  Call  ResetAllActorSounds   ( .Actor:Self )
  578:  Return
  580:  End
}

#new:IdleAnimations $IdleAnimations_8021D87C
{
	.Status:Normal    00260001
	.Status:Stone     00260000
	.Status:Sleep     00260008
	.Status:Poison    00260001
	.Status:Stop      00260000
	.Status:Static    00260001
	.Status:Paralyze  00260000
	.Status:Dizzy     00260007
	.Status:Fear      00260007
	.Status:End
}

#new:IdleAnimations $IdleAnimations_8021D8C8
{
	.Status:Normal    00260003
	.Status:Stone     00260000
	.Status:Sleep     00260008
	.Status:Poison    00260001
	.Status:Stop      00260000
	.Status:Static    00260003
	.Status:Paralyze  00260000
	.Status:Dizzy     00260007
	.Status:Fear      00260007
	.Status:End
}

#new:Script $Script_8021D914
{
    0:  Call  BindTakeTurn      ( .Actor:Self $Script_TakeTurn_8021E468 )
   14:  Call  BindIdle  ( .Actor:Self $Script_Idle_8021D960 )
   28:  Call  BindHandleEvent   ( .Actor:Self $Script_HandleEvent_8021DC3C )
   3C:  Return
   44:  End
}

#new:Script $Script_Idle_8021D960
{
    0:  Label  A
    C:  Call  RandInt   ( 00000050 *Var0 )
   20:  Add   *Var0  00000050
   30:  Loop  *Var0
   3C:  	Label  0
   48:  	Call  GetStatusFlags    ( .Actor:Self *Var1 )
   5C:  	If  *Var1  &  ~Flags:StatusFlags:Sleep|Frozen|Fear|Paralyze|Dizzy|Stone|Stop % 35D000
   6C:  		Wait  1`
   78:  		Goto  0
   84:  	EndIf
   8C:  	Wait  1`
   98:  EndLoop
   A0:  Call  GetActorPos       ( .Actor:Self *Var0 *Var1 *Var2 )
   BC:  Add   *Var0  00000005
   CC:  Call  SetActorIdleSpeed ( .Actor:Self *Fixed[1.0] )
   E0:  Call  SetIdleAnimations ( .Actor:Self 00000001 $IdleAnimations_8021D8C8 )
   F8:  Call  SetIdleGoal       ( .Actor:Self *Var0 *Var1 *Var2 )
  114:  Call  IdleRunToGoal     ( .Actor:Self  0` )
  128:  Call  SetIdleAnimations ( .Actor:Self 00000001 $IdleAnimations_8021D87C )
  140:  Loop  00000014
  14C:  	Label  1
  158:  	Call  GetStatusFlags    ( .Actor:Self *Var1 )
  16C:  	If  *Var1  &  ~Flags:StatusFlags:Sleep|Frozen|Fear|Paralyze|Dizzy|Stone|Stop % 35D000
  17C:  		Wait  1`
  188:  		Goto  1
  194:  	EndIf
  19C:  	Wait  1`
  1A8:  EndLoop
  1B0:  Call  GetActorPos       ( .Actor:Self *Var0 *Var1 *Var2 )
  1CC:  Sub   *Var0  00000005
  1DC:  Call  SetActorIdleSpeed ( .Actor:Self *Fixed[1.0] )
  1F0:  Call  SetIdleAnimations ( .Actor:Self 00000001 $IdleAnimations_8021D8C8 )
  208:  Call  SetIdleGoal       ( .Actor:Self *Var0 *Var1 *Var2 )
  224:  Call  IdleRunToGoal     ( .Actor:Self  0` )
  238:  Call  SetIdleAnimations ( .Actor:Self 00000001 $IdleAnimations_8021D87C )
  250:  Loop  00000050
  25C:  	Label  2
  268:  	Call  GetStatusFlags    ( .Actor:Self *Var1 )
  27C:  	If  *Var1  &  ~Flags:StatusFlags:Sleep|Frozen|Fear|Paralyze|Dizzy|Stone|Stop % 35D000
  28C:  		Wait  1`
  298:  		Goto  2
  2A4:  	EndIf
  2AC:  	Wait  1`
  2B8:  EndLoop
  2C0:  Goto  A
  2CC:  Return
  2D4:  End
}

#new:Script $Script_HandleEvent_8021DC3C
{
    0:  Call  UseIdleAnimation  ( .Actor:Self .False )
   14:  Call  EnableIdleScript  ( .Actor:Self 00000000 )
   28:  Call  SetActorScale     ( .Actor:Self *Fixed[1.0] *Fixed[1.0] *Fixed[1.0] )
   44:  Call  GetLastEvent      ( .Actor:Self *Var0 )
   58:  Switch  *Var0
   64:  	CaseOR  ==  .Event:HitCombo % 9
   70:  	CaseOR  ==  .Event:Hit % A
   7C:  		SetConst  *Var0  00000001
   8C:  		SetConst  *Var1  00260005
   9C:  		ExecWait  DoNormalHit
   A8:  	EndCaseGroup
   B0:  	Case  ==  .Event:BurnHit % E
   BC:  		SetConst  *Var0  00000001
   CC:  		SetConst  *Var1  00260009
   DC:  		SetConst  *Var2  0026000A
   EC:  		ExecWait  DoBurnHit
   F8:  	Case  ==  .Event:BurnDeath % 24
  104:  		SetConst  *Var0  00000001
  114:  		SetConst  *Var1  00260009
  124:  		SetConst  *Var2  0026000A
  134:  		ExecWait  DoBurnHit
  140:  		SetConst  *Var0  00000001
  150:  		SetConst  *Var1  0026000A
  160:  		ExecWait  DoDeath
  16C:  		Return
  174:  	Case  ==  .Event:SpinSmashHit % B
  180:  		SetConst  *Var0  00000001
  190:  		SetConst  *Var1  00260005
  1A0:  		ExecWait  DoSpinSmashHit
  1AC:  	Case  ==  .Event:SpinSmashDeath % 21
  1B8:  		SetConst  *Var0  00000001
  1C8:  		SetConst  *Var1  00260005
  1D8:  		ExecWait  DoSpinSmashHit
  1E4:  		SetConst  *Var0  00000001
  1F4:  		SetConst  *Var1  00260006
  204:  		ExecWait  DoDeath
  210:  		Return
  218:  	Case  ==  .Event:ShockHit % 2F
  224:  		SetConst  *Var0  00000001
  234:  		SetConst  *Var1  0026000E
  244:  		ExecWait  DoShockHit
  250:  		SetConst  *Var0  00000001
  260:  		SetConst  *Var1  00260005
  270:  		ExecWait  DoJumpBack
  27C:  		Call  JumpToGoal    ( .Actor:Self  5` .False .True .False )
  29C:  		Call  SetAnimationRate      ( .Actor:Self 00000001 *Fixed[2.0] )
  2B4:  		Call  SetAnimation  ( .Actor:Self 00000001 00260007 )
  2CC:  		Call  SetGoalToHome ( .Actor:Self )
  2DC:  		Call  SetActorSpeed ( .Actor:Self *Fixed[8.0] )
  2F0:  		Call  RunToGoal     ( .Actor:Self  0` .False )
  308:  		Call  SetAnimationRate      ( .Actor:Self 00000001 *Fixed[1.0] )
  320:  		Wait  5`
  32C:  		Call  SetAnimation  ( .Actor:Self 00000001 00260001 )
  344:  		Call  SetActorJumpGravity   ( .Actor:Self *Fixed[1.6] )
  358:  		Call  JumpToGoal    ( .Actor:Self  5` .False .True .False )
  378:  	Case  ==  .Event:ShockDeath % 26
  384:  		SetConst  *Var0  00000001
  394:  		SetConst  *Var1  0026000E
  3A4:  		ExecWait  DoShockHit
  3B0:  		SetConst  *Var0  00000001
  3C0:  		SetConst  *Var1  00260006
  3D0:  		ExecWait  DoDeath
  3DC:  		Return
  3E4:  	Case  ==  .Event:StarBeam % 13
  3F0:  	CaseOR  ==  00000017 % 17
  3FC:  	CaseOR  ==  .Event:Immune % 19
  408:  	CaseOR  ==  .Event:AirLiftFailed % 1F
  414:  		SetConst  *Var0  00000001
  424:  		SetConst  *Var1  00260001
  434:  		ExecWait  DoImmune
  440:  	EndCaseGroup
  448:  	Case  ==  .Event:Death % 20
  454:  		SetConst  *Var0  00000001
  464:  		SetConst  *Var1  00260005
  474:  		ExecWait  DoNormalHit
  480:  		Wait  10`
  48C:  		SetConst  *Var0  00000001
  49C:  		SetConst  *Var1  00260006
  4AC:  		ExecWait  DoDeath
  4B8:  		Return
  4C0:  	Case  ==  .Event:EndFirstStrike % 35
  4CC:  		Call  SetAnimationRate  ( .Actor:Self 00000001 *Fixed[2.0] )
  4E4:  		Call  SetAnimation  ( .Actor:Self 00000001 00260003 )
  4FC:  		Call  SetGoalToHome ( .Actor:Self )
  50C:  		Call  SetActorSpeed ( .Actor:Self *Fixed[4.0] )
  520:  		Call  RunToGoal     ( .Actor:Self  0` .False )
  538:  		Call  SetAnimationRate  ( .Actor:Self 00000001 *Fixed[1.0] )
  550:  		Call  HPBarToHome   ( .Actor:Self )
  560:  	Case  ==  .Event:RecoverStatus % 31
  56C:  		SetConst  *Var0  00000001
  57C:  		SetConst  *Var1  00260001
  58C:  		ExecWait  DoRecover
  598:  	Case  ==  .Event:ScareAway % 39
  5A4:  		SetConst  *Var0  00000001
  5B4:  		SetConst  *Var1  00260003
  5C4:  		SetConst  *Var2  00260005
  5D4:  		ExecWait  DoScareAway
  5E0:  		Return
  5E8:  	Case  ==  .Event:BeginAirLift % 3A
  5F4:  		SetConst  *Var0  00000001
  604:  		SetConst  *Var1  00260003
  614:  		ExecWait  DoAirLift
  620:  	Case  ==  .Event:BlowAway % 16
  62C:  		SetConst  *Var0  00000001
  63C:  		SetConst  *Var1  00260005
  64C:  		ExecWait  DoBlowAway
  658:  		Return
  660:  	Default
  668:  EndSwitch
  670:  Call  SetAnimation      ( .Actor:Self 00000001 00260001 )
  688:  Call  EnableIdleScript  ( .Actor:Self 00000001 )
  69C:  Call  UseIdleAnimation  ( .Actor:Self .True )
  6B0:  Return
  6B8:  End
}

#new:FloatTable $FloatTable_8021E2FC
{
	0.0      0.017452 0.034899 0.052336 0.069756 0.087156 0.104528 0.121869
	0.139173 0.156434 0.173648 0.190809 0.207912 0.224951 0.241922 0.258819
	0.275637 0.292372 0.309017 0.325568 0.34202  0.358368 0.374607 0.390731
	0.406737 0.422618 0.438371 0.45399  0.469472 0.48481  0.5      0.515038
	0.529919 0.544639 0.559193 0.573576 0.587785 0.601815 0.615661 0.62932
	0.642788 0.656059 0.669131 0.681998 0.694658 0.707107 0.71934  0.731354
	0.743145 0.75471  0.766044 0.777146 0.788011 0.798636 0.809017 0.819152
	0.829038 0.838671 0.848048 0.857167 0.866025 0.87462  0.882948 0.891007
	0.898794 0.906308 0.913545 0.920505 0.927184 0.93358  0.939693 0.945519
	0.951057 0.956305 0.961262 0.965926 0.970296 0.97437  0.978148 0.981627
	0.984808 0.987688 0.990268 0.992546 0.994522 0.996195 0.997564 0.99863
	0.999391 0.999848 1.0
}

#new:Script $Script_TakeTurn_8021E468
{
    0:  Call  UseIdleAnimation  ( .Actor:Self .False )
   14:  Call  EnableIdleScript  ( .Actor:Self 00000000 )
   28:  Call  SetTargetActor    ( .Actor:Self .Actor:Player )
   3C:  Call  UseBattleCamPreset    ( 0000003F )
   4C:  Call  BattleCamTargetActor  ( .Actor:Self )
   5C:  Call  8024ECF8  ( FFFFFFFF 00000001 00000000 )
   74:  Call  SetAnimation      ( .Actor:Self 00000001 00260003 )
   8C:  Call  SetGoalToTarget   ( .Actor:Self )
   9C:  Call  AddGoalPos        ( .Actor:Self  50`  0`  0` )
   B8:  Call  SetActorSpeed     ( .Actor:Self *Fixed[6.0] )
   CC:  Call  RunToGoal ( .Actor:Self  0` .False )
   E4:  Call  SetAnimation      ( .Actor:Self 00000001 00260001 )
   FC:  Call  SetActorDispOffset    ( .Actor:Self 00000000 FFFFFFFF 00000000 )
  118:  Wait  1`
  124:  Call  SetActorDispOffset    ( .Actor:Self 00000000 FFFFFFFE 00000000 )
  140:  Wait  5`
  14C:  Call  SetActorDispOffset    ( .Actor:Self 00000000 00000000 00000000 )
  168:  Call  SetAnimation      ( .Actor:Self 00000001 00260004 )
  180:  Call  EnemyTestTarget   ( .Actor:Self *Var0 ~Flags:DamageType:0 00000000 00000001 00000010 )
  1A4:  Switch  *Var0
  1B0:  	CaseOR  ==  .HitResult:Miss % 6
  1BC:  	CaseOR  ==  .HitResult:Lucky % 5
  1C8:  		Set   *VarA  *Var0
  1D8:  		Call  SetGoalToTarget   ( .Actor:Self )
  1E8:  		Call  GetGoalPos        ( .Actor:Self *Var0 *Var1 *Var2 )
  204:  		Sub   *Var0  0000000A
  214:  		Set   *Var1  0000000A
  224:  		Add   *Var2  00000003
  234:  		Call  SetGoalPos        ( .Actor:Self *Var0 *Var1 *Var2 )
  250:  		Call  SetActorJumpGravity   ( .Actor:Self *Fixed[1.2] )
  264:  		Thread
  26C:  			Call  GetActorPos   ( .Actor:Self *Var1 *Var2 *Var0 )
  288:  			Set   *Var0  00000000
  298:  			Loop  00000010
  2A4:  				Call  GetActorPos   ( .Actor:Self *Var4 *Var5 *Var6 )
  2C0:  				Call  $Function_80218714    ( *Var1 *Var2 *Var4 *Var5 *Var0 )
  2E0:  				Call  SetActorRotation      ( .Actor:Self 00000000 00000000 *Var0 )
  2FC:  				Set   *Var1  *Var4
  30C:  				Set   *Var2  *Var5
  31C:  				Set   *Var3  *Var6
  32C:  				Wait  1`
  338:  			EndLoop
  340:  		EndThread
  348:  		Thread
  350:  			Wait  6`
  35C:  			Call  SetAnimation  ( .Actor:Self 00000001 00260004 )
  374:  		EndThread
  37C:  		Call  JumpToGoal    ( .Actor:Self  16` .False .True .False )
  39C:  		Call  SetAnimation  ( .Actor:Self 00000001 00260008 )
  3B4:  		Call  SetActorScale ( .Actor:Self *Fixed[1.1] *Fixed[0.8] *Fixed[1.0] )
  3D0:  		Call  SetActorDispOffset    ( .Actor:Self 00000000 00000005 00000000 )
  3EC:  		Wait  1`
  3F8:  		Call  SetActorScale ( .Actor:Self *Fixed[1.3] *Fixed[0.5] *Fixed[1.0] )
  414:  		Call  SetActorDispOffset    ( .Actor:Self 00000000 FFFFFFFE 00000000 )
  430:  		Wait  1`
  43C:  		Call  SetActorScale ( .Actor:Self *Fixed[1.0] *Fixed[1.0] *Fixed[1.0] )
  458:  		Call  SetActorDispOffset    ( .Actor:Self 00000000 00000007 00000000 )
  474:  		Call  SetAnimation  ( .Actor:Self 00000001 00260005 )
  48C:  		Wait  5`
  498:  		If  *VarA  ==  .HitResult:Lucky % 5
  4A8:  			Call  EnemyTestTarget   ( .Actor:Self *Var0 ~Flags:DamageType:TriggerLucky 00000000 00000000 00000000 )
  4CC:  		EndIf
  4D4:  		Wait  5`
  4E0:  		Call  SetActorDispOffset    ( .Actor:Self 00000000 00000000 00000000 )
  4FC:  		Call  SetAnimation      ( .Actor:Self 00000001 00260004 )
  514:  		Call  SetGoalToTarget   ( .Actor:Self )
  524:  		Call  GetGoalPos        ( .Actor:Self *Var0 *Var1 *Var2 )
  540:  		Add   *Var0  00000014
  550:  		Set   *Var1  00000000
  560:  		Call  SetGoalPos        ( .Actor:Self *Var0 *Var1 *Var2 )
  57C:  		Call  SetActorJumpGravity   ( .Actor:Self *Fixed[2.0] )
  590:  		Thread
  598:  			Wait  4`
  5A4:  			Set   *Var0  000000B4
  5B4:  			Loop  00000004
  5C0:  				Sub   *Var0  0000002D
  5D0:  				Call  SetActorRotation  ( .Actor:Self 00000000 00000000 *Var0 )
  5EC:  				Wait  1`
  5F8:  			EndLoop
  600:  			Call  SetAnimation  ( .Actor:Self 00000001 00260004 )
  618:  		EndThread
  620:  		Call  JumpToGoal        ( .Actor:Self  15` .False .True .False )
  640:  		Call  SetAnimation      ( .Actor:Self 00000001 00260007 )
  658:  		Wait  5`
  664:  		Call  UseBattleCamPreset    ( 00000002 )
  674:  		Call  YieldTurn ( )
  680:  		Call  SetActorYaw       ( .Actor:Self  180` )
  694:  		Call  AddActorDecoration    ( .Actor:Self 00000001 00000000 .Decoration:Sweat )
  6B0:  		Call  SetAnimationRate  ( .Actor:Self 00000001 *Fixed[2.0] )
  6C8:  		Call  SetGoalToHome     ( .Actor:Self )
  6D8:  		Call  SetActorSpeed     ( .Actor:Self *Fixed[8.0] )
  6EC:  		Call  RunToGoal ( .Actor:Self  0` .False )
  704:  		Call  SetAnimationRate  ( .Actor:Self 00000001 *Fixed[1.0] )
  71C:  		Call  SetActorYaw       ( .Actor:Self  0` )
  730:  		Wait  5`
  73C:  		Call  SetAnimation      ( .Actor:Self 00000001 00260001 )
  754:  		Call  SetActorJumpGravity   ( .Actor:Self *Fixed[1.6] )
  768:  		Call  JumpToGoal        ( .Actor:Self  5` .False .True .False )
  788:  		Call  RemoveActorDecoration ( .Actor:Self 00000001 00000000 )
  7A0:  		Call  EnableIdleScript  ( .Actor:Self 00000001 )
  7B4:  		Call  UseIdleAnimation  ( .Actor:Self .True )
  7C8:  		Return
  7D0:  	EndCaseGroup
  7D8:  	Default
  7E0:  		Call  SetGoalToTarget       ( .Actor:Self )
  7F0:  		Call  SetActorJumpGravity   ( .Actor:Self *Fixed[1.2] )
  804:  		Thread
  80C:  			Call  GetActorPos   ( .Actor:Self *Var1 *Var2 *Var0 )
  828:  			Set   *Var0  00000000
  838:  			Loop  00000010
  844:  				Call  GetActorPos   ( .Actor:Self *Var4 *Var5 *Var6 )
  860:  				Call  $Function_80218714    ( *Var1 *Var2 *Var4 *Var5 *Var0 )
  880:  				Call  SetActorRotation      ( .Actor:Self 00000000 00000000 *Var0 )
  89C:  				Set   *Var1  *Var4
  8AC:  				Set   *Var2  *Var5
  8BC:  				Set   *Var3  *Var6
  8CC:  				Wait  1`
  8D8:  			EndLoop
  8E0:  		EndThread
  8E8:  		Thread
  8F0:  			Wait  6`
  8FC:  			Call  SetAnimation  ( .Actor:Self 00000001 00260004 )
  914:  		EndThread
  91C:  		Call  JumpToGoal    ( .Actor:Self  16` .False .True .False )
  93C:  		Call  SetAnimation  ( .Actor:Self 00000001 0026000B )
  954:  		Call  SetActorScale ( .Actor:Self *Fixed[1.1] *Fixed[0.8] *Fixed[1.0] )
  970:  		Wait  1`
  97C:  		Call  SetActorScale ( .Actor:Self *Fixed[1.3] *Fixed[0.5] *Fixed[1.0] )
  998:  		Wait  1`
  9A4:  EndSwitch
  9AC:  Call  EnemyDamageTarget ( .Actor:Self *Var0 ~Flags:DamageType:0 00000000 00000000 00000001 00000020 )
  9D4:  Switch  *Var0
  9E0:  	CaseOR  ==  .HitResult:Hit % 0
  9EC:  	CaseOR  ==  .HitResult:QuakeImmune % 2
  9F8:  		Call  UseBattleCamPreset    ( 00000002 )
  A08:  		Call  SetActorScale ( .Actor:Self *Fixed[1.1] *Fixed[0.8] *Fixed[1.0] )
  A24:  		Wait  1`
  A30:  		Call  SetActorScale ( .Actor:Self *Fixed[1.0] *Fixed[1.0] *Fixed[1.0] )
  A4C:  		Wait  1`
  A58:  		Call  SetActorRotation      ( .Actor:Self 00000000 00000000 00000000 )
  A74:  		Call  SetActorDispOffset    ( .Actor:Self 00000000 00000000 00000000 )
  A90:  		Call  SetAnimation  ( .Actor:Self 00000001 00260001 )
  AA8:  		Call  GetGoalPos    ( .Actor:Self *Var0 *Var1 *Var2 )
  AC4:  		Add   *Var0  00000028
  AD4:  		Set   *Var1  00000000
  AE4:  		Call  SetActorJumpGravity   ( .Actor:Self *Fixed[1.8] )
  AF8:  		Call  SetGoalPos    ( .Actor:Self *Var0 *Var1 *Var2 )
  B14:  		Call  JumpToGoal    ( .Actor:Self  10` .False .True .False )
  B34:  		Add   *Var0  0000001E
  B44:  		Call  SetGoalPos    ( .Actor:Self *Var0 *Var1 *Var2 )
  B60:  		Call  JumpToGoal    ( .Actor:Self  8` .False .True .False )
  B80:  		Add   *Var0  00000014
  B90:  		Call  SetGoalPos    ( .Actor:Self *Var0 *Var1 *Var2 )
  BAC:  		Call  JumpToGoal    ( .Actor:Self  6` .False .True .False )
  BCC:  		Call  SetAnimation  ( .Actor:Self 00000001 00260001 )
  BE4:  		Wait  3`
  BF0:  		Call  YieldTurn ( )
  BFC:  		Call  SetAnimationRate      ( .Actor:Self 00000001 *Fixed[2.0] )
  C14:  		Call  SetAnimation  ( .Actor:Self 00000001 00260003 )
  C2C:  		Call  SetGoalToHome ( .Actor:Self )
  C3C:  		Call  SetActorSpeed ( .Actor:Self *Fixed[8.0] )
  C50:  		Call  RunToGoal     ( .Actor:Self  0` .False )
  C68:  		Call  SetAnimationRate      ( .Actor:Self 00000001 *Fixed[1.0] )
  C80:  	EndCaseGroup
  C88:  EndSwitch
  C90:  Call  EnableIdleScript  ( .Actor:Self 00000001 )
  CA4:  Call  UseIdleAnimation  ( .Actor:Self .True )
  CB8:  Return
  CC0:  End
}

#new:DefenseTable $DefenseTable_8021F130
{
	.Element:Normal 00000000
	.Element:End
}

% Origin: HINT
#new:DefenseTable $DefenseTable_8021F13C
{
	.Element:Normal 00000000
	.Element:End
}

#new:StatusTable $StatusTable_8021F148
{
	.Status:Normal      0`
	.Status:Default     0`
	.Status:Sleep      50`
	.Status:Poison     50`
	.Status:Frozen      0`
	.Status:Dizzy      75`
	.Status:Fear        0`
	.Status:Static     50`
	.Status:Paralyze   75`
	.Status:Shrink     80`
	.Status:Stop       90`
	.Status:DefaultTurnMod    0`
	.Status:SleepTurnMod      0`
	.Status:PoisonTurnMod     0`
	.Status:FrozenTurnMod     0`
	.Status:DizzyTurnMod      0`
	.Status:FearTurnMod       0`
	.Status:StaticTurnMod     0`
	.Status:ParalyzeTurnMod   0`
	.Status:ShrinkTurnMod     0`
	.Status:StopTurnMod      -1`
	.Status:End
}

% Origin: HINT
#new:StatusTable $StatusTable_8021F1F4
{
	.Status:Normal      0`
	.Status:Default     0`
	.Status:Sleep      50`
	.Status:Poison     50`
	.Status:Frozen      0`
	.Status:Dizzy     100`
	.Status:Fear        0`
	.Status:Static     50`
	.Status:Paralyze   75`
	.Status:Shrink     80`
	.Status:Stop       90`
	.Status:DefaultTurnMod    0`
	.Status:SleepTurnMod      0`
	.Status:PoisonTurnMod     0`
	.Status:FrozenTurnMod     0`
	.Status:DizzyTurnMod      0`
	.Status:FearTurnMod       0`
	.Status:StaticTurnMod     0`
	.Status:ParalyzeTurnMod   0`
	.Status:ShrinkTurnMod     0`
	.Status:StopTurnMod      -1`
	.Status:End
}

#new:PartsTable $PartsTable_8021F2A0
{
	00800000 01000000 022300FF $IdleAnimations_8021F380 $DefenseTable_8021F130 00000000 00000000 FBF40000 00000000
}

% Origin: HINT
#new:PartsTable $PartsTable_8021F2C4
{
	00020001 01000000 022300FF $IdleAnimations_8021F380 $DefenseTable_8021F13C 00000000 00000000 FBF40000 00000000
	00800000 02000000 F62300FF $IdleAnimations_8021F3CC $DefenseTable_8021F13C 00800000 00000000 00F80000 00000000
	00020001 03000000 000000FF $IdleAnimations_8021F418 $DefenseTable_8021F13C 00000000 00000000 00000000 00000000
}

#new:Actor $GRYMagikoopa
{
	% stats
	[Index]        57b
	[Level]        21`b
	[MaxHP]        11`b
	[Coins]         2`b
	[Flags]       00000000
	[StatusTable] $StatusTable_8021F148
	% ai
	[PartsCount]    1`s
	[PartsTable]  $PartsTable_8021F2A0
	[Script]      $Script_Init_80221568
	% move effectiveness
	[Escape]       40`b
	[Item]         40`b
	[AirLift]      80`b
	[Hurricane]    70`b % Bow's "Spook" as well
	[UpAndAway]    95`b
	[PowerBounce]  75`b
	[SpinSmash]     0`b % weight (0-4)
	% ui positions
	[Size]         36`b  40`b % width height
	[HealthBar]     0`b   0`b % dx dy
	[StatusTurn]  -10`b  20`b % dx dy
	[StatusIcon]   10`b  32`b % dx dy
}

% Origin: HINT
#new:Actor $FlyingGRYMagikoopa
{
	% stats
	[Index]        58b
	[Level]        21`b
	[MaxHP]        11`b
	[Coins]         2`b
	[Flags]       00000200
	[StatusTable] $StatusTable_8021F1F4
	% ai
	[PartsCount]    3`s
	[PartsTable]  $PartsTable_8021F2C4
	[Script]      $Script_Init_8022160C
	% move effectiveness
	[Escape]       40`b
	[Item]         40`b
	[AirLift]      95`b
	[Hurricane]    75`b % Bow's "Spook" as well
	[UpAndAway]    95`b
	[PowerBounce]  75`b
	[SpinSmash]     0`b % weight (0-4)
	% ui positions
	[Size]         48`b  40`b % width height
	[HealthBar]     0`b   0`b % dx dy
	[StatusTurn]  -25`b  20`b % dx dy
	[StatusIcon]    1`b  34`b % dx dy
}

% Origin: HINT
#new:IdleAnimations $IdleAnimations_8021F380
{
	.Status:Normal    00560501
	.Status:Stone     00560500
	.Status:Sleep     00560508
	.Status:Poison    00560501
	.Status:Stop      00560500
	.Status:Static    00560501
	.Status:Paralyze  00560500
	.Status:Dizzy     00560507
	.Status:Fear      00560507
	.Status:End
}

% Origin: HINT
#new:IdleAnimations $IdleAnimations_8021F3CC
{
	.Status:Normal    00570501
	.Status:Stone     00570500
	.Status:Sleep     00570508
	.Status:Poison    00570501
	.Status:Stop      00570500
	.Status:Static    00570501
	.Status:Paralyze  00570500
	.Status:Dizzy     00570507
	.Status:Fear      00570507
	.Status:End
}

% Origin: HINT
#new:IdleAnimations $IdleAnimations_8021F418
{
	.Status:Normal    0057050A
	.Status:End
}

% Origin: HINT
#new:Script $Script_Idle_8021F424
{
    0:  Return
    8:  End
}

#new:Script $Script_HandleEvent_8021F434
{
    0:  Call  UseIdleAnimation  ( .Actor:Self .False )
   14:  Call  EnableIdleScript  ( .Actor:Self 00000000 )
   28:  Call  GetLastEvent      ( .Actor:Self *Var0 )
   3C:  Switch  *Var0
   48:  	CaseOR  ==  .Event:HitCombo % 9
   54:  	CaseOR  ==  .Event:Hit % A
   60:  		SetConst  *Var0  00000001
   70:  		SetConst  *Var1  00560504
   80:  		ExecWait  DoNormalHit
   8C:  	EndCaseGroup
   94:  	Case  ==  .Event:BurnHit % E
   A0:  		SetConst  *Var0  00000001
   B0:  		SetConst  *Var1  00560505
   C0:  		SetConst  *Var2  00560506
   D0:  		ExecWait  DoBurnHit
   DC:  	Case  ==  .Event:BurnDeath % 24
   E8:  		SetConst  *Var0  00000001
   F8:  		SetConst  *Var1  00560505
  108:  		SetConst  *Var2  00560506
  118:  		ExecWait  DoBurnHit
  124:  		SetConst  *Var0  00000001
  134:  		SetConst  *Var1  00560506
  144:  		ExecWait  DoDeath
  150:  		Return
  158:  	Case  ==  .Event:SpinSmashHit % B
  164:  		SetConst  *Var0  00000001
  174:  		SetConst  *Var1  00560504
  184:  		ExecWait  DoSpinSmashHit
  190:  	Case  ==  .Event:SpinSmashDeath % 21
  19C:  		SetConst  *Var0  00000001
  1AC:  		SetConst  *Var1  00560504
  1BC:  		ExecWait  DoSpinSmashHit
  1C8:  		SetConst  *Var0  00000001
  1D8:  		SetConst  *Var1  00560504
  1E8:  		ExecWait  DoDeath
  1F4:  		Return
  1FC:  	CaseOR  ==  00000017 % 17
  208:  	CaseOR  ==  .Event:Immune % 19
  214:  	CaseOR  ==  .Event:AirLiftFailed % 1F
  220:  		SetConst  *Var0  00000001
  230:  		SetConst  *Var1  00560501
  240:  		ExecWait  DoImmune
  24C:  	EndCaseGroup
  254:  	Case  ==  .Event:Death % 20
  260:  		SetConst  *Var0  00000001
  270:  		SetConst  *Var1  00560504
  280:  		ExecWait  DoNormalHit
  28C:  		Wait  10`
  298:  		SetConst  *Var0  00000001
  2A8:  		SetConst  *Var1  00560504
  2B8:  		ExecWait  DoDeath
  2C4:  		Return
  2CC:  	Case  ==  .Event:RecoverStatus % 31
  2D8:  		SetConst  *Var0  00000001
  2E8:  		SetConst  *Var1  00560501
  2F8:  		ExecWait  DoRecover
  304:  	Case  ==  .Event:ScareAway % 39
  310:  		Call  SetAnimation  ( .Actor:Self 00000001 00560504 )
  328:  		Call  SetActorJumpGravity   ( .Actor:Self *Fixed[1.5] )
  33C:  		Call  GetActorPos   ( .Actor:Self *Var0 *Var1 *Var2 )
  358:  		Call  SetGoalPos    ( .Actor:Self *Var0 *Var1 *Var2 )
  374:  		Call  JumpToGoal    ( .Actor:Self  15` .False .True .False )
  394:  		Wait  15`
  3A0:  		Call  SetAnimation  ( .Actor:Self 00000001 00560502 )
  3B8:  		ExecWait  $Script_GRYMagikoopa_RunAway
  3C4:  		Return
  3CC:  	Case  ==  .Event:BeginAirLift % 3A
  3D8:  		SetConst  *Var0  00000001
  3E8:  		SetConst  *Var1  00560502
  3F8:  		ExecWait  DoAirLift
  404:  	Case  ==  .Event:BlowAway % 16
  410:  		Call  GetStatusFlags    ( .Actor:Self *Var0 )
  424:  		If  *Var0  !&  ~Flags:StatusFlags:Sleep|Frozen|Fear|Paralyze|Dizzy|Stone|Stop % 35D000
  434:  			If  *Var0  &  ~Flags:StatusFlags:Shrink % 80000
  444:  				Call  SetPartDispOffset ( .Actor:Self 00000001 00000000 00000002 00000000 )
  464:  			Else
  46C:  				Call  SetPartDispOffset ( .Actor:Self 00000001 FFFFFFFC 00000005 00000000 )
  48C:  			EndIf
  494:  		EndIf
  49C:  		SetConst  *Var0  00000001
  4AC:  		SetConst  *Var1  00560504
  4BC:  		ExecWait  DoBlowAway
  4C8:  		Return
  4D0:  	Default
  4D8:  EndSwitch
  4E0:  Call  EnableIdleScript  ( .Actor:Self 00000001 )
  4F4:  Call  UseIdleAnimation  ( .Actor:Self .True )
  508:  Return
  510:  End
}

% Origin: HINT
#new:Script $Script_8021F94C
{
    0:  Call  GetBattleFlags    ( *Var0 )
   10:  If  *Var0  !&  00080000
   20:  	If  *Var0  &  00000240
   30:  		Call  SetActorVar   ( .Actor:Self 00000000 00000001 )
   48:  	EndIf
   50:  Else
   58:  	Call  $Function_80218968    ( *Var0 )
   68:  	Switch  *Var0
   74:  		CaseOR  ==  00000083
   80:  		CaseOR  ==  00000084
   8C:  		CaseOR  ==  00000085
   98:  		CaseOR  ==  00000088
   A4:  			Call  GetBattleFlags    ( *Var0 )
   B4:  			If  *Var0  &  00000240
   C4:  				Call  SetActorVar   ( .Actor:Self 00000000 00000001 )
   DC:  			EndIf
   E4:  		EndCaseGroup
   EC:  	EndSwitch
   F4:  EndIf
   FC:  Return
  104:  End
}

% Origin: HINT
#new:Script $Script_8021FA58
{
    0:  Call  GetActorVar   ( .Actor:Self 00000000 *Var0 )
   18:  If  *Var0  ==  00000001
   28:  	Call  SetAnimation  ( .Actor:Self 00000001 00560504 )
   40:  	Goto  0
   4C:  EndIf
   54:  Call  GetLastElement    ( *Var0 )
   64:  If  *Var0  &  00000400
   74:  	Call  SetAnimation  ( .Actor:Self 00000001 00560504 )
   8C:  	Goto  0
   98:  EndIf
   A0:  Return
   A8:  Label  0
   B4:  Call  8027D32C  ( FFFFFF81 )
   C4:  Call  GetStatusFlags    ( .Actor:Self *Var0 )
   D8:  If  *Var0  &  ~Flags:StatusFlags:Shrink % 80000
   E8:  	Call  SetPartScale  ( .Actor:Self 00000003 *Fixed[0.4] *Fixed[0.4] *Fixed[0.4] )
  108:  EndIf
  110:  Call  SetPartFlagBits   ( .Actor:Self 00000001 00800000 .True )
  12C:  Call  SetPartFlagBits   ( .Actor:Self 00000001 00020001 .False )
  148:  Call  SetPartFlagBits   ( .Actor:Self 00000002 00020001 .True )
  164:  Call  SetPartFlagBits   ( .Actor:Self 00000002 00800000 .False )
  180:  Call  SetPartFlagBits   ( .Actor:Self 00000003 00100000 .True )
  19C:  Call  SetPartFlagBits   ( .Actor:Self 00000003 00000001 .False )
  1B8:  Call  GetActorPos       ( .Actor:Self *Var0 *Var1 *Var2 )
  1D4:  Sub   *Var2  00000001
  1E4:  Call  SetPartPos        ( .Actor:Self 00000003 *Var0 *Var1 *Var2 )
  204:  Call  PlaySoundAtActor  ( .Actor:Self 00000301 )
  218:  Call  GetActorPos       ( .Actor:Self *Var0 *Var1 *Var2 )
  234:  Set   *Var1  00000000
  244:  Call  SetActorJumpGravity   ( .Actor:Self *Fixed[0.8] )
  258:  Call  SetGoalPos        ( .Actor:Self *Var0 *Var1 *Var2 )
  274:  Call  JumpToGoal        ( .Actor:Self  15` .False .True .False )
  294:  Call  $Function_80218A60    ( 00000096 0000000A )
  2A8:  Thread
  2B0:  	Call  ShakeCam  ( .Cam:Battle 00000000  5` *Fixed[0.7] )
  2CC:  EndThread
  2D4:  Call  GetLastEvent  ( .Actor:Self *Var3 )
  2E8:  If  *Var3  ==  0000000F % F
  2F8:  	Call  SetAnimation  ( .Actor:Self 00000001 00560504 )
  310:  	Call  GetActorPos   ( .Actor:Self *Var3 *Var4 *Var5 )
  32C:  	Add   *Var4  0000000A
  33C:  	Add   *Var5  00000005
  34C:  	Call  PlayEffect    ( ~FX:SmokeBurst:Black *Var3 *Var4 *Var5 *Fixed[1.0] 0000000A 00000000 00000000 00000000 00000000 00000000 00000000 00000000 )
  390:  EndIf
  398:  Call  SetGoalPos    ( .Actor:Self *Var0 *Var1 *Var2 )
  3B4:  Call  JumpToGoal    ( .Actor:Self  10` .False .True .False )
  3D4:  Call  SetGoalPos    ( .Actor:Self *Var0 *Var1 *Var2 )
  3F0:  Call  JumpToGoal    ( .Actor:Self  5` .False .True .False )
  410:  Loop  00000014
  41C:  	Call  SetPartFlagBits   ( .Actor:Self 00000003 00000001 .True )
  438:  	Wait  1`
  444:  	Call  SetPartFlagBits   ( .Actor:Self 00000003 00000001 .False )
  460:  	Wait  1`
  46C:  EndLoop
  474:  Call  SetPartFlagBits   ( .Actor:Self 00000003 00000001 .True )
  490:  Call  SetAnimation      ( .Actor:Self 00000001 00560501 )
  4A8:  Call  SetActorFlagBits  ( .Actor:Self 00000200 .False )
  4C0:  Call  BindHandleEvent   ( .Actor:Self $Script_HandleEvent_8021F434 )
  4D4:  Call  SetActorType      ( .Actor:Self 00000057 )
  4E8:  Call  SetStatusTable    ( .Actor:Self $StatusTable_8021F148 )
  4FC:  Call  $Function_80218994    ( FFFFFFF6 00000014 0000000A 00000020 )
  518:  Call  SetActorFlagBits  ( .Actor:Self 00001000 .True )
  530:  Call  ResetAllActorSounds   ( .Actor:Self )
  540:  Call  GetIndexFromPos   ( .Actor:Self *Var0 )
  554:  Mod   *Var0  00000004
  564:  Call  SetGoalToIndex    ( .Actor:Self *Var0 )
  578:  Call  SetActorSpeed     ( .Actor:Self *Fixed[4.0] )
  58C:  Call  RunToGoal ( .Actor:Self  0` .False )
  5A4:  Call  GetGoalPos        ( .Actor:Self *Var0 *Var1 *Var2 )
  5C0:  Call  ForceHomePos      ( .Actor:Self *Var0 *Var1 *Var2 )
  5DC:  Call  HPBarToHome       ( .Actor:Self )
  5EC:  Return
  5F4:  End
}

% Origin: HINT
#new:Script $Script_HandleEvent_80220054
{
    0:  Call  UseIdleAnimation  ( .Actor:Self .False )
   14:  Call  EnableIdleScript  ( .Actor:Self 00000000 )
   28:  Call  GetLastEvent      ( .Actor:Self *Var0 )
   3C:  Switch  *Var0
   48:  	Case  ==  .Event:HitCombo % 9
   54:  		ExecWait  $Script_8021F94C
   60:  		SetConst  *Var0  00000002
   70:  		SetConst  *Var1  00570504
   80:  		ExecWait  DoNormalHit
   8C:  	CaseOR  ==  .Event:Hit % A
   98:  	CaseOR  ==  .Event:FallTrigger % C
   A4:  		ExecWait  $Script_8021F94C
   B0:  		SetConst  *Var0  00000002
   C0:  		SetConst  *Var1  00570504
   D0:  		ExecWait  DoNormalHit
   DC:  		ExecWait  $Script_8021FA58
   E8:  	EndCaseGroup
   F0:  	CaseOR  ==  .Event:BurnHit % E
   FC:  	CaseOR  ==  0000000F % F
  108:  		ExecWait  $Script_8021F94C
  114:  		SetConst  *Var0  00000002
  124:  		SetConst  *Var1  00570505
  134:  		SetConst  *Var2  00570506
  144:  		ExecWait  DoBurnHit
  150:  		ExecWait  $Script_8021FA58
  15C:  	EndCaseGroup
  164:  	Case  ==  .Event:BurnDeath % 24
  170:  		SetConst  *Var0  00000002
  180:  		SetConst  *Var1  00570505
  190:  		SetConst  *Var2  00570506
  1A0:  		ExecWait  DoBurnHit
  1AC:  		SetConst  *Var0  00000002
  1BC:  		SetConst  *Var1  00570506
  1CC:  		ExecWait  DoDeath
  1D8:  		Return
  1E0:  	Case  ==  .Event:SpinSmashHit % B
  1EC:  		SetConst  *Var0  00000002
  1FC:  		SetConst  *Var1  00570504
  20C:  		ExecWait  DoSpinSmashHit
  218:  	Case  ==  .Event:SpinSmashDeath % 21
  224:  		SetConst  *Var0  00000002
  234:  		SetConst  *Var1  00570504
  244:  		ExecWait  DoSpinSmashHit
  250:  		SetConst  *Var0  00000002
  260:  		SetConst  *Var1  00570504
  270:  		ExecWait  DoDeath
  27C:  		Return
  284:  	CaseOR  ==  00000017 % 17
  290:  	CaseOR  ==  .Event:Immune % 19
  29C:  	CaseOR  ==  .Event:AirLiftFailed % 1F
  2A8:  		SetConst  *Var0  00000002
  2B8:  		SetConst  *Var1  00570501
  2C8:  		ExecWait  DoImmune
  2D4:  	EndCaseGroup
  2DC:  	Case  ==  .Event:Death % 20
  2E8:  		SetConst  *Var0  00000002
  2F8:  		SetConst  *Var1  00570504
  308:  		ExecWait  DoNormalHit
  314:  		Wait  10`
  320:  		SetConst  *Var0  00000002
  330:  		SetConst  *Var1  00570504
  340:  		ExecWait  DoDeath
  34C:  		Return
  354:  	Case  ==  .Event:BeginFirstStrike % 38
  360:  		Call  SetActorPos       ( .Actor:Self  20`  0`  0` )
  37C:  		Call  HPBarToCurrent    ( .Actor:Self )
  38C:  	Case  ==  .Event:EndFirstStrike % 35
  398:  		Call  SetAnimation  ( .Actor:Self 00000002 00570501 )
  3B0:  		Call  SetGoalToHome ( .Actor:Self )
  3C0:  		Call  SetActorSpeed ( .Actor:Self *Fixed[4.0] )
  3D4:  		Call  FlyToGoal     ( .Actor:Self  0`  1` .Easing:Linear )
  3F0:  		Call  SetAnimation  ( .Actor:Self 00000002 00570501 )
  408:  		Call  HPBarToHome   ( .Actor:Self )
  418:  	Case  ==  .Event:RecoverStatus % 31
  424:  		SetConst  *Var0  00000002
  434:  		SetConst  *Var1  00570501
  444:  		ExecWait  DoRecover
  450:  	Case  ==  .Event:ScareAway % 39
  45C:  		Call  SetAnimation  ( .Actor:Self 00000002 00570504 )
  474:  		Call  SetActorJumpGravity   ( .Actor:Self *Fixed[1.5] )
  488:  		Call  GetActorPos   ( .Actor:Self *Var0 *Var1 *Var2 )
  4A4:  		Call  SetGoalPos    ( .Actor:Self *Var0 *Var1 *Var2 )
  4C0:  		Call  JumpToGoal    ( .Actor:Self  15` .False .True .False )
  4E0:  		Wait  15`
  4EC:  		Call  SetAnimation  ( .Actor:Self 00000002 00570502 )
  504:  		ExecWait  $Script_GRYMagikoopa_RunAway
  510:  		Return
  518:  	Case  ==  .Event:BeginAirLift % 3A
  524:  		SetConst  *Var0  00000002
  534:  		SetConst  *Var1  00570502
  544:  		ExecWait  DoAirLift
  550:  	Case  ==  .Event:BlowAway % 16
  55C:  		Call  GetStatusFlags    ( .Actor:Self *Var0 )
  570:  		If  *Var0  !&  ~Flags:StatusFlags:Sleep|Frozen|Fear|Paralyze|Dizzy|Stone|Stop % 35D000
  580:  			If  *Var0  &  ~Flags:StatusFlags:Shrink % 80000
  590:  				Call  SetPartDispOffset ( .Actor:Self 00000002 FFFFFFFD 00000000 00000000 )
  5B0:  			Else
  5B8:  				Call  SetPartDispOffset ( .Actor:Self 00000002 FFFFFFF1 00000000 00000000 )
  5D8:  			EndIf
  5E0:  		EndIf
  5E8:  		SetConst  *Var0  00000002
  5F8:  		SetConst  *Var1  00570504
  608:  		ExecWait  DoBlowAway
  614:  		Return
  61C:  	Default
  624:  EndSwitch
  62C:  Call  EnableIdleScript  ( .Actor:Self 00000001 )
  640:  Call  UseIdleAnimation  ( .Actor:Self .True )
  654:  Return
  65C:  End
}

% Origin: HINT
#new:Script $Script_GRYMagikoopa_ShapeSpell
{
    0:  Call  UseIdleAnimation  ( .Actor:Self .False )
   14:  Call  EnableIdleScript  ( .Actor:Self 00000000 )
   28:  Call  SetTargetActor    ( .Actor:Self .Actor:Player )
   3C:  Call  GetBattlePhase    ( *Var0 )
   4C:  If  *Var0  ==  00000001
   5C:  	Call  UseBattleCamPreset    ( 00000002 )
   6C:  	Call  MoveBattleCamOver     (  1` )
   7C:  Else
   84:  	Call  UseBattleCamPreset    ( 00000002 )
   94:  	Call  MoveBattleCamOver     (  10` )
   A4:  EndIf
   AC:  Call  PlaySoundAtActor  ( .Actor:Self .Sound:SpellCast1 )
   C0:  Call  GetActorPos       ( .Actor:Self *Var0 *Var1 *Var2 )
   DC:  Call  GetStatusFlags    ( .Actor:Self *VarA )
   F0:  If  *VarA  &  ~Flags:StatusFlags:Shrink % 80000
  100:  	Sub   *Var0  0000000C
  110:  	Add   *Var1  0000000E
  120:  Else
  128:  	Sub   *Var0  0000001E
  138:  	Add   *Var1  00000024
  148:  EndIf
  150:  Call  PlayEffect        ( ~FX:GatherMagic:Pink *Var0 *Var1 *Var2 *Fixed[0.5] 0000001E 00000000 00000000 00000000 00000000 00000000 00000000 00000000 )
  194:  Call  SetAnimation      ( .Actor:Self 00000002 00570502 )
  1AC:  Wait  30`
  1B8:  Call  EnemyTestTarget   ( .Actor:Self *Var0 ~Flags:DamageType:0 00000000 00000001 00000010 )
  1DC:  Switch  *Var0
  1E8:  	CaseOR  ==  .HitResult:Miss % 6
  1F4:  	CaseOR  ==  .HitResult:Lucky % 5
  200:  		Set   *VarA  *Var0
  210:  		Call  PlaySoundAtActor  ( .Actor:Self .Sound:SpellCast2 )
  224:  		Call  SetAnimation      ( .Actor:Self 00000002 00570503 )
  23C:  		Wait  5`
  248:  		Call  GetActorPos       ( .Actor:Self *Var0 *Var1 *Var2 )
  264:  		Call  GetStatusFlags    ( .Actor:Self *Var9 )
  278:  		If  *Var9  &  ~Flags:StatusFlags:Shrink % 80000
  288:  			Sub   *Var0  00000008
  298:  			Add   *Var1  00000008
  2A8:  		Else
  2B0:  			Sub   *Var0  00000014
  2C0:  			Add   *Var1  00000014
  2D0:  		EndIf
  2D8:  		Call  SetGoalToTarget       ( .Actor:Self )
  2E8:  		Call  GetGoalPos    ( .Actor:Self *Var3 *Var4 *Var5 )
  304:  		Sub   *Var3  00000032
  314:  		Set   *Var4  00000000
  324:  		Call  $Function_80218810    ( *Var0 *Var1 *Var5 *Var3 *Var4 *Var5 00000019 )
  34C:  		Wait  50`
  358:  		If  *VarA  ==  .HitResult:Lucky % 5
  368:  			Call  EnemyTestTarget   ( .Actor:Self *Var0 ~Flags:DamageType:TriggerLucky 00000000 00000000 00000000 )
  38C:  		EndIf
  394:  		Wait  14`
  3A0:  		Call  YieldTurn ( )
  3AC:  		Call  AddActorDecoration    ( .Actor:Self 00000002 00000000 .Decoration:Sweat )
  3C8:  		Wait  30`
  3D4:  		Call  RemoveActorDecoration ( .Actor:Self 00000002 00000000 )
  3EC:  		Call  EnableIdleScript      ( .Actor:Self 00000001 )
  400:  		Call  UseIdleAnimation      ( .Actor:Self .True )
  414:  		Return
  41C:  	EndCaseGroup
  424:  EndSwitch
  42C:  Call  PlaySoundAtActor  ( .Actor:Self .Sound:SpellCast2 )
  440:  Call  SetAnimation      ( .Actor:Self 00000002 00570503 )
  458:  Wait  5`
  464:  Call  GetActorPos       ( .Actor:Self *Var0 *Var1 *Var2 )
  480:  Call  GetStatusFlags    ( .Actor:Self *VarA )
  494:  If  *VarA  &  ~Flags:StatusFlags:Shrink % 80000
  4A4:  	Sub   *Var0  00000008
  4B4:  	Add   *Var1  00000008
  4C4:  Else
  4CC:  	Sub   *Var0  00000014
  4DC:  	Add   *Var1  00000014
  4EC:  EndIf
  4F4:  Call  SetGoalToTarget   ( .Actor:Self )
  504:  Call  GetGoalPos        ( .Actor:Self *Var3 *Var4 *Var5 )
  520:  Sub   *Var3  0000000A
  530:  Call  $Function_80218810    ( *Var0 *Var1 *Var5 *Var3 *Var4 *Var5 00000014 )
  558:  Wait  18`
  564:  Wait  2`
  570:  Call  EnemyDamageTarget ( .Actor:Self *Var0 ~Flags:DamageType:NoContact|Magic 00000000 00000000 00000003 00000020 )
  598:  Switch  *Var0
  5A4:  	CaseOR  ==  .HitResult:Hit % 0
  5B0:  	CaseOR  ==  .HitResult:QuakeImmune % 2
  5BC:  		Wait  19`
  5C8:  		Call  YieldTurn ( )
  5D4:  	EndCaseGroup
  5DC:  EndSwitch
  5E4:  Call  EnableIdleScript  ( .Actor:Self 00000001 )
  5F8:  Call  UseIdleAnimation  ( .Actor:Self .True )
  60C:  Return
  614:  End
}

% Origin: HINT
#new:Script $Script_GRYMagikoopa_WandStrike
{
    0:  Call  UseIdleAnimation  ( .Actor:Self .False )
   14:  Call  EnableIdleScript  ( .Actor:Self 00000000 )
   28:  Call  SetTargetActor    ( .Actor:Self .Actor:Player )
   3C:  Call  UseBattleCamPreset    ( 0000003F )
   4C:  Call  BattleCamTargetActor  ( .Actor:Self )
   5C:  Call  8024ECF8  ( FFFFFFFF 00000001 00000000 )
   74:  Call  PlaySoundAtActor  ( .Actor:Self 000002DB )
   88:  Thread
   90:  	Call  SetAnimation  ( .Actor:Self 00000001 00560502 )
   A8:  	Set   *Var0  000000C8
   B8:  	Loop  00000014
   C4:  		Sub   *Var0  0000000A
   D4:  		Call  SetPartAlpha  ( .Actor:Self 00000001 *Var0 )
   EC:  		Wait  1`
   F8:  	EndLoop
  100:  EndThread
  108:  Wait  10`
  114:  Call  SetGoalToTarget   ( .Actor:Self )
  124:  Call  GetGoalPos        ( .Actor:Self *Var0 *Var1 *Var2 )
  140:  Call  GetStatusFlags    ( .Actor:Self *VarA )
  154:  If  *VarA  &  ~Flags:StatusFlags:Shrink % 80000
  164:  	Add   *Var0  00000005
  174:  Else
  17C:  	Add   *Var0  00000019
  18C:  EndIf
  194:  Set   *Var1  00000000
  1A4:  Call  SetGoalPos    ( .Actor:Self *Var0 *Var1 *Var2 )
  1C0:  Call  FlyToGoal     ( .Actor:Self  30`  0` .Easing:CosInOut )
  1DC:  Set   *Var0  00000037
  1EC:  Loop  00000014
  1F8:  	Add   *Var0  0000000A
  208:  	Call  SetPartAlpha  ( .Actor:Self 00000001 *Var0 )
  220:  	Wait  1`
  22C:  EndLoop
  234:  Call  SetPartAlpha      ( .Actor:Self 00000001 000000FF )
  24C:  Call  SetAnimation      ( .Actor:Self 00000001 00560503 )
  264:  Wait  11`
  270:  Call  PlaySoundAtActor  ( .Actor:Self 000002DC )
  284:  Call  EnemyTestTarget   ( .Actor:Self *Var0 ~Flags:DamageType:0 00000000 00000001 00000010 )
  2A8:  Switch  *Var0
  2B4:  	CaseOR  ==  .HitResult:Miss % 6
  2C0:  	CaseOR  ==  .HitResult:Lucky % 5
  2CC:  		Set   *VarA  *Var0
  2DC:  		Call  UseBattleCamPreset    ( 00000002 )
  2EC:  		If  *VarA  ==  .HitResult:Lucky % 5
  2FC:  			Call  EnemyTestTarget   ( .Actor:Self *Var0 ~Flags:DamageType:TriggerLucky 00000000 00000000 00000000 )
  320:  		EndIf
  328:  		Wait  15`
  334:  		Set   *Var0  000000C8
  344:  		Loop  00000014
  350:  			Sub   *Var0  0000000A
  360:  			Call  SetPartAlpha  ( .Actor:Self 00000001 *Var0 )
  378:  			Wait  1`
  384:  		EndLoop
  38C:  		Call  YieldTurn ( )
  398:  		Call  SetGoalToHome ( .Actor:Self )
  3A8:  		Call  SetAnimation  ( .Actor:Self 00000001 00560501 )
  3C0:  		Call  FlyToGoal     ( .Actor:Self  30`  0` .Easing:CosInOut )
  3DC:  		Set   *Var0  00000037
  3EC:  		Loop  00000014
  3F8:  			Add   *Var0  0000000A
  408:  			Call  SetPartAlpha  ( .Actor:Self 00000001 *Var0 )
  420:  			Wait  1`
  42C:  		EndLoop
  434:  		Call  SetPartAlpha      ( .Actor:Self 00000001 000000FF )
  44C:  		Call  EnableIdleScript  ( .Actor:Self 00000001 )
  460:  		Call  UseIdleAnimation  ( .Actor:Self .True )
  474:  		Return
  47C:  	EndCaseGroup
  484:  EndSwitch
  48C:  Call  SetGoalToTarget   ( .Actor:Self )
  49C:  Wait  2`
  4A8:  Call  EnemyDamageTarget ( .Actor:Self *Var0 ~Flags:DamageType:NoContact 00000000 00000000 00000003 00000020 )
  4D0:  Switch  *Var0
  4DC:  	CaseOR  ==  .HitResult:Hit % 0
  4E8:  	CaseOR  ==  .HitResult:QuakeImmune % 2
  4F4:  		Call  UseBattleCamPreset    ( 00000002 )
  504:  		Wait  10`
  510:  		Set   *Var0  000000C8
  520:  		Loop  00000014
  52C:  			Sub   *Var0  0000000A
  53C:  			Call  SetPartAlpha  ( .Actor:Self 00000001 *Var0 )
  554:  			Wait  1`
  560:  		EndLoop
  568:  		Call  YieldTurn ( )
  574:  		Call  SetGoalToHome ( .Actor:Self )
  584:  		Call  SetAnimation  ( .Actor:Self 00000001 00560501 )
  59C:  		Call  FlyToGoal     ( .Actor:Self  20`  0` .Easing:CosInOut )
  5B8:  		Set   *Var0  00000037
  5C8:  		Loop  00000014
  5D4:  			Add   *Var0  0000000A
  5E4:  			Call  SetPartAlpha  ( .Actor:Self 00000001 *Var0 )
  5FC:  			Wait  1`
  608:  		EndLoop
  610:  		Call  SetPartAlpha  ( .Actor:Self 00000001 000000FF )
  628:  	EndCaseGroup
  630:  EndSwitch
  638:  Call  EnableIdleScript  ( .Actor:Self 00000001 )
  64C:  Call  UseIdleAnimation  ( .Actor:Self .True )
  660:  Return
  668:  End
}

% Origin: HINT
#new:Script $Script_GRYMagikoopa_RunAway
{
    0:  Call  UseIdleAnimation  ( .Actor:Self .False )
   14:  Call  EnableIdleScript  ( .Actor:Self 00000000 )
   28:  Call  8027D32C  ( FFFFFF81 )
   38:  Call  GetLastEvent      ( .Actor:Self *Var0 )
   4C:  If  *Var0  !=  .Event:ScareAway % 39
   5C:  	Call  UseBattleCamPreset    ( 0000000E )
   6C:  	Call  BattleCamTargetActor  ( .Actor:Self )
   7C:  	Call  MoveBattleCamOver     (  15` )
   8C:  	Wait  15`
   98:  	Call  UseBattleCamPreset    ( 00000001 )
   A8:  EndIf
   B0:  Call  SetActorSpeed ( .Actor:Self *Fixed[1.0] )
   C4:  Call  GetActorPos   ( .Actor:Self *Var0 *Var1 *Var2 )
   E0:  Add   *Var0  00000014
   F0:  Call  SetGoalPos    ( .Actor:Self *Var0 *Var1 *Var2 )
  10C:  Call  RunToGoal     ( .Actor:Self  0` .False )
  124:  Wait  10`
  130:  Call  SetActorYaw   ( .Actor:Self  180` )
  144:  Call  EnableActorBlur       ( .Actor:Self 00000001 )
  158:  Call  SetActorSpeed ( .Actor:Self *Fixed[10.0] )
  16C:  Call  GetActorPos   ( .Actor:Self *Var0 *Var1 *Var2 )
  188:  Add   *Var0  000000C8
  198:  Call  SetGoalPos    ( .Actor:Self *Var0 *Var1 *Var2 )
  1B4:  Call  RunToGoal     ( .Actor:Self  0` .False )
  1CC:  Call  YieldTurn ( )
  1D8:  Call  UseBattleCamPreset    ( 00000002 )
  1E8:  ExecWait  ForceNextTarget
  1F4:  Call  8027D32C      ( FFFFFF81 )
  204:  Call  RemoveActor   ( .Actor:Self )
  214:  Return
  21C:  End
}

#new:Script $Script_Init_80221568
{
    0:  Call  BindIdle      ( .Actor:Self $Script_Idle_8021F424 )
   14:  Call  BindTakeTurn  ( .Actor:Self $Script_TakeTurn_802216B0 )
   28:  Call  BindHandleEvent   ( .Actor:Self $Script_HandleEvent_8021F434 )
   3C:  Call  GetBattleVar  ( 00000002 *Var0 )
   50:  If  *Var0  ==  00000000
   60:  	Call  SetBattleVar  ( 00000002 FFFFFFFF )
   74:  EndIf
   7C:  Call  SetActorVar   ( .Actor:Self 00000000 00000000 )
   94:  Return
   9C:  End
}

% Origin: HINT
#new:Script $Script_Init_8022160C
{
    0:  Call  BindIdle      ( .Actor:Self $Script_Idle_8021F424 )
   14:  Call  BindTakeTurn  ( .Actor:Self $Script_TakeTurn_802216B0 )
   28:  Call  BindHandleEvent   ( .Actor:Self $Script_HandleEvent_80220054 )
   3C:  Call  GetBattleVar  ( 00000002 *Var0 )
   50:  If  *Var0  ==  00000000
   60:  	Call  SetBattleVar  ( 00000002 FFFFFFFF )
   74:  EndIf
   7C:  Call  SetActorVar   ( .Actor:Self 00000000 00000000 )
   94:  Return
   9C:  End
}

% Origin: HINT
#new:Script $Script_TakeTurn_802216B0
{
    0:  Set   *Flag[00]  .False
   10:  Label  A
   1C:  Call  EnemyCreateTargetList ( 00008002 )
   2C:  Call  InitTargetIterator ( )
   38:  Label  0
   44:  Call  GetOwnerTarget    ( *Var0 *Var1 )
   58:  Call  GetIndexFromHome  ( *Var0 *Var1 )
   6C:  Call  GetBattleVar      ( 00000002 *Var2 )
   80:  If  *Var1  >  *Var2
   90:  	Call  $Function_80218AB8    ( *Var0 *Var3 )
   A4:  	If  *Var3  ==  00000000
   B4:  		Call  GetStatusFlags    ( *Var0 *Var4 )
   C8:  		If  *Var4  !&  ~Flags:StatusFlags:Static|Transparent % 4002000
   D8:  			Set   *Var8  *Var0
   E8:  			Call  SetBattleVar  ( 00000002 *Var1 )
   FC:  			Goto  64
  108:  		EndIf
  110:  	EndIf
  118:  EndIf
  120:  Call  ChooseNextTarget  ( .Iter:Next *Var0 )
  134:  If  *Var0  !=  FFFFFFFF
  144:  	Goto  0
  150:  EndIf
  158:  If  *Flag[00]  ==  .False
  168:  	Set   *Flag[00]  .True
  178:  	Call  SetBattleVar  ( 00000002 FFFFFFFF )
  18C:  	Goto  A
  198:  EndIf
  1A0:  Call  CountPlayerTargets    ( .Actor:Self 00008002 *Var0 )
  1B8:  If  *Var0  ==  00000001
  1C8:  	ExecWait  $Script_GRYMagikoopa_RunAway
  1D4:  	Return
  1DC:  EndIf
  1E4:  Call  GetActorFlags ( .Actor:Self *Var0 )
  1F8:  If  *Var0  &  00000200
  208:  	ExecWait  $Script_GRYMagikoopa_ShapeSpell
  214:  Else
  21C:  	ExecWait  $Script_GRYMagikoopa_WandStrike
  228:  EndIf
  230:  Return
  238:  Label  64
  244:  Call  UseIdleAnimation  ( .Actor:Self .False )
  258:  Call  EnableIdleScript  ( .Actor:Self 00000000 )
  26C:  Call  SetTargetActor    ( .Actor:Self .Actor:Player )
  280:  Call  UseBattleCamPreset    ( 0000000E )
  290:  Call  BattleCamTargetActor  ( .Actor:Self )
  2A0:  Call  MoveBattleCamOver (  15` )
  2B0:  Wait  15`
  2BC:  Call  GetActorFlags     ( .Actor:Self *Var0 )
  2D0:  If  *Var0  !&  00000200
  2E0:  	Call  SetAnimation  ( .Actor:Self 00000001 00560502 )
  2F8:  Else
  300:  	Call  SetAnimation  ( .Actor:Self 00000002 00570502 )
  318:  EndIf
  320:  Wait  5`
  32C:  Call  PlaySoundAtActor  ( .Actor:Self .Sound:SpellCast1 )
  340:  Call  GetActorFlags     ( .Actor:Self *Var0 )
  354:  If  *Var0  !&  00000200
  364:  	Call  GetActorPos       ( .Actor:Self *Var0 *Var1 *Var2 )
  380:  	Call  GetStatusFlags    ( .Actor:Self *VarA )
  394:  	If  *VarA  &  ~Flags:StatusFlags:Shrink % 80000
  3A4:  		Sub   *Var0  00000006
  3B4:  		Add   *Var1  0000000C
  3C4:  		Sub   *Var2  00000002
  3D4:  		Call  PlayEffect    ( ~FX:RadialFlowOut:WhiteWaves *Var0 *Var1 *Var2 *Fixed[0.12] 0000001E 00000000 00000000 00000000 00000000 00000000 00000000 00000000 )
  418:  	Else
  420:  		Sub   *Var0  00000010
  430:  		Add   *Var1  0000001F
  440:  		Sub   *Var2  00000002
  450:  		Call  PlayEffect    ( ~FX:RadialFlowOut:WhiteWaves *Var0 *Var1 *Var2 *Fixed[0.3] 0000001E 00000000 00000000 00000000 00000000 00000000 00000000 00000000 )
  494:  	EndIf
  49C:  Else
  4A4:  	Call  GetActorPos       ( .Actor:Self *Var0 *Var1 *Var2 )
  4C0:  	Call  GetStatusFlags    ( .Actor:Self *VarA )
  4D4:  	If  *VarA  &  ~Flags:StatusFlags:Shrink % 80000
  4E4:  		Sub   *Var0  0000000C
  4F4:  		Add   *Var1  0000000E
  504:  		Sub   *Var2  00000002
  514:  		Call  PlayEffect    ( ~FX:RadialFlowOut:WhiteWaves *Var0 *Var1 *Var2 *Fixed[0.12] 0000001E 00000000 00000000 00000000 00000000 00000000 00000000 00000000 )
  558:  	Else
  560:  		Sub   *Var0  0000001E
  570:  		Add   *Var1  00000024
  580:  		Sub   *Var2  00000002
  590:  		Call  PlayEffect    ( ~FX:RadialFlowOut:WhiteWaves *Var0 *Var1 *Var2 *Fixed[0.3] 0000001E 00000000 00000000 00000000 00000000 00000000 00000000 00000000 )
  5D4:  	EndIf
  5DC:  EndIf
  5E4:  Wait  30`
  5F0:  Call  GetActorFlags ( .Actor:Self *Var0 )
  604:  If  *Var0  !&  00000200
  614:  	Call  SetAnimation  ( .Actor:Self 00000001 00560501 )
  62C:  Else
  634:  	Call  SetAnimation  ( .Actor:Self 00000002 00570501 )
  64C:  EndIf
  654:  Wait  5`
  660:  Thread
  668:  	Wait  10`
  674:  	Call  PlaySoundAtActor  ( *Var8 000002DB )
  688:  EndThread
  690:  Thread
  698:  	Call  8026BF48      ( 00000001 )
  6A8:  	Call  VanishActor   ( *Var8 00000002 )
  6BC:  	Call  8026BF48      ( 00000000 )
  6CC:  EndThread
  6D4:  Call  WaitForBuffDone ( )
  6E0:  Call  UseBattleCamPreset    ( 00000002 )
  6F0:  Wait  10`
  6FC:  Call  YieldTurn ( )
  708:  Call  EnableIdleScript      ( .Actor:Self 00000001 )
  71C:  Call  UseIdleAnimation      ( .Actor:Self .True )
  730:  Return
  738:  End
}

% Origin: HEURISTIC
#new:Unknown $???_80221DF0
{
	00000000 00000000 00000000 00000000
}

#new:Script $Script_80221E00
{
    0:  Call  $Function_80218D78 ( )
    C:  Loop
   18:  	Wait  1`
   24:  EndLoop
   2C:  Return
   34:  End
}

#new:Script $Script_80221E3C
{
    0:  Set   *VarA  *Var0
   10:  Label  0
   1C:  Call  RandInt   ( 0000001E *Var0 )
   30:  Add   *Var0  0000001E
   40:  Wait  *Var0
   4C:  Set   *Var1  00000000
   5C:  Loop  0000000A
   68:  	Add   *Var1  00000024
   78:  	Call  RotateModel   ( *VarA *Var1 00000000 00000001 00000000 )
   98:  	Wait  1`
   A4:  EndLoop
   AC:  Goto  0
   B8:  Return
   C0:  End
}

#new:Script $Script_80221F04
{
    0:  Set   *VarA  *Var0
   10:  Set   *VarB  *Var1
   20:  Exec  $Script_80221E3C
   2C:  Set   *Var7  00000000
   3C:  Label  0
   48:  Add   *Var7  00000004
   58:  If  *Var7  >  00000E0F
   68:  	Sub   *Var7  00000E10
   78:  EndIf
   80:  Call  $Function_80218D9C    ( *Var7 *Var0 *Var1 *Var2 )
   9C:  Call  TranslateModel        ( *VarA *Var0 *Var1 *Var2 )
   B8:  Wait  1`
   C4:  Goto  0
   D0:  Return
   D8:  End
}

% Origin: HEURISTIC
#new:Script $Script_80221FE4
{
    0:  Set   *VarA  *Var0
   10:  Set   *Var7  00000000
   20:  Label  0
   2C:  Add   *Var7  00000004
   3C:  If  *Var7  >  00000E0F
   4C:  	Sub   *Var7  00000E10
   5C:  EndIf
   64:  Call  $Function_80218D9C    ( *Var7 *Var0 *Var1 *Var2 )
   80:  Call  TranslateModel        ( *VarA *Var0 *Var1 *Var2 )
   9C:  Wait  1`
   A8:  Goto  0
   B4:  Return
   BC:  End
}

#new:Script $Script_BeforeBattle_802220A8
{
    0:  Call  SetSpriteShading  ( FFFFFFFF )
   10:  Exec  $Script_80221E00
   1C:  Thread
   24:  	Set   *Var0  00000016
   34:  	Set   *Var1  00000001
   44:  	Exec  $Script_80221F04
   50:  	Wait  5`
   5C:  	Set   *Var0  00000014
   6C:  	Set   *Var1  00000003
   7C:  	Exec  $Script_80221F04
   88:  	Wait  5`
   94:  	Set   *Var0  00000012
   A4:  	Set   *Var1  00000004
   B4:  	Exec  $Script_80221F04
   C0:  	Wait  5`
   CC:  	Set   *Var0  00000010
   DC:  	Set   *Var1  00000002
   EC:  	Exec  $Script_80221F04
   F8:  EndThread
  100:  Return
  108:  End
}

#new:Script $Script_AfterBattle_802221B8
{
    0:  Return
    8:  End
}

#new:ForegroundModelList $ForegroundModelList_802221C8
{
	FFFFFFFF
	~Model:sam_bt01:saku
	00000000
}

#new:Stage $Stage_802221D4
{
	$ASCII_80223AC8  % sam_tex
	$ASCII_80223AB8  % sam_bt01_shape
	$ASCII_80223AA8  % sam_bt01_hit
	$Script_BeforeBattle_802220A8
	$Script_AfterBattle_802221B8
	$ASCII_80223AA0  % yki_bg
	$ForegroundModelList_802221C8
	00000000
	00000000
	00000000
}

PADDING: 802221FC to 80222200 (006473DC to 006473E0)
00000000

% Origin: HEURISTIC
#new:Unknown $???_80222200
{
	00000000 00000000 00000000 00000000
}

#new:Script $Script_80222210
{
    0:  Call  $Function_80219098 ( )
    C:  Loop
   18:  	Wait  1`
   24:  EndLoop
   2C:  Return
   34:  End
}

#new:Script $Script_8022224C
{
    0:  Set   *VarA  *Var0
   10:  Label  0
   1C:  Call  RandInt   ( 0000001E *Var0 )
   30:  Add   *Var0  0000001E
   40:  Wait  *Var0
   4C:  Set   *Var1  00000000
   5C:  Loop  0000000A
   68:  	Add   *Var1  00000024
   78:  	Call  RotateModel   ( *VarA *Var1 00000000 00000001 00000000 )
   98:  	Wait  1`
   A4:  EndLoop
   AC:  Goto  0
   B8:  Return
   C0:  End
}

#new:Script $Script_80222314
{
    0:  Set   *VarA  *Var0
   10:  Set   *VarB  *Var1
   20:  Exec  $Script_8022224C
   2C:  Set   *Var7  00000000
   3C:  Label  0
   48:  Add   *Var7  00000004
   58:  If  *Var7  >  00000E0F
   68:  	Sub   *Var7  00000E10
   78:  EndIf
   80:  Call  $Function_802190BC    ( *Var7 *Var0 *Var1 *Var2 )
   9C:  Call  TranslateModel        ( *VarA *Var0 *Var1 *Var2 )
   B8:  Wait  1`
   C4:  Goto  0
   D0:  Return
   D8:  End
}

% Origin: HEURISTIC
#new:Script $Script_802223F4
{
    0:  Set   *VarA  *Var0
   10:  Set   *Var7  00000000
   20:  Label  0
   2C:  Add   *Var7  00000004
   3C:  If  *Var7  >  00000E0F
   4C:  	Sub   *Var7  00000E10
   5C:  EndIf
   64:  Call  $Function_802190BC    ( *Var7 *Var0 *Var1 *Var2 )
   80:  Call  TranslateModel        ( *VarA *Var0 *Var1 *Var2 )
   9C:  Wait  1`
   A8:  Goto  0
   B4:  Return
   BC:  End
}

#new:Script $Script_BeforeBattle_802224B8
{
    0:  Call  SetSpriteShading  ( FFFFFFFF )
   10:  Call  SetGroupEnabled   ( ~Model:sam_bt02:p2 00000000 )
   24:  Call  SetGroupEnabled   ( ~Model:sam_bt02:p3 00000000 )
   38:  Thread
   40:  	Set   *Var0  00000012
   50:  	Set   *Var1  00000000
   60:  	Exec  $Script_80222314
   6C:  	Wait  5`
   78:  	Set   *Var0  00000014
   88:  	Set   *Var1  00000000
   98:  	Exec  $Script_80222314
   A4:  	Wait  5`
   B0:  	Set   *Var0  00000016
   C0:  	Set   *Var1  00000000
   D0:  	Exec  $Script_80222314
   DC:  	Wait  5`
   E8:  	Set   *Var0  00000018
   F8:  	Set   *Var1  00000000
  108:  	Exec  $Script_80222314
  114:  EndThread
  11C:  Exec  $Script_80222210
  128:  Return
  130:  End
}

#new:Script $Script_AfterBattle_802225F0
{
    0:  Return
    8:  End
}

#new:ForegroundModelList $ForegroundModelList_80222600
{
	FFFFFFFF
	~Model:sam_bt02:kouri1
	00000000
}

#new:Stage $Stage_8022260C
{
	$ASCII_80223AF8  % sam_tex
	$ASCII_80223AE8  % sam_bt02_shape
	$ASCII_80223AD8  % sam_bt02_hit
	$Script_BeforeBattle_802224B8
	$Script_AfterBattle_802225F0
	$ASCII_80223AD0  % yki_bg
	$ForegroundModelList_80222600
	00000000
	00000000
	00000000
}

PADDING: 80222634 to 80222640 (00647814 to 00647820)
00000000 00000000 00000000

% Origin: HEURISTIC
#new:Unknown $???_80222640
{
	00000000 00000000 00000000 00000000
}

#new:Script $Script_80222650
{
    0:  Call  $Function_802193B8 ( )
    C:  Loop
   18:  	Wait  1`
   24:  EndLoop
   2C:  Return
   34:  End
}

% Origin: HEURISTIC
#new:Script $Script_8022268C
{
    0:  Set   *VarA  *Var0
   10:  Label  0
   1C:  Call  RandInt   ( 0000001E *Var0 )
   30:  Add   *Var0  0000001E
   40:  Wait  *Var0
   4C:  Set   *Var1  00000000
   5C:  Loop  0000000A
   68:  	Add   *Var1  00000024
   78:  	Call  RotateModel   ( *VarA *Var1 00000000 00000001 00000000 )
   98:  	Wait  1`
   A4:  EndLoop
   AC:  Goto  0
   B8:  Return
   C0:  End
}

% Origin: HEURISTIC
#new:Script $Script_80222754
{
    0:  Set   *VarA  *Var0
   10:  Set   *VarB  *Var1
   20:  Exec  $Script_8022268C
   2C:  Set   *Var7  00000000
   3C:  Label  0
   48:  Add   *Var7  00000004
   58:  If  *Var7  >  00000E0F
   68:  	Sub   *Var7  00000E10
   78:  EndIf
   80:  Call  $Function_802193DC    ( *Var7 *Var0 *Var1 *Var2 )
   9C:  Call  TranslateModel        ( *VarA *Var0 *Var1 *Var2 )
   B8:  Wait  1`
   C4:  Goto  0
   D0:  Return
   D8:  End
}

% Origin: HEURISTIC
#new:Script $Script_80222834
{
    0:  Set   *VarA  *Var0
   10:  Set   *Var7  00000000
   20:  Label  0
   2C:  Add   *Var7  00000004
   3C:  If  *Var7  >  00000E0F
   4C:  	Sub   *Var7  00000E10
   5C:  EndIf
   64:  Call  $Function_802193DC    ( *Var7 *Var0 *Var1 *Var2 )
   80:  Call  TranslateModel        ( *VarA *Var0 *Var1 *Var2 )
   9C:  Wait  1`
   A8:  Goto  0
   B4:  Return
   BC:  End
}

#new:Script $Script_BeforeBattle_802228F8
{
    0:  Call  SetSpriteShading  ( FFFFFFFF )
   10:  Call  SetGroupEnabled   ( ~Model:sam_bt02:p1 00000000 )
   24:  Call  SetGroupEnabled   ( ~Model:sam_bt02:yuki 00000000 )
   38:  Exec  $Script_80222650
   44:  Return
   4C:  End
}

#new:Script $Script_AfterBattle_8022294C
{
    0:  Return
    8:  End
}

#new:ForegroundModelList $ForegroundModelList_8022295C
{
	FFFFFFFF
	~Model:sam_bt02:kouri1
	00000000
}

#new:Stage $Stage_80222968
{
	$ASCII_80223B28  % sam_tex
	$ASCII_80223B18  % sam_bt02_shape
	$ASCII_80223B08  % sam_bt02_hit
	$Script_BeforeBattle_802228F8
	$Script_AfterBattle_8022294C
	$ASCII_80223B00  % yki_bg
	$ForegroundModelList_8022295C
	00000000
	00000000
	00000000
}

% Origin: HEURISTIC
#new:Unknown $???_80222990
{
	00000000 00000000 00000000 00000000
}

#new:Script $Script_802229A0
{
    0:  Call  $Function_802196D8 ( )
    C:  Loop
   18:  	Wait  1`
   24:  EndLoop
   2C:  Return
   34:  End
}

% Origin: HEURISTIC
#new:Script $Script_802229DC
{
    0:  Set   *VarA  *Var0
   10:  Label  0
   1C:  Call  RandInt   ( 0000001E *Var0 )
   30:  Add   *Var0  0000001E
   40:  Wait  *Var0
   4C:  Set   *Var1  00000000
   5C:  Loop  0000000A
   68:  	Add   *Var1  00000024
   78:  	Call  RotateModel   ( *VarA *Var1 00000000 00000001 00000000 )
   98:  	Wait  1`
   A4:  EndLoop
   AC:  Goto  0
   B8:  Return
   C0:  End
}

% Origin: HEURISTIC
#new:Script $Script_80222AA4
{
    0:  Set   *VarA  *Var0
   10:  Set   *VarB  *Var1
   20:  Exec  $Script_802229DC
   2C:  Set   *Var7  00000000
   3C:  Label  0
   48:  Add   *Var7  00000004
   58:  If  *Var7  >  00000E0F
   68:  	Sub   *Var7  00000E10
   78:  EndIf
   80:  Call  $Function_802196FC    ( *Var7 *Var0 *Var1 *Var2 )
   9C:  Call  TranslateModel        ( *VarA *Var0 *Var1 *Var2 )
   B8:  Wait  1`
   C4:  Goto  0
   D0:  Return
   D8:  End
}

% Origin: HEURISTIC
#new:Script $Script_80222B84
{
    0:  Set   *VarA  *Var0
   10:  Set   *Var7  00000000
   20:  Label  0
   2C:  Add   *Var7  00000004
   3C:  If  *Var7  >  00000E0F
   4C:  	Sub   *Var7  00000E10
   5C:  EndIf
   64:  Call  $Function_802196FC    ( *Var7 *Var0 *Var1 *Var2 )
   80:  Call  TranslateModel        ( *VarA *Var0 *Var1 *Var2 )
   9C:  Wait  1`
   A8:  Goto  0
   B4:  Return
   BC:  End
}

#new:Script $Script_BeforeBattle_80222C48
{
    0:  Call  SetSpriteShading  ( FFFFFFFF )
   10:  Call  SetGroupEnabled   ( ~Model:sam_bt02:p1 00000000 )
   24:  Call  SetGroupEnabled   ( ~Model:sam_bt02:p2 00000000 )
   38:  Call  SetGroupEnabled   ( ~Model:sam_bt02:yuki 00000000 )
   4C:  Exec  $Script_802229A0
   58:  Return
   60:  End
}

#new:Script $Script_AfterBattle_80222CB0
{
    0:  Return
    8:  End
}

#new:ForegroundModelList $ForegroundModelList_80222CC0
{
	FFFFFFFF
	~Model:sam_bt02:kouri1
	00000000
}

#new:Stage $Stage_80222CCC
{
	$ASCII_80223B58  % sam_tex
	$ASCII_80223B48  % sam_bt02_shape
	$ASCII_80223B38  % sam_bt02_hit
	$Script_BeforeBattle_80222C48
	$Script_AfterBattle_80222CB0
	$ASCII_80223B30  % yki_bg
	$ForegroundModelList_80222CC0
	00000000
	00000000
	00000000
}

PADDING: 80222CF4 to 80222D00 (00647ED4 to 00647EE0)
00000000 00000000 00000000

% Origin: HEURISTIC
#new:Unknown $???_80222D00
{
	00000000 00000000 00000000 00000000
}

#new:Script $Script_80222D10
{
    0:  Call  $Function_802199F8 ( )
    C:  Loop
   18:  	Wait  1`
   24:  EndLoop
   2C:  Return
   34:  End
}

% Origin: HEURISTIC
#new:Script $Script_80222D4C
{
    0:  Set   *VarA  *Var0
   10:  Label  0
   1C:  Call  RandInt   ( 0000001E *Var0 )
   30:  Add   *Var0  0000001E
   40:  Wait  *Var0
   4C:  Set   *Var1  00000000
   5C:  Loop  0000000A
   68:  	Add   *Var1  00000024
   78:  	Call  RotateModel   ( *VarA *Var1 00000000 00000001 00000000 )
   98:  	Wait  1`
   A4:  EndLoop
   AC:  Goto  0
   B8:  Return
   C0:  End
}

% Origin: HEURISTIC
#new:Script $Script_80222E14
{
    0:  Set   *VarA  *Var0
   10:  Set   *VarB  *Var1
   20:  Exec  $Script_80222D4C
   2C:  Set   *Var7  00000000
   3C:  Label  0
   48:  Add   *Var7  00000004
   58:  If  *Var7  >  00000E0F
   68:  	Sub   *Var7  00000E10
   78:  EndIf
   80:  Call  $Function_80219A1C    ( *Var7 *Var0 *Var1 *Var2 )
   9C:  Call  TranslateModel        ( *VarA *Var0 *Var1 *Var2 )
   B8:  Wait  1`
   C4:  Goto  0
   D0:  Return
   D8:  End
}

% Origin: HEURISTIC
#new:Script $Script_80222EF4
{
    0:  Set   *VarA  *Var0
   10:  Set   *Var7  00000000
   20:  Label  0
   2C:  Add   *Var7  00000004
   3C:  If  *Var7  >  00000E0F
   4C:  	Sub   *Var7  00000E10
   5C:  EndIf
   64:  Call  $Function_80219A1C    ( *Var7 *Var0 *Var1 *Var2 )
   80:  Call  TranslateModel        ( *VarA *Var0 *Var1 *Var2 )
   9C:  Wait  1`
   A8:  Goto  0
   B4:  Return
   BC:  End
}

#new:Script $Script_BeforeBattle_80222FB8
{
    0:  Call  SetSpriteShading  ( FFFFFFFF )
   10:  Call  SetGroupEnabled   ( ~Model:sam_bt02:p1 00000000 )
   24:  Call  SetGroupEnabled   ( ~Model:sam_bt02:p2 00000000 )
   38:  Call  SetGroupEnabled   ( ~Model:sam_bt02:p3 00000000 )
   4C:  Call  SetGroupEnabled   ( ~Model:sam_bt02:yuki 00000000 )
   60:  Exec  $Script_80222D10
   6C:  Return
   74:  End
}

#new:Script $Script_AfterBattle_80223034
{
    0:  Return
    8:  End
}

#new:ForegroundModelList $ForegroundModelList_80223044
{
	FFFFFFFF
	~Model:sam_bt02:kouri1
	00000000
}

#new:Stage $Stage_80223050
{
	$ASCII_80223B88  % sam_tex
	$ASCII_80223B78  % sam_bt02_shape
	$ASCII_80223B68  % sam_bt02_hit
	$Script_BeforeBattle_80222FB8
	$Script_AfterBattle_80223034
	$ASCII_80223B60  % yki_bg
	$ForegroundModelList_80223044
	00000000
	00000000
	00000000
}

PADDING: 80223078 to 80223080 (00648258 to 00648260)
00000000 00000000

% Origin: HEURISTIC
#new:Unknown $???_80223080
{
	00000000 00000000 00000000 00000000
}

#new:Script $Script_80223090
{
    0:  Call  $Function_80219D18 ( )
    C:  Loop
   18:  	Wait  1`
   24:  EndLoop
   2C:  Return
   34:  End
}

#new:Script $Script_802230CC
{
    0:  Set   *VarA  *Var0
   10:  Label  0
   1C:  Call  RandInt   ( 0000001E *Var0 )
   30:  Add   *Var0  0000001E
   40:  Wait  *Var0
   4C:  Set   *Var1  00000000
   5C:  Loop  0000000A
   68:  	Add   *Var1  00000024
   78:  	Call  RotateModel   ( *VarA *Var1 00000000 00000001 00000000 )
   98:  	Wait  1`
   A4:  EndLoop
   AC:  Goto  0
   B8:  Return
   C0:  End
}

#new:Script $Script_80223194
{
    0:  Set   *VarA  *Var0
   10:  Set   *VarB  *Var1
   20:  Exec  $Script_802230CC
   2C:  Set   *Var7  00000000
   3C:  Label  0
   48:  Add   *Var7  00000004
   58:  If  *Var7  >  00000E0F
   68:  	Sub   *Var7  00000E10
   78:  EndIf
   80:  Call  $Function_80219D3C    ( *Var7 *Var0 *Var1 *Var2 )
   9C:  Call  TranslateModel        ( *VarA *Var0 *Var1 *Var2 )
   B8:  Wait  1`
   C4:  Goto  0
   D0:  Return
   D8:  End
}

#new:Script $Script_80223274
{
    0:  Set   *VarA  *Var0
   10:  Set   *Var7  00000000
   20:  Label  0
   2C:  Add   *Var7  00000004
   3C:  If  *Var7  >  00000E0F
   4C:  	Sub   *Var7  00000E10
   5C:  EndIf
   64:  Call  $Function_80219D3C    ( *Var7 *Var0 *Var1 *Var2 )
   80:  Call  TranslateModel        ( *VarA *Var0 *Var1 *Var2 )
   9C:  Wait  1`
   A8:  Goto  0
   B4:  Return
   BC:  End
}

#new:Script $Script_BeforeBattle_80223338
{
    0:  Call  SetSpriteShading  ( FFFFFFFF )
   10:  Thread
   18:  	Set   *Var0  00000010
   28:  	Set   *Var1  00000000
   38:  	Exec  $Script_80223194
   44:  	Wait  5`
   50:  	Set   *Var0  00000019
   60:  	Set   *Var1  00000000
   70:  	Exec  $Script_80223274
   7C:  	Wait  5`
   88:  	Set   *Var0  00000016
   98:  	Set   *Var1  00000000
   A8:  	Exec  $Script_80223274
   B4:  	Wait  5`
   C0:  	Set   *Var0  00000013
   D0:  	Set   *Var1  00000000
   E0:  	Exec  $Script_80223274
   EC:  EndThread
   F4:  Exec  $Script_80223090
  100:  Return
  108:  End
}

#new:Script $Script_AfterBattle_80223448
{
    0:  Return
    8:  End
}

#new:ForegroundModelList $ForegroundModelList_80223458
{
	FFFFFFFF
	~Model:sam_bt03:o278
	00000000
}

#new:Stage $Stage_80223464
{
	$ASCII_80223BB8  % sam_tex
	$ASCII_80223BA8  % sam_bt03_shape
	$ASCII_80223B98  % sam_bt03_hit
	$Script_BeforeBattle_80223338
	$Script_AfterBattle_80223448
	$ASCII_80223B90  % sam_bg
	$ForegroundModelList_80223458
	00000000
	00000000
	00000000
}

PADDING: 8022348C to 80223490 (0064866C to 00648670)
00000000

#new:Vector3D $Vector3D_80223490
{
	75` 16` 5`
}

#new:Formation $Formation_00
{
	$Monstar $Vector3D_80223490 0000000A 00000000 00000000 00000000 00000000
}

#new:Formation $Formation_01
{
	$Paragoomba 00000005 0000000A 00000000 00000000 00000000 00000000
	$GRYMagikoopa 00000002 00000009 00000000 00000000 00000000 00000000
}

#new:FormationTable $FormationTable
{
	$SJIS_80223BE8 00000001 $Formation_00 $Stage_80223464 00000000
	$SJIS_80223BC0 00000002 $Formation_01 $Stage_802221D4 00000000
	00000000 00000000 00000000 00000000 00000000
}

#new:StageTable $StageTable
{
	$ASCII_80223C1C $Stage_802221D4
	$ASCII_80223C14 $Stage_8022260C
	$ASCII_80223C0C $Stage_80222968
	$ASCII_80223C04 $Stage_80222CCC
	$ASCII_80223BFC $Stage_80223050
	$ASCII_80223BF4 $Stage_80223464
	00000000 00000000
}

PADDING: 80223564 to 80223570 (00648744 to 00648750)
00000000 00000000 00000000

#new:Unknown $???_80223570
{
	01020040 $???_80223680 06000204 00000406 06080A0C 00080C0E 06101214 00101416
	06181A1C 00181C1E 06202224 00202426 06282A2C 00282C2E 06303234 00303436
	06383A3C 00383C3E 01020040 $???_80223880 06001012 00001214 06021618 0002181A
	06041C1E 00041E20 06062224 00062426 0608282A 00082A2C 060A2E30 000A3032
	060C3436 000C3638 060E3A3C 000E3C3E 01001002 $???_80223700 01002006 $???_80223730
	0100200A $???_80223770 0100100C $???_802237B0 01005016 $???_802238B0 01001018 $???_802239B0
	0100101A $???_802239E0 0100101C $???_80223A10 0100101E $???_80223A40 01003024 $???_80223A70
	06022000 00062004 060A2008 0016200C 0618220E 001A2010 061C2012 001E2014
	DF000000 00000000 00000000 00000000
}

#new:Unknown $???_80223680
{
	FFD30045 00000000 0E66FA09 FFFFFFFF FFCE0047 00000000 1000F95F FFFFFF00
	FFCE001D 00000000 100006A1 FFFFFF00 FFD3001F 00000000 0E6605F7 FFFFFFFF
	FFD3001F 00000000 0E66FA09 FFFFFFFF FFCE001D 00000000 1000F95F FFFFFF00
	FFEB0000 00000000 100006A1 FFFFFF00 FFED0005 00000000 0E6605F7 FFFFFFFF
}

#new:Unknown $???_80223700
{
	FFFB0030 00000000 019AFF56 FFFFFF1E FFD3001F 00000000 0E66FA09 FFFFFFFF
	FFED0005 00000000 0E6605F7 FFFFFFFF
}

#new:Unknown $???_80223730
{
	FFFE002D 00000000 019A00AA FFFFFF1E FFFB0034 00000000 019AFF56 FFFFFF1E
	FFD30045 00000000 0E66FA09 FFFFFFFF FFD3001F 00000000 0E6605F7 FFFFFFFF
}

#new:Unknown $???_80223770
{
	FFFB0030 00000000 019A00AA FFFFFF1E FFFE0037 00000000 019AFF56 FFFFFF1E
	FFED005F 00000000 0E66FA09 FFFFFFFF FFD30045 00000000 0E6605F7 FFFFFFFF
}

#new:Unknown $???_802237B0
{
	FFFB0034 00000000 019A00AA FFFFFF1E FFED005F 00000000 0E66FA09 FFFFFFFF
	FFEB0064 00000000 1000F95F FFFFFF00 FFCE0047 00000000 100006A1 FFFFFF00
	FFD30045 00000000 0E6605F7 FFFFFFFF 00130005 00000000 0E66FA09 FFFFFFFF
	00150000 00000000 1000F95F FFFFFF00 0032001D 00000000 100006A1 FFFFFF00
	002D001F 00000000 0E6605F7 FFFFFFFF FFED0005 00000000 0E66FA09 FFFFFFFF
	FFEB0000 00000000 1000F95F FFFFFF00 00150000 00000000 100006A1 FFFFFF00
	00130005 00000000 0E6605F7 FFFFFFFF
}

#new:Unknown $???_80223880
{
	0013005F 00000000 0E66FA09 FFFFFFFF 002D0045 00000000 0E66FA09 FFFFFFFF
	002D001F 00000000 0E66FA09 FFFFFFFF
}

#new:Unknown $???_802238B0
{
	00020037 00000000 019AFF56 FFFFFF1E 00050030 00000000 019AFF56 FFFFFF1E
	FFFE002D 00000000 019AFF56 FFFFFF1E 0002002D 00000000 019AFF56 FFFFFF1E
	00050034 00000000 019AFF56 FFFFFF1E 00150064 00000000 1000F95F FFFFFF00
	FFEB0064 00000000 100006A1 FFFFFF00 FFED005F 00000000 0E6605F7 FFFFFFFF
	00320047 00000000 1000F95F FFFFFF00 00150064 00000000 100006A1 FFFFFF00
	0013005F 00000000 0E6605F7 FFFFFFFF 0032001D 00000000 1000F95F FFFFFF00
	00320047 00000000 100006A1 FFFFFF00 002D0045 00000000 0E6605F7 FFFFFFFF
	0013005F 00000000 0E66FA09 FFFFFFFF FFED005F 00000000 0E6605F7 FFFFFFFF
}

#new:Unknown $???_802239B0
{
	FFFE0037 00000000 019A00AA FFFFFF1E 002D001F 00000000 0E66FA09 FFFFFFFF
	002D0045 00000000 0E6605F7 FFFFFFFF
}

#new:Unknown $???_802239E0
{
	00050034 00000000 019A00AA FFFFFF1E FFED0005 00000000 0E66FA09 FFFFFFFF
	00130005 00000000 0E6605F7 FFFFFFFF
}

#new:Unknown $???_80223A10
{
	0002002D 00000000 019A00AA FFFFFF1E 00130005 00000000 0E66FA09 FFFFFFFF
	002D001F 00000000 0E6605F7 FFFFFFFF
}

#new:Unknown $???_80223A40
{
	00050030 00000000 019A00AA FFFFFF1E 002D0045 00000000 0E66FA09 FFFFFFFF
	0013005F 00000000 0E6605F7 FFFFFFFF
}

#new:Unknown $???_80223A70
{
	00020037 00000000 019A00AA FFFFFF1E 00000032 00000000 00000000 FFFFFF00
	00000032 00000000 00000000 FFFFFF00
}

#new:ASCII $ASCII_80223AA0
{
	"yki_bg"
}

#new:ASCII $ASCII_80223AA8
{
	"sam_bt01_hit"
}

#new:ASCII $ASCII_80223AB8
{
	"sam_bt01_shape"
}

#new:ASCII $ASCII_80223AC8
{
	"sam_tex"
}

#new:ASCII $ASCII_80223AD0
{
	"yki_bg"
}

#new:ASCII $ASCII_80223AD8
{
	"sam_bt02_hit"
}

#new:ASCII $ASCII_80223AE8
{
	"sam_bt02_shape"
}

#new:ASCII $ASCII_80223AF8
{
	"sam_tex"
}

#new:ASCII $ASCII_80223B00
{
	"yki_bg"
}

#new:ASCII $ASCII_80223B08
{
	"sam_bt02_hit"
}

#new:ASCII $ASCII_80223B18
{
	"sam_bt02_shape"
}

#new:ASCII $ASCII_80223B28
{
	"sam_tex"
}

#new:ASCII $ASCII_80223B30
{
	"yki_bg"
}

#new:ASCII $ASCII_80223B38
{
	"sam_bt02_hit"
}

#new:ASCII $ASCII_80223B48
{
	"sam_bt02_shape"
}

#new:ASCII $ASCII_80223B58
{
	"sam_tex"
}

#new:ASCII $ASCII_80223B60
{
	"yki_bg"
}

#new:ASCII $ASCII_80223B68
{
	"sam_bt02_hit"
}

#new:ASCII $ASCII_80223B78
{
	"sam_bt02_shape"
}

#new:ASCII $ASCII_80223B88
{
	"sam_tex"
}

#new:ASCII $ASCII_80223B90
{
	"sam_bg"
}

#new:ASCII $ASCII_80223B98
{
	"sam_bt03_hit"
}

#new:ASCII $ASCII_80223BA8
{
	"sam_bt03_shape"
}

#new:ASCII $ASCII_80223BB8
{
	"sam_tex"
}

#new:SJIS $SJIS_80223BC0
{
	パタクリ,グレイカメック（チェックよう） % patakuri,gureikamekku（chekkuyou）
}

#new:SJIS $SJIS_80223BE8
{
	かいぶつ % kaibutsu
}

#new:ASCII $ASCII_80223BF4
{
	"sam_03"
}

#new:ASCII $ASCII_80223BFC
{
	"sam_02d"
}

#new:ASCII $ASCII_80223C04
{
	"sam_02c"
}

#new:ASCII $ASCII_80223C0C
{
	"sam_02b"
}

#new:ASCII $ASCII_80223C14
{
	"sam_02"
}

#new:ASCII $ASCII_80223C1C
{
	"sam_01"
}

PADDING: 80223C24 to 80223C30 (00648E04 to 00648E10)
00000000 00000000 00000000

