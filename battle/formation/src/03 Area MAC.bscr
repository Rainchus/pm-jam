% Script File: 03 Area MAC.bscr
% Decoded from: 464490 to 47F0B0 (03 Area MAC)

#new:Function $Function_80218000
{
    0:  ADDIU     SP, SP, FFD8
    4:  SW        S1, 14 (SP)
    8:  COPY      S1, A0
    C:  SW        RA, 20 (SP)
   10:  SW        S3, 1C (SP)
   14:  SW        S2, 18 (SP)
   18:  SW        S0, 10 (SP)
   1C:  LW        S0, C (S1)
   20:  LW        A1, 0 (S0)
   24:  JAL       ~Func:get_variable
   28:  ADDIU     S0, S0, 4
   2C:  LW        A1, 0 (S0)
   30:  ADDIU     S0, S0, 4
   34:  COPY      A0, S1
   38:  JAL       ~Func:get_variable
   3C:  COPY      S3, V0
   40:  LW        A1, 0 (S0)
   44:  ADDIU     S0, S0, 4
   48:  COPY      A0, S1
   4C:  JAL       ~Func:get_variable
   50:  COPY      S2, V0
   54:  COPY      A0, S1
   58:  LW        A1, 0 (S0)
   5C:  JAL       ~Func:get_variable
   60:  COPY      S0, V0
   64:  LW        A0, 148 (S1)
   68:  JAL       ~Func:get_actor
   6C:  COPY      S1, V0
   70:  COPY      V1, V0
   74:  LW        V0, 8 (V1)
   78:  LBU       V0, 24 (V0)
   7C:  LW        A0, 8 (V1)
   80:  SUBU      S3, S3, V0
   84:  SB        S3, 194 (V1)
   88:  LBU       V0, 25 (A0)
   8C:  SUBU      S2, S2, V0
   90:  SB        S2, 195 (V1)
   94:  LBU       V0, 26 (A0)
   98:  SUBU      S0, S0, V0
   9C:  SB        S0, 196 (V1)
   A0:  LBU       A0, 27 (A0)
   A4:  SUBU      S1, S1, A0
   A8:  SB        S1, 197 (V1)
   AC:  LW        RA, 20 (SP)
   B0:  LW        S3, 1C (SP)
   B4:  LW        S2, 18 (SP)
   B8:  LW        S1, 14 (SP)
   BC:  LW        S0, 10 (SP)
   C0:  LI        V0, 2
   C4:  JR        RA
   C8:  ADDIU     SP, SP, 28
}

PADDING: 802180CC to 802180D0 (0046455C to 00464560)
00000000

#new:Function $Function_802180D0
{
    0:  LI        V1, B
    4:  LA        V0, $End[2C]
        .oC
    C:  SW        R0, 0 (V0)
   10:  ADDIU     V1, V1, FFFF
   14:  BGEZ      V1, .oC
   18:  ADDIU     V0, V0, FFFC
   1C:  LI        V0, FFFF
   20:  SAW       V0, $End[30]
   28:  JR        RA
   2C:  LI        V0, 2
}

#new:Function $Function_80218100
{
    0:  ADDIU     SP, SP, FFA0
    4:  SW        S5, 54 (SP)
    8:  COPY      S5, A0
    C:  SW        S4, 50 (SP)
   10:  LA        S4, 8010F290
   18:  LA        A1, $End[30]
   20:  SW        RA, 58 (SP)
   24:  SW        S3, 4C (SP)
   28:  SW        S2, 48 (SP)
   2C:  SW        S1, 44 (SP)
   30:  SW        S0, 40 (SP)
   34:  LW        V0, 0 (A1)
   38:  LW        S3, 98 (S5)
   3C:  BGEZ      V0, .o54
   40:  LI        V1, 1
   44:  LI        V0, 2
   48:  SLLV      A0, S3, V0
   4C:  BEQ       R0, R0, .o1D0
   50:  SW        S3, 0 (A1)
        .o54
   54:  BEQ       V0, S3, .o88
   58:  SLL       V1, S3, 2
   5C:  LA        V0, $End[0]
   64:  ADDU      A0, V1, V0
   68:  LW        V0, 0 (A0)
   6C:  BNE       V0, R0, .o8C
   70:  LI        S1, B
   74:  LI        V0, 2
   78:  LI        V1, 1
   7C:  SW        S3, 0 (A1)
   80:  BEQ       R0, R0, .o1DC
   84:  SW        V1, 0 (A0)
        .o88
   88:  LI        S1, B
        .o8C
   8C:  ADDIU     V0, SP, 3C
        .o90
   90:  SW        S1, 0 (V0)
   94:  ADDIU     S1, S1, FFFF
   98:  BGEZ      S1, .o90
   9C:  ADDIU     V0, V0, FFFC
   A0:  CLEAR     S1
   A4:  ADDIU     S2, SP, 10
        .oA8
   A8:  JAL       ~Func:rand_int
   AC:  LI        A0, B
   B0:  LI        A0, B
   B4:  JAL       ~Func:rand_int
   B8:  COPY      S0, V0
   BC:  SLL       S0, S0, 2
   C0:  ADDU      S0, S2, S0
   C4:  SLL       V0, V0, 2
   C8:  ADDU      V0, S2, V0
   CC:  LW        A0, 0 (S0)
   D0:  LW        V1, 0 (V0)
   D4:  ADDIU     S1, S1, 1
   D8:  SW        V1, 0 (S0)
   DC:  SW        A0, 0 (V0)
   E0:  SLTI      V0, S1, 64
   E4:  BNE       V0, R0, .oA8
   E8:  LI        T0, 5
   EC:  CLEAR     S1
   F0:  LI        A3, A
   F4:  LI        A2, B
   F8:  LA        A1, $End[0]
  100:  ADDIU     V1, SP, 10
        .o104
  104:  LW        A0, 0 (V1)
  108:  SLL       V0, A0, 3
  10C:  ADDU      V0, S4, V0
  110:  LBU       V0, 14 (V0)
  114:  BEQL      V0, R0, .o154
  118:  ADDIU     S1, S1, 1
  11C:  BEQL      A0, T0, .o154
  120:  ADDIU     S1, S1, 1
  124:  BEQL      A0, A3, .o154
  128:  ADDIU     S1, S1, 1
  12C:  BEQL      A0, A2, .o154
  130:  ADDIU     S1, S1, 1
  134:  BEQL      A0, S3, .o154
  138:  ADDIU     S1, S1, 1
  13C:  SLL       V0, A0, 2
  140:  ADDU      V0, V0, A1
  144:  LW        V0, 0 (V0)
  148:  BEQ       V0, R0, .o164
  14C:  SLTI      V0, S1, C
  150:  ADDIU     S1, S1, 1
        .o154
  154:  SLTI      V0, S1, C
  158:  BNE       V0, R0, .o104
  15C:  ADDIU     V1, V1, 4
  160:  SLTI      V0, S1, C
        .o164
  164:  BEQ       V0, R0, .o1A0
  168:  SLL       V1, A0, 2
  16C:  LI        V0, 1
  170:  STW       V0, V1 ($End[0])
  17C:  SLL       V0, A0, 3
  180:  ADDU      V0, S4, V0
  184:  SAW       A0, $End[30]
  18C:  SW        A0, 98 (S5)
  190:  LB        V1, 15 (V0)
  194:  LI        V0, 2
  198:  BEQ       R0, R0, .o1DC
  19C:  SW        V1, 9C (S5)
        .o1A0
  1A0:  LI        S1, B
  1A4:  LA        V0, $End[2C]
        .o1AC
  1AC:  SW        R0, 0 (V0)
  1B0:  ADDIU     S1, S1, FFFF
  1B4:  BGEZ      S1, .o1AC
  1B8:  ADDIU     V0, V0, FFFC
  1BC:  LI        V0, 2
  1C0:  SLLV      A0, S3, V0
  1C4:  LI        V1, 1
  1C8:  SAW       S3, $End[30]
        .o1D0
  1D0:  STW       V1, A0 ($End[0])
        .o1DC
  1DC:  LW        RA, 58 (SP)
  1E0:  LW        S5, 54 (SP)
  1E4:  LW        S4, 50 (SP)
  1E8:  LW        S3, 4C (SP)
  1EC:  LW        S2, 48 (SP)
  1F0:  LW        S1, 44 (SP)
  1F4:  LW        S0, 40 (SP)
  1F8:  JR        RA
  1FC:  ADDIU     SP, SP, 60
}

#new:Function $Function_80218300
{
    0:  ADDIU     SP, SP, FFB8
    4:  SW        S4, 20 (SP)
    8:  COPY      S4, A0
    C:  SW        S0, 10 (SP)
   10:  SW        RA, 24 (SP)
   14:  SW        S3, 1C (SP)
   18:  SW        S2, 18 (SP)
   1C:  SW        S1, 14 (SP)
   20:  SDC1      F26, 40 (SP)
   24:  SDC1      F24, 38 (SP)
   28:  SDC1      F22, 30 (SP)
   2C:  SDC1      F20, 28 (SP)
   30:  LW        A0, 148 (S4)
   34:  LW        S2, C (S4)
   38:  JAL       ~Func:get_actor
   3C:  COPY      S0, A1
   40:  COPY      S3, V0
   44:  BEQ       S0, R0, .o8C
   48:  ADDIU     S1, S3, C
   4C:  LW        A1, 0 (S2)
   50:  ADDIU     S2, S2, 4
   54:  JAL       ~Func:get_variable
   58:  COPY      A0, S4
   5C:  SH        V0, 70 (S3)
   60:  LW        A1, 0 (S2)
   64:  JAL       ~Func:get_variable
   68:  COPY      A0, S4
   6C:  SH        V0, 72 (S3)
   70:  SW        R0, 74 (S4)
   74:  SW        R0, 70 (S4)
   78:  LH        V1, 72 (S3)
   7C:  LI        V0, 1
   80:  BNE       V1, V0, .o8C
   84:  LI        V0, 2
   88:  SW        V0, 70 (S4)
        .o8C
   8C:  LW        V0, 70 (S4)
   90:  BNE       V0, R0, .o470
   94:  NOP
   98:  LWC1      F0, 144 (S3)
   9C:  LWC1      F24, C (S1)
   A0:  LWC1      F26, 14 (S1)
   A4:  SWC1      F0, 0 (S1)
   A8:  LWC1      F0, 148 (S3)
   AC:  MFC1      A2, F24
   B0:  MFC1      A3, F26
   B4:  LWC1      F22, 0 (S1)
   B8:  SWC1      F0, 4 (S1)
   BC:  LWC1      F20, 14C (S3)
   C0:  MOV.S     F12, F22
   C4:  MOV.S     F14, F20
   C8:  JAL       ~Func:atan2
   CC:  SWC1      F20, 8 (S1)
   D0:  MOV.S     F12, F22
   D4:  MFC1      A2, F24
   D8:  MFC1      A3, F26
   DC:  MOV.S     F14, F20
   E0:  JAL       ~Func:dist2D
   E4:  SWC1      F0, 48 (S1)
   E8:  LH        V0, 64 (S1)
   EC:  MOV.S     F4, F0
   F0:  BNE       V0, R0, .o13C
   F4:  SWC1      F4, 4C (S1)
   F8:  LWC1      F0, 40 (S1)
   FC:  LWC1      F2, 40 (S1)
  100:  DIV.S     F0, F4, F0
  104:  TRUNC.W.S F10, F0
  108:  MFC1      V1, F10
  10C:  NOP
  110:  SLL       V0, V1, 10
  114:  SRA       V0, V0, 10
  118:  MTC1      V0, F0
  11C:  NOP
  120:  CVT.S.W   F0, F0
  124:  MUL.S     F0, F0, F2
  128:  NOP
  12C:  MOV.S     F2, F4
  130:  SH        V1, 64 (S1)
  134:  BEQ       R0, R0, .o170
  138:  SUB.S     F8, F2, F0
        .o13C
  13C:  MTC1      V0, F2
  140:  NOP
  144:  CVT.S.W   F2, F2
  148:  LH        V0, 64 (S1)
  14C:  DIV.S     F2, F4, F2
  150:  MTC1      V0, F0
  154:  NOP
  158:  CVT.S.W   F0, F0
  15C:  MUL.S     F0, F0, F2
  160:  NOP
  164:  LWC1      F4, 4C (S1)
  168:  SWC1      F2, 40 (S1)
  16C:  SUB.S     F8, F4, F0
        .o170
  170:  LH        V1, 64 (S1)
  174:  BEQ       V1, R0, .o860
  178:  LI        V0, 2
  17C:  LH        V0, 64 (S1)
  180:  LWC1      F2, C (S1)
  184:  LIF       F0, 3.14159
  190:  LWC1      F4, 0 (S1)
  194:  MTC1      V0, F6
  198:  NOP
  19C:  CVT.S.W   F6, F6
  1A0:  DIV.S     F0, F0, F6
  1A4:  SUB.S     F2, F2, F4
  1A8:  SWC1      F0, 3C (S1)
  1AC:  MTC1      V1, F0
  1B0:  NOP
  1B4:  CVT.S.W   F0, F0
  1B8:  DIV.S     F2, F2, F0
  1BC:  LWC1      F0, 10 (S1)
  1C0:  SWC1      F2, 30 (S1)
  1C4:  LWC1      F2, 4 (S1)
  1C8:  SW        R0, 44 (S1)
  1CC:  SUB.S     F0, F0, F2
  1D0:  LWC1      F4, 14 (S1)
  1D4:  MOV.S     F2, F6
  1D8:  DIV.S     F0, F0, F2
  1DC:  SWC1      F0, 34 (S1)
  1E0:  MOV.S     F0, F6
  1E4:  DIV.S     F0, F8, F0
  1E8:  LWC1      F2, 8 (S1)
  1EC:  LH        V0, 66 (S1)
  1F0:  SUB.S     F4, F4, F2
  1F4:  LWC1      F2, 40 (S1)
  1F8:  SLTI      V0, V0, 3
  1FC:  ADD.S     F2, F2, F0
  200:  DIV.S     F4, F4, F6
  204:  SWC1      F4, 38 (S1)
  208:  BEQ       V0, R0, .o320
  20C:  SWC1      F2, 40 (S1)
  210:  LH        V0, 64 (S1)
  214:  LI        V1, 168
  218:  BNE       V0, R0, .o224
  21C:  DIV       V1, V0
  220:  BREAK     1C00
        .o224
  224:  LI        AT, FFFF
  228:  BNE       V0, AT, .o23C
  22C:  LUI       AT, 8000
  230:  BNE       V1, AT, .o23C
  234:  NOP
  238:  BREAK     1800
        .o23C
  23C:  MFLO      V1
  240:  LWC1      F8, 4C (S1)
  244:  LIF       F3, 2.8125
  24C:  MTC1      R0, F2
  250:  CVT.D.S   F0, F8
  254:  SUB.D     F0, F0, F2
  258:  LIF       F3, 2.375
  260:  MTC1      R0, F2
  264:  CVT.S.D   F8, F0
  268:  CVT.D.S   F0, F8
  26C:  DIV.D     F0, F0, F2
  270:  CVT.S.D   F8, F0
  274:  LAD       F2, $ConstDouble_80232AF0
  27C:  CVT.D.S   F0, F8
  280:  ADD.D     F0, F0, F2
  284:  LIF       F2, 90.0
  28C:  CVT.S.D   F8, F0
  290:  MTC1      V1, F0
  294:  NOP
  298:  CVT.S.W   F0, F0
  29C:  LH        V1, 66 (S1)
  2A0:  LI        V0, 2
  2A4:  SWC1      F2, 24 (S1)
  2A8:  SWC1      F8, 50 (S1)
  2AC:  BNE       V1, V0, .o2D0
  2B0:  SWC1      F0, 28 (S1)
  2B4:  LAD       F2, $ConstDouble_80232AF8
  2BC:  CVT.D.S   F0, F8
  2C0:  MUL.D     F0, F0, F2
  2C4:  NOP
  2C8:  CVT.S.D   F0, F0
  2CC:  SWC1      F0, 50 (S1)
        .o2D0
  2D0:  LWC1      F12, 24 (S1)
  2D4:  LIF       F0, 6.28318
  2E0:  LWC1      F20, 44 (S1)
  2E4:  LWC1      F22, 3C (S1)
  2E8:  SW        R0, 18 (S1)
  2EC:  MUL.S     F12, F12, F0
  2F0:  NOP
  2F4:  SW        R0, 1C (S1)
  2F8:  CVT.D.S   F20, F20
  2FC:  LIF       F0, 360.0
  304:  CVT.D.S   F22, F22
  308:  JAL       ~Func:sin_rad
  30C:  DIV.S     F12, F12, F0
  310:  LAD       F2, $ConstDouble_80232B00
  318:  BEQ       R0, R0, .o430
  31C:  CVT.D.S   F0, F0
        .o320
  320:  LH        V0, 64 (S1)
  324:  LI        V1, 168
  328:  BNE       V0, R0, .o334
  32C:  DIV       V1, V0
  330:  BREAK     1C00
        .o334
  334:  LI        AT, FFFF
  338:  BNE       V0, AT, .o34C
  33C:  LUI       AT, 8000
  340:  BNE       V1, AT, .o34C
  344:  NOP
  348:  BREAK     1800
        .o34C
  34C:  MFLO      V1
  350:  LWC1      F8, 4C (S1)
  354:  LIF       F3, 2.8125
  35C:  MTC1      R0, F2
  360:  CVT.D.S   F0, F8
  364:  SUB.D     F0, F0, F2
  368:  LIF       F3, 2.375
  370:  MTC1      R0, F2
  374:  CVT.S.D   F8, F0
  378:  CVT.D.S   F0, F8
  37C:  DIV.D     F0, F0, F2
  380:  CVT.S.D   F8, F0
  384:  LAD       F2, $ConstDouble_80232B08
  38C:  CVT.D.S   F0, F8
  390:  ADD.D     F0, F0, F2
  394:  LIF       F2, 90.0
  39C:  CVT.S.D   F8, F0
  3A0:  MTC1      V1, F0
  3A4:  NOP
  3A8:  CVT.S.W   F0, F0
  3AC:  LH        V1, 66 (S1)
  3B0:  LI        V0, 4
  3B4:  SWC1      F2, 24 (S1)
  3B8:  SWC1      F8, 50 (S1)
  3BC:  BNE       V1, V0, .o3E4
  3C0:  SWC1      F0, 28 (S1)
  3C4:  LIF       F3, 1.90625
  3CC:  MTC1      R0, F2
  3D0:  CVT.D.S   F0, F8
  3D4:  MUL.D     F0, F0, F2
  3D8:  NOP
  3DC:  CVT.S.D   F0, F0
  3E0:  SWC1      F0, 50 (S1)
        .o3E4
  3E4:  LWC1      F12, 24 (S1)
  3E8:  LIF       F0, 6.28318
  3F4:  LWC1      F20, 44 (S1)
  3F8:  LWC1      F22, 3C (S1)
  3FC:  SW        R0, 18 (S1)
  400:  MUL.S     F12, F12, F0
  404:  NOP
  408:  SW        R0, 1C (S1)
  40C:  CVT.D.S   F20, F20
  410:  LIF       F0, 360.0
  418:  CVT.D.S   F22, F22
  41C:  JAL       ~Func:sin_rad
  420:  DIV.S     F12, F12, F0
  424:  LAD       F2, $ConstDouble_80232B10
  42C:  CVT.D.S   F0, F0
        .o430
  430:  MUL.D     F0, F0, F2
  434:  NOP
  438:  MUL.D     F0, F0, F22
  43C:  NOP
  440:  ADD.D     F0, F0, F22
  444:  ADD.D     F20, F20, F0
  448:  CVT.S.D   F20, F20
  44C:  SWC1      F20, 44 (S1)
  450:  LI        A0, FF81
  454:  LW        A2, 58 (S1)
  458:  JAL       ~Func:set_animation
  45C:  LI        A1, 1
  460:  JAL       ~Func:sfx_play_sound
  464:  LI        A0, 2081
  468:  LI        V0, 1
  46C:  SW        V0, 70 (S4)
        .o470
  470:  LW        V1, 70 (S4)
  474:  LI        V0, 2
  478:  BEQ       V1, V0, .o6D0
  47C:  LI        V0, 1
  480:  SLTI      V0, V1, 3
  484:  BEQ       V0, R0, .o49C
  488:  LI        V0, 1
  48C:  BEQ       V1, V0, .o4B0
  490:  CLEAR     V0
  494:  BEQ       R0, R0, .o860
  498:  NOP
        .o49C
  49C:  LI        V0, 3
  4A0:  BEQ       V1, V0, .o78C
  4A4:  CLEAR     V0
  4A8:  BEQ       R0, R0, .o860
  4AC:  NOP
        .o4B0
  4B0:  LWC1      F2, 44 (S1)
  4B4:  LIF       F0, 1.570795
  4C0:  NOP
  4C4:  C.LT.S    F0, F2
  4C8:  NOP
  4CC:  BC1F      .o4E0
  4D0:  LI        A0, FF81
  4D4:  LW        A2, 5C (S1)
  4D8:  JAL       ~Func:set_animation
  4DC:  LI        A1, 1
        .o4E0
  4E0:  LWC1      F6, 0 (S1)
  4E4:  LWC1      F0, 30 (S1)
  4E8:  LWC1      F4, 4 (S1)
  4EC:  LWC1      F22, 144 (S3)
  4F0:  ADD.S     F6, F6, F0
  4F4:  LWC1      F0, 34 (S1)
  4F8:  LWC1      F2, 38 (S1)
  4FC:  ADD.S     F4, F4, F0
  500:  LWC1      F0, 8 (S1)
  504:  LWC1      F20, 148 (S3)
  508:  ADD.S     F0, F0, F2
  50C:  SWC1      F6, 0 (S1)
  510:  SWC1      F4, 4 (S1)
  514:  SWC1      F0, 8 (S1)
  518:  LWC1      F0, 148 (S3)
  51C:  MOV.S     F2, F6
  520:  SWC1      F0, 18 (S1)
  524:  SWC1      F2, 144 (S3)
  528:  JAL       ~Func:sin_rad
  52C:  LWC1      F12, 44 (S1)
  530:  LWC1      F2, 50 (S1)
  534:  MUL.S     F2, F2, F0
  538:  NOP
  53C:  LWC1      F0, 4 (S1)
  540:  ADD.S     F0, F0, F2
  544:  SWC1      F0, 148 (S3)
  548:  LWC1      F0, 8 (S1)
  54C:  SWC1      F0, 14C (S3)
  550:  LWC1      F2, 10 (S1)
  554:  LWC1      F0, 148 (S3)
  558:  C.LT.S    F0, F2
  55C:  NOP
  560:  BC1F      .o580
  564:  MOV.S     F12, F22
  568:  LH        V0, 64 (S1)
  56C:  SLTI      V0, V0, 3
  570:  BNEL      V0, R0, .o57C
  574:  SWC1      F2, 148 (S3)
  578:  MOV.S     F12, F22
        .o57C
  57C:  LWC1      F0, 148 (S3)
        .o580
  580:  LW        A2, 144 (S3)
  584:  NEG.S     F0, F0
  588:  MFC1      A3, F0
  58C:  JAL       ~Func:atan2
  590:  NEG.S     F14, F20
  594:  NEG.S     F0, F0
  598:  SWC1      F0, 164 (S3)
  59C:  LH        V0, 66 (S1)
  5A0:  LWC1      F0, 148 (S3)
  5A4:  SLTI      V0, V0, 3
  5A8:  BEQ       V0, R0, .o5F8
  5AC:  SWC1      F0, 1C (S1)
  5B0:  LWC1      F12, 24 (S1)
  5B4:  LIF       F0, 6.28318
  5C0:  LWC1      F20, 44 (S1)
  5C4:  MUL.S     F12, F12, F0
  5C8:  NOP
  5CC:  LWC1      F22, 3C (S1)
  5D0:  CVT.D.S   F20, F20
  5D4:  LIF       F0, 360.0
  5DC:  CVT.D.S   F22, F22
  5E0:  JAL       ~Func:sin_rad
  5E4:  DIV.S     F12, F12, F0
  5E8:  LAD       F2, $ConstDouble_80232B18
  5F0:  BEQ       R0, R0, .o63C
  5F4:  CVT.D.S   F0, F0
        .o5F8
  5F8:  LWC1      F12, 24 (S1)
  5FC:  LIF       F0, 6.28318
  608:  LWC1      F20, 44 (S1)
  60C:  MUL.S     F12, F12, F0
  610:  NOP
  614:  LWC1      F22, 3C (S1)
  618:  CVT.D.S   F20, F20
  61C:  LIF       F0, 360.0
  624:  CVT.D.S   F22, F22
  628:  JAL       ~Func:sin_rad
  62C:  DIV.S     F12, F12, F0
  630:  LAD       F2, $ConstDouble_80232B20
  638:  CVT.D.S   F0, F0
        .o63C
  63C:  MUL.D     F0, F0, F2
  640:  NOP
  644:  MUL.D     F0, F0, F22
  648:  NOP
  64C:  ADD.D     F0, F0, F22
  650:  ADD.D     F20, F20, F0
  654:  CVT.S.D   F20, F20
  658:  SWC1      F20, 44 (S1)
  65C:  LWC1      F12, 24 (S1)
  660:  LWC1      F0, 28 (S1)
  664:  ADD.S     F12, F12, F0
  668:  JAL       ~Func:clamp_angle
  66C:  SWC1      F12, 24 (S1)
  670:  LHU       V0, 64 (S1)
  674:  SWC1      F0, 24 (S1)
  678:  ADDIU     V0, V0, FFFF
  67C:  SH        V0, 64 (S1)
  680:  SLL       V0, V0, 10
  684:  BNE       V0, R0, .o860
  688:  CLEAR     V0
  68C:  LWC1      F0, 10 (S1)
  690:  LI        A0, FF81
  694:  SWC1      F0, 148 (S3)
  698:  LWC1      F0, 18 (S1)
  69C:  LWC1      F2, 1C (S1)
  6A0:  LW        A2, 60 (S1)
  6A4:  SUB.S     F0, F0, F2
  6A8:  LIF       F2, 1.8
  6B4:  LI        A1, 1
  6B8:  SWC1      F2, 3C (S1)
  6BC:  NEG.S     F0, F0
  6C0:  JAL       ~Func:set_animation
  6C4:  SWC1      F0, 44 (S1)
  6C8:  BEQ       R0, R0, .o860
  6CC:  LI        V0, 1
        .o6D0
  6D0:  SH        V0, 64 (S1)
  6D4:  LH        V0, 64 (S1)
  6D8:  LI        V1, 168
  6DC:  BNE       V0, R0, .o6E8
  6E0:  DIV       V1, V0
  6E4:  BREAK     1C00
        .o6E8
  6E8:  LI        AT, FFFF
  6EC:  BNE       V0, AT, .o700
  6F0:  LUI       AT, 8000
  6F4:  BNE       V1, AT, .o700
  6F8:  NOP
  6FC:  BREAK     1800
        .o700
  700:  MFLO      V1
  704:  LWC1      F2, 18 (S1)
  708:  LWC1      F0, 1C (S1)
  70C:  LIF       F8, 1.8
  718:  LWC1      F4, 1C (S1)
  71C:  SUB.S     F2, F2, F0
  720:  LWC1      F0, 18 (S1)
  724:  LIF       F6, 90.0
  72C:  SUB.S     F0, F0, F4
  730:  SWC1      F8, 3C (S1)
  734:  SWC1      F6, 24 (S1)
  738:  NEG.S     F2, F2
  73C:  SWC1      F2, 44 (S1)
  740:  LAD       F2, $ConstDouble_80232B28
  748:  ABS.S     F0, F0
  74C:  CVT.D.S   F0, F0
  750:  DIV.D     F0, F0, F2
  754:  CVT.S.D   F0, F0
  758:  SWC1      F0, 50 (S1)
  75C:  MTC1      V1, F0
  760:  NOP
  764:  CVT.S.W   F0, F0
  768:  SWC1      F0, 28 (S1)
  76C:  LWC1      F0, 144 (S3)
  770:  SWC1      F0, 0 (S1)
  774:  LWC1      F0, 148 (S3)
  778:  SWC1      F0, 4 (S1)
  77C:  LWC1      F0, 14C (S3)
  780:  LI        V0, 3
  784:  SWC1      F0, 8 (S1)
  788:  SW        V0, 70 (S4)
        .o78C
  78C:  LWC1      F12, 24 (S1)
  790:  LIF       F22, 6.28318
  79C:  NOP
  7A0:  MUL.S     F12, F12, F22
  7A4:  NOP
  7A8:  LWC1      F20, 0 (S1)
  7AC:  LIF       F24, 360.0
  7B4:  CVT.D.S   F20, F20
  7B8:  JAL       ~Func:sin_rad
  7BC:  DIV.S     F12, F12, F24
  7C0:  LWC1      F2, 50 (S1)
  7C4:  MUL.S     F2, F2, F0
  7C8:  NOP
  7CC:  LWC1      F12, 24 (S1)
  7D0:  MUL.S     F12, F12, F22
  7D4:  NOP
  7D8:  LAD       F0, $ConstDouble_80232B30
  7E0:  CVT.D.S   F2, F2
  7E4:  DIV.D     F2, F2, F0
  7E8:  ADD.D     F20, F20, F2
  7EC:  DIV.S     F12, F12, F24
  7F0:  CVT.S.D   F20, F20
  7F4:  JAL       ~Func:sin_rad
  7F8:  SWC1      F20, 0 (S1)
  7FC:  LWC1      F2, 50 (S1)
  800:  MUL.S     F2, F2, F0
  804:  NOP
  808:  LWC1      F12, 24 (S1)
  80C:  LWC1      F0, 28 (S1)
  810:  ADD.S     F12, F12, F0
  814:  LWC1      F0, 4 (S1)
  818:  SUB.S     F0, F0, F2
  81C:  SWC1      F12, 24 (S1)
  820:  JAL       ~Func:clamp_angle
  824:  SWC1      F0, 4 (S1)
  828:  LWC1      F2, 0 (S1)
  82C:  SWC1      F0, 24 (S1)
  830:  SWC1      F2, 144 (S3)
  834:  LWC1      F0, 4 (S1)
  838:  SWC1      F0, 148 (S3)
  83C:  LWC1      F0, 8 (S1)
  840:  SWC1      F0, 14C (S3)
  844:  LHU       V1, 64 (S1)
  848:  ADDIU     V1, V1, FFFF
  84C:  SH        V1, 64 (S1)
  850:  SLL       V1, V1, 10
  854:  BEQ       V1, R0, .o860
  858:  LI        V0, 1
  85C:  CLEAR     V0
        .o860
  860:  LW        RA, 24 (SP)
  864:  LW        S4, 20 (SP)
  868:  LW        S3, 1C (SP)
  86C:  LW        S2, 18 (SP)
  870:  LW        S1, 14 (SP)
  874:  LW        S0, 10 (SP)
  878:  LDC1      F26, 40 (SP)
  87C:  LDC1      F24, 38 (SP)
  880:  LDC1      F22, 30 (SP)
  884:  LDC1      F20, 28 (SP)
  888:  JR        RA
  88C:  ADDIU     SP, SP, 48
}

#new:Function $Function_80218B90
{
    0:  ADDIU     SP, SP, FFC8
    4:  SW        S2, 20 (SP)
    8:  COPY      S2, A0
    C:  SW        RA, 28 (SP)
   10:  SW        S3, 24 (SP)
   14:  SW        S1, 1C (SP)
   18:  SW        S0, 18 (SP)
   1C:  SDC1      F20, 30 (SP)
   20:  LW        A0, 148 (S2)
   24:  JAL       ~Func:get_actor
   28:  COPY      S0, A1
   2C:  COPY      S1, V0
   30:  BEQ       S0, R0, .o3C
   34:  ADDIU     S3, S1, C
   38:  SW        R0, 70 (S2)
        .o3C
   3C:  LW        V0, 70 (S2)
   40:  BNE       V0, R0, .o64
   44:  LI        V0, 1
   48:  LWC1      F0, 144 (S1)
   4C:  LWC1      F2, 148 (S1)
   50:  LWC1      F4, 14C (S1)
   54:  SWC1      F0, C (S1)
   58:  SWC1      F2, 10 (S1)
   5C:  SWC1      F4, 14 (S1)
   60:  SW        V0, 70 (S2)
        .o64
   64:  LWC1      F0, 50 (S1)
   68:  MTC1      R0, F20
   6C:  NOP
   70:  C.LT.S    F20, F0
   74:  NOP
   78:  BC1F      .o90
   7C:  LI        A0, FF81
   80:  LW        A2, 64 (S1)
   84:  JAL       ~Func:set_animation
   88:  LI        A1, 1
   8C:  LWC1      F0, 50 (S1)
        .o90
   90:  C.LT.S    F0, F20
   94:  NOP
   98:  BC1F      .oAC
   9C:  LI        A0, FF81
   A0:  LW        A2, 68 (S1)
   A4:  JAL       ~Func:set_animation
   A8:  LI        A1, 1
        .oAC
   AC:  LWC1      F4, 10 (S1)
   B0:  LWC1      F0, 50 (S1)
   B4:  LW        A1, 4C (S1)
   B8:  ADD.S     F4, F4, F0
   BC:  LWC1      F2, 48 (S1)
   C0:  LW        A2, 54 (S1)
   C4:  SUB.S     F0, F0, F2
   C8:  COPY      A0, S3
   CC:  SWC1      F4, 10 (S1)
   D0:  JAL       ~Func:add_xz_vec3f
   D4:  SWC1      F0, 50 (S1)
   D8:  LWC1      F0, 10 (S1)
   DC:  LWC1      F2, 14 (S1)
   E0:  SWC1      F0, 148 (S1)
   E4:  LWC1      F0, C (S1)
   E8:  LWC1      F4, 148 (S1)
   EC:  SWC1      F2, 14C (S1)
   F0:  C.LT.S    F4, F20
   F4:  NOP
   F8:  BC1T      .o108
   FC:  SWC1      F0, 144 (S1)
  100:  BEQ       R0, R0, .o134
  104:  CLEAR     V0
        .o108
  108:  LWC1      F0, 18C (S1)
  10C:  SWC1      F20, 148 (S1)
  110:  SWC1      F0, 10 (SP)
  114:  LW        A1, 144 (S1)
  118:  LW        A2, 148 (S1)
  11C:  LW        A3, 14C (S1)
  120:  JAL       ~Func:play_movement_dust_effects
  124:  LI        A0, 2
  128:  JAL       ~Func:sfx_play_sound
  12C:  LI        A0, 148
  130:  LI        V0, 1
        .o134
  134:  LW        RA, 28 (SP)
  138:  LW        S3, 24 (SP)
  13C:  LW        S2, 20 (SP)
  140:  LW        S1, 1C (SP)
  144:  LW        S0, 18 (SP)
  148:  LDC1      F20, 30 (SP)
  14C:  JR        RA
  150:  ADDIU     SP, SP, 38
}

#new:Function $Function_80218CE4
{
    0:  ADDIU     SP, SP, FFE8
    4:  SW        S0, 10 (SP)
    8:  COPY      S0, A0
    C:  SW        RA, 14 (SP)
   10:  JAL       ~Func:get_actor
   14:  LW        A0, 148 (S0)
   18:  JAL       ~Func:get_actor
   1C:  LH        A0, 428 (V0)
   20:  COPY      A0, V0
   24:  LW        V0, 0 (A0)
   28:  ANDI      V0, V0, 800
   2C:  BNE       V0, R0, .o58
   30:  NOP
   34:  LBU       V0, 191 (A0)
   38:  LW        V1, 88 (S0)
   3C:  SRL       V0, V0, 1
   40:  ADDU      V1, V1, V0
   44:  SW        V1, 88 (S0)
   48:  LBU       V0, 191 (A0)
   4C:  SRL       V0, V0, 2
   50:  BEQ       R0, R0, .o78
   54:  ADDU      V1, V1, V0
        .o58
   58:  LBU       V0, 191 (A0)
   5C:  LW        V1, 88 (S0)
   60:  SRL       V0, V0, 1
   64:  SUBU      V1, V1, V0
   68:  SW        V1, 88 (S0)
   6C:  LBU       V0, 191 (A0)
   70:  SRL       V0, V0, 2
   74:  SUBU      V1, V1, V0
        .o78
   78:  SW        V1, 88 (S0)
   7C:  LBU       V1, 191 (A0)
   80:  LBU       A0, 190 (A0)
   84:  SLT       V0, V1, A0
   88:  BNEL      V0, R0, .o90
   8C:  COPY      V1, A0
        .o90
   90:  ADDIU     V0, V1, 7E
   94:  SW        V0, 90 (S0)
   98:  LW        RA, 14 (SP)
   9C:  LW        S0, 10 (SP)
   A0:  LI        V0, 2
   A4:  JR        RA
   A8:  ADDIU     SP, SP, 18
}

#new:Function $Function_80218D90
{
    0:  ADDIU     SP, SP, FFD8
    4:  SW        S0, 18 (SP)
    8:  COPY      S0, A0
    C:  LUI       A1, 42D4
   10:  LUI       A2, 4310
   14:  CLEAR     A0
   18:  SW        RA, 20 (SP)
   1C:  SW        S1, 1C (SP)
   20:  LW        S1, C (S0)
   24:  LIF       F0, 1.0
   2C:  CLEAR     A3
   30:  SW        R0, 14 (SP)
   34:  JAL       ~Func:playFX_6C
   38:  SWC1      F0, 10 (SP)
   3C:  COPY      A0, S0
   40:  LW        A1, 0 (S1)
   44:  JAL       ~Func:set_variable
   48:  COPY      A2, V0
   4C:  LW        RA, 20 (SP)
   50:  LW        S1, 1C (SP)
   54:  LW        S0, 18 (SP)
   58:  LI        V0, 2
   5C:  JR        RA
   60:  ADDIU     SP, SP, 28
}

% Origin: HEURISTIC
#new:Function $Function_80218DF4
{
    0:  ADDIU     SP, SP, FFE8
    4:  SW        RA, 10 (SP)
    8:  LW        V0, C (A0)
    C:  JAL       ~Func:get_variable
   10:  LW        A1, 0 (V0)
   14:  LW        V1, C (V0)
   18:  LIF       F0, -1000.0
   20:  NOP
   24:  SWC1      F0, 8 (V1)
   28:  LW        RA, 10 (SP)
   2C:  LI        V0, 2
   30:  JR        RA
   34:  ADDIU     SP, SP, 18
}

#new:Function $Function_80218E2C
{
    0:  ADDIU     SP, SP, FFE8
    4:  SW        RA, 10 (SP)
    8:  LW        V0, C (A0)
    C:  JAL       ~Func:get_variable
   10:  LW        A1, 0 (V0)
   14:  COPY      A0, V0
   18:  LW        V0, C (A0)
   1C:  LIF       F0, 144.0
   24:  NOP
   28:  SWC1      F0, 8 (V0)
   2C:  LW        V1, 0 (A0)
   30:  ORI       V1, V1, 10
   34:  SW        V1, 0 (A0)
   38:  LW        RA, 10 (SP)
   3C:  LI        V0, 2
   40:  JR        RA
   44:  ADDIU     SP, SP, 18
}

#new:Function $Function_80218E74
{
    0:  ADDIU     SP, SP, FFD8
    4:  SW        S1, 14 (SP)
    8:  COPY      S1, A0
    C:  SW        RA, 20 (SP)
   10:  SW        S3, 1C (SP)
   14:  SW        S2, 18 (SP)
   18:  SW        S0, 10 (SP)
   1C:  LW        S0, C (S1)
   20:  LW        A1, 0 (S0)
   24:  JAL       ~Func:get_variable
   28:  ADDIU     S0, S0, 4
   2C:  LW        A1, 0 (S0)
   30:  ADDIU     S0, S0, 4
   34:  COPY      A0, S1
   38:  JAL       ~Func:get_variable
   3C:  COPY      S3, V0
   40:  LW        A1, 0 (S0)
   44:  ADDIU     S0, S0, 4
   48:  COPY      A0, S1
   4C:  JAL       ~Func:get_variable
   50:  COPY      S2, V0
   54:  COPY      A0, S1
   58:  LW        A1, 0 (S0)
   5C:  JAL       ~Func:get_variable
   60:  COPY      S0, V0
   64:  LW        A0, 148 (S1)
   68:  JAL       ~Func:get_actor
   6C:  COPY      S1, V0
   70:  COPY      V1, V0
   74:  LW        V0, 8 (V1)
   78:  LBU       V0, 24 (V0)
   7C:  LW        A0, 8 (V1)
   80:  SUBU      S3, S3, V0
   84:  SB        S3, 194 (V1)
   88:  LBU       V0, 25 (A0)
   8C:  SUBU      S2, S2, V0
   90:  SB        S2, 195 (V1)
   94:  LBU       V0, 26 (A0)
   98:  SUBU      S0, S0, V0
   9C:  SB        S0, 196 (V1)
   A0:  LBU       A0, 27 (A0)
   A4:  SUBU      S1, S1, A0
   A8:  SB        S1, 197 (V1)
   AC:  LW        RA, 20 (SP)
   B0:  LW        S3, 1C (SP)
   B4:  LW        S2, 18 (SP)
   B8:  LW        S1, 14 (SP)
   BC:  LW        S0, 10 (SP)
   C0:  LI        V0, 2
   C4:  JR        RA
   C8:  ADDIU     SP, SP, 28
}

#new:Function $Function_80218F40
{
    0:  ADDIU     SP, SP, FFD8
    4:  SW        RA, 24 (SP)
    8:  SW        S2, 20 (SP)
    C:  SW        S1, 1C (SP)
   10:  SW        S0, 18 (SP)
   14:  LW        A0, 148 (A0)
   18:  JAL       ~Func:get_actor
   1C:  COPY      S0, A1
   20:  COPY      S1, V0
   24:  BEQ       S0, R0, .o44
   28:  ADDIU     S2, S1, C
   2C:  LWC1      F0, 144 (S1)
   30:  LWC1      F2, 148 (S1)
   34:  LWC1      F4, 14C (S1)
   38:  SWC1      F0, C (S1)
   3C:  SWC1      F2, 10 (S1)
   40:  SWC1      F4, 14 (S1)
        .o44
   44:  LW        A1, 4C (S1)
   48:  LW        A2, 54 (S1)
   4C:  JAL       ~Func:add_xz_vec3f
   50:  COPY      A0, S2
   54:  LWC1      F2, 4C (S1)
   58:  LIF       F0, 4.0
   60:  NOP
   64:  C.LT.S    F2, F0
   68:  NOP
   6C:  BC1F      .o8C
   70:  CLEAR     A0
   74:  LWC1      F0, 54 (S1)
   78:  SWC1      F0, 10 (SP)
   7C:  LW        A1, C (S1)
   80:  LW        A2, 10 (S1)
   84:  BEQ       R0, R0, .oA4
   88:  LW        A3, 14 (S1)
        .o8C
   8C:  LWC1      F0, 54 (S1)
   90:  SWC1      F0, 10 (SP)
   94:  LW        A1, C (S1)
   98:  LW        A2, 10 (S1)
   9C:  LW        A3, 14 (S1)
   A0:  LI        A0, 1
        .oA4
   A4:  JAL       ~Func:play_movement_dust_effects
   A8:  NOP
   AC:  LWC1      F0, 40 (S2)
   B0:  LIF       F3, 1.9375
   B8:  MTC1      R0, F2
   BC:  CVT.D.S   F0, F0
   C0:  DIV.D     F0, F0, F2
   C4:  LWC1      F2, 0 (S2)
   C8:  CVT.S.D   F0, F0
   CC:  SWC1      F0, 40 (S2)
   D0:  SWC1      F2, 144 (S1)
   D4:  LWC1      F0, 4 (S2)
   D8:  SWC1      F0, 148 (S1)
   DC:  LWC1      F0, 8 (S2)
   E0:  SWC1      F0, 14C (S1)
   E4:  LWC1      F0, 40 (S2)
   E8:  LIF       F3, 1.875
   F0:  MTC1      R0, F2
   F4:  CVT.D.S   F0, F0
   F8:  C.LT.D    F0, F2
   FC:  NOP
  100:  BC1T      .o10C
  104:  LI        V0, 2
  108:  CLEAR     V0
        .o10C
  10C:  LW        RA, 24 (SP)
  110:  LW        S2, 20 (SP)
  114:  LW        S1, 1C (SP)
  118:  LW        S0, 18 (SP)
  11C:  JR        RA
  120:  ADDIU     SP, SP, 28
}

#new:Function $Function_80219064
{
    0:  ADDIU     SP, SP, FFD8
    4:  SW        RA, 24 (SP)
    8:  SW        S2, 20 (SP)
    C:  SW        S1, 1C (SP)
   10:  SW        S0, 18 (SP)
   14:  LW        A0, 148 (A0)
   18:  JAL       ~Func:get_actor
   1C:  COPY      S0, A1
   20:  COPY      S1, V0
   24:  BEQ       S0, R0, .o44
   28:  ADDIU     S2, S1, C
   2C:  LWC1      F0, 144 (S1)
   30:  LWC1      F2, 148 (S1)
   34:  LWC1      F4, 14C (S1)
   38:  SWC1      F0, C (S1)
   3C:  SWC1      F2, 10 (S1)
   40:  SWC1      F4, 14 (S1)
        .o44
   44:  LW        A1, 4C (S1)
   48:  LW        A2, 54 (S1)
   4C:  JAL       ~Func:add_xz_vec3f
   50:  COPY      A0, S2
   54:  LWC1      F2, 4C (S1)
   58:  LIF       F0, 4.0
   60:  NOP
   64:  C.LT.S    F2, F0
   68:  NOP
   6C:  BC1F      .o8C
   70:  CLEAR     A0
   74:  LWC1      F0, 54 (S1)
   78:  SWC1      F0, 10 (SP)
   7C:  LW        A1, C (S1)
   80:  LW        A2, 10 (S1)
   84:  BEQ       R0, R0, .oA4
   88:  LW        A3, 14 (S1)
        .o8C
   8C:  LWC1      F0, 54 (S1)
   90:  SWC1      F0, 10 (SP)
   94:  LW        A1, C (S1)
   98:  LW        A2, 10 (S1)
   9C:  LW        A3, 14 (S1)
   A0:  LI        A0, 1
        .oA4
   A4:  JAL       ~Func:play_movement_dust_effects
   A8:  NOP
   AC:  LWC1      F0, 40 (S2)
   B0:  LIF       F3, 1.9375
   B8:  MTC1      R0, F2
   BC:  CVT.D.S   F0, F0
   C0:  DIV.D     F0, F0, F2
   C4:  LWC1      F2, 0 (S2)
   C8:  CVT.S.D   F0, F0
   CC:  SWC1      F0, 40 (S2)
   D0:  SWC1      F2, 144 (S1)
   D4:  LWC1      F0, 4 (S2)
   D8:  SWC1      F0, 148 (S1)
   DC:  LWC1      F0, 8 (S2)
   E0:  SWC1      F0, 14C (S1)
   E4:  LWC1      F0, 40 (S2)
   E8:  LIF       F3, 1.875
   F0:  MTC1      R0, F2
   F4:  CVT.D.S   F0, F0
   F8:  C.LT.D    F0, F2
   FC:  NOP
  100:  BC1T      .o10C
  104:  LI        V0, 2
  108:  CLEAR     V0
        .o10C
  10C:  LW        RA, 24 (SP)
  110:  LW        S2, 20 (SP)
  114:  LW        S1, 1C (SP)
  118:  LW        S0, 18 (SP)
  11C:  JR        RA
  120:  ADDIU     SP, SP, 28
}

#new:Function $Function_80219188
{
    0:  ADDIU     SP, SP, FFB8
    4:  SW        RA, 2C (SP)
    8:  SW        S2, 28 (SP)
    C:  SW        S1, 24 (SP)
   10:  SW        S0, 20 (SP)
   14:  SDC1      F24, 40 (SP)
   18:  SDC1      F22, 38 (SP)
   1C:  SDC1      F20, 30 (SP)
   20:  LW        A0, 148 (A0)
   24:  JAL       ~Func:get_actor
   28:  COPY      S0, A1
   2C:  COPY      S1, V0
   30:  BEQ       S0, R0, .o128
   34:  ADDIU     S2, S1, C
   38:  JAL       ~Func:heap_malloc
   3C:  LI        A0, 20
   40:  COPY      S0, V0
   44:  LI        V0, 1
   48:  ADDIU     A1, S1, 144
   4C:  ADDIU     A2, S1, 148
   50:  SW        S0, 94 (S1)
   54:  SW        V0, 4 (S0)
   58:  SW        R0, 8 (S0)
   5C:  SW        V0, C (S0)
   60:  SW        R0, 10 (S0)
   64:  LB        V1, 210 (S1)
   68:  LI        V0, A
   6C:  BEQ       V1, V0, .o84
   70:  ADDIU     A3, S1, 14C
   74:  LIF       F0, 1.0
   7C:  BEQ       R0, R0, .o98
   80:  SWC1      F0, 10 (SP)
        .o84
   84:  LIF       F0, 0.39804688
   90:  NOP
   94:  SWC1      F0, 10 (SP)
        .o98
   98:  LI        V0, 5
   9C:  SW        V0, 14 (SP)
   A0:  SW        R0, 18 (SP)
   A4:  LW        A1, 0 (A1)
   A8:  LW        A2, 0 (A2)
   AC:  LW        A3, 0 (A3)
   B0:  JAL       ~Func:playFX_73
   B4:  CLEAR     A0
   B8:  ADDIU     A1, S1, 144
   BC:  SW        V0, 14 (S0)
   C0:  LB        V0, 210 (S1)
   C4:  LI        V1, A
   C8:  BEQ       V0, V1, .oE0
   CC:  ADDIU     A3, S1, 14C
   D0:  LIF       F0, 1.0
   D8:  BEQ       R0, R0, .oF4
   DC:  SWC1      F0, 10 (SP)
        .oE0
   E0:  LIF       F0, 0.39804688
   EC:  NOP
   F0:  SWC1      F0, 10 (SP)
        .oF4
   F4:  LI        V0, 5
   F8:  SW        V0, 14 (SP)
   FC:  SW        R0, 18 (SP)
  100:  LW        A1, 0 (A1)
  104:  LUI       A2, C47A
  108:  LW        A3, 0 (A3)
  10C:  JAL       ~Func:playFX_73
  110:  LI        A0, 1
  114:  SW        V0, 18 (S0)
  118:  LI        V0, 1
  11C:  SW        V0, 0 (S0)
  120:  LB        V0, 210 (S1)
  124:  SW        V0, 1C (S0)
        .o128
  128:  LW        S0, 88 (S2)
  12C:  LW        V0, 0 (S0)
  130:  BEQ       V0, R0, .o458
  134:  LI        V0, 2
  138:  LW        V0, 4 (S0)
  13C:  BEQ       V0, R0, .o174
  140:  LI        V0, 8
  144:  LB        V1, 210 (S1)
  148:  BEQ       V1, V0, .o174
  14C:  NOP
  150:  LW        V0, 8 (S0)
  154:  ADDIU     V0, V0, F
  158:  MTC1      V0, F12
  15C:  NOP
  160:  CVT.S.W   F12, F12
  164:  JAL       ~Func:clamp_angle
  168:  SW        V0, 8 (S0)
  16C:  TRUNC.W.S F6, F0
  170:  SWC1      F6, 8 (S0)
        .o174
  174:  LIF       F0, 6.28318
  180:  LWC1      F12, 8 (S0)
  184:  CVT.S.W   F12, F12
  188:  MUL.S     F12, F12, F0
  18C:  NOP
  190:  LIF       F0, 360.0
  198:  JAL       ~Func:sin_rad
  19C:  DIV.S     F12, F12, F0
  1A0:  LIF       F2, 3.0
  1A8:  NOP
  1AC:  MUL.S     F0, F0, F2
  1B0:  NOP
  1B4:  LH        V0, 152 (S1)
  1B8:  MTC1      V0, F2
  1BC:  NOP
  1C0:  CVT.S.W   F2, F2
  1C4:  TRUNC.W.S F6, F0
  1C8:  MFC1      V1, F6
  1CC:  NOP
  1D0:  SLL       V0, V1, 18
  1D4:  LWC1      F0, 148 (S1)
  1D8:  SRA       V0, V0, 18
  1DC:  SB        V1, 19A (S1)
  1E0:  ADD.S     F0, F0, F2
  1E4:  MTC1      V0, F2
  1E8:  NOP
  1EC:  CVT.S.W   F2, F2
  1F0:  LH        V0, 150 (S1)
  1F4:  ADD.S     F0, F0, F2
  1F8:  LI        V1, A
  1FC:  MTC1      V0, F2
  200:  NOP
  204:  CVT.S.W   F2, F2
  208:  CVT.D.S   F4, F0
  20C:  LWC1      F0, 144 (S1)
  210:  LB        V0, 210 (S1)
  214:  ADD.S     F22, F0, F2
  218:  LAD       F0, $ConstDouble_80232B38
  220:  BEQL      V0, V1, .o23C
  224:  ADD.D     F0, F4, F0
  228:  LIF       F1, 2.625
  230:  MTC1      R0, F0
  234:  NOP
  238:  ADD.D     F0, F4, F0
        .o23C
  23C:  CVT.S.D   F20, F0
  240:  LH        V0, 154 (S1)
  244:  LWC1      F0, 14C (S1)
  248:  MTC1      V0, F2
  24C:  NOP
  250:  CVT.S.W   F2, F2
  254:  LW        V0, C (S0)
  258:  BEQ       V0, R0, .o3C0
  25C:  ADD.S     F24, F0, F2
  260:  LW        V1, 10 (S0)
  264:  BEQ       V1, R0, .o27C
  268:  LI        V0, 1
  26C:  BEQ       V1, V0, .o318
  270:  NOP
  274:  BEQ       R0, R0, .o3F8
  278:  NOP
        .o27C
  27C:  LW        V0, 14 (S0)
  280:  BNE       V0, R0, .o2DC
  284:  LI        V0, A
  288:  LB        V1, 210 (S1)
  28C:  BEQ       V1, V0, .o2A4
  290:  NOP
  294:  LIF       F0, 1.0
  29C:  BEQ       R0, R0, .o2B8
  2A0:  SWC1      F0, 10 (SP)
        .o2A4
  2A4:  LIF       F0, 0.39804688
  2B0:  NOP
  2B4:  SWC1      F0, 10 (SP)
        .o2B8
  2B8:  CLEAR     A0
  2BC:  MFC1      A1, F22
  2C0:  MFC1      A2, F20
  2C4:  MFC1      A3, F24
  2C8:  LI        V0, 5
  2CC:  SW        V0, 14 (SP)
  2D0:  JAL       ~Func:playFX_73
  2D4:  SW        R0, 18 (SP)
  2D8:  SW        V0, 14 (S0)
        .o2DC
  2DC:  LW        V1, 18 (S0)
  2E0:  BEQ       V1, R0, .o2F8
  2E4:  NOP
  2E8:  LW        V0, 0 (V1)
  2EC:  ORI       V0, V0, 10
  2F0:  SW        V0, 0 (V1)
  2F4:  SW        R0, 18 (S0)
        .o2F8
  2F8:  LW        V0, 14 (S0)
  2FC:  LW        V0, C (V0)
  300:  SWC1      F22, 4 (V0)
  304:  LW        V0, 14 (S0)
  308:  LW        V0, C (V0)
  30C:  SWC1      F20, 8 (V0)
  310:  BEQ       R0, R0, .o3B4
  314:  LW        V0, 14 (S0)
        .o318
  318:  LW        V1, 14 (S0)
  31C:  BEQ       V1, R0, .o334
  320:  NOP
  324:  LW        V0, 0 (V1)
  328:  ORI       V0, V0, 10
  32C:  SW        V0, 0 (V1)
  330:  SW        R0, 14 (S0)
        .o334
  334:  LW        V0, 18 (S0)
  338:  BNE       V0, R0, .o39C
  33C:  NOP
  340:  LB        V1, 210 (S1)
  344:  LI        V0, A
  348:  BEQ       V1, V0, .o360
  34C:  NOP
  350:  LIF       F0, 1.0
  358:  BEQ       R0, R0, .o374
  35C:  SWC1      F0, 10 (SP)
        .o360
  360:  LIF       F0, 0.39804688
  36C:  NOP
  370:  SWC1      F0, 10 (SP)
        .o374
  374:  LI        A0, 1
  378:  MFC1      A1, F22
  37C:  MFC1      A2, F20
  380:  MFC1      A3, F24
  384:  LI        V0, 5
  388:  SW        V0, 14 (SP)
  38C:  JAL       ~Func:playFX_73
  390:  SW        R0, 18 (SP)
  394:  SW        V0, 18 (S0)
  398:  LW        V0, 18 (S0)
        .o39C
  39C:  LW        V0, C (V0)
  3A0:  SWC1      F22, 4 (V0)
  3A4:  LW        V0, 18 (S0)
  3A8:  LW        V0, C (V0)
  3AC:  SWC1      F20, 8 (V0)
  3B0:  LW        V0, 18 (S0)
        .o3B4
  3B4:  LW        V0, C (V0)
  3B8:  BEQ       R0, R0, .o3F8
  3BC:  SWC1      F24, C (V0)
        .o3C0
  3C0:  LW        V1, 14 (S0)
  3C4:  BEQ       V1, R0, .o3DC
  3C8:  NOP
  3CC:  LW        V0, 0 (V1)
  3D0:  ORI       V0, V0, 10
  3D4:  SW        V0, 0 (V1)
  3D8:  SW        R0, 14 (S0)
        .o3DC
  3DC:  LW        V1, 18 (S0)
  3E0:  BEQ       V1, R0, .o3F8
  3E4:  NOP
  3E8:  LW        V0, 0 (V1)
  3EC:  ORI       V0, V0, 10
  3F0:  SW        V0, 0 (V1)
  3F4:  SW        R0, 18 (S0)
        .o3F8
  3F8:  LB        V1, 210 (S1)
  3FC:  LW        V0, 1C (S0)
  400:  BEQ       V0, V1, .o454
  404:  CLEAR     V0
  408:  LW        V0, C (S0)
  40C:  BEQ       V0, R0, .o454
  410:  CLEAR     V0
  414:  LW        V1, 14 (S0)
  418:  BEQ       V1, R0, .o430
  41C:  NOP
  420:  LW        V0, 0 (V1)
  424:  ORI       V0, V0, 10
  428:  SW        V0, 0 (V1)
  42C:  SW        R0, 14 (S0)
        .o430
  430:  LW        V1, 18 (S0)
  434:  BEQ       V1, R0, .o44C
  438:  NOP
  43C:  LW        V0, 0 (V1)
  440:  ORI       V0, V0, 10
  444:  SW        V0, 0 (V1)
  448:  SW        R0, 18 (S0)
        .o44C
  44C:  LB        V1, 210 (S1)
  450:  CLEAR     V0
        .o454
  454:  SW        V1, 1C (S0)
        .o458
  458:  LW        RA, 2C (SP)
  45C:  LW        S2, 28 (SP)
  460:  LW        S1, 24 (SP)
  464:  LW        S0, 20 (SP)
  468:  LDC1      F24, 40 (SP)
  46C:  LDC1      F22, 38 (SP)
  470:  LDC1      F20, 30 (SP)
  474:  JR        RA
  478:  ADDIU     SP, SP, 48
}

#new:Function $Function_80219604
{
    0:  ADDIU     SP, SP, FFE8
    4:  SW        RA, 10 (SP)
    8:  JAL       ~Func:get_actor
    C:  LW        A0, 148 (A0)
   10:  LW        A0, 94 (V0)
   14:  LW        V1, 14 (A0)
   18:  BEQ       V1, R0, .o2C
   1C:  SW        R0, 0 (A0)
   20:  LW        V0, 0 (V1)
   24:  ORI       V0, V0, 10
   28:  SW        V0, 0 (V1)
        .o2C
   2C:  LW        V1, 18 (A0)
   30:  BEQ       V1, R0, .o44
   34:  NOP
   38:  LW        V0, 0 (V1)
   3C:  ORI       V0, V0, 10
   40:  SW        V0, 0 (V1)
        .o44
   44:  LW        RA, 10 (SP)
   48:  LI        V0, 2
   4C:  JR        RA
   50:  ADDIU     SP, SP, 18
}

#new:Function $Function_80219658
{
    0:  ADDIU     SP, SP, FFE0
    4:  SW        S0, 10 (SP)
    8:  COPY      S0, A0
    C:  SW        RA, 18 (SP)
   10:  SW        S1, 14 (SP)
   14:  LW        A0, 148 (S0)
   18:  JAL       ~Func:get_actor
   1C:  LW        S1, C (S0)
   20:  COPY      A0, S0
   24:  LW        A1, 0 (S1)
   28:  JAL       ~Func:get_variable
   2C:  LW        S0, 94 (V0)
   30:  SW        V0, 4 (S0)
   34:  LW        RA, 18 (SP)
   38:  LW        S1, 14 (SP)
   3C:  LW        S0, 10 (SP)
   40:  LI        V0, 2
   44:  JR        RA
   48:  ADDIU     SP, SP, 20
}

#new:Function $Function_802196A4
{
    0:  ADDIU     SP, SP, FFE0
    4:  SW        S0, 10 (SP)
    8:  COPY      S0, A0
    C:  SW        RA, 18 (SP)
   10:  SW        S1, 14 (SP)
   14:  LW        A0, 148 (S0)
   18:  JAL       ~Func:get_actor
   1C:  LW        S1, C (S0)
   20:  COPY      A0, S0
   24:  LW        A1, 0 (S1)
   28:  JAL       ~Func:get_variable
   2C:  LW        S0, 94 (V0)
   30:  SW        V0, C (S0)
   34:  LW        RA, 18 (SP)
   38:  LW        S1, 14 (SP)
   3C:  LW        S0, 10 (SP)
   40:  LI        V0, 2
   44:  JR        RA
   48:  ADDIU     SP, SP, 20
}

#new:Function $Function_802196F0
{
    0:  ADDIU     SP, SP, FFE0
    4:  SW        S0, 10 (SP)
    8:  COPY      S0, A0
    C:  SW        RA, 18 (SP)
   10:  SW        S1, 14 (SP)
   14:  LW        A0, 148 (S0)
   18:  JAL       ~Func:get_actor
   1C:  LW        S1, C (S0)
   20:  COPY      A0, S0
   24:  LW        A1, 0 (S1)
   28:  JAL       ~Func:get_variable
   2C:  LW        S0, 94 (V0)
   30:  SW        V0, 10 (S0)
   34:  LW        RA, 18 (SP)
   38:  LW        S1, 14 (SP)
   3C:  LW        S0, 10 (SP)
   40:  LI        V0, 2
   44:  JR        RA
   48:  ADDIU     SP, SP, 20
}

#new:Function $Function_8021973C
{
    0:  ADDIU     SP, SP, FFE8
    4:  SW        RA, 10 (SP)
    8:  JAL       ~Func:mdl_set_all_fog_mode
    C:  LI        A0, 1
   10:  CLEAR     A0
   14:  LI        V0, 1
   18:  COPY      A1, A0
   1C:  COPY      A2, A0
   20:  LAW       V1, 801512F0
   28:  COPY      A3, A0
   2C:  JAL       ~Func:set_background_color_blend
   30:  SB        V0, 0 (V1)
   34:  LW        RA, 10 (SP)
   38:  LI        V0, 2
   3C:  JR        RA
   40:  ADDIU     SP, SP, 18
}

#new:Function $Function_80219780
{
    0:  ADDIU     SP, SP, FFE8
    4:  SW        RA, 10 (SP)
    8:  LW        V0, C (A0)
    C:  JAL       ~Func:get_variable
   10:  LW        A1, 0 (V0)
   14:  CLEAR     A0
   18:  COPY      A1, A0
   1C:  COPY      A2, A0
   20:  JAL       ~Func:set_background_color_blend
   24:  ANDI      A3, V0, FF
   28:  LW        RA, 10 (SP)
   2C:  LI        V0, 2
   30:  JR        RA
   34:  ADDIU     SP, SP, 18
}

#new:Function $Function_GetPartner
{
    0:  ADDIU     SP, SP, FFE0
    4:  SW        S2, 18 (SP)
    8:  COPY      S2, A0
    C:  SW        S1, 14 (SP)
   10:  LA        S1, 8010F290
   18:  SW        RA, 1C (SP)
   1C:  SW        S0, 10 (SP)
   20:  LW        S0, C (S2)
   24:  LB        A2, 12 (S1)
   28:  LW        A1, 0 (S0)
   2C:  JAL       ~Func:set_variable
   30:  ADDIU     S0, S0, 4
   34:  LB        V0, 12 (S1)
   38:  LW        A1, 0 (S0)
   3C:  SLL       V0, V0, 3
   40:  ADDU      V0, V0, S1
   44:  LB        A2, 15 (V0)
   48:  JAL       ~Func:set_variable
   4C:  COPY      A0, S2
   50:  LW        RA, 1C (SP)
   54:  LW        S2, 18 (SP)
   58:  LW        S1, 14 (SP)
   5C:  LW        S0, 10 (SP)
   60:  LI        V0, 2
   64:  JR        RA
   68:  ADDIU     SP, SP, 20
}

#new:Function $Function_80219824
{
    0:  ADDIU     SP, SP, FFE8
    4:  SW        S0, 10 (SP)
    8:  COPY      S0, A0
    C:  SW        RA, 14 (SP)
   10:  LW        V0, C (S0)
   14:  JAL       ~Func:get_variable
   18:  LW        A1, 0 (V0)
   1C:  LW        A0, 148 (S0)
   20:  JAL       ~Func:get_actor
   24:  COPY      S0, V0
   28:  COPY      V1, V0
   2C:  ADDIU     S0, S0, FFFF
   30:  SLTIU     V0, S0, 9
   34:  BEQ       V0, R0, .oB0
   38:  CLEAR     A0
   3C:  SLL       V0, S0, 2
   40:  LTW       V0, V0 ($JumpTable_80232B40)
   4C:  JR        V0
   50:  NOP
	% LBL: from $JumpTable_80232B40 , entry 0`
   54:  LA        A0, $SpecialFormation_80220524
   58:  BEQ       R0, R0, .oB0
   5C:  RESERVED
	% LBL: from $JumpTable_80232B40 , entry 1`
   60:  LA        A0, $SpecialFormation_80222274
   64:  BEQ       R0, R0, .oB0
   68:  RESERVED
	% LBL: from $JumpTable_80232B40 , entry 2`
   6C:  LA        A0, $SpecialFormation_8022336C
   70:  BEQ       R0, R0, .oB0
   74:  RESERVED
	% LBL: from $JumpTable_80232B40 , entry 3`
   78:  LA        A0, $SpecialFormation_802243F4
   7C:  BEQ       R0, R0, .oB0
   80:  RESERVED
	% LBL: from $JumpTable_80232B40 , entry 8`
   84:  LA        A0, $SpecialFormation_80225958
   88:  BEQ       R0, R0, .oB0
   8C:  RESERVED
	% LBL: from $JumpTable_80232B40 , entry 5`
   90:  LA        A0, $SpecialFormation_80226960
   94:  BEQ       R0, R0, .oB0
   98:  RESERVED
	% LBL: from $JumpTable_80232B40 , entry 6`
   9C:  LA        A0, $SpecialFormation_802283F0
   A0:  BEQ       R0, R0, .oB0
   A4:  RESERVED
	% LBL: from $JumpTable_80232B40 , entry 7`
   A8:  LA        A0, $SpecialFormation_8022972C
	% LBL: from $JumpTable_80232B40 , entry 4`
        .oB0
   B0:  LB        V1, 1F1 (V1)
   B4:  ADDIU     V1, V1, A
   B8:  SW        V1, 8 (A0)
   BC:  LW        RA, 14 (SP)
   C0:  LW        S0, 10 (SP)
   C4:  LI        V0, 2
   C8:  JR        RA
   CC:  ADDIU     SP, SP, 18
}

PADDING: 802198F4 to 80219900 (00465D84 to 00465D90)
00000000 00000000 00000000

#new:Function $Function_80219900
{
    0:  ADDIU     SP, SP, FFA0
    4:  SW        S0, 20 (SP)
    8:  COPY      S0, A0
    C:  SW        RA, 28 (SP)
   10:  SW        S1, 24 (SP)
   14:  SDC1      F30, 58 (SP)
   18:  SDC1      F28, 50 (SP)
   1C:  SDC1      F26, 48 (SP)
   20:  SDC1      F24, 40 (SP)
   24:  SDC1      F22, 38 (SP)
   28:  SDC1      F20, 30 (SP)
   2C:  LW        V0, C (S0)
   30:  JAL       ~Func:get_variable
   34:  LW        A1, 0 (V0)
   38:  COPY      S1, V0
   3C:  LI        A0, 1
   40:  BEQ       S1, A0, .o100
   44:  SW        S1, 70 (S0)
   48:  SLTI      V0, S1, 2
   4C:  BEQ       V0, R0, .o64
   50:  LI        V0, 2
   54:  BEQ       S1, R0, .o7C
   58:  LI        V0, 8E
   5C:  BEQ       R0, R0, .o400
   60:  NOP
        .o64
   64:  BEQ       S1, V0, .o27C
   68:  LI        V0, 3
   6C:  BEQ       S1, V0, .oBC
   70:  LI        V1, 5B
   74:  BEQ       R0, R0, .o400
   78:  NOP
        .o7C
   7C:  LIF       F4, 142.0
   84:  LIF       F30, -118.0
   8C:  LI        V1, FF8A
   90:  SW        R0, 14 (SP)
   94:  SWC1      F4, 10 (SP)
   98:  SW        V0, 90 (S0)
   9C:  LI        V0, 2C
   A0:  SW        V0, 9C (S0)
   A4:  LI        V0, 3
   A8:  SW        R0, 94 (S0)
   AC:  SW        V1, 98 (S0)
   B0:  SW        V1, A0 (S0)
   B4:  BEQ       R0, R0, .oF0
   B8:  SW        V0, A4 (S0)
        .oBC
   BC:  LIF       F4, 91.0
   C4:  LIF       F30, -118.0
   CC:  LI        V0, FF8A
   D0:  SW        R0, 14 (SP)
   D4:  SWC1      F4, 10 (SP)
   D8:  SW        V1, 90 (S0)
   DC:  SW        R0, 94 (S0)
   E0:  SW        V0, 98 (S0)
   E4:  SW        V1, 9C (S0)
   E8:  SW        V0, A0 (S0)
   EC:  SW        S1, A4 (S0)
        .oF0
   F0:  SW        R0, A8 (S0)
   F4:  SW        R0, B0 (S0)
   F8:  BEQ       R0, R0, .o400
   FC:  SW        A0, 70 (S0)
        .o100
  100:  LW        V0, A8 (S0)
  104:  LW        V1, A4 (S0)
  108:  ADDU      V0, V0, V1
  10C:  SW        V0, A8 (S0)
  110:  SLTI      V0, V0, 2E
  114:  BNE       V0, R0, .o124
  118:  NOP
  11C:  LI        V0, 2D
  120:  SW        V0, A8 (S0)
        .o124
  124:  LWC1      F4, 90 (S0)
  128:  CVT.S.W   F4, F4
  12C:  SWC1      F4, 10 (SP)
  130:  LWC1      F4, 94 (S0)
  134:  CVT.S.W   F4, F4
  138:  SWC1      F4, 14 (SP)
  13C:  LWC1      F12, A8 (S0)
  140:  CVT.S.W   F12, F12
  144:  LIF       F26, 6.28318
  150:  LWC1      F30, 98 (S0)
  154:  CVT.S.W   F30, F30
  158:  MUL.S     F12, F12, F26
  15C:  NOP
  160:  LWC1      F28, 9C (S0)
  164:  CVT.S.W   F28, F28
  168:  LIF       F24, 360.0
  170:  LWC1      F4, A0 (S0)
  174:  CVT.S.W   F4, F4
  178:  SWC1      F4, 18 (SP)
  17C:  JAL       ~Func:sin_rad
  180:  DIV.S     F12, F12, F24
  184:  CVT.D.S   F0, F0
  188:  LIF       F23, 1.875
  190:  MTC1      R0, F22
  194:  LWC1      F4, 10 (SP)
  198:  SUB.D     F0, F22, F0
  19C:  CVT.D.S   F20, F4
  1A0:  MUL.D     F20, F20, F0
  1A4:  NOP
  1A8:  LWC1      F12, A8 (S0)
  1AC:  CVT.S.W   F12, F12
  1B0:  MUL.S     F12, F12, F26
  1B4:  NOP
  1B8:  JAL       ~Func:sin_rad
  1BC:  DIV.S     F12, F12, F24
  1C0:  MUL.S     F0, F28, F0
  1C4:  NOP
  1C8:  LW        V0, A8 (S0)
  1CC:  SLL       V0, V0, 1
  1D0:  MTC1      V0, F12
  1D4:  NOP
  1D8:  CVT.S.W   F12, F12
  1DC:  MUL.S     F12, F12, F26
  1E0:  NOP
  1E4:  CVT.D.S   F0, F0
  1E8:  ADD.D     F20, F20, F0
  1EC:  DIV.S     F12, F12, F24
  1F0:  CVT.S.D   F20, F20
  1F4:  JAL       ~Func:sin_rad
  1F8:  SWC1      F20, 10 (SP)
  1FC:  LWC1      F12, A8 (S0)
  200:  CVT.S.W   F12, F12
  204:  MUL.S     F12, F12, F26
  208:  NOP
  20C:  LIF       F2, 90.0
  214:  NOP
  218:  MUL.S     F0, F0, F2
  21C:  NOP
  220:  LWC1      F4, 14 (SP)
  224:  ADD.S     F4, F4, F0
  228:  DIV.S     F12, F12, F24
  22C:  JAL       ~Func:sin_rad
  230:  SWC1      F4, 14 (SP)
  234:  LWC1      F12, A8 (S0)
  238:  CVT.S.W   F12, F12
  23C:  MUL.S     F12, F12, F26
  240:  NOP
  244:  CVT.D.S   F0, F0
  248:  SUB.D     F22, F22, F0
  24C:  CVT.D.S   F20, F30
  250:  MUL.D     F20, F20, F22
  254:  NOP
  258:  JAL       ~Func:sin_rad
  25C:  DIV.S     F12, F12, F24
  260:  LWC1      F4, 18 (SP)
  264:  MUL.S     F0, F4, F0
  268:  NOP
  26C:  CVT.D.S   F0, F0
  270:  ADD.D     F20, F20, F0
  274:  BEQ       R0, R0, .o3F0
  278:  LI        V0, 2D
        .o27C
  27C:  LW        V0, A8 (S0)
  280:  LW        V1, A4 (S0)
  284:  ADDU      V0, V0, V1
  288:  SW        V0, A8 (S0)
  28C:  SLTI      V0, V0, 5B
  290:  BNE       V0, R0, .o29C
  294:  LI        V0, 5A
  298:  SW        V0, A8 (S0)
        .o29C
  29C:  LWC1      F4, 90 (S0)
  2A0:  CVT.S.W   F4, F4
  2A4:  SWC1      F4, 10 (SP)
  2A8:  LWC1      F4, 94 (S0)
  2AC:  CVT.S.W   F4, F4
  2B0:  SWC1      F4, 14 (SP)
  2B4:  LWC1      F12, A8 (S0)
  2B8:  CVT.S.W   F12, F12
  2BC:  LIF       F26, 6.28318
  2C8:  LWC1      F30, 98 (S0)
  2CC:  CVT.S.W   F30, F30
  2D0:  MUL.S     F12, F12, F26
  2D4:  NOP
  2D8:  LWC1      F28, 9C (S0)
  2DC:  CVT.S.W   F28, F28
  2E0:  LIF       F24, 360.0
  2E8:  LWC1      F4, A0 (S0)
  2EC:  CVT.S.W   F4, F4
  2F0:  SWC1      F4, 18 (SP)
  2F4:  JAL       ~Func:sin_rad
  2F8:  DIV.S     F12, F12, F24
  2FC:  CVT.D.S   F0, F0
  300:  LIF       F23, 1.875
  308:  MTC1      R0, F22
  30C:  LWC1      F4, 10 (SP)
  310:  SUB.D     F0, F22, F0
  314:  CVT.D.S   F20, F4
  318:  MUL.D     F20, F20, F0
  31C:  NOP
  320:  LWC1      F12, A8 (S0)
  324:  CVT.S.W   F12, F12
  328:  MUL.S     F12, F12, F26
  32C:  NOP
  330:  JAL       ~Func:sin_rad
  334:  DIV.S     F12, F12, F24
  338:  MUL.S     F0, F28, F0
  33C:  NOP
  340:  LW        V0, A8 (S0)
  344:  SLL       V0, V0, 1
  348:  MTC1      V0, F12
  34C:  NOP
  350:  CVT.S.W   F12, F12
  354:  MUL.S     F12, F12, F26
  358:  NOP
  35C:  CVT.D.S   F0, F0
  360:  ADD.D     F20, F20, F0
  364:  DIV.S     F12, F12, F24
  368:  CVT.S.D   F20, F20
  36C:  JAL       ~Func:sin_rad
  370:  SWC1      F20, 10 (SP)
  374:  LWC1      F12, A8 (S0)
  378:  CVT.S.W   F12, F12
  37C:  MUL.S     F12, F12, F26
  380:  NOP
  384:  LIF       F2, 90.0
  38C:  NOP
  390:  MUL.S     F0, F0, F2
  394:  NOP
  398:  LWC1      F4, 14 (SP)
  39C:  ADD.S     F4, F4, F0
  3A0:  DIV.S     F12, F12, F24
  3A4:  JAL       ~Func:sin_rad
  3A8:  SWC1      F4, 14 (SP)
  3AC:  LWC1      F12, A8 (S0)
  3B0:  CVT.S.W   F12, F12
  3B4:  MUL.S     F12, F12, F26
  3B8:  NOP
  3BC:  CVT.D.S   F0, F0
  3C0:  SUB.D     F22, F22, F0
  3C4:  CVT.D.S   F20, F30
  3C8:  MUL.D     F20, F20, F22
  3CC:  NOP
  3D0:  JAL       ~Func:sin_rad
  3D4:  DIV.S     F12, F12, F24
  3D8:  LWC1      F4, 18 (SP)
  3DC:  MUL.S     F0, F4, F0
  3E0:  NOP
  3E4:  CVT.D.S   F0, F0
  3E8:  ADD.D     F20, F20, F0
  3EC:  LI        V0, 5A
        .o3F0
  3F0:  LW        V1, A8 (S0)
  3F4:  BNE       V1, V0, .o400
  3F8:  CVT.S.D   F30, F20
  3FC:  SW        S1, B0 (S0)
        .o400
  400:  LWC1      F4, 10 (SP)
  404:  TRUNC.W.S F4, F4
  408:  SWC1      F4, 84 (S0)
  40C:  LWC1      F4, 14 (SP)
  410:  TRUNC.W.S F4, F4
  414:  SWC1      F4, 88 (S0)
  418:  TRUNC.W.S F4, F30
  41C:  SWC1      F4, 8C (S0)
  420:  LW        RA, 28 (SP)
  424:  LW        S1, 24 (SP)
  428:  LW        S0, 20 (SP)
  42C:  LDC1      F30, 58 (SP)
  430:  LDC1      F28, 50 (SP)
  434:  LDC1      F26, 48 (SP)
  438:  LDC1      F24, 40 (SP)
  43C:  LDC1      F22, 38 (SP)
  440:  LDC1      F20, 30 (SP)
  444:  LI        V0, 2
  448:  JR        RA
  44C:  ADDIU     SP, SP, 60
}

#new:DefenseTable $DefenseTable_80219D50
{
	.Element:Normal 00000002
	.Element:Fire   00000063
	.Element:Blast  00000063
	.Element:End
}

#new:DefenseTable $DefenseTable_80219D6C
{
	.Element:Normal 00000000
	.Element:End
}

#new:StatusTable $StatusTable_80219D78
{
	.Status:Normal      0`
	.Status:Default     0`
	.Status:Sleep      30`
	.Status:Poison      0`
	.Status:Frozen      0`
	.Status:Dizzy      50`
	.Status:Fear        0`
	.Status:Static     50`
	.Status:Paralyze   50`
	.Status:Shrink     50`
	.Status:Stop      100`
	.Status:DefaultTurnMod    0`
	.Status:SleepTurnMod      0`
	.Status:PoisonTurnMod     0`
	.Status:FrozenTurnMod     0`
	.Status:DizzyTurnMod      0`
	.Status:FearTurnMod       0`
	.Status:StaticTurnMod     0`
	.Status:ParalyzeTurnMod   0`
	.Status:ShrinkTurnMod     0`
	.Status:StopTurnMod       0`
	.Status:End
}

#new:PartsTable $PartsTable_80219E24
{
	00800000 01000000 001000FF $IdleAnimations_80219EBC $DefenseTable_80219D50 00001000 00000000 01070000 00000000
}

#new:Actor $Chan
{
	% stats
	[Index]        7Db
	[Level]         0`b
	[MaxHP]        15`b
	[Coins]         0`b
	[Flags]       00000800
	[StatusTable] $StatusTable_80219D78
	% ai
	[PartsCount]    1`s
	[PartsTable]  $PartsTable_80219E24
	[Script]      $Script_Init_8021CCDC
	% move effectiveness
	[Escape]      100`b
	[Item]          0`b
	[AirLift]       0`b
	[Hurricane]     0`b % Bow's "Spook" as well
	[UpAndAway]     0`b
	[PowerBounce] 100`b
	[SpinSmash]     0`b % weight (0-4)
	% ui positions
	[Size]         22`b  18`b % width height
	[HealthBar]     0`b   0`b % dx dy
	[StatusTurn]  -10`b  20`b % dx dy
	[StatusIcon]   10`b  20`b % dx dy
}

#new:IdleAnimations $IdleAnimations_80219E70
{
	.Status:Normal    00A30001
	.Status:Stone     00A30000
	.Status:Sleep     00A3000A
	.Status:Poison    00A30001
	.Status:Stop      00A30000
	.Status:Static    00A30001
	.Status:Paralyze  00A30000
	.Status:Dizzy     00A3000B
	.Status:Fear      00A3000B
	.Status:End
}

#new:IdleAnimations $IdleAnimations_80219EBC
{
	.Status:Normal    00A30001
	.Status:Stone     00A30000
	.Status:Sleep     00A3000A
	.Status:Poison    00A30001
	.Status:Stop      00A30000
	.Status:Static    00A30001
	.Status:Paralyze  00A30000
	.Status:Dizzy     00A3000B
	.Status:Fear      00A3000B
	.Status:End
}

#new:IdleAnimations $IdleAnimations_80219F08
{
	.Status:Normal    00A30002
	.Status:Stone     00A3000F
	.Status:Sleep     00A30010
	.Status:Poison    00A30002
	.Status:Stop      00A3000F
	.Status:Static    00A30002
	.Status:Dizzy     00A30011
	.Status:Fear      00A30011
	.Status:End
}

#new:Script $Script_80219F4C
{
    0:  Call  BindIdle      ( .Actor:Self $Script_Idle_8021A11C )
   14:  Call  GetActorVar   ( .Actor:Self 00000000 *Var0 )
   2C:  If  *Var0  ==  00000001
   3C:  	Call  SetActorVar       ( .Actor:Self 00000008 00000000 )
   54:  	Call  $Function_80218000    ( FFFFFFF6 00000000 0000000A 00000000 )
   70:  	Call  BindTakeTurn      ( .Actor:Self $Script_TakeTurn_8021B81C )
   84:  	Call  BindHandleEvent   ( .Actor:Self $Script_HandleEvent_8021A560 )
   98:  	Call  SetPartEventBits  ( .Actor:Self 00000001 00001000 .False )
   B4:  Else
   BC:  	Call  SetActorVar       ( .Actor:Self 00000008 00000001 )
   D4:  	Call  SetTargetOffset   ( .Actor:Self 00000001  0`  16` )
   F0:  	Call  8027D4C8  ( FFFFFF81 00000001 FFFFFFFF FFFFFFF7 )
  10C:  	Call  BindTakeTurn      ( .Actor:Self $Script_TakeTurn_Chan )
  120:  	Call  BindHandleEvent   ( .Actor:Self $Script_HandleEvent_8021AAB8 )
  134:  	Call  SetIdleAnimations ( .Actor:Self 00000001 $IdleAnimations_80219E70 )
  14C:  	Call  SetActorFlagBits  ( .Actor:Self 00000800 .False )
  164:  	Call  SetPartEventBits  ( .Actor:Self 00000001 00001000 .True )
  180:  EndIf
  188:  Call  HPBarToHome       ( .Actor:Self )
  198:  Call  EnableIdleScript  ( .Actor:Self 00000001 )
  1AC:  Call  UseIdleAnimation  ( .Actor:Self .True )
  1C0:  Return
  1C8:  End
}

#new:Script $Script_Idle_8021A11C
{
    0:  Return
    8:  End
}

#new:Script $Script_8021A12C
{
    0:  Call  8027D32C      ( FFFFFF81 )
   10:  Call  SetActorVar   ( .Actor:Self 00000008 00000002 )
   28:  Call  SetTargetOffset   ( .Actor:Self 00000001  0`  16` )
   44:  Call  8027D4C8      ( FFFFFF81 00000001 FFFFFFFF FFFFFFF7 )
   60:  Call  $Function_80218000    ( FFFFFFF6 00000014 0000000A 00000014 )
   7C:  Call  BindTakeTurn  ( .Actor:Self $Script_TakeTurn_Chan )
   90:  Call  BindHandleEvent   ( .Actor:Self $Script_HandleEvent_8021AAB8 )
   A4:  Call  SetActorVar   ( .Actor:Self 00000009 00000001 )
   BC:  Call  SetDefenseTable   ( .Actor:Self 00000001 $DefenseTable_80219D6C )
   D4:  Call  SetIdleAnimations ( .Actor:Self 00000001 $IdleAnimations_80219F08 )
   EC:  Call  SetActorFlagBits  ( .Actor:Self 00000800 .False )
  104:  Call  SetPartEventBits  ( .Actor:Self 00000001 00000010 .False )
  120:  Call  SetPartEventBits  ( .Actor:Self 00000001 00001000 .True )
  13C:  Call  SetActorFlagBits  ( .Actor:Self 00000400 .True )
  154:  Call  SetAnimation  ( .Actor:Self 00000001 00A30007 )
  16C:  Call  SetActorYaw   ( .Actor:Self  180` )
  180:  Call  GetActorPos   ( .Actor:Self *Var0 *Var1 *Var2 )
  19C:  Sub   *Var1  00000018
  1AC:  Call  SetActorPos   ( .Actor:Self *Var0 *Var1 *Var2 )
  1C8:  Set   *Var1  00000000
  1D8:  Call  SetActorSounds    ( .Actor:Self .ActorSound:Jump 00000301 00000000 )
  1F4:  Call  SetActorJumpGravity   ( .Actor:Self *Fixed[0.8] )
  208:  Call  SetGoalPos    ( .Actor:Self *Var0 *Var1 *Var2 )
  224:  Call  JumpToGoal    ( .Actor:Self  15` .False .True .False )
  244:  Call  GetIndexFromPos   ( .Actor:Self *VarA )
  258:  Mod   *VarA  00000004
  268:  Call  SetGoalToIndex    ( .Actor:Self *VarA )
  27C:  Call  GetGoalPos    ( .Actor:Self *VarA *VarB *VarC )
  298:  Call  SetHomePos    ( .Actor:Self *VarA *VarB *VarC )
  2B4:  Set   *VarD  *VarA
  2C4:  Set   *VarE  *VarB
  2D4:  Set   *VarF  *VarC
  2E4:  Sub   *VarD  *Var0
  2F4:  Sub   *VarE  *Var1
  304:  Sub   *VarF  *Var2
  314:  Div   *VarD  00000002
  324:  Div   *VarE  00000002
  334:  Div   *VarF  00000002
  344:  Add   *Var0  *VarD
  354:  Add   *Var1  *VarE
  364:  Add   *Var2  *VarF
  374:  Call  ResetAllActorSounds   ( .Actor:Self )
  384:  Call  SetAnimation  ( .Actor:Self 00000001 00A30002 )
  39C:  Call  SetGoalPos    ( .Actor:Self *Var0 *Var1 *Var2 )
  3B8:  Call  JumpToGoal    ( .Actor:Self  10` .False .True .False )
  3D8:  Call  SetGoalPos    ( .Actor:Self *VarA *VarB *VarC )
  3F4:  Call  JumpToGoal    ( .Actor:Self  5` .False .True .False )
  414:  Call  HPBarToHome   ( .Actor:Self )
  424:  Return
  42C:  End
}

#new:Script $Script_HandleEvent_8021A560
{
    0:  Call  UseIdleAnimation  ( .Actor:Self .False )
   14:  Call  EnableIdleScript  ( .Actor:Self 00000000 )
   28:  Call  GetLastEvent      ( .Actor:Self *Var0 )
   3C:  Switch  *Var0
   48:  	Case  ==  .Event:HitCombo % 9
   54:  		SetConst  *Var0  00000001
   64:  		SetConst  *Var1  00A30006
   74:  		ExecWait  DoNormalHit
   80:  	Case  ==  .Event:Hit % A
   8C:  		SetConst  *Var0  00000001
   9C:  		SetConst  *Var1  00A30006
   AC:  		ExecWait  DoNormalHit
   B8:  		ExecWait  $Script_8021A12C
   C4:  	Case  ==  .Event:FlipTrigger % D
   D0:  		SetConst  *Var0  00000001
   E0:  		SetConst  *Var1  00A30006
   F0:  		ExecWait  DoNormalHit
   FC:  		ExecWait  $Script_8021A12C
  108:  	Case  ==  .Event:BurnHit % E
  114:  		SetConst  *Var0  00000001
  124:  		SetConst  *Var1  00A30006
  134:  		SetConst  *Var2  00A30006
  144:  		ExecWait  DoBurnHit
  150:  		ExecWait  $Script_8021A12C
  15C:  	Case  ==  .Event:BurnDeath % 24
  168:  		SetConst  *Var0  00000001
  178:  		SetConst  *Var1  00A30006
  188:  		SetConst  *Var2  00A30006
  198:  		ExecWait  DoBurnHit
  1A4:  		SetConst  *Var0  00000001
  1B4:  		SetConst  *Var1  00A30006
  1C4:  		ExecWait  DoDeath
  1D0:  		Return
  1D8:  	Case  ==  .Event:ShockHit % 2F
  1E4:  		SetConst  *Var0  00000001
  1F4:  		SetConst  *Var1  00A30006
  204:  		ExecWait  DoShockHit
  210:  		SetConst  *Var0  00000001
  220:  		SetConst  *Var1  00A30006
  230:  		ExecWait  DoJumpBack
  23C:  		SetConst  *Var0  00000001
  24C:  		SetConst  *Var1  00A30004
  25C:  		ExecWait  DoReturnHome
  268:  	Case  ==  .Event:ShockDeath % 26
  274:  		SetConst  *Var0  00000001
  284:  		SetConst  *Var1  00A30006
  294:  		ExecWait  DoShockHit
  2A0:  		SetConst  *Var0  00000001
  2B0:  		SetConst  *Var1  00A30006
  2C0:  		ExecWait  DoDeath
  2CC:  		Return
  2D4:  	Case  ==  00000017 % 17
  2E0:  		SetConst  *Var0  00000001
  2F0:  		SetConst  *Var1  00A3000C
  300:  		ExecWait  DoImmune
  30C:  	Case  ==  .Event:Immune % 19
  318:  		SetConst  *Var0  00000001
  328:  		SetConst  *Var1  00A3000C
  338:  		ExecWait  DoImmune
  344:  		Wait  2`
  350:  		Call  GetStatusFlags    ( .Actor:Self *Var0 )
  364:  		If  *Var0  !&  ~Flags:StatusFlags:Stop % 200000
  374:  			ExecWait  $Script_8021A12C
  380:  		EndIf
  388:  	Case  ==  .Event:Death % 20
  394:  		SetConst  *Var0  00000001
  3A4:  		SetConst  *Var1  00A30006
  3B4:  		ExecWait  DoNormalHit
  3C0:  		Wait  10`
  3CC:  		SetConst  *Var0  00000001
  3DC:  		SetConst  *Var1  00A30006
  3EC:  		ExecWait  DoDeath
  3F8:  		Return
  400:  	Case  ==  .Event:RecoverStatus % 31
  40C:  	Case  ==  .Event:ScareAway % 39
  418:  		Call  SetActorFlagBits  ( .Actor:Self 00000200 .True )
  430:  		SetConst  *Var0  00000001
  440:  		SetConst  *Var1  00A30004
  450:  		SetConst  *Var2  00A30006
  460:  		ExecWait  DoScareAway
  46C:  		Return
  474:  	Default
  47C:  EndSwitch
  484:  Call  EnableIdleScript  ( .Actor:Self 00000001 )
  498:  Call  UseIdleAnimation  ( .Actor:Self .True )
  4AC:  Return
  4B4:  End
}

#new:Script $Script_8021AA1C
{
    0:  Call  GetActorVar   ( .Actor:Self 00000008 *Var3 )
   18:  If  *Var3  ==  00000002
   28:  	Set   *Var1  *Var2
   38:  EndIf
   40:  Return
   48:  End
}

#new:IntTable $IntTable_8021AA6C
{
	00000007 0000000D 00000011 00000015 00000017 00000018 00000017 00000015
	00000011 0000000D 00000007 00000000 00000004 00000007 00000006 00000004
	00000000 00000002 00000000
}

#new:Script $Script_HandleEvent_8021AAB8
{
    0:  Call  UseIdleAnimation  ( .Actor:Self .False )
   14:  Call  EnableIdleScript  ( .Actor:Self 00000000 )
   28:  Call  GetLastEvent      ( .Actor:Self *Var0 )
   3C:  Switch  *Var0
   48:  	CaseOR  ==  .Event:HitCombo % 9
   54:  	CaseOR  ==  .Event:Hit % A
   60:  		SetConst  *Var0  00000001
   70:  		SetConst  *Var1  00A30006
   80:  		SetConst  *Var2  00A30007
   90:  		ExecWait  $Script_8021AA1C
   9C:  		ExecWait  DoNormalHit
   A8:  	EndCaseGroup
   B0:  	Case  ==  .Event:BurnHit % E
   BC:  		Call  GetActorVar   ( .Actor:Self 00000008 *Var0 )
   D4:  		If  *Var0  !=  00000002
   E4:  			SetConst  *Var0  00000001
   F4:  			SetConst  *Var1  00A30006
  104:  			SetConst  *Var2  00A30006
  114:  			ExecWait  DoBurnHit
  120:  		Else
  128:  			SetConst  *Var0  00000001
  138:  			SetConst  *Var1  00A30014
  148:  			SetConst  *Var2  00A30015
  158:  			ExecWait  DoBurnHit
  164:  		EndIf
  16C:  	Case  ==  .Event:BurnDeath % 24
  178:  		Call  GetActorVar   ( .Actor:Self 00000008 *Var0 )
  190:  		If  *Var0  !=  00000002
  1A0:  			SetConst  *Var0  00000001
  1B0:  			SetConst  *Var1  00A30006
  1C0:  			SetConst  *Var2  00A30006
  1D0:  			ExecWait  DoBurnHit
  1DC:  			SetConst  *Var0  00000001
  1EC:  			SetConst  *Var1  00A30006
  1FC:  			ExecWait  DoDeath
  208:  		Else
  210:  			SetConst  *Var0  00000001
  220:  			SetConst  *Var1  00A30014
  230:  			SetConst  *Var2  00A30015
  240:  			ExecWait  DoBurnHit
  24C:  			SetConst  *Var0  00000001
  25C:  			SetConst  *Var1  00A30015
  26C:  			ExecWait  DoDeath
  278:  		EndIf
  280:  		Return
  288:  	Case  ==  .Event:SpinSmashHit % B
  294:  		SetConst  *Var0  00000001
  2A4:  		SetConst  *Var1  00A30006
  2B4:  		SetConst  *Var2  00A30007
  2C4:  		ExecWait  $Script_8021AA1C
  2D0:  		ExecWait  DoSpinSmashHit
  2DC:  	Case  ==  .Event:FlipTrigger % D
  2E8:  		Call  SetActorVar       ( .Actor:Self 00000008 00000002 )
  300:  		Call  SetTargetOffset   ( .Actor:Self 00000001  0`  16` )
  31C:  		Call  8027D4C8  ( FFFFFF81 00000001 FFFFFFFF FFFFFFF7 )
  338:  		Call  SetActorVar       ( .Actor:Self 00000009 00000001 )
  350:  		Call  SetDefenseTable   ( .Actor:Self 00000001 $DefenseTable_80219D6C )
  368:  		Call  SetIdleAnimations ( .Actor:Self 00000001 $IdleAnimations_80219F08 )
  380:  		Call  SetActorFlagBits  ( .Actor:Self 00000400 .True )
  398:  		Call  SetAnimation      ( .Actor:Self 00000001 00A30006 )
  3B0:  		Call  SetActorRotationOffset    ( .Actor:Self 00000000 0000000C 00000000 )
  3CC:  		Thread
  3D4:  			Wait  1`
  3E0:  			Call  SetActorRotation  ( .Actor:Self 00000000 00000000 00000000 )
  3FC:  			Wait  1`
  408:  			Call  SetActorRotation  ( .Actor:Self 00000000 00000000 FFFFFFD3 )
  424:  			Wait  1`
  430:  			Call  SetActorRotation  ( .Actor:Self 00000000 00000000 FFFFFFA6 )
  44C:  			Wait  1`
  458:  			Call  SetActorRotation  ( .Actor:Self 00000000 00000000 FFFFFF79 )
  474:  			Wait  1`
  480:  			Call  SetActorRotation  ( .Actor:Self 00000000 00000000 FFFFFF4C )
  49C:  			Wait  1`
  4A8:  		EndThread
  4B0:  		UseIntBuffer  $IntTable_8021AA6C
  4BC:  		Loop  00000013
  4C8:  			Get1Int  *Var0
  4D4:  			Call  SetActorDispOffset    ( .Actor:Self 00000000 *Var0 00000000 )
  4F0:  			Wait  1`
  4FC:  		EndLoop
  504:  		Call  SetActorDispOffset    ( .Actor:Self 00000000 00000000 00000000 )
  520:  		Call  SetActorRotationOffset    ( .Actor:Self 00000000 00000000 00000000 )
  53C:  		Call  SetActorRotation      ( .Actor:Self 00000000 00000000 00000000 )
  558:  		Call  SetAnimation  ( .Actor:Self 00000001 00A30007 )
  570:  	Case  ==  .Event:ShockHit % 2F
  57C:  		SetConst  *Var0  00000001
  58C:  		SetConst  *Var1  00A30006
  59C:  		ExecWait  DoShockHit
  5A8:  		SetConst  *Var0  00000001
  5B8:  		SetConst  *Var1  00A30006
  5C8:  		ExecWait  DoJumpBack
  5D4:  		SetConst  *Var0  00000001
  5E4:  		SetConst  *Var1  00A30004
  5F4:  		ExecWait  DoReturnHome
  600:  	Case  ==  .Event:ShockDeath % 26
  60C:  		SetConst  *Var0  00000001
  61C:  		SetConst  *Var1  00A30006
  62C:  		ExecWait  DoShockHit
  638:  		SetConst  *Var0  00000001
  648:  		SetConst  *Var1  00A30006
  658:  		ExecWait  DoDeath
  664:  		Return
  66C:  	Case  ==  00000017 % 17
  678:  		Call  GetActorVar   ( .Actor:Self 00000008 *Var0 )
  690:  		If  *Var0  ==  00000001
  6A0:  			SetConst  *Var0  00000001
  6B0:  			SetConst  *Var1  00A3000C
  6C0:  			ExecWait  DoImmune
  6CC:  			Call  SetAnimation  ( .Actor:Self 00000001 00A3000D )
  6E4:  			Wait  8`
  6F0:  		Else
  6F8:  			SetConst  *Var0  00000001
  708:  			SetConst  *Var1  00A30002
  718:  			ExecWait  DoImmune
  724:  		EndIf
  72C:  	Case  ==  .Event:Immune % 19
  738:  		Call  GetActorVar   ( .Actor:Self 00000008 *Var0 )
  750:  		If  *Var0  ==  00000001
  760:  			SetConst  *Var0  00000001
  770:  			SetConst  *Var1  00A3000C
  780:  			ExecWait  DoImmune
  78C:  			Call  SetAnimation  ( .Actor:Self 00000001 00A3000D )
  7A4:  			Wait  8`
  7B0:  		Else
  7B8:  			SetConst  *Var0  00000001
  7C8:  			SetConst  *Var1  00A30002
  7D8:  			ExecWait  DoImmune
  7E4:  		EndIf
  7EC:  	Case  ==  .Event:SpikeTaunt % 1B
  7F8:  		Wait  10`
  804:  		Call  GetActorPos       ( .Actor:Self *Var0 *Var1 *Var2 )
  820:  		Call  GetStatusFlags    ( .Actor:Self *Var3 )
  834:  		If  *Var3  &  ~Flags:StatusFlags:Shrink % 80000
  844:  			Add   *Var1  00000009
  854:  		Else
  85C:  			Add   *Var1  00000018
  86C:  		EndIf
  874:  		Call  PlayEffect    ( ~FX:LensFlare:Rotating *Var0 *Var1 *Var2 00000014 00000000 00000000 00000000 00000000 00000000 00000000 00000000 00000000 )
  8B8:  		Wait  20`
  8C4:  	Case  ==  .Event:Death % 20
  8D0:  		SetConst  *Var0  00000001
  8E0:  		SetConst  *Var1  00A30006
  8F0:  		SetConst  *Var2  00A30007
  900:  		ExecWait  $Script_8021AA1C
  90C:  		ExecWait  DoNormalHit
  918:  		Wait  10`
  924:  		SetConst  *Var0  00000001
  934:  		SetConst  *Var1  00A30006
  944:  		SetConst  *Var2  00A30007
  954:  		ExecWait  $Script_8021AA1C
  960:  		ExecWait  DoDeath
  96C:  		Return
  974:  	Case  ==  .Event:SpinSmashDeath % 21
  980:  		SetConst  *Var0  00000001
  990:  		SetConst  *Var1  00A30006
  9A0:  		SetConst  *Var2  00A30007
  9B0:  		ExecWait  $Script_8021AA1C
  9BC:  		ExecWait  DoSpinSmashHit
  9C8:  		SetConst  *Var0  00000001
  9D8:  		SetConst  *Var1  00A30006
  9E8:  		SetConst  *Var2  00A30007
  9F8:  		ExecWait  $Script_8021AA1C
  A04:  		ExecWait  DoDeath
  A10:  		Return
  A18:  	Case  ==  .Event:RecoverStatus % 31
  A24:  		Call  GetActorVar   ( .Actor:Self 00000008 *Var0 )
  A3C:  		If  *Var0  ==  00000001
  A4C:  			SetConst  *Var0  00000001
  A5C:  			SetConst  *Var1  00A30001
  A6C:  			ExecWait  DoRecover
  A78:  		EndIf
  A80:  	Case  ==  .Event:ScareAway % 39
  A8C:  		Call  GetActorVar   ( .Actor:Self 00000008 *Var0 )
  AA4:  		If  *Var0  ==  00000001
  AB4:  			SetConst  *Var0  00000001
  AC4:  			SetConst  *Var1  00A30004
  AD4:  			SetConst  *Var2  00A30006
  AE4:  			ExecWait  DoScareAway
  AF0:  			Return
  AF8:  		Else
  B00:  			SetConst  *Var0  00000001
  B10:  			SetConst  *Var1  00A30002
  B20:  			ExecWait  DoImmune
  B2C:  		EndIf
  B34:  	Case  ==  .Event:BeginAirLift % 3A
  B40:  		Call  GetActorVar   ( .Actor:Self 00000008 *Var0 )
  B58:  		If  *Var0  ==  00000001
  B68:  			SetConst  *Var0  00000001
  B78:  			SetConst  *Var1  00A30004
  B88:  		Else
  B90:  			SetConst  *Var0  00000001
  BA0:  			SetConst  *Var1  00A30002
  BB0:  		EndIf
  BB8:  		ExecWait  DoAirLift
  BC4:  	Case  ==  .Event:BlowAway % 16
  BD0:  		Call  GetActorVar   ( .Actor:Self 00000008 *Var0 )
  BE8:  		If  *Var0  ==  00000001
  BF8:  			SetConst  *Var0  00000001
  C08:  			SetConst  *Var1  00A30006
  C18:  		Else
  C20:  			SetConst  *Var0  00000001
  C30:  			SetConst  *Var1  00A30007
  C40:  		EndIf
  C48:  		ExecWait  DoBlowAway
  C54:  		Return
  C5C:  	Case  ==  .Event:AirLiftFailed % 1F
  C68:  		Call  GetActorVar   ( .Actor:Self 00000008 *Var0 )
  C80:  		If  *Var0  ==  00000001
  C90:  			SetConst  *Var0  00000001
  CA0:  			SetConst  *Var1  00A3000C
  CB0:  			ExecWait  DoImmune
  CBC:  			Call  SetAnimation  ( .Actor:Self 00000001 00A3000D )
  CD4:  			Wait  8`
  CE0:  		Else
  CE8:  			SetConst  *Var0  00000001
  CF8:  			SetConst  *Var1  00A30002
  D08:  			ExecWait  DoImmune
  D14:  		EndIf
  D1C:  	Default
  D24:  EndSwitch
  D2C:  Call  EnableIdleScript  ( .Actor:Self 00000001 )
  D40:  Call  UseIdleAnimation  ( .Actor:Self .True )
  D54:  Return
  D5C:  End
}

#new:Script $Script_TakeTurn_8021B81C
{
    0:  Call  UseIdleAnimation  ( .Actor:Self .False )
   14:  Call  EnableIdleScript  ( .Actor:Self 00000000 )
   28:  Call  SetTargetActor    ( .Actor:Self .Actor:Player )
   3C:  Call  SetActorVar       ( .Actor:Self 00000008 00000001 )
   54:  Call  SetTargetOffset   ( .Actor:Self 00000001  0`  16` )
   70:  Call  8027D4C8  ( FFFFFF81 00000001 FFFFFFFF FFFFFFF7 )
   8C:  Call  $Function_80218000    ( FFFFFFF6 00000014 0000000A 00000014 )
   A8:  Call  BindTakeTurn      ( .Actor:Self $Script_TakeTurn_Chan )
   BC:  Call  BindHandleEvent   ( .Actor:Self $Script_HandleEvent_8021AAB8 )
   D0:  Call  SetIdleAnimations ( .Actor:Self 00000001 $IdleAnimations_80219E70 )
   E8:  Call  SetActorFlagBits  ( .Actor:Self 00000800 .False )
  100:  Call  SetPartEventBits  ( .Actor:Self 00000001 00001000 .True )
  11C:  Call  GetIndexFromPos   ( .Actor:Self *Var0 )
  130:  Mod   *Var0  00000004
  140:  Call  SetGoalToIndex    ( .Actor:Self *Var0 )
  154:  Call  GetGoalPos        ( .Actor:Self *Var0 *Var1 *Var2 )
  170:  Call  SetHomePos        ( .Actor:Self *Var0 *Var1 *Var2 )
  18C:  Call  HPBarToHome       ( .Actor:Self )
  19C:  Call  UseBattleCamPreset    ( 0000003F )
  1AC:  Call  BattleCamTargetActor  ( .Actor:Self )
  1BC:  Call  8024ECF8  ( FFFFFFFF 00000001 00000000 )
  1D4:  Call  GetBattlePhase    ( *Var0 )
  1E4:  If  *Var0  ==  00000001
  1F4:  	Call  SetGoalToTarget   ( .Actor:Self )
  204:  	Call  GetActorPos   ( .Actor:Self *Var3 *Var4 *Var5 )
  220:  	Call  GetGoalPos    ( .Actor:Self *Var0 *Var1 *Var2 )
  23C:  	Call  SetActorPos   ( .Actor:Self *Var0 *Var4 *Var2 )
  258:  	Call  SetAnimation  ( .Actor:Self 00000001 00A30000 )
  270:  Else
  278:  	Call  SetAnimation  ( .Actor:Self 00000001 00A30004 )
  290:  	Call  SetGoalToTarget   ( .Actor:Self )
  2A0:  	Call  GetActorPos   ( .Actor:Self *Var3 *Var4 *Var5 )
  2BC:  	Call  GetGoalPos    ( .Actor:Self *Var0 *Var1 *Var2 )
  2D8:  	Call  SetGoalPos    ( .Actor:Self *Var0 *Var4 *Var2 )
  2F4:  	Call  SetActorSpeed ( .Actor:Self *Fixed[6.0] )
  308:  	Call  RunToGoal     ( .Actor:Self  0` .False )
  320:  	Call  SetAnimation  ( .Actor:Self 00000001 00A30000 )
  338:  	Wait  8`
  344:  EndIf
  34C:  Call  SetActorSounds    ( .Actor:Self .ActorSound:Jump 00000301 00000000 )
  368:  Call  GetBattlePhase    ( *Var0 )
  378:  If  *Var0  ==  00000001
  388:  	Call  UseBattleCamPreset    ( 00000005 )
  398:  	Call  SetBattleCamZoom      (  430` )
  3A8:  	Call  SetBattleCamOffsetZ   (  20` )
  3B8:  	Call  MoveBattleCamOver     (  10` )
  3C8:  	Call  8024ECF8  ( FFFFFFFF 00000001 00000000 )
  3E0:  EndIf
  3E8:  Call  EnemyTestTarget   ( .Actor:Self *Var0 ~Flags:DamageType:0 00000000 00000003 00000010 )
  40C:  Switch  *Var0
  418:  	CaseOR  ==  .HitResult:Miss % 6
  424:  	CaseOR  ==  .HitResult:Lucky % 5
  430:  		Set   *VarA  *Var0
  440:  		Call  SetActorYaw   ( .Actor:Self  180` )
  454:  		Call  SetPartYaw    ( .Actor:Self 00000001  180` )
  46C:  		Call  SetAnimation  ( .Actor:Self 00000001 00A30007 )
  484:  		Call  GetActorPos   ( .Actor:Self *Var0 *Var1 *Var2 )
  4A0:  		Sub   *Var1  00000018
  4B0:  		Call  SetActorPos   ( .Actor:Self *Var0 *Var1 *Var2 )
  4CC:  		Call  SetActorJumpGravity   ( .Actor:Self *Fixed[0.8] )
  4E0:  		Call  GetActorPos   ( .Actor:Self *Var0 *Var1 *Var2 )
  4FC:  		Set   *Var1  00000000
  50C:  		Call  SetGoalPos    ( .Actor:Self *Var0 *Var1 *Var2 )
  528:  		Call  JumpToGoal    ( .Actor:Self  15` .False .True .False )
  548:  		If  *VarA  ==  .HitResult:Lucky % 5
  558:  			Call  EnemyTestTarget   ( .Actor:Self *Var0 ~Flags:DamageType:TriggerLucky 00000000 00000000 00000000 )
  57C:  		EndIf
  584:  		Call  ResetAllActorSounds   ( .Actor:Self )
  594:  		Add   *Var0  0000001E
  5A4:  		Call  SetGoalPos    ( .Actor:Self *Var0 *Var1 *Var2 )
  5C0:  		Call  JumpToGoal    ( .Actor:Self  15` .False .True .False )
  5E0:  		Thread
  5E8:  			Wait  5`
  5F4:  			Call  SetAnimation  ( .Actor:Self 00000001 00A30000 )
  60C:  		EndThread
  614:  		Add   *Var0  00000014
  624:  		Call  SetGoalPos    ( .Actor:Self *Var0 *Var1 *Var2 )
  640:  		Call  JumpToGoal    ( .Actor:Self  8` .False .True .False )
  660:  		Wait  8`
  66C:  		Call  UseBattleCamPreset    ( 00000002 )
  67C:  		Call  YieldTurn ( )
  688:  		Call  SetGoalToHome ( .Actor:Self )
  698:  		Call  SetActorSpeed ( .Actor:Self *Fixed[6.0] )
  6AC:  		Call  SetAnimation  ( .Actor:Self 00000001 00A30004 )
  6C4:  		Call  AddActorDecoration    ( .Actor:Self 00000001 00000000 .Decoration:Sweat )
  6E0:  		Call  RunToGoal     ( .Actor:Self  0` .False )
  6F8:  		Call  SetAnimation  ( .Actor:Self 00000001 00A30001 )
  710:  		Call  RemoveActorDecoration ( .Actor:Self 00000001 00000000 )
  728:  		Call  SetActorYaw   ( .Actor:Self  0` )
  73C:  		Call  EnableIdleScript      ( .Actor:Self 00000001 )
  750:  		Call  UseIdleAnimation      ( .Actor:Self .True )
  764:  		Return
  76C:  	EndCaseGroup
  774:  EndSwitch
  77C:  Call  SetActorYaw   ( .Actor:Self  180` )
  790:  Call  SetAnimation  ( .Actor:Self 00000001 00A30007 )
  7A8:  Call  GetActorPos   ( .Actor:Self *Var0 *Var1 *Var2 )
  7C4:  Sub   *Var1  00000018
  7D4:  Call  SetActorPos   ( .Actor:Self *Var0 *Var1 *Var2 )
  7F0:  Call  SetActorJumpGravity   ( .Actor:Self *Fixed[0.8] )
  804:  Call  SetGoalToTarget       ( .Actor:Self )
  814:  Call  GetGoalPos    ( .Actor:Self *Var3 *Var4 *Var5 )
  830:  Call  GetActorPos   ( .Actor:Self *Var0 *Var1 *Var2 )
  84C:  Set   *Var1  *Var4
  85C:  Call  SetGoalPos    ( .Actor:Self *Var0 *Var1 *Var2 )
  878:  Call  JumpToGoal    ( .Actor:Self  15` .False .True .False )
  898:  Call  ResetAllActorSounds   ( .Actor:Self )
  8A8:  Wait  2`
  8B4:  Call  EnemyDamageTarget     ( .Actor:Self *Var0 ~Flags:DamageType:0 0000FFFF 00000000 00000003 00000020 )
  8DC:  Switch  *Var0
  8E8:  	CaseOR  ==  .HitResult:Hit % 0
  8F4:  	CaseOR  ==  .HitResult:QuakeImmune % 2
  900:  		Call  UseBattleCamPreset    ( 00000002 )
  910:  		Call  GetActorPos   ( .Actor:Self *Var0 *Var1 *Var2 )
  92C:  		Add   *Var0  0000001E
  93C:  		Set   *Var1  00000000
  94C:  		Call  SetGoalPos    ( .Actor:Self *Var0 *Var1 *Var2 )
  968:  		Call  JumpToGoal    ( .Actor:Self  15` .False .True .False )
  988:  		Thread
  990:  			Wait  5`
  99C:  			Call  SetAnimation  ( .Actor:Self 00000001 00A30000 )
  9B4:  		EndThread
  9BC:  		Add   *Var0  00000014
  9CC:  		Call  SetGoalPos    ( .Actor:Self *Var0 *Var1 *Var2 )
  9E8:  		Call  JumpToGoal    ( .Actor:Self  8` .False .True .False )
  A08:  		Wait  8`
  A14:  		Call  YieldTurn ( )
  A20:  		SetConst  *Var0  00000001
  A30:  		SetConst  *Var1  00A30004
  A40:  		ExecWait  DoReturnHome
  A4C:  		Call  SetAnimation  ( .Actor:Self 00000001 00A30001 )
  A64:  	EndCaseGroup
  A6C:  EndSwitch
  A74:  Label  A
  A80:  Call  EnableIdleScript  ( .Actor:Self 00000001 )
  A94:  Call  UseIdleAnimation  ( .Actor:Self .True )
  AA8:  Return
  AB0:  End
}

#new:Script $Script_TakeTurn_Chan
{
    0:  Call  UseIdleAnimation  ( .Actor:Self .False )
   14:  Call  EnableIdleScript  ( .Actor:Self 00000000 )
   28:  Call  GetActorVar       ( .Actor:Self 00000008 *Var0 )
   40:  If  *Var0  ==  00000002
   50:  	Call  GetActorVar   ( .Actor:Self 00000009 *Var0 )
   68:  	Sub   *Var0  00000001
   78:  	If  *Var0  >  00000000
   88:  		Call  SetActorVar   ( .Actor:Self 00000009 *Var0 )
   A0:  		Call  AddActorDecoration    ( .Actor:Self 00000001 00000000 .Decoration:Sweat )
   BC:  		Wait  30`
   C8:  		Call  RemoveActorDecoration ( .Actor:Self 00000001 00000000 )
   E0:  		Call  UseBattleCamPreset    ( 00000002 )
   F0:  	Else
   F8:  		Call  AddActorDecoration    ( .Actor:Self 00000001 00000000 .Decoration:Sweat )
  114:  		Wait  20`
  120:  		Call  RemoveActorDecoration ( .Actor:Self 00000001 00000000 )
  138:  		SetConst  *Var0  00000001
  148:  		SetConst  *Var1  00A30002
  158:  		SetConst  *Var2  00A30001
  168:  		ExecWait  8029BBB4
  174:  		Call  SetActorYaw       ( .Actor:Self  0` )
  188:  		Call  SetActorVar       ( .Actor:Self 00000008 00000001 )
  1A0:  		Call  SetTargetOffset   ( .Actor:Self 00000001  0`  16` )
  1BC:  		Call  8027D4C8  ( FFFFFF81 00000001 FFFFFFFF FFFFFFF7 )
  1D8:  		Call  SetDefenseTable   ( .Actor:Self 00000001 $DefenseTable_80219D50 )
  1F0:  		Call  SetIdleAnimations ( .Actor:Self 00000001 $IdleAnimations_80219E70 )
  208:  		Call  BindIdle  ( .Actor:Self $Script_Idle_8021A11C )
  21C:  		Call  SetActorFlagBits  ( .Actor:Self 00000400 .False )
  234:  	EndIf
  23C:  	Call  EnableIdleScript  ( .Actor:Self 00000001 )
  250:  	Call  UseIdleAnimation  ( .Actor:Self .True )
  264:  	Return
  26C:  EndIf
  274:  Call  SetTargetActor    ( .Actor:Self .Actor:Player )
  288:  Call  UseBattleCamPreset    ( 0000003F )
  298:  Call  BattleCamTargetActor  ( .Actor:Self )
  2A8:  Call  8024ECF8  ( FFFFFFFF 00000001 00000000 )
  2C0:  Call  SetAnimation      ( .Actor:Self 00000001 00A3000C )
  2D8:  Wait  10`
  2E4:  Call  SetAnimation      ( .Actor:Self 00000001 00A30009 )
  2FC:  Thread
  304:  	Call  GetActorPos   ( .Actor:Self *Var0 *Var1 *Var2 )
  320:  	Call  PlayEffect    ( ~FX:SmokeImpact:Small *Var0 *Var1 *Var2 00000020 00000004 00000000 0000000A 00000000 00000000 00000000 00000000 00000000 )
  364:  	Wait  10`
  370:  	Call  PlayEffect    ( ~FX:SmokeImpact:Small *Var0 *Var1 *Var2 00000020 00000004 00000000 0000000A 00000000 00000000 00000000 00000000 00000000 )
  3B4:  	Wait  5`
  3C0:  	Call  PlayEffect    ( ~FX:SmokeImpact:Small *Var0 *Var1 *Var2 00000020 00000004 00000000 0000000A 00000000 00000000 00000000 00000000 00000000 )
  404:  EndThread
  40C:  Call  PlaySoundAtActor  ( .Actor:Self 00002021 )
  420:  Call  SetAnimation      ( .Actor:Self 00000001 00A30005 )
  438:  Wait  20`
  444:  Call  SetActorSounds    ( .Actor:Self .ActorSound:Walk 00000000 00000000 )
  460:  Call  PlaySoundAtActor  ( .Actor:Self 000020D3 )
  474:  Call  EnemyTestTarget   ( .Actor:Self *Var0 ~Flags:DamageType:0 00000000 00000002 00000010 )
  498:  Switch  *Var0
  4A4:  	CaseOR  ==  .HitResult:Miss % 6
  4B0:  	CaseOR  ==  .HitResult:Lucky % 5
  4BC:  		Set   *VarA  *Var0
  4CC:  		Thread
  4D4:  			Loop
  4E0:  				Call  GetActorPos   ( .Actor:Player *Var0 *Var1 *Var2 )
  4FC:  				Add   *Var0  0000001E
  50C:  				Call  GetActorPos   ( .Actor:Self *Var3 *Var4 *Var5 )
  528:  				If  *Var0  >  *Var3
  538:  					BreakLoop
  540:  				EndIf
  548:  				Wait  1`
  554:  			EndLoop
  55C:  			Call  UseBattleCamPreset    ( 00000001 )
  56C:  			If  *VarA  ==  .HitResult:Lucky % 5
  57C:  				Call  EnemyTestTarget   ( .Actor:Self *Var0 ~Flags:DamageType:TriggerLucky 00000000 00000000 00000000 )
  5A0:  			EndIf
  5A8:  			Wait  15`
  5B4:  			Call  UseBattleCamPreset    ( 00000002 )
  5C4:  		EndThread
  5CC:  		Call  SetGoalToTarget       ( .Actor:Self )
  5DC:  		Call  AddGoalPos    ( .Actor:Self  -150`  0`  0` )
  5F8:  		Call  SetActorSpeed ( .Actor:Self *Fixed[14.0] )
  60C:  		Call  RunToGoal     ( .Actor:Self  0` .False )
  624:  		Wait  15`
  630:  		Call  YieldTurn ( )
  63C:  		Call  ResetAllActorSounds   ( .Actor:Self )
  64C:  		Call  AddActorDecoration    ( .Actor:Self 00000001 00000000 .Decoration:Sweat )
  668:  		Call  SetGoalToHome ( .Actor:Self )
  678:  		Call  GetGoalPos    ( .Actor:Self *Var0 *Var1 *Var2 )
  694:  		Add   *Var0  000000C8
  6A4:  		Call  SetActorPos   ( .Actor:Self *Var0 *Var1 *Var2 )
  6C0:  		Call  SetActorSpeed ( .Actor:Self *Fixed[10.0] )
  6D4:  		Call  RunToGoal     ( .Actor:Self  0` .False )
  6EC:  		Wait  10`
  6F8:  		Call  SetAnimation  ( .Actor:Self 00000001 00A3000D )
  710:  		Wait  10`
  71C:  		Call  RemoveActorDecoration ( .Actor:Self 00000001 00000000 )
  734:  		Call  EnableIdleScript      ( .Actor:Self 00000001 )
  748:  		Call  UseIdleAnimation      ( .Actor:Self .True )
  75C:  		Return
  764:  	EndCaseGroup
  76C:  EndSwitch
  774:  Call  SetGoalToTarget   ( .Actor:Self )
  784:  Call  SetActorSpeed     ( .Actor:Self *Fixed[14.0] )
  798:  Call  RunToGoal ( .Actor:Self  0` .False )
  7B0:  Wait  2`
  7BC:  Call  EnemyDamageTarget ( .Actor:Self *Var0 ~Flags:DamageType:0 0000FFFF 00000000 00000002 00000020 )
  7E4:  Switch  *Var0
  7F0:  	CaseOR  ==  .HitResult:Hit % 0
  7FC:  	CaseOR  ==  .HitResult:QuakeImmune % 2
  808:  		Call  UseBattleCamPreset    ( 00000002 )
  818:  		Call  GetGoalPos    ( .Actor:Self *Var0 *Var1 *Var2 )
  834:  		Add   *Var0  00000028
  844:  		Set   *Var1  00000000
  854:  		Call  SetActorJumpGravity   ( .Actor:Self *Fixed[1.8] )
  868:  		Call  SetGoalPos    ( .Actor:Self *Var0 *Var1 *Var2 )
  884:  		Call  JumpToGoal    ( .Actor:Self  10` .False .True .False )
  8A4:  		Add   *Var0  0000001E
  8B4:  		Call  SetGoalPos    ( .Actor:Self *Var0 *Var1 *Var2 )
  8D0:  		Call  JumpToGoal    ( .Actor:Self  8` .False .True .False )
  8F0:  		Add   *Var0  00000014
  900:  		Call  SetGoalPos    ( .Actor:Self *Var0 *Var1 *Var2 )
  91C:  		Call  JumpToGoal    ( .Actor:Self  6` .False .True .False )
  93C:  		Call  SetAnimation  ( .Actor:Self 00000001 00A30001 )
  954:  		Wait  8`
  960:  		Call  YieldTurn ( )
  96C:  		Call  ResetAllActorSounds   ( .Actor:Self )
  97C:  		SetConst  *Var0  00000001
  98C:  		SetConst  *Var1  00A30004
  99C:  		ExecWait  DoReturnHome
  9A8:  		Call  SetAnimation  ( .Actor:Self 00000001 00A30001 )
  9C0:  	EndCaseGroup
  9C8:  EndSwitch
  9D0:  Call  EnableIdleScript  ( .Actor:Self 00000001 )
  9E4:  Call  UseIdleAnimation  ( .Actor:Self .True )
  9F8:  Return
  A00:  End
}

#new:Script $Script_Init_8021CCDC
{
    0:  ExecWait  $Script_80219F4C
    C:  Call  BindHandleEvent   ( .Actor:Self $Script_HandleEvent_8021D0CC )
   20:  Call  BindNextTurn  ( .Actor:Self $Script_NextTurn_8021CD7C )
   34:  Call  SetActorVar   ( .Actor:Self 00000000 00000000 )
   4C:  Call  SetActorVar   ( .Actor:Self 00000001 00000000 )
   64:  Call  SetActorVar   ( .Actor:Self 00000002 00000000 )
   7C:  Call  SetBattleFlagBits ( 00800000 .True )
   90:  Return
   98:  End
}

#new:Script $Script_NextTurn_8021CD7C
{
    0:  Call  UseIdleAnimation  ( .Actor:Self .False )
   14:  Call  EnableIdleScript  ( .Actor:Self 00000000 )
   28:  Call  GetBattlePhase    ( *Var0 )
   38:  Switch  *Var0
   44:  	Case  ==  0000000A
   50:  		Call  GetActorVar   ( .Actor:Self 00000000 *Var0 )
   68:  		If  *Var0  ==  00000000
   78:  			Call  UseBattleCamPreset    ( 00000002 )
   88:  			Call  MoveBattleCamOver (  10` )
   98:  			Call  ActorSpeak        ( 0002001F .Actor:Self 00000001 00A30004 00A30003 ) % Mario! Here comes Chan the man!
   B8:  			Call  SetActorVar       ( .Actor:Self 00000000 00000001 )
   D0:  		EndIf
   D8:  	Case  ==  0000000C
   E4:  		Call  GetActorVar   ( .Actor:Self 00000008 *Var0 )
   FC:  		If  *Var0  ==  00000002
  10C:  			BreakCase
  114:  		EndIf
  11C:  		Call  GetStatusFlags    ( .Actor:Self *Var0 )
  130:  		If  *Var0  &  ~Flags:StatusFlags:Sleep|Paralyze|Poison|Dizzy|Stone|Stop:A % 37100A
  140:  			BreakCase
  148:  		EndIf
  150:  		SetConst  *VarA  00A30004
  160:  		SetConst  *VarB  00A30003
  170:  		Call  GetActorVar   ( .Actor:Self 00000008 *Var0 )
  188:  		If  *Var0  ==  00000002
  198:  			SetConst  *VarA  00A30007
  1A8:  			SetConst  *VarB  00A30002
  1B8:  		EndIf
  1C0:  		Call  GetActorHP    ( .Actor:Self *Var0 )
  1D4:  		Call  GetEnemyMaxHP ( .Actor:Self *Var1 )
  1E8:  		Div   *Var1  00000002
  1F8:  		If  *Var0  <=  *Var1
  208:  			Call  GetActorVar   ( .Actor:Self 00000002 *Var0 )
  220:  			If  *Var0  ==  00000000
  230:  				Call  UseBattleCamPreset    ( 00000002 )
  240:  				Call  MoveBattleCamOver (  10` )
  250:  				Call  ActorSpeak        ( 00020021 .Actor:Self 00000001 *VarA *VarB ) % Hmmm... You have some skills.
  270:  				Call  SetActorVar       ( .Actor:Self 00000002 00000001 )
  288:  				BreakCase
  290:  			EndIf
  298:  		EndIf
  2A0:  		Call  GetPlayerHP   ( *Var0 )
  2B0:  		If  *Var0  <=  00000005
  2C0:  			Call  UseBattleCamPreset    ( 00000002 )
  2D0:  			Call  MoveBattleCamOver     (  10` )
  2E0:  			Call  ActorSpeak    ( 00020022 .Actor:Self 00000001 *VarA *VarB ) % Mario, prepare to be finished!
  300:  			BreakCase
  308:  		EndIf
  310:  EndSwitch
  318:  Call  EnableIdleScript  ( .Actor:Self 00000001 )
  32C:  Call  UseIdleAnimation  ( .Actor:Self .True )
  340:  Return
  348:  End
}

#new:Script $Script_HandleEvent_8021D0CC
{
    0:  ExecWait  $Script_HandleEvent_8021AAB8
    C:  Call  GetLastEvent  ( .Actor:Self *Var0 )
   20:  Switch  *Var0
   2C:  	Case  ==  .Event:FlipTrigger % D
   38:  		Call  GetBattleFlags    ( *Var0 )
   48:  		If  *Var0  !&  00000020
   58:  			BreakCase
   60:  		EndIf
   68:  		Call  GetStatusFlags    ( .Actor:Self *Var0 )
   7C:  		If  *Var0  &  ~Flags:StatusFlags:Sleep|Paralyze|Poison|Dizzy|Shrink|Stone|Stop % 3F1000
   8C:  			BreakCase
   94:  		EndIf
   9C:  		Set   *Flag[00]  .False
   AC:  		Call  GetMenuSelection  ( *Var0 *Var1 *Var2 )
   C4:  		Switch  *Var0
   D0:  			CaseOR  ==  00000001
   DC:  			CaseOR  ==  00000000
   E8:  				Set   *Flag[00]  .True
   F8:  			EndCaseGroup
  100:  		EndSwitch
  108:  		If  *Flag[00]  ==  .False
  118:  			BreakCase
  120:  		EndIf
  128:  		Call  UseIdleAnimation  ( .Actor:Self .False )
  13C:  		Call  EnableIdleScript  ( .Actor:Self 00000000 )
  150:  		Wait  30`
  15C:  		Call  GetActorVar       ( .Actor:Self 00000008 *Var0 )
  174:  		If  *Var0  ==  00000002
  184:  			Call  GetActorVar   ( .Actor:Self 00000001 *Var0 )
  19C:  			Add   *Var0  00000001
  1AC:  			Switch  *Var0
  1B8:  				Case  ==  00000001
  1C4:  					Call  UseBattleCamPreset    ( 00000002 )
  1D4:  					Call  MoveBattleCamOver     (  10` )
  1E4:  					Call  ActorSpeak    ( 00020020 .Actor:Self 00000001 00A30007 00A30002 ) % Ow... How dishonorable!
  204:  				Case  ==  00000002
  210:  				Case  ==  00000003
  21C:  					Set   *Var0  00000000
  22C:  			EndSwitch
  234:  			Call  SetActorVar   ( .Actor:Self 00000001 *Var0 )
  24C:  		EndIf
  254:  		Call  EnableIdleScript  ( .Actor:Self 00000001 )
  268:  		Call  UseIdleAnimation  ( .Actor:Self .True )
  27C:  EndSwitch
  284:  Return
  28C:  End
}

#new:IdleAnimations $IdleAnimations_8021D360
{
	.Status:Normal    00A40002
	.Status:Stone     00A40000
	.Status:Sleep     00A4000E
	.Status:Poison    00A40002
	.Status:Stop      00A40000
	.Status:Static    00A40002
	.Status:Paralyze  00A40000
	.Status:Dizzy     00A4000F
	.Status:Dizzy     00A4000F
	.Status:End
}

#new:IdleAnimations $IdleAnimations_8021D3AC
{
	.Status:Normal    00A4000B
	.Status:End
}

MISSING: 8021D3B8 to 8021D3C4 (00469848 to 00469854)
00000001 00A40004 00000000

#new:DefenseTable $DefenseTable_8021D3C4
{
	.Element:Normal 00000000
	.Element:End
}

#new:StatusTable $StatusTable_8021D3D0
{
	.Status:Normal      0`
	.Status:Default     0`
	.Status:Sleep      60`
	.Status:Poison      0`
	.Status:Frozen      0`
	.Status:Dizzy      75`
	.Status:Fear        0`
	.Status:Static     75`
	.Status:Paralyze   75`
	.Status:Shrink     75`
	.Status:Stop       75`
	.Status:DefaultTurnMod    0`
	.Status:SleepTurnMod     -1`
	.Status:PoisonTurnMod     0`
	.Status:FrozenTurnMod     0`
	.Status:DizzyTurnMod     -1`
	.Status:FearTurnMod       0`
	.Status:StaticTurnMod    -1`
	.Status:ParalyzeTurnMod  -1`
	.Status:ShrinkTurnMod    -1`
	.Status:StopTurnMod      -1`
	.Status:End
}

#new:PartsTable $PartsTable_8021D47C
{
	00800000 01000000 FB1900FF $IdleAnimations_8021D360 $DefenseTable_8021D3C4 00000000 00000000 FEF60000 00000000
}

#new:Actor $Lee
{
	% stats
	[Index]        7Eb
	[Level]         0`b
	[MaxHP]        20`b
	[Coins]         0`b
	[Flags]       00000000
	[StatusTable] $StatusTable_8021D3D0
	% ai
	[PartsCount]    1`s
	[PartsTable]  $PartsTable_8021D47C
	[Script]      $Script_Init_8021D4C8
	% move effectiveness
	[Escape]      100`b
	[Item]          0`b
	[AirLift]       0`b
	[Hurricane]     0`b % Bow's "Spook" as well
	[UpAndAway]     0`b
	[PowerBounce]  90`b
	[SpinSmash]     0`b % weight (0-4)
	% ui positions
	[Size]         36`b  36`b % width height
	[HealthBar]     0`b   0`b % dx dy
	[StatusTurn]  -10`b  20`b % dx dy
	[StatusIcon]   10`b  20`b % dx dy
}

#new:Script $Script_Init_8021D4C8
{
    0:  Call  BindTakeTurn  ( .Actor:Self $Script_TakeTurn_80229F9C )
   14:  Call  BindIdle      ( .Actor:Self $Script_Idle_8021D5B4 )
   28:  Call  BindHandleEvent   ( .Actor:Self $Script_HandleEvent_8021D600 )
   3C:  Call  BindNextTurn  ( .Actor:Self $Script_NextTurn_8022A038 )
   50:  Call  SetActorVar   ( .Actor:Self 00000008 00000000 )
   68:  Call  SetActorVar   ( .Actor:Self 00000000 00000000 )
   80:  Thread
   88:  	Call  8026BF48  ( 00000001 )
   98:  	ExecWait  $Script_CopyPartner
   A4:  	Call  8026BF48  ( 00000000 )
   B4:  EndThread
   BC:  Call  $Function_802180D0 ( )
   C8:  Call  SetBattleFlagBits ( 00800000 .True )
   DC:  Return
   E4:  End
}

#new:Script $Script_Idle_8021D5B4
{
    0:  Return
    8:  End
}

#new:Script $Script_8021D5C4
{
    0:  SetConst  *Var0  00000001
   10:  SetConst  *Var1  00A40004
   20:  ExecWait  DoReturnHome
   2C:  Return
   34:  End
}

#new:Script $Script_HandleEvent_8021D600
{
    0:  Call  SetActorVar       ( .Actor:Self 00000000 00000001 )
   18:  Call  UseIdleAnimation  ( .Actor:Self .False )
   2C:  Call  EnableIdleScript  ( .Actor:Self 00000000 )
   40:  Call  GetLastEvent      ( .Actor:Self *Var0 )
   54:  Switch  *Var0
   60:  	CaseOR  ==  .Event:HitCombo % 9
   6C:  	CaseOR  ==  .Event:Hit % A
   78:  		SetConst  *Var0  00000001
   88:  		SetConst  *Var1  00A4000B
   98:  		ExecWait  DoNormalHit
   A4:  	EndCaseGroup
   AC:  	Case  ==  .Event:BurnHit % E
   B8:  		SetConst  *Var0  00000001
   C8:  		SetConst  *Var1  00A4000D
   D8:  		SetConst  *Var2  FFFFFFFF
   E8:  		ExecWait  DoBurnHit
   F4:  	Case  ==  .Event:BurnDeath % 24
  100:  		SetConst  *Var0  00000001
  110:  		SetConst  *Var1  00A4000D
  120:  		SetConst  *Var2  FFFFFFFF
  130:  		ExecWait  DoBurnHit
  13C:  		SetConst  *Var0  00000001
  14C:  		SetConst  *Var1  00A4000D
  15C:  		ExecWait  DoDeath
  168:  		Return
  170:  	Case  ==  .Event:SpinSmashHit % B
  17C:  		SetConst  *Var0  00000001
  18C:  		SetConst  *Var1  00A4000B
  19C:  		ExecWait  DoSpinSmashHit
  1A8:  	Case  ==  .Event:SpinSmashDeath % 21
  1B4:  		SetConst  *Var0  00000001
  1C4:  		SetConst  *Var1  00A4000B
  1D4:  		ExecWait  DoSpinSmashHit
  1E0:  		SetConst  *Var0  00000001
  1F0:  		SetConst  *Var1  00A4000B
  200:  		ExecWait  DoDeath
  20C:  		Return
  214:  	Case  ==  .Event:ShockHit % 2F
  220:  		Call  ResetAllActorSounds   ( .Actor:Self )
  230:  		SetConst  *Var0  00000001
  240:  		SetConst  *Var1  00A4000B
  250:  		ExecWait  DoShockHit
  25C:  		SetConst  *Var0  00000001
  26C:  		SetConst  *Var1  00A4000B
  27C:  		ExecWait  DoJumpBack
  288:  		ExecWait  $Script_8021D5C4
  294:  	Case  ==  .Event:ShockDeath % 26
  2A0:  		SetConst  *Var0  00000001
  2B0:  		SetConst  *Var1  00A4000B
  2C0:  		ExecWait  DoShockHit
  2CC:  		SetConst  *Var0  00000001
  2DC:  		SetConst  *Var1  00A4000B
  2EC:  		ExecWait  DoDeath
  2F8:  		Return
  300:  	CaseOR  ==  00000017 % 17
  30C:  	CaseOR  ==  .Event:Immune % 19
  318:  	CaseOR  ==  .Event:AirLiftFailed % 1F
  324:  		SetConst  *Var0  00000001
  334:  		SetConst  *Var1  00A40002
  344:  		ExecWait  DoImmune
  350:  	EndCaseGroup
  358:  	Case  ==  .Event:Death % 20
  364:  		SetConst  *Var0  00000001
  374:  		SetConst  *Var1  00A4000B
  384:  		ExecWait  DoNormalHit
  390:  		Wait  10`
  39C:  		SetConst  *Var0  00000001
  3AC:  		SetConst  *Var1  00A4000B
  3BC:  		ExecWait  DoDeath
  3C8:  		Return
  3D0:  	Case  ==  .Event:RecoverStatus % 31
  3DC:  		SetConst  *Var0  00000001
  3EC:  		SetConst  *Var1  00A40002
  3FC:  		ExecWait  DoRecover
  408:  	Case  ==  .Event:ScareAway % 39
  414:  		SetConst  *Var0  00000001
  424:  		SetConst  *Var1  00A40004
  434:  		SetConst  *Var2  00A4000B
  444:  		ExecWait  DoScareAway
  450:  		Return
  458:  	Case  ==  .Event:BeginAirLift % 3A
  464:  		SetConst  *Var0  00000001
  474:  		SetConst  *Var1  00A40004
  484:  		ExecWait  DoAirLift
  490:  	Case  ==  .Event:BlowAway % 16
  49C:  		SetConst  *Var0  00000001
  4AC:  		SetConst  *Var1  00A4000B
  4BC:  		ExecWait  DoBlowAway
  4C8:  		Return
  4D0:  	Default
  4D8:  EndSwitch
  4E0:  Call  EnableIdleScript  ( .Actor:Self 00000001 )
  4F4:  Call  UseIdleAnimation  ( .Actor:Self .True )
  508:  Return
  510:  End
}

#new:Script $Script_FlyingTackle
{
    0:  Call  UseIdleAnimation  ( .Actor:Self .False )
   14:  Call  EnableIdleScript  ( .Actor:Self 00000000 )
   28:  Call  SetActorVar       ( .Actor:Self 00000008 00000000 )
   40:  Call  SetTargetActor    ( .Actor:Self .Actor:Player )
   54:  Call  UseBattleCamPreset    ( 0000003F )
   64:  Call  BattleCamTargetActor  ( .Actor:Self )
   74:  Call  8024ECF8  ( FFFFFFFF 00000001 00000000 )
   8C:  Call  SetAnimation      ( .Actor:Self 00000001 00A40008 )
   A4:  Wait  20`
   B0:  Call  SetActorSounds    ( .Actor:Self .ActorSound:Jump 000002CB 00000000 )
   CC:  Call  EnemyTestTarget   ( .Actor:Self *Var0 ~Flags:DamageType:0 00000000 00000001 00000010 )
   F0:  Switch  *Var0
   FC:  	CaseOR  ==  .HitResult:Miss % 6
  108:  	CaseOR  ==  .HitResult:Lucky % 5
  114:  		Set   *VarA  *Var0
  124:  		Call  UseBattleCamPreset    ( 00000002 )
  134:  		Call  MoveBattleCamOver (  20` )
  144:  		Call  SetAnimation      ( .Actor:Self 00000001 00A40009 )
  15C:  		Call  SetGoalToTarget   ( .Actor:Self )
  16C:  		Call  AddGoalPos        ( .Actor:Self  -100`  0`  0` )
  188:  		Call  SetActorJumpGravity   ( .Actor:Self *Fixed[0.3] )
  19C:  		Call  JumpToGoal        ( .Actor:Self  17` .False .True .False )
  1BC:  		If  *VarA  ==  .HitResult:Lucky % 5
  1CC:  			Call  EnemyTestTarget   ( .Actor:Self *Var0 ~Flags:DamageType:TriggerLucky 00000000 00000000 00000000 )
  1F0:  		EndIf
  1F8:  		Wait  10`
  204:  		Call  GetActorPos       ( .Actor:Self *Var0 *Var1 *Var2 )
  220:  		Call  SetActorPos       ( .Actor:Self *Var0  0` *Var2 )
  23C:  		Call  SetAnimation      ( .Actor:Self 00000001 00A40002 )
  254:  		Call  ResetActorSounds  ( .Actor:Self .ActorSound:Jump )
  268:  		Wait  15`
  274:  		Call  YieldTurn ( )
  280:  		Call  SetActorYaw       ( .Actor:Self  180` )
  294:  		Call  AddActorDecoration    ( .Actor:Self 00000001 00000000 .Decoration:Sweat )
  2B0:  		ExecWait  $Script_8021D5C4
  2BC:  		Call  RemoveActorDecoration ( .Actor:Self 00000001 00000000 )
  2D4:  		Call  SetActorYaw       ( .Actor:Self  0` )
  2E8:  		Call  EnableIdleScript  ( .Actor:Self 00000001 )
  2FC:  		Call  UseIdleAnimation  ( .Actor:Self .True )
  310:  		Return
  318:  	EndCaseGroup
  320:  EndSwitch
  328:  Call  SetAnimation      ( .Actor:Self 00000001 00A40009 )
  340:  Call  SetGoalToTarget   ( .Actor:Self )
  350:  Call  GetStatusFlags    ( .Actor:Self *VarA )
  364:  If  *VarA  &  ~Flags:StatusFlags:Shrink % 80000
  374:  	Call  AddGoalPos    ( .Actor:Self *Fixed[4.0] *Fixed[-6.0]  0` )
  390:  Else
  398:  	Call  AddGoalPos    ( .Actor:Self  10`  -15`  0` )
  3B4:  EndIf
  3BC:  Call  SetActorJumpGravity   ( .Actor:Self *Fixed[0.3] )
  3D0:  Call  JumpToGoal        ( .Actor:Self  12` .False .True .False )
  3F0:  Wait  2`
  3FC:  Call  SetGoalToTarget   ( .Actor:Self )
  40C:  Call  EnemyDamageTarget ( .Actor:Self *Var0 ~Flags:DamageType:0 00000000 00000000 00000005 00000020 )
  434:  Switch  *Var0
  440:  	CaseOR  ==  .HitResult:Hit % 0
  44C:  	CaseOR  ==  .HitResult:QuakeImmune % 2
  458:  		Call  UseBattleCamPreset    ( 00000002 )
  468:  		Call  ResetActorSounds      ( .Actor:Self .ActorSound:Jump )
  47C:  		Call  SetAnimation  ( .Actor:Self 00000001 00A4000A )
  494:  		Call  GetActorPos   ( .Actor:Self *Var0 *Var1 *Var2 )
  4B0:  		Call  SetActorJumpGravity   ( .Actor:Self *Fixed[0.5] )
  4C4:  		Add   *Var0  0000001E
  4D4:  		Call  SetGoalPos    ( .Actor:Self *Var0  0` *Var2 )
  4F0:  		Call  JumpToGoal    ( .Actor:Self  20` .False .True .False )
  510:  		Add   *Var0  00000014
  520:  		Call  SetGoalPos    ( .Actor:Self *Var0  0` *Var2 )
  53C:  		Call  JumpToGoal    ( .Actor:Self  10` .False .True .False )
  55C:  		Wait  10`
  568:  		Call  YieldTurn ( )
  574:  		ExecWait  $Script_8021D5C4
  580:  	EndCaseGroup
  588:  EndSwitch
  590:  Call  EnableIdleScript  ( .Actor:Self 00000001 )
  5A4:  Call  UseIdleAnimation  ( .Actor:Self .True )
  5B8:  Return
  5C0:  End
}

#new:Script $Script_8021E0E0
{
    0:  Call  GetActorVar   ( .Actor:Self 00000000 *Var0 )
   18:  Call  RemoveActor   ( *Var0 )
   28:  Return
   30:  End
}

#new:Script $Script_8021E118
{
    0:  Call  UseIdleAnimation  ( .Actor:Self .False )
   14:  Call  8027D32C  ( FFFFFF81 )
   24:  Call  SetAnimation      ( .Actor:Self *Var0 *Var1 )
   3C:  Wait  30`
   48:  Call  GetActorVar       ( .Actor:Self 00000000 *VarA )
   60:  Call  UseIdleAnimation  ( *VarA .False )
   74:  Call  8027D32C  ( *VarA )
   84:  Call  CopyStatusEffects ( .Actor:Self *VarA )
   98:  Call  PlaySoundAtActor  ( .Actor:Self .Sound:SmokeBurst )
   AC:  Thread
   B4:  	Call  GetActorPos   ( .Actor:Self *Var0 *Var1 *Var2 )
   D0:  	Add   *Var1  00000003
   E0:  	Add   *Var2  00000005
   F0:  	Loop  00000003
   FC:  		Call  PlayEffect    ( ~FX:BigSmokePuff *Var0 *Var1 *Var2 00000000 00000000 00000000 00000000 00000000 00000000 00000000 00000000 00000000 00000000 )
  140:  		Wait  3`
  14C:  	EndLoop
  154:  EndThread
  15C:  Wait  5`
  168:  Call  GetActorHP        ( .Actor:Self *VarB )
  17C:  Call  SetEnemyHP        ( *VarA *VarB )
  190:  Call  CopyBuffs ( .Actor:Self *VarA )
  1A4:  Call  GetActorPos       ( .Actor:Self *VarB *VarC *VarD )
  1C0:  Call  SetActorPos       ( *VarA *VarB *VarC *VarD )
  1DC:  Call  SetPartFlagBits   ( *VarA 00000001 00800000 .True )
  1F8:  Call  SetPartFlagBits   ( *VarA 00000001 00020001 .False )
  214:  Call  SetActorFlagBits  ( *VarA 00400004 .False )
  22C:  Call  SetActorFlagBits  ( .Actor:Self 00000004 .True )
  244:  Call  SetActorVar       ( *VarA 00000008 00000002 )
  25C:  Call  SetPartFlagBits   ( .Actor:Self *Var0 00000001 .True )
  278:  Call  SetIdleAnimations ( *VarA 00000001 $IdleAnimations_8021D3AC )
  290:  Call  SetAnimation      ( *VarA 00000001 00A4000B )
  2A8:  Wait  30`
  2B4:  Call  UseBattleCamPreset    ( 00000002 )
  2C4:  Call  GetActorPos       ( *VarA *VarB *VarC *VarD )
  2E0:  If  *VarC  >  00000000
  2F0:  	Set   *VarC  00000000
  300:  	Call  SetActorJumpGravity   ( *VarA *Fixed[0.5] )
  314:  	Call  SetActorSounds        ( *VarA .ActorSound:Jump 00000301 00000000 )
  330:  	Call  SetGoalPos    ( *VarA *VarB *VarC *VarD )
  34C:  	Call  JumpToGoal    ( *VarA  15` .False .True .False )
  36C:  	Call  ResetActorSounds      ( *VarA .ActorSound:Jump )
  380:  	Call  SetGoalPos    ( *VarA *VarB *VarC *VarD )
  39C:  	Call  JumpToGoal    ( *VarA  10` .False .True .False )
  3BC:  	Call  SetGoalPos    ( *VarA *VarB *VarC *VarD )
  3D8:  	Call  JumpToGoal    ( *VarA  5` .False .True .False )
  3F8:  EndIf
  400:  Call  ForceHomePos  ( *VarA *VarB *VarC *VarD )
  41C:  Call  HPBarToHome   ( *VarA )
  42C:  Call  SetIdleAnimations ( *VarA 00000001 $IdleAnimations_8021D360 )
  444:  Call  SetAnimation  ( *VarA 00000001 00A40002 )
  45C:  Call  SetActorPos   ( .Actor:Self  0`  -1000`  0` )
  478:  Call  ForceHomePos  ( .Actor:Self  0`  -1000`  0` )
  494:  Call  HPBarToHome   ( .Actor:Self )
  4A4:  Call  RemoveActor   ( .Actor:Self )
  4B4:  Return
  4BC:  End
}

#new:Script $Script_8021E5DC
{
    0:  Call  8027D32C      ( FFFFFF81 )
   10:  Set   *VarA  *Var0
   20:  Set   *VarB  *Var1
   30:  Set   *VarC  *Var2
   40:  Call  SetActorRotation      ( .Actor:Self 00000000 00000000 00000000 )
   5C:  Call  SetActorScale ( .Actor:Self *Fixed[1.0] *Fixed[1.0] *Fixed[1.0] )
   78:  Call  SetActorDispOffset    ( .Actor:Self 00000000 00000000 00000000 )
   94:  Call  SetAnimation  ( .Actor:Self *VarA *VarB )
   AC:  Call  GetGoalPos    ( .Actor:Self *Var0 *Var1 *Var2 )
   C8:  Add   *Var0  0000000F
   D8:  Add   *Var1  0000000A
   E8:  Call  SetActorJumpGravity   ( .Actor:Self *Fixed[0.1] )
   FC:  Call  SetAnimation  ( .Actor:Self *VarA *VarB )
  114:  Call  SetGoalPos    ( .Actor:Self *Var0 *Var1 *Var2 )
  130:  Call  JumpToGoal    ( .Actor:Self  5` .False .False .False )
  150:  Set   *Var0  *VarA
  160:  Set   *Var1  *VarB
  170:  ExecWait  DoShockHit
  17C:  Call  UseBattleCamPreset    ( 00000002 )
  18C:  Thread
  194:  	Call  SetActorRotationOffset    ( .Actor:Self 00000000 *VarC 00000000 )
  1B0:  	Set   *Var0  00000000
  1C0:  	Loop  0000000F
  1CC:  		Add   *Var0  FFFFFFD0
  1DC:  		Call  SetActorRotation  ( .Actor:Self 00000000 00000000 *Var0 )
  1F8:  		Wait  1`
  204:  	EndLoop
  20C:  	Call  SetActorRotationOffset    ( .Actor:Self 00000000 00000000 00000000 )
  228:  EndThread
  230:  Call  GetActorPos   ( .Actor:Self *Var0 *Var1 *Var2 )
  24C:  Add   *Var0  0000003C
  25C:  Set   *Var1  00000000
  26C:  Call  SetActorJumpGravity   ( .Actor:Self *Fixed[1.4] )
  280:  Call  SetGoalPos    ( .Actor:Self *Var0 *Var1 *Var2 )
  29C:  Call  JumpToGoal    ( .Actor:Self  15` .False .True .False )
  2BC:  Add   *Var0  00000014
  2CC:  Call  SetGoalPos    ( .Actor:Self *Var0 *Var1 *Var2 )
  2E8:  Call  JumpToGoal    ( .Actor:Self  10` .False .True .False )
  308:  Add   *Var0  0000000A
  318:  Call  SetGoalPos    ( .Actor:Self *Var0 *Var1 *Var2 )
  334:  Call  JumpToGoal    ( .Actor:Self  4` .False .True .False )
  354:  Return
  35C:  End
}

#new:Vector3D $Vector3D_8021E940
{
	0` -1000` 0`
}

#new:IdleAnimations $IdleAnimations_8021E94C
{
	.Status:Normal    00090001
	.Status:Stone     00090000
	.Status:Sleep     00090000
	.Status:Poison    00090001
	.Status:Stop      00090000
	.Status:Static    00090001
	.Status:Paralyze  00090000
	.Status:Dizzy     00090014
	.Status:Fear      00090014
	.Status:End
}

#new:DefenseTable $DefenseTable_8021E998
{
	.Element:Normal 00000000
	.Element:End
}

#new:StatusTable $StatusTable_8021E9A4
{
	.Status:Normal      0`
	.Status:Default     0`
	.Status:Sleep      60`
	.Status:Poison      0`
	.Status:Frozen      0`
	.Status:Dizzy      75`
	.Status:Fear        0`
	.Status:Static      0`
	.Status:Paralyze   75`
	.Status:Shrink     80`
	.Status:Stop       90`
	.Status:DefaultTurnMod    0`
	.Status:SleepTurnMod     -1`
	.Status:PoisonTurnMod     0`
	.Status:FrozenTurnMod     0`
	.Status:DizzyTurnMod     -1`
	.Status:FearTurnMod       0`
	.Status:StaticTurnMod     0`
	.Status:ParalyzeTurnMod   0`
	.Status:ShrinkTurnMod     0`
	.Status:StopTurnMod      -1`
	.Status:End
}

#new:PartsTable $PartsTable_8021EA50
{
	00800000 01000000 001400FF $IdleAnimations_8021E94C $DefenseTable_8021E998 00000000 00000000 FFF70000 00000000
}

#new:Actor $LeeGoombario
{
	% stats
	[Index]        7Fb
	[Level]         0`b
	[MaxHP]        20`b
	[Coins]         0`b
	[Flags]       00000000
	[StatusTable] $StatusTable_8021E9A4
	% ai
	[PartsCount]    1`s
	[PartsTable]  $PartsTable_8021EA50
	[Script]      $Script_Init_Goombario
	% move effectiveness
	[Escape]      100`b
	[Item]          0`b
	[AirLift]       0`b
	[Hurricane]     0`b % Bow's "Spook" as well
	[UpAndAway]     0`b
	[PowerBounce]  90`b
	[SpinSmash]     0`b % weight (0-4)
	% ui positions
	[Size]         29`b  26`b % width height
	[HealthBar]     0`b   0`b % dx dy
	[StatusTurn]  -10`b  20`b % dx dy
	[StatusIcon]   10`b  20`b % dx dy
}

#new:Script $Script_Init_Goombario
{
    0:  Call  BindTakeTurn  ( .Actor:Self $Script_TakeTurn_802203F4 )
   14:  Call  BindIdle      ( .Actor:Self $Script_Idle_8021EB14 )
   28:  Call  BindHandleEvent   ( .Actor:Self $Script_HandleEvent_8021EB24 )
   3C:  Call  BindNextTurn  ( .Actor:Self $Script_NextTurn_80220450 )
   50:  Call  SetActorVar   ( .Actor:Self 00000002 00000001 )
   68:  Return
   70:  End
}

#new:Script $Script_Idle_8021EB14
{
    0:  Return
    8:  End
}

#new:Script $Script_HandleEvent_8021EB24
{
    0:  Call  UseIdleAnimation  ( .Actor:Self .False )
   14:  Call  EnableIdleScript  ( .Actor:Self 00000000 )
   28:  Call  GetLastEvent      ( .Actor:Self *Var0 )
   3C:  Switch  *Var0
   48:  	CaseOR  ==  .Event:HitCombo % 9
   54:  	CaseOR  ==  .Event:Hit % A
   60:  		SetConst  *Var0  00000001
   70:  		SetConst  *Var1  0009000A
   80:  		ExecWait  DoNormalHit
   8C:  	EndCaseGroup
   94:  	Case  ==  .Event:BurnHit % E
   A0:  		SetConst  *Var0  00000001
   B0:  		SetConst  *Var1  0009000B
   C0:  		SetConst  *Var2  0009000C
   D0:  		ExecWait  DoBurnHit
   DC:  	Case  ==  .Event:BurnDeath % 24
   E8:  		SetConst  *Var0  00000001
   F8:  		SetConst  *Var1  0009000B
  108:  		SetConst  *Var2  0009000C
  118:  		ExecWait  DoBurnHit
  124:  		ExecWait  $Script_8021E0E0
  130:  		Wait  10`
  13C:  		SetConst  *Var0  00000001
  14C:  		SetConst  *Var1  0009000C
  15C:  		ExecWait  DoDeath
  168:  		Return
  170:  	Case  ==  .Event:SpinSmashHit % B
  17C:  		SetConst  *Var0  00000001
  18C:  		SetConst  *Var1  0009000A
  19C:  		ExecWait  DoSpinSmashHit
  1A8:  	Case  ==  .Event:SpinSmashDeath % 21
  1B4:  		ExecWait  $Script_8021E0E0
  1C0:  		SetConst  *Var0  00000001
  1D0:  		SetConst  *Var1  0009000A
  1E0:  		ExecWait  DoSpinSmashHit
  1EC:  		SetConst  *Var0  00000001
  1FC:  		SetConst  *Var1  0009000A
  20C:  		ExecWait  DoDeath
  218:  		Return
  220:  	Case  ==  .Event:ShockHit % 2F
  22C:  		SetConst  *Var0  00000001
  23C:  		SetConst  *Var1  0009000A
  24C:  		Set   *Var2  0000000C
  25C:  		ExecWait  $Script_8021E5DC
  268:  		Call  SetGoalToHome ( .Actor:Self )
  278:  		Call  SetActorSpeed ( .Actor:Self *Fixed[8.0] )
  28C:  		Call  SetAnimation  ( .Actor:Self 00000001 00090003 )
  2A4:  		Call  RunToGoal     ( .Actor:Self  0` .False )
  2BC:  	Case  ==  .Event:ShockDeath % 26
  2C8:  		ExecWait  $Script_8021E0E0
  2D4:  		SetConst  *Var0  00000001
  2E4:  		SetConst  *Var1  0009000A
  2F4:  		Set   *Var2  0000000C
  304:  		ExecWait  $Script_8021E5DC
  310:  		SetConst  *Var0  00000001
  320:  		SetConst  *Var1  0009000A
  330:  		ExecWait  DoDeath
  33C:  		Return
  344:  	CaseOR  ==  00000017 % 17
  350:  	CaseOR  ==  .Event:Immune % 19
  35C:  	CaseOR  ==  .Event:AirLiftFailed % 1F
  368:  		SetConst  *Var0  00000001
  378:  		SetConst  *Var1  00090001
  388:  		ExecWait  DoImmune
  394:  	EndCaseGroup
  39C:  	Case  ==  .Event:Death % 20
  3A8:  		ExecWait  $Script_8021E0E0
  3B4:  		SetConst  *Var0  00000001
  3C4:  		SetConst  *Var1  0009000A
  3D4:  		ExecWait  DoNormalHit
  3E0:  		Wait  10`
  3EC:  		SetConst  *Var0  00000001
  3FC:  		SetConst  *Var1  0009000A
  40C:  		ExecWait  DoDeath
  418:  		Return
  420:  	Case  ==  .Event:RecoverStatus % 31
  42C:  		SetConst  *Var0  00000001
  43C:  		SetConst  *Var1  00090001
  44C:  		ExecWait  DoRecover
  458:  	Case  ==  .Event:ScareAway % 39
  464:  		SetConst  *Var0  00000001
  474:  		SetConst  *Var1  00090003
  484:  		SetConst  *Var2  0009000A
  494:  		ExecWait  DoScareAway
  4A0:  		Return
  4A8:  	Case  ==  .Event:BeginAirLift % 3A
  4B4:  		SetConst  *Var0  00000001
  4C4:  		SetConst  *Var1  00090003
  4D4:  		ExecWait  DoAirLift
  4E0:  	Case  ==  .Event:BlowAway % 16
  4EC:  		SetConst  *Var0  00000001
  4FC:  		SetConst  *Var1  0009000A
  50C:  		ExecWait  DoBlowAway
  518:  		Return
  520:  	Default
  528:  EndSwitch
  530:  Call  EnableIdleScript  ( .Actor:Self 00000001 )
  544:  Call  UseIdleAnimation  ( .Actor:Self .True )
  558:  Return
  560:  End
}

#new:Script $Script_8021F08C
{
    0:  Call  UseBattleCamPreset    ( 00000002 )
   10:  Call  SetAnimation  ( .Actor:Self 00000001 00090001 )
   28:  Thread
   30:  	Call  SetActorRotationOffset    ( .Actor:Self 00000000 0000000C 00000000 )
   4C:  	Set   *Var0  000000B4
   5C:  	Loop  0000000F
   68:  		Sub   *Var0  0000003C
   78:  		Call  SetActorRotation  ( .Actor:Self 00000000 00000000 *Var0 )
   94:  		Wait  1`
   A0:  	EndLoop
   A8:  	Call  SetAnimation  ( .Actor:Self 00000001 00090005 )
   C0:  	Call  SetActorRotation  ( .Actor:Self 00000000 00000000 00000000 )
   DC:  	Call  SetActorRotationOffset    ( .Actor:Self 00000000 00000000 00000000 )
   F8:  EndThread
  100:  Call  SetGoalToTarget   ( .Actor:Self )
  110:  Call  GetGoalPos        ( .Actor:Self *Var0 *Var1 *Var2 )
  12C:  Add   *Var0  0000003C
  13C:  Set   *Var1  00000000
  14C:  Call  SetActorJumpGravity   ( .Actor:Self *Fixed[1.0] )
  160:  Call  SetGoalPos        ( .Actor:Self *Var0 *Var1 *Var2 )
  17C:  Call  JumpToGoal        ( .Actor:Self  15` .False .True .False )
  19C:  Call  GetStatusFlags    ( .Actor:Self *VarA )
  1B0:  If  *VarA  &  ~Flags:StatusFlags:Shrink % 80000
  1C0:  	SetF  *Var5  *Fixed[7.2]
  1D0:  Else
  1D8:  	Set   *Var5  00000012
  1E8:  EndIf
  1F0:  Call  SetAnimation  ( .Actor:Self 00000001 00090007 )
  208:  Call  SetActorDispOffset    ( .Actor:Self 00000000 *Var5 00000000 )
  224:  Wait  1`
  230:  Call  SetActorRotation      ( .Actor:Self 00000000 00000000 00000000 )
  24C:  Call  SetActorDispOffset    ( .Actor:Self 00000000 00000000 00000000 )
  268:  Call  SetAnimation  ( .Actor:Self 00000001 00090001 )
  280:  Add   *Var0  00000014
  290:  Call  SetGoalPos    ( .Actor:Self *Var0 *Var1 *Var2 )
  2AC:  Call  JumpToGoal    ( .Actor:Self  6` .False .True .False )
  2CC:  Call  SetAnimation  ( .Actor:Self 00000001 00090007 )
  2E4:  Call  SetActorDispOffset    ( .Actor:Self 00000000 *Var5 00000000 )
  300:  Wait  1`
  30C:  Add   *Var0  0000000A
  31C:  Call  SetAnimation  ( .Actor:Self 00000001 00090001 )
  334:  Call  SetActorDispOffset    ( .Actor:Self 00000000 00000000 00000000 )
  350:  Call  SetGoalPos    ( .Actor:Self *Var0 *Var1 *Var2 )
  36C:  Call  JumpToGoal    ( .Actor:Self  4` .False .True .False )
  38C:  Call  SetAnimation  ( .Actor:Self 00000001 00090007 )
  3A4:  Call  SetActorDispOffset    ( .Actor:Self 00000000 *Var5 00000000 )
  3C0:  Wait  1`
  3CC:  Call  SetActorDispOffset    ( .Actor:Self 00000000 00000000 00000000 )
  3E8:  Call  SetAnimation  ( .Actor:Self 00000001 00090001 )
  400:  Wait  2`
  40C:  Call  SetGoalToHome ( .Actor:Self )
  41C:  Call  SetActorSpeed ( .Actor:Self *Fixed[8.0] )
  430:  Call  SetAnimation  ( .Actor:Self 00000001 00090003 )
  448:  Call  RunToGoal     ( .Actor:Self  0` .False )
  460:  Call  SetAnimation  ( .Actor:Self 00000001 00090001 )
  478:  Return
  480:  End
}

#new:Script $Script_8021F514
{
    0:  Call  UseBattleCamPreset    ( 0000003F )
   10:  Call  BattleCamTargetActor  ( .Actor:Self )
   20:  Call  8024ECF8      ( FFFFFFFF 00000001 00000000 )
   38:  Call  SetTargetActor        ( .Actor:Self .Actor:Player )
   4C:  Call  SetGoalToTarget       ( .Actor:Self )
   5C:  Call  AddGoalPos    ( .Actor:Self  70`  0`  0` )
   78:  Call  SetAnimation  ( .Actor:Self 00000001 00090003 )
   90:  Call  SetActorSpeed ( .Actor:Self *Fixed[5.0] )
   A4:  Call  RunToGoal     ( .Actor:Self  0` .False )
   BC:  Call  SetAnimation  ( .Actor:Self 00000001 00090001 )
   D4:  Return
   DC:  End
}

#new:Script $Script_8021F5F8
{
    0:  Call  SetGoalToTarget   ( .Actor:Self )
   10:  Call  GetGoalPos        ( .Actor:Self *VarB *VarC *VarD )
   2C:  Call  GetActorPos       ( .Actor:Self *VarC *VarD *VarE )
   48:  If  *VarB  >  *VarC
   58:  	Sub   *VarB  *VarC
   68:  Else
   70:  	Sub   *VarC  *VarB
   80:  	Set   *VarB  *VarC
   90:  EndIf
   98:  Sub   *VarB  00000014
   A8:  DivF  *VarB  *Fixed[10.588867]
   B8:  AddF  *VarB  0000000F
   C8:  Set   *VarA  *VarB
   D8:  Return
   E0:  End
}

#new:Script $Script_8021F6E0
{
    0:  Call  UseIdleAnimation  ( .Actor:Self .False )
   14:  Call  EnableIdleScript  ( .Actor:Self 00000000 )
   28:  ExecWait  $Script_8021F514
   34:  ExecWait  $Script_8021F5F8
   40:  Call  GetStatusFlags    ( .Actor:Self *VarA )
   54:  If  *VarA  &  ~Flags:StatusFlags:Shrink % 80000
   64:  	SetF  *Var0  *Fixed[7.2]
   74:  	SetF  *Var1  *Fixed[7.6]
   84:  	SetF  *Var1  *Fixed[3.6]
   94:  Else
   9C:  	Set   *Var0  00000012
   AC:  	Set   *Var1  00000013
   BC:  	Set   *Var2  00000009
   CC:  EndIf
   D4:  Call  SetAnimation      ( .Actor:Self 00000001 00090007 )
   EC:  Call  SetActorDispOffset    ( .Actor:Self 00000000 *Var0 00000000 )
  108:  Wait  5`
  114:  Call  SetActorDispOffset    ( .Actor:Self 00000000 *Var1 00000000 )
  130:  Wait  1`
  13C:  Call  SetAnimation      ( .Actor:Self 00000001 00090006 )
  154:  Call  SetActorDispOffset    ( .Actor:Self 00000000 *Var2 00000000 )
  170:  Call  SetGoalToTarget   ( .Actor:Self )
  180:  Call  AddGoalPos        ( .Actor:Self  0`  0`  5` )
  19C:  Call  SetJumpAnimations ( .Actor:Self 00000001 00090006 00090006 00090006 )
  1BC:  Call  $Function_80218300    ( *VarA 00000000 )
  1D0:  Call  EnemyTestTarget   ( .Actor:Self *Var0 ~Flags:DamageType:0 00000000 00000001 00000010 )
  1F4:  Switch  *Var0
  200:  	CaseOR  ==  .HitResult:Miss % 6
  20C:  	CaseOR  ==  .HitResult:Lucky % 5
  218:  		Set   *VarA  *Var0
  228:  		Call  SetJumpAnimations ( .Actor:Self 00000001 00090006 00090006 00090006 )
  248:  		Call  $Function_80218B90 ( )
  254:  		Thread
  25C:  			Call  ShakeCam  ( .Cam:Battle 00000000  5` *Fixed[1.0] )
  278:  		EndThread
  280:  		If  *VarA  ==  .HitResult:Lucky % 5
  290:  			Call  EnemyTestTarget   ( .Actor:Self *Var0 ~Flags:DamageType:TriggerLucky 00000000 00000000 00000000 )
  2B4:  		EndIf
  2BC:  		Wait  20`
  2C8:  		Call  YieldTurn ( )
  2D4:  		ExecWait  $Script_8021F08C
  2E0:  		Call  EnableIdleScript  ( .Actor:Self 00000001 )
  2F4:  		Call  UseIdleAnimation  ( .Actor:Self .True )
  308:  		Return
  310:  	EndCaseGroup
  318:  EndSwitch
  320:  ChildThread
  328:  	Call  SetPartScale  ( .Actor:Self 00000001 *Fixed[1.1] *Fixed[0.8] *Fixed[1.0] )
  348:  	Wait  1`
  354:  	Call  SetPartScale  ( .Actor:Self 00000001 *Fixed[1.3] *Fixed[0.5] *Fixed[1.0] )
  374:  	Wait  1`
  380:  	Call  SetPartScale  ( .Actor:Self 00000001 *Fixed[1.0] *Fixed[1.0] *Fixed[1.0] )
  3A0:  EndChildThread
  3A8:  Wait  1`
  3B4:  Wait  2`
  3C0:  Call  GetActorVar   ( .Actor:Self 00000001 *Var9 )
  3D8:  Switch  *Var9
  3E4:  	Case  ==  00000000
  3F0:  		Call  EnemyDamageTarget ( .Actor:Self *Var0 ~Flags:DamageType:0 00000000 00000000 00000001 00000010 )
  418:  	Case  ==  00000001
  424:  		Call  EnemyDamageTarget ( .Actor:Self *Var0 ~Flags:DamageType:0 00000000 00000000 00000002 00000010 )
  44C:  	Case  ==  00000002
  458:  		Call  EnemyDamageTarget ( .Actor:Self *Var0 ~Flags:DamageType:0 00000000 00000000 00000003 00000010 )
  480:  EndSwitch
  488:  Call  GetActorHP    ( .Actor:Player *Var0 )
  49C:  If  *Var0  ==  00000000
  4AC:  	Goto  64
  4B8:  EndIf
  4C0:  Set   *VarA  00000018
  4D0:  Call  GetActorVar   ( .Actor:Self 00000001 *Var9 )
  4E8:  Switch  *Var9
  4F4:  	Case  ==  00000000
  500:  		Thread
  508:  			Wait  4`
  514:  			Set   *Var0  00000000
  524:  			Loop  00000006
  530:  				Add   *Var0  0000001E
  540:  				Call  SetActorRotation  ( .Actor:Self 00000000 00000000 *Var0 )
  55C:  				Wait  1`
  568:  			EndLoop
  570:  		EndThread
  578:  		Call  SetGoalToTarget       ( .Actor:Self )
  588:  		Call  SetJumpAnimations     ( .Actor:Self 00000001 00090006 00090006 00090006 )
  5A8:  		Call  $Function_80218300    ( *VarA 00000003 )
  5BC:  	Case  ==  00000001
  5C8:  		Thread
  5D0:  			Wait  4`
  5DC:  			Set   *Var0  00000000
  5EC:  			Loop  00000006
  5F8:  				Add   *Var0  0000001E
  608:  				Call  SetActorRotation  ( .Actor:Self 00000000 00000000 *Var0 )
  624:  				Wait  1`
  630:  			EndLoop
  638:  		EndThread
  640:  		Call  SetGoalToTarget   ( .Actor:Self )
  650:  		Call  EnableActorBlur   ( .Actor:Self 00000001 )
  664:  		Call  SetJumpAnimations ( .Actor:Self 00000001 00090006 00090006 00090006 )
  684:  		Call  $Function_80218300    ( *VarA 00000003 )
  698:  		Call  EnableActorBlur   ( .Actor:Self 00000000 )
  6AC:  	Case  ==  00000002
  6B8:  		Thread
  6C0:  			Wait  4`
  6CC:  			Set   *Var0  00000000
  6DC:  			Loop  00000006
  6E8:  				Add   *Var0  0000001E
  6F8:  				Call  SetActorRotation  ( .Actor:Self 00000000 F1194D80 *Var0 )
  714:  				Wait  1`
  720:  			EndLoop
  728:  			Call  SetAnimation  ( .Actor:Self 00000001 00090006 )
  740:  		EndThread
  748:  		Thread
  750:  			Set   *Var0  00000000
  760:  			Loop  *VarA
  76C:  				Add   *Var0  00000085
  77C:  				Call  SetActorRotation  ( .Actor:Self F1194D80 *Var0 F1194D80 )
  798:  				Wait  1`
  7A4:  			EndLoop
  7AC:  		EndThread
  7B4:  		Call  SetGoalToTarget   ( .Actor:Self )
  7C4:  		Call  EnableActorBlur   ( .Actor:Self 00000001 )
  7D8:  		Call  SetJumpAnimations ( .Actor:Self 00000001 00090006 00090006 00090006 )
  7F8:  		Call  $Function_80218300    ( *VarA 00000003 )
  80C:  		Call  EnableActorBlur   ( .Actor:Self 00000000 )
  820:  EndSwitch
  828:  ChildThread
  830:  	Call  SetPartScale  ( .Actor:Self 00000001 *Fixed[1.1] *Fixed[0.8] *Fixed[1.0] )
  850:  	Wait  1`
  85C:  	Call  SetPartScale  ( .Actor:Self 00000001 *Fixed[1.3] *Fixed[0.5] *Fixed[1.0] )
  87C:  	Wait  1`
  888:  	Call  SetPartScale  ( .Actor:Self 00000001 *Fixed[1.0] *Fixed[1.0] *Fixed[1.0] )
  8A8:  EndChildThread
  8B0:  Wait  1`
  8BC:  Wait  2`
  8C8:  Call  GetActorVar   ( .Actor:Self 00000001 *Var9 )
  8E0:  Switch  *Var9
  8EC:  	Case  ==  00000000
  8F8:  		Call  EnemyDamageTarget ( .Actor:Self *Var0 ~Flags:DamageType:0 00000000 00000000 00000001 00000020 )
  920:  	Case  ==  00000001
  92C:  		Call  EnemyDamageTarget ( .Actor:Self *Var0 ~Flags:DamageType:0 00000000 00000000 00000002 00000020 )
  954:  	Case  ==  00000002
  960:  		Call  EnemyDamageTarget ( .Actor:Self *Var0 ~Flags:DamageType:0 00000000 00000000 00000003 00000020 )
  988:  EndSwitch
  990:  Label  64
  99C:  Switch  *Var0
  9A8:  	CaseOR  ==  .HitResult:Hit % 0
  9B4:  	CaseOR  ==  .HitResult:QuakeImmune % 2
  9C0:  		Call  YieldTurn ( )
  9CC:  		ExecWait  $Script_8021F08C
  9D8:  	EndCaseGroup
  9E0:  EndSwitch
  9E8:  Call  EnableIdleScript  ( .Actor:Self 00000001 )
  9FC:  Call  UseIdleAnimation  ( .Actor:Self .True )
  A10:  Return
  A18:  End
}

#new:Script $Script_80220100
{
    0:  Call  UseIdleAnimation  ( .Actor:Self .False )
   14:  Call  EnableIdleScript  ( .Actor:Self 00000000 )
   28:  Call  SetActorJumpGravity   ( .Actor:Self *Fixed[1.8] )
   3C:  Call  GetActorPos       ( .Actor:Self *Var0 *Var1 *Var2 )
   58:  Call  SetGoalPos        ( .Actor:Self *Var0 *Var1 *Var2 )
   74:  Call  JumpToGoal        ( .Actor:Self  10` .False .True .False )
   94:  Wait  10`
   A0:  Call  SetTargetActor    ( .Actor:Self .Actor:Player )
   B4:  Call  SetGoalToTarget   ( .Actor:Self )
   C4:  Call  SetBattleFlagBits ( 00000004 .True )
   D8:  Call  $Function_80218D90    ( *Var5 )
   E8:  Wait  12`
   F4:  Call  SetCamEnabled     ( .Cam:Tattle .True )
  108:  Call  SetCamFlag80      ( .Cam:Tattle .False )
  11C:  Call  SetCamPerspective ( .Cam:Tattle 00000006  25`  16`  1024` )
  13C:  Call  SetCamViewport    ( .Cam:Tattle  37`  95`  138`  99` )
  15C:  Call  SetGoalToTarget   ( .Actor:Self )
  16C:  Call  GetGoalPos        ( .Actor:Self *Var0 *Var1 *Var2 )
  188:  Sub   *Var0  00000008
  198:  Set   *Var1  00000000
  1A8:  Call  $Function_80218CE4 ( )
  1B4:  Wait  1`
  1C0:  Call  802CAE50  ( 00000002 *Var0 *Var1 *Var2 )
  1DC:  Call  802CABE8  ( 00000002 00000000 *Var3 00000064 00000004 )
  1FC:  Wait  2`
  208:  Call  PlaySoundAtActor  ( .Actor:Self 00000282 )
  21C:  Call  SetCamFlag80      ( .Cam:Tattle .True )
  230:  Wait  10`
  23C:  Call  ActorSpeak        ( 001C0092 .Actor:Self 00000001 0009000F 00090001 ) % It's Mario, silly! He's here to save Princess Peac ...
  25C:  Call  $Function_80218E2C    ( *Var5 )
  26C:  Wait  12`
  278:  Call  SetCamEnabled     ( .Cam:Tattle .False )
  28C:  Wait  32`
  298:  Call  UseBattleCamPreset    ( 00000002 )
  2A8:  Call  SetBattleFlagBits ( 00000004 .False )
  2BC:  Call  EnableIdleScript  ( .Actor:Self 00000001 )
  2D0:  Call  UseIdleAnimation  ( .Actor:Self .True )
  2E4:  Return
  2EC:  End
}

#new:Script $Script_TakeTurn_802203F4
{
    0:  Call  RandInt   ( 00000064 *Var0 )
   14:  If  *Var0  <  00000028
   24:  	ExecWait  $Script_80220100
   30:  Else
   38:  	ExecWait  $Script_8021F6E0
   44:  EndIf
   4C:  Return
   54:  End
}

#new:Script $Script_NextTurn_80220450
{
    0:  Call  GetBattlePhase    ( *Var0 )
   10:  Switch  *Var0
   1C:  	Case  ==  0000000C
   28:  		Call  GetActorVar   ( .Actor:Self 00000002 *Var0 )
   40:  		If  *Var0  >  00000000
   50:  			Sub   *Var0  00000001
   60:  			Call  SetActorVar   ( .Actor:Self 00000002 *Var0 )
   78:  			BreakCase
   80:  		EndIf
   88:  		SetConst  *Var0  00000001
   98:  		SetConst  *Var1  0009000A
   A8:  		ExecWait  $Script_8021E118
   B4:  		Return
   BC:  EndSwitch
   C4:  Return
   CC:  End
}

#new:SpecialFormation $SpecialFormation_80220524
{
	$LeeGoombario $Vector3D_8021E940 00000000 00000000 00000000 00000000 00000000
}

#new:IdleAnimations $IdleAnimations_80220540
{
	.Status:Normal    000A0004
	.Status:Stone     000A0000
	.Status:Sleep     000A0000
	.Status:Poison    000A0004
	.Status:Stop      000A0000
	.Status:Static    000A0004
	.Status:Paralyze  000A0000
	.Status:Dizzy     000A001C
	.Status:Fear      000A001C
	.Status:End
}

#new:IdleAnimations $IdleAnimations_8022058C
{
	.Status:Normal    000A0019
	.Status:Stone     000A0003
	.Status:Sleep     000A0003
	.Status:Poison    000A0019
	.Status:Stop      000A0003
	.Status:Static    000A0019
	.Status:Paralyze  000A0003
	.Status:Dizzy     000A0019
	.Status:Fear      000A0019
	.Status:End
}

#new:DefenseTable $DefenseTable_802205D8
{
	.Element:Normal 00000001
	.Element:End
}

#new:DefenseTable $DefenseTable_802205E4
{
	.Element:Normal 00000000
	.Element:End
}

#new:StatusTable $StatusTable_802205F0
{
	.Status:Normal      0`
	.Status:Default     0`
	.Status:Sleep      60`
	.Status:Poison      0`
	.Status:Frozen      0`
	.Status:Dizzy      75`
	.Status:Fear        0`
	.Status:Static      0`
	.Status:Paralyze   75`
	.Status:Shrink     80`
	.Status:Stop       90`
	.Status:DefaultTurnMod    0`
	.Status:SleepTurnMod     -1`
	.Status:PoisonTurnMod     0`
	.Status:FrozenTurnMod     0`
	.Status:DizzyTurnMod     -1`
	.Status:FearTurnMod       0`
	.Status:StaticTurnMod     0`
	.Status:ParalyzeTurnMod   0`
	.Status:ShrinkTurnMod     0`
	.Status:StopTurnMod      -1`
	.Status:End
}

#new:PartsTable $PartsTable_8022069C
{
	00800000 01000000 FE2000FF $IdleAnimations_80220540 $DefenseTable_802205D8 00001000 00000000 00F00000 00000000
}

#new:Actor $LeeKooper
{
	% stats
	[Index]        80b
	[Level]         0`b
	[MaxHP]        20`b
	[Coins]         0`b
	[Flags]       00000000
	[StatusTable] $StatusTable_802205F0
	% ai
	[PartsCount]    1`s
	[PartsTable]  $PartsTable_8022069C
	[Script]      $Script_Init_Kooper
	% move effectiveness
	[Escape]      100`b
	[Item]          0`b
	[AirLift]       0`b
	[Hurricane]     0`b % Bow's "Spook" as well
	[UpAndAway]     0`b
	[PowerBounce]  90`b
	[SpinSmash]     0`b % weight (0-4)
	% ui positions
	[Size]         32`b  38`b % width height
	[HealthBar]     0`b   0`b % dx dy
	[StatusTurn]  -10`b  20`b % dx dy
	[StatusIcon]   10`b  20`b % dx dy
}

#new:Script $Script_Init_Kooper
{
    0:  Call  BindTakeTurn  ( .Actor:Self $Script_TakeTurn_80221200 )
   14:  Call  BindIdle      ( .Actor:Self $Script_Idle_80220790 )
   28:  Call  BindHandleEvent   ( .Actor:Self $Script_HandleEvent_80220908 )
   3C:  Call  BindNextTurn  ( .Actor:Self $Script_NextTurn_802221A0 )
   50:  Call  SetActorVar   ( .Actor:Self 00000004 00000000 )
   68:  Call  SetActorVar   ( .Actor:Self 00000005 00000000 )
   80:  Call  SetActorVar   ( .Actor:Self 00000002 00000001 )
   98:  Return
   A0:  End
}

#new:Script $Script_Idle_80220790
{
    0:  Label  0
    C:  Call  GetActorVar   ( .Actor:Self 00000004 *Var0 )
   24:  Switch  *Var0
   30:  	Case  ==  00000000
   3C:  		Call  SetTargetOffset       ( .Actor:Self 00000001  -2`  38` )
   58:  		Call  8027D4C8  ( FFFFFF81 00000001 FFFFFFFD FFFFFFF7 )
   74:  		Call  $Function_80218E74    ( FFFFFFF6 00000019 0000000A 00000019 )
   90:  	Case  ==  00000001
   9C:  		Call  SetTargetOffset       ( .Actor:Self 00000001  5`  15` )
   B8:  		Call  8027D4C8  ( FFFFFF81 00000001 00000000 FFFFFFFA )
   D4:  		Call  $Function_80218E74    ( FFFFFFF6 00000014 0000000A 00000014 )
   F0:  EndSwitch
   F8:  Wait  1`
  104:  Goto  0
  110:  Return
  118:  End
}

#new:IntTable $IntTable_802208B0
{
	00000009 00000010 00000016 0000001A 0000001E 00000020 00000021 00000020
	0000001E 0000001A 00000016 00000010 00000009 00000000 00000004 00000006
	00000007 00000006 00000004 00000000 00000002 00000000
}

#new:Script $Script_HandleEvent_80220908
{
    0:  Call  UseIdleAnimation  ( .Actor:Self .False )
   14:  Call  EnableIdleScript  ( .Actor:Self 00000000 )
   28:  Call  GetLastEvent      ( .Actor:Self *Var0 )
   3C:  Switch  *Var0
   48:  	CaseOR  ==  .Event:HitCombo % 9
   54:  	CaseOR  ==  .Event:Hit % A
   60:  		SetConst  *Var0  00000001
   70:  		SetConst  *Var1  000A0011
   80:  		ExecWait  DoNormalHit
   8C:  	EndCaseGroup
   94:  	Case  ==  .Event:BurnHit % E
   A0:  		SetConst  *Var0  00000001
   B0:  		SetConst  *Var1  000A0012
   C0:  		SetConst  *Var2  000A0013
   D0:  		ExecWait  DoBurnHit
   DC:  	Case  ==  .Event:BurnDeath % 24
   E8:  		SetConst  *Var0  00000001
   F8:  		SetConst  *Var1  000A0012
  108:  		SetConst  *Var2  000A0013
  118:  		ExecWait  DoBurnHit
  124:  		ExecWait  $Script_8021E0E0
  130:  		SetConst  *Var0  00000001
  140:  		SetConst  *Var1  000A0013
  150:  		ExecWait  DoDeath
  15C:  		Return
  164:  	Case  ==  .Event:SpinSmashHit % B
  170:  		SetConst  *Var0  00000001
  180:  		SetConst  *Var1  000A0011
  190:  		ExecWait  DoSpinSmashHit
  19C:  	Case  ==  .Event:SpinSmashDeath % 21
  1A8:  		ExecWait  $Script_8021E0E0
  1B4:  		SetConst  *Var0  00000001
  1C4:  		SetConst  *Var1  000A0011
  1D4:  		ExecWait  DoSpinSmashHit
  1E0:  		SetConst  *Var0  00000001
  1F0:  		SetConst  *Var1  000A0011
  200:  		ExecWait  DoDeath
  20C:  		Return
  214:  	Case  ==  .Event:FlipTrigger % D
  220:  		Call  SetActorVar       ( .Actor:Self 00000004 00000001 )
  238:  		Call  SetActorVar       ( .Actor:Self 00000005 00000001 )
  250:  		Call  SetDefenseTable   ( .Actor:Self 00000001 $DefenseTable_802205E4 )
  268:  		Call  SetIdleAnimations ( .Actor:Self 00000001 $IdleAnimations_8022058C )
  280:  		Call  SetTargetOffset   ( .Actor:Self 00000001  5`  15` )
  29C:  		Call  8027D4C8  ( FFFFFF81 00000001 00000000 FFFFFFFA )
  2B8:  		Call  SetAnimation      ( .Actor:Self 00000001 000A0011 )
  2D0:  		Call  SetActorRotationOffset    ( .Actor:Self 00000000 0000000C 00000000 )
  2EC:  		Thread
  2F4:  			Wait  4`
  300:  			Call  SetActorRotation  ( .Actor:Self 00000000 00000000 0000001E )
  31C:  			Wait  1`
  328:  			Call  SetActorRotation  ( .Actor:Self 00000000 00000000 00000000 )
  344:  			Wait  1`
  350:  			Call  SetActorRotation  ( .Actor:Self 00000000 00000000 FFFFFFE2 )
  36C:  			Wait  1`
  378:  			Call  SetActorRotation  ( .Actor:Self 00000000 00000000 FFFFFFC4 )
  394:  			Wait  1`
  3A0:  			Call  SetActorRotation  ( .Actor:Self 00000000 00000000 FFFFFFB5 )
  3BC:  			Wait  1`
  3C8:  		EndThread
  3D0:  		UseIntBuffer  $IntTable_802208B0
  3DC:  		Loop  00000016
  3E8:  			Get1Int  *Var0
  3F4:  			Call  SetActorDispOffset    ( .Actor:Self 00000000 *Var0 00000000 )
  410:  			Wait  1`
  41C:  		EndLoop
  424:  		Call  SetActorRotationOffset    ( .Actor:Self 00000000 00000000 00000000 )
  440:  		Call  SetActorRotation      ( .Actor:Self 00000000 00000000 00000000 )
  45C:  		Call  SetActorDispOffset    ( .Actor:Self 00000000 00000000 00000000 )
  478:  		Call  SetAnimation  ( .Actor:Self 00000001 000A0019 )
  490:  	CaseOR  ==  00000017 % 17
  49C:  	CaseOR  ==  .Event:Immune % 19
  4A8:  	CaseOR  ==  .Event:AirLiftFailed % 1F
  4B4:  		Call  GetActorVar   ( .Actor:Self 00000004 *Var0 )
  4CC:  		Switch  *Var0
  4D8:  			Case  ==  00000000
  4E4:  				SetConst  *Var0  00000001
  4F4:  				SetConst  *Var1  000A0004
  504:  			Case  ==  00000001
  510:  				Call  SetAnimationRate  ( .Actor:Self 00000001 *Fixed[1.0] )
  528:  				SetConst  *Var0  00000001
  538:  				SetConst  *Var1  000A0019
  548:  		EndSwitch
  550:  		ExecWait  DoImmune
  55C:  	EndCaseGroup
  564:  	Case  ==  .Event:Death % 20
  570:  		ExecWait  $Script_8021E0E0
  57C:  		SetConst  *Var0  00000001
  58C:  		SetConst  *Var1  000A0011
  59C:  		ExecWait  DoNormalHit
  5A8:  		Wait  10`
  5B4:  		SetConst  *Var0  00000001
  5C4:  		SetConst  *Var1  000A0011
  5D4:  		ExecWait  DoDeath
  5E0:  		Return
  5E8:  	Case  ==  .Event:RecoverStatus % 31
  5F4:  		Call  GetActorVar   ( .Actor:Self 00000004 *Var0 )
  60C:  		If  *Var0  ==  00000001
  61C:  			SetConst  *Var0  00000001
  62C:  			SetConst  *Var1  000A0019
  63C:  			ExecWait  DoImmune
  648:  		Else
  650:  			SetConst  *Var0  00000001
  660:  			SetConst  *Var1  000A0004
  670:  			ExecWait  DoRecover
  67C:  		EndIf
  684:  	Case  ==  .Event:ScareAway % 39
  690:  		SetConst  *Var0  00000001
  6A0:  		SetConst  *Var1  000A0006
  6B0:  		SetConst  *Var2  000A0011
  6C0:  		ExecWait  DoScareAway
  6CC:  		Return
  6D4:  	Case  ==  .Event:BeginAirLift % 3A
  6E0:  		Call  GetActorVar   ( .Actor:Self 00000004 *Var0 )
  6F8:  		Switch  *Var0
  704:  			Case  ==  00000000
  710:  				SetConst  *Var0  00000001
  720:  				SetConst  *Var1  000A0006
  730:  			Case  ==  00000001
  73C:  				Call  SetAnimationRate  ( .Actor:Self 00000001 *Fixed[3.0] )
  754:  				SetConst  *Var0  00000001
  764:  				SetConst  *Var1  000A0019
  774:  		EndSwitch
  77C:  		ExecWait  DoAirLift
  788:  	Case  ==  .Event:BlowAway % 16
  794:  		Call  GetActorVar   ( .Actor:Self 00000004 *Var0 )
  7AC:  		Switch  *Var0
  7B8:  			Case  ==  00000000
  7C4:  				Call  GetStatusFlags    ( .Actor:Self *Var0 )
  7D8:  				If  *Var0  !&  ~Flags:StatusFlags:Sleep|Frozen|Fear|Paralyze|Dizzy|Stone|Stop % 35D000
  7E8:  					If  *Var0  &  ~Flags:StatusFlags:Shrink % 80000
  7F8:  						Call  SetActorDispOffset    ( .Actor:Self 00000000 00000001 00000000 )
  814:  					Else
  81C:  						Call  SetActorDispOffset    ( .Actor:Self 00000000 00000003 00000000 )
  838:  					EndIf
  840:  				EndIf
  848:  				SetConst  *Var0  00000001
  858:  				SetConst  *Var1  000A0006
  868:  			Case  ==  00000001
  874:  				SetConst  *Var0  00000001
  884:  				SetConst  *Var1  000A0019
  894:  		EndSwitch
  89C:  		ExecWait  DoBlowAway
  8A8:  		Return
  8B0:  	Default
  8B8:  EndSwitch
  8C0:  Call  EnableIdleScript  ( .Actor:Self 00000001 )
  8D4:  Call  UseIdleAnimation  ( .Actor:Self .True )
  8E8:  Return
  8F0:  End
}

#new:Script $Script_TakeTurn_80221200
{
    0:  Call  UseIdleAnimation  ( .Actor:Self .False )
   14:  Call  EnableIdleScript  ( .Actor:Self 00000000 )
   28:  Call  SetTargetActor    ( .Actor:Self .Actor:Player )
   3C:  Call  GetActorVar       ( .Actor:Self 00000004 *Var0 )
   54:  If  *Var0  ==  00000001
   64:  	Call  GetActorVar   ( .Actor:Self 00000005 *Var0 )
   7C:  	Sub   *Var0  00000001
   8C:  	If  *Var0  >  00000000
   9C:  		Call  SetActorVar   ( .Actor:Self 00000005 *Var0 )
   B4:  		Call  AddActorDecoration    ( .Actor:Self 00000001 00000000 .Decoration:Sweat )
   D0:  		Call  SetAnimationRate      ( .Actor:Self 00000001 *Fixed[3.0] )
   E8:  		Wait  30`
   F4:  		Call  SetAnimationRate      ( .Actor:Self 00000001 *Fixed[1.0] )
  10C:  		Call  RemoveActorDecoration ( .Actor:Self 00000001 00000000 )
  124:  	Else
  12C:  		Call  AddActorDecoration    ( .Actor:Self 00000001 00000000 .Decoration:Sweat )
  148:  		Call  SetAnimationRate      ( .Actor:Self 00000001 *Fixed[3.0] )
  160:  		Wait  20`
  16C:  		Call  SetAnimationRate      ( .Actor:Self 00000001 *Fixed[1.0] )
  184:  		Call  RemoveActorDecoration ( .Actor:Self 00000001 00000000 )
  19C:  		Call  SetAnimation  ( .Actor:Self 00000001 000A0019 )
  1B4:  		Set   *Var0  00000000
  1C4:  		Call  SetActorRotationOffset    ( .Actor:Self 00000000 0000000C 00000000 )
  1E0:  		Thread
  1E8:  			Loop  00000005
  1F4:  				Add   *Var0  0000000F
  204:  				Call  SetActorRotation  ( .Actor:Self 00000000 00000000 *Var0 )
  220:  				Wait  1`
  22C:  			EndLoop
  234:  		EndThread
  23C:  		Call  GetActorPos       ( .Actor:Self *Var0 *Var1 *Var2 )
  258:  		Call  SetGoalPos        ( .Actor:Self *Var0 *Var1 *Var2 )
  274:  		Call  SetActorJumpGravity       ( .Actor:Self *Fixed[3.0] )
  288:  		Call  JumpToGoal        ( .Actor:Self  8` .False .True .False )
  2A8:  		Call  SetActorRotationOffset    ( .Actor:Self 00000000 00000000 00000000 )
  2C4:  		Call  SetActorRotation  ( .Actor:Self 00000000 00000000 00000000 )
  2E0:  		Call  SetActorDispOffset        ( .Actor:Self 00000000 00000000 00000000 )
  2FC:  		Call  SetAnimation      ( .Actor:Self 00000001 000A0004 )
  314:  		Call  SetActorVar       ( .Actor:Self 00000004 00000000 )
  32C:  		Call  SetDefenseTable   ( .Actor:Self 00000001 $DefenseTable_802205D8 )
  344:  		Call  SetIdleAnimations ( .Actor:Self 00000001 $IdleAnimations_80220540 )
  35C:  		Call  SetTargetOffset   ( .Actor:Self 00000001  -2`  38` )
  378:  		Call  8027D4C8  ( FFFFFF81 00000001 FFFFFFFD FFFFFFF7 )
  394:  	EndIf
  39C:  	Call  EnableIdleScript  ( .Actor:Self 00000001 )
  3B0:  	Call  UseIdleAnimation  ( .Actor:Self .True )
  3C4:  	Return
  3CC:  EndIf
  3D4:  Call  SetAnimation      ( .Actor:Self 00000001 000A000E )
  3EC:  Call  PlaySoundAtActor  ( .Actor:Self 00000000 )
  400:  Wait  15`
  40C:  Call  SetAnimation      ( .Actor:Self 00000001 000A000A )
  424:  Call  PlaySoundAtActor  ( .Actor:Self 0000200C )
  438:  Call  UseBattleCamPreset    ( 0000000E )
  448:  Call  BattleCamTargetActor  ( .Actor:Self )
  458:  Call  MoveBattleCamOver (  75` )
  468:  Call  8024ECF8  ( 00000001 00000001 00000001 )
  480:  Call  GetActorVar       ( .Actor:Self 00000001 *Var0 )
  498:  Switch  *Var0
  4A4:  	Case  ==  00000000
  4B0:  		Set   *Var0  0000000A
  4C0:  	Case  ==  00000001
  4CC:  		Set   *Var0  00000014
  4DC:  	Case  ==  00000002
  4E8:  		Set   *Var0  0000001E
  4F8:  EndSwitch
  500:  Set   *Var9  00000000
  510:  Loop  *Var0
  51C:  	Add   *Var9  00000001
  52C:  	Switch  *Var9
  538:  		Case  <  00000014
  544:  			Call  SetAnimation  ( .Actor:Self 00000001 000A000A )
  55C:  			Call  SetActorSpeed ( .Actor:Self *Fixed[10.0] )
  570:  		Case  ==  00000014
  57C:  			Call  GetActorPos   ( .Actor:Self *Var4 *Var5 *Var6 )
  598:  			Call  PlayEffect    ( ~FX:SmokeImpact:Small *Var4 *Var5 *Var6 00000020 00000004 00000000 0000000A 00000000 00000000 00000000 00000000 00000000 )
  5DC:  		Case  <  00000028
  5E8:  			Call  SetAnimation  ( .Actor:Self 00000001 000A000B )
  600:  			Call  SetActorSpeed ( .Actor:Self *Fixed[12.0] )
  614:  		Case  ==  00000028
  620:  			Call  GetActorPos   ( .Actor:Self *Var4 *Var5 *Var6 )
  63C:  			Call  PlayEffect    ( ~FX:SmokeImpact:Small *Var4 *Var5 *Var6 00000020 00000004 00000000 0000000A 00000000 00000000 00000000 00000000 00000000 )
  680:  		Case  <  00000032
  68C:  			Call  SetAnimation  ( .Actor:Self 00000001 000A000C )
  6A4:  			Call  SetActorSpeed ( .Actor:Self *Fixed[14.0] )
  6B8:  		Case  ==  00000032
  6C4:  			Call  GetActorPos   ( .Actor:Self *Var4 *Var5 *Var6 )
  6E0:  			Call  PlayEffect    ( ~FX:SmokeImpact:Small *Var4 *Var5 *Var6 00000020 00000004 00000000 0000000A 00000000 00000000 00000000 00000000 00000000 )
  724:  		Case  <  0000003C
  730:  			Call  SetAnimation  ( .Actor:Self 00000001 000A000D )
  748:  			Call  SetActorSpeed ( .Actor:Self *Fixed[16.0] )
  75C:  		Case  ==  0000003C
  768:  			Call  GetActorPos   ( .Actor:Self *Var4 *Var5 *Var6 )
  784:  			Call  PlayEffect    ( ~FX:SmokeImpact:Small *Var4 *Var5 *Var6 00000020 00000004 00000000 0000000A 00000000 00000000 00000000 00000000 00000000 )
  7C8:  	EndSwitch
  7D0:  	Wait  1`
  7DC:  EndLoop
  7E4:  Call  PlaySoundAtActor  ( .Actor:Self 0000200A )
  7F8:  Call  SetActorSounds    ( .Actor:Self .ActorSound:Walk 00000000 00000000 )
  814:  Call  UseBattleCamPreset    ( 00000002 )
  824:  Call  MoveBattleCamOver (  15` )
  834:  Call  AddActorDecoration    ( .Actor:Self 00000000 00000000 .Decoration:GreySmokeTrail )
  850:  Call  SetGoalToTarget   ( .Actor:Self )
  860:  Call  RunToGoal ( .Actor:Self  0` .False )
  878:  Call  EnemyTestTarget   ( .Actor:Self *Var0 ~Flags:DamageType:0 00000000 00000001 00000010 )
  89C:  Switch  *Var0
  8A8:  	CaseOR  ==  .HitResult:Miss % 6
  8B4:  	CaseOR  ==  .HitResult:Lucky % 5
  8C0:  		Set   *VarA  *Var0
  8D0:  		Thread
  8D8:  			Call  $Function_80218F40 ( )
  8E4:  			Call  RemoveActorDecoration ( .Actor:Self 00000000 00000000 )
  8FC:  		EndThread
  904:  		Wait  4`
  910:  		Call  SetAnimation  ( .Actor:Self 00000001 000A0009 )
  928:  		Call  SetActorRotationOffset    ( .Actor:Self FFFFFFF8 00000000 00000000 )
  944:  		Set   *Var0  00000000
  954:  		Loop  00000002
  960:  			Add   *Var0  0000001E
  970:  			Call  SetActorRotation  ( .Actor:Self 00000000 00000000 *Var0 )
  98C:  			Wait  1`
  998:  		EndLoop
  9A0:  		Wait  5`
  9AC:  		Call  GetActorPos   ( .Actor:Self *Var4 *Var5 *Var6 )
  9C8:  		Call  PlayEffect    ( ~FX:SmokeImpact:Small *Var4 *Var5 *Var6 00000010 00000004 00000000 0000000A 00000000 00000000 00000000 00000000 00000000 )
  A0C:  		Loop  00000005
  A18:  			Add   *Var0  FFFFFFF4
  A28:  			Call  SetActorRotation  ( .Actor:Self 00000000 00000000 *Var0 )
  A44:  			Wait  1`
  A50:  		EndLoop
  A58:  		Call  SetActorRotationOffset    ( .Actor:Self 00000000 00000000 00000000 )
  A74:  		Call  SetActorRotation  ( .Actor:Self 00000000 00000000 00000002 )
  A90:  		Wait  2`
  A9C:  		Call  SetActorRotation  ( .Actor:Self 00000000 00000000 FFFFFFFE )
  AB8:  		Wait  2`
  AC4:  		Call  SetActorRotation  ( .Actor:Self 00000000 00000000 00000000 )
  AE0:  		If  *VarA  ==  .HitResult:Lucky % 5
  AF0:  			Call  EnemyTestTarget   ( .Actor:Self *Var0 ~Flags:DamageType:TriggerLucky 00000000 00000000 00000000 )
  B14:  		EndIf
  B1C:  		Wait  10`
  B28:  		Call  SetAnimation      ( .Actor:Self 00000001 000A000F )
  B40:  		Wait  10`
  B4C:  		Call  UseBattleCamPreset    ( 00000002 )
  B5C:  		Call  YieldTurn ( )
  B68:  		Call  ResetAllActorSounds   ( .Actor:Self )
  B78:  		Call  SetAnimation      ( .Actor:Self 00000001 000A0006 )
  B90:  		Call  SetGoalToHome     ( .Actor:Self )
  BA0:  		Call  SetActorSpeed     ( .Actor:Self *Fixed[4.5] )
  BB4:  		Call  RunToGoal ( .Actor:Self  0` .False )
  BCC:  		Call  EnableIdleScript  ( .Actor:Self 00000001 )
  BE0:  		Call  UseIdleAnimation  ( .Actor:Self .True )
  BF4:  		Return
  BFC:  	EndCaseGroup
  C04:  EndSwitch
  C0C:  Call  RemoveActorDecoration ( .Actor:Self 00000000 00000000 )
  C24:  Call  GetActorVar   ( .Actor:Self 00000001 *Var9 )
  C3C:  Switch  *Var9
  C48:  	Case  ==  00000000
  C54:  		Wait  2`
  C60:  		Call  EnemyDamageTarget ( .Actor:Self *Var0 ~Flags:DamageType:0 0000FFFF 00000000 00000002 00000020 )
  C88:  	Case  ==  00000001
  C94:  		Wait  2`
  CA0:  		Call  EnemyDamageTarget ( .Actor:Self *Var0 ~Flags:DamageType:0 0000FFFF 00000000 00000003 00000020 )
  CC8:  	Case  ==  00000002
  CD4:  		Wait  2`
  CE0:  		Call  EnemyDamageTarget ( .Actor:Self *Var0 ~Flags:DamageType:0 0000FFFF 00000000 00000005 00000020 )
  D08:  EndSwitch
  D10:  Switch  *Var0
  D1C:  	CaseOR  ==  .HitResult:Hit % 0
  D28:  	CaseOR  ==  .HitResult:QuakeImmune % 2
  D34:  		Call  UseBattleCamPreset    ( 00000002 )
  D44:  		Call  MoveBattleCamOver     (  8` )
  D54:  		Call  GetActorPos   ( .Actor:Self *Var0 *Var1 *Var2 )
  D70:  		Add   *Var0  0000003C
  D80:  		Set   *Var1  00000000
  D90:  		Call  SetActorJumpGravity   ( .Actor:Self *Fixed[1.4] )
  DA4:  		Call  SetGoalPos    ( .Actor:Self *Var0 *Var1 *Var2 )
  DC0:  		Call  JumpToGoal    ( .Actor:Self  20` .False .True .False )
  DE0:  		Add   *Var0  0000001E
  DF0:  		Call  SetGoalPos    ( .Actor:Self *Var0 *Var1 *Var2 )
  E0C:  		Call  JumpToGoal    ( .Actor:Self  8` .False .True .False )
  E2C:  		Add   *Var0  00000014
  E3C:  		Call  SetGoalPos    ( .Actor:Self *Var0 *Var1 *Var2 )
  E58:  		Call  JumpToGoal    ( .Actor:Self  6` .False .True .False )
  E78:  		Add   *Var0  0000000A
  E88:  		Call  SetGoalPos    ( .Actor:Self *Var0 *Var1 *Var2 )
  EA4:  		Call  JumpToGoal    ( .Actor:Self  4` .False .True .False )
  EC4:  		Call  SetAnimation  ( .Actor:Self 00000001 000A000F )
  EDC:  		Wait  15`
  EE8:  		Call  YieldTurn ( )
  EF4:  		Call  ResetAllActorSounds   ( .Actor:Self )
  F04:  		Call  SetAnimation  ( .Actor:Self 00000001 000A0006 )
  F1C:  		Call  SetGoalToHome ( .Actor:Self )
  F2C:  		Call  SetActorSpeed ( .Actor:Self *Fixed[4.5] )
  F40:  		Call  RunToGoal     ( .Actor:Self  0` .False )
  F58:  	EndCaseGroup
  F60:  EndSwitch
  F68:  Call  EnableIdleScript  ( .Actor:Self 00000001 )
  F7C:  Call  UseIdleAnimation  ( .Actor:Self .True )
  F90:  Return
  F98:  End
}

#new:Script $Script_NextTurn_802221A0
{
    0:  Call  GetBattlePhase    ( *Var0 )
   10:  Switch  *Var0
   1C:  	Case  ==  0000000C
   28:  		Call  GetActorVar   ( .Actor:Self 00000002 *Var0 )
   40:  		If  *Var0  >  00000000
   50:  			Sub   *Var0  00000001
   60:  			Call  SetActorVar   ( .Actor:Self 00000002 *Var0 )
   78:  			BreakCase
   80:  		EndIf
   88:  		SetConst  *Var0  00000001
   98:  		SetConst  *Var1  000A0011
   A8:  		ExecWait  $Script_8021E118
   B4:  		Return
   BC:  EndSwitch
   C4:  Return
   CC:  End
}

#new:SpecialFormation $SpecialFormation_80222274
{
	$LeeKooper $Vector3D_8021E940 00000000 00000000 00000000 00000000 00000000
}

#new:IdleAnimations $IdleAnimations_80222290
{
	.Status:Normal    000B0004
	.Status:Stone     000B0000
	.Status:Sleep     000B0000
	.Status:Poison    000B0004
	.Status:Stop      000B0000
	.Status:Static    000B0004
	.Status:Paralyze  000B0000
	.Status:Dizzy     000B001E
	.Status:Fear      000B001E
	.Status:End
}

#new:DefenseTable $DefenseTable_802222DC
{
	.Element:Normal 00000000
	.Element:End
}

#new:StatusTable $StatusTable_802222E8
{
	.Status:Normal      0`
	.Status:Default     0`
	.Status:Sleep      60`
	.Status:Poison      0`
	.Status:Frozen      0`
	.Status:Dizzy      75`
	.Status:Fear        0`
	.Status:Static      0`
	.Status:Paralyze   75`
	.Status:Shrink     80`
	.Status:Stop       90`
	.Status:DefaultTurnMod    0`
	.Status:SleepTurnMod     -1`
	.Status:PoisonTurnMod     0`
	.Status:FrozenTurnMod     0`
	.Status:DizzyTurnMod     -1`
	.Status:FearTurnMod       0`
	.Status:StaticTurnMod     0`
	.Status:ParalyzeTurnMod   0`
	.Status:ShrinkTurnMod     0`
	.Status:StopTurnMod      -1`
	.Status:End
}

#new:PartsTable $PartsTable_80222394
{
	00800000 01000000 001600FF $IdleAnimations_80222290 $DefenseTable_802222DC 00000000 00000000 FEF90000 00000000
}

#new:Actor $LeeBombette
{
	% stats
	[Index]        81b
	[Level]         0`b
	[MaxHP]        20`b
	[Coins]         0`b
	[Flags]       00000000
	[StatusTable] $StatusTable_802222E8
	% ai
	[PartsCount]    1`s
	[PartsTable]  $PartsTable_80222394
	[Script]      $Script_Init_LeeBombette
	% move effectiveness
	[Escape]      100`b
	[Item]          0`b
	[AirLift]       0`b
	[Hurricane]     0`b % Bow's "Spook" as well
	[UpAndAway]     0`b
	[PowerBounce]  90`b
	[SpinSmash]     0`b % weight (0-4)
	% ui positions
	[Size]         30`b  28`b % width height
	[HealthBar]     0`b   0`b % dx dy
	[StatusTurn]  -10`b  20`b % dx dy
	[StatusIcon]   10`b  20`b % dx dy
}

#new:Script $Script_Init_LeeBombette
{
    0:  Call  BindTakeTurn  ( .Actor:Self $Script_TakeTurn_802229C4 )
   14:  Call  BindIdle      ( .Actor:Self $Script_Idle_80222458 )
   28:  Call  BindHandleEvent   ( .Actor:Self $Script_HandleEvent_80222468 )
   3C:  Call  BindNextTurn  ( .Actor:Self $Script_NextTurn_80223298 )
   50:  Call  SetActorVar   ( .Actor:Self 00000002 00000001 )
   68:  Return
   70:  End
}

#new:Script $Script_Idle_80222458
{
    0:  Return
    8:  End
}

#new:Script $Script_HandleEvent_80222468
{
    0:  Call  UseIdleAnimation  ( .Actor:Self .False )
   14:  Call  EnableIdleScript  ( .Actor:Self 00000000 )
   28:  Call  GetLastEvent      ( .Actor:Self *Var0 )
   3C:  Switch  *Var0
   48:  	CaseOR  ==  .Event:HitCombo % 9
   54:  	CaseOR  ==  .Event:Hit % A
   60:  		SetConst  *Var0  00000001
   70:  		SetConst  *Var1  000B0012
   80:  		ExecWait  DoNormalHit
   8C:  	EndCaseGroup
   94:  	Case  ==  .Event:BurnHit % E
   A0:  		SetConst  *Var0  00000001
   B0:  		SetConst  *Var1  000B0013
   C0:  		SetConst  *Var2  000B0014
   D0:  		ExecWait  DoBurnHit
   DC:  	Case  ==  .Event:BurnDeath % 24
   E8:  		SetConst  *Var0  00000001
   F8:  		SetConst  *Var1  000B0013
  108:  		SetConst  *Var2  000B0014
  118:  		ExecWait  DoBurnHit
  124:  		ExecWait  $Script_8021E0E0
  130:  		SetConst  *Var0  00000001
  140:  		SetConst  *Var1  000B0014
  150:  		ExecWait  DoDeath
  15C:  		Return
  164:  	Case  ==  .Event:SpinSmashHit % B
  170:  		SetConst  *Var0  00000001
  180:  		SetConst  *Var1  000B0012
  190:  		ExecWait  DoSpinSmashHit
  19C:  	Case  ==  .Event:SpinSmashDeath % 21
  1A8:  		ExecWait  $Script_8021E0E0
  1B4:  		SetConst  *Var0  00000001
  1C4:  		SetConst  *Var1  000B0012
  1D4:  		ExecWait  DoSpinSmashHit
  1E0:  		SetConst  *Var0  00000001
  1F0:  		SetConst  *Var1  000B0012
  200:  		ExecWait  DoDeath
  20C:  		Return
  214:  	Case  ==  .Event:ShockHit % 2F
  220:  		SetConst  *Var0  00000001
  230:  		SetConst  *Var1  000B0012
  240:  		Set   *Var2  0000000F
  250:  		ExecWait  $Script_8021E5DC
  25C:  		Call  SetAnimation  ( .Actor:Self 00000001 000B0008 )
  274:  		Call  SetGoalToHome ( .Actor:Self )
  284:  		Call  SetActorSpeed ( .Actor:Self *Fixed[5.0] )
  298:  		Call  RunToGoal     ( .Actor:Self  0` .False )
  2B0:  	Case  ==  .Event:ShockDeath % 26
  2BC:  		ExecWait  $Script_8021E0E0
  2C8:  		SetConst  *Var0  00000001
  2D8:  		SetConst  *Var1  000B0012
  2E8:  		Set   *Var2  0000000F
  2F8:  		ExecWait  $Script_8021E5DC
  304:  		SetConst  *Var0  00000001
  314:  		SetConst  *Var1  000B0014
  324:  		ExecWait  DoDeath
  330:  		Return
  338:  	CaseOR  ==  00000017 % 17
  344:  	CaseOR  ==  .Event:Immune % 19
  350:  	CaseOR  ==  .Event:AirLiftFailed % 1F
  35C:  		SetConst  *Var0  00000001
  36C:  		SetConst  *Var1  000B0004
  37C:  		ExecWait  DoImmune
  388:  	EndCaseGroup
  390:  	Case  ==  .Event:Death % 20
  39C:  		ExecWait  $Script_8021E0E0
  3A8:  		SetConst  *Var0  00000001
  3B8:  		SetConst  *Var1  000B0012
  3C8:  		ExecWait  DoNormalHit
  3D4:  		Wait  10`
  3E0:  		SetConst  *Var0  00000001
  3F0:  		SetConst  *Var1  000B0012
  400:  		ExecWait  DoDeath
  40C:  		Return
  414:  	Case  ==  .Event:RecoverStatus % 31
  420:  		SetConst  *Var0  00000001
  430:  		SetConst  *Var1  000B0004
  440:  		ExecWait  DoRecover
  44C:  	Case  ==  .Event:ScareAway % 39
  458:  		SetConst  *Var0  00000001
  468:  		SetConst  *Var1  000B0008
  478:  		SetConst  *Var2  000B0012
  488:  		ExecWait  DoScareAway
  494:  		Return
  49C:  	Case  ==  .Event:BeginAirLift % 3A
  4A8:  		SetConst  *Var0  00000001
  4B8:  		SetConst  *Var1  000B0008
  4C8:  		ExecWait  DoAirLift
  4D4:  	Case  ==  .Event:BlowAway % 16
  4E0:  		SetConst  *Var0  00000001
  4F0:  		SetConst  *Var1  000B0012
  500:  		ExecWait  DoBlowAway
  50C:  		Return
  514:  	Default
  51C:  EndSwitch
  524:  Call  EnableIdleScript  ( .Actor:Self 00000001 )
  538:  Call  UseIdleAnimation  ( .Actor:Self .True )
  54C:  Return
  554:  End
}

#new:Script $Script_TakeTurn_802229C4
{
    0:  Call  UseIdleAnimation  ( .Actor:Self .False )
   14:  Call  EnableIdleScript  ( .Actor:Self 00000000 )
   28:  Wait  10`
   34:  Call  UseBattleCamPreset    ( 0000003F )
   44:  Call  BattleCamTargetActor  ( .Actor:Self )
   54:  Call  SetTargetActor    ( .Actor:Self .Actor:Player )
   68:  Call  SetGoalToTarget   ( .Actor:Self )
   78:  Call  AddGoalPos        ( .Actor:Self  40`  0`  0` )
   94:  Call  MoveBattleCamOver (  30` )
   A4:  Call  SetAnimation      ( .Actor:Self 00000001 000B0008 )
   BC:  Call  RunToGoal ( .Actor:Self  30` .False )
   D4:  Call  SetAnimation      ( .Actor:Self 00000001 000B0004 )
   EC:  Call  SetAnimation      ( .Actor:Self 00000001 000B000F )
  104:  Wait  15`
  110:  Call  SetActorSounds    ( .Actor:Self .ActorSound:Walk 00000000 00000000 )
  12C:  Call  PlaySoundAtActor  ( .Actor:Self 00002020 )
  140:  Call  EnemyTestTarget   ( .Actor:Self *Var0 ~Flags:DamageType:0 00000000 00000001 00000010 )
  164:  Switch  *Var0
  170:  	CaseOR  ==  .HitResult:Miss % 6
  17C:  	CaseOR  ==  .HitResult:Lucky % 5
  188:  		Set   *VarA  *Var0
  198:  		Call  SetGoalToTarget   ( .Actor:Self )
  1A8:  		Call  AddGoalPos    ( .Actor:Self  -10`  0`  0` )
  1C4:  		Call  SetAnimation  ( .Actor:Self 00000001 000B0010 )
  1DC:  		Call  RunToGoal     ( .Actor:Self  5` .False )
  1F4:  		Call  SetAnimation  ( .Actor:Self 00000001 000B0004 )
  20C:  		Thread
  214:  			Call  SetActorRotationOffset    ( .Actor:Self 00000000 0000000F 00000000 )
  230:  			Set   *Var0  00000000
  240:  			Loop  0000000A
  24C:  				Add   *Var0  00000048
  25C:  				Call  SetActorRotation  ( .Actor:Self 00000000 00000000 *Var0 )
  278:  				Wait  1`
  284:  			EndLoop
  28C:  			Call  SetActorRotationOffset    ( .Actor:Self 00000000 00000000 00000000 )
  2A8:  		EndThread
  2B0:  		Call  AddGoalPos    ( .Actor:Self  -60`  0`  0` )
  2CC:  		Call  RunToGoal     ( .Actor:Self  10` .False )
  2E4:  		Call  SetAnimation  ( .Actor:Self 00000001 000B0004 )
  2FC:  		Thread
  304:  			Call  $Function_80219064 ( )
  310:  		EndThread
  318:  		If  *VarA  ==  .HitResult:Lucky % 5
  328:  			Call  EnemyTestTarget   ( .Actor:Self *Var0 ~Flags:DamageType:TriggerLucky 00000000 00000000 00000000 )
  34C:  		EndIf
  354:  		Wait  20`
  360:  		Call  UseBattleCamPreset    ( 00000002 )
  370:  		Call  YieldTurn ( )
  37C:  		Call  SetAnimation      ( .Actor:Self 00000001 000B0008 )
  394:  		Call  SetGoalToHome     ( .Actor:Self )
  3A4:  		Call  SetActorSpeed     ( .Actor:Self *Fixed[5.0] )
  3B8:  		Call  RunToGoal ( .Actor:Self  0` .False )
  3D0:  		Call  EnableIdleScript  ( .Actor:Self 00000001 )
  3E4:  		Call  UseIdleAnimation  ( .Actor:Self .True )
  3F8:  		Return
  400:  	EndCaseGroup
  408:  EndSwitch
  410:  Set   *VarA  *Var0
  420:  Call  SetGoalToTarget   ( .Actor:Self )
  430:  Call  SetAnimation  ( .Actor:Self 00000001 000B0010 )
  448:  Call  RunToGoal     ( .Actor:Self  4` .False )
  460:  Call  GetActorVar   ( .Actor:Self 00000001 *Var9 )
  478:  Switch  *Var9
  484:  	Case  ==  00000000
  490:  		Wait  2`
  49C:  		Call  EnemyDamageTarget ( .Actor:Self *Var0 ~Flags:DamageType:0 00000000 00000000 00000002 00000020 )
  4C4:  	Case  ==  00000001
  4D0:  		Wait  2`
  4DC:  		Call  EnemyDamageTarget ( .Actor:Self *Var0 ~Flags:DamageType:0 00000000 00000000 00000003 00000020 )
  504:  	Case  ==  00000002
  510:  		Wait  2`
  51C:  		Call  EnemyDamageTarget ( .Actor:Self *Var0 ~Flags:DamageType:0 00000000 00000000 00000005 00000020 )
  544:  EndSwitch
  54C:  Switch  *Var0
  558:  	CaseOR  ==  .HitResult:Hit % 0
  564:  	CaseOR  ==  .HitResult:QuakeImmune % 2
  570:  		Call  SetAnimation  ( .Actor:Self 00000001 000B0004 )
  588:  		Call  UseBattleCamPreset    ( 00000002 )
  598:  		Call  MoveBattleCamOver     (  8` )
  5A8:  		Call  SetAnimation  ( .Actor:Self 00000001 000B0011 )
  5C0:  		Call  GetGoalPos    ( .Actor:Self *Var0 *Var1 *Var2 )
  5DC:  		Add   *Var0  00000028
  5EC:  		Set   *Var1  00000000
  5FC:  		Call  SetActorJumpGravity   ( .Actor:Self *Fixed[1.4] )
  610:  		Call  SetGoalPos    ( .Actor:Self *Var0 *Var1 *Var2 )
  62C:  		Call  JumpToGoal    ( .Actor:Self  20` .False .True .False )
  64C:  		Call  SetAnimation  ( .Actor:Self 00000001 000B000E )
  664:  		Wait  1`
  670:  		Call  SetAnimation  ( .Actor:Self 00000001 000B0011 )
  688:  		Add   *Var0  00000028
  698:  		Call  SetGoalPos    ( .Actor:Self *Var0 *Var1 *Var2 )
  6B4:  		Call  JumpToGoal    ( .Actor:Self  8` .False .True .False )
  6D4:  		Call  SetAnimation  ( .Actor:Self 00000001 000B000E )
  6EC:  		Wait  1`
  6F8:  		Call  SetAnimation  ( .Actor:Self 00000001 000B0011 )
  710:  		Add   *Var0  00000014
  720:  		Call  SetGoalPos    ( .Actor:Self *Var0 *Var1 *Var2 )
  73C:  		Call  JumpToGoal    ( .Actor:Self  6` .False .True .False )
  75C:  		Call  SetAnimation  ( .Actor:Self 00000001 000B000E )
  774:  		Wait  1`
  780:  		Call  SetAnimation  ( .Actor:Self 00000001 000B0011 )
  798:  		Add   *Var0  0000000A
  7A8:  		Call  SetGoalPos    ( .Actor:Self *Var0 *Var1 *Var2 )
  7C4:  		Call  JumpToGoal    ( .Actor:Self  4` .False .True .False )
  7E4:  		Call  SetAnimation  ( .Actor:Self 00000001 000B000E )
  7FC:  		Wait  1`
  808:  		Call  SetAnimation  ( .Actor:Self 00000001 000B0004 )
  820:  		Wait  8`
  82C:  		Call  YieldTurn ( )
  838:  		Call  SetAnimation  ( .Actor:Self 00000001 000B0008 )
  850:  		Call  SetGoalToHome ( .Actor:Self )
  860:  		Call  SetActorSpeed ( .Actor:Self *Fixed[5.0] )
  874:  		Call  RunToGoal     ( .Actor:Self  0` .False )
  88C:  	EndCaseGroup
  894:  EndSwitch
  89C:  Call  EnableIdleScript  ( .Actor:Self 00000001 )
  8B0:  Call  UseIdleAnimation  ( .Actor:Self .True )
  8C4:  Return
  8CC:  End
}

#new:Script $Script_NextTurn_80223298
{
    0:  Call  GetBattlePhase    ( *Var0 )
   10:  Switch  *Var0
   1C:  	Case  ==  0000000C
   28:  		Call  GetActorVar   ( .Actor:Self 00000002 *Var0 )
   40:  		If  *Var0  >  00000000
   50:  			Sub   *Var0  00000001
   60:  			Call  SetActorVar   ( .Actor:Self 00000002 *Var0 )
   78:  			BreakCase
   80:  		EndIf
   88:  		SetConst  *Var0  00000001
   98:  		SetConst  *Var1  000B0012
   A8:  		ExecWait  $Script_8021E118
   B4:  		Return
   BC:  EndSwitch
   C4:  Return
   CC:  End
}

#new:SpecialFormation $SpecialFormation_8022336C
{
	$LeeBombette $Vector3D_8021E940 00000000 00000000 00000000 00000000 00000000
}

#new:IdleAnimations $IdleAnimations_80223388
{
	.Status:Normal    000C0001
	.Status:Stone     000C0000
	.Status:Sleep     000C0000
	.Status:Poison    000C0001
	.Status:Stop      000C0000
	.Status:Static    000C0001
	.Status:Paralyze  000C0000
	.Status:Dizzy     000C0001
	.Status:Fear      000C0001
	.Status:End
}

#new:DefenseTable $DefenseTable_802233D4
{
	.Element:Normal 00000001
	.Element:End
}

#new:StatusTable $StatusTable_802233E0
{
	.Status:Normal      0`
	.Status:Default     0`
	.Status:Sleep      60`
	.Status:Poison      0`
	.Status:Frozen      0`
	.Status:Dizzy      75`
	.Status:Fear        0`
	.Status:Static      0`
	.Status:Paralyze   75`
	.Status:Shrink     80`
	.Status:Stop       90`
	.Status:DefaultTurnMod    0`
	.Status:SleepTurnMod     -1`
	.Status:PoisonTurnMod     0`
	.Status:FrozenTurnMod     0`
	.Status:DizzyTurnMod     -1`
	.Status:FearTurnMod       0`
	.Status:StaticTurnMod     0`
	.Status:ParalyzeTurnMod   0`
	.Status:ShrinkTurnMod     0`
	.Status:StopTurnMod      -1`
	.Status:End
}

#new:PartsTable $PartsTable_8022348C
{
	00020000 01000000 FD2000FF $IdleAnimations_80223388 $DefenseTable_802233D4 00000000 00000000 00F00000 00000000
	00800001 02003200 FDEE00FF 00000000 $DefenseTable_802233D4 00000000 00000000 00F00000 00000000
}

#new:Actor $LeeParakarry
{
	% stats
	[Index]        82b
	[Level]         0`b
	[MaxHP]        20`b
	[Coins]         0`b
	[Flags]       00000200
	[StatusTable] $StatusTable_802233E0
	% ai
	[PartsCount]    2`s
	[PartsTable]  $PartsTable_8022348C
	[Script]      $Script_Init_Parakarry
	% move effectiveness
	[Escape]      100`b
	[Item]          0`b
	[AirLift]       0`b
	[Hurricane]     0`b % Bow's "Spook" as well
	[UpAndAway]     0`b
	[PowerBounce]  90`b
	[SpinSmash]     0`b % weight (0-4)
	% ui positions
	[Size]         38`b  38`b % width height
	[HealthBar]     0`b   0`b % dx dy
	[StatusTurn]  -10`b  20`b % dx dy
	[StatusIcon]   10`b  20`b % dx dy
}

#new:Script $Script_Init_Parakarry
{
    0:  Call  BindTakeTurn  ( .Actor:Self $Script_TakeTurn_80224304 )
   14:  Call  BindIdle      ( .Actor:Self $Script_Idle_80223574 )
   28:  Call  BindHandleEvent   ( .Actor:Self $Script_HandleEvent_80223584 )
   3C:  Call  BindNextTurn  ( .Actor:Self $Script_NextTurn_80224320 )
   50:  Call  SetActorVar   ( .Actor:Self 00000002 00000001 )
   68:  Return
   70:  End
}

#new:Script $Script_Idle_80223574
{
    0:  Return
    8:  End
}

#new:Script $Script_HandleEvent_80223584
{
    0:  Call  UseIdleAnimation  ( .Actor:Self .False )
   14:  Call  EnableIdleScript  ( .Actor:Self 00000000 )
   28:  Call  GetLastEvent      ( .Actor:Self *Var0 )
   3C:  Switch  *Var0
   48:  	CaseOR  ==  .Event:HitCombo % 9
   54:  	CaseOR  ==  .Event:Hit % A
   60:  		SetConst  *Var0  00000001
   70:  		SetConst  *Var1  000C000E
   80:  		ExecWait  DoNormalHit
   8C:  	EndCaseGroup
   94:  	Case  ==  .Event:BurnHit % E
   A0:  		SetConst  *Var0  00000001
   B0:  		SetConst  *Var1  000C000F
   C0:  		SetConst  *Var2  000C0010
   D0:  		ExecWait  DoBurnHit
   DC:  	Case  ==  .Event:BurnDeath % 24
   E8:  		SetConst  *Var0  00000001
   F8:  		SetConst  *Var1  000C000F
  108:  		SetConst  *Var2  000C0010
  118:  		ExecWait  DoBurnHit
  124:  		ExecWait  $Script_8021E0E0
  130:  		Wait  10`
  13C:  		SetConst  *Var0  00000001
  14C:  		SetConst  *Var1  000C0010
  15C:  		ExecWait  DoDeath
  168:  		Return
  170:  	Case  ==  .Event:SpinSmashHit % B
  17C:  		SetConst  *Var0  00000001
  18C:  		SetConst  *Var1  000C000E
  19C:  		ExecWait  DoSpinSmashHit
  1A8:  	Case  ==  .Event:SpinSmashDeath % 21
  1B4:  		ExecWait  $Script_8021E0E0
  1C0:  		SetConst  *Var0  00000001
  1D0:  		SetConst  *Var1  000C000E
  1E0:  		ExecWait  DoSpinSmashHit
  1EC:  		SetConst  *Var0  00000001
  1FC:  		SetConst  *Var1  000C000E
  20C:  		ExecWait  DoDeath
  218:  		Return
  220:  	Case  ==  .Event:ShockHit % 2F
  22C:  		SetConst  *Var0  00000001
  23C:  		SetConst  *Var1  000C000D
  24C:  		Set   *Var2  00000016
  25C:  		ExecWait  $Script_8021E5DC
  268:  		Call  SetGoalToHome ( .Actor:Self )
  278:  		Call  SetActorSpeed ( .Actor:Self *Fixed[6.0] )
  28C:  		Call  SetAnimation  ( .Actor:Self 00000001 000C0003 )
  2A4:  		Call  FlyToGoal     ( .Actor:Self  0`  -5` .Easing:Linear )
  2C0:  	Case  ==  .Event:ShockDeath % 26
  2CC:  		ExecWait  $Script_8021E0E0
  2D8:  		SetConst  *Var0  00000001
  2E8:  		SetConst  *Var1  000C000D
  2F8:  		Set   *Var2  00000016
  308:  		ExecWait  $Script_8021E5DC
  314:  		SetConst  *Var0  00000001
  324:  		SetConst  *Var1  000C000E
  334:  		ExecWait  DoDeath
  340:  		Return
  348:  	CaseOR  ==  00000017 % 17
  354:  	CaseOR  ==  .Event:Immune % 19
  360:  	CaseOR  ==  .Event:AirLiftFailed % 1F
  36C:  		SetConst  *Var0  00000001
  37C:  		SetConst  *Var1  000C0001
  38C:  		ExecWait  DoImmune
  398:  	EndCaseGroup
  3A0:  	Case  ==  .Event:Death % 20
  3AC:  		ExecWait  $Script_8021E0E0
  3B8:  		SetConst  *Var0  00000001
  3C8:  		SetConst  *Var1  000C000E
  3D8:  		ExecWait  DoNormalHit
  3E4:  		Wait  10`
  3F0:  		SetConst  *Var0  00000001
  400:  		SetConst  *Var1  000C000E
  410:  		ExecWait  DoDeath
  41C:  		Return
  424:  	Case  ==  .Event:RecoverStatus % 31
  430:  		SetConst  *Var0  00000001
  440:  		SetConst  *Var1  000C0001
  450:  		ExecWait  DoRecover
  45C:  	Case  ==  .Event:ScareAway % 39
  468:  		SetConst  *Var0  00000001
  478:  		SetConst  *Var1  000C0003
  488:  		SetConst  *Var2  000C000D
  498:  		ExecWait  DoScareAway
  4A4:  		Return
  4AC:  	Case  ==  .Event:BeginAirLift % 3A
  4B8:  		SetConst  *Var0  00000001
  4C8:  		SetConst  *Var1  000C0003
  4D8:  		ExecWait  DoAirLift
  4E4:  	Case  ==  .Event:BlowAway % 16
  4F0:  		Call  GetStatusFlags    ( .Actor:Self *Var0 )
  504:  		If  *Var0  !&  ~Flags:StatusFlags:Sleep|Frozen|Fear|Paralyze|Dizzy|Stone|Stop % 35D000
  514:  			If  *Var0  &  ~Flags:StatusFlags:Shrink % 80000
  524:  				Call  SetActorDispOffset    ( .Actor:Self 00000000 00000001 00000000 )
  540:  			Else
  548:  				Call  SetActorDispOffset    ( .Actor:Self 00000000 00000003 00000000 )
  564:  			EndIf
  56C:  		EndIf
  574:  		SetConst  *Var0  00000001
  584:  		SetConst  *Var1  000C000E
  594:  		ExecWait  DoBlowAway
  5A0:  		Return
  5A8:  	Default
  5B0:  EndSwitch
  5B8:  Call  EnableIdleScript  ( .Actor:Self 00000001 )
  5CC:  Call  UseIdleAnimation  ( .Actor:Self .True )
  5E0:  Return
  5E8:  End
}

#new:Script $Script_80223B74
{
    0:  Call  UseIdleAnimation  ( .Actor:Self .False )
   14:  Call  EnableIdleScript  ( .Actor:Self 00000000 )
   28:  Call  SetTargetActor    ( .Actor:Self .Actor:Player )
   3C:  Call  UseBattleCamPreset    ( 0000003F )
   4C:  Call  BattleCamTargetActor  ( .Actor:Self )
   5C:  Call  8024ECF8      ( FFFFFFFF 00000001 00000000 )
   74:  Call  SetAnimation  ( .Actor:Self 00000001 000C0003 )
   8C:  Call  SetGoalToTarget   ( .Actor:Self )
   9C:  Call  AddGoalPos    ( .Actor:Self  20`  0`  0` )
   B8:  Call  SetActorSpeed ( .Actor:Self *Fixed[4.0] )
   CC:  Call  FlyToGoal     ( .Actor:Self  0`  -10` .Easing:CosInOut )
   E8:  Call  SetAnimation  ( .Actor:Self 00000001 000C0000 )
  100:  Wait  3`
  10C:  Call  8024E664      ( 00000001 )
  11C:  Call  SetActorSounds    ( .Actor:Self .ActorSound:Fly 00000000 00000000 )
  138:  Call  PlaySoundAtActor  ( .Actor:Self 00002004 )
  14C:  Call  SetAnimation  ( .Actor:Self 00000001 000C0014 )
  164:  Call  AddGoalPos    ( .Actor:Self  0`  10`  0` )
  180:  Call  FlyToGoal     ( .Actor:Self  5`  0` .Easing:Linear )
  19C:  Wait  2`
  1A8:  Thread
  1B0:  	Wait  3`
  1BC:  	Call  SetAnimation  ( .Actor:Self 00000001 000C0004 )
  1D4:  EndThread
  1DC:  Call  AddGoalPos        ( .Actor:Self  40`  15`  0` )
  1F8:  Call  FlyToGoal ( .Actor:Self  20`  -20` .Easing:QuarticOut )
  214:  Call  PlaySoundAtActor  ( .Actor:Self 00002005 )
  228:  Call  EnableActorBlur   ( .Actor:Self 00000001 )
  23C:  Call  SetGoalToTarget   ( .Actor:Self )
  24C:  Call  SetAnimation      ( .Actor:Self 00000001 000C0005 )
  264:  Call  FlyToGoal ( .Actor:Self  5`  0` .Easing:Linear )
  280:  Call  EnemyTestTarget   ( .Actor:Self *Var0 ~Flags:DamageType:0 00000000 00000001 00000010 )
  2A4:  Switch  *Var0
  2B0:  	CaseOR  ==  .HitResult:Miss % 6
  2BC:  	CaseOR  ==  .HitResult:Lucky % 5
  2C8:  		Set   *VarA  *Var0
  2D8:  		Thread
  2E0:  			Wait  5`
  2EC:  			Call  SetAnimation  ( .Actor:Self 00000001 000C0001 )
  304:  		EndThread
  30C:  		Call  SetGoalToTarget   ( .Actor:Self )
  31C:  		Call  AddGoalPos        ( .Actor:Self  -40`  10`  0` )
  338:  		Call  FlyToGoal ( .Actor:Self  10`  -20` .Easing:QuadraticOut )
  354:  		If  *VarA  ==  .HitResult:Lucky % 5
  364:  			Call  EnemyTestTarget   ( .Actor:Self *Var0 ~Flags:DamageType:TriggerLucky 00000000 00000000 00000000 )
  388:  		EndIf
  390:  		Wait  20`
  39C:  		Call  EnableActorBlur   ( .Actor:Self 00000000 )
  3B0:  		Wait  15`
  3BC:  		Call  UseBattleCamPreset    ( 00000002 )
  3CC:  		Call  YieldTurn ( )
  3D8:  		Call  SetGoalToHome     ( .Actor:Self )
  3E8:  		Call  SetActorSpeed     ( .Actor:Self *Fixed[6.0] )
  3FC:  		Call  SetAnimation      ( .Actor:Self 00000001 000C0003 )
  414:  		Call  FlyToGoal ( .Actor:Self  0`  -5` .Easing:Linear )
  430:  		Call  EnableIdleScript  ( .Actor:Self 00000001 )
  444:  		Call  UseIdleAnimation  ( .Actor:Self .True )
  458:  		Return
  460:  	EndCaseGroup
  468:  EndSwitch
  470:  Call  EnableActorBlur   ( .Actor:Self 00000000 )
  484:  Call  SetAnimation      ( .Actor:Self 00000001 000C0006 )
  49C:  Wait  1`
  4A8:  Call  GetActorVar       ( .Actor:Self 00000001 *Var9 )
  4C0:  Switch  *Var9
  4CC:  	Case  ==  00000000
  4D8:  		Wait  2`
  4E4:  		Call  EnemyDamageTarget ( .Actor:Self *Var0 ~Flags:DamageType:0 00000000 00000000 00000002 00000020 )
  50C:  	Case  ==  00000001
  518:  		Wait  2`
  524:  		Call  EnemyDamageTarget ( .Actor:Self *Var0 ~Flags:DamageType:0 00000000 00000000 00000003 00000020 )
  54C:  	Case  ==  00000002
  558:  		Wait  2`
  564:  		Call  EnemyDamageTarget ( .Actor:Self *Var0 ~Flags:DamageType:0 00000000 00000000 00000005 00000020 )
  58C:  EndSwitch
  594:  Call  PlaySound ( 00000000 )
  5A4:  Switch  *Var0
  5B0:  	CaseOR  ==  .HitResult:Hit % 0
  5BC:  	CaseOR  ==  .HitResult:QuakeImmune % 2
  5C8:  		Call  UseBattleCamPreset    ( 00000002 )
  5D8:  		Call  SetAnimation  ( .Actor:Self 00000001 000C0005 )
  5F0:  		Call  SetActorJumpGravity   ( .Actor:Self *Fixed[1.4] )
  604:  		Call  AddGoalPos    ( .Actor:Self  50`  0`  0` )
  620:  		Call  JumpToGoal    ( .Actor:Self  15` .False .False .False )
  640:  		Call  SetAnimation  ( .Actor:Self 00000001 000C0000 )
  658:  		Thread
  660:  			Wait  4`
  66C:  			Call  SetAnimation  ( .Actor:Self 00000001 000C0003 )
  684:  		EndThread
  68C:  		Call  AddGoalPos    ( .Actor:Self  30`  0`  0` )
  6A8:  		Call  JumpWithBounce    ( .Actor:Self  10` *Fixed[4.0] )
  6C0:  		Call  SetAnimation  ( .Actor:Self 00000001 000C0001 )
  6D8:  		Wait  6`
  6E4:  		Call  YieldTurn ( )
  6F0:  		Call  SetGoalToHome ( .Actor:Self )
  700:  		Call  SetActorSpeed ( .Actor:Self *Fixed[6.0] )
  714:  		Call  SetAnimation  ( .Actor:Self 00000001 000C0003 )
  72C:  		Call  FlyToGoal     ( .Actor:Self  0`  -5` .Easing:Linear )
  748:  	EndCaseGroup
  750:  EndSwitch
  758:  Call  EnableIdleScript  ( .Actor:Self 00000001 )
  76C:  Call  UseIdleAnimation  ( .Actor:Self .True )
  780:  Return
  788:  End
}

#new:Script $Script_TakeTurn_80224304
{
    0:  ExecWait  $Script_80223B74
    C:  Return
   14:  End
}

#new:Script $Script_NextTurn_80224320
{
    0:  Call  GetBattlePhase    ( *Var0 )
   10:  Switch  *Var0
   1C:  	Case  ==  0000000C
   28:  		Call  GetActorVar   ( .Actor:Self 00000002 *Var0 )
   40:  		If  *Var0  >  00000000
   50:  			Sub   *Var0  00000001
   60:  			Call  SetActorVar   ( .Actor:Self 00000002 *Var0 )
   78:  			BreakCase
   80:  		EndIf
   88:  		SetConst  *Var0  00000001
   98:  		SetConst  *Var1  000C000D
   A8:  		ExecWait  $Script_8021E118
   B4:  		Return
   BC:  EndSwitch
   C4:  Return
   CC:  End
}

#new:SpecialFormation $SpecialFormation_802243F4
{
	$LeeParakarry $Vector3D_8021E940 00000000 00000000 00000000 00000000 00000000
}

#new:IdleAnimations $IdleAnimations_80224410
{
	.Status:Normal    000D0001
	.Status:Stone     000D0000
	.Status:Sleep     000D0000
	.Status:Poison    000D0001
	.Status:Stop      000D0000
	.Status:Static    000D0001
	.Status:Paralyze  000D0000
	.Status:Dizzy     000D001A
	.Status:Fear      000D001A
	.Status:End
}

#new:DefenseTable $DefenseTable_8022445C
{
	.Element:Normal 00000000
	.Element:End
}

#new:StatusTable $StatusTable_80224468
{
	.Status:Normal      0`
	.Status:Default     0`
	.Status:Sleep      60`
	.Status:Poison      0`
	.Status:Frozen      0`
	.Status:Dizzy      75`
	.Status:Fear        0`
	.Status:Static      0`
	.Status:Paralyze   75`
	.Status:Shrink     80`
	.Status:Stop       90`
	.Status:DefaultTurnMod    0`
	.Status:SleepTurnMod     -1`
	.Status:PoisonTurnMod     0`
	.Status:FrozenTurnMod     0`
	.Status:DizzyTurnMod     -1`
	.Status:FearTurnMod       0`
	.Status:StaticTurnMod     0`
	.Status:ParalyzeTurnMod   0`
	.Status:ShrinkTurnMod     0`
	.Status:StopTurnMod      -1`
	.Status:End
}

#new:PartsTable $PartsTable_80224514
{
	00020000 01000000 001800FF $IdleAnimations_80224410 $DefenseTable_8022445C 00000000 00000000 00F60000 00000000
	00800001 02003200 00E600FF 00000000 $DefenseTable_8022445C 00000000 00000000 00F60000 00000000
}

#new:Actor $LeeBow
{
	% stats
	[Index]        83b
	[Level]         0`b
	[MaxHP]        20`b
	[Coins]         0`b
	[Flags]       00000200
	[StatusTable] $StatusTable_80224468
	% ai
	[PartsCount]    2`s
	[PartsTable]  $PartsTable_80224514
	[Script]      $Script_Init_Bow
	% move effectiveness
	[Escape]      100`b
	[Item]          0`b
	[AirLift]       0`b
	[Hurricane]     0`b % Bow's "Spook" as well
	[UpAndAway]     0`b
	[PowerBounce]  90`b
	[SpinSmash]     0`b % weight (0-4)
	% ui positions
	[Size]         36`b  29`b % width height
	[HealthBar]     0`b   0`b % dx dy
	[StatusTurn]  -10`b  20`b % dx dy
	[StatusIcon]   10`b  20`b % dx dy
}

#new:Script $Script_Init_Bow
{
    0:  Call  BindTakeTurn  ( .Actor:Self $Script_TakeTurn_80224CA0 )
   14:  Call  BindIdle      ( .Actor:Self $Script_Idle_802245FC )
   28:  Call  BindHandleEvent   ( .Actor:Self $Script_HandleEvent_8022460C )
   3C:  Call  BindNextTurn  ( .Actor:Self $Script_NextTurn_80225884 )
   50:  Call  SetActorVar   ( .Actor:Self 00000002 00000001 )
   68:  Return
   70:  End
}

#new:Script $Script_Idle_802245FC
{
    0:  Return
    8:  End
}

#new:Script $Script_HandleEvent_8022460C
{
    0:  Call  UseIdleAnimation  ( .Actor:Self .False )
   14:  Call  EnableIdleScript  ( .Actor:Self 00000000 )
   28:  Call  GetLastEvent      ( .Actor:Self *Var0 )
   3C:  Switch  *Var0
   48:  	CaseOR  ==  .Event:HitCombo % 9
   54:  	CaseOR  ==  .Event:Hit % A
   60:  		SetConst  *Var0  00000001
   70:  		SetConst  *Var1  000D0015
   80:  		ExecWait  DoNormalHit
   8C:  	EndCaseGroup
   94:  	Case  ==  .Event:BurnHit % E
   A0:  		SetConst  *Var0  00000001
   B0:  		SetConst  *Var1  000D0018
   C0:  		SetConst  *Var2  000D0019
   D0:  		ExecWait  DoBurnHit
   DC:  	Case  ==  .Event:BurnDeath % 24
   E8:  		SetConst  *Var0  00000001
   F8:  		SetConst  *Var1  000D0018
  108:  		SetConst  *Var2  000D0019
  118:  		ExecWait  DoBurnHit
  124:  		ExecWait  $Script_8021E0E0
  130:  		Wait  10`
  13C:  		SetConst  *Var0  00000001
  14C:  		SetConst  *Var1  000D0019
  15C:  		ExecWait  DoDeath
  168:  		Return
  170:  	Case  ==  .Event:SpinSmashHit % B
  17C:  		SetConst  *Var0  00000001
  18C:  		SetConst  *Var1  000D0015
  19C:  		ExecWait  DoSpinSmashHit
  1A8:  	Case  ==  .Event:SpinSmashDeath % 21
  1B4:  		ExecWait  $Script_8021E0E0
  1C0:  		SetConst  *Var0  00000001
  1D0:  		SetConst  *Var1  000D0015
  1E0:  		ExecWait  DoSpinSmashHit
  1EC:  		SetConst  *Var0  00000001
  1FC:  		SetConst  *Var1  000D0015
  20C:  		ExecWait  DoDeath
  218:  		Return
  220:  	Case  ==  .Event:ShockHit % 2F
  22C:  		Call  UseBattleCamPreset    ( 00000002 )
  23C:  		SetConst  *Var0  00000001
  24C:  		SetConst  *Var1  000D0015
  25C:  		Set   *Var2  0000000E
  26C:  		ExecWait  $Script_8021E5DC
  278:  		Thread
  280:  			Set   *Var0  000000C8
  290:  			Loop  00000014
  29C:  				Sub   *Var0  0000000A
  2AC:  				Call  SetPartAlpha  ( .Actor:Self 00000001 *Var0 )
  2C4:  				Wait  1`
  2D0:  			EndLoop
  2D8:  		EndThread
  2E0:  		Wait  10`
  2EC:  		Call  UseBattleCamPreset    ( 00000002 )
  2FC:  		Call  MoveBattleCamOver     (  60` )
  30C:  		Call  SetGoalToHome ( .Actor:Self )
  31C:  		Call  SetAnimation  ( .Actor:Self 00000001 000D0003 )
  334:  		Call  FlyToGoal     ( .Actor:Self  30`  0` .Easing:CosInOut )
  350:  		Call  SetAnimation  ( .Actor:Self 00000001 000D0001 )
  368:  		Set   *Var0  00000037
  378:  		Loop  00000014
  384:  			Add   *Var0  0000000A
  394:  			Call  SetPartAlpha  ( .Actor:Self 00000001 *Var0 )
  3AC:  			Wait  1`
  3B8:  		EndLoop
  3C0:  		Call  SetPartAlpha  ( .Actor:Self 00000001 000000FF )
  3D8:  	Case  ==  .Event:ShockDeath % 26
  3E4:  		Call  UseBattleCamPreset    ( 00000002 )
  3F4:  		ExecWait  $Script_8021E0E0
  400:  		SetConst  *Var0  00000001
  410:  		SetConst  *Var1  000D0015
  420:  		Set   *Var2  0000000E
  430:  		ExecWait  $Script_8021E5DC
  43C:  		SetConst  *Var0  00000001
  44C:  		SetConst  *Var1  000D0015
  45C:  		ExecWait  DoDeath
  468:  		Return
  470:  	CaseOR  ==  00000017 % 17
  47C:  	CaseOR  ==  .Event:Immune % 19
  488:  	CaseOR  ==  .Event:AirLiftFailed % 1F
  494:  		SetConst  *Var0  00000001
  4A4:  		SetConst  *Var1  000D0001
  4B4:  		ExecWait  DoImmune
  4C0:  	EndCaseGroup
  4C8:  	Case  ==  .Event:Death % 20
  4D4:  		ExecWait  $Script_8021E0E0
  4E0:  		SetConst  *Var0  00000001
  4F0:  		SetConst  *Var1  000D0015
  500:  		ExecWait  DoNormalHit
  50C:  		Wait  10`
  518:  		SetConst  *Var0  00000001
  528:  		SetConst  *Var1  000D0015
  538:  		ExecWait  DoDeath
  544:  		Return
  54C:  	Case  ==  .Event:RecoverStatus % 31
  558:  		SetConst  *Var0  00000001
  568:  		SetConst  *Var1  000D0001
  578:  		ExecWait  DoRecover
  584:  	Case  ==  .Event:ScareAway % 39
  590:  		SetConst  *Var0  00000001
  5A0:  		SetConst  *Var1  000D0003
  5B0:  		SetConst  *Var2  000D0015
  5C0:  		ExecWait  DoScareAway
  5CC:  		Return
  5D4:  	Case  ==  .Event:BeginAirLift % 3A
  5E0:  		SetConst  *Var0  00000001
  5F0:  		SetConst  *Var1  000D0003
  600:  		ExecWait  DoAirLift
  60C:  	Case  ==  .Event:BlowAway % 16
  618:  		SetConst  *Var0  00000001
  628:  		SetConst  *Var1  000D0015
  638:  		ExecWait  DoBlowAway
  644:  		Return
  64C:  	Default
  654:  EndSwitch
  65C:  Call  EnableIdleScript  ( .Actor:Self 00000001 )
  670:  Call  UseIdleAnimation  ( .Actor:Self .True )
  684:  Return
  68C:  End
}

#new:Script $Script_TakeTurn_80224CA0
{
    0:  Call  UseIdleAnimation  ( .Actor:Self .False )
   14:  Call  EnableIdleScript  ( .Actor:Self 00000000 )
   28:  Wait  10`
   34:  Thread
   3C:  	Set   *Var0  000000C8
   4C:  	Loop  00000014
   58:  		Sub   *Var0  0000000A
   68:  		Call  SetPartAlpha  ( .Actor:Self 00000001 *Var0 )
   80:  		Wait  1`
   8C:  	EndLoop
   94:  EndThread
   9C:  Wait  10`
   A8:  Call  UseBattleCamPreset    ( 00000001 )
   B8:  Call  SetTargetActor        ( .Actor:Self .Actor:Player )
   CC:  Call  SetGoalToTarget       ( .Actor:Self )
   DC:  Thread
   E4:  	Call  SetAnimation      ( .Actor:Self 00000001 000D0003 )
   FC:  	Call  GetStatusFlags    ( .Actor:Self *VarA )
  110:  	If  *VarA  &  ~Flags:StatusFlags:Shrink % 80000
  120:  		Call  AddGoalPos    ( .Actor:Self  4`  -4`  0` )
  13C:  	Else
  144:  		Call  AddGoalPos    ( .Actor:Self  10`  -10`  0` )
  160:  	EndIf
  168:  	Call  FlyToGoal     ( .Actor:Self  30`  0` .Easing:CosInOut )
  184:  	Call  SetAnimation  ( .Actor:Self 00000001 000D0001 )
  19C:  EndThread
  1A4:  Wait  15`
  1B0:  Call  UseBattleCamPreset    ( 0000000F )
  1C0:  Call  BattleCamTargetActor  ( .Actor:Self )
  1D0:  Call  MoveBattleCamOver     (  30` )
  1E0:  Set   *Var0  00000037
  1F0:  Loop  00000014
  1FC:  	Add   *Var0  0000000A
  20C:  	Call  SetPartAlpha  ( .Actor:Self 00000001 *Var0 )
  224:  	Wait  1`
  230:  EndLoop
  238:  Call  SetPartAlpha      ( .Actor:Self 00000001 000000FF )
  250:  Call  SetAnimation      ( .Actor:Self 00000001 000D0005 )
  268:  Wait  10`
  274:  Call  SetGoalToTarget   ( .Actor:Self )
  284:  Wait  15`
  290:  Call  EnemyTestTarget   ( .Actor:Self *Var0 ~Flags:DamageType:0 00000000 00000001 00000010 )
  2B4:  Switch  *Var0
  2C0:  	CaseOR  ==  .HitResult:Miss % 6
  2CC:  	CaseOR  ==  .HitResult:Lucky % 5
  2D8:  		Set   *VarA  *Var0
  2E8:  		Call  UseBattleCamPreset    ( 00000002 )
  2F8:  		Call  SetPartScale  ( .Actor:Self 00000001 *Fixed[1.4] *Fixed[1.4] *Fixed[1.0] )
  318:  		Call  SetAnimation  ( .Actor:Self 00000001 000D0007 )
  330:  		Wait  2`
  33C:  		Call  SetPartScale  ( .Actor:Self 00000001 *Fixed[1.0] *Fixed[1.0] *Fixed[1.0] )
  35C:  		Set   *Var0  00000000
  36C:  		Loop  00000014
  378:  			Add   *Var0  FFFFFFD3
  388:  			Call  SetActorYaw   ( .Actor:Self *Var0 )
  39C:  			Wait  1`
  3A8:  		EndLoop
  3B0:  		Call  SetActorYaw   ( .Actor:Self  0` )
  3C4:  		If  *VarA  ==  .HitResult:Lucky % 5
  3D4:  			Call  EnemyTestTarget   ( .Actor:Self *Var0 ~Flags:DamageType:TriggerLucky 00000000 00000000 00000000 )
  3F8:  		EndIf
  400:  		Call  SetAnimation  ( .Actor:Self 00000001 000D001A )
  418:  		Call  AddActorDecoration    ( .Actor:Self 00000001 00000000 .Decoration:SeeingStars )
  434:  		Wait  30`
  440:  		Call  RemoveActorDecoration ( .Actor:Self 00000001 00000000 )
  458:  		Call  SetAnimation  ( .Actor:Self 00000001 000D0001 )
  470:  		Wait  10`
  47C:  		Call  YieldTurn ( )
  488:  		Thread
  490:  			Set   *Var0  000000C8
  4A0:  			Loop  00000014
  4AC:  				Sub   *Var0  0000000A
  4BC:  				Call  SetPartAlpha  ( .Actor:Self 00000001 *Var0 )
  4D4:  				Wait  1`
  4E0:  			EndLoop
  4E8:  		EndThread
  4F0:  		Wait  10`
  4FC:  		Call  UseBattleCamPreset    ( 00000002 )
  50C:  		Call  MoveBattleCamOver     (  60` )
  51C:  		Call  SetGoalToHome ( .Actor:Self )
  52C:  		Call  SetAnimation  ( .Actor:Self 00000001 000D0003 )
  544:  		Call  FlyToGoal     ( .Actor:Self  30`  0` .Easing:CosInOut )
  560:  		Call  SetAnimation  ( .Actor:Self 00000001 000D0001 )
  578:  		Set   *Var0  00000037
  588:  		Loop  00000014
  594:  			Add   *Var0  0000000A
  5A4:  			Call  SetPartAlpha  ( .Actor:Self 00000001 *Var0 )
  5BC:  			Wait  1`
  5C8:  		EndLoop
  5D0:  		Call  SetPartAlpha      ( .Actor:Self 00000001 000000FF )
  5E8:  		Call  EnableIdleScript  ( .Actor:Self 00000001 )
  5FC:  		Call  UseIdleAnimation  ( .Actor:Self .True )
  610:  		Return
  618:  	EndCaseGroup
  620:  EndSwitch
  628:  Set   *VarA  00000000
  638:  Call  GetActorVar   ( .Actor:Self 00000001 *Var8 )
  650:  Switch  *Var8
  65C:  	Case  ==  00000000
  668:  		Set   *Var8  00000004
  678:  	Case  ==  00000001
  684:  		Set   *Var8  00000005
  694:  	Case  ==  00000002
  6A0:  		Set   *Var8  00000006
  6B0:  EndSwitch
  6B8:  Set   *Var7  *Var8
  6C8:  Loop  *Var7
  6D4:  	Call  PlaySoundAtActor  ( .Actor:Self 00002019 )
  6E8:  	Add   *VarA  00000001
  6F8:  	Call  SetPartScale      ( .Actor:Self 00000001 *Fixed[1.4] *Fixed[1.4] *Fixed[1.0] )
  718:  	If  *Flag[00]  ==  .False
  728:  		Call  SetAnimation  ( .Actor:Self 00000001 000D0007 )
  740:  		Set   *Flag[00]  .True
  750:  		If  *VarA  ==  *Var8
  760:  			Call  80269EAC  ( 0000000C )
  770:  		Else
  778:  			Call  80269EAC  ( 0000000A )
  788:  		EndIf
  790:  	Else
  798:  		Call  SetAnimation  ( .Actor:Self 00000001 000D0008 )
  7B0:  		Set   *Flag[00]  .False
  7C0:  		If  *VarA  ==  *Var8
  7D0:  			Call  80269EAC  ( 0000000D )
  7E0:  		Else
  7E8:  			Call  80269EAC  ( 0000000B )
  7F8:  		EndIf
  800:  	EndIf
  808:  	Wait  2`
  814:  	Call  SetPartScale  ( .Actor:Self 00000001 *Fixed[1.0] *Fixed[1.0] *Fixed[1.0] )
  834:  	Thread
  83C:  		Call  ShakeCam  ( .Cam:Battle 00000000  2` *Fixed[0.5] )
  858:  		Call  ShakeCam  ( .Cam:Battle 00000000  2` *Fixed[1.5] )
  874:  		Call  ShakeCam  ( .Cam:Battle 00000000  1` *Fixed[0.5] )
  890:  		Call  ShakeCam  ( .Cam:Battle 00000000  1` *Fixed[0.2] )
  8AC:  	EndThread
  8B4:  	Call  GetActorVar   ( .Actor:Self 00000001 *Var9 )
  8CC:  	Switch  *Var9
  8D8:  		Case  ==  00000000
  8E4:  			Wait  2`
  8F0:  			Call  EnemyDamageTarget ( .Actor:Self *Var0 ~Flags:DamageType:0 00000000 00000000 00000001 00000010 )
  918:  		Case  ==  00000001
  924:  			Wait  2`
  930:  			Call  EnemyDamageTarget ( .Actor:Self *Var0 ~Flags:DamageType:0 00000000 00000000 00000001 00000010 )
  958:  		Case  ==  00000002
  964:  			Wait  2`
  970:  			Call  EnemyDamageTarget ( .Actor:Self *Var0 ~Flags:DamageType:0 00000000 00000000 00000001 00000010 )
  998:  	EndSwitch
  9A0:  	Wait  8`
  9AC:  	Call  SetAnimation  ( .Actor:Self 00000001 000D0001 )
  9C4:  	Call  GetActorHP    ( .Actor:Player *Var1 )
  9D8:  	If  *Var1  ==  00000000
  9E8:  		BreakLoop
  9F0:  	EndIf
  9F8:  EndLoop
  A00:  Switch  *Var0
  A0C:  	CaseOR  ==  .HitResult:Hit % 0
  A18:  	CaseOR  ==  .HitResult:QuakeImmune % 2
  A24:  		Wait  10`
  A30:  		Call  YieldTurn ( )
  A3C:  		Thread
  A44:  			Set   *Var0  000000C8
  A54:  			Loop  00000014
  A60:  				Sub   *Var0  0000000A
  A70:  				Call  SetPartAlpha  ( .Actor:Self 00000001 *Var0 )
  A88:  				Wait  1`
  A94:  			EndLoop
  A9C:  		EndThread
  AA4:  		Wait  10`
  AB0:  		Call  UseBattleCamPreset    ( 00000002 )
  AC0:  		Call  MoveBattleCamOver     (  30` )
  AD0:  		Call  SetGoalToHome ( .Actor:Self )
  AE0:  		Call  SetAnimation  ( .Actor:Self 00000001 000D0003 )
  AF8:  		Call  FlyToGoal     ( .Actor:Self  30`  0` .Easing:CosInOut )
  B14:  		Call  SetAnimation  ( .Actor:Self 00000001 000D0001 )
  B2C:  		Set   *Var0  00000037
  B3C:  		Loop  00000014
  B48:  			Add   *Var0  0000000A
  B58:  			Call  SetPartAlpha  ( .Actor:Self 00000001 *Var0 )
  B70:  			Wait  1`
  B7C:  		EndLoop
  B84:  		Call  SetPartAlpha  ( .Actor:Self 00000001 000000FF )
  B9C:  	EndCaseGroup
  BA4:  EndSwitch
  BAC:  Call  EnableIdleScript  ( .Actor:Self 00000001 )
  BC0:  Call  UseIdleAnimation  ( .Actor:Self .True )
  BD4:  Return
  BDC:  End
}

#new:Script $Script_NextTurn_80225884
{
    0:  Call  GetBattlePhase    ( *Var0 )
   10:  Switch  *Var0
   1C:  	Case  ==  0000000C
   28:  		Call  GetActorVar   ( .Actor:Self 00000002 *Var0 )
   40:  		If  *Var0  >  00000000
   50:  			Sub   *Var0  00000001
   60:  			Call  SetActorVar   ( .Actor:Self 00000002 *Var0 )
   78:  			BreakCase
   80:  		EndIf
   88:  		SetConst  *Var0  00000001
   98:  		SetConst  *Var1  000D0015
   A8:  		ExecWait  $Script_8021E118
   B4:  		Return
   BC:  EndSwitch
   C4:  Return
   CC:  End
}

#new:SpecialFormation $SpecialFormation_80225958
{
	$LeeBow $Vector3D_8021E940 00000000 00000000 00000000 00000000 00000000
}

#new:IdleAnimations $IdleAnimations_80225974
{
	.Status:Normal    000E0001
	.Status:Stone     000E0000
	.Status:Sleep     000E0000
	.Status:Poison    000E0001
	.Status:Stop      000E0000
	.Status:Static    000E0001
	.Status:Paralyze  000E0000
	.Status:Dizzy     000E000F
	.Status:Fear      000E000F
	.Status:End
}

#new:DefenseTable $DefenseTable_802259C0
{
	.Element:Normal 00000000
	.Element:Shock  00000063
	.Element:End
}

#new:StatusTable $StatusTable_802259D4
{
	.Status:Normal      0`
	.Status:Default     0`
	.Status:Sleep      60`
	.Status:Poison      0`
	.Status:Frozen      0`
	.Status:Dizzy      75`
	.Status:Fear        0`
	.Status:Static      0`
	.Status:Paralyze   75`
	.Status:Shrink     80`
	.Status:Stop       90`
	.Status:DefaultTurnMod    0`
	.Status:SleepTurnMod     -1`
	.Status:PoisonTurnMod     0`
	.Status:FrozenTurnMod     0`
	.Status:DizzyTurnMod     -1`
	.Status:FearTurnMod       0`
	.Status:StaticTurnMod     0`
	.Status:ParalyzeTurnMod   0`
	.Status:ShrinkTurnMod     0`
	.Status:StopTurnMod      -1`
	.Status:End
}

#new:PartsTable $PartsTable_80225A80
{
	00020000 01000000 FF1400FF $IdleAnimations_80225974 $DefenseTable_802259C0 00000080 00000000 00F80000 00000000
	00800001 02003200 FFE200FF 00000000 $DefenseTable_802259C0 00000080 00000000 00F80000 00000000
}

#new:Actor $LeeWatt
{
	% stats
	[Index]        84b
	[Level]         0`b
	[MaxHP]        20`b
	[Coins]         0`b
	[Flags]       00000200
	[StatusTable] $StatusTable_802259D4
	% ai
	[PartsCount]    2`s
	[PartsTable]  $PartsTable_80225A80
	[Script]      $Script_Init_Watt
	% move effectiveness
	[Escape]      100`b
	[Item]          0`b
	[AirLift]       0`b
	[Hurricane]     0`b % Bow's "Spook" as well
	[UpAndAway]     0`b
	[PowerBounce]  90`b
	[SpinSmash]     0`b % weight (0-4)
	% ui positions
	[Size]         34`b  28`b % width height
	[HealthBar]     0`b   0`b % dx dy
	[StatusTurn]  -10`b  20`b % dx dy
	[StatusIcon]   10`b  20`b % dx dy
}

#new:Script $Script_Init_Watt
{
    0:  Call  BindTakeTurn  ( .Actor:Self $Script_TakeTurn_80226004 )
   14:  Call  BindIdle      ( .Actor:Self $Script_Idle_80225B68 )
   28:  Call  BindHandleEvent   ( .Actor:Self $Script_HandleEvent_80225B90 )
   3C:  Call  BindNextTurn  ( .Actor:Self $Script_NextTurn_80226880 )
   50:  Call  SetActorVar   ( .Actor:Self 00000002 00000001 )
   68:  Return
   70:  End
}

#new:Script $Script_Idle_80225B68
{
    0:  SetPriority  00000063
    C:  Call  $Function_80219188 ( )
   18:  Return
   20:  End
}

#new:Script $Script_HandleEvent_80225B90
{
    0:  Call  UseIdleAnimation      ( .Actor:Self .False )
   14:  Call  $Function_80219658    ( 00000000 )
   24:  Call  $Function_802196A4    ( 00000001 )
   34:  Call  $Function_802196F0    ( 00000000 )
   44:  Call  GetLastEvent  ( .Actor:Self *Var0 )
   58:  Switch  *Var0
   64:  	CaseOR  ==  .Event:HitCombo % 9
   70:  	CaseOR  ==  .Event:Hit % A
   7C:  		SetConst  *Var0  00000001
   8C:  		SetConst  *Var1  000E000C
   9C:  		ExecWait  DoNormalHit
   A8:  	EndCaseGroup
   B0:  	Case  ==  .Event:BurnHit % E
   BC:  		SetConst  *Var0  00000001
   CC:  		SetConst  *Var1  000E000D
   DC:  		SetConst  *Var2  000E000E
   EC:  		ExecWait  DoBurnHit
   F8:  	Case  ==  .Event:BurnDeath % 24
  104:  		SetConst  *Var0  00000001
  114:  		SetConst  *Var1  000E000D
  124:  		SetConst  *Var2  000E000E
  134:  		ExecWait  DoBurnHit
  140:  		Call  $Function_80219604 ( )
  14C:  		ExecWait  $Script_8021E0E0
  158:  		SetConst  *Var0  00000001
  168:  		SetConst  *Var1  000E000E
  178:  		ExecWait  DoDeath
  184:  		Return
  18C:  	Case  ==  .Event:SpinSmashHit % B
  198:  		SetConst  *Var0  00000001
  1A8:  		SetConst  *Var1  000E000C
  1B8:  		ExecWait  DoSpinSmashHit
  1C4:  	Case  ==  .Event:SpinSmashDeath % 21
  1D0:  		Call  $Function_80219604 ( )
  1DC:  		ExecWait  $Script_8021E0E0
  1E8:  		SetConst  *Var0  00000001
  1F8:  		SetConst  *Var1  000E000C
  208:  		ExecWait  DoSpinSmashHit
  214:  		SetConst  *Var0  00000001
  224:  		SetConst  *Var1  000E000C
  234:  		ExecWait  DoDeath
  240:  		Return
  248:  	CaseOR  ==  00000017 % 17
  254:  	CaseOR  ==  .Event:Immune % 19
  260:  	CaseOR  ==  .Event:AirLiftFailed % 1F
  26C:  		SetConst  *Var0  00000001
  27C:  		SetConst  *Var1  000E0001
  28C:  		ExecWait  DoImmune
  298:  	EndCaseGroup
  2A0:  	Case  ==  .Event:Death % 20
  2AC:  		Call  $Function_80219604 ( )
  2B8:  		ExecWait  $Script_8021E0E0
  2C4:  		SetConst  *Var0  00000001
  2D4:  		SetConst  *Var1  000E000C
  2E4:  		ExecWait  DoNormalHit
  2F0:  		Wait  10`
  2FC:  		SetConst  *Var0  00000001
  30C:  		SetConst  *Var1  000E000C
  31C:  		ExecWait  DoDeath
  328:  		Return
  330:  	Case  ==  .Event:RecoverStatus % 31
  33C:  		SetConst  *Var0  00000001
  34C:  		SetConst  *Var1  000E0001
  35C:  		ExecWait  DoRecover
  368:  	Case  ==  .Event:ScareAway % 39
  374:  		SetConst  *Var0  00000001
  384:  		SetConst  *Var1  000E0003
  394:  		SetConst  *Var2  000E000C
  3A4:  		ExecWait  DoScareAway
  3B0:  		Return
  3B8:  	Case  ==  .Event:BeginAirLift % 3A
  3C4:  		SetConst  *Var0  00000001
  3D4:  		SetConst  *Var1  000E0003
  3E4:  		ExecWait  DoAirLift
  3F0:  	Case  ==  .Event:BlowAway % 16
  3FC:  		SetConst  *Var0  00000001
  40C:  		SetConst  *Var1  000E000C
  41C:  		ExecWait  DoBlowAway
  428:  		Return
  430:  	Default
  438:  EndSwitch
  440:  Call  $Function_80219658    ( 00000001 )
  450:  Call  UseIdleAnimation      ( .Actor:Self .True )
  464:  Return
  46C:  End
}

#new:Script $Script_TakeTurn_80226004
{
    0:  Call  UseIdleAnimation  ( .Actor:Self .False )
   14:  Call  UseBattleCamPreset    ( 00000013 )
   24:  Call  GetActorPos       ( .Actor:Player *Var0 *Var1 *Var2 )
   40:  Call  SetBattleCamTarget    ( *Var0 *Var1 *Var2 )
   58:  Call  SetBattleCamZoom  (  350` )
   68:  Call  SetBattleCamOffsetZ   (  40` )
   78:  Call  MoveBattleCamOver (  80` )
   88:  Call  8024ECF8  ( FFFFFFFF 00000001 00000000 )
   A0:  Call  SetTargetActor    ( .Actor:Self .Actor:Player )
   B4:  Call  SetGoalToTarget   ( .Actor:Self )
   C4:  Call  SetAnimation      ( .Actor:Self 00000001 000E0003 )
   DC:  Call  $Function_802196F0    ( 00000001 )
   EC:  Call  AddGoalPos        ( .Actor:Self  15`  -10`  5` )
  108:  Call  FlyToGoal ( .Actor:Self  30`  0` .Easing:CosInOut )
  124:  Call  SetAnimation      ( .Actor:Self 00000001 000E0001 )
  13C:  Call  $Function_802196F0    ( 00000000 )
  14C:  Wait  5`
  158:  Call  $Function_80219658    ( 00000000 )
  168:  Call  AddGoalPos        ( .Actor:Self  25`  20`  0` )
  184:  Call  FlyToGoal ( .Actor:Self  15`  -20` .Easing:CosInOut )
  1A0:  Call  SetAnimation      ( .Actor:Self 00000001 000E0005 )
  1B8:  Call  SetGoalToTarget   ( .Actor:Self )
  1C8:  Call  FlyToGoal ( .Actor:Self  5`  0` .Easing:CosInOut )
  1E4:  Call  EnemyTestTarget   ( .Actor:Self *Var0 ~Flags:DamageType:0 00000000 00000001 00000010 )
  208:  Switch  *Var0
  214:  	CaseOR  ==  .HitResult:Miss % 6
  220:  	CaseOR  ==  .HitResult:Lucky % 5
  22C:  		Set   *VarA  *Var0
  23C:  		Thread
  244:  			Wait  5`
  250:  			Call  SetAnimation  ( .Actor:Self 00000001 000E0001 )
  268:  		EndThread
  270:  		Call  SetGoalToTarget   ( .Actor:Self )
  280:  		Call  AddGoalPos        ( .Actor:Self  -40`  10`  0` )
  29C:  		Call  FlyToGoal ( .Actor:Self  10`  -20` .Easing:QuadraticOut )
  2B8:  		If  *VarA  ==  .HitResult:Lucky % 5
  2C8:  			Call  EnemyTestTarget   ( .Actor:Self *Var0 ~Flags:DamageType:TriggerLucky 00000000 00000000 00000000 )
  2EC:  		EndIf
  2F4:  		Call  $Function_802196A4    ( 00000001 )
  304:  		Call  $Function_80219658    ( 00000001 )
  314:  		Wait  20`
  320:  		Call  UseBattleCamPreset    ( 00000002 )
  330:  		Call  YieldTurn ( )
  33C:  		Call  SetGoalToHome     ( .Actor:Self )
  34C:  		Call  SetAnimation      ( .Actor:Self 00000001 000E0003 )
  364:  		Call  FlyToGoal ( .Actor:Self  30`  0` .Easing:CosInOut )
  380:  		Call  SetAnimation      ( .Actor:Self 00000001 000E0001 )
  398:  		Call  UseIdleAnimation  ( .Actor:Self .True )
  3AC:  		Return
  3B4:  	EndCaseGroup
  3BC:  EndSwitch
  3C4:  Call  $Function_802196A4    ( 00000000 )
  3D4:  Set   *VarA  00000028
  3E4:  Call  AddBattleCamZoom  (  -75` )
  3F4:  Call  MoveBattleCamOver ( *VarA )
  404:  Call  8024ECF8  ( 00000000 00000000 00000001 )
  41C:  Call  PlaySoundAtActor  ( .Actor:Self 00000289 )
  430:  Call  GetStatusFlags    ( .Actor:Self *Var0 )
  444:  If  *Var0  &  ~Flags:StatusFlags:Shrink % 80000
  454:  	Call  GetActorPos   ( .Actor:Self *Var0 *Var1 *Var2 )
  470:  	Add   *Var1  00000004
  480:  	Call  PlayEffect    ( ~FX:RadialFlowIn:ElectricalWaves *Var0 *Var1 *Var2 *Fixed[0.52] *VarA 00000000 00000000 00000000 00000000 00000000 00000000 00000000 )
  4C4:  Else
  4CC:  	Call  GetActorPos   ( .Actor:Self *Var0 *Var1 *Var2 )
  4E8:  	Add   *Var1  0000000C
  4F8:  	Call  PlayEffect    ( ~FX:RadialFlowIn:ElectricalWaves *Var0 *Var1 *Var2 *Fixed[1.3] *VarA 00000000 00000000 00000000 00000000 00000000 00000000 00000000 )
  53C:  EndIf
  544:  Call  $Function_8021973C ( )
  550:  Set   *Var9  00000000
  560:  Call  SetAnimation  ( .Actor:Self 00000001 000E0006 )
  578:  Loop  *VarA
  584:  	Add   *Var9  00000003
  594:  	If  *Var9  >  000000C8
  5A4:  		Set   *Var9  000000C8
  5B4:  	EndIf
  5BC:  	Call  $Function_80219780    ( *Var9 )
  5CC:  	Wait  1`
  5D8:  EndLoop
  5E0:  Call  SetAnimation      ( .Actor:Self 00000001 000E0001 )
  5F8:  Call  8026EA7C  ( FFFFFF81 00000001 00000009 )
  610:  Call  AddBattleCamZoom  (  75` )
  620:  Call  MoveBattleCamOver (  5` )
  630:  Thread
  638:  	Wait  2`
  644:  	Call  $Function_80219780    ( 00000000 )
  654:  EndThread
  65C:  Call  GetActorVar   ( .Actor:Self 00000001 *Var9 )
  674:  Switch  *Var9
  680:  	Case  ==  00000000
  68C:  		Wait  2`
  698:  		Call  EnemyDamageTarget ( .Actor:Self *Var0 ~Flags:DamageType:IgnoreDefense|Electric 0000FFFF 00000000 00000003 00000020 )
  6C0:  	Case  ==  00000001
  6CC:  		Wait  2`
  6D8:  		Call  EnemyDamageTarget ( .Actor:Self *Var0 ~Flags:DamageType:IgnoreDefense|Electric 0000FFFF 00000000 00000004 00000020 )
  700:  	Case  ==  00000002
  70C:  		Wait  2`
  718:  		Call  EnemyDamageTarget ( .Actor:Self *Var0 ~Flags:DamageType:IgnoreDefense|Electric 0000FFFF 00000000 00000005 00000020 )
  740:  EndSwitch
  748:  Switch  *Var0
  754:  	CaseOR  ==  .HitResult:Hit % 0
  760:  	CaseOR  ==  .HitResult:QuakeImmune % 2
  76C:  		Call  UseBattleCamPreset    ( 00000002 )
  77C:  		Call  $Function_802196A4    ( 00000001 )
  78C:  		Call  $Function_80219658    ( 00000001 )
  79C:  		Call  AddGoalPos    ( .Actor:Self  25`  10`  0` )
  7B8:  		Call  FlyToGoal     ( .Actor:Self  15`  -10` .Easing:CosInOut )
  7D4:  		Wait  15`
  7E0:  		Call  YieldTurn ( )
  7EC:  		Call  SetGoalToHome ( .Actor:Self )
  7FC:  		Call  SetAnimation  ( .Actor:Self 00000001 000E0003 )
  814:  		Call  FlyToGoal     ( .Actor:Self  30`  0` .Easing:CosInOut )
  830:  		Call  SetAnimation  ( .Actor:Self 00000001 000E0001 )
  848:  	EndCaseGroup
  850:  EndSwitch
  858:  Call  UseIdleAnimation  ( .Actor:Self .True )
  86C:  Return
  874:  End
}

#new:Script $Script_NextTurn_80226880
{
    0:  Call  GetBattlePhase    ( *Var0 )
   10:  Switch  *Var0
   1C:  	Case  ==  0000000C
   28:  		Call  GetActorVar   ( .Actor:Self 00000002 *Var0 )
   40:  		If  *Var0  >  00000000
   50:  			Sub   *Var0  00000001
   60:  			Call  SetActorVar   ( .Actor:Self 00000002 *Var0 )
   78:  			BreakCase
   80:  		EndIf
   88:  		SetConst  *Var0  00000001
   98:  		SetConst  *Var1  000E000C
   A8:  		Call  $Function_80219604 ( )
   B4:  		ExecWait  $Script_8021E118
   C0:  		Return
   C8:  EndSwitch
   D0:  Return
   D8:  End
}

#new:SpecialFormation $SpecialFormation_80226960
{
	$LeeWatt $Vector3D_8021E940 00000000 00000000 00000000 00000000 00000000
}

#new:IdleAnimations $IdleAnimations_8022697C
{
	.Status:Normal    000F0001
	.Status:Stone     000F0000
	.Status:Sleep     000F0000
	.Status:Poison    000F0001
	.Status:Stop      000F0000
	.Status:Static    000F0001
	.Status:Paralyze  000F0000
	.Status:Dizzy     000F0010
	.Status:Fear      000F0010
	.Status:End
}

#new:DefenseTable $DefenseTable_802269C8
{
	.Element:Normal 00000000
	.Element:End
}

#new:StatusTable $StatusTable_802269D4
{
	.Status:Normal      0`
	.Status:Default     0`
	.Status:Sleep      60`
	.Status:Poison      0`
	.Status:Frozen      0`
	.Status:Dizzy      75`
	.Status:Fear        0`
	.Status:Static      0`
	.Status:Paralyze   75`
	.Status:Shrink     80`
	.Status:Stop       90`
	.Status:DefaultTurnMod    0`
	.Status:SleepTurnMod     -1`
	.Status:PoisonTurnMod     0`
	.Status:FrozenTurnMod     0`
	.Status:DizzyTurnMod     -1`
	.Status:FearTurnMod       0`
	.Status:StaticTurnMod     0`
	.Status:ParalyzeTurnMod   0`
	.Status:ShrinkTurnMod     0`
	.Status:StopTurnMod      -1`
	.Status:End
}

#new:PartsTable $PartsTable_80226A80
{
	00800000 01000000 001800FF $IdleAnimations_8022697C $DefenseTable_802269C8 00000000 00000000 00F40000 00000000
}

#new:Actor $LeeSushie
{
	% stats
	[Index]        85b
	[Level]         0`b
	[MaxHP]        20`b
	[Coins]         0`b
	[Flags]       00000000
	[StatusTable] $StatusTable_802269D4
	% ai
	[PartsCount]    1`s
	[PartsTable]  $PartsTable_80226A80
	[Script]      $Script_Init_Sushie
	% move effectiveness
	[Escape]      100`b
	[Item]          0`b
	[AirLift]       0`b
	[Hurricane]     0`b % Bow's "Spook" as well
	[UpAndAway]     0`b
	[PowerBounce]  90`b
	[SpinSmash]     0`b % weight (0-4)
	% ui positions
	[Size]         37`b  26`b % width height
	[HealthBar]     0`b   0`b % dx dy
	[StatusTurn]  -10`b  20`b % dx dy
	[StatusIcon]   10`b  20`b % dx dy
}

#new:Script $Script_Init_Sushie
{
    0:  Call  BindTakeTurn  ( .Actor:Self $Script_TakeTurn_802270BC )
   14:  Call  BindIdle      ( .Actor:Self $Script_Idle_80226B44 )
   28:  Call  BindHandleEvent   ( .Actor:Self $Script_HandleEvent_80226B54 )
   3C:  Call  BindNextTurn  ( .Actor:Self $Script_NextTurn_8022831C )
   50:  Call  SetActorVar   ( .Actor:Self 00000002 00000001 )
   68:  Return
   70:  End
}

#new:Script $Script_Idle_80226B44
{
    0:  Return
    8:  End
}

#new:Script $Script_HandleEvent_80226B54
{
    0:  Call  UseIdleAnimation  ( .Actor:Self .False )
   14:  Call  EnableIdleScript  ( .Actor:Self 00000000 )
   28:  Call  GetLastEvent      ( .Actor:Self *Var0 )
   3C:  Switch  *Var0
   48:  	CaseOR  ==  .Event:HitCombo % 9
   54:  	CaseOR  ==  .Event:Hit % A
   60:  		SetConst  *Var0  00000001
   70:  		SetConst  *Var1  000F000D
   80:  		ExecWait  DoNormalHit
   8C:  	EndCaseGroup
   94:  	Case  ==  .Event:BurnHit % E
   A0:  		SetConst  *Var0  00000001
   B0:  		SetConst  *Var1  000F000E
   C0:  		SetConst  *Var2  000F000F
   D0:  		ExecWait  DoBurnHit
   DC:  	Case  ==  .Event:BurnDeath % 24
   E8:  		SetConst  *Var0  00000001
   F8:  		SetConst  *Var1  000F000E
  108:  		SetConst  *Var2  000F000F
  118:  		ExecWait  DoBurnHit
  124:  		ExecWait  $Script_8021E0E0
  130:  		Wait  10`
  13C:  		SetConst  *Var0  00000001
  14C:  		SetConst  *Var1  000F000F
  15C:  		ExecWait  DoDeath
  168:  		Return
  170:  	Case  ==  .Event:SpinSmashHit % B
  17C:  		SetConst  *Var0  00000001
  18C:  		SetConst  *Var1  000F000D
  19C:  		ExecWait  DoSpinSmashHit
  1A8:  	Case  ==  .Event:SpinSmashDeath % 21
  1B4:  		ExecWait  $Script_8021E0E0
  1C0:  		SetConst  *Var0  00000001
  1D0:  		SetConst  *Var1  000F000D
  1E0:  		ExecWait  DoSpinSmashHit
  1EC:  		SetConst  *Var0  00000001
  1FC:  		SetConst  *Var1  000F000D
  20C:  		ExecWait  DoDeath
  218:  		Return
  220:  	Case  ==  .Event:ShockHit % 2F
  22C:  		SetConst  *Var0  00000001
  23C:  		SetConst  *Var1  000F000D
  24C:  		Set   *Var2  00000014
  25C:  		ExecWait  $Script_8021E5DC
  268:  		Call  SetAnimation  ( .Actor:Self 00000001 000F0003 )
  280:  		Call  SetGoalToHome ( .Actor:Self )
  290:  		Call  SetActorSpeed ( .Actor:Self *Fixed[4.0] )
  2A4:  		Call  RunToGoal     ( .Actor:Self  0` .False )
  2BC:  	Case  ==  .Event:ShockDeath % 26
  2C8:  		ExecWait  $Script_8021E0E0
  2D4:  		SetConst  *Var0  00000001
  2E4:  		SetConst  *Var1  000F000D
  2F4:  		Set   *Var2  00000014
  304:  		ExecWait  $Script_8021E5DC
  310:  		SetConst  *Var0  00000001
  320:  		SetConst  *Var1  000F000D
  330:  		ExecWait  DoDeath
  33C:  		Return
  344:  	CaseOR  ==  00000017 % 17
  350:  	CaseOR  ==  .Event:Immune % 19
  35C:  	CaseOR  ==  .Event:AirLiftFailed % 1F
  368:  		SetConst  *Var0  00000001
  378:  		SetConst  *Var1  000F0001
  388:  		ExecWait  DoImmune
  394:  	EndCaseGroup
  39C:  	Case  ==  .Event:Death % 20
  3A8:  		ExecWait  $Script_8021E0E0
  3B4:  		SetConst  *Var0  00000001
  3C4:  		SetConst  *Var1  000F000D
  3D4:  		ExecWait  DoNormalHit
  3E0:  		Wait  10`
  3EC:  		SetConst  *Var0  00000001
  3FC:  		SetConst  *Var1  000F000D
  40C:  		ExecWait  DoDeath
  418:  		Return
  420:  	Case  ==  .Event:RecoverStatus % 31
  42C:  		SetConst  *Var0  00000001
  43C:  		SetConst  *Var1  000F0001
  44C:  		ExecWait  DoRecover
  458:  	Case  ==  .Event:ScareAway % 39
  464:  		SetConst  *Var0  00000001
  474:  		SetConst  *Var1  000F0003
  484:  		SetConst  *Var2  000F000D
  494:  		ExecWait  DoScareAway
  4A0:  		Return
  4A8:  	Case  ==  .Event:BeginAirLift % 3A
  4B4:  		SetConst  *Var0  00000001
  4C4:  		SetConst  *Var1  000F0003
  4D4:  		ExecWait  DoAirLift
  4E0:  	Case  ==  .Event:BlowAway % 16
  4EC:  		SetConst  *Var0  00000001
  4FC:  		SetConst  *Var1  000F000D
  50C:  		ExecWait  DoBlowAway
  518:  		Return
  520:  	Default
  528:  EndSwitch
  530:  Call  EnableIdleScript  ( .Actor:Self 00000001 )
  544:  Call  UseIdleAnimation  ( .Actor:Self .True )
  558:  Return
  560:  End
}

#new:Script $Script_TakeTurn_802270BC
{
    0:  Call  UseIdleAnimation  ( .Actor:Self .False )
   14:  Call  EnableIdleScript  ( .Actor:Self 00000000 )
   28:  Call  UseBattleCamPreset    ( 0000003F )
   38:  Call  BattleCamTargetActor  ( .Actor:Self )
   48:  Call  8024ECF8  ( FFFFFFFF 00000001 00000000 )
   60:  Call  SetTargetActor    ( .Actor:Self .Actor:Player )
   74:  Call  SetGoalToTarget   ( .Actor:Self )
   84:  Call  AddGoalPos        ( .Actor:Self  70`  0`  0` )
   A0:  Call  GetActorPos       ( .Actor:Self *Var0 *Var1 *Var2 )
   BC:  Call  GetGoalPos        ( .Actor:Self *Var3 *Var4 *Var5 )
   D8:  Sub   *Var3  *Var0
   E8:  Div   *Var3  *Fixed[3.0]
   F8:  Set   *VarA  *Var3
  108:  If  *VarA  <  00000000
  118:  	Mul   *VarA  FFFFFFFF
  128:  EndIf
  130:  Call  MoveBattleCamOver ( *VarA )
  140:  Call  SetAnimation      ( .Actor:Self 00000001 000F0003 )
  158:  Call  RunToGoal ( .Actor:Self *VarA .False )
  170:  Call  SetAnimation      ( .Actor:Self 00000001 000F0001 )
  188:  Wait  10`
  194:  Call  UseBattleCamPreset    ( 00000008 )
  1A4:  Call  BattleCamTargetActor  ( .Actor:Self )
  1B4:  Call  AddBattleCamZoom  (  -50` )
  1C4:  Call  MoveBattleCamOver (  30` )
  1D4:  Call  8024ECF8  ( 00000001 00000001 00000001 )
  1EC:  Call  SetAnimation      ( .Actor:Self 00000001 000F0004 )
  204:  Wait  15`
  210:  Call  SetAnimation      ( .Actor:Self 00000001 000F0008 )
  228:  Wait  15`
  234:  Call  EnemyTestTarget   ( .Actor:Self *Var0 ~Flags:DamageType:0 00000000 00000001 00000010 )
  258:  Switch  *Var0
  264:  	CaseOR  ==  .HitResult:Miss % 6
  270:  	CaseOR  ==  .HitResult:Lucky % 5
  27C:  		Set   *VarA  *Var0
  28C:  		Call  UseBattleCamPreset    ( 00000002 )
  29C:  		Call  MoveBattleCamOver     (  20` )
  2AC:  		Call  SetAnimation  ( .Actor:Self 00000001 000F0005 )
  2C4:  		Thread
  2CC:  			Call  SetActorRotationOffset    ( .Actor:Self 00000000 0000000C 00000000 )
  2E8:  			Set   *Var0  00000000
  2F8:  			Loop  0000000A
  304:  				Add   *Var0  00000024
  314:  				Call  SetActorRotation  ( .Actor:Self 00000000 00000000 *Var0 )
  330:  				Wait  1`
  33C:  			EndLoop
  344:  			Call  SetActorRotation  ( .Actor:Self 00000000 00000000 00000014 )
  360:  		EndThread
  368:  		Thread
  370:  			Call  GetActorVar   ( .Actor:Self 00000001 *Var0 )
  388:  			Switch  *Var0
  394:  				Case  ==  00000000
  3A0:  					Wait  13`
  3AC:  					Call  SetPartScale  ( .Actor:Self 00000001 *Fixed[1.0] *Fixed[1.0] *Fixed[1.0] )
  3CC:  					Wait  1`
  3D8:  					Call  SetPartScale  ( .Actor:Self 00000001 *Fixed[1.0] *Fixed[1.0] *Fixed[1.0] )
  3F8:  					Wait  1`
  404:  					Call  SetPartScale  ( .Actor:Self 00000001 *Fixed[1.0] *Fixed[1.0] *Fixed[1.0] )
  424:  					Wait  1`
  430:  					Call  SetPartScale  ( .Actor:Self 00000001 *Fixed[1.0] *Fixed[1.0] *Fixed[1.0] )
  450:  					Wait  1`
  45C:  					Call  SetPartScale  ( .Actor:Self 00000001 *Fixed[1.0] *Fixed[1.0] *Fixed[1.0] )
  47C:  				Case  ==  00000001
  488:  					Wait  13`
  494:  					Call  SetPartScale  ( .Actor:Self 00000001 *Fixed[1.05] *Fixed[1.05] *Fixed[1.05] )
  4B4:  					Wait  1`
  4C0:  					Call  SetPartScale  ( .Actor:Self 00000001 *Fixed[1.1] *Fixed[1.1] *Fixed[1.1] )
  4E0:  					Wait  1`
  4EC:  					Call  SetPartScale  ( .Actor:Self 00000001 *Fixed[1.15] *Fixed[1.15] *Fixed[1.15] )
  50C:  					Wait  1`
  518:  					Call  SetPartScale  ( .Actor:Self 00000001 *Fixed[1.2] *Fixed[1.2] *Fixed[1.2] )
  538:  					Wait  1`
  544:  					Call  SetPartScale  ( .Actor:Self 00000001 *Fixed[1.25] *Fixed[1.25] *Fixed[1.25] )
  564:  				Case  ==  00000002
  570:  					Wait  13`
  57C:  					Call  SetPartScale  ( .Actor:Self 00000001 *Fixed[1.1] *Fixed[1.1] *Fixed[1.1] )
  59C:  					Wait  1`
  5A8:  					Call  SetPartScale  ( .Actor:Self 00000001 *Fixed[1.2] *Fixed[1.2] *Fixed[1.2] )
  5C8:  					Wait  1`
  5D4:  					Call  SetPartScale  ( .Actor:Self 00000001 *Fixed[1.3] *Fixed[1.3] *Fixed[1.3] )
  5F4:  					Wait  1`
  600:  					Call  SetPartScale  ( .Actor:Self 00000001 *Fixed[1.4] *Fixed[1.4] *Fixed[1.4] )
  620:  					Wait  1`
  62C:  					Call  SetPartScale  ( .Actor:Self 00000001 *Fixed[1.5] *Fixed[1.5] *Fixed[1.5] )
  64C:  			EndSwitch
  654:  		EndThread
  65C:  		Call  SetActorSounds    ( .Actor:Self .ActorSound:Jump 00000000 00000000 )
  678:  		Call  PlaySoundAtActor  ( .Actor:Self 00002034 )
  68C:  		Call  SetGoalToTarget   ( .Actor:Self )
  69C:  		Thread
  6A4:  			Call  SetAnimation  ( .Actor:Self 00000001 000F0005 )
  6BC:  			Wait  10`
  6C8:  			Call  SetAnimation  ( .Actor:Self 00000001 000F0006 )
  6E0:  		EndThread
  6E8:  		Call  SetActorJumpGravity       ( .Actor:Self *Fixed[1.0] )
  6FC:  		Call  JumpToGoal    ( .Actor:Self  20` .False .True .False )
  71C:  		Call  SetAnimation  ( .Actor:Self 00000001 000F0007 )
  734:  		Call  SetActorRotation  ( .Actor:Self 00000000 00000000 00000000 )
  750:  		Call  SetActorRotationOffset    ( .Actor:Self 00000000 00000000 00000000 )
  76C:  		Call  SetPartScale  ( .Actor:Self 00000001 *Fixed[1.0] *Fixed[1.0] *Fixed[1.0] )
  78C:  		Call  LandJump      ( .Actor:Self )
  79C:  		Call  PlaySoundAtActor  ( .Actor:Self 0000029A )
  7B0:  		Call  GetActorPos   ( .Actor:Self *Var0 *Var1 *Var2 )
  7CC:  		Call  SetGoalPos    ( .Actor:Self *Var0 *Var1 *Var2 )
  7E8:  		Call  AddGoalPos    ( .Actor:Self  -15`  0`  0` )
  804:  		Call  JumpToGoal    ( .Actor:Self  20` .False .True .False )
  824:  		Call  PlaySoundAtActor  ( .Actor:Self 0000029A )
  838:  		Call  AddGoalPos    ( .Actor:Self  -10`  0`  0` )
  854:  		Call  JumpToGoal    ( .Actor:Self  10` .False .True .False )
  874:  		Call  PlaySoundAtActor  ( .Actor:Self 0000029A )
  888:  		If  *VarA  ==  .HitResult:Lucky % 5
  898:  			Call  EnemyTestTarget   ( .Actor:Self *Var0 ~Flags:DamageType:TriggerLucky 00000000 00000000 00000000 )
  8BC:  		EndIf
  8C4:  		Wait  10`
  8D0:  		Call  UseBattleCamPreset    ( 00000002 )
  8E0:  		Call  YieldTurn ( )
  8EC:  		Call  SetAnimation      ( .Actor:Self 00000001 000F0003 )
  904:  		Call  SetGoalToHome     ( .Actor:Self )
  914:  		Call  SetActorSpeed     ( .Actor:Self *Fixed[4.0] )
  928:  		Call  RunToGoal ( .Actor:Self  0` .False )
  940:  		Call  EnableIdleScript  ( .Actor:Self 00000001 )
  954:  		Call  UseIdleAnimation  ( .Actor:Self .True )
  968:  		Return
  970:  	EndCaseGroup
  978:  EndSwitch
  980:  Call  UseBattleCamPreset    ( 00000002 )
  990:  Call  MoveBattleCamOver     (  10` )
  9A0:  Call  SetAnimation  ( .Actor:Self 00000001 000F0005 )
  9B8:  Thread
  9C0:  	Call  SetActorRotationOffset    ( .Actor:Self 00000000 0000000C 00000000 )
  9DC:  	Set   *Var0  00000000
  9EC:  	Loop  0000000A
  9F8:  		Add   *Var0  00000024
  A08:  		Call  SetActorRotation  ( .Actor:Self 00000000 00000000 *Var0 )
  A24:  		Wait  1`
  A30:  	EndLoop
  A38:  	Call  SetActorRotation  ( .Actor:Self 00000000 00000000 00000014 )
  A54:  EndThread
  A5C:  Thread
  A64:  	Call  GetActorVar   ( .Actor:Self 00000001 *Var0 )
  A7C:  	Switch  *Var0
  A88:  		Case  ==  00000000
  A94:  			Wait  13`
  AA0:  			Call  SetPartScale  ( .Actor:Self 00000001 *Fixed[1.1] *Fixed[1.1] *Fixed[1.1] )
  AC0:  			Wait  1`
  ACC:  			Call  SetPartScale  ( .Actor:Self 00000001 *Fixed[1.1] *Fixed[1.1] *Fixed[1.1] )
  AEC:  			Wait  1`
  AF8:  			Call  SetPartScale  ( .Actor:Self 00000001 *Fixed[1.2] *Fixed[1.2] *Fixed[1.2] )
  B18:  			Wait  1`
  B24:  			Call  SetPartScale  ( .Actor:Self 00000001 *Fixed[1.2] *Fixed[1.2] *Fixed[1.2] )
  B44:  			Wait  1`
  B50:  			Call  SetPartScale  ( .Actor:Self 00000001 *Fixed[1.3] *Fixed[1.3] *Fixed[1.3] )
  B70:  		Case  ==  00000001
  B7C:  			Wait  13`
  B88:  			Call  SetPartScale  ( .Actor:Self 00000001 *Fixed[1.15] *Fixed[1.15] *Fixed[1.15] )
  BA8:  			Wait  1`
  BB4:  			Call  SetPartScale  ( .Actor:Self 00000001 *Fixed[1.2] *Fixed[1.2] *Fixed[1.2] )
  BD4:  			Wait  1`
  BE0:  			Call  SetPartScale  ( .Actor:Self 00000001 *Fixed[1.35] *Fixed[1.35] *Fixed[1.35] )
  C00:  			Wait  1`
  C0C:  			Call  SetPartScale  ( .Actor:Self 00000001 *Fixed[1.4] *Fixed[1.4] *Fixed[1.4] )
  C2C:  			Wait  1`
  C38:  			Call  SetPartScale  ( .Actor:Self 00000001 *Fixed[1.55] *Fixed[1.55] *Fixed[1.55] )
  C58:  		Case  ==  00000002
  C64:  			Wait  13`
  C70:  			Call  SetPartScale  ( .Actor:Self 00000001 *Fixed[1.2] *Fixed[1.2] *Fixed[1.2] )
  C90:  			Wait  1`
  C9C:  			Call  SetPartScale  ( .Actor:Self 00000001 *Fixed[1.3] *Fixed[1.3] *Fixed[1.3] )
  CBC:  			Wait  1`
  CC8:  			Call  SetPartScale  ( .Actor:Self 00000001 *Fixed[1.5] *Fixed[1.5] *Fixed[1.5] )
  CE8:  			Wait  1`
  CF4:  			Call  SetPartScale  ( .Actor:Self 00000001 *Fixed[1.6] *Fixed[1.6] *Fixed[1.6] )
  D14:  			Wait  1`
  D20:  			Call  SetPartScale  ( .Actor:Self 00000001 *Fixed[1.8] *Fixed[1.8] *Fixed[1.8] )
  D40:  	EndSwitch
  D48:  EndThread
  D50:  Call  SetActorSounds    ( .Actor:Self .ActorSound:Jump 00000000 00000000 )
  D6C:  Call  PlaySoundAtActor  ( .Actor:Self 00002034 )
  D80:  Call  SetGoalToTarget   ( .Actor:Self )
  D90:  Thread
  D98:  	Call  SetAnimation  ( .Actor:Self 00000001 000F0005 )
  DB0:  	Wait  10`
  DBC:  	Call  SetAnimation  ( .Actor:Self 00000001 000F0006 )
  DD4:  EndThread
  DDC:  Call  SetActorJumpGravity   ( .Actor:Self *Fixed[1.6] )
  DF0:  Call  JumpToGoal    ( .Actor:Self  20` .False .True .False )
  E10:  Call  SetAnimation  ( .Actor:Self 00000001 000F0007 )
  E28:  Call  SetActorRotation      ( .Actor:Self 00000000 00000000 00000000 )
  E44:  Call  SetActorRotationOffset    ( .Actor:Self 00000000 00000000 00000000 )
  E60:  Thread
  E68:  	Wait  3`
  E74:  	Call  SetPartScale  ( .Actor:Self 00000001 *Fixed[1.0] *Fixed[1.0] *Fixed[1.0] )
  E94:  EndThread
  E9C:  Call  GetActorVar   ( .Actor:Self 00000001 *VarA )
  EB4:  Switch  *VarA
  EC0:  	Case  ==  00000000
  ECC:  		Wait  2`
  ED8:  		Call  EnemyDamageTarget ( .Actor:Self *Var0 ~Flags:DamageType:0 00000000 00000000 00000003 00000020 )
  F00:  	Case  ==  00000001
  F0C:  		Wait  2`
  F18:  		Call  EnemyDamageTarget ( .Actor:Self *Var0 ~Flags:DamageType:0 00000000 00000000 00000004 00000020 )
  F40:  	Case  ==  00000002
  F4C:  		Wait  2`
  F58:  		Call  EnemyDamageTarget ( .Actor:Self *Var0 ~Flags:DamageType:0 00000000 00000000 00000005 00000020 )
  F80:  EndSwitch
  F88:  Switch  *Var0
  F94:  	CaseOR  ==  .HitResult:Hit % 0
  FA0:  	CaseOR  ==  .HitResult:QuakeImmune % 2
  FAC:  		Call  SetAnimation  ( .Actor:Self 00000001 000F0006 )
  FC4:  		Call  GetActorPos   ( .Actor:Self *Var0 *Var1 *Var2 )
  FE0:  		Add   *Var0  0000003C
  FF0:  		Set   *Var1  00000000
 1000:  		Call  SetActorJumpGravity   ( .Actor:Self *Fixed[1.4] )
 1014:  		Call  SetGoalPos    ( .Actor:Self *Var0 *Var1 *Var2 )
 1030:  		Call  JumpToGoal    ( .Actor:Self  20` .False .True .False )
 1050:  		Call  PlaySoundAtActor  ( .Actor:Self 0000029A )
 1064:  		Add   *Var0  0000001E
 1074:  		Call  SetGoalPos    ( .Actor:Self *Var0 *Var1 *Var2 )
 1090:  		Call  JumpToGoal    ( .Actor:Self  8` .False .True .False )
 10B0:  		Call  PlaySoundAtActor  ( .Actor:Self 0000029A )
 10C4:  		Add   *Var0  00000014
 10D4:  		Call  SetGoalPos    ( .Actor:Self *Var0 *Var1 *Var2 )
 10F0:  		Call  JumpToGoal    ( .Actor:Self  6` .False .True .False )
 1110:  		Call  PlaySoundAtActor  ( .Actor:Self 0000029A )
 1124:  		Add   *Var0  0000000A
 1134:  		Call  SetGoalPos    ( .Actor:Self *Var0 *Var1 *Var2 )
 1150:  		Call  JumpToGoal    ( .Actor:Self  4` .False .True .False )
 1170:  		Call  PlaySoundAtActor  ( .Actor:Self 0000029A )
 1184:  		Call  SetAnimation  ( .Actor:Self 00000001 000F0001 )
 119C:  		Wait  15`
 11A8:  		Call  UseBattleCamPreset    ( 00000002 )
 11B8:  		Call  YieldTurn ( )
 11C4:  		Call  SetAnimation  ( .Actor:Self 00000001 000F0003 )
 11DC:  		Call  SetGoalToHome ( .Actor:Self )
 11EC:  		Call  SetActorSpeed ( .Actor:Self *Fixed[4.0] )
 1200:  		Call  RunToGoal     ( .Actor:Self  0` .False )
 1218:  	EndCaseGroup
 1220:  EndSwitch
 1228:  Call  EnableIdleScript  ( .Actor:Self 00000001 )
 123C:  Call  UseIdleAnimation  ( .Actor:Self .True )
 1250:  Return
 1258:  End
}

#new:Script $Script_NextTurn_8022831C
{
    0:  Call  GetBattlePhase    ( *Var0 )
   10:  Switch  *Var0
   1C:  	Case  ==  0000000C
   28:  		Call  GetActorVar   ( .Actor:Self 00000002 *Var0 )
   40:  		If  *Var0  >  00000000
   50:  			Sub   *Var0  00000001
   60:  			Call  SetActorVar   ( .Actor:Self 00000002 *Var0 )
   78:  			BreakCase
   80:  		EndIf
   88:  		SetConst  *Var0  00000001
   98:  		SetConst  *Var1  000F000D
   A8:  		ExecWait  $Script_8021E118
   B4:  		Return
   BC:  EndSwitch
   C4:  Return
   CC:  End
}

#new:SpecialFormation $SpecialFormation_802283F0
{
	$LeeSushie $Vector3D_8021E940 00000000 00000000 00000000 00000000 00000000
}

#new:IdleAnimations $IdleAnimations_8022840C
{
	.Status:Normal    00100001
	.Status:Stone     00100000
	.Status:Sleep     00100000
	.Status:Poison    00100001
	.Status:Stop      00100000
	.Status:Static    00100001
	.Status:Paralyze  00100000
	.Status:Dizzy     00100008
	.Status:Fear      00100001
	.Status:End
}

#new:IdleAnimations $IdleAnimations_80228458
{
	.Status:Normal    00100014
	.Status:End
}

#new:DefenseTable $DefenseTable_80228464
{
	.Element:Normal 00000000
	.Element:End
}

#new:StatusTable $StatusTable_80228470
{
	.Status:Normal      0`
	.Status:Default     0`
	.Status:Sleep      60`
	.Status:Poison      0`
	.Status:Frozen      0`
	.Status:Dizzy      75`
	.Status:Fear        0`
	.Status:Static      0`
	.Status:Paralyze   75`
	.Status:Shrink     80`
	.Status:Stop       90`
	.Status:DefaultTurnMod    0`
	.Status:SleepTurnMod     -1`
	.Status:PoisonTurnMod     0`
	.Status:FrozenTurnMod     0`
	.Status:DizzyTurnMod     -1`
	.Status:FearTurnMod       0`
	.Status:StaticTurnMod     0`
	.Status:ParalyzeTurnMod   0`
	.Status:ShrinkTurnMod     0`
	.Status:StopTurnMod      -1`
	.Status:End
}

#new:PartsTable $PartsTable_8022851C
{
	00800000 01000000 FD2100FF $IdleAnimations_8022840C $DefenseTable_80228464 00000000 00000000 FEF60000 00000000
	00120001 03000000 000000FF $IdleAnimations_80228458 $DefenseTable_80228464 00000000 00000000 00000000 00000000
}

#new:Actor $LeeLakilester
{
	% stats
	[Index]        86b
	[Level]         0`b
	[MaxHP]        20`b
	[Coins]         0`b
	[Flags]       00000200
	[StatusTable] $StatusTable_80228470
	% ai
	[PartsCount]    2`s
	[PartsTable]  $PartsTable_8022851C
	[Script]      $Script_Init_Lakilester
	% move effectiveness
	[Escape]      100`b
	[Item]          0`b
	[AirLift]       0`b
	[Hurricane]     0`b % Bow's "Spook" as well
	[UpAndAway]     0`b
	[PowerBounce]  90`b
	[SpinSmash]     0`b % weight (0-4)
	% ui positions
	[Size]         44`b  40`b % width height
	[HealthBar]     0`b   0`b % dx dy
	[StatusTurn]  -10`b  20`b % dx dy
	[StatusIcon]   10`b  20`b % dx dy
}

#new:Script $Script_Init_Lakilester
{
    0:  Call  BindTakeTurn  ( .Actor:Self $Script_TakeTurn_80228B78 )
   14:  Call  BindIdle      ( .Actor:Self $Script_Idle_80228604 )
   28:  Call  BindHandleEvent   ( .Actor:Self $Script_HandleEvent_80228614 )
   3C:  Call  BindNextTurn  ( .Actor:Self $Script_NextTurn_80229658 )
   50:  Call  SetActorVar   ( .Actor:Self 00000002 00000001 )
   68:  Return
   70:  End
}

#new:Script $Script_Idle_80228604
{
    0:  Return
    8:  End
}

#new:Script $Script_HandleEvent_80228614
{
    0:  Call  UseIdleAnimation  ( .Actor:Self .False )
   14:  Call  EnableIdleScript  ( .Actor:Self 00000000 )
   28:  Call  GetLastEvent      ( .Actor:Self *Var0 )
   3C:  Switch  *Var0
   48:  	CaseOR  ==  .Event:HitCombo % 9
   54:  	CaseOR  ==  .Event:Hit % A
   60:  		SetConst  *Var0  00000001
   70:  		SetConst  *Var1  0010000A
   80:  		ExecWait  DoNormalHit
   8C:  	EndCaseGroup
   94:  	Case  ==  .Event:BurnHit % E
   A0:  		SetConst  *Var0  00000001
   B0:  		SetConst  *Var1  0010000C
   C0:  		SetConst  *Var2  0010000D
   D0:  		ExecWait  DoBurnHit
   DC:  	Case  ==  .Event:BurnDeath % 24
   E8:  		SetConst  *Var0  00000001
   F8:  		SetConst  *Var1  0010000C
  108:  		SetConst  *Var2  0010000D
  118:  		ExecWait  DoBurnHit
  124:  		ExecWait  $Script_8021E0E0
  130:  		Wait  10`
  13C:  		SetConst  *Var0  00000001
  14C:  		SetConst  *Var1  0010000D
  15C:  		ExecWait  DoDeath
  168:  		Return
  170:  	Case  ==  .Event:SpinSmashHit % B
  17C:  		SetConst  *Var0  00000001
  18C:  		SetConst  *Var1  0010000A
  19C:  		ExecWait  DoSpinSmashHit
  1A8:  	Case  ==  .Event:SpinSmashDeath % 21
  1B4:  		ExecWait  $Script_8021E0E0
  1C0:  		SetConst  *Var0  00000001
  1D0:  		SetConst  *Var1  0010000A
  1E0:  		ExecWait  DoSpinSmashHit
  1EC:  		SetConst  *Var0  00000001
  1FC:  		SetConst  *Var1  0010000B
  20C:  		ExecWait  DoDeath
  218:  		Return
  220:  	Case  ==  .Event:ShockHit % 2F
  22C:  		SetConst  *Var0  00000001
  23C:  		SetConst  *Var1  0010000A
  24C:  		ExecWait  DoShockHit
  258:  		SetConst  *Var0  00000001
  268:  		SetConst  *Var1  0010000A
  278:  		ExecWait  DoJumpBack
  284:  		Call  SetAnimation  ( .Actor:Self 00000001 00100003 )
  29C:  		Call  SetGoalToHome ( .Actor:Self )
  2AC:  		Call  FlyToGoal     ( .Actor:Self  30`  0` .Easing:CosInOut )
  2C8:  	Case  ==  .Event:ShockDeath % 26
  2D4:  		ExecWait  $Script_8021E0E0
  2E0:  		SetConst  *Var0  00000001
  2F0:  		SetConst  *Var1  0010000A
  300:  		ExecWait  DoShockHit
  30C:  		SetConst  *Var0  00000001
  31C:  		SetConst  *Var1  0010000B
  32C:  		ExecWait  DoDeath
  338:  		Return
  340:  	CaseOR  ==  00000017 % 17
  34C:  	CaseOR  ==  .Event:Immune % 19
  358:  	CaseOR  ==  .Event:AirLiftFailed % 1F
  364:  		SetConst  *Var0  00000001
  374:  		SetConst  *Var1  00100001
  384:  		ExecWait  DoImmune
  390:  	EndCaseGroup
  398:  	Case  ==  .Event:Death % 20
  3A4:  		ExecWait  $Script_8021E0E0
  3B0:  		SetConst  *Var0  00000001
  3C0:  		SetConst  *Var1  0010000A
  3D0:  		ExecWait  DoNormalHit
  3DC:  		Wait  10`
  3E8:  		SetConst  *Var0  00000001
  3F8:  		SetConst  *Var1  0010000B
  408:  		ExecWait  DoDeath
  414:  		Return
  41C:  	Case  ==  .Event:RecoverStatus % 31
  428:  		SetConst  *Var0  00000001
  438:  		SetConst  *Var1  00100001
  448:  		ExecWait  DoRecover
  454:  	Case  ==  .Event:ScareAway % 39
  460:  		SetConst  *Var0  00000001
  470:  		SetConst  *Var1  00100003
  480:  		SetConst  *Var2  0010000A
  490:  		ExecWait  DoScareAway
  49C:  		Return
  4A4:  	Case  ==  .Event:BeginAirLift % 3A
  4B0:  		SetConst  *Var0  00000001
  4C0:  		SetConst  *Var1  00100003
  4D0:  		ExecWait  DoAirLift
  4DC:  	Case  ==  .Event:BlowAway % 16
  4E8:  		SetConst  *Var0  00000001
  4F8:  		SetConst  *Var1  0010000A
  508:  		ExecWait  DoBlowAway
  514:  		Return
  51C:  	Default
  524:  EndSwitch
  52C:  Call  EnableIdleScript  ( .Actor:Self 00000001 )
  540:  Call  UseIdleAnimation  ( .Actor:Self .True )
  554:  Return
  55C:  End
}

#new:Script $Script_TakeTurn_80228B78
{
    0:  Call  UseIdleAnimation  ( .Actor:Self .False )
   14:  Call  EnableIdleScript  ( .Actor:Self 00000000 )
   28:  Call  SetTargetActor    ( .Actor:Self .Actor:Player )
   3C:  Call  UseBattleCamPreset    ( 0000003F )
   4C:  Call  BattleCamTargetActor  ( .Actor:Self )
   5C:  Call  8024ECF8  ( FFFFFFFF 00000001 00000000 )
   74:  Call  SetAnimation      ( .Actor:Self 00000001 00100003 )
   8C:  Call  GetActorPos       ( .Actor:Self *Var0 *Var1 *Var2 )
   A8:  Call  SetGoalPos        ( .Actor:Self  20`  30` *Var2 )
   C4:  Call  FlyToGoal ( .Actor:Self  30`  0` .Easing:CosInOut )
   E0:  Call  SetAnimation      ( .Actor:Self 00000001 00100001 )
   F8:  Call  GetActorPos       ( .Actor:Self *Var0 *Var1 *Var2 )
  114:  Call  GetStatusFlags    ( .Actor:Self *VarA )
  128:  If  *VarA  &  ~Flags:StatusFlags:Shrink % 80000
  138:  	Add   *Var0  FFFFFFFF
  148:  	Add   *Var1  00000004
  158:  	Add   *Var2  00000002
  168:  	Call  SetPartScale  ( .Actor:Self 00000003 *Fixed[0.4] *Fixed[0.4] *Fixed[0.4] )
  188:  Else
  190:  	Add   *Var0  FFFFFFFD
  1A0:  	Add   *Var1  0000000A
  1B0:  	Add   *Var2  00000005
  1C0:  	Call  SetPartScale  ( .Actor:Self 00000003 *Fixed[1.0] *Fixed[1.0] *Fixed[1.0] )
  1E0:  EndIf
  1E8:  Call  SetPartPos    ( .Actor:Self 00000003 *Var0 *Var1 *Var2 )
  208:  Wait  1`
  214:  Call  SetPartFlagBits   ( .Actor:Self 00000003 00000001 .False )
  230:  Call  SetAnimation  ( .Actor:Self 00000003 00100014 )
  248:  Call  SetAnimation  ( .Actor:Self 00000001 0010000F )
  260:  Loop  00000004
  26C:  	Call  GetStatusFlags    ( .Actor:Self *VarA )
  280:  	If  *VarA  &  ~Flags:StatusFlags:Shrink % 80000
  290:  		AddF  *Var1  *Fixed[2.4]
  2A0:  	Else
  2A8:  		Add   *Var1  00000006
  2B8:  	EndIf
  2C0:  	Call  SetPartPos    ( .Actor:Self 00000003 *Var0 *Var1 *Var2 )
  2E0:  	Wait  1`
  2EC:  EndLoop
  2F4:  Call  GetActorPos       ( .Actor:Self *Var0 *Var1 *Var2 )
  310:  Call  GetStatusFlags    ( .Actor:Self *VarA )
  324:  If  *VarA  &  ~Flags:StatusFlags:Shrink % 80000
  334:  	Add   *Var0  FFFFFFFD
  344:  	Add   *Var1  00000010
  354:  	Add   *Var2  00000002
  364:  	SetF  *Var3  *Fixed[0.4]
  374:  Else
  37C:  	Add   *Var0  FFFFFFF8
  38C:  	Add   *Var1  00000028
  39C:  	Add   *Var2  00000005
  3AC:  	SetF  *Var3  *Fixed[1.0]
  3BC:  EndIf
  3C4:  Call  PlayEffect        ( ~FX:EnergyIn:ShortStreaks *Var0 *Var1 *Var2 *Var3 0000001E 00000000 00000000 00000000 00000000 00000000 00000000 00000000 )
  408:  Call  PlaySoundAtActor  ( .Actor:Self 000002C5 )
  41C:  Thread
  424:  	Loop  0000000F
  430:  		Call  SetActorDispOffset    ( .Actor:Self 00000001 00000000 00000000 )
  44C:  		Call  SetPartDispOffset     ( .Actor:Self 00000003 00000001 00000000 00000000 )
  46C:  		Wait  1`
  478:  		Call  SetActorDispOffset    ( .Actor:Self FFFFFFFF 00000000 00000000 )
  494:  		Call  SetPartDispOffset     ( .Actor:Self 00000003 FFFFFFFF 00000000 00000000 )
  4B4:  		Wait  1`
  4C0:  	EndLoop
  4C8:  	Call  SetActorDispOffset    ( .Actor:Self 00000000 00000000 00000000 )
  4E4:  	Call  SetPartDispOffset     ( .Actor:Self 00000003 00000000 00000000 00000000 )
  504:  EndThread
  50C:  Call  SetGoalToTarget   ( .Actor:Self )
  51C:  Wait  10`
  528:  Call  SetAnimation      ( .Actor:Self 00000001 00100010 )
  540:  Wait  10`
  54C:  Call  SetAnimation      ( .Actor:Self 00000001 00100011 )
  564:  Wait  10`
  570:  Call  SetAnimation      ( .Actor:Self 00000001 00100012 )
  588:  Wait  3`
  594:  Call  SetPartSounds     ( .Actor:Self 00000003 .ActorSound:Jump 00000000 00000000 )
  5B4:  Call  PlaySoundAtActor  ( .Actor:Self 0000201B )
  5C8:  Call  EnemyTestTarget   ( .Actor:Self *Var0 ~Flags:DamageType:0 00000000 00000001 00000010 )
  5EC:  Switch  *Var0
  5F8:  	CaseOR  ==  .HitResult:Miss % 6
  604:  	CaseOR  ==  .HitResult:Lucky % 5
  610:  		Set   *VarA  *Var0
  620:  		Call  SetAnimation  ( .Actor:Self 00000003 00100015 )
  638:  		Call  SetPartJumpGravity    ( .Actor:Self 00000003 *Fixed[1.5] )
  650:  		Call  GetGoalPos    ( .Actor:Self *Var0 *Var1 *Var2 )
  66C:  		Call  RandInt       ( 00000064 *Var3 )
  680:  		Sub   *Var3  00000032
  690:  		Add   *Var0  *Var3
  6A0:  		Call  JumpPartTo    ( .Actor:Self 00000003 *Var0  0` *Var2  20` .True )
  6C8:  		Thread
  6D0:  			Add   *Var0  FFFFFFCE
  6E0:  			Call  JumpPartTo        ( .Actor:Self 00000003 *Var0  0` *Var2  15` .True )
  708:  			Call  SetPartFlagBits   ( .Actor:Self 00000003 00000001 .True )
  724:  		EndThread
  72C:  		If  *VarA  ==  .HitResult:Lucky % 5
  73C:  			Call  EnemyTestTarget   ( .Actor:Self *Var0 ~Flags:DamageType:TriggerLucky 00000000 00000000 00000000 )
  760:  		EndIf
  768:  		Wait  15`
  774:  		Call  YieldTurn ( )
  780:  		Call  UseBattleCamPreset    ( 00000002 )
  790:  		Call  MoveBattleCamOver (  60` )
  7A0:  		Call  SetAnimation      ( .Actor:Self 00000001 00100003 )
  7B8:  		Call  SetGoalToHome     ( .Actor:Self )
  7C8:  		Call  FlyToGoal ( .Actor:Self  30`  0` .Easing:CosInOut )
  7E4:  		Call  EnableIdleScript  ( .Actor:Self 00000001 )
  7F8:  		Call  UseIdleAnimation  ( .Actor:Self .True )
  80C:  		Return
  814:  	EndCaseGroup
  81C:  EndSwitch
  824:  Call  SetAnimation      ( .Actor:Self 00000003 00100015 )
  83C:  Call  SetPartJumpGravity    ( .Actor:Self 00000003 *Fixed[1.5] )
  854:  Call  SetGoalToTarget   ( .Actor:Self )
  864:  Call  GetGoalPos        ( .Actor:Self *Var0 *Var1 *Var2 )
  880:  Call  JumpPartTo        ( .Actor:Self 00000003 *Var0 *Var1 *Var2  20` .True )
  8A8:  Thread
  8B0:  	Add   *Var0  FFFFFFCE
  8C0:  	Call  JumpPartTo        ( .Actor:Self 00000003 *Var0  0` *Var2  15` .True )
  8E8:  	Call  SetPartFlagBits   ( .Actor:Self 00000003 00000001 .True )
  904:  EndThread
  90C:  Call  GetActorVar   ( .Actor:Self 00000001 *Var9 )
  924:  Switch  *Var9
  930:  	Case  ==  00000000
  93C:  		Wait  2`
  948:  		Call  EnemyDamageTarget ( .Actor:Self *Var0 ~Flags:DamageType:NoContact 00000000 00000000 00000003 00000020 )
  970:  	Case  ==  00000001
  97C:  		Wait  2`
  988:  		Call  EnemyDamageTarget ( .Actor:Self *Var0 ~Flags:DamageType:NoContact 00000000 00000000 00000004 00000020 )
  9B0:  	Case  ==  00000002
  9BC:  		Wait  2`
  9C8:  		Call  EnemyDamageTarget ( .Actor:Self *Var0 ~Flags:DamageType:NoContact 00000000 00000000 00000005 00000020 )
  9F0:  EndSwitch
  9F8:  Switch  *Var0
  A04:  	CaseOR  ==  .HitResult:Hit % 0
  A10:  	CaseOR  ==  .HitResult:QuakeImmune % 2
  A1C:  		Wait  15`
  A28:  		Call  YieldTurn ( )
  A34:  		Call  UseBattleCamPreset    ( 00000002 )
  A44:  		Call  MoveBattleCamOver (  8` )
  A54:  		Call  SetAnimation      ( .Actor:Self 00000001 00100003 )
  A6C:  		Call  SetGoalToHome     ( .Actor:Self )
  A7C:  		Call  FlyToGoal ( .Actor:Self  30`  0` .Easing:CosInOut )
  A98:  	EndCaseGroup
  AA0:  EndSwitch
  AA8:  Call  EnableIdleScript  ( .Actor:Self 00000001 )
  ABC:  Call  UseIdleAnimation  ( .Actor:Self .True )
  AD0:  Return
  AD8:  End
}

#new:Script $Script_NextTurn_80229658
{
    0:  Call  GetBattlePhase    ( *Var0 )
   10:  Switch  *Var0
   1C:  	Case  ==  0000000C
   28:  		Call  GetActorVar   ( .Actor:Self 00000002 *Var0 )
   40:  		If  *Var0  >  00000000
   50:  			Sub   *Var0  00000001
   60:  			Call  SetActorVar   ( .Actor:Self 00000002 *Var0 )
   78:  			BreakCase
   80:  		EndIf
   88:  		SetConst  *Var0  00000001
   98:  		SetConst  *Var1  0010000A
   A8:  		ExecWait  $Script_8021E118
   B4:  		Return
   BC:  EndSwitch
   C4:  Return
   CC:  End
}

#new:SpecialFormation $SpecialFormation_8022972C
{
	$LeeLakilester $Vector3D_8021E940 00000000 00000000 00000000 00000000 00000000
}

#new:Script $Script_CopyPartner
{
    0:  Call  UseIdleAnimation  ( .Actor:Self .False )
   14:  Call  EnableIdleScript  ( .Actor:Self 00000000 )
   28:  Call  UseBattleCamPreset    ( 0000000E )
   38:  Call  BattleCamTargetActor  ( .Actor:Self )
   48:  Call  MoveBattleCamOver (  15` )
   58:  Wait  15`
   64:  Call  ActorSpeak        ( 00020027 .Actor:Self 00000001 00A40006 00A40003 ) % I bet you've never seen a move like this before!
   84:  Wait  10`
   90:  Call  PlaySoundAtActor  ( .Actor:Self 000020B8 )
   A4:  Call  SetAnimation      ( .Actor:Self 00000001 00A40007 )
   BC:  Call  GetActorPos       ( .Actor:Self *Var0 *Var1 *Var2 )
   D8:  Call  GetStatusFlags    ( .Actor:Self *VarA )
   EC:  If  *VarA  &  ~Flags:StatusFlags:Shrink % 80000
   FC:  	Add   *Var1  00000008
  10C:  	SetF  *Var3  *Fixed[0.4]
  11C:  Else
  124:  	Add   *Var1  00000014
  134:  	SetF  *Var3  *Fixed[1.0]
  144:  EndIf
  14C:  Call  PlayEffect    ( 00000013 00000001 *Var0 *Var1 *Var2 *Var3 00000028 00000000 00000000 00000000 00000000 00000000 00000000 00000000 )
  190:  Call  $Function_8021973C ( )
  19C:  Call  MakeLerp  ( 00000000 000000C8 00000014 .Easing:Linear )
  1B8:  Label  0
  1C4:  Call  UpdateLerp ( )
  1D0:  Call  $Function_80219780    ( *Var0 )
  1E0:  Wait  1`
  1EC:  If  *Var1  ==  00000001
  1FC:  	Goto  0
  208:  EndIf
  210:  Wait  10`
  21C:  Call  $Function_GetPartner  ( *Var5 *Var6 )
  230:  Call  $Function_80218100 ( )
  23C:  Call  $Function_80219824    ( *Var5 )
  24C:  Switch  *Var5
  258:  	Case  ==  00000001
  264:  		Call  SummonEnemy   ( $SpecialFormation_80220524 00000000 )
  278:  	Case  ==  00000002
  284:  		Call  SummonEnemy   ( $SpecialFormation_80222274 00000000 )
  298:  	Case  ==  00000003
  2A4:  		Call  SummonEnemy   ( $SpecialFormation_8022336C 00000000 )
  2B8:  	Case  ==  00000004
  2C4:  		Call  SummonEnemy   ( $SpecialFormation_802243F4 00000000 )
  2D8:  	Case  ==  00000009
  2E4:  		Call  SummonEnemy   ( $SpecialFormation_80225958 00000000 )
  2F8:  	Case  ==  00000006
  304:  		Call  SummonEnemy   ( $SpecialFormation_80226960 00000000 )
  318:  	Case  ==  00000007
  324:  		Call  SummonEnemy   ( $SpecialFormation_802283F0 00000000 )
  338:  	Case  ==  00000008
  344:  		Call  SummonEnemy   ( $SpecialFormation_8022972C 00000000 )
  358:  EndSwitch
  360:  Set   *VarA  *Var0
  370:  Call  CopyStatusEffects ( .Actor:Self *VarA )
  384:  Call  PlaySoundAtActor  ( .Actor:Self .Sound:SmokeBurst )
  398:  Thread
  3A0:  	Call  GetActorPos   ( .Actor:Self *Var0 *Var1 *Var2 )
  3BC:  	Add   *Var1  00000003
  3CC:  	Add   *Var2  00000005
  3DC:  	Loop  00000003
  3E8:  		Call  PlayEffect    ( ~FX:BigSmokePuff *Var0 *Var1 *Var2 00000000 00000000 00000000 00000000 00000000 00000000 00000000 00000000 00000000 00000000 )
  42C:  		Wait  3`
  438:  	EndLoop
  440:  EndThread
  448:  Wait  5`
  454:  Call  GetActorPos   ( .Actor:Self *Var0 *Var1 *Var2 )
  470:  Call  SetActorPos   ( *VarA *Var0 *Var1 *Var2 )
  48C:  Call  SetPartFlagBits   ( .Actor:Self 00000001 00020001 .True )
  4A8:  Call  SetPartFlagBits   ( .Actor:Self 00000001 00800000 .False )
  4C4:  Call  SetActorFlagBits  ( .Actor:Self 00400004 .True )
  4DC:  Call  GetActorHP    ( .Actor:Self *Var0 )
  4F0:  Call  SetEnemyHP    ( *VarA *Var0 )
  504:  Call  CopyBuffs     ( .Actor:Self *VarA )
  518:  Call  GetOwnerID    ( *Var0 )
  528:  Call  SetActorVar   ( *VarA 00000000 *Var0 )
  540:  Call  SetActorVar   ( *VarA 00000001 *Var6 )
  558:  Wait  20`
  564:  Call  UseBattleCamPreset    ( 00000002 )
  574:  Call  MoveBattleCamOver (  20` )
  584:  Thread
  58C:  	Call  MakeLerp  ( 000000C8 00000000 00000014 .Easing:Linear )
  5A8:  	Label  1
  5B4:  	Call  UpdateLerp ( )
  5C0:  	Call  $Function_80219780    ( *Var0 )
  5D0:  	Wait  1`
  5DC:  	If  *Var1  ==  00000001
  5EC:  		Goto  1
  5F8:  	EndIf
  600:  EndThread
  608:  Call  SetActorSounds    ( *VarA .ActorSound:Jump 00000000 00000000 )
  624:  Switch  *Var5
  630:  	Case  ==  00000008
  63C:  		Call  GetActorPos   ( *VarA *Var0 *Var1 *Var2 )
  658:  		Call  SetActorJumpGravity   ( *VarA *Fixed[0.01] )
  66C:  		Call  SetGoalPos    ( *VarA *Var0  10` *Var2 )
  688:  		Call  JumpToGoal    ( *VarA  10` .False .False .False )
  6A8:  		Wait  10`
  6B4:  	CaseOR  ==  00000006
  6C0:  	CaseOR  ==  00000009
  6CC:  	CaseOR  ==  00000004
  6D8:  		Call  GetActorPos   ( *VarA *Var0 *Var1 *Var2 )
  6F4:  		Call  SetActorJumpGravity   ( *VarA *Fixed[0.01] )
  708:  		Call  SetGoalPos    ( *VarA *Var0  30` *Var2 )
  724:  		Call  JumpToGoal    ( *VarA  20` .False .False .False )
  744:  	EndCaseGroup
  74C:  EndSwitch
  754:  Call  GetActorPos   ( *VarA *Var0 *Var1 *Var2 )
  770:  Call  ForceHomePos  ( *VarA *Var0 *Var1 *Var2 )
  78C:  Call  HPBarToHome   ( *VarA )
  79C:  Call  ResetActorSounds  ( *VarA .ActorSound:Jump )
  7B0:  Wait  20`
  7BC:  Call  SetActorPos   ( .Actor:Self  0`  -1000`  0` )
  7D8:  Call  ForceHomePos  ( .Actor:Self  0`  -1000`  0` )
  7F4:  Call  HPBarToHome   ( .Actor:Self )
  804:  Call  SetActorVar   ( .Actor:Self 00000008 00000001 )
  81C:  Call  EnableIdleScript  ( .Actor:Self 00000001 )
  830:  Call  UseIdleAnimation  ( .Actor:Self .True )
  844:  Return
  84C:  End
}

#new:Script $Script_TakeTurn_80229F9C
{
    0:  Call  GetActorVar   ( .Actor:Self 00000008 *Var0 )
   18:  Switch  *Var0
   24:  	Case  ==  00000000
   30:  		ExecWait  $Script_CopyPartner
   3C:  	Case  ==  00000001
   48:  	Case  ==  00000002
   54:  		ExecWait  $Script_FlyingTackle
   60:  	Case  ==  00000003
   6C:  		Call  SetActorVar   ( .Actor:Self 00000008 00000002 )
   84:  EndSwitch
   8C:  Return
   94:  End
}

#new:Script $Script_NextTurn_8022A038
{
    0:  Call  UseIdleAnimation  ( .Actor:Self .False )
   14:  Call  EnableIdleScript  ( .Actor:Self 00000000 )
   28:  Call  GetBattlePhase    ( *Var0 )
   38:  Switch  *Var0
   44:  	Case  ==  0000000C
   50:  		Call  GetStatusFlags    ( .Actor:Self *Var0 )
   64:  		If  *Var0  &  ~Flags:StatusFlags:Sleep|Paralyze|Poison|Dizzy|Shrink|Stone|Stop % 3F1000
   74:  			BreakCase
   7C:  		EndIf
   84:  		Call  GetActorHP    ( .Actor:Self *Var0 )
   98:  		Call  GetEnemyMaxHP ( .Actor:Self *Var1 )
   AC:  		Div   *Var1  00000002
   BC:  		If  *Var0  <=  *Var1
   CC:  			Call  UseBattleCamPreset    ( 00000002 )
   DC:  			Call  MoveBattleCamOver     (  10` )
   EC:  			Call  GetActorVar   ( .Actor:Self 00000008 *Var0 )
  104:  			If  *Var0  ==  00000001
  114:  				Call  ActorSpeak    ( 00020028 .Actor:Enemy1 00000001 00A40006 00A40003 ) % Ooh... You are strong, I'll give you that.
  134:  			Else
  13C:  				Call  ActorSpeak    ( 00020028 .Actor:Self 00000001 00A40006 00A40003 ) % Ooh... You are strong, I'll give you that.
  15C:  			EndIf
  164:  			BreakCase
  16C:  		EndIf
  174:  		Call  GetPlayerHP   ( *Var0 )
  184:  		If  *Var0  <=  00000005
  194:  			Call  UseBattleCamPreset    ( 00000002 )
  1A4:  			Call  MoveBattleCamOver     (  10` )
  1B4:  			Call  ActorSpeak    ( 00020029 .Actor:Self 00000001 00A40006 00A40003 ) % Mario, now I will finish you.
  1D4:  			BreakCase
  1DC:  		EndIf
  1E4:  EndSwitch
  1EC:  Call  EnableIdleScript  ( .Actor:Self 00000001 )
  200:  Call  UseIdleAnimation  ( .Actor:Self .True )
  214:  Return
  21C:  End
}

PADDING: 8022A25C to 8022A260 (004766EC to 004766F0)
00000000

#new:IdleAnimations $IdleAnimations_8022A260
{
	.Status:Normal    00A20005
	.Status:Stone     00A20000
	.Status:Sleep     00A2001C
	.Status:Poison    00A20000
	.Status:Stop      00A20000
	.Status:Static    00A20000
	.Status:Paralyze  00A20000
	.Status:Dizzy     00A2001E
	.Status:Dizzy     00A2001E
	.Status:End
}

#new:DefenseTable $DefenseTable_8022A2AC
{
	.Element:Normal 00000000
	.Element:End
}

#new:StatusTable $StatusTable_8022A2B8
{
	.Status:Normal     50`
	.Status:Default    50`
	.Status:Sleep      40`
	.Status:Poison     50`
	.Status:Frozen      0`
	.Status:Dizzy      40`
	.Status:Fear        0`
	.Status:Static      0`
	.Status:Paralyze   50`
	.Status:Shrink     60`
	.Status:Stop       70`
	.Status:DefaultTurnMod    0`
	.Status:SleepTurnMod     -1`
	.Status:PoisonTurnMod     0`
	.Status:FrozenTurnMod     0`
	.Status:DizzyTurnMod     -1`
	.Status:FearTurnMod       0`
	.Status:StaticTurnMod    -1`
	.Status:ParalyzeTurnMod  -1`
	.Status:ShrinkTurnMod    -1`
	.Status:StopTurnMod      -1`
	.Status:End
}

#new:PartsTable $PartsTable_8022A364
{
	00800000 01000000 FB1C00FF $IdleAnimations_8022A260 $DefenseTable_8022A2AC 00000000 00000000 02F90000 00000000
}

#new:Actor $TheMaster1
{
	% stats
	[Index]        7Ab
	[Level]         0`b
	[MaxHP]        50`b
	[Coins]         0`b
	[Flags]       00000000
	[StatusTable] $StatusTable_8022A2B8
	% ai
	[PartsCount]    1`s
	[PartsTable]  $PartsTable_8022A364
	[Script]      $Script_Init_8022A3B0
	% move effectiveness
	[Escape]      100`b
	[Item]          0`b
	[AirLift]       0`b
	[Hurricane]     0`b % Bow's "Spook" as well
	[UpAndAway]     0`b
	[PowerBounce]  80`b
	[SpinSmash]     0`b % weight (0-4)
	% ui positions
	[Size]         30`b  35`b % width height
	[HealthBar]     0`b   0`b % dx dy
	[StatusTurn]  -10`b  30`b % dx dy
	[StatusIcon]   10`b  30`b % dx dy
}

#new:Script $Script_Init_8022A3B0
{
    0:  Call  BindTakeTurn  ( .Actor:Self $Script_TakeTurn_8022AA54 )
   14:  Call  BindIdle      ( .Actor:Self $Script_Idle_8022A494 )
   28:  Call  BindHandleEvent   ( .Actor:Self $Script_HandleEvent_8022B2CC )
   3C:  Call  BindNextTurn  ( .Actor:Self $Script_NextTurn_8022B06C )
   50:  Call  SetActorVar   ( .Actor:Self 00000000 00000000 )
   68:  Call  SetActorVar   ( .Actor:Self 00000001 00000000 )
   80:  Call  SetActorVar   ( .Actor:Self 00000002 00000000 )
   98:  Call  SetActorVar   ( .Actor:Self 00000003 00000002 )
   B0:  Set   *GF_FoughtTheMaster  .True
   C0:  Call  SetBattleFlagBits ( 00800000 .True )
   D4:  Return
   DC:  End
}

#new:Script $Script_Idle_8022A494
{
    0:  Return
    8:  End
}

#new:Script $Script_8022A4A4
{
    0:  Call  UseIdleAnimation  ( .Actor:Self .False )
   14:  Call  EnableIdleScript  ( .Actor:Self 00000000 )
   28:  Call  GetLastEvent      ( .Actor:Self *Var0 )
   3C:  Switch  *Var0
   48:  	CaseOR  ==  .Event:HitCombo % 9
   54:  	CaseOR  ==  .Event:Hit % A
   60:  		SetConst  *Var0  00000001
   70:  		SetConst  *Var1  00A20017
   80:  		ExecWait  DoNormalHit
   8C:  	EndCaseGroup
   94:  	Case  ==  .Event:BurnHit % E
   A0:  		SetConst  *Var0  00000001
   B0:  		SetConst  *Var1  00A2001A
   C0:  		SetConst  *Var2  00A2001B
   D0:  		ExecWait  DoBurnHit
   DC:  	Case  ==  .Event:BurnDeath % 24
   E8:  		SetConst  *Var0  00000001
   F8:  		SetConst  *Var1  00A2001A
  108:  		SetConst  *Var2  00A2001B
  118:  		ExecWait  DoBurnHit
  124:  		SetConst  *Var0  00000001
  134:  		SetConst  *Var1  00A20019
  144:  		ExecWait  DoDeath
  150:  		Return
  158:  	Case  ==  .Event:SpinSmashHit % B
  164:  		SetConst  *Var0  00000001
  174:  		SetConst  *Var1  00A20017
  184:  		ExecWait  DoSpinSmashHit
  190:  	Case  ==  .Event:ShockHit % 2F
  19C:  		SetConst  *Var0  00000001
  1AC:  		SetConst  *Var1  00A20017
  1BC:  		ExecWait  DoShockHit
  1C8:  		SetConst  *Var0  00000001
  1D8:  		SetConst  *Var1  00A20017
  1E8:  		ExecWait  DoJumpBack
  1F4:  		Call  JumpToGoal    ( .Actor:Self  5` .False .True .False )
  214:  		Call  SetAnimationRate      ( .Actor:Self 00000001 *Fixed[2.0] )
  22C:  		Call  SetAnimation  ( .Actor:Self 00000001 00A20007 )
  244:  		Call  SetGoalToHome ( .Actor:Self )
  254:  		Call  SetActorSpeed ( .Actor:Self *Fixed[8.0] )
  268:  		Call  RunToGoal     ( .Actor:Self  0` .False )
  280:  		Call  SetAnimationRate      ( .Actor:Self 00000001 *Fixed[1.0] )
  298:  		Wait  5`
  2A4:  		Call  SetAnimation  ( .Actor:Self 00000001 00A20005 )
  2BC:  		Call  SetActorJumpGravity   ( .Actor:Self *Fixed[1.6] )
  2D0:  		Call  JumpToGoal    ( .Actor:Self  5` .False .True .False )
  2F0:  	CaseOR  ==  00000017 % 17
  2FC:  	CaseOR  ==  .Event:Immune % 19
  308:  	CaseOR  ==  .Event:AirLiftFailed % 1F
  314:  		SetConst  *Var0  00000001
  324:  		SetConst  *Var1  00A20002
  334:  		ExecWait  DoImmune
  340:  	EndCaseGroup
  348:  	Case  ==  .Event:ShockDeath % 26
  354:  		SetConst  *Var0  00000001
  364:  		SetConst  *Var1  00A20017
  374:  		ExecWait  DoShockHit
  380:  		SetConst  *Var0  00000001
  390:  		SetConst  *Var1  00A20019
  3A0:  		ExecWait  DoDeath
  3AC:  		Return
  3B4:  	Case  ==  .Event:Death % 20
  3C0:  		SetConst  *Var0  00000001
  3D0:  		SetConst  *Var1  00A20017
  3E0:  		ExecWait  DoNormalHit
  3EC:  		Wait  10`
  3F8:  		SetConst  *Var0  00000001
  408:  		SetConst  *Var1  00A20019
  418:  		ExecWait  DoDeath
  424:  		Return
  42C:  	Case  ==  .Event:SpinSmashDeath % 21
  438:  		SetConst  *Var0  00000001
  448:  		SetConst  *Var1  00A20017
  458:  		ExecWait  DoSpinSmashHit
  464:  		SetConst  *Var0  00000001
  474:  		SetConst  *Var1  00A20019
  484:  		ExecWait  DoDeath
  490:  		Return
  498:  	Case  ==  .Event:EndFirstStrike % 35
  4A4:  		SetConst  *Var0  00000001
  4B4:  		SetConst  *Var1  00A20002
  4C4:  		ExecWait  DoReturnHome
  4D0:  		Call  HPBarToHome   ( .Actor:Self )
  4E0:  	Case  ==  .Event:RecoverStatus % 31
  4EC:  		SetConst  *Var0  00000001
  4FC:  		SetConst  *Var1  00A20002
  50C:  		ExecWait  DoRecover
  518:  	Case  ==  .Event:ScareAway % 39
  524:  		SetConst  *Var0  00000001
  534:  		SetConst  *Var1  00A20007
  544:  		SetConst  *Var2  00A20017
  554:  		ExecWait  DoScareAway
  560:  		Return
  568:  	Default
  570:  EndSwitch
  578:  Call  EnableIdleScript  ( .Actor:Self 00000001 )
  58C:  Call  UseIdleAnimation  ( .Actor:Self .True )
  5A0:  Return
  5A8:  End
}

#new:Script $Script_TakeTurn_8022AA54
{
    0:  Call  UseIdleAnimation  ( .Actor:Self .False )
   14:  Call  EnableIdleScript  ( .Actor:Self 00000000 )
   28:  Call  SetTargetActor    ( .Actor:Self .Actor:Player )
   3C:  Call  UseBattleCamPreset    ( 0000003F )
   4C:  Call  BattleCamTargetActor  ( .Actor:Self )
   5C:  Call  8024ECF8  ( FFFFFFFF 00000001 00000000 )
   74:  Call  SetAnimation      ( .Actor:Self 00000001 00A20007 )
   8C:  Call  SetGoalToTarget   ( .Actor:Self )
   9C:  Call  AddGoalPos        ( .Actor:Self  30`  0`  0` )
   B8:  Call  SetActorSpeed     ( .Actor:Self *Fixed[4.6] )
   CC:  Call  RunToGoal ( .Actor:Self  0` .False )
   E4:  Call  SetAnimation      ( .Actor:Self 00000001 00A20002 )
   FC:  Wait  10`
  108:  Thread
  110:  	Call  PlaySoundAtActor  ( .Actor:Self 000020BB )
  124:  	Wait  5`
  130:  	Call  PlaySoundAtActor  ( .Actor:Self 000020BB )
  144:  EndThread
  14C:  Call  SetAnimation  ( .Actor:Self 00000001 00A20010 )
  164:  Wait  10`
  170:  Thread
  178:  	Call  SetAnimation  ( .Actor:Self 00000001 00A20011 )
  190:  	Wait  7`
  19C:  	Call  SetAnimation  ( .Actor:Self 00000001 00A20012 )
  1B4:  EndThread
  1BC:  Call  SetGoalToTarget   ( .Actor:Self )
  1CC:  Call  RunToGoal ( .Actor:Self  8` .True )
  1E4:  Call  EnemyTestTarget   ( .Actor:Self *VarA ~Flags:DamageType:0 00000000 00000000 00000010 )
  208:  Switch  *VarA
  214:  	CaseOR  ==  .HitResult:Miss % 6
  220:  	CaseOR  ==  .HitResult:Lucky % 5
  22C:  		Call  UseBattleCamPreset    ( 00000002 )
  23C:  		Wait  10`
  248:  		Call  SetGoalToTarget       ( .Actor:Self )
  258:  		Call  GetGoalPos    ( .Actor:Self *Var0 *Var1 *Var2 )
  274:  		Add   *Var0  00000014
  284:  		Set   *Var1  00000000
  294:  		Call  SetAnimation  ( .Actor:Self 00000001 00A20007 )
  2AC:  		Call  SetGoalPos    ( .Actor:Self *Var0 *Var1 *Var2 )
  2C8:  		Call  RunToGoal     ( .Actor:Self  10` .True )
  2E0:  		Call  SetAnimation  ( .Actor:Self 00000001 00A20002 )
  2F8:  		Wait  3`
  304:  		If  *VarA  ==  .HitResult:Lucky % 5
  314:  			Call  EnemyTestTarget   ( .Actor:Self *Var0 ~Flags:DamageType:TriggerLucky 00000000 00000000 00000000 )
  338:  		EndIf
  340:  		Call  SetAnimation  ( .Actor:Self 00000001 00A20002 )
  358:  		Call  SetGoalToHome ( .Actor:Self )
  368:  		Call  SetActorSpeed ( .Actor:Self *Fixed[3.8] )
  37C:  		Call  SetAnimation  ( .Actor:Self 00000001 00A20007 )
  394:  		Call  RunToGoal     ( .Actor:Self  0` .False )
  3AC:  		Call  SetAnimation  ( .Actor:Self 00000001 00A20002 )
  3C4:  		Call  EnableIdleScript  ( .Actor:Self 00000001 )
  3D8:  		Call  UseIdleAnimation  ( .Actor:Self .True )
  3EC:  		Return
  3F4:  	EndCaseGroup
  3FC:  EndSwitch
  404:  Call  PlaySoundAtActor  ( .Actor:Self 000003ED )
  418:  Wait  2`
  424:  Call  EnemyDamageTarget ( .Actor:Self *Var0 ~Flags:DamageType:0 00000000 00000000 00000006 00000030 )
  44C:  Switch  *Var0
  458:  	CaseOR  ==  .HitResult:Hit % 0
  464:  	CaseOR  ==  .HitResult:QuakeImmune % 2
  470:  		Call  UseBattleCamPreset    ( 00000002 )
  480:  		Call  SetGoalToTarget       ( .Actor:Self )
  490:  		Call  GetGoalPos    ( .Actor:Self *Var0 *Var1 *Var2 )
  4AC:  		Add   *Var0  00000014
  4BC:  		Set   *Var1  00000000
  4CC:  		Call  SetAnimation  ( .Actor:Self 00000001 00A20007 )
  4E4:  		Call  SetGoalPos    ( .Actor:Self *Var0 *Var1 *Var2 )
  500:  		Call  RunToGoal     ( .Actor:Self  10` .True )
  518:  		Call  SetAnimation  ( .Actor:Self 00000001 00A20002 )
  530:  		Wait  20`
  53C:  	EndCaseGroup
  544:  EndSwitch
  54C:  Call  UseBattleCamPreset    ( 00000002 )
  55C:  Call  SetAnimation  ( .Actor:Self 00000001 00A20002 )
  574:  Call  SetGoalToHome ( .Actor:Self )
  584:  Call  SetActorSpeed ( .Actor:Self *Fixed[6.0] )
  598:  Call  SetAnimation  ( .Actor:Self 00000001 00A20007 )
  5B0:  Call  RunToGoal     ( .Actor:Self  0` .False )
  5C8:  Call  SetAnimation  ( .Actor:Self 00000001 00A20002 )
  5E0:  Call  EnableIdleScript      ( .Actor:Self 00000001 )
  5F4:  Call  UseIdleAnimation      ( .Actor:Self .True )
  608:  Return
  610:  End
}

#new:Script $Script_NextTurn_8022B06C
{
    0:  Call  UseIdleAnimation  ( .Actor:Self .False )
   14:  Call  EnableIdleScript  ( .Actor:Self 00000000 )
   28:  Call  GetBattlePhase    ( *Var0 )
   38:  Switch  *Var0
   44:  	Case  ==  0000000A
   50:  		Call  GetActorVar   ( .Actor:Self 00000000 *Var0 )
   68:  		If  *Var0  ==  00000000
   78:  			Call  UseBattleCamPreset    ( 00000002 )
   88:  			Call  MoveBattleCamOver (  10` )
   98:  			Call  ActorSpeak        ( 0002002E .Actor:Self 00000001 00A20009 00A20005 ) % To battle!!
   B8:  			Call  SetActorVar       ( .Actor:Self 00000000 00000001 )
   D0:  		EndIf
   D8:  	Case  ==  0000000C
   E4:  		Call  GetStatusFlags    ( .Actor:Self *Var0 )
   F8:  		If  *Var0  &  ~Flags:StatusFlags:Sleep|Paralyze|Dizzy|Stone|Stop % 351000
  108:  			BreakCase
  110:  		EndIf
  118:  		Call  GetActorHP    ( .Actor:Self *Var0 )
  12C:  		Call  GetEnemyMaxHP ( .Actor:Self *Var1 )
  140:  		Div   *Var1  00000002
  150:  		If  *Var0  <=  *Var1
  160:  			Call  UseBattleCamPreset    ( 00000002 )
  170:  			Call  MoveBattleCamOver     (  10` )
  180:  			Call  ActorSpeak    ( 00020031 .Actor:Self 00000001 00A20009 00A20005 ) % You have natural talent.
  1A0:  			BreakCase
  1A8:  		EndIf
  1B0:  		Call  GetPlayerHP   ( *Var0 )
  1C0:  		If  *Var0  <=  00000005
  1D0:  			Call  UseBattleCamPreset    ( 00000002 )
  1E0:  			Call  MoveBattleCamOver     (  10` )
  1F0:  			Call  ActorSpeak    ( 00020032 .Actor:Self 00000001 00A20009 00A20005 ) % Mario, I'm afraid I must finish you.
  210:  			BreakCase
  218:  		EndIf
  220:  EndSwitch
  228:  Call  EnableIdleScript  ( .Actor:Self 00000001 )
  23C:  Call  UseIdleAnimation  ( .Actor:Self .True )
  250:  Return
  258:  End
}

#new:Script $Script_HandleEvent_8022B2CC
{
    0:  ExecWait  $Script_8022A4A4
    C:  Call  GetStatusFlags    ( .Actor:Self *Var0 )
   20:  If  *Var0  &  ~Flags:StatusFlags:Sleep|Paralyze|Dizzy|Stone|Stop % 351000
   30:  	Return
   38:  EndIf
   40:  Call  GetBattleFlags    ( *Var0 )
   50:  If  *Var0  &  00000240
   60:  	Call  GetLastDamage ( .Actor:Self *Var0 )
   74:  	If  *Var0  >  00000000
   84:  		Call  SetActorVar   ( .Actor:Self 00000002 00000001 )
   9C:  		Call  AddActorVar   ( .Actor:Self 00000003 00000001 )
   B4:  	EndIf
   BC:  EndIf
   C4:  Call  GetLastEvent  ( .Actor:Self *Var0 )
   D8:  Switch  *Var0
   E4:  	CaseOR  ==  .Event:Hit % A
   F0:  	CaseOR  ==  .Event:BurnHit % E
   FC:  	CaseOR  ==  .Event:SpinSmashHit % B
  108:  	CaseOR  ==  .Event:Immune % 19
  114:  	CaseOR  ==  .Event:AirLiftFailed % 1F
  120:  		Call  GetActorVar   ( .Actor:Self 00000002 *VarA )
  138:  		Call  GetActorVar   ( .Actor:Self 00000003 *VarB )
  150:  		Call  SetActorVar   ( .Actor:Self 00000002 00000000 )
  168:  		Call  GetStatusFlags    ( .Actor:Self *Var0 )
  17C:  		If  *Var0  &  ~Flags:StatusFlags:Sleep|Paralyze|Poison|Dizzy|Shrink|Stone|Stop % 3F1000
  18C:  			BreakCase
  194:  		EndIf
  19C:  		Set   *Flag[00]  .False
  1AC:  		Call  GetMenuSelection  ( *Var0 *Var1 *Var2 )
  1C4:  		Switch  *Var0
  1D0:  			CaseOR  ==  00000001
  1DC:  			CaseOR  ==  00000000
  1E8:  				Set   *Flag[00]  .True
  1F8:  			EndCaseGroup
  200:  		EndSwitch
  208:  		If  *Flag[00]  ==  .False
  218:  			BreakCase
  220:  		EndIf
  228:  		Call  UseIdleAnimation  ( .Actor:Self .False )
  23C:  		Call  EnableIdleScript  ( .Actor:Self 00000000 )
  250:  		If  *VarA  ==  00000001
  260:  			If  *VarB  >  00000002
  270:  				Call  UseBattleCamPreset    ( 00000002 )
  280:  				Call  MoveBattleCamOver (  10` )
  290:  				Call  ActorSpeak        ( 00020030 .Actor:Self 00000001 00A20009 00A20005 ) % Hm! Excellent move.
  2B0:  				Call  SetActorVar       ( .Actor:Self 00000003 00000000 )
  2C8:  			EndIf
  2D0:  		Else
  2D8:  			Call  UseBattleCamPreset    ( 00000002 )
  2E8:  			Call  MoveBattleCamOver     (  10` )
  2F8:  			Call  ActorSpeak    ( 0002002F .Actor:Self 00000001 00A20009 00A20005 ) % Foolish! That won't work on me.
  318:  		EndIf
  320:  		Call  EnableIdleScript  ( .Actor:Self 00000001 )
  334:  		Call  UseIdleAnimation  ( .Actor:Self .True )
  348:  	EndCaseGroup
  350:  EndSwitch
  358:  Return
  360:  End
}

PADDING: 8022B634 to 8022B640 (00477AC4 to 00477AD0)
00000000 00000000 00000000

#new:IdleAnimations $IdleAnimations_8022B640
{
	.Status:Normal    00A20005
	.Status:Stone     00A20000
	.Status:Sleep     00A2001C
	.Status:Poison    00A20000
	.Status:Stop      00A20000
	.Status:Static    00A20000
	.Status:Paralyze  00A20000
	.Status:Dizzy     00A2001E
	.Status:Dizzy     00A2001E
	.Status:End
}

#new:IdleAnimations $IdleAnimations_8022B68C
{
	.Status:Normal    00A20006
	.Status:Stone     00A20001
	.Status:Sleep     00A2001D
	.Status:Poison    00A20001
	.Status:Stop      00A20001
	.Status:Static    00A20001
	.Status:Paralyze  00A20001
	.Status:Dizzy     00A2001F
	.Status:Dizzy     00A2001F
	.Status:End
}

#new:DefenseTable $DefenseTable_8022B6D8
{
	.Element:Normal 00000000
	.Element:End
}

#new:StatusTable $StatusTable_8022B6E4
{
	.Status:Normal     50`
	.Status:Default    50`
	.Status:Sleep      30`
	.Status:Poison     50`
	.Status:Frozen      0`
	.Status:Dizzy      30`
	.Status:Fear        0`
	.Status:Static      0`
	.Status:Paralyze   30`
	.Status:Shrink     40`
	.Status:Stop       50`
	.Status:DefaultTurnMod    0`
	.Status:SleepTurnMod     -2`
	.Status:PoisonTurnMod     0`
	.Status:FrozenTurnMod     0`
	.Status:DizzyTurnMod     -1`
	.Status:FearTurnMod       0`
	.Status:StaticTurnMod    -1`
	.Status:ParalyzeTurnMod  -1`
	.Status:ShrinkTurnMod    -1`
	.Status:StopTurnMod      -1`
	.Status:End
}

#new:PartsTable $PartsTable_8022B790
{
	00800000 01000000 FB1C00FF $IdleAnimations_8022B640 $DefenseTable_8022B6D8 00000000 00000000 02F90000 00000000
}

#new:Actor $TheMaster2
{
	% stats
	[Index]        7Bb
	[Level]         0`b
	[MaxHP]        75`b
	[Coins]         0`b
	[Flags]       00000000
	[StatusTable] $StatusTable_8022B6E4
	% ai
	[PartsCount]    1`s
	[PartsTable]  $PartsTable_8022B790
	[Script]      $Script_Init_8022B7DC
	% move effectiveness
	[Escape]      100`b
	[Item]          0`b
	[AirLift]       0`b
	[Hurricane]     0`b % Bow's "Spook" as well
	[UpAndAway]     0`b
	[PowerBounce]  75`b
	[SpinSmash]     0`b % weight (0-4)
	% ui positions
	[Size]         30`b  35`b % width height
	[HealthBar]     0`b   0`b % dx dy
	[StatusTurn]  -10`b  30`b % dx dy
	[StatusIcon]   10`b  30`b % dx dy
}

#new:Script $Script_Init_8022B7DC
{
    0:  Call  BindTakeTurn  ( .Actor:Self $Script_TakeTurn_8022CF48 )
   14:  Call  BindIdle      ( .Actor:Self $Script_Idle_8022B8B0 )
   28:  Call  BindHandleEvent   ( .Actor:Self $Script_HandleEvent_8022D634 )
   3C:  Call  BindNextTurn  ( .Actor:Self $Script_NextTurn_8022CFFC )
   50:  Call  SetActorVar   ( .Actor:Self 00000000 00000000 )
   68:  Call  SetActorVar   ( .Actor:Self 00000001 00000000 )
   80:  Call  SetActorVar   ( .Actor:Self 00000002 00000000 )
   98:  Call  SetActorVar   ( .Actor:Self 00000003 00000002 )
   B0:  Call  SetBattleFlagBits ( 00800000 .True )
   C4:  Return
   CC:  End
}

#new:Script $Script_Idle_8022B8B0
{
    0:  Return
    8:  End
}

#new:Script $Script_8022B8C0
{
    0:  Call  UseIdleAnimation  ( .Actor:Self .False )
   14:  Call  EnableIdleScript  ( .Actor:Self 00000000 )
   28:  Call  GetLastEvent      ( .Actor:Self *Var0 )
   3C:  Switch  *Var0
   48:  	CaseOR  ==  .Event:HitCombo % 9
   54:  	CaseOR  ==  .Event:Hit % A
   60:  		SetConst  *Var0  00000001
   70:  		SetConst  *Var1  00A20016
   80:  		ExecWait  DoNormalHit
   8C:  	EndCaseGroup
   94:  	Case  ==  .Event:BurnHit % E
   A0:  		SetConst  *Var0  00000001
   B0:  		SetConst  *Var1  00A2001A
   C0:  		SetConst  *Var2  00A2001B
   D0:  		ExecWait  DoBurnHit
   DC:  	Case  ==  .Event:BurnDeath % 24
   E8:  		SetConst  *Var0  00000001
   F8:  		SetConst  *Var1  00A2001A
  108:  		SetConst  *Var2  00A2001B
  118:  		ExecWait  DoBurnHit
  124:  		SetConst  *Var0  00000001
  134:  		SetConst  *Var1  00A20018
  144:  		ExecWait  DoDeath
  150:  		Return
  158:  	Case  ==  .Event:SpinSmashHit % B
  164:  		SetConst  *Var0  00000001
  174:  		SetConst  *Var1  00A20016
  184:  		ExecWait  DoSpinSmashHit
  190:  	Case  ==  .Event:ShockHit % 2F
  19C:  		SetConst  *Var0  00000001
  1AC:  		SetConst  *Var1  00A20016
  1BC:  		ExecWait  DoShockHit
  1C8:  		SetConst  *Var0  00000001
  1D8:  		SetConst  *Var1  00A20016
  1E8:  		ExecWait  DoJumpBack
  1F4:  		Call  JumpToGoal    ( .Actor:Self  5` .False .True .False )
  214:  		Call  SetAnimationRate      ( .Actor:Self 00000001 *Fixed[2.0] )
  22C:  		Call  SetAnimation  ( .Actor:Self 00000001 00A20008 )
  244:  		Call  SetGoalToHome ( .Actor:Self )
  254:  		Call  SetActorSpeed ( .Actor:Self *Fixed[8.0] )
  268:  		Call  RunToGoal     ( .Actor:Self  0` .False )
  280:  		Call  SetAnimationRate      ( .Actor:Self 00000001 *Fixed[1.0] )
  298:  		Wait  5`
  2A4:  		Call  SetAnimation  ( .Actor:Self 00000001 00A20006 )
  2BC:  		Call  SetActorJumpGravity   ( .Actor:Self *Fixed[1.6] )
  2D0:  		Call  JumpToGoal    ( .Actor:Self  5` .False .True .False )
  2F0:  	CaseOR  ==  00000017 % 17
  2FC:  	CaseOR  ==  .Event:Immune % 19
  308:  	CaseOR  ==  .Event:AirLiftFailed % 1F
  314:  		SetConst  *Var0  00000001
  324:  		SetConst  *Var1  00A20003
  334:  		ExecWait  DoImmune
  340:  	EndCaseGroup
  348:  	Case  ==  .Event:ShockDeath % 26
  354:  		SetConst  *Var0  00000001
  364:  		SetConst  *Var1  00A20016
  374:  		ExecWait  DoShockHit
  380:  		SetConst  *Var0  00000001
  390:  		SetConst  *Var1  00A20018
  3A0:  		ExecWait  DoDeath
  3AC:  		Return
  3B4:  	Case  ==  .Event:Death % 20
  3C0:  		SetConst  *Var0  00000001
  3D0:  		SetConst  *Var1  00A20016
  3E0:  		ExecWait  DoNormalHit
  3EC:  		Wait  10`
  3F8:  		SetConst  *Var0  00000001
  408:  		SetConst  *Var1  00A20018
  418:  		ExecWait  DoDeath
  424:  		Return
  42C:  	Case  ==  .Event:SpinSmashDeath % 21
  438:  		SetConst  *Var0  00000001
  448:  		SetConst  *Var1  00A20016
  458:  		ExecWait  DoSpinSmashHit
  464:  		SetConst  *Var0  00000001
  474:  		SetConst  *Var1  00A20018
  484:  		ExecWait  DoDeath
  490:  		Return
  498:  	Case  ==  .Event:EndFirstStrike % 35
  4A4:  		SetConst  *Var0  00000001
  4B4:  		SetConst  *Var1  00A20003
  4C4:  		ExecWait  DoReturnHome
  4D0:  		Call  HPBarToHome   ( .Actor:Self )
  4E0:  	Case  ==  .Event:RecoverStatus % 31
  4EC:  		SetConst  *Var0  00000001
  4FC:  		SetConst  *Var1  00A20003
  50C:  		ExecWait  DoRecover
  518:  	Case  ==  .Event:ScareAway % 39
  524:  		SetConst  *Var0  00000001
  534:  		SetConst  *Var1  00A20008
  544:  		SetConst  *Var2  00A20016
  554:  		ExecWait  DoScareAway
  560:  		Return
  568:  	Default
  570:  EndSwitch
  578:  Call  EnableIdleScript  ( .Actor:Self 00000001 )
  58C:  Call  UseIdleAnimation  ( .Actor:Self .True )
  5A0:  Return
  5A8:  End
}

#new:Script $Script_SingleStrike2
{
    0:  Call  SetTargetActor    ( .Actor:Self .Actor:Player )
   14:  Call  UseBattleCamPreset    ( 0000003F )
   24:  Call  BattleCamTargetActor  ( .Actor:Self )
   34:  Call  8024ECF8  ( FFFFFFFF 00000001 00000000 )
   4C:  Call  SetAnimation      ( .Actor:Self 00000001 00A20008 )
   64:  Call  SetGoalToTarget   ( .Actor:Self )
   74:  Call  AddGoalPos        ( .Actor:Self  50`  0`  0` )
   90:  Call  SetActorSpeed     ( .Actor:Self *Fixed[3.8] )
   A4:  Call  RunToGoal ( .Actor:Self  0` .False )
   BC:  Call  SetAnimation      ( .Actor:Self 00000001 00A20003 )
   D4:  Wait  10`
   E0:  Call  PlaySoundAtActor  ( .Actor:Self 000020BD )
   F4:  Thread
   FC:  	Wait  15`
  108:  	Call  PlaySoundAtActor  ( .Actor:Self 000020BD )
  11C:  EndThread
  124:  Call  SetAnimation      ( .Actor:Self 00000001 00A2000E )
  13C:  Wait  30`
  148:  Call  SetAnimation      ( .Actor:Self 00000001 00A2000F )
  160:  Call  PlaySoundAtActor  ( .Actor:Self 000020BC )
  174:  Call  PlaySoundAtActor  ( .Actor:Self 000020BB )
  188:  Call  EnemyTestTarget   ( .Actor:Self *VarA ~Flags:DamageType:0 00000000 00000000 00000010 )
  1AC:  Switch  *VarA
  1B8:  	CaseOR  ==  .HitResult:Miss % 6
  1C4:  	CaseOR  ==  .HitResult:Lucky % 5
  1D0:  		Call  UseBattleCamPreset    ( 00000002 )
  1E0:  		Call  EnableActorBlur   ( .Actor:Self 00000001 )
  1F4:  		Call  SetGoalToTarget   ( .Actor:Self )
  204:  		Call  AddGoalPos        ( .Actor:Self  -50`  0`  0` )
  220:  		Call  RunToGoal ( .Actor:Self  10` .False )
  238:  		Call  SetAnimation      ( .Actor:Self 00000001 00A20003 )
  250:  		Call  EnableActorBlur   ( .Actor:Self 00000000 )
  264:  		Wait  10`
  270:  		If  *VarA  ==  .HitResult:Lucky % 5
  280:  			Call  EnemyTestTarget   ( .Actor:Self *Var0 ~Flags:DamageType:TriggerLucky 00000000 00000000 00000000 )
  2A4:  		EndIf
  2AC:  		Call  SetAnimation  ( .Actor:Self 00000001 00A20003 )
  2C4:  		Call  SetGoalToHome ( .Actor:Self )
  2D4:  		Call  SetActorSpeed ( .Actor:Self *Fixed[8.0] )
  2E8:  		Call  SetAnimation  ( .Actor:Self 00000001 00A20008 )
  300:  		Call  RunToGoal     ( .Actor:Self  0` .False )
  318:  		Call  SetAnimation  ( .Actor:Self 00000001 00A20003 )
  330:  		Return
  338:  	EndCaseGroup
  340:  EndSwitch
  348:  Call  EnableActorBlur   ( .Actor:Self 00000001 )
  35C:  Call  SetGoalToTarget   ( .Actor:Self )
  36C:  Call  AddGoalPos        ( .Actor:Self  0`  0`  0` )
  388:  Call  RunToGoal ( .Actor:Self  5` .False )
  3A0:  Call  EnableActorBlur   ( .Actor:Self 00000000 )
  3B4:  Call  PlaySoundAtActor  ( .Actor:Self 000003ED )
  3C8:  Call  PlaySoundAtActor  ( .Actor:Self 000020BB )
  3DC:  Wait  2`
  3E8:  Call  EnemyDamageTarget ( .Actor:Self *Var0 ~Flags:DamageType:0 00000000 00000000 00000008 00000030 )
  410:  Switch  *Var0
  41C:  	CaseOR  ==  .HitResult:Hit % 0
  428:  	CaseOR  ==  .HitResult:QuakeImmune % 2
  434:  		Call  UseBattleCamPreset    ( 00000002 )
  444:  		Call  PlaySoundAtActor      ( .Actor:Self 000020BB )
  458:  		Thread
  460:  			Call  SetActorRotationOffset    ( .Actor:Self 00000000 00000014 00000000 )
  47C:  			Set   *Var0  00000000
  48C:  			Loop  0000000A
  498:  				Add   *Var0  00000024
  4A8:  				Call  SetActorRotation  ( .Actor:Self 00000000 00000000 *Var0 )
  4C4:  				Wait  1`
  4D0:  			EndLoop
  4D8:  		EndThread
  4E0:  		Call  SetGoalToTarget       ( .Actor:Self )
  4F0:  		Call  GetGoalPos    ( .Actor:Self *Var0 *Var1 *Var2 )
  50C:  		Add   *Var0  00000032
  51C:  		Set   *Var1  00000000
  52C:  		Call  SetActorJumpGravity   ( .Actor:Self *Fixed[0.2] )
  540:  		Call  SetAnimation  ( .Actor:Self 00000001 00A20021 )
  558:  		Call  SetGoalPos    ( .Actor:Self *Var0 *Var1 *Var2 )
  574:  		Call  JumpToGoal    ( .Actor:Self  15` .False .True .False )
  594:  		Call  PlaySoundAtActor      ( .Actor:Self 000020BA )
  5A8:  		Call  SetAnimation  ( .Actor:Self 00000001 00A20023 )
  5C0:  		Call  SetActorRotationOffset    ( .Actor:Self 00000000 00000000 00000000 )
  5DC:  		Wait  3`
  5E8:  		Add   *Var0  00000014
  5F8:  		Set   *Var1  00000000
  608:  		Call  SetAnimation  ( .Actor:Self 00000001 00A20021 )
  620:  		Call  SetGoalPos    ( .Actor:Self *Var0 *Var1 *Var2 )
  63C:  		Call  JumpToGoal    ( .Actor:Self  5` .False .True .False )
  65C:  		Call  PlaySoundAtActor      ( .Actor:Self 000003B4 )
  670:  		Call  SetAnimation  ( .Actor:Self 00000001 00A20023 )
  688:  		Wait  20`
  694:  	EndCaseGroup
  69C:  EndSwitch
  6A4:  Call  SetAnimation  ( .Actor:Self 00000001 00A20003 )
  6BC:  Call  SetGoalToHome ( .Actor:Self )
  6CC:  Call  SetActorSpeed ( .Actor:Self *Fixed[3.8] )
  6E0:  Call  SetAnimation  ( .Actor:Self 00000001 00A20008 )
  6F8:  Call  RunToGoal     ( .Actor:Self  0` .False )
  710:  Call  SetAnimation  ( .Actor:Self 00000001 00A20003 )
  728:  Call  EnableIdleScript  ( .Actor:Self 00000001 )
  73C:  Call  UseIdleAnimation  ( .Actor:Self .True )
  750:  Return
  758:  End
}

#new:Script $Script_DoubleStrike2
{
    0:  Call  SetTargetActor    ( .Actor:Self .Actor:Player )
   14:  Call  UseBattleCamPreset    ( 00000008 )
   24:  Call  BattleCamTargetActor  ( .Actor:Self )
   34:  Call  SetBattleCamZoom  (  200` )
   44:  Call  SetBattleCamOffsetZ   (  13` )
   54:  Call  MoveBattleCamOver (  60` )
   64:  Call  SetAnimation      ( .Actor:Self 00000001 00A20015 )
   7C:  Wait  40`
   88:  Call  SetGoalToTarget   ( .Actor:Self )
   98:  Call  UseBattleCamPreset    ( 00000007 )
   A8:  Call  BattleCamTargetActor  ( .Actor:Self )
   B8:  Call  MoveBattleCamOver (  1` )
   C8:  Wait  10`
   D4:  Call  PlaySoundAtActor  ( .Actor:Self 000003B9 )
   E8:  Call  PlaySoundAtActor  ( .Actor:Self 000020BB )
   FC:  Call  EnemyTestTarget   ( .Actor:Self *VarA ~Flags:DamageType:0 00000000 00000000 00000010 )
  120:  Switch  *VarA
  12C:  	CaseOR  ==  .HitResult:Miss % 6
  138:  	CaseOR  ==  .HitResult:Lucky % 5
  144:  		Call  UseBattleCamPreset    ( 00000002 )
  154:  		Call  EnableActorBlur   ( .Actor:Self 00000001 )
  168:  		Call  SetGoalToTarget   ( .Actor:Self )
  178:  		Call  AddGoalPos        ( .Actor:Self  -50`  0`  0` )
  194:  		Call  SetAnimation      ( .Actor:Self 00000001 00A20013 )
  1AC:  		Call  RunToGoal ( .Actor:Self  10` .False )
  1C4:  		Call  SetAnimation      ( .Actor:Self 00000001 00A20003 )
  1DC:  		Call  EnableActorBlur   ( .Actor:Self 00000000 )
  1F0:  		Wait  10`
  1FC:  		If  *VarA  ==  .HitResult:Lucky % 5
  20C:  			Call  EnemyTestTarget   ( .Actor:Self *Var0 ~Flags:DamageType:TriggerLucky 00000000 00000000 00000000 )
  230:  		EndIf
  238:  		Call  SetAnimation  ( .Actor:Self 00000001 00A20003 )
  250:  		Call  SetGoalToHome ( .Actor:Self )
  260:  		Call  SetActorSpeed ( .Actor:Self *Fixed[8.0] )
  274:  		Call  SetAnimation  ( .Actor:Self 00000001 00A20008 )
  28C:  		Call  RunToGoal     ( .Actor:Self  0` .False )
  2A4:  		Call  SetAnimation  ( .Actor:Self 00000001 00A20003 )
  2BC:  		Return
  2C4:  	EndCaseGroup
  2CC:  EndSwitch
  2D4:  Call  EnableActorBlur   ( .Actor:Self 00000001 )
  2E8:  Call  SetGoalToTarget   ( .Actor:Self )
  2F8:  Call  AddGoalPos        ( .Actor:Self  0`  0`  0` )
  314:  Call  SetAnimation      ( .Actor:Self 00000001 00A20013 )
  32C:  Call  RunToGoal ( .Actor:Self  5` .False )
  344:  Call  EnableActorBlur   ( .Actor:Self 00000000 )
  358:  Thread
  360:  	Call  ShakeCam  ( .Cam:Battle 00000000  2` *Fixed[1.0] )
  37C:  	Call  ShakeCam  ( .Cam:Battle 00000000  2` *Fixed[4.0] )
  398:  	Call  ShakeCam  ( .Cam:Battle 00000000  2` *Fixed[3.0] )
  3B4:  	Call  ShakeCam  ( .Cam:Battle 00000000  2` *Fixed[2.0] )
  3D0:  	Call  ShakeCam  ( .Cam:Battle 00000000  2` *Fixed[1.0] )
  3EC:  	Call  ShakeCam  ( .Cam:Battle 00000000  2` *Fixed[0.5] )
  408:  EndThread
  410:  Call  PlaySoundAtActor  ( .Actor:Self 000003ED )
  424:  Call  PlaySoundAtActor  ( .Actor:Self 000020BB )
  438:  Wait  2`
  444:  Call  EnemyDamageTarget ( .Actor:Self *Var0 ~Flags:DamageType:0 00000000 00000000 00000005 00000010 )
  46C:  Wait  15`
  478:  Call  UseBattleCamPreset    ( 00000002 )
  488:  Thread
  490:  	Call  PlaySoundAtActor  ( .Actor:Self .Sound:Jump )
  4A4:  	Call  EnableActorBlur   ( .Actor:Self 00000001 )
  4B8:  	Call  SetAnimation      ( .Actor:Self 00000001 00A20014 )
  4D0:  	Call  SetActorJumpGravity   ( .Actor:Self *Fixed[0.9] )
  4E4:  	Call  JumpToGoal        ( .Actor:Self  25` .False .True .False )
  504:  	Call  EnableActorBlur   ( .Actor:Self 00000000 )
  518:  EndThread
  520:  Thread
  528:  	Call  ShakeCam  ( .Cam:Battle 00000000  2` *Fixed[0.5] )
  544:  	Call  ShakeCam  ( .Cam:Battle 00000000  2` *Fixed[1.5] )
  560:  	Call  ShakeCam  ( .Cam:Battle 00000000  2` *Fixed[0.5] )
  57C:  	Call  ShakeCam  ( .Cam:Battle 00000000  2` *Fixed[0.2] )
  598:  EndThread
  5A0:  Wait  2`
  5AC:  Call  PlaySoundAtActor  ( .Actor:Self 000003ED )
  5C0:  Call  PlaySoundAtActor  ( .Actor:Self 000020BB )
  5D4:  Wait  2`
  5E0:  Call  EnemyDamageTarget ( .Actor:Self *Var0 ~Flags:DamageType:0 00000000 00000000 00000006 00000020 )
  608:  Wait  15`
  614:  Switch  *Var0
  620:  	CaseOR  ==  .HitResult:Hit % 0
  62C:  	CaseOR  ==  .HitResult:QuakeImmune % 2
  638:  		Call  UseBattleCamPreset    ( 00000002 )
  648:  		Call  PlaySoundAtActor      ( .Actor:Self 000020BE )
  65C:  		Call  PlaySoundAtActor      ( .Actor:Self 000020BB )
  670:  		Thread
  678:  			Call  SetActorRotationOffset    ( .Actor:Self 00000000 0000000A 00000000 )
  694:  			Set   *Var0  00000000
  6A4:  			Loop  0000000A
  6B0:  				Add   *Var0  00000024
  6C0:  				Call  SetActorRotation  ( .Actor:Self 00000000 00000000 *Var0 )
  6DC:  				Wait  1`
  6E8:  			EndLoop
  6F0:  		EndThread
  6F8:  		Call  SetGoalToTarget       ( .Actor:Self )
  708:  		Call  GetGoalPos    ( .Actor:Self *Var0 *Var1 *Var2 )
  724:  		Add   *Var0  00000032
  734:  		Set   *Var1  00000000
  744:  		Call  SetActorJumpGravity   ( .Actor:Self *Fixed[0.8] )
  758:  		Call  SetAnimation  ( .Actor:Self 00000001 00A20021 )
  770:  		Call  SetGoalPos    ( .Actor:Self *Var0 *Var1 *Var2 )
  78C:  		Call  JumpToGoal    ( .Actor:Self  30` .False .True .False )
  7AC:  		Call  PlaySoundAtActor      ( .Actor:Self 000020BA )
  7C0:  		Call  SetAnimation  ( .Actor:Self 00000001 00A20023 )
  7D8:  		Call  SetActorRotationOffset    ( .Actor:Self 00000000 00000000 00000000 )
  7F4:  		Wait  3`
  800:  		Add   *Var0  00000014
  810:  		Set   *Var1  00000000
  820:  		Call  SetAnimation  ( .Actor:Self 00000001 00A20021 )
  838:  		Call  SetGoalPos    ( .Actor:Self *Var0 *Var1 *Var2 )
  854:  		Call  JumpToGoal    ( .Actor:Self  10` .False .True .False )
  874:  		Call  PlaySoundAtActor      ( .Actor:Self 000003B4 )
  888:  		Call  SetAnimation  ( .Actor:Self 00000001 00A20023 )
  8A0:  		Wait  20`
  8AC:  	EndCaseGroup
  8B4:  EndSwitch
  8BC:  Call  SetAnimation  ( .Actor:Self 00000001 00A20003 )
  8D4:  Call  SetGoalToHome ( .Actor:Self )
  8E4:  Call  SetActorSpeed ( .Actor:Self *Fixed[3.8] )
  8F8:  Call  SetAnimation  ( .Actor:Self 00000001 00A20008 )
  910:  Call  RunToGoal     ( .Actor:Self  0` .False )
  928:  Call  SetAnimation  ( .Actor:Self 00000001 00A20003 )
  940:  Call  EnableIdleScript  ( .Actor:Self 00000001 )
  954:  Call  UseIdleAnimation  ( .Actor:Self .True )
  968:  Return
  970:  End
}

#new:Script $Script_TakeTurn_8022CF48
{
    0:  Call  UseIdleAnimation  ( .Actor:Self .False )
   14:  Call  EnableIdleScript  ( .Actor:Self 00000000 )
   28:  Call  RandInt   ( 00000064 *Var0 )
   3C:  Switch  *Var0
   48:  	Case  <  00000014
   54:  		ExecWait  $Script_DoubleStrike2
   60:  	Default
   68:  		ExecWait  $Script_SingleStrike2
   74:  EndSwitch
   7C:  Call  EnableIdleScript  ( .Actor:Self 00000001 )
   90:  Call  UseIdleAnimation  ( .Actor:Self .True )
   A4:  Return
   AC:  End
}

#new:Script $Script_NextTurn_8022CFFC
{
    0:  Call  UseIdleAnimation  ( .Actor:Self .False )
   14:  Call  EnableIdleScript  ( .Actor:Self 00000000 )
   28:  Call  GetBattlePhase    ( *Var0 )
   38:  Switch  *Var0
   44:  	Case  ==  0000000A
   50:  		Call  GetActorVar   ( .Actor:Self 00000000 *Var0 )
   68:  		If  *Var0  ==  00000000
   78:  			Call  UseBattleCamPreset    ( 0000000D )
   88:  			Call  BattleCamTargetActor  ( .Actor:Self )
   98:  			Call  SetTargetActor        ( .Actor:Self .Actor:Player )
   AC:  			Wait  10`
   B8:  			Call  ActorSpeak    ( 0002002E .Actor:Self 00000001 00A20009 00A20005 ) % To battle!!
   D8:  			Call  SetActorVar   ( .Actor:Self 00000000 00000001 )
   F0:  			Call  SetAnimation  ( .Actor:Self 00000001 00A2000D )
  108:  			Wait  15`
  114:  			Call  SetAnimation  ( .Actor:Self 00000001 00A2000C )
  12C:  			Wait  5`
  138:  			Call  PlaySoundAtActor      ( .Actor:Self 000020B8 )
  14C:  			Call  GetActorPos   ( .Actor:Self *Var0 *Var1 *Var2 )
  168:  			Add   *Var1  00000014
  178:  			Call  PlayEffect    ( 00000013 00000001 *Var0 *Var1 *Var2 *Fixed[1.0] 0000001E 00000000 00000000 00000000 00000000 00000000 00000000 00000000 )
  1BC:  			Set   *Var0  00000000
  1CC:  			Call  SetAnimation  ( .Actor:Self 00000001 00A20000 )
  1E4:  			Loop  0000000F
  1F0:  				Add   *Var0  00000018
  200:  				Call  SetActorRotation  ( .Actor:Self 00000000 *Var0 00000000 )
  21C:  				Wait  1`
  228:  			EndLoop
  230:  			Set   *Var0  00000000
  240:  			Call  SetAnimation  ( .Actor:Self 00000001 00A20000 )
  258:  			Loop  00000005
  264:  				Add   *Var0  00000012
  274:  				Call  SetActorRotation  ( .Actor:Self 00000000 *Var0 00000000 )
  290:  				Wait  1`
  29C:  			EndLoop
  2A4:  			Call  PlaySoundAtActor  ( .Actor:Self .Sound:SmokeBurst )
  2B8:  			Thread
  2C0:  				Call  GetActorPos   ( .Actor:Self *Var0 *Var1 *Var2 )
  2DC:  				Add   *Var1  00000003
  2EC:  				Loop  00000003
  2F8:  					Call  PlayEffect    ( ~FX:BigSmokePuff *Var0 *Var1 *Var2 00000000 00000000 00000000 00000000 00000000 00000000 00000000 00000000 00000000 00000000 )
  33C:  					Wait  3`
  348:  				EndLoop
  350:  			EndThread
  358:  			Call  SetAnimation  ( .Actor:Self 00000001 00A20000 )
  370:  			Loop  00000005
  37C:  				Add   *Var0  00000024
  38C:  				Call  SetActorRotation  ( .Actor:Self 00000000 *Var0 00000000 )
  3A8:  				Wait  1`
  3B4:  			EndLoop
  3BC:  			Call  SetAnimation  ( .Actor:Self 00000001 00A20001 )
  3D4:  			Loop  00000005
  3E0:  				Add   *Var0  00000012
  3F0:  				Call  SetActorRotation  ( .Actor:Self 00000000 *Var0 00000000 )
  40C:  				Wait  1`
  418:  			EndLoop
  420:  			Wait  15`
  42C:  			Call  SetIdleAnimations ( .Actor:Self 00000001 $IdleAnimations_8022B68C )
  444:  			Call  SetAnimation      ( .Actor:Self 00000001 00A20008 )
  45C:  			Wait  15`
  468:  			Call  UseBattleCamPreset    ( 00000002 )
  478:  			Call  MoveBattleCamOver (  10` )
  488:  			Call  ActorSpeak        ( 00020033 .Actor:Self 00000001 00A2000A 00A20006 ) % Mario, you will fall!
  4A8:  		EndIf
  4B0:  	Case  ==  0000000C
  4BC:  		Call  GetStatusFlags    ( .Actor:Self *Var0 )
  4D0:  		If  *Var0  &  ~Flags:StatusFlags:Sleep|Paralyze|Dizzy|Stone|Stop % 351000
  4E0:  			BreakCase
  4E8:  		EndIf
  4F0:  		Call  GetActorHP    ( .Actor:Self *Var0 )
  504:  		Call  GetEnemyMaxHP ( .Actor:Self *Var1 )
  518:  		Div   *Var1  00000002
  528:  		If  *Var0  <=  *Var1
  538:  			Call  UseBattleCamPreset    ( 00000002 )
  548:  			Call  MoveBattleCamOver     (  10` )
  558:  			Call  ActorSpeak    ( 00020036 .Actor:Self 00000001 00A2000A 00A20006 ) % Don't lose your concentration. I have yet to truly ...
  578:  			BreakCase
  580:  		EndIf
  588:  		Call  GetPlayerHP   ( *Var0 )
  598:  		If  *Var0  <=  00000005
  5A8:  			Call  UseBattleCamPreset    ( 00000002 )
  5B8:  			Call  MoveBattleCamOver     (  10` )
  5C8:  			Call  ActorSpeak    ( 00020037 .Actor:Self 00000001 00A2000A 00A20006 ) % Mario! Is this your best?!
  5E8:  			BreakCase
  5F0:  		EndIf
  5F8:  EndSwitch
  600:  Call  EnableIdleScript  ( .Actor:Self 00000001 )
  614:  Call  UseIdleAnimation  ( .Actor:Self .True )
  628:  Return
  630:  End
}

#new:Script $Script_HandleEvent_8022D634
{
    0:  ExecWait  $Script_8022B8C0
    C:  Call  GetStatusFlags    ( .Actor:Self *Var0 )
   20:  If  *Var0  &  ~Flags:StatusFlags:Sleep|Paralyze|Dizzy|Stone|Stop % 351000
   30:  	Return
   38:  EndIf
   40:  Call  GetBattleFlags    ( *Var0 )
   50:  If  *Var0  &  00000240
   60:  	Call  GetLastDamage ( .Actor:Self *Var0 )
   74:  	If  *Var0  >  00000000
   84:  		Call  SetActorVar   ( .Actor:Self 00000002 00000001 )
   9C:  		Call  AddActorVar   ( .Actor:Self 00000003 00000001 )
   B4:  	EndIf
   BC:  EndIf
   C4:  Call  GetLastEvent  ( .Actor:Self *Var0 )
   D8:  Switch  *Var0
   E4:  	CaseOR  ==  .Event:Hit % A
   F0:  	CaseOR  ==  .Event:BurnHit % E
   FC:  	CaseOR  ==  .Event:SpinSmashHit % B
  108:  	CaseOR  ==  .Event:Immune % 19
  114:  	CaseOR  ==  .Event:AirLiftFailed % 1F
  120:  		Call  GetActorVar   ( .Actor:Self 00000002 *VarA )
  138:  		Call  GetActorVar   ( .Actor:Self 00000003 *VarB )
  150:  		Call  SetActorVar   ( .Actor:Self 00000002 00000000 )
  168:  		Call  GetStatusFlags    ( .Actor:Self *Var0 )
  17C:  		If  *Var0  &  ~Flags:StatusFlags:Sleep|Paralyze|Poison|Dizzy|Shrink|Stone|Stop % 3F1000
  18C:  			BreakCase
  194:  		EndIf
  19C:  		Set   *Flag[00]  .False
  1AC:  		Call  GetMenuSelection  ( *Var0 *Var1 *Var2 )
  1C4:  		Switch  *Var0
  1D0:  			CaseOR  ==  00000001
  1DC:  			CaseOR  ==  00000000
  1E8:  				Set   *Flag[00]  .True
  1F8:  			EndCaseGroup
  200:  		EndSwitch
  208:  		If  *Flag[00]  ==  .False
  218:  			BreakCase
  220:  		EndIf
  228:  		Call  UseIdleAnimation  ( .Actor:Self .False )
  23C:  		Call  EnableIdleScript  ( .Actor:Self 00000000 )
  250:  		If  *VarA  ==  00000001
  260:  			If  *VarB  >  00000002
  270:  				Call  UseBattleCamPreset    ( 00000002 )
  280:  				Call  MoveBattleCamOver (  10` )
  290:  				Call  ActorSpeak        ( 00020035 .Actor:Self 00000001 00A2000A 00A20006 ) % Hm! Nice maneuver.
  2B0:  				Call  SetActorVar       ( .Actor:Self 00000003 00000000 )
  2C8:  			EndIf
  2D0:  		Else
  2D8:  			Call  UseBattleCamPreset    ( 00000002 )
  2E8:  			Call  MoveBattleCamOver     (  10` )
  2F8:  			Call  ActorSpeak    ( 00020034 .Actor:Self 00000001 00A2000A 00A20006 ) % You can't defeat me like that!
  318:  		EndIf
  320:  		Call  EnableIdleScript  ( .Actor:Self 00000001 )
  334:  		Call  UseIdleAnimation  ( .Actor:Self .True )
  348:  	EndCaseGroup
  350:  EndSwitch
  358:  Return
  360:  End
}

PADDING: 8022D99C to 8022D9A0 (00479E2C to 00479E30)
00000000

#new:IdleAnimations $IdleAnimations_8022D9A0
{
	.Status:Normal    00A20005
	.Status:Stone     00A20000
	.Status:Sleep     00A2001C
	.Status:Poison    00A20000
	.Status:Stop      00A20000
	.Status:Static    00A20000
	.Status:Paralyze  00A20000
	.Status:Dizzy     00A2001E
	.Status:Dizzy     00A2001E
	.Status:End
}

#new:IdleAnimations $IdleAnimations_8022D9EC
{
	.Status:Normal    00A20006
	.Status:Stone     00A20001
	.Status:Sleep     00A2001D
	.Status:Poison    00A20001
	.Status:Stop      00A20001
	.Status:Static    00A20001
	.Status:Paralyze  00A20001
	.Status:Dizzy     00A2001F
	.Status:Dizzy     00A2001F
	.Status:End
}

#new:DefenseTable $DefenseTable_8022DA38
{
	.Element:Normal 00000001
	.Element:End
}

#new:StatusTable $StatusTable_8022DA44
{
	.Status:Normal     50`
	.Status:Default    50`
	.Status:Sleep      20`
	.Status:Poison     50`
	.Status:Frozen      0`
	.Status:Dizzy      20`
	.Status:Fear        0`
	.Status:Static      0`
	.Status:Paralyze   20`
	.Status:Shrink     20`
	.Status:Stop       30`
	.Status:DefaultTurnMod    0`
	.Status:SleepTurnMod     -2`
	.Status:PoisonTurnMod     0`
	.Status:FrozenTurnMod     0`
	.Status:DizzyTurnMod     -2`
	.Status:FearTurnMod       0`
	.Status:StaticTurnMod    -2`
	.Status:ParalyzeTurnMod  -1`
	.Status:ShrinkTurnMod    -1`
	.Status:StopTurnMod      -1`
	.Status:End
}

#new:PartsTable $PartsTable_8022DAF0
{
	00800000 01000000 FB1C00FF $IdleAnimations_8022D9A0 $DefenseTable_8022DA38 00000000 00000000 02F90000 00000000
	00120001 02000000 000000FF $IdleAnimations_8022D9A0 $DefenseTable_8022DA38 00000000 00000000 00000000 00000000
}

#new:Actor $TheMaster3
{
	% stats
	[Index]        7Cb
	[Level]         0`b
	[MaxHP]        99`b
	[Coins]         0`b
	[Flags]       00000000
	[StatusTable] $StatusTable_8022DA44
	% ai
	[PartsCount]    2`s
	[PartsTable]  $PartsTable_8022DAF0
	[Script]      $Script_Init_8022DB60
	% move effectiveness
	[Escape]      100`b
	[Item]          0`b
	[AirLift]       0`b
	[Hurricane]     0`b % Bow's "Spook" as well
	[UpAndAway]     0`b
	[PowerBounce]  70`b
	[SpinSmash]     0`b % weight (0-4)
	% ui positions
	[Size]         30`b  35`b % width height
	[HealthBar]     0`b   0`b % dx dy
	[StatusTurn]  -10`b  30`b % dx dy
	[StatusIcon]   10`b  30`b % dx dy
}

#new:Script $Script_Init_8022DB60
{
    0:  Call  BindTakeTurn  ( .Actor:Self $Script_TakeTurn_80230B20 )
   14:  Call  BindIdle      ( .Actor:Self $Script_Idle_8022DC34 )
   28:  Call  BindHandleEvent   ( .Actor:Self $Script_HandleEvent_80231408 )
   3C:  Call  BindNextTurn  ( .Actor:Self $Script_NextTurn_80230D44 )
   50:  Call  SetActorVar   ( .Actor:Self 00000000 00000000 )
   68:  Call  SetActorVar   ( .Actor:Self 00000001 00000000 )
   80:  Call  SetActorVar   ( .Actor:Self 00000002 00000000 )
   98:  Call  SetActorVar   ( .Actor:Self 00000003 00000002 )
   B0:  Call  SetBattleFlagBits ( 00800000 .True )
   C4:  Return
   CC:  End
}

#new:Script $Script_Idle_8022DC34
{
    0:  Return
    8:  End
}

#new:Script $Script_8022DC44
{
    0:  Call  UseIdleAnimation  ( .Actor:Self .False )
   14:  Call  EnableIdleScript  ( .Actor:Self 00000000 )
   28:  Call  GetLastEvent      ( .Actor:Self *Var0 )
   3C:  Switch  *Var0
   48:  	CaseOR  ==  .Event:HitCombo % 9
   54:  	CaseOR  ==  .Event:Hit % A
   60:  		SetConst  *Var0  00000001
   70:  		SetConst  *Var1  00A20016
   80:  		ExecWait  DoNormalHit
   8C:  	EndCaseGroup
   94:  	Case  ==  .Event:BurnHit % E
   A0:  		Call  RemoveActorDecoration ( .Actor:Self 00000001 00000000 )
   B8:  		SetConst  *Var0  00000001
   C8:  		SetConst  *Var1  00A2001A
   D8:  		SetConst  *Var2  00A2001B
   E8:  		ExecWait  DoBurnHit
   F4:  		Call  AddActorDecoration    ( .Actor:Self 00000001 00000000 .Decoration:GoldenFlames )
  110:  		Wait  1`
  11C:  		Call  ModifyActorDecoration ( .Actor:Self 00000001 00000000 00000032 00000032 00000000 00000000 )
  144:  	Case  ==  .Event:BurnDeath % 24
  150:  		Call  RemoveActorDecoration ( .Actor:Self 00000001 00000000 )
  168:  		SetConst  *Var0  00000001
  178:  		SetConst  *Var1  00A2001A
  188:  		SetConst  *Var2  00A2001B
  198:  		ExecWait  DoBurnHit
  1A4:  		SetConst  *Var0  00000001
  1B4:  		SetConst  *Var1  00A20018
  1C4:  		ExecWait  DoDeath
  1D0:  		Return
  1D8:  	Case  ==  .Event:SpinSmashHit % B
  1E4:  		SetConst  *Var0  00000001
  1F4:  		SetConst  *Var1  00A20016
  204:  		ChildThread
  20C:  			Wait  30`
  218:  			Call  RemoveActorDecoration ( .Actor:Self 00000001 00000000 )
  230:  			Wait  10`
  23C:  			Call  AddActorDecoration    ( .Actor:Self 00000001 00000000 .Decoration:GoldenFlames )
  258:  			Wait  1`
  264:  			Call  ModifyActorDecoration ( .Actor:Self 00000001 00000000 00000032 00000032 00000000 00000000 )
  28C:  		EndChildThread
  294:  		ExecWait  DoSpinSmashHit
  2A0:  	Case  ==  .Event:ShockHit % 2F
  2AC:  		SetConst  *Var0  00000001
  2BC:  		SetConst  *Var1  00A20016
  2CC:  		ExecWait  DoShockHit
  2D8:  		SetConst  *Var0  00000001
  2E8:  		SetConst  *Var1  00A20016
  2F8:  		ExecWait  DoJumpBack
  304:  		Call  JumpToGoal    ( .Actor:Self  5` .False .True .False )
  324:  		Call  SetAnimationRate      ( .Actor:Self 00000001 *Fixed[2.0] )
  33C:  		Call  SetAnimation  ( .Actor:Self 00000001 00A20008 )
  354:  		Call  SetGoalToHome ( .Actor:Self )
  364:  		Call  SetActorSpeed ( .Actor:Self *Fixed[8.0] )
  378:  		Call  RunToGoal     ( .Actor:Self  0` .False )
  390:  		Call  SetAnimationRate      ( .Actor:Self 00000001 *Fixed[1.0] )
  3A8:  		Wait  5`
  3B4:  		Call  SetAnimation  ( .Actor:Self 00000001 00A20006 )
  3CC:  		Call  SetActorJumpGravity   ( .Actor:Self *Fixed[1.6] )
  3E0:  		Call  JumpToGoal    ( .Actor:Self  5` .False .True .False )
  400:  	CaseOR  ==  00000017 % 17
  40C:  	CaseOR  ==  .Event:Immune % 19
  418:  	CaseOR  ==  .Event:AirLiftFailed % 1F
  424:  		SetConst  *Var0  00000001
  434:  		SetConst  *Var1  00A20003
  444:  		ExecWait  DoImmune
  450:  	EndCaseGroup
  458:  	Case  ==  .Event:ShockDeath % 26
  464:  		SetConst  *Var0  00000001
  474:  		SetConst  *Var1  00A20016
  484:  		ExecWait  DoShockHit
  490:  		SetConst  *Var0  00000001
  4A0:  		SetConst  *Var1  00A20018
  4B0:  		ExecWait  DoDeath
  4BC:  		Return
  4C4:  	Case  ==  .Event:Death % 20
  4D0:  		SetConst  *Var0  00000001
  4E0:  		SetConst  *Var1  00A20016
  4F0:  		ExecWait  DoNormalHit
  4FC:  		Wait  10`
  508:  		SetConst  *Var0  00000001
  518:  		SetConst  *Var1  00A20018
  528:  		ExecWait  DoDeath
  534:  		Return
  53C:  	Case  ==  .Event:SpinSmashDeath % 21
  548:  		SetConst  *Var0  00000001
  558:  		SetConst  *Var1  00A20016
  568:  		ExecWait  DoSpinSmashHit
  574:  		SetConst  *Var0  00000001
  584:  		SetConst  *Var1  00A20018
  594:  		ExecWait  DoDeath
  5A0:  		Return
  5A8:  	Case  ==  .Event:EndFirstStrike % 35
  5B4:  		SetConst  *Var0  00000001
  5C4:  		SetConst  *Var1  00A20003
  5D4:  		ExecWait  DoReturnHome
  5E0:  		Call  HPBarToHome   ( .Actor:Self )
  5F0:  	Case  ==  .Event:RecoverStatus % 31
  5FC:  		SetConst  *Var0  00000001
  60C:  		SetConst  *Var1  00A20003
  61C:  		ExecWait  DoRecover
  628:  	Case  ==  .Event:ScareAway % 39
  634:  		SetConst  *Var0  00000001
  644:  		SetConst  *Var1  00A20008
  654:  		SetConst  *Var2  00A20016
  664:  		ExecWait  DoScareAway
  670:  		Return
  678:  	Default
  680:  EndSwitch
  688:  Call  EnableIdleScript  ( .Actor:Self 00000001 )
  69C:  Call  UseIdleAnimation  ( .Actor:Self .True )
  6B0:  Return
  6B8:  End
}

#new:Script $Script_SingleStrike3
{
    0:  Call  SetTargetActor    ( .Actor:Self .Actor:Player )
   14:  Call  UseBattleCamPreset    ( 0000003F )
   24:  Call  BattleCamTargetActor  ( .Actor:Self )
   34:  Call  8024ECF8  ( FFFFFFFF 00000001 00000000 )
   4C:  Call  SetAnimation      ( .Actor:Self 00000001 00A20008 )
   64:  Call  SetGoalToTarget   ( .Actor:Self )
   74:  Call  AddGoalPos        ( .Actor:Self  50`  0`  0` )
   90:  Call  SetActorSpeed     ( .Actor:Self *Fixed[3.8] )
   A4:  Call  RunToGoal ( .Actor:Self  0` .False )
   BC:  Call  SetAnimation      ( .Actor:Self 00000001 00A20003 )
   D4:  Wait  10`
   E0:  Call  PlaySoundAtActor  ( .Actor:Self 000020BD )
   F4:  Thread
   FC:  	Wait  15`
  108:  	Call  PlaySoundAtActor  ( .Actor:Self 000020BD )
  11C:  EndThread
  124:  Call  SetAnimation      ( .Actor:Self 00000001 00A2000E )
  13C:  Wait  30`
  148:  Call  SetAnimation      ( .Actor:Self 00000001 00A2000F )
  160:  Call  PlaySoundAtActor  ( .Actor:Self 000020BC )
  174:  Call  PlaySoundAtActor  ( .Actor:Self 000020BB )
  188:  Call  EnemyTestTarget   ( .Actor:Self *VarA ~Flags:DamageType:0 00000000 00000000 00000010 )
  1AC:  Switch  *VarA
  1B8:  	CaseOR  ==  .HitResult:Miss % 6
  1C4:  	CaseOR  ==  .HitResult:Lucky % 5
  1D0:  		Call  UseBattleCamPreset    ( 00000002 )
  1E0:  		Call  EnableActorBlur   ( .Actor:Self 00000001 )
  1F4:  		Call  SetGoalToTarget   ( .Actor:Self )
  204:  		Call  AddGoalPos        ( .Actor:Self  -50`  0`  0` )
  220:  		Call  RunToGoal ( .Actor:Self  10` .False )
  238:  		Call  SetAnimation      ( .Actor:Self 00000001 00A20003 )
  250:  		Call  EnableActorBlur   ( .Actor:Self 00000000 )
  264:  		Wait  10`
  270:  		If  *VarA  ==  .HitResult:Lucky % 5
  280:  			Call  EnemyTestTarget   ( .Actor:Self *Var0 ~Flags:DamageType:TriggerLucky 00000000 00000000 00000000 )
  2A4:  		EndIf
  2AC:  		Call  SetAnimation  ( .Actor:Self 00000001 00A20003 )
  2C4:  		Call  SetGoalToHome ( .Actor:Self )
  2D4:  		Call  SetActorSpeed ( .Actor:Self *Fixed[8.0] )
  2E8:  		Call  SetAnimation  ( .Actor:Self 00000001 00A20008 )
  300:  		Call  RunToGoal     ( .Actor:Self  0` .False )
  318:  		Call  SetAnimation  ( .Actor:Self 00000001 00A20003 )
  330:  		Return
  338:  	EndCaseGroup
  340:  EndSwitch
  348:  Call  EnableActorBlur   ( .Actor:Self 00000001 )
  35C:  Call  SetGoalToTarget   ( .Actor:Self )
  36C:  Call  AddGoalPos        ( .Actor:Self  0`  0`  0` )
  388:  Call  RunToGoal ( .Actor:Self  5` .False )
  3A0:  Call  EnableActorBlur   ( .Actor:Self 00000000 )
  3B4:  Call  PlaySoundAtActor  ( .Actor:Self 000003ED )
  3C8:  Call  PlaySoundAtActor  ( .Actor:Self 000020BB )
  3DC:  Wait  2`
  3E8:  Call  EnemyDamageTarget ( .Actor:Self *Var0 ~Flags:DamageType:0 00000000 00000000 0000000A 00000030 )
  410:  Switch  *Var0
  41C:  	CaseOR  ==  .HitResult:Hit % 0
  428:  	CaseOR  ==  .HitResult:QuakeImmune % 2
  434:  		Call  UseBattleCamPreset    ( 00000002 )
  444:  		Call  PlaySoundAtActor      ( .Actor:Self 000020BB )
  458:  		Thread
  460:  			Call  SetActorRotationOffset    ( .Actor:Self 00000000 00000014 00000000 )
  47C:  			Set   *Var0  00000000
  48C:  			Loop  0000000A
  498:  				Add   *Var0  00000024
  4A8:  				Call  SetActorRotation  ( .Actor:Self 00000000 00000000 *Var0 )
  4C4:  				Wait  1`
  4D0:  			EndLoop
  4D8:  		EndThread
  4E0:  		Call  SetGoalToTarget       ( .Actor:Self )
  4F0:  		Call  GetGoalPos    ( .Actor:Self *Var0 *Var1 *Var2 )
  50C:  		Add   *Var0  00000032
  51C:  		Set   *Var1  00000000
  52C:  		Call  SetActorJumpGravity   ( .Actor:Self *Fixed[0.2] )
  540:  		Call  SetAnimation  ( .Actor:Self 00000001 00A20021 )
  558:  		Call  SetGoalPos    ( .Actor:Self *Var0 *Var1 *Var2 )
  574:  		Call  JumpToGoal    ( .Actor:Self  15` .False .True .False )
  594:  		Call  PlaySoundAtActor      ( .Actor:Self 000020BA )
  5A8:  		Call  SetAnimation  ( .Actor:Self 00000001 00A20023 )
  5C0:  		Call  SetActorRotationOffset    ( .Actor:Self 00000000 00000000 00000000 )
  5DC:  		Wait  3`
  5E8:  		Add   *Var0  00000014
  5F8:  		Set   *Var1  00000000
  608:  		Call  SetAnimation  ( .Actor:Self 00000001 00A20021 )
  620:  		Call  SetGoalPos    ( .Actor:Self *Var0 *Var1 *Var2 )
  63C:  		Call  JumpToGoal    ( .Actor:Self  5` .False .True .False )
  65C:  		Call  PlaySoundAtActor      ( .Actor:Self 000003B4 )
  670:  		Call  SetAnimation  ( .Actor:Self 00000001 00A20023 )
  688:  		Wait  20`
  694:  	EndCaseGroup
  69C:  EndSwitch
  6A4:  Call  SetAnimation  ( .Actor:Self 00000001 00A20003 )
  6BC:  Call  SetGoalToHome ( .Actor:Self )
  6CC:  Call  SetActorSpeed ( .Actor:Self *Fixed[3.8] )
  6E0:  Call  SetAnimation  ( .Actor:Self 00000001 00A20008 )
  6F8:  Call  RunToGoal     ( .Actor:Self  0` .False )
  710:  Call  SetAnimation  ( .Actor:Self 00000001 00A20003 )
  728:  Call  EnableIdleScript  ( .Actor:Self 00000001 )
  73C:  Call  UseIdleAnimation  ( .Actor:Self .True )
  750:  Return
  758:  End
}

#new:Script $Script_DoubleStrike3
{
    0:  Call  SetTargetActor    ( .Actor:Self .Actor:Player )
   14:  Call  UseBattleCamPreset    ( 00000008 )
   24:  Call  BattleCamTargetActor  ( .Actor:Self )
   34:  Call  SetBattleCamZoom  (  200` )
   44:  Call  SetBattleCamOffsetZ   (  13` )
   54:  Call  MoveBattleCamOver (  60` )
   64:  Call  SetAnimation      ( .Actor:Self 00000001 00A20015 )
   7C:  Wait  40`
   88:  Call  SetGoalToTarget   ( .Actor:Self )
   98:  Call  UseBattleCamPreset    ( 00000007 )
   A8:  Call  BattleCamTargetActor  ( .Actor:Self )
   B8:  Call  MoveBattleCamOver (  1` )
   C8:  Wait  10`
   D4:  Call  PlaySoundAtActor  ( .Actor:Self 000003B9 )
   E8:  Call  PlaySoundAtActor  ( .Actor:Self 000020BB )
   FC:  Call  EnemyTestTarget   ( .Actor:Self *VarA ~Flags:DamageType:0 00000000 00000000 00000010 )
  120:  Switch  *VarA
  12C:  	CaseOR  ==  .HitResult:Miss % 6
  138:  	CaseOR  ==  .HitResult:Lucky % 5
  144:  		Call  UseBattleCamPreset    ( 00000002 )
  154:  		Call  EnableActorBlur   ( .Actor:Self 00000001 )
  168:  		Call  SetGoalToTarget   ( .Actor:Self )
  178:  		Call  AddGoalPos        ( .Actor:Self  -50`  0`  0` )
  194:  		Call  SetAnimation      ( .Actor:Self 00000001 00A20013 )
  1AC:  		Call  RunToGoal ( .Actor:Self  10` .False )
  1C4:  		Call  SetAnimation      ( .Actor:Self 00000001 00A20003 )
  1DC:  		Call  EnableActorBlur   ( .Actor:Self 00000000 )
  1F0:  		Wait  10`
  1FC:  		If  *VarA  ==  .HitResult:Lucky % 5
  20C:  			Call  EnemyTestTarget   ( .Actor:Self *Var0 ~Flags:DamageType:TriggerLucky 00000000 00000000 00000000 )
  230:  		EndIf
  238:  		Call  SetAnimation  ( .Actor:Self 00000001 00A20003 )
  250:  		Call  SetGoalToHome ( .Actor:Self )
  260:  		Call  SetActorSpeed ( .Actor:Self *Fixed[8.0] )
  274:  		Call  SetAnimation  ( .Actor:Self 00000001 00A20008 )
  28C:  		Call  RunToGoal     ( .Actor:Self  0` .False )
  2A4:  		Call  SetAnimation  ( .Actor:Self 00000001 00A20003 )
  2BC:  		Return
  2C4:  	EndCaseGroup
  2CC:  EndSwitch
  2D4:  Call  EnableActorBlur   ( .Actor:Self 00000001 )
  2E8:  Call  SetGoalToTarget   ( .Actor:Self )
  2F8:  Call  AddGoalPos        ( .Actor:Self  0`  0`  0` )
  314:  Call  SetAnimation      ( .Actor:Self 00000001 00A20013 )
  32C:  Call  RunToGoal ( .Actor:Self  5` .False )
  344:  Call  EnableActorBlur   ( .Actor:Self 00000000 )
  358:  Thread
  360:  	Call  ShakeCam  ( .Cam:Battle 00000000  2` *Fixed[1.0] )
  37C:  	Call  ShakeCam  ( .Cam:Battle 00000000  2` *Fixed[4.0] )
  398:  	Call  ShakeCam  ( .Cam:Battle 00000000  2` *Fixed[3.0] )
  3B4:  	Call  ShakeCam  ( .Cam:Battle 00000000  2` *Fixed[2.0] )
  3D0:  	Call  ShakeCam  ( .Cam:Battle 00000000  2` *Fixed[1.0] )
  3EC:  	Call  ShakeCam  ( .Cam:Battle 00000000  2` *Fixed[0.5] )
  408:  EndThread
  410:  Call  PlaySoundAtActor  ( .Actor:Self 000003ED )
  424:  Call  PlaySoundAtActor  ( .Actor:Self 000020BB )
  438:  Wait  2`
  444:  Call  EnemyDamageTarget ( .Actor:Self *Var0 ~Flags:DamageType:0 00000000 00000000 00000006 00000010 )
  46C:  Wait  15`
  478:  Call  UseBattleCamPreset    ( 00000002 )
  488:  Thread
  490:  	Call  PlaySoundAtActor  ( .Actor:Self .Sound:Jump )
  4A4:  	Call  EnableActorBlur   ( .Actor:Self 00000001 )
  4B8:  	Call  SetAnimation      ( .Actor:Self 00000001 00A20014 )
  4D0:  	Call  SetActorJumpGravity   ( .Actor:Self *Fixed[0.9] )
  4E4:  	Call  JumpToGoal        ( .Actor:Self  25` .False .True .False )
  504:  	Call  EnableActorBlur   ( .Actor:Self 00000000 )
  518:  EndThread
  520:  Thread
  528:  	Call  ShakeCam  ( .Cam:Battle 00000000  2` *Fixed[0.5] )
  544:  	Call  ShakeCam  ( .Cam:Battle 00000000  2` *Fixed[1.5] )
  560:  	Call  ShakeCam  ( .Cam:Battle 00000000  2` *Fixed[0.5] )
  57C:  	Call  ShakeCam  ( .Cam:Battle 00000000  2` *Fixed[0.2] )
  598:  EndThread
  5A0:  Wait  2`
  5AC:  Call  PlaySoundAtActor  ( .Actor:Self 000003ED )
  5C0:  Call  PlaySoundAtActor  ( .Actor:Self 000020BB )
  5D4:  Wait  2`
  5E0:  Call  EnemyDamageTarget ( .Actor:Self *Var0 ~Flags:DamageType:0 00000000 00000000 00000007 00000020 )
  608:  Wait  15`
  614:  Switch  *Var0
  620:  	CaseOR  ==  .HitResult:Hit % 0
  62C:  	CaseOR  ==  .HitResult:QuakeImmune % 2
  638:  		Call  UseBattleCamPreset    ( 00000002 )
  648:  		Call  PlaySoundAtActor      ( .Actor:Self 000020BE )
  65C:  		Call  PlaySoundAtActor      ( .Actor:Self 000020BB )
  670:  		Thread
  678:  			Call  SetActorRotationOffset    ( .Actor:Self 00000000 0000000A 00000000 )
  694:  			Set   *Var0  00000000
  6A4:  			Loop  0000000A
  6B0:  				Add   *Var0  00000024
  6C0:  				Call  SetActorRotation  ( .Actor:Self 00000000 00000000 *Var0 )
  6DC:  				Wait  1`
  6E8:  			EndLoop
  6F0:  		EndThread
  6F8:  		Call  SetGoalToTarget       ( .Actor:Self )
  708:  		Call  GetGoalPos    ( .Actor:Self *Var0 *Var1 *Var2 )
  724:  		Add   *Var0  00000032
  734:  		Set   *Var1  00000000
  744:  		Call  SetActorJumpGravity   ( .Actor:Self *Fixed[0.8] )
  758:  		Call  SetAnimation  ( .Actor:Self 00000001 00A20021 )
  770:  		Call  SetGoalPos    ( .Actor:Self *Var0 *Var1 *Var2 )
  78C:  		Call  JumpToGoal    ( .Actor:Self  30` .False .True .False )
  7AC:  		Call  PlaySoundAtActor      ( .Actor:Self 000020BA )
  7C0:  		Call  SetAnimation  ( .Actor:Self 00000001 00A20023 )
  7D8:  		Call  SetActorRotationOffset    ( .Actor:Self 00000000 00000000 00000000 )
  7F4:  		Wait  3`
  800:  		Add   *Var0  00000014
  810:  		Set   *Var1  00000000
  820:  		Call  SetAnimation  ( .Actor:Self 00000001 00A20021 )
  838:  		Call  SetGoalPos    ( .Actor:Self *Var0 *Var1 *Var2 )
  854:  		Call  JumpToGoal    ( .Actor:Self  10` .False .True .False )
  874:  		Call  PlaySoundAtActor      ( .Actor:Self 000003B4 )
  888:  		Call  SetAnimation  ( .Actor:Self 00000001 00A20023 )
  8A0:  		Wait  20`
  8AC:  	EndCaseGroup
  8B4:  EndSwitch
  8BC:  Call  SetAnimation  ( .Actor:Self 00000001 00A20003 )
  8D4:  Call  SetGoalToHome ( .Actor:Self )
  8E4:  Call  SetActorSpeed ( .Actor:Self *Fixed[3.8] )
  8F8:  Call  SetAnimation  ( .Actor:Self 00000001 00A20008 )
  910:  Call  RunToGoal     ( .Actor:Self  0` .False )
  928:  Call  SetAnimation  ( .Actor:Self 00000001 00A20003 )
  940:  Call  EnableIdleScript  ( .Actor:Self 00000001 )
  954:  Call  UseIdleAnimation  ( .Actor:Self .True )
  968:  Return
  970:  End
}

#new:Script $Script_TripleStrike3
{
    0:  Call  SetTargetActor    ( .Actor:Self .Actor:Player )
   14:  Call  UseBattleCamPreset    ( 00000008 )
   24:  Call  BattleCamTargetActor  ( .Actor:Self )
   34:  Call  SetBattleCamZoom  (  200` )
   44:  Call  SetBattleCamOffsetZ   (  13` )
   54:  Call  MoveBattleCamOver (  60` )
   64:  Call  SetAnimation      ( .Actor:Self 00000001 00A20015 )
   7C:  Wait  20`
   88:  Call  ActorSpeak        ( 0002003C .Actor:Self 00000001 00A2000A 00A20006 ) % Hyaaahhhh!!! Mario! Survive this if you can!!!!
   A8:  Call  SetGoalToTarget   ( .Actor:Self )
   B8:  Call  UseBattleCamPreset    ( 00000007 )
   C8:  Call  BattleCamTargetActor  ( .Actor:Self )
   D8:  Call  MoveBattleCamOver (  1` )
   E8:  Wait  10`
   F4:  Call  PlaySoundAtActor  ( .Actor:Self 000003B9 )
  108:  Call  PlaySoundAtActor  ( .Actor:Self 000020BB )
  11C:  Call  EnemyTestTarget   ( .Actor:Self *VarA ~Flags:DamageType:0 00000000 00000000 00000010 )
  140:  Switch  *VarA
  14C:  	CaseOR  ==  .HitResult:Miss % 6
  158:  	CaseOR  ==  .HitResult:Lucky % 5
  164:  		Call  UseBattleCamPreset    ( 00000002 )
  174:  		Call  EnableActorBlur   ( .Actor:Self 00000001 )
  188:  		Call  SetGoalToTarget   ( .Actor:Self )
  198:  		Call  AddGoalPos        ( .Actor:Self  -50`  0`  0` )
  1B4:  		Call  SetAnimation      ( .Actor:Self 00000001 00A20013 )
  1CC:  		Call  RunToGoal ( .Actor:Self  10` .False )
  1E4:  		Call  SetAnimation      ( .Actor:Self 00000001 00A20003 )
  1FC:  		Call  EnableActorBlur   ( .Actor:Self 00000000 )
  210:  		Wait  10`
  21C:  		If  *VarA  ==  .HitResult:Lucky % 5
  22C:  			Call  EnemyTestTarget   ( .Actor:Self *Var0 ~Flags:DamageType:TriggerLucky 00000000 00000000 00000000 )
  250:  		EndIf
  258:  		Call  SetAnimation  ( .Actor:Self 00000001 00A20003 )
  270:  		Call  SetGoalToHome ( .Actor:Self )
  280:  		Call  SetActorSpeed ( .Actor:Self *Fixed[8.0] )
  294:  		Call  SetAnimation  ( .Actor:Self 00000001 00A20008 )
  2AC:  		Call  RunToGoal     ( .Actor:Self  0` .False )
  2C4:  		Call  SetAnimation  ( .Actor:Self 00000001 00A20003 )
  2DC:  		Return
  2E4:  	EndCaseGroup
  2EC:  EndSwitch
  2F4:  Call  EnableActorBlur   ( .Actor:Self 00000001 )
  308:  Call  SetGoalToTarget   ( .Actor:Self )
  318:  Call  AddGoalPos        ( .Actor:Self  0`  0`  0` )
  334:  Call  SetAnimation      ( .Actor:Self 00000001 00A20013 )
  34C:  Call  RunToGoal ( .Actor:Self  5` .False )
  364:  Call  EnableActorBlur   ( .Actor:Self 00000000 )
  378:  Thread
  380:  	Call  ShakeCam  ( .Cam:Battle 00000000  2` *Fixed[1.0] )
  39C:  	Call  ShakeCam  ( .Cam:Battle 00000000  2` *Fixed[4.0] )
  3B8:  	Call  ShakeCam  ( .Cam:Battle 00000000  2` *Fixed[3.0] )
  3D4:  	Call  ShakeCam  ( .Cam:Battle 00000000  2` *Fixed[2.0] )
  3F0:  	Call  ShakeCam  ( .Cam:Battle 00000000  2` *Fixed[1.0] )
  40C:  	Call  ShakeCam  ( .Cam:Battle 00000000  2` *Fixed[0.5] )
  428:  EndThread
  430:  Call  PlaySoundAtActor  ( .Actor:Self 000003ED )
  444:  Call  PlaySoundAtActor  ( .Actor:Self 000020BB )
  458:  Wait  2`
  464:  Call  EnemyDamageTarget ( .Actor:Self *Var0 ~Flags:DamageType:0 00000000 00000000 00000005 00000010 )
  48C:  Wait  15`
  498:  Call  UseBattleCamPreset    ( 00000002 )
  4A8:  Thread
  4B0:  	Call  EnableActorBlur   ( .Actor:Self 00000001 )
  4C4:  	Wait  5`
  4D0:  	Call  PlaySoundAtActor  ( .Actor:Self .Sound:Jump )
  4E4:  	Call  SetAnimation      ( .Actor:Self 00000001 00A20014 )
  4FC:  	Call  SetActorJumpGravity   ( .Actor:Self *Fixed[1.5] )
  510:  	Call  JumpToGoal        ( .Actor:Self  25` .False .True .False )
  530:  	Call  EnableActorBlur   ( .Actor:Self 00000000 )
  544:  EndThread
  54C:  Thread
  554:  	Call  ShakeCam  ( .Cam:Battle 00000000  2` *Fixed[0.5] )
  570:  	Call  ShakeCam  ( .Cam:Battle 00000000  2` *Fixed[1.5] )
  58C:  	Call  ShakeCam  ( .Cam:Battle 00000000  2` *Fixed[0.5] )
  5A8:  	Call  ShakeCam  ( .Cam:Battle 00000000  2` *Fixed[0.2] )
  5C4:  EndThread
  5CC:  Wait  2`
  5D8:  Call  PlaySoundAtActor  ( .Actor:Self 000003ED )
  5EC:  Call  PlaySoundAtActor  ( .Actor:Self 000020BB )
  600:  Wait  2`
  60C:  Call  EnemyDamageTarget ( .Actor:Self *Var0 ~Flags:DamageType:0 00000000 00000000 00000006 00000000 )
  634:  Thread
  63C:  	Wait  5`
  648:  	Call  EnablePlayerBlur  ( 00000001 )
  658:  	Call  SetActorJumpGravity   ( .Actor:Player *Fixed[0.3] )
  66C:  	Call  GetActorPos       ( .Actor:Player *Var0 *Var1 *Var2 )
  688:  	Call  SetJumpAnimations ( .Actor:Player 00000000 00010017 00010017 00010017 )
  6A8:  	Call  SetGoalPos        ( .Actor:Player *Var0 *Var1 *Var2 )
  6C4:  	Call  80273444  ( 00000032 00000000 00000000 )
  6DC:  	Call  EnablePlayerBlur  ( 00000000 )
  6EC:  EndThread
  6F4:  Wait  15`
  700:  Call  SetGoalToTarget   ( .Actor:Self )
  710:  Call  GetGoalPos        ( .Actor:Self *Var0 *Var1 *Var2 )
  72C:  Add   *Var0  00000032
  73C:  Set   *Var1  00000000
  74C:  Call  SetActorJumpGravity       ( .Actor:Self *Fixed[0.8] )
  760:  Call  SetAnimation      ( .Actor:Self 00000001 00A20021 )
  778:  Call  SetGoalPos        ( .Actor:Self *Var0 *Var1 *Var2 )
  794:  Call  JumpToGoal        ( .Actor:Self  30` .False .True .False )
  7B4:  Call  PlaySoundAtActor  ( .Actor:Self 000020BA )
  7C8:  Call  SetAnimation      ( .Actor:Self 00000001 00A20023 )
  7E0:  Call  SetActorRotationOffset    ( .Actor:Self 00000000 00000000 00000000 )
  7FC:  Wait  3`
  808:  Add   *Var0  00000014
  818:  Set   *Var1  00000000
  828:  Thread
  830:  	Wait  5`
  83C:  	Call  PlaySoundAtActor  ( .Actor:Self 000020BD )
  850:  	Wait  10`
  85C:  	Call  PlaySoundAtActor  ( .Actor:Self 000020BD )
  870:  EndThread
  878:  Call  SetAnimation  ( .Actor:Self 00000001 00A2000E )
  890:  Call  SetGoalPos    ( .Actor:Self *Var0 *Var1 *Var2 )
  8AC:  Call  JumpToGoal    ( .Actor:Self  10` .False .True .False )
  8CC:  Call  PlaySoundAtActor  ( .Actor:Self 000003B4 )
  8E0:  Wait  10`
  8EC:  Call  SetAnimation  ( .Actor:Self 00000001 00A2000F )
  904:  Call  EnableActorBlur   ( .Actor:Self 00000001 )
  918:  Call  SetGoalToTarget   ( .Actor:Self )
  928:  Call  AddGoalPos    ( .Actor:Self  0`  0`  0` )
  944:  Call  RunToGoal     ( .Actor:Self  3` .False )
  95C:  Call  EnableActorBlur   ( .Actor:Self 00000000 )
  970:  Thread
  978:  	Call  ShakeCam  ( .Cam:Battle 00000000  2` *Fixed[1.0] )
  994:  	Call  ShakeCam  ( .Cam:Battle 00000000  2` *Fixed[3.0] )
  9B0:  	Call  ShakeCam  ( .Cam:Battle 00000000  2` *Fixed[6.0] )
  9CC:  	Call  ShakeCam  ( .Cam:Battle 00000000  2` *Fixed[5.0] )
  9E8:  	Call  ShakeCam  ( .Cam:Battle 00000000  2` *Fixed[4.0] )
  A04:  	Call  ShakeCam  ( .Cam:Battle 00000000  2` *Fixed[3.0] )
  A20:  	Call  ShakeCam  ( .Cam:Battle 00000000  2` *Fixed[2.0] )
  A3C:  	Call  ShakeCam  ( .Cam:Battle 00000000  2` *Fixed[1.0] )
  A58:  	Call  ShakeCam  ( .Cam:Battle 00000000  2` *Fixed[0.5] )
  A74:  	Call  ShakeCam  ( .Cam:Battle 00000000  2` *Fixed[0.2] )
  A90:  EndThread
  A98:  Call  PlaySoundAtActor  ( .Actor:Self 000003EE )
  AAC:  Call  PlaySoundAtActor  ( .Actor:Self 000020BB )
  AC0:  Wait  2`
  ACC:  Call  EnemyDamageTarget ( .Actor:Self *Var0 ~Flags:DamageType:0 00000000 00000000 00000007 00000020 )
  AF4:  Wait  15`
  B00:  Switch  *Var0
  B0C:  	CaseOR  ==  .HitResult:Hit % 0
  B18:  	CaseOR  ==  .HitResult:QuakeImmune % 2
  B24:  		Call  UseBattleCamPreset    ( 00000002 )
  B34:  		Call  PlaySoundAtActor      ( .Actor:Self 000020BE )
  B48:  		Call  PlaySoundAtActor      ( .Actor:Self 000020BB )
  B5C:  		Thread
  B64:  			Call  SetActorRotationOffset    ( .Actor:Self 00000000 0000000A 00000000 )
  B80:  			Set   *Var0  00000000
  B90:  			Loop  0000000A
  B9C:  				Add   *Var0  00000024
  BAC:  				Call  SetActorRotation  ( .Actor:Self 00000000 00000000 *Var0 )
  BC8:  				Wait  1`
  BD4:  			EndLoop
  BDC:  		EndThread
  BE4:  		Call  SetGoalToTarget       ( .Actor:Self )
  BF4:  		Call  GetGoalPos    ( .Actor:Self *Var0 *Var1 *Var2 )
  C10:  		Add   *Var0  00000032
  C20:  		Set   *Var1  00000000
  C30:  		Call  SetActorJumpGravity   ( .Actor:Self *Fixed[0.8] )
  C44:  		Call  SetAnimation  ( .Actor:Self 00000001 00A20021 )
  C5C:  		Call  SetGoalPos    ( .Actor:Self *Var0 *Var1 *Var2 )
  C78:  		Call  JumpToGoal    ( .Actor:Self  30` .False .True .False )
  C98:  		Call  PlaySoundAtActor      ( .Actor:Self 000020BA )
  CAC:  		Call  SetAnimation  ( .Actor:Self 00000001 00A20023 )
  CC4:  		Call  SetActorRotationOffset    ( .Actor:Self 00000000 00000000 00000000 )
  CE0:  		Wait  3`
  CEC:  		Add   *Var0  00000014
  CFC:  		Set   *Var1  00000000
  D0C:  		Call  SetAnimation  ( .Actor:Self 00000001 00A20021 )
  D24:  		Call  SetGoalPos    ( .Actor:Self *Var0 *Var1 *Var2 )
  D40:  		Call  JumpToGoal    ( .Actor:Self  10` .False .True .False )
  D60:  		Call  PlaySoundAtActor      ( .Actor:Self 000003B4 )
  D74:  		Call  SetAnimation  ( .Actor:Self 00000001 00A20023 )
  D8C:  		Wait  20`
  D98:  	EndCaseGroup
  DA0:  EndSwitch
  DA8:  Call  SetAnimation  ( .Actor:Self 00000001 00A20003 )
  DC0:  Call  SetGoalToHome ( .Actor:Self )
  DD0:  Call  SetActorSpeed ( .Actor:Self *Fixed[3.8] )
  DE4:  Call  SetAnimation  ( .Actor:Self 00000001 00A20008 )
  DFC:  Call  RunToGoal     ( .Actor:Self  0` .False )
  E14:  Call  SetAnimation  ( .Actor:Self 00000001 00A20003 )
  E2C:  Call  EnableIdleScript  ( .Actor:Self 00000001 )
  E40:  Call  UseIdleAnimation  ( .Actor:Self .True )
  E54:  Return
  E5C:  End
}

#new:Script $Script_80230240
{
    0:  Call  UseBattleCamPreset    ( 00000008 )
   10:  Call  BattleCamTargetActor  ( .Actor:Self )
   20:  Call  SetBattleCamZoom  (  200` )
   30:  Call  SetBattleCamOffsetZ   (  13` )
   40:  Call  MoveBattleCamOver (  60` )
   50:  Call  SetAnimation  ( .Actor:Self 00000001 00A20015 )
   68:  Wait  20`
   74:  Wait  10`
   80:  Call  SetAnimation  ( .Actor:Self 00000001 00A20013 )
   98:  Wait  15`
   A4:  Call  SetAnimation  ( .Actor:Self 00000001 00A20015 )
   BC:  Wait  15`
   C8:  Call  SetAnimation  ( .Actor:Self 00000001 00A2000E )
   E0:  Wait  15`
   EC:  Call  SetAnimation  ( .Actor:Self 00000001 00A20015 )
  104:  Wait  15`
  110:  Call  EnableActorBlur   ( .Actor:Self 00000001 )
  124:  Call  GetActorPos   ( .Actor:Self *Var0 *Var1 *Var2 )
  140:  Add   *Var1  00000032
  150:  Call  SetAnimation  ( .Actor:Self 00000001 00A20003 )
  168:  Call  SetGoalPos    ( .Actor:Self *Var0 *Var1 *Var2 )
  184:  Call  FlyToGoal     ( .Actor:Self  90`  0` .Easing:CosInOut )
  1A0:  Call  EnableActorBlur   ( .Actor:Self 00000000 )
  1B4:  Call  GetActorPos   ( .Actor:Self *Var0 *Var1 *Var2 )
  1D0:  Call  ForceHomePos  ( .Actor:Self *Var0 *Var1 *Var2 )
  1EC:  Call  HPBarToHome   ( .Actor:Self )
  1FC:  Call  SetActorFlagBits  ( .Actor:Self 00000200 .True )
  214:  Call  SetActorVar   ( .Actor:Self 00000001 00000001 )
  22C:  Call  UseBattleCamPreset    ( 00000002 )
  23C:  Call  MoveBattleCamOver (  30` )
  24C:  Wait  30`
  258:  Set   *Var0  00000050
  268:  Loop  00000005
  274:  	Add   *Var0  00000014
  284:  	Call  ModifyActorDecoration ( .Actor:Self 00000001 00000000 00000050 *Var0 00000000 00000000 )
  2AC:  	Wait  1`
  2B8:  EndLoop
  2C0:  Loop  00000005
  2CC:  	Sub   *Var0  00000014
  2DC:  	Call  ModifyActorDecoration ( .Actor:Self 00000001 00000000 00000050 *Var0 00000000 00000000 )
  304:  	Wait  1`
  310:  EndLoop
  318:  Wait  10`
  324:  Call  EnableIdleScript  ( .Actor:Self 00000001 )
  338:  Call  UseIdleAnimation  ( .Actor:Self .True )
  34C:  Return
  354:  End
}

#new:Script $Script_8023059C
{
    0:  Call  SetTargetActor        ( .Actor:Self .Actor:Player )
   14:  Call  UseBattleCamPreset    ( 00000008 )
   24:  Call  BattleCamTargetActor  ( .Actor:Self )
   34:  Call  SetBattleCamZoom      (  200` )
   44:  Call  SetBattleCamOffsetZ   (  13` )
   54:  Call  MoveBattleCamOver     (  60` )
   64:  Call  SetAnimation  ( .Actor:Self 00000001 00A20015 )
   7C:  Set   *Var0  00000050
   8C:  Loop  0000001E
   98:  	Add   *Var0  00000002
   A8:  	Call  ModifyActorDecoration ( .Actor:Self 00000001 00000000 00000050 *Var0 00000000 00000000 )
   D0:  	Wait  1`
   DC:  EndLoop
   E4:  Call  UseBattleCamPreset    ( 00000002 )
   F4:  Wait  10`
  100:  Call  SetAnimation  ( .Actor:Self 00000001 00A2000E )
  118:  Thread
  120:  	Set   *Var0  0000008C
  130:  	Loop  0000001E
  13C:  		Sub   *Var0  00000002
  14C:  		Call  ModifyActorDecoration ( .Actor:Self 00000001 00000000 00000050 *Var0 00000000 00000000 )
  174:  		Wait  1`
  180:  	EndLoop
  188:  EndThread
  190:  Call  AddActorDecoration    ( .Actor:Self 00000002 00000000 .Decoration:GoldenFlames )
  1AC:  Wait  1`
  1B8:  Call  ModifyActorDecoration ( .Actor:Self 00000002 00000000 00000028 00000028 00000000 00000000 )
  1E0:  Call  SetPartFlagBits   ( .Actor:Self 00000002 00000001 .False )
  1FC:  Call  GetActorPos       ( .Actor:Self *Var0 *Var1 *Var2 )
  218:  Call  SetPartPos        ( .Actor:Self 00000002 *Var0 *Var1 *Var2 )
  238:  Call  SetPartAlpha      ( .Actor:Self 00000002 00000050 )
  250:  Call  SetGoalToTarget   ( .Actor:Self )
  260:  Call  GetGoalPos        ( .Actor:Self *Var0 *Var1 *Var2 )
  27C:  Call  SetPartJumpGravity    ( .Actor:Self 00000002 *Fixed[0.1] )
  294:  Call  JumpPartTo        ( .Actor:Self 00000002 *Var0 *Var1 *Var2  10` .True )
  2BC:  Call  SetPartFlagBits   ( .Actor:Self 00000002 00000001 .True )
  2D8:  Wait  2`
  2E4:  Call  EnemyDamageTarget ( .Actor:Self *Var0 ~Flags:DamageType:0 00000000 00000000 0000000A 00000010 )
  30C:  Switch  *Var0
  318:  	CaseOR  ==  .HitResult:Hit % 0
  324:  	CaseOR  ==  .HitResult:QuakeImmune % 2
  330:  	EndCaseGroup
  338:  EndSwitch
  340:  Call  EnableIdleScript  ( .Actor:Self 00000001 )
  354:  Call  UseIdleAnimation  ( .Actor:Self .True )
  368:  Return
  370:  End
}

#new:Script $Script_80230914
{
    0:  Call  SetTargetActor        ( .Actor:Self .Actor:Player )
   14:  Call  UseBattleCamPreset    ( 00000008 )
   24:  Call  BattleCamTargetActor  ( .Actor:Self )
   34:  Call  SetBattleCamZoom      (  200` )
   44:  Call  SetBattleCamOffsetZ   (  13` )
   54:  Call  MoveBattleCamOver     (  60` )
   64:  Call  SetAnimation  ( .Actor:Self 00000001 00A20015 )
   7C:  Set   *Var0  00000050
   8C:  Loop  0000001E
   98:  	Add   *Var0  00000002
   A8:  	Call  ModifyActorDecoration ( .Actor:Self 00000001 00000000 00000050 *Var0 00000000 00000000 )
   D0:  	Wait  1`
   DC:  EndLoop
   E4:  Call  SetAnimation  ( .Actor:Self 00000001 00A20003 )
   FC:  Call  SetGoalToTarget   ( .Actor:Self )
  10C:  Call  GetGoalPos    ( .Actor:Self *Var0 *Var1 *Var2 )
  128:  Call  SetGoalPos    ( .Actor:Self *Var0 *Var1 *Var2 )
  144:  Call  FlyToGoal     ( .Actor:Self  30`  0` .Easing:Linear )
  160:  Wait  00002710
  16C:  Wait  2`
  178:  Call  EnemyDamageTarget ( .Actor:Self *Var0 ~Flags:DamageType:0 00000000 00000000 0000000A 00000010 )
  1A0:  Switch  *Var0
  1AC:  	CaseOR  ==  .HitResult:Hit % 0
  1B8:  	CaseOR  ==  .HitResult:QuakeImmune % 2
  1C4:  	EndCaseGroup
  1CC:  EndSwitch
  1D4:  Call  EnableIdleScript  ( .Actor:Self 00000001 )
  1E8:  Call  UseIdleAnimation  ( .Actor:Self .True )
  1FC:  Return
  204:  End
}

#new:Script $Script_TakeTurn_80230B20
{
    0:  Call  UseIdleAnimation  ( .Actor:Self .False )
   14:  Call  EnableIdleScript  ( .Actor:Self 00000000 )
   28:  Call  GetActorVar       ( .Actor:Self 00000001 *Var0 )
   40:  If  *Var0  ==  00000000
   50:  	Call  GetActorHP    ( .Actor:Self *Var0 )
   64:  	If  *Var0  <  00000000
   74:  		ExecWait  $Script_80230240
   80:  	Else
   88:  		Call  GetActorHP    ( .Actor:Player *Var0 )
   9C:  		If  *Var0  >  00000014
   AC:  			Call  RandInt   ( 00000064 *Var0 )
   C0:  			Switch  *Var0
   CC:  				Case  <  0000001E
   D8:  					ExecWait  $Script_TripleStrike3
   E4:  				Case  <  00000032
   F0:  					ExecWait  $Script_DoubleStrike3
   FC:  				Default
  104:  					ExecWait  $Script_SingleStrike3
  110:  			EndSwitch
  118:  		Else
  120:  			Call  RandInt   ( 00000064 *Var0 )
  134:  			Switch  *Var0
  140:  				Case  <  00000032
  14C:  					ExecWait  $Script_DoubleStrike3
  158:  				Default
  160:  					ExecWait  $Script_SingleStrike3
  16C:  			EndSwitch
  174:  		EndIf
  17C:  	EndIf
  184:  Else
  18C:  	Call  RandInt   ( 00000064 *Var0 )
  1A0:  	Switch  *Var0
  1AC:  		Case  <  00000064
  1B8:  			ExecWait  $Script_80230914
  1C4:  		Case  <  00000032
  1D0:  			ExecWait  $Script_8023059C
  1DC:  	EndSwitch
  1E4:  EndIf
  1EC:  Call  EnableIdleScript  ( .Actor:Self 00000001 )
  200:  Call  UseIdleAnimation  ( .Actor:Self .True )
  214:  Return
  21C:  End
}

#new:Script $Script_NextTurn_80230D44
{
    0:  Call  UseIdleAnimation  ( .Actor:Self .False )
   14:  Call  EnableIdleScript  ( .Actor:Self 00000000 )
   28:  Call  GetBattlePhase    ( *Var0 )
   38:  Switch  *Var0
   44:  	Case  ==  0000000A
   50:  		Call  GetActorVar   ( .Actor:Self 00000000 *Var0 )
   68:  		If  *Var0  ==  00000000
   78:  			Call  UseBattleCamPreset    ( 0000000D )
   88:  			Call  BattleCamTargetActor  ( .Actor:Self )
   98:  			Call  SetTargetActor        ( .Actor:Self .Actor:Player )
   AC:  			Wait  10`
   B8:  			Call  ActorSpeak    ( 0002002E .Actor:Self 00000001 00A20009 00A20005 ) % To battle!!
   D8:  			Call  SetActorVar   ( .Actor:Self 00000000 00000001 )
   F0:  			Call  SetAnimation  ( .Actor:Self 00000001 00A2000D )
  108:  			Wait  15`
  114:  			Call  SetAnimation  ( .Actor:Self 00000001 00A2000C )
  12C:  			Wait  5`
  138:  			Call  PlaySoundAtActor      ( .Actor:Self 000020B8 )
  14C:  			Call  GetActorPos   ( .Actor:Self *Var0 *Var1 *Var2 )
  168:  			Add   *Var1  00000014
  178:  			Call  PlayEffect    ( 00000013 00000001 *Var0 *Var1 *Var2 *Fixed[1.0] 0000001E 00000000 00000000 00000000 00000000 00000000 00000000 00000000 )
  1BC:  			Set   *Var0  00000000
  1CC:  			Call  SetAnimation  ( .Actor:Self 00000001 00A20000 )
  1E4:  			Loop  0000000F
  1F0:  				Add   *Var0  00000018
  200:  				Call  SetActorRotation  ( .Actor:Self 00000000 *Var0 00000000 )
  21C:  				Wait  1`
  228:  			EndLoop
  230:  			Set   *Var0  00000000
  240:  			Call  SetAnimation  ( .Actor:Self 00000001 00A20000 )
  258:  			Loop  00000005
  264:  				Add   *Var0  00000012
  274:  				Call  SetActorRotation  ( .Actor:Self 00000000 *Var0 00000000 )
  290:  				Wait  1`
  29C:  			EndLoop
  2A4:  			Call  PlaySoundAtActor  ( .Actor:Self .Sound:SmokeBurst )
  2B8:  			Thread
  2C0:  				Call  GetActorPos   ( .Actor:Self *Var0 *Var1 *Var2 )
  2DC:  				Add   *Var1  00000003
  2EC:  				Loop  00000003
  2F8:  					Call  PlayEffect    ( ~FX:BigSmokePuff *Var0 *Var1 *Var2 00000000 00000000 00000000 00000000 00000000 00000000 00000000 00000000 00000000 00000000 )
  33C:  					Wait  3`
  348:  				EndLoop
  350:  			EndThread
  358:  			Call  SetAnimation  ( .Actor:Self 00000001 00A20000 )
  370:  			Loop  00000005
  37C:  				Add   *Var0  00000024
  38C:  				Call  SetActorRotation  ( .Actor:Self 00000000 *Var0 00000000 )
  3A8:  				Wait  1`
  3B4:  			EndLoop
  3BC:  			Call  SetAnimation  ( .Actor:Self 00000001 00A20001 )
  3D4:  			Loop  00000005
  3E0:  				Add   *Var0  00000012
  3F0:  				Call  SetActorRotation  ( .Actor:Self 00000000 *Var0 00000000 )
  40C:  				Wait  1`
  418:  			EndLoop
  420:  			Wait  15`
  42C:  			Call  SetIdleAnimations ( .Actor:Self 00000001 $IdleAnimations_8022D9EC )
  444:  			Call  SetAnimation      ( .Actor:Self 00000001 00A20008 )
  45C:  			Call  SetAnimation      ( .Actor:Self 00000001 00A20014 )
  474:  			Wait  2`
  480:  			Call  AddActorDecoration    ( .Actor:Self 00000001 00000000 .Decoration:GoldenFlames )
  49C:  			Wait  1`
  4A8:  			Call  ModifyActorDecoration ( .Actor:Self 00000001 00000000 00000032 00000032 00000000 00000000 )
  4D0:  			Wait  15`
  4DC:  			Call  SetAnimation      ( .Actor:Self 00000001 00A20003 )
  4F4:  			Call  UseBattleCamPreset    ( 00000002 )
  504:  			Call  MoveBattleCamOver (  10` )
  514:  			Call  ActorSpeak        ( 00020038 .Actor:Self 00000001 00A2000A 00A20006 ) % Kwaaaaa! Behold my fury, Mario!!
  534:  		EndIf
  53C:  	Case  ==  0000000C
  548:  		Call  GetStatusFlags    ( .Actor:Self *Var0 )
  55C:  		If  *Var0  &  ~Flags:StatusFlags:Sleep|Paralyze|Dizzy|Stone|Stop % 351000
  56C:  			BreakCase
  574:  		EndIf
  57C:  		Call  GetActorHP    ( .Actor:Self *Var0 )
  590:  		Call  GetEnemyMaxHP ( .Actor:Self *Var1 )
  5A4:  		Div   *Var1  00000002
  5B4:  		If  *Var0  <=  *Var1
  5C4:  			Call  UseBattleCamPreset    ( 00000002 )
  5D4:  			Call  MoveBattleCamOver     (  10` )
  5E4:  			Call  ActorSpeak    ( 0002003B .Actor:Self 00000001 00A2000A 00A20006 ) % Now...it is time I stopped being so merciful.
  604:  			BreakCase
  60C:  		EndIf
  614:  		Call  GetPlayerHP   ( *Var0 )
  624:  		If  *Var0  <=  0000000A
  634:  			Call  UseBattleCamPreset    ( 00000002 )
  644:  			Call  MoveBattleCamOver     (  10` )
  654:  			Call  ActorSpeak    ( 0002003D .Actor:Self 00000001 00A2000A 00A20006 ) % You underestimate me, Mario! Did you really think  ...
  674:  			BreakCase
  67C:  		EndIf
  684:  EndSwitch
  68C:  Call  EnableIdleScript  ( .Actor:Self 00000001 )
  6A0:  Call  UseIdleAnimation  ( .Actor:Self .True )
  6B4:  Return
  6BC:  End
}

#new:Script $Script_HandleEvent_80231408
{
    0:  ExecWait  $Script_8022DC44
    C:  Call  GetStatusFlags    ( .Actor:Self *Var0 )
   20:  If  *Var0  &  ~Flags:StatusFlags:Sleep|Paralyze|Dizzy|Stone|Stop % 351000
   30:  	Return
   38:  EndIf
   40:  Call  GetBattleFlags    ( *Var0 )
   50:  If  *Var0  &  00000240
   60:  	Call  GetLastDamage ( .Actor:Self *Var0 )
   74:  	If  *Var0  >  00000000
   84:  		Call  SetActorVar   ( .Actor:Self 00000002 00000001 )
   9C:  		Call  AddActorVar   ( .Actor:Self 00000003 00000001 )
   B4:  	EndIf
   BC:  EndIf
   C4:  Call  GetLastEvent  ( .Actor:Self *Var0 )
   D8:  Switch  *Var0
   E4:  	CaseOR  ==  .Event:Hit % A
   F0:  	CaseOR  ==  .Event:BurnHit % E
   FC:  	CaseOR  ==  .Event:SpinSmashHit % B
  108:  	CaseOR  ==  .Event:Immune % 19
  114:  	CaseOR  ==  .Event:AirLiftFailed % 1F
  120:  		Call  GetActorVar   ( .Actor:Self 00000002 *VarA )
  138:  		Call  GetActorVar   ( .Actor:Self 00000003 *VarB )
  150:  		Call  SetActorVar   ( .Actor:Self 00000002 00000000 )
  168:  		Call  GetStatusFlags    ( .Actor:Self *Var0 )
  17C:  		If  *Var0  &  ~Flags:StatusFlags:Sleep|Paralyze|Poison|Dizzy|Shrink|Stone|Stop % 3F1000
  18C:  			BreakCase
  194:  		EndIf
  19C:  		Set   *Flag[00]  .False
  1AC:  		Call  GetMenuSelection  ( *Var0 *Var1 *Var2 )
  1C4:  		Switch  *Var0
  1D0:  			CaseOR  ==  00000001
  1DC:  			CaseOR  ==  00000000
  1E8:  				Set   *Flag[00]  .True
  1F8:  			EndCaseGroup
  200:  		EndSwitch
  208:  		If  *Flag[00]  ==  .False
  218:  			BreakCase
  220:  		EndIf
  228:  		Call  UseIdleAnimation  ( .Actor:Self .False )
  23C:  		Call  EnableIdleScript  ( .Actor:Self 00000000 )
  250:  		If  *VarA  ==  00000001
  260:  			If  *VarB  >  00000002
  270:  				Call  UseBattleCamPreset    ( 00000002 )
  280:  				Call  MoveBattleCamOver (  10` )
  290:  				Call  ActorSpeak        ( 0002003A .Actor:Self 00000001 00A2000A 00A20006 ) % Hm! You have great hidden strength for one clothed ...
  2B0:  				Call  SetActorVar       ( .Actor:Self 00000003 00000000 )
  2C8:  			EndIf
  2D0:  		Else
  2D8:  			Call  UseBattleCamPreset    ( 00000002 )
  2E8:  			Call  MoveBattleCamOver     (  10` )
  2F8:  			Call  ActorSpeak    ( 00020039 .Actor:Self 00000001 00A2000A 00A20006 ) % You foolish novice! Do you think you can beat me w ...
  318:  		EndIf
  320:  		Call  EnableIdleScript  ( .Actor:Self 00000001 )
  334:  		Call  UseIdleAnimation  ( .Actor:Self .True )
  348:  	EndCaseGroup
  350:  EndSwitch
  358:  Return
  360:  End
}

#new:Script $Script_80231770
{
    0:  Set   *VarA  *Var0
   10:  Label  0
   1C:  Call  $Function_80219900    ( 00000000 )
   2C:  Call  TranslateModel        ( *VarA *Var0 *Var1 *Var2 )
   48:  Call  RotateModel   ( *VarA FFFFFFEC 00000000 00000000 00000001 )
   68:  Wait  1`
   74:  Loop
   80:  	Call  $Function_80219900    ( 00000001 )
   90:  	Call  TranslateModel        ( *VarA *Var0 *Var1 *Var2 )
   AC:  	Call  RotateModel   ( *VarA FFFFFFEC 00000000 00000000 00000001 )
   CC:  	Wait  1`
   D8:  	If  *VarB  ==  00000001
   E8:  		BreakLoop
   F0:  	EndIf
   F8:  EndLoop
  100:  Call  TranslateModel    ( *VarA *Var0 *Var1 *Var2 )
  11C:  Call  RotateModel       ( *VarA FFFFFFF9 00000000 00000000 00000001 )
  13C:  Wait  5`
  148:  Call  TranslateModel    ( *VarA *Var0 *Var1 *Var2 )
  164:  Call  RotateModel       ( *VarA FFFFFFE5 00000000 00000000 00000001 )
  184:  Wait  2`
  190:  Call  TranslateModel    ( *VarA *Var0 *Var1 *Var2 )
  1AC:  Call  RotateModel       ( *VarA FFFFFFFB 00000000 00000000 00000001 )
  1CC:  Wait  3`
  1D8:  Call  TranslateModel    ( *VarA *Var0 *Var1 *Var2 )
  1F4:  Call  RotateModel       ( *VarA FFFFFFEC 00000000 00000000 00000001 )
  214:  Wait  5`
  220:  Loop
  22C:  	Call  $Function_80219900    ( 00000002 )
  23C:  	Call  TranslateModel        ( *VarA *Var0 *Var1 *Var2 )
  258:  	Call  RotateModel   ( *VarA FFFFFFEC 00000000 00000000 00000001 )
  278:  	Wait  1`
  284:  	If  *VarB  ==  00000002
  294:  		BreakLoop
  29C:  	EndIf
  2A4:  EndLoop
  2AC:  Call  RandInt   ( 00000050 *VarB )
  2C0:  Add   *VarB  0000001E
  2D0:  Loop  *VarB
  2DC:  	Call  TranslateModel    ( *VarA *Var0 *Var1 *Var2 )
  2F8:  	Call  RotateModel       ( *VarA FFFFFFEC 00000000 00000000 00000001 )
  318:  	Wait  1`
  324:  EndLoop
  32C:  Call  RandInt   ( 00000005 *Var0 )
  340:  If  *Var0  !=  00000000
  350:  	Goto  0
  35C:  EndIf
  364:  Call  $Function_80219900    ( 00000003 )
  374:  Call  TranslateModel        ( *VarA *Var0 *Var1 *Var2 )
  390:  Call  RotateModel   ( *VarA FFFFFFEC 00000000 00000000 00000001 )
  3B0:  Wait  1`
  3BC:  Loop
  3C8:  	Call  $Function_80219900    ( 00000001 )
  3D8:  	Call  TranslateModel        ( *VarA *Var0 *Var1 *Var2 )
  3F4:  	Call  RotateModel   ( *VarA FFFFFFEC 00000000 00000000 00000001 )
  414:  	Wait  1`
  420:  	If  *VarB  ==  00000001
  430:  		BreakLoop
  438:  	EndIf
  440:  EndLoop
  448:  Call  TranslateModel    ( *VarA *Var0 *Var1 *Var2 )
  464:  Call  RotateModel       ( *VarA FFFFFFF9 00000000 00000000 00000001 )
  484:  Wait  5`
  490:  Call  TranslateModel    ( *VarA *Var0 *Var1 *Var2 )
  4AC:  Call  RotateModel       ( *VarA FFFFFFE5 00000000 00000000 00000001 )
  4CC:  Wait  2`
  4D8:  Call  TranslateModel    ( *VarA *Var0 *Var1 *Var2 )
  4F4:  Call  RotateModel       ( *VarA FFFFFFFB 00000000 00000000 00000001 )
  514:  Wait  3`
  520:  Call  TranslateModel    ( *VarA *Var0 *Var1 *Var2 )
  53C:  Call  RotateModel       ( *VarA FFFFFFEC 00000000 00000000 00000001 )
  55C:  Wait  5`
  568:  Loop
  574:  	Call  $Function_80219900    ( 00000002 )
  584:  	Call  TranslateModel        ( *VarA *Var0 *Var1 *Var2 )
  5A0:  	Call  RotateModel   ( *VarA FFFFFFEC 00000000 00000000 00000001 )
  5C0:  	Wait  1`
  5CC:  	If  *VarB  ==  00000002
  5DC:  		BreakLoop
  5E4:  	EndIf
  5EC:  EndLoop
  5F4:  Call  RandInt   ( 00000050 *VarB )
  608:  Add   *VarB  0000001E
  618:  Loop  *VarB
  624:  	Call  TranslateModel    ( *VarA *Var0 *Var1 *Var2 )
  640:  	Call  RotateModel       ( *VarA FFFFFFEC 00000000 00000000 00000001 )
  660:  	Wait  1`
  66C:  EndLoop
  674:  Goto  0
  680:  Return
  688:  End
}

#new:Script $Script_80231E00
{
    0:  Set   *VarA  *Var0
   10:  Loop
   1C:  	Call  TranslateModel    ( *VarA 00000001 00000000 00000000 )
   38:  	Wait  2`
   44:  	Call  TranslateModel    ( *VarA 00000001 00000000 00000000 )
   60:  	Wait  2`
   6C:  	Call  TranslateModel    ( *VarA 00000001 FFFFFFFF 00000000 )
   88:  	Wait  2`
   94:  	Call  TranslateModel    ( *VarA 00000002 FFFFFFFF 00000000 )
   B0:  	Wait  2`
   BC:  	Call  TranslateModel    ( *VarA 00000002 FFFFFFFF 00000000 )
   D8:  	Wait  2`
   E4:  	Call  TranslateModel    ( *VarA 00000002 FFFFFFFF 00000000 )
  100:  	Wait  2`
  10C:  	Call  TranslateModel    ( *VarA 00000003 FFFFFFFE 00000000 )
  128:  	Wait  2`
  134:  	Call  TranslateModel    ( *VarA 00000003 FFFFFFFE 00000000 )
  150:  	Wait  2`
  15C:  	Call  TranslateModel    ( *VarA 00000003 FFFFFFFD 00000000 )
  178:  	Wait  2`
  184:  	Call  TranslateModel    ( *VarA 00000003 FFFFFFFD 00000000 )
  1A0:  	Wait  2`
  1AC:  	Call  TranslateModel    ( *VarA 00000003 FFFFFFFD 00000000 )
  1C8:  	Wait  2`
  1D4:  	Call  TranslateModel    ( *VarA 00000003 FFFFFFFE 00000000 )
  1F0:  	Wait  2`
  1FC:  	Call  TranslateModel    ( *VarA 00000002 FFFFFFFE 00000000 )
  218:  	Wait  2`
  224:  	Call  TranslateModel    ( *VarA 00000002 FFFFFFFF 00000000 )
  240:  	Wait  2`
  24C:  	Call  TranslateModel    ( *VarA 00000001 00000000 00000000 )
  268:  	Wait  2`
  274:  	Call  TranslateModel    ( *VarA 00000001 00000001 00000000 )
  290:  	Wait  2`
  29C:  	Call  TranslateModel    ( *VarA 00000000 00000001 00000000 )
  2B8:  	Wait  2`
  2C4:  	Call  TranslateModel    ( *VarA FFFFFFFF 00000001 00000000 )
  2E0:  	Wait  2`
  2EC:  	Call  TranslateModel    ( *VarA FFFFFFFF 00000001 00000000 )
  308:  	Wait  2`
  314:  	Call  TranslateModel    ( *VarA FFFFFFFF 00000000 00000000 )
  330:  	Wait  2`
  33C:  	Call  TranslateModel    ( *VarA FFFFFFFF 00000000 00000000 )
  358:  	Wait  2`
  364:  	Call  TranslateModel    ( *VarA 00000000 00000000 00000000 )
  380:  	Wait  2`
  38C:  EndLoop
  394:  Return
  39C:  End
}

% Origin: HEURISTIC
#new:IntTable $IntTable_802321A4
{
	00000000 FFFFFFFF FFFFFFFF FFFFFFFE FFFFFFFE FFFFFFFD FFFFFFFB FFFFFFF8
	FFFFFFF8 FFFFFFF9 FFFFFFFA FFFFFFFC FFFFFFFE FFFFFFFF 00000000 000000FF
}

% Origin: HEURISTIC
#new:Script $Script_802321E4
{
    0:  Set   *VarA  *Var0
   10:  Set   *VarB  *Var1
   20:  Set   *Var5  00000005
   30:  UseIntBuffer  $IntTable_802321A4
   3C:  Label  0
   48:  Get1Int  *Var1
   54:  If  *Var1  ==  000000FF
   64:  	UseIntBuffer  $IntTable_802321A4
   70:  	Get1Int  *Var1
   7C:  EndIf
   84:  Set   *Var0  *Var5
   94:  Call  TranslateModel    ( *VarA *Var0 *Var1 00000000 )
   B0:  Wait  1`
   BC:  Add   *Var5  00000001
   CC:  Set   *VarC  *VarB
   DC:  Sub   *VarC  00000014
   EC:  If  *Var5  >  *VarC
   FC:  	Goto  1
  108:  EndIf
  110:  Set   *Var0  *Var5
  120:  Call  TranslateModel    ( *VarA *Var0 *Var1 00000000 )
  13C:  Wait  1`
  148:  Add   *Var5  00000001
  158:  Set   *VarC  *VarB
  168:  Sub   *VarC  00000014
  178:  If  *Var5  >  *VarC
  188:  	Goto  1
  194:  EndIf
  19C:  Goto  0
  1A8:  Label  1
  1B4:  Set   *Var2  00000000
  1C4:  Loop  00000014
  1D0:  	Add   *Var5  00000001
  1E0:  	Sub   *Var1  00000002
  1F0:  	Set   *Var0  *Var5
  200:  	Call  TranslateModel    ( *VarA *Var0 *Var1 00000000 )
  21C:  	Wait  1`
  228:  EndLoop
  230:  Sub   *Var5  00000118
  240:  Set   *Var1  00000000
  250:  Goto  0
  25C:  Return
  264:  End
}

% Origin: HEURISTIC
#new:Script $Script_80232450
{
    0:  Set   *VarA  *Var0
   10:  Loop
   1C:  	Call  TranslateModel    ( *VarA 00000000 00000000 00000000 )
   38:  	Wait  2`
   44:  	Call  TranslateModel    ( *VarA 00000000 00000000 00000000 )
   60:  	Wait  2`
   6C:  	Call  TranslateModel    ( *VarA 00000000 FFFFFFFF 00000000 )
   88:  	Wait  2`
   94:  	Call  TranslateModel    ( *VarA 00000000 FFFFFFFF 00000000 )
   B0:  	Wait  2`
   BC:  	Call  TranslateModel    ( *VarA 00000000 FFFFFFFF 00000000 )
   D8:  	Wait  2`
   E4:  	Call  TranslateModel    ( *VarA 00000000 FFFFFFFF 00000000 )
  100:  	Wait  2`
  10C:  	Call  TranslateModel    ( *VarA 00000000 FFFFFFFE 00000000 )
  128:  	Wait  2`
  134:  	Call  TranslateModel    ( *VarA 00000000 FFFFFFFE 00000000 )
  150:  	Wait  2`
  15C:  	Call  TranslateModel    ( *VarA 00000000 FFFFFFFD 00000000 )
  178:  	Wait  2`
  184:  	Call  TranslateModel    ( *VarA 00000000 FFFFFFFD 00000000 )
  1A0:  	Wait  2`
  1AC:  	Call  TranslateModel    ( *VarA 00000000 FFFFFFFD 00000000 )
  1C8:  	Wait  2`
  1D4:  	Call  TranslateModel    ( *VarA 00000000 FFFFFFFE 00000000 )
  1F0:  	Wait  2`
  1FC:  	Call  TranslateModel    ( *VarA 00000000 FFFFFFFE 00000000 )
  218:  	Wait  2`
  224:  	Call  TranslateModel    ( *VarA 00000000 FFFFFFFF 00000000 )
  240:  	Wait  2`
  24C:  	Call  TranslateModel    ( *VarA 00000000 00000000 00000000 )
  268:  	Wait  2`
  274:  	Call  TranslateModel    ( *VarA 00000000 00000001 00000000 )
  290:  	Wait  2`
  29C:  	Call  TranslateModel    ( *VarA 00000000 00000001 00000000 )
  2B8:  	Wait  2`
  2C4:  	Call  TranslateModel    ( *VarA 00000000 00000001 00000000 )
  2E0:  	Wait  2`
  2EC:  	Call  TranslateModel    ( *VarA 00000000 00000001 00000000 )
  308:  	Wait  2`
  314:  	Call  TranslateModel    ( *VarA 00000000 00000000 00000000 )
  330:  	Wait  2`
  33C:  	Call  TranslateModel    ( *VarA 00000000 00000000 00000000 )
  358:  	Wait  2`
  364:  	Call  TranslateModel    ( *VarA 00000000 00000000 00000000 )
  380:  	Wait  2`
  38C:  EndLoop
  394:  Return
  39C:  End
}

#new:Script $Script_BeforeBattle_802327F4
{
    0:  Call  SetSpriteShading  ( FFFFFFFF )
   10:  Call  SetCamBGColor     ( .Cam:Battle  0`  0`  0` )
   2C:  Thread
   34:  	Set   *Var0  0000002C
   44:  	Exec  $Script_80231E00
   50:  	Wait  5`
   5C:  	Set   *Var0  0000002F
   6C:  	Exec  $Script_80231E00
   78:  	Wait  5`
   84:  	Set   *Var0  0000002E
   94:  	Exec  $Script_80231E00
   A0:  	Wait  5`
   AC:  	Set   *Var0  0000002D
   BC:  	Exec  $Script_80231E00
   C8:  EndThread
   D0:  Set   *Var0  00000028
   E0:  Exec  $Script_80231770
   EC:  Return
   F4:  End
}

#new:Script $Script_AfterBattle_802328F0
{
    0:  Return
    8:  End
}

#new:Stage $Stage_80232900
{
	$ASCII_80232B98  % mac_tex
	$ASCII_80232B88  % mac_bt01_shape
	$ASCII_80232B78  % mac_bt01_hit
	$Script_BeforeBattle_802327F4
	$Script_AfterBattle_802328F0
	$ASCII_80232B70  % nok_bg
	00000000
	00000000
	00000000
	00000000
}

PADDING: 80232928 to 80232930 (0047EDB8 to 0047EDC0)
00000000 00000000

#new:Script $Script_BeforeBattle_80232930
{
    0:  Call  SetSpriteShading  ( FFFFFFFF )
   10:  Call  SetCamBGColor     ( .Cam:Battle  0`  0`  0` )
   2C:  Call  802536A8  ( 00000001 )
   3C:  Return
   44:  End
}

#new:Script $Script_AfterBattle_8023297C
{
    0:  Call  802536A8  ( 00000000 )
   10:  Return
   18:  End
}

#new:Stage $Stage_8023299C
{
	$ASCII_80232BC0  % mac_tex
	$ASCII_80232BB0  % mac_bt02_shape
	$ASCII_80232BA0  % mac_bt02_hit
	$Script_BeforeBattle_80232930
	$Script_AfterBattle_8023297C
	00000000
	00000000
	00000000
	00000000
	00000000
}

PADDING: 802329C4 to 802329D0 (0047EE54 to 0047EE60)
00000000 00000000 00000000

#new:Formation $Formation_00
{
	$Chan 00000002 0000000A 00000000 00000000 00000000 00000000
}

#new:Formation $Formation_01
{
	$Lee 00000002 0000000A 00000000 00000000 00000000 00000000
}

#new:Formation $Formation_02
{
	$TheMaster1 00000002 0000000A 00000000 00000000 00000000 00000000
}

#new:Formation $Formation_03
{
	$TheMaster2 00000002 0000000A 00000000 00000000 00000000 00000000
}

#new:Formation $Formation_04
{
	$TheMaster3 00000002 0000000A 00000000 00000000 00000000 00000000
}

#new:FormationTable $FormationTable
{
	$SJIS_80232C00 00000001 $Formation_00 $Stage_8023299C 00000000
	$SJIS_80232BF8 00000001 $Formation_01 $Stage_8023299C 00000000
	$SJIS_80232BE8 00000001 $Formation_02 $Stage_8023299C 00000000
	$SJIS_80232BD8 00000001 $Formation_03 $Stage_8023299C 00000000
	$SJIS_80232BC8 00000001 $Formation_04 $Stage_8023299C 00000000
	00000000 00000000 00000000 00000000 00000000
}

#new:StageTable $StageTable
{
	$ASCII_80232C10 $Stage_80232900
	$ASCII_80232C08 $Stage_8023299C
	00000000 00000000
}

PADDING: 80232AEC to 80232AF0 (0047EF7C to 0047EF80)
00000000

#new:ConstDouble $ConstDouble_80232AF0
{
	47.000000d
}

#new:ConstDouble $ConstDouble_80232AF8
{
	1.120000d
}

#new:ConstDouble $ConstDouble_80232B00
{
	0.530000d
}

#new:ConstDouble $ConstDouble_80232B08
{
	47.000000d
}

#new:ConstDouble $ConstDouble_80232B10
{
	0.800000d
}

#new:ConstDouble $ConstDouble_80232B18
{
	0.530000d
}

#new:ConstDouble $ConstDouble_80232B20
{
	0.800000d
}

#new:ConstDouble $ConstDouble_80232B28
{
	16.500000d
}

#new:ConstDouble $ConstDouble_80232B30
{
	33.000000d
}

#new:ConstDouble $ConstDouble_80232B38
{
	4.800000d
}

#new:JumpTable $JumpTable_80232B40
{
	$Function_80219824[54] $Function_80219824[60] $Function_80219824[6C] $Function_80219824[78]
	$Function_80219824[B0] $Function_80219824[90] $Function_80219824[9C] $Function_80219824[A8]
	$Function_80219824[84]
}

PADDING: 80232B64 to 80232B70 (0047EFF4 to 0047F000)
00000000 00000000 00000000

#new:ASCII $ASCII_80232B70
{
	"nok_bg"
}

#new:ASCII $ASCII_80232B78
{
	"mac_bt01_hit"
}

#new:ASCII $ASCII_80232B88
{
	"mac_bt01_shape"
}

#new:ASCII $ASCII_80232B98
{
	"mac_tex"
}

#new:ASCII $ASCII_80232BA0
{
	"mac_bt02_hit"
}

#new:ASCII $ASCII_80232BB0
{
	"mac_bt02_shape"
}

#new:ASCII $ASCII_80232BC0
{
	"mac_tex"
}

#new:SJIS $SJIS_80232BC8
{
	シショー その３ % shisho- sono3
}

#new:SJIS $SJIS_80232BD8
{
	シショー その２ % shisho- sono2
}

#new:SJIS $SJIS_80232BE8
{
	シショー その１ % shisho- sono1
}

#new:SJIS $SJIS_80232BF8
{
	リー % ri-
}

#new:SJIS $SJIS_80232C00
{
	チェン % chen
}

#new:ASCII $ASCII_80232C08
{
	"mac_02"
}

#new:ASCII $ASCII_80232C10
{
	"mac_01"
}

PADDING: 80232C18 to 80232C20 (0047F0A8 to 0047F0B0)
00000000 00000000

