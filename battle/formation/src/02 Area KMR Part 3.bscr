% Script File: 02 Area KMR Part 3.bscr
% Decoded from: 447440 to 464490 (02 Area KMR Part 3)

#new:Function $Function_80218000
{
    0:  ADDIU     SP, SP, FFD8
    4:  SDC1      F22, 20 (SP)
    8:  MOV.S     F22, F12
    C:  SDC1      F20, 18 (SP)
   10:  SW        RA, 10 (SP)
   14:  JAL       ~Func:length2D
   18:  MOV.S     F20, F14
   1C:  TRUNC.W.S F6, F20
   20:  MFC1      V0, F6
   24:  NOP
   28:  BLTZL     V0, .o30
   2C:  SUBU      V0, R0, V0
        .o30
   30:  MTC1      V0, F2
   34:  NOP
   38:  CVT.S.W   F2, F2
   3C:  DIV.S     F4, F2, F0
   40:  CLEAR     A0
   44:  LI        A2, 5A
   48:  COPY      A1, A0
   4C:  LA        A3, $FloatTable_8021B030
   54:  ANDI      V0, A2, FFFF
        .o58
   58:  ANDI      V1, A0, FFFF
   5C:  SUBU      V0, V0, V1
   60:  SRL       V1, V0, 1F
   64:  ADDU      V0, V0, V1
   68:  SRA       V0, V0, 1
   6C:  ADDU      V1, A0, V0
   70:  ANDI      V0, V1, FFFF
   74:  SLL       V0, V0, 2
   78:  ADDU      V0, V0, A3
   7C:  LWC1      F0, 0 (V0)
   80:  C.LT.S    F0, F4
   84:  NOP
   88:  BC1FL     .o94
   8C:  COPY      A2, V1
   90:  COPY      A0, V1
        .o94
   94:  ADDIU     A1, A1, 1
   98:  ANDI      V0, A1, FFFF
   9C:  SLTIU     V0, V0, 7
   A0:  BNE       V0, R0, .o58
   A4:  ANDI      V0, A2, FFFF
   A8:  ANDI      V0, A0, FFFF
   AC:  SLL       V0, V0, 2
   B0:  ANDI      V1, A2, FFFF
   B4:  LTF       F2, V0 ($FloatTable_8021B030)
   C0:  SLL       V1, V1, 2
   C4:  SUB.S     F2, F2, F4
   C8:  LTF       F0, V1 ($FloatTable_8021B030)
   D4:  SUB.S     F0, F0, F4
   D8:  ABS.S     F2, F2
   DC:  ABS.S     F0, F0
   E0:  C.LT.S    F2, F0
   E4:  NOP
   E8:  BC1F      .oF4
   EC:  COPY      V1, A2
   F0:  COPY      V1, A0
        .oF4
   F4:  MTC1      R0, F0
   F8:  NOP
   FC:  C.LT.S    F22, F0
  100:  NOP
  104:  BC1F      .o130
  108:  NOP
  10C:  C.LE.S    F0, F20
  110:  NOP
  114:  BC1F      .o128
  118:  LI        V0, B4
  11C:  SUBU      V1, V0, V1
  120:  MTC1      R0, F0
  124:  NOP
        .o128
  128:  C.LT.S    F22, F0
  12C:  NOP
        .o130
  130:  BC1F      .o148
  134:  NOP
  138:  C.LT.S    F20, F0
  13C:  NOP
  140:  BC1TL     .o148
  144:  ADDIU     V1, V1, B4
        .o148
  148:  MTC1      R0, F0
  14C:  NOP
  150:  C.LE.S    F0, F22
  154:  NOP
  158:  BC1F      .o174
  15C:  NOP
  160:  C.LT.S    F20, F0
  164:  NOP
  168:  BC1F      .o174
  16C:  LI        V0, 168
  170:  SUBU      V1, V0, V1
        .o174
  174:  LW        RA, 10 (SP)
  178:  LDC1      F22, 20 (SP)
  17C:  LDC1      F20, 18 (SP)
  180:  ANDI      V0, V1, FFFF
  184:  JR        RA
  188:  ADDIU     SP, SP, 28
}

#new:Function $Function_8021818C
{
    0:  ADDIU     SP, SP, FFD8
    4:  SW        S4, 20 (SP)
    8:  COPY      S4, A0
    C:  SW        RA, 24 (SP)
   10:  SW        S3, 1C (SP)
   14:  SW        S2, 18 (SP)
   18:  SW        S1, 14 (SP)
   1C:  SW        S0, 10 (SP)
   20:  LW        S2, C (S4)
   24:  LW        A1, 0 (S2)
   28:  JAL       ~Func:get_variable
   2C:  ADDIU     S2, S2, 4
   30:  LW        A1, 0 (S2)
   34:  ADDIU     S2, S2, 4
   38:  COPY      A0, S4
   3C:  JAL       ~Func:get_variable
   40:  COPY      S0, V0
   44:  LW        A1, 0 (S2)
   48:  ADDIU     S2, S2, 4
   4C:  COPY      A0, S4
   50:  JAL       ~Func:get_variable
   54:  COPY      S1, V0
   58:  COPY      S3, V0
   5C:  LW        A1, 0 (S2)
   60:  ADDIU     S2, S2, 4
   64:  COPY      A0, S4
   68:  JAL       ~Func:get_variable
   6C:  SUBU      S3, S3, S0
   70:  COPY      S0, V0
   74:  COPY      A0, S4
   78:  LW        A1, 0 (S2)
   7C:  JAL       ~Func:get_variable
   80:  SUBU      S0, S0, S1
   84:  BNE       S3, R0, .oA0
   88:  NOP
   8C:  BNE       S0, R0, .oA0
   90:  COPY      A0, S4
   94:  LW        A1, 0 (S2)
   98:  BEQ       R0, R0, .oC8
   9C:  COPY      A2, V0
        .oA0
   A0:  MTC1      S3, F12
   A4:  NOP
   A8:  CVT.S.W   F12, F12
   AC:  MTC1      S0, F14
   B0:  NOP
   B4:  JAL       $Function_80218000
   B8:  CVT.S.W   F14, F14
   BC:  COPY      A0, S4
   C0:  LW        A1, 0 (S2)
   C4:  ADDIU     A2, V0, FFA6
        .oC8
   C8:  JAL       ~Func:set_variable
   CC:  NOP
   D0:  LI        V0, 2
   D4:  LW        RA, 24 (SP)
   D8:  LW        S4, 20 (SP)
   DC:  LW        S3, 1C (SP)
   E0:  LW        S2, 18 (SP)
   E4:  LW        S1, 14 (SP)
   E8:  LW        S0, 10 (SP)
   EC:  JR        RA
   F0:  ADDIU     SP, SP, 28
}

#new:Function $Function_80218280
{
    0:  ADDIU     SP, SP, FFE0
    4:  SW        S1, 14 (SP)
    8:  COPY      S1, A0
    C:  SW        RA, 18 (SP)
   10:  SW        S0, 10 (SP)
   14:  LW        S0, C (S1)
   18:  LW        A1, 0 (S0)
   1C:  JAL       ~Func:get_variable
   20:  ADDIU     S0, S0, 4
   24:  COPY      A0, S1
   28:  LW        A1, 0 (S0)
   2C:  JAL       ~Func:get_variable
   30:  COPY      S0, V0
   34:  COPY      A0, S0
   38:  JAL       ~Func:start_rumble
   3C:  COPY      A1, V0
   40:  LW        RA, 18 (SP)
   44:  LW        S1, 14 (SP)
   48:  LW        S0, 10 (SP)
   4C:  LI        V0, 2
   50:  JR        RA
   54:  ADDIU     SP, SP, 20
}

#new:Function $Function_802182D8
{
    0:  ADDIU     SP, SP, FFD8
    4:  SDC1      F22, 20 (SP)
    8:  MOV.S     F22, F12
    C:  SDC1      F20, 18 (SP)
   10:  SW        RA, 10 (SP)
   14:  JAL       ~Func:length2D
   18:  MOV.S     F20, F14
   1C:  TRUNC.W.S F6, F20
   20:  MFC1      V0, F6
   24:  NOP
   28:  BLTZL     V0, .o30
   2C:  SUBU      V0, R0, V0
        .o30
   30:  MTC1      V0, F2
   34:  NOP
   38:  CVT.S.W   F2, F2
   3C:  DIV.S     F4, F2, F0
   40:  CLEAR     A0
   44:  LI        A2, 5A
   48:  COPY      A1, A0
   4C:  LA        A3, $FloatTable_8021E61C
   54:  ANDI      V0, A2, FFFF
        .o58
   58:  ANDI      V1, A0, FFFF
   5C:  SUBU      V0, V0, V1
   60:  SRL       V1, V0, 1F
   64:  ADDU      V0, V0, V1
   68:  SRA       V0, V0, 1
   6C:  ADDU      V1, A0, V0
   70:  ANDI      V0, V1, FFFF
   74:  SLL       V0, V0, 2
   78:  ADDU      V0, V0, A3
   7C:  LWC1      F0, 0 (V0)
   80:  C.LT.S    F0, F4
   84:  NOP
   88:  BC1FL     .o94
   8C:  COPY      A2, V1
   90:  COPY      A0, V1
        .o94
   94:  ADDIU     A1, A1, 1
   98:  ANDI      V0, A1, FFFF
   9C:  SLTIU     V0, V0, 7
   A0:  BNE       V0, R0, .o58
   A4:  ANDI      V0, A2, FFFF
   A8:  ANDI      V0, A0, FFFF
   AC:  SLL       V0, V0, 2
   B0:  ANDI      V1, A2, FFFF
   B4:  LTF       F2, V0 ($FloatTable_8021E61C)
   C0:  SLL       V1, V1, 2
   C4:  SUB.S     F2, F2, F4
   C8:  LTF       F0, V1 ($FloatTable_8021E61C)
   D4:  SUB.S     F0, F0, F4
   D8:  ABS.S     F2, F2
   DC:  ABS.S     F0, F0
   E0:  C.LT.S    F2, F0
   E4:  NOP
   E8:  BC1F      .oF4
   EC:  COPY      V1, A2
   F0:  COPY      V1, A0
        .oF4
   F4:  MTC1      R0, F0
   F8:  NOP
   FC:  C.LT.S    F22, F0
  100:  NOP
  104:  BC1F      .o130
  108:  NOP
  10C:  C.LE.S    F0, F20
  110:  NOP
  114:  BC1F      .o128
  118:  LI        V0, B4
  11C:  SUBU      V1, V0, V1
  120:  MTC1      R0, F0
  124:  NOP
        .o128
  128:  C.LT.S    F22, F0
  12C:  NOP
        .o130
  130:  BC1F      .o148
  134:  NOP
  138:  C.LT.S    F20, F0
  13C:  NOP
  140:  BC1TL     .o148
  144:  ADDIU     V1, V1, B4
        .o148
  148:  MTC1      R0, F0
  14C:  NOP
  150:  C.LE.S    F0, F22
  154:  NOP
  158:  BC1F      .o174
  15C:  NOP
  160:  C.LT.S    F20, F0
  164:  NOP
  168:  BC1F      .o174
  16C:  LI        V0, 168
  170:  SUBU      V1, V0, V1
        .o174
  174:  LW        RA, 10 (SP)
  178:  LDC1      F22, 20 (SP)
  17C:  LDC1      F20, 18 (SP)
  180:  ANDI      V0, V1, FFFF
  184:  JR        RA
  188:  ADDIU     SP, SP, 28
}

#new:Function $Function_80218464
{
    0:  ADDIU     SP, SP, FFD8
    4:  SW        S4, 20 (SP)
    8:  COPY      S4, A0
    C:  SW        RA, 24 (SP)
   10:  SW        S3, 1C (SP)
   14:  SW        S2, 18 (SP)
   18:  SW        S1, 14 (SP)
   1C:  SW        S0, 10 (SP)
   20:  LW        S2, C (S4)
   24:  LW        A1, 0 (S2)
   28:  JAL       ~Func:get_variable
   2C:  ADDIU     S2, S2, 4
   30:  LW        A1, 0 (S2)
   34:  ADDIU     S2, S2, 4
   38:  COPY      A0, S4
   3C:  JAL       ~Func:get_variable
   40:  COPY      S0, V0
   44:  LW        A1, 0 (S2)
   48:  ADDIU     S2, S2, 4
   4C:  COPY      A0, S4
   50:  JAL       ~Func:get_variable
   54:  COPY      S1, V0
   58:  COPY      S3, V0
   5C:  LW        A1, 0 (S2)
   60:  ADDIU     S2, S2, 4
   64:  COPY      A0, S4
   68:  JAL       ~Func:get_variable
   6C:  SUBU      S3, S3, S0
   70:  COPY      S0, V0
   74:  COPY      A0, S4
   78:  LW        A1, 0 (S2)
   7C:  JAL       ~Func:get_variable
   80:  SUBU      S0, S0, S1
   84:  BNE       S3, R0, .oA0
   88:  NOP
   8C:  BNE       S0, R0, .oA0
   90:  COPY      A0, S4
   94:  LW        A1, 0 (S2)
   98:  BEQ       R0, R0, .oC8
   9C:  COPY      A2, V0
        .oA0
   A0:  MTC1      S3, F12
   A4:  NOP
   A8:  CVT.S.W   F12, F12
   AC:  MTC1      S0, F14
   B0:  NOP
   B4:  JAL       $Function_802182D8
   B8:  CVT.S.W   F14, F14
   BC:  COPY      A0, S4
   C0:  LW        A1, 0 (S2)
   C4:  ADDIU     A2, V0, FFA6
        .oC8
   C8:  JAL       ~Func:set_variable
   CC:  NOP
   D0:  LI        V0, 2
   D4:  LW        RA, 24 (SP)
   D8:  LW        S4, 20 (SP)
   DC:  LW        S3, 1C (SP)
   E0:  LW        S2, 18 (SP)
   E4:  LW        S1, 14 (SP)
   E8:  LW        S0, 10 (SP)
   EC:  JR        RA
   F0:  ADDIU     SP, SP, 28
}

PADDING: 80218558 to 80218560 (00447998 to 004479A0)
00000000 00000000

#new:Function $Function_80218560
{
    0:  ADDIU     SP, SP, FFE0
    4:  SW        S1, 14 (SP)
    8:  COPY      S1, A0
    C:  SW        RA, 18 (SP)
   10:  SW        S0, 10 (SP)
   14:  LW        S0, C (S1)
   18:  LW        A1, 0 (S0)
   1C:  JAL       ~Func:get_variable
   20:  ADDIU     S0, S0, 4
   24:  COPY      A0, S1
   28:  LW        A1, 0 (S0)
   2C:  JAL       ~Func:get_variable
   30:  COPY      S0, V0
   34:  COPY      A0, S0
   38:  JAL       ~Func:start_rumble
   3C:  COPY      A1, V0
   40:  LW        RA, 18 (SP)
   44:  LW        S1, 14 (SP)
   48:  LW        S0, 10 (SP)
   4C:  LI        V0, 2
   50:  JR        RA
   54:  ADDIU     SP, SP, 20
}

#new:Function $Function_802185B8
{
    0:  ADDIU     SP, SP, FFD8
    4:  SDC1      F22, 20 (SP)
    8:  MOV.S     F22, F12
    C:  SDC1      F20, 18 (SP)
   10:  SW        RA, 10 (SP)
   14:  JAL       ~Func:length2D
   18:  MOV.S     F20, F14
   1C:  TRUNC.W.S F6, F20
   20:  MFC1      V0, F6
   24:  NOP
   28:  BLTZL     V0, .o30
   2C:  SUBU      V0, R0, V0
        .o30
   30:  MTC1      V0, F2
   34:  NOP
   38:  CVT.S.W   F2, F2
   3C:  DIV.S     F4, F2, F0
   40:  CLEAR     A0
   44:  LI        A2, 5A
   48:  COPY      A1, A0
   4C:  LA        A3, $FloatTable_80221BBC
   54:  ANDI      V0, A2, FFFF
        .o58
   58:  ANDI      V1, A0, FFFF
   5C:  SUBU      V0, V0, V1
   60:  SRL       V1, V0, 1F
   64:  ADDU      V0, V0, V1
   68:  SRA       V0, V0, 1
   6C:  ADDU      V1, A0, V0
   70:  ANDI      V0, V1, FFFF
   74:  SLL       V0, V0, 2
   78:  ADDU      V0, V0, A3
   7C:  LWC1      F0, 0 (V0)
   80:  C.LT.S    F0, F4
   84:  NOP
   88:  BC1FL     .o94
   8C:  COPY      A2, V1
   90:  COPY      A0, V1
        .o94
   94:  ADDIU     A1, A1, 1
   98:  ANDI      V0, A1, FFFF
   9C:  SLTIU     V0, V0, 7
   A0:  BNE       V0, R0, .o58
   A4:  ANDI      V0, A2, FFFF
   A8:  ANDI      V0, A0, FFFF
   AC:  SLL       V0, V0, 2
   B0:  ANDI      V1, A2, FFFF
   B4:  LTF       F2, V0 ($FloatTable_80221BBC)
   C0:  SLL       V1, V1, 2
   C4:  SUB.S     F2, F2, F4
   C8:  LTF       F0, V1 ($FloatTable_80221BBC)
   D4:  SUB.S     F0, F0, F4
   D8:  ABS.S     F2, F2
   DC:  ABS.S     F0, F0
   E0:  C.LT.S    F2, F0
   E4:  NOP
   E8:  BC1F      .oF4
   EC:  COPY      V1, A2
   F0:  COPY      V1, A0
        .oF4
   F4:  MTC1      R0, F0
   F8:  NOP
   FC:  C.LT.S    F22, F0
  100:  NOP
  104:  BC1F      .o130
  108:  NOP
  10C:  C.LE.S    F0, F20
  110:  NOP
  114:  BC1F      .o128
  118:  LI        V0, B4
  11C:  SUBU      V1, V0, V1
  120:  MTC1      R0, F0
  124:  NOP
        .o128
  128:  C.LT.S    F22, F0
  12C:  NOP
        .o130
  130:  BC1F      .o148
  134:  NOP
  138:  C.LT.S    F20, F0
  13C:  NOP
  140:  BC1TL     .o148
  144:  ADDIU     V1, V1, B4
        .o148
  148:  MTC1      R0, F0
  14C:  NOP
  150:  C.LE.S    F0, F22
  154:  NOP
  158:  BC1F      .o174
  15C:  NOP
  160:  C.LT.S    F20, F0
  164:  NOP
  168:  BC1F      .o174
  16C:  LI        V0, 168
  170:  SUBU      V1, V0, V1
        .o174
  174:  LW        RA, 10 (SP)
  178:  LDC1      F22, 20 (SP)
  17C:  LDC1      F20, 18 (SP)
  180:  ANDI      V0, V1, FFFF
  184:  JR        RA
  188:  ADDIU     SP, SP, 28
}

#new:Function $Function_80218744
{
    0:  ADDIU     SP, SP, FFD8
    4:  SW        S4, 20 (SP)
    8:  COPY      S4, A0
    C:  SW        RA, 24 (SP)
   10:  SW        S3, 1C (SP)
   14:  SW        S2, 18 (SP)
   18:  SW        S1, 14 (SP)
   1C:  SW        S0, 10 (SP)
   20:  LW        S2, C (S4)
   24:  LW        A1, 0 (S2)
   28:  JAL       ~Func:get_variable
   2C:  ADDIU     S2, S2, 4
   30:  LW        A1, 0 (S2)
   34:  ADDIU     S2, S2, 4
   38:  COPY      A0, S4
   3C:  JAL       ~Func:get_variable
   40:  COPY      S0, V0
   44:  LW        A1, 0 (S2)
   48:  ADDIU     S2, S2, 4
   4C:  COPY      A0, S4
   50:  JAL       ~Func:get_variable
   54:  COPY      S1, V0
   58:  COPY      S3, V0
   5C:  LW        A1, 0 (S2)
   60:  ADDIU     S2, S2, 4
   64:  COPY      A0, S4
   68:  JAL       ~Func:get_variable
   6C:  SUBU      S3, S3, S0
   70:  COPY      S0, V0
   74:  COPY      A0, S4
   78:  LW        A1, 0 (S2)
   7C:  JAL       ~Func:get_variable
   80:  SUBU      S0, S0, S1
   84:  BNE       S3, R0, .oA0
   88:  NOP
   8C:  BNE       S0, R0, .oA0
   90:  COPY      A0, S4
   94:  LW        A1, 0 (S2)
   98:  BEQ       R0, R0, .oC8
   9C:  COPY      A2, V0
        .oA0
   A0:  MTC1      S3, F12
   A4:  NOP
   A8:  CVT.S.W   F12, F12
   AC:  MTC1      S0, F14
   B0:  NOP
   B4:  JAL       $Function_802185B8
   B8:  CVT.S.W   F14, F14
   BC:  COPY      A0, S4
   C0:  LW        A1, 0 (S2)
   C4:  ADDIU     A2, V0, FFA6
        .oC8
   C8:  JAL       ~Func:set_variable
   CC:  NOP
   D0:  LI        V0, 2
   D4:  LW        RA, 24 (SP)
   D8:  LW        S4, 20 (SP)
   DC:  LW        S3, 1C (SP)
   E0:  LW        S2, 18 (SP)
   E4:  LW        S1, 14 (SP)
   E8:  LW        S0, 10 (SP)
   EC:  JR        RA
   F0:  ADDIU     SP, SP, 28
}

PADDING: 80218838 to 80218840 (00447C78 to 00447C80)
00000000 00000000

#new:Function $Function_80218840
{
    0:  ADDIU     SP, SP, FFD8
    4:  SW        S1, 14 (SP)
    8:  COPY      S1, A0
    C:  SW        RA, 20 (SP)
   10:  SW        S3, 1C (SP)
   14:  SW        S2, 18 (SP)
   18:  SW        S0, 10 (SP)
   1C:  LW        S0, C (S1)
   20:  LW        A1, 0 (S0)
   24:  JAL       ~Func:get_variable
   28:  ADDIU     S0, S0, 4
   2C:  LW        A1, 0 (S0)
   30:  ADDIU     S0, S0, 4
   34:  COPY      A0, S1
   38:  JAL       ~Func:get_variable
   3C:  COPY      S3, V0
   40:  LW        A1, 0 (S0)
   44:  ADDIU     S0, S0, 4
   48:  COPY      A0, S1
   4C:  JAL       ~Func:get_variable
   50:  COPY      S2, V0
   54:  COPY      A0, S1
   58:  LW        A1, 0 (S0)
   5C:  JAL       ~Func:get_variable
   60:  COPY      S0, V0
   64:  LW        A0, 148 (S1)
   68:  JAL       ~Func:get_actor
   6C:  COPY      S1, V0
   70:  COPY      V1, V0
   74:  LW        V0, 8 (V1)
   78:  LBU       V0, 24 (V0)
   7C:  LW        A0, 8 (V1)
   80:  SUBU      S3, S3, V0
   84:  SB        S3, 194 (V1)
   88:  LBU       V0, 25 (A0)
   8C:  SUBU      S2, S2, V0
   90:  SB        S2, 195 (V1)
   94:  LBU       V0, 26 (A0)
   98:  SUBU      S0, S0, V0
   9C:  SB        S0, 196 (V1)
   A0:  LBU       A0, 27 (A0)
   A4:  SUBU      S1, S1, A0
   A8:  SB        S1, 197 (V1)
   AC:  LW        RA, 20 (SP)
   B0:  LW        S3, 1C (SP)
   B4:  LW        S2, 18 (SP)
   B8:  LW        S1, 14 (SP)
   BC:  LW        S0, 10 (SP)
   C0:  LI        V0, 2
   C4:  JR        RA
   C8:  ADDIU     SP, SP, 28
}

PADDING: 8021890C to 80218910 (00447D4C to 00447D50)
00000000

#new:Function $Function_80218910
{
    0:  ADDIU     SP, SP, FFD8
    4:  SW        S1, 14 (SP)
    8:  COPY      S1, A0
    C:  SW        RA, 20 (SP)
   10:  SW        S3, 1C (SP)
   14:  SW        S2, 18 (SP)
   18:  SW        S0, 10 (SP)
   1C:  LW        S0, C (S1)
   20:  LW        A1, 0 (S0)
   24:  JAL       ~Func:get_variable
   28:  ADDIU     S0, S0, 4
   2C:  LW        A1, 0 (S0)
   30:  ADDIU     S0, S0, 4
   34:  COPY      A0, S1
   38:  JAL       ~Func:get_variable
   3C:  COPY      S3, V0
   40:  LW        A1, 0 (S0)
   44:  ADDIU     S0, S0, 4
   48:  COPY      A0, S1
   4C:  JAL       ~Func:get_variable
   50:  COPY      S2, V0
   54:  COPY      A0, S1
   58:  LW        A1, 0 (S0)
   5C:  JAL       ~Func:get_variable
   60:  COPY      S0, V0
   64:  LW        A0, 148 (S1)
   68:  JAL       ~Func:get_actor
   6C:  COPY      S1, V0
   70:  COPY      V1, V0
   74:  LW        V0, 8 (V1)
   78:  LBU       V0, 24 (V0)
   7C:  LW        A0, 8 (V1)
   80:  SUBU      S3, S3, V0
   84:  SB        S3, 194 (V1)
   88:  LBU       V0, 25 (A0)
   8C:  SUBU      S2, S2, V0
   90:  SB        S2, 195 (V1)
   94:  LBU       V0, 26 (A0)
   98:  SUBU      S0, S0, V0
   9C:  SB        S0, 196 (V1)
   A0:  LBU       A0, 27 (A0)
   A4:  SUBU      S1, S1, A0
   A8:  SB        S1, 197 (V1)
   AC:  LW        RA, 20 (SP)
   B0:  LW        S3, 1C (SP)
   B4:  LW        S2, 18 (SP)
   B8:  LW        S1, 14 (SP)
   BC:  LW        S0, 10 (SP)
   C0:  LI        V0, 2
   C4:  JR        RA
   C8:  ADDIU     SP, SP, 28
}

#new:Function $Function_802189DC
{
    0:  ADDIU     SP, SP, FFD0
    4:  SW        S2, 18 (SP)
    8:  COPY      S2, A0
    C:  SW        RA, 1C (SP)
   10:  SW        S1, 14 (SP)
   14:  SW        S0, 10 (SP)
   18:  SDC1      F22, 28 (SP)
   1C:  SDC1      F20, 20 (SP)
   20:  LW        S0, C (S2)
   24:  LW        A1, 0 (S0)
   28:  JAL       ~Func:get_float_variable
   2C:  ADDIU     S0, S0, 4
   30:  LW        A1, 0 (S0)
   34:  ADDIU     S0, S0, 4
   38:  COPY      A0, S2
   3C:  JAL       ~Func:get_float_variable
   40:  MOV.S     F22, F0
   44:  LA        A0, 80104A28
   4C:  JAL       ~Func:create_hud_element
   50:  MOV.S     F20, F0
   54:  COPY      S1, V0
   58:  TRUNC.W.S F2, F22
   5C:  MFC1      A1, F2
   60:  TRUNC.W.S F2, F20
   64:  MFC1      A2, F2
   68:  JAL       ~Func:set_hud_element_render_pos
   6C:  COPY      A0, S1
   70:  LUI       A1, 3FC0
   74:  JAL       ~Func:set_hud_element_scale
   78:  COPY      A0, S1
   7C:  COPY      A0, S1
   80:  LI        A1, 00200002
   84:  JAL       ~Func:clear_hud_element_flags
   88:  RESERVED
   8C:  COPY      A0, S2
   90:  LW        A1, 0 (S0)
   94:  JAL       ~Func:set_variable
   98:  COPY      A2, S1
   9C:  JAL       ~Func:load_tattle_flags
   A0:  LI        A0, 8B
   A4:  LW        RA, 1C (SP)
   A8:  LW        S2, 18 (SP)
   AC:  LW        S1, 14 (SP)
   B0:  LW        S0, 10 (SP)
   B4:  LDC1      F22, 28 (SP)
   B8:  LDC1      F20, 20 (SP)
   BC:  LI        V0, 2
   C0:  JR        RA
   C4:  ADDIU     SP, SP, 30
}

#new:Function $Function_80218AA4
{
    0:  ADDIU     SP, SP, FFE8
    4:  SW        RA, 10 (SP)
    8:  LW        V0, C (A0)
    C:  JAL       ~Func:get_variable
   10:  LW        A1, 0 (V0)
   14:  JAL       ~Func:free_hud_element
   18:  COPY      A0, V0
   1C:  LW        RA, 10 (SP)
   20:  LI        V0, 2
   24:  JR        RA
   28:  ADDIU     SP, SP, 18
}

#new:Function $Function_80218AD0
{
    0:  ADDIU     SP, SP, FFD8
    4:  SW        S1, 14 (SP)
    8:  COPY      S1, A0
    C:  SW        RA, 20 (SP)
   10:  SW        S3, 1C (SP)
   14:  SW        S2, 18 (SP)
   18:  SW        S0, 10 (SP)
   1C:  LW        S0, C (S1)
   20:  LW        A1, 0 (S0)
   24:  JAL       ~Func:get_variable
   28:  ADDIU     S0, S0, 4
   2C:  LW        A1, 0 (S0)
   30:  ADDIU     S0, S0, 4
   34:  COPY      A0, S1
   38:  JAL       ~Func:get_variable
   3C:  COPY      S3, V0
   40:  LW        A1, 0 (S0)
   44:  ADDIU     S0, S0, 4
   48:  COPY      A0, S1
   4C:  JAL       ~Func:get_variable
   50:  COPY      S2, V0
   54:  COPY      A0, S1
   58:  LW        A1, 0 (S0)
   5C:  JAL       ~Func:get_variable
   60:  COPY      S0, V0
   64:  LW        A0, 148 (S1)
   68:  JAL       ~Func:get_actor
   6C:  COPY      S1, V0
   70:  COPY      V1, V0
   74:  LW        V0, 8 (V1)
   78:  LBU       V0, 24 (V0)
   7C:  LW        A0, 8 (V1)
   80:  SUBU      S3, S3, V0
   84:  SB        S3, 194 (V1)
   88:  LBU       V0, 25 (A0)
   8C:  SUBU      S2, S2, V0
   90:  SB        S2, 195 (V1)
   94:  LBU       V0, 26 (A0)
   98:  SUBU      S0, S0, V0
   9C:  SB        S0, 196 (V1)
   A0:  LBU       A0, 27 (A0)
   A4:  SUBU      S1, S1, A0
   A8:  SB        S1, 197 (V1)
   AC:  LW        RA, 20 (SP)
   B0:  LW        S3, 1C (SP)
   B4:  LW        S2, 18 (SP)
   B8:  LW        S1, 14 (SP)
   BC:  LW        S0, 10 (SP)
   C0:  LI        V0, 2
   C4:  JR        RA
   C8:  ADDIU     SP, SP, 28
}

#new:Function $Function_80218B9C
{
    0:  ADDIU     SP, SP, FFD8
    4:  SDC1      F22, 20 (SP)
    8:  MOV.S     F22, F12
    C:  SDC1      F20, 18 (SP)
   10:  SW        RA, 10 (SP)
   14:  JAL       ~Func:length2D
   18:  MOV.S     F20, F14
   1C:  TRUNC.W.S F6, F20
   20:  MFC1      V0, F6
   24:  NOP
   28:  BLTZL     V0, .o30
   2C:  SUBU      V0, R0, V0
        .o30
   30:  MTC1      V0, F2
   34:  NOP
   38:  CVT.S.W   F2, F2
   3C:  DIV.S     F4, F2, F0
   40:  CLEAR     A0
   44:  LI        A2, 5A
   48:  COPY      A1, A0
   4C:  LA        A3, $FloatTable_8022FEC8
   54:  ANDI      V0, A2, FFFF
        .o58
   58:  ANDI      V1, A0, FFFF
   5C:  SUBU      V0, V0, V1
   60:  SRL       V1, V0, 1F
   64:  ADDU      V0, V0, V1
   68:  SRA       V0, V0, 1
   6C:  ADDU      V1, A0, V0
   70:  ANDI      V0, V1, FFFF
   74:  SLL       V0, V0, 2
   78:  ADDU      V0, V0, A3
   7C:  LWC1      F0, 0 (V0)
   80:  C.LT.S    F0, F4
   84:  NOP
   88:  BC1FL     .o94
   8C:  COPY      A2, V1
   90:  COPY      A0, V1
        .o94
   94:  ADDIU     A1, A1, 1
   98:  ANDI      V0, A1, FFFF
   9C:  SLTIU     V0, V0, 7
   A0:  BNE       V0, R0, .o58
   A4:  ANDI      V0, A2, FFFF
   A8:  ANDI      V0, A0, FFFF
   AC:  SLL       V0, V0, 2
   B0:  ANDI      V1, A2, FFFF
   B4:  LTF       F2, V0 ($FloatTable_8022FEC8)
   C0:  SLL       V1, V1, 2
   C4:  SUB.S     F2, F2, F4
   C8:  LTF       F0, V1 ($FloatTable_8022FEC8)
   D4:  SUB.S     F0, F0, F4
   D8:  ABS.S     F2, F2
   DC:  ABS.S     F0, F0
   E0:  C.LT.S    F2, F0
   E4:  NOP
   E8:  BC1F      .oF4
   EC:  COPY      V1, A2
   F0:  COPY      V1, A0
        .oF4
   F4:  MTC1      R0, F0
   F8:  NOP
   FC:  C.LT.S    F22, F0
  100:  NOP
  104:  BC1F      .o130
  108:  NOP
  10C:  C.LE.S    F0, F20
  110:  NOP
  114:  BC1F      .o128
  118:  LI        V0, B4
  11C:  SUBU      V1, V0, V1
  120:  MTC1      R0, F0
  124:  NOP
        .o128
  128:  C.LT.S    F22, F0
  12C:  NOP
        .o130
  130:  BC1F      .o148
  134:  NOP
  138:  C.LT.S    F20, F0
  13C:  NOP
  140:  BC1TL     .o148
  144:  ADDIU     V1, V1, B4
        .o148
  148:  MTC1      R0, F0
  14C:  NOP
  150:  C.LE.S    F0, F22
  154:  NOP
  158:  BC1F      .o174
  15C:  NOP
  160:  C.LT.S    F20, F0
  164:  NOP
  168:  BC1F      .o174
  16C:  LI        V0, 168
  170:  SUBU      V1, V0, V1
        .o174
  174:  LW        RA, 10 (SP)
  178:  LDC1      F22, 20 (SP)
  17C:  LDC1      F20, 18 (SP)
  180:  ANDI      V0, V1, FFFF
  184:  JR        RA
  188:  ADDIU     SP, SP, 28
}

#new:Function $Function_80218D28
{
    0:  ADDIU     SP, SP, FFD8
    4:  SW        S4, 20 (SP)
    8:  COPY      S4, A0
    C:  SW        RA, 24 (SP)
   10:  SW        S3, 1C (SP)
   14:  SW        S2, 18 (SP)
   18:  SW        S1, 14 (SP)
   1C:  SW        S0, 10 (SP)
   20:  LW        S2, C (S4)
   24:  LW        A1, 0 (S2)
   28:  JAL       ~Func:get_variable
   2C:  ADDIU     S2, S2, 4
   30:  LW        A1, 0 (S2)
   34:  ADDIU     S2, S2, 4
   38:  COPY      A0, S4
   3C:  JAL       ~Func:get_variable
   40:  COPY      S0, V0
   44:  LW        A1, 0 (S2)
   48:  ADDIU     S2, S2, 4
   4C:  COPY      A0, S4
   50:  JAL       ~Func:get_variable
   54:  COPY      S1, V0
   58:  COPY      S3, V0
   5C:  LW        A1, 0 (S2)
   60:  ADDIU     S2, S2, 4
   64:  COPY      A0, S4
   68:  JAL       ~Func:get_variable
   6C:  SUBU      S3, S3, S0
   70:  COPY      S0, V0
   74:  COPY      A0, S4
   78:  LW        A1, 0 (S2)
   7C:  JAL       ~Func:get_variable
   80:  SUBU      S0, S0, S1
   84:  BNE       S3, R0, .oA0
   88:  NOP
   8C:  BNE       S0, R0, .oA0
   90:  COPY      A0, S4
   94:  LW        A1, 0 (S2)
   98:  BEQ       R0, R0, .oC8
   9C:  COPY      A2, V0
        .oA0
   A0:  MTC1      S3, F12
   A4:  NOP
   A8:  CVT.S.W   F12, F12
   AC:  MTC1      S0, F14
   B0:  NOP
   B4:  JAL       $Function_80218B9C
   B8:  CVT.S.W   F14, F14
   BC:  COPY      A0, S4
   C0:  LW        A1, 0 (S2)
   C4:  ADDIU     A2, V0, FFA6
        .oC8
   C8:  JAL       ~Func:set_variable
   CC:  NOP
   D0:  LI        V0, 2
   D4:  LW        RA, 24 (SP)
   D8:  LW        S4, 20 (SP)
   DC:  LW        S3, 1C (SP)
   E0:  LW        S2, 18 (SP)
   E4:  LW        S1, 14 (SP)
   E8:  LW        S0, 10 (SP)
   EC:  JR        RA
   F0:  ADDIU     SP, SP, 28
}

% Origin: HEURISTIC
#new:Function $Function_80218E1C
{
    0:  ADDIU     SP, SP, FFD0
    4:  SW        S6, 28 (SP)
    8:  COPY      S6, A0
    C:  SW        RA, 2C (SP)
   10:  SW        S5, 24 (SP)
   14:  SW        S4, 20 (SP)
   18:  SW        S3, 1C (SP)
   1C:  SW        S2, 18 (SP)
   20:  SW        S1, 14 (SP)
   24:  SW        S0, 10 (SP)
   28:  LW        S5, C (S6)
   2C:  LW        A1, 0 (S5)
   30:  JAL       ~Func:get_variable
   34:  ADDIU     S5, S5, 4
   38:  LW        A1, 0 (S5)
   3C:  ADDIU     S5, S5, 4
   40:  COPY      A0, S6
   44:  JAL       ~Func:get_variable
   48:  COPY      S3, V0
   4C:  LW        A1, 0 (S5)
   50:  ADDIU     S5, S5, 4
   54:  COPY      A0, S6
   58:  JAL       ~Func:get_variable
   5C:  COPY      S2, V0
   60:  LW        A1, 0 (S5)
   64:  ADDIU     S5, S5, 4
   68:  COPY      A0, S6
   6C:  JAL       ~Func:get_variable
   70:  COPY      S0, V0
   74:  LW        A1, 0 (S5)
   78:  ADDIU     S5, S5, 4
   7C:  COPY      A0, S6
   80:  JAL       ~Func:get_variable
   84:  COPY      S4, V0
   88:  COPY      A0, S6
   8C:  LW        A1, 0 (S5)
   90:  JAL       ~Func:get_variable
   94:  COPY      S1, V0
   98:  SUBU      S3, S3, S4
   9C:  MTC1      S3, F4
   A0:  NOP
   A4:  CVT.S.W   F4, F4
   A8:  MUL.S     F4, F4, F4
   AC:  NOP
   B0:  SUBU      S2, S2, S1
   B4:  MTC1      S2, F2
   B8:  NOP
   BC:  CVT.S.W   F2, F2
   C0:  MUL.S     F2, F2, F2
   C4:  NOP
   C8:  SUBU      S0, S0, V0
   CC:  MTC1      S0, F0
   D0:  NOP
   D4:  CVT.S.W   F0, F0
   D8:  MUL.S     F0, F0, F0
   DC:  NOP
   E0:  ADD.S     F4, F4, F2
   E4:  ADD.S     F12, F4, F0
   E8:  SQRT.S    F0, F12
   EC:  C.EQ.S    F0, F0
   F0:  NOP
   F4:  BC1T      .o104
   F8:  ADDIU     S5, S5, 4
   FC:  JAL       ~Func:sqrtf
  100:  NOP
        .o104
  104:  LW        A1, 0 (S5)
  108:  TRUNC.W.S F6, F0
  10C:  MFC1      A2, F6
  110:  JAL       ~Func:set_variable
  114:  COPY      A0, S6
  118:  LW        RA, 2C (SP)
  11C:  LW        S6, 28 (SP)
  120:  LW        S5, 24 (SP)
  124:  LW        S4, 20 (SP)
  128:  LW        S3, 1C (SP)
  12C:  LW        S2, 18 (SP)
  130:  LW        S1, 14 (SP)
  134:  LW        S0, 10 (SP)
  138:  LI        V0, 2
  13C:  JR        RA
  140:  ADDIU     SP, SP, 30
}

#new:Function $Function_80218F60
{
    0:  ADDIU     SP, SP, FFE8
    4:  SW        RA, 10 (SP)
    8:  JAL       ~Func:mdl_set_all_fog_mode
    C:  LI        A0, 1
   10:  CLEAR     A0
   14:  LI        V0, 1
   18:  COPY      A1, A0
   1C:  COPY      A2, A0
   20:  LAW       V1, 801512F0
   28:  COPY      A3, A0
   2C:  JAL       ~Func:set_background_color_blend
   30:  SB        V0, 0 (V1)
   34:  LW        RA, 10 (SP)
   38:  LI        V0, 2
   3C:  JR        RA
   40:  ADDIU     SP, SP, 18
}

#new:Function $Function_80218FA4
{
    0:  ADDIU     SP, SP, FFE8
    4:  SW        RA, 10 (SP)
    8:  LW        V0, C (A0)
    C:  JAL       ~Func:get_variable
   10:  LW        A1, 0 (V0)
   14:  CLEAR     A0
   18:  COPY      A1, A0
   1C:  COPY      A2, A0
   20:  JAL       ~Func:set_background_color_blend
   24:  ANDI      A3, V0, FF
   28:  LW        RA, 10 (SP)
   2C:  LI        V0, 2
   30:  JR        RA
   34:  ADDIU     SP, SP, 18
}

PADDING: 80218FDC to 80218FE0 (0044841C to 00448420)
00000000

#new:Function $Function_80218FE0
{
    0:  ADDIU     SP, SP, FFA8
    4:  SW        S4, 20 (SP)
    8:  COPY      S4, A0
    C:  SW        RA, 24 (SP)
   10:  SW        S3, 1C (SP)
   14:  SW        S2, 18 (SP)
   18:  SW        S1, 14 (SP)
   1C:  SW        S0, 10 (SP)
   20:  SDC1      F30, 50 (SP)
   24:  SDC1      F28, 48 (SP)
   28:  SDC1      F26, 40 (SP)
   2C:  SDC1      F24, 38 (SP)
   30:  SDC1      F22, 30 (SP)
   34:  SDC1      F20, 28 (SP)
   38:  LW        S0, C (S4)
   3C:  LW        A1, 0 (S0)
   40:  JAL       ~Func:get_variable
   44:  ADDIU     S0, S0, 4
   48:  MTC1      V0, F0
   4C:  NOP
   50:  CVT.D.W   F0, F0
   54:  LW        S1, 0 (S0)
   58:  ADDIU     S0, S0, 4
   5C:  LIF       F3, 2.5625
   64:  MTC1      R0, F2
   68:  LIF       F20, 6.28318
   74:  LW        S3, 0 (S0)
   78:  DIV.D     F0, F0, F2
   7C:  CVT.S.D   F30, F0
   80:  MUL.S     F20, F30, F20
   84:  NOP
   88:  ADDIU     S0, S0, 4
   8C:  LW        S2, 0 (S0)
   90:  LIF       F0, 360.0
   98:  LW        S0, 4 (S0)
   9C:  DIV.S     F20, F20, F0
   A0:  JAL       ~Func:sin_rad
   A4:  MOV.S     F12, F20
   A8:  LIF       F12, 8.0
   B0:  NOP
   B4:  MUL.S     F12, F20, F12
   B8:  NOP
   BC:  LIF       F28, 150.0
   C4:  NOP
   C8:  MUL.S     F22, F0, F28
   CC:  NOP
   D0:  MTC1      R0, F26
   D4:  JAL       ~Func:sin_rad
   D8:  ADD.S     F22, F22, F26
   DC:  LIF       F2, 10.0
   E4:  NOP
   E8:  MUL.S     F24, F0, F2
   EC:  NOP
   F0:  MOV.S     F12, F20
   F4:  JAL       ~Func:cos_rad
   F8:  ADD.S     F24, F24, F26
   FC:  COPY      A0, S4
  100:  MUL.S     F20, F0, F28
  104:  NOP
  108:  COPY      A1, S1
  10C:  MFC1      A2, F22
  110:  LIF       F0, 20.0
  118:  LIF       F2, -50.0
  120:  DIV.S     F20, F20, F0
  124:  JAL       ~Func:set_float_variable
  128:  ADD.S     F20, F20, F2
  12C:  COPY      A0, S4
  130:  MFC1      A2, F24
  134:  JAL       ~Func:set_float_variable
  138:  COPY      A1, S3
  13C:  COPY      A0, S4
  140:  MFC1      A2, F20
  144:  JAL       ~Func:set_float_variable
  148:  COPY      A1, S2
  14C:  LIF       F0, 90.0
  154:  NOP
  158:  C.LT.S    F0, F30
  15C:  NOP
  160:  BC1F      .o190
  164:  CLEAR     A2
  168:  LIF       F0, 270.0
  170:  NOP
  174:  C.LT.S    F30, F0
  178:  NOP
  17C:  BC1TL     .o184
  180:  LI        A2, B4
        .o184
  184:  LIF       F0, 90.0
  18C:  NOP
        .o190
  190:  SUB.S     F0, F0, F30
  194:  ABS.S     F0, F0
  198:  TRUNC.W.S F4, F0
  19C:  MFC1      V0, F4
  1A0:  NOP
  1A4:  SLTI      V0, V0, 2D
  1A8:  BEQ       V0, R0, .o1CC
  1AC:  NOP
  1B0:  LIF       F0, 45.0
  1B8:  NOP
  1BC:  SUB.S     F0, F30, F0
  1C0:  ADD.S     F0, F0, F0
  1C4:  TRUNC.W.S F4, F0
  1C8:  MFC1      A2, F4
        .o1CC
  1CC:  LIF       F0, 270.0
  1D4:  NOP
  1D8:  SUB.S     F0, F0, F30
  1DC:  ABS.S     F0, F0
  1E0:  TRUNC.W.S F4, F0
  1E4:  MFC1      V0, F4
  1E8:  NOP
  1EC:  SLTI      V0, V0, 2D
  1F0:  BEQ       V0, R0, .o224
  1F4:  COPY      A0, S4
  1F8:  LIF       F0, 225.0
  200:  NOP
  204:  SUB.S     F0, F30, F0
  208:  ADD.S     F0, F0, F0
  20C:  LIF       F2, 180.0
  214:  NOP
  218:  ADD.S     F0, F0, F2
  21C:  TRUNC.W.S F4, F0
  220:  MFC1      A2, F4
        .o224
  224:  JAL       ~Func:set_variable
  228:  COPY      A1, S0
  22C:  LW        RA, 24 (SP)
  230:  LW        S4, 20 (SP)
  234:  LW        S3, 1C (SP)
  238:  LW        S2, 18 (SP)
  23C:  LW        S1, 14 (SP)
  240:  LW        S0, 10 (SP)
  244:  LDC1      F30, 50 (SP)
  248:  LDC1      F28, 48 (SP)
  24C:  LDC1      F26, 40 (SP)
  250:  LDC1      F24, 38 (SP)
  254:  LDC1      F22, 30 (SP)
  258:  LDC1      F20, 28 (SP)
  25C:  LI        V0, 2
  260:  JR        RA
  264:  ADDIU     SP, SP, 58
}

PADDING: 80219248 to 80219250 (00448688 to 00448690)
00000000 00000000

#new:Function $Function_80219250
{
    0:  ADDIU     SP, SP, FFA8
    4:  SW        S4, 20 (SP)
    8:  COPY      S4, A0
    C:  SW        RA, 24 (SP)
   10:  SW        S3, 1C (SP)
   14:  SW        S2, 18 (SP)
   18:  SW        S1, 14 (SP)
   1C:  SW        S0, 10 (SP)
   20:  SDC1      F30, 50 (SP)
   24:  SDC1      F28, 48 (SP)
   28:  SDC1      F26, 40 (SP)
   2C:  SDC1      F24, 38 (SP)
   30:  SDC1      F22, 30 (SP)
   34:  SDC1      F20, 28 (SP)
   38:  LW        S0, C (S4)
   3C:  LW        A1, 0 (S0)
   40:  JAL       ~Func:get_variable
   44:  ADDIU     S0, S0, 4
   48:  MTC1      V0, F0
   4C:  NOP
   50:  CVT.D.W   F0, F0
   54:  LW        S1, 0 (S0)
   58:  ADDIU     S0, S0, 4
   5C:  LIF       F3, 2.5625
   64:  MTC1      R0, F2
   68:  LIF       F20, 6.28318
   74:  LW        S3, 0 (S0)
   78:  DIV.D     F0, F0, F2
   7C:  CVT.S.D   F30, F0
   80:  MUL.S     F20, F30, F20
   84:  NOP
   88:  ADDIU     S0, S0, 4
   8C:  LW        S2, 0 (S0)
   90:  LIF       F0, 360.0
   98:  LW        S0, 4 (S0)
   9C:  DIV.S     F20, F20, F0
   A0:  JAL       ~Func:sin_rad
   A4:  MOV.S     F12, F20
   A8:  LIF       F12, 8.0
   B0:  NOP
   B4:  MUL.S     F12, F20, F12
   B8:  NOP
   BC:  LIF       F28, 150.0
   C4:  NOP
   C8:  MUL.S     F22, F0, F28
   CC:  NOP
   D0:  MTC1      R0, F26
   D4:  JAL       ~Func:sin_rad
   D8:  ADD.S     F22, F22, F26
   DC:  LIF       F2, 10.0
   E4:  NOP
   E8:  MUL.S     F24, F0, F2
   EC:  NOP
   F0:  MOV.S     F12, F20
   F4:  JAL       ~Func:cos_rad
   F8:  ADD.S     F24, F24, F26
   FC:  COPY      A0, S4
  100:  MUL.S     F20, F0, F28
  104:  NOP
  108:  COPY      A1, S1
  10C:  MFC1      A2, F22
  110:  LIF       F0, 20.0
  118:  LIF       F2, -50.0
  120:  DIV.S     F20, F20, F0
  124:  JAL       ~Func:set_float_variable
  128:  ADD.S     F20, F20, F2
  12C:  COPY      A0, S4
  130:  MFC1      A2, F24
  134:  JAL       ~Func:set_float_variable
  138:  COPY      A1, S3
  13C:  COPY      A0, S4
  140:  MFC1      A2, F20
  144:  JAL       ~Func:set_float_variable
  148:  COPY      A1, S2
  14C:  LIF       F0, 90.0
  154:  NOP
  158:  C.LT.S    F0, F30
  15C:  NOP
  160:  BC1F      .o190
  164:  CLEAR     A2
  168:  LIF       F0, 270.0
  170:  NOP
  174:  C.LT.S    F30, F0
  178:  NOP
  17C:  BC1TL     .o184
  180:  LI        A2, B4
        .o184
  184:  LIF       F0, 90.0
  18C:  NOP
        .o190
  190:  SUB.S     F0, F0, F30
  194:  ABS.S     F0, F0
  198:  TRUNC.W.S F4, F0
  19C:  MFC1      V0, F4
  1A0:  NOP
  1A4:  SLTI      V0, V0, 2D
  1A8:  BEQ       V0, R0, .o1CC
  1AC:  NOP
  1B0:  LIF       F0, 45.0
  1B8:  NOP
  1BC:  SUB.S     F0, F30, F0
  1C0:  ADD.S     F0, F0, F0
  1C4:  TRUNC.W.S F4, F0
  1C8:  MFC1      A2, F4
        .o1CC
  1CC:  LIF       F0, 270.0
  1D4:  NOP
  1D8:  SUB.S     F0, F0, F30
  1DC:  ABS.S     F0, F0
  1E0:  TRUNC.W.S F4, F0
  1E4:  MFC1      V0, F4
  1E8:  NOP
  1EC:  SLTI      V0, V0, 2D
  1F0:  BEQ       V0, R0, .o224
  1F4:  COPY      A0, S4
  1F8:  LIF       F0, 225.0
  200:  NOP
  204:  SUB.S     F0, F30, F0
  208:  ADD.S     F0, F0, F0
  20C:  LIF       F2, 180.0
  214:  NOP
  218:  ADD.S     F0, F0, F2
  21C:  TRUNC.W.S F4, F0
  220:  MFC1      A2, F4
        .o224
  224:  JAL       ~Func:set_variable
  228:  COPY      A1, S0
  22C:  LW        RA, 24 (SP)
  230:  LW        S4, 20 (SP)
  234:  LW        S3, 1C (SP)
  238:  LW        S2, 18 (SP)
  23C:  LW        S1, 14 (SP)
  240:  LW        S0, 10 (SP)
  244:  LDC1      F30, 50 (SP)
  248:  LDC1      F28, 48 (SP)
  24C:  LDC1      F26, 40 (SP)
  250:  LDC1      F24, 38 (SP)
  254:  LDC1      F22, 30 (SP)
  258:  LDC1      F20, 28 (SP)
  25C:  LI        V0, 2
  260:  JR        RA
  264:  ADDIU     SP, SP, 58
}

PADDING: 802194B8 to 802194C0 (004488F8 to 00448900)
00000000 00000000

% Origin: HEURISTIC
#new:Function $Function_802194C0
{
    0:  ADDIU     SP, SP, FFA8
    4:  SW        S4, 20 (SP)
    8:  COPY      S4, A0
    C:  SW        RA, 24 (SP)
   10:  SW        S3, 1C (SP)
   14:  SW        S2, 18 (SP)
   18:  SW        S1, 14 (SP)
   1C:  SW        S0, 10 (SP)
   20:  SDC1      F30, 50 (SP)
   24:  SDC1      F28, 48 (SP)
   28:  SDC1      F26, 40 (SP)
   2C:  SDC1      F24, 38 (SP)
   30:  SDC1      F22, 30 (SP)
   34:  SDC1      F20, 28 (SP)
   38:  LW        S0, C (S4)
   3C:  LW        A1, 0 (S0)
   40:  JAL       ~Func:get_variable
   44:  ADDIU     S0, S0, 4
   48:  MTC1      V0, F0
   4C:  NOP
   50:  CVT.D.W   F0, F0
   54:  LW        S1, 0 (S0)
   58:  ADDIU     S0, S0, 4
   5C:  LIF       F3, 2.5625
   64:  MTC1      R0, F2
   68:  LIF       F20, 6.28318
   74:  LW        S3, 0 (S0)
   78:  DIV.D     F0, F0, F2
   7C:  CVT.S.D   F30, F0
   80:  MUL.S     F20, F30, F20
   84:  NOP
   88:  ADDIU     S0, S0, 4
   8C:  LW        S2, 0 (S0)
   90:  LIF       F0, 360.0
   98:  LW        S0, 4 (S0)
   9C:  DIV.S     F20, F20, F0
   A0:  JAL       ~Func:sin_rad
   A4:  MOV.S     F12, F20
   A8:  LIF       F12, 8.0
   B0:  NOP
   B4:  MUL.S     F12, F20, F12
   B8:  NOP
   BC:  LIF       F28, 150.0
   C4:  NOP
   C8:  MUL.S     F22, F0, F28
   CC:  NOP
   D0:  MTC1      R0, F26
   D4:  JAL       ~Func:sin_rad
   D8:  ADD.S     F22, F22, F26
   DC:  LIF       F2, 10.0
   E4:  NOP
   E8:  MUL.S     F24, F0, F2
   EC:  NOP
   F0:  MOV.S     F12, F20
   F4:  JAL       ~Func:cos_rad
   F8:  ADD.S     F24, F24, F26
   FC:  COPY      A0, S4
  100:  MUL.S     F20, F0, F28
  104:  NOP
  108:  COPY      A1, S1
  10C:  MFC1      A2, F22
  110:  LIF       F0, 20.0
  118:  LIF       F2, -50.0
  120:  DIV.S     F20, F20, F0
  124:  JAL       ~Func:set_float_variable
  128:  ADD.S     F20, F20, F2
  12C:  COPY      A0, S4
  130:  MFC1      A2, F24
  134:  JAL       ~Func:set_float_variable
  138:  COPY      A1, S3
  13C:  COPY      A0, S4
  140:  MFC1      A2, F20
  144:  JAL       ~Func:set_float_variable
  148:  COPY      A1, S2
  14C:  LIF       F0, 90.0
  154:  NOP
  158:  C.LT.S    F0, F30
  15C:  NOP
  160:  BC1F      .o190
  164:  CLEAR     A2
  168:  LIF       F0, 270.0
  170:  NOP
  174:  C.LT.S    F30, F0
  178:  NOP
  17C:  BC1TL     .o184
  180:  LI        A2, B4
        .o184
  184:  LIF       F0, 90.0
  18C:  NOP
        .o190
  190:  SUB.S     F0, F0, F30
  194:  ABS.S     F0, F0
  198:  TRUNC.W.S F4, F0
  19C:  MFC1      V0, F4
  1A0:  NOP
  1A4:  SLTI      V0, V0, 2D
  1A8:  BEQ       V0, R0, .o1CC
  1AC:  NOP
  1B0:  LIF       F0, 45.0
  1B8:  NOP
  1BC:  SUB.S     F0, F30, F0
  1C0:  ADD.S     F0, F0, F0
  1C4:  TRUNC.W.S F4, F0
  1C8:  MFC1      A2, F4
        .o1CC
  1CC:  LIF       F0, 270.0
  1D4:  NOP
  1D8:  SUB.S     F0, F0, F30
  1DC:  ABS.S     F0, F0
  1E0:  TRUNC.W.S F4, F0
  1E4:  MFC1      V0, F4
  1E8:  NOP
  1EC:  SLTI      V0, V0, 2D
  1F0:  BEQ       V0, R0, .o224
  1F4:  COPY      A0, S4
  1F8:  LIF       F0, 225.0
  200:  NOP
  204:  SUB.S     F0, F30, F0
  208:  ADD.S     F0, F0, F0
  20C:  LIF       F2, 180.0
  214:  NOP
  218:  ADD.S     F0, F0, F2
  21C:  TRUNC.W.S F4, F0
  220:  MFC1      A2, F4
        .o224
  224:  JAL       ~Func:set_variable
  228:  COPY      A1, S0
  22C:  LW        RA, 24 (SP)
  230:  LW        S4, 20 (SP)
  234:  LW        S3, 1C (SP)
  238:  LW        S2, 18 (SP)
  23C:  LW        S1, 14 (SP)
  240:  LW        S0, 10 (SP)
  244:  LDC1      F30, 50 (SP)
  248:  LDC1      F28, 48 (SP)
  24C:  LDC1      F26, 40 (SP)
  250:  LDC1      F24, 38 (SP)
  254:  LDC1      F22, 30 (SP)
  258:  LDC1      F20, 28 (SP)
  25C:  LI        V0, 2
  260:  JR        RA
  264:  ADDIU     SP, SP, 58
}

PADDING: 80219728 to 80219730 (00448B68 to 00448B70)
00000000 00000000

#new:Function $Function_80219730
{
    0:  ADDIU     SP, SP, FFA8
    4:  SW        S4, 20 (SP)
    8:  COPY      S4, A0
    C:  SW        RA, 24 (SP)
   10:  SW        S3, 1C (SP)
   14:  SW        S2, 18 (SP)
   18:  SW        S1, 14 (SP)
   1C:  SW        S0, 10 (SP)
   20:  SDC1      F30, 50 (SP)
   24:  SDC1      F28, 48 (SP)
   28:  SDC1      F26, 40 (SP)
   2C:  SDC1      F24, 38 (SP)
   30:  SDC1      F22, 30 (SP)
   34:  SDC1      F20, 28 (SP)
   38:  LW        S0, C (S4)
   3C:  LW        A1, 0 (S0)
   40:  JAL       ~Func:get_variable
   44:  ADDIU     S0, S0, 4
   48:  MTC1      V0, F0
   4C:  NOP
   50:  CVT.D.W   F0, F0
   54:  LW        S1, 0 (S0)
   58:  ADDIU     S0, S0, 4
   5C:  LIF       F3, 2.5625
   64:  MTC1      R0, F2
   68:  LIF       F20, 6.28318
   74:  LW        S3, 0 (S0)
   78:  DIV.D     F0, F0, F2
   7C:  CVT.S.D   F30, F0
   80:  MUL.S     F20, F30, F20
   84:  NOP
   88:  ADDIU     S0, S0, 4
   8C:  LW        S2, 0 (S0)
   90:  LIF       F0, 360.0
   98:  LW        S0, 4 (S0)
   9C:  DIV.S     F20, F20, F0
   A0:  JAL       ~Func:sin_rad
   A4:  MOV.S     F12, F20
   A8:  LIF       F12, 8.0
   B0:  NOP
   B4:  MUL.S     F12, F20, F12
   B8:  NOP
   BC:  LIF       F28, 150.0
   C4:  NOP
   C8:  MUL.S     F22, F0, F28
   CC:  NOP
   D0:  MTC1      R0, F26
   D4:  JAL       ~Func:sin_rad
   D8:  ADD.S     F22, F22, F26
   DC:  LIF       F2, 10.0
   E4:  NOP
   E8:  MUL.S     F24, F0, F2
   EC:  NOP
   F0:  MOV.S     F12, F20
   F4:  JAL       ~Func:cos_rad
   F8:  ADD.S     F24, F24, F26
   FC:  COPY      A0, S4
  100:  MUL.S     F20, F0, F28
  104:  NOP
  108:  COPY      A1, S1
  10C:  MFC1      A2, F22
  110:  LIF       F0, 20.0
  118:  LIF       F2, -50.0
  120:  DIV.S     F20, F20, F0
  124:  JAL       ~Func:set_float_variable
  128:  ADD.S     F20, F20, F2
  12C:  COPY      A0, S4
  130:  MFC1      A2, F24
  134:  JAL       ~Func:set_float_variable
  138:  COPY      A1, S3
  13C:  COPY      A0, S4
  140:  MFC1      A2, F20
  144:  JAL       ~Func:set_float_variable
  148:  COPY      A1, S2
  14C:  LIF       F0, 90.0
  154:  NOP
  158:  C.LT.S    F0, F30
  15C:  NOP
  160:  BC1F      .o190
  164:  CLEAR     A2
  168:  LIF       F0, 270.0
  170:  NOP
  174:  C.LT.S    F30, F0
  178:  NOP
  17C:  BC1TL     .o184
  180:  LI        A2, B4
        .o184
  184:  LIF       F0, 90.0
  18C:  NOP
        .o190
  190:  SUB.S     F0, F0, F30
  194:  ABS.S     F0, F0
  198:  TRUNC.W.S F4, F0
  19C:  MFC1      V0, F4
  1A0:  NOP
  1A4:  SLTI      V0, V0, 2D
  1A8:  BEQ       V0, R0, .o1CC
  1AC:  NOP
  1B0:  LIF       F0, 45.0
  1B8:  NOP
  1BC:  SUB.S     F0, F30, F0
  1C0:  ADD.S     F0, F0, F0
  1C4:  TRUNC.W.S F4, F0
  1C8:  MFC1      A2, F4
        .o1CC
  1CC:  LIF       F0, 270.0
  1D4:  NOP
  1D8:  SUB.S     F0, F0, F30
  1DC:  ABS.S     F0, F0
  1E0:  TRUNC.W.S F4, F0
  1E4:  MFC1      V0, F4
  1E8:  NOP
  1EC:  SLTI      V0, V0, 2D
  1F0:  BEQ       V0, R0, .o224
  1F4:  COPY      A0, S4
  1F8:  LIF       F0, 225.0
  200:  NOP
  204:  SUB.S     F0, F30, F0
  208:  ADD.S     F0, F0, F0
  20C:  LIF       F2, 180.0
  214:  NOP
  218:  ADD.S     F0, F0, F2
  21C:  TRUNC.W.S F4, F0
  220:  MFC1      A2, F4
        .o224
  224:  JAL       ~Func:set_variable
  228:  COPY      A1, S0
  22C:  LW        RA, 24 (SP)
  230:  LW        S4, 20 (SP)
  234:  LW        S3, 1C (SP)
  238:  LW        S2, 18 (SP)
  23C:  LW        S1, 14 (SP)
  240:  LW        S0, 10 (SP)
  244:  LDC1      F30, 50 (SP)
  248:  LDC1      F28, 48 (SP)
  24C:  LDC1      F26, 40 (SP)
  250:  LDC1      F24, 38 (SP)
  254:  LDC1      F22, 30 (SP)
  258:  LDC1      F20, 28 (SP)
  25C:  LI        V0, 2
  260:  JR        RA
  264:  ADDIU     SP, SP, 58
}

#new:Function $Function_80219998
{
    0:  ADDIU     SP, SP, FFE8
    4:  LI        A0, 3D4
    8:  SW        RA, 10 (SP)
    C:  JAL       ~Func:set_world_fog_dist
   10:  LI        A1, 3E8
   14:  LI        A0, F
   18:  LI        A1, 5
   1C:  LI        A2, 37
   20:  JAL       ~Func:set_world_fog_color
   24:  LI        A3, FF
   28:  JAL       ~Func:enable_world_fog
   2C:  NOP
   30:  LW        RA, 10 (SP)
   34:  LI        V0, 2
   38:  JR        RA
   3C:  ADDIU     SP, SP, 18
}

PADDING: 802199D8 to 802199E0 (00448E18 to 00448E20)
00000000 00000000

#new:Function $Function_802199E0
{
    0:  ADDIU     SP, SP, FFE8
    4:  SW        RA, 10 (SP)
    8:  JAL       ~Func:enable_world_fog
    C:  NOP
   10:  LI        A0, 3B6
   14:  JAL       ~Func:set_world_fog_dist
   18:  LI        A1, 3E8
   1C:  LI        A0, 10
   20:  COPY      A1, A0
   24:  COPY      A2, A0
   28:  JAL       ~Func:set_world_fog_color
   2C:  LI        A3, FF
   30:  LA        V0, 800B1D80
   38:  LI        V1, 14
   3C:  SH        V1, 584 (V0)
   40:  SH        V1, 586 (V0)
   44:  LI        V1, 1C
   48:  SH        V1, 588 (V0)
   4C:  LW        RA, 10 (SP)
   50:  LI        V0, 2
   54:  JR        RA
   58:  ADDIU     SP, SP, 18
}

PADDING: 80219A3C to 80219A40 (00448E7C to 00448E80)
00000000

% Origin: HEURISTIC
#new:Function $Function_80219A40
{
    0:  ADDIU     SP, SP, FFC0
    4:  SW        S6, 38 (SP)
    8:  COPY      S6, A0
    C:  ADDIU     A1, SP, 10
   10:  ADDIU     A2, SP, 14
   14:  ADDIU     A3, SP, 18
   18:  SW        RA, 3C (SP)
   1C:  SW        S5, 34 (SP)
   20:  SW        S4, 30 (SP)
   24:  SW        S3, 2C (SP)
   28:  SW        S2, 28 (SP)
   2C:  SW        S1, 24 (SP)
   30:  JAL       ~Func:mdl_get_copied_vertices
   34:  SW        S0, 20 (SP)
   38:  LW        V0, 18 (SP)
   3C:  BLEZ      V0, .o188
   40:  CLEAR     S0
   44:  LA        V1, $???_802336E0
   4C:  SLL       V0, S6, 1
   50:  ADDU      S4, V0, V1
   54:  LI        S3, 55555556
   5C:  ORI       S5, R0, 8000
   60:  MULT      S0, S3
        .o64
   64:  SRA       S2, S0, 1F
   68:  MFHI      V1
   6C:  SUBU      V1, V1, S2
   70:  SLL       V0, V1, 1
   74:  ADDU      V0, V0, V1
   78:  SUBU      V0, S0, V0
   7C:  LHU       V1, 0 (S4)
   80:  ADDIU     V0, V0, 1
   84:  MULT      V1, V0
   88:  SLL       V0, S0, 4
   8C:  MFLO      V1
   90:  ADDU      A0, V1, S0
   94:  LW        V1, 14 (SP)
   98:  ANDI      A0, A0, FFFF
   9C:  JAL       ~Func:sins
   A0:  ADDU      S1, V1, V0
   A4:  SLL       V0, V0, 10
   A8:  SRA       V0, V0, 10
   AC:  ADDU      V0, V0, S5
   B0:  SRL       V1, V0, 1F
   B4:  ADDU      V0, V0, V1
   B8:  SLL       V0, V0, F
   BC:  SRA       V0, V0, 10
   C0:  SLL       V1, V0, 2
   C4:  ADDU      V1, V1, V0
   C8:  SLL       V0, V1, 5
   CC:  SUBU      V1, V0, V1
   D0:  BGEZ      V1, .oDC
   D4:  COPY      V0, V1
   D8:  ADDIU     V0, V1, 7FFF
        .oDC
   DC:  SRA       A0, V0, F
   E0:  ADDIU     V0, A0, 64
   E4:  SB        V0, E (S1)
   E8:  ADDIU     V0, A0, 32
   EC:  SUBU      V1, S0, S2
   F0:  SRA       A1, V1, 1
   F4:  MULT      A1, S3
   F8:  SB        V0, D (S1)
   FC:  LHU       A0, 0 (S4)
  100:  SRA       V1, V1, 1F
  104:  SRL       A2, A0, F
  108:  MFHI      T1
  10C:  SUBU      V1, T1, V1
  110:  SLL       V0, V1, 1
  114:  ADDU      V0, V0, V1
  118:  SUBU      A1, A1, V0
  11C:  ADDIU     A1, A1, 1
  120:  SLL       A1, A1, F
  124:  MULT      A2, A1
  128:  SRL       A0, A0, E
  12C:  SLL       A0, A0, F
  130:  MFLO      V1
  134:  ADDU      A0, V1, A0
  138:  ADDU      A0, A0, S0
  13C:  JAL       ~Func:sins
  140:  ANDI      A0, A0, FFFF
  144:  SLL       V0, V0, 10
  148:  SRA       V0, V0, 10
  14C:  LBU       V1, C (S1)
  150:  ADDU      V0, V0, S5
  154:  MULT      V1, V0
  158:  MFLO      V1
  15C:  BGEZ      V1, .o170
  160:  SRA       V0, V1, 10
  164:  ORI       V0, R0, FFFF
  168:  ADDU      V1, V1, V0
  16C:  SRA       V0, V1, 10
        .o170
  170:  SB        V0, C (S1)
  174:  LW        V0, 18 (SP)
  178:  ADDIU     S0, S0, 1
  17C:  SLT       V0, S0, V0
  180:  BNE       V0, R0, .o64
  184:  MULT      S0, S3
        .o188
  188:  LA        V1, 8009A66C
  190:  LW        V0, 0 (V1)
  194:  COPY      A0, S6
  198:  COPY      S0, V0
  19C:  ADDIU     V0, V0, 8
  1A0:  SW        V0, 0 (V1)
  1A4:  LUI       V0, DE00
  1A8:  JAL       ~Func:mdl_get_copied_gfx
  1AC:  SW        V0, 0 (S0)
  1B0:  SW        V0, 4 (S0)
  1B4:  LA        V0, $???_802336E0
  1BC:  SLL       V1, S6, 1
  1C0:  ADDU      V1, V1, V0
  1C4:  LHU       V0, 0 (V1)
  1C8:  ADDIU     V0, V0, 253
  1CC:  SH        V0, 0 (V1)
  1D0:  LW        RA, 3C (SP)
  1D4:  LW        S6, 38 (SP)
  1D8:  LW        S5, 34 (SP)
  1DC:  LW        S4, 30 (SP)
  1E0:  LW        S3, 2C (SP)
  1E4:  LW        S2, 28 (SP)
  1E8:  LW        S1, 24 (SP)
  1EC:  LW        S0, 20 (SP)
  1F0:  JR        RA
  1F4:  ADDIU     SP, SP, 40
}

#new:Function $Function_80219C38
{
    0:  ADDIU     SP, SP, FFE8
    4:  CLEAR     A0
    8:  SW        RA, 10 (SP)
    C:  JAL       ~Func:playFX_45
   10:  LI        A1, 10
   14:  LW        RA, 10 (SP)
   18:  LI        V0, 2
   1C:  JR        RA
   20:  ADDIU     SP, SP, 18
}

#new:Function $Function_80219C5C
{
    0:  ADDIU     SP, SP, FFD0
    4:  SW        S1, 14 (SP)
    8:  COPY      S1, A0
    C:  SW        RA, 20 (SP)
   10:  SW        S3, 1C (SP)
   14:  SW        S2, 18 (SP)
   18:  SW        S0, 10 (SP)
   1C:  SDC1      F20, 28 (SP)
   20:  LW        S0, C (S1)
   24:  LW        A1, 0 (S0)
   28:  JAL       ~Func:get_variable
   2C:  ADDIU     S0, S0, 4
   30:  LI        V1, 66666667
   38:  MULT      V0, V1
   3C:  SRA       V0, V0, 1F
   40:  LIF       F0, 6.28318
   4C:  MFHI      A3
   50:  SRA       V1, A3, 2
   54:  SUBU      V1, V1, V0
   58:  MTC1      V1, F12
   5C:  NOP
   60:  CVT.S.W   F12, F12
   64:  MUL.S     F12, F12, F0
   68:  NOP
   6C:  LIF       F0, 360.0
   74:  LIF       F2, 8.0
   7C:  DIV.S     F12, F12, F0
   80:  MUL.S     F12, F12, F2
   84:  NOP
   88:  LW        S2, 0 (S0)
   8C:  ADDIU     S0, S0, 4
   90:  LW        S3, 0 (S0)
   94:  JAL       ~Func:sin_rad
   98:  LW        S0, 4 (S0)
   9C:  COPY      A0, S1
   A0:  LIF       F2, 10.0
   A8:  COPY      A1, S2
   AC:  MUL.S     F20, F0, F2
   B0:  NOP
   B4:  JAL       ~Func:set_variable
   B8:  CLEAR     A2
   BC:  COPY      A0, S1
   C0:  TRUNC.W.S F4, F20
   C4:  MFC1      A2, F4
   C8:  JAL       ~Func:set_variable
   CC:  COPY      A1, S3
   D0:  COPY      A0, S1
   D4:  COPY      A1, S0
   D8:  JAL       ~Func:set_variable
   DC:  CLEAR     A2
   E0:  LW        RA, 20 (SP)
   E4:  LW        S3, 1C (SP)
   E8:  LW        S2, 18 (SP)
   EC:  LW        S1, 14 (SP)
   F0:  LW        S0, 10 (SP)
   F4:  LDC1      F20, 28 (SP)
   F8:  LI        V0, 2
   FC:  JR        RA
  100:  ADDIU     SP, SP, 30
}

#new:Function $Function_80219D60
{
    0:  ADDIU     SP, SP, FFA0
    4:  SW        S0, 20 (SP)
    8:  COPY      S0, A0
    C:  SW        RA, 28 (SP)
   10:  SW        S1, 24 (SP)
   14:  SDC1      F30, 58 (SP)
   18:  SDC1      F28, 50 (SP)
   1C:  SDC1      F26, 48 (SP)
   20:  SDC1      F24, 40 (SP)
   24:  SDC1      F22, 38 (SP)
   28:  SDC1      F20, 30 (SP)
   2C:  LW        V0, C (S0)
   30:  JAL       ~Func:get_variable
   34:  LW        A1, 0 (V0)
   38:  COPY      S1, V0
   3C:  LI        A0, 1
   40:  BEQ       S1, A0, .o100
   44:  SW        S1, 70 (S0)
   48:  SLTI      V0, S1, 2
   4C:  BEQ       V0, R0, .o64
   50:  LI        V0, 2
   54:  BEQ       S1, R0, .o7C
   58:  LI        V0, 8E
   5C:  BEQ       R0, R0, .o400
   60:  NOP
        .o64
   64:  BEQ       S1, V0, .o27C
   68:  LI        V0, 3
   6C:  BEQ       S1, V0, .oBC
   70:  LI        V1, 5B
   74:  BEQ       R0, R0, .o400
   78:  NOP
        .o7C
   7C:  LIF       F4, 142.0
   84:  LIF       F30, -118.0
   8C:  LI        V1, FF8A
   90:  SW        R0, 14 (SP)
   94:  SWC1      F4, 10 (SP)
   98:  SW        V0, 90 (S0)
   9C:  LI        V0, 2C
   A0:  SW        V0, 9C (S0)
   A4:  LI        V0, 3
   A8:  SW        R0, 94 (S0)
   AC:  SW        V1, 98 (S0)
   B0:  SW        V1, A0 (S0)
   B4:  BEQ       R0, R0, .oF0
   B8:  SW        V0, A4 (S0)
        .oBC
   BC:  LIF       F4, 91.0
   C4:  LIF       F30, -118.0
   CC:  LI        V0, FF8A
   D0:  SW        R0, 14 (SP)
   D4:  SWC1      F4, 10 (SP)
   D8:  SW        V1, 90 (S0)
   DC:  SW        R0, 94 (S0)
   E0:  SW        V0, 98 (S0)
   E4:  SW        V1, 9C (S0)
   E8:  SW        V0, A0 (S0)
   EC:  SW        S1, A4 (S0)
        .oF0
   F0:  SW        R0, A8 (S0)
   F4:  SW        R0, B0 (S0)
   F8:  BEQ       R0, R0, .o400
   FC:  SW        A0, 70 (S0)
        .o100
  100:  LW        V0, A8 (S0)
  104:  LW        V1, A4 (S0)
  108:  ADDU      V0, V0, V1
  10C:  SW        V0, A8 (S0)
  110:  SLTI      V0, V0, 2E
  114:  BNE       V0, R0, .o124
  118:  NOP
  11C:  LI        V0, 2D
  120:  SW        V0, A8 (S0)
        .o124
  124:  LWC1      F4, 90 (S0)
  128:  CVT.S.W   F4, F4
  12C:  SWC1      F4, 10 (SP)
  130:  LWC1      F4, 94 (S0)
  134:  CVT.S.W   F4, F4
  138:  SWC1      F4, 14 (SP)
  13C:  LWC1      F12, A8 (S0)
  140:  CVT.S.W   F12, F12
  144:  LIF       F26, 6.28318
  150:  LWC1      F30, 98 (S0)
  154:  CVT.S.W   F30, F30
  158:  MUL.S     F12, F12, F26
  15C:  NOP
  160:  LWC1      F28, 9C (S0)
  164:  CVT.S.W   F28, F28
  168:  LIF       F24, 360.0
  170:  LWC1      F4, A0 (S0)
  174:  CVT.S.W   F4, F4
  178:  SWC1      F4, 18 (SP)
  17C:  JAL       ~Func:sin_rad
  180:  DIV.S     F12, F12, F24
  184:  CVT.D.S   F0, F0
  188:  LIF       F23, 1.875
  190:  MTC1      R0, F22
  194:  LWC1      F4, 10 (SP)
  198:  SUB.D     F0, F22, F0
  19C:  CVT.D.S   F20, F4
  1A0:  MUL.D     F20, F20, F0
  1A4:  NOP
  1A8:  LWC1      F12, A8 (S0)
  1AC:  CVT.S.W   F12, F12
  1B0:  MUL.S     F12, F12, F26
  1B4:  NOP
  1B8:  JAL       ~Func:sin_rad
  1BC:  DIV.S     F12, F12, F24
  1C0:  MUL.S     F0, F28, F0
  1C4:  NOP
  1C8:  LW        V0, A8 (S0)
  1CC:  SLL       V0, V0, 1
  1D0:  MTC1      V0, F12
  1D4:  NOP
  1D8:  CVT.S.W   F12, F12
  1DC:  MUL.S     F12, F12, F26
  1E0:  NOP
  1E4:  CVT.D.S   F0, F0
  1E8:  ADD.D     F20, F20, F0
  1EC:  DIV.S     F12, F12, F24
  1F0:  CVT.S.D   F20, F20
  1F4:  JAL       ~Func:sin_rad
  1F8:  SWC1      F20, 10 (SP)
  1FC:  LWC1      F12, A8 (S0)
  200:  CVT.S.W   F12, F12
  204:  MUL.S     F12, F12, F26
  208:  NOP
  20C:  LIF       F2, 90.0
  214:  NOP
  218:  MUL.S     F0, F0, F2
  21C:  NOP
  220:  LWC1      F4, 14 (SP)
  224:  ADD.S     F4, F4, F0
  228:  DIV.S     F12, F12, F24
  22C:  JAL       ~Func:sin_rad
  230:  SWC1      F4, 14 (SP)
  234:  LWC1      F12, A8 (S0)
  238:  CVT.S.W   F12, F12
  23C:  MUL.S     F12, F12, F26
  240:  NOP
  244:  CVT.D.S   F0, F0
  248:  SUB.D     F22, F22, F0
  24C:  CVT.D.S   F20, F30
  250:  MUL.D     F20, F20, F22
  254:  NOP
  258:  JAL       ~Func:sin_rad
  25C:  DIV.S     F12, F12, F24
  260:  LWC1      F4, 18 (SP)
  264:  MUL.S     F0, F4, F0
  268:  NOP
  26C:  CVT.D.S   F0, F0
  270:  ADD.D     F20, F20, F0
  274:  BEQ       R0, R0, .o3F0
  278:  LI        V0, 2D
        .o27C
  27C:  LW        V0, A8 (S0)
  280:  LW        V1, A4 (S0)
  284:  ADDU      V0, V0, V1
  288:  SW        V0, A8 (S0)
  28C:  SLTI      V0, V0, 5B
  290:  BNE       V0, R0, .o29C
  294:  LI        V0, 5A
  298:  SW        V0, A8 (S0)
        .o29C
  29C:  LWC1      F4, 90 (S0)
  2A0:  CVT.S.W   F4, F4
  2A4:  SWC1      F4, 10 (SP)
  2A8:  LWC1      F4, 94 (S0)
  2AC:  CVT.S.W   F4, F4
  2B0:  SWC1      F4, 14 (SP)
  2B4:  LWC1      F12, A8 (S0)
  2B8:  CVT.S.W   F12, F12
  2BC:  LIF       F26, 6.28318
  2C8:  LWC1      F30, 98 (S0)
  2CC:  CVT.S.W   F30, F30
  2D0:  MUL.S     F12, F12, F26
  2D4:  NOP
  2D8:  LWC1      F28, 9C (S0)
  2DC:  CVT.S.W   F28, F28
  2E0:  LIF       F24, 360.0
  2E8:  LWC1      F4, A0 (S0)
  2EC:  CVT.S.W   F4, F4
  2F0:  SWC1      F4, 18 (SP)
  2F4:  JAL       ~Func:sin_rad
  2F8:  DIV.S     F12, F12, F24
  2FC:  CVT.D.S   F0, F0
  300:  LIF       F23, 1.875
  308:  MTC1      R0, F22
  30C:  LWC1      F4, 10 (SP)
  310:  SUB.D     F0, F22, F0
  314:  CVT.D.S   F20, F4
  318:  MUL.D     F20, F20, F0
  31C:  NOP
  320:  LWC1      F12, A8 (S0)
  324:  CVT.S.W   F12, F12
  328:  MUL.S     F12, F12, F26
  32C:  NOP
  330:  JAL       ~Func:sin_rad
  334:  DIV.S     F12, F12, F24
  338:  MUL.S     F0, F28, F0
  33C:  NOP
  340:  LW        V0, A8 (S0)
  344:  SLL       V0, V0, 1
  348:  MTC1      V0, F12
  34C:  NOP
  350:  CVT.S.W   F12, F12
  354:  MUL.S     F12, F12, F26
  358:  NOP
  35C:  CVT.D.S   F0, F0
  360:  ADD.D     F20, F20, F0
  364:  DIV.S     F12, F12, F24
  368:  CVT.S.D   F20, F20
  36C:  JAL       ~Func:sin_rad
  370:  SWC1      F20, 10 (SP)
  374:  LWC1      F12, A8 (S0)
  378:  CVT.S.W   F12, F12
  37C:  MUL.S     F12, F12, F26
  380:  NOP
  384:  LIF       F2, 90.0
  38C:  NOP
  390:  MUL.S     F0, F0, F2
  394:  NOP
  398:  LWC1      F4, 14 (SP)
  39C:  ADD.S     F4, F4, F0
  3A0:  DIV.S     F12, F12, F24
  3A4:  JAL       ~Func:sin_rad
  3A8:  SWC1      F4, 14 (SP)
  3AC:  LWC1      F12, A8 (S0)
  3B0:  CVT.S.W   F12, F12
  3B4:  MUL.S     F12, F12, F26
  3B8:  NOP
  3BC:  CVT.D.S   F0, F0
  3C0:  SUB.D     F22, F22, F0
  3C4:  CVT.D.S   F20, F30
  3C8:  MUL.D     F20, F20, F22
  3CC:  NOP
  3D0:  JAL       ~Func:sin_rad
  3D4:  DIV.S     F12, F12, F24
  3D8:  LWC1      F4, 18 (SP)
  3DC:  MUL.S     F0, F4, F0
  3E0:  NOP
  3E4:  CVT.D.S   F0, F0
  3E8:  ADD.D     F20, F20, F0
  3EC:  LI        V0, 5A
        .o3F0
  3F0:  LW        V1, A8 (S0)
  3F4:  BNE       V1, V0, .o400
  3F8:  CVT.S.D   F30, F20
  3FC:  SW        S1, B0 (S0)
        .o400
  400:  LWC1      F4, 10 (SP)
  404:  TRUNC.W.S F4, F4
  408:  SWC1      F4, 84 (S0)
  40C:  LWC1      F4, 14 (SP)
  410:  TRUNC.W.S F4, F4
  414:  SWC1      F4, 88 (S0)
  418:  TRUNC.W.S F4, F30
  41C:  SWC1      F4, 8C (S0)
  420:  LW        RA, 28 (SP)
  424:  LW        S1, 24 (SP)
  428:  LW        S0, 20 (SP)
  42C:  LDC1      F30, 58 (SP)
  430:  LDC1      F28, 50 (SP)
  434:  LDC1      F26, 48 (SP)
  438:  LDC1      F24, 40 (SP)
  43C:  LDC1      F22, 38 (SP)
  440:  LDC1      F20, 30 (SP)
  444:  LI        V0, 2
  448:  JR        RA
  44C:  ADDIU     SP, SP, 60
}

#new:Formation $Formation_00
{
	$SpikedGoomba 00000002 00000000 00000000 00000000 00000000 00000000
}

#new:Formation $Formation_01
{
	$ParagoombaB 00000005 0000000A 00000000 00000000 00000000 00000000
	$ParagoombaA 00000006 00000009 00000000 00000000 00000000 00000000
}

#new:Formation $Formation_02
{
	$JrTroopa1 00000002 00000000 00000000 00000000 00000000 00000000
}

#new:Formation $Formation_03
{
	$JrTroopa2 00000002 00000000 00000000 00000000 00000000 00000000
}

#new:Formation $Formation_04
{
	$JrTroopa3 00000002 00000000 00000000 00000000 00000000 00000000
}

#new:Formation $Formation_05
{
	$JrTroopa4 00000001 00000000 00000000 00000000 00000000 00000000
}

#new:Formation $Formation_06
{
	$JrTroopa5 00000002 00000000 00000000 00000000 00000000 00000000
}

#new:Formation $Formation_07
{
	$JrTroopa6 00000002 00000000 00000000 00000000 00000000 00000000
}

#new:FormationTable $FormationTable
{
	$SJIS_80234E44 00000001 $Formation_00 $Stage_8023274C 00000000
	$SJIS_80234E28 00000002 $Formation_01 $Stage_8023274C 00000000
	$SJIS_80234E1C 00000001 $Formation_02 $Stage_80232FBC 00000000
	$SJIS_80234E10 00000001 $Formation_03 $Stage_80233640 00000000
	$SJIS_80234E04 00000001 $Formation_04 $Stage_802336AC 00000000
	$SJIS_80234DF8 00000001 $Formation_05 $Stage_80234C80 00000000
	$SJIS_80234DEC 00000001 $Formation_06 $Stage_80233AC4 00000000
	$SJIS_80234DE0 00000001 $Formation_07 $Stage_80234DAC 00000000
	00000000 00000000 00000000 00000000 00000000
}

#new:StageTable $StageTable
{
	$ASCII_80234E80 $Stage_80232300
	$ASCII_80234E78 $Stage_8023274C
	$ASCII_80234E70 $Stage_80232B9C
	$ASCII_80234E68 $Stage_80232FBC
	$ASCII_80234E60 $Stage_8023341C
	00000000 00000000
}

#new:DefenseTable $DefenseTable_8021A390
{
	.Element:Normal 00000000
	.Element:End
}

#new:StatusTable $StatusTable_8021A39C
{
	.Status:Normal      0`
	.Status:Default     0`
	.Status:Sleep     100`
	.Status:Poison     80`
	.Status:Frozen    100`
	.Status:Dizzy     100`
	.Status:Fear       80`
	.Status:Static     80`
	.Status:Paralyze  100`
	.Status:Shrink    100`
	.Status:Stop      100`
	.Status:DefaultTurnMod    0`
	.Status:SleepTurnMod      0`
	.Status:PoisonTurnMod     0`
	.Status:FrozenTurnMod     0`
	.Status:DizzyTurnMod      0`
	.Status:FearTurnMod       0`
	.Status:StaticTurnMod     0`
	.Status:ParalyzeTurnMod   0`
	.Status:ShrinkTurnMod     0`
	.Status:StopTurnMod       0`
	.Status:End
}

#new:PartsTable $PartsTable_8021A448
{
	00800000 01000000 001800FF $IdleAnimations_8021A494 $DefenseTable_8021A390 00000010 00000000 00F40000 00000000
}

#new:Actor $SpikedGoomba
{
	% stats
	[Index]         9b
	[Level]         6`b
	[MaxHP]         2`b
	[Coins]         1`b
	[Flags]       00000000
	[StatusTable] $StatusTable_8021A39C
	% ai
	[PartsCount]    1`s
	[PartsTable]  $PartsTable_8021A448
	[Script]      $Script_Init_8021BEBC
	% move effectiveness
	[Escape]       90`b
	[Item]        100`b
	[AirLift]      95`b
	[Hurricane]    90`b % Bow's "Spook" as well
	[UpAndAway]    95`b
	[PowerBounce] 100`b
	[SpinSmash]     0`b % weight (0-4)
	% ui positions
	[Size]         24`b  28`b % width height
	[HealthBar]     0`b   0`b % dx dy
	[StatusTurn]  -10`b  20`b % dx dy
	[StatusIcon]   10`b  20`b % dx dy
}

#new:IdleAnimations $IdleAnimations_8021A494
{
	.Status:Normal    00270001
	.Status:Stone     00270000
	.Status:Sleep     0027000A
	.Status:Poison    00270001
	.Status:Stop      00270000
	.Status:Static    00270001
	.Status:Paralyze  00270000
	.Status:Dizzy     00270009
	.Status:Fear      00270009
	.Status:End
}

#new:IdleAnimations $IdleAnimations_8021A4E0
{
	.Status:Normal    00270003
	.Status:Stone     00270000
	.Status:Sleep     0027000A
	.Status:Poison    00270001
	.Status:Stop      00270000
	.Status:Static    00270003
	.Status:Paralyze  00270000
	.Status:Dizzy     00270009
	.Status:Fear      00270009
	.Status:End
}

% Origin: HEURISTIC
#new:Script $Script_8021A52C
{
    0:  Call  BindTakeTurn      ( .Actor:Self $Script_TakeTurn_8021B19C )
   14:  Call  BindIdle  ( .Actor:Self $Script_Idle_8021A578 )
   28:  Call  BindHandleEvent   ( .Actor:Self $Script_HandleEvent_8021A854 )
   3C:  Return
   44:  End
}

#new:Script $Script_Idle_8021A578
{
    0:  Label  A
    C:  Call  RandInt   ( 00000050 *Var0 )
   20:  Add   *Var0  00000050
   30:  Loop  *Var0
   3C:  	Label  0
   48:  	Call  GetStatusFlags    ( .Actor:Self *Var1 )
   5C:  	If  *Var1  &  ~Flags:StatusFlags:Sleep|Frozen|Fear|Paralyze|Dizzy|Stone|Stop % 35D000
   6C:  		Wait  1`
   78:  		Goto  0
   84:  	EndIf
   8C:  	Wait  1`
   98:  EndLoop
   A0:  Call  GetActorPos       ( .Actor:Self *Var0 *Var1 *Var2 )
   BC:  Add   *Var0  00000005
   CC:  Call  SetActorIdleSpeed ( .Actor:Self *Fixed[1.0] )
   E0:  Call  SetIdleAnimations ( .Actor:Self 00000001 $IdleAnimations_8021A4E0 )
   F8:  Call  SetIdleGoal       ( .Actor:Self *Var0 *Var1 *Var2 )
  114:  Call  IdleRunToGoal     ( .Actor:Self  0` )
  128:  Call  SetIdleAnimations ( .Actor:Self 00000001 $IdleAnimations_8021A494 )
  140:  Loop  00000014
  14C:  	Label  1
  158:  	Call  GetStatusFlags    ( .Actor:Self *Var1 )
  16C:  	If  *Var1  &  ~Flags:StatusFlags:Sleep|Frozen|Fear|Paralyze|Dizzy|Stone|Stop % 35D000
  17C:  		Wait  1`
  188:  		Goto  1
  194:  	EndIf
  19C:  	Wait  1`
  1A8:  EndLoop
  1B0:  Call  GetActorPos       ( .Actor:Self *Var0 *Var1 *Var2 )
  1CC:  Sub   *Var0  00000005
  1DC:  Call  SetActorIdleSpeed ( .Actor:Self *Fixed[1.0] )
  1F0:  Call  SetIdleAnimations ( .Actor:Self 00000001 $IdleAnimations_8021A4E0 )
  208:  Call  SetIdleGoal       ( .Actor:Self *Var0 *Var1 *Var2 )
  224:  Call  IdleRunToGoal     ( .Actor:Self  0` )
  238:  Call  SetIdleAnimations ( .Actor:Self 00000001 $IdleAnimations_8021A494 )
  250:  Loop  00000050
  25C:  	Label  2
  268:  	Call  GetStatusFlags    ( .Actor:Self *Var1 )
  27C:  	If  *Var1  &  ~Flags:StatusFlags:Sleep|Frozen|Fear|Paralyze|Dizzy|Stone|Stop % 35D000
  28C:  		Wait  1`
  298:  		Goto  2
  2A4:  	EndIf
  2AC:  	Wait  1`
  2B8:  EndLoop
  2C0:  Goto  A
  2CC:  Return
  2D4:  End
}

#new:Script $Script_HandleEvent_8021A854
{
    0:  Call  UseIdleAnimation  ( .Actor:Self .False )
   14:  Call  EnableIdleScript  ( .Actor:Self 00000000 )
   28:  Call  SetActorScale     ( .Actor:Self *Fixed[1.0] *Fixed[1.0] *Fixed[1.0] )
   44:  Call  GetLastEvent      ( .Actor:Self *Var0 )
   58:  Switch  *Var0
   64:  	CaseOR  ==  .Event:HitCombo % 9
   70:  	CaseOR  ==  .Event:Hit % A
   7C:  		SetConst  *Var0  00000001
   8C:  		SetConst  *Var1  00270006
   9C:  		ExecWait  DoNormalHit
   A8:  	EndCaseGroup
   B0:  	Case  ==  .Event:BurnHit % E
   BC:  		SetConst  *Var0  00000001
   CC:  		SetConst  *Var1  00270007
   DC:  		SetConst  *Var2  00270008
   EC:  		ExecWait  DoBurnHit
   F8:  	Case  ==  .Event:BurnDeath % 24
  104:  		SetConst  *Var0  00000001
  114:  		SetConst  *Var1  00270007
  124:  		SetConst  *Var2  00270008
  134:  		ExecWait  DoBurnHit
  140:  		SetConst  *Var0  00000001
  150:  		SetConst  *Var1  00270008
  160:  		ExecWait  DoDeath
  16C:  		Return
  174:  	Case  ==  .Event:SpinSmashHit % B
  180:  		SetConst  *Var0  00000001
  190:  		SetConst  *Var1  00270006
  1A0:  		ExecWait  DoSpinSmashHit
  1AC:  	Case  ==  .Event:SpinSmashDeath % 21
  1B8:  		SetConst  *Var0  00000001
  1C8:  		SetConst  *Var1  00270006
  1D8:  		ExecWait  DoSpinSmashHit
  1E4:  		SetConst  *Var0  00000001
  1F4:  		SetConst  *Var1  00270005
  204:  		ExecWait  DoDeath
  210:  		Return
  218:  	Case  ==  .Event:ShockHit % 2F
  224:  		SetConst  *Var0  00000001
  234:  		SetConst  *Var1  0027000C
  244:  		ExecWait  DoShockHit
  250:  		SetConst  *Var0  00000001
  260:  		SetConst  *Var1  00270006
  270:  		ExecWait  DoJumpBack
  27C:  		Call  JumpToGoal    ( .Actor:Self  5` .False .True .False )
  29C:  		Call  SetAnimationRate      ( .Actor:Self 00000001 *Fixed[2.0] )
  2B4:  		Call  SetAnimation  ( .Actor:Self 00000001 00270009 )
  2CC:  		Call  SetGoalToHome ( .Actor:Self )
  2DC:  		Call  SetActorSpeed ( .Actor:Self *Fixed[8.0] )
  2F0:  		Call  RunToGoal     ( .Actor:Self  0` .False )
  308:  		Call  SetAnimationRate      ( .Actor:Self 00000001 *Fixed[1.0] )
  320:  		Wait  5`
  32C:  		Call  SetAnimation  ( .Actor:Self 00000001 00270001 )
  344:  		Call  SetActorJumpGravity   ( .Actor:Self *Fixed[1.6] )
  358:  		Call  JumpToGoal    ( .Actor:Self  5` .False .True .False )
  378:  	Case  ==  .Event:ShockDeath % 26
  384:  		SetConst  *Var0  00000001
  394:  		SetConst  *Var1  0027000C
  3A4:  		ExecWait  DoShockHit
  3B0:  		SetConst  *Var0  00000001
  3C0:  		SetConst  *Var1  00270005
  3D0:  		ExecWait  DoDeath
  3DC:  		Return
  3E4:  	Case  ==  .Event:StarBeam % 13
  3F0:  	CaseOR  ==  00000017 % 17
  3FC:  	CaseOR  ==  .Event:Immune % 19
  408:  	CaseOR  ==  .Event:AirLiftFailed % 1F
  414:  		SetConst  *Var0  00000001
  424:  		SetConst  *Var1  00270001
  434:  		ExecWait  DoImmune
  440:  	EndCaseGroup
  448:  	Case  ==  .Event:Death % 20
  454:  		SetConst  *Var0  00000001
  464:  		SetConst  *Var1  00270006
  474:  		ExecWait  DoNormalHit
  480:  		Wait  10`
  48C:  		SetConst  *Var0  00000001
  49C:  		SetConst  *Var1  00270005
  4AC:  		ExecWait  DoDeath
  4B8:  		Return
  4C0:  	Case  ==  .Event:EndFirstStrike % 35
  4CC:  		Call  SetAnimationRate  ( .Actor:Self 00000001 *Fixed[2.0] )
  4E4:  		Call  SetAnimation  ( .Actor:Self 00000001 00270003 )
  4FC:  		Call  SetGoalToHome ( .Actor:Self )
  50C:  		Call  SetActorSpeed ( .Actor:Self *Fixed[4.0] )
  520:  		Call  RunToGoal     ( .Actor:Self  0` .False )
  538:  		Call  SetAnimationRate  ( .Actor:Self 00000001 *Fixed[1.0] )
  550:  		Call  HPBarToHome   ( .Actor:Self )
  560:  	Case  ==  .Event:RecoverStatus % 31
  56C:  		SetConst  *Var0  00000001
  57C:  		SetConst  *Var1  00270001
  58C:  		ExecWait  DoRecover
  598:  	Case  ==  .Event:ScareAway % 39
  5A4:  		SetConst  *Var0  00000001
  5B4:  		SetConst  *Var1  00270003
  5C4:  		SetConst  *Var2  00270006
  5D4:  		ExecWait  DoScareAway
  5E0:  		Return
  5E8:  	Case  ==  .Event:BeginAirLift % 3A
  5F4:  		SetConst  *Var0  00000001
  604:  		SetConst  *Var1  00270003
  614:  		ExecWait  DoAirLift
  620:  	Case  ==  .Event:BlowAway % 16
  62C:  		SetConst  *Var0  00000001
  63C:  		SetConst  *Var1  00270006
  64C:  		ExecWait  DoBlowAway
  658:  		Return
  660:  	Case  ==  .Event:SpikeTaunt % 1B
  66C:  		Call  GetStatusFlags    ( .Actor:Self *Var0 )
  680:  		If  *Var0  !&  ~Flags:StatusFlags:Sleep|Frozen|Fear|Paralyze|Dizzy|Stone|Stop % 35D000
  690:  			Call  SetAnimation  ( .Actor:Self 00000001 0027000B )
  6A8:  		EndIf
  6B0:  		Wait  10`
  6BC:  		Call  GetActorPos       ( .Actor:Self *Var0 *Var1 *Var2 )
  6D8:  		Call  GetStatusFlags    ( .Actor:Self *Var3 )
  6EC:  		If  *Var3  &  ~Flags:StatusFlags:Shrink % 80000
  6FC:  			Add   *Var1  0000000A
  70C:  		Else
  714:  			Add   *Var1  0000001A
  724:  		EndIf
  72C:  		Call  PlayEffect    ( ~FX:LensFlare:Rotating *Var0 *Var1 *Var2 00000014 00000000 00000000 00000000 00000000 00000000 00000000 00000000 00000000 )
  770:  		Wait  20`
  77C:  	Default
  784:  EndSwitch
  78C:  Call  SetAnimation      ( .Actor:Self 00000001 00270001 )
  7A4:  Call  EnableIdleScript  ( .Actor:Self 00000001 )
  7B8:  Call  UseIdleAnimation  ( .Actor:Self .True )
  7CC:  Return
  7D4:  End
}

#new:FloatTable $FloatTable_8021B030
{
	0.0      0.017452 0.034899 0.052336 0.069756 0.087156 0.104528 0.121869
	0.139173 0.156434 0.173648 0.190809 0.207912 0.224951 0.241922 0.258819
	0.275637 0.292372 0.309017 0.325568 0.34202  0.358368 0.374607 0.390731
	0.406737 0.422618 0.438371 0.45399  0.469472 0.48481  0.5      0.515038
	0.529919 0.544639 0.559193 0.573576 0.587785 0.601815 0.615661 0.62932
	0.642788 0.656059 0.669131 0.681998 0.694658 0.707107 0.71934  0.731354
	0.743145 0.75471  0.766044 0.777146 0.788011 0.798636 0.809017 0.819152
	0.829038 0.838671 0.848048 0.857167 0.866025 0.87462  0.882948 0.891007
	0.898794 0.906308 0.913545 0.920505 0.927184 0.93358  0.939693 0.945519
	0.951057 0.956305 0.961262 0.965926 0.970296 0.97437  0.978148 0.981627
	0.984808 0.987688 0.990268 0.992546 0.994522 0.996195 0.997564 0.99863
	0.999391 0.999848 1.0
}

#new:Script $Script_TakeTurn_8021B19C
{
    0:  Call  UseIdleAnimation  ( .Actor:Self .False )
   14:  Call  EnableIdleScript  ( .Actor:Self 00000000 )
   28:  Call  SetTargetActor    ( .Actor:Self .Actor:Player )
   3C:  Call  UseBattleCamPreset    ( 0000003F )
   4C:  Call  BattleCamTargetActor  ( .Actor:Self )
   5C:  Call  8024ECF8  ( FFFFFFFF 00000001 00000000 )
   74:  Call  SetAnimation      ( .Actor:Self 00000001 00270003 )
   8C:  Call  SetGoalToTarget   ( .Actor:Self )
   9C:  Call  AddGoalPos        ( .Actor:Self  50`  0`  0` )
   B8:  Call  SetActorSpeed     ( .Actor:Self *Fixed[6.0] )
   CC:  Call  RunToGoal ( .Actor:Self  0` .False )
   E4:  Call  SetAnimation      ( .Actor:Self 00000001 00270001 )
   FC:  Call  SetActorDispOffset    ( .Actor:Self 00000000 FFFFFFFF 00000000 )
  118:  Wait  1`
  124:  Call  SetActorDispOffset    ( .Actor:Self 00000000 FFFFFFFE 00000000 )
  140:  Wait  5`
  14C:  Call  SetActorDispOffset    ( .Actor:Self 00000000 00000000 00000000 )
  168:  Call  SetAnimation      ( .Actor:Self 00000001 00270004 )
  180:  Call  EnemyTestTarget   ( .Actor:Self *Var0 ~Flags:DamageType:0 00000000 00000001 00000010 )
  1A4:  Switch  *Var0
  1B0:  	CaseOR  ==  .HitResult:Miss % 6
  1BC:  	CaseOR  ==  .HitResult:Lucky % 5
  1C8:  		Set   *VarA  *Var0
  1D8:  		Call  SetGoalToTarget   ( .Actor:Self )
  1E8:  		Call  GetGoalPos        ( .Actor:Self *Var0 *Var1 *Var2 )
  204:  		Sub   *Var0  0000000A
  214:  		Set   *Var1  0000000A
  224:  		Add   *Var2  00000003
  234:  		Call  SetGoalPos        ( .Actor:Self *Var0 *Var1 *Var2 )
  250:  		Call  SetActorJumpGravity   ( .Actor:Self *Fixed[1.2] )
  264:  		Thread
  26C:  			Call  GetActorPos   ( .Actor:Self *Var1 *Var2 *Var0 )
  288:  			Set   *Var0  00000000
  298:  			Loop  00000010
  2A4:  				Call  GetActorPos   ( .Actor:Self *Var4 *Var5 *Var6 )
  2C0:  				Call  $Function_8021818C    ( *Var1 *Var2 *Var4 *Var5 *Var0 )
  2E0:  				Call  SetActorRotation      ( .Actor:Self 00000000 00000000 *Var0 )
  2FC:  				Set   *Var1  *Var4
  30C:  				Set   *Var2  *Var5
  31C:  				Set   *Var3  *Var6
  32C:  				Wait  1`
  338:  			EndLoop
  340:  		EndThread
  348:  		Thread
  350:  			Wait  6`
  35C:  			Call  SetAnimation  ( .Actor:Self 00000001 00270004 )
  374:  		EndThread
  37C:  		Call  JumpToGoal    ( .Actor:Self  16` .False .True .False )
  39C:  		Call  SetAnimation  ( .Actor:Self 00000001 0027000A )
  3B4:  		Call  SetActorScale ( .Actor:Self *Fixed[1.1] *Fixed[0.8] *Fixed[1.0] )
  3D0:  		Call  SetActorDispOffset    ( .Actor:Self 00000000 00000005 00000000 )
  3EC:  		Wait  1`
  3F8:  		Call  SetActorScale ( .Actor:Self *Fixed[1.3] *Fixed[0.5] *Fixed[1.0] )
  414:  		Call  SetActorDispOffset    ( .Actor:Self 00000000 FFFFFFFE 00000000 )
  430:  		Wait  1`
  43C:  		Call  SetActorScale ( .Actor:Self *Fixed[1.0] *Fixed[1.0] *Fixed[1.0] )
  458:  		Call  SetActorDispOffset    ( .Actor:Self 00000000 00000007 00000000 )
  474:  		Call  SetAnimation  ( .Actor:Self 00000001 00270006 )
  48C:  		Wait  5`
  498:  		If  *VarA  ==  .HitResult:Lucky % 5
  4A8:  			Call  EnemyTestTarget   ( .Actor:Self *Var0 ~Flags:DamageType:TriggerLucky 00000000 00000000 00000000 )
  4CC:  		EndIf
  4D4:  		Wait  5`
  4E0:  		Call  SetActorDispOffset    ( .Actor:Self 00000000 00000000 00000000 )
  4FC:  		Call  SetAnimation      ( .Actor:Self 00000001 00270004 )
  514:  		Call  SetGoalToTarget   ( .Actor:Self )
  524:  		Call  GetGoalPos        ( .Actor:Self *Var0 *Var1 *Var2 )
  540:  		Add   *Var0  00000014
  550:  		Set   *Var1  00000000
  560:  		Call  SetGoalPos        ( .Actor:Self *Var0 *Var1 *Var2 )
  57C:  		Call  SetActorJumpGravity   ( .Actor:Self *Fixed[2.0] )
  590:  		Thread
  598:  			Wait  4`
  5A4:  			Set   *Var0  000000B4
  5B4:  			Loop  00000004
  5C0:  				Sub   *Var0  0000002D
  5D0:  				Call  SetActorRotation  ( .Actor:Self 00000000 00000000 *Var0 )
  5EC:  				Wait  1`
  5F8:  			EndLoop
  600:  			Call  SetAnimation  ( .Actor:Self 00000001 00270004 )
  618:  		EndThread
  620:  		Call  JumpToGoal        ( .Actor:Self  15` .False .True .False )
  640:  		Call  SetAnimation      ( .Actor:Self 00000001 00270009 )
  658:  		Wait  5`
  664:  		Call  UseBattleCamPreset    ( 00000002 )
  674:  		Call  YieldTurn ( )
  680:  		Call  SetActorYaw       ( .Actor:Self  180` )
  694:  		Call  AddActorDecoration    ( .Actor:Self 00000001 00000000 .Decoration:Sweat )
  6B0:  		Call  SetAnimationRate  ( .Actor:Self 00000001 *Fixed[2.0] )
  6C8:  		Call  SetGoalToHome     ( .Actor:Self )
  6D8:  		Call  SetActorSpeed     ( .Actor:Self *Fixed[8.0] )
  6EC:  		Call  RunToGoal ( .Actor:Self  0` .False )
  704:  		Call  SetAnimationRate  ( .Actor:Self 00000001 *Fixed[1.0] )
  71C:  		Call  SetActorYaw       ( .Actor:Self  0` )
  730:  		Wait  5`
  73C:  		Call  SetAnimation      ( .Actor:Self 00000001 00270001 )
  754:  		Call  SetActorJumpGravity   ( .Actor:Self *Fixed[1.6] )
  768:  		Call  JumpToGoal        ( .Actor:Self  5` .False .True .False )
  788:  		Call  RemoveActorDecoration ( .Actor:Self 00000001 00000000 )
  7A0:  		Call  EnableIdleScript  ( .Actor:Self 00000001 )
  7B4:  		Call  UseIdleAnimation  ( .Actor:Self .True )
  7C8:  		Return
  7D0:  	EndCaseGroup
  7D8:  	Default
  7E0:  		Call  SetGoalToTarget       ( .Actor:Self )
  7F0:  		Call  SetActorJumpGravity   ( .Actor:Self *Fixed[1.2] )
  804:  		Thread
  80C:  			Call  GetActorPos   ( .Actor:Self *Var1 *Var2 *Var0 )
  828:  			Set   *Var0  00000000
  838:  			Loop  00000010
  844:  				Call  GetActorPos   ( .Actor:Self *Var4 *Var5 *Var6 )
  860:  				Call  $Function_8021818C    ( *Var1 *Var2 *Var4 *Var5 *Var0 )
  880:  				Call  SetActorRotation      ( .Actor:Self 00000000 00000000 *Var0 )
  89C:  				Set   *Var1  *Var4
  8AC:  				Set   *Var2  *Var5
  8BC:  				Set   *Var3  *Var6
  8CC:  				Wait  1`
  8D8:  			EndLoop
  8E0:  		EndThread
  8E8:  		Thread
  8F0:  			Wait  6`
  8FC:  			Call  SetAnimation  ( .Actor:Self 00000001 00270004 )
  914:  		EndThread
  91C:  		Call  JumpToGoal    ( .Actor:Self  16` .False .True .False )
  93C:  		Call  SetAnimation  ( .Actor:Self 00000001 00270004 )
  954:  		Call  SetActorScale ( .Actor:Self *Fixed[1.1] *Fixed[0.8] *Fixed[1.0] )
  970:  		Wait  1`
  97C:  		Call  SetActorScale ( .Actor:Self *Fixed[1.3] *Fixed[0.5] *Fixed[1.0] )
  998:  		Wait  1`
  9A4:  EndSwitch
  9AC:  Call  EnemyDamageTarget ( .Actor:Self *Var0 ~Flags:DamageType:0 00000000 00000000 00000002 00000020 )
  9D4:  Switch  *Var0
  9E0:  	CaseOR  ==  .HitResult:Hit % 0
  9EC:  	CaseOR  ==  .HitResult:QuakeImmune % 2
  9F8:  		Call  UseBattleCamPreset    ( 00000002 )
  A08:  		Call  SetActorScale ( .Actor:Self *Fixed[1.1] *Fixed[0.8] *Fixed[1.0] )
  A24:  		Wait  1`
  A30:  		Call  SetActorScale ( .Actor:Self *Fixed[1.0] *Fixed[1.0] *Fixed[1.0] )
  A4C:  		Wait  1`
  A58:  		Call  SetActorRotation      ( .Actor:Self 00000000 00000000 00000000 )
  A74:  		Call  SetActorDispOffset    ( .Actor:Self 00000000 00000000 00000000 )
  A90:  		Call  SetAnimation  ( .Actor:Self 00000001 00270001 )
  AA8:  		Call  GetGoalPos    ( .Actor:Self *Var0 *Var1 *Var2 )
  AC4:  		Add   *Var0  00000028
  AD4:  		Set   *Var1  00000000
  AE4:  		Call  SetActorJumpGravity   ( .Actor:Self *Fixed[1.8] )
  AF8:  		Call  SetGoalPos    ( .Actor:Self *Var0 *Var1 *Var2 )
  B14:  		Call  JumpToGoal    ( .Actor:Self  10` .False .True .False )
  B34:  		Add   *Var0  0000001E
  B44:  		Call  SetGoalPos    ( .Actor:Self *Var0 *Var1 *Var2 )
  B60:  		Call  JumpToGoal    ( .Actor:Self  8` .False .True .False )
  B80:  		Add   *Var0  00000014
  B90:  		Call  SetGoalPos    ( .Actor:Self *Var0 *Var1 *Var2 )
  BAC:  		Call  JumpToGoal    ( .Actor:Self  6` .False .True .False )
  BCC:  		Call  GetLastDamage ( .Actor:Player *Var0 )
  BE0:  		If  *Var0  >  00000000
  BF0:  			Call  SetAnimation  ( .Actor:Self 00000001 0027000B )
  C08:  			Wait  15`
  C14:  		Else
  C1C:  			Call  SetAnimation  ( .Actor:Self 00000001 00270001 )
  C34:  			Wait  3`
  C40:  		EndIf
  C48:  		Call  YieldTurn ( )
  C54:  		Call  SetAnimationRate  ( .Actor:Self 00000001 *Fixed[2.0] )
  C6C:  		Call  SetAnimation  ( .Actor:Self 00000001 00270003 )
  C84:  		Call  SetGoalToHome ( .Actor:Self )
  C94:  		Call  SetActorSpeed ( .Actor:Self *Fixed[8.0] )
  CA8:  		Call  RunToGoal     ( .Actor:Self  0` .False )
  CC0:  		Call  SetAnimationRate  ( .Actor:Self 00000001 *Fixed[1.0] )
  CD8:  	EndCaseGroup
  CE0:  EndSwitch
  CE8:  Call  EnableIdleScript  ( .Actor:Self 00000001 )
  CFC:  Call  UseIdleAnimation  ( .Actor:Self .True )
  D10:  Return
  D18:  End
}

#new:Script $Script_Init_8021BEBC
{
    0:  Call  BindTakeTurn  ( .Actor:Self $Script_TakeTurn_8021B19C )
   14:  Call  BindIdle      ( .Actor:Self $Script_Idle_8021A578 )
   28:  Call  BindHandleEvent   ( .Actor:Self $Script_HandleEvent_8021A854 )
   3C:  Call  BindNextTurn  ( .Actor:Self $Script_NextTurn_8021C0FC )
   50:  Return
   58:  End
}

#new:Script $Script_8021BF1C
{
    0:  Call  SetActorYaw   ( .Actor:Player  30` )
   14:  Wait  1`
   20:  Call  SetActorYaw   ( .Actor:Player  60` )
   34:  Wait  1`
   40:  Call  SetActorYaw   ( .Actor:Player  90` )
   54:  Wait  1`
   60:  Call  SetActorYaw   ( .Actor:Player  120` )
   74:  Wait  1`
   80:  Call  SetActorYaw   ( .Actor:Player  150` )
   94:  Wait  1`
   A0:  Call  SetActorYaw   ( .Actor:Player  180` )
   B4:  Wait  5`
   C0:  Call  UseBattleCamPreset    ( 00000002 )
   D0:  Call  MoveBattleCamOver     (  10` )
   E0:  Call  ActorSpeak    ( 000B00B9 .Actor:Partner 00000000 009D0008 009D0001 ) % This is a Spiked Goomba. See the spike on his head ...
  100:  Set   *GF_Tutorial_SpikyEnemy  .True
  110:  Call  SetActorYaw   ( .Actor:Player  150` )
  124:  Wait  1`
  130:  Call  SetActorYaw   ( .Actor:Player  120` )
  144:  Wait  1`
  150:  Call  SetActorYaw   ( .Actor:Player  90` )
  164:  Wait  1`
  170:  Call  SetActorYaw   ( .Actor:Player  60` )
  184:  Wait  1`
  190:  Call  SetActorYaw   ( .Actor:Player  30` )
  1A4:  Wait  1`
  1B0:  Call  SetActorYaw   ( .Actor:Player  0` )
  1C4:  Wait  5`
  1D0:  Return
  1D8:  End
}

#new:Script $Script_NextTurn_8021C0FC
{
    0:  Call  UseIdleAnimation  ( .Actor:Partner .False )
   14:  Call  EnableIdleScript  ( .Actor:Partner 00000000 )
   28:  Call  GetBattlePhase    ( *Var0 )
   38:  Switch  *Var0
   44:  	Case  ==  0000000A
   50:  		If  *GF_Tutorial_SpikyEnemy  ==  .False
   60:  			ExecWait  $Script_8021BF1C
   6C:  		EndIf
   74:  EndSwitch
   7C:  Call  EnableIdleScript  ( .Actor:Partner 00000001 )
   90:  Call  UseIdleAnimation  ( .Actor:Partner .True )
   A4:  Return
   AC:  End
}

#new:DefenseTable $DefenseTable_8021C1B0
{
	.Element:Normal 00000000
	.Element:End
}

#new:DefenseTable $DefenseTable_8021C1BC
{
	.Element:Normal 00000000
	.Element:End
}

#new:StatusTable $StatusTable_8021C1C8
{
	.Status:Normal      0`
	.Status:Default     0`
	.Status:Sleep     100`
	.Status:Poison    100`
	.Status:Frozen    100`
	.Status:Dizzy     100`
	.Status:Fear      100`
	.Status:Static    100`
	.Status:Paralyze  100`
	.Status:Shrink    100`
	.Status:Stop      100`
	.Status:DefaultTurnMod    0`
	.Status:SleepTurnMod      0`
	.Status:PoisonTurnMod     0`
	.Status:FrozenTurnMod     0`
	.Status:DizzyTurnMod      0`
	.Status:FearTurnMod       0`
	.Status:StaticTurnMod     0`
	.Status:ParalyzeTurnMod   0`
	.Status:ShrinkTurnMod     0`
	.Status:StopTurnMod       0`
	.Status:End
}

#new:StatusTable $StatusTable_8021C274
{
	.Status:Normal      0`
	.Status:Default     0`
	.Status:Sleep     100`
	.Status:Poison     80`
	.Status:Frozen    100`
	.Status:Dizzy     100`
	.Status:Fear       80`
	.Status:Static     80`
	.Status:Paralyze  100`
	.Status:Shrink    100`
	.Status:Stop      100`
	.Status:DefaultTurnMod    0`
	.Status:SleepTurnMod      0`
	.Status:PoisonTurnMod     0`
	.Status:FrozenTurnMod     0`
	.Status:DizzyTurnMod      1`
	.Status:FearTurnMod       0`
	.Status:StaticTurnMod     0`
	.Status:ParalyzeTurnMod   0`
	.Status:ShrinkTurnMod     0`
	.Status:StopTurnMod       0`
	.Status:End
}

#new:PartsTable $PartsTable_8021C320
{
	00020001 01000000 001400FF $IdleAnimations_8021DB9C $DefenseTable_8021C1B0 00000000 00000000 00F60000 00000000
	00800000 02000000 001800FF $IdleAnimations_8021C3D8 $DefenseTable_8021C1BC 00004000 00000000 00F60000 00000000
	00020001 03000000 F01800FF $IdleAnimations_8021C470 $DefenseTable_8021C1B0 00000000 00000000 00F60000 00000000
	00020001 04000000 F01800FF $IdleAnimations_8021C47C $DefenseTable_8021C1B0 00000000 00000000 00F60000 00000000
}

#new:Actor $ParagoombaA
{
	% stats
	[Index]         8b
	[Level]         6`b
	[MaxHP]         2`b
	[Coins]         1`b
	[Flags]       00000200
	[StatusTable] $StatusTable_8021C274
	% ai
	[PartsCount]    4`s
	[PartsTable]  $PartsTable_8021C320
	[Script]      $Script_Init_8021F450
	% move effectiveness
	[Escape]       90`b
	[Item]        100`b
	[AirLift]     100`b
	[Hurricane]   100`b % Bow's "Spook" as well
	[UpAndAway]    95`b
	[PowerBounce] 100`b
	[SpinSmash]     0`b % weight (0-4)
	% ui positions
	[Size]         36`b  26`b % width height
	[HealthBar]     0`b   0`b % dx dy
	[StatusTurn]  -10`b  20`b % dx dy
	[StatusIcon]   10`b  20`b % dx dy
}

#new:IdleAnimations $IdleAnimations_8021C3D8
{
	.Status:Normal    00280001
	.Status:Stone     00280000
	.Status:Sleep     0028000B
	.Status:Poison    00280001
	.Status:Stop      00280000
	.Status:Static    00280001
	.Status:Paralyze  00280000
	.Status:Dizzy     0028000C
	.Status:Fear      0028000C
	.Status:End
}

#new:IdleAnimations $IdleAnimations_8021C424
{
	.Status:Normal    00280004
	.Status:Stone     00280000
	.Status:Sleep     0028000B
	.Status:Poison    00280001
	.Status:Stop      00280000
	.Status:Static    00280004
	.Status:Paralyze  00280000
	.Status:Dizzy     0028000C
	.Status:Fear      0028000C
	.Status:End
}

#new:IdleAnimations $IdleAnimations_8021C470
{
	.Status:Normal    00280009
	.Status:End
}

#new:IdleAnimations $IdleAnimations_8021C47C
{
	.Status:Normal    0028000A
	.Status:End
}

% Origin: HEURISTIC
#new:Script $Script_8021C488
{
    0:  Call  BindTakeTurn      ( .Actor:Self $Script_TakeTurn_8021CDFC )
   14:  Call  BindIdle  ( .Actor:Self $Script_Idle_8021C4D4 )
   28:  Call  BindHandleEvent   ( .Actor:Self $Script_HandleEvent_8021C808 )
   3C:  Return
   44:  End
}

#new:Script $Script_Idle_8021C4D4
{
    0:  Label  A
    C:  Call  RandInt   ( 00000050 *Var0 )
   20:  Add   *Var0  00000050
   30:  Loop  *Var0
   3C:  	Label  0
   48:  	Call  GetStatusFlags    ( .Actor:Self *Var1 )
   5C:  	If  *Var1  &  ~Flags:StatusFlags:Sleep|Frozen|Fear|Paralyze|Dizzy|Stone|Stop % 35D000
   6C:  		Wait  1`
   78:  		Goto  0
   84:  	EndIf
   8C:  	Wait  1`
   98:  EndLoop
   A0:  Call  GetActorPos       ( .Actor:Self *Var0 *Var1 *Var2 )
   BC:  Add   *Var0  00000005
   CC:  Call  SetActorIdleSpeed ( .Actor:Self *Fixed[0.6] )
   E0:  Call  SetIdleAnimations ( .Actor:Self 00000002 $IdleAnimations_8021C424 )
   F8:  Call  SetIdleGoal       ( .Actor:Self *Var0 *Var1 *Var2 )
  114:  Call  IdleFlyToGoal     ( .Actor:Self  0`  -5` .Easing:Linear )
  130:  Loop  00000014
  13C:  	Label  1
  148:  	Call  GetStatusFlags    ( .Actor:Self *Var1 )
  15C:  	If  *Var1  &  ~Flags:StatusFlags:Sleep|Frozen|Fear|Paralyze|Dizzy|Stone|Stop % 35D000
  16C:  		Wait  1`
  178:  		Goto  1
  184:  	EndIf
  18C:  	Wait  1`
  198:  EndLoop
  1A0:  Call  GetActorPos       ( .Actor:Self *Var0 *Var1 *Var2 )
  1BC:  Sub   *Var0  00000005
  1CC:  Call  SetActorIdleSpeed ( .Actor:Self *Fixed[0.6] )
  1E0:  Call  SetIdleGoal       ( .Actor:Self *Var0 *Var1 *Var2 )
  1FC:  Call  IdleFlyToGoal     ( .Actor:Self  0`  -5` .Easing:Linear )
  218:  Call  SetIdleAnimations ( .Actor:Self 00000002 $IdleAnimations_8021C3D8 )
  230:  Loop  00000028
  23C:  	Label  2
  248:  	Call  GetStatusFlags    ( .Actor:Self *Var1 )
  25C:  	If  *Var1  &  ~Flags:StatusFlags:Sleep|Frozen|Fear|Paralyze|Dizzy|Stone|Stop % 35D000
  26C:  		Wait  1`
  278:  		Goto  2
  284:  	EndIf
  28C:  	Wait  1`
  298:  EndLoop
  2A0:  Goto  A
  2AC:  Return
  2B4:  End
}

#new:Script $Script_8021C790
{
    0:  Call  ResetAllActorSounds   ( .Actor:Self )
   10:  Call  SetGoalToHome ( .Actor:Self )
   20:  Call  SetActorSpeed ( .Actor:Self *Fixed[7.0] )
   34:  Call  FlyToGoal     ( .Actor:Self  0`  1` .Easing:SinOut )
   50:  Call  SetAnimation  ( .Actor:Self 00000002 00280001 )
   68:  Return
   70:  End
}

#new:Script $Script_HandleEvent_8021C808
{
    0:  Call  UseIdleAnimation  ( .Actor:Self .False )
   14:  Call  EnableIdleScript  ( .Actor:Self 00000000 )
   28:  Call  GetLastEvent      ( .Actor:Self *Var0 )
   3C:  Switch  *Var0
   48:  	CaseOR  ==  .Event:HitCombo % 9
   54:  	CaseOR  ==  .Event:Hit % A
   60:  		SetConst  *Var0  00000002
   70:  		SetConst  *Var1  00280006
   80:  		ExecWait  DoNormalHit
   8C:  		Call  GetBattlePhase    ( *Var0 )
   9C:  		If  *Var0  ==  00000001
   AC:  			Call  GetEncounterState ( *Var0 )
   BC:  			If  *Var0  ==  00000004
   CC:  				ExecWait  $Script_8021D614
   D8:  			EndIf
   E0:  		EndIf
   E8:  	EndCaseGroup
   F0:  	Case  ==  .Event:BurnHit % E
   FC:  		SetConst  *Var0  00000002
  10C:  		SetConst  *Var1  0028000D
  11C:  		SetConst  *Var2  0028000E
  12C:  		ExecWait  DoBurnHit
  138:  	Case  ==  .Event:BurnDeath % 24
  144:  		SetConst  *Var0  00000002
  154:  		SetConst  *Var1  0028000D
  164:  		SetConst  *Var2  0028000E
  174:  		ExecWait  DoBurnHit
  180:  		SetConst  *Var0  00000002
  190:  		SetConst  *Var1  0028000E
  1A0:  		ExecWait  DoDeath
  1AC:  		Return
  1B4:  	Case  ==  .Event:FallTrigger % C
  1C0:  		SetConst  *Var0  00000002
  1D0:  		SetConst  *Var1  00280006
  1E0:  		ExecWait  DoNormalHit
  1EC:  		ExecWait  $Script_8021D614
  1F8:  	Case  ==  0000000F % F
  204:  		SetConst  *Var0  00000002
  214:  		SetConst  *Var1  0028000D
  224:  		SetConst  *Var2  0028000E
  234:  		ExecWait  DoBurnHit
  240:  		ExecWait  $Script_8021D614
  24C:  	Case  ==  .Event:ShockHit % 2F
  258:  		SetConst  *Var0  00000002
  268:  		SetConst  *Var1  0028000F
  278:  		ExecWait  DoShockHit
  284:  		SetConst  *Var0  00000002
  294:  		SetConst  *Var1  00280006
  2A4:  		ExecWait  DoJumpBack
  2B0:  		Call  SetAnimation  ( .Actor:Self 00000002 0028000C )
  2C8:  		ExecWait  $Script_8021C790
  2D4:  	Case  ==  .Event:ShockDeath % 26
  2E0:  		SetConst  *Var0  00000002
  2F0:  		SetConst  *Var1  0028000F
  300:  		ExecWait  DoShockHit
  30C:  		SetConst  *Var0  00000002
  31C:  		SetConst  *Var1  00280007
  32C:  		ExecWait  DoDeath
  338:  		Return
  340:  	Case  ==  .Event:StarBeam % 13
  34C:  	CaseOR  ==  00000017 % 17
  358:  	CaseOR  ==  .Event:Immune % 19
  364:  	CaseOR  ==  .Event:AirLiftFailed % 1F
  370:  		SetConst  *Var0  00000002
  380:  		SetConst  *Var1  00280001
  390:  		ExecWait  DoImmune
  39C:  	EndCaseGroup
  3A4:  	Case  ==  .Event:Death % 20
  3B0:  		SetConst  *Var0  00000002
  3C0:  		SetConst  *Var1  00280006
  3D0:  		ExecWait  DoNormalHit
  3DC:  		Wait  10`
  3E8:  		SetConst  *Var0  00000002
  3F8:  		SetConst  *Var1  00280007
  408:  		ExecWait  DoDeath
  414:  		Return
  41C:  	Case  ==  .Event:BeginFirstStrike % 38
  428:  		Call  SetActorPos       ( .Actor:Self  20`  0`  0` )
  444:  		Call  HPBarToCurrent    ( .Actor:Self )
  454:  	Case  ==  .Event:EndFirstStrike % 35
  460:  		Call  SetAnimation  ( .Actor:Self 00000002 00280004 )
  478:  		ExecWait  $Script_8021C790
  484:  		Call  HPBarToHome   ( .Actor:Self )
  494:  	Case  ==  .Event:RecoverStatus % 31
  4A0:  		SetConst  *Var0  00000002
  4B0:  		SetConst  *Var1  00280001
  4C0:  		ExecWait  DoRecover
  4CC:  	Case  ==  .Event:ScareAway % 39
  4D8:  		Call  SetActorFlagBits  ( .Actor:Self 00000200 .False )
  4F0:  		SetConst  *Var0  00000002
  500:  		SetConst  *Var1  00280004
  510:  		SetConst  *Var2  00280006
  520:  		ExecWait  DoScareAway
  52C:  		Return
  534:  	Case  ==  .Event:BeginAirLift % 3A
  540:  		SetConst  *Var0  00000002
  550:  		SetConst  *Var1  00280004
  560:  		ExecWait  DoAirLift
  56C:  	Case  ==  .Event:BlowAway % 16
  578:  		SetConst  *Var0  00000002
  588:  		SetConst  *Var1  00280006
  598:  		ExecWait  DoBlowAway
  5A4:  		Return
  5AC:  	Default
  5B4:  EndSwitch
  5BC:  Call  EnableIdleScript  ( .Actor:Self FFFFFFFF )
  5D0:  Call  UseIdleAnimation  ( .Actor:Self .True )
  5E4:  Return
  5EC:  End
}

#new:Script $Script_TakeTurn_8021CDFC
{
    0:  Call  UseIdleAnimation  ( .Actor:Self .False )
   14:  Call  EnableIdleScript  ( .Actor:Self 00000000 )
   28:  Call  SetTargetActor    ( .Actor:Self .Actor:Player )
   3C:  Call  SetGoalToTarget   ( .Actor:Self )
   4C:  Call  UseBattleCamPreset    ( 0000003F )
   5C:  Call  BattleCamTargetActor  ( .Actor:Self )
   6C:  Call  8024ECF8  ( FFFFFFFF 00000001 00000000 )
   84:  Call  SetAnimation      ( .Actor:Self 00000002 00280004 )
   9C:  Call  SetGoalToTarget   ( .Actor:Self )
   AC:  Call  AddGoalPos        ( .Actor:Self  50`  0`  0` )
   C8:  Call  SetActorSpeed     ( .Actor:Self *Fixed[6.0] )
   DC:  Call  FlyToGoal ( .Actor:Self  0`  -4` .Easing:Linear )
   F8:  Call  EnemyTestTarget   ( .Actor:Self *Var0 ~Flags:DamageType:0 00000000 00000001 00000010 )
  11C:  Switch  *Var0
  128:  	CaseOR  ==  .HitResult:Miss % 6
  134:  	CaseOR  ==  .HitResult:Lucky % 5
  140:  		Set   *VarA  *Var0
  150:  		Wait  10`
  15C:  		Call  UseBattleCamPreset    ( 00000042 )
  16C:  		Call  SetBattleCamZoom  (  300` )
  17C:  		Call  BattleCamTargetActor  ( .Actor:Self )
  18C:  		Call  8024ECF8  ( FFFFFFFF 00000001 00000000 )
  1A4:  		Call  PlaySoundAtActor  ( .Actor:Self 000020E0 )
  1B8:  		Call  SetActorSounds    ( .Actor:Self .ActorSound:Jump 00000000 00000000 )
  1D4:  		Call  SetActorSpeed     ( .Actor:Self *Fixed[5.0] )
  1E8:  		Call  SetActorJumpGravity   ( .Actor:Self *Fixed[1.8] )
  1FC:  		Call  SetAnimation      ( .Actor:Self 00000002 00280005 )
  214:  		Call  GetActorPos       ( .Actor:Self *Var0 *Var1 *Var2 )
  230:  		Call  SetGoalPos        ( .Actor:Self *Var0 *Var1 *Var2 )
  24C:  		Call  JumpToGoal        ( .Actor:Self  10` .False .False .False )
  26C:  		Call  PlaySoundAtActor  ( .Actor:Self 000002C1 )
  280:  		Call  SetActorSounds    ( .Actor:Self .ActorSound:Fly 00000000 00000000 )
  29C:  		Call  SetGoalToTarget   ( .Actor:Self )
  2AC:  		Sub   *Var0  00000050
  2BC:  		Set   *Var1  00000014
  2CC:  		Call  SetGoalPos        ( .Actor:Self *Var0 *Var1 *Var2 )
  2E8:  		Call  SetActorSpeed     ( .Actor:Self *Fixed[8.0] )
  2FC:  		Call  SetAnimation      ( .Actor:Self 00000002 00280005 )
  314:  		Call  FlyToGoal ( .Actor:Self  0`  -10` .Easing:QuadraticOut )
  330:  		Thread
  338:  			Loop  00000004
  344:  				Call  PlaySoundAtActor  ( .Actor:Self 000020DF )
  358:  				Wait  4`
  364:  			EndLoop
  36C:  		EndThread
  374:  		Call  SetAnimation  ( .Actor:Self 00000002 00280002 )
  38C:  		Call  AddActorDecoration    ( .Actor:Self 00000002 00000000 .Decoration:Sweat )
  3A8:  		Call  SetAnimationRate      ( .Actor:Self 00000002 *Fixed[3.0] )
  3C0:  		Wait  10`
  3CC:  		If  *VarA  ==  .HitResult:Lucky % 5
  3DC:  			Call  EnemyTestTarget   ( .Actor:Self *Var0 ~Flags:DamageType:TriggerLucky 00000000 00000000 00000000 )
  400:  		EndIf
  408:  		Wait  10`
  414:  		Call  SetAnimationRate  ( .Actor:Self 00000002 *Fixed[1.0] )
  42C:  		Call  UseBattleCamPreset    ( 00000002 )
  43C:  		Call  ResetAllActorSounds   ( .Actor:Self )
  44C:  		Call  YieldTurn ( )
  458:  		Call  SetAnimation      ( .Actor:Self 00000002 00280004 )
  470:  		Call  SetActorYaw       ( .Actor:Self  180` )
  484:  		ExecWait  $Script_8021C790
  490:  		Call  SetActorYaw       ( .Actor:Self  0` )
  4A4:  		Call  RemoveActorDecoration ( .Actor:Self 00000002 00000000 )
  4BC:  		Call  EnableIdleScript  ( .Actor:Self FFFFFFFF )
  4D0:  		Call  UseIdleAnimation  ( .Actor:Self .True )
  4E4:  		Return
  4EC:  	EndCaseGroup
  4F4:  	Default
  4FC:  		Wait  10`
  508:  		Call  UseBattleCamPreset    ( 00000042 )
  518:  		Call  SetBattleCamZoom  (  300` )
  528:  		Call  BattleCamTargetActor  ( .Actor:Self )
  538:  		Call  8024ECF8  ( FFFFFFFF 00000001 00000000 )
  550:  		Call  PlaySoundAtActor  ( .Actor:Self 000020E0 )
  564:  		Call  SetActorSounds    ( .Actor:Self .ActorSound:Jump 00000000 00000000 )
  580:  		Call  SetActorSpeed     ( .Actor:Self *Fixed[5.0] )
  594:  		Call  SetActorJumpGravity   ( .Actor:Self *Fixed[1.8] )
  5A8:  		Call  SetAnimation      ( .Actor:Self 00000002 00280005 )
  5C0:  		Call  GetActorPos       ( .Actor:Self *Var0 *Var1 *Var2 )
  5DC:  		Call  SetGoalPos        ( .Actor:Self *Var0 *Var1 *Var2 )
  5F8:  		Call  JumpToGoal        ( .Actor:Self  10` .False .False .False )
  618:  		Call  PlaySoundAtActor  ( .Actor:Self 000002C1 )
  62C:  		Call  SetActorSounds    ( .Actor:Self .ActorSound:Fly 00000000 00000000 )
  648:  		Call  SetGoalToTarget   ( .Actor:Self )
  658:  		Call  SetActorSpeed     ( .Actor:Self *Fixed[8.0] )
  66C:  		Call  SetAnimation      ( .Actor:Self 00000002 00280005 )
  684:  		Call  FlyToGoal ( .Actor:Self  0`  -10` .Easing:Linear )
  6A0:  EndSwitch
  6A8:  Wait  2`
  6B4:  Call  EnemyDamageTarget ( .Actor:Self *Var0 ~Flags:DamageType:0 00000000 00000000 00000001 00000020 )
  6DC:  Switch  *Var0
  6E8:  	CaseOR  ==  .HitResult:Hit % 0
  6F4:  	CaseOR  ==  .HitResult:QuakeImmune % 2
  700:  		Call  UseBattleCamPreset    ( 00000002 )
  710:  		Call  SetGoalToTarget       ( .Actor:Self )
  720:  		Call  AddGoalPos    ( .Actor:Self  50`  10`  0` )
  73C:  		Call  SetActorSpeed ( .Actor:Self *Fixed[6.0] )
  750:  		Call  SetAnimation  ( .Actor:Self 00000002 00280004 )
  768:  		Call  FlyToGoal     ( .Actor:Self  0`  -10` .Easing:Linear )
  784:  		Call  ResetAllActorSounds   ( .Actor:Self )
  794:  		Wait  5`
  7A0:  		Call  YieldTurn ( )
  7AC:  		Call  SetAnimation  ( .Actor:Self 00000002 00280004 )
  7C4:  		ExecWait  $Script_8021C790
  7D0:  	EndCaseGroup
  7D8:  EndSwitch
  7E0:  Call  EnableIdleScript  ( .Actor:Self FFFFFFFF )
  7F4:  Call  UseIdleAnimation  ( .Actor:Self .True )
  808:  Return
  810:  End
}

#new:Script $Script_8021D614
{
    0:  Call  8027D32C      ( FFFFFF81 )
   10:  Call  SetPartFlags  ( .Actor:Self 00000002 00020005 )
   28:  Call  SetPartFlags  ( .Actor:Self 00000003 00120004 )
   40:  Call  SetPartFlags  ( .Actor:Self 00000004 00120004 )
   58:  Call  SetPartFlags  ( .Actor:Self 00000001 00800004 )
   70:  Call  GetActorPos   ( .Actor:Self *Var0 *Var1 *Var2 )
   8C:  Call  SetPartPos    ( .Actor:Self 00000003 *Var0 *Var1 *Var2 )
   AC:  Call  SetPartDispOffset ( .Actor:Self 00000003 FFFFFFF7 00000007 FFFFFFFE )
   CC:  Call  SetPartPos    ( .Actor:Self 00000004 *Var0 *Var1 *Var2 )
   EC:  Call  SetPartDispOffset ( .Actor:Self 00000004 0000000B 00000007 FFFFFFFE )
  10C:  Call  GetLastEvent  ( .Actor:Self *Var0 )
  120:  If  *Var0  ==  0000000F % F
  130:  	Call  SetAnimation  ( .Actor:Self 00000001 0026000A )
  148:  Else
  150:  	Call  SetAnimation  ( .Actor:Self 00000001 00260005 )
  168:  EndIf
  170:  Call  SetActorSounds    ( .Actor:Self .ActorSound:Jump 00000301 00000000 )
  18C:  Call  GetActorPos       ( .Actor:Self *Var0 *Var1 *Var2 )
  1A8:  Set   *Var1  00000000
  1B8:  Call  SetActorJumpGravity   ( .Actor:Self *Fixed[0.8] )
  1CC:  Call  SetGoalPos        ( .Actor:Self *Var0 *Var1 *Var2 )
  1E8:  Call  JumpToGoal        ( .Actor:Self  15` .False .True .False )
  208:  Call  $Function_80218280    ( 00000064 0000000A )
  21C:  Thread
  224:  	Call  ShakeCam  ( .Cam:Battle 00000000  5` *Fixed[0.3] )
  240:  EndThread
  248:  Call  ResetActorSounds  ( .Actor:Self .ActorSound:Jump )
  25C:  Call  GetLastEvent      ( .Actor:Self *Var3 )
  270:  If  *Var3  ==  0000000F % F
  280:  	Call  SetAnimation  ( .Actor:Self 00000001 00260005 )
  298:  	Call  GetActorPos   ( .Actor:Self *Var3 *Var4 *Var5 )
  2B4:  	Add   *Var4  0000000A
  2C4:  	Add   *Var5  00000005
  2D4:  	Call  PlayEffect    ( ~FX:SmokeBurst:Black *Var3 *Var4 *Var5 *Fixed[1.0] 0000000A 00000000 00000000 00000000 00000000 00000000 00000000 00000000 )
  318:  EndIf
  320:  Call  SetGoalPos    ( .Actor:Self *Var0 *Var1 *Var2 )
  33C:  Call  JumpToGoal    ( .Actor:Self  10` .False .True .False )
  35C:  Call  SetGoalPos    ( .Actor:Self *Var0 *Var1 *Var2 )
  378:  Call  JumpToGoal    ( .Actor:Self  5` .False .True .False )
  398:  Loop  0000000A
  3A4:  	Call  SetPartFlagBits   ( .Actor:Self 00000003 00000001 .True )
  3C0:  	Call  SetPartFlagBits   ( .Actor:Self 00000004 00000001 .True )
  3DC:  	Wait  1`
  3E8:  	Call  SetPartFlagBits   ( .Actor:Self 00000003 00000001 .False )
  404:  	Call  SetPartFlagBits   ( .Actor:Self 00000004 00000001 .False )
  420:  	Wait  1`
  42C:  EndLoop
  434:  Call  SetPartFlagBits   ( .Actor:Self 00000003 00000001 .True )
  450:  Call  SetPartFlagBits   ( .Actor:Self 00000004 00000001 .True )
  46C:  Call  GetIndexFromHome  ( .Actor:Self *Var0 )
  480:  Mod   *Var0  00000004
  490:  Call  SetGoalToIndex    ( .Actor:Self *Var0 )
  4A4:  Call  GetGoalPos        ( .Actor:Self *Var0 *Var1 *Var2 )
  4C0:  Call  SetHomePos        ( .Actor:Self *Var0 *Var1 *Var2 )
  4DC:  Call  SetAnimation      ( .Actor:Self 00000001 00260001 )
  4F4:  Call  SetActorFlagBits  ( .Actor:Self 00000200 .False )
  50C:  Call  SetStatusTable    ( .Actor:Self $StatusTable_8021C1C8 )
  520:  Call  SetActorType      ( .Actor:Self 00000007 )
  534:  ExecWait  $Script_8021DC34
  540:  Call  SetActorFlagBits  ( .Actor:Self 00001000 .True )
  558:  Call  HPBarToHome       ( .Actor:Self )
  568:  Call  ResetAllActorSounds   ( .Actor:Self )
  578:  Return
  580:  End
}

#new:IdleAnimations $IdleAnimations_8021DB9C
{
	.Status:Normal    00260001
	.Status:Stone     00260000
	.Status:Sleep     00260008
	.Status:Poison    00260001
	.Status:Stop      00260000
	.Status:Static    00260001
	.Status:Paralyze  00260000
	.Status:Dizzy     00260007
	.Status:Fear      00260007
	.Status:End
}

#new:IdleAnimations $IdleAnimations_8021DBE8
{
	.Status:Normal    00260003
	.Status:Stone     00260000
	.Status:Sleep     00260008
	.Status:Poison    00260001
	.Status:Stop      00260000
	.Status:Static    00260003
	.Status:Paralyze  00260000
	.Status:Dizzy     00260007
	.Status:Fear      00260007
	.Status:End
}

#new:Script $Script_8021DC34
{
    0:  Call  BindTakeTurn      ( .Actor:Self $Script_TakeTurn_8021E788 )
   14:  Call  BindIdle  ( .Actor:Self $Script_Idle_8021DC80 )
   28:  Call  BindHandleEvent   ( .Actor:Self $Script_HandleEvent_8021DF5C )
   3C:  Return
   44:  End
}

#new:Script $Script_Idle_8021DC80
{
    0:  Label  A
    C:  Call  RandInt   ( 00000050 *Var0 )
   20:  Add   *Var0  00000050
   30:  Loop  *Var0
   3C:  	Label  0
   48:  	Call  GetStatusFlags    ( .Actor:Self *Var1 )
   5C:  	If  *Var1  &  ~Flags:StatusFlags:Sleep|Frozen|Fear|Paralyze|Dizzy|Stone|Stop % 35D000
   6C:  		Wait  1`
   78:  		Goto  0
   84:  	EndIf
   8C:  	Wait  1`
   98:  EndLoop
   A0:  Call  GetActorPos       ( .Actor:Self *Var0 *Var1 *Var2 )
   BC:  Add   *Var0  00000005
   CC:  Call  SetActorIdleSpeed ( .Actor:Self *Fixed[1.0] )
   E0:  Call  SetIdleAnimations ( .Actor:Self 00000001 $IdleAnimations_8021DBE8 )
   F8:  Call  SetIdleGoal       ( .Actor:Self *Var0 *Var1 *Var2 )
  114:  Call  IdleRunToGoal     ( .Actor:Self  0` )
  128:  Call  SetIdleAnimations ( .Actor:Self 00000001 $IdleAnimations_8021DB9C )
  140:  Loop  00000014
  14C:  	Label  1
  158:  	Call  GetStatusFlags    ( .Actor:Self *Var1 )
  16C:  	If  *Var1  &  ~Flags:StatusFlags:Sleep|Frozen|Fear|Paralyze|Dizzy|Stone|Stop % 35D000
  17C:  		Wait  1`
  188:  		Goto  1
  194:  	EndIf
  19C:  	Wait  1`
  1A8:  EndLoop
  1B0:  Call  GetActorPos       ( .Actor:Self *Var0 *Var1 *Var2 )
  1CC:  Sub   *Var0  00000005
  1DC:  Call  SetActorIdleSpeed ( .Actor:Self *Fixed[1.0] )
  1F0:  Call  SetIdleAnimations ( .Actor:Self 00000001 $IdleAnimations_8021DBE8 )
  208:  Call  SetIdleGoal       ( .Actor:Self *Var0 *Var1 *Var2 )
  224:  Call  IdleRunToGoal     ( .Actor:Self  0` )
  238:  Call  SetIdleAnimations ( .Actor:Self 00000001 $IdleAnimations_8021DB9C )
  250:  Loop  00000050
  25C:  	Label  2
  268:  	Call  GetStatusFlags    ( .Actor:Self *Var1 )
  27C:  	If  *Var1  &  ~Flags:StatusFlags:Sleep|Frozen|Fear|Paralyze|Dizzy|Stone|Stop % 35D000
  28C:  		Wait  1`
  298:  		Goto  2
  2A4:  	EndIf
  2AC:  	Wait  1`
  2B8:  EndLoop
  2C0:  Goto  A
  2CC:  Return
  2D4:  End
}

#new:Script $Script_HandleEvent_8021DF5C
{
    0:  Call  UseIdleAnimation  ( .Actor:Self .False )
   14:  Call  EnableIdleScript  ( .Actor:Self 00000000 )
   28:  Call  SetActorScale     ( .Actor:Self *Fixed[1.0] *Fixed[1.0] *Fixed[1.0] )
   44:  Call  GetLastEvent      ( .Actor:Self *Var0 )
   58:  Switch  *Var0
   64:  	CaseOR  ==  .Event:HitCombo % 9
   70:  	CaseOR  ==  .Event:Hit % A
   7C:  		SetConst  *Var0  00000001
   8C:  		SetConst  *Var1  00260005
   9C:  		ExecWait  DoNormalHit
   A8:  	EndCaseGroup
   B0:  	Case  ==  .Event:BurnHit % E
   BC:  		SetConst  *Var0  00000001
   CC:  		SetConst  *Var1  00260009
   DC:  		SetConst  *Var2  0026000A
   EC:  		ExecWait  DoBurnHit
   F8:  	Case  ==  .Event:BurnDeath % 24
  104:  		SetConst  *Var0  00000001
  114:  		SetConst  *Var1  00260009
  124:  		SetConst  *Var2  0026000A
  134:  		ExecWait  DoBurnHit
  140:  		SetConst  *Var0  00000001
  150:  		SetConst  *Var1  0026000A
  160:  		ExecWait  DoDeath
  16C:  		Return
  174:  	Case  ==  .Event:SpinSmashHit % B
  180:  		SetConst  *Var0  00000001
  190:  		SetConst  *Var1  00260005
  1A0:  		ExecWait  DoSpinSmashHit
  1AC:  	Case  ==  .Event:SpinSmashDeath % 21
  1B8:  		SetConst  *Var0  00000001
  1C8:  		SetConst  *Var1  00260005
  1D8:  		ExecWait  DoSpinSmashHit
  1E4:  		SetConst  *Var0  00000001
  1F4:  		SetConst  *Var1  00260006
  204:  		ExecWait  DoDeath
  210:  		Return
  218:  	Case  ==  .Event:ShockHit % 2F
  224:  		SetConst  *Var0  00000001
  234:  		SetConst  *Var1  0026000E
  244:  		ExecWait  DoShockHit
  250:  		SetConst  *Var0  00000001
  260:  		SetConst  *Var1  00260005
  270:  		ExecWait  DoJumpBack
  27C:  		Call  JumpToGoal    ( .Actor:Self  5` .False .True .False )
  29C:  		Call  SetAnimationRate      ( .Actor:Self 00000001 *Fixed[2.0] )
  2B4:  		Call  SetAnimation  ( .Actor:Self 00000001 00260007 )
  2CC:  		Call  SetGoalToHome ( .Actor:Self )
  2DC:  		Call  SetActorSpeed ( .Actor:Self *Fixed[8.0] )
  2F0:  		Call  RunToGoal     ( .Actor:Self  0` .False )
  308:  		Call  SetAnimationRate      ( .Actor:Self 00000001 *Fixed[1.0] )
  320:  		Wait  5`
  32C:  		Call  SetAnimation  ( .Actor:Self 00000001 00260001 )
  344:  		Call  SetActorJumpGravity   ( .Actor:Self *Fixed[1.6] )
  358:  		Call  JumpToGoal    ( .Actor:Self  5` .False .True .False )
  378:  	Case  ==  .Event:ShockDeath % 26
  384:  		SetConst  *Var0  00000001
  394:  		SetConst  *Var1  0026000E
  3A4:  		ExecWait  DoShockHit
  3B0:  		SetConst  *Var0  00000001
  3C0:  		SetConst  *Var1  00260006
  3D0:  		ExecWait  DoDeath
  3DC:  		Return
  3E4:  	Case  ==  .Event:StarBeam % 13
  3F0:  	CaseOR  ==  00000017 % 17
  3FC:  	CaseOR  ==  .Event:Immune % 19
  408:  	CaseOR  ==  .Event:AirLiftFailed % 1F
  414:  		SetConst  *Var0  00000001
  424:  		SetConst  *Var1  00260001
  434:  		ExecWait  DoImmune
  440:  	EndCaseGroup
  448:  	Case  ==  .Event:Death % 20
  454:  		SetConst  *Var0  00000001
  464:  		SetConst  *Var1  00260005
  474:  		ExecWait  DoNormalHit
  480:  		Wait  10`
  48C:  		SetConst  *Var0  00000001
  49C:  		SetConst  *Var1  00260006
  4AC:  		ExecWait  DoDeath
  4B8:  		Return
  4C0:  	Case  ==  .Event:EndFirstStrike % 35
  4CC:  		Call  SetAnimationRate  ( .Actor:Self 00000001 *Fixed[2.0] )
  4E4:  		Call  SetAnimation  ( .Actor:Self 00000001 00260003 )
  4FC:  		Call  SetGoalToHome ( .Actor:Self )
  50C:  		Call  SetActorSpeed ( .Actor:Self *Fixed[4.0] )
  520:  		Call  RunToGoal     ( .Actor:Self  0` .False )
  538:  		Call  SetAnimationRate  ( .Actor:Self 00000001 *Fixed[1.0] )
  550:  		Call  HPBarToHome   ( .Actor:Self )
  560:  	Case  ==  .Event:RecoverStatus % 31
  56C:  		SetConst  *Var0  00000001
  57C:  		SetConst  *Var1  00260001
  58C:  		ExecWait  DoRecover
  598:  	Case  ==  .Event:ScareAway % 39
  5A4:  		SetConst  *Var0  00000001
  5B4:  		SetConst  *Var1  00260003
  5C4:  		SetConst  *Var2  00260005
  5D4:  		ExecWait  DoScareAway
  5E0:  		Return
  5E8:  	Case  ==  .Event:BeginAirLift % 3A
  5F4:  		SetConst  *Var0  00000001
  604:  		SetConst  *Var1  00260003
  614:  		ExecWait  DoAirLift
  620:  	Case  ==  .Event:BlowAway % 16
  62C:  		SetConst  *Var0  00000001
  63C:  		SetConst  *Var1  00260005
  64C:  		ExecWait  DoBlowAway
  658:  		Return
  660:  	Default
  668:  EndSwitch
  670:  Call  SetAnimation      ( .Actor:Self 00000001 00260001 )
  688:  Call  EnableIdleScript  ( .Actor:Self 00000001 )
  69C:  Call  UseIdleAnimation  ( .Actor:Self .True )
  6B0:  Return
  6B8:  End
}

#new:FloatTable $FloatTable_8021E61C
{
	0.0      0.017452 0.034899 0.052336 0.069756 0.087156 0.104528 0.121869
	0.139173 0.156434 0.173648 0.190809 0.207912 0.224951 0.241922 0.258819
	0.275637 0.292372 0.309017 0.325568 0.34202  0.358368 0.374607 0.390731
	0.406737 0.422618 0.438371 0.45399  0.469472 0.48481  0.5      0.515038
	0.529919 0.544639 0.559193 0.573576 0.587785 0.601815 0.615661 0.62932
	0.642788 0.656059 0.669131 0.681998 0.694658 0.707107 0.71934  0.731354
	0.743145 0.75471  0.766044 0.777146 0.788011 0.798636 0.809017 0.819152
	0.829038 0.838671 0.848048 0.857167 0.866025 0.87462  0.882948 0.891007
	0.898794 0.906308 0.913545 0.920505 0.927184 0.93358  0.939693 0.945519
	0.951057 0.956305 0.961262 0.965926 0.970296 0.97437  0.978148 0.981627
	0.984808 0.987688 0.990268 0.992546 0.994522 0.996195 0.997564 0.99863
	0.999391 0.999848 1.0
}

#new:Script $Script_TakeTurn_8021E788
{
    0:  Call  UseIdleAnimation  ( .Actor:Self .False )
   14:  Call  EnableIdleScript  ( .Actor:Self 00000000 )
   28:  Call  SetTargetActor    ( .Actor:Self .Actor:Player )
   3C:  Call  UseBattleCamPreset    ( 0000003F )
   4C:  Call  BattleCamTargetActor  ( .Actor:Self )
   5C:  Call  8024ECF8  ( FFFFFFFF 00000001 00000000 )
   74:  Call  SetAnimation      ( .Actor:Self 00000001 00260003 )
   8C:  Call  SetGoalToTarget   ( .Actor:Self )
   9C:  Call  AddGoalPos        ( .Actor:Self  50`  0`  0` )
   B8:  Call  SetActorSpeed     ( .Actor:Self *Fixed[6.0] )
   CC:  Call  RunToGoal ( .Actor:Self  0` .False )
   E4:  Call  SetAnimation      ( .Actor:Self 00000001 00260001 )
   FC:  Call  SetActorDispOffset    ( .Actor:Self 00000000 FFFFFFFF 00000000 )
  118:  Wait  1`
  124:  Call  SetActorDispOffset    ( .Actor:Self 00000000 FFFFFFFE 00000000 )
  140:  Wait  5`
  14C:  Call  SetActorDispOffset    ( .Actor:Self 00000000 00000000 00000000 )
  168:  Call  SetAnimation      ( .Actor:Self 00000001 00260004 )
  180:  Call  EnemyTestTarget   ( .Actor:Self *Var0 ~Flags:DamageType:0 00000000 00000001 00000010 )
  1A4:  Switch  *Var0
  1B0:  	CaseOR  ==  .HitResult:Miss % 6
  1BC:  	CaseOR  ==  .HitResult:Lucky % 5
  1C8:  		Set   *VarA  *Var0
  1D8:  		Call  SetGoalToTarget   ( .Actor:Self )
  1E8:  		Call  GetGoalPos        ( .Actor:Self *Var0 *Var1 *Var2 )
  204:  		Sub   *Var0  0000000A
  214:  		Set   *Var1  0000000A
  224:  		Add   *Var2  00000003
  234:  		Call  SetGoalPos        ( .Actor:Self *Var0 *Var1 *Var2 )
  250:  		Call  SetActorJumpGravity   ( .Actor:Self *Fixed[1.2] )
  264:  		Thread
  26C:  			Call  GetActorPos   ( .Actor:Self *Var1 *Var2 *Var0 )
  288:  			Set   *Var0  00000000
  298:  			Loop  00000010
  2A4:  				Call  GetActorPos   ( .Actor:Self *Var4 *Var5 *Var6 )
  2C0:  				Call  $Function_80218464    ( *Var1 *Var2 *Var4 *Var5 *Var0 )
  2E0:  				Call  SetActorRotation      ( .Actor:Self 00000000 00000000 *Var0 )
  2FC:  				Set   *Var1  *Var4
  30C:  				Set   *Var2  *Var5
  31C:  				Set   *Var3  *Var6
  32C:  				Wait  1`
  338:  			EndLoop
  340:  		EndThread
  348:  		Thread
  350:  			Wait  6`
  35C:  			Call  SetAnimation  ( .Actor:Self 00000001 00260004 )
  374:  		EndThread
  37C:  		Call  JumpToGoal    ( .Actor:Self  16` .False .True .False )
  39C:  		Call  SetAnimation  ( .Actor:Self 00000001 00260008 )
  3B4:  		Call  SetActorScale ( .Actor:Self *Fixed[1.1] *Fixed[0.8] *Fixed[1.0] )
  3D0:  		Call  SetActorDispOffset    ( .Actor:Self 00000000 00000005 00000000 )
  3EC:  		Wait  1`
  3F8:  		Call  SetActorScale ( .Actor:Self *Fixed[1.3] *Fixed[0.5] *Fixed[1.0] )
  414:  		Call  SetActorDispOffset    ( .Actor:Self 00000000 FFFFFFFE 00000000 )
  430:  		Wait  1`
  43C:  		Call  SetActorScale ( .Actor:Self *Fixed[1.0] *Fixed[1.0] *Fixed[1.0] )
  458:  		Call  SetActorDispOffset    ( .Actor:Self 00000000 00000007 00000000 )
  474:  		Call  SetAnimation  ( .Actor:Self 00000001 00260005 )
  48C:  		Wait  5`
  498:  		If  *VarA  ==  .HitResult:Lucky % 5
  4A8:  			Call  EnemyTestTarget   ( .Actor:Self *Var0 ~Flags:DamageType:TriggerLucky 00000000 00000000 00000000 )
  4CC:  		EndIf
  4D4:  		Wait  5`
  4E0:  		Call  SetActorDispOffset    ( .Actor:Self 00000000 00000000 00000000 )
  4FC:  		Call  SetAnimation      ( .Actor:Self 00000001 00260004 )
  514:  		Call  SetGoalToTarget   ( .Actor:Self )
  524:  		Call  GetGoalPos        ( .Actor:Self *Var0 *Var1 *Var2 )
  540:  		Add   *Var0  00000014
  550:  		Set   *Var1  00000000
  560:  		Call  SetGoalPos        ( .Actor:Self *Var0 *Var1 *Var2 )
  57C:  		Call  SetActorJumpGravity   ( .Actor:Self *Fixed[2.0] )
  590:  		Thread
  598:  			Wait  4`
  5A4:  			Set   *Var0  000000B4
  5B4:  			Loop  00000004
  5C0:  				Sub   *Var0  0000002D
  5D0:  				Call  SetActorRotation  ( .Actor:Self 00000000 00000000 *Var0 )
  5EC:  				Wait  1`
  5F8:  			EndLoop
  600:  			Call  SetAnimation  ( .Actor:Self 00000001 00260004 )
  618:  		EndThread
  620:  		Call  JumpToGoal        ( .Actor:Self  15` .False .True .False )
  640:  		Call  SetAnimation      ( .Actor:Self 00000001 00260007 )
  658:  		Wait  5`
  664:  		Call  UseBattleCamPreset    ( 00000002 )
  674:  		Call  YieldTurn ( )
  680:  		Call  SetActorYaw       ( .Actor:Self  180` )
  694:  		Call  AddActorDecoration    ( .Actor:Self 00000001 00000000 .Decoration:Sweat )
  6B0:  		Call  SetAnimationRate  ( .Actor:Self 00000001 *Fixed[2.0] )
  6C8:  		Call  SetGoalToHome     ( .Actor:Self )
  6D8:  		Call  SetActorSpeed     ( .Actor:Self *Fixed[8.0] )
  6EC:  		Call  RunToGoal ( .Actor:Self  0` .False )
  704:  		Call  SetAnimationRate  ( .Actor:Self 00000001 *Fixed[1.0] )
  71C:  		Call  SetActorYaw       ( .Actor:Self  0` )
  730:  		Wait  5`
  73C:  		Call  SetAnimation      ( .Actor:Self 00000001 00260001 )
  754:  		Call  SetActorJumpGravity   ( .Actor:Self *Fixed[1.6] )
  768:  		Call  JumpToGoal        ( .Actor:Self  5` .False .True .False )
  788:  		Call  RemoveActorDecoration ( .Actor:Self 00000001 00000000 )
  7A0:  		Call  EnableIdleScript  ( .Actor:Self 00000001 )
  7B4:  		Call  UseIdleAnimation  ( .Actor:Self .True )
  7C8:  		Return
  7D0:  	EndCaseGroup
  7D8:  	Default
  7E0:  		Call  SetGoalToTarget       ( .Actor:Self )
  7F0:  		Call  SetActorJumpGravity   ( .Actor:Self *Fixed[1.2] )
  804:  		Thread
  80C:  			Call  GetActorPos   ( .Actor:Self *Var1 *Var2 *Var0 )
  828:  			Set   *Var0  00000000
  838:  			Loop  00000010
  844:  				Call  GetActorPos   ( .Actor:Self *Var4 *Var5 *Var6 )
  860:  				Call  $Function_80218464    ( *Var1 *Var2 *Var4 *Var5 *Var0 )
  880:  				Call  SetActorRotation      ( .Actor:Self 00000000 00000000 *Var0 )
  89C:  				Set   *Var1  *Var4
  8AC:  				Set   *Var2  *Var5
  8BC:  				Set   *Var3  *Var6
  8CC:  				Wait  1`
  8D8:  			EndLoop
  8E0:  		EndThread
  8E8:  		Thread
  8F0:  			Wait  6`
  8FC:  			Call  SetAnimation  ( .Actor:Self 00000001 00260004 )
  914:  		EndThread
  91C:  		Call  JumpToGoal    ( .Actor:Self  16` .False .True .False )
  93C:  		Call  SetAnimation  ( .Actor:Self 00000001 0026000B )
  954:  		Call  SetActorScale ( .Actor:Self *Fixed[1.1] *Fixed[0.8] *Fixed[1.0] )
  970:  		Wait  1`
  97C:  		Call  SetActorScale ( .Actor:Self *Fixed[1.3] *Fixed[0.5] *Fixed[1.0] )
  998:  		Wait  1`
  9A4:  EndSwitch
  9AC:  Call  EnemyDamageTarget ( .Actor:Self *Var0 ~Flags:DamageType:0 00000000 00000000 00000001 00000020 )
  9D4:  Switch  *Var0
  9E0:  	CaseOR  ==  .HitResult:Hit % 0
  9EC:  	CaseOR  ==  .HitResult:QuakeImmune % 2
  9F8:  		Call  UseBattleCamPreset    ( 00000002 )
  A08:  		Call  SetActorScale ( .Actor:Self *Fixed[1.1] *Fixed[0.8] *Fixed[1.0] )
  A24:  		Wait  1`
  A30:  		Call  SetActorScale ( .Actor:Self *Fixed[1.0] *Fixed[1.0] *Fixed[1.0] )
  A4C:  		Wait  1`
  A58:  		Call  SetActorRotation      ( .Actor:Self 00000000 00000000 00000000 )
  A74:  		Call  SetActorDispOffset    ( .Actor:Self 00000000 00000000 00000000 )
  A90:  		Call  SetAnimation  ( .Actor:Self 00000001 00260001 )
  AA8:  		Call  GetGoalPos    ( .Actor:Self *Var0 *Var1 *Var2 )
  AC4:  		Add   *Var0  00000028
  AD4:  		Set   *Var1  00000000
  AE4:  		Call  SetActorJumpGravity   ( .Actor:Self *Fixed[1.8] )
  AF8:  		Call  SetGoalPos    ( .Actor:Self *Var0 *Var1 *Var2 )
  B14:  		Call  JumpToGoal    ( .Actor:Self  10` .False .True .False )
  B34:  		Add   *Var0  0000001E
  B44:  		Call  SetGoalPos    ( .Actor:Self *Var0 *Var1 *Var2 )
  B60:  		Call  JumpToGoal    ( .Actor:Self  8` .False .True .False )
  B80:  		Add   *Var0  00000014
  B90:  		Call  SetGoalPos    ( .Actor:Self *Var0 *Var1 *Var2 )
  BAC:  		Call  JumpToGoal    ( .Actor:Self  6` .False .True .False )
  BCC:  		Call  SetAnimation  ( .Actor:Self 00000001 00260001 )
  BE4:  		Wait  3`
  BF0:  		Call  YieldTurn ( )
  BFC:  		Call  SetAnimationRate      ( .Actor:Self 00000001 *Fixed[2.0] )
  C14:  		Call  SetAnimation  ( .Actor:Self 00000001 00260003 )
  C2C:  		Call  SetGoalToHome ( .Actor:Self )
  C3C:  		Call  SetActorSpeed ( .Actor:Self *Fixed[8.0] )
  C50:  		Call  RunToGoal     ( .Actor:Self  0` .False )
  C68:  		Call  SetAnimationRate      ( .Actor:Self 00000001 *Fixed[1.0] )
  C80:  	EndCaseGroup
  C88:  EndSwitch
  C90:  Call  EnableIdleScript  ( .Actor:Self 00000001 )
  CA4:  Call  UseIdleAnimation  ( .Actor:Self .True )
  CB8:  Return
  CC0:  End
}

#new:Script $Script_Init_8021F450
{
    0:  Call  BindTakeTurn  ( .Actor:Self $Script_TakeTurn_8021CDFC )
   14:  Call  BindIdle      ( .Actor:Self $Script_Idle_8021C4D4 )
   28:  Call  BindHandleEvent   ( .Actor:Self $Script_HandleEvent_8021C808 )
   3C:  Call  BindNextTurn  ( .Actor:Self $Script_NextTurn_8021F690 )
   50:  Return
   58:  End
}

#new:Script $Script_8021F4B0
{
    0:  Call  SetActorYaw   ( .Actor:Player  30` )
   14:  Wait  1`
   20:  Call  SetActorYaw   ( .Actor:Player  60` )
   34:  Wait  1`
   40:  Call  SetActorYaw   ( .Actor:Player  90` )
   54:  Wait  1`
   60:  Call  SetActorYaw   ( .Actor:Player  120` )
   74:  Wait  1`
   80:  Call  SetActorYaw   ( .Actor:Player  150` )
   94:  Wait  1`
   A0:  Call  SetActorYaw   ( .Actor:Player  180` )
   B4:  Wait  5`
   C0:  Call  UseBattleCamPreset    ( 00000002 )
   D0:  Call  MoveBattleCamOver     (  10` )
   E0:  Call  ActorSpeak    ( 000B00B8 .Actor:Partner 00000000 009D0008 009D0001 ) % Listen up, Mario. The enemy's flying. Your Hammer  ...
  100:  Set   *GF_Tutorial_FlyingEnemy  .True
  110:  Call  SetActorYaw   ( .Actor:Player  150` )
  124:  Wait  1`
  130:  Call  SetActorYaw   ( .Actor:Player  120` )
  144:  Wait  1`
  150:  Call  SetActorYaw   ( .Actor:Player  90` )
  164:  Wait  1`
  170:  Call  SetActorYaw   ( .Actor:Player  60` )
  184:  Wait  1`
  190:  Call  SetActorYaw   ( .Actor:Player  30` )
  1A4:  Wait  1`
  1B0:  Call  SetActorYaw   ( .Actor:Player  0` )
  1C4:  Wait  5`
  1D0:  Return
  1D8:  End
}

#new:Script $Script_NextTurn_8021F690
{
    0:  Call  UseIdleAnimation  ( .Actor:Partner .False )
   14:  Call  EnableIdleScript  ( .Actor:Partner 00000000 )
   28:  Call  GetBattlePhase    ( *Var0 )
   38:  Switch  *Var0
   44:  	Case  ==  0000000A
   50:  		If  *GF_Tutorial_FlyingEnemy  ==  .False
   60:  			ExecWait  $Script_8021F4B0
   6C:  		EndIf
   74:  EndSwitch
   7C:  Call  EnableIdleScript  ( .Actor:Partner 00000001 )
   90:  Call  UseIdleAnimation  ( .Actor:Partner .True )
   A4:  Return
   AC:  End
}

PADDING: 8021F744 to 8021F750 (0044EB84 to 0044EB90)
00000000 00000000 00000000

#new:DefenseTable $DefenseTable_8021F750
{
	.Element:Normal 00000000
	.Element:End
}

#new:DefenseTable $DefenseTable_8021F75C
{
	.Element:Normal 00000000
	.Element:End
}

#new:StatusTable $StatusTable_8021F768
{
	.Status:Normal      0`
	.Status:Default     0`
	.Status:Sleep     100`
	.Status:Poison    100`
	.Status:Frozen    100`
	.Status:Dizzy     100`
	.Status:Fear      100`
	.Status:Static    100`
	.Status:Paralyze  100`
	.Status:Shrink    100`
	.Status:Stop      100`
	.Status:DefaultTurnMod    0`
	.Status:SleepTurnMod      0`
	.Status:PoisonTurnMod     0`
	.Status:FrozenTurnMod     0`
	.Status:DizzyTurnMod      0`
	.Status:FearTurnMod       0`
	.Status:StaticTurnMod     0`
	.Status:ParalyzeTurnMod   0`
	.Status:ShrinkTurnMod     0`
	.Status:StopTurnMod       0`
	.Status:End
}

#new:StatusTable $StatusTable_8021F814
{
	.Status:Normal      0`
	.Status:Default     0`
	.Status:Sleep     100`
	.Status:Poison     80`
	.Status:Frozen    100`
	.Status:Dizzy     100`
	.Status:Fear       80`
	.Status:Static     80`
	.Status:Paralyze  100`
	.Status:Shrink    100`
	.Status:Stop      100`
	.Status:DefaultTurnMod    0`
	.Status:SleepTurnMod      0`
	.Status:PoisonTurnMod     0`
	.Status:FrozenTurnMod     0`
	.Status:DizzyTurnMod      1`
	.Status:FearTurnMod       0`
	.Status:StaticTurnMod     0`
	.Status:ParalyzeTurnMod   0`
	.Status:ShrinkTurnMod     0`
	.Status:StopTurnMod       0`
	.Status:End
}

#new:PartsTable $PartsTable_8021F8C0
{
	00020001 01000000 001400FF $IdleAnimations_8022113C $DefenseTable_8021F750 00000000 00000000 00F60000 00000000
	00800000 02000000 001800FF $IdleAnimations_8021F978 $DefenseTable_8021F75C 00004000 00000000 00F60000 00000000
	00020001 03000000 F01800FF $IdleAnimations_8021FA10 $DefenseTable_8021F750 00000000 00000000 00F60000 00000000
	00020001 04000000 F01800FF $IdleAnimations_8021FA1C $DefenseTable_8021F750 00000000 00000000 00F60000 00000000
}

#new:Actor $ParagoombaB
{
	% stats
	[Index]         8b
	[Level]         6`b
	[MaxHP]         2`b
	[Coins]         1`b
	[Flags]       00000200
	[StatusTable] $StatusTable_8021F814
	% ai
	[PartsCount]    4`s
	[PartsTable]  $PartsTable_8021F8C0
	[Script]      $Script_Init_8021FA28
	% move effectiveness
	[Escape]       90`b
	[Item]        100`b
	[AirLift]     100`b
	[Hurricane]   100`b % Bow's "Spook" as well
	[UpAndAway]    95`b
	[PowerBounce] 100`b
	[SpinSmash]     0`b % weight (0-4)
	% ui positions
	[Size]         36`b  26`b % width height
	[HealthBar]     0`b   0`b % dx dy
	[StatusTurn]  -10`b  20`b % dx dy
	[StatusIcon]   10`b  20`b % dx dy
}

#new:IdleAnimations $IdleAnimations_8021F978
{
	.Status:Normal    00280001
	.Status:Stone     00280000
	.Status:Sleep     0028000B
	.Status:Poison    00280001
	.Status:Stop      00280000
	.Status:Static    00280001
	.Status:Paralyze  00280000
	.Status:Dizzy     0028000C
	.Status:Fear      0028000C
	.Status:End
}

#new:IdleAnimations $IdleAnimations_8021F9C4
{
	.Status:Normal    00280004
	.Status:Stone     00280000
	.Status:Sleep     0028000B
	.Status:Poison    00280001
	.Status:Stop      00280000
	.Status:Static    00280004
	.Status:Paralyze  00280000
	.Status:Dizzy     0028000C
	.Status:Fear      0028000C
	.Status:End
}

#new:IdleAnimations $IdleAnimations_8021FA10
{
	.Status:Normal    00280009
	.Status:End
}

#new:IdleAnimations $IdleAnimations_8021FA1C
{
	.Status:Normal    0028000A
	.Status:End
}

#new:Script $Script_Init_8021FA28
{
    0:  Call  BindTakeTurn      ( .Actor:Self $Script_TakeTurn_8022039C )
   14:  Call  BindIdle  ( .Actor:Self $Script_Idle_8021FA74 )
   28:  Call  BindHandleEvent   ( .Actor:Self $Script_HandleEvent_8021FDA8 )
   3C:  Return
   44:  End
}

#new:Script $Script_Idle_8021FA74
{
    0:  Label  A
    C:  Call  RandInt   ( 00000050 *Var0 )
   20:  Add   *Var0  00000050
   30:  Loop  *Var0
   3C:  	Label  0
   48:  	Call  GetStatusFlags    ( .Actor:Self *Var1 )
   5C:  	If  *Var1  &  ~Flags:StatusFlags:Sleep|Frozen|Fear|Paralyze|Dizzy|Stone|Stop % 35D000
   6C:  		Wait  1`
   78:  		Goto  0
   84:  	EndIf
   8C:  	Wait  1`
   98:  EndLoop
   A0:  Call  GetActorPos       ( .Actor:Self *Var0 *Var1 *Var2 )
   BC:  Add   *Var0  00000005
   CC:  Call  SetActorIdleSpeed ( .Actor:Self *Fixed[0.6] )
   E0:  Call  SetIdleAnimations ( .Actor:Self 00000002 $IdleAnimations_8021F9C4 )
   F8:  Call  SetIdleGoal       ( .Actor:Self *Var0 *Var1 *Var2 )
  114:  Call  IdleFlyToGoal     ( .Actor:Self  0`  -5` .Easing:Linear )
  130:  Loop  00000014
  13C:  	Label  1
  148:  	Call  GetStatusFlags    ( .Actor:Self *Var1 )
  15C:  	If  *Var1  &  ~Flags:StatusFlags:Sleep|Frozen|Fear|Paralyze|Dizzy|Stone|Stop % 35D000
  16C:  		Wait  1`
  178:  		Goto  1
  184:  	EndIf
  18C:  	Wait  1`
  198:  EndLoop
  1A0:  Call  GetActorPos       ( .Actor:Self *Var0 *Var1 *Var2 )
  1BC:  Sub   *Var0  00000005
  1CC:  Call  SetActorIdleSpeed ( .Actor:Self *Fixed[0.6] )
  1E0:  Call  SetIdleGoal       ( .Actor:Self *Var0 *Var1 *Var2 )
  1FC:  Call  IdleFlyToGoal     ( .Actor:Self  0`  -5` .Easing:Linear )
  218:  Call  SetIdleAnimations ( .Actor:Self 00000002 $IdleAnimations_8021F978 )
  230:  Loop  00000028
  23C:  	Label  2
  248:  	Call  GetStatusFlags    ( .Actor:Self *Var1 )
  25C:  	If  *Var1  &  ~Flags:StatusFlags:Sleep|Frozen|Fear|Paralyze|Dizzy|Stone|Stop % 35D000
  26C:  		Wait  1`
  278:  		Goto  2
  284:  	EndIf
  28C:  	Wait  1`
  298:  EndLoop
  2A0:  Goto  A
  2AC:  Return
  2B4:  End
}

#new:Script $Script_8021FD30
{
    0:  Call  ResetAllActorSounds   ( .Actor:Self )
   10:  Call  SetGoalToHome ( .Actor:Self )
   20:  Call  SetActorSpeed ( .Actor:Self *Fixed[7.0] )
   34:  Call  FlyToGoal     ( .Actor:Self  0`  1` .Easing:SinOut )
   50:  Call  SetAnimation  ( .Actor:Self 00000002 00280001 )
   68:  Return
   70:  End
}

#new:Script $Script_HandleEvent_8021FDA8
{
    0:  Call  UseIdleAnimation  ( .Actor:Self .False )
   14:  Call  EnableIdleScript  ( .Actor:Self 00000000 )
   28:  Call  GetLastEvent      ( .Actor:Self *Var0 )
   3C:  Switch  *Var0
   48:  	CaseOR  ==  .Event:HitCombo % 9
   54:  	CaseOR  ==  .Event:Hit % A
   60:  		SetConst  *Var0  00000002
   70:  		SetConst  *Var1  00280006
   80:  		ExecWait  DoNormalHit
   8C:  		Call  GetBattlePhase    ( *Var0 )
   9C:  		If  *Var0  ==  00000001
   AC:  			Call  GetEncounterState ( *Var0 )
   BC:  			If  *Var0  ==  00000004
   CC:  				ExecWait  $Script_80220BB4
   D8:  			EndIf
   E0:  		EndIf
   E8:  	EndCaseGroup
   F0:  	Case  ==  .Event:BurnHit % E
   FC:  		SetConst  *Var0  00000002
  10C:  		SetConst  *Var1  0028000D
  11C:  		SetConst  *Var2  0028000E
  12C:  		ExecWait  DoBurnHit
  138:  	Case  ==  .Event:BurnDeath % 24
  144:  		SetConst  *Var0  00000002
  154:  		SetConst  *Var1  0028000D
  164:  		SetConst  *Var2  0028000E
  174:  		ExecWait  DoBurnHit
  180:  		SetConst  *Var0  00000002
  190:  		SetConst  *Var1  0028000E
  1A0:  		ExecWait  DoDeath
  1AC:  		Return
  1B4:  	Case  ==  .Event:FallTrigger % C
  1C0:  		SetConst  *Var0  00000002
  1D0:  		SetConst  *Var1  00280006
  1E0:  		ExecWait  DoNormalHit
  1EC:  		ExecWait  $Script_80220BB4
  1F8:  	Case  ==  0000000F % F
  204:  		SetConst  *Var0  00000002
  214:  		SetConst  *Var1  0028000D
  224:  		SetConst  *Var2  0028000E
  234:  		ExecWait  DoBurnHit
  240:  		ExecWait  $Script_80220BB4
  24C:  	Case  ==  .Event:ShockHit % 2F
  258:  		SetConst  *Var0  00000002
  268:  		SetConst  *Var1  0028000F
  278:  		ExecWait  DoShockHit
  284:  		SetConst  *Var0  00000002
  294:  		SetConst  *Var1  00280006
  2A4:  		ExecWait  DoJumpBack
  2B0:  		Call  SetAnimation  ( .Actor:Self 00000002 0028000C )
  2C8:  		ExecWait  $Script_8021FD30
  2D4:  	Case  ==  .Event:ShockDeath % 26
  2E0:  		SetConst  *Var0  00000002
  2F0:  		SetConst  *Var1  0028000F
  300:  		ExecWait  DoShockHit
  30C:  		SetConst  *Var0  00000002
  31C:  		SetConst  *Var1  00280007
  32C:  		ExecWait  DoDeath
  338:  		Return
  340:  	Case  ==  .Event:StarBeam % 13
  34C:  	CaseOR  ==  00000017 % 17
  358:  	CaseOR  ==  .Event:Immune % 19
  364:  	CaseOR  ==  .Event:AirLiftFailed % 1F
  370:  		SetConst  *Var0  00000002
  380:  		SetConst  *Var1  00280001
  390:  		ExecWait  DoImmune
  39C:  	EndCaseGroup
  3A4:  	Case  ==  .Event:Death % 20
  3B0:  		SetConst  *Var0  00000002
  3C0:  		SetConst  *Var1  00280006
  3D0:  		ExecWait  DoNormalHit
  3DC:  		Wait  10`
  3E8:  		SetConst  *Var0  00000002
  3F8:  		SetConst  *Var1  00280007
  408:  		ExecWait  DoDeath
  414:  		Return
  41C:  	Case  ==  .Event:BeginFirstStrike % 38
  428:  		Call  SetActorPos       ( .Actor:Self  20`  0`  0` )
  444:  		Call  HPBarToCurrent    ( .Actor:Self )
  454:  	Case  ==  .Event:EndFirstStrike % 35
  460:  		Call  SetAnimation  ( .Actor:Self 00000002 00280004 )
  478:  		ExecWait  $Script_8021FD30
  484:  		Call  HPBarToHome   ( .Actor:Self )
  494:  	Case  ==  .Event:RecoverStatus % 31
  4A0:  		SetConst  *Var0  00000002
  4B0:  		SetConst  *Var1  00280001
  4C0:  		ExecWait  DoRecover
  4CC:  	Case  ==  .Event:ScareAway % 39
  4D8:  		Call  SetActorFlagBits  ( .Actor:Self 00000200 .False )
  4F0:  		SetConst  *Var0  00000002
  500:  		SetConst  *Var1  00280004
  510:  		SetConst  *Var2  00280006
  520:  		ExecWait  DoScareAway
  52C:  		Return
  534:  	Case  ==  .Event:BeginAirLift % 3A
  540:  		SetConst  *Var0  00000002
  550:  		SetConst  *Var1  00280004
  560:  		ExecWait  DoAirLift
  56C:  	Case  ==  .Event:BlowAway % 16
  578:  		SetConst  *Var0  00000002
  588:  		SetConst  *Var1  00280006
  598:  		ExecWait  DoBlowAway
  5A4:  		Return
  5AC:  	Default
  5B4:  EndSwitch
  5BC:  Call  EnableIdleScript  ( .Actor:Self FFFFFFFF )
  5D0:  Call  UseIdleAnimation  ( .Actor:Self .True )
  5E4:  Return
  5EC:  End
}

#new:Script $Script_TakeTurn_8022039C
{
    0:  Call  UseIdleAnimation  ( .Actor:Self .False )
   14:  Call  EnableIdleScript  ( .Actor:Self 00000000 )
   28:  Call  SetTargetActor    ( .Actor:Self .Actor:Player )
   3C:  Call  SetGoalToTarget   ( .Actor:Self )
   4C:  Call  UseBattleCamPreset    ( 0000003F )
   5C:  Call  BattleCamTargetActor  ( .Actor:Self )
   6C:  Call  8024ECF8  ( FFFFFFFF 00000001 00000000 )
   84:  Call  SetAnimation      ( .Actor:Self 00000002 00280004 )
   9C:  Call  SetGoalToTarget   ( .Actor:Self )
   AC:  Call  AddGoalPos        ( .Actor:Self  50`  0`  0` )
   C8:  Call  SetActorSpeed     ( .Actor:Self *Fixed[6.0] )
   DC:  Call  FlyToGoal ( .Actor:Self  0`  -4` .Easing:Linear )
   F8:  Call  EnemyTestTarget   ( .Actor:Self *Var0 ~Flags:DamageType:0 00000000 00000001 00000010 )
  11C:  Switch  *Var0
  128:  	CaseOR  ==  .HitResult:Miss % 6
  134:  	CaseOR  ==  .HitResult:Lucky % 5
  140:  		Set   *VarA  *Var0
  150:  		Wait  10`
  15C:  		Call  UseBattleCamPreset    ( 00000042 )
  16C:  		Call  SetBattleCamZoom  (  300` )
  17C:  		Call  BattleCamTargetActor  ( .Actor:Self )
  18C:  		Call  8024ECF8  ( FFFFFFFF 00000001 00000000 )
  1A4:  		Call  PlaySoundAtActor  ( .Actor:Self 000020E0 )
  1B8:  		Call  SetActorSounds    ( .Actor:Self .ActorSound:Jump 00000000 00000000 )
  1D4:  		Call  SetActorSpeed     ( .Actor:Self *Fixed[5.0] )
  1E8:  		Call  SetActorJumpGravity   ( .Actor:Self *Fixed[1.8] )
  1FC:  		Call  SetAnimation      ( .Actor:Self 00000002 00280005 )
  214:  		Call  GetActorPos       ( .Actor:Self *Var0 *Var1 *Var2 )
  230:  		Call  SetGoalPos        ( .Actor:Self *Var0 *Var1 *Var2 )
  24C:  		Call  JumpToGoal        ( .Actor:Self  10` .False .False .False )
  26C:  		Call  PlaySoundAtActor  ( .Actor:Self 000002C1 )
  280:  		Call  SetActorSounds    ( .Actor:Self .ActorSound:Fly 00000000 00000000 )
  29C:  		Call  SetGoalToTarget   ( .Actor:Self )
  2AC:  		Sub   *Var0  00000050
  2BC:  		Set   *Var1  00000014
  2CC:  		Call  SetGoalPos        ( .Actor:Self *Var0 *Var1 *Var2 )
  2E8:  		Call  SetActorSpeed     ( .Actor:Self *Fixed[8.0] )
  2FC:  		Call  SetAnimation      ( .Actor:Self 00000002 00280005 )
  314:  		Call  FlyToGoal ( .Actor:Self  0`  -10` .Easing:QuadraticOut )
  330:  		Thread
  338:  			Loop  00000004
  344:  				Call  PlaySoundAtActor  ( .Actor:Self 000020DF )
  358:  				Wait  4`
  364:  			EndLoop
  36C:  		EndThread
  374:  		Call  SetAnimation  ( .Actor:Self 00000002 00280002 )
  38C:  		Call  AddActorDecoration    ( .Actor:Self 00000002 00000000 .Decoration:Sweat )
  3A8:  		Call  SetAnimationRate      ( .Actor:Self 00000002 *Fixed[3.0] )
  3C0:  		Wait  10`
  3CC:  		If  *VarA  ==  .HitResult:Lucky % 5
  3DC:  			Call  EnemyTestTarget   ( .Actor:Self *Var0 ~Flags:DamageType:TriggerLucky 00000000 00000000 00000000 )
  400:  		EndIf
  408:  		Wait  10`
  414:  		Call  SetAnimationRate  ( .Actor:Self 00000002 *Fixed[1.0] )
  42C:  		Call  UseBattleCamPreset    ( 00000002 )
  43C:  		Call  ResetAllActorSounds   ( .Actor:Self )
  44C:  		Call  YieldTurn ( )
  458:  		Call  SetAnimation      ( .Actor:Self 00000002 00280004 )
  470:  		Call  SetActorYaw       ( .Actor:Self  180` )
  484:  		ExecWait  $Script_8021FD30
  490:  		Call  SetActorYaw       ( .Actor:Self  0` )
  4A4:  		Call  RemoveActorDecoration ( .Actor:Self 00000002 00000000 )
  4BC:  		Call  EnableIdleScript  ( .Actor:Self FFFFFFFF )
  4D0:  		Call  UseIdleAnimation  ( .Actor:Self .True )
  4E4:  		Return
  4EC:  	EndCaseGroup
  4F4:  	Default
  4FC:  		Wait  10`
  508:  		Call  UseBattleCamPreset    ( 00000042 )
  518:  		Call  SetBattleCamZoom  (  300` )
  528:  		Call  BattleCamTargetActor  ( .Actor:Self )
  538:  		Call  8024ECF8  ( FFFFFFFF 00000001 00000000 )
  550:  		Call  PlaySoundAtActor  ( .Actor:Self 000020E0 )
  564:  		Call  SetActorSounds    ( .Actor:Self .ActorSound:Jump 00000000 00000000 )
  580:  		Call  SetActorSpeed     ( .Actor:Self *Fixed[5.0] )
  594:  		Call  SetActorJumpGravity   ( .Actor:Self *Fixed[1.8] )
  5A8:  		Call  SetAnimation      ( .Actor:Self 00000002 00280005 )
  5C0:  		Call  GetActorPos       ( .Actor:Self *Var0 *Var1 *Var2 )
  5DC:  		Call  SetGoalPos        ( .Actor:Self *Var0 *Var1 *Var2 )
  5F8:  		Call  JumpToGoal        ( .Actor:Self  10` .False .False .False )
  618:  		Call  PlaySoundAtActor  ( .Actor:Self 000002C1 )
  62C:  		Call  SetActorSounds    ( .Actor:Self .ActorSound:Fly 00000000 00000000 )
  648:  		Call  SetGoalToTarget   ( .Actor:Self )
  658:  		Call  SetActorSpeed     ( .Actor:Self *Fixed[8.0] )
  66C:  		Call  SetAnimation      ( .Actor:Self 00000002 00280005 )
  684:  		Call  FlyToGoal ( .Actor:Self  0`  -10` .Easing:Linear )
  6A0:  EndSwitch
  6A8:  Wait  2`
  6B4:  Call  EnemyDamageTarget ( .Actor:Self *Var0 ~Flags:DamageType:0 00000000 00000000 00000001 00000020 )
  6DC:  Switch  *Var0
  6E8:  	CaseOR  ==  .HitResult:Hit % 0
  6F4:  	CaseOR  ==  .HitResult:QuakeImmune % 2
  700:  		Call  UseBattleCamPreset    ( 00000002 )
  710:  		Call  SetGoalToTarget       ( .Actor:Self )
  720:  		Call  AddGoalPos    ( .Actor:Self  50`  10`  0` )
  73C:  		Call  SetActorSpeed ( .Actor:Self *Fixed[6.0] )
  750:  		Call  SetAnimation  ( .Actor:Self 00000002 00280004 )
  768:  		Call  FlyToGoal     ( .Actor:Self  0`  -10` .Easing:Linear )
  784:  		Call  ResetAllActorSounds   ( .Actor:Self )
  794:  		Wait  5`
  7A0:  		Call  YieldTurn ( )
  7AC:  		Call  SetAnimation  ( .Actor:Self 00000002 00280004 )
  7C4:  		ExecWait  $Script_8021FD30
  7D0:  	EndCaseGroup
  7D8:  EndSwitch
  7E0:  Call  EnableIdleScript  ( .Actor:Self FFFFFFFF )
  7F4:  Call  UseIdleAnimation  ( .Actor:Self .True )
  808:  Return
  810:  End
}

#new:Script $Script_80220BB4
{
    0:  Call  8027D32C      ( FFFFFF81 )
   10:  Call  SetPartFlags  ( .Actor:Self 00000002 00020005 )
   28:  Call  SetPartFlags  ( .Actor:Self 00000003 00120004 )
   40:  Call  SetPartFlags  ( .Actor:Self 00000004 00120004 )
   58:  Call  SetPartFlags  ( .Actor:Self 00000001 00800004 )
   70:  Call  GetActorPos   ( .Actor:Self *Var0 *Var1 *Var2 )
   8C:  Call  SetPartPos    ( .Actor:Self 00000003 *Var0 *Var1 *Var2 )
   AC:  Call  SetPartDispOffset ( .Actor:Self 00000003 FFFFFFF7 00000007 FFFFFFFE )
   CC:  Call  SetPartPos    ( .Actor:Self 00000004 *Var0 *Var1 *Var2 )
   EC:  Call  SetPartDispOffset ( .Actor:Self 00000004 0000000B 00000007 FFFFFFFE )
  10C:  Call  GetLastEvent  ( .Actor:Self *Var0 )
  120:  If  *Var0  ==  0000000F % F
  130:  	Call  SetAnimation  ( .Actor:Self 00000001 0026000A )
  148:  Else
  150:  	Call  SetAnimation  ( .Actor:Self 00000001 00260005 )
  168:  EndIf
  170:  Call  SetActorSounds    ( .Actor:Self .ActorSound:Jump 00000301 00000000 )
  18C:  Call  GetActorPos       ( .Actor:Self *Var0 *Var1 *Var2 )
  1A8:  Set   *Var1  00000000
  1B8:  Call  SetActorJumpGravity   ( .Actor:Self *Fixed[0.8] )
  1CC:  Call  SetGoalPos        ( .Actor:Self *Var0 *Var1 *Var2 )
  1E8:  Call  JumpToGoal        ( .Actor:Self  15` .False .True .False )
  208:  Call  $Function_80218560    ( 00000064 0000000A )
  21C:  Thread
  224:  	Call  ShakeCam  ( .Cam:Battle 00000000  5` *Fixed[0.3] )
  240:  EndThread
  248:  Call  ResetActorSounds  ( .Actor:Self .ActorSound:Jump )
  25C:  Call  GetLastEvent      ( .Actor:Self *Var3 )
  270:  If  *Var3  ==  0000000F % F
  280:  	Call  SetAnimation  ( .Actor:Self 00000001 00260005 )
  298:  	Call  GetActorPos   ( .Actor:Self *Var3 *Var4 *Var5 )
  2B4:  	Add   *Var4  0000000A
  2C4:  	Add   *Var5  00000005
  2D4:  	Call  PlayEffect    ( ~FX:SmokeBurst:Black *Var3 *Var4 *Var5 *Fixed[1.0] 0000000A 00000000 00000000 00000000 00000000 00000000 00000000 00000000 )
  318:  EndIf
  320:  Call  SetGoalPos    ( .Actor:Self *Var0 *Var1 *Var2 )
  33C:  Call  JumpToGoal    ( .Actor:Self  10` .False .True .False )
  35C:  Call  SetGoalPos    ( .Actor:Self *Var0 *Var1 *Var2 )
  378:  Call  JumpToGoal    ( .Actor:Self  5` .False .True .False )
  398:  Loop  0000000A
  3A4:  	Call  SetPartFlagBits   ( .Actor:Self 00000003 00000001 .True )
  3C0:  	Call  SetPartFlagBits   ( .Actor:Self 00000004 00000001 .True )
  3DC:  	Wait  1`
  3E8:  	Call  SetPartFlagBits   ( .Actor:Self 00000003 00000001 .False )
  404:  	Call  SetPartFlagBits   ( .Actor:Self 00000004 00000001 .False )
  420:  	Wait  1`
  42C:  EndLoop
  434:  Call  SetPartFlagBits   ( .Actor:Self 00000003 00000001 .True )
  450:  Call  SetPartFlagBits   ( .Actor:Self 00000004 00000001 .True )
  46C:  Call  GetIndexFromHome  ( .Actor:Self *Var0 )
  480:  Mod   *Var0  00000004
  490:  Call  SetGoalToIndex    ( .Actor:Self *Var0 )
  4A4:  Call  GetGoalPos        ( .Actor:Self *Var0 *Var1 *Var2 )
  4C0:  Call  SetHomePos        ( .Actor:Self *Var0 *Var1 *Var2 )
  4DC:  Call  SetAnimation      ( .Actor:Self 00000001 00260001 )
  4F4:  Call  SetActorFlagBits  ( .Actor:Self 00000200 .False )
  50C:  Call  SetStatusTable    ( .Actor:Self $StatusTable_8021F768 )
  520:  Call  SetActorType      ( .Actor:Self 00000007 )
  534:  ExecWait  $Script_802211D4
  540:  Call  SetActorFlagBits  ( .Actor:Self 00001000 .True )
  558:  Call  HPBarToHome       ( .Actor:Self )
  568:  Call  ResetAllActorSounds   ( .Actor:Self )
  578:  Return
  580:  End
}

#new:IdleAnimations $IdleAnimations_8022113C
{
	.Status:Normal    00260001
	.Status:Stone     00260000
	.Status:Sleep     00260008
	.Status:Poison    00260001
	.Status:Stop      00260000
	.Status:Static    00260001
	.Status:Paralyze  00260000
	.Status:Dizzy     00260007
	.Status:Fear      00260007
	.Status:End
}

#new:IdleAnimations $IdleAnimations_80221188
{
	.Status:Normal    00260003
	.Status:Stone     00260000
	.Status:Sleep     00260008
	.Status:Poison    00260001
	.Status:Stop      00260000
	.Status:Static    00260003
	.Status:Paralyze  00260000
	.Status:Dizzy     00260007
	.Status:Fear      00260007
	.Status:End
}

#new:Script $Script_802211D4
{
    0:  Call  BindTakeTurn      ( .Actor:Self $Script_TakeTurn_80221D28 )
   14:  Call  BindIdle  ( .Actor:Self $Script_Idle_80221220 )
   28:  Call  BindHandleEvent   ( .Actor:Self $Script_HandleEvent_802214FC )
   3C:  Return
   44:  End
}

#new:Script $Script_Idle_80221220
{
    0:  Label  A
    C:  Call  RandInt   ( 00000050 *Var0 )
   20:  Add   *Var0  00000050
   30:  Loop  *Var0
   3C:  	Label  0
   48:  	Call  GetStatusFlags    ( .Actor:Self *Var1 )
   5C:  	If  *Var1  &  ~Flags:StatusFlags:Sleep|Frozen|Fear|Paralyze|Dizzy|Stone|Stop % 35D000
   6C:  		Wait  1`
   78:  		Goto  0
   84:  	EndIf
   8C:  	Wait  1`
   98:  EndLoop
   A0:  Call  GetActorPos       ( .Actor:Self *Var0 *Var1 *Var2 )
   BC:  Add   *Var0  00000005
   CC:  Call  SetActorIdleSpeed ( .Actor:Self *Fixed[1.0] )
   E0:  Call  SetIdleAnimations ( .Actor:Self 00000001 $IdleAnimations_80221188 )
   F8:  Call  SetIdleGoal       ( .Actor:Self *Var0 *Var1 *Var2 )
  114:  Call  IdleRunToGoal     ( .Actor:Self  0` )
  128:  Call  SetIdleAnimations ( .Actor:Self 00000001 $IdleAnimations_8022113C )
  140:  Loop  00000014
  14C:  	Label  1
  158:  	Call  GetStatusFlags    ( .Actor:Self *Var1 )
  16C:  	If  *Var1  &  ~Flags:StatusFlags:Sleep|Frozen|Fear|Paralyze|Dizzy|Stone|Stop % 35D000
  17C:  		Wait  1`
  188:  		Goto  1
  194:  	EndIf
  19C:  	Wait  1`
  1A8:  EndLoop
  1B0:  Call  GetActorPos       ( .Actor:Self *Var0 *Var1 *Var2 )
  1CC:  Sub   *Var0  00000005
  1DC:  Call  SetActorIdleSpeed ( .Actor:Self *Fixed[1.0] )
  1F0:  Call  SetIdleAnimations ( .Actor:Self 00000001 $IdleAnimations_80221188 )
  208:  Call  SetIdleGoal       ( .Actor:Self *Var0 *Var1 *Var2 )
  224:  Call  IdleRunToGoal     ( .Actor:Self  0` )
  238:  Call  SetIdleAnimations ( .Actor:Self 00000001 $IdleAnimations_8022113C )
  250:  Loop  00000050
  25C:  	Label  2
  268:  	Call  GetStatusFlags    ( .Actor:Self *Var1 )
  27C:  	If  *Var1  &  ~Flags:StatusFlags:Sleep|Frozen|Fear|Paralyze|Dizzy|Stone|Stop % 35D000
  28C:  		Wait  1`
  298:  		Goto  2
  2A4:  	EndIf
  2AC:  	Wait  1`
  2B8:  EndLoop
  2C0:  Goto  A
  2CC:  Return
  2D4:  End
}

#new:Script $Script_HandleEvent_802214FC
{
    0:  Call  UseIdleAnimation  ( .Actor:Self .False )
   14:  Call  EnableIdleScript  ( .Actor:Self 00000000 )
   28:  Call  SetActorScale     ( .Actor:Self *Fixed[1.0] *Fixed[1.0] *Fixed[1.0] )
   44:  Call  GetLastEvent      ( .Actor:Self *Var0 )
   58:  Switch  *Var0
   64:  	CaseOR  ==  .Event:HitCombo % 9
   70:  	CaseOR  ==  .Event:Hit % A
   7C:  		SetConst  *Var0  00000001
   8C:  		SetConst  *Var1  00260005
   9C:  		ExecWait  DoNormalHit
   A8:  	EndCaseGroup
   B0:  	Case  ==  .Event:BurnHit % E
   BC:  		SetConst  *Var0  00000001
   CC:  		SetConst  *Var1  00260009
   DC:  		SetConst  *Var2  0026000A
   EC:  		ExecWait  DoBurnHit
   F8:  	Case  ==  .Event:BurnDeath % 24
  104:  		SetConst  *Var0  00000001
  114:  		SetConst  *Var1  00260009
  124:  		SetConst  *Var2  0026000A
  134:  		ExecWait  DoBurnHit
  140:  		SetConst  *Var0  00000001
  150:  		SetConst  *Var1  0026000A
  160:  		ExecWait  DoDeath
  16C:  		Return
  174:  	Case  ==  .Event:SpinSmashHit % B
  180:  		SetConst  *Var0  00000001
  190:  		SetConst  *Var1  00260005
  1A0:  		ExecWait  DoSpinSmashHit
  1AC:  	Case  ==  .Event:SpinSmashDeath % 21
  1B8:  		SetConst  *Var0  00000001
  1C8:  		SetConst  *Var1  00260005
  1D8:  		ExecWait  DoSpinSmashHit
  1E4:  		SetConst  *Var0  00000001
  1F4:  		SetConst  *Var1  00260006
  204:  		ExecWait  DoDeath
  210:  		Return
  218:  	Case  ==  .Event:ShockHit % 2F
  224:  		SetConst  *Var0  00000001
  234:  		SetConst  *Var1  0026000E
  244:  		ExecWait  DoShockHit
  250:  		SetConst  *Var0  00000001
  260:  		SetConst  *Var1  00260005
  270:  		ExecWait  DoJumpBack
  27C:  		Call  JumpToGoal    ( .Actor:Self  5` .False .True .False )
  29C:  		Call  SetAnimationRate      ( .Actor:Self 00000001 *Fixed[2.0] )
  2B4:  		Call  SetAnimation  ( .Actor:Self 00000001 00260007 )
  2CC:  		Call  SetGoalToHome ( .Actor:Self )
  2DC:  		Call  SetActorSpeed ( .Actor:Self *Fixed[8.0] )
  2F0:  		Call  RunToGoal     ( .Actor:Self  0` .False )
  308:  		Call  SetAnimationRate      ( .Actor:Self 00000001 *Fixed[1.0] )
  320:  		Wait  5`
  32C:  		Call  SetAnimation  ( .Actor:Self 00000001 00260001 )
  344:  		Call  SetActorJumpGravity   ( .Actor:Self *Fixed[1.6] )
  358:  		Call  JumpToGoal    ( .Actor:Self  5` .False .True .False )
  378:  	Case  ==  .Event:ShockDeath % 26
  384:  		SetConst  *Var0  00000001
  394:  		SetConst  *Var1  0026000E
  3A4:  		ExecWait  DoShockHit
  3B0:  		SetConst  *Var0  00000001
  3C0:  		SetConst  *Var1  00260006
  3D0:  		ExecWait  DoDeath
  3DC:  		Return
  3E4:  	Case  ==  .Event:StarBeam % 13
  3F0:  	CaseOR  ==  00000017 % 17
  3FC:  	CaseOR  ==  .Event:Immune % 19
  408:  	CaseOR  ==  .Event:AirLiftFailed % 1F
  414:  		SetConst  *Var0  00000001
  424:  		SetConst  *Var1  00260001
  434:  		ExecWait  DoImmune
  440:  	EndCaseGroup
  448:  	Case  ==  .Event:Death % 20
  454:  		SetConst  *Var0  00000001
  464:  		SetConst  *Var1  00260005
  474:  		ExecWait  DoNormalHit
  480:  		Wait  10`
  48C:  		SetConst  *Var0  00000001
  49C:  		SetConst  *Var1  00260006
  4AC:  		ExecWait  DoDeath
  4B8:  		Return
  4C0:  	Case  ==  .Event:EndFirstStrike % 35
  4CC:  		Call  SetAnimationRate  ( .Actor:Self 00000001 *Fixed[2.0] )
  4E4:  		Call  SetAnimation  ( .Actor:Self 00000001 00260003 )
  4FC:  		Call  SetGoalToHome ( .Actor:Self )
  50C:  		Call  SetActorSpeed ( .Actor:Self *Fixed[4.0] )
  520:  		Call  RunToGoal     ( .Actor:Self  0` .False )
  538:  		Call  SetAnimationRate  ( .Actor:Self 00000001 *Fixed[1.0] )
  550:  		Call  HPBarToHome   ( .Actor:Self )
  560:  	Case  ==  .Event:RecoverStatus % 31
  56C:  		SetConst  *Var0  00000001
  57C:  		SetConst  *Var1  00260001
  58C:  		ExecWait  DoRecover
  598:  	Case  ==  .Event:ScareAway % 39
  5A4:  		SetConst  *Var0  00000001
  5B4:  		SetConst  *Var1  00260003
  5C4:  		SetConst  *Var2  00260005
  5D4:  		ExecWait  DoScareAway
  5E0:  		Return
  5E8:  	Case  ==  .Event:BeginAirLift % 3A
  5F4:  		SetConst  *Var0  00000001
  604:  		SetConst  *Var1  00260003
  614:  		ExecWait  DoAirLift
  620:  	Case  ==  .Event:BlowAway % 16
  62C:  		SetConst  *Var0  00000001
  63C:  		SetConst  *Var1  00260005
  64C:  		ExecWait  DoBlowAway
  658:  		Return
  660:  	Default
  668:  EndSwitch
  670:  Call  SetAnimation      ( .Actor:Self 00000001 00260001 )
  688:  Call  EnableIdleScript  ( .Actor:Self 00000001 )
  69C:  Call  UseIdleAnimation  ( .Actor:Self .True )
  6B0:  Return
  6B8:  End
}

#new:FloatTable $FloatTable_80221BBC
{
	0.0      0.017452 0.034899 0.052336 0.069756 0.087156 0.104528 0.121869
	0.139173 0.156434 0.173648 0.190809 0.207912 0.224951 0.241922 0.258819
	0.275637 0.292372 0.309017 0.325568 0.34202  0.358368 0.374607 0.390731
	0.406737 0.422618 0.438371 0.45399  0.469472 0.48481  0.5      0.515038
	0.529919 0.544639 0.559193 0.573576 0.587785 0.601815 0.615661 0.62932
	0.642788 0.656059 0.669131 0.681998 0.694658 0.707107 0.71934  0.731354
	0.743145 0.75471  0.766044 0.777146 0.788011 0.798636 0.809017 0.819152
	0.829038 0.838671 0.848048 0.857167 0.866025 0.87462  0.882948 0.891007
	0.898794 0.906308 0.913545 0.920505 0.927184 0.93358  0.939693 0.945519
	0.951057 0.956305 0.961262 0.965926 0.970296 0.97437  0.978148 0.981627
	0.984808 0.987688 0.990268 0.992546 0.994522 0.996195 0.997564 0.99863
	0.999391 0.999848 1.0
}

#new:Script $Script_TakeTurn_80221D28
{
    0:  Call  UseIdleAnimation  ( .Actor:Self .False )
   14:  Call  EnableIdleScript  ( .Actor:Self 00000000 )
   28:  Call  SetTargetActor    ( .Actor:Self .Actor:Player )
   3C:  Call  UseBattleCamPreset    ( 0000003F )
   4C:  Call  BattleCamTargetActor  ( .Actor:Self )
   5C:  Call  8024ECF8  ( FFFFFFFF 00000001 00000000 )
   74:  Call  SetAnimation      ( .Actor:Self 00000001 00260003 )
   8C:  Call  SetGoalToTarget   ( .Actor:Self )
   9C:  Call  AddGoalPos        ( .Actor:Self  50`  0`  0` )
   B8:  Call  SetActorSpeed     ( .Actor:Self *Fixed[6.0] )
   CC:  Call  RunToGoal ( .Actor:Self  0` .False )
   E4:  Call  SetAnimation      ( .Actor:Self 00000001 00260001 )
   FC:  Call  SetActorDispOffset    ( .Actor:Self 00000000 FFFFFFFF 00000000 )
  118:  Wait  1`
  124:  Call  SetActorDispOffset    ( .Actor:Self 00000000 FFFFFFFE 00000000 )
  140:  Wait  5`
  14C:  Call  SetActorDispOffset    ( .Actor:Self 00000000 00000000 00000000 )
  168:  Call  SetAnimation      ( .Actor:Self 00000001 00260004 )
  180:  Call  EnemyTestTarget   ( .Actor:Self *Var0 ~Flags:DamageType:0 00000000 00000001 00000010 )
  1A4:  Switch  *Var0
  1B0:  	CaseOR  ==  .HitResult:Miss % 6
  1BC:  	CaseOR  ==  .HitResult:Lucky % 5
  1C8:  		Set   *VarA  *Var0
  1D8:  		Call  SetGoalToTarget   ( .Actor:Self )
  1E8:  		Call  GetGoalPos        ( .Actor:Self *Var0 *Var1 *Var2 )
  204:  		Sub   *Var0  0000000A
  214:  		Set   *Var1  0000000A
  224:  		Add   *Var2  00000003
  234:  		Call  SetGoalPos        ( .Actor:Self *Var0 *Var1 *Var2 )
  250:  		Call  SetActorJumpGravity   ( .Actor:Self *Fixed[1.2] )
  264:  		Thread
  26C:  			Call  GetActorPos   ( .Actor:Self *Var1 *Var2 *Var0 )
  288:  			Set   *Var0  00000000
  298:  			Loop  00000010
  2A4:  				Call  GetActorPos   ( .Actor:Self *Var4 *Var5 *Var6 )
  2C0:  				Call  $Function_80218744    ( *Var1 *Var2 *Var4 *Var5 *Var0 )
  2E0:  				Call  SetActorRotation      ( .Actor:Self 00000000 00000000 *Var0 )
  2FC:  				Set   *Var1  *Var4
  30C:  				Set   *Var2  *Var5
  31C:  				Set   *Var3  *Var6
  32C:  				Wait  1`
  338:  			EndLoop
  340:  		EndThread
  348:  		Thread
  350:  			Wait  6`
  35C:  			Call  SetAnimation  ( .Actor:Self 00000001 00260004 )
  374:  		EndThread
  37C:  		Call  JumpToGoal    ( .Actor:Self  16` .False .True .False )
  39C:  		Call  SetAnimation  ( .Actor:Self 00000001 00260008 )
  3B4:  		Call  SetActorScale ( .Actor:Self *Fixed[1.1] *Fixed[0.8] *Fixed[1.0] )
  3D0:  		Call  SetActorDispOffset    ( .Actor:Self 00000000 00000005 00000000 )
  3EC:  		Wait  1`
  3F8:  		Call  SetActorScale ( .Actor:Self *Fixed[1.3] *Fixed[0.5] *Fixed[1.0] )
  414:  		Call  SetActorDispOffset    ( .Actor:Self 00000000 FFFFFFFE 00000000 )
  430:  		Wait  1`
  43C:  		Call  SetActorScale ( .Actor:Self *Fixed[1.0] *Fixed[1.0] *Fixed[1.0] )
  458:  		Call  SetActorDispOffset    ( .Actor:Self 00000000 00000007 00000000 )
  474:  		Call  SetAnimation  ( .Actor:Self 00000001 00260005 )
  48C:  		Wait  5`
  498:  		If  *VarA  ==  .HitResult:Lucky % 5
  4A8:  			Call  EnemyTestTarget   ( .Actor:Self *Var0 ~Flags:DamageType:TriggerLucky 00000000 00000000 00000000 )
  4CC:  		EndIf
  4D4:  		Wait  5`
  4E0:  		Call  SetActorDispOffset    ( .Actor:Self 00000000 00000000 00000000 )
  4FC:  		Call  SetAnimation      ( .Actor:Self 00000001 00260004 )
  514:  		Call  SetGoalToTarget   ( .Actor:Self )
  524:  		Call  GetGoalPos        ( .Actor:Self *Var0 *Var1 *Var2 )
  540:  		Add   *Var0  00000014
  550:  		Set   *Var1  00000000
  560:  		Call  SetGoalPos        ( .Actor:Self *Var0 *Var1 *Var2 )
  57C:  		Call  SetActorJumpGravity   ( .Actor:Self *Fixed[2.0] )
  590:  		Thread
  598:  			Wait  4`
  5A4:  			Set   *Var0  000000B4
  5B4:  			Loop  00000004
  5C0:  				Sub   *Var0  0000002D
  5D0:  				Call  SetActorRotation  ( .Actor:Self 00000000 00000000 *Var0 )
  5EC:  				Wait  1`
  5F8:  			EndLoop
  600:  			Call  SetAnimation  ( .Actor:Self 00000001 00260004 )
  618:  		EndThread
  620:  		Call  JumpToGoal        ( .Actor:Self  15` .False .True .False )
  640:  		Call  SetAnimation      ( .Actor:Self 00000001 00260007 )
  658:  		Wait  5`
  664:  		Call  UseBattleCamPreset    ( 00000002 )
  674:  		Call  YieldTurn ( )
  680:  		Call  SetActorYaw       ( .Actor:Self  180` )
  694:  		Call  AddActorDecoration    ( .Actor:Self 00000001 00000000 .Decoration:Sweat )
  6B0:  		Call  SetAnimationRate  ( .Actor:Self 00000001 *Fixed[2.0] )
  6C8:  		Call  SetGoalToHome     ( .Actor:Self )
  6D8:  		Call  SetActorSpeed     ( .Actor:Self *Fixed[8.0] )
  6EC:  		Call  RunToGoal ( .Actor:Self  0` .False )
  704:  		Call  SetAnimationRate  ( .Actor:Self 00000001 *Fixed[1.0] )
  71C:  		Call  SetActorYaw       ( .Actor:Self  0` )
  730:  		Wait  5`
  73C:  		Call  SetAnimation      ( .Actor:Self 00000001 00260001 )
  754:  		Call  SetActorJumpGravity   ( .Actor:Self *Fixed[1.6] )
  768:  		Call  JumpToGoal        ( .Actor:Self  5` .False .True .False )
  788:  		Call  RemoveActorDecoration ( .Actor:Self 00000001 00000000 )
  7A0:  		Call  EnableIdleScript  ( .Actor:Self 00000001 )
  7B4:  		Call  UseIdleAnimation  ( .Actor:Self .True )
  7C8:  		Return
  7D0:  	EndCaseGroup
  7D8:  	Default
  7E0:  		Call  SetGoalToTarget       ( .Actor:Self )
  7F0:  		Call  SetActorJumpGravity   ( .Actor:Self *Fixed[1.2] )
  804:  		Thread
  80C:  			Call  GetActorPos   ( .Actor:Self *Var1 *Var2 *Var0 )
  828:  			Set   *Var0  00000000
  838:  			Loop  00000010
  844:  				Call  GetActorPos   ( .Actor:Self *Var4 *Var5 *Var6 )
  860:  				Call  $Function_80218744    ( *Var1 *Var2 *Var4 *Var5 *Var0 )
  880:  				Call  SetActorRotation      ( .Actor:Self 00000000 00000000 *Var0 )
  89C:  				Set   *Var1  *Var4
  8AC:  				Set   *Var2  *Var5
  8BC:  				Set   *Var3  *Var6
  8CC:  				Wait  1`
  8D8:  			EndLoop
  8E0:  		EndThread
  8E8:  		Thread
  8F0:  			Wait  6`
  8FC:  			Call  SetAnimation  ( .Actor:Self 00000001 00260004 )
  914:  		EndThread
  91C:  		Call  JumpToGoal    ( .Actor:Self  16` .False .True .False )
  93C:  		Call  SetAnimation  ( .Actor:Self 00000001 0026000B )
  954:  		Call  SetActorScale ( .Actor:Self *Fixed[1.1] *Fixed[0.8] *Fixed[1.0] )
  970:  		Wait  1`
  97C:  		Call  SetActorScale ( .Actor:Self *Fixed[1.3] *Fixed[0.5] *Fixed[1.0] )
  998:  		Wait  1`
  9A4:  EndSwitch
  9AC:  Call  EnemyDamageTarget ( .Actor:Self *Var0 ~Flags:DamageType:0 00000000 00000000 00000001 00000020 )
  9D4:  Switch  *Var0
  9E0:  	CaseOR  ==  .HitResult:Hit % 0
  9EC:  	CaseOR  ==  .HitResult:QuakeImmune % 2
  9F8:  		Call  UseBattleCamPreset    ( 00000002 )
  A08:  		Call  SetActorScale ( .Actor:Self *Fixed[1.1] *Fixed[0.8] *Fixed[1.0] )
  A24:  		Wait  1`
  A30:  		Call  SetActorScale ( .Actor:Self *Fixed[1.0] *Fixed[1.0] *Fixed[1.0] )
  A4C:  		Wait  1`
  A58:  		Call  SetActorRotation      ( .Actor:Self 00000000 00000000 00000000 )
  A74:  		Call  SetActorDispOffset    ( .Actor:Self 00000000 00000000 00000000 )
  A90:  		Call  SetAnimation  ( .Actor:Self 00000001 00260001 )
  AA8:  		Call  GetGoalPos    ( .Actor:Self *Var0 *Var1 *Var2 )
  AC4:  		Add   *Var0  00000028
  AD4:  		Set   *Var1  00000000
  AE4:  		Call  SetActorJumpGravity   ( .Actor:Self *Fixed[1.8] )
  AF8:  		Call  SetGoalPos    ( .Actor:Self *Var0 *Var1 *Var2 )
  B14:  		Call  JumpToGoal    ( .Actor:Self  10` .False .True .False )
  B34:  		Add   *Var0  0000001E
  B44:  		Call  SetGoalPos    ( .Actor:Self *Var0 *Var1 *Var2 )
  B60:  		Call  JumpToGoal    ( .Actor:Self  8` .False .True .False )
  B80:  		Add   *Var0  00000014
  B90:  		Call  SetGoalPos    ( .Actor:Self *Var0 *Var1 *Var2 )
  BAC:  		Call  JumpToGoal    ( .Actor:Self  6` .False .True .False )
  BCC:  		Call  SetAnimation  ( .Actor:Self 00000001 00260001 )
  BE4:  		Wait  3`
  BF0:  		Call  YieldTurn ( )
  BFC:  		Call  SetAnimationRate      ( .Actor:Self 00000001 *Fixed[2.0] )
  C14:  		Call  SetAnimation  ( .Actor:Self 00000001 00260003 )
  C2C:  		Call  SetGoalToHome ( .Actor:Self )
  C3C:  		Call  SetActorSpeed ( .Actor:Self *Fixed[8.0] )
  C50:  		Call  RunToGoal     ( .Actor:Self  0` .False )
  C68:  		Call  SetAnimationRate      ( .Actor:Self 00000001 *Fixed[1.0] )
  C80:  	EndCaseGroup
  C88:  EndSwitch
  C90:  Call  EnableIdleScript  ( .Actor:Self 00000001 )
  CA4:  Call  UseIdleAnimation  ( .Actor:Self .True )
  CB8:  Return
  CC0:  End
}

#new:IdleAnimations $IdleAnimations_802229F0
{
	.Status:Normal    00210003
	.Status:Stone     00210000
	.Status:Sleep     00210000
	.Status:Poison    00210000
	.Status:Stop      00210000
	.Status:Static    00210000
	.Status:Paralyze  00210000
	.Status:End
}

#new:DefenseTable $DefenseTable_80222A2C
{
	.Element:Normal 00000000
	.Element:End
}

#new:StatusTable $StatusTable_80222A38
{
	.Status:Normal    100`
	.Status:Default   100`
	.Status:Sleep     100`
	.Status:Poison      0`
	.Status:Frozen      0`
	.Status:Dizzy      50`
	.Status:Fear        0`
	.Status:Static      0`
	.Status:Paralyze  100`
	.Status:Shrink    100`
	.Status:Stop      100`
	.Status:DefaultTurnMod    0`
	.Status:SleepTurnMod     -1`
	.Status:PoisonTurnMod     0`
	.Status:FrozenTurnMod     0`
	.Status:DizzyTurnMod     -1`
	.Status:FearTurnMod       0`
	.Status:StaticTurnMod     0`
	.Status:ParalyzeTurnMod  -1`
	.Status:ShrinkTurnMod    -1`
	.Status:StopTurnMod      -2`
	.Status:End
}

#new:PartsTable $PartsTable_80222AE4
{
	00800000 01000000 001E00FF $IdleAnimations_802229F0 $DefenseTable_80222A2C 00000000 00000000 00000000 00000000
}

#new:Actor $JrTroopa1
{
	% stats
	[Index]        88b
	[Level]        41`b
	[MaxHP]         5`b
	[Coins]         0`b
	[Flags]       00000000
	[StatusTable] $StatusTable_80222A38
	% ai
	[PartsCount]    1`s
	[PartsTable]  $PartsTable_80222AE4
	[Script]      $Script_Init_80223180
	% move effectiveness
	[Escape]        0`b
	[Item]          0`b
	[AirLift]       0`b
	[Hurricane]     0`b % Bow's "Spook" as well
	[UpAndAway]     0`b
	[PowerBounce]  80`b
	[SpinSmash]     0`b % weight (0-4)
	% ui positions
	[Size]         24`b  32`b % width height
	[HealthBar]     0`b   0`b % dx dy
	[StatusTurn]  -15`b  30`b % dx dy
	[StatusIcon]   10`b  20`b % dx dy
}

#new:Script $Script_80222B30
{
    0:  Call  GetActorPos   ( .Actor:Self *Var0 *Var1 *Var2 )
   1C:  Call  SetGoalPos    ( .Actor:Self *Var0 *Var1 *Var2 )
   38:  Call  UseBattleCamPreset    ( 00000007 )
   48:  Call  BattleCamTargetActor  ( .Actor:Self )
   58:  Call  SetBattleCamOffsetZ   (  38` )
   68:  Call  SetBattleCamZoom      (  256` )
   78:  Call  MoveBattleCamOver     (  15` )
   88:  Return
   90:  End
}

% Origin: HEURISTIC
#new:Script $Script_80222BC8
{
    0:  Call  802535B4  ( 00000001 )
   10:  Call  UseBattleCamPreset    ( 00000002 )
   20:  Call  MoveBattleCamOver     (  12` )
   30:  Return
   38:  End
}

#new:Script $Script_80222C08
{
    0:  Call  SetTargetActor        ( .Actor:Self .Actor:Player )
   14:  Call  SetGoalToTarget       ( .Actor:Self )
   24:  Call  UseBattleCamPreset    ( 00000037 )
   34:  Call  MoveBattleCamOver     (  30` )
   44:  Call  BattleCamTargetActor  ( .Actor:Self )
   54:  Return
   5C:  End
}

#new:IdleAnimations $IdleAnimations_80222C6C
{
	.Status:Normal    00210014
	.Status:End
}

#new:Script $Script_80222C78
{
    0:  Set   *VarA  *Var0
   10:  Call  8027D32C      ( FFFFFF81 )
   20:  Call  UseIdleAnimation  ( .Actor:Self .False )
   34:  Call  SetAnimation  ( .Actor:Self *VarA *Var1 )
   4C:  Wait  10`
   58:  Call  80269E80      ( *Var5 )
   68:  Switch  *Var5
   74:  	CaseOR  ==  0000000A
   80:  	CaseOR  ==  0000000E
   8C:  	CaseOR  ==  0000000C
   98:  	CaseOR  ==  00000010
   A4:  	CaseOR  ==  0000000B
   B0:  	CaseOR  ==  0000000F
   BC:  	CaseOR  ==  0000000D
   C8:  	CaseOR  ==  00000011
   D4:  	CaseOR  ==  00000002
   E0:  	EndCaseGroup
   E8:  	Default
   F0:  		Set   *Var2  00000000
  100:  		Loop  00000018
  10C:  			Call  SetActorYaw   ( .Actor:Self *Var2 )
  120:  			Add   *Var2  0000001E
  130:  			Wait  1`
  13C:  		EndLoop
  144:  		Call  SetActorYaw   ( .Actor:Self  0` )
  158:  EndSwitch
  160:  Label  0
  16C:  Call  GetActorPos   ( .Actor:Self *Var0 *Var1 *Var2 )
  188:  Add   *Var1  0000000A
  198:  Add   *Var2  0000000A
  1A8:  Call  PlayEffect    ( ~FX:BigSmokePuff *Var0 *Var1 *Var2 00000000 00000000 00000000 00000000 00000000 00000000 00000000 00000000 00000000 00000000 )
  1EC:  Call  PlaySound     ( 000003E5 )
  1FC:  Call  DropStarPoints    ( .Actor:Self )
  20C:  Call  SetActorYaw   ( .Actor:Self  0` )
  220:  Call  UseBattleCamPreset    ( 0000000E )
  230:  Call  SetBattleCamZoom  (  260` )
  240:  Call  SetBattleCamOffsetZ   (  15` )
  250:  Call  BattleCamTargetActor  ( .Actor:Self )
  260:  Call  MoveBattleCamOver (  30` )
  270:  Call  PlaySoundAtActor  ( .Actor:Self 000020E5 )
  284:  Call  SetAnimation  ( .Actor:Self *VarA 00210027 )
  29C:  Wait  12`
  2A8:  Call  SetAnimation  ( .Actor:Self *VarA 00210014 )
  2C0:  Call  SetIdleAnimations ( .Actor:Self *VarA $IdleAnimations_80222C6C )
  2D8:  Wait  30`
  2E4:  Call  UseIdleAnimation  ( .Actor:Partner .False )
  2F8:  Call  UseBattleCamPreset    ( 00000002 )
  308:  Wait  15`
  314:  Call  UseIdleAnimation  ( .Actor:Player .False )
  328:  Call  SetAnimation  ( .Actor:Player 00000000 00010002 )
  340:  Call  SetActorYaw   ( .Actor:Player  30` )
  354:  Wait  1`
  360:  Call  SetActorYaw   ( .Actor:Player  60` )
  374:  Wait  1`
  380:  Call  SetActorYaw   ( .Actor:Player  90` )
  394:  Wait  1`
  3A0:  Call  SetActorYaw   ( .Actor:Player  120` )
  3B4:  Wait  1`
  3C0:  Call  SetActorYaw   ( .Actor:Player  150` )
  3D4:  Wait  1`
  3E0:  Call  SetActorYaw   ( .Actor:Player  180` )
  3F4:  Wait  5`
  400:  Call  ActorSpeak    ( 000B00B4 .Actor:Partner 00000000 009D0008 009D0001 ) % Mario, that was wonderful fighting. You got Star P ...
  420:  Call  SetActorYaw   ( .Actor:Player  150` )
  434:  Wait  1`
  440:  Call  SetActorYaw   ( .Actor:Player  120` )
  454:  Wait  1`
  460:  Call  SetActorYaw   ( .Actor:Player  90` )
  474:  Wait  1`
  480:  Call  SetActorYaw   ( .Actor:Player  60` )
  494:  Wait  1`
  4A0:  Call  SetActorYaw   ( .Actor:Player  30` )
  4B4:  Wait  1`
  4C0:  Call  SetActorYaw   ( .Actor:Player  0` )
  4D4:  Wait  5`
  4E0:  Call  SetActorFlagBits  ( .Actor:Self 00400000 .True )
  4F8:  Return
  500:  End
}

#new:Script $Script_Init_80223180
{
    0:  Call  BindTakeTurn  ( .Actor:Self $Script_TakeTurn_802234A4 )
   14:  Call  BindHandleEvent   ( .Actor:Self $Script_HandleEvent_80223290 )
   28:  Call  BindNextTurn  ( .Actor:Self $Script_NextTurn_80223D2C )
   3C:  Call  SetActorVar   ( .Actor:Self 00000000 00000000 )
   54:  Call  SetActorVar   ( .Actor:Self 00000001 00000000 )
   6C:  Call  SetActorVar   ( .Actor:Self 00000002 00000000 )
   84:  Call  SetActorVar   ( .Actor:Self 00000003 00000000 )
   9C:  Call  SetActorVar   ( .Actor:Self 00000004 00000001 )
   B4:  Call  SetActorVar   ( .Actor:Self 00000005 00000000 )
   CC:  Return
   D4:  End
}

% Origin: HEURISTIC
#new:Script $Script_8022325C
{
    0:  Label  0
    C:  Wait  1`
   18:  Goto  0
   24:  Return
   2C:  End
}

#new:Script $Script_HandleEvent_80223290
{
    0:  Call  UseIdleAnimation  ( .Actor:Self .False )
   14:  Call  EnableIdleScript  ( .Actor:Self 00000000 )
   28:  Call  GetActorVar       ( .Actor:Self 00000002 *Var0 )
   40:  If  *Var0  ==  00000000
   50:  	Call  GetLastDamage ( .Actor:Self *Var1 )
   64:  	If  *Var1  !=  00000000
   74:  		Call  SetActorVar   ( .Actor:Self 00000002 00000001 )
   8C:  	EndIf
   94:  EndIf
   9C:  Call  GetLastEvent  ( .Actor:Self *Var0 )
   B0:  Switch  *Var0
   BC:  	CaseOR  ==  .Event:HitCombo % 9
   C8:  	CaseOR  ==  .Event:Hit % A
   D4:  		SetConst  *Var0  00000001
   E4:  		SetConst  *Var1  00210011
   F4:  		ExecWait  DoNormalHit
  100:  	EndCaseGroup
  108:  	Case  ==  .Event:Death % 20
  114:  		SetConst  *Var0  00000001
  124:  		SetConst  *Var1  00210011
  134:  		ExecWait  DoNormalHit
  140:  		Wait  10`
  14C:  		SetConst  *Var0  00000001
  15C:  		SetConst  *Var1  00210013
  16C:  		ExecWait  $Script_80222C78
  178:  		Return
  180:  	CaseOR  ==  00000017 % 17
  18C:  	CaseOR  ==  .Event:Immune % 19
  198:  		SetConst  *Var0  00000001
  1A8:  		SetConst  *Var1  00210003
  1B8:  		ExecWait  DoImmune
  1C4:  	EndCaseGroup
  1CC:  	Default
  1D4:  EndSwitch
  1DC:  Call  EnableIdleScript  ( .Actor:Self 00000001 )
  1F0:  Call  UseIdleAnimation  ( .Actor:Self .True )
  204:  Return
  20C:  End
}

#new:Script $Script_TakeTurn_802234A4
{
    0:  Call  UseIdleAnimation  ( .Actor:Self .False )
   14:  Call  EnableIdleScript  ( .Actor:Self 00000000 )
   28:  Call  AddActorVar       ( .Actor:Self 00000000 00000001 )
   40:  Call  GetActorHP        ( .Actor:Self *Var0 )
   54:  Call  GetEnemyMaxHP     ( .Actor:Self *Var1 )
   68:  Sub   *Var1  *Var0
   78:  If  *Var1  ==  00000003
   88:  	Call  GetActorVar   ( .Actor:Self 00000005 *Var0 )
   A0:  	If  *Var0  ==  00000000
   B0:  		Call  SetActorVar       ( .Actor:Self 00000005 00000001 )
   C8:  		ExecWait  $Script_80222B30
   D4:  		Call  MoveBattleCamOver (  20` )
   E4:  		Wait  20`
   F0:  		Call  UseIdleAnimation  ( .Actor:Self .False )
  104:  		Call  EnableIdleScript  ( .Actor:Self 00000000 )
  118:  		Call  ActorSpeak        ( 000B00B1 .Actor:Self 00000001 00210016 00210003 ) % Grrrr!! I'm just getting warmed up!
  138:  	EndIf
  140:  EndIf
  148:  Call  SetTargetActor    ( .Actor:Self .Actor:Player )
  15C:  Call  SetGoalToTarget   ( .Actor:Self )
  16C:  Call  UseBattleCamPreset    ( 0000003F )
  17C:  Call  BattleCamTargetActor  ( .Actor:Self )
  18C:  Call  8024ECF8  ( FFFFFFFF 00000001 00000000 )
  1A4:  Call  SetAnimation      ( .Actor:Self 00000001 00210009 )
  1BC:  Call  SetActorSpeed     ( .Actor:Self *Fixed[8.0] )
  1D0:  Call  SetGoalToTarget   ( .Actor:Self )
  1E0:  Call  AddGoalPos        ( .Actor:Self  50`  0`  0` )
  1FC:  Call  SetActorSpeed     ( .Actor:Self *Fixed[6.0] )
  210:  Call  RunToGoal ( .Actor:Self  0` .False )
  228:  Call  SetAnimation      ( .Actor:Self 00000001 00210003 )
  240:  Call  SetActorDispOffset    ( .Actor:Self 00000000 FFFFFFFF 00000000 )
  25C:  Wait  1`
  268:  Call  SetActorDispOffset    ( .Actor:Self 00000000 FFFFFFFE 00000000 )
  284:  Wait  5`
  290:  Call  SetActorDispOffset    ( .Actor:Self 00000000 00000000 00000000 )
  2AC:  Call  SetAnimation      ( .Actor:Self 00000001 0021000E )
  2C4:  Call  SetActorSounds    ( .Actor:Self .ActorSound:Jump 000020E2 00000000 )
  2E0:  Call  GetActorVar       ( .Actor:Self 00000004 *Var1 )
  2F8:  Call  EnemyTestTarget   ( .Actor:Self *Var0 ~Flags:DamageType:0 00000000 *Var1 00000010 )
  31C:  Switch  *Var0
  328:  	Case  ==  .HitResult:Miss % 6
  334:  		Call  GetGoalPos    ( .Actor:Self *Var0 *Var1 *Var2 )
  350:  		Add   *Var0  00000028
  360:  		Set   *Var1  00000000
  370:  		Call  SetActorJumpGravity   ( .Actor:Self *Fixed[1.8] )
  384:  		Call  SetGoalPos    ( .Actor:Self *Var0 *Var1 *Var2 )
  3A0:  		Call  JumpToGoal    ( .Actor:Self  10` .False .True .False )
  3C0:  		Add   *Var0  0000001E
  3D0:  		Call  ResetAllActorSounds   ( .Actor:Self )
  3E0:  		Call  SetGoalPos    ( .Actor:Self *Var0 *Var1 *Var2 )
  3FC:  		Call  JumpToGoal    ( .Actor:Self  8` .False .True .False )
  41C:  		Add   *Var0  00000014
  42C:  		Call  SetGoalPos    ( .Actor:Self *Var0 *Var1 *Var2 )
  448:  		Call  JumpToGoal    ( .Actor:Self  6` .False .True .False )
  468:  		Sub   *Var0  0000000A
  478:  		Call  JumpToGoal    ( .Actor:Self  4` .False .True .False )
  498:  		Call  SetAnimation  ( .Actor:Self 00000001 00210003 )
  4B0:  		Wait  8`
  4BC:  		Call  SetAnimation  ( .Actor:Self 00000001 00210003 )
  4D4:  		Call  UseBattleCamPreset    ( 00000002 )
  4E4:  		Call  SetGoalToHome ( .Actor:Self )
  4F4:  		Call  SetActorSpeed ( .Actor:Self *Fixed[6.0] )
  508:  		Call  SetAnimation  ( .Actor:Self 00000001 00210009 )
  520:  		Call  RunToGoal     ( .Actor:Self  0` .False )
  538:  		Call  SetAnimation  ( .Actor:Self 00000001 00210003 )
  550:  		Return
  558:  EndSwitch
  560:  Call  SetGoalToTarget       ( .Actor:Self )
  570:  Call  SetActorJumpGravity   ( .Actor:Self *Fixed[2.0] )
  584:  Thread
  58C:  	Wait  3`
  598:  	Call  SetAnimation  ( .Actor:Self 00000001 0021000F )
  5B0:  	Wait  5`
  5BC:  	Call  SetAnimation  ( .Actor:Self 00000001 00210010 )
  5D4:  EndThread
  5DC:  Call  JumpToGoal        ( .Actor:Self  15` .False .True .False )
  5FC:  Wait  2`
  608:  Call  GetActorVar       ( .Actor:Self 00000004 *Var1 )
  620:  Call  EnemyDamageTarget ( .Actor:Self *Var0 ~Flags:DamageType:0 00000000 00000000 *Var1 00000020 )
  648:  Switch  *Var0
  654:  	CaseOR  ==  .HitResult:Hit % 0
  660:  	CaseOR  ==  .HitResult:QuakeImmune % 2
  66C:  		Call  UseBattleCamPreset    ( 00000002 )
  67C:  		Call  ResetAllActorSounds   ( .Actor:Self )
  68C:  		Call  GetGoalPos    ( .Actor:Self *Var0 *Var1 *Var2 )
  6A8:  		Add   *Var0  00000028
  6B8:  		Set   *Var1  00000000
  6C8:  		Call  SetActorJumpGravity   ( .Actor:Self *Fixed[1.8] )
  6DC:  		Call  SetGoalPos    ( .Actor:Self *Var0 *Var1 *Var2 )
  6F8:  		Call  JumpToGoal    ( .Actor:Self  10` .False .True .False )
  718:  		Add   *Var0  0000001E
  728:  		Call  SetGoalPos    ( .Actor:Self *Var0 *Var1 *Var2 )
  744:  		Call  JumpToGoal    ( .Actor:Self  8` .False .True .False )
  764:  		Add   *Var0  00000014
  774:  		Call  SetGoalPos    ( .Actor:Self *Var0 *Var1 *Var2 )
  790:  		Call  JumpToGoal    ( .Actor:Self  6` .False .True .False )
  7B0:  		Call  SetAnimation  ( .Actor:Self 00000001 00210003 )
  7C8:  		Wait  10`
  7D4:  		Call  SetGoalToHome ( .Actor:Self )
  7E4:  		Call  SetActorSpeed ( .Actor:Self *Fixed[6.0] )
  7F8:  		Call  SetAnimation  ( .Actor:Self 00000001 00210009 )
  810:  		Call  RunToGoal     ( .Actor:Self  0` .False )
  828:  		Call  SetAnimation  ( .Actor:Self 00000001 00210003 )
  840:  	EndCaseGroup
  848:  EndSwitch
  850:  Call  EnableIdleScript  ( .Actor:Self 00000001 )
  864:  Call  UseIdleAnimation  ( .Actor:Self .True )
  878:  Return
  880:  End
}

#new:Script $Script_NextTurn_80223D2C
{
    0:  Call  UseIdleAnimation  ( .Actor:Self .False )
   14:  Call  EnableIdleScript  ( .Actor:Self 00000000 )
   28:  Call  GetBattlePhase    ( *Var0 )
   38:  Switch  *Var0
   44:  	Case  ==  0000000A
   50:  		Call  GetActorVar   ( .Actor:Self 00000001 *Var0 )
   68:  		If  *Var0  ==  00000000
   78:  			Call  SetActorVar   ( .Actor:Self 00000001 00000001 )
   90:  			Wait  15`
   9C:  			Call  802535B4      ( 00000000 )
   AC:  			Call  SetAnimation  ( .Actor:Player 00000000 00010002 )
   C4:  			Thread
   CC:  				Set   *Var1  00000000
   DC:  				Wait  8`
   E8:  				Loop  00000005
   F4:  					Wait  1`
  100:  					Sub   *Var1  00000024
  110:  					Call  SetActorYaw   ( .Actor:Player *Var1 )
  124:  				EndLoop
  12C:  			EndThread
  134:  			Call  SetAnimation  ( .Actor:Self 00000001 0021002B )
  14C:  			Call  ActorSpeak    ( 000B00AF .Actor:Partner 00000000 009D0008 009D0001 ) % Mario, this is Jr. Troopa. He's the boss of the ne ...
  16C:  			Call  SetAnimation  ( .Actor:Self 00000001 00210003 )
  184:  			Call  SetAnimation  ( .Actor:Player 00000000 00010029 )
  19C:  			Wait  10`
  1A8:  			Thread
  1B0:  				Set   *Var1  000000B4
  1C0:  				Wait  4`
  1CC:  				Loop  00000005
  1D8:  					Wait  1`
  1E4:  					Add   *Var1  00000024
  1F4:  					Call  SetActorYaw   ( .Actor:Player *Var1 )
  208:  				EndLoop
  210:  			EndThread
  218:  			Wait  10`
  224:  			Call  802535B4  ( 00000001 )
  234:  			Call  UseBattleCamPreset    ( 00000002 )
  244:  			Call  MoveBattleCamOver     (  4` )
  254:  		EndIf
  25C:  	EndIf
  264:  Case  ==  0000000C
  270:  	Call  GetActorVar   ( .Actor:Self 00000002 *Var0 )
  288:  	If  *Var0  ==  00000001
  298:  		Call  SetActorVar       ( .Actor:Self 00000002 00000002 )
  2B0:  		ExecWait  $Script_80222C08
  2BC:  		Call  UseIdleAnimation  ( .Actor:Player .False )
  2D0:  		Call  SetAnimation      ( .Actor:Player 00000000 00010002 )
  2E8:  		Thread
  2F0:  			Set   *Var1  00000000
  300:  			Loop  00000005
  30C:  				Wait  1`
  318:  				Sub   *Var1  00000024
  328:  				Call  SetActorYaw   ( .Actor:Player *Var1 )
  33C:  			EndLoop
  344:  		EndThread
  34C:  		Call  UseIdleAnimation  ( .Actor:Partner .False )
  360:  		Call  ActorSpeak        ( 000B00B0 .Actor:Partner 00000000 009D0008 009D0001 ) % Oh, excellent! Good move! Go on!!
  380:  		Call  UseIdleAnimation  ( .Actor:Partner .True )
  394:  		Call  SetAnimation      ( .Actor:Player 00000000 00010032 )
  3AC:  		Wait  20`
  3B8:  		Call  SetActorYaw       ( .Actor:Player  0` )
  3CC:  		Wait  4`
  3D8:  		Call  UseIdleAnimation  ( .Actor:Player .True )
  3EC:  	EndIf
  3F4:  	Call  GetActorVar   ( .Actor:Self 00000003 *Var0 )
  40C:  	If  *Var0  ==  00000000
  41C:  		Call  GetActorHP    ( .Actor:Self *Var0 )
  430:  		If  *Var0  <=  00000001
  440:  			Call  SetActorVar   ( .Actor:Self 00000003 00000001 )
  458:  			Call  UseIdleAnimation  ( .Actor:Partner .False )
  46C:  			Call  ActorSpeak    ( 000B00B2 .Actor:Partner 00000000 009D0008 009D0001 ) % Mario, you've almost got him! Keep it up! Go on!
  48C:  			Call  UseIdleAnimation  ( .Actor:Partner .True )
  4A0:  			ExecWait  $Script_80222B30
  4AC:  			Call  ActorSpeak    ( 000B00B3 .Actor:Self 00000001 00210016 00210003 ) % All right, you asked for it! Say hello to Jr. Troo ...
  4CC:  			Call  PlaySoundAtActor  ( .Actor:Self 000020B9 )
  4E0:  			Call  SetAnimation  ( .Actor:Self 00000001 0021000B )
  4F8:  			Call  GetActorPos   ( .Actor:Self *Var0 *Var1 *Var2 )
  514:  			Add   *Var1  00000010
  524:  			Call  PlayEffect    ( ~FX:GatherEnergyPink *Var0 *Var1 *Var2 00000001 0000001E 00000000 00000000 00000000 00000000 00000000 00000000 00000000 )
  568:  			Call  PlayEffect    ( 00000013 00000001 *Var0 *Var1 *Var2 00000001 0000001E 00000000 00000000 00000000 00000000 00000000 00000000 00000000 )
  5AC:  			Wait  30`
  5B8:  			Wait  20`
  5C4:  			Call  SetActorVar   ( .Actor:Self 00000004 00000002 )
  5DC:  			Call  SetAnimation  ( .Actor:Self 00000001 00210003 )
  5F4:  			Wait  20`
  600:  		EndIf
  608:  	EndIf
  610:  EndSwitch
  618:  Call  EnableIdleScript  ( .Actor:Self 00000001 )
  62C:  Call  UseIdleAnimation  ( .Actor:Self .True )
  640:  Return
  648:  End
}

PADDING: 8022437C to 80224380 (004537BC to 004537C0)
00000000

#new:IdleAnimations $IdleAnimations_80224380
{
	.Status:Normal    00210003
	.Status:Sleep     0021001C
	.Status:Stone     00210000
	.Status:Poison    00210000
	.Status:Stop      00210000
	.Status:Static    00210000
	.Status:Paralyze  00210000
	.Status:End
}

MISSING: 802243BC to 802243F8 (004537FC to 00453838)
00000001 00210003 00000006 00210000 0000000C 00210000 00000009 00210000
00000008 00210000 0000000B 00210000 00000005 00210000 00000000

#new:IdleAnimations $IdleAnimations_802243F8
{
	.Status:Normal    00210004
	.Status:Stop      00210002
	.Status:End
}

#new:DefenseTable $DefenseTable_8022440C
{
	.Element:Normal 00000001
	.Element:End
}

#new:StatusTable $StatusTable_80224418
{
	.Status:Normal    100`
	.Status:Default   100`
	.Status:Sleep      80`
	.Status:Poison      0`
	.Status:Frozen      0`
	.Status:Dizzy      50`
	.Status:Fear        0`
	.Status:Static      0`
	.Status:Paralyze  100`
	.Status:Shrink    100`
	.Status:Stop      100`
	.Status:DefaultTurnMod    0`
	.Status:SleepTurnMod     -1`
	.Status:PoisonTurnMod     0`
	.Status:FrozenTurnMod     0`
	.Status:DizzyTurnMod     -1`
	.Status:FearTurnMod       0`
	.Status:StaticTurnMod     0`
	.Status:ParalyzeTurnMod  -1`
	.Status:ShrinkTurnMod    -1`
	.Status:StopTurnMod      -2`
	.Status:End
}

#new:PartsTable $PartsTable_802244C4
{
	00800000 01000000 FA1200FF $IdleAnimations_80224380 $DefenseTable_8022440C 00000000 00000000 05FC0000 00000000
}

#new:Actor $JrTroopa2
{
	% stats
	[Index]        89b
	[Level]        44`b
	[MaxHP]        15`b
	[Coins]         0`b
	[Flags]       00000000
	[StatusTable] $StatusTable_80224418
	% ai
	[PartsCount]    1`s
	[PartsTable]  $PartsTable_802244C4
	[Script]      $Script_Init_80224A94
	% move effectiveness
	[Escape]        0`b
	[Item]          0`b
	[AirLift]       0`b
	[Hurricane]     0`b % Bow's "Spook" as well
	[UpAndAway]     0`b
	[PowerBounce]  80`b
	[SpinSmash]     0`b % weight (0-4)
	% ui positions
	[Size]         32`b  32`b % width height
	[HealthBar]     0`b   0`b % dx dy
	[StatusTurn]  -15`b  30`b % dx dy
	[StatusIcon]   10`b  20`b % dx dy
}

#new:Script $Script_80224510
{
    0:  Call  GetActorPos   ( .Actor:Self *Var0 *Var1 *Var2 )
   1C:  Call  SetGoalPos    ( .Actor:Self *Var0 *Var1 *Var2 )
   38:  Call  UseBattleCamPreset    ( 00000007 )
   48:  Call  BattleCamTargetActor  ( .Actor:Self )
   58:  Call  SetBattleCamOffsetZ   (  38` )
   68:  Call  SetBattleCamZoom      (  256` )
   78:  Call  MoveBattleCamOver     (  15` )
   88:  Return
   90:  End
}

#new:Script $Script_802245A8
{
    0:  Call  802535B4  ( 00000001 )
   10:  Call  UseBattleCamPreset    ( 00000002 )
   20:  Call  MoveBattleCamOver     (  12` )
   30:  Return
   38:  End
}

% Origin: HEURISTIC
#new:Script $Script_802245E8
{
    0:  Call  SetTargetActor        ( .Actor:Self .Actor:Player )
   14:  Call  SetGoalToTarget       ( .Actor:Self )
   24:  Call  UseBattleCamPreset    ( 00000037 )
   34:  Call  MoveBattleCamOver     (  30` )
   44:  Call  BattleCamTargetActor  ( .Actor:Self )
   54:  Return
   5C:  End
}

#new:IdleAnimations $IdleAnimations_8022464C
{
	.Status:Normal    00210014
	.Status:End
}

#new:Script $Script_80224658
{
    0:  Set   *VarA  *Var0
   10:  Call  8027D32C      ( FFFFFF81 )
   20:  Call  UseIdleAnimation  ( .Actor:Self .False )
   34:  Call  SetAnimation  ( .Actor:Self *VarA *Var1 )
   4C:  Wait  10`
   58:  Call  80269E80      ( *Var5 )
   68:  Switch  *Var5
   74:  	CaseOR  ==  0000000A
   80:  	CaseOR  ==  0000000E
   8C:  	CaseOR  ==  0000000C
   98:  	CaseOR  ==  00000010
   A4:  	CaseOR  ==  0000000B
   B0:  	CaseOR  ==  0000000F
   BC:  	CaseOR  ==  0000000D
   C8:  	CaseOR  ==  00000011
   D4:  	CaseOR  ==  00000002
   E0:  	EndCaseGroup
   E8:  	Default
   F0:  		Set   *Var2  00000000
  100:  		Loop  00000018
  10C:  			Call  SetActorYaw   ( .Actor:Self *Var2 )
  120:  			Add   *Var2  0000001E
  130:  			Wait  1`
  13C:  		EndLoop
  144:  		Call  SetActorYaw   ( .Actor:Self  0` )
  158:  EndSwitch
  160:  Label  0
  16C:  Call  GetActorPos       ( .Actor:Self *Var0 *Var1 *Var2 )
  188:  Add   *Var1  0000000A
  198:  Add   *Var2  0000000A
  1A8:  Call  PlayEffect        ( ~FX:BigSmokePuff *Var0 *Var1 *Var2 00000000 00000000 00000000 00000000 00000000 00000000 00000000 00000000 00000000 00000000 )
  1EC:  Call  PlaySound ( 000003E5 )
  1FC:  Call  DropStarPoints    ( .Actor:Self )
  20C:  Call  SetActorYaw       ( .Actor:Self  0` )
  220:  Call  UseBattleCamPreset    ( 0000000E )
  230:  Call  SetBattleCamZoom  (  260` )
  240:  Call  SetBattleCamOffsetZ   (  15` )
  250:  Call  BattleCamTargetActor  ( .Actor:Self )
  260:  Call  MoveBattleCamOver (  30` )
  270:  Call  PlaySoundAtActor  ( .Actor:Self 000020E5 )
  284:  Call  SetAnimation      ( .Actor:Self *VarA 00210027 )
  29C:  Wait  12`
  2A8:  Call  SetAnimation      ( .Actor:Self *VarA 00210014 )
  2C0:  Call  SetIdleAnimations ( .Actor:Self *VarA $IdleAnimations_8022464C )
  2D8:  Wait  60`
  2E4:  Call  SetActorFlagBits  ( .Actor:Self 00400000 .True )
  2FC:  Return
  304:  End
}

#new:Script $Script_80224964
{
    0:  Wait  10`
    C:  Call  PlaySoundAtActor  ( .Actor:Self .Sound:CloseShell )
   20:  Call  GetActorPos   ( .Actor:Self *Var0 *Var1 *Var2 )
   3C:  Add   *Var1  0000000A
   4C:  Add   *Var2  00000005
   5C:  Call  PlayEffect    ( ~FX:Steam:TinyPuff *Var0 *Var1 *Var2 FFFFFFFC 00000000 00000000 00000000 00000000 00000000 00000000 00000000 00000000 )
   A0:  Call  PlayEffect    ( ~FX:Steam:TinyPuff *Var0 *Var1 *Var2 00000004 00000000 00000000 00000000 00000000 00000000 00000000 00000000 00000000 )
   E4:  Call  SetAnimation  ( .Actor:Self 00000001 00210012 )
   FC:  Call  SetIdleAnimations ( .Actor:Self 00000001 $IdleAnimations_802243F8 )
  114:  Wait  10`
  120:  Return
  128:  End
}

#new:Script $Script_Init_80224A94
{
    0:  Call  BindTakeTurn  ( .Actor:Self $Script_TakeTurn_80225314 )
   14:  Call  BindIdle      ( .Actor:Self $Script_Idle_80224B24 )
   28:  Call  BindHandleEvent   ( .Actor:Self $Script_HandleEvent_80224B58 )
   3C:  Call  BindNextTurn  ( .Actor:Self $Script_NextTurn_80225B4C )
   50:  Call  SetActorVar   ( .Actor:Self 00000000 00000000 )
   68:  Call  SetActorVar   ( .Actor:Self 00000001 00000000 )
   80:  Return
   88:  End
}

#new:Script $Script_Idle_80224B24
{
    0:  Label  0
    C:  Wait  1`
   18:  Goto  0
   24:  Return
   2C:  End
}

#new:Script $Script_HandleEvent_80224B58
{
    0:  Call  UseIdleAnimation  ( .Actor:Self .False )
   14:  Call  EnableIdleScript  ( .Actor:Self 00000000 )
   28:  Call  GetLastEvent      ( .Actor:Self *Var0 )
   3C:  Switch  *Var0
   48:  	Case  ==  .Event:HitCombo % 9
   54:  		ExecWait  $Script_802250E4
   60:  		SetConst  *Var0  00000001
   70:  		SetConst  *Var1  00210011
   80:  		ExecWait  DoNormalHit
   8C:  	Case  ==  .Event:Hit % A
   98:  		ExecWait  $Script_802250E4
   A4:  		SetConst  *Var0  00000001
   B4:  		SetConst  *Var1  00210011
   C4:  		ExecWait  DoNormalHit
   D0:  		ExecWait  $Script_802251CC
   DC:  	Case  ==  .Event:Death % 20
   E8:  		SetConst  *Var0  00000001
   F8:  		SetConst  *Var1  00210011
  108:  		ExecWait  DoNormalHit
  114:  		Wait  10`
  120:  		SetConst  *Var0  00000001
  130:  		SetConst  *Var1  00210013
  140:  		ExecWait  $Script_80224658
  14C:  		Return
  154:  	Case  ==  .Event:BurnHit % E
  160:  		Set   *Var0  00000001
  170:  		Set   *Var1  00210028
  180:  		Set   *Var2  00210029
  190:  		ExecWait  DoBurnHit
  19C:  	Case  ==  .Event:BurnDeath % 24
  1A8:  		Set   *Var0  00000001
  1B8:  		Set   *Var1  00210028
  1C8:  		Set   *Var2  00210029
  1D8:  		ExecWait  DoBurnHit
  1E4:  		Wait  10`
  1F0:  		SetConst  *Var0  00000001
  200:  		SetConst  *Var1  00210029
  210:  		ExecWait  $Script_80224658
  21C:  		Return
  224:  	Case  ==  .Event:SpinSmashHit % B
  230:  		ExecWait  $Script_802250E4
  23C:  		SetConst  *Var0  00000001
  24C:  		SetConst  *Var1  00210011
  25C:  		ExecWait  DoSpinSmashHit
  268:  		ExecWait  $Script_802251CC
  274:  	Case  ==  .Event:SpinSmashDeath % 21
  280:  		SetConst  *Var0  00000001
  290:  		SetConst  *Var1  00210011
  2A0:  		ExecWait  DoSpinSmashHit
  2AC:  		SetConst  *Var0  00000001
  2BC:  		SetConst  *Var1  00210013
  2CC:  		ExecWait  $Script_80224658
  2D8:  		Return
  2E0:  	Case  ==  .Event:ShockHit % 2F
  2EC:  		SetConst  *Var0  00000001
  2FC:  		SetConst  *Var1  00210011
  30C:  		ExecWait  DoShockHit
  318:  		SetConst  *Var0  00000001
  328:  		SetConst  *Var1  00210011
  338:  		ExecWait  DoJumpBack
  344:  		Call  JumpToGoal    ( .Actor:Self  5` .False .True .False )
  364:  		SetConst  *Var0  00000001
  374:  		SetConst  *Var1  00210009
  384:  		ExecWait  DoReturnHome
  390:  		ExecWait  $Script_80224964
  39C:  	Case  ==  .Event:ShockDeath % 26
  3A8:  		SetConst  *Var0  00000001
  3B8:  		SetConst  *Var1  00210011
  3C8:  		ExecWait  DoShockHit
  3D4:  		SetConst  *Var0  00000001
  3E4:  		SetConst  *Var1  00210011
  3F4:  		ExecWait  DoJumpBack
  400:  		Call  GetActorPos   ( .Actor:Self *Var0 *Var1 *Var2 )
  41C:  		Call  SetHomePos    ( .Actor:Self *Var0 *Var1 *Var2 )
  438:  		SetConst  *Var0  00000001
  448:  		SetConst  *Var1  00210013
  458:  		ExecWait  $Script_80224658
  464:  		Return
  46C:  	CaseOR  ==  00000017 % 17
  478:  	CaseOR  ==  .Event:Immune % 19
  484:  	CaseOR  ==  .Event:AirLiftFailed % 1F
  490:  		SetConst  *Var0  00000001
  4A0:  		SetConst  *Var1  00210004
  4B0:  		ExecWait  DoImmune
  4BC:  	EndCaseGroup
  4C4:  	Case  ==  .Event:EndFirstStrike % 35
  4D0:  		SetConst  *Var0  00000001
  4E0:  		SetConst  *Var1  00210003
  4F0:  		ExecWait  DoReturnHome
  4FC:  		Call  HPBarToHome   ( .Actor:Self )
  50C:  	Case  ==  .Event:RecoverStatus % 31
  518:  		SetConst  *Var0  00000001
  528:  		SetConst  *Var1  00210003
  538:  		ExecWait  DoRecover
  544:  	Default
  54C:  EndSwitch
  554:  Call  EnableIdleScript  ( .Actor:Self 00000001 )
  568:  Call  UseIdleAnimation  ( .Actor:Self .True )
  57C:  Return
  584:  End
}

#new:Script $Script_802250E4
{
    0:  Call  GetActorVar   ( .Actor:Self 00000001 *Var0 )
   18:  If  *Var0  ==  00000000
   28:  	Call  GetLastDamage     ( .Actor:Self *Var1 )
   3C:  	Call  GetBattleFlags    ( *Var2 )
   4C:  	If  *Var2  !&  00080000
   5C:  		If  *Var1  !=  00000000
   6C:  			Call  SetActorVar       ( .Actor:Self 00000001 00000001 )
   84:  			Call  GetStatusFlags    ( .Actor:Self *Var0 )
   98:  			If  *Var0  !&  ~Flags:StatusFlags:Sleep|Paralyze|Dizzy|Stone|Stop % 351000
   A8:  				Call  FreezeBattleCam   ( .True )
   B8:  			EndIf
   C0:  		EndIf
   C8:  	EndIf
   D0:  EndIf
   D8:  Return
   E0:  End
}

#new:Script $Script_802251CC
{
    0:  Call  GetActorVar   ( .Actor:Self 00000001 *Var0 )
   18:  If  *Var0  ==  00000001
   28:  	Call  GetStatusFlags    ( .Actor:Self *Var0 )
   3C:  	If  *Var0  !&  ~Flags:StatusFlags:Sleep|Paralyze|Dizzy|Stone|Stop % 351000
   4C:  		Call  SetActorVar       ( .Actor:Self 00000001 00000002 )
   64:  		ExecWait  $Script_80224510
   70:  		Call  MoveBattleCamOver (  30` )
   80:  		Wait  30`
   8C:  		Call  ActorSpeak        ( 000C012A .Actor:Self 00000001 0021001D 0021001D ) % Yeeowch!! Who knew that Mario had such battle skil ...
   AC:  		Call  SetAnimation      ( .Actor:Self 00000001 0021001A )
   C4:  		Call  EndActorSpeech    ( .Actor:Self 00000001 FFFFFFFF FFFFFFFF )
   E0:  		ExecWait  $Script_80224964
   EC:  		ExecWait  $Script_802245A8
   F8:  	Else
  100:  		Call  SetActorVar   ( .Actor:Self 00000001 00000000 )
  118:  	EndIf
  120:  EndIf
  128:  Call  FreezeBattleCam   ( .False )
  138:  Return
  140:  End
}

#new:Script $Script_TakeTurn_80225314
{
    0:  Call  UseIdleAnimation  ( .Actor:Self .False )
   14:  Call  EnableIdleScript  ( .Actor:Self 00000000 )
   28:  Call  PlaySoundAtActor  ( .Actor:Self .Sound:OpenShell )
   3C:  Call  SetAnimation      ( .Actor:Self 00000001 00210003 )
   54:  Wait  20`
   60:  Call  SetTargetActor    ( .Actor:Self .Actor:Player )
   74:  Call  SetGoalToTarget   ( .Actor:Self )
   84:  Call  UseBattleCamPreset    ( 0000003F )
   94:  Call  BattleCamTargetActor  ( .Actor:Self )
   A4:  Call  MoveBattleCamOver (  20` )
   B4:  Call  8024ECF8  ( FFFFFFFF 00000001 00000000 )
   CC:  Call  SetAnimation      ( .Actor:Self 00000001 00210009 )
   E4:  Call  SetActorSpeed     ( .Actor:Self *Fixed[8.0] )
   F8:  Call  SetGoalToTarget   ( .Actor:Self )
  108:  Call  AddGoalPos        ( .Actor:Self  50`  0`  0` )
  124:  Call  SetActorSpeed     ( .Actor:Self *Fixed[6.0] )
  138:  Call  RunToGoal ( .Actor:Self  0` .False )
  150:  Call  SetAnimation      ( .Actor:Self 00000001 00210003 )
  168:  Call  SetActorDispOffset    ( .Actor:Self 00000000 FFFFFFFF 00000000 )
  184:  Wait  1`
  190:  Call  SetActorDispOffset    ( .Actor:Self 00000000 FFFFFFFE 00000000 )
  1AC:  Wait  5`
  1B8:  Call  SetActorDispOffset    ( .Actor:Self 00000000 00000000 00000000 )
  1D4:  Call  SetAnimation      ( .Actor:Self 00000001 0021000E )
  1EC:  Call  EnemyTestTarget   ( .Actor:Self *VarA ~Flags:DamageType:0 00000000 00000002 00000010 )
  210:  Switch  *VarA
  21C:  	CaseOR  ==  .HitResult:Lucky % 5
  228:  	CaseOR  ==  .HitResult:Miss % 6
  234:  		Call  SetGoalToTarget       ( .Actor:Self )
  244:  		Call  SetActorJumpGravity   ( .Actor:Self *Fixed[2.0] )
  258:  		Call  SetAnimation  ( .Actor:Self 00000001 0021000F )
  270:  		Thread
  278:  			Wait  8`
  284:  			Call  SetAnimation  ( .Actor:Self 00000001 00210010 )
  29C:  		EndThread
  2A4:  		Call  GetActorPos   ( .Actor:Player *Var0 *Var1 *Var2 )
  2C0:  		Set   *Var1  00000000
  2D0:  		Add   *Var2  00000005
  2E0:  		Call  SetGoalPos    ( .Actor:Self *Var0 *Var1 *Var2 )
  2FC:  		Call  JumpToGoal    ( .Actor:Self  15` .False .True .False )
  31C:  		If  *VarA  ==  .HitResult:Lucky % 5
  32C:  			Call  EnemyTestTarget   ( .Actor:Self *Var0 ~Flags:DamageType:TriggerLucky 00000000 00000000 00000000 )
  350:  		EndIf
  358:  		Wait  2`
  364:  		Call  GetGoalPos    ( .Actor:Self *Var0 *Var1 *Var2 )
  380:  		Sub   *Var0  00000014
  390:  		Set   *Var1  00000000
  3A0:  		Call  SetActorJumpGravity   ( .Actor:Self *Fixed[1.8] )
  3B4:  		Call  SetGoalPos    ( .Actor:Self *Var0 *Var1 *Var2 )
  3D0:  		Call  JumpToGoal    ( .Actor:Self  10` .False .True .False )
  3F0:  		Call  SetAnimation  ( .Actor:Self 00000001 00210003 )
  408:  		Wait  10`
  414:  		Call  UseBattleCamPreset    ( 00000002 )
  424:  		Call  MoveBattleCamOver     (  25` )
  434:  		Call  SetActorYaw   ( .Actor:Self  180` )
  448:  		Call  AddActorDecoration    ( .Actor:Self 00000001 00000000 .Decoration:Sweat )
  464:  		Call  SetGoalToHome ( .Actor:Self )
  474:  		Call  SetActorSpeed ( .Actor:Self *Fixed[8.0] )
  488:  		Call  SetAnimation  ( .Actor:Self 00000001 0021000B )
  4A0:  		Call  RunToGoal     ( .Actor:Self  0` .False )
  4B8:  		Call  SetAnimation  ( .Actor:Self 00000001 00210003 )
  4D0:  		Call  RemoveActorDecoration ( .Actor:Self 00000001 00000000 )
  4E8:  		Call  SetActorYaw   ( .Actor:Self  0` )
  4FC:  		ExecWait  $Script_80224964
  508:  		Call  UseIdleAnimation      ( .Actor:Self .True )
  51C:  		Return
  524:  	EndCaseGroup
  52C:  EndSwitch
  534:  Call  SetGoalToTarget       ( .Actor:Self )
  544:  Call  SetActorJumpGravity   ( .Actor:Self *Fixed[2.0] )
  558:  Thread
  560:  	Wait  3`
  56C:  	Call  SetAnimation  ( .Actor:Self 00000001 0021000F )
  584:  	Wait  5`
  590:  	Call  SetAnimation  ( .Actor:Self 00000001 00210010 )
  5A8:  EndThread
  5B0:  Call  JumpToGoal        ( .Actor:Self  15` .False .True .False )
  5D0:  Wait  2`
  5DC:  Call  EnemyDamageTarget ( .Actor:Self *Var0 ~Flags:DamageType:0 00000000 00000000 00000002 00000020 )
  604:  Switch  *Var0
  610:  	Default
  618:  		Call  UseBattleCamPreset    ( 00000002 )
  628:  		Call  ResetAllActorSounds   ( .Actor:Self )
  638:  		Call  GetGoalPos    ( .Actor:Self *Var0 *Var1 *Var2 )
  654:  		Add   *Var0  00000028
  664:  		Set   *Var1  00000000
  674:  		Call  SetActorJumpGravity   ( .Actor:Self *Fixed[1.8] )
  688:  		Call  SetGoalPos    ( .Actor:Self *Var0 *Var1 *Var2 )
  6A4:  		Call  JumpToGoal    ( .Actor:Self  10` .False .True .False )
  6C4:  		Add   *Var0  0000001E
  6D4:  		Call  SetGoalPos    ( .Actor:Self *Var0 *Var1 *Var2 )
  6F0:  		Call  JumpToGoal    ( .Actor:Self  8` .False .True .False )
  710:  		Add   *Var0  00000014
  720:  		Call  SetGoalPos    ( .Actor:Self *Var0 *Var1 *Var2 )
  73C:  		Call  JumpToGoal    ( .Actor:Self  6` .False .True .False )
  75C:  		Call  SetAnimation  ( .Actor:Self 00000001 00210003 )
  774:  		Wait  10`
  780:  		Call  SetGoalToHome ( .Actor:Self )
  790:  		Call  SetActorSpeed ( .Actor:Self *Fixed[8.0] )
  7A4:  		Call  SetAnimation  ( .Actor:Self 00000001 00210009 )
  7BC:  		Call  RunToGoal     ( .Actor:Self  0` .False )
  7D4:  		Call  SetAnimation  ( .Actor:Self 00000001 00210003 )
  7EC:  		ExecWait  $Script_80224964
  7F8:  EndSwitch
  800:  Call  EnableIdleScript  ( .Actor:Self 00000001 )
  814:  Call  UseIdleAnimation  ( .Actor:Self .True )
  828:  Return
  830:  End
}

#new:Script $Script_NextTurn_80225B4C
{
    0:  Call  UseIdleAnimation  ( .Actor:Self .False )
   14:  Call  EnableIdleScript  ( .Actor:Self 00000000 )
   28:  Call  GetBattlePhase    ( *Var0 )
   38:  Switch  *Var0
   44:  	Case  ==  0000000A
   50:  		Call  GetActorVar   ( .Actor:Self 00000000 *Var0 )
   68:  		If  *Var0  ==  00000000
   78:  			Call  SetActorVar   ( .Actor:Self 00000000 00000001 )
   90:  			Wait  15`
   9C:  			ExecWait  $Script_80224510
   A8:  			Wait  10`
   B4:  			Call  ActorSpeak    ( 000C0128 .Actor:Self 00000001 0021001A 0021001B ) % Get ready to hurt, Mario! I'm gonna show you a new ...
   D4:  			Call  SetAnimation  ( .Actor:Self 00000001 0021000B )
   EC:  			Call  PlaySoundAtActor  ( .Actor:Self 000020B9 )
  100:  			Call  GetActorPos   ( .Actor:Self *Var0 *Var1 *Var2 )
  11C:  			Add   *Var1  00000010
  12C:  			Call  PlayEffect    ( ~FX:GatherEnergyPink *Var0 *Var1 *Var2 00000001 0000001E 00000000 00000000 00000000 00000000 00000000 00000000 00000000 )
  170:  			Call  PlayEffect    ( 00000013 00000001 *Var0 *Var1 *Var2 00000001 0000001E 00000000 00000000 00000000 00000000 00000000 00000000 00000000 )
  1B4:  			Wait  30`
  1C0:  			ExecWait  $Script_80224964
  1CC:  			Wait  30`
  1D8:  			Call  ActorSpeak    ( 000C0129 .Actor:Self 00000001 00210017 00210004 ) % Yeah! Check that out! You've never seen anything l ...
  1F8:  			Wait  10`
  204:  			ExecWait  $Script_802245A8
  210:  		Else
  218:  		EndIf
  220:  	Case  ==  0000000C
  22C:  EndSwitch
  234:  Call  EnableIdleScript  ( .Actor:Self 00000001 )
  248:  Call  UseIdleAnimation  ( .Actor:Self .True )
  25C:  Return
  264:  End
}

PADDING: 80225DB8 to 80225DC0 (004551F8 to 00455200)
00000000 00000000

#new:IdleAnimations $IdleAnimations_80225DC0
{
	.Status:Normal    00250002
	.Status:Sleep     0025000A
	.Status:Stone     00250000
	.Status:Poison    00250000
	.Status:Stop      00250000
	.Status:Static    00250000
	.Status:Paralyze  00250000
	.Status:Dizzy     0025000B
	.Status:End
}

#new:IdleAnimations $IdleAnimations_80225E04
{
	.Status:Normal    00210003
	.Status:Sleep     0021001C
	.Status:Stone     00210000
	.Status:Poison    00210000
	.Status:Stop      00210000
	.Status:Static    00210000
	.Status:Paralyze  00210000
	.Status:Dizzy     0021001D
	.Status:End
}

#new:IdleAnimations $IdleAnimations_80225E48
{
	.Status:Normal    00210014
	.Status:End
}

#new:DefenseTable $DefenseTable_80225E54
{
	.Element:Normal 00000001
	.Element:End
}

#new:StatusTable $StatusTable_80225E60
{
	.Status:Normal    100`
	.Status:Default   100`
	.Status:Sleep      50`
	.Status:Poison      0`
	.Status:Frozen      0`
	.Status:Dizzy      50`
	.Status:Fear        0`
	.Status:Static      0`
	.Status:Paralyze   50`
	.Status:Shrink     80`
	.Status:Stop       80`
	.Status:DefaultTurnMod    0`
	.Status:SleepTurnMod     -1`
	.Status:PoisonTurnMod     0`
	.Status:FrozenTurnMod     0`
	.Status:DizzyTurnMod     -1`
	.Status:FearTurnMod       0`
	.Status:StaticTurnMod     0`
	.Status:ParalyzeTurnMod  -1`
	.Status:ShrinkTurnMod    -1`
	.Status:StopTurnMod      -2`
	.Status:End
}

#new:PartsTable $PartsTable_80225F0C
{
	00800001 01000000 002300FF $IdleAnimations_80225DC0 $DefenseTable_80225E54 00000000 00000000 00FA0000 00000000
	00020000 02000000 001E00FF $IdleAnimations_80225E04 $DefenseTable_80225E54 00000000 00000000 00000000 00000000
}

#new:Actor $JrTroopa3
{
	% stats
	[Index]        8Ab
	[Level]        52`b
	[MaxHP]        40`b
	[Coins]         0`b
	[Flags]       00000200
	[StatusTable] $StatusTable_80225E60
	% ai
	[PartsCount]    2`s
	[PartsTable]  $PartsTable_80225F0C
	[Script]      $Script_Init_80226510
	% move effectiveness
	[Escape]        0`b
	[Item]          0`b
	[AirLift]       0`b
	[Hurricane]     0`b % Bow's "Spook" as well
	[UpAndAway]     0`b
	[PowerBounce]  80`b
	[SpinSmash]     0`b % weight (0-4)
	% ui positions
	[Size]         60`b  35`b % width height
	[HealthBar]     0`b   0`b % dx dy
	[StatusTurn]  -25`b  35`b % dx dy
	[StatusIcon]   10`b  25`b % dx dy
}

#new:Script $Script_80225F7C
{
    0:  Call  GetStatusFlags    ( .Actor:Self *Var2 )
   14:  If  *Var2  &  ~Flags:StatusFlags:Sleep|Frozen|Fear|Paralyze|Dizzy|Stone|Stop % 35D000
   24:  	Return
   2C:  EndIf
   34:  Call  GetBattleFlags    ( *Var2 )
   44:  If  *Var2  &  00080000
   54:  	Call  GetMenuSelection  ( *Var0 *Var1 *Var2 )
   6C:  	If  *Var2  ==  000000B7
   7C:  		Call  SetActorVar   ( .Actor:Self 00000001 00000001 )
   94:  		Call  PlaySoundAtActor  ( .Actor:Self 00000263 )
   A8:  		Call  GetActorPos   ( .Actor:Self *Var0 *Var1 *Var2 )
   C4:  		Add   *Var1  0000001E
   D4:  		Call  ShowEmote     ( 00000000 .Emote:Question  -45`  30` 00000002 *Var0 *Var1 *Var2  5` )
  104:  		Wait  30`
  110:  	EndIf
  118:  EndIf
  120:  Return
  128:  End
}

#new:Script $Script_802260AC
{
    0:  Call  PlaySoundAtActor  ( .Actor:Self 000020B9 )
   14:  Call  GetActorPos       ( .Actor:Self *Var0 *Var1 *Var2 )
   30:  Call  GetStatusFlags    ( .Actor:Self *Var3 )
   44:  If  *Var3  !&  ~Flags:StatusFlags:Shrink % 80000
   54:  	Add   *Var1  00000010
   64:  Else
   6C:  	Add   *Var1  00000006
   7C:  EndIf
   84:  Call  PlayEffect    ( ~FX:GatherEnergyPink *Var0 *Var1 *Var2 00000001 0000001E 00000000 00000000 00000000 00000000 00000000 00000000 00000000 )
   C8:  Call  PlayEffect    ( 00000013 00000001 *Var0 *Var1 *Var2 00000001 0000001E 00000000 00000000 00000000 00000000 00000000 00000000 00000000 )
  10C:  Thread
  114:  	Set   *Var0  00000000
  124:  	Loop  00000020
  130:  		Wait  1`
  13C:  		Add   *Var0  0000002D
  14C:  		Call  SetActorRotation  ( .Actor:Self 00000000 *Var0 00000000 )
  168:  	EndLoop
  170:  EndThread
  178:  Wait  32`
  184:  Call  PlaySoundAtActor  ( .Actor:Self 00000300 )
  198:  Call  GetActorPos   ( .Actor:Self *Var0 *Var1 *Var2 )
  1B4:  Add   *Var1  0000000F
  1C4:  Call  PlayEffect    ( ~FX:EnergyWaveOut:Grey *Var0 *Var1 *Var2 00000001 00000028 00000000 00000000 00000000 00000000 00000000 00000000 00000000 )
  208:  Call  PlayEffect    ( ~FX:Steam:TinyPuff *Var0 *Var1 *Var2 FFFFFFFC 00000000 00000000 00000000 00000000 00000000 00000000 00000000 00000000 )
  24C:  Call  PlayEffect    ( ~FX:Steam:TinyPuff *Var0 *Var1 *Var2 FFFFFFFC 00000004 00000000 00000000 00000000 00000000 00000000 00000000 00000000 )
  290:  Call  PlayEffect    ( ~FX:Steam:TinyPuff *Var0 *Var1 *Var2 00000004 00000000 00000000 00000000 00000000 00000000 00000000 00000000 00000000 )
  2D4:  Call  PlayEffect    ( ~FX:Steam:TinyPuff *Var0 *Var1 *Var2 00000004 00000004 00000000 00000000 00000000 00000000 00000000 00000000 00000000 )
  318:  Return
  320:  End
}

#new:Script $Script_802263D4
{
    0:  Call  GetActorPos   ( .Actor:Self *Var0 *Var1 *Var2 )
   1C:  Call  SetGoalPos    ( .Actor:Self *Var0 *Var1 *Var2 )
   38:  Call  UseBattleCamPreset    ( 00000007 )
   48:  Call  BattleCamTargetActor  ( .Actor:Self )
   58:  Call  SetBattleCamOffsetZ   (  38` )
   68:  Call  SetBattleCamZoom      (  256` )
   78:  Call  MoveBattleCamOver     (  15` )
   88:  Return
   90:  End
}

#new:Script $Script_8022646C
{
    0:  Call  802535B4  ( 00000001 )
   10:  Call  UseBattleCamPreset    ( 00000002 )
   20:  Call  MoveBattleCamOver     (  12` )
   30:  Return
   38:  End
}

% Origin: HEURISTIC
#new:Script $Script_802264AC
{
    0:  Call  SetTargetActor        ( .Actor:Self .Actor:Player )
   14:  Call  SetGoalToTarget       ( .Actor:Self )
   24:  Call  UseBattleCamPreset    ( 00000037 )
   34:  Call  MoveBattleCamOver     (  30` )
   44:  Call  BattleCamTargetActor  ( .Actor:Self )
   54:  Return
   5C:  End
}

#new:Script $Script_Init_80226510
{
    0:  Call  BindTakeTurn  ( .Actor:Self $Script_TakeTurn_80226F58 )
   14:  Call  BindIdle      ( .Actor:Self $Script_Idle_802265A0 )
   28:  Call  BindHandleEvent   ( .Actor:Self $Script_HandleEvent_802266B0 )
   3C:  Call  BindNextTurn  ( .Actor:Self $Script_NextTurn_80227724 )
   50:  Call  SetActorVar   ( .Actor:Self 00000000 00000000 )
   68:  Call  SetActorVar   ( .Actor:Self 00000001 00000000 )
   80:  Return
   88:  End
}

#new:Script $Script_Idle_802265A0
{
    0:  Label  0
    C:  Call  GetStatusFlags    ( .Actor:Self *VarA )
   20:  If  *VarA  &  ~Flags:StatusFlags:Sleep|Dizzy % 41000
   30:  	Call  SetTargetOffset       ( .Actor:Self 00000001  -12`  28` )
   4C:  	Call  8027D4C8  ( FFFFFF81 00000001 00000004 FFFFFFFA )
   68:  	Call  $Function_80218840    ( FFFFFFE7 0000001B FFFFFFFF 0000001B )
   84:  Else
   8C:  	Call  SetTargetOffset       ( .Actor:Self 00000001  -5`  33` )
   A8:  	Call  8027D4C8  ( FFFFFF81 00000001 00000000 FFFFFFFA )
   C4:  	Call  $Function_80218840    ( FFFFFFEA 0000001E 00000002 0000001C )
   E0:  EndIf
   E8:  Wait  1`
   F4:  Goto  0
  100:  Return
  108:  End
}

#new:Script $Script_HandleEvent_802266B0
{
    0:  Call  UseIdleAnimation  ( .Actor:Self .False )
   14:  Call  EnableIdleScript  ( .Actor:Self 00000000 )
   28:  Call  GetLastEvent      ( .Actor:Self *Var0 )
   3C:  Switch  *Var0
   48:  	CaseOR  ==  .Event:HitCombo % 9
   54:  	CaseOR  ==  .Event:Hit % A
   60:  		SetConst  *Var0  00000001
   70:  		SetConst  *Var1  00250007
   80:  		ExecWait  DoNormalHit
   8C:  		ExecWait  $Script_80225F7C
   98:  		ExecWait  $Script_80227E1C
   A4:  	EndCaseGroup
   AC:  	Case  ==  .Event:Death % 20
   B8:  		SetConst  *Var0  00000001
   C8:  		SetConst  *Var1  00250007
   D8:  		ExecWait  DoNormalHit
   E4:  		Wait  10`
   F0:  		SetConst  *Var0  00000001
  100:  		SetConst  *Var1  00250007
  110:  		ExecWait  $Script_802279B0
  11C:  		Return
  124:  	Case  ==  .Event:BurnHit % E
  130:  		Set   *Var0  00000001
  140:  		Set   *Var1  00250008
  150:  		Set   *Var2  00250009
  160:  		ExecWait  DoBurnHit
  16C:  	Case  ==  .Event:BurnDeath % 24
  178:  		Set   *Var0  00000001
  188:  		Set   *Var1  00250008
  198:  		Set   *Var2  00250009
  1A8:  		ExecWait  DoBurnHit
  1B4:  		Wait  10`
  1C0:  		SetConst  *Var0  00000001
  1D0:  		SetConst  *Var1  00250009
  1E0:  		ExecWait  $Script_802279B0
  1EC:  		Return
  1F4:  	Case  ==  .Event:SpinSmashHit % B
  200:  		SetConst  *Var0  00000001
  210:  		SetConst  *Var1  00250007
  220:  		ExecWait  DoSpinSmashHit
  22C:  	Case  ==  .Event:SpinSmashDeath % 21
  238:  		SetConst  *Var0  00000001
  248:  		SetConst  *Var1  00250007
  258:  		ExecWait  DoSpinSmashHit
  264:  		SetConst  *Var0  00000001
  274:  		SetConst  *Var1  00250007
  284:  		ExecWait  $Script_802279B0
  290:  		Return
  298:  	Case  ==  .Event:ShockHit % 2F
  2A4:  		SetConst  *Var0  00000001
  2B4:  		SetConst  *Var1  00250007
  2C4:  		ExecWait  DoShockHit
  2D0:  		SetConst  *Var0  00000001
  2E0:  		SetConst  *Var1  00250007
  2F0:  		ExecWait  DoJumpBack
  2FC:  		ExecWait  $Script_80227D38
  308:  		Call  SetAnimation  ( .Actor:Self 00000001 00250002 )
  320:  	Case  ==  .Event:ShockDeath % 26
  32C:  		SetConst  *Var0  00000001
  33C:  		SetConst  *Var1  00250007
  34C:  		ExecWait  DoShockHit
  358:  		SetConst  *Var0  00000001
  368:  		SetConst  *Var1  00250007
  378:  		ExecWait  DoJumpBack
  384:  		SetConst  *Var0  00000001
  394:  		SetConst  *Var1  00250002
  3A4:  		ExecWait  $Script_802279B0
  3B0:  		Return
  3B8:  	Case  ==  00000017 % 17
  3C4:  		SetConst  *Var0  00000001
  3D4:  		SetConst  *Var1  00250002
  3E4:  		ExecWait  DoImmune
  3F0:  	Case  ==  .Event:Immune % 19
  3FC:  		SetConst  *Var0  00000001
  40C:  		SetConst  *Var1  00250002
  41C:  		ExecWait  DoImmune
  428:  		ExecWait  $Script_80225F7C
  434:  		ExecWait  $Script_80227E1C
  440:  	Case  ==  .Event:SpikeContact % 2A
  44C:  		Call  SetAnimation  ( .Actor:Self 00000001 00250007 )
  464:  		Wait  20`
  470:  		Call  SetAnimation  ( .Actor:Self 00000001 00250005 )
  488:  		Call  SetGoalToHome ( .Actor:Self )
  498:  		Call  SetActorSpeed ( .Actor:Self *Fixed[6.0] )
  4AC:  		Call  RunToGoal     ( .Actor:Self  0` .False )
  4C4:  		Call  SetAnimation  ( .Actor:Self 00000001 00250002 )
  4DC:  	Case  ==  .Event:BeginAirLift % 3A
  4E8:  		Call  GetStatusFlags    ( .Actor:Self *Var0 )
  4FC:  		If  *Var0  !&  ~Flags:StatusFlags:Sleep|Frozen|Fear|Paralyze|Dizzy|Stone|Stop % 35D000
  50C:  			Call  SetAnimation  ( .Actor:Self 00000001 0025000D )
  524:  			Wait  1000`
  530:  		EndIf
  538:  	Case  ==  .Event:AirLiftFailed % 1F
  544:  		Call  GetStatusFlags    ( .Actor:Self *Var0 )
  558:  		If  *Var0  !&  ~Flags:StatusFlags:Sleep|Frozen|Fear|Paralyze|Dizzy|Stone|Stop % 35D000
  568:  			SetConst  *Var0  00000001
  578:  			SetConst  *Var1  0025000D
  588:  			ExecWait  DoImmune
  594:  			ExecWait  $Script_802263D4
  5A0:  			Call  ActorSpeak    ( 001D019B .Actor:Self 00000001 0025000C 0025000C ) % Hey, Mario!! Don't even think of trying to beat me ...
  5C0:  			ExecWait  $Script_8022646C
  5CC:  		EndIf
  5D4:  	Case  ==  .Event:EndFirstStrike % 35
  5E0:  		SetConst  *Var0  00000001
  5F0:  		SetConst  *Var1  00250002
  600:  		ExecWait  DoReturnHome
  60C:  		Call  HPBarToHome   ( .Actor:Self )
  61C:  	Case  ==  .Event:RecoverStatus % 31
  628:  		SetConst  *Var0  00000001
  638:  		SetConst  *Var1  00250002
  648:  		ExecWait  DoRecover
  654:  	Default
  65C:  EndSwitch
  664:  Call  EnableIdleScript  ( .Actor:Self 00000001 )
  678:  Call  UseIdleAnimation  ( .Actor:Self .True )
  68C:  Return
  694:  End
}

% Origin: HEURISTIC
#new:Script $Script_80226D4C
{
    0:  Call  GetGoalPos    ( .Actor:Self *Var0 *Var1 *Var2 )
   1C:  Add   *Var0  00000028
   2C:  Set   *Var1  00000000
   3C:  Call  SetActorJumpGravity   ( .Actor:Self *Fixed[1.8] )
   50:  Call  SetGoalPos    ( .Actor:Self *Var0 *Var1 *Var2 )
   6C:  Call  JumpToGoal    ( .Actor:Self  10` .False .True .False )
   8C:  Add   *Var0  0000001E
   9C:  Call  SetGoalPos    ( .Actor:Self *Var0 *Var1 *Var2 )
   B8:  Call  JumpToGoal    ( .Actor:Self  8` .False .True .False )
   D8:  Add   *Var0  00000014
   E8:  Call  SetGoalPos    ( .Actor:Self *Var0 *Var1 *Var2 )
  104:  Call  JumpToGoal    ( .Actor:Self  6` .False .True .False )
  124:  Sub   *Var0  0000000A
  134:  Call  JumpToGoal    ( .Actor:Self  4` .False .True .False )
  154:  Call  SetAnimation  ( .Actor:Self 00000001 00250002 )
  16C:  Wait  8`
  178:  Call  SetAnimation  ( .Actor:Self 00000001 00250002 )
  190:  Call  SetGoalToHome ( .Actor:Self )
  1A0:  Call  SetActorSpeed ( .Actor:Self *Fixed[4.0] )
  1B4:  Call  SetAnimation  ( .Actor:Self 00000001 00250005 )
  1CC:  Call  RunToGoal     ( .Actor:Self  0` .False )
  1E4:  Call  SetAnimation  ( .Actor:Self 00000001 00250002 )
  1FC:  Return
  204:  End
}

#new:Script $Script_TakeTurn_80226F58
{
    0:  Call  UseIdleAnimation  ( .Actor:Self .False )
   14:  Call  EnableIdleScript  ( .Actor:Self 00000000 )
   28:  Call  SetTargetActor    ( .Actor:Self .Actor:Player )
   3C:  Call  SetGoalToTarget   ( .Actor:Self )
   4C:  Call  UseBattleCamPreset    ( 0000003F )
   5C:  Call  BattleCamTargetActor  ( .Actor:Self )
   6C:  Call  8024ECF8  ( FFFFFFFF 00000001 00000000 )
   84:  Call  SetTargetActor    ( .Actor:Self .Actor:Player )
   98:  Call  SetAnimation      ( .Actor:Self 00000001 00250005 )
   B0:  Call  SetGoalToTarget   ( .Actor:Self )
   C0:  Call  AddGoalPos        ( .Actor:Self  50`  0`  0` )
   DC:  Call  SetActorSpeed     ( .Actor:Self *Fixed[6.0] )
   F0:  Call  FlyToGoal ( .Actor:Self  0`  -4` .Easing:Linear )
  10C:  Call  EnemyTestTarget   ( .Actor:Self *VarA ~Flags:DamageType:0 00000000 00000005 00000010 )
  130:  Switch  *VarA
  13C:  	CaseOR  ==  .HitResult:Miss % 6
  148:  	CaseOR  ==  .HitResult:Lucky % 5
  154:  		Wait  10`
  160:  		Call  UseBattleCamPreset    ( 00000042 )
  170:  		Call  8024ECF8      ( FFFFFFFF 00000001 00000000 )
  188:  		Call  BattleCamTargetActor  ( .Actor:Self )
  198:  		Call  SetActorSounds        ( .Actor:Self .ActorSound:Jump 000020E0 00000000 )
  1B4:  		Call  SetActorSpeed ( .Actor:Self *Fixed[5.0] )
  1C8:  		Call  SetActorJumpGravity   ( .Actor:Self *Fixed[1.8] )
  1DC:  		Call  SetAnimation  ( .Actor:Self 00000001 00250005 )
  1F4:  		Call  GetActorPos   ( .Actor:Self *Var0 *Var1 *Var2 )
  210:  		Call  SetGoalPos    ( .Actor:Self *Var0 *Var1 *Var2 )
  22C:  		Call  JumpToGoal    ( .Actor:Self  10` .False .True .False )
  24C:  		Call  SetActorSounds        ( .Actor:Self .ActorSound:Fly 00000000 00000000 )
  268:  		Call  PlaySoundAtActor      ( .Actor:Self 000002C1 )
  27C:  		Call  SetGoalToTarget       ( .Actor:Self )
  28C:  		Sub   *Var0  00000050
  29C:  		Set   *Var1  00000014
  2AC:  		Call  SetGoalPos    ( .Actor:Self *Var0 *Var1 *Var2 )
  2C8:  		Call  SetActorSpeed ( .Actor:Self *Fixed[8.0] )
  2DC:  		Call  SetAnimation  ( .Actor:Self 00000001 00250006 )
  2F4:  		Call  FlyToGoal     ( .Actor:Self  0`  -10` .Easing:Linear )
  310:  		If  *VarA  ==  .HitResult:Lucky % 5
  320:  			Call  EnemyTestTarget   ( .Actor:Self *Var0 ~Flags:DamageType:TriggerLucky 00000000 00000000 00000000 )
  344:  		EndIf
  34C:  		Wait  10`
  358:  		Call  UseBattleCamPreset    ( 00000002 )
  368:  		Call  MoveBattleCamOver     (  20` )
  378:  		Call  ResetAllActorSounds   ( .Actor:Self )
  388:  		Call  SetAnimation  ( .Actor:Self 00000001 00250005 )
  3A0:  		Call  SetActorYaw   ( .Actor:Self  180` )
  3B4:  		Call  AddActorDecoration    ( .Actor:Self 00000001 00000000 .Decoration:Sweat )
  3D0:  		Call  SetGoalToHome ( .Actor:Self )
  3E0:  		Call  SetActorSpeed ( .Actor:Self *Fixed[8.0] )
  3F4:  		Call  FlyToGoal     ( .Actor:Self  0`  1` .Easing:Linear )
  410:  		Call  SetAnimation  ( .Actor:Self 00000001 00250002 )
  428:  		Call  RemoveActorDecoration ( .Actor:Self 00000001 00000000 )
  440:  		Call  SetActorYaw   ( .Actor:Self  0` )
  454:  		Return
  45C:  	EndCaseGroup
  464:  	Default
  46C:  		Wait  10`
  478:  		Call  UseBattleCamPreset    ( 00000042 )
  488:  		Call  8024ECF8      ( FFFFFFFF 00000001 00000000 )
  4A0:  		Call  BattleCamTargetActor  ( .Actor:Self )
  4B0:  		Call  SetActorSounds        ( .Actor:Self .ActorSound:Jump 000020E0 00000000 )
  4CC:  		Call  SetActorSpeed ( .Actor:Self *Fixed[5.0] )
  4E0:  		Call  SetActorJumpGravity   ( .Actor:Self *Fixed[1.8] )
  4F4:  		Call  SetAnimation  ( .Actor:Self 00000001 00250005 )
  50C:  		Call  GetActorPos   ( .Actor:Self *Var0 *Var1 *Var2 )
  528:  		Call  SetGoalPos    ( .Actor:Self *Var0 *Var1 *Var2 )
  544:  		Call  JumpToGoal    ( .Actor:Self  10` .False .True .False )
  564:  		Call  SetActorSounds        ( .Actor:Self .ActorSound:Fly 00000000 00000000 )
  580:  		Call  PlaySoundAtActor      ( .Actor:Self 000002C1 )
  594:  		Call  SetGoalToTarget       ( .Actor:Self )
  5A4:  		Call  SetActorSpeed ( .Actor:Self *Fixed[8.0] )
  5B8:  		Call  SetAnimation  ( .Actor:Self 00000001 00250006 )
  5D0:  		Call  FlyToGoal     ( .Actor:Self  0`  -10` .Easing:Linear )
  5EC:  EndSwitch
  5F4:  Wait  2`
  600:  Call  EnemyDamageTarget ( .Actor:Self *Var0 ~Flags:DamageType:0 00000000 00000000 00000005 00000020 )
  628:  Set   *VarF  *Var0
  638:  Switch  *VarF
  644:  	CaseOR  ==  .HitResult:Hit % 0
  650:  	CaseOR  ==  .HitResult:QuakeImmune % 2
  65C:  	CaseOR  ==  0000000A % A
  668:  		Call  UseBattleCamPreset    ( 00000002 )
  678:  		Call  SetGoalToTarget       ( .Actor:Self )
  688:  		Call  AddGoalPos    ( .Actor:Self  50`  10`  0` )
  6A4:  		Call  SetActorSpeed ( .Actor:Self *Fixed[4.0] )
  6B8:  		Call  SetAnimation  ( .Actor:Self 00000001 00250005 )
  6D0:  		Call  FlyToGoal     ( .Actor:Self  0`  -10` .Easing:Linear )
  6EC:  		Wait  10`
  6F8:  		Call  ResetAllActorSounds   ( .Actor:Self )
  708:  		Call  YieldTurn ( )
  714:  		Call  SetAnimation  ( .Actor:Self 00000001 00250005 )
  72C:  		Call  SetGoalToHome ( .Actor:Self )
  73C:  		Call  SetActorSpeed ( .Actor:Self *Fixed[6.0] )
  750:  		Call  FlyToGoal     ( .Actor:Self  0`  1` .Easing:Linear )
  76C:  		Call  SetAnimation  ( .Actor:Self 00000001 00250002 )
  784:  	EndCaseGroup
  78C:  EndSwitch
  794:  Call  EnableIdleScript  ( .Actor:Self 00000001 )
  7A8:  Call  UseIdleAnimation  ( .Actor:Self .True )
  7BC:  Return
  7C4:  End
}

#new:Script $Script_NextTurn_80227724
{
    0:  Call  UseIdleAnimation  ( .Actor:Self .False )
   14:  Call  EnableIdleScript  ( .Actor:Self 00000000 )
   28:  Call  GetBattlePhase    ( *VarF )
   38:  Switch  *VarF
   44:  	Case  ==  0000000A
   50:  		Call  GetActorVar   ( .Actor:Self 00000000 *Var0 )
   68:  		If  *Var0  ==  00000000
   78:  			Call  SetActorVar   ( .Actor:Self 00000000 00000001 )
   90:  			Wait  15`
   9C:  			Call  UseBattleCamPreset    ( 0000000E )
   AC:  			Call  BattleCamTargetActor  ( .Actor:Self )
   BC:  			Call  SetBattleCamOffsetZ   (  35` )
   CC:  			Call  MoveBattleCamOver     (  30` )
   DC:  			Wait  30`
   E8:  			Call  ActorSpeak    ( 000E0020 .Actor:Self 00000002 0021001A 0021001B ) % Don't think I'm as vulnerable as I was before. Che ...
  108:  			Wait  8`
  114:  			ExecWait  $Script_802260AC
  120:  			Call  SetPartFlagBits       ( .Actor:Self 00000002 00000001 .True )
  13C:  			Call  SetPartFlagBits       ( .Actor:Self 00000001 00000001 .False )
  158:  			Wait  30`
  164:  			Call  GetActorPos   ( .Actor:Self *Var0 *Var1 *Var2 )
  180:  			Add   *Var0  00000014
  190:  			Call  SetGoalPos    ( .Actor:Self *Var0  60` *Var2 )
  1AC:  			Call  FlyToGoal     ( .Actor:Self  45`  0` .Easing:Linear )
  1C8:  			Call  ForceHomePos  ( .Actor:Self *Var0  60` *Var2 )
  1E4:  			Call  HPBarToHome   ( .Actor:Self )
  1F4:  			Wait  8`
  200:  			Call  ActorSpeak    ( 000E0021 .Actor:Self 00000001 0025000C 00250002 ) % Ha ha! Yeah, that's right! Let's see how you like  ...
  220:  			Wait  10`
  22C:  			ExecWait  $Script_8022646C
  238:  		EndIf
  240:  	Case  ==  0000000C
  24C:  EndSwitch
  254:  Call  EnableIdleScript  ( .Actor:Self 00000001 )
  268:  Call  UseIdleAnimation  ( .Actor:Self .True )
  27C:  Return
  284:  End
}

#new:Script $Script_802279B0
{
    0:  Call  UseBattleCamPreset    ( 00000002 )
   10:  Call  GetActorPos   ( .Actor:Self *Var0 *Var1 *Var2 )
   2C:  If  *Var1  ==  00000000
   3C:  	Goto  0
   48:  EndIf
   50:  Call  PlaySoundAtActor  ( .Actor:Self 00000301 )
   64:  Call  SetActorSounds    ( .Actor:Self .ActorSound:Jump 00000000 00000000 )
   80:  Call  8027D32C  ( FFFFFF81 )
   90:  Call  SetGoalPos        ( .Actor:Self *Var0  0` *Var2 )
   AC:  Call  SetActorJumpGravity   ( .Actor:Self *Fixed[1.2] )
   C0:  Call  FallToGoal        ( .Actor:Self  10` )
   D4:  Call  SetActorJumpGravity   ( .Actor:Self *Fixed[0.8] )
   E8:  Call  JumpToGoal        ( .Actor:Self  8` .False .True .False )
  108:  Call  HPBarToCurrent    ( .Actor:Self )
  118:  Call  8027D2D8  ( FFFFFF81 )
  128:  Label  0
  134:  Thread
  13C:  	Call  GetActorPos   ( .Actor:Self *Var0 *Var1 *Var2 )
  158:  	Add   *Var1  0000000A
  168:  	Add   *Var2  0000000A
  178:  	Loop  00000003
  184:  		Call  PlayEffect    ( ~FX:BigSmokePuff *Var0 *Var1 *Var2 00000000 00000000 00000000 00000000 00000000 00000000 00000000 00000000 00000000 00000000 )
  1C8:  		Wait  3`
  1D4:  	EndLoop
  1DC:  EndThread
  1E4:  Call  SetPartFlagBits   ( .Actor:Self 00000001 00000001 .True )
  200:  Call  SetPartFlagBits   ( .Actor:Self 00000002 00000001 .False )
  21C:  Call  SetAnimation      ( .Actor:Self 00000002 00210015 )
  234:  Call  GetActorPos       ( .Actor:Self *Var0 *Var1 *Var2 )
  250:  Sub   *Var0  00000005
  260:  Call  SetActorPos       ( .Actor:Self *Var0 *Var1 *Var2 )
  27C:  Wait  15`
  288:  Call  PlaySoundAtActor  ( .Actor:Self .Sound:Death )
  29C:  Call  DropStarPoints    ( .Actor:Self )
  2AC:  Call  SetActorYaw       ( .Actor:Self  0` )
  2C0:  Call  UseBattleCamPreset    ( 0000000E )
  2D0:  Call  SetBattleCamZoom  (  260` )
  2E0:  Call  SetBattleCamOffsetZ   (  15` )
  2F0:  Call  BattleCamTargetActor  ( .Actor:Self )
  300:  Call  MoveBattleCamOver (  30` )
  310:  Call  PlaySoundAtActor  ( .Actor:Self 000020E5 )
  324:  Call  SetAnimation      ( .Actor:Self 00000002 00210014 )
  33C:  Call  SetIdleAnimations ( .Actor:Self 00000002 $IdleAnimations_80225E48 )
  354:  Wait  60`
  360:  Call  SetActorFlagBits  ( .Actor:Self 00400000 .True )
  378:  Return
  380:  End
}

#new:Script $Script_80227D38
{
    0:  Call  ResetAllActorSounds   ( .Actor:Self )
   10:  Call  SetAnimation  ( .Actor:Self 00000001 00250005 )
   28:  Call  SetActorSpeed ( .Actor:Self *Fixed[6.0] )
   3C:  Call  SetActorJumpGravity   ( .Actor:Self *Fixed[1.2] )
   50:  Call  SetGoalToHome ( .Actor:Self )
   60:  Call  GetGoalPos    ( .Actor:Self *Var0 *Var1 *Var2 )
   7C:  Call  GetActorPos   ( .Actor:Self *Var3 *Var4 *Var5 )
   98:  Sub   *Var4  *Var1
   A8:  MulF  *Var4  *Fixed[0.3]
   B8:  Call  FlyToGoal     ( .Actor:Self  0` *Var4 .Easing:Linear )
   D4:  Return
   DC:  End
}

#new:Script $Script_80227E1C
{
    0:  Call  GetStatusFlags    ( .Actor:Self *Var0 )
   14:  If  *Var0  !&  ~Flags:StatusFlags:Sleep|Frozen|Fear|Paralyze|Dizzy|Stone|Stop % 35D000
   24:  	Call  GetActorVar   ( .Actor:Self 00000001 *Var0 )
   3C:  	If  *Var0  ==  00000001
   4C:  		Call  SetActorVar   ( .Actor:Self 00000001 00000000 )
   64:  		Wait  15`
   70:  		ExecWait  $Script_802263D4
   7C:  		Wait  10`
   88:  		Call  ActorSpeak    ( 001D019A .Actor:Self 00000001 0025000C 00250002 ) % Don't underestimate me, Mario! I'll never be be sc ...
   A8:  		Wait  10`
   B4:  		ExecWait  $Script_8022646C
   C0:  	EndIf
   C8:  EndIf
   D0:  Return
   D8:  End
}

PADDING: 80227EFC to 80227F00 (0045733C to 00457340)
00000000

#new:IdleAnimations $IdleAnimations_80227F00
{
	.Status:Normal    00230003
	.Status:Sleep     0023000D
	.Status:Stone     00230000
	.Status:Poison    00230000
	.Status:Stop      00230000
	.Status:Static    00230000
	.Status:Paralyze  00230000
	.Status:Dizzy     0023000E
	.Status:End
}

#new:IdleAnimations $IdleAnimations_80227F44
{
	.Status:Normal    00210005
	.Status:End
}

#new:IdleAnimations $IdleAnimations_80227F50
{
	.Status:Normal    00210014
	.Status:End
}

#new:DefenseTable $DefenseTable_80227F5C
{
	.Element:Normal 00000001
	.Element:End
}

#new:StatusTable $StatusTable_80227F68
{
	.Status:Normal    100`
	.Status:Default   100`
	.Status:Sleep      40`
	.Status:Poison      0`
	.Status:Frozen      0`
	.Status:Dizzy      90`
	.Status:Fear        0`
	.Status:Static      0`
	.Status:Paralyze   45`
	.Status:Shrink     60`
	.Status:Stop       70`
	.Status:DefaultTurnMod    0`
	.Status:SleepTurnMod     -1`
	.Status:PoisonTurnMod     0`
	.Status:FrozenTurnMod     0`
	.Status:DizzyTurnMod      0`
	.Status:FearTurnMod       0`
	.Status:StaticTurnMod     0`
	.Status:ParalyzeTurnMod  -1`
	.Status:ShrinkTurnMod    -1`
	.Status:StopTurnMod      -2`
	.Status:End
}

#new:PartsTable $PartsTable_80228014
{
	00800001 01000000 FB2000FF $IdleAnimations_80227F00 $DefenseTable_80227F5C 00000010 00000000 00F50000 00000000
	00020000 02000000 001E00FF $IdleAnimations_80227F44 $DefenseTable_80227F5C 00000010 00000000 00000000 00000000
}

#new:Actor $JrTroopa4
{
	% stats
	[Index]        8Bb
	[Level]        59`b
	[MaxHP]        40`b
	[Coins]         0`b
	[Flags]       00000200
	[StatusTable] $StatusTable_80227F68
	% ai
	[PartsCount]    2`s
	[PartsTable]  $PartsTable_80228014
	[Script]      $Script_Init_80228618
	% move effectiveness
	[Escape]        0`b
	[Item]          0`b
	[AirLift]       0`b
	[Hurricane]     0`b % Bow's "Spook" as well
	[UpAndAway]     0`b
	[PowerBounce]  75`b
	[SpinSmash]     0`b % weight (0-4)
	% ui positions
	[Size]         60`b  38`b % width height
	[HealthBar]     0`b   0`b % dx dy
	[StatusTurn]  -25`b  35`b % dx dy
	[StatusIcon]   10`b  25`b % dx dy
}

#new:Script $Script_80228084
{
    0:  Call  GetStatusFlags    ( .Actor:Self *Var2 )
   14:  If  *Var2  &  ~Flags:StatusFlags:Sleep|Frozen|Fear|Paralyze|Dizzy|Stone|Stop % 35D000
   24:  	Return
   2C:  EndIf
   34:  Call  GetBattleFlags    ( *Var2 )
   44:  If  *Var2  &  00080000
   54:  	Call  GetMenuSelection  ( *Var0 *Var1 *Var2 )
   6C:  	If  *Var2  ==  000000B7
   7C:  		Call  SetActorVar   ( .Actor:Self 00000002 00000001 )
   94:  		Call  PlaySoundAtActor  ( .Actor:Self 00000263 )
   A8:  		Call  GetActorPos   ( .Actor:Self *Var0 *Var1 *Var2 )
   C4:  		Add   *Var1  0000001E
   D4:  		Call  ShowEmote     ( 00000000 .Emote:Question  -45`  30` 00000002 *Var0 *Var1 *Var2  5` )
  104:  		Wait  30`
  110:  	EndIf
  118:  EndIf
  120:  Return
  128:  End
}

#new:Script $Script_802281B4
{
    0:  Call  PlaySoundAtActor  ( .Actor:Self 000020B9 )
   14:  Call  GetActorPos       ( .Actor:Self *Var0 *Var1 *Var2 )
   30:  Call  GetStatusFlags    ( .Actor:Self *Var3 )
   44:  If  *Var3  !&  ~Flags:StatusFlags:Shrink % 80000
   54:  	Add   *Var1  00000010
   64:  Else
   6C:  	Add   *Var1  00000006
   7C:  EndIf
   84:  Call  PlayEffect    ( ~FX:GatherEnergyPink *Var0 *Var1 *Var2 00000001 0000001E 00000000 00000000 00000000 00000000 00000000 00000000 00000000 )
   C8:  Call  PlayEffect    ( 00000013 00000001 *Var0 *Var1 *Var2 00000001 0000001E 00000000 00000000 00000000 00000000 00000000 00000000 00000000 )
  10C:  Thread
  114:  	Set   *Var0  00000000
  124:  	Loop  00000020
  130:  		Wait  1`
  13C:  		Add   *Var0  0000002D
  14C:  		Call  SetActorRotation  ( .Actor:Self 00000000 *Var0 00000000 )
  168:  	EndLoop
  170:  EndThread
  178:  Wait  32`
  184:  Call  PlaySoundAtActor  ( .Actor:Self 00000300 )
  198:  Call  GetActorPos   ( .Actor:Self *Var0 *Var1 *Var2 )
  1B4:  Add   *Var1  0000000F
  1C4:  Call  PlayEffect    ( ~FX:EnergyWaveOut:Grey *Var0 *Var1 *Var2 00000001 00000028 00000000 00000000 00000000 00000000 00000000 00000000 00000000 )
  208:  Call  PlayEffect    ( ~FX:Steam:TinyPuff *Var0 *Var1 *Var2 FFFFFFFC 00000000 00000000 00000000 00000000 00000000 00000000 00000000 00000000 )
  24C:  Call  PlayEffect    ( ~FX:Steam:TinyPuff *Var0 *Var1 *Var2 FFFFFFFC 00000004 00000000 00000000 00000000 00000000 00000000 00000000 00000000 )
  290:  Call  PlayEffect    ( ~FX:Steam:TinyPuff *Var0 *Var1 *Var2 00000004 00000000 00000000 00000000 00000000 00000000 00000000 00000000 00000000 )
  2D4:  Call  PlayEffect    ( ~FX:Steam:TinyPuff *Var0 *Var1 *Var2 00000004 00000004 00000000 00000000 00000000 00000000 00000000 00000000 00000000 )
  318:  Return
  320:  End
}

#new:Script $Script_802284DC
{
    0:  Call  GetActorPos   ( .Actor:Self *Var0 *Var1 *Var2 )
   1C:  Call  SetGoalPos    ( .Actor:Self *Var0 *Var1 *Var2 )
   38:  Call  UseBattleCamPreset    ( 00000007 )
   48:  Call  BattleCamTargetActor  ( .Actor:Self )
   58:  Call  SetBattleCamOffsetZ   (  38` )
   68:  Call  SetBattleCamZoom      (  256` )
   78:  Call  MoveBattleCamOver     (  15` )
   88:  Return
   90:  End
}

#new:Script $Script_80228574
{
    0:  Call  802535B4  ( 00000001 )
   10:  Call  UseBattleCamPreset    ( 00000002 )
   20:  Call  MoveBattleCamOver     (  12` )
   30:  Return
   38:  End
}

% Origin: HEURISTIC
#new:Script $Script_802285B4
{
    0:  Call  SetTargetActor        ( .Actor:Self .Actor:Player )
   14:  Call  SetGoalToTarget       ( .Actor:Self )
   24:  Call  UseBattleCamPreset    ( 00000037 )
   34:  Call  MoveBattleCamOver     (  30` )
   44:  Call  BattleCamTargetActor  ( .Actor:Self )
   54:  Return
   5C:  End
}

#new:Script $Script_Init_80228618
{
    0:  Call  BindTakeTurn  ( .Actor:Self $Script_TakeTurn_8022936C )
   14:  Call  BindIdle      ( .Actor:Self $Script_Idle_802286C0 )
   28:  Call  BindHandleEvent   ( .Actor:Self $Script_HandleEvent_802287D0 )
   3C:  Call  BindNextTurn  ( .Actor:Self $Script_NextTurn_80229B38 )
   50:  Call  SetActorVar   ( .Actor:Self 00000000 00000000 )
   68:  Call  SetActorVar   ( .Actor:Self 00000001 00000000 )
   80:  Call  SetActorVar   ( .Actor:Self 00000002 00000000 )
   98:  Return
   A0:  End
}

#new:Script $Script_Idle_802286C0
{
    0:  Label  0
    C:  Call  GetStatusFlags    ( .Actor:Self *VarA )
   20:  If  *VarA  &  ~Flags:StatusFlags:Sleep|Dizzy % 41000
   30:  	Call  SetTargetOffset       ( .Actor:Self 00000001  -15`  28` )
   4C:  	Call  8027D4C8  ( FFFFFF81 00000001 00000004 FFFFFFFA )
   68:  	Call  $Function_80218910    ( FFFFFFE7 0000001B FFFFFFFF 0000001B )
   84:  Else
   8C:  	Call  SetTargetOffset       ( .Actor:Self 00000001  -8`  33` )
   A8:  	Call  8027D4C8  ( FFFFFF81 00000001 00000000 FFFFFFFA )
   C4:  	Call  $Function_80218910    ( FFFFFFEA 0000001E 00000002 0000001C )
   E0:  EndIf
   E8:  Wait  1`
   F4:  Goto  0
  100:  Return
  108:  End
}

#new:Script $Script_HandleEvent_802287D0
{
    0:  Call  UseIdleAnimation  ( .Actor:Self .False )
   14:  Call  EnableIdleScript  ( .Actor:Self 00000000 )
   28:  Call  GetLastEvent      ( .Actor:Self *Var0 )
   3C:  Switch  *Var0
   48:  	Case  ==  .Event:HitCombo % 9
   54:  		ExecWait  $Script_80228FE8
   60:  		SetConst  *Var0  00000001
   70:  		SetConst  *Var1  00230009
   80:  		ExecWait  DoNormalHit
   8C:  	Case  ==  .Event:Hit % A
   98:  		ExecWait  $Script_80228FE8
   A4:  		SetConst  *Var0  00000001
   B4:  		SetConst  *Var1  00230009
   C4:  		ExecWait  DoNormalHit
   D0:  		ExecWait  $Script_8022906C
   DC:  		ExecWait  $Script_80228084
   E8:  		ExecWait  $Script_8022A480
   F4:  	Case  ==  .Event:Death % 20
  100:  		SetConst  *Var0  00000001
  110:  		SetConst  *Var1  00230009
  120:  		ExecWait  DoNormalHit
  12C:  		Wait  10`
  138:  		SetConst  *Var0  00000001
  148:  		SetConst  *Var1  00230009
  158:  		ExecWait  $Script_8022A018
  164:  		Return
  16C:  	Case  ==  .Event:BurnHit % E
  178:  		ExecWait  $Script_80228FE8
  184:  		Set   *Var0  00000001
  194:  		Set   *Var1  0023000A
  1A4:  		Set   *Var2  0023000B
  1B4:  		ExecWait  DoBurnHit
  1C0:  		ExecWait  $Script_8022906C
  1CC:  	Case  ==  .Event:BurnDeath % 24
  1D8:  		ExecWait  $Script_80228FE8
  1E4:  		Set   *Var0  00000001
  1F4:  		Set   *Var1  0023000A
  204:  		Set   *Var2  0023000B
  214:  		ExecWait  DoBurnHit
  220:  		Wait  10`
  22C:  		SetConst  *Var0  00000001
  23C:  		SetConst  *Var1  0023000B
  24C:  		ExecWait  $Script_8022A018
  258:  		Return
  260:  	Case  ==  .Event:SpinSmashHit % B
  26C:  		ExecWait  $Script_80228FE8
  278:  		SetConst  *Var0  00000001
  288:  		SetConst  *Var1  00230009
  298:  		ExecWait  DoSpinSmashHit
  2A4:  		ExecWait  $Script_8022906C
  2B0:  	Case  ==  .Event:SpinSmashDeath % 21
  2BC:  		SetConst  *Var0  00000001
  2CC:  		SetConst  *Var1  00230009
  2DC:  		ExecWait  DoSpinSmashHit
  2E8:  		SetConst  *Var0  00000001
  2F8:  		SetConst  *Var1  00230009
  308:  		ExecWait  $Script_8022A018
  314:  		Return
  31C:  	Case  ==  .Event:ShockHit % 2F
  328:  		SetConst  *Var0  00000001
  338:  		SetConst  *Var1  00230009
  348:  		ExecWait  DoShockHit
  354:  		SetConst  *Var0  00000001
  364:  		SetConst  *Var1  00230009
  374:  		ExecWait  DoJumpBack
  380:  		ExecWait  $Script_8022A39C
  38C:  		Call  SetAnimation  ( .Actor:Self 00000001 00230003 )
  3A4:  	Case  ==  .Event:ShockDeath % 26
  3B0:  		SetConst  *Var0  00000001
  3C0:  		SetConst  *Var1  00230009
  3D0:  		ExecWait  DoShockHit
  3DC:  		SetConst  *Var0  00000001
  3EC:  		SetConst  *Var1  00230009
  3FC:  		ExecWait  DoJumpBack
  408:  		SetConst  *Var0  00000001
  418:  		SetConst  *Var1  00230000
  428:  		ExecWait  $Script_8022A018
  434:  		Return
  43C:  	CaseOR  ==  00000017 % 17
  448:  	CaseOR  ==  .Event:Immune % 19
  454:  		SetConst  *Var0  00000001
  464:  		SetConst  *Var1  00230003
  474:  		ExecWait  DoImmune
  480:  		ExecWait  $Script_80228084
  48C:  		ExecWait  $Script_8022A480
  498:  	EndCaseGroup
  4A0:  	Case  ==  .Event:SpikeTaunt % 1B
  4AC:  		Wait  10`
  4B8:  		Call  GetActorPos       ( .Actor:Self *Var0 *Var1 *Var2 )
  4D4:  		Call  GetStatusFlags    ( .Actor:Self *Var3 )
  4E8:  		Switch  *Var3
  4F4:  			Case  &  ~Flags:StatusFlags:Sleep|Dizzy % 41000
  500:  				Add   *Var0  FFFFFFF3
  510:  				Add   *Var1  00000025
  520:  			Case  &  ~Flags:StatusFlags:Shrink % 80000
  52C:  				Add   *Var0  FFFFFFFF
  53C:  				Add   *Var1  0000000E
  54C:  			Default
  554:  				Add   *Var0  FFFFFFFC
  564:  				Add   *Var1  00000025
  574:  		EndSwitch
  57C:  		Call  PlayEffect    ( ~FX:LensFlare:Rotating *Var0 *Var1 *Var2 00000014 00000000 00000000 00000000 00000000 00000000 00000000 00000000 00000000 )
  5C0:  		Wait  20`
  5CC:  	Case  ==  .Event:BeginAirLift % 3A
  5D8:  		Call  GetStatusFlags    ( .Actor:Self *Var0 )
  5EC:  		If  *Var0  !&  ~Flags:StatusFlags:Sleep|Frozen|Fear|Paralyze|Dizzy|Stone|Stop % 35D000
  5FC:  			Call  SetAnimation  ( .Actor:Self 00000001 00230010 )
  614:  			Wait  1000`
  620:  		EndIf
  628:  	Case  ==  .Event:AirLiftFailed % 1F
  634:  		Call  GetStatusFlags    ( .Actor:Self *Var0 )
  648:  		If  *Var0  !&  ~Flags:StatusFlags:Sleep|Frozen|Fear|Paralyze|Dizzy|Stone|Stop % 35D000
  658:  			Call  SetAnimation  ( .Actor:Self 00000001 00230010 )
  670:  			Wait  20`
  67C:  			ExecWait  $Script_802284DC
  688:  			Call  ActorSpeak    ( 001D019B .Actor:Self 00000001 0023000F 0023000F ) % Hey, Mario!! Don't even think of trying to beat me ...
  6A8:  			ExecWait  $Script_80228574
  6B4:  		EndIf
  6BC:  	Case  ==  .Event:SpikeContact % 2A
  6C8:  		Call  SetAnimation  ( .Actor:Self 00000001 00230009 )
  6E0:  		Wait  20`
  6EC:  		Call  SetAnimation  ( .Actor:Self 00000001 00230007 )
  704:  		Call  SetGoalToHome ( .Actor:Self )
  714:  		Call  SetActorSpeed ( .Actor:Self *Fixed[6.0] )
  728:  		Call  RunToGoal     ( .Actor:Self  0` .False )
  740:  		Call  SetAnimation  ( .Actor:Self 00000001 00230003 )
  758:  	Case  ==  .Event:EndFirstStrike % 35
  764:  		ExecWait  $Script_8022A39C
  770:  		Call  SetAnimation  ( .Actor:Self 00000001 00230003 )
  788:  		Call  HPBarToHome   ( .Actor:Self )
  798:  	Case  ==  .Event:RecoverStatus % 31
  7A4:  		SetConst  *Var0  00000001
  7B4:  		SetConst  *Var1  00230003
  7C4:  		ExecWait  DoRecover
  7D0:  	Default
  7D8:  EndSwitch
  7E0:  Call  EnableIdleScript  ( .Actor:Self 00000001 )
  7F4:  Call  UseIdleAnimation  ( .Actor:Self .True )
  808:  Return
  810:  End
}

#new:Script $Script_80228FE8
{
    0:  Call  GetActorVar   ( .Actor:Self 00000001 *Var0 )
   18:  If  *Var0  ==  00000000
   28:  	Call  GetLastDamage ( .Actor:Self *Var1 )
   3C:  	If  *Var1  !=  00000000
   4C:  		Call  SetActorVar   ( .Actor:Self 00000001 00000001 )
   64:  	EndIf
   6C:  EndIf
   74:  Return
   7C:  End
}

#new:Script $Script_8022906C
{
    0:  Call  GetActorVar   ( .Actor:Self 00000001 *Var0 )
   18:  If  *Var0  ==  00000001
   28:  	Call  GetStatusFlags    ( .Actor:Self *Var0 )
   3C:  	If  *Var0  !&  ~Flags:StatusFlags:Sleep|Paralyze|Dizzy|Stone|Stop % 351000
   4C:  		Call  SetActorVar   ( .Actor:Self 00000001 00000002 )
   64:  		ExecWait  $Script_802284DC
   70:  		Call  ActorSpeak    ( 000700BC .Actor:Self 00000001 FFFFFFFF FFFFFFFF ) % Yow! What in the...? I didn't think you'd do that! ...
   90:  		Call  SetAnimation  ( .Actor:Self 00000001 00230003 )
   A8:  		ExecWait  $Script_80228574
   B4:  	Else
   BC:  		Call  SetActorVar   ( .Actor:Self 00000001 00000000 )
   D4:  	EndIf
   DC:  EndIf
   E4:  Return
   EC:  End
}

% Origin: HEURISTIC
#new:Script $Script_80229160
{
    0:  Call  GetGoalPos    ( .Actor:Self *Var0 *Var1 *Var2 )
   1C:  Add   *Var0  00000028
   2C:  Set   *Var1  00000000
   3C:  Call  SetActorJumpGravity   ( .Actor:Self *Fixed[1.8] )
   50:  Call  SetGoalPos    ( .Actor:Self *Var0 *Var1 *Var2 )
   6C:  Call  JumpToGoal    ( .Actor:Self  10` .False .True .False )
   8C:  Add   *Var0  0000001E
   9C:  Call  SetGoalPos    ( .Actor:Self *Var0 *Var1 *Var2 )
   B8:  Call  JumpToGoal    ( .Actor:Self  8` .False .True .False )
   D8:  Add   *Var0  00000014
   E8:  Call  SetGoalPos    ( .Actor:Self *Var0 *Var1 *Var2 )
  104:  Call  JumpToGoal    ( .Actor:Self  6` .False .True .False )
  124:  Sub   *Var0  0000000A
  134:  Call  JumpToGoal    ( .Actor:Self  4` .False .True .False )
  154:  Call  SetAnimation  ( .Actor:Self 00000001 00230003 )
  16C:  Wait  8`
  178:  Call  SetAnimation  ( .Actor:Self 00000001 00230003 )
  190:  Call  SetGoalToHome ( .Actor:Self )
  1A0:  Call  SetActorSpeed ( .Actor:Self *Fixed[4.0] )
  1B4:  Call  SetAnimation  ( .Actor:Self 00000001 00230007 )
  1CC:  Call  RunToGoal     ( .Actor:Self  0` .False )
  1E4:  Call  SetAnimation  ( .Actor:Self 00000001 00230003 )
  1FC:  Return
  204:  End
}

#new:Script $Script_TakeTurn_8022936C
{
    0:  Call  UseIdleAnimation  ( .Actor:Self .False )
   14:  Call  EnableIdleScript  ( .Actor:Self 00000000 )
   28:  Call  SetTargetActor    ( .Actor:Self .Actor:Player )
   3C:  Call  SetGoalToTarget   ( .Actor:Self )
   4C:  Call  UseBattleCamPreset    ( 0000003F )
   5C:  Call  BattleCamTargetActor  ( .Actor:Self )
   6C:  Call  8024ECF8  ( FFFFFFFF 00000001 00000000 )
   84:  Call  SetTargetActor    ( .Actor:Self .Actor:Player )
   98:  Call  SetAnimation      ( .Actor:Self 00000001 00230007 )
   B0:  Call  SetGoalToTarget   ( .Actor:Self )
   C0:  Call  AddGoalPos        ( .Actor:Self  50`  0`  0` )
   DC:  Call  SetActorSpeed     ( .Actor:Self *Fixed[6.0] )
   F0:  Call  FlyToGoal ( .Actor:Self  0`  -4` .Easing:Linear )
  10C:  Call  EnemyTestTarget   ( .Actor:Self *VarA ~Flags:DamageType:0 00000000 00000006 00000010 )
  130:  Switch  *VarA
  13C:  	CaseOR  ==  .HitResult:Miss % 6
  148:  	CaseOR  ==  .HitResult:Lucky % 5
  154:  		Wait  10`
  160:  		Call  UseBattleCamPreset    ( 00000042 )
  170:  		Call  8024ECF8      ( FFFFFFFF 00000001 00000000 )
  188:  		Call  BattleCamTargetActor  ( .Actor:Self )
  198:  		Call  SetActorSounds        ( .Actor:Self .ActorSound:Jump 000020E0 00000000 )
  1B4:  		Call  SetActorSpeed ( .Actor:Self *Fixed[5.0] )
  1C8:  		Call  SetActorJumpGravity   ( .Actor:Self *Fixed[1.8] )
  1DC:  		Call  SetAnimation  ( .Actor:Self 00000001 00230007 )
  1F4:  		Call  GetActorPos   ( .Actor:Self *Var0 *Var1 *Var2 )
  210:  		Call  SetGoalPos    ( .Actor:Self *Var0 *Var1 *Var2 )
  22C:  		Call  JumpToGoal    ( .Actor:Self  10` .False .True .False )
  24C:  		Call  SetActorSounds        ( .Actor:Self .ActorSound:Fly 00000000 00000000 )
  268:  		Call  PlaySoundAtActor      ( .Actor:Self 000002C1 )
  27C:  		Call  SetGoalToTarget       ( .Actor:Self )
  28C:  		Sub   *Var0  00000050
  29C:  		Set   *Var1  00000014
  2AC:  		Call  SetGoalPos    ( .Actor:Self *Var0 *Var1 *Var2 )
  2C8:  		Call  SetActorSpeed ( .Actor:Self *Fixed[8.0] )
  2DC:  		Call  SetAnimation  ( .Actor:Self 00000001 00230008 )
  2F4:  		Call  FlyToGoal     ( .Actor:Self  0`  -10` .Easing:Linear )
  310:  		If  *VarA  ==  .HitResult:Lucky % 5
  320:  			Call  EnemyTestTarget   ( .Actor:Self *Var0 ~Flags:DamageType:TriggerLucky 00000000 00000000 00000000 )
  344:  		EndIf
  34C:  		Wait  10`
  358:  		Call  UseBattleCamPreset    ( 00000002 )
  368:  		Call  MoveBattleCamOver     (  20` )
  378:  		Call  ResetAllActorSounds   ( .Actor:Self )
  388:  		Call  SetAnimation  ( .Actor:Self 00000001 00230007 )
  3A0:  		Call  SetActorYaw   ( .Actor:Self  180` )
  3B4:  		Call  AddActorDecoration    ( .Actor:Self 00000001 00000000 .Decoration:Sweat )
  3D0:  		Call  SetGoalToHome ( .Actor:Self )
  3E0:  		Call  SetActorSpeed ( .Actor:Self *Fixed[8.0] )
  3F4:  		Call  FlyToGoal     ( .Actor:Self  0`  1` .Easing:Linear )
  410:  		Call  SetAnimation  ( .Actor:Self 00000001 00230003 )
  428:  		Call  RemoveActorDecoration ( .Actor:Self 00000001 00000000 )
  440:  		Call  SetActorYaw   ( .Actor:Self  0` )
  454:  		Return
  45C:  	EndCaseGroup
  464:  	Default
  46C:  		Wait  10`
  478:  		Call  UseBattleCamPreset    ( 00000042 )
  488:  		Call  8024ECF8      ( FFFFFFFF 00000001 00000000 )
  4A0:  		Call  BattleCamTargetActor  ( .Actor:Self )
  4B0:  		Call  SetActorSounds        ( .Actor:Self .ActorSound:Jump 000020E0 00000000 )
  4CC:  		Call  SetActorSpeed ( .Actor:Self *Fixed[5.0] )
  4E0:  		Call  SetActorJumpGravity   ( .Actor:Self *Fixed[1.8] )
  4F4:  		Call  SetAnimation  ( .Actor:Self 00000001 00230007 )
  50C:  		Call  GetActorPos   ( .Actor:Self *Var0 *Var1 *Var2 )
  528:  		Call  SetGoalPos    ( .Actor:Self *Var0 *Var1 *Var2 )
  544:  		Call  JumpToGoal    ( .Actor:Self  10` .False .True .False )
  564:  		Call  SetActorSounds        ( .Actor:Self .ActorSound:Fly 00000000 00000000 )
  580:  		Call  PlaySoundAtActor      ( .Actor:Self 000002C1 )
  594:  		Call  SetGoalToTarget       ( .Actor:Self )
  5A4:  		Call  SetActorSpeed ( .Actor:Self *Fixed[8.0] )
  5B8:  		Call  SetAnimation  ( .Actor:Self 00000001 00230008 )
  5D0:  		Call  FlyToGoal     ( .Actor:Self  0`  -10` .Easing:Linear )
  5EC:  EndSwitch
  5F4:  Wait  2`
  600:  Call  EnemyDamageTarget ( .Actor:Self *Var0 ~Flags:DamageType:0 00000000 00000000 00000006 00000020 )
  628:  Set   *VarF  *Var0
  638:  Switch  *VarF
  644:  	CaseOR  ==  .HitResult:Hit % 0
  650:  	CaseOR  ==  .HitResult:QuakeImmune % 2
  65C:  	CaseOR  ==  0000000A % A
  668:  		Call  UseBattleCamPreset    ( 00000002 )
  678:  		Call  SetGoalToTarget       ( .Actor:Self )
  688:  		Call  AddGoalPos    ( .Actor:Self  50`  10`  0` )
  6A4:  		Call  SetActorSpeed ( .Actor:Self *Fixed[4.0] )
  6B8:  		Call  SetAnimation  ( .Actor:Self 00000001 00230007 )
  6D0:  		Call  FlyToGoal     ( .Actor:Self  0`  -10` .Easing:Linear )
  6EC:  		Wait  10`
  6F8:  		Call  ResetAllActorSounds   ( .Actor:Self )
  708:  		Call  YieldTurn ( )
  714:  		Call  SetAnimation  ( .Actor:Self 00000001 00230007 )
  72C:  		Call  SetGoalToHome ( .Actor:Self )
  73C:  		Call  SetActorSpeed ( .Actor:Self *Fixed[6.0] )
  750:  		Call  FlyToGoal     ( .Actor:Self  0`  1` .Easing:Linear )
  76C:  		Call  SetAnimation  ( .Actor:Self 00000001 00230003 )
  784:  	EndCaseGroup
  78C:  EndSwitch
  794:  Call  EnableIdleScript  ( .Actor:Self 00000001 )
  7A8:  Call  UseIdleAnimation  ( .Actor:Self .True )
  7BC:  Return
  7C4:  End
}

#new:Script $Script_NextTurn_80229B38
{
    0:  Call  UseIdleAnimation  ( .Actor:Self .False )
   14:  Call  EnableIdleScript  ( .Actor:Self 00000000 )
   28:  Call  GetBattlePhase    ( *Var0 )
   38:  Switch  *Var0
   44:  	Case  ==  0000000A
   50:  		Call  GetActorVar   ( .Actor:Self 00000000 *Var0 )
   68:  		If  *Var0  ==  00000000
   78:  			Call  SetActorVar       ( .Actor:Self 00000000 00000001 )
   90:  			Wait  15`
   9C:  			Call  UseBattleCamPreset    ( 0000000E )
   AC:  			Call  BattleCamTargetActor  ( .Actor:Self )
   BC:  			Call  SetBattleCamOffsetZ   (  35` )
   CC:  			Call  MoveBattleCamOver (  30` )
   DC:  			Wait  20`
   E8:  			Call  ActorSpeak        ( 000700B8 .Actor:Self 00000002 00210005 00210005 ) % Wheeze wheeze wheeze... Here it comes! You... you' ...
  108:  			Wait  10`
  114:  			Call  SetActorFlagBits  ( .Actor:Self 00001000 .True )
  12C:  			Call  8026D940  ( FFFFFF81 FFFFFFEC 00000028 )
  144:  			Call  8027D2D8  ( FFFFFF81 )
  154:  			Call  GetActorPos       ( .Actor:Self *Var0 *Var1 *Var2 )
  170:  			Set   *Var0  00000073
  180:  			Set   *Var1  00000096
  190:  			Call  $Function_802189DC    ( *Var0 *Var1 *VarA )
  1A8:  			Wait  10`
  1B4:  			Call  GetEnemyMaxHP     ( .Actor:Self *Var0 )
  1C8:  			Label  0
  1D4:  			Sub   *Var0  00000001
  1E4:  			Call  SetEnemyHP        ( .Actor:Self *Var0 )
  1F8:  			Wait  1`
  204:  			If  *Var0  >  00000014
  214:  				Goto  0
  220:  			EndIf
  228:  			Call  SetAnimation  ( .Actor:Self 00000002 00210013 )
  240:  			Wait  15`
  24C:  			Loop  00000002
  258:  				Call  SetActorFlagBits  ( .Actor:Self 00001000 .False )
  270:  				Wait  15`
  27C:  				Call  SetActorFlagBits  ( .Actor:Self 00001000 .True )
  294:  				Wait  15`
  2A0:  			EndLoop
  2A8:  			Call  ActorSpeak    ( 000700B9 .Actor:Self 00000002 00210013 00210013 ) % Gasp! Oh, no!! All that swimming! My HP is almost  ...
  2C8:  			Call  SetActorFlagBits  ( .Actor:Self 00001000 .False )
  2E0:  			Call  $Function_80218AA4    ( *VarA )
  2F0:  			Call  8027D32C      ( FFFFFF81 )
  300:  			Call  8026D940      ( FFFFFF81 00000000 00000000 )
  318:  			Call  SetAnimation  ( .Actor:Self 00000002 00210005 )
  330:  			Wait  25`
  33C:  			Call  ActorSpeak    ( 000700BA .Actor:Self 00000002 00210016 00210003 ) % Well, I'll make up for my low HP by using my new s ...
  35C:  			Wait  10`
  368:  			ExecWait  $Script_802281B4
  374:  			Call  SetPartFlagBits   ( .Actor:Self 00000002 00000001 .True )
  390:  			Call  SetPartFlagBits   ( .Actor:Self 00000001 00000001 .False )
  3AC:  			Wait  20`
  3B8:  			Call  SetGoalToHome ( .Actor:Self )
  3C8:  			Call  AddGoalPos    ( .Actor:Self  40`  80`  0` )
  3E4:  			Call  FlyToGoal     ( .Actor:Self  30`  0` .Easing:Linear )
  400:  			Call  GetActorPos   ( .Actor:Self *Var0 *Var1 *Var2 )
  41C:  			Call  ForceHomePos  ( .Actor:Self *Var0 *Var1 *Var2 )
  438:  			Call  HPBarToHome   ( .Actor:Self )
  448:  			Wait  10`
  454:  			Call  ActorSpeak    ( 000700BB .Actor:Self 00000001 0023000F 00230003 ) % I know all of your fighting patterns now, Mario. S ...
  474:  			Wait  10`
  480:  			ExecWait  $Script_80228574
  48C:  		EndIf
  494:  	Case  ==  0000000C
  4A0:  EndSwitch
  4A8:  Call  EnableIdleScript  ( .Actor:Self 00000001 )
  4BC:  Call  UseIdleAnimation  ( .Actor:Self .True )
  4D0:  Return
  4D8:  End
}

#new:Script $Script_8022A018
{
    0:  Call  UseBattleCamPreset    ( 00000002 )
   10:  Call  GetActorPos   ( .Actor:Self *Var0 *Var1 *Var2 )
   2C:  If  *Var1  ==  00000000
   3C:  	Goto  0
   48:  EndIf
   50:  Call  PlaySoundAtActor  ( .Actor:Self 00000301 )
   64:  Call  SetActorSounds    ( .Actor:Self .ActorSound:Jump 00000000 00000000 )
   80:  Call  8027D32C  ( FFFFFF81 )
   90:  Call  SetGoalPos        ( .Actor:Self *Var0  0` *Var2 )
   AC:  Call  SetActorJumpGravity   ( .Actor:Self *Fixed[1.2] )
   C0:  Call  FallToGoal        ( .Actor:Self  10` )
   D4:  Call  SetActorJumpGravity   ( .Actor:Self *Fixed[0.8] )
   E8:  Call  JumpToGoal        ( .Actor:Self  8` .False .True .False )
  108:  Call  HPBarToCurrent    ( .Actor:Self )
  118:  Call  8027D2D8  ( FFFFFF81 )
  128:  Label  0
  134:  Thread
  13C:  	Call  GetActorPos   ( .Actor:Self *Var0 *Var1 *Var2 )
  158:  	Add   *Var1  0000000A
  168:  	Add   *Var2  0000000A
  178:  	Loop  00000003
  184:  		Call  PlayEffect    ( ~FX:BigSmokePuff *Var0 *Var1 *Var2 00000000 00000000 00000000 00000000 00000000 00000000 00000000 00000000 00000000 00000000 )
  1C8:  		Wait  3`
  1D4:  	EndLoop
  1DC:  EndThread
  1E4:  Call  SetPartFlagBits   ( .Actor:Self 00000001 00000001 .True )
  200:  Call  SetPartFlagBits   ( .Actor:Self 00000002 00000001 .False )
  21C:  Call  SetAnimation      ( .Actor:Self 00000002 00210015 )
  234:  Call  GetActorPos       ( .Actor:Self *Var0 *Var1 *Var2 )
  250:  Sub   *Var0  00000005
  260:  Call  SetActorPos       ( .Actor:Self *Var0 *Var1 *Var2 )
  27C:  Wait  15`
  288:  Call  PlaySound ( 000003E5 )
  298:  Call  DropStarPoints    ( .Actor:Self )
  2A8:  Call  SetActorYaw       ( .Actor:Self  0` )
  2BC:  Call  UseBattleCamPreset    ( 0000000E )
  2CC:  Call  SetBattleCamZoom  (  260` )
  2DC:  Call  SetBattleCamOffsetZ   (  15` )
  2EC:  Call  BattleCamTargetActor  ( .Actor:Self )
  2FC:  Call  MoveBattleCamOver (  30` )
  30C:  Call  PlaySoundAtActor  ( .Actor:Self 000020E5 )
  320:  Call  SetAnimation      ( .Actor:Self 00000002 00210014 )
  338:  Call  SetIdleAnimations ( .Actor:Self 00000002 $IdleAnimations_80227F50 )
  350:  Wait  60`
  35C:  Call  SetActorFlagBits  ( .Actor:Self 00400000 .True )
  374:  Return
  37C:  End
}

#new:Script $Script_8022A39C
{
    0:  Call  ResetAllActorSounds   ( .Actor:Self )
   10:  Call  SetAnimation  ( .Actor:Self 00000001 00230007 )
   28:  Call  SetActorSpeed ( .Actor:Self *Fixed[6.0] )
   3C:  Call  SetActorJumpGravity   ( .Actor:Self *Fixed[1.2] )
   50:  Call  SetGoalToHome ( .Actor:Self )
   60:  Call  GetGoalPos    ( .Actor:Self *Var0 *Var1 *Var2 )
   7C:  Call  GetActorPos   ( .Actor:Self *Var3 *Var4 *Var5 )
   98:  Sub   *Var4  *Var1
   A8:  MulF  *Var4  *Fixed[0.3]
   B8:  Call  FlyToGoal     ( .Actor:Self  0` *Var4 .Easing:Linear )
   D4:  Return
   DC:  End
}

#new:Script $Script_8022A480
{
    0:  Call  GetStatusFlags    ( .Actor:Self *Var0 )
   14:  If  *Var0  !&  ~Flags:StatusFlags:Sleep|Frozen|Fear|Paralyze|Dizzy|Stone|Stop % 35D000
   24:  	Call  GetActorVar   ( .Actor:Self 00000002 *Var0 )
   3C:  	If  *Var0  ==  00000001
   4C:  		Call  SetActorVar   ( .Actor:Self 00000002 00000000 )
   64:  		Wait  10`
   70:  		ExecWait  $Script_802284DC
   7C:  		Call  ActorSpeak    ( 001D019A .Actor:Self 00000001 0023000F 00230003 ) % Don't underestimate me, Mario! I'll never be be sc ...
   9C:  		ExecWait  $Script_80228574
   A8:  	EndIf
   B0:  EndIf
   B8:  Return
   C0:  End
}

PADDING: 8022A548 to 8022A550 (00459988 to 00459990)
00000000 00000000

#new:IdleAnimations $IdleAnimations_8022A550
{
	.Status:Normal    00240002
	.Status:Sleep     0024000C
	.Status:Stone     00240000
	.Status:Poison    00240000
	.Status:Stop      00240000
	.Status:Static    00240000
	.Status:Paralyze  00240000
	.Status:Dizzy     0024000D
	.Status:End
}

MISSING: 8022A594 to 8022A5D8 (004599D4 to 00459A18)
00000001 00240002 00000006 00240000 0000000C 00240000 00000009 00240000
00000008 00240000 0000000B 00240000 00000005 00240000 00000004 0024000D
00000000

#new:IdleAnimations $IdleAnimations_8022A5D8
{
	.Status:Normal    00210003
	.Status:Sleep     0021001C
	.Status:Stone     00210000
	.Status:Poison    00210000
	.Status:Stop      00210000
	.Status:Static    00210000
	.Status:Paralyze  00210000
	.Status:Dizzy     0021001D
	.Status:End
}

#new:IdleAnimations $IdleAnimations_8022A61C
{
	.Status:Normal    00210014
	.Status:End
}

#new:DefenseTable $DefenseTable_8022A628
{
	.Element:Normal 00000001
	.Element:End
}

#new:StatusTable $StatusTable_8022A634
{
	.Status:Normal    100`
	.Status:Default   100`
	.Status:Sleep      35`
	.Status:Poison      0`
	.Status:Frozen      0`
	.Status:Dizzy      45`
	.Status:Fear        0`
	.Status:Static      0`
	.Status:Paralyze   45`
	.Status:Shrink     60`
	.Status:Stop       60`
	.Status:DefaultTurnMod    0`
	.Status:SleepTurnMod     -2`
	.Status:PoisonTurnMod     0`
	.Status:FrozenTurnMod     0`
	.Status:DizzyTurnMod     -1`
	.Status:FearTurnMod       0`
	.Status:StaticTurnMod     0`
	.Status:ParalyzeTurnMod  -1`
	.Status:ShrinkTurnMod    -1`
	.Status:StopTurnMod      -2`
	.Status:End
}

#new:PartsTable $PartsTable_8022A6E0
{
	00800001 01000000 001C00FF $IdleAnimations_8022A550 $DefenseTable_8022A628 00000000 00000000 FEF90000 00000000
	00020000 02000000 001E00FF $IdleAnimations_8022A5D8 $DefenseTable_8022A628 00000000 00000000 00000000 00000000
}

#new:Actor $JrTroopa5
{
	% stats
	[Index]        8Cb
	[Level]        65`b
	[MaxHP]        50`b
	[Coins]         0`b
	[Flags]       00000000
	[StatusTable] $StatusTable_8022A634
	% ai
	[PartsCount]    2`s
	[PartsTable]  $PartsTable_8022A6E0
	[Script]      $Script_Init_8022ACE4
	% move effectiveness
	[Escape]        0`b
	[Item]          0`b
	[AirLift]       0`b
	[Hurricane]     0`b % Bow's "Spook" as well
	[UpAndAway]     0`b
	[PowerBounce]  75`b
	[SpinSmash]     0`b % weight (0-4)
	% ui positions
	[Size]         24`b  32`b % width height
	[HealthBar]     0`b   0`b % dx dy
	[StatusTurn]  -20`b  35`b % dx dy
	[StatusIcon]   10`b  25`b % dx dy
}

#new:Script $Script_8022A750
{
    0:  Call  GetStatusFlags    ( .Actor:Self *Var2 )
   14:  If  *Var2  &  ~Flags:StatusFlags:Sleep|Frozen|Fear|Paralyze|Dizzy|Stone|Stop % 35D000
   24:  	Return
   2C:  EndIf
   34:  Call  GetBattleFlags    ( *Var2 )
   44:  If  *Var2  &  00080000
   54:  	Call  GetMenuSelection  ( *Var0 *Var1 *Var2 )
   6C:  	If  *Var2  ==  000000B7
   7C:  		Call  SetActorVar   ( .Actor:Self 00000003 00000001 )
   94:  		Call  PlaySoundAtActor  ( .Actor:Self 00000263 )
   A8:  		Call  GetActorPos   ( .Actor:Self *Var0 *Var1 *Var2 )
   C4:  		Add   *Var1  0000001E
   D4:  		Call  ShowEmote     ( 00000000 .Emote:Question  -45`  30` 00000002 *Var0 *Var1 *Var2  5` )
  104:  		Wait  30`
  110:  	EndIf
  118:  EndIf
  120:  Return
  128:  End
}

#new:Script $Script_8022A880
{
    0:  Call  PlaySoundAtActor  ( .Actor:Self 000020B9 )
   14:  Call  GetActorPos       ( .Actor:Self *Var0 *Var1 *Var2 )
   30:  Call  GetStatusFlags    ( .Actor:Self *Var3 )
   44:  If  *Var3  !&  ~Flags:StatusFlags:Shrink % 80000
   54:  	Add   *Var1  00000010
   64:  Else
   6C:  	Add   *Var1  00000006
   7C:  EndIf
   84:  Call  PlayEffect    ( ~FX:GatherEnergyPink *Var0 *Var1 *Var2 00000001 0000001E 00000000 00000000 00000000 00000000 00000000 00000000 00000000 )
   C8:  Call  PlayEffect    ( 00000013 00000001 *Var0 *Var1 *Var2 00000001 0000001E 00000000 00000000 00000000 00000000 00000000 00000000 00000000 )
  10C:  Thread
  114:  	Set   *Var0  00000000
  124:  	Loop  00000020
  130:  		Wait  1`
  13C:  		Add   *Var0  0000002D
  14C:  		Call  SetActorRotation  ( .Actor:Self 00000000 *Var0 00000000 )
  168:  	EndLoop
  170:  EndThread
  178:  Wait  32`
  184:  Call  PlaySoundAtActor  ( .Actor:Self 00000300 )
  198:  Call  GetActorPos   ( .Actor:Self *Var0 *Var1 *Var2 )
  1B4:  Add   *Var1  0000000F
  1C4:  Call  PlayEffect    ( ~FX:EnergyWaveOut:Grey *Var0 *Var1 *Var2 00000001 00000028 00000000 00000000 00000000 00000000 00000000 00000000 00000000 )
  208:  Call  PlayEffect    ( ~FX:Steam:TinyPuff *Var0 *Var1 *Var2 FFFFFFFC 00000000 00000000 00000000 00000000 00000000 00000000 00000000 00000000 )
  24C:  Call  PlayEffect    ( ~FX:Steam:TinyPuff *Var0 *Var1 *Var2 FFFFFFFC 00000004 00000000 00000000 00000000 00000000 00000000 00000000 00000000 )
  290:  Call  PlayEffect    ( ~FX:Steam:TinyPuff *Var0 *Var1 *Var2 00000004 00000000 00000000 00000000 00000000 00000000 00000000 00000000 00000000 )
  2D4:  Call  PlayEffect    ( ~FX:Steam:TinyPuff *Var0 *Var1 *Var2 00000004 00000004 00000000 00000000 00000000 00000000 00000000 00000000 00000000 )
  318:  Return
  320:  End
}

#new:Script $Script_8022ABA8
{
    0:  Call  GetActorPos   ( .Actor:Self *Var0 *Var1 *Var2 )
   1C:  Call  SetGoalPos    ( .Actor:Self *Var0 *Var1 *Var2 )
   38:  Call  UseBattleCamPreset    ( 00000007 )
   48:  Call  BattleCamTargetActor  ( .Actor:Self )
   58:  Call  SetBattleCamOffsetZ   (  38` )
   68:  Call  SetBattleCamZoom      (  256` )
   78:  Call  MoveBattleCamOver     (  15` )
   88:  Return
   90:  End
}

#new:Script $Script_8022AC40
{
    0:  Call  802535B4  ( 00000001 )
   10:  Call  UseBattleCamPreset    ( 00000002 )
   20:  Call  MoveBattleCamOver     (  12` )
   30:  Return
   38:  End
}

% Origin: HEURISTIC
#new:Script $Script_8022AC80
{
    0:  Call  SetTargetActor        ( .Actor:Self .Actor:Player )
   14:  Call  SetGoalToTarget       ( .Actor:Self )
   24:  Call  UseBattleCamPreset    ( 00000037 )
   34:  Call  MoveBattleCamOver     (  30` )
   44:  Call  BattleCamTargetActor  ( .Actor:Self )
   54:  Return
   5C:  End
}

#new:Script $Script_Init_8022ACE4
{
    0:  Call  BindTakeTurn  ( .Actor:Self $Script_TakeTurn_8022B4F0 )
   14:  Call  BindIdle      ( .Actor:Self $Script_Idle_8022ADA4 )
   28:  Call  BindHandleEvent   ( .Actor:Self $Script_HandleEvent_8022ADD8 )
   3C:  Call  BindNextTurn  ( .Actor:Self $Script_NextTurn_8022BB44 )
   50:  Call  SetActorVar   ( .Actor:Self 00000000 00000000 )
   68:  Call  SetActorVar   ( .Actor:Self 00000001 00000000 )
   80:  Call  SetActorVar   ( .Actor:Self 00000002 00000000 )
   98:  Call  SetActorVar   ( .Actor:Self 00000003 00000000 )
   B0:  Return
   B8:  End
}

#new:Script $Script_Idle_8022ADA4
{
    0:  Label  0
    C:  Wait  1`
   18:  Goto  0
   24:  Return
   2C:  End
}

#new:Script $Script_HandleEvent_8022ADD8
{
    0:  Call  UseIdleAnimation  ( .Actor:Self .False )
   14:  Call  EnableIdleScript  ( .Actor:Self 00000000 )
   28:  Call  GetLastEvent      ( .Actor:Self *Var0 )
   3C:  Switch  *Var0
   48:  	Case  ==  .Event:HitCombo % 9
   54:  		SetConst  *Var0  00000001
   64:  		SetConst  *Var1  00240009
   74:  		ExecWait  DoNormalHit
   80:  	Case  ==  .Event:Hit % A
   8C:  		SetConst  *Var0  00000001
   9C:  		SetConst  *Var1  00240009
   AC:  		ExecWait  DoNormalHit
   B8:  		ExecWait  $Script_8022A750
   C4:  		ExecWait  $Script_8022C2A4
   D0:  	Case  ==  .Event:Death % 20
   DC:  		SetConst  *Var0  00000001
   EC:  		SetConst  *Var1  00240009
   FC:  		ExecWait  DoNormalHit
  108:  		Wait  10`
  114:  		SetConst  *Var0  00000001
  124:  		SetConst  *Var1  00240000
  134:  		ExecWait  $Script_8022BF1C
  140:  		Return
  148:  	Case  ==  .Event:BurnHit % E
  154:  		Set   *Var0  00000001
  164:  		Set   *Var1  0024000A
  174:  		Set   *Var2  0024000B
  184:  		ExecWait  DoBurnHit
  190:  	Case  ==  .Event:BurnDeath % 24
  19C:  		Set   *Var0  00000001
  1AC:  		Set   *Var1  0024000A
  1BC:  		Set   *Var2  0024000B
  1CC:  		ExecWait  DoBurnHit
  1D8:  		Wait  10`
  1E4:  		SetConst  *Var0  00000001
  1F4:  		SetConst  *Var1  0024000B
  204:  		ExecWait  $Script_8022BF1C
  210:  		Return
  218:  	Case  ==  .Event:SpinSmashHit % B
  224:  		SetConst  *Var0  00000001
  234:  		SetConst  *Var1  00240009
  244:  		ExecWait  DoSpinSmashHit
  250:  	Case  ==  .Event:SpinSmashDeath % 21
  25C:  		SetConst  *Var0  00000001
  26C:  		SetConst  *Var1  00240009
  27C:  		ExecWait  DoSpinSmashHit
  288:  		SetConst  *Var0  00000001
  298:  		SetConst  *Var1  00240009
  2A8:  		ExecWait  $Script_8022BF1C
  2B4:  		Return
  2BC:  	Case  ==  .Event:ShockHit % 2F
  2C8:  		SetConst  *Var0  00000001
  2D8:  		SetConst  *Var1  00240009
  2E8:  		ExecWait  DoShockHit
  2F4:  		SetConst  *Var0  00000001
  304:  		SetConst  *Var1  00240009
  314:  		ExecWait  DoJumpBack
  320:  		Call  JumpToGoal    ( .Actor:Self  5` .False .True .False )
  340:  		Call  ResetAllActorSounds   ( .Actor:Self )
  350:  		SetConst  *Var0  00000001
  360:  		SetConst  *Var1  00240005
  370:  		ExecWait  DoReturnHome
  37C:  		Call  SetActorJumpGravity   ( .Actor:Self *Fixed[1.6] )
  390:  		Call  JumpToGoal    ( .Actor:Self  5` .False .True .False )
  3B0:  	Case  ==  .Event:ShockDeath % 26
  3BC:  		SetConst  *Var0  00000001
  3CC:  		SetConst  *Var1  00240009
  3DC:  		ExecWait  DoShockHit
  3E8:  		SetConst  *Var0  00000001
  3F8:  		SetConst  *Var1  00240009
  408:  		ExecWait  DoJumpBack
  414:  		SetConst  *Var0  00000001
  424:  		SetConst  *Var1  00240000
  434:  		ExecWait  $Script_8022BF1C
  440:  		Return
  448:  	CaseOR  ==  00000017 % 17
  454:  	CaseOR  ==  .Event:Immune % 19
  460:  		SetConst  *Var0  00000001
  470:  		SetConst  *Var1  00240002
  480:  		ExecWait  DoImmune
  48C:  		ExecWait  $Script_8022A750
  498:  		ExecWait  $Script_8022C2A4
  4A4:  	EndCaseGroup
  4AC:  	Case  ==  .Event:BeginAirLift % 3A
  4B8:  		Call  GetStatusFlags    ( .Actor:Self *Var0 )
  4CC:  		If  *Var0  !&  ~Flags:StatusFlags:Sleep|Frozen|Fear|Paralyze|Dizzy|Stone|Stop % 35D000
  4DC:  			Call  SetAnimation  ( .Actor:Self 00000001 0024000F )
  4F4:  			Wait  1000`
  500:  		EndIf
  508:  	Case  ==  .Event:AirLiftFailed % 1F
  514:  		Call  GetStatusFlags    ( .Actor:Self *Var0 )
  528:  		If  *Var0  !&  ~Flags:StatusFlags:Sleep|Frozen|Fear|Paralyze|Dizzy|Stone|Stop % 35D000
  538:  			Call  SetAnimation  ( .Actor:Self 00000001 0024000F )
  550:  			Wait  20`
  55C:  			ExecWait  $Script_8022ABA8
  568:  			Call  ActorSpeak    ( 001D019B .Actor:Self 00000001 0024000E 00240003 ) % Hey, Mario!! Don't even think of trying to beat me ...
  588:  			Call  SetAnimation  ( .Actor:Self 00000001 00240002 )
  5A0:  			ExecWait  $Script_8022AC40
  5AC:  		EndIf
  5B4:  	Case  ==  .Event:SpikeContact % 2A
  5C0:  		Call  SetAnimation  ( .Actor:Self 00000001 00240009 )
  5D8:  		Wait  20`
  5E4:  		Call  SetAnimation  ( .Actor:Self 00000001 00240005 )
  5FC:  		Call  SetGoalToHome ( .Actor:Self )
  60C:  		Call  SetActorSpeed ( .Actor:Self *Fixed[6.0] )
  620:  		Call  RunToGoal     ( .Actor:Self  0` .False )
  638:  		Call  SetAnimation  ( .Actor:Self 00000001 00240002 )
  650:  	Case  ==  .Event:EndFirstStrike % 35
  65C:  		SetConst  *Var0  00000001
  66C:  		SetConst  *Var1  00240002
  67C:  		ExecWait  DoReturnHome
  688:  		Call  HPBarToHome   ( .Actor:Self )
  698:  	Case  ==  .Event:RecoverStatus % 31
  6A4:  		SetConst  *Var0  00000001
  6B4:  		SetConst  *Var1  00240002
  6C4:  		ExecWait  DoRecover
  6D0:  	Default
  6D8:  EndSwitch
  6E0:  Call  EnableIdleScript  ( .Actor:Self 00000001 )
  6F4:  Call  UseIdleAnimation  ( .Actor:Self .True )
  708:  Return
  710:  End
}

#new:Script $Script_TakeTurn_8022B4F0
{
    0:  Call  UseIdleAnimation  ( .Actor:Self .False )
   14:  Call  EnableIdleScript  ( .Actor:Self 00000000 )
   28:  Call  SetTargetActor    ( .Actor:Self .Actor:Player )
   3C:  Call  SetGoalToTarget   ( .Actor:Self )
   4C:  Call  SetAnimation      ( .Actor:Self 00000001 00240006 )
   64:  Wait  8`
   70:  Call  PlaySoundAtActor  ( .Actor:Self .Sound:SpellCast1 )
   84:  Call  GetStatusFlags    ( .Actor:Self *Var0 )
   98:  If  *Var0  !&  ~Flags:StatusFlags:Shrink % 80000
   A8:  	Set   *Var3  00000000
   B8:  	Set   *Var4  00000024
   C8:  	SetF  *Var5  *Fixed[1.0]
   D8:  Else
   E0:  	Set   *Var3  00000000
   F0:  	Set   *Var4  0000000E
  100:  	SetF  *Var5  *Fixed[0.4]
  110:  EndIf
  118:  Call  GetActorPos       ( .Actor:Self *Var0 *Var1 *Var2 )
  134:  Add   *Var0  *Var3
  144:  Add   *Var1  *Var4
  154:  Call  PlayEffect        ( ~FX:GatherEnergyPink *Var0 *Var1 *Var2 *Var5 0000001E 00000000 00000000 00000000 00000000 00000000 00000000 00000000 )
  198:  Wait  30`
  1A4:  Call  SetAnimation      ( .Actor:Self 00000001 00240007 )
  1BC:  Call  UseBattleCamPreset    ( 00000002 )
  1CC:  Call  EnemyTestTarget   ( .Actor:Self *VarA ~Flags:DamageType:NoContact 00000000 00000001 00000010 )
  1F0:  Switch  *VarA
  1FC:  	CaseOR  ==  .HitResult:Miss % 6
  208:  	CaseOR  ==  .HitResult:Lucky % 5
  214:  		Call  PlaySoundAtActor  ( .Actor:Self .Sound:SpellCast2 )
  228:  		Call  GetActorPos       ( .Actor:Player *Var3 *Var4 *Var5 )
  244:  		Sub   *Var3  00000078
  254:  		Add   *Var4  00000014
  264:  		Call  GetStatusFlags    ( .Actor:Self *Var0 )
  278:  		If  *Var0  !&  ~Flags:StatusFlags:Shrink % 80000
  288:  			Set   *Var6  FFFFFFF8
  298:  			Set   *Var7  00000014
  2A8:  			SetF  *Var8  *Fixed[1.0]
  2B8:  		Else
  2C0:  			Set   *Var6  FFFFFFFD
  2D0:  			Set   *Var7  00000008
  2E0:  			SetF  *Var8  *Fixed[0.4]
  2F0:  		EndIf
  2F8:  		Call  GetActorPos   ( .Actor:Self *Var0 *Var1 *Var2 )
  314:  		Add   *Var0  *Var6
  324:  		Add   *Var1  *Var7
  334:  		Call  PlayEffect    ( ~FX:ShapeSpell:Projectile *Var0 *Var1 *Var2 *Var3 *Var4 *Var5 0000001E 00000000 00000000 00000000 00000000 00000000 )
  378:  		Wait  35`
  384:  		If  *VarA  ==  .HitResult:Lucky % 5
  394:  			Call  EnemyTestTarget   ( .Actor:Self *Var0 ~Flags:DamageType:TriggerLucky 00000000 00000000 00000000 )
  3B8:  		EndIf
  3C0:  		Call  EnableIdleScript  ( .Actor:Self 00000001 )
  3D4:  		Call  UseIdleAnimation  ( .Actor:Self .True )
  3E8:  		Return
  3F0:  	EndCaseGroup
  3F8:  EndSwitch
  400:  Call  PlaySoundAtActor  ( .Actor:Self .Sound:SpellCast2 )
  414:  Call  GetActorPos       ( .Actor:Player *Var3 *Var4 *Var5 )
  430:  Add   *Var4  00000014
  440:  Call  GetStatusFlags    ( .Actor:Self *Var0 )
  454:  If  *Var0  !&  ~Flags:StatusFlags:Shrink % 80000
  464:  	Set   *Var6  FFFFFFF8
  474:  	Set   *Var7  00000014
  484:  	SetF  *Var8  *Fixed[1.0]
  494:  Else
  49C:  	Set   *Var6  FFFFFFFD
  4AC:  	Set   *Var7  00000008
  4BC:  	SetF  *Var8  *Fixed[0.4]
  4CC:  EndIf
  4D4:  Call  GetActorPos       ( .Actor:Self *Var0 *Var1 *Var2 )
  4F0:  Add   *Var0  *Var6
  500:  Add   *Var1  *Var7
  510:  Call  PlayEffect        ( ~FX:ShapeSpell:Projectile *Var0 *Var1 *Var2 *Var3 *Var4 *Var5 0000000F 00000000 00000000 00000000 00000000 00000000 )
  554:  Wait  15`
  560:  Call  EnemyDamageTarget ( .Actor:Self *Var0 ~Flags:DamageType:NoContact|Magic 00000000 00000000 00000008 00000020 )
  588:  Switch  *Var0
  594:  	Case  ==  .HitResult:Hit % 0
  5A0:  		Call  GetActorVar   ( .Actor:Self 00000001 *Var0 )
  5B8:  		If  *Var0  ==  00000000
  5C8:  			Call  GetLastDamage ( .Actor:Player *Var1 )
  5DC:  			If  *Var1  !=  00000000
  5EC:  				Call  SetActorVar   ( .Actor:Self 00000001 00000001 )
  604:  			EndIf
  60C:  		EndIf
  614:  EndSwitch
  61C:  Call  EnableIdleScript  ( .Actor:Self 00000001 )
  630:  Call  UseIdleAnimation  ( .Actor:Self .True )
  644:  Return
  64C:  End
}

#new:Script $Script_NextTurn_8022BB44
{
    0:  Call  UseIdleAnimation  ( .Actor:Self .False )
   14:  Call  EnableIdleScript  ( .Actor:Self 00000000 )
   28:  Call  GetBattlePhase    ( *Var0 )
   38:  Switch  *Var0
   44:  	Case  ==  0000000C
   50:  		Call  GetActorVar   ( .Actor:Self 00000000 *Var0 )
   68:  		If  *Var0  ==  00000001
   78:  			Call  GetStatusFlags    ( .Actor:Self *Var1 )
   8C:  			If  *Var1  !&  ~Flags:StatusFlags:Sleep|Frozen|Fear|Paralyze|Dizzy|Stone|Stop % 35D000
   9C:  				Call  SetActorVar   ( .Actor:Self 00000000 00000002 )
   B4:  				Call  GetActorVar   ( .Actor:Self 00000003 *Var0 )
   CC:  				If  *Var0  ==  00000000
   DC:  					ExecWait  $Script_8022ABA8
   E8:  					Wait  20`
   F4:  				EndIf
   FC:  				Call  ActorSpeak    ( 001200DD .Actor:Self 00000001 0024000E 00240003 ) % Mario! You like magic tricks? You won't like this  ...
  11C:  				Call  SetAnimation  ( .Actor:Self 00000001 00240002 )
  134:  				ExecWait  $Script_8022AC40
  140:  				Wait  20`
  14C:  			EndIf
  154:  		Else
  15C:  			Wait  20`
  168:  		EndIf
  170:  		Call  SetActorVar   ( .Actor:Self 00000003 00000000 )
  188:  		Return
  190:  	Case  ==  0000000B
  19C:  		Call  GetActorVar   ( .Actor:Self 00000001 *Var0 )
  1B4:  		If  *Var0  ==  00000001
  1C4:  			Call  SetActorVar   ( .Actor:Self 00000001 00000002 )
  1DC:  			ExecWait  $Script_8022ABA8
  1E8:  			Wait  20`
  1F4:  			Call  ActorSpeak    ( 001200DE .Actor:Self 00000001 0024000E 00240003 ) % Ha ha ha ha!! That felt fantastic! I just keep on  ...
  214:  			Call  SetAnimation  ( .Actor:Self 00000001 00240002 )
  22C:  			ExecWait  $Script_8022AC40
  238:  			Wait  10`
  244:  		EndIf
  24C:  		Return
  254:  	Case  ==  0000000A
  260:  		Call  GetActorVar   ( .Actor:Self 00000000 *Var0 )
  278:  		If  *Var0  ==  00000000
  288:  			Call  SetActorVar   ( .Actor:Self 00000000 00000001 )
  2A0:  			Wait  15`
  2AC:  			ExecWait  $Script_8022ABA8
  2B8:  			Wait  10`
  2C4:  			Call  ActorSpeak    ( 001200DB .Actor:Self 00000002 0021001A 0021001B ) % Oh, I've been busy, Mario! I learned cooool techni ...
  2E4:  			Wait  8`
  2F0:  			ExecWait  $Script_8022A880
  2FC:  			Call  SetPartFlagBits   ( .Actor:Self 00000002 00000001 .True )
  318:  			Call  SetPartFlagBits   ( .Actor:Self 00000001 00000001 .False )
  334:  			Wait  15`
  340:  			Call  ActorSpeak    ( 001200DC .Actor:Self 00000001 0024000E 00240003 ) % Look at that piece of work! I've been taking a lit ...
  360:  			Call  SetAnimation  ( .Actor:Self 00000001 00240002 )
  378:  			Wait  10`
  384:  			ExecWait  $Script_8022AC40
  390:  		EndIf
  398:  EndSwitch
  3A0:  Call  EnableIdleScript  ( .Actor:Self 00000001 )
  3B4:  Call  UseIdleAnimation  ( .Actor:Self .True )
  3C8:  Return
  3D0:  End
}

#new:Script $Script_8022BF1C
{
    0:  Call  8027D32C  ( FFFFFF81 )
   10:  Call  UseIdleAnimation  ( .Actor:Self .False )
   24:  Call  80269E80  ( *Var5 )
   34:  Switch  *Var5
   40:  	CaseOR  ==  0000000A
   4C:  	CaseOR  ==  0000000E
   58:  	CaseOR  ==  0000000C
   64:  	CaseOR  ==  00000010
   70:  	CaseOR  ==  0000000B
   7C:  	CaseOR  ==  0000000F
   88:  	CaseOR  ==  0000000D
   94:  	CaseOR  ==  00000011
   A0:  	CaseOR  ==  00000002
   AC:  	EndCaseGroup
   B4:  	Default
   BC:  		Set   *Var2  00000000
   CC:  		Loop  00000018
   D8:  			Call  SetActorYaw   ( .Actor:Self *Var2 )
   EC:  			Add   *Var2  0000001E
   FC:  			Wait  1`
  108:  		EndLoop
  110:  		Call  SetActorYaw   ( .Actor:Self  0` )
  124:  EndSwitch
  12C:  Label  0
  138:  Thread
  140:  	Call  GetActorPos   ( .Actor:Self *Var0 *Var1 *Var2 )
  15C:  	Add   *Var1  0000000A
  16C:  	Add   *Var2  0000000A
  17C:  	Loop  00000003
  188:  		Call  PlayEffect    ( ~FX:BigSmokePuff *Var0 *Var1 *Var2 00000000 00000000 00000000 00000000 00000000 00000000 00000000 00000000 00000000 00000000 )
  1CC:  		Wait  3`
  1D8:  	EndLoop
  1E0:  EndThread
  1E8:  Call  SetPartFlagBits   ( .Actor:Self 00000001 00000001 .True )
  204:  Call  SetPartFlagBits   ( .Actor:Self 00000002 00000001 .False )
  220:  Call  SetAnimation      ( .Actor:Self 00000002 00210015 )
  238:  Call  GetActorPos       ( .Actor:Self *Var0 *Var1 *Var2 )
  254:  Sub   *Var0  00000005
  264:  Call  SetActorPos       ( .Actor:Self *Var0 *Var1 *Var2 )
  280:  Wait  15`
  28C:  Call  PlaySound ( 000003E5 )
  29C:  Call  DropStarPoints    ( .Actor:Self )
  2AC:  Call  SetActorYaw       ( .Actor:Self  0` )
  2C0:  Call  UseBattleCamPreset    ( 0000000E )
  2D0:  Call  SetBattleCamZoom  (  260` )
  2E0:  Call  SetBattleCamOffsetZ   (  15` )
  2F0:  Call  BattleCamTargetActor  ( .Actor:Self )
  300:  Call  MoveBattleCamOver (  30` )
  310:  Call  PlaySoundAtActor  ( .Actor:Self 000020E5 )
  324:  Call  SetAnimation      ( .Actor:Self 00000002 00210014 )
  33C:  Call  SetIdleAnimations ( .Actor:Self 00000002 $IdleAnimations_8022A61C )
  354:  Wait  60`
  360:  Call  SetActorFlagBits  ( .Actor:Self 00400000 .True )
  378:  Return
  380:  End
}

#new:Script $Script_8022C2A4
{
    0:  Call  GetActorVar   ( .Actor:Self 00000003 *Var0 )
   18:  If  *Var0  ==  00000001
   28:  	Wait  10`
   34:  	ExecWait  $Script_8022ABA8
   40:  	Call  ActorSpeak    ( 001D019A .Actor:Self 00000001 0024000E 00240003 ) % Don't underestimate me, Mario! I'll never be be sc ...
   60:  	Call  SetAnimation  ( .Actor:Self 00000001 00240002 )
   78:  	Call  GetActorVar   ( .Actor:Self 00000000 *Var0 )
   90:  	If  *Var0  !=  00000001
   A0:  		ExecWait  $Script_8022AC40
   AC:  	EndIf
   B4:  EndIf
   BC:  Return
   C4:  End
}

#new:IdleAnimations $IdleAnimations_8022C370
{
	.Status:Normal    00210003
	.Status:Sleep     0021001C
	.Status:Stone     00210000
	.Status:Stop      00210000
	.Status:Paralyze  00210000
	.Status:Dizzy     0021001D
	.Status:End
}

#new:IdleAnimations $IdleAnimations_8022C3A4
{
	.Status:Normal    00230003
	.Status:Sleep     0023000D
	.Status:Stone     00230000
	.Status:Stop      00230000
	.Status:Paralyze  00230000
	.Status:Dizzy     0023000E
	.Status:End
}

#new:IdleAnimations $IdleAnimations_8022C3D8
{
	.Status:Normal    00240002
	.Status:Sleep     0024000C
	.Status:Stone     00240000
	.Status:Stop      00240000
	.Status:Paralyze  00240000
	.Status:Dizzy     0024000D
	.Status:End
}

#new:IdleAnimations $IdleAnimations_8022C40C
{
	.Status:Normal    00210014
	.Status:End
}

#new:DefenseTable $DefenseTable_8022C418
{
	.Element:Normal 00000002
	.Element:End
}

#new:DefenseTable $DefenseTable_8022C424
{
	.Element:Normal 00000002
	.Element:End
}

#new:DefenseTable $DefenseTable_8022C430
{
	.Element:Normal 00000002
	.Element:End
}

#new:StatusTable $StatusTable_8022C43C
{
	.Status:Normal    100`
	.Status:Default   100`
	.Status:Sleep      30`
	.Status:Poison      0`
	.Status:Frozen      0`
	.Status:Dizzy      40`
	.Status:Fear        0`
	.Status:Static      0`
	.Status:Paralyze   40`
	.Status:Shrink     60`
	.Status:Stop       60`
	.Status:DefaultTurnMod    0`
	.Status:SleepTurnMod     -2`
	.Status:PoisonTurnMod     0`
	.Status:FrozenTurnMod     0`
	.Status:DizzyTurnMod     -2`
	.Status:FearTurnMod       0`
	.Status:StaticTurnMod     0`
	.Status:ParalyzeTurnMod  -1`
	.Status:ShrinkTurnMod    -1`
	.Status:StopTurnMod      -2`
	.Status:End
}

#new:StatusTable $StatusTable_8022C4E8
{
	.Status:Normal    100`
	.Status:Default   100`
	.Status:Sleep      30`
	.Status:Poison      0`
	.Status:Frozen      0`
	.Status:Dizzy      90`
	.Status:Fear        0`
	.Status:Static      0`
	.Status:Paralyze   40`
	.Status:Shrink     50`
	.Status:Stop       50`
	.Status:DefaultTurnMod    0`
	.Status:SleepTurnMod     -2`
	.Status:PoisonTurnMod     0`
	.Status:FrozenTurnMod     0`
	.Status:DizzyTurnMod     -1`
	.Status:FearTurnMod       0`
	.Status:StaticTurnMod     0`
	.Status:ParalyzeTurnMod  -1`
	.Status:ShrinkTurnMod    -1`
	.Status:StopTurnMod      -2`
	.Status:End
}

#new:StatusTable $StatusTable_8022C594
{
	.Status:Normal    100`
	.Status:Default   100`
	.Status:Sleep      30`
	.Status:Poison      0`
	.Status:Frozen      0`
	.Status:Dizzy      40`
	.Status:Fear        0`
	.Status:Static      0`
	.Status:Paralyze   40`
	.Status:Shrink     50`
	.Status:Stop       50`
	.Status:DefaultTurnMod    0`
	.Status:SleepTurnMod     -2`
	.Status:PoisonTurnMod     0`
	.Status:FrozenTurnMod     0`
	.Status:DizzyTurnMod     -2`
	.Status:FearTurnMod       0`
	.Status:StaticTurnMod     0`
	.Status:ParalyzeTurnMod  -1`
	.Status:ShrinkTurnMod    -1`
	.Status:StopTurnMod      -2`
	.Status:End
}

#new:PartsTable $PartsTable_8022C640
{
	00800000 01000000 001A00FF $IdleAnimations_8022C370 $DefenseTable_8022C418 00000000 00000000 FEFA0000 00000000
	00020001 02000000 FB2000FF $IdleAnimations_8022C3A4 $DefenseTable_8022C424 00000010 00000000 00F50000 00000000
	00020001 03000000 001C00FF $IdleAnimations_8022C3D8 $DefenseTable_8022C430 00000000 00000000 FEF90000 00000000
}

#new:Actor $JrTroopa6
{
	% stats
	[Index]        8Db
	[Level]        74`b
	[MaxHP]        60`b
	[Coins]         0`b
	[Flags]       00000000
	[StatusTable] $StatusTable_8022C43C
	% ai
	[PartsCount]    3`s
	[PartsTable]  $PartsTable_8022C640
	[Script]      $Script_Init_8022CF80
	% move effectiveness
	[Escape]        0`b
	[Item]          0`b
	[AirLift]       0`b
	[Hurricane]     0`b % Bow's "Spook" as well
	[UpAndAway]     0`b
	[PowerBounce]  70`b
	[SpinSmash]     0`b % weight (0-4)
	% ui positions
	[Size]         24`b  32`b % width height
	[HealthBar]     0`b   0`b % dx dy
	[StatusTurn]  -20`b  35`b % dx dy
	[StatusIcon]   10`b  25`b % dx dy
}

#new:Script $Script_8022C6D4
{
    0:  Call  GetStatusFlags    ( .Actor:Self *Var2 )
   14:  If  *Var2  &  ~Flags:StatusFlags:Sleep|Frozen|Fear|Paralyze|Dizzy|Stone|Stop % 35D000
   24:  	Return
   2C:  EndIf
   34:  Call  GetBattleFlags    ( *Var2 )
   44:  If  *Var2  &  00080000
   54:  	Call  GetMenuSelection  ( *Var0 *Var1 *Var2 )
   6C:  	If  *Var2  ==  000000B7
   7C:  		Call  SetActorVar   ( .Actor:Self 00000001 00000001 )
   94:  		Call  PlaySoundAtActor  ( .Actor:Self 00000263 )
   A8:  		Call  GetActorPos   ( .Actor:Self *Var0 *Var1 *Var2 )
   C4:  		Add   *Var1  0000001E
   D4:  		Call  ShowEmote     ( 00000000 .Emote:Question  -45`  30` 00000002 *Var0 *Var1 *Var2  5` )
  104:  		Wait  30`
  110:  	EndIf
  118:  EndIf
  120:  Return
  128:  End
}

#new:Script $Script_8022C804
{
    0:  Call  PlaySoundAtActor  ( .Actor:Self 000020B9 )
   14:  Call  GetActorPos       ( .Actor:Self *Var0 *Var1 *Var2 )
   30:  Call  GetStatusFlags    ( .Actor:Self *Var3 )
   44:  If  *Var3  !&  ~Flags:StatusFlags:Shrink % 80000
   54:  	Add   *Var1  00000010
   64:  Else
   6C:  	Add   *Var1  00000006
   7C:  EndIf
   84:  Call  PlayEffect    ( ~FX:GatherEnergyPink *Var0 *Var1 *Var2 00000001 0000001E 00000000 00000000 00000000 00000000 00000000 00000000 00000000 )
   C8:  Call  PlayEffect    ( 00000013 00000001 *Var0 *Var1 *Var2 00000001 0000001E 00000000 00000000 00000000 00000000 00000000 00000000 00000000 )
  10C:  Thread
  114:  	Set   *Var0  00000000
  124:  	Loop  00000020
  130:  		Wait  1`
  13C:  		Add   *Var0  0000002D
  14C:  		Call  SetActorRotation  ( .Actor:Self 00000000 *Var0 00000000 )
  168:  	EndLoop
  170:  EndThread
  178:  Wait  32`
  184:  Call  PlaySoundAtActor  ( .Actor:Self 00000300 )
  198:  Call  GetActorPos   ( .Actor:Self *Var0 *Var1 *Var2 )
  1B4:  Add   *Var1  0000000F
  1C4:  Call  PlayEffect    ( ~FX:EnergyWaveOut:Grey *Var0 *Var1 *Var2 00000001 00000028 00000000 00000000 00000000 00000000 00000000 00000000 00000000 )
  208:  Call  PlayEffect    ( ~FX:Steam:TinyPuff *Var0 *Var1 *Var2 FFFFFFFC 00000000 00000000 00000000 00000000 00000000 00000000 00000000 00000000 )
  24C:  Call  PlayEffect    ( ~FX:Steam:TinyPuff *Var0 *Var1 *Var2 FFFFFFFC 00000004 00000000 00000000 00000000 00000000 00000000 00000000 00000000 )
  290:  Call  PlayEffect    ( ~FX:Steam:TinyPuff *Var0 *Var1 *Var2 00000004 00000000 00000000 00000000 00000000 00000000 00000000 00000000 00000000 )
  2D4:  Call  PlayEffect    ( ~FX:Steam:TinyPuff *Var0 *Var1 *Var2 00000004 00000004 00000000 00000000 00000000 00000000 00000000 00000000 00000000 )
  318:  Return
  320:  End
}

#new:Script $Script_8022CB2C
{
    0:  Call  GetActorPos   ( .Actor:Self *Var0 *Var1 *Var2 )
   1C:  Call  SetGoalPos    ( .Actor:Self *Var0 *Var1 *Var2 )
   38:  Call  UseBattleCamPreset    ( 00000007 )
   48:  Call  BattleCamTargetActor  ( .Actor:Self )
   58:  Call  SetBattleCamOffsetZ   (  38` )
   68:  Call  SetBattleCamZoom      (  256` )
   78:  Call  MoveBattleCamOver     (  15` )
   88:  Return
   90:  End
}

#new:Script $Script_8022CBC4
{
    0:  Call  802535B4  ( 00000001 )
   10:  Call  UseBattleCamPreset    ( 00000002 )
   20:  Call  MoveBattleCamOver     (  12` )
   30:  Return
   38:  End
}

% Origin: HEURISTIC
#new:Script $Script_8022CC04
{
    0:  Call  SetTargetActor        ( .Actor:Self .Actor:Player )
   14:  Call  SetGoalToTarget       ( .Actor:Self )
   24:  Call  UseBattleCamPreset    ( 00000037 )
   34:  Call  MoveBattleCamOver     (  30` )
   44:  Call  BattleCamTargetActor  ( .Actor:Self )
   54:  Return
   5C:  End
}

#new:IdleAnimations $IdleAnimations_8022CC68
{
	.Status:Normal    00210014
	.Status:End
}

#new:Script $Script_8022CC74
{
    0:  Set   *VarA  *Var0
   10:  Call  8027D32C      ( FFFFFF81 )
   20:  Call  UseIdleAnimation  ( .Actor:Self .False )
   34:  Call  SetAnimation  ( .Actor:Self *VarA *Var1 )
   4C:  Wait  10`
   58:  Call  80269E80      ( *Var5 )
   68:  Switch  *Var5
   74:  	CaseOR  ==  0000000A
   80:  	CaseOR  ==  0000000E
   8C:  	CaseOR  ==  0000000C
   98:  	CaseOR  ==  00000010
   A4:  	CaseOR  ==  0000000B
   B0:  	CaseOR  ==  0000000F
   BC:  	CaseOR  ==  0000000D
   C8:  	CaseOR  ==  00000011
   D4:  	CaseOR  ==  00000002
   E0:  	EndCaseGroup
   E8:  	Default
   F0:  		Set   *Var2  00000000
  100:  		Loop  00000018
  10C:  			Call  SetActorYaw   ( .Actor:Self *Var2 )
  120:  			Add   *Var2  0000001E
  130:  			Wait  1`
  13C:  		EndLoop
  144:  		Call  SetActorYaw   ( .Actor:Self  0` )
  158:  EndSwitch
  160:  Label  0
  16C:  Call  GetActorPos       ( .Actor:Self *Var0 *Var1 *Var2 )
  188:  Add   *Var1  0000000A
  198:  Add   *Var2  0000000A
  1A8:  Call  PlayEffect        ( ~FX:BigSmokePuff *Var0 *Var1 *Var2 00000000 00000000 00000000 00000000 00000000 00000000 00000000 00000000 00000000 00000000 )
  1EC:  Call  PlaySound ( 000003E5 )
  1FC:  Call  DropStarPoints    ( .Actor:Self )
  20C:  Call  SetActorYaw       ( .Actor:Self  0` )
  220:  Call  UseBattleCamPreset    ( 0000000E )
  230:  Call  SetBattleCamZoom  (  260` )
  240:  Call  SetBattleCamOffsetZ   (  15` )
  250:  Call  BattleCamTargetActor  ( .Actor:Self )
  260:  Call  MoveBattleCamOver (  30` )
  270:  Call  PlaySoundAtActor  ( .Actor:Self 000020E5 )
  284:  Call  SetAnimation      ( .Actor:Self *VarA 00210027 )
  29C:  Wait  12`
  2A8:  Call  SetAnimation      ( .Actor:Self *VarA 00210014 )
  2C0:  Call  SetIdleAnimations ( .Actor:Self *VarA $IdleAnimations_8022CC68 )
  2D8:  Wait  60`
  2E4:  Call  SetActorFlagBits  ( .Actor:Self 00400000 .True )
  2FC:  Return
  304:  End
}

#new:Script $Script_Init_8022CF80
{
    0:  Call  SetActorVar   ( .Actor:Self 00000000 00000000 )
   18:  Call  SetActorVar   ( .Actor:Self 00000002 00000000 )
   30:  Call  SetActorVar   ( .Actor:Self 00000001 00000000 )
   48:  Call  SetActorVar   ( .Actor:Self 00000003 00000001 )
   60:  Call  SetActorVar   ( .Actor:Self 00000004 00000005 )
   78:  Call  BindTakeTurn  ( .Actor:Self $Script_TakeTurn_8022D920 )
   8C:  Call  BindIdle      ( .Actor:Self $Script_Idle_8022D058 )
   A0:  Call  BindHandleEvent   ( .Actor:Self $Script_HandleEvent_8022D1C4 )
   B4:  Call  BindNextTurn  ( .Actor:Self $Script_NextTurn_8023147C )
   C8:  Return
   D0:  End
}

#new:Script $Script_Idle_8022D058
{
    0:  Label  0
    C:  Call  GetActorVar   ( .Actor:Self 00000003 *Var0 )
   24:  Switch  *Var0
   30:  	Case  ==  00000002
   3C:  		Call  GetStatusFlags    ( .Actor:Self *VarA )
   50:  		If  *VarA  &  ~Flags:StatusFlags:Sleep|Dizzy % 41000
   60:  			Call  SetTargetOffset       ( .Actor:Self 00000002  -15`  28` )
   7C:  			Call  8027D4C8  ( FFFFFF81 00000002 00000004 FFFFFFFA )
   98:  			Call  $Function_80218AD0    ( FFFFFFE7 0000001B FFFFFFFF 0000001B )
   B4:  		Else
   BC:  			Call  SetTargetOffset       ( .Actor:Self 00000002  -8`  33` )
   D8:  			Call  8027D4C8  ( FFFFFF81 00000002 00000000 FFFFFFFA )
   F4:  			Call  $Function_80218AD0    ( FFFFFFEA 0000001E 00000002 0000001C )
  110:  		EndIf
  118:  	Default
  120:  		Call  $Function_80218AD0    ( FFFFFFEC 00000023 0000000A 00000019 )
  13C:  EndSwitch
  144:  Wait  1`
  150:  Goto  0
  15C:  Return
  164:  End
}

#new:Script $Script_HandleEvent_8022D1C4
{
    0:  Call  UseIdleAnimation  ( .Actor:Self .False )
   14:  Call  EnableIdleScript  ( .Actor:Self 00000000 )
   28:  Call  GetLastEvent      ( .Actor:Self *VarA )
   3C:  Switch  *VarA
   48:  	Case  ==  .Event:HitCombo % 9
   54:  		Set   *Var1  00000000
   64:  		ExecWait  $Script_802315F0
   70:  		ExecWait  DoNormalHit
   7C:  	Case  ==  .Event:Hit % A
   88:  		Set   *Var1  00000000
   98:  		ExecWait  $Script_802315F0
   A4:  		ExecWait  DoNormalHit
   B0:  		ExecWait  $Script_8022C6D4
   BC:  		ExecWait  $Script_80232170
   C8:  	Case  ==  .Event:Death % 20
   D4:  		Set   *Var1  00000000
   E4:  		ExecWait  $Script_802315F0
   F0:  		ExecWait  DoNormalHit
   FC:  		Wait  10`
  108:  		ExecWait  $Script_802318F8
  114:  		Return
  11C:  	Case  ==  .Event:BurnHit % E
  128:  		Set   *Var1  00000001
  138:  		ExecWait  $Script_802315F0
  144:  		ExecWait  DoBurnHit
  150:  	Case  ==  .Event:BurnDeath % 24
  15C:  		Set   *Var1  00000001
  16C:  		ExecWait  $Script_802315F0
  178:  		ExecWait  DoBurnHit
  184:  		Wait  10`
  190:  		ExecWait  $Script_802318F8
  19C:  		Return
  1A4:  	Case  ==  .Event:SpinSmashHit % B
  1B0:  		Set   *Var1  00000000
  1C0:  		ExecWait  $Script_802315F0
  1CC:  		ExecWait  DoSpinSmashHit
  1D8:  	Case  ==  .Event:SpinSmashDeath % 21
  1E4:  		Set   *Var1  00000000
  1F4:  		ExecWait  $Script_802315F0
  200:  		ExecWait  DoSpinSmashHit
  20C:  		ExecWait  $Script_802318F8
  218:  		Return
  220:  	Case  ==  .Event:ShockHit % 2F
  22C:  		Call  SetPartRotation       ( .Actor:Self 00000002 00000000 00000000 00000000 )
  24C:  		Call  SetPartRotationOffset ( .Actor:Self 00000002 00000000 00000000 00000000 )
  26C:  		Set   *Var1  00000000
  27C:  		ExecWait  $Script_802315F0
  288:  		ExecWait  DoShockHit
  294:  		Set   *Var1  00000000
  2A4:  		ExecWait  $Script_802315F0
  2B0:  		ExecWait  DoJumpBack
  2BC:  		ExecWait  $Script_80232040
  2C8:  	Case  ==  .Event:ShockDeath % 26
  2D4:  		Call  SetPartRotation       ( .Actor:Self 00000002 00000000 00000000 00000000 )
  2F4:  		Call  SetPartRotationOffset ( .Actor:Self 00000002 00000000 00000000 00000000 )
  314:  		Set   *Var1  00000000
  324:  		ExecWait  $Script_802315F0
  330:  		ExecWait  DoShockHit
  33C:  		Set   *Var1  00000000
  34C:  		ExecWait  $Script_802315F0
  358:  		ExecWait  DoJumpBack
  364:  		ExecWait  $Script_802318F8
  370:  		Return
  378:  	Case  ==  00000017 % 17
  384:  		Set   *Var1  00000005
  394:  		ExecWait  $Script_802315F0
  3A0:  		ExecWait  DoImmune
  3AC:  	Case  ==  .Event:Immune % 19
  3B8:  		Set   *Var1  00000005
  3C8:  		ExecWait  $Script_802315F0
  3D4:  		ExecWait  DoImmune
  3E0:  		ExecWait  $Script_8022C6D4
  3EC:  		ExecWait  $Script_80232170
  3F8:  	Case  ==  .Event:SpikeTaunt % 1B
  404:  		Wait  10`
  410:  		Call  GetActorPos       ( .Actor:Self *Var0 *Var1 *Var2 )
  42C:  		Call  GetStatusFlags    ( .Actor:Self *Var3 )
  440:  		Switch  *Var3
  44C:  			Case  &  ~Flags:StatusFlags:Sleep|Dizzy % 41000
  458:  				Add   *Var0  FFFFFFF3
  468:  				Add   *Var1  00000025
  478:  			Case  &  ~Flags:StatusFlags:Shrink % 80000
  484:  				Add   *Var0  FFFFFFFF
  494:  				Add   *Var1  0000000E
  4A4:  			Default
  4AC:  				Add   *Var0  FFFFFFFC
  4BC:  				Add   *Var1  00000025
  4CC:  		EndSwitch
  4D4:  		Call  PlayEffect    ( ~FX:LensFlare:Rotating *Var0 *Var1 *Var2 00000014 00000000 00000000 00000000 00000000 00000000 00000000 00000000 00000000 )
  518:  		Wait  20`
  524:  	Case  ==  .Event:BeginAirLift % 3A
  530:  		Call  GetStatusFlags    ( .Actor:Self *Var0 )
  544:  		If  *Var0  !&  ~Flags:StatusFlags:Sleep|Frozen|Fear|Paralyze|Dizzy|Stone|Stop % 35D000
  554:  			Set   *Var1  00000002
  564:  			ExecWait  $Script_802315F0
  570:  			Call  SetAnimation  ( .Actor:Self *Var0 *Var1 )
  588:  			Wait  1000`
  594:  		EndIf
  59C:  	Case  ==  .Event:AirLiftFailed % 1F
  5A8:  		Call  GetStatusFlags    ( .Actor:Self *Var0 )
  5BC:  		If  *Var0  !&  ~Flags:StatusFlags:Sleep|Frozen|Fear|Paralyze|Dizzy|Stone|Stop % 35D000
  5CC:  			Set   *Var1  00000005
  5DC:  			ExecWait  $Script_802315F0
  5E8:  			Call  SetAnimation  ( .Actor:Self *Var0 *Var1 )
  600:  			Wait  20`
  60C:  			ExecWait  $Script_8022CB2C
  618:  			Set   *Var1  00000003
  628:  			ExecWait  $Script_802315F0
  634:  			Call  SetAnimation  ( .Actor:Self *Var0 *Var1 )
  64C:  			Call  ActorSpeak    ( 001D019B .Actor:Self *Var0 FFFFFFFF FFFFFFFF ) % Hey, Mario!! Don't even think of trying to beat me ...
  66C:  			ExecWait  $Script_8022CBC4
  678:  		EndIf
  680:  	Case  ==  .Event:SpikeContact % 2A
  68C:  		Set   *Var1  00000000
  69C:  		ExecWait  $Script_802315F0
  6A8:  		ExecWait  DoNormalHit
  6B4:  	Case  ==  .Event:EndFirstStrike % 35
  6C0:  		ExecWait  $Script_80232040
  6CC:  		Call  HPBarToHome   ( .Actor:Self )
  6DC:  	Case  ==  .Event:RecoverStatus % 31
  6E8:  		SetConst  *Var0  00000001
  6F8:  		SetConst  *Var1  00210003
  708:  		ExecWait  DoRecover
  714:  	Default
  71C:  EndSwitch
  724:  Call  EnableIdleScript  ( .Actor:Self 00000001 )
  738:  Call  UseIdleAnimation  ( .Actor:Self .True )
  74C:  Return
  754:  End
}

#new:Script $Script_TakeTurn_8022D920
{
    0:  Call  GetActorVar   ( .Actor:Self 00000003 *Var0 )
   18:  If  *Var0  !=  00000003
   28:  	Call  GetActorHP    ( .Actor:Self *Var1 )
   3C:  	Call  GetEnemyMaxHP ( .Actor:Self *Var2 )
   50:  	Mul   *Var1  00000064
   60:  	Div   *Var1  *Var2
   70:  	If  *Var0  ==  00000001
   80:  		If  *Var1  <  00000041
   90:  			ExecWait  $Script_8022DD48
   9C:  		EndIf
   A4:  	Else
   AC:  		If  *Var1  <  00000023
   BC:  			ExecWait  $Script_8022DF54
   C8:  		EndIf
   D0:  	EndIf
   D8:  EndIf
   E0:  Call  GetActorHP    ( .Actor:Self *Var0 )
   F4:  If  *Var0  <  0000000F
  104:  	Call  GetActorVar   ( .Actor:Self 00000002 *Var0 )
  11C:  	If  *Var0  !&  00000002
  12C:  		ConstOR  *Var0 00000002
  13C:  		Call  SetActorVar   ( .Actor:Self 00000002 *Var0 )
  154:  		Call  UseBattleCamPreset    ( 0000000E )
  164:  		Call  BattleCamTargetActor  ( .Actor:Self )
  174:  		Call  MoveBattleCamOver     (  20` )
  184:  		Call  GetActorVar   ( .Actor:Self 00000003 *Var0 )
  19C:  		Switch  *Var0
  1A8:  			Case  ==  00000002
  1B4:  				Call  SetAnimation  ( .Actor:Self 00000002 0023000F )
  1CC:  			Case  ==  00000003
  1D8:  				Call  SetAnimation  ( .Actor:Self 00000003 0024000E )
  1F0:  			Default
  1F8:  				Call  SetAnimation  ( .Actor:Self 00000001 00210016 )
  210:  		EndSwitch
  218:  		Call  ActorSpeak    ( 00130060 .Actor:Self 00000001 FFFFFFFF FFFFFFFF ) % Aaaargh!!! You've still got some skills!!
  238:  	EndIf
  240:  EndIf
  248:  Call  GetActorVar   ( .Actor:Self 00000003 *Var0 )
  260:  Switch  *Var0
  26C:  	Case  ==  00000002
  278:  		Call  RandInt   ( 00000064 *Var0 )
  28C:  		If  *Var0  <  00000032
  29C:  			ExecWait  $Script_8022ED10
  2A8:  		Else
  2B0:  			ExecWait  $Script_8022F468
  2BC:  		EndIf
  2C4:  	Case  ==  00000003
  2D0:  		Call  RandInt   ( 00000064 *Var0 )
  2E4:  		Switch  *Var0
  2F0:  			Case  <  0000003C
  2FC:  				ExecWait  $Script_80230034
  308:  			Case  <  00000050
  314:  				ExecWait  $Script_80230794
  320:  			Default
  328:  				Call  GetActorHP    ( .Actor:Self *Var0 )
  33C:  				Call  GetEnemyMaxHP ( .Actor:Self *Var1 )
  350:  				If  *Var0  !=  *Var1
  360:  					Call  GetActorVar   ( .Actor:Self 00000004 *Var2 )
  378:  					If  *Var2  >  00000000
  388:  						Sub   *Var2  00000001
  398:  						Call  SetActorVar   ( .Actor:Self 00000004 *Var2 )
  3B0:  						ExecWait  $Script_8023106C
  3BC:  					Else
  3C4:  						ExecWait  $Script_80230034
  3D0:  					EndIf
  3D8:  				Else
  3E0:  					ExecWait  $Script_80230034
  3EC:  				EndIf
  3F4:  		EndSwitch
  3FC:  	Default
  404:  		ExecWait  $Script_8022E198
  410:  EndSwitch
  418:  Return
  420:  End
}

#new:Script $Script_8022DD48
{
    0:  Call  UseIdleAnimation  ( .Actor:Self .False )
   14:  Call  EnableIdleScript  ( .Actor:Self 00000000 )
   28:  Call  UseBattleCamPreset    ( 0000000E )
   38:  Call  BattleCamTargetActor  ( .Actor:Self )
   48:  Call  MoveBattleCamOver (  20` )
   58:  Call  ActorSpeak        ( 0013005E .Actor:Self 00000001 00210018 00210018 ) % Darn it!!!!! OK, try this on for size!! Ultimate P ...
   78:  ExecWait  $Script_8022C804
   84:  Call  SetPartFlagBits   ( .Actor:Self 00000001 00020001 .True )
   A0:  Call  SetPartFlagBits   ( .Actor:Self 00000001 00800000 .False )
   BC:  Call  SetPartFlagBits   ( .Actor:Self 00000002 00020001 .False )
   D8:  Call  SetPartFlagBits   ( .Actor:Self 00000002 00800000 .True )
   F4:  Wait  10`
  100:  Call  SetActorSpeed     ( .Actor:Self *Fixed[2.0] )
  114:  Call  SetActorJumpGravity   ( .Actor:Self *Fixed[1.2] )
  128:  Call  SetGoalToHome     ( .Actor:Self )
  138:  Call  AddGoalPos        ( .Actor:Self  20`  60`  0` )
  154:  Call  FlyToGoal ( .Actor:Self  30`  0` .Easing:Linear )
  170:  Call  GetActorPos       ( .Actor:Self *Var0 *Var1 *Var2 )
  18C:  Call  ForceHomePos      ( .Actor:Self *Var0 *Var1 *Var2 )
  1A8:  Call  HPBarToHome       ( .Actor:Self )
  1B8:  Call  SetActorVar       ( .Actor:Self 00000003 00000002 )
  1D0:  Call  SetStatusTable    ( .Actor:Self $StatusTable_8022C4E8 )
  1E4:  Call  SetActorFlagBits  ( .Actor:Self 00000200 .True )
  1FC:  Return
  204:  End
}

#new:Script $Script_8022DF54
{
    0:  Call  UseIdleAnimation  ( .Actor:Self .False )
   14:  Call  EnableIdleScript  ( .Actor:Self 00000000 )
   28:  Call  UseBattleCamPreset    ( 0000000E )
   38:  Call  BattleCamTargetActor  ( .Actor:Self )
   48:  Call  MoveBattleCamOver (  20` )
   58:  Call  ActorSpeak        ( 0013005F .Actor:Self 00000002 0023000F 0023000F ) % Shoooot!!!!!!!!!!! OK, maybe something else... How ...
   78:  Call  UseBattleCamPreset    ( 00000002 )
   88:  Call  MoveBattleCamOver (  120` )
   98:  ExecWait  $Script_8022C804
   A4:  Call  SetPartFlagBits   ( .Actor:Self 00000002 00020001 .True )
   C0:  Call  SetPartFlagBits   ( .Actor:Self 00000002 00800000 .False )
   DC:  Call  SetPartFlagBits   ( .Actor:Self 00000003 00020001 .False )
   F8:  Call  SetPartFlagBits   ( .Actor:Self 00000003 00800000 .True )
  114:  Call  SetActorSpeed     ( .Actor:Self *Fixed[2.0] )
  128:  Call  SetActorJumpGravity   ( .Actor:Self *Fixed[0.8] )
  13C:  Call  GetActorPos       ( .Actor:Self *Var0 *Var1 *Var2 )
  158:  Sub   *Var0  00000014
  168:  Set   *Var1  00000000
  178:  Call  SetGoalPos        ( .Actor:Self *Var0 *Var1 *Var2 )
  194:  Call  FallToGoal        ( .Actor:Self  10` )
  1A8:  Call  GetActorPos       ( .Actor:Self *Var0 *Var1 *Var2 )
  1C4:  Call  ForceHomePos      ( .Actor:Self *Var0 *Var1 *Var2 )
  1E0:  Call  HPBarToHome       ( .Actor:Self )
  1F0:  Call  SetActorVar       ( .Actor:Self 00000003 00000003 )
  208:  Call  SetStatusTable    ( .Actor:Self $StatusTable_8022C594 )
  21C:  Call  SetActorFlagBits  ( .Actor:Self 00000200 .False )
  234:  Return
  23C:  End
}

#new:Script $Script_8022E198
{
    0:  Call  UseIdleAnimation  ( .Actor:Self .False )
   14:  Call  EnableIdleScript  ( .Actor:Self 00000000 )
   28:  Call  SetTargetActor    ( .Actor:Self .Actor:Player )
   3C:  Call  UseBattleCamPreset    ( 0000003F )
   4C:  Call  BattleCamTargetActor  ( .Actor:Self )
   5C:  Call  MoveBattleCamOver (  20` )
   6C:  Call  8024ECF8  ( FFFFFFFF 00000001 00000000 )
   84:  Call  SetAnimation      ( .Actor:Self 00000001 00210009 )
   9C:  Call  SetActorSpeed     ( .Actor:Self *Fixed[5.0] )
   B0:  Call  SetGoalToTarget   ( .Actor:Self )
   C0:  Call  GetGoalPos        ( .Actor:Self *Var0 *Var1 *Var2 )
   DC:  Set   *Var0  00000014
   EC:  Call  SetGoalPos        ( .Actor:Self *Var0  0` *Var2 )
  108:  Call  RunToGoal ( .Actor:Self  0` .False )
  120:  Call  EnemyTestTarget   ( .Actor:Self *VarF ~Flags:DamageType:0 00000000 00000008 00000010 )
  144:  Switch  *VarF
  150:  	Case  ==  .HitResult:Lucky % 5
  15C:  		Thread
  164:  			Call  SetAnimation  ( .Actor:Self 00000001 0021000A )
  17C:  			Wait  5`
  188:  			Call  SetAnimation  ( .Actor:Self 00000001 0021000C )
  1A0:  		EndThread
  1A8:  		Call  SetActorSpeed ( .Actor:Self *Fixed[3.0] )
  1BC:  		Call  SetActorJumpGravity   ( .Actor:Self *Fixed[0.5] )
  1D0:  		Call  GetActorPos   ( .Actor:Self *Var0 *Var1 *Var2 )
  1EC:  		Sub   *Var0  0000001E
  1FC:  		Call  SetGoalPos    ( .Actor:Self *Var0 *Var1 *Var2 )
  218:  		Call  JumpToGoal    ( .Actor:Self  10` .False .True .False )
  238:  		Call  SetAnimation  ( .Actor:Self 00000001 00210021 )
  250:  		Thread
  258:  			Wait  3`
  264:  			Call  SetAnimation  ( .Actor:Self 00000001 00210014 )
  27C:  		EndThread
  284:  		Call  SetActorSpeed ( .Actor:Self *Fixed[3.0] )
  298:  		Call  EnemyTestTarget       ( .Actor:Self *Var0 ~Flags:DamageType:TriggerLucky 00000000 00000000 00000000 )
  2BC:  		Call  GetActorPos   ( .Actor:Self *Var0 *Var1 *Var2 )
  2D8:  		Sub   *Var0  00000014
  2E8:  		Call  SetGoalPos    ( .Actor:Self *Var0 *Var1 *Var2 )
  304:  		Call  FlyToGoal     ( .Actor:Self  16`  0` .Easing:CubicOut )
  320:  		Wait  10`
  32C:  		Call  UseBattleCamPreset    ( 00000002 )
  33C:  		Call  SetActorYaw   ( .Actor:Self  180` )
  350:  		Call  SetAnimation  ( .Actor:Self 00000001 0021000B )
  368:  		Call  SetActorYaw   ( .Actor:Self  180` )
  37C:  		Call  AddActorDecoration    ( .Actor:Self 00000001 00000000 .Decoration:Sweat )
  398:  		Call  SetActorSpeed ( .Actor:Self *Fixed[7.0] )
  3AC:  		Call  SetGoalToHome ( .Actor:Self )
  3BC:  		Call  RunToGoal     ( .Actor:Self  0` .False )
  3D4:  		Call  SetAnimation  ( .Actor:Self 00000001 00210003 )
  3EC:  		Call  RemoveActorDecoration ( .Actor:Self 00000001 00000000 )
  404:  		Call  SetActorYaw   ( .Actor:Self  0` )
  418:  		Call  EnableIdleScript      ( .Actor:Self 00000001 )
  42C:  		Call  UseIdleAnimation      ( .Actor:Self .True )
  440:  		Return
  448:  	Case  ==  .HitResult:Miss % 6
  454:  		Call  SetAnimation  ( .Actor:Self 00000001 00210009 )
  46C:  		Call  SetActorSpeed ( .Actor:Self *Fixed[6.0] )
  480:  		Call  SetGoalToTarget   ( .Actor:Self )
  490:  		Call  GetGoalPos    ( .Actor:Self *Var0 *Var1 *Var2 )
  4AC:  		Add   *Var0  00000032
  4BC:  		Call  SetGoalPos    ( .Actor:Self *Var0  0` *Var2 )
  4D8:  		Call  RunToGoal     ( .Actor:Self  0` .False )
  4F0:  		Call  SetActorSounds    ( .Actor:Self .ActorSound:Jump 000020E2 00000000 )
  50C:  		Call  SetAnimation  ( .Actor:Self 00000001 0021000E )
  524:  		Wait  2`
  530:  		Call  SetAnimation  ( .Actor:Self 00000001 0021000F )
  548:  		Call  SetActorJumpGravity   ( .Actor:Self *Fixed[1.6] )
  55C:  		Call  SetGoalToTarget   ( .Actor:Self )
  56C:  		Call  GetGoalPos    ( .Actor:Self *Var0 *Var1 *Var2 )
  588:  		Sub   *Var0  0000000A
  598:  		Set   *Var1  00000000
  5A8:  		Add   *Var2  00000003
  5B8:  		Thread
  5C0:  			Wait  8`
  5CC:  			Call  SetAnimation  ( .Actor:Self 00000001 00210010 )
  5E4:  		EndThread
  5EC:  		Call  SetGoalPos    ( .Actor:Self *Var0 *Var1 *Var2 )
  608:  		Call  JumpToGoal    ( .Actor:Self  18` .False .True .False )
  628:  		Call  ResetAllActorSounds   ( .Actor:Self )
  638:  		Call  SetAnimation  ( .Actor:Self 00000001 00210024 )
  650:  		Sub   *Var0  00000014
  660:  		Call  SetGoalPos    ( .Actor:Self *Var0 *Var1 *Var2 )
  67C:  		Call  JumpToGoal    ( .Actor:Self  8` .False .True .False )
  69C:  		Sub   *Var0  0000000A
  6AC:  		Call  SetGoalPos    ( .Actor:Self *Var0 *Var1 *Var2 )
  6C8:  		Call  JumpToGoal    ( .Actor:Self  5` .False .True .False )
  6E8:  		Call  UseBattleCamPreset    ( 00000002 )
  6F8:  		Call  SetAnimation  ( .Actor:Self 00000001 00210009 )
  710:  		Call  SetActorSpeed ( .Actor:Self *Fixed[7.0] )
  724:  		Call  SetGoalToHome ( .Actor:Self )
  734:  		Call  RunToGoal     ( .Actor:Self  0` .False )
  74C:  		Call  SetAnimation  ( .Actor:Self 00000001 00210003 )
  764:  		Call  EnableIdleScript      ( .Actor:Self 00000001 )
  778:  		Call  UseIdleAnimation      ( .Actor:Self .True )
  78C:  		Return
  794:  EndSwitch
  79C:  Call  SetAnimation  ( .Actor:Self 00000001 00210009 )
  7B4:  Call  SetActorSpeed ( .Actor:Self *Fixed[6.0] )
  7C8:  Call  SetGoalToTarget   ( .Actor:Self )
  7D8:  Call  GetGoalPos    ( .Actor:Self *Var0 *Var1 *Var2 )
  7F4:  Add   *Var0  00000032
  804:  Call  SetGoalPos    ( .Actor:Self *Var0  0` *Var2 )
  820:  Call  RunToGoal     ( .Actor:Self  0` .False )
  838:  Call  SetActorSounds    ( .Actor:Self .ActorSound:Jump 000020E2 00000000 )
  854:  Call  SetAnimation  ( .Actor:Self 00000001 0021000E )
  86C:  Wait  2`
  878:  Call  SetGoalToTarget   ( .Actor:Self )
  888:  Call  SetActorJumpGravity   ( .Actor:Self *Fixed[1.6] )
  89C:  Call  SetAnimation  ( .Actor:Self 00000001 0021000F )
  8B4:  Thread
  8BC:  	Wait  8`
  8C8:  	Call  SetAnimation  ( .Actor:Self 00000001 00210010 )
  8E0:  EndThread
  8E8:  Call  JumpToGoal    ( .Actor:Self  15` .False .True .False )
  908:  Wait  2`
  914:  Call  EnemyDamageTarget     ( .Actor:Self *VarF ~Flags:DamageType:0 00000000 00000000 00000008 00000020 )
  93C:  Call  ResetAllActorSounds   ( .Actor:Self )
  94C:  Call  UseBattleCamPreset    ( 00000002 )
  95C:  Call  GetGoalPos    ( .Actor:Self *Var0 *Var1 *Var2 )
  978:  Add   *Var0  00000028
  988:  Set   *Var1  00000000
  998:  Call  SetActorJumpGravity   ( .Actor:Self *Fixed[1.8] )
  9AC:  Call  SetGoalPos    ( .Actor:Self *Var0 *Var1 *Var2 )
  9C8:  Call  JumpToGoal    ( .Actor:Self  10` .False .True .False )
  9E8:  Add   *Var0  0000001E
  9F8:  Call  SetGoalPos    ( .Actor:Self *Var0 *Var1 *Var2 )
  A14:  Call  JumpToGoal    ( .Actor:Self  8` .False .True .False )
  A34:  Add   *Var0  00000014
  A44:  Call  SetGoalPos    ( .Actor:Self *Var0 *Var1 *Var2 )
  A60:  Call  JumpToGoal    ( .Actor:Self  6` .False .True .False )
  A80:  Sub   *Var0  0000000A
  A90:  Call  JumpToGoal    ( .Actor:Self  4` .False .True .False )
  AB0:  Call  SetAnimation  ( .Actor:Self 00000001 00210003 )
  AC8:  Wait  8`
  AD4:  Call  SetGoalToHome ( .Actor:Self )
  AE4:  Call  SetActorSpeed ( .Actor:Self *Fixed[7.0] )
  AF8:  Call  SetAnimation  ( .Actor:Self 00000001 00210009 )
  B10:  Call  RunToGoal     ( .Actor:Self  0` .False )
  B28:  Call  SetAnimation  ( .Actor:Self 00000001 00210003 )
  B40:  Call  EnableIdleScript      ( .Actor:Self 00000001 )
  B54:  Call  UseIdleAnimation      ( .Actor:Self .True )
  B68:  Return
  B70:  End
}

#new:Script $Script_8022ED10
{
    0:  Call  UseIdleAnimation  ( .Actor:Self .False )
   14:  Call  EnableIdleScript  ( .Actor:Self 00000000 )
   28:  Call  SetTargetActor    ( .Actor:Self .Actor:Player )
   3C:  Call  UseBattleCamPreset    ( 0000003F )
   4C:  Call  BattleCamTargetActor  ( .Actor:Self )
   5C:  Call  8024ECF8  ( FFFFFFFF 00000001 00000000 )
   74:  Call  SetAnimation      ( .Actor:Self 00000002 00230007 )
   8C:  Call  SetGoalToTarget   ( .Actor:Self )
   9C:  Call  AddGoalPos        ( .Actor:Self  50`  0`  0` )
   B8:  Call  SetActorSpeed     ( .Actor:Self *Fixed[6.0] )
   CC:  Call  FlyToGoal ( .Actor:Self  0`  -4` .Easing:Linear )
   E8:  Call  EnemyTestTarget   ( .Actor:Self *VarA ~Flags:DamageType:0 00000000 00000006 00000010 )
  10C:  Switch  *VarA
  118:  	CaseOR  ==  .HitResult:Miss % 6
  124:  	CaseOR  ==  .HitResult:Lucky % 5
  130:  		Wait  10`
  13C:  		Call  UseBattleCamPreset    ( 00000042 )
  14C:  		Call  8024ECF8      ( FFFFFFFF 00000001 00000000 )
  164:  		Call  BattleCamTargetActor  ( .Actor:Self )
  174:  		Call  SetActorSounds        ( .Actor:Self .ActorSound:Jump 000020E0 00000000 )
  190:  		Call  SetActorSpeed ( .Actor:Self *Fixed[5.0] )
  1A4:  		Call  SetActorJumpGravity   ( .Actor:Self *Fixed[1.8] )
  1B8:  		Call  SetAnimation  ( .Actor:Self 00000002 00230007 )
  1D0:  		Call  GetActorPos   ( .Actor:Self *Var0 *Var1 *Var2 )
  1EC:  		Call  SetGoalPos    ( .Actor:Self *Var0 *Var1 *Var2 )
  208:  		Call  JumpToGoal    ( .Actor:Self  10` .False .True .False )
  228:  		Call  SetActorSounds        ( .Actor:Self .ActorSound:Fly 00000000 00000000 )
  244:  		Call  PlaySoundAtActor      ( .Actor:Self 000002C1 )
  258:  		Call  SetGoalToTarget       ( .Actor:Self )
  268:  		Sub   *Var0  00000050
  278:  		Set   *Var1  00000014
  288:  		Call  SetGoalPos    ( .Actor:Self *Var0 *Var1 *Var2 )
  2A4:  		Call  SetActorSpeed ( .Actor:Self *Fixed[8.0] )
  2B8:  		Call  SetAnimation  ( .Actor:Self 00000002 00230008 )
  2D0:  		Call  FlyToGoal     ( .Actor:Self  0`  -10` .Easing:Linear )
  2EC:  		If  *VarA  ==  .HitResult:Lucky % 5
  2FC:  			Call  EnemyTestTarget   ( .Actor:Self *Var0 ~Flags:DamageType:TriggerLucky 00000000 00000000 00000000 )
  320:  		EndIf
  328:  		Wait  10`
  334:  		Call  UseBattleCamPreset    ( 00000002 )
  344:  		Call  MoveBattleCamOver     (  20` )
  354:  		Call  ResetAllActorSounds   ( .Actor:Self )
  364:  		Call  SetAnimation  ( .Actor:Self 00000002 00230007 )
  37C:  		Call  SetActorYaw   ( .Actor:Self  180` )
  390:  		Call  AddActorDecoration    ( .Actor:Self 00000001 00000000 .Decoration:Sweat )
  3AC:  		Call  SetGoalToHome ( .Actor:Self )
  3BC:  		Call  SetActorSpeed ( .Actor:Self *Fixed[6.0] )
  3D0:  		Call  FlyToGoal     ( .Actor:Self  0`  1` .Easing:Linear )
  3EC:  		Call  SetAnimation  ( .Actor:Self 00000002 00230003 )
  404:  		Call  RemoveActorDecoration ( .Actor:Self 00000001 00000000 )
  41C:  		Call  SetActorYaw   ( .Actor:Self  0` )
  430:  		Return
  438:  	EndCaseGroup
  440:  	Default
  448:  EndSwitch
  450:  Wait  10`
  45C:  Call  UseBattleCamPreset    ( 00000042 )
  46C:  Call  8024ECF8      ( FFFFFFFF 00000001 00000000 )
  484:  Call  BattleCamTargetActor  ( .Actor:Self )
  494:  Call  SetActorSounds    ( .Actor:Self .ActorSound:Jump 000020E0 00000000 )
  4B0:  Call  SetActorSpeed ( .Actor:Self *Fixed[5.0] )
  4C4:  Call  SetActorJumpGravity   ( .Actor:Self *Fixed[1.8] )
  4D8:  Call  SetAnimation  ( .Actor:Self 00000002 00230007 )
  4F0:  Call  GetActorPos   ( .Actor:Self *Var0 *Var1 *Var2 )
  50C:  Call  SetGoalPos    ( .Actor:Self *Var0 *Var1 *Var2 )
  528:  Call  JumpToGoal    ( .Actor:Self  10` .False .True .False )
  548:  Call  SetActorSounds    ( .Actor:Self .ActorSound:Fly 00000000 00000000 )
  564:  Call  PlaySoundAtActor  ( .Actor:Self 000002C1 )
  578:  Call  SetGoalToTarget   ( .Actor:Self )
  588:  Call  SetActorSpeed ( .Actor:Self *Fixed[8.0] )
  59C:  Call  SetAnimation  ( .Actor:Self 00000002 00230008 )
  5B4:  Call  FlyToGoal     ( .Actor:Self  0`  -10` .Easing:Linear )
  5D0:  Wait  2`
  5DC:  Call  EnemyDamageTarget ( .Actor:Self *Var0 ~Flags:DamageType:0 00000000 00000000 00000008 00000020 )
  604:  Call  UseBattleCamPreset    ( 00000002 )
  614:  Call  SetGoalToTarget   ( .Actor:Self )
  624:  Call  AddGoalPos    ( .Actor:Self  50`  10`  0` )
  640:  Call  SetActorSpeed ( .Actor:Self *Fixed[4.0] )
  654:  Call  SetAnimation  ( .Actor:Self 00000002 00230007 )
  66C:  Call  FlyToGoal     ( .Actor:Self  0`  -10` .Easing:Linear )
  688:  Wait  10`
  694:  Call  ResetAllActorSounds   ( .Actor:Self )
  6A4:  Call  YieldTurn ( )
  6B0:  Call  SetAnimation  ( .Actor:Self 00000002 00230007 )
  6C8:  Call  SetGoalToHome ( .Actor:Self )
  6D8:  Call  SetActorSpeed ( .Actor:Self *Fixed[6.0] )
  6EC:  Call  FlyToGoal     ( .Actor:Self  0`  1` .Easing:Linear )
  708:  Call  SetAnimation  ( .Actor:Self 00000002 00230003 )
  720:  Call  EnableIdleScript  ( .Actor:Self 00000001 )
  734:  Call  UseIdleAnimation  ( .Actor:Self .True )
  748:  Return
  750:  End
}

#new:Script $Script_8022F468
{
    0:  Call  UseIdleAnimation  ( .Actor:Self .False )
   14:  Call  EnableIdleScript  ( .Actor:Self 00000000 )
   28:  Call  SetTargetActor    ( .Actor:Self .Actor:Player )
   3C:  Call  UseBattleCamPreset    ( 0000000E )
   4C:  Call  BattleCamTargetActor  ( .Actor:Self )
   5C:  Call  MoveBattleCamOver (  20` )
   6C:  Wait  20`
   78:  Call  PlaySoundAtActor  ( .Actor:Self .Sound:CloseShell )
   8C:  Call  SetAnimation      ( .Actor:Self 00000002 00230011 )
   A4:  Wait  10`
   B0:  Call  SetAnimation      ( .Actor:Self 00000002 00230005 )
   C8:  Call  UseBattleCamPreset    ( 00000002 )
   D8:  Call  MoveBattleCamOver (  20` )
   E8:  Wait  10`
   F4:  Call  PlaySoundAtActor  ( .Actor:Self 000002C1 )
  108:  Call  SetActorSounds    ( .Actor:Self .ActorSound:Jump 00000000 00000000 )
  124:  Call  EnemyTestTarget   ( .Actor:Self *VarF ~Flags:DamageType:0 00000000 00000006 00000010 )
  148:  Switch  *VarF
  154:  	CaseOR  ==  .HitResult:Miss % 6
  160:  	CaseOR  ==  .HitResult:Lucky % 5
  16C:  		Thread
  174:  			Call  SetActorSpeed ( .Actor:Self *Fixed[4.0] )
  188:  			Call  SetActorJumpGravity   ( .Actor:Self *Fixed[1.0] )
  19C:  			Call  SetGoalToTarget       ( .Actor:Self )
  1AC:  			Call  GetGoalPos    ( .Actor:Self *Var0 *Var1 *Var2 )
  1C8:  			Sub   *Var0  0000000A
  1D8:  			Set   *Var1  0000000C
  1E8:  			Call  SetGoalPos    ( .Actor:Self *Var0 *Var1 *Var2 )
  204:  			Call  JumpToGoal    ( .Actor:Self  20` .False .True .False )
  224:  		EndThread
  22C:  		Set   *Var0  00000000
  23C:  		Call  GetActorPos   ( .Actor:Self *Var1 *Var2 *Var3 )
  258:  		Loop  00000014
  264:  			Call  GetActorPos   ( .Actor:Self *Var4 *Var5 *Var6 )
  280:  			Call  $Function_80218D28    ( *Var1 *Var2 *Var4 *Var5 *Var0 )
  2A0:  			Call  SetPartRotation       ( .Actor:Self 00000002 00000000 00000000 *Var0 )
  2C0:  			Set   *Var1  *Var4
  2D0:  			Set   *Var2  *Var5
  2E0:  			Set   *Var3  *Var6
  2F0:  			Wait  1`
  2FC:  		EndLoop
  304:  		If  *VarF  ==  .HitResult:Lucky % 5
  314:  			Call  EnemyTestTarget   ( .Actor:Self *VarF ~Flags:DamageType:TriggerLucky 00000000 00000000 00000000 )
  338:  		EndIf
  340:  		Call  ResetAllActorSounds   ( .Actor:Self )
  350:  		Thread
  358:  			Call  GetActorPos   ( .Actor:Self *Var1 *Var2 *Var3 )
  374:  			Sub   *Var1  00000028
  384:  			Set   *Var2  0000000A
  394:  			Call  SetGoalPos    ( .Actor:Self *Var1 *Var2 *Var3 )
  3B0:  			Call  JumpToGoal    ( .Actor:Self  14` .False .True .False )
  3D0:  		EndThread
  3D8:  		Call  GetActorPos   ( .Actor:Self *Var1 *Var2 *Var3 )
  3F4:  		Loop  0000000E
  400:  			Call  GetActorPos   ( .Actor:Self *Var4 *Var5 *Var6 )
  41C:  			Call  $Function_80218D28    ( *Var1 *Var2 *Var4 *Var5 *Var0 )
  43C:  			Set   *Var7  *Var0
  44C:  			Add   *Var7  000000B4
  45C:  			Call  SetPartRotation       ( .Actor:Self 00000002 00000000 00000000 *Var7 )
  47C:  			Set   *Var1  *Var4
  48C:  			Set   *Var2  *Var5
  49C:  			Set   *Var3  *Var6
  4AC:  			Wait  1`
  4B8:  		EndLoop
  4C0:  		Call  SetPartRotation   ( .Actor:Self 00000002 00000000 00000000 00000000 )
  4E0:  		Call  SetPartRotationOffset ( .Actor:Self 00000002 00000000 00000000 00000000 )
  500:  		Call  PlaySoundAtActor  ( .Actor:Self .Sound:OpenShell )
  514:  		Call  SetAnimation      ( .Actor:Self 00000002 00230012 )
  52C:  		Wait  10`
  538:  		Call  SetAnimation      ( .Actor:Self 00000002 00230007 )
  550:  		Call  SetActorYaw       ( .Actor:Self  180` )
  564:  		Call  AddActorDecoration    ( .Actor:Self 00000002 00000000 .Decoration:Sweat )
  580:  		Call  SetActorSpeed     ( .Actor:Self *Fixed[8.0] )
  594:  		Call  SetGoalToHome     ( .Actor:Self )
  5A4:  		Call  FlyToGoal ( .Actor:Self  0`  -5` .Easing:Linear )
  5C0:  		Call  RemoveActorDecoration ( .Actor:Self 00000002 00000000 )
  5D8:  		Call  SetActorYaw       ( .Actor:Self  0` )
  5EC:  		Call  EnableIdleScript  ( .Actor:Self 00000001 )
  600:  		Call  UseIdleAnimation  ( .Actor:Self .True )
  614:  		Return
  61C:  	EndCaseGroup
  624:  	Default
  62C:  EndSwitch
  634:  Call  SetPartRotationOffset ( .Actor:Self 00000002 00000000 0000000C 00000000 )
  654:  Thread
  65C:  	Call  SetActorSpeed     ( .Actor:Self *Fixed[4.0] )
  670:  	Call  SetActorJumpGravity   ( .Actor:Self *Fixed[1.0] )
  684:  	Call  SetGoalToTarget   ( .Actor:Self )
  694:  	Call  JumpToGoal        ( .Actor:Self  20` .False .True .False )
  6B4:  EndThread
  6BC:  Set   *Var0  00000000
  6CC:  Call  GetActorPos   ( .Actor:Self *Var1 *Var2 *Var3 )
  6E8:  Loop  00000014
  6F4:  	Call  GetActorPos   ( .Actor:Self *Var4 *Var5 *Var6 )
  710:  	Call  $Function_80218D28    ( *Var1 *Var2 *Var4 *Var5 *Var0 )
  730:  	Call  SetPartRotation       ( .Actor:Self 00000002 00000000 00000000 *Var0 )
  750:  	Set   *Var1  *Var4
  760:  	Set   *Var2  *Var5
  770:  	Set   *Var3  *Var6
  780:  	Wait  1`
  78C:  EndLoop
  794:  Wait  2`
  7A0:  Call  SetGoalToTarget       ( .Actor:Self )
  7B0:  Call  EnemyDamageTarget     ( .Actor:Self *VarF ~Flags:DamageType:0 00000000 00000000 00000009 00000020 )
  7D8:  Call  UseBattleCamPreset    ( 00000002 )
  7E8:  Call  ResetAllActorSounds   ( .Actor:Self )
  7F8:  Thread
  800:  	Call  GetActorPos   ( .Actor:Self *Var1 *Var2 *Var3 )
  81C:  	Add   *Var1  00000028
  82C:  	Call  SetGoalPos    ( .Actor:Self *Var1 *Var2 *Var3 )
  848:  	Call  JumpToGoal    ( .Actor:Self  14` .False .True .False )
  868:  EndThread
  870:  Call  GetActorPos   ( .Actor:Self *Var1 *Var2 *Var3 )
  88C:  Loop  0000000E
  898:  	Call  GetActorPos   ( .Actor:Self *Var4 *Var5 *Var6 )
  8B4:  	Call  $Function_80218D28    ( *Var1 *Var2 *Var4 *Var5 *Var0 )
  8D4:  	Set   *Var7  *Var0
  8E4:  	Add   *Var7  000000B4
  8F4:  	Call  SetPartRotation       ( .Actor:Self 00000002 00000000 00000000 *Var7 )
  914:  	Set   *Var1  *Var4
  924:  	Set   *Var2  *Var5
  934:  	Set   *Var3  *Var6
  944:  	Wait  1`
  950:  EndLoop
  958:  Call  SetPartRotation   ( .Actor:Self 00000002 00000000 00000000 00000000 )
  978:  Call  SetPartRotationOffset ( .Actor:Self 00000002 00000000 00000000 00000000 )
  998:  Call  PlaySoundAtActor  ( .Actor:Self .Sound:OpenShell )
  9AC:  Call  SetAnimation      ( .Actor:Self 00000002 00230012 )
  9C4:  Wait  10`
  9D0:  Call  SetAnimation      ( .Actor:Self 00000002 00230007 )
  9E8:  Call  SetActorSpeed     ( .Actor:Self *Fixed[8.0] )
  9FC:  Call  SetGoalToHome     ( .Actor:Self )
  A0C:  Call  FlyToGoal ( .Actor:Self  0`  -5` .Easing:Linear )
  A28:  Call  EnableIdleScript  ( .Actor:Self 00000001 )
  A3C:  Call  UseIdleAnimation  ( .Actor:Self .True )
  A50:  Return
  A58:  End
}

#new:FloatTable $FloatTable_8022FEC8
{
	0.0      0.017452 0.034899 0.052336 0.069756 0.087156 0.104528 0.121869
	0.139173 0.156434 0.173648 0.190809 0.207912 0.224951 0.241922 0.258819
	0.275637 0.292372 0.309017 0.325568 0.34202  0.358368 0.374607 0.390731
	0.406737 0.422618 0.438371 0.45399  0.469472 0.48481  0.5      0.515038
	0.529919 0.544639 0.559193 0.573576 0.587785 0.601815 0.615661 0.62932
	0.642788 0.656059 0.669131 0.681998 0.694658 0.707107 0.71934  0.731354
	0.743145 0.75471  0.766044 0.777146 0.788011 0.798636 0.809017 0.819152
	0.829038 0.838671 0.848048 0.857167 0.866025 0.87462  0.882948 0.891007
	0.898794 0.906308 0.913545 0.920505 0.927184 0.93358  0.939693 0.945519
	0.951057 0.956305 0.961262 0.965926 0.970296 0.97437  0.978148 0.981627
	0.984808 0.987688 0.990268 0.992546 0.994522 0.996195 0.997564 0.99863
	0.999391 0.999848 1.0
}

#new:Script $Script_80230034
{
    0:  Call  UseIdleAnimation  ( .Actor:Self .False )
   14:  Call  EnableIdleScript  ( .Actor:Self 00000000 )
   28:  Call  SetTargetActor    ( .Actor:Self .Actor:Player )
   3C:  Call  SetGoalToTarget   ( .Actor:Self )
   4C:  Call  UseBattleCamPreset    ( 00000002 )
   5C:  Call  MoveBattleCamOver (  20` )
   6C:  Call  SetAnimation      ( .Actor:Self 00000003 00240006 )
   84:  Wait  8`
   90:  Call  PlaySoundAtActor  ( .Actor:Self .Sound:SpellCast1 )
   A4:  Call  GetStatusFlags    ( .Actor:Self *Var0 )
   B8:  If  *Var0  !&  ~Flags:StatusFlags:Shrink % 80000
   C8:  	Set   *Var3  00000000
   D8:  	Set   *Var4  00000024
   E8:  	SetF  *Var5  *Fixed[1.0]
   F8:  Else
  100:  	Set   *Var3  00000000
  110:  	Set   *Var4  0000000E
  120:  	SetF  *Var5  FA84329A
  130:  EndIf
  138:  Call  GetActorPos   ( .Actor:Self *Var0 *Var1 *Var2 )
  154:  Add   *Var0  *Var3
  164:  Add   *Var1  *Var4
  174:  Call  PlayEffect    ( ~FX:GatherEnergyPink *Var0 *Var1 *Var2 *Var5 0000001E 00000000 00000000 00000000 00000000 00000000 00000000 00000000 )
  1B8:  Wait  30`
  1C4:  Call  SetAnimation  ( .Actor:Self 00000003 00240007 )
  1DC:  Call  EnemyTestTarget   ( .Actor:Self *VarA ~Flags:DamageType:NoContact 00000000 00000001 00000010 )
  200:  Switch  *VarA
  20C:  	Case  ==  .HitResult:Miss % 6
  218:  		Call  PlaySoundAtActor  ( .Actor:Self .Sound:SpellCast2 )
  22C:  		Call  GetActorPos       ( .Actor:Player *Var3 *Var4 *Var5 )
  248:  		Sub   *Var3  00000078
  258:  		Add   *Var4  00000014
  268:  		Call  GetStatusFlags    ( .Actor:Self *Var0 )
  27C:  		If  *Var0  !&  ~Flags:StatusFlags:Shrink % 80000
  28C:  			Set   *Var6  FFFFFFF8
  29C:  			Set   *Var7  00000014
  2AC:  			SetF  *Var8  *Fixed[1.0]
  2BC:  		Else
  2C4:  			Set   *Var6  FFFFFFFD
  2D4:  			Set   *Var7  00000008
  2E4:  			SetF  *Var8  FA84329A
  2F4:  		EndIf
  2FC:  		Call  GetActorPos       ( .Actor:Self *Var0 *Var1 *Var2 )
  318:  		Add   *Var0  *Var6
  328:  		Add   *Var1  *Var7
  338:  		Call  PlayEffect        ( ~FX:ShapeSpell:Projectile *Var0 *Var1 *Var2 *Var3 *Var4 *Var5 0000001E 00000000 00000000 00000000 00000000 00000000 )
  37C:  		Wait  35`
  388:  		Call  EnableIdleScript  ( .Actor:Self 00000001 )
  39C:  		Call  UseIdleAnimation  ( .Actor:Self .True )
  3B0:  		Return
  3B8:  	Case  ==  .HitResult:Lucky % 5
  3C4:  		Thread
  3CC:  			Call  GetActorPos   ( .Actor:Self *Var0 *Var1 *Var2 )
  3E8:  			Add   *Var1  0000000C
  3F8:  			Call  PlayEffect    ( ~FX:FaintDustCloud *Var0 *Var1 *Var2 *Fixed[3.0] 0000001E 00000000 00000000 00000000 00000000 00000000 00000000 00000000 )
  43C:  			Call  SetAnimation  ( .Actor:Self 00000003 00240008 )
  454:  			Call  GetActorPos   ( .Actor:Self *Var0 *Var1 *Var2 )
  470:  			Wait  40`
  47C:  			Sub   *Var0  00000007
  48C:  			Add   *Var1  0000000E
  49C:  			Add   *Var2  00000004
  4AC:  			Call  PlayEffect    ( ~FX:Steam:Ring *Var0 *Var1 *Var2 00000000 00000000 00000000 00000000 00000000 00000000 00000000 00000000 00000000 )
  4F0:  			Wait  20`
  4FC:  			Call  SetAnimation  ( .Actor:Self 00000003 00240002 )
  514:  		EndThread
  51C:  		Wait  20`
  528:  		Call  EnemyTestTarget   ( .Actor:Self *Var0 ~Flags:DamageType:TriggerLucky 00000000 00000000 00000000 )
  54C:  		Wait  40`
  558:  		Call  EnableIdleScript  ( .Actor:Self 00000001 )
  56C:  		Call  UseIdleAnimation  ( .Actor:Self .True )
  580:  		Return
  588:  EndSwitch
  590:  Call  PlaySoundAtActor  ( .Actor:Self .Sound:SpellCast2 )
  5A4:  Call  GetActorPos       ( .Actor:Player *Var3 *Var4 *Var5 )
  5C0:  Add   *Var4  00000014
  5D0:  Call  GetStatusFlags    ( .Actor:Self *Var0 )
  5E4:  If  *Var0  !&  ~Flags:StatusFlags:Shrink % 80000
  5F4:  	Set   *Var6  FFFFFFF8
  604:  	Set   *Var7  00000014
  614:  	SetF  *Var8  *Fixed[1.0]
  624:  Else
  62C:  	Set   *Var6  FFFFFFFD
  63C:  	Set   *Var7  00000008
  64C:  	SetF  *Var8  FA84329A
  65C:  EndIf
  664:  Call  GetActorPos       ( .Actor:Self *Var0 *Var1 *Var2 )
  680:  Add   *Var0  *Var6
  690:  Add   *Var1  *Var7
  6A0:  Call  PlayEffect        ( ~FX:ShapeSpell:Projectile *Var0 *Var1 *Var2 *Var3 *Var4 *Var5 0000000F 00000000 00000000 00000000 00000000 00000000 )
  6E4:  Wait  15`
  6F0:  Call  EnemyDamageTarget ( .Actor:Self *Var0 ~Flags:DamageType:NoContact|Magic 00000000 00000000 00000008 00000020 )
  718:  Call  UseBattleCamPreset    ( 00000002 )
  728:  Call  EnableIdleScript  ( .Actor:Self 00000001 )
  73C:  Call  UseIdleAnimation  ( .Actor:Self .True )
  750:  Return
  758:  End
}

#new:Script $Script_80230794
{
    0:  Call  UseIdleAnimation  ( .Actor:Self .False )
   14:  Call  EnableIdleScript  ( .Actor:Self 00000000 )
   28:  Call  SetTargetActor    ( .Actor:Self .Actor:Player )
   3C:  Call  SetGoalToTarget   ( .Actor:Self )
   4C:  Call  SetAnimation      ( .Actor:Self 00000003 00240006 )
   64:  Wait  8`
   70:  Call  PlaySoundAtActor  ( .Actor:Self .Sound:SpellCast1 )
   84:  Call  GetStatusFlags    ( .Actor:Self *Var0 )
   98:  If  *Var0  !&  ~Flags:StatusFlags:Shrink % 80000
   A8:  	Set   *Var3  00000000
   B8:  	Set   *Var4  00000024
   C8:  	SetF  *Var5  *Fixed[1.0]
   D8:  Else
   E0:  	Set   *Var3  00000000
   F0:  	Set   *Var4  0000000E
  100:  	SetF  *Var5  FA84329A
  110:  EndIf
  118:  Call  GetActorPos       ( .Actor:Self *Var0 *Var1 *Var2 )
  134:  Add   *Var0  *Var3
  144:  Add   *Var1  *Var4
  154:  Call  PlayEffect        ( ~FX:GatherEnergyPink *Var0 *Var1 *Var2 *Var5 0000001E 00000000 00000000 00000000 00000000 00000000 00000000 00000000 )
  198:  Call  UseBattleCamPreset    ( 00000002 )
  1A8:  Call  MoveBattleCamOver (  60` )
  1B8:  Wait  30`
  1C4:  Call  PlaySoundAtActor  ( .Actor:Self .Sound:BigPowerUp )
  1D8:  Call  SetAnimation      ( .Actor:Self 00000003 00240007 )
  1F0:  Call  $Function_80218F60 ( )
  1FC:  Call  MakeLerp  ( 00000000 000000C8 0000003C .Easing:CosInOut )
  218:  Label  0
  224:  Call  UpdateLerp ( )
  230:  Call  $Function_80218FA4    ( *Var0 )
  240:  Wait  1`
  24C:  If  *Var1  ==  00000001
  25C:  	Goto  0
  268:  EndIf
  270:  Call  GetActorPos       ( .Actor:Player *Var0 *Var1 *Var2 )
  28C:  Call  RandInt   ( 00000028 *Var1 )
  2A0:  Add   *Var0  *Var1
  2B0:  Add   *Var0  00000032
  2C0:  Set   *Var1  000000C8
  2D0:  Call  PlaySoundAtActor  ( .Actor:Self 00000366 )
  2E4:  Call  EnemyTestTarget   ( .Actor:Self *VarA ~Flags:DamageType:NoContact 00000000 00000001 00000010 )
  308:  Switch  *VarA
  314:  	Case  ==  .HitResult:Miss % 6
  320:  		Call  SetGoalToTarget   ( .Actor:Self )
  330:  		Call  GetGoalPos        ( .Actor:Self *Var3 00000000 *Var5 )
  34C:  		Call  PlayEffect        ( ~FX:Lightning *Var0 *Var1 *Var2 *Var3 *Var4 *Var5 *Fixed[1.0] 00000012 00000000 00000000 00000000 00000000 )
  390:  		Wait  20`
  39C:  		Call  MakeLerp  ( 000000C8 00000000 0000003C .Easing:Linear )
  3B8:  		Label  2
  3C4:  		Call  UpdateLerp ( )
  3D0:  		Call  $Function_80218FA4    ( *Var0 )
  3E0:  		Wait  1`
  3EC:  		If  *Var1  ==  00000001
  3FC:  			Goto  2
  408:  		EndIf
  410:  		Wait  20`
  41C:  		Call  EnableIdleScript  ( .Actor:Self 00000001 )
  430:  		Call  UseIdleAnimation  ( .Actor:Self .True )
  444:  		Return
  44C:  	Case  ==  .HitResult:Lucky % 5
  458:  		Call  GetActorPos   ( .Actor:Self *Var0 *Var1 *Var2 )
  474:  		Call  RandInt       ( 00000028 *Var1 )
  488:  		Sub   *Var0  *Var1
  498:  		Set   *Var1  000000C8
  4A8:  		Call  GetActorPos   ( .Actor:Self *Var3 *Var4 *Var5 )
  4C4:  		Call  PlayEffect    ( ~FX:Lightning *Var0 *Var1 *Var2 *Var3 00000000 *Var5 *Fixed[1.0] 00000012 00000000 00000000 00000000 00000000 )
  508:  		Thread
  510:  			Wait  10`
  51C:  			Call  GetActorPos   ( .Actor:Self *Var0 *Var1 *Var2 )
  538:  			Add   *Var1  0000000C
  548:  			Call  PlayEffect    ( ~FX:FaintDustCloud *Var0 *Var1 *Var2 *Fixed[3.0] 0000001E 00000000 00000000 00000000 00000000 00000000 00000000 00000000 )
  58C:  			Call  SetAnimation  ( .Actor:Self 00000003 00240008 )
  5A4:  			Call  GetActorPos   ( .Actor:Self *Var0 *Var1 *Var2 )
  5C0:  			Wait  40`
  5CC:  			Sub   *Var0  00000007
  5DC:  			Add   *Var1  0000000E
  5EC:  			Add   *Var2  00000004
  5FC:  			Call  PlayEffect    ( ~FX:Steam:Ring *Var0 *Var1 *Var2 00000000 00000000 00000000 00000000 00000000 00000000 00000000 00000000 00000000 )
  640:  			Wait  20`
  64C:  			Call  SetAnimation  ( .Actor:Self 00000003 00240002 )
  664:  		EndThread
  66C:  		Wait  20`
  678:  		If  *VarA  ==  .HitResult:Lucky % 5
  688:  			Call  EnemyTestTarget   ( .Actor:Self *Var0 ~Flags:DamageType:TriggerLucky 00000000 00000000 00000000 )
  6AC:  		EndIf
  6B4:  		Call  MakeLerp  ( 000000C8 00000000 0000003C .Easing:Linear )
  6D0:  		Label  2
  6DC:  		Call  UpdateLerp ( )
  6E8:  		Call  $Function_80218FA4    ( *Var0 )
  6F8:  		Wait  1`
  704:  		If  *Var1  ==  00000001
  714:  			Goto  2
  720:  		EndIf
  728:  		Wait  20`
  734:  		Call  EnableIdleScript  ( .Actor:Self 00000001 )
  748:  		Call  UseIdleAnimation  ( .Actor:Self .True )
  75C:  		Return
  764:  EndSwitch
  76C:  Call  SetGoalToTarget   ( .Actor:Self )
  77C:  Call  GetGoalPos        ( .Actor:Self *Var3 00000000 *Var5 )
  798:  Call  PlayEffect        ( ~FX:Lightning *Var0 *Var1 *Var2 *Var3 *Var4 *Var5 *Fixed[1.0] 00000012 00000000 00000000 00000000 00000000 )
  7DC:  Wait  14`
  7E8:  Call  EnemyDamageTarget ( .Actor:Self *Var0 ~Flags:DamageType:NoContact|Magic|Electric 00000000 ~DebuffType:0|Paralyzed:0:0` 00000009 00000020 )
  810:  Call  UseBattleCamPreset    ( 00000002 )
  820:  Call  MakeLerp  ( 000000C8 00000000 0000003C .Easing:Linear )
  83C:  Label  2
  848:  Call  UpdateLerp ( )
  854:  Call  $Function_80218FA4    ( *Var0 )
  864:  Wait  1`
  870:  If  *Var1  ==  00000001
  880:  	Goto  2
  88C:  EndIf
  894:  Wait  20`
  8A0:  Call  EnableIdleScript  ( .Actor:Self 00000001 )
  8B4:  Call  UseIdleAnimation  ( .Actor:Self .True )
  8C8:  Return
  8D0:  End
}

#new:Script $Script_8023106C
{
    0:  Call  UseIdleAnimation  ( .Actor:Self .False )
   14:  Call  EnableIdleScript  ( .Actor:Self 00000000 )
   28:  Call  SetTargetActor    ( .Actor:Self .Actor:Player )
   3C:  Call  SetGoalToTarget   ( .Actor:Self )
   4C:  Call  UseBattleCamPreset    ( 0000000E )
   5C:  Call  BattleCamTargetActor  ( .Actor:Self )
   6C:  Call  MoveBattleCamOver (  30` )
   7C:  Wait  30`
   88:  Call  SetAnimation      ( .Actor:Self 00000003 00240006 )
   A0:  Wait  8`
   AC:  Call  PlaySoundAtActor  ( .Actor:Self .Sound:SpellCast1 )
   C0:  Call  GetStatusFlags    ( .Actor:Self *Var0 )
   D4:  If  *Var0  !&  ~Flags:StatusFlags:Shrink % 80000
   E4:  	Set   *Var3  00000000
   F4:  	Set   *Var4  00000024
  104:  	SetF  *Var5  *Fixed[1.0]
  114:  Else
  11C:  	Set   *Var3  00000000
  12C:  	Set   *Var4  0000000E
  13C:  	SetF  *Var5  FA84329A
  14C:  EndIf
  154:  Call  GetActorPos   ( .Actor:Self *Var0 *Var1 *Var2 )
  170:  Add   *Var0  *Var3
  180:  Add   *Var1  *Var4
  190:  Call  PlayEffect    ( ~FX:GatherEnergyPink *Var0 *Var1 *Var2 *Var5 0000001E 00000000 00000000 00000000 00000000 00000000 00000000 00000000 )
  1D4:  Wait  30`
  1E0:  Call  PlaySoundAtActor  ( .Actor:Self 000002F8 )
  1F4:  Call  PlaySoundAtActor  ( .Actor:Self 00000214 )
  208:  Call  GetActorPos   ( .Actor:Self *Var1 *Var2 *Var3 )
  224:  Add   *Var2  00000032
  234:  Call  PlayEffect    ( ~FX:Sparkles:Random *Var1 *Var2 *Var3 0000000A 00000000 00000000 00000000 00000000 00000000 00000000 00000000 00000000 )
  278:  Call  PlayEffect    ( ~FX:Recover:LittleHeart *Var1 *Var2 *Var3 00000000 00000000 00000000 00000000 00000000 00000000 00000000 00000000 00000000 )
  2BC:  Wait  30`
  2C8:  Call  SetAnimation  ( .Actor:Self 00000003 00240002 )
  2E0:  Wait  10`
  2EC:  Call  GetEnemyMaxHP ( .Actor:Self *Var0 )
  300:  Mul   *Var0  00000011
  310:  Div   *Var0  00000064
  320:  Thread
  328:  	Wait  5`
  334:  	Call  PlaySoundAtActor  ( .Actor:Self 0000206D )
  348:  	Call  PlaySoundAtActor  ( .Actor:Self 00000214 )
  35C:  	Wait  30`
  368:  	Call  PlaySoundAtActor  ( .Actor:Self 0000025C )
  37C:  EndThread
  384:  Thread
  38C:  	Call  8026BF48  ( 00000001 )
  39C:  	Call  HealActor ( .Actor:Self *Var0 .False )
  3B4:  	Call  8026BF48  ( 00000000 )
  3C4:  EndThread
  3CC:  Wait  30`
  3D8:  Call  EnableIdleScript  ( .Actor:Self 00000001 )
  3EC:  Call  UseIdleAnimation  ( .Actor:Self .True )
  400:  Return
  408:  End
}

#new:Script $Script_NextTurn_8023147C
{
    0:  Call  UseIdleAnimation  ( .Actor:Self .False )
   14:  Call  EnableIdleScript  ( .Actor:Self 00000000 )
   28:  Call  GetBattlePhase    ( *Var0 )
   38:  Switch  *Var0
   44:  	Case  ==  0000000A
   50:  		Call  GetActorVar   ( .Actor:Self 00000002 *Var0 )
   68:  		If  *Var0  !&  00000001
   78:  			ConstOR  *Var0 00000001
   88:  			Call  SetActorVar       ( .Actor:Self 00000002 *Var0 )
   A0:  			Call  UseBattleCamPreset    ( 0000000E )
   B0:  			Call  BattleCamTargetActor  ( .Actor:Self )
   C0:  			Call  MoveBattleCamOver (  20` )
   D0:  			Call  ActorSpeak        ( 0013005D .Actor:Self 00000001 0021001A 0021001A ) % Here it comes, Mario!! This is the final fight!!!  ...
   F0:  			Call  SetAnimation      ( .Actor:Self 00000001 00210003 )
  108:  		EndIf
  110:  	Case  ==  0000000C
  11C:  	Case  ==  0000000B
  128:  	Case  ==  0000000A
  134:  EndSwitch
  13C:  Call  EnableIdleScript  ( .Actor:Self 00000001 )
  150:  Call  UseIdleAnimation  ( .Actor:Self .True )
  164:  Return
  16C:  End
}

#new:Script $Script_802315F0
{
    0:  Call  GetActorVar   ( .Actor:Self 00000003 *Var0 )
   18:  Switch  *Var1
   24:  	Case  ==  00000000
   30:  		Switch  *Var0
   3C:  			Case  ==  00000002
   48:  				Set   *Var1  00230009
   58:  			Case  ==  00000003
   64:  				Set   *Var1  00240009
   74:  			Default
   7C:  				Set   *Var1  00210011
   8C:  		EndSwitch
   94:  	Case  ==  00000001
   A0:  		Switch  *Var0
   AC:  			Case  ==  00000002
   B8:  				Set   *Var1  0023000A
   C8:  				Set   *Var2  0023000B
   D8:  			Case  ==  00000003
   E4:  				Set   *Var1  0024000A
   F4:  				Set   *Var2  0024000B
  104:  			Default
  10C:  				Set   *Var1  00210028
  11C:  				Set   *Var2  00210029
  12C:  		EndSwitch
  134:  	Case  ==  00000002
  140:  		Switch  *Var0
  14C:  			Case  ==  00000002
  158:  				Set   *Var1  00230010
  168:  			Case  ==  00000003
  174:  				Set   *Var1  0024000F
  184:  			Default
  18C:  				Set   *Var1  0021002A
  19C:  		EndSwitch
  1A4:  	Case  ==  00000003
  1B0:  		Switch  *Var0
  1BC:  			Case  ==  00000002
  1C8:  				Set   *Var1  0023000F
  1D8:  			Case  ==  00000003
  1E4:  				Set   *Var1  0024000E
  1F4:  			Default
  1FC:  				Set   *Var1  00210016
  20C:  		EndSwitch
  214:  	Case  ==  00000004
  220:  		Switch  *Var0
  22C:  			Case  ==  00000002
  238:  				Set   *Var1  00230007
  248:  			Case  ==  00000003
  254:  				Set   *Var1  00240005
  264:  			Default
  26C:  				Set   *Var1  00210009
  27C:  		EndSwitch
  284:  	Default
  28C:  		Switch  *Var0
  298:  			Case  ==  00000002
  2A4:  				Set   *Var1  00230003
  2B4:  			Case  ==  00000003
  2C0:  				Set   *Var1  00240002
  2D0:  			Default
  2D8:  				Set   *Var1  00210003
  2E8:  		EndSwitch
  2F0:  EndSwitch
  2F8:  Return
  300:  End
}

#new:Script $Script_802318F8
{
    0:  Call  GetActorVar   ( .Actor:Self 00000003 *Var0 )
   18:  Switch  *Var0
   24:  	Case  ==  00000002
   30:  		Call  UseBattleCamPreset    ( 00000002 )
   40:  		Call  GetActorPos   ( .Actor:Self *Var0 *Var1 *Var2 )
   5C:  		If  *Var1  ==  00000000
   6C:  			Goto  0
   78:  		EndIf
   80:  		Call  PlaySoundAtActor  ( .Actor:Self 00000301 )
   94:  		Call  8027D32C  ( FFFFFF81 )
   A4:  		Call  SetGoalPos        ( .Actor:Self *Var0  0` *Var2 )
   C0:  		Call  SetActorJumpGravity   ( .Actor:Self *Fixed[1.2] )
   D4:  		Call  FallToGoal        ( .Actor:Self  10` )
   E8:  		Call  SetActorJumpGravity   ( .Actor:Self *Fixed[0.8] )
   FC:  		Call  JumpToGoal        ( .Actor:Self  8` .False .True .False )
  11C:  		Call  HPBarToCurrent    ( .Actor:Self )
  12C:  		Call  8027D2D8  ( FFFFFF81 )
  13C:  		Label  0
  148:  		Thread
  150:  			Call  GetActorPos   ( .Actor:Self *Var0 *Var1 *Var2 )
  16C:  			Add   *Var1  0000000A
  17C:  			Add   *Var2  0000000A
  18C:  			Loop  00000003
  198:  				Call  PlayEffect    ( ~FX:BigSmokePuff *Var0 *Var1 *Var2 00000000 00000000 00000000 00000000 00000000 00000000 00000000 00000000 00000000 00000000 )
  1DC:  				Wait  3`
  1E8:  			EndLoop
  1F0:  		EndThread
  1F8:  		Call  SetPartFlagBits   ( .Actor:Self 00000002 00000001 .True )
  214:  		Call  SetPartFlagBits   ( .Actor:Self 00000001 00000001 .False )
  230:  		Call  SetAnimation      ( .Actor:Self 00000001 00210015 )
  248:  		Call  GetActorPos       ( .Actor:Self *Var0 *Var1 *Var2 )
  264:  		Sub   *Var0  00000005
  274:  		Call  SetActorPos       ( .Actor:Self *Var0 *Var1 *Var2 )
  290:  		Wait  15`
  29C:  		Call  PlaySound ( 000003E5 )
  2AC:  		Call  DropStarPoints    ( .Actor:Self )
  2BC:  		Call  SetActorYaw       ( .Actor:Self  0` )
  2D0:  		Call  UseBattleCamPreset    ( 0000000E )
  2E0:  		Call  SetBattleCamZoom  (  260` )
  2F0:  		Call  SetBattleCamOffsetZ   (  15` )
  300:  		Call  BattleCamTargetActor  ( .Actor:Self )
  310:  		Call  MoveBattleCamOver (  30` )
  320:  		Call  PlaySoundAtActor  ( .Actor:Self 000020E5 )
  334:  		Call  SetAnimation      ( .Actor:Self 00000001 00210014 )
  34C:  		Wait  60`
  358:  		Call  SetActorFlagBits  ( .Actor:Self 00400000 .True )
  370:  		Return
  378:  	Case  ==  00000003
  384:  		Call  8027D32C  ( FFFFFF81 )
  394:  		Call  UseIdleAnimation  ( .Actor:Self .False )
  3A8:  		Call  80269E80  ( *Var5 )
  3B8:  		Switch  *Var5
  3C4:  			CaseOR  ==  0000000A
  3D0:  			CaseOR  ==  0000000E
  3DC:  			CaseOR  ==  0000000C
  3E8:  			CaseOR  ==  00000010
  3F4:  			CaseOR  ==  0000000B
  400:  			CaseOR  ==  0000000F
  40C:  			CaseOR  ==  0000000D
  418:  			CaseOR  ==  00000011
  424:  			CaseOR  ==  00000002
  430:  			EndCaseGroup
  438:  			Default
  440:  				Set   *Var2  00000000
  450:  				Loop  00000018
  45C:  					Call  SetActorYaw   ( .Actor:Self *Var2 )
  470:  					Add   *Var2  0000001E
  480:  					Wait  1`
  48C:  				EndLoop
  494:  				Call  SetActorYaw   ( .Actor:Self  0` )
  4A8:  		EndSwitch
  4B0:  		Thread
  4B8:  			Call  GetActorPos   ( .Actor:Self *Var0 *Var1 *Var2 )
  4D4:  			Add   *Var1  0000000A
  4E4:  			Add   *Var2  0000000A
  4F4:  			Loop  00000003
  500:  				Call  PlayEffect    ( ~FX:BigSmokePuff *Var0 *Var1 *Var2 00000000 00000000 00000000 00000000 00000000 00000000 00000000 00000000 00000000 00000000 )
  544:  				Wait  3`
  550:  			EndLoop
  558:  		EndThread
  560:  		Call  SetPartFlagBits   ( .Actor:Self 00000003 00000001 .True )
  57C:  		Call  SetPartFlagBits   ( .Actor:Self 00000001 00000001 .False )
  598:  		Call  SetAnimation      ( .Actor:Self 00000001 00210015 )
  5B0:  		Call  GetActorPos       ( .Actor:Self *Var0 *Var1 *Var2 )
  5CC:  		Sub   *Var0  00000005
  5DC:  		Call  SetActorPos       ( .Actor:Self *Var0 *Var1 *Var2 )
  5F8:  		Wait  15`
  604:  		Call  PlaySound ( 000003E5 )
  614:  		Call  DropStarPoints    ( .Actor:Self )
  624:  		Call  SetActorYaw       ( .Actor:Self  0` )
  638:  		Call  UseBattleCamPreset    ( 0000000E )
  648:  		Call  SetBattleCamZoom  (  260` )
  658:  		Call  SetBattleCamOffsetZ   (  15` )
  668:  		Call  BattleCamTargetActor  ( .Actor:Self )
  678:  		Call  MoveBattleCamOver (  30` )
  688:  		Call  PlaySoundAtActor  ( .Actor:Self 000020E5 )
  69C:  		Call  SetAnimation      ( .Actor:Self 00000001 00210014 )
  6B4:  		Call  SetIdleAnimations ( .Actor:Self 00000001 $IdleAnimations_8022C40C )
  6CC:  		Wait  60`
  6D8:  		Call  SetActorFlagBits  ( .Actor:Self 00400000 .True )
  6F0:  		Return
  6F8:  	Default
  700:  		Set   *Var1  00000000
  710:  		ExecWait  $Script_802315F0
  71C:  		ExecWait  $Script_8022CC74
  728:  		Return
  730:  EndSwitch
  738:  Return
  740:  End
}

#new:Script $Script_80232040
{
    0:  Call  ResetAllActorSounds   ( .Actor:Self )
   10:  Call  GetActorVar   ( .Actor:Self 00000003 *Var0 )
   28:  Switch  *Var0
   34:  	Case  ==  00000002
   40:  		Set   *Var1  00000004
   50:  		ExecWait  $Script_802315F0
   5C:  		Call  SetAnimation  ( .Actor:Self *Var0 *Var1 )
   74:  		Call  SetActorSpeed ( .Actor:Self *Fixed[8.0] )
   88:  		Call  SetGoalToHome ( .Actor:Self )
   98:  		Call  FlyToGoal     ( .Actor:Self  0`  -5` .Easing:Linear )
   B4:  	Case  ==  00000003
   C0:  		Set   *Var1  00000004
   D0:  		ExecWait  $Script_802315F0
   DC:  		ExecWait  DoReturnHome
   E8:  	Default
   F0:  		Set   *Var1  00000004
  100:  		ExecWait  $Script_802315F0
  10C:  		ExecWait  DoReturnHome
  118:  EndSwitch
  120:  Return
  128:  End
}

#new:Script $Script_80232170
{
    0:  Call  GetActorVar   ( .Actor:Self 00000001 *Var0 )
   18:  If  *Var0  ==  00000001
   28:  	Wait  10`
   34:  	ExecWait  $Script_8022CB2C
   40:  	Call  GetActorVar   ( .Actor:Self 00000003 *Var0 )
   58:  	Switch  *Var0
   64:  		Case  ==  00000002
   70:  			Call  ActorSpeak    ( 001D019A .Actor:Self 00000002 0023000F 00230003 ) % Don't underestimate me, Mario! I'll never be be sc ...
   90:  		Case  ==  00000003
   9C:  			Call  ActorSpeak    ( 001D019A .Actor:Self 00000003 0024000E 00240003 ) % Don't underestimate me, Mario! I'll never be be sc ...
   BC:  		Default
   C4:  			Call  ActorSpeak    ( 001D019A .Actor:Self 00000001 00210016 00210003 ) % Don't underestimate me, Mario! I'll never be be sc ...
   E4:  	EndSwitch
   EC:  	Call  GetActorVar   ( .Actor:Self 00000000 *Var0 )
  104:  	If  *Var0  !=  00000001
  114:  		ExecWait  $Script_8022CBC4
  120:  	EndIf
  128:  EndIf
  130:  Call  SetActorVar   ( .Actor:Self 00000001 00000000 )
  148:  Return
  150:  End
}

PADDING: 802322C8 to 802322D0 (00461708 to 00461710)
00000000 00000000

#new:Script $Script_BeforeBattle_802322D0
{
    0:  Call  SetSpriteShading  ( FFFFFFFF )
   10:  Return
   18:  End
}

#new:Script $Script_AfterBattle_802322F0
{
    0:  Return
    8:  End
}

#new:Stage $Stage_80232300
{
	$ASCII_80234EA0  % kmr_tex
	$ASCII_80234E90  % kmr_bt02_shape
	00000000
	$Script_BeforeBattle_802322D0
	$Script_AfterBattle_802322F0
	$ASCII_80234E88  % kmr_bg
	00000000
	00000000
	00000000
	00000000
}

PADDING: 80232328 to 80232330 (00461768 to 00461770)
00000000 00000000

#new:Script $Script_80232330
{
    0:  Set   *VarA  *Var0
   10:  Set   *Var7  *Var2
   20:  Mul   *Var7  0000000A
   30:  Label  0
   3C:  Add   *Var7  00000004
   4C:  If  *Var7  >  00000E0F
   5C:  	Sub   *Var7  00000E10
   6C:  EndIf
   74:  Call  $Function_80218FE0    ( *Var7 *Var0 *Var1 *Var2 *Var3 )
   94:  Call  TranslateModel        ( *VarA *Var0 *Var1 *Var2 )
   B0:  Call  RotateModel   ( *VarA *Var3 00000000 00000001 00000000 )
   D0:  Wait  1`
   DC:  Goto  0
   E8:  Return
   F0:  End
}

% Origin: HEURISTIC
#new:Script $Script_80232428
{
    0:  Set   *VarA  *Var0
   10:  Set   *VarB  *Var3
   20:  Set   *VarC  *Var4
   30:  Set   *Var7  *Var2
   40:  Mul   *Var7  0000000A
   50:  Label  0
   5C:  Add   *Var7  00000004
   6C:  If  *Var7  >  00000E0F
   7C:  	Sub   *Var7  00000E10
   8C:  EndIf
   94:  Call  $Function_80218FE0    ( *Var7 *Var0 *Var1 *Var2 *Var3 )
   B4:  AddF  *Var1  *VarB
   C4:  AddF  *Var2  *VarC
   D4:  Call  TranslateModel        ( *VarA *Var0 *Var1 *Var2 )
   F0:  Call  RotateModel   ( *VarA *Var3 00000000 00000001 00000000 )
  110:  Wait  1`
  11C:  Goto  0
  128:  Return
  130:  End
}

% Origin: HEURISTIC
#new:Script $Script_80232560
{
    0:  Set   *VarA  *Var0
   10:  Set   *VarB  *Var3
   20:  Set   *VarC  *Var4
   30:  Set   *VarD  *Var5
   40:  Set   *Var7  *Var2
   50:  Mul   *Var7  0000000A
   60:  Label  0
   6C:  Add   *Var7  00000004
   7C:  If  *Var7  >  00000E0F
   8C:  	Sub   *Var7  00000E10
   9C:  EndIf
   A4:  Call  $Function_80218FE0    ( *Var7 *Var0 *Var1 *Var2 *Var3 )
   C4:  AddF  *Var0  *VarB
   D4:  AddF  *Var1  *VarC
   E4:  AddF  *Var2  *VarD
   F4:  Call  TranslateModel        ( *VarA *Var0 *Var1 *Var2 )
  110:  Call  RotateModel   ( *VarA *Var3 00000000 00000001 00000000 )
  130:  Wait  1`
  13C:  Goto  0
  148:  Return
  150:  End
}

#new:Script $Script_BeforeBattle_802326B8
{
    0:  Call  SetSpriteShading  ( FFFFFFFF )
   10:  Set   *Var0  00000001
   20:  Set   *Var2  00000000
   30:  Exec  $Script_80232330
   3C:  Set   *Var0  00000004
   4C:  Set   *Var2  00000046
   5C:  Exec  $Script_80232330
   68:  Return
   70:  End
}

#new:Script $Script_AfterBattle_80232730
{
    0:  Return
    8:  End
}

#new:ForegroundModelList $ForegroundModelList_80232740
{
	~Model:kmr_bt03:n2
	~Model:kmr_bt03:m4
	00000000
}

#new:Stage $Stage_8023274C
{
	$ASCII_80234ED0  % kmr_tex
	$ASCII_80234EC0  % kmr_bt03_shape
	$ASCII_80234EB0  % kmr_bt03_hit
	$Script_BeforeBattle_802326B8
	$Script_AfterBattle_80232730
	$ASCII_80234EA8  % kmr_bg
	$ForegroundModelList_80232740
	00000000
	00000000
	00000000
}

PADDING: 80232774 to 80232780 (00461BB4 to 00461BC0)
00000000 00000000 00000000

#new:Script $Script_80232780
{
    0:  Set   *VarA  *Var0
   10:  Set   *Var7  *Var2
   20:  Mul   *Var7  0000000A
   30:  Label  0
   3C:  Add   *Var7  00000004
   4C:  If  *Var7  >  00000E0F
   5C:  	Sub   *Var7  00000E10
   6C:  EndIf
   74:  Call  $Function_80219250    ( *Var7 *Var0 *Var1 *Var2 *Var3 )
   94:  Call  TranslateModel        ( *VarA *Var0 *Var1 *Var2 )
   B0:  Call  RotateModel   ( *VarA *Var3 00000000 00000001 00000000 )
   D0:  Wait  1`
   DC:  Goto  0
   E8:  Return
   F0:  End
}

% Origin: HEURISTIC
#new:Script $Script_80232878
{
    0:  Set   *VarA  *Var0
   10:  Set   *VarB  *Var3
   20:  Set   *VarC  *Var4
   30:  Set   *Var7  *Var2
   40:  Mul   *Var7  0000000A
   50:  Label  0
   5C:  Add   *Var7  00000004
   6C:  If  *Var7  >  00000E0F
   7C:  	Sub   *Var7  00000E10
   8C:  EndIf
   94:  Call  $Function_80219250    ( *Var7 *Var0 *Var1 *Var2 *Var3 )
   B4:  AddF  *Var1  *VarB
   C4:  AddF  *Var2  *VarC
   D4:  Call  TranslateModel        ( *VarA *Var0 *Var1 *Var2 )
   F0:  Call  RotateModel   ( *VarA *Var3 00000000 00000001 00000000 )
  110:  Wait  1`
  11C:  Goto  0
  128:  Return
  130:  End
}

% Origin: HEURISTIC
#new:Script $Script_802329B0
{
    0:  Set   *VarA  *Var0
   10:  Set   *VarB  *Var3
   20:  Set   *VarC  *Var4
   30:  Set   *VarD  *Var5
   40:  Set   *Var7  *Var2
   50:  Mul   *Var7  0000000A
   60:  Label  0
   6C:  Add   *Var7  00000004
   7C:  If  *Var7  >  00000E0F
   8C:  	Sub   *Var7  00000E10
   9C:  EndIf
   A4:  Call  $Function_80219250    ( *Var7 *Var0 *Var1 *Var2 *Var3 )
   C4:  AddF  *Var0  *VarB
   D4:  AddF  *Var1  *VarC
   E4:  AddF  *Var2  *VarD
   F4:  Call  TranslateModel        ( *VarA *Var0 *Var1 *Var2 )
  110:  Call  RotateModel   ( *VarA *Var3 00000000 00000001 00000000 )
  130:  Wait  1`
  13C:  Goto  0
  148:  Return
  150:  End
}

#new:Script $Script_BeforeBattle_80232B08
{
    0:  Call  SetSpriteShading  ( FFFFFFFF )
   10:  Set   *Var0  00000001
   20:  Set   *Var2  00000000
   30:  Exec  $Script_80232780
   3C:  Set   *Var0  00000004
   4C:  Set   *Var2  00000046
   5C:  Exec  $Script_80232780
   68:  Return
   70:  End
}

#new:Script $Script_AfterBattle_80232B80
{
    0:  Return
    8:  End
}

#new:ForegroundModelList $ForegroundModelList_80232B90
{
	~Model:kmr_bt04:m4
	~Model:kmr_bt04:n2
	00000000
}

#new:Stage $Stage_80232B9C
{
	$ASCII_80234F00  % kmr_tex
	$ASCII_80234EF0  % kmr_bt04_shape
	$ASCII_80234EE0  % kmr_bt04_hit
	$Script_BeforeBattle_80232B08
	$Script_AfterBattle_80232B80
	$ASCII_80234ED8  % kmr_bg
	$ForegroundModelList_80232B90
	00000000
	00000000
	00000000
}

PADDING: 80232BC4 to 80232BD0 (00462004 to 00462010)
00000000 00000000 00000000

% Origin: HEURISTIC
#new:Script $Script_80232BD0
{
    0:  Set   *VarA  *Var0
   10:  Set   *Var7  *Var2
   20:  Mul   *Var7  0000000A
   30:  Label  0
   3C:  Add   *Var7  00000004
   4C:  If  *Var7  >  00000E0F
   5C:  	Sub   *Var7  00000E10
   6C:  EndIf
   74:  Call  $Function_802194C0    ( *Var7 *Var0 *Var1 *Var2 *Var3 )
   94:  Call  TranslateModel        ( *VarA *Var0 *Var1 *Var2 )
   B0:  Call  RotateModel   ( *VarA *Var3 00000000 00000001 00000000 )
   D0:  Wait  1`
   DC:  Goto  0
   E8:  Return
   F0:  End
}

% Origin: HEURISTIC
#new:Script $Script_80232CC8
{
    0:  Set   *VarA  *Var0
   10:  Set   *VarB  *Var3
   20:  Set   *VarC  *Var4
   30:  Set   *Var7  *Var2
   40:  Mul   *Var7  0000000A
   50:  Label  0
   5C:  Add   *Var7  00000004
   6C:  If  *Var7  >  00000E0F
   7C:  	Sub   *Var7  00000E10
   8C:  EndIf
   94:  Call  $Function_802194C0    ( *Var7 *Var0 *Var1 *Var2 *Var3 )
   B4:  AddF  *Var1  *VarB
   C4:  AddF  *Var2  *VarC
   D4:  Call  TranslateModel        ( *VarA *Var0 *Var1 *Var2 )
   F0:  Call  RotateModel   ( *VarA *Var3 00000000 00000001 00000000 )
  110:  Wait  1`
  11C:  Goto  0
  128:  Return
  130:  End
}

% Origin: HEURISTIC
#new:Script $Script_80232E00
{
    0:  Set   *VarA  *Var0
   10:  Set   *VarB  *Var3
   20:  Set   *VarC  *Var4
   30:  Set   *VarD  *Var5
   40:  Set   *Var7  *Var2
   50:  Mul   *Var7  0000000A
   60:  Label  0
   6C:  Add   *Var7  00000004
   7C:  If  *Var7  >  00000E0F
   8C:  	Sub   *Var7  00000E10
   9C:  EndIf
   A4:  Call  $Function_802194C0    ( *Var7 *Var0 *Var1 *Var2 *Var3 )
   C4:  AddF  *Var0  *VarB
   D4:  AddF  *Var1  *VarC
   E4:  AddF  *Var2  *VarD
   F4:  Call  TranslateModel        ( *VarA *Var0 *Var1 *Var2 )
  110:  Call  RotateModel   ( *VarA *Var3 00000000 00000001 00000000 )
  130:  Wait  1`
  13C:  Goto  0
  148:  Return
  150:  End
}

#new:Script $Script_BeforeBattle_80232F58
{
    0:  Call  SetSpriteShading  ( FFFFFFFF )
   10:  Call  EnableModel       ( ~Model:kmr_bt05:yuka .False )
   24:  Call  EnableModel       ( ~Model:kmr_bt05:o303 .False )
   38:  Return
   40:  End
}

#new:Script $Script_AfterBattle_80232FA0
{
    0:  Return
    8:  End
}

#new:ForegroundModelList $ForegroundModelList_80232FB0
{
	~Model:kmr_bt05:n2
	~Model:kmr_bt05:m4
	00000000
}

#new:Stage $Stage_80232FBC
{
	$ASCII_80234F30  % kmr_tex
	$ASCII_80234F20  % kmr_bt05_shape
	$ASCII_80234F10  % kmr_bt05_hit
	$Script_BeforeBattle_80232F58
	$Script_AfterBattle_80232FA0
	$ASCII_80234F08  % kmr_bg
	$ForegroundModelList_80232FB0
	00000000
	00000000
	00000000
}

PADDING: 80232FE4 to 80232FF0 (00462424 to 00462430)
00000000 00000000 00000000

#new:Script $Script_80232FF0
{
    0:  Set   *VarA  *Var0
   10:  Set   *Var7  *Var2
   20:  Mul   *Var7  0000000A
   30:  Label  0
   3C:  Add   *Var7  00000004
   4C:  If  *Var7  >  00000E0F
   5C:  	Sub   *Var7  00000E10
   6C:  EndIf
   74:  Call  $Function_80219730    ( *Var7 *Var0 *Var1 *Var2 *Var3 )
   94:  Call  TranslateModel        ( *VarA *Var0 *Var1 *Var2 )
   B0:  Call  RotateModel   ( *VarA *Var3 00000000 00000001 00000000 )
   D0:  Wait  1`
   DC:  Goto  0
   E8:  Return
   F0:  End
}

% Origin: HEURISTIC
#new:Script $Script_802330E8
{
    0:  Set   *VarA  *Var0
   10:  Set   *VarB  *Var3
   20:  Set   *VarC  *Var4
   30:  Set   *Var7  *Var2
   40:  Mul   *Var7  0000000A
   50:  Label  0
   5C:  Add   *Var7  00000004
   6C:  If  *Var7  >  00000E0F
   7C:  	Sub   *Var7  00000E10
   8C:  EndIf
   94:  Call  $Function_80219730    ( *Var7 *Var0 *Var1 *Var2 *Var3 )
   B4:  AddF  *Var1  *VarB
   C4:  AddF  *Var2  *VarC
   D4:  Call  TranslateModel        ( *VarA *Var0 *Var1 *Var2 )
   F0:  Call  RotateModel   ( *VarA *Var3 00000000 00000001 00000000 )
  110:  Wait  1`
  11C:  Goto  0
  128:  Return
  130:  End
}

% Origin: HEURISTIC
#new:Script $Script_80233220
{
    0:  Set   *VarA  *Var0
   10:  Set   *VarB  *Var3
   20:  Set   *VarC  *Var4
   30:  Set   *VarD  *Var5
   40:  Set   *Var7  *Var2
   50:  Mul   *Var7  0000000A
   60:  Label  0
   6C:  Add   *Var7  00000004
   7C:  If  *Var7  >  00000E0F
   8C:  	Sub   *Var7  00000E10
   9C:  EndIf
   A4:  Call  $Function_80219730    ( *Var7 *Var0 *Var1 *Var2 *Var3 )
   C4:  AddF  *Var0  *VarB
   D4:  AddF  *Var1  *VarC
   E4:  AddF  *Var2  *VarD
   F4:  Call  TranslateModel        ( *VarA *Var0 *Var1 *Var2 )
  110:  Call  RotateModel   ( *VarA *Var3 00000000 00000001 00000000 )
  130:  Wait  1`
  13C:  Goto  0
  148:  Return
  150:  End
}

#new:Script $Script_BeforeBattle_80233378
{
    0:  Call  SetSpriteShading  ( FFFFFFFF )
   10:  Call  $Function_80219998 ( )
   1C:  Set   *Var0  00000001
   2C:  Set   *Var2  00000000
   3C:  Exec  $Script_80232FF0
   48:  Set   *Var0  00000004
   58:  Set   *Var2  00000046
   68:  Exec  $Script_80232FF0
   74:  Return
   7C:  End
}

#new:Script $Script_AfterBattle_802333FC
{
    0:  Return
    8:  End
}

#new:ForegroundModelList $ForegroundModelList_8023340C
{
	~Model:kmr_bt06:n2
	~Model:kmr_bt06:o303
	~Model:kmr_bt06:ha3
	00000000
}

#new:Stage $Stage_8023341C
{
	$ASCII_80234F60  % kmr_tex
	$ASCII_80234F50  % kmr_bt06_shape
	$ASCII_80234F40  % kmr_bt06_hit
	$Script_BeforeBattle_80233378
	$Script_AfterBattle_802333FC
	$ASCII_80234F38  % kmr_bg
	$ForegroundModelList_8023340C
	00000000
	00000000
	00000000
}

PADDING: 80233444 to 80233450 (00462884 to 00462890)
00000000 00000000 00000000

#new:Script $Script_80233450
{
    0:  Set   *VarA  *Var0
   10:  Label  0
   1C:  Call  TranslateModel    ( *VarA 00000000 00000002 00000000 )
   38:  Wait  5`
   44:  Call  TranslateModel    ( *VarA 00000000 00000000 00000000 )
   60:  Wait  5`
   6C:  Call  TranslateModel    ( *VarA 00000000 00000002 00000000 )
   88:  Wait  5`
   94:  Call  TranslateModel    ( *VarA 00000000 00000000 00000000 )
   B0:  Wait  5`
   BC:  Call  RandInt   ( 0000001E *Var0 )
   D0:  Add   *Var0  0000001E
   E0:  Wait  *Var0
   EC:  Goto  0
   F8:  Return
  100:  End
}

#new:Script $Script_BeforeBattle_80233558
{
    0:  Call  SetSpriteShading  ( FFFFFFFF )
   10:  Set   *Var0  00000013
   20:  Exec  $Script_80233450
   2C:  Set   *Var0  00000014
   3C:  Exec  $Script_80233450
   48:  Set   *Var0  00000015
   58:  Exec  $Script_80233450
   64:  Set   *Var0  00000016
   74:  Exec  $Script_80233450
   80:  Set   *Var0  00000017
   90:  Exec  $Script_80233450
   9C:  Set   *Var0  00000018
   AC:  Exec  $Script_80233450
   B8:  Return
   C0:  End
}

#new:Script $Script_AfterBattle_80233620
{
    0:  Return
    8:  End
}

#new:ForegroundModelList $ForegroundModelList_80233630
{
	~Model:nok_bt01:ha3
	~Model:nok_bt01:hap
	~Model:nok_bt01:kusa3
	00000000
}

#new:Stage $Stage_80233640
{
	$ASCII_80234F90  % nok_tex
	$ASCII_80234F80  % nok_bt01_shape
	$ASCII_80234F70  % nok_bt01_hit
	$Script_BeforeBattle_80233558
	$Script_AfterBattle_80233620
	$ASCII_80234F68  % nok_bg
	$ForegroundModelList_80233630
	00000000
	00000000
	00000000
}

PADDING: 80233668 to 80233670 (00462AA8 to 00462AB0)
00000000 00000000

#new:Script $Script_BeforeBattle_80233670
{
    0:  Call  SetSpriteShading  ( FFFFFFFF )
   10:  Call  $Function_802199E0 ( )
   1C:  Return
   24:  End
}

#new:Script $Script_AfterBattle_8023369C
{
    0:  Return
    8:  End
}

#new:Stage $Stage_802336AC
{
	$ASCII_80234FB8  % mim_tex
	$ASCII_80234FA8  % mim_bt01_shape
	$ASCII_80234F98  % mim_bt01_hit
	$Script_BeforeBattle_80233670
	$Script_AfterBattle_8023369C
	00000000
	00000000
	00000000
	00000000
	00000000
}

PADDING: 802336D4 to 802336E0 (00462B14 to 00462B20)
00000000 00000000 00000000

% Origin: HEURISTIC
#new:Unknown $???_802336E0
{
	00000000 00000000 00000000 00000000
}

#new:Script $Script_802336F0
{
    0:  Call  $Function_80219C38 ( )
    C:  Loop
   18:  	Wait  1`
   24:  EndLoop
   2C:  Return
   34:  End
}

#new:Script $Script_8023372C
{
    0:  Set   *VarA  *Var0
   10:  Label  0
   1C:  Call  RandInt   ( 0000001E *Var0 )
   30:  Add   *Var0  0000001E
   40:  Wait  *Var0
   4C:  Set   *Var1  00000000
   5C:  Loop  0000000A
   68:  	Add   *Var1  00000024
   78:  	Call  RotateModel   ( *VarA *Var1 00000000 00000001 00000000 )
   98:  	Wait  1`
   A4:  EndLoop
   AC:  Goto  0
   B8:  Return
   C0:  End
}

#new:Script $Script_802337F4
{
    0:  Set   *VarA  *Var0
   10:  Set   *VarB  *Var1
   20:  Exec  $Script_8023372C
   2C:  Set   *Var7  00000000
   3C:  Label  0
   48:  Add   *Var7  00000004
   58:  If  *Var7  >  00000E0F
   68:  	Sub   *Var7  00000E10
   78:  EndIf
   80:  Call  $Function_80219C5C    ( *Var7 *Var0 *Var1 *Var2 )
   9C:  Call  TranslateModel        ( *VarA *Var0 *Var1 *Var2 )
   B8:  Wait  1`
   C4:  Goto  0
   D0:  Return
   D8:  End
}

% Origin: HEURISTIC
#new:Script $Script_802338D4
{
    0:  Set   *VarA  *Var0
   10:  Set   *Var7  00000000
   20:  Label  0
   2C:  Add   *Var7  00000004
   3C:  If  *Var7  >  00000E0F
   4C:  	Sub   *Var7  00000E10
   5C:  EndIf
   64:  Call  $Function_80219C5C    ( *Var7 *Var0 *Var1 *Var2 )
   80:  Call  TranslateModel        ( *VarA *Var0 *Var1 *Var2 )
   9C:  Wait  1`
   A8:  Goto  0
   B4:  Return
   BC:  End
}

#new:Script $Script_BeforeBattle_80233998
{
    0:  Call  SetSpriteShading  ( FFFFFFFF )
   10:  Exec  $Script_802336F0
   1C:  Thread
   24:  	Set   *Var0  00000016
   34:  	Set   *Var1  00000001
   44:  	Exec  $Script_802337F4
   50:  	Wait  5`
   5C:  	Set   *Var0  00000014
   6C:  	Set   *Var1  00000003
   7C:  	Exec  $Script_802337F4
   88:  	Wait  5`
   94:  	Set   *Var0  00000012
   A4:  	Set   *Var1  00000004
   B4:  	Exec  $Script_802337F4
   C0:  	Wait  5`
   CC:  	Set   *Var0  00000010
   DC:  	Set   *Var1  00000002
   EC:  	Exec  $Script_802337F4
   F8:  EndThread
  100:  Return
  108:  End
}

#new:Script $Script_AfterBattle_80233AA8
{
    0:  Return
    8:  End
}

#new:ForegroundModelList $ForegroundModelList_80233AB8
{
	FFFFFFFF
	~Model:sam_bt01:saku
	00000000
}

#new:Stage $Stage_80233AC4
{
	$ASCII_80234FE8  % sam_tex
	$ASCII_80234FD8  % sam_bt01_shape
	$ASCII_80234FC8  % sam_bt01_hit
	$Script_BeforeBattle_80233998
	$Script_AfterBattle_80233AA8
	$ASCII_80234FC0  % yki_bg
	$ForegroundModelList_80233AB8
	00000000
	00000000
	00000000
}

PADDING: 80233AEC to 80233AF0 (00462F2C to 00462F30)
00000000

#new:Script $Script_80233AF0
{
    0:  Set   *VarA  *Var0
   10:  Label  0
   1C:  Call  $Function_80219D60    ( 00000000 )
   2C:  Call  TranslateModel        ( *VarA *Var0 *Var1 *Var2 )
   48:  Call  RotateModel   ( *VarA FFFFFFEC 00000000 00000000 00000001 )
   68:  Wait  1`
   74:  Loop
   80:  	Call  $Function_80219D60    ( 00000001 )
   90:  	Call  TranslateModel        ( *VarA *Var0 *Var1 *Var2 )
   AC:  	Call  RotateModel   ( *VarA FFFFFFEC 00000000 00000000 00000001 )
   CC:  	Wait  1`
   D8:  	If  *VarB  ==  00000001
   E8:  		BreakLoop
   F0:  	EndIf
   F8:  EndLoop
  100:  Call  TranslateModel    ( *VarA *Var0 *Var1 *Var2 )
  11C:  Call  RotateModel       ( *VarA FFFFFFF9 00000000 00000000 00000001 )
  13C:  Wait  5`
  148:  Call  TranslateModel    ( *VarA *Var0 *Var1 *Var2 )
  164:  Call  RotateModel       ( *VarA FFFFFFE5 00000000 00000000 00000001 )
  184:  Wait  2`
  190:  Call  TranslateModel    ( *VarA *Var0 *Var1 *Var2 )
  1AC:  Call  RotateModel       ( *VarA FFFFFFFB 00000000 00000000 00000001 )
  1CC:  Wait  3`
  1D8:  Call  TranslateModel    ( *VarA *Var0 *Var1 *Var2 )
  1F4:  Call  RotateModel       ( *VarA FFFFFFEC 00000000 00000000 00000001 )
  214:  Wait  5`
  220:  Loop
  22C:  	Call  $Function_80219D60    ( 00000002 )
  23C:  	Call  TranslateModel        ( *VarA *Var0 *Var1 *Var2 )
  258:  	Call  RotateModel   ( *VarA FFFFFFEC 00000000 00000000 00000001 )
  278:  	Wait  1`
  284:  	If  *VarB  ==  00000002
  294:  		BreakLoop
  29C:  	EndIf
  2A4:  EndLoop
  2AC:  Call  RandInt   ( 00000050 *VarB )
  2C0:  Add   *VarB  0000001E
  2D0:  Loop  *VarB
  2DC:  	Call  TranslateModel    ( *VarA *Var0 *Var1 *Var2 )
  2F8:  	Call  RotateModel       ( *VarA FFFFFFEC 00000000 00000000 00000001 )
  318:  	Wait  1`
  324:  EndLoop
  32C:  Call  RandInt   ( 00000005 *Var0 )
  340:  If  *Var0  !=  00000000
  350:  	Goto  0
  35C:  EndIf
  364:  Call  $Function_80219D60    ( 00000003 )
  374:  Call  TranslateModel        ( *VarA *Var0 *Var1 *Var2 )
  390:  Call  RotateModel   ( *VarA FFFFFFEC 00000000 00000000 00000001 )
  3B0:  Wait  1`
  3BC:  Loop
  3C8:  	Call  $Function_80219D60    ( 00000001 )
  3D8:  	Call  TranslateModel        ( *VarA *Var0 *Var1 *Var2 )
  3F4:  	Call  RotateModel   ( *VarA FFFFFFEC 00000000 00000000 00000001 )
  414:  	Wait  1`
  420:  	If  *VarB  ==  00000001
  430:  		BreakLoop
  438:  	EndIf
  440:  EndLoop
  448:  Call  TranslateModel    ( *VarA *Var0 *Var1 *Var2 )
  464:  Call  RotateModel       ( *VarA FFFFFFF9 00000000 00000000 00000001 )
  484:  Wait  5`
  490:  Call  TranslateModel    ( *VarA *Var0 *Var1 *Var2 )
  4AC:  Call  RotateModel       ( *VarA FFFFFFE5 00000000 00000000 00000001 )
  4CC:  Wait  2`
  4D8:  Call  TranslateModel    ( *VarA *Var0 *Var1 *Var2 )
  4F4:  Call  RotateModel       ( *VarA FFFFFFFB 00000000 00000000 00000001 )
  514:  Wait  3`
  520:  Call  TranslateModel    ( *VarA *Var0 *Var1 *Var2 )
  53C:  Call  RotateModel       ( *VarA FFFFFFEC 00000000 00000000 00000001 )
  55C:  Wait  5`
  568:  Loop
  574:  	Call  $Function_80219D60    ( 00000002 )
  584:  	Call  TranslateModel        ( *VarA *Var0 *Var1 *Var2 )
  5A0:  	Call  RotateModel   ( *VarA FFFFFFEC 00000000 00000000 00000001 )
  5C0:  	Wait  1`
  5CC:  	If  *VarB  ==  00000002
  5DC:  		BreakLoop
  5E4:  	EndIf
  5EC:  EndLoop
  5F4:  Call  RandInt   ( 00000050 *VarB )
  608:  Add   *VarB  0000001E
  618:  Loop  *VarB
  624:  	Call  TranslateModel    ( *VarA *Var0 *Var1 *Var2 )
  640:  	Call  RotateModel       ( *VarA FFFFFFEC 00000000 00000000 00000001 )
  660:  	Wait  1`
  66C:  EndLoop
  674:  Goto  0
  680:  Return
  688:  End
}

#new:Script $Script_80234180
{
    0:  Set   *VarA  *Var0
   10:  Loop
   1C:  	Call  TranslateModel    ( *VarA 00000001 00000000 00000000 )
   38:  	Wait  2`
   44:  	Call  TranslateModel    ( *VarA 00000001 00000000 00000000 )
   60:  	Wait  2`
   6C:  	Call  TranslateModel    ( *VarA 00000001 FFFFFFFF 00000000 )
   88:  	Wait  2`
   94:  	Call  TranslateModel    ( *VarA 00000002 FFFFFFFF 00000000 )
   B0:  	Wait  2`
   BC:  	Call  TranslateModel    ( *VarA 00000002 FFFFFFFF 00000000 )
   D8:  	Wait  2`
   E4:  	Call  TranslateModel    ( *VarA 00000002 FFFFFFFF 00000000 )
  100:  	Wait  2`
  10C:  	Call  TranslateModel    ( *VarA 00000003 FFFFFFFE 00000000 )
  128:  	Wait  2`
  134:  	Call  TranslateModel    ( *VarA 00000003 FFFFFFFE 00000000 )
  150:  	Wait  2`
  15C:  	Call  TranslateModel    ( *VarA 00000003 FFFFFFFD 00000000 )
  178:  	Wait  2`
  184:  	Call  TranslateModel    ( *VarA 00000003 FFFFFFFD 00000000 )
  1A0:  	Wait  2`
  1AC:  	Call  TranslateModel    ( *VarA 00000003 FFFFFFFD 00000000 )
  1C8:  	Wait  2`
  1D4:  	Call  TranslateModel    ( *VarA 00000003 FFFFFFFE 00000000 )
  1F0:  	Wait  2`
  1FC:  	Call  TranslateModel    ( *VarA 00000002 FFFFFFFE 00000000 )
  218:  	Wait  2`
  224:  	Call  TranslateModel    ( *VarA 00000002 FFFFFFFF 00000000 )
  240:  	Wait  2`
  24C:  	Call  TranslateModel    ( *VarA 00000001 00000000 00000000 )
  268:  	Wait  2`
  274:  	Call  TranslateModel    ( *VarA 00000001 00000001 00000000 )
  290:  	Wait  2`
  29C:  	Call  TranslateModel    ( *VarA 00000000 00000001 00000000 )
  2B8:  	Wait  2`
  2C4:  	Call  TranslateModel    ( *VarA FFFFFFFF 00000001 00000000 )
  2E0:  	Wait  2`
  2EC:  	Call  TranslateModel    ( *VarA FFFFFFFF 00000001 00000000 )
  308:  	Wait  2`
  314:  	Call  TranslateModel    ( *VarA FFFFFFFF 00000000 00000000 )
  330:  	Wait  2`
  33C:  	Call  TranslateModel    ( *VarA FFFFFFFF 00000000 00000000 )
  358:  	Wait  2`
  364:  	Call  TranslateModel    ( *VarA 00000000 00000000 00000000 )
  380:  	Wait  2`
  38C:  EndLoop
  394:  Return
  39C:  End
}

% Origin: HEURISTIC
#new:IntTable $IntTable_80234524
{
	00000000 FFFFFFFF FFFFFFFF FFFFFFFE FFFFFFFE FFFFFFFD FFFFFFFB FFFFFFF8
	FFFFFFF8 FFFFFFF9 FFFFFFFA FFFFFFFC FFFFFFFE FFFFFFFF 00000000 000000FF
}

% Origin: HEURISTIC
#new:Script $Script_80234564
{
    0:  Set   *VarA  *Var0
   10:  Set   *VarB  *Var1
   20:  Set   *Var5  00000005
   30:  UseIntBuffer  $IntTable_80234524
   3C:  Label  0
   48:  Get1Int  *Var1
   54:  If  *Var1  ==  000000FF
   64:  	UseIntBuffer  $IntTable_80234524
   70:  	Get1Int  *Var1
   7C:  EndIf
   84:  Set   *Var0  *Var5
   94:  Call  TranslateModel    ( *VarA *Var0 *Var1 00000000 )
   B0:  Wait  1`
   BC:  Add   *Var5  00000001
   CC:  Set   *VarC  *VarB
   DC:  Sub   *VarC  00000014
   EC:  If  *Var5  >  *VarC
   FC:  	Goto  1
  108:  EndIf
  110:  Set   *Var0  *Var5
  120:  Call  TranslateModel    ( *VarA *Var0 *Var1 00000000 )
  13C:  Wait  1`
  148:  Add   *Var5  00000001
  158:  Set   *VarC  *VarB
  168:  Sub   *VarC  00000014
  178:  If  *Var5  >  *VarC
  188:  	Goto  1
  194:  EndIf
  19C:  Goto  0
  1A8:  Label  1
  1B4:  Set   *Var2  00000000
  1C4:  Loop  00000014
  1D0:  	Add   *Var5  00000001
  1E0:  	Sub   *Var1  00000002
  1F0:  	Set   *Var0  *Var5
  200:  	Call  TranslateModel    ( *VarA *Var0 *Var1 00000000 )
  21C:  	Wait  1`
  228:  EndLoop
  230:  Sub   *Var5  00000118
  240:  Set   *Var1  00000000
  250:  Goto  0
  25C:  Return
  264:  End
}

% Origin: HEURISTIC
#new:Script $Script_802347D0
{
    0:  Set   *VarA  *Var0
   10:  Loop
   1C:  	Call  TranslateModel    ( *VarA 00000000 00000000 00000000 )
   38:  	Wait  2`
   44:  	Call  TranslateModel    ( *VarA 00000000 00000000 00000000 )
   60:  	Wait  2`
   6C:  	Call  TranslateModel    ( *VarA 00000000 FFFFFFFF 00000000 )
   88:  	Wait  2`
   94:  	Call  TranslateModel    ( *VarA 00000000 FFFFFFFF 00000000 )
   B0:  	Wait  2`
   BC:  	Call  TranslateModel    ( *VarA 00000000 FFFFFFFF 00000000 )
   D8:  	Wait  2`
   E4:  	Call  TranslateModel    ( *VarA 00000000 FFFFFFFF 00000000 )
  100:  	Wait  2`
  10C:  	Call  TranslateModel    ( *VarA 00000000 FFFFFFFE 00000000 )
  128:  	Wait  2`
  134:  	Call  TranslateModel    ( *VarA 00000000 FFFFFFFE 00000000 )
  150:  	Wait  2`
  15C:  	Call  TranslateModel    ( *VarA 00000000 FFFFFFFD 00000000 )
  178:  	Wait  2`
  184:  	Call  TranslateModel    ( *VarA 00000000 FFFFFFFD 00000000 )
  1A0:  	Wait  2`
  1AC:  	Call  TranslateModel    ( *VarA 00000000 FFFFFFFD 00000000 )
  1C8:  	Wait  2`
  1D4:  	Call  TranslateModel    ( *VarA 00000000 FFFFFFFE 00000000 )
  1F0:  	Wait  2`
  1FC:  	Call  TranslateModel    ( *VarA 00000000 FFFFFFFE 00000000 )
  218:  	Wait  2`
  224:  	Call  TranslateModel    ( *VarA 00000000 FFFFFFFF 00000000 )
  240:  	Wait  2`
  24C:  	Call  TranslateModel    ( *VarA 00000000 00000000 00000000 )
  268:  	Wait  2`
  274:  	Call  TranslateModel    ( *VarA 00000000 00000001 00000000 )
  290:  	Wait  2`
  29C:  	Call  TranslateModel    ( *VarA 00000000 00000001 00000000 )
  2B8:  	Wait  2`
  2C4:  	Call  TranslateModel    ( *VarA 00000000 00000001 00000000 )
  2E0:  	Wait  2`
  2EC:  	Call  TranslateModel    ( *VarA 00000000 00000001 00000000 )
  308:  	Wait  2`
  314:  	Call  TranslateModel    ( *VarA 00000000 00000000 00000000 )
  330:  	Wait  2`
  33C:  	Call  TranslateModel    ( *VarA 00000000 00000000 00000000 )
  358:  	Wait  2`
  364:  	Call  TranslateModel    ( *VarA 00000000 00000000 00000000 )
  380:  	Wait  2`
  38C:  EndLoop
  394:  Return
  39C:  End
}

#new:Script $Script_BeforeBattle_80234B74
{
    0:  Call  SetSpriteShading  ( FFFFFFFF )
   10:  Call  SetCamBGColor     ( .Cam:Battle  0`  0`  0` )
   2C:  Thread
   34:  	Set   *Var0  0000002C
   44:  	Exec  $Script_80234180
   50:  	Wait  5`
   5C:  	Set   *Var0  0000002F
   6C:  	Exec  $Script_80234180
   78:  	Wait  5`
   84:  	Set   *Var0  0000002E
   94:  	Exec  $Script_80234180
   A0:  	Wait  5`
   AC:  	Set   *Var0  0000002D
   BC:  	Exec  $Script_80234180
   C8:  EndThread
   D0:  Set   *Var0  00000028
   E0:  Exec  $Script_80233AF0
   EC:  Return
   F4:  End
}

#new:Script $Script_AfterBattle_80234C70
{
    0:  Return
    8:  End
}

#new:Stage $Stage_80234C80
{
	$ASCII_80235018  % mac_tex
	$ASCII_80235008  % mac_bt01_shape
	$ASCII_80234FF8  % mac_bt01_hit
	$Script_BeforeBattle_80234B74
	$Script_AfterBattle_80234C70
	$ASCII_80234FF0  % nok_bg
	00000000
	00000000
	00000000
	00000000
}

PADDING: 80234CA8 to 80234CB0 (004640E8 to 004640F0)
00000000 00000000

% Origin: HEURISTIC
#new:Script $Script_80234CB0
{
    0:  Set   *VarA  *Var0
   10:  Call  SetTexPanner  ( *VarA 00000001 )
   24:  Set   *Var0  00000000
   34:  Set   *Var1  00000000
   44:  Loop
   50:  	Call  SetTexPanOffset   ( 00000001 00000000 *Var0 *Var1 )
   6C:  	Add   *Var0  00008000
   7C:  	Add   *Var1  00000000
   8C:  	Wait  5`
   98:  EndLoop
   A0:  Return
   A8:  End
}

#new:Script $Script_BeforeBattle_80234D60
{
    0:  Call  SetSpriteShading  ( FFFFFFFF )
   10:  Call  SetCamBGColor     ( .Cam:Battle  0`  0`  0` )
   2C:  Return
   34:  End
}

#new:Script $Script_AfterBattle_80234D9C
{
    0:  Return
    8:  End
}

#new:Stage $Stage_80234DAC
{
	$ASCII_80235040  % kpa_tex
	$ASCII_80235030  % kpa_bt13_shape
	$ASCII_80235020  % kpa_bt13_hit
	$Script_BeforeBattle_80234D60
	$Script_AfterBattle_80234D9C
	00000000
	00000000
	00000000
	00000000
	00000000
}

PADDING: 80234DD4 to 80234DE0 (00464214 to 00464220)
00000000 00000000 00000000

#new:SJIS $SJIS_80234DE0
{
	コワッパ７ % kowappa7
}

#new:SJIS $SJIS_80234DEC
{
	コワッパ６ % kowappa6
}

#new:SJIS $SJIS_80234DF8
{
	コワッパ５ % kowappa5
}

#new:SJIS $SJIS_80234E04
{
	コワッパ４ % kowappa4
}

#new:SJIS $SJIS_80234E10
{
	コワッパ２ % kowappa2
}

#new:SJIS $SJIS_80234E1C
{
	コワッパ１ % kowappa1
}

#new:SJIS $SJIS_80234E28
{
	パタクリボー（レクチャー） % patakuribo-（rekucha-）
}

#new:SJIS $SJIS_80234E44
{
	トゲクリボー（レクチャー） % togekuribo-（rekucha-）
}

#new:ASCII $ASCII_80234E60
{
	"kmr_06"
}

#new:ASCII $ASCII_80234E68
{
	"kmr_05"
}

#new:ASCII $ASCII_80234E70
{
	"kmr_04"
}

#new:ASCII $ASCII_80234E78
{
	"kmr_03"
}

#new:ASCII $ASCII_80234E80
{
	"kmr_02"
}

#new:ASCII $ASCII_80234E88
{
	"kmr_bg"
}

#new:ASCII $ASCII_80234E90
{
	"kmr_bt02_shape"
}

#new:ASCII $ASCII_80234EA0
{
	"kmr_tex"
}

#new:ASCII $ASCII_80234EA8
{
	"kmr_bg"
}

#new:ASCII $ASCII_80234EB0
{
	"kmr_bt03_hit"
}

#new:ASCII $ASCII_80234EC0
{
	"kmr_bt03_shape"
}

#new:ASCII $ASCII_80234ED0
{
	"kmr_tex"
}

#new:ASCII $ASCII_80234ED8
{
	"kmr_bg"
}

#new:ASCII $ASCII_80234EE0
{
	"kmr_bt04_hit"
}

#new:ASCII $ASCII_80234EF0
{
	"kmr_bt04_shape"
}

#new:ASCII $ASCII_80234F00
{
	"kmr_tex"
}

#new:ASCII $ASCII_80234F08
{
	"kmr_bg"
}

#new:ASCII $ASCII_80234F10
{
	"kmr_bt05_hit"
}

#new:ASCII $ASCII_80234F20
{
	"kmr_bt05_shape"
}

#new:ASCII $ASCII_80234F30
{
	"kmr_tex"
}

#new:ASCII $ASCII_80234F38
{
	"kmr_bg"
}

#new:ASCII $ASCII_80234F40
{
	"kmr_bt06_hit"
}

#new:ASCII $ASCII_80234F50
{
	"kmr_bt06_shape"
}

#new:ASCII $ASCII_80234F60
{
	"kmr_tex"
}

#new:ASCII $ASCII_80234F68
{
	"nok_bg"
}

#new:ASCII $ASCII_80234F70
{
	"nok_bt01_hit"
}

#new:ASCII $ASCII_80234F80
{
	"nok_bt01_shape"
}

#new:ASCII $ASCII_80234F90
{
	"nok_tex"
}

#new:ASCII $ASCII_80234F98
{
	"mim_bt01_hit"
}

#new:ASCII $ASCII_80234FA8
{
	"mim_bt01_shape"
}

#new:ASCII $ASCII_80234FB8
{
	"mim_tex"
}

#new:ASCII $ASCII_80234FC0
{
	"yki_bg"
}

#new:ASCII $ASCII_80234FC8
{
	"sam_bt01_hit"
}

#new:ASCII $ASCII_80234FD8
{
	"sam_bt01_shape"
}

#new:ASCII $ASCII_80234FE8
{
	"sam_tex"
}

#new:ASCII $ASCII_80234FF0
{
	"nok_bg"
}

#new:ASCII $ASCII_80234FF8
{
	"mac_bt01_hit"
}

#new:ASCII $ASCII_80235008
{
	"mac_bt01_shape"
}

#new:ASCII $ASCII_80235018
{
	"mac_tex"
}

#new:ASCII $ASCII_80235020
{
	"kpa_bt13_hit"
}

#new:ASCII $ASCII_80235030
{
	"kpa_bt13_shape"
}

#new:ASCII $ASCII_80235040
{
	"kpa_tex"
}

PADDING: 80235048 to 80235050 (00464488 to 00464490)
00000000 00000000

