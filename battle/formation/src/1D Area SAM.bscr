% Script File: 1D Area SAM.bscr
% Decoded from: 623BA0 to 63D1E0 (1D Area SAM)

#new:Function $Function_80218000
{
    0:  ADDIU     SP, SP, FFB8
    4:  SW        S4, 20 (SP)
    8:  COPY      S4, A0
    C:  SW        S0, 10 (SP)
   10:  SW        RA, 24 (SP)
   14:  SW        S3, 1C (SP)
   18:  SW        S2, 18 (SP)
   1C:  SW        S1, 14 (SP)
   20:  SDC1      F26, 40 (SP)
   24:  SDC1      F24, 38 (SP)
   28:  SDC1      F22, 30 (SP)
   2C:  SDC1      F20, 28 (SP)
   30:  LW        A0, 148 (S4)
   34:  LW        S2, C (S4)
   38:  JAL       ~Func:get_actor
   3C:  COPY      S0, A1
   40:  COPY      S3, V0
   44:  BEQ       S0, R0, .o8C
   48:  ADDIU     S1, S3, C
   4C:  LW        A1, 0 (S2)
   50:  ADDIU     S2, S2, 4
   54:  JAL       ~Func:get_variable
   58:  COPY      A0, S4
   5C:  SH        V0, 70 (S3)
   60:  LW        A1, 0 (S2)
   64:  JAL       ~Func:get_variable
   68:  COPY      A0, S4
   6C:  SH        V0, 72 (S3)
   70:  SW        R0, 74 (S4)
   74:  SW        R0, 70 (S4)
   78:  LH        V1, 72 (S3)
   7C:  LI        V0, 1
   80:  BNE       V1, V0, .o8C
   84:  LI        V0, 2
   88:  SW        V0, 70 (S4)
        .o8C
   8C:  LW        V0, 70 (S4)
   90:  BNE       V0, R0, .o470
   94:  NOP
   98:  LWC1      F0, 144 (S3)
   9C:  LWC1      F24, C (S1)
   A0:  LWC1      F26, 14 (S1)
   A4:  SWC1      F0, 0 (S1)
   A8:  LWC1      F0, 148 (S3)
   AC:  MFC1      A2, F24
   B0:  MFC1      A3, F26
   B4:  LWC1      F22, 0 (S1)
   B8:  SWC1      F0, 4 (S1)
   BC:  LWC1      F20, 14C (S3)
   C0:  MOV.S     F12, F22
   C4:  MOV.S     F14, F20
   C8:  JAL       ~Func:atan2
   CC:  SWC1      F20, 8 (S1)
   D0:  MOV.S     F12, F22
   D4:  MFC1      A2, F24
   D8:  MFC1      A3, F26
   DC:  MOV.S     F14, F20
   E0:  JAL       ~Func:dist2D
   E4:  SWC1      F0, 48 (S1)
   E8:  LH        V0, 64 (S1)
   EC:  MOV.S     F4, F0
   F0:  BNE       V0, R0, .o13C
   F4:  SWC1      F4, 4C (S1)
   F8:  LWC1      F0, 40 (S1)
   FC:  LWC1      F2, 40 (S1)
  100:  DIV.S     F0, F4, F0
  104:  TRUNC.W.S F10, F0
  108:  MFC1      V1, F10
  10C:  NOP
  110:  SLL       V0, V1, 10
  114:  SRA       V0, V0, 10
  118:  MTC1      V0, F0
  11C:  NOP
  120:  CVT.S.W   F0, F0
  124:  MUL.S     F0, F0, F2
  128:  NOP
  12C:  MOV.S     F2, F4
  130:  SH        V1, 64 (S1)
  134:  BEQ       R0, R0, .o170
  138:  SUB.S     F8, F2, F0
        .o13C
  13C:  MTC1      V0, F2
  140:  NOP
  144:  CVT.S.W   F2, F2
  148:  LH        V0, 64 (S1)
  14C:  DIV.S     F2, F4, F2
  150:  MTC1      V0, F0
  154:  NOP
  158:  CVT.S.W   F0, F0
  15C:  MUL.S     F0, F0, F2
  160:  NOP
  164:  LWC1      F4, 4C (S1)
  168:  SWC1      F2, 40 (S1)
  16C:  SUB.S     F8, F4, F0
        .o170
  170:  LH        V1, 64 (S1)
  174:  BEQ       V1, R0, .o860
  178:  LI        V0, 2
  17C:  LH        V0, 64 (S1)
  180:  LWC1      F2, C (S1)
  184:  LIF       F0, 3.14159
  190:  LWC1      F4, 0 (S1)
  194:  MTC1      V0, F6
  198:  NOP
  19C:  CVT.S.W   F6, F6
  1A0:  DIV.S     F0, F0, F6
  1A4:  SUB.S     F2, F2, F4
  1A8:  SWC1      F0, 3C (S1)
  1AC:  MTC1      V1, F0
  1B0:  NOP
  1B4:  CVT.S.W   F0, F0
  1B8:  DIV.S     F2, F2, F0
  1BC:  LWC1      F0, 10 (S1)
  1C0:  SWC1      F2, 30 (S1)
  1C4:  LWC1      F2, 4 (S1)
  1C8:  SW        R0, 44 (S1)
  1CC:  SUB.S     F0, F0, F2
  1D0:  LWC1      F4, 14 (S1)
  1D4:  MOV.S     F2, F6
  1D8:  DIV.S     F0, F0, F2
  1DC:  SWC1      F0, 34 (S1)
  1E0:  MOV.S     F0, F6
  1E4:  DIV.S     F0, F8, F0
  1E8:  LWC1      F2, 8 (S1)
  1EC:  LH        V0, 66 (S1)
  1F0:  SUB.S     F4, F4, F2
  1F4:  LWC1      F2, 40 (S1)
  1F8:  SLTI      V0, V0, 3
  1FC:  ADD.S     F2, F2, F0
  200:  DIV.S     F4, F4, F6
  204:  SWC1      F4, 38 (S1)
  208:  BEQ       V0, R0, .o320
  20C:  SWC1      F2, 40 (S1)
  210:  LH        V0, 64 (S1)
  214:  LI        V1, 168
  218:  BNE       V0, R0, .o224
  21C:  DIV       V1, V0
  220:  BREAK     1C00
        .o224
  224:  LI        AT, FFFF
  228:  BNE       V0, AT, .o23C
  22C:  LUI       AT, 8000
  230:  BNE       V1, AT, .o23C
  234:  NOP
  238:  BREAK     1800
        .o23C
  23C:  MFLO      V1
  240:  LWC1      F8, 4C (S1)
  244:  LIF       F3, 2.8125
  24C:  MTC1      R0, F2
  250:  CVT.D.S   F0, F8
  254:  SUB.D     F0, F0, F2
  258:  LIF       F3, 2.375
  260:  MTC1      R0, F2
  264:  CVT.S.D   F8, F0
  268:  CVT.D.S   F0, F8
  26C:  DIV.D     F0, F0, F2
  270:  CVT.S.D   F8, F0
  274:  LAD       F2, $ConstDouble_802312D0
  27C:  CVT.D.S   F0, F8
  280:  ADD.D     F0, F0, F2
  284:  LIF       F2, 90.0
  28C:  CVT.S.D   F8, F0
  290:  MTC1      V1, F0
  294:  NOP
  298:  CVT.S.W   F0, F0
  29C:  LH        V1, 66 (S1)
  2A0:  LI        V0, 2
  2A4:  SWC1      F2, 24 (S1)
  2A8:  SWC1      F8, 50 (S1)
  2AC:  BNE       V1, V0, .o2D0
  2B0:  SWC1      F0, 28 (S1)
  2B4:  LAD       F2, $ConstDouble_802312D8
  2BC:  CVT.D.S   F0, F8
  2C0:  MUL.D     F0, F0, F2
  2C4:  NOP
  2C8:  CVT.S.D   F0, F0
  2CC:  SWC1      F0, 50 (S1)
        .o2D0
  2D0:  LWC1      F12, 24 (S1)
  2D4:  LIF       F0, 6.28318
  2E0:  LWC1      F20, 44 (S1)
  2E4:  LWC1      F22, 3C (S1)
  2E8:  SW        R0, 18 (S1)
  2EC:  MUL.S     F12, F12, F0
  2F0:  NOP
  2F4:  SW        R0, 1C (S1)
  2F8:  CVT.D.S   F20, F20
  2FC:  LIF       F0, 360.0
  304:  CVT.D.S   F22, F22
  308:  JAL       ~Func:sin_rad
  30C:  DIV.S     F12, F12, F0
  310:  LAD       F2, $ConstDouble_802312E0
  318:  BEQ       R0, R0, .o430
  31C:  CVT.D.S   F0, F0
        .o320
  320:  LH        V0, 64 (S1)
  324:  LI        V1, 168
  328:  BNE       V0, R0, .o334
  32C:  DIV       V1, V0
  330:  BREAK     1C00
        .o334
  334:  LI        AT, FFFF
  338:  BNE       V0, AT, .o34C
  33C:  LUI       AT, 8000
  340:  BNE       V1, AT, .o34C
  344:  NOP
  348:  BREAK     1800
        .o34C
  34C:  MFLO      V1
  350:  LWC1      F8, 4C (S1)
  354:  LIF       F3, 2.8125
  35C:  MTC1      R0, F2
  360:  CVT.D.S   F0, F8
  364:  SUB.D     F0, F0, F2
  368:  LIF       F3, 2.375
  370:  MTC1      R0, F2
  374:  CVT.S.D   F8, F0
  378:  CVT.D.S   F0, F8
  37C:  DIV.D     F0, F0, F2
  380:  CVT.S.D   F8, F0
  384:  LAD       F2, $ConstDouble_802312E8
  38C:  CVT.D.S   F0, F8
  390:  ADD.D     F0, F0, F2
  394:  LIF       F2, 90.0
  39C:  CVT.S.D   F8, F0
  3A0:  MTC1      V1, F0
  3A4:  NOP
  3A8:  CVT.S.W   F0, F0
  3AC:  LH        V1, 66 (S1)
  3B0:  LI        V0, 4
  3B4:  SWC1      F2, 24 (S1)
  3B8:  SWC1      F8, 50 (S1)
  3BC:  BNE       V1, V0, .o3E4
  3C0:  SWC1      F0, 28 (S1)
  3C4:  LIF       F3, 1.90625
  3CC:  MTC1      R0, F2
  3D0:  CVT.D.S   F0, F8
  3D4:  MUL.D     F0, F0, F2
  3D8:  NOP
  3DC:  CVT.S.D   F0, F0
  3E0:  SWC1      F0, 50 (S1)
        .o3E4
  3E4:  LWC1      F12, 24 (S1)
  3E8:  LIF       F0, 6.28318
  3F4:  LWC1      F20, 44 (S1)
  3F8:  LWC1      F22, 3C (S1)
  3FC:  SW        R0, 18 (S1)
  400:  MUL.S     F12, F12, F0
  404:  NOP
  408:  SW        R0, 1C (S1)
  40C:  CVT.D.S   F20, F20
  410:  LIF       F0, 360.0
  418:  CVT.D.S   F22, F22
  41C:  JAL       ~Func:sin_rad
  420:  DIV.S     F12, F12, F0
  424:  LAD       F2, $ConstDouble_802312F0
  42C:  CVT.D.S   F0, F0
        .o430
  430:  MUL.D     F0, F0, F2
  434:  NOP
  438:  MUL.D     F0, F0, F22
  43C:  NOP
  440:  ADD.D     F0, F0, F22
  444:  ADD.D     F20, F20, F0
  448:  CVT.S.D   F20, F20
  44C:  SWC1      F20, 44 (S1)
  450:  LI        A0, FF81
  454:  LW        A2, 58 (S1)
  458:  JAL       ~Func:set_animation
  45C:  LI        A1, 1
  460:  JAL       ~Func:sfx_play_sound
  464:  LI        A0, 2081
  468:  LI        V0, 1
  46C:  SW        V0, 70 (S4)
        .o470
  470:  LW        V1, 70 (S4)
  474:  LI        V0, 2
  478:  BEQ       V1, V0, .o6D0
  47C:  LI        V0, 1
  480:  SLTI      V0, V1, 3
  484:  BEQ       V0, R0, .o49C
  488:  LI        V0, 1
  48C:  BEQ       V1, V0, .o4B0
  490:  CLEAR     V0
  494:  BEQ       R0, R0, .o860
  498:  NOP
        .o49C
  49C:  LI        V0, 3
  4A0:  BEQ       V1, V0, .o78C
  4A4:  CLEAR     V0
  4A8:  BEQ       R0, R0, .o860
  4AC:  NOP
        .o4B0
  4B0:  LWC1      F2, 44 (S1)
  4B4:  LIF       F0, 1.570795
  4C0:  NOP
  4C4:  C.LT.S    F0, F2
  4C8:  NOP
  4CC:  BC1F      .o4E0
  4D0:  LI        A0, FF81
  4D4:  LW        A2, 5C (S1)
  4D8:  JAL       ~Func:set_animation
  4DC:  LI        A1, 1
        .o4E0
  4E0:  LWC1      F6, 0 (S1)
  4E4:  LWC1      F0, 30 (S1)
  4E8:  LWC1      F4, 4 (S1)
  4EC:  LWC1      F22, 144 (S3)
  4F0:  ADD.S     F6, F6, F0
  4F4:  LWC1      F0, 34 (S1)
  4F8:  LWC1      F2, 38 (S1)
  4FC:  ADD.S     F4, F4, F0
  500:  LWC1      F0, 8 (S1)
  504:  LWC1      F20, 148 (S3)
  508:  ADD.S     F0, F0, F2
  50C:  SWC1      F6, 0 (S1)
  510:  SWC1      F4, 4 (S1)
  514:  SWC1      F0, 8 (S1)
  518:  LWC1      F0, 148 (S3)
  51C:  MOV.S     F2, F6
  520:  SWC1      F0, 18 (S1)
  524:  SWC1      F2, 144 (S3)
  528:  JAL       ~Func:sin_rad
  52C:  LWC1      F12, 44 (S1)
  530:  LWC1      F2, 50 (S1)
  534:  MUL.S     F2, F2, F0
  538:  NOP
  53C:  LWC1      F0, 4 (S1)
  540:  ADD.S     F0, F0, F2
  544:  SWC1      F0, 148 (S3)
  548:  LWC1      F0, 8 (S1)
  54C:  SWC1      F0, 14C (S3)
  550:  LWC1      F2, 10 (S1)
  554:  LWC1      F0, 148 (S3)
  558:  C.LT.S    F0, F2
  55C:  NOP
  560:  BC1F      .o580
  564:  MOV.S     F12, F22
  568:  LH        V0, 64 (S1)
  56C:  SLTI      V0, V0, 3
  570:  BNEL      V0, R0, .o57C
  574:  SWC1      F2, 148 (S3)
  578:  MOV.S     F12, F22
        .o57C
  57C:  LWC1      F0, 148 (S3)
        .o580
  580:  LW        A2, 144 (S3)
  584:  NEG.S     F0, F0
  588:  MFC1      A3, F0
  58C:  JAL       ~Func:atan2
  590:  NEG.S     F14, F20
  594:  NEG.S     F0, F0
  598:  SWC1      F0, 164 (S3)
  59C:  LH        V0, 66 (S1)
  5A0:  LWC1      F0, 148 (S3)
  5A4:  SLTI      V0, V0, 3
  5A8:  BEQ       V0, R0, .o5F8
  5AC:  SWC1      F0, 1C (S1)
  5B0:  LWC1      F12, 24 (S1)
  5B4:  LIF       F0, 6.28318
  5C0:  LWC1      F20, 44 (S1)
  5C4:  MUL.S     F12, F12, F0
  5C8:  NOP
  5CC:  LWC1      F22, 3C (S1)
  5D0:  CVT.D.S   F20, F20
  5D4:  LIF       F0, 360.0
  5DC:  CVT.D.S   F22, F22
  5E0:  JAL       ~Func:sin_rad
  5E4:  DIV.S     F12, F12, F0
  5E8:  LAD       F2, $ConstDouble_802312F8
  5F0:  BEQ       R0, R0, .o63C
  5F4:  CVT.D.S   F0, F0
        .o5F8
  5F8:  LWC1      F12, 24 (S1)
  5FC:  LIF       F0, 6.28318
  608:  LWC1      F20, 44 (S1)
  60C:  MUL.S     F12, F12, F0
  610:  NOP
  614:  LWC1      F22, 3C (S1)
  618:  CVT.D.S   F20, F20
  61C:  LIF       F0, 360.0
  624:  CVT.D.S   F22, F22
  628:  JAL       ~Func:sin_rad
  62C:  DIV.S     F12, F12, F0
  630:  LAD       F2, $ConstDouble_80231300
  638:  CVT.D.S   F0, F0
        .o63C
  63C:  MUL.D     F0, F0, F2
  640:  NOP
  644:  MUL.D     F0, F0, F22
  648:  NOP
  64C:  ADD.D     F0, F0, F22
  650:  ADD.D     F20, F20, F0
  654:  CVT.S.D   F20, F20
  658:  SWC1      F20, 44 (S1)
  65C:  LWC1      F12, 24 (S1)
  660:  LWC1      F0, 28 (S1)
  664:  ADD.S     F12, F12, F0
  668:  JAL       ~Func:clamp_angle
  66C:  SWC1      F12, 24 (S1)
  670:  LHU       V0, 64 (S1)
  674:  SWC1      F0, 24 (S1)
  678:  ADDIU     V0, V0, FFFF
  67C:  SH        V0, 64 (S1)
  680:  SLL       V0, V0, 10
  684:  BNE       V0, R0, .o860
  688:  CLEAR     V0
  68C:  LWC1      F0, 10 (S1)
  690:  LI        A0, FF81
  694:  SWC1      F0, 148 (S3)
  698:  LWC1      F0, 18 (S1)
  69C:  LWC1      F2, 1C (S1)
  6A0:  LW        A2, 60 (S1)
  6A4:  SUB.S     F0, F0, F2
  6A8:  LIF       F2, 1.8
  6B4:  LI        A1, 1
  6B8:  SWC1      F2, 3C (S1)
  6BC:  NEG.S     F0, F0
  6C0:  JAL       ~Func:set_animation
  6C4:  SWC1      F0, 44 (S1)
  6C8:  BEQ       R0, R0, .o860
  6CC:  LI        V0, 1
        .o6D0
  6D0:  SH        V0, 64 (S1)
  6D4:  LH        V0, 64 (S1)
  6D8:  LI        V1, 168
  6DC:  BNE       V0, R0, .o6E8
  6E0:  DIV       V1, V0
  6E4:  BREAK     1C00
        .o6E8
  6E8:  LI        AT, FFFF
  6EC:  BNE       V0, AT, .o700
  6F0:  LUI       AT, 8000
  6F4:  BNE       V1, AT, .o700
  6F8:  NOP
  6FC:  BREAK     1800
        .o700
  700:  MFLO      V1
  704:  LWC1      F2, 18 (S1)
  708:  LWC1      F0, 1C (S1)
  70C:  LIF       F8, 1.8
  718:  LWC1      F4, 1C (S1)
  71C:  SUB.S     F2, F2, F0
  720:  LWC1      F0, 18 (S1)
  724:  LIF       F6, 90.0
  72C:  SUB.S     F0, F0, F4
  730:  SWC1      F8, 3C (S1)
  734:  SWC1      F6, 24 (S1)
  738:  NEG.S     F2, F2
  73C:  SWC1      F2, 44 (S1)
  740:  LAD       F2, $ConstDouble_80231308
  748:  ABS.S     F0, F0
  74C:  CVT.D.S   F0, F0
  750:  DIV.D     F0, F0, F2
  754:  CVT.S.D   F0, F0
  758:  SWC1      F0, 50 (S1)
  75C:  MTC1      V1, F0
  760:  NOP
  764:  CVT.S.W   F0, F0
  768:  SWC1      F0, 28 (S1)
  76C:  LWC1      F0, 144 (S3)
  770:  SWC1      F0, 0 (S1)
  774:  LWC1      F0, 148 (S3)
  778:  SWC1      F0, 4 (S1)
  77C:  LWC1      F0, 14C (S3)
  780:  LI        V0, 3
  784:  SWC1      F0, 8 (S1)
  788:  SW        V0, 70 (S4)
        .o78C
  78C:  LWC1      F12, 24 (S1)
  790:  LIF       F22, 6.28318
  79C:  NOP
  7A0:  MUL.S     F12, F12, F22
  7A4:  NOP
  7A8:  LWC1      F20, 0 (S1)
  7AC:  LIF       F24, 360.0
  7B4:  CVT.D.S   F20, F20
  7B8:  JAL       ~Func:sin_rad
  7BC:  DIV.S     F12, F12, F24
  7C0:  LWC1      F2, 50 (S1)
  7C4:  MUL.S     F2, F2, F0
  7C8:  NOP
  7CC:  LWC1      F12, 24 (S1)
  7D0:  MUL.S     F12, F12, F22
  7D4:  NOP
  7D8:  LAD       F0, $ConstDouble_80231310
  7E0:  CVT.D.S   F2, F2
  7E4:  DIV.D     F2, F2, F0
  7E8:  ADD.D     F20, F20, F2
  7EC:  DIV.S     F12, F12, F24
  7F0:  CVT.S.D   F20, F20
  7F4:  JAL       ~Func:sin_rad
  7F8:  SWC1      F20, 0 (S1)
  7FC:  LWC1      F2, 50 (S1)
  800:  MUL.S     F2, F2, F0
  804:  NOP
  808:  LWC1      F12, 24 (S1)
  80C:  LWC1      F0, 28 (S1)
  810:  ADD.S     F12, F12, F0
  814:  LWC1      F0, 4 (S1)
  818:  SUB.S     F0, F0, F2
  81C:  SWC1      F12, 24 (S1)
  820:  JAL       ~Func:clamp_angle
  824:  SWC1      F0, 4 (S1)
  828:  LWC1      F2, 0 (S1)
  82C:  SWC1      F0, 24 (S1)
  830:  SWC1      F2, 144 (S3)
  834:  LWC1      F0, 4 (S1)
  838:  SWC1      F0, 148 (S3)
  83C:  LWC1      F0, 8 (S1)
  840:  SWC1      F0, 14C (S3)
  844:  LHU       V1, 64 (S1)
  848:  ADDIU     V1, V1, FFFF
  84C:  SH        V1, 64 (S1)
  850:  SLL       V1, V1, 10
  854:  BEQ       V1, R0, .o860
  858:  LI        V0, 1
  85C:  CLEAR     V0
        .o860
  860:  LW        RA, 24 (SP)
  864:  LW        S4, 20 (SP)
  868:  LW        S3, 1C (SP)
  86C:  LW        S2, 18 (SP)
  870:  LW        S1, 14 (SP)
  874:  LW        S0, 10 (SP)
  878:  LDC1      F26, 40 (SP)
  87C:  LDC1      F24, 38 (SP)
  880:  LDC1      F22, 30 (SP)
  884:  LDC1      F20, 28 (SP)
  888:  JR        RA
  88C:  ADDIU     SP, SP, 48
}

#new:Function $Function_80218890
{
    0:  ADDIU     SP, SP, FFC8
    4:  SW        S2, 20 (SP)
    8:  COPY      S2, A0
    C:  SW        RA, 28 (SP)
   10:  SW        S3, 24 (SP)
   14:  SW        S1, 1C (SP)
   18:  SW        S0, 18 (SP)
   1C:  SDC1      F20, 30 (SP)
   20:  LW        A0, 148 (S2)
   24:  JAL       ~Func:get_actor
   28:  COPY      S0, A1
   2C:  COPY      S1, V0
   30:  BEQ       S0, R0, .o3C
   34:  ADDIU     S3, S1, C
   38:  SW        R0, 70 (S2)
        .o3C
   3C:  LW        V0, 70 (S2)
   40:  BNE       V0, R0, .o64
   44:  LI        V0, 1
   48:  LWC1      F0, 144 (S1)
   4C:  LWC1      F2, 148 (S1)
   50:  LWC1      F4, 14C (S1)
   54:  SWC1      F0, C (S1)
   58:  SWC1      F2, 10 (S1)
   5C:  SWC1      F4, 14 (S1)
   60:  SW        V0, 70 (S2)
        .o64
   64:  LWC1      F0, 50 (S1)
   68:  MTC1      R0, F20
   6C:  NOP
   70:  C.LT.S    F20, F0
   74:  NOP
   78:  BC1F      .o90
   7C:  LI        A0, FF81
   80:  LW        A2, 64 (S1)
   84:  JAL       ~Func:set_animation
   88:  LI        A1, 1
   8C:  LWC1      F0, 50 (S1)
        .o90
   90:  C.LT.S    F0, F20
   94:  NOP
   98:  BC1F      .oAC
   9C:  LI        A0, FF81
   A0:  LW        A2, 68 (S1)
   A4:  JAL       ~Func:set_animation
   A8:  LI        A1, 1
        .oAC
   AC:  LWC1      F4, 10 (S1)
   B0:  LWC1      F0, 50 (S1)
   B4:  LW        A1, 4C (S1)
   B8:  ADD.S     F4, F4, F0
   BC:  LWC1      F2, 48 (S1)
   C0:  LW        A2, 54 (S1)
   C4:  SUB.S     F0, F0, F2
   C8:  COPY      A0, S3
   CC:  SWC1      F4, 10 (S1)
   D0:  JAL       ~Func:add_xz_vec3f
   D4:  SWC1      F0, 50 (S1)
   D8:  LWC1      F0, 10 (S1)
   DC:  LWC1      F2, 14 (S1)
   E0:  SWC1      F0, 148 (S1)
   E4:  LWC1      F0, C (S1)
   E8:  LWC1      F4, 148 (S1)
   EC:  SWC1      F2, 14C (S1)
   F0:  C.LT.S    F4, F20
   F4:  NOP
   F8:  BC1T      .o108
   FC:  SWC1      F0, 144 (S1)
  100:  BEQ       R0, R0, .o134
  104:  CLEAR     V0
        .o108
  108:  LWC1      F0, 18C (S1)
  10C:  SWC1      F20, 148 (S1)
  110:  SWC1      F0, 10 (SP)
  114:  LW        A1, 144 (S1)
  118:  LW        A2, 148 (S1)
  11C:  LW        A3, 14C (S1)
  120:  JAL       ~Func:play_movement_dust_effects
  124:  LI        A0, 2
  128:  JAL       ~Func:sfx_play_sound
  12C:  LI        A0, 148
  130:  LI        V0, 1
        .o134
  134:  LW        RA, 28 (SP)
  138:  LW        S3, 24 (SP)
  13C:  LW        S2, 20 (SP)
  140:  LW        S1, 1C (SP)
  144:  LW        S0, 18 (SP)
  148:  LDC1      F20, 30 (SP)
  14C:  JR        RA
  150:  ADDIU     SP, SP, 38
}

#new:Function $Function_802189E4
{
    0:  ADDIU     SP, SP, FFE8
    4:  SW        S0, 10 (SP)
    8:  COPY      S0, A0
    C:  SW        RA, 14 (SP)
   10:  JAL       ~Func:get_actor
   14:  LW        A0, 148 (S0)
   18:  JAL       ~Func:get_actor
   1C:  LH        A0, 428 (V0)
   20:  COPY      A0, V0
   24:  LW        V0, 0 (A0)
   28:  ANDI      V0, V0, 800
   2C:  BNE       V0, R0, .o58
   30:  NOP
   34:  LBU       V0, 191 (A0)
   38:  LW        V1, 88 (S0)
   3C:  SRL       V0, V0, 1
   40:  ADDU      V1, V1, V0
   44:  SW        V1, 88 (S0)
   48:  LBU       V0, 191 (A0)
   4C:  SRL       V0, V0, 2
   50:  BEQ       R0, R0, .o78
   54:  ADDU      V1, V1, V0
        .o58
   58:  LBU       V0, 191 (A0)
   5C:  LW        V1, 88 (S0)
   60:  SRL       V0, V0, 1
   64:  SUBU      V1, V1, V0
   68:  SW        V1, 88 (S0)
   6C:  LBU       V0, 191 (A0)
   70:  SRL       V0, V0, 2
   74:  SUBU      V1, V1, V0
        .o78
   78:  SW        V1, 88 (S0)
   7C:  LBU       V1, 191 (A0)
   80:  LBU       A0, 190 (A0)
   84:  SLT       V0, V1, A0
   88:  BNEL      V0, R0, .o90
   8C:  COPY      V1, A0
        .o90
   90:  ADDIU     V0, V1, 7E
   94:  SW        V0, 90 (S0)
   98:  LW        RA, 14 (SP)
   9C:  LW        S0, 10 (SP)
   A0:  LI        V0, 2
   A4:  JR        RA
   A8:  ADDIU     SP, SP, 18
}

#new:Function $Function_80218A90
{
    0:  ADDIU     SP, SP, FFD8
    4:  SW        S0, 18 (SP)
    8:  COPY      S0, A0
    C:  LUI       A1, 42D4
   10:  LUI       A2, 4310
   14:  CLEAR     A0
   18:  SW        RA, 20 (SP)
   1C:  SW        S1, 1C (SP)
   20:  LW        S1, C (S0)
   24:  LIF       F0, 1.0
   2C:  CLEAR     A3
   30:  SW        R0, 14 (SP)
   34:  JAL       ~Func:playFX_6C
   38:  SWC1      F0, 10 (SP)
   3C:  COPY      A0, S0
   40:  LW        A1, 0 (S1)
   44:  JAL       ~Func:set_variable
   48:  COPY      A2, V0
   4C:  LW        RA, 20 (SP)
   50:  LW        S1, 1C (SP)
   54:  LW        S0, 18 (SP)
   58:  LI        V0, 2
   5C:  JR        RA
   60:  ADDIU     SP, SP, 28
}

% Origin: HEURISTIC
#new:Function $Function_80218AF4
{
    0:  ADDIU     SP, SP, FFE8
    4:  SW        RA, 10 (SP)
    8:  LW        V0, C (A0)
    C:  JAL       ~Func:get_variable
   10:  LW        A1, 0 (V0)
   14:  LW        V1, C (V0)
   18:  LIF       F0, -1000.0
   20:  NOP
   24:  SWC1      F0, 8 (V1)
   28:  LW        RA, 10 (SP)
   2C:  LI        V0, 2
   30:  JR        RA
   34:  ADDIU     SP, SP, 18
}

#new:Function $Function_80218B2C
{
    0:  ADDIU     SP, SP, FFE8
    4:  SW        RA, 10 (SP)
    8:  LW        V0, C (A0)
    C:  JAL       ~Func:get_variable
   10:  LW        A1, 0 (V0)
   14:  COPY      A0, V0
   18:  LW        V0, C (A0)
   1C:  LIF       F0, 144.0
   24:  NOP
   28:  SWC1      F0, 8 (V0)
   2C:  LW        V1, 0 (A0)
   30:  ORI       V1, V1, 10
   34:  SW        V1, 0 (A0)
   38:  LW        RA, 10 (SP)
   3C:  LI        V0, 2
   40:  JR        RA
   44:  ADDIU     SP, SP, 18
}

#new:Function $Function_80218B74
{
    0:  ADDIU     SP, SP, FFD8
    4:  SW        S1, 14 (SP)
    8:  COPY      S1, A0
    C:  SW        RA, 20 (SP)
   10:  SW        S3, 1C (SP)
   14:  SW        S2, 18 (SP)
   18:  SW        S0, 10 (SP)
   1C:  LW        S0, C (S1)
   20:  LW        A1, 0 (S0)
   24:  JAL       ~Func:get_variable
   28:  ADDIU     S0, S0, 4
   2C:  LW        A1, 0 (S0)
   30:  ADDIU     S0, S0, 4
   34:  COPY      A0, S1
   38:  JAL       ~Func:get_variable
   3C:  COPY      S3, V0
   40:  LW        A1, 0 (S0)
   44:  ADDIU     S0, S0, 4
   48:  COPY      A0, S1
   4C:  JAL       ~Func:get_variable
   50:  COPY      S2, V0
   54:  COPY      A0, S1
   58:  LW        A1, 0 (S0)
   5C:  JAL       ~Func:get_variable
   60:  COPY      S0, V0
   64:  LW        A0, 148 (S1)
   68:  JAL       ~Func:get_actor
   6C:  COPY      S1, V0
   70:  COPY      V1, V0
   74:  LW        V0, 8 (V1)
   78:  LBU       V0, 24 (V0)
   7C:  LW        A0, 8 (V1)
   80:  SUBU      S3, S3, V0
   84:  SB        S3, 194 (V1)
   88:  LBU       V0, 25 (A0)
   8C:  SUBU      S2, S2, V0
   90:  SB        S2, 195 (V1)
   94:  LBU       V0, 26 (A0)
   98:  SUBU      S0, S0, V0
   9C:  SB        S0, 196 (V1)
   A0:  LBU       A0, 27 (A0)
   A4:  SUBU      S1, S1, A0
   A8:  SB        S1, 197 (V1)
   AC:  LW        RA, 20 (SP)
   B0:  LW        S3, 1C (SP)
   B4:  LW        S2, 18 (SP)
   B8:  LW        S1, 14 (SP)
   BC:  LW        S0, 10 (SP)
   C0:  LI        V0, 2
   C4:  JR        RA
   C8:  ADDIU     SP, SP, 28
}

#new:Function $Function_80218C40
{
    0:  ADDIU     SP, SP, FFD8
    4:  SW        RA, 24 (SP)
    8:  SW        S2, 20 (SP)
    C:  SW        S1, 1C (SP)
   10:  SW        S0, 18 (SP)
   14:  LW        A0, 148 (A0)
   18:  JAL       ~Func:get_actor
   1C:  COPY      S0, A1
   20:  COPY      S1, V0
   24:  BEQ       S0, R0, .o44
   28:  ADDIU     S2, S1, C
   2C:  LWC1      F0, 144 (S1)
   30:  LWC1      F2, 148 (S1)
   34:  LWC1      F4, 14C (S1)
   38:  SWC1      F0, C (S1)
   3C:  SWC1      F2, 10 (S1)
   40:  SWC1      F4, 14 (S1)
        .o44
   44:  LW        A1, 4C (S1)
   48:  LW        A2, 54 (S1)
   4C:  JAL       ~Func:add_xz_vec3f
   50:  COPY      A0, S2
   54:  LWC1      F2, 4C (S1)
   58:  LIF       F0, 4.0
   60:  NOP
   64:  C.LT.S    F2, F0
   68:  NOP
   6C:  BC1F      .o8C
   70:  CLEAR     A0
   74:  LWC1      F0, 54 (S1)
   78:  SWC1      F0, 10 (SP)
   7C:  LW        A1, C (S1)
   80:  LW        A2, 10 (S1)
   84:  BEQ       R0, R0, .oA4
   88:  LW        A3, 14 (S1)
        .o8C
   8C:  LWC1      F0, 54 (S1)
   90:  SWC1      F0, 10 (SP)
   94:  LW        A1, C (S1)
   98:  LW        A2, 10 (S1)
   9C:  LW        A3, 14 (S1)
   A0:  LI        A0, 1
        .oA4
   A4:  JAL       ~Func:play_movement_dust_effects
   A8:  NOP
   AC:  LWC1      F0, 40 (S2)
   B0:  LIF       F3, 1.9375
   B8:  MTC1      R0, F2
   BC:  CVT.D.S   F0, F0
   C0:  DIV.D     F0, F0, F2
   C4:  LWC1      F2, 0 (S2)
   C8:  CVT.S.D   F0, F0
   CC:  SWC1      F0, 40 (S2)
   D0:  SWC1      F2, 144 (S1)
   D4:  LWC1      F0, 4 (S2)
   D8:  SWC1      F0, 148 (S1)
   DC:  LWC1      F0, 8 (S2)
   E0:  SWC1      F0, 14C (S1)
   E4:  LWC1      F0, 40 (S2)
   E8:  LIF       F3, 1.875
   F0:  MTC1      R0, F2
   F4:  CVT.D.S   F0, F0
   F8:  C.LT.D    F0, F2
   FC:  NOP
  100:  BC1T      .o10C
  104:  LI        V0, 2
  108:  CLEAR     V0
        .o10C
  10C:  LW        RA, 24 (SP)
  110:  LW        S2, 20 (SP)
  114:  LW        S1, 1C (SP)
  118:  LW        S0, 18 (SP)
  11C:  JR        RA
  120:  ADDIU     SP, SP, 28
}

#new:Function $Function_80218D64
{
    0:  ADDIU     SP, SP, FFD8
    4:  SW        RA, 24 (SP)
    8:  SW        S2, 20 (SP)
    C:  SW        S1, 1C (SP)
   10:  SW        S0, 18 (SP)
   14:  LW        A0, 148 (A0)
   18:  JAL       ~Func:get_actor
   1C:  COPY      S0, A1
   20:  COPY      S1, V0
   24:  BEQ       S0, R0, .o44
   28:  ADDIU     S2, S1, C
   2C:  LWC1      F0, 144 (S1)
   30:  LWC1      F2, 148 (S1)
   34:  LWC1      F4, 14C (S1)
   38:  SWC1      F0, C (S1)
   3C:  SWC1      F2, 10 (S1)
   40:  SWC1      F4, 14 (S1)
        .o44
   44:  LW        A1, 4C (S1)
   48:  LW        A2, 54 (S1)
   4C:  JAL       ~Func:add_xz_vec3f
   50:  COPY      A0, S2
   54:  LWC1      F2, 4C (S1)
   58:  LIF       F0, 4.0
   60:  NOP
   64:  C.LT.S    F2, F0
   68:  NOP
   6C:  BC1F      .o8C
   70:  CLEAR     A0
   74:  LWC1      F0, 54 (S1)
   78:  SWC1      F0, 10 (SP)
   7C:  LW        A1, C (S1)
   80:  LW        A2, 10 (S1)
   84:  BEQ       R0, R0, .oA4
   88:  LW        A3, 14 (S1)
        .o8C
   8C:  LWC1      F0, 54 (S1)
   90:  SWC1      F0, 10 (SP)
   94:  LW        A1, C (S1)
   98:  LW        A2, 10 (S1)
   9C:  LW        A3, 14 (S1)
   A0:  LI        A0, 1
        .oA4
   A4:  JAL       ~Func:play_movement_dust_effects
   A8:  NOP
   AC:  LWC1      F0, 40 (S2)
   B0:  LIF       F3, 1.9375
   B8:  MTC1      R0, F2
   BC:  CVT.D.S   F0, F0
   C0:  DIV.D     F0, F0, F2
   C4:  LWC1      F2, 0 (S2)
   C8:  CVT.S.D   F0, F0
   CC:  SWC1      F0, 40 (S2)
   D0:  SWC1      F2, 144 (S1)
   D4:  LWC1      F0, 4 (S2)
   D8:  SWC1      F0, 148 (S1)
   DC:  LWC1      F0, 8 (S2)
   E0:  SWC1      F0, 14C (S1)
   E4:  LWC1      F0, 40 (S2)
   E8:  LIF       F3, 1.875
   F0:  MTC1      R0, F2
   F4:  CVT.D.S   F0, F0
   F8:  C.LT.D    F0, F2
   FC:  NOP
  100:  BC1T      .o10C
  104:  LI        V0, 2
  108:  CLEAR     V0
        .o10C
  10C:  LW        RA, 24 (SP)
  110:  LW        S2, 20 (SP)
  114:  LW        S1, 1C (SP)
  118:  LW        S0, 18 (SP)
  11C:  JR        RA
  120:  ADDIU     SP, SP, 28
}

#new:Function $Function_80218E88
{
    0:  ADDIU     SP, SP, FFB8
    4:  SW        RA, 2C (SP)
    8:  SW        S2, 28 (SP)
    C:  SW        S1, 24 (SP)
   10:  SW        S0, 20 (SP)
   14:  SDC1      F24, 40 (SP)
   18:  SDC1      F22, 38 (SP)
   1C:  SDC1      F20, 30 (SP)
   20:  LW        A0, 148 (A0)
   24:  JAL       ~Func:get_actor
   28:  COPY      S0, A1
   2C:  COPY      S1, V0
   30:  BEQ       S0, R0, .o128
   34:  ADDIU     S2, S1, C
   38:  JAL       ~Func:heap_malloc
   3C:  LI        A0, 20
   40:  COPY      S0, V0
   44:  LI        V0, 1
   48:  ADDIU     A1, S1, 144
   4C:  ADDIU     A2, S1, 148
   50:  SW        S0, 90 (S1)
   54:  SW        V0, 4 (S0)
   58:  SW        R0, 8 (S0)
   5C:  SW        V0, C (S0)
   60:  SW        R0, 10 (S0)
   64:  LB        V1, 210 (S1)
   68:  LI        V0, A
   6C:  BEQ       V1, V0, .o84
   70:  ADDIU     A3, S1, 14C
   74:  LIF       F0, 1.0
   7C:  BEQ       R0, R0, .o98
   80:  SWC1      F0, 10 (SP)
        .o84
   84:  LIF       F0, 0.39804688
   90:  NOP
   94:  SWC1      F0, 10 (SP)
        .o98
   98:  LI        V0, 5
   9C:  SW        V0, 14 (SP)
   A0:  SW        R0, 18 (SP)
   A4:  LW        A1, 0 (A1)
   A8:  LW        A2, 0 (A2)
   AC:  LW        A3, 0 (A3)
   B0:  JAL       ~Func:playFX_73
   B4:  CLEAR     A0
   B8:  ADDIU     A1, S1, 144
   BC:  SW        V0, 14 (S0)
   C0:  LB        V0, 210 (S1)
   C4:  LI        V1, A
   C8:  BEQ       V0, V1, .oE0
   CC:  ADDIU     A3, S1, 14C
   D0:  LIF       F0, 1.0
   D8:  BEQ       R0, R0, .oF4
   DC:  SWC1      F0, 10 (SP)
        .oE0
   E0:  LIF       F0, 0.39804688
   EC:  NOP
   F0:  SWC1      F0, 10 (SP)
        .oF4
   F4:  LI        V0, 5
   F8:  SW        V0, 14 (SP)
   FC:  SW        R0, 18 (SP)
  100:  LW        A1, 0 (A1)
  104:  LUI       A2, C47A
  108:  LW        A3, 0 (A3)
  10C:  JAL       ~Func:playFX_73
  110:  LI        A0, 1
  114:  SW        V0, 18 (S0)
  118:  LI        V0, 1
  11C:  SW        V0, 0 (S0)
  120:  LB        V0, 210 (S1)
  124:  SW        V0, 1C (S0)
        .o128
  128:  LW        S0, 84 (S2)
  12C:  LW        V0, 0 (S0)
  130:  BEQ       V0, R0, .o458
  134:  LI        V0, 2
  138:  LW        V0, 4 (S0)
  13C:  BEQ       V0, R0, .o174
  140:  LI        V0, 8
  144:  LB        V1, 210 (S1)
  148:  BEQ       V1, V0, .o174
  14C:  NOP
  150:  LW        V0, 8 (S0)
  154:  ADDIU     V0, V0, F
  158:  MTC1      V0, F12
  15C:  NOP
  160:  CVT.S.W   F12, F12
  164:  JAL       ~Func:clamp_angle
  168:  SW        V0, 8 (S0)
  16C:  TRUNC.W.S F6, F0
  170:  SWC1      F6, 8 (S0)
        .o174
  174:  LIF       F0, 6.28318
  180:  LWC1      F12, 8 (S0)
  184:  CVT.S.W   F12, F12
  188:  MUL.S     F12, F12, F0
  18C:  NOP
  190:  LIF       F0, 360.0
  198:  JAL       ~Func:sin_rad
  19C:  DIV.S     F12, F12, F0
  1A0:  LIF       F2, 3.0
  1A8:  NOP
  1AC:  MUL.S     F0, F0, F2
  1B0:  NOP
  1B4:  LH        V0, 152 (S1)
  1B8:  MTC1      V0, F2
  1BC:  NOP
  1C0:  CVT.S.W   F2, F2
  1C4:  TRUNC.W.S F6, F0
  1C8:  MFC1      V1, F6
  1CC:  NOP
  1D0:  SLL       V0, V1, 18
  1D4:  LWC1      F0, 148 (S1)
  1D8:  SRA       V0, V0, 18
  1DC:  SB        V1, 19A (S1)
  1E0:  ADD.S     F0, F0, F2
  1E4:  MTC1      V0, F2
  1E8:  NOP
  1EC:  CVT.S.W   F2, F2
  1F0:  LH        V0, 150 (S1)
  1F4:  ADD.S     F0, F0, F2
  1F8:  LI        V1, A
  1FC:  MTC1      V0, F2
  200:  NOP
  204:  CVT.S.W   F2, F2
  208:  CVT.D.S   F4, F0
  20C:  LWC1      F0, 144 (S1)
  210:  LB        V0, 210 (S1)
  214:  ADD.S     F22, F0, F2
  218:  LAD       F0, $ConstDouble_80231318
  220:  BEQL      V0, V1, .o23C
  224:  ADD.D     F0, F4, F0
  228:  LIF       F1, 2.625
  230:  MTC1      R0, F0
  234:  NOP
  238:  ADD.D     F0, F4, F0
        .o23C
  23C:  CVT.S.D   F20, F0
  240:  LH        V0, 154 (S1)
  244:  LWC1      F0, 14C (S1)
  248:  MTC1      V0, F2
  24C:  NOP
  250:  CVT.S.W   F2, F2
  254:  LW        V0, C (S0)
  258:  BEQ       V0, R0, .o3C0
  25C:  ADD.S     F24, F0, F2
  260:  LW        V1, 10 (S0)
  264:  BEQ       V1, R0, .o27C
  268:  LI        V0, 1
  26C:  BEQ       V1, V0, .o318
  270:  NOP
  274:  BEQ       R0, R0, .o3F8
  278:  NOP
        .o27C
  27C:  LW        V0, 14 (S0)
  280:  BNE       V0, R0, .o2DC
  284:  LI        V0, A
  288:  LB        V1, 210 (S1)
  28C:  BEQ       V1, V0, .o2A4
  290:  NOP
  294:  LIF       F0, 1.0
  29C:  BEQ       R0, R0, .o2B8
  2A0:  SWC1      F0, 10 (SP)
        .o2A4
  2A4:  LIF       F0, 0.39804688
  2B0:  NOP
  2B4:  SWC1      F0, 10 (SP)
        .o2B8
  2B8:  CLEAR     A0
  2BC:  MFC1      A1, F22
  2C0:  MFC1      A2, F20
  2C4:  MFC1      A3, F24
  2C8:  LI        V0, 5
  2CC:  SW        V0, 14 (SP)
  2D0:  JAL       ~Func:playFX_73
  2D4:  SW        R0, 18 (SP)
  2D8:  SW        V0, 14 (S0)
        .o2DC
  2DC:  LW        V1, 18 (S0)
  2E0:  BEQ       V1, R0, .o2F8
  2E4:  NOP
  2E8:  LW        V0, 0 (V1)
  2EC:  ORI       V0, V0, 10
  2F0:  SW        V0, 0 (V1)
  2F4:  SW        R0, 18 (S0)
        .o2F8
  2F8:  LW        V0, 14 (S0)
  2FC:  LW        V0, C (V0)
  300:  SWC1      F22, 4 (V0)
  304:  LW        V0, 14 (S0)
  308:  LW        V0, C (V0)
  30C:  SWC1      F20, 8 (V0)
  310:  BEQ       R0, R0, .o3B4
  314:  LW        V0, 14 (S0)
        .o318
  318:  LW        V1, 14 (S0)
  31C:  BEQ       V1, R0, .o334
  320:  NOP
  324:  LW        V0, 0 (V1)
  328:  ORI       V0, V0, 10
  32C:  SW        V0, 0 (V1)
  330:  SW        R0, 14 (S0)
        .o334
  334:  LW        V0, 18 (S0)
  338:  BNE       V0, R0, .o39C
  33C:  NOP
  340:  LB        V1, 210 (S1)
  344:  LI        V0, A
  348:  BEQ       V1, V0, .o360
  34C:  NOP
  350:  LIF       F0, 1.0
  358:  BEQ       R0, R0, .o374
  35C:  SWC1      F0, 10 (SP)
        .o360
  360:  LIF       F0, 0.39804688
  36C:  NOP
  370:  SWC1      F0, 10 (SP)
        .o374
  374:  LI        A0, 1
  378:  MFC1      A1, F22
  37C:  MFC1      A2, F20
  380:  MFC1      A3, F24
  384:  LI        V0, 5
  388:  SW        V0, 14 (SP)
  38C:  JAL       ~Func:playFX_73
  390:  SW        R0, 18 (SP)
  394:  SW        V0, 18 (S0)
  398:  LW        V0, 18 (S0)
        .o39C
  39C:  LW        V0, C (V0)
  3A0:  SWC1      F22, 4 (V0)
  3A4:  LW        V0, 18 (S0)
  3A8:  LW        V0, C (V0)
  3AC:  SWC1      F20, 8 (V0)
  3B0:  LW        V0, 18 (S0)
        .o3B4
  3B4:  LW        V0, C (V0)
  3B8:  BEQ       R0, R0, .o3F8
  3BC:  SWC1      F24, C (V0)
        .o3C0
  3C0:  LW        V1, 14 (S0)
  3C4:  BEQ       V1, R0, .o3DC
  3C8:  NOP
  3CC:  LW        V0, 0 (V1)
  3D0:  ORI       V0, V0, 10
  3D4:  SW        V0, 0 (V1)
  3D8:  SW        R0, 14 (S0)
        .o3DC
  3DC:  LW        V1, 18 (S0)
  3E0:  BEQ       V1, R0, .o3F8
  3E4:  NOP
  3E8:  LW        V0, 0 (V1)
  3EC:  ORI       V0, V0, 10
  3F0:  SW        V0, 0 (V1)
  3F4:  SW        R0, 18 (S0)
        .o3F8
  3F8:  LB        V1, 210 (S1)
  3FC:  LW        V0, 1C (S0)
  400:  BEQ       V0, V1, .o454
  404:  CLEAR     V0
  408:  LW        V0, C (S0)
  40C:  BEQ       V0, R0, .o454
  410:  CLEAR     V0
  414:  LW        V1, 14 (S0)
  418:  BEQ       V1, R0, .o430
  41C:  NOP
  420:  LW        V0, 0 (V1)
  424:  ORI       V0, V0, 10
  428:  SW        V0, 0 (V1)
  42C:  SW        R0, 14 (S0)
        .o430
  430:  LW        V1, 18 (S0)
  434:  BEQ       V1, R0, .o44C
  438:  NOP
  43C:  LW        V0, 0 (V1)
  440:  ORI       V0, V0, 10
  444:  SW        V0, 0 (V1)
  448:  SW        R0, 18 (S0)
        .o44C
  44C:  LB        V1, 210 (S1)
  450:  CLEAR     V0
        .o454
  454:  SW        V1, 1C (S0)
        .o458
  458:  LW        RA, 2C (SP)
  45C:  LW        S2, 28 (SP)
  460:  LW        S1, 24 (SP)
  464:  LW        S0, 20 (SP)
  468:  LDC1      F24, 40 (SP)
  46C:  LDC1      F22, 38 (SP)
  470:  LDC1      F20, 30 (SP)
  474:  JR        RA
  478:  ADDIU     SP, SP, 48
}

#new:Function $Function_80219304
{
    0:  ADDIU     SP, SP, FFE8
    4:  SW        RA, 10 (SP)
    8:  JAL       ~Func:get_actor
    C:  LW        A0, 148 (A0)
   10:  LW        A0, 90 (V0)
   14:  LW        V1, 14 (A0)
   18:  BEQ       V1, R0, .o2C
   1C:  SW        R0, 0 (A0)
   20:  LW        V0, 0 (V1)
   24:  ORI       V0, V0, 10
   28:  SW        V0, 0 (V1)
        .o2C
   2C:  LW        V1, 18 (A0)
   30:  BEQ       V1, R0, .o44
   34:  NOP
   38:  LW        V0, 0 (V1)
   3C:  ORI       V0, V0, 10
   40:  SW        V0, 0 (V1)
        .o44
   44:  LW        RA, 10 (SP)
   48:  LI        V0, 2
   4C:  JR        RA
   50:  ADDIU     SP, SP, 18
}

#new:Function $Function_80219358
{
    0:  ADDIU     SP, SP, FFE0
    4:  SW        S0, 10 (SP)
    8:  COPY      S0, A0
    C:  SW        RA, 18 (SP)
   10:  SW        S1, 14 (SP)
   14:  LW        A0, 148 (S0)
   18:  JAL       ~Func:get_actor
   1C:  LW        S1, C (S0)
   20:  COPY      A0, S0
   24:  LW        A1, 0 (S1)
   28:  JAL       ~Func:get_variable
   2C:  LW        S0, 90 (V0)
   30:  SW        V0, 4 (S0)
   34:  LW        RA, 18 (SP)
   38:  LW        S1, 14 (SP)
   3C:  LW        S0, 10 (SP)
   40:  LI        V0, 2
   44:  JR        RA
   48:  ADDIU     SP, SP, 20
}

#new:Function $Function_802193A4
{
    0:  ADDIU     SP, SP, FFE0
    4:  SW        S0, 10 (SP)
    8:  COPY      S0, A0
    C:  SW        RA, 18 (SP)
   10:  SW        S1, 14 (SP)
   14:  LW        A0, 148 (S0)
   18:  JAL       ~Func:get_actor
   1C:  LW        S1, C (S0)
   20:  COPY      A0, S0
   24:  LW        A1, 0 (S1)
   28:  JAL       ~Func:get_variable
   2C:  LW        S0, 90 (V0)
   30:  SW        V0, C (S0)
   34:  LW        RA, 18 (SP)
   38:  LW        S1, 14 (SP)
   3C:  LW        S0, 10 (SP)
   40:  LI        V0, 2
   44:  JR        RA
   48:  ADDIU     SP, SP, 20
}

#new:Function $Function_802193F0
{
    0:  ADDIU     SP, SP, FFE0
    4:  SW        S0, 10 (SP)
    8:  COPY      S0, A0
    C:  SW        RA, 18 (SP)
   10:  SW        S1, 14 (SP)
   14:  LW        A0, 148 (S0)
   18:  JAL       ~Func:get_actor
   1C:  LW        S1, C (S0)
   20:  COPY      A0, S0
   24:  LW        A1, 0 (S1)
   28:  JAL       ~Func:get_variable
   2C:  LW        S0, 90 (V0)
   30:  SW        V0, 10 (S0)
   34:  LW        RA, 18 (SP)
   38:  LW        S1, 14 (SP)
   3C:  LW        S0, 10 (SP)
   40:  LI        V0, 2
   44:  JR        RA
   48:  ADDIU     SP, SP, 20
}

#new:Function $Function_8021943C
{
    0:  ADDIU     SP, SP, FFE8
    4:  SW        RA, 10 (SP)
    8:  JAL       ~Func:mdl_set_all_fog_mode
    C:  LI        A0, 1
   10:  CLEAR     A0
   14:  LI        V0, 1
   18:  COPY      A1, A0
   1C:  COPY      A2, A0
   20:  LAW       V1, 801512F0
   28:  COPY      A3, A0
   2C:  JAL       ~Func:set_background_color_blend
   30:  SB        V0, 0 (V1)
   34:  LW        RA, 10 (SP)
   38:  LI        V0, 2
   3C:  JR        RA
   40:  ADDIU     SP, SP, 18
}

#new:Function $Function_80219480
{
    0:  ADDIU     SP, SP, FFE8
    4:  SW        RA, 10 (SP)
    8:  LW        V0, C (A0)
    C:  JAL       ~Func:get_variable
   10:  LW        A1, 0 (V0)
   14:  CLEAR     A0
   18:  COPY      A1, A0
   1C:  COPY      A2, A0
   20:  JAL       ~Func:set_background_color_blend
   24:  ANDI      A3, V0, FF
   28:  LW        RA, 10 (SP)
   2C:  LI        V0, 2
   30:  JR        RA
   34:  ADDIU     SP, SP, 18
}

#new:Function $Function_GetPartner
{
    0:  ADDIU     SP, SP, FFE0
    4:  SW        S2, 18 (SP)
    8:  COPY      S2, A0
    C:  SW        S1, 14 (SP)
   10:  LA        S1, 8010F290
   18:  SW        RA, 1C (SP)
   1C:  SW        S0, 10 (SP)
   20:  LW        S0, C (S2)
   24:  LB        A2, 12 (S1)
   28:  LW        A1, 0 (S0)
   2C:  JAL       ~Func:set_variable
   30:  ADDIU     S0, S0, 4
   34:  LB        V0, 12 (S1)
   38:  LW        A1, 0 (S0)
   3C:  SLL       V0, V0, 3
   40:  ADDU      V0, V0, S1
   44:  LB        A2, 15 (V0)
   48:  JAL       ~Func:set_variable
   4C:  COPY      A0, S2
   50:  LW        RA, 1C (SP)
   54:  LW        S2, 18 (SP)
   58:  LW        S1, 14 (SP)
   5C:  LW        S0, 10 (SP)
   60:  LI        V0, 2
   64:  JR        RA
   68:  ADDIU     SP, SP, 20
}

#new:Function $Function_80219524
{
    0:  ADDIU     SP, SP, FFE8
    4:  SW        S0, 10 (SP)
    8:  COPY      S0, A0
    C:  SW        RA, 14 (SP)
   10:  LW        V0, C (S0)
   14:  JAL       ~Func:get_variable
   18:  LW        A1, 0 (V0)
   1C:  LW        A0, 148 (S0)
   20:  JAL       ~Func:get_actor
   24:  COPY      S0, V0
   28:  COPY      V1, V0
   2C:  ADDIU     S0, S0, FFFF
   30:  SLTIU     V0, S0, 9
   34:  BEQ       V0, R0, .oB0
   38:  CLEAR     A0
   3C:  SLL       V0, S0, 2
   40:  LTW       V0, V0 ($JumpTable_80231320)
   4C:  JR        V0
   50:  NOP
	% LBL: from $JumpTable_80231320 , entry 0`
   54:  LA        A0, $SpecialFormation_8021E660
   58:  BEQ       R0, R0, .oB0
   5C:  RESERVED
	% LBL: from $JumpTable_80231320 , entry 1`
   60:  LA        A0, $SpecialFormation_80220314
   64:  BEQ       R0, R0, .oB0
   68:  RESERVED
	% LBL: from $JumpTable_80231320 , entry 2`
   6C:  LA        A0, $SpecialFormation_80221574
   70:  BEQ       R0, R0, .oB0
   74:  RESERVED
	% LBL: from $JumpTable_80231320 , entry 3`
   78:  LA        A0, $SpecialFormation_80222500
   7C:  BEQ       R0, R0, .oB0
   80:  RESERVED
	% LBL: from $JumpTable_80231320 , entry 8`
   84:  LA        A0, $SpecialFormation_802238D0
   88:  BEQ       R0, R0, .oB0
   8C:  RESERVED
	% LBL: from $JumpTable_80231320 , entry 5`
   90:  LA        A0, $SpecialFormation_802247CC
   94:  BEQ       R0, R0, .oB0
   98:  RESERVED
	% LBL: from $JumpTable_80231320 , entry 6`
   9C:  LA        A0, $SpecialFormation_80226164
   A0:  BEQ       R0, R0, .oB0
   A4:  RESERVED
	% LBL: from $JumpTable_80231320 , entry 7`
   A8:  LA        A0, $SpecialFormation_80227404
	% LBL: from $JumpTable_80231320 , entry 4`
        .oB0
   B0:  LB        V1, 1F1 (V1)
   B4:  SW        V1, 8 (A0)
   B8:  LW        RA, 14 (SP)
   BC:  LW        S0, 10 (SP)
   C0:  LI        V0, 2
   C4:  JR        RA
   C8:  ADDIU     SP, SP, 18
}

#new:Function $Function_802195F0
{
    0:  ADDIU     SP, SP, FFD8
    4:  SW        S1, 14 (SP)
    8:  COPY      S1, A0
    C:  SW        RA, 20 (SP)
   10:  SW        S3, 1C (SP)
   14:  SW        S2, 18 (SP)
   18:  SW        S0, 10 (SP)
   1C:  LW        S0, C (S1)
   20:  LW        A1, 0 (S0)
   24:  JAL       ~Func:get_variable
   28:  ADDIU     S0, S0, 4
   2C:  LW        A1, 0 (S0)
   30:  ADDIU     S0, S0, 4
   34:  COPY      A0, S1
   38:  JAL       ~Func:get_variable
   3C:  COPY      S3, V0
   40:  LW        A1, 0 (S0)
   44:  ADDIU     S0, S0, 4
   48:  COPY      A0, S1
   4C:  JAL       ~Func:get_variable
   50:  COPY      S2, V0
   54:  COPY      A0, S1
   58:  LW        A1, 0 (S0)
   5C:  JAL       ~Func:get_variable
   60:  COPY      S0, V0
   64:  LW        A0, 148 (S1)
   68:  JAL       ~Func:get_actor
   6C:  COPY      S1, V0
   70:  COPY      V1, V0
   74:  LW        V0, 8 (V1)
   78:  LBU       V0, 24 (V0)
   7C:  LW        A0, 8 (V1)
   80:  SUBU      S3, S3, V0
   84:  SB        S3, 194 (V1)
   88:  LBU       V0, 25 (A0)
   8C:  SUBU      S2, S2, V0
   90:  SB        S2, 195 (V1)
   94:  LBU       V0, 26 (A0)
   98:  SUBU      S0, S0, V0
   9C:  SB        S0, 196 (V1)
   A0:  LBU       A0, 27 (A0)
   A4:  SUBU      S1, S1, A0
   A8:  SB        S1, 197 (V1)
   AC:  LW        RA, 20 (SP)
   B0:  LW        S3, 1C (SP)
   B4:  LW        S2, 18 (SP)
   B8:  LW        S1, 14 (SP)
   BC:  LW        S0, 10 (SP)
   C0:  LI        V0, 2
   C4:  JR        RA
   C8:  ADDIU     SP, SP, 28
}

#new:Function $Function_802196BC
{
    0:  ADDIU     SP, SP, FFC0
    4:  SW        S1, 1C (SP)
    8:  COPY      S1, A0
    C:  SW        RA, 34 (SP)
   10:  SW        S6, 30 (SP)
   14:  SW        S5, 2C (SP)
   18:  SW        S4, 28 (SP)
   1C:  SW        S3, 24 (SP)
   20:  SW        S2, 20 (SP)
   24:  SW        S0, 18 (SP)
   28:  SDC1      F20, 38 (SP)
   2C:  LW        S0, C (S1)
   30:  LW        A1, 0 (S0)
   34:  JAL       ~Func:get_variable
   38:  ADDIU     S0, S0, 4
   3C:  LW        A1, 0 (S0)
   40:  ADDIU     S0, S0, 4
   44:  JAL       ~Func:get_variable
   48:  COPY      A0, S1
   4C:  LW        A1, 0 (S0)
   50:  ADDIU     S0, S0, 4
   54:  COPY      A0, S1
   58:  JAL       ~Func:get_variable
   5C:  COPY      S6, V0
   60:  LW        A1, 0 (S0)
   64:  ADDIU     S0, S0, 4
   68:  COPY      A0, S1
   6C:  JAL       ~Func:get_variable
   70:  COPY      S5, V0
   74:  LW        A1, 0 (S0)
   78:  ADDIU     S0, S0, 4
   7C:  COPY      A0, S1
   80:  JAL       ~Func:get_float_variable
   84:  COPY      S4, V0
   88:  LW        A1, 0 (S0)
   8C:  ADDIU     S0, S0, 4
   90:  COPY      A0, S1
   94:  JAL       ~Func:get_variable
   98:  MOV.S     F20, F0
   9C:  LW        A1, 0 (S0)
   A0:  ADDIU     S0, S0, 4
   A4:  COPY      A0, S1
   A8:  JAL       ~Func:get_variable
   AC:  COPY      S2, V0
   B0:  LW        A1, 0 (S0)
   B4:  ADDIU     S0, S0, 4
   B8:  COPY      A0, S1
   BC:  JAL       ~Func:get_variable
   C0:  COPY      S3, V0
   C4:  COPY      A0, S1
   C8:  LW        A1, 0 (S0)
   CC:  JAL       ~Func:get_variable
   D0:  COPY      S1, V0
   D4:  LI        A0, 1
   D8:  MTC1      S6, F2
   DC:  NOP
   E0:  CVT.S.W   F2, F2
   E4:  MFC1      A1, F2
   E8:  MTC1      S5, F2
   EC:  NOP
   F0:  CVT.S.W   F2, F2
   F4:  MFC1      A2, F2
   F8:  MTC1      S4, F2
   FC:  NOP
  100:  CVT.S.W   F2, F2
  104:  MFC1      A3, F2
  108:  COPY      S0, V0
  10C:  SWC1      F20, 10 (SP)
  110:  JAL       ~Func:playFX_6F
  114:  SW        S2, 14 (SP)
  118:  LW        V1, C (V0)
  11C:  SW        S3, 18 (V1)
  120:  LW        V1, C (V0)
  124:  SW        S1, 1C (V1)
  128:  LW        V1, C (V0)
  12C:  SW        S0, 20 (V1)
  130:  LW        V1, C (V0)
  134:  LI        A0, FF
  138:  SW        A0, 28 (V1)
  13C:  LW        V1, C (V0)
  140:  SW        A0, 2C (V1)
  144:  LW        V1, C (V0)
  148:  SW        A0, 30 (V1)
  14C:  LW        RA, 34 (SP)
  150:  LW        S6, 30 (SP)
  154:  LW        S5, 2C (SP)
  158:  LW        S4, 28 (SP)
  15C:  LW        S3, 24 (SP)
  160:  LW        S2, 20 (SP)
  164:  LW        S1, 1C (SP)
  168:  LW        S0, 18 (SP)
  16C:  LDC1      F20, 38 (SP)
  170:  LI        V0, 2
  174:  JR        RA
  178:  ADDIU     SP, SP, 40
}

PADDING: 80219838 to 80219840 (006253D8 to 006253E0)
00000000 00000000

% Origin: HINT
#new:Function $Function_80219840
{
    0:  ADDIU     SP, SP, FFA0
    4:  SW        S1, 24 (SP)
    8:  COPY      S1, A0
    C:  SW        RA, 28 (SP)
   10:  SW        S0, 20 (SP)
   14:  SDC1      F30, 58 (SP)
   18:  SDC1      F28, 50 (SP)
   1C:  SDC1      F26, 48 (SP)
   20:  SDC1      F24, 40 (SP)
   24:  SDC1      F22, 38 (SP)
   28:  SDC1      F20, 30 (SP)
   2C:  LW        S0, C (S1)
   30:  LW        A1, 0 (S0)
   34:  JAL       ~Func:get_float_variable
   38:  ADDIU     S0, S0, 4
   3C:  LW        A1, 0 (S0)
   40:  ADDIU     S0, S0, 4
   44:  COPY      A0, S1
   48:  JAL       ~Func:get_float_variable
   4C:  MOV.S     F30, F0
   50:  LW        A1, 0 (S0)
   54:  ADDIU     S0, S0, 4
   58:  COPY      A0, S1
   5C:  JAL       ~Func:get_float_variable
   60:  MOV.S     F20, F0
   64:  LW        A1, 0 (S0)
   68:  ADDIU     S0, S0, 4
   6C:  COPY      A0, S1
   70:  JAL       ~Func:get_float_variable
   74:  MOV.S     F28, F0
   78:  LW        A1, 0 (S0)
   7C:  ADDIU     S0, S0, 4
   80:  COPY      A0, S1
   84:  JAL       ~Func:get_float_variable
   88:  MOV.S     F26, F0
   8C:  LW        A1, 0 (S0)
   90:  ADDIU     S0, S0, 4
   94:  COPY      A0, S1
   98:  JAL       ~Func:get_float_variable
   9C:  MOV.S     F24, F0
   A0:  COPY      A0, S1
   A4:  LW        A1, 0 (S0)
   A8:  JAL       ~Func:get_variable
   AC:  MOV.S     F22, F0
   B0:  LW        A0, 148 (S1)
   B4:  JAL       ~Func:get_actor
   B8:  COPY      S0, V0
   BC:  CVT.D.S   F20, F20
   C0:  MFC1      A1, F30
   C4:  LIF       F1, 2.3125
   CC:  MTC1      R0, F0
   D0:  MFC1      A3, F28
   D4:  ADD.D     F20, F20, F0
   D8:  CLEAR     A0
   DC:  SW        S0, 1C (SP)
   E0:  CVT.S.D   F20, F20
   E4:  MFC1      A2, F20
   E8:  COPY      S0, V0
   EC:  SWC1      F26, 10 (SP)
   F0:  SWC1      F24, 14 (SP)
   F4:  JAL       ~Func:playFX_12
   F8:  SWC1      F22, 18 (SP)
   FC:  COPY      A0, V0
  100:  LB        V1, 210 (S0)
  104:  LI        V0, A
  108:  BNE       V1, V0, .o128
  10C:  NOP
  110:  LW        V0, C (A0)
  114:  LIF       F0, 0.39804688
  120:  NOP
  124:  SWC1      F0, 28 (V0)
        .o128
  128:  LW        RA, 28 (SP)
  12C:  LW        S1, 24 (SP)
  130:  LW        S0, 20 (SP)
  134:  LDC1      F30, 58 (SP)
  138:  LDC1      F28, 50 (SP)
  13C:  LDC1      F26, 48 (SP)
  140:  LDC1      F24, 40 (SP)
  144:  LDC1      F22, 38 (SP)
  148:  LDC1      F20, 30 (SP)
  14C:  LI        V0, 2
  150:  JR        RA
  154:  ADDIU     SP, SP, 60
}

% Origin: HINT
#new:Function $Function_80219998
{
    0:  ADDIU     SP, SP, FFE8
    4:  SW        RA, 10 (SP)
    8:  LW        V0, C (A0)
    C:  LAH       A2, 800DC1EC
   14:  JAL       ~Func:set_variable
   18:  LW        A1, 0 (V0)
   1C:  LW        RA, 10 (SP)
   20:  LI        V0, 2
   24:  JR        RA
   28:  ADDIU     SP, SP, 18
}

% Origin: HINT
#new:Function $Function_802199C4
{
    0:  ADDIU     SP, SP, FFD8
    4:  SW        S1, 14 (SP)
    8:  COPY      S1, A0
    C:  SW        RA, 20 (SP)
   10:  SW        S3, 1C (SP)
   14:  SW        S2, 18 (SP)
   18:  SW        S0, 10 (SP)
   1C:  LW        S0, C (S1)
   20:  LW        A1, 0 (S0)
   24:  JAL       ~Func:get_variable
   28:  ADDIU     S0, S0, 4
   2C:  LW        A1, 0 (S0)
   30:  ADDIU     S0, S0, 4
   34:  COPY      A0, S1
   38:  JAL       ~Func:get_variable
   3C:  COPY      S3, V0
   40:  LW        A1, 0 (S0)
   44:  ADDIU     S0, S0, 4
   48:  COPY      A0, S1
   4C:  JAL       ~Func:get_variable
   50:  COPY      S2, V0
   54:  COPY      A0, S1
   58:  LW        A1, 0 (S0)
   5C:  JAL       ~Func:get_variable
   60:  COPY      S0, V0
   64:  LW        A0, 148 (S1)
   68:  JAL       ~Func:get_actor
   6C:  COPY      S1, V0
   70:  COPY      V1, V0
   74:  LW        V0, 8 (V1)
   78:  LBU       V0, 24 (V0)
   7C:  LW        A0, 8 (V1)
   80:  SUBU      S3, S3, V0
   84:  SB        S3, 194 (V1)
   88:  LBU       V0, 25 (A0)
   8C:  SUBU      S2, S2, V0
   90:  SB        S2, 195 (V1)
   94:  LBU       V0, 26 (A0)
   98:  SUBU      S0, S0, V0
   9C:  SB        S0, 196 (V1)
   A0:  LBU       A0, 27 (A0)
   A4:  SUBU      S1, S1, A0
   A8:  SB        S1, 197 (V1)
   AC:  LW        RA, 20 (SP)
   B0:  LW        S3, 1C (SP)
   B4:  LW        S2, 18 (SP)
   B8:  LW        S1, 14 (SP)
   BC:  LW        S0, 10 (SP)
   C0:  LI        V0, 2
   C4:  JR        RA
   C8:  ADDIU     SP, SP, 28
}

% Origin: HINT
#new:Function $Function_80219A90
{
    0:  ADDIU     SP, SP, FFE0
    4:  SW        S1, 14 (SP)
    8:  COPY      S1, A0
    C:  SW        RA, 18 (SP)
   10:  SW        S0, 10 (SP)
   14:  LW        S0, C (S1)
   18:  LW        A1, 0 (S0)
   1C:  JAL       ~Func:get_variable
   20:  ADDIU     S0, S0, 4
   24:  COPY      A0, S1
   28:  LW        A1, 0 (S0)
   2C:  JAL       ~Func:get_variable
   30:  COPY      S0, V0
   34:  COPY      A0, S0
   38:  JAL       ~Func:start_rumble
   3C:  COPY      A1, V0
   40:  LW        RA, 18 (SP)
   44:  LW        S1, 14 (SP)
   48:  LW        S0, 10 (SP)
   4C:  LI        V0, 2
   50:  JR        RA
   54:  ADDIU     SP, SP, 20
}

% Origin: HINT
#new:Function $Function_80219AE8
{
    0:  ADDIU     SP, SP, FFE0
    4:  SW        S1, 14 (SP)
    8:  COPY      S1, A0
    C:  SW        RA, 18 (SP)
   10:  SW        S0, 10 (SP)
   14:  LW        S0, C (S1)
   18:  LW        A1, 0 (S0)
   1C:  JAL       ~Func:get_variable
   20:  ADDIU     S0, S0, 4
   24:  COPY      A0, V0
   28:  LI        V0, FF81
   2C:  BNE       A0, V0, .o38
   30:  NOP
   34:  LW        A0, 148 (S1)
        .o38
   38:  JAL       ~Func:get_actor
   3C:  NOP
   40:  COPY      A0, V0
   44:  LBU       V1, 136 (A0)
   48:  LI        V0, 47
   4C:  BEQ       V1, V0, .o7C
   50:  SLT       V0, V1, V0
   54:  BNEL      V0, R0, .o9C
   58:  COPY      A0, S1
   5C:  SLTI      V0, V1, 65
   60:  BEQ       V0, R0, .o98
   64:  SLTI      V0, V1, 4D
   68:  BNE       V0, R0, .o9C
   6C:  COPY      A0, S1
   70:  LW        A1, 0 (S0)
   74:  BEQ       R0, R0, .oA4
   78:  LI        A2, FFFF
        .o7C
   7C:  LW        V1, A8 (A0)
   80:  LI        V0, 1
   84:  BNE       V1, V0, .o9C
   88:  COPY      A0, S1
   8C:  LW        A1, 0 (S0)
   90:  BEQ       R0, R0, .oA4
   94:  LI        A2, FFFF
        .o98
   98:  COPY      A0, S1
        .o9C
   9C:  LW        A1, 0 (S0)
   A0:  CLEAR     A2
        .oA4
   A4:  JAL       ~Func:set_variable
   A8:  NOP
   AC:  LW        RA, 18 (SP)
   B0:  LW        S1, 14 (SP)
   B4:  LW        S0, 10 (SP)
   B8:  LI        V0, 2
   BC:  JR        RA
   C0:  ADDIU     SP, SP, 20
}

PADDING: 80219BAC to 80219BB0 (0062574C to 00625750)
00000000

% Origin: HEURISTIC
#new:Function $Function_80219BB0
{
    0:  ADDIU     SP, SP, FFC0
    4:  SW        S6, 38 (SP)
    8:  COPY      S6, A0
    C:  ADDIU     A1, SP, 10
   10:  ADDIU     A2, SP, 14
   14:  ADDIU     A3, SP, 18
   18:  SW        RA, 3C (SP)
   1C:  SW        S5, 34 (SP)
   20:  SW        S4, 30 (SP)
   24:  SW        S3, 2C (SP)
   28:  SW        S2, 28 (SP)
   2C:  SW        S1, 24 (SP)
   30:  JAL       ~Func:mdl_get_copied_vertices
   34:  SW        S0, 20 (SP)
   38:  LW        V0, 18 (SP)
   3C:  BLEZ      V0, .o188
   40:  CLEAR     S0
   44:  LA        V1, $???_8022EFD0
   4C:  SLL       V0, S6, 1
   50:  ADDU      S4, V0, V1
   54:  LI        S3, 55555556
   5C:  ORI       S5, R0, 8000
   60:  MULT      S0, S3
        .o64
   64:  SRA       S2, S0, 1F
   68:  MFHI      V1
   6C:  SUBU      V1, V1, S2
   70:  SLL       V0, V1, 1
   74:  ADDU      V0, V0, V1
   78:  SUBU      V0, S0, V0
   7C:  LHU       V1, 0 (S4)
   80:  ADDIU     V0, V0, 1
   84:  MULT      V1, V0
   88:  SLL       V0, S0, 4
   8C:  MFLO      V1
   90:  ADDU      A0, V1, S0
   94:  LW        V1, 14 (SP)
   98:  ANDI      A0, A0, FFFF
   9C:  JAL       ~Func:sins
   A0:  ADDU      S1, V1, V0
   A4:  SLL       V0, V0, 10
   A8:  SRA       V0, V0, 10
   AC:  ADDU      V0, V0, S5
   B0:  SRL       V1, V0, 1F
   B4:  ADDU      V0, V0, V1
   B8:  SLL       V0, V0, F
   BC:  SRA       V0, V0, 10
   C0:  SLL       V1, V0, 2
   C4:  ADDU      V1, V1, V0
   C8:  SLL       V0, V1, 5
   CC:  SUBU      V1, V0, V1
   D0:  BGEZ      V1, .oDC
   D4:  COPY      V0, V1
   D8:  ADDIU     V0, V1, 7FFF
        .oDC
   DC:  SRA       A0, V0, F
   E0:  ADDIU     V0, A0, 64
   E4:  SB        V0, E (S1)
   E8:  ADDIU     V0, A0, 32
   EC:  SUBU      V1, S0, S2
   F0:  SRA       A1, V1, 1
   F4:  MULT      A1, S3
   F8:  SB        V0, D (S1)
   FC:  LHU       A0, 0 (S4)
  100:  SRA       V1, V1, 1F
  104:  SRL       A2, A0, F
  108:  MFHI      T1
  10C:  SUBU      V1, T1, V1
  110:  SLL       V0, V1, 1
  114:  ADDU      V0, V0, V1
  118:  SUBU      A1, A1, V0
  11C:  ADDIU     A1, A1, 1
  120:  SLL       A1, A1, F
  124:  MULT      A2, A1
  128:  SRL       A0, A0, E
  12C:  SLL       A0, A0, F
  130:  MFLO      V1
  134:  ADDU      A0, V1, A0
  138:  ADDU      A0, A0, S0
  13C:  JAL       ~Func:sins
  140:  ANDI      A0, A0, FFFF
  144:  SLL       V0, V0, 10
  148:  SRA       V0, V0, 10
  14C:  LBU       V1, C (S1)
  150:  ADDU      V0, V0, S5
  154:  MULT      V1, V0
  158:  MFLO      V1
  15C:  BGEZ      V1, .o170
  160:  SRA       V0, V1, 10
  164:  ORI       V0, R0, FFFF
  168:  ADDU      V1, V1, V0
  16C:  SRA       V0, V1, 10
        .o170
  170:  SB        V0, C (S1)
  174:  LW        V0, 18 (SP)
  178:  ADDIU     S0, S0, 1
  17C:  SLT       V0, S0, V0
  180:  BNE       V0, R0, .o64
  184:  MULT      S0, S3
        .o188
  188:  LA        V1, 8009A66C
  190:  LW        V0, 0 (V1)
  194:  COPY      A0, S6
  198:  COPY      S0, V0
  19C:  ADDIU     V0, V0, 8
  1A0:  SW        V0, 0 (V1)
  1A4:  LUI       V0, DE00
  1A8:  JAL       ~Func:mdl_get_copied_gfx
  1AC:  SW        V0, 0 (S0)
  1B0:  SW        V0, 4 (S0)
  1B4:  LA        V0, $???_8022EFD0
  1BC:  SLL       V1, S6, 1
  1C0:  ADDU      V1, V1, V0
  1C4:  LHU       V0, 0 (V1)
  1C8:  ADDIU     V0, V0, 253
  1CC:  SH        V0, 0 (V1)
  1D0:  LW        RA, 3C (SP)
  1D4:  LW        S6, 38 (SP)
  1D8:  LW        S5, 34 (SP)
  1DC:  LW        S4, 30 (SP)
  1E0:  LW        S3, 2C (SP)
  1E4:  LW        S2, 28 (SP)
  1E8:  LW        S1, 24 (SP)
  1EC:  LW        S0, 20 (SP)
  1F0:  JR        RA
  1F4:  ADDIU     SP, SP, 40
}

#new:Function $Function_80219DA8
{
    0:  ADDIU     SP, SP, FFE8
    4:  CLEAR     A0
    8:  SW        RA, 10 (SP)
    C:  JAL       ~Func:playFX_45
   10:  LI        A1, 10
   14:  LW        RA, 10 (SP)
   18:  LI        V0, 2
   1C:  JR        RA
   20:  ADDIU     SP, SP, 18
}

#new:Function $Function_80219DCC
{
    0:  ADDIU     SP, SP, FFD0
    4:  SW        S1, 14 (SP)
    8:  COPY      S1, A0
    C:  SW        RA, 20 (SP)
   10:  SW        S3, 1C (SP)
   14:  SW        S2, 18 (SP)
   18:  SW        S0, 10 (SP)
   1C:  SDC1      F20, 28 (SP)
   20:  LW        S0, C (S1)
   24:  LW        A1, 0 (S0)
   28:  JAL       ~Func:get_variable
   2C:  ADDIU     S0, S0, 4
   30:  LI        V1, 66666667
   38:  MULT      V0, V1
   3C:  SRA       V0, V0, 1F
   40:  LIF       F0, 6.28318
   4C:  MFHI      A3
   50:  SRA       V1, A3, 2
   54:  SUBU      V1, V1, V0
   58:  MTC1      V1, F12
   5C:  NOP
   60:  CVT.S.W   F12, F12
   64:  MUL.S     F12, F12, F0
   68:  NOP
   6C:  LIF       F0, 360.0
   74:  LIF       F2, 8.0
   7C:  DIV.S     F12, F12, F0
   80:  MUL.S     F12, F12, F2
   84:  NOP
   88:  LW        S2, 0 (S0)
   8C:  ADDIU     S0, S0, 4
   90:  LW        S3, 0 (S0)
   94:  JAL       ~Func:sin_rad
   98:  LW        S0, 4 (S0)
   9C:  COPY      A0, S1
   A0:  LIF       F2, 10.0
   A8:  COPY      A1, S2
   AC:  MUL.S     F20, F0, F2
   B0:  NOP
   B4:  JAL       ~Func:set_variable
   B8:  CLEAR     A2
   BC:  COPY      A0, S1
   C0:  TRUNC.W.S F4, F20
   C4:  MFC1      A2, F4
   C8:  JAL       ~Func:set_variable
   CC:  COPY      A1, S3
   D0:  COPY      A0, S1
   D4:  COPY      A1, S0
   D8:  JAL       ~Func:set_variable
   DC:  CLEAR     A2
   E0:  LW        RA, 20 (SP)
   E4:  LW        S3, 1C (SP)
   E8:  LW        S2, 18 (SP)
   EC:  LW        S1, 14 (SP)
   F0:  LW        S0, 10 (SP)
   F4:  LDC1      F20, 28 (SP)
   F8:  LI        V0, 2
   FC:  JR        RA
  100:  ADDIU     SP, SP, 30
}

% Origin: HEURISTIC
#new:Function $Function_80219ED0
{
    0:  ADDIU     SP, SP, FFC0
    4:  SW        S6, 38 (SP)
    8:  COPY      S6, A0
    C:  ADDIU     A1, SP, 10
   10:  ADDIU     A2, SP, 14
   14:  ADDIU     A3, SP, 18
   18:  SW        RA, 3C (SP)
   1C:  SW        S5, 34 (SP)
   20:  SW        S4, 30 (SP)
   24:  SW        S3, 2C (SP)
   28:  SW        S2, 28 (SP)
   2C:  SW        S1, 24 (SP)
   30:  JAL       ~Func:mdl_get_copied_vertices
   34:  SW        S0, 20 (SP)
   38:  LW        V0, 18 (SP)
   3C:  BLEZ      V0, .o188
   40:  CLEAR     S0
   44:  LA        V1, $???_8022F3E0
   4C:  SLL       V0, S6, 1
   50:  ADDU      S4, V0, V1
   54:  LI        S3, 55555556
   5C:  ORI       S5, R0, 8000
   60:  MULT      S0, S3
        .o64
   64:  SRA       S2, S0, 1F
   68:  MFHI      V1
   6C:  SUBU      V1, V1, S2
   70:  SLL       V0, V1, 1
   74:  ADDU      V0, V0, V1
   78:  SUBU      V0, S0, V0
   7C:  LHU       V1, 0 (S4)
   80:  ADDIU     V0, V0, 1
   84:  MULT      V1, V0
   88:  SLL       V0, S0, 4
   8C:  MFLO      V1
   90:  ADDU      A0, V1, S0
   94:  LW        V1, 14 (SP)
   98:  ANDI      A0, A0, FFFF
   9C:  JAL       ~Func:sins
   A0:  ADDU      S1, V1, V0
   A4:  SLL       V0, V0, 10
   A8:  SRA       V0, V0, 10
   AC:  ADDU      V0, V0, S5
   B0:  SRL       V1, V0, 1F
   B4:  ADDU      V0, V0, V1
   B8:  SLL       V0, V0, F
   BC:  SRA       V0, V0, 10
   C0:  SLL       V1, V0, 2
   C4:  ADDU      V1, V1, V0
   C8:  SLL       V0, V1, 5
   CC:  SUBU      V1, V0, V1
   D0:  BGEZ      V1, .oDC
   D4:  COPY      V0, V1
   D8:  ADDIU     V0, V1, 7FFF
        .oDC
   DC:  SRA       A0, V0, F
   E0:  ADDIU     V0, A0, 64
   E4:  SB        V0, E (S1)
   E8:  ADDIU     V0, A0, 32
   EC:  SUBU      V1, S0, S2
   F0:  SRA       A1, V1, 1
   F4:  MULT      A1, S3
   F8:  SB        V0, D (S1)
   FC:  LHU       A0, 0 (S4)
  100:  SRA       V1, V1, 1F
  104:  SRL       A2, A0, F
  108:  MFHI      T1
  10C:  SUBU      V1, T1, V1
  110:  SLL       V0, V1, 1
  114:  ADDU      V0, V0, V1
  118:  SUBU      A1, A1, V0
  11C:  ADDIU     A1, A1, 1
  120:  SLL       A1, A1, F
  124:  MULT      A2, A1
  128:  SRL       A0, A0, E
  12C:  SLL       A0, A0, F
  130:  MFLO      V1
  134:  ADDU      A0, V1, A0
  138:  ADDU      A0, A0, S0
  13C:  JAL       ~Func:sins
  140:  ANDI      A0, A0, FFFF
  144:  SLL       V0, V0, 10
  148:  SRA       V0, V0, 10
  14C:  LBU       V1, C (S1)
  150:  ADDU      V0, V0, S5
  154:  MULT      V1, V0
  158:  MFLO      V1
  15C:  BGEZ      V1, .o170
  160:  SRA       V0, V1, 10
  164:  ORI       V0, R0, FFFF
  168:  ADDU      V1, V1, V0
  16C:  SRA       V0, V1, 10
        .o170
  170:  SB        V0, C (S1)
  174:  LW        V0, 18 (SP)
  178:  ADDIU     S0, S0, 1
  17C:  SLT       V0, S0, V0
  180:  BNE       V0, R0, .o64
  184:  MULT      S0, S3
        .o188
  188:  LA        V1, 8009A66C
  190:  LW        V0, 0 (V1)
  194:  COPY      A0, S6
  198:  COPY      S0, V0
  19C:  ADDIU     V0, V0, 8
  1A0:  SW        V0, 0 (V1)
  1A4:  LUI       V0, DE00
  1A8:  JAL       ~Func:mdl_get_copied_gfx
  1AC:  SW        V0, 0 (S0)
  1B0:  SW        V0, 4 (S0)
  1B4:  LA        V0, $???_8022F3E0
  1BC:  SLL       V1, S6, 1
  1C0:  ADDU      V1, V1, V0
  1C4:  LHU       V0, 0 (V1)
  1C8:  ADDIU     V0, V0, 253
  1CC:  SH        V0, 0 (V1)
  1D0:  LW        RA, 3C (SP)
  1D4:  LW        S6, 38 (SP)
  1D8:  LW        S5, 34 (SP)
  1DC:  LW        S4, 30 (SP)
  1E0:  LW        S3, 2C (SP)
  1E4:  LW        S2, 28 (SP)
  1E8:  LW        S1, 24 (SP)
  1EC:  LW        S0, 20 (SP)
  1F0:  JR        RA
  1F4:  ADDIU     SP, SP, 40
}

#new:Function $Function_8021A0C8
{
    0:  ADDIU     SP, SP, FFE8
    4:  CLEAR     A0
    8:  SW        RA, 10 (SP)
    C:  JAL       ~Func:playFX_45
   10:  LI        A1, 10
   14:  LW        RA, 10 (SP)
   18:  LI        V0, 2
   1C:  JR        RA
   20:  ADDIU     SP, SP, 18
}

#new:Function $Function_8021A0EC
{
    0:  ADDIU     SP, SP, FFD0
    4:  SW        S1, 14 (SP)
    8:  COPY      S1, A0
    C:  SW        RA, 20 (SP)
   10:  SW        S3, 1C (SP)
   14:  SW        S2, 18 (SP)
   18:  SW        S0, 10 (SP)
   1C:  SDC1      F20, 28 (SP)
   20:  LW        S0, C (S1)
   24:  LW        A1, 0 (S0)
   28:  JAL       ~Func:get_variable
   2C:  ADDIU     S0, S0, 4
   30:  LI        V1, 66666667
   38:  MULT      V0, V1
   3C:  SRA       V0, V0, 1F
   40:  LIF       F0, 6.28318
   4C:  MFHI      A3
   50:  SRA       V1, A3, 2
   54:  SUBU      V1, V1, V0
   58:  MTC1      V1, F12
   5C:  NOP
   60:  CVT.S.W   F12, F12
   64:  MUL.S     F12, F12, F0
   68:  NOP
   6C:  LIF       F0, 360.0
   74:  LIF       F2, 8.0
   7C:  DIV.S     F12, F12, F0
   80:  MUL.S     F12, F12, F2
   84:  NOP
   88:  LW        S2, 0 (S0)
   8C:  ADDIU     S0, S0, 4
   90:  LW        S3, 0 (S0)
   94:  JAL       ~Func:sin_rad
   98:  LW        S0, 4 (S0)
   9C:  COPY      A0, S1
   A0:  LIF       F2, 10.0
   A8:  COPY      A1, S2
   AC:  MUL.S     F20, F0, F2
   B0:  NOP
   B4:  JAL       ~Func:set_variable
   B8:  CLEAR     A2
   BC:  COPY      A0, S1
   C0:  TRUNC.W.S F4, F20
   C4:  MFC1      A2, F4
   C8:  JAL       ~Func:set_variable
   CC:  COPY      A1, S3
   D0:  COPY      A0, S1
   D4:  COPY      A1, S0
   D8:  JAL       ~Func:set_variable
   DC:  CLEAR     A2
   E0:  LW        RA, 20 (SP)
   E4:  LW        S3, 1C (SP)
   E8:  LW        S2, 18 (SP)
   EC:  LW        S1, 14 (SP)
   F0:  LW        S0, 10 (SP)
   F4:  LDC1      F20, 28 (SP)
   F8:  LI        V0, 2
   FC:  JR        RA
  100:  ADDIU     SP, SP, 30
}

% Origin: HEURISTIC
#new:Function $Function_8021A1F0
{
    0:  ADDIU     SP, SP, FFC0
    4:  SW        S6, 38 (SP)
    8:  COPY      S6, A0
    C:  ADDIU     A1, SP, 10
   10:  ADDIU     A2, SP, 14
   14:  ADDIU     A3, SP, 18
   18:  SW        RA, 3C (SP)
   1C:  SW        S5, 34 (SP)
   20:  SW        S4, 30 (SP)
   24:  SW        S3, 2C (SP)
   28:  SW        S2, 28 (SP)
   2C:  SW        S1, 24 (SP)
   30:  JAL       ~Func:mdl_get_copied_vertices
   34:  SW        S0, 20 (SP)
   38:  LW        V0, 18 (SP)
   3C:  BLEZ      V0, .o188
   40:  CLEAR     S0
   44:  LA        V1, $???_8022F820
   4C:  SLL       V0, S6, 1
   50:  ADDU      S4, V0, V1
   54:  LI        S3, 55555556
   5C:  ORI       S5, R0, 8000
   60:  MULT      S0, S3
        .o64
   64:  SRA       S2, S0, 1F
   68:  MFHI      V1
   6C:  SUBU      V1, V1, S2
   70:  SLL       V0, V1, 1
   74:  ADDU      V0, V0, V1
   78:  SUBU      V0, S0, V0
   7C:  LHU       V1, 0 (S4)
   80:  ADDIU     V0, V0, 1
   84:  MULT      V1, V0
   88:  SLL       V0, S0, 4
   8C:  MFLO      V1
   90:  ADDU      A0, V1, S0
   94:  LW        V1, 14 (SP)
   98:  ANDI      A0, A0, FFFF
   9C:  JAL       ~Func:sins
   A0:  ADDU      S1, V1, V0
   A4:  SLL       V0, V0, 10
   A8:  SRA       V0, V0, 10
   AC:  ADDU      V0, V0, S5
   B0:  SRL       V1, V0, 1F
   B4:  ADDU      V0, V0, V1
   B8:  SLL       V0, V0, F
   BC:  SRA       V0, V0, 10
   C0:  SLL       V1, V0, 2
   C4:  ADDU      V1, V1, V0
   C8:  SLL       V0, V1, 5
   CC:  SUBU      V1, V0, V1
   D0:  BGEZ      V1, .oDC
   D4:  COPY      V0, V1
   D8:  ADDIU     V0, V1, 7FFF
        .oDC
   DC:  SRA       A0, V0, F
   E0:  ADDIU     V0, A0, 64
   E4:  SB        V0, E (S1)
   E8:  ADDIU     V0, A0, 32
   EC:  SUBU      V1, S0, S2
   F0:  SRA       A1, V1, 1
   F4:  MULT      A1, S3
   F8:  SB        V0, D (S1)
   FC:  LHU       A0, 0 (S4)
  100:  SRA       V1, V1, 1F
  104:  SRL       A2, A0, F
  108:  MFHI      T1
  10C:  SUBU      V1, T1, V1
  110:  SLL       V0, V1, 1
  114:  ADDU      V0, V0, V1
  118:  SUBU      A1, A1, V0
  11C:  ADDIU     A1, A1, 1
  120:  SLL       A1, A1, F
  124:  MULT      A2, A1
  128:  SRL       A0, A0, E
  12C:  SLL       A0, A0, F
  130:  MFLO      V1
  134:  ADDU      A0, V1, A0
  138:  ADDU      A0, A0, S0
  13C:  JAL       ~Func:sins
  140:  ANDI      A0, A0, FFFF
  144:  SLL       V0, V0, 10
  148:  SRA       V0, V0, 10
  14C:  LBU       V1, C (S1)
  150:  ADDU      V0, V0, S5
  154:  MULT      V1, V0
  158:  MFLO      V1
  15C:  BGEZ      V1, .o170
  160:  SRA       V0, V1, 10
  164:  ORI       V0, R0, FFFF
  168:  ADDU      V1, V1, V0
  16C:  SRA       V0, V1, 10
        .o170
  170:  SB        V0, C (S1)
  174:  LW        V0, 18 (SP)
  178:  ADDIU     S0, S0, 1
  17C:  SLT       V0, S0, V0
  180:  BNE       V0, R0, .o64
  184:  MULT      S0, S3
        .o188
  188:  LA        V1, 8009A66C
  190:  LW        V0, 0 (V1)
  194:  COPY      A0, S6
  198:  COPY      S0, V0
  19C:  ADDIU     V0, V0, 8
  1A0:  SW        V0, 0 (V1)
  1A4:  LUI       V0, DE00
  1A8:  JAL       ~Func:mdl_get_copied_gfx
  1AC:  SW        V0, 0 (S0)
  1B0:  SW        V0, 4 (S0)
  1B4:  LA        V0, $???_8022F820
  1BC:  SLL       V1, S6, 1
  1C0:  ADDU      V1, V1, V0
  1C4:  LHU       V0, 0 (V1)
  1C8:  ADDIU     V0, V0, 253
  1CC:  SH        V0, 0 (V1)
  1D0:  LW        RA, 3C (SP)
  1D4:  LW        S6, 38 (SP)
  1D8:  LW        S5, 34 (SP)
  1DC:  LW        S4, 30 (SP)
  1E0:  LW        S3, 2C (SP)
  1E4:  LW        S2, 28 (SP)
  1E8:  LW        S1, 24 (SP)
  1EC:  LW        S0, 20 (SP)
  1F0:  JR        RA
  1F4:  ADDIU     SP, SP, 40
}

#new:Function $Function_8021A3E8
{
    0:  ADDIU     SP, SP, FFE8
    4:  CLEAR     A0
    8:  SW        RA, 10 (SP)
    C:  JAL       ~Func:playFX_45
   10:  LI        A1, 10
   14:  LW        RA, 10 (SP)
   18:  LI        V0, 2
   1C:  JR        RA
   20:  ADDIU     SP, SP, 18
}

% Origin: HEURISTIC
#new:Function $Function_8021A40C
{
    0:  ADDIU     SP, SP, FFD0
    4:  SW        S1, 14 (SP)
    8:  COPY      S1, A0
    C:  SW        RA, 20 (SP)
   10:  SW        S3, 1C (SP)
   14:  SW        S2, 18 (SP)
   18:  SW        S0, 10 (SP)
   1C:  SDC1      F20, 28 (SP)
   20:  LW        S0, C (S1)
   24:  LW        A1, 0 (S0)
   28:  JAL       ~Func:get_variable
   2C:  ADDIU     S0, S0, 4
   30:  LI        V1, 66666667
   38:  MULT      V0, V1
   3C:  SRA       V0, V0, 1F
   40:  LIF       F0, 6.28318
   4C:  MFHI      A3
   50:  SRA       V1, A3, 2
   54:  SUBU      V1, V1, V0
   58:  MTC1      V1, F12
   5C:  NOP
   60:  CVT.S.W   F12, F12
   64:  MUL.S     F12, F12, F0
   68:  NOP
   6C:  LIF       F0, 360.0
   74:  LIF       F2, 8.0
   7C:  DIV.S     F12, F12, F0
   80:  MUL.S     F12, F12, F2
   84:  NOP
   88:  LW        S2, 0 (S0)
   8C:  ADDIU     S0, S0, 4
   90:  LW        S3, 0 (S0)
   94:  JAL       ~Func:sin_rad
   98:  LW        S0, 4 (S0)
   9C:  COPY      A0, S1
   A0:  LIF       F2, 10.0
   A8:  COPY      A1, S2
   AC:  MUL.S     F20, F0, F2
   B0:  NOP
   B4:  JAL       ~Func:set_variable
   B8:  CLEAR     A2
   BC:  COPY      A0, S1
   C0:  TRUNC.W.S F4, F20
   C4:  MFC1      A2, F4
   C8:  JAL       ~Func:set_variable
   CC:  COPY      A1, S3
   D0:  COPY      A0, S1
   D4:  COPY      A1, S0
   D8:  JAL       ~Func:set_variable
   DC:  CLEAR     A2
   E0:  LW        RA, 20 (SP)
   E4:  LW        S3, 1C (SP)
   E8:  LW        S2, 18 (SP)
   EC:  LW        S1, 14 (SP)
   F0:  LW        S0, 10 (SP)
   F4:  LDC1      F20, 28 (SP)
   F8:  LI        V0, 2
   FC:  JR        RA
  100:  ADDIU     SP, SP, 30
}

% Origin: HEURISTIC
#new:Function $Function_8021A510
{
    0:  ADDIU     SP, SP, FFC0
    4:  SW        S6, 38 (SP)
    8:  COPY      S6, A0
    C:  ADDIU     A1, SP, 10
   10:  ADDIU     A2, SP, 14
   14:  ADDIU     A3, SP, 18
   18:  SW        RA, 3C (SP)
   1C:  SW        S5, 34 (SP)
   20:  SW        S4, 30 (SP)
   24:  SW        S3, 2C (SP)
   28:  SW        S2, 28 (SP)
   2C:  SW        S1, 24 (SP)
   30:  JAL       ~Func:mdl_get_copied_vertices
   34:  SW        S0, 20 (SP)
   38:  LW        V0, 18 (SP)
   3C:  BLEZ      V0, .o188
   40:  CLEAR     S0
   44:  LA        V1, $???_8022FB70
   4C:  SLL       V0, S6, 1
   50:  ADDU      S4, V0, V1
   54:  LI        S3, 55555556
   5C:  ORI       S5, R0, 8000
   60:  MULT      S0, S3
        .o64
   64:  SRA       S2, S0, 1F
   68:  MFHI      V1
   6C:  SUBU      V1, V1, S2
   70:  SLL       V0, V1, 1
   74:  ADDU      V0, V0, V1
   78:  SUBU      V0, S0, V0
   7C:  LHU       V1, 0 (S4)
   80:  ADDIU     V0, V0, 1
   84:  MULT      V1, V0
   88:  SLL       V0, S0, 4
   8C:  MFLO      V1
   90:  ADDU      A0, V1, S0
   94:  LW        V1, 14 (SP)
   98:  ANDI      A0, A0, FFFF
   9C:  JAL       ~Func:sins
   A0:  ADDU      S1, V1, V0
   A4:  SLL       V0, V0, 10
   A8:  SRA       V0, V0, 10
   AC:  ADDU      V0, V0, S5
   B0:  SRL       V1, V0, 1F
   B4:  ADDU      V0, V0, V1
   B8:  SLL       V0, V0, F
   BC:  SRA       V0, V0, 10
   C0:  SLL       V1, V0, 2
   C4:  ADDU      V1, V1, V0
   C8:  SLL       V0, V1, 5
   CC:  SUBU      V1, V0, V1
   D0:  BGEZ      V1, .oDC
   D4:  COPY      V0, V1
   D8:  ADDIU     V0, V1, 7FFF
        .oDC
   DC:  SRA       A0, V0, F
   E0:  ADDIU     V0, A0, 64
   E4:  SB        V0, E (S1)
   E8:  ADDIU     V0, A0, 32
   EC:  SUBU      V1, S0, S2
   F0:  SRA       A1, V1, 1
   F4:  MULT      A1, S3
   F8:  SB        V0, D (S1)
   FC:  LHU       A0, 0 (S4)
  100:  SRA       V1, V1, 1F
  104:  SRL       A2, A0, F
  108:  MFHI      T1
  10C:  SUBU      V1, T1, V1
  110:  SLL       V0, V1, 1
  114:  ADDU      V0, V0, V1
  118:  SUBU      A1, A1, V0
  11C:  ADDIU     A1, A1, 1
  120:  SLL       A1, A1, F
  124:  MULT      A2, A1
  128:  SRL       A0, A0, E
  12C:  SLL       A0, A0, F
  130:  MFLO      V1
  134:  ADDU      A0, V1, A0
  138:  ADDU      A0, A0, S0
  13C:  JAL       ~Func:sins
  140:  ANDI      A0, A0, FFFF
  144:  SLL       V0, V0, 10
  148:  SRA       V0, V0, 10
  14C:  LBU       V1, C (S1)
  150:  ADDU      V0, V0, S5
  154:  MULT      V1, V0
  158:  MFLO      V1
  15C:  BGEZ      V1, .o170
  160:  SRA       V0, V1, 10
  164:  ORI       V0, R0, FFFF
  168:  ADDU      V1, V1, V0
  16C:  SRA       V0, V1, 10
        .o170
  170:  SB        V0, C (S1)
  174:  LW        V0, 18 (SP)
  178:  ADDIU     S0, S0, 1
  17C:  SLT       V0, S0, V0
  180:  BNE       V0, R0, .o64
  184:  MULT      S0, S3
        .o188
  188:  LA        V1, 8009A66C
  190:  LW        V0, 0 (V1)
  194:  COPY      A0, S6
  198:  COPY      S0, V0
  19C:  ADDIU     V0, V0, 8
  1A0:  SW        V0, 0 (V1)
  1A4:  LUI       V0, DE00
  1A8:  JAL       ~Func:mdl_get_copied_gfx
  1AC:  SW        V0, 0 (S0)
  1B0:  SW        V0, 4 (S0)
  1B4:  LA        V0, $???_8022FB70
  1BC:  SLL       V1, S6, 1
  1C0:  ADDU      V1, V1, V0
  1C4:  LHU       V0, 0 (V1)
  1C8:  ADDIU     V0, V0, 253
  1CC:  SH        V0, 0 (V1)
  1D0:  LW        RA, 3C (SP)
  1D4:  LW        S6, 38 (SP)
  1D8:  LW        S5, 34 (SP)
  1DC:  LW        S4, 30 (SP)
  1E0:  LW        S3, 2C (SP)
  1E4:  LW        S2, 28 (SP)
  1E8:  LW        S1, 24 (SP)
  1EC:  LW        S0, 20 (SP)
  1F0:  JR        RA
  1F4:  ADDIU     SP, SP, 40
}

#new:Function $Function_8021A708
{
    0:  ADDIU     SP, SP, FFE8
    4:  CLEAR     A0
    8:  SW        RA, 10 (SP)
    C:  JAL       ~Func:playFX_45
   10:  LI        A1, 10
   14:  LW        RA, 10 (SP)
   18:  LI        V0, 2
   1C:  JR        RA
   20:  ADDIU     SP, SP, 18
}

% Origin: HEURISTIC
#new:Function $Function_8021A72C
{
    0:  ADDIU     SP, SP, FFD0
    4:  SW        S1, 14 (SP)
    8:  COPY      S1, A0
    C:  SW        RA, 20 (SP)
   10:  SW        S3, 1C (SP)
   14:  SW        S2, 18 (SP)
   18:  SW        S0, 10 (SP)
   1C:  SDC1      F20, 28 (SP)
   20:  LW        S0, C (S1)
   24:  LW        A1, 0 (S0)
   28:  JAL       ~Func:get_variable
   2C:  ADDIU     S0, S0, 4
   30:  LI        V1, 66666667
   38:  MULT      V0, V1
   3C:  SRA       V0, V0, 1F
   40:  LIF       F0, 6.28318
   4C:  MFHI      A3
   50:  SRA       V1, A3, 2
   54:  SUBU      V1, V1, V0
   58:  MTC1      V1, F12
   5C:  NOP
   60:  CVT.S.W   F12, F12
   64:  MUL.S     F12, F12, F0
   68:  NOP
   6C:  LIF       F0, 360.0
   74:  LIF       F2, 8.0
   7C:  DIV.S     F12, F12, F0
   80:  MUL.S     F12, F12, F2
   84:  NOP
   88:  LW        S2, 0 (S0)
   8C:  ADDIU     S0, S0, 4
   90:  LW        S3, 0 (S0)
   94:  JAL       ~Func:sin_rad
   98:  LW        S0, 4 (S0)
   9C:  COPY      A0, S1
   A0:  LIF       F2, 10.0
   A8:  COPY      A1, S2
   AC:  MUL.S     F20, F0, F2
   B0:  NOP
   B4:  JAL       ~Func:set_variable
   B8:  CLEAR     A2
   BC:  COPY      A0, S1
   C0:  TRUNC.W.S F4, F20
   C4:  MFC1      A2, F4
   C8:  JAL       ~Func:set_variable
   CC:  COPY      A1, S3
   D0:  COPY      A0, S1
   D4:  COPY      A1, S0
   D8:  JAL       ~Func:set_variable
   DC:  CLEAR     A2
   E0:  LW        RA, 20 (SP)
   E4:  LW        S3, 1C (SP)
   E8:  LW        S2, 18 (SP)
   EC:  LW        S1, 14 (SP)
   F0:  LW        S0, 10 (SP)
   F4:  LDC1      F20, 28 (SP)
   F8:  LI        V0, 2
   FC:  JR        RA
  100:  ADDIU     SP, SP, 30
}

% Origin: HEURISTIC
#new:Function $Function_8021A830
{
    0:  ADDIU     SP, SP, FFC0
    4:  SW        S6, 38 (SP)
    8:  COPY      S6, A0
    C:  ADDIU     A1, SP, 10
   10:  ADDIU     A2, SP, 14
   14:  ADDIU     A3, SP, 18
   18:  SW        RA, 3C (SP)
   1C:  SW        S5, 34 (SP)
   20:  SW        S4, 30 (SP)
   24:  SW        S3, 2C (SP)
   28:  SW        S2, 28 (SP)
   2C:  SW        S1, 24 (SP)
   30:  JAL       ~Func:mdl_get_copied_vertices
   34:  SW        S0, 20 (SP)
   38:  LW        V0, 18 (SP)
   3C:  BLEZ      V0, .o188
   40:  CLEAR     S0
   44:  LA        V1, $???_8022FEE0
   4C:  SLL       V0, S6, 1
   50:  ADDU      S4, V0, V1
   54:  LI        S3, 55555556
   5C:  ORI       S5, R0, 8000
   60:  MULT      S0, S3
        .o64
   64:  SRA       S2, S0, 1F
   68:  MFHI      V1
   6C:  SUBU      V1, V1, S2
   70:  SLL       V0, V1, 1
   74:  ADDU      V0, V0, V1
   78:  SUBU      V0, S0, V0
   7C:  LHU       V1, 0 (S4)
   80:  ADDIU     V0, V0, 1
   84:  MULT      V1, V0
   88:  SLL       V0, S0, 4
   8C:  MFLO      V1
   90:  ADDU      A0, V1, S0
   94:  LW        V1, 14 (SP)
   98:  ANDI      A0, A0, FFFF
   9C:  JAL       ~Func:sins
   A0:  ADDU      S1, V1, V0
   A4:  SLL       V0, V0, 10
   A8:  SRA       V0, V0, 10
   AC:  ADDU      V0, V0, S5
   B0:  SRL       V1, V0, 1F
   B4:  ADDU      V0, V0, V1
   B8:  SLL       V0, V0, F
   BC:  SRA       V0, V0, 10
   C0:  SLL       V1, V0, 2
   C4:  ADDU      V1, V1, V0
   C8:  SLL       V0, V1, 5
   CC:  SUBU      V1, V0, V1
   D0:  BGEZ      V1, .oDC
   D4:  COPY      V0, V1
   D8:  ADDIU     V0, V1, 7FFF
        .oDC
   DC:  SRA       A0, V0, F
   E0:  ADDIU     V0, A0, 64
   E4:  SB        V0, E (S1)
   E8:  ADDIU     V0, A0, 32
   EC:  SUBU      V1, S0, S2
   F0:  SRA       A1, V1, 1
   F4:  MULT      A1, S3
   F8:  SB        V0, D (S1)
   FC:  LHU       A0, 0 (S4)
  100:  SRA       V1, V1, 1F
  104:  SRL       A2, A0, F
  108:  MFHI      T1
  10C:  SUBU      V1, T1, V1
  110:  SLL       V0, V1, 1
  114:  ADDU      V0, V0, V1
  118:  SUBU      A1, A1, V0
  11C:  ADDIU     A1, A1, 1
  120:  SLL       A1, A1, F
  124:  MULT      A2, A1
  128:  SRL       A0, A0, E
  12C:  SLL       A0, A0, F
  130:  MFLO      V1
  134:  ADDU      A0, V1, A0
  138:  ADDU      A0, A0, S0
  13C:  JAL       ~Func:sins
  140:  ANDI      A0, A0, FFFF
  144:  SLL       V0, V0, 10
  148:  SRA       V0, V0, 10
  14C:  LBU       V1, C (S1)
  150:  ADDU      V0, V0, S5
  154:  MULT      V1, V0
  158:  MFLO      V1
  15C:  BGEZ      V1, .o170
  160:  SRA       V0, V1, 10
  164:  ORI       V0, R0, FFFF
  168:  ADDU      V1, V1, V0
  16C:  SRA       V0, V1, 10
        .o170
  170:  SB        V0, C (S1)
  174:  LW        V0, 18 (SP)
  178:  ADDIU     S0, S0, 1
  17C:  SLT       V0, S0, V0
  180:  BNE       V0, R0, .o64
  184:  MULT      S0, S3
        .o188
  188:  LA        V1, 8009A66C
  190:  LW        V0, 0 (V1)
  194:  COPY      A0, S6
  198:  COPY      S0, V0
  19C:  ADDIU     V0, V0, 8
  1A0:  SW        V0, 0 (V1)
  1A4:  LUI       V0, DE00
  1A8:  JAL       ~Func:mdl_get_copied_gfx
  1AC:  SW        V0, 0 (S0)
  1B0:  SW        V0, 4 (S0)
  1B4:  LA        V0, $???_8022FEE0
  1BC:  SLL       V1, S6, 1
  1C0:  ADDU      V1, V1, V0
  1C4:  LHU       V0, 0 (V1)
  1C8:  ADDIU     V0, V0, 253
  1CC:  SH        V0, 0 (V1)
  1D0:  LW        RA, 3C (SP)
  1D4:  LW        S6, 38 (SP)
  1D8:  LW        S5, 34 (SP)
  1DC:  LW        S4, 30 (SP)
  1E0:  LW        S3, 2C (SP)
  1E4:  LW        S2, 28 (SP)
  1E8:  LW        S1, 24 (SP)
  1EC:  LW        S0, 20 (SP)
  1F0:  JR        RA
  1F4:  ADDIU     SP, SP, 40
}

#new:Function $Function_8021AA28
{
    0:  ADDIU     SP, SP, FFE8
    4:  CLEAR     A0
    8:  SW        RA, 10 (SP)
    C:  JAL       ~Func:playFX_45
   10:  LI        A1, 10
   14:  LW        RA, 10 (SP)
   18:  LI        V0, 2
   1C:  JR        RA
   20:  ADDIU     SP, SP, 18
}

% Origin: HEURISTIC
#new:Function $Function_8021AA4C
{
    0:  ADDIU     SP, SP, FFD0
    4:  SW        S1, 14 (SP)
    8:  COPY      S1, A0
    C:  SW        RA, 20 (SP)
   10:  SW        S3, 1C (SP)
   14:  SW        S2, 18 (SP)
   18:  SW        S0, 10 (SP)
   1C:  SDC1      F20, 28 (SP)
   20:  LW        S0, C (S1)
   24:  LW        A1, 0 (S0)
   28:  JAL       ~Func:get_variable
   2C:  ADDIU     S0, S0, 4
   30:  LI        V1, 66666667
   38:  MULT      V0, V1
   3C:  SRA       V0, V0, 1F
   40:  LIF       F0, 6.28318
   4C:  MFHI      A3
   50:  SRA       V1, A3, 2
   54:  SUBU      V1, V1, V0
   58:  MTC1      V1, F12
   5C:  NOP
   60:  CVT.S.W   F12, F12
   64:  MUL.S     F12, F12, F0
   68:  NOP
   6C:  LIF       F0, 360.0
   74:  LIF       F2, 8.0
   7C:  DIV.S     F12, F12, F0
   80:  MUL.S     F12, F12, F2
   84:  NOP
   88:  LW        S2, 0 (S0)
   8C:  ADDIU     S0, S0, 4
   90:  LW        S3, 0 (S0)
   94:  JAL       ~Func:sin_rad
   98:  LW        S0, 4 (S0)
   9C:  COPY      A0, S1
   A0:  LIF       F2, 10.0
   A8:  COPY      A1, S2
   AC:  MUL.S     F20, F0, F2
   B0:  NOP
   B4:  JAL       ~Func:set_variable
   B8:  CLEAR     A2
   BC:  COPY      A0, S1
   C0:  TRUNC.W.S F4, F20
   C4:  MFC1      A2, F4
   C8:  JAL       ~Func:set_variable
   CC:  COPY      A1, S3
   D0:  COPY      A0, S1
   D4:  COPY      A1, S0
   D8:  JAL       ~Func:set_variable
   DC:  CLEAR     A2
   E0:  LW        RA, 20 (SP)
   E4:  LW        S3, 1C (SP)
   E8:  LW        S2, 18 (SP)
   EC:  LW        S1, 14 (SP)
   F0:  LW        S0, 10 (SP)
   F4:  LDC1      F20, 28 (SP)
   F8:  LI        V0, 2
   FC:  JR        RA
  100:  ADDIU     SP, SP, 30
}

% Origin: HEURISTIC
#new:Function $Function_8021AB50
{
    0:  ADDIU     SP, SP, FFC0
    4:  SW        S6, 38 (SP)
    8:  COPY      S6, A0
    C:  ADDIU     A1, SP, 10
   10:  ADDIU     A2, SP, 14
   14:  ADDIU     A3, SP, 18
   18:  SW        RA, 3C (SP)
   1C:  SW        S5, 34 (SP)
   20:  SW        S4, 30 (SP)
   24:  SW        S3, 2C (SP)
   28:  SW        S2, 28 (SP)
   2C:  SW        S1, 24 (SP)
   30:  JAL       ~Func:mdl_get_copied_vertices
   34:  SW        S0, 20 (SP)
   38:  LW        V0, 18 (SP)
   3C:  BLEZ      V0, .o188
   40:  CLEAR     S0
   44:  LA        V1, $???_80230260
   4C:  SLL       V0, S6, 1
   50:  ADDU      S4, V0, V1
   54:  LI        S3, 55555556
   5C:  ORI       S5, R0, 8000
   60:  MULT      S0, S3
        .o64
   64:  SRA       S2, S0, 1F
   68:  MFHI      V1
   6C:  SUBU      V1, V1, S2
   70:  SLL       V0, V1, 1
   74:  ADDU      V0, V0, V1
   78:  SUBU      V0, S0, V0
   7C:  LHU       V1, 0 (S4)
   80:  ADDIU     V0, V0, 1
   84:  MULT      V1, V0
   88:  SLL       V0, S0, 4
   8C:  MFLO      V1
   90:  ADDU      A0, V1, S0
   94:  LW        V1, 14 (SP)
   98:  ANDI      A0, A0, FFFF
   9C:  JAL       ~Func:sins
   A0:  ADDU      S1, V1, V0
   A4:  SLL       V0, V0, 10
   A8:  SRA       V0, V0, 10
   AC:  ADDU      V0, V0, S5
   B0:  SRL       V1, V0, 1F
   B4:  ADDU      V0, V0, V1
   B8:  SLL       V0, V0, F
   BC:  SRA       V0, V0, 10
   C0:  SLL       V1, V0, 2
   C4:  ADDU      V1, V1, V0
   C8:  SLL       V0, V1, 5
   CC:  SUBU      V1, V0, V1
   D0:  BGEZ      V1, .oDC
   D4:  COPY      V0, V1
   D8:  ADDIU     V0, V1, 7FFF
        .oDC
   DC:  SRA       A0, V0, F
   E0:  ADDIU     V0, A0, 64
   E4:  SB        V0, E (S1)
   E8:  ADDIU     V0, A0, 32
   EC:  SUBU      V1, S0, S2
   F0:  SRA       A1, V1, 1
   F4:  MULT      A1, S3
   F8:  SB        V0, D (S1)
   FC:  LHU       A0, 0 (S4)
  100:  SRA       V1, V1, 1F
  104:  SRL       A2, A0, F
  108:  MFHI      T1
  10C:  SUBU      V1, T1, V1
  110:  SLL       V0, V1, 1
  114:  ADDU      V0, V0, V1
  118:  SUBU      A1, A1, V0
  11C:  ADDIU     A1, A1, 1
  120:  SLL       A1, A1, F
  124:  MULT      A2, A1
  128:  SRL       A0, A0, E
  12C:  SLL       A0, A0, F
  130:  MFLO      V1
  134:  ADDU      A0, V1, A0
  138:  ADDU      A0, A0, S0
  13C:  JAL       ~Func:sins
  140:  ANDI      A0, A0, FFFF
  144:  SLL       V0, V0, 10
  148:  SRA       V0, V0, 10
  14C:  LBU       V1, C (S1)
  150:  ADDU      V0, V0, S5
  154:  MULT      V1, V0
  158:  MFLO      V1
  15C:  BGEZ      V1, .o170
  160:  SRA       V0, V1, 10
  164:  ORI       V0, R0, FFFF
  168:  ADDU      V1, V1, V0
  16C:  SRA       V0, V1, 10
        .o170
  170:  SB        V0, C (S1)
  174:  LW        V0, 18 (SP)
  178:  ADDIU     S0, S0, 1
  17C:  SLT       V0, S0, V0
  180:  BNE       V0, R0, .o64
  184:  MULT      S0, S3
        .o188
  188:  LA        V1, 8009A66C
  190:  LW        V0, 0 (V1)
  194:  COPY      A0, S6
  198:  COPY      S0, V0
  19C:  ADDIU     V0, V0, 8
  1A0:  SW        V0, 0 (V1)
  1A4:  LUI       V0, DE00
  1A8:  JAL       ~Func:mdl_get_copied_gfx
  1AC:  SW        V0, 0 (S0)
  1B0:  SW        V0, 4 (S0)
  1B4:  LA        V0, $???_80230260
  1BC:  SLL       V1, S6, 1
  1C0:  ADDU      V1, V1, V0
  1C4:  LHU       V0, 0 (V1)
  1C8:  ADDIU     V0, V0, 253
  1CC:  SH        V0, 0 (V1)
  1D0:  LW        RA, 3C (SP)
  1D4:  LW        S6, 38 (SP)
  1D8:  LW        S5, 34 (SP)
  1DC:  LW        S4, 30 (SP)
  1E0:  LW        S3, 2C (SP)
  1E4:  LW        S2, 28 (SP)
  1E8:  LW        S1, 24 (SP)
  1EC:  LW        S0, 20 (SP)
  1F0:  JR        RA
  1F4:  ADDIU     SP, SP, 40
}

#new:Function $Function_8021AD48
{
    0:  ADDIU     SP, SP, FFE8
    4:  CLEAR     A0
    8:  SW        RA, 10 (SP)
    C:  JAL       ~Func:playFX_45
   10:  LI        A1, 10
   14:  LW        RA, 10 (SP)
   18:  LI        V0, 2
   1C:  JR        RA
   20:  ADDIU     SP, SP, 18
}

#new:Function $Function_8021AD6C
{
    0:  ADDIU     SP, SP, FFD0
    4:  SW        S1, 14 (SP)
    8:  COPY      S1, A0
    C:  SW        RA, 20 (SP)
   10:  SW        S3, 1C (SP)
   14:  SW        S2, 18 (SP)
   18:  SW        S0, 10 (SP)
   1C:  SDC1      F20, 28 (SP)
   20:  LW        S0, C (S1)
   24:  LW        A1, 0 (S0)
   28:  JAL       ~Func:get_variable
   2C:  ADDIU     S0, S0, 4
   30:  LI        V1, 66666667
   38:  MULT      V0, V1
   3C:  SRA       V0, V0, 1F
   40:  LIF       F0, 6.28318
   4C:  MFHI      A3
   50:  SRA       V1, A3, 2
   54:  SUBU      V1, V1, V0
   58:  MTC1      V1, F12
   5C:  NOP
   60:  CVT.S.W   F12, F12
   64:  MUL.S     F12, F12, F0
   68:  NOP
   6C:  LIF       F0, 360.0
   74:  LIF       F2, 8.0
   7C:  DIV.S     F12, F12, F0
   80:  MUL.S     F12, F12, F2
   84:  NOP
   88:  LW        S2, 0 (S0)
   8C:  ADDIU     S0, S0, 4
   90:  LW        S3, 0 (S0)
   94:  JAL       ~Func:sin_rad
   98:  LW        S0, 4 (S0)
   9C:  COPY      A0, S1
   A0:  LIF       F2, 10.0
   A8:  COPY      A1, S2
   AC:  MUL.S     F20, F0, F2
   B0:  NOP
   B4:  JAL       ~Func:set_variable
   B8:  CLEAR     A2
   BC:  COPY      A0, S1
   C0:  TRUNC.W.S F4, F20
   C4:  MFC1      A2, F4
   C8:  JAL       ~Func:set_variable
   CC:  COPY      A1, S3
   D0:  COPY      A0, S1
   D4:  COPY      A1, S0
   D8:  JAL       ~Func:set_variable
   DC:  CLEAR     A2
   E0:  LW        RA, 20 (SP)
   E4:  LW        S3, 1C (SP)
   E8:  LW        S2, 18 (SP)
   EC:  LW        S1, 14 (SP)
   F0:  LW        S0, 10 (SP)
   F4:  LDC1      F20, 28 (SP)
   F8:  LI        V0, 2
   FC:  JR        RA
  100:  ADDIU     SP, SP, 30
}

% Origin: HEURISTIC
#new:Function $Function_8021AE70
{
    0:  ADDIU     SP, SP, FFE8
    4:  SW        RA, 10 (SP)
    8:  JAL       ~Func:enable_background_wave
    C:  NOP
   10:  LW        RA, 10 (SP)
   14:  JR        RA
   18:  ADDIU     SP, SP, 18
}

PADDING: 8021AE8C to 8021AE90 (00626A2C to 00626A30)
00000000

#new:IdleAnimations $IdleAnimations_8021AE90
{
	.Status:Normal    004E0002
	.Status:Stone     004E0000
	.Status:Sleep     004E000D
	.Status:Poison    004E0002
	.Status:Stop      004E0000
	.Status:Static    004E0002
	.Status:Paralyze  004E0000
	.Status:Dizzy     004E000E
	.Status:Fear      004E000E
	.Status:End
}

#new:IdleAnimations $IdleAnimations_8021AEDC
{
	.Status:Normal    004E000A
	.Status:End
}

#new:IdleAnimations $IdleAnimations_8021AEE8
{
	.Status:Normal    004E0004
	.Status:End
}

#new:DefenseTable $DefenseTable_8021AEF4
{
	.Element:Normal 00000000
	.Element:End
}

#new:StatusTable $StatusTable_8021AF00
{
	.Status:Normal      0`
	.Status:Default     0`
	.Status:Sleep      60`
	.Status:Poison      0`
	.Status:Frozen      0`
	.Status:Dizzy      75`
	.Status:Fear        0`
	.Status:Static     75`
	.Status:Paralyze   75`
	.Status:Shrink     75`
	.Status:Stop       80`
	.Status:DefaultTurnMod    0`
	.Status:SleepTurnMod     -1`
	.Status:PoisonTurnMod     0`
	.Status:FrozenTurnMod     0`
	.Status:DizzyTurnMod     -1`
	.Status:FearTurnMod       0`
	.Status:StaticTurnMod     0`
	.Status:ParalyzeTurnMod   1`
	.Status:ShrinkTurnMod     0`
	.Status:StopTurnMod      -1`
	.Status:End
}

#new:PartsTable $PartsTable_8021AFAC
{
	00800000 01000000 FB1900FF $IdleAnimations_8021AE90 $DefenseTable_8021AEF4 00000000 00000000 FEF60000 00000000
}

#new:Actor $Duplighost
{
	% stats
	[Index]        3Bb
	[Level]        23`b
	[MaxHP]        15`b
	[Coins]         2`b
	[Flags]       00000000
	[StatusTable] $StatusTable_8021AF00
	% ai
	[PartsCount]    1`s
	[PartsTable]  $PartsTable_8021AFAC
	[Script]      $Script_Init_8021AFF8
	% move effectiveness
	[Escape]       50`b
	[Item]         50`b
	[AirLift]      80`b
	[Hurricane]    70`b % Bow's "Spook" as well
	[UpAndAway]    95`b
	[PowerBounce]  90`b
	[SpinSmash]     0`b % weight (0-4)
	% ui positions
	[Size]         36`b  36`b % width height
	[HealthBar]     0`b   0`b % dx dy
	[StatusTurn]  -10`b  20`b % dx dy
	[StatusIcon]   10`b  20`b % dx dy
}

#new:Script $Script_Init_8021AFF8
{
    0:  Call  BindTakeTurn  ( .Actor:Self $Script_TakeTurn_80227C40 )
   14:  Call  BindIdle      ( .Actor:Self $Script_Idle_8021B110 )
   28:  Call  BindHandleEvent   ( .Actor:Self $Script_HandleEvent_8021B15C )
   3C:  Call  BindNextTurn  ( .Actor:Self $Script_NextTurn_8021B070 )
   50:  Call  SetActorVar   ( .Actor:Self 00000008 00000000 )
   68:  Return
   70:  End
}

#new:Script $Script_NextTurn_8021B070
{
    0:  Call  GetBattlePhase    ( *Var0 )
   10:  Switch  *Var0
   1C:  	Case  ==  0000000A
   28:  	Case  ==  0000000C
   34:  	Case  ==  0000000B
   40:  		Call  GetActorVar   ( .Actor:Self 00000008 *Var0 )
   58:  		If  *Var0  ==  00000003
   68:  			Call  SetActorVar   ( .Actor:Self 00000008 00000002 )
   80:  		EndIf
   88:  EndSwitch
   90:  Return
   98:  End
}

#new:Script $Script_Idle_8021B110
{
    0:  Return
    8:  End
}

#new:Script $Script_8021B120
{
    0:  SetConst  *Var0  00000001
   10:  SetConst  *Var1  004E0004
   20:  ExecWait  DoReturnHome
   2C:  Return
   34:  End
}

#new:Script $Script_HandleEvent_8021B15C
{
    0:  Call  UseIdleAnimation  ( .Actor:Self .False )
   14:  Call  EnableIdleScript  ( .Actor:Self 00000000 )
   28:  Call  GetLastEvent      ( .Actor:Self *Var0 )
   3C:  Switch  *Var0
   48:  	CaseOR  ==  .Event:HitCombo % 9
   54:  	CaseOR  ==  .Event:Hit % A
   60:  		SetConst  *Var0  00000001
   70:  		SetConst  *Var1  004E000A
   80:  		ExecWait  DoNormalHit
   8C:  	EndCaseGroup
   94:  	Case  ==  .Event:BurnHit % E
   A0:  		SetConst  *Var0  00000001
   B0:  		SetConst  *Var1  004E000C
   C0:  		SetConst  *Var2  FFFFFFFF
   D0:  		ExecWait  DoBurnHit
   DC:  	Case  ==  .Event:BurnDeath % 24
   E8:  		SetConst  *Var0  00000001
   F8:  		SetConst  *Var1  004E000C
  108:  		SetConst  *Var2  FFFFFFFF
  118:  		ExecWait  DoBurnHit
  124:  		SetConst  *Var0  00000001
  134:  		SetConst  *Var1  004E000C
  144:  		ExecWait  DoDeath
  150:  		Return
  158:  	Case  ==  .Event:SpinSmashHit % B
  164:  		SetConst  *Var0  00000001
  174:  		SetConst  *Var1  004E000A
  184:  		ExecWait  DoSpinSmashHit
  190:  	Case  ==  .Event:SpinSmashDeath % 21
  19C:  		SetConst  *Var0  00000001
  1AC:  		SetConst  *Var1  004E000A
  1BC:  		ExecWait  DoSpinSmashHit
  1C8:  		SetConst  *Var0  00000001
  1D8:  		SetConst  *Var1  004E000A
  1E8:  		ExecWait  DoDeath
  1F4:  		Return
  1FC:  	Case  ==  .Event:ShockHit % 2F
  208:  		Call  ResetAllActorSounds   ( .Actor:Self )
  218:  		SetConst  *Var0  00000001
  228:  		SetConst  *Var1  004E000A
  238:  		ExecWait  DoShockHit
  244:  		SetConst  *Var0  00000001
  254:  		SetConst  *Var1  004E000A
  264:  		ExecWait  DoJumpBack
  270:  		ExecWait  $Script_8021B120
  27C:  	Case  ==  .Event:ShockDeath % 26
  288:  		SetConst  *Var0  00000001
  298:  		SetConst  *Var1  004E000A
  2A8:  		ExecWait  DoShockHit
  2B4:  		SetConst  *Var0  00000001
  2C4:  		SetConst  *Var1  004E000A
  2D4:  		ExecWait  DoDeath
  2E0:  		Return
  2E8:  	CaseOR  ==  00000017 % 17
  2F4:  	CaseOR  ==  .Event:Immune % 19
  300:  	CaseOR  ==  .Event:AirLiftFailed % 1F
  30C:  		SetConst  *Var0  00000001
  31C:  		SetConst  *Var1  004E0002
  32C:  		ExecWait  DoImmune
  338:  	EndCaseGroup
  340:  	Case  ==  .Event:Death % 20
  34C:  		SetConst  *Var0  00000001
  35C:  		SetConst  *Var1  004E000A
  36C:  		ExecWait  DoNormalHit
  378:  		Wait  10`
  384:  		SetConst  *Var0  00000001
  394:  		SetConst  *Var1  004E000A
  3A4:  		ExecWait  DoDeath
  3B0:  		Return
  3B8:  	Case  ==  .Event:RecoverStatus % 31
  3C4:  		SetConst  *Var0  00000001
  3D4:  		SetConst  *Var1  004E0002
  3E4:  		ExecWait  DoRecover
  3F0:  	Case  ==  .Event:ScareAway % 39
  3FC:  		SetConst  *Var0  00000001
  40C:  		SetConst  *Var1  004E0004
  41C:  		SetConst  *Var2  004E000A
  42C:  		ExecWait  DoScareAway
  438:  		Return
  440:  	Case  ==  .Event:BeginAirLift % 3A
  44C:  		SetConst  *Var0  00000001
  45C:  		SetConst  *Var1  004E0004
  46C:  		ExecWait  DoAirLift
  478:  	Case  ==  .Event:BlowAway % 16
  484:  		SetConst  *Var0  00000001
  494:  		SetConst  *Var1  004E000A
  4A4:  		ExecWait  DoBlowAway
  4B0:  		Return
  4B8:  	Default
  4C0:  EndSwitch
  4C8:  Call  EnableIdleScript  ( .Actor:Self 00000001 )
  4DC:  Call  UseIdleAnimation  ( .Actor:Self .True )
  4F0:  Return
  4F8:  End
}

#new:Script $Script_LungeAttack
{
    0:  Call  UseIdleAnimation  ( .Actor:Self .False )
   14:  Call  EnableIdleScript  ( .Actor:Self 00000000 )
   28:  Call  SetTargetActor    ( .Actor:Self .Actor:Player )
   3C:  Call  UseBattleCamPreset    ( 0000003F )
   4C:  Call  BattleCamTargetActor  ( .Actor:Self )
   5C:  Call  8024ECF8  ( FFFFFFFF 00000001 00000000 )
   74:  Call  SetAnimation      ( .Actor:Self 00000001 004E0007 )
   8C:  Wait  20`
   98:  Call  SetActorSounds    ( .Actor:Self .ActorSound:Jump 000002CB 00000000 )
   B4:  Call  EnemyTestTarget   ( .Actor:Self *Var0 ~Flags:DamageType:0 00000000 00000001 00000010 )
   D8:  Switch  *Var0
   E4:  	CaseOR  ==  .HitResult:Miss % 6
   F0:  	CaseOR  ==  .HitResult:Lucky % 5
   FC:  		Set   *VarA  *Var0
  10C:  		Call  UseBattleCamPreset    ( 00000002 )
  11C:  		Call  SetAnimation      ( .Actor:Self 00000001 004E0008 )
  134:  		Call  SetGoalToTarget   ( .Actor:Self )
  144:  		Call  AddGoalPos        ( .Actor:Self  -100`  0`  0` )
  160:  		Call  SetActorJumpGravity   ( .Actor:Self *Fixed[0.3] )
  174:  		Call  JumpToGoal        ( .Actor:Self  17` .False .True .False )
  194:  		If  *VarA  ==  .HitResult:Lucky % 5
  1A4:  			Call  EnemyTestTarget   ( .Actor:Self *Var0 ~Flags:DamageType:TriggerLucky 00000000 00000000 00000000 )
  1C8:  		EndIf
  1D0:  		Wait  10`
  1DC:  		Call  GetActorPos       ( .Actor:Self *Var0 *Var1 *Var2 )
  1F8:  		Call  SetActorPos       ( .Actor:Self *Var0  0` *Var2 )
  214:  		Call  SetAnimation      ( .Actor:Self 00000001 004E0002 )
  22C:  		Call  ResetActorSounds  ( .Actor:Self .ActorSound:Jump )
  240:  		Wait  15`
  24C:  		Call  YieldTurn ( )
  258:  		Call  SetActorYaw       ( .Actor:Self  180` )
  26C:  		Call  AddActorDecoration    ( .Actor:Self 00000001 00000000 .Decoration:Sweat )
  288:  		ExecWait  $Script_8021B120
  294:  		Call  RemoveActorDecoration ( .Actor:Self 00000001 00000000 )
  2AC:  		Call  SetActorYaw       ( .Actor:Self  0` )
  2C0:  		Call  EnableIdleScript  ( .Actor:Self 00000001 )
  2D4:  		Call  UseIdleAnimation  ( .Actor:Self .True )
  2E8:  		Return
  2F0:  	EndCaseGroup
  2F8:  EndSwitch
  300:  Call  SetAnimation      ( .Actor:Self 00000001 004E0008 )
  318:  Call  SetGoalToTarget   ( .Actor:Self )
  328:  Call  GetStatusFlags    ( .Actor:Self *VarA )
  33C:  If  *VarA  &  ~Flags:StatusFlags:Shrink % 80000
  34C:  	Call  AddGoalPos    ( .Actor:Self *Fixed[4.0] *Fixed[-6.0]  0` )
  368:  Else
  370:  	Call  AddGoalPos    ( .Actor:Self  10`  -15`  0` )
  38C:  EndIf
  394:  Call  SetActorJumpGravity   ( .Actor:Self *Fixed[0.3] )
  3A8:  Call  JumpToGoal        ( .Actor:Self  12` .False .True .False )
  3C8:  Wait  2`
  3D4:  Call  SetGoalToTarget   ( .Actor:Self )
  3E4:  Call  EnemyDamageTarget ( .Actor:Self *Var0 ~Flags:DamageType:0 00000000 00000000 00000004 00000020 )
  40C:  Switch  *Var0
  418:  	CaseOR  ==  .HitResult:Hit % 0
  424:  	CaseOR  ==  .HitResult:QuakeImmune % 2
  430:  		Call  UseBattleCamPreset    ( 00000002 )
  440:  		Call  ResetActorSounds      ( .Actor:Self .ActorSound:Jump )
  454:  		Call  SetAnimation  ( .Actor:Self 00000001 004E0009 )
  46C:  		Call  GetActorPos   ( .Actor:Self *Var0 *Var1 *Var2 )
  488:  		Call  SetActorJumpGravity   ( .Actor:Self *Fixed[0.5] )
  49C:  		Add   *Var0  0000001E
  4AC:  		Call  SetGoalPos    ( .Actor:Self *Var0  0` *Var2 )
  4C8:  		Call  JumpToGoal    ( .Actor:Self  20` .False .True .False )
  4E8:  		Add   *Var0  00000014
  4F8:  		Call  SetGoalPos    ( .Actor:Self *Var0  0` *Var2 )
  514:  		Call  JumpToGoal    ( .Actor:Self  10` .False .True .False )
  534:  		Wait  10`
  540:  		Call  YieldTurn ( )
  54C:  		ExecWait  $Script_8021B120
  558:  	EndCaseGroup
  560:  EndSwitch
  568:  Call  EnableIdleScript  ( .Actor:Self 00000001 )
  57C:  Call  UseIdleAnimation  ( .Actor:Self .True )
  590:  Return
  598:  End
}

#new:Script $Script_8021BBFC
{
    0:  Call  GetActorVar   ( .Actor:Self 00000000 *Var0 )
   18:  Call  RemoveActor   ( *Var0 )
   28:  Return
   30:  End
}

#new:Script $Script_8021BC34
{
    0:  Call  UseIdleAnimation  ( .Actor:Self .False )
   14:  Call  8027D32C  ( FFFFFF81 )
   24:  Call  SetAnimation      ( .Actor:Self *Var0 *Var1 )
   3C:  Wait  30`
   48:  Call  GetActorVar       ( .Actor:Self 00000000 *VarA )
   60:  Call  UseIdleAnimation  ( *VarA .False )
   74:  Call  8027D32C  ( *VarA )
   84:  Call  CopyStatusEffects ( .Actor:Self *VarA )
   98:  Call  PlaySoundAtActor  ( .Actor:Self .Sound:SmokeBurst )
   AC:  Thread
   B4:  	Call  GetActorPos   ( .Actor:Self *Var0 *Var1 *Var2 )
   D0:  	Add   *Var1  00000003
   E0:  	Add   *Var2  00000005
   F0:  	Loop  00000003
   FC:  		Call  PlayEffect    ( ~FX:BigSmokePuff *Var0 *Var1 *Var2 00000000 00000000 00000000 00000000 00000000 00000000 00000000 00000000 00000000 00000000 )
  140:  		Wait  3`
  14C:  	EndLoop
  154:  EndThread
  15C:  Wait  5`
  168:  Call  GetActorHP        ( .Actor:Self *VarB )
  17C:  Call  SetEnemyHP        ( *VarA *VarB )
  190:  Call  CopyBuffs ( .Actor:Self *VarA )
  1A4:  Call  GetActorPos       ( .Actor:Self *VarB *VarC *VarD )
  1C0:  Call  SetActorPos       ( *VarA *VarB *VarC *VarD )
  1DC:  Call  SetPartFlagBits   ( *VarA 00000001 00800000 .True )
  1F8:  Call  SetPartFlagBits   ( *VarA 00000001 00020001 .False )
  214:  Call  SetActorFlagBits  ( *VarA 00400004 .False )
  22C:  Call  SetActorFlagBits  ( .Actor:Self 00000004 .True )
  244:  Call  SetActorVar       ( *VarA 00000008 00000002 )
  25C:  Call  SetPartFlagBits   ( .Actor:Self *Var0 00000001 .True )
  278:  Call  SetIdleAnimations ( *VarA 00000001 $IdleAnimations_8021AEDC )
  290:  Call  SetAnimation      ( *VarA 00000001 004E000A )
  2A8:  Wait  30`
  2B4:  Call  UseBattleCamPreset    ( 00000002 )
  2C4:  Call  GetActorPos       ( *VarA *VarB *VarC *VarD )
  2E0:  If  *VarC  >  00000000
  2F0:  	Set   *VarC  00000000
  300:  	Call  SetActorJumpGravity   ( *VarA *Fixed[0.5] )
  314:  	Call  SetActorSounds        ( *VarA .ActorSound:Jump 00000301 00000000 )
  330:  	Call  SetGoalPos    ( *VarA *VarB *VarC *VarD )
  34C:  	Call  JumpToGoal    ( *VarA  15` .False .True .False )
  36C:  	Call  ResetActorSounds      ( *VarA .ActorSound:Jump )
  380:  	Call  SetGoalPos    ( *VarA *VarB *VarC *VarD )
  39C:  	Call  JumpToGoal    ( *VarA  10` .False .True .False )
  3BC:  	Call  SetGoalPos    ( *VarA *VarB *VarC *VarD )
  3D8:  	Call  JumpToGoal    ( *VarA  5` .False .True .False )
  3F8:  EndIf
  400:  Call  ForceHomePos  ( *VarA *VarB *VarC *VarD )
  41C:  Call  HPBarToHome   ( *VarA )
  42C:  Call  SetIdleAnimations ( *VarA 00000001 $IdleAnimations_8021AE90 )
  444:  Call  SetAnimation  ( *VarA 00000001 004E0002 )
  45C:  Call  SetActorPos   ( .Actor:Self  0`  -1000`  0` )
  478:  Call  ForceHomePos  ( .Actor:Self  0`  -1000`  0` )
  494:  Call  HPBarToHome   ( .Actor:Self )
  4A4:  Call  RemoveActor   ( .Actor:Self )
  4B4:  Return
  4BC:  End
}

#new:Script $Script_8021C0F8
{
    0:  Set   *Var9  *Var0
   10:  Call  UseIdleAnimation  ( .Actor:Self .False )
   24:  Call  8027D32C  ( FFFFFF81 )
   34:  Call  SetAnimation      ( .Actor:Self *Var0 *Var1 )
   4C:  Call  SetActorRotation  ( .Actor:Self 00000000 00000000 00000000 )
   68:  Call  SetActorDispOffset    ( .Actor:Self 00000000 00000000 00000000 )
   84:  Call  GetActorPos       ( .Actor:Self *Var2 *Var3 *Var4 )
   A0:  Add   *Var2  0000000A
   B0:  Add   *Var3  0000000A
   C0:  Call  SetActorJumpGravity   ( .Actor:Self *Fixed[1.0] )
   D4:  Call  SetGoalPos        ( .Actor:Self *Var2 *Var3 *Var4 )
   F0:  Call  JumpToGoal        ( .Actor:Self  5` .False .True .False )
  110:  ExecWait  DoShockHit
  11C:  Call  GetActorVar       ( .Actor:Self 00000000 *VarA )
  134:  Call  UseIdleAnimation  ( *VarA .False )
  148:  Call  8027D32C  ( *VarA )
  158:  Call  CopyStatusEffects ( .Actor:Self *VarA )
  16C:  Call  PlaySoundAtActor  ( .Actor:Self .Sound:SmokeBurst )
  180:  Thread
  188:  	Call  GetActorPos   ( .Actor:Self *Var0 *Var1 *Var2 )
  1A4:  	Add   *Var1  00000003
  1B4:  	Add   *Var2  00000005
  1C4:  	Loop  00000003
  1D0:  		Call  PlayEffect    ( ~FX:BigSmokePuff *Var0 *Var1 *Var2 00000000 00000000 00000000 00000000 00000000 00000000 00000000 00000000 00000000 00000000 )
  214:  		Wait  3`
  220:  	EndLoop
  228:  EndThread
  230:  Wait  5`
  23C:  Call  GetActorHP    ( .Actor:Self *VarB )
  250:  Call  SetEnemyHP    ( *VarA *VarB )
  264:  Call  CopyBuffs     ( .Actor:Self *VarA )
  278:  Call  GetActorPos   ( .Actor:Self *VarB *VarC *VarD )
  294:  Call  SetActorPos   ( *VarA *VarB *VarC *VarD )
  2B0:  Call  SetPartFlagBits   ( *VarA 00000001 00800000 .True )
  2CC:  Call  SetPartFlagBits   ( *VarA 00000001 00020001 .False )
  2E8:  Call  SetActorFlagBits  ( *VarA 00400004 .False )
  300:  Call  SetActorFlagBits  ( .Actor:Self 00000004 .True )
  318:  Call  SetActorVar   ( *VarA 00000008 00000003 )
  330:  Call  SetPartFlagBits   ( .Actor:Self *Var9 00000001 .True )
  34C:  Call  SetIdleAnimations ( *VarA 00000001 $IdleAnimations_8021AEDC )
  364:  Call  SetAnimation  ( *VarA 00000001 004E000A )
  37C:  Wait  15`
  388:  Call  UseBattleCamPreset    ( 00000002 )
  398:  Call  SetActorJumpGravity   ( *VarA *Fixed[0.5] )
  3AC:  Call  GetActorPos   ( *VarA *VarB *VarC *VarD )
  3C8:  Add   *VarB  0000001E
  3D8:  Set   *VarC  00000000
  3E8:  Call  SetGoalPos    ( *VarA *VarB *VarC *VarD )
  404:  Call  JumpToGoal    ( *VarA  15` .False .True .False )
  424:  Add   *VarB  00000014
  434:  Call  SetGoalPos    ( *VarA *VarB *VarC *VarD )
  450:  Call  JumpToGoal    ( *VarA  10` .False .True .False )
  470:  Add   *VarB  0000000A
  480:  Call  SetGoalPos    ( *VarA *VarB *VarC *VarD )
  49C:  Call  JumpToGoal    ( *VarA  5` .False .True .False )
  4BC:  Wait  20`
  4C8:  Call  AddActorDecoration    ( *VarA 00000001 00000000 .Decoration:Sweat )
  4E4:  Call  SetActorYaw   ( *VarA  180` )
  4F8:  Call  SetIdleAnimations ( *VarA 00000001 $IdleAnimations_8021AEE8 )
  510:  Call  SetAnimation  ( *VarA 00000001 004E0004 )
  528:  Call  SetActorSpeed ( *VarA *Fixed[8.0] )
  53C:  Call  SetGoalToHome ( .Actor:Self )
  54C:  Call  GetGoalPos    ( .Actor:Self *VarB *VarC *VarD )
  568:  Call  SetGoalPos    ( *VarA *VarB  0` *VarD )
  584:  Call  RunToGoal     ( *VarA  0` .False )
  59C:  Call  SetAnimation  ( *VarA 00000001 004E0002 )
  5B4:  Call  SetActorYaw   ( *VarA  0` )
  5C8:  Call  RemoveActorDecoration ( *VarA 00000001 00000000 )
  5E0:  Call  SetIdleAnimations ( *VarA 00000001 $IdleAnimations_8021AE90 )
  5F8:  Call  ForceHomePos  ( *VarA *VarB  0` *VarD )
  614:  Call  HPBarToHome   ( *VarA )
  624:  Call  SetActorPos   ( .Actor:Self  0`  -1000`  0` )
  640:  Call  ForceHomePos  ( .Actor:Self  0`  -1000`  0` )
  65C:  Call  HPBarToHome   ( .Actor:Self )
  66C:  Call  RemoveActor   ( .Actor:Self )
  67C:  Return
  684:  End
}

#new:Script $Script_8021C784
{
    0:  Call  8027D32C      ( FFFFFF81 )
   10:  Set   *VarA  *Var0
   20:  Set   *VarB  *Var1
   30:  Set   *VarC  *Var2
   40:  Call  SetActorRotation      ( .Actor:Self 00000000 00000000 00000000 )
   5C:  Call  SetActorScale ( .Actor:Self *Fixed[1.0] *Fixed[1.0] *Fixed[1.0] )
   78:  Call  SetActorDispOffset    ( .Actor:Self 00000000 00000000 00000000 )
   94:  Call  SetAnimation  ( .Actor:Self *VarA *VarB )
   AC:  Call  GetGoalPos    ( .Actor:Self *Var0 *Var1 *Var2 )
   C8:  Add   *Var0  0000000F
   D8:  Add   *Var1  0000000A
   E8:  Call  SetActorJumpGravity   ( .Actor:Self *Fixed[0.1] )
   FC:  Call  SetAnimation  ( .Actor:Self *VarA *VarB )
  114:  Call  SetGoalPos    ( .Actor:Self *Var0 *Var1 *Var2 )
  130:  Call  JumpToGoal    ( .Actor:Self  5` .False .False .False )
  150:  Set   *Var0  *VarA
  160:  Set   *Var1  *VarB
  170:  ExecWait  DoShockHit
  17C:  Call  UseBattleCamPreset    ( 00000002 )
  18C:  Thread
  194:  	Call  SetActorRotationOffset    ( .Actor:Self 00000000 *VarC 00000000 )
  1B0:  	Set   *Var0  00000000
  1C0:  	Loop  0000000F
  1CC:  		Add   *Var0  FFFFFFD0
  1DC:  		Call  SetActorRotation  ( .Actor:Self 00000000 00000000 *Var0 )
  1F8:  		Wait  1`
  204:  	EndLoop
  20C:  	Call  SetActorRotationOffset    ( .Actor:Self 00000000 00000000 00000000 )
  228:  EndThread
  230:  Call  GetActorPos   ( .Actor:Self *Var0 *Var1 *Var2 )
  24C:  Add   *Var0  0000003C
  25C:  Set   *Var1  00000000
  26C:  Call  SetActorJumpGravity   ( .Actor:Self *Fixed[1.4] )
  280:  Call  SetGoalPos    ( .Actor:Self *Var0 *Var1 *Var2 )
  29C:  Call  JumpToGoal    ( .Actor:Self  15` .False .True .False )
  2BC:  Add   *Var0  00000014
  2CC:  Call  SetGoalPos    ( .Actor:Self *Var0 *Var1 *Var2 )
  2E8:  Call  JumpToGoal    ( .Actor:Self  10` .False .True .False )
  308:  Add   *Var0  0000000A
  318:  Call  SetGoalPos    ( .Actor:Self *Var0 *Var1 *Var2 )
  334:  Call  JumpToGoal    ( .Actor:Self  4` .False .True .False )
  354:  Return
  35C:  End
}

#new:Vector3D $Vector3D_8021CAE8
{
	0` -1000` 0`
}

#new:IdleAnimations $IdleAnimations_8021CAF4
{
	.Status:Normal    00090001
	.Status:Stone     00090000
	.Status:Sleep     00090000
	.Status:Poison    00090001
	.Status:Stop      00090000
	.Status:Static    00090001
	.Status:Paralyze  00090000
	.Status:Dizzy     00090014
	.Status:Fear      00090014
	.Status:End
}

#new:DefenseTable $DefenseTable_8021CB40
{
	.Element:Normal 00000000
	.Element:End
}

#new:StatusTable $StatusTable_8021CB4C
{
	.Status:Normal      0`
	.Status:Default     0`
	.Status:Sleep      60`
	.Status:Poison      0`
	.Status:Frozen      0`
	.Status:Dizzy      75`
	.Status:Fear        0`
	.Status:Static      0`
	.Status:Paralyze   75`
	.Status:Shrink     75`
	.Status:Stop       80`
	.Status:DefaultTurnMod    0`
	.Status:SleepTurnMod     -1`
	.Status:PoisonTurnMod     0`
	.Status:FrozenTurnMod     0`
	.Status:DizzyTurnMod     -1`
	.Status:FearTurnMod       0`
	.Status:StaticTurnMod     0`
	.Status:ParalyzeTurnMod   0`
	.Status:ShrinkTurnMod     0`
	.Status:StopTurnMod      -1`
	.Status:End
}

#new:PartsTable $PartsTable_8021CBF8
{
	00800000 01000000 001400FF $IdleAnimations_8021CAF4 $DefenseTable_8021CB40 00000000 00000000 FFF70000 00000000
}

#new:Actor $GhostGoombario
{
	% stats
	[Index]        3Cb
	[Level]        23`b
	[MaxHP]        15`b
	[Coins]         2`b
	[Flags]       00000000
	[StatusTable] $StatusTable_8021CB4C
	% ai
	[PartsCount]    1`s
	[PartsTable]  $PartsTable_8021CBF8
	[Script]      $Script_Init_8021CC44
	% move effectiveness
	[Escape]       50`b
	[Item]         50`b
	[AirLift]      80`b
	[Hurricane]    70`b % Bow's "Spook" as well
	[UpAndAway]    95`b
	[PowerBounce]  90`b
	[SpinSmash]     0`b % weight (0-4)
	% ui positions
	[Size]         29`b  26`b % width height
	[HealthBar]     0`b   0`b % dx dy
	[StatusTurn]  -10`b  20`b % dx dy
	[StatusIcon]   10`b  20`b % dx dy
}

#new:Script $Script_Init_8021CC44
{
    0:  Call  BindTakeTurn      ( .Actor:Self $Script_TakeTurn_8021E604 )
   14:  Call  BindIdle  ( .Actor:Self $Script_Idle_8021CC90 )
   28:  Call  BindHandleEvent   ( .Actor:Self $Script_HandleEvent_8021CCA0 )
   3C:  Return
   44:  End
}

#new:Script $Script_Idle_8021CC90
{
    0:  Return
    8:  End
}

#new:Script $Script_HandleEvent_8021CCA0
{
    0:  Call  UseIdleAnimation  ( .Actor:Self .False )
   14:  Call  EnableIdleScript  ( .Actor:Self 00000000 )
   28:  Call  GetLastEvent      ( .Actor:Self *Var0 )
   3C:  Switch  *Var0
   48:  	CaseOR  ==  .Event:HitCombo % 9
   54:  	CaseOR  ==  .Event:Hit % A
   60:  		Call  GetLastElement    ( *Var1 )
   70:  		If  *Var1  &  00000020
   80:  			SetConst  *Var0  00000001
   90:  			SetConst  *Var1  0009000A
   A0:  			ExecWait  $Script_8021BC34
   AC:  			Return
   B4:  		Else
   BC:  			SetConst  *Var0  00000001
   CC:  			SetConst  *Var1  0009000A
   DC:  			ExecWait  DoNormalHit
   E8:  		EndIf
   F0:  	EndCaseGroup
   F8:  	Case  ==  .Event:BurnHit % E
  104:  		SetConst  *Var0  00000001
  114:  		SetConst  *Var1  0009000B
  124:  		SetConst  *Var2  0009000C
  134:  		ExecWait  DoBurnHit
  140:  	Case  ==  .Event:BurnDeath % 24
  14C:  		SetConst  *Var0  00000001
  15C:  		SetConst  *Var1  0009000B
  16C:  		SetConst  *Var2  0009000C
  17C:  		ExecWait  DoBurnHit
  188:  		ExecWait  $Script_8021BBFC
  194:  		Wait  10`
  1A0:  		SetConst  *Var0  00000001
  1B0:  		SetConst  *Var1  0009000C
  1C0:  		ExecWait  DoDeath
  1CC:  		Return
  1D4:  	Case  ==  .Event:SpinSmashHit % B
  1E0:  		SetConst  *Var0  00000001
  1F0:  		SetConst  *Var1  0009000A
  200:  		ExecWait  DoSpinSmashHit
  20C:  	Case  ==  .Event:SpinSmashDeath % 21
  218:  		ExecWait  $Script_8021BBFC
  224:  		SetConst  *Var0  00000001
  234:  		SetConst  *Var1  0009000A
  244:  		ExecWait  DoSpinSmashHit
  250:  		SetConst  *Var0  00000001
  260:  		SetConst  *Var1  0009000A
  270:  		ExecWait  DoDeath
  27C:  		Return
  284:  	Case  ==  .Event:ShockHit % 2F
  290:  		SetConst  *Var0  00000001
  2A0:  		SetConst  *Var1  0009000A
  2B0:  		ExecWait  $Script_8021C0F8
  2BC:  		Return
  2C4:  	Case  ==  .Event:ShockDeath % 26
  2D0:  		ExecWait  $Script_8021BBFC
  2DC:  		SetConst  *Var0  00000001
  2EC:  		SetConst  *Var1  0009000A
  2FC:  		Set   *Var2  0000000C
  30C:  		ExecWait  $Script_8021C784
  318:  		SetConst  *Var0  00000001
  328:  		SetConst  *Var1  0009000A
  338:  		ExecWait  DoDeath
  344:  		Return
  34C:  	CaseOR  ==  00000017 % 17
  358:  	CaseOR  ==  .Event:Immune % 19
  364:  	CaseOR  ==  .Event:AirLiftFailed % 1F
  370:  		SetConst  *Var0  00000001
  380:  		SetConst  *Var1  00090001
  390:  		ExecWait  DoImmune
  39C:  	EndCaseGroup
  3A4:  	Case  ==  .Event:Death % 20
  3B0:  		ExecWait  $Script_8021BBFC
  3BC:  		SetConst  *Var0  00000001
  3CC:  		SetConst  *Var1  0009000A
  3DC:  		ExecWait  DoNormalHit
  3E8:  		Wait  10`
  3F4:  		SetConst  *Var0  00000001
  404:  		SetConst  *Var1  0009000A
  414:  		ExecWait  DoDeath
  420:  		Return
  428:  	Case  ==  .Event:RecoverStatus % 31
  434:  		SetConst  *Var0  00000001
  444:  		SetConst  *Var1  00090001
  454:  		ExecWait  DoRecover
  460:  	Case  ==  .Event:ScareAway % 39
  46C:  		SetConst  *Var0  00000001
  47C:  		SetConst  *Var1  00090003
  48C:  		SetConst  *Var2  0009000A
  49C:  		ExecWait  DoScareAway
  4A8:  		Return
  4B0:  	Case  ==  .Event:BeginAirLift % 3A
  4BC:  		SetConst  *Var0  00000001
  4CC:  		SetConst  *Var1  00090003
  4DC:  		ExecWait  DoAirLift
  4E8:  	Case  ==  .Event:BlowAway % 16
  4F4:  		SetConst  *Var0  00000001
  504:  		SetConst  *Var1  0009000A
  514:  		ExecWait  DoBlowAway
  520:  		Return
  528:  	Default
  530:  EndSwitch
  538:  Call  EnableIdleScript  ( .Actor:Self 00000001 )
  54C:  Call  UseIdleAnimation  ( .Actor:Self .True )
  560:  Return
  568:  End
}

#new:Script $Script_8021D210
{
    0:  Call  UseBattleCamPreset    ( 00000002 )
   10:  Call  SetAnimation  ( .Actor:Self 00000001 00090001 )
   28:  Thread
   30:  	Call  SetActorRotationOffset    ( .Actor:Self 00000000 0000000C 00000000 )
   4C:  	Set   *Var0  000000B4
   5C:  	Loop  0000000F
   68:  		Sub   *Var0  0000003C
   78:  		Call  SetActorRotation  ( .Actor:Self 00000000 00000000 *Var0 )
   94:  		Wait  1`
   A0:  	EndLoop
   A8:  	Call  SetAnimation  ( .Actor:Self 00000001 00090005 )
   C0:  	Call  SetActorRotation  ( .Actor:Self 00000000 00000000 00000000 )
   DC:  	Call  SetActorRotationOffset    ( .Actor:Self 00000000 00000000 00000000 )
   F8:  EndThread
  100:  Call  SetGoalToTarget   ( .Actor:Self )
  110:  Call  GetGoalPos        ( .Actor:Self *Var0 *Var1 *Var2 )
  12C:  Add   *Var0  0000003C
  13C:  Set   *Var1  00000000
  14C:  Call  SetActorJumpGravity   ( .Actor:Self *Fixed[1.0] )
  160:  Call  SetGoalPos        ( .Actor:Self *Var0 *Var1 *Var2 )
  17C:  Call  JumpToGoal        ( .Actor:Self  15` .False .True .False )
  19C:  Call  GetStatusFlags    ( .Actor:Self *VarA )
  1B0:  If  *VarA  &  ~Flags:StatusFlags:Shrink % 80000
  1C0:  	SetF  *Var5  *Fixed[7.2]
  1D0:  Else
  1D8:  	Set   *Var5  00000012
  1E8:  EndIf
  1F0:  Call  SetAnimation  ( .Actor:Self 00000001 00090007 )
  208:  Call  SetActorDispOffset    ( .Actor:Self 00000000 *Var5 00000000 )
  224:  Wait  1`
  230:  Call  SetActorRotation      ( .Actor:Self 00000000 00000000 00000000 )
  24C:  Call  SetActorDispOffset    ( .Actor:Self 00000000 00000000 00000000 )
  268:  Call  SetAnimation  ( .Actor:Self 00000001 00090001 )
  280:  Add   *Var0  00000014
  290:  Call  SetGoalPos    ( .Actor:Self *Var0 *Var1 *Var2 )
  2AC:  Call  JumpToGoal    ( .Actor:Self  6` .False .True .False )
  2CC:  Call  SetAnimation  ( .Actor:Self 00000001 00090007 )
  2E4:  Call  SetActorDispOffset    ( .Actor:Self 00000000 *Var5 00000000 )
  300:  Wait  1`
  30C:  Add   *Var0  0000000A
  31C:  Call  SetAnimation  ( .Actor:Self 00000001 00090001 )
  334:  Call  SetActorDispOffset    ( .Actor:Self 00000000 00000000 00000000 )
  350:  Call  SetGoalPos    ( .Actor:Self *Var0 *Var1 *Var2 )
  36C:  Call  JumpToGoal    ( .Actor:Self  4` .False .True .False )
  38C:  Call  SetAnimation  ( .Actor:Self 00000001 00090007 )
  3A4:  Call  SetActorDispOffset    ( .Actor:Self 00000000 *Var5 00000000 )
  3C0:  Wait  1`
  3CC:  Call  SetActorDispOffset    ( .Actor:Self 00000000 00000000 00000000 )
  3E8:  Call  SetAnimation  ( .Actor:Self 00000001 00090001 )
  400:  Wait  2`
  40C:  Call  SetGoalToHome ( .Actor:Self )
  41C:  Call  SetActorSpeed ( .Actor:Self *Fixed[8.0] )
  430:  Call  SetAnimation  ( .Actor:Self 00000001 00090003 )
  448:  Call  RunToGoal     ( .Actor:Self  0` .False )
  460:  Call  SetAnimation  ( .Actor:Self 00000001 00090001 )
  478:  Return
  480:  End
}

#new:Script $Script_8021D698
{
    0:  Call  UseBattleCamPreset    ( 0000003F )
   10:  Call  BattleCamTargetActor  ( .Actor:Self )
   20:  Call  8024ECF8      ( FFFFFFFF 00000001 00000000 )
   38:  Call  SetTargetActor        ( .Actor:Self .Actor:Player )
   4C:  Call  SetGoalToTarget       ( .Actor:Self )
   5C:  Call  AddGoalPos    ( .Actor:Self  70`  0`  0` )
   78:  Call  SetAnimation  ( .Actor:Self 00000001 00090003 )
   90:  Call  SetActorSpeed ( .Actor:Self *Fixed[5.0] )
   A4:  Call  RunToGoal     ( .Actor:Self  0` .False )
   BC:  Call  SetAnimation  ( .Actor:Self 00000001 00090001 )
   D4:  Return
   DC:  End
}

#new:Script $Script_8021D77C
{
    0:  Call  SetGoalToTarget   ( .Actor:Self )
   10:  Call  GetGoalPos        ( .Actor:Self *VarB *VarC *VarD )
   2C:  Call  GetActorPos       ( .Actor:Self *VarC *VarD *VarE )
   48:  If  *VarB  >  *VarC
   58:  	Sub   *VarB  *VarC
   68:  Else
   70:  	Sub   *VarC  *VarB
   80:  	Set   *VarB  *VarC
   90:  EndIf
   98:  Sub   *VarB  00000014
   A8:  DivF  *VarB  *Fixed[10.588867]
   B8:  AddF  *VarB  0000000F
   C8:  Set   *VarA  *VarB
   D8:  Return
   E0:  End
}

#new:Script $Script_Goombario_Headbonk
{
    0:  Call  UseIdleAnimation  ( .Actor:Self .False )
   14:  Call  EnableIdleScript  ( .Actor:Self 00000000 )
   28:  ExecWait  $Script_8021D698
   34:  ExecWait  $Script_8021D77C
   40:  Call  GetStatusFlags    ( .Actor:Self *VarA )
   54:  If  *VarA  &  ~Flags:StatusFlags:Shrink % 80000
   64:  	SetF  *Var0  *Fixed[7.2]
   74:  	SetF  *Var1  *Fixed[7.6]
   84:  	SetF  *Var1  *Fixed[3.6]
   94:  Else
   9C:  	Set   *Var0  00000012
   AC:  	Set   *Var1  00000013
   BC:  	Set   *Var2  00000009
   CC:  EndIf
   D4:  Call  SetAnimation      ( .Actor:Self 00000001 00090007 )
   EC:  Call  SetActorDispOffset    ( .Actor:Self 00000000 *Var0 00000000 )
  108:  Wait  5`
  114:  Call  SetActorDispOffset    ( .Actor:Self 00000000 *Var1 00000000 )
  130:  Wait  1`
  13C:  Call  SetAnimation      ( .Actor:Self 00000001 00090006 )
  154:  Call  SetActorDispOffset    ( .Actor:Self 00000000 *Var2 00000000 )
  170:  Call  SetGoalToTarget   ( .Actor:Self )
  180:  Call  AddGoalPos        ( .Actor:Self  0`  0`  5` )
  19C:  Call  SetJumpAnimations ( .Actor:Self 00000001 00090006 00090006 00090006 )
  1BC:  Call  SetActorSounds    ( .Actor:Self .ActorSound:Jump 00000000 00000000 )
  1D8:  Call  PlaySoundAtActor  ( .Actor:Self 0000200D )
  1EC:  Call  $Function_80218000    ( *VarA 00000000 )
  200:  Call  EnemyTestTarget   ( .Actor:Self *Var0 ~Flags:DamageType:0 00000000 00000001 00000010 )
  224:  Switch  *Var0
  230:  	CaseOR  ==  .HitResult:Miss % 6
  23C:  	CaseOR  ==  .HitResult:Lucky % 5
  248:  		Set   *VarA  *Var0
  258:  		Call  SetJumpAnimations ( .Actor:Self 00000001 00090006 00090006 00090006 )
  278:  		Call  $Function_80218890 ( )
  284:  		Thread
  28C:  			Call  ShakeCam  ( .Cam:Battle 00000000  5` *Fixed[1.0] )
  2A8:  		EndThread
  2B0:  		If  *VarA  ==  .HitResult:Lucky % 5
  2C0:  			Call  EnemyTestTarget   ( .Actor:Self *Var0 ~Flags:DamageType:TriggerLucky 00000000 00000000 00000000 )
  2E4:  		EndIf
  2EC:  		Wait  20`
  2F8:  		Call  YieldTurn ( )
  304:  		ExecWait  $Script_8021D210
  310:  		Call  EnableIdleScript  ( .Actor:Self 00000001 )
  324:  		Call  UseIdleAnimation  ( .Actor:Self .True )
  338:  		Return
  340:  	EndCaseGroup
  348:  EndSwitch
  350:  ChildThread
  358:  	Call  SetPartScale  ( .Actor:Self 00000001 *Fixed[1.1] *Fixed[0.8] *Fixed[1.0] )
  378:  	Wait  1`
  384:  	Call  SetPartScale  ( .Actor:Self 00000001 *Fixed[1.3] *Fixed[0.5] *Fixed[1.0] )
  3A4:  	Wait  1`
  3B0:  	Call  SetPartScale  ( .Actor:Self 00000001 *Fixed[1.0] *Fixed[1.0] *Fixed[1.0] )
  3D0:  EndChildThread
  3D8:  Wait  1`
  3E4:  Wait  2`
  3F0:  Call  GetActorVar   ( .Actor:Self 00000001 *Var9 )
  408:  Switch  *Var9
  414:  	Case  ==  00000000
  420:  		Call  EnemyDamageTarget ( .Actor:Self *Var0 ~Flags:DamageType:0 00000000 00000000 00000001 00000010 )
  448:  	Case  ==  00000001
  454:  		Call  EnemyDamageTarget ( .Actor:Self *Var0 ~Flags:DamageType:0 00000000 00000000 00000002 00000010 )
  47C:  	Case  ==  00000002
  488:  		Call  EnemyDamageTarget ( .Actor:Self *Var0 ~Flags:DamageType:0 00000000 00000000 00000003 00000010 )
  4B0:  EndSwitch
  4B8:  Call  GetActorHP    ( .Actor:Player *Var0 )
  4CC:  If  *Var0  ==  00000000
  4DC:  	Goto  64
  4E8:  EndIf
  4F0:  Set   *VarA  00000018
  500:  Call  GetActorVar   ( .Actor:Self 00000001 *Var9 )
  518:  Switch  *Var9
  524:  	Case  ==  00000000
  530:  		Thread
  538:  			Wait  4`
  544:  			Set   *Var0  00000000
  554:  			Loop  00000006
  560:  				Add   *Var0  0000001E
  570:  				Call  SetActorRotation  ( .Actor:Self 00000000 00000000 *Var0 )
  58C:  				Wait  1`
  598:  			EndLoop
  5A0:  		EndThread
  5A8:  		Call  SetGoalToTarget   ( .Actor:Self )
  5B8:  		Call  SetJumpAnimations ( .Actor:Self 00000001 00090006 00090006 00090006 )
  5D8:  		Call  PlaySoundAtActor  ( .Actor:Self 00000281 )
  5EC:  		Call  $Function_80218000    ( *VarA 00000003 )
  600:  	Case  ==  00000001
  60C:  		Thread
  614:  			Wait  4`
  620:  			Set   *Var0  00000000
  630:  			Loop  00000006
  63C:  				Add   *Var0  0000001E
  64C:  				Call  SetActorRotation  ( .Actor:Self 00000000 00000000 *Var0 )
  668:  				Wait  1`
  674:  			EndLoop
  67C:  		EndThread
  684:  		Call  SetGoalToTarget   ( .Actor:Self )
  694:  		Call  EnableActorBlur   ( .Actor:Self 00000001 )
  6A8:  		Call  SetJumpAnimations ( .Actor:Self 00000001 00090006 00090006 00090006 )
  6C8:  		Call  PlaySoundAtActor  ( .Actor:Self 00000281 )
  6DC:  		Call  $Function_80218000    ( *VarA 00000003 )
  6F0:  		Call  EnableActorBlur   ( .Actor:Self 00000000 )
  704:  	Case  ==  00000002
  710:  		Thread
  718:  			Wait  4`
  724:  			Set   *Var0  00000000
  734:  			Loop  00000006
  740:  				Add   *Var0  0000001E
  750:  				Call  SetActorRotation  ( .Actor:Self 00000000 F1194D80 *Var0 )
  76C:  				Wait  1`
  778:  			EndLoop
  780:  			Call  SetAnimation  ( .Actor:Self 00000001 00090006 )
  798:  		EndThread
  7A0:  		Thread
  7A8:  			Set   *Var0  00000000
  7B8:  			Loop  *VarA
  7C4:  				Add   *Var0  00000085
  7D4:  				Call  SetActorRotation  ( .Actor:Self F1194D80 *Var0 F1194D80 )
  7F0:  				Wait  1`
  7FC:  			EndLoop
  804:  		EndThread
  80C:  		Call  SetGoalToTarget   ( .Actor:Self )
  81C:  		Call  EnableActorBlur   ( .Actor:Self 00000001 )
  830:  		Call  SetJumpAnimations ( .Actor:Self 00000001 00090006 00090006 00090006 )
  850:  		Call  PlaySoundAtActor  ( .Actor:Self 00000281 )
  864:  		Call  $Function_80218000    ( *VarA 00000003 )
  878:  		Call  EnableActorBlur   ( .Actor:Self 00000000 )
  88C:  EndSwitch
  894:  ChildThread
  89C:  	Call  SetPartScale  ( .Actor:Self 00000001 *Fixed[1.1] *Fixed[0.8] *Fixed[1.0] )
  8BC:  	Wait  1`
  8C8:  	Call  SetPartScale  ( .Actor:Self 00000001 *Fixed[1.3] *Fixed[0.5] *Fixed[1.0] )
  8E8:  	Wait  1`
  8F4:  	Call  SetPartScale  ( .Actor:Self 00000001 *Fixed[1.0] *Fixed[1.0] *Fixed[1.0] )
  914:  EndChildThread
  91C:  Wait  1`
  928:  Wait  2`
  934:  Call  GetActorVar   ( .Actor:Self 00000001 *Var9 )
  94C:  Switch  *Var9
  958:  	Case  ==  00000000
  964:  		Call  EnemyDamageTarget ( .Actor:Self *Var0 ~Flags:DamageType:0 00000000 00000000 00000001 00000020 )
  98C:  	Case  ==  00000001
  998:  		Call  EnemyDamageTarget ( .Actor:Self *Var0 ~Flags:DamageType:0 00000000 00000000 00000002 00000020 )
  9C0:  	Case  ==  00000002
  9CC:  		Call  EnemyDamageTarget ( .Actor:Self *Var0 ~Flags:DamageType:0 00000000 00000000 00000003 00000020 )
  9F4:  EndSwitch
  9FC:  Label  64
  A08:  Switch  *Var0
  A14:  	CaseOR  ==  .HitResult:Hit % 0
  A20:  	CaseOR  ==  .HitResult:QuakeImmune % 2
  A2C:  		Call  YieldTurn ( )
  A38:  		ExecWait  $Script_8021D210
  A44:  	EndCaseGroup
  A4C:  EndSwitch
  A54:  Call  EnableIdleScript  ( .Actor:Self 00000001 )
  A68:  Call  UseIdleAnimation  ( .Actor:Self .True )
  A7C:  Return
  A84:  End
}

#new:Script $Script_Goombario_Tattle
{
    0:  Call  UseIdleAnimation  ( .Actor:Self .False )
   14:  Call  EnableIdleScript  ( .Actor:Self 00000000 )
   28:  Call  SetActorJumpGravity   ( .Actor:Self *Fixed[1.8] )
   3C:  Call  GetActorPos       ( .Actor:Self *Var0 *Var1 *Var2 )
   58:  Call  SetGoalPos        ( .Actor:Self *Var0 *Var1 *Var2 )
   74:  Call  JumpToGoal        ( .Actor:Self  10` .False .True .False )
   94:  Wait  10`
   A0:  Call  SetTargetActor    ( .Actor:Self .Actor:Player )
   B4:  Call  SetGoalToTarget   ( .Actor:Self )
   C4:  Call  SetBattleFlagBits ( 00000004 .True )
   D8:  Call  $Function_80218A90    ( *Var5 )
   E8:  Wait  12`
   F4:  Call  802535B4  ( 00000000 )
  104:  Call  SetCamEnabled     ( .Cam:Tattle .True )
  118:  Call  SetCamFlag80      ( .Cam:Tattle .False )
  12C:  Call  SetCamPerspective ( .Cam:Tattle 00000006  25`  16`  1024` )
  14C:  Call  SetCamViewport    ( .Cam:Tattle  37`  95`  138`  99` )
  16C:  Call  SetGoalToTarget   ( .Actor:Self )
  17C:  Call  GetGoalPos        ( .Actor:Self *Var0 *Var1 *Var2 )
  198:  Sub   *Var0  00000008
  1A8:  Set   *Var1  00000000
  1B8:  Call  $Function_802189E4 ( )
  1C4:  Wait  1`
  1D0:  Call  802CAE50  ( 00000002 *Var0 *Var1 *Var2 )
  1EC:  Call  802CABE8  ( 00000002 00000000 *Var3 00000064 00000004 )
  20C:  Wait  2`
  218:  Call  PlaySoundAtActor  ( .Actor:Self 00000282 )
  22C:  Call  SetCamFlag80      ( .Cam:Tattle .True )
  240:  Wait  10`
  24C:  Call  ActorSpeak        ( 001C0092 .Actor:Self 00000001 0009000F 00090001 ) % It's Mario, silly! He's here to save Princess Peac ...
  26C:  Call  $Function_80218B2C    ( *Var5 )
  27C:  Wait  12`
  288:  Call  SetCamEnabled     ( .Cam:Tattle .False )
  29C:  Wait  32`
  2A8:  Call  802535B4  ( 00000001 )
  2B8:  Call  UseBattleCamPreset    ( 00000002 )
  2C8:  Call  SetBattleFlagBits ( 00000004 .False )
  2DC:  Call  EnableIdleScript  ( .Actor:Self 00000001 )
  2F0:  Call  UseIdleAnimation  ( .Actor:Self .True )
  304:  Return
  30C:  End
}

#new:Script $Script_TakeTurn_8021E604
{
    0:  Call  RandInt   ( 00000064 *Var0 )
   14:  If  *Var0  <  0000000A
   24:  	ExecWait  $Script_Goombario_Tattle
   30:  Else
   38:  	ExecWait  $Script_Goombario_Headbonk
   44:  EndIf
   4C:  Return
   54:  End
}

#new:SpecialFormation $SpecialFormation_8021E660
{
	$GhostGoombario $Vector3D_8021CAE8 00000000 00000000 00000000 00000000 00000000
}

#new:IdleAnimations $IdleAnimations_8021E67C
{
	.Status:Normal    000A0004
	.Status:Stone     000A0000
	.Status:Sleep     000A0000
	.Status:Poison    000A0004
	.Status:Stop      000A0000
	.Status:Static    000A0004
	.Status:Paralyze  000A0000
	.Status:Dizzy     000A001C
	.Status:Fear      000A001C
	.Status:End
}

#new:IdleAnimations $IdleAnimations_8021E6C8
{
	.Status:Normal    000A0019
	.Status:Stone     000A0003
	.Status:Sleep     000A0003
	.Status:Poison    000A0019
	.Status:Stop      000A0003
	.Status:Static    000A0019
	.Status:Paralyze  000A0003
	.Status:Dizzy     000A0019
	.Status:Fear      000A0019
	.Status:End
}

#new:DefenseTable $DefenseTable_8021E714
{
	.Element:Normal 00000001
	.Element:End
}

#new:DefenseTable $DefenseTable_8021E720
{
	.Element:Normal 00000000
	.Element:End
}

#new:StatusTable $StatusTable_8021E72C
{
	.Status:Normal      0`
	.Status:Default     0`
	.Status:Sleep      60`
	.Status:Poison      0`
	.Status:Frozen      0`
	.Status:Dizzy      75`
	.Status:Fear        0`
	.Status:Static      0`
	.Status:Paralyze   75`
	.Status:Shrink     75`
	.Status:Stop       80`
	.Status:DefaultTurnMod    0`
	.Status:SleepTurnMod     -1`
	.Status:PoisonTurnMod     0`
	.Status:FrozenTurnMod     0`
	.Status:DizzyTurnMod     -1`
	.Status:FearTurnMod       0`
	.Status:StaticTurnMod     0`
	.Status:ParalyzeTurnMod   0`
	.Status:ShrinkTurnMod     0`
	.Status:StopTurnMod      -1`
	.Status:End
}

#new:PartsTable $PartsTable_8021E7D8
{
	00800000 01000000 FE2000FF $IdleAnimations_8021E67C $DefenseTable_8021E714 00001000 00000000 00F00000 00000000
}

#new:Actor $GhostKooper
{
	% stats
	[Index]        3Db
	[Level]        23`b
	[MaxHP]        15`b
	[Coins]         2`b
	[Flags]       00000000
	[StatusTable] $StatusTable_8021E72C
	% ai
	[PartsCount]    1`s
	[PartsTable]  $PartsTable_8021E7D8
	[Script]      $Script_Init_8021E824
	% move effectiveness
	[Escape]       50`b
	[Item]         50`b
	[AirLift]      80`b
	[Hurricane]    70`b % Bow's "Spook" as well
	[UpAndAway]    95`b
	[PowerBounce]  90`b
	[SpinSmash]     0`b % weight (0-4)
	% ui positions
	[Size]         32`b  38`b % width height
	[HealthBar]     0`b   0`b % dx dy
	[StatusTurn]  -10`b  20`b % dx dy
	[StatusIcon]   10`b  20`b % dx dy
}

#new:Script $Script_Init_8021E824
{
    0:  Call  BindTakeTurn  ( .Actor:Self $Script_TakeTurn_8021F374 )
   14:  Call  BindIdle      ( .Actor:Self $Script_Idle_8021E8A0 )
   28:  Call  BindHandleEvent   ( .Actor:Self $Script_HandleEvent_8021EA18 )
   3C:  Call  SetActorVar   ( .Actor:Self 00000003 00000000 )
   54:  Call  SetActorVar   ( .Actor:Self 00000004 00000000 )
   6C:  Return
   74:  End
}

#new:Script $Script_Idle_8021E8A0
{
    0:  Label  0
    C:  Call  GetActorVar   ( .Actor:Self 00000003 *Var0 )
   24:  Switch  *Var0
   30:  	Case  ==  00000000
   3C:  		Call  SetTargetOffset       ( .Actor:Self 00000001  -2`  38` )
   58:  		Call  8027D4C8  ( FFFFFF81 00000001 FFFFFFFD FFFFFFF7 )
   74:  		Call  $Function_80218B74    ( FFFFFFF6 00000019 0000000A 00000019 )
   90:  	Case  ==  00000001
   9C:  		Call  SetTargetOffset       ( .Actor:Self 00000001  5`  15` )
   B8:  		Call  8027D4C8  ( FFFFFF81 00000001 00000000 FFFFFFFA )
   D4:  		Call  $Function_80218B74    ( FFFFFFF6 00000014 0000000A 00000014 )
   F0:  EndSwitch
   F8:  Wait  1`
  104:  Goto  0
  110:  Return
  118:  End
}

#new:IntTable $IntTable_8021E9C0
{
	00000009 00000010 00000016 0000001A 0000001E 00000020 00000021 00000020
	0000001E 0000001A 00000016 00000010 00000009 00000000 00000004 00000006
	00000007 00000006 00000004 00000000 00000002 00000000
}

#new:Script $Script_HandleEvent_8021EA18
{
    0:  Call  UseIdleAnimation  ( .Actor:Self .False )
   14:  Call  EnableIdleScript  ( .Actor:Self 00000000 )
   28:  Call  GetLastEvent      ( .Actor:Self *Var0 )
   3C:  Switch  *Var0
   48:  	CaseOR  ==  .Event:HitCombo % 9
   54:  	CaseOR  ==  .Event:Hit % A
   60:  		Call  GetLastElement    ( *Var1 )
   70:  		If  *Var1  &  00000020
   80:  			SetConst  *Var0  00000001
   90:  			SetConst  *Var1  000A0011
   A0:  			ExecWait  $Script_8021BC34
   AC:  			Return
   B4:  		Else
   BC:  			SetConst  *Var0  00000001
   CC:  			SetConst  *Var1  000A0011
   DC:  			ExecWait  DoNormalHit
   E8:  		EndIf
   F0:  	EndCaseGroup
   F8:  	Case  ==  .Event:BurnHit % E
  104:  		SetConst  *Var0  00000001
  114:  		SetConst  *Var1  000A0012
  124:  		SetConst  *Var2  000A0013
  134:  		ExecWait  DoBurnHit
  140:  	Case  ==  .Event:BurnDeath % 24
  14C:  		SetConst  *Var0  00000001
  15C:  		SetConst  *Var1  000A0012
  16C:  		SetConst  *Var2  000A0013
  17C:  		ExecWait  DoBurnHit
  188:  		ExecWait  $Script_8021BBFC
  194:  		SetConst  *Var0  00000001
  1A4:  		SetConst  *Var1  000A0013
  1B4:  		ExecWait  DoDeath
  1C0:  		Return
  1C8:  	Case  ==  .Event:SpinSmashHit % B
  1D4:  		SetConst  *Var0  00000001
  1E4:  		SetConst  *Var1  000A0011
  1F4:  		ExecWait  DoSpinSmashHit
  200:  	Case  ==  .Event:SpinSmashDeath % 21
  20C:  		ExecWait  $Script_8021BBFC
  218:  		SetConst  *Var0  00000001
  228:  		SetConst  *Var1  000A0011
  238:  		ExecWait  DoSpinSmashHit
  244:  		SetConst  *Var0  00000001
  254:  		SetConst  *Var1  000A0011
  264:  		ExecWait  DoDeath
  270:  		Return
  278:  	Case  ==  .Event:FlipTrigger % D
  284:  		Call  SetActorVar       ( .Actor:Self 00000003 00000001 )
  29C:  		Call  SetActorVar       ( .Actor:Self 00000004 00000001 )
  2B4:  		Call  SetDefenseTable   ( .Actor:Self 00000001 $DefenseTable_8021E720 )
  2CC:  		Call  SetIdleAnimations ( .Actor:Self 00000001 $IdleAnimations_8021E6C8 )
  2E4:  		Call  SetTargetOffset   ( .Actor:Self 00000001  5`  15` )
  300:  		Call  8027D4C8  ( FFFFFF81 00000001 00000000 FFFFFFFA )
  31C:  		Call  SetAnimation      ( .Actor:Self 00000001 000A0011 )
  334:  		Call  SetActorRotationOffset    ( .Actor:Self 00000000 0000000C 00000000 )
  350:  		Thread
  358:  			Wait  4`
  364:  			Call  SetActorRotation  ( .Actor:Self 00000000 00000000 0000001E )
  380:  			Wait  1`
  38C:  			Call  SetActorRotation  ( .Actor:Self 00000000 00000000 00000000 )
  3A8:  			Wait  1`
  3B4:  			Call  SetActorRotation  ( .Actor:Self 00000000 00000000 FFFFFFE2 )
  3D0:  			Wait  1`
  3DC:  			Call  SetActorRotation  ( .Actor:Self 00000000 00000000 FFFFFFC4 )
  3F8:  			Wait  1`
  404:  			Call  SetActorRotation  ( .Actor:Self 00000000 00000000 FFFFFFB5 )
  420:  			Wait  1`
  42C:  		EndThread
  434:  		UseIntBuffer  $IntTable_8021E9C0
  440:  		Loop  00000016
  44C:  			Get1Int  *Var0
  458:  			Call  SetActorDispOffset    ( .Actor:Self 00000000 *Var0 00000000 )
  474:  			Wait  1`
  480:  		EndLoop
  488:  		Call  SetActorRotationOffset    ( .Actor:Self 00000000 00000000 00000000 )
  4A4:  		Call  SetActorRotation      ( .Actor:Self 00000000 00000000 00000000 )
  4C0:  		Call  SetActorDispOffset    ( .Actor:Self 00000000 00000000 00000000 )
  4DC:  		Call  SetAnimation  ( .Actor:Self 00000001 000A0019 )
  4F4:  	CaseOR  ==  00000017 % 17
  500:  	CaseOR  ==  .Event:Immune % 19
  50C:  	CaseOR  ==  .Event:AirLiftFailed % 1F
  518:  		Call  GetActorVar   ( .Actor:Self 00000003 *Var0 )
  530:  		Switch  *Var0
  53C:  			Case  ==  00000000
  548:  				SetConst  *Var0  00000001
  558:  				SetConst  *Var1  000A0004
  568:  			Case  ==  00000001
  574:  				Call  SetAnimationRate  ( .Actor:Self 00000001 *Fixed[1.0] )
  58C:  				SetConst  *Var0  00000001
  59C:  				SetConst  *Var1  000A0019
  5AC:  		EndSwitch
  5B4:  		ExecWait  DoImmune
  5C0:  	EndCaseGroup
  5C8:  	Case  ==  .Event:Death % 20
  5D4:  		ExecWait  $Script_8021BBFC
  5E0:  		SetConst  *Var0  00000001
  5F0:  		SetConst  *Var1  000A0011
  600:  		ExecWait  DoNormalHit
  60C:  		Wait  10`
  618:  		SetConst  *Var0  00000001
  628:  		SetConst  *Var1  000A0011
  638:  		ExecWait  DoDeath
  644:  		Return
  64C:  	Case  ==  .Event:RecoverStatus % 31
  658:  		Call  GetActorVar   ( .Actor:Self 00000003 *Var0 )
  670:  		If  *Var0  ==  00000001
  680:  			SetConst  *Var0  00000001
  690:  			SetConst  *Var1  000A0019
  6A0:  			ExecWait  DoImmune
  6AC:  		Else
  6B4:  			SetConst  *Var0  00000001
  6C4:  			SetConst  *Var1  000A0004
  6D4:  			ExecWait  DoRecover
  6E0:  		EndIf
  6E8:  	Case  ==  .Event:ScareAway % 39
  6F4:  		SetConst  *Var0  00000001
  704:  		SetConst  *Var1  000A0006
  714:  		SetConst  *Var2  000A0011
  724:  		ExecWait  DoScareAway
  730:  		Return
  738:  	Case  ==  .Event:BeginAirLift % 3A
  744:  		Call  GetActorVar   ( .Actor:Self 00000003 *Var0 )
  75C:  		Switch  *Var0
  768:  			Case  ==  00000000
  774:  				SetConst  *Var0  00000001
  784:  				SetConst  *Var1  000A0006
  794:  			Case  ==  00000001
  7A0:  				Call  SetAnimationRate  ( .Actor:Self 00000001 *Fixed[3.0] )
  7B8:  				SetConst  *Var0  00000001
  7C8:  				SetConst  *Var1  000A0019
  7D8:  		EndSwitch
  7E0:  		ExecWait  DoAirLift
  7EC:  	Case  ==  .Event:BlowAway % 16
  7F8:  		Call  GetActorVar   ( .Actor:Self 00000003 *Var0 )
  810:  		Switch  *Var0
  81C:  			Case  ==  00000000
  828:  				Call  GetStatusFlags    ( .Actor:Self *Var0 )
  83C:  				If  *Var0  !&  ~Flags:StatusFlags:Sleep|Frozen|Fear|Paralyze|Dizzy|Stone|Stop % 35D000
  84C:  					If  *Var0  &  ~Flags:StatusFlags:Shrink % 80000
  85C:  						Call  SetActorDispOffset    ( .Actor:Self 00000000 00000001 00000000 )
  878:  					Else
  880:  						Call  SetActorDispOffset    ( .Actor:Self 00000000 00000003 00000000 )
  89C:  					EndIf
  8A4:  				EndIf
  8AC:  				SetConst  *Var0  00000001
  8BC:  				SetConst  *Var1  000A0011
  8CC:  			Case  ==  00000001
  8D8:  				SetConst  *Var0  00000001
  8E8:  				SetConst  *Var1  000A0019
  8F8:  		EndSwitch
  900:  		ExecWait  DoBlowAway
  90C:  		Return
  914:  	Default
  91C:  EndSwitch
  924:  Call  EnableIdleScript  ( .Actor:Self 00000001 )
  938:  Call  UseIdleAnimation  ( .Actor:Self .True )
  94C:  Return
  954:  End
}

#new:Script $Script_TakeTurn_8021F374
{
    0:  Call  UseIdleAnimation  ( .Actor:Self .False )
   14:  Call  EnableIdleScript  ( .Actor:Self 00000000 )
   28:  Call  SetTargetActor    ( .Actor:Self .Actor:Player )
   3C:  Call  GetActorVar       ( .Actor:Self 00000003 *Var0 )
   54:  If  *Var0  ==  00000001
   64:  	Call  GetActorVar   ( .Actor:Self 00000004 *Var0 )
   7C:  	Sub   *Var0  00000001
   8C:  	If  *Var0  >  00000000
   9C:  		Call  SetActorVar   ( .Actor:Self 00000004 *Var0 )
   B4:  		Call  AddActorDecoration    ( .Actor:Self 00000001 00000000 .Decoration:Sweat )
   D0:  		Call  SetAnimationRate      ( .Actor:Self 00000001 *Fixed[3.0] )
   E8:  		Wait  30`
   F4:  		Call  SetAnimationRate      ( .Actor:Self 00000001 *Fixed[1.0] )
  10C:  		Call  RemoveActorDecoration ( .Actor:Self 00000001 00000000 )
  124:  	Else
  12C:  		Call  AddActorDecoration    ( .Actor:Self 00000001 00000000 .Decoration:Sweat )
  148:  		Call  SetAnimationRate      ( .Actor:Self 00000001 *Fixed[3.0] )
  160:  		Wait  20`
  16C:  		Call  SetAnimationRate      ( .Actor:Self 00000001 *Fixed[1.0] )
  184:  		Call  RemoveActorDecoration ( .Actor:Self 00000001 00000000 )
  19C:  		Call  SetAnimation  ( .Actor:Self 00000001 000A0019 )
  1B4:  		Set   *Var0  00000000
  1C4:  		Call  SetActorRotationOffset    ( .Actor:Self 00000000 0000000C 00000000 )
  1E0:  		Thread
  1E8:  			Loop  00000005
  1F4:  				Add   *Var0  0000000F
  204:  				Call  SetActorRotation  ( .Actor:Self 00000000 00000000 *Var0 )
  220:  				Wait  1`
  22C:  			EndLoop
  234:  		EndThread
  23C:  		Call  GetActorPos       ( .Actor:Self *Var0 *Var1 *Var2 )
  258:  		Call  SetGoalPos        ( .Actor:Self *Var0 *Var1 *Var2 )
  274:  		Call  SetActorJumpGravity       ( .Actor:Self *Fixed[3.0] )
  288:  		Call  JumpToGoal        ( .Actor:Self  8` .False .True .False )
  2A8:  		Call  SetActorRotationOffset    ( .Actor:Self 00000000 00000000 00000000 )
  2C4:  		Call  SetActorRotation  ( .Actor:Self 00000000 00000000 00000000 )
  2E0:  		Call  SetActorDispOffset        ( .Actor:Self 00000000 00000000 00000000 )
  2FC:  		Call  SetAnimation      ( .Actor:Self 00000001 000A0004 )
  314:  		Call  SetActorVar       ( .Actor:Self 00000003 00000000 )
  32C:  		Call  SetDefenseTable   ( .Actor:Self 00000001 $DefenseTable_8021E714 )
  344:  		Call  SetIdleAnimations ( .Actor:Self 00000001 $IdleAnimations_8021E67C )
  35C:  		Call  SetTargetOffset   ( .Actor:Self 00000001  -2`  38` )
  378:  		Call  8027D4C8  ( FFFFFF81 00000001 FFFFFFFD FFFFFFF7 )
  394:  	EndIf
  39C:  	Call  EnableIdleScript  ( .Actor:Self 00000001 )
  3B0:  	Call  UseIdleAnimation  ( .Actor:Self .True )
  3C4:  	Return
  3CC:  EndIf
  3D4:  Call  SetAnimation      ( .Actor:Self 00000001 000A000E )
  3EC:  Call  PlaySoundAtActor  ( .Actor:Self 00000000 )
  400:  Wait  15`
  40C:  Call  SetAnimation      ( .Actor:Self 00000001 000A000A )
  424:  Call  PlaySoundAtActor  ( .Actor:Self 0000200C )
  438:  Call  UseBattleCamPreset    ( 0000000E )
  448:  Call  BattleCamTargetActor  ( .Actor:Self )
  458:  Call  MoveBattleCamOver (  75` )
  468:  Call  8024ECF8  ( 00000001 00000001 00000001 )
  480:  Call  GetActorVar       ( .Actor:Self 00000001 *Var0 )
  498:  Switch  *Var0
  4A4:  	Case  ==  00000000
  4B0:  		Set   *Var0  0000000A
  4C0:  	Case  ==  00000001
  4CC:  		Set   *Var0  00000014
  4DC:  	Case  ==  00000002
  4E8:  		Set   *Var0  0000001E
  4F8:  EndSwitch
  500:  Set   *Var9  00000000
  510:  Loop  *Var0
  51C:  	Add   *Var9  00000001
  52C:  	Switch  *Var9
  538:  		Case  <  00000014
  544:  			Call  SetAnimation  ( .Actor:Self 00000001 000A000A )
  55C:  			Call  SetActorSpeed ( .Actor:Self *Fixed[10.0] )
  570:  		Case  ==  00000014
  57C:  			Call  GetActorPos   ( .Actor:Self *Var4 *Var5 *Var6 )
  598:  			Call  PlayEffect    ( ~FX:SmokeImpact:Small *Var4 *Var5 *Var6 00000020 00000004 00000000 0000000A 00000000 00000000 00000000 00000000 00000000 )
  5DC:  		Case  <  00000028
  5E8:  			Call  SetAnimation  ( .Actor:Self 00000001 000A000B )
  600:  			Call  SetActorSpeed ( .Actor:Self *Fixed[12.0] )
  614:  		Case  ==  00000028
  620:  			Call  GetActorPos   ( .Actor:Self *Var4 *Var5 *Var6 )
  63C:  			Call  PlayEffect    ( ~FX:SmokeImpact:Small *Var4 *Var5 *Var6 00000020 00000004 00000000 0000000A 00000000 00000000 00000000 00000000 00000000 )
  680:  		Case  <  00000032
  68C:  			Call  SetAnimation  ( .Actor:Self 00000001 000A000C )
  6A4:  			Call  SetActorSpeed ( .Actor:Self *Fixed[14.0] )
  6B8:  		Case  ==  00000032
  6C4:  			Call  GetActorPos   ( .Actor:Self *Var4 *Var5 *Var6 )
  6E0:  			Call  PlayEffect    ( ~FX:SmokeImpact:Small *Var4 *Var5 *Var6 00000020 00000004 00000000 0000000A 00000000 00000000 00000000 00000000 00000000 )
  724:  		Case  <  0000003C
  730:  			Call  SetAnimation  ( .Actor:Self 00000001 000A000D )
  748:  			Call  SetActorSpeed ( .Actor:Self *Fixed[16.0] )
  75C:  		Case  ==  0000003C
  768:  			Call  GetActorPos   ( .Actor:Self *Var4 *Var5 *Var6 )
  784:  			Call  PlayEffect    ( ~FX:SmokeImpact:Small *Var4 *Var5 *Var6 00000020 00000004 00000000 0000000A 00000000 00000000 00000000 00000000 00000000 )
  7C8:  	EndSwitch
  7D0:  	Wait  1`
  7DC:  EndLoop
  7E4:  Call  PlaySoundAtActor  ( .Actor:Self 0000200A )
  7F8:  Call  SetActorSounds    ( .Actor:Self .ActorSound:Walk 00000000 00000000 )
  814:  Call  UseBattleCamPreset    ( 00000002 )
  824:  Call  MoveBattleCamOver (  15` )
  834:  Call  AddActorDecoration    ( .Actor:Self 00000000 00000000 .Decoration:GreySmokeTrail )
  850:  Call  SetGoalToTarget   ( .Actor:Self )
  860:  Call  RunToGoal ( .Actor:Self  0` .False )
  878:  Call  EnemyTestTarget   ( .Actor:Self *Var0 ~Flags:DamageType:0 00000000 00000001 00000010 )
  89C:  Switch  *Var0
  8A8:  	CaseOR  ==  .HitResult:Miss % 6
  8B4:  	CaseOR  ==  .HitResult:Lucky % 5
  8C0:  		Set   *VarA  *Var0
  8D0:  		Thread
  8D8:  			Call  $Function_80218C40 ( )
  8E4:  			Call  RemoveActorDecoration ( .Actor:Self 00000000 00000000 )
  8FC:  		EndThread
  904:  		Wait  4`
  910:  		Call  SetAnimation  ( .Actor:Self 00000001 000A0009 )
  928:  		Call  SetActorRotationOffset    ( .Actor:Self FFFFFFF8 00000000 00000000 )
  944:  		Set   *Var0  00000000
  954:  		Loop  00000002
  960:  			Add   *Var0  0000001E
  970:  			Call  SetActorRotation  ( .Actor:Self 00000000 00000000 *Var0 )
  98C:  			Wait  1`
  998:  		EndLoop
  9A0:  		Wait  5`
  9AC:  		Call  GetActorPos   ( .Actor:Self *Var4 *Var5 *Var6 )
  9C8:  		Call  PlayEffect    ( ~FX:SmokeImpact:Small *Var4 *Var5 *Var6 00000010 00000004 00000000 0000000A 00000000 00000000 00000000 00000000 00000000 )
  A0C:  		Loop  00000005
  A18:  			Add   *Var0  FFFFFFF4
  A28:  			Call  SetActorRotation  ( .Actor:Self 00000000 00000000 *Var0 )
  A44:  			Wait  1`
  A50:  		EndLoop
  A58:  		Call  SetActorRotationOffset    ( .Actor:Self 00000000 00000000 00000000 )
  A74:  		Call  SetActorRotation  ( .Actor:Self 00000000 00000000 00000002 )
  A90:  		Wait  2`
  A9C:  		Call  SetActorRotation  ( .Actor:Self 00000000 00000000 FFFFFFFE )
  AB8:  		Wait  2`
  AC4:  		Call  SetActorRotation  ( .Actor:Self 00000000 00000000 00000000 )
  AE0:  		If  *VarA  ==  .HitResult:Lucky % 5
  AF0:  			Call  EnemyTestTarget   ( .Actor:Self *Var0 ~Flags:DamageType:TriggerLucky 00000000 00000000 00000000 )
  B14:  		EndIf
  B1C:  		Wait  10`
  B28:  		Call  SetAnimation      ( .Actor:Self 00000001 000A000F )
  B40:  		Wait  10`
  B4C:  		Call  UseBattleCamPreset    ( 00000002 )
  B5C:  		Call  YieldTurn ( )
  B68:  		Call  ResetAllActorSounds   ( .Actor:Self )
  B78:  		Call  SetAnimation      ( .Actor:Self 00000001 000A0006 )
  B90:  		Call  SetGoalToHome     ( .Actor:Self )
  BA0:  		Call  SetActorSpeed     ( .Actor:Self *Fixed[4.5] )
  BB4:  		Call  RunToGoal ( .Actor:Self  0` .False )
  BCC:  		Call  EnableIdleScript  ( .Actor:Self 00000001 )
  BE0:  		Call  UseIdleAnimation  ( .Actor:Self .True )
  BF4:  		Return
  BFC:  	EndCaseGroup
  C04:  EndSwitch
  C0C:  Call  RemoveActorDecoration ( .Actor:Self 00000000 00000000 )
  C24:  Call  GetActorVar   ( .Actor:Self 00000001 *Var9 )
  C3C:  Switch  *Var9
  C48:  	Case  ==  00000000
  C54:  		Wait  2`
  C60:  		Call  EnemyDamageTarget ( .Actor:Self *Var0 ~Flags:DamageType:0 0000FFFF 00000000 00000002 00000020 )
  C88:  	Case  ==  00000001
  C94:  		Wait  2`
  CA0:  		Call  EnemyDamageTarget ( .Actor:Self *Var0 ~Flags:DamageType:0 0000FFFF 00000000 00000003 00000020 )
  CC8:  	Case  ==  00000002
  CD4:  		Wait  2`
  CE0:  		Call  EnemyDamageTarget ( .Actor:Self *Var0 ~Flags:DamageType:0 0000FFFF 00000000 00000005 00000020 )
  D08:  EndSwitch
  D10:  Switch  *Var0
  D1C:  	CaseOR  ==  .HitResult:Hit % 0
  D28:  	CaseOR  ==  .HitResult:QuakeImmune % 2
  D34:  		Call  UseBattleCamPreset    ( 00000002 )
  D44:  		Call  MoveBattleCamOver     (  8` )
  D54:  		Call  GetActorPos   ( .Actor:Self *Var0 *Var1 *Var2 )
  D70:  		Add   *Var0  0000003C
  D80:  		Set   *Var1  00000000
  D90:  		Call  SetActorJumpGravity   ( .Actor:Self *Fixed[1.4] )
  DA4:  		Call  SetGoalPos    ( .Actor:Self *Var0 *Var1 *Var2 )
  DC0:  		Call  JumpToGoal    ( .Actor:Self  20` .False .True .False )
  DE0:  		Add   *Var0  0000001E
  DF0:  		Call  SetGoalPos    ( .Actor:Self *Var0 *Var1 *Var2 )
  E0C:  		Call  JumpToGoal    ( .Actor:Self  8` .False .True .False )
  E2C:  		Add   *Var0  00000014
  E3C:  		Call  SetGoalPos    ( .Actor:Self *Var0 *Var1 *Var2 )
  E58:  		Call  JumpToGoal    ( .Actor:Self  6` .False .True .False )
  E78:  		Add   *Var0  0000000A
  E88:  		Call  SetGoalPos    ( .Actor:Self *Var0 *Var1 *Var2 )
  EA4:  		Call  JumpToGoal    ( .Actor:Self  4` .False .True .False )
  EC4:  		Call  SetAnimation  ( .Actor:Self 00000001 000A000F )
  EDC:  		Wait  15`
  EE8:  		Call  YieldTurn ( )
  EF4:  		Call  ResetAllActorSounds   ( .Actor:Self )
  F04:  		Call  SetAnimation  ( .Actor:Self 00000001 000A0006 )
  F1C:  		Call  SetGoalToHome ( .Actor:Self )
  F2C:  		Call  SetActorSpeed ( .Actor:Self *Fixed[4.5] )
  F40:  		Call  RunToGoal     ( .Actor:Self  0` .False )
  F58:  	EndCaseGroup
  F60:  EndSwitch
  F68:  Call  EnableIdleScript  ( .Actor:Self 00000001 )
  F7C:  Call  UseIdleAnimation  ( .Actor:Self .True )
  F90:  Return
  F98:  End
}

#new:SpecialFormation $SpecialFormation_80220314
{
	$GhostKooper $Vector3D_8021CAE8 00000000 00000000 00000000 00000000 00000000
}

#new:IdleAnimations $IdleAnimations_80220330
{
	.Status:Normal    000B0004
	.Status:Stone     000B0000
	.Status:Sleep     000B0000
	.Status:Poison    000B0004
	.Status:Stop      000B0000
	.Status:Static    000B0004
	.Status:Paralyze  000B0000
	.Status:Dizzy     000B001E
	.Status:Fear      000B001E
	.Status:End
}

#new:DefenseTable $DefenseTable_8022037C
{
	.Element:Normal 00000000
	.Element:End
}

#new:StatusTable $StatusTable_80220388
{
	.Status:Normal      0`
	.Status:Default     0`
	.Status:Sleep      60`
	.Status:Poison      0`
	.Status:Frozen      0`
	.Status:Dizzy      75`
	.Status:Fear        0`
	.Status:Static      0`
	.Status:Paralyze   75`
	.Status:Shrink     75`
	.Status:Stop       80`
	.Status:DefaultTurnMod    0`
	.Status:SleepTurnMod     -1`
	.Status:PoisonTurnMod     0`
	.Status:FrozenTurnMod     0`
	.Status:DizzyTurnMod     -1`
	.Status:FearTurnMod       0`
	.Status:StaticTurnMod     0`
	.Status:ParalyzeTurnMod   0`
	.Status:ShrinkTurnMod     0`
	.Status:StopTurnMod      -1`
	.Status:End
}

#new:PartsTable $PartsTable_80220434
{
	00800000 01000000 001600FF $IdleAnimations_80220330 $DefenseTable_8022037C 00000000 00000000 FEF90000 00000000
}

#new:Actor $GhostBombette
{
	% stats
	[Index]        3Eb
	[Level]        23`b
	[MaxHP]        15`b
	[Coins]         2`b
	[Flags]       00000000
	[StatusTable] $StatusTable_80220388
	% ai
	[PartsCount]    1`s
	[PartsTable]  $PartsTable_80220434
	[Script]      $Script_Init_80220480
	% move effectiveness
	[Escape]       50`b
	[Item]         50`b
	[AirLift]      80`b
	[Hurricane]    70`b % Bow's "Spook" as well
	[UpAndAway]    95`b
	[PowerBounce]  90`b
	[SpinSmash]     0`b % weight (0-4)
	% ui positions
	[Size]         30`b  28`b % width height
	[HealthBar]     0`b   0`b % dx dy
	[StatusTurn]  -10`b  20`b % dx dy
	[StatusIcon]   10`b  20`b % dx dy
}

#new:Script $Script_Init_80220480
{
    0:  Call  BindTakeTurn      ( .Actor:Self $Script_TakeTurn_80220CA0 )
   14:  Call  BindIdle  ( .Actor:Self $Script_Idle_802204CC )
   28:  Call  BindHandleEvent   ( .Actor:Self $Script_HandleEvent_80220654 )
   3C:  Return
   44:  End
}

#new:Script $Script_Idle_802204CC
{
    0:  Return
    8:  End
}

#new:Script $Script_802204DC
{
    0:  Thread
    8:  	Call  ShakeCam  ( .Cam:Battle 00000000  2` *Fixed[0.75] )
   24:  	Call  ShakeCam  ( .Cam:Battle 00000000  5` *Fixed[3.0] )
   40:  	Call  ShakeCam  ( .Cam:Battle 00000000  10` *Fixed[4.5] )
   5C:  	Call  ShakeCam  ( .Cam:Battle 00000000  5` *Fixed[3.0] )
   78:  EndThread
   80:  Call  GetActorPos   ( .Actor:Self *Var0 *Var1 *Var2 )
   9C:  Add   *Var2  00000002
   AC:  Call  PlayEffect    ( ~FX:SmokeRing:Blast1 *Var0 *Var1 *Var2 00000000 00000000 00000000 00000000 00000000 00000000 00000000 00000000 00000000 )
   F0:  Add   *Var1  00000014
  100:  Add   *Var2  00000002
  110:  Call  PlayEffect    ( ~FX:Explosion1 *Var0 *Var1 *Var2 00000000 00000000 00000000 00000000 00000000 00000000 00000000 00000000 00000000 )
  154:  Call  PlaySoundAtActor  ( .Actor:Self .Sound:BombBlast )
  168:  Return
  170:  End
}

#new:Script $Script_HandleEvent_80220654
{
    0:  Call  UseIdleAnimation  ( .Actor:Self .False )
   14:  Call  EnableIdleScript  ( .Actor:Self 00000000 )
   28:  Call  GetLastEvent      ( .Actor:Self *Var0 )
   3C:  Switch  *Var0
   48:  	Case  ==  .Event:HitCombo % 9
   54:  		SetConst  *Var0  00000001
   64:  		SetConst  *Var1  000B0012
   74:  		ExecWait  DoNormalHit
   80:  	Case  ==  .Event:Hit % A
   8C:  		SetConst  *Var0  00000001
   9C:  		SetConst  *Var1  000B0012
   AC:  		ExecWait  DoNormalHit
   B8:  		Call  GetLastElement    ( *Var1 )
   C8:  		If  *Var1  &  00000020
   D8:  			Call  SetAnimation  ( .Actor:Self 00000001 000B0013 )
   F0:  			Wait  20`
   FC:  			ExecWait  $Script_802204DC
  108:  			ExecWait  $Script_8021BBFC
  114:  			Call  UseBattleCamPreset    ( 00000002 )
  124:  			SetConst  *Var0  00000001
  134:  			SetConst  *Var1  000B0014
  144:  			Set   *Var2  FFFFCFC7
  154:  			ExecWait  DoDeath
  160:  			Return
  168:  		EndIf
  170:  	Case  ==  .Event:BurnHit % E
  17C:  		SetConst  *Var0  00000001
  18C:  		SetConst  *Var1  000B0013
  19C:  		SetConst  *Var2  000B0014
  1AC:  		ExecWait  DoBurnHit
  1B8:  		ExecWait  $Script_802204DC
  1C4:  		ExecWait  $Script_8021BBFC
  1D0:  		SetConst  *Var0  00000001
  1E0:  		SetConst  *Var1  000B0014
  1F0:  		Set   *Var2  FFFFCFC7
  200:  		ExecWait  DoDeath
  20C:  		Return
  214:  	Case  ==  .Event:BurnDeath % 24
  220:  		SetConst  *Var0  00000001
  230:  		SetConst  *Var1  000B0013
  240:  		SetConst  *Var2  000B0014
  250:  		ExecWait  DoBurnHit
  25C:  		ExecWait  $Script_802204DC
  268:  		ExecWait  $Script_8021BBFC
  274:  		SetConst  *Var0  00000001
  284:  		SetConst  *Var1  000B0014
  294:  		Set   *Var2  FFFFCFC7
  2A4:  		ExecWait  DoDeath
  2B0:  		Return
  2B8:  	Case  ==  .Event:SpinSmashHit % B
  2C4:  		SetConst  *Var0  00000001
  2D4:  		SetConst  *Var1  000B0012
  2E4:  		ExecWait  DoSpinSmashHit
  2F0:  	Case  ==  .Event:SpinSmashDeath % 21
  2FC:  		ExecWait  $Script_8021BBFC
  308:  		SetConst  *Var0  00000001
  318:  		SetConst  *Var1  000B0012
  328:  		ExecWait  DoSpinSmashHit
  334:  		SetConst  *Var0  00000001
  344:  		SetConst  *Var1  000B0012
  354:  		ExecWait  DoDeath
  360:  		Return
  368:  	CaseOR  ==  .Event:ShockHit % 2F
  374:  	CaseOR  ==  .Event:ShockDeath % 26
  380:  		Call  HPBarToCurrent        ( .Actor:Self )
  390:  		Call  SetAnimation  ( .Actor:Self 00000001 000B0013 )
  3A8:  		Wait  20`
  3B4:  		ExecWait  $Script_802204DC
  3C0:  		ExecWait  $Script_8021BBFC
  3CC:  		Call  UseBattleCamPreset    ( 00000002 )
  3DC:  		SetConst  *Var0  00000001
  3EC:  		SetConst  *Var1  000B0014
  3FC:  		Set   *Var2  FFFFCFC7
  40C:  		ExecWait  DoDeath
  418:  		Return
  420:  	EndCaseGroup
  428:  	CaseOR  ==  00000017 % 17
  434:  	CaseOR  ==  .Event:Immune % 19
  440:  	CaseOR  ==  .Event:AirLiftFailed % 1F
  44C:  		SetConst  *Var0  00000001
  45C:  		SetConst  *Var1  000B0004
  46C:  		ExecWait  DoImmune
  478:  	EndCaseGroup
  480:  	Case  ==  .Event:Death % 20
  48C:  		ExecWait  $Script_8021BBFC
  498:  		SetConst  *Var0  00000001
  4A8:  		SetConst  *Var1  000B0012
  4B8:  		ExecWait  DoNormalHit
  4C4:  		Wait  10`
  4D0:  		SetConst  *Var0  00000001
  4E0:  		SetConst  *Var1  000B0012
  4F0:  		ExecWait  DoDeath
  4FC:  		Return
  504:  	Case  ==  .Event:RecoverStatus % 31
  510:  		SetConst  *Var0  00000001
  520:  		SetConst  *Var1  000B0004
  530:  		ExecWait  DoRecover
  53C:  	Case  ==  .Event:ScareAway % 39
  548:  		SetConst  *Var0  00000001
  558:  		SetConst  *Var1  000B0008
  568:  		SetConst  *Var2  000B0012
  578:  		ExecWait  DoScareAway
  584:  		Return
  58C:  	Case  ==  .Event:BeginAirLift % 3A
  598:  		SetConst  *Var0  00000001
  5A8:  		SetConst  *Var1  000B0008
  5B8:  		ExecWait  DoAirLift
  5C4:  	Case  ==  .Event:BlowAway % 16
  5D0:  		SetConst  *Var0  00000001
  5E0:  		SetConst  *Var1  000B0012
  5F0:  		ExecWait  DoBlowAway
  5FC:  		Return
  604:  	Default
  60C:  EndSwitch
  614:  Call  EnableIdleScript  ( .Actor:Self 00000001 )
  628:  Call  UseIdleAnimation  ( .Actor:Self .True )
  63C:  Return
  644:  End
}

#new:Script $Script_TakeTurn_80220CA0
{
    0:  Call  UseIdleAnimation  ( .Actor:Self .False )
   14:  Call  EnableIdleScript  ( .Actor:Self 00000000 )
   28:  Wait  10`
   34:  Call  UseBattleCamPreset    ( 0000003F )
   44:  Call  BattleCamTargetActor  ( .Actor:Self )
   54:  Call  SetTargetActor    ( .Actor:Self .Actor:Player )
   68:  Call  SetGoalToTarget   ( .Actor:Self )
   78:  Call  AddGoalPos        ( .Actor:Self  40`  0`  0` )
   94:  Call  MoveBattleCamOver (  30` )
   A4:  Call  SetAnimation      ( .Actor:Self 00000001 000B0008 )
   BC:  Call  RunToGoal ( .Actor:Self  30` .False )
   D4:  Call  SetAnimation      ( .Actor:Self 00000001 000B0004 )
   EC:  Call  SetAnimation      ( .Actor:Self 00000001 000B000F )
  104:  Wait  15`
  110:  Call  SetActorSounds    ( .Actor:Self .ActorSound:Walk 00000000 00000000 )
  12C:  Call  PlaySoundAtActor  ( .Actor:Self 00002020 )
  140:  Call  EnemyTestTarget   ( .Actor:Self *Var0 ~Flags:DamageType:0 00000000 00000001 00000010 )
  164:  Switch  *Var0
  170:  	CaseOR  ==  .HitResult:Miss % 6
  17C:  	CaseOR  ==  .HitResult:Lucky % 5
  188:  		Set   *VarA  *Var0
  198:  		Call  SetGoalToTarget   ( .Actor:Self )
  1A8:  		Call  AddGoalPos    ( .Actor:Self  -10`  0`  0` )
  1C4:  		Call  SetAnimation  ( .Actor:Self 00000001 000B0010 )
  1DC:  		Call  RunToGoal     ( .Actor:Self  5` .False )
  1F4:  		Call  SetAnimation  ( .Actor:Self 00000001 000B0004 )
  20C:  		Thread
  214:  			Call  SetActorRotationOffset    ( .Actor:Self 00000000 0000000F 00000000 )
  230:  			Set   *Var0  00000000
  240:  			Loop  0000000A
  24C:  				Add   *Var0  00000048
  25C:  				Call  SetActorRotation  ( .Actor:Self 00000000 00000000 *Var0 )
  278:  				Wait  1`
  284:  			EndLoop
  28C:  			Call  SetActorRotationOffset    ( .Actor:Self 00000000 00000000 00000000 )
  2A8:  		EndThread
  2B0:  		Call  AddGoalPos    ( .Actor:Self  -60`  0`  0` )
  2CC:  		Call  RunToGoal     ( .Actor:Self  10` .False )
  2E4:  		Call  SetAnimation  ( .Actor:Self 00000001 000B0004 )
  2FC:  		Thread
  304:  			Call  $Function_80218D64 ( )
  310:  		EndThread
  318:  		If  *VarA  ==  .HitResult:Lucky % 5
  328:  			Call  EnemyTestTarget   ( .Actor:Self *Var0 ~Flags:DamageType:TriggerLucky 00000000 00000000 00000000 )
  34C:  		EndIf
  354:  		Wait  20`
  360:  		Call  UseBattleCamPreset    ( 00000002 )
  370:  		Call  YieldTurn ( )
  37C:  		Call  SetAnimation      ( .Actor:Self 00000001 000B0008 )
  394:  		Call  SetGoalToHome     ( .Actor:Self )
  3A4:  		Call  SetActorSpeed     ( .Actor:Self *Fixed[5.0] )
  3B8:  		Call  RunToGoal ( .Actor:Self  0` .False )
  3D0:  		Call  EnableIdleScript  ( .Actor:Self 00000001 )
  3E4:  		Call  UseIdleAnimation  ( .Actor:Self .True )
  3F8:  		Return
  400:  	EndCaseGroup
  408:  EndSwitch
  410:  Set   *VarA  *Var0
  420:  Call  SetGoalToTarget   ( .Actor:Self )
  430:  Call  SetAnimation  ( .Actor:Self 00000001 000B0010 )
  448:  Call  RunToGoal     ( .Actor:Self  4` .False )
  460:  Call  GetActorVar   ( .Actor:Self 00000001 *Var9 )
  478:  Switch  *Var9
  484:  	Case  ==  00000000
  490:  		Wait  2`
  49C:  		Call  EnemyDamageTarget ( .Actor:Self *Var0 ~Flags:DamageType:0 00000000 00000000 00000002 00000020 )
  4C4:  	Case  ==  00000001
  4D0:  		Wait  2`
  4DC:  		Call  EnemyDamageTarget ( .Actor:Self *Var0 ~Flags:DamageType:0 00000000 00000000 00000003 00000020 )
  504:  	Case  ==  00000002
  510:  		Wait  2`
  51C:  		Call  EnemyDamageTarget ( .Actor:Self *Var0 ~Flags:DamageType:0 00000000 00000000 00000005 00000020 )
  544:  EndSwitch
  54C:  Switch  *Var0
  558:  	CaseOR  ==  .HitResult:Hit % 0
  564:  	CaseOR  ==  .HitResult:QuakeImmune % 2
  570:  		Call  SetAnimation  ( .Actor:Self 00000001 000B0004 )
  588:  		Call  UseBattleCamPreset    ( 00000002 )
  598:  		Call  MoveBattleCamOver     (  8` )
  5A8:  		Call  SetAnimation  ( .Actor:Self 00000001 000B0011 )
  5C0:  		Call  GetGoalPos    ( .Actor:Self *Var0 *Var1 *Var2 )
  5DC:  		Add   *Var0  00000028
  5EC:  		Set   *Var1  00000000
  5FC:  		Call  SetActorJumpGravity   ( .Actor:Self *Fixed[1.4] )
  610:  		Call  SetGoalPos    ( .Actor:Self *Var0 *Var1 *Var2 )
  62C:  		Call  JumpToGoal    ( .Actor:Self  20` .False .True .False )
  64C:  		Call  SetAnimation  ( .Actor:Self 00000001 000B000E )
  664:  		Wait  1`
  670:  		Call  SetAnimation  ( .Actor:Self 00000001 000B0011 )
  688:  		Add   *Var0  00000028
  698:  		Call  SetGoalPos    ( .Actor:Self *Var0 *Var1 *Var2 )
  6B4:  		Call  JumpToGoal    ( .Actor:Self  8` .False .True .False )
  6D4:  		Call  SetAnimation  ( .Actor:Self 00000001 000B000E )
  6EC:  		Wait  1`
  6F8:  		Call  SetAnimation  ( .Actor:Self 00000001 000B0011 )
  710:  		Add   *Var0  00000014
  720:  		Call  SetGoalPos    ( .Actor:Self *Var0 *Var1 *Var2 )
  73C:  		Call  JumpToGoal    ( .Actor:Self  6` .False .True .False )
  75C:  		Call  SetAnimation  ( .Actor:Self 00000001 000B000E )
  774:  		Wait  1`
  780:  		Call  SetAnimation  ( .Actor:Self 00000001 000B0011 )
  798:  		Add   *Var0  0000000A
  7A8:  		Call  SetGoalPos    ( .Actor:Self *Var0 *Var1 *Var2 )
  7C4:  		Call  JumpToGoal    ( .Actor:Self  4` .False .True .False )
  7E4:  		Call  SetAnimation  ( .Actor:Self 00000001 000B000E )
  7FC:  		Wait  1`
  808:  		Call  SetAnimation  ( .Actor:Self 00000001 000B0004 )
  820:  		Wait  8`
  82C:  		Call  YieldTurn ( )
  838:  		Call  SetAnimation  ( .Actor:Self 00000001 000B0008 )
  850:  		Call  SetGoalToHome ( .Actor:Self )
  860:  		Call  SetActorSpeed ( .Actor:Self *Fixed[5.0] )
  874:  		Call  RunToGoal     ( .Actor:Self  0` .False )
  88C:  	EndCaseGroup
  894:  EndSwitch
  89C:  Call  EnableIdleScript  ( .Actor:Self 00000001 )
  8B0:  Call  UseIdleAnimation  ( .Actor:Self .True )
  8C4:  Return
  8CC:  End
}

#new:SpecialFormation $SpecialFormation_80221574
{
	$GhostBombette $Vector3D_8021CAE8 00000000 00000000 00000000 00000000 00000000
}

#new:IdleAnimations $IdleAnimations_80221590
{
	.Status:Normal    000C0001
	.Status:Stone     000C0000
	.Status:Sleep     000C0000
	.Status:Poison    000C0001
	.Status:Stop      000C0000
	.Status:Static    000C0001
	.Status:Paralyze  000C0000
	.Status:Dizzy     000C0001
	.Status:Fear      000C0001
	.Status:End
}

#new:DefenseTable $DefenseTable_802215DC
{
	.Element:Normal 00000001
	.Element:End
}

#new:StatusTable $StatusTable_802215E8
{
	.Status:Normal      0`
	.Status:Default     0`
	.Status:Sleep      60`
	.Status:Poison      0`
	.Status:Frozen      0`
	.Status:Dizzy      75`
	.Status:Fear        0`
	.Status:Static      0`
	.Status:Paralyze   75`
	.Status:Shrink     75`
	.Status:Stop       80`
	.Status:DefaultTurnMod    0`
	.Status:SleepTurnMod     -1`
	.Status:PoisonTurnMod     0`
	.Status:FrozenTurnMod     0`
	.Status:DizzyTurnMod     -1`
	.Status:FearTurnMod       0`
	.Status:StaticTurnMod     0`
	.Status:ParalyzeTurnMod   0`
	.Status:ShrinkTurnMod     0`
	.Status:StopTurnMod      -1`
	.Status:End
}

#new:PartsTable $PartsTable_80221694
{
	00020000 01000000 FD2000FF $IdleAnimations_80221590 $DefenseTable_802215DC 00000000 00000000 00F00000 00000000
	80800001 02003200 FDEE00FF 00000000 $DefenseTable_802215DC 00000000 00000000 00F00000 00000000
}

#new:Actor $GhostParakarry
{
	% stats
	[Index]        3Fb
	[Level]        23`b
	[MaxHP]        15`b
	[Coins]         2`b
	[Flags]       00000200
	[StatusTable] $StatusTable_802215E8
	% ai
	[PartsCount]    2`s
	[PartsTable]  $PartsTable_80221694
	[Script]      $Script_Init_80221704
	% move effectiveness
	[Escape]       50`b
	[Item]         50`b
	[AirLift]      80`b
	[Hurricane]    70`b % Bow's "Spook" as well
	[UpAndAway]    95`b
	[PowerBounce]  90`b
	[SpinSmash]     0`b % weight (0-4)
	% ui positions
	[Size]         38`b  38`b % width height
	[HealthBar]     0`b   0`b % dx dy
	[StatusTurn]  -10`b  20`b % dx dy
	[StatusIcon]   10`b  20`b % dx dy
}

#new:Script $Script_Init_80221704
{
    0:  Call  BindTakeTurn      ( .Actor:Self $Script_TakeTurn_802224E4 )
   14:  Call  BindIdle  ( .Actor:Self $Script_Idle_80221750 )
   28:  Call  BindHandleEvent   ( .Actor:Self $Script_HandleEvent_80221760 )
   3C:  Return
   44:  End
}

#new:Script $Script_Idle_80221750
{
    0:  Return
    8:  End
}

#new:Script $Script_HandleEvent_80221760
{
    0:  Call  UseIdleAnimation  ( .Actor:Self .False )
   14:  Call  EnableIdleScript  ( .Actor:Self 00000000 )
   28:  Call  GetLastEvent      ( .Actor:Self *Var0 )
   3C:  Switch  *Var0
   48:  	CaseOR  ==  .Event:HitCombo % 9
   54:  	CaseOR  ==  .Event:Hit % A
   60:  		Call  GetLastElement    ( *Var1 )
   70:  		If  *Var1  &  00000020
   80:  			SetConst  *Var0  00000001
   90:  			SetConst  *Var1  000C000E
   A0:  			ExecWait  $Script_8021BC34
   AC:  			Return
   B4:  		Else
   BC:  			SetConst  *Var0  00000001
   CC:  			SetConst  *Var1  000C000E
   DC:  			ExecWait  DoNormalHit
   E8:  		EndIf
   F0:  	EndCaseGroup
   F8:  	Case  ==  .Event:BurnHit % E
  104:  		SetConst  *Var0  00000001
  114:  		SetConst  *Var1  000C000F
  124:  		SetConst  *Var2  000C0010
  134:  		ExecWait  DoBurnHit
  140:  	Case  ==  .Event:BurnDeath % 24
  14C:  		SetConst  *Var0  00000001
  15C:  		SetConst  *Var1  000C000F
  16C:  		SetConst  *Var2  000C0010
  17C:  		ExecWait  DoBurnHit
  188:  		ExecWait  $Script_8021BBFC
  194:  		Wait  10`
  1A0:  		SetConst  *Var0  00000001
  1B0:  		SetConst  *Var1  000C0010
  1C0:  		ExecWait  DoDeath
  1CC:  		Return
  1D4:  	Case  ==  .Event:SpinSmashHit % B
  1E0:  		SetConst  *Var0  00000001
  1F0:  		SetConst  *Var1  000C000E
  200:  		ExecWait  DoSpinSmashHit
  20C:  	Case  ==  .Event:SpinSmashDeath % 21
  218:  		ExecWait  $Script_8021BBFC
  224:  		SetConst  *Var0  00000001
  234:  		SetConst  *Var1  000C000E
  244:  		ExecWait  DoSpinSmashHit
  250:  		SetConst  *Var0  00000001
  260:  		SetConst  *Var1  000C000E
  270:  		ExecWait  DoDeath
  27C:  		Return
  284:  	Case  ==  .Event:ShockHit % 2F
  290:  		SetConst  *Var0  00000001
  2A0:  		SetConst  *Var1  000C000E
  2B0:  		ExecWait  $Script_8021C0F8
  2BC:  		Return
  2C4:  	Case  ==  .Event:ShockDeath % 26
  2D0:  		ExecWait  $Script_8021BBFC
  2DC:  		SetConst  *Var0  00000001
  2EC:  		SetConst  *Var1  000C000D
  2FC:  		Set   *Var2  00000016
  30C:  		ExecWait  $Script_8021C784
  318:  		SetConst  *Var0  00000001
  328:  		SetConst  *Var1  000C000E
  338:  		ExecWait  DoDeath
  344:  		Return
  34C:  	CaseOR  ==  00000017 % 17
  358:  	CaseOR  ==  .Event:Immune % 19
  364:  	CaseOR  ==  .Event:AirLiftFailed % 1F
  370:  		SetConst  *Var0  00000001
  380:  		SetConst  *Var1  000C0001
  390:  		ExecWait  DoImmune
  39C:  	EndCaseGroup
  3A4:  	Case  ==  .Event:Death % 20
  3B0:  		ExecWait  $Script_8021BBFC
  3BC:  		SetConst  *Var0  00000001
  3CC:  		SetConst  *Var1  000C000E
  3DC:  		ExecWait  DoNormalHit
  3E8:  		Wait  10`
  3F4:  		SetConst  *Var0  00000001
  404:  		SetConst  *Var1  000C000E
  414:  		ExecWait  DoDeath
  420:  		Return
  428:  	Case  ==  .Event:RecoverStatus % 31
  434:  		SetConst  *Var0  00000001
  444:  		SetConst  *Var1  000C0001
  454:  		ExecWait  DoRecover
  460:  	Case  ==  .Event:ScareAway % 39
  46C:  		SetConst  *Var0  00000001
  47C:  		SetConst  *Var1  000C0003
  48C:  		SetConst  *Var2  000C000E
  49C:  		ExecWait  DoScareAway
  4A8:  		Return
  4B0:  	Case  ==  .Event:BeginAirLift % 3A
  4BC:  		SetConst  *Var0  00000001
  4CC:  		SetConst  *Var1  000C0003
  4DC:  		ExecWait  DoAirLift
  4E8:  	Case  ==  .Event:BlowAway % 16
  4F4:  		Call  GetStatusFlags    ( .Actor:Self *Var0 )
  508:  		If  *Var0  !&  ~Flags:StatusFlags:Sleep|Frozen|Fear|Paralyze|Dizzy|Stone|Stop % 35D000
  518:  			If  *Var0  &  ~Flags:StatusFlags:Shrink % 80000
  528:  				Call  SetActorDispOffset    ( .Actor:Self 00000000 00000001 00000000 )
  544:  			Else
  54C:  				Call  SetActorDispOffset    ( .Actor:Self 00000000 00000003 00000000 )
  568:  			EndIf
  570:  		EndIf
  578:  		SetConst  *Var0  00000001
  588:  		SetConst  *Var1  000C000E
  598:  		ExecWait  DoBlowAway
  5A4:  		Return
  5AC:  	Default
  5B4:  EndSwitch
  5BC:  Call  EnableIdleScript  ( .Actor:Self 00000001 )
  5D0:  Call  UseIdleAnimation  ( .Actor:Self .True )
  5E4:  Return
  5EC:  End
}

#new:Script $Script_80221D54
{
    0:  Call  UseIdleAnimation  ( .Actor:Self .False )
   14:  Call  EnableIdleScript  ( .Actor:Self 00000000 )
   28:  Call  SetTargetActor    ( .Actor:Self .Actor:Player )
   3C:  Call  UseBattleCamPreset    ( 0000003F )
   4C:  Call  BattleCamTargetActor  ( .Actor:Self )
   5C:  Call  8024ECF8      ( FFFFFFFF 00000001 00000000 )
   74:  Call  SetAnimation  ( .Actor:Self 00000001 000C0003 )
   8C:  Call  SetGoalToTarget   ( .Actor:Self )
   9C:  Call  AddGoalPos    ( .Actor:Self  20`  0`  0` )
   B8:  Call  SetActorSpeed ( .Actor:Self *Fixed[4.0] )
   CC:  Call  FlyToGoal     ( .Actor:Self  0`  -10` .Easing:CosInOut )
   E8:  Call  SetAnimation  ( .Actor:Self 00000001 000C0000 )
  100:  Wait  3`
  10C:  Call  8024E664      ( 00000001 )
  11C:  Call  SetActorSounds    ( .Actor:Self .ActorSound:Fly 00000000 00000000 )
  138:  Call  PlaySoundAtActor  ( .Actor:Self 00002004 )
  14C:  Call  SetAnimation  ( .Actor:Self 00000001 000C0014 )
  164:  Call  AddGoalPos    ( .Actor:Self  0`  10`  0` )
  180:  Call  FlyToGoal     ( .Actor:Self  5`  0` .Easing:Linear )
  19C:  Wait  2`
  1A8:  Thread
  1B0:  	Wait  3`
  1BC:  	Call  SetAnimation  ( .Actor:Self 00000001 000C0004 )
  1D4:  EndThread
  1DC:  Call  AddGoalPos        ( .Actor:Self  40`  15`  0` )
  1F8:  Call  FlyToGoal ( .Actor:Self  20`  -20` .Easing:QuarticOut )
  214:  Call  PlaySoundAtActor  ( .Actor:Self 00002005 )
  228:  Call  EnableActorBlur   ( .Actor:Self 00000001 )
  23C:  Call  SetGoalToTarget   ( .Actor:Self )
  24C:  Call  SetAnimation      ( .Actor:Self 00000001 000C0005 )
  264:  Call  FlyToGoal ( .Actor:Self  5`  0` .Easing:Linear )
  280:  Call  EnemyTestTarget   ( .Actor:Self *Var0 ~Flags:DamageType:0 00000000 00000001 00000010 )
  2A4:  Switch  *Var0
  2B0:  	CaseOR  ==  .HitResult:Miss % 6
  2BC:  	CaseOR  ==  .HitResult:Lucky % 5
  2C8:  		Set   *VarA  *Var0
  2D8:  		Thread
  2E0:  			Wait  5`
  2EC:  			Call  SetAnimation  ( .Actor:Self 00000001 000C0001 )
  304:  		EndThread
  30C:  		Call  SetGoalToTarget   ( .Actor:Self )
  31C:  		Call  AddGoalPos        ( .Actor:Self  -40`  10`  0` )
  338:  		Call  FlyToGoal ( .Actor:Self  10`  -20` .Easing:QuadraticOut )
  354:  		If  *VarA  ==  .HitResult:Lucky % 5
  364:  			Call  EnemyTestTarget   ( .Actor:Self *Var0 ~Flags:DamageType:TriggerLucky 00000000 00000000 00000000 )
  388:  		EndIf
  390:  		Wait  20`
  39C:  		Call  EnableActorBlur   ( .Actor:Self 00000000 )
  3B0:  		Wait  15`
  3BC:  		Call  UseBattleCamPreset    ( 00000002 )
  3CC:  		Call  YieldTurn ( )
  3D8:  		Call  SetGoalToHome     ( .Actor:Self )
  3E8:  		Call  SetActorSpeed     ( .Actor:Self *Fixed[6.0] )
  3FC:  		Call  SetAnimation      ( .Actor:Self 00000001 000C0003 )
  414:  		Call  FlyToGoal ( .Actor:Self  0`  -5` .Easing:Linear )
  430:  		Call  EnableIdleScript  ( .Actor:Self 00000001 )
  444:  		Call  UseIdleAnimation  ( .Actor:Self .True )
  458:  		Return
  460:  	EndCaseGroup
  468:  EndSwitch
  470:  Call  EnableActorBlur   ( .Actor:Self 00000000 )
  484:  Call  SetAnimation      ( .Actor:Self 00000001 000C0006 )
  49C:  Wait  1`
  4A8:  Call  GetActorVar       ( .Actor:Self 00000001 *Var9 )
  4C0:  Switch  *Var9
  4CC:  	Case  ==  00000000
  4D8:  		Wait  2`
  4E4:  		Call  EnemyDamageTarget ( .Actor:Self *Var0 ~Flags:DamageType:0 00000000 00000000 00000002 00000020 )
  50C:  	Case  ==  00000001
  518:  		Wait  2`
  524:  		Call  EnemyDamageTarget ( .Actor:Self *Var0 ~Flags:DamageType:0 00000000 00000000 00000003 00000020 )
  54C:  	Case  ==  00000002
  558:  		Wait  2`
  564:  		Call  EnemyDamageTarget ( .Actor:Self *Var0 ~Flags:DamageType:0 00000000 00000000 00000005 00000020 )
  58C:  EndSwitch
  594:  Call  PlaySound ( 00000000 )
  5A4:  Switch  *Var0
  5B0:  	CaseOR  ==  .HitResult:Hit % 0
  5BC:  	CaseOR  ==  .HitResult:QuakeImmune % 2
  5C8:  		Call  UseBattleCamPreset    ( 00000002 )
  5D8:  		Call  SetAnimation  ( .Actor:Self 00000001 000C0005 )
  5F0:  		Call  SetActorJumpGravity   ( .Actor:Self *Fixed[1.4] )
  604:  		Call  AddGoalPos    ( .Actor:Self  50`  0`  0` )
  620:  		Call  JumpToGoal    ( .Actor:Self  15` .False .False .False )
  640:  		Call  SetAnimation  ( .Actor:Self 00000001 000C0000 )
  658:  		Thread
  660:  			Wait  4`
  66C:  			Call  SetAnimation  ( .Actor:Self 00000001 000C0003 )
  684:  		EndThread
  68C:  		Call  AddGoalPos    ( .Actor:Self  30`  0`  0` )
  6A8:  		Call  JumpWithBounce    ( .Actor:Self  10` *Fixed[4.0] )
  6C0:  		Call  SetAnimation  ( .Actor:Self 00000001 000C0001 )
  6D8:  		Wait  6`
  6E4:  		Call  YieldTurn ( )
  6F0:  		Call  SetGoalToHome ( .Actor:Self )
  700:  		Call  SetActorSpeed ( .Actor:Self *Fixed[6.0] )
  714:  		Call  SetAnimation  ( .Actor:Self 00000001 000C0003 )
  72C:  		Call  FlyToGoal     ( .Actor:Self  0`  -5` .Easing:Linear )
  748:  	EndCaseGroup
  750:  EndSwitch
  758:  Call  EnableIdleScript  ( .Actor:Self 00000001 )
  76C:  Call  UseIdleAnimation  ( .Actor:Self .True )
  780:  Return
  788:  End
}

#new:Script $Script_TakeTurn_802224E4
{
    0:  ExecWait  $Script_80221D54
    C:  Return
   14:  End
}

#new:SpecialFormation $SpecialFormation_80222500
{
	$GhostParakarry $Vector3D_8021CAE8 00000000 00000000 00000000 00000000 00000000
}

#new:IdleAnimations $IdleAnimations_8022251C
{
	.Status:Normal    000D0001
	.Status:Stone     000D0000
	.Status:Sleep     000D0000
	.Status:Poison    000D0001
	.Status:Stop      000D0000
	.Status:Static    000D0001
	.Status:Paralyze  000D0000
	.Status:Dizzy     000D001A
	.Status:Fear      000D001A
	.Status:End
}

#new:DefenseTable $DefenseTable_80222568
{
	.Element:Normal 00000000
	.Element:End
}

#new:StatusTable $StatusTable_80222574
{
	.Status:Normal      0`
	.Status:Default     0`
	.Status:Sleep      60`
	.Status:Poison      0`
	.Status:Frozen      0`
	.Status:Dizzy      75`
	.Status:Fear        0`
	.Status:Static      0`
	.Status:Paralyze   75`
	.Status:Shrink     75`
	.Status:Stop       80`
	.Status:DefaultTurnMod    0`
	.Status:SleepTurnMod     -1`
	.Status:PoisonTurnMod     0`
	.Status:FrozenTurnMod     0`
	.Status:DizzyTurnMod     -1`
	.Status:FearTurnMod       0`
	.Status:StaticTurnMod     0`
	.Status:ParalyzeTurnMod   0`
	.Status:ShrinkTurnMod     0`
	.Status:StopTurnMod      -1`
	.Status:End
}

#new:PartsTable $PartsTable_80222620
{
	00020000 01000000 001800FF $IdleAnimations_8022251C $DefenseTable_80222568 00000000 00000000 00F60000 00000000
	80800001 02003200 00E600FF 00000000 $DefenseTable_80222568 00000000 00000000 00F60000 00000000
}

#new:Actor $GhostBow
{
	% stats
	[Index]        40b
	[Level]        23`b
	[MaxHP]        15`b
	[Coins]         2`b
	[Flags]       00000200
	[StatusTable] $StatusTable_80222574
	% ai
	[PartsCount]    2`s
	[PartsTable]  $PartsTable_80222620
	[Script]      $Script_Init_80222690
	% move effectiveness
	[Escape]       50`b
	[Item]         50`b
	[AirLift]      80`b
	[Hurricane]    70`b % Bow's "Spook" as well
	[UpAndAway]    95`b
	[PowerBounce]  90`b
	[SpinSmash]     0`b % weight (0-4)
	% ui positions
	[Size]         36`b  29`b % width height
	[HealthBar]     0`b   0`b % dx dy
	[StatusTurn]  -10`b  20`b % dx dy
	[StatusIcon]   10`b  20`b % dx dy
}

#new:Script $Script_Init_80222690
{
    0:  Call  BindTakeTurn      ( .Actor:Self $Script_TakeTurn_80222C7C )
   14:  Call  BindIdle  ( .Actor:Self $Script_Idle_802226DC )
   28:  Call  BindHandleEvent   ( .Actor:Self $Script_HandleEvent_802226EC )
   3C:  Return
   44:  End
}

#new:Script $Script_Idle_802226DC
{
    0:  Return
    8:  End
}

#new:Script $Script_HandleEvent_802226EC
{
    0:  Call  UseIdleAnimation  ( .Actor:Self .False )
   14:  Call  EnableIdleScript  ( .Actor:Self 00000000 )
   28:  Call  GetLastEvent      ( .Actor:Self *Var0 )
   3C:  Switch  *Var0
   48:  	CaseOR  ==  .Event:HitCombo % 9
   54:  	CaseOR  ==  .Event:Hit % A
   60:  		Call  GetLastElement    ( *Var1 )
   70:  		If  *Var1  &  00000020
   80:  			SetConst  *Var0  00000001
   90:  			SetConst  *Var1  000D0015
   A0:  			ExecWait  $Script_8021BC34
   AC:  			Return
   B4:  		Else
   BC:  			SetConst  *Var0  00000001
   CC:  			SetConst  *Var1  000D0015
   DC:  			ExecWait  DoNormalHit
   E8:  		EndIf
   F0:  	EndCaseGroup
   F8:  	Case  ==  .Event:BurnHit % E
  104:  		SetConst  *Var0  00000001
  114:  		SetConst  *Var1  000D0018
  124:  		SetConst  *Var2  000D0019
  134:  		ExecWait  DoBurnHit
  140:  	Case  ==  .Event:BurnDeath % 24
  14C:  		SetConst  *Var0  00000001
  15C:  		SetConst  *Var1  000D0018
  16C:  		SetConst  *Var2  000D0019
  17C:  		ExecWait  DoBurnHit
  188:  		ExecWait  $Script_8021BBFC
  194:  		Wait  10`
  1A0:  		SetConst  *Var0  00000001
  1B0:  		SetConst  *Var1  000D0019
  1C0:  		ExecWait  DoDeath
  1CC:  		Return
  1D4:  	Case  ==  .Event:SpinSmashHit % B
  1E0:  		SetConst  *Var0  00000001
  1F0:  		SetConst  *Var1  000D0015
  200:  		ExecWait  DoSpinSmashHit
  20C:  	Case  ==  .Event:SpinSmashDeath % 21
  218:  		ExecWait  $Script_8021BBFC
  224:  		SetConst  *Var0  00000001
  234:  		SetConst  *Var1  000D0015
  244:  		ExecWait  DoSpinSmashHit
  250:  		SetConst  *Var0  00000001
  260:  		SetConst  *Var1  000D0015
  270:  		ExecWait  DoDeath
  27C:  		Return
  284:  	Case  ==  .Event:ShockHit % 2F
  290:  		Call  UseBattleCamPreset    ( 00000002 )
  2A0:  		SetConst  *Var0  00000001
  2B0:  		SetConst  *Var1  000D0015
  2C0:  		ExecWait  $Script_8021C0F8
  2CC:  		Return
  2D4:  	Case  ==  .Event:ShockDeath % 26
  2E0:  		Call  UseBattleCamPreset    ( 00000002 )
  2F0:  		ExecWait  $Script_8021BBFC
  2FC:  		SetConst  *Var0  00000001
  30C:  		SetConst  *Var1  000D0015
  31C:  		Set   *Var2  0000000E
  32C:  		ExecWait  $Script_8021C784
  338:  		SetConst  *Var0  00000001
  348:  		SetConst  *Var1  000D0015
  358:  		ExecWait  DoDeath
  364:  		Return
  36C:  	CaseOR  ==  00000017 % 17
  378:  	CaseOR  ==  .Event:Immune % 19
  384:  	CaseOR  ==  .Event:AirLiftFailed % 1F
  390:  		SetConst  *Var0  00000001
  3A0:  		SetConst  *Var1  000D0001
  3B0:  		ExecWait  DoImmune
  3BC:  	EndCaseGroup
  3C4:  	Case  ==  .Event:Death % 20
  3D0:  		ExecWait  $Script_8021BBFC
  3DC:  		SetConst  *Var0  00000001
  3EC:  		SetConst  *Var1  000D0015
  3FC:  		ExecWait  DoNormalHit
  408:  		Wait  10`
  414:  		SetConst  *Var0  00000001
  424:  		SetConst  *Var1  000D0015
  434:  		ExecWait  DoDeath
  440:  		Return
  448:  	Case  ==  .Event:RecoverStatus % 31
  454:  		SetConst  *Var0  00000001
  464:  		SetConst  *Var1  000D0001
  474:  		ExecWait  DoRecover
  480:  	Case  ==  .Event:ScareAway % 39
  48C:  		SetConst  *Var0  00000001
  49C:  		SetConst  *Var1  000D0003
  4AC:  		SetConst  *Var2  000D0015
  4BC:  		ExecWait  DoScareAway
  4C8:  		Return
  4D0:  	Case  ==  .Event:BeginAirLift % 3A
  4DC:  		SetConst  *Var0  00000001
  4EC:  		SetConst  *Var1  000D0003
  4FC:  		ExecWait  DoAirLift
  508:  	Case  ==  .Event:BlowAway % 16
  514:  		SetConst  *Var0  00000001
  524:  		SetConst  *Var1  000D0015
  534:  		ExecWait  DoBlowAway
  540:  		Return
  548:  	Default
  550:  EndSwitch
  558:  Call  EnableIdleScript  ( .Actor:Self 00000001 )
  56C:  Call  UseIdleAnimation  ( .Actor:Self .True )
  580:  Return
  588:  End
}

#new:Script $Script_TakeTurn_80222C7C
{
    0:  Call  UseIdleAnimation  ( .Actor:Self .False )
   14:  Call  EnableIdleScript  ( .Actor:Self 00000000 )
   28:  Wait  10`
   34:  Call  PlaySoundAtActor  ( .Actor:Self .Sound:BooAppear )
   48:  Thread
   50:  	Set   *Var0  000000C8
   60:  	Loop  00000014
   6C:  		Sub   *Var0  0000000A
   7C:  		Call  SetPartAlpha  ( .Actor:Self 00000001 *Var0 )
   94:  		Wait  1`
   A0:  	EndLoop
   A8:  EndThread
   B0:  Wait  10`
   BC:  Call  UseBattleCamPreset    ( 00000001 )
   CC:  Call  SetTargetActor        ( .Actor:Self .Actor:Player )
   E0:  Call  SetGoalToTarget       ( .Actor:Self )
   F0:  Thread
   F8:  	Call  SetAnimation      ( .Actor:Self 00000001 000D0003 )
  110:  	Call  GetStatusFlags    ( .Actor:Self *VarA )
  124:  	If  *VarA  &  ~Flags:StatusFlags:Shrink % 80000
  134:  		Call  AddGoalPos    ( .Actor:Self  4`  -4`  0` )
  150:  	Else
  158:  		Call  AddGoalPos    ( .Actor:Self  10`  -10`  0` )
  174:  	EndIf
  17C:  	Call  FlyToGoal     ( .Actor:Self  30`  0` .Easing:CosInOut )
  198:  	Call  SetAnimation  ( .Actor:Self 00000001 000D0001 )
  1B0:  EndThread
  1B8:  Wait  15`
  1C4:  Call  UseBattleCamPreset    ( 0000000F )
  1D4:  Call  BattleCamTargetActor  ( .Actor:Self )
  1E4:  Call  MoveBattleCamOver     (  30` )
  1F4:  Call  8024ECF8  ( FFFFFFFF 00000001 00000000 )
  20C:  Call  PlaySoundAtActor      ( .Actor:Self .Sound:BooVanish )
  220:  Set   *Var0  00000037
  230:  Loop  00000014
  23C:  	Add   *Var0  0000000A
  24C:  	Call  SetPartAlpha  ( .Actor:Self 00000001 *Var0 )
  264:  	Wait  1`
  270:  EndLoop
  278:  Call  SetPartAlpha      ( .Actor:Self 00000001 000000FF )
  290:  Call  SetAnimation      ( .Actor:Self 00000001 000D0005 )
  2A8:  Wait  10`
  2B4:  Call  SetGoalToTarget   ( .Actor:Self )
  2C4:  Wait  15`
  2D0:  Call  EnemyTestTarget   ( .Actor:Self *Var0 ~Flags:DamageType:0 00000000 00000001 00000010 )
  2F4:  Switch  *Var0
  300:  	CaseOR  ==  .HitResult:Miss % 6
  30C:  	CaseOR  ==  .HitResult:Lucky % 5
  318:  		Set   *VarA  *Var0
  328:  		Call  UseBattleCamPreset    ( 00000002 )
  338:  		Call  SetPartScale  ( .Actor:Self 00000001 *Fixed[1.4] *Fixed[1.4] *Fixed[1.0] )
  358:  		Call  SetAnimation  ( .Actor:Self 00000001 000D0007 )
  370:  		Wait  2`
  37C:  		Call  SetPartScale  ( .Actor:Self 00000001 *Fixed[1.0] *Fixed[1.0] *Fixed[1.0] )
  39C:  		Set   *Var0  00000000
  3AC:  		Loop  00000014
  3B8:  			Add   *Var0  FFFFFFD3
  3C8:  			Call  SetActorYaw   ( .Actor:Self *Var0 )
  3DC:  			Wait  1`
  3E8:  		EndLoop
  3F0:  		Call  SetActorYaw   ( .Actor:Self  0` )
  404:  		If  *VarA  ==  .HitResult:Lucky % 5
  414:  			Call  EnemyTestTarget   ( .Actor:Self *Var0 ~Flags:DamageType:TriggerLucky 00000000 00000000 00000000 )
  438:  		EndIf
  440:  		Call  SetAnimation  ( .Actor:Self 00000001 000D001A )
  458:  		Call  AddActorDecoration    ( .Actor:Self 00000001 00000000 .Decoration:SeeingStars )
  474:  		Wait  30`
  480:  		Call  RemoveActorDecoration ( .Actor:Self 00000001 00000000 )
  498:  		Call  SetAnimation  ( .Actor:Self 00000001 000D0001 )
  4B0:  		Wait  10`
  4BC:  		Call  PlaySoundAtActor      ( .Actor:Self .Sound:BooAppear )
  4D0:  		Thread
  4D8:  			Set   *Var0  000000C8
  4E8:  			Loop  00000014
  4F4:  				Sub   *Var0  0000000A
  504:  				Call  SetPartAlpha  ( .Actor:Self 00000001 *Var0 )
  51C:  				Wait  1`
  528:  			EndLoop
  530:  		EndThread
  538:  		Wait  10`
  544:  		Call  UseBattleCamPreset    ( 00000002 )
  554:  		Call  SetGoalToHome ( .Actor:Self )
  564:  		Call  SetAnimation  ( .Actor:Self 00000001 000D0003 )
  57C:  		Call  FlyToGoal     ( .Actor:Self  30`  0` .Easing:CosInOut )
  598:  		Call  SetAnimation  ( .Actor:Self 00000001 000D0001 )
  5B0:  		Call  PlaySoundAtActor      ( .Actor:Self .Sound:BooVanish )
  5C4:  		Call  YieldTurn ( )
  5D0:  		Set   *Var0  00000037
  5E0:  		Loop  00000014
  5EC:  			Add   *Var0  0000000A
  5FC:  			Call  SetPartAlpha  ( .Actor:Self 00000001 *Var0 )
  614:  			Wait  1`
  620:  		EndLoop
  628:  		Call  SetPartAlpha      ( .Actor:Self 00000001 000000FF )
  640:  		Call  EnableIdleScript  ( .Actor:Self 00000001 )
  654:  		Call  UseIdleAnimation  ( .Actor:Self .True )
  668:  		Return
  670:  	EndCaseGroup
  678:  EndSwitch
  680:  Set   *VarA  00000000
  690:  Call  GetActorVar   ( .Actor:Self 00000001 *Var8 )
  6A8:  Switch  *Var8
  6B4:  	Case  ==  00000000
  6C0:  		Set   *Var8  00000004
  6D0:  	Case  ==  00000001
  6DC:  		Set   *Var8  00000005
  6EC:  	Case  ==  00000002
  6F8:  		Set   *Var8  00000006
  708:  EndSwitch
  710:  Set   *Var7  *Var8
  720:  Loop  *Var7
  72C:  	Call  PlaySoundAtActor  ( .Actor:Self 00002019 )
  740:  	Add   *VarA  00000001
  750:  	Call  SetPartScale      ( .Actor:Self 00000001 *Fixed[1.4] *Fixed[1.4] *Fixed[1.0] )
  770:  	If  *Flag[00]  ==  .False
  780:  		Call  SetAnimation  ( .Actor:Self 00000001 000D0007 )
  798:  		Set   *Flag[00]  .True
  7A8:  		If  *VarA  ==  *Var8
  7B8:  			Call  80269EAC  ( 0000000C )
  7C8:  		Else
  7D0:  			Call  80269EAC  ( 0000000A )
  7E0:  		EndIf
  7E8:  	Else
  7F0:  		Call  SetAnimation  ( .Actor:Self 00000001 000D0008 )
  808:  		Set   *Flag[00]  .False
  818:  		If  *VarA  ==  *Var8
  828:  			Call  80269EAC  ( 0000000D )
  838:  		Else
  840:  			Call  80269EAC  ( 0000000B )
  850:  		EndIf
  858:  	EndIf
  860:  	Wait  2`
  86C:  	Call  SetPartScale  ( .Actor:Self 00000001 *Fixed[1.0] *Fixed[1.0] *Fixed[1.0] )
  88C:  	Thread
  894:  		Call  ShakeCam  ( .Cam:Battle 00000000  2` *Fixed[0.5] )
  8B0:  		Call  ShakeCam  ( .Cam:Battle 00000000  2` *Fixed[1.5] )
  8CC:  		Call  ShakeCam  ( .Cam:Battle 00000000  1` *Fixed[0.5] )
  8E8:  		Call  ShakeCam  ( .Cam:Battle 00000000  1` *Fixed[0.2] )
  904:  	EndThread
  90C:  	Call  GetActorVar   ( .Actor:Self 00000001 *Var9 )
  924:  	Switch  *Var9
  930:  		Case  ==  00000000
  93C:  			Wait  2`
  948:  			Call  EnemyDamageTarget ( .Actor:Self *Var0 ~Flags:DamageType:0 00000000 00000000 00000001 00000010 )
  970:  		Case  ==  00000001
  97C:  			Wait  2`
  988:  			Call  EnemyDamageTarget ( .Actor:Self *Var0 ~Flags:DamageType:0 00000000 00000000 00000001 00000010 )
  9B0:  		Case  ==  00000002
  9BC:  			Wait  2`
  9C8:  			Call  EnemyDamageTarget ( .Actor:Self *Var0 ~Flags:DamageType:0 00000000 00000000 00000001 00000010 )
  9F0:  	EndSwitch
  9F8:  	Wait  8`
  A04:  	Call  SetAnimation  ( .Actor:Self 00000001 000D0001 )
  A1C:  	Call  GetActorHP    ( .Actor:Player *Var1 )
  A30:  	If  *Var1  ==  00000000
  A40:  		BreakLoop
  A48:  	EndIf
  A50:  EndLoop
  A58:  Switch  *Var0
  A64:  	CaseOR  ==  .HitResult:Hit % 0
  A70:  	CaseOR  ==  .HitResult:QuakeImmune % 2
  A7C:  		Wait  10`
  A88:  		Call  PlaySoundAtActor  ( .Actor:Self .Sound:BooAppear )
  A9C:  		Thread
  AA4:  			Set   *Var0  000000C8
  AB4:  			Loop  00000014
  AC0:  				Sub   *Var0  0000000A
  AD0:  				Call  SetPartAlpha  ( .Actor:Self 00000001 *Var0 )
  AE8:  				Wait  1`
  AF4:  			EndLoop
  AFC:  		EndThread
  B04:  		Wait  10`
  B10:  		Call  UseBattleCamPreset    ( 00000002 )
  B20:  		Call  SetGoalToHome ( .Actor:Self )
  B30:  		Call  SetAnimation  ( .Actor:Self 00000001 000D0003 )
  B48:  		Call  FlyToGoal     ( .Actor:Self  30`  0` .Easing:CosInOut )
  B64:  		Call  SetAnimation  ( .Actor:Self 00000001 000D0001 )
  B7C:  		Call  PlaySoundAtActor      ( .Actor:Self .Sound:BooVanish )
  B90:  		Call  YieldTurn ( )
  B9C:  		Set   *Var0  00000037
  BAC:  		Loop  00000014
  BB8:  			Add   *Var0  0000000A
  BC8:  			Call  SetPartAlpha  ( .Actor:Self 00000001 *Var0 )
  BE0:  			Wait  1`
  BEC:  		EndLoop
  BF4:  		Call  SetPartAlpha  ( .Actor:Self 00000001 000000FF )
  C0C:  	EndCaseGroup
  C14:  EndSwitch
  C1C:  Call  EnableIdleScript  ( .Actor:Self 00000001 )
  C30:  Call  UseIdleAnimation  ( .Actor:Self .True )
  C44:  Return
  C4C:  End
}

#new:SpecialFormation $SpecialFormation_802238D0
{
	$GhostBow $Vector3D_8021CAE8 00000000 00000000 00000000 00000000 00000000
}

#new:IdleAnimations $IdleAnimations_802238EC
{
	.Status:Normal    000E0001
	.Status:Stone     000E0000
	.Status:Sleep     000E0000
	.Status:Poison    000E0001
	.Status:Stop      000E0000
	.Status:Static    000E0001
	.Status:Paralyze  000E0000
	.Status:Dizzy     000E000F
	.Status:Fear      000E000F
	.Status:End
}

#new:DefenseTable $DefenseTable_80223938
{
	.Element:Normal 00000000
	.Element:Shock  00000063
	.Element:End
}

#new:StatusTable $StatusTable_8022394C
{
	.Status:Normal      0`
	.Status:Default     0`
	.Status:Sleep      60`
	.Status:Poison      0`
	.Status:Frozen      0`
	.Status:Dizzy      75`
	.Status:Fear        0`
	.Status:Static      0`
	.Status:Paralyze   75`
	.Status:Shrink     75`
	.Status:Stop       80`
	.Status:DefaultTurnMod    0`
	.Status:SleepTurnMod     -1`
	.Status:PoisonTurnMod     0`
	.Status:FrozenTurnMod     0`
	.Status:DizzyTurnMod     -1`
	.Status:FearTurnMod       0`
	.Status:StaticTurnMod     0`
	.Status:ParalyzeTurnMod   0`
	.Status:ShrinkTurnMod     0`
	.Status:StopTurnMod      -1`
	.Status:End
}

#new:PartsTable $PartsTable_802239F8
{
	00020000 01000000 FF1400FF $IdleAnimations_802238EC $DefenseTable_80223938 00000080 00000000 00F80000 00000000
	80800001 02003200 FFE200FF 00000000 $DefenseTable_80223938 00000080 00000000 00F80000 00000000
}

#new:Actor $GhostWatt
{
	% stats
	[Index]        41b
	[Level]        23`b
	[MaxHP]        15`b
	[Coins]         2`b
	[Flags]       00000200
	[StatusTable] $StatusTable_8022394C
	% ai
	[PartsCount]    2`s
	[PartsTable]  $PartsTable_802239F8
	[Script]      $Script_Init_80223A68
	% move effectiveness
	[Escape]       50`b
	[Item]         50`b
	[AirLift]      80`b
	[Hurricane]    70`b % Bow's "Spook" as well
	[UpAndAway]    95`b
	[PowerBounce]  90`b
	[SpinSmash]     0`b % weight (0-4)
	% ui positions
	[Size]         34`b  28`b % width height
	[HealthBar]     0`b   0`b % dx dy
	[StatusTurn]  -10`b  20`b % dx dy
	[StatusIcon]   10`b  20`b % dx dy
}

#new:Script $Script_Init_80223A68
{
    0:  Call  BindTakeTurn      ( .Actor:Self $Script_TakeTurn_80223F50 )
   14:  Call  BindIdle  ( .Actor:Self $Script_Idle_80223AB4 )
   28:  Call  BindHandleEvent   ( .Actor:Self $Script_HandleEvent_80223ADC )
   3C:  Return
   44:  End
}

#new:Script $Script_Idle_80223AB4
{
    0:  SetPriority  00000063
    C:  Call  $Function_80218E88 ( )
   18:  Return
   20:  End
}

#new:Script $Script_HandleEvent_80223ADC
{
    0:  Call  UseIdleAnimation      ( .Actor:Self .False )
   14:  Call  $Function_80219358    ( 00000000 )
   24:  Call  $Function_802193A4    ( 00000001 )
   34:  Call  $Function_802193F0    ( 00000000 )
   44:  Call  GetLastEvent  ( .Actor:Self *Var0 )
   58:  Switch  *Var0
   64:  	CaseOR  ==  .Event:HitCombo % 9
   70:  	CaseOR  ==  .Event:Hit % A
   7C:  		SetConst  *Var0  00000001
   8C:  		SetConst  *Var1  000E000C
   9C:  		ExecWait  DoNormalHit
   A8:  	EndCaseGroup
   B0:  	Case  ==  .Event:BurnHit % E
   BC:  		SetConst  *Var0  00000001
   CC:  		SetConst  *Var1  000E000D
   DC:  		SetConst  *Var2  000E000E
   EC:  		ExecWait  DoBurnHit
   F8:  	Case  ==  .Event:BurnDeath % 24
  104:  		SetConst  *Var0  00000001
  114:  		SetConst  *Var1  000E000D
  124:  		SetConst  *Var2  000E000E
  134:  		ExecWait  DoBurnHit
  140:  		Call  $Function_80219304 ( )
  14C:  		ExecWait  $Script_8021BBFC
  158:  		SetConst  *Var0  00000001
  168:  		SetConst  *Var1  000E000E
  178:  		ExecWait  DoDeath
  184:  		Return
  18C:  	Case  ==  .Event:SpinSmashHit % B
  198:  		SetConst  *Var0  00000001
  1A8:  		SetConst  *Var1  000E000C
  1B8:  		ExecWait  DoSpinSmashHit
  1C4:  	Case  ==  .Event:SpinSmashDeath % 21
  1D0:  		Call  $Function_80219304 ( )
  1DC:  		ExecWait  $Script_8021BBFC
  1E8:  		SetConst  *Var0  00000001
  1F8:  		SetConst  *Var1  000E000C
  208:  		ExecWait  DoSpinSmashHit
  214:  		SetConst  *Var0  00000001
  224:  		SetConst  *Var1  000E000C
  234:  		ExecWait  DoDeath
  240:  		Return
  248:  	CaseOR  ==  00000017 % 17
  254:  	CaseOR  ==  .Event:Immune % 19
  260:  	CaseOR  ==  .Event:AirLiftFailed % 1F
  26C:  		SetConst  *Var0  00000001
  27C:  		SetConst  *Var1  000E0001
  28C:  		ExecWait  DoImmune
  298:  	EndCaseGroup
  2A0:  	Case  ==  .Event:Death % 20
  2AC:  		Call  $Function_80219304 ( )
  2B8:  		ExecWait  $Script_8021BBFC
  2C4:  		SetConst  *Var0  00000001
  2D4:  		SetConst  *Var1  000E000C
  2E4:  		ExecWait  DoNormalHit
  2F0:  		Wait  10`
  2FC:  		SetConst  *Var0  00000001
  30C:  		SetConst  *Var1  000E000C
  31C:  		ExecWait  DoDeath
  328:  		Return
  330:  	Case  ==  .Event:RecoverStatus % 31
  33C:  		SetConst  *Var0  00000001
  34C:  		SetConst  *Var1  000E0001
  35C:  		ExecWait  DoRecover
  368:  	Case  ==  .Event:ScareAway % 39
  374:  		SetConst  *Var0  00000001
  384:  		SetConst  *Var1  000E0003
  394:  		SetConst  *Var2  000E000C
  3A4:  		ExecWait  DoScareAway
  3B0:  		Return
  3B8:  	Case  ==  .Event:BeginAirLift % 3A
  3C4:  		SetConst  *Var0  00000001
  3D4:  		SetConst  *Var1  000E0003
  3E4:  		ExecWait  DoAirLift
  3F0:  	Case  ==  .Event:BlowAway % 16
  3FC:  		SetConst  *Var0  00000001
  40C:  		SetConst  *Var1  000E000C
  41C:  		ExecWait  DoBlowAway
  428:  		Return
  430:  	Default
  438:  EndSwitch
  440:  Call  $Function_80219358    ( 00000001 )
  450:  Call  UseIdleAnimation      ( .Actor:Self .True )
  464:  Return
  46C:  End
}

#new:Script $Script_TakeTurn_80223F50
{
    0:  Call  UseIdleAnimation  ( .Actor:Self .False )
   14:  Call  UseBattleCamPreset    ( 00000013 )
   24:  Call  GetActorPos       ( .Actor:Player *Var0 *Var1 *Var2 )
   40:  Call  SetBattleCamTarget    ( *Var0 *Var1 *Var2 )
   58:  Call  SetBattleCamZoom  (  350` )
   68:  Call  SetBattleCamOffsetZ   (  40` )
   78:  Call  MoveBattleCamOver (  80` )
   88:  Call  8024ECF8  ( FFFFFFFF 00000001 00000000 )
   A0:  Call  SetTargetActor    ( .Actor:Self .Actor:Player )
   B4:  Call  SetGoalToTarget   ( .Actor:Self )
   C4:  Call  SetAnimation      ( .Actor:Self 00000001 000E0003 )
   DC:  Call  $Function_802193F0    ( 00000001 )
   EC:  Call  AddGoalPos        ( .Actor:Self  15`  -10`  5` )
  108:  Call  FlyToGoal ( .Actor:Self  30`  0` .Easing:CosInOut )
  124:  Call  SetAnimation      ( .Actor:Self 00000001 000E0001 )
  13C:  Call  $Function_802193F0    ( 00000000 )
  14C:  Wait  5`
  158:  Call  $Function_80219358    ( 00000000 )
  168:  Call  AddGoalPos        ( .Actor:Self  25`  20`  0` )
  184:  Call  FlyToGoal ( .Actor:Self  15`  -20` .Easing:CosInOut )
  1A0:  Call  SetAnimation      ( .Actor:Self 00000001 000E0005 )
  1B8:  Call  SetGoalToTarget   ( .Actor:Self )
  1C8:  Call  FlyToGoal ( .Actor:Self  5`  0` .Easing:CosInOut )
  1E4:  Call  EnemyTestTarget   ( .Actor:Self *Var0 ~Flags:DamageType:0 00000000 00000001 00000010 )
  208:  Switch  *Var0
  214:  	CaseOR  ==  .HitResult:Miss % 6
  220:  	CaseOR  ==  .HitResult:Lucky % 5
  22C:  		Set   *VarA  *Var0
  23C:  		Thread
  244:  			Wait  5`
  250:  			Call  SetAnimation  ( .Actor:Self 00000001 000E0001 )
  268:  		EndThread
  270:  		Call  SetGoalToTarget   ( .Actor:Self )
  280:  		Call  AddGoalPos        ( .Actor:Self  -40`  10`  0` )
  29C:  		Call  FlyToGoal ( .Actor:Self  10`  -20` .Easing:QuadraticOut )
  2B8:  		If  *VarA  ==  .HitResult:Lucky % 5
  2C8:  			Call  EnemyTestTarget   ( .Actor:Self *Var0 ~Flags:DamageType:TriggerLucky 00000000 00000000 00000000 )
  2EC:  		EndIf
  2F4:  		Call  $Function_802193A4    ( 00000001 )
  304:  		Call  $Function_80219358    ( 00000001 )
  314:  		Wait  20`
  320:  		Call  UseBattleCamPreset    ( 00000002 )
  330:  		Call  YieldTurn ( )
  33C:  		Call  SetGoalToHome     ( .Actor:Self )
  34C:  		Call  SetAnimation      ( .Actor:Self 00000001 000E0003 )
  364:  		Call  FlyToGoal ( .Actor:Self  30`  0` .Easing:CosInOut )
  380:  		Call  SetAnimation      ( .Actor:Self 00000001 000E0001 )
  398:  		Call  UseIdleAnimation  ( .Actor:Self .True )
  3AC:  		Return
  3B4:  	EndCaseGroup
  3BC:  EndSwitch
  3C4:  Call  $Function_802193A4    ( 00000000 )
  3D4:  Set   *VarA  00000028
  3E4:  Call  AddBattleCamZoom  (  -75` )
  3F4:  Call  MoveBattleCamOver ( *VarA )
  404:  Call  8024ECF8  ( 00000000 00000000 00000001 )
  41C:  Call  PlaySoundAtActor  ( .Actor:Self 00000289 )
  430:  Call  GetStatusFlags    ( .Actor:Self *Var0 )
  444:  If  *Var0  &  ~Flags:StatusFlags:Shrink % 80000
  454:  	Call  GetActorPos   ( .Actor:Self *Var0 *Var1 *Var2 )
  470:  	Add   *Var1  00000004
  480:  	Call  PlayEffect    ( ~FX:RadialFlowIn:ElectricalWaves *Var0 *Var1 *Var2 *Fixed[0.52] *VarA 00000000 00000000 00000000 00000000 00000000 00000000 00000000 )
  4C4:  Else
  4CC:  	Call  GetActorPos   ( .Actor:Self *Var0 *Var1 *Var2 )
  4E8:  	Add   *Var1  0000000C
  4F8:  	Call  PlayEffect    ( ~FX:RadialFlowIn:ElectricalWaves *Var0 *Var1 *Var2 *Fixed[1.3] *VarA 00000000 00000000 00000000 00000000 00000000 00000000 00000000 )
  53C:  EndIf
  544:  Call  $Function_8021943C ( )
  550:  Set   *Var9  00000000
  560:  Call  SetAnimation  ( .Actor:Self 00000001 000E0006 )
  578:  Loop  *VarA
  584:  	Add   *Var9  00000003
  594:  	If  *Var9  >  000000C8
  5A4:  		Set   *Var9  000000C8
  5B4:  	EndIf
  5BC:  	Call  $Function_80219480    ( *Var9 )
  5CC:  	Wait  1`
  5D8:  EndLoop
  5E0:  Call  SetAnimation      ( .Actor:Self 00000001 000E0001 )
  5F8:  Call  8026EA7C  ( FFFFFF81 00000001 00000009 )
  610:  Call  AddBattleCamZoom  (  75` )
  620:  Call  MoveBattleCamOver (  5` )
  630:  Thread
  638:  	Wait  2`
  644:  	Call  $Function_80219480    ( 00000000 )
  654:  EndThread
  65C:  Call  GetActorVar   ( .Actor:Self 00000001 *Var9 )
  674:  Switch  *Var9
  680:  	Case  ==  00000000
  68C:  		Wait  2`
  698:  		Call  EnemyDamageTarget ( .Actor:Self *Var0 ~Flags:DamageType:IgnoreDefense|Electric 0000FFFF 00000000 00000003 00000020 )
  6C0:  	Case  ==  00000001
  6CC:  		Wait  2`
  6D8:  		Call  EnemyDamageTarget ( .Actor:Self *Var0 ~Flags:DamageType:IgnoreDefense|Electric 0000FFFF 00000000 00000004 00000020 )
  700:  	Case  ==  00000002
  70C:  		Wait  2`
  718:  		Call  EnemyDamageTarget ( .Actor:Self *Var0 ~Flags:DamageType:IgnoreDefense|Electric 0000FFFF 00000000 00000005 00000020 )
  740:  EndSwitch
  748:  Switch  *Var0
  754:  	CaseOR  ==  .HitResult:Hit % 0
  760:  	CaseOR  ==  .HitResult:QuakeImmune % 2
  76C:  		Call  UseBattleCamPreset    ( 00000002 )
  77C:  		Call  $Function_802193A4    ( 00000001 )
  78C:  		Call  $Function_80219358    ( 00000001 )
  79C:  		Call  AddGoalPos    ( .Actor:Self  25`  10`  0` )
  7B8:  		Call  FlyToGoal     ( .Actor:Self  15`  -10` .Easing:CosInOut )
  7D4:  		Wait  15`
  7E0:  		Call  YieldTurn ( )
  7EC:  		Call  SetGoalToHome ( .Actor:Self )
  7FC:  		Call  SetAnimation  ( .Actor:Self 00000001 000E0003 )
  814:  		Call  FlyToGoal     ( .Actor:Self  30`  0` .Easing:CosInOut )
  830:  		Call  SetAnimation  ( .Actor:Self 00000001 000E0001 )
  848:  	EndCaseGroup
  850:  EndSwitch
  858:  Call  UseIdleAnimation  ( .Actor:Self .True )
  86C:  Return
  874:  End
}

#new:SpecialFormation $SpecialFormation_802247CC
{
	$GhostWatt $Vector3D_8021CAE8 00000000 00000000 00000000 00000000 00000000
}

#new:IdleAnimations $IdleAnimations_802247E8
{
	.Status:Normal    000F0001
	.Status:Stone     000F0000
	.Status:Sleep     000F0000
	.Status:Poison    000F0001
	.Status:Stop      000F0000
	.Status:Static    000F0001
	.Status:Paralyze  000F0000
	.Status:Dizzy     000F0010
	.Status:Fear      000F0010
	.Status:End
}

#new:DefenseTable $DefenseTable_80224834
{
	.Element:Normal 00000000
	.Element:End
}

#new:StatusTable $StatusTable_80224840
{
	.Status:Normal      0`
	.Status:Default     0`
	.Status:Sleep      60`
	.Status:Poison      0`
	.Status:Frozen      0`
	.Status:Dizzy      75`
	.Status:Fear        0`
	.Status:Static      0`
	.Status:Paralyze   75`
	.Status:Shrink     75`
	.Status:Stop       80`
	.Status:DefaultTurnMod    0`
	.Status:SleepTurnMod     -1`
	.Status:PoisonTurnMod     0`
	.Status:FrozenTurnMod     0`
	.Status:DizzyTurnMod     -1`
	.Status:FearTurnMod       0`
	.Status:StaticTurnMod     0`
	.Status:ParalyzeTurnMod   0`
	.Status:ShrinkTurnMod     0`
	.Status:StopTurnMod      -1`
	.Status:End
}

#new:PartsTable $PartsTable_802248EC
{
	00800000 01000000 001800FF $IdleAnimations_802247E8 $DefenseTable_80224834 00000000 00000000 00F40000 00000000
}

#new:Actor $GhostSushie
{
	% stats
	[Index]        42b
	[Level]        23`b
	[MaxHP]        15`b
	[Coins]         2`b
	[Flags]       00000000
	[StatusTable] $StatusTable_80224840
	% ai
	[PartsCount]    1`s
	[PartsTable]  $PartsTable_802248EC
	[Script]      $Script_Init_80224938
	% move effectiveness
	[Escape]       50`b
	[Item]         50`b
	[AirLift]      80`b
	[Hurricane]    70`b % Bow's "Spook" as well
	[UpAndAway]    95`b
	[PowerBounce]  90`b
	[SpinSmash]     0`b % weight (0-4)
	% ui positions
	[Size]         37`b  26`b % width height
	[HealthBar]     0`b   0`b % dx dy
	[StatusTurn]  -10`b  20`b % dx dy
	[StatusIcon]   10`b  20`b % dx dy
}

#new:Script $Script_Init_80224938
{
    0:  Call  BindTakeTurn      ( .Actor:Self $Script_TakeTurn_80224F04 )
   14:  Call  BindIdle  ( .Actor:Self $Script_Idle_80224984 )
   28:  Call  BindHandleEvent   ( .Actor:Self $Script_HandleEvent_80224994 )
   3C:  Return
   44:  End
}

#new:Script $Script_Idle_80224984
{
    0:  Return
    8:  End
}

#new:Script $Script_HandleEvent_80224994
{
    0:  Call  UseIdleAnimation  ( .Actor:Self .False )
   14:  Call  EnableIdleScript  ( .Actor:Self 00000000 )
   28:  Call  GetLastEvent      ( .Actor:Self *Var0 )
   3C:  Switch  *Var0
   48:  	CaseOR  ==  .Event:HitCombo % 9
   54:  	CaseOR  ==  .Event:Hit % A
   60:  		Call  GetLastElement    ( *Var1 )
   70:  		If  *Var1  &  00000020
   80:  			SetConst  *Var0  00000001
   90:  			SetConst  *Var1  000F000D
   A0:  			ExecWait  $Script_8021BC34
   AC:  			Return
   B4:  		Else
   BC:  			SetConst  *Var0  00000001
   CC:  			SetConst  *Var1  000F000D
   DC:  			ExecWait  DoNormalHit
   E8:  		EndIf
   F0:  	EndCaseGroup
   F8:  	Case  ==  .Event:BurnHit % E
  104:  		SetConst  *Var0  00000001
  114:  		SetConst  *Var1  000F000E
  124:  		SetConst  *Var2  000F000F
  134:  		ExecWait  DoBurnHit
  140:  	Case  ==  .Event:BurnDeath % 24
  14C:  		SetConst  *Var0  00000001
  15C:  		SetConst  *Var1  000F000E
  16C:  		SetConst  *Var2  000F000F
  17C:  		ExecWait  DoBurnHit
  188:  		ExecWait  $Script_8021BBFC
  194:  		Wait  10`
  1A0:  		SetConst  *Var0  00000001
  1B0:  		SetConst  *Var1  000F000F
  1C0:  		ExecWait  DoDeath
  1CC:  		Return
  1D4:  	Case  ==  .Event:SpinSmashHit % B
  1E0:  		SetConst  *Var0  00000001
  1F0:  		SetConst  *Var1  000F000D
  200:  		ExecWait  DoSpinSmashHit
  20C:  	Case  ==  .Event:SpinSmashDeath % 21
  218:  		ExecWait  $Script_8021BBFC
  224:  		SetConst  *Var0  00000001
  234:  		SetConst  *Var1  000F000D
  244:  		ExecWait  DoSpinSmashHit
  250:  		SetConst  *Var0  00000001
  260:  		SetConst  *Var1  000F000D
  270:  		ExecWait  DoDeath
  27C:  		Return
  284:  	Case  ==  .Event:ShockHit % 2F
  290:  		SetConst  *Var0  00000001
  2A0:  		SetConst  *Var1  000F000D
  2B0:  		ExecWait  $Script_8021C0F8
  2BC:  		Return
  2C4:  	Case  ==  .Event:ShockDeath % 26
  2D0:  		ExecWait  $Script_8021BBFC
  2DC:  		SetConst  *Var0  00000001
  2EC:  		SetConst  *Var1  000F000D
  2FC:  		Set   *Var2  00000014
  30C:  		ExecWait  $Script_8021C784
  318:  		SetConst  *Var0  00000001
  328:  		SetConst  *Var1  000F000D
  338:  		ExecWait  DoDeath
  344:  		Return
  34C:  	CaseOR  ==  00000017 % 17
  358:  	CaseOR  ==  .Event:Immune % 19
  364:  	CaseOR  ==  .Event:AirLiftFailed % 1F
  370:  		SetConst  *Var0  00000001
  380:  		SetConst  *Var1  000F0001
  390:  		ExecWait  DoImmune
  39C:  	EndCaseGroup
  3A4:  	Case  ==  .Event:Death % 20
  3B0:  		ExecWait  $Script_8021BBFC
  3BC:  		SetConst  *Var0  00000001
  3CC:  		SetConst  *Var1  000F000D
  3DC:  		ExecWait  DoNormalHit
  3E8:  		Wait  10`
  3F4:  		SetConst  *Var0  00000001
  404:  		SetConst  *Var1  000F000D
  414:  		ExecWait  DoDeath
  420:  		Return
  428:  	Case  ==  .Event:RecoverStatus % 31
  434:  		SetConst  *Var0  00000001
  444:  		SetConst  *Var1  000F0001
  454:  		ExecWait  DoRecover
  460:  	Case  ==  .Event:ScareAway % 39
  46C:  		SetConst  *Var0  00000001
  47C:  		SetConst  *Var1  000F0003
  48C:  		SetConst  *Var2  000F000D
  49C:  		ExecWait  DoScareAway
  4A8:  		Return
  4B0:  	Case  ==  .Event:BeginAirLift % 3A
  4BC:  		SetConst  *Var0  00000001
  4CC:  		SetConst  *Var1  000F0003
  4DC:  		ExecWait  DoAirLift
  4E8:  	Case  ==  .Event:BlowAway % 16
  4F4:  		SetConst  *Var0  00000001
  504:  		SetConst  *Var1  000F000D
  514:  		ExecWait  DoBlowAway
  520:  		Return
  528:  	Default
  530:  EndSwitch
  538:  Call  EnableIdleScript  ( .Actor:Self 00000001 )
  54C:  Call  UseIdleAnimation  ( .Actor:Self .True )
  560:  Return
  568:  End
}

#new:Script $Script_TakeTurn_80224F04
{
    0:  Call  UseIdleAnimation  ( .Actor:Self .False )
   14:  Call  EnableIdleScript  ( .Actor:Self 00000000 )
   28:  Call  UseBattleCamPreset    ( 0000003F )
   38:  Call  BattleCamTargetActor  ( .Actor:Self )
   48:  Call  8024ECF8  ( FFFFFFFF 00000001 00000000 )
   60:  Call  SetTargetActor    ( .Actor:Self .Actor:Player )
   74:  Call  SetGoalToTarget   ( .Actor:Self )
   84:  Call  AddGoalPos        ( .Actor:Self  70`  0`  0` )
   A0:  Call  GetActorPos       ( .Actor:Self *Var0 *Var1 *Var2 )
   BC:  Call  GetGoalPos        ( .Actor:Self *Var3 *Var4 *Var5 )
   D8:  Sub   *Var3  *Var0
   E8:  Div   *Var3  *Fixed[3.0]
   F8:  Set   *VarA  *Var3
  108:  If  *VarA  <  00000000
  118:  	Mul   *VarA  FFFFFFFF
  128:  EndIf
  130:  Call  MoveBattleCamOver ( *VarA )
  140:  Call  SetAnimation      ( .Actor:Self 00000001 000F0003 )
  158:  Call  RunToGoal ( .Actor:Self *VarA .False )
  170:  Call  SetAnimation      ( .Actor:Self 00000001 000F0001 )
  188:  Wait  10`
  194:  Call  UseBattleCamPreset    ( 00000008 )
  1A4:  Call  BattleCamTargetActor  ( .Actor:Self )
  1B4:  Call  AddBattleCamZoom  (  -50` )
  1C4:  Call  MoveBattleCamOver (  30` )
  1D4:  Call  8024ECF8  ( 00000001 00000001 00000001 )
  1EC:  Call  SetAnimation      ( .Actor:Self 00000001 000F0004 )
  204:  Wait  15`
  210:  Call  SetAnimation      ( .Actor:Self 00000001 000F0008 )
  228:  Wait  15`
  234:  Call  EnemyTestTarget   ( .Actor:Self *Var0 ~Flags:DamageType:0 00000000 00000001 00000010 )
  258:  Switch  *Var0
  264:  	CaseOR  ==  .HitResult:Miss % 6
  270:  	CaseOR  ==  .HitResult:Lucky % 5
  27C:  		Set   *VarA  *Var0
  28C:  		Call  UseBattleCamPreset    ( 00000002 )
  29C:  		Call  MoveBattleCamOver     (  20` )
  2AC:  		Call  SetAnimation  ( .Actor:Self 00000001 000F0005 )
  2C4:  		Thread
  2CC:  			Call  SetActorRotationOffset    ( .Actor:Self 00000000 0000000C 00000000 )
  2E8:  			Set   *Var0  00000000
  2F8:  			Loop  0000000A
  304:  				Add   *Var0  00000024
  314:  				Call  SetActorRotation  ( .Actor:Self 00000000 00000000 *Var0 )
  330:  				Wait  1`
  33C:  			EndLoop
  344:  			Call  SetActorRotation  ( .Actor:Self 00000000 00000000 00000014 )
  360:  		EndThread
  368:  		Thread
  370:  			Call  GetActorVar   ( .Actor:Self 00000001 *Var0 )
  388:  			Switch  *Var0
  394:  				Case  ==  00000000
  3A0:  					Wait  13`
  3AC:  					Call  SetPartScale  ( .Actor:Self 00000001 *Fixed[1.0] *Fixed[1.0] *Fixed[1.0] )
  3CC:  					Wait  1`
  3D8:  					Call  SetPartScale  ( .Actor:Self 00000001 *Fixed[1.0] *Fixed[1.0] *Fixed[1.0] )
  3F8:  					Wait  1`
  404:  					Call  SetPartScale  ( .Actor:Self 00000001 *Fixed[1.0] *Fixed[1.0] *Fixed[1.0] )
  424:  					Wait  1`
  430:  					Call  SetPartScale  ( .Actor:Self 00000001 *Fixed[1.0] *Fixed[1.0] *Fixed[1.0] )
  450:  					Wait  1`
  45C:  					Call  SetPartScale  ( .Actor:Self 00000001 *Fixed[1.0] *Fixed[1.0] *Fixed[1.0] )
  47C:  				Case  ==  00000001
  488:  					Wait  13`
  494:  					Call  SetPartScale  ( .Actor:Self 00000001 *Fixed[1.05] *Fixed[1.05] *Fixed[1.05] )
  4B4:  					Wait  1`
  4C0:  					Call  SetPartScale  ( .Actor:Self 00000001 *Fixed[1.1] *Fixed[1.1] *Fixed[1.1] )
  4E0:  					Wait  1`
  4EC:  					Call  SetPartScale  ( .Actor:Self 00000001 *Fixed[1.15] *Fixed[1.15] *Fixed[1.15] )
  50C:  					Wait  1`
  518:  					Call  SetPartScale  ( .Actor:Self 00000001 *Fixed[1.2] *Fixed[1.2] *Fixed[1.2] )
  538:  					Wait  1`
  544:  					Call  SetPartScale  ( .Actor:Self 00000001 *Fixed[1.25] *Fixed[1.25] *Fixed[1.25] )
  564:  				Case  ==  00000002
  570:  					Wait  13`
  57C:  					Call  SetPartScale  ( .Actor:Self 00000001 *Fixed[1.1] *Fixed[1.1] *Fixed[1.1] )
  59C:  					Wait  1`
  5A8:  					Call  SetPartScale  ( .Actor:Self 00000001 *Fixed[1.2] *Fixed[1.2] *Fixed[1.2] )
  5C8:  					Wait  1`
  5D4:  					Call  SetPartScale  ( .Actor:Self 00000001 *Fixed[1.3] *Fixed[1.3] *Fixed[1.3] )
  5F4:  					Wait  1`
  600:  					Call  SetPartScale  ( .Actor:Self 00000001 *Fixed[1.4] *Fixed[1.4] *Fixed[1.4] )
  620:  					Wait  1`
  62C:  					Call  SetPartScale  ( .Actor:Self 00000001 *Fixed[1.5] *Fixed[1.5] *Fixed[1.5] )
  64C:  			EndSwitch
  654:  		EndThread
  65C:  		Call  SetActorSounds    ( .Actor:Self .ActorSound:Jump 00000000 00000000 )
  678:  		Call  PlaySoundAtActor  ( .Actor:Self 00002034 )
  68C:  		Call  SetGoalToTarget   ( .Actor:Self )
  69C:  		Thread
  6A4:  			Call  SetAnimation  ( .Actor:Self 00000001 000F0005 )
  6BC:  			Wait  10`
  6C8:  			Call  SetAnimation  ( .Actor:Self 00000001 000F0006 )
  6E0:  		EndThread
  6E8:  		Call  SetActorJumpGravity       ( .Actor:Self *Fixed[1.0] )
  6FC:  		Call  JumpToGoal    ( .Actor:Self  20` .False .True .False )
  71C:  		Call  SetAnimation  ( .Actor:Self 00000001 000F0007 )
  734:  		Call  SetActorRotation  ( .Actor:Self 00000000 00000000 00000000 )
  750:  		Call  SetActorRotationOffset    ( .Actor:Self 00000000 00000000 00000000 )
  76C:  		Call  SetPartScale  ( .Actor:Self 00000001 *Fixed[1.0] *Fixed[1.0] *Fixed[1.0] )
  78C:  		Call  LandJump      ( .Actor:Self )
  79C:  		Call  PlaySoundAtActor  ( .Actor:Self 0000029A )
  7B0:  		Call  GetActorPos   ( .Actor:Self *Var0 *Var1 *Var2 )
  7CC:  		Call  SetGoalPos    ( .Actor:Self *Var0 *Var1 *Var2 )
  7E8:  		Call  AddGoalPos    ( .Actor:Self  -15`  0`  0` )
  804:  		Call  JumpToGoal    ( .Actor:Self  20` .False .True .False )
  824:  		Call  PlaySoundAtActor  ( .Actor:Self 0000029A )
  838:  		Call  AddGoalPos    ( .Actor:Self  -10`  0`  0` )
  854:  		Call  JumpToGoal    ( .Actor:Self  10` .False .True .False )
  874:  		Call  PlaySoundAtActor  ( .Actor:Self 0000029A )
  888:  		If  *VarA  ==  .HitResult:Lucky % 5
  898:  			Call  EnemyTestTarget   ( .Actor:Self *Var0 ~Flags:DamageType:TriggerLucky 00000000 00000000 00000000 )
  8BC:  		EndIf
  8C4:  		Wait  10`
  8D0:  		Call  UseBattleCamPreset    ( 00000002 )
  8E0:  		Call  YieldTurn ( )
  8EC:  		Call  SetAnimation      ( .Actor:Self 00000001 000F0003 )
  904:  		Call  SetGoalToHome     ( .Actor:Self )
  914:  		Call  SetActorSpeed     ( .Actor:Self *Fixed[4.0] )
  928:  		Call  RunToGoal ( .Actor:Self  0` .False )
  940:  		Call  EnableIdleScript  ( .Actor:Self 00000001 )
  954:  		Call  UseIdleAnimation  ( .Actor:Self .True )
  968:  		Return
  970:  	EndCaseGroup
  978:  EndSwitch
  980:  Call  UseBattleCamPreset    ( 00000002 )
  990:  Call  MoveBattleCamOver     (  10` )
  9A0:  Call  SetAnimation  ( .Actor:Self 00000001 000F0005 )
  9B8:  Thread
  9C0:  	Call  SetActorRotationOffset    ( .Actor:Self 00000000 0000000C 00000000 )
  9DC:  	Set   *Var0  00000000
  9EC:  	Loop  0000000A
  9F8:  		Add   *Var0  00000024
  A08:  		Call  SetActorRotation  ( .Actor:Self 00000000 00000000 *Var0 )
  A24:  		Wait  1`
  A30:  	EndLoop
  A38:  	Call  SetActorRotation  ( .Actor:Self 00000000 00000000 00000014 )
  A54:  EndThread
  A5C:  Thread
  A64:  	Call  GetActorVar   ( .Actor:Self 00000001 *Var0 )
  A7C:  	Switch  *Var0
  A88:  		Case  ==  00000000
  A94:  			Wait  13`
  AA0:  			Call  SetPartScale  ( .Actor:Self 00000001 *Fixed[1.1] *Fixed[1.1] *Fixed[1.1] )
  AC0:  			Wait  1`
  ACC:  			Call  SetPartScale  ( .Actor:Self 00000001 *Fixed[1.1] *Fixed[1.1] *Fixed[1.1] )
  AEC:  			Wait  1`
  AF8:  			Call  SetPartScale  ( .Actor:Self 00000001 *Fixed[1.2] *Fixed[1.2] *Fixed[1.2] )
  B18:  			Wait  1`
  B24:  			Call  SetPartScale  ( .Actor:Self 00000001 *Fixed[1.2] *Fixed[1.2] *Fixed[1.2] )
  B44:  			Wait  1`
  B50:  			Call  SetPartScale  ( .Actor:Self 00000001 *Fixed[1.3] *Fixed[1.3] *Fixed[1.3] )
  B70:  		Case  ==  00000001
  B7C:  			Wait  13`
  B88:  			Call  SetPartScale  ( .Actor:Self 00000001 *Fixed[1.15] *Fixed[1.15] *Fixed[1.15] )
  BA8:  			Wait  1`
  BB4:  			Call  SetPartScale  ( .Actor:Self 00000001 *Fixed[1.2] *Fixed[1.2] *Fixed[1.2] )
  BD4:  			Wait  1`
  BE0:  			Call  SetPartScale  ( .Actor:Self 00000001 *Fixed[1.35] *Fixed[1.35] *Fixed[1.35] )
  C00:  			Wait  1`
  C0C:  			Call  SetPartScale  ( .Actor:Self 00000001 *Fixed[1.4] *Fixed[1.4] *Fixed[1.4] )
  C2C:  			Wait  1`
  C38:  			Call  SetPartScale  ( .Actor:Self 00000001 *Fixed[1.55] *Fixed[1.55] *Fixed[1.55] )
  C58:  		Case  ==  00000002
  C64:  			Wait  13`
  C70:  			Call  SetPartScale  ( .Actor:Self 00000001 *Fixed[1.2] *Fixed[1.2] *Fixed[1.2] )
  C90:  			Wait  1`
  C9C:  			Call  SetPartScale  ( .Actor:Self 00000001 *Fixed[1.3] *Fixed[1.3] *Fixed[1.3] )
  CBC:  			Wait  1`
  CC8:  			Call  SetPartScale  ( .Actor:Self 00000001 *Fixed[1.5] *Fixed[1.5] *Fixed[1.5] )
  CE8:  			Wait  1`
  CF4:  			Call  SetPartScale  ( .Actor:Self 00000001 *Fixed[1.6] *Fixed[1.6] *Fixed[1.6] )
  D14:  			Wait  1`
  D20:  			Call  SetPartScale  ( .Actor:Self 00000001 *Fixed[1.8] *Fixed[1.8] *Fixed[1.8] )
  D40:  	EndSwitch
  D48:  EndThread
  D50:  Call  SetActorSounds    ( .Actor:Self .ActorSound:Jump 00000000 00000000 )
  D6C:  Call  PlaySoundAtActor  ( .Actor:Self 00002034 )
  D80:  Call  SetGoalToTarget   ( .Actor:Self )
  D90:  Thread
  D98:  	Call  SetAnimation  ( .Actor:Self 00000001 000F0005 )
  DB0:  	Wait  10`
  DBC:  	Call  SetAnimation  ( .Actor:Self 00000001 000F0006 )
  DD4:  EndThread
  DDC:  Call  SetActorJumpGravity   ( .Actor:Self *Fixed[1.6] )
  DF0:  Call  JumpToGoal    ( .Actor:Self  20` .False .True .False )
  E10:  Call  SetAnimation  ( .Actor:Self 00000001 000F0007 )
  E28:  Call  SetActorRotation      ( .Actor:Self 00000000 00000000 00000000 )
  E44:  Call  SetActorRotationOffset    ( .Actor:Self 00000000 00000000 00000000 )
  E60:  Thread
  E68:  	Wait  3`
  E74:  	Call  SetPartScale  ( .Actor:Self 00000001 *Fixed[1.0] *Fixed[1.0] *Fixed[1.0] )
  E94:  EndThread
  E9C:  Call  GetActorVar   ( .Actor:Self 00000001 *VarA )
  EB4:  Switch  *VarA
  EC0:  	Case  ==  00000000
  ECC:  		Wait  2`
  ED8:  		Call  EnemyDamageTarget ( .Actor:Self *Var0 ~Flags:DamageType:0 00000000 00000000 00000003 00000020 )
  F00:  	Case  ==  00000001
  F0C:  		Wait  2`
  F18:  		Call  EnemyDamageTarget ( .Actor:Self *Var0 ~Flags:DamageType:0 00000000 00000000 00000004 00000020 )
  F40:  	Case  ==  00000002
  F4C:  		Wait  2`
  F58:  		Call  EnemyDamageTarget ( .Actor:Self *Var0 ~Flags:DamageType:0 00000000 00000000 00000005 00000020 )
  F80:  EndSwitch
  F88:  Switch  *Var0
  F94:  	CaseOR  ==  .HitResult:Hit % 0
  FA0:  	CaseOR  ==  .HitResult:QuakeImmune % 2
  FAC:  		Call  SetAnimation  ( .Actor:Self 00000001 000F0006 )
  FC4:  		Call  GetActorPos   ( .Actor:Self *Var0 *Var1 *Var2 )
  FE0:  		Add   *Var0  0000003C
  FF0:  		Set   *Var1  00000000
 1000:  		Call  SetActorJumpGravity   ( .Actor:Self *Fixed[1.4] )
 1014:  		Call  SetGoalPos    ( .Actor:Self *Var0 *Var1 *Var2 )
 1030:  		Call  JumpToGoal    ( .Actor:Self  20` .False .True .False )
 1050:  		Call  PlaySoundAtActor  ( .Actor:Self 0000029A )
 1064:  		Add   *Var0  0000001E
 1074:  		Call  SetGoalPos    ( .Actor:Self *Var0 *Var1 *Var2 )
 1090:  		Call  JumpToGoal    ( .Actor:Self  8` .False .True .False )
 10B0:  		Call  PlaySoundAtActor  ( .Actor:Self 0000029A )
 10C4:  		Add   *Var0  00000014
 10D4:  		Call  SetGoalPos    ( .Actor:Self *Var0 *Var1 *Var2 )
 10F0:  		Call  JumpToGoal    ( .Actor:Self  6` .False .True .False )
 1110:  		Call  PlaySoundAtActor  ( .Actor:Self 0000029A )
 1124:  		Add   *Var0  0000000A
 1134:  		Call  SetGoalPos    ( .Actor:Self *Var0 *Var1 *Var2 )
 1150:  		Call  JumpToGoal    ( .Actor:Self  4` .False .True .False )
 1170:  		Call  PlaySoundAtActor  ( .Actor:Self 0000029A )
 1184:  		Call  SetAnimation  ( .Actor:Self 00000001 000F0001 )
 119C:  		Wait  15`
 11A8:  		Call  UseBattleCamPreset    ( 00000002 )
 11B8:  		Call  YieldTurn ( )
 11C4:  		Call  SetAnimation  ( .Actor:Self 00000001 000F0003 )
 11DC:  		Call  SetGoalToHome ( .Actor:Self )
 11EC:  		Call  SetActorSpeed ( .Actor:Self *Fixed[4.0] )
 1200:  		Call  RunToGoal     ( .Actor:Self  0` .False )
 1218:  	EndCaseGroup
 1220:  EndSwitch
 1228:  Call  EnableIdleScript  ( .Actor:Self 00000001 )
 123C:  Call  UseIdleAnimation  ( .Actor:Self .True )
 1250:  Return
 1258:  End
}

#new:SpecialFormation $SpecialFormation_80226164
{
	$GhostSushie $Vector3D_8021CAE8 00000000 00000000 00000000 00000000 00000000
}

#new:IdleAnimations $IdleAnimations_80226180
{
	.Status:Normal    00100001
	.Status:Stone     00100000
	.Status:Sleep     00100000
	.Status:Poison    00100001
	.Status:Stop      00100000
	.Status:Static    00100001
	.Status:Paralyze  00100000
	.Status:Dizzy     00100008
	.Status:Fear      00100001
	.Status:End
}

#new:IdleAnimations $IdleAnimations_802261CC
{
	.Status:Normal    00100014
	.Status:End
}

#new:DefenseTable $DefenseTable_802261D8
{
	.Element:Normal 00000000
	.Element:End
}

#new:StatusTable $StatusTable_802261E4
{
	.Status:Normal      0`
	.Status:Default     0`
	.Status:Sleep      60`
	.Status:Poison      0`
	.Status:Frozen      0`
	.Status:Dizzy      75`
	.Status:Fear        0`
	.Status:Static      0`
	.Status:Paralyze   75`
	.Status:Shrink     75`
	.Status:Stop       80`
	.Status:DefaultTurnMod    0`
	.Status:SleepTurnMod     -1`
	.Status:PoisonTurnMod     0`
	.Status:FrozenTurnMod     0`
	.Status:DizzyTurnMod     -1`
	.Status:FearTurnMod       0`
	.Status:StaticTurnMod     0`
	.Status:ParalyzeTurnMod   0`
	.Status:ShrinkTurnMod     0`
	.Status:StopTurnMod      -1`
	.Status:End
}

#new:PartsTable $PartsTable_80226290
{
	00800000 01000000 FD2100FF $IdleAnimations_80226180 $DefenseTable_802261D8 00000000 00000000 FEF60000 00000000
	00120001 03000000 000000FF $IdleAnimations_802261CC $DefenseTable_802261D8 00000000 00000000 00000000 00000000
}

#new:Actor $GhostLakilester
{
	% stats
	[Index]        43b
	[Level]        23`b
	[MaxHP]        15`b
	[Coins]         2`b
	[Flags]       00000200
	[StatusTable] $StatusTable_802261E4
	% ai
	[PartsCount]    2`s
	[PartsTable]  $PartsTable_80226290
	[Script]      $Script_Init_80226300
	% move effectiveness
	[Escape]       50`b
	[Item]         50`b
	[AirLift]      80`b
	[Hurricane]    70`b % Bow's "Spook" as well
	[UpAndAway]    95`b
	[PowerBounce]  90`b
	[SpinSmash]     0`b % weight (0-4)
	% ui positions
	[Size]         44`b  40`b % width height
	[HealthBar]     0`b   0`b % dx dy
	[StatusTurn]  -10`b  20`b % dx dy
	[StatusIcon]   10`b  20`b % dx dy
}

#new:Script $Script_Init_80226300
{
    0:  Call  BindTakeTurn      ( .Actor:Self $Script_TakeTurn_80226924 )
   14:  Call  BindIdle  ( .Actor:Self $Script_Idle_8022634C )
   28:  Call  BindHandleEvent   ( .Actor:Self $Script_HandleEvent_8022635C )
   3C:  Return
   44:  End
}

#new:Script $Script_Idle_8022634C
{
    0:  Return
    8:  End
}

#new:Script $Script_HandleEvent_8022635C
{
    0:  Call  UseIdleAnimation  ( .Actor:Self .False )
   14:  Call  EnableIdleScript  ( .Actor:Self 00000000 )
   28:  Call  GetLastEvent      ( .Actor:Self *Var0 )
   3C:  Switch  *Var0
   48:  	CaseOR  ==  .Event:HitCombo % 9
   54:  	CaseOR  ==  .Event:Hit % A
   60:  		Call  GetLastElement    ( *Var1 )
   70:  		If  *Var1  &  00000020
   80:  			SetConst  *Var0  00000001
   90:  			SetConst  *Var1  0010000A
   A0:  			ExecWait  $Script_8021BC34
   AC:  			Return
   B4:  		Else
   BC:  			SetConst  *Var0  00000001
   CC:  			SetConst  *Var1  0010000A
   DC:  			ExecWait  DoNormalHit
   E8:  		EndIf
   F0:  	EndCaseGroup
   F8:  	Case  ==  .Event:BurnHit % E
  104:  		SetConst  *Var0  00000001
  114:  		SetConst  *Var1  0010000C
  124:  		SetConst  *Var2  0010000D
  134:  		ExecWait  DoBurnHit
  140:  	Case  ==  .Event:BurnDeath % 24
  14C:  		SetConst  *Var0  00000001
  15C:  		SetConst  *Var1  0010000C
  16C:  		SetConst  *Var2  0010000D
  17C:  		ExecWait  DoBurnHit
  188:  		ExecWait  $Script_8021BBFC
  194:  		Wait  10`
  1A0:  		SetConst  *Var0  00000001
  1B0:  		SetConst  *Var1  0010000D
  1C0:  		ExecWait  DoDeath
  1CC:  		Return
  1D4:  	Case  ==  .Event:SpinSmashHit % B
  1E0:  		SetConst  *Var0  00000001
  1F0:  		SetConst  *Var1  0010000A
  200:  		ExecWait  DoSpinSmashHit
  20C:  	Case  ==  .Event:SpinSmashDeath % 21
  218:  		ExecWait  $Script_8021BBFC
  224:  		SetConst  *Var0  00000001
  234:  		SetConst  *Var1  0010000A
  244:  		ExecWait  DoSpinSmashHit
  250:  		SetConst  *Var0  00000001
  260:  		SetConst  *Var1  0010000B
  270:  		ExecWait  DoDeath
  27C:  		Return
  284:  	Case  ==  .Event:ShockHit % 2F
  290:  		SetConst  *Var0  00000001
  2A0:  		SetConst  *Var1  0010000A
  2B0:  		ExecWait  DoShockHit
  2BC:  		SetConst  *Var0  00000001
  2CC:  		SetConst  *Var1  0010000A
  2DC:  		ExecWait  DoJumpBack
  2E8:  		Call  SetAnimation  ( .Actor:Self 00000001 00100003 )
  300:  		Call  SetGoalToHome ( .Actor:Self )
  310:  		Call  FlyToGoal     ( .Actor:Self  30`  0` .Easing:CosInOut )
  32C:  	Case  ==  .Event:ShockDeath % 26
  338:  		ExecWait  $Script_8021BBFC
  344:  		SetConst  *Var0  00000001
  354:  		SetConst  *Var1  0010000A
  364:  		ExecWait  DoShockHit
  370:  		SetConst  *Var0  00000001
  380:  		SetConst  *Var1  0010000B
  390:  		ExecWait  DoDeath
  39C:  		Return
  3A4:  	CaseOR  ==  00000017 % 17
  3B0:  	CaseOR  ==  .Event:Immune % 19
  3BC:  	CaseOR  ==  .Event:AirLiftFailed % 1F
  3C8:  		SetConst  *Var0  00000001
  3D8:  		SetConst  *Var1  00100001
  3E8:  		ExecWait  DoImmune
  3F4:  	EndCaseGroup
  3FC:  	Case  ==  .Event:Death % 20
  408:  		ExecWait  $Script_8021BBFC
  414:  		SetConst  *Var0  00000001
  424:  		SetConst  *Var1  0010000A
  434:  		ExecWait  DoNormalHit
  440:  		Wait  10`
  44C:  		SetConst  *Var0  00000001
  45C:  		SetConst  *Var1  0010000B
  46C:  		ExecWait  DoDeath
  478:  		Return
  480:  	Case  ==  .Event:RecoverStatus % 31
  48C:  		SetConst  *Var0  00000001
  49C:  		SetConst  *Var1  00100001
  4AC:  		ExecWait  DoRecover
  4B8:  	Case  ==  .Event:ScareAway % 39
  4C4:  		SetConst  *Var0  00000001
  4D4:  		SetConst  *Var1  00100003
  4E4:  		SetConst  *Var2  0010000A
  4F4:  		ExecWait  DoScareAway
  500:  		Return
  508:  	Case  ==  .Event:BeginAirLift % 3A
  514:  		SetConst  *Var0  00000001
  524:  		SetConst  *Var1  00100003
  534:  		ExecWait  DoAirLift
  540:  	Case  ==  .Event:BlowAway % 16
  54C:  		SetConst  *Var0  00000001
  55C:  		SetConst  *Var1  0010000A
  56C:  		ExecWait  DoBlowAway
  578:  		Return
  580:  	Default
  588:  EndSwitch
  590:  Call  EnableIdleScript  ( .Actor:Self 00000001 )
  5A4:  Call  UseIdleAnimation  ( .Actor:Self .True )
  5B8:  Return
  5C0:  End
}

#new:Script $Script_TakeTurn_80226924
{
    0:  Call  UseIdleAnimation  ( .Actor:Self .False )
   14:  Call  EnableIdleScript  ( .Actor:Self 00000000 )
   28:  Call  SetTargetActor    ( .Actor:Self .Actor:Player )
   3C:  Call  UseBattleCamPreset    ( 0000003F )
   4C:  Call  BattleCamTargetActor  ( .Actor:Self )
   5C:  Call  8024ECF8  ( FFFFFFFF 00000001 00000000 )
   74:  Call  SetAnimation      ( .Actor:Self 00000001 00100003 )
   8C:  Call  GetActorPos       ( .Actor:Self *Var0 *Var1 *Var2 )
   A8:  Call  SetGoalPos        ( .Actor:Self  20`  30` *Var2 )
   C4:  Call  FlyToGoal ( .Actor:Self  30`  0` .Easing:CosInOut )
   E0:  Call  SetAnimation      ( .Actor:Self 00000001 00100001 )
   F8:  Call  GetActorPos       ( .Actor:Self *Var0 *Var1 *Var2 )
  114:  Call  GetStatusFlags    ( .Actor:Self *VarA )
  128:  If  *VarA  &  ~Flags:StatusFlags:Shrink % 80000
  138:  	Add   *Var0  FFFFFFFF
  148:  	Add   *Var1  00000004
  158:  	Add   *Var2  00000002
  168:  	Call  SetPartScale  ( .Actor:Self 00000003 *Fixed[0.4] *Fixed[0.4] *Fixed[0.4] )
  188:  Else
  190:  	Add   *Var0  FFFFFFFD
  1A0:  	Add   *Var1  0000000A
  1B0:  	Add   *Var2  00000005
  1C0:  	Call  SetPartScale  ( .Actor:Self 00000003 *Fixed[1.0] *Fixed[1.0] *Fixed[1.0] )
  1E0:  EndIf
  1E8:  Call  SetPartPos    ( .Actor:Self 00000003 *Var0 *Var1 *Var2 )
  208:  Wait  1`
  214:  Call  SetPartFlagBits   ( .Actor:Self 00000003 00000001 .False )
  230:  Call  SetAnimation  ( .Actor:Self 00000003 00100014 )
  248:  Call  SetAnimation  ( .Actor:Self 00000001 0010000F )
  260:  Loop  00000004
  26C:  	Call  GetStatusFlags    ( .Actor:Self *VarA )
  280:  	If  *VarA  &  ~Flags:StatusFlags:Shrink % 80000
  290:  		AddF  *Var1  *Fixed[2.4]
  2A0:  	Else
  2A8:  		Add   *Var1  00000006
  2B8:  	EndIf
  2C0:  	Call  SetPartPos    ( .Actor:Self 00000003 *Var0 *Var1 *Var2 )
  2E0:  	Wait  1`
  2EC:  EndLoop
  2F4:  Call  GetActorPos       ( .Actor:Self *Var0 *Var1 *Var2 )
  310:  Call  GetStatusFlags    ( .Actor:Self *VarA )
  324:  If  *VarA  &  ~Flags:StatusFlags:Shrink % 80000
  334:  	Add   *Var0  FFFFFFFD
  344:  	Add   *Var1  00000010
  354:  	Add   *Var2  00000002
  364:  	SetF  *Var3  *Fixed[0.4]
  374:  Else
  37C:  	Add   *Var0  FFFFFFF8
  38C:  	Add   *Var1  00000028
  39C:  	Add   *Var2  00000005
  3AC:  	SetF  *Var3  *Fixed[1.0]
  3BC:  EndIf
  3C4:  Call  PlayEffect        ( ~FX:EnergyIn:ShortStreaks *Var0 *Var1 *Var2 *Var3 0000001E 00000000 00000000 00000000 00000000 00000000 00000000 00000000 )
  408:  Call  PlaySoundAtActor  ( .Actor:Self 000002C5 )
  41C:  Thread
  424:  	Loop  0000000F
  430:  		Call  SetActorDispOffset    ( .Actor:Self 00000001 00000000 00000000 )
  44C:  		Call  SetPartDispOffset     ( .Actor:Self 00000003 00000001 00000000 00000000 )
  46C:  		Wait  1`
  478:  		Call  SetActorDispOffset    ( .Actor:Self FFFFFFFF 00000000 00000000 )
  494:  		Call  SetPartDispOffset     ( .Actor:Self 00000003 FFFFFFFF 00000000 00000000 )
  4B4:  		Wait  1`
  4C0:  	EndLoop
  4C8:  	Call  SetActorDispOffset    ( .Actor:Self 00000000 00000000 00000000 )
  4E4:  	Call  SetPartDispOffset     ( .Actor:Self 00000003 00000000 00000000 00000000 )
  504:  EndThread
  50C:  Call  SetGoalToTarget   ( .Actor:Self )
  51C:  Wait  10`
  528:  Call  SetAnimation      ( .Actor:Self 00000001 00100010 )
  540:  Wait  10`
  54C:  Call  SetAnimation      ( .Actor:Self 00000001 00100011 )
  564:  Wait  10`
  570:  Call  SetAnimation      ( .Actor:Self 00000001 00100012 )
  588:  Wait  3`
  594:  Call  SetPartSounds     ( .Actor:Self 00000003 .ActorSound:Jump 00000000 00000000 )
  5B4:  Call  PlaySoundAtActor  ( .Actor:Self 0000201B )
  5C8:  Call  EnemyTestTarget   ( .Actor:Self *Var0 ~Flags:DamageType:0 00000000 00000001 00000010 )
  5EC:  Switch  *Var0
  5F8:  	CaseOR  ==  .HitResult:Miss % 6
  604:  	CaseOR  ==  .HitResult:Lucky % 5
  610:  		Set   *VarA  *Var0
  620:  		Call  SetAnimation  ( .Actor:Self 00000003 00100015 )
  638:  		Call  SetPartJumpGravity    ( .Actor:Self 00000003 *Fixed[1.5] )
  650:  		Call  GetGoalPos    ( .Actor:Self *Var0 *Var1 *Var2 )
  66C:  		Call  RandInt       ( 00000064 *Var3 )
  680:  		Sub   *Var3  00000032
  690:  		Add   *Var0  *Var3
  6A0:  		Call  JumpPartTo    ( .Actor:Self 00000003 *Var0  0` *Var2  20` .True )
  6C8:  		Thread
  6D0:  			Add   *Var0  FFFFFFCE
  6E0:  			Call  JumpPartTo        ( .Actor:Self 00000003 *Var0  0` *Var2  15` .True )
  708:  			Call  SetPartFlagBits   ( .Actor:Self 00000003 00000001 .True )
  724:  		EndThread
  72C:  		If  *VarA  ==  .HitResult:Lucky % 5
  73C:  			Call  EnemyTestTarget   ( .Actor:Self *Var0 ~Flags:DamageType:TriggerLucky 00000000 00000000 00000000 )
  760:  		EndIf
  768:  		Wait  15`
  774:  		Call  YieldTurn ( )
  780:  		Call  UseBattleCamPreset    ( 00000002 )
  790:  		Call  MoveBattleCamOver (  60` )
  7A0:  		Call  SetAnimation      ( .Actor:Self 00000001 00100003 )
  7B8:  		Call  SetGoalToHome     ( .Actor:Self )
  7C8:  		Call  FlyToGoal ( .Actor:Self  30`  0` .Easing:CosInOut )
  7E4:  		Call  EnableIdleScript  ( .Actor:Self 00000001 )
  7F8:  		Call  UseIdleAnimation  ( .Actor:Self .True )
  80C:  		Return
  814:  	EndCaseGroup
  81C:  EndSwitch
  824:  Call  SetAnimation      ( .Actor:Self 00000003 00100015 )
  83C:  Call  SetPartJumpGravity    ( .Actor:Self 00000003 *Fixed[1.5] )
  854:  Call  SetGoalToTarget   ( .Actor:Self )
  864:  Call  GetGoalPos        ( .Actor:Self *Var0 *Var1 *Var2 )
  880:  Call  JumpPartTo        ( .Actor:Self 00000003 *Var0 *Var1 *Var2  20` .True )
  8A8:  Thread
  8B0:  	Add   *Var0  FFFFFFCE
  8C0:  	Call  JumpPartTo        ( .Actor:Self 00000003 *Var0  0` *Var2  15` .True )
  8E8:  	Call  SetPartFlagBits   ( .Actor:Self 00000003 00000001 .True )
  904:  EndThread
  90C:  Call  GetActorVar   ( .Actor:Self 00000001 *Var9 )
  924:  Switch  *Var9
  930:  	Case  ==  00000000
  93C:  		Wait  2`
  948:  		Call  EnemyDamageTarget ( .Actor:Self *Var0 ~Flags:DamageType:NoContact 00000000 00000000 00000003 00000020 )
  970:  	Case  ==  00000001
  97C:  		Wait  2`
  988:  		Call  EnemyDamageTarget ( .Actor:Self *Var0 ~Flags:DamageType:NoContact 00000000 00000000 00000004 00000020 )
  9B0:  	Case  ==  00000002
  9BC:  		Wait  2`
  9C8:  		Call  EnemyDamageTarget ( .Actor:Self *Var0 ~Flags:DamageType:NoContact 00000000 00000000 00000005 00000020 )
  9F0:  EndSwitch
  9F8:  Switch  *Var0
  A04:  	CaseOR  ==  .HitResult:Hit % 0
  A10:  	CaseOR  ==  .HitResult:QuakeImmune % 2
  A1C:  		Wait  15`
  A28:  		Call  YieldTurn ( )
  A34:  		Call  UseBattleCamPreset    ( 00000002 )
  A44:  		Call  MoveBattleCamOver (  8` )
  A54:  		Call  SetAnimation      ( .Actor:Self 00000001 00100003 )
  A6C:  		Call  SetGoalToHome     ( .Actor:Self )
  A7C:  		Call  FlyToGoal ( .Actor:Self  30`  0` .Easing:CosInOut )
  A98:  	EndCaseGroup
  AA0:  EndSwitch
  AA8:  Call  EnableIdleScript  ( .Actor:Self 00000001 )
  ABC:  Call  UseIdleAnimation  ( .Actor:Self .True )
  AD0:  Return
  AD8:  End
}

#new:SpecialFormation $SpecialFormation_80227404
{
	$GhostLakilester $Vector3D_8021CAE8 00000000 00000000 00000000 00000000 00000000
}

#new:Script $Script_CopyPartner
{
    0:  Call  UseIdleAnimation  ( .Actor:Self .False )
   14:  Call  EnableIdleScript  ( .Actor:Self 00000000 )
   28:  Call  UseBattleCamPreset    ( 0000000E )
   38:  Call  BattleCamTargetActor  ( .Actor:Self )
   48:  Wait  15`
   54:  Call  PlaySoundAtActor  ( .Actor:Self 000020B8 )
   68:  Call  SetAnimation      ( .Actor:Self 00000001 004E0006 )
   80:  Call  GetActorPos       ( .Actor:Self *Var0 *Var1 *Var2 )
   9C:  Call  GetStatusFlags    ( .Actor:Self *VarA )
   B0:  If  *VarA  &  ~Flags:StatusFlags:Shrink % 80000
   C0:  	Add   *Var1  00000008
   D0:  	SetF  *Var3  *Fixed[0.4]
   E0:  Else
   E8:  	Add   *Var1  00000014
   F8:  	SetF  *Var3  *Fixed[1.0]
  108:  EndIf
  110:  Call  PlayEffect    ( 00000013 00000001 *Var0 *Var1 *Var2 *Var3 00000028 00000000 00000000 00000000 00000000 00000000 00000000 00000000 )
  154:  Call  $Function_8021943C ( )
  160:  Call  MakeLerp  ( 00000000 000000C8 00000014 .Easing:Linear )
  17C:  Label  0
  188:  Call  UpdateLerp ( )
  194:  Call  $Function_80219480    ( *Var0 )
  1A4:  Wait  1`
  1B0:  If  *Var1  ==  00000001
  1C0:  	Goto  0
  1CC:  EndIf
  1D4:  Wait  10`
  1E0:  Call  $Function_GetPartner  ( *Var5 *Var6 )
  1F4:  Call  $Function_80219524    ( *Var5 )
  204:  Switch  *Var5
  210:  	Case  ==  00000001
  21C:  		Call  SummonEnemy   ( $SpecialFormation_8021E660 00000000 )
  230:  	Case  ==  00000002
  23C:  		Call  SummonEnemy   ( $SpecialFormation_80220314 00000000 )
  250:  	Case  ==  00000003
  25C:  		Call  SummonEnemy   ( $SpecialFormation_80221574 00000000 )
  270:  	Case  ==  00000004
  27C:  		Call  SummonEnemy   ( $SpecialFormation_80222500 00000000 )
  290:  	Case  ==  00000009
  29C:  		Call  SummonEnemy   ( $SpecialFormation_802238D0 00000000 )
  2B0:  	Case  ==  00000006
  2BC:  		Call  SummonEnemy   ( $SpecialFormation_802247CC 00000000 )
  2D0:  	Case  ==  00000007
  2DC:  		Call  SummonEnemy   ( $SpecialFormation_80226164 00000000 )
  2F0:  	Case  ==  00000008
  2FC:  		Call  SummonEnemy   ( $SpecialFormation_80227404 00000000 )
  310:  EndSwitch
  318:  Set   *VarA  *Var0
  328:  Call  CopyStatusEffects ( .Actor:Self *VarA )
  33C:  Call  SetBattleVar      ( 00000003 *Var5 )
  350:  Call  PlaySoundAtActor  ( .Actor:Self .Sound:SmokeBurst )
  364:  Thread
  36C:  	Call  GetActorPos   ( .Actor:Self *Var0 *Var1 *Var2 )
  388:  	Add   *Var1  00000003
  398:  	Add   *Var2  00000005
  3A8:  	Loop  00000003
  3B4:  		Call  PlayEffect    ( ~FX:BigSmokePuff *Var0 *Var1 *Var2 00000000 00000000 00000000 00000000 00000000 00000000 00000000 00000000 00000000 00000000 )
  3F8:  		Wait  3`
  404:  	EndLoop
  40C:  EndThread
  414:  Wait  5`
  420:  Call  GetActorPos   ( .Actor:Self *Var0 *Var1 *Var2 )
  43C:  Call  SetActorPos   ( *VarA *Var0 *Var1 *Var2 )
  458:  Call  SetPartFlagBits   ( .Actor:Self 00000001 00020001 .True )
  474:  Call  SetPartFlagBits   ( .Actor:Self 00000001 00800000 .False )
  490:  Call  SetActorFlagBits  ( .Actor:Self 00400004 .True )
  4A8:  Call  GetActorHP    ( .Actor:Self *Var0 )
  4BC:  Call  SetEnemyHP    ( *VarA *Var0 )
  4D0:  Call  CopyBuffs     ( .Actor:Self *VarA )
  4E4:  Call  GetOwnerID    ( *Var0 )
  4F4:  Call  SetActorVar   ( *VarA 00000000 *Var0 )
  50C:  Call  SetActorVar   ( *VarA 00000001 *Var6 )
  524:  Wait  20`
  530:  Call  UseBattleCamPreset    ( 00000002 )
  540:  Call  MoveBattleCamOver (  20` )
  550:  Thread
  558:  	Call  MakeLerp  ( 000000C8 00000000 00000014 .Easing:Linear )
  574:  	Label  1
  580:  	Call  UpdateLerp ( )
  58C:  	Call  $Function_80219480    ( *Var0 )
  59C:  	Wait  1`
  5A8:  	If  *Var1  ==  00000001
  5B8:  		Goto  1
  5C4:  	EndIf
  5CC:  EndThread
  5D4:  Call  SetActorSounds    ( *VarA .ActorSound:Jump 00000000 00000000 )
  5F0:  Switch  *Var5
  5FC:  	Case  ==  00000008
  608:  		Call  GetActorPos   ( *VarA *Var0 *Var1 *Var2 )
  624:  		Call  SetActorJumpGravity   ( *VarA *Fixed[0.01] )
  638:  		Call  SetGoalPos    ( *VarA *Var0  10` *Var2 )
  654:  		Call  JumpToGoal    ( *VarA  10` .False .False .False )
  674:  		Wait  10`
  680:  	CaseOR  ==  00000006
  68C:  	CaseOR  ==  00000009
  698:  	CaseOR  ==  00000004
  6A4:  		Call  GetActorPos   ( *VarA *Var0 *Var1 *Var2 )
  6C0:  		Call  SetActorJumpGravity   ( *VarA *Fixed[0.01] )
  6D4:  		Call  SetGoalPos    ( *VarA *Var0  30` *Var2 )
  6F0:  		Call  JumpToGoal    ( *VarA  20` .False .False .False )
  710:  	EndCaseGroup
  718:  EndSwitch
  720:  Call  GetActorPos   ( *VarA *Var0 *Var1 *Var2 )
  73C:  Call  ForceHomePos  ( *VarA *Var0 *Var1 *Var2 )
  758:  Call  HPBarToHome   ( *VarA )
  768:  Call  ResetActorSounds  ( *VarA .ActorSound:Jump )
  77C:  Wait  20`
  788:  Call  SetActorPos   ( .Actor:Self  0`  -1000`  0` )
  7A4:  Call  ForceHomePos  ( .Actor:Self  0`  -1000`  0` )
  7C0:  Call  HPBarToHome   ( .Actor:Self )
  7D0:  Call  SetActorVar   ( .Actor:Self 00000008 00000001 )
  7E8:  Call  EnableIdleScript  ( .Actor:Self 00000001 )
  7FC:  Call  UseIdleAnimation  ( .Actor:Self .True )
  810:  Return
  818:  End
}

#new:Script $Script_TakeTurn_80227C40
{
    0:  Call  GetActorVar   ( .Actor:Self 00000008 *Var0 )
   18:  Switch  *Var0
   24:  	Case  ==  00000000
   30:  		Call  RandInt   ( 000003E8 *Var0 )
   44:  		If  *Var0  <  00000258
   54:  			Call  GetBattleVar  ( 00000000 *Var0 )
   68:  			If  *Var0  !&  00000004
   78:  				Call  GetBattleVar  ( 00000000 *Var0 )
   8C:  				ConstOR  *Var0 00000004
   9C:  				Call  SetBattleVar  ( 00000000 *Var0 )
   B0:  				ExecWait  $Script_CopyPartner
   BC:  			Else
   C4:  				Call  GetBattleVar  ( 00000003 *Var0 )
   D8:  				Call  $Function_GetPartner  ( *Var1 *Var2 )
   EC:  				If  *Var0  ==  *Var1
   FC:  					ExecWait  $Script_CopyPartner
  108:  				Else
  110:  					ExecWait  $Script_LungeAttack
  11C:  				EndIf
  124:  			EndIf
  12C:  		Else
  134:  			ExecWait  $Script_LungeAttack
  140:  		EndIf
  148:  	Case  ==  00000001
  154:  	Case  ==  00000002
  160:  		ExecWait  $Script_LungeAttack
  16C:  	Case  ==  00000003
  178:  EndSwitch
  180:  Return
  188:  End
}

#new:IdleAnimations $IdleAnimations_80227DD0
{
	.Status:Normal    00520001
	.Status:Stone     00520000
	.Status:Sleep     0052000F
	.Status:Poison    00520001
	.Status:Stop      00520000
	.Status:Static    00520001
	.Status:Paralyze  00520000
	.Status:Dizzy     0052000E
	.Status:Fear      0052000E
	.Status:End
}

#new:IdleAnimations $IdleAnimations_80227E1C
{
	.Status:Normal    00520010
	.Status:End
}

#new:IdleAnimations $IdleAnimations_80227E28
{
	.Status:Normal    00520012
	.Status:End
}

#new:DefenseTable $DefenseTable_80227E34
{
	.Element:Normal 00000000
	.Element:End
}

#new:StatusTable $StatusTable_80227E40
{
	.Status:Normal      0`
	.Status:Default     0`
	.Status:Sleep      60`
	.Status:Poison     80`
	.Status:Frozen      0`
	.Status:Dizzy      90`
	.Status:Fear        0`
	.Status:Static     10`
	.Status:Paralyze   80`
	.Status:Shrink     75`
	.Status:Stop       85`
	.Status:DefaultTurnMod    0`
	.Status:SleepTurnMod      0`
	.Status:PoisonTurnMod     0`
	.Status:FrozenTurnMod     0`
	.Status:DizzyTurnMod      0`
	.Status:FearTurnMod       0`
	.Status:StaticTurnMod     0`
	.Status:ParalyzeTurnMod   1`
	.Status:ShrinkTurnMod     0`
	.Status:StopTurnMod       0`
	.Status:End
}

#new:PartsTable $PartsTable_80227EEC
{
	00800000 01000000 F93000FF $IdleAnimations_80227DD0 $DefenseTable_80227E34 00000000 00000000 FDE90000 00000000
	00120001 02000000 000000FF $IdleAnimations_80227E1C $DefenseTable_80227E34 00000000 00000000 00000000 00000000
	00120001 03000000 000000FF $IdleAnimations_80227E28 $DefenseTable_80227E34 00000000 00000000 00000000 00000000
}

#new:Actor $Gulpit
{
	% stats
	[Index]        36b
	[Level]        22`b
	[MaxHP]        12`b
	[Coins]         1`b
	[Flags]       00000000
	[StatusTable] $StatusTable_80227E40
	% ai
	[PartsCount]    3`s
	[PartsTable]  $PartsTable_80227EEC
	[Script]      $Script_Init_80227F80
	% move effectiveness
	[Escape]       60`b
	[Item]         70`b
	[AirLift]      50`b
	[Hurricane]    50`b % Bow's "Spook" as well
	[UpAndAway]    95`b
	[PowerBounce] 100`b
	[SpinSmash]     0`b % weight (0-4)
	% ui positions
	[Size]         53`b  50`b % width height
	[HealthBar]     0`b   0`b % dx dy
	[StatusTurn]   -3`b  37`b % dx dy
	[StatusIcon]   10`b  45`b % dx dy
}

#new:Script $Script_Init_80227F80
{
    0:  Call  BindTakeTurn      ( .Actor:Self $Script_TakeTurn_802291B4 )
   14:  Call  BindIdle  ( .Actor:Self $Script_Idle_80227FCC )
   28:  Call  BindHandleEvent   ( .Actor:Self $Script_HandleEvent_80228030 )
   3C:  Return
   44:  End
}

#new:Script $Script_Idle_80227FCC
{
    0:  Return
    8:  End
}

#new:Script $Script_80227FDC
{
    0:  SetConst  *Var0  00000001
   10:  SetConst  *Var1  00520003
   20:  ExecWait  DoReturnHome
   2C:  Call  SetAnimation  ( .Actor:Self 00000001 00520001 )
   44:  Return
   4C:  End
}

#new:Script $Script_HandleEvent_80228030
{
    0:  Call  UseIdleAnimation  ( .Actor:Self .False )
   14:  Call  EnableIdleScript  ( .Actor:Self 00000000 )
   28:  Call  GetLastEvent      ( .Actor:Self *Var0 )
   3C:  Switch  *Var0
   48:  	CaseOR  ==  .Event:HitCombo % 9
   54:  	CaseOR  ==  .Event:Hit % A
   60:  		SetConst  *Var0  00000001
   70:  		SetConst  *Var1  0052000B
   80:  		ExecWait  DoNormalHit
   8C:  	EndCaseGroup
   94:  	Case  ==  .Event:BurnHit % E
   A0:  		SetConst  *Var0  00000001
   B0:  		SetConst  *Var1  0052000C
   C0:  		SetConst  *Var2  0052000D
   D0:  		ExecWait  DoBurnHit
   DC:  	Case  ==  .Event:BurnDeath % 24
   E8:  		SetConst  *Var0  00000001
   F8:  		SetConst  *Var1  0052000C
  108:  		SetConst  *Var2  0052000D
  118:  		ExecWait  DoBurnHit
  124:  		SetConst  *Var0  00000001
  134:  		SetConst  *Var1  0052000D
  144:  		ExecWait  DoDeath
  150:  		Return
  158:  	Case  ==  .Event:SpinSmashHit % B
  164:  		SetConst  *Var0  00000001
  174:  		SetConst  *Var1  0052000B
  184:  		ExecWait  DoSpinSmashHit
  190:  	Case  ==  .Event:SpinSmashDeath % 21
  19C:  		SetConst  *Var0  00000001
  1AC:  		SetConst  *Var1  0052000B
  1BC:  		ExecWait  DoSpinSmashHit
  1C8:  		SetConst  *Var0  00000001
  1D8:  		SetConst  *Var1  0052000B
  1E8:  		ExecWait  DoDeath
  1F4:  		Return
  1FC:  	Case  ==  .Event:ShockHit % 2F
  208:  		SetConst  *Var0  00000001
  218:  		SetConst  *Var1  0052000B
  228:  		ExecWait  DoShockHit
  234:  		SetConst  *Var0  00000001
  244:  		SetConst  *Var1  0052000B
  254:  		ExecWait  DoJumpBack
  260:  		ExecWait  $Script_80227FDC
  26C:  	Case  ==  .Event:ShockDeath % 26
  278:  		SetConst  *Var0  00000001
  288:  		SetConst  *Var1  0052000B
  298:  		ExecWait  DoShockHit
  2A4:  		SetConst  *Var0  00000001
  2B4:  		SetConst  *Var1  0052000B
  2C4:  		ExecWait  DoDeath
  2D0:  		Return
  2D8:  	CaseOR  ==  00000017 % 17
  2E4:  	CaseOR  ==  .Event:Immune % 19
  2F0:  	CaseOR  ==  .Event:AirLiftFailed % 1F
  2FC:  		SetConst  *Var0  00000001
  30C:  		SetConst  *Var1  00520001
  31C:  		ExecWait  DoImmune
  328:  	EndCaseGroup
  330:  	Case  ==  .Event:Death % 20
  33C:  		SetConst  *Var0  00000001
  34C:  		SetConst  *Var1  0052000B
  35C:  		ExecWait  DoNormalHit
  368:  		Wait  10`
  374:  		SetConst  *Var0  00000001
  384:  		SetConst  *Var1  0052000B
  394:  		ExecWait  DoDeath
  3A0:  		Return
  3A8:  	Case  ==  .Event:RecoverStatus % 31
  3B4:  		SetConst  *Var0  00000001
  3C4:  		SetConst  *Var1  00520001
  3D4:  		ExecWait  DoRecover
  3E0:  	Case  ==  .Event:ScareAway % 39
  3EC:  		SetConst  *Var0  00000001
  3FC:  		SetConst  *Var1  00520003
  40C:  		SetConst  *Var2  0052000B
  41C:  		ExecWait  DoScareAway
  428:  		Return
  430:  	Case  ==  .Event:BeginAirLift % 3A
  43C:  		SetConst  *Var0  00000001
  44C:  		SetConst  *Var1  00520003
  45C:  		ExecWait  DoAirLift
  468:  	Case  ==  .Event:BlowAway % 16
  474:  		SetConst  *Var0  00000001
  484:  		SetConst  *Var1  00520003
  494:  		ExecWait  DoBlowAway
  4A0:  	Default
  4A8:  EndSwitch
  4B0:  Call  EnableIdleScript  ( .Actor:Self 00000001 )
  4C4:  Call  UseIdleAnimation  ( .Actor:Self .True )
  4D8:  Return
  4E0:  End
}

#new:Script $Script_80228518
{
    0:  Call  UseIdleAnimation  ( .Actor:Self .False )
   14:  Call  EnableIdleScript  ( .Actor:Self 00000000 )
   28:  Call  SetTargetActor    ( .Actor:Self .Actor:Player )
   3C:  Call  UseBattleCamPreset    ( 0000003F )
   4C:  Call  BattleCamTargetActor  ( .Actor:Self )
   5C:  Call  8024ECF8  ( FFFFFFFF 00000001 00000000 )
   74:  Call  GetBattlePhase    ( *Var0 )
   84:  If  *Var0  ==  00000001
   94:  	Call  SetGoalToTarget   ( .Actor:Self )
   A4:  	Call  GetGoalPos        ( .Actor:Self *Var0 *Var1 *Var2 )
   C0:  	Add   *Var0  00000050
   D0:  	Set   *Var1  00000000
   E0:  	Call  SetActorPos       ( .Actor:Self *Var0 *Var1 *Var2 )
   FC:  EndIf
  104:  Call  SetAnimation      ( .Actor:Self 00000001 00520003 )
  11C:  Call  SetGoalToTarget   ( .Actor:Self )
  12C:  Call  GetStatusFlags    ( .Actor:Self *Var0 )
  140:  If  *Var0  &  ~Flags:StatusFlags:Shrink % 80000
  150:  	Call  AddGoalPos    ( .Actor:Self  10`  0`  0` )
  16C:  Else
  174:  	Call  AddGoalPos    ( .Actor:Self  20`  0`  0` )
  190:  EndIf
  198:  Call  SetActorSpeed ( .Actor:Self *Fixed[4.0] )
  1AC:  Call  RunToGoal     ( .Actor:Self  0` .False )
  1C4:  Call  SetAnimation  ( .Actor:Self 00000001 00520001 )
  1DC:  Wait  10`
  1E8:  Thread
  1F0:  	Wait  3`
  1FC:  	Call  PlaySoundAtActor  ( .Actor:Self 000020EE )
  210:  EndThread
  218:  Call  SetAnimation      ( .Actor:Self 00000001 00520004 )
  230:  Wait  9`
  23C:  Call  EnemyTestTarget   ( .Actor:Self *Var0 ~Flags:DamageType:0 00000000 00000001 00000010 )
  260:  Switch  *Var0
  26C:  	CaseOR  ==  .HitResult:Miss % 6
  278:  	CaseOR  ==  .HitResult:Lucky % 5
  284:  		Set   *VarA  *Var0
  294:  		If  *VarA  ==  .HitResult:Lucky % 5
  2A4:  			Call  EnemyTestTarget   ( .Actor:Self *Var0 ~Flags:DamageType:TriggerLucky 00000000 00000000 00000000 )
  2C8:  		EndIf
  2D0:  		Wait  15`
  2DC:  		Call  UseBattleCamPreset    ( 00000002 )
  2EC:  		Call  YieldTurn ( )
  2F8:  		Call  SetActorYaw   ( .Actor:Self  180` )
  30C:  		Call  AddActorDecoration    ( .Actor:Self 00000001 00000000 .Decoration:Sweat )
  328:  		ExecWait  $Script_80227FDC
  334:  		Call  RemoveActorDecoration ( .Actor:Self 00000001 00000000 )
  34C:  		Call  SetActorYaw   ( .Actor:Self  0` )
  360:  		Call  EnableIdleScript      ( .Actor:Self 00000001 )
  374:  		Call  UseIdleAnimation      ( .Actor:Self .True )
  388:  		Return
  390:  	EndCaseGroup
  398:  EndSwitch
  3A0:  Wait  2`
  3AC:  Call  EnemyDamageTarget ( .Actor:Self *Var0 ~Flags:DamageType:0 00000000 00000000 00000002 00000020 )
  3D4:  Switch  *Var0
  3E0:  	CaseOR  ==  .HitResult:Hit % 0
  3EC:  	CaseOR  ==  .HitResult:QuakeImmune % 2
  3F8:  		Call  UseBattleCamPreset    ( 00000002 )
  408:  		Wait  10`
  414:  		Call  YieldTurn ( )
  420:  		ExecWait  $Script_80227FDC
  42C:  	EndCaseGroup
  434:  EndSwitch
  43C:  Call  EnableIdleScript  ( .Actor:Self 00000001 )
  450:  Call  UseIdleAnimation  ( .Actor:Self .True )
  464:  Return
  46C:  End
}

#new:Script $Script_8022898C
{
    0:  Set   *VarA  *Var0
   10:  Call  UseIdleAnimation  ( .Actor:Self .False )
   24:  Call  EnableIdleScript  ( .Actor:Self 00000000 )
   38:  Call  SetTargetActor    ( .Actor:Self .Actor:Player )
   4C:  Call  UseBattleCamPreset    ( 0000003F )
   5C:  Call  BattleCamTargetActor  ( .Actor:Self )
   6C:  Call  8024ECF8      ( FFFFFFFF 00000001 00000000 )
   84:  Call  GetActorPos   ( *VarA *Var0 *Var1 *Var2 )
   A0:  Add   *Var0  00000014
   B0:  Sub   *Var2  00000001
   C0:  Call  SetAnimation  ( .Actor:Self 00000001 00520002 )
   D8:  Call  SetActorSpeed ( .Actor:Self *Fixed[3.0] )
   EC:  Call  SetGoalPos    ( .Actor:Self *Var0 *Var1 *Var2 )
  108:  Call  RunToGoal     ( .Actor:Self  0` .False )
  120:  Call  SetAnimation  ( .Actor:Self 00000001 00520001 )
  138:  Wait  10`
  144:  Call  PlaySoundAtActor  ( .Actor:Self 000020EE )
  158:  Call  GetActorVar   ( *VarA 00000000 *Var0 )
  170:  Set   *VarB  *Var0
  180:  Switch  *VarB
  18C:  	Case  ==  00000000
  198:  		Call  SetAnimation  ( .Actor:Self 00000001 00520005 )
  1B0:  		Wait  3`
  1BC:  		Call  RemoveActor   ( *VarA )
  1CC:  		Wait  20`
  1D8:  		Call  SetAnimation  ( .Actor:Self 00000001 00520006 )
  1F0:  		Wait  15`
  1FC:  		Call  SetAnimation  ( .Actor:Self 00000001 00520007 )
  214:  		Set   *VarA  00000002
  224:  	Case  ==  00000001
  230:  		Call  SetAnimation  ( .Actor:Self 00000001 00520008 )
  248:  		Wait  3`
  254:  		Call  RemoveActor   ( *VarA )
  264:  		Wait  20`
  270:  		Call  SetAnimation  ( .Actor:Self 00000001 00520009 )
  288:  		Wait  15`
  294:  		Call  SetAnimation  ( .Actor:Self 00000001 0052000A )
  2AC:  		Set   *VarA  00000003
  2BC:  EndSwitch
  2C4:  Call  SetPartSounds     ( .Actor:Self *VarA .ActorSound:Jump 000003D9 00000000 )
  2E4:  Call  EnemyTestTarget   ( .Actor:Self *Var0 ~Flags:DamageType:0 00000000 00000001 00000010 )
  308:  Switch  *Var0
  314:  	CaseOR  ==  .HitResult:Miss % 6
  320:  	CaseOR  ==  .HitResult:Lucky % 5
  32C:  		Set   *Var9  *Var0
  33C:  		Call  UseBattleCamPreset    ( 00000002 )
  34C:  		Call  SetPartFlagBits   ( .Actor:Self *VarA 00000001 .False )
  368:  		Call  GetActorPos       ( .Actor:Self *Var0 *Var1 *Var2 )
  384:  		Add   *Var1  00000014
  394:  		Add   *Var2  00000002
  3A4:  		Call  SetPartPos        ( .Actor:Self *VarA *Var0 *Var1 *Var2 )
  3C4:  		Call  SetGoalToTarget   ( .Actor:Self )
  3D4:  		Call  AddGoalPos        ( .Actor:Self  -100`  0`  5` )
  3F0:  		Call  SetPartMoveSpeed  ( .Actor:Self *VarA *Fixed[14.0] )
  408:  		Call  SetPartJumpGravity    ( .Actor:Self *VarA *Fixed[0.01] )
  420:  		Call  GetGoalPos        ( .Actor:Self *Var0 *Var1 *Var2 )
  43C:  		Call  JumpPartTo        ( .Actor:Self *VarA *Var0 *Var1 *Var2  0` .True )
  464:  		Call  SetPartFlagBits   ( .Actor:Self *VarA 00000001 .True )
  480:  		If  *Var9  ==  .HitResult:Lucky % 5
  490:  			Call  EnemyTestTarget   ( .Actor:Self *Var0 ~Flags:DamageType:TriggerLucky 00000000 00000000 00000000 )
  4B4:  		EndIf
  4BC:  		Wait  15`
  4C8:  		Call  YieldTurn ( )
  4D4:  		Call  AddActorDecoration    ( .Actor:Self 00000001 00000000 .Decoration:Sweat )
  4F0:  		ExecWait  $Script_80227FDC
  4FC:  		Call  RemoveActorDecoration ( .Actor:Self 00000001 00000000 )
  514:  		Call  EnableIdleScript      ( .Actor:Self 00000001 )
  528:  		Call  UseIdleAnimation      ( .Actor:Self .True )
  53C:  		Return
  544:  	EndCaseGroup
  54C:  EndSwitch
  554:  Call  SetPartFlagBits   ( .Actor:Self *VarA 00000001 .False )
  570:  Call  GetActorPos       ( .Actor:Self *Var0 *Var1 *Var2 )
  58C:  Add   *Var1  00000014
  59C:  Add   *Var2  00000002
  5AC:  Call  SetPartPos        ( .Actor:Self *VarA *Var0 *Var1 *Var2 )
  5CC:  Call  SetGoalToTarget   ( .Actor:Self )
  5DC:  Call  SetPartMoveSpeed  ( .Actor:Self *VarA *Fixed[14.0] )
  5F4:  Call  SetPartJumpGravity    ( .Actor:Self *VarA *Fixed[0.01] )
  60C:  Call  GetGoalPos        ( .Actor:Self *Var0 *Var1 *Var2 )
  628:  Call  JumpPartTo        ( .Actor:Self *VarA *Var0 *Var1 *Var2  0` .True )
  650:  Switch  *VarA
  65C:  	Case  ==  00000002
  668:  		Wait  2`
  674:  		Call  EnemyDamageTarget ( .Actor:Self *Var0 ~Flags:DamageType:NoContact 00000000 00000000 00000007 00000020 )
  69C:  	Case  ==  00000003
  6A8:  		Wait  2`
  6B4:  		Call  EnemyDamageTarget ( .Actor:Self *Var0 ~Flags:DamageType:NoContact 00000000 00000000 00000005 00000020 )
  6DC:  EndSwitch
  6E4:  Switch  *Var0
  6F0:  	CaseOR  ==  .HitResult:Hit % 0
  6FC:  	CaseOR  ==  .HitResult:QuakeImmune % 2
  708:  		Call  UseBattleCamPreset    ( 00000002 )
  718:  		Call  SetAnimation      ( .Actor:Self 00000001 00520001 )
  730:  		Call  GetPartOffset     ( .Actor:Self *VarA *Var0 *Var1 *Var2 )
  750:  		Add   *Var0  FFFFFF9C
  760:  		Call  SetPartJumpGravity    ( .Actor:Self *VarA *Fixed[1.0] )
  778:  		Call  JumpPartTo        ( .Actor:Self *VarA *Var0 *Var1 *Var2  25` .True )
  7A0:  		Call  SetPartFlagBits   ( .Actor:Self *VarA 00000001 .True )
  7BC:  		Wait  10`
  7C8:  		Call  YieldTurn ( )
  7D4:  		ExecWait  $Script_80227FDC
  7E0:  	EndCaseGroup
  7E8:  EndSwitch
  7F0:  Call  EnableIdleScript  ( .Actor:Self 00000001 )
  804:  Call  UseIdleAnimation  ( .Actor:Self .True )
  818:  Return
  820:  End
}

#new:Script $Script_TakeTurn_802291B4
{
    0:  Call  GetBattlePhase    ( *Var0 )
   10:  If  *Var0  ==  00000001
   20:  	ExecWait  $Script_80228518
   2C:  	Return
   34:  EndIf
   3C:  Call  GetStatusFlags    ( .Actor:Self *Var0 )
   50:  If  *Var0  &  ~Flags:StatusFlags:Shrink % 80000
   60:  	ExecWait  $Script_80228518
   6C:  	Return
   74:  EndIf
   7C:  Set   *VarA  00000000
   8C:  Call  EnemyCreateTargetList ( 00010002 )
   9C:  Call  InitTargetIterator ( )
   A8:  Label  0
   B4:  Call  GetOwnerTarget        ( *Var0 *Var1 )
   C8:  Call  GetOriginalActorType  ( *Var0 *Var2 )
   DC:  If  *Var2  ==  00000037
   EC:  	Add   *VarA  00000001
   FC:  	Switch  *VarA
  108:  		Case  ==  00000001
  114:  			Set   *VarB  *Var0
  124:  		Case  ==  00000002
  130:  			Set   *VarC  *Var0
  140:  		Case  ==  00000003
  14C:  			Set   *VarD  *Var0
  15C:  	EndSwitch
  164:  EndIf
  16C:  Call  ChooseNextTarget  ( .Iter:Next *Var0 )
  180:  If  *Var0  !=  FFFFFFFF
  190:  	Goto  0
  19C:  EndIf
  1A4:  Switch  *VarA
  1B0:  	Case  ==  00000000
  1BC:  		ExecWait  $Script_80228518
  1C8:  	Case  ==  00000001
  1D4:  		Set   *Var0  *VarB
  1E4:  		ExecWait  $Script_8022898C
  1F0:  	Case  ==  00000002
  1FC:  		Call  RandInt   ( 00000001 *Var0 )
  210:  		Switch  *Var0
  21C:  			Case  ==  00000000
  228:  				Set   *Var0  *VarB
  238:  			Case  ==  00000001
  244:  				Set   *Var0  *VarC
  254:  		EndSwitch
  25C:  		ExecWait  $Script_8022898C
  268:  	Case  >=  00000003
  274:  		Call  RandInt   ( 00000002 *Var0 )
  288:  		Switch  *Var0
  294:  			Case  ==  00000000
  2A0:  				Set   *Var0  *VarB
  2B0:  			Case  ==  00000001
  2BC:  				Set   *Var0  *VarC
  2CC:  			Case  ==  00000002
  2D8:  				Set   *Var0  *VarD
  2E8:  		EndSwitch
  2F0:  		ExecWait  $Script_8022898C
  2FC:  EndSwitch
  304:  Return
  30C:  End
}

PADDING: 802294C8 to 802294D0 (00635068 to 00635070)
00000000 00000000

#new:IdleAnimations $IdleAnimations_802294D0
{
	.Status:Normal    00520010
	.Status:End
}

#new:IdleAnimations $IdleAnimations_802294DC
{
	.Status:Normal    00520012
	.Status:End
}

#new:DefenseTable $DefenseTable_802294E8
{
	.Element:Normal 00000000
	.Element:End
}

#new:StatusTable $StatusTable_802294F4
{
	.Status:Normal      0`
	.Status:Default     0`
	.Status:Sleep       0`
	.Status:Poison      0`
	.Status:Frozen      0`
	.Status:Dizzy       0`
	.Status:Fear        0`
	.Status:Static      0`
	.Status:Paralyze    0`
	.Status:Shrink      0`
	.Status:Stop        0`
	.Status:DefaultTurnMod    0`
	.Status:SleepTurnMod      0`
	.Status:PoisonTurnMod     0`
	.Status:FrozenTurnMod     0`
	.Status:DizzyTurnMod      0`
	.Status:FearTurnMod       0`
	.Status:StaticTurnMod     0`
	.Status:ParalyzeTurnMod   0`
	.Status:ShrinkTurnMod     0`
	.Status:StopTurnMod       0`
	.Status:End
}

#new:PartsTable $PartsTable_802295A0
{
	00800000 01000000 000E00FF $IdleAnimations_802294D0 $DefenseTable_802294E8 00000000 00000000 00FA0000 00000000
}

#new:Actor $GulpitRocks
{
	% stats
	[Index]        37b
	[Level]         0`b
	[MaxHP]         1`b
	[Coins]         0`b
	[Flags]       00244004
	[StatusTable] $StatusTable_802294F4
	% ai
	[PartsCount]    1`s
	[PartsTable]  $PartsTable_802295A0
	[Script]      $Script_Init_802295EC
	% move effectiveness
	[Escape]        0`b
	[Item]          0`b
	[AirLift]     100`b
	[Hurricane]     0`b % Bow's "Spook" as well
	[UpAndAway]    95`b
	[PowerBounce] 100`b
	[SpinSmash]     0`b % weight (0-4)
	% ui positions
	[Size]         32`b  18`b % width height
	[HealthBar]     0`b   0`b % dx dy
	[StatusTurn]  -10`b  20`b % dx dy
	[StatusIcon]   10`b  20`b % dx dy
}

#new:Script $Script_Init_802295EC
{
    0:  Call  BindTakeTurn  ( .Actor:Self $Script_TakeTurn_80229AAC )
   14:  Call  BindIdle      ( .Actor:Self $Script_Idle_8022973C )
   28:  Call  BindHandleEvent   ( .Actor:Self $Script_HandleEvent_802297B0 )
   3C:  Call  GetActorVar   ( .Actor:Self 00000000 *Var0 )
   54:  Switch  *Var0
   60:  	Case  ==  00000000
   6C:  		Call  SetIdleAnimations ( .Actor:Self 00000001 $IdleAnimations_802294D0 )
   84:  		Call  SetAnimation  ( .Actor:Self 00000001 00520010 )
   9C:  		Call  GetActorVar   ( .Actor:Self 00000000 00000000 )
   B4:  		Call  SetActorSize  ( .Actor:Self  24`  15` )
   CC:  	Case  ==  00000001
   D8:  		Call  SetIdleAnimations ( .Actor:Self 00000001 $IdleAnimations_802294DC )
   F0:  		Call  SetAnimation  ( .Actor:Self 00000001 00520012 )
  108:  		Call  GetActorVar   ( .Actor:Self 00000000 00000001 )
  120:  		Call  SetActorSize  ( .Actor:Self  10`  8` )
  138:  EndSwitch
  140:  Return
  148:  End
}

#new:Script $Script_Idle_8022973C
{
    0:  Return
    8:  End
}

#new:Script $Script_8022974C
{
    0:  Call  GetActorVar   ( .Actor:Self 00000000 *VarA )
   18:  Switch  *VarA
   24:  	Case  ==  00000000
   30:  	Case  ==  00000001
   3C:  		SetConst  *Var1  *Var2
   4C:  EndSwitch
   54:  Return
   5C:  End
}

#new:Script $Script_HandleEvent_802297B0
{
    0:  Call  UseIdleAnimation  ( .Actor:Self .False )
   14:  Call  EnableIdleScript  ( .Actor:Self 00000000 )
   28:  Call  GetLastEvent      ( .Actor:Self *Var0 )
   3C:  Switch  *Var0
   48:  	CaseOR  ==  .Event:HitCombo % 9
   54:  	CaseOR  ==  .Event:Hit % A
   60:  	CaseOR  ==  .Event:BurnHit % E
   6C:  		SetConst  *Var0  00000001
   7C:  		SetConst  *Var1  00520010
   8C:  		SetConst  *Var2  00520012
   9C:  		ExecWait  $Script_8022974C
   A8:  		ExecWait  DoNormalHit
   B4:  	EndCaseGroup
   BC:  	CaseOR  ==  00000017 % 17
   C8:  	CaseOR  ==  .Event:Immune % 19
   D4:  	CaseOR  ==  .Event:BeginAirLift % 3A
   E0:  	CaseOR  ==  .Event:AirLiftFailed % 1F
   EC:  		SetConst  *Var0  00000001
   FC:  		SetConst  *Var1  00520010
  10C:  		SetConst  *Var2  00520012
  11C:  		ExecWait  $Script_8022974C
  128:  		ExecWait  DoImmune
  134:  	EndCaseGroup
  13C:  	CaseOR  ==  .Event:BurnDeath % 24
  148:  	CaseOR  ==  .Event:Death % 20
  154:  		SetConst  *Var0  00000001
  164:  		SetConst  *Var1  00520010
  174:  		SetConst  *Var2  00520012
  184:  		ExecWait  $Script_8022974C
  190:  		ExecWait  DoNormalHit
  19C:  		Call  SetActorFlagBits  ( .Actor:Self 00000004 .True )
  1B4:  		Call  GetActorVar       ( .Actor:Self 00000000 *Var0 )
  1CC:  		Switch  *Var0
  1D8:  			Case  ==  00000000
  1E4:  				Call  SetAnimation  ( .Actor:Self 00000001 00520011 )
  1FC:  			Case  ==  00000001
  208:  				Call  SetAnimation  ( .Actor:Self 00000001 00520013 )
  220:  		EndSwitch
  228:  		Call  GetActorPos   ( .Actor:Self *Var0 *Var1 *Var2 )
  244:  		Call  PlayEffect    ( ~FX:Steam:SmallOutward *Var0 *Var1 *Var2 00000000 00000000 00000000 00000000 00000000 00000000 00000000 00000000 00000000 )
  288:  		Wait  30`
  294:  		Call  RemoveActor   ( .Actor:Self )
  2A4:  		Return
  2AC:  	EndCaseGroup
  2B4:  	Default
  2BC:  EndSwitch
  2C4:  Call  EnableIdleScript  ( .Actor:Self 00000001 )
  2D8:  Call  UseIdleAnimation  ( .Actor:Self .True )
  2EC:  Return
  2F4:  End
}

#new:Script $Script_TakeTurn_80229AAC
{
    0:  Return
    8:  End
}

PADDING: 80229ABC to 80229AC0 (0063565C to 00635660)
00000000

#new:IdleAnimations $IdleAnimations_80229AC0
{
	.Status:Normal    003A0101
	.Status:Stone     003A0100
	.Status:Sleep     003A0103
	.Status:Poison    003A0101
	.Status:Stop      003A0100
	.Status:Static    003A0101
	.Status:Paralyze  003A0100
	.Status:Dizzy     003A0105
	.Status:Fear      003A0105
	.Status:End
}

#new:DefenseTable $DefenseTable_80229B0C
{
	.Element:Normal 00000000
	.Element:Fire   FFFFFFFE
	.Element:Ice    00000063
	.Element:End
}

#new:StatusTable $StatusTable_80229B28
{
	.Status:Normal      0`
	.Status:Default     0`
	.Status:Sleep      80`
	.Status:Poison     50`
	.Status:Frozen      0`
	.Status:Dizzy      75`
	.Status:Fear      100`
	.Status:Static     50`
	.Status:Paralyze   75`
	.Status:Shrink     75`
	.Status:Stop       80`
	.Status:DefaultTurnMod    0`
	.Status:SleepTurnMod      1`
	.Status:PoisonTurnMod     0`
	.Status:FrozenTurnMod     0`
	.Status:DizzyTurnMod      0`
	.Status:FearTurnMod       0`
	.Status:StaticTurnMod     0`
	.Status:ParalyzeTurnMod   1`
	.Status:ShrinkTurnMod     0`
	.Status:StopTurnMod      -1`
	.Status:End
}

#new:PartsTable $PartsTable_80229BD4
{
	00800000 01000000 F42000FF $IdleAnimations_80229AC0 $DefenseTable_80229B0C 00000008 00000000 08FD0000 00000000
}

#new:Actor $WhiteClubba
{
	% stats
	[Index]        38b
	[Level]        23`b
	[MaxHP]        12`b
	[Coins]         2`b
	[Flags]       00000000
	[StatusTable] $StatusTable_80229B28
	% ai
	[PartsCount]    1`s
	[PartsTable]  $PartsTable_80229BD4
	[Script]      $Script_Init_80229C20
	% move effectiveness
	[Escape]       50`b
	[Item]         50`b
	[AirLift]      50`b
	[Hurricane]    60`b % Bow's "Spook" as well
	[UpAndAway]    95`b
	[PowerBounce]  80`b
	[SpinSmash]     0`b % weight (0-4)
	% ui positions
	[Size]         42`b  42`b % width height
	[HealthBar]     0`b   0`b % dx dy
	[StatusTurn]  -10`b  20`b % dx dy
	[StatusIcon]   10`b  35`b % dx dy
}

#new:Script $Script_Init_80229C20
{
    0:  Call  BindTakeTurn      ( .Actor:Self $Script_TakeTurn_8022A18C )
   14:  Call  BindIdle  ( .Actor:Self $Script_Idle_80229C6C )
   28:  Call  BindHandleEvent   ( .Actor:Self $Script_HandleEvent_80229C7C )
   3C:  Return
   44:  End
}

#new:Script $Script_Idle_80229C6C
{
    0:  Return
    8:  End
}

#new:Script $Script_HandleEvent_80229C7C
{
    0:  Call  UseIdleAnimation  ( .Actor:Self .False )
   14:  Call  EnableIdleScript  ( .Actor:Self 00000000 )
   28:  Call  GetLastEvent      ( .Actor:Self *Var0 )
   3C:  Switch  *Var0
   48:  	CaseOR  ==  .Event:HitCombo % 9
   54:  	CaseOR  ==  .Event:Hit % A
   60:  		SetConst  *Var0  00000001
   70:  		SetConst  *Var1  003A0104
   80:  		ExecWait  DoNormalHit
   8C:  	EndCaseGroup
   94:  	Case  ==  .Event:BurnHit % E
   A0:  		SetConst  *Var0  00000001
   B0:  		SetConst  *Var1  003A0106
   C0:  		SetConst  *Var2  003A0107
   D0:  		ExecWait  DoBurnHit
   DC:  	Case  ==  .Event:BurnDeath % 24
   E8:  		SetConst  *Var0  00000001
   F8:  		SetConst  *Var1  003A0106
  108:  		SetConst  *Var2  003A0107
  118:  		ExecWait  DoBurnHit
  124:  		SetConst  *Var0  00000001
  134:  		SetConst  *Var1  003A0107
  144:  		ExecWait  DoDeath
  150:  		Return
  158:  	Case  ==  .Event:SpinSmashHit % B
  164:  		SetConst  *Var0  00000001
  174:  		SetConst  *Var1  003A0104
  184:  		ExecWait  DoSpinSmashHit
  190:  	Case  ==  .Event:SpinSmashDeath % 21
  19C:  		SetConst  *Var0  00000001
  1AC:  		SetConst  *Var1  003A0104
  1BC:  		ExecWait  DoSpinSmashHit
  1C8:  		SetConst  *Var0  00000001
  1D8:  		SetConst  *Var1  003A0104
  1E8:  		ExecWait  DoDeath
  1F4:  		Return
  1FC:  	Case  ==  .Event:ShockHit % 2F
  208:  		SetConst  *Var0  00000001
  218:  		SetConst  *Var1  003A0104
  228:  		ExecWait  DoShockHit
  234:  		SetConst  *Var0  00000001
  244:  		SetConst  *Var1  003A0104
  254:  		ExecWait  DoJumpBack
  260:  		SetConst  *Var0  00000001
  270:  		SetConst  *Var1  003A0102
  280:  		ExecWait  DoReturnHome
  28C:  	Case  ==  .Event:ShockDeath % 26
  298:  		SetConst  *Var0  00000001
  2A8:  		SetConst  *Var1  003A0104
  2B8:  		ExecWait  DoShockHit
  2C4:  		SetConst  *Var0  00000001
  2D4:  		SetConst  *Var1  003A0104
  2E4:  		ExecWait  DoDeath
  2F0:  		Return
  2F8:  	CaseOR  ==  00000017 % 17
  304:  	CaseOR  ==  .Event:Immune % 19
  310:  	CaseOR  ==  .Event:AirLiftFailed % 1F
  31C:  		SetConst  *Var0  00000001
  32C:  		SetConst  *Var1  003A0101
  33C:  		ExecWait  DoImmune
  348:  	EndCaseGroup
  350:  	Case  ==  .Event:Death % 20
  35C:  		SetConst  *Var0  00000001
  36C:  		SetConst  *Var1  003A0104
  37C:  		ExecWait  DoNormalHit
  388:  		Wait  10`
  394:  		SetConst  *Var0  00000001
  3A4:  		SetConst  *Var1  003A0104
  3B4:  		ExecWait  DoDeath
  3C0:  		Return
  3C8:  	Case  ==  .Event:RecoverStatus % 31
  3D4:  		SetConst  *Var0  00000001
  3E4:  		SetConst  *Var1  003A0101
  3F4:  		ExecWait  DoRecover
  400:  	Case  ==  .Event:ScareAway % 39
  40C:  		SetConst  *Var0  00000001
  41C:  		SetConst  *Var1  003A0102
  42C:  		SetConst  *Var2  003A0104
  43C:  		ExecWait  DoScareAway
  448:  		Return
  450:  	Case  ==  .Event:BeginAirLift % 3A
  45C:  		SetConst  *Var0  00000001
  46C:  		SetConst  *Var1  003A0104
  47C:  		ExecWait  DoAirLift
  488:  	Case  ==  .Event:BlowAway % 16
  494:  		SetConst  *Var0  00000001
  4A4:  		SetConst  *Var1  003A0104
  4B4:  		ExecWait  DoBlowAway
  4C0:  		Return
  4C8:  	Default
  4D0:  EndSwitch
  4D8:  Call  EnableIdleScript  ( .Actor:Self 00000001 )
  4EC:  Call  UseIdleAnimation  ( .Actor:Self .True )
  500:  Return
  508:  End
}

#new:Script $Script_TakeTurn_8022A18C
{
    0:  Call  UseIdleAnimation  ( .Actor:Self .False )
   14:  Call  EnableIdleScript  ( .Actor:Self 00000000 )
   28:  Call  SetTargetActor    ( .Actor:Self .Actor:Player )
   3C:  Call  UseBattleCamPreset    ( 0000003F )
   4C:  Call  BattleCamTargetActor  ( .Actor:Self )
   5C:  Call  8024ECF8  ( FFFFFFFF 00000001 00000000 )
   74:  Call  GetBattlePhase    ( *Var0 )
   84:  If  *Var0  ==  00000001
   94:  	Call  SetGoalToTarget   ( .Actor:Self )
   A4:  	Call  GetGoalPos        ( .Actor:Self *Var0 *Var1 *Var2 )
   C0:  	Add   *Var0  0000001B
   D0:  	Set   *Var1  00000000
   E0:  	Sub   *Var2  00000006
   F0:  	Call  SetActorPos       ( .Actor:Self *Var0 *Var1 *Var2 )
  10C:  	Wait  15`
  118:  Else
  120:  	Call  SetAnimation      ( .Actor:Self 00000001 003A0102 )
  138:  	Call  SetActorSpeed     ( .Actor:Self *Fixed[4.0] )
  14C:  	Call  SetGoalToTarget   ( .Actor:Self )
  15C:  	Call  GetStatusFlags    ( .Actor:Self *Var0 )
  170:  	If  *Var0  !&  ~Flags:StatusFlags:Shrink % 80000
  180:  		Call  AddGoalPos    ( .Actor:Self  27`  0`  -6` )
  19C:  	Else
  1A4:  		Call  AddGoalPos    ( .Actor:Self  10`  0`  -6` )
  1C0:  	EndIf
  1C8:  	Call  RunToGoal     ( .Actor:Self  0` .False )
  1E0:  	Call  SetAnimation  ( .Actor:Self 00000001 003A0101 )
  1F8:  	Wait  10`
  204:  EndIf
  20C:  Call  EnemyTestTarget   ( .Actor:Self *Var0 ~Flags:DamageType:0 00000000 00000001 00000010 )
  230:  Switch  *Var0
  23C:  	CaseOR  ==  .HitResult:Miss % 6
  248:  	CaseOR  ==  .HitResult:Lucky % 5
  254:  		Call  PlaySoundAtActor  ( .Actor:Self 000020C5 )
  268:  		Call  SetAnimation      ( .Actor:Self 00000001 003A0108 )
  280:  		Wait  20`
  28C:  		If  *Var0  ==  .HitResult:Lucky % 5
  29C:  			Call  EnemyTestTarget   ( .Actor:Self *Var0 ~Flags:DamageType:TriggerLucky 00000000 00000000 00000000 )
  2C0:  			Wait  20`
  2CC:  		EndIf
  2D4:  		Call  UseBattleCamPreset    ( 00000002 )
  2E4:  		Call  YieldTurn ( )
  2F0:  		Call  SetActorYaw   ( .Actor:Self  180` )
  304:  		Call  AddActorDecoration    ( .Actor:Self 00000001 00000000 .Decoration:Sweat )
  320:  		SetConst  *Var0  00000001
  330:  		SetConst  *Var1  003A0102
  340:  		ExecWait  DoReturnHome
  34C:  		Call  RemoveActorDecoration ( .Actor:Self 00000001 00000000 )
  364:  		Call  SetActorYaw   ( .Actor:Self  0` )
  378:  		Call  EnableIdleScript      ( .Actor:Self 00000001 )
  38C:  		Call  UseIdleAnimation      ( .Actor:Self .True )
  3A0:  		Return
  3A8:  	EndCaseGroup
  3B0:  EndSwitch
  3B8:  Call  GetBattlePhase    ( *Var0 )
  3C8:  If  *Var0  ==  00000001
  3D8:  	Goto  28
  3E4:  EndIf
  3EC:  Call  GetActorHP    ( .Actor:Self *Var0 )
  400:  Call  GetEnemyMaxHP ( .Actor:Self *Var1 )
  414:  MulF  *Var0  *Fixed[100.0]
  424:  DivF  *Var0  *Var1
  434:  If  *Var0  <  0000001E
  444:  	Goto  32
  450:  EndIf
  458:  Call  RandInt   ( 00000064 *Var0 )
  46C:  If  *Var0  <  00000019
  47C:  	Goto  32
  488:  EndIf
  490:  Label  28
  49C:  Call  SetAnimation      ( .Actor:Self 00000001 003A0109 )
  4B4:  Wait  15`
  4C0:  Call  PlaySoundAtActor  ( .Actor:Self 000020C5 )
  4D4:  Call  SetAnimation      ( .Actor:Self 00000001 003A010A )
  4EC:  Wait  2`
  4F8:  Wait  2`
  504:  Call  SetGoalToTarget   ( .Actor:Self )
  514:  Call  EnemyDamageTarget ( .Actor:Self *Var0 ~Flags:DamageType:NoContact 00000000 00000000 00000005 00000020 )
  53C:  Thread
  544:  	Call  ShakeCam  ( .Cam:Battle 00000000  10` *Fixed[1.5] )
  560:  EndThread
  568:  Goto  64
  574:  Label  32
  580:  Call  SetAnimation      ( .Actor:Self 00000001 003A0109 )
  598:  Wait  15`
  5A4:  Call  PlaySoundAtActor  ( .Actor:Self 000020C5 )
  5B8:  Call  SetAnimation      ( .Actor:Self 00000001 003A010A )
  5D0:  Wait  2`
  5DC:  Wait  2`
  5E8:  Call  SetGoalToTarget   ( .Actor:Self )
  5F8:  Call  EnemyDamageTarget ( .Actor:Self *Var0 ~Flags:DamageType:NoContact 00000000 00000000 00000002 00000010 )
  620:  Thread
  628:  	Call  ShakeCam  ( .Cam:Battle 00000000  10` *Fixed[1.5] )
  644:  EndThread
  64C:  Call  GetActorHP    ( .Actor:Player *Var0 )
  660:  If  *Var0  ==  00000000
  670:  	Goto  64
  67C:  EndIf
  684:  Call  SetAnimation      ( .Actor:Self 00000001 003A0109 )
  69C:  Wait  15`
  6A8:  Call  PlaySoundAtActor  ( .Actor:Self 000020C5 )
  6BC:  Call  SetAnimation      ( .Actor:Self 00000001 003A010A )
  6D4:  Wait  2`
  6E0:  Wait  2`
  6EC:  Call  SetGoalToTarget   ( .Actor:Self )
  6FC:  Call  EnemyDamageTarget ( .Actor:Self *Var0 ~Flags:DamageType:NoContact 00000000 00000000 00000002 00000040 )
  724:  Thread
  72C:  	Call  ShakeCam  ( .Cam:Battle 00000000  10` *Fixed[1.5] )
  748:  EndThread
  750:  Call  GetActorHP    ( .Actor:Player *Var0 )
  764:  If  *Var0  ==  00000000
  774:  	Goto  64
  780:  EndIf
  788:  Call  SetAnimation      ( .Actor:Self 00000001 003A0109 )
  7A0:  Wait  15`
  7AC:  Call  PlaySoundAtActor  ( .Actor:Self 000020C5 )
  7C0:  Call  SetAnimation      ( .Actor:Self 00000001 003A010A )
  7D8:  Wait  2`
  7E4:  Wait  2`
  7F0:  Call  SetGoalToTarget   ( .Actor:Self )
  800:  Call  EnemyDamageTarget ( .Actor:Self *Var0 ~Flags:DamageType:NoContact 00000000 00000000 00000002 00000020 )
  828:  Thread
  830:  	Call  ShakeCam  ( .Cam:Battle 00000000  10` *Fixed[1.5] )
  84C:  EndThread
  854:  Label  64
  860:  Switch  *Var0
  86C:  	CaseOR  ==  .HitResult:Hit % 0
  878:  	CaseOR  ==  .HitResult:QuakeImmune % 2
  884:  		Call  UseBattleCamPreset    ( 00000002 )
  894:  		Wait  19`
  8A0:  		Call  YieldTurn ( )
  8AC:  		SetConst  *Var0  00000001
  8BC:  		SetConst  *Var1  003A0102
  8CC:  		ExecWait  DoReturnHome
  8D8:  	EndCaseGroup
  8E0:  EndSwitch
  8E8:  Call  EnableIdleScript  ( .Actor:Self 00000001 )
  8FC:  Call  UseIdleAnimation  ( .Actor:Self .True )
  910:  Return
  918:  End
}

PADDING: 8022AAAC to 8022AAB0 (0063664C to 00636650)
00000000

#new:IdleAnimations $IdleAnimations_8022AAB0
{
	.Status:Normal    00360101
	.Status:Stone     00360100
	.Status:Sleep     00360100
	.Status:Poison    00360101
	.Status:Stop      00360100
	.Status:Static    00360100
	.Status:Paralyze  00360100
	.Status:Paralyze  00360100
	.Status:Dizzy     0036010F
	.Status:End
}

#new:DefenseTable $DefenseTable_8022AAFC
{
	.Element:Normal 00000000
	.Element:Fire   FFFFFFFE
	.Element:Ice    00000063
	.Element:End
}

#new:StatusTable $StatusTable_8022AB18
{
	.Status:Normal      0`
	.Status:Default     0`
	.Status:Sleep      95`
	.Status:Poison      0`
	.Status:Frozen      0`
	.Status:Dizzy      50`
	.Status:Fear        0`
	.Status:Static      0`
	.Status:Paralyze   90`
	.Status:Shrink     75`
	.Status:Stop       85`
	.Status:DefaultTurnMod    0`
	.Status:SleepTurnMod      1`
	.Status:PoisonTurnMod     0`
	.Status:FrozenTurnMod     0`
	.Status:DizzyTurnMod      0`
	.Status:FearTurnMod       0`
	.Status:StaticTurnMod     0`
	.Status:ParalyzeTurnMod   0`
	.Status:ShrinkTurnMod     0`
	.Status:StopTurnMod       0`
	.Status:End
}

#new:PartsTable $PartsTable_8022ABC4
{
	00800000 01000000 F13200FF $IdleAnimations_8022AAB0 $DefenseTable_8022AAFC 00000008 00000000 03F20000 00000000
}

#new:Actor $FrostPiranha
{
	% stats
	[Index]        39b
	[Level]        22`b
	[MaxHP]        10`b
	[Coins]         1`b
	[Flags]       00000000
	[StatusTable] $StatusTable_8022AB18
	% ai
	[PartsCount]    1`s
	[PartsTable]  $PartsTable_8022ABC4
	[Script]      $Script_Init_8022AC10
	% move effectiveness
	[Escape]       70`b
	[Item]         20`b
	[AirLift]      20`b
	[Hurricane]    20`b % Bow's "Spook" as well
	[UpAndAway]    95`b
	[PowerBounce]  90`b
	[SpinSmash]     0`b % weight (0-4)
	% ui positions
	[Size]         60`b  52`b % width height
	[HealthBar]     0`b   0`b % dx dy
	[StatusTurn]  -22`b  32`b % dx dy
	[StatusIcon]    1`b  44`b % dx dy
}

#new:Script $Script_Init_8022AC10
{
    0:  Call  BindTakeTurn      ( .Actor:Self $Script_TakeTurn_8022B2D4 )
   14:  Call  BindIdle  ( .Actor:Self $Script_Idle_8022AC5C )
   28:  Call  BindHandleEvent   ( .Actor:Self $Script_HandleEvent_8022ADFC )
   3C:  Return
   44:  End
}

#new:Script $Script_Idle_8022AC5C
{
    0:  Label  0
    C:  Call  GetStatusFlags    ( .Actor:Self *VarA )
   20:  If  *VarA  &  ~Flags:StatusFlags:Dizzy % 40000
   30:  	Call  SetTargetOffset       ( .Actor:Self 00000001  -27`  33` )
   4C:  	Call  8027D4C8  ( FFFFFF81 00000001 00000005 FFFFFFF5 )
   68:  	Call  $Function_802195F0    ( FFFFFFDB 00000009 FFFFFFF9 0000001F )
   84:  Else
   8C:  	Call  SetTargetOffset       ( .Actor:Self 00000001  -15`  50` )
   A8:  	Call  8027D4C8  ( FFFFFF81 00000001 00000003 FFFFFFF2 )
   C4:  	Call  $Function_802195F0    ( FFFFFFEA 00000020 00000001 0000002C )
   E0:  EndIf
   E8:  Wait  1`
   F4:  Goto  0
  100:  Return
  108:  End
}

#new:Script $Script_8022AD6C
{
    0:  Call  SetActorSpeed ( .Actor:Self *Fixed[4.0] )
   14:  Call  SetAnimation  ( .Actor:Self 00000001 00360103 )
   2C:  Call  SetGoalToHome ( .Actor:Self )
   3C:  Call  RunToGoal     ( .Actor:Self  0` .False )
   54:  Call  SetAnimation  ( .Actor:Self 00000001 00360101 )
   6C:  Call  SetActorYaw   ( .Actor:Self  0` )
   80:  Return
   88:  End
}

#new:Script $Script_HandleEvent_8022ADFC
{
    0:  Call  UseIdleAnimation  ( .Actor:Self .False )
   14:  Call  EnableIdleScript  ( .Actor:Self 00000000 )
   28:  Call  GetLastEvent      ( .Actor:Self *Var0 )
   3C:  Switch  *Var0
   48:  	CaseOR  ==  .Event:HitCombo % 9
   54:  	CaseOR  ==  .Event:Hit % A
   60:  		SetConst  *Var0  00000001
   70:  		SetConst  *Var1  0036010E
   80:  		ExecWait  DoNormalHit
   8C:  	EndCaseGroup
   94:  	Case  ==  .Event:BurnHit % E
   A0:  		SetConst  *Var0  00000001
   B0:  		SetConst  *Var1  00360110
   C0:  		SetConst  *Var2  00360111
   D0:  		ExecWait  DoBurnHit
   DC:  	Case  ==  .Event:BurnDeath % 24
   E8:  		SetConst  *Var0  00000001
   F8:  		SetConst  *Var1  00360110
  108:  		SetConst  *Var2  00360111
  118:  		ExecWait  DoBurnHit
  124:  		SetConst  *Var0  00000001
  134:  		SetConst  *Var1  00360111
  144:  		ExecWait  DoDeath
  150:  		Return
  158:  	Case  ==  .Event:SpinSmashHit % B
  164:  		SetConst  *Var0  00000001
  174:  		SetConst  *Var1  0036010E
  184:  		ExecWait  DoSpinSmashHit
  190:  	Case  ==  .Event:SpinSmashDeath % 21
  19C:  		SetConst  *Var0  00000001
  1AC:  		SetConst  *Var1  0036010E
  1BC:  		ExecWait  DoSpinSmashHit
  1C8:  		SetConst  *Var0  00000001
  1D8:  		SetConst  *Var1  0036010E
  1E8:  		ExecWait  DoDeath
  1F4:  		Return
  1FC:  	Case  ==  .Event:ShockHit % 2F
  208:  		SetConst  *Var0  00000001
  218:  		SetConst  *Var1  0036010E
  228:  		ExecWait  DoShockHit
  234:  		Call  SetActorSpeed ( .Actor:Self *Fixed[4.0] )
  248:  		ExecWait  $Script_8022AD6C
  254:  	Case  ==  .Event:ShockDeath % 26
  260:  		SetConst  *Var0  00000001
  270:  		SetConst  *Var1  0036010E
  280:  		ExecWait  DoShockHit
  28C:  		SetConst  *Var0  00000001
  29C:  		SetConst  *Var1  0036010E
  2AC:  		ExecWait  DoDeath
  2B8:  		Return
  2C0:  	CaseOR  ==  00000017 % 17
  2CC:  	CaseOR  ==  .Event:Immune % 19
  2D8:  	CaseOR  ==  .Event:AirLiftFailed % 1F
  2E4:  		SetConst  *Var0  00000001
  2F4:  		SetConst  *Var1  00360101
  304:  		ExecWait  DoImmune
  310:  	EndCaseGroup
  318:  	Case  ==  .Event:Death % 20
  324:  		SetConst  *Var0  00000001
  334:  		SetConst  *Var1  0036010E
  344:  		ExecWait  DoNormalHit
  350:  		Wait  10`
  35C:  		SetConst  *Var0  00000001
  36C:  		SetConst  *Var1  0036010E
  37C:  		ExecWait  DoDeath
  388:  		Return
  390:  	Case  ==  .Event:RecoverStatus % 31
  39C:  		SetConst  *Var0  00000001
  3AC:  		SetConst  *Var1  00360101
  3BC:  		ExecWait  DoRecover
  3C8:  	Case  ==  .Event:ScareAway % 39
  3D4:  		SetConst  *Var0  00000001
  3E4:  		SetConst  *Var1  00360103
  3F4:  		SetConst  *Var2  0036010E
  404:  		ExecWait  DoScareAway
  410:  		Return
  418:  	Case  ==  .Event:BeginAirLift % 3A
  424:  		SetConst  *Var0  00000001
  434:  		SetConst  *Var1  00360103
  444:  		ExecWait  DoAirLift
  450:  	Case  ==  .Event:BlowAway % 16
  45C:  		SetConst  *Var0  00000001
  46C:  		SetConst  *Var1  00360103
  47C:  		ExecWait  DoBlowAway
  488:  		Return
  490:  	Default
  498:  EndSwitch
  4A0:  Call  EnableIdleScript  ( .Actor:Self 00000001 )
  4B4:  Call  UseIdleAnimation  ( .Actor:Self .True )
  4C8:  Return
  4D0:  End
}

#new:Script $Script_TakeTurn_8022B2D4
{
    0:  Call  GetBattlePhase    ( *Var0 )
   10:  If  *Var0  ==  00000001
   20:  	ExecWait  $Script_8022B3AC
   2C:  	Return
   34:  EndIf
   3C:  Call  GetStatusFlags    ( .Actor:Player *Var0 )
   50:  If  *Var0  &  ~Flags:StatusFlags:Frozen % 4000
   60:  	ExecWait  $Script_8022B3AC
   6C:  	Return
   74:  EndIf
   7C:  Call  RandInt   ( 000003E8 *Var0 )
   90:  If  *Var0  <  000000FA
   A0:  	ExecWait  $Script_8022BD44
   AC:  Else
   B4:  	ExecWait  $Script_8022B3AC
   C0:  EndIf
   C8:  Return
   D0:  End
}

#new:Script $Script_8022B3AC
{
    0:  Call  UseIdleAnimation  ( .Actor:Self .False )
   14:  Call  EnableIdleScript  ( .Actor:Self 00000000 )
   28:  Call  SetTargetActor    ( .Actor:Self .Actor:Player )
   3C:  Call  GetBattlePhase    ( *Var0 )
   4C:  If  *Var0  ==  00000001
   5C:  	Call  SetAnimation      ( .Actor:Self 00000001 00360118 )
   74:  	Call  SetActorFlagBits  ( .Actor:Self 00000004 .True )
   8C:  	Wait  8`
   98:  	Call  SetGoalToTarget   ( .Actor:Self )
   A8:  	Call  GetGoalPos        ( .Actor:Self *Var0 *Var1 *Var2 )
   C4:  	Add   *Var0  0000001B
   D4:  	Set   *Var1  00000000
   E4:  	Set   *Var3  *Var0
   F4:  	Set   *Var4  *Var1
  104:  	Set   *Var5  *Var2
  114:  	Call  GetActorPos       ( .Actor:Player *Var6 *Var7 *Var8 )
  130:  	Add   *Var3  *Var6
  140:  	Add   *Var4  *Var7
  150:  	Add   *Var5  *Var8
  160:  	Div   *Var3  00000002
  170:  	Div   *Var4  00000002
  180:  	Div   *Var5  00000002
  190:  	Call  UseBattleCamPreset    ( 00000013 )
  1A0:  	Call  SetBattleCamTarget    ( *Var3 *Var4 *Var5 )
  1B8:  	Call  SetBattleCamZoom  (  300` )
  1C8:  	Call  SetBattleCamOffsetZ   (  40` )
  1D8:  	Wait  20`
  1E4:  	Call  PlaySoundAtActor  ( .Actor:Self .Sound:MoleSurface )
  1F8:  	Call  SetActorPos       ( .Actor:Self *Var0 *Var1 *Var2 )
  214:  	Call  SetActorFlagBits  ( .Actor:Self 00000004 .False )
  22C:  	Call  SetAnimation      ( .Actor:Self 00000001 00360117 )
  244:  	Wait  8`
  250:  Else
  258:  	Call  UseBattleCamPreset    ( 0000003F )
  268:  	Call  BattleCamTargetActor  ( .Actor:Self )
  278:  	Call  8024ECF8  ( FFFFFFFF 00000001 00000000 )
  290:  	Call  SetAnimation      ( .Actor:Self 00000001 00360103 )
  2A8:  	Call  SetActorSpeed     ( .Actor:Self *Fixed[4.0] )
  2BC:  	Call  SetAnimation      ( .Actor:Self 00000001 00360103 )
  2D4:  	Call  SetGoalToTarget   ( .Actor:Self )
  2E4:  	Call  GetGoalPos        ( .Actor:Self *Var0 *Var1 *Var2 )
  300:  	Call  GetStatusFlags    ( .Actor:Self *VarA )
  314:  	If  *VarA  &  ~Flags:StatusFlags:Shrink % 80000
  324:  		Add   *Var0  0000000A
  334:  	Else
  33C:  		Add   *Var0  0000001B
  34C:  	EndIf
  354:  	Set   *Var1  00000000
  364:  	Call  SetGoalPos    ( .Actor:Self *Var0 *Var1 *Var2 )
  380:  	Call  RunToGoal     ( .Actor:Self  0` .False )
  398:  	Call  SetAnimation  ( .Actor:Self 00000001 00360101 )
  3B0:  EndIf
  3B8:  Thread
  3C0:  	Wait  8`
  3CC:  	Call  PlaySoundAtActor  ( .Actor:Self 000020DE )
  3E0:  EndThread
  3E8:  Call  EnemyTestTarget   ( .Actor:Self *VarA ~Flags:DamageType:0 00000000 00000001 00000010 )
  40C:  Switch  *VarA
  418:  	CaseOR  ==  .HitResult:Miss % 6
  424:  	CaseOR  ==  .HitResult:Lucky % 5
  430:  		Call  SetAnimation  ( .Actor:Self 00000001 00360105 )
  448:  		Wait  10`
  454:  		Call  SetAnimation  ( .Actor:Self 00000001 00360106 )
  46C:  		Wait  6`
  478:  		Call  SetAnimation  ( .Actor:Self 00000001 00360107 )
  490:  		If  *VarA  ==  .HitResult:Lucky % 5
  4A0:  			Call  EnemyTestTarget   ( .Actor:Self *Var0 ~Flags:DamageType:TriggerLucky 00000000 00000000 00000000 )
  4C4:  		EndIf
  4CC:  		Wait  14`
  4D8:  		Call  UseBattleCamPreset    ( 00000002 )
  4E8:  		Call  YieldTurn ( )
  4F4:  		Call  GetBattlePhase        ( *Var0 )
  504:  		If  *Var0  ==  00000001
  514:  			Call  SetActorSpeed ( .Actor:Self *Fixed[7.0] )
  528:  			Call  SetActorFlagBits  ( .Actor:Self 00000004 .True )
  540:  			Call  PlaySoundAtActor  ( .Actor:Self .Sound:MoleDig )
  554:  			Call  SetAnimation  ( .Actor:Self 00000001 00360118 )
  56C:  			Wait  10`
  578:  			Call  SetGoalToHome ( .Actor:Self )
  588:  			Call  GetGoalPos    ( .Actor:Self *Var0 *Var1 *Var2 )
  5A4:  			Call  SetActorPos   ( .Actor:Self *Var0 *Var1 *Var2 )
  5C0:  			Call  PlaySoundAtActor  ( .Actor:Self .Sound:MoleSurface )
  5D4:  			Call  SetAnimation  ( .Actor:Self 00000001 00360117 )
  5EC:  			Wait  10`
  5F8:  			Call  SetActorFlagBits  ( .Actor:Self 00000004 .False )
  610:  		Else
  618:  			Call  SetAnimationRate  ( .Actor:Self 00000001 *Fixed[2.0] )
  630:  			Call  SetActorSpeed     ( .Actor:Self *Fixed[7.0] )
  644:  			Call  SetActorYaw       ( .Actor:Self  180` )
  658:  			Call  AddActorDecoration    ( .Actor:Self 00000001 00000000 .Decoration:Sweat )
  674:  			ExecWait  $Script_8022AD6C
  680:  			Call  RemoveActorDecoration ( .Actor:Self 00000001 00000000 )
  698:  			Call  SetAnimationRate  ( .Actor:Self 00000001 *Fixed[1.0] )
  6B0:  		EndIf
  6B8:  		Call  EnableIdleScript  ( .Actor:Self 00000001 )
  6CC:  		Call  UseIdleAnimation  ( .Actor:Self .True )
  6E0:  		Return
  6E8:  	EndCaseGroup
  6F0:  EndSwitch
  6F8:  Call  SetAnimation      ( .Actor:Self 00000001 00360105 )
  710:  Wait  10`
  71C:  Call  SetAnimation      ( .Actor:Self 00000001 00360106 )
  734:  Wait  1`
  740:  Wait  2`
  74C:  Call  SetGoalToTarget   ( .Actor:Self )
  75C:  Call  EnemyDamageTarget ( .Actor:Self *Var0 ~Flags:DamageType:0 00000000 00000000 00000004 00000020 )
  784:  Set   *VarF  *Var0
  794:  Switch  *VarF
  7A0:  	CaseOR  ==  .HitResult:Hit % 0
  7AC:  	CaseOR  ==  .HitResult:QuakeImmune % 2
  7B8:  		Call  UseBattleCamPreset    ( 00000002 )
  7C8:  		Wait  10`
  7D4:  		Call  SetAnimation  ( .Actor:Self 00000001 00360107 )
  7EC:  		Wait  20`
  7F8:  		Call  YieldTurn ( )
  804:  		Call  GetBattlePhase        ( *Var0 )
  814:  		If  *Var0  ==  00000001
  824:  			Call  SetActorSpeed ( .Actor:Self *Fixed[7.0] )
  838:  			Call  SetActorFlagBits  ( .Actor:Self 00000004 .True )
  850:  			Call  PlaySoundAtActor  ( .Actor:Self .Sound:MoleDig )
  864:  			Call  SetAnimation  ( .Actor:Self 00000001 00360118 )
  87C:  			Wait  10`
  888:  			Call  SetGoalToHome ( .Actor:Self )
  898:  			Call  GetGoalPos    ( .Actor:Self *Var0 *Var1 *Var2 )
  8B4:  			Call  SetActorPos   ( .Actor:Self *Var0 *Var1 *Var2 )
  8D0:  			Call  PlaySoundAtActor  ( .Actor:Self .Sound:MoleSurface )
  8E4:  			Call  SetAnimation  ( .Actor:Self 00000001 00360117 )
  8FC:  			Wait  10`
  908:  			Call  SetActorFlagBits  ( .Actor:Self 00000004 .False )
  920:  		Else
  928:  			Call  SetActorSpeed ( .Actor:Self *Fixed[4.0] )
  93C:  			ExecWait  $Script_8022AD6C
  948:  		EndIf
  950:  	EndCaseGroup
  958:  EndSwitch
  960:  Call  EnableIdleScript  ( .Actor:Self 00000001 )
  974:  Call  UseIdleAnimation  ( .Actor:Self .True )
  988:  Return
  990:  End
}

#new:Script $Script_8022BD44
{
    0:  Call  UseIdleAnimation  ( .Actor:Self .False )
   14:  Call  EnableIdleScript  ( .Actor:Self 00000000 )
   28:  Call  SetTargetActor    ( .Actor:Self .Actor:Player )
   3C:  Call  UseBattleCamPreset    ( 0000003F )
   4C:  Call  BattleCamTargetActor  ( .Actor:Self )
   5C:  Call  8024ECF8  ( FFFFFFFF 00000001 00000000 )
   74:  Call  SetAnimation      ( .Actor:Self 00000001 00360103 )
   8C:  Call  SetActorSpeed     ( .Actor:Self *Fixed[4.0] )
   A0:  Call  SetAnimation      ( .Actor:Self 00000001 00360103 )
   B8:  Call  SetGoalToTarget   ( .Actor:Self )
   C8:  Call  GetGoalPos        ( .Actor:Self *Var0 *Var1 *Var2 )
   E4:  Call  GetStatusFlags    ( .Actor:Self *VarA )
   F8:  If  *VarA  &  ~Flags:StatusFlags:Shrink % 80000
  108:  	Add   *Var0  00000014
  118:  Else
  120:  	Add   *Var0  00000032
  130:  EndIf
  138:  Set   *Var1  00000000
  148:  Call  SetGoalPos    ( .Actor:Self *Var0 *Var1 *Var2 )
  164:  Call  RunToGoal     ( .Actor:Self  0` .False )
  17C:  Call  SetAnimation  ( .Actor:Self 00000001 00360101 )
  194:  Call  SetAnimation  ( .Actor:Self 00000001 0036010B )
  1AC:  Wait  11`
  1B8:  Call  PlaySoundAtActor  ( .Actor:Self 000003AB )
  1CC:  Call  SetGoalToTarget   ( .Actor:Self )
  1DC:  Call  GetGoalPos    ( .Actor:Self *Var0 *Var1 *Var2 )
  1F8:  Call  GetStatusFlags    ( .Actor:Self *VarA )
  20C:  If  *VarA  &  ~Flags:StatusFlags:Shrink % 80000
  21C:  	Add   *Var0  0000000C
  22C:  	Set   *Var1  00000005
  23C:  	SetF  *Var3  *Fixed[0.4]
  24C:  Else
  254:  	Add   *Var0  00000020
  264:  	Set   *Var1  0000000D
  274:  	SetF  *Var3  *Fixed[1.0]
  284:  EndIf
  28C:  Call  $Function_802196BC    ( *Var2 *Var0 *Var1 *Var2 *Var3 0000001E 00000078 00000000 00000078 )
  2BC:  Wait  1`
  2C8:  Call  SetAnimation  ( .Actor:Self 00000001 0036010C )
  2E0:  Wait  5`
  2EC:  Call  EnemyTestTarget       ( .Actor:Self *VarA ~Flags:DamageType:Ice ~DebuffType:0|Frozen:0:0` 00000001 00000010 )
  310:  Switch  *VarA
  31C:  	CaseOR  ==  .HitResult:Miss % 6
  328:  	CaseOR  ==  .HitResult:Lucky % 5
  334:  		Wait  10`
  340:  		Call  SetAnimation  ( .Actor:Self 00000001 0036010D )
  358:  		If  *VarA  ==  .HitResult:Lucky % 5
  368:  			Call  EnemyTestTarget   ( .Actor:Self *Var0 ~Flags:DamageType:TriggerLucky 00000000 00000000 00000000 )
  38C:  		EndIf
  394:  		Wait  14`
  3A0:  		Call  UseBattleCamPreset    ( 00000002 )
  3B0:  		Call  YieldTurn ( )
  3BC:  		Call  SetAnimationRate  ( .Actor:Self 00000001 *Fixed[2.0] )
  3D4:  		Call  SetActorSpeed     ( .Actor:Self *Fixed[7.0] )
  3E8:  		Call  SetActorYaw       ( .Actor:Self  180` )
  3FC:  		Call  AddActorDecoration    ( .Actor:Self 00000001 00000000 .Decoration:Sweat )
  418:  		ExecWait  $Script_8022AD6C
  424:  		Call  RemoveActorDecoration ( .Actor:Self 00000001 00000000 )
  43C:  		Call  SetAnimationRate  ( .Actor:Self 00000001 *Fixed[1.0] )
  454:  		Call  EnableIdleScript  ( .Actor:Self 00000001 )
  468:  		Call  UseIdleAnimation  ( .Actor:Self .True )
  47C:  		Return
  484:  	EndCaseGroup
  48C:  EndSwitch
  494:  Wait  2`
  4A0:  Call  SetGoalToTarget   ( .Actor:Self )
  4B0:  Call  EnemyDamageTarget ( .Actor:Self *Var0 ~Flags:DamageType:StatusAlwaysHits|Ice 0000FFFF ~DebuffType:0|Frozen:2:254` 00000000 00000020 )
  4D8:  Set   *VarF  *Var0
  4E8:  Switch  *VarF
  4F4:  	CaseOR  ==  .HitResult:Hit % 0
  500:  	CaseOR  ==  .HitResult:QuakeImmune % 2
  50C:  		Call  UseBattleCamPreset    ( 00000002 )
  51C:  		Wait  10`
  528:  		Call  SetAnimation  ( .Actor:Self 00000001 0036010D )
  540:  		Wait  20`
  54C:  		Call  YieldTurn ( )
  558:  		Call  SetActorSpeed ( .Actor:Self *Fixed[6.0] )
  56C:  		ExecWait  $Script_8022AD6C
  578:  	EndCaseGroup
  580:  EndSwitch
  588:  Call  EnableIdleScript  ( .Actor:Self 00000001 )
  59C:  Call  UseIdleAnimation  ( .Actor:Self .True )
  5B0:  Return
  5B8:  End
}

PADDING: 8022C304 to 8022C310 (00637EA4 to 00637EB0)
00000000 00000000 00000000

#new:DefenseTable $DefenseTable_8022C310
{
	.Element:Normal 00000000
	.Element:End
}

% Origin: HINT
#new:DefenseTable $DefenseTable_8022C31C
{
	.Element:Normal 00000000
	.Element:End
}

#new:StatusTable $StatusTable_8022C328
{
	.Status:Normal      0`
	.Status:Default     0`
	.Status:Sleep      50`
	.Status:Poison     50`
	.Status:Frozen      0`
	.Status:Dizzy      75`
	.Status:Fear        0`
	.Status:Static     50`
	.Status:Paralyze   75`
	.Status:Shrink     80`
	.Status:Stop       90`
	.Status:DefaultTurnMod    0`
	.Status:SleepTurnMod      0`
	.Status:PoisonTurnMod     0`
	.Status:FrozenTurnMod     0`
	.Status:DizzyTurnMod      0`
	.Status:FearTurnMod       0`
	.Status:StaticTurnMod     0`
	.Status:ParalyzeTurnMod   0`
	.Status:ShrinkTurnMod     0`
	.Status:StopTurnMod      -1`
	.Status:End
}

% Origin: HINT
#new:StatusTable $StatusTable_8022C3D4
{
	.Status:Normal      0`
	.Status:Default     0`
	.Status:Sleep      50`
	.Status:Poison     50`
	.Status:Frozen      0`
	.Status:Dizzy     100`
	.Status:Fear        0`
	.Status:Static     50`
	.Status:Paralyze   75`
	.Status:Shrink     80`
	.Status:Stop       90`
	.Status:DefaultTurnMod    0`
	.Status:SleepTurnMod      0`
	.Status:PoisonTurnMod     0`
	.Status:FrozenTurnMod     0`
	.Status:DizzyTurnMod      0`
	.Status:FearTurnMod       0`
	.Status:StaticTurnMod     0`
	.Status:ParalyzeTurnMod   0`
	.Status:ShrinkTurnMod     0`
	.Status:StopTurnMod      -1`
	.Status:End
}

#new:PartsTable $PartsTable_8022C480
{
	00800000 01000000 022300FF $IdleAnimations_8022C560 $DefenseTable_8022C310 00000000 00000000 FBF40000 00000000
}

% Origin: HINT
#new:PartsTable $PartsTable_8022C4A4
{
	00020001 01000000 022300FF $IdleAnimations_8022C560 $DefenseTable_8022C31C 00000000 00000000 FBF40000 00000000
	00800000 02000000 F62300FF $IdleAnimations_8022C5AC $DefenseTable_8022C31C 00800000 00000000 00F80000 00000000
	00020001 03000000 000000FF $IdleAnimations_8022C5F8 $DefenseTable_8022C31C 00000000 00000000 00000000 00000000
}

#new:Actor $GRYMagikoopa
{
	% stats
	[Index]        57b
	[Level]        21`b
	[MaxHP]        11`b
	[Coins]         2`b
	[Flags]       00000000
	[StatusTable] $StatusTable_8022C328
	% ai
	[PartsCount]    1`s
	[PartsTable]  $PartsTable_8022C480
	[Script]      $Script_Init_8022E748
	% move effectiveness
	[Escape]       40`b
	[Item]         40`b
	[AirLift]      80`b
	[Hurricane]    70`b % Bow's "Spook" as well
	[UpAndAway]    95`b
	[PowerBounce]  75`b
	[SpinSmash]     0`b % weight (0-4)
	% ui positions
	[Size]         36`b  40`b % width height
	[HealthBar]     0`b   0`b % dx dy
	[StatusTurn]  -10`b  20`b % dx dy
	[StatusIcon]   10`b  32`b % dx dy
}

% Origin: HINT
#new:Actor $FlyingGRYMagikoopa
{
	% stats
	[Index]        58b
	[Level]        21`b
	[MaxHP]        11`b
	[Coins]         2`b
	[Flags]       00000200
	[StatusTable] $StatusTable_8022C3D4
	% ai
	[PartsCount]    3`s
	[PartsTable]  $PartsTable_8022C4A4
	[Script]      $Script_Init_8022E7EC
	% move effectiveness
	[Escape]       40`b
	[Item]         40`b
	[AirLift]      95`b
	[Hurricane]    75`b % Bow's "Spook" as well
	[UpAndAway]    95`b
	[PowerBounce]  75`b
	[SpinSmash]     0`b % weight (0-4)
	% ui positions
	[Size]         48`b  40`b % width height
	[HealthBar]     0`b   0`b % dx dy
	[StatusTurn]  -25`b  20`b % dx dy
	[StatusIcon]    1`b  34`b % dx dy
}

% Origin: HINT
#new:IdleAnimations $IdleAnimations_8022C560
{
	.Status:Normal    00560501
	.Status:Stone     00560500
	.Status:Sleep     00560508
	.Status:Poison    00560501
	.Status:Stop      00560500
	.Status:Static    00560501
	.Status:Paralyze  00560500
	.Status:Dizzy     00560507
	.Status:Fear      00560507
	.Status:End
}

% Origin: HINT
#new:IdleAnimations $IdleAnimations_8022C5AC
{
	.Status:Normal    00570501
	.Status:Stone     00570500
	.Status:Sleep     00570508
	.Status:Poison    00570501
	.Status:Stop      00570500
	.Status:Static    00570501
	.Status:Paralyze  00570500
	.Status:Dizzy     00570507
	.Status:Fear      00570507
	.Status:End
}

% Origin: HINT
#new:IdleAnimations $IdleAnimations_8022C5F8
{
	.Status:Normal    0057050A
	.Status:End
}

% Origin: HINT
#new:Script $Script_Idle_8022C604
{
    0:  Return
    8:  End
}

#new:Script $Script_HandleEvent_8022C614
{
    0:  Call  UseIdleAnimation  ( .Actor:Self .False )
   14:  Call  EnableIdleScript  ( .Actor:Self 00000000 )
   28:  Call  GetLastEvent      ( .Actor:Self *Var0 )
   3C:  Switch  *Var0
   48:  	CaseOR  ==  .Event:HitCombo % 9
   54:  	CaseOR  ==  .Event:Hit % A
   60:  		SetConst  *Var0  00000001
   70:  		SetConst  *Var1  00560504
   80:  		ExecWait  DoNormalHit
   8C:  	EndCaseGroup
   94:  	Case  ==  .Event:BurnHit % E
   A0:  		SetConst  *Var0  00000001
   B0:  		SetConst  *Var1  00560505
   C0:  		SetConst  *Var2  00560506
   D0:  		ExecWait  DoBurnHit
   DC:  	Case  ==  .Event:BurnDeath % 24
   E8:  		SetConst  *Var0  00000001
   F8:  		SetConst  *Var1  00560505
  108:  		SetConst  *Var2  00560506
  118:  		ExecWait  DoBurnHit
  124:  		SetConst  *Var0  00000001
  134:  		SetConst  *Var1  00560506
  144:  		ExecWait  DoDeath
  150:  		Return
  158:  	Case  ==  .Event:SpinSmashHit % B
  164:  		SetConst  *Var0  00000001
  174:  		SetConst  *Var1  00560504
  184:  		ExecWait  DoSpinSmashHit
  190:  	Case  ==  .Event:SpinSmashDeath % 21
  19C:  		SetConst  *Var0  00000001
  1AC:  		SetConst  *Var1  00560504
  1BC:  		ExecWait  DoSpinSmashHit
  1C8:  		SetConst  *Var0  00000001
  1D8:  		SetConst  *Var1  00560504
  1E8:  		ExecWait  DoDeath
  1F4:  		Return
  1FC:  	CaseOR  ==  00000017 % 17
  208:  	CaseOR  ==  .Event:Immune % 19
  214:  	CaseOR  ==  .Event:AirLiftFailed % 1F
  220:  		SetConst  *Var0  00000001
  230:  		SetConst  *Var1  00560501
  240:  		ExecWait  DoImmune
  24C:  	EndCaseGroup
  254:  	Case  ==  .Event:Death % 20
  260:  		SetConst  *Var0  00000001
  270:  		SetConst  *Var1  00560504
  280:  		ExecWait  DoNormalHit
  28C:  		Wait  10`
  298:  		SetConst  *Var0  00000001
  2A8:  		SetConst  *Var1  00560504
  2B8:  		ExecWait  DoDeath
  2C4:  		Return
  2CC:  	Case  ==  .Event:RecoverStatus % 31
  2D8:  		SetConst  *Var0  00000001
  2E8:  		SetConst  *Var1  00560501
  2F8:  		ExecWait  DoRecover
  304:  	Case  ==  .Event:ScareAway % 39
  310:  		Call  SetAnimation  ( .Actor:Self 00000001 00560504 )
  328:  		Call  SetActorJumpGravity   ( .Actor:Self *Fixed[1.5] )
  33C:  		Call  GetActorPos   ( .Actor:Self *Var0 *Var1 *Var2 )
  358:  		Call  SetGoalPos    ( .Actor:Self *Var0 *Var1 *Var2 )
  374:  		Call  JumpToGoal    ( .Actor:Self  15` .False .True .False )
  394:  		Wait  15`
  3A0:  		Call  SetAnimation  ( .Actor:Self 00000001 00560502 )
  3B8:  		ExecWait  $Script_GRYMagikoopa_RunAway
  3C4:  		Return
  3CC:  	Case  ==  .Event:BeginAirLift % 3A
  3D8:  		SetConst  *Var0  00000001
  3E8:  		SetConst  *Var1  00560502
  3F8:  		ExecWait  DoAirLift
  404:  	Case  ==  .Event:BlowAway % 16
  410:  		Call  GetStatusFlags    ( .Actor:Self *Var0 )
  424:  		If  *Var0  !&  ~Flags:StatusFlags:Sleep|Frozen|Fear|Paralyze|Dizzy|Stone|Stop % 35D000
  434:  			If  *Var0  &  ~Flags:StatusFlags:Shrink % 80000
  444:  				Call  SetPartDispOffset ( .Actor:Self 00000001 00000000 00000002 00000000 )
  464:  			Else
  46C:  				Call  SetPartDispOffset ( .Actor:Self 00000001 FFFFFFFC 00000005 00000000 )
  48C:  			EndIf
  494:  		EndIf
  49C:  		SetConst  *Var0  00000001
  4AC:  		SetConst  *Var1  00560504
  4BC:  		ExecWait  DoBlowAway
  4C8:  		Return
  4D0:  	Default
  4D8:  EndSwitch
  4E0:  Call  EnableIdleScript  ( .Actor:Self 00000001 )
  4F4:  Call  UseIdleAnimation  ( .Actor:Self .True )
  508:  Return
  510:  End
}

% Origin: HINT
#new:Script $Script_8022CB2C
{
    0:  Call  GetBattleFlags    ( *Var0 )
   10:  If  *Var0  !&  00080000
   20:  	If  *Var0  &  00000240
   30:  		Call  SetActorVar   ( .Actor:Self 00000000 00000001 )
   48:  	EndIf
   50:  Else
   58:  	Call  $Function_80219998    ( *Var0 )
   68:  	Switch  *Var0
   74:  		CaseOR  ==  00000083
   80:  		CaseOR  ==  00000084
   8C:  		CaseOR  ==  00000085
   98:  		CaseOR  ==  00000088
   A4:  			Call  GetBattleFlags    ( *Var0 )
   B4:  			If  *Var0  &  00000240
   C4:  				Call  SetActorVar   ( .Actor:Self 00000000 00000001 )
   DC:  			EndIf
   E4:  		EndCaseGroup
   EC:  	EndSwitch
   F4:  EndIf
   FC:  Return
  104:  End
}

% Origin: HINT
#new:Script $Script_8022CC38
{
    0:  Call  GetActorVar   ( .Actor:Self 00000000 *Var0 )
   18:  If  *Var0  ==  00000001
   28:  	Call  SetAnimation  ( .Actor:Self 00000001 00560504 )
   40:  	Goto  0
   4C:  EndIf
   54:  Call  GetLastElement    ( *Var0 )
   64:  If  *Var0  &  00000400
   74:  	Call  SetAnimation  ( .Actor:Self 00000001 00560504 )
   8C:  	Goto  0
   98:  EndIf
   A0:  Return
   A8:  Label  0
   B4:  Call  8027D32C  ( FFFFFF81 )
   C4:  Call  GetStatusFlags    ( .Actor:Self *Var0 )
   D8:  If  *Var0  &  ~Flags:StatusFlags:Shrink % 80000
   E8:  	Call  SetPartScale  ( .Actor:Self 00000003 *Fixed[0.4] *Fixed[0.4] *Fixed[0.4] )
  108:  EndIf
  110:  Call  SetPartFlagBits   ( .Actor:Self 00000001 00800000 .True )
  12C:  Call  SetPartFlagBits   ( .Actor:Self 00000001 00020001 .False )
  148:  Call  SetPartFlagBits   ( .Actor:Self 00000002 00020001 .True )
  164:  Call  SetPartFlagBits   ( .Actor:Self 00000002 00800000 .False )
  180:  Call  SetPartFlagBits   ( .Actor:Self 00000003 00100000 .True )
  19C:  Call  SetPartFlagBits   ( .Actor:Self 00000003 00000001 .False )
  1B8:  Call  GetActorPos       ( .Actor:Self *Var0 *Var1 *Var2 )
  1D4:  Sub   *Var2  00000001
  1E4:  Call  SetPartPos        ( .Actor:Self 00000003 *Var0 *Var1 *Var2 )
  204:  Call  PlaySoundAtActor  ( .Actor:Self 00000301 )
  218:  Call  GetActorPos       ( .Actor:Self *Var0 *Var1 *Var2 )
  234:  Set   *Var1  00000000
  244:  Call  SetActorJumpGravity   ( .Actor:Self *Fixed[0.8] )
  258:  Call  SetGoalPos        ( .Actor:Self *Var0 *Var1 *Var2 )
  274:  Call  JumpToGoal        ( .Actor:Self  15` .False .True .False )
  294:  Call  $Function_80219A90    ( 00000096 0000000A )
  2A8:  Thread
  2B0:  	Call  ShakeCam  ( .Cam:Battle 00000000  5` *Fixed[0.7] )
  2CC:  EndThread
  2D4:  Call  GetLastEvent  ( .Actor:Self *Var3 )
  2E8:  If  *Var3  ==  0000000F % F
  2F8:  	Call  SetAnimation  ( .Actor:Self 00000001 00560504 )
  310:  	Call  GetActorPos   ( .Actor:Self *Var3 *Var4 *Var5 )
  32C:  	Add   *Var4  0000000A
  33C:  	Add   *Var5  00000005
  34C:  	Call  PlayEffect    ( ~FX:SmokeBurst:Black *Var3 *Var4 *Var5 *Fixed[1.0] 0000000A 00000000 00000000 00000000 00000000 00000000 00000000 00000000 )
  390:  EndIf
  398:  Call  SetGoalPos    ( .Actor:Self *Var0 *Var1 *Var2 )
  3B4:  Call  JumpToGoal    ( .Actor:Self  10` .False .True .False )
  3D4:  Call  SetGoalPos    ( .Actor:Self *Var0 *Var1 *Var2 )
  3F0:  Call  JumpToGoal    ( .Actor:Self  5` .False .True .False )
  410:  Loop  00000014
  41C:  	Call  SetPartFlagBits   ( .Actor:Self 00000003 00000001 .True )
  438:  	Wait  1`
  444:  	Call  SetPartFlagBits   ( .Actor:Self 00000003 00000001 .False )
  460:  	Wait  1`
  46C:  EndLoop
  474:  Call  SetPartFlagBits   ( .Actor:Self 00000003 00000001 .True )
  490:  Call  SetAnimation      ( .Actor:Self 00000001 00560501 )
  4A8:  Call  SetActorFlagBits  ( .Actor:Self 00000200 .False )
  4C0:  Call  BindHandleEvent   ( .Actor:Self $Script_HandleEvent_8022C614 )
  4D4:  Call  SetActorType      ( .Actor:Self 00000057 )
  4E8:  Call  SetStatusTable    ( .Actor:Self $StatusTable_8022C328 )
  4FC:  Call  $Function_802199C4    ( FFFFFFF6 00000014 0000000A 00000020 )
  518:  Call  SetActorFlagBits  ( .Actor:Self 00001000 .True )
  530:  Call  ResetAllActorSounds   ( .Actor:Self )
  540:  Call  GetIndexFromPos   ( .Actor:Self *Var0 )
  554:  Mod   *Var0  00000004
  564:  Call  SetGoalToIndex    ( .Actor:Self *Var0 )
  578:  Call  SetActorSpeed     ( .Actor:Self *Fixed[4.0] )
  58C:  Call  RunToGoal ( .Actor:Self  0` .False )
  5A4:  Call  GetGoalPos        ( .Actor:Self *Var0 *Var1 *Var2 )
  5C0:  Call  ForceHomePos      ( .Actor:Self *Var0 *Var1 *Var2 )
  5DC:  Call  HPBarToHome       ( .Actor:Self )
  5EC:  Return
  5F4:  End
}

% Origin: HINT
#new:Script $Script_HandleEvent_8022D234
{
    0:  Call  UseIdleAnimation  ( .Actor:Self .False )
   14:  Call  EnableIdleScript  ( .Actor:Self 00000000 )
   28:  Call  GetLastEvent      ( .Actor:Self *Var0 )
   3C:  Switch  *Var0
   48:  	Case  ==  .Event:HitCombo % 9
   54:  		ExecWait  $Script_8022CB2C
   60:  		SetConst  *Var0  00000002
   70:  		SetConst  *Var1  00570504
   80:  		ExecWait  DoNormalHit
   8C:  	CaseOR  ==  .Event:Hit % A
   98:  	CaseOR  ==  .Event:FallTrigger % C
   A4:  		ExecWait  $Script_8022CB2C
   B0:  		SetConst  *Var0  00000002
   C0:  		SetConst  *Var1  00570504
   D0:  		ExecWait  DoNormalHit
   DC:  		ExecWait  $Script_8022CC38
   E8:  	EndCaseGroup
   F0:  	CaseOR  ==  .Event:BurnHit % E
   FC:  	CaseOR  ==  0000000F % F
  108:  		ExecWait  $Script_8022CB2C
  114:  		SetConst  *Var0  00000002
  124:  		SetConst  *Var1  00570505
  134:  		SetConst  *Var2  00570506
  144:  		ExecWait  DoBurnHit
  150:  		ExecWait  $Script_8022CC38
  15C:  	EndCaseGroup
  164:  	Case  ==  .Event:BurnDeath % 24
  170:  		SetConst  *Var0  00000002
  180:  		SetConst  *Var1  00570505
  190:  		SetConst  *Var2  00570506
  1A0:  		ExecWait  DoBurnHit
  1AC:  		SetConst  *Var0  00000002
  1BC:  		SetConst  *Var1  00570506
  1CC:  		ExecWait  DoDeath
  1D8:  		Return
  1E0:  	Case  ==  .Event:SpinSmashHit % B
  1EC:  		SetConst  *Var0  00000002
  1FC:  		SetConst  *Var1  00570504
  20C:  		ExecWait  DoSpinSmashHit
  218:  	Case  ==  .Event:SpinSmashDeath % 21
  224:  		SetConst  *Var0  00000002
  234:  		SetConst  *Var1  00570504
  244:  		ExecWait  DoSpinSmashHit
  250:  		SetConst  *Var0  00000002
  260:  		SetConst  *Var1  00570504
  270:  		ExecWait  DoDeath
  27C:  		Return
  284:  	CaseOR  ==  00000017 % 17
  290:  	CaseOR  ==  .Event:Immune % 19
  29C:  	CaseOR  ==  .Event:AirLiftFailed % 1F
  2A8:  		SetConst  *Var0  00000002
  2B8:  		SetConst  *Var1  00570501
  2C8:  		ExecWait  DoImmune
  2D4:  	EndCaseGroup
  2DC:  	Case  ==  .Event:Death % 20
  2E8:  		SetConst  *Var0  00000002
  2F8:  		SetConst  *Var1  00570504
  308:  		ExecWait  DoNormalHit
  314:  		Wait  10`
  320:  		SetConst  *Var0  00000002
  330:  		SetConst  *Var1  00570504
  340:  		ExecWait  DoDeath
  34C:  		Return
  354:  	Case  ==  .Event:BeginFirstStrike % 38
  360:  		Call  SetActorPos       ( .Actor:Self  20`  0`  0` )
  37C:  		Call  HPBarToCurrent    ( .Actor:Self )
  38C:  	Case  ==  .Event:EndFirstStrike % 35
  398:  		Call  SetAnimation  ( .Actor:Self 00000002 00570501 )
  3B0:  		Call  SetGoalToHome ( .Actor:Self )
  3C0:  		Call  SetActorSpeed ( .Actor:Self *Fixed[4.0] )
  3D4:  		Call  FlyToGoal     ( .Actor:Self  0`  1` .Easing:Linear )
  3F0:  		Call  SetAnimation  ( .Actor:Self 00000002 00570501 )
  408:  		Call  HPBarToHome   ( .Actor:Self )
  418:  	Case  ==  .Event:RecoverStatus % 31
  424:  		SetConst  *Var0  00000002
  434:  		SetConst  *Var1  00570501
  444:  		ExecWait  DoRecover
  450:  	Case  ==  .Event:ScareAway % 39
  45C:  		Call  SetAnimation  ( .Actor:Self 00000002 00570504 )
  474:  		Call  SetActorJumpGravity   ( .Actor:Self *Fixed[1.5] )
  488:  		Call  GetActorPos   ( .Actor:Self *Var0 *Var1 *Var2 )
  4A4:  		Call  SetGoalPos    ( .Actor:Self *Var0 *Var1 *Var2 )
  4C0:  		Call  JumpToGoal    ( .Actor:Self  15` .False .True .False )
  4E0:  		Wait  15`
  4EC:  		Call  SetAnimation  ( .Actor:Self 00000002 00570502 )
  504:  		ExecWait  $Script_GRYMagikoopa_RunAway
  510:  		Return
  518:  	Case  ==  .Event:BeginAirLift % 3A
  524:  		SetConst  *Var0  00000002
  534:  		SetConst  *Var1  00570502
  544:  		ExecWait  DoAirLift
  550:  	Case  ==  .Event:BlowAway % 16
  55C:  		Call  GetStatusFlags    ( .Actor:Self *Var0 )
  570:  		If  *Var0  !&  ~Flags:StatusFlags:Sleep|Frozen|Fear|Paralyze|Dizzy|Stone|Stop % 35D000
  580:  			If  *Var0  &  ~Flags:StatusFlags:Shrink % 80000
  590:  				Call  SetPartDispOffset ( .Actor:Self 00000002 FFFFFFFD 00000000 00000000 )
  5B0:  			Else
  5B8:  				Call  SetPartDispOffset ( .Actor:Self 00000002 FFFFFFF1 00000000 00000000 )
  5D8:  			EndIf
  5E0:  		EndIf
  5E8:  		SetConst  *Var0  00000002
  5F8:  		SetConst  *Var1  00570504
  608:  		ExecWait  DoBlowAway
  614:  		Return
  61C:  	Default
  624:  EndSwitch
  62C:  Call  EnableIdleScript  ( .Actor:Self 00000001 )
  640:  Call  UseIdleAnimation  ( .Actor:Self .True )
  654:  Return
  65C:  End
}

% Origin: HINT
#new:Script $Script_GRYMagikoopa_ShapeSpell
{
    0:  Call  UseIdleAnimation  ( .Actor:Self .False )
   14:  Call  EnableIdleScript  ( .Actor:Self 00000000 )
   28:  Call  SetTargetActor    ( .Actor:Self .Actor:Player )
   3C:  Call  GetBattlePhase    ( *Var0 )
   4C:  If  *Var0  ==  00000001
   5C:  	Call  UseBattleCamPreset    ( 00000002 )
   6C:  	Call  MoveBattleCamOver     (  1` )
   7C:  Else
   84:  	Call  UseBattleCamPreset    ( 00000002 )
   94:  	Call  MoveBattleCamOver     (  10` )
   A4:  EndIf
   AC:  Call  PlaySoundAtActor  ( .Actor:Self .Sound:SpellCast1 )
   C0:  Call  GetActorPos       ( .Actor:Self *Var0 *Var1 *Var2 )
   DC:  Call  GetStatusFlags    ( .Actor:Self *VarA )
   F0:  If  *VarA  &  ~Flags:StatusFlags:Shrink % 80000
  100:  	Sub   *Var0  0000000C
  110:  	Add   *Var1  0000000E
  120:  Else
  128:  	Sub   *Var0  0000001E
  138:  	Add   *Var1  00000024
  148:  EndIf
  150:  Call  PlayEffect        ( ~FX:GatherMagic:Pink *Var0 *Var1 *Var2 *Fixed[0.5] 0000001E 00000000 00000000 00000000 00000000 00000000 00000000 00000000 )
  194:  Call  SetAnimation      ( .Actor:Self 00000002 00570502 )
  1AC:  Wait  30`
  1B8:  Call  EnemyTestTarget   ( .Actor:Self *Var0 ~Flags:DamageType:0 00000000 00000001 00000010 )
  1DC:  Switch  *Var0
  1E8:  	CaseOR  ==  .HitResult:Miss % 6
  1F4:  	CaseOR  ==  .HitResult:Lucky % 5
  200:  		Set   *VarA  *Var0
  210:  		Call  PlaySoundAtActor  ( .Actor:Self .Sound:SpellCast2 )
  224:  		Call  SetAnimation      ( .Actor:Self 00000002 00570503 )
  23C:  		Wait  5`
  248:  		Call  GetActorPos       ( .Actor:Self *Var0 *Var1 *Var2 )
  264:  		Call  GetStatusFlags    ( .Actor:Self *Var9 )
  278:  		If  *Var9  &  ~Flags:StatusFlags:Shrink % 80000
  288:  			Sub   *Var0  00000008
  298:  			Add   *Var1  00000008
  2A8:  		Else
  2B0:  			Sub   *Var0  00000014
  2C0:  			Add   *Var1  00000014
  2D0:  		EndIf
  2D8:  		Call  SetGoalToTarget       ( .Actor:Self )
  2E8:  		Call  GetGoalPos    ( .Actor:Self *Var3 *Var4 *Var5 )
  304:  		Sub   *Var3  00000032
  314:  		Set   *Var4  00000000
  324:  		Call  $Function_80219840    ( *Var0 *Var1 *Var5 *Var3 *Var4 *Var5 00000019 )
  34C:  		Wait  50`
  358:  		If  *VarA  ==  .HitResult:Lucky % 5
  368:  			Call  EnemyTestTarget   ( .Actor:Self *Var0 ~Flags:DamageType:TriggerLucky 00000000 00000000 00000000 )
  38C:  		EndIf
  394:  		Wait  14`
  3A0:  		Call  YieldTurn ( )
  3AC:  		Call  AddActorDecoration    ( .Actor:Self 00000002 00000000 .Decoration:Sweat )
  3C8:  		Wait  30`
  3D4:  		Call  RemoveActorDecoration ( .Actor:Self 00000002 00000000 )
  3EC:  		Call  EnableIdleScript      ( .Actor:Self 00000001 )
  400:  		Call  UseIdleAnimation      ( .Actor:Self .True )
  414:  		Return
  41C:  	EndCaseGroup
  424:  EndSwitch
  42C:  Call  PlaySoundAtActor  ( .Actor:Self .Sound:SpellCast2 )
  440:  Call  SetAnimation      ( .Actor:Self 00000002 00570503 )
  458:  Wait  5`
  464:  Call  GetActorPos       ( .Actor:Self *Var0 *Var1 *Var2 )
  480:  Call  GetStatusFlags    ( .Actor:Self *VarA )
  494:  If  *VarA  &  ~Flags:StatusFlags:Shrink % 80000
  4A4:  	Sub   *Var0  00000008
  4B4:  	Add   *Var1  00000008
  4C4:  Else
  4CC:  	Sub   *Var0  00000014
  4DC:  	Add   *Var1  00000014
  4EC:  EndIf
  4F4:  Call  SetGoalToTarget   ( .Actor:Self )
  504:  Call  GetGoalPos        ( .Actor:Self *Var3 *Var4 *Var5 )
  520:  Sub   *Var3  0000000A
  530:  Call  $Function_80219840    ( *Var0 *Var1 *Var5 *Var3 *Var4 *Var5 00000014 )
  558:  Wait  18`
  564:  Wait  2`
  570:  Call  EnemyDamageTarget ( .Actor:Self *Var0 ~Flags:DamageType:NoContact|Magic 00000000 00000000 00000003 00000020 )
  598:  Switch  *Var0
  5A4:  	CaseOR  ==  .HitResult:Hit % 0
  5B0:  	CaseOR  ==  .HitResult:QuakeImmune % 2
  5BC:  		Wait  19`
  5C8:  		Call  YieldTurn ( )
  5D4:  	EndCaseGroup
  5DC:  EndSwitch
  5E4:  Call  EnableIdleScript  ( .Actor:Self 00000001 )
  5F8:  Call  UseIdleAnimation  ( .Actor:Self .True )
  60C:  Return
  614:  End
}

% Origin: HINT
#new:Script $Script_GRYMagikoopa_WandStrike
{
    0:  Call  UseIdleAnimation  ( .Actor:Self .False )
   14:  Call  EnableIdleScript  ( .Actor:Self 00000000 )
   28:  Call  SetTargetActor    ( .Actor:Self .Actor:Player )
   3C:  Call  UseBattleCamPreset    ( 0000003F )
   4C:  Call  BattleCamTargetActor  ( .Actor:Self )
   5C:  Call  8024ECF8  ( FFFFFFFF 00000001 00000000 )
   74:  Call  PlaySoundAtActor  ( .Actor:Self 000002DB )
   88:  Thread
   90:  	Call  SetAnimation  ( .Actor:Self 00000001 00560502 )
   A8:  	Set   *Var0  000000C8
   B8:  	Loop  00000014
   C4:  		Sub   *Var0  0000000A
   D4:  		Call  SetPartAlpha  ( .Actor:Self 00000001 *Var0 )
   EC:  		Wait  1`
   F8:  	EndLoop
  100:  EndThread
  108:  Wait  10`
  114:  Call  SetGoalToTarget   ( .Actor:Self )
  124:  Call  GetGoalPos        ( .Actor:Self *Var0 *Var1 *Var2 )
  140:  Call  GetStatusFlags    ( .Actor:Self *VarA )
  154:  If  *VarA  &  ~Flags:StatusFlags:Shrink % 80000
  164:  	Add   *Var0  00000005
  174:  Else
  17C:  	Add   *Var0  00000019
  18C:  EndIf
  194:  Set   *Var1  00000000
  1A4:  Call  SetGoalPos    ( .Actor:Self *Var0 *Var1 *Var2 )
  1C0:  Call  FlyToGoal     ( .Actor:Self  30`  0` .Easing:CosInOut )
  1DC:  Set   *Var0  00000037
  1EC:  Loop  00000014
  1F8:  	Add   *Var0  0000000A
  208:  	Call  SetPartAlpha  ( .Actor:Self 00000001 *Var0 )
  220:  	Wait  1`
  22C:  EndLoop
  234:  Call  SetPartAlpha      ( .Actor:Self 00000001 000000FF )
  24C:  Call  SetAnimation      ( .Actor:Self 00000001 00560503 )
  264:  Wait  11`
  270:  Call  PlaySoundAtActor  ( .Actor:Self 000002DC )
  284:  Call  EnemyTestTarget   ( .Actor:Self *Var0 ~Flags:DamageType:0 00000000 00000001 00000010 )
  2A8:  Switch  *Var0
  2B4:  	CaseOR  ==  .HitResult:Miss % 6
  2C0:  	CaseOR  ==  .HitResult:Lucky % 5
  2CC:  		Set   *VarA  *Var0
  2DC:  		Call  UseBattleCamPreset    ( 00000002 )
  2EC:  		If  *VarA  ==  .HitResult:Lucky % 5
  2FC:  			Call  EnemyTestTarget   ( .Actor:Self *Var0 ~Flags:DamageType:TriggerLucky 00000000 00000000 00000000 )
  320:  		EndIf
  328:  		Wait  15`
  334:  		Set   *Var0  000000C8
  344:  		Loop  00000014
  350:  			Sub   *Var0  0000000A
  360:  			Call  SetPartAlpha  ( .Actor:Self 00000001 *Var0 )
  378:  			Wait  1`
  384:  		EndLoop
  38C:  		Call  YieldTurn ( )
  398:  		Call  SetGoalToHome ( .Actor:Self )
  3A8:  		Call  SetAnimation  ( .Actor:Self 00000001 00560501 )
  3C0:  		Call  FlyToGoal     ( .Actor:Self  30`  0` .Easing:CosInOut )
  3DC:  		Set   *Var0  00000037
  3EC:  		Loop  00000014
  3F8:  			Add   *Var0  0000000A
  408:  			Call  SetPartAlpha  ( .Actor:Self 00000001 *Var0 )
  420:  			Wait  1`
  42C:  		EndLoop
  434:  		Call  SetPartAlpha      ( .Actor:Self 00000001 000000FF )
  44C:  		Call  EnableIdleScript  ( .Actor:Self 00000001 )
  460:  		Call  UseIdleAnimation  ( .Actor:Self .True )
  474:  		Return
  47C:  	EndCaseGroup
  484:  EndSwitch
  48C:  Call  SetGoalToTarget   ( .Actor:Self )
  49C:  Wait  2`
  4A8:  Call  EnemyDamageTarget ( .Actor:Self *Var0 ~Flags:DamageType:NoContact 00000000 00000000 00000003 00000020 )
  4D0:  Switch  *Var0
  4DC:  	CaseOR  ==  .HitResult:Hit % 0
  4E8:  	CaseOR  ==  .HitResult:QuakeImmune % 2
  4F4:  		Call  UseBattleCamPreset    ( 00000002 )
  504:  		Wait  10`
  510:  		Set   *Var0  000000C8
  520:  		Loop  00000014
  52C:  			Sub   *Var0  0000000A
  53C:  			Call  SetPartAlpha  ( .Actor:Self 00000001 *Var0 )
  554:  			Wait  1`
  560:  		EndLoop
  568:  		Call  YieldTurn ( )
  574:  		Call  SetGoalToHome ( .Actor:Self )
  584:  		Call  SetAnimation  ( .Actor:Self 00000001 00560501 )
  59C:  		Call  FlyToGoal     ( .Actor:Self  20`  0` .Easing:CosInOut )
  5B8:  		Set   *Var0  00000037
  5C8:  		Loop  00000014
  5D4:  			Add   *Var0  0000000A
  5E4:  			Call  SetPartAlpha  ( .Actor:Self 00000001 *Var0 )
  5FC:  			Wait  1`
  608:  		EndLoop
  610:  		Call  SetPartAlpha  ( .Actor:Self 00000001 000000FF )
  628:  	EndCaseGroup
  630:  EndSwitch
  638:  Call  EnableIdleScript  ( .Actor:Self 00000001 )
  64C:  Call  UseIdleAnimation  ( .Actor:Self .True )
  660:  Return
  668:  End
}

% Origin: HINT
#new:Script $Script_GRYMagikoopa_RunAway
{
    0:  Call  UseIdleAnimation  ( .Actor:Self .False )
   14:  Call  EnableIdleScript  ( .Actor:Self 00000000 )
   28:  Call  8027D32C  ( FFFFFF81 )
   38:  Call  GetLastEvent      ( .Actor:Self *Var0 )
   4C:  If  *Var0  !=  .Event:ScareAway % 39
   5C:  	Call  UseBattleCamPreset    ( 0000000E )
   6C:  	Call  BattleCamTargetActor  ( .Actor:Self )
   7C:  	Call  MoveBattleCamOver     (  15` )
   8C:  	Wait  15`
   98:  	Call  UseBattleCamPreset    ( 00000001 )
   A8:  EndIf
   B0:  Call  SetActorSpeed ( .Actor:Self *Fixed[1.0] )
   C4:  Call  GetActorPos   ( .Actor:Self *Var0 *Var1 *Var2 )
   E0:  Add   *Var0  00000014
   F0:  Call  SetGoalPos    ( .Actor:Self *Var0 *Var1 *Var2 )
  10C:  Call  RunToGoal     ( .Actor:Self  0` .False )
  124:  Wait  10`
  130:  Call  SetActorYaw   ( .Actor:Self  180` )
  144:  Call  EnableActorBlur       ( .Actor:Self 00000001 )
  158:  Call  SetActorSpeed ( .Actor:Self *Fixed[10.0] )
  16C:  Call  GetActorPos   ( .Actor:Self *Var0 *Var1 *Var2 )
  188:  Add   *Var0  000000C8
  198:  Call  SetGoalPos    ( .Actor:Self *Var0 *Var1 *Var2 )
  1B4:  Call  RunToGoal     ( .Actor:Self  0` .False )
  1CC:  Call  YieldTurn ( )
  1D8:  Call  UseBattleCamPreset    ( 00000002 )
  1E8:  ExecWait  ForceNextTarget
  1F4:  Call  8027D32C      ( FFFFFF81 )
  204:  Call  RemoveActor   ( .Actor:Self )
  214:  Return
  21C:  End
}

#new:Script $Script_Init_8022E748
{
    0:  Call  BindIdle      ( .Actor:Self $Script_Idle_8022C604 )
   14:  Call  BindTakeTurn  ( .Actor:Self $Script_TakeTurn_8022E890 )
   28:  Call  BindHandleEvent   ( .Actor:Self $Script_HandleEvent_8022C614 )
   3C:  Call  GetBattleVar  ( 00000002 *Var0 )
   50:  If  *Var0  ==  00000000
   60:  	Call  SetBattleVar  ( 00000002 FFFFFFFF )
   74:  EndIf
   7C:  Call  SetActorVar   ( .Actor:Self 00000000 00000000 )
   94:  Return
   9C:  End
}

% Origin: HINT
#new:Script $Script_Init_8022E7EC
{
    0:  Call  BindIdle      ( .Actor:Self $Script_Idle_8022C604 )
   14:  Call  BindTakeTurn  ( .Actor:Self $Script_TakeTurn_8022E890 )
   28:  Call  BindHandleEvent   ( .Actor:Self $Script_HandleEvent_8022D234 )
   3C:  Call  GetBattleVar  ( 00000002 *Var0 )
   50:  If  *Var0  ==  00000000
   60:  	Call  SetBattleVar  ( 00000002 FFFFFFFF )
   74:  EndIf
   7C:  Call  SetActorVar   ( .Actor:Self 00000000 00000000 )
   94:  Return
   9C:  End
}

% Origin: HINT
#new:Script $Script_TakeTurn_8022E890
{
    0:  Set   *Flag[00]  .False
   10:  Label  A
   1C:  Call  EnemyCreateTargetList ( 00008002 )
   2C:  Call  InitTargetIterator ( )
   38:  Label  0
   44:  Call  GetOwnerTarget    ( *Var0 *Var1 )
   58:  Call  GetIndexFromHome  ( *Var0 *Var1 )
   6C:  Call  GetBattleVar      ( 00000002 *Var2 )
   80:  If  *Var1  >  *Var2
   90:  	Call  $Function_80219AE8    ( *Var0 *Var3 )
   A4:  	If  *Var3  ==  00000000
   B4:  		Call  GetStatusFlags    ( *Var0 *Var4 )
   C8:  		If  *Var4  !&  ~Flags:StatusFlags:Static|Transparent % 4002000
   D8:  			Set   *Var8  *Var0
   E8:  			Call  SetBattleVar  ( 00000002 *Var1 )
   FC:  			Goto  64
  108:  		EndIf
  110:  	EndIf
  118:  EndIf
  120:  Call  ChooseNextTarget  ( .Iter:Next *Var0 )
  134:  If  *Var0  !=  FFFFFFFF
  144:  	Goto  0
  150:  EndIf
  158:  If  *Flag[00]  ==  .False
  168:  	Set   *Flag[00]  .True
  178:  	Call  SetBattleVar  ( 00000002 FFFFFFFF )
  18C:  	Goto  A
  198:  EndIf
  1A0:  Call  CountPlayerTargets    ( .Actor:Self 00008002 *Var0 )
  1B8:  If  *Var0  ==  00000001
  1C8:  	ExecWait  $Script_GRYMagikoopa_RunAway
  1D4:  	Return
  1DC:  EndIf
  1E4:  Call  GetActorFlags ( .Actor:Self *Var0 )
  1F8:  If  *Var0  &  00000200
  208:  	ExecWait  $Script_GRYMagikoopa_ShapeSpell
  214:  Else
  21C:  	ExecWait  $Script_GRYMagikoopa_WandStrike
  228:  EndIf
  230:  Return
  238:  Label  64
  244:  Call  UseIdleAnimation  ( .Actor:Self .False )
  258:  Call  EnableIdleScript  ( .Actor:Self 00000000 )
  26C:  Call  SetTargetActor    ( .Actor:Self .Actor:Player )
  280:  Call  UseBattleCamPreset    ( 0000000E )
  290:  Call  BattleCamTargetActor  ( .Actor:Self )
  2A0:  Call  MoveBattleCamOver (  15` )
  2B0:  Wait  15`
  2BC:  Call  GetActorFlags     ( .Actor:Self *Var0 )
  2D0:  If  *Var0  !&  00000200
  2E0:  	Call  SetAnimation  ( .Actor:Self 00000001 00560502 )
  2F8:  Else
  300:  	Call  SetAnimation  ( .Actor:Self 00000002 00570502 )
  318:  EndIf
  320:  Wait  5`
  32C:  Call  PlaySoundAtActor  ( .Actor:Self .Sound:SpellCast1 )
  340:  Call  GetActorFlags     ( .Actor:Self *Var0 )
  354:  If  *Var0  !&  00000200
  364:  	Call  GetActorPos       ( .Actor:Self *Var0 *Var1 *Var2 )
  380:  	Call  GetStatusFlags    ( .Actor:Self *VarA )
  394:  	If  *VarA  &  ~Flags:StatusFlags:Shrink % 80000
  3A4:  		Sub   *Var0  00000006
  3B4:  		Add   *Var1  0000000C
  3C4:  		Sub   *Var2  00000002
  3D4:  		Call  PlayEffect    ( ~FX:RadialFlowOut:WhiteWaves *Var0 *Var1 *Var2 *Fixed[0.12] 0000001E 00000000 00000000 00000000 00000000 00000000 00000000 00000000 )
  418:  	Else
  420:  		Sub   *Var0  00000010
  430:  		Add   *Var1  0000001F
  440:  		Sub   *Var2  00000002
  450:  		Call  PlayEffect    ( ~FX:RadialFlowOut:WhiteWaves *Var0 *Var1 *Var2 *Fixed[0.3] 0000001E 00000000 00000000 00000000 00000000 00000000 00000000 00000000 )
  494:  	EndIf
  49C:  Else
  4A4:  	Call  GetActorPos       ( .Actor:Self *Var0 *Var1 *Var2 )
  4C0:  	Call  GetStatusFlags    ( .Actor:Self *VarA )
  4D4:  	If  *VarA  &  ~Flags:StatusFlags:Shrink % 80000
  4E4:  		Sub   *Var0  0000000C
  4F4:  		Add   *Var1  0000000E
  504:  		Sub   *Var2  00000002
  514:  		Call  PlayEffect    ( ~FX:RadialFlowOut:WhiteWaves *Var0 *Var1 *Var2 *Fixed[0.12] 0000001E 00000000 00000000 00000000 00000000 00000000 00000000 00000000 )
  558:  	Else
  560:  		Sub   *Var0  0000001E
  570:  		Add   *Var1  00000024
  580:  		Sub   *Var2  00000002
  590:  		Call  PlayEffect    ( ~FX:RadialFlowOut:WhiteWaves *Var0 *Var1 *Var2 *Fixed[0.3] 0000001E 00000000 00000000 00000000 00000000 00000000 00000000 00000000 )
  5D4:  	EndIf
  5DC:  EndIf
  5E4:  Wait  30`
  5F0:  Call  GetActorFlags ( .Actor:Self *Var0 )
  604:  If  *Var0  !&  00000200
  614:  	Call  SetAnimation  ( .Actor:Self 00000001 00560501 )
  62C:  Else
  634:  	Call  SetAnimation  ( .Actor:Self 00000002 00570501 )
  64C:  EndIf
  654:  Wait  5`
  660:  Thread
  668:  	Wait  10`
  674:  	Call  PlaySoundAtActor  ( *Var8 000002DB )
  688:  EndThread
  690:  Thread
  698:  	Call  8026BF48      ( 00000001 )
  6A8:  	Call  VanishActor   ( *Var8 00000002 )
  6BC:  	Call  8026BF48      ( 00000000 )
  6CC:  EndThread
  6D4:  Call  WaitForBuffDone ( )
  6E0:  Call  UseBattleCamPreset    ( 00000002 )
  6F0:  Wait  10`
  6FC:  Call  YieldTurn ( )
  708:  Call  EnableIdleScript      ( .Actor:Self 00000001 )
  71C:  Call  UseIdleAnimation      ( .Actor:Self .True )
  730:  Return
  738:  End
}

% Origin: HEURISTIC
#new:Unknown $???_8022EFD0
{
	00000000 00000000 00000000 00000000
}

#new:Script $Script_8022EFE0
{
    0:  Call  $Function_80219DA8 ( )
    C:  Loop
   18:  	Wait  1`
   24:  EndLoop
   2C:  Return
   34:  End
}

#new:Script $Script_8022F01C
{
    0:  Set   *VarA  *Var0
   10:  Label  0
   1C:  Call  RandInt   ( 0000001E *Var0 )
   30:  Add   *Var0  0000001E
   40:  Wait  *Var0
   4C:  Set   *Var1  00000000
   5C:  Loop  0000000A
   68:  	Add   *Var1  00000024
   78:  	Call  RotateModel   ( *VarA *Var1 00000000 00000001 00000000 )
   98:  	Wait  1`
   A4:  EndLoop
   AC:  Goto  0
   B8:  Return
   C0:  End
}

#new:Script $Script_8022F0E4
{
    0:  Set   *VarA  *Var0
   10:  Set   *VarB  *Var1
   20:  Exec  $Script_8022F01C
   2C:  Set   *Var7  00000000
   3C:  Label  0
   48:  Add   *Var7  00000004
   58:  If  *Var7  >  00000E0F
   68:  	Sub   *Var7  00000E10
   78:  EndIf
   80:  Call  $Function_80219DCC    ( *Var7 *Var0 *Var1 *Var2 )
   9C:  Call  TranslateModel        ( *VarA *Var0 *Var1 *Var2 )
   B8:  Wait  1`
   C4:  Goto  0
   D0:  Return
   D8:  End
}

% Origin: HEURISTIC
#new:Script $Script_8022F1C4
{
    0:  Set   *VarA  *Var0
   10:  Set   *Var7  00000000
   20:  Label  0
   2C:  Add   *Var7  00000004
   3C:  If  *Var7  >  00000E0F
   4C:  	Sub   *Var7  00000E10
   5C:  EndIf
   64:  Call  $Function_80219DCC    ( *Var7 *Var0 *Var1 *Var2 )
   80:  Call  TranslateModel        ( *VarA *Var0 *Var1 *Var2 )
   9C:  Wait  1`
   A8:  Goto  0
   B4:  Return
   BC:  End
}

#new:Script $Script_BeforeBattle_8022F288
{
    0:  Call  SetSpriteShading  ( FFFFFFFF )
   10:  Exec  $Script_8022EFE0
   1C:  Thread
   24:  	Set   *Var0  00000016
   34:  	Set   *Var1  00000001
   44:  	Exec  $Script_8022F0E4
   50:  	Wait  5`
   5C:  	Set   *Var0  00000014
   6C:  	Set   *Var1  00000003
   7C:  	Exec  $Script_8022F0E4
   88:  	Wait  5`
   94:  	Set   *Var0  00000012
   A4:  	Set   *Var1  00000004
   B4:  	Exec  $Script_8022F0E4
   C0:  	Wait  5`
   CC:  	Set   *Var0  00000010
   DC:  	Set   *Var1  00000002
   EC:  	Exec  $Script_8022F0E4
   F8:  EndThread
  100:  Return
  108:  End
}

#new:Script $Script_AfterBattle_8022F398
{
    0:  Return
    8:  End
}

#new:ForegroundModelList $ForegroundModelList_8022F3A8
{
	FFFFFFFF
	~Model:sam_bt01:saku
	00000000
}

#new:Stage $Stage_8022F3B4
{
	$ASCII_80231378  % sam_tex
	$ASCII_80231368  % sam_bt01_shape
	$ASCII_80231358  % sam_bt01_hit
	$Script_BeforeBattle_8022F288
	$Script_AfterBattle_8022F398
	$ASCII_80231350  % yki_bg
	$ForegroundModelList_8022F3A8
	00000000
	00000000
	00000000
}

PADDING: 8022F3DC to 8022F3E0 (0063AF7C to 0063AF80)
00000000

% Origin: HEURISTIC
#new:Unknown $???_8022F3E0
{
	00000000 00000000 00000000 00000000
}

#new:Script $Script_8022F3F0
{
    0:  Call  $Function_8021A0C8 ( )
    C:  Loop
   18:  	Wait  1`
   24:  EndLoop
   2C:  Return
   34:  End
}

#new:Script $Script_8022F42C
{
    0:  Set   *VarA  *Var0
   10:  Label  0
   1C:  Call  RandInt   ( 0000001E *Var0 )
   30:  Add   *Var0  0000001E
   40:  Wait  *Var0
   4C:  Set   *Var1  00000000
   5C:  Loop  0000000A
   68:  	Add   *Var1  00000024
   78:  	Call  RotateModel   ( *VarA *Var1 00000000 00000001 00000000 )
   98:  	Wait  1`
   A4:  EndLoop
   AC:  Goto  0
   B8:  Return
   C0:  End
}

#new:Script $Script_8022F4F4
{
    0:  Set   *VarA  *Var0
   10:  Set   *VarB  *Var1
   20:  Exec  $Script_8022F42C
   2C:  Set   *Var7  00000000
   3C:  Label  0
   48:  Add   *Var7  00000004
   58:  If  *Var7  >  00000E0F
   68:  	Sub   *Var7  00000E10
   78:  EndIf
   80:  Call  $Function_8021A0EC    ( *Var7 *Var0 *Var1 *Var2 )
   9C:  Call  TranslateModel        ( *VarA *Var0 *Var1 *Var2 )
   B8:  Wait  1`
   C4:  Goto  0
   D0:  Return
   D8:  End
}

% Origin: HEURISTIC
#new:Script $Script_8022F5D4
{
    0:  Set   *VarA  *Var0
   10:  Set   *Var7  00000000
   20:  Label  0
   2C:  Add   *Var7  00000004
   3C:  If  *Var7  >  00000E0F
   4C:  	Sub   *Var7  00000E10
   5C:  EndIf
   64:  Call  $Function_8021A0EC    ( *Var7 *Var0 *Var1 *Var2 )
   80:  Call  TranslateModel        ( *VarA *Var0 *Var1 *Var2 )
   9C:  Wait  1`
   A8:  Goto  0
   B4:  Return
   BC:  End
}

#new:Script $Script_BeforeBattle_8022F698
{
    0:  Call  SetSpriteShading  ( FFFFFFFF )
   10:  Call  SetGroupEnabled   ( ~Model:sam_bt02:p2 00000000 )
   24:  Call  SetGroupEnabled   ( ~Model:sam_bt02:p3 00000000 )
   38:  Thread
   40:  	Set   *Var0  00000012
   50:  	Set   *Var1  00000000
   60:  	Exec  $Script_8022F4F4
   6C:  	Wait  5`
   78:  	Set   *Var0  00000014
   88:  	Set   *Var1  00000000
   98:  	Exec  $Script_8022F4F4
   A4:  	Wait  5`
   B0:  	Set   *Var0  00000016
   C0:  	Set   *Var1  00000000
   D0:  	Exec  $Script_8022F4F4
   DC:  	Wait  5`
   E8:  	Set   *Var0  00000018
   F8:  	Set   *Var1  00000000
  108:  	Exec  $Script_8022F4F4
  114:  EndThread
  11C:  Exec  $Script_8022F3F0
  128:  Return
  130:  End
}

#new:Script $Script_AfterBattle_8022F7D0
{
    0:  Return
    8:  End
}

#new:ForegroundModelList $ForegroundModelList_8022F7E0
{
	FFFFFFFF
	~Model:sam_bt02:kouri1
	00000000
}

#new:Stage $Stage_8022F7EC
{
	$ASCII_802313A8  % sam_tex
	$ASCII_80231398  % sam_bt02_shape
	$ASCII_80231388  % sam_bt02_hit
	$Script_BeforeBattle_8022F698
	$Script_AfterBattle_8022F7D0
	$ASCII_80231380  % yki_bg
	$ForegroundModelList_8022F7E0
	00000000
	00000000
	00000000
}

PADDING: 8022F814 to 8022F820 (0063B3B4 to 0063B3C0)
00000000 00000000 00000000

% Origin: HEURISTIC
#new:Unknown $???_8022F820
{
	00000000 00000000 00000000 00000000
}

#new:Script $Script_8022F830
{
    0:  Call  $Function_8021A3E8 ( )
    C:  Loop
   18:  	Wait  1`
   24:  EndLoop
   2C:  Return
   34:  End
}

% Origin: HEURISTIC
#new:Script $Script_8022F86C
{
    0:  Set   *VarA  *Var0
   10:  Label  0
   1C:  Call  RandInt   ( 0000001E *Var0 )
   30:  Add   *Var0  0000001E
   40:  Wait  *Var0
   4C:  Set   *Var1  00000000
   5C:  Loop  0000000A
   68:  	Add   *Var1  00000024
   78:  	Call  RotateModel   ( *VarA *Var1 00000000 00000001 00000000 )
   98:  	Wait  1`
   A4:  EndLoop
   AC:  Goto  0
   B8:  Return
   C0:  End
}

% Origin: HEURISTIC
#new:Script $Script_8022F934
{
    0:  Set   *VarA  *Var0
   10:  Set   *VarB  *Var1
   20:  Exec  $Script_8022F86C
   2C:  Set   *Var7  00000000
   3C:  Label  0
   48:  Add   *Var7  00000004
   58:  If  *Var7  >  00000E0F
   68:  	Sub   *Var7  00000E10
   78:  EndIf
   80:  Call  $Function_8021A40C    ( *Var7 *Var0 *Var1 *Var2 )
   9C:  Call  TranslateModel        ( *VarA *Var0 *Var1 *Var2 )
   B8:  Wait  1`
   C4:  Goto  0
   D0:  Return
   D8:  End
}

% Origin: HEURISTIC
#new:Script $Script_8022FA14
{
    0:  Set   *VarA  *Var0
   10:  Set   *Var7  00000000
   20:  Label  0
   2C:  Add   *Var7  00000004
   3C:  If  *Var7  >  00000E0F
   4C:  	Sub   *Var7  00000E10
   5C:  EndIf
   64:  Call  $Function_8021A40C    ( *Var7 *Var0 *Var1 *Var2 )
   80:  Call  TranslateModel        ( *VarA *Var0 *Var1 *Var2 )
   9C:  Wait  1`
   A8:  Goto  0
   B4:  Return
   BC:  End
}

#new:Script $Script_BeforeBattle_8022FAD8
{
    0:  Call  SetSpriteShading  ( FFFFFFFF )
   10:  Call  SetGroupEnabled   ( ~Model:sam_bt02:p1 00000000 )
   24:  Call  SetGroupEnabled   ( ~Model:sam_bt02:yuki 00000000 )
   38:  Exec  $Script_8022F830
   44:  Return
   4C:  End
}

#new:Script $Script_AfterBattle_8022FB2C
{
    0:  Return
    8:  End
}

#new:ForegroundModelList $ForegroundModelList_8022FB3C
{
	FFFFFFFF
	~Model:sam_bt02:kouri1
	00000000
}

#new:Stage $Stage_8022FB48
{
	$ASCII_802313D8  % sam_tex
	$ASCII_802313C8  % sam_bt02_shape
	$ASCII_802313B8  % sam_bt02_hit
	$Script_BeforeBattle_8022FAD8
	$Script_AfterBattle_8022FB2C
	$ASCII_802313B0  % yki_bg
	$ForegroundModelList_8022FB3C
	00000000
	00000000
	00000000
}

% Origin: HEURISTIC
#new:Unknown $???_8022FB70
{
	00000000 00000000 00000000 00000000
}

#new:Script $Script_8022FB80
{
    0:  Call  $Function_8021A708 ( )
    C:  Loop
   18:  	Wait  1`
   24:  EndLoop
   2C:  Return
   34:  End
}

% Origin: HEURISTIC
#new:Script $Script_8022FBBC
{
    0:  Set   *VarA  *Var0
   10:  Label  0
   1C:  Call  RandInt   ( 0000001E *Var0 )
   30:  Add   *Var0  0000001E
   40:  Wait  *Var0
   4C:  Set   *Var1  00000000
   5C:  Loop  0000000A
   68:  	Add   *Var1  00000024
   78:  	Call  RotateModel   ( *VarA *Var1 00000000 00000001 00000000 )
   98:  	Wait  1`
   A4:  EndLoop
   AC:  Goto  0
   B8:  Return
   C0:  End
}

% Origin: HEURISTIC
#new:Script $Script_8022FC84
{
    0:  Set   *VarA  *Var0
   10:  Set   *VarB  *Var1
   20:  Exec  $Script_8022FBBC
   2C:  Set   *Var7  00000000
   3C:  Label  0
   48:  Add   *Var7  00000004
   58:  If  *Var7  >  00000E0F
   68:  	Sub   *Var7  00000E10
   78:  EndIf
   80:  Call  $Function_8021A72C    ( *Var7 *Var0 *Var1 *Var2 )
   9C:  Call  TranslateModel        ( *VarA *Var0 *Var1 *Var2 )
   B8:  Wait  1`
   C4:  Goto  0
   D0:  Return
   D8:  End
}

% Origin: HEURISTIC
#new:Script $Script_8022FD64
{
    0:  Set   *VarA  *Var0
   10:  Set   *Var7  00000000
   20:  Label  0
   2C:  Add   *Var7  00000004
   3C:  If  *Var7  >  00000E0F
   4C:  	Sub   *Var7  00000E10
   5C:  EndIf
   64:  Call  $Function_8021A72C    ( *Var7 *Var0 *Var1 *Var2 )
   80:  Call  TranslateModel        ( *VarA *Var0 *Var1 *Var2 )
   9C:  Wait  1`
   A8:  Goto  0
   B4:  Return
   BC:  End
}

#new:Script $Script_BeforeBattle_8022FE28
{
    0:  Call  SetSpriteShading  ( FFFFFFFF )
   10:  Call  SetGroupEnabled   ( ~Model:sam_bt02:p1 00000000 )
   24:  Call  SetGroupEnabled   ( ~Model:sam_bt02:p2 00000000 )
   38:  Call  SetGroupEnabled   ( ~Model:sam_bt02:yuki 00000000 )
   4C:  Exec  $Script_8022FB80
   58:  Return
   60:  End
}

#new:Script $Script_AfterBattle_8022FE90
{
    0:  Return
    8:  End
}

#new:ForegroundModelList $ForegroundModelList_8022FEA0
{
	FFFFFFFF
	~Model:sam_bt02:kouri1
	00000000
}

#new:Stage $Stage_8022FEAC
{
	$ASCII_80231408  % sam_tex
	$ASCII_802313F8  % sam_bt02_shape
	$ASCII_802313E8  % sam_bt02_hit
	$Script_BeforeBattle_8022FE28
	$Script_AfterBattle_8022FE90
	$ASCII_802313E0  % yki_bg
	$ForegroundModelList_8022FEA0
	00000000
	00000000
	00000000
}

PADDING: 8022FED4 to 8022FEE0 (0063BA74 to 0063BA80)
00000000 00000000 00000000

% Origin: HEURISTIC
#new:Unknown $???_8022FEE0
{
	00000000 00000000 00000000 00000000
}

#new:Script $Script_8022FEF0
{
    0:  Call  $Function_8021AA28 ( )
    C:  Loop
   18:  	Wait  1`
   24:  EndLoop
   2C:  Return
   34:  End
}

% Origin: HEURISTIC
#new:Script $Script_8022FF2C
{
    0:  Set   *VarA  *Var0
   10:  Label  0
   1C:  Call  RandInt   ( 0000001E *Var0 )
   30:  Add   *Var0  0000001E
   40:  Wait  *Var0
   4C:  Set   *Var1  00000000
   5C:  Loop  0000000A
   68:  	Add   *Var1  00000024
   78:  	Call  RotateModel   ( *VarA *Var1 00000000 00000001 00000000 )
   98:  	Wait  1`
   A4:  EndLoop
   AC:  Goto  0
   B8:  Return
   C0:  End
}

% Origin: HEURISTIC
#new:Script $Script_8022FFF4
{
    0:  Set   *VarA  *Var0
   10:  Set   *VarB  *Var1
   20:  Exec  $Script_8022FF2C
   2C:  Set   *Var7  00000000
   3C:  Label  0
   48:  Add   *Var7  00000004
   58:  If  *Var7  >  00000E0F
   68:  	Sub   *Var7  00000E10
   78:  EndIf
   80:  Call  $Function_8021AA4C    ( *Var7 *Var0 *Var1 *Var2 )
   9C:  Call  TranslateModel        ( *VarA *Var0 *Var1 *Var2 )
   B8:  Wait  1`
   C4:  Goto  0
   D0:  Return
   D8:  End
}

% Origin: HEURISTIC
#new:Script $Script_802300D4
{
    0:  Set   *VarA  *Var0
   10:  Set   *Var7  00000000
   20:  Label  0
   2C:  Add   *Var7  00000004
   3C:  If  *Var7  >  00000E0F
   4C:  	Sub   *Var7  00000E10
   5C:  EndIf
   64:  Call  $Function_8021AA4C    ( *Var7 *Var0 *Var1 *Var2 )
   80:  Call  TranslateModel        ( *VarA *Var0 *Var1 *Var2 )
   9C:  Wait  1`
   A8:  Goto  0
   B4:  Return
   BC:  End
}

#new:Script $Script_BeforeBattle_80230198
{
    0:  Call  SetSpriteShading  ( FFFFFFFF )
   10:  Call  SetGroupEnabled   ( ~Model:sam_bt02:p1 00000000 )
   24:  Call  SetGroupEnabled   ( ~Model:sam_bt02:p2 00000000 )
   38:  Call  SetGroupEnabled   ( ~Model:sam_bt02:p3 00000000 )
   4C:  Call  SetGroupEnabled   ( ~Model:sam_bt02:yuki 00000000 )
   60:  Exec  $Script_8022FEF0
   6C:  Return
   74:  End
}

#new:Script $Script_AfterBattle_80230214
{
    0:  Return
    8:  End
}

#new:ForegroundModelList $ForegroundModelList_80230224
{
	FFFFFFFF
	~Model:sam_bt02:kouri1
	00000000
}

#new:Stage $Stage_80230230
{
	$ASCII_80231438  % sam_tex
	$ASCII_80231428  % sam_bt02_shape
	$ASCII_80231418  % sam_bt02_hit
	$Script_BeforeBattle_80230198
	$Script_AfterBattle_80230214
	$ASCII_80231410  % yki_bg
	$ForegroundModelList_80230224
	00000000
	00000000
	00000000
}

PADDING: 80230258 to 80230260 (0063BDF8 to 0063BE00)
00000000 00000000

% Origin: HEURISTIC
#new:Unknown $???_80230260
{
	00000000 00000000 00000000 00000000
}

#new:Script $Script_80230270
{
    0:  Call  $Function_8021AD48 ( )
    C:  Loop
   18:  	Wait  1`
   24:  EndLoop
   2C:  Return
   34:  End
}

#new:Script $Script_802302AC
{
    0:  Set   *VarA  *Var0
   10:  Label  0
   1C:  Call  RandInt   ( 0000001E *Var0 )
   30:  Add   *Var0  0000001E
   40:  Wait  *Var0
   4C:  Set   *Var1  00000000
   5C:  Loop  0000000A
   68:  	Add   *Var1  00000024
   78:  	Call  RotateModel   ( *VarA *Var1 00000000 00000001 00000000 )
   98:  	Wait  1`
   A4:  EndLoop
   AC:  Goto  0
   B8:  Return
   C0:  End
}

#new:Script $Script_80230374
{
    0:  Set   *VarA  *Var0
   10:  Set   *VarB  *Var1
   20:  Exec  $Script_802302AC
   2C:  Set   *Var7  00000000
   3C:  Label  0
   48:  Add   *Var7  00000004
   58:  If  *Var7  >  00000E0F
   68:  	Sub   *Var7  00000E10
   78:  EndIf
   80:  Call  $Function_8021AD6C    ( *Var7 *Var0 *Var1 *Var2 )
   9C:  Call  TranslateModel        ( *VarA *Var0 *Var1 *Var2 )
   B8:  Wait  1`
   C4:  Goto  0
   D0:  Return
   D8:  End
}

#new:Script $Script_80230454
{
    0:  Set   *VarA  *Var0
   10:  Set   *Var7  00000000
   20:  Label  0
   2C:  Add   *Var7  00000004
   3C:  If  *Var7  >  00000E0F
   4C:  	Sub   *Var7  00000E10
   5C:  EndIf
   64:  Call  $Function_8021AD6C    ( *Var7 *Var0 *Var1 *Var2 )
   80:  Call  TranslateModel        ( *VarA *Var0 *Var1 *Var2 )
   9C:  Wait  1`
   A8:  Goto  0
   B4:  Return
   BC:  End
}

#new:Script $Script_BeforeBattle_80230518
{
    0:  Call  SetSpriteShading  ( FFFFFFFF )
   10:  Thread
   18:  	Set   *Var0  00000010
   28:  	Set   *Var1  00000000
   38:  	Exec  $Script_80230374
   44:  	Wait  5`
   50:  	Set   *Var0  00000019
   60:  	Set   *Var1  00000000
   70:  	Exec  $Script_80230454
   7C:  	Wait  5`
   88:  	Set   *Var0  00000016
   98:  	Set   *Var1  00000000
   A8:  	Exec  $Script_80230454
   B4:  	Wait  5`
   C0:  	Set   *Var0  00000013
   D0:  	Set   *Var1  00000000
   E0:  	Exec  $Script_80230454
   EC:  EndThread
   F4:  Exec  $Script_80230270
  100:  Return
  108:  End
}

#new:Script $Script_AfterBattle_80230628
{
    0:  Return
    8:  End
}

#new:ForegroundModelList $ForegroundModelList_80230638
{
	FFFFFFFF
	~Model:sam_bt03:o278
	00000000
}

#new:Stage $Stage_80230644
{
	$ASCII_80231468  % sam_tex
	$ASCII_80231458  % sam_bt03_shape
	$ASCII_80231448  % sam_bt03_hit
	$Script_BeforeBattle_80230518
	$Script_AfterBattle_80230628
	$ASCII_80231440  % sam_bg
	$ForegroundModelList_80230638
	00000000
	00000000
	00000000
}

PADDING: 8023066C to 80230670 (0063C20C to 0063C210)
00000000

#new:Vector3D $Vector3D_80230670
{
	-35` 0` -52`
}

#new:Vector3D $Vector3D_8023067C
{
	-20` 0` -50`
}

#new:Vector3D $Vector3D_80230688
{
	-17` 0` -40`
}

#new:Vector3D $Vector3D_80230694
{
	-7` 0` -48`
}

#new:Vector3D $Vector3D_802306A0
{
	-28` 0` -46`
}

#new:Vector3D $Vector3D_802306AC
{
	-35` 0` -52`
}

#new:Vector3D $Vector3D_802306B8
{
	-20` 0` -50`
}

#new:Vector3D $Vector3D_802306C4
{
	-17` 0` -40`
}

#new:Vector3D $Vector3D_802306D0
{
	-7` 0` -48`
}

#new:Vector3D $Vector3D_802306DC
{
	-28` 0` -46`
}

#new:Vector3D $Vector3D_802306E8
{
	-35` 0` -52`
}

#new:Vector3D $Vector3D_802306F4
{
	-20` 0` -50`
}

#new:Vector3D $Vector3D_80230700
{
	-17` 0` -40`
}

#new:Vector3D $Vector3D_8023070C
{
	-7` 0` -48`
}

#new:Vector3D $Vector3D_80230718
{
	-28` 0` -46`
}

#new:Vector3D $Vector3D_80230724
{
	-35` 0` -52`
}

#new:Vector3D $Vector3D_80230730
{
	-20` 0` -50`
}

#new:Vector3D $Vector3D_8023073C
{
	-17` 0` -40`
}

#new:Vector3D $Vector3D_80230748
{
	-7` 0` -48`
}

#new:Vector3D $Vector3D_80230754
{
	-28` 0` -46`
}

#new:Vector3D $Vector3D_80230760
{
	-35` 0` -52`
}

#new:Vector3D $Vector3D_8023076C
{
	-20` 0` -50`
}

#new:Vector3D $Vector3D_80230778
{
	-17` 0` -40`
}

#new:Vector3D $Vector3D_80230784
{
	-7` 0` -48`
}

#new:Vector3D $Vector3D_80230790
{
	-28` 0` -46`
}

#new:Vector3D $Vector3D_8023079C
{
	-35` 0` -52`
}

#new:Vector3D $Vector3D_802307A8
{
	-20` 0` -50`
}

#new:Vector3D $Vector3D_802307B4
{
	-17` 0` -40`
}

#new:Vector3D $Vector3D_802307C0
{
	-7` 0` -48`
}

#new:Vector3D $Vector3D_802307CC
{
	-28` 0` -46`
}

#new:Vector3D $Vector3D_802307D8
{
	-35` 0` -52`
}

#new:Vector3D $Vector3D_802307E4
{
	-20` 0` -50`
}

#new:Vector3D $Vector3D_802307F0
{
	-17` 0` -40`
}

#new:Vector3D $Vector3D_802307FC
{
	-7` 0` -48`
}

#new:Vector3D $Vector3D_80230808
{
	-28` 0` -46`
}

#new:Vector3D $Vector3D_80230814
{
	-35` 0` -52`
}

#new:Vector3D $Vector3D_80230820
{
	-20` 0` -50`
}

#new:Vector3D $Vector3D_8023082C
{
	-17` 0` -40`
}

#new:Vector3D $Vector3D_80230838
{
	-7` 0` -48`
}

#new:Vector3D $Vector3D_80230844
{
	-28` 0` -46`
}

#new:Formation $Formation_00
{
	$Duplighost 00000001 0000000A 00000000 00000000 00000000 00000000
	$Duplighost 00000002 00000009 00000000 00000000 00000000 00000000
}

#new:Formation $Formation_01
{
	$Gulpit 00000001 00000014 00000000 00000000 00000000 00000000
	$Gulpit 00000002 00000013 00000000 00000000 00000000 00000000
	$GulpitRocks $Vector3D_80230670 00000009 00000000 00000000 00000000 00000000
	$GulpitRocks $Vector3D_8023067C 00000008 00000000 00000000 00000000 00000000
	$GulpitRocks $Vector3D_80230688 00000007 00000001 00000000 00000000 00000000
	$GulpitRocks $Vector3D_80230694 00000006 00000000 00000000 00000000 00000000
	$GulpitRocks $Vector3D_802306A0 00000005 00000001 00000000 00000000 00000000
}

#new:Formation $Formation_02
{
	$Gulpit 00000000 00000014 00000000 00000000 00000000 00000000
	$Gulpit 00000001 00000013 00000000 00000000 00000000 00000000
	$Gulpit 00000002 00000012 00000000 00000000 00000000 00000000
	$GulpitRocks $Vector3D_802306AC 00000009 00000000 00000000 00000000 00000000
	$GulpitRocks $Vector3D_802306B8 00000008 00000000 00000000 00000000 00000000
	$GulpitRocks $Vector3D_802306C4 00000007 00000001 00000000 00000000 00000000
	$GulpitRocks $Vector3D_802306D0 00000006 00000000 00000000 00000000 00000000
	$GulpitRocks $Vector3D_802306DC 00000005 00000001 00000000 00000000 00000000
}

#new:Formation $Formation_03
{
	$Gulpit 00000000 00000014 00000000 00000000 00000000 00000000
	$Gulpit 00000001 00000013 00000000 00000000 00000000 00000000
	$FrostPiranha 00000002 00000012 00000000 00000000 00000000 00000000
	$GulpitRocks $Vector3D_802306E8 00000009 00000000 00000000 00000000 00000000
	$GulpitRocks $Vector3D_802306F4 00000008 00000000 00000000 00000000 00000000
	$GulpitRocks $Vector3D_80230700 00000007 00000001 00000000 00000000 00000000
	$GulpitRocks $Vector3D_8023070C 00000006 00000000 00000000 00000000 00000000
	$GulpitRocks $Vector3D_80230718 00000005 00000001 00000000 00000000 00000000
}

#new:Formation $Formation_04
{
	$Gulpit 00000000 00000014 00000000 00000000 00000000 00000000
	$FrostPiranha 00000001 00000013 00000000 00000000 00000000 00000000
	$Gulpit 00000002 00000012 00000000 00000000 00000000 00000000
	$GulpitRocks $Vector3D_80230724 00000009 00000000 00000000 00000000 00000000
	$GulpitRocks $Vector3D_80230730 00000008 00000000 00000000 00000000 00000000
	$GulpitRocks $Vector3D_8023073C 00000007 00000001 00000000 00000000 00000000
	$GulpitRocks $Vector3D_80230748 00000006 00000000 00000000 00000000 00000000
	$GulpitRocks $Vector3D_80230754 00000005 00000001 00000000 00000000 00000000
}

#new:Formation $Formation_05
{
	$Gulpit 00000000 00000014 00000000 00000000 00000000 00000000
	$FrostPiranha 00000001 00000013 00000000 00000000 00000000 00000000
	$Gulpit 00000002 00000012 00000000 00000000 00000000 00000000
	$FrostPiranha 00000003 00000011 00000000 00000000 00000000 00000000
	$GulpitRocks $Vector3D_80230760 00000009 00000000 00000000 00000000 00000000
	$GulpitRocks $Vector3D_8023076C 00000008 00000000 00000000 00000000 00000000
	$GulpitRocks $Vector3D_80230778 00000007 00000001 00000000 00000000 00000000
	$GulpitRocks $Vector3D_80230784 00000006 00000000 00000000 00000000 00000000
	$GulpitRocks $Vector3D_80230790 00000005 00000001 00000000 00000000 00000000
}

#new:Formation $Formation_06
{
	$FrostPiranha 00000001 0000000A 00000000 00000000 00000000 00000000
	$FrostPiranha 00000002 00000009 00000000 00000000 00000000 00000000
}

#new:Formation $Formation_07
{
	$FrostPiranha 00000000 0000000A 00000000 00000000 00000000 00000000
	$FrostPiranha 00000001 00000009 00000000 00000000 00000000 00000000
	$FrostPiranha 00000002 00000008 00000000 00000000 00000000 00000000
	$FrostPiranha 00000003 00000007 00000000 00000000 00000000 00000000
}

#new:Formation $Formation_08
{
	$FrostPiranha 00000000 0000000A 00000000 00000000 00000000 00000000
	$FrostPiranha 00000001 00000009 00000000 00000000 00000000 00000000
	$Gulpit 00000002 00000009 00000000 00000000 00000000 00000000
	$GulpitRocks $Vector3D_8023079C 00000009 00000000 00000000 00000000 00000000
	$GulpitRocks $Vector3D_802307A8 00000008 00000000 00000000 00000000 00000000
	$GulpitRocks $Vector3D_802307B4 00000007 00000001 00000000 00000000 00000000
	$GulpitRocks $Vector3D_802307C0 00000006 00000000 00000000 00000000 00000000
	$GulpitRocks $Vector3D_802307CC 00000005 00000001 00000000 00000000 00000000
}

#new:Formation $Formation_09
{
	$FrostPiranha 00000000 0000000A 00000000 00000000 00000000 00000000
	$Gulpit 00000001 00000009 00000000 00000000 00000000 00000000
	$FrostPiranha 00000002 00000008 00000000 00000000 00000000 00000000
	$GulpitRocks $Vector3D_802307D8 00000009 00000000 00000000 00000000 00000000
	$GulpitRocks $Vector3D_802307E4 00000008 00000000 00000000 00000000 00000000
	$GulpitRocks $Vector3D_802307F0 00000007 00000001 00000000 00000000 00000000
	$GulpitRocks $Vector3D_802307FC 00000006 00000000 00000000 00000000 00000000
	$GulpitRocks $Vector3D_80230808 00000005 00000001 00000000 00000000 00000000
}

#new:Formation $Formation_0A
{
	$FrostPiranha 00000000 0000000A 00000000 00000000 00000000 00000000
	$Gulpit 00000001 00000009 00000000 00000000 00000000 00000000
	$FrostPiranha 00000002 00000008 00000000 00000000 00000000 00000000
	$Gulpit 00000003 00000007 00000000 00000000 00000000 00000000
	$GulpitRocks $Vector3D_80230814 00000009 00000000 00000000 00000000 00000000
	$GulpitRocks $Vector3D_80230820 00000008 00000000 00000000 00000000 00000000
	$GulpitRocks $Vector3D_8023082C 00000007 00000001 00000000 00000000 00000000
	$GulpitRocks $Vector3D_80230838 00000006 00000000 00000000 00000000 00000000
	$GulpitRocks $Vector3D_80230844 00000005 00000001 00000000 00000000 00000000
}

#new:Formation $Formation_0B
{
	$WhiteClubba 00000001 0000000A 00000000 00000000 00000000 00000000
	$WhiteClubba 00000002 00000009 00000000 00000000 00000000 00000000
}

#new:Formation $Formation_0C
{
	$WhiteClubba 00000000 0000000A 00000000 00000000 00000000 00000000
	$FrostPiranha 00000001 00000009 00000000 00000000 00000000 00000000
	$WhiteClubba 00000002 00000008 00000000 00000000 00000000 00000000
	$FrostPiranha 00000003 00000007 00000000 00000000 00000000 00000000
}

#new:Formation $Formation_0D
{
	$WhiteClubba 00000000 0000000A 00000000 00000000 00000000 00000000
	$FrostPiranha 00000001 00000009 00000000 00000000 00000000 00000000
	$WhiteClubba 00000002 00000008 00000000 00000000 00000000 00000000
	$GRYMagikoopa 00000003 00000007 00000000 00000000 00000000 00000000
}

#new:FormationTable $FormationTable
{
	$SJIS_80231600 00000002 $Formation_00 $Stage_8022F3B4 00000000
	$SJIS_802315F4 00000007 $Formation_01 $Stage_8022F3B4 00000000
	$SJIS_802315E8 00000008 $Formation_02 $Stage_8022F3B4 00000000
	$SJIS_802315CC 00000008 $Formation_03 $Stage_8022F3B4 00000000
	$SJIS_802315A8 00000008 $Formation_04 $Stage_8022F3B4 00000000
	$SJIS_80231578 00000009 $Formation_05 $Stage_8022F3B4 00000000
	$SJIS_80231564 00000002 $Formation_06 $Stage_8022F3B4 00000000
	$SJIS_80231550 00000004 $Formation_07 $Stage_8022F3B4 00000000
	$SJIS_80231534 00000008 $Formation_08 $Stage_8022F3B4 00000000
	$SJIS_8023150C 00000008 $Formation_09 $Stage_8022F3B4 00000000
	$SJIS_802314DC 00000009 $Formation_0A $Stage_8022F3B4 00000000
	$SJIS_802314C8 00000002 $Formation_0B $Stage_8022F3B4 00000000
	$SJIS_802314A0 00000004 $Formation_0C $Stage_8022F3B4 00000000
	$SJIS_80231470 00000004 $Formation_0D $Stage_8022F3B4 00000000
	00000000 00000000 00000000 00000000 00000000
}

#new:StageTable $StageTable
{
	$ASCII_80231634 $Stage_8022F3B4
	$ASCII_8023162C $Stage_8022F7EC
	$ASCII_80231624 $Stage_8022FB48
	$ASCII_8023161C $Stage_8022FEAC
	$ASCII_80231614 $Stage_80230230
	$ASCII_8023160C $Stage_80230644
	00000000 00000000
}

PADDING: 802312C8 to 802312D0 (0063CE68 to 0063CE70)
00000000 00000000

#new:ConstDouble $ConstDouble_802312D0
{
	47.000000d
}

#new:ConstDouble $ConstDouble_802312D8
{
	1.120000d
}

#new:ConstDouble $ConstDouble_802312E0
{
	0.530000d
}

#new:ConstDouble $ConstDouble_802312E8
{
	47.000000d
}

#new:ConstDouble $ConstDouble_802312F0
{
	0.800000d
}

#new:ConstDouble $ConstDouble_802312F8
{
	0.530000d
}

#new:ConstDouble $ConstDouble_80231300
{
	0.800000d
}

#new:ConstDouble $ConstDouble_80231308
{
	16.500000d
}

#new:ConstDouble $ConstDouble_80231310
{
	33.000000d
}

#new:ConstDouble $ConstDouble_80231318
{
	4.800000d
}

#new:JumpTable $JumpTable_80231320
{
	$Function_80219524[54] $Function_80219524[60] $Function_80219524[6C] $Function_80219524[78]
	$Function_80219524[B0] $Function_80219524[90] $Function_80219524[9C] $Function_80219524[A8]
	$Function_80219524[84]
}

PADDING: 80231344 to 80231350 (0063CEE4 to 0063CEF0)
00000000 00000000 00000000

#new:ASCII $ASCII_80231350
{
	"yki_bg"
}

#new:ASCII $ASCII_80231358
{
	"sam_bt01_hit"
}

#new:ASCII $ASCII_80231368
{
	"sam_bt01_shape"
}

#new:ASCII $ASCII_80231378
{
	"sam_tex"
}

#new:ASCII $ASCII_80231380
{
	"yki_bg"
}

#new:ASCII $ASCII_80231388
{
	"sam_bt02_hit"
}

#new:ASCII $ASCII_80231398
{
	"sam_bt02_shape"
}

#new:ASCII $ASCII_802313A8
{
	"sam_tex"
}

#new:ASCII $ASCII_802313B0
{
	"yki_bg"
}

#new:ASCII $ASCII_802313B8
{
	"sam_bt02_hit"
}

#new:ASCII $ASCII_802313C8
{
	"sam_bt02_shape"
}

#new:ASCII $ASCII_802313D8
{
	"sam_tex"
}

#new:ASCII $ASCII_802313E0
{
	"yki_bg"
}

#new:ASCII $ASCII_802313E8
{
	"sam_bt02_hit"
}

#new:ASCII $ASCII_802313F8
{
	"sam_bt02_shape"
}

#new:ASCII $ASCII_80231408
{
	"sam_tex"
}

#new:ASCII $ASCII_80231410
{
	"yki_bg"
}

#new:ASCII $ASCII_80231418
{
	"sam_bt02_hit"
}

#new:ASCII $ASCII_80231428
{
	"sam_bt02_shape"
}

#new:ASCII $ASCII_80231438
{
	"sam_tex"
}

#new:ASCII $ASCII_80231440
{
	"sam_bg"
}

#new:ASCII $ASCII_80231448
{
	"sam_bt03_hit"
}

#new:ASCII $ASCII_80231458
{
	"sam_bt03_shape"
}

#new:ASCII $ASCII_80231468
{
	"sam_tex"
}

#new:SJIS $SJIS_80231470
{
	ホワイトガボン,パックン,ガボン,グレイカメック % howaitogabon,pakkun,gabon,gureikamekku
}

#new:SJIS $SJIS_802314A0
{
	ホワイトガボン,パックン,ガボン,パックン % howaitogabon,pakkun,gabon,pakkun
}

#new:SJIS $SJIS_802314C8
{
	ホワイトガボンx２ % howaitogabonx2
}

#new:SJIS $SJIS_802314DC
{
	アイスパックン,ゴックン,アイスパックン,ゴックン % aisupakkun,gokkun,aisupakkun,gokkun
}

#new:SJIS $SJIS_8023150C
{
	アイスパックン,ゴックン,アイスパックン % aisupakkun,gokkun,aisupakkun
}

#new:SJIS $SJIS_80231534
{
	アイスパックンx２,ゴックン % aisupakkunx2,gokkun
}

#new:SJIS $SJIS_80231550
{
	アイスパックンx４ % aisupakkunx4
}

#new:SJIS $SJIS_80231564
{
	アイスパックンx２ % aisupakkunx2
}

#new:SJIS $SJIS_80231578
{
	ゴックン,アイスパックン,ゴックン,アイスパックン % gokkun,aisupakkun,gokkun,aisupakkun
}

#new:SJIS $SJIS_802315A8
{
	ゴックン,アイスパックン,ゴックン % gokkun,aisupakkun,gokkun
}

#new:SJIS $SJIS_802315CC
{
	ゴックンx2,アイスパックン % gokkunx2,aisupakkun
}

#new:SJIS $SJIS_802315E8
{
	ゴックンx3 % gokkunx3
}

#new:SJIS $SJIS_802315F4
{
	ゴックンx2 % gokkunx2
}

#new:SJIS $SJIS_80231600
{
	バケバケx2 % bakebakex2
}

#new:ASCII $ASCII_8023160C
{
	"sam_03"
}

#new:ASCII $ASCII_80231614
{
	"sam_02d"
}

#new:ASCII $ASCII_8023161C
{
	"sam_02c"
}

#new:ASCII $ASCII_80231624
{
	"sam_02b"
}

#new:ASCII $ASCII_8023162C
{
	"sam_02"
}

#new:ASCII $ASCII_80231634
{
	"sam_01"
}

PADDING: 8023163C to 80231640 (0063D1DC to 0063D1E0)
00000000

