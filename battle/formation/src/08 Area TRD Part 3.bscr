% Script File: 08 Area TRD Part 3.bscr
% Decoded from: 4CF1B0 to 4D01F0 (08 Area TRD Part 3)

#new:Function $Function_80218000
{
    0:  ADDIU     SP, SP, FFE0
    4:  SW        RA, 18 (SP)
    8:  SW        S1, 14 (SP)
    C:  SW        S0, 10 (SP)
   10:  LW        A0, 148 (A0)
   14:  JAL       ~Func:get_actor
   18:  COPY      S0, A1
   1C:  BEQ       S0, R0, .o2C
   20:  COPY      S1, V0
   24:  SAW       R0, $End[0]
        .o2C
   2C:  LA        S0, $End[0]
   34:  LW        V0, 0 (S0)
   38:  ADDIU     V0, V0, F
   3C:  MTC1      V0, F12
   40:  NOP
   44:  CVT.S.W   F12, F12
   48:  JAL       ~Func:clamp_angle
   4C:  SW        V0, 0 (S0)
   50:  TRUNC.W.S F4, F0
   54:  MFC1      V0, F4
   58:  LIF       F0, 6.28318
   64:  MTC1      V0, F12
   68:  NOP
   6C:  CVT.S.W   F12, F12
   70:  MUL.S     F12, F12, F0
   74:  NOP
   78:  LIF       F0, 360.0
   80:  SW        V0, 0 (S0)
   84:  JAL       ~Func:sin_rad
   88:  DIV.S     F12, F12, F0
   8C:  LIF       F2, 3.0
   94:  NOP
   98:  MUL.S     F0, F0, F2
   9C:  NOP
   A0:  TRUNC.W.S F4, F0
   A4:  MFC1      V1, F4
   A8:  NOP
   AC:  SB        V1, 19A (S1)
   B0:  LW        RA, 18 (SP)
   B4:  LW        S1, 14 (SP)
   B8:  LW        S0, 10 (SP)
   BC:  CLEAR     V0
   C0:  JR        RA
   C4:  ADDIU     SP, SP, 20
}

#new:Function $Function_802180C8
{
    0:  ADDIU     SP, SP, FFE8
    4:  SW        RA, 10 (SP)
    8:  JAL       ~Func:status_menu_start_blinking_sp
    C:  NOP
   10:  LW        RA, 10 (SP)
   14:  LI        V0, 2
   18:  JR        RA
   1C:  ADDIU     SP, SP, 18
}

#new:Function $Function_802180E8
{
    0:  ADDIU     SP, SP, FFE8
    4:  SW        RA, 10 (SP)
    8:  JAL       ~Func:status_menu_stop_blinking_sp
    C:  NOP
   10:  LW        RA, 10 (SP)
   14:  LI        V0, 2
   18:  JR        RA
   1C:  ADDIU     SP, SP, 18
}

% Origin: HEURISTIC
#new:Function $Function_80218108
{
    0:  ADDIU     SP, SP, FFE8
    4:  SW        RA, 10 (SP)
    8:  JAL       ~Func:status_menu_start_blinking_hp
    C:  NOP
   10:  JAL       ~Func:status_menu_start_blinking_fp
   14:  NOP
   18:  LW        RA, 10 (SP)
   1C:  LI        V0, 2
   20:  JR        RA
   24:  ADDIU     SP, SP, 18
}

% Origin: HEURISTIC
#new:Function $Function_80218130
{
    0:  ADDIU     SP, SP, FFE8
    4:  SW        RA, 10 (SP)
    8:  JAL       ~Func:status_menu_stop_blinking_hp
    C:  NOP
   10:  JAL       ~Func:status_menu_stop_blinking_fp
   14:  NOP
   18:  LW        RA, 10 (SP)
   1C:  LI        V0, 2
   20:  JR        RA
   24:  ADDIU     SP, SP, 18
}

#new:Function $Function_80218158
{
    0:  LA        V0, 800DC070
    8:  SB        R0, 4C (V0)
    C:  SB        R0, 5C (V0)
   10:  JR        RA
   14:  LI        V0, 2
}

#new:Function $Function_80218170
{
    0:  LA        A2, 800DC070
    8:  BEQ       A1, R0, .o14
    C:  LI        V0, A
   10:  SW        V0, 70 (A0)
        .o14
   14:  LW        V0, 4 (A2)
   18:  LI        V1, FFFD
   1C:  AND       V0, V0, V1
   20:  SW        V0, 4 (A2)
   24:  LW        V0, 70 (A0)
   28:  BNE       V0, R0, .o38
   2C:  ADDIU     V0, V0, FFFF
   30:  JR        RA
   34:  LI        V0, 2
        .o38
   38:  SW        V0, 70 (A0)
   3C:  JR        RA
   40:  CLEAR     V0
}

MISSING: 802181B4 to 80218220 (004CF364 to 004CF3D0)
3C06800E 24C6C070 10A00002 2402000A AC820070 8CC20004 2403FFFB 00431024
ACC20004 8C820070 14400003 2442FFFF 03E00008 24020002 AC820070 03E00008
0000102D 3C038011 2463F290 94620290 24420020 A4620290 03E00008 24020002
00000000 00000000 00000000

#new:Formation $Formation_00
{
	$GoombarioTutor2 00000006 0000000A 00000000 00000000 00000000 00000000
}

#new:FormationTable $FormationTable
{
	$SJIS_80218FF0 00000001 $Formation_00 $Stage_80218FC0 00000000
	00000000 00000000 00000000 00000000 00000000
}

#new:StageTable $StageTable
{
	$ASCII_80219008 $Stage_80218FC0
	00000000 00000000
}

PADDING: 80218274 to 80218280 (004CF424 to 004CF430)
00000000 00000000 00000000

#new:IdleAnimations $IdleAnimations_80218280
{
	.Status:Normal    00120001
	.Status:End
}

#new:DefenseTable $DefenseTable_8021828C
{
	.Element:Normal 00000000
	.Element:End
}

#new:StatusTable $StatusTable_80218298
{
	.Status:Normal      0`
	.Status:Default     0`
	.Status:Sleep       0`
	.Status:Poison      0`
	.Status:Frozen      0`
	.Status:Dizzy       0`
	.Status:Fear        0`
	.Status:Static      0`
	.Status:Paralyze    0`
	.Status:Shrink      0`
	.Status:Stop        0`
	.Status:DefaultTurnMod    0`
	.Status:SleepTurnMod      0`
	.Status:PoisonTurnMod     0`
	.Status:FrozenTurnMod     0`
	.Status:DizzyTurnMod      0`
	.Status:FearTurnMod       0`
	.Status:StaticTurnMod     0`
	.Status:ParalyzeTurnMod   0`
	.Status:ShrinkTurnMod     0`
	.Status:StopTurnMod       0`
	.Status:End
}

#new:PartsTable $PartsTable_80218344
{
	00800000 01000000 001800FF $IdleAnimations_80218280 $DefenseTable_8021828C 00000000 00000000 00000000 00000000
}

#new:Actor $GoombarioTutor2
{
	% stats
	[Index]        9Fb
	[Level]        99`b
	[MaxHP]        99`b
	[Coins]         0`b
	[Flags]       00240000
	[StatusTable] $StatusTable_80218298
	% ai
	[PartsCount]    1`s
	[PartsTable]  $PartsTable_80218344
	[Script]      $Script_Init_80218390
	% move effectiveness
	[Escape]        0`b
	[Item]          0`b
	[AirLift]       0`b
	[Hurricane]     0`b % Bow's "Spook" as well
	[UpAndAway]     0`b
	[PowerBounce] 100`b
	[SpinSmash]     0`b % weight (0-4)
	% ui positions
	[Size]         24`b  32`b % width height
	[HealthBar]     0`b   0`b % dx dy
	[StatusTurn]  -10`b  20`b % dx dy
	[StatusIcon]   10`b  20`b % dx dy
}

#new:Script $Script_Init_80218390
{
    0:  Call  BindTakeTurn      ( .Actor:Self $Script_TakeTurn_80218414 )
   14:  Call  BindIdle  ( .Actor:Self $Script_Idle_802183E8 )
   28:  Call  BindHandleEvent   ( .Actor:Self $Script_HandleEvent_80218404 )
   3C:  Exec  $Script_80218424
   48:  Return
   50:  End
}

#new:Script $Script_Idle_802183E8
{
    0:  Call  $Function_80218000 ( )
    C:  Return
   14:  End
}

#new:Script $Script_HandleEvent_80218404
{
    0:  Return
    8:  End
}

#new:Script $Script_TakeTurn_80218414
{
    0:  Return
    8:  End
}

#new:Script $Script_80218424
{
    0:  Call  SetBattleFlagBits ( 02000000 .True )
   14:  Call  $Function_80218158 ( )
   20:  Call  WaitForState      ( .BattleState:PlayerMenu )
   30:  Call  SetAnimation      ( .Actor:Player 00000000 00010002 )
   48:  Wait  15`
   54:  Call  UseIdleAnimation  ( .Actor:Player .False )
   68:  Call  ActorSpeak        ( 000C0114 .Actor:Self 00000001 00120002 00120001 ) % Now, Mario. This is your gauge for Star Energy.
   88:  Thread
   90:  	Call  EnableActorBlur   ( .Actor:Self 00000001 )
   A4:  	Call  SetGoalPos        ( .Actor:Self  -110`  100`  0` )
   C0:  	Call  FlyToGoal ( .Actor:Self  20`  0` .Easing:CosInOut )
   DC:  	Call  EnableActorBlur   ( .Actor:Self 00000000 )
   F0:  	Call  SetAnimation      ( .Actor:Player 00000000 0001002A )
  108:  EndThread
  110:  Wait  10`
  11C:  Call  $Function_802180C8 ( )
  128:  Wait  120`
  134:  Call  $Function_802180E8 ( )
  140:  Call  SetAnimation  ( .Actor:Player 00000000 00010002 )
  158:  Call  SetGoalToHome ( .Actor:Self )
  168:  Call  EnableActorBlur   ( .Actor:Self 00000001 )
  17C:  Call  FlyToGoal     ( .Actor:Self  20`  0` .Easing:CosInOut )
  198:  Call  EnableActorBlur   ( .Actor:Self 00000000 )
  1AC:  Call  ActorSpeak    ( 000C0115 .Actor:Self 00000001 00120002 00120001 ) % See? You can check to see how much Star Energy you ...
  1CC:  Wait  10`
  1D8:  Call  SetAnimation  ( .Actor:Player 00000000 0001002A )
  1F0:  Call  $Function_802180C8 ( )
  1FC:  Wait  120`
  208:  Call  $Function_802180E8 ( )
  214:  Call  SetAnimation  ( .Actor:Player 00000000 00010002 )
  22C:  Call  ActorSpeak    ( 000C0116 .Actor:Self 00000001 00120002 00120001 ) % Next, allow me to explain about Star Powers. First ...
  24C:  Wait  10`
  258:  Call  8026E020      ( 00000100 )
  268:  Call  8026E038      ( 00000002 )
  278:  Call  WaitForState  ( .BattleState:PlayerMove )
  288:  Set   *Var0  000000FF
  298:  Loop  0000000A
  2A4:  	Sub   *Var0  00000019
  2B4:  	If  *Var0  <  00000000
  2C4:  		Set   *Var0  00000000
  2D4:  	EndIf
  2DC:  	Call  SetPartAlpha  ( .Actor:Self 00000001 *Var0 )
  2F4:  	Wait  1`
  300:  EndLoop
  308:  Call  SetPartAlpha      ( .Actor:Self 00000001 00000000 )
  320:  Call  SetActorFlagBits  ( .Actor:Self 00000004 .True )
  338:  Thread
  340:  	Call  $Function_80218170 ( )
  34C:  EndThread
  354:  Call  WaitForState  ( .BattleState:EndPlayerTurn )
  364:  Set   *Var0  00000000
  374:  Loop  0000000A
  380:  	Add   *Var0  00000019
  390:  	If  *Var0  >  000000FF
  3A0:  		Set   *Var0  000000FF
  3B0:  	EndIf
  3B8:  	Call  SetPartAlpha  ( .Actor:Self 00000001 *Var0 )
  3D0:  	Wait  1`
  3DC:  EndLoop
  3E4:  Call  SetPartAlpha  ( .Actor:Self 00000001 000000FF )
  3FC:  Call  SetActorFlagBits  ( .Actor:Self 00000004 .False )
  414:  Call  ActorSpeak    ( 000C0117 .Actor:Self 00000001 00120002 00120001 ) % See? Both HP and FP have recovered 5 points each.  ...
  434:  Wait  10`
  440:  Call  UseIdleAnimation  ( .Actor:Player .False )
  454:  Call  SetAnimation  ( .Actor:Player 00000000 0001002A )
  46C:  Call  $Function_802180C8 ( )
  478:  Wait  120`
  484:  Call  $Function_802180E8 ( )
  490:  Call  SetAnimation  ( .Actor:Player 00000000 00010002 )
  4A8:  Call  ActorSpeak    ( 000C0118 .Actor:Self 00000001 00120002 00120001 ) % Usually, your partner's turn would come next, and  ...
  4C8:  Wait  10`
  4D4:  Call  SetBattleState    ( .BattleState:EndTurn )
  4E4:  Call  WaitForState  ( .BattleState:BeginTurn )
  4F4:  Wait  20`
  500:  Call  ActorSpeak    ( 000C0119 .Actor:Self 00000001 00120002 00120001 ) % OK. It's Mario's turn. Now, pay attention to the S ...
  520:  Wait  10`
  52C:  Call  UseIdleAnimation  ( .Actor:Player .False )
  540:  Thread
  548:  	Call  EnableActorBlur   ( .Actor:Self 00000001 )
  55C:  	Call  SetGoalPos        ( .Actor:Self  -110`  100`  0` )
  578:  	Call  FlyToGoal ( .Actor:Self  20`  0` .Easing:CosInOut )
  594:  	Call  EnableActorBlur   ( .Actor:Self 00000000 )
  5A8:  	Call  SetAnimation      ( .Actor:Player 00000000 0001002A )
  5C0:  EndThread
  5C8:  Wait  10`
  5D4:  Call  SetAnimation  ( .Actor:Player 00000000 0001002A )
  5EC:  Call  $Function_802180C8 ( )
  5F8:  Wait  120`
  604:  Call  $Function_802180E8 ( )
  610:  Call  SetAnimation  ( .Actor:Player 00000000 00010002 )
  628:  Call  SetAnimation  ( .Actor:Player 00000000 00010002 )
  640:  Call  SetGoalToHome ( .Actor:Self )
  650:  Call  EnableActorBlur   ( .Actor:Self 00000001 )
  664:  Call  FlyToGoal     ( .Actor:Self  20`  0` .Easing:CosInOut )
  680:  Call  EnableActorBlur   ( .Actor:Self 00000000 )
  694:  Call  ActorSpeak    ( 000C011A .Actor:Self 00000001 00120002 00120001 ) % Did you notice that the amount of Star Energy incr ...
  6B4:  Wait  10`
  6C0:  Call  ActorSpeak    ( 000C011B .Actor:Self 00000001 00120002 00120001 ) % Next, I'm going to teach you about another Star Po ...
  6E0:  Wait  10`
  6EC:  Call  8026E020      ( 00000100 )
  6FC:  Call  8026E038      ( 00000001 )
  70C:  Call  $Function_80218158 ( )
  718:  Call  WaitForState  ( .BattleState:PlayerMove )
  728:  Set   *Var0  000000FF
  738:  Loop  0000000A
  744:  	Sub   *Var0  00000019
  754:  	If  *Var0  <  00000000
  764:  		Set   *Var0  00000000
  774:  	EndIf
  77C:  	Call  SetPartAlpha  ( .Actor:Self 00000001 *Var0 )
  794:  	Wait  1`
  7A0:  EndLoop
  7A8:  Call  SetPartAlpha      ( .Actor:Self 00000001 00000000 )
  7C0:  Call  SetActorFlagBits  ( .Actor:Self 00000004 .True )
  7D8:  Thread
  7E0:  	Call  $Function_80218170 ( )
  7EC:  EndThread
  7F4:  Call  WaitForState  ( .BattleState:EndPlayerTurn )
  804:  Set   *Var0  00000000
  814:  Loop  0000000A
  820:  	Add   *Var0  00000019
  830:  	If  *Var0  >  000000FF
  840:  		Set   *Var0  000000FF
  850:  	EndIf
  858:  	Call  SetPartAlpha  ( .Actor:Self 00000001 *Var0 )
  870:  	Wait  1`
  87C:  EndLoop
  884:  Call  SetPartAlpha  ( .Actor:Self 00000001 000000FF )
  89C:  Call  SetActorFlagBits  ( .Actor:Self 00000004 .False )
  8B4:  Call  ActorSpeak    ( 000C011C .Actor:Self 00000001 00120002 00120001 ) % Did you notice how much the Star Energy increased? ...
  8D4:  Wait  10`
  8E0:  Call  UseIdleAnimation  ( .Actor:Player .False )
  8F4:  Call  SetAnimation  ( .Actor:Player 00000000 0001002A )
  90C:  Call  $Function_802180C8 ( )
  918:  Wait  120`
  924:  Call  $Function_802180E8 ( )
  930:  Call  SetAnimation  ( .Actor:Player 00000000 00010002 )
  948:  Call  ActorSpeak    ( 000C011D .Actor:Self 00000001 00120002 00120001 ) % You should also remember that you can replenish yo ...
  968:  Call  WaitForState  ( .BattleState:None )
  978:  Call  SetBattleState    ( .BattleState:EndTrainingBattle )
  988:  Wait  00002710
  994:  Return
  99C:  End
}

PADDING: 80218DC8 to 80218DD0 (004CFF78 to 004CFF80)
00000000 00000000

#new:Script $Script_80218DD0
{
    0:  Set   *VarA  *Var0
   10:  Label  0
   1C:  Call  TranslateModel    ( *VarA 00000000 00000002 00000000 )
   38:  Wait  5`
   44:  Call  TranslateModel    ( *VarA 00000000 00000000 00000000 )
   60:  Wait  5`
   6C:  Call  TranslateModel    ( *VarA 00000000 00000002 00000000 )
   88:  Wait  5`
   94:  Call  TranslateModel    ( *VarA 00000000 00000000 00000000 )
   B0:  Wait  5`
   BC:  Call  RandInt   ( 0000001E *Var0 )
   D0:  Add   *Var0  0000001E
   E0:  Wait  *Var0
   EC:  Goto  0
   F8:  Return
  100:  End
}

#new:Script $Script_BeforeBattle_80218ED8
{
    0:  Call  SetSpriteShading  ( FFFFFFFF )
   10:  Set   *Var0  00000013
   20:  Exec  $Script_80218DD0
   2C:  Set   *Var0  00000014
   3C:  Exec  $Script_80218DD0
   48:  Set   *Var0  00000015
   58:  Exec  $Script_80218DD0
   64:  Set   *Var0  00000016
   74:  Exec  $Script_80218DD0
   80:  Set   *Var0  00000017
   90:  Exec  $Script_80218DD0
   9C:  Set   *Var0  00000018
   AC:  Exec  $Script_80218DD0
   B8:  Return
   C0:  End
}

#new:Script $Script_AfterBattle_80218FA0
{
    0:  Return
    8:  End
}

#new:ForegroundModelList $ForegroundModelList_80218FB0
{
	~Model:nok_bt01:ha3
	~Model:nok_bt01:hap
	~Model:nok_bt01:kusa3
	00000000
}

#new:Stage $Stage_80218FC0
{
	$ASCII_80219038  % nok_tex
	$ASCII_80219028  % nok_bt01_shape
	$ASCII_80219018  % nok_bt01_hit
	$Script_BeforeBattle_80218ED8
	$Script_AfterBattle_80218FA0
	$ASCII_80219010  % nok_bg
	$ForegroundModelList_80218FB0
	00000000
	00000000
	00000000
}

PADDING: 80218FE8 to 80218FF0 (004D0198 to 004D01A0)
00000000 00000000

#new:SJIS $SJIS_80218FF0
{
	ほしのせい レクチャー % hoshinosei rekucha-
}

#new:ASCII $ASCII_80219008
{
	"nok_01"
}

#new:ASCII $ASCII_80219010
{
	"nok_bg"
}

#new:ASCII $ASCII_80219018
{
	"nok_bt01_hit"
}

#new:ASCII $ASCII_80219028
{
	"nok_bt01_shape"
}

#new:ASCII $ASCII_80219038
{
	"nok_tex"
}

