% Script File: 0C Area ISK Part 2.bscr
% Decoded from: 4EF4A0 to 4F7BE0 (0C Area ISK Part 2)

#new:Function $Function_80218000
{
    0:  ADDIU     SP, SP, FFA8
    4:  SW        S4, 20 (SP)
    8:  LI        S4, 3
    C:  SW        S2, 18 (SP)
   10:  SW        RA, 24 (SP)
   14:  SW        S3, 1C (SP)
   18:  SW        S1, 14 (SP)
   1C:  SW        S0, 10 (SP)
   20:  SDC1      F30, 50 (SP)
   24:  SDC1      F28, 48 (SP)
   28:  SDC1      F26, 40 (SP)
   2C:  SDC1      F24, 38 (SP)
   30:  SDC1      F22, 30 (SP)
   34:  SDC1      F20, 28 (SP)
   38:  LW        A0, 148 (A0)
   3C:  LIF       F20, 7.0
   44:  LIF       F30, 0.5960938
   50:  LIF       F28, 3.0
   58:  JAL       ~Func:get_actor
   5C:  CLEAR     S2
   60:  LI        A0, 180
   64:  JAL       ~Func:heap_malloc
   68:  COPY      S3, V0
   6C:  COPY      S1, V0
   70:  ADDIU     S0, S1, 8
   74:  LWC1      F26, 14C (S3)
   78:  LWC1      F2, 144 (S3)
   7C:  LIF       F1, 2.625
   84:  MTC1      R0, F0
   88:  CVT.D.S   F2, F2
   8C:  ADD.D     F2, F2, F0
   90:  LWC1      F0, 148 (S3)
   94:  LIF       F5, 2.3125
   9C:  MTC1      R0, F4
   A0:  CVT.D.S   F0, F0
   A4:  ADD.D     F0, F0, F4
   A8:  SW        S1, 78 (S3)
   AC:  CVT.S.D   F24, F2
   B0:  CVT.S.D   F22, F0
        .oB4
   B4:  COPY      A0, S3
   B8:  ADDU      A1, S4, S2
   BC:  SWC1      F20, 1C (S0)
   C0:  SWC1      F20, 24 (S0)
   C4:  SWC1      F20, 20 (S0)
   C8:  SWC1      F24, 0 (S1)
   CC:  SWC1      F22, FFFC (S0)
   D0:  SWC1      F26, 0 (S0)
   D4:  SW        R0, 14 (S0)
   D8:  SWC1      F30, 18 (S0)
   DC:  SWC1      F28, C (S0)
   E0:  JAL       ~Func:get_actor_part
   E4:  SW        R0, 10 (S0)
   E8:  LWC1      F0, 0 (S1)
   EC:  ADDIU     S2, S2, 1
   F0:  SWC1      F0, 2C (V0)
   F4:  LWC1      F0, FFFC (S0)
   F8:  ADDIU     S1, S1, 30
   FC:  SWC1      F0, 30 (V0)
  100:  LWC1      F0, 0 (S0)
  104:  SWC1      F0, 34 (V0)
  108:  SLTI      V0, S2, 8
  10C:  BNE       V0, R0, .oB4
  110:  ADDIU     S0, S0, 30
  114:  LW        RA, 24 (SP)
  118:  LW        S4, 20 (SP)
  11C:  LW        S3, 1C (SP)
  120:  LW        S2, 18 (SP)
  124:  LW        S1, 14 (SP)
  128:  LW        S0, 10 (SP)
  12C:  LDC1      F30, 50 (SP)
  130:  LDC1      F28, 48 (SP)
  134:  LDC1      F26, 40 (SP)
  138:  LDC1      F24, 38 (SP)
  13C:  LDC1      F22, 30 (SP)
  140:  LDC1      F20, 28 (SP)
  144:  LI        V0, 2
  148:  JR        RA
  14C:  ADDIU     SP, SP, 58
}

#new:Function $Function_80218150
{
    0:  ADDIU     SP, SP, FFD8
    4:  SDC1      F22, 20 (SP)
    8:  MTC1      A1, F22
    C:  LIF       F0, 6.28318
   18:  MTC1      A2, F6
   1C:  SDC1      F20, 18 (SP)
   20:  MUL.S     F20, F6, F0
   24:  NOP
   28:  SW        S0, 10 (SP)
   2C:  LIF       F0, 360.0
   34:  COPY      S0, A0
   38:  SW        RA, 14 (SP)
   3C:  DIV.S     F20, F20, F0
   40:  JAL       ~Func:sin_rad
   44:  MOV.S     F12, F20
   48:  MOV.S     F12, F20
   4C:  JAL       ~Func:cos_rad
   50:  MOV.S     F20, F0
   54:  NEG.S     F2, F22
   58:  MUL.S     F2, F2, F20
   5C:  NOP
   60:  MUL.S     F22, F22, F0
   64:  NOP
   68:  LWC1      F4, 0 (S0)
   6C:  ADD.S     F4, F4, F2
   70:  LWC1      F0, 4 (S0)
   74:  ADD.S     F0, F0, F22
   78:  SWC1      F4, 0 (S0)
   7C:  SWC1      F0, 4 (S0)
   80:  LW        RA, 14 (SP)
   84:  LW        S0, 10 (SP)
   88:  LDC1      F22, 20 (SP)
   8C:  LDC1      F20, 18 (SP)
   90:  JR        RA
   94:  ADDIU     SP, SP, 28
}

#new:Function $Function_802181E8
{
    0:  ADDIU     SP, SP, FFD8
    4:  SDC1      F22, 20 (SP)
    8:  MTC1      A1, F22
    C:  LIF       F0, 6.28318
   18:  MTC1      A2, F2
   1C:  SDC1      F20, 18 (SP)
   20:  MUL.S     F20, F2, F0
   24:  NOP
   28:  SW        S0, 10 (SP)
   2C:  LIF       F0, 360.0
   34:  COPY      S0, A0
   38:  SW        RA, 14 (SP)
   3C:  DIV.S     F20, F20, F0
   40:  JAL       ~Func:sin_rad
   44:  MOV.S     F12, F20
   48:  JAL       ~Func:cos_rad
   4C:  MOV.S     F12, F20
   50:  MUL.S     F22, F22, F0
   54:  NOP
   58:  SWC1      F22, 0 (S0)
   5C:  LW        RA, 14 (SP)
   60:  LW        S0, 10 (SP)
   64:  LDC1      F22, 20 (SP)
   68:  LDC1      F20, 18 (SP)
   6C:  JR        RA
   70:  ADDIU     SP, SP, 28
}

#new:Function $Function_8021825C
{
    0:  ADDIU     SP, SP, FFA0
    4:  SW        S0, 20 (SP)
    8:  COPY      S0, A0
    C:  SW        RA, 3C (SP)
   10:  SW        S6, 38 (SP)
   14:  SW        S5, 34 (SP)
   18:  SW        S4, 30 (SP)
   1C:  SW        S3, 2C (SP)
   20:  SW        S2, 28 (SP)
   24:  SW        S1, 24 (SP)
   28:  SDC1      F26, 58 (SP)
   2C:  SDC1      F24, 50 (SP)
   30:  SDC1      F22, 48 (SP)
   34:  SDC1      F20, 40 (SP)
   38:  LW        A0, 148 (S0)
   3C:  JAL       ~Func:get_actor
   40:  LW        S2, C (S0)
   44:  COPY      S1, V0
   48:  BEQ       S1, R0, .o3D8
   4C:  CLEAR     V0
   50:  LW        A1, 0 (S2)
   54:  JAL       ~Func:get_variable
   58:  COPY      A0, S0
   5C:  COPY      S5, V0
   60:  LI        V0, A
   64:  LB        V1, 210 (S1)
   68:  LW        S2, 78 (S1)
   6C:  BNE       V1, V0, .oA4
   70:  LI        S6, 3
   74:  LWC1      F2, 144 (S1)
   78:  LIF       F1, 2.375
   80:  MTC1      R0, F0
   84:  CVT.D.S   F2, F2
   88:  ADD.D     F2, F2, F0
   8C:  LWC1      F0, 148 (S1)
   90:  LIF       F5, 2.0625
   98:  MTC1      R0, F4
   9C:  BEQ       R0, R0, .oD0
   A0:  CVT.D.S   F0, F0
        .oA4
   A4:  LWC1      F2, 144 (S1)
   A8:  LIF       F1, 2.625
   B0:  MTC1      R0, F0
   B4:  CVT.D.S   F2, F2
   B8:  ADD.D     F2, F2, F0
   BC:  LWC1      F0, 148 (S1)
   C0:  LIF       F5, 2.3125
   C8:  MTC1      R0, F4
   CC:  CVT.D.S   F0, F0
        .oD0
   D0:  ADD.D     F0, F0, F4
   D4:  CVT.S.D   F20, F2
   D8:  CVT.S.D   F22, F0
   DC:  CLEAR     S3
   E0:  LI        S4, A
   E4:  ADDIU     S0, S2, 4
   E8:  LIF       F26, 3.5
   F0:  LIF       F24, 1.0
        .oF8
   F8:  LB        V0, 210 (S1)
   FC:  BNE       V0, S4, .o114
  100:  NOP
  104:  SWC1      F26, 20 (S0)
  108:  SWC1      F26, 28 (S0)
  10C:  BEQ       R0, R0, .o12C
  110:  SWC1      F26, 24 (S0)
        .o114
  114:  LIF       F0, 7.0
  11C:  NOP
  120:  SWC1      F0, 20 (S0)
  124:  SWC1      F0, 28 (S0)
  128:  SWC1      F0, 24 (S0)
        .o12C
  12C:  LWC1      F2, 14 (S0)
  130:  LWC1      F0, 10 (S0)
  134:  SUB.S     F2, F2, F0
  138:  NEG.S     F0, F0
  13C:  ADD.S     F0, F0, F0
  140:  C.LT.S    F2, F0
  144:  NOP
  148:  BC1F      .o180
  14C:  SWC1      F2, 14 (S0)
  150:  SWC1      F0, 14 (S0)
  154:  LW        V0, A8 (S1)
  158:  BEQ       V0, R0, .o180
  15C:  NOP
  160:  BNE       S3, R0, .o180
  164:  LI        A0, 2063
  168:  LWC1      F0, 14C (S1)
  16C:  SWC1      F0, 10 (SP)
  170:  LW        A2, 144 (S1)
  174:  LW        A3, 148 (S1)
  178:  JAL       ~Func:sfx_play_sound_at_position
  17C:  CLEAR     A1
        .o180
  180:  LWC1      F0, 0 (S0)
  184:  LWC1      F2, 14 (S0)
  188:  ADD.S     F0, F0, F2
  18C:  SWC1      F0, 0 (S0)
  190:  LB        V0, 210 (S1)
  194:  BNE       V0, S4, .o1CC
  198:  CVT.D.S   F0, F0
  19C:  LIF       F3, 2.0625
  1A4:  MTC1      R0, F2
  1A8:  NOP
  1AC:  C.LT.D    F0, F2
  1B0:  NOP
  1B4:  BC1F      .o200
  1B8:  MOV.S     F12, F20
  1BC:  LIF       F0, 2.5
  1C4:  BEQ       R0, R0, .o1F8
  1C8:  SW        R0, 14 (S0)
        .o1CC
  1CC:  LIF       F3, 2.3125
  1D4:  MTC1      R0, F2
  1D8:  NOP
  1DC:  C.LT.D    F0, F2
  1E0:  NOP
  1E4:  BC1F      .o200
  1E8:  MOV.S     F12, F20
  1EC:  LIF       F0, 5.0
  1F4:  SW        R0, 14 (S0)
        .o1F8
  1F8:  SWC1      F0, 0 (S0)
  1FC:  MOV.S     F12, F20
        .o200
  200:  LW        A2, 0 (S2)
  204:  LW        A3, 0 (S0)
  208:  JAL       ~Func:dist2D
  20C:  MOV.S     F14, F22
  210:  MOV.S     F12, F20
  214:  MOV.S     F14, F22
  218:  LW        A2, 0 (S2)
  21C:  LW        A3, 0 (S0)
  220:  JAL       ~Func:atan2
  224:  MOV.S     F20, F0
  228:  LWC1      F2, 28 (S0)
  22C:  C.LE.S    F2, F20
  230:  NOP
  234:  BC1F      .o280
  238:  MOV.S     F22, F0
  23C:  SUB.S     F2, F20, F2
  240:  MFC1      A2, F22
  244:  MFC1      A1, F2
  248:  JAL       $Function_802181E8
  24C:  ADDIU     A0, SP, 18
  250:  LWC1      F0, 18 (SP)
  254:  LIF       F3, 1.75
  25C:  MTC1      R0, F2
  260:  CVT.D.S   F0, F0
  264:  MUL.D     F0, F0, F2
  268:  NOP
  26C:  LWC1      F2, 14 (S0)
  270:  CVT.D.S   F2, F2
  274:  ADD.D     F2, F2, F0
  278:  CVT.S.D   F2, F2
  27C:  SWC1      F2, 14 (S0)
        .o280
  280:  LWC1      F0, 24 (S0)
  284:  C.LE.S    F0, F20
  288:  NOP
  28C:  BC1F      .o2CC
  290:  NOP
  294:  LWC1      F0, 20 (S0)
  298:  C.LE.S    F0, F20
  29C:  NOP
  2A0:  BC1F      .o2B0
  2A4:  NOP
  2A8:  BEQ       R0, R0, .o2C0
  2AC:  SUB.S     F0, F20, F0
        .o2B0
  2B0:  LWC1      F0, 18 (S0)
  2B4:  LWC1      F2, 1C (S0)
  2B8:  ADD.S     F0, F0, F2
  2BC:  SWC1      F0, 18 (S0)
        .o2C0
  2C0:  MFC1      A1, F0
  2C4:  BEQ       R0, R0, .o318
  2C8:  NOP
        .o2CC
  2CC:  LWC1      F2, 1C (S0)
  2D0:  LAD       F0, $ConstDouble_802204E0
  2D8:  CVT.D.S   F2, F2
  2DC:  MUL.D     F2, F2, F0
  2E0:  NOP
  2E4:  LWC1      F0, 18 (S0)
  2E8:  CVT.D.S   F0, F0
  2EC:  SUB.D     F0, F0, F2
  2F0:  MTC1      R0, F4
  2F4:  MTC1      R0, F5
  2F8:  CVT.S.D   F0, F0
  2FC:  CVT.D.S   F2, F0
  300:  C.LT.D    F2, F4
  304:  NOP
  308:  BC1F      .o314
  30C:  SWC1      F0, 18 (S0)
  310:  SW        R0, 18 (S0)
        .o314
  314:  LW        A1, 18 (S0)
        .o318
  318:  MFC1      A2, F22
  31C:  JAL       $Function_80218150
  320:  COPY      A0, S2
  324:  LWC1      F0, 18 (S0)
  328:  LIF       F3, 2.25
  330:  MTC1      R0, F2
  334:  CVT.D.S   F0, F0
  338:  C.LT.D    F2, F0
  33C:  NOP
  340:  BC1F      .o358
  344:  COPY      A0, S1
  348:  LIF       F0, 4.0
  350:  NOP
  354:  SWC1      F0, 18 (S0)
        .o358
  358:  ADDU      A1, S6, S3
  35C:  MTC1      S5, F0
  360:  NOP
  364:  CVT.S.W   F0, F0
  368:  JAL       ~Func:get_actor_part
  36C:  SWC1      F0, 4 (S0)
  370:  LWC1      F0, 0 (S2)
  374:  COPY      V1, V0
  378:  SWC1      F0, 2C (V1)
  37C:  LWC1      F0, 0 (S0)
  380:  SWC1      F0, 30 (V1)
  384:  LWC1      F0, 4 (S0)
  388:  SWC1      F0, 34 (V1)
  38C:  LB        V0, 210 (S1)
  390:  BNEL      V0, S4, .o3B0
  394:  SWC1      F24, 4C (V1)
  398:  LIF       F0, 0.5
  3A0:  SWC1      F24, 54 (V1)
  3A4:  SWC1      F0, 4C (V1)
  3A8:  BEQ       R0, R0, .o3B8
  3AC:  SWC1      F0, 50 (V1)
        .o3B0
  3B0:  SWC1      F24, 50 (V1)
  3B4:  SWC1      F24, 54 (V1)
        .o3B8
  3B8:  ADDIU     S3, S3, 1
  3BC:  LWC1      F22, 0 (S0)
  3C0:  ADDIU     S0, S0, 30
  3C4:  LWC1      F20, 0 (S2)
  3C8:  SLTI      V0, S3, 8
  3CC:  BNE       V0, R0, .oF8
  3D0:  ADDIU     S2, S2, 30
  3D4:  LI        V0, 2
        .o3D8
  3D8:  LW        RA, 3C (SP)
  3DC:  LW        S6, 38 (SP)
  3E0:  LW        S5, 34 (SP)
  3E4:  LW        S4, 30 (SP)
  3E8:  LW        S3, 2C (SP)
  3EC:  LW        S2, 28 (SP)
  3F0:  LW        S1, 24 (SP)
  3F4:  LW        S0, 20 (SP)
  3F8:  LDC1      F26, 58 (SP)
  3FC:  LDC1      F24, 50 (SP)
  400:  LDC1      F22, 48 (SP)
  404:  LDC1      F20, 40 (SP)
  408:  JR        RA
  40C:  ADDIU     SP, SP, 60
}

% Origin: HEURISTIC
#new:Function $Function_8021866C
{
    0:  ADDIU     SP, SP, FFE8
    4:  SW        RA, 10 (SP)
    8:  LW        V0, C (A0)
    C:  JAL       ~Func:get_variable
   10:  LW        A1, 4 (V0)
   14:  LW        RA, 10 (SP)
   18:  LI        V0, 2
   1C:  JR        RA
   20:  ADDIU     SP, SP, 18
}

#new:Function $Function_80218690
{
    0:  ADDIU     SP, SP, FFD8
    4:  SW        S1, 14 (SP)
    8:  COPY      S1, A0
    C:  SW        RA, 20 (SP)
   10:  SW        S3, 1C (SP)
   14:  SW        S2, 18 (SP)
   18:  SW        S0, 10 (SP)
   1C:  LW        S0, C (S1)
   20:  LW        A1, 0 (S0)
   24:  JAL       ~Func:get_variable
   28:  ADDIU     S0, S0, 4
   2C:  LW        A1, 0 (S0)
   30:  ADDIU     S0, S0, 4
   34:  COPY      A0, S1
   38:  JAL       ~Func:get_variable
   3C:  COPY      S3, V0
   40:  LW        A1, 0 (S0)
   44:  ADDIU     S0, S0, 4
   48:  COPY      A0, S1
   4C:  JAL       ~Func:get_variable
   50:  COPY      S2, V0
   54:  COPY      A0, S1
   58:  LW        A1, 0 (S0)
   5C:  JAL       ~Func:get_variable
   60:  COPY      S0, V0
   64:  LW        A0, 148 (S1)
   68:  JAL       ~Func:get_actor
   6C:  COPY      S1, V0
   70:  COPY      V1, V0
   74:  LW        V0, 8 (V1)
   78:  LBU       V0, 24 (V0)
   7C:  LW        A0, 8 (V1)
   80:  SUBU      S3, S3, V0
   84:  SB        S3, 194 (V1)
   88:  LBU       V0, 25 (A0)
   8C:  SUBU      S2, S2, V0
   90:  SB        S2, 195 (V1)
   94:  LBU       V0, 26 (A0)
   98:  SUBU      S0, S0, V0
   9C:  SB        S0, 196 (V1)
   A0:  LBU       A0, 27 (A0)
   A4:  SUBU      S1, S1, A0
   A8:  SB        S1, 197 (V1)
   AC:  LW        RA, 20 (SP)
   B0:  LW        S3, 1C (SP)
   B4:  LW        S2, 18 (SP)
   B8:  LW        S1, 14 (SP)
   BC:  LW        S0, 10 (SP)
   C0:  LI        V0, 2
   C4:  JR        RA
   C8:  ADDIU     SP, SP, 28
}

#new:Function $Function_8021875C
{
    0:  ADDIU     SP, SP, FFC8
    4:  SW        S1, 2C (SP)
    8:  COPY      S1, A0
    C:  SW        RA, 34 (SP)
   10:  SW        S2, 30 (SP)
   14:  SW        S0, 28 (SP)
   18:  LW        S0, C (S1)
   1C:  LW        A1, 0 (S0)
   20:  JAL       ~Func:get_variable
   24:  ADDIU     S0, S0, 4
   28:  LW        A1, 0 (S0)
   2C:  ADDIU     S0, S0, 4
   30:  COPY      A0, S1
   34:  JAL       ~Func:get_variable
   38:  COPY      S2, V0
   3C:  COPY      A0, S1
   40:  LW        A1, 0 (S0)
   44:  JAL       ~Func:get_variable
   48:  COPY      S0, V0
   4C:  LI        A0, 2
   50:  MTC1      S2, F6
   54:  NOP
   58:  CVT.S.W   F6, F6
   5C:  MTC1      S0, F0
   60:  NOP
   64:  CVT.S.W   F0, F0
   68:  MFC1      A1, F6
   6C:  MTC1      V0, F6
   70:  NOP
   74:  CVT.S.W   F6, F6
   78:  SWC1      F0, 10 (SP)
   7C:  LIF       F0, -0.5
   84:  LIF       F2, -0.9
   90:  LIF       F4, 0.5
   98:  LUI       A2, 4316
   9C:  MFC1      A3, F6
   A0:  LI        V1, 3C
   A4:  SW        V1, 20 (SP)
   A8:  SWC1      F0, 14 (SP)
   AC:  SWC1      F2, 18 (SP)
   B0:  JAL       ~Func:playFX_4C
   B4:  SWC1      F4, 1C (SP)
   B8:  LW        V1, C (V0)
   BC:  SW        R0, 30 (V1)
   C0:  LW        V1, C (V0)
   C4:  SW        R0, 38 (V1)
   C8:  LW        V1, C (V0)
   CC:  SW        R0, 34 (V1)
   D0:  LW        RA, 34 (SP)
   D4:  LW        S2, 30 (SP)
   D8:  LW        S1, 2C (SP)
   DC:  LW        S0, 28 (SP)
   E0:  LI        V0, 2
   E4:  JR        RA
   E8:  ADDIU     SP, SP, 38
}

PADDING: 80218848 to 80218850 (004EFCE8 to 004EFCF0)
00000000 00000000

#new:Function $Function_80218850
{
    0:  LUI       A1, C305
    4:  ADDIU     SP, SP, FFC8
    8:  SDC1      F22, 28 (SP)
    C:  LIF       F22, 72.0
   14:  SDC1      F24, 30 (SP)
   18:  LIF       F24, -143.0
   20:  LI        A0, 1
   24:  SDC1      F20, 20 (SP)
   28:  LIF       F20, 0.2980469
   34:  MFC1      A2, F22
   38:  MFC1      A3, F24
   3C:  LA        V0, $End[0]
   44:  SW        RA, 18 (SP)
   48:  SW        V0, 14 (SP)
   4C:  JAL       ~Func:playFX_20
   50:  SWC1      F20, 10 (SP)
   54:  LI        A0, 1
   58:  LUI       A1, 4301
   5C:  MFC1      A2, F22
   60:  MFC1      A3, F24
   64:  LA        V0, $End[4]
   6C:  SWC1      F20, 10 (SP)
   70:  JAL       ~Func:playFX_20
   74:  SW        V0, 14 (SP)
   78:  LW        RA, 18 (SP)
   7C:  LDC1      F24, 30 (SP)
   80:  LDC1      F22, 28 (SP)
   84:  LDC1      F20, 20 (SP)
   88:  LI        V0, 2
   8C:  JR        RA
   90:  ADDIU     SP, SP, 38
}

#new:Function $Function_802188E4
{
    0:  LAW       A0, $End[0]
    8:  ADDIU     SP, SP, FFE8
    C:  SW        RA, 10 (SP)
   10:  JAL       ~Func:remove_effect
   14:  NOP
   18:  LAW       A0, $End[4]
   20:  JAL       ~Func:remove_effect
   24:  NOP
   28:  LW        RA, 10 (SP)
   2C:  LI        V0, 2
   30:  JR        RA
   34:  ADDIU     SP, SP, 18
}

PADDING: 8021891C to 80218920 (004EFDBC to 004EFDC0)
00000000

#new:Function $Function_80218920
{
    0:  LUI       A1, C2B4
    4:  ADDIU     SP, SP, FFC8
    8:  SDC1      F22, 28 (SP)
    C:  LIF       F22, 45.0
   14:  SDC1      F24, 30 (SP)
   18:  LIF       F24, -146.0
   20:  LI        A0, 1
   24:  SDC1      F20, 20 (SP)
   28:  LIF       F20, 0.25
   30:  MFC1      A2, F22
   34:  MFC1      A3, F24
   38:  LA        V0, $End[10]
   40:  SW        RA, 18 (SP)
   44:  SW        V0, 14 (SP)
   48:  JAL       ~Func:playFX_20
   4C:  SWC1      F20, 10 (SP)
   50:  LI        A0, 1
   54:  LUI       A1, 42A0
   58:  MFC1      A2, F22
   5C:  MFC1      A3, F24
   60:  LA        V0, $End[14]
   68:  SWC1      F20, 10 (SP)
   6C:  JAL       ~Func:playFX_20
   70:  SW        V0, 14 (SP)
   74:  LW        RA, 18 (SP)
   78:  LDC1      F24, 30 (SP)
   7C:  LDC1      F22, 28 (SP)
   80:  LDC1      F20, 20 (SP)
   84:  LI        V0, 2
   88:  JR        RA
   8C:  ADDIU     SP, SP, 38
}

#new:Function $Function_802189B0
{
    0:  LAW       A0, $End[10]
    8:  ADDIU     SP, SP, FFE8
    C:  SW        RA, 10 (SP)
   10:  JAL       ~Func:remove_effect
   14:  NOP
   18:  LAW       A0, $End[14]
   20:  JAL       ~Func:remove_effect
   24:  NOP
   28:  LW        RA, 10 (SP)
   2C:  LI        V0, 2
   30:  JR        RA
   34:  ADDIU     SP, SP, 18
}

PADDING: 802189E8 to 802189F0 (004EFE88 to 004EFE90)
00000000 00000000

#new:Function $Function_802189F0
{
    0:  ADDIU     SP, SP, FFE0
    4:  LA        V0, $End[20]
    C:  LIF       F0, 0.2980469
   18:  LUI       A1, C2DC
   1C:  LUI       A2, 42A0
   20:  LUI       A3, C312
   24:  ADDIU     A0, R0, 1
   28:  SW        RA, 18 (SP)
   2C:  SW        V0, 14 (SP)
   30:  JAL       ~Func:playFX_20
   34:  SWC1      F0, 10 (SP)
   38:  LW        RA, 18 (SP)
   3C:  LI        V0, 2
   40:  JR        RA
   44:  ADDIU     SP, SP, 20
}

#new:Function $Function_80218A38
{
    0:  LAW       A0, $End[20]
    8:  ADDIU     SP, SP, FFE8
    C:  SW        RA, 10 (SP)
   10:  JAL       ~Func:remove_effect
   14:  NOP
   18:  LW        RA, 10 (SP)
   1C:  LI        V0, 2
   20:  JR        RA
   24:  ADDIU     SP, SP, 18
}

#new:Function $Function_80218A60
{
    0:  ADDIU     SP, SP, FFE0
    4:  LA        V0, $End[30]
    C:  LIF       F0, 0.2980469
   18:  LUI       A1, C2DC
   1C:  LUI       A2, 42A0
   20:  LUI       A3, C312
   24:  ADDIU     A0, R0, 1
   28:  SW        RA, 18 (SP)
   2C:  SW        V0, 14 (SP)
   30:  JAL       ~Func:playFX_20
   34:  SWC1      F0, 10 (SP)
   38:  LW        RA, 18 (SP)
   3C:  LI        V0, 2
   40:  JR        RA
   44:  ADDIU     SP, SP, 20
}

#new:Function $Function_80218AA8
{
    0:  LAW       A0, $End[30]
    8:  ADDIU     SP, SP, FFE8
    C:  SW        RA, 10 (SP)
   10:  JAL       ~Func:remove_effect
   14:  NOP
   18:  LW        RA, 10 (SP)
   1C:  LI        V0, 2
   20:  JR        RA
   24:  ADDIU     SP, SP, 18
}

#new:Function $Function_80218AD0
{
    0:  ADDIU     SP, SP, FFE0
    4:  LA        V0, $End[40]
    C:  LIF       F0, 0.2980469
   18:  LUI       A1, 42DC
   1C:  LUI       A2, 42A0
   20:  LUI       A3, C312
   24:  ADDIU     A0, R0, 1
   28:  SW        RA, 18 (SP)
   2C:  SW        V0, 14 (SP)
   30:  JAL       ~Func:playFX_20
   34:  SWC1      F0, 10 (SP)
   38:  LW        RA, 18 (SP)
   3C:  LI        V0, 2
   40:  JR        RA
   44:  ADDIU     SP, SP, 20
}

#new:Function $Function_80218B18
{
    0:  LAW       A0, $End[40]
    8:  ADDIU     SP, SP, FFE8
    C:  SW        RA, 10 (SP)
   10:  JAL       ~Func:remove_effect
   14:  NOP
   18:  LW        RA, 10 (SP)
   1C:  LI        V0, 2
   20:  JR        RA
   24:  ADDIU     SP, SP, 18
}

#new:IdleAnimations $IdleAnimations_80218B40
{
	.Status:Normal    00690001
	.Status:Stone     00690000
	.Status:Sleep     00690007
	.Status:Poison    00690001
	.Status:Stop      00690000
	.Status:Static    00690000
	.Status:Paralyze  00690000
	.Status:Dizzy     00690008
	.Status:End
}

#new:IdleAnimations $IdleAnimations_80218B84
{
	.Status:Normal    00690003
	.Status:Poison    00690003
	.Status:Stop      00690000
	.Status:Stone     00690000
	.Status:Sleep     00690007
	.Status:Static    00690000
	.Status:Paralyze  00690000
	.Status:Dizzy     00690008
	.Status:End
}

#new:IdleAnimations $IdleAnimations_80218BC8
{
	.Status:Normal    00690004
	.Status:Poison    00690004
	.Status:Stop      00690000
	.Status:Stone     00690000
	.Status:Sleep     00690007
	.Status:Static    00690000
	.Status:Paralyze  00690000
	.Status:Dizzy     00690008
	.Status:End
}

#new:IdleAnimations $IdleAnimations_80218C0C
{
	.Status:Normal    00690005
	.Status:Poison    00690005
	.Status:Stop      00690000
	.Status:Stone     00690000
	.Status:Sleep     00690007
	.Status:Static    00690000
	.Status:Paralyze  00690000
	.Status:Dizzy     00690008
	.Status:End
}

#new:IdleAnimations $IdleAnimations_80218C50
{
	.Status:Normal    00690002
	.Status:End
}

#new:DefenseTable $DefenseTable_80218C5C
{
	.Element:Normal 00000003
	.Element:Shock  00000003
	.Element:Fire   00000063
	.Element:Ice    00000063
	.Element:Magic  00000063
	.Element:End
}

#new:StatusTable $StatusTable_80218C88
{
	.Status:Normal      0`
	.Status:Default     0`
	.Status:Sleep       0`
	.Status:Poison      0`
	.Status:Frozen      0`
	.Status:Dizzy      75`
	.Status:Fear        0`
	.Status:Static      0`
	.Status:Paralyze    0`
	.Status:Shrink     75`
	.Status:Stop       75`
	.Status:DefaultTurnMod    0`
	.Status:SleepTurnMod     -1`
	.Status:PoisonTurnMod     0`
	.Status:FrozenTurnMod     0`
	.Status:DizzyTurnMod     -1`
	.Status:FearTurnMod       0`
	.Status:StaticTurnMod     0`
	.Status:ParalyzeTurnMod   0`
	.Status:ShrinkTurnMod     0`
	.Status:StopTurnMod      -1`
	.Status:End
}

#new:PartsTable $PartsTable_80218D34
{
	00020000 01000000 001800FF $IdleAnimations_80218B40 $DefenseTable_80218C5C 00000000 00000000 00000000 00000000
	00900001 02000000 F32800FF $IdleAnimations_80218B40 $DefenseTable_80218C5C 00000000 00000000 00F00000 00000000
	00124002 03000000 000C00FF $IdleAnimations_80218C50 $DefenseTable_80218C5C 00000000 00000000 00000000 00000000
	00124002 04000000 000C00FF $IdleAnimations_80218C50 $DefenseTable_80218C5C 00000000 00000000 00000000 00000000
	00124002 05000000 000C00FF $IdleAnimations_80218C50 $DefenseTable_80218C5C 00000000 00000000 00000000 00000000
	00124002 06000000 000C00FF $IdleAnimations_80218C50 $DefenseTable_80218C5C 00000000 00000000 00000000 00000000
	00124002 07000000 000C00FF $IdleAnimations_80218C50 $DefenseTable_80218C5C 00000000 00000000 00000000 00000000
	00124002 08000000 000C00FF $IdleAnimations_80218C50 $DefenseTable_80218C5C 00000000 00000000 00000000 00000000
	00124002 09000000 000C00FF $IdleAnimations_80218C50 $DefenseTable_80218C5C 00000000 00000000 00000000 00000000
	00124002 0A000000 000C00FF $IdleAnimations_80218C50 $DefenseTable_80218C5C 00000000 00000000 00000000 00000000
}

#new:Actor $Chomp
{
	% stats
	[Index]        A2b
	[Level]        14`b
	[MaxHP]         4`b
	[Coins]         0`b
	[Flags]       00000000
	[StatusTable] $StatusTable_80218C88
	% ai
	[PartsCount]   10`s
	[PartsTable]  $PartsTable_80218D34
	[Script]      $Script_Init_80218EC4
	% move effectiveness
	[Escape]        0`b
	[Item]          0`b
	[AirLift]       0`b
	[Hurricane]     0`b % Bow's "Spook" as well
	[UpAndAway]     0`b
	[PowerBounce]  95`b
	[SpinSmash]     0`b % weight (0-4)
	% ui positions
	[Size]         56`b  40`b % width height
	[HealthBar]     0`b   0`b % dx dy
	[StatusTurn]  -10`b  20`b % dx dy
	[StatusIcon]   10`b  20`b % dx dy
}

#new:Script $Script_Init_80218EC4
{
    0:  Call  SetActorVar   ( .Actor:Self 00000008 00000000 )
   18:  Call  BindTakeTurn  ( .Actor:Self $Script_TakeTurn_8021A7C4 )
   2C:  Call  BindIdle      ( .Actor:Self $Script_Idle_80219108 )
   40:  Call  BindHandleEvent   ( .Actor:Self $Script_HandleEvent_802197C4 )
   54:  Call  GetActorPos   ( .Actor:Self *Var0 *Var1 *Var2 )
   70:  Call  SetPartPos    ( .Actor:Self 00000002 *Var0 *Var1 *Var2 )
   90:  Set   *Var0  00000003
   A0:  Loop  00000008
   AC:  	Call  SetPartSize   ( .Actor:Self *Var0  16`  16` )
   C8:  	Add   *Var0  00000001
   D8:  EndLoop
   E0:  Call  $Function_80218000 ( )
   EC:  Exec  $Script_8021972C
   F8:  Return
  100:  End
}

#new:Script $Script_80218FCC
{
    0:  Call  GetStatusFlags    ( .Actor:Self *Var0 )
   14:  If  *Var0  &  ~Flags:StatusFlags:Sleep|Frozen|Fear|Paralyze|Dizzy|Stone|Stop % 35D000
   24:  	Call  GetActorPos   ( .Actor:Self *Var0 *Var1 *Var2 )
   40:  	Call  SetPartPos    ( .Actor:Self 00000002 *Var0 *Var1 *Var2 )
   60:  	Call  SetTargetOffset   ( .Actor:Self 00000002  0`  24` )
   7C:  	Call  8027D4C8      ( FFFFFF81 00000002 00000000 00000000 )
   98:  Else
   A0:  	Call  SetIdleGoalToHome ( .Actor:Self )
   B0:  	Call  GetIdleGoal       ( .Actor:Self *Var0 *Var1 *Var2 )
   CC:  	Call  SetPartPos        ( .Actor:Self 00000002 *Var0 *Var1 *Var2 )
   EC:  	Call  SetTargetOffset   ( .Actor:Self 00000002  -13`  40` )
  108:  	Call  8027D4C8  ( FFFFFF81 00000002 00000000 FFFFFFF2 )
  124:  EndIf
  12C:  Return
  134:  End
}

#new:Script $Script_Idle_80219108
{
    0:  Label  0
    C:  Loop
   18:  	ExecWait  $Script_80218FCC
   24:  	Call  GetStatusFlags    ( .Actor:Self *Var0 )
   38:  	If  *Var0  !&  ~Flags:StatusFlags:Sleep|Frozen|Fear|Paralyze|Dizzy|Stone|Stop % 35D000
   48:  		BreakLoop
   50:  	EndIf
   58:  	Wait  1`
   64:  EndLoop
   6C:  Call  SetIdleAnimations ( .Actor:Self 00000001 $IdleAnimations_80218C0C )
   84:  Call  SetActorIdleJumpGravity   ( .Actor:Self *Fixed[1.0] )
   98:  Call  SetIdleGoalToHome ( .Actor:Self )
   A8:  Call  GetIdleGoal       ( .Actor:Self *Var0 *Var1 *Var2 )
   C4:  Add   *Var0  0000000A
   D4:  Call  SetActorIdleJumpGravity   ( .Actor:Self *Fixed[0.8] )
   E8:  Call  SetIdleGoal       ( .Actor:Self *Var0 *Var1 *Var2 )
  104:  Call  IdleJumpToGoal    ( .Actor:Self  11` 00000001 )
  11C:  Loop
  128:  	ExecWait  $Script_80218FCC
  134:  	Call  GetStatusFlags    ( .Actor:Self *Var0 )
  148:  	If  *Var0  !&  ~Flags:StatusFlags:Sleep|Frozen|Fear|Paralyze|Dizzy|Stone|Stop % 35D000
  158:  		BreakLoop
  160:  	EndIf
  168:  	Wait  1`
  174:  EndLoop
  17C:  Call  SetActorIdleJumpGravity   ( .Actor:Self *Fixed[1.0] )
  190:  Call  SetIdleGoalToHome ( .Actor:Self )
  1A0:  Call  GetIdleGoal       ( .Actor:Self *Var0 *Var1 *Var2 )
  1BC:  Call  SetIdleGoal       ( .Actor:Self *Var0 *Var1 *Var2 )
  1D8:  Call  IdleJumpToGoal    ( .Actor:Self  6` 00000001 )
  1F0:  Call  RandInt   ( 0000000A *Var0 )
  204:  Add   *Var0  00000001
  214:  Wait  *Var0
  220:  Loop
  22C:  	ExecWait  $Script_80218FCC
  238:  	Call  GetStatusFlags    ( .Actor:Self *Var0 )
  24C:  	If  *Var0  !&  ~Flags:StatusFlags:Sleep|Frozen|Fear|Paralyze|Dizzy|Stone|Stop % 35D000
  25C:  		BreakLoop
  264:  	EndIf
  26C:  	Wait  1`
  278:  EndLoop
  280:  Call  SetIdleAnimations ( .Actor:Self 00000001 $IdleAnimations_80218BC8 )
  298:  Call  SetActorIdleJumpGravity   ( .Actor:Self *Fixed[0.8] )
  2AC:  Call  SetIdleGoalToHome ( .Actor:Self )
  2BC:  Call  GetIdleGoal       ( .Actor:Self *Var0 *Var1 *Var2 )
  2D8:  Call  SetIdleGoal       ( .Actor:Self *Var0 *Var1 *Var2 )
  2F4:  Call  IdleJumpToGoal    ( .Actor:Self  15` 00000001 )
  30C:  Loop
  318:  	ExecWait  $Script_80218FCC
  324:  	Call  GetStatusFlags    ( .Actor:Self *Var0 )
  338:  	If  *Var0  !&  ~Flags:StatusFlags:Sleep|Frozen|Fear|Paralyze|Dizzy|Stone|Stop % 35D000
  348:  		BreakLoop
  350:  	EndIf
  358:  	Wait  1`
  364:  EndLoop
  36C:  Call  SetIdleAnimations ( .Actor:Self 00000001 $IdleAnimations_80218C0C )
  384:  Call  SetActorIdleJumpGravity   ( .Actor:Self *Fixed[0.8] )
  398:  Call  SetIdleGoalToHome ( .Actor:Self )
  3A8:  Call  GetIdleGoal       ( .Actor:Self *Var0 *Var1 *Var2 )
  3C4:  Sub   *Var0  00000014
  3D4:  Call  SetIdleGoal       ( .Actor:Self *Var0 *Var1 *Var2 )
  3F0:  Call  IdleJumpToGoal    ( .Actor:Self  12` 00000001 )
  408:  Loop
  414:  	ExecWait  $Script_80218FCC
  420:  	Call  GetStatusFlags    ( .Actor:Self *Var0 )
  434:  	If  *Var0  !&  ~Flags:StatusFlags:Sleep|Frozen|Fear|Paralyze|Dizzy|Stone|Stop % 35D000
  444:  		BreakLoop
  44C:  	EndIf
  454:  	Wait  1`
  460:  EndLoop
  468:  Call  SetActorIdleJumpGravity   ( .Actor:Self *Fixed[0.8] )
  47C:  Call  SetIdleGoalToHome ( .Actor:Self )
  48C:  Call  GetIdleGoal       ( .Actor:Self *Var0 *Var1 *Var2 )
  4A8:  Sub   *Var0  0000000A
  4B8:  Call  SetIdleGoal       ( .Actor:Self *Var0 *Var1 *Var2 )
  4D4:  Call  IdleJumpToGoal    ( .Actor:Self  9` 00000001 )
  4EC:  Loop
  4F8:  	ExecWait  $Script_80218FCC
  504:  	Call  GetStatusFlags    ( .Actor:Self *Var0 )
  518:  	If  *Var0  !&  ~Flags:StatusFlags:Sleep|Frozen|Fear|Paralyze|Dizzy|Stone|Stop % 35D000
  528:  		BreakLoop
  530:  	EndIf
  538:  	Wait  1`
  544:  EndLoop
  54C:  Call  SetIdleAnimations ( .Actor:Self 00000001 $IdleAnimations_80218B84 )
  564:  Call  SetActorIdleJumpGravity   ( .Actor:Self *Fixed[0.8] )
  578:  Call  SetIdleGoalToHome ( .Actor:Self )
  588:  Call  GetIdleGoal       ( .Actor:Self *Var0 *Var1 *Var2 )
  5A4:  Call  SetIdleGoal       ( .Actor:Self *Var0 *Var1 *Var2 )
  5C0:  Call  IdleJumpToGoal    ( .Actor:Self  6` 00000001 )
  5D8:  Call  RandInt   ( 0000000A *Var0 )
  5EC:  Add   *Var0  0000000A
  5FC:  Wait  *Var0
  608:  Goto  0
  614:  Return
  61C:  End
}

#new:Script $Script_8021972C
{
    0:  Label  0
    C:  Wait  1`
   18:  Call  ActorExists   ( .Actor:Enemy1 *Var0 )
   2C:  If  *Var0  ==  .True
   3C:  	Call  GetActorPos   ( .Actor:Self *Var0 *Var1 *Var2 )
   58:  	Call  $Function_8021825C    ( *Var2 )
   68:  	Goto  0
   74:  EndIf
   7C:  Label  1
   88:  Return
   90:  End
}

#new:Script $Script_HandleEvent_802197C4
{
    0:  Call  UseIdleAnimation  ( .Actor:Self .False )
   14:  Call  EnableIdleScript  ( .Actor:Self 00000000 )
   28:  Call  SetActorScale     ( .Actor:Self *Fixed[1.0] *Fixed[1.0] *Fixed[1.0] )
   44:  Call  GetLastEvent      ( .Actor:Self *Var0 )
   58:  Set   *VarF  *Var0
   68:  Switch  *Var0
   74:  	Case  ==  .Event:HitCombo % 9
   80:  		SetConst  *Var0  00000001
   90:  		SetConst  *Var1  00690006
   A0:  		ExecWait  DoNormalHit
   AC:  	Case  ==  .Event:Hit % A
   B8:  		SetConst  *Var0  00000001
   C8:  		SetConst  *Var1  00690006
   D8:  		ExecWait  DoNormalHit
   E4:  	Case  ==  .Event:BeginFirstStrike % 38
   F0:  	Case  ==  .Event:BurnHit % E
   FC:  		SetConst  *Var0  00000001
  10C:  		SetConst  *Var1  00690006
  11C:  		SetConst  *Var2  FFFFFFFF
  12C:  		ExecWait  DoBurnHit
  138:  	Case  ==  .Event:BurnDeath % 24
  144:  		SetConst  *Var0  00000001
  154:  		SetConst  *Var1  00690006
  164:  		SetConst  *Var2  FFFFFFFF
  174:  		ExecWait  DoBurnHit
  180:  		Wait  10`
  18C:  		Call  SetActorVar   ( .Actor:Enemy0 0000000C 00000002 )
  1A4:  		SetConst  *Var0  00000001
  1B4:  		SetConst  *Var1  00690006
  1C4:  		ExecWait  DoDeath
  1D0:  		Return
  1D8:  	Case  ==  .Event:SpinSmashHit % B
  1E4:  		SetConst  *Var0  00000001
  1F4:  		SetConst  *Var1  00690006
  204:  		ExecWait  $Script_8021A200
  210:  		Call  EnableIdleScript  ( .Actor:Self FFFFFFFF )
  224:  		Call  UseIdleAnimation  ( .Actor:Self .True )
  238:  		Return
  240:  	Case  ==  .Event:ShockHit % 2F
  24C:  		SetConst  *Var0  00000001
  25C:  		SetConst  *Var1  00690006
  26C:  		ExecWait  DoShockHit
  278:  		SetConst  *Var0  00000001
  288:  		SetConst  *Var1  00690006
  298:  		Call  UseBattleCamPreset    ( 00000002 )
  2A8:  		Call  SetAnimation  ( .Actor:Self *Var0 *Var1 )
  2C0:  		Call  GetActorPos   ( .Actor:Self *Var0 *Var1 *Var2 )
  2DC:  		Set   *Var1  00000000
  2EC:  		Call  SetGoalPos    ( .Actor:Self *Var0 *Var1 *Var2 )
  308:  		Call  SetActorJumpGravity   ( .Actor:Self *Fixed[1.4] )
  31C:  		Call  AddGoalPos    ( .Actor:Self  30`  0`  0` )
  338:  		Call  JumpToGoal    ( .Actor:Self  15` .False .True .False )
  358:  		Call  PlaySoundAtActor  ( .Actor:Self 00002062 )
  36C:  		Call  AddGoalPos    ( .Actor:Self  15`  0`  0` )
  388:  		Call  JumpToGoal    ( .Actor:Self  8` .False .True .False )
  3A8:  		Call  PlaySoundAtActor  ( .Actor:Self 00002062 )
  3BC:  		Call  AddGoalPos    ( .Actor:Self  5`  0`  0` )
  3D8:  		Call  JumpToGoal    ( .Actor:Self  5` .False .True .False )
  3F8:  		Call  PlaySoundAtActor  ( .Actor:Self 00002062 )
  40C:  		Call  JumpToGoal    ( .Actor:Self  5` .False .True .False )
  42C:  		Call  PlaySoundAtActor  ( .Actor:Self 00002062 )
  440:  		SetConst  *Var0  00000001
  450:  		SetConst  *Var1  00690005
  460:  		ExecWait  $Script_8021B41C
  46C:  		Call  SetActorJumpGravity   ( .Actor:Self *Fixed[1.6] )
  480:  		Call  JumpToGoal    ( .Actor:Self  5` .False .True .False )
  4A0:  		Call  PlaySoundAtActor  ( .Actor:Self 00002062 )
  4B4:  		Thread
  4BC:  			Call  ShakeCam  ( .Cam:Battle 00000000  1` *Fixed[0.5] )
  4D8:  		EndThread
  4E0:  		Call  SetGoalToHome ( .Actor:Self )
  4F0:  		Call  GetGoalPos    ( .Actor:Self *Var0 *Var1 *Var2 )
  50C:  		Call  SetPartPos    ( .Actor:Self 00000002 *Var0 *Var1 *Var2 )
  52C:  		Call  SetActorVar   ( .Actor:Self 00000008 00000000 )
  544:  	Case  ==  .Event:BeginAirLift % 3A
  550:  		Call  GetStatusFlags    ( .Actor:Self *Var0 )
  564:  		If  *Var0  !&  ~Flags:StatusFlags:Sleep|Frozen|Fear|Paralyze|Dizzy|Stone|Stop % 35D000
  574:  			Call  SetGoalToHome ( .Actor:Self )
  584:  			Call  GetGoalPos    ( .Actor:Self *Var1 *Var2 *Var3 )
  5A0:  			If  *Var0  &  ~Flags:StatusFlags:Shrink % 80000
  5B0:  				Sub   *Var1  0000000A
  5C0:  				Add   *Var2  00000004
  5D0:  			Else
  5D8:  				Sub   *Var1  00000005
  5E8:  				Add   *Var2  0000000B
  5F8:  			EndIf
  600:  			Call  SetActorPos   ( .Actor:Self *Var1 *Var2 *Var3 )
  61C:  		EndIf
  624:  		SetConst  *Var0  00000001
  634:  		SetConst  *Var1  00690006
  644:  		ExecWait  DoAirLift
  650:  		Call  EnableIdleScript  ( .Actor:Self FFFFFFFF )
  664:  		Call  UseIdleAnimation  ( .Actor:Self .True )
  678:  		Return
  680:  	Case  ==  .Event:BlowAway % 16
  68C:  		SetConst  *Var0  00000001
  69C:  		SetConst  *Var1  00690006
  6AC:  		ExecWait  DoBlowAway
  6B8:  		Return
  6C0:  	Case  ==  .Event:AirLiftFailed % 1F
  6CC:  		SetConst  *Var0  00000001
  6DC:  		SetConst  *Var1  00690001
  6EC:  		ExecWait  DoImmune
  6F8:  		Call  SetAnimationRate  ( .Actor:Self 00000001 *Fixed[1.0] )
  710:  	CaseOR  ==  00000017 % 17
  71C:  	CaseOR  ==  .Event:Immune % 19
  728:  		SetConst  *Var0  00000001
  738:  		SetConst  *Var1  00690001
  748:  		ExecWait  DoImmune
  754:  	EndCaseGroup
  75C:  	Case  ==  .Event:ShockDeath % 26
  768:  		SetConst  *Var0  00000001
  778:  		SetConst  *Var1  00690006
  788:  		ExecWait  DoShockHit
  794:  		Call  SetActorVar   ( .Actor:Self 00000008 00000000 )
  7AC:  		Wait  10`
  7B8:  		Call  SetActorVar   ( .Actor:Enemy0 0000000C 00000002 )
  7D0:  		SetConst  *Var0  00000001
  7E0:  		SetConst  *Var1  00690006
  7F0:  		ExecWait  DoDeath
  7FC:  		Return
  804:  	Case  ==  .Event:Death % 20
  810:  		SetConst  *Var0  00000001
  820:  		SetConst  *Var1  00690006
  830:  		ExecWait  DoNormalHit
  83C:  		Wait  10`
  848:  		Call  SetActorVar   ( .Actor:Enemy0 0000000C 00000002 )
  860:  		SetConst  *Var0  00000001
  870:  		SetConst  *Var1  00690006
  880:  		ExecWait  DoDeath
  88C:  		Return
  894:  	Case  ==  .Event:SpinSmashDeath % 21
  8A0:  		SetConst  *Var0  00000001
  8B0:  		SetConst  *Var1  00690006
  8C0:  		ExecWait  $Script_8021A200
  8CC:  		Call  SetActorVar   ( .Actor:Enemy0 0000000C 00000002 )
  8E4:  		SetConst  *Var0  00000001
  8F4:  		SetConst  *Var1  00690006
  904:  		ExecWait  DoDeath
  910:  		Return
  918:  	Case  ==  .Event:RecoverStatus % 31
  924:  		SetConst  *Var0  00000001
  934:  		SetConst  *Var1  00690001
  944:  		ExecWait  DoRecover
  950:  	Default
  958:  EndSwitch
  960:  Call  GetStatusFlags    ( .Actor:Self *Var0 )
  974:  If  *Var0  &  ~Flags:StatusFlags:Sleep|Paralyze|Dizzy|Stone % 151000
  984:  	Call  GetActorPos   ( .Actor:Self *Var0 *Var1 *Var2 )
  9A0:  	If  *Var1  !=  00000000
  9B0:  		Call  SetActorJumpGravity   ( .Actor:Self *Fixed[0.8] )
  9C4:  		Call  SetGoalPos    ( .Actor:Self *Var0  0` *Var2 )
  9E0:  		Call  FallToGoal    ( .Actor:Self  11` )
  9F4:  	EndIf
  9FC:  EndIf
  A04:  Call  EnableIdleScript  ( .Actor:Self FFFFFFFF )
  A18:  Call  UseIdleAnimation  ( .Actor:Self .True )
  A2C:  Return
  A34:  End
}

#new:Script $Script_8021A200
{
    0:  Call  ActorExists   ( .Actor:Enemy0 *Var0 )
   14:  If  *Var0  ==  .False
   24:  	Goto  1
   30:  EndIf
   38:  Call  GetActorVar   ( .Actor:Enemy0 00000008 *Var0 )
   50:  If  *Var0  ==  00000000
   60:  	Goto  1
   6C:  EndIf
   74:  Label  0
   80:  Call  SetAnimation  ( .Actor:Self 00000001 00690006 )
   98:  Call  SetTargetActor        ( .Actor:Self .Actor:Enemy0 )
   AC:  Call  SetGoalToTarget       ( .Actor:Self )
   BC:  Call  GetGoalPos    ( .Actor:Self *Var0 *Var1 *Var2 )
   D8:  Call  SetGoalPos    ( .Actor:Self *Var0  20` *Var2 )
   F4:  Call  SetActorJumpGravity   ( .Actor:Self *Fixed[0.1] )
  108:  Call  SetActorSpeed ( .Actor:Self *Fixed[7.0] )
  11C:  Call  JumpToGoal    ( .Actor:Self  0` .False .True .False )
  13C:  Thread
  144:  	Call  ShakeCam  ( .Cam:Battle 00000000  2` *Fixed[1.0] )
  160:  EndThread
  168:  Wait  2`
  174:  Call  EnemyDamageTarget     ( .Actor:Self *Var0 ~Flags:DamageType:IgnoreDefense 00000000 00000000 00000001 00000020 )
  19C:  Call  SetActorJumpGravity   ( .Actor:Self *Fixed[0.1] )
  1B0:  Call  SetActorSpeed ( .Actor:Self *Fixed[6.0] )
  1C4:  Call  GetActorPos   ( .Actor:Self *Var0 *Var1 *Var2 )
  1E0:  Call  SetGoalPos    ( .Actor:Self  150` *Var1 *Var2 )
  1FC:  Call  JumpToGoal    ( .Actor:Self  0` .False .True .False )
  21C:  Thread
  224:  	Call  GetStatusFlags    ( .Actor:Self *Var0 )
  238:  	If  *Var0  !&  ~Flags:StatusFlags:Shrink % 80000
  248:  		Call  ShakeCam  ( .Cam:Battle 00000000  1` *Fixed[0.5] )
  264:  	EndIf
  26C:  EndThread
  274:  Set   *Var1  00000000
  284:  Call  SetActorJumpGravity   ( .Actor:Self *Fixed[1.0] )
  298:  Call  SetActorSpeed ( .Actor:Self *Fixed[6.0] )
  2AC:  Call  SetGoalPos    ( .Actor:Self  130` *Var1 *Var2 )
  2C8:  Call  JumpToGoal    ( .Actor:Self  10` .False .True .False )
  2E8:  Thread
  2F0:  	Call  GetStatusFlags    ( .Actor:Self *Var0 )
  304:  	If  *Var0  !&  ~Flags:StatusFlags:Shrink % 80000
  314:  		Call  ShakeCam  ( .Cam:Battle 00000000  1` *Fixed[0.5] )
  330:  	EndIf
  338:  EndThread
  340:  Call  SetActorDispOffset    ( .Actor:Self 00000000 00000000 00000000 )
  35C:  Wait  15`
  368:  Goto  A
  374:  Label  1
  380:  Call  SetAnimation  ( .Actor:Self 00000001 00690006 )
  398:  Call  SetActorJumpGravity   ( .Actor:Self *Fixed[0.1] )
  3AC:  Call  SetActorSpeed ( .Actor:Self *Fixed[6.0] )
  3C0:  Call  GetActorPos   ( .Actor:Self *Var0 *Var1 *Var2 )
  3DC:  Call  SetGoalPos    ( .Actor:Self  135` *Var1 *Var2 )
  3F8:  Call  JumpToGoal    ( .Actor:Self  0` .False .True .False )
  418:  Thread
  420:  	Call  GetStatusFlags    ( .Actor:Self *Var0 )
  434:  	If  *Var0  !&  ~Flags:StatusFlags:Shrink % 80000
  444:  		Call  ShakeCam  ( .Cam:Battle 00000000  1` *Fixed[0.5] )
  460:  	EndIf
  468:  EndThread
  470:  Set   *Var1  00000000
  480:  Call  SetActorJumpGravity   ( .Actor:Self *Fixed[1.0] )
  494:  Call  SetActorSpeed ( .Actor:Self *Fixed[6.0] )
  4A8:  Call  SetGoalPos    ( .Actor:Self  105` *Var1 *Var2 )
  4C4:  Call  JumpToGoal    ( .Actor:Self  10` .False .True .False )
  4E4:  Thread
  4EC:  	Call  GetStatusFlags    ( .Actor:Self *Var0 )
  500:  	If  *Var0  !&  ~Flags:StatusFlags:Shrink % 80000
  510:  		Call  ShakeCam  ( .Cam:Battle 00000000  1` *Fixed[0.5] )
  52C:  	EndIf
  534:  EndThread
  53C:  Call  SetActorDispOffset    ( .Actor:Self 00000000 00000000 00000000 )
  558:  Wait  15`
  564:  Label  A
  570:  SetConst  *Var0  00000001
  580:  SetConst  *Var1  00690001
  590:  ExecWait  $Script_8021B41C
  59C:  Call  SetAnimation  ( .Actor:Self 00000001 00680001 )
  5B4:  Return
  5BC:  End
}

#new:Script $Script_TakeTurn_8021A7C4
{
    0:  Call  SetActorVar       ( .Actor:Self 00000008 00000001 )
   18:  Call  UseIdleAnimation  ( .Actor:Self .False )
   2C:  Call  EnableIdleScript  ( .Actor:Self 00000000 )
   40:  Call  SetTargetActor    ( .Actor:Self .Actor:Player )
   54:  Call  UseBattleCamPreset    ( 0000003F )
   64:  Call  BattleCamTargetActor  ( .Actor:Self )
   74:  Call  8024ECF8  ( FFFFFFFF 00000001 00000000 )
   8C:  Call  SetActorJumpGravity   ( .Actor:Self *Fixed[0.5] )
   A0:  Call  GetActorPos       ( .Actor:Self *Var0 *Var1 *Var2 )
   BC:  Set   *Var1  00000000
   CC:  Add   *Var0  0000002D
   DC:  Call  SetGoalPos        ( .Actor:Self *Var0 *Var1 *Var2 )
   F8:  Call  JumpToGoal        ( .Actor:Self  15` .False .True .False )
  118:  Call  PlaySoundAtActor  ( .Actor:Self 00002062 )
  12C:  Thread
  134:  	Call  GetStatusFlags    ( .Actor:Self *Var0 )
  148:  	If  *Var0  !&  ~Flags:StatusFlags:Shrink % 80000
  158:  		Call  ShakeCam  ( .Cam:Battle 00000000  1` *Fixed[0.5] )
  174:  	EndIf
  17C:  EndThread
  184:  Call  SetAnimation      ( .Actor:Self 00000001 00690005 )
  19C:  Wait  15`
  1A8:  Call  PlaySoundAtActor  ( .Actor:Self 0000010F )
  1BC:  Call  EnemyTestTarget   ( .Actor:Self *Var0 ~Flags:DamageType:0 00000000 00000001 00000010 )
  1E0:  Switch  *Var0
  1EC:  	CaseOR  ==  .HitResult:Miss % 6
  1F8:  	CaseOR  ==  .HitResult:Lucky % 5
  204:  		Set   *VarA  *Var0
  214:  		Call  PlaySound     ( 0000010F )
  224:  		Call  SetAnimation  ( .Actor:Self 00000001 00690001 )
  23C:  		Call  SetGoalToTarget       ( .Actor:Self )
  24C:  		Call  GetGoalPos    ( .Actor:Self *Var0 *Var1 *Var2 )
  268:  		Sub   *Var0  00000014
  278:  		Set   *Var1  00000000
  288:  		Call  SetActorJumpGravity   ( .Actor:Self *Fixed[1.8] )
  29C:  		Call  SetGoalPos    ( .Actor:Self *Var0 *Var1 *Var2 )
  2B8:  		Call  JumpToGoal    ( .Actor:Self  10` .False .True .False )
  2D8:  		Call  PlaySoundAtActor      ( .Actor:Self 00002062 )
  2EC:  		Thread
  2F4:  			Call  GetStatusFlags    ( .Actor:Self *Var0 )
  308:  			If  *Var0  !&  ~Flags:StatusFlags:Shrink % 80000
  318:  				Call  ShakeCam  ( .Cam:Battle 00000000  1` *Fixed[0.5] )
  334:  			EndIf
  33C:  		EndThread
  344:  		Call  SetActorJumpGravity   ( .Actor:Self *Fixed[1.8] )
  358:  		Call  GetActorPos       ( .Actor:Self *Var0 *Var1 *Var2 )
  374:  		Sub   *Var0  00000019
  384:  		Call  SetGoalPos        ( .Actor:Self *Var0 *Var1 *Var2 )
  3A0:  		Call  JumpToGoal        ( .Actor:Self  6` .False .True .False )
  3C0:  		Call  PlaySoundAtActor  ( .Actor:Self 00002062 )
  3D4:  		Thread
  3DC:  			Call  GetStatusFlags    ( .Actor:Self *Var0 )
  3F0:  			If  *Var0  !&  ~Flags:StatusFlags:Shrink % 80000
  400:  				Call  ShakeCam  ( .Cam:Battle 00000000  1` *Fixed[0.5] )
  41C:  			EndIf
  424:  		EndThread
  42C:  		Sub   *Var0  0000000F
  43C:  		Call  SetGoalPos        ( .Actor:Self *Var0 *Var1 *Var2 )
  458:  		Call  JumpToGoal        ( .Actor:Self  4` .False .True .False )
  478:  		Call  PlaySoundAtActor  ( .Actor:Self 00002062 )
  48C:  		Thread
  494:  			Call  GetStatusFlags    ( .Actor:Self *Var0 )
  4A8:  			If  *Var0  !&  ~Flags:StatusFlags:Shrink % 80000
  4B8:  				Call  ShakeCam  ( .Cam:Battle 00000000  1` *Fixed[0.5] )
  4D4:  			EndIf
  4DC:  		EndThread
  4E4:  		Call  SetAnimation  ( .Actor:Self 00000001 00690004 )
  4FC:  		Wait  20`
  508:  		If  *VarA  ==  .HitResult:Lucky % 5
  518:  			Call  EnemyTestTarget   ( .Actor:Self *Var0 ~Flags:DamageType:TriggerLucky 00000000 00000000 00000000 )
  53C:  		EndIf
  544:  		Call  UseBattleCamPreset    ( 00000002 )
  554:  		Call  MoveBattleCamOver (  20` )
  564:  		Call  SetActorYaw       ( .Actor:Self  180` )
  578:  		Call  AddActorDecoration    ( .Actor:Self 00000001 00000000 .Decoration:Sweat )
  594:  		SetConst  *Var0  00000001
  5A4:  		SetConst  *Var1  00690001
  5B4:  		ExecWait  $Script_8021B41C
  5C0:  		Call  SetAnimation      ( .Actor:Self 00000001 00690001 )
  5D8:  		Call  HPBarToHome       ( .Actor:Self )
  5E8:  		Call  RemoveActorDecoration ( .Actor:Self 00000001 00000000 )
  600:  		Call  SetActorYaw       ( .Actor:Self  0` )
  614:  		Call  SetActorVar       ( .Actor:Self 00000008 00000000 )
  62C:  		Call  EnableIdleScript  ( .Actor:Self FFFFFFFF )
  640:  		Return
  648:  	EndCaseGroup
  650:  EndSwitch
  658:  Call  SetAnimation      ( .Actor:Self 00000001 00690001 )
  670:  Call  SetGoalToTarget   ( .Actor:Self )
  680:  Call  GetGoalPos        ( .Actor:Self *Var0 *Var1 *Var2 )
  69C:  Call  GetStatusFlags    ( .Actor:Self *VarA )
  6B0:  If  *VarA  &  ~Flags:StatusFlags:Shrink % 80000
  6C0:  	Add   *Var0  00000004
  6D0:  Else
  6D8:  	Add   *Var0  0000000A
  6E8:  EndIf
  6F0:  Set   *Var1  0000001B
  700:  Call  SetActorJumpGravity   ( .Actor:Self *Fixed[0.2] )
  714:  Call  SetGoalPos    ( .Actor:Self *Var0 *Var1 *Var2 )
  730:  Call  JumpToGoal    ( .Actor:Self  5` .False .True .False )
  750:  Wait  2`
  75C:  Call  GetActorPos   ( .Actor:Self *Var0 *Var1 *Var2 )
  778:  Call  SetPartPos    ( .Actor:Self 00000002 *Var0 *Var1 *Var2 )
  798:  Call  EnemyDamageTarget     ( .Actor:Self *VarF ~Flags:DamageType:0 00000000 00000000 00000003 00000020 )
  7C0:  Switch  *VarF
  7CC:  	Default
  7D4:  		Call  UseBattleCamPreset    ( 00000002 )
  7E4:  		Call  MoveBattleCamOver (  20` )
  7F4:  		Call  SetAnimation      ( .Actor:Self 00000001 00690004 )
  80C:  		Call  GetGoalPos        ( .Actor:Self *Var0 *Var1 *Var2 )
  828:  		Add   *Var0  00000028
  838:  		Set   *Var1  00000000
  848:  		Call  SetActorJumpGravity   ( .Actor:Self *Fixed[1.8] )
  85C:  		Call  SetGoalPos        ( .Actor:Self *Var0 *Var1 *Var2 )
  878:  		Call  JumpToGoal        ( .Actor:Self  10` .False .True .False )
  898:  		Call  PlaySoundAtActor  ( .Actor:Self 00002062 )
  8AC:  		Thread
  8B4:  			Call  GetStatusFlags    ( .Actor:Self *Var0 )
  8C8:  			If  *Var0  !&  ~Flags:StatusFlags:Shrink % 80000
  8D8:  				Call  ShakeCam  ( .Cam:Battle 00000000  1` *Fixed[0.5] )
  8F4:  			EndIf
  8FC:  		EndThread
  904:  		Add   *Var0  0000001E
  914:  		Call  SetGoalPos        ( .Actor:Self *Var0 *Var1 *Var2 )
  930:  		Call  JumpToGoal        ( .Actor:Self  8` .False .True .False )
  950:  		Call  PlaySoundAtActor  ( .Actor:Self 00002062 )
  964:  		Thread
  96C:  			Call  GetStatusFlags    ( .Actor:Self *Var0 )
  980:  			If  *Var0  !&  ~Flags:StatusFlags:Shrink % 80000
  990:  				Call  ShakeCam  ( .Cam:Battle 00000000  1` *Fixed[0.5] )
  9AC:  			EndIf
  9B4:  		EndThread
  9BC:  		Add   *Var0  00000014
  9CC:  		Call  SetGoalPos        ( .Actor:Self *Var0 *Var1 *Var2 )
  9E8:  		Call  JumpToGoal        ( .Actor:Self  6` .False .True .False )
  A08:  		Call  PlaySoundAtActor  ( .Actor:Self 00002062 )
  A1C:  		Thread
  A24:  			Call  GetStatusFlags    ( .Actor:Self *Var0 )
  A38:  			If  *Var0  !&  ~Flags:StatusFlags:Shrink % 80000
  A48:  				Call  ShakeCam  ( .Cam:Battle 00000000  1` *Fixed[0.5] )
  A64:  			EndIf
  A6C:  		EndThread
  A74:  		Sub   *Var0  0000000A
  A84:  		Call  JumpToGoal        ( .Actor:Self  4` .False .True .False )
  AA4:  		Call  PlaySoundAtActor  ( .Actor:Self 00002062 )
  AB8:  		Thread
  AC0:  			Call  GetStatusFlags    ( .Actor:Self *Var0 )
  AD4:  			If  *Var0  !&  ~Flags:StatusFlags:Shrink % 80000
  AE4:  				Call  ShakeCam  ( .Cam:Battle 00000000  1` *Fixed[0.5] )
  B00:  			EndIf
  B08:  		EndThread
  B10:  		Call  SetAnimation  ( .Actor:Self 00000001 00690001 )
  B28:  		Wait  8`
  B34:  		Call  UseBattleCamPreset    ( 00000002 )
  B44:  		If  *VarF  ==  0000000A % A
  B54:  			Call  GetActorPos   ( .Actor:Self *Var0 *Var1 *Var2 )
  B70:  			Call  SetPartPos    ( .Actor:Self 00000002 *Var0 *Var1 *Var2 )
  B90:  			Return
  B98:  		EndIf
  BA0:  		Call  YieldTurn ( )
  BAC:  		SetConst  *Var0  00000001
  BBC:  		SetConst  *Var1  00690001
  BCC:  		ExecWait  $Script_8021B41C
  BD8:  		Call  SetAnimation  ( .Actor:Self 00000001 00690001 )
  BF0:  EndSwitch
  BF8:  Call  SetActorVar       ( .Actor:Self 00000008 00000000 )
  C10:  Call  HPBarToHome       ( .Actor:Self )
  C20:  Call  EnableIdleScript  ( .Actor:Self FFFFFFFF )
  C34:  Call  UseIdleAnimation  ( .Actor:Self .True )
  C48:  Return
  C50:  End
}

#new:Script $Script_8021B41C
{
    0:  Call  SetAnimation  ( .Actor:Self *Var0 *Var1 )
   18:  Call  SetAnimation  ( .Actor:Self 00000001 00690004 )
   30:  Call  SetActorSpeed ( .Actor:Self *Fixed[4.0] )
   44:  Call  SetActorJumpGravity   ( .Actor:Self *Fixed[1.8] )
   58:  Call  SetGoalToHome ( .Actor:Self )
   68:  Call  GetGoalPos    ( .Actor:Self *Var0 *Var1 *Var2 )
   84:  ExecWait  $Script_8021B50C
   90:  Call  GetActorPos   ( .Actor:Self *Var0 *Var1 *Var2 )
   AC:  Call  SetPartPos    ( .Actor:Self 00000002 *Var0 *Var1 *Var2 )
   CC:  Call  SetActorYaw   ( .Actor:Self  0` )
   E0:  Return
   E8:  End
}

#new:Script $Script_8021B50C
{
    0:  Call  GetActorPos   ( .Actor:Self *Var3 *Var4 *Var5 )
   1C:  If  *Var3  <  *Var0
   2C:  	Call  SetActorYaw   ( .Actor:Self  180` )
   40:  Else
   48:  	Call  SetActorYaw   ( .Actor:Self  0` )
   5C:  EndIf
   64:  Label  0
   70:  Call  GetActorPos   ( .Actor:Self *Var3 *Var4 *Var5 )
   8C:  If  *Var3  ==  *Var0
   9C:  	Goto  A
   A8:  EndIf
   B0:  If  *Var3  <  *Var0
   C0:  	Set   *Var4  *Var0
   D0:  	Sub   *Var4  *Var3
   E0:  	If  *Var4  <  0000001E
   F0:  		Call  SetGoalPos        ( .Actor:Self *Var0 *Var1 *Var2 )
  10C:  		Call  JumpToGoal        ( .Actor:Self  6` .False .True .False )
  12C:  		Call  PlaySoundAtActor  ( .Actor:Self 00002062 )
  140:  		Thread
  148:  			Call  GetStatusFlags    ( .Actor:Self *Var0 )
  15C:  			If  *Var0  !&  ~Flags:StatusFlags:Shrink % 80000
  16C:  				Call  ShakeCam  ( .Cam:Battle 00000000  1` *Fixed[0.5] )
  188:  			EndIf
  190:  		EndThread
  198:  	Else
  1A0:  		Set   *Var4  *Var3
  1B0:  		Add   *Var3  0000001E
  1C0:  		Call  SetGoalPos        ( .Actor:Self *Var3 *Var1 *Var2 )
  1DC:  		Call  JumpToGoal        ( .Actor:Self  6` .False .True .False )
  1FC:  		Call  PlaySoundAtActor  ( .Actor:Self 00002062 )
  210:  		Thread
  218:  			Call  GetStatusFlags    ( .Actor:Self *Var0 )
  22C:  			If  *Var0  !&  ~Flags:StatusFlags:Shrink % 80000
  23C:  				Call  ShakeCam  ( .Cam:Battle 00000000  1` *Fixed[0.5] )
  258:  			EndIf
  260:  		EndThread
  268:  	EndIf
  270:  Else
  278:  	Set   *Var4  *Var3
  288:  	Sub   *Var4  *Var0
  298:  	If  *Var4  <  0000001E
  2A8:  		Call  SetGoalPos        ( .Actor:Self *Var0 *Var1 *Var2 )
  2C4:  		Call  JumpToGoal        ( .Actor:Self  6` .False .True .False )
  2E4:  		Call  PlaySoundAtActor  ( .Actor:Self 00002062 )
  2F8:  		Thread
  300:  			Call  GetStatusFlags    ( .Actor:Self *Var0 )
  314:  			If  *Var0  !&  ~Flags:StatusFlags:Shrink % 80000
  324:  				Call  ShakeCam  ( .Cam:Battle 00000000  1` *Fixed[0.5] )
  340:  			EndIf
  348:  		EndThread
  350:  	Else
  358:  		Sub   *Var3  0000001E
  368:  		Call  SetGoalPos        ( .Actor:Self *Var3 *Var1 *Var2 )
  384:  		Call  JumpToGoal        ( .Actor:Self  6` .False .True .False )
  3A4:  		Call  PlaySoundAtActor  ( .Actor:Self 00002062 )
  3B8:  		Thread
  3C0:  			Call  GetStatusFlags    ( .Actor:Self *Var0 )
  3D4:  			If  *Var0  !&  ~Flags:StatusFlags:Shrink % 80000
  3E4:  				Call  ShakeCam  ( .Cam:Battle 00000000  1` *Fixed[0.5] )
  400:  			EndIf
  408:  		EndThread
  410:  	EndIf
  418:  EndIf
  420:  Goto  0
  42C:  Label  A
  438:  Return
  440:  End
}

PADDING: 8021B954 to 8021B960 (004F2DF4 to 004F2E00)
00000000 00000000 00000000

#new:IdleAnimations $IdleAnimations_8021B960
{
	.Status:Normal    00680001
	.Status:Stone     00680000
	.Status:Sleep     0068000C
	.Status:Poison    00680001
	.Status:Stop      00680000
	.Status:Static    00680000
	.Status:Paralyze  00680000
	.Status:Paralyze  00680000
	.Status:Dizzy     0068000A
	.Status:End
}

#new:IdleAnimations $IdleAnimations_8021B9AC
{
	.Status:Normal    0068000A
	.Status:Stone     00680007
	.Status:Sleep     0068000D
	.Status:Poison    0068000A
	.Status:Stop      00680007
	.Status:Static    0068000A
	.Status:Paralyze  0068000A
	.Status:Paralyze  0068000A
	.Status:Dizzy     0068000A
	.Status:End
}

#new:IdleAnimations $IdleAnimations_8021B9F8
{
	.Status:Normal    00330006
	.Status:End
}

#new:IdleAnimations $IdleAnimations_8021BA04
{
	.Status:Normal    00680016
	.Status:End
}

#new:IdleAnimations $IdleAnimations_8021BA10
{
	.Status:Normal    00680016
	.Status:End
}

#new:DefenseTable $DefenseTable_8021BA1C
{
	.Element:Normal 00000000
	.Element:End
}

#new:StatusTable $StatusTable_8021BA28
{
	.Status:Normal      0`
	.Status:Default     0`
	.Status:Sleep      20`
	.Status:Poison      0`
	.Status:Frozen      0`
	.Status:Dizzy      30`
	.Status:Fear        0`
	.Status:Static      0`
	.Status:Paralyze   30`
	.Status:Shrink     60`
	.Status:Stop       40`
	.Status:DefaultTurnMod    0`
	.Status:SleepTurnMod     -1`
	.Status:PoisonTurnMod     0`
	.Status:FrozenTurnMod     0`
	.Status:DizzyTurnMod     -1`
	.Status:FearTurnMod       0`
	.Status:StaticTurnMod     0`
	.Status:ParalyzeTurnMod  -1`
	.Status:ShrinkTurnMod    -1`
	.Status:StopTurnMod      -2`
	.Status:End
}

#new:PartsTable $PartsTable_8021BAD4
{
	00020000 01000000 002800FF $IdleAnimations_8021B960 $DefenseTable_8021BA1C 00000000 00000000 00000000 00000000
	00800001 02000000 002700FF $IdleAnimations_8021B960 $DefenseTable_8021BA1C 00000000 00000000 FBF10000 00000000
	40120000 03000000 000000FF $IdleAnimations_8021B9F8 00000000 00000000 00000000 00000000 00000000
	40120000 04000000 000000FF $IdleAnimations_8021B9F8 00000000 00000000 00000000 00000000 00000000
	40120000 05000000 000000FF $IdleAnimations_8021B9F8 00000000 00000000 00000000 00000000 00000000
	00120001 06000000 000000FF $IdleAnimations_8021BA04 00000000 00000000 00000000 00000000 00000000
	00120001 07000000 000000FF $IdleAnimations_8021BA04 00000000 00000000 00000000 00000000 00000000
	00120001 08000000 000000FF $IdleAnimations_8021BA10 00000000 00000000 00000000 00000000 00000000
}

#new:Actor $Tutankoopa
{
	% stats
	[Index]        A1b
	[Level]        55`b
	[MaxHP]        30`b
	[Coins]         0`b
	[Flags]       00000000
	[StatusTable] $StatusTable_8021BA28
	% ai
	[PartsCount]    8`s
	[PartsTable]  $PartsTable_8021BAD4
	[Script]      $Script_Init_8021BC1C
	% move effectiveness
	[Escape]        0`b
	[Item]          0`b
	[AirLift]       0`b
	[Hurricane]     0`b % Bow's "Spook" as well
	[UpAndAway]     0`b
	[PowerBounce]  70`b
	[SpinSmash]     4`b % weight (0-4)
	% ui positions
	[Size]         56`b  45`b % width height
	[HealthBar]     0`b   0`b % dx dy
	[StatusTurn]  -10`b  35`b % dx dy
	[StatusIcon]   10`b  35`b % dx dy
}

#new:Script $Script_Init_8021BC1C
{
    0:  Call  BindTakeTurn  ( .Actor:Self $Script_TakeTurn_8021CCD4 )
   14:  Call  BindIdle      ( .Actor:Self $Script_Idle_8021BE28 )
   28:  Call  BindHandleEvent   ( .Actor:Self $Script_HandleEvent_8021BFD0 )
   3C:  Call  BindNextTurn  ( .Actor:Self $Script_NextTurn_8021F9C4 )
   50:  Call  HPBarToHome   ( .Actor:Self )
   60:  Call  ForceHomePos  ( .Actor:Self  97`  70`  15` )
   7C:  Call  SetPartPos    ( .Actor:Self 00000003  70`  70`  3` )
   9C:  Call  SetPartPos    ( .Actor:Self 00000004  80`  70`  -7` )
   BC:  Call  SetPartPos    ( .Actor:Self 00000005  60`  70`  -7` )
   DC:  Call  SetActorVar   ( .Actor:Self 00000008 00000000 )
   F4:  Call  SetActorVar   ( .Actor:Self 00000000 00000000 )
  10C:  Call  SetActorVar   ( .Actor:Self 00000001 00000000 )
  124:  Call  SetActorVar   ( .Actor:Self 00000003 00000000 )
  13C:  Call  SetActorVar   ( .Actor:Self 00000004 00000000 )
  154:  Call  SetActorVar   ( .Actor:Self 00000002 00000003 )
  16C:  Call  SetActorVar   ( .Actor:Self 00000006 00000000 )
  184:  Call  SetActorVar   ( .Actor:Self 00000007 00000000 )
  19C:  Call  SetActorVar   ( .Actor:Self 0000000A 00000000 )
  1B4:  Call  SetActorVar   ( .Actor:Self 0000000B 00000000 )
  1CC:  Call  SetActorVar   ( .Actor:Self 0000000C 00000000 )
  1E4:  Call  SetActorVar   ( .Actor:Self 0000000D 00000000 )
  1FC:  Return
  204:  End
}

#new:Script $Script_Idle_8021BE28
{
    0:  Label  0
    C:  Call  GetActorVar   ( .Actor:Self 00000008 *Var0 )
   24:  Switch  *Var0
   30:  	Case  ==  00000000
   3C:  		Call  GetStatusFlags    ( .Actor:Self *Var0 )
   50:  		If  *Var0  &  ~Flags:StatusFlags:Dizzy % 40000
   60:  			Call  SetTargetOffset       ( .Actor:Self 00000002  -10`  22` )
   7C:  			Call  8027D4C8  ( FFFFFF81 00000002 00000002 FFFFFFF8 )
   98:  			Call  $Function_80218690    ( FFFFFFE7 0000000F 00000000 00000014 )
   B4:  		Else
   BC:  			Call  SetTargetOffset       ( .Actor:Self 00000002  0`  39` )
   D8:  			Call  8027D4C8  ( FFFFFF81 00000002 FFFFFFFB FFFFFFF1 )
   F4:  			Call  $Function_80218690    ( FFFFFFEF 00000017 0000000B 00000020 )
  110:  		EndIf
  118:  	Case  ==  00000001
  124:  		Call  SetTargetOffset       ( .Actor:Self 00000002  -10`  22` )
  140:  		Call  8027D4C8  ( FFFFFF81 00000002 00000002 FFFFFFF8 )
  15C:  		Call  $Function_80218690    ( FFFFFFE7 0000000F 00000000 00000014 )
  178:  EndSwitch
  180:  Wait  1`
  18C:  Goto  0
  198:  Return
  1A0:  End
}

#new:Script $Script_HandleEvent_8021BFD0
{
    0:  Call  UseIdleAnimation  ( .Actor:Self .False )
   14:  Call  EnableIdleScript  ( .Actor:Self 00000000 )
   28:  Call  SetActorScale     ( .Actor:Self *Fixed[1.0] *Fixed[1.0] *Fixed[1.0] )
   44:  Call  GetLastElement    ( *VarE )
   54:  Call  GetLastEvent      ( .Actor:Self *Var0 )
   68:  Switch  *Var0
   74:  	Case  ==  .Event:HitCombo % 9
   80:  		SetConst  *Var0  00000001
   90:  		SetConst  *Var1  00680006
   A0:  		ExecWait  DoNormalHit
   AC:  	Case  ==  .Event:Hit % A
   B8:  		SetConst  *Var0  00000001
   C8:  		SetConst  *Var1  00680006
   D8:  		ExecWait  DoNormalHit
   E4:  		Call  GetActorVar   ( .Actor:Self 0000000D *Var2 )
   FC:  		If  *Var2  !=  00000000
  10C:  			Call  SetActorVar   ( .Actor:Self 0000000D 00000000 )
  124:  			ExecWait  $Script_8021C974
  130:  		EndIf
  138:  	Case  ==  .Event:BeginFirstStrike % 38
  144:  	Case  ==  .Event:BurnHit % E
  150:  		Set   *Var0  00000001
  160:  		Set   *Var1  00680012
  170:  		Set   *Var2  00680013
  180:  		ExecWait  DoBurnHit
  18C:  	Case  ==  .Event:BurnDeath % 24
  198:  		Set   *Var0  00000001
  1A8:  		Set   *Var1  00680012
  1B8:  		Set   *Var2  00680013
  1C8:  		ExecWait  DoBurnHit
  1D4:  		Wait  10`
  1E0:  		SetConst  *Var0  00000001
  1F0:  		SetConst  *Var1  00680013
  200:  		ExecWait  $Script_8021FA54
  20C:  		Return
  214:  	Case  ==  .Event:SpinSmashHit % B
  220:  		ExecWait  $Script_8021C748
  22C:  	Case  ==  .Event:ShockHit % 2F
  238:  		SetConst  *Var0  00000001
  248:  		SetConst  *Var1  0068000E
  258:  		ExecWait  DoShockHit
  264:  		SetConst  *Var0  00000001
  274:  		SetConst  *Var1  00680006
  284:  		ExecWait  DoJumpBack
  290:  		Call  JumpToGoal    ( .Actor:Self  5` .False .True .False )
  2B0:  		SetConst  *Var0  00000001
  2C0:  		SetConst  *Var1  00680002
  2D0:  		ExecWait  DoReturnHome
  2DC:  		Call  SetActorJumpGravity   ( .Actor:Self *Fixed[1.6] )
  2F0:  		Call  JumpToGoal    ( .Actor:Self  5` .False .True .False )
  310:  	CaseOR  ==  00000017 % 17
  31C:  	CaseOR  ==  .Event:Immune % 19
  328:  	CaseOR  ==  .Event:AirLiftFailed % 1F
  334:  		SetConst  *Var0  00000001
  344:  		Call  GetActorVar   ( .Actor:Self 00000008 *Var1 )
  35C:  		If  *Var1  ==  00000001
  36C:  			Call  GetActorVar   ( .Actor:Self 00000001 *Var1 )
  384:  			If  *Var1  !=  00000000
  394:  				SetConst  *Var1  0068000A
  3A4:  			Else
  3AC:  				SetConst  *Var1  00680001
  3BC:  			EndIf
  3C4:  		Else
  3CC:  			SetConst  *Var1  00680001
  3DC:  		EndIf
  3E4:  		ExecWait  DoImmune
  3F0:  	EndCaseGroup
  3F8:  	Case  ==  .Event:SpikeTaunt % 1B
  404:  		Call  GetActorVar   ( .Actor:Self 00000001 *Var1 )
  41C:  		If  *Var1  ==  00000000
  42C:  			If  *VarE  &  00000080
  43C:  				Call  GetActorVar   ( .Actor:Self 0000000B *Var0 )
  454:  				If  *Var0  ==  00000000
  464:  					Call  SetActorVar   ( .Actor:Self 0000000B 00000001 )
  47C:  					Wait  60`
  488:  				EndIf
  490:  			EndIf
  498:  		EndIf
  4A0:  	CaseOR  ==  .Event:ShockDeath % 26
  4AC:  	CaseOR  ==  .Event:Death % 20
  4B8:  		SetConst  *Var0  00000001
  4C8:  		SetConst  *Var1  00680006
  4D8:  		ExecWait  DoNormalHit
  4E4:  		Wait  10`
  4F0:  		SetConst  *Var0  00000001
  500:  		SetConst  *Var1  00680006
  510:  		ExecWait  $Script_8021FA54
  51C:  		Return
  524:  	EndCaseGroup
  52C:  	Case  ==  .Event:SpinSmashDeath % 21
  538:  		ExecWait  $Script_8021C748
  544:  		SetConst  *Var0  00000001
  554:  		SetConst  *Var1  00680006
  564:  		ExecWait  $Script_8021FA54
  570:  		Return
  578:  	Case  ==  .Event:SpikeContact % 2A
  584:  		Call  SetAnimation  ( .Actor:Self 00000001 00680006 )
  59C:  		Wait  20`
  5A8:  		Call  SetAnimation  ( .Actor:Self 00000001 00680002 )
  5C0:  		Call  SetGoalToHome ( .Actor:Self )
  5D0:  		Call  SetActorSpeed ( .Actor:Self *Fixed[6.0] )
  5E4:  		Call  RunToGoal     ( .Actor:Self  0` .False )
  5FC:  		Call  SetAnimation  ( .Actor:Self 00000001 00680001 )
  614:  	Case  ==  .Event:BurnContact % 2C
  620:  		Call  SetAnimation  ( .Actor:Self 00000001 00680006 )
  638:  		Wait  20`
  644:  		Call  SetAnimation  ( .Actor:Self 00000001 00680002 )
  65C:  		Call  SetGoalToHome ( .Actor:Self )
  66C:  		Call  SetActorSpeed ( .Actor:Self *Fixed[6.0] )
  680:  		Call  RunToGoal     ( .Actor:Self  0` .False )
  698:  		Call  SetAnimation  ( .Actor:Self 00000001 00680001 )
  6B0:  	Case  ==  .Event:EndFirstStrike % 35
  6BC:  		SetConst  *Var0  00000001
  6CC:  		SetConst  *Var1  00680001
  6DC:  		ExecWait  DoReturnHome
  6E8:  		Call  HPBarToHome   ( .Actor:Self )
  6F8:  	Case  ==  .Event:RecoverStatus % 31
  704:  		SetConst  *Var0  00000001
  714:  		SetConst  *Var1  00680001
  724:  		ExecWait  DoRecover
  730:  	Default
  738:  EndSwitch
  740:  Call  EnableIdleScript  ( .Actor:Self 00000001 )
  754:  Call  UseIdleAnimation  ( .Actor:Self .True )
  768:  Return
  770:  End
}

#new:Script $Script_8021C748
{
    0:  Call  SetAnimation  ( .Actor:Self 00000001 00680006 )
   18:  Call  SetActorJumpGravity   ( .Actor:Self *Fixed[0.1] )
   2C:  Call  SetActorSpeed ( .Actor:Self *Fixed[6.0] )
   40:  Call  GetActorPos   ( .Actor:Self *Var0 *Var1 *Var2 )
   5C:  Add   *Var1  00000014
   6C:  Call  SetGoalPos    ( .Actor:Self  150` *Var1 *Var2 )
   88:  Call  JumpToGoal    ( .Actor:Self  0` .False .True .False )
   A8:  Sub   *Var1  00000014
   B8:  Call  SetActorJumpGravity   ( .Actor:Self *Fixed[0.1] )
   CC:  Call  SetActorSpeed ( .Actor:Self *Fixed[6.0] )
   E0:  Call  SetGoalPos    ( .Actor:Self  130` *Var1 *Var2 )
   FC:  Call  JumpToGoal    ( .Actor:Self  5` .False .True .False )
  11C:  Call  SetAnimation  ( .Actor:Self 00000001 00680007 )
  134:  Wait  15`
  140:  Call  SetAnimation  ( .Actor:Self 00000001 00680008 )
  158:  Call  SetActorJumpGravity   ( .Actor:Self *Fixed[1.0] )
  16C:  Call  GetActorPos   ( .Actor:Self *Var0 *Var1 *Var2 )
  188:  Call  SetGoalPos    ( .Actor:Self *Var0 *Var1 *Var2 )
  1A4:  Call  JumpToGoal    ( .Actor:Self  8` .False .True .False )
  1C4:  Call  SetGoalToHome ( .Actor:Self )
  1D4:  Call  SetAnimation  ( .Actor:Self 00000001 00680002 )
  1EC:  Call  RunToGoal     ( .Actor:Self  10` .False )
  204:  Call  SetAnimation  ( .Actor:Self 00000001 00680001 )
  21C:  Return
  224:  End
}

#new:Script $Script_8021C974
{
    0:  Call  GetActorVar   ( .Actor:Self 00000008 *Var0 )
   18:  If  *Var0  ==  00000001
   28:  	Return
   30:  EndIf
   38:  Call  8027D32C      ( FFFFFF81 )
   48:  Call  PlaySoundAtActor      ( .Actor:Self 000020E3 )
   5C:  Call  SetAnimation  ( .Actor:Self 00000001 00680006 )
   74:  Call  SetActorJumpGravity   ( .Actor:Self *Fixed[0.9] )
   88:  Call  GetActorPos   ( .Actor:Self *Var0 *Var1 *Var2 )
   A4:  Add   *Var0  0000000A
   B4:  Set   *Var1  00000000
   C4:  Add   *Var2  00000018
   D4:  Call  SetGoalPos    ( .Actor:Self *Var0 *Var1 *Var2 )
   F0:  Call  JumpToGoal    ( .Actor:Self  16` .False .True .False )
  110:  Thread
  118:  	Call  SetPartScale  ( .Actor:Self 00000001 *Fixed[1.1] *Fixed[0.5] *Fixed[1.0] )
  138:  	Wait  1`
  144:  	Call  SetPartScale  ( .Actor:Self 00000001 *Fixed[1.0] *Fixed[0.7] *Fixed[1.0] )
  164:  	Wait  1`
  170:  	Call  SetPartScale  ( .Actor:Self 00000001 *Fixed[1.0] *Fixed[1.0] *Fixed[1.0] )
  190:  EndThread
  198:  Call  StartRumble   ( 00000001 )
  1A8:  Call  PlaySoundAtActor  ( .Actor:Self 000020E4 )
  1BC:  Call  SetAnimation  ( .Actor:Self 00000001 00680007 )
  1D4:  Call  ShakeCam      ( .Cam:Battle 00000000  5` *Fixed[3.0] )
  1F0:  Call  GetActorPos   ( .Actor:Self *Var0 *Var1 *Var2 )
  20C:  Add   *Var1  00000028
  21C:  Call  PlayEffect    ( ~FX:Stars:Orbiting *Var0 *Var1 *Var2 00000014 00000004 *VarF 00000000 00000000 00000000 00000000 00000000 00000000 )
  260:  Call  SetAnimation  ( .Actor:Self 00000001 0068000A )
  278:  Call  PlaySoundAtActor  ( .Actor:Self 000020E5 )
  28C:  Wait  30`
  298:  Call  RemoveEffect  ( *VarF )
  2A8:  Call  SetActorVar   ( .Actor:Self 00000008 00000001 )
  2C0:  Call  SetActorVar   ( .Actor:Self 00000007 00000000 )
  2D8:  Call  SetActorVar   ( .Actor:Self 00000001 00000002 )
  2F0:  Call  SetIdleAnimations ( .Actor:Self 00000001 $IdleAnimations_8021B9AC )
  308:  Call  GetActorPos   ( .Actor:Self *Var0 *Var1 *Var2 )
  324:  Call  ForceHomePos  ( .Actor:Self *Var0 *Var1 *Var2 )
  340:  Call  HPBarToHome   ( .Actor:Self )
  350:  Return
  358:  End
}

#new:Script $Script_TakeTurn_8021CCD4
{
    0:  Call  UseIdleAnimation  ( .Actor:Self .False )
   14:  Call  EnableIdleScript  ( .Actor:Self 00000000 )
   28:  Label  0
   34:  Call  GetActorVar       ( .Actor:Self 00000008 *Var0 )
   4C:  If  *Var0  ==  00000000
   5C:  	Call  ActorExists   ( .Actor:Enemy1 *Var0 )
   70:  	If  *Var0  ==  .False
   80:  		Call  GetActorVar   ( .Actor:Self 0000000C *Var0 )
   98:  		If  *Var0  ==  00000000
   A8:  			ExecWait  $Script_8021E9C8
   B4:  			Call  EnableIdleScript  ( .Actor:Self 00000001 )
   C8:  			Call  UseIdleAnimation  ( .Actor:Self .True )
   DC:  			Return
   E4:  		Else
   EC:  			Sub   *Var0  00000001
   FC:  			Call  SetActorVar   ( .Actor:Self 0000000C *Var0 )
  114:  		EndIf
  11C:  	EndIf
  124:  	Call  GetStatusFlags    ( .Actor:Self *Var0 )
  138:  	If  *Var0  &  ~Flags:StatusFlags:Shrink % 80000
  148:  		Call  SetActorVar   ( .Actor:Self 00000000 00000001 )
  160:  	EndIf
  168:  	Call  GetActorVar   ( .Actor:Self 00000000 *Var0 )
  180:  	Switch  *Var0
  18C:  		Case  ==  00000000
  198:  			Call  GetActorVar   ( .Actor:Self 00000002 *Var0 )
  1B0:  			If  *Var0  ==  00000000
  1C0:  				ExecWait  $Script_8021D81C
  1CC:  				Call  SetActorVar   ( .Actor:Self 00000000 00000001 )
  1E4:  			Else
  1EC:  				Call  GetStatusFlags    ( .Actor:Self *Var0 )
  200:  				If  *Var0  !&  ~Flags:StatusFlags:Shrink % 80000
  210:  					ExecWait  $Script_8021D04C
  21C:  					Call  SetActorVar   ( .Actor:Self 00000000 00000001 )
  234:  				Else
  23C:  					ExecWait  $Script_8021D81C
  248:  					Call  SetActorVar   ( .Actor:Self 00000000 00000000 )
  260:  				EndIf
  268:  			EndIf
  270:  		Default
  278:  			Call  SetActorVar   ( .Actor:Self 00000000 00000000 )
  290:  			ExecWait  $Script_8021D81C
  29C:  	EndSwitch
  2A4:  	Call  EnableIdleScript  ( .Actor:Self 00000001 )
  2B8:  	Call  UseIdleAnimation  ( .Actor:Self .True )
  2CC:  	Return
  2D4:  Else
  2DC:  	Call  SetActorVar   ( .Actor:Self 00000007 00000000 )
  2F4:  	Call  SetActorVar   ( .Actor:Self 00000001 00000000 )
  30C:  	ExecWait  $Script_8021F80C
  318:  	ExecWait  $Script_8021F5E8
  324:  	Goto  0
  330:  EndIf
  338:  Call  EnableIdleScript  ( .Actor:Self 00000001 )
  34C:  Call  UseIdleAnimation  ( .Actor:Self .True )
  360:  Return
  368:  Return
  370:  End
}

#new:Script $Script_8021D04C
{
    0:  Call  SetTargetActor    ( .Actor:Self .Actor:Player )
   14:  Call  GetActorVar       ( .Actor:Self 00000002 *Var0 )
   2C:  Switch  *Var0
   38:  	Case  ==  00000001
   44:  		Set   *Var9  00000005
   54:  	Case  ==  00000002
   60:  		Set   *Var9  00000004
   70:  	Case  ==  00000003
   7C:  		Set   *Var9  00000003
   8C:  	Default
   94:  		Return
   9C:  EndSwitch
   A4:  Sub   *Var0  00000001
   B4:  Call  SetActorVar   ( .Actor:Self 00000002 *Var0 )
   CC:  Call  UseBattleCamPreset    ( 0000000F )
   DC:  Call  SetBattleCamZoom      (  320` )
   EC:  Call  SetBattleCamOffsetZ   (  0` )
   FC:  Call  8024EB84      ( FFFFFF81 *Var9 )
  110:  Call  SetAnimation  ( .Actor:Self 00000001 00680002 )
  128:  Call  GetPartOffset ( .Actor:Self *Var9 *Var0 *Var1 *Var2 )
  148:  Add   *Var0  00000014
  158:  Sub   *Var2  00000003
  168:  Call  SetGoalPos    ( .Actor:Self *Var0 *Var1 *Var2 )
  184:  Call  RunToGoal     ( .Actor:Self  10` .False )
  19C:  Call  SetAnimation  ( .Actor:Self 00000001 00680001 )
  1B4:  Wait  10`
  1C0:  Call  SetAnimation  ( .Actor:Self 00000001 00680004 )
  1D8:  Wait  7`
  1E4:  Call  GetPartOffset ( .Actor:Self *Var9 *Var0 *Var1 *Var2 )
  204:  Add   *Var0  00000014
  214:  Add   *Var1  00000028
  224:  Call  SetPartJumpGravity    ( .Actor:Self *Var9 *Fixed[0.8] )
  23C:  Call  JumpPartTo    ( .Actor:Self *Var9 *Var0 *Var1 *Var2  5` .True )
  264:  Wait  8`
  270:  Call  SetAnimation  ( .Actor:Self *Var9 00330005 )
  288:  Call  PlaySoundAtActor      ( .Actor:Self 000002F9 )
  29C:  Call  UseBattleCamPreset    ( 00000002 )
  2AC:  Call  EnemyTestTarget       ( .Actor:Self *VarA ~Flags:DamageType:0 00000000 00000001 00000010 )
  2D0:  Switch  *VarA
  2DC:  	CaseOR  ==  .HitResult:Miss % 6
  2E8:  	CaseOR  ==  .HitResult:Lucky % 5
  2F4:  		Call  SetAnimation      ( .Actor:Self 00000001 00680005 )
  30C:  		Call  SetPartMoveSpeed  ( .Actor:Self *Var9 *Fixed[14.0] )
  324:  		Call  SetPartJumpGravity    ( .Actor:Self *Var9 *Fixed[0.2] )
  33C:  		Call  SetGoalToTarget   ( .Actor:Self )
  34C:  		Call  GetGoalPos        ( .Actor:Self *Var0 *Var1 *Var2 )
  368:  		Sub   *Var0  00000032
  378:  		Set   *Var1  FFFFFFFB
  388:  		Call  FlyPartTo ( .Actor:Self *Var9 *Var0 *Var1 *Var2  0`  30` .Easing:Linear )
  3B4:  		Call  UseBattleCamPreset    ( 00000002 )
  3C4:  		Call  GetActorPos       ( .Actor:Player *Var0 *Var1 *Var2 )
  3E0:  		Sub   *Var0  00000041
  3F0:  		Set   *Var1  FFFFFFFB
  400:  		Call  SetPartMoveSpeed  ( .Actor:Self *Var9 *Fixed[6.0] )
  418:  		Call  SetPartJumpGravity    ( .Actor:Self *Var9 *Fixed[0.1] )
  430:  		Call  FlyPartTo ( .Actor:Self *Var9 *Var0 *Var1 *Var2  0`  15` .Easing:Linear )
  45C:  		Call  SetPartFlagBits   ( .Actor:Self *Var9 00000001 .True )
  478:  		If  *VarA  ==  .HitResult:Lucky % 5
  488:  			Call  EnemyTestTarget   ( .Actor:Self *Var0 ~Flags:DamageType:TriggerLucky 00000000 00000000 00000000 )
  4AC:  		EndIf
  4B4:  		Call  SetGoalToHome ( .Actor:Self )
  4C4:  		Call  SetAnimation  ( .Actor:Self 00000001 00680002 )
  4DC:  		Call  RunToGoal     ( .Actor:Self  10` .False )
  4F4:  		Call  SetAnimation  ( .Actor:Self 00000001 00680001 )
  50C:  		Return
  514:  EndSwitch
  51C:  Call  SetAnimation      ( .Actor:Self 00000001 00680005 )
  534:  Call  SetPartMoveSpeed  ( .Actor:Self *Var9 *Fixed[14.0] )
  54C:  Call  SetPartJumpGravity    ( .Actor:Self *Var9 *Fixed[0.2] )
  564:  Call  SetGoalToTarget   ( .Actor:Self )
  574:  Call  GetGoalPos        ( .Actor:Self *Var0 *Var1 *Var2 )
  590:  Call  SetPartJumpGravity    ( .Actor:Self *Var9 *Fixed[0.2] )
  5A8:  Call  FlyPartTo ( .Actor:Self *Var9 *Var0 *Var1 *Var2  0`  30` .Easing:Linear )
  5D4:  Wait  2`
  5E0:  Call  EnemyDamageTarget ( .Actor:Self *Var8 ~Flags:DamageType:NoContact 00000000 00000000 00000003 00000020 )
  608:  Call  UseBattleCamPreset    ( 00000002 )
  618:  Call  GetActorPos       ( .Actor:Player *Var0 *Var1 *Var2 )
  634:  Sub   *Var0  00000037
  644:  Set   *Var1  00000000
  654:  Call  SetPartMoveSpeed  ( .Actor:Self *Var9 *Fixed[6.0] )
  66C:  Call  SetPartJumpGravity    ( .Actor:Self *Var9 *Fixed[0.1] )
  684:  Call  FlyPartTo ( .Actor:Self *Var9 *Var0 *Var1 *Var2  0`  25` .Easing:Linear )
  6B0:  Call  SetPartMoveSpeed  ( .Actor:Self *Var9 *Fixed[4.0] )
  6C8:  Sub   *Var0  00000014
  6D8:  Call  FlyPartTo ( .Actor:Self *Var9 *Var0 *Var1 *Var2  0`  21` .Easing:Linear )
  704:  Call  SetPartFlagBits   ( .Actor:Self *Var9 00000001 .True )
  720:  Wait  19`
  72C:  If  *Var8  ==  0000000A % A
  73C:  	Return
  744:  EndIf
  74C:  Call  UseBattleCamPreset    ( 00000002 )
  75C:  Call  YieldTurn ( )
  768:  Call  SetGoalToHome ( .Actor:Self )
  778:  Call  SetAnimation  ( .Actor:Self 00000001 00680002 )
  790:  Call  RunToGoal     ( .Actor:Self  10` .False )
  7A8:  Call  SetAnimation  ( .Actor:Self 00000001 00680001 )
  7C0:  Return
  7C8:  End
}

#new:Script $Script_8021D81C
{
    0:  Call  UseBattleCamPreset    ( 0000000F )
   10:  Call  SetBattleCamZoom  (  350` )
   20:  Call  SetBattleCamOffsetZ   (  0` )
   30:  Call  BattleCamTargetActor  ( .Actor:Self )
   40:  Call  MoveBattleCamOver (  40` )
   50:  Call  SetTargetActor    ( .Actor:Self .Actor:Player )
   64:  Call  SetGoalToTarget   ( .Actor:Self )
   74:  Call  GetActorVar       ( .Actor:Self 00000006 *Var0 )
   8C:  If  *Var0  ==  00000000
   9C:  	Call  UseBattleCamPreset    ( 0000000D )
   AC:  	Call  BattleCamTargetActor  ( .Actor:Self )
   BC:  	Call  MoveBattleCamOver     (  20` )
   CC:  	Wait  20`
   D8:  	Call  ActorSpeak    ( 000D00E5 .Actor:Self 00000001 00680003 00680003 ) % Bleah heh heh heh... I'm a magical genius! Watch,  ...
   F8:  	Call  UseBattleCamPreset    ( 00000002 )
  108:  	Call  UseBattleCamPreset    ( 00000002 )
  118:  EndIf
  120:  Call  PlaySoundAtActor  ( .Actor:Self 000020E1 )
  134:  Call  SetAnimation      ( .Actor:Self 00000001 00680003 )
  14C:  Call  GetActorPos       ( .Actor:Self *Var0 *Var1 *Var2 )
  168:  Add   *Var1  00000014
  178:  Call  PlayEffect        ( ~FX:Hieroglyphics *Var0 *Var1 *Var2 *Fixed[1.0] 0000002D 00000000 00000000 00000000 00000000 00000000 00000000 00000000 )
  1BC:  Wait  30`
  1C8:  Call  UseBattleCamPreset    ( 00000002 )
  1D8:  Call  MoveBattleCamOver (  70` )
  1E8:  Call  PlaySound ( 000020E7 )
  1F8:  Call  PlayEffect        ( ~FX:ChompDrop 00000000 0000003C 00000000 *Fixed[0.2] 00000000 *Fixed[1.4] 000000FF *Fixed[0.1] 00000096 00000000 00000000 00000000 )
  23C:  Wait  15`
  248:  Call  GetStatusFlags    ( .Actor:Player *Var0 )
  25C:  If  *Var0  !&  ~Flags:StatusFlags:Sleep|Frozen|Fear|Paralyze|Dizzy|Stone|Stop|Transparent % 435D000
  26C:  	Call  UseIdleAnimation  ( .Actor:Player .False )
  280:  	Call  SetAnimation  ( .Actor:Player 00000000 0001002B )
  298:  	Wait  49`
  2A4:  	Call  PlaySound     ( 000020E9 )
  2B4:  	Wait  5`
  2C0:  	Call  SetAnimation  ( .Actor:Self 00000001 00680005 )
  2D8:  	Wait  8`
  2E4:  	Call  SetAnimation  ( .Actor:Player 00000000 00010014 )
  2FC:  	Wait  5`
  308:  	Call  StartRumble   ( 0000000A )
  318:  	Call  PlaySound     ( 000020EA )
  328:  	Call  ShakeCam      ( .Cam:Battle 00000000  5` *Fixed[4.0] )
  344:  	Wait  20`
  350:  	Call  SetAnimation  ( .Actor:Player 00000000 00010028 )
  368:  	Call  GetActorPos   ( .Actor:Player *Var0 *Var1 *Var2 )
  384:  	Add   *Var1  00000014
  394:  	Call  PlayEffect    ( ~FX:EmoteIcon:Question 00000000 *Var0 *Var1 *Var2 00000014 0000013B 0000001E 00000000 00000000 00000000 00000000 00000000 )
  3D8:  	Call  PlaySound     ( 000020E8 )
  3E8:  Else
  3F0:  	Wait  50`
  3FC:  	Call  PlaySound ( 000020E9 )
  40C:  	Wait  18`
  418:  	Call  StartRumble   ( 0000000A )
  428:  	Call  PlaySound ( 000020EA )
  438:  	Wait  20`
  444:  	Call  PlaySound ( 000020E8 )
  454:  EndIf
  45C:  Call  GetActorVar   ( .Actor:Self 00000006 *Var0 )
  474:  Switch  *Var0
  480:  	Case  ==  00000000
  48C:  		Call  SetActorVar   ( .Actor:Self 00000006 00000001 )
  4A4:  		ExecWait  $Script_8021E008
  4B0:  	Case  ==  00000001
  4BC:  		Call  GetActorHP    ( .Actor:Self *Var0 )
  4D0:  		Call  SetActorVar   ( .Actor:Self 00000006 00000002 )
  4E8:  		If  *Var0  >  00000002
  4F8:  			ExecWait  $Script_8021DDE8
  504:  		Else
  50C:  			ExecWait  $Script_8021E008
  518:  		EndIf
  520:  	Default
  528:  		Call  RandInt   ( 00000002 *Var0 )
  53C:  		If  *Var0  ==  00000000
  54C:  			Call  GetActorHP    ( .Actor:Self *Var0 )
  560:  			If  *Var0  >  00000002
  570:  				ExecWait  $Script_8021DDE8
  57C:  			Else
  584:  				ExecWait  $Script_8021E008
  590:  			EndIf
  598:  		Else
  5A0:  			ExecWait  $Script_8021E008
  5AC:  		EndIf
  5B4:  EndSwitch
  5BC:  Return
  5C4:  End
}

#new:Script $Script_8021DDE8
{
    0:  Call  SetTargetActor    ( .Actor:Self .Actor:Enemy0 )
   14:  Call  SetGoalToTarget   ( .Actor:Self )
   24:  Call  GetGoalPos        ( .Actor:Self *Var0 *Var1 *Var2 )
   40:  Set   *Var3  000000AA
   50:  Call  SetPartPos        ( .Actor:Self 00000008 *Var0 *Var3 *Var2 )
   70:  Call  SetPartFlagBits   ( .Actor:Self 00000008 00000001 .False )
   8C:  Call  SetAnimation      ( .Actor:Self 00000008 00680016 )
   A4:  Call  PlaySound ( 000020EB )
   B4:  Call  SetPartMoveSpeed  ( .Actor:Self 00000008 *Fixed[8.0] )
   CC:  Call  SetPartJumpGravity    ( .Actor:Self 00000008 *Fixed[0.3] )
   E4:  Call  FallPartTo        ( .Actor:Self 00000008 *Var0 *Var1 *Var2  20` )
  108:  Thread
  110:  	Loop  00000014
  11C:  		Call  SetPartFlagBits   ( .Actor:Self 00000008 00000001 .False )
  138:  		Wait  1`
  144:  		Call  SetPartFlagBits   ( .Actor:Self 00000008 00000001 .True )
  160:  		Wait  1`
  16C:  	EndLoop
  174:  EndThread
  17C:  Call  GetStatusFlags    ( .Actor:Player *Var0 )
  190:  If  *Var0  !&  ~Flags:StatusFlags:Sleep|Frozen|Fear|Paralyze|Dizzy|Stone|Stop % 35D000
  1A0:  	Call  SetAnimation  ( .Actor:Player 00000000 00010032 )
  1B8:  EndIf
  1C0:  Call  SetActorVar       ( .Actor:Self 0000000D 00000001 )
  1D8:  Call  SetGoalToTarget   ( .Actor:Self )
  1E8:  Call  EnemyDamageTarget ( .Actor:Self *Var0 ~Flags:DamageType:IgnoreDefense 00000000 00000000 00000002 00000020 )
  210:  Return
  218:  End
}

#new:Script $Script_8021E008
{
    0:  Call  SetTargetActor    ( .Actor:Self .Actor:Player )
   14:  Call  EnemyTestTarget   ( .Actor:Self *VarA ~Flags:DamageType:0 00000000 00000001 00000010 )
   38:  Switch  *VarA
   44:  	CaseOR  ==  .HitResult:Miss % 6
   50:  	CaseOR  ==  .HitResult:Lucky % 5
   5C:  		Thread
   64:  			Loop  00000006
   70:  				Call  RandInt   ( 00000078 *Var0 )
   84:  				Sub   *Var0  00000096
   94:  				Call  RandInt   ( 0000005A *Var1 )
   A8:  				Sub   *Var0  00000028
   B8:  				Call  PlaySound ( 000020EB )
   C8:  				Call  $Function_8021875C    ( *Var0 00000000 *Var1 )
   E0:  				Call  RandInt   ( 00000005 *Var0 )
   F4:  				Add   *Var0  00000005
  104:  				Wait  *Var0
  110:  			EndLoop
  118:  		EndThread
  120:  		Call  SetTargetActor    ( .Actor:Self .Actor:Partner )
  134:  		Call  EnemyTestTarget   ( .Actor:Self *VarB ~Flags:DamageType:0 00000000 00000001 00000010 )
  158:  		Switch  *VarB
  164:  			Case  ==  .HitResult:Miss % 6
  170:  				Return
  178:  			Default
  180:  				Call  8026BF48  ( 00000001 )
  190:  				Thread
  198:  					Call  PlaySound ( 000020EB )
  1A8:  					Call  SetTargetActor    ( .Actor:Self .Actor:Player )
  1BC:  					Call  SetGoalToTarget   ( .Actor:Self )
  1CC:  					Call  GetGoalPos        ( .Actor:Self *Var0 *Var1 *Var2 )
  1E8:  					Sub   *Var0  00000005
  1F8:  					Set   *Var1  00000000
  208:  					Set   *Var3  000000AA
  218:  					Call  SetPartPos        ( .Actor:Self 00000006 *Var0 *Var3 *Var2 )
  238:  					Call  SetPartFlagBits   ( .Actor:Self 00000006 00000001 .False )
  254:  					Call  SetAnimation      ( .Actor:Self 00000006 00680016 )
  26C:  					Call  SetPartMoveSpeed  ( .Actor:Self 00000006 *Fixed[8.0] )
  284:  					Call  SetPartJumpGravity    ( .Actor:Self 00000006 *Fixed[0.3] )
  29C:  					Call  FallPartTo        ( .Actor:Self 00000006 *Var0 *Var1 *Var2  20` )
  2C0:  					Call  SetAnimation      ( .Actor:Self 00000006 00680017 )
  2D8:  					If  *VarA  ==  .HitResult:Lucky % 5
  2E8:  						Call  EnemyTestTarget   ( .Actor:Self *Var0 ~Flags:DamageType:TriggerLucky 00000000 00000000 00000000 )
  30C:  					EndIf
  314:  				EndThread
  31C:  				Wait  25`
  328:  				Call  SetTargetActor    ( .Actor:Self .Actor:Partner )
  33C:  				Call  SetGoalToTarget   ( .Actor:Self )
  34C:  				Call  GetGoalPos        ( .Actor:Self *Var4 *Var5 *Var6 )
  368:  				Sub   *Var4  00000005
  378:  				Add   *Var5  00000005
  388:  				Set   *Var7  000000AA
  398:  				Call  SetPartPos        ( .Actor:Self 00000007 *Var4 *Var7 *Var6 )
  3B8:  				Call  SetPartFlagBits   ( .Actor:Self 00000007 00000001 .False )
  3D4:  				Call  SetAnimation      ( .Actor:Self 00000007 00680016 )
  3EC:  				Call  PlaySound ( 000020EB )
  3FC:  				Call  SetPartMoveSpeed  ( .Actor:Self 00000007 *Fixed[8.0] )
  414:  				Call  SetPartJumpGravity    ( .Actor:Self 00000007 *Fixed[0.3] )
  42C:  				Call  FallPartTo        ( .Actor:Self 00000007 *Var4 *Var5 *Var6  20` )
  450:  				Call  SetAnimation      ( .Actor:Self 00000006 00680017 )
  468:  				Call  SetTargetActor    ( .Actor:Self .Actor:Partner )
  47C:  				Call  SetGoalToTarget   ( .Actor:Self )
  48C:  				Call  EnemyDamageTarget ( .Actor:Self *Var0 ~Flags:DamageType:NoContact 00000000 00000000 00000002 00000020 )
  4B4:  				Wait  20`
  4C0:  				Call  SetPartFlagBits   ( .Actor:Self 00000007 00000001 .True )
  4DC:  				Call  8026BF48  ( 00000000 )
  4EC:  				Return
  4F4:  		EndSwitch
  4FC:  		Return
  504:  	EndCaseGroup
  50C:  EndSwitch
  514:  Thread
  51C:  	Loop  00000006
  528:  		Call  RandInt   ( 00000078 *Var0 )
  53C:  		Sub   *Var0  00000096
  54C:  		Call  RandInt   ( 0000005A *Var1 )
  560:  		Sub   *Var0  00000028
  570:  		Call  PlaySound ( 000020EB )
  580:  		Call  $Function_8021875C    ( *Var0 00000000 *Var1 )
  598:  		Call  RandInt   ( 00000005 *Var0 )
  5AC:  		Add   *Var0  00000005
  5BC:  		Wait  *Var0
  5C8:  	EndLoop
  5D0:  EndThread
  5D8:  Call  8026BF48  ( 00000001 )
  5E8:  Thread
  5F0:  	Wait  25`
  5FC:  	Call  SetTargetActor    ( .Actor:Self .Actor:Partner )
  610:  	Call  SetGoalToTarget   ( .Actor:Self )
  620:  	Call  GetGoalPos        ( .Actor:Self *Var4 *Var5 *Var6 )
  63C:  	Sub   *Var4  00000005
  64C:  	Add   *Var5  00000005
  65C:  	Set   *Var7  000000AA
  66C:  	Call  SetPartPos        ( .Actor:Self 00000007 *Var4 *Var7 *Var6 )
  68C:  	Call  SetPartFlagBits   ( .Actor:Self 00000007 00000001 .False )
  6A8:  	Call  SetAnimation      ( .Actor:Self 00000007 00680016 )
  6C0:  	Call  PlaySound ( 000020EB )
  6D0:  	Call  SetPartMoveSpeed  ( .Actor:Self 00000007 *Fixed[8.0] )
  6E8:  	Call  SetPartJumpGravity    ( .Actor:Self 00000007 *Fixed[0.3] )
  700:  	Call  FallPartTo        ( .Actor:Self 00000007 *Var4 *Var5 *Var6  20` )
  724:  	Call  SetAnimation      ( .Actor:Self 00000006 00680017 )
  73C:  	Call  SetTargetActor    ( .Actor:Self .Actor:Partner )
  750:  	Call  EnemyDamageTarget ( .Actor:Self *Var0 ~Flags:DamageType:NoContact 00000000 00000000 00000002 00000020 )
  778:  	Wait  20`
  784:  	Call  SetPartFlagBits   ( .Actor:Self 00000007 00000001 .True )
  7A0:  	Call  8026BF48  ( 00000000 )
  7B0:  EndThread
  7B8:  Call  PlaySound ( 000020EB )
  7C8:  Call  SetTargetActor    ( .Actor:Self .Actor:Player )
  7DC:  Call  SetGoalToTarget   ( .Actor:Self )
  7EC:  Call  GetGoalPos        ( .Actor:Self *Var0 *Var1 *Var2 )
  808:  Sub   *Var0  00000005
  818:  Add   *Var1  00000005
  828:  Set   *Var3  000000AA
  838:  Call  SetPartPos        ( .Actor:Self 00000006 *Var0 *Var3 *Var2 )
  858:  Call  SetPartFlagBits   ( .Actor:Self 00000006 00000001 .False )
  874:  Call  SetAnimation      ( .Actor:Self 00000006 00680016 )
  88C:  Call  SetPartMoveSpeed  ( .Actor:Self 00000006 *Fixed[8.0] )
  8A4:  Call  SetPartJumpGravity    ( .Actor:Self 00000006 *Fixed[0.3] )
  8BC:  Call  FallPartTo        ( .Actor:Self 00000006 *Var0 *Var1 *Var2  20` )
  8E0:  Call  SetAnimation      ( .Actor:Self 00000006 00680017 )
  8F8:  Wait  2`
  904:  Call  SetTargetActor    ( .Actor:Self .Actor:Player )
  918:  Call  EnemyDamageTarget ( .Actor:Self *Var0 ~Flags:DamageType:NoContact 00000000 00000000 00000002 00000020 )
  940:  Wait  19`
  94C:  Call  SetPartFlagBits   ( .Actor:Self 00000006 00000001 .True )
  968:  If  *Var0  ==  0000000A % A
  978:  	Return
  980:  EndIf
  988:  Return
  990:  End
}

#new:Vector3D $Vector3D_8021E9A0
{
	190` 0` 0`
}

#new:SpecialFormation $SpecialFormation_8021E9AC
{
	$Chomp $Vector3D_8021E9A0 00000064 00000000 00000000 00000000 00000000
}

#new:Script $Script_8021E9C8
{
    0:  Call  GetStatusFlags    ( .Actor:Self *Var0 )
   14:  Call  GetActorVar       ( .Actor:Self 00000003 *Var0 )
   2C:  If  *Var0  ==  00000000
   3C:  	Call  UseBattleCamPreset    ( 0000000D )
   4C:  	Call  BattleCamTargetActor  ( .Actor:Self )
   5C:  	Call  MoveBattleCamOver     (  20` )
   6C:  	Wait  20`
   78:  	Call  SetAnimation  ( .Actor:Self 00000001 00680003 )
   90:  	Call  ActorSpeak    ( 000D00E6 .Actor:Self 00000001 00680003 00680003 ) % Bleah heh heh heh... Come, Chomp! Come! Bite this  ...
   B0:  Else
   B8:  	Call  UseBattleCamPreset    ( 0000000D )
   C8:  	Call  BattleCamTargetActor  ( .Actor:Self )
   D8:  	Call  MoveBattleCamOver     (  20` )
   E8:  	Wait  20`
   F4:  	Call  SetAnimation  ( .Actor:Self 00000001 00680003 )
  10C:  	Call  ActorSpeak    ( 000D00E7 .Actor:Self 00000001 00680003 00680003 ) % Come!! Chomp!!
  12C:  EndIf
  134:  Call  SetAnimation  ( .Actor:Self 00000001 00680001 )
  14C:  Call  GetActorVar   ( .Actor:Self 00000008 *Var0 )
  164:  If  *Var0  ==  00000000
  174:  	Call  UseBattleCamPreset    ( 0000000D )
  184:  	Call  8024ECF8  ( FFFFFFFF 00000001 00000000 )
  19C:  	Call  SetBattleCamZoom      (  225` )
  1AC:  	Call  SetBattleCamOffsetZ   (  -30` )
  1BC:  	Call  MoveBattleCamOver     (  40` )
  1CC:  Else
  1D4:  	Call  UseBattleCamPreset    ( 0000000D )
  1E4:  	Call  8024ECF8  ( FFFFFFFF 00000001 00000000 )
  1FC:  	Call  SetBattleCamZoom      (  200` )
  20C:  	Call  SetBattleCamOffsetZ   (  35` )
  21C:  	Call  MoveBattleCamOver     (  40` )
  22C:  EndIf
  234:  Call  SetActorVar   ( .Actor:Self 00000005 00000000 )
  24C:  Thread
  254:  	Label  0
  260:  	Call  StartRumble   ( 00000001 )
  270:  	Call  ShakeCam      ( .Cam:Battle 00000000  2` *Fixed[0.5] )
  28C:  	Wait  1`
  298:  	Call  GetActorVar   ( .Actor:Self 00000005 *Var0 )
  2B0:  	If  *Var0  <  0000003C
  2C0:  		Goto  0
  2CC:  	EndIf
  2D4:  EndThread
  2DC:  Call  PlaySound     ( 0000026B )
  2EC:  Label  A
  2F8:  Call  GetActorVar   ( .Actor:Self 00000005 *VarD )
  310:  Call  TranslateModel    ( 0000001F 00000000 *VarD 00000000 )
  32C:  Add   *VarD  00000001
  33C:  Call  SetActorVar   ( .Actor:Self 00000005 *VarD )
  354:  Wait  1`
  360:  If  *VarD  <  0000003C
  370:  	Goto  A
  37C:  EndIf
  384:  Call  StopSound     ( 0000026B )
  394:  Wait  10`
  3A0:  Call  SummonEnemy   ( $SpecialFormation_8021E9AC 00000000 )
  3B4:  Set   *VarB  *Var0
  3C4:  Set   *Var0  000000A5
  3D4:  Set   *Var1  00000000
  3E4:  Set   *Var2  FFFFFFE2
  3F4:  Call  SetActorPos   ( *VarB *Var0 *Var1 *Var2 )
  410:  Call  SetActorDispOffset    ( *VarB 00000000 00000000 00000000 )
  42C:  Call  UseIdleAnimation      ( *VarB .False )
  440:  Call  EnableIdleScript      ( *VarB 00000000 )
  454:  Call  SetAnimation  ( *VarB 00000001 00690005 )
  46C:  Call  SetActorSpeed ( *VarB *Fixed[6.0] )
  480:  Call  SetActorJumpGravity   ( *VarB *Fixed[0.8] )
  494:  Set   *Var0  0000005A
  4A4:  Set   *Var1  00000000
  4B4:  Set   *Var2  FFFFFFE2
  4C4:  Set   *Var3  00000008
  4D4:  Set   *Var4  0000001E
  4E4:  ExecWait  $Script_8021F42C
  4F0:  Call  GetActorVar   ( .Actor:Self 00000003 *Var5 )
  508:  If  *Var5  ==  00000000
  518:  	Call  UseBattleCamPreset    ( 00000013 )
  528:  	Call  SetBattleCamZoom      (  160` )
  538:  	Call  GetActorPos   ( *VarB *Var0 *Var1 *Var2 )
  554:  	Set   *Var1  0000003C
  564:  	Call  SetBattleCamTarget    ( *Var0 *Var1 *Var2 )
  57C:  	Call  MoveBattleCamOver     (  8` )
  58C:  	Loop  00000003
  598:  		Call  UseBattleCamPreset    ( 00000013 )
  5A8:  		Call  SetBattleCamZoom      (  150` )
  5B8:  		Call  SetBattleCamTarget    ( *Var0 *Var1 *Var2 )
  5D0:  		Call  MoveBattleCamOver     (  5` )
  5E0:  		Wait  4`
  5EC:  		Call  PlaySoundAtActor      ( .Actor:Self 00002061 )
  600:  		Call  UseBattleCamPreset    ( 00000013 )
  610:  		Call  SetBattleCamZoom      (  200` )
  620:  		Call  SetBattleCamTarget    ( *Var0 *Var1 *Var2 )
  638:  		Call  MoveBattleCamOver     (  5` )
  648:  		Wait  4`
  654:  	EndLoop
  65C:  Else
  664:  	Wait  8`
  670:  	Call  SetGoalPos    ( *VarB *Var0 *Var1 *Var2 )
  68C:  	Call  JumpToGoal    ( *VarB  8` .False .True .False )
  6AC:  	Thread
  6B4:  		Call  ShakeCam  ( .Cam:Battle 00000000  1` *Fixed[0.5] )
  6D0:  	EndThread
  6D8:  	Call  SetGoalPos    ( *VarB *Var0 *Var1 *Var2 )
  6F4:  	Call  JumpToGoal    ( *VarB  8` .False .True .False )
  714:  	Thread
  71C:  		Call  ShakeCam  ( .Cam:Battle 00000000  1` *Fixed[0.5] )
  738:  	EndThread
  740:  	Wait  8`
  74C:  EndIf
  754:  Call  UseBattleCamPreset    ( 00000002 )
  764:  Call  MoveBattleCamOver (  30` )
  774:  Call  SetActorSpeed     ( *VarB *Fixed[3.0] )
  788:  Call  SetActorJumpGravity   ( *VarB *Fixed[0.8] )
  79C:  Set   *Var0  00000014
  7AC:  Set   *Var1  00000000
  7BC:  Set   *Var2  00000014
  7CC:  Set   *Var3  00000008
  7DC:  Set   *Var4  00000014
  7EC:  ExecWait  $Script_8021F42C
  7F8:  Call  GetActorPos       ( *VarB *Var0 *Var1 *Var2 )
  814:  Call  ForceHomePos      ( *VarB *Var0 *Var1 *Var2 )
  830:  Call  SetPartPos        ( *VarB 00000002 *Var0 *Var1 *Var2 )
  850:  Call  HPBarToHome       ( *VarB )
  860:  Call  SetActorSpeed     ( *VarB *Fixed[6.0] )
  874:  Call  SetActorJumpGravity   ( *VarB *Fixed[0.8] )
  888:  Call  EnableIdleScript  ( *VarB 00000001 )
  89C:  Call  UseIdleAnimation  ( *VarB .True )
  8B0:  Call  SetActorVar       ( .Actor:Self 00000005 0000003C )
  8C8:  Thread
  8D0:  	Label  28
  8DC:  	Call  StartRumble   ( 00000001 )
  8EC:  	Call  ShakeCam      ( .Cam:Battle 00000000  2` *Fixed[0.5] )
  908:  	Wait  1`
  914:  	Call  GetActorVar   ( .Actor:Self 00000005 *Var0 )
  92C:  	If  *Var0  !=  00000000
  93C:  		Goto  28
  948:  	EndIf
  950:  EndThread
  958:  Call  PlaySound     ( 0000026B )
  968:  Label  32
  974:  Call  GetActorVar   ( .Actor:Self 00000005 *VarD )
  98C:  Call  TranslateModel    ( 0000001F 00000000 *VarD 00000000 )
  9A8:  Sub   *VarD  00000001
  9B8:  Call  SetActorVar   ( .Actor:Self 00000005 *VarD )
  9D0:  Wait  1`
  9DC:  If  *VarD  >  00000000
  9EC:  	Goto  32
  9F8:  EndIf
  A00:  Call  StopSound ( 0000026B )
  A10:  Call  PlaySound ( 0000026C )
  A20:  Call  ShakeCam  ( .Cam:Battle 00000000  4` *Fixed[0.5] )
  A3C:  Call  SetActorVar   ( .Actor:Self 00000003 00000001 )
  A54:  Return
  A5C:  End
}

#new:Script $Script_8021F42C
{
    0:  Label  14
    C:  Call  GetActorPos   ( *VarB *Var5 *Var6 *Var7 )
   28:  If  *Var5  ==  *Var0
   38:  	Goto  1E
   44:  EndIf
   4C:  Set   *Var6  *Var5
   5C:  Sub   *Var6  *Var0
   6C:  If  *Var6  <  *Var4
   7C:  	Call  SetGoalPos        ( *VarB *Var0 *Var1 *Var2 )
   98:  	Call  JumpToGoal        ( *VarB *Var3 .False .True .False )
   B8:  	Call  PlaySoundAtActor  ( .Actor:Self 00002062 )
   CC:  	Thread
   D4:  		Call  ShakeCam  ( .Cam:Battle 00000000  1` *Fixed[0.5] )
   F0:  	EndThread
   F8:  Else
  100:  	Sub   *Var5  *Var4
  110:  	Call  SetGoalPos        ( *VarB *Var5 *Var1 *Var2 )
  12C:  	Call  JumpToGoal        ( *VarB *Var3 .False .True .False )
  14C:  	Call  PlaySoundAtActor  ( .Actor:Self 00002062 )
  160:  	Thread
  168:  		Call  ShakeCam  ( .Cam:Battle 00000000  1` *Fixed[0.5] )
  184:  	EndThread
  18C:  EndIf
  194:  Goto  14
  1A0:  Label  1E
  1AC:  Return
  1B4:  End
}

#new:Script $Script_8021F5E8
{
    0:  Call  SetActorVar       ( .Actor:Self 00000007 00000000 )
   18:  Call  UseBattleCamPreset    ( 0000000D )
   28:  Call  BattleCamTargetActor  ( .Actor:Self )
   38:  Call  PlaySoundAtActor  ( .Actor:Self 000020E1 )
   4C:  Call  SetAnimation      ( .Actor:Self 00000001 00680008 )
   64:  Call  GetActorPos       ( .Actor:Self *Var0 *Var1 *Var2 )
   80:  Add   *Var1  00000014
   90:  Call  PlayEffect        ( ~FX:Hieroglyphics *Var0 *Var1 *Var2 *Fixed[1.0] 0000002D 00000000 00000000 00000000 00000000 00000000 00000000 00000000 )
   D4:  Wait  45`
   E0:  Call  UseBattleCamPreset    ( 00000002 )
   F0:  Call  MoveBattleCamOver (  60` )
  100:  Call  PlaySoundAtActor  ( .Actor:Self 000020E6 )
  114:  Call  SetActorJumpGravity   ( .Actor:Self *Fixed[0.1] )
  128:  Call  SetGoalPos        ( .Actor:Self  97`  70`  15` )
  144:  Call  JumpToGoal        ( .Actor:Self  45` .False .True .False )
  164:  Call  PlaySoundAtActor  ( .Actor:Self 000020BA )
  178:  Thread
  180:  	Wait  1`
  18C:  	Call  PlaySoundAtActor  ( .Actor:Self 000003B4 )
  1A0:  EndThread
  1A8:  Wait  5`
  1B4:  Call  SetActorVar   ( .Actor:Self 00000008 00000000 )
  1CC:  Call  GetActorPos   ( .Actor:Self *Var0 *Var1 *Var2 )
  1E8:  Call  ForceHomePos  ( .Actor:Self *Var0 *Var1 *Var2 )
  204:  Call  HPBarToHome   ( .Actor:Self )
  214:  Return
  21C:  End
}

#new:Script $Script_8021F80C
{
    0:  Call  SetAnimation  ( .Actor:Self 00000001 00680008 )
   18:  Call  SetActorJumpGravity   ( .Actor:Self *Fixed[1.0] )
   2C:  Call  GetActorPos   ( .Actor:Self *Var0 *Var1 *Var2 )
   48:  Call  SetGoalPos    ( .Actor:Self *Var0 *Var1 *Var2 )
   64:  Call  JumpToGoal    ( .Actor:Self  8` .False .True .False )
   84:  Call  PlaySoundAtActor      ( .Actor:Self 000020BA )
   98:  Thread
   A0:  	Wait  1`
   AC:  	Call  PlaySoundAtActor  ( .Actor:Self 000003B4 )
   C0:  EndThread
   C8:  Call  SetAnimation      ( .Actor:Self 00000001 00680001 )
   E0:  Call  SetIdleAnimations ( .Actor:Self 00000001 $IdleAnimations_8021B960 )
   F8:  Wait  10`
  104:  Call  GetActorVar       ( .Actor:Self 00000004 *Var0 )
  11C:  If  *Var0  ==  00000000
  12C:  	Call  UseBattleCamPreset    ( 0000000D )
  13C:  	Call  BattleCamTargetActor  ( .Actor:Self )
  14C:  	Call  MoveBattleCamOver     (  20` )
  15C:  	Wait  20`
  168:  	Call  ActorSpeak    ( 000D00E4 .Actor:Self 00000001 0068000B 00680001 ) % Ouch! What are you doing? That hurt! I'm king of t ...
  188:  	Call  SetActorVar   ( .Actor:Self 00000004 00000001 )
  1A0:  EndIf
  1A8:  Return
  1B0:  End
}

#new:Script $Script_NextTurn_8021F9C4
{
    0:  Call  GetBattlePhase    ( *Var0 )
   10:  Switch  *Var0
   1C:  	Case  ==  0000000A
   28:  		Call  GetActorVar   ( .Actor:Self 0000000A *Var0 )
   40:  		Switch  *Var0
   4C:  			Case  ==  00000000
   58:  				Call  SetActorVar   ( .Actor:Self 0000000A 00000001 )
   70:  		EndSwitch
   78:  EndSwitch
   80:  Return
   88:  End
}

#new:Script $Script_8021FA54
{
    0:  Call  ActorExists   ( .Actor:Enemy1 *Var2 )
   14:  If  *Var2  !=  .False
   24:  	Call  GetActorHP    ( .Actor:Enemy1 *Var2 )
   38:  	If  *Var2  !=  00000000
   48:  		Thread
   50:  			Call  8027D32C  ( 00000201 )
   60:  			Call  EnableIdleScript  ( .Actor:Enemy1 00000000 )
   74:  			Call  UseIdleAnimation  ( .Actor:Enemy1 .False )
   88:  			Call  SetAnimation      ( .Actor:Enemy1 00000001 00690006 )
   A0:  			Wait  10`
   AC:  			Set   *Var2  00000000
   BC:  			Loop  00000018
   C8:  				Call  SetActorYaw   ( .Actor:Enemy1 *Var2 )
   DC:  				Add   *Var2  0000001E
   EC:  				Wait  1`
   F8:  			EndLoop
  100:  			Call  SetActorYaw   ( .Actor:Enemy1  0` )
  114:  			Call  GetActorPos   ( .Actor:Enemy1 *Var0 *Var1 *Var2 )
  130:  			Add   *Var1  0000000A
  140:  			Call  PlayEffect    ( ~FX:BigSmokePuff *Var0 *Var1 *Var2 00000000 00000000 00000000 00000000 00000000 00000000 00000000 00000000 00000000 00000000 )
  184:  			Call  PlaySoundAtActor  ( .Actor:Enemy1 .Sound:Death )
  198:  			Set   *Var3  00000000
  1A8:  			Loop  0000000C
  1B4:  				Call  SetActorRotation  ( .Actor:Enemy1 *Var3 00000000 00000000 )
  1D0:  				Add   *Var3  00000008
  1E0:  				Wait  1`
  1EC:  			EndLoop
  1F4:  			Call  RemoveActor   ( .Actor:Enemy1 )
  204:  		EndThread
  20C:  	EndIf
  214:  EndIf
  21C:  ExecWait  Collapse
  228:  Label  0
  234:  Call  ActorExists   ( .Actor:Enemy1 *Var0 )
  248:  If  *Var0  !=  .False
  258:  	Wait  1`
  264:  	Goto  0
  270:  EndIf
  278:  Call  RemoveActor   ( .Actor:Self )
  288:  Return
  290:  End
}

PADDING: 8021FCEC to 8021FCF0 (004F718C to 004F7190)
00000000

#new:Script $Script_BeforeBattle_8021FCF0
{
    0:  Call  SetSpriteShading  ( FFFFFFFF )
   10:  Call  SetCamBGColor     ( .Cam:Battle  0`  0`  0` )
   2C:  Return
   34:  End
}

#new:Script $Script_AfterBattle_8021FD2C
{
    0:  Return
    8:  End
}

#new:Stage $Stage_8021FD3C
{
	$ASCII_80220500  % isk_tex
	$ASCII_802204F0  % isk_bt00_shape
	00000000
	$Script_BeforeBattle_8021FCF0
	$Script_AfterBattle_8021FD2C
	00000000
	00000000
	00000000
	00000000
	00000000
}

PADDING: 8021FD64 to 8021FD70 (004F7204 to 004F7210)
00000000 00000000 00000000

#new:Script $Script_BeforeBattle_8021FD70
{
    0:  Call  SetSpriteShading  ( FFFFFFFF )
   10:  Call  SetCamBGColor     ( .Cam:Battle  0`  0`  0` )
   2C:  Return
   34:  End
}

#new:Script $Script_AfterBattle_8021FDAC
{
    0:  Return
    8:  End
}

#new:Stage $Stage_8021FDBC
{
	$ASCII_80220528  % isk_tex
	$ASCII_80220518  % isk_bt01_shape
	$ASCII_80220508  % isk_bt01_hit
	$Script_BeforeBattle_8021FD70
	$Script_AfterBattle_8021FDAC
	00000000
	00000000
	00000000
	00000000
	00000000
}

PADDING: 8021FDE4 to 8021FDF0 (004F7284 to 004F7290)
00000000 00000000 00000000

#new:Script $Script_BeforeBattle_8021FDF0
{
    0:  Call  SetSpriteShading  ( 000C0000 )
   10:  Call  SetCamBGColor     ( .Cam:Battle  0`  0`  0` )
   2C:  Return
   34:  End
}

#new:Script $Script_AfterBattle_8021FE2C
{
    0:  Return
    8:  End
}

#new:ForegroundModelList $ForegroundModelList_8021FE3C
{
	~Model:isk_bt02:o398
	~Model:isk_bt02:o397
	~Model:isk_bt02:o399
	00000000
}

#new:Stage $Stage_8021FE4C
{
	$ASCII_80220550  % isk_tex
	$ASCII_80220540  % isk_bt02_shape
	$ASCII_80220530  % isk_bt02_hit
	$Script_BeforeBattle_8021FDF0
	$Script_AfterBattle_8021FE2C
	00000000
	$ForegroundModelList_8021FE3C
	00000000
	00000000
	00000000
}

PADDING: 8021FE74 to 8021FE80 (004F7314 to 004F7320)
00000000 00000000 00000000

#new:Script $Script_BeforeBattle_8021FE80
{
    0:  Call  SetSpriteShading  ( FFFFFFFF )
   10:  Call  SetCamBGColor ( .Cam:Battle  0`  0`  0` )
   2C:  Call  EnableModel   ( ~Model:isk_bt02:o365 .False )
   40:  Call  EnableModel   ( ~Model:isk_bt02:o366 .False )
   54:  Call  EnableModel   ( ~Model:isk_bt02:o367 .False )
   68:  Call  EnableModel   ( ~Model:isk_bt02:o389 .False )
   7C:  Call  EnableModel   ( ~Model:isk_bt02:o390 .False )
   90:  Call  EnableModel   ( ~Model:isk_bt02:o391 .False )
   A4:  Return
   AC:  End
}

#new:Script $Script_AfterBattle_8021FF34
{
    0:  Return
    8:  End
}

#new:ForegroundModelList $ForegroundModelList_8021FF44
{
	~Model:isk_bt02:o398
	~Model:isk_bt02:o397
	~Model:isk_bt02:o399
	00000000
}

#new:Stage $Stage_8021FF54
{
	$ASCII_80220578  % isk_tex
	$ASCII_80220568  % isk_bt02_shape
	$ASCII_80220558  % isk_bt02_hit
	$Script_BeforeBattle_8021FE80
	$Script_AfterBattle_8021FF34
	00000000
	$ForegroundModelList_8021FF44
	00000000
	00000000
	00000000
}

PADDING: 8021FF7C to 8021FF80 (004F741C to 004F7420)
00000000

#new:Script $Script_BeforeBattle_8021FF80
{
    0:  Call  SetSpriteShading  ( FFFFFFFF )
   10:  Call  SetCamBGColor ( .Cam:Battle  0`  0`  0` )
   2C:  Call  EnableModel   ( ~Model:isk_bt02:kai2 .False )
   40:  Call  EnableModel   ( ~Model:isk_bt02:kai1 .False )
   54:  Return
   5C:  End
}

#new:Script $Script_AfterBattle_8021FFE4
{
    0:  Return
    8:  End
}

#new:ForegroundModelList $ForegroundModelList_8021FFF4
{
	~Model:isk_bt02:o398
	~Model:isk_bt02:o397
	~Model:isk_bt02:o399
	00000000
}

#new:Stage $Stage_80220004
{
	$ASCII_802205A0  % isk_tex
	$ASCII_80220590  % isk_bt02_shape
	$ASCII_80220580  % isk_bt02_hit
	$Script_BeforeBattle_8021FF80
	$Script_AfterBattle_8021FFE4
	00000000
	$ForegroundModelList_8021FFF4
	00000000
	00000000
	00000000
}

PADDING: 8022002C to 80220030 (004F74CC to 004F74D0)
00000000

#new:Script $Script_BeforeBattle_80220030
{
    0:  Call  SetSpriteShading  ( FFFFFFFF )
   10:  Call  SetCamBGColor     ( .Cam:Battle  0`  0`  0` )
   2C:  Return
   34:  End
}

#new:Script $Script_AfterBattle_8022006C
{
    0:  Return
    8:  End
}

#new:Stage $Stage_8022007C
{
	$ASCII_802205D0  % isk_tex
	$ASCII_802205C0  % isk_bt03_shape
	$ASCII_802205B0  % isk_bt03_hit
	$Script_BeforeBattle_80220030
	$Script_AfterBattle_8022006C
	$ASCII_802205A8  % sbk3_bg
	00000000
	00000000
	00000000
	00000000
}

PADDING: 802200A4 to 802200B0 (004F7544 to 004F7550)
00000000 00000000 00000000

#new:Script $Script_BeforeBattle_802200B0
{
    0:  Call  SetSpriteShading  ( FFFFFFFF )
   10:  Call  SetCamBGColor     ( .Cam:Battle  0`  0`  0` )
   2C:  Return
   34:  End
}

#new:Script $Script_AfterBattle_802200EC
{
    0:  Return
    8:  End
}

#new:Stage $Stage_802200FC
{
	$ASCII_802205F8  % isk_tex
	$ASCII_802205E8  % isk_bt03_shape
	$ASCII_802205D8  % isk_bt03_hit
	$Script_BeforeBattle_802200B0
	$Script_AfterBattle_802200EC
	00000000
	00000000
	00000000
	00000000
	00000000
}

PADDING: 80220124 to 80220130 (004F75C4 to 004F75D0)
00000000 00000000 00000000

#new:Script $Script_BeforeBattle_80220130
{
    0:  Call  SetSpriteShading  ( FFFFFFFF )
   10:  Call  SetCamBGColor     ( .Cam:Battle  0`  0`  0` )
   2C:  Call  $Function_80218850 ( )
   38:  Return
   40:  End
}

#new:Script $Script_AfterBattle_80220178
{
    0:  Call  $Function_802188E4 ( )
    C:  Return
   14:  End
}

#new:ForegroundModelList $ForegroundModelList_80220194
{
	~Model:isk_bt04:o500
	~Model:isk_bt04:o501
	00000000
}

#new:Stage $Stage_802201A0
{
	$ASCII_80220620  % isk_tex
	$ASCII_80220610  % isk_bt04_shape
	$ASCII_80220600  % isk_bt04_hit
	$Script_BeforeBattle_80220130
	$Script_AfterBattle_80220178
	00000000
	$ForegroundModelList_80220194
	00000000
	00000000
	00000000
}

PADDING: 802201C8 to 802201D0 (004F7668 to 004F7670)
00000000 00000000

#new:Script $Script_BeforeBattle_802201D0
{
    0:  Call  SetSpriteShading  ( FFFFFFFF )
   10:  Call  SetCamBGColor     ( .Cam:Battle  0`  0`  0` )
   2C:  Call  $Function_80218920 ( )
   38:  Return
   40:  End
}

#new:Script $Script_AfterBattle_80220218
{
    0:  Call  $Function_802189B0 ( )
    C:  Return
   14:  End
}

#new:Stage $Stage_80220234
{
	$ASCII_80220648  % isk_tex
	$ASCII_80220638  % isk_bt05_shape
	$ASCII_80220628  % isk_bt05_hit
	$Script_BeforeBattle_802201D0
	$Script_AfterBattle_80220218
	00000000
	00000000
	00000000
	00000000
	00000000
}

PADDING: 8022025C to 80220260 (004F76FC to 004F7700)
00000000

#new:Script $Script_BeforeBattle_80220260
{
    0:  Call  SetSpriteShading  ( FFFFFFFF )
   10:  Call  SetCamBGColor     ( .Cam:Battle  0`  0`  0` )
   2C:  Call  $Function_802189F0 ( )
   38:  Return
   40:  End
}

#new:Script $Script_AfterBattle_802202A8
{
    0:  Call  $Function_80218A38 ( )
    C:  Return
   14:  End
}

#new:Stage $Stage_802202C4
{
	$ASCII_80220670  % isk_tex
	$ASCII_80220660  % isk_bt06_shape
	$ASCII_80220650  % isk_bt06_hit
	$Script_BeforeBattle_80220260
	$Script_AfterBattle_802202A8
	00000000
	00000000
	00000000
	00000000
	00000000
}

PADDING: 802202EC to 802202F0 (004F778C to 004F7790)
00000000

#new:Script $Script_BeforeBattle_802202F0
{
    0:  Call  SetSpriteShading  ( FFFFFFFF )
   10:  Call  SetCamBGColor     ( .Cam:Battle  0`  0`  0` )
   2C:  Call  $Function_80218A60 ( )
   38:  Call  EnableModel       ( ~Model:isk_bt06:kesu .False )
   4C:  Return
   54:  End
}

#new:Script $Script_AfterBattle_8022034C
{
    0:  Call  $Function_80218AA8 ( )
    C:  Return
   14:  End
}

#new:Stage $Stage_80220368
{
	$ASCII_80220698  % isk_tex
	$ASCII_80220688  % isk_bt06_shape
	$ASCII_80220678  % isk_bt06_hit
	$Script_BeforeBattle_802202F0
	$Script_AfterBattle_8022034C
	00000000
	00000000
	00000000
	00000000
	00000000
}

#new:Script $Script_BeforeBattle_80220390
{
    0:  Call  SetSpriteShading  ( FFFFFFFF )
   10:  Call  SetCamBGColor     ( .Cam:Battle  0`  0`  0` )
   2C:  Call  $Function_80218AD0 ( )
   38:  Return
   40:  End
}

#new:Script $Script_AfterBattle_802203D8
{
    0:  Call  $Function_80218B18 ( )
    C:  Return
   14:  End
}

#new:Stage $Stage_802203F4
{
	$ASCII_802206C0  % isk_tex
	$ASCII_802206B0  % isk_bt07_shape
	$ASCII_802206A0  % isk_bt07_hit
	$Script_BeforeBattle_80220390
	$Script_AfterBattle_802203D8
	00000000
	00000000
	00000000
	00000000
	00000000
}

PADDING: 8022041C to 80220420 (004F78BC to 004F78C0)
00000000

#new:Vector3D $Vector3D_80220420
{
	97` 70` 17`
}

#new:Formation $Formation_00
{
	$Tutankoopa $Vector3D_80220420 0000000A 00000000 00000000 00000000 00000000
}

#new:FormationTable $FormationTable
{
	$SJIS_802206C8 00000001 $Formation_00 $Stage_8021FDBC 00000000
	00000000 00000000 00000000 00000000 00000000
}

#new:StageTable $StageTable
{
	$ASCII_80220734 $Stage_8021FD3C
	$ASCII_8022072C $Stage_8021FDBC
	$ASCII_80220724 $Stage_8021FE4C
	$ASCII_8022071C $Stage_8021FF54
	$ASCII_80220714 $Stage_80220004
	$ASCII_8022070C $Stage_8022007C
	$ASCII_80220704 $Stage_802200FC
	$ASCII_802206FC $Stage_802201A0
	$ASCII_802206F4 $Stage_80220234
	$ASCII_802206EC $Stage_802202C4
	$ASCII_802206E4 $Stage_80220368
	$ASCII_802206DC $Stage_802203F4
	00000000 00000000
}

PADDING: 802204D8 to 802204E0 (004F7978 to 004F7980)
00000000 00000000

#new:ConstDouble $ConstDouble_802204E0
{
	0.200000d
}

PADDING: 802204E8 to 802204F0 (004F7988 to 004F7990)
00000000 00000000

#new:ASCII $ASCII_802204F0
{
	"isk_bt00_shape"
}

#new:ASCII $ASCII_80220500
{
	"isk_tex"
}

#new:ASCII $ASCII_80220508
{
	"isk_bt01_hit"
}

#new:ASCII $ASCII_80220518
{
	"isk_bt01_shape"
}

#new:ASCII $ASCII_80220528
{
	"isk_tex"
}

#new:ASCII $ASCII_80220530
{
	"isk_bt02_hit"
}

#new:ASCII $ASCII_80220540
{
	"isk_bt02_shape"
}

#new:ASCII $ASCII_80220550
{
	"isk_tex"
}

#new:ASCII $ASCII_80220558
{
	"isk_bt02_hit"
}

#new:ASCII $ASCII_80220568
{
	"isk_bt02_shape"
}

#new:ASCII $ASCII_80220578
{
	"isk_tex"
}

#new:ASCII $ASCII_80220580
{
	"isk_bt02_hit"
}

#new:ASCII $ASCII_80220590
{
	"isk_bt02_shape"
}

#new:ASCII $ASCII_802205A0
{
	"isk_tex"
}

#new:ASCII $ASCII_802205A8
{
	"sbk3_bg"
}

#new:ASCII $ASCII_802205B0
{
	"isk_bt03_hit"
}

#new:ASCII $ASCII_802205C0
{
	"isk_bt03_shape"
}

#new:ASCII $ASCII_802205D0
{
	"isk_tex"
}

#new:ASCII $ASCII_802205D8
{
	"isk_bt03_hit"
}

#new:ASCII $ASCII_802205E8
{
	"isk_bt03_shape"
}

#new:ASCII $ASCII_802205F8
{
	"isk_tex"
}

#new:ASCII $ASCII_80220600
{
	"isk_bt04_hit"
}

#new:ASCII $ASCII_80220610
{
	"isk_bt04_shape"
}

#new:ASCII $ASCII_80220620
{
	"isk_tex"
}

#new:ASCII $ASCII_80220628
{
	"isk_bt05_hit"
}

#new:ASCII $ASCII_80220638
{
	"isk_bt05_shape"
}

#new:ASCII $ASCII_80220648
{
	"isk_tex"
}

#new:ASCII $ASCII_80220650
{
	"isk_bt06_hit"
}

#new:ASCII $ASCII_80220660
{
	"isk_bt06_shape"
}

#new:ASCII $ASCII_80220670
{
	"isk_tex"
}

#new:ASCII $ASCII_80220678
{
	"isk_bt06_hit"
}

#new:ASCII $ASCII_80220688
{
	"isk_bt06_shape"
}

#new:ASCII $ASCII_80220698
{
	"isk_tex"
}

#new:ASCII $ASCII_802206A0
{
	"isk_bt07_hit"
}

#new:ASCII $ASCII_802206B0
{
	"isk_bt07_shape"
}

#new:ASCII $ASCII_802206C0
{
	"isk_tex"
}

#new:SJIS $SJIS_802206C8
{
	カーメン　ワンワン % ka-men wanwan
}

#new:ASCII $ASCII_802206DC
{
	"isk_07"
}

#new:ASCII $ASCII_802206E4
{
	"isk_06b"
}

#new:ASCII $ASCII_802206EC
{
	"isk_06"
}

#new:ASCII $ASCII_802206F4
{
	"isk_05"
}

#new:ASCII $ASCII_802206FC
{
	"isk_04"
}

#new:ASCII $ASCII_80220704
{
	"isk_03b"
}

#new:ASCII $ASCII_8022070C
{
	"isk_03"
}

#new:ASCII $ASCII_80220714
{
	"isk_02c"
}

#new:ASCII $ASCII_8022071C
{
	"isk_02b"
}

#new:ASCII $ASCII_80220724
{
	"isk_02"
}

#new:ASCII $ASCII_8022072C
{
	"isk_01"
}

#new:ASCII $ASCII_80220734
{
	"isk_00"
}

PADDING: 8022073C to 80220740 (004F7BDC to 004F7BE0)
00000000

