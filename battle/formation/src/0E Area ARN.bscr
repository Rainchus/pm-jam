% Script File: 0E Area ARN.bscr
% Decoded from: 4FEA50 to 50F020 (0E Area ARN)

#new:Function $Function_80218000
{
    0:  ADDIU     SP, SP, FFE0
    4:  SW        S1, 14 (SP)
    8:  COPY      S1, A0
    C:  SW        RA, 18 (SP)
   10:  SW        S0, 10 (SP)
   14:  LW        S0, C (S1)
   18:  LW        A1, 0 (S0)
   1C:  JAL       ~Func:get_variable
   20:  ADDIU     S0, S0, 4
   24:  COPY      A0, S1
   28:  LW        A1, 0 (S0)
   2C:  JAL       ~Func:get_variable
   30:  COPY      S0, V0
   34:  COPY      A0, S0
   38:  JAL       ~Func:start_rumble
   3C:  COPY      A1, V0
   40:  LW        RA, 18 (SP)
   44:  LW        S1, 14 (SP)
   48:  LW        S0, 10 (SP)
   4C:  LI        V0, 2
   50:  JR        RA
   54:  ADDIU     SP, SP, 20
}

#new:Function $Function_80218058
{
    0:  ADDIU     SP, SP, FFD8
    4:  SDC1      F22, 20 (SP)
    8:  MOV.S     F22, F12
    C:  SDC1      F20, 18 (SP)
   10:  SW        RA, 10 (SP)
   14:  JAL       ~Func:length2D
   18:  MOV.S     F20, F14
   1C:  TRUNC.W.S F6, F20
   20:  MFC1      V0, F6
   24:  NOP
   28:  BLTZL     V0, .o30
   2C:  SUBU      V0, R0, V0
        .o30
   30:  MTC1      V0, F2
   34:  NOP
   38:  CVT.S.W   F2, F2
   3C:  DIV.S     F4, F2, F0
   40:  CLEAR     A0
   44:  LI        A2, 5A
   48:  COPY      A1, A0
   4C:  LA        A3, $FloatTable_8021A4BC
   54:  ANDI      V0, A2, FFFF
        .o58
   58:  ANDI      V1, A0, FFFF
   5C:  SUBU      V0, V0, V1
   60:  SRL       V1, V0, 1F
   64:  ADDU      V0, V0, V1
   68:  SRA       V0, V0, 1
   6C:  ADDU      V1, A0, V0
   70:  ANDI      V0, V1, FFFF
   74:  SLL       V0, V0, 2
   78:  ADDU      V0, V0, A3
   7C:  LWC1      F0, 0 (V0)
   80:  C.LT.S    F0, F4
   84:  NOP
   88:  BC1FL     .o94
   8C:  COPY      A2, V1
   90:  COPY      A0, V1
        .o94
   94:  ADDIU     A1, A1, 1
   98:  ANDI      V0, A1, FFFF
   9C:  SLTIU     V0, V0, 7
   A0:  BNE       V0, R0, .o58
   A4:  ANDI      V0, A2, FFFF
   A8:  ANDI      V0, A0, FFFF
   AC:  SLL       V0, V0, 2
   B0:  ANDI      V1, A2, FFFF
   B4:  LTF       F2, V0 ($FloatTable_8021A4BC)
   C0:  SLL       V1, V1, 2
   C4:  SUB.S     F2, F2, F4
   C8:  LTF       F0, V1 ($FloatTable_8021A4BC)
   D4:  SUB.S     F0, F0, F4
   D8:  ABS.S     F2, F2
   DC:  ABS.S     F0, F0
   E0:  C.LT.S    F2, F0
   E4:  NOP
   E8:  BC1F      .oF4
   EC:  COPY      V1, A2
   F0:  COPY      V1, A0
        .oF4
   F4:  MTC1      R0, F0
   F8:  NOP
   FC:  C.LT.S    F22, F0
  100:  NOP
  104:  BC1F      .o130
  108:  NOP
  10C:  C.LE.S    F0, F20
  110:  NOP
  114:  BC1F      .o128
  118:  LI        V0, B4
  11C:  SUBU      V1, V0, V1
  120:  MTC1      R0, F0
  124:  NOP
        .o128
  128:  C.LT.S    F22, F0
  12C:  NOP
        .o130
  130:  BC1F      .o148
  134:  NOP
  138:  C.LT.S    F20, F0
  13C:  NOP
  140:  BC1TL     .o148
  144:  ADDIU     V1, V1, B4
        .o148
  148:  MTC1      R0, F0
  14C:  NOP
  150:  C.LE.S    F0, F22
  154:  NOP
  158:  BC1F      .o174
  15C:  NOP
  160:  C.LT.S    F20, F0
  164:  NOP
  168:  BC1F      .o174
  16C:  LI        V0, 168
  170:  SUBU      V1, V0, V1
        .o174
  174:  LW        RA, 10 (SP)
  178:  LDC1      F22, 20 (SP)
  17C:  LDC1      F20, 18 (SP)
  180:  ANDI      V0, V1, FFFF
  184:  JR        RA
  188:  ADDIU     SP, SP, 28
}

#new:Function $Function_802181E4
{
    0:  ADDIU     SP, SP, FFD8
    4:  SW        S4, 20 (SP)
    8:  COPY      S4, A0
    C:  SW        RA, 24 (SP)
   10:  SW        S3, 1C (SP)
   14:  SW        S2, 18 (SP)
   18:  SW        S1, 14 (SP)
   1C:  SW        S0, 10 (SP)
   20:  LW        S2, C (S4)
   24:  LW        A1, 0 (S2)
   28:  JAL       ~Func:get_variable
   2C:  ADDIU     S2, S2, 4
   30:  LW        A1, 0 (S2)
   34:  ADDIU     S2, S2, 4
   38:  COPY      A0, S4
   3C:  JAL       ~Func:get_variable
   40:  COPY      S0, V0
   44:  LW        A1, 0 (S2)
   48:  ADDIU     S2, S2, 4
   4C:  COPY      A0, S4
   50:  JAL       ~Func:get_variable
   54:  COPY      S1, V0
   58:  COPY      S3, V0
   5C:  LW        A1, 0 (S2)
   60:  ADDIU     S2, S2, 4
   64:  COPY      A0, S4
   68:  JAL       ~Func:get_variable
   6C:  SUBU      S3, S3, S0
   70:  COPY      S0, V0
   74:  COPY      A0, S4
   78:  LW        A1, 0 (S2)
   7C:  JAL       ~Func:get_variable
   80:  SUBU      S0, S0, S1
   84:  BNE       S3, R0, .oA0
   88:  NOP
   8C:  BNE       S0, R0, .oA0
   90:  COPY      A0, S4
   94:  LW        A1, 0 (S2)
   98:  BEQ       R0, R0, .oC8
   9C:  COPY      A2, V0
        .oA0
   A0:  MTC1      S3, F12
   A4:  NOP
   A8:  CVT.S.W   F12, F12
   AC:  MTC1      S0, F14
   B0:  NOP
   B4:  JAL       $Function_80218058
   B8:  CVT.S.W   F14, F14
   BC:  COPY      A0, S4
   C0:  LW        A1, 0 (S2)
   C4:  ADDIU     A2, V0, FFA6
        .oC8
   C8:  JAL       ~Func:set_variable
   CC:  NOP
   D0:  LI        V0, 2
   D4:  LW        RA, 24 (SP)
   D8:  LW        S4, 20 (SP)
   DC:  LW        S3, 1C (SP)
   E0:  LW        S2, 18 (SP)
   E4:  LW        S1, 14 (SP)
   E8:  LW        S0, 10 (SP)
   EC:  JR        RA
   F0:  ADDIU     SP, SP, 28
}

PADDING: 802182D8 to 802182E0 (004FED28 to 004FED30)
00000000 00000000

#new:Function $Function_802182E0
{
    0:  ADDIU     SP, SP, FFE0
    4:  SW        S1, 14 (SP)
    8:  COPY      S1, A0
    C:  SW        RA, 18 (SP)
   10:  SW        S0, 10 (SP)
   14:  LW        S0, C (S1)
   18:  LW        A1, 0 (S0)
   1C:  JAL       ~Func:get_variable
   20:  ADDIU     S0, S0, 4
   24:  COPY      A0, S1
   28:  LW        A1, 0 (S0)
   2C:  JAL       ~Func:get_variable
   30:  COPY      S0, V0
   34:  COPY      A0, S0
   38:  JAL       ~Func:start_rumble
   3C:  COPY      A1, V0
   40:  LW        RA, 18 (SP)
   44:  LW        S1, 14 (SP)
   48:  LW        S0, 10 (SP)
   4C:  LI        V0, 2
   50:  JR        RA
   54:  ADDIU     SP, SP, 20
}

#new:Function $Function_80218338
{
    0:  ADDIU     SP, SP, FFD8
    4:  SDC1      F22, 20 (SP)
    8:  MOV.S     F22, F12
    C:  SDC1      F20, 18 (SP)
   10:  SW        RA, 10 (SP)
   14:  JAL       ~Func:length2D
   18:  MOV.S     F20, F14
   1C:  TRUNC.W.S F6, F20
   20:  MFC1      V0, F6
   24:  NOP
   28:  BLTZL     V0, .o30
   2C:  SUBU      V0, R0, V0
        .o30
   30:  MTC1      V0, F2
   34:  NOP
   38:  CVT.S.W   F2, F2
   3C:  DIV.S     F4, F2, F0
   40:  CLEAR     A0
   44:  LI        A2, 5A
   48:  COPY      A1, A0
   4C:  LA        A3, $FloatTable_8021FD00
   54:  ANDI      V0, A2, FFFF
        .o58
   58:  ANDI      V1, A0, FFFF
   5C:  SUBU      V0, V0, V1
   60:  SRL       V1, V0, 1F
   64:  ADDU      V0, V0, V1
   68:  SRA       V0, V0, 1
   6C:  ADDU      V1, A0, V0
   70:  ANDI      V0, V1, FFFF
   74:  SLL       V0, V0, 2
   78:  ADDU      V0, V0, A3
   7C:  LWC1      F0, 0 (V0)
   80:  C.LT.S    F0, F4
   84:  NOP
   88:  BC1FL     .o94
   8C:  COPY      A2, V1
   90:  COPY      A0, V1
        .o94
   94:  ADDIU     A1, A1, 1
   98:  ANDI      V0, A1, FFFF
   9C:  SLTIU     V0, V0, 7
   A0:  BNE       V0, R0, .o58
   A4:  ANDI      V0, A2, FFFF
   A8:  ANDI      V0, A0, FFFF
   AC:  SLL       V0, V0, 2
   B0:  ANDI      V1, A2, FFFF
   B4:  LTF       F2, V0 ($FloatTable_8021FD00)
   C0:  SLL       V1, V1, 2
   C4:  SUB.S     F2, F2, F4
   C8:  LTF       F0, V1 ($FloatTable_8021FD00)
   D4:  SUB.S     F0, F0, F4
   D8:  ABS.S     F2, F2
   DC:  ABS.S     F0, F0
   E0:  C.LT.S    F2, F0
   E4:  NOP
   E8:  BC1F      .oF4
   EC:  COPY      V1, A2
   F0:  COPY      V1, A0
        .oF4
   F4:  MTC1      R0, F0
   F8:  NOP
   FC:  C.LT.S    F22, F0
  100:  NOP
  104:  BC1F      .o130
  108:  NOP
  10C:  C.LE.S    F0, F20
  110:  NOP
  114:  BC1F      .o128
  118:  LI        V0, B4
  11C:  SUBU      V1, V0, V1
  120:  MTC1      R0, F0
  124:  NOP
        .o128
  128:  C.LT.S    F22, F0
  12C:  NOP
        .o130
  130:  BC1F      .o148
  134:  NOP
  138:  C.LT.S    F20, F0
  13C:  NOP
  140:  BC1TL     .o148
  144:  ADDIU     V1, V1, B4
        .o148
  148:  MTC1      R0, F0
  14C:  NOP
  150:  C.LE.S    F0, F22
  154:  NOP
  158:  BC1F      .o174
  15C:  NOP
  160:  C.LT.S    F20, F0
  164:  NOP
  168:  BC1F      .o174
  16C:  LI        V0, 168
  170:  SUBU      V1, V0, V1
        .o174
  174:  LW        RA, 10 (SP)
  178:  LDC1      F22, 20 (SP)
  17C:  LDC1      F20, 18 (SP)
  180:  ANDI      V0, V1, FFFF
  184:  JR        RA
  188:  ADDIU     SP, SP, 28
}

#new:Function $Function_802184C4
{
    0:  ADDIU     SP, SP, FFD8
    4:  SW        S4, 20 (SP)
    8:  COPY      S4, A0
    C:  SW        RA, 24 (SP)
   10:  SW        S3, 1C (SP)
   14:  SW        S2, 18 (SP)
   18:  SW        S1, 14 (SP)
   1C:  SW        S0, 10 (SP)
   20:  LW        S2, C (S4)
   24:  LW        A1, 0 (S2)
   28:  JAL       ~Func:get_variable
   2C:  ADDIU     S2, S2, 4
   30:  LW        A1, 0 (S2)
   34:  ADDIU     S2, S2, 4
   38:  COPY      A0, S4
   3C:  JAL       ~Func:get_variable
   40:  COPY      S0, V0
   44:  LW        A1, 0 (S2)
   48:  ADDIU     S2, S2, 4
   4C:  COPY      A0, S4
   50:  JAL       ~Func:get_variable
   54:  COPY      S1, V0
   58:  COPY      S3, V0
   5C:  LW        A1, 0 (S2)
   60:  ADDIU     S2, S2, 4
   64:  COPY      A0, S4
   68:  JAL       ~Func:get_variable
   6C:  SUBU      S3, S3, S0
   70:  COPY      S0, V0
   74:  COPY      A0, S4
   78:  LW        A1, 0 (S2)
   7C:  JAL       ~Func:get_variable
   80:  SUBU      S0, S0, S1
   84:  BNE       S3, R0, .oA0
   88:  NOP
   8C:  BNE       S0, R0, .oA0
   90:  COPY      A0, S4
   94:  LW        A1, 0 (S2)
   98:  BEQ       R0, R0, .oC8
   9C:  COPY      A2, V0
        .oA0
   A0:  MTC1      S3, F12
   A4:  NOP
   A8:  CVT.S.W   F12, F12
   AC:  MTC1      S0, F14
   B0:  NOP
   B4:  JAL       $Function_80218338
   B8:  CVT.S.W   F14, F14
   BC:  COPY      A0, S4
   C0:  LW        A1, 0 (S2)
   C4:  ADDIU     A2, V0, FFA6
        .oC8
   C8:  JAL       ~Func:set_variable
   CC:  NOP
   D0:  LI        V0, 2
   D4:  LW        RA, 24 (SP)
   D8:  LW        S4, 20 (SP)
   DC:  LW        S3, 1C (SP)
   E0:  LW        S2, 18 (SP)
   E4:  LW        S1, 14 (SP)
   E8:  LW        S0, 10 (SP)
   EC:  JR        RA
   F0:  ADDIU     SP, SP, 28
}

PADDING: 802185B8 to 802185C0 (004FF008 to 004FF010)
00000000 00000000

#new:Function $Function_802185C0
{
    0:  ADDIU     SP, SP, FFE0
    4:  SW        S1, 14 (SP)
    8:  COPY      S1, A0
    C:  SW        RA, 18 (SP)
   10:  SW        S0, 10 (SP)
   14:  LW        S0, C (S1)
   18:  LW        A1, 0 (S0)
   1C:  JAL       ~Func:get_variable
   20:  ADDIU     S0, S0, 4
   24:  COPY      A0, S1
   28:  LW        A1, 0 (S0)
   2C:  JAL       ~Func:get_variable
   30:  COPY      S0, V0
   34:  COPY      A0, S0
   38:  JAL       ~Func:start_rumble
   3C:  COPY      A1, V0
   40:  LW        RA, 18 (SP)
   44:  LW        S1, 14 (SP)
   48:  LW        S0, 10 (SP)
   4C:  LI        V0, 2
   50:  JR        RA
   54:  ADDIU     SP, SP, 20
}

#new:Function $Function_80218618
{
    0:  ADDIU     SP, SP, FFE8
    4:  SW        S0, 10 (SP)
    8:  COPY      S0, A0
    C:  SW        RA, 14 (SP)
   10:  LW        V0, C (S0)
   14:  JAL       ~Func:get_variable
   18:  LW        A1, 0 (V0)
   1C:  LW        A0, 148 (S0)
   20:  JAL       ~Func:get_actor
   24:  COPY      S0, V0
   28:  BNE       S0, R0, .o40
   2C:  NOP
   30:  LW        V1, 8 (V0)
   34:  LI        V0, 4
   38:  BEQ       R0, R0, .o48
   3C:  SB        V0, 1D (V1)
        .o40
   40:  LW        V0, 8 (V0)
   44:  SB        R0, 1D (V0)
        .o48
   48:  LW        RA, 14 (SP)
   4C:  LW        S0, 10 (SP)
   50:  LI        V0, 2
   54:  JR        RA
   58:  ADDIU     SP, SP, 18
}

PADDING: 80218674 to 80218680 (004FF0C4 to 004FF0D0)
00000000 00000000 00000000

#new:Function $Function_80218680
{
    0:  ADDIU     SP, SP, FFD8
    4:  SW        S1, 14 (SP)
    8:  COPY      S1, A0
    C:  SW        RA, 24 (SP)
   10:  SW        S4, 20 (SP)
   14:  SW        S3, 1C (SP)
   18:  SW        S2, 18 (SP)
   1C:  SW        S0, 10 (SP)
   20:  LW        S0, C (S1)
   24:  LW        A1, 0 (S0)
   28:  JAL       ~Func:get_variable
   2C:  ADDIU     S0, S0, 4
   30:  LW        A1, 0 (S0)
   34:  ADDIU     S0, S0, 4
   38:  COPY      A0, S1
   3C:  JAL       ~Func:get_variable
   40:  COPY      S2, V0
   44:  LW        A1, 0 (S0)
   48:  ADDIU     S0, S0, 4
   4C:  COPY      A0, S1
   50:  JAL       ~Func:get_variable
   54:  COPY      S4, V0
   58:  LW        A1, 0 (S0)
   5C:  ADDIU     S0, S0, 4
   60:  COPY      A0, S1
   64:  JAL       ~Func:get_variable
   68:  COPY      S3, V0
   6C:  COPY      A0, S1
   70:  LW        A1, 0 (S0)
   74:  JAL       ~Func:get_float_variable
   78:  COPY      S0, V0
   7C:  LW        V0, C (S2)
   80:  MTC1      S4, F2
   84:  NOP
   88:  CVT.S.W   F2, F2
   8C:  SWC1      F2, 4 (V0)
   90:  LW        V0, C (S2)
   94:  MTC1      S3, F2
   98:  NOP
   9C:  CVT.S.W   F2, F2
   A0:  SWC1      F2, 8 (V0)
   A4:  LW        V0, C (S2)
   A8:  MTC1      S0, F2
   AC:  NOP
   B0:  CVT.S.W   F2, F2
   B4:  SWC1      F2, C (V0)
   B8:  LW        V1, C (S2)
   BC:  SWC1      F0, 34 (V1)
   C0:  LW        RA, 24 (SP)
   C4:  LW        S4, 20 (SP)
   C8:  LW        S3, 1C (SP)
   CC:  LW        S2, 18 (SP)
   D0:  LW        S1, 14 (SP)
   D4:  LW        S0, 10 (SP)
   D8:  LI        V0, 2
   DC:  JR        RA
   E0:  ADDIU     SP, SP, 28
}

PADDING: 80218764 to 80218770 (004FF1B4 to 004FF1C0)
00000000 00000000 00000000

#new:DefenseTable $DefenseTable_80218770
{
	.Element:Normal 00000000
	.Element:End
}

#new:StatusTable $StatusTable_8021877C
{
	.Status:Normal      0`
	.Status:Default     0`
	.Status:Sleep      80`
	.Status:Poison    100`
	.Status:Frozen      0`
	.Status:Dizzy      80`
	.Status:Fear      100`
	.Status:Static    100`
	.Status:Paralyze  100`
	.Status:Shrink     80`
	.Status:Stop       90`
	.Status:DefaultTurnMod    0`
	.Status:SleepTurnMod      0`
	.Status:PoisonTurnMod     0`
	.Status:FrozenTurnMod     0`
	.Status:DizzyTurnMod      0`
	.Status:FearTurnMod       0`
	.Status:StaticTurnMod     0`
	.Status:ParalyzeTurnMod   0`
	.Status:ShrinkTurnMod     0`
	.Status:StopTurnMod       0`
	.Status:End
}

#new:PartsTable $PartsTable_80218828
{
	00800000 01000000 001600FF $IdleAnimations_80219818 $DefenseTable_80218770 00000000 00000000 00F60000 00000000
}

#new:Actor $HyperGoomba
{
	% stats
	[Index]        1Bb
	[Level]        12`b
	[MaxHP]         7`b
	[Coins]         1`b
	[Flags]       00000000
	[StatusTable] $StatusTable_8021877C
	% ai
	[PartsCount]    1`s
	[PartsTable]  $PartsTable_80218828
	[Script]      $Script_Init_802188C0
	% move effectiveness
	[Escape]       60`b
	[Item]         80`b
	[AirLift]      90`b
	[Hurricane]    90`b % Bow's "Spook" as well
	[UpAndAway]    95`b
	[PowerBounce] 100`b
	[SpinSmash]     0`b % weight (0-4)
	% ui positions
	[Size]         24`b  24`b % width height
	[HealthBar]     0`b   0`b % dx dy
	[StatusTurn]  -10`b  20`b % dx dy
	[StatusIcon]   10`b  20`b % dx dy
}

#new:IdleAnimations $IdleAnimations_80218874
{
	.Status:Normal    00260208
	.Status:Stone     00260200
	.Status:Sleep     00260208
	.Status:Poison    00260208
	.Status:Stop      00260200
	.Status:Static    00260208
	.Status:Paralyze  00260200
	.Status:Dizzy     00260207
	.Status:Fear      00260207
	.Status:End
}

#new:Script $Script_Init_802188C0
{
    0:  Call  BindIdle      ( .Actor:Self $Script_Idle_802198FC )
   14:  Call  BindHandleEvent   ( .Actor:Self $Script_HandleEvent_80219BD8 )
   28:  Call  BindTakeTurn  ( .Actor:Self $Script_TakeTurn_802195F0 )
   3C:  Call  BindNextTurn  ( .Actor:Self $Script_NextTurn_80218950 )
   50:  Call  SetActorVar   ( .Actor:Self 00000000 00000000 )
   68:  Call  SetActorVar   ( .Actor:Self 00000001 00000000 )
   80:  Return
   88:  End
}

#new:Script $Script_NextTurn_80218950
{
    0:  Call  GetBattlePhase    ( *Var0 )
   10:  Switch  *Var0
   1C:  	Case  ==  0000000A
   28:  	Case  ==  0000000C
   34:  	Case  ==  0000000B
   40:  		Call  SetBattleVar  ( 00000001 00000000 )
   54:  		Call  SetActorVar   ( .Actor:Self 00000001 00000001 )
   6C:  EndSwitch
   74:  Return
   7C:  End
}

#new:Script $Script_802189D4
{
    0:  Call  UseIdleAnimation  ( .Actor:Self .False )
   14:  Call  EnableIdleScript  ( .Actor:Self 00000000 )
   28:  Call  SetTargetActor    ( .Actor:Self .Actor:Player )
   3C:  Call  SetGoalToTarget   ( .Actor:Self )
   4C:  Call  GetActorVar       ( .Actor:Self 00000000 *Var0 )
   64:  If  *Var0  ==  00000000
   74:  	Call  UseBattleCamPreset    ( 0000000E )
   84:  	Call  BattleCamTargetActor  ( .Actor:Self )
   94:  	Call  MoveBattleCamOver (  20` )
   A4:  	Wait  20`
   B0:  	Call  PlaySoundAtActor  ( .Actor:Self .Sound:PowerUp )
   C4:  	Call  GetActorPos       ( .Actor:Self *Var0 *Var1 *Var2 )
   E0:  	Add   *Var1  0000000A
   F0:  	Call  PlayEffect        ( ~FX:EnergyIn:LongStreaks1 *Var0 *Var1 *Var2 *Fixed[1.0] 0000002D 00000000 00000000 00000000 00000000 00000000 00000000 00000000 )
  134:  	Call  SetAnimation      ( .Actor:Self 00000001 00260203 )
  14C:  	Wait  30`
  158:  	Call  UseBattleCamPreset    ( 00000002 )
  168:  	Call  MoveBattleCamOver (  20` )
  178:  	Call  GetActorPos       ( .Actor:Self *Var0 *Var1 *Var2 )
  194:  	Call  SetActorJumpGravity   ( .Actor:Self *Fixed[1.0] )
  1A8:  	Call  SetGoalPos        ( .Actor:Self *Var0  0` *Var2 )
  1C4:  	Call  JumpToGoal        ( .Actor:Self  20` .False .True .False )
  1E4:  	Call  PlaySoundAtActor  ( .Actor:Self 000020DD )
  1F8:  	Call  $Function_80218000    ( 00000080 0000000A )
  20C:  	Thread
  214:  		Call  ShakeCam  ( .Cam:Battle 00000000  5` *Fixed[0.5] )
  230:  	EndThread
  238:  	Call  SetActorVar       ( .Actor:Self 00000000 00000001 )
  250:  	Call  SetIdleAnimations ( .Actor:Self 00000001 $IdleAnimations_80218874 )
  268:  	Call  SetAnimation      ( .Actor:Self 00000001 00260201 )
  280:  	Call  EnableActorGlow   ( .Actor:Self .True )
  294:  	Call  SetPartEventBits  ( .Actor:Self 00000001 00400000 .True )
  2B0:  	Wait  2`
  2BC:  	Call  EnableIdleScript  ( .Actor:Self 00000001 )
  2D0:  	Call  UseIdleAnimation  ( .Actor:Self .True )
  2E4:  	Return
  2EC:  EndIf
  2F4:  Call  UseBattleCamPreset    ( 0000003F )
  304:  Call  BattleCamTargetActor  ( .Actor:Self )
  314:  Call  8024ECF8  ( FFFFFFFF 00000001 00000000 )
  32C:  Loop  00000014
  338:  	Call  SetActorDispOffset    ( .Actor:Self 00000001 00000000 00000000 )
  354:  	Wait  1`
  360:  	Call  SetActorDispOffset    ( .Actor:Self FFFFFFFF 00000000 00000000 )
  37C:  	Wait  1`
  388:  EndLoop
  390:  Call  SetActorDispOffset    ( .Actor:Self 00000000 00000000 00000000 )
  3AC:  Call  EnemyTestTarget       ( .Actor:Self *Var0 ~Flags:DamageType:0 00000000 00000001 00000010 )
  3D0:  Switch  *Var0
  3DC:  	CaseOR  ==  .HitResult:Miss % 6
  3E8:  	CaseOR  ==  .HitResult:Lucky % 5
  3F4:  		Set   *VarA  *Var0
  404:  		Thread
  40C:  			Loop
  418:  				Call  GetActorPos   ( .Actor:Player *Var0 *Var1 *Var2 )
  434:  				Add   *Var0  0000001E
  444:  				Call  GetActorPos   ( .Actor:Self *Var3 *Var4 *Var5 )
  460:  				If  *Var0  >  *Var3
  470:  					BreakLoop
  478:  				EndIf
  480:  				Wait  1`
  48C:  			EndLoop
  494:  			Call  UseBattleCamPreset    ( 00000001 )
  4A4:  			If  *VarA  ==  .HitResult:Lucky % 5
  4B4:  				Call  EnemyTestTarget   ( .Actor:Self *Var0 ~Flags:DamageType:TriggerLucky 00000000 00000000 00000000 )
  4D8:  			EndIf
  4E0:  			Wait  15`
  4EC:  			Call  UseBattleCamPreset    ( 00000002 )
  4FC:  		EndThread
  504:  		Call  SetActorRotationOffset    ( .Actor:Self 00000000 0000000C 00000000 )
  520:  		Call  SetActorRotation  ( .Actor:Self 00000000 00000000 00000050 )
  53C:  		Call  SetActorSounds    ( .Actor:Self .ActorSound:Jump 0000010F 00000000 )
  558:  		Call  SetGoalToTarget   ( .Actor:Self )
  568:  		Call  AddGoalPos        ( .Actor:Self  -200`  0`  0` )
  584:  		Call  SetActorJumpGravity   ( .Actor:Self *Fixed[0.01] )
  598:  		Call  SetActorSpeed     ( .Actor:Self *Fixed[15.0] )
  5AC:  		Call  JumpToGoal        ( .Actor:Self  0` .False .True .False )
  5CC:  		Call  ResetAllActorSounds   ( .Actor:Self )
  5DC:  		Call  SetActorRotationOffset    ( .Actor:Self 00000000 00000000 00000000 )
  5F8:  		Call  SetActorRotation  ( .Actor:Self 00000000 00000000 00000000 )
  614:  		Call  GetActorPos       ( .Actor:Self *Var0 *Var1 *Var2 )
  630:  		Call  SetActorPos       ( .Actor:Self *Var0  0` *Var2 )
  64C:  		Wait  20`
  658:  		Call  EnableActorGlow   ( .Actor:Self .False )
  66C:  		Call  SetPartEventBits  ( .Actor:Self 00000001 00400000 .False )
  688:  		Call  YieldTurn ( )
  694:  		Call  SetActorPos       ( .Actor:Self  300`  0`  0` )
  6B0:  		Call  AddActorDecoration    ( .Actor:Self 00000001 00000000 .Decoration:Sweat )
  6CC:  		Call  SetAnimation      ( .Actor:Self 00000001 00260203 )
  6E4:  		Call  SetActorSpeed     ( .Actor:Self *Fixed[8.0] )
  6F8:  		Call  SetGoalToHome     ( .Actor:Self )
  708:  		Call  RunToGoal ( .Actor:Self  0` .False )
  720:  		Call  SetAnimation      ( .Actor:Self 00000001 00260201 )
  738:  		Call  RemoveActorDecoration ( .Actor:Self 00000001 00000000 )
  750:  		Call  SetActorVar       ( .Actor:Self 00000000 00000000 )
  768:  		Call  SetIdleAnimations ( .Actor:Self 00000001 $IdleAnimations_80219818 )
  780:  		Call  EnableIdleScript  ( .Actor:Self 00000001 )
  794:  		Call  UseIdleAnimation  ( .Actor:Self .True )
  7A8:  		Return
  7B0:  	EndCaseGroup
  7B8:  EndSwitch
  7C0:  Call  SetActorSounds    ( .Actor:Self .ActorSound:Jump 0000010F 00000000 )
  7DC:  Call  SetActorRotationOffset    ( .Actor:Self 00000000 0000000C 00000000 )
  7F8:  Call  SetActorRotation  ( .Actor:Self 00000000 00000000 00000050 )
  814:  Call  SetGoalToTarget   ( .Actor:Self )
  824:  Call  SetActorJumpGravity       ( .Actor:Self *Fixed[0.01] )
  838:  Call  SetActorSpeed     ( .Actor:Self *Fixed[15.0] )
  84C:  Call  JumpToGoal        ( .Actor:Self  0` .False .True .False )
  86C:  Wait  2`
  878:  Call  EnemyDamageTarget ( .Actor:Self *Var0 ~Flags:DamageType:0 00000000 00000000 00000008 00000020 )
  8A0:  Switch  *Var0
  8AC:  	CaseOR  ==  .HitResult:Hit % 0
  8B8:  	CaseOR  ==  .HitResult:QuakeImmune % 2
  8C4:  		Thread
  8CC:  			Call  SetActorRotationOffset    ( .Actor:Self 00000000 0000000C 00000000 )
  8E8:  			Set   *Var0  00000050
  8F8:  			Loop  0000003C
  904:  				Add   *Var0  00000012
  914:  				Call  SetActorRotation  ( .Actor:Self 00000000 00000000 *Var0 )
  930:  				Wait  1`
  93C:  			EndLoop
  944:  			Call  SetActorRotationOffset    ( .Actor:Self 00000000 00000000 00000000 )
  960:  			Call  SetActorRotation  ( .Actor:Self 00000000 00000000 00000000 )
  97C:  		EndThread
  984:  		Call  UseBattleCamPreset    ( 00000002 )
  994:  		Call  ResetAllActorSounds   ( .Actor:Self )
  9A4:  		Call  SetActorJumpGravity   ( .Actor:Self *Fixed[0.8] )
  9B8:  		Call  GetActorPos   ( .Actor:Self *Var0 *Var1 *Var2 )
  9D4:  		Set   *Var1  00000000
  9E4:  		Sub   *Var0  00000032
  9F4:  		Call  SetGoalPos    ( .Actor:Self *Var0 *Var1 *Var2 )
  A10:  		Call  JumpToGoal    ( .Actor:Self  30` .False .True .False )
  A30:  		Sub   *Var0  00000028
  A40:  		Call  SetGoalPos    ( .Actor:Self *Var0 *Var1 *Var2 )
  A5C:  		Call  JumpToGoal    ( .Actor:Self  20` .False .True .False )
  A7C:  		Sub   *Var0  0000001E
  A8C:  		Call  SetGoalPos    ( .Actor:Self *Var0 *Var1 *Var2 )
  AA8:  		Call  JumpToGoal    ( .Actor:Self  10` .False .True .False )
  AC8:  		Wait  10`
  AD4:  		Call  EnableActorGlow       ( .Actor:Self .False )
  AE8:  		Call  SetPartEventBits      ( .Actor:Self 00000001 00400000 .False )
  B04:  		Call  YieldTurn ( )
  B10:  		Call  SetActorYaw   ( .Actor:Self  180` )
  B24:  		Call  SetAnimation  ( .Actor:Self 00000001 00260203 )
  B3C:  		Call  SetActorSpeed ( .Actor:Self *Fixed[8.0] )
  B50:  		Call  SetGoalToHome ( .Actor:Self )
  B60:  		Call  RunToGoal     ( .Actor:Self  0` .False )
  B78:  		Call  SetAnimation  ( .Actor:Self 00000001 00260201 )
  B90:  		Call  SetActorYaw   ( .Actor:Self  0` )
  BA4:  		Call  SetActorVar   ( .Actor:Self 00000000 00000000 )
  BBC:  		Call  SetIdleAnimations     ( .Actor:Self 00000001 $IdleAnimations_80219818 )
  BD4:  	EndCaseGroup
  BDC:  EndSwitch
  BE4:  Call  EnableIdleScript  ( .Actor:Self 00000001 )
  BF8:  Call  UseIdleAnimation  ( .Actor:Self .True )
  C0C:  Return
  C14:  End
}

#new:Script $Script_TakeTurn_802195F0
{
    0:  Call  GetBattlePhase    ( *Var0 )
   10:  If  *Var0  ==  00000001
   20:  	Call  SetBattleVar  ( 00000001 00000001 )
   34:  	ExecWait  $Script_TakeTurn_8021A628
   40:  	Return
   48:  EndIf
   50:  Call  GetActorVar   ( .Actor:Self 00000000 *Var0 )
   68:  If  *Var0  ==  00000001
   78:  	ExecWait  $Script_802189D4
   84:  	Return
   8C:  EndIf
   94:  Call  GetBattleVar  ( 00000001 *Var0 )
   A8:  Switch  *Var0
   B4:  	Case  ==  00000000
   C0:  		Call  GetActorVar   ( .Actor:Self 00000001 *Var0 )
   D8:  		If  *Var0  ==  00000000
   E8:  			Call  RandInt   ( 000003E8 *Var0 )
   FC:  			If  *Var0  <  000002EE
  10C:  				Call  SetBattleVar  ( 00000001 00000002 )
  120:  				ExecWait  $Script_802189D4
  12C:  			Else
  134:  				Call  SetBattleVar  ( 00000001 00000001 )
  148:  				ExecWait  $Script_TakeTurn_8021A628
  154:  			EndIf
  15C:  		Else
  164:  			Call  RandInt   ( 000003E8 *Var0 )
  178:  			If  *Var0  <  000001F4
  188:  				Call  SetBattleVar  ( 00000001 00000002 )
  19C:  				ExecWait  $Script_802189D4
  1A8:  			Else
  1B0:  				Call  SetBattleVar  ( 00000001 00000001 )
  1C4:  				ExecWait  $Script_TakeTurn_8021A628
  1D0:  			EndIf
  1D8:  		EndIf
  1E0:  	Case  ==  00000001
  1EC:  		ExecWait  $Script_TakeTurn_8021A628
  1F8:  	Case  ==  00000002
  204:  		ExecWait  $Script_802189D4
  210:  EndSwitch
  218:  Return
  220:  End
}

#new:IdleAnimations $IdleAnimations_80219818
{
	.Status:Normal    00260201
	.Status:Stone     00260200
	.Status:Sleep     00260208
	.Status:Poison    00260201
	.Status:Stop      00260200
	.Status:Static    00260201
	.Status:Paralyze  00260200
	.Status:Dizzy     00260207
	.Status:Fear      00260207
	.Status:End
}

#new:IdleAnimations $IdleAnimations_80219864
{
	.Status:Normal    00260203
	.Status:Stone     00260200
	.Status:Sleep     00260208
	.Status:Poison    00260201
	.Status:Stop      00260200
	.Status:Static    00260203
	.Status:Paralyze  00260200
	.Status:Dizzy     00260207
	.Status:Fear      00260207
	.Status:End
}

% Origin: HEURISTIC
#new:Script $Script_802198B0
{
    0:  Call  BindTakeTurn      ( .Actor:Self $Script_TakeTurn_8021A628 )
   14:  Call  BindIdle  ( .Actor:Self $Script_Idle_802198FC )
   28:  Call  BindHandleEvent   ( .Actor:Self $Script_HandleEvent_80219BD8 )
   3C:  Return
   44:  End
}

#new:Script $Script_Idle_802198FC
{
    0:  Label  A
    C:  Call  RandInt   ( 00000050 *Var0 )
   20:  Add   *Var0  00000050
   30:  Loop  *Var0
   3C:  	Label  0
   48:  	Call  GetStatusFlags    ( .Actor:Self *Var1 )
   5C:  	If  *Var1  &  ~Flags:StatusFlags:Sleep|Frozen|Fear|Paralyze|Dizzy|Stone|Stop % 35D000
   6C:  		Wait  1`
   78:  		Goto  0
   84:  	EndIf
   8C:  	Wait  1`
   98:  EndLoop
   A0:  Call  GetActorPos       ( .Actor:Self *Var0 *Var1 *Var2 )
   BC:  Add   *Var0  00000005
   CC:  Call  SetActorIdleSpeed ( .Actor:Self *Fixed[1.0] )
   E0:  Call  SetIdleAnimations ( .Actor:Self 00000001 $IdleAnimations_80219864 )
   F8:  Call  SetIdleGoal       ( .Actor:Self *Var0 *Var1 *Var2 )
  114:  Call  IdleRunToGoal     ( .Actor:Self  0` )
  128:  Call  SetIdleAnimations ( .Actor:Self 00000001 $IdleAnimations_80219818 )
  140:  Loop  00000014
  14C:  	Label  1
  158:  	Call  GetStatusFlags    ( .Actor:Self *Var1 )
  16C:  	If  *Var1  &  ~Flags:StatusFlags:Sleep|Frozen|Fear|Paralyze|Dizzy|Stone|Stop % 35D000
  17C:  		Wait  1`
  188:  		Goto  1
  194:  	EndIf
  19C:  	Wait  1`
  1A8:  EndLoop
  1B0:  Call  GetActorPos       ( .Actor:Self *Var0 *Var1 *Var2 )
  1CC:  Sub   *Var0  00000005
  1DC:  Call  SetActorIdleSpeed ( .Actor:Self *Fixed[1.0] )
  1F0:  Call  SetIdleAnimations ( .Actor:Self 00000001 $IdleAnimations_80219864 )
  208:  Call  SetIdleGoal       ( .Actor:Self *Var0 *Var1 *Var2 )
  224:  Call  IdleRunToGoal     ( .Actor:Self  0` )
  238:  Call  SetIdleAnimations ( .Actor:Self 00000001 $IdleAnimations_80219818 )
  250:  Loop  00000050
  25C:  	Label  2
  268:  	Call  GetStatusFlags    ( .Actor:Self *Var1 )
  27C:  	If  *Var1  &  ~Flags:StatusFlags:Sleep|Frozen|Fear|Paralyze|Dizzy|Stone|Stop % 35D000
  28C:  		Wait  1`
  298:  		Goto  2
  2A4:  	EndIf
  2AC:  	Wait  1`
  2B8:  EndLoop
  2C0:  Goto  A
  2CC:  Return
  2D4:  End
}

#new:Script $Script_HandleEvent_80219BD8
{
    0:  Call  UseIdleAnimation  ( .Actor:Self .False )
   14:  Call  EnableIdleScript  ( .Actor:Self 00000000 )
   28:  Call  SetActorScale     ( .Actor:Self *Fixed[1.0] *Fixed[1.0] *Fixed[1.0] )
   44:  Call  GetLastEvent      ( .Actor:Self *Var0 )
   58:  Switch  *Var0
   64:  	CaseOR  ==  .Event:HitCombo % 9
   70:  	CaseOR  ==  .Event:Hit % A
   7C:  		SetConst  *Var0  00000001
   8C:  		SetConst  *Var1  00260205
   9C:  		ExecWait  DoNormalHit
   A8:  	EndCaseGroup
   B0:  	Case  ==  .Event:BurnHit % E
   BC:  		SetConst  *Var0  00000001
   CC:  		SetConst  *Var1  00260209
   DC:  		SetConst  *Var2  0026020A
   EC:  		ExecWait  DoBurnHit
   F8:  	Case  ==  .Event:BurnDeath % 24
  104:  		SetConst  *Var0  00000001
  114:  		SetConst  *Var1  00260209
  124:  		SetConst  *Var2  0026020A
  134:  		ExecWait  DoBurnHit
  140:  		SetConst  *Var0  00000001
  150:  		SetConst  *Var1  0026020A
  160:  		ExecWait  DoDeath
  16C:  		Return
  174:  	Case  ==  .Event:SpinSmashHit % B
  180:  		SetConst  *Var0  00000001
  190:  		SetConst  *Var1  00260205
  1A0:  		ExecWait  DoSpinSmashHit
  1AC:  	Case  ==  .Event:SpinSmashDeath % 21
  1B8:  		SetConst  *Var0  00000001
  1C8:  		SetConst  *Var1  00260205
  1D8:  		ExecWait  DoSpinSmashHit
  1E4:  		SetConst  *Var0  00000001
  1F4:  		SetConst  *Var1  00260206
  204:  		ExecWait  DoDeath
  210:  		Return
  218:  	Case  ==  .Event:ShockHit % 2F
  224:  		Call  SetActorRotationOffset    ( .Actor:Self 00000000 00000000 00000000 )
  240:  		Call  SetActorRotation  ( .Actor:Self 00000000 00000000 00000000 )
  25C:  		Call  EnableActorGlow   ( .Actor:Self .False )
  270:  		Call  SetPartEventBits  ( .Actor:Self 00000001 00400000 .False )
  28C:  		Call  SetActorVar       ( .Actor:Self 00000000 00000000 )
  2A4:  		Call  SetIdleAnimations ( .Actor:Self 00000001 $IdleAnimations_80219818 )
  2BC:  		SetConst  *Var0  00000001
  2CC:  		SetConst  *Var1  0026020E
  2DC:  		ExecWait  DoShockHit
  2E8:  		SetConst  *Var0  00000001
  2F8:  		SetConst  *Var1  00260205
  308:  		ExecWait  DoJumpBack
  314:  		Call  JumpToGoal        ( .Actor:Self  5` .False .True .False )
  334:  		Call  SetAnimationRate  ( .Actor:Self 00000001 *Fixed[2.0] )
  34C:  		Call  SetAnimation      ( .Actor:Self 00000001 00260207 )
  364:  		Call  SetGoalToHome     ( .Actor:Self )
  374:  		Call  SetActorSpeed     ( .Actor:Self *Fixed[8.0] )
  388:  		Call  RunToGoal ( .Actor:Self  0` .False )
  3A0:  		Call  SetAnimationRate  ( .Actor:Self 00000001 *Fixed[1.0] )
  3B8:  		Wait  5`
  3C4:  		Call  SetAnimation      ( .Actor:Self 00000001 00260201 )
  3DC:  		Call  SetActorJumpGravity       ( .Actor:Self *Fixed[1.6] )
  3F0:  		Call  JumpToGoal        ( .Actor:Self  5` .False .True .False )
  410:  	Case  ==  .Event:ShockDeath % 26
  41C:  		Call  SetActorRotationOffset    ( .Actor:Self 00000000 00000000 00000000 )
  438:  		Call  SetActorRotation  ( .Actor:Self 00000000 00000000 00000000 )
  454:  		Call  EnableActorGlow   ( .Actor:Self .False )
  468:  		Call  SetPartEventBits  ( .Actor:Self 00000001 00400000 .False )
  484:  		Call  SetActorVar       ( .Actor:Self 00000000 00000000 )
  49C:  		Call  SetIdleAnimations ( .Actor:Self 00000001 $IdleAnimations_80219818 )
  4B4:  		SetConst  *Var0  00000001
  4C4:  		SetConst  *Var1  0026020E
  4D4:  		ExecWait  DoShockHit
  4E0:  		SetConst  *Var0  00000001
  4F0:  		SetConst  *Var1  00260206
  500:  		ExecWait  DoDeath
  50C:  		Return
  514:  	Case  ==  .Event:StarBeam % 13
  520:  		Call  GetActorVar   ( .Actor:Self 00000000 *Var0 )
  538:  		If  *Var0  ==  00000001
  548:  			Call  SetActorRotationOffset    ( .Actor:Self 00000000 00000000 00000000 )
  564:  			Call  SetActorRotation  ( .Actor:Self 00000000 00000000 00000000 )
  580:  			Call  EnableActorGlow   ( .Actor:Self .False )
  594:  			Call  SetPartEventBits  ( .Actor:Self 00000001 00400000 .False )
  5B0:  			Call  SetActorVar       ( .Actor:Self 00000000 00000000 )
  5C8:  			Call  SetIdleAnimations ( .Actor:Self 00000001 $IdleAnimations_80219818 )
  5E0:  		EndIf
  5E8:  		SetConst  *Var0  00000001
  5F8:  		SetConst  *Var1  00260201
  608:  		ExecWait  DoImmune
  614:  	CaseOR  ==  00000017 % 17
  620:  	CaseOR  ==  .Event:Immune % 19
  62C:  	CaseOR  ==  .Event:AirLiftFailed % 1F
  638:  		SetConst  *Var0  00000001
  648:  		SetConst  *Var1  00260201
  658:  		ExecWait  DoImmune
  664:  	EndCaseGroup
  66C:  	Case  ==  .Event:Death % 20
  678:  		SetConst  *Var0  00000001
  688:  		SetConst  *Var1  00260205
  698:  		ExecWait  DoNormalHit
  6A4:  		Wait  10`
  6B0:  		SetConst  *Var0  00000001
  6C0:  		SetConst  *Var1  00260206
  6D0:  		ExecWait  DoDeath
  6DC:  		Return
  6E4:  	Case  ==  .Event:EndFirstStrike % 35
  6F0:  		Call  SetAnimationRate  ( .Actor:Self 00000001 *Fixed[2.0] )
  708:  		Call  SetAnimation  ( .Actor:Self 00000001 00260203 )
  720:  		Call  SetGoalToHome ( .Actor:Self )
  730:  		Call  SetActorSpeed ( .Actor:Self *Fixed[4.0] )
  744:  		Call  RunToGoal     ( .Actor:Self  0` .False )
  75C:  		Call  SetAnimationRate  ( .Actor:Self 00000001 *Fixed[1.0] )
  774:  		Call  HPBarToHome   ( .Actor:Self )
  784:  	Case  ==  .Event:RecoverStatus % 31
  790:  		SetConst  *Var0  00000001
  7A0:  		SetConst  *Var1  00260201
  7B0:  		ExecWait  DoRecover
  7BC:  	Case  ==  .Event:ScareAway % 39
  7C8:  		SetConst  *Var0  00000001
  7D8:  		SetConst  *Var1  00260203
  7E8:  		SetConst  *Var2  00260205
  7F8:  		ExecWait  DoScareAway
  804:  		Return
  80C:  	Case  ==  .Event:BeginAirLift % 3A
  818:  		SetConst  *Var0  00000001
  828:  		SetConst  *Var1  00260203
  838:  		ExecWait  DoAirLift
  844:  	Case  ==  .Event:BlowAway % 16
  850:  		SetConst  *Var0  00000001
  860:  		SetConst  *Var1  00260205
  870:  		ExecWait  DoBlowAway
  87C:  		Return
  884:  	Default
  88C:  EndSwitch
  894:  Call  SetAnimation      ( .Actor:Self 00000001 00260201 )
  8AC:  Call  EnableIdleScript  ( .Actor:Self 00000001 )
  8C0:  Call  UseIdleAnimation  ( .Actor:Self .True )
  8D4:  Return
  8DC:  End
}

#new:FloatTable $FloatTable_8021A4BC
{
	0.0      0.017452 0.034899 0.052336 0.069756 0.087156 0.104528 0.121869
	0.139173 0.156434 0.173648 0.190809 0.207912 0.224951 0.241922 0.258819
	0.275637 0.292372 0.309017 0.325568 0.34202  0.358368 0.374607 0.390731
	0.406737 0.422618 0.438371 0.45399  0.469472 0.48481  0.5      0.515038
	0.529919 0.544639 0.559193 0.573576 0.587785 0.601815 0.615661 0.62932
	0.642788 0.656059 0.669131 0.681998 0.694658 0.707107 0.71934  0.731354
	0.743145 0.75471  0.766044 0.777146 0.788011 0.798636 0.809017 0.819152
	0.829038 0.838671 0.848048 0.857167 0.866025 0.87462  0.882948 0.891007
	0.898794 0.906308 0.913545 0.920505 0.927184 0.93358  0.939693 0.945519
	0.951057 0.956305 0.961262 0.965926 0.970296 0.97437  0.978148 0.981627
	0.984808 0.987688 0.990268 0.992546 0.994522 0.996195 0.997564 0.99863
	0.999391 0.999848 1.0
}

#new:Script $Script_TakeTurn_8021A628
{
    0:  Call  UseIdleAnimation  ( .Actor:Self .False )
   14:  Call  EnableIdleScript  ( .Actor:Self 00000000 )
   28:  Call  SetTargetActor    ( .Actor:Self .Actor:Player )
   3C:  Call  UseBattleCamPreset    ( 0000003F )
   4C:  Call  BattleCamTargetActor  ( .Actor:Self )
   5C:  Call  8024ECF8  ( FFFFFFFF 00000001 00000000 )
   74:  Call  SetAnimation      ( .Actor:Self 00000001 00260203 )
   8C:  Call  SetGoalToTarget   ( .Actor:Self )
   9C:  Call  AddGoalPos        ( .Actor:Self  50`  0`  0` )
   B8:  Call  SetActorSpeed     ( .Actor:Self *Fixed[6.0] )
   CC:  Call  RunToGoal ( .Actor:Self  0` .False )
   E4:  Call  SetAnimation      ( .Actor:Self 00000001 00260201 )
   FC:  Call  SetActorDispOffset    ( .Actor:Self 00000000 FFFFFFFF 00000000 )
  118:  Wait  1`
  124:  Call  SetActorDispOffset    ( .Actor:Self 00000000 FFFFFFFE 00000000 )
  140:  Wait  5`
  14C:  Call  SetActorDispOffset    ( .Actor:Self 00000000 00000000 00000000 )
  168:  Call  SetAnimation      ( .Actor:Self 00000001 00260204 )
  180:  Call  EnemyTestTarget   ( .Actor:Self *Var0 ~Flags:DamageType:0 00000000 00000001 00000010 )
  1A4:  Switch  *Var0
  1B0:  	CaseOR  ==  .HitResult:Miss % 6
  1BC:  	CaseOR  ==  .HitResult:Lucky % 5
  1C8:  		Set   *VarA  *Var0
  1D8:  		Call  SetGoalToTarget   ( .Actor:Self )
  1E8:  		Call  GetGoalPos        ( .Actor:Self *Var0 *Var1 *Var2 )
  204:  		Sub   *Var0  0000000A
  214:  		Set   *Var1  0000000A
  224:  		Add   *Var2  00000003
  234:  		Call  SetGoalPos        ( .Actor:Self *Var0 *Var1 *Var2 )
  250:  		Call  SetActorJumpGravity   ( .Actor:Self *Fixed[1.2] )
  264:  		Thread
  26C:  			Call  GetActorPos   ( .Actor:Self *Var1 *Var2 *Var0 )
  288:  			Set   *Var0  00000000
  298:  			Loop  00000010
  2A4:  				Call  GetActorPos   ( .Actor:Self *Var4 *Var5 *Var6 )
  2C0:  				Call  $Function_802181E4    ( *Var1 *Var2 *Var4 *Var5 *Var0 )
  2E0:  				Call  SetActorRotation      ( .Actor:Self 00000000 00000000 *Var0 )
  2FC:  				Set   *Var1  *Var4
  30C:  				Set   *Var2  *Var5
  31C:  				Set   *Var3  *Var6
  32C:  				Wait  1`
  338:  			EndLoop
  340:  		EndThread
  348:  		Thread
  350:  			Wait  6`
  35C:  			Call  SetAnimation  ( .Actor:Self 00000001 00260204 )
  374:  		EndThread
  37C:  		Call  JumpToGoal    ( .Actor:Self  16` .False .True .False )
  39C:  		Call  SetAnimation  ( .Actor:Self 00000001 00260208 )
  3B4:  		Call  SetActorScale ( .Actor:Self *Fixed[1.1] *Fixed[0.8] *Fixed[1.0] )
  3D0:  		Call  SetActorDispOffset    ( .Actor:Self 00000000 00000005 00000000 )
  3EC:  		Wait  1`
  3F8:  		Call  SetActorScale ( .Actor:Self *Fixed[1.3] *Fixed[0.5] *Fixed[1.0] )
  414:  		Call  SetActorDispOffset    ( .Actor:Self 00000000 FFFFFFFE 00000000 )
  430:  		Wait  1`
  43C:  		Call  SetActorScale ( .Actor:Self *Fixed[1.0] *Fixed[1.0] *Fixed[1.0] )
  458:  		Call  SetActorDispOffset    ( .Actor:Self 00000000 00000007 00000000 )
  474:  		Call  SetAnimation  ( .Actor:Self 00000001 00260205 )
  48C:  		Wait  5`
  498:  		If  *VarA  ==  .HitResult:Lucky % 5
  4A8:  			Call  EnemyTestTarget   ( .Actor:Self *Var0 ~Flags:DamageType:TriggerLucky 00000000 00000000 00000000 )
  4CC:  		EndIf
  4D4:  		Wait  5`
  4E0:  		Call  SetActorDispOffset    ( .Actor:Self 00000000 00000000 00000000 )
  4FC:  		Call  SetAnimation      ( .Actor:Self 00000001 00260204 )
  514:  		Call  SetGoalToTarget   ( .Actor:Self )
  524:  		Call  GetGoalPos        ( .Actor:Self *Var0 *Var1 *Var2 )
  540:  		Add   *Var0  00000014
  550:  		Set   *Var1  00000000
  560:  		Call  SetGoalPos        ( .Actor:Self *Var0 *Var1 *Var2 )
  57C:  		Call  SetActorJumpGravity   ( .Actor:Self *Fixed[2.0] )
  590:  		Thread
  598:  			Wait  4`
  5A4:  			Set   *Var0  000000B4
  5B4:  			Loop  00000004
  5C0:  				Sub   *Var0  0000002D
  5D0:  				Call  SetActorRotation  ( .Actor:Self 00000000 00000000 *Var0 )
  5EC:  				Wait  1`
  5F8:  			EndLoop
  600:  			Call  SetAnimation  ( .Actor:Self 00000001 00260204 )
  618:  		EndThread
  620:  		Call  JumpToGoal        ( .Actor:Self  15` .False .True .False )
  640:  		Call  SetAnimation      ( .Actor:Self 00000001 00260207 )
  658:  		Wait  5`
  664:  		Call  UseBattleCamPreset    ( 00000002 )
  674:  		Call  YieldTurn ( )
  680:  		Call  SetActorYaw       ( .Actor:Self  180` )
  694:  		Call  AddActorDecoration    ( .Actor:Self 00000001 00000000 .Decoration:Sweat )
  6B0:  		Call  SetAnimationRate  ( .Actor:Self 00000001 *Fixed[2.0] )
  6C8:  		Call  SetGoalToHome     ( .Actor:Self )
  6D8:  		Call  SetActorSpeed     ( .Actor:Self *Fixed[8.0] )
  6EC:  		Call  RunToGoal ( .Actor:Self  0` .False )
  704:  		Call  SetAnimationRate  ( .Actor:Self 00000001 *Fixed[1.0] )
  71C:  		Call  SetActorYaw       ( .Actor:Self  0` )
  730:  		Wait  5`
  73C:  		Call  SetAnimation      ( .Actor:Self 00000001 00260201 )
  754:  		Call  SetActorJumpGravity   ( .Actor:Self *Fixed[1.6] )
  768:  		Call  JumpToGoal        ( .Actor:Self  5` .False .True .False )
  788:  		Call  RemoveActorDecoration ( .Actor:Self 00000001 00000000 )
  7A0:  		Call  EnableIdleScript  ( .Actor:Self 00000001 )
  7B4:  		Call  UseIdleAnimation  ( .Actor:Self .True )
  7C8:  		Return
  7D0:  	EndCaseGroup
  7D8:  	Default
  7E0:  		Call  SetGoalToTarget       ( .Actor:Self )
  7F0:  		Call  SetActorJumpGravity   ( .Actor:Self *Fixed[1.2] )
  804:  		Thread
  80C:  			Call  GetActorPos   ( .Actor:Self *Var1 *Var2 *Var0 )
  828:  			Set   *Var0  00000000
  838:  			Loop  00000010
  844:  				Call  GetActorPos   ( .Actor:Self *Var4 *Var5 *Var6 )
  860:  				Call  $Function_802181E4    ( *Var1 *Var2 *Var4 *Var5 *Var0 )
  880:  				Call  SetActorRotation      ( .Actor:Self 00000000 00000000 *Var0 )
  89C:  				Set   *Var1  *Var4
  8AC:  				Set   *Var2  *Var5
  8BC:  				Set   *Var3  *Var6
  8CC:  				Wait  1`
  8D8:  			EndLoop
  8E0:  		EndThread
  8E8:  		Thread
  8F0:  			Wait  6`
  8FC:  			Call  SetAnimation  ( .Actor:Self 00000001 00260204 )
  914:  		EndThread
  91C:  		Call  JumpToGoal    ( .Actor:Self  16` .False .True .False )
  93C:  		Call  SetAnimation  ( .Actor:Self 00000001 0026020B )
  954:  		Call  SetActorScale ( .Actor:Self *Fixed[1.1] *Fixed[0.8] *Fixed[1.0] )
  970:  		Wait  1`
  97C:  		Call  SetActorScale ( .Actor:Self *Fixed[1.3] *Fixed[0.5] *Fixed[1.0] )
  998:  		Wait  1`
  9A4:  EndSwitch
  9AC:  Call  EnemyDamageTarget ( .Actor:Self *Var0 ~Flags:DamageType:0 00000000 00000000 00000001 00000020 )
  9D4:  Switch  *Var0
  9E0:  	CaseOR  ==  .HitResult:Hit % 0
  9EC:  	CaseOR  ==  .HitResult:QuakeImmune % 2
  9F8:  		Call  UseBattleCamPreset    ( 00000002 )
  A08:  		Call  SetActorScale ( .Actor:Self *Fixed[1.1] *Fixed[0.8] *Fixed[1.0] )
  A24:  		Wait  1`
  A30:  		Call  SetActorScale ( .Actor:Self *Fixed[1.0] *Fixed[1.0] *Fixed[1.0] )
  A4C:  		Wait  1`
  A58:  		Call  SetActorRotation      ( .Actor:Self 00000000 00000000 00000000 )
  A74:  		Call  SetActorDispOffset    ( .Actor:Self 00000000 00000000 00000000 )
  A90:  		Call  SetAnimation  ( .Actor:Self 00000001 00260201 )
  AA8:  		Call  GetGoalPos    ( .Actor:Self *Var0 *Var1 *Var2 )
  AC4:  		Add   *Var0  00000028
  AD4:  		Set   *Var1  00000000
  AE4:  		Call  SetActorJumpGravity   ( .Actor:Self *Fixed[1.8] )
  AF8:  		Call  SetGoalPos    ( .Actor:Self *Var0 *Var1 *Var2 )
  B14:  		Call  JumpToGoal    ( .Actor:Self  10` .False .True .False )
  B34:  		Add   *Var0  0000001E
  B44:  		Call  SetGoalPos    ( .Actor:Self *Var0 *Var1 *Var2 )
  B60:  		Call  JumpToGoal    ( .Actor:Self  8` .False .True .False )
  B80:  		Add   *Var0  00000014
  B90:  		Call  SetGoalPos    ( .Actor:Self *Var0 *Var1 *Var2 )
  BAC:  		Call  JumpToGoal    ( .Actor:Self  6` .False .True .False )
  BCC:  		Call  SetAnimation  ( .Actor:Self 00000001 00260201 )
  BE4:  		Wait  3`
  BF0:  		Call  YieldTurn ( )
  BFC:  		Call  SetAnimationRate      ( .Actor:Self 00000001 *Fixed[2.0] )
  C14:  		Call  SetAnimation  ( .Actor:Self 00000001 00260203 )
  C2C:  		Call  SetGoalToHome ( .Actor:Self )
  C3C:  		Call  SetActorSpeed ( .Actor:Self *Fixed[8.0] )
  C50:  		Call  RunToGoal     ( .Actor:Self  0` .False )
  C68:  		Call  SetAnimationRate      ( .Actor:Self 00000001 *Fixed[1.0] )
  C80:  	EndCaseGroup
  C88:  EndSwitch
  C90:  Call  EnableIdleScript  ( .Actor:Self 00000001 )
  CA4:  Call  UseIdleAnimation  ( .Actor:Self .True )
  CB8:  Return
  CC0:  End
}

#new:DefenseTable $DefenseTable_8021B2F0
{
	.Element:Normal 00000000
	.Element:End
}

#new:DefenseTable $DefenseTable_8021B2FC
{
	.Element:Normal 00000000
	.Element:End
}

#new:StatusTable $StatusTable_8021B308
{
	.Status:Normal      0`
	.Status:Default     0`
	.Status:Sleep      80`
	.Status:Poison    100`
	.Status:Frozen      0`
	.Status:Dizzy      80`
	.Status:Fear      100`
	.Status:Static    100`
	.Status:Paralyze  100`
	.Status:Shrink     80`
	.Status:Stop       90`
	.Status:DefaultTurnMod    0`
	.Status:SleepTurnMod      0`
	.Status:PoisonTurnMod     0`
	.Status:FrozenTurnMod     0`
	.Status:DizzyTurnMod      0`
	.Status:FearTurnMod       0`
	.Status:StaticTurnMod     0`
	.Status:ParalyzeTurnMod   0`
	.Status:ShrinkTurnMod     0`
	.Status:StopTurnMod       0`
	.Status:End
}

#new:StatusTable $StatusTable_8021B3B4
{
	.Status:Normal      0`
	.Status:Default     0`
	.Status:Sleep      80`
	.Status:Poison     80`
	.Status:Frozen      0`
	.Status:Dizzy      90`
	.Status:Fear        0`
	.Status:Static     80`
	.Status:Paralyze  100`
	.Status:Shrink     80`
	.Status:Stop       90`
	.Status:DefaultTurnMod    0`
	.Status:SleepTurnMod      0`
	.Status:PoisonTurnMod     0`
	.Status:FrozenTurnMod     0`
	.Status:DizzyTurnMod      1`
	.Status:FearTurnMod       0`
	.Status:StaticTurnMod     0`
	.Status:ParalyzeTurnMod   0`
	.Status:ShrinkTurnMod     0`
	.Status:StopTurnMod       0`
	.Status:End
}

#new:PartsTable $PartsTable_8021B460
{
	00020001 01000000 001600FF $IdleAnimations_8021F05C $DefenseTable_8021B2F0 00000000 00000000 00F60000 00000000
	00800000 02000000 001800FF $IdleAnimations_8021C594 $DefenseTable_8021B2FC 00004000 00000000 00F60000 00000000
	00020001 03000000 F01800FF $IdleAnimations_8021C62C $DefenseTable_8021B2F0 00000000 00000000 00F60000 00000000
	00020001 04000000 F01800FF $IdleAnimations_8021C638 $DefenseTable_8021B2F0 00000000 00000000 00F60000 00000000
}

#new:Actor $HyperParagoomba
{
	% stats
	[Index]        1Cb
	[Level]        12`b
	[MaxHP]         7`b
	[Coins]         1`b
	[Flags]       00000200
	[StatusTable] $StatusTable_8021B3B4
	% ai
	[PartsCount]    4`s
	[PartsTable]  $PartsTable_8021B460
	[Script]      $Script_Init_8021B564
	% move effectiveness
	[Escape]       50`b
	[Item]         80`b
	[AirLift]      95`b
	[Hurricane]    95`b % Bow's "Spook" as well
	[UpAndAway]    95`b
	[PowerBounce]  90`b
	[SpinSmash]     0`b % weight (0-4)
	% ui positions
	[Size]         36`b  26`b % width height
	[HealthBar]     0`b   0`b % dx dy
	[StatusTurn]  -10`b  20`b % dx dy
	[StatusIcon]   10`b  20`b % dx dy
}

#new:IdleAnimations $IdleAnimations_8021B518
{
	.Status:Normal    00280202
	.Status:Stone     00280200
	.Status:Sleep     0028020B
	.Status:Poison    00280202
	.Status:Stop      00280200
	.Status:Static    00280202
	.Status:Paralyze  00280200
	.Status:Dizzy     0028020C
	.Status:Fear      0028020C
	.Status:End
}

#new:Script $Script_Init_8021B564
{
    0:  Call  BindIdle      ( .Actor:Self $Script_Idle_8021C690 )
   14:  Call  BindHandleEvent   ( .Actor:Self $Script_HandleEvent_8021C9C4 )
   28:  Call  BindNextTurn  ( .Actor:Self $Script_NextTurn_8021B5F4 )
   3C:  Call  BindTakeTurn  ( .Actor:Self $Script_TakeTurn_8021C36C )
   50:  Call  SetActorVar   ( .Actor:Self 00000000 00000000 )
   68:  Call  SetActorVar   ( .Actor:Self 00000001 00000000 )
   80:  Return
   88:  End
}

#new:Script $Script_NextTurn_8021B5F4
{
    0:  Call  GetBattlePhase    ( *Var0 )
   10:  Switch  *Var0
   1C:  	Case  ==  0000000A
   28:  	Case  ==  0000000C
   34:  	Case  ==  0000000B
   40:  		Call  SetBattleVar  ( 00000001 00000000 )
   54:  		Call  SetActorVar   ( .Actor:Self 00000001 00000001 )
   6C:  EndSwitch
   74:  Return
   7C:  End
}

#new:Script $Script_8021B678
{
    0:  Call  UseIdleAnimation  ( .Actor:Self .False )
   14:  Call  EnableIdleScript  ( .Actor:Self 00000000 )
   28:  Call  SetTargetActor    ( .Actor:Self .Actor:Player )
   3C:  Call  GetActorVar       ( .Actor:Self 00000000 *Var0 )
   54:  If  *Var0  ==  00000000
   64:  	Call  UseBattleCamPreset    ( 0000000E )
   74:  	Call  BattleCamTargetActor  ( .Actor:Self )
   84:  	Call  MoveBattleCamOver (  20` )
   94:  	Wait  20`
   A0:  	Call  PlaySoundAtActor  ( .Actor:Self .Sound:PowerUp )
   B4:  	Call  GetActorPos       ( .Actor:Self *Var0 *Var1 *Var2 )
   D0:  	Add   *Var1  0000000A
   E0:  	Call  PlayEffect        ( ~FX:EnergyIn:LongStreaks1 *Var0 *Var1 *Var2 *Fixed[1.0] 0000002D 00000000 00000000 00000000 00000000 00000000 00000000 00000000 )
  124:  	Call  SetAnimation      ( .Actor:Self 00000002 00280202 )
  13C:  	Wait  30`
  148:  	Call  UseBattleCamPreset    ( 00000002 )
  158:  	Call  MoveBattleCamOver (  20` )
  168:  	Call  GetActorPos       ( .Actor:Self *Var0 *Var1 *Var2 )
  184:  	Call  SetActorJumpGravity   ( .Actor:Self *Fixed[1.0] )
  198:  	Call  SetGoalPos        ( .Actor:Self *Var0 *Var1 *Var2 )
  1B4:  	Call  JumpToGoal        ( .Actor:Self  20` .False .False .False )
  1D4:  	Call  SetActorVar       ( .Actor:Self 00000000 00000001 )
  1EC:  	Call  SetIdleAnimations ( .Actor:Self 00000002 $IdleAnimations_8021B518 )
  204:  	Call  EnableActorGlow   ( .Actor:Self .True )
  218:  	Call  SetPartEventBits  ( .Actor:Self 00000002 00400000 .True )
  234:  	Call  EnableIdleScript  ( .Actor:Self 00000001 )
  248:  	Call  UseIdleAnimation  ( .Actor:Self .True )
  25C:  	Return
  264:  EndIf
  26C:  Call  UseBattleCamPreset    ( 0000003F )
  27C:  Call  BattleCamTargetActor  ( .Actor:Self )
  28C:  Call  8024ECF8  ( FFFFFFFF 00000001 00000000 )
  2A4:  Call  MoveBattleCamOver     (  30` )
  2B4:  Loop  00000014
  2C0:  	Call  SetActorDispOffset    ( .Actor:Self 00000001 00000000 00000000 )
  2DC:  	Wait  1`
  2E8:  	Call  SetActorDispOffset    ( .Actor:Self FFFFFFFF 00000000 00000000 )
  304:  	Wait  1`
  310:  EndLoop
  318:  Call  SetActorDispOffset    ( .Actor:Self 00000000 00000000 00000000 )
  334:  Call  PlaySoundAtActor  ( .Actor:Self 000020E0 )
  348:  Call  SetActorSounds    ( .Actor:Self .ActorSound:Jump 00000000 00000000 )
  364:  Call  SetActorSpeed     ( .Actor:Self *Fixed[5.0] )
  378:  Call  SetActorJumpGravity   ( .Actor:Self *Fixed[0.8] )
  38C:  Call  GetActorPos       ( .Actor:Self *Var0 *Var1 *Var2 )
  3A8:  Add   *Var1  00000014
  3B8:  Call  SetGoalPos        ( .Actor:Self *Var0 *Var1 *Var2 )
  3D4:  Call  JumpToGoal        ( .Actor:Self  10` .False .False .False )
  3F4:  Call  PlaySoundAtActor  ( .Actor:Self 000002C1 )
  408:  Call  SetActorSounds    ( .Actor:Self .ActorSound:Jump 00000000 00000000 )
  424:  Call  EnemyTestTarget   ( .Actor:Self *Var0 ~Flags:DamageType:0 00000000 00000001 00000010 )
  448:  Switch  *Var0
  454:  	CaseOR  ==  .HitResult:Miss % 6
  460:  	CaseOR  ==  .HitResult:Lucky % 5
  46C:  		Set   *VarA  *Var0
  47C:  		Call  SetActorRotationOffset    ( .Actor:Self 00000000 00000010 00000000 )
  498:  		Call  SetActorRotation  ( .Actor:Self 00000000 00000000 FFFFFFC4 )
  4B4:  		Thread
  4BC:  			Set   *Var0  FFFFFFC4
  4CC:  			Loop  0000003C
  4D8:  				Add   *Var0  00000013
  4E8:  				Call  SetActorRotation  ( .Actor:Self 00000000 00000000 *Var0 )
  504:  				Wait  1`
  510:  			EndLoop
  518:  		EndThread
  520:  		Call  SetGoalToTarget   ( .Actor:Self )
  530:  		Call  GetGoalPos        ( .Actor:Self *Var0 *Var1 *Var2 )
  54C:  		Set   *Var1  00000000
  55C:  		Call  SetGoalPos        ( .Actor:Self *Var0 *Var1 *Var2 )
  578:  		Call  SetActorJumpGravity   ( .Actor:Self *Fixed[0.01] )
  58C:  		Call  SetActorSpeed     ( .Actor:Self *Fixed[15.0] )
  5A0:  		Call  JumpToGoal        ( .Actor:Self  0` .False .False .False )
  5C0:  		Call  UseBattleCamPreset    ( 00000001 )
  5D0:  		Call  ResetAllActorSounds   ( .Actor:Self )
  5E0:  		Call  AddGoalPos        ( .Actor:Self  -60`  0`  0` )
  5FC:  		Call  SetActorJumpGravity   ( .Actor:Self *Fixed[1.3] )
  610:  		Call  JumpToGoal        ( .Actor:Self  15` .False .True .False )
  630:  		If  *VarA  ==  .HitResult:Lucky % 5
  640:  			Call  EnemyTestTarget   ( .Actor:Self *Var0 ~Flags:DamageType:TriggerLucky 00000000 00000000 00000000 )
  664:  		EndIf
  66C:  		Call  SetActorSpeed     ( .Actor:Self *Fixed[6.0] )
  680:  		Call  AddGoalPos        ( .Actor:Self  -200`  0`  0` )
  69C:  		Call  RunToGoal ( .Actor:Self  0` .False )
  6B4:  		Wait  20`
  6C0:  		Call  UseBattleCamPreset    ( 00000002 )
  6D0:  		Call  YieldTurn ( )
  6DC:  		Call  EnableActorGlow   ( .Actor:Self .False )
  6F0:  		Call  SetPartEventBits  ( .Actor:Self 00000002 00400000 .False )
  70C:  		Thread
  714:  			Set   *Var0  00000000
  724:  			Loop  0000001E
  730:  				Add   *Var0  00000018
  740:  				Call  SetActorRotation  ( .Actor:Self 00000000 00000000 *Var0 )
  75C:  				Wait  1`
  768:  			EndLoop
  770:  			Call  SetActorRotationOffset    ( .Actor:Self 00000000 00000000 00000000 )
  78C:  			Call  SetActorRotation  ( .Actor:Self 00000000 00000000 00000000 )
  7A8:  		EndThread
  7B0:  		Call  SetActorPos   ( .Actor:Self  300`  0`  0` )
  7CC:  		Call  SetGoalToHome ( .Actor:Self )
  7DC:  		Call  SetActorSpeed ( .Actor:Self *Fixed[8.0] )
  7F0:  		Call  AddGoalPos    ( .Actor:Self  30`  0`  0` )
  80C:  		Call  RunToGoal     ( .Actor:Self  0` .False )
  824:  		Call  AddActorDecoration    ( .Actor:Self 00000002 00000000 .Decoration:Sweat )
  840:  		Call  ResetAllActorSounds   ( .Actor:Self )
  850:  		Call  SetAnimation  ( .Actor:Self 00000002 00280204 )
  868:  		Call  SetGoalToHome ( .Actor:Self )
  878:  		Call  SetActorSpeed ( .Actor:Self *Fixed[6.0] )
  88C:  		Call  FlyToGoal     ( .Actor:Self  0`  1` .Easing:SinOut )
  8A8:  		Call  SetAnimation  ( .Actor:Self 00000002 00280201 )
  8C0:  		Call  RemoveActorDecoration ( .Actor:Self 00000002 00000000 )
  8D8:  		Call  SetActorVar   ( .Actor:Self 00000000 00000000 )
  8F0:  		Call  SetIdleAnimations     ( .Actor:Self 00000002 $IdleAnimations_8021C594 )
  908:  		Call  EnableIdleScript      ( .Actor:Self 00000001 )
  91C:  		Call  UseIdleAnimation      ( .Actor:Self .True )
  930:  		Return
  938:  	EndCaseGroup
  940:  EndSwitch
  948:  Call  SetActorRotationOffset    ( .Actor:Self 00000000 0000000C 00000000 )
  964:  Call  SetActorRotation  ( .Actor:Self 00000000 00000000 FFFFFFBA )
  980:  Call  SetGoalToTarget   ( .Actor:Self )
  990:  Call  SetActorJumpGravity       ( .Actor:Self *Fixed[0.01] )
  9A4:  Call  SetActorSpeed     ( .Actor:Self *Fixed[15.0] )
  9B8:  Call  JumpToGoal        ( .Actor:Self  0` .False .False .False )
  9D8:  Wait  2`
  9E4:  Call  EnemyDamageTarget ( .Actor:Self *Var0 ~Flags:DamageType:0 00000000 00000000 00000008 00000020 )
  A0C:  Switch  *Var0
  A18:  	CaseOR  ==  .HitResult:Hit % 0
  A24:  	CaseOR  ==  .HitResult:QuakeImmune % 2
  A30:  		Call  UseBattleCamPreset    ( 00000002 )
  A40:  		Call  ResetAllActorSounds   ( .Actor:Self )
  A50:  		Thread
  A58:  			Call  SetActorRotationOffset    ( .Actor:Self 00000000 00000010 00000000 )
  A74:  			Set   *Var0  FFFFFFBA
  A84:  			Loop  0000003C
  A90:  				Add   *Var0  00000012
  AA0:  				Call  SetActorRotation  ( .Actor:Self 00000000 00000000 *Var0 )
  ABC:  				Wait  1`
  AC8:  			EndLoop
  AD0:  			Call  SetActorRotationOffset    ( .Actor:Self 00000000 00000000 00000000 )
  AEC:  			Call  SetActorRotation  ( .Actor:Self 00000000 00000000 00000000 )
  B08:  		EndThread
  B10:  		Call  SetActorJumpGravity   ( .Actor:Self *Fixed[0.8] )
  B24:  		Call  GetActorPos   ( .Actor:Self *Var0 *Var1 *Var2 )
  B40:  		Set   *Var1  00000000
  B50:  		Sub   *Var0  00000046
  B60:  		Call  SetGoalPos    ( .Actor:Self *Var0 *Var1 *Var2 )
  B7C:  		Call  JumpToGoal    ( .Actor:Self  20` .False .False .False )
  B9C:  		Sub   *Var0  0000003C
  BAC:  		Call  SetGoalPos    ( .Actor:Self *Var0 *Var1 *Var2 )
  BC8:  		Call  JumpToGoal    ( .Actor:Self  15` .False .False .False )
  BE8:  		Wait  20`
  BF4:  		Call  YieldTurn ( )
  C00:  		Call  EnableActorGlow   ( .Actor:Self .False )
  C14:  		Call  SetPartEventBits  ( .Actor:Self 00000002 00400000 .False )
  C30:  		Call  SetActorYaw   ( .Actor:Self  180` )
  C44:  		Call  SetAnimation  ( .Actor:Self 00000002 00280204 )
  C5C:  		ExecWait  $Script_8021C94C
  C68:  		Call  SetActorYaw   ( .Actor:Self  0` )
  C7C:  		Call  SetActorVar   ( .Actor:Self 00000000 00000000 )
  C94:  		Call  SetIdleAnimations ( .Actor:Self 00000002 $IdleAnimations_8021C594 )
  CAC:  	EndCaseGroup
  CB4:  EndSwitch
  CBC:  Call  EnableIdleScript  ( .Actor:Self FFFFFFFF )
  CD0:  Call  UseIdleAnimation  ( .Actor:Self .True )
  CE4:  Return
  CEC:  End
}

#new:Script $Script_TakeTurn_8021C36C
{
    0:  Call  GetBattlePhase    ( *Var0 )
   10:  If  *Var0  ==  00000001
   20:  	Call  SetBattleVar  ( 00000001 00000001 )
   34:  	ExecWait  $Script_TakeTurn_8021D1DC
   40:  	Return
   48:  EndIf
   50:  Call  GetActorVar   ( .Actor:Self 00000000 *Var0 )
   68:  If  *Var0  ==  00000001
   78:  	ExecWait  $Script_8021B678
   84:  	Return
   8C:  EndIf
   94:  Call  GetBattleVar  ( 00000001 *Var0 )
   A8:  Switch  *Var0
   B4:  	Case  ==  00000000
   C0:  		Call  GetActorVar   ( .Actor:Self 00000001 *Var0 )
   D8:  		If  *Var0  ==  00000000
   E8:  			Call  RandInt   ( 000003E8 *Var0 )
   FC:  			If  *Var0  <  000002EE
  10C:  				Call  SetBattleVar  ( 00000001 00000002 )
  120:  				ExecWait  $Script_8021B678
  12C:  			Else
  134:  				Call  SetBattleVar  ( 00000001 00000001 )
  148:  				ExecWait  $Script_TakeTurn_8021D1DC
  154:  			EndIf
  15C:  		Else
  164:  			Call  RandInt   ( 000003E8 *Var0 )
  178:  			If  *Var0  <  000001F4
  188:  				Call  SetBattleVar  ( 00000001 00000002 )
  19C:  				ExecWait  $Script_8021B678
  1A8:  			Else
  1B0:  				Call  SetBattleVar  ( 00000001 00000001 )
  1C4:  				ExecWait  $Script_TakeTurn_8021D1DC
  1D0:  			EndIf
  1D8:  		EndIf
  1E0:  	Case  ==  00000001
  1EC:  		ExecWait  $Script_TakeTurn_8021D1DC
  1F8:  	Case  ==  00000002
  204:  		ExecWait  $Script_8021B678
  210:  EndSwitch
  218:  Return
  220:  End
}

#new:IdleAnimations $IdleAnimations_8021C594
{
	.Status:Normal    00280201
	.Status:Stone     00280200
	.Status:Sleep     0028020B
	.Status:Poison    00280201
	.Status:Stop      00280200
	.Status:Static    00280201
	.Status:Paralyze  00280200
	.Status:Dizzy     0028020C
	.Status:Fear      0028020C
	.Status:End
}

#new:IdleAnimations $IdleAnimations_8021C5E0
{
	.Status:Normal    00280204
	.Status:Stone     00280200
	.Status:Sleep     0028020B
	.Status:Poison    00280201
	.Status:Stop      00280200
	.Status:Static    00280204
	.Status:Paralyze  00280200
	.Status:Dizzy     0028020C
	.Status:Fear      0028020C
	.Status:End
}

#new:IdleAnimations $IdleAnimations_8021C62C
{
	.Status:Normal    00280209
	.Status:End
}

#new:IdleAnimations $IdleAnimations_8021C638
{
	.Status:Normal    0028020A
	.Status:End
}

% Origin: HEURISTIC
#new:Script $Script_8021C644
{
    0:  Call  BindTakeTurn      ( .Actor:Self $Script_TakeTurn_8021D1DC )
   14:  Call  BindIdle  ( .Actor:Self $Script_Idle_8021C690 )
   28:  Call  BindHandleEvent   ( .Actor:Self $Script_HandleEvent_8021C9C4 )
   3C:  Return
   44:  End
}

#new:Script $Script_Idle_8021C690
{
    0:  Label  A
    C:  Call  RandInt   ( 00000050 *Var0 )
   20:  Add   *Var0  00000050
   30:  Loop  *Var0
   3C:  	Label  0
   48:  	Call  GetStatusFlags    ( .Actor:Self *Var1 )
   5C:  	If  *Var1  &  ~Flags:StatusFlags:Sleep|Frozen|Fear|Paralyze|Dizzy|Stone|Stop % 35D000
   6C:  		Wait  1`
   78:  		Goto  0
   84:  	EndIf
   8C:  	Wait  1`
   98:  EndLoop
   A0:  Call  GetActorPos       ( .Actor:Self *Var0 *Var1 *Var2 )
   BC:  Add   *Var0  00000005
   CC:  Call  SetActorIdleSpeed ( .Actor:Self *Fixed[0.6] )
   E0:  Call  SetIdleAnimations ( .Actor:Self 00000002 $IdleAnimations_8021C5E0 )
   F8:  Call  SetIdleGoal       ( .Actor:Self *Var0 *Var1 *Var2 )
  114:  Call  IdleFlyToGoal     ( .Actor:Self  0`  -5` .Easing:Linear )
  130:  Loop  00000014
  13C:  	Label  1
  148:  	Call  GetStatusFlags    ( .Actor:Self *Var1 )
  15C:  	If  *Var1  &  ~Flags:StatusFlags:Sleep|Frozen|Fear|Paralyze|Dizzy|Stone|Stop % 35D000
  16C:  		Wait  1`
  178:  		Goto  1
  184:  	EndIf
  18C:  	Wait  1`
  198:  EndLoop
  1A0:  Call  GetActorPos       ( .Actor:Self *Var0 *Var1 *Var2 )
  1BC:  Sub   *Var0  00000005
  1CC:  Call  SetActorIdleSpeed ( .Actor:Self *Fixed[0.6] )
  1E0:  Call  SetIdleGoal       ( .Actor:Self *Var0 *Var1 *Var2 )
  1FC:  Call  IdleFlyToGoal     ( .Actor:Self  0`  -5` .Easing:Linear )
  218:  Call  SetIdleAnimations ( .Actor:Self 00000002 $IdleAnimations_8021C594 )
  230:  Loop  00000028
  23C:  	Label  2
  248:  	Call  GetStatusFlags    ( .Actor:Self *Var1 )
  25C:  	If  *Var1  &  ~Flags:StatusFlags:Sleep|Frozen|Fear|Paralyze|Dizzy|Stone|Stop % 35D000
  26C:  		Wait  1`
  278:  		Goto  2
  284:  	EndIf
  28C:  	Wait  1`
  298:  EndLoop
  2A0:  Goto  A
  2AC:  Return
  2B4:  End
}

#new:Script $Script_8021C94C
{
    0:  Call  ResetAllActorSounds   ( .Actor:Self )
   10:  Call  SetGoalToHome ( .Actor:Self )
   20:  Call  SetActorSpeed ( .Actor:Self *Fixed[7.0] )
   34:  Call  FlyToGoal     ( .Actor:Self  0`  1` .Easing:SinOut )
   50:  Call  SetAnimation  ( .Actor:Self 00000002 00280201 )
   68:  Return
   70:  End
}

#new:Script $Script_HandleEvent_8021C9C4
{
    0:  Call  UseIdleAnimation  ( .Actor:Self .False )
   14:  Call  EnableIdleScript  ( .Actor:Self 00000000 )
   28:  Call  GetLastEvent      ( .Actor:Self *Var0 )
   3C:  Switch  *Var0
   48:  	CaseOR  ==  .Event:HitCombo % 9
   54:  	CaseOR  ==  .Event:Hit % A
   60:  		SetConst  *Var0  00000002
   70:  		SetConst  *Var1  00280206
   80:  		ExecWait  DoNormalHit
   8C:  		Call  GetBattlePhase    ( *Var0 )
   9C:  		If  *Var0  ==  00000001
   AC:  			Call  GetEncounterState ( *Var0 )
   BC:  			If  *Var0  ==  00000004
   CC:  				ExecWait  $Script_8021D9F4
   D8:  			EndIf
   E0:  		EndIf
   E8:  	EndCaseGroup
   F0:  	Case  ==  .Event:BurnHit % E
   FC:  		SetConst  *Var0  00000002
  10C:  		SetConst  *Var1  0028020D
  11C:  		SetConst  *Var2  0028020E
  12C:  		ExecWait  DoBurnHit
  138:  	Case  ==  .Event:BurnDeath % 24
  144:  		SetConst  *Var0  00000002
  154:  		SetConst  *Var1  0028020D
  164:  		SetConst  *Var2  0028020E
  174:  		ExecWait  DoBurnHit
  180:  		SetConst  *Var0  00000002
  190:  		SetConst  *Var1  0028020E
  1A0:  		ExecWait  DoDeath
  1AC:  		Return
  1B4:  	Case  ==  .Event:FallTrigger % C
  1C0:  		SetConst  *Var0  00000002
  1D0:  		SetConst  *Var1  00280206
  1E0:  		ExecWait  DoNormalHit
  1EC:  		ExecWait  $Script_8021D9F4
  1F8:  	Case  ==  0000000F % F
  204:  		SetConst  *Var0  00000002
  214:  		SetConst  *Var1  0028020D
  224:  		SetConst  *Var2  0028020E
  234:  		ExecWait  DoBurnHit
  240:  		ExecWait  $Script_8021D9F4
  24C:  	Case  ==  .Event:ShockHit % 2F
  258:  		Call  SetActorRotationOffset    ( .Actor:Self 00000000 00000000 00000000 )
  274:  		Call  SetActorRotation  ( .Actor:Self 00000000 00000000 00000000 )
  290:  		Call  EnableActorGlow   ( .Actor:Self .False )
  2A4:  		Call  SetPartEventBits  ( .Actor:Self 00000002 00400000 .False )
  2C0:  		Call  SetActorVar       ( .Actor:Self 00000000 00000000 )
  2D8:  		Call  SetIdleAnimations ( .Actor:Self 00000002 $IdleAnimations_8021C594 )
  2F0:  		SetConst  *Var0  00000002
  300:  		SetConst  *Var1  0028020F
  310:  		ExecWait  DoShockHit
  31C:  		SetConst  *Var0  00000002
  32C:  		SetConst  *Var1  00280206
  33C:  		ExecWait  DoJumpBack
  348:  		Call  SetAnimation      ( .Actor:Self 00000002 0028020C )
  360:  		ExecWait  $Script_8021C94C
  36C:  	Case  ==  .Event:ShockDeath % 26
  378:  		Call  SetActorRotationOffset    ( .Actor:Self 00000000 00000000 00000000 )
  394:  		Call  SetActorRotation  ( .Actor:Self 00000000 00000000 00000000 )
  3B0:  		Call  EnableActorGlow   ( .Actor:Self .False )
  3C4:  		Call  SetPartEventBits  ( .Actor:Self 00000002 00400000 .False )
  3E0:  		Call  SetActorVar       ( .Actor:Self 00000000 00000000 )
  3F8:  		Call  SetIdleAnimations ( .Actor:Self 00000002 $IdleAnimations_8021C594 )
  410:  		SetConst  *Var0  00000002
  420:  		SetConst  *Var1  0028020F
  430:  		ExecWait  DoShockHit
  43C:  		SetConst  *Var0  00000002
  44C:  		SetConst  *Var1  00280207
  45C:  		ExecWait  DoDeath
  468:  		Return
  470:  	Case  ==  .Event:StarBeam % 13
  47C:  		Call  GetActorVar   ( .Actor:Self 00000000 *Var0 )
  494:  		If  *Var0  ==  00000001
  4A4:  			Call  SetActorRotationOffset    ( .Actor:Self 00000000 00000000 00000000 )
  4C0:  			Call  SetActorRotation  ( .Actor:Self 00000000 00000000 00000000 )
  4DC:  			Call  EnableActorGlow   ( .Actor:Self .False )
  4F0:  			Call  SetPartEventBits  ( .Actor:Self 00000002 00400000 .False )
  50C:  			Call  SetActorVar       ( .Actor:Self 00000000 00000000 )
  524:  			Call  SetIdleAnimations ( .Actor:Self 00000002 $IdleAnimations_8021C594 )
  53C:  		EndIf
  544:  		SetConst  *Var0  00000002
  554:  		SetConst  *Var1  00280201
  564:  		ExecWait  DoImmune
  570:  	CaseOR  ==  00000017 % 17
  57C:  	CaseOR  ==  .Event:Immune % 19
  588:  	CaseOR  ==  .Event:AirLiftFailed % 1F
  594:  		SetConst  *Var0  00000002
  5A4:  		SetConst  *Var1  00280201
  5B4:  		ExecWait  DoImmune
  5C0:  	EndCaseGroup
  5C8:  	Case  ==  .Event:Death % 20
  5D4:  		SetConst  *Var0  00000002
  5E4:  		SetConst  *Var1  00280206
  5F4:  		ExecWait  DoNormalHit
  600:  		Wait  10`
  60C:  		SetConst  *Var0  00000002
  61C:  		SetConst  *Var1  00280207
  62C:  		ExecWait  DoDeath
  638:  		Return
  640:  	Case  ==  .Event:BeginFirstStrike % 38
  64C:  		Call  SetActorPos       ( .Actor:Self  20`  0`  0` )
  668:  		Call  HPBarToCurrent    ( .Actor:Self )
  678:  	Case  ==  .Event:EndFirstStrike % 35
  684:  		Call  SetAnimation  ( .Actor:Self 00000002 00280204 )
  69C:  		ExecWait  $Script_8021C94C
  6A8:  		Call  HPBarToHome   ( .Actor:Self )
  6B8:  	Case  ==  .Event:RecoverStatus % 31
  6C4:  		SetConst  *Var0  00000002
  6D4:  		SetConst  *Var1  00280201
  6E4:  		ExecWait  DoRecover
  6F0:  	Case  ==  .Event:ScareAway % 39
  6FC:  		Call  SetActorFlagBits  ( .Actor:Self 00000200 .False )
  714:  		SetConst  *Var0  00000002
  724:  		SetConst  *Var1  00280204
  734:  		SetConst  *Var2  00280206
  744:  		ExecWait  DoScareAway
  750:  		Return
  758:  	Case  ==  .Event:BeginAirLift % 3A
  764:  		SetConst  *Var0  00000002
  774:  		SetConst  *Var1  00280204
  784:  		ExecWait  DoAirLift
  790:  	Case  ==  .Event:BlowAway % 16
  79C:  		SetConst  *Var0  00000002
  7AC:  		SetConst  *Var1  00280206
  7BC:  		ExecWait  DoBlowAway
  7C8:  		Return
  7D0:  	Default
  7D8:  EndSwitch
  7E0:  Call  EnableIdleScript  ( .Actor:Self FFFFFFFF )
  7F4:  Call  UseIdleAnimation  ( .Actor:Self .True )
  808:  Return
  810:  End
}

#new:Script $Script_TakeTurn_8021D1DC
{
    0:  Call  UseIdleAnimation  ( .Actor:Self .False )
   14:  Call  EnableIdleScript  ( .Actor:Self 00000000 )
   28:  Call  SetTargetActor    ( .Actor:Self .Actor:Player )
   3C:  Call  SetGoalToTarget   ( .Actor:Self )
   4C:  Call  UseBattleCamPreset    ( 0000003F )
   5C:  Call  BattleCamTargetActor  ( .Actor:Self )
   6C:  Call  8024ECF8  ( FFFFFFFF 00000001 00000000 )
   84:  Call  SetAnimation      ( .Actor:Self 00000002 00280204 )
   9C:  Call  SetGoalToTarget   ( .Actor:Self )
   AC:  Call  AddGoalPos        ( .Actor:Self  50`  0`  0` )
   C8:  Call  SetActorSpeed     ( .Actor:Self *Fixed[6.0] )
   DC:  Call  FlyToGoal ( .Actor:Self  0`  -4` .Easing:Linear )
   F8:  Call  EnemyTestTarget   ( .Actor:Self *Var0 ~Flags:DamageType:0 00000000 00000001 00000010 )
  11C:  Switch  *Var0
  128:  	CaseOR  ==  .HitResult:Miss % 6
  134:  	CaseOR  ==  .HitResult:Lucky % 5
  140:  		Set   *VarA  *Var0
  150:  		Wait  10`
  15C:  		Call  UseBattleCamPreset    ( 00000042 )
  16C:  		Call  SetBattleCamZoom  (  300` )
  17C:  		Call  BattleCamTargetActor  ( .Actor:Self )
  18C:  		Call  8024ECF8  ( FFFFFFFF 00000001 00000000 )
  1A4:  		Call  PlaySoundAtActor  ( .Actor:Self 000020E0 )
  1B8:  		Call  SetActorSounds    ( .Actor:Self .ActorSound:Jump 00000000 00000000 )
  1D4:  		Call  SetActorSpeed     ( .Actor:Self *Fixed[5.0] )
  1E8:  		Call  SetActorJumpGravity   ( .Actor:Self *Fixed[1.8] )
  1FC:  		Call  SetAnimation      ( .Actor:Self 00000002 00280205 )
  214:  		Call  GetActorPos       ( .Actor:Self *Var0 *Var1 *Var2 )
  230:  		Call  SetGoalPos        ( .Actor:Self *Var0 *Var1 *Var2 )
  24C:  		Call  JumpToGoal        ( .Actor:Self  10` .False .False .False )
  26C:  		Call  PlaySoundAtActor  ( .Actor:Self 000002C1 )
  280:  		Call  SetActorSounds    ( .Actor:Self .ActorSound:Fly 00000000 00000000 )
  29C:  		Call  SetGoalToTarget   ( .Actor:Self )
  2AC:  		Sub   *Var0  00000050
  2BC:  		Set   *Var1  00000014
  2CC:  		Call  SetGoalPos        ( .Actor:Self *Var0 *Var1 *Var2 )
  2E8:  		Call  SetActorSpeed     ( .Actor:Self *Fixed[8.0] )
  2FC:  		Call  SetAnimation      ( .Actor:Self 00000002 00280205 )
  314:  		Call  FlyToGoal ( .Actor:Self  0`  -10` .Easing:QuadraticOut )
  330:  		Thread
  338:  			Loop  00000004
  344:  				Call  PlaySoundAtActor  ( .Actor:Self 000020DF )
  358:  				Wait  4`
  364:  			EndLoop
  36C:  		EndThread
  374:  		Call  SetAnimation  ( .Actor:Self 00000002 00280202 )
  38C:  		Call  AddActorDecoration    ( .Actor:Self 00000002 00000000 .Decoration:Sweat )
  3A8:  		Call  SetAnimationRate      ( .Actor:Self 00000002 *Fixed[3.0] )
  3C0:  		Wait  10`
  3CC:  		If  *VarA  ==  .HitResult:Lucky % 5
  3DC:  			Call  EnemyTestTarget   ( .Actor:Self *Var0 ~Flags:DamageType:TriggerLucky 00000000 00000000 00000000 )
  400:  		EndIf
  408:  		Wait  10`
  414:  		Call  SetAnimationRate  ( .Actor:Self 00000002 *Fixed[1.0] )
  42C:  		Call  UseBattleCamPreset    ( 00000002 )
  43C:  		Call  ResetAllActorSounds   ( .Actor:Self )
  44C:  		Call  YieldTurn ( )
  458:  		Call  SetAnimation      ( .Actor:Self 00000002 00280204 )
  470:  		Call  SetActorYaw       ( .Actor:Self  180` )
  484:  		ExecWait  $Script_8021C94C
  490:  		Call  SetActorYaw       ( .Actor:Self  0` )
  4A4:  		Call  RemoveActorDecoration ( .Actor:Self 00000002 00000000 )
  4BC:  		Call  EnableIdleScript  ( .Actor:Self FFFFFFFF )
  4D0:  		Call  UseIdleAnimation  ( .Actor:Self .True )
  4E4:  		Return
  4EC:  	EndCaseGroup
  4F4:  	Default
  4FC:  		Wait  10`
  508:  		Call  UseBattleCamPreset    ( 00000042 )
  518:  		Call  SetBattleCamZoom  (  300` )
  528:  		Call  BattleCamTargetActor  ( .Actor:Self )
  538:  		Call  8024ECF8  ( FFFFFFFF 00000001 00000000 )
  550:  		Call  PlaySoundAtActor  ( .Actor:Self 000020E0 )
  564:  		Call  SetActorSounds    ( .Actor:Self .ActorSound:Jump 00000000 00000000 )
  580:  		Call  SetActorSpeed     ( .Actor:Self *Fixed[5.0] )
  594:  		Call  SetActorJumpGravity   ( .Actor:Self *Fixed[1.8] )
  5A8:  		Call  SetAnimation      ( .Actor:Self 00000002 00280205 )
  5C0:  		Call  GetActorPos       ( .Actor:Self *Var0 *Var1 *Var2 )
  5DC:  		Call  SetGoalPos        ( .Actor:Self *Var0 *Var1 *Var2 )
  5F8:  		Call  JumpToGoal        ( .Actor:Self  10` .False .False .False )
  618:  		Call  PlaySoundAtActor  ( .Actor:Self 000002C1 )
  62C:  		Call  SetActorSounds    ( .Actor:Self .ActorSound:Fly 00000000 00000000 )
  648:  		Call  SetGoalToTarget   ( .Actor:Self )
  658:  		Call  SetActorSpeed     ( .Actor:Self *Fixed[8.0] )
  66C:  		Call  SetAnimation      ( .Actor:Self 00000002 00280205 )
  684:  		Call  FlyToGoal ( .Actor:Self  0`  -10` .Easing:Linear )
  6A0:  EndSwitch
  6A8:  Wait  2`
  6B4:  Call  EnemyDamageTarget ( .Actor:Self *Var0 ~Flags:DamageType:0 00000000 00000000 00000001 00000020 )
  6DC:  Switch  *Var0
  6E8:  	CaseOR  ==  .HitResult:Hit % 0
  6F4:  	CaseOR  ==  .HitResult:QuakeImmune % 2
  700:  		Call  UseBattleCamPreset    ( 00000002 )
  710:  		Call  SetGoalToTarget       ( .Actor:Self )
  720:  		Call  AddGoalPos    ( .Actor:Self  50`  10`  0` )
  73C:  		Call  SetActorSpeed ( .Actor:Self *Fixed[6.0] )
  750:  		Call  SetAnimation  ( .Actor:Self 00000002 00280204 )
  768:  		Call  FlyToGoal     ( .Actor:Self  0`  -10` .Easing:Linear )
  784:  		Call  ResetAllActorSounds   ( .Actor:Self )
  794:  		Wait  5`
  7A0:  		Call  YieldTurn ( )
  7AC:  		Call  SetAnimation  ( .Actor:Self 00000002 00280204 )
  7C4:  		ExecWait  $Script_8021C94C
  7D0:  	EndCaseGroup
  7D8:  EndSwitch
  7E0:  Call  EnableIdleScript  ( .Actor:Self FFFFFFFF )
  7F4:  Call  UseIdleAnimation  ( .Actor:Self .True )
  808:  Return
  810:  End
}

#new:Script $Script_8021D9F4
{
    0:  Call  8027D32C      ( FFFFFF81 )
   10:  Call  SetPartFlags  ( .Actor:Self 00000002 00020005 )
   28:  Call  SetPartFlags  ( .Actor:Self 00000003 00120004 )
   40:  Call  SetPartFlags  ( .Actor:Self 00000004 00120004 )
   58:  Call  SetPartFlags  ( .Actor:Self 00000001 00800004 )
   70:  Call  GetActorPos   ( .Actor:Self *Var0 *Var1 *Var2 )
   8C:  Call  SetPartPos    ( .Actor:Self 00000003 *Var0 *Var1 *Var2 )
   AC:  Call  SetPartDispOffset ( .Actor:Self 00000003 FFFFFFF7 00000007 FFFFFFFE )
   CC:  Call  SetPartPos    ( .Actor:Self 00000004 *Var0 *Var1 *Var2 )
   EC:  Call  SetPartDispOffset ( .Actor:Self 00000004 0000000B 00000007 FFFFFFFE )
  10C:  Call  GetLastEvent  ( .Actor:Self *Var0 )
  120:  If  *Var0  ==  0000000F % F
  130:  	Call  SetAnimation  ( .Actor:Self 00000001 0026020A )
  148:  Else
  150:  	Call  SetAnimation  ( .Actor:Self 00000001 00260205 )
  168:  EndIf
  170:  Call  SetActorSounds    ( .Actor:Self .ActorSound:Jump 00000301 00000000 )
  18C:  Call  GetActorPos       ( .Actor:Self *Var0 *Var1 *Var2 )
  1A8:  Set   *Var1  00000000
  1B8:  Call  SetActorJumpGravity   ( .Actor:Self *Fixed[0.8] )
  1CC:  Call  SetGoalPos        ( .Actor:Self *Var0 *Var1 *Var2 )
  1E8:  Call  JumpToGoal        ( .Actor:Self  15` .False .True .False )
  208:  Call  $Function_802182E0    ( 00000064 0000000A )
  21C:  Thread
  224:  	Call  ShakeCam  ( .Cam:Battle 00000000  5` *Fixed[0.3] )
  240:  EndThread
  248:  Call  ResetActorSounds  ( .Actor:Self .ActorSound:Jump )
  25C:  Call  GetLastEvent      ( .Actor:Self *Var3 )
  270:  If  *Var3  ==  0000000F % F
  280:  	Call  SetAnimation  ( .Actor:Self 00000001 00260205 )
  298:  	Call  GetActorPos   ( .Actor:Self *Var3 *Var4 *Var5 )
  2B4:  	Add   *Var4  0000000A
  2C4:  	Add   *Var5  00000005
  2D4:  	Call  PlayEffect    ( ~FX:SmokeBurst:Black *Var3 *Var4 *Var5 *Fixed[1.0] 0000000A 00000000 00000000 00000000 00000000 00000000 00000000 00000000 )
  318:  EndIf
  320:  Call  SetGoalPos    ( .Actor:Self *Var0 *Var1 *Var2 )
  33C:  Call  JumpToGoal    ( .Actor:Self  10` .False .True .False )
  35C:  Call  SetGoalPos    ( .Actor:Self *Var0 *Var1 *Var2 )
  378:  Call  JumpToGoal    ( .Actor:Self  5` .False .True .False )
  398:  Loop  0000000A
  3A4:  	Call  SetPartFlagBits   ( .Actor:Self 00000003 00000001 .True )
  3C0:  	Call  SetPartFlagBits   ( .Actor:Self 00000004 00000001 .True )
  3DC:  	Wait  1`
  3E8:  	Call  SetPartFlagBits   ( .Actor:Self 00000003 00000001 .False )
  404:  	Call  SetPartFlagBits   ( .Actor:Self 00000004 00000001 .False )
  420:  	Wait  1`
  42C:  EndLoop
  434:  Call  SetPartFlagBits   ( .Actor:Self 00000003 00000001 .True )
  450:  Call  SetPartFlagBits   ( .Actor:Self 00000004 00000001 .True )
  46C:  Call  GetIndexFromHome  ( .Actor:Self *Var0 )
  480:  Mod   *Var0  00000004
  490:  Call  SetGoalToIndex    ( .Actor:Self *Var0 )
  4A4:  Call  GetGoalPos        ( .Actor:Self *Var0 *Var1 *Var2 )
  4C0:  Call  SetHomePos        ( .Actor:Self *Var0 *Var1 *Var2 )
  4DC:  Call  SetAnimation      ( .Actor:Self 00000001 00260201 )
  4F4:  Call  SetActorFlagBits  ( .Actor:Self 00000200 .False )
  50C:  Call  SetStatusTable    ( .Actor:Self $StatusTable_8021B308 )
  520:  Call  SetActorType      ( .Actor:Self 0000001B )
  534:  ExecWait  $Script_8021E058
  540:  Call  SetActorFlagBits  ( .Actor:Self 00001000 .True )
  558:  Call  HPBarToHome       ( .Actor:Self )
  568:  Call  ResetAllActorSounds   ( .Actor:Self )
  578:  Return
  580:  End
}

#new:IdleAnimations $IdleAnimations_8021DF7C
{
	.Status:Normal    00260208
	.Status:Stone     00260200
	.Status:Sleep     00260208
	.Status:Poison    00260208
	.Status:Stop      00260200
	.Status:Static    00260208
	.Status:Paralyze  00260200
	.Status:Dizzy     00260207
	.Status:Fear      00260207
	.Status:End
}

% Origin: HEURISTIC
#new:Script $Script_8021DFC8
{
    0:  Call  BindIdle      ( .Actor:Self $Script_Idle_8021F140 )
   14:  Call  BindHandleEvent   ( .Actor:Self $Script_HandleEvent_8021F41C )
   28:  Call  BindTakeTurn  ( .Actor:Self $Script_TakeTurn_8021EE34 )
   3C:  Call  BindNextTurn  ( .Actor:Self $Script_NextTurn_8021E194 )
   50:  Call  SetActorVar   ( .Actor:Self 00000000 00000000 )
   68:  Call  SetActorVar   ( .Actor:Self 00000001 00000000 )
   80:  Return
   88:  End
}

#new:Script $Script_8021E058
{
    0:  Call  BindIdle      ( .Actor:Self $Script_Idle_8021F140 )
   14:  Call  BindHandleEvent   ( .Actor:Self $Script_HandleEvent_8021F41C )
   28:  Call  BindTakeTurn  ( .Actor:Self $Script_TakeTurn_8021EE34 )
   3C:  Call  BindNextTurn  ( .Actor:Self $Script_NextTurn_8021E194 )
   50:  Call  GetActorVar   ( .Actor:Self 00000000 *Var0 )
   68:  Switch  *Var0
   74:  	Case  ==  00000000
   80:  		Call  SetActorVar   ( .Actor:Self 00000000 00000000 )
   98:  	Case  ==  00000001
   A4:  		Call  SetActorVar       ( .Actor:Self 00000000 00000001 )
   BC:  		Call  SetPartEventBits  ( .Actor:Self 00000001 00400000 .True )
   D8:  		Call  SetPartEventBits  ( .Actor:Self 00000002 00400000 .False )
   F4:  EndSwitch
   FC:  Call  GetActorVar   ( .Actor:Self 00000001 *Var0 )
  114:  Call  SetActorVar   ( .Actor:Self 00000001 *Var0 )
  12C:  Return
  134:  End
}

#new:Script $Script_NextTurn_8021E194
{
    0:  Call  GetBattlePhase    ( *Var0 )
   10:  Switch  *Var0
   1C:  	Case  ==  0000000A
   28:  	Case  ==  0000000C
   34:  	Case  ==  0000000B
   40:  		Call  SetBattleVar  ( 00000001 00000000 )
   54:  		Call  SetActorVar   ( .Actor:Self 00000001 00000001 )
   6C:  EndSwitch
   74:  Return
   7C:  End
}

#new:Script $Script_8021E218
{
    0:  Call  UseIdleAnimation  ( .Actor:Self .False )
   14:  Call  EnableIdleScript  ( .Actor:Self 00000000 )
   28:  Call  SetTargetActor    ( .Actor:Self .Actor:Player )
   3C:  Call  SetGoalToTarget   ( .Actor:Self )
   4C:  Call  GetActorVar       ( .Actor:Self 00000000 *Var0 )
   64:  If  *Var0  ==  00000000
   74:  	Call  UseBattleCamPreset    ( 0000000E )
   84:  	Call  BattleCamTargetActor  ( .Actor:Self )
   94:  	Call  MoveBattleCamOver (  20` )
   A4:  	Wait  20`
   B0:  	Call  PlaySoundAtActor  ( .Actor:Self .Sound:PowerUp )
   C4:  	Call  GetActorPos       ( .Actor:Self *Var0 *Var1 *Var2 )
   E0:  	Add   *Var1  0000000A
   F0:  	Call  PlayEffect        ( ~FX:EnergyIn:LongStreaks1 *Var0 *Var1 *Var2 *Fixed[1.0] 0000002D 00000000 00000000 00000000 00000000 00000000 00000000 00000000 )
  134:  	Call  SetAnimation      ( .Actor:Self 00000001 00260203 )
  14C:  	Wait  30`
  158:  	Call  UseBattleCamPreset    ( 00000002 )
  168:  	Call  MoveBattleCamOver (  20` )
  178:  	Call  GetActorPos       ( .Actor:Self *Var0 *Var1 *Var2 )
  194:  	Call  SetActorJumpGravity   ( .Actor:Self *Fixed[1.0] )
  1A8:  	Call  SetGoalPos        ( .Actor:Self *Var0  0` *Var2 )
  1C4:  	Call  JumpToGoal        ( .Actor:Self  20` .False .True .False )
  1E4:  	Call  PlaySoundAtActor  ( .Actor:Self 000020DD )
  1F8:  	Call  $Function_802182E0    ( 00000080 0000000A )
  20C:  	Thread
  214:  		Call  ShakeCam  ( .Cam:Battle 00000000  5` *Fixed[0.5] )
  230:  	EndThread
  238:  	Call  SetActorVar       ( .Actor:Self 00000000 00000001 )
  250:  	Call  SetIdleAnimations ( .Actor:Self 00000001 $IdleAnimations_8021DF7C )
  268:  	Call  SetAnimation      ( .Actor:Self 00000001 00260201 )
  280:  	Call  EnableActorGlow   ( .Actor:Self .True )
  294:  	Call  SetPartEventBits  ( .Actor:Self 00000001 00400000 .True )
  2B0:  	Wait  2`
  2BC:  	Call  EnableIdleScript  ( .Actor:Self 00000001 )
  2D0:  	Call  UseIdleAnimation  ( .Actor:Self .True )
  2E4:  	Return
  2EC:  EndIf
  2F4:  Call  UseBattleCamPreset    ( 0000003F )
  304:  Call  BattleCamTargetActor  ( .Actor:Self )
  314:  Call  8024ECF8  ( FFFFFFFF 00000001 00000000 )
  32C:  Loop  00000014
  338:  	Call  SetActorDispOffset    ( .Actor:Self 00000001 00000000 00000000 )
  354:  	Wait  1`
  360:  	Call  SetActorDispOffset    ( .Actor:Self FFFFFFFF 00000000 00000000 )
  37C:  	Wait  1`
  388:  EndLoop
  390:  Call  SetActorDispOffset    ( .Actor:Self 00000000 00000000 00000000 )
  3AC:  Call  EnemyTestTarget       ( .Actor:Self *Var0 ~Flags:DamageType:0 00000000 00000001 00000010 )
  3D0:  Switch  *Var0
  3DC:  	CaseOR  ==  .HitResult:Miss % 6
  3E8:  	CaseOR  ==  .HitResult:Lucky % 5
  3F4:  		Set   *VarA  *Var0
  404:  		Thread
  40C:  			Loop
  418:  				Call  GetActorPos   ( .Actor:Player *Var0 *Var1 *Var2 )
  434:  				Add   *Var0  0000001E
  444:  				Call  GetActorPos   ( .Actor:Self *Var3 *Var4 *Var5 )
  460:  				If  *Var0  >  *Var3
  470:  					BreakLoop
  478:  				EndIf
  480:  				Wait  1`
  48C:  			EndLoop
  494:  			Call  UseBattleCamPreset    ( 00000001 )
  4A4:  			If  *VarA  ==  .HitResult:Lucky % 5
  4B4:  				Call  EnemyTestTarget   ( .Actor:Self *Var0 ~Flags:DamageType:TriggerLucky 00000000 00000000 00000000 )
  4D8:  			EndIf
  4E0:  			Wait  15`
  4EC:  			Call  UseBattleCamPreset    ( 00000002 )
  4FC:  		EndThread
  504:  		Call  SetActorRotationOffset    ( .Actor:Self 00000000 0000000C 00000000 )
  520:  		Call  SetActorRotation  ( .Actor:Self 00000000 00000000 00000050 )
  53C:  		Call  SetActorSounds    ( .Actor:Self .ActorSound:Jump 0000010F 00000000 )
  558:  		Call  SetGoalToTarget   ( .Actor:Self )
  568:  		Call  AddGoalPos        ( .Actor:Self  -200`  0`  0` )
  584:  		Call  SetActorJumpGravity   ( .Actor:Self *Fixed[0.01] )
  598:  		Call  SetActorSpeed     ( .Actor:Self *Fixed[15.0] )
  5AC:  		Call  JumpToGoal        ( .Actor:Self  0` .False .True .False )
  5CC:  		Call  ResetAllActorSounds   ( .Actor:Self )
  5DC:  		Call  SetActorRotationOffset    ( .Actor:Self 00000000 00000000 00000000 )
  5F8:  		Call  SetActorRotation  ( .Actor:Self 00000000 00000000 00000000 )
  614:  		Call  GetActorPos       ( .Actor:Self *Var0 *Var1 *Var2 )
  630:  		Call  SetActorPos       ( .Actor:Self *Var0  0` *Var2 )
  64C:  		Wait  20`
  658:  		Call  EnableActorGlow   ( .Actor:Self .False )
  66C:  		Call  SetPartEventBits  ( .Actor:Self 00000001 00400000 .False )
  688:  		Call  YieldTurn ( )
  694:  		Call  SetActorPos       ( .Actor:Self  300`  0`  0` )
  6B0:  		Call  AddActorDecoration    ( .Actor:Self 00000001 00000000 .Decoration:Sweat )
  6CC:  		Call  SetAnimation      ( .Actor:Self 00000001 00260203 )
  6E4:  		Call  SetActorSpeed     ( .Actor:Self *Fixed[8.0] )
  6F8:  		Call  SetGoalToHome     ( .Actor:Self )
  708:  		Call  RunToGoal ( .Actor:Self  0` .False )
  720:  		Call  SetAnimation      ( .Actor:Self 00000001 00260201 )
  738:  		Call  RemoveActorDecoration ( .Actor:Self 00000001 00000000 )
  750:  		Call  SetActorVar       ( .Actor:Self 00000000 00000000 )
  768:  		Call  SetIdleAnimations ( .Actor:Self 00000001 $IdleAnimations_8021F05C )
  780:  		Call  EnableIdleScript  ( .Actor:Self 00000001 )
  794:  		Call  UseIdleAnimation  ( .Actor:Self .True )
  7A8:  		Return
  7B0:  	EndCaseGroup
  7B8:  EndSwitch
  7C0:  Call  SetActorSounds    ( .Actor:Self .ActorSound:Jump 0000010F 00000000 )
  7DC:  Call  SetActorRotationOffset    ( .Actor:Self 00000000 0000000C 00000000 )
  7F8:  Call  SetActorRotation  ( .Actor:Self 00000000 00000000 00000050 )
  814:  Call  SetGoalToTarget   ( .Actor:Self )
  824:  Call  SetActorJumpGravity       ( .Actor:Self *Fixed[0.01] )
  838:  Call  SetActorSpeed     ( .Actor:Self *Fixed[15.0] )
  84C:  Call  JumpToGoal        ( .Actor:Self  0` .False .True .False )
  86C:  Wait  2`
  878:  Call  EnemyDamageTarget ( .Actor:Self *Var0 ~Flags:DamageType:0 00000000 00000000 00000008 00000020 )
  8A0:  Switch  *Var0
  8AC:  	CaseOR  ==  .HitResult:Hit % 0
  8B8:  	CaseOR  ==  .HitResult:QuakeImmune % 2
  8C4:  		Thread
  8CC:  			Call  SetActorRotationOffset    ( .Actor:Self 00000000 0000000C 00000000 )
  8E8:  			Set   *Var0  00000050
  8F8:  			Loop  0000003C
  904:  				Add   *Var0  00000012
  914:  				Call  SetActorRotation  ( .Actor:Self 00000000 00000000 *Var0 )
  930:  				Wait  1`
  93C:  			EndLoop
  944:  			Call  SetActorRotationOffset    ( .Actor:Self 00000000 00000000 00000000 )
  960:  			Call  SetActorRotation  ( .Actor:Self 00000000 00000000 00000000 )
  97C:  		EndThread
  984:  		Call  UseBattleCamPreset    ( 00000002 )
  994:  		Call  ResetAllActorSounds   ( .Actor:Self )
  9A4:  		Call  SetActorJumpGravity   ( .Actor:Self *Fixed[0.8] )
  9B8:  		Call  GetActorPos   ( .Actor:Self *Var0 *Var1 *Var2 )
  9D4:  		Set   *Var1  00000000
  9E4:  		Sub   *Var0  00000032
  9F4:  		Call  SetGoalPos    ( .Actor:Self *Var0 *Var1 *Var2 )
  A10:  		Call  JumpToGoal    ( .Actor:Self  30` .False .True .False )
  A30:  		Sub   *Var0  00000028
  A40:  		Call  SetGoalPos    ( .Actor:Self *Var0 *Var1 *Var2 )
  A5C:  		Call  JumpToGoal    ( .Actor:Self  20` .False .True .False )
  A7C:  		Sub   *Var0  0000001E
  A8C:  		Call  SetGoalPos    ( .Actor:Self *Var0 *Var1 *Var2 )
  AA8:  		Call  JumpToGoal    ( .Actor:Self  10` .False .True .False )
  AC8:  		Wait  10`
  AD4:  		Call  EnableActorGlow       ( .Actor:Self .False )
  AE8:  		Call  SetPartEventBits      ( .Actor:Self 00000001 00400000 .False )
  B04:  		Call  YieldTurn ( )
  B10:  		Call  SetActorYaw   ( .Actor:Self  180` )
  B24:  		Call  SetAnimation  ( .Actor:Self 00000001 00260203 )
  B3C:  		Call  SetActorSpeed ( .Actor:Self *Fixed[8.0] )
  B50:  		Call  SetGoalToHome ( .Actor:Self )
  B60:  		Call  RunToGoal     ( .Actor:Self  0` .False )
  B78:  		Call  SetAnimation  ( .Actor:Self 00000001 00260201 )
  B90:  		Call  SetActorYaw   ( .Actor:Self  0` )
  BA4:  		Call  SetActorVar   ( .Actor:Self 00000000 00000000 )
  BBC:  		Call  SetIdleAnimations     ( .Actor:Self 00000001 $IdleAnimations_8021F05C )
  BD4:  	EndCaseGroup
  BDC:  EndSwitch
  BE4:  Call  EnableIdleScript  ( .Actor:Self 00000001 )
  BF8:  Call  UseIdleAnimation  ( .Actor:Self .True )
  C0C:  Return
  C14:  End
}

#new:Script $Script_TakeTurn_8021EE34
{
    0:  Call  GetBattlePhase    ( *Var0 )
   10:  If  *Var0  ==  00000001
   20:  	Call  SetBattleVar  ( 00000001 00000001 )
   34:  	ExecWait  $Script_TakeTurn_8021FE6C
   40:  	Return
   48:  EndIf
   50:  Call  GetActorVar   ( .Actor:Self 00000000 *Var0 )
   68:  If  *Var0  ==  00000001
   78:  	ExecWait  $Script_8021E218
   84:  	Return
   8C:  EndIf
   94:  Call  GetBattleVar  ( 00000001 *Var0 )
   A8:  Switch  *Var0
   B4:  	Case  ==  00000000
   C0:  		Call  GetActorVar   ( .Actor:Self 00000001 *Var0 )
   D8:  		If  *Var0  ==  00000000
   E8:  			Call  RandInt   ( 000003E8 *Var0 )
   FC:  			If  *Var0  <  000002EE
  10C:  				Call  SetBattleVar  ( 00000001 00000002 )
  120:  				ExecWait  $Script_8021E218
  12C:  			Else
  134:  				Call  SetBattleVar  ( 00000001 00000001 )
  148:  				ExecWait  $Script_TakeTurn_8021FE6C
  154:  			EndIf
  15C:  		Else
  164:  			Call  RandInt   ( 000003E8 *Var0 )
  178:  			If  *Var0  <  000001F4
  188:  				Call  SetBattleVar  ( 00000001 00000002 )
  19C:  				ExecWait  $Script_8021E218
  1A8:  			Else
  1B0:  				Call  SetBattleVar  ( 00000001 00000001 )
  1C4:  				ExecWait  $Script_TakeTurn_8021FE6C
  1D0:  			EndIf
  1D8:  		EndIf
  1E0:  	Case  ==  00000001
  1EC:  		ExecWait  $Script_TakeTurn_8021FE6C
  1F8:  	Case  ==  00000002
  204:  		ExecWait  $Script_8021E218
  210:  EndSwitch
  218:  Return
  220:  End
}

#new:IdleAnimations $IdleAnimations_8021F05C
{
	.Status:Normal    00260201
	.Status:Stone     00260200
	.Status:Sleep     00260208
	.Status:Poison    00260201
	.Status:Stop      00260200
	.Status:Static    00260201
	.Status:Paralyze  00260200
	.Status:Dizzy     00260207
	.Status:Fear      00260207
	.Status:End
}

#new:IdleAnimations $IdleAnimations_8021F0A8
{
	.Status:Normal    00260203
	.Status:Stone     00260200
	.Status:Sleep     00260208
	.Status:Poison    00260201
	.Status:Stop      00260200
	.Status:Static    00260203
	.Status:Paralyze  00260200
	.Status:Dizzy     00260207
	.Status:Fear      00260207
	.Status:End
}

% Origin: HEURISTIC
#new:Script $Script_8021F0F4
{
    0:  Call  BindTakeTurn      ( .Actor:Self $Script_TakeTurn_8021FE6C )
   14:  Call  BindIdle  ( .Actor:Self $Script_Idle_8021F140 )
   28:  Call  BindHandleEvent   ( .Actor:Self $Script_HandleEvent_8021F41C )
   3C:  Return
   44:  End
}

#new:Script $Script_Idle_8021F140
{
    0:  Label  A
    C:  Call  RandInt   ( 00000050 *Var0 )
   20:  Add   *Var0  00000050
   30:  Loop  *Var0
   3C:  	Label  0
   48:  	Call  GetStatusFlags    ( .Actor:Self *Var1 )
   5C:  	If  *Var1  &  ~Flags:StatusFlags:Sleep|Frozen|Fear|Paralyze|Dizzy|Stone|Stop % 35D000
   6C:  		Wait  1`
   78:  		Goto  0
   84:  	EndIf
   8C:  	Wait  1`
   98:  EndLoop
   A0:  Call  GetActorPos       ( .Actor:Self *Var0 *Var1 *Var2 )
   BC:  Add   *Var0  00000005
   CC:  Call  SetActorIdleSpeed ( .Actor:Self *Fixed[1.0] )
   E0:  Call  SetIdleAnimations ( .Actor:Self 00000001 $IdleAnimations_8021F0A8 )
   F8:  Call  SetIdleGoal       ( .Actor:Self *Var0 *Var1 *Var2 )
  114:  Call  IdleRunToGoal     ( .Actor:Self  0` )
  128:  Call  SetIdleAnimations ( .Actor:Self 00000001 $IdleAnimations_8021F05C )
  140:  Loop  00000014
  14C:  	Label  1
  158:  	Call  GetStatusFlags    ( .Actor:Self *Var1 )
  16C:  	If  *Var1  &  ~Flags:StatusFlags:Sleep|Frozen|Fear|Paralyze|Dizzy|Stone|Stop % 35D000
  17C:  		Wait  1`
  188:  		Goto  1
  194:  	EndIf
  19C:  	Wait  1`
  1A8:  EndLoop
  1B0:  Call  GetActorPos       ( .Actor:Self *Var0 *Var1 *Var2 )
  1CC:  Sub   *Var0  00000005
  1DC:  Call  SetActorIdleSpeed ( .Actor:Self *Fixed[1.0] )
  1F0:  Call  SetIdleAnimations ( .Actor:Self 00000001 $IdleAnimations_8021F0A8 )
  208:  Call  SetIdleGoal       ( .Actor:Self *Var0 *Var1 *Var2 )
  224:  Call  IdleRunToGoal     ( .Actor:Self  0` )
  238:  Call  SetIdleAnimations ( .Actor:Self 00000001 $IdleAnimations_8021F05C )
  250:  Loop  00000050
  25C:  	Label  2
  268:  	Call  GetStatusFlags    ( .Actor:Self *Var1 )
  27C:  	If  *Var1  &  ~Flags:StatusFlags:Sleep|Frozen|Fear|Paralyze|Dizzy|Stone|Stop % 35D000
  28C:  		Wait  1`
  298:  		Goto  2
  2A4:  	EndIf
  2AC:  	Wait  1`
  2B8:  EndLoop
  2C0:  Goto  A
  2CC:  Return
  2D4:  End
}

#new:Script $Script_HandleEvent_8021F41C
{
    0:  Call  UseIdleAnimation  ( .Actor:Self .False )
   14:  Call  EnableIdleScript  ( .Actor:Self 00000000 )
   28:  Call  SetActorScale     ( .Actor:Self *Fixed[1.0] *Fixed[1.0] *Fixed[1.0] )
   44:  Call  GetLastEvent      ( .Actor:Self *Var0 )
   58:  Switch  *Var0
   64:  	CaseOR  ==  .Event:HitCombo % 9
   70:  	CaseOR  ==  .Event:Hit % A
   7C:  		SetConst  *Var0  00000001
   8C:  		SetConst  *Var1  00260205
   9C:  		ExecWait  DoNormalHit
   A8:  	EndCaseGroup
   B0:  	Case  ==  .Event:BurnHit % E
   BC:  		SetConst  *Var0  00000001
   CC:  		SetConst  *Var1  00260209
   DC:  		SetConst  *Var2  0026020A
   EC:  		ExecWait  DoBurnHit
   F8:  	Case  ==  .Event:BurnDeath % 24
  104:  		SetConst  *Var0  00000001
  114:  		SetConst  *Var1  00260209
  124:  		SetConst  *Var2  0026020A
  134:  		ExecWait  DoBurnHit
  140:  		SetConst  *Var0  00000001
  150:  		SetConst  *Var1  0026020A
  160:  		ExecWait  DoDeath
  16C:  		Return
  174:  	Case  ==  .Event:SpinSmashHit % B
  180:  		SetConst  *Var0  00000001
  190:  		SetConst  *Var1  00260205
  1A0:  		ExecWait  DoSpinSmashHit
  1AC:  	Case  ==  .Event:SpinSmashDeath % 21
  1B8:  		SetConst  *Var0  00000001
  1C8:  		SetConst  *Var1  00260205
  1D8:  		ExecWait  DoSpinSmashHit
  1E4:  		SetConst  *Var0  00000001
  1F4:  		SetConst  *Var1  00260206
  204:  		ExecWait  DoDeath
  210:  		Return
  218:  	Case  ==  .Event:ShockHit % 2F
  224:  		Call  SetActorRotationOffset    ( .Actor:Self 00000000 00000000 00000000 )
  240:  		Call  SetActorRotation  ( .Actor:Self 00000000 00000000 00000000 )
  25C:  		Call  EnableActorGlow   ( .Actor:Self .False )
  270:  		Call  SetPartEventBits  ( .Actor:Self 00000001 00400000 .False )
  28C:  		Call  SetActorVar       ( .Actor:Self 00000000 00000000 )
  2A4:  		Call  SetIdleAnimations ( .Actor:Self 00000001 $IdleAnimations_8021F05C )
  2BC:  		SetConst  *Var0  00000001
  2CC:  		SetConst  *Var1  0026020E
  2DC:  		ExecWait  DoShockHit
  2E8:  		SetConst  *Var0  00000001
  2F8:  		SetConst  *Var1  00260205
  308:  		ExecWait  DoJumpBack
  314:  		Call  JumpToGoal        ( .Actor:Self  5` .False .True .False )
  334:  		Call  SetAnimationRate  ( .Actor:Self 00000001 *Fixed[2.0] )
  34C:  		Call  SetAnimation      ( .Actor:Self 00000001 00260207 )
  364:  		Call  SetGoalToHome     ( .Actor:Self )
  374:  		Call  SetActorSpeed     ( .Actor:Self *Fixed[8.0] )
  388:  		Call  RunToGoal ( .Actor:Self  0` .False )
  3A0:  		Call  SetAnimationRate  ( .Actor:Self 00000001 *Fixed[1.0] )
  3B8:  		Wait  5`
  3C4:  		Call  SetAnimation      ( .Actor:Self 00000001 00260201 )
  3DC:  		Call  SetActorJumpGravity       ( .Actor:Self *Fixed[1.6] )
  3F0:  		Call  JumpToGoal        ( .Actor:Self  5` .False .True .False )
  410:  	Case  ==  .Event:ShockDeath % 26
  41C:  		Call  SetActorRotationOffset    ( .Actor:Self 00000000 00000000 00000000 )
  438:  		Call  SetActorRotation  ( .Actor:Self 00000000 00000000 00000000 )
  454:  		Call  EnableActorGlow   ( .Actor:Self .False )
  468:  		Call  SetPartEventBits  ( .Actor:Self 00000001 00400000 .False )
  484:  		Call  SetActorVar       ( .Actor:Self 00000000 00000000 )
  49C:  		Call  SetIdleAnimations ( .Actor:Self 00000001 $IdleAnimations_8021F05C )
  4B4:  		SetConst  *Var0  00000001
  4C4:  		SetConst  *Var1  0026020E
  4D4:  		ExecWait  DoShockHit
  4E0:  		SetConst  *Var0  00000001
  4F0:  		SetConst  *Var1  00260206
  500:  		ExecWait  DoDeath
  50C:  		Return
  514:  	Case  ==  .Event:StarBeam % 13
  520:  		Call  GetActorVar   ( .Actor:Self 00000000 *Var0 )
  538:  		If  *Var0  ==  00000001
  548:  			Call  SetActorRotationOffset    ( .Actor:Self 00000000 00000000 00000000 )
  564:  			Call  SetActorRotation  ( .Actor:Self 00000000 00000000 00000000 )
  580:  			Call  EnableActorGlow   ( .Actor:Self .False )
  594:  			Call  SetPartEventBits  ( .Actor:Self 00000001 00400000 .False )
  5B0:  			Call  SetActorVar       ( .Actor:Self 00000000 00000000 )
  5C8:  			Call  SetIdleAnimations ( .Actor:Self 00000001 $IdleAnimations_8021F05C )
  5E0:  		EndIf
  5E8:  		SetConst  *Var0  00000001
  5F8:  		SetConst  *Var1  00260201
  608:  		ExecWait  DoImmune
  614:  	CaseOR  ==  00000017 % 17
  620:  	CaseOR  ==  .Event:Immune % 19
  62C:  	CaseOR  ==  .Event:AirLiftFailed % 1F
  638:  		SetConst  *Var0  00000001
  648:  		SetConst  *Var1  00260201
  658:  		ExecWait  DoImmune
  664:  	EndCaseGroup
  66C:  	Case  ==  .Event:Death % 20
  678:  		SetConst  *Var0  00000001
  688:  		SetConst  *Var1  00260205
  698:  		ExecWait  DoNormalHit
  6A4:  		Wait  10`
  6B0:  		SetConst  *Var0  00000001
  6C0:  		SetConst  *Var1  00260206
  6D0:  		ExecWait  DoDeath
  6DC:  		Return
  6E4:  	Case  ==  .Event:EndFirstStrike % 35
  6F0:  		Call  SetAnimationRate  ( .Actor:Self 00000001 *Fixed[2.0] )
  708:  		Call  SetAnimation  ( .Actor:Self 00000001 00260203 )
  720:  		Call  SetGoalToHome ( .Actor:Self )
  730:  		Call  SetActorSpeed ( .Actor:Self *Fixed[4.0] )
  744:  		Call  RunToGoal     ( .Actor:Self  0` .False )
  75C:  		Call  SetAnimationRate  ( .Actor:Self 00000001 *Fixed[1.0] )
  774:  		Call  HPBarToHome   ( .Actor:Self )
  784:  	Case  ==  .Event:RecoverStatus % 31
  790:  		SetConst  *Var0  00000001
  7A0:  		SetConst  *Var1  00260201
  7B0:  		ExecWait  DoRecover
  7BC:  	Case  ==  .Event:ScareAway % 39
  7C8:  		SetConst  *Var0  00000001
  7D8:  		SetConst  *Var1  00260203
  7E8:  		SetConst  *Var2  00260205
  7F8:  		ExecWait  DoScareAway
  804:  		Return
  80C:  	Case  ==  .Event:BeginAirLift % 3A
  818:  		SetConst  *Var0  00000001
  828:  		SetConst  *Var1  00260203
  838:  		ExecWait  DoAirLift
  844:  	Case  ==  .Event:BlowAway % 16
  850:  		SetConst  *Var0  00000001
  860:  		SetConst  *Var1  00260205
  870:  		ExecWait  DoBlowAway
  87C:  		Return
  884:  	Default
  88C:  EndSwitch
  894:  Call  SetAnimation      ( .Actor:Self 00000001 00260201 )
  8AC:  Call  EnableIdleScript  ( .Actor:Self 00000001 )
  8C0:  Call  UseIdleAnimation  ( .Actor:Self .True )
  8D4:  Return
  8DC:  End
}

#new:FloatTable $FloatTable_8021FD00
{
	0.0      0.017452 0.034899 0.052336 0.069756 0.087156 0.104528 0.121869
	0.139173 0.156434 0.173648 0.190809 0.207912 0.224951 0.241922 0.258819
	0.275637 0.292372 0.309017 0.325568 0.34202  0.358368 0.374607 0.390731
	0.406737 0.422618 0.438371 0.45399  0.469472 0.48481  0.5      0.515038
	0.529919 0.544639 0.559193 0.573576 0.587785 0.601815 0.615661 0.62932
	0.642788 0.656059 0.669131 0.681998 0.694658 0.707107 0.71934  0.731354
	0.743145 0.75471  0.766044 0.777146 0.788011 0.798636 0.809017 0.819152
	0.829038 0.838671 0.848048 0.857167 0.866025 0.87462  0.882948 0.891007
	0.898794 0.906308 0.913545 0.920505 0.927184 0.93358  0.939693 0.945519
	0.951057 0.956305 0.961262 0.965926 0.970296 0.97437  0.978148 0.981627
	0.984808 0.987688 0.990268 0.992546 0.994522 0.996195 0.997564 0.99863
	0.999391 0.999848 1.0
}

#new:Script $Script_TakeTurn_8021FE6C
{
    0:  Call  UseIdleAnimation  ( .Actor:Self .False )
   14:  Call  EnableIdleScript  ( .Actor:Self 00000000 )
   28:  Call  SetTargetActor    ( .Actor:Self .Actor:Player )
   3C:  Call  UseBattleCamPreset    ( 0000003F )
   4C:  Call  BattleCamTargetActor  ( .Actor:Self )
   5C:  Call  8024ECF8  ( FFFFFFFF 00000001 00000000 )
   74:  Call  SetAnimation      ( .Actor:Self 00000001 00260203 )
   8C:  Call  SetGoalToTarget   ( .Actor:Self )
   9C:  Call  AddGoalPos        ( .Actor:Self  50`  0`  0` )
   B8:  Call  SetActorSpeed     ( .Actor:Self *Fixed[6.0] )
   CC:  Call  RunToGoal ( .Actor:Self  0` .False )
   E4:  Call  SetAnimation      ( .Actor:Self 00000001 00260201 )
   FC:  Call  SetActorDispOffset    ( .Actor:Self 00000000 FFFFFFFF 00000000 )
  118:  Wait  1`
  124:  Call  SetActorDispOffset    ( .Actor:Self 00000000 FFFFFFFE 00000000 )
  140:  Wait  5`
  14C:  Call  SetActorDispOffset    ( .Actor:Self 00000000 00000000 00000000 )
  168:  Call  SetAnimation      ( .Actor:Self 00000001 00260204 )
  180:  Call  EnemyTestTarget   ( .Actor:Self *Var0 ~Flags:DamageType:0 00000000 00000001 00000010 )
  1A4:  Switch  *Var0
  1B0:  	CaseOR  ==  .HitResult:Miss % 6
  1BC:  	CaseOR  ==  .HitResult:Lucky % 5
  1C8:  		Set   *VarA  *Var0
  1D8:  		Call  SetGoalToTarget   ( .Actor:Self )
  1E8:  		Call  GetGoalPos        ( .Actor:Self *Var0 *Var1 *Var2 )
  204:  		Sub   *Var0  0000000A
  214:  		Set   *Var1  0000000A
  224:  		Add   *Var2  00000003
  234:  		Call  SetGoalPos        ( .Actor:Self *Var0 *Var1 *Var2 )
  250:  		Call  SetActorJumpGravity   ( .Actor:Self *Fixed[1.2] )
  264:  		Thread
  26C:  			Call  GetActorPos   ( .Actor:Self *Var1 *Var2 *Var0 )
  288:  			Set   *Var0  00000000
  298:  			Loop  00000010
  2A4:  				Call  GetActorPos   ( .Actor:Self *Var4 *Var5 *Var6 )
  2C0:  				Call  $Function_802184C4    ( *Var1 *Var2 *Var4 *Var5 *Var0 )
  2E0:  				Call  SetActorRotation      ( .Actor:Self 00000000 00000000 *Var0 )
  2FC:  				Set   *Var1  *Var4
  30C:  				Set   *Var2  *Var5
  31C:  				Set   *Var3  *Var6
  32C:  				Wait  1`
  338:  			EndLoop
  340:  		EndThread
  348:  		Thread
  350:  			Wait  6`
  35C:  			Call  SetAnimation  ( .Actor:Self 00000001 00260204 )
  374:  		EndThread
  37C:  		Call  JumpToGoal    ( .Actor:Self  16` .False .True .False )
  39C:  		Call  SetAnimation  ( .Actor:Self 00000001 00260208 )
  3B4:  		Call  SetActorScale ( .Actor:Self *Fixed[1.1] *Fixed[0.8] *Fixed[1.0] )
  3D0:  		Call  SetActorDispOffset    ( .Actor:Self 00000000 00000005 00000000 )
  3EC:  		Wait  1`
  3F8:  		Call  SetActorScale ( .Actor:Self *Fixed[1.3] *Fixed[0.5] *Fixed[1.0] )
  414:  		Call  SetActorDispOffset    ( .Actor:Self 00000000 FFFFFFFE 00000000 )
  430:  		Wait  1`
  43C:  		Call  SetActorScale ( .Actor:Self *Fixed[1.0] *Fixed[1.0] *Fixed[1.0] )
  458:  		Call  SetActorDispOffset    ( .Actor:Self 00000000 00000007 00000000 )
  474:  		Call  SetAnimation  ( .Actor:Self 00000001 00260205 )
  48C:  		Wait  5`
  498:  		If  *VarA  ==  .HitResult:Lucky % 5
  4A8:  			Call  EnemyTestTarget   ( .Actor:Self *Var0 ~Flags:DamageType:TriggerLucky 00000000 00000000 00000000 )
  4CC:  		EndIf
  4D4:  		Wait  5`
  4E0:  		Call  SetActorDispOffset    ( .Actor:Self 00000000 00000000 00000000 )
  4FC:  		Call  SetAnimation      ( .Actor:Self 00000001 00260204 )
  514:  		Call  SetGoalToTarget   ( .Actor:Self )
  524:  		Call  GetGoalPos        ( .Actor:Self *Var0 *Var1 *Var2 )
  540:  		Add   *Var0  00000014
  550:  		Set   *Var1  00000000
  560:  		Call  SetGoalPos        ( .Actor:Self *Var0 *Var1 *Var2 )
  57C:  		Call  SetActorJumpGravity   ( .Actor:Self *Fixed[2.0] )
  590:  		Thread
  598:  			Wait  4`
  5A4:  			Set   *Var0  000000B4
  5B4:  			Loop  00000004
  5C0:  				Sub   *Var0  0000002D
  5D0:  				Call  SetActorRotation  ( .Actor:Self 00000000 00000000 *Var0 )
  5EC:  				Wait  1`
  5F8:  			EndLoop
  600:  			Call  SetAnimation  ( .Actor:Self 00000001 00260204 )
  618:  		EndThread
  620:  		Call  JumpToGoal        ( .Actor:Self  15` .False .True .False )
  640:  		Call  SetAnimation      ( .Actor:Self 00000001 00260207 )
  658:  		Wait  5`
  664:  		Call  UseBattleCamPreset    ( 00000002 )
  674:  		Call  YieldTurn ( )
  680:  		Call  SetActorYaw       ( .Actor:Self  180` )
  694:  		Call  AddActorDecoration    ( .Actor:Self 00000001 00000000 .Decoration:Sweat )
  6B0:  		Call  SetAnimationRate  ( .Actor:Self 00000001 *Fixed[2.0] )
  6C8:  		Call  SetGoalToHome     ( .Actor:Self )
  6D8:  		Call  SetActorSpeed     ( .Actor:Self *Fixed[8.0] )
  6EC:  		Call  RunToGoal ( .Actor:Self  0` .False )
  704:  		Call  SetAnimationRate  ( .Actor:Self 00000001 *Fixed[1.0] )
  71C:  		Call  SetActorYaw       ( .Actor:Self  0` )
  730:  		Wait  5`
  73C:  		Call  SetAnimation      ( .Actor:Self 00000001 00260201 )
  754:  		Call  SetActorJumpGravity   ( .Actor:Self *Fixed[1.6] )
  768:  		Call  JumpToGoal        ( .Actor:Self  5` .False .True .False )
  788:  		Call  RemoveActorDecoration ( .Actor:Self 00000001 00000000 )
  7A0:  		Call  EnableIdleScript  ( .Actor:Self 00000001 )
  7B4:  		Call  UseIdleAnimation  ( .Actor:Self .True )
  7C8:  		Return
  7D0:  	EndCaseGroup
  7D8:  	Default
  7E0:  		Call  SetGoalToTarget       ( .Actor:Self )
  7F0:  		Call  SetActorJumpGravity   ( .Actor:Self *Fixed[1.2] )
  804:  		Thread
  80C:  			Call  GetActorPos   ( .Actor:Self *Var1 *Var2 *Var0 )
  828:  			Set   *Var0  00000000
  838:  			Loop  00000010
  844:  				Call  GetActorPos   ( .Actor:Self *Var4 *Var5 *Var6 )
  860:  				Call  $Function_802184C4    ( *Var1 *Var2 *Var4 *Var5 *Var0 )
  880:  				Call  SetActorRotation      ( .Actor:Self 00000000 00000000 *Var0 )
  89C:  				Set   *Var1  *Var4
  8AC:  				Set   *Var2  *Var5
  8BC:  				Set   *Var3  *Var6
  8CC:  				Wait  1`
  8D8:  			EndLoop
  8E0:  		EndThread
  8E8:  		Thread
  8F0:  			Wait  6`
  8FC:  			Call  SetAnimation  ( .Actor:Self 00000001 00260204 )
  914:  		EndThread
  91C:  		Call  JumpToGoal    ( .Actor:Self  16` .False .True .False )
  93C:  		Call  SetAnimation  ( .Actor:Self 00000001 0026020B )
  954:  		Call  SetActorScale ( .Actor:Self *Fixed[1.1] *Fixed[0.8] *Fixed[1.0] )
  970:  		Wait  1`
  97C:  		Call  SetActorScale ( .Actor:Self *Fixed[1.3] *Fixed[0.5] *Fixed[1.0] )
  998:  		Wait  1`
  9A4:  EndSwitch
  9AC:  Call  EnemyDamageTarget ( .Actor:Self *Var0 ~Flags:DamageType:0 00000000 00000000 00000001 00000020 )
  9D4:  Switch  *Var0
  9E0:  	CaseOR  ==  .HitResult:Hit % 0
  9EC:  	CaseOR  ==  .HitResult:QuakeImmune % 2
  9F8:  		Call  UseBattleCamPreset    ( 00000002 )
  A08:  		Call  SetActorScale ( .Actor:Self *Fixed[1.1] *Fixed[0.8] *Fixed[1.0] )
  A24:  		Wait  1`
  A30:  		Call  SetActorScale ( .Actor:Self *Fixed[1.0] *Fixed[1.0] *Fixed[1.0] )
  A4C:  		Wait  1`
  A58:  		Call  SetActorRotation      ( .Actor:Self 00000000 00000000 00000000 )
  A74:  		Call  SetActorDispOffset    ( .Actor:Self 00000000 00000000 00000000 )
  A90:  		Call  SetAnimation  ( .Actor:Self 00000001 00260201 )
  AA8:  		Call  GetGoalPos    ( .Actor:Self *Var0 *Var1 *Var2 )
  AC4:  		Add   *Var0  00000028
  AD4:  		Set   *Var1  00000000
  AE4:  		Call  SetActorJumpGravity   ( .Actor:Self *Fixed[1.8] )
  AF8:  		Call  SetGoalPos    ( .Actor:Self *Var0 *Var1 *Var2 )
  B14:  		Call  JumpToGoal    ( .Actor:Self  10` .False .True .False )
  B34:  		Add   *Var0  0000001E
  B44:  		Call  SetGoalPos    ( .Actor:Self *Var0 *Var1 *Var2 )
  B60:  		Call  JumpToGoal    ( .Actor:Self  8` .False .True .False )
  B80:  		Add   *Var0  00000014
  B90:  		Call  SetGoalPos    ( .Actor:Self *Var0 *Var1 *Var2 )
  BAC:  		Call  JumpToGoal    ( .Actor:Self  6` .False .True .False )
  BCC:  		Call  SetAnimation  ( .Actor:Self 00000001 00260201 )
  BE4:  		Wait  3`
  BF0:  		Call  YieldTurn ( )
  BFC:  		Call  SetAnimationRate      ( .Actor:Self 00000001 *Fixed[2.0] )
  C14:  		Call  SetAnimation  ( .Actor:Self 00000001 00260203 )
  C2C:  		Call  SetGoalToHome ( .Actor:Self )
  C3C:  		Call  SetActorSpeed ( .Actor:Self *Fixed[8.0] )
  C50:  		Call  RunToGoal     ( .Actor:Self  0` .False )
  C68:  		Call  SetAnimationRate      ( .Actor:Self 00000001 *Fixed[1.0] )
  C80:  	EndCaseGroup
  C88:  EndSwitch
  C90:  Call  EnableIdleScript  ( .Actor:Self 00000001 )
  CA4:  Call  UseIdleAnimation  ( .Actor:Self .True )
  CB8:  Return
  CC0:  End
}

PADDING: 80220B34 to 80220B40 (00507584 to 00507590)
00000000 00000000 00000000

#new:DefenseTable $DefenseTable_80220B40
{
	.Element:Normal 00000003
	.Element:Fire   00000063
	.Element:End
}

#new:DefenseTable $DefenseTable_80220B54
{
	.Element:Normal 00000001
	.Element:Fire   00000063
	.Element:End
}

#new:StatusTable $StatusTable_80220B68
{
	.Status:Normal      0`
	.Status:Default     0`
	.Status:Sleep      40`
	.Status:Poison     50`
	.Status:Frozen      0`
	.Status:Dizzy      50`
	.Status:Fear        0`
	.Status:Static     50`
	.Status:Paralyze   50`
	.Status:Shrink     90`
	.Status:Stop       90`
	.Status:DefaultTurnMod    0`
	.Status:SleepTurnMod     -1`
	.Status:PoisonTurnMod     0`
	.Status:FrozenTurnMod     0`
	.Status:DizzyTurnMod     -1`
	.Status:FearTurnMod       0`
	.Status:StaticTurnMod     0`
	.Status:ParalyzeTurnMod   0`
	.Status:ShrinkTurnMod     0`
	.Status:StopTurnMod       0`
	.Status:End
}

#new:PartsTable $PartsTable_80220C14
{
	00800000 01000000 001600FF $IdleAnimations_80221CD4 $DefenseTable_80220B40 00000010 00000000 00F60000 00000000
}

#new:Actor $HyperCleft
{
	% stats
	[Index]        1Db
	[Level]        15`b
	[MaxHP]         4`b
	[Coins]         2`b
	[Flags]       00000000
	[StatusTable] $StatusTable_80220B68
	% ai
	[PartsCount]    1`s
	[PartsTable]  $PartsTable_80220C14
	[Script]      $Script_Init_80220CAC
	% move effectiveness
	[Escape]       70`b
	[Item]         30`b
	[AirLift]      30`b
	[Hurricane]    30`b % Bow's "Spook" as well
	[UpAndAway]    95`b
	[PowerBounce]  95`b
	[SpinSmash]     0`b % weight (0-4)
	% ui positions
	[Size]         44`b  36`b % width height
	[HealthBar]     0`b   0`b % dx dy
	[StatusTurn]  -10`b  20`b % dx dy
	[StatusIcon]   10`b  20`b % dx dy
}

#new:IdleAnimations $IdleAnimations_80220C60
{
	.Status:Normal    00300104
	.Status:Stone     00300100
	.Status:Sleep     0030010C
	.Status:Poison    00300104
	.Status:Stop      00300100
	.Status:Static    00300104
	.Status:Paralyze  00300100
	.Status:Dizzy     0030010E
	.Status:Fear      0030010E
	.Status:End
}

#new:Script $Script_Init_80220CAC
{
    0:  Call  BindIdle      ( .Actor:Self $Script_Idle_80221DD0 )
   14:  Call  BindHandleEvent   ( .Actor:Self $Script_HandleEvent_80222140 )
   28:  Call  BindTakeTurn  ( .Actor:Self $Script_TakeTurn_80221A58 )
   3C:  Call  BindNextTurn  ( .Actor:Self $Script_NextTurn_80220D3C )
   50:  Call  SetActorVar   ( .Actor:Self 00000000 00000000 )
   68:  Call  SetActorVar   ( .Actor:Self 00000002 00000000 )
   80:  Return
   88:  End
}

#new:Script $Script_NextTurn_80220D3C
{
    0:  Call  GetBattlePhase    ( *Var0 )
   10:  Switch  *Var0
   1C:  	Case  ==  0000000A
   28:  	Case  ==  0000000C
   34:  	Case  ==  0000000B
   40:  		Call  SetBattleVar  ( 00000001 00000000 )
   54:  		Call  SetActorVar   ( .Actor:Self 00000002 00000001 )
   6C:  EndSwitch
   74:  Return
   7C:  End
}

#new:Script $Script_80220DC0
{
    0:  Call  UseIdleAnimation  ( .Actor:Self .False )
   14:  Call  EnableIdleScript  ( .Actor:Self 00000000 )
   28:  Call  SetTargetActor    ( .Actor:Self .Actor:Player )
   3C:  Call  GetActorVar       ( .Actor:Self 00000000 *Var0 )
   54:  If  *Var0  ==  00000000
   64:  	Call  UseBattleCamPreset    ( 0000000E )
   74:  	Call  BattleCamTargetActor  ( .Actor:Self )
   84:  	Call  MoveBattleCamOver (  20` )
   94:  	Wait  20`
   A0:  	Call  PlaySoundAtActor  ( .Actor:Self .Sound:PowerUp )
   B4:  	Call  GetActorPos       ( .Actor:Self *Var0 *Var1 *Var2 )
   D0:  	Add   *Var1  0000000A
   E0:  	Call  PlayEffect        ( ~FX:EnergyIn:LongStreaks1 *Var0 *Var1 *Var2 *Fixed[1.0] 0000002D 00000000 00000000 00000000 00000000 00000000 00000000 00000000 )
  124:  	Call  SetAnimation      ( .Actor:Self 00000001 00300104 )
  13C:  	Wait  30`
  148:  	Call  UseBattleCamPreset    ( 00000002 )
  158:  	Call  MoveBattleCamOver (  20` )
  168:  	Call  SetActorJumpGravity   ( .Actor:Self *Fixed[1.0] )
  17C:  	Call  GetActorPos       ( .Actor:Self *Var0 *Var1 *Var2 )
  198:  	Call  SetGoalPos        ( .Actor:Self *Var0 *Var1 *Var2 )
  1B4:  	Call  JumpToGoal        ( .Actor:Self  15` .False .True .False )
  1D4:  	Call  $Function_802185C0    ( 000000C8 0000000A )
  1E8:  	Thread
  1F0:  		Call  ShakeCam  ( .Cam:Battle 00000000  5` *Fixed[1.5] )
  20C:  	EndThread
  214:  	Call  PlaySoundAtActor  ( .Actor:Self 000002D9 )
  228:  	Call  PlayEffect        ( ~FX:Steam:LargeOutward *Var0 *Var1 *Var2 00000000 00000000 00000000 00000000 00000000 00000000 00000000 00000000 00000000 )
  26C:  	Thread
  274:  		Call  ShakeCam  ( .Cam:Battle 00000000  5` *Fixed[1.0] )
  290:  	EndThread
  298:  	Call  SetActorVar       ( .Actor:Self 00000000 00000002 )
  2B0:  	Call  SetIdleAnimations ( .Actor:Self 00000001 $IdleAnimations_80220C60 )
  2C8:  	Call  EnableActorGlow   ( .Actor:Self .True )
  2DC:  	Call  SetPartEventBits  ( .Actor:Self 00000001 00400000 .True )
  2F8:  	Call  EnableIdleScript  ( .Actor:Self 00000001 )
  30C:  	Call  UseIdleAnimation  ( .Actor:Self .True )
  320:  	Return
  328:  EndIf
  330:  Call  UseBattleCamPreset    ( 0000003F )
  340:  Call  BattleCamTargetActor  ( .Actor:Self )
  350:  Call  8024ECF8  ( FFFFFFFF 00000001 00000000 )
  368:  Call  MoveBattleCamOver     (  30` )
  378:  Loop  00000014
  384:  	Call  SetActorDispOffset    ( .Actor:Self 00000001 00000000 00000000 )
  3A0:  	Wait  1`
  3AC:  	Call  SetActorDispOffset    ( .Actor:Self FFFFFFFF 00000000 00000000 )
  3C8:  	Wait  1`
  3D4:  EndLoop
  3DC:  Call  SetActorDispOffset    ( .Actor:Self 00000000 00000000 00000000 )
  3F8:  Call  PlaySoundAtActor  ( .Actor:Self 000002DA )
  40C:  Call  SetActorSounds    ( .Actor:Self .ActorSound:Walk 00000000 00000000 )
  428:  Call  EnemyTestTarget   ( .Actor:Self *Var0 ~Flags:DamageType:0 00000000 00000003 00000010 )
  44C:  Switch  *Var0
  458:  	CaseOR  ==  .HitResult:Miss % 6
  464:  	CaseOR  ==  .HitResult:Lucky % 5
  470:  		Set   *VarA  *Var0
  480:  		Thread
  488:  			Loop
  494:  				Call  GetActorPos   ( .Actor:Player *Var0 *Var1 *Var2 )
  4B0:  				Add   *Var0  0000001E
  4C0:  				Call  GetActorPos   ( .Actor:Self *Var3 *Var4 *Var5 )
  4DC:  				If  *Var0  >  *Var3
  4EC:  					BreakLoop
  4F4:  				EndIf
  4FC:  				Wait  1`
  508:  			EndLoop
  510:  			Call  UseBattleCamPreset    ( 00000001 )
  520:  			If  *VarA  ==  .HitResult:Lucky % 5
  530:  				Call  EnemyTestTarget   ( .Actor:Self *Var0 ~Flags:DamageType:TriggerLucky 00000000 00000000 00000000 )
  554:  			EndIf
  55C:  			Wait  15`
  568:  			Call  UseBattleCamPreset    ( 00000002 )
  578:  		EndThread
  580:  		Thread
  588:  			Loop  0000001E
  594:  				Call  GetActorPos   ( .Actor:Self *Var0 *Var1 *Var2 )
  5B0:  				Call  PlayEffect    ( ~FX:Steam:Ring *Var0 *Var1 *Var2 00000000 00000000 00000000 00000000 00000000 00000000 00000000 00000000 00000000 )
  5F4:  				Wait  1`
  600:  			EndLoop
  608:  		EndThread
  610:  		Call  SetAnimation  ( .Actor:Self 00000001 00300111 )
  628:  		Call  SetGoalToTarget   ( .Actor:Self )
  638:  		Call  AddGoalPos    ( .Actor:Self  -200`  0`  0` )
  654:  		Call  SetActorSpeed ( .Actor:Self *Fixed[12.0] )
  668:  		Call  RunToGoal     ( .Actor:Self  0` .False )
  680:  		Wait  15`
  68C:  		Call  EnableActorGlow   ( .Actor:Self .False )
  6A0:  		Call  SetPartEventBits  ( .Actor:Self 00000001 00400000 .False )
  6BC:  		Call  YieldTurn ( )
  6C8:  		Call  ResetAllActorSounds   ( .Actor:Self )
  6D8:  		Call  SetActorPos   ( .Actor:Self  300`  0`  0` )
  6F4:  		Call  AddActorDecoration    ( .Actor:Self 00000001 00000000 .Decoration:Sweat )
  710:  		Call  SetAnimation  ( .Actor:Self 00000001 00300107 )
  728:  		Call  SetGoalToHome ( .Actor:Self )
  738:  		Call  SetActorSpeed ( .Actor:Self *Fixed[8.0] )
  74C:  		Call  RunToGoal     ( .Actor:Self  0` .False )
  764:  		Call  SetAnimation  ( .Actor:Self 00000001 00300102 )
  77C:  		Call  RemoveActorDecoration ( .Actor:Self 00000001 00000000 )
  794:  		Call  SetActorVar   ( .Actor:Self 00000000 00000000 )
  7AC:  		Call  SetIdleAnimations ( .Actor:Self 00000001 $IdleAnimations_80221CD4 )
  7C4:  		Call  EnableIdleScript  ( .Actor:Self 00000001 )
  7D8:  		Call  UseIdleAnimation  ( .Actor:Self .True )
  7EC:  		Return
  7F4:  	EndCaseGroup
  7FC:  EndSwitch
  804:  Thread
  80C:  	Loop  00000019
  818:  		Call  GetActorPos   ( .Actor:Self *Var0 *Var1 *Var2 )
  834:  		Call  PlayEffect    ( ~FX:Steam:Ring *Var0 *Var1 *Var2 00000000 00000000 00000000 00000000 00000000 00000000 00000000 00000000 00000000 )
  878:  		Wait  1`
  884:  	EndLoop
  88C:  EndThread
  894:  Call  SetAnimation      ( .Actor:Self 00000001 00300111 )
  8AC:  Call  SetGoalToTarget   ( .Actor:Self )
  8BC:  Call  SetActorSpeed     ( .Actor:Self *Fixed[12.0] )
  8D0:  Call  RunToGoal ( .Actor:Self  0` .False )
  8E8:  Call  ResetAllActorSounds   ( .Actor:Self )
  8F8:  Wait  2`
  904:  Call  SetGoalToTarget   ( .Actor:Self )
  914:  Call  EnemyDamageTarget ( .Actor:Self *Var0 ~Flags:DamageType:0 00000000 00000000 00000008 00000020 )
  93C:  Switch  *Var0
  948:  	CaseOR  ==  .HitResult:Hit % 0
  954:  	CaseOR  ==  .HitResult:QuakeImmune % 2
  960:  		Call  UseBattleCamPreset    ( 00000002 )
  970:  		Thread
  978:  			Call  SetActorRotationOffset    ( .Actor:Self 00000000 00000010 00000000 )
  994:  			Set   *Var0  00000000
  9A4:  			Loop  0000003C
  9B0:  				Add   *Var0  00000012
  9C0:  				Call  SetActorRotation  ( .Actor:Self 00000000 00000000 *Var0 )
  9DC:  				Wait  1`
  9E8:  			EndLoop
  9F0:  			Call  SetActorRotationOffset    ( .Actor:Self 00000000 00000000 00000000 )
  A0C:  			Call  SetActorRotation  ( .Actor:Self 00000000 00000000 00000000 )
  A28:  		EndThread
  A30:  		Call  SetActorJumpGravity   ( .Actor:Self *Fixed[1.0] )
  A44:  		Call  GetActorPos   ( .Actor:Self *Var0 *Var1 *Var2 )
  A60:  		Sub   *Var0  00000032
  A70:  		Call  SetGoalPos    ( .Actor:Self *Var0 *Var1 *Var2 )
  A8C:  		Call  JumpToGoal    ( .Actor:Self  30` .False .True .False )
  AAC:  		Sub   *Var0  00000028
  ABC:  		Call  SetGoalPos    ( .Actor:Self *Var0 *Var1 *Var2 )
  AD8:  		Call  JumpToGoal    ( .Actor:Self  20` .False .True .False )
  AF8:  		Sub   *Var0  0000001E
  B08:  		Call  SetGoalPos    ( .Actor:Self *Var0 *Var1 *Var2 )
  B24:  		Call  JumpToGoal    ( .Actor:Self  10` .False .True .False )
  B44:  		Wait  20`
  B50:  		Call  YieldTurn ( )
  B5C:  		Call  EnableActorGlow   ( .Actor:Self .False )
  B70:  		Call  SetPartEventBits  ( .Actor:Self 00000001 00400000 .False )
  B8C:  		Call  SetActorYaw   ( .Actor:Self  180` )
  BA0:  		Call  SetAnimation  ( .Actor:Self 00000001 00300107 )
  BB8:  		Call  SetActorSpeed ( .Actor:Self *Fixed[8.0] )
  BCC:  		Call  SetGoalToHome ( .Actor:Self )
  BDC:  		Call  RunToGoal     ( .Actor:Self  0` .False )
  BF4:  		Call  SetAnimation  ( .Actor:Self 00000001 00300102 )
  C0C:  		Call  SetActorYaw   ( .Actor:Self  0` )
  C20:  		Call  SetActorVar   ( .Actor:Self 00000000 00000000 )
  C38:  		Call  SetIdleAnimations ( .Actor:Self 00000001 $IdleAnimations_80221CD4 )
  C50:  	EndCaseGroup
  C58:  EndSwitch
  C60:  Call  EnableIdleScript  ( .Actor:Self 00000001 )
  C74:  Call  UseIdleAnimation  ( .Actor:Self .True )
  C88:  Return
  C90:  End
}

#new:Script $Script_TakeTurn_80221A58
{
    0:  Call  GetBattlePhase    ( *Var0 )
   10:  If  *Var0  ==  00000001
   20:  	Call  SetBattleVar  ( 00000001 00000001 )
   34:  	ExecWait  $Script_80223310
   40:  	Return
   48:  EndIf
   50:  Call  GetActorVar   ( .Actor:Self 00000000 *Var0 )
   68:  If  *Var0  ==  00000001
   78:  	ExecWait  $Script_80222F1C
   84:  	Return
   8C:  EndIf
   94:  Call  GetActorVar   ( .Actor:Self 00000000 *Var0 )
   AC:  If  *Var0  ==  00000002
   BC:  	ExecWait  $Script_80220DC0
   C8:  	Return
   D0:  EndIf
   D8:  Call  GetBattleVar  ( 00000001 *Var0 )
   EC:  Switch  *Var0
   F8:  	Case  ==  00000000
  104:  		Call  GetActorVar   ( .Actor:Self 00000002 *Var0 )
  11C:  		If  *Var0  ==  00000000
  12C:  			Call  RandInt   ( 000003E8 *Var0 )
  140:  			If  *Var0  <  000002EE
  150:  				Call  SetBattleVar  ( 00000001 00000002 )
  164:  				ExecWait  $Script_80220DC0
  170:  			Else
  178:  				Call  SetBattleVar  ( 00000001 00000001 )
  18C:  				ExecWait  $Script_80223310
  198:  			EndIf
  1A0:  		Else
  1A8:  			Call  RandInt   ( 000003E8 *Var0 )
  1BC:  			If  *Var0  <  000001F4
  1CC:  				Call  SetBattleVar  ( 00000001 00000002 )
  1E0:  				ExecWait  $Script_80220DC0
  1EC:  			Else
  1F4:  				Call  SetBattleVar  ( 00000001 00000001 )
  208:  				ExecWait  $Script_80223310
  214:  			EndIf
  21C:  		EndIf
  224:  	Case  ==  00000001
  230:  		ExecWait  $Script_80223310
  23C:  		Return
  244:  	Case  ==  00000002
  250:  		ExecWait  $Script_80220DC0
  25C:  		Return
  264:  EndSwitch
  26C:  Return
  274:  End
}

#new:IdleAnimations $IdleAnimations_80221CD4
{
	.Status:Normal    00300102
	.Status:Stone     00300100
	.Status:Sleep     0030010C
	.Status:Poison    00300102
	.Status:Stop      00300100
	.Status:Static    00300102
	.Status:Paralyze  00300100
	.Status:Dizzy     0030010E
	.Status:Fear      0030010E
	.Status:End
}

#new:IdleAnimations $IdleAnimations_80221D20
{
	.Status:Normal    00300105
	.Status:Stone     00300101
	.Status:Sleep     0030010D
	.Status:Poison    00300105
	.Status:Stop      00300101
	.Status:Static    00300105
	.Status:Paralyze  00300101
	.Status:Dizzy     0030010F
	.Status:Fear      0030010F
	.Status:End
}

% Origin: HEURISTIC
#new:Script $Script_80221D6C
{
    0:  Call  BindIdle      ( .Actor:Self $Script_Idle_80221DD0 )
   14:  Call  BindTakeTurn  ( .Actor:Self $Script_TakeTurn_80223B5C )
   28:  Call  BindHandleEvent   ( .Actor:Self $Script_HandleEvent_80222140 )
   3C:  Call  SetActorVar   ( .Actor:Self 00000000 00000000 )
   54:  Return
   5C:  End
}

#new:Script $Script_Idle_80221DD0
{
    0:  Return
    8:  End
}

#new:Script $Script_80221DE0
{
    0:  Call  SetActorVar   ( .Actor:Self 00000000 00000001 )
   18:  Call  SetActorVar   ( .Actor:Self 00000001 00000002 )
   30:  Call  SetAnimation  ( .Actor:Self 00000001 00300107 )
   48:  Call  SetActorRotationOffset    ( .Actor:Self 00000000 00000010 00000000 )
   64:  Thread
   6C:  	Set   *Var0  00000000
   7C:  	Loop  00000005
   88:  		Add   *Var0  FFFFFFDC
   98:  		Call  SetActorRotation  ( .Actor:Self 00000000 00000000 *Var0 )
   B4:  		Wait  1`
   C0:  	EndLoop
   C8:  EndThread
   D0:  Call  GetActorPos   ( .Actor:Self *Var0 *Var1 *Var2 )
   EC:  Call  SetActorJumpGravity   ( .Actor:Self *Fixed[1.3] )
  100:  Sub   *Var1  00000006
  110:  Call  SetGoalPos    ( .Actor:Self *Var0 *Var1 *Var2 )
  12C:  Call  JumpToGoal    ( .Actor:Self  20` .False .True .False )
  14C:  Call  $Function_802185C0    ( 000000C8 0000000A )
  160:  Thread
  168:  	Call  ShakeCam  ( .Cam:Battle 00000000  5` *Fixed[1.0] )
  184:  EndThread
  18C:  Call  PlayEffect        ( ~FX:SmokeImpact:Large *Var0 *Var1 *Var2 00000028 00000008 *Fixed[0.0] 00000014 00000000 00000000 00000000 00000000 00000000 )
  1D0:  Call  SetActorPos       ( .Actor:Self *Var0  0` *Var2 )
  1EC:  Call  SetActorRotationOffset    ( .Actor:Self 00000000 00000000 00000000 )
  208:  Call  SetActorRotation  ( .Actor:Self 00000000 00000000 00000000 )
  224:  Call  SetAnimation      ( .Actor:Self 00000001 00300103 )
  23C:  Call  SetIdleAnimations ( .Actor:Self 00000001 $IdleAnimations_80221D20 )
  254:  Call  SetDefenseTable   ( .Actor:Self 00000001 $DefenseTable_80220B54 )
  26C:  Call  SetTargetOffset   ( .Actor:Self 00000001  0`  15` )
  288:  Call  8027D4C8  ( FFFFFF81 00000001 00000000 FFFFFFF9 )
  2A4:  Call  SetPartEventBits  ( .Actor:Self 00000001 00000010 .False )
  2C0:  Call  $Function_80218618        ( 00000000 )
  2D0:  Call  SetActorFlagBits  ( .Actor:Self 00000400 .True )
  2E8:  Call  SetActorRotationOffset    ( .Actor:Self 00000000 00000000 00000000 )
  304:  Call  SetActorRotation  ( .Actor:Self 00000000 00000000 00000000 )
  320:  Call  EnableActorGlow   ( .Actor:Self .False )
  334:  Call  SetPartEventBits  ( .Actor:Self 00000001 00400000 .False )
  350:  Return
  358:  End
}

#new:Script $Script_HandleEvent_80222140
{
    0:  Call  UseIdleAnimation  ( .Actor:Self .False )
   14:  Call  EnableIdleScript  ( .Actor:Self 00000000 )
   28:  Call  GetLastEvent      ( .Actor:Self *Var0 )
   3C:  Switch  *Var0
   48:  	CaseOR  ==  .Event:HitCombo % 9
   54:  	CaseOR  ==  .Event:Hit % A
   60:  		Call  GetLastElement    ( *Var0 )
   70:  		Switch  *Var0
   7C:  			Case  &  00000200
   88:  				ExecWait  $Script_80221DE0
   94:  			Default
   9C:  				Call  GetActorVar   ( .Actor:Self 00000000 *Var0 )
   B4:  				If  *Var0  ==  00000001
   C4:  					SetConst  *Var1  00300109
   D4:  				Else
   DC:  					SetConst  *Var1  00300108
   EC:  				EndIf
   F4:  				SetConst  *Var0  00000001
  104:  				ExecWait  DoNormalHit
  110:  		EndSwitch
  118:  	EndCaseGroup
  120:  	Case  ==  .Event:BurnHit % E
  12C:  		Call  GetLastElement    ( *Var0 )
  13C:  		Switch  *Var0
  148:  			Case  &  00000200
  154:  				ExecWait  $Script_80221DE0
  160:  			Default
  168:  				Call  SetPartEventBits  ( .Actor:Self 00000001 00000200 .True )
  184:  				Call  GetActorVar       ( .Actor:Self 00000000 *Var0 )
  19C:  				If  *Var0  ==  00000001
  1AC:  					SetConst  *Var0  00000001
  1BC:  					SetConst  *Var1  00300109
  1CC:  					SetConst  *Var2  FFFFFFFF
  1DC:  					ExecWait  DoBurnHit
  1E8:  				Else
  1F0:  					SetConst  *Var0  00000001
  200:  					SetConst  *Var1  00300108
  210:  					SetConst  *Var2  FFFFFFFF
  220:  					ExecWait  DoBurnHit
  22C:  				EndIf
  234:  				Call  SetPartEventBits  ( .Actor:Self 00000001 00000200 .False )
  250:  		EndSwitch
  258:  	Case  ==  .Event:BurnDeath % 24
  264:  		Call  GetActorVar   ( .Actor:Self 00000000 *Var0 )
  27C:  		If  *Var0  ==  00000001
  28C:  			SetConst  *Var0  00000001
  29C:  			SetConst  *Var1  00300109
  2AC:  			SetConst  *Var2  FFFFFFFF
  2BC:  			ExecWait  DoBurnHit
  2C8:  			SetConst  *Var0  00000001
  2D8:  			SetConst  *Var1  00300109
  2E8:  			ExecWait  DoDeath
  2F4:  		Else
  2FC:  			SetConst  *Var0  00000001
  30C:  			SetConst  *Var1  00300108
  31C:  			SetConst  *Var2  FFFFFFFF
  32C:  			ExecWait  DoBurnHit
  338:  			SetConst  *Var0  00000001
  348:  			SetConst  *Var1  00300108
  358:  			ExecWait  DoDeath
  364:  		EndIf
  36C:  		Return
  374:  	Case  ==  .Event:SpinSmashHit % B
  380:  		Call  GetActorVar   ( .Actor:Self 00000000 *Var0 )
  398:  		If  *Var0  ==  00000001
  3A8:  			SetConst  *Var1  00300109
  3B8:  		Else
  3C0:  			SetConst  *Var1  00300108
  3D0:  		EndIf
  3D8:  		SetConst  *Var0  00000001
  3E8:  		ExecWait  DoSpinSmashHit
  3F4:  	Case  ==  .Event:SpinSmashDeath % 21
  400:  		Call  GetActorVar   ( .Actor:Self 00000000 *Var0 )
  418:  		If  *Var0  ==  00000001
  428:  			SetConst  *Var0  00000001
  438:  			SetConst  *Var1  00300109
  448:  			ExecWait  DoSpinSmashHit
  454:  			SetConst  *Var0  00000001
  464:  			SetConst  *Var1  00300109
  474:  			ExecWait  DoDeath
  480:  		Else
  488:  			SetConst  *Var0  00000001
  498:  			SetConst  *Var1  00300108
  4A8:  			ExecWait  DoSpinSmashHit
  4B4:  			SetConst  *Var0  00000001
  4C4:  			SetConst  *Var1  00300108
  4D4:  			ExecWait  DoDeath
  4E0:  		EndIf
  4E8:  		Return
  4F0:  	Case  ==  .Event:ShockHit % 2F
  4FC:  		Call  SetActorRotationOffset    ( .Actor:Self 00000000 00000000 00000000 )
  518:  		Call  SetActorRotation  ( .Actor:Self 00000000 00000000 00000000 )
  534:  		Call  EnableActorGlow   ( .Actor:Self .False )
  548:  		Call  SetPartEventBits  ( .Actor:Self 00000001 00400000 .False )
  564:  		Call  SetActorVar       ( .Actor:Self 00000000 00000000 )
  57C:  		Call  SetIdleAnimations ( .Actor:Self 00000001 $IdleAnimations_80221CD4 )
  594:  		SetConst  *Var0  00000001
  5A4:  		SetConst  *Var1  00300108
  5B4:  		ExecWait  DoShockHit
  5C0:  		SetConst  *Var0  00000001
  5D0:  		SetConst  *Var1  00300108
  5E0:  		ExecWait  DoJumpBack
  5EC:  		Call  JumpToGoal        ( .Actor:Self  5` .False .True .False )
  60C:  		SetConst  *Var0  00000001
  61C:  		SetConst  *Var1  00300107
  62C:  		ExecWait  DoReturnHome
  638:  		Call  SetActorJumpGravity       ( .Actor:Self *Fixed[1.6] )
  64C:  		Call  JumpToGoal        ( .Actor:Self  5` .False .True .False )
  66C:  	Case  ==  .Event:ShockDeath % 26
  678:  		Call  SetActorRotationOffset    ( .Actor:Self 00000000 00000000 00000000 )
  694:  		Call  SetActorRotation  ( .Actor:Self 00000000 00000000 00000000 )
  6B0:  		Call  EnableActorGlow   ( .Actor:Self .False )
  6C4:  		Call  SetPartEventBits  ( .Actor:Self 00000001 00400000 .False )
  6E0:  		Call  SetActorVar       ( .Actor:Self 00000000 00000000 )
  6F8:  		Call  SetIdleAnimations ( .Actor:Self 00000001 $IdleAnimations_80221CD4 )
  710:  		SetConst  *Var0  00000001
  720:  		SetConst  *Var1  00300108
  730:  		ExecWait  DoShockHit
  73C:  		SetConst  *Var0  00000001
  74C:  		SetConst  *Var1  00300108
  75C:  		ExecWait  DoDeath
  768:  		Return
  770:  	Case  ==  .Event:StarBeam % 13
  77C:  		Call  GetActorVar   ( .Actor:Self 00000000 *Var0 )
  794:  		If  *Var0  ==  00000002
  7A4:  			Call  SetActorRotationOffset    ( .Actor:Self 00000000 00000000 00000000 )
  7C0:  			Call  SetActorRotation  ( .Actor:Self 00000000 00000000 00000000 )
  7DC:  			Call  EnableActorGlow   ( .Actor:Self .False )
  7F0:  			Call  SetPartEventBits  ( .Actor:Self 00000001 00400000 .False )
  80C:  			Call  SetActorVar       ( .Actor:Self 00000000 00000000 )
  824:  			Call  SetIdleAnimations ( .Actor:Self 00000001 $IdleAnimations_80221CD4 )
  83C:  		EndIf
  844:  		Call  GetActorVar   ( .Actor:Self 00000000 *Var0 )
  85C:  		If  *Var0  ==  00000001
  86C:  			SetConst  *Var1  00300103
  87C:  		Else
  884:  			SetConst  *Var1  00300102
  894:  		EndIf
  89C:  		SetConst  *Var0  00000001
  8AC:  		ExecWait  DoImmune
  8B8:  	Case  ==  .Event:SpikeTaunt % 1B
  8C4:  		Call  GetStatusFlags    ( .Actor:Self *Var0 )
  8D8:  		If  *Var0  !&  ~Flags:StatusFlags:Sleep|Frozen|Fear|Paralyze|Dizzy|Stone|Stop % 35D000
  8E8:  			Call  SetAnimation  ( .Actor:Self 00000001 00300118 )
  900:  		EndIf
  908:  		Wait  10`
  914:  		Call  GetActorPos       ( .Actor:Self *Var0 *Var1 *Var2 )
  930:  		Call  GetStatusFlags    ( .Actor:Self *Var3 )
  944:  		If  *Var3  &  ~Flags:StatusFlags:Shrink % 80000
  954:  			Add   *Var0  FFFFFFFD
  964:  			Add   *Var1  0000000A
  974:  		Else
  97C:  			Add   *Var0  FFFFFFF8
  98C:  			Add   *Var1  0000001B
  99C:  		EndIf
  9A4:  		Call  PlayEffect    ( ~FX:LensFlare:Rotating *Var0 *Var1 *Var2 00000014 00000000 00000000 00000000 00000000 00000000 00000000 00000000 00000000 )
  9E8:  		Wait  20`
  9F4:  	CaseOR  ==  00000017 % 17
  A00:  	CaseOR  ==  .Event:Immune % 19
  A0C:  	CaseOR  ==  .Event:AirLiftFailed % 1F
  A18:  		Call  GetActorVar   ( .Actor:Self 00000000 *Var0 )
  A30:  		If  *Var0  ==  00000001
  A40:  			SetConst  *Var1  00300103
  A50:  		Else
  A58:  			SetConst  *Var1  00300102
  A68:  		EndIf
  A70:  		SetConst  *Var0  00000001
  A80:  		ExecWait  DoImmune
  A8C:  	EndCaseGroup
  A94:  	Case  ==  .Event:Death % 20
  AA0:  		Call  GetActorVar   ( .Actor:Self 00000000 *Var0 )
  AB8:  		If  *Var0  ==  00000001
  AC8:  			SetConst  *Var0  00000001
  AD8:  			SetConst  *Var1  00300109
  AE8:  			ExecWait  DoNormalHit
  AF4:  			Wait  10`
  B00:  			SetConst  *Var0  00000001
  B10:  			SetConst  *Var1  00300109
  B20:  			ExecWait  DoDeath
  B2C:  		Else
  B34:  			SetConst  *Var0  00000001
  B44:  			SetConst  *Var1  00300108
  B54:  			ExecWait  DoNormalHit
  B60:  			Wait  10`
  B6C:  			SetConst  *Var0  00000001
  B7C:  			SetConst  *Var1  00300108
  B8C:  			ExecWait  DoDeath
  B98:  		EndIf
  BA0:  		Return
  BA8:  	Case  ==  .Event:RecoverStatus % 31
  BB4:  		Call  GetActorVar   ( .Actor:Self 00000000 *Var0 )
  BCC:  		If  *Var0  ==  00000000
  BDC:  			SetConst  *Var0  00000001
  BEC:  			SetConst  *Var1  00300102
  BFC:  			ExecWait  DoRecover
  C08:  		EndIf
  C10:  	Case  ==  .Event:ScareAway % 39
  C1C:  		Call  GetActorVar   ( .Actor:Self 00000000 *Var0 )
  C34:  		If  *Var0  ==  00000001
  C44:  			SetConst  *Var0  00000001
  C54:  			SetConst  *Var1  00300103
  C64:  			ExecWait  DoImmune
  C70:  		Else
  C78:  			SetConst  *Var0  00000001
  C88:  			SetConst  *Var1  00300107
  C98:  			SetConst  *Var2  00300108
  CA8:  			ExecWait  DoScareAway
  CB4:  			Return
  CBC:  		EndIf
  CC4:  	Case  ==  .Event:BeginAirLift % 3A
  CD0:  		SetConst  *Var0  00000001
  CE0:  		SetConst  *Var1  0030010F
  CF0:  		ExecWait  DoAirLift
  CFC:  	Case  ==  .Event:BlowAway % 16
  D08:  		Call  GetActorVar   ( .Actor:Self 00000000 *Var0 )
  D20:  		If  *Var0  ==  00000001
  D30:  			SetConst  *Var0  00000001
  D40:  			SetConst  *Var1  0030010F
  D50:  		Else
  D58:  			SetConst  *Var0  00000001
  D68:  			SetConst  *Var1  00300108
  D78:  		EndIf
  D80:  		ExecWait  DoBlowAway
  D8C:  		Return
  D94:  	Default
  D9C:  EndSwitch
  DA4:  Call  EnableIdleScript  ( .Actor:Self 00000001 )
  DB8:  Call  UseIdleAnimation  ( .Actor:Self .True )
  DCC:  Return
  DD4:  End
}

#new:Script $Script_80222F1C
{
    0:  Call  UseIdleAnimation  ( .Actor:Self .False )
   14:  Call  EnableIdleScript  ( .Actor:Self 00000000 )
   28:  Call  AddActorDecoration    ( .Actor:Self 00000001 00000000 .Decoration:Sweat )
   44:  Call  SetAnimationRate  ( .Actor:Self 00000001 *Fixed[3.0] )
   5C:  Call  SetAnimation      ( .Actor:Self 00000001 00300103 )
   74:  Wait  20`
   80:  Call  SetAnimationRate  ( .Actor:Self 00000001 *Fixed[1.0] )
   98:  Call  SetAnimation      ( .Actor:Self 00000001 00300105 )
   B0:  Call  RemoveActorDecoration ( .Actor:Self 00000001 00000000 )
   C8:  Call  GetActorVar       ( .Actor:Self 00000001 *Var0 )
   E0:  If  *Var0  >  00000000
   F0:  	Sub   *Var0  00000001
  100:  	Call  SetActorVar   ( .Actor:Self 00000001 *Var0 )
  118:  Else
  120:  	Call  SetActorRotationOffset    ( .Actor:Self 00000000 00000010 00000000 )
  13C:  	Call  SetAnimation  ( .Actor:Self 00000001 00300103 )
  154:  	Thread
  15C:  		Wait  3`
  168:  		Loop  00000005
  174:  			Add   *Var0  00000024
  184:  			Call  SetActorRotation  ( .Actor:Self 00000000 00000000 *Var0 )
  1A0:  			Wait  1`
  1AC:  		EndLoop
  1B4:  	EndThread
  1BC:  	Call  GetActorPos   ( .Actor:Self *Var0 *Var1 *Var2 )
  1D8:  	Sub   *Var1  00000006
  1E8:  	Call  SetActorJumpGravity   ( .Actor:Self *Fixed[1.3] )
  1FC:  	Call  SetGoalPos    ( .Actor:Self *Var0 *Var1 *Var2 )
  218:  	Call  JumpToGoal    ( .Actor:Self  10` .False .True .False )
  238:  	Call  $Function_802185C0    ( 000000C8 0000000A )
  24C:  	Thread
  254:  		Call  ShakeCam  ( .Cam:Battle 00000000  5` *Fixed[1.0] )
  270:  	EndThread
  278:  	Call  SetActorRotationOffset    ( .Actor:Self 00000000 00000000 00000000 )
  294:  	Call  SetActorRotation  ( .Actor:Self 00000000 00000000 00000000 )
  2B0:  	Call  SetActorPos       ( .Actor:Self *Var0  0` *Var2 )
  2CC:  	Call  SetActorVar       ( .Actor:Self 00000000 00000000 )
  2E4:  	Call  SetAnimation      ( .Actor:Self 00000001 00300102 )
  2FC:  	Call  SetIdleAnimations ( .Actor:Self 00000001 $IdleAnimations_80221CD4 )
  314:  	Call  SetDefenseTable   ( .Actor:Self 00000001 $DefenseTable_80220B40 )
  32C:  	Call  SetTargetOffset   ( .Actor:Self 00000001  0`  22` )
  348:  	Call  8027D4C8  ( FFFFFF81 00000001 00000000 FFFFFFF6 )
  364:  	Call  SetPartEventBits  ( .Actor:Self 00000001 00000010 .True )
  380:  	Wait  1`
  38C:  	Call  $Function_80218618        ( 00000001 )
  39C:  	Call  SetActorFlagBits  ( .Actor:Self 00000400 .False )
  3B4:  EndIf
  3BC:  Call  EnableIdleScript  ( .Actor:Self 00000001 )
  3D0:  Call  UseIdleAnimation  ( .Actor:Self .True )
  3E4:  Return
  3EC:  End
}

#new:Script $Script_80223310
{
    0:  Call  UseIdleAnimation  ( .Actor:Self .False )
   14:  Call  EnableIdleScript  ( .Actor:Self 00000000 )
   28:  Call  SetTargetActor    ( .Actor:Self .Actor:Player )
   3C:  Call  SetGoalToTarget   ( .Actor:Self )
   4C:  Call  UseBattleCamPreset    ( 0000003F )
   5C:  Call  BattleCamTargetActor  ( .Actor:Self )
   6C:  Call  8024ECF8  ( FFFFFFFF 00000001 00000000 )
   84:  Call  MoveBattleCamOver (  30` )
   94:  Thread
   9C:  	Call  GetActorPos   ( .Actor:Self *Var0 *Var1 *Var2 )
   B8:  	Call  PlayEffect    ( ~FX:SmokeImpact:Small *Var0 *Var1 *Var2 00000020 00000004 00000000 0000000A 00000000 00000000 00000000 00000000 00000000 )
   FC:  	Wait  10`
  108:  	Call  PlayEffect    ( ~FX:SmokeImpact:Small *Var0 *Var1 *Var2 00000020 00000004 00000000 0000000A 00000000 00000000 00000000 00000000 00000000 )
  14C:  	Wait  5`
  158:  	Call  PlayEffect    ( ~FX:SmokeImpact:Small *Var0 *Var1 *Var2 00000020 00000004 00000000 0000000A 00000000 00000000 00000000 00000000 00000000 )
  19C:  EndThread
  1A4:  Call  SetAnimation      ( .Actor:Self 00000001 00300110 )
  1BC:  Wait  10`
  1C8:  Call  SetTargetActor    ( .Actor:Self .Actor:Player )
  1DC:  Call  SetAnimation      ( .Actor:Self 00000001 00300111 )
  1F4:  Call  SetGoalToTarget   ( .Actor:Self )
  204:  Call  AddGoalPos        ( .Actor:Self  50`  0`  -5` )
  220:  Call  SetActorSpeed     ( .Actor:Self *Fixed[4.0] )
  234:  Call  RunToGoal ( .Actor:Self  0` .False )
  24C:  Call  SetAnimation      ( .Actor:Self 00000001 00300100 )
  264:  Wait  8`
  270:  Call  PlaySoundAtActor  ( .Actor:Self 000020D1 )
  284:  Call  SetActorSounds    ( .Actor:Self .ActorSound:Walk 00000000 00000000 )
  2A0:  Call  EnemyTestTarget   ( .Actor:Self *Var0 ~Flags:DamageType:0 00000000 00000003 00000010 )
  2C4:  Switch  *Var0
  2D0:  	CaseOR  ==  .HitResult:Miss % 6
  2DC:  	CaseOR  ==  .HitResult:Lucky % 5
  2E8:  		Set   *VarA  *Var0
  2F8:  		If  *VarA  ==  .HitResult:Lucky % 5
  308:  			Thread
  310:  				Wait  10`
  31C:  				Call  EnemyTestTarget   ( .Actor:Self *Var0 ~Flags:DamageType:TriggerLucky 00000000 00000000 00000000 )
  340:  			EndThread
  348:  		EndIf
  350:  		Call  SetAnimation  ( .Actor:Self 00000001 00300111 )
  368:  		Call  SetGoalToTarget       ( .Actor:Self )
  378:  		Call  GetGoalPos    ( .Actor:Self *Var0 *Var1 *Var2 )
  394:  		Sub   *Var0  00000064
  3A4:  		Set   *Var1  00000000
  3B4:  		Call  SetGoalPos    ( .Actor:Self *Var0 *Var1 *Var2 )
  3D0:  		Call  SetActorSpeed ( .Actor:Self *Fixed[8.0] )
  3E4:  		Call  RunToGoal     ( .Actor:Self  0` .False )
  3FC:  		Call  SetPartRotation       ( .Actor:Self 00000001 00000000 00000000 0000002D )
  41C:  		Call  SetAnimation  ( .Actor:Self 00000001 00300108 )
  434:  		Wait  15`
  440:  		Wait  8`
  44C:  		Call  ResetAllActorSounds   ( .Actor:Self )
  45C:  		Call  UseBattleCamPreset    ( 00000002 )
  46C:  		Call  YieldTurn ( )
  478:  		Call  SetPartRotation       ( .Actor:Self 00000001 00000000 00000000 00000000 )
  498:  		Call  SetActorYaw   ( .Actor:Self  180` )
  4AC:  		Call  AddActorDecoration    ( .Actor:Self 00000001 00000000 .Decoration:Sweat )
  4C8:  		Call  SetAnimation  ( .Actor:Self 00000001 00300107 )
  4E0:  		Call  SetGoalToHome ( .Actor:Self )
  4F0:  		Call  SetActorSpeed ( .Actor:Self *Fixed[8.0] )
  504:  		Call  RunToGoal     ( .Actor:Self  0` .False )
  51C:  		Call  SetAnimation  ( .Actor:Self 00000001 00300102 )
  534:  		Call  RemoveActorDecoration ( .Actor:Self 00000001 00000000 )
  54C:  		Call  SetActorYaw   ( .Actor:Self  0` )
  560:  		Call  EnableIdleScript      ( .Actor:Self 00000001 )
  574:  		Call  UseIdleAnimation      ( .Actor:Self .True )
  588:  		Return
  590:  	EndCaseGroup
  598:  EndSwitch
  5A0:  Call  SetAnimation  ( .Actor:Self 00000001 00300111 )
  5B8:  Call  GetActorPos   ( .Actor:Player *Var0 *Var1 *Var2 )
  5D4:  Add   *Var0  00000014
  5E4:  Call  SetGoalPos    ( .Actor:Self *Var0 *Var1 *Var2 )
  600:  Call  SetActorSpeed ( .Actor:Self *Fixed[8.0] )
  614:  Call  RunToGoal     ( .Actor:Self  0` .False )
  62C:  Call  ResetAllActorSounds   ( .Actor:Self )
  63C:  Wait  2`
  648:  Call  SetGoalToTarget       ( .Actor:Self )
  658:  Call  EnemyDamageTarget     ( .Actor:Self *Var0 ~Flags:DamageType:0 00000000 00000000 00000003 00000020 )
  680:  Call  SetAnimation  ( .Actor:Self 00000001 00300102 )
  698:  Call  UseBattleCamPreset    ( 00000002 )
  6A8:  Switch  *Var0
  6B4:  	CaseOR  ==  .HitResult:Hit % 0
  6C0:  	CaseOR  ==  .HitResult:QuakeImmune % 2
  6CC:  		Call  UseBattleCamPreset    ( 00000002 )
  6DC:  		Call  GetGoalPos    ( .Actor:Self *Var0 *Var1 *Var2 )
  6F8:  		Add   *Var0  0000000F
  708:  		Set   *Var1  00000000
  718:  		Call  SetActorJumpGravity   ( .Actor:Self *Fixed[2.4] )
  72C:  		Call  SetGoalPos    ( .Actor:Self *Var0 *Var1 *Var2 )
  748:  		Call  JumpToGoal    ( .Actor:Self  6` .False .True .False )
  768:  		Call  SetAnimation  ( .Actor:Self 00000001 00300102 )
  780:  		Wait  5`
  78C:  		Call  YieldTurn ( )
  798:  		Call  SetAnimation  ( .Actor:Self 00000001 00300107 )
  7B0:  		Call  SetActorSpeed ( .Actor:Self *Fixed[8.0] )
  7C4:  		Call  SetGoalToHome ( .Actor:Self )
  7D4:  		Call  RunToGoal     ( .Actor:Self  0` .False )
  7EC:  		Call  SetAnimation  ( .Actor:Self 00000001 00300102 )
  804:  	EndCaseGroup
  80C:  EndSwitch
  814:  Call  EnableIdleScript  ( .Actor:Self 00000001 )
  828:  Call  UseIdleAnimation  ( .Actor:Self .True )
  83C:  Return
  844:  End
}

% Origin: HEURISTIC
#new:Script $Script_TakeTurn_80223B5C
{
    0:  Call  GetActorVar   ( .Actor:Self 00000000 *Var0 )
   18:  If  *Var0  ==  00000001
   28:  	ExecWait  $Script_80222F1C
   34:  Else
   3C:  	ExecWait  $Script_80223310
   48:  EndIf
   50:  Return
   58:  End
}

PADDING: 80223BBC to 80223BC0 (0050A60C to 0050A610)
00000000

#new:IdleAnimations $IdleAnimations_80223BC0
{
	.Status:Normal    006C0001
	.Status:Stone     006C0000
	.Status:Sleep     006C0004
	.Status:Poison    006C0001
	.Status:Stop      006C0000
	.Status:Static    006C0000
	.Status:Paralyze  006C0000
	.Status:Paralyze  006C0000
	.Status:Dizzy     006C000D
	.Status:Dizzy     006C000D
	.Status:Fear      006C000A
	.Status:End
}

#new:IdleAnimations $IdleAnimations_80223C1C
{
	.Status:Normal    006C000B
	.Status:Stone     006C0000
	.Status:Sleep     006C0004
	.Status:Poison    006C000B
	.Status:Stop      006C0000
	.Status:Static    006C0000
	.Status:Paralyze  006C0000
	.Status:Paralyze  006C0000
	.Status:Dizzy     006C000D
	.Status:Dizzy     006C000D
	.Status:Fear      006C000A
	.Status:End
}

#new:DefenseTable $DefenseTable_80223C78
{
	.Element:Normal 00000000
	.Element:End
}

#new:StatusTable $StatusTable_80223C84
{
	.Status:Normal      0`
	.Status:Default     0`
	.Status:Sleep       0`
	.Status:Poison      0`
	.Status:Frozen      0`
	.Status:Dizzy       0`
	.Status:Fear        0`
	.Status:Static      0`
	.Status:Paralyze    0`
	.Status:Shrink     90`
	.Status:Stop        0`
	.Status:DefaultTurnMod    0`
	.Status:SleepTurnMod      0`
	.Status:PoisonTurnMod     0`
	.Status:FrozenTurnMod     0`
	.Status:DizzyTurnMod      0`
	.Status:FearTurnMod       0`
	.Status:StaticTurnMod     0`
	.Status:ParalyzeTurnMod   0`
	.Status:ShrinkTurnMod     0`
	.Status:StopTurnMod       0`
	.Status:End
}

#new:PartsTable $PartsTable_80223D30
{
	00020000 01000000 001800FF $IdleAnimations_80223BC0 $DefenseTable_80223C78 00000000 00000000 00F60000 00000000
	80800001 02003600 00E200FF $IdleAnimations_80223BC0 $DefenseTable_80223C78 00000000 00000000 00F60000 00000000
}

#new:Actor $TubbasHeart
{
	% stats
	[Index]        A5b
	[Level]         0`b
	[MaxHP]        50`b
	[Coins]         0`b
	[Flags]       00000000
	[StatusTable] $StatusTable_80223C84
	% ai
	[PartsCount]    2`s
	[PartsTable]  $PartsTable_80223D30
	[Script]      $Script_Init_80223DA0
	% move effectiveness
	[Escape]        0`b
	[Item]          0`b
	[AirLift]       0`b
	[Hurricane]     0`b % Bow's "Spook" as well
	[UpAndAway]     0`b
	[PowerBounce]  75`b
	[SpinSmash]     4`b % weight (0-4)
	% ui positions
	[Size]         30`b  30`b % width height
	[HealthBar]     5`b   0`b % dx dy
	[StatusTurn]  -10`b  20`b % dx dy
	[StatusIcon]   10`b  20`b % dx dy
}

#new:Script $Script_Init_80223DA0
{
    0:  Call  SetActorVar   ( .Actor:Self 00000000 00000000 )
   18:  Call  SetActorVar   ( .Actor:Self 00000001 00000000 )
   30:  Call  SetActorVar   ( .Actor:Self 00000002 00000000 )
   48:  Call  SetActorVar   ( .Actor:Self 00000003 00000000 )
   60:  Call  SetActorVar   ( .Actor:Self 00000004 00000000 )
   78:  Call  SetActorVar   ( .Actor:Self 00000005 00000000 )
   90:  Call  BindTakeTurn  ( .Actor:Self $Script_TakeTurn_802245C8 )
   A4:  Call  BindIdle      ( .Actor:Self $Script_Idle_80223E98 )
   B8:  Call  BindHandleEvent       ( .Actor:Self $Script_HandleEvent_80224038 )
   CC:  Call  SetPartTargetFlagBits ( .Actor:Self 00000002 00000002 .True )
   E8:  Return
   F0:  End
}

#new:Script $Script_Idle_80223E98
{
    0:  Label  0
    C:  Call  ActorExists   ( .Actor:Self *Var0 )
   20:  If  *Var0  !=  .False
   30:  	Call  GetActorVar   ( .Actor:Self 00000004 *Var0 )
   48:  	If  *Var0  !=  00000000
   58:  		Call  GetActorPos       ( .Actor:Self *Var1 *Var2 *Var3 )
   74:  		Call  GetStatusFlags    ( .Actor:Self *Var4 )
   88:  		If  *Var4  !&  ~Flags:StatusFlags:Shrink % 80000
   98:  			Add   *Var2  0000000F
   A8:  			SetF  *Var4  *Fixed[1.0]
   B8:  		Else
   C0:  			Add   *Var2  00000006
   D0:  			SetF  *Var4  *Fixed[0.4]
   E0:  		EndIf
   E8:  		Call  $Function_80218680    ( *Var0 *Var1 *Var2 *Var3 *Var4 )
  108:  	EndIf
  110:  EndIf
  118:  Wait  1`
  124:  Goto  0
  130:  Return
  138:  End
}

#new:Script $Script_80223FD8
{
    0:  Set   *Var1  006C000E
   10:  Call  GetActorVar   ( .Actor:Self 00000001 *Var0 )
   28:  If  *Var0  !=  00000000
   38:  	Set   *Var1  006C000B
   48:  EndIf
   50:  Return
   58:  End
}

#new:Script $Script_HandleEvent_80224038
{
    0:  Call  UseIdleAnimation  ( .Actor:Self .False )
   14:  Call  SetActorScale     ( .Actor:Self *Fixed[1.0] *Fixed[1.0] *Fixed[1.0] )
   30:  Call  GetLastEvent      ( .Actor:Self *Var0 )
   44:  Switch  *Var0
   50:  	CaseOR  ==  .Event:HitCombo % 9
   5C:  	CaseOR  ==  .Event:Hit % A
   68:  		ExecWait  $Script_80223FD8
   74:  		SetConst  *Var0  00000001
   84:  		ExecWait  DoNormalHit
   90:  	EndCaseGroup
   98:  	Case  ==  .Event:BeginFirstStrike % 38
   A4:  	CaseOR  ==  .Event:BurnHit % E
   B0:  	CaseOR  ==  .Event:BurnDeath % 24
   BC:  		SetConst  *Var0  00000001
   CC:  		SetConst  *Var1  006C0010
   DC:  		SetConst  *Var2  006C0011
   EC:  		ExecWait  DoBurnHit
   F8:  	EndCaseGroup
  100:  	Case  ==  .Event:SpinSmashHit % B
  10C:  		ExecWait  $Script_80223FD8
  118:  		SetConst  *Var0  00000001
  128:  		ExecWait  DoSpinSmashHit
  134:  	CaseOR  ==  .Event:ShockHit % 2F
  140:  	CaseOR  ==  .Event:ShockDeath % 26
  14C:  		ExecWait  $Script_80223FD8
  158:  		SetConst  *Var0  00000001
  168:  		ExecWait  DoShockHit
  174:  		ExecWait  $Script_80223FD8
  180:  		SetConst  *Var0  00000001
  190:  		ExecWait  DoJumpBack
  19C:  		Call  SetAnimation  ( .Actor:Self 00000001 006C0003 )
  1B4:  		ExecWait  $Script_802244DC
  1C0:  	EndCaseGroup
  1C8:  	CaseOR  ==  00000017 % 17
  1D4:  	CaseOR  ==  .Event:Immune % 19
  1E0:  	CaseOR  ==  .Event:AirLiftFailed % 1F
  1EC:  		Set   *Var1  006C0001
  1FC:  		Call  GetActorVar   ( .Actor:Self 00000001 *Var0 )
  214:  		If  *Var0  !=  00000000
  224:  			Set   *Var1  006C000B
  234:  		EndIf
  23C:  		SetConst  *Var0  00000001
  24C:  		ExecWait  DoImmune
  258:  	EndCaseGroup
  260:  	CaseOR  ==  .Event:Death % 20
  26C:  		ExecWait  $Script_80223FD8
  278:  		SetConst  *Var0  00000001
  288:  		ExecWait  DoNormalHit
  294:  	EndCaseGroup
  29C:  	Case  ==  .Event:SpinSmashDeath % 21
  2A8:  		ExecWait  $Script_80223FD8
  2B4:  		SetConst  *Var0  00000001
  2C4:  		ExecWait  DoSpinSmashHit
  2D0:  	Case  ==  .Event:SpikeContact % 2A
  2DC:  	Case  ==  .Event:BurnContact % 2C
  2E8:  	Case  ==  .Event:EndFirstStrike % 35
  2F4:  		Call  SetAnimation  ( .Actor:Self 00000001 006C0003 )
  30C:  		ExecWait  $Script_802244DC
  318:  		Call  HPBarToHome   ( .Actor:Self )
  328:  	Case  ==  .Event:RecoverStatus % 31
  334:  		SetConst  *Var0  00000001
  344:  		SetConst  *Var1  006C0001
  354:  		ExecWait  DoRecover
  360:  	Default
  368:  EndSwitch
  370:  Call  GetActorHP    ( .Actor:Self *Var0 )
  384:  If  *Var0  <=  00000005
  394:  	ExecWait  $Script_80224414
  3A0:  	Return
  3A8:  Else
  3B0:  	Call  UseIdleAnimation  ( .Actor:Self .True )
  3C4:  EndIf
  3CC:  Return
  3D4:  End
}

#new:Script $Script_80224414
{
    0:  Call  UseBattleCamPreset    ( 0000000E )
   10:  Call  BattleCamTargetActor  ( .Actor:Self )
   20:  Call  MoveBattleCamOver (  40` )
   30:  Wait  40`
   3C:  Call  ActorSpeak        ( 000E00C6 .Actor:Self 00000001 006C000D 006C000D ) % Owwwweeee! Oh, I'm hurting! I have to get out of h ...
   5C:  Call  UseBattleCamPreset    ( 00000002 )
   6C:  Call  MoveBattleCamOver (  25` )
   7C:  Call  SetActorFlagBits  ( .Actor:Self 00400000 .True )
   94:  Call  SetBattleFlagBits ( 00060000 .True )
   A8:  Call  8026F60C  ( 00000014 )
   B8:  Return
   C0:  End
}

#new:Script $Script_802244DC
{
    0:  Call  SetActorSpeed ( .Actor:Self *Fixed[6.0] )
   14:  Call  SetActorJumpGravity   ( .Actor:Self *Fixed[1.8] )
   28:  Call  SetGoalToHome ( .Actor:Self )
   38:  Call  GetGoalPos    ( .Actor:Self *Var0 *Var1 *Var2 )
   54:  Sub   *Var0  0000002D
   64:  Set   *Var1  00000000
   74:  ExecWait  8029C12C
   80:  Call  SetGoalToHome ( .Actor:Self )
   90:  Call  JumpToGoal    ( .Actor:Self  12` .False .True .False )
   B0:  Call  SetAnimation  ( .Actor:Self 00000001 006C0001 )
   C8:  Call  SetActorYaw   ( .Actor:Self  0` )
   DC:  Return
   E4:  End
}

#new:Script $Script_TakeTurn_802245C8
{
    0:  Call  UseIdleAnimation  ( .Actor:Self .False )
   14:  Call  SetTargetActor    ( .Actor:Self .Actor:Player )
   28:  Call  EnemyTestTarget   ( .Actor:Self *Var0 ~Flags:DamageType:0 00000000 00000001 00000010 )
   4C:  If  *Var0  !=  .HitResult:Miss % 6
   5C:  	Call  GetActorVar   ( .Actor:Self 00000002 *Var0 )
   74:  	If  *Var0  !&  00000001
   84:  		Call  GetCurrentPartnerID   ( *Var0 )
   94:  		If  *Var0  ==  .Partner:Bow % 9
   A4:  			Call  802535B4  ( 00000000 )
   B4:  			ConstOR  *Var0 00000003
   C4:  			Call  SetActorVar       ( .Actor:Self 00000002 *Var0 )
   DC:  			Call  UseBattleCamPreset    ( 0000000E )
   EC:  			Call  BattleCamTargetActor  ( .Actor:Self )
   FC:  			Call  MoveBattleCamOver (  40` )
  10C:  			Wait  40`
  118:  			Call  ActorSpeak        ( 000E00C3 .Actor:Self 00000001 006C000B 006C0001 ) % Hey, you! Lady ghost! You look quite tasty. Stick  ...
  138:  			Call  UseBattleCamPreset    ( 0000000E )
  148:  			Call  BattleCamTargetActor  ( .Actor:Partner )
  158:  			Call  MoveBattleCamOver (  25` )
  168:  			Wait  25`
  174:  			Call  UseIdleAnimation  ( .Actor:Partner .False )
  188:  			Call  SetAnimation      ( .Actor:Partner 00000001 000D0004 )
  1A0:  			Call  ActorSpeak        ( 000E00C4 .Actor:Partner 00000001 000D0004 000D0001 ) % Blech! You wish! You don't have a chance, you ghos ...
  1C0:  			Call  SetAnimation      ( .Actor:Partner 00000001 000D000F )
  1D8:  			Call  EndActorSpeech    ( .Actor:Partner 00000001 FFFFFFFF FFFFFFFF )
  1F4:  			Call  UseBattleCamPreset    ( 00000002 )
  204:  			Call  UseIdleAnimation  ( .Actor:Partner .True )
  218:  			Call  MoveBattleCamOver (  30` )
  228:  			Call  GetActorVar       ( .Actor:Self 00000000 *Var0 )
  240:  			If  *Var0  ==  00000000
  250:  				Call  GetActorVar   ( .Actor:Self 00000003 *Var0 )
  268:  				If  *Var0  !=  00000000
  278:  					Call  802535B4  ( 00000001 )
  288:  				EndIf
  290:  			Else
  298:  				Call  802535B4  ( 00000001 )
  2A8:  			EndIf
  2B0:  		EndIf
  2B8:  	EndIf
  2C0:  EndIf
  2C8:  Call  GetActorVar   ( .Actor:Self 00000000 *Var0 )
  2E0:  Switch  *Var0
  2EC:  	Case  ==  00000000
  2F8:  		Call  GetActorVar   ( .Actor:Self 00000003 *Var0 )
  310:  		If  *Var0  ==  00000000
  320:  			Call  SetActorVar   ( .Actor:Self 00000003 00000001 )
  338:  			Call  UseBattleCamPreset    ( 0000000E )
  348:  			Call  BattleCamTargetActor  ( .Actor:Self )
  358:  			Call  MoveBattleCamOver     (  40` )
  368:  			Wait  40`
  374:  			Call  ActorSpeak    ( 000E00C5 .Actor:Self 00000001 006C000B 006C0001 ) % Heh heh heh heh... I'm gonna do this great attack. ...
  394:  		EndIf
  39C:  		ExecWait  $Script_80225258
  3A8:  		Call  SetActorVar   ( .Actor:Self 00000000 00000001 )
  3C0:  		Call  GetActorVar   ( .Actor:Self 00000002 *Var0 )
  3D8:  		If  *Var0  &  00000002
  3E8:  			Call  802535B4  ( 00000001 )
  3F8:  		EndIf
  400:  	Case  ==  00000001
  40C:  		ExecWait  $Script_802255D8
  418:  		Call  GetActorVar   ( .Actor:Self 00000001 *Var0 )
  430:  		If  *Var0  ==  00000000
  440:  			Call  GetActorVar   ( .Actor:Self 00000005 *Var1 )
  458:  			Add   *Var1  00000001
  468:  			Call  SetActorVar   ( .Actor:Self 00000005 *Var1 )
  480:  			If  *Var1  >=  00000002
  490:  				Call  SetActorVar   ( .Actor:Self 00000000 00000002 )
  4A8:  			Else
  4B0:  				Call  SetActorVar   ( .Actor:Self 00000000 00000000 )
  4C8:  			EndIf
  4D0:  		EndIf
  4D8:  	Case  ==  00000002
  4E4:  		Call  SetActorVar   ( .Actor:Self 00000000 00000000 )
  4FC:  		ExecWait  $Script_80224B3C
  508:  EndSwitch
  510:  Call  GetActorVar       ( .Actor:Self 00000002 *Var0 )
  528:  ConstAND  *Var0 FFFFFFFD
  538:  Call  SetActorVar       ( .Actor:Self 00000002 *Var0 )
  550:  Call  UseIdleAnimation  ( .Actor:Self .True )
  564:  Return
  56C:  End
}

#new:Script $Script_80224B3C
{
    0:  Call  SetTargetActor        ( .Actor:Self .Actor:Player )
   14:  Call  UseBattleCamPreset    ( 0000003F )
   24:  Call  BattleCamTargetActor  ( .Actor:Self )
   34:  Call  8024ECF8      ( FFFFFFFF 00000001 00000000 )
   4C:  Call  SetAnimation  ( .Actor:Self 00000001 006C0003 )
   64:  Call  SetActorJumpGravity   ( .Actor:Self *Fixed[1.8] )
   78:  Call  GetActorPos   ( .Actor:Self *Var0 *Var1 *Var2 )
   94:  Sub   *Var0  0000002D
   A4:  Set   *Var1  00000000
   B4:  Call  SetGoalPos    ( .Actor:Self *Var0 *Var1 *Var2 )
   D0:  Call  JumpToGoal    ( .Actor:Self  12` .False .True .False )
   F0:  Call  SetGoalToTarget       ( .Actor:Self )
  100:  Call  GetGoalPos    ( .Actor:Self *Var0 *Var1 *Var2 )
  11C:  Add   *Var0  00000028
  12C:  Set   *Var1  00000000
  13C:  Call  SetActorSpeed ( .Actor:Self *Fixed[6.0] )
  150:  Call  SetActorJumpGravity   ( .Actor:Self *Fixed[1.8] )
  164:  ExecWait  8029C12C
  170:  Call  SetAnimation  ( .Actor:Self 00000001 006C0001 )
  188:  Call  SetAnimation  ( .Actor:Self 00000001 006C0016 )
  1A0:  Wait  5`
  1AC:  Call  SetAnimation  ( .Actor:Self 00000001 006C0015 )
  1C4:  Call  EnemyTestTarget       ( .Actor:Self *Var0 ~Flags:DamageType:0 00000000 00000001 00000010 )
  1E8:  Switch  *Var0
  1F4:  	CaseOR  ==  .HitResult:Miss % 6
  200:  	CaseOR  ==  .HitResult:Lucky % 5
  20C:  		Set   *VarA  *Var0
  21C:  		Call  SetGoalToTarget       ( .Actor:Self )
  22C:  		Call  GetGoalPos    ( .Actor:Self *Var0 *Var1 *Var2 )
  248:  		Sub   *Var0  0000001E
  258:  		Set   *Var1  00000000
  268:  		Call  SetActorJumpGravity   ( .Actor:Self *Fixed[1.5] )
  27C:  		Call  SetGoalPos    ( .Actor:Self *Var0 *Var1 *Var2 )
  298:  		Call  JumpToGoal    ( .Actor:Self  8` .False .True .False )
  2B8:  		Call  GetActorPos   ( .Actor:Self *Var0 *Var1 *Var2 )
  2D4:  		Sub   *Var0  00000014
  2E4:  		Set   *Var1  00000000
  2F4:  		Call  SetActorJumpGravity   ( .Actor:Self *Fixed[2.0] )
  308:  		Call  SetGoalPos    ( .Actor:Self *Var0 *Var1 *Var2 )
  324:  		Call  JumpToGoal    ( .Actor:Self  6` .False .True .False )
  344:  		Sub   *Var0  0000000A
  354:  		Call  SetGoalPos    ( .Actor:Self *Var0 *Var1 *Var2 )
  370:  		Call  JumpToGoal    ( .Actor:Self  4` .False .True .False )
  390:  		Wait  20`
  39C:  		Call  UseBattleCamPreset    ( 00000002 )
  3AC:  		If  *VarA  ==  .HitResult:Lucky % 5
  3BC:  			Call  EnemyTestTarget   ( .Actor:Self *Var0 ~Flags:DamageType:TriggerLucky 00000000 00000000 00000000 )
  3E0:  		EndIf
  3E8:  		Call  SetAnimation  ( .Actor:Self 00000001 006C0003 )
  400:  		ExecWait  $Script_802244DC
  40C:  		Return
  414:  	EndCaseGroup
  41C:  	Default
  424:  		Call  SetGoalToTarget       ( .Actor:Self )
  434:  		Call  SetActorJumpGravity   ( .Actor:Self *Fixed[0.3] )
  448:  		Call  JumpToGoal    ( .Actor:Self  4` .False .True .False )
  468:  EndSwitch
  470:  Wait  2`
  47C:  Call  SetGoalToTarget   ( .Actor:Self )
  48C:  Call  EnemyDamageTarget ( .Actor:Self *Var0 ~Flags:DamageType:0 00000000 00000000 00000006 00000020 )
  4B4:  Set   *VarF  *Var0
  4C4:  Switch  *VarF
  4D0:  	CaseOR  ==  .HitResult:Hit % 0
  4DC:  	CaseOR  ==  .HitResult:QuakeImmune % 2
  4E8:  	CaseOR  ==  0000000A % A
  4F4:  		Call  UseBattleCamPreset    ( 00000002 )
  504:  		Call  SetAnimation  ( .Actor:Self 00000001 006C0001 )
  51C:  		Call  SetActorScale ( .Actor:Self *Fixed[1.1] *Fixed[0.8] *Fixed[1.0] )
  538:  		Wait  1`
  544:  		Call  SetActorScale ( .Actor:Self *Fixed[1.0] *Fixed[1.0] *Fixed[1.0] )
  560:  		Wait  1`
  56C:  		Call  GetGoalPos    ( .Actor:Self *Var0 *Var1 *Var2 )
  588:  		Add   *Var0  0000001E
  598:  		Set   *Var1  00000000
  5A8:  		Call  SetActorJumpGravity   ( .Actor:Self *Fixed[1.8] )
  5BC:  		Call  SetGoalPos    ( .Actor:Self *Var0 *Var1 *Var2 )
  5D8:  		Call  JumpToGoal    ( .Actor:Self  8` .False .True .False )
  5F8:  		Add   *Var0  00000014
  608:  		Call  SetGoalPos    ( .Actor:Self *Var0 *Var1 *Var2 )
  624:  		Call  JumpToGoal    ( .Actor:Self  6` .False .True .False )
  644:  		Add   *Var0  0000000A
  654:  		Call  SetGoalPos    ( .Actor:Self *Var0 *Var1 *Var2 )
  670:  		Call  JumpToGoal    ( .Actor:Self  4` .False .True .False )
  690:  		Wait  8`
  69C:  		If  *VarF  ==  0000000A % A
  6AC:  			Return
  6B4:  		EndIf
  6BC:  		Call  UseBattleCamPreset    ( 00000002 )
  6CC:  		Call  YieldTurn ( )
  6D8:  		Call  SetAnimation  ( .Actor:Self 00000001 006C0003 )
  6F0:  		ExecWait  $Script_802244DC
  6FC:  	EndCaseGroup
  704:  EndSwitch
  70C:  Return
  714:  End
}

#new:Script $Script_80225258
{
    0:  Call  UseBattleCamPreset    ( 00000013 )
   10:  Call  SetBattleCamTarget    (  85`  50`  0` )
   28:  Call  SetBattleCamZoom  (  280` )
   38:  Call  SetBattleCamOffsetZ   (  0` )
   48:  Call  MoveBattleCamOver (  40` )
   58:  Wait  40`
   64:  Call  SetAnimation      ( .Actor:Self 00000001 006C000B )
   7C:  Call  GetActorPos       ( .Actor:Self *Var0 *Var1 *Var2 )
   98:  Call  GetStatusFlags    ( .Actor:Self *Var4 )
   AC:  If  *Var4  !&  ~Flags:StatusFlags:Shrink % 80000
   BC:  	Add   *Var1  0000000F
   CC:  	SetF  *Var3  *Fixed[1.0]
   DC:  Else
   E4:  	Add   *Var1  00000006
   F4:  	SetF  *Var3  *Fixed[0.4]
  104:  EndIf
  10C:  Call  PlayEffect    ( ~FX:GatherMagic:Dark *Var0 *Var1 *Var2 *Var3 0000003C 00000000 00000000 00000000 00000000 00000000 00000000 00000000 )
  150:  Call  PlayEffect    ( ~FX:EnergyIn:LongStreaks1 *Var0 *Var1 *Var2 *Var3 0000003C 00000000 00000000 00000000 00000000 00000000 00000000 00000000 )
  194:  Call  PlaySoundAtActor      ( .Actor:Self 000020F7 )
  1A8:  Wait  60`
  1B4:  Call  UseBattleCamPreset    ( 00000002 )
  1C4:  Call  MoveBattleCamOver     (  20` )
  1D4:  Call  SetActorJumpGravity   ( .Actor:Self *Fixed[1.0] )
  1E8:  Call  GetActorPos   ( .Actor:Self *Var0 *Var1 *Var2 )
  204:  Call  SetGoalPos    ( .Actor:Self *Var0 *Var1 *Var2 )
  220:  Call  JumpToGoal    ( .Actor:Self  15` .False .True .False )
  240:  Call  SetActorVar   ( .Actor:Self 00000001 00000001 )
  258:  Call  GetActorPos   ( .Actor:Self *Var0 *Var1 *Var2 )
  274:  Call  GetStatusFlags        ( .Actor:Self *Var4 )
  288:  If  *Var4  !&  ~Flags:StatusFlags:Shrink % 80000
  298:  	Add   *Var1  0000000F
  2A8:  	SetF  *Var3  *Fixed[1.0]
  2B8:  Else
  2C0:  	Add   *Var1  00000006
  2D0:  	SetF  *Var3  *Fixed[0.4]
  2E0:  EndIf
  2E8:  Call  PlayEffect        ( ~FX:EnergyOut:ShortStreaks *Var0 *Var1 *Var2 *Var3 00000000 00000000 00000000 00000000 00000000 00000000 00000000 00000000 )
  32C:  Call  SetActorVar       ( .Actor:Self 00000004 *VarF )
  344:  Call  EnableActorGlow   ( .Actor:Self .True )
  358:  Call  SetIdleAnimations ( .Actor:Self 00000001 $IdleAnimations_80223C1C )
  370:  Return
  378:  End
}

#new:Script $Script_802255D8
{
    0:  Call  SetTargetActor    ( .Actor:Self .Actor:Player )
   14:  Call  UseBattleCamPreset    ( 00000013 )
   24:  Call  SetBattleCamTarget    (  85`  50`  0` )
   3C:  Call  SetBattleCamZoom  (  280` )
   4C:  Call  SetBattleCamOffsetZ   (  0` )
   5C:  Call  MoveBattleCamOver (  20` )
   6C:  Wait  20`
   78:  Call  PlaySoundAtActor  ( .Actor:Self .Sound:SpellCast1 )
   8C:  Call  SetAnimation      ( .Actor:Self 00000001 006C000C )
   A4:  Call  GetActorPos       ( .Actor:Self *Var0 *Var1 *Var2 )
   C0:  Call  GetStatusFlags    ( .Actor:Self *Var3 )
   D4:  If  *Var3  !&  ~Flags:StatusFlags:Shrink % 80000
   E4:  	Add   *Var1  00000010
   F4:  Else
   FC:  	Add   *Var1  00000006
  10C:  EndIf
  114:  Call  PlayEffect        ( ~FX:GatherEnergyPink *Var0 *Var1 *Var2 *Fixed[1.0] 0000002D 00000000 00000000 00000000 00000000 00000000 00000000 00000000 )
  158:  Wait  60`
  164:  Call  UseBattleCamPreset    ( 00000002 )
  174:  Call  MoveBattleCamOver (  20` )
  184:  Call  SetAnimation      ( .Actor:Self 00000001 006C000B )
  19C:  Thread
  1A4:  	Call  GetActorPos   ( .Actor:Self *Var0 *Var1 *Var2 )
  1C0:  	Call  SetActorJumpGravity   ( .Actor:Self *Fixed[0.8] )
  1D4:  	Call  SetGoalPos    ( .Actor:Self *Var0 *Var1 *Var2 )
  1F0:  	Call  JumpToGoal    ( .Actor:Self  18` .False .True .False )
  210:  EndThread
  218:  Call  GetActorVar   ( .Actor:Self 00000001 *Var0 )
  230:  Sub   *Var0  00000001
  240:  Call  SetActorVar   ( .Actor:Self 00000001 *Var0 )
  258:  If  *Var0  ==  00000000
  268:  	Call  EnableActorGlow   ( .Actor:Self .False )
  27C:  	Call  GetActorVar       ( .Actor:Self 00000004 *Var0 )
  294:  	Call  RemoveEffect      ( *Var0 )
  2A4:  	Call  SetActorVar       ( .Actor:Self 00000004 00000000 )
  2BC:  	Call  SetIdleAnimations ( .Actor:Self 00000001 $IdleAnimations_80223BC0 )
  2D4:  EndIf
  2DC:  Call  PlaySound ( 000020F9 )
  2EC:  Call  SetGoalToTarget   ( .Actor:Self )
  2FC:  Call  EnemyTestTarget   ( .Actor:Self *VarA ~Flags:DamageType:0 00000000 00000001 00000010 )
  320:  Switch  *VarA
  32C:  	CaseOR  ==  .HitResult:Miss % 6
  338:  	CaseOR  ==  .HitResult:Lucky % 5
  344:  		Call  GetActorPos   ( .Actor:Player *Var0 *Var1 *Var2 )
  360:  		Add   *Var1  00000005
  370:  		Call  PlayEffect    ( ~FX:HeartAttack:Miss *Var0 *Var1 *Var2 *Fixed[1.0] 000000C8 00000000 00000000 00000000 00000000 00000000 00000000 00000000 )
  3B4:  		Wait  145`
  3C0:  		If  *VarA  ==  .HitResult:Lucky % 5
  3D0:  			Call  EnemyTestTarget   ( .Actor:Self *Var0 ~Flags:DamageType:TriggerLucky 00000000 00000000 00000000 )
  3F4:  		Else
  3FC:  		EndIf
  404:  		Return
  40C:  	EndCaseGroup
  414:  EndSwitch
  41C:  Call  GetActorPos   ( .Actor:Player *Var0 *Var1 *Var2 )
  438:  Add   *Var1  00000005
  448:  Call  PlayEffect    ( ~FX:HeartAttack:Success *Var0 *Var1 *Var2 *Fixed[1.0] 000000C8 00000000 00000000 00000000 00000000 00000000 00000000 00000000 )
  48C:  Thread
  494:  	Wait  160`
  4A0:  	Call  PlaySound ( 000020FC )
  4B0:  EndThread
  4B8:  Call  UseIdleAnimation  ( .Actor:Player .False )
  4CC:  Call  SetAnimation      ( .Actor:Player 00000000 0001002B )
  4E4:  Wait  30`
  4F0:  Call  UseBattleCamPreset    ( 00000013 )
  500:  Call  GetActorPos       ( .Actor:Player *Var0 *Var1 *Var2 )
  51C:  Call  SetBattleCamTarget    ( *Var0 *Var1 *Var2 )
  534:  Call  SetBattleCamZoom  (  300` )
  544:  Call  SetBattleCamOffsetZ   (  35` )
  554:  Call  MoveBattleCamOver (  50` )
  564:  Wait  56`
  570:  Call  PlaySoundAtActor  ( .Actor:Player 000003DB )
  584:  Call  SetAnimation      ( .Actor:Player 00000000 0003000C )
  59C:  Wait  37`
  5A8:  Call  PlaySoundAtActor  ( .Actor:Player 000003DB )
  5BC:  Wait  22`
  5C8:  Call  UseBattleCamPreset    ( 00000002 )
  5D8:  Call  MoveBattleCamOver (  10` )
  5E8:  Call  PlaySoundAtActor  ( .Actor:Player 000020FB )
  5FC:  Call  UseIdleAnimation  ( .Actor:Player .True )
  610:  Wait  2`
  61C:  Call  SetGoalToTarget   ( .Actor:Self )
  62C:  Call  EnemyDamageTarget ( .Actor:Self *Var0 ~Flags:DamageType:NoContact 00000000 00000000 0000000C 00000020 )
  654:  Return
  65C:  End
}

PADDING: 80225C3C to 80225C40 (0050C68C to 0050C690)
00000000

#new:IdleAnimations $IdleAnimations_80225C40
{
	.Status:Normal    006B0001
	.Status:Stone     006B0000
	.Status:Sleep     006B0018
	.Status:Poison    006B0001
	.Status:Stop      006B0000
	.Status:Static    006B0000
	.Status:Paralyze  006B0000
	.Status:Paralyze  006B0000
	.Status:Dizzy     006B0018
	.Status:Fear      006B0000
	.Status:End
}

#new:DefenseTable $DefenseTable_80225C94
{
	.Element:Normal 00000000
	.Element:End
}

#new:StatusTable $StatusTable_80225CA0
{
	.Status:Normal      0`
	.Status:Default     0`
	.Status:Sleep      80`
	.Status:Poison      0`
	.Status:Frozen      0`
	.Status:Dizzy      80`
	.Status:Fear        0`
	.Status:Static      0`
	.Status:Paralyze   80`
	.Status:Shrink     90`
	.Status:Stop       80`
	.Status:DefaultTurnMod    0`
	.Status:SleepTurnMod      0`
	.Status:PoisonTurnMod     0`
	.Status:FrozenTurnMod     0`
	.Status:DizzyTurnMod      0`
	.Status:FearTurnMod       0`
	.Status:StaticTurnMod     0`
	.Status:ParalyzeTurnMod   0`
	.Status:ShrinkTurnMod     0`
	.Status:StopTurnMod       0`
	.Status:End
}

#new:PartsTable $PartsTable_80225D4C
{
	00800000 01000000 F14B00FF $IdleAnimations_80225C40 $DefenseTable_80225C94 00000000 00000000 00F60000 00000000
}

#new:Actor $TubbaBlubba
{
	% stats
	[Index]        A3b
	[Level]        70`b
	[MaxHP]        10`b
	[Coins]         0`b
	[Flags]       00000000
	[StatusTable] $StatusTable_80225CA0
	% ai
	[PartsCount]    1`s
	[PartsTable]  $PartsTable_80225D4C
	[Script]      $Script_Init_80225D98
	% move effectiveness
	[Escape]        0`b
	[Item]          0`b
	[AirLift]       0`b
	[Hurricane]     0`b % Bow's "Spook" as well
	[UpAndAway]     0`b
	[PowerBounce]  75`b
	[SpinSmash]     4`b % weight (0-4)
	% ui positions
	[Size]        110`b 100`b % width height
	[HealthBar]     0`b   0`b % dx dy
	[StatusTurn]  -33`b  78`b % dx dy
	[StatusIcon]   10`b  75`b % dx dy
}

#new:Script $Script_Init_80225D98
{
    0:  Call  BindTakeTurn  ( .Actor:Self $Script_TakeTurn_802264AC )
   14:  Call  BindIdle      ( .Actor:Self $Script_Idle_80225F58 )
   28:  Call  BindHandleEvent   ( .Actor:Self $Script_HandleEvent_802260D0 )
   3C:  Call  SetActorVar   ( .Actor:Self 00000008 00000000 )
   54:  Exec  $Script_80225E08
   60:  Return
   68:  End
}

#new:Script $Script_80225E08
{
    0:  Label  0
    C:  Wait  1`
   18:  Call  ActorExists   ( .Actor:Self *Var0 )
   2C:  If  *Var0  ==  .False
   3C:  	Return
   44:  EndIf
   4C:  Call  GetStatusFlags    ( .Actor:Self *Var0 )
   60:  If  *Var0  &  ~Flags:StatusFlags:Shrink % 80000
   70:  	Goto  0
   7C:  EndIf
   84:  Call  GetAnimation  ( .Actor:Self 00000001 *Var0 )
   9C:  If  *Var0  ==  006B0006
   AC:  	Goto  1
   B8:  EndIf
   C0:  If  *Var0  ==  006B0007
   D0:  	Goto  1
   DC:  EndIf
   E4:  Goto  0
   F0:  Label  1
   FC:  Call  StartRumble   ( 00000001 )
  10C:  Call  ShakeCam      ( .Cam:Battle 00000000  2` *Fixed[0.5] )
  128:  Wait  1`
  134:  Goto  0
  140:  Return
  148:  End
}

#new:Script $Script_Idle_80225F58
{
    0:  Label  0
    C:  Wait  1`
   18:  Goto  0
   24:  Return
   2C:  End
}

#new:Script $Script_80225F8C
{
    0:  Call  GetActorVar   ( .Actor:Self 00000008 *Var0 )
   18:  If  *Var0  ==  00000000
   28:  	Return
   30:  EndIf
   38:  Return
   40:  End
}

#new:Script $Script_80225FD4
{
    0:  Set   *Var1  006B0001
   10:  ExecWait  $Script_80225F8C
   1C:  Call  SetAnimation  ( .Actor:Self 00000001 *Var1 )
   34:  Call  SetGoalToHome ( .Actor:Self )
   44:  Call  SetActorSpeed ( .Actor:Self *Fixed[6.0] )
   58:  Set   *Var1  006B0006
   68:  ExecWait  $Script_80225F8C
   74:  Call  SetAnimation  ( .Actor:Self 00000001 *Var1 )
   8C:  Call  RunToGoal     ( .Actor:Self  0` .False )
   A4:  Set   *Var1  006B0001
   B4:  ExecWait  $Script_80225F8C
   C0:  Call  SetAnimation  ( .Actor:Self 00000001 *Var1 )
   D8:  Call  SetActorYaw   ( .Actor:Self  0` )
   EC:  Return
   F4:  End
}

#new:Script $Script_HandleEvent_802260D0
{
    0:  Call  UseIdleAnimation  ( .Actor:Self .False )
   14:  Call  EnableIdleScript  ( .Actor:Self 00000000 )
   28:  Call  GetLastEvent      ( .Actor:Self *VarA )
   3C:  Switch  *VarA
   48:  	CaseOR  ==  .Event:HitCombo % 9
   54:  	CaseOR  ==  .Event:Hit % A
   60:  		SetConst  *Var0  00000001
   70:  		SetConst  *Var1  006B0014
   80:  		ExecWait  DoNormalHit
   8C:  	EndCaseGroup
   94:  	Case  ==  .Event:BurnHit % E
   A0:  		SetConst  *Var0  00000001
   B0:  		SetConst  *Var1  006B0014
   C0:  		SetConst  *Var2  FFFFFFFF
   D0:  		ExecWait  DoBurnHit
   DC:  	Case  ==  .Event:BurnDeath % 24
   E8:  		SetConst  *Var0  00000001
   F8:  		SetConst  *Var1  006B0014
  108:  		SetConst  *Var2  FFFFFFFF
  118:  		ExecWait  DoBurnHit
  124:  		ExecWait  $Script_80227878
  130:  		Return
  138:  	Case  ==  .Event:SpinSmashHit % B
  144:  		SetConst  *Var0  00000001
  154:  		SetConst  *Var1  006B0014
  164:  		ExecWait  DoSpinSmashHit
  170:  	Case  ==  .Event:ShockHit % 2F
  17C:  		Call  UseBattleCamPreset    ( 00000002 )
  18C:  		Call  MoveBattleCamOver     (  20` )
  19C:  		SetConst  *Var0  00000001
  1AC:  		SetConst  *Var1  006B0014
  1BC:  		ExecWait  DoShockHit
  1C8:  		SetConst  *Var0  00000001
  1D8:  		SetConst  *Var1  006B0014
  1E8:  		ExecWait  DoJumpBack
  1F4:  		ExecWait  $Script_80225FD4
  200:  	CaseOR  ==  00000017 % 17
  20C:  	CaseOR  ==  .Event:Immune % 19
  218:  	CaseOR  ==  .Event:AirLiftFailed % 1F
  224:  		SetConst  *Var0  00000001
  234:  		SetConst  *Var1  006B0001
  244:  		ExecWait  DoImmune
  250:  	EndCaseGroup
  258:  	Case  ==  .Event:ShockDeath % 26
  264:  		Call  UseBattleCamPreset    ( 00000002 )
  274:  		Call  MoveBattleCamOver     (  20` )
  284:  		SetConst  *Var0  00000001
  294:  		SetConst  *Var1  006B0014
  2A4:  		ExecWait  DoShockHit
  2B0:  		ExecWait  $Script_80227878
  2BC:  		Return
  2C4:  	Case  ==  .Event:Death % 20
  2D0:  		SetConst  *Var0  00000001
  2E0:  		SetConst  *Var1  006B0014
  2F0:  		ExecWait  DoNormalHit
  2FC:  		ExecWait  $Script_80227878
  308:  		Return
  310:  	Case  ==  .Event:SpinSmashDeath % 21
  31C:  		SetConst  *Var0  00000001
  32C:  		SetConst  *Var1  006B0014
  33C:  		ExecWait  DoSpinSmashHit
  348:  		ExecWait  $Script_80227878
  354:  		Return
  35C:  	Case  ==  .Event:RecoverStatus % 31
  368:  		SetConst  *Var0  00000001
  378:  		SetConst  *Var1  006B0001
  388:  		ExecWait  DoRecover
  394:  	Default
  39C:  EndSwitch
  3A4:  Call  EnableIdleScript  ( .Actor:Self 00000001 )
  3B8:  Call  UseIdleAnimation  ( .Actor:Self .True )
  3CC:  Return
  3D4:  End
}

#new:Script $Script_TakeTurn_802264AC
{
    0:  Call  UseIdleAnimation  ( .Actor:Self .False )
   14:  Call  EnableIdleScript  ( .Actor:Self 00000000 )
   28:  Call  RandInt   ( 00000064 *Var0 )
   3C:  If  *Var0  <  0000003C
   4C:  	ExecWait  $Script_80226558
   58:  Else
   60:  	ExecWait  $Script_80226B88
   6C:  EndIf
   74:  Call  EnableIdleScript  ( .Actor:Self 00000001 )
   88:  Call  UseIdleAnimation  ( .Actor:Self .True )
   9C:  Return
   A4:  End
}

#new:Script $Script_80226558
{
    0:  Call  SetTargetActor    ( .Actor:Self .Actor:Player )
   14:  Call  UseBattleCamPreset    ( 0000003F )
   24:  Call  SetBattleCamZoom  (  150` )
   34:  Call  BattleCamTargetActor  ( .Actor:Self )
   44:  Call  8024ECF8  ( FFFFFFFF 00000001 00000000 )
   5C:  Set   *Var1  006B0006
   6C:  ExecWait  $Script_80225F8C
   78:  Call  SetAnimation      ( .Actor:Self 00000001 *Var1 )
   90:  Call  SetGoalToTarget   ( .Actor:Self )
   A0:  Call  GetStatusFlags    ( .Actor:Self *Var5 )
   B4:  If  *Var5  !&  ~Flags:StatusFlags:Shrink % 80000
   C4:  	Call  AddGoalPos    ( .Actor:Self  50`  0`  0` )
   E0:  Else
   E8:  	Call  AddGoalPos    ( .Actor:Self  20`  0`  0` )
  104:  EndIf
  10C:  Call  SetActorSpeed ( .Actor:Self *Fixed[4.0] )
  120:  Call  RunToGoal     ( .Actor:Self  0` .False )
  138:  Call  SetAnimation  ( .Actor:Self 00000001 006B0015 )
  150:  Wait  8`
  15C:  Call  PlaySoundAtActor  ( .Actor:Self 0000035E )
  170:  Call  SetAnimation  ( .Actor:Self 00000001 006B0016 )
  188:  Wait  20`
  194:  Call  SetAnimation  ( .Actor:Self 00000001 006B0017 )
  1AC:  Wait  3`
  1B8:  Call  SetGoalToTarget   ( .Actor:Self )
  1C8:  Call  GetStatusFlags    ( .Actor:Self *Var0 )
  1DC:  If  *Var0  !&  ~Flags:StatusFlags:Shrink % 80000
  1EC:  	Call  GetGoalPos    ( .Actor:Self *Var0 *Var1 *Var2 )
  208:  	Set   *Var1  00000000
  218:  	Call  PlayEffect    ( ~FX:Steam:LargeOutward *Var0 *Var1 *Var2 00000000 00000000 00000000 00000000 00000000 00000000 00000000 00000000 00000000 )
  25C:  	Thread
  264:  		Call  StartRumble   ( 00000001 )
  274:  		Call  ShakeCam      ( .Cam:Battle 00000000  5` *Fixed[15.0] )
  290:  	EndThread
  298:  	Call  PlaySoundAtActor  ( .Actor:Self 000020EA )
  2AC:  EndIf
  2B4:  Call  EnemyTestTarget   ( .Actor:Self *VarA ~Flags:DamageType:0 00000000 00000001 00000010 )
  2D8:  Switch  *VarA
  2E4:  	CaseOR  ==  .HitResult:Miss % 6
  2F0:  	CaseOR  ==  .HitResult:Lucky % 5
  2FC:  		Call  GetGoalPos        ( .Actor:Self *Var0 *Var1 *Var2 )
  318:  		Call  PlayEffect        ( ~FX:ShockWave:White *Var0 00000000 *Var2 00000000 00000000 00000000 00000000 00000000 00000000 00000000 00000000 00000000 )
  35C:  		Wait  30`
  368:  		Set   *Var1  006B0001
  378:  		ExecWait  $Script_80225F8C
  384:  		Call  SetAnimation      ( .Actor:Self 00000001 *Var1 )
  39C:  		Call  UseBattleCamPreset    ( 00000002 )
  3AC:  		Call  MoveBattleCamOver (  20` )
  3BC:  		If  *VarA  ==  00000005
  3CC:  			Call  EnemyTestTarget   ( .Actor:Self *Var0 ~Flags:DamageType:TriggerLucky 00000000 00000000 00000000 )
  3F0:  		EndIf
  3F8:  		ExecWait  $Script_80225FD4
  404:  		Return
  40C:  	EndCaseGroup
  414:  	Default
  41C:  EndSwitch
  424:  Call  GetStatusFlags    ( .Actor:Self *Var5 )
  438:  If  *Var5  !&  ~Flags:StatusFlags:Shrink % 80000
  448:  	Call  GetGoalPos    ( .Actor:Self *Var0 *Var1 *Var2 )
  464:  	Call  PlayEffect    ( ~FX:ShockWave:LargeWhite *Var0 00000000 *Var2 00000000 00000000 00000000 00000000 00000000 00000000 00000000 00000000 00000000 )
  4A8:  EndIf
  4B0:  Wait  2`
  4BC:  Call  SetGoalToTarget   ( .Actor:Self )
  4CC:  If  *Var5  !&  ~Flags:StatusFlags:Shrink % 80000
  4DC:  	Call  80269EAC  ( 00000017 )
  4EC:  EndIf
  4F4:  Call  EnemyDamageTarget ( .Actor:Self *VarF ~Flags:DamageType:0 00000000 00000000 00000004 00000020 )
  51C:  Call  UseBattleCamPreset    ( 0000003F )
  52C:  Call  SetBattleCamZoom  (  200` )
  53C:  Call  BattleCamTargetActor  ( .Actor:Self )
  54C:  Call  8024ECF8  ( FFFFFFFF 00000001 00000000 )
  564:  Call  MoveBattleCamOver (  30` )
  574:  Switch  *VarF
  580:  	CaseOR  ==  .HitResult:Hit % 0
  58C:  	CaseOR  ==  .HitResult:QuakeImmune % 2
  598:  		Wait  30`
  5A4:  		Set   *Var1  006B0001
  5B4:  		ExecWait  $Script_80225F8C
  5C0:  		Call  SetAnimation  ( .Actor:Self 00000001 *Var1 )
  5D8:  		Call  UseBattleCamPreset    ( 00000002 )
  5E8:  		Call  MoveBattleCamOver     (  20` )
  5F8:  		Call  YieldTurn ( )
  604:  		ExecWait  $Script_80225FD4
  610:  	EndCaseGroup
  618:  EndSwitch
  620:  Return
  628:  End
}

#new:Script $Script_80226B88
{
    0:  Call  SetTargetActor    ( .Actor:Self .Actor:Player )
   14:  Call  UseBattleCamPreset    ( 0000003F )
   24:  Call  SetBattleCamZoom  (  150` )
   34:  Call  BattleCamTargetActor  ( .Actor:Self )
   44:  Call  8024ECF8  ( FFFFFFFF 00000001 00000000 )
   5C:  Set   *Var1  006B0006
   6C:  ExecWait  $Script_80225F8C
   78:  Call  SetAnimation      ( .Actor:Self 00000001 *Var1 )
   90:  Call  SetGoalToTarget   ( .Actor:Self )
   A0:  Call  AddGoalPos        ( .Actor:Self  70`  0`  0` )
   BC:  Call  SetActorSpeed     ( .Actor:Self *Fixed[4.0] )
   D0:  Call  RunToGoal ( .Actor:Self  0` .False )
   E8:  Call  SetAnimation      ( .Actor:Self 00000001 006B000A )
  100:  Wait  8`
  10C:  Call  SetAnimation      ( .Actor:Self 00000001 006B000B )
  124:  Call  SetActorSounds    ( .Actor:Self .ActorSound:Jump 000003E7 00000000 )
  140:  Call  EnemyTestTarget   ( .Actor:Self *Var0 ~Flags:DamageType:0 00000000 00000001 00000010 )
  164:  Switch  *Var0
  170:  	CaseOR  ==  .HitResult:Miss % 6
  17C:  	CaseOR  ==  .HitResult:Lucky % 5
  188:  		Set   *VarA  *Var0
  198:  		Thread
  1A0:  			Wait  12`
  1AC:  			Call  SetAnimation  ( .Actor:Self 00000001 006B000C )
  1C4:  		EndThread
  1CC:  		Call  SetGoalToTarget       ( .Actor:Self )
  1DC:  		Call  GetGoalPos    ( .Actor:Self *Var0 *Var1 *Var2 )
  1F8:  		Sub   *Var0  0000000F
  208:  		Set   *Var1  00000000
  218:  		Add   *Var2  00000005
  228:  		Call  SetActorJumpGravity   ( .Actor:Self *Fixed[1.0] )
  23C:  		Call  SetGoalPos    ( .Actor:Self *Var0 *Var1 *Var2 )
  258:  		Call  JumpToGoal    ( .Actor:Self  23` .False .True .False )
  278:  		Call  PlaySoundAtActor      ( .Actor:Self 000020EA )
  28C:  		Call  PlayEffect    ( ~FX:ShockWave:White *Var0 00000000 *Var2 00000000 00000000 00000000 00000000 00000000 00000000 00000000 00000000 00000000 )
  2D0:  		Call  SetAnimation  ( .Actor:Self 00000001 006B000D )
  2E8:  		Thread
  2F0:  			Call  GetActorPos   ( .Actor:Self *Var0 *Var1 *Var2 )
  30C:  			Call  PlayEffect    ( ~FX:SmokeImpact:Large *Var0 *Var1 *Var2 0000003C 00000008 0000000A 00000014 00000000 00000000 00000000 00000000 00000000 )
  350:  		EndThread
  358:  		Thread
  360:  			Call  StartRumble   ( 00000001 )
  370:  			Call  ShakeCam      ( .Cam:Battle 00000000  5` *Fixed[3.0] )
  38C:  		EndThread
  394:  		Call  ResetActorSounds      ( .Actor:Self .ActorSound:Jump )
  3A8:  		Call  GetGoalPos    ( .Actor:Self *Var0 *Var1 *Var2 )
  3C4:  		Sub   *Var0  00000014
  3D4:  		Set   *Var1  00000000
  3E4:  		Add   *Var2  00000005
  3F4:  		Call  SetActorJumpGravity   ( .Actor:Self *Fixed[1.0] )
  408:  		Call  SetGoalPos    ( .Actor:Self *Var0 *Var1 *Var2 )
  424:  		Call  JumpToGoal    ( .Actor:Self  10` .False .True .False )
  444:  		Call  StartRumble   ( 00000001 )
  454:  		Call  ShakeCam      ( .Cam:Battle 00000000  5` *Fixed[3.0] )
  470:  		Call  GetActorPos   ( .Actor:Self *Var0 *Var1 *Var2 )
  48C:  		Call  PlayEffect    ( ~FX:SmokeImpact:Large *Var0 *Var1 *Var2 0000003C 00000008 0000000A 00000014 00000000 00000000 00000000 00000000 00000000 )
  4D0:  		If  *VarA  ==  .HitResult:Lucky % 5
  4E0:  			Call  EnemyTestTarget   ( .Actor:Self *Var0 ~Flags:DamageType:TriggerLucky 00000000 00000000 00000000 )
  504:  		EndIf
  50C:  		Call  UseBattleCamPreset    ( 00000002 )
  51C:  		Call  MoveBattleCamOver     (  20` )
  52C:  		Wait  8`
  538:  		Call  SetAnimation  ( .Actor:Self 00000001 006B000E )
  550:  		Wait  4`
  55C:  		ExecWait  $Script_80225FD4
  568:  		Return
  570:  	EndCaseGroup
  578:  	Default
  580:  		Thread
  588:  			Wait  9`
  594:  			Call  SetAnimation  ( .Actor:Self 00000001 006B000C )
  5AC:  		EndThread
  5B4:  		Call  SetGoalToTarget       ( .Actor:Self )
  5C4:  		Call  SetActorJumpGravity   ( .Actor:Self *Fixed[1.0] )
  5D8:  		Call  JumpToGoal    ( .Actor:Self  16` .False .True .False )
  5F8:  EndSwitch
  600:  Wait  2`
  60C:  Call  SetGoalToTarget   ( .Actor:Self )
  61C:  Call  GetStatusFlags    ( .Actor:Self *Var5 )
  630:  If  *Var5  !&  ~Flags:StatusFlags:Shrink % 80000
  640:  	Call  80269EAC  ( 00000018 )
  650:  	Call  PlaySoundAtActor  ( .Actor:Self 000020EA )
  664:  EndIf
  66C:  Call  EnemyDamageTarget ( .Actor:Self *VarF ~Flags:DamageType:0 00000000 00000000 00000006 00000020 )
  694:  Call  UseBattleCamPreset    ( 0000003F )
  6A4:  Call  SetBattleCamZoom  (  200` )
  6B4:  Call  BattleCamTargetActor  ( .Actor:Self )
  6C4:  Call  8024ECF8  ( FFFFFFFF 00000001 00000000 )
  6DC:  Call  MoveBattleCamOver (  30` )
  6EC:  Switch  *VarF
  6F8:  	CaseOR  ==  .HitResult:Hit % 0
  704:  	CaseOR  ==  .HitResult:QuakeImmune % 2
  710:  		Call  GetStatusFlags    ( .Actor:Self *Var5 )
  724:  		If  *Var5  &  ~Flags:StatusFlags:Shrink % 80000
  734:  			Goto  1
  740:  		EndIf
  748:  		Call  GetBattleFlags    ( *Var0 )
  758:  		If  *Var0  !&  80000000
  768:  			Call  GetStatusFlags    ( .Actor:Player *Var0 )
  77C:  			If  *Var0  !&  ~Flags:StatusFlags:Stone % 100000
  78C:  				Call  LandJump  ( .Actor:Self )
  79C:  			Else
  7A4:  				Goto  1
  7B0:  			EndIf
  7B8:  		Else
  7C0:  			Goto  1
  7CC:  		EndIf
  7D4:  		Label  0
  7E0:  		Call  GetActorPos   ( .Actor:Self *Var0 *Var1 *Var2 )
  7FC:  		Call  PlayEffect    ( ~FX:ShockWave:White *Var0 00000000 *Var2 00000000 00000000 00000000 00000000 00000000 00000000 00000000 00000000 00000000 )
  840:  		Call  SetAnimation  ( .Actor:Self 00000001 006B000D )
  858:  		Thread
  860:  			Call  GetActorPos   ( .Actor:Self *Var0 *Var1 *Var2 )
  87C:  			Call  PlayEffect    ( ~FX:SmokeImpact:Large *Var0 *Var1 *Var2 0000003C 00000008 0000000A 00000014 00000000 00000000 00000000 00000000 00000000 )
  8C0:  		EndThread
  8C8:  		Thread
  8D0:  			Call  StartRumble   ( 00000001 )
  8E0:  			Call  ShakeCam      ( .Cam:Battle 00000000  5` *Fixed[3.0] )
  8FC:  		EndThread
  904:  		Call  ResetActorSounds      ( .Actor:Self .ActorSound:Jump )
  918:  		Call  GetGoalPos    ( .Actor:Self *Var0 *Var1 *Var2 )
  934:  		Sub   *Var0  00000014
  944:  		Set   *Var1  00000000
  954:  		Add   *Var2  00000005
  964:  		Call  SetActorJumpGravity   ( .Actor:Self *Fixed[1.0] )
  978:  		Call  SetGoalPos    ( .Actor:Self *Var0 *Var1 *Var2 )
  994:  		Call  JumpToGoal    ( .Actor:Self  10` .False .True .False )
  9B4:  		Call  StartRumble   ( 00000001 )
  9C4:  		Call  ShakeCam      ( .Cam:Battle 00000000  5` *Fixed[3.0] )
  9E0:  		Call  GetActorPos   ( .Actor:Self *Var0 *Var1 *Var2 )
  9FC:  		Call  PlayEffect    ( ~FX:SmokeImpact:Large *Var0 *Var1 *Var2 0000003C 00000008 0000000A 00000014 00000000 00000000 00000000 00000000 00000000 )
  A40:  		Goto  2
  A4C:  		Label  1
  A58:  		Call  GetStatusFlags        ( .Actor:Self *Var5 )
  A6C:  		If  *Var5  !&  ~Flags:StatusFlags:Shrink % 80000
  A7C:  			Wait  3`
  A88:  			Call  GetGoalPos    ( .Actor:Self *Var0 *Var1 *Var2 )
  AA4:  			Call  PlayEffect    ( ~FX:ShockWave:LargeWhite *Var0 00000000 *Var2 00000000 00000000 00000000 00000000 00000000 00000000 00000000 00000000 00000000 )
  AE8:  			Call  StartRumble   ( 00000001 )
  AF8:  			Call  ShakeCam      ( .Cam:Battle 00000000  5` *Fixed[3.0] )
  B14:  		EndIf
  B1C:  		Call  GetGoalPos    ( .Actor:Self *Var0 *Var1 *Var2 )
  B38:  		Add   *Var0  00000028
  B48:  		Set   *Var1  00000000
  B58:  		Call  SetActorJumpGravity   ( .Actor:Self *Fixed[1.8] )
  B6C:  		Thread
  B74:  			Wait  8`
  B80:  			Call  SetAnimation  ( .Actor:Self 00000001 006B000E )
  B98:  		EndThread
  BA0:  		Call  SetGoalPos    ( .Actor:Self *Var0 *Var1 *Var2 )
  BBC:  		Call  JumpToGoal    ( .Actor:Self  10` .False .True .False )
  BDC:  		If  *Var5  !&  ~Flags:StatusFlags:Shrink % 80000
  BEC:  			Call  StartRumble   ( 00000001 )
  BFC:  			Call  ShakeCam      ( .Cam:Battle 00000000  5` *Fixed[3.0] )
  C18:  			Call  GetActorPos   ( .Actor:Self *Var0 *Var1 *Var2 )
  C34:  			Call  PlayEffect    ( ~FX:SmokeImpact:Large *Var0 *Var1 *Var2 0000003C 00000008 0000000A 00000014 00000000 00000000 00000000 00000000 00000000 )
  C78:  			Wait  8`
  C84:  		EndIf
  C8C:  		Label  2
  C98:  		Call  UseBattleCamPreset    ( 00000002 )
  CA8:  		Call  MoveBattleCamOver     (  20` )
  CB8:  		Call  YieldTurn ( )
  CC4:  		ExecWait  $Script_80225FD4
  CD0:  	EndCaseGroup
  CD8:  EndSwitch
  CE0:  Return
  CE8:  End
}

#new:Script $Script_80227878
{
    0:  Call  SetAnimation  ( .Actor:Self 00000001 006B0014 )
   18:  Call  ActorSpeak    ( 000E00C9 .Actor:Self 00000001 006B0014 006B0014 ) % Eeeeoooow!!
   38:  Set   *Var0  00000001
   48:  Set   *Var1  006B0014
   58:  ExecWait  DoDeath
   64:  Return
   6C:  End
}

PADDING: 802278EC to 802278F0 (0050E33C to 0050E340)
00000000

#new:Script $Script_BeforeBattle_802278F0
{
    0:  Call  SetSpriteShading  ( FFFFFFFF )
   10:  Return
   18:  End
}

#new:Script $Script_AfterBattle_80227910
{
    0:  Return
    8:  End
}

#new:ForegroundModelList $ForegroundModelList_80227920
{
	FFFFFFFF
	~Model:arn_bt01:iwa4
	00000000
}

#new:Stage $Stage_8022792C
{
	$ASCII_802282D8  % arn_tex
	$ASCII_802282C8  % arn_bt01_shape
	$ASCII_802282B8  % arn_bt01_hit
	$Script_BeforeBattle_802278F0
	$Script_AfterBattle_80227910
	$ASCII_802282B0  % arn_bg
	$ForegroundModelList_80227920
	00000000
	00000000
	00000000
}

PADDING: 80227954 to 80227960 (0050E3A4 to 0050E3B0)
00000000 00000000 00000000

#new:Script $Script_80227960
{
    0:  Set   *VarA  *Var0
   10:  Set   *Var0  00000000
   20:  Label  0
   2C:  Add   *Var0  00000001
   3C:  If  *Var0  >  00000167
   4C:  	Sub   *Var0  00000168
   5C:  EndIf
   64:  Call  RotateModel   ( *VarA *Var0 00000000 00000000 00000001 )
   84:  Wait  1`
   90:  Goto  0
   9C:  Return
   A4:  End
}

#new:Script $Script_BeforeBattle_80227A0C
{
    0:  Call  SetSpriteShading  ( FFFFFFFF )
   10:  Set   *Var0  00000008
   20:  ExecWait  $Script_80227960
   2C:  Return
   34:  End
}

#new:Script $Script_AfterBattle_80227A48
{
    0:  Return
    8:  End
}

#new:ForegroundModelList $ForegroundModelList_80227A58
{
	FFFFFFFF
	~Model:arn_bt02:iwa4
	00000000
}

#new:Stage $Stage_80227A64
{
	$ASCII_80228308  % arn_tex
	$ASCII_802282F8  % arn_bt02_shape
	$ASCII_802282E8  % arn_bt02_hit
	$Script_BeforeBattle_80227A0C
	$Script_AfterBattle_80227A48
	$ASCII_802282E0  % arn_bg
	$ForegroundModelList_80227A58
	00000000
	00000000
	00000000
}

PADDING: 80227A8C to 80227A90 (0050E4DC to 0050E4E0)
00000000

#new:Script $Script_BeforeBattle_80227A90
{
    0:  Call  SetSpriteShading  ( FFFFFFFF )
   10:  Return
   18:  End
}

#new:Script $Script_AfterBattle_80227AB0
{
    0:  Return
    8:  End
}

#new:ForegroundModelList $ForegroundModelList_80227AC0
{
	FFFFFFFF
	~Model:arn_bt03:iwa4
	00000000
}

#new:Stage $Stage_80227ACC
{
	$ASCII_80228338  % arn_tex
	$ASCII_80228328  % arn_bt03_shape
	$ASCII_80228318  % arn_bt03_hit
	$Script_BeforeBattle_80227A90
	$Script_AfterBattle_80227AB0
	$ASCII_80228310  % arn_bg
	$ForegroundModelList_80227AC0
	00000000
	00000000
	00000000
}

PADDING: 80227AF4 to 80227B00 (0050E544 to 0050E550)
00000000 00000000 00000000

#new:Script $Script_BeforeBattle_80227B00
{
    0:  Call  SetSpriteShading  ( FFFFFFFF )
   10:  Call  SetCamBGColor     ( .Cam:Battle  0`  0`  0` )
   2C:  Return
   34:  End
}

#new:Script $Script_AfterBattle_80227B3C
{
    0:  Return
    8:  End
}

#new:ForegroundModelList $ForegroundModelList_80227B4C
{
	~Model:arn_bt04:o349
	00000000
}

#new:Stage $Stage_80227B54
{
	$ASCII_80228360  % arn_tex
	$ASCII_80228350  % arn_bt04_shape
	$ASCII_80228340  % arn_bt04_hit
	$Script_BeforeBattle_80227B00
	$Script_AfterBattle_80227B3C
	00000000
	$ForegroundModelList_80227B4C
	00000000
	00000000
	00000000
}

PADDING: 80227B7C to 80227B80 (0050E5CC to 0050E5D0)
00000000

#new:Script $Script_BeforeBattle_80227B80
{
    0:  Call  SetSpriteShading  ( FFFFFFFF )
   10:  Call  SetCamBGColor     ( .Cam:Battle  0`  0`  0` )
   2C:  Return
   34:  End
}

#new:Script $Script_AfterBattle_80227BBC
{
    0:  Return
    8:  End
}

#new:ForegroundModelList $ForegroundModelList_80227BCC
{
	~Model:arn_bt05:o354
	00000000
}

#new:Stage $Stage_80227BD4
{
	$ASCII_80228388  % arn_tex
	$ASCII_80228378  % arn_bt05_shape
	$ASCII_80228368  % arn_bt05_hit
	$Script_BeforeBattle_80227B80
	$Script_AfterBattle_80227BBC
	00000000
	$ForegroundModelList_80227BCC
	00000000
	00000000
	00000000
}

PADDING: 80227BFC to 80227C00 (0050E64C to 0050E650)
00000000

#new:Script $Script_BeforeBattle_80227C00
{
    0:  Call  SetSpriteShading  ( FFFFFFFF )
   10:  Return
   18:  End
}

#new:Script $Script_AfterBattle_80227C20
{
    0:  Return
    8:  End
}

#new:ForegroundModelList $ForegroundModelList_80227C30
{
	~Model:arn_bt06:kabe3
	00000000
}

#new:Stage $Stage_80227C38
{
	$ASCII_802283B0  % arn_tex
	$ASCII_802283A0  % arn_bt06_shape
	$ASCII_80228390  % arn_bt06_hit
	$Script_BeforeBattle_80227C00
	$Script_AfterBattle_80227C20
	00000000
	$ForegroundModelList_80227C30
	00000000
	00000000
	00000000
}

#new:Formation $Formation_00
{
	$HyperGoomba 00000001 0000000A 00000000 00000000 00000000 00000000
}

#new:Formation $Formation_01
{
	$HyperGoomba 00000001 0000000A 00000000 00000000 00000000 00000000
	$HyperGoomba 00000002 00000009 00000000 00000000 00000000 00000000
}

#new:Formation $Formation_02
{
	$HyperGoomba 00000000 0000000A 00000000 00000000 00000000 00000000
	$HyperGoomba 00000001 00000009 00000000 00000000 00000000 00000000
	$HyperGoomba 00000002 00000008 00000000 00000000 00000000 00000000
}

#new:Formation $Formation_03
{
	$HyperGoomba 00000000 0000000A 00000000 00000000 00000000 00000000
	$HyperGoomba 00000001 00000009 00000000 00000000 00000000 00000000
	$HyperParagoomba 00000006 00000008 00000000 00000000 00000000 00000000
}

#new:Formation $Formation_04
{
	$HyperGoomba 00000000 0000000A 00000000 00000000 00000000 00000000
	$HyperGoomba 00000001 00000009 00000000 00000000 00000000 00000000
	$HyperGoomba 00000002 00000008 00000000 00000000 00000000 00000000
	$HyperParagoomba 00000007 00000007 00000000 00000000 00000000 00000000
}

#new:Formation $Formation_05
{
	$HyperGoomba 00000000 0000000A 00000000 00000000 00000000 00000000
	$HyperGoomba 00000001 00000009 00000000 00000000 00000000 00000000
	$HyperParagoomba 00000006 00000008 00000000 00000000 00000000 00000000
	$HyperGoomba 00000003 00000007 00000000 00000000 00000000 00000000
}

#new:Formation $Formation_06
{
	$HyperParagoomba 00000005 0000000A 00000000 00000000 00000000 00000000
}

#new:Formation $Formation_07
{
	$HyperParagoomba 00000005 0000000A 00000000 00000000 00000000 00000000
	$HyperParagoomba 00000006 00000009 00000000 00000000 00000000 00000000
}

#new:Formation $Formation_08
{
	$HyperParagoomba 00000004 0000000A 00000000 00000000 00000000 00000000
	$HyperParagoomba 00000005 00000009 00000000 00000000 00000000 00000000
	$HyperParagoomba 00000006 00000008 00000000 00000000 00000000 00000000
}

#new:Formation $Formation_09
{
	$HyperParagoomba 00000004 0000000A 00000000 00000000 00000000 00000000
	$HyperParagoomba 00000005 00000009 00000000 00000000 00000000 00000000
	$HyperParagoomba 00000006 00000008 00000000 00000000 00000000 00000000
	$HyperParagoomba 00000007 00000007 00000000 00000000 00000000 00000000
}

#new:Formation $Formation_0A
{
	$HyperCleft 00000001 0000000A 00000000 00000000 00000000 00000000
}

#new:Formation $Formation_0B
{
	$HyperCleft 00000001 0000000A 00000000 00000000 00000000 00000000
	$HyperCleft 00000002 00000009 00000000 00000000 00000000 00000000
}

#new:Formation $Formation_0C
{
	$HyperCleft 00000000 0000000A 00000000 00000000 00000000 00000000
	$HyperCleft 00000001 00000009 00000000 00000000 00000000 00000000
	$HyperCleft 00000002 00000008 00000000 00000000 00000000 00000000
}

#new:Formation $Formation_0D
{
	$HyperCleft 00000000 0000000A 00000000 00000000 00000000 00000000
	$HyperGoomba 00000001 00000009 00000000 00000000 00000000 00000000
	$HyperGoomba 00000002 00000008 00000000 00000000 00000000 00000000
}

#new:Formation $Formation_0E
{
	$HyperCleft 00000000 0000000A 00000000 00000000 00000000 00000000
	$HyperCleft 00000001 00000009 00000000 00000000 00000000 00000000
	$HyperGoomba 00000002 00000008 00000000 00000000 00000000 00000000
	$HyperGoomba 00000003 00000007 00000000 00000000 00000000 00000000
}

#new:Vector3D $Vector3D_802280C0
{
	90` 20` 0`
}

#new:Formation $Formation_0F
{
	$TubbasHeart $Vector3D_802280C0 0000000A 00000000 00000000 00000000 00000000
}

#new:Vector3D $Vector3D_802280E8
{
	75` 0` 10`
}

#new:Formation $Formation_10
{
	$TubbaBlubba $Vector3D_802280E8 0000000A 00000000 00000000 00000000 00000000
}

#new:FormationTable $FormationTable
{
	$SJIS_80228580 00000001 $Formation_00 $Stage_8022792C 00000000
	$SJIS_8022856C 00000002 $Formation_01 $Stage_8022792C 00000000
	$SJIS_80228558 00000003 $Formation_02 $Stage_8022792C 00000000
	$SJIS_80228530 00000003 $Formation_03 $Stage_8022792C 00000000
	$SJIS_80228508 00000004 $Formation_04 $Stage_8022792C 00000000
	$SJIS_802284CC 00000004 $Formation_05 $Stage_8022792C 00000000
	$SJIS_802284B4 00000001 $Formation_06 $Stage_8022792C 00000000
	$SJIS_8022849C 00000002 $Formation_07 $Stage_8022792C 00000000
	$SJIS_80228484 00000003 $Formation_08 $Stage_8022792C 00000000
	$SJIS_8022846C 00000004 $Formation_09 $Stage_8022792C 00000000
	$SJIS_80228458 00000001 $Formation_0A $Stage_8022792C 00000000
	$SJIS_80228440 00000002 $Formation_0B $Stage_8022792C 00000000
	$SJIS_80228428 00000003 $Formation_0C $Stage_8022792C 00000000
	$SJIS_80228400 00000003 $Formation_0D $Stage_8022792C 00000000
	$SJIS_802283D8 00000004 $Formation_0E $Stage_8022792C 00000000
	$SJIS_802283C4 00000001 $Formation_0F $Stage_80227C38 00000000
	$SJIS_802283B8 00000001 $Formation_10 $Stage_8022792C 00000000
	00000000 00000000 00000000 00000000 00000000
}

#new:StageTable $StageTable
{
	$ASCII_802285BC $Stage_8022792C
	$ASCII_802285B4 $Stage_80227A64
	$ASCII_802285AC $Stage_80227ACC
	$ASCII_802285A4 $Stage_80227B54
	$ASCII_8022859C $Stage_80227BD4
	$ASCII_80228594 $Stage_80227C38
	00000000 00000000
}

#new:ASCII $ASCII_802282B0
{
	"arn_bg"
}

#new:ASCII $ASCII_802282B8
{
	"arn_bt01_hit"
}

#new:ASCII $ASCII_802282C8
{
	"arn_bt01_shape"
}

#new:ASCII $ASCII_802282D8
{
	"arn_tex"
}

#new:ASCII $ASCII_802282E0
{
	"arn_bg"
}

#new:ASCII $ASCII_802282E8
{
	"arn_bt02_hit"
}

#new:ASCII $ASCII_802282F8
{
	"arn_bt02_shape"
}

#new:ASCII $ASCII_80228308
{
	"arn_tex"
}

#new:ASCII $ASCII_80228310
{
	"arn_bg"
}

#new:ASCII $ASCII_80228318
{
	"arn_bt03_hit"
}

#new:ASCII $ASCII_80228328
{
	"arn_bt03_shape"
}

#new:ASCII $ASCII_80228338
{
	"arn_tex"
}

#new:ASCII $ASCII_80228340
{
	"arn_bt04_hit"
}

#new:ASCII $ASCII_80228350
{
	"arn_bt04_shape"
}

#new:ASCII $ASCII_80228360
{
	"arn_tex"
}

#new:ASCII $ASCII_80228368
{
	"arn_bt05_hit"
}

#new:ASCII $ASCII_80228378
{
	"arn_bt05_shape"
}

#new:ASCII $ASCII_80228388
{
	"arn_tex"
}

#new:ASCII $ASCII_80228390
{
	"arn_bt06_hit"
}

#new:ASCII $ASCII_802283A0
{
	"arn_bt06_shape"
}

#new:ASCII $ASCII_802283B0
{
	"arn_tex"
}

#new:SJIS $SJIS_802283B8
{
	ドガボン % dogabon
}

#new:SJIS $SJIS_802283C4
{
	ドガボンしんぞう % dogabonshinzou
}

#new:SJIS $SJIS_802283D8
{
	ハイパーシンエモンx2,ハイパークリボーx2 % haipa-shin'emonx2,haipa-kuribo-x2
}

#new:SJIS $SJIS_80228400
{
	ハイパーシンエモン,ハイパークリボーx2 % haipa-shin'emon,haipa-kuribo-x2
}

#new:SJIS $SJIS_80228428
{
	ハイパーシンエモンx3 % haipa-shin'emonx3
}

#new:SJIS $SJIS_80228440
{
	ハイパーシンエモンx2 % haipa-shin'emonx2
}

#new:SJIS $SJIS_80228458
{
	ハイパーシンエモン % haipa-shin'emon
}

#new:SJIS $SJIS_8022846C
{
	ハイパーパタクリボーx4 % haipa-patakuribo-x4
}

#new:SJIS $SJIS_80228484
{
	ハイパーパタクリボーx3 % haipa-patakuribo-x3
}

#new:SJIS $SJIS_8022849C
{
	ハイパーパタクリボーx2 % haipa-patakuribo-x2
}

#new:SJIS $SJIS_802284B4
{
	ハイパーパタクリボー % haipa-patakuribo-
}

#new:SJIS $SJIS_802284CC
{
	ハイパークリボーx2,ハイパーパタクリボー,ハイパークリボー % haipa-kuribo-x2,haipa-patakuribo-,haipa-kuribo-
}

#new:SJIS $SJIS_80228508
{
	ハイパークリボーx3,ハイパーパタクリボー % haipa-kuribo-x3,haipa-patakuribo-
}

#new:SJIS $SJIS_80228530
{
	ハイパークリボーx2,ハイパーパタクリボー % haipa-kuribo-x2,haipa-patakuribo-
}

#new:SJIS $SJIS_80228558
{
	ハイパークリボーx３ % haipa-kuribo-x3
}

#new:SJIS $SJIS_8022856C
{
	ハイパークリボーx２ % haipa-kuribo-x2
}

#new:SJIS $SJIS_80228580
{
	ハイパークリボー % haipa-kuribo-
}

#new:ASCII $ASCII_80228594
{
	"arn_06"
}

#new:ASCII $ASCII_8022859C
{
	"arn_05"
}

#new:ASCII $ASCII_802285A4
{
	"arn_04"
}

#new:ASCII $ASCII_802285AC
{
	"arn_03"
}

#new:ASCII $ASCII_802285B4
{
	"arn_02"
}

#new:ASCII $ASCII_802285BC
{
	"arn_01"
}

PADDING: 802285C4 to 802285D0 (0050F014 to 0050F020)
00000000 00000000 00000000

