% Script File: 20 Area PRA2.bscr
% Decoded from: 660750 to 669D80 (20 Area PRA2)

#new:Function $Function_80218000
{
    0:  ADDIU     SP, SP, FFE0
    4:  SW        S1, 14 (SP)
    8:  COPY      S1, A0
    C:  SW        RA, 18 (SP)
   10:  SW        S0, 10 (SP)
   14:  LW        S0, C (S1)
   18:  LW        A1, 0 (S0)
   1C:  JAL       ~Func:get_variable
   20:  ADDIU     S0, S0, 4
   24:  COPY      A0, S1
   28:  LW        A1, 0 (S0)
   2C:  JAL       ~Func:get_variable
   30:  COPY      S0, V0
   34:  COPY      A0, S0
   38:  JAL       ~Func:start_rumble
   3C:  COPY      A1, V0
   40:  LW        RA, 18 (SP)
   44:  LW        S1, 14 (SP)
   48:  LW        S0, 10 (SP)
   4C:  LI        V0, 2
   50:  JR        RA
   54:  ADDIU     SP, SP, 20
}

#new:Function $Function_80218058
{
    0:  ADDIU     SP, SP, FFB8
    4:  SW        S2, 18 (SP)
    8:  COPY      S2, A0
    C:  SW        RA, 28 (SP)
   10:  SW        S5, 24 (SP)
   14:  SW        S4, 20 (SP)
   18:  SW        S3, 1C (SP)
   1C:  SW        S1, 14 (SP)
   20:  SW        S0, 10 (SP)
   24:  SDC1      F24, 40 (SP)
   28:  SDC1      F22, 38 (SP)
   2C:  SDC1      F20, 30 (SP)
   30:  LW        S0, C (S2)
   34:  LW        S4, 0 (S0)
   38:  ADDIU     S0, S0, 4
   3C:  JAL       ~Func:get_variable
   40:  COPY      A1, S4
   44:  COPY      S3, V0
   48:  LW        S5, 0 (S0)
   4C:  ADDIU     S0, S0, 4
   50:  LW        A1, 0 (S0)
   54:  ADDIU     S0, S0, 4
   58:  JAL       ~Func:get_float_variable
   5C:  COPY      A0, S2
   60:  LW        A1, 0 (S0)
   64:  ADDIU     S0, S0, 4
   68:  COPY      A0, S2
   6C:  JAL       ~Func:get_float_variable
   70:  MOV.S     F24, F0
   74:  LW        A1, 0 (S0)
   78:  ADDIU     S0, S0, 4
   7C:  COPY      A0, S2
   80:  JAL       ~Func:get_variable
   84:  MOV.S     F20, F0
   88:  LW        A1, 0 (S0)
   8C:  ADDIU     S0, S0, 4
   90:  COPY      A0, S2
   94:  JAL       ~Func:get_variable
   98:  COPY      S1, V0
   9C:  COPY      A0, S2
   A0:  LW        A1, 0 (S0)
   A4:  JAL       ~Func:get_float_variable
   A8:  COPY      S0, V0
   AC:  LIF       F2, 180.0
   B4:  LIF       F4, 3.141592
   C0:  DIV.S     F0, F0, F2
   C4:  MUL.S     F22, F0, F4
   C8:  NOP
   CC:  SUB.S     F20, F20, F24
   D0:  LIF       F0, 0.5
   D8:  NOP
   DC:  MUL.S     F20, F20, F0
   E0:  NOP
   E4:  BEQ       S0, R0, .o104
   E8:  SLT       V0, S1, S3
   EC:  BEQ       V0, R0, .o104
   F0:  COPY      A0, S2
   F4:  COPY      S3, S1
   F8:  COPY      A1, S4
   FC:  JAL       ~Func:set_variable
  100:  COPY      A2, S1
        .o104
  104:  LIF       F0, 3.141592
  110:  MTC1      S3, F12
  114:  NOP
  118:  CVT.S.W   F12, F12
  11C:  MUL.S     F12, F12, F0
  120:  NOP
  124:  MTC1      S1, F0
  128:  NOP
  12C:  CVT.S.W   F0, F0
  130:  DIV.S     F12, F12, F0
  134:  JAL       ~Func:cos_rad
  138:  ADD.S     F12, F12, F22
  13C:  MUL.S     F0, F20, F0
  140:  NOP
  144:  ADD.S     F2, F24, F20
  148:  SUB.S     F2, F2, F0
  14C:  COPY      A0, S2
  150:  MFC1      A2, F2
  154:  JAL       ~Func:set_float_variable
  158:  COPY      A1, S5
  15C:  LW        RA, 28 (SP)
  160:  LW        S5, 24 (SP)
  164:  LW        S4, 20 (SP)
  168:  LW        S3, 1C (SP)
  16C:  LW        S2, 18 (SP)
  170:  LW        S1, 14 (SP)
  174:  LW        S0, 10 (SP)
  178:  LDC1      F24, 40 (SP)
  17C:  LDC1      F22, 38 (SP)
  180:  LDC1      F20, 30 (SP)
  184:  LI        V0, 2
  188:  JR        RA
  18C:  ADDIU     SP, SP, 48
}

#new:Function $Function_802181E8
{
    0:  ADDIU     SP, SP, FFD8
    4:  SW        S2, 18 (SP)
    8:  COPY      S2, A0
    C:  SW        RA, 20 (SP)
   10:  SW        S3, 1C (SP)
   14:  SW        S1, 14 (SP)
   18:  SW        S0, 10 (SP)
   1C:  LW        S0, C (S2)
   20:  LW        A1, 0 (S0)
   24:  JAL       ~Func:get_variable
   28:  ADDIU     S0, S0, 4
   2C:  COPY      S1, V0
   30:  LW        A1, 0 (S0)
   34:  ADDIU     S0, S0, 4
   38:  JAL       ~Func:get_variable
   3C:  COPY      A0, S2
   40:  COPY      S3, V0
   44:  LI        V0, FF81
   48:  BNE       S1, V0, .o54
   4C:  NOP
   50:  LW        S1, 148 (S2)
        .o54
   54:  JAL       ~Func:get_actor
   58:  COPY      A0, S1
   5C:  COPY      A0, V0
   60:  JAL       ~Func:get_actor_part
   64:  COPY      A1, S3
   68:  LW        A1, 0 (S0)
   6C:  LH        A2, 98 (V0)
   70:  JAL       ~Func:set_variable
   74:  COPY      A0, S2
   78:  LW        RA, 20 (SP)
   7C:  LW        S3, 1C (SP)
   80:  LW        S2, 18 (SP)
   84:  LW        S1, 14 (SP)
   88:  LW        S0, 10 (SP)
   8C:  LI        V0, 2
   90:  JR        RA
   94:  ADDIU     SP, SP, 28
}

#new:Function $Function_80218280
{
    0:  ADDIU     SP, SP, FFE8
    4:  SW        RA, 10 (SP)
    8:  LW        V0, C (A0)
    C:  JAL       ~Func:get_variable
   10:  LW        A1, 0 (V0)
   14:  LW        V1, C (V0)
   18:  LI        A0, F8
   1C:  SW        A0, 18 (V1)
   20:  LW        V1, C (V0)
   24:  SW        A0, 1C (V1)
   28:  LW        V1, C (V0)
   2C:  LI        A1, FF
   30:  SW        A1, 20 (V1)
   34:  LW        A0, C (V0)
   38:  LI        V1, 80
   3C:  SW        V1, 28 (A0)
   40:  LW        A0, C (V0)
   44:  LI        V1, E0
   48:  SW        V1, 2C (A0)
   4C:  LW        V1, C (V0)
   50:  SW        A1, 30 (V1)
   54:  LW        RA, 10 (SP)
   58:  LI        V0, 2
   5C:  JR        RA
   60:  ADDIU     SP, SP, 18
}

#new:Function $Function_802182E4
{
    0:  ADDIU     SP, SP, FFE8
    4:  SW        RA, 10 (SP)
    8:  LW        V0, C (A0)
    C:  JAL       ~Func:get_variable
   10:  LW        A1, 0 (V0)
   14:  LW        V1, C (V0)
   18:  LI        A1, FF
   1C:  SW        A1, 30 (V1)
   20:  LW        V1, C (V0)
   24:  SW        A1, 34 (V1)
   28:  LW        V1, C (V0)
   2C:  SW        A1, 38 (V1)
   30:  LW        A0, C (V0)
   34:  LI        V1, C8
   38:  SW        V1, 40 (A0)
   3C:  LW        A0, C (V0)
   40:  LI        V1, F0
   44:  SW        V1, 44 (A0)
   48:  LW        V1, C (V0)
   4C:  SW        A1, 48 (V1)
   50:  LW        RA, 10 (SP)
   54:  LI        V0, 2
   58:  JR        RA
   5C:  ADDIU     SP, SP, 18
}

#new:Function $Function_80218344
{
    0:  ADDIU     SP, SP, FFE8
    4:  SW        RA, 10 (SP)
    8:  LW        V0, C (A0)
    C:  JAL       ~Func:get_variable
   10:  LW        A1, 0 (V0)
   14:  LW        V1, C (V0)
   18:  LI        A1, FF
   1C:  SW        A1, 18 (V1)
   20:  LW        V1, C (V0)
   24:  SW        A1, 1C (V1)
   28:  LW        V1, C (V0)
   2C:  SW        A1, 20 (V1)
   30:  LW        A0, C (V0)
   34:  LI        V1, C8
   38:  SW        V1, 28 (A0)
   3C:  LW        A0, C (V0)
   40:  LI        V1, F0
   44:  SW        V1, 2C (A0)
   48:  LW        V1, C (V0)
   4C:  SW        A1, 30 (V1)
   50:  LW        RA, 10 (SP)
   54:  LI        V0, 2
   58:  JR        RA
   5C:  ADDIU     SP, SP, 18
}

#new:Function $Function_802183A4
{
    0:  ADDIU     SP, SP, FFC8
    4:  SW        S1, 14 (SP)
    8:  COPY      S1, A0
    C:  SW        RA, 1C (SP)
   10:  SW        S2, 18 (SP)
   14:  SW        S0, 10 (SP)
   18:  SDC1      F24, 30 (SP)
   1C:  SDC1      F22, 28 (SP)
   20:  SDC1      F20, 20 (SP)
   24:  LW        S0, C (S1)
   28:  LW        S2, 0 (S0)
   2C:  ADDIU     S0, S0, 4
   30:  LW        A1, 0 (S0)
   34:  JAL       ~Func:get_variable
   38:  ADDIU     S0, S0, 4
   3C:  LW        A1, 0 (S0)
   40:  ADDIU     S0, S0, 4
   44:  MTC1      V0, F24
   48:  NOP
   4C:  CVT.S.W   F24, F24
   50:  JAL       ~Func:get_variable
   54:  COPY      A0, S1
   58:  LW        A1, 0 (S0)
   5C:  ADDIU     S0, S0, 4
   60:  MTC1      V0, F22
   64:  NOP
   68:  CVT.S.W   F22, F22
   6C:  JAL       ~Func:get_variable
   70:  COPY      A0, S1
   74:  LW        A1, 0 (S0)
   78:  MTC1      V0, F20
   7C:  NOP
   80:  CVT.S.W   F20, F20
   84:  JAL       ~Func:get_variable
   88:  COPY      A0, S1
   8C:  MOV.S     F12, F24
   90:  MTC1      V0, F2
   94:  NOP
   98:  CVT.S.W   F2, F2
   9C:  MFC1      A2, F20
   A0:  MFC1      A3, F2
   A4:  JAL       ~Func:atan2
   A8:  MOV.S     F14, F22
   AC:  COPY      A0, S1
   B0:  TRUNC.W.S F2, F0
   B4:  MFC1      A2, F2
   B8:  JAL       ~Func:set_variable
   BC:  COPY      A1, S2
   C0:  LW        RA, 1C (SP)
   C4:  LW        S2, 18 (SP)
   C8:  LW        S1, 14 (SP)
   CC:  LW        S0, 10 (SP)
   D0:  LDC1      F24, 30 (SP)
   D4:  LDC1      F22, 28 (SP)
   D8:  LDC1      F20, 20 (SP)
   DC:  LI        V0, 2
   E0:  JR        RA
   E4:  ADDIU     SP, SP, 38
}

#new:Function $Function_8021848C
{
    0:  ADDIU     SP, SP, FFE0
    4:  SW        S2, 18 (SP)
    8:  COPY      S2, A0
    C:  SW        RA, 1C (SP)
   10:  SW        S1, 14 (SP)
   14:  SW        S0, 10 (SP)
   18:  LW        S0, C (S2)
   1C:  LW        A1, 0 (S0)
   20:  JAL       ~Func:get_variable
   24:  ADDIU     S0, S0, 4
   28:  LW        A1, 0 (S0)
   2C:  ADDIU     S0, S0, 4
   30:  COPY      A0, S2
   34:  JAL       ~Func:get_variable
   38:  COPY      S1, V0
   3C:  MTC1      V0, F0
   40:  NOP
   44:  CVT.S.W   F0, F0
   48:  SWC1      F0, 0 (S1)
   4C:  LW        A1, 0 (S0)
   50:  ADDIU     S0, S0, 4
   54:  JAL       ~Func:get_variable
   58:  COPY      A0, S2
   5C:  MTC1      V0, F0
   60:  NOP
   64:  CVT.S.W   F0, F0
   68:  SWC1      F0, 4 (S1)
   6C:  LW        A1, 0 (S0)
   70:  ADDIU     S0, S0, 4
   74:  JAL       ~Func:get_variable
   78:  COPY      A0, S2
   7C:  LI        A0, 14
   80:  MTC1      V0, F0
   84:  NOP
   88:  CVT.S.W   F0, F0
   8C:  JAL       ~Func:rand_int
   90:  SWC1      F0, 8 (S1)
   94:  LI        A0, 28
   98:  SUBU      V0, R0, V0
   9C:  MTC1      V0, F0
   A0:  NOP
   A4:  CVT.S.W   F0, F0
   A8:  JAL       ~Func:rand_int
   AC:  SWC1      F0, C (S1)
   B0:  ADDIU     V0, V0, 28
   B4:  MTC1      V0, F0
   B8:  NOP
   BC:  CVT.S.W   F0, F0
   C0:  SWC1      F0, 10 (S1)
   C4:  SW        R0, 14 (S1)
   C8:  LW        A1, 0 (S0)
   CC:  ADDIU     S0, S0, 4
   D0:  JAL       ~Func:get_variable
   D4:  COPY      A0, S2
   D8:  MTC1      V0, F0
   DC:  NOP
   E0:  CVT.S.W   F0, F0
   E4:  SWC1      F0, 18 (S1)
   E8:  LW        A1, 0 (S0)
   EC:  ADDIU     S0, S0, 4
   F0:  JAL       ~Func:get_variable
   F4:  COPY      A0, S2
   F8:  MTC1      V0, F0
   FC:  NOP
  100:  CVT.S.W   F0, F0
  104:  SWC1      F0, 1C (S1)
  108:  LW        A1, 0 (S0)
  10C:  JAL       ~Func:get_variable
  110:  COPY      A0, S2
  114:  MTC1      V0, F0
  118:  NOP
  11C:  CVT.S.W   F0, F0
  120:  SWC1      F0, 20 (S1)
  124:  LW        RA, 1C (SP)
  128:  LW        S2, 18 (SP)
  12C:  LW        S1, 14 (SP)
  130:  LW        S0, 10 (SP)
  134:  LI        V0, 2
  138:  JR        RA
  13C:  ADDIU     SP, SP, 20
}

PADDING: 802185CC to 802185D0 (00660D1C to 00660D20)
00000000

#new:Function $Function_802185D0
{
    0:  ADDIU     SP, SP, FFE0
    4:  SW        S0, 10 (SP)
    8:  COPY      S0, A0
    C:  SW        RA, 1C (SP)
   10:  SW        S2, 18 (SP)
   14:  SW        S1, 14 (SP)
   18:  LW        A0, 148 (S0)
   1C:  JAL       ~Func:get_actor
   20:  LW        S1, C (S0)
   24:  COPY      S2, V0
   28:  COPY      A0, S2
   2C:  JAL       ~Func:get_actor_part
   30:  LI        A1, 1
   34:  COPY      A0, S0
   38:  LW        A1, 0 (S1)
   3C:  JAL       ~Func:get_variable
   40:  COPY      S0, V0
   44:  LWC1      F0, 4C (S0)
   48:  LIF       F2, 24.0
   50:  NOP
   54:  MUL.S     F0, F0, F2
   58:  NOP
   5C:  COPY      V1, V0
   60:  LW        V0, C (V1)
   64:  SWC1      F0, 10 (V0)
   68:  LWC1      F0, 50 (S0)
   6C:  MUL.S     F0, F0, F2
   70:  NOP
   74:  LW        V0, C (V1)
   78:  SWC1      F0, 14 (V0)
   7C:  LW        V0, 0 (S0)
   80:  ANDI      V0, V0, 1
   84:  BEQ       V0, R0, .oAC
   88:  NOP
   8C:  LW        V0, C (V1)
   90:  LWC1      F0, 144 (S2)
   94:  SWC1      F0, 4 (V0)
   98:  LW        V0, C (V1)
   9C:  LIF       F0, -1000.0
   A4:  BEQ       R0, R0, .oC4
   A8:  SWC1      F0, 8 (V0)
        .oAC
   AC:  LW        V0, C (V1)
   B0:  LWC1      F0, 144 (S2)
   B4:  SWC1      F0, 4 (V0)
   B8:  LW        V0, C (V1)
   BC:  LWC1      F0, 148 (S2)
   C0:  SWC1      F0, 8 (V0)
        .oC4
   C4:  LW        V0, C (V1)
   C8:  LWC1      F0, 14C (S2)
   CC:  SWC1      F0, C (V0)
   D0:  LW        RA, 1C (SP)
   D4:  LW        S2, 18 (SP)
   D8:  LW        S1, 14 (SP)
   DC:  LW        S0, 10 (SP)
   E0:  CLEAR     V0
   E4:  JR        RA
   E8:  ADDIU     SP, SP, 20
}

PADDING: 802186BC to 802186C0 (00660E0C to 00660E10)
00000000

% Origin: HEURISTIC
#new:Function $Function_802186C0
{
    0:  ADDIU     SP, SP, FFC0
    4:  SW        S6, 38 (SP)
    8:  COPY      S6, A0
    C:  ADDIU     A1, SP, 10
   10:  ADDIU     A2, SP, 14
   14:  ADDIU     A3, SP, 18
   18:  SW        RA, 3C (SP)
   1C:  SW        S5, 34 (SP)
   20:  SW        S4, 30 (SP)
   24:  SW        S3, 2C (SP)
   28:  SW        S2, 28 (SP)
   2C:  SW        S1, 24 (SP)
   30:  JAL       ~Func:mdl_get_copied_vertices
   34:  SW        S0, 20 (SP)
   38:  LW        V0, 18 (SP)
   3C:  BLEZ      V0, .o188
   40:  CLEAR     S0
   44:  LA        V1, $???_802211E0
   4C:  SLL       V0, S6, 1
   50:  ADDU      S4, V0, V1
   54:  LI        S3, 55555556
   5C:  ORI       S5, R0, 8000
   60:  MULT      S0, S3
        .o64
   64:  SRA       S2, S0, 1F
   68:  MFHI      V1
   6C:  SUBU      V1, V1, S2
   70:  SLL       V0, V1, 1
   74:  ADDU      V0, V0, V1
   78:  SUBU      V0, S0, V0
   7C:  LHU       V1, 0 (S4)
   80:  ADDIU     V0, V0, 1
   84:  MULT      V1, V0
   88:  SLL       V0, S0, 4
   8C:  MFLO      V1
   90:  ADDU      A0, V1, S0
   94:  LW        V1, 14 (SP)
   98:  ANDI      A0, A0, FFFF
   9C:  JAL       ~Func:sins
   A0:  ADDU      S1, V1, V0
   A4:  SLL       V0, V0, 10
   A8:  SRA       V0, V0, 10
   AC:  ADDU      V0, V0, S5
   B0:  SRL       V1, V0, 1F
   B4:  ADDU      V0, V0, V1
   B8:  SLL       V0, V0, F
   BC:  SRA       V0, V0, 10
   C0:  SLL       V1, V0, 2
   C4:  ADDU      V1, V1, V0
   C8:  SLL       V0, V1, 5
   CC:  SUBU      V1, V0, V1
   D0:  BGEZ      V1, .oDC
   D4:  COPY      V0, V1
   D8:  ADDIU     V0, V1, 7FFF
        .oDC
   DC:  SRA       A0, V0, F
   E0:  ADDIU     V0, A0, 64
   E4:  SB        V0, E (S1)
   E8:  ADDIU     V0, A0, 32
   EC:  SUBU      V1, S0, S2
   F0:  SRA       A1, V1, 1
   F4:  MULT      A1, S3
   F8:  SB        V0, D (S1)
   FC:  LHU       A0, 0 (S4)
  100:  SRA       V1, V1, 1F
  104:  SRL       A2, A0, F
  108:  MFHI      T1
  10C:  SUBU      V1, T1, V1
  110:  SLL       V0, V1, 1
  114:  ADDU      V0, V0, V1
  118:  SUBU      A1, A1, V0
  11C:  ADDIU     A1, A1, 1
  120:  SLL       A1, A1, F
  124:  MULT      A2, A1
  128:  SRL       A0, A0, E
  12C:  SLL       A0, A0, F
  130:  MFLO      V1
  134:  ADDU      A0, V1, A0
  138:  ADDU      A0, A0, S0
  13C:  JAL       ~Func:sins
  140:  ANDI      A0, A0, FFFF
  144:  SLL       V0, V0, 10
  148:  SRA       V0, V0, 10
  14C:  LBU       V1, C (S1)
  150:  ADDU      V0, V0, S5
  154:  MULT      V1, V0
  158:  MFLO      V1
  15C:  BGEZ      V1, .o170
  160:  SRA       V0, V1, 10
  164:  ORI       V0, R0, FFFF
  168:  ADDU      V1, V1, V0
  16C:  SRA       V0, V1, 10
        .o170
  170:  SB        V0, C (S1)
  174:  LW        V0, 18 (SP)
  178:  ADDIU     S0, S0, 1
  17C:  SLT       V0, S0, V0
  180:  BNE       V0, R0, .o64
  184:  MULT      S0, S3
        .o188
  188:  LA        V1, 8009A66C
  190:  LW        V0, 0 (V1)
  194:  COPY      A0, S6
  198:  COPY      S0, V0
  19C:  ADDIU     V0, V0, 8
  1A0:  SW        V0, 0 (V1)
  1A4:  LUI       V0, DE00
  1A8:  JAL       ~Func:mdl_get_copied_gfx
  1AC:  SW        V0, 0 (S0)
  1B0:  SW        V0, 4 (S0)
  1B4:  LA        V0, $???_802211E0
  1BC:  SLL       V1, S6, 1
  1C0:  ADDU      V1, V1, V0
  1C4:  LHU       V0, 0 (V1)
  1C8:  ADDIU     V0, V0, 253
  1CC:  SH        V0, 0 (V1)
  1D0:  LW        RA, 3C (SP)
  1D4:  LW        S6, 38 (SP)
  1D8:  LW        S5, 34 (SP)
  1DC:  LW        S4, 30 (SP)
  1E0:  LW        S3, 2C (SP)
  1E4:  LW        S2, 28 (SP)
  1E8:  LW        S1, 24 (SP)
  1EC:  LW        S0, 20 (SP)
  1F0:  JR        RA
  1F4:  ADDIU     SP, SP, 40
}

#new:Function $Function_802188B8
{
    0:  ADDIU     SP, SP, FFE8
    4:  CLEAR     A0
    8:  SW        RA, 10 (SP)
    C:  JAL       ~Func:playFX_45
   10:  LI        A1, 10
   14:  LW        RA, 10 (SP)
   18:  LI        V0, 2
   1C:  JR        RA
   20:  ADDIU     SP, SP, 18
}

% Origin: HEURISTIC
#new:Function $Function_802188DC
{
    0:  ADDIU     SP, SP, FFD0
    4:  SW        S1, 14 (SP)
    8:  COPY      S1, A0
    C:  SW        RA, 20 (SP)
   10:  SW        S3, 1C (SP)
   14:  SW        S2, 18 (SP)
   18:  SW        S0, 10 (SP)
   1C:  SDC1      F20, 28 (SP)
   20:  LW        S0, C (S1)
   24:  LW        A1, 0 (S0)
   28:  JAL       ~Func:get_variable
   2C:  ADDIU     S0, S0, 4
   30:  LI        V1, 66666667
   38:  MULT      V0, V1
   3C:  SRA       V0, V0, 1F
   40:  LIF       F0, 6.28318
   4C:  MFHI      A3
   50:  SRA       V1, A3, 2
   54:  SUBU      V1, V1, V0
   58:  MTC1      V1, F12
   5C:  NOP
   60:  CVT.S.W   F12, F12
   64:  MUL.S     F12, F12, F0
   68:  NOP
   6C:  LIF       F0, 360.0
   74:  LIF       F2, 8.0
   7C:  DIV.S     F12, F12, F0
   80:  MUL.S     F12, F12, F2
   84:  NOP
   88:  LW        S2, 0 (S0)
   8C:  ADDIU     S0, S0, 4
   90:  LW        S3, 0 (S0)
   94:  JAL       ~Func:sin_rad
   98:  LW        S0, 4 (S0)
   9C:  COPY      A0, S1
   A0:  LIF       F2, 10.0
   A8:  COPY      A1, S2
   AC:  MUL.S     F20, F0, F2
   B0:  NOP
   B4:  JAL       ~Func:set_variable
   B8:  CLEAR     A2
   BC:  COPY      A0, S1
   C0:  TRUNC.W.S F4, F20
   C4:  MFC1      A2, F4
   C8:  JAL       ~Func:set_variable
   CC:  COPY      A1, S3
   D0:  COPY      A0, S1
   D4:  COPY      A1, S0
   D8:  JAL       ~Func:set_variable
   DC:  CLEAR     A2
   E0:  LW        RA, 20 (SP)
   E4:  LW        S3, 1C (SP)
   E8:  LW        S2, 18 (SP)
   EC:  LW        S1, 14 (SP)
   F0:  LW        S0, 10 (SP)
   F4:  LDC1      F20, 28 (SP)
   F8:  LI        V0, 2
   FC:  JR        RA
  100:  ADDIU     SP, SP, 30
}

% Origin: HEURISTIC
#new:Function $Function_802189E0
{
    0:  ADDIU     SP, SP, FFE8
    4:  SW        RA, 10 (SP)
    8:  JAL       ~Func:enable_background_wave
    C:  NOP
   10:  LW        RA, 10 (SP)
   14:  JR        RA
   18:  ADDIU     SP, SP, 18
}

PADDING: 802189FC to 80218A00 (0066114C to 00661150)
00000000

#new:IdleAnimations $IdleAnimations_80218A00
{
	.Status:Normal    007F0009
	.Status:Sleep     007F001B
	.Status:Dizzy     007F001A
	.Status:Paralyze  007F0000
	.Status:Stop      007F0000
	.Status:End
}

#new:DefenseTable $DefenseTable_80218A2C
{
	.Element:Normal 00000002
	.Element:Fire   00000000
	.Element:Ice    00000063
	.Element:End
}

#new:StatusTable $StatusTable_80218A48
{
	.Status:Normal      0`
	.Status:Default     0`
	.Status:Sleep      30`
	.Status:Poison      0`
	.Status:Frozen      0`
	.Status:Dizzy      40`
	.Status:Fear        0`
	.Status:Static      0`
	.Status:Paralyze   40`
	.Status:Shrink      0`
	.Status:Stop       50`
	.Status:DefaultTurnMod    0`
	.Status:SleepTurnMod     -1`
	.Status:PoisonTurnMod     0`
	.Status:FrozenTurnMod     0`
	.Status:DizzyTurnMod     -1`
	.Status:FearTurnMod       0`
	.Status:StaticTurnMod     0`
	.Status:ParalyzeTurnMod  -1`
	.Status:ShrinkTurnMod    -1`
	.Status:StopTurnMod      -2`
	.Status:End
}

#new:PartsTable $PartsTable_80218AF4
{
	00800028 01000000 003600FF $IdleAnimations_80218A00 $DefenseTable_80218A2C 00000008 00000000 00EA0000 00000000
}

#new:Actor $CrystalKing
{
	% stats
	[Index]        BDb
	[Level]        85`b
	[MaxHP]        70`b
	[Coins]         0`b
	[Flags]       00000000
	[StatusTable] $StatusTable_80218A48
	% ai
	[PartsCount]    1`s
	[PartsTable]  $PartsTable_80218AF4
	[Script]      $Script_Init_80218B40
	% move effectiveness
	[Escape]        0`b
	[Item]          0`b
	[AirLift]       0`b
	[Hurricane]     0`b % Bow's "Spook" as well
	[UpAndAway]     0`b
	[PowerBounce]  70`b
	[SpinSmash]     4`b % weight (0-4)
	% ui positions
	[Size]         56`b  56`b % width height
	[HealthBar]     0`b   0`b % dx dy
	[StatusTurn]  -15`b  40`b % dx dy
	[StatusIcon]   15`b  40`b % dx dy
}

#new:Script $Script_Init_80218B40
{
    0:  Call  BindTakeTurn  ( .Actor:Self $Script_TakeTurn_8021AEEC )
   14:  Call  BindIdle      ( .Actor:Self $Script_Idle_80218C4C )
   28:  Call  BindHandleEvent   ( .Actor:Self $Script_HandleEvent_80219F30 )
   3C:  Call  SetActorVar   ( .Actor:Self 00000000 00000000 )
   54:  Call  SetActorVar   ( .Actor:Self 00000007 00000000 )
   6C:  Call  SetActorVar   ( .Actor:Self 00000001 00000000 )
   84:  Call  SetActorVar   ( .Actor:Self 00000002 FFFFFFFF )
   9C:  Call  SetActorVar   ( .Actor:Self 00000003 FFFFFFFF )
   B4:  Call  SetActorVar   ( .Actor:Self 00000004 00000201 )
   CC:  Call  SetActorVar   ( .Actor:Self 00000005 00000202 )
   E4:  Call  SetActorVar   ( .Actor:Self 00000006 00000203 )
   FC:  Return
  104:  End
}

#new:Script $Script_Idle_80218C4C
{
    0:  Set   *VarF  00000000
   10:  Label  0
   1C:  Call  GetActorVar   ( .Actor:Enemy0 00000000 *Var0 )
   34:  If  *Var0  &  00000020
   44:  	Call  GetActorVar   ( .Actor:Self 00000002 *Var1 )
   5C:  	Call  GetActorVar   ( .Actor:Self 00000003 *Var2 )
   74:  	Call  ActorExists   ( *Var1 *Var3 )
   88:  	If  *Var3  ==  .True
   98:  		Call  $Function_80218058    ( *VarF *Var4 *Fixed[128.0] *Fixed[254.0] 00000014 00000000 00000000 )
   C0:  		Set   *Var4  *Var4
   D0:  		Call  SetPartAlpha  ( .Actor:Self 00000001 *Var4 )
   E8:  		Call  SetPartAlpha  ( *Var1 00000001 *Var4 )
  100:  		Call  SetPartAlpha  ( *Var2 00000001 *Var4 )
  118:  		Add   *VarF  00000001
  128:  		If  *VarF  >  00000028
  138:  			Set   *VarF  00000000
  148:  		EndIf
  150:  	Else
  158:  		Call  GetActorVar   ( .Actor:Enemy0 00000000 *Var0 )
  170:  		ConstAND  *Var0 FFFFFFDF
  180:  		Call  SetActorVar   ( .Actor:Enemy0 00000000 *Var0 )
  198:  	EndIf
  1A0:  Else
  1A8:  	Set   *VarF  00000000
  1B8:  EndIf
  1C0:  Wait  1`
  1CC:  Goto  0
  1D8:  Return
  1E0:  End
}

#new:Script $Script_80218E34
{
    0:  Set   *VarA  00000000
   10:  Set   *VarB  00000000
   20:  Set   *VarC  00000000
   30:  Set   *VarD  00000000
   40:  Set   *VarE  00000000
   50:  Set   *VarF  00000000
   60:  Label  1
   6C:  Call  GetActorVar   ( .Actor:Enemy0 00000000 *Var0 )
   84:  If  *Var0  !&  00000040
   94:  	Set   *Var0  FFFFFF81
   A4:  	Call  GetActorVar   ( .Actor:Self 00000002 *Var1 )
   BC:  	Call  GetActorVar   ( .Actor:Self 00000003 *Var2 )
   D4:  	Call  GetActorPos   ( *Var0 *Var3 *Var4 *Var5 )
   F0:  	Call  GetActorPos   ( *Var1 *Var4 *Var5 *Var6 )
  10C:  	If  *Var3  >  *Var4
  11C:  		Set   *Var7  *Var0
  12C:  		Set   *Var0  *Var1
  13C:  		Set   *Var1  *Var7
  14C:  	EndIf
  154:  	Call  GetActorPos   ( *Var0 *Var3 *Var4 *Var5 )
  170:  	Call  GetActorPos   ( *Var2 *Var4 *Var5 *Var6 )
  18C:  	If  *Var3  >  *Var4
  19C:  		Set   *Var7  *Var0
  1AC:  		Set   *Var0  *Var2
  1BC:  		Set   *Var2  *Var7
  1CC:  	EndIf
  1D4:  	Call  GetActorPos   ( *Var1 *Var3 *Var4 *Var5 )
  1F0:  	Call  GetActorPos   ( *Var2 *Var4 *Var5 *Var6 )
  20C:  	If  *Var3  >  *Var4
  21C:  		Set   *Var7  *Var1
  22C:  		Set   *Var1  *Var2
  23C:  		Set   *Var2  *Var7
  24C:  	EndIf
  254:  	Call  GetActorPos   ( *Var0 *Var3 *Var4 *Var5 )
  270:  	Set   *Var4  00000029
  280:  	Add   *Var4  *VarA
  290:  	Call  SetActorPos   ( *Var0 *Var3 *Var4 *Var5 )
  2AC:  	Call  GetActorPos   ( *Var1 *Var3 *Var4 *Var5 )
  2C8:  	Set   *Var4  00000029
  2D8:  	Add   *Var4  *VarC
  2E8:  	Call  SetActorPos   ( *Var1 *Var3 *Var4 *Var5 )
  304:  	Call  GetActorPos   ( *Var2 *Var3 *Var4 *Var5 )
  320:  	Set   *Var4  00000029
  330:  	Add   *Var4  *VarE
  340:  	Call  SetActorPos   ( *Var2 *Var3 *Var4 *Var5 )
  35C:  	Call  $Function_80218058    ( *VarF *Var0 *Fixed[0.0] *Fixed[5.0] 0000001E 00000000 00000000 )
  384:  	Set   *VarA  *VarB
  394:  	Set   *VarB  *VarC
  3A4:  	Set   *VarC  *VarD
  3B4:  	Set   *VarD  *VarE
  3C4:  	Set   *VarE  *Var0
  3D4:  	Add   *VarF  00000001
  3E4:  	If  *VarF  >  0000003C
  3F4:  		Set   *VarF  00000000
  404:  	EndIf
  40C:  EndIf
  414:  Wait  1`
  420:  Goto  1
  42C:  Return
  434:  End
}

#new:Script $Script_80219270
{
    0:  Call  EnableActorBlur   ( *Var9 00000001 )
   14:  Call  SetActorFlagBits  ( *Var9 00400000 .True )
   2C:  Thread
   34:  	Call  $Function_802181E8    ( *Var9 00000001 *Var3 )
   4C:  	Call  MakeLerp  ( *Var3 00000000 00000014 .Easing:QuadraticIn )
   68:  	Label  0
   74:  	Call  UpdateLerp ( )
   80:  	Call  SetPartAlpha  ( *Var9 00000001 *Var0 )
   98:  	Wait  1`
   A4:  	If  *Var1  ==  00000001
   B4:  		Goto  0
   C0:  	EndIf
   C8:  EndThread
   D0:  Thread
   D8:  	Call  MakeLerp  ( 00000064 000000C8 00000014 .Easing:QuadraticIn )
   F4:  	Label  1
  100:  	Call  UpdateLerp ( )
  10C:  	Call  GetStatusFlags    ( .Actor:Self *Var8 )
  120:  	If  *Var8  &  ~Flags:StatusFlags:Shrink % 80000
  130:  		MulF  *Var0  *Fixed[0.4]
  140:  	EndIf
  148:  	DivF  *Var0  *Fixed[100.0]
  158:  	Call  SetPartScale  ( *Var9 00000001 *Var0 *Var0 *Var0 )
  178:  	Wait  1`
  184:  	If  *Var1  ==  00000001
  194:  		Goto  1
  1A0:  	EndIf
  1A8:  EndThread
  1B0:  Call  GetStatusFlags    ( .Actor:Self *Var0 )
  1C4:  If  *Var0  !&  ~Flags:StatusFlags:Shrink % 80000
  1D4:  	Call  SetActorRotationOffset    ( *Var9 00000000 0000001C 00000000 )
  1F0:  Else
  1F8:  	Call  SetActorRotationOffset    ( *Var9 00000000 0000000A 00000000 )
  214:  EndIf
  21C:  Call  MakeLerp  ( 00000E10 00000000 00000019 .Easing:QuadraticIn )
  238:  Label  2
  244:  Call  UpdateLerp ( )
  250:  Call  SetActorRotation  ( *Var9 00000000 00000000 *Var0 )
  26C:  Wait  1`
  278:  If  *Var1  ==  00000001
  288:  	Goto  2
  294:  EndIf
  29C:  Call  RemoveActor   ( *Var9 )
  2AC:  Return
  2B4:  End
}

#new:Script $Script_8021952C
{
    0:  Call  GetActorVar   ( .Actor:Self 00000001 *Var0 )
   18:  Switch  *Var0
   24:  	CaseOR  ==  00000004
   30:  	CaseOR  ==  00000005
   3C:  	EndCaseGroup
   44:  	CaseOR  ==  00000000
   50:  	CaseOR  ==  00000002
   5C:  		Call  GetStatusFlags    ( .Actor:Self *Var0 )
   70:  		If  *Var0  &  ~Flags:StatusFlags:Sleep|Frozen|Fear|Paralyze|Dizzy|Shrink|Stone|Stop % 3DD000
   80:  			Call  GetActorVar   ( .Actor:Self 00000004 *Var0 )
   98:  			Call  ActorExists   ( *Var0 *Var1 )
   AC:  			If  *Var1  ==  .True
   BC:  				Call  80269EAC      ( 00000000 )
   CC:  				Call  DispatchEvent ( *Var0 .Event:Death )
   E0:  			EndIf
   E8:  			Call  GetActorVar   ( .Actor:Self 00000005 *Var0 )
  100:  			Call  ActorExists   ( *Var0 *Var1 )
  114:  			If  *Var1  ==  .True
  124:  				Call  80269EAC      ( 00000000 )
  134:  				Call  DispatchEvent ( *Var0 .Event:Death )
  148:  			EndIf
  150:  			Call  GetActorVar   ( .Actor:Self 00000006 *Var0 )
  168:  			Call  ActorExists   ( *Var0 *Var1 )
  17C:  			If  *Var1  ==  .True
  18C:  				Call  80269EAC      ( 00000000 )
  19C:  				Call  DispatchEvent ( *Var0 .Event:Death )
  1B0:  			EndIf
  1B8:  		EndIf
  1C0:  		Return
  1C8:  	EndCaseGroup
  1D0:  	Default
  1D8:  		Return
  1E0:  EndSwitch
  1E8:  Call  GetLastElement    ( *Var0 )
  1F8:  If  *Var0  &  20000000
  208:  	Label  0
  214:  	Call  GetBattleFlags    ( *Var0 )
  224:  	If  *Var0  &  00000100
  234:  		Wait  1`
  240:  		Goto  0
  24C:  	EndIf
  254:  EndIf
  25C:  Call  GetActorVar   ( .Actor:Self 00000002 *Var9 )
  274:  Call  ActorExists   ( *Var9 *VarA )
  288:  If  *VarA  ==  .True
  298:  	Call  GetActorVar   ( .Actor:Self 00000002 *Var9 )
  2B0:  	Exec  $Script_80219270
  2BC:  	Call  GetActorVar   ( .Actor:Self 00000003 *Var9 )
  2D4:  	Exec  $Script_80219270 *Var0
  2E4:  	Label  1
  2F0:  	DoesScriptExist  *Var0 *Var1
  300:  	If  *Var1  ==  00000001
  310:  		Wait  1`
  31C:  		Goto  1
  328:  	EndIf
  330:  EndIf
  338:  Call  8027D32C      ( FFFFFF81 )
  348:  Call  SetAnimation  ( .Actor:Self 00000001 007F0019 )
  360:  Call  GetActorPos   ( .Actor:Self *Var0 *Var1 *Var2 )
  37C:  If  *Var1  !=  00000000
  38C:  	Call  UseBattleCamPreset    ( 00000002 )
  39C:  	Call  GetActorVar   ( .Actor:Self 00000008 *VarA )
  3B4:  	Kill  *VarA
  3C0:  	Call  PlaySoundAtActor      ( .Actor:Self 000020E3 )
  3D4:  	Set   *Var1  00000000
  3E4:  	Call  SetActorJumpGravity   ( .Actor:Self *Fixed[0.8] )
  3F8:  	Call  SetGoalPos    ( .Actor:Self *Var0 *Var1 *Var2 )
  414:  	Call  JumpToGoal    ( .Actor:Self  15` .False .True .False )
  434:  	Call  $Function_80218000    ( 00000096 0000000A )
  448:  	Thread
  450:  		Call  ShakeCam  ( .Cam:Battle 00000000  5` *Fixed[0.7] )
  46C:  	EndThread
  474:  	Call  SetGoalPos    ( .Actor:Self *Var0 *Var1 *Var2 )
  490:  	Call  JumpToGoal    ( .Actor:Self  10` .False .True .False )
  4B0:  	Call  SetGoalPos    ( .Actor:Self *Var0 *Var1 *Var2 )
  4CC:  	Call  JumpToGoal    ( .Actor:Self  5` .False .True .False )
  4EC:  	Wait  15`
  4F8:  	Call  SetActorFlagBits  ( .Actor:Self 00000200 .False )
  510:  EndIf
  518:  Call  GetStatusFlags    ( .Actor:Self *Var0 )
  52C:  If  *Var0  !&  ~Flags:StatusFlags:Sleep|Frozen|Fear|Paralyze|Dizzy|Stone|Stop % 35D000
  53C:  	Call  SetAnimation  ( .Actor:Self 00000001 007F000E )
  554:  	Call  SetActorSpeed ( .Actor:Self *Fixed[4.0] )
  568:  	Call  SetGoalPos    ( .Actor:Self  70`  0`  5` )
  584:  	Call  RunToGoal     ( .Actor:Self  0` .False )
  59C:  	Call  SetAnimation  ( .Actor:Self 00000001 007F0009 )
  5B4:  EndIf
  5BC:  Call  GetActorPos   ( .Actor:Self *Var0 *Var1 *Var2 )
  5D8:  Call  ForceHomePos  ( .Actor:Self *Var0 *Var1 *Var2 )
  5F4:  Call  HPBarToHome   ( .Actor:Self )
  604:  Call  GetActorVar   ( .Actor:Enemy0 00000000 *Var0 )
  61C:  ConstAND  *Var0 FFFFFFFE
  62C:  Call  SetActorVar   ( .Actor:Enemy0 00000000 *Var0 )
  644:  Return
  64C:  End
}

#new:Script $Script_80219B80
{
    0:  Call  GetActorVar   ( .Actor:Self 00000001 *Var0 )
   18:  Switch  *Var0
   24:  	CaseOR  ==  00000004
   30:  	CaseOR  ==  00000005
   3C:  	EndCaseGroup
   44:  	CaseOR  ==  00000000
   50:  	CaseOR  ==  00000002
   5C:  		Call  GetActorVar   ( .Actor:Self 00000004 *Var0 )
   74:  		Call  ActorExists   ( *Var0 *Var1 )
   88:  		If  *Var1  ==  .True
   98:  			Call  80269EAC  ( 00000000 )
   A8:  			Call  SetActorFlagBits  ( *Var0 00400000 .True )
   C0:  			Call  DispatchEvent     ( *Var0 .Event:Death )
   D4:  		EndIf
   DC:  		Call  GetActorVar   ( .Actor:Self 00000005 *Var0 )
   F4:  		Call  ActorExists   ( *Var0 *Var1 )
  108:  		If  *Var1  ==  .True
  118:  			Call  80269EAC  ( 00000000 )
  128:  			Call  SetActorFlagBits  ( *Var0 00400000 .True )
  140:  			Call  DispatchEvent     ( *Var0 .Event:Death )
  154:  		EndIf
  15C:  		Call  GetActorVar   ( .Actor:Self 00000006 *Var0 )
  174:  		Call  ActorExists   ( *Var0 *Var1 )
  188:  		If  *Var1  ==  .True
  198:  			Call  80269EAC  ( 00000000 )
  1A8:  			Call  SetActorFlagBits  ( *Var0 00400000 .True )
  1C0:  			Call  DispatchEvent     ( *Var0 .Event:Death )
  1D4:  		EndIf
  1DC:  		Return
  1E4:  	EndCaseGroup
  1EC:  	Default
  1F4:  		Return
  1FC:  EndSwitch
  204:  Call  GetLastElement    ( *Var0 )
  214:  If  *Var0  &  20000000
  224:  	Label  0
  230:  	Call  GetBattleFlags    ( *Var0 )
  240:  	If  *Var0  &  00000100
  250:  		Wait  1`
  25C:  		Goto  0
  268:  	EndIf
  270:  EndIf
  278:  Call  GetActorVar   ( .Actor:Self 00000008 *VarA )
  290:  DoesScriptExist  *VarA *Var0
  2A0:  If  *Var0  ==  00000001
  2B0:  	Kill  *VarA
  2BC:  EndIf
  2C4:  Call  GetActorVar   ( .Actor:Self 00000002 *Var9 )
  2DC:  Call  ActorExists   ( *Var9 *VarA )
  2F0:  If  *VarA  ==  .True
  300:  	Call  GetActorVar   ( .Actor:Self 00000002 *Var9 )
  318:  	Exec  $Script_80219270
  324:  	Call  GetActorVar   ( .Actor:Self 00000003 *Var9 )
  33C:  	Exec  $Script_80219270 *Var0
  34C:  	Label  1
  358:  	DoesScriptExist  *Var0 *Var1
  368:  	If  *Var1  ==  00000001
  378:  		Wait  1`
  384:  		Goto  1
  390:  	EndIf
  398:  EndIf
  3A0:  Return
  3A8:  End
}

#new:Script $Script_HandleEvent_80219F30
{
    0:  Call  UseIdleAnimation  ( .Actor:Self .False )
   14:  Call  EnableIdleScript  ( .Actor:Self 00000000 )
   28:  Call  GetActorVar   ( .Actor:Enemy0 00000000 *Var0 )
   40:  ConstOR  *Var0 00000040
   50:  Call  SetActorVar   ( .Actor:Enemy0 00000000 *Var0 )
   68:  Call  SetPartAlpha  ( .Actor:Self 00000001 000000FF )
   80:  Call  GetLastEvent  ( .Actor:Self *Var0 )
   94:  Switch  *Var0
   A0:  	Case  ==  .Event:HitCombo % 9
   AC:  		Call  GetActorVar   ( .Actor:Enemy0 00000000 *Var0 )
   C4:  		ConstOR  *Var0 00000001
   D4:  		Call  SetActorVar   ( .Actor:Enemy0 00000000 *Var0 )
   EC:  		Call  GetActorVar   ( .Actor:Self 00000002 *Var0 )
  104:  		Call  ActorExists   ( *Var0 *Var1 )
  118:  		If  *Var1  ==  .True
  128:  			Thread
  130:  				Call  SetOwnerID    ( *Var0 )
  140:  				SetConst  *Var0  00000001
  150:  				SetConst  *Var1  007F0019
  160:  				ExecWait  DoNormalHit
  16C:  				Call  SetAnimation  ( .Actor:Self 00000001 007F0009 )
  184:  			EndThread
  18C:  		EndIf
  194:  		Call  GetActorVar   ( .Actor:Self 00000003 *Var0 )
  1AC:  		Call  ActorExists   ( *Var0 *Var1 )
  1C0:  		If  *Var1  ==  .True
  1D0:  			Thread
  1D8:  				Call  SetOwnerID    ( *Var0 )
  1E8:  				SetConst  *Var0  00000001
  1F8:  				SetConst  *Var1  007F0019
  208:  				ExecWait  DoNormalHit
  214:  				Call  SetAnimation  ( .Actor:Self 00000001 007F0009 )
  22C:  			EndThread
  234:  		EndIf
  23C:  		SetConst  *Var0  00000001
  24C:  		SetConst  *Var1  007F0019
  25C:  		ExecWait  DoNormalHit
  268:  	Case  ==  .Event:Hit % A
  274:  		Call  GetActorVar   ( .Actor:Self 00000002 *Var0 )
  28C:  		Call  ActorExists   ( *Var0 *Var1 )
  2A0:  		If  *Var1  ==  .True
  2B0:  			Thread
  2B8:  				Call  SetOwnerID    ( *Var0 )
  2C8:  				SetConst  *Var0  00000001
  2D8:  				SetConst  *Var1  007F0019
  2E8:  				ExecWait  DoNormalHit
  2F4:  				Call  SetAnimation  ( .Actor:Self 00000001 007F0009 )
  30C:  			EndThread
  314:  		EndIf
  31C:  		Call  GetActorVar   ( .Actor:Self 00000003 *Var0 )
  334:  		Call  ActorExists   ( *Var0 *Var1 )
  348:  		If  *Var1  ==  .True
  358:  			Thread
  360:  				Call  SetOwnerID    ( *Var0 )
  370:  				SetConst  *Var0  00000001
  380:  				SetConst  *Var1  007F0019
  390:  				ExecWait  DoNormalHit
  39C:  				Call  SetAnimation  ( .Actor:Self 00000001 007F0009 )
  3B4:  			EndThread
  3BC:  		EndIf
  3C4:  		SetConst  *Var0  00000001
  3D4:  		SetConst  *Var1  007F0019
  3E4:  		ExecWait  DoNormalHit
  3F0:  		ExecWait  $Script_8021952C
  3FC:  	Case  ==  .Event:BurnHit % E
  408:  		Call  GetActorVar   ( .Actor:Self 00000002 *Var0 )
  420:  		Call  ActorExists   ( *Var0 *Var1 )
  434:  		If  *Var1  ==  .True
  444:  			Thread
  44C:  				Call  SetOwnerID    ( *Var0 )
  45C:  				SetConst  *Var0  00000001
  46C:  				SetConst  *Var1  007F0020
  47C:  				SetConst  *Var2  007F0021
  48C:  				ExecWait  DoBurnHit
  498:  			EndThread
  4A0:  		EndIf
  4A8:  		Call  GetActorVar   ( .Actor:Self 00000003 *Var0 )
  4C0:  		Call  ActorExists   ( *Var0 *Var1 )
  4D4:  		If  *Var1  ==  .True
  4E4:  			Thread
  4EC:  				Call  SetOwnerID    ( *Var0 )
  4FC:  				SetConst  *Var0  00000001
  50C:  				SetConst  *Var1  007F0020
  51C:  				SetConst  *Var2  007F0021
  52C:  				ExecWait  DoBurnHit
  538:  			EndThread
  540:  		EndIf
  548:  		SetConst  *Var0  00000001
  558:  		SetConst  *Var1  007F0020
  568:  		SetConst  *Var2  007F0021
  578:  		ExecWait  DoBurnHit
  584:  		Call  SetAnimation  ( .Actor:Self 00000001 007F0019 )
  59C:  		ExecWait  $Script_8021952C
  5A8:  	Case  ==  00000017 % 17
  5B4:  	Case  ==  .Event:AirLiftFailed % 1F
  5C0:  		SetConst  *Var0  00000001
  5D0:  		SetConst  *Var1  007F0009
  5E0:  		ExecWait  DoImmune
  5EC:  	Case  ==  .Event:Immune % 19
  5F8:  		SetConst  *Var0  00000001
  608:  		SetConst  *Var1  007F0009
  618:  		ExecWait  DoImmune
  624:  		Call  GetActorVar   ( .Actor:Enemy0 00000000 *Var0 )
  63C:  		If  *Var0  &  00000001
  64C:  			ExecWait  $Script_8021952C
  658:  			Return
  660:  		EndIf
  668:  		Call  GetStatusFlags    ( .Actor:Self *Var0 )
  67C:  		If  *Var0  &  ~Flags:StatusFlags:Sleep|Frozen|Fear|Paralyze|Dizzy|Stone|Stop % 35D000
  68C:  			ExecWait  $Script_8021952C
  698:  			Return
  6A0:  		EndIf
  6A8:  	Case  ==  .Event:Death % 20
  6B4:  		Call  GetActorVar   ( .Actor:Self 00000002 *Var0 )
  6CC:  		Call  ActorExists   ( *Var0 *Var1 )
  6E0:  		If  *Var1  ==  .True
  6F0:  			Thread
  6F8:  				Call  SetOwnerID    ( *Var0 )
  708:  				SetConst  *Var0  00000001
  718:  				SetConst  *Var1  007F0019
  728:  				ExecWait  DoNormalHit
  734:  			EndThread
  73C:  		EndIf
  744:  		Call  GetActorVar   ( .Actor:Self 00000003 *Var0 )
  75C:  		Call  ActorExists   ( *Var0 *Var1 )
  770:  		If  *Var1  ==  .True
  780:  			Thread
  788:  				Call  SetOwnerID    ( *Var0 )
  798:  				SetConst  *Var0  00000001
  7A8:  				SetConst  *Var1  007F0019
  7B8:  				ExecWait  DoNormalHit
  7C4:  			EndThread
  7CC:  		EndIf
  7D4:  		SetConst  *Var0  00000001
  7E4:  		SetConst  *Var1  007F0019
  7F4:  		ExecWait  DoNormalHit
  800:  		ExecWait  $Script_80219B80
  80C:  		SetConst  *Var0  00000001
  81C:  		SetConst  *Var1  007F0019
  82C:  		ExecWait  DoDeath
  838:  		Return
  840:  	Case  ==  .Event:BurnDeath % 24
  84C:  		Call  GetActorVar   ( .Actor:Self 00000002 *Var0 )
  864:  		Call  ActorExists   ( *Var0 *Var1 )
  878:  		If  *Var1  ==  .True
  888:  			Thread
  890:  				Call  SetOwnerID    ( *Var0 )
  8A0:  				SetConst  *Var0  00000001
  8B0:  				SetConst  *Var1  007F0020
  8C0:  				SetConst  *Var2  007F0021
  8D0:  				ExecWait  DoBurnHit
  8DC:  			EndThread
  8E4:  		EndIf
  8EC:  		Call  GetActorVar   ( .Actor:Self 00000003 *Var0 )
  904:  		Call  ActorExists   ( *Var0 *Var1 )
  918:  		If  *Var1  ==  .True
  928:  			Thread
  930:  				Call  SetOwnerID    ( *Var0 )
  940:  				SetConst  *Var0  00000001
  950:  				SetConst  *Var1  007F0020
  960:  				SetConst  *Var2  007F0021
  970:  				ExecWait  DoBurnHit
  97C:  			EndThread
  984:  		EndIf
  98C:  		SetConst  *Var0  00000001
  99C:  		SetConst  *Var1  007F0020
  9AC:  		SetConst  *Var2  007F0021
  9BC:  		ExecWait  DoBurnHit
  9C8:  		ExecWait  $Script_80219B80
  9D4:  		SetConst  *Var0  00000001
  9E4:  		SetConst  *Var1  007F0021
  9F4:  		ExecWait  DoDeath
  A00:  		Return
  A08:  	Case  ==  .Event:RecoverStatus % 31
  A14:  		Thread
  A1C:  			Call  GetActorVar   ( .Actor:Self 00000001 *Var0 )
  A34:  			Switch  *Var0
  A40:  				CaseOR  ==  00000004
  A4C:  				CaseOR  ==  00000005
  A58:  					SetF  *Var0  *Fixed[0.4]
  A68:  					Loop  0000001E
  A74:  						SetF  *Var1  *Fixed[1.0]
  A84:  						SubF  *Var1  *Var0
  A94:  						DivF  *Var1  *Fixed[6.0]
  AA4:  						AddF  *Var0  *Var1
  AB4:  						Call  GetActorVar   ( .Actor:Self 00000002 *VarA )
  ACC:  						Call  ActorExists   ( *VarA *VarB )
  AE0:  						If  *VarB  ==  .True
  AF0:  							Call  SetPartScale  ( *VarA 00000001 *Var0 *Var0 *Var0 )
  B10:  						EndIf
  B18:  						Call  GetActorVar   ( .Actor:Self 00000003 *VarA )
  B30:  						Call  ActorExists   ( *VarA *VarB )
  B44:  						If  *VarB  ==  .True
  B54:  							Call  SetPartScale  ( *VarA 00000001 *Var0 *Var0 *Var0 )
  B74:  						EndIf
  B7C:  						Wait  1`
  B88:  					EndLoop
  B90:  				EndCaseGroup
  B98:  				CaseOR  ==  00000000
  BA4:  				CaseOR  ==  00000002
  BB0:  					SetF  *Var0  *Fixed[0.4]
  BC0:  					Loop  0000001E
  BCC:  						SetF  *Var1  *Fixed[1.0]
  BDC:  						SubF  *Var1  *Var0
  BEC:  						DivF  *Var1  *Fixed[6.0]
  BFC:  						AddF  *Var0  *Var1
  C0C:  						Call  GetActorVar   ( .Actor:Self 00000004 *VarA )
  C24:  						Call  ActorExists   ( *VarA *VarB )
  C38:  						If  *VarB  ==  .True
  C48:  							Call  SetPartScale  ( *VarA 00000001 *Var0 *Var0 *Var0 )
  C68:  						EndIf
  C70:  						Call  GetActorVar   ( .Actor:Self 00000005 *VarA )
  C88:  						Call  ActorExists   ( *VarA *VarB )
  C9C:  						If  *VarB  ==  .True
  CAC:  							Call  SetPartScale  ( *VarA 00000001 *Var0 *Var0 *Var0 )
  CCC:  						EndIf
  CD4:  						Call  GetActorVar   ( .Actor:Self 00000006 *VarA )
  CEC:  						Call  ActorExists   ( *VarA *VarB )
  D00:  						If  *VarB  ==  .True
  D10:  							Call  SetPartScale  ( *VarA 00000001 *Var0 *Var0 *Var0 )
  D30:  						EndIf
  D38:  						Wait  1`
  D44:  					EndLoop
  D4C:  				EndCaseGroup
  D54:  			EndSwitch
  D5C:  		EndThread
  D64:  		SetConst  *Var0  00000001
  D74:  		SetConst  *Var1  007F0009
  D84:  		ExecWait  DoRecover
  D90:  		Call  CountPlayerTargets    ( .Actor:Self 00008002 *Var0 )
  DA8:  		If  *Var0  <=  00000001
  DB8:  			Call  SetAnimation  ( .Actor:Self 00000001 007F000E )
  DD0:  			Call  SetActorSpeed ( .Actor:Self *Fixed[4.0] )
  DE4:  			Call  SetGoalPos    ( .Actor:Self  70`  0`  5` )
  E00:  			Call  RunToGoal     ( .Actor:Self  0` .False )
  E18:  			Call  SetAnimation  ( .Actor:Self 00000001 007F0009 )
  E30:  		EndIf
  E38:  		Call  GetActorPos   ( .Actor:Self *Var0 *Var1 *Var2 )
  E54:  		Call  ForceHomePos  ( .Actor:Self *Var0 *Var1 *Var2 )
  E70:  		Call  HPBarToHome   ( .Actor:Self )
  E80:  	Case  ==  .Event:BeginAirLift % 3A
  E8C:  		SetConst  *Var0  00000001
  E9C:  		SetConst  *Var1  007F0019
  EAC:  		ExecWait  DoAirLift
  EB8:  	Case  ==  .Event:SwapPartner % 3F
  EC4:  		Call  GetActorPos   ( .Actor:Self *Var0 *Var1 *Var2 )
  EE0:  		Add   *Var1  00000014
  EF0:  		Call  PlayEffect    ( ~FX:Sparkles:Star *Var0 *Var1 *Var2 00000014 00000000 00000000 00000000 00000000 00000000 00000000 00000000 00000000 )
  F34:  	Default
  F3C:  EndSwitch
  F44:  Call  GetActorVar       ( .Actor:Enemy0 00000000 *Var0 )
  F5C:  ConstAND  *Var0 FFFFFFBF
  F6C:  Call  SetActorVar       ( .Actor:Enemy0 00000000 *Var0 )
  F84:  Call  EnableIdleScript  ( .Actor:Self 00000001 )
  F98:  Call  UseIdleAnimation  ( .Actor:Self .True )
  FAC:  Return
  FB4:  End
}

#new:Script $Script_TakeTurn_8021AEEC
{
    0:  Call  GetActorHP    ( .Actor:Self *Var0 )
   14:  If  *Var0  <=  00000014
   24:  	Call  GetActorVar   ( .Actor:Enemy0 00000000 *Var0 )
   3C:  	ConstOR  *Var0 00000002
   4C:  	Call  SetActorVar   ( .Actor:Enemy0 00000000 *Var0 )
   64:  EndIf
   6C:  Set   *Flag[00]  .False
   7C:  Call  GetActorHP    ( .Actor:Self *Var0 )
   90:  Call  GetEnemyMaxHP ( .Actor:Self *Var1 )
   A4:  Mul   *Var0  00000064
   B4:  Div   *Var0  *Var1
   C4:  Switch  *Var0
   D0:  	Case  <  00000019
   DC:  		Call  RandInt   ( 00000063 *Var0 )
   F0:  		Add   *Var0  00000001
  100:  		If  *Var0  <=  00000064
  110:  			Call  GetActorVar   ( .Actor:Self 00000007 *Var0 )
  128:  			If  *Var0  <  00000002
  138:  				Set   *Flag[00]  .True
  148:  			EndIf
  150:  		EndIf
  158:  	Case  <  00000028
  164:  		Call  RandInt   ( 00000063 *Var0 )
  178:  		Add   *Var0  00000001
  188:  		If  *Var0  <=  0000001E
  198:  			Call  GetActorVar   ( .Actor:Self 00000007 *Var0 )
  1B0:  			If  *Var0  <  00000002
  1C0:  				Set   *Flag[00]  .True
  1D0:  			EndIf
  1D8:  		EndIf
  1E0:  	Case  <  00000037
  1EC:  		Call  RandInt   ( 00000063 *Var0 )
  200:  		Add   *Var0  00000001
  210:  		If  *Var0  <=  0000000A
  220:  			Call  GetActorVar   ( .Actor:Self 00000007 *Var0 )
  238:  			If  *Var0  <  00000002
  248:  				Set   *Flag[00]  .True
  258:  			EndIf
  260:  		EndIf
  268:  EndSwitch
  270:  If  *Flag[00]  ==  .True
  280:  	Call  GetActorVar   ( .Actor:Self 00000007 *Var0 )
  298:  	Add   *Var0  00000001
  2A8:  	Call  SetActorVar   ( .Actor:Self 00000007 *Var0 )
  2C0:  	ExecWait  $Script_HealSelf
  2CC:  	Return
  2D4:  EndIf
  2DC:  Call  GetActorVar   ( .Actor:Self 00000001 *Var0 )
  2F4:  Switch  *Var0
  300:  	Case  ==  00000000
  30C:  		Call  CountPlayerTargets    ( .Actor:Self 00008002 *Var0 )
  324:  		If  *Var0  <=  00000001
  334:  			ExecWait  $Script_SummonRocks
  340:  			Call  SetActorVar   ( .Actor:Self 00000001 00000002 )
  358:  		Else
  360:  			ExecWait  $Script_SpitAllRocks
  36C:  			Call  SetActorVar   ( .Actor:Self 00000001 00000001 )
  384:  		EndIf
  38C:  	Case  ==  00000001
  398:  		ExecWait  $Script_SummonRocks
  3A4:  		Call  SetActorVar   ( .Actor:Self 00000001 00000002 )
  3BC:  	Case  ==  00000002
  3C8:  		Call  CountPlayerTargets    ( .Actor:Self 00008002 *Var0 )
  3E0:  		If  *Var0  <=  00000001
  3F0:  			Call  GetStatusFlags    ( .Actor:Player *Var0 )
  404:  			If  *Var0  &  ~Flags:StatusFlags:Frozen % 4000
  414:  				ExecWait  $Script_FrostBreath
  420:  			Else
  428:  				ExecWait  $Script_FrostBolt
  434:  			EndIf
  43C:  		Else
  444:  			ExecWait  $Script_SpitAllRocks
  450:  		EndIf
  458:  		Call  SetActorVar   ( .Actor:Self 00000001 00000003 )
  470:  	Case  ==  00000003
  47C:  		Call  GetActorHP    ( .Actor:Self *Var0 )
  490:  		If  *Var0  >  00000023
  4A0:  			Call  GetActorVar   ( .Actor:Enemy0 00000000 *Var0 )
  4B8:  			If  *Var0  !&  00000004
  4C8:  				ExecWait  $Script_SummonRocks
  4D4:  				Call  SetActorVar   ( .Actor:Self 00000001 00000002 )
  4EC:  				Return
  4F4:  			EndIf
  4FC:  		EndIf
  504:  		Call  GetActorVar   ( .Actor:Enemy0 00000000 *Var0 )
  51C:  		If  *Var0  !&  00000010
  52C:  			ExecWait  $Script_FrostBolt
  538:  			Call  GetActorVar   ( .Actor:Enemy0 00000000 *Var0 )
  550:  			ConstOR  *Var0 00000010
  560:  			Call  SetActorVar   ( .Actor:Enemy0 00000000 *Var0 )
  578:  		Else
  580:  			ExecWait  $Script_SummonClones
  58C:  			Call  SetActorVar   ( .Actor:Self 00000001 00000004 )
  5A4:  			Call  GetActorVar   ( .Actor:Enemy0 00000000 *Var0 )
  5BC:  			ConstOR  *Var0 00000004
  5CC:  			Call  SetActorVar   ( .Actor:Enemy0 00000000 *Var0 )
  5E4:  		EndIf
  5EC:  	Case  ==  00000004
  5F8:  		Call  CountPlayerTargets    ( .Actor:Self 00008002 *Var0 )
  610:  		If  *Var0  <=  00000001
  620:  			Call  GetStatusFlags    ( .Actor:Player *Var0 )
  634:  			If  *Var0  &  ~Flags:StatusFlags:Frozen % 4000
  644:  				ExecWait  $Script_FrostBreath
  650:  			Else
  658:  				ExecWait  $Script_FrostBolt
  664:  			EndIf
  66C:  			Call  SetActorVar   ( .Actor:Self 00000001 00000003 )
  684:  		Else
  68C:  			ExecWait  $Script_TripleFrostBreath
  698:  			Call  SetActorVar   ( .Actor:Self 00000001 00000005 )
  6B0:  		EndIf
  6B8:  	Case  ==  00000005
  6C4:  		Call  CountPlayerTargets    ( .Actor:Self 00008002 *Var0 )
  6DC:  		If  *Var0  >  00000001
  6EC:  			ExecWait  $Script_TripleFrostBreath
  6F8:  			Return
  700:  		EndIf
  708:  		ExecWait  $Script_SummonClones
  714:  		Call  SetActorVar   ( .Actor:Self 00000001 00000004 )
  72C:  		Call  GetActorVar   ( .Actor:Enemy0 00000000 *Var0 )
  744:  		ConstOR  *Var0 00000004
  754:  		Call  SetActorVar   ( .Actor:Enemy0 00000000 *Var0 )
  76C:  EndSwitch
  774:  Return
  77C:  End
}

#new:Script $Script_FrostBreath
{
    0:  Call  UseIdleAnimation  ( .Actor:Self .False )
   14:  Call  EnableIdleScript  ( .Actor:Self 00000000 )
   28:  Call  SetTargetActor    ( .Actor:Self .Actor:Player )
   3C:  Call  UseBattleCamPreset    ( 0000000E )
   4C:  Call  BattleCamTargetActor  ( .Actor:Self )
   5C:  Call  SetAnimation      ( .Actor:Self 00000001 007F0013 )
   74:  Wait  10`
   80:  Call  PlaySoundAtActor  ( .Actor:Self 0000206D )
   94:  Call  GetStatusFlags    ( .Actor:Self *Var0 )
   A8:  If  *Var0  !&  ~Flags:StatusFlags:Shrink % 80000
   B8:  	Call  GetActorPos   ( .Actor:Self *Var0 *Var1 *Var2 )
   D4:  	Add   *Var1  00000014
   E4:  	Add   *Var2  FFFFFFFB
   F4:  	Call  PlayEffect    ( ~FX:Sparkles:Star *Var0 *Var1 *Var2 00000014 00000000 00000000 00000000 00000000 00000000 00000000 00000000 00000000 )
  138:  Else
  140:  	Call  GetActorPos   ( .Actor:Self *Var0 *Var1 *Var2 )
  15C:  	Add   *Var1  00000008
  16C:  	Add   *Var2  FFFFFFFE
  17C:  	Call  PlayEffect    ( ~FX:Sparkles:Star *Var0 *Var1 *Var2 00000008 00000000 00000000 00000000 00000000 00000000 00000000 00000000 00000000 )
  1C0:  EndIf
  1C8:  Wait  30`
  1D4:  Call  UseBattleCamPreset    ( 00000002 )
  1E4:  Call  MoveBattleCamOver (  20` )
  1F4:  Call  SetAnimation      ( .Actor:Self 00000001 007F001C )
  20C:  Wait  3`
  218:  Call  PlaySoundAtActor  ( .Actor:Self 0000035D )
  22C:  Call  EnemyTestTarget   ( .Actor:Self *Var0 ~Flags:DamageType:0 00000000 00000001 00000010 )
  250:  Switch  *Var0
  25C:  	CaseOR  ==  .HitResult:Miss % 6
  268:  	CaseOR  ==  .HitResult:Lucky % 5
  274:  		Set   *VarA  *Var0
  284:  		Call  GetStatusFlags    ( .Actor:Self *Var0 )
  298:  		If  *Var0  !&  ~Flags:StatusFlags:Shrink % 80000
  2A8:  			Call  GetActorPos   ( .Actor:Self *Var0 *Var1 *Var2 )
  2C4:  			Add   *Var0  FFFFFFF1
  2D4:  			Add   *Var1  00000014
  2E4:  			Call  PlayEffect    ( ~FX:HuffPuffBreath *Var0 *Var1 *Var2 *Fixed[180.0] *Fixed[2.0] *Fixed[0.5] 0000001E 00000000 00000000 00000000 00000000 00000000 )
  328:  			Call  $Function_80218280    ( *VarF )
  338:  		Else
  340:  			Call  GetActorPos   ( .Actor:Self *Var0 *Var1 *Var2 )
  35C:  			Add   *Var0  FFFFFFFA
  36C:  			Add   *Var1  00000008
  37C:  			Call  PlayEffect    ( ~FX:HuffPuffBreath *Var0 *Var1 *Var2 *Fixed[180.0] *Fixed[2.0] *Fixed[0.2] 0000001E 00000000 00000000 00000000 00000000 00000000 )
  3C0:  			Call  $Function_80218280    ( *VarF )
  3D0:  		EndIf
  3D8:  		Call  $Function_80218000    ( 00000046 0000003C )
  3EC:  		Thread
  3F4:  			Call  ShakeCam  ( .Cam:Battle 00000000  30` *Fixed[0.3] )
  410:  		EndThread
  418:  		Wait  30`
  424:  		Call  StopSound ( 0000035D )
  434:  		If  *VarA  ==  .HitResult:Lucky % 5
  444:  			Call  EnemyTestTarget   ( .Actor:Self *Var0 ~Flags:DamageType:TriggerLucky 00000000 00000000 00000000 )
  468:  		EndIf
  470:  		Wait  20`
  47C:  		Call  UseBattleCamPreset    ( 00000002 )
  48C:  		Call  EnableIdleScript      ( .Actor:Self 00000001 )
  4A0:  		Call  UseIdleAnimation      ( .Actor:Self .True )
  4B4:  		Return
  4BC:  EndSwitch
  4C4:  Call  GetStatusFlags    ( .Actor:Self *Var0 )
  4D8:  If  *Var0  !&  ~Flags:StatusFlags:Shrink % 80000
  4E8:  	Call  GetActorPos   ( .Actor:Self *Var0 *Var1 *Var2 )
  504:  	Add   *Var0  FFFFFFF1
  514:  	Add   *Var1  00000014
  524:  	Call  PlayEffect    ( ~FX:HuffPuffBreath *Var0 *Var1 *Var2 *Fixed[180.0] *Fixed[2.0] *Fixed[1.0] 0000003C 00000000 00000000 00000000 00000000 00000000 )
  568:  	Call  $Function_80218280    ( *VarF )
  578:  Else
  580:  	Call  GetActorPos   ( .Actor:Self *Var0 *Var1 *Var2 )
  59C:  	Add   *Var0  FFFFFFFA
  5AC:  	Add   *Var1  00000008
  5BC:  	Call  PlayEffect    ( ~FX:HuffPuffBreath *Var0 *Var1 *Var2 *Fixed[180.0] *Fixed[2.0] *Fixed[1.0] 0000003C 00000000 00000000 00000000 00000000 00000000 )
  600:  	Call  $Function_80218280    ( *VarF )
  610:  EndIf
  618:  Call  $Function_80218000    ( 00000046 00000064 )
  62C:  Thread
  634:  	Call  ShakeCam  ( .Cam:Battle 00000000  50` *Fixed[0.3] )
  650:  EndThread
  658:  Wait  60`
  664:  Call  StopSound ( 0000035D )
  674:  Call  SetAnimation      ( .Actor:Self 00000001 007F0015 )
  68C:  Wait  2`
  698:  Call  SetGoalToTarget   ( .Actor:Self )
  6A8:  Call  EnemyDamageTarget ( .Actor:Self *Var0 ~Flags:DamageType:NoContact|Ice 00000000 00000000 00000008 00000020 )
  6D0:  Switch  *Var0
  6DC:  	CaseOR  ==  .HitResult:Hit % 0
  6E8:  	CaseOR  ==  .HitResult:QuakeImmune % 2
  6F4:  		Call  UseBattleCamPreset    ( 00000002 )
  704:  	EndCaseGroup
  70C:  EndSwitch
  714:  Call  EnableIdleScript  ( .Actor:Self 00000001 )
  728:  Call  UseIdleAnimation  ( .Actor:Self .True )
  73C:  Return
  744:  End
}

#new:Script $Script_FrostBolt
{
    0:  Call  UseIdleAnimation  ( .Actor:Self .False )
   14:  Call  EnableIdleScript  ( .Actor:Self 00000000 )
   28:  Call  SetTargetActor    ( .Actor:Self .Actor:Player )
   3C:  Call  UseBattleCamPreset    ( 0000000E )
   4C:  Call  BattleCamTargetActor  ( .Actor:Self )
   5C:  Call  SetAnimation      ( .Actor:Self 00000001 007F0013 )
   74:  Wait  10`
   80:  Call  PlaySoundAtActor  ( .Actor:Self 0000206D )
   94:  Call  GetStatusFlags    ( .Actor:Self *Var0 )
   A8:  If  *Var0  !&  ~Flags:StatusFlags:Shrink % 80000
   B8:  	Call  GetActorPos   ( .Actor:Self *Var0 *Var1 *Var2 )
   D4:  	Add   *Var1  00000014
   E4:  	Add   *Var2  FFFFFFFB
   F4:  	Call  PlayEffect    ( ~FX:Sparkles:Star *Var0 *Var1 *Var2 00000014 00000000 00000000 00000000 00000000 00000000 00000000 00000000 00000000 )
  138:  Else
  140:  	Call  GetActorPos   ( .Actor:Self *Var0 *Var1 *Var2 )
  15C:  	Add   *Var1  00000008
  16C:  	Add   *Var2  FFFFFFFE
  17C:  	Call  PlayEffect    ( ~FX:Sparkles:Star *Var0 *Var1 *Var2 00000008 00000000 00000000 00000000 00000000 00000000 00000000 00000000 00000000 )
  1C0:  EndIf
  1C8:  Wait  30`
  1D4:  Call  UseBattleCamPreset    ( 00000002 )
  1E4:  Call  MoveBattleCamOver (  20` )
  1F4:  Call  SetAnimation      ( .Actor:Self 00000001 007F001C )
  20C:  Wait  3`
  218:  Call  PlaySoundAtActor  ( .Actor:Self 000002E0 )
  22C:  Call  EnemyTestTarget   ( .Actor:Self *Var0 ~Flags:DamageType:0 00000000 00000001 00000010 )
  250:  Switch  *Var0
  25C:  	CaseOR  ==  .HitResult:Miss % 6
  268:  	CaseOR  ==  .HitResult:Lucky % 5
  274:  		Set   *VarA  *Var0
  284:  		Call  GetActorPos       ( .Actor:Self *Var0 *Var1 *Var2 )
  2A0:  		Call  GetStatusFlags    ( .Actor:Self *Var3 )
  2B4:  		If  *Var3  !&  ~Flags:StatusFlags:Shrink % 80000
  2C4:  			Add   *Var0  FFFFFFF1
  2D4:  			Add   *Var1  00000014
  2E4:  		Else
  2EC:  			Add   *Var0  FFFFFFFA
  2FC:  			Add   *Var1  00000008
  30C:  		EndIf
  314:  		Call  SetGoalToTarget   ( .Actor:Self )
  324:  		Call  AddGoalPos        ( .Actor:Self  -50`  20`  0` )
  340:  		Call  GetGoalPos        ( .Actor:Self *Var3 *Var4 *Var5 )
  35C:  		Thread
  364:  			Sub   *Var3  *Var0
  374:  			Sub   *Var4  *Var1
  384:  			Sub   *Var5  *Var2
  394:  			Div   *Var3  0000000A
  3A4:  			Div   *Var4  0000000A
  3B4:  			Div   *Var5  0000000A
  3C4:  			Loop  0000000A
  3D0:  				Add   *Var0  *Var3
  3E0:  				Add   *Var1  *Var4
  3F0:  				Add   *Var2  *Var5
  400:  				Call  PlayEffect    ( ~FX:EmitterVolume:Snowflakes *Var0 *Var1 *Var2 00000014 FFFFFFEC *Fixed[1.0] 00000005 0000001E 00000000 00000000 00000000 00000000 )
  444:  				Wait  1`
  450:  			EndLoop
  458:  		EndThread
  460:  		Wait  3`
  46C:  		Call  PlayEffect    ( ~FX:Lightning *Var0 *Var1 *Var2 *Var3 *Var4 *Var5 *Fixed[1.0] 00000014 00000000 00000000 00000000 00000000 )
  4B0:  		Call  $Function_802182E4    ( *VarF )
  4C0:  		Wait  10`
  4CC:  		Call  SetAnimation  ( .Actor:Self 00000001 007F0015 )
  4E4:  		If  *VarA  ==  .HitResult:Lucky % 5
  4F4:  			Call  EnemyTestTarget   ( .Actor:Self *Var0 ~Flags:DamageType:TriggerLucky 00000000 00000000 00000000 )
  518:  		EndIf
  520:  		Wait  20`
  52C:  		Call  UseBattleCamPreset    ( 00000002 )
  53C:  		Call  EnableIdleScript      ( .Actor:Self 00000001 )
  550:  		Call  UseIdleAnimation      ( .Actor:Self .True )
  564:  		Return
  56C:  EndSwitch
  574:  Call  GetActorPos       ( .Actor:Self *Var0 *Var1 *Var2 )
  590:  Call  GetStatusFlags    ( .Actor:Self *Var3 )
  5A4:  If  *Var3  !&  ~Flags:StatusFlags:Shrink % 80000
  5B4:  	Add   *Var0  FFFFFFF1
  5C4:  	Add   *Var1  00000014
  5D4:  Else
  5DC:  	Add   *Var0  FFFFFFFA
  5EC:  	Add   *Var1  00000008
  5FC:  EndIf
  604:  Call  SetGoalToTarget   ( .Actor:Self )
  614:  Call  GetGoalPos        ( .Actor:Self *Var3 *Var4 *Var5 )
  630:  Thread
  638:  	Sub   *Var3  *Var0
  648:  	Sub   *Var4  *Var1
  658:  	Sub   *Var5  *Var2
  668:  	Div   *Var3  0000000A
  678:  	Div   *Var4  0000000A
  688:  	Div   *Var5  0000000A
  698:  	Loop  0000000A
  6A4:  		Add   *Var0  *Var3
  6B4:  		Add   *Var1  *Var4
  6C4:  		Add   *Var2  *Var5
  6D4:  		Call  PlayEffect    ( ~FX:EmitterVolume:Snowflakes *Var0 *Var1 *Var2 00000014 FFFFFFEC *Fixed[1.0] 00000005 0000001E 00000000 00000000 00000000 00000000 )
  718:  		Wait  1`
  724:  	EndLoop
  72C:  EndThread
  734:  Wait  3`
  740:  Call  PlayEffect    ( ~FX:Lightning *Var0 *Var1 *Var2 *Var3 *Var4 *Var5 *Fixed[1.0] 00000014 00000000 00000000 00000000 00000000 )
  784:  Call  $Function_802182E4    ( *VarF )
  794:  Wait  7`
  7A0:  Thread
  7A8:  	Wait  3`
  7B4:  	Call  SetAnimation  ( .Actor:Self 00000001 007F0015 )
  7CC:  EndThread
  7D4:  Wait  2`
  7E0:  Call  SetGoalToTarget   ( .Actor:Self )
  7F0:  Call  EnemyDamageTarget ( .Actor:Self *Var0 ~Flags:DamageType:NoContact|Ice 00000000 ~DebuffType:0|Frozen:2:254` 00000006 00000020 )
  818:  Switch  *Var0
  824:  	CaseOR  ==  .HitResult:Hit % 0
  830:  	CaseOR  ==  .HitResult:QuakeImmune % 2
  83C:  		Call  SetGoalToTarget       ( .Actor:Self )
  84C:  		Call  GetGoalPos    ( .Actor:Self *Var0 *Var1 *Var2 )
  868:  		Call  PlayEffect    ( ~FX:ColdBreath:PuffUp *Var0 *Var1 *Var2 *Fixed[2.0] 0000001E 00000000 00000000 00000000 00000000 00000000 00000000 00000000 )
  8AC:  		Call  $Function_80218344    ( *VarF )
  8BC:  		Wait  30`
  8C8:  		Call  UseBattleCamPreset    ( 00000002 )
  8D8:  	EndCaseGroup
  8E0:  EndSwitch
  8E8:  Call  EnableIdleScript  ( .Actor:Self 00000001 )
  8FC:  Call  UseIdleAnimation  ( .Actor:Self .True )
  910:  Return
  918:  End
}

#new:StatusTable $StatusTable_8021C6DC
{
	.Status:Normal      0`
	.Status:Default     0`
	.Status:Sleep      30`
	.Status:Poison      0`
	.Status:Frozen      0`
	.Status:Dizzy      40`
	.Status:Fear        0`
	.Status:Static      0`
	.Status:Paralyze   40`
	.Status:Shrink      0`
	.Status:Stop       50`
	.Status:DefaultTurnMod    0`
	.Status:SleepTurnMod     -1`
	.Status:PoisonTurnMod     0`
	.Status:FrozenTurnMod     0`
	.Status:DizzyTurnMod     -1`
	.Status:FearTurnMod       0`
	.Status:StaticTurnMod     0`
	.Status:ParalyzeTurnMod  -1`
	.Status:ShrinkTurnMod    -1`
	.Status:StopTurnMod      -2`
	.Status:End
}

#new:Script $Script_HandleEvent_8021C788
{
    0:  Return
    8:  End
}

#new:Script $Script_Init_8021C798
{
    0:  Call  BindTakeTurn      ( .Actor:Self $Script_HandleEvent_8021C788 )
   14:  Call  BindIdle  ( .Actor:Self $Script_HandleEvent_8021C788 )
   28:  Call  BindHandleEvent   ( .Actor:Self $Script_HandleEvent_8021C788 )
   3C:  Return
   44:  End
}

#new:Actor $CrystalClone
{
	% stats
	[Index]        BEb
	[Level]         0`b
	[MaxHP]        70`b
	[Coins]         0`b
	[Flags]       00200000
	[StatusTable] $StatusTable_8021C6DC
	% ai
	[PartsCount]    1`s
	[PartsTable]  $PartsTable_80218AF4
	[Script]      $Script_Init_8021C798
	% move effectiveness
	[Escape]        0`b
	[Item]          0`b
	[AirLift]       0`b
	[Hurricane]     0`b % Bow's "Spook" as well
	[UpAndAway]     0`b
	[PowerBounce]   0`b
	[SpinSmash]     4`b % weight (0-4)
	% ui positions
	[Size]         56`b  56`b % width height
	[HealthBar]     0`b   0`b % dx dy
	[StatusTurn]  -15`b  40`b % dx dy
	[StatusIcon]   15`b  40`b % dx dy
}

#new:Vector3D $Vector3D_8021C80C
{
	0` -1000` 0`
}

#new:SpecialFormation $SpecialFormation_8021C818
{
	$CrystalClone $Vector3D_8021C80C 00000000 00000000 00000000 00000000 00000000
}

#new:Script $Script_SummonClones
{
    0:  Call  UseIdleAnimation  ( .Actor:Self .False )
   14:  Call  UseBattleCamPreset    ( 0000000E )
   24:  Call  BattleCamTargetActor  ( .Actor:Self )
   34:  Call  MoveBattleCamOver (  15` )
   44:  Wait  15`
   50:  Call  GetActorHP        ( .Actor:Self *VarA )
   64:  Call  SummonEnemy       ( $SpecialFormation_8021C818 00000000 )
   78:  Call  SetActorFlagBits  ( *Var0 00000004 .True )
   90:  Call  SetActorVar       ( .Actor:Self 00000002 *Var0 )
   A8:  Call  SetPartEventBits  ( *Var0 00000001 00000020 .True )
   C4:  Call  SetEnemyHP        ( *Var0 *VarA )
   D8:  Call  CopyStatusEffects ( .Actor:Self *Var0 )
   EC:  Call  CopyBuffs ( .Actor:Self *Var0 )
  100:  Call  SummonEnemy       ( $SpecialFormation_8021C818 00000000 )
  114:  Call  SetActorFlagBits  ( *Var0 00000004 .True )
  12C:  Call  SetActorVar       ( .Actor:Self 00000003 *Var0 )
  144:  Call  SetPartEventBits  ( *Var0 00000001 00000020 .True )
  160:  Call  SetEnemyHP        ( *Var0 *VarA )
  174:  Call  CopyStatusEffects ( .Actor:Self *Var0 )
  188:  Call  CopyBuffs ( .Actor:Self *Var0 )
  19C:  Call  GetActorVar       ( .Actor:Enemy0 00000000 *Var0 )
  1B4:  If  *Var0  &  00000002
  1C4:  	Call  SetAnimation  ( .Actor:Self 00000001 007F001D )
  1DC:  	Wait  20`
  1E8:  	Call  PlaySoundAtActor  ( .Actor:Self 000020E7 )
  1FC:  	Call  GetActorPos   ( .Actor:Self *Var7 *Var8 *Var9 )
  218:  	Call  MakeLerp      ( 00000000 00000029 0000001E .Easing:SinOut )
  234:  	Label  A
  240:  	Call  UpdateLerp ( )
  24C:  	Add   *Var0  *Var8
  25C:  	Call  SetActorPos   ( .Actor:Self *Var7 *Var0 *Var9 )
  278:  	Wait  1`
  284:  	If  *Var1  ==  00000001
  294:  		Goto  A
  2A0:  	EndIf
  2A8:  	Call  SetAnimation      ( .Actor:Self 00000001 007F0009 )
  2C0:  	Call  SetActorFlagBits  ( .Actor:Self 00000200 .True )
  2D8:  	Call  GetActorVar       ( .Actor:Self 00000002 *Var0 )
  2F0:  	Call  SetActorFlagBits  ( *Var0 00000200 .True )
  308:  	Call  GetActorVar       ( .Actor:Self 00000003 *Var0 )
  320:  	Call  SetActorFlagBits  ( *Var0 00000200 .True )
  338:  	Exec  $Script_80218E34 *Var0
  348:  	Call  SetActorVar       ( .Actor:Self 00000008 *Var0 )
  360:  EndIf
  368:  Call  UseBattleCamPreset    ( 00000001 )
  378:  Call  GetActorPos   ( .Actor:Self *Var0 *Var1 *Var2 )
  394:  Call  GetActorVar   ( .Actor:Self 00000002 *VarA )
  3AC:  Call  SetActorPos   ( *VarA *Var0 *Var1 *Var2 )
  3C8:  Call  GetActorVar   ( .Actor:Self 00000003 *VarA )
  3E0:  Call  SetActorPos   ( *VarA *Var0 *Var1 *Var2 )
  3FC:  Wait  1`
  408:  Call  SetAnimation  ( .Actor:Self 00000001 007F0000 )
  420:  Call  SetAnimation  ( .Actor:Self 00000001 007F0009 )
  438:  Call  GetActorVar   ( .Actor:Self 00000002 *Var0 )
  450:  Call  UseIdleAnimation  ( *Var0 .False )
  464:  Call  SetAnimation  ( *Var0 00000001 007F0000 )
  47C:  Call  SetAnimation  ( *Var0 00000001 007F0009 )
  494:  Call  UseIdleAnimation  ( *Var0 .True )
  4A8:  Call  GetActorVar   ( .Actor:Self 00000003 *Var0 )
  4C0:  Call  UseIdleAnimation  ( *Var0 .False )
  4D4:  Call  SetAnimation  ( *Var0 00000001 007F0000 )
  4EC:  Call  SetAnimation  ( *Var0 00000001 007F0009 )
  504:  Call  UseIdleAnimation  ( *Var0 .True )
  518:  Call  PlaySoundAtActor  ( .Actor:Self 000002DF )
  52C:  Call  EnableActorBlur   ( .Actor:Self 00000001 )
  540:  Call  GetActorVar   ( .Actor:Self 00000002 *Var0 )
  558:  Call  EnableActorBlur   ( *Var0 00000001 )
  56C:  Call  GetActorVar   ( .Actor:Self 00000003 *Var0 )
  584:  Call  EnableActorBlur   ( *Var0 00000001 )
  598:  Thread
  5A0:  	Call  MakeLerp      ( 00000000 00001AB8 000000D2 .Easing:CosInOut )
  5BC:  	Label  0
  5C8:  	Call  UpdateLerp ( )
  5D4:  	Call  SetActorYaw   ( .Actor:Self *Var0 )
  5E8:  	Call  GetActorVar   ( .Actor:Self 00000002 *Var2 )
  600:  	Call  SetActorYaw   ( *Var2 *Var0 )
  614:  	Call  GetActorVar   ( .Actor:Self 00000003 *Var2 )
  62C:  	Call  SetActorYaw   ( *Var2 *Var0 )
  640:  	Wait  1`
  64C:  	If  *Var1  ==  00000001
  65C:  		Goto  0
  668:  	EndIf
  670:  EndThread
  678:  Call  MakeLerp      ( 000000FF 00000080 0000001E .Easing:CosInOut )
  694:  Label  1
  6A0:  Call  UpdateLerp ( )
  6AC:  Call  SetPartAlpha  ( .Actor:Self 00000001 *Var0 )
  6C4:  Call  GetActorVar   ( .Actor:Self 00000002 *Var2 )
  6DC:  Call  SetPartAlpha  ( *Var2 00000001 *Var0 )
  6F4:  Call  GetActorVar   ( .Actor:Self 00000003 *Var2 )
  70C:  Call  SetPartAlpha  ( *Var2 00000001 *Var0 )
  724:  Wait  1`
  730:  If  *Var1  ==  00000001
  740:  	Goto  1
  74C:  EndIf
  754:  Call  GetActorVar   ( .Actor:Enemy0 00000000 *Var0 )
  76C:  ConstOR  *Var0 00000020
  77C:  Call  SetActorVar   ( .Actor:Enemy0 00000000 *Var0 )
  794:  Wait  60`
  7A0:  Call  RandInt       ( 000003E8 *Var0 )
  7B4:  Mod   *Var0  00000003
  7C4:  Switch  *Var0
  7D0:  	Case  ==  00000000
  7DC:  		Set   *VarA  FFFFFF81
  7EC:  		Call  GetActorVar   ( .Actor:Self 00000002 *VarB )
  804:  		Call  GetActorVar   ( .Actor:Self 00000003 *VarC )
  81C:  	Case  ==  00000001
  828:  		Call  GetActorVar   ( .Actor:Self 00000002 *VarA )
  840:  		Set   *VarB  FFFFFF81
  850:  		Call  GetActorVar   ( .Actor:Self 00000003 *VarC )
  868:  	Case  ==  00000002
  874:  		Call  GetActorVar   ( .Actor:Self 00000002 *VarA )
  88C:  		Call  GetActorVar   ( .Actor:Self 00000003 *VarB )
  8A4:  		Set   *VarC  FFFFFF81
  8B4:  EndSwitch
  8BC:  Call  SetActorFlagBits  ( *VarA 00000004 .False )
  8D4:  Call  SetActorFlagBits  ( *VarB 00000004 .False )
  8EC:  Call  SetActorFlagBits  ( *VarC 00000004 .False )
  904:  Call  UseBattleCamPreset    ( 00000002 )
  914:  Call  MoveBattleCamOver (  150` )
  924:  Thread
  92C:  	Call  GetActorPos   ( *VarA *Var0 *Var1 *Var2 )
  948:  	Set   *Var3  00000012
  958:  	Set   *Var5  00000005
  968:  	Sub   *Var3  *Var0
  978:  	Sub   *Var5  *Var2
  988:  	DivF  *Var3  *Fixed[60.0]
  998:  	DivF  *Var5  *Fixed[60.0]
  9A8:  	Loop  0000003C
  9B4:  		AddF  *Var0  *Var3
  9C4:  		AddF  *Var2  *Var5
  9D4:  		Call  SetActorPos   ( *VarA *Var0 *Var1 *Var2 )
  9F0:  		Wait  1`
  9FC:  	EndLoop
  A04:  EndThread
  A0C:  Thread
  A14:  	Call  GetActorPos   ( *VarB *Var0 *Var1 *Var2 )
  A30:  	Set   *Var3  00000046
  A40:  	Set   *Var5  00000005
  A50:  	Sub   *Var3  *Var0
  A60:  	Sub   *Var5  *Var2
  A70:  	DivF  *Var3  *Fixed[60.0]
  A80:  	DivF  *Var5  *Fixed[60.0]
  A90:  	Loop  0000003C
  A9C:  		AddF  *Var0  *Var3
  AAC:  		AddF  *Var2  *Var5
  ABC:  		Call  SetActorPos   ( *VarB *Var0 *Var1 *Var2 )
  AD8:  		Wait  1`
  AE4:  	EndLoop
  AEC:  EndThread
  AF4:  Thread
  AFC:  	Call  GetActorPos   ( *VarC *Var0 *Var1 *Var2 )
  B18:  	Set   *Var3  0000007A
  B28:  	Set   *Var5  00000005
  B38:  	Sub   *Var3  *Var0
  B48:  	Sub   *Var5  *Var2
  B58:  	DivF  *Var3  *Fixed[60.0]
  B68:  	DivF  *Var5  *Fixed[60.0]
  B78:  	Loop  0000003C
  B84:  		AddF  *Var0  *Var3
  B94:  		AddF  *Var2  *Var5
  BA4:  		Call  SetActorPos   ( *VarC *Var0 *Var1 *Var2 )
  BC0:  		Wait  1`
  BCC:  	EndLoop
  BD4:  EndThread
  BDC:  Wait  90`
  BE8:  Wait  30`
  BF4:  Wait  30`
  C00:  Call  EnableActorBlur   ( .Actor:Self 00000000 )
  C14:  Call  GetActorPos   ( .Actor:Self *Var0 *Var1 *Var2 )
  C30:  Call  ForceHomePos  ( .Actor:Self *Var0 *Var1 *Var2 )
  C4C:  Call  HPBarToHome   ( .Actor:Self )
  C5C:  Call  GetActorVar   ( .Actor:Self 00000002 *VarA )
  C74:  Call  EnableActorBlur   ( *VarA 00000000 )
  C88:  Call  GetActorPos   ( *VarA *Var0 *Var1 *Var2 )
  CA4:  Call  ForceHomePos  ( *VarA *Var0 *Var1 *Var2 )
  CC0:  Call  HPBarToHome   ( *VarA )
  CD0:  Call  GetActorVar   ( .Actor:Self 00000003 *VarA )
  CE8:  Call  EnableActorBlur   ( *VarA 00000000 )
  CFC:  Call  GetActorPos   ( *VarA *Var0 *Var1 *Var2 )
  D18:  Call  ForceHomePos  ( *VarA *Var0 *Var1 *Var2 )
  D34:  Call  HPBarToHome   ( *VarA )
  D44:  Call  GetActorVar   ( .Actor:Enemy0 00000000 *Var0 )
  D5C:  ConstAND  *Var0 FFFFFFFE
  D6C:  Call  SetActorVar   ( .Actor:Enemy0 00000000 *Var0 )
  D84:  Wait  20`
  D90:  Call  UseIdleAnimation  ( .Actor:Self .True )
  DA4:  Return
  DAC:  End
}

#new:SpecialFormation $SpecialFormation_8021D5E8
{
	$CrystalBitA $Vector3D_8021C80C 00000000 00000000 00000000 00000000 00000000
}

#new:SpecialFormation $SpecialFormation_8021D604
{
	$CrystalBitB $Vector3D_8021C80C 00000000 00000000 00000000 00000000 00000000
}

#new:SpecialFormation $SpecialFormation_8021D620
{
	$CrystalBitC $Vector3D_8021C80C 00000000 00000000 00000000 00000000 00000000
}

#new:Unknown $???_8021D63C
{
	00000000 00000000 00000000 00000000 00000000 00000000 00000000 00000000
	00000000 00000000 00000000 00000000 00000000 00000000 00000000 00000000
}

#new:Unknown $???_8021D67C
{
	00000000 00000000 00000000 00000000 00000000 00000000 00000000 00000000
	00000000 00000000 00000000 00000000 00000000 00000000 00000000 00000000
}

#new:Unknown $???_8021D6BC
{
	00000000 00000000 00000000 00000000 00000000 00000000 00000000 00000000
	00000000 00000000 00000000 00000000 00000000 00000000 00000000 00000000
}

#new:Script $Script_AnimateSummon
{
    0:  UseArray  *Var4
    C:  Set   *Array[0]  *Var0
   1C:  SetF  *Array[1]  *Var1
   2C:  SetF  *Array[2]  *Var2
   3C:  SetF  *Array[3]  *Var3
   4C:  Call  GetActorPos   ( .Actor:Self *VarA *VarB *VarC )
   68:  SubF  *Var2  *VarB
   78:  DivF  *Var2  *Fixed[120.0]
   88:  SetF  *Array[4]  *Var2
   98:  SetF  *Var6  *VarB
   A8:  Call  GetActorPos   ( .Actor:Self *VarA *VarB *VarC )
   C4:  Call  GetDist2D     ( *VarD *VarA *VarC *Var1 *Var3 )
   E4:  DivF  *VarD  *Fixed[120.0]
   F4:  SetF  *Array[5]  *VarD
  104:  Call  GetActorPos   ( .Actor:Self *VarA *VarB *VarC )
  120:  Call  $Function_802183A4    ( *Array[6] *VarA *VarC *Var1 *Var3 )
  140:  Call  SetPartAlpha  ( *Var0 00000001 00000000 )
  158:  Thread
  160:  	Wait  30`
  16C:  	Call  EnableActorBlur   ( *Var0 00000001 )
  180:  	Set   *Var9  *Var0
  190:  	Call  MakeLerp  ( 00000000 000000FF 0000005A .Easing:Linear )
  1AC:  	Label  0
  1B8:  	Call  UpdateLerp ( )
  1C4:  	Call  SetPartAlpha      ( *Var9 00000001 *Var0 )
  1DC:  	Wait  1`
  1E8:  	If  *Var1  ==  00000001
  1F8:  		Goto  0
  204:  	EndIf
  20C:  EndThread
  214:  SetF  *Var5  *Fixed[0.0]
  224:  Call  MakeLerp      ( 00000000 00000B40 00000078 .Easing:SinOut )
  240:  Label  1
  24C:  Call  UpdateLerp ( )
  258:  Call  GetActorPos   ( .Actor:Self *Var2 *Var3 *Var4 )
  274:  AddF  *Var5  *Array[5]
  284:  AddF  *Var0  *Array[6]
  294:  Call  AddVectorPolar    ( *Var2 *Var4 *Var5 *Var0 )
  2B0:  AddF  *Var6  *Array[4]
  2C0:  Call  SetActorPos   ( *Array[0] *Var2 *Var6 *Var4 )
  2DC:  Wait  1`
  2E8:  If  *Var1  ==  00000001
  2F8:  	Goto  1
  304:  EndIf
  30C:  Call  EnableActorBlur   ( *Array[0] 00000000 )
  320:  Return
  328:  End
}

#new:Script $Script_SummonRocks
{
    0:  Call  UseIdleAnimation  ( .Actor:Self .False )
   14:  Call  EnableIdleScript  ( .Actor:Self 00000000 )
   28:  Call  UseBattleCamPreset    ( 0000000E )
   38:  Call  BattleCamTargetActor  ( .Actor:Self )
   48:  Call  MoveBattleCamOver (  15` )
   58:  Wait  15`
   64:  Call  SetAnimation      ( .Actor:Self 00000001 007F001E )
   7C:  Wait  20`
   88:  Call  SummonEnemy       ( $SpecialFormation_8021D5E8 00000000 )
   9C:  Call  SetActorVar       ( .Actor:Self 00000004 *Var0 )
   B4:  Call  SummonEnemy       ( $SpecialFormation_8021D604 00000000 )
   C8:  Call  SetActorVar       ( .Actor:Self 00000005 *Var0 )
   E0:  Call  SummonEnemy       ( $SpecialFormation_8021D620 00000000 )
   F4:  Call  SetActorVar       ( .Actor:Self 00000006 *Var0 )
  10C:  Call  GetStatusFlags    ( .Actor:Self *Var0 )
  120:  If  *Var0  &  ~Flags:StatusFlags:Shrink % 80000
  130:  	Call  GetActorVar   ( .Actor:Self 00000004 *Var0 )
  148:  	Call  SetPartScale  ( *Var0 00000001 *Fixed[0.4] *Fixed[0.4] *Fixed[0.4] )
  168:  	Call  GetActorVar   ( .Actor:Self 00000005 *Var0 )
  180:  	Call  SetPartScale  ( *Var0 00000001 *Fixed[0.4] *Fixed[0.4] *Fixed[0.4] )
  1A0:  	Call  GetActorVar   ( .Actor:Self 00000006 *Var0 )
  1B8:  	Call  SetPartScale  ( *Var0 00000001 *Fixed[0.4] *Fixed[0.4] *Fixed[0.4] )
  1D8:  EndIf
  1E0:  Call  SetAnimation  ( .Actor:Self 00000001 007F001F )
  1F8:  Call  PlaySoundAtActor  ( .Actor:Self 000002DE )
  20C:  Call  GetActorVar   ( .Actor:Self 00000006 *Var0 )
  224:  SetF  *Var1  *Fixed[42.0]
  234:  SetF  *Var2  *Fixed[85.0]
  244:  SetF  *Var3  *Fixed[-10.0]
  254:  Set   *Var4  $???_8021D6BC
  264:  Exec  $Script_AnimateSummon
  270:  Wait  10`
  27C:  Call  GetActorVar   ( .Actor:Self 00000005 *Var0 )
  294:  SetF  *Var1  *Fixed[112.0]
  2A4:  SetF  *Var2  *Fixed[52.0]
  2B4:  SetF  *Var3  *Fixed[-5.0]
  2C4:  Set   *Var4  $???_8021D67C
  2D4:  Exec  $Script_AnimateSummon
  2E0:  Wait  24`
  2EC:  Call  GetActorVar   ( .Actor:Self 00000004 *Var0 )
  304:  SetF  *Var1  *Fixed[10.0]
  314:  SetF  *Var2  *Fixed[35.0]
  324:  SetF  *Var3  *Fixed[-5.0]
  334:  Set   *Var4  $???_8021D63C
  344:  Exec  $Script_AnimateSummon
  350:  Wait  130`
  35C:  Call  GetActorVar   ( .Actor:Self 00000004 *Var0 )
  374:  Call  ForceHomePos  ( *Var0  10`  35`  -5` )
  390:  Call  HPBarToHome   ( *Var0 )
  3A0:  Call  GetActorVar   ( .Actor:Self 00000005 *Var0 )
  3B8:  Call  ForceHomePos  ( *Var0  112`  52`  -5` )
  3D4:  Call  HPBarToHome   ( *Var0 )
  3E4:  Call  GetActorVar   ( .Actor:Self 00000006 *Var0 )
  3FC:  Call  ForceHomePos  ( *Var0  42`  85`  -10` )
  418:  Call  HPBarToHome   ( *Var0 )
  428:  Call  UseBattleCamPreset    ( 00000002 )
  438:  Call  EnableIdleScript  ( .Actor:Self 00000001 )
  44C:  Call  UseIdleAnimation  ( .Actor:Self .True )
  460:  Return
  468:  End
}

#new:Script $Script_TripleFrostBreath
{
    0:  Call  GetActorVar       ( .Actor:Self 00000002 *VarA )
   18:  Call  GetActorVar       ( .Actor:Self 00000003 *VarB )
   30:  Call  UseIdleAnimation  ( .Actor:Self .False )
   44:  Call  UseIdleAnimation  ( *VarA .False )
   58:  Call  UseIdleAnimation  ( *VarB .False )
   6C:  Call  GetActorVar       ( .Actor:Enemy0 00000000 *Var0 )
   84:  ConstOR  *Var0 00000040
   94:  Call  SetActorVar       ( .Actor:Enemy0 00000000 *Var0 )
   AC:  Call  SetTargetActor    ( .Actor:Self .Actor:Player )
   C0:  Call  UseBattleCamPreset    ( 00000013 )
   D0:  Call  SetBattleCamZoom  (  350` )
   E0:  Call  SetBattleCamOffsetZ   (  35` )
   F0:  Call  GetActorFlags     ( .Actor:Self *Var0 )
  104:  If  *Var0  &  00000200
  114:  	Call  SetBattleCamTarget    (  70`  41`  5` )
  12C:  Else
  134:  	Call  SetBattleCamTarget    (  70`  0`  5` )
  14C:  EndIf
  154:  Call  MoveBattleCamOver (  15` )
  164:  Call  SetAnimation      ( .Actor:Self 00000001 007F0013 )
  17C:  Call  SetAnimation      ( *VarA 00000001 007F0013 )
  194:  Call  SetAnimation      ( *VarB 00000001 007F0013 )
  1AC:  Wait  10`
  1B8:  Call  PlaySoundAtActor  ( .Actor:Self 0000206D )
  1CC:  Call  PlaySoundAtActor  ( *VarA 0000206D )
  1E0:  Call  PlaySoundAtActor  ( *VarB 0000206D )
  1F4:  Call  GetStatusFlags    ( .Actor:Self *Var9 )
  208:  If  *Var9  !&  ~Flags:StatusFlags:Shrink % 80000
  218:  	Call  GetActorPos   ( .Actor:Self *Var0 *Var1 *Var2 )
  234:  	Add   *Var1  00000014
  244:  	Add   *Var2  FFFFFFFB
  254:  	Call  PlayEffect    ( ~FX:Sparkles:Star *Var0 *Var1 *Var2 00000014 00000000 00000000 00000000 00000000 00000000 00000000 00000000 00000000 )
  298:  	Call  GetActorPos   ( *VarA *Var0 *Var1 *Var2 )
  2B4:  	Add   *Var1  00000014
  2C4:  	Add   *Var2  FFFFFFFB
  2D4:  	Call  PlayEffect    ( ~FX:Sparkles:Star *Var0 *Var1 *Var2 00000014 00000000 00000000 00000000 00000000 00000000 00000000 00000000 00000000 )
  318:  	Call  GetActorPos   ( *VarB *Var0 *Var1 *Var2 )
  334:  	Add   *Var1  00000014
  344:  	Add   *Var2  FFFFFFFB
  354:  	Call  PlayEffect    ( ~FX:Sparkles:Star *Var0 *Var1 *Var2 00000014 00000000 00000000 00000000 00000000 00000000 00000000 00000000 00000000 )
  398:  Else
  3A0:  	Call  GetActorPos   ( .Actor:Self *Var0 *Var1 *Var2 )
  3BC:  	Add   *Var1  00000008
  3CC:  	Add   *Var2  FFFFFFFE
  3DC:  	Call  PlayEffect    ( ~FX:Sparkles:Star *Var0 *Var1 *Var2 00000008 00000000 00000000 00000000 00000000 00000000 00000000 00000000 00000000 )
  420:  	Call  GetActorPos   ( *VarA *Var0 *Var1 *Var2 )
  43C:  	Add   *Var1  00000008
  44C:  	Add   *Var2  FFFFFFFE
  45C:  	Call  PlayEffect    ( ~FX:Sparkles:Star *Var0 *Var1 *Var2 00000008 00000000 00000000 00000000 00000000 00000000 00000000 00000000 00000000 )
  4A0:  	Call  GetActorPos   ( *VarB *Var0 *Var1 *Var2 )
  4BC:  	Add   *Var1  00000008
  4CC:  	Add   *Var2  FFFFFFFE
  4DC:  	Call  PlayEffect    ( ~FX:Sparkles:Star *Var0 *Var1 *Var2 00000008 00000000 00000000 00000000 00000000 00000000 00000000 00000000 00000000 )
  520:  EndIf
  528:  Wait  30`
  534:  Call  UseBattleCamPreset    ( 00000002 )
  544:  Call  MoveBattleCamOver (  20` )
  554:  Call  SetAnimation      ( .Actor:Self 00000001 007F001C )
  56C:  Call  SetAnimation      ( *VarA 00000001 007F001C )
  584:  Call  SetAnimation      ( *VarB 00000001 007F001C )
  59C:  Wait  3`
  5A8:  Call  PlaySoundAtActor  ( .Actor:Self 0000035D )
  5BC:  Call  EnemyTestTarget   ( .Actor:Self *Var0 ~Flags:DamageType:0 00000000 00000001 00000010 )
  5E0:  Switch  *Var0
  5EC:  	CaseOR  ==  .HitResult:Miss % 6
  5F8:  	CaseOR  ==  .HitResult:Lucky % 5
  604:  		Set   *Var5  *Var0
  614:  		Call  GetActorFlags ( .Actor:Self *Var0 )
  628:  		If  *Var0  &  00000200
  638:  			SetF  *Var3  *Fixed[195.0]
  648:  		Else
  650:  			SetF  *Var3  *Fixed[180.0]
  660:  		EndIf
  668:  		Call  $Function_80218000    ( 00000064 0000003C )
  67C:  		Thread
  684:  			Call  ShakeCam  ( .Cam:Battle 00000000  30` *Fixed[0.3] )
  6A0:  		EndThread
  6A8:  		Call  GetStatusFlags    ( .Actor:Self *Var9 )
  6BC:  		If  *Var9  !&  ~Flags:StatusFlags:Shrink % 80000
  6CC:  			Call  GetActorPos   ( .Actor:Self *Var0 *Var1 *Var2 )
  6E8:  			Add   *Var0  FFFFFFF1
  6F8:  			Add   *Var1  00000014
  708:  			Call  PlayEffect    ( ~FX:HuffPuffBreath *Var0 *Var1 *Var2 *Var3 *Fixed[2.0] *Fixed[1.0] 0000001E 00000000 00000000 00000000 00000000 00000000 )
  74C:  			Call  $Function_80218280    ( *VarF )
  75C:  			Call  GetActorPos   ( *VarA *Var0 *Var1 *Var2 )
  778:  			Add   *Var0  FFFFFFF1
  788:  			Add   *Var1  00000014
  798:  			Call  PlayEffect    ( ~FX:HuffPuffBreath *Var0 *Var1 *Var2 *Var3 *Fixed[2.0] *Fixed[1.0] 0000001E 00000000 00000000 00000000 00000000 00000000 )
  7DC:  			Call  $Function_80218280    ( *VarF )
  7EC:  			Call  GetActorPos   ( *VarB *Var0 *Var1 *Var2 )
  808:  			Add   *Var0  FFFFFFF1
  818:  			Add   *Var1  00000014
  828:  			Call  PlayEffect    ( ~FX:HuffPuffBreath *Var0 *Var1 *Var2 *Var3 *Fixed[2.0] *Fixed[1.0] 0000001E 00000000 00000000 00000000 00000000 00000000 )
  86C:  			Call  $Function_80218280    ( *VarF )
  87C:  		Else
  884:  			Call  GetActorPos   ( .Actor:Self *Var0 *Var1 *Var2 )
  8A0:  			Add   *Var0  FFFFFFFA
  8B0:  			Add   *Var1  00000008
  8C0:  			Call  PlayEffect    ( ~FX:HuffPuffBreath *Var0 *Var1 *Var2 *Var3 *Fixed[2.0] *Fixed[0.4] 0000001E 00000000 00000000 00000000 00000000 00000000 )
  904:  			Call  $Function_80218280    ( *VarF )
  914:  			Call  GetActorPos   ( *VarA *Var0 *Var1 *Var2 )
  930:  			Add   *Var0  FFFFFFFA
  940:  			Add   *Var1  00000008
  950:  			Call  PlayEffect    ( ~FX:HuffPuffBreath *Var0 *Var1 *Var2 *Var3 *Fixed[2.0] *Fixed[0.4] 0000001E 00000000 00000000 00000000 00000000 00000000 )
  994:  			Call  $Function_80218280    ( *VarF )
  9A4:  			Call  GetActorPos   ( *VarB *Var0 *Var1 *Var2 )
  9C0:  			Add   *Var0  FFFFFFFA
  9D0:  			Add   *Var1  00000008
  9E0:  			Call  PlayEffect    ( ~FX:HuffPuffBreath *Var0 *Var1 *Var2 *Var3 *Fixed[2.0] *Fixed[0.4] 0000001E 00000000 00000000 00000000 00000000 00000000 )
  A24:  			Call  $Function_80218280    ( *VarF )
  A34:  		EndIf
  A3C:  		Wait  30`
  A48:  		Call  StopSound ( 0000035D )
  A58:  		If  *Var5  ==  .HitResult:Lucky % 5
  A68:  			Call  EnemyTestTarget   ( .Actor:Self *Var0 ~Flags:DamageType:TriggerLucky 00000000 00000000 00000000 )
  A8C:  		EndIf
  A94:  		Wait  20`
  AA0:  		Call  UseBattleCamPreset    ( 00000002 )
  AB0:  		Call  GetActorVar       ( .Actor:Enemy0 00000000 *Var0 )
  AC8:  		ConstAND  *Var0 FFFFFFBF
  AD8:  		Call  SetActorVar       ( .Actor:Enemy0 00000000 *Var0 )
  AF0:  		Call  UseIdleAnimation  ( .Actor:Self .True )
  B04:  		Call  UseIdleAnimation  ( *VarA .True )
  B18:  		Call  UseIdleAnimation  ( *VarB .True )
  B2C:  		Return
  B34:  EndSwitch
  B3C:  Call  GetActorFlags ( .Actor:Self *Var0 )
  B50:  If  *Var0  &  00000200
  B60:  	SetF  *Var3  *Fixed[195.0]
  B70:  Else
  B78:  	SetF  *Var3  *Fixed[180.0]
  B88:  EndIf
  B90:  Call  $Function_80218000    ( 00000064 00000078 )
  BA4:  Thread
  BAC:  	Call  ShakeCam  ( .Cam:Battle 00000000  60` *Fixed[0.3] )
  BC8:  EndThread
  BD0:  Call  GetStatusFlags    ( .Actor:Self *Var9 )
  BE4:  If  *Var9  !&  ~Flags:StatusFlags:Shrink % 80000
  BF4:  	Call  GetActorPos   ( .Actor:Self *Var0 *Var1 *Var2 )
  C10:  	Add   *Var0  FFFFFFF1
  C20:  	Add   *Var1  00000014
  C30:  	Call  PlayEffect    ( ~FX:HuffPuffBreath *Var0 *Var1 *Var2 *Var3 *Fixed[2.0] *Fixed[1.0] 0000003C 00000000 00000000 00000000 00000000 00000000 )
  C74:  	Call  $Function_80218280    ( *VarF )
  C84:  	Call  GetActorPos   ( *VarA *Var0 *Var1 *Var2 )
  CA0:  	Add   *Var0  FFFFFFF1
  CB0:  	Add   *Var1  00000014
  CC0:  	Call  PlayEffect    ( ~FX:HuffPuffBreath *Var0 *Var1 *Var2 *Var3 *Fixed[2.0] *Fixed[1.0] 0000003C 00000000 00000000 00000000 00000000 00000000 )
  D04:  	Call  $Function_80218280    ( *VarF )
  D14:  	Call  GetActorPos   ( *VarB *Var0 *Var1 *Var2 )
  D30:  	Add   *Var0  FFFFFFF1
  D40:  	Add   *Var1  00000014
  D50:  	Call  PlayEffect    ( ~FX:HuffPuffBreath *Var0 *Var1 *Var2 *Var3 *Fixed[2.0] *Fixed[1.0] 0000003C 00000000 00000000 00000000 00000000 00000000 )
  D94:  	Call  $Function_80218280    ( *VarF )
  DA4:  Else
  DAC:  	Call  GetActorPos   ( .Actor:Self *Var0 *Var1 *Var2 )
  DC8:  	Add   *Var0  FFFFFFFA
  DD8:  	Add   *Var1  00000008
  DE8:  	Call  PlayEffect    ( ~FX:HuffPuffBreath *Var0 *Var1 *Var2 *Var3 *Fixed[2.0] *Fixed[1.0] 0000003C 00000000 00000000 00000000 00000000 00000000 )
  E2C:  	Call  $Function_80218280    ( *VarF )
  E3C:  	Call  GetActorPos   ( *VarA *Var0 *Var1 *Var2 )
  E58:  	Add   *Var0  FFFFFFFA
  E68:  	Add   *Var1  00000008
  E78:  	Call  PlayEffect    ( ~FX:HuffPuffBreath *Var0 *Var1 *Var2 *Var3 *Fixed[2.0] *Fixed[1.0] 0000003C 00000000 00000000 00000000 00000000 00000000 )
  EBC:  	Call  $Function_80218280    ( *VarF )
  ECC:  	Call  GetActorPos   ( *VarB *Var0 *Var1 *Var2 )
  EE8:  	Add   *Var0  FFFFFFFA
  EF8:  	Add   *Var1  00000008
  F08:  	Call  PlayEffect    ( ~FX:HuffPuffBreath *Var0 *Var1 *Var2 *Var3 *Fixed[2.0] *Fixed[1.0] 0000003C 00000000 00000000 00000000 00000000 00000000 )
  F4C:  	Call  $Function_80218280    ( *VarF )
  F5C:  EndIf
  F64:  Wait  60`
  F70:  Call  StopSound     ( 0000035D )
  F80:  Call  SetAnimation  ( .Actor:Self 00000001 007F0015 )
  F98:  Call  SetAnimation  ( *VarA 00000001 007F0015 )
  FB0:  Call  SetAnimation  ( *VarB 00000001 007F0015 )
  FC8:  Wait  2`
  FD4:  Call  SetGoalToTarget   ( .Actor:Self )
  FE4:  Call  EnemyDamageTarget ( .Actor:Self *Var0 ~Flags:DamageType:NoContact|Ice 00000000 00000000 00000008 00000020 )
 100C:  Switch  *Var0
 1018:  	CaseOR  ==  .HitResult:Hit % 0
 1024:  	CaseOR  ==  .HitResult:QuakeImmune % 2
 1030:  		Call  UseBattleCamPreset    ( 00000002 )
 1040:  		Wait  20`
 104C:  	EndCaseGroup
 1054:  EndSwitch
 105C:  Call  GetActorVar       ( .Actor:Enemy0 00000000 *Var0 )
 1074:  ConstAND  *Var0 FFFFFFBF
 1084:  Call  SetActorVar       ( .Actor:Enemy0 00000000 *Var0 )
 109C:  Call  UseIdleAnimation  ( .Actor:Self .True )
 10B0:  Call  UseIdleAnimation  ( *VarA .True )
 10C4:  Call  UseIdleAnimation  ( *VarB .True )
 10D8:  Return
 10E0:  End
}

#new:Script $Script_SuckInRock
{
    0:  Set   *VarA  *Var0
   10:  Set   *VarB  *Var1
   20:  Call  UseIdleAnimation  ( *VarA .False )
   34:  Call  GetActorPos       ( *VarA *Var0 *Var1 *Var2 )
   50:  Call  GetActorPos       ( .Actor:Self *Var3 *Var4 *Var5 )
   6C:  Call  GetStatusFlags    ( .Actor:Self *Var9 )
   80:  If  *Var9  !&  ~Flags:StatusFlags:Shrink % 80000
   90:  	Add   *Var3  FFFFFFF1
   A0:  	Add   *Var4  00000014
   B0:  Else
   B8:  	Add   *Var3  FFFFFFFA
   C8:  	Add   *Var4  00000008
   D8:  EndIf
   E0:  Call  $Function_8021848C    ( *VarB *Var0 *Var1 *Var2 *Var3 *Var4 *Var5 )
  108:  Call  LoadPath  ( 0000001E *VarB 00000003 .Easing:QuadraticIn )
  124:  Label  0
  130:  Call  GetNextPathPos ( )
  13C:  Call  SetActorPos   ( *VarA *Var1 *Var2 *Var3 )
  158:  Wait  1`
  164:  If  *Var0  ==  00000001
  174:  	Goto  0
  180:  EndIf
  188:  Call  SetPartFlagBits   ( *VarA 00000001 00000001 .True )
  1A4:  Call  SetActorFlagBits  ( *VarA 00000004 .True )
  1BC:  Return
  1C4:  End
}

#new:Script $Script_SpitRockMiss
{
    0:  Call  PlaySoundAtActor  ( .Actor:Self 000003D9 )
   14:  Set   *VarA  *Var0
   24:  Call  SetPartFlagBits   ( *VarA 00000001 00000001 .False )
   40:  Call  SetActorFlagBits  ( *VarA 00000004 .False )
   58:  Call  SetGoalToTarget   ( .Actor:Self )
   68:  Call  AddGoalPos        ( .Actor:Self  -150`  0`  0` )
   84:  Call  GetGoalPos        ( .Actor:Self *Var0 *Var1 *Var2 )
   A0:  Call  GetActorPos       ( *VarA *Var3 *Var4 *Var5 )
   BC:  Thread
   C4:  	Sub   *Var0  *Var3
   D4:  	Sub   *Var1  *Var4
   E4:  	Sub   *Var2  *Var5
   F4:  	Div   *Var0  0000000A
  104:  	Div   *Var1  0000000A
  114:  	Div   *Var2  0000000A
  124:  	Loop  0000000A
  130:  		Add   *Var3  *Var0
  140:  		Add   *Var4  *Var1
  150:  		Add   *Var5  *Var2
  160:  		Call  PlayEffect    ( ~FX:EmitterVolume:Snowflakes *Var3 *Var4 *Var5 00000014 FFFFFFEC *Fixed[1.0] 00000005 0000001E 00000000 00000000 00000000 00000000 )
  1A4:  		Wait  1`
  1B0:  	EndLoop
  1B8:  EndThread
  1C0:  Call  SetActorSpeed ( *VarA *Fixed[16.0] )
  1D4:  Call  SetGoalPos    ( *VarA *Var0 *Var1 *Var2 )
  1F0:  Call  FlyToGoal     ( *VarA  0`  0` .Easing:Linear )
  20C:  Call  GetActorVar   ( *VarA 00000000 *VarF )
  224:  Call  RemoveEffect  ( *VarF )
  234:  Call  RemoveActor   ( *VarA )
  244:  Return
  24C:  End
}

#new:Script $Script_SpitRock
{
    0:  Call  PlaySoundAtActor  ( .Actor:Self 000003D9 )
   14:  Set   *VarA  *Var0
   24:  Call  SetPartFlagBits   ( *VarA 00000001 00000001 .False )
   40:  Call  SetActorFlagBits  ( *VarA 00000004 .False )
   58:  Call  SetGoalToTarget   ( .Actor:Self )
   68:  Call  GetGoalPos        ( .Actor:Self *Var0 *Var1 *Var2 )
   84:  Call  GetActorPos       ( *VarA *Var3 *Var4 *Var5 )
   A0:  Thread
   A8:  	Sub   *Var0  *Var3
   B8:  	Sub   *Var1  *Var4
   C8:  	Sub   *Var2  *Var5
   D8:  	Div   *Var0  0000000A
   E8:  	Div   *Var1  0000000A
   F8:  	Div   *Var2  0000000A
  108:  	Loop  0000000A
  114:  		Add   *Var3  *Var0
  124:  		Add   *Var4  *Var1
  134:  		Add   *Var5  *Var2
  144:  		Call  PlayEffect    ( ~FX:EmitterVolume:Snowflakes *Var3 *Var4 *Var5 00000014 FFFFFFEC *Fixed[1.0] 00000005 0000001E 00000000 00000000 00000000 00000000 )
  188:  		Wait  1`
  194:  	EndLoop
  19C:  EndThread
  1A4:  Call  SetActorSpeed ( *VarA *Fixed[16.0] )
  1B8:  Call  SetGoalPos    ( *VarA *Var0 *Var1 *Var2 )
  1D4:  Call  FlyToGoal     ( *VarA  0`  0` .Easing:Linear )
  1F0:  Wait  2`
  1FC:  Call  EnemyDamageTarget     ( .Actor:Self *Var0 ~Flags:DamageType:NoContact|Ice 00000000 00000000 00000004 00000000 )
  224:  Call  SetActorJumpGravity   ( *VarA *Fixed[1.0] )
  238:  Call  GetActorPos   ( *VarA *Var1 *Var2 *Var3 )
  254:  Sub   *Var1  00000064
  264:  Call  RandInt       ( 00000032 *Var4 )
  278:  Add   *Var2  *Var4
  288:  Call  SetGoalPos    ( *VarA *Var1 *Var2 *Var3 )
  2A4:  Call  JumpToGoal    ( *VarA  20` .False .True .False )
  2C4:  Call  GetActorVar   ( *VarA 00000000 *VarF )
  2DC:  Call  RemoveEffect  ( *VarF )
  2EC:  Call  RemoveActor   ( *VarA )
  2FC:  Return
  304:  End
}

#new:Script $Script_SpitAllRocks
{
    0:  Call  UseIdleAnimation      ( .Actor:Self .False )
   14:  Call  EnableIdleScript      ( .Actor:Self 00000000 )
   28:  Call  SetTargetActor        ( .Actor:Self .Actor:Player )
   3C:  Call  UseBattleCamPreset    ( 0000000E )
   4C:  Call  BattleCamTargetActor  ( .Actor:Self )
   5C:  Call  SetAnimation  ( .Actor:Self 00000001 007F001C )
   74:  Wait  20`
   80:  Call  $Function_80218000    ( 00000046 0000003C )
   94:  Thread
   9C:  	Call  ShakeCam  ( .Cam:Battle 00000000  30` *Fixed[0.2] )
   B8:  EndThread
   C0:  Call  PlaySoundAtActor  ( .Actor:Self 000003AF )
   D4:  Call  GetActorVar       ( .Actor:Self 00000004 *Var0 )
   EC:  Call  ActorExists       ( *Var0 *Var1 )
  100:  If  *Var1  ==  .True
  110:  	Set   *Var1  $End[0]
  120:  	Exec  $Script_SuckInRock *VarA
  130:  EndIf
  138:  Call  GetActorVar   ( .Actor:Self 00000005 *Var0 )
  150:  Call  ActorExists   ( *Var0 *Var1 )
  164:  If  *Var1  ==  .True
  174:  	Set   *Var1  $End[24]
  184:  	Exec  $Script_SuckInRock *VarA
  194:  EndIf
  19C:  Call  GetActorVar   ( .Actor:Self 00000006 *Var0 )
  1B4:  Call  ActorExists   ( *Var0 *Var1 )
  1C8:  If  *Var1  ==  .True
  1D8:  	Set   *Var1  $End[48]
  1E8:  	Exec  $Script_SuckInRock *VarA
  1F8:  EndIf
  200:  Label  0
  20C:  DoesScriptExist  *VarA *Var0
  21C:  If  *Var0  ==  00000001
  22C:  	Wait  1`
  238:  	Goto  0
  244:  EndIf
  24C:  Call  SetAnimation      ( .Actor:Self 00000001 007F0013 )
  264:  Wait  30`
  270:  Call  UseBattleCamPreset    ( 00000002 )
  280:  Call  MoveBattleCamOver (  15` )
  290:  Call  EnemyTestTarget   ( .Actor:Self *Var0 ~Flags:DamageType:0 00000000 00000001 00000010 )
  2B4:  Switch  *Var0
  2C0:  	CaseOR  ==  .HitResult:Miss % 6
  2CC:  	CaseOR  ==  .HitResult:Lucky % 5
  2D8:  		Set   *Var9  *Var0
  2E8:  		Call  GetActorVar   ( .Actor:Self 00000004 *Var0 )
  300:  		Call  ActorExists   ( *Var0 *Var1 )
  314:  		If  *Var1  ==  .True
  324:  			Call  SetAnimation  ( .Actor:Self 00000001 007F001C )
  33C:  			Exec  $Script_SpitRockMiss *VarA
  34C:  			Wait  4`
  358:  			Call  SetAnimation  ( .Actor:Self 00000001 007F0015 )
  370:  			Wait  6`
  37C:  		EndIf
  384:  		Call  GetActorVar   ( .Actor:Self 00000005 *Var0 )
  39C:  		Call  ActorExists   ( *Var0 *Var1 )
  3B0:  		If  *Var1  ==  .True
  3C0:  			Call  SetAnimation  ( .Actor:Self 00000001 007F001C )
  3D8:  			Exec  $Script_SpitRockMiss *VarA
  3E8:  			Wait  4`
  3F4:  			Call  SetAnimation  ( .Actor:Self 00000001 007F0015 )
  40C:  			Wait  6`
  418:  		EndIf
  420:  		Call  GetActorVar   ( .Actor:Self 00000006 *Var0 )
  438:  		Call  ActorExists   ( *Var0 *Var1 )
  44C:  		If  *Var1  ==  .True
  45C:  			Call  SetAnimation  ( .Actor:Self 00000001 007F001C )
  474:  			Exec  $Script_SpitRockMiss *VarA
  484:  			Wait  4`
  490:  			Call  SetAnimation  ( .Actor:Self 00000001 007F0015 )
  4A8:  			Wait  6`
  4B4:  		EndIf
  4BC:  		Label  1
  4C8:  		DoesScriptExist  *VarA *Var0
  4D8:  		If  *Var0  ==  00000001
  4E8:  			Wait  1`
  4F4:  			Goto  1
  500:  		EndIf
  508:  		If  *Var9  ==  00000005
  518:  			Call  EnemyTestTarget   ( .Actor:Self *Var0 ~Flags:DamageType:TriggerLucky 00000000 00000000 00000000 )
  53C:  		EndIf
  544:  		Wait  30`
  550:  		Call  EnableIdleScript  ( .Actor:Self 00000001 )
  564:  		Call  UseIdleAnimation  ( .Actor:Self .True )
  578:  		Return
  580:  EndSwitch
  588:  Call  GetActorVar   ( .Actor:Self 00000004 *Var0 )
  5A0:  Call  ActorExists   ( *Var0 *Var1 )
  5B4:  If  *Var1  ==  .True
  5C4:  	Call  SetAnimation  ( .Actor:Self 00000001 007F001C )
  5DC:  	Exec  $Script_SpitRock *VarA
  5EC:  	Wait  4`
  5F8:  	Call  SetAnimation  ( .Actor:Self 00000001 007F0015 )
  610:  	Wait  6`
  61C:  EndIf
  624:  Call  GetActorVar   ( .Actor:Self 00000005 *Var0 )
  63C:  Call  ActorExists   ( *Var0 *Var1 )
  650:  If  *Var1  ==  .True
  660:  	Call  SetAnimation  ( .Actor:Self 00000001 007F001C )
  678:  	Exec  $Script_SpitRock *VarA
  688:  	Wait  4`
  694:  	Call  SetAnimation  ( .Actor:Self 00000001 007F0015 )
  6AC:  	Wait  6`
  6B8:  EndIf
  6C0:  Call  GetActorVar   ( .Actor:Self 00000006 *Var0 )
  6D8:  Call  ActorExists   ( *Var0 *Var1 )
  6EC:  If  *Var1  ==  .True
  6FC:  	Call  SetAnimation  ( .Actor:Self 00000001 007F001C )
  714:  	Exec  $Script_SpitRock *VarA
  724:  	Wait  4`
  730:  	Call  SetAnimation  ( .Actor:Self 00000001 007F0015 )
  748:  	Wait  6`
  754:  EndIf
  75C:  Label  4
  768:  DoesScriptExist  *VarA *Var0
  778:  If  *Var0  ==  00000001
  788:  	Wait  1`
  794:  	Goto  4
  7A0:  EndIf
  7A8:  Call  EnableIdleScript  ( .Actor:Self 00000001 )
  7BC:  Call  UseIdleAnimation  ( .Actor:Self .True )
  7D0:  Return
  7D8:  End
}

#new:Script $Script_HealSelf
{
    0:  Set   *Flag[00]  .False
   10:  Call  GetActorVar   ( .Actor:Self 00000001 *Var0 )
   28:  Switch  *Var0
   34:  	CaseOR  ==  00000004
   40:  	CaseOR  ==  00000005
   4C:  		Call  GetActorVar   ( .Actor:Self 00000002 *VarA )
   64:  		Call  GetActorVar   ( .Actor:Self 00000003 *VarB )
   7C:  		Call  ActorExists   ( *VarA *Var0 )
   90:  		If  *Var0  ==  .True
   A0:  			Set   *Flag[00]  .True
   B0:  		EndIf
   B8:  	EndCaseGroup
   C0:  EndSwitch
   C8:  Call  UseIdleAnimation  ( .Actor:Self .False )
   DC:  Call  EnableIdleScript  ( .Actor:Self 00000000 )
   F0:  If  *Flag[00]  ==  .True
  100:  	Call  UseIdleAnimation  ( *VarA .False )
  114:  	Call  EnableIdleScript  ( *VarA 00000000 )
  128:  	Call  UseIdleAnimation  ( *VarB .False )
  13C:  	Call  EnableIdleScript  ( *VarB 00000000 )
  150:  EndIf
  158:  Call  UseBattleCamPreset    ( 00000013 )
  168:  Call  SetBattleCamZoom      (  350` )
  178:  Call  SetBattleCamOffsetZ   (  50` )
  188:  Call  GetActorFlags ( .Actor:Self *Var0 )
  19C:  If  *Var0  &  00000200
  1AC:  	Call  SetBattleCamTarget    (  70`  41`  5` )
  1C4:  Else
  1CC:  	Call  SetBattleCamTarget    (  70`  0`  5` )
  1E4:  EndIf
  1EC:  Call  MoveBattleCamOver (  20` )
  1FC:  Wait  20`
  208:  Call  SetAnimation      ( .Actor:Self 00000001 007F001D )
  220:  If  *Flag[00]  ==  .True
  230:  	Call  SetAnimation  ( *VarA 00000001 007F001D )
  248:  	Call  SetAnimation  ( *VarB 00000001 007F001D )
  260:  EndIf
  268:  Wait  20`
  274:  Thread
  27C:  	Wait  5`
  288:  	Call  PlaySoundAtActor  ( .Actor:Self 0000206D )
  29C:  	Call  PlaySoundAtActor  ( .Actor:Self 00000214 )
  2B0:  	Wait  30`
  2BC:  	Call  PlaySoundAtActor  ( .Actor:Self 0000025C )
  2D0:  EndThread
  2D8:  If  *Flag[00]  ==  .True
  2E8:  	Thread
  2F0:  		Wait  5`
  2FC:  		Call  PlaySoundAtActor  ( *VarA 0000206D )
  310:  		Call  PlaySoundAtActor  ( *VarA 00000214 )
  324:  		Wait  30`
  330:  		Call  PlaySoundAtActor  ( *VarA 0000025C )
  344:  	EndThread
  34C:  	Thread
  354:  		Wait  5`
  360:  		Call  PlaySoundAtActor  ( *VarB 0000206D )
  374:  		Call  PlaySoundAtActor  ( *VarB 00000214 )
  388:  		Wait  30`
  394:  		Call  PlaySoundAtActor  ( *VarB 0000025C )
  3A8:  	EndThread
  3B0:  EndIf
  3B8:  If  *Flag[00]  ==  .False
  3C8:  	Thread
  3D0:  		Call  8026BF48  ( 00000001 )
  3E0:  		Call  HealActor ( .Actor:Self 00000014 .False )
  3F8:  		Call  8026BF48  ( 00000000 )
  408:  	EndThread
  410:  Else
  418:  	Thread
  420:  		Call  8026BF48  ( 00000001 )
  430:  		Call  HealActor ( .Actor:Self 00000014 .True )
  448:  		Call  8026BF48  ( 00000000 )
  458:  	EndThread
  460:  	Thread
  468:  		Call  8026BF48  ( 00000001 )
  478:  		Call  HealActor ( *VarA 00000014 .True )
  490:  		Call  8026BF48  ( 00000000 )
  4A0:  	EndThread
  4A8:  	Thread
  4B0:  		Call  8026BF48  ( 00000001 )
  4C0:  		Call  HealActor ( *VarB 00000014 .True )
  4D8:  		Call  8026BF48  ( 00000000 )
  4E8:  	EndThread
  4F0:  	Call  SetAnimation  ( *VarA 00000001 007F0009 )
  508:  	Call  SetAnimation  ( *VarB 00000001 007F0009 )
  520:  EndIf
  528:  Call  WaitForBuffDone ( )
  534:  Call  UseBattleCamPreset    ( 00000002 )
  544:  Call  EnableIdleScript      ( .Actor:Self 00000001 )
  558:  Call  UseIdleAnimation      ( .Actor:Self .True )
  56C:  If  *Flag[00]  ==  .True
  57C:  	Call  EnableIdleScript  ( *VarA 00000001 )
  590:  	Call  UseIdleAnimation  ( *VarA .True )
  5A4:  	Call  EnableIdleScript  ( *VarA 00000001 )
  5B8:  	Call  UseIdleAnimation  ( *VarA .True )
  5CC:  EndIf
  5D4:  Return
  5DC:  End
}

PADDING: 80220474 to 80220480 (00668BC4 to 00668BD0)
00000000 00000000 00000000

#new:IdleAnimations $IdleAnimations_80220480
{
	.Status:Normal    007F000A
	.Status:End
}

#new:IdleAnimations $IdleAnimations_8022048C
{
	.Status:Normal    007F000B
	.Status:End
}

#new:IdleAnimations $IdleAnimations_80220498
{
	.Status:Normal    007F000C
	.Status:End
}

#new:DefenseTable $DefenseTable_802204A4
{
	.Element:Normal 00000000
	.Element:Fire   00000000
	.Element:Ice    00000063
	.Element:End
}

#new:StatusTable $StatusTable_802204C0
{
	.Status:Normal      0`
	.Status:Default     0`
	.Status:Sleep       0`
	.Status:Poison      0`
	.Status:Frozen      0`
	.Status:Dizzy       0`
	.Status:Fear        0`
	.Status:Static      0`
	.Status:Paralyze    0`
	.Status:Shrink      0`
	.Status:Stop        0`
	.Status:DefaultTurnMod    0`
	.Status:SleepTurnMod      0`
	.Status:PoisonTurnMod     0`
	.Status:FrozenTurnMod     0`
	.Status:DizzyTurnMod      0`
	.Status:FearTurnMod       0`
	.Status:StaticTurnMod     0`
	.Status:ParalyzeTurnMod   0`
	.Status:ShrinkTurnMod     0`
	.Status:StopTurnMod       0`
	.Status:End
}

#new:PartsTable $PartsTable_8022056C
{
	00020000 01000000 001000FF $IdleAnimations_80220480 $DefenseTable_802204A4 00000008 00000000 00F60000 00000000
	80800021 02003200 00DE00FF 00000000 $DefenseTable_802204A4 00000008 00000000 00F60000 00000000
}

#new:PartsTable $PartsTable_802205B4
{
	00020000 01000000 001000FF $IdleAnimations_8022048C $DefenseTable_802204A4 00000008 00000000 00F60000 00000000
	80800021 02003200 00DE00FF 00000000 $DefenseTable_802204A4 00000008 00000000 00F60000 00000000
}

#new:PartsTable $PartsTable_802205FC
{
	00020000 01000000 001000FF $IdleAnimations_80220498 $DefenseTable_802204A4 00000008 00000000 00F60000 00000000
	80800021 02003200 00DE00FF 00000000 $DefenseTable_802204A4 00000008 00000000 00F60000 00000000
}

#new:Actor $CrystalBitA
{
	% stats
	[Index]        BFb
	[Level]         0`b
	[MaxHP]         1`b
	[Coins]         0`b
	[Flags]       00200200
	[StatusTable] $StatusTable_802204C0
	% ai
	[PartsCount]    2`s
	[PartsTable]  $PartsTable_8022056C
	[Script]      $Script_Init_802206BC
	% move effectiveness
	[Escape]        0`b
	[Item]          0`b
	[AirLift]       0`b
	[Hurricane]     0`b % Bow's "Spook" as well
	[UpAndAway]     0`b
	[PowerBounce]  90`b
	[SpinSmash]     0`b % weight (0-4)
	% ui positions
	[Size]         18`b  15`b % width height
	[HealthBar]     0`b   0`b % dx dy
	[StatusTurn]  -10`b  20`b % dx dy
	[StatusIcon]   10`b  20`b % dx dy
}

#new:Actor $CrystalBitB
{
	% stats
	[Index]        BFb
	[Level]         0`b
	[MaxHP]         1`b
	[Coins]         0`b
	[Flags]       00200200
	[StatusTable] $StatusTable_802204C0
	% ai
	[PartsCount]    2`s
	[PartsTable]  $PartsTable_802205B4
	[Script]      $Script_Init_802206BC
	% move effectiveness
	[Escape]        0`b
	[Item]          0`b
	[AirLift]       0`b
	[Hurricane]     0`b % Bow's "Spook" as well
	[UpAndAway]     0`b
	[PowerBounce]  90`b
	[SpinSmash]     0`b % weight (0-4)
	% ui positions
	[Size]         18`b  15`b % width height
	[HealthBar]     0`b   0`b % dx dy
	[StatusTurn]  -10`b  20`b % dx dy
	[StatusIcon]   10`b  20`b % dx dy
}

#new:Actor $CrystalBitC
{
	% stats
	[Index]        BFb
	[Level]         0`b
	[MaxHP]         1`b
	[Coins]         0`b
	[Flags]       00200200
	[StatusTable] $StatusTable_802204C0
	% ai
	[PartsCount]    2`s
	[PartsTable]  $PartsTable_802205FC
	[Script]      $Script_Init_802206BC
	% move effectiveness
	[Escape]        0`b
	[Item]          0`b
	[AirLift]       0`b
	[Hurricane]     0`b % Bow's "Spook" as well
	[UpAndAway]     0`b
	[PowerBounce]  90`b
	[SpinSmash]     0`b % weight (0-4)
	% ui positions
	[Size]         18`b  15`b % width height
	[HealthBar]     0`b   0`b % dx dy
	[StatusTurn]  -10`b  20`b % dx dy
	[StatusIcon]   10`b  20`b % dx dy
}

#new:Script $Script_Init_802206BC
{
    0:  Call  BindTakeTurn  ( .Actor:Self $Script_TakeTurn_802211C0 )
   14:  Call  BindIdle      ( .Actor:Self $Script_Idle_8022071C )
   28:  Call  BindHandleEvent   ( .Actor:Self $Script_HandleEvent_802207C8 )
   3C:  Call  BindNextTurn  ( .Actor:Self $Script_NextTurn_802211D0 )
   50:  Return
   58:  End
}

#new:Script $Script_Idle_8022071C
{
    0:  Call  PlayEffect    ( ~FX:EmitterVolume:Snowflakes 00000000 FFFFFC18 00000000 00000018 00000018 *Fixed[1.0] 00000005 00000000 00000000 00000000 00000000 00000000 )
   44:  Call  SetActorVar   ( .Actor:Self 00000000 *VarF )
   5C:  ChildThread
   64:  	Call  $Function_802185D0    ( *VarF )
   74:  EndChildThread
   7C:  Loop
   88:  	Wait  1`
   94:  EndLoop
   9C:  Return
   A4:  End
}

#new:Script $Script_HandleEvent_802207C8
{
    0:  Call  UseIdleAnimation  ( .Actor:Self .False )
   14:  Call  GetLastEvent      ( .Actor:Self *Var0 )
   28:  Switch  *Var0
   34:  	CaseOR  ==  .Event:HitCombo % 9
   40:  	CaseOR  ==  .Event:Hit % A
   4C:  		SetConst  *Var0  00000001
   5C:  		Call  GetAnimation  ( .Actor:Self 00000001 *Var1 )
   74:  		ExecWait  DoNormalHit
   80:  	EndCaseGroup
   88:  	Case  ==  .Event:BurnHit % E
   94:  		Call  GetOwnerID    ( *Var0 )
   A4:  		Call  GetActorVar   ( .Actor:Enemy0 00000004 *Var3 )
   BC:  		If  *Var0  ==  *Var3
   CC:  			SetConst  *Var0  00000001
   DC:  			SetConst  *Var1  007F0022
   EC:  			SetConst  *Var2  FFFFFFFF
   FC:  		EndIf
  104:  		Call  GetActorVar   ( .Actor:Enemy0 00000005 *Var3 )
  11C:  		If  *Var0  ==  *Var3
  12C:  			SetConst  *Var0  00000001
  13C:  			SetConst  *Var1  007F0023
  14C:  			SetConst  *Var2  FFFFFFFF
  15C:  		EndIf
  164:  		Call  GetActorVar   ( .Actor:Enemy0 00000006 *Var3 )
  17C:  		If  *Var0  ==  *Var3
  18C:  			SetConst  *Var0  00000001
  19C:  			SetConst  *Var1  007F0024
  1AC:  			SetConst  *Var2  FFFFFFFF
  1BC:  		EndIf
  1C4:  		ExecWait  DoBurnHit
  1D0:  	CaseOR  ==  00000017 % 17
  1DC:  	CaseOR  ==  .Event:Immune % 19
  1E8:  	CaseOR  ==  .Event:AirLiftFailed % 1F
  1F4:  		SetConst  *Var0  00000001
  204:  		Call  GetAnimation  ( .Actor:Self 00000001 *Var1 )
  21C:  		ExecWait  DoImmune
  228:  	EndCaseGroup
  230:  	Case  ==  .Event:Death % 20
  23C:  		SetConst  *Var0  00000001
  24C:  		Call  GetAnimation  ( .Actor:Self 00000001 *Var1 )
  264:  		ExecWait  DoNormalHit
  270:  		Call  8027D32C      ( FFFFFF81 )
  280:  		Call  PlaySoundAtActor      ( .Actor:Self 00000301 )
  294:  		Call  SetActorJumpGravity   ( .Actor:Self *Fixed[0.8] )
  2A8:  		Call  GetActorPos   ( .Actor:Self *Var1 *Var2 *Var3 )
  2C4:  		Call  SetGoalPos    ( .Actor:Self *Var1  0` *Var3 )
  2E0:  		Call  JumpToGoal    ( .Actor:Self  15` .False .True .False )
  300:  		Call  GetOwnerID    ( *Var0 )
  310:  		Call  GetActorVar   ( .Actor:Enemy0 00000004 *Var1 )
  328:  		If  *Var0  ==  *Var1
  338:  			Call  SetAnimation  ( .Actor:Self 00000001 007F0005 )
  350:  		EndIf
  358:  		Call  GetActorVar   ( .Actor:Enemy0 00000005 *Var1 )
  370:  		If  *Var0  ==  *Var1
  380:  			Call  SetAnimation  ( .Actor:Self 00000001 007F0006 )
  398:  		EndIf
  3A0:  		Call  GetActorVar   ( .Actor:Enemy0 00000006 *Var1 )
  3B8:  		If  *Var0  ==  *Var1
  3C8:  			Call  SetAnimation  ( .Actor:Self 00000001 007F0007 )
  3E0:  		EndIf
  3E8:  		Call  SetActorJumpGravity   ( .Actor:Self *Fixed[1.2] )
  3FC:  		Call  RandInt       ( 00000168 *Var0 )
  410:  		Call  GetActorPos   ( .Actor:Self *Var1 *Var2 *Var3 )
  42C:  		Call  AddVectorPolar    ( *Var1 *Var3 *Fixed[30.0] *Var0 )
  448:  		Call  SetGoalPos    ( .Actor:Self *Var1  0` *Var3 )
  464:  		Call  JumpToGoal    ( .Actor:Self  15` .False .True .False )
  484:  		Call  AddVectorPolar    ( *Var1 *Var3 *Fixed[20.0] *Var0 )
  4A0:  		Call  SetGoalPos    ( .Actor:Self *Var1  0` *Var3 )
  4BC:  		Call  JumpToGoal    ( .Actor:Self  10` .False .True .False )
  4DC:  		Call  AddVectorPolar    ( *Var1 *Var3 *Fixed[10.0] *Var0 )
  4F8:  		Call  SetGoalPos    ( .Actor:Self *Var1  0` *Var3 )
  514:  		Call  JumpToGoal    ( .Actor:Self  5` .False .True .False )
  534:  		Set   *Var0  000000FF
  544:  		Loop  00000014
  550:  			Sub   *Var0  0000000C
  560:  			Call  SetPartAlpha  ( .Actor:Self 00000001 *Var0 )
  578:  			Wait  1`
  584:  		EndLoop
  58C:  		Call  GetActorVar   ( .Actor:Self 00000000 *Var0 )
  5A4:  		Call  RemoveEffect  ( *Var0 )
  5B4:  		Call  RemoveActor   ( .Actor:Self )
  5C4:  		Return
  5CC:  	Case  ==  .Event:BurnDeath % 24
  5D8:  		Call  GetOwnerID    ( *Var0 )
  5E8:  		Call  GetActorVar   ( .Actor:Enemy0 00000004 *Var3 )
  600:  		If  *Var0  ==  *Var3
  610:  			SetConst  *Var0  00000001
  620:  			SetConst  *Var1  007F0022
  630:  			SetConst  *Var2  FFFFFFFF
  640:  		EndIf
  648:  		Call  GetActorVar   ( .Actor:Enemy0 00000005 *Var3 )
  660:  		If  *Var0  ==  *Var3
  670:  			SetConst  *Var0  00000001
  680:  			SetConst  *Var1  007F0023
  690:  			SetConst  *Var2  FFFFFFFF
  6A0:  		EndIf
  6A8:  		Call  GetActorVar   ( .Actor:Enemy0 00000006 *Var3 )
  6C0:  		If  *Var0  ==  *Var3
  6D0:  			SetConst  *Var0  00000001
  6E0:  			SetConst  *Var1  007F0024
  6F0:  			SetConst  *Var2  FFFFFFFF
  700:  		EndIf
  708:  		ExecWait  DoBurnHit
  714:  		Call  8027D32C      ( FFFFFF81 )
  724:  		Call  PlaySoundAtActor  ( .Actor:Self 00000301 )
  738:  		Call  SetActorJumpGravity   ( .Actor:Self *Fixed[0.8] )
  74C:  		Call  GetActorPos   ( .Actor:Self *Var1 *Var2 *Var3 )
  768:  		Call  SetGoalPos    ( .Actor:Self *Var1  0` *Var3 )
  784:  		Call  JumpToGoal    ( .Actor:Self  15` .False .True .False )
  7A4:  		Call  SetActorJumpGravity   ( .Actor:Self *Fixed[1.2] )
  7B8:  		Call  RandInt       ( 00000168 *Var0 )
  7CC:  		Call  GetActorPos   ( .Actor:Self *Var1 *Var2 *Var3 )
  7E8:  		Call  AddVectorPolar    ( *Var1 *Var3 *Fixed[30.0] *Var0 )
  804:  		Call  SetGoalPos    ( .Actor:Self *Var1  0` *Var3 )
  820:  		Call  JumpToGoal    ( .Actor:Self  15` .False .True .False )
  840:  		Call  AddVectorPolar    ( *Var1 *Var3 *Fixed[20.0] *Var0 )
  85C:  		Call  SetGoalPos    ( .Actor:Self *Var1  0` *Var3 )
  878:  		Call  JumpToGoal    ( .Actor:Self  10` .False .True .False )
  898:  		Call  AddVectorPolar    ( *Var1 *Var3 *Fixed[10.0] *Var0 )
  8B4:  		Call  SetGoalPos    ( .Actor:Self *Var1  0` *Var3 )
  8D0:  		Call  JumpToGoal    ( .Actor:Self  5` .False .True .False )
  8F0:  		Set   *Var0  000000FF
  900:  		Loop  00000014
  90C:  			Sub   *Var0  0000000C
  91C:  			Call  SetPartAlpha  ( .Actor:Self 00000001 *Var0 )
  934:  			Wait  1`
  940:  		EndLoop
  948:  		Call  GetActorVar   ( .Actor:Self 00000000 *Var0 )
  960:  		Call  RemoveEffect  ( *Var0 )
  970:  		Call  RemoveActor   ( .Actor:Self )
  980:  		Return
  988:  	Case  ==  .Event:BlowAway % 16
  994:  		Call  GetActorVar   ( .Actor:Self 00000000 *Var0 )
  9AC:  		Call  RemoveEffect  ( *Var0 )
  9BC:  		Return
  9C4:  	Default
  9CC:  EndSwitch
  9D4:  Call  UseIdleAnimation  ( .Actor:Self .True )
  9E8:  Return
  9F0:  End
}

#new:Script $Script_TakeTurn_802211C0
{
    0:  Return
    8:  End
}

#new:Script $Script_NextTurn_802211D0
{
    0:  Return
    8:  End
}

% Origin: HEURISTIC
#new:Unknown $???_802211E0
{
	00000000 00000000 00000000 00000000
}

#new:Script $Script_802211F0
{
    0:  Call  $Function_802188B8 ( )
    C:  Loop
   18:  	Wait  1`
   24:  EndLoop
   2C:  Return
   34:  End
}

% Origin: HEURISTIC
#new:Script $Script_8022122C
{
    0:  Set   *VarA  *Var0
   10:  Label  0
   1C:  Call  RandInt   ( 0000001E *Var0 )
   30:  Add   *Var0  0000001E
   40:  Wait  *Var0
   4C:  Set   *Var1  00000000
   5C:  Loop  0000000A
   68:  	Add   *Var1  00000024
   78:  	Call  RotateModel   ( *VarA *Var1 00000000 00000001 00000000 )
   98:  	Wait  1`
   A4:  EndLoop
   AC:  Goto  0
   B8:  Return
   C0:  End
}

% Origin: HEURISTIC
#new:Script $Script_802212F4
{
    0:  Set   *VarA  *Var0
   10:  Set   *VarB  *Var1
   20:  Exec  $Script_8022122C
   2C:  Set   *Var7  00000000
   3C:  Label  0
   48:  Add   *Var7  00000004
   58:  If  *Var7  >  00000E0F
   68:  	Sub   *Var7  00000E10
   78:  EndIf
   80:  Call  $Function_802188DC    ( *Var7 *Var0 *Var1 *Var2 )
   9C:  Call  TranslateModel        ( *VarA *Var0 *Var1 *Var2 )
   B8:  Wait  1`
   C4:  Goto  0
   D0:  Return
   D8:  End
}

% Origin: HEURISTIC
#new:Script $Script_802213D4
{
    0:  Set   *VarA  *Var0
   10:  Set   *Var7  00000000
   20:  Label  0
   2C:  Add   *Var7  00000004
   3C:  If  *Var7  >  00000E0F
   4C:  	Sub   *Var7  00000E10
   5C:  EndIf
   64:  Call  $Function_802188DC    ( *Var7 *Var0 *Var1 *Var2 )
   80:  Call  TranslateModel        ( *VarA *Var0 *Var1 *Var2 )
   9C:  Wait  1`
   A8:  Goto  0
   B4:  Return
   BC:  End
}

#new:Script $Script_BeforeBattle_80221498
{
    0:  Call  SetSpriteShading  ( FFFFFFFF )
   10:  Exec  $Script_802211F0
   1C:  Return
   24:  End
}

#new:Script $Script_AfterBattle_802214C4
{
    0:  Return
    8:  End
}

#new:Stage $Stage_802214D4
{
	$ASCII_80221608  % sam_tex
	$ASCII_802215F8  % sam_bt04_shape
	$ASCII_802215E8  % sam_bt04_hit
	$Script_BeforeBattle_80221498
	$Script_AfterBattle_802214C4
	$ASCII_802215E0  % sam_bg
	00000000
	00000000
	00000000
	00000000
}

PADDING: 802214FC to 80221500 (00669C4C to 00669C50)
00000000

#new:Vector3D $Vector3D_80221500
{
	70` 0` 5`
}

#new:Vector3D $Vector3D_8022150C
{
	10` 35` -5`
}

#new:Vector3D $Vector3D_80221518
{
	112` 52` -5`
}

#new:Vector3D $Vector3D_80221524
{
	42` 85` -10`
}

#new:Formation $Formation_00
{
	$CrystalKing $Vector3D_80221500 0000000A 00000000 00000000 00000000 00000000
	$CrystalBitA $Vector3D_8022150C 00000009 00000000 00000000 00000000 00000000
	$CrystalBitB $Vector3D_80221518 00000008 00000000 00000000 00000000 00000000
	$CrystalBitC $Vector3D_80221524 00000007 00000000 00000000 00000000 00000000
}

#new:FormationTable $FormationTable
{
	$SJIS_80221610 00000004 $Formation_00 $Stage_802214D4 00000000
	00000000 00000000 00000000 00000000 00000000
}

#new:StageTable $StageTable
{
	$ASCII_8022161C $Stage_802214D4
	00000000 00000000
}

PADDING: 802215D8 to 802215E0 (00669D28 to 00669D30)
00000000 00000000

#new:ASCII $ASCII_802215E0
{
	"sam_bg"
}

#new:ASCII $ASCII_802215E8
{
	"sam_bt04_hit"
}

#new:ASCII $ASCII_802215F8
{
	"sam_bt04_shape"
}

#new:ASCII $ASCII_80221608
{
	"sam_tex"
}

#new:SJIS $SJIS_80221610
{
	パラレラー % pararera-
}

#new:ASCII $ASCII_8022161C
{
	"sam_04"
}

PADDING: 80221624 to 80221630 (00669D74 to 00669D80)
00000000 00000000 00000000

