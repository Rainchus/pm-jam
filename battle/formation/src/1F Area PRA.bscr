% Script File: 1F Area PRA.bscr
% Decoded from: 648E10 to 660750 (1F Area PRA)

#new:Function $Function_80218000
{
    0:  ADDIU     SP, SP, FFD8
    4:  SW        S1, 14 (SP)
    8:  COPY      S1, A0
    C:  SW        RA, 20 (SP)
   10:  SW        S3, 1C (SP)
   14:  SW        S2, 18 (SP)
   18:  SW        S0, 10 (SP)
   1C:  LW        S0, C (S1)
   20:  LW        A1, 0 (S0)
   24:  JAL       ~Func:get_variable
   28:  ADDIU     S0, S0, 4
   2C:  LW        A1, 0 (S0)
   30:  ADDIU     S0, S0, 4
   34:  COPY      A0, S1
   38:  JAL       ~Func:get_variable
   3C:  COPY      S3, V0
   40:  LW        A1, 0 (S0)
   44:  ADDIU     S0, S0, 4
   48:  COPY      A0, S1
   4C:  JAL       ~Func:get_variable
   50:  COPY      S2, V0
   54:  COPY      A0, S1
   58:  LW        A1, 0 (S0)
   5C:  JAL       ~Func:get_variable
   60:  COPY      S0, V0
   64:  LW        A0, 148 (S1)
   68:  JAL       ~Func:get_actor
   6C:  COPY      S1, V0
   70:  COPY      V1, V0
   74:  LW        V0, 8 (V1)
   78:  LBU       V0, 24 (V0)
   7C:  LW        A0, 8 (V1)
   80:  SUBU      S3, S3, V0
   84:  SB        S3, 194 (V1)
   88:  LBU       V0, 25 (A0)
   8C:  SUBU      S2, S2, V0
   90:  SB        S2, 195 (V1)
   94:  LBU       V0, 26 (A0)
   98:  SUBU      S0, S0, V0
   9C:  SB        S0, 196 (V1)
   A0:  LBU       A0, 27 (A0)
   A4:  SUBU      S1, S1, A0
   A8:  SB        S1, 197 (V1)
   AC:  LW        RA, 20 (SP)
   B0:  LW        S3, 1C (SP)
   B4:  LW        S2, 18 (SP)
   B8:  LW        S1, 14 (SP)
   BC:  LW        S0, 10 (SP)
   C0:  LI        V0, 2
   C4:  JR        RA
   C8:  ADDIU     SP, SP, 28
}

#new:Function $Function_802180CC
{
    0:  ADDIU     SP, SP, FFD8
    4:  SW        S1, 14 (SP)
    8:  COPY      S1, A0
    C:  SW        RA, 20 (SP)
   10:  SW        S3, 1C (SP)
   14:  SW        S2, 18 (SP)
   18:  SW        S0, 10 (SP)
   1C:  LW        S0, C (S1)
   20:  LW        A1, 0 (S0)
   24:  JAL       ~Func:get_variable
   28:  ADDIU     S0, S0, 4
   2C:  LW        A1, 0 (S0)
   30:  ADDIU     S0, S0, 4
   34:  COPY      A0, S1
   38:  JAL       ~Func:get_variable
   3C:  COPY      S3, V0
   40:  LW        A1, 0 (S0)
   44:  ADDIU     S0, S0, 4
   48:  COPY      A0, S1
   4C:  JAL       ~Func:get_variable
   50:  COPY      S2, V0
   54:  COPY      A0, S1
   58:  LW        A1, 0 (S0)
   5C:  JAL       ~Func:get_variable
   60:  COPY      S0, V0
   64:  MTC1      S3, F12
   68:  NOP
   6C:  CVT.S.W   F12, F12
   70:  MTC1      S2, F14
   74:  NOP
   78:  CVT.S.W   F14, F14
   7C:  MTC1      S0, F0
   80:  NOP
   84:  CVT.S.W   F0, F0
   88:  MFC1      A2, F0
   8C:  JAL       802D7460
   90:  COPY      A3, V0
   94:  LW        RA, 20 (SP)
   98:  LW        S3, 1C (SP)
   9C:  LW        S2, 18 (SP)
   A0:  LW        S1, 14 (SP)
   A4:  LW        S0, 10 (SP)
   A8:  LI        V0, 2
   AC:  JR        RA
   B0:  ADDIU     SP, SP, 28
}

#new:Function $Function_80218180
{
    0:  ADDIU     SP, SP, FFD8
    4:  SW        S1, 14 (SP)
    8:  COPY      S1, A0
    C:  SW        RA, 20 (SP)
   10:  SW        S3, 1C (SP)
   14:  SW        S2, 18 (SP)
   18:  SW        S0, 10 (SP)
   1C:  LW        S0, C (S1)
   20:  LW        A1, 0 (S0)
   24:  JAL       ~Func:get_variable
   28:  ADDIU     S0, S0, 4
   2C:  LW        A1, 0 (S0)
   30:  ADDIU     S0, S0, 4
   34:  COPY      A0, S1
   38:  JAL       ~Func:get_variable
   3C:  COPY      S3, V0
   40:  LW        A1, 0 (S0)
   44:  ADDIU     S0, S0, 4
   48:  COPY      A0, S1
   4C:  JAL       ~Func:get_variable
   50:  COPY      S2, V0
   54:  COPY      A0, S1
   58:  LW        A1, 0 (S0)
   5C:  JAL       ~Func:get_variable
   60:  COPY      S0, V0
   64:  MTC1      S3, F12
   68:  NOP
   6C:  CVT.S.W   F12, F12
   70:  MTC1      S2, F14
   74:  NOP
   78:  CVT.S.W   F14, F14
   7C:  MTC1      S0, F0
   80:  NOP
   84:  CVT.S.W   F0, F0
   88:  MFC1      A2, F0
   8C:  JAL       802D74C0
   90:  COPY      A3, V0
   94:  LW        RA, 20 (SP)
   98:  LW        S3, 1C (SP)
   9C:  LW        S2, 18 (SP)
   A0:  LW        S1, 14 (SP)
   A4:  LW        S0, 10 (SP)
   A8:  LI        V0, 2
   AC:  JR        RA
   B0:  ADDIU     SP, SP, 28
}

PADDING: 80218234 to 80218240 (00649044 to 00649050)
00000000 00000000 00000000

% Origin: HEURISTIC
#new:Function $Function_80218240
{
    0:  ADDIU     SP, SP, FFD0
    4:  SW        S1, 14 (SP)
    8:  COPY      S1, A0
    C:  SW        RA, 1C (SP)
   10:  SW        S2, 18 (SP)
   14:  SW        S0, 10 (SP)
   18:  SDC1      F22, 28 (SP)
   1C:  SDC1      F20, 20 (SP)
   20:  LW        S0, C (S1)
   24:  LW        A1, 0 (S0)
   28:  JAL       ~Func:get_variable
   2C:  ADDIU     S0, S0, 4
   30:  LW        A1, 0 (S0)
   34:  ADDIU     S0, S0, 4
   38:  COPY      A0, S1
   3C:  JAL       ~Func:get_variable
   40:  COPY      S2, V0
   44:  LW        A1, 0 (S0)
   48:  ADDIU     S0, S0, 4
   4C:  MTC1      V0, F22
   50:  NOP
   54:  CVT.S.W   F22, F22
   58:  JAL       ~Func:get_variable
   5C:  COPY      A0, S1
   60:  LW        A1, 0 (S0)
   64:  MTC1      V0, F20
   68:  NOP
   6C:  CVT.S.W   F20, F20
   70:  JAL       ~Func:get_variable
   74:  COPY      A0, S1
   78:  LW        V1, C (S2)
   7C:  SWC1      F22, 38 (V1)
   80:  LW        V1, C (S2)
   84:  SWC1      F20, 3C (V1)
   88:  LW        V1, C (S2)
   8C:  MTC1      V0, F0
   90:  NOP
   94:  CVT.S.W   F0, F0
   98:  SWC1      F0, 40 (V1)
   9C:  LW        RA, 1C (SP)
   A0:  LW        S2, 18 (SP)
   A4:  LW        S1, 14 (SP)
   A8:  LW        S0, 10 (SP)
   AC:  LDC1      F22, 28 (SP)
   B0:  LDC1      F20, 20 (SP)
   B4:  LI        V0, 2
   B8:  JR        RA
   BC:  ADDIU     SP, SP, 30
}

% Origin: HINT
#new:Function $Function_80218300
{
    0:  ADDIU     SP, SP, FFA0
    4:  SW        S1, 24 (SP)
    8:  COPY      S1, A0
    C:  SW        RA, 28 (SP)
   10:  SW        S0, 20 (SP)
   14:  SDC1      F30, 58 (SP)
   18:  SDC1      F28, 50 (SP)
   1C:  SDC1      F26, 48 (SP)
   20:  SDC1      F24, 40 (SP)
   24:  SDC1      F22, 38 (SP)
   28:  SDC1      F20, 30 (SP)
   2C:  LW        S0, C (S1)
   30:  LW        A1, 0 (S0)
   34:  JAL       ~Func:get_float_variable
   38:  ADDIU     S0, S0, 4
   3C:  LW        A1, 0 (S0)
   40:  ADDIU     S0, S0, 4
   44:  COPY      A0, S1
   48:  JAL       ~Func:get_float_variable
   4C:  MOV.S     F30, F0
   50:  LW        A1, 0 (S0)
   54:  ADDIU     S0, S0, 4
   58:  COPY      A0, S1
   5C:  JAL       ~Func:get_float_variable
   60:  MOV.S     F20, F0
   64:  LW        A1, 0 (S0)
   68:  ADDIU     S0, S0, 4
   6C:  COPY      A0, S1
   70:  JAL       ~Func:get_float_variable
   74:  MOV.S     F28, F0
   78:  LW        A1, 0 (S0)
   7C:  ADDIU     S0, S0, 4
   80:  COPY      A0, S1
   84:  JAL       ~Func:get_float_variable
   88:  MOV.S     F26, F0
   8C:  LW        A1, 0 (S0)
   90:  ADDIU     S0, S0, 4
   94:  COPY      A0, S1
   98:  JAL       ~Func:get_float_variable
   9C:  MOV.S     F24, F0
   A0:  COPY      A0, S1
   A4:  LW        A1, 0 (S0)
   A8:  JAL       ~Func:get_variable
   AC:  MOV.S     F22, F0
   B0:  LW        A0, 148 (S1)
   B4:  JAL       ~Func:get_actor
   B8:  COPY      S0, V0
   BC:  CVT.D.S   F20, F20
   C0:  MFC1      A1, F30
   C4:  LIF       F1, 2.3125
   CC:  MTC1      R0, F0
   D0:  MFC1      A3, F28
   D4:  ADD.D     F20, F20, F0
   D8:  CLEAR     A0
   DC:  SW        S0, 1C (SP)
   E0:  CVT.S.D   F20, F20
   E4:  MFC1      A2, F20
   E8:  COPY      S0, V0
   EC:  SWC1      F26, 10 (SP)
   F0:  SWC1      F24, 14 (SP)
   F4:  JAL       ~Func:playFX_12
   F8:  SWC1      F22, 18 (SP)
   FC:  COPY      A0, V0
  100:  LB        V1, 210 (S0)
  104:  LI        V0, A
  108:  BNE       V1, V0, .o128
  10C:  NOP
  110:  LW        V0, C (A0)
  114:  LIF       F0, 0.39804688
  120:  NOP
  124:  SWC1      F0, 28 (V0)
        .o128
  128:  LW        RA, 28 (SP)
  12C:  LW        S1, 24 (SP)
  130:  LW        S0, 20 (SP)
  134:  LDC1      F30, 58 (SP)
  138:  LDC1      F28, 50 (SP)
  13C:  LDC1      F26, 48 (SP)
  140:  LDC1      F24, 40 (SP)
  144:  LDC1      F22, 38 (SP)
  148:  LDC1      F20, 30 (SP)
  14C:  LI        V0, 2
  150:  JR        RA
  154:  ADDIU     SP, SP, 60
}

% Origin: HINT
#new:Function $Function_80218458
{
    0:  ADDIU     SP, SP, FFE8
    4:  SW        RA, 10 (SP)
    8:  LW        V0, C (A0)
    C:  LAH       A2, 800DC1EC
   14:  JAL       ~Func:set_variable
   18:  LW        A1, 0 (V0)
   1C:  LW        RA, 10 (SP)
   20:  LI        V0, 2
   24:  JR        RA
   28:  ADDIU     SP, SP, 18
}

% Origin: HINT
#new:Function $Function_80218484
{
    0:  ADDIU     SP, SP, FFD8
    4:  SW        S1, 14 (SP)
    8:  COPY      S1, A0
    C:  SW        RA, 20 (SP)
   10:  SW        S3, 1C (SP)
   14:  SW        S2, 18 (SP)
   18:  SW        S0, 10 (SP)
   1C:  LW        S0, C (S1)
   20:  LW        A1, 0 (S0)
   24:  JAL       ~Func:get_variable
   28:  ADDIU     S0, S0, 4
   2C:  LW        A1, 0 (S0)
   30:  ADDIU     S0, S0, 4
   34:  COPY      A0, S1
   38:  JAL       ~Func:get_variable
   3C:  COPY      S3, V0
   40:  LW        A1, 0 (S0)
   44:  ADDIU     S0, S0, 4
   48:  COPY      A0, S1
   4C:  JAL       ~Func:get_variable
   50:  COPY      S2, V0
   54:  COPY      A0, S1
   58:  LW        A1, 0 (S0)
   5C:  JAL       ~Func:get_variable
   60:  COPY      S0, V0
   64:  LW        A0, 148 (S1)
   68:  JAL       ~Func:get_actor
   6C:  COPY      S1, V0
   70:  COPY      V1, V0
   74:  LW        V0, 8 (V1)
   78:  LBU       V0, 24 (V0)
   7C:  LW        A0, 8 (V1)
   80:  SUBU      S3, S3, V0
   84:  SB        S3, 194 (V1)
   88:  LBU       V0, 25 (A0)
   8C:  SUBU      S2, S2, V0
   90:  SB        S2, 195 (V1)
   94:  LBU       V0, 26 (A0)
   98:  SUBU      S0, S0, V0
   9C:  SB        S0, 196 (V1)
   A0:  LBU       A0, 27 (A0)
   A4:  SUBU      S1, S1, A0
   A8:  SB        S1, 197 (V1)
   AC:  LW        RA, 20 (SP)
   B0:  LW        S3, 1C (SP)
   B4:  LW        S2, 18 (SP)
   B8:  LW        S1, 14 (SP)
   BC:  LW        S0, 10 (SP)
   C0:  LI        V0, 2
   C4:  JR        RA
   C8:  ADDIU     SP, SP, 28
}

% Origin: HINT
#new:Function $Function_80218550
{
    0:  ADDIU     SP, SP, FFE0
    4:  SW        S1, 14 (SP)
    8:  COPY      S1, A0
    C:  SW        RA, 18 (SP)
   10:  SW        S0, 10 (SP)
   14:  LW        S0, C (S1)
   18:  LW        A1, 0 (S0)
   1C:  JAL       ~Func:get_variable
   20:  ADDIU     S0, S0, 4
   24:  COPY      A0, S1
   28:  LW        A1, 0 (S0)
   2C:  JAL       ~Func:get_variable
   30:  COPY      S0, V0
   34:  COPY      A0, S0
   38:  JAL       ~Func:start_rumble
   3C:  COPY      A1, V0
   40:  LW        RA, 18 (SP)
   44:  LW        S1, 14 (SP)
   48:  LW        S0, 10 (SP)
   4C:  LI        V0, 2
   50:  JR        RA
   54:  ADDIU     SP, SP, 20
}

% Origin: HINT
#new:Function $Function_802185A8
{
    0:  ADDIU     SP, SP, FFE0
    4:  SW        S1, 14 (SP)
    8:  COPY      S1, A0
    C:  SW        RA, 18 (SP)
   10:  SW        S0, 10 (SP)
   14:  LW        S0, C (S1)
   18:  LW        A1, 0 (S0)
   1C:  JAL       ~Func:get_variable
   20:  ADDIU     S0, S0, 4
   24:  COPY      A0, V0
   28:  LI        V0, FF81
   2C:  BNE       A0, V0, .o38
   30:  NOP
   34:  LW        A0, 148 (S1)
        .o38
   38:  JAL       ~Func:get_actor
   3C:  NOP
   40:  COPY      A0, V0
   44:  LBU       V1, 136 (A0)
   48:  LI        V0, 47
   4C:  BEQ       V1, V0, .o7C
   50:  SLT       V0, V1, V0
   54:  BNEL      V0, R0, .o9C
   58:  COPY      A0, S1
   5C:  SLTI      V0, V1, 65
   60:  BEQ       V0, R0, .o98
   64:  SLTI      V0, V1, 4D
   68:  BNE       V0, R0, .o9C
   6C:  COPY      A0, S1
   70:  LW        A1, 0 (S0)
   74:  BEQ       R0, R0, .oA4
   78:  LI        A2, FFFF
        .o7C
   7C:  LW        V1, A8 (A0)
   80:  LI        V0, 1
   84:  BNE       V1, V0, .o9C
   88:  COPY      A0, S1
   8C:  LW        A1, 0 (S0)
   90:  BEQ       R0, R0, .oA4
   94:  LI        A2, FFFF
        .o98
   98:  COPY      A0, S1
        .o9C
   9C:  LW        A1, 0 (S0)
   A0:  CLEAR     A2
        .oA4
   A4:  JAL       ~Func:set_variable
   A8:  NOP
   AC:  LW        RA, 18 (SP)
   B0:  LW        S1, 14 (SP)
   B4:  LW        S0, 10 (SP)
   B8:  LI        V0, 2
   BC:  JR        RA
   C0:  ADDIU     SP, SP, 20
}

PADDING: 8021866C to 80218670 (0064947C to 00649480)
00000000

% Origin: HINT
#new:Function $Function_80218670
{
    0:  ADDIU     SP, SP, FFA0
    4:  SW        S1, 24 (SP)
    8:  COPY      S1, A0
    C:  SW        RA, 28 (SP)
   10:  SW        S0, 20 (SP)
   14:  SDC1      F30, 58 (SP)
   18:  SDC1      F28, 50 (SP)
   1C:  SDC1      F26, 48 (SP)
   20:  SDC1      F24, 40 (SP)
   24:  SDC1      F22, 38 (SP)
   28:  SDC1      F20, 30 (SP)
   2C:  LW        S0, C (S1)
   30:  LW        A1, 0 (S0)
   34:  JAL       ~Func:get_float_variable
   38:  ADDIU     S0, S0, 4
   3C:  LW        A1, 0 (S0)
   40:  ADDIU     S0, S0, 4
   44:  COPY      A0, S1
   48:  JAL       ~Func:get_float_variable
   4C:  MOV.S     F30, F0
   50:  LW        A1, 0 (S0)
   54:  ADDIU     S0, S0, 4
   58:  COPY      A0, S1
   5C:  JAL       ~Func:get_float_variable
   60:  MOV.S     F20, F0
   64:  LW        A1, 0 (S0)
   68:  ADDIU     S0, S0, 4
   6C:  COPY      A0, S1
   70:  JAL       ~Func:get_float_variable
   74:  MOV.S     F28, F0
   78:  LW        A1, 0 (S0)
   7C:  ADDIU     S0, S0, 4
   80:  COPY      A0, S1
   84:  JAL       ~Func:get_float_variable
   88:  MOV.S     F26, F0
   8C:  LW        A1, 0 (S0)
   90:  ADDIU     S0, S0, 4
   94:  COPY      A0, S1
   98:  JAL       ~Func:get_float_variable
   9C:  MOV.S     F24, F0
   A0:  COPY      A0, S1
   A4:  LW        A1, 0 (S0)
   A8:  JAL       ~Func:get_variable
   AC:  MOV.S     F22, F0
   B0:  LW        A0, 148 (S1)
   B4:  JAL       ~Func:get_actor
   B8:  COPY      S0, V0
   BC:  CVT.D.S   F20, F20
   C0:  MFC1      A1, F30
   C4:  LIF       F1, 2.3125
   CC:  MTC1      R0, F0
   D0:  MFC1      A3, F28
   D4:  ADD.D     F20, F20, F0
   D8:  CLEAR     A0
   DC:  SW        S0, 1C (SP)
   E0:  CVT.S.D   F20, F20
   E4:  MFC1      A2, F20
   E8:  COPY      S0, V0
   EC:  SWC1      F26, 10 (SP)
   F0:  SWC1      F24, 14 (SP)
   F4:  JAL       ~Func:playFX_12
   F8:  SWC1      F22, 18 (SP)
   FC:  COPY      A0, V0
  100:  LB        V1, 210 (S0)
  104:  LI        V0, A
  108:  BNE       V1, V0, .o128
  10C:  NOP
  110:  LW        V0, C (A0)
  114:  LIF       F0, 0.39804688
  120:  NOP
  124:  SWC1      F0, 28 (V0)
        .o128
  128:  LW        RA, 28 (SP)
  12C:  LW        S1, 24 (SP)
  130:  LW        S0, 20 (SP)
  134:  LDC1      F30, 58 (SP)
  138:  LDC1      F28, 50 (SP)
  13C:  LDC1      F26, 48 (SP)
  140:  LDC1      F24, 40 (SP)
  144:  LDC1      F22, 38 (SP)
  148:  LDC1      F20, 30 (SP)
  14C:  LI        V0, 2
  150:  JR        RA
  154:  ADDIU     SP, SP, 60
}

% Origin: HINT
#new:Function $Function_802187C8
{
    0:  ADDIU     SP, SP, FFE8
    4:  SW        RA, 10 (SP)
    8:  LW        V0, C (A0)
    C:  LAH       A2, 800DC1EC
   14:  JAL       ~Func:set_variable
   18:  LW        A1, 0 (V0)
   1C:  LW        RA, 10 (SP)
   20:  LI        V0, 2
   24:  JR        RA
   28:  ADDIU     SP, SP, 18
}

% Origin: HINT
#new:Function $Function_802187F4
{
    0:  ADDIU     SP, SP, FFD8
    4:  SW        S1, 14 (SP)
    8:  COPY      S1, A0
    C:  SW        RA, 20 (SP)
   10:  SW        S3, 1C (SP)
   14:  SW        S2, 18 (SP)
   18:  SW        S0, 10 (SP)
   1C:  LW        S0, C (S1)
   20:  LW        A1, 0 (S0)
   24:  JAL       ~Func:get_variable
   28:  ADDIU     S0, S0, 4
   2C:  LW        A1, 0 (S0)
   30:  ADDIU     S0, S0, 4
   34:  COPY      A0, S1
   38:  JAL       ~Func:get_variable
   3C:  COPY      S3, V0
   40:  LW        A1, 0 (S0)
   44:  ADDIU     S0, S0, 4
   48:  COPY      A0, S1
   4C:  JAL       ~Func:get_variable
   50:  COPY      S2, V0
   54:  COPY      A0, S1
   58:  LW        A1, 0 (S0)
   5C:  JAL       ~Func:get_variable
   60:  COPY      S0, V0
   64:  LW        A0, 148 (S1)
   68:  JAL       ~Func:get_actor
   6C:  COPY      S1, V0
   70:  COPY      V1, V0
   74:  LW        V0, 8 (V1)
   78:  LBU       V0, 24 (V0)
   7C:  LW        A0, 8 (V1)
   80:  SUBU      S3, S3, V0
   84:  SB        S3, 194 (V1)
   88:  LBU       V0, 25 (A0)
   8C:  SUBU      S2, S2, V0
   90:  SB        S2, 195 (V1)
   94:  LBU       V0, 26 (A0)
   98:  SUBU      S0, S0, V0
   9C:  SB        S0, 196 (V1)
   A0:  LBU       A0, 27 (A0)
   A4:  SUBU      S1, S1, A0
   A8:  SB        S1, 197 (V1)
   AC:  LW        RA, 20 (SP)
   B0:  LW        S3, 1C (SP)
   B4:  LW        S2, 18 (SP)
   B8:  LW        S1, 14 (SP)
   BC:  LW        S0, 10 (SP)
   C0:  LI        V0, 2
   C4:  JR        RA
   C8:  ADDIU     SP, SP, 28
}

% Origin: HINT
#new:Function $Function_802188C0
{
    0:  ADDIU     SP, SP, FFE0
    4:  SW        S1, 14 (SP)
    8:  COPY      S1, A0
    C:  SW        RA, 18 (SP)
   10:  SW        S0, 10 (SP)
   14:  LW        S0, C (S1)
   18:  LW        A1, 0 (S0)
   1C:  JAL       ~Func:get_variable
   20:  ADDIU     S0, S0, 4
   24:  COPY      A0, S1
   28:  LW        A1, 0 (S0)
   2C:  JAL       ~Func:get_variable
   30:  COPY      S0, V0
   34:  COPY      A0, S0
   38:  JAL       ~Func:start_rumble
   3C:  COPY      A1, V0
   40:  LW        RA, 18 (SP)
   44:  LW        S1, 14 (SP)
   48:  LW        S0, 10 (SP)
   4C:  LI        V0, 2
   50:  JR        RA
   54:  ADDIU     SP, SP, 20
}

% Origin: HINT
#new:Function $Function_80218918
{
    0:  ADDIU     SP, SP, FFE0
    4:  SW        S1, 14 (SP)
    8:  COPY      S1, A0
    C:  SW        RA, 18 (SP)
   10:  SW        S0, 10 (SP)
   14:  LW        S0, C (S1)
   18:  LW        A1, 0 (S0)
   1C:  JAL       ~Func:get_variable
   20:  ADDIU     S0, S0, 4
   24:  COPY      A0, V0
   28:  LI        V0, FF81
   2C:  BNE       A0, V0, .o38
   30:  NOP
   34:  LW        A0, 148 (S1)
        .o38
   38:  JAL       ~Func:get_actor
   3C:  NOP
   40:  COPY      A0, V0
   44:  LBU       V1, 136 (A0)
   48:  LI        V0, 47
   4C:  BEQ       V1, V0, .o7C
   50:  SLT       V0, V1, V0
   54:  BNEL      V0, R0, .o9C
   58:  COPY      A0, S1
   5C:  SLTI      V0, V1, 65
   60:  BEQ       V0, R0, .o98
   64:  SLTI      V0, V1, 4D
   68:  BNE       V0, R0, .o9C
   6C:  COPY      A0, S1
   70:  LW        A1, 0 (S0)
   74:  BEQ       R0, R0, .oA4
   78:  LI        A2, FFFF
        .o7C
   7C:  LW        V1, A8 (A0)
   80:  LI        V0, 1
   84:  BNE       V1, V0, .o9C
   88:  COPY      A0, S1
   8C:  LW        A1, 0 (S0)
   90:  BEQ       R0, R0, .oA4
   94:  LI        A2, FFFF
        .o98
   98:  COPY      A0, S1
        .o9C
   9C:  LW        A1, 0 (S0)
   A0:  CLEAR     A2
        .oA4
   A4:  JAL       ~Func:set_variable
   A8:  NOP
   AC:  LW        RA, 18 (SP)
   B0:  LW        S1, 14 (SP)
   B4:  LW        S0, 10 (SP)
   B8:  LI        V0, 2
   BC:  JR        RA
   C0:  ADDIU     SP, SP, 20
}

PADDING: 802189DC to 802189E0 (006497EC to 006497F0)
00000000

#new:Function $Function_802189E0
{
    0:  ADDIU     SP, SP, FFA0
    4:  SW        S1, 24 (SP)
    8:  COPY      S1, A0
    C:  SW        RA, 28 (SP)
   10:  SW        S0, 20 (SP)
   14:  SDC1      F30, 58 (SP)
   18:  SDC1      F28, 50 (SP)
   1C:  SDC1      F26, 48 (SP)
   20:  SDC1      F24, 40 (SP)
   24:  SDC1      F22, 38 (SP)
   28:  SDC1      F20, 30 (SP)
   2C:  LW        S0, C (S1)
   30:  LW        A1, 0 (S0)
   34:  JAL       ~Func:get_float_variable
   38:  ADDIU     S0, S0, 4
   3C:  LW        A1, 0 (S0)
   40:  ADDIU     S0, S0, 4
   44:  COPY      A0, S1
   48:  JAL       ~Func:get_float_variable
   4C:  MOV.S     F30, F0
   50:  LW        A1, 0 (S0)
   54:  ADDIU     S0, S0, 4
   58:  COPY      A0, S1
   5C:  JAL       ~Func:get_float_variable
   60:  MOV.S     F20, F0
   64:  LW        A1, 0 (S0)
   68:  ADDIU     S0, S0, 4
   6C:  COPY      A0, S1
   70:  JAL       ~Func:get_float_variable
   74:  MOV.S     F28, F0
   78:  LW        A1, 0 (S0)
   7C:  ADDIU     S0, S0, 4
   80:  COPY      A0, S1
   84:  JAL       ~Func:get_float_variable
   88:  MOV.S     F26, F0
   8C:  LW        A1, 0 (S0)
   90:  ADDIU     S0, S0, 4
   94:  COPY      A0, S1
   98:  JAL       ~Func:get_float_variable
   9C:  MOV.S     F24, F0
   A0:  COPY      A0, S1
   A4:  LW        A1, 0 (S0)
   A8:  JAL       ~Func:get_variable
   AC:  MOV.S     F22, F0
   B0:  LW        A0, 148 (S1)
   B4:  JAL       ~Func:get_actor
   B8:  COPY      S0, V0
   BC:  CVT.D.S   F20, F20
   C0:  MFC1      A1, F30
   C4:  LIF       F1, 2.3125
   CC:  MTC1      R0, F0
   D0:  MFC1      A3, F28
   D4:  ADD.D     F20, F20, F0
   D8:  CLEAR     A0
   DC:  SW        S0, 1C (SP)
   E0:  CVT.S.D   F20, F20
   E4:  MFC1      A2, F20
   E8:  COPY      S0, V0
   EC:  SWC1      F26, 10 (SP)
   F0:  SWC1      F24, 14 (SP)
   F4:  JAL       ~Func:playFX_12
   F8:  SWC1      F22, 18 (SP)
   FC:  COPY      A0, V0
  100:  LB        V1, 210 (S0)
  104:  LI        V0, A
  108:  BNE       V1, V0, .o128
  10C:  NOP
  110:  LW        V0, C (A0)
  114:  LIF       F0, 0.39804688
  120:  NOP
  124:  SWC1      F0, 28 (V0)
        .o128
  128:  LW        RA, 28 (SP)
  12C:  LW        S1, 24 (SP)
  130:  LW        S0, 20 (SP)
  134:  LDC1      F30, 58 (SP)
  138:  LDC1      F28, 50 (SP)
  13C:  LDC1      F26, 48 (SP)
  140:  LDC1      F24, 40 (SP)
  144:  LDC1      F22, 38 (SP)
  148:  LDC1      F20, 30 (SP)
  14C:  LI        V0, 2
  150:  JR        RA
  154:  ADDIU     SP, SP, 60
}

#new:Function $Function_80218B38
{
    0:  ADDIU     SP, SP, FFE8
    4:  SW        RA, 10 (SP)
    8:  LW        V0, C (A0)
    C:  LAH       A2, 800DC1EC
   14:  JAL       ~Func:set_variable
   18:  LW        A1, 0 (V0)
   1C:  LW        RA, 10 (SP)
   20:  LI        V0, 2
   24:  JR        RA
   28:  ADDIU     SP, SP, 18
}

#new:Function $Function_80218B64
{
    0:  ADDIU     SP, SP, FFD8
    4:  SW        S1, 14 (SP)
    8:  COPY      S1, A0
    C:  SW        RA, 20 (SP)
   10:  SW        S3, 1C (SP)
   14:  SW        S2, 18 (SP)
   18:  SW        S0, 10 (SP)
   1C:  LW        S0, C (S1)
   20:  LW        A1, 0 (S0)
   24:  JAL       ~Func:get_variable
   28:  ADDIU     S0, S0, 4
   2C:  LW        A1, 0 (S0)
   30:  ADDIU     S0, S0, 4
   34:  COPY      A0, S1
   38:  JAL       ~Func:get_variable
   3C:  COPY      S3, V0
   40:  LW        A1, 0 (S0)
   44:  ADDIU     S0, S0, 4
   48:  COPY      A0, S1
   4C:  JAL       ~Func:get_variable
   50:  COPY      S2, V0
   54:  COPY      A0, S1
   58:  LW        A1, 0 (S0)
   5C:  JAL       ~Func:get_variable
   60:  COPY      S0, V0
   64:  LW        A0, 148 (S1)
   68:  JAL       ~Func:get_actor
   6C:  COPY      S1, V0
   70:  COPY      V1, V0
   74:  LW        V0, 8 (V1)
   78:  LBU       V0, 24 (V0)
   7C:  LW        A0, 8 (V1)
   80:  SUBU      S3, S3, V0
   84:  SB        S3, 194 (V1)
   88:  LBU       V0, 25 (A0)
   8C:  SUBU      S2, S2, V0
   90:  SB        S2, 195 (V1)
   94:  LBU       V0, 26 (A0)
   98:  SUBU      S0, S0, V0
   9C:  SB        S0, 196 (V1)
   A0:  LBU       A0, 27 (A0)
   A4:  SUBU      S1, S1, A0
   A8:  SB        S1, 197 (V1)
   AC:  LW        RA, 20 (SP)
   B0:  LW        S3, 1C (SP)
   B4:  LW        S2, 18 (SP)
   B8:  LW        S1, 14 (SP)
   BC:  LW        S0, 10 (SP)
   C0:  LI        V0, 2
   C4:  JR        RA
   C8:  ADDIU     SP, SP, 28
}

#new:Function $Function_80218C30
{
    0:  ADDIU     SP, SP, FFE0
    4:  SW        S1, 14 (SP)
    8:  COPY      S1, A0
    C:  SW        RA, 18 (SP)
   10:  SW        S0, 10 (SP)
   14:  LW        S0, C (S1)
   18:  LW        A1, 0 (S0)
   1C:  JAL       ~Func:get_variable
   20:  ADDIU     S0, S0, 4
   24:  COPY      A0, S1
   28:  LW        A1, 0 (S0)
   2C:  JAL       ~Func:get_variable
   30:  COPY      S0, V0
   34:  COPY      A0, S0
   38:  JAL       ~Func:start_rumble
   3C:  COPY      A1, V0
   40:  LW        RA, 18 (SP)
   44:  LW        S1, 14 (SP)
   48:  LW        S0, 10 (SP)
   4C:  LI        V0, 2
   50:  JR        RA
   54:  ADDIU     SP, SP, 20
}

#new:Function $Function_80218C88
{
    0:  ADDIU     SP, SP, FFE0
    4:  SW        S1, 14 (SP)
    8:  COPY      S1, A0
    C:  SW        RA, 18 (SP)
   10:  SW        S0, 10 (SP)
   14:  LW        S0, C (S1)
   18:  LW        A1, 0 (S0)
   1C:  JAL       ~Func:get_variable
   20:  ADDIU     S0, S0, 4
   24:  COPY      A0, V0
   28:  LI        V0, FF81
   2C:  BNE       A0, V0, .o38
   30:  NOP
   34:  LW        A0, 148 (S1)
        .o38
   38:  JAL       ~Func:get_actor
   3C:  NOP
   40:  COPY      A0, V0
   44:  LBU       V1, 136 (A0)
   48:  LI        V0, 47
   4C:  BEQ       V1, V0, .o7C
   50:  SLT       V0, V1, V0
   54:  BNEL      V0, R0, .o9C
   58:  COPY      A0, S1
   5C:  SLTI      V0, V1, 65
   60:  BEQ       V0, R0, .o98
   64:  SLTI      V0, V1, 4D
   68:  BNE       V0, R0, .o9C
   6C:  COPY      A0, S1
   70:  LW        A1, 0 (S0)
   74:  BEQ       R0, R0, .oA4
   78:  LI        A2, FFFF
        .o7C
   7C:  LW        V1, A8 (A0)
   80:  LI        V0, 1
   84:  BNE       V1, V0, .o9C
   88:  COPY      A0, S1
   8C:  LW        A1, 0 (S0)
   90:  BEQ       R0, R0, .oA4
   94:  LI        A2, FFFF
        .o98
   98:  COPY      A0, S1
        .o9C
   9C:  LW        A1, 0 (S0)
   A0:  CLEAR     A2
        .oA4
   A4:  JAL       ~Func:set_variable
   A8:  NOP
   AC:  LW        RA, 18 (SP)
   B0:  LW        S1, 14 (SP)
   B4:  LW        S0, 10 (SP)
   B8:  LI        V0, 2
   BC:  JR        RA
   C0:  ADDIU     SP, SP, 20
}

PADDING: 80218D4C to 80218D50 (00649B5C to 00649B60)
00000000

% Origin: HINT
#new:Function $Function_80218D50
{
    0:  ADDIU     SP, SP, FFA0
    4:  SW        S1, 24 (SP)
    8:  COPY      S1, A0
    C:  SW        RA, 28 (SP)
   10:  SW        S0, 20 (SP)
   14:  SDC1      F30, 58 (SP)
   18:  SDC1      F28, 50 (SP)
   1C:  SDC1      F26, 48 (SP)
   20:  SDC1      F24, 40 (SP)
   24:  SDC1      F22, 38 (SP)
   28:  SDC1      F20, 30 (SP)
   2C:  LW        S0, C (S1)
   30:  LW        A1, 0 (S0)
   34:  JAL       ~Func:get_float_variable
   38:  ADDIU     S0, S0, 4
   3C:  LW        A1, 0 (S0)
   40:  ADDIU     S0, S0, 4
   44:  COPY      A0, S1
   48:  JAL       ~Func:get_float_variable
   4C:  MOV.S     F30, F0
   50:  LW        A1, 0 (S0)
   54:  ADDIU     S0, S0, 4
   58:  COPY      A0, S1
   5C:  JAL       ~Func:get_float_variable
   60:  MOV.S     F20, F0
   64:  LW        A1, 0 (S0)
   68:  ADDIU     S0, S0, 4
   6C:  COPY      A0, S1
   70:  JAL       ~Func:get_float_variable
   74:  MOV.S     F28, F0
   78:  LW        A1, 0 (S0)
   7C:  ADDIU     S0, S0, 4
   80:  COPY      A0, S1
   84:  JAL       ~Func:get_float_variable
   88:  MOV.S     F26, F0
   8C:  LW        A1, 0 (S0)
   90:  ADDIU     S0, S0, 4
   94:  COPY      A0, S1
   98:  JAL       ~Func:get_float_variable
   9C:  MOV.S     F24, F0
   A0:  COPY      A0, S1
   A4:  LW        A1, 0 (S0)
   A8:  JAL       ~Func:get_variable
   AC:  MOV.S     F22, F0
   B0:  LW        A0, 148 (S1)
   B4:  JAL       ~Func:get_actor
   B8:  COPY      S0, V0
   BC:  CVT.D.S   F20, F20
   C0:  MFC1      A1, F30
   C4:  LIF       F1, 2.3125
   CC:  MTC1      R0, F0
   D0:  MFC1      A3, F28
   D4:  ADD.D     F20, F20, F0
   D8:  CLEAR     A0
   DC:  SW        S0, 1C (SP)
   E0:  CVT.S.D   F20, F20
   E4:  MFC1      A2, F20
   E8:  COPY      S0, V0
   EC:  SWC1      F26, 10 (SP)
   F0:  SWC1      F24, 14 (SP)
   F4:  JAL       ~Func:playFX_12
   F8:  SWC1      F22, 18 (SP)
   FC:  COPY      A0, V0
  100:  LB        V1, 210 (S0)
  104:  LI        V0, A
  108:  BNE       V1, V0, .o128
  10C:  NOP
  110:  LW        V0, C (A0)
  114:  LIF       F0, 0.39804688
  120:  NOP
  124:  SWC1      F0, 28 (V0)
        .o128
  128:  LW        RA, 28 (SP)
  12C:  LW        S1, 24 (SP)
  130:  LW        S0, 20 (SP)
  134:  LDC1      F30, 58 (SP)
  138:  LDC1      F28, 50 (SP)
  13C:  LDC1      F26, 48 (SP)
  140:  LDC1      F24, 40 (SP)
  144:  LDC1      F22, 38 (SP)
  148:  LDC1      F20, 30 (SP)
  14C:  LI        V0, 2
  150:  JR        RA
  154:  ADDIU     SP, SP, 60
}

% Origin: HINT
#new:Function $Function_80218EA8
{
    0:  ADDIU     SP, SP, FFE8
    4:  SW        RA, 10 (SP)
    8:  LW        V0, C (A0)
    C:  LAH       A2, 800DC1EC
   14:  JAL       ~Func:set_variable
   18:  LW        A1, 0 (V0)
   1C:  LW        RA, 10 (SP)
   20:  LI        V0, 2
   24:  JR        RA
   28:  ADDIU     SP, SP, 18
}

% Origin: HINT
#new:Function $Function_80218ED4
{
    0:  ADDIU     SP, SP, FFD8
    4:  SW        S1, 14 (SP)
    8:  COPY      S1, A0
    C:  SW        RA, 20 (SP)
   10:  SW        S3, 1C (SP)
   14:  SW        S2, 18 (SP)
   18:  SW        S0, 10 (SP)
   1C:  LW        S0, C (S1)
   20:  LW        A1, 0 (S0)
   24:  JAL       ~Func:get_variable
   28:  ADDIU     S0, S0, 4
   2C:  LW        A1, 0 (S0)
   30:  ADDIU     S0, S0, 4
   34:  COPY      A0, S1
   38:  JAL       ~Func:get_variable
   3C:  COPY      S3, V0
   40:  LW        A1, 0 (S0)
   44:  ADDIU     S0, S0, 4
   48:  COPY      A0, S1
   4C:  JAL       ~Func:get_variable
   50:  COPY      S2, V0
   54:  COPY      A0, S1
   58:  LW        A1, 0 (S0)
   5C:  JAL       ~Func:get_variable
   60:  COPY      S0, V0
   64:  LW        A0, 148 (S1)
   68:  JAL       ~Func:get_actor
   6C:  COPY      S1, V0
   70:  COPY      V1, V0
   74:  LW        V0, 8 (V1)
   78:  LBU       V0, 24 (V0)
   7C:  LW        A0, 8 (V1)
   80:  SUBU      S3, S3, V0
   84:  SB        S3, 194 (V1)
   88:  LBU       V0, 25 (A0)
   8C:  SUBU      S2, S2, V0
   90:  SB        S2, 195 (V1)
   94:  LBU       V0, 26 (A0)
   98:  SUBU      S0, S0, V0
   9C:  SB        S0, 196 (V1)
   A0:  LBU       A0, 27 (A0)
   A4:  SUBU      S1, S1, A0
   A8:  SB        S1, 197 (V1)
   AC:  LW        RA, 20 (SP)
   B0:  LW        S3, 1C (SP)
   B4:  LW        S2, 18 (SP)
   B8:  LW        S1, 14 (SP)
   BC:  LW        S0, 10 (SP)
   C0:  LI        V0, 2
   C4:  JR        RA
   C8:  ADDIU     SP, SP, 28
}

% Origin: HINT
#new:Function $Function_80218FA0
{
    0:  ADDIU     SP, SP, FFE0
    4:  SW        S1, 14 (SP)
    8:  COPY      S1, A0
    C:  SW        RA, 18 (SP)
   10:  SW        S0, 10 (SP)
   14:  LW        S0, C (S1)
   18:  LW        A1, 0 (S0)
   1C:  JAL       ~Func:get_variable
   20:  ADDIU     S0, S0, 4
   24:  COPY      A0, S1
   28:  LW        A1, 0 (S0)
   2C:  JAL       ~Func:get_variable
   30:  COPY      S0, V0
   34:  COPY      A0, S0
   38:  JAL       ~Func:start_rumble
   3C:  COPY      A1, V0
   40:  LW        RA, 18 (SP)
   44:  LW        S1, 14 (SP)
   48:  LW        S0, 10 (SP)
   4C:  LI        V0, 2
   50:  JR        RA
   54:  ADDIU     SP, SP, 20
}

% Origin: HINT
#new:Function $Function_80218FF8
{
    0:  ADDIU     SP, SP, FFE0
    4:  SW        S1, 14 (SP)
    8:  COPY      S1, A0
    C:  SW        RA, 18 (SP)
   10:  SW        S0, 10 (SP)
   14:  LW        S0, C (S1)
   18:  LW        A1, 0 (S0)
   1C:  JAL       ~Func:get_variable
   20:  ADDIU     S0, S0, 4
   24:  COPY      A0, V0
   28:  LI        V0, FF81
   2C:  BNE       A0, V0, .o38
   30:  NOP
   34:  LW        A0, 148 (S1)
        .o38
   38:  JAL       ~Func:get_actor
   3C:  NOP
   40:  COPY      A0, V0
   44:  LBU       V1, 136 (A0)
   48:  LI        V0, 47
   4C:  BEQ       V1, V0, .o7C
   50:  SLT       V0, V1, V0
   54:  BNEL      V0, R0, .o9C
   58:  COPY      A0, S1
   5C:  SLTI      V0, V1, 65
   60:  BEQ       V0, R0, .o98
   64:  SLTI      V0, V1, 4D
   68:  BNE       V0, R0, .o9C
   6C:  COPY      A0, S1
   70:  LW        A1, 0 (S0)
   74:  BEQ       R0, R0, .oA4
   78:  LI        A2, FFFF
        .o7C
   7C:  LW        V1, A8 (A0)
   80:  LI        V0, 1
   84:  BNE       V1, V0, .o9C
   88:  COPY      A0, S1
   8C:  LW        A1, 0 (S0)
   90:  BEQ       R0, R0, .oA4
   94:  LI        A2, FFFF
        .o98
   98:  COPY      A0, S1
        .o9C
   9C:  LW        A1, 0 (S0)
   A0:  CLEAR     A2
        .oA4
   A4:  JAL       ~Func:set_variable
   A8:  NOP
   AC:  LW        RA, 18 (SP)
   B0:  LW        S1, 14 (SP)
   B4:  LW        S0, 10 (SP)
   B8:  LI        V0, 2
   BC:  JR        RA
   C0:  ADDIU     SP, SP, 20
}

PADDING: 802190BC to 802190C0 (00649ECC to 00649ED0)
00000000

#new:Function $Function_802190C0
{
    0:  ADDIU     SP, SP, FFA0
    4:  SW        S1, 24 (SP)
    8:  COPY      S1, A0
    C:  SW        RA, 28 (SP)
   10:  SW        S0, 20 (SP)
   14:  SDC1      F30, 58 (SP)
   18:  SDC1      F28, 50 (SP)
   1C:  SDC1      F26, 48 (SP)
   20:  SDC1      F24, 40 (SP)
   24:  SDC1      F22, 38 (SP)
   28:  SDC1      F20, 30 (SP)
   2C:  LW        S0, C (S1)
   30:  LW        A1, 0 (S0)
   34:  JAL       ~Func:get_float_variable
   38:  ADDIU     S0, S0, 4
   3C:  LW        A1, 0 (S0)
   40:  ADDIU     S0, S0, 4
   44:  COPY      A0, S1
   48:  JAL       ~Func:get_float_variable
   4C:  MOV.S     F30, F0
   50:  LW        A1, 0 (S0)
   54:  ADDIU     S0, S0, 4
   58:  COPY      A0, S1
   5C:  JAL       ~Func:get_float_variable
   60:  MOV.S     F20, F0
   64:  LW        A1, 0 (S0)
   68:  ADDIU     S0, S0, 4
   6C:  COPY      A0, S1
   70:  JAL       ~Func:get_float_variable
   74:  MOV.S     F28, F0
   78:  LW        A1, 0 (S0)
   7C:  ADDIU     S0, S0, 4
   80:  COPY      A0, S1
   84:  JAL       ~Func:get_float_variable
   88:  MOV.S     F26, F0
   8C:  LW        A1, 0 (S0)
   90:  ADDIU     S0, S0, 4
   94:  COPY      A0, S1
   98:  JAL       ~Func:get_float_variable
   9C:  MOV.S     F24, F0
   A0:  COPY      A0, S1
   A4:  LW        A1, 0 (S0)
   A8:  JAL       ~Func:get_variable
   AC:  MOV.S     F22, F0
   B0:  LW        A0, 148 (S1)
   B4:  JAL       ~Func:get_actor
   B8:  COPY      S0, V0
   BC:  CVT.D.S   F20, F20
   C0:  MFC1      A1, F30
   C4:  LIF       F1, 2.3125
   CC:  MTC1      R0, F0
   D0:  MFC1      A3, F28
   D4:  ADD.D     F20, F20, F0
   D8:  CLEAR     A0
   DC:  SW        S0, 1C (SP)
   E0:  CVT.S.D   F20, F20
   E4:  MFC1      A2, F20
   E8:  COPY      S0, V0
   EC:  SWC1      F26, 10 (SP)
   F0:  SWC1      F24, 14 (SP)
   F4:  JAL       ~Func:playFX_12
   F8:  SWC1      F22, 18 (SP)
   FC:  COPY      A0, V0
  100:  LB        V1, 210 (S0)
  104:  LI        V0, A
  108:  BNE       V1, V0, .o128
  10C:  NOP
  110:  LW        V0, C (A0)
  114:  LIF       F0, 0.39804688
  120:  NOP
  124:  SWC1      F0, 28 (V0)
        .o128
  128:  LW        RA, 28 (SP)
  12C:  LW        S1, 24 (SP)
  130:  LW        S0, 20 (SP)
  134:  LDC1      F30, 58 (SP)
  138:  LDC1      F28, 50 (SP)
  13C:  LDC1      F26, 48 (SP)
  140:  LDC1      F24, 40 (SP)
  144:  LDC1      F22, 38 (SP)
  148:  LDC1      F20, 30 (SP)
  14C:  LI        V0, 2
  150:  JR        RA
  154:  ADDIU     SP, SP, 60
}

#new:Function $Function_80219218
{
    0:  ADDIU     SP, SP, FFE8
    4:  SW        RA, 10 (SP)
    8:  LW        V0, C (A0)
    C:  LAH       A2, 800DC1EC
   14:  JAL       ~Func:set_variable
   18:  LW        A1, 0 (V0)
   1C:  LW        RA, 10 (SP)
   20:  LI        V0, 2
   24:  JR        RA
   28:  ADDIU     SP, SP, 18
}

#new:Function $Function_80219244
{
    0:  ADDIU     SP, SP, FFD8
    4:  SW        S1, 14 (SP)
    8:  COPY      S1, A0
    C:  SW        RA, 20 (SP)
   10:  SW        S3, 1C (SP)
   14:  SW        S2, 18 (SP)
   18:  SW        S0, 10 (SP)
   1C:  LW        S0, C (S1)
   20:  LW        A1, 0 (S0)
   24:  JAL       ~Func:get_variable
   28:  ADDIU     S0, S0, 4
   2C:  LW        A1, 0 (S0)
   30:  ADDIU     S0, S0, 4
   34:  COPY      A0, S1
   38:  JAL       ~Func:get_variable
   3C:  COPY      S3, V0
   40:  LW        A1, 0 (S0)
   44:  ADDIU     S0, S0, 4
   48:  COPY      A0, S1
   4C:  JAL       ~Func:get_variable
   50:  COPY      S2, V0
   54:  COPY      A0, S1
   58:  LW        A1, 0 (S0)
   5C:  JAL       ~Func:get_variable
   60:  COPY      S0, V0
   64:  LW        A0, 148 (S1)
   68:  JAL       ~Func:get_actor
   6C:  COPY      S1, V0
   70:  COPY      V1, V0
   74:  LW        V0, 8 (V1)
   78:  LBU       V0, 24 (V0)
   7C:  LW        A0, 8 (V1)
   80:  SUBU      S3, S3, V0
   84:  SB        S3, 194 (V1)
   88:  LBU       V0, 25 (A0)
   8C:  SUBU      S2, S2, V0
   90:  SB        S2, 195 (V1)
   94:  LBU       V0, 26 (A0)
   98:  SUBU      S0, S0, V0
   9C:  SB        S0, 196 (V1)
   A0:  LBU       A0, 27 (A0)
   A4:  SUBU      S1, S1, A0
   A8:  SB        S1, 197 (V1)
   AC:  LW        RA, 20 (SP)
   B0:  LW        S3, 1C (SP)
   B4:  LW        S2, 18 (SP)
   B8:  LW        S1, 14 (SP)
   BC:  LW        S0, 10 (SP)
   C0:  LI        V0, 2
   C4:  JR        RA
   C8:  ADDIU     SP, SP, 28
}

#new:Function $Function_80219310
{
    0:  ADDIU     SP, SP, FFE0
    4:  SW        S1, 14 (SP)
    8:  COPY      S1, A0
    C:  SW        RA, 18 (SP)
   10:  SW        S0, 10 (SP)
   14:  LW        S0, C (S1)
   18:  LW        A1, 0 (S0)
   1C:  JAL       ~Func:get_variable
   20:  ADDIU     S0, S0, 4
   24:  COPY      A0, S1
   28:  LW        A1, 0 (S0)
   2C:  JAL       ~Func:get_variable
   30:  COPY      S0, V0
   34:  COPY      A0, S0
   38:  JAL       ~Func:start_rumble
   3C:  COPY      A1, V0
   40:  LW        RA, 18 (SP)
   44:  LW        S1, 14 (SP)
   48:  LW        S0, 10 (SP)
   4C:  LI        V0, 2
   50:  JR        RA
   54:  ADDIU     SP, SP, 20
}

#new:Function $Function_80219368
{
    0:  ADDIU     SP, SP, FFE0
    4:  SW        S1, 14 (SP)
    8:  COPY      S1, A0
    C:  SW        RA, 18 (SP)
   10:  SW        S0, 10 (SP)
   14:  LW        S0, C (S1)
   18:  LW        A1, 0 (S0)
   1C:  JAL       ~Func:get_variable
   20:  ADDIU     S0, S0, 4
   24:  COPY      A0, V0
   28:  LI        V0, FF81
   2C:  BNE       A0, V0, .o38
   30:  NOP
   34:  LW        A0, 148 (S1)
        .o38
   38:  JAL       ~Func:get_actor
   3C:  NOP
   40:  COPY      A0, V0
   44:  LBU       V1, 136 (A0)
   48:  LI        V0, 47
   4C:  BEQ       V1, V0, .o7C
   50:  SLT       V0, V1, V0
   54:  BNEL      V0, R0, .o9C
   58:  COPY      A0, S1
   5C:  SLTI      V0, V1, 65
   60:  BEQ       V0, R0, .o98
   64:  SLTI      V0, V1, 4D
   68:  BNE       V0, R0, .o9C
   6C:  COPY      A0, S1
   70:  LW        A1, 0 (S0)
   74:  BEQ       R0, R0, .oA4
   78:  LI        A2, FFFF
        .o7C
   7C:  LW        V1, A8 (A0)
   80:  LI        V0, 1
   84:  BNE       V1, V0, .o9C
   88:  COPY      A0, S1
   8C:  LW        A1, 0 (S0)
   90:  BEQ       R0, R0, .oA4
   94:  LI        A2, FFFF
        .o98
   98:  COPY      A0, S1
        .o9C
   9C:  LW        A1, 0 (S0)
   A0:  CLEAR     A2
        .oA4
   A4:  JAL       ~Func:set_variable
   A8:  NOP
   AC:  LW        RA, 18 (SP)
   B0:  LW        S1, 14 (SP)
   B4:  LW        S0, 10 (SP)
   B8:  LI        V0, 2
   BC:  JR        RA
   C0:  ADDIU     SP, SP, 20
}

#new:Function $Function_8021942C
{
    0:  ADDIU     SP, SP, FFE0
    4:  SW        S1, 14 (SP)
    8:  COPY      S1, A0
    C:  SW        S2, 18 (SP)
   10:  LA        S2, 8010F290
   18:  SW        RA, 1C (SP)
   1C:  SW        S0, 10 (SP)
   20:  LW        S0, C (S1)
   24:  LB        A2, 0 (S2)
   28:  LW        A1, 0 (S0)
   2C:  JAL       ~Func:set_variable
   30:  ADDIU     S0, S0, 4
   34:  LW        A1, 0 (S0)
   38:  LB        A2, 1 (S2)
   3C:  JAL       ~Func:set_variable
   40:  COPY      A0, S1
   44:  LW        RA, 1C (SP)
   48:  LW        S2, 18 (SP)
   4C:  LW        S1, 14 (SP)
   50:  LW        S0, 10 (SP)
   54:  LI        V0, 2
   58:  JR        RA
   5C:  ADDIU     SP, SP, 20
}

#new:Function $Function_8021948C
{
    0:  ADDIU     SP, SP, FFD8
    4:  SW        S3, 1C (SP)
    8:  COPY      S3, A0
    C:  SW        RA, 20 (SP)
   10:  SW        S2, 18 (SP)
   14:  SW        S1, 14 (SP)
   18:  SW        S0, 10 (SP)
   1C:  LW        S0, C (S3)
   20:  LW        A1, 0 (S0)
   24:  JAL       ~Func:get_variable
   28:  ADDIU     S0, S0, 4
   2C:  COPY      S1, V0
   30:  LW        A1, 0 (S0)
   34:  ADDIU     S0, S0, 4
   38:  JAL       ~Func:get_variable
   3C:  COPY      A0, S3
   40:  COPY      S2, V0
   44:  LI        V0, FF81
   48:  BNE       S1, V0, .o54
   4C:  NOP
   50:  LW        S1, 148 (S3)
        .o54
   54:  JAL       ~Func:get_actor
   58:  COPY      A0, S1
   5C:  COPY      A0, V0
   60:  JAL       ~Func:get_actor_part
   64:  COPY      A1, S2
   68:  LW        A0, 78 (V0)
   6C:  JAL       ~Func:lookup_defense
   70:  LI        A1, 1
   74:  COPY      A0, S3
   78:  LW        A1, 0 (S0)
   7C:  JAL       ~Func:set_variable
   80:  COPY      A2, V0
   84:  LW        RA, 20 (SP)
   88:  LW        S3, 1C (SP)
   8C:  LW        S2, 18 (SP)
   90:  LW        S1, 14 (SP)
   94:  LW        S0, 10 (SP)
   98:  LI        V0, 2
   9C:  JR        RA
   A0:  ADDIU     SP, SP, 28
}

#new:DefenseTable $DefenseTable_80219530
{
	.Element:Normal 00000000
	.Element:End
}

#new:StatusTable $StatusTable_8021953C
{
	.Status:Normal      0`
	.Status:Default     0`
	.Status:Sleep      60`
	.Status:Poison     60`
	.Status:Frozen      0`
	.Status:Dizzy     100`
	.Status:Fear        0`
	.Status:Static     80`
	.Status:Paralyze   80`
	.Status:Shrink     75`
	.Status:Stop       85`
	.Status:DefaultTurnMod    0`
	.Status:SleepTurnMod      0`
	.Status:PoisonTurnMod     0`
	.Status:FrozenTurnMod     0`
	.Status:DizzyTurnMod      1`
	.Status:FearTurnMod       0`
	.Status:StaticTurnMod     0`
	.Status:ParalyzeTurnMod   0`
	.Status:ShrinkTurnMod     0`
	.Status:StopTurnMod       0`
	.Status:End
}

#new:PartsTable $PartsTable_802195E8
{
	00800000 01000000 001D00FF $IdleAnimations_80219634 $DefenseTable_80219530 00000000 00000000 010F0000 00000000
}

#new:Actor $Swoopula
{
	% stats
	[Index]        3Ab
	[Level]        22`b
	[MaxHP]         8`b
	[Coins]         1`b
	[Flags]       00000800
	[StatusTable] $StatusTable_8021953C
	% ai
	[PartsCount]    1`s
	[PartsTable]  $PartsTable_802195E8
	[Script]      $Script_Init_802196CC
	% move effectiveness
	[Escape]       30`b
	[Item]         70`b
	[AirLift]      95`b
	[Hurricane]    95`b % Bow's "Spook" as well
	[UpAndAway]    95`b
	[PowerBounce]  80`b
	[SpinSmash]     0`b % weight (0-4)
	% ui positions
	[Size]         31`b  24`b % width height
	[HealthBar]     0`b   0`b % dx dy
	[StatusTurn]  -10`b -20`b % dx dy
	[StatusIcon]   10`b -20`b % dx dy
}

#new:IdleAnimations $IdleAnimations_80219634
{
	.Status:Normal    0034010C
	.Status:Stone     0034010B
	.Status:Sleep     0034010F
	.Status:Poison    0034010C
	.Status:Stop      0034010B
	.Status:Static    0034010C
	.Status:Paralyze  0034010B
	.Status:Dizzy     00340110
	.Status:Fear      00340110
	.Status:End
}

#new:IdleAnimations $IdleAnimations_80219680
{
	.Status:Normal    00340102
	.Status:Stone     00340101
	.Status:Sleep     00340113
	.Status:Poison    00340102
	.Status:Stop      00340101
	.Status:Static    00340102
	.Status:Paralyze  00340101
	.Status:Dizzy     00340114
	.Status:Fear      00340114
	.Status:End
}

#new:Script $Script_Init_802196CC
{
    0:  Call  BindTakeTurn  ( .Actor:Self $Script_TakeTurn_8021C484 )
   14:  Call  BindIdle      ( .Actor:Self $Script_Idle_80219730 )
   28:  Call  BindHandleEvent   ( .Actor:Self $Script_HandleEvent_8021A0E4 )
   3C:  Call  SetActorVar   ( .Actor:Self 00000008 00000000 )
   54:  Return
   5C:  End
}

#new:Script $Script_Idle_80219730
{
    0:  Return
    8:  End
}

#new:Script $Script_80219740
{
    0:  Call  GetActorVar   ( .Actor:Self 00000008 *Var0 )
   18:  Switch  *Var0
   24:  	Case  ==  00000000
   30:  		Call  SetAnimation  ( .Actor:Self 00000001 00340102 )
   48:  		Call  SetActorSpeed ( .Actor:Self *Fixed[8.0] )
   5C:  		Call  SetGoalToHome ( .Actor:Self )
   6C:  		Call  AddGoalPos    ( .Actor:Self  0`  -24`  0` )
   88:  		Call  FlyToGoal     ( .Actor:Self  0`  1` .Easing:SinOut )
   A4:  		Call  SetActorFlagBits  ( .Actor:Self 00000800 .True )
   BC:  		Call  SetIdleAnimations ( .Actor:Self 00000001 $IdleAnimations_80219634 )
   D4:  		Call  SetAnimation  ( .Actor:Self 00000001 0034010C )
   EC:  		Call  GetActorPos   ( .Actor:Self *Var0 *Var1 *Var2 )
  108:  		Add   *Var1  00000018
  118:  		Call  SetActorPos   ( .Actor:Self *Var0 *Var1 *Var2 )
  134:  		Call  HPBarToHome   ( .Actor:Self )
  144:  	Case  ==  00000001
  150:  		Call  SetAnimation  ( .Actor:Self 00000001 00340102 )
  168:  		Call  SetActorSpeed ( .Actor:Self *Fixed[8.0] )
  17C:  		Call  SetGoalToHome ( .Actor:Self )
  18C:  		Call  FlyToGoal     ( .Actor:Self  0`  1` .Easing:SinOut )
  1A8:  EndSwitch
  1B0:  Return
  1B8:  End
}

#new:Script $Script_80219900
{
    0:  Call  UseIdleAnimation  ( .Actor:Self .False )
   14:  Call  EnableIdleScript  ( .Actor:Self 00000000 )
   28:  Call  GetLastEvent      ( .Actor:Self *Var0 )
   3C:  Switch  *Var0
   48:  	CaseOR  ==  .Event:HitCombo % 9
   54:  	CaseOR  ==  .Event:Hit % A
   60:  		SetConst  *Var0  00000001
   70:  		SetConst  *Var1  00340115
   80:  		ExecWait  DoNormalHit
   8C:  	EndCaseGroup
   94:  	Case  ==  .Event:BurnHit % E
   A0:  		SetConst  *Var0  00000001
   B0:  		SetConst  *Var1  00340117
   C0:  		SetConst  *Var2  00340118
   D0:  		ExecWait  DoBurnHit
   DC:  	Case  ==  .Event:BurnDeath % 24
   E8:  		SetConst  *Var0  00000001
   F8:  		SetConst  *Var1  00340117
  108:  		SetConst  *Var2  00340118
  118:  		ExecWait  DoBurnHit
  124:  		SetConst  *Var0  00000001
  134:  		SetConst  *Var1  00340118
  144:  		ExecWait  DoDeath
  150:  		Return
  158:  	Case  ==  .Event:ShockHit % 2F
  164:  		Call  80269470 ( )
  170:  		SetConst  *Var0  00000001
  180:  		SetConst  *Var1  00340115
  190:  		ExecWait  DoShockHit
  19C:  		Call  UseBattleCamPreset    ( 00000002 )
  1AC:  		ExecWait  $Script_80219740
  1B8:  	Case  ==  .Event:ShockDeath % 26
  1C4:  		Call  80269470 ( )
  1D0:  		SetConst  *Var0  00000001
  1E0:  		SetConst  *Var1  00340115
  1F0:  		ExecWait  DoShockHit
  1FC:  		Thread
  204:  			Wait  30`
  210:  			Call  UseBattleCamPreset    ( 00000002 )
  220:  		EndThread
  228:  		SetConst  *Var0  00000001
  238:  		SetConst  *Var1  00340115
  248:  		ExecWait  DoDeath
  254:  		Return
  25C:  	CaseOR  ==  00000017 % 17
  268:  	CaseOR  ==  .Event:Immune % 19
  274:  	CaseOR  ==  .Event:AirLiftFailed % 1F
  280:  		SetConst  *Var0  00000001
  290:  		SetConst  *Var1  00340102
  2A0:  		ExecWait  DoImmune
  2AC:  	EndCaseGroup
  2B4:  	Case  ==  .Event:Death % 20
  2C0:  		SetConst  *Var0  00000001
  2D0:  		SetConst  *Var1  00340115
  2E0:  		ExecWait  DoNormalHit
  2EC:  		Wait  10`
  2F8:  		SetConst  *Var0  00000001
  308:  		SetConst  *Var1  00340115
  318:  		ExecWait  DoDeath
  324:  		Return
  32C:  	Case  ==  .Event:RecoverStatus % 31
  338:  		SetConst  *Var0  00000001
  348:  		SetConst  *Var1  00340102
  358:  		ExecWait  DoRecover
  364:  	Case  ==  .Event:ScareAway % 39
  370:  		Call  SetActorFlagBits  ( .Actor:Self 00000200 .False )
  388:  		SetConst  *Var0  00000001
  398:  		SetConst  *Var1  00340102
  3A8:  		SetConst  *Var2  00340115
  3B8:  		ExecWait  DoScareAway
  3C4:  		Return
  3CC:  	Case  ==  .Event:BeginAirLift % 3A
  3D8:  		SetConst  *Var0  00000001
  3E8:  		SetConst  *Var1  00340102
  3F8:  		ExecWait  DoAirLift
  404:  	Case  ==  .Event:BlowAway % 16
  410:  		SetConst  *Var0  00000001
  420:  		SetConst  *Var1  00340115
  430:  		ExecWait  DoBlowAway
  43C:  		Return
  444:  EndSwitch
  44C:  Call  EnableIdleScript  ( .Actor:Self 00000001 )
  460:  Call  UseIdleAnimation  ( .Actor:Self .True )
  474:  Return
  47C:  End
}

#new:Script $Script_80219D84
{
    0:  Call  8027D32C      ( FFFFFF81 )
   10:  Call  GetLastDamage ( .Actor:Self *Var0 )
   24:  If  *Var0  <=  00000000
   34:  	Return
   3C:  EndIf
   44:  Call  SetActorFlagBits      ( .Actor:Self 00000800 .False )
   5C:  Call  SetAnimation  ( .Actor:Self 00000001 00340102 )
   74:  Call  SetActorDispOffset    ( .Actor:Self 00000000 00000000 00000000 )
   90:  Call  GetActorPos   ( .Actor:Self *Var0 *Var1 *Var2 )
   AC:  Sub   *Var1  00000018
   BC:  Call  SetActorPos   ( .Actor:Self *Var0 *Var1 *Var2 )
   D8:  Call  GetActorVar   ( .Actor:Self 00000000 *VarA )
   F0:  If  *VarA  ==  FFFFFFFF
  100:  	Call  SetHomePos    ( .Actor:Self *Var0  45` *Var2 )
  11C:  	Call  SetActorJumpGravity   ( .Actor:Self *Fixed[0.8] )
  130:  	Call  SetGoalToHome ( .Actor:Self )
  140:  	Call  JumpToGoal    ( .Actor:Self  15` .False .False .False )
  160:  	Call  JumpToGoal    ( .Actor:Self  10` .False .False .False )
  180:  Else
  188:  	Call  SetActorJumpGravity   ( .Actor:Self *Fixed[0.8] )
  19C:  	Call  SetGoalPos    ( .Actor:Self *Var0  45` *Var2 )
  1B8:  	Call  JumpToGoal    ( .Actor:Self  15` .False .False .False )
  1D8:  	Call  GetIndexFromPos       ( .Actor:Self *VarA )
  1EC:  	Mod   *VarA  00000004
  1FC:  	Add   *VarA  00000004
  20C:  	Call  SetGoalToIndex        ( .Actor:Self *VarA )
  220:  	Call  GetGoalPos    ( .Actor:Self *VarA *VarB *VarC )
  23C:  	Call  SetHomePos    ( .Actor:Self *VarA *VarB *VarC )
  258:  	Call  SetActorJumpGravity   ( .Actor:Self *Fixed[0.8] )
  26C:  	Call  SetGoalToHome ( .Actor:Self )
  27C:  	Call  JumpToGoal    ( .Actor:Self  10` .False .False .False )
  29C:  EndIf
  2A4:  Call  8027D4C8  ( FFFFFF81 00000001 00000000 FFFFFFF6 )
  2C0:  Call  SetTargetOffset   ( .Actor:Self 00000001  0`  22` )
  2DC:  Call  $Function_80218000    ( FFFFFFF6 00000014 0000000A 00000014 )
  2F8:  Call  SetIdleAnimations ( .Actor:Self 00000001 $IdleAnimations_80219680 )
  310:  Call  SetActorFlagBits  ( .Actor:Self 00000200 .True )
  328:  Call  HPBarToHome       ( .Actor:Self )
  338:  Call  SetActorVar       ( .Actor:Self 00000008 00000001 )
  350:  Return
  358:  End
}

#new:Script $Script_HandleEvent_8021A0E4
{
    0:  Call  GetActorVar   ( .Actor:Self 00000008 *Var0 )
   18:  If  *Var0  ==  00000001
   28:  	ExecWait  $Script_80219900
   34:  	Return
   3C:  EndIf
   44:  Call  UseIdleAnimation  ( .Actor:Self .False )
   58:  Call  EnableIdleScript  ( .Actor:Self 00000000 )
   6C:  Call  GetLastEvent      ( .Actor:Self *Var0 )
   80:  Switch  *Var0
   8C:  	Case  ==  .Event:HitCombo % 9
   98:  		Call  GetBattlePhase    ( *Var0 )
   A8:  		If  *Var0  ==  00000001
   B8:  			SetConst  *Var0  00000001
   C8:  			SetConst  *Var1  00340115
   D8:  			ExecWait  DoNormalHit
   E4:  		Else
   EC:  			SetConst  *Var0  00000001
   FC:  			SetConst  *Var1  0034010E
  10C:  			ExecWait  DoNormalHit
  118:  		EndIf
  120:  	Case  ==  .Event:Hit % A
  12C:  		Call  GetBattlePhase    ( *Var0 )
  13C:  		If  *Var0  ==  00000001
  14C:  			SetConst  *Var0  00000001
  15C:  			SetConst  *Var1  00340115
  16C:  			ExecWait  DoNormalHit
  178:  		Else
  180:  			SetConst  *Var0  00000001
  190:  			SetConst  *Var1  0034010E
  1A0:  			ExecWait  DoNormalHit
  1AC:  			ExecWait  $Script_80219D84
  1B8:  		EndIf
  1C0:  	Case  ==  .Event:BurnHit % E
  1CC:  		Call  GetBattlePhase    ( *Var0 )
  1DC:  		If  *Var0  ==  00000001
  1EC:  			SetConst  *Var0  00000001
  1FC:  			SetConst  *Var1  00340117
  20C:  			SetConst  *Var2  00340118
  21C:  			ExecWait  DoBurnHit
  228:  		Else
  230:  			SetConst  *Var0  00000001
  240:  			SetConst  *Var1  00340111
  250:  			SetConst  *Var2  00340112
  260:  			ExecWait  DoBurnHit
  26C:  			ExecWait  $Script_80219D84
  278:  		EndIf
  280:  	Case  ==  .Event:BurnDeath % 24
  28C:  		Call  GetBattlePhase    ( *Var0 )
  29C:  		If  *Var0  ==  00000001
  2AC:  			SetConst  *Var0  00000001
  2BC:  			SetConst  *Var1  00340117
  2CC:  			SetConst  *Var2  00340118
  2DC:  			ExecWait  DoBurnHit
  2E8:  			SetConst  *Var0  00000001
  2F8:  			SetConst  *Var1  00340118
  308:  			ExecWait  DoDeath
  314:  		Else
  31C:  			SetConst  *Var0  00000001
  32C:  			SetConst  *Var1  00340111
  33C:  			SetConst  *Var2  00340112
  34C:  			ExecWait  DoBurnHit
  358:  			SetConst  *Var0  00000001
  368:  			SetConst  *Var1  00340112
  378:  			ExecWait  DoDeath
  384:  		EndIf
  38C:  		Return
  394:  	Case  ==  .Event:ShockHit % 2F
  3A0:  		Call  80269470 ( )
  3AC:  		SetConst  *Var0  00000001
  3BC:  		SetConst  *Var1  00340115
  3CC:  		ExecWait  8029A76C
  3D8:  		Call  UseBattleCamPreset    ( 00000002 )
  3E8:  		ExecWait  $Script_80219740
  3F4:  	Case  ==  .Event:ShockDeath % 26
  400:  		Call  80269470 ( )
  40C:  		SetConst  *Var0  00000001
  41C:  		SetConst  *Var1  00340115
  42C:  		ExecWait  8029A76C
  438:  		Thread
  440:  			Wait  30`
  44C:  			Call  UseBattleCamPreset    ( 00000002 )
  45C:  		EndThread
  464:  		SetConst  *Var0  00000001
  474:  		SetConst  *Var1  00340115
  484:  		ExecWait  DoDeath
  490:  		Return
  498:  	CaseOR  ==  00000017 % 17
  4A4:  	CaseOR  ==  .Event:Immune % 19
  4B0:  		SetConst  *Var0  00000001
  4C0:  		SetConst  *Var1  0034010C
  4D0:  		ExecWait  DoImmune
  4DC:  	EndCaseGroup
  4E4:  	Case  ==  .Event:Death % 20
  4F0:  		Call  GetBattlePhase    ( *Var0 )
  500:  		If  *Var0  ==  00000001
  510:  			SetConst  *Var0  00000001
  520:  			SetConst  *Var1  00340115
  530:  			ExecWait  DoNormalHit
  53C:  			Wait  10`
  548:  			SetConst  *Var0  00000001
  558:  			SetConst  *Var1  00340115
  568:  			ExecWait  DoDeath
  574:  		Else
  57C:  			SetConst  *Var0  00000001
  58C:  			SetConst  *Var1  0034010E
  59C:  			ExecWait  DoNormalHit
  5A8:  			Wait  10`
  5B4:  			SetConst  *Var0  00000001
  5C4:  			SetConst  *Var1  0034010E
  5D4:  			ExecWait  DoDeath
  5E0:  		EndIf
  5E8:  		Return
  5F0:  	Case  ==  .Event:BeginFirstStrike % 38
  5FC:  		Call  SetActorFlagBits  ( .Actor:Self 00000800 .False )
  614:  		Call  SetIdleAnimations ( .Actor:Self 00000001 $IdleAnimations_80219680 )
  62C:  		Call  SetAnimation      ( .Actor:Self 00000001 00340102 )
  644:  		Call  SetActorPos       ( .Actor:Self  20`  0`  0` )
  660:  		Call  HPBarToCurrent    ( .Actor:Self )
  670:  	Case  ==  .Event:EndFirstStrike % 35
  67C:  		ExecWait  $Script_80219740
  688:  		Call  HPBarToHome   ( .Actor:Self )
  698:  	Case  ==  .Event:RecoverStatus % 31
  6A4:  	Case  ==  .Event:ScareAway % 39
  6B0:  		Call  SetActorFlagBits      ( .Actor:Self 00000200 .True )
  6C8:  		Call  SetActorFlagBits      ( .Actor:Self 00000800 .False )
  6E0:  		Call  SetActorDispOffset    ( .Actor:Self 00000000 FFFFFFE8 00000000 )
  6FC:  		SetConst  *Var0  00000001
  70C:  		SetConst  *Var1  00340102
  71C:  		SetConst  *Var2  00340115
  72C:  		ExecWait  DoScareAway
  738:  		Return
  740:  EndSwitch
  748:  Call  EnableIdleScript  ( .Actor:Self 00000001 )
  75C:  Call  UseIdleAnimation  ( .Actor:Self .True )
  770:  Return
  778:  End
}

#new:Script $Script_8021A864
{
    0:  Call  UseIdleAnimation  ( .Actor:Self .False )
   14:  Call  EnableIdleScript  ( .Actor:Self 00000000 )
   28:  Call  SetTargetActor    ( .Actor:Self .Actor:Player )
   3C:  Call  GetBattlePhase    ( *Var0 )
   4C:  If  *Var0  ==  00000001
   5C:  	Call  SetAnimation  ( .Actor:Self 00000001 00340102 )
   74:  	Call  SetGoalToTarget   ( .Actor:Self )
   84:  	Call  AddGoalPos    ( .Actor:Self  50`  10`  0` )
   A0:  	Call  SetActorSpeed ( .Actor:Self *Fixed[8.0] )
   B4:  	Call  GetGoalPos    ( .Actor:Self *Var0 *Var1 *Var2 )
   D0:  	Call  SetActorPos   ( .Actor:Self *Var0 *Var1 *Var2 )
   EC:  Else
   F4:  	Call  UseBattleCamPreset    ( 0000003F )
  104:  	Call  BattleCamTargetActor  ( .Actor:Self )
  114:  	Call  8024ECF8      ( FFFFFFFF 00000001 00000000 )
  12C:  	Call  SetAnimation  ( .Actor:Self 00000001 00340102 )
  144:  	Call  SetGoalToTarget       ( .Actor:Self )
  154:  	Call  AddGoalPos    ( .Actor:Self  50`  10`  0` )
  170:  	Call  SetActorSpeed ( .Actor:Self *Fixed[8.0] )
  184:  	Call  FlyToGoal     ( .Actor:Self  0`  -4` .Easing:Linear )
  1A0:  EndIf
  1A8:  Call  EnemyTestTarget   ( .Actor:Self *Var0 ~Flags:DamageType:IgnoreDefense 00000000 00000002 00000010 )
  1CC:  Switch  *Var0
  1D8:  	CaseOR  ==  .HitResult:Miss % 6
  1E4:  	CaseOR  ==  .HitResult:Lucky % 5
  1F0:  		Set   *VarA  *Var0
  200:  		Wait  10`
  20C:  		Call  SetActorSpeed ( .Actor:Self *Fixed[5.0] )
  220:  		Call  SetActorJumpGravity   ( .Actor:Self *Fixed[1.8] )
  234:  		Call  SetAnimation  ( .Actor:Self 00000001 00340106 )
  24C:  		Call  GetActorPos   ( .Actor:Self *Var0 *Var1 *Var2 )
  268:  		Call  SetGoalPos    ( .Actor:Self *Var0 *Var1 *Var2 )
  284:  		Call  JumpToGoal    ( .Actor:Self  10` .False .False .False )
  2A4:  		Call  SetGoalToTarget   ( .Actor:Self )
  2B4:  		Call  GetGoalPos    ( .Actor:Self *Var0 *Var1 *Var2 )
  2D0:  		Sub   *Var0  00000032
  2E0:  		Call  SetGoalPos    ( .Actor:Self *Var0 *Var1 *Var2 )
  2FC:  		Call  SetActorSpeed ( .Actor:Self *Fixed[8.0] )
  310:  		Call  SetAnimation  ( .Actor:Self 00000001 00340106 )
  328:  		Call  FlyToGoal     ( .Actor:Self  0`  -10` .Easing:Linear )
  344:  		Call  SetAnimationRate  ( .Actor:Self 00000001 *Fixed[10.0] )
  35C:  		Wait  15`
  368:  		Call  SetAnimationRate  ( .Actor:Self 00000001 *Fixed[1.0] )
  380:  		If  *VarA  ==  .HitResult:Lucky % 5
  390:  			Call  EnemyTestTarget   ( .Actor:Self *Var0 ~Flags:DamageType:TriggerLucky 00000000 00000000 00000000 )
  3B4:  		EndIf
  3BC:  		Call  YieldTurn ( )
  3C8:  		Call  UseBattleCamPreset    ( 00000002 )
  3D8:  		Call  SetActorYaw   ( .Actor:Self  180` )
  3EC:  		Call  AddActorDecoration    ( .Actor:Self 00000001 00000000 .Decoration:Sweat )
  408:  		ExecWait  $Script_80219740
  414:  		Call  RemoveActorDecoration ( .Actor:Self 00000001 00000000 )
  42C:  		Call  SetActorYaw   ( .Actor:Self  0` )
  440:  		Call  EnableIdleScript      ( .Actor:Self 00000001 )
  454:  		Call  UseIdleAnimation      ( .Actor:Self .True )
  468:  		Return
  470:  	EndCaseGroup
  478:  	Case  ==  .HitResult:HitStatic % 7
  484:  		Call  GetStatusFlags    ( .Actor:Self *Var0 )
  498:  		If  *Var0  &  ~Flags:StatusFlags:Static % 2000
  4A8:  			Set   *Flag[00]  .False
  4B8:  		Else
  4C0:  			Set   *Flag[00]  .True
  4D0:  		EndIf
  4D8:  EndSwitch
  4E0:  Wait  10`
  4EC:  Call  SetActorSpeed ( .Actor:Self *Fixed[5.0] )
  500:  Call  SetActorJumpGravity   ( .Actor:Self *Fixed[1.8] )
  514:  Call  SetAnimation  ( .Actor:Self 00000001 00340106 )
  52C:  Call  GetActorPos   ( .Actor:Self *Var0 *Var1 *Var2 )
  548:  Call  SetGoalPos    ( .Actor:Self *Var0 *Var1 *Var2 )
  564:  Call  JumpToGoal    ( .Actor:Self  10` .False .False .False )
  584:  Call  SetGoalToTarget       ( .Actor:Self )
  594:  Call  AddGoalPos    ( .Actor:Self  -4`  -8`  -15` )
  5B0:  Call  SetActorSpeed ( .Actor:Self *Fixed[8.0] )
  5C4:  Call  SetAnimation  ( .Actor:Self 00000001 00340106 )
  5DC:  Call  FlyToGoal     ( .Actor:Self  0`  -10` .Easing:Linear )
  5F8:  If  *Flag[00]  ==  .True
  608:  	Call  EnemyDamageTarget ( .Actor:Self *Var0 ~Flags:DamageType:IgnoreDefense 00000000 00000000 00000000 00000020 )
  630:  	Return
  638:  EndIf
  640:  Call  GetStatusFlags    ( .Actor:Player *Var0 )
  654:  If  *Var0  &  ~Flags:StatusFlags:Stone % 100000
  664:  	Wait  10`
  670:  	Loop  00000002
  67C:  		Call  SetAnimation  ( .Actor:Self 00000001 00340102 )
  694:  		Wait  21`
  6A0:  		Loop  00000002
  6AC:  			Call  PlaySoundAtActor  ( .Actor:Self 000003E0 )
  6C0:  			Call  SetActorScale ( .Actor:Self *Fixed[1.0] *Fixed[1.0] *Fixed[1.0] )
  6DC:  			Wait  1`
  6E8:  			Call  SetActorScale ( .Actor:Self *Fixed[0.9] *Fixed[1.2] *Fixed[1.0] )
  704:  			Wait  1`
  710:  			Call  SetActorScale ( .Actor:Self *Fixed[0.8] *Fixed[1.3] *Fixed[1.0] )
  72C:  			Wait  1`
  738:  			Call  SetActorScale ( .Actor:Self *Fixed[0.7] *Fixed[1.4] *Fixed[1.0] )
  754:  			Wait  1`
  760:  			Call  SetActorScale ( .Actor:Self *Fixed[0.7] *Fixed[1.5] *Fixed[1.0] )
  77C:  			Wait  1`
  788:  			Call  SetActorScale ( .Actor:Self *Fixed[0.7] *Fixed[1.4] *Fixed[1.0] )
  7A4:  			Wait  1`
  7B0:  			Call  SetActorScale ( .Actor:Self *Fixed[0.8] *Fixed[1.3] *Fixed[1.0] )
  7CC:  			Wait  1`
  7D8:  			Call  SetActorScale ( .Actor:Self *Fixed[0.9] *Fixed[1.2] *Fixed[1.0] )
  7F4:  			Wait  1`
  800:  			Call  SetActorScale ( .Actor:Self *Fixed[1.0] *Fixed[1.0] *Fixed[1.0] )
  81C:  			Wait  1`
  828:  		EndLoop
  830:  		Wait  5`
  83C:  		Call  SetActorScale ( .Actor:Self *Fixed[1.0] *Fixed[1.0] *Fixed[1.0] )
  858:  		Wait  1`
  864:  		Call  SetActorScale ( .Actor:Self *Fixed[0.9] *Fixed[1.2] *Fixed[1.0] )
  880:  		Wait  1`
  88C:  		Call  SetActorScale ( .Actor:Self *Fixed[0.8] *Fixed[1.3] *Fixed[1.0] )
  8A8:  		Wait  1`
  8B4:  		Call  SetActorScale ( .Actor:Self *Fixed[0.7] *Fixed[1.4] *Fixed[1.0] )
  8D0:  		Wait  1`
  8DC:  		Call  SetActorScale ( .Actor:Self *Fixed[0.7] *Fixed[1.5] *Fixed[1.0] )
  8F8:  		Wait  2`
  904:  		Call  SetActorScale ( .Actor:Self *Fixed[0.6] *Fixed[1.6] *Fixed[1.0] )
  920:  		Wait  10`
  92C:  		Call  SetActorScale ( .Actor:Self *Fixed[1.0] *Fixed[1.0] *Fixed[1.0] )
  948:  		Wait  2`
  954:  		Call  EnemyDamageTarget ( .Actor:Self *Var0 ~Flags:DamageType:IgnoreDefense 00000000 00000000 00000002 00000040 )
  97C:  		Wait  30`
  988:  	EndLoop
  990:  Else
  998:  	Call  ShowMessageBox    ( 00000031 00007FFF )
  9AC:  	Call  802694A4  ( 00000001 )
  9BC:  	Call  LoadActionCommand ( .ActionCommand:StopLeech )
  9CC:  	Call  802A9000 ( )
  9D8:  	Call  SetupMashMeter    ( 00000001 0000001E 00000000 00000000 00000000 00000000 )
  9FC:  	Wait  10`
  A08:  	Call  SetBattleFlagBits ( 00004000 .False )
  A1C:  	Call  802A9110  ( 00000000 00007FFF 00000003 )
  A34:  	Set   *VarD  00000000
  A44:  	Loop  00000005
  A50:  		Call  SetAnimation  ( .Actor:Self 00000001 00340102 )
  A68:  		Set   *Flag[00]  .False
  A78:  		Loop  00000015
  A84:  			Call  GetActionSuccessCopy  ( *Var1 )
  A94:  			If  *Var1  ==  00000001
  AA4:  				Set   *Flag[00]  .True
  AB4:  				BreakLoop
  ABC:  			EndIf
  AC4:  			Wait  1`
  AD0:  		EndLoop
  AD8:  		If  *Flag[00]  ==  .True
  AE8:  			Call  UseIdleAnimation  ( .Actor:Player .True )
  AFC:  			BreakLoop
  B04:  		EndIf
  B0C:  		Call  UseIdleAnimation  ( .Actor:Player .False )
  B20:  		Call  SetAnimation      ( .Actor:Player 00000000 0003000C )
  B38:  		Loop  00000002
  B44:  			Call  PlaySoundAtActor  ( .Actor:Self 000003E0 )
  B58:  			Call  SetActorScale     ( .Actor:Self *Fixed[1.0] *Fixed[1.0] *Fixed[1.0] )
  B74:  			Set   *Flag[00]  .False
  B84:  			Loop  00000001
  B90:  				Call  GetActionSuccessCopy  ( *Var1 )
  BA0:  				If  *Var1  ==  00000001
  BB0:  					Set   *Flag[00]  .True
  BC0:  					BreakLoop
  BC8:  				EndIf
  BD0:  				Wait  1`
  BDC:  			EndLoop
  BE4:  			If  *Flag[00]  ==  .True
  BF4:  				Call  UseIdleAnimation  ( .Actor:Player .True )
  C08:  				BreakLoop
  C10:  			EndIf
  C18:  			Call  SetActorScale ( .Actor:Self *Fixed[0.9] *Fixed[1.2] *Fixed[1.0] )
  C34:  			Set   *Flag[00]  .False
  C44:  			Loop  00000001
  C50:  				Call  GetActionSuccessCopy  ( *Var1 )
  C60:  				If  *Var1  ==  00000001
  C70:  					Set   *Flag[00]  .True
  C80:  					BreakLoop
  C88:  				EndIf
  C90:  				Wait  1`
  C9C:  			EndLoop
  CA4:  			If  *Flag[00]  ==  .True
  CB4:  				Call  UseIdleAnimation  ( .Actor:Player .True )
  CC8:  				BreakLoop
  CD0:  			EndIf
  CD8:  			Call  SetActorScale ( .Actor:Self *Fixed[0.8] *Fixed[1.3] *Fixed[1.0] )
  CF4:  			Set   *Flag[00]  .False
  D04:  			Loop  00000001
  D10:  				Call  GetActionSuccessCopy  ( *Var1 )
  D20:  				If  *Var1  ==  00000001
  D30:  					Set   *Flag[00]  .True
  D40:  					BreakLoop
  D48:  				EndIf
  D50:  				Wait  1`
  D5C:  			EndLoop
  D64:  			If  *Flag[00]  ==  .True
  D74:  				Call  UseIdleAnimation  ( .Actor:Player .True )
  D88:  				BreakLoop
  D90:  			EndIf
  D98:  			Call  SetActorScale ( .Actor:Self *Fixed[0.7] *Fixed[1.4] *Fixed[1.0] )
  DB4:  			Set   *Flag[00]  .False
  DC4:  			Loop  00000001
  DD0:  				Call  GetActionSuccessCopy  ( *Var1 )
  DE0:  				If  *Var1  ==  00000001
  DF0:  					Set   *Flag[00]  .True
  E00:  					BreakLoop
  E08:  				EndIf
  E10:  				Wait  1`
  E1C:  			EndLoop
  E24:  			If  *Flag[00]  ==  .True
  E34:  				Call  UseIdleAnimation  ( .Actor:Player .True )
  E48:  				BreakLoop
  E50:  			EndIf
  E58:  			Call  SetActorScale ( .Actor:Self *Fixed[0.7] *Fixed[1.5] *Fixed[1.0] )
  E74:  			Set   *Flag[00]  .False
  E84:  			Loop  00000001
  E90:  				Call  GetActionSuccessCopy  ( *Var1 )
  EA0:  				If  *Var1  ==  00000001
  EB0:  					Set   *Flag[00]  .True
  EC0:  					BreakLoop
  EC8:  				EndIf
  ED0:  				Wait  1`
  EDC:  			EndLoop
  EE4:  			If  *Flag[00]  ==  .True
  EF4:  				Call  UseIdleAnimation  ( .Actor:Player .True )
  F08:  				BreakLoop
  F10:  			EndIf
  F18:  			Call  SetActorScale ( .Actor:Self *Fixed[0.7] *Fixed[1.4] *Fixed[1.0] )
  F34:  			Set   *Flag[00]  .False
  F44:  			Loop  00000001
  F50:  				Call  GetActionSuccessCopy  ( *Var1 )
  F60:  				If  *Var1  ==  00000001
  F70:  					Set   *Flag[00]  .True
  F80:  					BreakLoop
  F88:  				EndIf
  F90:  				Wait  1`
  F9C:  			EndLoop
  FA4:  			If  *Flag[00]  ==  .True
  FB4:  				Call  UseIdleAnimation  ( .Actor:Player .True )
  FC8:  				BreakLoop
  FD0:  			EndIf
  FD8:  			Call  SetActorScale ( .Actor:Self *Fixed[0.8] *Fixed[1.3] *Fixed[1.0] )
  FF4:  			Set   *Flag[00]  .False
 1004:  			Loop  00000001
 1010:  				Call  GetActionSuccessCopy  ( *Var1 )
 1020:  				If  *Var1  ==  00000001
 1030:  					Set   *Flag[00]  .True
 1040:  					BreakLoop
 1048:  				EndIf
 1050:  				Wait  1`
 105C:  			EndLoop
 1064:  			If  *Flag[00]  ==  .True
 1074:  				Call  UseIdleAnimation  ( .Actor:Player .True )
 1088:  				BreakLoop
 1090:  			EndIf
 1098:  			Call  SetActorScale ( .Actor:Self *Fixed[0.9] *Fixed[1.2] *Fixed[1.0] )
 10B4:  			Set   *Flag[00]  .False
 10C4:  			Loop  00000001
 10D0:  				Call  GetActionSuccessCopy  ( *Var1 )
 10E0:  				If  *Var1  ==  00000001
 10F0:  					Set   *Flag[00]  .True
 1100:  					BreakLoop
 1108:  				EndIf
 1110:  				Wait  1`
 111C:  			EndLoop
 1124:  			If  *Flag[00]  ==  .True
 1134:  				Call  UseIdleAnimation  ( .Actor:Player .True )
 1148:  				BreakLoop
 1150:  			EndIf
 1158:  			Call  SetActorScale ( .Actor:Self *Fixed[1.0] *Fixed[1.0] *Fixed[1.0] )
 1174:  			Set   *Flag[00]  .False
 1184:  			Loop  00000001
 1190:  				Call  GetActionSuccessCopy  ( *Var1 )
 11A0:  				If  *Var1  ==  00000001
 11B0:  					Set   *Flag[00]  .True
 11C0:  					BreakLoop
 11C8:  				EndIf
 11D0:  				Wait  1`
 11DC:  			EndLoop
 11E4:  			If  *Flag[00]  ==  .True
 11F4:  				Call  UseIdleAnimation  ( .Actor:Player .True )
 1208:  				BreakLoop
 1210:  			EndIf
 1218:  		EndLoop
 1220:  		If  *Flag[00]  ==  .True
 1230:  			BreakLoop
 1238:  		EndIf
 1240:  		Set   *Flag[00]  .False
 1250:  		Loop  00000005
 125C:  			Call  GetActionSuccessCopy  ( *Var1 )
 126C:  			If  *Var1  ==  00000001
 127C:  				Set   *Flag[00]  .True
 128C:  				BreakLoop
 1294:  			EndIf
 129C:  			Wait  1`
 12A8:  		EndLoop
 12B0:  		If  *Flag[00]  ==  .True
 12C0:  			Call  UseIdleAnimation  ( .Actor:Player .True )
 12D4:  			BreakLoop
 12DC:  		EndIf
 12E4:  		Call  PlaySoundAtActor  ( .Actor:Self 000003E0 )
 12F8:  		Call  SetActorScale     ( .Actor:Self *Fixed[1.0] *Fixed[1.0] *Fixed[1.0] )
 1314:  		Set   *Flag[00]  .False
 1324:  		Loop  00000001
 1330:  			Call  GetActionSuccessCopy  ( *Var1 )
 1340:  			If  *Var1  ==  00000001
 1350:  				Set   *Flag[00]  .True
 1360:  				BreakLoop
 1368:  			EndIf
 1370:  			Wait  1`
 137C:  		EndLoop
 1384:  		If  *Flag[00]  ==  .True
 1394:  			Call  UseIdleAnimation  ( .Actor:Player .True )
 13A8:  			BreakLoop
 13B0:  		EndIf
 13B8:  		Call  SetActorScale ( .Actor:Self *Fixed[0.9] *Fixed[1.2] *Fixed[1.0] )
 13D4:  		Set   *Flag[00]  .False
 13E4:  		Loop  00000001
 13F0:  			Call  GetActionSuccessCopy  ( *Var1 )
 1400:  			If  *Var1  ==  00000001
 1410:  				Set   *Flag[00]  .True
 1420:  				BreakLoop
 1428:  			EndIf
 1430:  			Wait  1`
 143C:  		EndLoop
 1444:  		If  *Flag[00]  ==  .True
 1454:  			Call  UseIdleAnimation  ( .Actor:Player .True )
 1468:  			BreakLoop
 1470:  		EndIf
 1478:  		Call  SetActorScale ( .Actor:Self *Fixed[0.8] *Fixed[1.3] *Fixed[1.0] )
 1494:  		Set   *Flag[00]  .False
 14A4:  		Loop  00000001
 14B0:  			Call  GetActionSuccessCopy  ( *Var1 )
 14C0:  			If  *Var1  ==  00000001
 14D0:  				Set   *Flag[00]  .True
 14E0:  				BreakLoop
 14E8:  			EndIf
 14F0:  			Wait  1`
 14FC:  		EndLoop
 1504:  		If  *Flag[00]  ==  .True
 1514:  			Call  UseIdleAnimation  ( .Actor:Player .True )
 1528:  			BreakLoop
 1530:  		EndIf
 1538:  		Call  SetActorScale ( .Actor:Self *Fixed[0.7] *Fixed[1.4] *Fixed[1.0] )
 1554:  		Set   *Flag[00]  .False
 1564:  		Loop  00000001
 1570:  			Call  GetActionSuccessCopy  ( *Var1 )
 1580:  			If  *Var1  ==  00000001
 1590:  				Set   *Flag[00]  .True
 15A0:  				BreakLoop
 15A8:  			EndIf
 15B0:  			Wait  1`
 15BC:  		EndLoop
 15C4:  		If  *Flag[00]  ==  .True
 15D4:  			Call  UseIdleAnimation  ( .Actor:Player .True )
 15E8:  			BreakLoop
 15F0:  		EndIf
 15F8:  		Call  SetActorScale ( .Actor:Self *Fixed[0.7] *Fixed[1.5] *Fixed[1.0] )
 1614:  		Set   *Flag[00]  .False
 1624:  		Loop  00000002
 1630:  			Call  GetActionSuccessCopy  ( *Var1 )
 1640:  			If  *Var1  ==  00000001
 1650:  				Set   *Flag[00]  .True
 1660:  				BreakLoop
 1668:  			EndIf
 1670:  			Wait  1`
 167C:  		EndLoop
 1684:  		If  *Flag[00]  ==  .True
 1694:  			Call  UseIdleAnimation  ( .Actor:Player .True )
 16A8:  			BreakLoop
 16B0:  		EndIf
 16B8:  		Call  SetActorScale ( .Actor:Self *Fixed[0.6] *Fixed[1.6] *Fixed[1.0] )
 16D4:  		Set   *Flag[00]  .False
 16E4:  		Loop  0000000A
 16F0:  			Call  GetActionSuccessCopy  ( *Var1 )
 1700:  			If  *Var1  ==  00000001
 1710:  				Set   *Flag[00]  .True
 1720:  				BreakLoop
 1728:  			EndIf
 1730:  			Wait  1`
 173C:  		EndLoop
 1744:  		If  *Flag[00]  ==  .True
 1754:  			Call  UseIdleAnimation  ( .Actor:Player .True )
 1768:  			BreakLoop
 1770:  		EndIf
 1778:  		Call  SetActorScale ( .Actor:Self *Fixed[1.0] *Fixed[1.0] *Fixed[1.0] )
 1794:  		Set   *Flag[00]  .False
 17A4:  		Loop  00000002
 17B0:  			Call  GetActionSuccessCopy  ( *Var1 )
 17C0:  			If  *Var1  ==  00000001
 17D0:  				Set   *Flag[00]  .True
 17E0:  				BreakLoop
 17E8:  			EndIf
 17F0:  			Wait  1`
 17FC:  		EndLoop
 1804:  		If  *Flag[00]  ==  .True
 1814:  			Call  UseIdleAnimation  ( .Actor:Player .True )
 1828:  			BreakLoop
 1830:  		EndIf
 1838:  		Call  UseIdleAnimation  ( .Actor:Player .True )
 184C:  		Call  EnemyDamageTarget ( .Actor:Self *Var0 ~Flags:DamageType:Unblockable|IgnoreDefense 00000000 00000000 00000002 00000040 )
 1874:  		Call  GetLastDamage     ( .Actor:Player *Var3 )
 1888:  		If  *Var3  !=  00000000
 1898:  			Call  PlaySoundAtActor  ( .Actor:Self 0000206D )
 18AC:  			Call  PlaySoundAtActor  ( .Actor:Self 00000214 )
 18C0:  			Call  GetActorPos       ( .Actor:Self *Var0 *Var1 *Var2 )
 18DC:  			Add   *Var1  0000000F
 18EC:  			Call  $Function_802180CC    ( *Var0 *Var1 *Var2 *Var3 )
 1908:  			Thread
 1910:  				Wait  15`
 191C:  				Call  PlaySoundAtActor      ( .Actor:Self 0000025C )
 1930:  				Call  $Function_80218180    ( *Var0 *Var1 *Var2 *Var3 )
 194C:  			EndThread
 1954:  			Add   *Var0  00000014
 1964:  			Add   *Var1  00000014
 1974:  			Call  PlayEffect    ( ~FX:Recover:HP *Var0 *Var1 *Var2 *Var3 00000000 00000000 00000000 00000000 00000000 00000000 00000000 00000000 )
 19B8:  			Call  GetActorHP    ( .Actor:Self *Var0 )
 19CC:  			Add   *Var0  *Var3
 19DC:  			Call  SetEnemyHP    ( .Actor:Self *Var0 )
 19F0:  		Else
 19F8:  			Add   *VarD  00000001
 1A08:  			If  *VarD  >  00000001
 1A18:  				Call  80269470 ( )
 1A24:  				BreakLoop
 1A2C:  			EndIf
 1A34:  		EndIf
 1A3C:  		Call  GetPlayerHP   ( *Var1 )
 1A4C:  		If  *Var1  ==  00000000
 1A5C:  			Call  80269470 ( )
 1A68:  			BreakLoop
 1A70:  		EndIf
 1A78:  		Set   *Flag[00]  .False
 1A88:  		Loop  0000001E
 1A94:  			Call  GetActionSuccessCopy  ( *Var1 )
 1AA4:  			If  *Var1  ==  00000001
 1AB4:  				Set   *Flag[00]  .True
 1AC4:  				BreakLoop
 1ACC:  			EndIf
 1AD4:  			Wait  1`
 1AE0:  		EndLoop
 1AE8:  		If  *Flag[00]  ==  .True
 1AF8:  			BreakLoop
 1B00:  		EndIf
 1B08:  	EndLoop
 1B10:  	Call  80269470 ( )
 1B1C:  	Call  SetActorScale ( .Actor:Self *Fixed[1.0] *Fixed[1.0] *Fixed[1.0] )
 1B38:  EndIf
 1B40:  Call  UseBattleCamPreset    ( 00000002 )
 1B50:  Call  SetGoalToTarget   ( .Actor:Self )
 1B60:  Call  AddGoalPos        ( .Actor:Self  50`  10`  0` )
 1B7C:  Call  SetActorSpeed     ( .Actor:Self *Fixed[8.0] )
 1B90:  Call  SetAnimation      ( .Actor:Self 00000001 00340102 )
 1BA8:  Call  FlyToGoal ( .Actor:Self  0`  -10` .Easing:Linear )
 1BC4:  Wait  10`
 1BD0:  Call  YieldTurn ( )
 1BDC:  ExecWait  $Script_80219740
 1BE8:  Call  EnableIdleScript  ( .Actor:Self 00000001 )
 1BFC:  Call  UseIdleAnimation  ( .Actor:Self .True )
 1C10:  Return
 1C18:  End
}

#new:Script $Script_TakeTurn_8021C484
{
    0:  Call  GetActorVar   ( .Actor:Self 00000008 *Var0 )
   18:  If  *Var0  ==  00000001
   28:  	ExecWait  $Script_8021A864
   34:  	Return
   3C:  EndIf
   44:  Call  UseIdleAnimation  ( .Actor:Self .False )
   58:  Call  EnableIdleScript  ( .Actor:Self 00000000 )
   6C:  Call  SetTargetActor    ( .Actor:Self .Actor:Player )
   80:  Call  UseBattleCamPreset    ( 0000003F )
   90:  Call  BattleCamTargetActor  ( .Actor:Self )
   A0:  Call  8024ECF8  ( FFFFFFFF 00000001 00000000 )
   B8:  Call  SetAnimation      ( .Actor:Self 00000001 00340102 )
   D0:  Call  SetActorFlagBits  ( .Actor:Self 00000800 .False )
   E8:  Call  GetActorPos       ( .Actor:Self *Var0 *Var1 *Var2 )
  104:  Sub   *Var1  00000018
  114:  Call  SetActorPos       ( .Actor:Self *Var0 *Var1 *Var2 )
  130:  Call  EnemyTestTarget   ( .Actor:Self *Var0 ~Flags:DamageType:IgnoreDefense 00000000 00000002 00000010 )
  154:  Switch  *Var0
  160:  	CaseOR  ==  .HitResult:Miss % 6
  16C:  	CaseOR  ==  .HitResult:Lucky % 5
  178:  		Set   *VarA  *Var0
  188:  		Wait  10`
  194:  		Call  SetActorSpeed ( .Actor:Self *Fixed[5.0] )
  1A8:  		Call  SetActorJumpGravity   ( .Actor:Self *Fixed[1.8] )
  1BC:  		Call  SetAnimation  ( .Actor:Self 00000001 00340106 )
  1D4:  		Call  SetGoalToTarget   ( .Actor:Self )
  1E4:  		Call  GetGoalPos    ( .Actor:Self *Var0 *Var1 *Var2 )
  200:  		Call  AddGoalPos    ( .Actor:Self  -50`  0`  0` )
  21C:  		Call  SetActorSpeed ( .Actor:Self *Fixed[8.0] )
  230:  		Call  SetAnimation  ( .Actor:Self 00000001 00340106 )
  248:  		Call  FlyToGoal     ( .Actor:Self  0`  -40` .Easing:Linear )
  264:  		Call  SetAnimationRate  ( .Actor:Self 00000001 *Fixed[10.0] )
  27C:  		Wait  15`
  288:  		Call  SetAnimationRate  ( .Actor:Self 00000001 *Fixed[1.0] )
  2A0:  		If  *VarA  ==  .HitResult:Lucky % 5
  2B0:  			Call  EnemyTestTarget   ( .Actor:Self *Var0 ~Flags:DamageType:TriggerLucky 00000000 00000000 00000000 )
  2D4:  		EndIf
  2DC:  		Call  YieldTurn ( )
  2E8:  		Call  UseBattleCamPreset    ( 00000002 )
  2F8:  		Call  SetActorYaw   ( .Actor:Self  180` )
  30C:  		Call  AddActorDecoration    ( .Actor:Self 00000001 00000000 .Decoration:Sweat )
  328:  		ExecWait  $Script_80219740
  334:  		Call  RemoveActorDecoration ( .Actor:Self 00000001 00000000 )
  34C:  		Call  SetActorYaw   ( .Actor:Self  0` )
  360:  		Call  EnableIdleScript      ( .Actor:Self 00000001 )
  374:  		Call  UseIdleAnimation      ( .Actor:Self .True )
  388:  		Return
  390:  	EndCaseGroup
  398:  	Case  ==  .HitResult:HitStatic % 7
  3A4:  		Call  GetStatusFlags    ( .Actor:Self *Var0 )
  3B8:  		If  *Var0  &  ~Flags:StatusFlags:Static % 2000
  3C8:  			Set   *Flag[00]  .False
  3D8:  		Else
  3E0:  			Set   *Flag[00]  .True
  3F0:  		EndIf
  3F8:  EndSwitch
  400:  Wait  10`
  40C:  Call  SetActorSpeed ( .Actor:Self *Fixed[5.0] )
  420:  Call  SetActorJumpGravity   ( .Actor:Self *Fixed[1.8] )
  434:  Call  SetAnimation  ( .Actor:Self 00000001 00340106 )
  44C:  Call  SetGoalToTarget       ( .Actor:Self )
  45C:  Call  AddGoalPos    ( .Actor:Self  -4`  -8`  -15` )
  478:  Call  SetActorSpeed ( .Actor:Self *Fixed[8.0] )
  48C:  Call  SetAnimation  ( .Actor:Self 00000001 00340106 )
  4A4:  Call  FlyToGoal     ( .Actor:Self  0`  -40` .Easing:Linear )
  4C0:  If  *Flag[00]  ==  .True
  4D0:  	Call  EnemyDamageTarget ( .Actor:Self *Var0 ~Flags:DamageType:IgnoreDefense 00000000 00000000 00000000 00000020 )
  4F8:  	Return
  500:  EndIf
  508:  Call  GetStatusFlags    ( .Actor:Player *Var0 )
  51C:  If  *Var0  &  ~Flags:StatusFlags:Stone % 100000
  52C:  	Wait  10`
  538:  	Loop  00000002
  544:  		Call  SetAnimation  ( .Actor:Self 00000001 00340102 )
  55C:  		Wait  21`
  568:  		Loop  00000002
  574:  			Call  PlaySoundAtActor  ( .Actor:Self 000003E0 )
  588:  			Call  SetActorScale ( .Actor:Self *Fixed[1.0] *Fixed[1.0] *Fixed[1.0] )
  5A4:  			Wait  1`
  5B0:  			Call  SetActorScale ( .Actor:Self *Fixed[0.9] *Fixed[1.2] *Fixed[1.0] )
  5CC:  			Wait  1`
  5D8:  			Call  SetActorScale ( .Actor:Self *Fixed[0.8] *Fixed[1.3] *Fixed[1.0] )
  5F4:  			Wait  1`
  600:  			Call  SetActorScale ( .Actor:Self *Fixed[0.7] *Fixed[1.4] *Fixed[1.0] )
  61C:  			Wait  1`
  628:  			Call  SetActorScale ( .Actor:Self *Fixed[0.7] *Fixed[1.5] *Fixed[1.0] )
  644:  			Wait  1`
  650:  			Call  SetActorScale ( .Actor:Self *Fixed[0.7] *Fixed[1.4] *Fixed[1.0] )
  66C:  			Wait  1`
  678:  			Call  SetActorScale ( .Actor:Self *Fixed[0.8] *Fixed[1.3] *Fixed[1.0] )
  694:  			Wait  1`
  6A0:  			Call  SetActorScale ( .Actor:Self *Fixed[0.9] *Fixed[1.2] *Fixed[1.0] )
  6BC:  			Wait  1`
  6C8:  			Call  SetActorScale ( .Actor:Self *Fixed[1.0] *Fixed[1.0] *Fixed[1.0] )
  6E4:  			Wait  1`
  6F0:  		EndLoop
  6F8:  		Wait  5`
  704:  		Call  PlaySoundAtActor  ( .Actor:Self 000003E0 )
  718:  		Call  SetActorScale ( .Actor:Self *Fixed[1.0] *Fixed[1.0] *Fixed[1.0] )
  734:  		Wait  1`
  740:  		Call  SetActorScale ( .Actor:Self *Fixed[0.9] *Fixed[1.2] *Fixed[1.0] )
  75C:  		Wait  1`
  768:  		Call  SetActorScale ( .Actor:Self *Fixed[0.8] *Fixed[1.3] *Fixed[1.0] )
  784:  		Wait  1`
  790:  		Call  SetActorScale ( .Actor:Self *Fixed[0.7] *Fixed[1.4] *Fixed[1.0] )
  7AC:  		Wait  1`
  7B8:  		Call  SetActorScale ( .Actor:Self *Fixed[0.7] *Fixed[1.5] *Fixed[1.0] )
  7D4:  		Wait  2`
  7E0:  		Call  SetActorScale ( .Actor:Self *Fixed[0.6] *Fixed[1.6] *Fixed[1.0] )
  7FC:  		Wait  10`
  808:  		Call  SetActorScale ( .Actor:Self *Fixed[1.0] *Fixed[1.0] *Fixed[1.0] )
  824:  		Wait  2`
  830:  		Call  EnemyDamageTarget ( .Actor:Self *Var0 ~Flags:DamageType:IgnoreDefense 00000000 00000000 00000002 00000040 )
  858:  		Wait  30`
  864:  	EndLoop
  86C:  Else
  874:  	Call  ShowMessageBox    ( 00000031 00007FFF )
  888:  	Call  802694A4  ( 00000001 )
  898:  	Call  LoadActionCommand ( .ActionCommand:StopLeech )
  8A8:  	Call  802A9000 ( )
  8B4:  	Call  SetupMashMeter    ( 00000001 0000001E 00000000 00000000 00000000 00000000 )
  8D8:  	Wait  10`
  8E4:  	Call  SetBattleFlagBits ( 00004000 .False )
  8F8:  	Call  802A9110  ( 00000000 00007FFF 00000003 )
  910:  	Set   *VarD  00000000
  920:  	Loop  00000005
  92C:  		Call  SetAnimation  ( .Actor:Self 00000001 00340102 )
  944:  		Set   *Flag[00]  .False
  954:  		Loop  00000015
  960:  			Call  GetActionSuccessCopy  ( *Var1 )
  970:  			If  *Var1  ==  00000001
  980:  				Set   *Flag[00]  .True
  990:  				BreakLoop
  998:  			EndIf
  9A0:  			Wait  1`
  9AC:  		EndLoop
  9B4:  		If  *Flag[00]  ==  .True
  9C4:  			Call  UseIdleAnimation  ( .Actor:Player .True )
  9D8:  			BreakLoop
  9E0:  		EndIf
  9E8:  		Call  SetAnimation      ( .Actor:Player 00000000 0003000C )
  A00:  		Call  UseIdleAnimation  ( .Actor:Player .False )
  A14:  		Call  PlaySoundAtActor  ( .Actor:Self 000003E0 )
  A28:  		Call  SetActorScale     ( .Actor:Self *Fixed[1.0] *Fixed[1.0] *Fixed[1.0] )
  A44:  		Set   *Flag[00]  .False
  A54:  		Loop  00000001
  A60:  			Call  GetActionSuccessCopy  ( *Var1 )
  A70:  			If  *Var1  ==  00000001
  A80:  				Set   *Flag[00]  .True
  A90:  				BreakLoop
  A98:  			EndIf
  AA0:  			Wait  1`
  AAC:  		EndLoop
  AB4:  		If  *Flag[00]  ==  .True
  AC4:  			Call  UseIdleAnimation  ( .Actor:Player .True )
  AD8:  			BreakLoop
  AE0:  		EndIf
  AE8:  		Call  SetActorScale ( .Actor:Self *Fixed[0.9] *Fixed[1.2] *Fixed[1.0] )
  B04:  		Set   *Flag[00]  .False
  B14:  		Loop  00000001
  B20:  			Call  GetActionSuccessCopy  ( *Var1 )
  B30:  			If  *Var1  ==  00000001
  B40:  				Set   *Flag[00]  .True
  B50:  				BreakLoop
  B58:  			EndIf
  B60:  			Wait  1`
  B6C:  		EndLoop
  B74:  		If  *Flag[00]  ==  .True
  B84:  			Call  UseIdleAnimation  ( .Actor:Player .True )
  B98:  			BreakLoop
  BA0:  		EndIf
  BA8:  		Call  SetActorScale ( .Actor:Self *Fixed[0.8] *Fixed[1.3] *Fixed[1.0] )
  BC4:  		Set   *Flag[00]  .False
  BD4:  		Loop  00000001
  BE0:  			Call  GetActionSuccessCopy  ( *Var1 )
  BF0:  			If  *Var1  ==  00000001
  C00:  				Set   *Flag[00]  .True
  C10:  				BreakLoop
  C18:  			EndIf
  C20:  			Wait  1`
  C2C:  		EndLoop
  C34:  		If  *Flag[00]  ==  .True
  C44:  			Call  UseIdleAnimation  ( .Actor:Player .True )
  C58:  			BreakLoop
  C60:  		EndIf
  C68:  		Call  SetActorScale ( .Actor:Self *Fixed[0.7] *Fixed[1.4] *Fixed[1.0] )
  C84:  		Set   *Flag[00]  .False
  C94:  		Loop  00000001
  CA0:  			Call  GetActionSuccessCopy  ( *Var1 )
  CB0:  			If  *Var1  ==  00000001
  CC0:  				Set   *Flag[00]  .True
  CD0:  				BreakLoop
  CD8:  			EndIf
  CE0:  			Wait  1`
  CEC:  		EndLoop
  CF4:  		If  *Flag[00]  ==  .True
  D04:  			Call  UseIdleAnimation  ( .Actor:Player .True )
  D18:  			BreakLoop
  D20:  		EndIf
  D28:  		Call  SetActorScale ( .Actor:Self *Fixed[0.7] *Fixed[1.5] *Fixed[1.0] )
  D44:  		Set   *Flag[00]  .False
  D54:  		Loop  00000002
  D60:  			Call  GetActionSuccessCopy  ( *Var1 )
  D70:  			If  *Var1  ==  00000001
  D80:  				Set   *Flag[00]  .True
  D90:  				BreakLoop
  D98:  			EndIf
  DA0:  			Wait  1`
  DAC:  		EndLoop
  DB4:  		If  *Flag[00]  ==  .True
  DC4:  			Call  UseIdleAnimation  ( .Actor:Player .True )
  DD8:  			BreakLoop
  DE0:  		EndIf
  DE8:  		Call  SetActorScale ( .Actor:Self *Fixed[0.6] *Fixed[1.6] *Fixed[1.0] )
  E04:  		Set   *Flag[00]  .False
  E14:  		Loop  0000000A
  E20:  			Call  GetActionSuccessCopy  ( *Var1 )
  E30:  			If  *Var1  ==  00000001
  E40:  				Set   *Flag[00]  .True
  E50:  				BreakLoop
  E58:  			EndIf
  E60:  			Wait  1`
  E6C:  		EndLoop
  E74:  		If  *Flag[00]  ==  .True
  E84:  			Call  UseIdleAnimation  ( .Actor:Player .True )
  E98:  			BreakLoop
  EA0:  		EndIf
  EA8:  		Call  SetActorScale ( .Actor:Self *Fixed[1.0] *Fixed[1.0] *Fixed[1.0] )
  EC4:  		Set   *Flag[00]  .False
  ED4:  		Loop  00000002
  EE0:  			Call  GetActionSuccessCopy  ( *Var1 )
  EF0:  			If  *Var1  ==  00000001
  F00:  				Set   *Flag[00]  .True
  F10:  				BreakLoop
  F18:  			EndIf
  F20:  			Wait  1`
  F2C:  		EndLoop
  F34:  		If  *Flag[00]  ==  .True
  F44:  			Call  UseIdleAnimation  ( .Actor:Player .True )
  F58:  			BreakLoop
  F60:  		EndIf
  F68:  		Call  UseIdleAnimation  ( .Actor:Player .True )
  F7C:  		Call  EnemyDamageTarget ( .Actor:Self *Var0 ~Flags:DamageType:Unblockable|IgnoreDefense 00000000 00000000 00000002 00000040 )
  FA4:  		Call  GetLastDamage     ( .Actor:Player *Var3 )
  FB8:  		If  *Var3  !=  00000000
  FC8:  			Call  PlaySoundAtActor  ( .Actor:Self 0000206D )
  FDC:  			Call  PlaySoundAtActor  ( .Actor:Self 00000214 )
  FF0:  			Call  GetActorPos       ( .Actor:Self *Var0 *Var1 *Var2 )
 100C:  			Add   *Var1  0000000F
 101C:  			Call  $Function_802180CC    ( *Var0 *Var1 *Var2 *Var3 )
 1038:  			Thread
 1040:  				Wait  15`
 104C:  				Call  PlaySoundAtActor      ( .Actor:Self 0000025C )
 1060:  				Call  $Function_80218180    ( *Var0 *Var1 *Var2 *Var3 )
 107C:  			EndThread
 1084:  			Add   *Var0  00000014
 1094:  			Add   *Var1  00000014
 10A4:  			Call  PlayEffect    ( ~FX:Recover:HP *Var0 *Var1 *Var2 *Var3 00000000 00000000 00000000 00000000 00000000 00000000 00000000 00000000 )
 10E8:  			Call  GetActorHP    ( .Actor:Self *Var0 )
 10FC:  			Add   *Var0  *Var3
 110C:  			Call  SetEnemyHP    ( .Actor:Self *Var0 )
 1120:  		Else
 1128:  			Add   *VarD  00000001
 1138:  			If  *VarD  >  00000001
 1148:  				Call  80269470 ( )
 1154:  				BreakLoop
 115C:  			EndIf
 1164:  		EndIf
 116C:  		Call  GetPlayerHP   ( *Var1 )
 117C:  		If  *Var1  ==  00000000
 118C:  			Call  80269470 ( )
 1198:  			BreakLoop
 11A0:  		EndIf
 11A8:  		Set   *Flag[00]  .False
 11B8:  		Loop  00000023
 11C4:  			Call  GetActionSuccessCopy  ( *Var1 )
 11D4:  			If  *Var1  ==  00000001
 11E4:  				Set   *Flag[00]  .True
 11F4:  				BreakLoop
 11FC:  			EndIf
 1204:  			Wait  1`
 1210:  		EndLoop
 1218:  		If  *Flag[00]  ==  .True
 1228:  			BreakLoop
 1230:  		EndIf
 1238:  	EndLoop
 1240:  	Call  80269470 ( )
 124C:  	Call  SetActorScale ( .Actor:Self *Fixed[1.0] *Fixed[1.0] *Fixed[1.0] )
 1268:  EndIf
 1270:  Call  UseBattleCamPreset    ( 00000002 )
 1280:  Call  SetGoalToTarget   ( .Actor:Self )
 1290:  Call  AddGoalPos        ( .Actor:Self  50`  10`  0` )
 12AC:  Call  SetActorSpeed     ( .Actor:Self *Fixed[8.0] )
 12C0:  Call  SetAnimation      ( .Actor:Self 00000001 00340102 )
 12D8:  Call  FlyToGoal ( .Actor:Self  0`  -10` .Easing:Linear )
 12F4:  Wait  10`
 1300:  Call  YieldTurn ( )
 130C:  ExecWait  $Script_80219740
 1318:  Call  EnableIdleScript  ( .Actor:Self 00000001 )
 132C:  Call  UseIdleAnimation  ( .Actor:Self .True )
 1340:  Return
 1348:  Call  EnableIdleScript  ( .Actor:Self 00000001 )
 135C:  Call  UseIdleAnimation  ( .Actor:Self .True )
 1370:  Return
 1378:  End
}

PADDING: 8021D804 to 8021D810 (0064E614 to 0064E620)
00000000 00000000 00000000

#new:IdleAnimations $IdleAnimations_8021D810
{
	.Status:Normal    004F0003
	.Status:Stone     004F0000
	.Status:Sleep     004F0003
	.Status:Poison    004F0003
	.Status:Stop      004F0000
	.Status:Static    004F0003
	.Status:Paralyze  004F0000
	.Status:Dizzy     004F0000
	.Status:Fear      004F0000
	.Status:End
}

#new:DefenseTable $DefenseTable_8021D85C
{
	.Element:Normal 00000004
	.Element:Fire   00000063
	.Element:End
}

#new:StatusTable $StatusTable_8021D870
{
	.Status:Normal      0`
	.Status:Default     0`
	.Status:Sleep       0`
	.Status:Poison      0`
	.Status:Frozen      0`
	.Status:Dizzy       0`
	.Status:Fear        0`
	.Status:Static      0`
	.Status:Paralyze    0`
	.Status:Shrink     75`
	.Status:Stop        0`
	.Status:DefaultTurnMod    0`
	.Status:SleepTurnMod     -1`
	.Status:PoisonTurnMod     0`
	.Status:FrozenTurnMod     0`
	.Status:DizzyTurnMod     -1`
	.Status:FearTurnMod       0`
	.Status:StaticTurnMod     0`
	.Status:ParalyzeTurnMod   0`
	.Status:ShrinkTurnMod     0`
	.Status:StopTurnMod       0`
	.Status:End
}

#new:PartsTable $PartsTable_8021D91C
{
	00800000 01000000 F72E00FF $IdleAnimations_8021D810 $DefenseTable_8021D85C 00000000 00000000 FAEF0000 00000000
}

#new:Actor $AlbinoDino
{
	% stats
	[Index]        44b
	[Level]        23`b
	[MaxHP]         8`b
	[Coins]         1`b
	[Flags]       00000000
	[StatusTable] $StatusTable_8021D870
	% ai
	[PartsCount]    1`s
	[PartsTable]  $PartsTable_8021D91C
	[Script]      $Script_Init_8021D968
	% move effectiveness
	[Escape]       40`b
	[Item]         25`b
	[AirLift]      15`b
	[Hurricane]    10`b % Bow's "Spook" as well
	[UpAndAway]    95`b
	[PowerBounce] 100`b
	[SpinSmash]     0`b % weight (0-4)
	% ui positions
	[Size]         64`b  56`b % width height
	[HealthBar]     0`b   0`b % dx dy
	[StatusTurn]  -22`b  24`b % dx dy
	[StatusIcon]   11`b  40`b % dx dy
}

#new:Script $Script_Init_8021D968
{
    0:  Call  BindTakeTurn      ( .Actor:Self $Script_TakeTurn_8021E070 )
   14:  Call  BindIdle  ( .Actor:Self $Script_Idle_8021D9B4 )
   28:  Call  BindHandleEvent   ( .Actor:Self $Script_HandleEvent_8021DA40 )
   3C:  Return
   44:  End
}

#new:Script $Script_Idle_8021D9B4
{
    0:  Return
    8:  End
}

#new:Script $Script_8021D9C4
{
    0:  Call  SetAnimation  ( .Actor:Self 00000001 004F0005 )
   18:  Call  SetGoalToHome ( .Actor:Self )
   28:  Call  SetActorSpeed ( .Actor:Self *Fixed[8.0] )
   3C:  Call  RunToGoal     ( .Actor:Self  0` .False )
   54:  Call  SetAnimation  ( .Actor:Self 00000001 004F0003 )
   6C:  Return
   74:  End
}

#new:Script $Script_HandleEvent_8021DA40
{
    0:  Call  UseIdleAnimation  ( .Actor:Self .False )
   14:  Call  EnableIdleScript  ( .Actor:Self 00000000 )
   28:  Call  GetLastEvent      ( .Actor:Self *Var0 )
   3C:  Switch  *Var0
   48:  	CaseOR  ==  .Event:HitCombo % 9
   54:  	CaseOR  ==  .Event:Hit % A
   60:  		SetConst  *Var0  00000001
   70:  		SetConst  *Var1  004F0008
   80:  		ExecWait  DoNormalHit
   8C:  	EndCaseGroup
   94:  	Case  ==  .Event:BurnHit % E
   A0:  		SetConst  *Var0  00000001
   B0:  		SetConst  *Var1  004F000A
   C0:  		SetConst  *Var2  004F000B
   D0:  		ExecWait  DoBurnHit
   DC:  	Case  ==  .Event:BurnDeath % 24
   E8:  		SetConst  *Var0  00000001
   F8:  		SetConst  *Var1  004F000A
  108:  		SetConst  *Var2  004F000B
  118:  		ExecWait  DoBurnHit
  124:  		SetConst  *Var0  00000001
  134:  		SetConst  *Var1  004F000B
  144:  		ExecWait  DoDeath
  150:  		Return
  158:  	Case  ==  .Event:SpinSmashHit % B
  164:  		SetConst  *Var0  00000001
  174:  		SetConst  *Var1  004F0008
  184:  		ExecWait  DoSpinSmashHit
  190:  	Case  ==  .Event:SpinSmashDeath % 21
  19C:  		SetConst  *Var0  00000001
  1AC:  		SetConst  *Var1  004F0008
  1BC:  		ExecWait  DoSpinSmashHit
  1C8:  		SetConst  *Var0  00000001
  1D8:  		SetConst  *Var1  004F0009
  1E8:  		ExecWait  DoDeath
  1F4:  		Return
  1FC:  	Case  ==  .Event:ShockHit % 2F
  208:  		SetConst  *Var0  00000001
  218:  		SetConst  *Var1  004F0008
  228:  		ExecWait  DoShockHit
  234:  		SetConst  *Var0  00000001
  244:  		SetConst  *Var1  004F0008
  254:  		ExecWait  DoJumpBack
  260:  		ExecWait  $Script_8021D9C4
  26C:  	Case  ==  .Event:ShockDeath % 26
  278:  		SetConst  *Var0  00000001
  288:  		SetConst  *Var1  004F0008
  298:  		ExecWait  DoShockHit
  2A4:  		SetConst  *Var0  00000001
  2B4:  		SetConst  *Var1  004F0009
  2C4:  		ExecWait  DoDeath
  2D0:  		Return
  2D8:  	CaseOR  ==  00000017 % 17
  2E4:  	CaseOR  ==  .Event:Immune % 19
  2F0:  	CaseOR  ==  .Event:AirLiftFailed % 1F
  2FC:  		SetConst  *Var0  00000001
  30C:  		SetConst  *Var1  004F0003
  31C:  		ExecWait  DoImmune
  328:  	EndCaseGroup
  330:  	Case  ==  .Event:Death % 20
  33C:  		SetConst  *Var0  00000001
  34C:  		SetConst  *Var1  004F0008
  35C:  		ExecWait  DoNormalHit
  368:  		SetConst  *Var0  00000001
  378:  		SetConst  *Var1  004F0009
  388:  		ExecWait  DoDeath
  394:  		Return
  39C:  	Case  ==  .Event:RecoverStatus % 31
  3A8:  		SetConst  *Var0  00000001
  3B8:  		SetConst  *Var1  004F0003
  3C8:  		ExecWait  DoRecover
  3D4:  	Case  ==  .Event:ScareAway % 39
  3E0:  		SetConst  *Var0  00000001
  3F0:  		SetConst  *Var1  004F0005
  400:  		SetConst  *Var2  004F0008
  410:  		ExecWait  DoScareAway
  41C:  		Return
  424:  	Case  ==  .Event:BeginAirLift % 3A
  430:  		SetConst  *Var0  00000001
  440:  		SetConst  *Var1  004F0005
  450:  		ExecWait  DoAirLift
  45C:  	Case  ==  .Event:BlowAway % 16
  468:  		SetConst  *Var0  00000001
  478:  		SetConst  *Var1  004F0008
  488:  		ExecWait  DoBlowAway
  494:  		Return
  49C:  	Default
  4A4:  EndSwitch
  4AC:  Call  EnableIdleScript  ( .Actor:Self 00000001 )
  4C0:  Call  UseIdleAnimation  ( .Actor:Self .True )
  4D4:  Return
  4DC:  End
}

#new:Script $Script_8021DF24
{
    0:  Set   *VarA  00000000
   10:  Label  0
   1C:  Call  GetActorPos   ( .Actor:Self *Var0 *Var1 *Var2 )
   38:  Call  GetActorYaw   ( .Actor:Self *Var3 )
   4C:  If  *Var3  ==  00000000
   5C:  	Add   *Var0  00000014
   6C:  Else
   74:  	Add   *Var0  FFFFFFEC
   84:  EndIf
   8C:  Call  PlayEffect    ( ~FX:SmokeImpact:Small *Var0 *Var1 *Var2 00000019 00000008 0000002D 00000014 00000000 00000000 00000000 00000000 00000000 )
   D0:  If  *VarA  >  00000003
   E0:  	Call  ShakeCam  ( .Cam:Battle 00000000  2` *Fixed[0.2] )
   FC:  	Set   *VarA  00000000
  10C:  EndIf
  114:  Add   *VarA  00000001
  124:  Wait  2`
  130:  Goto  0
  13C:  Return
  144:  End
}

#new:Script $Script_TakeTurn_8021E070
{
    0:  Call  UseIdleAnimation  ( .Actor:Self .False )
   14:  Call  EnableIdleScript  ( .Actor:Self 00000000 )
   28:  Call  SetTargetActor    ( .Actor:Self .Actor:Player )
   3C:  Call  UseBattleCamPreset    ( 0000003F )
   4C:  Call  BattleCamTargetActor  ( .Actor:Self )
   5C:  Call  8024ECF8  ( FFFFFFFF 00000001 00000000 )
   74:  Exec  $Script_8021DF24 *Var9
   84:  Thread
   8C:  	Loop  00000003
   98:  		Call  PlaySoundAtActor  ( .Actor:Self 0000030B )
   AC:  		Wait  4`
   B8:  		Call  PlaySoundAtActor  ( .Actor:Self 000002FD )
   CC:  		Wait  4`
   D8:  	EndLoop
   E0:  EndThread
   E8:  Call  SetAnimation      ( .Actor:Self 00000001 004F0005 )
  100:  Wait  20`
  10C:  Call  EnemyTestTarget   ( .Actor:Self *VarF ~Flags:DamageType:0 00000000 00000001 00000010 )
  130:  Switch  *VarF
  13C:  	CaseOR  ==  .HitResult:Miss % 6
  148:  	CaseOR  ==  .HitResult:Lucky % 5
  154:  		Thread
  15C:  			Call  SetGoalToTarget   ( .Actor:Self )
  16C:  			Call  AddGoalPos    ( .Actor:Self  -100`  0`  0` )
  188:  			Call  SetActorSpeed ( .Actor:Self *Fixed[12.0] )
  19C:  			Call  RunToGoal     ( .Actor:Self  0` .False )
  1B4:  			Kill  *Var9
  1C0:  		EndThread
  1C8:  		Call  UseBattleCamPreset    ( 00000002 )
  1D8:  		Wait  30`
  1E4:  		If  *VarF  ==  .HitResult:Lucky % 5
  1F4:  			Call  SetGoalToTarget   ( .Actor:Self )
  204:  			Call  EnemyTestTarget   ( .Actor:Self *Var0 ~Flags:DamageType:TriggerLucky 00000000 00000000 00000000 )
  228:  		EndIf
  230:  		Wait  40`
  23C:  		Call  YieldTurn ( )
  248:  		Call  AddActorDecoration    ( .Actor:Self 00000001 00000000 .Decoration:Sweat )
  264:  		Call  SetActorYaw       ( .Actor:Self  180` )
  278:  		ExecWait  $Script_8021D9C4
  284:  		Call  SetActorYaw       ( .Actor:Self  0` )
  298:  		Call  RemoveActorDecoration ( .Actor:Self 00000001 00000000 )
  2B0:  		Call  EnableIdleScript  ( .Actor:Self 00000001 )
  2C4:  		Call  UseIdleAnimation  ( .Actor:Self .True )
  2D8:  		Return
  2E0:  	EndCaseGroup
  2E8:  EndSwitch
  2F0:  Call  SetGoalToTarget   ( .Actor:Self )
  300:  Call  GetStatusFlags    ( .Actor:Self *VarA )
  314:  If  *VarA  &  ~Flags:StatusFlags:Shrink % 80000
  324:  	Call  AddGoalPos    ( .Actor:Self  12`  0`  0` )
  340:  Else
  348:  	Call  AddGoalPos    ( .Actor:Self  30`  0`  0` )
  364:  EndIf
  36C:  Call  SetActorSpeed ( .Actor:Self *Fixed[12.0] )
  380:  Call  RunToGoal     ( .Actor:Self  0` .False )
  398:  Thread
  3A0:  	Call  ShakeCam  ( .Cam:Battle 00000000  4` *Fixed[1.5] )
  3BC:  EndThread
  3C4:  Kill  *Var9
  3D0:  Wait  2`
  3DC:  Call  SetGoalToTarget   ( .Actor:Self )
  3EC:  Call  EnemyDamageTarget ( .Actor:Self *VarF ~Flags:DamageType:0 00000000 ~DebuffType:0|0:0:24` 00000004 00000020 )
  414:  Switch  *VarF
  420:  	CaseOR  ==  .HitResult:Hit % 0
  42C:  	CaseOR  ==  .HitResult:QuakeImmune % 2
  438:  		Call  UseBattleCamPreset    ( 00000002 )
  448:  		Call  GetActorPos   ( .Actor:Self *Var0 *Var1 *Var2 )
  464:  		Add   *Var0  00000028
  474:  		Call  SetActorJumpGravity   ( .Actor:Self *Fixed[1.0] )
  488:  		Call  SetGoalPos    ( .Actor:Self *Var0 *Var1 *Var2 )
  4A4:  		Call  JumpToGoal    ( .Actor:Self  15` .False .True .False )
  4C4:  		Call  PlaySoundAtActor      ( .Actor:Self 000002FD )
  4D8:  		Call  SetAnimation  ( .Actor:Self 00000001 004F0003 )
  4F0:  		Call  ShakeCam      ( .Cam:Battle 00000000  3` *Fixed[1.0] )
  50C:  		Wait  10`
  518:  		Call  YieldTurn ( )
  524:  		ExecWait  $Script_8021D9C4
  530:  	EndCaseGroup
  538:  EndSwitch
  540:  Call  EnableIdleScript  ( .Actor:Self 00000001 )
  554:  Call  UseIdleAnimation  ( .Actor:Self .True )
  568:  Return
  570:  End
}

PADDING: 8021E5E8 to 8021E5F0 (0064F3F8 to 0064F400)
00000000 00000000

#new:IdleAnimations $IdleAnimations_8021E5F0
{
	.Status:Normal    003A0101
	.Status:Stone     003A0100
	.Status:Sleep     003A0103
	.Status:Poison    003A0101
	.Status:Stop      003A0100
	.Status:Static    003A0101
	.Status:Paralyze  003A0100
	.Status:Dizzy     003A0105
	.Status:Fear      003A0105
	.Status:End
}

#new:DefenseTable $DefenseTable_8021E63C
{
	.Element:Normal 00000000
	.Element:Fire   FFFFFFFE
	.Element:Ice    00000063
	.Element:End
}

#new:StatusTable $StatusTable_8021E658
{
	.Status:Normal      0`
	.Status:Default     0`
	.Status:Sleep      80`
	.Status:Poison     50`
	.Status:Frozen      0`
	.Status:Dizzy      75`
	.Status:Fear      100`
	.Status:Static     50`
	.Status:Paralyze   75`
	.Status:Shrink     75`
	.Status:Stop       80`
	.Status:DefaultTurnMod    0`
	.Status:SleepTurnMod      1`
	.Status:PoisonTurnMod     0`
	.Status:FrozenTurnMod     0`
	.Status:DizzyTurnMod      0`
	.Status:FearTurnMod       0`
	.Status:StaticTurnMod     0`
	.Status:ParalyzeTurnMod   1`
	.Status:ShrinkTurnMod     0`
	.Status:StopTurnMod      -1`
	.Status:End
}

#new:PartsTable $PartsTable_8021E704
{
	00800000 01000000 F42000FF $IdleAnimations_8021E5F0 $DefenseTable_8021E63C 00000008 00000000 08FD0000 00000000
}

#new:Actor $WhiteClubba
{
	% stats
	[Index]        38b
	[Level]        23`b
	[MaxHP]        12`b
	[Coins]         2`b
	[Flags]       00000000
	[StatusTable] $StatusTable_8021E658
	% ai
	[PartsCount]    1`s
	[PartsTable]  $PartsTable_8021E704
	[Script]      $Script_Init_8021E750
	% move effectiveness
	[Escape]       50`b
	[Item]         50`b
	[AirLift]      50`b
	[Hurricane]    60`b % Bow's "Spook" as well
	[UpAndAway]    95`b
	[PowerBounce]  80`b
	[SpinSmash]     0`b % weight (0-4)
	% ui positions
	[Size]         42`b  42`b % width height
	[HealthBar]     0`b   0`b % dx dy
	[StatusTurn]  -10`b  20`b % dx dy
	[StatusIcon]   10`b  35`b % dx dy
}

#new:Script $Script_Init_8021E750
{
    0:  Call  BindTakeTurn      ( .Actor:Self $Script_TakeTurn_8021ECBC )
   14:  Call  BindIdle  ( .Actor:Self $Script_Idle_8021E79C )
   28:  Call  BindHandleEvent   ( .Actor:Self $Script_HandleEvent_8021E7AC )
   3C:  Return
   44:  End
}

#new:Script $Script_Idle_8021E79C
{
    0:  Return
    8:  End
}

#new:Script $Script_HandleEvent_8021E7AC
{
    0:  Call  UseIdleAnimation  ( .Actor:Self .False )
   14:  Call  EnableIdleScript  ( .Actor:Self 00000000 )
   28:  Call  GetLastEvent      ( .Actor:Self *Var0 )
   3C:  Switch  *Var0
   48:  	CaseOR  ==  .Event:HitCombo % 9
   54:  	CaseOR  ==  .Event:Hit % A
   60:  		SetConst  *Var0  00000001
   70:  		SetConst  *Var1  003A0104
   80:  		ExecWait  DoNormalHit
   8C:  	EndCaseGroup
   94:  	Case  ==  .Event:BurnHit % E
   A0:  		SetConst  *Var0  00000001
   B0:  		SetConst  *Var1  003A0106
   C0:  		SetConst  *Var2  003A0107
   D0:  		ExecWait  DoBurnHit
   DC:  	Case  ==  .Event:BurnDeath % 24
   E8:  		SetConst  *Var0  00000001
   F8:  		SetConst  *Var1  003A0106
  108:  		SetConst  *Var2  003A0107
  118:  		ExecWait  DoBurnHit
  124:  		SetConst  *Var0  00000001
  134:  		SetConst  *Var1  003A0107
  144:  		ExecWait  DoDeath
  150:  		Return
  158:  	Case  ==  .Event:SpinSmashHit % B
  164:  		SetConst  *Var0  00000001
  174:  		SetConst  *Var1  003A0104
  184:  		ExecWait  DoSpinSmashHit
  190:  	Case  ==  .Event:SpinSmashDeath % 21
  19C:  		SetConst  *Var0  00000001
  1AC:  		SetConst  *Var1  003A0104
  1BC:  		ExecWait  DoSpinSmashHit
  1C8:  		SetConst  *Var0  00000001
  1D8:  		SetConst  *Var1  003A0104
  1E8:  		ExecWait  DoDeath
  1F4:  		Return
  1FC:  	Case  ==  .Event:ShockHit % 2F
  208:  		SetConst  *Var0  00000001
  218:  		SetConst  *Var1  003A0104
  228:  		ExecWait  DoShockHit
  234:  		SetConst  *Var0  00000001
  244:  		SetConst  *Var1  003A0104
  254:  		ExecWait  DoJumpBack
  260:  		SetConst  *Var0  00000001
  270:  		SetConst  *Var1  003A0102
  280:  		ExecWait  DoReturnHome
  28C:  	Case  ==  .Event:ShockDeath % 26
  298:  		SetConst  *Var0  00000001
  2A8:  		SetConst  *Var1  003A0104
  2B8:  		ExecWait  DoShockHit
  2C4:  		SetConst  *Var0  00000001
  2D4:  		SetConst  *Var1  003A0104
  2E4:  		ExecWait  DoDeath
  2F0:  		Return
  2F8:  	CaseOR  ==  00000017 % 17
  304:  	CaseOR  ==  .Event:Immune % 19
  310:  	CaseOR  ==  .Event:AirLiftFailed % 1F
  31C:  		SetConst  *Var0  00000001
  32C:  		SetConst  *Var1  003A0101
  33C:  		ExecWait  DoImmune
  348:  	EndCaseGroup
  350:  	Case  ==  .Event:Death % 20
  35C:  		SetConst  *Var0  00000001
  36C:  		SetConst  *Var1  003A0104
  37C:  		ExecWait  DoNormalHit
  388:  		Wait  10`
  394:  		SetConst  *Var0  00000001
  3A4:  		SetConst  *Var1  003A0104
  3B4:  		ExecWait  DoDeath
  3C0:  		Return
  3C8:  	Case  ==  .Event:RecoverStatus % 31
  3D4:  		SetConst  *Var0  00000001
  3E4:  		SetConst  *Var1  003A0101
  3F4:  		ExecWait  DoRecover
  400:  	Case  ==  .Event:ScareAway % 39
  40C:  		SetConst  *Var0  00000001
  41C:  		SetConst  *Var1  003A0102
  42C:  		SetConst  *Var2  003A0104
  43C:  		ExecWait  DoScareAway
  448:  		Return
  450:  	Case  ==  .Event:BeginAirLift % 3A
  45C:  		SetConst  *Var0  00000001
  46C:  		SetConst  *Var1  003A0104
  47C:  		ExecWait  DoAirLift
  488:  	Case  ==  .Event:BlowAway % 16
  494:  		SetConst  *Var0  00000001
  4A4:  		SetConst  *Var1  003A0104
  4B4:  		ExecWait  DoBlowAway
  4C0:  		Return
  4C8:  	Default
  4D0:  EndSwitch
  4D8:  Call  EnableIdleScript  ( .Actor:Self 00000001 )
  4EC:  Call  UseIdleAnimation  ( .Actor:Self .True )
  500:  Return
  508:  End
}

#new:Script $Script_TakeTurn_8021ECBC
{
    0:  Call  UseIdleAnimation  ( .Actor:Self .False )
   14:  Call  EnableIdleScript  ( .Actor:Self 00000000 )
   28:  Call  SetTargetActor    ( .Actor:Self .Actor:Player )
   3C:  Call  UseBattleCamPreset    ( 0000003F )
   4C:  Call  BattleCamTargetActor  ( .Actor:Self )
   5C:  Call  8024ECF8  ( FFFFFFFF 00000001 00000000 )
   74:  Call  GetBattlePhase    ( *Var0 )
   84:  If  *Var0  ==  00000001
   94:  	Call  SetGoalToTarget   ( .Actor:Self )
   A4:  	Call  GetGoalPos        ( .Actor:Self *Var0 *Var1 *Var2 )
   C0:  	Add   *Var0  0000001B
   D0:  	Set   *Var1  00000000
   E0:  	Sub   *Var2  00000006
   F0:  	Call  SetActorPos       ( .Actor:Self *Var0 *Var1 *Var2 )
  10C:  	Wait  15`
  118:  Else
  120:  	Call  SetAnimation      ( .Actor:Self 00000001 003A0102 )
  138:  	Call  SetActorSpeed     ( .Actor:Self *Fixed[4.0] )
  14C:  	Call  SetGoalToTarget   ( .Actor:Self )
  15C:  	Call  GetStatusFlags    ( .Actor:Self *Var0 )
  170:  	If  *Var0  !&  ~Flags:StatusFlags:Shrink % 80000
  180:  		Call  AddGoalPos    ( .Actor:Self  27`  0`  -6` )
  19C:  	Else
  1A4:  		Call  AddGoalPos    ( .Actor:Self  10`  0`  -6` )
  1C0:  	EndIf
  1C8:  	Call  RunToGoal     ( .Actor:Self  0` .False )
  1E0:  	Call  SetAnimation  ( .Actor:Self 00000001 003A0101 )
  1F8:  	Wait  10`
  204:  EndIf
  20C:  Call  EnemyTestTarget   ( .Actor:Self *Var0 ~Flags:DamageType:0 00000000 00000001 00000010 )
  230:  Switch  *Var0
  23C:  	CaseOR  ==  .HitResult:Miss % 6
  248:  	CaseOR  ==  .HitResult:Lucky % 5
  254:  		Call  PlaySoundAtActor  ( .Actor:Self 000020C5 )
  268:  		Call  SetAnimation      ( .Actor:Self 00000001 003A0108 )
  280:  		Wait  20`
  28C:  		If  *Var0  ==  .HitResult:Lucky % 5
  29C:  			Call  EnemyTestTarget   ( .Actor:Self *Var0 ~Flags:DamageType:TriggerLucky 00000000 00000000 00000000 )
  2C0:  			Wait  20`
  2CC:  		EndIf
  2D4:  		Call  UseBattleCamPreset    ( 00000002 )
  2E4:  		Call  YieldTurn ( )
  2F0:  		Call  SetActorYaw   ( .Actor:Self  180` )
  304:  		Call  AddActorDecoration    ( .Actor:Self 00000001 00000000 .Decoration:Sweat )
  320:  		SetConst  *Var0  00000001
  330:  		SetConst  *Var1  003A0102
  340:  		ExecWait  DoReturnHome
  34C:  		Call  RemoveActorDecoration ( .Actor:Self 00000001 00000000 )
  364:  		Call  SetActorYaw   ( .Actor:Self  0` )
  378:  		Call  EnableIdleScript      ( .Actor:Self 00000001 )
  38C:  		Call  UseIdleAnimation      ( .Actor:Self .True )
  3A0:  		Return
  3A8:  	EndCaseGroup
  3B0:  EndSwitch
  3B8:  Call  GetBattlePhase    ( *Var0 )
  3C8:  If  *Var0  ==  00000001
  3D8:  	Goto  28
  3E4:  EndIf
  3EC:  Call  GetActorHP    ( .Actor:Self *Var0 )
  400:  Call  GetEnemyMaxHP ( .Actor:Self *Var1 )
  414:  MulF  *Var0  *Fixed[100.0]
  424:  DivF  *Var0  *Var1
  434:  If  *Var0  <  0000001E
  444:  	Goto  32
  450:  EndIf
  458:  Call  RandInt   ( 00000064 *Var0 )
  46C:  If  *Var0  <  00000019
  47C:  	Goto  32
  488:  EndIf
  490:  Label  28
  49C:  Call  SetAnimation      ( .Actor:Self 00000001 003A0109 )
  4B4:  Wait  15`
  4C0:  Call  PlaySoundAtActor  ( .Actor:Self 000020C5 )
  4D4:  Call  SetAnimation      ( .Actor:Self 00000001 003A010A )
  4EC:  Wait  2`
  4F8:  Wait  2`
  504:  Call  SetGoalToTarget   ( .Actor:Self )
  514:  Call  EnemyDamageTarget ( .Actor:Self *Var0 ~Flags:DamageType:NoContact 00000000 00000000 00000005 00000020 )
  53C:  Thread
  544:  	Call  ShakeCam  ( .Cam:Battle 00000000  10` *Fixed[1.5] )
  560:  EndThread
  568:  Goto  64
  574:  Label  32
  580:  Call  SetAnimation      ( .Actor:Self 00000001 003A0109 )
  598:  Wait  15`
  5A4:  Call  PlaySoundAtActor  ( .Actor:Self 000020C5 )
  5B8:  Call  SetAnimation      ( .Actor:Self 00000001 003A010A )
  5D0:  Wait  2`
  5DC:  Wait  2`
  5E8:  Call  SetGoalToTarget   ( .Actor:Self )
  5F8:  Call  EnemyDamageTarget ( .Actor:Self *Var0 ~Flags:DamageType:NoContact 00000000 00000000 00000002 00000010 )
  620:  Thread
  628:  	Call  ShakeCam  ( .Cam:Battle 00000000  10` *Fixed[1.5] )
  644:  EndThread
  64C:  Call  GetActorHP    ( .Actor:Player *Var0 )
  660:  If  *Var0  ==  00000000
  670:  	Goto  64
  67C:  EndIf
  684:  Call  SetAnimation      ( .Actor:Self 00000001 003A0109 )
  69C:  Wait  15`
  6A8:  Call  PlaySoundAtActor  ( .Actor:Self 000020C5 )
  6BC:  Call  SetAnimation      ( .Actor:Self 00000001 003A010A )
  6D4:  Wait  2`
  6E0:  Wait  2`
  6EC:  Call  SetGoalToTarget   ( .Actor:Self )
  6FC:  Call  EnemyDamageTarget ( .Actor:Self *Var0 ~Flags:DamageType:NoContact 00000000 00000000 00000002 00000040 )
  724:  Thread
  72C:  	Call  ShakeCam  ( .Cam:Battle 00000000  10` *Fixed[1.5] )
  748:  EndThread
  750:  Call  GetActorHP    ( .Actor:Player *Var0 )
  764:  If  *Var0  ==  00000000
  774:  	Goto  64
  780:  EndIf
  788:  Call  SetAnimation      ( .Actor:Self 00000001 003A0109 )
  7A0:  Wait  15`
  7AC:  Call  PlaySoundAtActor  ( .Actor:Self 000020C5 )
  7C0:  Call  SetAnimation      ( .Actor:Self 00000001 003A010A )
  7D8:  Wait  2`
  7E4:  Wait  2`
  7F0:  Call  SetGoalToTarget   ( .Actor:Self )
  800:  Call  EnemyDamageTarget ( .Actor:Self *Var0 ~Flags:DamageType:NoContact 00000000 00000000 00000002 00000020 )
  828:  Thread
  830:  	Call  ShakeCam  ( .Cam:Battle 00000000  10` *Fixed[1.5] )
  84C:  EndThread
  854:  Label  64
  860:  Switch  *Var0
  86C:  	CaseOR  ==  .HitResult:Hit % 0
  878:  	CaseOR  ==  .HitResult:QuakeImmune % 2
  884:  		Call  UseBattleCamPreset    ( 00000002 )
  894:  		Wait  19`
  8A0:  		Call  YieldTurn ( )
  8AC:  		SetConst  *Var0  00000001
  8BC:  		SetConst  *Var1  003A0102
  8CC:  		ExecWait  DoReturnHome
  8D8:  	EndCaseGroup
  8E0:  EndSwitch
  8E8:  Call  EnableIdleScript  ( .Actor:Self 00000001 )
  8FC:  Call  UseIdleAnimation  ( .Actor:Self .True )
  910:  Return
  918:  End
}

PADDING: 8021F5DC to 8021F5E0 (006503EC to 006503F0)
00000000

#new:DefenseTable $DefenseTable_8021F5E0
{
	.Element:Normal 00000000
	.Element:End
}

% Origin: HINT
#new:DefenseTable $DefenseTable_8021F5EC
{
	.Element:Normal 00000000
	.Element:End
}

#new:StatusTable $StatusTable_8021F5F8
{
	.Status:Normal      0`
	.Status:Default     0`
	.Status:Sleep      50`
	.Status:Poison     50`
	.Status:Frozen      0`
	.Status:Dizzy      75`
	.Status:Fear        0`
	.Status:Static     50`
	.Status:Paralyze   75`
	.Status:Shrink     80`
	.Status:Stop       90`
	.Status:DefaultTurnMod    0`
	.Status:SleepTurnMod      0`
	.Status:PoisonTurnMod     0`
	.Status:FrozenTurnMod     0`
	.Status:DizzyTurnMod      0`
	.Status:FearTurnMod       0`
	.Status:StaticTurnMod     0`
	.Status:ParalyzeTurnMod   0`
	.Status:ShrinkTurnMod     0`
	.Status:StopTurnMod      -1`
	.Status:End
}

% Origin: HINT
#new:StatusTable $StatusTable_8021F6A4
{
	.Status:Normal      0`
	.Status:Default     0`
	.Status:Sleep      50`
	.Status:Poison     50`
	.Status:Frozen      0`
	.Status:Dizzy     100`
	.Status:Fear        0`
	.Status:Static     50`
	.Status:Paralyze   75`
	.Status:Shrink     80`
	.Status:Stop       90`
	.Status:DefaultTurnMod    0`
	.Status:SleepTurnMod      0`
	.Status:PoisonTurnMod     0`
	.Status:FrozenTurnMod     0`
	.Status:DizzyTurnMod      0`
	.Status:FearTurnMod       0`
	.Status:StaticTurnMod     0`
	.Status:ParalyzeTurnMod   0`
	.Status:ShrinkTurnMod     0`
	.Status:StopTurnMod      -1`
	.Status:End
}

#new:PartsTable $PartsTable_8021F750
{
	00800000 01000000 022300FF $IdleAnimations_8021F830 $DefenseTable_8021F5E0 00000000 00000000 FBF40000 00000000
}

% Origin: HINT
#new:PartsTable $PartsTable_8021F774
{
	00020001 01000000 022300FF $IdleAnimations_8021F830 $DefenseTable_8021F5EC 00800000 00000000 FBF40000 00000000
	00800000 02000000 F62300FF $IdleAnimations_8021F87C $DefenseTable_8021F5EC 00000000 00000000 00F80000 00000000
	00020001 03000000 000000FF $IdleAnimations_8021F8C8 $DefenseTable_8021F5EC 00000000 00000000 00000000 00000000
}

#new:Actor $RMagikoopa
{
	% stats
	[Index]        51b
	[Level]        21`b
	[MaxHP]        11`b
	[Coins]         2`b
	[Flags]       00000000
	[StatusTable] $StatusTable_8021F5F8
	% ai
	[PartsCount]    1`s
	[PartsTable]  $PartsTable_8021F750
	[Script]      $Script_Init_80221A18
	% move effectiveness
	[Escape]       40`b
	[Item]         40`b
	[AirLift]      80`b
	[Hurricane]    70`b % Bow's "Spook" as well
	[UpAndAway]    95`b
	[PowerBounce]  80`b
	[SpinSmash]     0`b % weight (0-4)
	% ui positions
	[Size]         36`b  40`b % width height
	[HealthBar]     0`b   0`b % dx dy
	[StatusTurn]  -10`b  20`b % dx dy
	[StatusIcon]   10`b  32`b % dx dy
}

% Origin: HINT
#new:Actor $FlyingRMagikoopa
{
	% stats
	[Index]        52b
	[Level]        21`b
	[MaxHP]        11`b
	[Coins]         2`b
	[Flags]       00000200
	[StatusTable] $StatusTable_8021F6A4
	% ai
	[PartsCount]    3`s
	[PartsTable]  $PartsTable_8021F774
	[Script]      $Script_Init_80221ABC
	% move effectiveness
	[Escape]       40`b
	[Item]         40`b
	[AirLift]      95`b
	[Hurricane]    75`b % Bow's "Spook" as well
	[UpAndAway]    95`b
	[PowerBounce]  80`b
	[SpinSmash]     0`b % weight (0-4)
	% ui positions
	[Size]         48`b  40`b % width height
	[HealthBar]     0`b   0`b % dx dy
	[StatusTurn]  -25`b  20`b % dx dy
	[StatusIcon]    1`b  34`b % dx dy
}

% Origin: HINT
#new:IdleAnimations $IdleAnimations_8021F830
{
	.Status:Normal    00560101
	.Status:Stone     00560100
	.Status:Sleep     00560108
	.Status:Poison    00560101
	.Status:Stop      00560100
	.Status:Static    00560101
	.Status:Paralyze  00560100
	.Status:Dizzy     00560107
	.Status:Fear      00560107
	.Status:End
}

% Origin: HINT
#new:IdleAnimations $IdleAnimations_8021F87C
{
	.Status:Normal    00570101
	.Status:Stone     00570100
	.Status:Sleep     00570108
	.Status:Poison    00570101
	.Status:Stop      00570100
	.Status:Static    00570101
	.Status:Paralyze  00570100
	.Status:Dizzy     00570107
	.Status:Fear      00570107
	.Status:End
}

% Origin: HINT
#new:IdleAnimations $IdleAnimations_8021F8C8
{
	.Status:Normal    0057010A
	.Status:End
}

% Origin: HINT
#new:Script $Script_Idle_8021F8D4
{
    0:  Return
    8:  End
}

#new:Script $Script_HandleEvent_8021F8E4
{
    0:  Call  UseIdleAnimation  ( .Actor:Self .False )
   14:  Call  EnableIdleScript  ( .Actor:Self 00000000 )
   28:  Call  GetLastEvent      ( .Actor:Self *Var0 )
   3C:  Switch  *Var0
   48:  	CaseOR  ==  .Event:HitCombo % 9
   54:  	CaseOR  ==  .Event:Hit % A
   60:  		SetConst  *Var0  00000001
   70:  		SetConst  *Var1  00560104
   80:  		ExecWait  DoNormalHit
   8C:  	EndCaseGroup
   94:  	Case  ==  .Event:BurnHit % E
   A0:  		SetConst  *Var0  00000001
   B0:  		SetConst  *Var1  00560105
   C0:  		SetConst  *Var2  00560106
   D0:  		ExecWait  DoBurnHit
   DC:  	Case  ==  .Event:BurnDeath % 24
   E8:  		SetConst  *Var0  00000001
   F8:  		SetConst  *Var1  00560105
  108:  		SetConst  *Var2  00560106
  118:  		ExecWait  DoBurnHit
  124:  		SetConst  *Var0  00000001
  134:  		SetConst  *Var1  00560106
  144:  		ExecWait  DoDeath
  150:  		Return
  158:  	Case  ==  .Event:SpinSmashHit % B
  164:  		SetConst  *Var0  00000001
  174:  		SetConst  *Var1  00560104
  184:  		ExecWait  DoSpinSmashHit
  190:  	Case  ==  .Event:SpinSmashDeath % 21
  19C:  		SetConst  *Var0  00000001
  1AC:  		SetConst  *Var1  00560104
  1BC:  		ExecWait  DoSpinSmashHit
  1C8:  		SetConst  *Var0  00000001
  1D8:  		SetConst  *Var1  00560104
  1E8:  		ExecWait  DoDeath
  1F4:  		Return
  1FC:  	CaseOR  ==  00000017 % 17
  208:  	CaseOR  ==  .Event:Immune % 19
  214:  	CaseOR  ==  .Event:AirLiftFailed % 1F
  220:  		SetConst  *Var0  00000001
  230:  		SetConst  *Var1  00560101
  240:  		ExecWait  DoImmune
  24C:  	EndCaseGroup
  254:  	Case  ==  .Event:Death % 20
  260:  		SetConst  *Var0  00000001
  270:  		SetConst  *Var1  00560104
  280:  		ExecWait  DoNormalHit
  28C:  		Wait  10`
  298:  		SetConst  *Var0  00000001
  2A8:  		SetConst  *Var1  00560104
  2B8:  		ExecWait  DoDeath
  2C4:  		Return
  2CC:  	Case  ==  .Event:RecoverStatus % 31
  2D8:  		SetConst  *Var0  00000001
  2E8:  		SetConst  *Var1  00560101
  2F8:  		ExecWait  DoRecover
  304:  	Case  ==  .Event:ScareAway % 39
  310:  		Call  SetAnimation  ( .Actor:Self 00000001 00560104 )
  328:  		Call  SetActorJumpGravity   ( .Actor:Self *Fixed[1.5] )
  33C:  		Call  GetActorPos   ( .Actor:Self *Var0 *Var1 *Var2 )
  358:  		Call  SetGoalPos    ( .Actor:Self *Var0 *Var1 *Var2 )
  374:  		Call  JumpToGoal    ( .Actor:Self  15` .False .True .False )
  394:  		Wait  15`
  3A0:  		Call  SetAnimation  ( .Actor:Self 00000001 00560102 )
  3B8:  		ExecWait  $Script_RMagikoopa_RunAway
  3C4:  		Return
  3CC:  	Case  ==  .Event:BeginAirLift % 3A
  3D8:  		SetConst  *Var0  00000001
  3E8:  		SetConst  *Var1  00560102
  3F8:  		ExecWait  DoAirLift
  404:  	Case  ==  .Event:BlowAway % 16
  410:  		Call  GetStatusFlags    ( .Actor:Self *Var0 )
  424:  		If  *Var0  !&  ~Flags:StatusFlags:Sleep|Frozen|Fear|Paralyze|Dizzy|Stone|Stop % 35D000
  434:  			If  *Var0  &  ~Flags:StatusFlags:Shrink % 80000
  444:  				Call  SetPartDispOffset ( .Actor:Self 00000001 00000000 00000002 00000000 )
  464:  			Else
  46C:  				Call  SetPartDispOffset ( .Actor:Self 00000001 FFFFFFFC 00000005 00000000 )
  48C:  			EndIf
  494:  		EndIf
  49C:  		SetConst  *Var0  00000001
  4AC:  		SetConst  *Var1  00560104
  4BC:  		ExecWait  DoBlowAway
  4C8:  		Return
  4D0:  	Default
  4D8:  EndSwitch
  4E0:  Call  EnableIdleScript  ( .Actor:Self 00000001 )
  4F4:  Call  UseIdleAnimation  ( .Actor:Self .True )
  508:  Return
  510:  End
}

% Origin: HINT
#new:Script $Script_8021FDFC
{
    0:  Call  GetBattleFlags    ( *Var0 )
   10:  If  *Var0  !&  00080000
   20:  	If  *Var0  &  00000240
   30:  		Call  SetActorVar   ( .Actor:Self 00000000 00000001 )
   48:  	EndIf
   50:  Else
   58:  	Call  $Function_80218458    ( *Var0 )
   68:  	Switch  *Var0
   74:  		CaseOR  ==  00000083
   80:  		CaseOR  ==  00000084
   8C:  		CaseOR  ==  00000085
   98:  		CaseOR  ==  00000088
   A4:  			Call  GetBattleFlags    ( *Var0 )
   B4:  			If  *Var0  &  00000240
   C4:  				Call  SetActorVar   ( .Actor:Self 00000000 00000001 )
   DC:  			EndIf
   E4:  		EndCaseGroup
   EC:  	EndSwitch
   F4:  EndIf
   FC:  Return
  104:  End
}

% Origin: HINT
#new:Script $Script_8021FF08
{
    0:  Call  GetActorVar   ( .Actor:Self 00000000 *Var0 )
   18:  If  *Var0  ==  00000001
   28:  	Call  SetAnimation  ( .Actor:Self 00000001 00560104 )
   40:  	Goto  0
   4C:  EndIf
   54:  Call  GetLastElement    ( *Var0 )
   64:  If  *Var0  &  00000400
   74:  	Call  SetAnimation  ( .Actor:Self 00000001 00560104 )
   8C:  	Goto  0
   98:  EndIf
   A0:  Return
   A8:  Label  0
   B4:  Call  8027D32C  ( FFFFFF81 )
   C4:  Call  GetStatusFlags    ( .Actor:Self *Var0 )
   D8:  If  *Var0  &  ~Flags:StatusFlags:Shrink % 80000
   E8:  	Call  SetPartScale  ( .Actor:Self 00000003 *Fixed[0.4] *Fixed[0.4] *Fixed[0.4] )
  108:  EndIf
  110:  Call  SetPartFlagBits   ( .Actor:Self 00000001 00800000 .True )
  12C:  Call  SetPartFlagBits   ( .Actor:Self 00000001 00020001 .False )
  148:  Call  SetPartFlagBits   ( .Actor:Self 00000002 00020001 .True )
  164:  Call  SetPartFlagBits   ( .Actor:Self 00000002 00800000 .False )
  180:  Call  SetPartFlagBits   ( .Actor:Self 00000003 00100000 .True )
  19C:  Call  SetPartFlagBits   ( .Actor:Self 00000003 00000001 .False )
  1B8:  Call  GetActorPos       ( .Actor:Self *Var0 *Var1 *Var2 )
  1D4:  Sub   *Var2  00000001
  1E4:  Call  SetPartPos        ( .Actor:Self 00000003 *Var0 *Var1 *Var2 )
  204:  Call  PlaySoundAtActor  ( .Actor:Self 00000301 )
  218:  Call  GetActorPos       ( .Actor:Self *Var0 *Var1 *Var2 )
  234:  Set   *Var1  00000000
  244:  Call  SetActorJumpGravity   ( .Actor:Self *Fixed[0.8] )
  258:  Call  SetGoalPos        ( .Actor:Self *Var0 *Var1 *Var2 )
  274:  Call  JumpToGoal        ( .Actor:Self  15` .False .True .False )
  294:  Call  $Function_80218550    ( 00000096 0000000A )
  2A8:  Thread
  2B0:  	Call  ShakeCam  ( .Cam:Battle 00000000  5` *Fixed[0.7] )
  2CC:  EndThread
  2D4:  Call  GetLastEvent  ( .Actor:Self *Var3 )
  2E8:  If  *Var3  ==  0000000F % F
  2F8:  	Call  SetAnimation  ( .Actor:Self 00000001 00560104 )
  310:  	Call  GetActorPos   ( .Actor:Self *Var3 *Var4 *Var5 )
  32C:  	Add   *Var4  0000000A
  33C:  	Add   *Var5  00000005
  34C:  	Call  PlayEffect    ( ~FX:SmokeBurst:Black *Var3 *Var4 *Var5 *Fixed[1.0] 0000000A 00000000 00000000 00000000 00000000 00000000 00000000 00000000 )
  390:  EndIf
  398:  Call  SetGoalPos    ( .Actor:Self *Var0 *Var1 *Var2 )
  3B4:  Call  JumpToGoal    ( .Actor:Self  10` .False .True .False )
  3D4:  Call  SetGoalPos    ( .Actor:Self *Var0 *Var1 *Var2 )
  3F0:  Call  JumpToGoal    ( .Actor:Self  5` .False .True .False )
  410:  Loop  00000014
  41C:  	Call  SetPartFlagBits   ( .Actor:Self 00000003 00000001 .True )
  438:  	Wait  1`
  444:  	Call  SetPartFlagBits   ( .Actor:Self 00000003 00000001 .False )
  460:  	Wait  1`
  46C:  EndLoop
  474:  Call  SetPartFlagBits   ( .Actor:Self 00000003 00000001 .True )
  490:  Call  SetAnimation      ( .Actor:Self 00000001 00560101 )
  4A8:  Call  SetActorFlagBits  ( .Actor:Self 00000200 .False )
  4C0:  Call  BindHandleEvent   ( .Actor:Self $Script_HandleEvent_8021F8E4 )
  4D4:  Call  SetActorType      ( .Actor:Self 00000051 )
  4E8:  Call  SetStatusTable    ( .Actor:Self $StatusTable_8021F5F8 )
  4FC:  Call  $Function_80218484    ( FFFFFFF6 00000014 0000000A 00000020 )
  518:  Call  SetActorFlagBits  ( .Actor:Self 00001000 .True )
  530:  Call  ResetAllActorSounds   ( .Actor:Self )
  540:  Call  GetIndexFromPos   ( .Actor:Self *Var0 )
  554:  Mod   *Var0  00000004
  564:  Call  SetGoalToIndex    ( .Actor:Self *Var0 )
  578:  Call  SetActorSpeed     ( .Actor:Self *Fixed[4.0] )
  58C:  Call  RunToGoal ( .Actor:Self  0` .False )
  5A4:  Call  GetGoalPos        ( .Actor:Self *Var0 *Var1 *Var2 )
  5C0:  Call  ForceHomePos      ( .Actor:Self *Var0 *Var1 *Var2 )
  5DC:  Call  HPBarToHome       ( .Actor:Self )
  5EC:  Return
  5F4:  End
}

% Origin: HINT
#new:Script $Script_HandleEvent_80220504
{
    0:  Call  UseIdleAnimation  ( .Actor:Self .False )
   14:  Call  EnableIdleScript  ( .Actor:Self 00000000 )
   28:  Call  GetLastEvent      ( .Actor:Self *Var0 )
   3C:  Switch  *Var0
   48:  	Case  ==  .Event:HitCombo % 9
   54:  		ExecWait  $Script_8021FDFC
   60:  		SetConst  *Var0  00000002
   70:  		SetConst  *Var1  00570104
   80:  		ExecWait  DoNormalHit
   8C:  	CaseOR  ==  .Event:Hit % A
   98:  	CaseOR  ==  .Event:FallTrigger % C
   A4:  		ExecWait  $Script_8021FDFC
   B0:  		SetConst  *Var0  00000002
   C0:  		SetConst  *Var1  00570104
   D0:  		ExecWait  DoNormalHit
   DC:  		ExecWait  $Script_8021FF08
   E8:  	EndCaseGroup
   F0:  	CaseOR  ==  .Event:BurnHit % E
   FC:  	CaseOR  ==  0000000F % F
  108:  		ExecWait  $Script_8021FDFC
  114:  		SetConst  *Var0  00000002
  124:  		SetConst  *Var1  00570105
  134:  		SetConst  *Var2  00570106
  144:  		ExecWait  DoBurnHit
  150:  		ExecWait  $Script_8021FF08
  15C:  	EndCaseGroup
  164:  	Case  ==  .Event:BurnDeath % 24
  170:  		SetConst  *Var0  00000002
  180:  		SetConst  *Var1  00570105
  190:  		SetConst  *Var2  00570106
  1A0:  		ExecWait  DoBurnHit
  1AC:  		SetConst  *Var0  00000002
  1BC:  		SetConst  *Var1  00570106
  1CC:  		ExecWait  DoDeath
  1D8:  		Return
  1E0:  	Case  ==  .Event:SpinSmashHit % B
  1EC:  		SetConst  *Var0  00000002
  1FC:  		SetConst  *Var1  00570104
  20C:  		ExecWait  DoSpinSmashHit
  218:  	Case  ==  .Event:SpinSmashDeath % 21
  224:  		SetConst  *Var0  00000002
  234:  		SetConst  *Var1  00570104
  244:  		ExecWait  DoSpinSmashHit
  250:  		SetConst  *Var0  00000002
  260:  		SetConst  *Var1  00570104
  270:  		ExecWait  DoDeath
  27C:  		Return
  284:  	CaseOR  ==  00000017 % 17
  290:  	CaseOR  ==  .Event:Immune % 19
  29C:  	CaseOR  ==  .Event:AirLiftFailed % 1F
  2A8:  		SetConst  *Var0  00000002
  2B8:  		SetConst  *Var1  00570101
  2C8:  		ExecWait  DoImmune
  2D4:  	EndCaseGroup
  2DC:  	Case  ==  .Event:Death % 20
  2E8:  		SetConst  *Var0  00000002
  2F8:  		SetConst  *Var1  00570104
  308:  		ExecWait  DoNormalHit
  314:  		Wait  10`
  320:  		SetConst  *Var0  00000002
  330:  		SetConst  *Var1  00570104
  340:  		ExecWait  DoDeath
  34C:  		Return
  354:  	Case  ==  .Event:BeginFirstStrike % 38
  360:  		Call  SetActorPos       ( .Actor:Self  20`  0`  0` )
  37C:  		Call  HPBarToCurrent    ( .Actor:Self )
  38C:  	Case  ==  .Event:EndFirstStrike % 35
  398:  		Call  SetAnimation  ( .Actor:Self 00000002 00570101 )
  3B0:  		Call  SetGoalToHome ( .Actor:Self )
  3C0:  		Call  SetActorSpeed ( .Actor:Self *Fixed[4.0] )
  3D4:  		Call  FlyToGoal     ( .Actor:Self  0`  1` .Easing:Linear )
  3F0:  		Call  SetAnimation  ( .Actor:Self 00000002 00570101 )
  408:  		Call  HPBarToHome   ( .Actor:Self )
  418:  	Case  ==  .Event:RecoverStatus % 31
  424:  		SetConst  *Var0  00000002
  434:  		SetConst  *Var1  00570101
  444:  		ExecWait  DoRecover
  450:  	Case  ==  .Event:ScareAway % 39
  45C:  		Call  SetAnimation  ( .Actor:Self 00000002 00570104 )
  474:  		Call  SetActorJumpGravity   ( .Actor:Self *Fixed[1.5] )
  488:  		Call  GetActorPos   ( .Actor:Self *Var0 *Var1 *Var2 )
  4A4:  		Call  SetGoalPos    ( .Actor:Self *Var0 *Var1 *Var2 )
  4C0:  		Call  JumpToGoal    ( .Actor:Self  15` .False .True .False )
  4E0:  		Wait  15`
  4EC:  		Call  SetAnimation  ( .Actor:Self 00000002 00570102 )
  504:  		ExecWait  $Script_RMagikoopa_RunAway
  510:  		Return
  518:  	Case  ==  .Event:BeginAirLift % 3A
  524:  		SetConst  *Var0  00000002
  534:  		SetConst  *Var1  00570102
  544:  		ExecWait  DoAirLift
  550:  	Case  ==  .Event:BlowAway % 16
  55C:  		Call  GetStatusFlags    ( .Actor:Self *Var0 )
  570:  		If  *Var0  !&  ~Flags:StatusFlags:Sleep|Frozen|Fear|Paralyze|Dizzy|Stone|Stop % 35D000
  580:  			If  *Var0  &  ~Flags:StatusFlags:Shrink % 80000
  590:  				Call  SetPartDispOffset ( .Actor:Self 00000002 FFFFFFFD 00000000 00000000 )
  5B0:  			Else
  5B8:  				Call  SetPartDispOffset ( .Actor:Self 00000002 FFFFFFF1 00000000 00000000 )
  5D8:  			EndIf
  5E0:  		EndIf
  5E8:  		SetConst  *Var0  00000002
  5F8:  		SetConst  *Var1  00570104
  608:  		ExecWait  DoBlowAway
  614:  		Return
  61C:  	Default
  624:  EndSwitch
  62C:  Call  EnableIdleScript  ( .Actor:Self 00000001 )
  640:  Call  UseIdleAnimation  ( .Actor:Self .True )
  654:  Return
  65C:  End
}

% Origin: HINT
#new:Script $Script_RMagikoopa_ShapeSpell
{
    0:  Call  UseIdleAnimation  ( .Actor:Self .False )
   14:  Call  EnableIdleScript  ( .Actor:Self 00000000 )
   28:  Call  SetTargetActor    ( .Actor:Self .Actor:Player )
   3C:  Call  GetBattlePhase    ( *Var0 )
   4C:  If  *Var0  ==  00000001
   5C:  	Call  UseBattleCamPreset    ( 00000002 )
   6C:  	Call  MoveBattleCamOver     (  1` )
   7C:  Else
   84:  	Call  UseBattleCamPreset    ( 00000002 )
   94:  	Call  MoveBattleCamOver     (  10` )
   A4:  EndIf
   AC:  Call  PlaySoundAtActor  ( .Actor:Self .Sound:SpellCast1 )
   C0:  Call  GetActorPos       ( .Actor:Self *Var0 *Var1 *Var2 )
   DC:  Call  GetStatusFlags    ( .Actor:Self *VarA )
   F0:  If  *VarA  &  ~Flags:StatusFlags:Shrink % 80000
  100:  	Sub   *Var0  0000000C
  110:  	Add   *Var1  0000000E
  120:  Else
  128:  	Sub   *Var0  0000001E
  138:  	Add   *Var1  00000024
  148:  EndIf
  150:  Call  PlayEffect        ( ~FX:GatherMagic:Pink *Var0 *Var1 *Var2 *Fixed[0.5] 0000001E 00000000 00000000 00000000 00000000 00000000 00000000 00000000 )
  194:  Call  SetAnimation      ( .Actor:Self 00000002 00570102 )
  1AC:  Wait  30`
  1B8:  Call  EnemyTestTarget   ( .Actor:Self *Var0 ~Flags:DamageType:0 00000000 00000001 00000010 )
  1DC:  Switch  *Var0
  1E8:  	CaseOR  ==  .HitResult:Miss % 6
  1F4:  	CaseOR  ==  .HitResult:Lucky % 5
  200:  		Set   *VarA  *Var0
  210:  		Call  PlaySoundAtActor  ( .Actor:Self .Sound:SpellCast2 )
  224:  		Call  SetAnimation      ( .Actor:Self 00000002 00570103 )
  23C:  		Wait  5`
  248:  		Call  GetActorPos       ( .Actor:Self *Var0 *Var1 *Var2 )
  264:  		Call  GetStatusFlags    ( .Actor:Self *Var9 )
  278:  		If  *Var9  &  ~Flags:StatusFlags:Shrink % 80000
  288:  			Sub   *Var0  00000008
  298:  			Add   *Var1  00000008
  2A8:  		Else
  2B0:  			Sub   *Var0  00000014
  2C0:  			Add   *Var1  00000014
  2D0:  		EndIf
  2D8:  		Call  SetGoalToTarget       ( .Actor:Self )
  2E8:  		Call  GetGoalPos    ( .Actor:Self *Var3 *Var4 *Var5 )
  304:  		Sub   *Var3  00000032
  314:  		Set   *Var4  00000000
  324:  		Call  $Function_80218300    ( *Var0 *Var1 *Var5 *Var3 *Var4 *Var5 00000019 )
  34C:  		Wait  50`
  358:  		If  *VarA  ==  .HitResult:Lucky % 5
  368:  			Call  EnemyTestTarget   ( .Actor:Self *Var0 ~Flags:DamageType:TriggerLucky 00000000 00000000 00000000 )
  38C:  		EndIf
  394:  		Wait  14`
  3A0:  		Call  YieldTurn ( )
  3AC:  		Call  AddActorDecoration    ( .Actor:Self 00000002 00000000 .Decoration:Sweat )
  3C8:  		Wait  30`
  3D4:  		Call  RemoveActorDecoration ( .Actor:Self 00000002 00000000 )
  3EC:  		Call  EnableIdleScript      ( .Actor:Self 00000001 )
  400:  		Call  UseIdleAnimation      ( .Actor:Self .True )
  414:  		Return
  41C:  	EndCaseGroup
  424:  EndSwitch
  42C:  Call  PlaySoundAtActor  ( .Actor:Self .Sound:SpellCast2 )
  440:  Call  SetAnimation      ( .Actor:Self 00000002 00570103 )
  458:  Wait  5`
  464:  Call  GetActorPos       ( .Actor:Self *Var0 *Var1 *Var2 )
  480:  Call  GetStatusFlags    ( .Actor:Self *VarA )
  494:  If  *VarA  &  ~Flags:StatusFlags:Shrink % 80000
  4A4:  	Sub   *Var0  00000008
  4B4:  	Add   *Var1  00000008
  4C4:  Else
  4CC:  	Sub   *Var0  00000014
  4DC:  	Add   *Var1  00000014
  4EC:  EndIf
  4F4:  Call  SetGoalToTarget   ( .Actor:Self )
  504:  Call  GetGoalPos        ( .Actor:Self *Var3 *Var4 *Var5 )
  520:  Sub   *Var3  0000000A
  530:  Call  $Function_80218300    ( *Var0 *Var1 *Var5 *Var3 *Var4 *Var5 00000014 )
  558:  Wait  18`
  564:  Wait  2`
  570:  Call  EnemyDamageTarget ( .Actor:Self *Var0 ~Flags:DamageType:NoContact|Magic 00000000 00000000 00000003 00000020 )
  598:  Switch  *Var0
  5A4:  	CaseOR  ==  .HitResult:Hit % 0
  5B0:  	CaseOR  ==  .HitResult:QuakeImmune % 2
  5BC:  		Wait  19`
  5C8:  		Call  YieldTurn ( )
  5D4:  	EndCaseGroup
  5DC:  EndSwitch
  5E4:  Call  EnableIdleScript  ( .Actor:Self 00000001 )
  5F8:  Call  UseIdleAnimation  ( .Actor:Self .True )
  60C:  Return
  614:  End
}

% Origin: HINT
#new:Script $Script_RMagikoopa_WandStrike
{
    0:  Call  UseIdleAnimation  ( .Actor:Self .False )
   14:  Call  EnableIdleScript  ( .Actor:Self 00000000 )
   28:  Call  SetTargetActor    ( .Actor:Self .Actor:Player )
   3C:  Call  UseBattleCamPreset    ( 0000003F )
   4C:  Call  BattleCamTargetActor  ( .Actor:Self )
   5C:  Call  8024ECF8  ( FFFFFFFF 00000001 00000000 )
   74:  Call  PlaySoundAtActor  ( .Actor:Self 000002DB )
   88:  Thread
   90:  	Call  SetAnimation  ( .Actor:Self 00000001 00560102 )
   A8:  	Set   *Var0  000000C8
   B8:  	Loop  00000014
   C4:  		Sub   *Var0  0000000A
   D4:  		Call  SetPartAlpha  ( .Actor:Self 00000001 *Var0 )
   EC:  		Wait  1`
   F8:  	EndLoop
  100:  EndThread
  108:  Wait  10`
  114:  Call  SetGoalToTarget   ( .Actor:Self )
  124:  Call  GetGoalPos        ( .Actor:Self *Var0 *Var1 *Var2 )
  140:  Call  GetStatusFlags    ( .Actor:Self *VarA )
  154:  If  *VarA  &  ~Flags:StatusFlags:Shrink % 80000
  164:  	Add   *Var0  00000005
  174:  Else
  17C:  	Add   *Var0  00000019
  18C:  EndIf
  194:  Set   *Var1  00000000
  1A4:  Call  SetGoalPos    ( .Actor:Self *Var0 *Var1 *Var2 )
  1C0:  Call  FlyToGoal     ( .Actor:Self  30`  0` .Easing:CosInOut )
  1DC:  Set   *Var0  00000037
  1EC:  Loop  00000014
  1F8:  	Add   *Var0  0000000A
  208:  	Call  SetPartAlpha  ( .Actor:Self 00000001 *Var0 )
  220:  	Wait  1`
  22C:  EndLoop
  234:  Call  SetPartAlpha      ( .Actor:Self 00000001 000000FF )
  24C:  Call  SetAnimation      ( .Actor:Self 00000001 00560103 )
  264:  Wait  11`
  270:  Call  PlaySoundAtActor  ( .Actor:Self 000002DC )
  284:  Call  EnemyTestTarget   ( .Actor:Self *Var0 ~Flags:DamageType:0 00000000 00000001 00000010 )
  2A8:  Switch  *Var0
  2B4:  	CaseOR  ==  .HitResult:Miss % 6
  2C0:  	CaseOR  ==  .HitResult:Lucky % 5
  2CC:  		Set   *VarA  *Var0
  2DC:  		Call  UseBattleCamPreset    ( 00000002 )
  2EC:  		If  *VarA  ==  .HitResult:Lucky % 5
  2FC:  			Call  EnemyTestTarget   ( .Actor:Self *Var0 ~Flags:DamageType:TriggerLucky 00000000 00000000 00000000 )
  320:  		EndIf
  328:  		Wait  15`
  334:  		Set   *Var0  000000C8
  344:  		Loop  00000014
  350:  			Sub   *Var0  0000000A
  360:  			Call  SetPartAlpha  ( .Actor:Self 00000001 *Var0 )
  378:  			Wait  1`
  384:  		EndLoop
  38C:  		Call  YieldTurn ( )
  398:  		Call  SetGoalToHome ( .Actor:Self )
  3A8:  		Call  SetAnimation  ( .Actor:Self 00000001 00560101 )
  3C0:  		Call  FlyToGoal     ( .Actor:Self  30`  0` .Easing:CosInOut )
  3DC:  		Set   *Var0  00000037
  3EC:  		Loop  00000014
  3F8:  			Add   *Var0  0000000A
  408:  			Call  SetPartAlpha  ( .Actor:Self 00000001 *Var0 )
  420:  			Wait  1`
  42C:  		EndLoop
  434:  		Call  SetPartAlpha      ( .Actor:Self 00000001 000000FF )
  44C:  		Call  EnableIdleScript  ( .Actor:Self 00000001 )
  460:  		Call  UseIdleAnimation  ( .Actor:Self .True )
  474:  		Return
  47C:  	EndCaseGroup
  484:  EndSwitch
  48C:  Call  SetGoalToTarget   ( .Actor:Self )
  49C:  Wait  2`
  4A8:  Call  EnemyDamageTarget ( .Actor:Self *Var0 ~Flags:DamageType:NoContact 00000000 00000000 00000003 00000020 )
  4D0:  Switch  *Var0
  4DC:  	CaseOR  ==  .HitResult:Hit % 0
  4E8:  	CaseOR  ==  .HitResult:QuakeImmune % 2
  4F4:  		Call  UseBattleCamPreset    ( 00000002 )
  504:  		Wait  10`
  510:  		Set   *Var0  000000C8
  520:  		Loop  00000014
  52C:  			Sub   *Var0  0000000A
  53C:  			Call  SetPartAlpha  ( .Actor:Self 00000001 *Var0 )
  554:  			Wait  1`
  560:  		EndLoop
  568:  		Call  YieldTurn ( )
  574:  		Call  SetGoalToHome ( .Actor:Self )
  584:  		Call  SetAnimation  ( .Actor:Self 00000001 00560101 )
  59C:  		Call  FlyToGoal     ( .Actor:Self  20`  0` .Easing:CosInOut )
  5B8:  		Set   *Var0  00000037
  5C8:  		Loop  00000014
  5D4:  			Add   *Var0  0000000A
  5E4:  			Call  SetPartAlpha  ( .Actor:Self 00000001 *Var0 )
  5FC:  			Wait  1`
  608:  		EndLoop
  610:  		Call  SetPartAlpha  ( .Actor:Self 00000001 000000FF )
  628:  	EndCaseGroup
  630:  EndSwitch
  638:  Call  EnableIdleScript  ( .Actor:Self 00000001 )
  64C:  Call  UseIdleAnimation  ( .Actor:Self .True )
  660:  Return
  668:  End
}

% Origin: HINT
#new:Script $Script_RMagikoopa_RunAway
{
    0:  Call  UseIdleAnimation  ( .Actor:Self .False )
   14:  Call  EnableIdleScript  ( .Actor:Self 00000000 )
   28:  Call  8027D32C  ( FFFFFF81 )
   38:  Call  GetLastEvent      ( .Actor:Self *Var0 )
   4C:  If  *Var0  !=  .Event:ScareAway % 39
   5C:  	Call  UseBattleCamPreset    ( 0000000E )
   6C:  	Call  BattleCamTargetActor  ( .Actor:Self )
   7C:  	Call  MoveBattleCamOver     (  15` )
   8C:  	Wait  15`
   98:  	Call  UseBattleCamPreset    ( 00000001 )
   A8:  EndIf
   B0:  Call  SetActorSpeed ( .Actor:Self *Fixed[1.0] )
   C4:  Call  GetActorPos   ( .Actor:Self *Var0 *Var1 *Var2 )
   E0:  Add   *Var0  00000014
   F0:  Call  SetGoalPos    ( .Actor:Self *Var0 *Var1 *Var2 )
  10C:  Call  RunToGoal     ( .Actor:Self  0` .False )
  124:  Wait  10`
  130:  Call  SetActorYaw   ( .Actor:Self  180` )
  144:  Call  EnableActorBlur       ( .Actor:Self 00000001 )
  158:  Call  SetActorSpeed ( .Actor:Self *Fixed[10.0] )
  16C:  Call  GetActorPos   ( .Actor:Self *Var0 *Var1 *Var2 )
  188:  Add   *Var0  000000C8
  198:  Call  SetGoalPos    ( .Actor:Self *Var0 *Var1 *Var2 )
  1B4:  Call  RunToGoal     ( .Actor:Self  0` .False )
  1CC:  Call  YieldTurn ( )
  1D8:  Call  UseBattleCamPreset    ( 00000002 )
  1E8:  ExecWait  ForceNextTarget
  1F4:  Call  8027D32C      ( FFFFFF81 )
  204:  Call  RemoveActor   ( .Actor:Self )
  214:  Return
  21C:  End
}

#new:Script $Script_Init_80221A18
{
    0:  Call  BindIdle      ( .Actor:Self $Script_Idle_8021F8D4 )
   14:  Call  BindTakeTurn  ( .Actor:Self $Script_TakeTurn_80221B60 )
   28:  Call  BindHandleEvent   ( .Actor:Self $Script_HandleEvent_8021F8E4 )
   3C:  Call  GetBattleVar  ( 00000002 *Var0 )
   50:  If  *Var0  ==  00000000
   60:  	Call  SetBattleVar  ( 00000002 FFFFFFFF )
   74:  EndIf
   7C:  Call  SetActorVar   ( .Actor:Self 00000000 00000000 )
   94:  Return
   9C:  End
}

% Origin: HINT
#new:Script $Script_Init_80221ABC
{
    0:  Call  BindIdle      ( .Actor:Self $Script_Idle_8021F8D4 )
   14:  Call  BindTakeTurn  ( .Actor:Self $Script_TakeTurn_80221B60 )
   28:  Call  BindHandleEvent   ( .Actor:Self $Script_HandleEvent_80220504 )
   3C:  Call  GetBattleVar  ( 00000002 *Var0 )
   50:  If  *Var0  ==  00000000
   60:  	Call  SetBattleVar  ( 00000002 FFFFFFFF )
   74:  EndIf
   7C:  Call  SetActorVar   ( .Actor:Self 00000000 00000000 )
   94:  Return
   9C:  End
}

% Origin: HINT
#new:Script $Script_TakeTurn_80221B60
{
    0:  Set   *Flag[00]  .False
   10:  Label  A
   1C:  Call  EnemyCreateTargetList ( 00008002 )
   2C:  Call  InitTargetIterator ( )
   38:  Label  0
   44:  Call  GetOwnerTarget    ( *Var0 *Var1 )
   58:  Call  GetIndexFromHome  ( *Var0 *Var1 )
   6C:  Call  GetBattleVar      ( 00000002 *Var2 )
   80:  If  *Var1  >  *Var2
   90:  	Call  $Function_802185A8    ( *Var0 *Var3 )
   A4:  	If  *Var3  ==  00000000
   B4:  		Call  GetActorAttackBoost   ( *Var0 *Var4 )
   C8:  		If  *Var4  <  00000003
   D8:  			Set   *Var8  *Var0
   E8:  			Call  SetBattleVar  ( 00000002 *Var1 )
   FC:  			Goto  64
  108:  		EndIf
  110:  	EndIf
  118:  EndIf
  120:  Call  ChooseNextTarget  ( .Iter:Next *Var0 )
  134:  If  *Var0  !=  FFFFFFFF
  144:  	Goto  0
  150:  EndIf
  158:  If  *Flag[00]  ==  .False
  168:  	Set   *Flag[00]  .True
  178:  	Call  SetBattleVar  ( 00000002 FFFFFFFF )
  18C:  	Goto  A
  198:  EndIf
  1A0:  Call  CountPlayerTargets    ( .Actor:Self 00008002 *Var0 )
  1B8:  If  *Var0  ==  00000001
  1C8:  	ExecWait  $Script_RMagikoopa_RunAway
  1D4:  	Return
  1DC:  EndIf
  1E4:  Call  GetActorFlags ( .Actor:Self *Var0 )
  1F8:  If  *Var0  &  00000200
  208:  	ExecWait  $Script_RMagikoopa_ShapeSpell
  214:  Else
  21C:  	ExecWait  $Script_RMagikoopa_WandStrike
  228:  EndIf
  230:  Return
  238:  Label  64
  244:  Call  UseIdleAnimation  ( .Actor:Self .False )
  258:  Call  EnableIdleScript  ( .Actor:Self 00000000 )
  26C:  Call  SetTargetActor    ( .Actor:Self .Actor:Player )
  280:  Call  UseBattleCamPreset    ( 0000000E )
  290:  Call  BattleCamTargetActor  ( .Actor:Self )
  2A0:  Call  MoveBattleCamOver (  15` )
  2B0:  Wait  15`
  2BC:  Call  GetActorFlags     ( .Actor:Self *Var0 )
  2D0:  If  *Var0  !&  00000200
  2E0:  	Call  SetAnimation  ( .Actor:Self 00000001 00560102 )
  2F8:  Else
  300:  	Call  SetAnimation  ( .Actor:Self 00000002 00570102 )
  318:  EndIf
  320:  Wait  5`
  32C:  Call  PlaySoundAtActor  ( .Actor:Self .Sound:SpellCast1 )
  340:  Call  GetActorFlags     ( .Actor:Self *Var0 )
  354:  If  *Var0  !&  00000200
  364:  	Call  GetActorPos       ( .Actor:Self *Var0 *Var1 *Var2 )
  380:  	Call  GetStatusFlags    ( .Actor:Self *VarA )
  394:  	If  *VarA  &  ~Flags:StatusFlags:Shrink % 80000
  3A4:  		Sub   *Var0  00000006
  3B4:  		Add   *Var1  0000000C
  3C4:  		Sub   *Var2  00000002
  3D4:  		Call  PlayEffect    ( ~FX:RadialFlowOut:YellowEnergy *Var0 *Var1 *Var2 *Fixed[0.12] 0000001E 00000000 00000000 00000000 00000000 00000000 00000000 00000000 )
  418:  	Else
  420:  		Sub   *Var0  00000010
  430:  		Add   *Var1  0000001F
  440:  		Sub   *Var2  00000002
  450:  		Call  PlayEffect    ( ~FX:RadialFlowOut:YellowEnergy *Var0 *Var1 *Var2 *Fixed[0.3] 0000001E 00000000 00000000 00000000 00000000 00000000 00000000 00000000 )
  494:  	EndIf
  49C:  Else
  4A4:  	Call  GetActorPos       ( .Actor:Self *Var0 *Var1 *Var2 )
  4C0:  	Call  GetStatusFlags    ( .Actor:Self *VarA )
  4D4:  	If  *VarA  &  ~Flags:StatusFlags:Shrink % 80000
  4E4:  		Sub   *Var0  0000000C
  4F4:  		Add   *Var1  0000000E
  504:  		Sub   *Var2  00000002
  514:  		Call  PlayEffect    ( ~FX:RadialFlowOut:YellowEnergy *Var0 *Var1 *Var2 *Fixed[0.12] 0000001E 00000000 00000000 00000000 00000000 00000000 00000000 00000000 )
  558:  	Else
  560:  		Sub   *Var0  0000001E
  570:  		Add   *Var1  00000024
  580:  		Sub   *Var2  00000002
  590:  		Call  PlayEffect    ( ~FX:RadialFlowOut:YellowEnergy *Var0 *Var1 *Var2 *Fixed[0.3] 0000001E 00000000 00000000 00000000 00000000 00000000 00000000 00000000 )
  5D4:  	EndIf
  5DC:  EndIf
  5E4:  Wait  30`
  5F0:  Call  GetActorFlags ( .Actor:Self *Var0 )
  604:  If  *Var0  !&  00000200
  614:  	Call  SetAnimation  ( .Actor:Self 00000001 00560101 )
  62C:  Else
  634:  	Call  SetAnimation  ( .Actor:Self 00000002 00570101 )
  64C:  EndIf
  654:  Wait  5`
  660:  Thread
  668:  	Wait  10`
  674:  	Call  PlaySoundAtActor  ( *Var8 000002DD )
  688:  EndThread
  690:  Thread
  698:  	Call  8026BF48      ( 00000001 )
  6A8:  	Call  BoostAttack   ( *Var8 00000001 )
  6BC:  	Call  8026BF48      ( 00000000 )
  6CC:  EndThread
  6D4:  Call  WaitForBuffDone ( )
  6E0:  Call  UseBattleCamPreset    ( 00000002 )
  6F0:  Wait  10`
  6FC:  Call  YieldTurn ( )
  708:  Call  EnableIdleScript      ( .Actor:Self 00000001 )
  71C:  Call  UseIdleAnimation      ( .Actor:Self .True )
  730:  Return
  738:  End
}

#new:DefenseTable $DefenseTable_802222A0
{
	.Element:Normal 00000000
	.Element:End
}

% Origin: HINT
#new:DefenseTable $DefenseTable_802222AC
{
	.Element:Normal 00000000
	.Element:End
}

#new:StatusTable $StatusTable_802222B8
{
	.Status:Normal      0`
	.Status:Default     0`
	.Status:Sleep      50`
	.Status:Poison     50`
	.Status:Frozen      0`
	.Status:Dizzy      75`
	.Status:Fear        0`
	.Status:Static     50`
	.Status:Paralyze   75`
	.Status:Shrink     80`
	.Status:Stop       90`
	.Status:DefaultTurnMod    0`
	.Status:SleepTurnMod      0`
	.Status:PoisonTurnMod     0`
	.Status:FrozenTurnMod     0`
	.Status:DizzyTurnMod      0`
	.Status:FearTurnMod       0`
	.Status:StaticTurnMod     0`
	.Status:ParalyzeTurnMod   0`
	.Status:ShrinkTurnMod     0`
	.Status:StopTurnMod      -1`
	.Status:End
}

% Origin: HINT
#new:StatusTable $StatusTable_80222364
{
	.Status:Normal      0`
	.Status:Default     0`
	.Status:Sleep      50`
	.Status:Poison     50`
	.Status:Frozen      0`
	.Status:Dizzy     100`
	.Status:Fear        0`
	.Status:Static     50`
	.Status:Paralyze   75`
	.Status:Shrink     80`
	.Status:Stop       90`
	.Status:DefaultTurnMod    0`
	.Status:SleepTurnMod      0`
	.Status:PoisonTurnMod     0`
	.Status:FrozenTurnMod     0`
	.Status:DizzyTurnMod      0`
	.Status:FearTurnMod       0`
	.Status:StaticTurnMod     0`
	.Status:ParalyzeTurnMod   0`
	.Status:ShrinkTurnMod     0`
	.Status:StopTurnMod      -1`
	.Status:End
}

#new:PartsTable $PartsTable_80222410
{
	00800000 01000000 022300FF $IdleAnimations_802224F0 $DefenseTable_802222A0 00000000 00000000 FBF40000 00000000
}

% Origin: HINT
#new:PartsTable $PartsTable_80222434
{
	00020001 01000000 022300FF $IdleAnimations_802224F0 $DefenseTable_802222AC 00000000 00000000 FBF40000 00000000
	00800000 02000000 F62300FF $IdleAnimations_8022253C $DefenseTable_802222AC 00800000 00000000 00F80000 00000000
	00020001 03000000 000000FF $IdleAnimations_80222588 $DefenseTable_802222AC 00000000 00000000 00000000 00000000
}

#new:Actor $GRNMagikoopa
{
	% stats
	[Index]        53b
	[Level]        21`b
	[MaxHP]        11`b
	[Coins]         2`b
	[Flags]       00000000
	[StatusTable] $StatusTable_802222B8
	% ai
	[PartsCount]    1`s
	[PartsTable]  $PartsTable_80222410
	[Script]      $Script_Init_802246D8
	% move effectiveness
	[Escape]       40`b
	[Item]         40`b
	[AirLift]      80`b
	[Hurricane]    70`b % Bow's "Spook" as well
	[UpAndAway]    95`b
	[PowerBounce]  75`b
	[SpinSmash]     0`b % weight (0-4)
	% ui positions
	[Size]         36`b  40`b % width height
	[HealthBar]     0`b   0`b % dx dy
	[StatusTurn]  -10`b  20`b % dx dy
	[StatusIcon]   10`b  32`b % dx dy
}

% Origin: HINT
#new:Actor $FlyingGRNMagikoopa
{
	% stats
	[Index]        54b
	[Level]        21`b
	[MaxHP]        11`b
	[Coins]         2`b
	[Flags]       00000200
	[StatusTable] $StatusTable_80222364
	% ai
	[PartsCount]    3`s
	[PartsTable]  $PartsTable_80222434
	[Script]      $Script_Init_8022477C
	% move effectiveness
	[Escape]       40`b
	[Item]         40`b
	[AirLift]      95`b
	[Hurricane]    75`b % Bow's "Spook" as well
	[UpAndAway]    95`b
	[PowerBounce]  75`b
	[SpinSmash]     0`b % weight (0-4)
	% ui positions
	[Size]         48`b  40`b % width height
	[HealthBar]     0`b   0`b % dx dy
	[StatusTurn]  -25`b  20`b % dx dy
	[StatusIcon]    1`b  34`b % dx dy
}

% Origin: HINT
#new:IdleAnimations $IdleAnimations_802224F0
{
	.Status:Normal    00560401
	.Status:Stone     00560400
	.Status:Sleep     00560408
	.Status:Poison    00560401
	.Status:Stop      00560400
	.Status:Static    00560401
	.Status:Paralyze  00560400
	.Status:Dizzy     00560407
	.Status:Fear      00560407
	.Status:End
}

% Origin: HINT
#new:IdleAnimations $IdleAnimations_8022253C
{
	.Status:Normal    00570401
	.Status:Stone     00570400
	.Status:Sleep     00570408
	.Status:Poison    00570401
	.Status:Stop      00570400
	.Status:Static    00570401
	.Status:Paralyze  00570400
	.Status:Dizzy     00570407
	.Status:Fear      00570407
	.Status:End
}

% Origin: HINT
#new:IdleAnimations $IdleAnimations_80222588
{
	.Status:Normal    0057040A
	.Status:End
}

% Origin: HINT
#new:Script $Script_Idle_80222594
{
    0:  Return
    8:  End
}

#new:Script $Script_HandleEvent_802225A4
{
    0:  Call  UseIdleAnimation  ( .Actor:Self .False )
   14:  Call  EnableIdleScript  ( .Actor:Self 00000000 )
   28:  Call  GetLastEvent      ( .Actor:Self *Var0 )
   3C:  Switch  *Var0
   48:  	CaseOR  ==  .Event:HitCombo % 9
   54:  	CaseOR  ==  .Event:Hit % A
   60:  		SetConst  *Var0  00000001
   70:  		SetConst  *Var1  00560404
   80:  		ExecWait  DoNormalHit
   8C:  	EndCaseGroup
   94:  	Case  ==  .Event:BurnHit % E
   A0:  		SetConst  *Var0  00000001
   B0:  		SetConst  *Var1  00560405
   C0:  		SetConst  *Var2  00560406
   D0:  		ExecWait  DoBurnHit
   DC:  	Case  ==  .Event:BurnDeath % 24
   E8:  		SetConst  *Var0  00000001
   F8:  		SetConst  *Var1  00560405
  108:  		SetConst  *Var2  00560406
  118:  		ExecWait  DoBurnHit
  124:  		SetConst  *Var0  00000001
  134:  		SetConst  *Var1  00560406
  144:  		ExecWait  DoDeath
  150:  		Return
  158:  	Case  ==  .Event:SpinSmashHit % B
  164:  		SetConst  *Var0  00000001
  174:  		SetConst  *Var1  00560404
  184:  		ExecWait  DoSpinSmashHit
  190:  	Case  ==  .Event:SpinSmashDeath % 21
  19C:  		SetConst  *Var0  00000001
  1AC:  		SetConst  *Var1  00560404
  1BC:  		ExecWait  DoSpinSmashHit
  1C8:  		SetConst  *Var0  00000001
  1D8:  		SetConst  *Var1  00560404
  1E8:  		ExecWait  DoDeath
  1F4:  		Return
  1FC:  	CaseOR  ==  00000017 % 17
  208:  	CaseOR  ==  .Event:Immune % 19
  214:  	CaseOR  ==  .Event:AirLiftFailed % 1F
  220:  		SetConst  *Var0  00000001
  230:  		SetConst  *Var1  00560401
  240:  		ExecWait  DoImmune
  24C:  	EndCaseGroup
  254:  	Case  ==  .Event:Death % 20
  260:  		SetConst  *Var0  00000001
  270:  		SetConst  *Var1  00560404
  280:  		ExecWait  DoNormalHit
  28C:  		Wait  10`
  298:  		SetConst  *Var0  00000001
  2A8:  		SetConst  *Var1  00560404
  2B8:  		ExecWait  DoDeath
  2C4:  		Return
  2CC:  	Case  ==  .Event:RecoverStatus % 31
  2D8:  		SetConst  *Var0  00000001
  2E8:  		SetConst  *Var1  00560401
  2F8:  		ExecWait  DoRecover
  304:  	Case  ==  .Event:ScareAway % 39
  310:  		Call  SetAnimation  ( .Actor:Self 00000001 00560404 )
  328:  		Call  SetActorJumpGravity   ( .Actor:Self *Fixed[1.5] )
  33C:  		Call  GetActorPos   ( .Actor:Self *Var0 *Var1 *Var2 )
  358:  		Call  SetGoalPos    ( .Actor:Self *Var0 *Var1 *Var2 )
  374:  		Call  JumpToGoal    ( .Actor:Self  15` .False .True .False )
  394:  		Wait  15`
  3A0:  		Call  SetAnimation  ( .Actor:Self 00000001 00560402 )
  3B8:  		ExecWait  $Script_GRNMagikoopa_RunAway
  3C4:  		Return
  3CC:  	Case  ==  .Event:BeginAirLift % 3A
  3D8:  		SetConst  *Var0  00000001
  3E8:  		SetConst  *Var1  00560402
  3F8:  		ExecWait  DoAirLift
  404:  	Case  ==  .Event:BlowAway % 16
  410:  		Call  GetStatusFlags    ( .Actor:Self *Var0 )
  424:  		If  *Var0  !&  ~Flags:StatusFlags:Sleep|Frozen|Fear|Paralyze|Dizzy|Stone|Stop % 35D000
  434:  			If  *Var0  &  ~Flags:StatusFlags:Shrink % 80000
  444:  				Call  SetPartDispOffset ( .Actor:Self 00000001 00000000 00000002 00000000 )
  464:  			Else
  46C:  				Call  SetPartDispOffset ( .Actor:Self 00000001 FFFFFFFC 00000005 00000000 )
  48C:  			EndIf
  494:  		EndIf
  49C:  		SetConst  *Var0  00000001
  4AC:  		SetConst  *Var1  00560404
  4BC:  		ExecWait  DoBlowAway
  4C8:  		Return
  4D0:  	Default
  4D8:  EndSwitch
  4E0:  Call  EnableIdleScript  ( .Actor:Self 00000001 )
  4F4:  Call  UseIdleAnimation  ( .Actor:Self .True )
  508:  Return
  510:  End
}

% Origin: HINT
#new:Script $Script_80222ABC
{
    0:  Call  GetBattleFlags    ( *Var0 )
   10:  If  *Var0  !&  00080000
   20:  	If  *Var0  &  00000240
   30:  		Call  SetActorVar   ( .Actor:Self 00000000 00000001 )
   48:  	EndIf
   50:  Else
   58:  	Call  $Function_802187C8    ( *Var0 )
   68:  	Switch  *Var0
   74:  		CaseOR  ==  00000083
   80:  		CaseOR  ==  00000084
   8C:  		CaseOR  ==  00000085
   98:  		CaseOR  ==  00000088
   A4:  			Call  GetBattleFlags    ( *Var0 )
   B4:  			If  *Var0  &  00000240
   C4:  				Call  SetActorVar   ( .Actor:Self 00000000 00000001 )
   DC:  			EndIf
   E4:  		EndCaseGroup
   EC:  	EndSwitch
   F4:  EndIf
   FC:  Return
  104:  End
}

% Origin: HINT
#new:Script $Script_80222BC8
{
    0:  Call  GetActorVar   ( .Actor:Self 00000000 *Var0 )
   18:  If  *Var0  ==  00000001
   28:  	Call  SetAnimation  ( .Actor:Self 00000001 00560404 )
   40:  	Goto  0
   4C:  EndIf
   54:  Call  GetLastElement    ( *Var0 )
   64:  If  *Var0  &  00000400
   74:  	Call  SetAnimation  ( .Actor:Self 00000001 00560404 )
   8C:  	Goto  0
   98:  EndIf
   A0:  Return
   A8:  Label  0
   B4:  Call  8027D32C  ( FFFFFF81 )
   C4:  Call  GetStatusFlags    ( .Actor:Self *Var0 )
   D8:  If  *Var0  &  ~Flags:StatusFlags:Shrink % 80000
   E8:  	Call  SetPartScale  ( .Actor:Self 00000003 *Fixed[0.4] *Fixed[0.4] *Fixed[0.4] )
  108:  EndIf
  110:  Call  SetPartFlagBits   ( .Actor:Self 00000001 00800000 .True )
  12C:  Call  SetPartFlagBits   ( .Actor:Self 00000001 00020001 .False )
  148:  Call  SetPartFlagBits   ( .Actor:Self 00000002 00020001 .True )
  164:  Call  SetPartFlagBits   ( .Actor:Self 00000002 00800000 .False )
  180:  Call  SetPartFlagBits   ( .Actor:Self 00000003 00100000 .True )
  19C:  Call  SetPartFlagBits   ( .Actor:Self 00000003 00000001 .False )
  1B8:  Call  GetActorPos       ( .Actor:Self *Var0 *Var1 *Var2 )
  1D4:  Sub   *Var2  00000001
  1E4:  Call  SetPartPos        ( .Actor:Self 00000003 *Var0 *Var1 *Var2 )
  204:  Call  PlaySoundAtActor  ( .Actor:Self 00000301 )
  218:  Call  GetActorPos       ( .Actor:Self *Var0 *Var1 *Var2 )
  234:  Set   *Var1  00000000
  244:  Call  SetActorJumpGravity   ( .Actor:Self *Fixed[0.8] )
  258:  Call  SetGoalPos        ( .Actor:Self *Var0 *Var1 *Var2 )
  274:  Call  JumpToGoal        ( .Actor:Self  15` .False .True .False )
  294:  Call  $Function_802188C0    ( 00000096 0000000A )
  2A8:  Thread
  2B0:  	Call  ShakeCam  ( .Cam:Battle 00000000  5` *Fixed[0.7] )
  2CC:  EndThread
  2D4:  Call  GetLastEvent  ( .Actor:Self *Var3 )
  2E8:  If  *Var3  ==  0000000F % F
  2F8:  	Call  SetAnimation  ( .Actor:Self 00000001 00560404 )
  310:  	Call  GetActorPos   ( .Actor:Self *Var3 *Var4 *Var5 )
  32C:  	Add   *Var4  0000000A
  33C:  	Add   *Var5  00000005
  34C:  	Call  PlayEffect    ( ~FX:SmokeBurst:Black *Var3 *Var4 *Var5 *Fixed[1.0] 0000000A 00000000 00000000 00000000 00000000 00000000 00000000 00000000 )
  390:  EndIf
  398:  Call  SetGoalPos    ( .Actor:Self *Var0 *Var1 *Var2 )
  3B4:  Call  JumpToGoal    ( .Actor:Self  10` .False .True .False )
  3D4:  Call  SetGoalPos    ( .Actor:Self *Var0 *Var1 *Var2 )
  3F0:  Call  JumpToGoal    ( .Actor:Self  5` .False .True .False )
  410:  Loop  00000014
  41C:  	Call  SetPartFlagBits   ( .Actor:Self 00000003 00000001 .True )
  438:  	Wait  1`
  444:  	Call  SetPartFlagBits   ( .Actor:Self 00000003 00000001 .False )
  460:  	Wait  1`
  46C:  EndLoop
  474:  Call  SetPartFlagBits   ( .Actor:Self 00000003 00000001 .True )
  490:  Call  SetAnimation      ( .Actor:Self 00000001 00560401 )
  4A8:  Call  SetActorFlagBits  ( .Actor:Self 00000200 .False )
  4C0:  Call  BindHandleEvent   ( .Actor:Self $Script_HandleEvent_802225A4 )
  4D4:  Call  SetActorType      ( .Actor:Self 00000053 )
  4E8:  Call  SetStatusTable    ( .Actor:Self $StatusTable_802222B8 )
  4FC:  Call  $Function_802187F4    ( FFFFFFF6 00000014 0000000A 00000020 )
  518:  Call  SetActorFlagBits  ( .Actor:Self 00001000 .True )
  530:  Call  ResetAllActorSounds   ( .Actor:Self )
  540:  Call  GetIndexFromPos   ( .Actor:Self *Var0 )
  554:  Mod   *Var0  00000004
  564:  Call  SetGoalToIndex    ( .Actor:Self *Var0 )
  578:  Call  SetActorSpeed     ( .Actor:Self *Fixed[4.0] )
  58C:  Call  RunToGoal ( .Actor:Self  0` .False )
  5A4:  Call  GetGoalPos        ( .Actor:Self *Var0 *Var1 *Var2 )
  5C0:  Call  ForceHomePos      ( .Actor:Self *Var0 *Var1 *Var2 )
  5DC:  Call  HPBarToHome       ( .Actor:Self )
  5EC:  Return
  5F4:  End
}

% Origin: HINT
#new:Script $Script_HandleEvent_802231C4
{
    0:  Call  UseIdleAnimation  ( .Actor:Self .False )
   14:  Call  EnableIdleScript  ( .Actor:Self 00000000 )
   28:  Call  GetLastEvent      ( .Actor:Self *Var0 )
   3C:  Switch  *Var0
   48:  	Case  ==  .Event:HitCombo % 9
   54:  		ExecWait  $Script_80222ABC
   60:  		SetConst  *Var0  00000002
   70:  		SetConst  *Var1  00570404
   80:  		ExecWait  DoNormalHit
   8C:  	CaseOR  ==  .Event:Hit % A
   98:  	CaseOR  ==  .Event:FallTrigger % C
   A4:  		ExecWait  $Script_80222ABC
   B0:  		SetConst  *Var0  00000002
   C0:  		SetConst  *Var1  00570404
   D0:  		ExecWait  DoNormalHit
   DC:  		ExecWait  $Script_80222BC8
   E8:  	EndCaseGroup
   F0:  	CaseOR  ==  .Event:BurnHit % E
   FC:  	CaseOR  ==  0000000F % F
  108:  		ExecWait  $Script_80222ABC
  114:  		SetConst  *Var0  00000002
  124:  		SetConst  *Var1  00570405
  134:  		SetConst  *Var2  00570406
  144:  		ExecWait  DoBurnHit
  150:  		ExecWait  $Script_80222BC8
  15C:  	EndCaseGroup
  164:  	Case  ==  .Event:BurnDeath % 24
  170:  		SetConst  *Var0  00000002
  180:  		SetConst  *Var1  00570405
  190:  		SetConst  *Var2  00570406
  1A0:  		ExecWait  DoBurnHit
  1AC:  		SetConst  *Var0  00000002
  1BC:  		SetConst  *Var1  00570406
  1CC:  		ExecWait  DoDeath
  1D8:  		Return
  1E0:  	Case  ==  .Event:SpinSmashHit % B
  1EC:  		SetConst  *Var0  00000002
  1FC:  		SetConst  *Var1  00570404
  20C:  		ExecWait  DoSpinSmashHit
  218:  	Case  ==  .Event:SpinSmashDeath % 21
  224:  		SetConst  *Var0  00000002
  234:  		SetConst  *Var1  00570404
  244:  		ExecWait  DoSpinSmashHit
  250:  		SetConst  *Var0  00000002
  260:  		SetConst  *Var1  00570404
  270:  		ExecWait  DoDeath
  27C:  		Return
  284:  	CaseOR  ==  00000017 % 17
  290:  	CaseOR  ==  .Event:Immune % 19
  29C:  	CaseOR  ==  .Event:AirLiftFailed % 1F
  2A8:  		SetConst  *Var0  00000002
  2B8:  		SetConst  *Var1  00570401
  2C8:  		ExecWait  DoImmune
  2D4:  	EndCaseGroup
  2DC:  	Case  ==  .Event:Death % 20
  2E8:  		SetConst  *Var0  00000002
  2F8:  		SetConst  *Var1  00570404
  308:  		ExecWait  DoNormalHit
  314:  		Wait  10`
  320:  		SetConst  *Var0  00000002
  330:  		SetConst  *Var1  00570404
  340:  		ExecWait  DoDeath
  34C:  		Return
  354:  	Case  ==  .Event:BeginFirstStrike % 38
  360:  		Call  SetActorPos       ( .Actor:Self  20`  0`  0` )
  37C:  		Call  HPBarToCurrent    ( .Actor:Self )
  38C:  	Case  ==  .Event:EndFirstStrike % 35
  398:  		Call  SetAnimation  ( .Actor:Self 00000002 00570401 )
  3B0:  		Call  SetGoalToHome ( .Actor:Self )
  3C0:  		Call  SetActorSpeed ( .Actor:Self *Fixed[4.0] )
  3D4:  		Call  FlyToGoal     ( .Actor:Self  0`  1` .Easing:Linear )
  3F0:  		Call  SetAnimation  ( .Actor:Self 00000002 00570401 )
  408:  		Call  HPBarToHome   ( .Actor:Self )
  418:  	Case  ==  .Event:RecoverStatus % 31
  424:  		SetConst  *Var0  00000002
  434:  		SetConst  *Var1  00570401
  444:  		ExecWait  DoRecover
  450:  	Case  ==  .Event:ScareAway % 39
  45C:  		Call  SetAnimation  ( .Actor:Self 00000002 00570404 )
  474:  		Call  SetActorJumpGravity   ( .Actor:Self *Fixed[1.5] )
  488:  		Call  GetActorPos   ( .Actor:Self *Var0 *Var1 *Var2 )
  4A4:  		Call  SetGoalPos    ( .Actor:Self *Var0 *Var1 *Var2 )
  4C0:  		Call  JumpToGoal    ( .Actor:Self  15` .False .True .False )
  4E0:  		Wait  15`
  4EC:  		Call  SetAnimation  ( .Actor:Self 00000002 00570402 )
  504:  		ExecWait  $Script_GRNMagikoopa_RunAway
  510:  		Return
  518:  	Case  ==  .Event:BeginAirLift % 3A
  524:  		SetConst  *Var0  00000002
  534:  		SetConst  *Var1  00570402
  544:  		ExecWait  DoAirLift
  550:  	Case  ==  .Event:BlowAway % 16
  55C:  		Call  GetStatusFlags    ( .Actor:Self *Var0 )
  570:  		If  *Var0  !&  ~Flags:StatusFlags:Sleep|Frozen|Fear|Paralyze|Dizzy|Stone|Stop % 35D000
  580:  			If  *Var0  &  ~Flags:StatusFlags:Shrink % 80000
  590:  				Call  SetPartDispOffset ( .Actor:Self 00000002 FFFFFFFD 00000000 00000000 )
  5B0:  			Else
  5B8:  				Call  SetPartDispOffset ( .Actor:Self 00000002 FFFFFFF1 00000000 00000000 )
  5D8:  			EndIf
  5E0:  		EndIf
  5E8:  		SetConst  *Var0  00000002
  5F8:  		SetConst  *Var1  00570404
  608:  		ExecWait  DoBlowAway
  614:  		Return
  61C:  	Default
  624:  EndSwitch
  62C:  Call  EnableIdleScript  ( .Actor:Self 00000001 )
  640:  Call  UseIdleAnimation  ( .Actor:Self .True )
  654:  Return
  65C:  End
}

% Origin: HINT
#new:Script $Script_GRNMagikoopa_ShapeSpell
{
    0:  Call  UseIdleAnimation  ( .Actor:Self .False )
   14:  Call  EnableIdleScript  ( .Actor:Self 00000000 )
   28:  Call  SetTargetActor    ( .Actor:Self .Actor:Player )
   3C:  Call  GetBattlePhase    ( *Var0 )
   4C:  If  *Var0  ==  00000001
   5C:  	Call  UseBattleCamPreset    ( 00000002 )
   6C:  	Call  MoveBattleCamOver     (  1` )
   7C:  Else
   84:  	Call  UseBattleCamPreset    ( 00000002 )
   94:  	Call  MoveBattleCamOver     (  10` )
   A4:  EndIf
   AC:  Call  PlaySoundAtActor  ( .Actor:Self .Sound:SpellCast1 )
   C0:  Call  GetActorPos       ( .Actor:Self *Var0 *Var1 *Var2 )
   DC:  Call  GetStatusFlags    ( .Actor:Self *VarA )
   F0:  If  *VarA  &  ~Flags:StatusFlags:Shrink % 80000
  100:  	Sub   *Var0  0000000C
  110:  	Add   *Var1  0000000E
  120:  Else
  128:  	Sub   *Var0  0000001E
  138:  	Add   *Var1  00000024
  148:  EndIf
  150:  Call  PlayEffect        ( ~FX:GatherMagic:Pink *Var0 *Var1 *Var2 *Fixed[0.5] 0000001E 00000000 00000000 00000000 00000000 00000000 00000000 00000000 )
  194:  Call  SetAnimation      ( .Actor:Self 00000002 00570402 )
  1AC:  Wait  30`
  1B8:  Call  EnemyTestTarget   ( .Actor:Self *Var0 ~Flags:DamageType:0 00000000 00000001 00000010 )
  1DC:  Switch  *Var0
  1E8:  	CaseOR  ==  .HitResult:Miss % 6
  1F4:  	CaseOR  ==  .HitResult:Lucky % 5
  200:  		Set   *VarA  *Var0
  210:  		Call  PlaySoundAtActor  ( .Actor:Self .Sound:SpellCast2 )
  224:  		Call  SetAnimation      ( .Actor:Self 00000002 00570403 )
  23C:  		Wait  5`
  248:  		Call  GetActorPos       ( .Actor:Self *Var0 *Var1 *Var2 )
  264:  		Call  GetStatusFlags    ( .Actor:Self *Var9 )
  278:  		If  *Var9  &  ~Flags:StatusFlags:Shrink % 80000
  288:  			Sub   *Var0  00000008
  298:  			Add   *Var1  00000008
  2A8:  		Else
  2B0:  			Sub   *Var0  00000014
  2C0:  			Add   *Var1  00000014
  2D0:  		EndIf
  2D8:  		Call  SetGoalToTarget       ( .Actor:Self )
  2E8:  		Call  GetGoalPos    ( .Actor:Self *Var3 *Var4 *Var5 )
  304:  		Sub   *Var3  00000032
  314:  		Set   *Var4  00000000
  324:  		Call  $Function_80218670    ( *Var0 *Var1 *Var5 *Var3 *Var4 *Var5 00000019 )
  34C:  		Wait  50`
  358:  		If  *VarA  ==  .HitResult:Lucky % 5
  368:  			Call  EnemyTestTarget   ( .Actor:Self *Var0 ~Flags:DamageType:TriggerLucky 00000000 00000000 00000000 )
  38C:  		EndIf
  394:  		Wait  14`
  3A0:  		Call  YieldTurn ( )
  3AC:  		Call  AddActorDecoration    ( .Actor:Self 00000002 00000000 .Decoration:Sweat )
  3C8:  		Wait  30`
  3D4:  		Call  RemoveActorDecoration ( .Actor:Self 00000002 00000000 )
  3EC:  		Call  EnableIdleScript      ( .Actor:Self 00000001 )
  400:  		Call  UseIdleAnimation      ( .Actor:Self .True )
  414:  		Return
  41C:  	EndCaseGroup
  424:  EndSwitch
  42C:  Call  PlaySoundAtActor  ( .Actor:Self .Sound:SpellCast2 )
  440:  Call  SetAnimation      ( .Actor:Self 00000002 00570403 )
  458:  Wait  5`
  464:  Call  GetActorPos       ( .Actor:Self *Var0 *Var1 *Var2 )
  480:  Call  GetStatusFlags    ( .Actor:Self *VarA )
  494:  If  *VarA  &  ~Flags:StatusFlags:Shrink % 80000
  4A4:  	Sub   *Var0  00000008
  4B4:  	Add   *Var1  00000008
  4C4:  Else
  4CC:  	Sub   *Var0  00000014
  4DC:  	Add   *Var1  00000014
  4EC:  EndIf
  4F4:  Call  SetGoalToTarget   ( .Actor:Self )
  504:  Call  GetGoalPos        ( .Actor:Self *Var3 *Var4 *Var5 )
  520:  Sub   *Var3  0000000A
  530:  Call  $Function_80218670    ( *Var0 *Var1 *Var5 *Var3 *Var4 *Var5 00000014 )
  558:  Wait  18`
  564:  Wait  2`
  570:  Call  EnemyDamageTarget ( .Actor:Self *Var0 ~Flags:DamageType:NoContact|Magic 00000000 00000000 00000003 00000020 )
  598:  Switch  *Var0
  5A4:  	CaseOR  ==  .HitResult:Hit % 0
  5B0:  	CaseOR  ==  .HitResult:QuakeImmune % 2
  5BC:  		Wait  19`
  5C8:  		Call  YieldTurn ( )
  5D4:  	EndCaseGroup
  5DC:  EndSwitch
  5E4:  Call  EnableIdleScript  ( .Actor:Self 00000001 )
  5F8:  Call  UseIdleAnimation  ( .Actor:Self .True )
  60C:  Return
  614:  End
}

% Origin: HINT
#new:Script $Script_GRNMagikoopa_WandStrike
{
    0:  Call  UseIdleAnimation  ( .Actor:Self .False )
   14:  Call  EnableIdleScript  ( .Actor:Self 00000000 )
   28:  Call  SetTargetActor    ( .Actor:Self .Actor:Player )
   3C:  Call  UseBattleCamPreset    ( 0000003F )
   4C:  Call  BattleCamTargetActor  ( .Actor:Self )
   5C:  Call  8024ECF8  ( FFFFFFFF 00000001 00000000 )
   74:  Call  PlaySoundAtActor  ( .Actor:Self 000002DB )
   88:  Thread
   90:  	Call  SetAnimation  ( .Actor:Self 00000001 00560402 )
   A8:  	Set   *Var0  000000C8
   B8:  	Loop  00000014
   C4:  		Sub   *Var0  0000000A
   D4:  		Call  SetPartAlpha  ( .Actor:Self 00000001 *Var0 )
   EC:  		Wait  1`
   F8:  	EndLoop
  100:  EndThread
  108:  Wait  10`
  114:  Call  SetGoalToTarget   ( .Actor:Self )
  124:  Call  GetGoalPos        ( .Actor:Self *Var0 *Var1 *Var2 )
  140:  Call  GetStatusFlags    ( .Actor:Self *VarA )
  154:  If  *VarA  &  ~Flags:StatusFlags:Shrink % 80000
  164:  	Add   *Var0  00000005
  174:  Else
  17C:  	Add   *Var0  00000019
  18C:  EndIf
  194:  Set   *Var1  00000000
  1A4:  Call  SetGoalPos    ( .Actor:Self *Var0 *Var1 *Var2 )
  1C0:  Call  FlyToGoal     ( .Actor:Self  30`  0` .Easing:CosInOut )
  1DC:  Set   *Var0  00000037
  1EC:  Loop  00000014
  1F8:  	Add   *Var0  0000000A
  208:  	Call  SetPartAlpha  ( .Actor:Self 00000001 *Var0 )
  220:  	Wait  1`
  22C:  EndLoop
  234:  Call  SetPartAlpha      ( .Actor:Self 00000001 000000FF )
  24C:  Call  SetAnimation      ( .Actor:Self 00000001 00560403 )
  264:  Wait  11`
  270:  Call  PlaySoundAtActor  ( .Actor:Self 000002DC )
  284:  Call  EnemyTestTarget   ( .Actor:Self *Var0 ~Flags:DamageType:0 00000000 00000001 00000010 )
  2A8:  Switch  *Var0
  2B4:  	CaseOR  ==  .HitResult:Miss % 6
  2C0:  	CaseOR  ==  .HitResult:Lucky % 5
  2CC:  		Set   *VarA  *Var0
  2DC:  		Call  UseBattleCamPreset    ( 00000002 )
  2EC:  		If  *VarA  ==  .HitResult:Lucky % 5
  2FC:  			Call  EnemyTestTarget   ( .Actor:Self *Var0 ~Flags:DamageType:TriggerLucky 00000000 00000000 00000000 )
  320:  		EndIf
  328:  		Wait  15`
  334:  		Set   *Var0  000000C8
  344:  		Loop  00000014
  350:  			Sub   *Var0  0000000A
  360:  			Call  SetPartAlpha  ( .Actor:Self 00000001 *Var0 )
  378:  			Wait  1`
  384:  		EndLoop
  38C:  		Call  YieldTurn ( )
  398:  		Call  SetGoalToHome ( .Actor:Self )
  3A8:  		Call  SetAnimation  ( .Actor:Self 00000001 00560401 )
  3C0:  		Call  FlyToGoal     ( .Actor:Self  30`  0` .Easing:CosInOut )
  3DC:  		Set   *Var0  00000037
  3EC:  		Loop  00000014
  3F8:  			Add   *Var0  0000000A
  408:  			Call  SetPartAlpha  ( .Actor:Self 00000001 *Var0 )
  420:  			Wait  1`
  42C:  		EndLoop
  434:  		Call  SetPartAlpha      ( .Actor:Self 00000001 000000FF )
  44C:  		Call  EnableIdleScript  ( .Actor:Self 00000001 )
  460:  		Call  UseIdleAnimation  ( .Actor:Self .True )
  474:  		Return
  47C:  	EndCaseGroup
  484:  EndSwitch
  48C:  Call  SetGoalToTarget   ( .Actor:Self )
  49C:  Wait  2`
  4A8:  Call  EnemyDamageTarget ( .Actor:Self *Var0 ~Flags:DamageType:NoContact 00000000 00000000 00000003 00000020 )
  4D0:  Switch  *Var0
  4DC:  	CaseOR  ==  .HitResult:Hit % 0
  4E8:  	CaseOR  ==  .HitResult:QuakeImmune % 2
  4F4:  		Call  UseBattleCamPreset    ( 00000002 )
  504:  		Wait  10`
  510:  		Set   *Var0  000000C8
  520:  		Loop  00000014
  52C:  			Sub   *Var0  0000000A
  53C:  			Call  SetPartAlpha  ( .Actor:Self 00000001 *Var0 )
  554:  			Wait  1`
  560:  		EndLoop
  568:  		Call  YieldTurn ( )
  574:  		Call  SetGoalToHome ( .Actor:Self )
  584:  		Call  SetAnimation  ( .Actor:Self 00000001 00560401 )
  59C:  		Call  FlyToGoal     ( .Actor:Self  20`  0` .Easing:CosInOut )
  5B8:  		Set   *Var0  00000037
  5C8:  		Loop  00000014
  5D4:  			Add   *Var0  0000000A
  5E4:  			Call  SetPartAlpha  ( .Actor:Self 00000001 *Var0 )
  5FC:  			Wait  1`
  608:  		EndLoop
  610:  		Call  SetPartAlpha  ( .Actor:Self 00000001 000000FF )
  628:  	EndCaseGroup
  630:  EndSwitch
  638:  Call  EnableIdleScript  ( .Actor:Self 00000001 )
  64C:  Call  UseIdleAnimation  ( .Actor:Self .True )
  660:  Return
  668:  End
}

% Origin: HINT
#new:Script $Script_GRNMagikoopa_RunAway
{
    0:  Call  UseIdleAnimation  ( .Actor:Self .False )
   14:  Call  EnableIdleScript  ( .Actor:Self 00000000 )
   28:  Call  8027D32C  ( FFFFFF81 )
   38:  Call  GetLastEvent      ( .Actor:Self *Var0 )
   4C:  If  *Var0  !=  .Event:ScareAway % 39
   5C:  	Call  UseBattleCamPreset    ( 0000000E )
   6C:  	Call  BattleCamTargetActor  ( .Actor:Self )
   7C:  	Call  MoveBattleCamOver     (  15` )
   8C:  	Wait  15`
   98:  	Call  UseBattleCamPreset    ( 00000001 )
   A8:  EndIf
   B0:  Call  SetActorSpeed ( .Actor:Self *Fixed[1.0] )
   C4:  Call  GetActorPos   ( .Actor:Self *Var0 *Var1 *Var2 )
   E0:  Add   *Var0  00000014
   F0:  Call  SetGoalPos    ( .Actor:Self *Var0 *Var1 *Var2 )
  10C:  Call  RunToGoal     ( .Actor:Self  0` .False )
  124:  Wait  10`
  130:  Call  SetActorYaw   ( .Actor:Self  180` )
  144:  Call  EnableActorBlur       ( .Actor:Self 00000001 )
  158:  Call  SetActorSpeed ( .Actor:Self *Fixed[10.0] )
  16C:  Call  GetActorPos   ( .Actor:Self *Var0 *Var1 *Var2 )
  188:  Add   *Var0  000000C8
  198:  Call  SetGoalPos    ( .Actor:Self *Var0 *Var1 *Var2 )
  1B4:  Call  RunToGoal     ( .Actor:Self  0` .False )
  1CC:  Call  YieldTurn ( )
  1D8:  Call  UseBattleCamPreset    ( 00000002 )
  1E8:  ExecWait  ForceNextTarget
  1F4:  Call  8027D32C      ( FFFFFF81 )
  204:  Call  RemoveActor   ( .Actor:Self )
  214:  Return
  21C:  End
}

#new:Script $Script_Init_802246D8
{
    0:  Call  BindIdle      ( .Actor:Self $Script_Idle_80222594 )
   14:  Call  BindTakeTurn  ( .Actor:Self $Script_TakeTurn_80224820 )
   28:  Call  BindHandleEvent   ( .Actor:Self $Script_HandleEvent_802225A4 )
   3C:  Call  GetBattleVar  ( 00000002 *Var0 )
   50:  If  *Var0  ==  00000000
   60:  	Call  SetBattleVar  ( 00000002 FFFFFFFF )
   74:  EndIf
   7C:  Call  SetActorVar   ( .Actor:Self 00000000 00000000 )
   94:  Return
   9C:  End
}

% Origin: HINT
#new:Script $Script_Init_8022477C
{
    0:  Call  BindIdle      ( .Actor:Self $Script_Idle_80222594 )
   14:  Call  BindTakeTurn  ( .Actor:Self $Script_TakeTurn_80224820 )
   28:  Call  BindHandleEvent   ( .Actor:Self $Script_HandleEvent_802231C4 )
   3C:  Call  GetBattleVar  ( 00000002 *Var0 )
   50:  If  *Var0  ==  00000000
   60:  	Call  SetBattleVar  ( 00000002 FFFFFFFF )
   74:  EndIf
   7C:  Call  SetActorVar   ( .Actor:Self 00000000 00000000 )
   94:  Return
   9C:  End
}

% Origin: HINT
#new:Script $Script_TakeTurn_80224820
{
    0:  Set   *Flag[00]  .False
   10:  Label  A
   1C:  Call  EnemyCreateTargetList ( 00008002 )
   2C:  Call  InitTargetIterator ( )
   38:  Label  0
   44:  Call  GetOwnerTarget    ( *Var0 *Var1 )
   58:  Call  GetIndexFromHome  ( *Var0 *Var1 )
   6C:  Call  GetBattleVar      ( 00000002 *Var2 )
   80:  If  *Var1  >  *Var2
   90:  	Call  $Function_80218918    ( *Var0 *Var3 )
   A4:  	If  *Var3  ==  00000000
   B4:  		Call  GetActorDefenseBoost  ( *Var0 *Var4 )
   C8:  		If  *Var4  <  00000003
   D8:  			Set   *Var8  *Var0
   E8:  			Call  SetBattleVar  ( 00000002 *Var1 )
   FC:  			Goto  64
  108:  		EndIf
  110:  	EndIf
  118:  EndIf
  120:  Call  ChooseNextTarget  ( .Iter:Next *Var0 )
  134:  If  *Var0  !=  FFFFFFFF
  144:  	Goto  0
  150:  EndIf
  158:  If  *Flag[00]  ==  .False
  168:  	Set   *Flag[00]  .True
  178:  	Call  SetBattleVar  ( 00000002 FFFFFFFF )
  18C:  	Goto  A
  198:  EndIf
  1A0:  Call  CountPlayerTargets    ( .Actor:Self 00008002 *Var0 )
  1B8:  If  *Var0  ==  00000001
  1C8:  	ExecWait  $Script_GRNMagikoopa_RunAway
  1D4:  	Return
  1DC:  EndIf
  1E4:  Call  GetActorFlags ( .Actor:Self *Var0 )
  1F8:  If  *Var0  &  00000200
  208:  	ExecWait  $Script_GRNMagikoopa_ShapeSpell
  214:  Else
  21C:  	ExecWait  $Script_GRNMagikoopa_WandStrike
  228:  EndIf
  230:  Return
  238:  Label  64
  244:  Call  UseIdleAnimation  ( .Actor:Self .False )
  258:  Call  EnableIdleScript  ( .Actor:Self 00000000 )
  26C:  Call  SetTargetActor    ( .Actor:Self .Actor:Player )
  280:  Call  UseBattleCamPreset    ( 0000000E )
  290:  Call  BattleCamTargetActor  ( .Actor:Self )
  2A0:  Call  MoveBattleCamOver (  15` )
  2B0:  Wait  15`
  2BC:  Call  GetActorFlags     ( .Actor:Self *Var0 )
  2D0:  If  *Var0  !&  00000200
  2E0:  	Call  SetAnimation  ( .Actor:Self 00000001 00560402 )
  2F8:  Else
  300:  	Call  SetAnimation  ( .Actor:Self 00000002 00570402 )
  318:  EndIf
  320:  Wait  5`
  32C:  Call  PlaySoundAtActor  ( .Actor:Self .Sound:SpellCast1 )
  340:  Call  GetActorFlags     ( .Actor:Self *Var0 )
  354:  If  *Var0  !&  00000200
  364:  	Call  GetActorPos       ( .Actor:Self *Var0 *Var1 *Var2 )
  380:  	Call  GetStatusFlags    ( .Actor:Self *VarA )
  394:  	If  *VarA  &  ~Flags:StatusFlags:Shrink % 80000
  3A4:  		Sub   *Var0  00000006
  3B4:  		Add   *Var1  0000000C
  3C4:  		Sub   *Var2  00000002
  3D4:  		Call  PlayEffect    ( ~FX:RadialFlowOut:YellowEnergy *Var0 *Var1 *Var2 *Fixed[0.12] 0000001E 00000000 00000000 00000000 00000000 00000000 00000000 00000000 )
  418:  	Else
  420:  		Sub   *Var0  00000010
  430:  		Add   *Var1  0000001F
  440:  		Sub   *Var2  00000002
  450:  		Call  PlayEffect    ( ~FX:RadialFlowOut:YellowEnergy *Var0 *Var1 *Var2 *Fixed[0.3] 0000001E 00000000 00000000 00000000 00000000 00000000 00000000 00000000 )
  494:  	EndIf
  49C:  Else
  4A4:  	Call  GetActorPos       ( .Actor:Self *Var0 *Var1 *Var2 )
  4C0:  	Call  GetStatusFlags    ( .Actor:Self *VarA )
  4D4:  	If  *VarA  &  ~Flags:StatusFlags:Shrink % 80000
  4E4:  		Sub   *Var0  0000000C
  4F4:  		Add   *Var1  0000000E
  504:  		Sub   *Var2  00000002
  514:  		Call  PlayEffect    ( ~FX:RadialFlowOut:YellowEnergy *Var0 *Var1 *Var2 *Fixed[0.12] 0000001E 00000000 00000000 00000000 00000000 00000000 00000000 00000000 )
  558:  	Else
  560:  		Sub   *Var0  0000001E
  570:  		Add   *Var1  00000024
  580:  		Sub   *Var2  00000002
  590:  		Call  PlayEffect    ( ~FX:RadialFlowOut:YellowEnergy *Var0 *Var1 *Var2 *Fixed[0.3] 0000001E 00000000 00000000 00000000 00000000 00000000 00000000 00000000 )
  5D4:  	EndIf
  5DC:  EndIf
  5E4:  Wait  30`
  5F0:  Call  GetActorFlags ( .Actor:Self *Var0 )
  604:  If  *Var0  !&  00000200
  614:  	Call  SetAnimation  ( .Actor:Self 00000001 00560401 )
  62C:  Else
  634:  	Call  SetAnimation  ( .Actor:Self 00000002 00570401 )
  64C:  EndIf
  654:  Wait  5`
  660:  Thread
  668:  	Wait  10`
  674:  	Call  PlaySoundAtActor  ( *Var8 000002DD )
  688:  EndThread
  690:  Thread
  698:  	Call  8026BF48      ( 00000001 )
  6A8:  	Call  BoostDefense  ( *Var8 00000001 )
  6BC:  	Call  8026BF48      ( 00000000 )
  6CC:  EndThread
  6D4:  Call  WaitForBuffDone ( )
  6E0:  Call  UseBattleCamPreset    ( 00000002 )
  6F0:  Wait  10`
  6FC:  Call  YieldTurn ( )
  708:  Call  EnableIdleScript      ( .Actor:Self 00000001 )
  71C:  Call  UseIdleAnimation      ( .Actor:Self .True )
  730:  Return
  738:  End
}

#new:DefenseTable $DefenseTable_80224F60
{
	.Element:Normal 00000000
	.Element:End
}

#new:DefenseTable $DefenseTable_80224F6C
{
	.Element:Normal 00000000
	.Element:End
}

#new:StatusTable $StatusTable_80224F78
{
	.Status:Normal      0`
	.Status:Default     0`
	.Status:Sleep      50`
	.Status:Poison     50`
	.Status:Frozen      0`
	.Status:Dizzy      75`
	.Status:Fear        0`
	.Status:Static     50`
	.Status:Paralyze   75`
	.Status:Shrink     80`
	.Status:Stop       90`
	.Status:DefaultTurnMod    0`
	.Status:SleepTurnMod      0`
	.Status:PoisonTurnMod     0`
	.Status:FrozenTurnMod     0`
	.Status:DizzyTurnMod      0`
	.Status:FearTurnMod       0`
	.Status:StaticTurnMod     0`
	.Status:ParalyzeTurnMod   0`
	.Status:ShrinkTurnMod     0`
	.Status:StopTurnMod      -1`
	.Status:End
}

#new:StatusTable $StatusTable_80225024
{
	.Status:Normal      0`
	.Status:Default     0`
	.Status:Sleep      50`
	.Status:Poison     50`
	.Status:Frozen      0`
	.Status:Dizzy     100`
	.Status:Fear        0`
	.Status:Static     50`
	.Status:Paralyze   75`
	.Status:Shrink     80`
	.Status:Stop       90`
	.Status:DefaultTurnMod    0`
	.Status:SleepTurnMod      0`
	.Status:PoisonTurnMod     0`
	.Status:FrozenTurnMod     0`
	.Status:DizzyTurnMod      0`
	.Status:FearTurnMod       0`
	.Status:StaticTurnMod     0`
	.Status:ParalyzeTurnMod   0`
	.Status:ShrinkTurnMod     0`
	.Status:StopTurnMod      -1`
	.Status:End
}

#new:PartsTable $PartsTable_802250D0
{
	00800000 01000000 022300FF $IdleAnimations_802251B0 $DefenseTable_80224F60 00000000 00000000 FBF40000 00000000
}

#new:PartsTable $PartsTable_802250F4
{
	00020001 01000000 022300FF $IdleAnimations_802251B0 $DefenseTable_80224F6C 00000000 00000000 FBF40000 00000000
	00800000 02000000 F62300FF $IdleAnimations_802251FC $DefenseTable_80224F6C 00800000 00000000 00F80000 00000000
	00020001 03000000 000000FF $IdleAnimations_80225248 $DefenseTable_80224F6C 00000000 00000000 00000000 00000000
}

#new:Actor $YMagikoopa
{
	% stats
	[Index]        55b
	[Level]        21`b
	[MaxHP]        11`b
	[Coins]         2`b
	[Flags]       00000000
	[StatusTable] $StatusTable_80224F78
	% ai
	[PartsCount]    1`s
	[PartsTable]  $PartsTable_802250D0
	[Script]      $Script_Init_80227398
	% move effectiveness
	[Escape]       40`b
	[Item]         40`b
	[AirLift]      80`b
	[Hurricane]    70`b % Bow's "Spook" as well
	[UpAndAway]    95`b
	[PowerBounce]  80`b
	[SpinSmash]     0`b % weight (0-4)
	% ui positions
	[Size]         36`b  40`b % width height
	[HealthBar]     0`b   0`b % dx dy
	[StatusTurn]  -10`b  20`b % dx dy
	[StatusIcon]   10`b  32`b % dx dy
}

#new:Actor $FlyingYMagikoopa
{
	% stats
	[Index]        56b
	[Level]        21`b
	[MaxHP]        11`b
	[Coins]         2`b
	[Flags]       00000200
	[StatusTable] $StatusTable_80225024
	% ai
	[PartsCount]    3`s
	[PartsTable]  $PartsTable_802250F4
	[Script]      $Script_Init_8022743C
	% move effectiveness
	[Escape]       40`b
	[Item]         40`b
	[AirLift]      95`b
	[Hurricane]    75`b % Bow's "Spook" as well
	[UpAndAway]    95`b
	[PowerBounce]  80`b
	[SpinSmash]     0`b % weight (0-4)
	% ui positions
	[Size]         48`b  40`b % width height
	[HealthBar]     0`b   0`b % dx dy
	[StatusTurn]  -25`b  20`b % dx dy
	[StatusIcon]    1`b  34`b % dx dy
}

#new:IdleAnimations $IdleAnimations_802251B0
{
	.Status:Normal    00560201
	.Status:Stone     00560200
	.Status:Sleep     00560208
	.Status:Poison    00560201
	.Status:Stop      00560200
	.Status:Static    00560201
	.Status:Paralyze  00560200
	.Status:Dizzy     00560207
	.Status:Fear      00560207
	.Status:End
}

#new:IdleAnimations $IdleAnimations_802251FC
{
	.Status:Normal    00570201
	.Status:Stone     00570200
	.Status:Sleep     00570208
	.Status:Poison    00570201
	.Status:Stop      00570200
	.Status:Static    00570201
	.Status:Paralyze  00570200
	.Status:Dizzy     00570207
	.Status:Fear      00570207
	.Status:End
}

#new:IdleAnimations $IdleAnimations_80225248
{
	.Status:Normal    0057020A
	.Status:End
}

#new:Script $Script_Idle_80225254
{
    0:  Return
    8:  End
}

#new:Script $Script_HandleEvent_80225264
{
    0:  Call  UseIdleAnimation  ( .Actor:Self .False )
   14:  Call  EnableIdleScript  ( .Actor:Self 00000000 )
   28:  Call  GetLastEvent      ( .Actor:Self *Var0 )
   3C:  Switch  *Var0
   48:  	CaseOR  ==  .Event:HitCombo % 9
   54:  	CaseOR  ==  .Event:Hit % A
   60:  		SetConst  *Var0  00000001
   70:  		SetConst  *Var1  00560204
   80:  		ExecWait  DoNormalHit
   8C:  	EndCaseGroup
   94:  	Case  ==  .Event:BurnHit % E
   A0:  		SetConst  *Var0  00000001
   B0:  		SetConst  *Var1  00560205
   C0:  		SetConst  *Var2  00560206
   D0:  		ExecWait  DoBurnHit
   DC:  	Case  ==  .Event:BurnDeath % 24
   E8:  		SetConst  *Var0  00000001
   F8:  		SetConst  *Var1  00560205
  108:  		SetConst  *Var2  00560206
  118:  		ExecWait  DoBurnHit
  124:  		SetConst  *Var0  00000001
  134:  		SetConst  *Var1  00560206
  144:  		ExecWait  DoDeath
  150:  		Return
  158:  	Case  ==  .Event:SpinSmashHit % B
  164:  		SetConst  *Var0  00000001
  174:  		SetConst  *Var1  00560204
  184:  		ExecWait  DoSpinSmashHit
  190:  	Case  ==  .Event:SpinSmashDeath % 21
  19C:  		SetConst  *Var0  00000001
  1AC:  		SetConst  *Var1  00560204
  1BC:  		ExecWait  DoSpinSmashHit
  1C8:  		SetConst  *Var0  00000001
  1D8:  		SetConst  *Var1  00560204
  1E8:  		ExecWait  DoDeath
  1F4:  		Return
  1FC:  	CaseOR  ==  00000017 % 17
  208:  	CaseOR  ==  .Event:Immune % 19
  214:  	CaseOR  ==  .Event:AirLiftFailed % 1F
  220:  		SetConst  *Var0  00000001
  230:  		SetConst  *Var1  00560201
  240:  		ExecWait  DoImmune
  24C:  	EndCaseGroup
  254:  	Case  ==  .Event:Death % 20
  260:  		SetConst  *Var0  00000001
  270:  		SetConst  *Var1  00560204
  280:  		ExecWait  DoNormalHit
  28C:  		Wait  10`
  298:  		SetConst  *Var0  00000001
  2A8:  		SetConst  *Var1  00560204
  2B8:  		ExecWait  DoDeath
  2C4:  		Return
  2CC:  	Case  ==  .Event:RecoverStatus % 31
  2D8:  		SetConst  *Var0  00000001
  2E8:  		SetConst  *Var1  00560201
  2F8:  		ExecWait  DoRecover
  304:  	Case  ==  .Event:ScareAway % 39
  310:  		Call  SetAnimation  ( .Actor:Self 00000001 00560204 )
  328:  		Call  SetActorJumpGravity   ( .Actor:Self *Fixed[1.5] )
  33C:  		Call  GetActorPos   ( .Actor:Self *Var0 *Var1 *Var2 )
  358:  		Call  SetGoalPos    ( .Actor:Self *Var0 *Var1 *Var2 )
  374:  		Call  JumpToGoal    ( .Actor:Self  15` .False .True .False )
  394:  		Wait  15`
  3A0:  		Call  SetAnimation  ( .Actor:Self 00000001 00560202 )
  3B8:  		ExecWait  $Script_YMagikoopa_RunAway
  3C4:  		Return
  3CC:  	Case  ==  .Event:BeginAirLift % 3A
  3D8:  		SetConst  *Var0  00000001
  3E8:  		SetConst  *Var1  00560202
  3F8:  		ExecWait  DoAirLift
  404:  	Case  ==  .Event:BlowAway % 16
  410:  		Call  GetStatusFlags    ( .Actor:Self *Var0 )
  424:  		If  *Var0  !&  ~Flags:StatusFlags:Sleep|Frozen|Fear|Paralyze|Dizzy|Stone|Stop % 35D000
  434:  			If  *Var0  &  ~Flags:StatusFlags:Shrink % 80000
  444:  				Call  SetPartDispOffset ( .Actor:Self 00000001 00000000 00000002 00000000 )
  464:  			Else
  46C:  				Call  SetPartDispOffset ( .Actor:Self 00000001 FFFFFFFC 00000005 00000000 )
  48C:  			EndIf
  494:  		EndIf
  49C:  		SetConst  *Var0  00000001
  4AC:  		SetConst  *Var1  00560204
  4BC:  		ExecWait  DoBlowAway
  4C8:  		Return
  4D0:  	Default
  4D8:  EndSwitch
  4E0:  Call  EnableIdleScript  ( .Actor:Self 00000001 )
  4F4:  Call  UseIdleAnimation  ( .Actor:Self .True )
  508:  Return
  510:  End
}

#new:Script $Script_8022577C
{
    0:  Call  GetBattleFlags    ( *Var0 )
   10:  If  *Var0  !&  00080000
   20:  	If  *Var0  &  00000240
   30:  		Call  SetActorVar   ( .Actor:Self 00000000 00000001 )
   48:  	EndIf
   50:  Else
   58:  	Call  $Function_80218B38    ( *Var0 )
   68:  	Switch  *Var0
   74:  		CaseOR  ==  00000083
   80:  		CaseOR  ==  00000084
   8C:  		CaseOR  ==  00000085
   98:  		CaseOR  ==  00000088
   A4:  			Call  GetBattleFlags    ( *Var0 )
   B4:  			If  *Var0  &  00000240
   C4:  				Call  SetActorVar   ( .Actor:Self 00000000 00000001 )
   DC:  			EndIf
   E4:  		EndCaseGroup
   EC:  	EndSwitch
   F4:  EndIf
   FC:  Return
  104:  End
}

#new:Script $Script_80225888
{
    0:  Call  GetActorVar   ( .Actor:Self 00000000 *Var0 )
   18:  If  *Var0  ==  00000001
   28:  	Call  SetAnimation  ( .Actor:Self 00000001 00560204 )
   40:  	Goto  0
   4C:  EndIf
   54:  Call  GetLastElement    ( *Var0 )
   64:  If  *Var0  &  00000400
   74:  	Call  SetAnimation  ( .Actor:Self 00000001 00560204 )
   8C:  	Goto  0
   98:  EndIf
   A0:  Return
   A8:  Label  0
   B4:  Call  8027D32C  ( FFFFFF81 )
   C4:  Call  GetStatusFlags    ( .Actor:Self *Var0 )
   D8:  If  *Var0  &  ~Flags:StatusFlags:Shrink % 80000
   E8:  	Call  SetPartScale  ( .Actor:Self 00000003 *Fixed[0.4] *Fixed[0.4] *Fixed[0.4] )
  108:  EndIf
  110:  Call  SetPartFlagBits   ( .Actor:Self 00000001 00800000 .True )
  12C:  Call  SetPartFlagBits   ( .Actor:Self 00000001 00020001 .False )
  148:  Call  SetPartFlagBits   ( .Actor:Self 00000002 00020001 .True )
  164:  Call  SetPartFlagBits   ( .Actor:Self 00000002 00800000 .False )
  180:  Call  SetPartFlagBits   ( .Actor:Self 00000003 00100000 .True )
  19C:  Call  SetPartFlagBits   ( .Actor:Self 00000003 00000001 .False )
  1B8:  Call  GetActorPos       ( .Actor:Self *Var0 *Var1 *Var2 )
  1D4:  Sub   *Var2  00000001
  1E4:  Call  SetPartPos        ( .Actor:Self 00000003 *Var0 *Var1 *Var2 )
  204:  Call  PlaySoundAtActor  ( .Actor:Self 00000301 )
  218:  Call  GetActorPos       ( .Actor:Self *Var0 *Var1 *Var2 )
  234:  Set   *Var1  00000000
  244:  Call  SetActorJumpGravity   ( .Actor:Self *Fixed[0.8] )
  258:  Call  SetGoalPos        ( .Actor:Self *Var0 *Var1 *Var2 )
  274:  Call  JumpToGoal        ( .Actor:Self  15` .False .True .False )
  294:  Call  $Function_80218C30    ( 00000096 0000000A )
  2A8:  Thread
  2B0:  	Call  ShakeCam  ( .Cam:Battle 00000000  5` *Fixed[0.7] )
  2CC:  EndThread
  2D4:  Call  GetLastEvent  ( .Actor:Self *Var3 )
  2E8:  If  *Var3  ==  0000000F % F
  2F8:  	Call  SetAnimation  ( .Actor:Self 00000001 00560204 )
  310:  	Call  GetActorPos   ( .Actor:Self *Var3 *Var4 *Var5 )
  32C:  	Add   *Var4  0000000A
  33C:  	Add   *Var5  00000005
  34C:  	Call  PlayEffect    ( ~FX:SmokeBurst:Black *Var3 *Var4 *Var5 *Fixed[1.0] 0000000A 00000000 00000000 00000000 00000000 00000000 00000000 00000000 )
  390:  EndIf
  398:  Call  SetGoalPos    ( .Actor:Self *Var0 *Var1 *Var2 )
  3B4:  Call  JumpToGoal    ( .Actor:Self  10` .False .True .False )
  3D4:  Call  SetGoalPos    ( .Actor:Self *Var0 *Var1 *Var2 )
  3F0:  Call  JumpToGoal    ( .Actor:Self  5` .False .True .False )
  410:  Loop  00000014
  41C:  	Call  SetPartFlagBits   ( .Actor:Self 00000003 00000001 .True )
  438:  	Wait  1`
  444:  	Call  SetPartFlagBits   ( .Actor:Self 00000003 00000001 .False )
  460:  	Wait  1`
  46C:  EndLoop
  474:  Call  SetPartFlagBits   ( .Actor:Self 00000003 00000001 .True )
  490:  Call  SetAnimation      ( .Actor:Self 00000001 00560201 )
  4A8:  Call  SetActorFlagBits  ( .Actor:Self 00000200 .False )
  4C0:  Call  BindHandleEvent   ( .Actor:Self $Script_HandleEvent_80225264 )
  4D4:  Call  SetActorType      ( .Actor:Self 00000055 )
  4E8:  Call  SetStatusTable    ( .Actor:Self $StatusTable_80224F78 )
  4FC:  Call  $Function_80218B64    ( FFFFFFF6 00000014 0000000A 00000020 )
  518:  Call  SetActorFlagBits  ( .Actor:Self 00001000 .True )
  530:  Call  ResetAllActorSounds   ( .Actor:Self )
  540:  Call  GetIndexFromPos   ( .Actor:Self *Var0 )
  554:  Mod   *Var0  00000004
  564:  Call  SetGoalToIndex    ( .Actor:Self *Var0 )
  578:  Call  SetActorSpeed     ( .Actor:Self *Fixed[4.0] )
  58C:  Call  RunToGoal ( .Actor:Self  0` .False )
  5A4:  Call  GetGoalPos        ( .Actor:Self *Var0 *Var1 *Var2 )
  5C0:  Call  ForceHomePos      ( .Actor:Self *Var0 *Var1 *Var2 )
  5DC:  Call  HPBarToHome       ( .Actor:Self )
  5EC:  Return
  5F4:  End
}

#new:Script $Script_HandleEvent_80225E84
{
    0:  Call  UseIdleAnimation  ( .Actor:Self .False )
   14:  Call  EnableIdleScript  ( .Actor:Self 00000000 )
   28:  Call  GetLastEvent      ( .Actor:Self *Var0 )
   3C:  Switch  *Var0
   48:  	Case  ==  .Event:HitCombo % 9
   54:  		ExecWait  $Script_8022577C
   60:  		SetConst  *Var0  00000002
   70:  		SetConst  *Var1  00570204
   80:  		ExecWait  DoNormalHit
   8C:  	CaseOR  ==  .Event:Hit % A
   98:  	CaseOR  ==  .Event:FallTrigger % C
   A4:  		ExecWait  $Script_8022577C
   B0:  		SetConst  *Var0  00000002
   C0:  		SetConst  *Var1  00570204
   D0:  		ExecWait  DoNormalHit
   DC:  		ExecWait  $Script_80225888
   E8:  	EndCaseGroup
   F0:  	CaseOR  ==  .Event:BurnHit % E
   FC:  	CaseOR  ==  0000000F % F
  108:  		ExecWait  $Script_8022577C
  114:  		SetConst  *Var0  00000002
  124:  		SetConst  *Var1  00570205
  134:  		SetConst  *Var2  00570206
  144:  		ExecWait  DoBurnHit
  150:  		ExecWait  $Script_80225888
  15C:  	EndCaseGroup
  164:  	Case  ==  .Event:BurnDeath % 24
  170:  		SetConst  *Var0  00000002
  180:  		SetConst  *Var1  00570205
  190:  		SetConst  *Var2  00570206
  1A0:  		ExecWait  DoBurnHit
  1AC:  		SetConst  *Var0  00000002
  1BC:  		SetConst  *Var1  00570206
  1CC:  		ExecWait  DoDeath
  1D8:  		Return
  1E0:  	Case  ==  .Event:SpinSmashHit % B
  1EC:  		SetConst  *Var0  00000002
  1FC:  		SetConst  *Var1  00570204
  20C:  		ExecWait  DoSpinSmashHit
  218:  	Case  ==  .Event:SpinSmashDeath % 21
  224:  		SetConst  *Var0  00000002
  234:  		SetConst  *Var1  00570204
  244:  		ExecWait  DoSpinSmashHit
  250:  		SetConst  *Var0  00000002
  260:  		SetConst  *Var1  00570204
  270:  		ExecWait  DoDeath
  27C:  		Return
  284:  	CaseOR  ==  00000017 % 17
  290:  	CaseOR  ==  .Event:Immune % 19
  29C:  	CaseOR  ==  .Event:AirLiftFailed % 1F
  2A8:  		SetConst  *Var0  00000002
  2B8:  		SetConst  *Var1  00570201
  2C8:  		ExecWait  DoImmune
  2D4:  	EndCaseGroup
  2DC:  	Case  ==  .Event:Death % 20
  2E8:  		SetConst  *Var0  00000002
  2F8:  		SetConst  *Var1  00570204
  308:  		ExecWait  DoNormalHit
  314:  		Wait  10`
  320:  		SetConst  *Var0  00000002
  330:  		SetConst  *Var1  00570204
  340:  		ExecWait  DoDeath
  34C:  		Return
  354:  	Case  ==  .Event:BeginFirstStrike % 38
  360:  		Call  SetActorPos       ( .Actor:Self  20`  0`  0` )
  37C:  		Call  HPBarToCurrent    ( .Actor:Self )
  38C:  	Case  ==  .Event:EndFirstStrike % 35
  398:  		Call  SetAnimation  ( .Actor:Self 00000002 00570201 )
  3B0:  		Call  SetGoalToHome ( .Actor:Self )
  3C0:  		Call  SetActorSpeed ( .Actor:Self *Fixed[4.0] )
  3D4:  		Call  FlyToGoal     ( .Actor:Self  0`  1` .Easing:Linear )
  3F0:  		Call  SetAnimation  ( .Actor:Self 00000002 00570201 )
  408:  		Call  HPBarToHome   ( .Actor:Self )
  418:  	Case  ==  .Event:RecoverStatus % 31
  424:  		SetConst  *Var0  00000002
  434:  		SetConst  *Var1  00570201
  444:  		ExecWait  DoRecover
  450:  	Case  ==  .Event:ScareAway % 39
  45C:  		Call  SetAnimation  ( .Actor:Self 00000002 00570204 )
  474:  		Call  SetActorJumpGravity   ( .Actor:Self *Fixed[1.5] )
  488:  		Call  GetActorPos   ( .Actor:Self *Var0 *Var1 *Var2 )
  4A4:  		Call  SetGoalPos    ( .Actor:Self *Var0 *Var1 *Var2 )
  4C0:  		Call  JumpToGoal    ( .Actor:Self  15` .False .True .False )
  4E0:  		Wait  15`
  4EC:  		Call  SetAnimation  ( .Actor:Self 00000002 00570202 )
  504:  		ExecWait  $Script_YMagikoopa_RunAway
  510:  		Return
  518:  	Case  ==  .Event:BeginAirLift % 3A
  524:  		SetConst  *Var0  00000002
  534:  		SetConst  *Var1  00570202
  544:  		ExecWait  DoAirLift
  550:  	Case  ==  .Event:BlowAway % 16
  55C:  		Call  GetStatusFlags    ( .Actor:Self *Var0 )
  570:  		If  *Var0  !&  ~Flags:StatusFlags:Sleep|Frozen|Fear|Paralyze|Dizzy|Stone|Stop % 35D000
  580:  			If  *Var0  &  ~Flags:StatusFlags:Shrink % 80000
  590:  				Call  SetPartDispOffset ( .Actor:Self 00000002 FFFFFFFD 00000000 00000000 )
  5B0:  			Else
  5B8:  				Call  SetPartDispOffset ( .Actor:Self 00000002 FFFFFFF1 00000000 00000000 )
  5D8:  			EndIf
  5E0:  		EndIf
  5E8:  		SetConst  *Var0  00000002
  5F8:  		SetConst  *Var1  00570204
  608:  		ExecWait  DoBlowAway
  614:  		Return
  61C:  	Default
  624:  EndSwitch
  62C:  Call  EnableIdleScript  ( .Actor:Self 00000001 )
  640:  Call  UseIdleAnimation  ( .Actor:Self .True )
  654:  Return
  65C:  End
}

#new:Script $Script_YMagikoopa_ShapeSpell
{
    0:  Call  UseIdleAnimation  ( .Actor:Self .False )
   14:  Call  EnableIdleScript  ( .Actor:Self 00000000 )
   28:  Call  SetTargetActor    ( .Actor:Self .Actor:Player )
   3C:  Call  GetBattlePhase    ( *Var0 )
   4C:  If  *Var0  ==  00000001
   5C:  	Call  UseBattleCamPreset    ( 00000002 )
   6C:  	Call  MoveBattleCamOver     (  1` )
   7C:  Else
   84:  	Call  UseBattleCamPreset    ( 00000002 )
   94:  	Call  MoveBattleCamOver     (  10` )
   A4:  EndIf
   AC:  Call  PlaySoundAtActor  ( .Actor:Self .Sound:SpellCast1 )
   C0:  Call  GetActorPos       ( .Actor:Self *Var0 *Var1 *Var2 )
   DC:  Call  GetStatusFlags    ( .Actor:Self *VarA )
   F0:  If  *VarA  &  ~Flags:StatusFlags:Shrink % 80000
  100:  	Sub   *Var0  0000000C
  110:  	Add   *Var1  0000000E
  120:  Else
  128:  	Sub   *Var0  0000001E
  138:  	Add   *Var1  00000024
  148:  EndIf
  150:  Call  PlayEffect        ( ~FX:GatherMagic:Pink *Var0 *Var1 *Var2 *Fixed[0.5] 0000001E 00000000 00000000 00000000 00000000 00000000 00000000 00000000 )
  194:  Call  SetAnimation      ( .Actor:Self 00000002 00570202 )
  1AC:  Wait  30`
  1B8:  Call  EnemyTestTarget   ( .Actor:Self *Var0 ~Flags:DamageType:0 00000000 00000001 00000010 )
  1DC:  Switch  *Var0
  1E8:  	CaseOR  ==  .HitResult:Miss % 6
  1F4:  	CaseOR  ==  .HitResult:Lucky % 5
  200:  		Set   *VarA  *Var0
  210:  		Call  PlaySoundAtActor  ( .Actor:Self .Sound:SpellCast2 )
  224:  		Call  SetAnimation      ( .Actor:Self 00000002 00570203 )
  23C:  		Wait  5`
  248:  		Call  GetActorPos       ( .Actor:Self *Var0 *Var1 *Var2 )
  264:  		Call  GetStatusFlags    ( .Actor:Self *Var9 )
  278:  		If  *Var9  &  ~Flags:StatusFlags:Shrink % 80000
  288:  			Sub   *Var0  00000008
  298:  			Add   *Var1  00000008
  2A8:  		Else
  2B0:  			Sub   *Var0  00000014
  2C0:  			Add   *Var1  00000014
  2D0:  		EndIf
  2D8:  		Call  SetGoalToTarget       ( .Actor:Self )
  2E8:  		Call  GetGoalPos    ( .Actor:Self *Var3 *Var4 *Var5 )
  304:  		Sub   *Var3  00000032
  314:  		Set   *Var4  00000000
  324:  		Call  $Function_802189E0    ( *Var0 *Var1 *Var5 *Var3 *Var4 *Var5 00000019 )
  34C:  		Wait  50`
  358:  		If  *VarA  ==  .HitResult:Lucky % 5
  368:  			Call  EnemyTestTarget   ( .Actor:Self *Var0 ~Flags:DamageType:TriggerLucky 00000000 00000000 00000000 )
  38C:  		EndIf
  394:  		Wait  14`
  3A0:  		Call  YieldTurn ( )
  3AC:  		Call  AddActorDecoration    ( .Actor:Self 00000002 00000000 .Decoration:Sweat )
  3C8:  		Wait  30`
  3D4:  		Call  RemoveActorDecoration ( .Actor:Self 00000002 00000000 )
  3EC:  		Call  EnableIdleScript      ( .Actor:Self 00000001 )
  400:  		Call  UseIdleAnimation      ( .Actor:Self .True )
  414:  		Return
  41C:  	EndCaseGroup
  424:  EndSwitch
  42C:  Call  PlaySoundAtActor  ( .Actor:Self .Sound:SpellCast2 )
  440:  Call  SetAnimation      ( .Actor:Self 00000002 00570203 )
  458:  Wait  5`
  464:  Call  GetActorPos       ( .Actor:Self *Var0 *Var1 *Var2 )
  480:  Call  GetStatusFlags    ( .Actor:Self *VarA )
  494:  If  *VarA  &  ~Flags:StatusFlags:Shrink % 80000
  4A4:  	Sub   *Var0  00000008
  4B4:  	Add   *Var1  00000008
  4C4:  Else
  4CC:  	Sub   *Var0  00000014
  4DC:  	Add   *Var1  00000014
  4EC:  EndIf
  4F4:  Call  SetGoalToTarget   ( .Actor:Self )
  504:  Call  GetGoalPos        ( .Actor:Self *Var3 *Var4 *Var5 )
  520:  Sub   *Var3  0000000A
  530:  Call  $Function_802189E0    ( *Var0 *Var1 *Var5 *Var3 *Var4 *Var5 00000014 )
  558:  Wait  18`
  564:  Wait  2`
  570:  Call  EnemyDamageTarget ( .Actor:Self *Var0 ~Flags:DamageType:NoContact|Magic 00000000 00000000 00000003 00000020 )
  598:  Switch  *Var0
  5A4:  	CaseOR  ==  .HitResult:Hit % 0
  5B0:  	CaseOR  ==  .HitResult:QuakeImmune % 2
  5BC:  		Wait  19`
  5C8:  		Call  YieldTurn ( )
  5D4:  	EndCaseGroup
  5DC:  EndSwitch
  5E4:  Call  EnableIdleScript  ( .Actor:Self 00000001 )
  5F8:  Call  UseIdleAnimation  ( .Actor:Self .True )
  60C:  Return
  614:  End
}

#new:Script $Script_YMagikoopa_WandStrike
{
    0:  Call  UseIdleAnimation  ( .Actor:Self .False )
   14:  Call  EnableIdleScript  ( .Actor:Self 00000000 )
   28:  Call  SetTargetActor    ( .Actor:Self .Actor:Player )
   3C:  Call  UseBattleCamPreset    ( 0000003F )
   4C:  Call  BattleCamTargetActor  ( .Actor:Self )
   5C:  Call  8024ECF8  ( FFFFFFFF 00000001 00000000 )
   74:  Call  PlaySoundAtActor  ( .Actor:Self 000002DB )
   88:  Thread
   90:  	Call  SetAnimation  ( .Actor:Self 00000001 00560202 )
   A8:  	Set   *Var0  000000C8
   B8:  	Loop  00000014
   C4:  		Sub   *Var0  0000000A
   D4:  		Call  SetPartAlpha  ( .Actor:Self 00000001 *Var0 )
   EC:  		Wait  1`
   F8:  	EndLoop
  100:  EndThread
  108:  Wait  10`
  114:  Call  SetGoalToTarget   ( .Actor:Self )
  124:  Call  GetGoalPos        ( .Actor:Self *Var0 *Var1 *Var2 )
  140:  Call  GetStatusFlags    ( .Actor:Self *VarA )
  154:  If  *VarA  &  ~Flags:StatusFlags:Shrink % 80000
  164:  	Add   *Var0  00000005
  174:  Else
  17C:  	Add   *Var0  00000019
  18C:  EndIf
  194:  Set   *Var1  00000000
  1A4:  Call  SetGoalPos    ( .Actor:Self *Var0 *Var1 *Var2 )
  1C0:  Call  FlyToGoal     ( .Actor:Self  30`  0` .Easing:CosInOut )
  1DC:  Set   *Var0  00000037
  1EC:  Loop  00000014
  1F8:  	Add   *Var0  0000000A
  208:  	Call  SetPartAlpha  ( .Actor:Self 00000001 *Var0 )
  220:  	Wait  1`
  22C:  EndLoop
  234:  Call  SetPartAlpha      ( .Actor:Self 00000001 000000FF )
  24C:  Call  SetAnimation      ( .Actor:Self 00000001 00560203 )
  264:  Wait  11`
  270:  Call  PlaySoundAtActor  ( .Actor:Self 000002DC )
  284:  Call  EnemyTestTarget   ( .Actor:Self *Var0 ~Flags:DamageType:0 00000000 00000001 00000010 )
  2A8:  Switch  *Var0
  2B4:  	CaseOR  ==  .HitResult:Miss % 6
  2C0:  	CaseOR  ==  .HitResult:Lucky % 5
  2CC:  		Set   *VarA  *Var0
  2DC:  		Call  UseBattleCamPreset    ( 00000002 )
  2EC:  		If  *VarA  ==  .HitResult:Lucky % 5
  2FC:  			Call  EnemyTestTarget   ( .Actor:Self *Var0 ~Flags:DamageType:TriggerLucky 00000000 00000000 00000000 )
  320:  		EndIf
  328:  		Wait  15`
  334:  		Set   *Var0  000000C8
  344:  		Loop  00000014
  350:  			Sub   *Var0  0000000A
  360:  			Call  SetPartAlpha  ( .Actor:Self 00000001 *Var0 )
  378:  			Wait  1`
  384:  		EndLoop
  38C:  		Call  YieldTurn ( )
  398:  		Call  SetGoalToHome ( .Actor:Self )
  3A8:  		Call  SetAnimation  ( .Actor:Self 00000001 00560201 )
  3C0:  		Call  FlyToGoal     ( .Actor:Self  30`  0` .Easing:CosInOut )
  3DC:  		Set   *Var0  00000037
  3EC:  		Loop  00000014
  3F8:  			Add   *Var0  0000000A
  408:  			Call  SetPartAlpha  ( .Actor:Self 00000001 *Var0 )
  420:  			Wait  1`
  42C:  		EndLoop
  434:  		Call  SetPartAlpha      ( .Actor:Self 00000001 000000FF )
  44C:  		Call  EnableIdleScript  ( .Actor:Self 00000001 )
  460:  		Call  UseIdleAnimation  ( .Actor:Self .True )
  474:  		Return
  47C:  	EndCaseGroup
  484:  EndSwitch
  48C:  Call  SetGoalToTarget   ( .Actor:Self )
  49C:  Wait  2`
  4A8:  Call  EnemyDamageTarget ( .Actor:Self *Var0 ~Flags:DamageType:NoContact 00000000 00000000 00000003 00000020 )
  4D0:  Switch  *Var0
  4DC:  	CaseOR  ==  .HitResult:Hit % 0
  4E8:  	CaseOR  ==  .HitResult:QuakeImmune % 2
  4F4:  		Call  UseBattleCamPreset    ( 00000002 )
  504:  		Wait  10`
  510:  		Set   *Var0  000000C8
  520:  		Loop  00000014
  52C:  			Sub   *Var0  0000000A
  53C:  			Call  SetPartAlpha  ( .Actor:Self 00000001 *Var0 )
  554:  			Wait  1`
  560:  		EndLoop
  568:  		Call  YieldTurn ( )
  574:  		Call  SetGoalToHome ( .Actor:Self )
  584:  		Call  SetAnimation  ( .Actor:Self 00000001 00560201 )
  59C:  		Call  FlyToGoal     ( .Actor:Self  20`  0` .Easing:CosInOut )
  5B8:  		Set   *Var0  00000037
  5C8:  		Loop  00000014
  5D4:  			Add   *Var0  0000000A
  5E4:  			Call  SetPartAlpha  ( .Actor:Self 00000001 *Var0 )
  5FC:  			Wait  1`
  608:  		EndLoop
  610:  		Call  SetPartAlpha  ( .Actor:Self 00000001 000000FF )
  628:  	EndCaseGroup
  630:  EndSwitch
  638:  Call  EnableIdleScript  ( .Actor:Self 00000001 )
  64C:  Call  UseIdleAnimation  ( .Actor:Self .True )
  660:  Return
  668:  End
}

#new:Script $Script_YMagikoopa_RunAway
{
    0:  Call  UseIdleAnimation  ( .Actor:Self .False )
   14:  Call  EnableIdleScript  ( .Actor:Self 00000000 )
   28:  Call  8027D32C  ( FFFFFF81 )
   38:  Call  GetLastEvent      ( .Actor:Self *Var0 )
   4C:  If  *Var0  !=  .Event:ScareAway % 39
   5C:  	Call  UseBattleCamPreset    ( 0000000E )
   6C:  	Call  BattleCamTargetActor  ( .Actor:Self )
   7C:  	Call  MoveBattleCamOver     (  15` )
   8C:  	Wait  15`
   98:  	Call  UseBattleCamPreset    ( 00000001 )
   A8:  EndIf
   B0:  Call  SetActorSpeed ( .Actor:Self *Fixed[1.0] )
   C4:  Call  GetActorPos   ( .Actor:Self *Var0 *Var1 *Var2 )
   E0:  Add   *Var0  00000014
   F0:  Call  SetGoalPos    ( .Actor:Self *Var0 *Var1 *Var2 )
  10C:  Call  RunToGoal     ( .Actor:Self  0` .False )
  124:  Wait  10`
  130:  Call  SetActorYaw   ( .Actor:Self  180` )
  144:  Call  EnableActorBlur       ( .Actor:Self 00000001 )
  158:  Call  SetActorSpeed ( .Actor:Self *Fixed[10.0] )
  16C:  Call  GetActorPos   ( .Actor:Self *Var0 *Var1 *Var2 )
  188:  Add   *Var0  000000C8
  198:  Call  SetGoalPos    ( .Actor:Self *Var0 *Var1 *Var2 )
  1B4:  Call  RunToGoal     ( .Actor:Self  0` .False )
  1CC:  Call  YieldTurn ( )
  1D8:  Call  UseBattleCamPreset    ( 00000002 )
  1E8:  ExecWait  ForceNextTarget
  1F4:  Call  8027D32C      ( FFFFFF81 )
  204:  Call  RemoveActor   ( .Actor:Self )
  214:  Return
  21C:  End
}

#new:Script $Script_Init_80227398
{
    0:  Call  BindIdle      ( .Actor:Self $Script_Idle_80225254 )
   14:  Call  BindTakeTurn  ( .Actor:Self $Script_TakeTurn_802274E0 )
   28:  Call  BindHandleEvent   ( .Actor:Self $Script_HandleEvent_80225264 )
   3C:  Call  GetBattleVar  ( 00000002 *Var0 )
   50:  If  *Var0  ==  00000000
   60:  	Call  SetBattleVar  ( 00000002 FFFFFFFF )
   74:  EndIf
   7C:  Call  SetActorVar   ( .Actor:Self 00000000 00000000 )
   94:  Return
   9C:  End
}

#new:Script $Script_Init_8022743C
{
    0:  Call  BindIdle      ( .Actor:Self $Script_Idle_80225254 )
   14:  Call  BindTakeTurn  ( .Actor:Self $Script_TakeTurn_802274E0 )
   28:  Call  BindHandleEvent   ( .Actor:Self $Script_HandleEvent_80225E84 )
   3C:  Call  GetBattleVar  ( 00000002 *Var0 )
   50:  If  *Var0  ==  00000000
   60:  	Call  SetBattleVar  ( 00000002 FFFFFFFF )
   74:  EndIf
   7C:  Call  SetActorVar   ( .Actor:Self 00000000 00000000 )
   94:  Return
   9C:  End
}

#new:Script $Script_TakeTurn_802274E0
{
    0:  Set   *Flag[00]  .False
   10:  Label  A
   1C:  Call  EnemyCreateTargetList ( 00008002 )
   2C:  Call  InitTargetIterator ( )
   38:  Label  0
   44:  Call  GetOwnerTarget    ( *Var0 *Var1 )
   58:  Call  GetIndexFromHome  ( *Var0 *Var1 )
   6C:  Call  GetBattleVar      ( 00000002 *Var2 )
   80:  If  *Var1  >  *Var2
   90:  	Call  $Function_80218C88    ( *Var0 *Var3 )
   A4:  	If  *Var3  ==  00000000
   B4:  		Call  GetStatusFlags    ( *Var0 *Var4 )
   C8:  		If  *Var4  !&  ~Flags:StatusFlags:Static|Transparent % 4002000
   D8:  			Set   *Var8  *Var0
   E8:  			Call  SetBattleVar  ( 00000002 *Var1 )
   FC:  			Goto  64
  108:  		EndIf
  110:  	EndIf
  118:  EndIf
  120:  Call  ChooseNextTarget  ( .Iter:Next *Var0 )
  134:  If  *Var0  !=  FFFFFFFF
  144:  	Goto  0
  150:  EndIf
  158:  If  *Flag[00]  ==  .False
  168:  	Set   *Flag[00]  .True
  178:  	Call  SetBattleVar  ( 00000002 FFFFFFFF )
  18C:  	Goto  A
  198:  EndIf
  1A0:  Call  CountPlayerTargets    ( .Actor:Self 00008002 *Var0 )
  1B8:  If  *Var0  ==  00000001
  1C8:  	ExecWait  $Script_YMagikoopa_RunAway
  1D4:  	Return
  1DC:  EndIf
  1E4:  Call  GetActorFlags ( .Actor:Self *Var0 )
  1F8:  If  *Var0  &  00000200
  208:  	ExecWait  $Script_YMagikoopa_ShapeSpell
  214:  Else
  21C:  	ExecWait  $Script_YMagikoopa_WandStrike
  228:  EndIf
  230:  Return
  238:  Label  64
  244:  Call  UseIdleAnimation  ( .Actor:Self .False )
  258:  Call  EnableIdleScript  ( .Actor:Self 00000000 )
  26C:  Call  SetTargetActor    ( .Actor:Self .Actor:Player )
  280:  Call  UseBattleCamPreset    ( 0000000E )
  290:  Call  BattleCamTargetActor  ( .Actor:Self )
  2A0:  Call  MoveBattleCamOver (  15` )
  2B0:  Wait  15`
  2BC:  Call  GetActorFlags     ( .Actor:Self *Var0 )
  2D0:  If  *Var0  !&  00000200
  2E0:  	Call  SetAnimation  ( .Actor:Self 00000001 00560202 )
  2F8:  Else
  300:  	Call  SetAnimation  ( .Actor:Self 00000002 00570202 )
  318:  EndIf
  320:  Wait  5`
  32C:  Call  PlaySoundAtActor  ( .Actor:Self 000002F0 )
  340:  Call  GetActorFlags     ( .Actor:Self *Var0 )
  354:  If  *Var0  !&  00000200
  364:  	Call  GetActorPos       ( .Actor:Self *Var0 *Var1 *Var2 )
  380:  	Call  GetStatusFlags    ( .Actor:Self *VarA )
  394:  	If  *VarA  &  ~Flags:StatusFlags:Shrink % 80000
  3A4:  		Sub   *Var0  00000006
  3B4:  		Add   *Var1  0000000C
  3C4:  		Sub   *Var2  00000002
  3D4:  		Call  PlayEffect    ( ~FX:SnakingStatic *Var0 *Var1 *Var2 *Fixed[0.12] 0000001E 00000000 00000000 00000000 00000000 00000000 00000000 00000000 )
  418:  	Else
  420:  		Sub   *Var0  00000010
  430:  		Add   *Var1  0000001F
  440:  		Sub   *Var2  00000002
  450:  		Call  PlayEffect    ( ~FX:SnakingStatic *Var0 *Var1 *Var2 *Fixed[0.3] 0000001E 00000000 00000000 00000000 00000000 00000000 00000000 00000000 )
  494:  	EndIf
  49C:  Else
  4A4:  	Call  GetActorPos       ( .Actor:Self *Var0 *Var1 *Var2 )
  4C0:  	Call  GetStatusFlags    ( .Actor:Self *VarA )
  4D4:  	If  *VarA  &  ~Flags:StatusFlags:Shrink % 80000
  4E4:  		Sub   *Var0  0000000C
  4F4:  		Add   *Var1  0000000E
  504:  		Sub   *Var2  00000002
  514:  		Call  PlayEffect    ( ~FX:SnakingStatic *Var0 *Var1 *Var2 *Fixed[0.12] 0000001E 00000000 00000000 00000000 00000000 00000000 00000000 00000000 )
  558:  	Else
  560:  		Sub   *Var0  0000001E
  570:  		Add   *Var1  00000024
  580:  		Sub   *Var2  00000002
  590:  		Call  PlayEffect    ( ~FX:SnakingStatic *Var0 *Var1 *Var2 *Fixed[0.3] 0000001E 00000000 00000000 00000000 00000000 00000000 00000000 00000000 )
  5D4:  	EndIf
  5DC:  EndIf
  5E4:  Wait  30`
  5F0:  Call  GetActorFlags ( .Actor:Self *Var0 )
  604:  If  *Var0  !&  00000200
  614:  	Call  SetAnimation  ( .Actor:Self 00000001 00560201 )
  62C:  Else
  634:  	Call  SetAnimation  ( .Actor:Self 00000002 00570201 )
  64C:  EndIf
  654:  Wait  5`
  660:  Thread
  668:  	Wait  10`
  674:  	Loop  00000004
  680:  		Call  PlaySoundAtActor  ( *Var8 000003D2 )
  694:  		Call  RandInt   ( 00000003 *Var0 )
  6A8:  		Add   *Var0  00000003
  6B8:  		Wait  *Var0
  6C4:  	EndLoop
  6CC:  EndThread
  6D4:  Thread
  6DC:  	Call  8026BF48  ( 00000001 )
  6EC:  	Call  ElectrifyActor    ( *Var8 00000003 )
  700:  	Call  8026BF48  ( 00000000 )
  710:  EndThread
  718:  Call  WaitForBuffDone ( )
  724:  Call  UseBattleCamPreset    ( 00000002 )
  734:  Wait  10`
  740:  Call  YieldTurn ( )
  74C:  Call  EnableIdleScript      ( .Actor:Self 00000001 )
  760:  Call  UseIdleAnimation      ( .Actor:Self .True )
  774:  Return
  77C:  End
}

PADDING: 80227C64 to 80227C70 (00658A74 to 00658A80)
00000000 00000000 00000000

#new:DefenseTable $DefenseTable_80227C70
{
	.Element:Normal 00000000
	.Element:End
}

% Origin: HINT
#new:DefenseTable $DefenseTable_80227C7C
{
	.Element:Normal 00000000
	.Element:End
}

#new:StatusTable $StatusTable_80227C88
{
	.Status:Normal      0`
	.Status:Default     0`
	.Status:Sleep      50`
	.Status:Poison     50`
	.Status:Frozen      0`
	.Status:Dizzy      75`
	.Status:Fear        0`
	.Status:Static     50`
	.Status:Paralyze   75`
	.Status:Shrink     80`
	.Status:Stop       90`
	.Status:DefaultTurnMod    0`
	.Status:SleepTurnMod      0`
	.Status:PoisonTurnMod     0`
	.Status:FrozenTurnMod     0`
	.Status:DizzyTurnMod      0`
	.Status:FearTurnMod       0`
	.Status:StaticTurnMod     0`
	.Status:ParalyzeTurnMod   0`
	.Status:ShrinkTurnMod     0`
	.Status:StopTurnMod      -1`
	.Status:End
}

% Origin: HINT
#new:StatusTable $StatusTable_80227D34
{
	.Status:Normal      0`
	.Status:Default     0`
	.Status:Sleep      50`
	.Status:Poison     50`
	.Status:Frozen      0`
	.Status:Dizzy     100`
	.Status:Fear        0`
	.Status:Static     50`
	.Status:Paralyze   75`
	.Status:Shrink     80`
	.Status:Stop       90`
	.Status:DefaultTurnMod    0`
	.Status:SleepTurnMod      0`
	.Status:PoisonTurnMod     0`
	.Status:FrozenTurnMod     0`
	.Status:DizzyTurnMod      0`
	.Status:FearTurnMod       0`
	.Status:StaticTurnMod     0`
	.Status:ParalyzeTurnMod   0`
	.Status:ShrinkTurnMod     0`
	.Status:StopTurnMod      -1`
	.Status:End
}

#new:PartsTable $PartsTable_80227DE0
{
	00800000 01000000 022300FF $IdleAnimations_80227EC0 $DefenseTable_80227C70 00000000 00000000 FBF40000 00000000
}

% Origin: HINT
#new:PartsTable $PartsTable_80227E04
{
	00020001 01000000 022300FF $IdleAnimations_80227EC0 $DefenseTable_80227C7C 00000000 00000000 FBF40000 00000000
	00800000 02000000 F62300FF $IdleAnimations_80227F0C $DefenseTable_80227C7C 00800000 00000000 00F80000 00000000
	00020001 03000000 000000FF $IdleAnimations_80227F58 $DefenseTable_80227C7C 00000000 00000000 00000000 00000000
}

#new:Actor $GRYMagikoopa
{
	% stats
	[Index]        57b
	[Level]        21`b
	[MaxHP]        11`b
	[Coins]         2`b
	[Flags]       00000000
	[StatusTable] $StatusTable_80227C88
	% ai
	[PartsCount]    1`s
	[PartsTable]  $PartsTable_80227DE0
	[Script]      $Script_Init_8022A0A8
	% move effectiveness
	[Escape]       40`b
	[Item]         40`b
	[AirLift]      80`b
	[Hurricane]    70`b % Bow's "Spook" as well
	[UpAndAway]    95`b
	[PowerBounce]  75`b
	[SpinSmash]     0`b % weight (0-4)
	% ui positions
	[Size]         36`b  40`b % width height
	[HealthBar]     0`b   0`b % dx dy
	[StatusTurn]  -10`b  20`b % dx dy
	[StatusIcon]   10`b  32`b % dx dy
}

% Origin: HINT
#new:Actor $FlyingGRYMagikoopa
{
	% stats
	[Index]        58b
	[Level]        21`b
	[MaxHP]        11`b
	[Coins]         2`b
	[Flags]       00000200
	[StatusTable] $StatusTable_80227D34
	% ai
	[PartsCount]    3`s
	[PartsTable]  $PartsTable_80227E04
	[Script]      $Script_Init_8022A14C
	% move effectiveness
	[Escape]       40`b
	[Item]         40`b
	[AirLift]      95`b
	[Hurricane]    75`b % Bow's "Spook" as well
	[UpAndAway]    95`b
	[PowerBounce]  75`b
	[SpinSmash]     0`b % weight (0-4)
	% ui positions
	[Size]         48`b  40`b % width height
	[HealthBar]     0`b   0`b % dx dy
	[StatusTurn]  -25`b  20`b % dx dy
	[StatusIcon]    1`b  34`b % dx dy
}

% Origin: HINT
#new:IdleAnimations $IdleAnimations_80227EC0
{
	.Status:Normal    00560501
	.Status:Stone     00560500
	.Status:Sleep     00560508
	.Status:Poison    00560501
	.Status:Stop      00560500
	.Status:Static    00560501
	.Status:Paralyze  00560500
	.Status:Dizzy     00560507
	.Status:Fear      00560507
	.Status:End
}

% Origin: HINT
#new:IdleAnimations $IdleAnimations_80227F0C
{
	.Status:Normal    00570501
	.Status:Stone     00570500
	.Status:Sleep     00570508
	.Status:Poison    00570501
	.Status:Stop      00570500
	.Status:Static    00570501
	.Status:Paralyze  00570500
	.Status:Dizzy     00570507
	.Status:Fear      00570507
	.Status:End
}

% Origin: HINT
#new:IdleAnimations $IdleAnimations_80227F58
{
	.Status:Normal    0057050A
	.Status:End
}

% Origin: HINT
#new:Script $Script_Idle_80227F64
{
    0:  Return
    8:  End
}

#new:Script $Script_HandleEvent_80227F74
{
    0:  Call  UseIdleAnimation  ( .Actor:Self .False )
   14:  Call  EnableIdleScript  ( .Actor:Self 00000000 )
   28:  Call  GetLastEvent      ( .Actor:Self *Var0 )
   3C:  Switch  *Var0
   48:  	CaseOR  ==  .Event:HitCombo % 9
   54:  	CaseOR  ==  .Event:Hit % A
   60:  		SetConst  *Var0  00000001
   70:  		SetConst  *Var1  00560504
   80:  		ExecWait  DoNormalHit
   8C:  	EndCaseGroup
   94:  	Case  ==  .Event:BurnHit % E
   A0:  		SetConst  *Var0  00000001
   B0:  		SetConst  *Var1  00560505
   C0:  		SetConst  *Var2  00560506
   D0:  		ExecWait  DoBurnHit
   DC:  	Case  ==  .Event:BurnDeath % 24
   E8:  		SetConst  *Var0  00000001
   F8:  		SetConst  *Var1  00560505
  108:  		SetConst  *Var2  00560506
  118:  		ExecWait  DoBurnHit
  124:  		SetConst  *Var0  00000001
  134:  		SetConst  *Var1  00560506
  144:  		ExecWait  DoDeath
  150:  		Return
  158:  	Case  ==  .Event:SpinSmashHit % B
  164:  		SetConst  *Var0  00000001
  174:  		SetConst  *Var1  00560504
  184:  		ExecWait  DoSpinSmashHit
  190:  	Case  ==  .Event:SpinSmashDeath % 21
  19C:  		SetConst  *Var0  00000001
  1AC:  		SetConst  *Var1  00560504
  1BC:  		ExecWait  DoSpinSmashHit
  1C8:  		SetConst  *Var0  00000001
  1D8:  		SetConst  *Var1  00560504
  1E8:  		ExecWait  DoDeath
  1F4:  		Return
  1FC:  	CaseOR  ==  00000017 % 17
  208:  	CaseOR  ==  .Event:Immune % 19
  214:  	CaseOR  ==  .Event:AirLiftFailed % 1F
  220:  		SetConst  *Var0  00000001
  230:  		SetConst  *Var1  00560501
  240:  		ExecWait  DoImmune
  24C:  	EndCaseGroup
  254:  	Case  ==  .Event:Death % 20
  260:  		SetConst  *Var0  00000001
  270:  		SetConst  *Var1  00560504
  280:  		ExecWait  DoNormalHit
  28C:  		Wait  10`
  298:  		SetConst  *Var0  00000001
  2A8:  		SetConst  *Var1  00560504
  2B8:  		ExecWait  DoDeath
  2C4:  		Return
  2CC:  	Case  ==  .Event:RecoverStatus % 31
  2D8:  		SetConst  *Var0  00000001
  2E8:  		SetConst  *Var1  00560501
  2F8:  		ExecWait  DoRecover
  304:  	Case  ==  .Event:ScareAway % 39
  310:  		Call  SetAnimation  ( .Actor:Self 00000001 00560504 )
  328:  		Call  SetActorJumpGravity   ( .Actor:Self *Fixed[1.5] )
  33C:  		Call  GetActorPos   ( .Actor:Self *Var0 *Var1 *Var2 )
  358:  		Call  SetGoalPos    ( .Actor:Self *Var0 *Var1 *Var2 )
  374:  		Call  JumpToGoal    ( .Actor:Self  15` .False .True .False )
  394:  		Wait  15`
  3A0:  		Call  SetAnimation  ( .Actor:Self 00000001 00560502 )
  3B8:  		ExecWait  $Script_GRYMagikoopa_RunAway
  3C4:  		Return
  3CC:  	Case  ==  .Event:BeginAirLift % 3A
  3D8:  		SetConst  *Var0  00000001
  3E8:  		SetConst  *Var1  00560502
  3F8:  		ExecWait  DoAirLift
  404:  	Case  ==  .Event:BlowAway % 16
  410:  		Call  GetStatusFlags    ( .Actor:Self *Var0 )
  424:  		If  *Var0  !&  ~Flags:StatusFlags:Sleep|Frozen|Fear|Paralyze|Dizzy|Stone|Stop % 35D000
  434:  			If  *Var0  &  ~Flags:StatusFlags:Shrink % 80000
  444:  				Call  SetPartDispOffset ( .Actor:Self 00000001 00000000 00000002 00000000 )
  464:  			Else
  46C:  				Call  SetPartDispOffset ( .Actor:Self 00000001 FFFFFFFC 00000005 00000000 )
  48C:  			EndIf
  494:  		EndIf
  49C:  		SetConst  *Var0  00000001
  4AC:  		SetConst  *Var1  00560504
  4BC:  		ExecWait  DoBlowAway
  4C8:  		Return
  4D0:  	Default
  4D8:  EndSwitch
  4E0:  Call  EnableIdleScript  ( .Actor:Self 00000001 )
  4F4:  Call  UseIdleAnimation  ( .Actor:Self .True )
  508:  Return
  510:  End
}

% Origin: HINT
#new:Script $Script_8022848C
{
    0:  Call  GetBattleFlags    ( *Var0 )
   10:  If  *Var0  !&  00080000
   20:  	If  *Var0  &  00000240
   30:  		Call  SetActorVar   ( .Actor:Self 00000000 00000001 )
   48:  	EndIf
   50:  Else
   58:  	Call  $Function_80218EA8    ( *Var0 )
   68:  	Switch  *Var0
   74:  		CaseOR  ==  00000083
   80:  		CaseOR  ==  00000084
   8C:  		CaseOR  ==  00000085
   98:  		CaseOR  ==  00000088
   A4:  			Call  GetBattleFlags    ( *Var0 )
   B4:  			If  *Var0  &  00000240
   C4:  				Call  SetActorVar   ( .Actor:Self 00000000 00000001 )
   DC:  			EndIf
   E4:  		EndCaseGroup
   EC:  	EndSwitch
   F4:  EndIf
   FC:  Return
  104:  End
}

% Origin: HINT
#new:Script $Script_80228598
{
    0:  Call  GetActorVar   ( .Actor:Self 00000000 *Var0 )
   18:  If  *Var0  ==  00000001
   28:  	Call  SetAnimation  ( .Actor:Self 00000001 00560504 )
   40:  	Goto  0
   4C:  EndIf
   54:  Call  GetLastElement    ( *Var0 )
   64:  If  *Var0  &  00000400
   74:  	Call  SetAnimation  ( .Actor:Self 00000001 00560504 )
   8C:  	Goto  0
   98:  EndIf
   A0:  Return
   A8:  Label  0
   B4:  Call  8027D32C  ( FFFFFF81 )
   C4:  Call  GetStatusFlags    ( .Actor:Self *Var0 )
   D8:  If  *Var0  &  ~Flags:StatusFlags:Shrink % 80000
   E8:  	Call  SetPartScale  ( .Actor:Self 00000003 *Fixed[0.4] *Fixed[0.4] *Fixed[0.4] )
  108:  EndIf
  110:  Call  SetPartFlagBits   ( .Actor:Self 00000001 00800000 .True )
  12C:  Call  SetPartFlagBits   ( .Actor:Self 00000001 00020001 .False )
  148:  Call  SetPartFlagBits   ( .Actor:Self 00000002 00020001 .True )
  164:  Call  SetPartFlagBits   ( .Actor:Self 00000002 00800000 .False )
  180:  Call  SetPartFlagBits   ( .Actor:Self 00000003 00100000 .True )
  19C:  Call  SetPartFlagBits   ( .Actor:Self 00000003 00000001 .False )
  1B8:  Call  GetActorPos       ( .Actor:Self *Var0 *Var1 *Var2 )
  1D4:  Sub   *Var2  00000001
  1E4:  Call  SetPartPos        ( .Actor:Self 00000003 *Var0 *Var1 *Var2 )
  204:  Call  PlaySoundAtActor  ( .Actor:Self 00000301 )
  218:  Call  GetActorPos       ( .Actor:Self *Var0 *Var1 *Var2 )
  234:  Set   *Var1  00000000
  244:  Call  SetActorJumpGravity   ( .Actor:Self *Fixed[0.8] )
  258:  Call  SetGoalPos        ( .Actor:Self *Var0 *Var1 *Var2 )
  274:  Call  JumpToGoal        ( .Actor:Self  15` .False .True .False )
  294:  Call  $Function_80218FA0    ( 00000096 0000000A )
  2A8:  Thread
  2B0:  	Call  ShakeCam  ( .Cam:Battle 00000000  5` *Fixed[0.7] )
  2CC:  EndThread
  2D4:  Call  GetLastEvent  ( .Actor:Self *Var3 )
  2E8:  If  *Var3  ==  0000000F % F
  2F8:  	Call  SetAnimation  ( .Actor:Self 00000001 00560504 )
  310:  	Call  GetActorPos   ( .Actor:Self *Var3 *Var4 *Var5 )
  32C:  	Add   *Var4  0000000A
  33C:  	Add   *Var5  00000005
  34C:  	Call  PlayEffect    ( ~FX:SmokeBurst:Black *Var3 *Var4 *Var5 *Fixed[1.0] 0000000A 00000000 00000000 00000000 00000000 00000000 00000000 00000000 )
  390:  EndIf
  398:  Call  SetGoalPos    ( .Actor:Self *Var0 *Var1 *Var2 )
  3B4:  Call  JumpToGoal    ( .Actor:Self  10` .False .True .False )
  3D4:  Call  SetGoalPos    ( .Actor:Self *Var0 *Var1 *Var2 )
  3F0:  Call  JumpToGoal    ( .Actor:Self  5` .False .True .False )
  410:  Loop  00000014
  41C:  	Call  SetPartFlagBits   ( .Actor:Self 00000003 00000001 .True )
  438:  	Wait  1`
  444:  	Call  SetPartFlagBits   ( .Actor:Self 00000003 00000001 .False )
  460:  	Wait  1`
  46C:  EndLoop
  474:  Call  SetPartFlagBits   ( .Actor:Self 00000003 00000001 .True )
  490:  Call  SetAnimation      ( .Actor:Self 00000001 00560501 )
  4A8:  Call  SetActorFlagBits  ( .Actor:Self 00000200 .False )
  4C0:  Call  BindHandleEvent   ( .Actor:Self $Script_HandleEvent_80227F74 )
  4D4:  Call  SetActorType      ( .Actor:Self 00000057 )
  4E8:  Call  SetStatusTable    ( .Actor:Self $StatusTable_80227C88 )
  4FC:  Call  $Function_80218ED4    ( FFFFFFF6 00000014 0000000A 00000020 )
  518:  Call  SetActorFlagBits  ( .Actor:Self 00001000 .True )
  530:  Call  ResetAllActorSounds   ( .Actor:Self )
  540:  Call  GetIndexFromPos   ( .Actor:Self *Var0 )
  554:  Mod   *Var0  00000004
  564:  Call  SetGoalToIndex    ( .Actor:Self *Var0 )
  578:  Call  SetActorSpeed     ( .Actor:Self *Fixed[4.0] )
  58C:  Call  RunToGoal ( .Actor:Self  0` .False )
  5A4:  Call  GetGoalPos        ( .Actor:Self *Var0 *Var1 *Var2 )
  5C0:  Call  ForceHomePos      ( .Actor:Self *Var0 *Var1 *Var2 )
  5DC:  Call  HPBarToHome       ( .Actor:Self )
  5EC:  Return
  5F4:  End
}

% Origin: HINT
#new:Script $Script_HandleEvent_80228B94
{
    0:  Call  UseIdleAnimation  ( .Actor:Self .False )
   14:  Call  EnableIdleScript  ( .Actor:Self 00000000 )
   28:  Call  GetLastEvent      ( .Actor:Self *Var0 )
   3C:  Switch  *Var0
   48:  	Case  ==  .Event:HitCombo % 9
   54:  		ExecWait  $Script_8022848C
   60:  		SetConst  *Var0  00000002
   70:  		SetConst  *Var1  00570504
   80:  		ExecWait  DoNormalHit
   8C:  	CaseOR  ==  .Event:Hit % A
   98:  	CaseOR  ==  .Event:FallTrigger % C
   A4:  		ExecWait  $Script_8022848C
   B0:  		SetConst  *Var0  00000002
   C0:  		SetConst  *Var1  00570504
   D0:  		ExecWait  DoNormalHit
   DC:  		ExecWait  $Script_80228598
   E8:  	EndCaseGroup
   F0:  	CaseOR  ==  .Event:BurnHit % E
   FC:  	CaseOR  ==  0000000F % F
  108:  		ExecWait  $Script_8022848C
  114:  		SetConst  *Var0  00000002
  124:  		SetConst  *Var1  00570505
  134:  		SetConst  *Var2  00570506
  144:  		ExecWait  DoBurnHit
  150:  		ExecWait  $Script_80228598
  15C:  	EndCaseGroup
  164:  	Case  ==  .Event:BurnDeath % 24
  170:  		SetConst  *Var0  00000002
  180:  		SetConst  *Var1  00570505
  190:  		SetConst  *Var2  00570506
  1A0:  		ExecWait  DoBurnHit
  1AC:  		SetConst  *Var0  00000002
  1BC:  		SetConst  *Var1  00570506
  1CC:  		ExecWait  DoDeath
  1D8:  		Return
  1E0:  	Case  ==  .Event:SpinSmashHit % B
  1EC:  		SetConst  *Var0  00000002
  1FC:  		SetConst  *Var1  00570504
  20C:  		ExecWait  DoSpinSmashHit
  218:  	Case  ==  .Event:SpinSmashDeath % 21
  224:  		SetConst  *Var0  00000002
  234:  		SetConst  *Var1  00570504
  244:  		ExecWait  DoSpinSmashHit
  250:  		SetConst  *Var0  00000002
  260:  		SetConst  *Var1  00570504
  270:  		ExecWait  DoDeath
  27C:  		Return
  284:  	CaseOR  ==  00000017 % 17
  290:  	CaseOR  ==  .Event:Immune % 19
  29C:  	CaseOR  ==  .Event:AirLiftFailed % 1F
  2A8:  		SetConst  *Var0  00000002
  2B8:  		SetConst  *Var1  00570501
  2C8:  		ExecWait  DoImmune
  2D4:  	EndCaseGroup
  2DC:  	Case  ==  .Event:Death % 20
  2E8:  		SetConst  *Var0  00000002
  2F8:  		SetConst  *Var1  00570504
  308:  		ExecWait  DoNormalHit
  314:  		Wait  10`
  320:  		SetConst  *Var0  00000002
  330:  		SetConst  *Var1  00570504
  340:  		ExecWait  DoDeath
  34C:  		Return
  354:  	Case  ==  .Event:BeginFirstStrike % 38
  360:  		Call  SetActorPos       ( .Actor:Self  20`  0`  0` )
  37C:  		Call  HPBarToCurrent    ( .Actor:Self )
  38C:  	Case  ==  .Event:EndFirstStrike % 35
  398:  		Call  SetAnimation  ( .Actor:Self 00000002 00570501 )
  3B0:  		Call  SetGoalToHome ( .Actor:Self )
  3C0:  		Call  SetActorSpeed ( .Actor:Self *Fixed[4.0] )
  3D4:  		Call  FlyToGoal     ( .Actor:Self  0`  1` .Easing:Linear )
  3F0:  		Call  SetAnimation  ( .Actor:Self 00000002 00570501 )
  408:  		Call  HPBarToHome   ( .Actor:Self )
  418:  	Case  ==  .Event:RecoverStatus % 31
  424:  		SetConst  *Var0  00000002
  434:  		SetConst  *Var1  00570501
  444:  		ExecWait  DoRecover
  450:  	Case  ==  .Event:ScareAway % 39
  45C:  		Call  SetAnimation  ( .Actor:Self 00000002 00570504 )
  474:  		Call  SetActorJumpGravity   ( .Actor:Self *Fixed[1.5] )
  488:  		Call  GetActorPos   ( .Actor:Self *Var0 *Var1 *Var2 )
  4A4:  		Call  SetGoalPos    ( .Actor:Self *Var0 *Var1 *Var2 )
  4C0:  		Call  JumpToGoal    ( .Actor:Self  15` .False .True .False )
  4E0:  		Wait  15`
  4EC:  		Call  SetAnimation  ( .Actor:Self 00000002 00570502 )
  504:  		ExecWait  $Script_GRYMagikoopa_RunAway
  510:  		Return
  518:  	Case  ==  .Event:BeginAirLift % 3A
  524:  		SetConst  *Var0  00000002
  534:  		SetConst  *Var1  00570502
  544:  		ExecWait  DoAirLift
  550:  	Case  ==  .Event:BlowAway % 16
  55C:  		Call  GetStatusFlags    ( .Actor:Self *Var0 )
  570:  		If  *Var0  !&  ~Flags:StatusFlags:Sleep|Frozen|Fear|Paralyze|Dizzy|Stone|Stop % 35D000
  580:  			If  *Var0  &  ~Flags:StatusFlags:Shrink % 80000
  590:  				Call  SetPartDispOffset ( .Actor:Self 00000002 FFFFFFFD 00000000 00000000 )
  5B0:  			Else
  5B8:  				Call  SetPartDispOffset ( .Actor:Self 00000002 FFFFFFF1 00000000 00000000 )
  5D8:  			EndIf
  5E0:  		EndIf
  5E8:  		SetConst  *Var0  00000002
  5F8:  		SetConst  *Var1  00570504
  608:  		ExecWait  DoBlowAway
  614:  		Return
  61C:  	Default
  624:  EndSwitch
  62C:  Call  EnableIdleScript  ( .Actor:Self 00000001 )
  640:  Call  UseIdleAnimation  ( .Actor:Self .True )
  654:  Return
  65C:  End
}

% Origin: HINT
#new:Script $Script_GRYMagikoopa_ShapeSpell
{
    0:  Call  UseIdleAnimation  ( .Actor:Self .False )
   14:  Call  EnableIdleScript  ( .Actor:Self 00000000 )
   28:  Call  SetTargetActor    ( .Actor:Self .Actor:Player )
   3C:  Call  GetBattlePhase    ( *Var0 )
   4C:  If  *Var0  ==  00000001
   5C:  	Call  UseBattleCamPreset    ( 00000002 )
   6C:  	Call  MoveBattleCamOver     (  1` )
   7C:  Else
   84:  	Call  UseBattleCamPreset    ( 00000002 )
   94:  	Call  MoveBattleCamOver     (  10` )
   A4:  EndIf
   AC:  Call  PlaySoundAtActor  ( .Actor:Self .Sound:SpellCast1 )
   C0:  Call  GetActorPos       ( .Actor:Self *Var0 *Var1 *Var2 )
   DC:  Call  GetStatusFlags    ( .Actor:Self *VarA )
   F0:  If  *VarA  &  ~Flags:StatusFlags:Shrink % 80000
  100:  	Sub   *Var0  0000000C
  110:  	Add   *Var1  0000000E
  120:  Else
  128:  	Sub   *Var0  0000001E
  138:  	Add   *Var1  00000024
  148:  EndIf
  150:  Call  PlayEffect        ( ~FX:GatherMagic:Pink *Var0 *Var1 *Var2 *Fixed[0.5] 0000001E 00000000 00000000 00000000 00000000 00000000 00000000 00000000 )
  194:  Call  SetAnimation      ( .Actor:Self 00000002 00570502 )
  1AC:  Wait  30`
  1B8:  Call  EnemyTestTarget   ( .Actor:Self *Var0 ~Flags:DamageType:0 00000000 00000001 00000010 )
  1DC:  Switch  *Var0
  1E8:  	CaseOR  ==  .HitResult:Miss % 6
  1F4:  	CaseOR  ==  .HitResult:Lucky % 5
  200:  		Set   *VarA  *Var0
  210:  		Call  PlaySoundAtActor  ( .Actor:Self .Sound:SpellCast2 )
  224:  		Call  SetAnimation      ( .Actor:Self 00000002 00570503 )
  23C:  		Wait  5`
  248:  		Call  GetActorPos       ( .Actor:Self *Var0 *Var1 *Var2 )
  264:  		Call  GetStatusFlags    ( .Actor:Self *Var9 )
  278:  		If  *Var9  &  ~Flags:StatusFlags:Shrink % 80000
  288:  			Sub   *Var0  00000008
  298:  			Add   *Var1  00000008
  2A8:  		Else
  2B0:  			Sub   *Var0  00000014
  2C0:  			Add   *Var1  00000014
  2D0:  		EndIf
  2D8:  		Call  SetGoalToTarget       ( .Actor:Self )
  2E8:  		Call  GetGoalPos    ( .Actor:Self *Var3 *Var4 *Var5 )
  304:  		Sub   *Var3  00000032
  314:  		Set   *Var4  00000000
  324:  		Call  $Function_80218D50    ( *Var0 *Var1 *Var5 *Var3 *Var4 *Var5 00000019 )
  34C:  		Wait  50`
  358:  		If  *VarA  ==  .HitResult:Lucky % 5
  368:  			Call  EnemyTestTarget   ( .Actor:Self *Var0 ~Flags:DamageType:TriggerLucky 00000000 00000000 00000000 )
  38C:  		EndIf
  394:  		Wait  14`
  3A0:  		Call  YieldTurn ( )
  3AC:  		Call  AddActorDecoration    ( .Actor:Self 00000002 00000000 .Decoration:Sweat )
  3C8:  		Wait  30`
  3D4:  		Call  RemoveActorDecoration ( .Actor:Self 00000002 00000000 )
  3EC:  		Call  EnableIdleScript      ( .Actor:Self 00000001 )
  400:  		Call  UseIdleAnimation      ( .Actor:Self .True )
  414:  		Return
  41C:  	EndCaseGroup
  424:  EndSwitch
  42C:  Call  PlaySoundAtActor  ( .Actor:Self .Sound:SpellCast2 )
  440:  Call  SetAnimation      ( .Actor:Self 00000002 00570503 )
  458:  Wait  5`
  464:  Call  GetActorPos       ( .Actor:Self *Var0 *Var1 *Var2 )
  480:  Call  GetStatusFlags    ( .Actor:Self *VarA )
  494:  If  *VarA  &  ~Flags:StatusFlags:Shrink % 80000
  4A4:  	Sub   *Var0  00000008
  4B4:  	Add   *Var1  00000008
  4C4:  Else
  4CC:  	Sub   *Var0  00000014
  4DC:  	Add   *Var1  00000014
  4EC:  EndIf
  4F4:  Call  SetGoalToTarget   ( .Actor:Self )
  504:  Call  GetGoalPos        ( .Actor:Self *Var3 *Var4 *Var5 )
  520:  Sub   *Var3  0000000A
  530:  Call  $Function_80218D50    ( *Var0 *Var1 *Var5 *Var3 *Var4 *Var5 00000014 )
  558:  Wait  18`
  564:  Wait  2`
  570:  Call  EnemyDamageTarget ( .Actor:Self *Var0 ~Flags:DamageType:NoContact|Magic 00000000 00000000 00000003 00000020 )
  598:  Switch  *Var0
  5A4:  	CaseOR  ==  .HitResult:Hit % 0
  5B0:  	CaseOR  ==  .HitResult:QuakeImmune % 2
  5BC:  		Wait  19`
  5C8:  		Call  YieldTurn ( )
  5D4:  	EndCaseGroup
  5DC:  EndSwitch
  5E4:  Call  EnableIdleScript  ( .Actor:Self 00000001 )
  5F8:  Call  UseIdleAnimation  ( .Actor:Self .True )
  60C:  Return
  614:  End
}

% Origin: HINT
#new:Script $Script_GRYMagikoopa_WandStrike
{
    0:  Call  UseIdleAnimation  ( .Actor:Self .False )
   14:  Call  EnableIdleScript  ( .Actor:Self 00000000 )
   28:  Call  SetTargetActor    ( .Actor:Self .Actor:Player )
   3C:  Call  UseBattleCamPreset    ( 0000003F )
   4C:  Call  BattleCamTargetActor  ( .Actor:Self )
   5C:  Call  8024ECF8  ( FFFFFFFF 00000001 00000000 )
   74:  Call  PlaySoundAtActor  ( .Actor:Self 000002DB )
   88:  Thread
   90:  	Call  SetAnimation  ( .Actor:Self 00000001 00560502 )
   A8:  	Set   *Var0  000000C8
   B8:  	Loop  00000014
   C4:  		Sub   *Var0  0000000A
   D4:  		Call  SetPartAlpha  ( .Actor:Self 00000001 *Var0 )
   EC:  		Wait  1`
   F8:  	EndLoop
  100:  EndThread
  108:  Wait  10`
  114:  Call  SetGoalToTarget   ( .Actor:Self )
  124:  Call  GetGoalPos        ( .Actor:Self *Var0 *Var1 *Var2 )
  140:  Call  GetStatusFlags    ( .Actor:Self *VarA )
  154:  If  *VarA  &  ~Flags:StatusFlags:Shrink % 80000
  164:  	Add   *Var0  00000005
  174:  Else
  17C:  	Add   *Var0  00000019
  18C:  EndIf
  194:  Set   *Var1  00000000
  1A4:  Call  SetGoalPos    ( .Actor:Self *Var0 *Var1 *Var2 )
  1C0:  Call  FlyToGoal     ( .Actor:Self  30`  0` .Easing:CosInOut )
  1DC:  Set   *Var0  00000037
  1EC:  Loop  00000014
  1F8:  	Add   *Var0  0000000A
  208:  	Call  SetPartAlpha  ( .Actor:Self 00000001 *Var0 )
  220:  	Wait  1`
  22C:  EndLoop
  234:  Call  SetPartAlpha      ( .Actor:Self 00000001 000000FF )
  24C:  Call  SetAnimation      ( .Actor:Self 00000001 00560503 )
  264:  Wait  11`
  270:  Call  PlaySoundAtActor  ( .Actor:Self 000002DC )
  284:  Call  EnemyTestTarget   ( .Actor:Self *Var0 ~Flags:DamageType:0 00000000 00000001 00000010 )
  2A8:  Switch  *Var0
  2B4:  	CaseOR  ==  .HitResult:Miss % 6
  2C0:  	CaseOR  ==  .HitResult:Lucky % 5
  2CC:  		Set   *VarA  *Var0
  2DC:  		Call  UseBattleCamPreset    ( 00000002 )
  2EC:  		If  *VarA  ==  .HitResult:Lucky % 5
  2FC:  			Call  EnemyTestTarget   ( .Actor:Self *Var0 ~Flags:DamageType:TriggerLucky 00000000 00000000 00000000 )
  320:  		EndIf
  328:  		Wait  15`
  334:  		Set   *Var0  000000C8
  344:  		Loop  00000014
  350:  			Sub   *Var0  0000000A
  360:  			Call  SetPartAlpha  ( .Actor:Self 00000001 *Var0 )
  378:  			Wait  1`
  384:  		EndLoop
  38C:  		Call  YieldTurn ( )
  398:  		Call  SetGoalToHome ( .Actor:Self )
  3A8:  		Call  SetAnimation  ( .Actor:Self 00000001 00560501 )
  3C0:  		Call  FlyToGoal     ( .Actor:Self  30`  0` .Easing:CosInOut )
  3DC:  		Set   *Var0  00000037
  3EC:  		Loop  00000014
  3F8:  			Add   *Var0  0000000A
  408:  			Call  SetPartAlpha  ( .Actor:Self 00000001 *Var0 )
  420:  			Wait  1`
  42C:  		EndLoop
  434:  		Call  SetPartAlpha      ( .Actor:Self 00000001 000000FF )
  44C:  		Call  EnableIdleScript  ( .Actor:Self 00000001 )
  460:  		Call  UseIdleAnimation  ( .Actor:Self .True )
  474:  		Return
  47C:  	EndCaseGroup
  484:  EndSwitch
  48C:  Call  SetGoalToTarget   ( .Actor:Self )
  49C:  Wait  2`
  4A8:  Call  EnemyDamageTarget ( .Actor:Self *Var0 ~Flags:DamageType:NoContact 00000000 00000000 00000003 00000020 )
  4D0:  Switch  *Var0
  4DC:  	CaseOR  ==  .HitResult:Hit % 0
  4E8:  	CaseOR  ==  .HitResult:QuakeImmune % 2
  4F4:  		Call  UseBattleCamPreset    ( 00000002 )
  504:  		Wait  10`
  510:  		Set   *Var0  000000C8
  520:  		Loop  00000014
  52C:  			Sub   *Var0  0000000A
  53C:  			Call  SetPartAlpha  ( .Actor:Self 00000001 *Var0 )
  554:  			Wait  1`
  560:  		EndLoop
  568:  		Call  YieldTurn ( )
  574:  		Call  SetGoalToHome ( .Actor:Self )
  584:  		Call  SetAnimation  ( .Actor:Self 00000001 00560501 )
  59C:  		Call  FlyToGoal     ( .Actor:Self  20`  0` .Easing:CosInOut )
  5B8:  		Set   *Var0  00000037
  5C8:  		Loop  00000014
  5D4:  			Add   *Var0  0000000A
  5E4:  			Call  SetPartAlpha  ( .Actor:Self 00000001 *Var0 )
  5FC:  			Wait  1`
  608:  		EndLoop
  610:  		Call  SetPartAlpha  ( .Actor:Self 00000001 000000FF )
  628:  	EndCaseGroup
  630:  EndSwitch
  638:  Call  EnableIdleScript  ( .Actor:Self 00000001 )
  64C:  Call  UseIdleAnimation  ( .Actor:Self .True )
  660:  Return
  668:  End
}

% Origin: HINT
#new:Script $Script_GRYMagikoopa_RunAway
{
    0:  Call  UseIdleAnimation  ( .Actor:Self .False )
   14:  Call  EnableIdleScript  ( .Actor:Self 00000000 )
   28:  Call  8027D32C  ( FFFFFF81 )
   38:  Call  GetLastEvent      ( .Actor:Self *Var0 )
   4C:  If  *Var0  !=  .Event:ScareAway % 39
   5C:  	Call  UseBattleCamPreset    ( 0000000E )
   6C:  	Call  BattleCamTargetActor  ( .Actor:Self )
   7C:  	Call  MoveBattleCamOver     (  15` )
   8C:  	Wait  15`
   98:  	Call  UseBattleCamPreset    ( 00000001 )
   A8:  EndIf
   B0:  Call  SetActorSpeed ( .Actor:Self *Fixed[1.0] )
   C4:  Call  GetActorPos   ( .Actor:Self *Var0 *Var1 *Var2 )
   E0:  Add   *Var0  00000014
   F0:  Call  SetGoalPos    ( .Actor:Self *Var0 *Var1 *Var2 )
  10C:  Call  RunToGoal     ( .Actor:Self  0` .False )
  124:  Wait  10`
  130:  Call  SetActorYaw   ( .Actor:Self  180` )
  144:  Call  EnableActorBlur       ( .Actor:Self 00000001 )
  158:  Call  SetActorSpeed ( .Actor:Self *Fixed[10.0] )
  16C:  Call  GetActorPos   ( .Actor:Self *Var0 *Var1 *Var2 )
  188:  Add   *Var0  000000C8
  198:  Call  SetGoalPos    ( .Actor:Self *Var0 *Var1 *Var2 )
  1B4:  Call  RunToGoal     ( .Actor:Self  0` .False )
  1CC:  Call  YieldTurn ( )
  1D8:  Call  UseBattleCamPreset    ( 00000002 )
  1E8:  ExecWait  ForceNextTarget
  1F4:  Call  8027D32C      ( FFFFFF81 )
  204:  Call  RemoveActor   ( .Actor:Self )
  214:  Return
  21C:  End
}

#new:Script $Script_Init_8022A0A8
{
    0:  Call  BindIdle      ( .Actor:Self $Script_Idle_80227F64 )
   14:  Call  BindTakeTurn  ( .Actor:Self $Script_TakeTurn_8022A1F0 )
   28:  Call  BindHandleEvent   ( .Actor:Self $Script_HandleEvent_80227F74 )
   3C:  Call  GetBattleVar  ( 00000002 *Var0 )
   50:  If  *Var0  ==  00000000
   60:  	Call  SetBattleVar  ( 00000002 FFFFFFFF )
   74:  EndIf
   7C:  Call  SetActorVar   ( .Actor:Self 00000000 00000000 )
   94:  Return
   9C:  End
}

% Origin: HINT
#new:Script $Script_Init_8022A14C
{
    0:  Call  BindIdle      ( .Actor:Self $Script_Idle_80227F64 )
   14:  Call  BindTakeTurn  ( .Actor:Self $Script_TakeTurn_8022A1F0 )
   28:  Call  BindHandleEvent   ( .Actor:Self $Script_HandleEvent_80228B94 )
   3C:  Call  GetBattleVar  ( 00000002 *Var0 )
   50:  If  *Var0  ==  00000000
   60:  	Call  SetBattleVar  ( 00000002 FFFFFFFF )
   74:  EndIf
   7C:  Call  SetActorVar   ( .Actor:Self 00000000 00000000 )
   94:  Return
   9C:  End
}

% Origin: HINT
#new:Script $Script_TakeTurn_8022A1F0
{
    0:  Set   *Flag[00]  .False
   10:  Label  A
   1C:  Call  EnemyCreateTargetList ( 00008002 )
   2C:  Call  InitTargetIterator ( )
   38:  Label  0
   44:  Call  GetOwnerTarget    ( *Var0 *Var1 )
   58:  Call  GetIndexFromHome  ( *Var0 *Var1 )
   6C:  Call  GetBattleVar      ( 00000002 *Var2 )
   80:  If  *Var1  >  *Var2
   90:  	Call  $Function_80218FF8    ( *Var0 *Var3 )
   A4:  	If  *Var3  ==  00000000
   B4:  		Call  GetStatusFlags    ( *Var0 *Var4 )
   C8:  		If  *Var4  !&  ~Flags:StatusFlags:Static|Transparent % 4002000
   D8:  			Set   *Var8  *Var0
   E8:  			Call  SetBattleVar  ( 00000002 *Var1 )
   FC:  			Goto  64
  108:  		EndIf
  110:  	EndIf
  118:  EndIf
  120:  Call  ChooseNextTarget  ( .Iter:Next *Var0 )
  134:  If  *Var0  !=  FFFFFFFF
  144:  	Goto  0
  150:  EndIf
  158:  If  *Flag[00]  ==  .False
  168:  	Set   *Flag[00]  .True
  178:  	Call  SetBattleVar  ( 00000002 FFFFFFFF )
  18C:  	Goto  A
  198:  EndIf
  1A0:  Call  CountPlayerTargets    ( .Actor:Self 00008002 *Var0 )
  1B8:  If  *Var0  ==  00000001
  1C8:  	ExecWait  $Script_GRYMagikoopa_RunAway
  1D4:  	Return
  1DC:  EndIf
  1E4:  Call  GetActorFlags ( .Actor:Self *Var0 )
  1F8:  If  *Var0  &  00000200
  208:  	ExecWait  $Script_GRYMagikoopa_ShapeSpell
  214:  Else
  21C:  	ExecWait  $Script_GRYMagikoopa_WandStrike
  228:  EndIf
  230:  Return
  238:  Label  64
  244:  Call  UseIdleAnimation  ( .Actor:Self .False )
  258:  Call  EnableIdleScript  ( .Actor:Self 00000000 )
  26C:  Call  SetTargetActor    ( .Actor:Self .Actor:Player )
  280:  Call  UseBattleCamPreset    ( 0000000E )
  290:  Call  BattleCamTargetActor  ( .Actor:Self )
  2A0:  Call  MoveBattleCamOver (  15` )
  2B0:  Wait  15`
  2BC:  Call  GetActorFlags     ( .Actor:Self *Var0 )
  2D0:  If  *Var0  !&  00000200
  2E0:  	Call  SetAnimation  ( .Actor:Self 00000001 00560502 )
  2F8:  Else
  300:  	Call  SetAnimation  ( .Actor:Self 00000002 00570502 )
  318:  EndIf
  320:  Wait  5`
  32C:  Call  PlaySoundAtActor  ( .Actor:Self .Sound:SpellCast1 )
  340:  Call  GetActorFlags     ( .Actor:Self *Var0 )
  354:  If  *Var0  !&  00000200
  364:  	Call  GetActorPos       ( .Actor:Self *Var0 *Var1 *Var2 )
  380:  	Call  GetStatusFlags    ( .Actor:Self *VarA )
  394:  	If  *VarA  &  ~Flags:StatusFlags:Shrink % 80000
  3A4:  		Sub   *Var0  00000006
  3B4:  		Add   *Var1  0000000C
  3C4:  		Sub   *Var2  00000002
  3D4:  		Call  PlayEffect    ( ~FX:RadialFlowOut:WhiteWaves *Var0 *Var1 *Var2 *Fixed[0.12] 0000001E 00000000 00000000 00000000 00000000 00000000 00000000 00000000 )
  418:  	Else
  420:  		Sub   *Var0  00000010
  430:  		Add   *Var1  0000001F
  440:  		Sub   *Var2  00000002
  450:  		Call  PlayEffect    ( ~FX:RadialFlowOut:WhiteWaves *Var0 *Var1 *Var2 *Fixed[0.3] 0000001E 00000000 00000000 00000000 00000000 00000000 00000000 00000000 )
  494:  	EndIf
  49C:  Else
  4A4:  	Call  GetActorPos       ( .Actor:Self *Var0 *Var1 *Var2 )
  4C0:  	Call  GetStatusFlags    ( .Actor:Self *VarA )
  4D4:  	If  *VarA  &  ~Flags:StatusFlags:Shrink % 80000
  4E4:  		Sub   *Var0  0000000C
  4F4:  		Add   *Var1  0000000E
  504:  		Sub   *Var2  00000002
  514:  		Call  PlayEffect    ( ~FX:RadialFlowOut:WhiteWaves *Var0 *Var1 *Var2 *Fixed[0.12] 0000001E 00000000 00000000 00000000 00000000 00000000 00000000 00000000 )
  558:  	Else
  560:  		Sub   *Var0  0000001E
  570:  		Add   *Var1  00000024
  580:  		Sub   *Var2  00000002
  590:  		Call  PlayEffect    ( ~FX:RadialFlowOut:WhiteWaves *Var0 *Var1 *Var2 *Fixed[0.3] 0000001E 00000000 00000000 00000000 00000000 00000000 00000000 00000000 )
  5D4:  	EndIf
  5DC:  EndIf
  5E4:  Wait  30`
  5F0:  Call  GetActorFlags ( .Actor:Self *Var0 )
  604:  If  *Var0  !&  00000200
  614:  	Call  SetAnimation  ( .Actor:Self 00000001 00560501 )
  62C:  Else
  634:  	Call  SetAnimation  ( .Actor:Self 00000002 00570501 )
  64C:  EndIf
  654:  Wait  5`
  660:  Thread
  668:  	Wait  10`
  674:  	Call  PlaySoundAtActor  ( *Var8 000002DB )
  688:  EndThread
  690:  Thread
  698:  	Call  8026BF48      ( 00000001 )
  6A8:  	Call  VanishActor   ( *Var8 00000002 )
  6BC:  	Call  8026BF48      ( 00000000 )
  6CC:  EndThread
  6D4:  Call  WaitForBuffDone ( )
  6E0:  Call  UseBattleCamPreset    ( 00000002 )
  6F0:  Wait  10`
  6FC:  Call  YieldTurn ( )
  708:  Call  EnableIdleScript      ( .Actor:Self 00000001 )
  71C:  Call  UseIdleAnimation      ( .Actor:Self .True )
  730:  Return
  738:  End
}

#new:DefenseTable $DefenseTable_8022A930
{
	.Element:Normal 00000000
	.Element:End
}

#new:DefenseTable $DefenseTable_8022A93C
{
	.Element:Normal 00000000
	.Element:End
}

#new:StatusTable $StatusTable_8022A948
{
	.Status:Normal      0`
	.Status:Default     0`
	.Status:Sleep      50`
	.Status:Poison     50`
	.Status:Frozen      0`
	.Status:Dizzy      75`
	.Status:Fear        0`
	.Status:Static     50`
	.Status:Paralyze   75`
	.Status:Shrink     80`
	.Status:Stop       90`
	.Status:DefaultTurnMod    0`
	.Status:SleepTurnMod      0`
	.Status:PoisonTurnMod     0`
	.Status:FrozenTurnMod     0`
	.Status:DizzyTurnMod      0`
	.Status:FearTurnMod       0`
	.Status:StaticTurnMod     0`
	.Status:ParalyzeTurnMod   0`
	.Status:ShrinkTurnMod     0`
	.Status:StopTurnMod      -1`
	.Status:End
}

#new:StatusTable $StatusTable_8022A9F4
{
	.Status:Normal      0`
	.Status:Default     0`
	.Status:Sleep      50`
	.Status:Poison     50`
	.Status:Frozen      0`
	.Status:Dizzy     100`
	.Status:Fear        0`
	.Status:Static     50`
	.Status:Paralyze   75`
	.Status:Shrink     80`
	.Status:Stop       90`
	.Status:DefaultTurnMod    0`
	.Status:SleepTurnMod      0`
	.Status:PoisonTurnMod     0`
	.Status:FrozenTurnMod     0`
	.Status:DizzyTurnMod      0`
	.Status:FearTurnMod       0`
	.Status:StaticTurnMod     0`
	.Status:ParalyzeTurnMod   0`
	.Status:ShrinkTurnMod     0`
	.Status:StopTurnMod      -1`
	.Status:End
}

#new:PartsTable $PartsTable_8022AAA0
{
	00800000 01000000 022300FF $IdleAnimations_8022AB80 $DefenseTable_8022A930 00000000 00000000 FBF40000 00000000
}

#new:PartsTable $PartsTable_8022AAC4
{
	00020001 01000000 022300FF $IdleAnimations_8022AB80 $DefenseTable_8022A93C 00000000 00000000 FBF40000 00000000
	00800000 02000000 F62300FF $IdleAnimations_8022ABCC $DefenseTable_8022A93C 00800000 00000000 00F80000 00000000
	00020001 03000000 000000FF $IdleAnimations_8022AC18 $DefenseTable_8022A93C 00000000 00000000 00000000 00000000
}

#new:Actor $WMagikoopa
{
	% stats
	[Index]        59b
	[Level]        21`b
	[MaxHP]        11`b
	[Coins]         2`b
	[Flags]       00000000
	[StatusTable] $StatusTable_8022A948
	% ai
	[PartsCount]    1`s
	[PartsTable]  $PartsTable_8022AAA0
	[Script]      $Script_Init_8022CD68
	% move effectiveness
	[Escape]       40`b
	[Item]         40`b
	[AirLift]      80`b
	[Hurricane]    70`b % Bow's "Spook" as well
	[UpAndAway]    95`b
	[PowerBounce]  80`b
	[SpinSmash]     0`b % weight (0-4)
	% ui positions
	[Size]         36`b  40`b % width height
	[HealthBar]     0`b   0`b % dx dy
	[StatusTurn]  -10`b  20`b % dx dy
	[StatusIcon]   10`b  32`b % dx dy
}

#new:Actor $FlyingWMagikoopa
{
	% stats
	[Index]        5Ab
	[Level]        21`b
	[MaxHP]        11`b
	[Coins]         2`b
	[Flags]       00000200
	[StatusTable] $StatusTable_8022A9F4
	% ai
	[PartsCount]    3`s
	[PartsTable]  $PartsTable_8022AAC4
	[Script]      $Script_Init_8022CDCC
	% move effectiveness
	[Escape]       40`b
	[Item]         40`b
	[AirLift]      95`b
	[Hurricane]    75`b % Bow's "Spook" as well
	[UpAndAway]    95`b
	[PowerBounce]  80`b
	[SpinSmash]     0`b % weight (0-4)
	% ui positions
	[Size]         48`b  40`b % width height
	[HealthBar]     0`b   0`b % dx dy
	[StatusTurn]  -25`b  20`b % dx dy
	[StatusIcon]    1`b  34`b % dx dy
}

#new:IdleAnimations $IdleAnimations_8022AB80
{
	.Status:Normal    00560301
	.Status:Stone     00560300
	.Status:Sleep     00560308
	.Status:Poison    00560301
	.Status:Stop      00560300
	.Status:Static    00560301
	.Status:Paralyze  00560300
	.Status:Dizzy     00560307
	.Status:Fear      00560307
	.Status:End
}

#new:IdleAnimations $IdleAnimations_8022ABCC
{
	.Status:Normal    00570301
	.Status:Stone     00570300
	.Status:Sleep     00570308
	.Status:Poison    00570301
	.Status:Stop      00570300
	.Status:Static    00570301
	.Status:Paralyze  00570300
	.Status:Dizzy     00570307
	.Status:Fear      00570307
	.Status:End
}

#new:IdleAnimations $IdleAnimations_8022AC18
{
	.Status:Normal    0057030A
	.Status:End
}

#new:Script $Script_Idle_8022AC24
{
    0:  Return
    8:  End
}

#new:Script $Script_HandleEvent_8022AC34
{
    0:  Call  UseIdleAnimation  ( .Actor:Self .False )
   14:  Call  EnableIdleScript  ( .Actor:Self 00000000 )
   28:  Call  GetLastEvent      ( .Actor:Self *Var0 )
   3C:  Switch  *Var0
   48:  	CaseOR  ==  .Event:HitCombo % 9
   54:  	CaseOR  ==  .Event:Hit % A
   60:  		SetConst  *Var0  00000001
   70:  		SetConst  *Var1  00560304
   80:  		ExecWait  DoNormalHit
   8C:  	EndCaseGroup
   94:  	Case  ==  .Event:BurnHit % E
   A0:  		SetConst  *Var0  00000001
   B0:  		SetConst  *Var1  00560305
   C0:  		SetConst  *Var2  00560306
   D0:  		ExecWait  DoBurnHit
   DC:  	Case  ==  .Event:BurnDeath % 24
   E8:  		SetConst  *Var0  00000001
   F8:  		SetConst  *Var1  00560305
  108:  		SetConst  *Var2  00560306
  118:  		ExecWait  DoBurnHit
  124:  		SetConst  *Var0  00000001
  134:  		SetConst  *Var1  00560306
  144:  		ExecWait  DoDeath
  150:  		Return
  158:  	Case  ==  .Event:SpinSmashHit % B
  164:  		SetConst  *Var0  00000001
  174:  		SetConst  *Var1  00560304
  184:  		ExecWait  DoSpinSmashHit
  190:  	Case  ==  .Event:SpinSmashDeath % 21
  19C:  		SetConst  *Var0  00000001
  1AC:  		SetConst  *Var1  00560304
  1BC:  		ExecWait  DoSpinSmashHit
  1C8:  		SetConst  *Var0  00000001
  1D8:  		SetConst  *Var1  00560304
  1E8:  		ExecWait  DoDeath
  1F4:  		Return
  1FC:  	CaseOR  ==  00000017 % 17
  208:  	CaseOR  ==  .Event:Immune % 19
  214:  	CaseOR  ==  .Event:AirLiftFailed % 1F
  220:  		SetConst  *Var0  00000001
  230:  		SetConst  *Var1  00560301
  240:  		ExecWait  DoImmune
  24C:  	EndCaseGroup
  254:  	Case  ==  .Event:Death % 20
  260:  		SetConst  *Var0  00000001
  270:  		SetConst  *Var1  00560304
  280:  		ExecWait  DoNormalHit
  28C:  		Wait  10`
  298:  		SetConst  *Var0  00000001
  2A8:  		SetConst  *Var1  00560304
  2B8:  		ExecWait  DoDeath
  2C4:  		Return
  2CC:  	Case  ==  .Event:RecoverStatus % 31
  2D8:  		SetConst  *Var0  00000001
  2E8:  		SetConst  *Var1  00560301
  2F8:  		ExecWait  DoRecover
  304:  	Case  ==  .Event:ScareAway % 39
  310:  		Call  SetAnimation  ( .Actor:Self 00000001 00560304 )
  328:  		Call  SetActorJumpGravity   ( .Actor:Self *Fixed[1.5] )
  33C:  		Call  GetActorPos   ( .Actor:Self *Var0 *Var1 *Var2 )
  358:  		Call  SetGoalPos    ( .Actor:Self *Var0 *Var1 *Var2 )
  374:  		Call  JumpToGoal    ( .Actor:Self  15` .False .True .False )
  394:  		Wait  15`
  3A0:  		Call  SetAnimation  ( .Actor:Self 00000001 00560302 )
  3B8:  		ExecWait  $Script_WMagikoopa_RunAway
  3C4:  		Return
  3CC:  	Case  ==  .Event:BeginAirLift % 3A
  3D8:  		SetConst  *Var0  00000001
  3E8:  		SetConst  *Var1  00560302
  3F8:  		ExecWait  DoAirLift
  404:  	Case  ==  .Event:BlowAway % 16
  410:  		Call  GetStatusFlags    ( .Actor:Self *Var0 )
  424:  		If  *Var0  !&  ~Flags:StatusFlags:Sleep|Frozen|Fear|Paralyze|Dizzy|Stone|Stop % 35D000
  434:  			If  *Var0  &  ~Flags:StatusFlags:Shrink % 80000
  444:  				Call  SetPartDispOffset ( .Actor:Self 00000001 00000000 00000002 00000000 )
  464:  			Else
  46C:  				Call  SetPartDispOffset ( .Actor:Self 00000001 FFFFFFFC 00000005 00000000 )
  48C:  			EndIf
  494:  		EndIf
  49C:  		SetConst  *Var0  00000001
  4AC:  		SetConst  *Var1  00560304
  4BC:  		ExecWait  DoBlowAway
  4C8:  		Return
  4D0:  	Default
  4D8:  EndSwitch
  4E0:  Call  EnableIdleScript  ( .Actor:Self 00000001 )
  4F4:  Call  UseIdleAnimation  ( .Actor:Self .True )
  508:  Return
  510:  End
}

#new:Script $Script_8022B14C
{
    0:  Call  GetBattleFlags    ( *Var0 )
   10:  If  *Var0  !&  00080000
   20:  	If  *Var0  &  00000240
   30:  		Call  SetActorVar   ( .Actor:Self 00000000 00000001 )
   48:  	EndIf
   50:  Else
   58:  	Call  $Function_80219218    ( *Var0 )
   68:  	Switch  *Var0
   74:  		CaseOR  ==  00000083
   80:  		CaseOR  ==  00000084
   8C:  		CaseOR  ==  00000085
   98:  		CaseOR  ==  00000088
   A4:  			Call  GetBattleFlags    ( *Var0 )
   B4:  			If  *Var0  &  00000240
   C4:  				Call  SetActorVar   ( .Actor:Self 00000000 00000001 )
   DC:  			EndIf
   E4:  		EndCaseGroup
   EC:  	EndSwitch
   F4:  EndIf
   FC:  Return
  104:  End
}

#new:Script $Script_8022B258
{
    0:  Call  GetActorVar   ( .Actor:Self 00000000 *Var0 )
   18:  If  *Var0  ==  00000001
   28:  	Call  SetAnimation  ( .Actor:Self 00000001 00560304 )
   40:  	Goto  0
   4C:  EndIf
   54:  Call  GetLastElement    ( *Var0 )
   64:  If  *Var0  &  00000400
   74:  	Call  SetAnimation  ( .Actor:Self 00000001 00560304 )
   8C:  	Goto  0
   98:  EndIf
   A0:  Return
   A8:  Label  0
   B4:  Call  8027D32C  ( FFFFFF81 )
   C4:  Call  GetStatusFlags    ( .Actor:Self *Var0 )
   D8:  If  *Var0  &  ~Flags:StatusFlags:Shrink % 80000
   E8:  	Call  SetPartScale  ( .Actor:Self 00000003 *Fixed[0.4] *Fixed[0.4] *Fixed[0.4] )
  108:  EndIf
  110:  Call  SetPartFlagBits   ( .Actor:Self 00000001 00800000 .True )
  12C:  Call  SetPartFlagBits   ( .Actor:Self 00000001 00020001 .False )
  148:  Call  SetPartFlagBits   ( .Actor:Self 00000002 00020001 .True )
  164:  Call  SetPartFlagBits   ( .Actor:Self 00000002 00800000 .False )
  180:  Call  SetPartFlagBits   ( .Actor:Self 00000003 00100000 .True )
  19C:  Call  SetPartFlagBits   ( .Actor:Self 00000003 00000001 .False )
  1B8:  Call  GetActorPos       ( .Actor:Self *Var0 *Var1 *Var2 )
  1D4:  Sub   *Var2  00000001
  1E4:  Call  SetPartPos        ( .Actor:Self 00000003 *Var0 *Var1 *Var2 )
  204:  Call  PlaySoundAtActor  ( .Actor:Self 00000301 )
  218:  Call  GetActorPos       ( .Actor:Self *Var0 *Var1 *Var2 )
  234:  Set   *Var1  00000000
  244:  Call  SetActorJumpGravity   ( .Actor:Self *Fixed[0.8] )
  258:  Call  SetGoalPos        ( .Actor:Self *Var0 *Var1 *Var2 )
  274:  Call  JumpToGoal        ( .Actor:Self  15` .False .True .False )
  294:  Call  $Function_80219310    ( 00000096 0000000A )
  2A8:  Thread
  2B0:  	Call  ShakeCam  ( .Cam:Battle 00000000  5` *Fixed[0.7] )
  2CC:  EndThread
  2D4:  Call  GetLastEvent  ( .Actor:Self *Var3 )
  2E8:  If  *Var3  ==  0000000F % F
  2F8:  	Call  SetAnimation  ( .Actor:Self 00000001 00560304 )
  310:  	Call  GetActorPos   ( .Actor:Self *Var3 *Var4 *Var5 )
  32C:  	Add   *Var4  0000000A
  33C:  	Add   *Var5  00000005
  34C:  	Call  PlayEffect    ( ~FX:SmokeBurst:Black *Var3 *Var4 *Var5 *Fixed[1.0] 0000000A 00000000 00000000 00000000 00000000 00000000 00000000 00000000 )
  390:  EndIf
  398:  Call  SetGoalPos    ( .Actor:Self *Var0 *Var1 *Var2 )
  3B4:  Call  JumpToGoal    ( .Actor:Self  10` .False .True .False )
  3D4:  Call  SetGoalPos    ( .Actor:Self *Var0 *Var1 *Var2 )
  3F0:  Call  JumpToGoal    ( .Actor:Self  5` .False .True .False )
  410:  Loop  00000014
  41C:  	Call  SetPartFlagBits   ( .Actor:Self 00000003 00000001 .True )
  438:  	Wait  1`
  444:  	Call  SetPartFlagBits   ( .Actor:Self 00000003 00000001 .False )
  460:  	Wait  1`
  46C:  EndLoop
  474:  Call  SetPartFlagBits   ( .Actor:Self 00000003 00000001 .True )
  490:  Call  SetAnimation      ( .Actor:Self 00000001 00560301 )
  4A8:  Call  SetActorFlagBits  ( .Actor:Self 00000200 .False )
  4C0:  Call  BindHandleEvent   ( .Actor:Self $Script_HandleEvent_8022AC34 )
  4D4:  Call  SetActorType      ( .Actor:Self 00000059 )
  4E8:  Call  SetStatusTable    ( .Actor:Self $StatusTable_8022A948 )
  4FC:  Call  $Function_80219244    ( FFFFFFF6 00000014 0000000A 00000020 )
  518:  Call  SetActorFlagBits  ( .Actor:Self 00001000 .True )
  530:  Call  ResetAllActorSounds   ( .Actor:Self )
  540:  Call  GetIndexFromPos   ( .Actor:Self *Var0 )
  554:  Mod   *Var0  00000004
  564:  Call  SetGoalToIndex    ( .Actor:Self *Var0 )
  578:  Call  SetActorSpeed     ( .Actor:Self *Fixed[4.0] )
  58C:  Call  RunToGoal ( .Actor:Self  0` .False )
  5A4:  Call  GetGoalPos        ( .Actor:Self *Var0 *Var1 *Var2 )
  5C0:  Call  ForceHomePos      ( .Actor:Self *Var0 *Var1 *Var2 )
  5DC:  Call  HPBarToHome       ( .Actor:Self )
  5EC:  Return
  5F4:  End
}

#new:Script $Script_HandleEvent_8022B854
{
    0:  Call  UseIdleAnimation  ( .Actor:Self .False )
   14:  Call  EnableIdleScript  ( .Actor:Self 00000000 )
   28:  Call  GetLastEvent      ( .Actor:Self *Var0 )
   3C:  Switch  *Var0
   48:  	Case  ==  .Event:HitCombo % 9
   54:  		ExecWait  $Script_8022B14C
   60:  		SetConst  *Var0  00000002
   70:  		SetConst  *Var1  00570304
   80:  		ExecWait  DoNormalHit
   8C:  	CaseOR  ==  .Event:Hit % A
   98:  	CaseOR  ==  .Event:FallTrigger % C
   A4:  		ExecWait  $Script_8022B14C
   B0:  		SetConst  *Var0  00000002
   C0:  		SetConst  *Var1  00570304
   D0:  		ExecWait  DoNormalHit
   DC:  		ExecWait  $Script_8022B258
   E8:  	EndCaseGroup
   F0:  	CaseOR  ==  .Event:BurnHit % E
   FC:  	CaseOR  ==  0000000F % F
  108:  		ExecWait  $Script_8022B14C
  114:  		SetConst  *Var0  00000002
  124:  		SetConst  *Var1  00570305
  134:  		SetConst  *Var2  00570306
  144:  		ExecWait  DoBurnHit
  150:  		ExecWait  $Script_8022B258
  15C:  	EndCaseGroup
  164:  	Case  ==  .Event:BurnDeath % 24
  170:  		SetConst  *Var0  00000002
  180:  		SetConst  *Var1  00570305
  190:  		SetConst  *Var2  00570306
  1A0:  		ExecWait  DoBurnHit
  1AC:  		SetConst  *Var0  00000002
  1BC:  		SetConst  *Var1  00570306
  1CC:  		ExecWait  DoDeath
  1D8:  		Return
  1E0:  	Case  ==  .Event:SpinSmashHit % B
  1EC:  		SetConst  *Var0  00000002
  1FC:  		SetConst  *Var1  00570304
  20C:  		ExecWait  DoSpinSmashHit
  218:  	Case  ==  .Event:SpinSmashDeath % 21
  224:  		SetConst  *Var0  00000002
  234:  		SetConst  *Var1  00570304
  244:  		ExecWait  DoSpinSmashHit
  250:  		SetConst  *Var0  00000002
  260:  		SetConst  *Var1  00570304
  270:  		ExecWait  DoDeath
  27C:  		Return
  284:  	CaseOR  ==  00000017 % 17
  290:  	CaseOR  ==  .Event:Immune % 19
  29C:  	CaseOR  ==  .Event:AirLiftFailed % 1F
  2A8:  		SetConst  *Var0  00000002
  2B8:  		SetConst  *Var1  00570301
  2C8:  		ExecWait  DoImmune
  2D4:  	EndCaseGroup
  2DC:  	Case  ==  .Event:Death % 20
  2E8:  		SetConst  *Var0  00000002
  2F8:  		SetConst  *Var1  00570304
  308:  		ExecWait  DoNormalHit
  314:  		Wait  10`
  320:  		SetConst  *Var0  00000002
  330:  		SetConst  *Var1  00570304
  340:  		ExecWait  DoDeath
  34C:  		Return
  354:  	Case  ==  .Event:BeginFirstStrike % 38
  360:  		Call  SetActorPos       ( .Actor:Self  20`  0`  0` )
  37C:  		Call  HPBarToCurrent    ( .Actor:Self )
  38C:  	Case  ==  .Event:EndFirstStrike % 35
  398:  		Call  SetAnimation  ( .Actor:Self 00000002 00570301 )
  3B0:  		Call  SetGoalToHome ( .Actor:Self )
  3C0:  		Call  SetActorSpeed ( .Actor:Self *Fixed[4.0] )
  3D4:  		Call  FlyToGoal     ( .Actor:Self  0`  1` .Easing:Linear )
  3F0:  		Call  SetAnimation  ( .Actor:Self 00000002 00570301 )
  408:  		Call  HPBarToHome   ( .Actor:Self )
  418:  	Case  ==  .Event:RecoverStatus % 31
  424:  		SetConst  *Var0  00000002
  434:  		SetConst  *Var1  00570301
  444:  		ExecWait  DoRecover
  450:  	Case  ==  .Event:ScareAway % 39
  45C:  		Call  SetAnimation  ( .Actor:Self 00000002 00570304 )
  474:  		Call  SetActorJumpGravity   ( .Actor:Self *Fixed[1.5] )
  488:  		Call  GetActorPos   ( .Actor:Self *Var0 *Var1 *Var2 )
  4A4:  		Call  SetGoalPos    ( .Actor:Self *Var0 *Var1 *Var2 )
  4C0:  		Call  JumpToGoal    ( .Actor:Self  15` .False .True .False )
  4E0:  		Wait  15`
  4EC:  		Call  SetAnimation  ( .Actor:Self 00000002 00570302 )
  504:  		ExecWait  $Script_WMagikoopa_RunAway
  510:  		Return
  518:  	Case  ==  .Event:BeginAirLift % 3A
  524:  		SetConst  *Var0  00000002
  534:  		SetConst  *Var1  00570302
  544:  		ExecWait  DoAirLift
  550:  	Case  ==  .Event:BlowAway % 16
  55C:  		Call  GetStatusFlags    ( .Actor:Self *Var0 )
  570:  		If  *Var0  !&  ~Flags:StatusFlags:Sleep|Frozen|Fear|Paralyze|Dizzy|Stone|Stop % 35D000
  580:  			If  *Var0  &  ~Flags:StatusFlags:Shrink % 80000
  590:  				Call  SetPartDispOffset ( .Actor:Self 00000002 FFFFFFFD 00000000 00000000 )
  5B0:  			Else
  5B8:  				Call  SetPartDispOffset ( .Actor:Self 00000002 FFFFFFF1 00000000 00000000 )
  5D8:  			EndIf
  5E0:  		EndIf
  5E8:  		SetConst  *Var0  00000002
  5F8:  		SetConst  *Var1  00570304
  608:  		ExecWait  DoBlowAway
  614:  		Return
  61C:  	Default
  624:  EndSwitch
  62C:  Call  EnableIdleScript  ( .Actor:Self 00000001 )
  640:  Call  UseIdleAnimation  ( .Actor:Self .True )
  654:  Return
  65C:  End
}

#new:Script $Script_WMagikoopa_ShapeSpell
{
    0:  Call  UseIdleAnimation  ( .Actor:Self .False )
   14:  Call  EnableIdleScript  ( .Actor:Self 00000000 )
   28:  Call  SetTargetActor    ( .Actor:Self .Actor:Player )
   3C:  Call  GetBattlePhase    ( *Var0 )
   4C:  If  *Var0  ==  00000001
   5C:  	Call  UseBattleCamPreset    ( 00000002 )
   6C:  	Call  MoveBattleCamOver     (  1` )
   7C:  Else
   84:  	Call  UseBattleCamPreset    ( 00000002 )
   94:  	Call  MoveBattleCamOver     (  10` )
   A4:  EndIf
   AC:  Call  PlaySoundAtActor  ( .Actor:Self .Sound:SpellCast1 )
   C0:  Call  GetActorPos       ( .Actor:Self *Var0 *Var1 *Var2 )
   DC:  Call  GetStatusFlags    ( .Actor:Self *VarA )
   F0:  If  *VarA  &  ~Flags:StatusFlags:Shrink % 80000
  100:  	Sub   *Var0  0000000C
  110:  	Add   *Var1  0000000E
  120:  Else
  128:  	Sub   *Var0  0000001E
  138:  	Add   *Var1  00000024
  148:  EndIf
  150:  Call  PlayEffect        ( ~FX:GatherMagic:Pink *Var0 *Var1 *Var2 *Fixed[0.5] 0000001E 00000000 00000000 00000000 00000000 00000000 00000000 00000000 )
  194:  Call  SetAnimation      ( .Actor:Self 00000002 00570302 )
  1AC:  Wait  30`
  1B8:  Call  EnemyTestTarget   ( .Actor:Self *Var0 ~Flags:DamageType:0 00000000 00000001 00000010 )
  1DC:  Switch  *Var0
  1E8:  	CaseOR  ==  .HitResult:Miss % 6
  1F4:  	CaseOR  ==  .HitResult:Lucky % 5
  200:  		Set   *VarA  *Var0
  210:  		Call  PlaySoundAtActor  ( .Actor:Self .Sound:SpellCast2 )
  224:  		Call  SetAnimation      ( .Actor:Self 00000002 00570303 )
  23C:  		Wait  5`
  248:  		Call  GetActorPos       ( .Actor:Self *Var0 *Var1 *Var2 )
  264:  		Call  GetStatusFlags    ( .Actor:Self *Var9 )
  278:  		If  *Var9  &  ~Flags:StatusFlags:Shrink % 80000
  288:  			Sub   *Var0  00000008
  298:  			Add   *Var1  00000008
  2A8:  		Else
  2B0:  			Sub   *Var0  00000014
  2C0:  			Add   *Var1  00000014
  2D0:  		EndIf
  2D8:  		Call  SetGoalToTarget       ( .Actor:Self )
  2E8:  		Call  GetGoalPos    ( .Actor:Self *Var3 *Var4 *Var5 )
  304:  		Sub   *Var3  00000032
  314:  		Set   *Var4  00000000
  324:  		Call  $Function_802190C0    ( *Var0 *Var1 *Var5 *Var3 *Var4 *Var5 00000019 )
  34C:  		Wait  50`
  358:  		If  *VarA  ==  .HitResult:Lucky % 5
  368:  			Call  EnemyTestTarget   ( .Actor:Self *Var0 ~Flags:DamageType:TriggerLucky 00000000 00000000 00000000 )
  38C:  		EndIf
  394:  		Wait  14`
  3A0:  		Call  YieldTurn ( )
  3AC:  		Call  AddActorDecoration    ( .Actor:Self 00000002 00000000 .Decoration:Sweat )
  3C8:  		Wait  30`
  3D4:  		Call  RemoveActorDecoration ( .Actor:Self 00000002 00000000 )
  3EC:  		Call  EnableIdleScript      ( .Actor:Self 00000001 )
  400:  		Call  UseIdleAnimation      ( .Actor:Self .True )
  414:  		Return
  41C:  	EndCaseGroup
  424:  EndSwitch
  42C:  Call  PlaySoundAtActor  ( .Actor:Self .Sound:SpellCast2 )
  440:  Call  SetAnimation      ( .Actor:Self 00000002 00570303 )
  458:  Wait  5`
  464:  Call  GetActorPos       ( .Actor:Self *Var0 *Var1 *Var2 )
  480:  Call  GetStatusFlags    ( .Actor:Self *VarA )
  494:  If  *VarA  &  ~Flags:StatusFlags:Shrink % 80000
  4A4:  	Sub   *Var0  00000008
  4B4:  	Add   *Var1  00000008
  4C4:  Else
  4CC:  	Sub   *Var0  00000014
  4DC:  	Add   *Var1  00000014
  4EC:  EndIf
  4F4:  Call  SetGoalToTarget   ( .Actor:Self )
  504:  Call  GetGoalPos        ( .Actor:Self *Var3 *Var4 *Var5 )
  520:  Sub   *Var3  0000000A
  530:  Call  $Function_802190C0    ( *Var0 *Var1 *Var5 *Var3 *Var4 *Var5 00000014 )
  558:  Wait  18`
  564:  Wait  2`
  570:  Call  EnemyDamageTarget ( .Actor:Self *Var0 ~Flags:DamageType:NoContact|Magic 00000000 00000000 00000003 00000020 )
  598:  Switch  *Var0
  5A4:  	CaseOR  ==  .HitResult:Hit % 0
  5B0:  	CaseOR  ==  .HitResult:QuakeImmune % 2
  5BC:  		Wait  19`
  5C8:  		Call  YieldTurn ( )
  5D4:  	EndCaseGroup
  5DC:  EndSwitch
  5E4:  Call  EnableIdleScript  ( .Actor:Self 00000001 )
  5F8:  Call  UseIdleAnimation  ( .Actor:Self .True )
  60C:  Return
  614:  End
}

#new:Script $Script_WMagikoopa_WandStrike
{
    0:  Call  UseIdleAnimation  ( .Actor:Self .False )
   14:  Call  EnableIdleScript  ( .Actor:Self 00000000 )
   28:  Call  SetTargetActor    ( .Actor:Self .Actor:Player )
   3C:  Call  UseBattleCamPreset    ( 0000003F )
   4C:  Call  BattleCamTargetActor  ( .Actor:Self )
   5C:  Call  8024ECF8  ( FFFFFFFF 00000001 00000000 )
   74:  Call  PlaySoundAtActor  ( .Actor:Self 000002DB )
   88:  Thread
   90:  	Call  SetAnimation  ( .Actor:Self 00000001 00560302 )
   A8:  	Set   *Var0  000000C8
   B8:  	Loop  00000014
   C4:  		Sub   *Var0  0000000A
   D4:  		Call  SetPartAlpha  ( .Actor:Self 00000001 *Var0 )
   EC:  		Wait  1`
   F8:  	EndLoop
  100:  EndThread
  108:  Wait  10`
  114:  Call  SetGoalToTarget   ( .Actor:Self )
  124:  Call  GetGoalPos        ( .Actor:Self *Var0 *Var1 *Var2 )
  140:  Call  GetStatusFlags    ( .Actor:Self *VarA )
  154:  If  *VarA  &  ~Flags:StatusFlags:Shrink % 80000
  164:  	Add   *Var0  00000005
  174:  Else
  17C:  	Add   *Var0  00000019
  18C:  EndIf
  194:  Set   *Var1  00000000
  1A4:  Call  SetGoalPos    ( .Actor:Self *Var0 *Var1 *Var2 )
  1C0:  Call  FlyToGoal     ( .Actor:Self  30`  0` .Easing:CosInOut )
  1DC:  Set   *Var0  00000037
  1EC:  Loop  00000014
  1F8:  	Add   *Var0  0000000A
  208:  	Call  SetPartAlpha  ( .Actor:Self 00000001 *Var0 )
  220:  	Wait  1`
  22C:  EndLoop
  234:  Call  SetPartAlpha      ( .Actor:Self 00000001 000000FF )
  24C:  Call  SetAnimation      ( .Actor:Self 00000001 00560303 )
  264:  Wait  11`
  270:  Call  PlaySoundAtActor  ( .Actor:Self 000002DC )
  284:  Call  EnemyTestTarget   ( .Actor:Self *Var0 ~Flags:DamageType:0 00000000 00000001 00000010 )
  2A8:  Switch  *Var0
  2B4:  	CaseOR  ==  .HitResult:Miss % 6
  2C0:  	CaseOR  ==  .HitResult:Lucky % 5
  2CC:  		Set   *VarA  *Var0
  2DC:  		Call  UseBattleCamPreset    ( 00000002 )
  2EC:  		If  *VarA  ==  .HitResult:Lucky % 5
  2FC:  			Call  EnemyTestTarget   ( .Actor:Self *Var0 ~Flags:DamageType:TriggerLucky 00000000 00000000 00000000 )
  320:  		EndIf
  328:  		Wait  15`
  334:  		Set   *Var0  000000C8
  344:  		Loop  00000014
  350:  			Sub   *Var0  0000000A
  360:  			Call  SetPartAlpha  ( .Actor:Self 00000001 *Var0 )
  378:  			Wait  1`
  384:  		EndLoop
  38C:  		Call  YieldTurn ( )
  398:  		Call  SetGoalToHome ( .Actor:Self )
  3A8:  		Call  SetAnimation  ( .Actor:Self 00000001 00560301 )
  3C0:  		Call  FlyToGoal     ( .Actor:Self  30`  0` .Easing:CosInOut )
  3DC:  		Set   *Var0  00000037
  3EC:  		Loop  00000014
  3F8:  			Add   *Var0  0000000A
  408:  			Call  SetPartAlpha  ( .Actor:Self 00000001 *Var0 )
  420:  			Wait  1`
  42C:  		EndLoop
  434:  		Call  SetPartAlpha      ( .Actor:Self 00000001 000000FF )
  44C:  		Call  EnableIdleScript  ( .Actor:Self 00000001 )
  460:  		Call  UseIdleAnimation  ( .Actor:Self .True )
  474:  		Return
  47C:  	EndCaseGroup
  484:  EndSwitch
  48C:  Call  SetGoalToTarget   ( .Actor:Self )
  49C:  Wait  2`
  4A8:  Call  EnemyDamageTarget ( .Actor:Self *Var0 ~Flags:DamageType:NoContact 00000000 00000000 00000003 00000020 )
  4D0:  Switch  *Var0
  4DC:  	CaseOR  ==  .HitResult:Hit % 0
  4E8:  	CaseOR  ==  .HitResult:QuakeImmune % 2
  4F4:  		Call  UseBattleCamPreset    ( 00000002 )
  504:  		Wait  10`
  510:  		Set   *Var0  000000C8
  520:  		Loop  00000014
  52C:  			Sub   *Var0  0000000A
  53C:  			Call  SetPartAlpha  ( .Actor:Self 00000001 *Var0 )
  554:  			Wait  1`
  560:  		EndLoop
  568:  		Call  YieldTurn ( )
  574:  		Call  SetGoalToHome ( .Actor:Self )
  584:  		Call  SetAnimation  ( .Actor:Self 00000001 00560301 )
  59C:  		Call  FlyToGoal     ( .Actor:Self  20`  0` .Easing:CosInOut )
  5B8:  		Set   *Var0  00000037
  5C8:  		Loop  00000014
  5D4:  			Add   *Var0  0000000A
  5E4:  			Call  SetPartAlpha  ( .Actor:Self 00000001 *Var0 )
  5FC:  			Wait  1`
  608:  		EndLoop
  610:  		Call  SetPartAlpha  ( .Actor:Self 00000001 000000FF )
  628:  	EndCaseGroup
  630:  EndSwitch
  638:  Call  EnableIdleScript  ( .Actor:Self 00000001 )
  64C:  Call  UseIdleAnimation  ( .Actor:Self .True )
  660:  Return
  668:  End
}

#new:Script $Script_WMagikoopa_RunAway
{
    0:  Call  UseIdleAnimation  ( .Actor:Self .False )
   14:  Call  EnableIdleScript  ( .Actor:Self 00000000 )
   28:  Call  8027D32C  ( FFFFFF81 )
   38:  Call  GetLastEvent      ( .Actor:Self *Var0 )
   4C:  If  *Var0  !=  .Event:ScareAway % 39
   5C:  	Call  UseBattleCamPreset    ( 0000000E )
   6C:  	Call  BattleCamTargetActor  ( .Actor:Self )
   7C:  	Call  MoveBattleCamOver     (  15` )
   8C:  	Wait  15`
   98:  	Call  UseBattleCamPreset    ( 00000001 )
   A8:  EndIf
   B0:  Call  SetActorSpeed ( .Actor:Self *Fixed[1.0] )
   C4:  Call  GetActorPos   ( .Actor:Self *Var0 *Var1 *Var2 )
   E0:  Add   *Var0  00000014
   F0:  Call  SetGoalPos    ( .Actor:Self *Var0 *Var1 *Var2 )
  10C:  Call  RunToGoal     ( .Actor:Self  0` .False )
  124:  Wait  10`
  130:  Call  SetActorYaw   ( .Actor:Self  180` )
  144:  Call  EnableActorBlur       ( .Actor:Self 00000001 )
  158:  Call  SetActorSpeed ( .Actor:Self *Fixed[10.0] )
  16C:  Call  GetActorPos   ( .Actor:Self *Var0 *Var1 *Var2 )
  188:  Add   *Var0  000000C8
  198:  Call  SetGoalPos    ( .Actor:Self *Var0 *Var1 *Var2 )
  1B4:  Call  RunToGoal     ( .Actor:Self  0` .False )
  1CC:  Call  YieldTurn ( )
  1D8:  Call  UseBattleCamPreset    ( 00000002 )
  1E8:  ExecWait  ForceNextTarget
  1F4:  Call  8027D32C      ( FFFFFF81 )
  204:  Call  RemoveActor   ( .Actor:Self )
  214:  Return
  21C:  End
}

#new:Script $Script_Init_8022CD68
{
    0:  Call  BindIdle      ( .Actor:Self $Script_Idle_8022AC24 )
   14:  Call  BindTakeTurn  ( .Actor:Self $Script_TakeTurn_8022E2F4 )
   28:  Call  BindHandleEvent   ( .Actor:Self $Script_HandleEvent_8022AC34 )
   3C:  Call  SetActorVar   ( .Actor:Self 00000000 00000000 )
   54:  Return
   5C:  End
}

#new:Script $Script_Init_8022CDCC
{
    0:  Call  BindIdle      ( .Actor:Self $Script_Idle_8022AC24 )
   14:  Call  BindTakeTurn  ( .Actor:Self $Script_TakeTurn_8022E2F4 )
   28:  Call  BindHandleEvent   ( .Actor:Self $Script_HandleEvent_8022B854 )
   3C:  Call  SetActorVar   ( .Actor:Self 00000000 00000000 )
   54:  Return
   5C:  End
}

#new:Script $Script_HealOne
{
    0:  Set   *Var8  00000000
   10:  Set   *Var9  0000270F
   20:  Call  EnemyCreateTargetList ( 00008002 )
   30:  Call  InitTargetIterator ( )
   3C:  Label  0
   48:  Call  GetOwnerTarget        ( *Var0 *Var1 )
   5C:  Call  GetActorHP    ( *Var0 *Var2 )
   70:  Call  $Function_8021942C    ( *Var3 *Var4 )
   84:  If  *Var3  >  *Var4
   94:  	Set   *Var3  *Var4
   A4:  EndIf
   AC:  Call  $Function_8021948C    ( *Var0 *Var1 *Var5 )
   C4:  Call  GetActorDefenseBoost  ( *Var0 *Var6 )
   D8:  Add   *Var5  *Var6
   E8:  Sub   *Var3  *Var5
   F8:  Sub   *Var2  *Var3
  108:  Call  $Function_80219368    ( *Var0 *VarA )
  11C:  If  *VarA  ==  00000000
  12C:  	Call  GetEnemyMaxHP ( *Var0 *VarA )
  140:  	Call  GetActorHP    ( *Var0 *VarB )
  154:  	If  *VarA  !=  *VarB
  164:  		If  *Var2  <  *Var9
  174:  			Set   *Var8  *Var0
  184:  			Set   *Var9  *Var2
  194:  		Else
  19C:  			If  *Var2  ==  *Var9
  1AC:  				If  *Var0  <  *Var8
  1BC:  					Set   *Var8  *Var0
  1CC:  					Set   *Var9  *Var2
  1DC:  				EndIf
  1E4:  			EndIf
  1EC:  		EndIf
  1F4:  	EndIf
  1FC:  EndIf
  204:  Call  ChooseNextTarget  ( .Iter:Next *Var0 )
  218:  If  *Var0  !=  FFFFFFFF
  228:  	Goto  0
  234:  EndIf
  23C:  If  *Var8  !=  00000000
  24C:  	Goto  64
  258:  EndIf
  260:  Set   *Var8  00000000
  270:  Set   *Var9  0000270F
  280:  Call  EnemyCreateTargetList ( 00008002 )
  290:  Call  InitTargetIterator ( )
  29C:  Label  1
  2A8:  Call  GetOwnerTarget        ( *Var0 *Var1 )
  2BC:  Call  GetActorHP    ( *Var0 *Var2 )
  2D0:  Call  $Function_8021942C    ( *Var3 *Var4 )
  2E4:  If  *Var3  >  *Var4
  2F4:  	Set   *Var3  *Var4
  304:  EndIf
  30C:  Call  $Function_8021948C    ( *Var0 *Var1 *Var5 )
  324:  Call  GetActorDefenseBoost  ( *Var0 *Var6 )
  338:  Add   *Var5  *Var6
  348:  Sub   *Var3  *Var5
  358:  Sub   *Var2  *Var4
  368:  Set   *Flag[00]  .False
  378:  Call  GetOriginalActorType  ( *Var0 *VarA )
  38C:  If  *VarA  ==  00000047
  39C:  	Call  GetActorVar   ( *Var0 00000008 *VarA )
  3B4:  	If  *VarA  ==  00000001
  3C4:  		Set   *Flag[00]  .True
  3D4:  	EndIf
  3DC:  EndIf
  3E4:  Call  GetOwnerID    ( *VarA )
  3F4:  If  *VarA  !=  *Var0
  404:  	If  *Flag[00]  ==  .False
  414:  		Call  GetEnemyMaxHP ( *Var0 *VarA )
  428:  		Call  GetActorHP    ( *Var0 *VarB )
  43C:  		If  *VarA  !=  *VarB
  44C:  			If  *Var2  <  *Var9
  45C:  				Set   *Var8  *Var0
  46C:  				Set   *Var9  *Var2
  47C:  			Else
  484:  				If  *Var2  ==  *Var9
  494:  					If  *Var0  <  *Var8
  4A4:  						Set   *Var8  *Var0
  4B4:  						Set   *Var9  *Var2
  4C4:  					EndIf
  4CC:  				EndIf
  4D4:  			EndIf
  4DC:  		EndIf
  4E4:  	EndIf
  4EC:  EndIf
  4F4:  Call  ChooseNextTarget  ( .Iter:Next *Var0 )
  508:  If  *Var0  !=  FFFFFFFF
  518:  	Goto  1
  524:  EndIf
  52C:  If  *Var8  !=  00000000
  53C:  	Goto  64
  548:  EndIf
  550:  Call  EnemyCreateTargetList ( 00008002 )
  560:  Call  InitTargetIterator ( )
  56C:  Label  2
  578:  Call  GetOwnerTarget        ( *Var0 *Var1 )
  58C:  Set   *Flag[00]  .False
  59C:  Call  GetOriginalActorType  ( *Var0 *VarA )
  5B0:  If  *VarA  ==  00000047
  5C0:  	Call  GetActorVar   ( *Var0 00000008 *VarA )
  5D8:  	If  *VarA  ==  00000001
  5E8:  		Set   *Flag[00]  .True
  5F8:  	EndIf
  600:  EndIf
  608:  Call  GetOwnerID    ( *VarA )
  618:  If  *VarA  !=  *Var0
  628:  	If  *Flag[00]  ==  .False
  638:  		Call  GetEnemyMaxHP ( *Var0 *VarA )
  64C:  		Call  GetActorHP    ( *Var0 *VarB )
  660:  		If  *VarA  !=  *VarB
  670:  			Set   *Var8  *Var0
  680:  			Goto  64
  68C:  		EndIf
  694:  	EndIf
  69C:  EndIf
  6A4:  Call  ChooseNextTarget  ( .Iter:Next *Var0 )
  6B8:  If  *Var0  !=  FFFFFFFF
  6C8:  	Goto  2
  6D4:  EndIf
  6DC:  Call  GetEnemyMaxHP ( .Actor:Self *VarA )
  6F0:  Call  GetActorHP    ( .Actor:Self *VarB )
  704:  If  *VarA  !=  *VarB
  714:  	Set   *Var8  FFFFFF81
  724:  	Goto  64
  730:  EndIf
  738:  Call  EnemyCreateTargetList ( 00008002 )
  748:  Call  InitTargetIterator ( )
  754:  Label  3
  760:  Call  GetOwnerTarget        ( *Var0 *Var1 )
  774:  Call  GetOwnerID    ( *VarA )
  784:  If  *VarA  !=  *Var0
  794:  	Call  GetActorFlags ( .Actor:Self *Var0 )
  7A8:  	If  *Var0  &  00000200
  7B8:  		ExecWait  $Script_WMagikoopa_ShapeSpell
  7C4:  	Else
  7CC:  		ExecWait  $Script_WMagikoopa_WandStrike
  7D8:  	EndIf
  7E0:  	Return
  7E8:  EndIf
  7F0:  Call  ChooseNextTarget  ( .Iter:Next *Var0 )
  804:  If  *Var0  !=  FFFFFFFF
  814:  	Goto  3
  820:  EndIf
  828:  ExecWait  $Script_WMagikoopa_RunAway
  834:  Return
  83C:  Label  64
  848:  Call  RandInt   ( 000003E8 *Var0 )
  85C:  If  *Var0  >  000002EE
  86C:  	Call  GetActorFlags ( .Actor:Self *Var0 )
  880:  	If  *Var0  &  00000200
  890:  		ExecWait  $Script_WMagikoopa_ShapeSpell
  89C:  	Else
  8A4:  		ExecWait  $Script_WMagikoopa_WandStrike
  8B0:  	EndIf
  8B8:  	Return
  8C0:  EndIf
  8C8:  Call  UseIdleAnimation  ( .Actor:Self .False )
  8DC:  Call  EnableIdleScript  ( .Actor:Self 00000000 )
  8F0:  Call  SetTargetActor    ( .Actor:Self .Actor:Player )
  904:  Call  UseBattleCamPreset    ( 0000000E )
  914:  Call  BattleCamTargetActor  ( .Actor:Self )
  924:  Call  MoveBattleCamOver (  15` )
  934:  Wait  15`
  940:  Call  GetActorFlags     ( .Actor:Self *Var0 )
  954:  If  *Var0  !&  00000200
  964:  	Call  SetAnimation  ( .Actor:Self 00000001 00560302 )
  97C:  Else
  984:  	Call  SetAnimation  ( .Actor:Self 00000002 00570302 )
  99C:  EndIf
  9A4:  Wait  5`
  9B0:  Call  PlaySoundAtActor  ( .Actor:Self .Sound:SpellCast1 )
  9C4:  Call  GetActorFlags     ( .Actor:Self *Var0 )
  9D8:  If  *Var0  !&  00000200
  9E8:  	Call  GetActorPos       ( .Actor:Self *Var0 *Var1 *Var2 )
  A04:  	Call  GetStatusFlags    ( .Actor:Self *VarA )
  A18:  	If  *VarA  &  ~Flags:StatusFlags:Shrink % 80000
  A28:  		Sub   *Var0  00000006
  A38:  		Add   *Var1  0000000C
  A48:  		Sub   *Var2  00000002
  A58:  		Call  PlayEffect    ( ~FX:RadialFlowOut:RedEnergy *Var0 *Var1 *Var2 *Fixed[0.12] 0000001E 00000000 00000000 00000000 00000000 00000000 00000000 00000000 )
  A9C:  	Else
  AA4:  		Sub   *Var0  00000010
  AB4:  		Add   *Var1  0000001F
  AC4:  		Sub   *Var2  00000002
  AD4:  		Call  PlayEffect    ( ~FX:RadialFlowOut:RedEnergy *Var0 *Var1 *Var2 *Fixed[0.3] 0000001E 00000000 00000000 00000000 00000000 00000000 00000000 00000000 )
  B18:  	EndIf
  B20:  Else
  B28:  	Call  GetActorPos       ( .Actor:Self *Var0 *Var1 *Var2 )
  B44:  	Call  GetStatusFlags    ( .Actor:Self *VarA )
  B58:  	If  *VarA  &  ~Flags:StatusFlags:Shrink % 80000
  B68:  		Sub   *Var0  0000000C
  B78:  		Add   *Var1  0000000E
  B88:  		Sub   *Var2  00000002
  B98:  		Call  PlayEffect    ( ~FX:RadialFlowOut:RedEnergy *Var0 *Var1 *Var2 *Fixed[0.12] 0000001E 00000000 00000000 00000000 00000000 00000000 00000000 00000000 )
  BDC:  	Else
  BE4:  		Sub   *Var0  0000001E
  BF4:  		Add   *Var1  00000024
  C04:  		Sub   *Var2  00000002
  C14:  		Call  PlayEffect    ( ~FX:RadialFlowOut:RedEnergy *Var0 *Var1 *Var2 *Fixed[0.3] 0000001E 00000000 00000000 00000000 00000000 00000000 00000000 00000000 )
  C58:  	EndIf
  C60:  EndIf
  C68:  Wait  30`
  C74:  Call  GetActorFlags ( .Actor:Self *Var0 )
  C88:  If  *Var0  !&  00000200
  C98:  	Call  SetAnimation  ( .Actor:Self 00000001 00560301 )
  CB0:  Else
  CB8:  	Call  SetAnimation  ( .Actor:Self 00000002 00570301 )
  CD0:  EndIf
  CD8:  Wait  5`
  CE4:  Thread
  CEC:  	Wait  5`
  CF8:  	Call  PlaySoundAtActor  ( *Var8 0000206D )
  D0C:  	Call  PlaySoundAtActor  ( *Var8 00000214 )
  D20:  	Wait  30`
  D2C:  	Call  PlaySoundAtActor  ( *Var8 0000025C )
  D40:  EndThread
  D48:  Thread
  D50:  	Call  8026BF48  ( 00000001 )
  D60:  	Call  HealActor ( *Var8 00000005 .False )
  D78:  	Call  8026BF48  ( 00000000 )
  D88:  EndThread
  D90:  Call  WaitForBuffDone ( )
  D9C:  Call  UseBattleCamPreset    ( 00000002 )
  DAC:  Wait  10`
  DB8:  Call  YieldTurn ( )
  DC4:  Call  EnableIdleScript      ( .Actor:Self 00000001 )
  DD8:  Call  UseIdleAnimation      ( .Actor:Self .True )
  DEC:  Return
  DF4:  End
}

#new:Script $Script_HealAll
{
    0:  Call  RandInt   ( 000003E8 *Var0 )
   14:  If  *Var0  >  000002EE
   24:  	Call  GetActorFlags ( .Actor:Self *Var0 )
   38:  	If  *Var0  &  00000200
   48:  		ExecWait  $Script_WMagikoopa_ShapeSpell
   54:  	Else
   5C:  		ExecWait  $Script_WMagikoopa_WandStrike
   68:  	EndIf
   70:  	Return
   78:  EndIf
   80:  Call  UseIdleAnimation  ( .Actor:Self .False )
   94:  Call  EnableIdleScript  ( .Actor:Self 00000000 )
   A8:  Call  SetTargetActor    ( .Actor:Self .Actor:Player )
   BC:  Call  UseBattleCamPreset    ( 0000000E )
   CC:  Call  BattleCamTargetActor  ( .Actor:Self )
   DC:  Call  MoveBattleCamOver (  15` )
   EC:  Wait  15`
   F8:  Call  GetActorFlags     ( .Actor:Self *Var0 )
  10C:  If  *Var0  !&  00000200
  11C:  	Call  SetAnimation  ( .Actor:Self 00000001 00560302 )
  134:  Else
  13C:  	Call  SetAnimation  ( .Actor:Self 00000002 00570302 )
  154:  EndIf
  15C:  Wait  5`
  168:  Call  PlaySoundAtActor  ( .Actor:Self .Sound:SpellCast1 )
  17C:  Call  GetActorFlags     ( .Actor:Self *Var0 )
  190:  If  *Var0  !&  00000200
  1A0:  	Call  GetActorPos       ( .Actor:Self *Var0 *Var1 *Var2 )
  1BC:  	Call  GetStatusFlags    ( .Actor:Self *VarA )
  1D0:  	If  *VarA  &  ~Flags:StatusFlags:Shrink % 80000
  1E0:  		Sub   *Var0  00000006
  1F0:  		Add   *Var1  0000000C
  200:  		Sub   *Var2  00000002
  210:  		Call  PlayEffect    ( ~FX:RadialFlowOut:RedEnergy *Var0 *Var1 *Var2 *Fixed[0.12] 0000001E 00000000 00000000 00000000 00000000 00000000 00000000 00000000 )
  254:  	Else
  25C:  		Sub   *Var0  00000010
  26C:  		Add   *Var1  0000001F
  27C:  		Sub   *Var2  00000002
  28C:  		Call  PlayEffect    ( ~FX:RadialFlowOut:RedEnergy *Var0 *Var1 *Var2 *Fixed[0.3] 0000001E 00000000 00000000 00000000 00000000 00000000 00000000 00000000 )
  2D0:  	EndIf
  2D8:  Else
  2E0:  	Call  GetActorPos       ( .Actor:Self *Var0 *Var1 *Var2 )
  2FC:  	Call  GetStatusFlags    ( .Actor:Self *VarA )
  310:  	If  *VarA  &  ~Flags:StatusFlags:Shrink % 80000
  320:  		Sub   *Var0  0000000C
  330:  		Add   *Var1  0000000E
  340:  		Sub   *Var2  00000002
  350:  		Call  PlayEffect    ( ~FX:RadialFlowOut:RedEnergy *Var0 *Var1 *Var2 *Fixed[0.12] 0000001E 00000000 00000000 00000000 00000000 00000000 00000000 00000000 )
  394:  	Else
  39C:  		Sub   *Var0  0000001E
  3AC:  		Add   *Var1  00000024
  3BC:  		Sub   *Var2  00000002
  3CC:  		Call  PlayEffect    ( ~FX:RadialFlowOut:RedEnergy *Var0 *Var1 *Var2 *Fixed[0.3] 0000001E 00000000 00000000 00000000 00000000 00000000 00000000 00000000 )
  410:  	EndIf
  418:  EndIf
  420:  Wait  30`
  42C:  Call  GetActorFlags ( .Actor:Self *Var0 )
  440:  If  *Var0  !&  00000200
  450:  	Call  SetAnimation  ( .Actor:Self 00000001 00560301 )
  468:  Else
  470:  	Call  SetAnimation  ( .Actor:Self 00000002 00570301 )
  488:  EndIf
  490:  Wait  5`
  49C:  Call  EnemyCreateTargetList ( 00008002 )
  4AC:  Call  InitTargetIterator ( )
  4B8:  Label  0
  4C4:  Set   *Flag[00]  .False
  4D4:  Call  GetOwnerTarget        ( *Var0 *Var1 )
  4E8:  Call  GetOriginalActorType  ( *Var0 *Var1 )
  4FC:  If  *Var1  ==  00000047
  50C:  	Call  GetActorVar   ( *Var0 00000008 *Var1 )
  524:  	If  *Var1  ==  00000001
  534:  		Set   *Flag[00]  .True
  544:  	EndIf
  54C:  EndIf
  554:  If  *Flag[00]  ==  .False
  564:  	Thread
  56C:  		Wait  5`
  578:  		Call  PlaySoundAtActor  ( *Var0 0000206D )
  58C:  		Call  PlaySoundAtActor  ( *Var0 00000214 )
  5A0:  		Wait  30`
  5AC:  		Call  PlaySoundAtActor  ( *Var0 0000025C )
  5C0:  	EndThread
  5C8:  	Thread
  5D0:  		Call  8026BF48  ( 00000001 )
  5E0:  		Call  HealActor ( *Var0 00000003 .True )
  5F8:  		Call  8026BF48  ( 00000000 )
  608:  	EndThread
  610:  EndIf
  618:  Call  ChooseNextTarget  ( .Iter:Next *Var0 )
  62C:  If  *Var0  !=  FFFFFFFF
  63C:  	Goto  0
  648:  EndIf
  650:  Call  WaitForBuffDone ( )
  65C:  Wait  1`
  668:  Call  UseBattleCamPreset    ( 00000002 )
  678:  Wait  10`
  684:  Call  YieldTurn ( )
  690:  Call  EnableIdleScript      ( .Actor:Self 00000001 )
  6A4:  Call  UseIdleAnimation      ( .Actor:Self .True )
  6B8:  Return
  6C0:  End
}

#new:Script $Script_TakeTurn_8022E2F4
{
    0:  Call  CountPlayerTargets    ( .Actor:Self 00008002 *Var0 )
   18:  If  *Var0  ==  00000001
   28:  	ExecWait  $Script_WMagikoopa_RunAway
   34:  	Return
   3C:  EndIf
   44:  Set   *VarA  00000000
   54:  Set   *VarB  00000000
   64:  Call  EnemyCreateTargetList ( 00008002 )
   74:  Call  InitTargetIterator ( )
   80:  Label  0
   8C:  Set   *Flag[00]  .False
   9C:  Call  GetOwnerTarget        ( *Var0 *Var1 )
   B0:  Call  GetOriginalActorType  ( *Var0 *Var1 )
   C4:  If  *Var1  ==  00000047
   D4:  	Call  GetActorVar   ( *Var0 00000008 *Var1 )
   EC:  	If  *Var1  ==  00000001
   FC:  		Set   *Flag[00]  .True
  10C:  	EndIf
  114:  EndIf
  11C:  If  *Flag[00]  ==  .False
  12C:  	Call  GetActorHP    ( *Var0 *Var2 )
  140:  	Call  GetEnemyMaxHP ( *Var0 *Var3 )
  154:  	If  *Var2  !=  *Var3
  164:  		Add   *VarA  00000001
  174:  	EndIf
  17C:  	Add   *VarB  00000001
  18C:  EndIf
  194:  Call  ChooseNextTarget  ( .Iter:Next *Var0 )
  1A8:  If  *Var0  !=  FFFFFFFF
  1B8:  	Goto  0
  1C4:  EndIf
  1CC:  Mul   *VarA  00000064
  1DC:  Div   *VarA  *VarB
  1EC:  Switch  *VarA
  1F8:  	Case  >=  0000003C
  204:  		ExecWait  $Script_HealAll
  210:  	Case  ==  00000000
  21C:  		Call  GetActorFlags ( .Actor:Self *Var0 )
  230:  		If  *Var0  &  00000200
  240:  			ExecWait  $Script_WMagikoopa_ShapeSpell
  24C:  		Else
  254:  			ExecWait  $Script_WMagikoopa_WandStrike
  260:  		EndIf
  268:  	Default
  270:  		ExecWait  $Script_HealOne
  27C:  EndSwitch
  284:  Return
  28C:  End
}

PADDING: 8022E588 to 8022E590 (0065F398 to 0065F3A0)
00000000 00000000

#new:Script $Script_BeforeBattle_8022E590
{
    0:  Call  SetSpriteShading  ( FFFFFFFF )
   10:  Call  SetCamBGColor     ( .Cam:Battle  0`  0`  0` )
   2C:  Call  802536A8  ( 00000001 )
   3C:  Return
   44:  End
}

#new:Script $Script_AfterBattle_8022E5DC
{
    0:  Return
    8:  End
}

#new:ForegroundModelList $ForegroundModelList_8022E5EC
{
	~Model:pra_bt01:o383
	~Model:pra_bt01:o384
	~Model:pra_bt01:o385
	00000000
}

#new:Stage $Stage_8022E5FC
{
	$ASCII_8022F670  % pra_tex
	$ASCII_8022F660  % pra_bt01_shape
	$ASCII_8022F650  % pra_bt01_hit
	$Script_BeforeBattle_8022E590
	$Script_AfterBattle_8022E5DC
	00000000
	$ForegroundModelList_8022E5EC
	00000000
	00000000
	00000000
}

PADDING: 8022E624 to 8022E630 (0065F434 to 0065F440)
00000000 00000000 00000000

#new:Script $Script_8022E630
{
    0:  Set   *VarA  *Var1
   10:  Set   *VarB  *Var2
   20:  Set   *VarC  *Var3
   30:  Call  SetTexPanner  ( *Var0 *Var1 )
   44:  Set   *Var0  00000000
   54:  Set   *Var1  00000000
   64:  Loop
   70:  	Call  SetTexPanOffset   ( *VarA 00000000 *Var0 *Var1 )
   8C:  	Add   *Var0  *VarB
   9C:  	Add   *Var1  *VarC
   AC:  	Wait  1`
   B8:  EndLoop
   C0:  Return
   C8:  End
}

% Origin: HEURISTIC
#new:Script $Script_8022E700
{
    0:  Set   *VarA  *Var1
   10:  Set   *VarB  *Var2
   20:  Set   *VarC  *Var3
   30:  Call  SetTexPanner  ( *Var0 *Var1 )
   44:  Set   *Var0  00000000
   54:  Set   *Var1  00000000
   64:  Loop
   70:  	Call  SetTexPanOffset   ( *VarA 00000000 *Var0 00000000 )
   8C:  	Call  SetTexPanOffset   ( *VarA 00000001 *Var1 00000000 )
   A8:  	Add   *Var0  *VarB
   B8:  	Add   *Var1  *VarC
   C8:  	Wait  1`
   D4:  EndLoop
   DC:  Return
   E4:  End
}

% Origin: HEURISTIC
#new:Script $Script_8022E7EC
{
    0:  Set   *VarA  *Var1
   10:  Set   *VarB  *Var2
   20:  Set   *VarC  *Var3
   30:  Call  SetTexPanner  ( *Var0 *Var1 )
   44:  Set   *Var0  00000000
   54:  Set   *Var1  00000000
   64:  Loop
   70:  	Call  SetTexPanOffset   ( *VarA 00000000 00000000 *Var0 )
   8C:  	Call  SetTexPanOffset   ( *VarA 00000001 00000000 *Var1 )
   A8:  	Add   *Var0  *VarB
   B8:  	Add   *Var1  *VarC
   C8:  	Wait  1`
   D4:  EndLoop
   DC:  Return
   E4:  End
}

#new:Script $Script_BeforeBattle_8022E8D8
{
    0:  Call  SetSpriteShading  ( FFFFFFFF )
   10:  Call  SetCamBGColor     ( .Cam:Battle  0`  0`  0` )
   2C:  Call  802536A8  ( 00000001 )
   3C:  Set   *Var0  00000011
   4C:  Set   *Var1  00000000
   5C:  Set   *Var2  00000BB8
   6C:  Set   *Var3  00000000
   7C:  Exec  $Script_8022E630
   88:  Set   *Var0  00000012
   98:  Set   *Var1  00000000
   A8:  Set   *Var2  00000BB8
   B8:  Set   *Var3  00000000
   C8:  Exec  $Script_8022E630
   D4:  Return
   DC:  End
}

#new:Script $Script_AfterBattle_8022E9BC
{
    0:  Return
    8:  End
}

#new:ForegroundModelList $ForegroundModelList_8022E9CC
{
	~Model:pra_bt02:o383
	~Model:pra_bt02:o384
	~Model:pra_bt02:o385
	00000000
}

#new:Stage $Stage_8022E9DC
{
	$ASCII_8022F698  % pra_tex
	$ASCII_8022F688  % pra_bt02_shape
	$ASCII_8022F678  % pra_bt02_hit
	$Script_BeforeBattle_8022E8D8
	$Script_AfterBattle_8022E9BC
	00000000
	$ForegroundModelList_8022E9CC
	00000000
	00000000
	00000000
}

PADDING: 8022EA04 to 8022EA10 (0065F814 to 0065F820)
00000000 00000000 00000000

#new:Script $Script_BeforeBattle_8022EA10
{
    0:  Call  SetSpriteShading  ( FFFFFFFF )
   10:  Call  SetCamBGColor     ( .Cam:Battle  0`  0`  0` )
   2C:  Return
   34:  End
}

#new:Script $Script_AfterBattle_8022EA4C
{
    0:  Return
    8:  End
}

#new:Stage $Stage_8022EA5C
{
	$ASCII_8022F6C0  % pra_tex
	$ASCII_8022F6B0  % pra_bt03_shape
	$ASCII_8022F6A0  % pra_bt03_hit
	$Script_BeforeBattle_8022EA10
	$Script_AfterBattle_8022EA4C
	00000000
	00000000
	00000000
	00000000
	00000000
}

PADDING: 8022EA84 to 8022EA90 (0065F894 to 0065F8A0)
00000000 00000000 00000000

#new:Script $Script_BeforeBattle_8022EA90
{
    0:  Call  SetSpriteShading  ( FFFFFFFF )
   10:  Call  SetCamBGColor     ( .Cam:Battle  0`  0`  0` )
   2C:  Call  SetGroupEnabled   ( ~Model:pra_bt03:g115 00000000 )
   40:  Return
   48:  End
}

#new:Script $Script_AfterBattle_8022EAE0
{
    0:  Return
    8:  End
}

#new:Stage $Stage_8022EAF0
{
	$ASCII_8022F6E8  % pra_tex
	$ASCII_8022F6D8  % pra_bt03_shape
	$ASCII_8022F6C8  % pra_bt03_hit
	$Script_BeforeBattle_8022EA90
	$Script_AfterBattle_8022EAE0
	00000000
	00000000
	00000000
	00000000
	00000000
}

PADDING: 8022EB18 to 8022EB20 (0065F928 to 0065F930)
00000000 00000000

#new:Script $Script_BeforeBattle_8022EB20
{
    0:  Call  SetSpriteShading  ( FFFFFFFF )
   10:  Call  SetCamBGColor     ( .Cam:Battle  0`  0`  0` )
   2C:  Call  SetGroupEnabled   ( ~Model:pra_bt03:g115 00000000 )
   40:  Call  SetGroupEnabled   ( ~Model:pra_bt03:g117 00000000 )
   54:  Return
   5C:  End
}

#new:Script $Script_AfterBattle_8022EB84
{
    0:  Return
    8:  End
}

#new:Stage $Stage_8022EB94
{
	$ASCII_8022F710  % pra_tex
	$ASCII_8022F700  % pra_bt03_shape
	$ASCII_8022F6F0  % pra_bt03_hit
	$Script_BeforeBattle_8022EB20
	$Script_AfterBattle_8022EB84
	00000000
	00000000
	00000000
	00000000
	00000000
}

PADDING: 8022EBBC to 8022EBC0 (0065F9CC to 0065F9D0)
00000000

#new:Script $Script_8022EBC0
{
    0:  Set   *VarA  *Var1
   10:  Set   *VarB  *Var2
   20:  Set   *VarC  *Var3
   30:  Call  SetTexPanner  ( *Var0 *Var1 )
   44:  Set   *Var0  00000000
   54:  Set   *Var1  00000000
   64:  Loop
   70:  	Call  SetTexPanOffset   ( *VarA 00000000 *Var0 *Var1 )
   8C:  	Add   *Var0  *VarB
   9C:  	Add   *Var1  *VarC
   AC:  	Wait  1`
   B8:  EndLoop
   C0:  Return
   C8:  End
}

% Origin: HEURISTIC
#new:Script $Script_8022EC90
{
    0:  Set   *VarA  *Var1
   10:  Set   *VarB  *Var2
   20:  Set   *VarC  *Var3
   30:  Call  SetTexPanner  ( *Var0 *Var1 )
   44:  Set   *Var0  00000000
   54:  Set   *Var1  00000000
   64:  Loop
   70:  	Call  SetTexPanOffset   ( *VarA 00000000 *Var0 00000000 )
   8C:  	Call  SetTexPanOffset   ( *VarA 00000001 *Var1 00000000 )
   A8:  	Add   *Var0  *VarB
   B8:  	Add   *Var1  *VarC
   C8:  	Wait  1`
   D4:  EndLoop
   DC:  Return
   E4:  End
}

% Origin: HEURISTIC
#new:Script $Script_8022ED7C
{
    0:  Set   *VarA  *Var1
   10:  Set   *VarB  *Var2
   20:  Set   *VarC  *Var3
   30:  Call  SetTexPanner  ( *Var0 *Var1 )
   44:  Set   *Var0  00000000
   54:  Set   *Var1  00000000
   64:  Loop
   70:  	Call  SetTexPanOffset   ( *VarA 00000000 00000000 *Var0 )
   8C:  	Call  SetTexPanOffset   ( *VarA 00000001 00000000 *Var1 )
   A8:  	Add   *Var0  *VarB
   B8:  	Add   *Var1  *VarC
   C8:  	Wait  1`
   D4:  EndLoop
   DC:  Return
   E4:  End
}

#new:Script $Script_BeforeBattle_8022EE68
{
    0:  Call  SetSpriteShading  ( FFFFFFFF )
   10:  Call  SetCamBGColor     ( .Cam:Battle  0`  0`  0` )
   2C:  Set   *Var0  00000001
   3C:  Set   *Var1  00000000
   4C:  Set   *Var2  00000BB8
   5C:  Set   *Var3  00000000
   6C:  Exec  $Script_8022EBC0
   78:  Set   *Var0  00000000
   88:  Set   *Var1  00000001
   98:  Set   *Var2  00000BB8
   A8:  Set   *Var3  00000000
   B8:  Exec  $Script_8022EBC0
   C4:  Call  802536A8  ( 00000001 )
   D4:  Return
   DC:  End
}

#new:Script $Script_AfterBattle_8022EF4C
{
    0:  Return
    8:  End
}

#new:Stage $Stage_8022EF5C
{
	$ASCII_8022F738  % pra_tex
	$ASCII_8022F728  % pra_bt04_shape
	$ASCII_8022F718  % pra_bt04_hit
	$Script_BeforeBattle_8022EE68
	$Script_AfterBattle_8022EF4C
	00000000
	00000000
	00000000
	00000000
	00000000
}

PADDING: 8022EF84 to 8022EF90 (0065FD94 to 0065FDA0)
00000000 00000000 00000000

#new:Vector3D $Vector3D_8022EF90
{
	15` 133` -25`
}

#new:Vector3D $Vector3D_8022EF9C
{
	55` 133` -25`
}

#new:Vector3D $Vector3D_8022EFA8
{
	95` 133` -25`
}

MISSING: 8022EFB4 to 8022EFC0 (0065FDC4 to 0065FDD0)
00000087 00000085 FFFFFFE7

#new:Formation $Formation_00
{
	$Swoopula $Vector3D_8022EF9C 0000000A 00000000 00000000 00000000 00000000
	$Swoopula $Vector3D_8022EFA8 00000009 00000000 00000000 00000000 00000000
}

#new:Formation $Formation_01
{
	$Swoopula $Vector3D_8022EF90 0000000A 00000000 00000000 00000000 00000000
	$Swoopula $Vector3D_8022EF9C 00000009 00000000 00000000 00000000 00000000
	$Swoopula $Vector3D_8022EFA8 00000008 00000000 00000000 00000000 00000000
}

#new:Vector3D $Vector3D_8022F04C
{
	0` 133` -25`
}

#new:Vector3D $Vector3D_8022F058
{
	40` 133` -25`
}

#new:Vector3D $Vector3D_8022F064
{
	80` 133` -25`
}

#new:Vector3D $Vector3D_8022F070
{
	120` 133` -25`
}

#new:Formation $Formation_02
{
	$Swoopula $Vector3D_8022F04C 0000000A 00000000 00000000 00000000 00000000
	$Swoopula $Vector3D_8022F058 00000009 00000000 00000000 00000000 00000000
	$Swoopula $Vector3D_8022F064 00000008 00000000 00000000 00000000 00000000
	$Swoopula $Vector3D_8022F070 00000007 00000000 00000000 00000000 00000000
}

#new:Vector3D $Vector3D_8022F0EC
{
	0` 133` -25`
}

#new:Vector3D $Vector3D_8022F0F8
{
	40` 133` -25`
}

#new:Vector3D $Vector3D_8022F104
{
	80` 133` -25`
}

#new:Vector3D $Vector3D_8022F110
{
	120` 55` 25`
}

#new:Formation $Formation_03
{
	$Swoopula $Vector3D_8022F0EC 0000000A FFFFFFFF 00000000 00000000 00000000
	$Swoopula $Vector3D_8022F0F8 00000009 FFFFFFFF 00000000 00000000 00000000
	$Swoopula $Vector3D_8022F104 00000008 FFFFFFFF 00000000 00000000 00000000
	$FlyingYMagikoopa $Vector3D_8022F110 00000007 00000000 00000000 00000000 00000000
}

#new:Formation $Formation_04
{
	$WhiteClubba 00000001 0000000A 00000000 00000000 00000000 00000000
}

#new:Formation $Formation_05
{
	$WhiteClubba 00000001 0000000A 00000000 00000000 00000000 00000000
	$WhiteClubba 00000002 00000009 00000000 00000000 00000000 00000000
}

#new:Formation $Formation_06
{
	$WhiteClubba 00000000 0000000A 00000000 00000000 00000000 00000000
	$WhiteClubba 00000001 00000009 00000000 00000000 00000000 00000000
	$WhiteClubba 00000002 00000008 00000000 00000000 00000000 00000000
}

#new:Formation $Formation_07
{
	$WhiteClubba 00000000 0000000A 00000000 00000000 00000000 00000000
	$WhiteClubba 00000001 00000009 00000000 00000000 00000000 00000000
	$Swoopula $Vector3D_8022EFA8 00000008 00000000 00000000 00000000 00000000
}

#new:Formation $Formation_08
{
	$WhiteClubba 00000000 0000000A 00000000 00000000 00000000 00000000
	$WhiteClubba 00000001 00000009 00000000 00000000 00000000 00000000
	$YMagikoopa 00000002 00000009 00000000 00000000 00000000 00000000
}

#new:Formation $Formation_09
{
	$WhiteClubba 00000000 0000000A 00000000 00000000 00000000 00000000
	$WhiteClubba 00000001 00000009 00000000 00000000 00000000 00000000
	$WMagikoopa 00000002 00000009 00000000 00000000 00000000 00000000
}

#new:Formation $Formation_0A
{
	$WhiteClubba 00000000 0000000A 00000000 00000000 00000000 00000000
	$WhiteClubba 00000001 00000009 00000000 00000000 00000000 00000000
	$WMagikoopa 00000002 00000008 00000000 00000000 00000000 00000000
	$RMagikoopa 00000003 00000007 00000000 00000000 00000000 00000000
}

#new:Formation $Formation_0B
{
	$WhiteClubba 00000001 0000000A 00000000 00000000 00000000 00000000
	$GRYMagikoopa 00000002 00000009 00000000 00000000 00000000 00000000
}

#new:Formation $Formation_0C
{
	$WhiteClubba 00000000 0000000A 00000000 00000000 00000000 00000000
	$WhiteClubba 00000001 00000009 00000000 00000000 00000000 00000000
	$WhiteClubba 00000002 00000008 00000000 00000000 00000000 00000000
	$GRNMagikoopa 00000003 00000007 00000000 00000000 00000000 00000000
}

#new:Formation $Formation_0D
{
	$WhiteClubba 00000000 0000000A 00000000 00000000 00000000 00000000
	$WhiteClubba 00000001 00000009 00000000 00000000 00000000 00000000
	$GRNMagikoopa 00000002 00000008 00000000 00000000 00000000 00000000
	$FlyingWMagikoopa 00000007 00000007 00000000 00000000 00000000 00000000
}

#new:Formation $Formation_0E
{
	$AlbinoDino 00000001 0000000A 00000000 00000000 00000000 00000000
}

#new:FormationTable $FormationTable
{
	$SJIS_8022F8F8 00000002 $Formation_00 $Stage_8022E5FC 00000000
	$SJIS_8022F8E4 00000003 $Formation_01 $Stage_8022E5FC 00000000
	$SJIS_8022F8D0 00000004 $Formation_02 $Stage_8022E5FC 00000000
	$SJIS_8022F8A4 00000004 $Formation_03 $Stage_8022E5FC 00000000
	$SJIS_8022F894 00000001 $Formation_04 $Stage_8022E5FC 00000000
	$SJIS_8022F880 00000002 $Formation_05 $Stage_8022E5FC 00000000
	$SJIS_8022F86C 00000003 $Formation_06 $Stage_8022E5FC 00000000
	$SJIS_8022F848 00000003 $Formation_07 $Stage_8022E5FC 00000000
	$SJIS_8022F824 00000003 $Formation_08 $Stage_8022E5FC 00000000
	$SJIS_8022F800 00000003 $Formation_09 $Stage_8022E5FC 00000000
	$SJIS_8022F7CC 00000004 $Formation_0A $Stage_8022E5FC 00000000
	$SJIS_8022F7AC 00000002 $Formation_0B $Stage_8022E5FC 00000000
	$SJIS_8022F788 00000004 $Formation_0C $Stage_8022E5FC 00000000
	$SJIS_8022F74C 00000004 $Formation_0D $Stage_8022E5FC 00000000
	$SJIS_8022F740 00000001 $Formation_0E $Stage_8022E5FC 00000000
	00000000 00000000 00000000 00000000 00000000
}

#new:StageTable $StageTable
{
	$ASCII_8022F934 $Stage_8022E5FC
	$ASCII_8022F92C $Stage_8022E9DC
	$ASCII_8022F924 $Stage_8022EA5C
	$ASCII_8022F91C $Stage_8022EAF0
	$ASCII_8022F914 $Stage_8022EB94
	$ASCII_8022F90C $Stage_8022EF5C
	00000000 00000000
}

PADDING: 8022F64C to 8022F650 (0066045C to 00660460)
00000000

#new:ASCII $ASCII_8022F650
{
	"pra_bt01_hit"
}

#new:ASCII $ASCII_8022F660
{
	"pra_bt01_shape"
}

#new:ASCII $ASCII_8022F670
{
	"pra_tex"
}

#new:ASCII $ASCII_8022F678
{
	"pra_bt02_hit"
}

#new:ASCII $ASCII_8022F688
{
	"pra_bt02_shape"
}

#new:ASCII $ASCII_8022F698
{
	"pra_tex"
}

#new:ASCII $ASCII_8022F6A0
{
	"pra_bt03_hit"
}

#new:ASCII $ASCII_8022F6B0
{
	"pra_bt03_shape"
}

#new:ASCII $ASCII_8022F6C0
{
	"pra_tex"
}

#new:ASCII $ASCII_8022F6C8
{
	"pra_bt03_hit"
}

#new:ASCII $ASCII_8022F6D8
{
	"pra_bt03_shape"
}

#new:ASCII $ASCII_8022F6E8
{
	"pra_tex"
}

#new:ASCII $ASCII_8022F6F0
{
	"pra_bt03_hit"
}

#new:ASCII $ASCII_8022F700
{
	"pra_bt03_shape"
}

#new:ASCII $ASCII_8022F710
{
	"pra_tex"
}

#new:ASCII $ASCII_8022F718
{
	"pra_bt04_hit"
}

#new:ASCII $ASCII_8022F728
{
	"pra_bt04_shape"
}

#new:ASCII $ASCII_8022F738
{
	"pra_tex"
}

#new:SJIS $SJIS_8022F740
{
	セキゾー % sekizo-
}

#new:SJIS $SJIS_8022F74C
{
	ホワイトガボンx２,グリーンカメック,ホワイトカメック（そら） % howaitogabonx2,guri-nkamekku,howaitokamekku（sora）
}

#new:SJIS $SJIS_8022F788
{
	ホワイトガボンx３,グリーンカメック % howaitogabonx3,guri-nkamekku
}

#new:SJIS $SJIS_8022F7AC
{
	ホワイトガボン,グレイカメック % howaitogabon,gureikamekku
}

#new:SJIS $SJIS_8022F7CC
{
	ホワイトガボンx２,ホワイトカメック,レッドカメック % howaitogabonx2,howaitokamekku,reddokamekku
}

#new:SJIS $SJIS_8022F800
{
	ホワイトガボンx２,ホワイトカメック % howaitogabonx2,howaitokamekku
}

#new:SJIS $SJIS_8022F824
{
	ホワイトガボンx２,イエローカメック % howaitogabonx2,iero-kamekku
}

#new:SJIS $SJIS_8022F848
{
	ホワイトガボンx２,バサバサチュルル % howaitogabonx2,basabasachururu
}

#new:SJIS $SJIS_8022F86C
{
	ホワイトガボンx３ % howaitogabonx3
}

#new:SJIS $SJIS_8022F880
{
	ホワイトガボンx２ % howaitogabonx2
}

#new:SJIS $SJIS_8022F894
{
	ホワイトガボン % howaitogabon
}

#new:SJIS $SJIS_8022F8A4
{
	バサバサチュルルx3,イエローカメック（そら） % basabasachururux3,iero-kamekku（sora）
}

#new:SJIS $SJIS_8022F8D0
{
	バサバサチュルルx4 % basabasachururux4
}

#new:SJIS $SJIS_8022F8E4
{
	バサバサチュルルx3 % basabasachururux3
}

#new:SJIS $SJIS_8022F8F8
{
	バサバサチュルルx2 % basabasachururux2
}

#new:ASCII $ASCII_8022F90C
{
	"pra_04"
}

#new:ASCII $ASCII_8022F914
{
	"pra_03c"
}

#new:ASCII $ASCII_8022F91C
{
	"pra_03b"
}

#new:ASCII $ASCII_8022F924
{
	"pra_03"
}

#new:ASCII $ASCII_8022F92C
{
	"pra_02"
}

#new:ASCII $ASCII_8022F934
{
	"pra_01"
}

PADDING: 8022F93C to 8022F940 (0066074C to 00660750)
00000000

