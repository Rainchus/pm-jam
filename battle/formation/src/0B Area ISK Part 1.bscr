% Script File: 0B Area ISK Part 1.bscr
% Decoded from: 4E2740 to 4EF4A0 (0B Area ISK Part 1)

#new:Function $Function_80218000
{
    0:  ADDIU     SP, SP, FFD8
    4:  SW        S1, 14 (SP)
    8:  COPY      S1, A0
    C:  SW        RA, 20 (SP)
   10:  SW        S3, 1C (SP)
   14:  SW        S2, 18 (SP)
   18:  SW        S0, 10 (SP)
   1C:  LW        S0, C (S1)
   20:  LW        A1, 0 (S0)
   24:  JAL       ~Func:get_variable
   28:  ADDIU     S0, S0, 4
   2C:  LW        A1, 0 (S0)
   30:  ADDIU     S0, S0, 4
   34:  COPY      A0, S1
   38:  JAL       ~Func:get_variable
   3C:  COPY      S3, V0
   40:  LW        A1, 0 (S0)
   44:  ADDIU     S0, S0, 4
   48:  COPY      A0, S1
   4C:  JAL       ~Func:get_variable
   50:  COPY      S2, V0
   54:  COPY      A0, S1
   58:  LW        A1, 0 (S0)
   5C:  JAL       ~Func:get_variable
   60:  COPY      S0, V0
   64:  LW        A0, 148 (S1)
   68:  JAL       ~Func:get_actor
   6C:  COPY      S1, V0
   70:  COPY      V1, V0
   74:  LW        V0, 8 (V1)
   78:  LBU       V0, 24 (V0)
   7C:  LW        A0, 8 (V1)
   80:  SUBU      S3, S3, V0
   84:  SB        S3, 194 (V1)
   88:  LBU       V0, 25 (A0)
   8C:  SUBU      S2, S2, V0
   90:  SB        S2, 195 (V1)
   94:  LBU       V0, 26 (A0)
   98:  SUBU      S0, S0, V0
   9C:  SB        S0, 196 (V1)
   A0:  LBU       A0, 27 (A0)
   A4:  SUBU      S1, S1, A0
   A8:  SB        S1, 197 (V1)
   AC:  LW        RA, 20 (SP)
   B0:  LW        S3, 1C (SP)
   B4:  LW        S2, 18 (SP)
   B8:  LW        S1, 14 (SP)
   BC:  LW        S0, 10 (SP)
   C0:  LI        V0, 2
   C4:  JR        RA
   C8:  ADDIU     SP, SP, 28
}

PADDING: 802180CC to 802180D0 (004E280C to 004E2810)
00000000

#new:Function $Function_802180D0
{
    0:  ADDIU     SP, SP, FFD8
    4:  SW        S1, 14 (SP)
    8:  COPY      S1, A0
    C:  SW        RA, 20 (SP)
   10:  SW        S3, 1C (SP)
   14:  SW        S2, 18 (SP)
   18:  SW        S0, 10 (SP)
   1C:  LW        S0, C (S1)
   20:  LW        A1, 0 (S0)
   24:  JAL       ~Func:get_variable
   28:  ADDIU     S0, S0, 4
   2C:  LW        A1, 0 (S0)
   30:  ADDIU     S0, S0, 4
   34:  COPY      A0, S1
   38:  JAL       ~Func:get_variable
   3C:  COPY      S3, V0
   40:  LW        A1, 0 (S0)
   44:  ADDIU     S0, S0, 4
   48:  COPY      A0, S1
   4C:  JAL       ~Func:get_variable
   50:  COPY      S2, V0
   54:  COPY      A0, S1
   58:  LW        A1, 0 (S0)
   5C:  JAL       ~Func:get_variable
   60:  COPY      S0, V0
   64:  LW        A0, 148 (S1)
   68:  JAL       ~Func:get_actor
   6C:  COPY      S1, V0
   70:  COPY      V1, V0
   74:  LW        V0, 8 (V1)
   78:  LBU       V0, 24 (V0)
   7C:  LW        A0, 8 (V1)
   80:  SUBU      S3, S3, V0
   84:  SB        S3, 194 (V1)
   88:  LBU       V0, 25 (A0)
   8C:  SUBU      S2, S2, V0
   90:  SB        S2, 195 (V1)
   94:  LBU       V0, 26 (A0)
   98:  SUBU      S0, S0, V0
   9C:  SB        S0, 196 (V1)
   A0:  LBU       A0, 27 (A0)
   A4:  SUBU      S1, S1, A0
   A8:  SB        S1, 197 (V1)
   AC:  LW        RA, 20 (SP)
   B0:  LW        S3, 1C (SP)
   B4:  LW        S2, 18 (SP)
   B8:  LW        S1, 14 (SP)
   BC:  LW        S0, 10 (SP)
   C0:  LI        V0, 2
   C4:  JR        RA
   C8:  ADDIU     SP, SP, 28
}

PADDING: 8021819C to 802181A0 (004E28DC to 004E28E0)
00000000

#new:Function $Function_802181A0
{
    0:  ADDIU     SP, SP, FFD8
    4:  SW        S1, 14 (SP)
    8:  COPY      S1, A0
    C:  SW        RA, 20 (SP)
   10:  SW        S3, 1C (SP)
   14:  SW        S2, 18 (SP)
   18:  SW        S0, 10 (SP)
   1C:  LW        S0, C (S1)
   20:  LW        A1, 0 (S0)
   24:  JAL       ~Func:get_variable
   28:  ADDIU     S0, S0, 4
   2C:  LW        A1, 0 (S0)
   30:  ADDIU     S0, S0, 4
   34:  COPY      A0, S1
   38:  JAL       ~Func:get_variable
   3C:  COPY      S3, V0
   40:  LW        A1, 0 (S0)
   44:  ADDIU     S0, S0, 4
   48:  COPY      A0, S1
   4C:  JAL       ~Func:get_variable
   50:  COPY      S2, V0
   54:  COPY      A0, S1
   58:  LW        A1, 0 (S0)
   5C:  JAL       ~Func:get_variable
   60:  COPY      S0, V0
   64:  LW        A0, 148 (S1)
   68:  JAL       ~Func:get_actor
   6C:  COPY      S1, V0
   70:  COPY      V1, V0
   74:  LW        V0, 8 (V1)
   78:  LBU       V0, 24 (V0)
   7C:  LW        A0, 8 (V1)
   80:  SUBU      S3, S3, V0
   84:  SB        S3, 194 (V1)
   88:  LBU       V0, 25 (A0)
   8C:  SUBU      S2, S2, V0
   90:  SB        S2, 195 (V1)
   94:  LBU       V0, 26 (A0)
   98:  SUBU      S0, S0, V0
   9C:  SB        S0, 196 (V1)
   A0:  LBU       A0, 27 (A0)
   A4:  SUBU      S1, S1, A0
   A8:  SB        S1, 197 (V1)
   AC:  LW        RA, 20 (SP)
   B0:  LW        S3, 1C (SP)
   B4:  LW        S2, 18 (SP)
   B8:  LW        S1, 14 (SP)
   BC:  LW        S0, 10 (SP)
   C0:  LI        V0, 2
   C4:  JR        RA
   C8:  ADDIU     SP, SP, 28
}

PADDING: 8021826C to 80218270 (004E29AC to 004E29B0)
00000000

#new:Function $Function_80218270
{
    0:  ADDIU     SP, SP, FFA8
    4:  SW        S4, 20 (SP)
    8:  LI        S4, 3
    C:  SW        S2, 18 (SP)
   10:  SW        RA, 24 (SP)
   14:  SW        S3, 1C (SP)
   18:  SW        S1, 14 (SP)
   1C:  SW        S0, 10 (SP)
   20:  SDC1      F30, 50 (SP)
   24:  SDC1      F28, 48 (SP)
   28:  SDC1      F26, 40 (SP)
   2C:  SDC1      F24, 38 (SP)
   30:  SDC1      F22, 30 (SP)
   34:  SDC1      F20, 28 (SP)
   38:  LW        A0, 148 (A0)
   3C:  LIF       F20, 7.0
   44:  LIF       F30, 0.5960938
   50:  LIF       F28, 3.0
   58:  JAL       ~Func:get_actor
   5C:  CLEAR     S2
   60:  LI        A0, 180
   64:  JAL       ~Func:heap_malloc
   68:  COPY      S3, V0
   6C:  COPY      S1, V0
   70:  ADDIU     S0, S1, 8
   74:  LWC1      F26, 14C (S3)
   78:  LWC1      F2, 144 (S3)
   7C:  LIF       F1, 2.625
   84:  MTC1      R0, F0
   88:  CVT.D.S   F2, F2
   8C:  ADD.D     F2, F2, F0
   90:  LWC1      F0, 148 (S3)
   94:  LIF       F5, 2.3125
   9C:  MTC1      R0, F4
   A0:  CVT.D.S   F0, F0
   A4:  ADD.D     F0, F0, F4
   A8:  SW        S1, 78 (S3)
   AC:  CVT.S.D   F24, F2
   B0:  CVT.S.D   F22, F0
        .oB4
   B4:  COPY      A0, S3
   B8:  ADDU      A1, S4, S2
   BC:  SWC1      F20, 1C (S0)
   C0:  SWC1      F20, 24 (S0)
   C4:  SWC1      F20, 20 (S0)
   C8:  SWC1      F24, 0 (S1)
   CC:  SWC1      F22, FFFC (S0)
   D0:  SWC1      F26, 0 (S0)
   D4:  SW        R0, 14 (S0)
   D8:  SWC1      F30, 18 (S0)
   DC:  SWC1      F28, C (S0)
   E0:  JAL       ~Func:get_actor_part
   E4:  SW        R0, 10 (S0)
   E8:  LWC1      F0, 0 (S1)
   EC:  ADDIU     S2, S2, 1
   F0:  SWC1      F0, 2C (V0)
   F4:  LWC1      F0, FFFC (S0)
   F8:  ADDIU     S1, S1, 30
   FC:  SWC1      F0, 30 (V0)
  100:  LWC1      F0, 0 (S0)
  104:  SWC1      F0, 34 (V0)
  108:  SLTI      V0, S2, 8
  10C:  BNE       V0, R0, .oB4
  110:  ADDIU     S0, S0, 30
  114:  LW        RA, 24 (SP)
  118:  LW        S4, 20 (SP)
  11C:  LW        S3, 1C (SP)
  120:  LW        S2, 18 (SP)
  124:  LW        S1, 14 (SP)
  128:  LW        S0, 10 (SP)
  12C:  LDC1      F30, 50 (SP)
  130:  LDC1      F28, 48 (SP)
  134:  LDC1      F26, 40 (SP)
  138:  LDC1      F24, 38 (SP)
  13C:  LDC1      F22, 30 (SP)
  140:  LDC1      F20, 28 (SP)
  144:  LI        V0, 2
  148:  JR        RA
  14C:  ADDIU     SP, SP, 58
}

#new:Function $Function_802183C0
{
    0:  ADDIU     SP, SP, FFD8
    4:  SDC1      F22, 20 (SP)
    8:  MTC1      A1, F22
    C:  LIF       F0, 6.28318
   18:  MTC1      A2, F6
   1C:  SDC1      F20, 18 (SP)
   20:  MUL.S     F20, F6, F0
   24:  NOP
   28:  SW        S0, 10 (SP)
   2C:  LIF       F0, 360.0
   34:  COPY      S0, A0
   38:  SW        RA, 14 (SP)
   3C:  DIV.S     F20, F20, F0
   40:  JAL       ~Func:sin_rad
   44:  MOV.S     F12, F20
   48:  MOV.S     F12, F20
   4C:  JAL       ~Func:cos_rad
   50:  MOV.S     F20, F0
   54:  NEG.S     F2, F22
   58:  MUL.S     F2, F2, F20
   5C:  NOP
   60:  MUL.S     F22, F22, F0
   64:  NOP
   68:  LWC1      F4, 0 (S0)
   6C:  ADD.S     F4, F4, F2
   70:  LWC1      F0, 4 (S0)
   74:  ADD.S     F0, F0, F22
   78:  SWC1      F4, 0 (S0)
   7C:  SWC1      F0, 4 (S0)
   80:  LW        RA, 14 (SP)
   84:  LW        S0, 10 (SP)
   88:  LDC1      F22, 20 (SP)
   8C:  LDC1      F20, 18 (SP)
   90:  JR        RA
   94:  ADDIU     SP, SP, 28
}

#new:Function $Function_80218458
{
    0:  ADDIU     SP, SP, FFD8
    4:  SDC1      F22, 20 (SP)
    8:  MTC1      A1, F22
    C:  LIF       F0, 6.28318
   18:  MTC1      A2, F2
   1C:  SDC1      F20, 18 (SP)
   20:  MUL.S     F20, F2, F0
   24:  NOP
   28:  SW        S0, 10 (SP)
   2C:  LIF       F0, 360.0
   34:  COPY      S0, A0
   38:  SW        RA, 14 (SP)
   3C:  DIV.S     F20, F20, F0
   40:  JAL       ~Func:sin_rad
   44:  MOV.S     F12, F20
   48:  JAL       ~Func:cos_rad
   4C:  MOV.S     F12, F20
   50:  MUL.S     F22, F22, F0
   54:  NOP
   58:  SWC1      F22, 0 (S0)
   5C:  LW        RA, 14 (SP)
   60:  LW        S0, 10 (SP)
   64:  LDC1      F22, 20 (SP)
   68:  LDC1      F20, 18 (SP)
   6C:  JR        RA
   70:  ADDIU     SP, SP, 28
}

#new:Function $Function_802184CC
{
    0:  ADDIU     SP, SP, FF98
    4:  SW        RA, 38 (SP)
    8:  SW        S5, 34 (SP)
    C:  SW        S4, 30 (SP)
   10:  SW        S3, 2C (SP)
   14:  SW        S2, 28 (SP)
   18:  SW        S1, 24 (SP)
   1C:  SW        S0, 20 (SP)
   20:  SDC1      F28, 60 (SP)
   24:  SDC1      F26, 58 (SP)
   28:  SDC1      F24, 50 (SP)
   2C:  SDC1      F22, 48 (SP)
   30:  SDC1      F20, 40 (SP)
   34:  JAL       ~Func:get_actor
   38:  LW        A0, 148 (A0)
   3C:  COPY      S1, V0
   40:  BNE       S1, R0, .o50
   44:  LI        V0, A
   48:  BEQ       R0, R0, .o3AC
   4C:  CLEAR     V0
        .o50
   50:  LB        V1, 210 (S1)
   54:  LW        S2, 78 (S1)
   58:  BNE       V1, V0, .o90
   5C:  LI        S5, 3
   60:  LWC1      F2, 144 (S1)
   64:  LIF       F1, 2.375
   6C:  MTC1      R0, F0
   70:  CVT.D.S   F2, F2
   74:  ADD.D     F2, F2, F0
   78:  LWC1      F0, 148 (S1)
   7C:  LIF       F5, 2.0625
   84:  MTC1      R0, F4
   88:  BEQ       R0, R0, .oBC
   8C:  CVT.D.S   F0, F0
        .o90
   90:  LWC1      F2, 144 (S1)
   94:  LIF       F1, 2.625
   9C:  MTC1      R0, F0
   A0:  CVT.D.S   F2, F2
   A4:  ADD.D     F2, F2, F0
   A8:  LWC1      F0, 148 (S1)
   AC:  LIF       F5, 2.3125
   B4:  MTC1      R0, F4
   B8:  CVT.D.S   F0, F0
        .oBC
   BC:  ADD.D     F0, F0, F4
   C0:  CVT.S.D   F20, F2
   C4:  CVT.S.D   F22, F0
   C8:  CLEAR     S3
   CC:  LI        S4, A
   D0:  ADDIU     S0, S2, 4
   D4:  LIF       F28, 3.5
   DC:  LIF       F26, 7.0
   E4:  LIF       F24, 1.0
        .oEC
   EC:  LB        V0, 210 (S1)
   F0:  BNEL      V0, S4, .o108
   F4:  SWC1      F26, 20 (S0)
   F8:  SWC1      F28, 20 (S0)
   FC:  SWC1      F28, 28 (S0)
  100:  BEQ       R0, R0, .o110
  104:  SWC1      F28, 24 (S0)
        .o108
  108:  SWC1      F26, 28 (S0)
  10C:  SWC1      F26, 24 (S0)
        .o110
  110:  LWC1      F2, 14 (S0)
  114:  LWC1      F0, 10 (S0)
  118:  SUB.S     F2, F2, F0
  11C:  NEG.S     F0, F0
  120:  ADD.S     F0, F0, F0
  124:  C.LT.S    F2, F0
  128:  NOP
  12C:  BC1F      .o164
  130:  SWC1      F2, 14 (S0)
  134:  SWC1      F0, 14 (S0)
  138:  LW        V0, A8 (S1)
  13C:  BEQ       V0, R0, .o164
  140:  NOP
  144:  BNE       S3, R0, .o164
  148:  LI        A0, 2063
  14C:  LWC1      F0, 14C (S1)
  150:  SWC1      F0, 10 (SP)
  154:  LW        A2, 144 (S1)
  158:  LW        A3, 148 (S1)
  15C:  JAL       ~Func:sfx_play_sound_at_position
  160:  CLEAR     A1
        .o164
  164:  LWC1      F0, 0 (S0)
  168:  LWC1      F2, 14 (S0)
  16C:  ADD.S     F0, F0, F2
  170:  SWC1      F0, 0 (S0)
  174:  LB        V0, 210 (S1)
  178:  BNE       V0, S4, .o1B0
  17C:  CVT.D.S   F0, F0
  180:  LIF       F3, 2.0625
  188:  MTC1      R0, F2
  18C:  NOP
  190:  C.LT.D    F0, F2
  194:  NOP
  198:  BC1F      .o1E4
  19C:  MOV.S     F12, F20
  1A0:  LIF       F0, 2.5
  1A8:  BEQ       R0, R0, .o1DC
  1AC:  SW        R0, 14 (S0)
        .o1B0
  1B0:  LIF       F3, 2.3125
  1B8:  MTC1      R0, F2
  1BC:  NOP
  1C0:  C.LT.D    F0, F2
  1C4:  NOP
  1C8:  BC1F      .o1E4
  1CC:  MOV.S     F12, F20
  1D0:  LIF       F0, 5.0
  1D8:  SW        R0, 14 (S0)
        .o1DC
  1DC:  SWC1      F0, 0 (S0)
  1E0:  MOV.S     F12, F20
        .o1E4
  1E4:  LW        A2, 0 (S2)
  1E8:  LW        A3, 0 (S0)
  1EC:  JAL       ~Func:dist2D
  1F0:  MOV.S     F14, F22
  1F4:  MOV.S     F12, F20
  1F8:  MOV.S     F14, F22
  1FC:  LW        A2, 0 (S2)
  200:  LW        A3, 0 (S0)
  204:  JAL       ~Func:atan2
  208:  MOV.S     F20, F0
  20C:  LWC1      F2, 28 (S0)
  210:  C.LE.S    F2, F20
  214:  NOP
  218:  BC1F      .o264
  21C:  MOV.S     F22, F0
  220:  SUB.S     F2, F20, F2
  224:  MFC1      A2, F22
  228:  MFC1      A1, F2
  22C:  JAL       $Function_80218458
  230:  ADDIU     A0, SP, 18
  234:  LWC1      F0, 18 (SP)
  238:  LIF       F3, 1.75
  240:  MTC1      R0, F2
  244:  CVT.D.S   F0, F0
  248:  MUL.D     F0, F0, F2
  24C:  NOP
  250:  LWC1      F2, 14 (S0)
  254:  CVT.D.S   F2, F2
  258:  ADD.D     F2, F2, F0
  25C:  CVT.S.D   F2, F2
  260:  SWC1      F2, 14 (S0)
        .o264
  264:  LWC1      F0, 24 (S0)
  268:  C.LE.S    F0, F20
  26C:  NOP
  270:  BC1F      .o2B0
  274:  NOP
  278:  LWC1      F0, 20 (S0)
  27C:  C.LE.S    F0, F20
  280:  NOP
  284:  BC1F      .o294
  288:  NOP
  28C:  BEQ       R0, R0, .o2A4
  290:  SUB.S     F0, F20, F0
        .o294
  294:  LWC1      F0, 18 (S0)
  298:  LWC1      F2, 1C (S0)
  29C:  ADD.S     F0, F0, F2
  2A0:  SWC1      F0, 18 (S0)
        .o2A4
  2A4:  MFC1      A1, F0
  2A8:  BEQ       R0, R0, .o2FC
  2AC:  NOP
        .o2B0
  2B0:  LWC1      F2, 1C (S0)
  2B4:  LAD       F0, $ConstDouble_80224920
  2BC:  CVT.D.S   F2, F2
  2C0:  MUL.D     F2, F2, F0
  2C4:  NOP
  2C8:  LWC1      F0, 18 (S0)
  2CC:  CVT.D.S   F0, F0
  2D0:  SUB.D     F0, F0, F2
  2D4:  MTC1      R0, F4
  2D8:  MTC1      R0, F5
  2DC:  CVT.S.D   F0, F0
  2E0:  CVT.D.S   F2, F0
  2E4:  C.LT.D    F2, F4
  2E8:  NOP
  2EC:  BC1F      .o2F8
  2F0:  SWC1      F0, 18 (S0)
  2F4:  SW        R0, 18 (S0)
        .o2F8
  2F8:  LW        A1, 18 (S0)
        .o2FC
  2FC:  MFC1      A2, F22
  300:  JAL       $Function_802183C0
  304:  COPY      A0, S2
  308:  LWC1      F0, 18 (S0)
  30C:  LIF       F3, 2.25
  314:  MTC1      R0, F2
  318:  CVT.D.S   F0, F0
  31C:  C.LT.D    F2, F0
  320:  NOP
  324:  BC1F      .o33C
  328:  COPY      A0, S1
  32C:  LIF       F0, 4.0
  334:  NOP
  338:  SWC1      F0, 18 (S0)
        .o33C
  33C:  JAL       ~Func:get_actor_part
  340:  ADDU      A1, S5, S3
  344:  LWC1      F0, 0 (S2)
  348:  COPY      V1, V0
  34C:  SWC1      F0, 2C (V1)
  350:  LWC1      F0, 0 (S0)
  354:  SWC1      F0, 30 (V1)
  358:  LWC1      F0, 4 (S0)
  35C:  SWC1      F0, 34 (V1)
  360:  LB        V0, 210 (S1)
  364:  BNEL      V0, S4, .o384
  368:  SWC1      F24, 4C (V1)
  36C:  LIF       F0, 0.5
  374:  SWC1      F24, 54 (V1)
  378:  SWC1      F0, 4C (V1)
  37C:  BEQ       R0, R0, .o38C
  380:  SWC1      F0, 50 (V1)
        .o384
  384:  SWC1      F24, 50 (V1)
  388:  SWC1      F24, 54 (V1)
        .o38C
  38C:  ADDIU     S3, S3, 1
  390:  LWC1      F22, 0 (S0)
  394:  ADDIU     S0, S0, 30
  398:  LWC1      F20, 0 (S2)
  39C:  SLTI      V0, S3, 8
  3A0:  BNE       V0, R0, .oEC
  3A4:  ADDIU     S2, S2, 30
  3A8:  LI        V0, 2
        .o3AC
  3AC:  LW        RA, 38 (SP)
  3B0:  LW        S5, 34 (SP)
  3B4:  LW        S4, 30 (SP)
  3B8:  LW        S3, 2C (SP)
  3BC:  LW        S2, 28 (SP)
  3C0:  LW        S1, 24 (SP)
  3C4:  LW        S0, 20 (SP)
  3C8:  LDC1      F28, 60 (SP)
  3CC:  LDC1      F26, 58 (SP)
  3D0:  LDC1      F24, 50 (SP)
  3D4:  LDC1      F22, 48 (SP)
  3D8:  LDC1      F20, 40 (SP)
  3DC:  JR        RA
  3E0:  ADDIU     SP, SP, 68
}

#new:Function $Function_802188B0
{
    0:  LUI       A1, C305
    4:  ADDIU     SP, SP, FFC8
    8:  SDC1      F22, 28 (SP)
    C:  LIF       F22, 72.0
   14:  SDC1      F24, 30 (SP)
   18:  LIF       F24, -143.0
   20:  LI        A0, 1
   24:  SDC1      F20, 20 (SP)
   28:  LIF       F20, 0.2980469
   34:  MFC1      A2, F22
   38:  MFC1      A3, F24
   3C:  LA        V0, $End[0]
   44:  SW        RA, 18 (SP)
   48:  SW        V0, 14 (SP)
   4C:  JAL       ~Func:playFX_20
   50:  SWC1      F20, 10 (SP)
   54:  LI        A0, 1
   58:  LUI       A1, 4301
   5C:  MFC1      A2, F22
   60:  MFC1      A3, F24
   64:  LA        V0, $End[4]
   6C:  SWC1      F20, 10 (SP)
   70:  JAL       ~Func:playFX_20
   74:  SW        V0, 14 (SP)
   78:  LW        RA, 18 (SP)
   7C:  LDC1      F24, 30 (SP)
   80:  LDC1      F22, 28 (SP)
   84:  LDC1      F20, 20 (SP)
   88:  LI        V0, 2
   8C:  JR        RA
   90:  ADDIU     SP, SP, 38
}

#new:Function $Function_80218944
{
    0:  LAW       A0, $End[0]
    8:  ADDIU     SP, SP, FFE8
    C:  SW        RA, 10 (SP)
   10:  JAL       ~Func:remove_effect
   14:  NOP
   18:  LAW       A0, $End[4]
   20:  JAL       ~Func:remove_effect
   24:  NOP
   28:  LW        RA, 10 (SP)
   2C:  LI        V0, 2
   30:  JR        RA
   34:  ADDIU     SP, SP, 18
}

PADDING: 8021897C to 80218980 (004E30BC to 004E30C0)
00000000

#new:Function $Function_80218980
{
    0:  LUI       A1, C2B4
    4:  ADDIU     SP, SP, FFC8
    8:  SDC1      F22, 28 (SP)
    C:  LIF       F22, 45.0
   14:  SDC1      F24, 30 (SP)
   18:  LIF       F24, -146.0
   20:  LI        A0, 1
   24:  SDC1      F20, 20 (SP)
   28:  LIF       F20, 0.25
   30:  MFC1      A2, F22
   34:  MFC1      A3, F24
   38:  LA        V0, $End[10]
   40:  SW        RA, 18 (SP)
   44:  SW        V0, 14 (SP)
   48:  JAL       ~Func:playFX_20
   4C:  SWC1      F20, 10 (SP)
   50:  LI        A0, 1
   54:  LUI       A1, 42A0
   58:  MFC1      A2, F22
   5C:  MFC1      A3, F24
   60:  LA        V0, $End[14]
   68:  SWC1      F20, 10 (SP)
   6C:  JAL       ~Func:playFX_20
   70:  SW        V0, 14 (SP)
   74:  LW        RA, 18 (SP)
   78:  LDC1      F24, 30 (SP)
   7C:  LDC1      F22, 28 (SP)
   80:  LDC1      F20, 20 (SP)
   84:  LI        V0, 2
   88:  JR        RA
   8C:  ADDIU     SP, SP, 38
}

#new:Function $Function_80218A10
{
    0:  LAW       A0, $End[10]
    8:  ADDIU     SP, SP, FFE8
    C:  SW        RA, 10 (SP)
   10:  JAL       ~Func:remove_effect
   14:  NOP
   18:  LAW       A0, $End[14]
   20:  JAL       ~Func:remove_effect
   24:  NOP
   28:  LW        RA, 10 (SP)
   2C:  LI        V0, 2
   30:  JR        RA
   34:  ADDIU     SP, SP, 18
}

PADDING: 80218A48 to 80218A50 (004E3188 to 004E3190)
00000000 00000000

#new:Function $Function_80218A50
{
    0:  ADDIU     SP, SP, FFE0
    4:  LA        V0, $End[20]
    C:  LIF       F0, 0.2980469
   18:  LUI       A1, C2DC
   1C:  LUI       A2, 42A0
   20:  LUI       A3, C312
   24:  ADDIU     A0, R0, 1
   28:  SW        RA, 18 (SP)
   2C:  SW        V0, 14 (SP)
   30:  JAL       ~Func:playFX_20
   34:  SWC1      F0, 10 (SP)
   38:  LW        RA, 18 (SP)
   3C:  LI        V0, 2
   40:  JR        RA
   44:  ADDIU     SP, SP, 20
}

#new:Function $Function_80218A98
{
    0:  LAW       A0, $End[20]
    8:  ADDIU     SP, SP, FFE8
    C:  SW        RA, 10 (SP)
   10:  JAL       ~Func:remove_effect
   14:  NOP
   18:  LW        RA, 10 (SP)
   1C:  LI        V0, 2
   20:  JR        RA
   24:  ADDIU     SP, SP, 18
}

#new:Function $Function_80218AC0
{
    0:  ADDIU     SP, SP, FFE0
    4:  LA        V0, $End[30]
    C:  LIF       F0, 0.2980469
   18:  LUI       A1, 42DC
   1C:  LUI       A2, 42A0
   20:  LUI       A3, C312
   24:  ADDIU     A0, R0, 1
   28:  SW        RA, 18 (SP)
   2C:  SW        V0, 14 (SP)
   30:  JAL       ~Func:playFX_20
   34:  SWC1      F0, 10 (SP)
   38:  LW        RA, 18 (SP)
   3C:  LI        V0, 2
   40:  JR        RA
   44:  ADDIU     SP, SP, 20
}

#new:Function $Function_80218B08
{
    0:  LAW       A0, $End[30]
    8:  ADDIU     SP, SP, FFE8
    C:  SW        RA, 10 (SP)
   10:  JAL       ~Func:remove_effect
   14:  NOP
   18:  LW        RA, 10 (SP)
   1C:  LI        V0, 2
   20:  JR        RA
   24:  ADDIU     SP, SP, 18
}

#new:Function $Function_80218B30
{
    0:  ADDIU     SP, SP, FFE0
    4:  LA        V0, $End[40]
    C:  LIF       F0, 0.2980469
   18:  LUI       A1, C2DC
   1C:  LUI       A2, 42A0
   20:  LUI       A3, C312
   24:  ADDIU     A0, R0, 1
   28:  SW        RA, 18 (SP)
   2C:  SW        V0, 14 (SP)
   30:  JAL       ~Func:playFX_20
   34:  SWC1      F0, 10 (SP)
   38:  LW        RA, 18 (SP)
   3C:  LI        V0, 2
   40:  JR        RA
   44:  ADDIU     SP, SP, 20
}

#new:Function $Function_80218B78
{
    0:  LAW       A0, $End[40]
    8:  ADDIU     SP, SP, FFE8
    C:  SW        RA, 10 (SP)
   10:  JAL       ~Func:remove_effect
   14:  NOP
   18:  LW        RA, 10 (SP)
   1C:  LI        V0, 2
   20:  JR        RA
   24:  ADDIU     SP, SP, 18
}

#new:Function $Function_80218BA0
{
    0:  ADDIU     SP, SP, FFE0
    4:  LA        V0, $End[50]
    C:  LI        A0, 1
   10:  LIF       F0, 0.2980469
   1C:  LUI       A2, 4290
   20:  LUI       A3, C312
   24:  CLEAR     A1
   28:  SW        RA, 18 (SP)
   2C:  SW        V0, 14 (SP)
   30:  JAL       ~Func:playFX_20
   34:  SWC1      F0, 10 (SP)
   38:  LW        RA, 18 (SP)
   3C:  LI        V0, 2
   40:  JR        RA
   44:  ADDIU     SP, SP, 20
}

#new:Function $Function_80218BE8
{
    0:  LAW       A0, $End[50]
    8:  ADDIU     SP, SP, FFE8
    C:  SW        RA, 10 (SP)
   10:  JAL       ~Func:remove_effect
   14:  NOP
   18:  LW        RA, 10 (SP)
   1C:  LI        V0, 2
   20:  JR        RA
   24:  ADDIU     SP, SP, 18
}

#new:DefenseTable $DefenseTable_80218C10
{
	.Element:Normal 00000000
	.Element:End
}

#new:StatusTable $StatusTable_80218C1C
{
	.Status:Normal      0`
	.Status:Default     0`
	.Status:Sleep      80`
	.Status:Poison      0`
	.Status:Frozen      0`
	.Status:Dizzy      90`
	.Status:Fear        0`
	.Status:Static      0`
	.Status:Paralyze  100`
	.Status:Shrink     90`
	.Status:Stop       90`
	.Status:DefaultTurnMod    0`
	.Status:SleepTurnMod      0`
	.Status:PoisonTurnMod     0`
	.Status:FrozenTurnMod     0`
	.Status:DizzyTurnMod      0`
	.Status:FearTurnMod       0`
	.Status:StaticTurnMod     0`
	.Status:ParalyzeTurnMod   0`
	.Status:ShrinkTurnMod     0`
	.Status:StopTurnMod       0`
	.Status:End
}

#new:PartsTable $PartsTable_80218CC8
{
	00020000 01000000 001400FF $IdleAnimations_80218DC8 $DefenseTable_80218C10 00200010 00000000 00000000 00000000
	00800001 02000000 004800FF 00000000 $DefenseTable_80218C10 00200010 00000000 00F80000 00000000
	00020001 03000000 003600FF 00000000 $DefenseTable_80218C10 00200010 00000000 00F80000 00000000
	00020001 04000000 002400FF 00000000 $DefenseTable_80218C10 00200010 00000000 00F80000 00000000
	00020001 05000000 001000FF 00000000 $DefenseTable_80218C10 00200010 00000000 00F80000 00000000
	00120001 06000000 000000FF $IdleAnimations_80218EB8 $DefenseTable_80218C10 00200010 00000000 00000000 00000000
}

#new:Actor $PokeyMummy
{
	% stats
	[Index]        15b
	[Level]        10`b
	[MaxHP]         4`b
	[Coins]         1`b
	[Flags]       00000000
	[StatusTable] $StatusTable_80218C1C
	% ai
	[PartsCount]    6`s
	[PartsTable]  $PartsTable_80218CC8
	[Script]      $Script_Init_80218EC4
	% move effectiveness
	[Escape]       60`b
	[Item]         60`b
	[AirLift]      90`b
	[Hurricane]    85`b % Bow's "Spook" as well
	[UpAndAway]    95`b
	[PowerBounce]  95`b
	[SpinSmash]     0`b % weight (0-4)
	% ui positions
	[Size]         24`b  80`b % width height
	[HealthBar]     0`b   0`b % dx dy
	[StatusTurn]  -15`b  75`b % dx dy
	[StatusIcon]   10`b  65`b % dx dy
}

#new:IdleAnimations $IdleAnimations_80218DC8
{
	.Status:Normal    00310104
	.Status:Stone     00310100
	.Status:Sleep     00310125
	.Status:Stop      00310100
	.Status:Paralyze  00310100
	.Status:Dizzy     00310121
	.Status:Fear      00310121
	.Status:End
}

#new:IdleAnimations $IdleAnimations_80218E04
{
	.Status:Normal    00310105
	.Status:Stone     00310101
	.Status:Sleep     00310126
	.Status:Stop      00310101
	.Status:Paralyze  00310101
	.Status:Dizzy     00310122
	.Status:Fear      00310122
	.Status:End
}

#new:IdleAnimations $IdleAnimations_80218E40
{
	.Status:Normal    00310106
	.Status:Stone     00310102
	.Status:Sleep     00310127
	.Status:Stop      00310102
	.Status:Paralyze  00310102
	.Status:Dizzy     00310123
	.Status:Fear      00310123
	.Status:End
}

#new:IdleAnimations $IdleAnimations_80218E7C
{
	.Status:Normal    00310107
	.Status:Stone     00310103
	.Status:Sleep     00310128
	.Status:Stop      00310103
	.Status:Paralyze  00310103
	.Status:Dizzy     00310124
	.Status:Fear      00310124
	.Status:End
}

#new:IdleAnimations $IdleAnimations_80218EB8
{
	.Status:Normal    00310116
	.Status:End
}

#new:Script $Script_Init_80218EC4
{
    0:  Call  BindTakeTurn  ( .Actor:Self $Script_TakeTurn_80219D88 )
   14:  Call  BindIdle      ( .Actor:Self $Script_Idle_80219040 )
   28:  Call  BindHandleEvent   ( .Actor:Self $Script_HandleEvent_80219050 )
   3C:  Call  SetActorVar   ( .Actor:Self 0000000A 00000000 )
   54:  Call  GetActorVar   ( .Actor:Self 00000001 *Var0 )
   6C:  Call  SetActorVar   ( .Actor:Self 00000009 *Var0 )
   84:  Call  SetActorVar   ( .Actor:Self 00000000 00000000 )
   9C:  Call  SetActorVar   ( .Actor:Self 00000001 00310104 )
   B4:  Call  SetActorVar   ( .Actor:Self 00000002 00310108 )
   CC:  Call  SetActorVar   ( .Actor:Self 00000003 0031010C )
   E4:  Call  SetActorVar   ( .Actor:Self 00000004 00310110 )
   FC:  Call  SetActorVar   ( .Actor:Self 00000005 00310111 )
  114:  Call  SetActorVar   ( .Actor:Self 00000006 00310118 )
  12C:  Call  SetActorVar   ( .Actor:Self 00000007 00310119 )
  144:  Call  EnableIdleScript  ( .Actor:Self 00000001 )
  158:  Call  UseIdleAnimation  ( .Actor:Self .True )
  16C:  Return
  174:  End
}

#new:Script $Script_Idle_80219040
{
    0:  Return
    8:  End
}

#new:Script $Script_HandleEvent_80219050
{
    0:  Call  UseIdleAnimation  ( .Actor:Self .False )
   14:  Call  EnableIdleScript  ( .Actor:Self 00000000 )
   28:  Call  GetLastEvent      ( .Actor:Self *Var0 )
   3C:  Switch  *Var0
   48:  	Case  ==  .Event:HitCombo % 9
   54:  		SetConst  *Var0  00000001
   64:  		Call  GetActorVar   ( .Actor:Self 00000003 *Var1 )
   7C:  		ExecWait  DoNormalHit
   88:  	Case  ==  .Event:Hit % A
   94:  		Call  GetStatusFlags    ( .Actor:Self *Var0 )
   A8:  		If  *Var0  &  ~Flags:StatusFlags:Shrink % 80000
   B8:  			SetConst  *Var0  00000001
   C8:  			Call  GetActorVar   ( .Actor:Self 00000003 *Var1 )
   E0:  			ExecWait  DoNormalHit
   EC:  		Else
   F4:  			Call  GetActorVar   ( .Actor:Self 00000000 *VarA )
  10C:  			If  *VarA  ==  00000003
  11C:  				SetConst  *Var0  00000001
  12C:  				Call  GetActorVar   ( .Actor:Self 00000003 *Var1 )
  144:  				ExecWait  DoNormalHit
  150:  			Else
  158:  				Call  80269E80  ( *Var0 )
  168:  				Switch  *Var0
  174:  					CaseOR  ==  00000006
  180:  					CaseOR  ==  00000007
  18C:  					CaseOR  ==  00000009
  198:  						ExecWait  $Script_8021BDE4
  1A4:  					EndCaseGroup
  1AC:  					Default
  1B4:  						SetConst  *Var0  00000001
  1C4:  						Call  GetActorVar   ( .Actor:Self 00000003 *Var1 )
  1DC:  						ExecWait  DoNormalHit
  1E8:  				EndSwitch
  1F0:  			EndIf
  1F8:  		EndIf
  200:  	Case  ==  .Event:Death % 20
  20C:  		Call  GetStatusFlags    ( .Actor:Self *Var0 )
  220:  		If  *Var0  &  ~Flags:StatusFlags:Shrink % 80000
  230:  			SetConst  *Var0  00000001
  240:  			Call  GetActorVar   ( .Actor:Self 00000003 *Var1 )
  258:  			ExecWait  DoNormalHit
  264:  			Wait  10`
  270:  		Else
  278:  			Call  GetActorVar   ( .Actor:Self 00000000 *VarA )
  290:  			If  *VarA  ==  00000003
  2A0:  				SetConst  *Var0  00000001
  2B0:  				Call  GetActorVar   ( .Actor:Self 00000003 *Var1 )
  2C8:  				ExecWait  DoNormalHit
  2D4:  				Wait  10`
  2E0:  			Else
  2E8:  				Call  80269E80  ( *Var0 )
  2F8:  				Switch  *Var0
  304:  					CaseOR  ==  00000006
  310:  					CaseOR  ==  00000007
  31C:  					CaseOR  ==  00000009
  328:  						ExecWait  $Script_8021BDE4
  334:  					EndCaseGroup
  33C:  					Default
  344:  						SetConst  *Var0  00000001
  354:  						Call  GetActorVar   ( .Actor:Self 00000003 *Var1 )
  36C:  						ExecWait  DoNormalHit
  378:  						Wait  10`
  384:  				EndSwitch
  38C:  			EndIf
  394:  		EndIf
  39C:  		SetConst  *Var0  00000001
  3AC:  		Call  GetActorVar   ( .Actor:Self 00000003 *Var1 )
  3C4:  		ExecWait  DoDeath
  3D0:  		Return
  3D8:  	Case  ==  .Event:BurnHit % E
  3E4:  		Call  GetActorVar       ( .Actor:Self 00000006 *Var1 )
  3FC:  		Call  GetActorVar       ( .Actor:Self 00000007 *Var2 )
  414:  		SetConst  *Var0  00000001
  424:  		Call  GetStatusFlags    ( .Actor:Self *Var3 )
  438:  		If  *Var3  &  ~Flags:StatusFlags:Shrink % 80000
  448:  			ExecWait  DoBurnHit
  454:  		Else
  45C:  			Call  GetActorVar   ( .Actor:Self 00000000 *VarA )
  474:  			If  *VarA  ==  00000003
  484:  				ExecWait  DoBurnHit
  490:  			Else
  498:  				Call  80269E80  ( *VarA )
  4A8:  				Switch  *VarA
  4B4:  					CaseOR  ==  00000006
  4C0:  					CaseOR  ==  00000007
  4CC:  					CaseOR  ==  00000009
  4D8:  						ExecWait  $Script_8021BDE4
  4E4:  					EndCaseGroup
  4EC:  					Default
  4F4:  						ExecWait  DoBurnHit
  500:  				EndSwitch
  508:  			EndIf
  510:  		EndIf
  518:  	CaseOR  ==  .Event:BurnDeath % 24
  524:  		Call  GetActorVar       ( .Actor:Self 00000006 *Var1 )
  53C:  		Call  GetActorVar       ( .Actor:Self 00000007 *Var2 )
  554:  		SetConst  *Var0  00000001
  564:  		Call  GetStatusFlags    ( .Actor:Self *Var3 )
  578:  		If  *Var3  &  ~Flags:StatusFlags:Shrink % 80000
  588:  			ExecWait  DoBurnHit
  594:  		Else
  59C:  			Call  GetActorVar   ( .Actor:Self 00000000 *VarA )
  5B4:  			If  *VarA  ==  00000003
  5C4:  				ExecWait  DoBurnHit
  5D0:  			Else
  5D8:  				Call  80269E80  ( *VarA )
  5E8:  				Switch  *VarA
  5F4:  					CaseOR  ==  00000006
  600:  					CaseOR  ==  00000007
  60C:  					CaseOR  ==  00000009
  618:  						ExecWait  $Script_8021BDE4
  624:  					EndCaseGroup
  62C:  					Default
  634:  						ExecWait  DoBurnHit
  640:  				EndSwitch
  648:  			EndIf
  650:  		EndIf
  658:  		SetConst  *Var0  00000001
  668:  		Call  GetActorVar   ( .Actor:Self 00000007 *Var1 )
  680:  		ExecWait  DoDeath
  68C:  		Return
  694:  	Case  ==  .Event:SpinSmashHit % B
  6A0:  		ExecWait  $Script_8021B088
  6AC:  	Case  ==  .Event:SpinSmashDeath % 21
  6B8:  		ExecWait  $Script_8021B088
  6C4:  		SetConst  *Var0  00000001
  6D4:  		Call  GetActorVar   ( .Actor:Self 00000003 *Var1 )
  6EC:  		ExecWait  DoDeath
  6F8:  		Return
  700:  	Case  ==  .Event:SpinSmashLaunchHit % 11
  70C:  		Call  GetStatusFlags    ( .Actor:Self *Var3 )
  720:  		If  *Var3  &  ~Flags:StatusFlags:Shrink % 80000
  730:  			SetConst  *Var0  00000001
  740:  			Call  GetActorVar   ( .Actor:Self 00000003 *Var1 )
  758:  			ExecWait  DoNormalHit
  764:  		Else
  76C:  			ExecWait  $Script_8021BDE4
  778:  		EndIf
  780:  	Case  ==  00000025 % 25
  78C:  		Call  GetStatusFlags    ( .Actor:Self *Var3 )
  7A0:  		If  *Var3  &  ~Flags:StatusFlags:Shrink % 80000
  7B0:  			SetConst  *Var0  00000001
  7C0:  			Call  GetActorVar   ( .Actor:Self 00000003 *Var1 )
  7D8:  			ExecWait  DoNormalHit
  7E4:  		Else
  7EC:  			ExecWait  $Script_8021BDE4
  7F8:  		EndIf
  800:  		SetConst  *Var0  00000001
  810:  		SetConst  *Var1  FFFFFFFF
  820:  		ExecWait  DoDeath
  82C:  		Return
  834:  	Case  ==  .Event:ShockHit % 2F
  840:  		Call  SetActorRotation      ( .Actor:Self 00000000 00000000 00000000 )
  85C:  		SetConst  *Var0  00000001
  86C:  		Call  GetActorVar   ( .Actor:Self 00000003 *Var1 )
  884:  		ExecWait  DoShockHit
  890:  		Call  GetActorVar   ( .Actor:Self 00000002 *Var1 )
  8A8:  		Call  SetAnimation  ( .Actor:Self 00000001 *Var1 )
  8C0:  		Call  SetGoalToHome ( .Actor:Self )
  8D0:  		Call  GetGoalPos    ( .Actor:Self *Var0 *Var1 *Var2 )
  8EC:  		Call  SetActorSpeed ( .Actor:Self *Fixed[4.0] )
  900:  		Call  SetActorJumpGravity   ( .Actor:Self *Fixed[2.0] )
  914:  		ExecWait  8029C12C
  920:  	Case  ==  .Event:ShockDeath % 26
  92C:  		Call  SetActorRotation  ( .Actor:Self 00000000 00000000 00000000 )
  948:  		SetConst  *Var0  00000001
  958:  		Call  GetActorVar       ( .Actor:Self 00000003 *Var1 )
  970:  		ExecWait  DoShockHit
  97C:  		SetConst  *Var0  00000001
  98C:  		Call  GetActorVar       ( .Actor:Self 00000003 *Var1 )
  9A4:  		ExecWait  DoDeath
  9B0:  		Return
  9B8:  	CaseOR  ==  00000017 % 17
  9C4:  	CaseOR  ==  .Event:Immune % 19
  9D0:  		SetConst  *Var0  00000001
  9E0:  		Call  GetActorVar   ( .Actor:Self 00000001 *Var1 )
  9F8:  		ExecWait  DoImmune
  A04:  	EndCaseGroup
  A0C:  	Case  ==  .Event:SpikeTaunt % 1B
  A18:  		Call  GetBattleFlags    ( *Var0 )
  A28:  		If  *Var0  !&  00080000
  A38:  			Call  AfflictActor  ( .Actor:Player .Status:Poison 00000003 )
  A50:  		EndIf
  A58:  		Call  GetActorVar   ( .Actor:Self 00000000 *Var0 )
  A70:  		Switch  *Var0
  A7C:  			Case  ==  00000000
  A88:  				Set   *Var0  00000000
  A98:  				Set   *Var1  0000004D
  AA8:  				SetConst  *Var2  00310121
  AB8:  			Case  ==  00000001
  AC4:  				Set   *Var0  00000000
  AD4:  				Set   *Var1  0000003B
  AE4:  				SetConst  *Var2  00310122
  AF4:  			Case  ==  00000002
  B00:  				Set   *Var0  00000000
  B10:  				Set   *Var1  00000029
  B20:  				SetConst  *Var2  00310123
  B30:  			Case  ==  00000003
  B3C:  				Set   *Var0  00000000
  B4C:  				Set   *Var1  00000017
  B5C:  				SetConst  *Var2  00310124
  B6C:  		EndSwitch
  B74:  		Call  GetStatusFlags    ( .Actor:Self *Var3 )
  B88:  		If  *Var3  !&  ~Flags:StatusFlags:Sleep % 1000
  B98:  			Call  SetAnimation  ( .Actor:Self 00000001 *Var2 )
  BB0:  		EndIf
  BB8:  		Call  GetActorPos       ( .Actor:Self *Var3 *Var4 *Var5 )
  BD4:  		Call  GetStatusFlags    ( .Actor:Self *Var6 )
  BE8:  		If  *Var6  &  ~Flags:StatusFlags:Shrink % 80000
  BF8:  			MulF  *Var0  *Fixed[0.4]
  C08:  			MulF  *Var1  *Fixed[0.4]
  C18:  		EndIf
  C20:  		AddF  *Var3  *Var0
  C30:  		AddF  *Var4  *Var1
  C40:  		Call  PlayEffect    ( ~FX:LensFlare:Rotating *Var3 *Var4 *Var5 00000014 00000000 00000000 00000000 00000000 00000000 00000000 00000000 00000000 )
  C84:  		Wait  30`
  C90:  	Case  ==  .Event:RecoverStatus % 31
  C9C:  		SetConst  *Var0  00000001
  CAC:  		Call  GetActorVar   ( .Actor:Self 00000001 *Var1 )
  CC4:  		ExecWait  DoRecover
  CD0:  	Case  ==  .Event:ScareAway % 39
  CDC:  		ExecWait  $Script_8021C2BC
  CE8:  		Return
  CF0:  	Default
  CF8:  EndSwitch
  D00:  Call  EnableIdleScript  ( .Actor:Self 00000001 )
  D14:  Call  UseIdleAnimation  ( .Actor:Self .True )
  D28:  Return
  D30:  End
}

#new:Script $Script_TakeTurn_80219D88
{
    0:  Call  GetActorVar   ( .Actor:Self 00000000 *VarA )
   18:  If  *VarA  ==  00000003
   28:  	ExecWait  $Script_8021A6C8
   34:  	Return
   3C:  EndIf
   44:  Call  UseIdleAnimation  ( .Actor:Self .False )
   58:  Call  EnableIdleScript  ( .Actor:Self 00000000 )
   6C:  Call  GetBattlePhase    ( *Var0 )
   7C:  If  *Var0  ==  00000001
   8C:  	Call  UseBattleCamPreset    ( 00000002 )
   9C:  	Call  MoveBattleCamOver     (  1` )
   AC:  EndIf
   B4:  Call  SetPartSounds     ( .Actor:Self 00000006 .ActorSound:Jump 00000000 00000000 )
   D4:  Call  GetStatusFlags    ( .Actor:Self *Var0 )
   E8:  If  *Var0  !&  ~Flags:StatusFlags:Shrink % 80000
   F8:  	Call  SetPartScale  ( .Actor:Self 00000006 *Fixed[1.0] *Fixed[1.0] *Fixed[1.0] )
  118:  Else
  120:  	Call  SetPartScale  ( .Actor:Self 00000006 *Fixed[0.4] *Fixed[0.4] *Fixed[1.0] )
  140:  EndIf
  148:  ChildThread
  150:  	Call  SetPartFlagBits   ( .Actor:Self 00000006 00000001 .False )
  16C:  	Call  GetActorPos       ( .Actor:Self *Var0 *Var1 *Var2 )
  188:  	Call  SetPartPos        ( .Actor:Self 00000006 *Var0 *Var1 *Var2 )
  1A8:  	Call  SetPartJumpGravity    ( .Actor:Self 00000006 *Fixed[2.2] )
  1C0:  	Call  SetAnimation      ( .Actor:Self 00000006 00310116 )
  1D8:  	Call  GetStatusFlags    ( .Actor:Self *Var5 )
  1EC:  	Call  GetActorVar       ( .Actor:Self 00000000 *VarA )
  204:  	Switch  *VarA
  210:  		Case  ==  00000000
  21C:  			If  *Var5  !&  ~Flags:StatusFlags:Shrink % 80000
  22C:  				Add   *Var1  00000026
  23C:  			Else
  244:  				Add   *Var1  0000000F
  254:  				Call  SetPartJumpGravity    ( .Actor:Self 00000006 *Fixed[1.2] )
  26C:  			EndIf
  274:  			Call  JumpPartTo    ( .Actor:Self 00000006 *Var0 *Var1 *Var2  15` .True )
  29C:  		Case  ==  00000001
  2A8:  			If  *Var5  !&  ~Flags:StatusFlags:Shrink % 80000
  2B8:  				Add   *Var1  00000014
  2C8:  			Else
  2D0:  				Add   *Var1  00000008
  2E0:  				Call  SetPartJumpGravity    ( .Actor:Self 00000006 *Fixed[1.2] )
  2F8:  			EndIf
  300:  			Call  JumpPartTo    ( .Actor:Self 00000006 *Var0 *Var1 *Var2  15` .True )
  328:  		Case  ==  00000002
  334:  			If  *Var5  !&  ~Flags:StatusFlags:Shrink % 80000
  344:  				Add   *Var1  00000008
  354:  			Else
  35C:  				Add   *Var1  00000003
  36C:  				Call  SetPartJumpGravity    ( .Actor:Self 00000006 *Fixed[1.2] )
  384:  			EndIf
  38C:  			Call  JumpPartTo    ( .Actor:Self 00000006 *Var0 *Var1 *Var2  15` .True )
  3B4:  		Case  ==  00000003
  3C0:  	EndSwitch
  3C8:  EndChildThread
  3D0:  Call  PlaySoundAtActor  ( .Actor:Self 00000342 )
  3E4:  Call  GetActorVar       ( .Actor:Self 00000004 *Var1 )
  3FC:  Call  SetAnimation      ( .Actor:Self 00000001 *Var1 )
  414:  Wait  12`
  420:  Call  GetActorVar       ( .Actor:Self 00000005 *Var1 )
  438:  Call  SetAnimation      ( .Actor:Self 00000001 *Var1 )
  450:  Wait  1`
  45C:  Call  PlaySoundAtActor  ( .Actor:Self 000002CE )
  470:  Wait  3`
  47C:  ExecWait  $Script_8021B1B4
  488:  Call  SetTargetActor    ( .Actor:Self .Actor:Player )
  49C:  Call  EnemyTestTarget   ( .Actor:Self *Var0 ~Flags:DamageType:NoContact 00000000 00000002 00000020 )
  4C0:  Switch  *Var0
  4CC:  	CaseOR  ==  .HitResult:Miss % 6
  4D8:  	CaseOR  ==  .HitResult:Lucky % 5
  4E4:  		If  *Var0  ==  .HitResult:Lucky % 5
  4F4:  			ChildThread
  4FC:  				Wait  5`
  508:  				Call  EnemyTestTarget   ( .Actor:Self *Var0 ~Flags:DamageType:TriggerLucky 00000000 00000000 00000000 )
  52C:  			EndChildThread
  534:  		EndIf
  53C:  		Call  SetTargetActor    ( .Actor:Self .Actor:Player )
  550:  		Call  SetGoalToTarget   ( .Actor:Self )
  560:  		Call  GetGoalPos        ( .Actor:Self *Var0 *Var1 *Var2 )
  57C:  		Sub   *Var0  00000050
  58C:  		Sub   *Var1  00000005
  59C:  		Call  SetPartMoveSpeed  ( .Actor:Self 00000006 *Fixed[20.0] )
  5B4:  		Call  SetPartJumpGravity    ( .Actor:Self 00000006 *Fixed[0.1] )
  5CC:  		Call  SetAnimation      ( .Actor:Self 00000006 00310116 )
  5E4:  		Call  JumpPartTo        ( .Actor:Self 00000006 *Var0 *Var1 *Var2  0` .True )
  60C:  		Call  SetPartFlagBits   ( .Actor:Self 00000006 00000001 .True )
  628:  		Call  GetActorVar       ( .Actor:Self 00000002 *Var1 )
  640:  		Call  SetAnimation      ( .Actor:Self 00000001 *Var1 )
  658:  		Return
  660:  	EndCaseGroup
  668:  EndSwitch
  670:  Call  SetTargetActor    ( .Actor:Self .Actor:Player )
  684:  Call  SetGoalToTarget   ( .Actor:Self )
  694:  Call  GetGoalPos        ( .Actor:Self *Var0 *Var1 *Var2 )
  6B0:  Call  SetPartMoveSpeed  ( .Actor:Self 00000006 *Fixed[20.0] )
  6C8:  Call  SetPartJumpGravity    ( .Actor:Self 00000006 *Fixed[0.1] )
  6E0:  Call  SetAnimation      ( .Actor:Self 00000006 00310116 )
  6F8:  Call  JumpPartTo        ( .Actor:Self 00000006 *Var0 *Var1 *Var2  0` .True )
  720:  Call  EnemyDamageTarget ( .Actor:Self *Var0 ~Flags:DamageType:NoContact 00000000 ~DebuffType:Poison:3:40` 00000002 00000020 )
  748:  Call  GetActorVar       ( .Actor:Self 00000002 *Var1 )
  760:  Call  SetAnimation      ( .Actor:Self 00000001 *Var1 )
  778:  Switch  *Var0
  784:  	CaseOR  ==  .HitResult:Hit % 0
  790:  	CaseOR  ==  .HitResult:QuakeImmune % 2
  79C:  		Call  GetActorPos       ( .Actor:Player *Var0 *Var1 *Var2 )
  7B8:  		Sub   *Var0  00000037
  7C8:  		Set   *Var1  00000000
  7D8:  		Call  SetPartMoveSpeed  ( .Actor:Self 00000006 *Fixed[6.0] )
  7F0:  		Call  SetPartJumpGravity    ( .Actor:Self 00000006 *Fixed[0.1] )
  808:  		Call  FlyPartTo ( .Actor:Self 00000006 *Var0 *Var1 *Var2  0`  25` .Easing:Linear )
  834:  		Call  SetPartMoveSpeed  ( .Actor:Self 00000006 *Fixed[4.0] )
  84C:  		Sub   *Var0  00000018
  85C:  		Call  FlyPartTo ( .Actor:Self 00000006 *Var0 *Var1 *Var2  0`  21` .Easing:Linear )
  888:  		Call  SetPartMoveSpeed  ( .Actor:Self 00000006 *Fixed[3.0] )
  8A0:  		Sub   *Var0  00000014
  8B0:  		Call  FlyPartTo ( .Actor:Self 00000006 *Var0 *Var1 *Var2  0`  20` .Easing:Linear )
  8DC:  		Call  SetPartFlagBits   ( .Actor:Self 00000006 00000001 .True )
  8F8:  	EndCaseGroup
  900:  EndSwitch
  908:  Call  EnableIdleScript  ( .Actor:Self 00000001 )
  91C:  Call  UseIdleAnimation  ( .Actor:Self .True )
  930:  Return
  938:  End
}

#new:Script $Script_8021A6C8
{
    0:  Call  UseIdleAnimation  ( .Actor:Self .False )
   14:  Call  EnableIdleScript  ( .Actor:Self 00000000 )
   28:  Call  SetActorSounds    ( .Actor:Self .ActorSound:Walk 000002EC 000002EC )
   44:  Call  SetActorSounds    ( .Actor:Self .ActorSound:Jump 000002EC 00000000 )
   60:  Call  UseBattleCamPreset    ( 0000003F )
   70:  Call  BattleCamTargetActor  ( .Actor:Self )
   80:  Call  8024ECF8  ( FFFFFFFF 00000001 00000000 )
   98:  Call  SetTargetActor    ( .Actor:Self .Actor:Player )
   AC:  Call  SetGoalToTarget   ( .Actor:Self )
   BC:  Call  GetGoalPos        ( .Actor:Self *Var0 *Var1 *Var2 )
   D8:  Add   *Var0  00000032
   E8:  Set   *Var1  00000000
   F8:  Call  SetActorJumpGravity   ( .Actor:Self *Fixed[1.8] )
  10C:  Call  SetAnimation      ( .Actor:Self 00000001 0031010B )
  124:  Call  SetActorSpeed     ( .Actor:Self *Fixed[4.0] )
  138:  Call  SetActorJumpGravity   ( .Actor:Self *Fixed[2.0] )
  14C:  ExecWait  8029C12C
  158:  Call  SetAnimation      ( .Actor:Self 00000001 00310107 )
  170:  Wait  4`
  17C:  Call  SetActorDispOffset    ( .Actor:Self 00000000 FFFFFFFF 00000000 )
  198:  Wait  1`
  1A4:  Call  SetActorDispOffset    ( .Actor:Self 00000000 FFFFFFFE 00000000 )
  1C0:  Wait  4`
  1CC:  Call  SetActorDispOffset    ( .Actor:Self 00000000 00000000 00000000 )
  1E8:  Call  SetAnimation      ( .Actor:Self 00000001 0031010B )
  200:  Call  EnemyTestTarget   ( .Actor:Self *Var0 ~Flags:DamageType:0 00000000 00000002 00000010 )
  224:  Switch  *Var0
  230:  	CaseOR  ==  .HitResult:Miss % 6
  23C:  	CaseOR  ==  .HitResult:Lucky % 5
  248:  		Set   *VarA  *Var0
  258:  		Call  SetGoalToTarget   ( .Actor:Self )
  268:  		Call  GetGoalPos        ( .Actor:Self *Var0 *Var1 *Var2 )
  284:  		Sub   *Var0  00000005
  294:  		Set   *Var1  0000000A
  2A4:  		Call  SetGoalPos        ( .Actor:Self *Var0 *Var1 *Var2 )
  2C0:  		Call  SetActorJumpGravity   ( .Actor:Self *Fixed[1.1] )
  2D4:  		ChildThread
  2DC:  			Wait  2`
  2E8:  			Set   *Var0  00000000
  2F8:  			Loop  00000005
  304:  				Add   *Var0  0000001E
  314:  				Call  SetActorRotation  ( .Actor:Self 00000000 00000000 *Var0 )
  330:  				Wait  1`
  33C:  			EndLoop
  344:  		EndChildThread
  34C:  		Call  JumpToGoal    ( .Actor:Self  22` .False .True .False )
  36C:  		If  *VarA  ==  .HitResult:Lucky % 5
  37C:  			Call  EnemyTestTarget   ( .Actor:Self *Var0 ~Flags:DamageType:TriggerLucky 00000000 00000000 00000000 )
  3A0:  		EndIf
  3A8:  		Call  SetActorRotationOffset    ( .Actor:Self 00000000 0000000A 00000000 )
  3C4:  		ChildThread
  3CC:  			Wait  2`
  3D8:  			Set   *Var0  000000B4
  3E8:  			Loop  00000006
  3F4:  				Add   *Var0  0000001E
  404:  				If  *Var0  ==  00000168
  414:  					Set   *Var0  00000000
  424:  				EndIf
  42C:  				Call  SetActorRotation  ( .Actor:Self 00000000 00000000 *Var0 )
  448:  				Wait  1`
  454:  			EndLoop
  45C:  			Call  SetActorRotationOffset    ( .Actor:Self 00000000 00000000 00000000 )
  478:  		EndChildThread
  480:  		Call  SetActorJumpGravity   ( .Actor:Self *Fixed[2.0] )
  494:  		Call  GetActorPos   ( .Actor:Self *Var0 *Var1 *Var2 )
  4B0:  		Sub   *Var0  0000001E
  4C0:  		Set   *Var1  00000000
  4D0:  		Call  SetGoalPos    ( .Actor:Self *Var0 *Var1 *Var2 )
  4EC:  		Call  JumpToGoal    ( .Actor:Self  6` .False .True .False )
  50C:  		Wait  15`
  518:  		Call  UseBattleCamPreset    ( 00000002 )
  528:  		Call  YieldTurn ( )
  534:  		Call  AddActorDecoration    ( .Actor:Self 00000001 00000000 .Decoration:Sweat )
  550:  		Call  SetGoalToHome ( .Actor:Self )
  560:  		Call  GetGoalPos    ( .Actor:Self *Var0 *Var1 *Var2 )
  57C:  		Call  SetActorSpeed ( .Actor:Self *Fixed[4.0] )
  590:  		Call  SetAnimation  ( .Actor:Self 00000001 0031010B )
  5A8:  		Call  SetActorJumpGravity   ( .Actor:Self *Fixed[2.0] )
  5BC:  		ExecWait  8029C12C
  5C8:  		Call  RemoveActorDecoration ( .Actor:Self 00000001 00000000 )
  5E0:  		Call  SetAnimation  ( .Actor:Self 00000001 00310107 )
  5F8:  		Return
  600:  	EndCaseGroup
  608:  EndSwitch
  610:  Call  SetGoalToTarget       ( .Actor:Self )
  620:  Call  SetActorJumpGravity   ( .Actor:Self *Fixed[1.1] )
  634:  ChildThread
  63C:  	Wait  2`
  648:  	Set   *Var0  00000000
  658:  	Loop  00000005
  664:  		Add   *Var0  0000001E
  674:  		Call  SetActorRotation  ( .Actor:Self 00000000 00000000 *Var0 )
  690:  		Wait  1`
  69C:  	EndLoop
  6A4:  EndChildThread
  6AC:  Call  JumpToGoal        ( .Actor:Self  18` .False .True .False )
  6CC:  Wait  2`
  6D8:  Call  EnemyDamageTarget ( .Actor:Self *Var0 ~Flags:DamageType:0 00000000 ~DebuffType:Poison:3:100` 00000002 00000020 )
  700:  Call  SetAnimation      ( .Actor:Self 00000001 00310107 )
  718:  Switch  *Var0
  724:  	CaseOR  ==  .HitResult:Hit % 0
  730:  	CaseOR  ==  .HitResult:QuakeImmune % 2
  73C:  		Call  UseBattleCamPreset    ( 00000002 )
  74C:  		Call  SetActorRotation      ( .Actor:Self 00000000 00000000 00000000 )
  768:  		Call  SetActorDispOffset    ( .Actor:Self 00000000 00000000 00000000 )
  784:  		Call  GetGoalPos    ( .Actor:Self *Var0 *Var1 *Var2 )
  7A0:  		Add   *Var0  00000028
  7B0:  		Set   *Var1  00000000
  7C0:  		Call  SetActorJumpGravity   ( .Actor:Self *Fixed[1.8] )
  7D4:  		Call  SetGoalPos    ( .Actor:Self *Var0 *Var1 *Var2 )
  7F0:  		Call  JumpToGoal    ( .Actor:Self  10` .False .True .False )
  810:  		Add   *Var0  0000001E
  820:  		Call  SetGoalPos    ( .Actor:Self *Var0 *Var1 *Var2 )
  83C:  		Call  JumpToGoal    ( .Actor:Self  8` .False .True .False )
  85C:  		Add   *Var0  00000014
  86C:  		Call  SetGoalPos    ( .Actor:Self *Var0 *Var1 *Var2 )
  888:  		Call  JumpToGoal    ( .Actor:Self  6` .False .True .False )
  8A8:  		Sub   *Var0  0000000A
  8B8:  		Call  JumpToGoal    ( .Actor:Self  4` .False .True .False )
  8D8:  		Call  SetAnimation  ( .Actor:Self 00000001 00310107 )
  8F0:  		Call  SetGoalToHome ( .Actor:Self )
  900:  		Call  GetGoalPos    ( .Actor:Self *Var0 *Var1 *Var2 )
  91C:  		Call  SetActorSpeed ( .Actor:Self *Fixed[4.0] )
  930:  		Call  SetAnimation  ( .Actor:Self 00000001 0031010B )
  948:  		Call  SetActorJumpGravity   ( .Actor:Self *Fixed[2.0] )
  95C:  		ExecWait  8029C12C
  968:  		Call  SetAnimation  ( .Actor:Self 00000001 00310107 )
  980:  EndSwitch
  988:  Call  EnableIdleScript  ( .Actor:Self 00000001 )
  99C:  Call  UseIdleAnimation  ( .Actor:Self .True )
  9B0:  Return
  9B8:  End
}

#new:Script $Script_8021B088
{
    0:  Call  GetStatusFlags    ( .Actor:Self *VarA )
   14:  If  *VarA  &  ~Flags:StatusFlags:Shrink % 80000
   24:  	SetConst  *Var0  00000001
   34:  	Call  GetActorVar   ( .Actor:Self 00000003 *Var1 )
   4C:  	ExecWait  DoSpinSmashHit
   58:  	Return
   60:  EndIf
   68:  Call  GetActorVar   ( .Actor:Self 00000000 *VarA )
   80:  Switch  *VarA
   8C:  	Case  ==  00000000
   98:  		ExecWait  $Script_8021B998
   A4:  	Case  ==  00000001
   B0:  		ExecWait  $Script_8021B998
   BC:  	Case  ==  00000002
   C8:  		ExecWait  $Script_8021B998
   D4:  	Case  ==  00000003
   E0:  		SetConst  *Var0  00000001
   F0:  		Call  GetActorVar   ( .Actor:Self 00000003 *Var1 )
  108:  		ExecWait  DoSpinSmashHit
  114:  EndSwitch
  11C:  Return
  124:  End
}

#new:Script $Script_8021B1B4
{
    0:  Call  GetActorVar   ( .Actor:Self 00000000 *VarA )
   18:  Switch  *VarA
   24:  	Case  ==  00000000
   30:  		Call  SetActorVar   ( .Actor:Self 00000001 00310105 )
   48:  		Call  SetActorVar   ( .Actor:Self 00000002 00310109 )
   60:  		Call  SetActorVar   ( .Actor:Self 00000003 0031010D )
   78:  		Call  SetActorVar   ( .Actor:Self 00000004 00310112 )
   90:  		Call  SetActorVar   ( .Actor:Self 00000005 00310113 )
   A8:  		Call  SetActorVar   ( .Actor:Self 00000006 0031011A )
   C0:  		Call  SetActorVar   ( .Actor:Self 00000007 0031011B )
   D8:  		Call  SetIdleAnimations ( .Actor:Self 00000001 $IdleAnimations_80218E04 )
   F0:  		Call  SetPartFlagBits   ( .Actor:Self 00000002 00800000 .False )
  10C:  		Call  SetPartFlagBits   ( .Actor:Self 00000002 00020000 .True )
  128:  		Call  SetPartFlagBits   ( .Actor:Self 00000003 00020000 .False )
  144:  		Call  SetPartFlagBits   ( .Actor:Self 00000003 00800000 .True )
  160:  		Call  SetActorVar   ( .Actor:Self 00000000 00000001 )
  178:  		Call  SetActorSize  ( .Actor:Self  62`  -250000000` )
  190:  		Call  SetPartSize   ( .Actor:Self 00000001  62`  -250000000` )
  1AC:  		Call  $Function_80218000    ( FFFFFFF1 00000037 0000000A 0000002D )
  1C8:  	Case  ==  00000001
  1D4:  		Call  SetActorVar   ( .Actor:Self 00000001 00310106 )
  1EC:  		Call  SetActorVar   ( .Actor:Self 00000002 0031010A )
  204:  		Call  SetActorVar   ( .Actor:Self 00000003 0031010E )
  21C:  		Call  SetActorVar   ( .Actor:Self 00000004 00310114 )
  234:  		Call  SetActorVar   ( .Actor:Self 00000005 00310115 )
  24C:  		Call  SetActorVar   ( .Actor:Self 00000006 0031011C )
  264:  		Call  SetActorVar   ( .Actor:Self 00000007 0031011D )
  27C:  		Call  SetIdleAnimations ( .Actor:Self 00000001 $IdleAnimations_80218E40 )
  294:  		Call  SetPartFlagBits   ( .Actor:Self 00000003 00800000 .False )
  2B0:  		Call  SetPartFlagBits   ( .Actor:Self 00000003 00020000 .True )
  2CC:  		Call  SetPartFlagBits   ( .Actor:Self 00000004 00020000 .False )
  2E8:  		Call  SetPartFlagBits   ( .Actor:Self 00000004 00800000 .True )
  304:  		Call  SetActorVar   ( .Actor:Self 00000000 00000002 )
  31C:  		Call  SetActorSize  ( .Actor:Self  44`  -250000000` )
  334:  		Call  SetPartSize   ( .Actor:Self 00000001  44`  -250000000` )
  350:  		Call  $Function_80218000    ( FFFFFFF1 00000023 0000000A 00000019 )
  36C:  	Case  ==  00000002
  378:  		Call  SetActorVar   ( .Actor:Self 00000001 00310107 )
  390:  		Call  SetActorVar   ( .Actor:Self 00000002 0031010B )
  3A8:  		Call  SetActorVar   ( .Actor:Self 00000003 0031010F )
  3C0:  		Call  SetActorVar   ( .Actor:Self 00000006 0031011E )
  3D8:  		Call  SetActorVar   ( .Actor:Self 00000007 0031011F )
  3F0:  		Call  SetIdleAnimations ( .Actor:Self 00000001 $IdleAnimations_80218E7C )
  408:  		Call  SetPartFlagBits   ( .Actor:Self 00000004 00800000 .False )
  424:  		Call  SetPartFlagBits   ( .Actor:Self 00000004 00020000 .True )
  440:  		Call  SetPartFlagBits   ( .Actor:Self 00000005 00020000 .False )
  45C:  		Call  SetPartFlagBits   ( .Actor:Self 00000005 00800000 .True )
  478:  		Call  SetActorVar   ( .Actor:Self 00000000 00000003 )
  490:  		Call  SetActorSize  ( .Actor:Self  26`  -250000000` )
  4A8:  		Call  SetPartSize   ( .Actor:Self 00000001  26`  -250000000` )
  4C4:  		Call  $Function_80218000    ( FFFFFFF1 0000000F 0000000A 00000005 )
  4E0:  EndSwitch
  4E8:  Return
  4F0:  End
}

#new:Script $Script_8021B6AC
{
    0:  Call  GetActorPos   ( .Actor:Self *Var0 *Var1 *Var2 )
   1C:  Add   *Var1  00000012
   2C:  Call  SetActorPos   ( .Actor:Self *Var0 *Var1 *Var2 )
   48:  Call  GetActorPos   ( .Actor:Self *Var0 *Var1 *Var2 )
   64:  Set   *Var3  *Var1
   74:  Wait  2`
   80:  Sub   *Var3  00000001
   90:  Call  SetActorPos   ( .Actor:Self *Var0 *Var3 *Var2 )
   AC:  Wait  3`
   B8:  Sub   *Var3  00000002
   C8:  Call  SetActorPos   ( .Actor:Self *Var0 *Var3 *Var2 )
   E4:  Wait  2`
   F0:  Sub   *Var3  00000003
  100:  Call  SetActorPos   ( .Actor:Self *Var0 *Var3 *Var2 )
  11C:  Wait  1`
  128:  Sub   *Var3  00000005
  138:  Call  SetActorPos   ( .Actor:Self *Var0 *Var3 *Var2 )
  154:  Wait  1`
  160:  Sub   *Var3  00000007
  170:  Call  SetActorPos   ( .Actor:Self *Var0 *Var3 *Var2 )
  18C:  Wait  1`
  198:  Add   *Var3  00000002
  1A8:  Call  SetActorPos   ( .Actor:Self *Var0 *Var3 *Var2 )
  1C4:  Wait  1`
  1D0:  Add   *Var3  00000003
  1E0:  Call  SetActorPos   ( .Actor:Self *Var0 *Var3 *Var2 )
  1FC:  Wait  1`
  208:  Add   *Var3  00000003
  218:  Call  SetActorPos   ( .Actor:Self *Var0 *Var3 *Var2 )
  234:  Wait  1`
  240:  Sub   *Var3  00000003
  250:  Call  SetActorPos   ( .Actor:Self *Var0 *Var3 *Var2 )
  26C:  Wait  1`
  278:  Sub   *Var3  00000003
  288:  Call  SetActorPos   ( .Actor:Self *Var0 *Var3 *Var2 )
  2A4:  Wait  1`
  2B0:  Sub   *Var3  00000002
  2C0:  Call  SetActorPos   ( .Actor:Self *Var0 *Var3 *Var2 )
  2DC:  Return
  2E4:  End
}

#new:Script $Script_8021B998
{
    0:  Call  GetActorPos       ( .Actor:Self *Var0 *Var1 *Var2 )
   1C:  Call  SetPartPos        ( .Actor:Self 00000006 *Var0 *Var1 *Var2 )
   3C:  Call  SetPartFlagBits   ( .Actor:Self 00000006 00000001 .False )
   58:  Call  GetStatusFlags    ( .Actor:Self *Var0 )
   6C:  If  *Var0  !&  ~Flags:StatusFlags:Shrink % 80000
   7C:  	Call  SetPartScale  ( .Actor:Self 00000006 *Fixed[1.0] *Fixed[1.0] *Fixed[1.0] )
   9C:  Else
   A4:  	Call  SetPartScale  ( .Actor:Self 00000006 *Fixed[0.4] *Fixed[0.4] *Fixed[1.0] )
   C4:  EndIf
   CC:  ExecWait  $Script_8021B1B4
   D8:  SetConst  *Var0  00000001
   E8:  Call  GetActorVar   ( .Actor:Self 00000003 *Var1 )
  100:  Call  SetAnimation  ( .Actor:Self *Var0 *Var1 )
  118:  ChildThread
  120:  	Wait  4`
  12C:  	ExecWait  $Script_8021B6AC
  138:  EndChildThread
  140:  Call  EnemyCreateTargetList ( 00018004 )
  150:  Call  InitTargetIterator ( )
  15C:  Label  0
  168:  Call  GetOwnerID    ( *Var1 )
  178:  Call  GetOwnerTarget        ( *Var0 *Var9 )
  18C:  If  *Var1  !=  *Var0
  19C:  	Call  ChooseNextTarget  ( .Iter:Next *Var0 )
  1B0:  	Goto  0
  1BC:  EndIf
  1C4:  Label  1
  1D0:  Add   *VarF  00000001
  1E0:  Call  ChooseNextTarget  ( .Iter:Next *Var0 )
  1F4:  If  *Var0  ==  FFFFFFFF
  204:  	Goto  A
  210:  EndIf
  218:  Call  GetOwnerTarget    ( *Var0 *Var9 )
  22C:  Call  GetActorFlags     ( *Var0 *Var1 )
  240:  If  *Var1  &  00004000
  250:  	Goto  1
  25C:  EndIf
  264:  Call  GetOwnerID        ( *Var0 )
  274:  Call  GetOwnerTarget    ( *Var0 *Var1 )
  288:  Call  SetGoalToTarget   ( .Actor:Self )
  298:  Call  GetGoalPos        ( .Actor:Self *Var0 *Var1 *Var2 )
  2B4:  Set   *Var1  00000000
  2C4:  Call  SetPartJumpGravity    ( .Actor:Self 00000006 *Fixed[0.1] )
  2DC:  Call  SetPartMoveSpeed  ( .Actor:Self 00000006 *Fixed[7.0] )
  2F4:  Call  JumpPartTo        ( .Actor:Self 00000006 *Var0 *Var1 *Var2  0` .True )
  31C:  ChildThread
  324:  	Call  ShakeCam  ( .Cam:Battle 00000000  2` *Fixed[1.0] )
  340:  EndChildThread
  348:  Call  SetGoalToTarget   ( .Actor:Self )
  358:  Call  GetOwnerTarget    ( *Var0 *Var1 )
  36C:  Call  DispatchDamageEvent   ( *Var0 00000001 .Event:SpinSmashLaunchHit )
  384:  Goto  1
  390:  Label  A
  39C:  Call  UseBattleCamPreset    ( 00000003 )
  3AC:  Call  SetPartJumpGravity    ( .Actor:Self 00000006 *Fixed[0.1] )
  3C4:  Call  SetPartMoveSpeed  ( .Actor:Self 00000006 *Fixed[6.0] )
  3DC:  Call  JumpPartTo        ( .Actor:Self 00000006  296`  0`  0`  0` .True )
  404:  Call  SetPartFlagBits   ( .Actor:Self 00000006 00020000 .True )
  420:  Call  SetPartFlagBits   ( .Actor:Self 00000006 00000001 .True )
  43C:  Return
  444:  End
}

#new:Script $Script_8021BDE4
{
    0:  Call  GetStatusFlags    ( .Actor:Self *Var0 )
   14:  If  *Var0  !&  ~Flags:StatusFlags:Shrink % 80000
   24:  	Call  SetPartScale  ( .Actor:Self 00000006 *Fixed[1.0] *Fixed[1.0] *Fixed[1.0] )
   44:  Else
   4C:  	Call  SetPartScale  ( .Actor:Self 00000006 *Fixed[0.4] *Fixed[0.4] *Fixed[1.0] )
   6C:  EndIf
   74:  ExecWait  $Script_8021B1B4
   80:  SetConst  *Var0  00000001
   90:  Call  GetLastEvent  ( .Actor:Self *Var1 )
   A4:  Switch  *Var1
   B0:  	CaseOR  ==  .Event:BurnHit % E
   BC:  	CaseOR  ==  .Event:BurnDeath % 24
   C8:  		Call  SetAnimation  ( .Actor:Self 00000006 00310020 )
   E0:  		Call  GetActorVar   ( .Actor:Self 00000006 *Var1 )
   F8:  	EndCaseGroup
  100:  	Default
  108:  		Call  GetActorVar   ( .Actor:Self 00000003 *Var1 )
  120:  EndSwitch
  128:  Call  SetAnimation  ( .Actor:Self *Var0 *Var1 )
  140:  ChildThread
  148:  	Wait  4`
  154:  	ExecWait  $Script_8021B6AC
  160:  EndChildThread
  168:  Call  GetActorVar   ( .Actor:Self 00000000 *VarA )
  180:  If  *VarA  !=  00000003
  190:  	Call  GetActorPos   ( .Actor:Self *Var0 *Var1 *Var2 )
  1AC:  	Call  SetPartPos    ( .Actor:Self 00000006 *Var0 *Var1 *Var2 )
  1CC:  	Call  SetPartFlagBits   ( .Actor:Self 00000006 00000001 .False )
  1E8:  	Call  SetPartMoveSpeed  ( .Actor:Self 00000006 *Fixed[6.0] )
  200:  	Call  GetActorPos   ( .Actor:Self *Var0 *Var1 *Var2 )
  21C:  	Add   *Var0  0000001E
  22C:  	Set   *Var1  00000000
  23C:  	Call  FlyPartTo     ( .Actor:Self 00000006 *Var0 *Var1 *Var2  10`  18` .Easing:Linear )
  268:  	Add   *Var0  00000014
  278:  	Call  FlyPartTo     ( .Actor:Self 00000006 *Var0 *Var1 *Var2  8`  10` .Easing:Linear )
  2A4:  	Loop  00000014
  2B0:  		Call  SetPartFlagBits   ( .Actor:Self 00000006 00000001 .True )
  2CC:  		Wait  1`
  2D8:  		Call  SetPartFlagBits   ( .Actor:Self 00000006 00000001 .False )
  2F4:  		Wait  1`
  300:  	EndLoop
  308:  	Call  SetPartFlagBits   ( .Actor:Self 00000006 00020000 .True )
  324:  	Call  SetPartFlagBits   ( .Actor:Self 00000006 00000001 .True )
  340:  Else
  348:  	Wait  30`
  354:  EndIf
  35C:  Call  GetLastEvent  ( .Actor:Self *Var0 )
  370:  Switch  *Var0
  37C:  	Case  ==  .Event:BurnHit % E
  388:  		Call  GetActorVar   ( .Actor:Self 00000007 *Var1 )
  3A0:  		Call  SetAnimation  ( .Actor:Self 00000001 *Var1 )
  3B8:  		Call  GetActorPos   ( .Actor:Self *Var0 *Var1 *Var2 )
  3D4:  		Call  GetActorSize  ( .Actor:Self *Var3 *Var4 )
  3EC:  		Div   *Var3  00000002
  3FC:  		Add   *Var1  *Var3
  40C:  		Add   *Var2  00000005
  41C:  		DivF  *Var3  *Fixed[10.0]
  42C:  		Call  PlayEffect    ( ~FX:SmokeBurst:Black *Var0 *Var1 *Var2 *Var3 0000000A 00000000 00000000 00000000 00000000 00000000 00000000 00000000 )
  470:  	Case  ==  .Event:BurnDeath % 24
  47C:  		Call  GetActorVar   ( .Actor:Self 00000007 *Var1 )
  494:  		Call  SetAnimation  ( .Actor:Self 00000001 *Var1 )
  4AC:  		Wait  10`
  4B8:  	Default
  4C0:  EndSwitch
  4C8:  Return
  4D0:  End
}

#new:Script $Script_8021C2BC
{
    0:  SetConst  *Var0  00000001
   10:  Call  GetActorVar   ( .Actor:Self 00000003 *Var1 )
   28:  Call  UseBattleCamPreset    ( 00000002 )
   38:  Call  GetActorFlags ( .Actor:Self *Var9 )
   4C:  Call  SetActorJumpGravity   ( .Actor:Self *Fixed[0.05] )
   60:  Call  GetActorPos   ( .Actor:Self *VarA *VarB *VarC )
   7C:  Set   *VarD  *VarB
   8C:  Add   *VarD  00000028
   9C:  Call  SetGoalPos    ( .Actor:Self *VarA *VarD *VarC )
   B8:  Call  JumpToGoal    ( .Actor:Self  5` .False .True .False )
   D8:  Call  SetAnimation  ( .Actor:Self *Var0 *Var1 )
   F0:  Wait  20`
   FC:  Call  SetGoalPos    ( .Actor:Self *VarA *VarB *VarC )
  118:  Call  FallToGoal    ( .Actor:Self  10` )
  12C:  Wait  20`
  138:  Call  SetActorYaw   ( .Actor:Self  180` )
  14C:  Wait  5`
  158:  Call  SetActorSpeed ( .Actor:Self *Fixed[4.0] )
  16C:  Call  SetGoalPos    ( .Actor:Self  200`  0`  0` )
  188:  Call  RunToGoal     ( .Actor:Self  0` .False )
  1A0:  Wait  8`
  1AC:  Call  8027D32C      ( FFFFFF81 )
  1BC:  Call  UseIdleAnimation      ( .Actor:Self .False )
  1D0:  Call  RemoveActor   ( .Actor:Self )
  1E0:  Return
  1E8:  End
}

PADDING: 8021C4AC to 8021C4B0 (004E6BEC to 004E6BF0)
00000000

#new:DefenseTable $DefenseTable_8021C4B0
{
	.Element:Normal 00000000
	.Element:End
}

#new:StatusTable $StatusTable_8021C4BC
{
	.Status:Normal      0`
	.Status:Default     0`
	.Status:Sleep      80`
	.Status:Poison     60`
	.Status:Frozen      0`
	.Status:Dizzy     100`
	.Status:Fear        0`
	.Status:Static     80`
	.Status:Paralyze   90`
	.Status:Shrink     90`
	.Status:Stop       90`
	.Status:DefaultTurnMod    0`
	.Status:SleepTurnMod      0`
	.Status:PoisonTurnMod     0`
	.Status:FrozenTurnMod     0`
	.Status:DizzyTurnMod      1`
	.Status:FearTurnMod       0`
	.Status:StaticTurnMod     0`
	.Status:ParalyzeTurnMod   1`
	.Status:ShrinkTurnMod     0`
	.Status:StopTurnMod       0`
	.Status:End
}

#new:PartsTable $PartsTable_8021C568
{
	00800000 01000000 001D00FF $IdleAnimations_8021C5B4 $DefenseTable_8021C4B0 00000000 00000000 010F0000 00000000
}

#new:Actor $Swooper
{
	% stats
	[Index]        16b
	[Level]        10`b
	[MaxHP]         4`b
	[Coins]         1`b
	[Flags]       00000800
	[StatusTable] $StatusTable_8021C4BC
	% ai
	[PartsCount]    1`s
	[PartsTable]  $PartsTable_8021C568
	[Script]      $Script_Init_8021C64C
	% move effectiveness
	[Escape]       50`b
	[Item]         90`b
	[AirLift]     100`b
	[Hurricane]    95`b % Bow's "Spook" as well
	[UpAndAway]    95`b
	[PowerBounce]  80`b
	[SpinSmash]     0`b % weight (0-4)
	% ui positions
	[Size]         31`b  24`b % width height
	[HealthBar]     0`b   0`b % dx dy
	[StatusTurn]  -10`b -20`b % dx dy
	[StatusIcon]   10`b -20`b % dx dy
}

#new:IdleAnimations $IdleAnimations_8021C5B4
{
	.Status:Normal    0034000C
	.Status:Stone     0034000B
	.Status:Sleep     0034000F
	.Status:Poison    0034000C
	.Status:Stop      0034000B
	.Status:Static    0034000C
	.Status:Paralyze  0034000B
	.Status:Dizzy     00340010
	.Status:Fear      00340010
	.Status:End
}

#new:IdleAnimations $IdleAnimations_8021C600
{
	.Status:Normal    00340002
	.Status:Stone     00340001
	.Status:Sleep     00340013
	.Status:Poison    00340002
	.Status:Stop      00340001
	.Status:Static    00340002
	.Status:Paralyze  00340001
	.Status:Dizzy     00340014
	.Status:Fear      00340014
	.Status:End
}

#new:Script $Script_Init_8021C64C
{
    0:  Call  BindTakeTurn  ( .Actor:Self $Script_TakeTurn_8021DED4 )
   14:  Call  BindIdle      ( .Actor:Self $Script_Idle_8021C6B0 )
   28:  Call  BindHandleEvent   ( .Actor:Self $Script_HandleEvent_8021D064 )
   3C:  Call  SetActorVar   ( .Actor:Self 00000008 00000000 )
   54:  Return
   5C:  End
}

#new:Script $Script_Idle_8021C6B0
{
    0:  Return
    8:  End
}

#new:Script $Script_8021C6C0
{
    0:  Call  GetActorVar   ( .Actor:Self 00000008 *Var0 )
   18:  Switch  *Var0
   24:  	Case  ==  00000000
   30:  		Call  SetAnimation  ( .Actor:Self 00000001 00340002 )
   48:  		Call  SetActorSpeed ( .Actor:Self *Fixed[8.0] )
   5C:  		Call  SetGoalToHome ( .Actor:Self )
   6C:  		Call  AddGoalPos    ( .Actor:Self  0`  -24`  0` )
   88:  		Call  FlyToGoal     ( .Actor:Self  0`  1` .Easing:SinOut )
   A4:  		Call  SetActorFlagBits  ( .Actor:Self 00000800 .True )
   BC:  		Call  SetIdleAnimations ( .Actor:Self 00000001 $IdleAnimations_8021C5B4 )
   D4:  		Call  SetAnimation  ( .Actor:Self 00000001 0034000C )
   EC:  		Call  GetActorPos   ( .Actor:Self *Var0 *Var1 *Var2 )
  108:  		Add   *Var1  00000018
  118:  		Call  SetActorPos   ( .Actor:Self *Var0 *Var1 *Var2 )
  134:  		Call  HPBarToHome   ( .Actor:Self )
  144:  	Case  ==  00000001
  150:  		Call  SetAnimation  ( .Actor:Self 00000001 00340002 )
  168:  		Call  SetActorSpeed ( .Actor:Self *Fixed[8.0] )
  17C:  		Call  SetGoalToHome ( .Actor:Self )
  18C:  		Call  FlyToGoal     ( .Actor:Self  0`  1` .Easing:SinOut )
  1A8:  EndSwitch
  1B0:  Return
  1B8:  End
}

#new:Script $Script_8021C880
{
    0:  Call  UseIdleAnimation  ( .Actor:Self .False )
   14:  Call  EnableIdleScript  ( .Actor:Self 00000000 )
   28:  Call  GetLastEvent      ( .Actor:Self *Var0 )
   3C:  Switch  *Var0
   48:  	CaseOR  ==  .Event:HitCombo % 9
   54:  	CaseOR  ==  .Event:Hit % A
   60:  		SetConst  *Var0  00000001
   70:  		SetConst  *Var1  00340015
   80:  		ExecWait  DoNormalHit
   8C:  	EndCaseGroup
   94:  	Case  ==  .Event:BurnHit % E
   A0:  		SetConst  *Var0  00000001
   B0:  		SetConst  *Var1  00340017
   C0:  		SetConst  *Var2  00340018
   D0:  		ExecWait  DoBurnHit
   DC:  	Case  ==  .Event:BurnDeath % 24
   E8:  		SetConst  *Var0  00000001
   F8:  		SetConst  *Var1  00340017
  108:  		SetConst  *Var2  00340018
  118:  		ExecWait  DoBurnHit
  124:  		SetConst  *Var0  00000001
  134:  		SetConst  *Var1  00340018
  144:  		ExecWait  DoDeath
  150:  		Return
  158:  	Case  ==  .Event:ShockHit % 2F
  164:  		Call  80269470 ( )
  170:  		SetConst  *Var0  00000001
  180:  		SetConst  *Var1  00340015
  190:  		ExecWait  DoShockHit
  19C:  		Call  UseBattleCamPreset    ( 00000002 )
  1AC:  		ExecWait  $Script_8021C6C0
  1B8:  	Case  ==  .Event:ShockDeath % 26
  1C4:  		Call  80269470 ( )
  1D0:  		SetConst  *Var0  00000001
  1E0:  		SetConst  *Var1  00340015
  1F0:  		ExecWait  DoShockHit
  1FC:  		Thread
  204:  			Wait  30`
  210:  			Call  UseBattleCamPreset    ( 00000002 )
  220:  		EndThread
  228:  		SetConst  *Var0  00000001
  238:  		SetConst  *Var1  00340015
  248:  		ExecWait  DoDeath
  254:  		Return
  25C:  	CaseOR  ==  00000017 % 17
  268:  	CaseOR  ==  .Event:Immune % 19
  274:  	CaseOR  ==  .Event:AirLiftFailed % 1F
  280:  		SetConst  *Var0  00000001
  290:  		SetConst  *Var1  00340002
  2A0:  		ExecWait  DoImmune
  2AC:  	EndCaseGroup
  2B4:  	Case  ==  .Event:Death % 20
  2C0:  		SetConst  *Var0  00000001
  2D0:  		SetConst  *Var1  00340015
  2E0:  		ExecWait  DoNormalHit
  2EC:  		Wait  10`
  2F8:  		SetConst  *Var0  00000001
  308:  		SetConst  *Var1  00340015
  318:  		ExecWait  DoDeath
  324:  		Return
  32C:  	Case  ==  .Event:RecoverStatus % 31
  338:  		SetConst  *Var0  00000001
  348:  		SetConst  *Var1  00340002
  358:  		ExecWait  DoRecover
  364:  	Case  ==  .Event:ScareAway % 39
  370:  		Call  SetActorFlagBits  ( .Actor:Self 00000200 .False )
  388:  		SetConst  *Var0  00000001
  398:  		SetConst  *Var1  00340002
  3A8:  		SetConst  *Var2  00340015
  3B8:  		ExecWait  DoScareAway
  3C4:  		Return
  3CC:  	Case  ==  .Event:BeginAirLift % 3A
  3D8:  		SetConst  *Var0  00000001
  3E8:  		SetConst  *Var1  00340002
  3F8:  		ExecWait  DoAirLift
  404:  	Case  ==  .Event:BlowAway % 16
  410:  		SetConst  *Var0  00000001
  420:  		SetConst  *Var1  00340015
  430:  		ExecWait  DoBlowAway
  43C:  		Return
  444:  EndSwitch
  44C:  Call  EnableIdleScript  ( .Actor:Self 00000001 )
  460:  Call  UseIdleAnimation  ( .Actor:Self .True )
  474:  Return
  47C:  End
}

#new:Script $Script_8021CD04
{
    0:  Call  8027D32C      ( FFFFFF81 )
   10:  Call  GetLastDamage ( .Actor:Self *Var0 )
   24:  If  *Var0  <=  00000000
   34:  	Return
   3C:  EndIf
   44:  Call  SetActorFlagBits      ( .Actor:Self 00000800 .False )
   5C:  Call  SetAnimation  ( .Actor:Self 00000001 00340002 )
   74:  Call  SetActorDispOffset    ( .Actor:Self 00000000 00000000 00000000 )
   90:  Call  GetActorPos   ( .Actor:Self *Var0 *Var1 *Var2 )
   AC:  Sub   *Var1  00000018
   BC:  Call  SetActorPos   ( .Actor:Self *Var0 *Var1 *Var2 )
   D8:  Call  GetActorVar   ( .Actor:Self 00000000 *VarA )
   F0:  If  *VarA  ==  FFFFFFFF
  100:  	Call  SetHomePos    ( .Actor:Self *Var0  45` *Var2 )
  11C:  	Call  SetActorJumpGravity   ( .Actor:Self *Fixed[0.8] )
  130:  	Call  SetGoalToHome ( .Actor:Self )
  140:  	Call  JumpToGoal    ( .Actor:Self  15` .False .False .False )
  160:  	Call  JumpToGoal    ( .Actor:Self  10` .False .False .False )
  180:  Else
  188:  	Call  SetActorJumpGravity   ( .Actor:Self *Fixed[0.8] )
  19C:  	Call  SetGoalPos    ( .Actor:Self *Var0  45` *Var2 )
  1B8:  	Call  JumpToGoal    ( .Actor:Self  15` .False .False .False )
  1D8:  	Call  GetIndexFromPos       ( .Actor:Self *VarA )
  1EC:  	Mod   *VarA  00000004
  1FC:  	Add   *VarA  00000004
  20C:  	Call  SetGoalToIndex        ( .Actor:Self *VarA )
  220:  	Call  GetGoalPos    ( .Actor:Self *VarA *VarB *VarC )
  23C:  	Call  SetHomePos    ( .Actor:Self *VarA *VarB *VarC )
  258:  	Call  SetActorJumpGravity   ( .Actor:Self *Fixed[0.8] )
  26C:  	Call  SetGoalToHome ( .Actor:Self )
  27C:  	Call  JumpToGoal    ( .Actor:Self  10` .False .False .False )
  29C:  EndIf
  2A4:  Call  8027D4C8  ( FFFFFF81 00000001 00000000 FFFFFFF6 )
  2C0:  Call  SetTargetOffset   ( .Actor:Self 00000001  0`  22` )
  2DC:  Call  $Function_802180D0    ( FFFFFFF6 00000014 0000000A 00000014 )
  2F8:  Call  SetIdleAnimations ( .Actor:Self 00000001 $IdleAnimations_8021C600 )
  310:  Call  SetActorFlagBits  ( .Actor:Self 00000200 .True )
  328:  Call  HPBarToHome       ( .Actor:Self )
  338:  Call  SetActorVar       ( .Actor:Self 00000008 00000001 )
  350:  Return
  358:  End
}

#new:Script $Script_HandleEvent_8021D064
{
    0:  Call  GetActorVar   ( .Actor:Self 00000008 *Var0 )
   18:  If  *Var0  ==  00000001
   28:  	ExecWait  $Script_8021C880
   34:  	Return
   3C:  EndIf
   44:  Call  UseIdleAnimation  ( .Actor:Self .False )
   58:  Call  EnableIdleScript  ( .Actor:Self 00000000 )
   6C:  Call  GetLastEvent      ( .Actor:Self *Var0 )
   80:  Switch  *Var0
   8C:  	Case  ==  .Event:HitCombo % 9
   98:  		Call  GetBattlePhase    ( *Var0 )
   A8:  		If  *Var0  ==  00000001
   B8:  			SetConst  *Var0  00000001
   C8:  			SetConst  *Var1  00340015
   D8:  			ExecWait  DoNormalHit
   E4:  		Else
   EC:  			SetConst  *Var0  00000001
   FC:  			SetConst  *Var1  0034000E
  10C:  			ExecWait  DoNormalHit
  118:  		EndIf
  120:  	Case  ==  .Event:Hit % A
  12C:  		Call  GetBattlePhase    ( *Var0 )
  13C:  		If  *Var0  ==  00000001
  14C:  			SetConst  *Var0  00000001
  15C:  			SetConst  *Var1  00340015
  16C:  			ExecWait  DoNormalHit
  178:  		Else
  180:  			SetConst  *Var0  00000001
  190:  			SetConst  *Var1  0034000E
  1A0:  			ExecWait  DoNormalHit
  1AC:  			ExecWait  $Script_8021CD04
  1B8:  		EndIf
  1C0:  	Case  ==  .Event:BurnHit % E
  1CC:  		Call  GetBattlePhase    ( *Var0 )
  1DC:  		If  *Var0  ==  00000001
  1EC:  			SetConst  *Var0  00000001
  1FC:  			SetConst  *Var1  00340017
  20C:  			SetConst  *Var2  00340018
  21C:  			ExecWait  DoBurnHit
  228:  		Else
  230:  			SetConst  *Var0  00000001
  240:  			SetConst  *Var1  00340011
  250:  			SetConst  *Var2  00340012
  260:  			ExecWait  DoBurnHit
  26C:  			ExecWait  $Script_8021CD04
  278:  		EndIf
  280:  	Case  ==  .Event:BurnDeath % 24
  28C:  		Call  GetBattlePhase    ( *Var0 )
  29C:  		If  *Var0  ==  00000001
  2AC:  			SetConst  *Var0  00000001
  2BC:  			SetConst  *Var1  00340017
  2CC:  			SetConst  *Var2  00340018
  2DC:  			ExecWait  DoBurnHit
  2E8:  			SetConst  *Var0  00000001
  2F8:  			SetConst  *Var1  00340018
  308:  			ExecWait  DoDeath
  314:  		Else
  31C:  			SetConst  *Var0  00000001
  32C:  			SetConst  *Var1  00340011
  33C:  			SetConst  *Var2  00340012
  34C:  			ExecWait  DoBurnHit
  358:  			SetConst  *Var0  00000001
  368:  			SetConst  *Var1  00340012
  378:  			ExecWait  DoDeath
  384:  		EndIf
  38C:  		Return
  394:  	Case  ==  .Event:ShockHit % 2F
  3A0:  		Call  80269470 ( )
  3AC:  		SetConst  *Var0  00000001
  3BC:  		SetConst  *Var1  00340015
  3CC:  		ExecWait  8029A76C
  3D8:  		Call  UseBattleCamPreset    ( 00000002 )
  3E8:  		ExecWait  $Script_8021C6C0
  3F4:  	Case  ==  .Event:ShockDeath % 26
  400:  		Call  80269470 ( )
  40C:  		SetConst  *Var0  00000001
  41C:  		SetConst  *Var1  00340015
  42C:  		ExecWait  8029A76C
  438:  		Thread
  440:  			Wait  30`
  44C:  			Call  UseBattleCamPreset    ( 00000002 )
  45C:  		EndThread
  464:  		SetConst  *Var0  00000001
  474:  		SetConst  *Var1  00340015
  484:  		ExecWait  DoDeath
  490:  		Return
  498:  	CaseOR  ==  00000017 % 17
  4A4:  	CaseOR  ==  .Event:Immune % 19
  4B0:  		SetConst  *Var0  00000001
  4C0:  		SetConst  *Var1  0034000C
  4D0:  		ExecWait  DoImmune
  4DC:  	EndCaseGroup
  4E4:  	Case  ==  .Event:Death % 20
  4F0:  		Call  GetBattlePhase    ( *Var0 )
  500:  		If  *Var0  ==  00000001
  510:  			SetConst  *Var0  00000001
  520:  			SetConst  *Var1  00340015
  530:  			ExecWait  DoNormalHit
  53C:  			Wait  10`
  548:  			SetConst  *Var0  00000001
  558:  			SetConst  *Var1  00340015
  568:  			ExecWait  DoDeath
  574:  		Else
  57C:  			SetConst  *Var0  00000001
  58C:  			SetConst  *Var1  0034000E
  59C:  			ExecWait  DoNormalHit
  5A8:  			Wait  10`
  5B4:  			SetConst  *Var0  00000001
  5C4:  			SetConst  *Var1  0034000E
  5D4:  			ExecWait  DoDeath
  5E0:  		EndIf
  5E8:  		Return
  5F0:  	Case  ==  .Event:BeginFirstStrike % 38
  5FC:  		Call  SetActorFlagBits  ( .Actor:Self 00000800 .False )
  614:  		Call  SetIdleAnimations ( .Actor:Self 00000001 $IdleAnimations_8021C600 )
  62C:  		Call  SetAnimation      ( .Actor:Self 00000001 00340002 )
  644:  		Call  SetActorPos       ( .Actor:Self  20`  0`  0` )
  660:  		Call  HPBarToCurrent    ( .Actor:Self )
  670:  	Case  ==  .Event:EndFirstStrike % 35
  67C:  		ExecWait  $Script_8021C6C0
  688:  		Call  HPBarToHome   ( .Actor:Self )
  698:  	Case  ==  .Event:RecoverStatus % 31
  6A4:  	Case  ==  .Event:ScareAway % 39
  6B0:  		Call  SetActorFlagBits      ( .Actor:Self 00000200 .True )
  6C8:  		Call  SetActorFlagBits      ( .Actor:Self 00000800 .False )
  6E0:  		Call  SetActorDispOffset    ( .Actor:Self 00000000 FFFFFFE8 00000000 )
  6FC:  		SetConst  *Var0  00000001
  70C:  		SetConst  *Var1  00340002
  71C:  		SetConst  *Var2  00340015
  72C:  		ExecWait  DoScareAway
  738:  		Return
  740:  EndSwitch
  748:  Call  EnableIdleScript  ( .Actor:Self 00000001 )
  75C:  Call  UseIdleAnimation  ( .Actor:Self .True )
  770:  Return
  778:  End
}

#new:Script $Script_8021D7E4
{
    0:  Call  UseIdleAnimation  ( .Actor:Self .False )
   14:  Call  EnableIdleScript  ( .Actor:Self 00000000 )
   28:  Call  SetTargetActor    ( .Actor:Self .Actor:Player )
   3C:  Call  GetBattlePhase    ( *Var0 )
   4C:  If  *Var0  ==  00000001
   5C:  	Call  SetAnimation  ( .Actor:Self 00000001 00340002 )
   74:  	Call  SetGoalToTarget   ( .Actor:Self )
   84:  	Call  AddGoalPos    ( .Actor:Self  50`  10`  0` )
   A0:  	Call  SetActorSpeed ( .Actor:Self *Fixed[8.0] )
   B4:  	Call  GetGoalPos    ( .Actor:Self *Var0 *Var1 *Var2 )
   D0:  	Call  SetActorPos   ( .Actor:Self *Var0 *Var1 *Var2 )
   EC:  Else
   F4:  	Call  UseBattleCamPreset    ( 0000003F )
  104:  	Call  BattleCamTargetActor  ( .Actor:Self )
  114:  	Call  8024ECF8      ( FFFFFFFF 00000001 00000000 )
  12C:  	Call  SetAnimation  ( .Actor:Self 00000001 00340002 )
  144:  	Call  SetGoalToTarget       ( .Actor:Self )
  154:  	Call  AddGoalPos    ( .Actor:Self  50`  10`  0` )
  170:  	Call  SetActorSpeed ( .Actor:Self *Fixed[8.0] )
  184:  	Call  FlyToGoal     ( .Actor:Self  0`  -4` .Easing:Linear )
  1A0:  EndIf
  1A8:  Call  EnemyTestTarget   ( .Actor:Self *Var0 ~Flags:DamageType:0 00000000 00000002 00000010 )
  1CC:  Switch  *Var0
  1D8:  	CaseOR  ==  .HitResult:Miss % 6
  1E4:  	CaseOR  ==  .HitResult:Lucky % 5
  1F0:  		Set   *VarA  *Var0
  200:  		Wait  10`
  20C:  		Call  SetActorSpeed ( .Actor:Self *Fixed[5.0] )
  220:  		Call  SetActorJumpGravity   ( .Actor:Self *Fixed[1.8] )
  234:  		Call  SetAnimation  ( .Actor:Self 00000001 00340006 )
  24C:  		Call  GetActorPos   ( .Actor:Self *Var0 *Var1 *Var2 )
  268:  		Call  SetGoalPos    ( .Actor:Self *Var0 *Var1 *Var2 )
  284:  		Call  JumpToGoal    ( .Actor:Self  10` .False .False .False )
  2A4:  		Call  SetGoalToTarget   ( .Actor:Self )
  2B4:  		Call  GetGoalPos    ( .Actor:Self *Var0 *Var1 *Var2 )
  2D0:  		Sub   *Var0  00000032
  2E0:  		Call  SetGoalPos    ( .Actor:Self *Var0 *Var1 *Var2 )
  2FC:  		Call  SetActorSpeed ( .Actor:Self *Fixed[8.0] )
  310:  		Call  SetAnimation  ( .Actor:Self 00000001 00340006 )
  328:  		Call  FlyToGoal     ( .Actor:Self  0`  -10` .Easing:Linear )
  344:  		Call  SetAnimationRate  ( .Actor:Self 00000001 *Fixed[10.0] )
  35C:  		Wait  15`
  368:  		Call  SetAnimationRate  ( .Actor:Self 00000001 *Fixed[1.0] )
  380:  		If  *VarA  ==  .HitResult:Lucky % 5
  390:  			Call  EnemyTestTarget   ( .Actor:Self *Var0 ~Flags:DamageType:TriggerLucky 00000000 00000000 00000000 )
  3B4:  		EndIf
  3BC:  		Call  YieldTurn ( )
  3C8:  		Call  UseBattleCamPreset    ( 00000002 )
  3D8:  		Call  SetActorYaw   ( .Actor:Self  180` )
  3EC:  		Call  AddActorDecoration    ( .Actor:Self 00000001 00000000 .Decoration:Sweat )
  408:  		ExecWait  $Script_8021C6C0
  414:  		Call  RemoveActorDecoration ( .Actor:Self 00000001 00000000 )
  42C:  		Call  SetActorYaw   ( .Actor:Self  0` )
  440:  		Call  EnableIdleScript      ( .Actor:Self 00000001 )
  454:  		Call  UseIdleAnimation      ( .Actor:Self .True )
  468:  		Return
  470:  	EndCaseGroup
  478:  	Case  ==  .HitResult:HitStatic % 7
  484:  		Call  GetStatusFlags    ( .Actor:Self *Var0 )
  498:  		If  *Var0  &  ~Flags:StatusFlags:Static % 2000
  4A8:  			Set   *Flag[00]  .False
  4B8:  		Else
  4C0:  			Set   *Flag[00]  .True
  4D0:  		EndIf
  4D8:  EndSwitch
  4E0:  Wait  10`
  4EC:  Call  SetActorSpeed ( .Actor:Self *Fixed[5.0] )
  500:  Call  SetActorJumpGravity   ( .Actor:Self *Fixed[1.8] )
  514:  Call  SetAnimation  ( .Actor:Self 00000001 00340006 )
  52C:  Call  GetActorPos   ( .Actor:Self *Var0 *Var1 *Var2 )
  548:  Call  SetGoalPos    ( .Actor:Self *Var0 *Var1 *Var2 )
  564:  Call  JumpToGoal    ( .Actor:Self  10` .False .False .False )
  584:  Call  SetGoalToTarget   ( .Actor:Self )
  594:  Call  SetActorSpeed ( .Actor:Self *Fixed[8.0] )
  5A8:  Call  SetAnimation  ( .Actor:Self 00000001 00340006 )
  5C0:  Call  FlyToGoal     ( .Actor:Self  0`  -10` .Easing:Linear )
  5DC:  Wait  2`
  5E8:  Call  EnemyDamageTarget ( .Actor:Self *Var0 ~Flags:DamageType:0 00000000 00000000 00000002 00000020 )
  610:  Call  UseBattleCamPreset    ( 00000002 )
  620:  Call  SetGoalToTarget   ( .Actor:Self )
  630:  Call  AddGoalPos    ( .Actor:Self  50`  10`  0` )
  64C:  Call  SetActorSpeed ( .Actor:Self *Fixed[8.0] )
  660:  Call  SetAnimation  ( .Actor:Self 00000001 00340002 )
  678:  Call  FlyToGoal     ( .Actor:Self  0`  -10` .Easing:Linear )
  694:  Wait  10`
  6A0:  Call  YieldTurn ( )
  6AC:  ExecWait  $Script_8021C6C0
  6B8:  Call  EnableIdleScript  ( .Actor:Self 00000001 )
  6CC:  Call  UseIdleAnimation  ( .Actor:Self .True )
  6E0:  Return
  6E8:  End
}

#new:Script $Script_TakeTurn_8021DED4
{
    0:  Call  GetActorVar   ( .Actor:Self 00000008 *Var0 )
   18:  If  *Var0  ==  00000001
   28:  	ExecWait  $Script_8021D7E4
   34:  	Return
   3C:  EndIf
   44:  Call  UseIdleAnimation  ( .Actor:Self .False )
   58:  Call  EnableIdleScript  ( .Actor:Self 00000000 )
   6C:  Call  SetTargetActor    ( .Actor:Self .Actor:Player )
   80:  Call  UseBattleCamPreset    ( 0000003F )
   90:  Call  BattleCamTargetActor  ( .Actor:Self )
   A0:  Call  8024ECF8  ( FFFFFFFF 00000001 00000000 )
   B8:  Call  SetAnimation      ( .Actor:Self 00000001 00340002 )
   D0:  Call  SetActorFlagBits  ( .Actor:Self 00000800 .False )
   E8:  Call  GetActorPos       ( .Actor:Self *Var0 *Var1 *Var2 )
  104:  Sub   *Var1  00000018
  114:  Call  SetActorPos       ( .Actor:Self *Var0 *Var1 *Var2 )
  130:  Call  EnemyTestTarget   ( .Actor:Self *Var0 ~Flags:DamageType:0 00000000 00000002 00000010 )
  154:  Switch  *Var0
  160:  	CaseOR  ==  .HitResult:Miss % 6
  16C:  	CaseOR  ==  .HitResult:Lucky % 5
  178:  		Set   *VarA  *Var0
  188:  		Wait  10`
  194:  		Call  SetActorSpeed ( .Actor:Self *Fixed[5.0] )
  1A8:  		Call  SetActorJumpGravity   ( .Actor:Self *Fixed[1.8] )
  1BC:  		Call  SetAnimation  ( .Actor:Self 00000001 00340006 )
  1D4:  		Call  SetGoalToTarget   ( .Actor:Self )
  1E4:  		Call  GetGoalPos    ( .Actor:Self *Var0 *Var1 *Var2 )
  200:  		Call  AddGoalPos    ( .Actor:Self  -50`  0`  0` )
  21C:  		Call  SetActorSpeed ( .Actor:Self *Fixed[8.0] )
  230:  		Call  SetAnimation  ( .Actor:Self 00000001 00340006 )
  248:  		Call  FlyToGoal     ( .Actor:Self  0`  -40` .Easing:Linear )
  264:  		Call  SetAnimationRate  ( .Actor:Self 00000001 *Fixed[10.0] )
  27C:  		Wait  15`
  288:  		Call  SetAnimationRate  ( .Actor:Self 00000001 *Fixed[1.0] )
  2A0:  		If  *VarA  ==  .HitResult:Lucky % 5
  2B0:  			Call  EnemyTestTarget   ( .Actor:Self *Var0 ~Flags:DamageType:TriggerLucky 00000000 00000000 00000000 )
  2D4:  		EndIf
  2DC:  		Call  YieldTurn ( )
  2E8:  		Call  UseBattleCamPreset    ( 00000002 )
  2F8:  		Call  SetActorYaw   ( .Actor:Self  180` )
  30C:  		Call  AddActorDecoration    ( .Actor:Self 00000001 00000000 .Decoration:Sweat )
  328:  		ExecWait  $Script_8021C6C0
  334:  		Call  RemoveActorDecoration ( .Actor:Self 00000001 00000000 )
  34C:  		Call  SetActorYaw   ( .Actor:Self  0` )
  360:  		Call  EnableIdleScript      ( .Actor:Self 00000001 )
  374:  		Call  UseIdleAnimation      ( .Actor:Self .True )
  388:  		Return
  390:  	EndCaseGroup
  398:  	Case  ==  .HitResult:HitStatic % 7
  3A4:  		Call  GetStatusFlags    ( .Actor:Self *Var0 )
  3B8:  		If  *Var0  &  ~Flags:StatusFlags:Static % 2000
  3C8:  			Set   *Flag[00]  .False
  3D8:  		Else
  3E0:  			Set   *Flag[00]  .True
  3F0:  		EndIf
  3F8:  EndSwitch
  400:  Wait  10`
  40C:  Call  SetActorSpeed     ( .Actor:Self *Fixed[5.0] )
  420:  Call  SetActorJumpGravity   ( .Actor:Self *Fixed[1.8] )
  434:  Call  SetAnimation      ( .Actor:Self 00000001 00340006 )
  44C:  Call  SetGoalToTarget   ( .Actor:Self )
  45C:  Call  SetActorSpeed     ( .Actor:Self *Fixed[8.0] )
  470:  Call  SetAnimation      ( .Actor:Self 00000001 00340006 )
  488:  Call  FlyToGoal ( .Actor:Self  0`  -40` .Easing:Linear )
  4A4:  Wait  2`
  4B0:  Call  EnemyDamageTarget ( .Actor:Self *Var0 ~Flags:DamageType:0 00000000 00000000 00000002 00000020 )
  4D8:  Call  UseBattleCamPreset    ( 00000002 )
  4E8:  Call  SetGoalToTarget   ( .Actor:Self )
  4F8:  Call  AddGoalPos        ( .Actor:Self  50`  10`  0` )
  514:  Call  SetActorSpeed     ( .Actor:Self *Fixed[8.0] )
  528:  Call  SetAnimation      ( .Actor:Self 00000001 00340002 )
  540:  Call  FlyToGoal ( .Actor:Self  0`  -10` .Easing:Linear )
  55C:  Wait  10`
  568:  Call  YieldTurn ( )
  574:  ExecWait  $Script_8021C6C0
  580:  Call  EnableIdleScript  ( .Actor:Self 00000001 )
  594:  Call  UseIdleAnimation  ( .Actor:Self .True )
  5A8:  Return
  5B0:  Call  EnableIdleScript  ( .Actor:Self 00000001 )
  5C4:  Call  UseIdleAnimation  ( .Actor:Self .True )
  5D8:  Return
  5E0:  End
}

PADDING: 8021E4BC to 8021E4C0 (004E8BFC to 004E8C00)
00000000

#new:DefenseTable $DefenseTable_8021E4C0
{
	.Element:Normal 00000002
	.Element:Fire   00000063
	.Element:Blast  00000063
	.Element:End
}

#new:DefenseTable $DefenseTable_8021E4DC
{
	.Element:Normal 00000000
	.Element:End
}

#new:StatusTable $StatusTable_8021E4E8
{
	.Status:Normal      0`
	.Status:Default     0`
	.Status:Sleep      90`
	.Status:Poison     50`
	.Status:Frozen      0`
	.Status:Dizzy      75`
	.Status:Fear        0`
	.Status:Static     50`
	.Status:Paralyze   75`
	.Status:Shrink     90`
	.Status:Stop       90`
	.Status:DefaultTurnMod    0`
	.Status:SleepTurnMod      0`
	.Status:PoisonTurnMod     0`
	.Status:FrozenTurnMod     0`
	.Status:DizzyTurnMod      0`
	.Status:FearTurnMod       0`
	.Status:StaticTurnMod     0`
	.Status:ParalyzeTurnMod   0`
	.Status:ShrinkTurnMod     0`
	.Status:StopTurnMod       0`
	.Status:End
}

#new:PartsTable $PartsTable_8021E594
{
	00800000 01000000 001000FF $IdleAnimations_8021E62C $DefenseTable_8021E4C0 00001000 00000000 01070000 00000000
}

#new:Actor $BuzzyBeetle
{
	% stats
	[Index]        17b
	[Level]        10`b
	[MaxHP]         3`b
	[Coins]         1`b
	[Flags]       00000800
	[StatusTable] $StatusTable_8021E4E8
	% ai
	[PartsCount]    1`s
	[PartsTable]  $PartsTable_8021E594
	[Script]      $Script_Init_8021E6BC
	% move effectiveness
	[Escape]       60`b
	[Item]         75`b
	[AirLift]      75`b
	[Hurricane]    75`b % Bow's "Spook" as well
	[UpAndAway]    95`b
	[PowerBounce]  90`b
	[SpinSmash]     0`b % weight (0-4)
	% ui positions
	[Size]         22`b  18`b % width height
	[HealthBar]     0`b   0`b % dx dy
	[StatusTurn]   -8`b  16`b % dx dy
	[StatusIcon]    8`b  13`b % dx dy
}

#new:IdleAnimations $IdleAnimations_8021E5E0
{
	.Status:Normal    00330001
	.Status:Stone     00330000
	.Status:Sleep     00330009
	.Status:Poison    00330001
	.Status:Stop      00330000
	.Status:Static    00330001
	.Status:Paralyze  00330000
	.Status:Dizzy     0033000A
	.Status:Fear      0033000A
	.Status:End
}

#new:IdleAnimations $IdleAnimations_8021E62C
{
	.Status:Normal    0033000F
	.Status:Stone     0033000E
	.Status:Sleep     00330014
	.Status:Poison    0033000F
	.Status:Stop      0033000E
	.Status:Static    0033000F
	.Status:Paralyze  0033000E
	.Status:Dizzy     00330015
	.Status:Fear      00330015
	.Status:End
}

#new:IdleAnimations $IdleAnimations_8021E678
{
	.Status:Normal    00330002
	.Status:Stone     0033001A
	.Status:Sleep     0033001B
	.Status:Poison    00330002
	.Status:Stop      0033001A
	.Status:Static    00330002
	.Status:Dizzy     0033001C
	.Status:Fear      0033001C
	.Status:End
}

#new:Script $Script_Init_8021E6BC
{
    0:  Call  BindIdle      ( .Actor:Self $Script_Idle_8021E88C )
   14:  Call  GetActorVar   ( .Actor:Self 00000000 *Var0 )
   2C:  If  *Var0  ==  00000001
   3C:  	Call  SetActorVar       ( .Actor:Self 00000008 00000000 )
   54:  	Call  $Function_802181A0    ( FFFFFFF6 00000000 0000000A 00000000 )
   70:  	Call  BindTakeTurn      ( .Actor:Self $Script_TakeTurn_8021FF8C )
   84:  	Call  BindHandleEvent   ( .Actor:Self $Script_HandleEvent_8021ECD0 )
   98:  	Call  SetPartEventBits  ( .Actor:Self 00000001 00001000 .False )
   B4:  Else
   BC:  	Call  SetActorVar       ( .Actor:Self 00000008 00000001 )
   D4:  	Call  SetTargetOffset   ( .Actor:Self 00000001  0`  16` )
   F0:  	Call  8027D4C8  ( FFFFFF81 00000001 FFFFFFFF FFFFFFF7 )
  10C:  	Call  BindTakeTurn      ( .Actor:Self $Script_TakeTurn_80220A44 )
  120:  	Call  BindHandleEvent   ( .Actor:Self $Script_HandleEvent_8021F228 )
  134:  	Call  SetIdleAnimations ( .Actor:Self 00000001 $IdleAnimations_8021E5E0 )
  14C:  	Call  SetActorFlagBits  ( .Actor:Self 00000800 .False )
  164:  	Call  SetPartEventBits  ( .Actor:Self 00000001 00001000 .True )
  180:  EndIf
  188:  Call  HPBarToHome       ( .Actor:Self )
  198:  Call  EnableIdleScript  ( .Actor:Self 00000001 )
  1AC:  Call  UseIdleAnimation  ( .Actor:Self .True )
  1C0:  Return
  1C8:  End
}

#new:Script $Script_Idle_8021E88C
{
    0:  Return
    8:  End
}

#new:Script $Script_8021E89C
{
    0:  Call  8027D32C      ( FFFFFF81 )
   10:  Call  SetActorVar   ( .Actor:Self 00000008 00000002 )
   28:  Call  SetTargetOffset   ( .Actor:Self 00000001  0`  16` )
   44:  Call  8027D4C8      ( FFFFFF81 00000001 FFFFFFFF FFFFFFF7 )
   60:  Call  $Function_802181A0    ( FFFFFFF6 00000014 0000000A 00000014 )
   7C:  Call  BindTakeTurn  ( .Actor:Self $Script_TakeTurn_80220A44 )
   90:  Call  BindHandleEvent   ( .Actor:Self $Script_HandleEvent_8021F228 )
   A4:  Call  SetActorVar   ( .Actor:Self 00000009 00000001 )
   BC:  Call  SetDefenseTable   ( .Actor:Self 00000001 $DefenseTable_8021E4DC )
   D4:  Call  SetIdleAnimations ( .Actor:Self 00000001 $IdleAnimations_8021E678 )
   EC:  Call  SetActorFlagBits  ( .Actor:Self 00000800 .False )
  104:  Call  SetPartEventBits  ( .Actor:Self 00000001 00000010 .False )
  120:  Call  SetPartEventBits  ( .Actor:Self 00000001 00001000 .True )
  13C:  Call  SetActorFlagBits  ( .Actor:Self 00000400 .True )
  154:  Call  SetAnimation  ( .Actor:Self 00000001 00330008 )
  16C:  Call  SetActorYaw   ( .Actor:Self  180` )
  180:  Call  GetActorPos   ( .Actor:Self *Var0 *Var1 *Var2 )
  19C:  Sub   *Var1  00000018
  1AC:  Call  SetActorPos   ( .Actor:Self *Var0 *Var1 *Var2 )
  1C8:  Set   *Var1  00000000
  1D8:  Call  SetActorSounds    ( .Actor:Self .ActorSound:Jump 00000301 00000000 )
  1F4:  Call  SetActorJumpGravity   ( .Actor:Self *Fixed[0.8] )
  208:  Call  SetGoalPos    ( .Actor:Self *Var0 *Var1 *Var2 )
  224:  Call  JumpToGoal    ( .Actor:Self  15` .False .True .False )
  244:  Call  GetIndexFromPos   ( .Actor:Self *VarA )
  258:  Mod   *VarA  00000004
  268:  Call  SetGoalToIndex    ( .Actor:Self *VarA )
  27C:  Call  GetGoalPos    ( .Actor:Self *VarA *VarB *VarC )
  298:  Call  SetHomePos    ( .Actor:Self *VarA *VarB *VarC )
  2B4:  Set   *VarD  *VarA
  2C4:  Set   *VarE  *VarB
  2D4:  Set   *VarF  *VarC
  2E4:  Sub   *VarD  *Var0
  2F4:  Sub   *VarE  *Var1
  304:  Sub   *VarF  *Var2
  314:  Div   *VarD  00000002
  324:  Div   *VarE  00000002
  334:  Div   *VarF  00000002
  344:  Add   *Var0  *VarD
  354:  Add   *Var1  *VarE
  364:  Add   *Var2  *VarF
  374:  Call  ResetAllActorSounds   ( .Actor:Self )
  384:  Call  SetAnimation  ( .Actor:Self 00000001 00330002 )
  39C:  Call  SetGoalPos    ( .Actor:Self *Var0 *Var1 *Var2 )
  3B8:  Call  JumpToGoal    ( .Actor:Self  10` .False .True .False )
  3D8:  Call  SetGoalPos    ( .Actor:Self *VarA *VarB *VarC )
  3F4:  Call  JumpToGoal    ( .Actor:Self  5` .False .True .False )
  414:  Call  HPBarToHome   ( .Actor:Self )
  424:  Return
  42C:  End
}

#new:Script $Script_HandleEvent_8021ECD0
{
    0:  Call  UseIdleAnimation  ( .Actor:Self .False )
   14:  Call  EnableIdleScript  ( .Actor:Self 00000000 )
   28:  Call  GetLastEvent      ( .Actor:Self *Var0 )
   3C:  Switch  *Var0
   48:  	Case  ==  .Event:HitCombo % 9
   54:  		SetConst  *Var0  00000001
   64:  		SetConst  *Var1  00330013
   74:  		ExecWait  DoNormalHit
   80:  	Case  ==  .Event:Hit % A
   8C:  		SetConst  *Var0  00000001
   9C:  		SetConst  *Var1  00330013
   AC:  		ExecWait  DoNormalHit
   B8:  		ExecWait  $Script_8021E89C
   C4:  	Case  ==  .Event:FlipTrigger % D
   D0:  		SetConst  *Var0  00000001
   E0:  		SetConst  *Var1  00330013
   F0:  		ExecWait  DoNormalHit
   FC:  		ExecWait  $Script_8021E89C
  108:  	Case  ==  .Event:BurnHit % E
  114:  		SetConst  *Var0  00000001
  124:  		SetConst  *Var1  00330018
  134:  		SetConst  *Var2  00330018
  144:  		ExecWait  DoBurnHit
  150:  		ExecWait  $Script_8021E89C
  15C:  	Case  ==  .Event:BurnDeath % 24
  168:  		SetConst  *Var0  00000001
  178:  		SetConst  *Var1  00330018
  188:  		SetConst  *Var2  00330018
  198:  		ExecWait  DoBurnHit
  1A4:  		SetConst  *Var0  00000001
  1B4:  		SetConst  *Var1  00330018
  1C4:  		ExecWait  DoDeath
  1D0:  		Return
  1D8:  	Case  ==  .Event:ShockHit % 2F
  1E4:  		SetConst  *Var0  00000001
  1F4:  		SetConst  *Var1  00330013
  204:  		ExecWait  DoShockHit
  210:  		SetConst  *Var0  00000001
  220:  		SetConst  *Var1  00330007
  230:  		ExecWait  DoJumpBack
  23C:  		SetConst  *Var0  00000001
  24C:  		SetConst  *Var1  00330004
  25C:  		ExecWait  DoReturnHome
  268:  	Case  ==  .Event:ShockDeath % 26
  274:  		SetConst  *Var0  00000001
  284:  		SetConst  *Var1  00330013
  294:  		ExecWait  DoShockHit
  2A0:  		SetConst  *Var0  00000001
  2B0:  		SetConst  *Var1  00330007
  2C0:  		ExecWait  DoDeath
  2CC:  		Return
  2D4:  	Case  ==  00000017 % 17
  2E0:  		SetConst  *Var0  00000001
  2F0:  		SetConst  *Var1  00330016
  300:  		ExecWait  DoImmune
  30C:  	Case  ==  .Event:Immune % 19
  318:  		SetConst  *Var0  00000001
  328:  		SetConst  *Var1  00330016
  338:  		ExecWait  DoImmune
  344:  		Wait  2`
  350:  		Call  GetStatusFlags    ( .Actor:Self *Var0 )
  364:  		If  *Var0  !&  ~Flags:StatusFlags:Stop % 200000
  374:  			ExecWait  $Script_8021E89C
  380:  		EndIf
  388:  	Case  ==  .Event:Death % 20
  394:  		SetConst  *Var0  00000001
  3A4:  		SetConst  *Var1  00330013
  3B4:  		ExecWait  DoNormalHit
  3C0:  		Wait  10`
  3CC:  		SetConst  *Var0  00000001
  3DC:  		SetConst  *Var1  00330013
  3EC:  		ExecWait  DoDeath
  3F8:  		Return
  400:  	Case  ==  .Event:RecoverStatus % 31
  40C:  	Case  ==  .Event:ScareAway % 39
  418:  		Call  SetActorFlagBits  ( .Actor:Self 00000200 .True )
  430:  		SetConst  *Var0  00000001
  440:  		SetConst  *Var1  00330011
  450:  		SetConst  *Var2  00330013
  460:  		ExecWait  DoScareAway
  46C:  		Return
  474:  	Default
  47C:  EndSwitch
  484:  Call  EnableIdleScript  ( .Actor:Self 00000001 )
  498:  Call  UseIdleAnimation  ( .Actor:Self .True )
  4AC:  Return
  4B4:  End
}

#new:Script $Script_8021F18C
{
    0:  Call  GetActorVar   ( .Actor:Self 00000008 *Var3 )
   18:  If  *Var3  ==  00000002
   28:  	Set   *Var1  *Var2
   38:  EndIf
   40:  Return
   48:  End
}

#new:IntTable $IntTable_8021F1DC
{
	00000007 0000000D 00000011 00000015 00000017 00000018 00000017 00000015
	00000011 0000000D 00000007 00000000 00000004 00000007 00000006 00000004
	00000000 00000002 00000000
}

#new:Script $Script_HandleEvent_8021F228
{
    0:  Call  UseIdleAnimation  ( .Actor:Self .False )
   14:  Call  EnableIdleScript  ( .Actor:Self 00000000 )
   28:  Call  GetLastEvent      ( .Actor:Self *Var0 )
   3C:  Switch  *Var0
   48:  	CaseOR  ==  .Event:HitCombo % 9
   54:  	CaseOR  ==  .Event:Hit % A
   60:  		SetConst  *Var0  00000001
   70:  		SetConst  *Var1  00330007
   80:  		SetConst  *Var2  00330019
   90:  		ExecWait  $Script_8021F18C
   9C:  		ExecWait  DoNormalHit
   A8:  	EndCaseGroup
   B0:  	Case  ==  .Event:BurnHit % E
   BC:  		Call  GetActorVar   ( .Actor:Self 00000008 *Var0 )
   D4:  		If  *Var0  !=  00000002
   E4:  			SetConst  *Var0  00000001
   F4:  			SetConst  *Var1  0033000B
  104:  			SetConst  *Var2  0033000B
  114:  			ExecWait  DoBurnHit
  120:  		Else
  128:  			SetConst  *Var0  00000001
  138:  			SetConst  *Var1  0033001D
  148:  			SetConst  *Var2  0033001D
  158:  			ExecWait  DoBurnHit
  164:  		EndIf
  16C:  	Case  ==  .Event:BurnDeath % 24
  178:  		Call  GetActorVar   ( .Actor:Self 00000008 *Var0 )
  190:  		If  *Var0  !=  00000002
  1A0:  			SetConst  *Var0  00000001
  1B0:  			SetConst  *Var1  0033000B
  1C0:  			SetConst  *Var2  0033000B
  1D0:  			ExecWait  DoBurnHit
  1DC:  			SetConst  *Var0  00000001
  1EC:  			SetConst  *Var1  0033000B
  1FC:  			ExecWait  DoDeath
  208:  		Else
  210:  			SetConst  *Var0  00000001
  220:  			SetConst  *Var1  0033001D
  230:  			SetConst  *Var2  0033001D
  240:  			ExecWait  DoBurnHit
  24C:  			SetConst  *Var0  00000001
  25C:  			SetConst  *Var1  0033001D
  26C:  			ExecWait  DoDeath
  278:  		EndIf
  280:  		Return
  288:  	Case  ==  .Event:SpinSmashHit % B
  294:  		SetConst  *Var0  00000001
  2A4:  		SetConst  *Var1  00330007
  2B4:  		SetConst  *Var2  00330019
  2C4:  		ExecWait  $Script_8021F18C
  2D0:  		ExecWait  DoSpinSmashHit
  2DC:  	Case  ==  .Event:FlipTrigger % D
  2E8:  		Call  SetActorVar       ( .Actor:Self 00000008 00000002 )
  300:  		Call  SetTargetOffset   ( .Actor:Self 00000001  0`  16` )
  31C:  		Call  8027D4C8  ( FFFFFF81 00000001 FFFFFFFF FFFFFFF7 )
  338:  		Call  SetActorVar       ( .Actor:Self 00000009 00000001 )
  350:  		Call  SetDefenseTable   ( .Actor:Self 00000001 $DefenseTable_8021E4DC )
  368:  		Call  SetIdleAnimations ( .Actor:Self 00000001 $IdleAnimations_8021E678 )
  380:  		Call  SetActorFlagBits  ( .Actor:Self 00000400 .True )
  398:  		Call  SetAnimation      ( .Actor:Self 00000001 00330007 )
  3B0:  		Call  SetActorRotationOffset    ( .Actor:Self 00000000 0000000C 00000000 )
  3CC:  		Thread
  3D4:  			Wait  1`
  3E0:  			Call  SetActorRotation  ( .Actor:Self 00000000 00000000 00000000 )
  3FC:  			Wait  1`
  408:  			Call  SetActorRotation  ( .Actor:Self 00000000 00000000 FFFFFFD3 )
  424:  			Wait  1`
  430:  			Call  SetActorRotation  ( .Actor:Self 00000000 00000000 FFFFFFA6 )
  44C:  			Wait  1`
  458:  			Call  SetActorRotation  ( .Actor:Self 00000000 00000000 FFFFFF79 )
  474:  			Wait  1`
  480:  			Call  SetActorRotation  ( .Actor:Self 00000000 00000000 FFFFFF4C )
  49C:  			Wait  1`
  4A8:  		EndThread
  4B0:  		UseIntBuffer  $IntTable_8021F1DC
  4BC:  		Loop  00000013
  4C8:  			Get1Int  *Var0
  4D4:  			Call  SetActorDispOffset    ( .Actor:Self 00000000 *Var0 00000000 )
  4F0:  			Wait  1`
  4FC:  		EndLoop
  504:  		Call  SetActorDispOffset    ( .Actor:Self 00000000 00000000 00000000 )
  520:  		Call  SetActorRotationOffset    ( .Actor:Self 00000000 00000000 00000000 )
  53C:  		Call  SetActorRotation      ( .Actor:Self 00000000 00000000 00000000 )
  558:  		Call  SetAnimation  ( .Actor:Self 00000001 00330019 )
  570:  	Case  ==  .Event:ShockHit % 2F
  57C:  		SetConst  *Var0  00000001
  58C:  		SetConst  *Var1  00330007
  59C:  		ExecWait  DoShockHit
  5A8:  		SetConst  *Var0  00000001
  5B8:  		SetConst  *Var1  00330007
  5C8:  		ExecWait  DoJumpBack
  5D4:  		SetConst  *Var0  00000001
  5E4:  		SetConst  *Var1  00330004
  5F4:  		ExecWait  DoReturnHome
  600:  	Case  ==  .Event:ShockDeath % 26
  60C:  		SetConst  *Var0  00000001
  61C:  		SetConst  *Var1  00330007
  62C:  		ExecWait  DoShockHit
  638:  		SetConst  *Var0  00000001
  648:  		SetConst  *Var1  00330007
  658:  		ExecWait  DoDeath
  664:  		Return
  66C:  	Case  ==  00000017 % 17
  678:  		Call  GetActorVar   ( .Actor:Self 00000008 *Var0 )
  690:  		If  *Var0  ==  00000001
  6A0:  			SetConst  *Var0  00000001
  6B0:  			SetConst  *Var1  0033000C
  6C0:  			ExecWait  DoImmune
  6CC:  			Call  SetAnimation  ( .Actor:Self 00000001 00330017 )
  6E4:  			Wait  8`
  6F0:  		Else
  6F8:  			SetConst  *Var0  00000001
  708:  			SetConst  *Var1  00330002
  718:  			ExecWait  DoImmune
  724:  		EndIf
  72C:  	Case  ==  .Event:Immune % 19
  738:  		Call  GetActorVar   ( .Actor:Self 00000008 *Var0 )
  750:  		If  *Var0  ==  00000001
  760:  			SetConst  *Var0  00000001
  770:  			SetConst  *Var1  0033000C
  780:  			ExecWait  DoImmune
  78C:  			Call  SetAnimation  ( .Actor:Self 00000001 0033000D )
  7A4:  			Wait  8`
  7B0:  		Else
  7B8:  			SetConst  *Var0  00000001
  7C8:  			SetConst  *Var1  00330002
  7D8:  			ExecWait  DoImmune
  7E4:  		EndIf
  7EC:  	Case  ==  .Event:SpikeTaunt % 1B
  7F8:  		Wait  10`
  804:  		Call  GetActorPos       ( .Actor:Self *Var0 *Var1 *Var2 )
  820:  		Call  GetStatusFlags    ( .Actor:Self *Var3 )
  834:  		If  *Var3  &  ~Flags:StatusFlags:Shrink % 80000
  844:  			Add   *Var1  00000009
  854:  		Else
  85C:  			Add   *Var1  00000018
  86C:  		EndIf
  874:  		Call  PlayEffect    ( ~FX:LensFlare:Rotating *Var0 *Var1 *Var2 00000014 00000000 00000000 00000000 00000000 00000000 00000000 00000000 00000000 )
  8B8:  		Wait  20`
  8C4:  	Case  ==  .Event:Death % 20
  8D0:  		SetConst  *Var0  00000001
  8E0:  		SetConst  *Var1  00330007
  8F0:  		SetConst  *Var2  00330019
  900:  		ExecWait  $Script_8021F18C
  90C:  		ExecWait  DoNormalHit
  918:  		Wait  10`
  924:  		SetConst  *Var0  00000001
  934:  		SetConst  *Var1  00330007
  944:  		SetConst  *Var2  00330019
  954:  		ExecWait  $Script_8021F18C
  960:  		ExecWait  DoDeath
  96C:  		Return
  974:  	Case  ==  .Event:SpinSmashDeath % 21
  980:  		SetConst  *Var0  00000001
  990:  		SetConst  *Var1  00330007
  9A0:  		SetConst  *Var2  00330019
  9B0:  		ExecWait  $Script_8021F18C
  9BC:  		ExecWait  DoSpinSmashHit
  9C8:  		SetConst  *Var0  00000001
  9D8:  		SetConst  *Var1  00330007
  9E8:  		SetConst  *Var2  00330019
  9F8:  		ExecWait  $Script_8021F18C
  A04:  		ExecWait  DoDeath
  A10:  		Return
  A18:  	Case  ==  .Event:RecoverStatus % 31
  A24:  		Call  GetActorVar   ( .Actor:Self 00000008 *Var0 )
  A3C:  		If  *Var0  ==  00000001
  A4C:  			SetConst  *Var0  00000001
  A5C:  			SetConst  *Var1  00330001
  A6C:  			ExecWait  DoRecover
  A78:  		EndIf
  A80:  	Case  ==  .Event:ScareAway % 39
  A8C:  		Call  GetActorVar   ( .Actor:Self 00000008 *Var0 )
  AA4:  		If  *Var0  ==  00000001
  AB4:  			SetConst  *Var0  00000001
  AC4:  			SetConst  *Var1  00330004
  AD4:  			SetConst  *Var2  00330007
  AE4:  			ExecWait  DoScareAway
  AF0:  			Return
  AF8:  		Else
  B00:  			SetConst  *Var0  00000001
  B10:  			SetConst  *Var1  00330002
  B20:  			ExecWait  DoImmune
  B2C:  		EndIf
  B34:  	Case  ==  .Event:BeginAirLift % 3A
  B40:  		Call  GetActorVar   ( .Actor:Self 00000008 *Var0 )
  B58:  		If  *Var0  ==  00000001
  B68:  			SetConst  *Var0  00000001
  B78:  			SetConst  *Var1  00330004
  B88:  		Else
  B90:  			SetConst  *Var0  00000001
  BA0:  			SetConst  *Var1  00330002
  BB0:  		EndIf
  BB8:  		ExecWait  DoAirLift
  BC4:  	Case  ==  .Event:BlowAway % 16
  BD0:  		Call  GetActorVar   ( .Actor:Self 00000008 *Var0 )
  BE8:  		If  *Var0  ==  00000001
  BF8:  			SetConst  *Var0  00000001
  C08:  			SetConst  *Var1  00330007
  C18:  		Else
  C20:  			SetConst  *Var0  00000001
  C30:  			SetConst  *Var1  00330008
  C40:  		EndIf
  C48:  		ExecWait  DoBlowAway
  C54:  		Return
  C5C:  	Case  ==  .Event:AirLiftFailed % 1F
  C68:  		Call  GetActorVar   ( .Actor:Self 00000008 *Var0 )
  C80:  		If  *Var0  ==  00000001
  C90:  			SetConst  *Var0  00000001
  CA0:  			SetConst  *Var1  0033000C
  CB0:  			ExecWait  DoImmune
  CBC:  			Call  SetAnimation  ( .Actor:Self 00000001 0033000D )
  CD4:  			Wait  8`
  CE0:  		Else
  CE8:  			SetConst  *Var0  00000001
  CF8:  			SetConst  *Var1  00330002
  D08:  			ExecWait  DoImmune
  D14:  		EndIf
  D1C:  	Default
  D24:  EndSwitch
  D2C:  Call  EnableIdleScript  ( .Actor:Self 00000001 )
  D40:  Call  UseIdleAnimation  ( .Actor:Self .True )
  D54:  Return
  D5C:  End
}

#new:Script $Script_TakeTurn_8021FF8C
{
    0:  Call  UseIdleAnimation  ( .Actor:Self .False )
   14:  Call  EnableIdleScript  ( .Actor:Self 00000000 )
   28:  Call  SetTargetActor    ( .Actor:Self .Actor:Player )
   3C:  Call  SetActorVar       ( .Actor:Self 00000008 00000001 )
   54:  Call  SetTargetOffset   ( .Actor:Self 00000001  0`  16` )
   70:  Call  8027D4C8  ( FFFFFF81 00000001 FFFFFFFF FFFFFFF7 )
   8C:  Call  $Function_802181A0    ( FFFFFFF6 00000014 0000000A 00000014 )
   A8:  Call  BindTakeTurn      ( .Actor:Self $Script_TakeTurn_80220A44 )
   BC:  Call  BindHandleEvent   ( .Actor:Self $Script_HandleEvent_8021F228 )
   D0:  Call  SetIdleAnimations ( .Actor:Self 00000001 $IdleAnimations_8021E5E0 )
   E8:  Call  SetActorFlagBits  ( .Actor:Self 00000800 .False )
  100:  Call  SetPartEventBits  ( .Actor:Self 00000001 00001000 .True )
  11C:  Call  GetIndexFromPos   ( .Actor:Self *Var0 )
  130:  Mod   *Var0  00000004
  140:  Call  SetGoalToIndex    ( .Actor:Self *Var0 )
  154:  Call  GetGoalPos        ( .Actor:Self *Var0 *Var1 *Var2 )
  170:  Call  SetHomePos        ( .Actor:Self *Var0 *Var1 *Var2 )
  18C:  Call  HPBarToHome       ( .Actor:Self )
  19C:  Call  UseBattleCamPreset    ( 0000003F )
  1AC:  Call  BattleCamTargetActor  ( .Actor:Self )
  1BC:  Call  8024ECF8  ( FFFFFFFF 00000001 00000000 )
  1D4:  Call  GetBattlePhase    ( *Var0 )
  1E4:  If  *Var0  ==  00000001
  1F4:  	Call  SetGoalToTarget   ( .Actor:Self )
  204:  	Call  GetActorPos   ( .Actor:Self *Var3 *Var4 *Var5 )
  220:  	Call  GetGoalPos    ( .Actor:Self *Var0 *Var1 *Var2 )
  23C:  	Call  SetActorPos   ( .Actor:Self *Var0 *Var4 *Var2 )
  258:  	Call  SetAnimation  ( .Actor:Self 00000001 0033000E )
  270:  Else
  278:  	Call  SetAnimation  ( .Actor:Self 00000001 00330011 )
  290:  	Call  SetGoalToTarget   ( .Actor:Self )
  2A0:  	Call  GetActorPos   ( .Actor:Self *Var3 *Var4 *Var5 )
  2BC:  	Call  GetGoalPos    ( .Actor:Self *Var0 *Var1 *Var2 )
  2D8:  	Call  SetGoalPos    ( .Actor:Self *Var0 *Var4 *Var2 )
  2F4:  	Call  SetActorSpeed ( .Actor:Self *Fixed[6.0] )
  308:  	Call  RunToGoal     ( .Actor:Self  0` .False )
  320:  	Call  SetAnimation  ( .Actor:Self 00000001 0033000E )
  338:  	Wait  8`
  344:  EndIf
  34C:  Call  SetActorSounds    ( .Actor:Self .ActorSound:Jump 00000301 00000000 )
  368:  Call  GetBattlePhase    ( *Var0 )
  378:  If  *Var0  ==  00000001
  388:  	Call  UseBattleCamPreset    ( 00000005 )
  398:  	Call  SetBattleCamZoom      (  430` )
  3A8:  	Call  SetBattleCamOffsetZ   (  20` )
  3B8:  	Call  MoveBattleCamOver     (  10` )
  3C8:  	Call  8024ECF8  ( FFFFFFFF 00000001 00000000 )
  3E0:  EndIf
  3E8:  Call  EnemyTestTarget   ( .Actor:Self *Var0 ~Flags:DamageType:0 00000000 00000003 00000010 )
  40C:  Switch  *Var0
  418:  	CaseOR  ==  .HitResult:Miss % 6
  424:  	CaseOR  ==  .HitResult:Lucky % 5
  430:  		Set   *VarA  *Var0
  440:  		Call  SetActorYaw   ( .Actor:Self  180` )
  454:  		Call  SetPartYaw    ( .Actor:Self 00000001  180` )
  46C:  		Call  SetAnimation  ( .Actor:Self 00000001 00330008 )
  484:  		Call  GetActorPos   ( .Actor:Self *Var0 *Var1 *Var2 )
  4A0:  		Sub   *Var1  00000018
  4B0:  		Call  SetActorPos   ( .Actor:Self *Var0 *Var1 *Var2 )
  4CC:  		Call  SetActorJumpGravity   ( .Actor:Self *Fixed[0.8] )
  4E0:  		Call  GetActorPos   ( .Actor:Self *Var0 *Var1 *Var2 )
  4FC:  		Set   *Var1  00000000
  50C:  		Call  SetGoalPos    ( .Actor:Self *Var0 *Var1 *Var2 )
  528:  		Call  JumpToGoal    ( .Actor:Self  15` .False .True .False )
  548:  		If  *VarA  ==  .HitResult:Lucky % 5
  558:  			Call  EnemyTestTarget   ( .Actor:Self *Var0 ~Flags:DamageType:TriggerLucky 00000000 00000000 00000000 )
  57C:  		EndIf
  584:  		Call  ResetAllActorSounds   ( .Actor:Self )
  594:  		Add   *Var0  0000001E
  5A4:  		Call  SetGoalPos    ( .Actor:Self *Var0 *Var1 *Var2 )
  5C0:  		Call  JumpToGoal    ( .Actor:Self  15` .False .True .False )
  5E0:  		Thread
  5E8:  			Wait  5`
  5F4:  			Call  SetAnimation  ( .Actor:Self 00000001 00330000 )
  60C:  		EndThread
  614:  		Add   *Var0  00000014
  624:  		Call  SetGoalPos    ( .Actor:Self *Var0 *Var1 *Var2 )
  640:  		Call  JumpToGoal    ( .Actor:Self  8` .False .True .False )
  660:  		Wait  8`
  66C:  		Call  UseBattleCamPreset    ( 00000002 )
  67C:  		Call  YieldTurn ( )
  688:  		Call  SetGoalToHome ( .Actor:Self )
  698:  		Call  SetActorSpeed ( .Actor:Self *Fixed[6.0] )
  6AC:  		Call  SetAnimation  ( .Actor:Self 00000001 00330004 )
  6C4:  		Call  AddActorDecoration    ( .Actor:Self 00000001 00000000 .Decoration:Sweat )
  6E0:  		Call  RunToGoal     ( .Actor:Self  0` .False )
  6F8:  		Call  SetAnimation  ( .Actor:Self 00000001 00330001 )
  710:  		Call  RemoveActorDecoration ( .Actor:Self 00000001 00000000 )
  728:  		Call  SetActorYaw   ( .Actor:Self  0` )
  73C:  		Call  EnableIdleScript      ( .Actor:Self 00000001 )
  750:  		Call  UseIdleAnimation      ( .Actor:Self .True )
  764:  		Return
  76C:  	EndCaseGroup
  774:  EndSwitch
  77C:  Call  SetActorYaw   ( .Actor:Self  180` )
  790:  Call  SetAnimation  ( .Actor:Self 00000001 00330008 )
  7A8:  Call  GetActorPos   ( .Actor:Self *Var0 *Var1 *Var2 )
  7C4:  Sub   *Var1  00000018
  7D4:  Call  SetActorPos   ( .Actor:Self *Var0 *Var1 *Var2 )
  7F0:  Call  SetActorJumpGravity   ( .Actor:Self *Fixed[0.8] )
  804:  Call  SetGoalToTarget       ( .Actor:Self )
  814:  Call  GetGoalPos    ( .Actor:Self *Var3 *Var4 *Var5 )
  830:  Call  GetActorPos   ( .Actor:Self *Var0 *Var1 *Var2 )
  84C:  Set   *Var1  *Var4
  85C:  Call  SetGoalPos    ( .Actor:Self *Var0 *Var1 *Var2 )
  878:  Call  JumpToGoal    ( .Actor:Self  15` .False .True .False )
  898:  Call  ResetAllActorSounds   ( .Actor:Self )
  8A8:  Wait  2`
  8B4:  Call  EnemyDamageTarget     ( .Actor:Self *Var0 ~Flags:DamageType:0 0000FFFF 00000000 00000003 00000020 )
  8DC:  Switch  *Var0
  8E8:  	CaseOR  ==  .HitResult:Hit % 0
  8F4:  	CaseOR  ==  .HitResult:QuakeImmune % 2
  900:  		Call  UseBattleCamPreset    ( 00000002 )
  910:  		Call  GetActorPos   ( .Actor:Self *Var0 *Var1 *Var2 )
  92C:  		Add   *Var0  0000001E
  93C:  		Set   *Var1  00000000
  94C:  		Call  SetGoalPos    ( .Actor:Self *Var0 *Var1 *Var2 )
  968:  		Call  JumpToGoal    ( .Actor:Self  15` .False .True .False )
  988:  		Thread
  990:  			Wait  5`
  99C:  			Call  SetAnimation  ( .Actor:Self 00000001 00330000 )
  9B4:  		EndThread
  9BC:  		Add   *Var0  00000014
  9CC:  		Call  SetGoalPos    ( .Actor:Self *Var0 *Var1 *Var2 )
  9E8:  		Call  JumpToGoal    ( .Actor:Self  8` .False .True .False )
  A08:  		Wait  8`
  A14:  		Call  YieldTurn ( )
  A20:  		SetConst  *Var0  00000001
  A30:  		SetConst  *Var1  00330004
  A40:  		ExecWait  DoReturnHome
  A4C:  		Call  SetAnimation  ( .Actor:Self 00000001 00330001 )
  A64:  	EndCaseGroup
  A6C:  EndSwitch
  A74:  Label  A
  A80:  Call  EnableIdleScript  ( .Actor:Self 00000001 )
  A94:  Call  UseIdleAnimation  ( .Actor:Self .True )
  AA8:  Return
  AB0:  End
}

#new:Script $Script_TakeTurn_80220A44
{
    0:  Call  UseIdleAnimation  ( .Actor:Self .False )
   14:  Call  EnableIdleScript  ( .Actor:Self 00000000 )
   28:  Call  GetActorVar       ( .Actor:Self 00000008 *Var0 )
   40:  If  *Var0  ==  00000002
   50:  	Call  GetActorVar   ( .Actor:Self 00000009 *Var0 )
   68:  	Sub   *Var0  00000001
   78:  	If  *Var0  >  00000000
   88:  		Call  SetActorVar   ( .Actor:Self 00000009 *Var0 )
   A0:  		Call  AddActorDecoration    ( .Actor:Self 00000001 00000000 .Decoration:Sweat )
   BC:  		Wait  30`
   C8:  		Call  RemoveActorDecoration ( .Actor:Self 00000001 00000000 )
   E0:  		Call  UseBattleCamPreset    ( 00000002 )
   F0:  	Else
   F8:  		Call  AddActorDecoration    ( .Actor:Self 00000001 00000000 .Decoration:Sweat )
  114:  		Wait  20`
  120:  		Call  RemoveActorDecoration ( .Actor:Self 00000001 00000000 )
  138:  		SetConst  *Var0  00000001
  148:  		SetConst  *Var1  00330002
  158:  		SetConst  *Var2  00330001
  168:  		ExecWait  8029BBB4
  174:  		Call  SetActorYaw       ( .Actor:Self  0` )
  188:  		Call  SetActorVar       ( .Actor:Self 00000008 00000001 )
  1A0:  		Call  SetTargetOffset   ( .Actor:Self 00000001  0`  16` )
  1BC:  		Call  8027D4C8  ( FFFFFF81 00000001 FFFFFFFF FFFFFFF7 )
  1D8:  		Call  SetDefenseTable   ( .Actor:Self 00000001 $DefenseTable_8021E4C0 )
  1F0:  		Call  SetIdleAnimations ( .Actor:Self 00000001 $IdleAnimations_8021E5E0 )
  208:  		Call  BindIdle  ( .Actor:Self $Script_Idle_8021E88C )
  21C:  		Call  SetActorFlagBits  ( .Actor:Self 00000400 .False )
  234:  	EndIf
  23C:  	Call  EnableIdleScript  ( .Actor:Self 00000001 )
  250:  	Call  UseIdleAnimation  ( .Actor:Self .True )
  264:  	Return
  26C:  EndIf
  274:  Call  SetTargetActor    ( .Actor:Self .Actor:Player )
  288:  Call  UseBattleCamPreset    ( 0000003F )
  298:  Call  BattleCamTargetActor  ( .Actor:Self )
  2A8:  Call  8024ECF8  ( FFFFFFFF 00000001 00000000 )
  2C0:  Call  SetAnimation      ( .Actor:Self 00000001 0033000C )
  2D8:  Wait  10`
  2E4:  Call  SetAnimation      ( .Actor:Self 00000001 00330006 )
  2FC:  Thread
  304:  	Call  GetActorPos   ( .Actor:Self *Var0 *Var1 *Var2 )
  320:  	Call  PlayEffect    ( ~FX:SmokeImpact:Small *Var0 *Var1 *Var2 00000020 00000004 00000000 0000000A 00000000 00000000 00000000 00000000 00000000 )
  364:  	Wait  10`
  370:  	Call  PlayEffect    ( ~FX:SmokeImpact:Small *Var0 *Var1 *Var2 00000020 00000004 00000000 0000000A 00000000 00000000 00000000 00000000 00000000 )
  3B4:  	Wait  5`
  3C0:  	Call  PlayEffect    ( ~FX:SmokeImpact:Small *Var0 *Var1 *Var2 00000020 00000004 00000000 0000000A 00000000 00000000 00000000 00000000 00000000 )
  404:  EndThread
  40C:  Call  PlaySoundAtActor  ( .Actor:Self 00002021 )
  420:  Call  SetAnimation      ( .Actor:Self 00000001 00330005 )
  438:  Wait  20`
  444:  Call  SetActorSounds    ( .Actor:Self .ActorSound:Walk 00000000 00000000 )
  460:  Call  PlaySoundAtActor  ( .Actor:Self 000020D3 )
  474:  Call  EnemyTestTarget   ( .Actor:Self *Var0 ~Flags:DamageType:0 00000000 00000002 00000010 )
  498:  Switch  *Var0
  4A4:  	CaseOR  ==  .HitResult:Miss % 6
  4B0:  	CaseOR  ==  .HitResult:Lucky % 5
  4BC:  		Set   *VarA  *Var0
  4CC:  		Thread
  4D4:  			Loop
  4E0:  				Call  GetActorPos   ( .Actor:Player *Var0 *Var1 *Var2 )
  4FC:  				Add   *Var0  0000001E
  50C:  				Call  GetActorPos   ( .Actor:Self *Var3 *Var4 *Var5 )
  528:  				If  *Var0  >  *Var3
  538:  					BreakLoop
  540:  				EndIf
  548:  				Wait  1`
  554:  			EndLoop
  55C:  			Call  UseBattleCamPreset    ( 00000001 )
  56C:  			If  *VarA  ==  .HitResult:Lucky % 5
  57C:  				Call  EnemyTestTarget   ( .Actor:Self *Var0 ~Flags:DamageType:TriggerLucky 00000000 00000000 00000000 )
  5A0:  			EndIf
  5A8:  			Wait  15`
  5B4:  			Call  UseBattleCamPreset    ( 00000002 )
  5C4:  		EndThread
  5CC:  		Call  SetGoalToTarget       ( .Actor:Self )
  5DC:  		Call  AddGoalPos    ( .Actor:Self  -150`  0`  0` )
  5F8:  		Call  SetActorSpeed ( .Actor:Self *Fixed[14.0] )
  60C:  		Call  RunToGoal     ( .Actor:Self  0` .False )
  624:  		Wait  15`
  630:  		Call  YieldTurn ( )
  63C:  		Call  ResetAllActorSounds   ( .Actor:Self )
  64C:  		Call  AddActorDecoration    ( .Actor:Self 00000001 00000000 .Decoration:Sweat )
  668:  		Call  SetGoalToHome ( .Actor:Self )
  678:  		Call  GetGoalPos    ( .Actor:Self *Var0 *Var1 *Var2 )
  694:  		Add   *Var0  000000C8
  6A4:  		Call  SetActorPos   ( .Actor:Self *Var0 *Var1 *Var2 )
  6C0:  		Call  SetActorSpeed ( .Actor:Self *Fixed[10.0] )
  6D4:  		Call  RunToGoal     ( .Actor:Self  0` .False )
  6EC:  		Wait  10`
  6F8:  		Call  SetAnimation  ( .Actor:Self 00000001 0033000D )
  710:  		Wait  10`
  71C:  		Call  RemoveActorDecoration ( .Actor:Self 00000001 00000000 )
  734:  		Call  EnableIdleScript      ( .Actor:Self 00000001 )
  748:  		Call  UseIdleAnimation      ( .Actor:Self .True )
  75C:  		Return
  764:  	EndCaseGroup
  76C:  EndSwitch
  774:  Call  SetGoalToTarget   ( .Actor:Self )
  784:  Call  SetActorSpeed     ( .Actor:Self *Fixed[14.0] )
  798:  Call  RunToGoal ( .Actor:Self  0` .False )
  7B0:  Wait  2`
  7BC:  Call  EnemyDamageTarget ( .Actor:Self *Var0 ~Flags:DamageType:0 0000FFFF 00000000 00000002 00000020 )
  7E4:  Switch  *Var0
  7F0:  	CaseOR  ==  .HitResult:Hit % 0
  7FC:  	CaseOR  ==  .HitResult:QuakeImmune % 2
  808:  		Call  UseBattleCamPreset    ( 00000002 )
  818:  		Call  GetGoalPos    ( .Actor:Self *Var0 *Var1 *Var2 )
  834:  		Add   *Var0  00000028
  844:  		Set   *Var1  00000000
  854:  		Call  SetActorJumpGravity   ( .Actor:Self *Fixed[1.8] )
  868:  		Call  SetGoalPos    ( .Actor:Self *Var0 *Var1 *Var2 )
  884:  		Call  JumpToGoal    ( .Actor:Self  10` .False .True .False )
  8A4:  		Add   *Var0  0000001E
  8B4:  		Call  SetGoalPos    ( .Actor:Self *Var0 *Var1 *Var2 )
  8D0:  		Call  JumpToGoal    ( .Actor:Self  8` .False .True .False )
  8F0:  		Add   *Var0  00000014
  900:  		Call  SetGoalPos    ( .Actor:Self *Var0 *Var1 *Var2 )
  91C:  		Call  JumpToGoal    ( .Actor:Self  6` .False .True .False )
  93C:  		Call  SetAnimation  ( .Actor:Self 00000001 00330001 )
  954:  		Wait  8`
  960:  		Call  YieldTurn ( )
  96C:  		Call  ResetAllActorSounds   ( .Actor:Self )
  97C:  		SetConst  *Var0  00000001
  98C:  		SetConst  *Var1  00330004
  99C:  		ExecWait  DoReturnHome
  9A8:  		Call  SetAnimation  ( .Actor:Self 00000001 00330001 )
  9C0:  	EndCaseGroup
  9C8:  EndSwitch
  9D0:  Call  EnableIdleScript  ( .Actor:Self 00000001 )
  9E4:  Call  UseIdleAnimation  ( .Actor:Self .True )
  9F8:  Return
  A00:  End
}

PADDING: 8022144C to 80221450 (004EBB8C to 004EBB90)
00000000

#new:IdleAnimations $IdleAnimations_80221450
{
	.Status:Normal    00350001
	.Status:Stone     00350000
	.Status:Sleep     0035000A
	.Status:Poison    00350001
	.Status:Stop      00350000
	.Status:Static    00350001
	.Status:Dizzy     0035000B
	.Status:End
}

#new:IdleAnimations $IdleAnimations_8022148C
{
	.Status:Normal    00350003
	.Status:Poison    00350003
	.Status:Stop      00350000
	.Status:Stone     00350000
	.Status:Sleep     0035000A
	.Status:Static    00350003
	.Status:Dizzy     0035000B
	.Status:End
}

#new:IdleAnimations $IdleAnimations_802214C8
{
	.Status:Normal    00350004
	.Status:Poison    00350004
	.Status:Stop      00350000
	.Status:Stone     00350000
	.Status:Sleep     0035000A
	.Status:Static    00350004
	.Status:Dizzy     0035000B
	.Status:End
}

#new:IdleAnimations $IdleAnimations_80221504
{
	.Status:Normal    00350005
	.Status:Poison    00350005
	.Status:Stop      00350000
	.Status:Stone     00350000
	.Status:Sleep     0035000A
	.Status:Static    00350005
	.Status:Dizzy     0035000B
	.Status:End
}

#new:IdleAnimations $IdleAnimations_80221540
{
	.Status:Normal    00350002
	.Status:End
}

#new:DefenseTable $DefenseTable_8022154C
{
	.Element:Normal 00000001
	.Element:End
}

#new:StatusTable $StatusTable_80221558
{
	.Status:Normal      0`
	.Status:Default     0`
	.Status:Sleep       0`
	.Status:Poison      0`
	.Status:Frozen      0`
	.Status:Dizzy      75`
	.Status:Fear        0`
	.Status:Static      0`
	.Status:Paralyze   50`
	.Status:Shrink     75`
	.Status:Stop       75`
	.Status:DefaultTurnMod    0`
	.Status:SleepTurnMod     -1`
	.Status:PoisonTurnMod     0`
	.Status:FrozenTurnMod     0`
	.Status:DizzyTurnMod     -1`
	.Status:FearTurnMod       0`
	.Status:StaticTurnMod     0`
	.Status:ParalyzeTurnMod   0`
	.Status:ShrinkTurnMod     0`
	.Status:StopTurnMod      -1`
	.Status:End
}

#new:PartsTable $PartsTable_80221604
{
	00020000 01000000 001800FF $IdleAnimations_80221450 $DefenseTable_8022154C 00000000 00000000 00000000 00000000
	00900001 02000000 F32800FF $IdleAnimations_80221450 $DefenseTable_8022154C 00000000 00000000 00F20000 00000000
	00124002 03000000 000C00FF $IdleAnimations_80221540 $DefenseTable_8022154C 00000000 00000000 00000000 00000000
	00124002 04000000 000C00FF $IdleAnimations_80221540 $DefenseTable_8022154C 00000000 00000000 00000000 00000000
	00124002 05000000 000C00FF $IdleAnimations_80221540 $DefenseTable_8022154C 00000000 00000000 00000000 00000000
	00124002 06000000 000C00FF $IdleAnimations_80221540 $DefenseTable_8022154C 00000000 00000000 00000000 00000000
	00124002 07000000 000C00FF $IdleAnimations_80221540 $DefenseTable_8022154C 00000000 00000000 00000000 00000000
	00124002 08000000 000C00FF $IdleAnimations_80221540 $DefenseTable_8022154C 00000000 00000000 00000000 00000000
	00124002 09000000 000C00FF $IdleAnimations_80221540 $DefenseTable_8022154C 00000000 00000000 00000000 00000000
	00124002 0A000000 000C00FF $IdleAnimations_80221540 $DefenseTable_8022154C 00000000 00000000 00000000 00000000
}

#new:Actor $StoneChomp
{
	% stats
	[Index]        18b
	[Level]        14`b
	[MaxHP]         4`b
	[Coins]         5`b
	[Flags]       00000000
	[StatusTable] $StatusTable_80221558
	% ai
	[PartsCount]   10`s
	[PartsTable]  $PartsTable_80221604
	[Script]      $Script_Init_80221ABC
	% move effectiveness
	[Escape]        0`b
	[Item]          0`b
	[AirLift]      25`b
	[Hurricane]    25`b % Bow's "Spook" as well
	[UpAndAway]    95`b
	[PowerBounce]  85`b
	[SpinSmash]     0`b % weight (0-4)
	% ui positions
	[Size]         56`b  40`b % width height
	[HealthBar]     0`b   0`b % dx dy
	[StatusTurn]  -10`b  20`b % dx dy
	[StatusIcon]   10`b  20`b % dx dy
}

#new:Script $Script_80221794
{
    0:  Call  SetAnimation  ( .Actor:Self *Var0 *Var1 )
   18:  Call  SetGoalToHome ( .Actor:Self )
   28:  Call  GetGoalPos    ( .Actor:Self *Var0 *Var1 *Var2 )
   44:  Call  SetActorSpeed ( .Actor:Self *Fixed[8.0] )
   58:  Call  SetActorJumpGravity   ( .Actor:Self *Fixed[2.0] )
   6C:  ExecWait  $Script_8022181C
   78:  Return
   80:  End
}

#new:Script $Script_8022181C
{
    0:  Call  GetActorPos   ( .Actor:Self *Var3 *Var4 *Var5 )
   1C:  Label  0
   28:  Call  GetActorPos   ( .Actor:Self *Var3 *Var4 *Var5 )
   44:  If  *Var3  ==  *Var0
   54:  	Goto  A
   60:  EndIf
   68:  If  *Var3  <  *Var0
   78:  	Set   *Var4  *Var0
   88:  	Sub   *Var4  *Var3
   98:  	If  *Var4  <  0000001E
   A8:  		Call  SetGoalPos        ( .Actor:Self *Var0 *Var1 *Var2 )
   C4:  		Call  JumpToGoal        ( .Actor:Self  5` .False .True .False )
   E4:  		Call  PlaySoundAtActor  ( .Actor:Self 000003F9 )
   F8:  	Else
  100:  		Set   *Var4  *Var3
  110:  		Add   *Var3  0000001E
  120:  		Call  SetGoalPos        ( .Actor:Self *Var3 *Var1 *Var2 )
  13C:  		Call  JumpToGoal        ( .Actor:Self  0` .False .True .False )
  15C:  		Call  PlaySoundAtActor  ( .Actor:Self 000003F9 )
  170:  	EndIf
  178:  Else
  180:  	Set   *Var4  *Var3
  190:  	Sub   *Var4  *Var0
  1A0:  	If  *Var4  <  0000001E
  1B0:  		Call  SetGoalPos        ( .Actor:Self *Var0 *Var1 *Var2 )
  1CC:  		Call  JumpToGoal        ( .Actor:Self  5` .False .True .False )
  1EC:  		Call  PlaySoundAtActor  ( .Actor:Self 000003F9 )
  200:  	Else
  208:  		Sub   *Var3  0000001E
  218:  		Call  SetGoalPos        ( .Actor:Self *Var3 *Var1 *Var2 )
  234:  		Call  JumpToGoal        ( .Actor:Self  0` .False .True .False )
  254:  		Call  PlaySoundAtActor  ( .Actor:Self 000003F9 )
  268:  	EndIf
  270:  EndIf
  278:  Goto  0
  284:  Label  A
  290:  Return
  298:  End
}

#new:Script $Script_Init_80221ABC
{
    0:  Call  SetActorVar   ( .Actor:Self 00000008 00000000 )
   18:  Call  BindTakeTurn  ( .Actor:Self $Script_TakeTurn_80222ED0 )
   2C:  Call  BindIdle      ( .Actor:Self $Script_Idle_80221D00 )
   40:  Call  BindHandleEvent   ( .Actor:Self $Script_HandleEvent_80222364 )
   54:  Call  GetActorPos   ( .Actor:Self *Var0 *Var1 *Var2 )
   70:  Call  SetPartPos    ( .Actor:Self 00000002 *Var0 *Var1 *Var2 )
   90:  Set   *Var0  00000003
   A0:  Loop  00000008
   AC:  	Call  SetPartSize   ( .Actor:Self *Var0  16`  16` )
   C8:  	Add   *Var0  00000001
   D8:  EndLoop
   E0:  Call  $Function_80218270 ( )
   EC:  Exec  $Script_80222324
   F8:  Return
  100:  End
}

#new:Script $Script_80221BC4
{
    0:  Call  GetStatusFlags    ( .Actor:Self *Var0 )
   14:  If  *Var0  &  ~Flags:StatusFlags:Sleep|Frozen|Fear|Paralyze|Dizzy|Stone|Stop % 35D000
   24:  	Call  GetActorPos   ( .Actor:Self *Var0 *Var1 *Var2 )
   40:  	Call  SetPartPos    ( .Actor:Self 00000002 *Var0 *Var1 *Var2 )
   60:  	Call  SetTargetOffset   ( .Actor:Self 00000002  0`  24` )
   7C:  	Call  8027D4C8      ( FFFFFF81 00000002 00000000 00000000 )
   98:  Else
   A0:  	Call  SetIdleGoalToHome ( .Actor:Self )
   B0:  	Call  GetIdleGoal       ( .Actor:Self *Var0 *Var1 *Var2 )
   CC:  	Call  SetPartPos        ( .Actor:Self 00000002 *Var0 *Var1 *Var2 )
   EC:  	Call  SetTargetOffset   ( .Actor:Self 00000002  -13`  40` )
  108:  	Call  8027D4C8  ( FFFFFF81 00000002 00000000 FFFFFFF2 )
  124:  EndIf
  12C:  Return
  134:  End
}

#new:Script $Script_Idle_80221D00
{
    0:  Label  0
    C:  Loop
   18:  	ExecWait  $Script_80221BC4
   24:  	Call  GetStatusFlags    ( .Actor:Self *Var0 )
   38:  	If  *Var0  !&  ~Flags:StatusFlags:Sleep|Frozen|Fear|Paralyze|Dizzy|Stone|Stop % 35D000
   48:  		BreakLoop
   50:  	EndIf
   58:  	Wait  1`
   64:  EndLoop
   6C:  Call  SetIdleAnimations ( .Actor:Self 00000001 $IdleAnimations_80221504 )
   84:  Call  SetActorIdleJumpGravity   ( .Actor:Self *Fixed[1.0] )
   98:  Call  SetIdleGoalToHome ( .Actor:Self )
   A8:  Call  GetIdleGoal       ( .Actor:Self *Var0 *Var1 *Var2 )
   C4:  Add   *Var0  0000000A
   D4:  Call  SetActorIdleJumpGravity   ( .Actor:Self *Fixed[0.8] )
   E8:  Call  SetIdleGoal       ( .Actor:Self *Var0 *Var1 *Var2 )
  104:  Call  IdleJumpToGoal    ( .Actor:Self  11` 00000001 )
  11C:  Loop
  128:  	ExecWait  $Script_80221BC4
  134:  	Call  GetStatusFlags    ( .Actor:Self *Var0 )
  148:  	If  *Var0  !&  ~Flags:StatusFlags:Sleep|Frozen|Fear|Paralyze|Dizzy|Stone|Stop % 35D000
  158:  		BreakLoop
  160:  	EndIf
  168:  	Wait  1`
  174:  EndLoop
  17C:  Call  SetActorIdleJumpGravity   ( .Actor:Self *Fixed[1.0] )
  190:  Call  SetIdleGoalToHome ( .Actor:Self )
  1A0:  Call  GetIdleGoal       ( .Actor:Self *Var0 *Var1 *Var2 )
  1BC:  Call  SetIdleGoal       ( .Actor:Self *Var0 *Var1 *Var2 )
  1D8:  Call  IdleJumpToGoal    ( .Actor:Self  6` 00000001 )
  1F0:  Call  RandInt   ( 0000000A *Var0 )
  204:  Add   *Var0  00000001
  214:  Wait  *Var0
  220:  Loop
  22C:  	ExecWait  $Script_80221BC4
  238:  	Call  GetStatusFlags    ( .Actor:Self *Var0 )
  24C:  	If  *Var0  !&  ~Flags:StatusFlags:Sleep|Frozen|Fear|Paralyze|Dizzy|Stone|Stop % 35D000
  25C:  		BreakLoop
  264:  	EndIf
  26C:  	Wait  1`
  278:  EndLoop
  280:  Call  SetIdleAnimations ( .Actor:Self 00000001 $IdleAnimations_802214C8 )
  298:  Call  SetActorIdleJumpGravity   ( .Actor:Self *Fixed[0.8] )
  2AC:  Call  SetIdleGoalToHome ( .Actor:Self )
  2BC:  Call  GetIdleGoal       ( .Actor:Self *Var0 *Var1 *Var2 )
  2D8:  Call  SetIdleGoal       ( .Actor:Self *Var0 *Var1 *Var2 )
  2F4:  Call  IdleJumpToGoal    ( .Actor:Self  15` 00000001 )
  30C:  Loop
  318:  	ExecWait  $Script_80221BC4
  324:  	Call  GetStatusFlags    ( .Actor:Self *Var0 )
  338:  	If  *Var0  !&  ~Flags:StatusFlags:Sleep|Frozen|Fear|Paralyze|Dizzy|Stone|Stop % 35D000
  348:  		BreakLoop
  350:  	EndIf
  358:  	Wait  1`
  364:  EndLoop
  36C:  Call  SetIdleAnimations ( .Actor:Self 00000001 $IdleAnimations_80221504 )
  384:  Call  SetActorIdleJumpGravity   ( .Actor:Self *Fixed[0.8] )
  398:  Call  SetIdleGoalToHome ( .Actor:Self )
  3A8:  Call  GetIdleGoal       ( .Actor:Self *Var0 *Var1 *Var2 )
  3C4:  Sub   *Var0  00000014
  3D4:  Call  SetIdleGoal       ( .Actor:Self *Var0 *Var1 *Var2 )
  3F0:  Call  IdleJumpToGoal    ( .Actor:Self  12` 00000001 )
  408:  Loop
  414:  	ExecWait  $Script_80221BC4
  420:  	Call  GetStatusFlags    ( .Actor:Self *Var0 )
  434:  	If  *Var0  !&  ~Flags:StatusFlags:Sleep|Frozen|Fear|Paralyze|Dizzy|Stone|Stop % 35D000
  444:  		BreakLoop
  44C:  	EndIf
  454:  	Wait  1`
  460:  EndLoop
  468:  Call  SetActorIdleJumpGravity   ( .Actor:Self *Fixed[0.8] )
  47C:  Call  SetIdleGoalToHome ( .Actor:Self )
  48C:  Call  GetIdleGoal       ( .Actor:Self *Var0 *Var1 *Var2 )
  4A8:  Sub   *Var0  0000000A
  4B8:  Call  SetIdleGoal       ( .Actor:Self *Var0 *Var1 *Var2 )
  4D4:  Call  IdleJumpToGoal    ( .Actor:Self  9` 00000001 )
  4EC:  Loop
  4F8:  	ExecWait  $Script_80221BC4
  504:  	Call  GetStatusFlags    ( .Actor:Self *Var0 )
  518:  	If  *Var0  !&  ~Flags:StatusFlags:Sleep|Frozen|Fear|Paralyze|Dizzy|Stone|Stop % 35D000
  528:  		BreakLoop
  530:  	EndIf
  538:  	Wait  1`
  544:  EndLoop
  54C:  Call  SetIdleAnimations ( .Actor:Self 00000001 $IdleAnimations_8022148C )
  564:  Call  SetActorIdleJumpGravity   ( .Actor:Self *Fixed[0.8] )
  578:  Call  SetIdleGoalToHome ( .Actor:Self )
  588:  Call  GetIdleGoal       ( .Actor:Self *Var0 *Var1 *Var2 )
  5A4:  Call  SetIdleGoal       ( .Actor:Self *Var0 *Var1 *Var2 )
  5C0:  Call  IdleJumpToGoal    ( .Actor:Self  6` 00000001 )
  5D8:  Call  RandInt   ( 0000000A *Var0 )
  5EC:  Add   *Var0  0000000A
  5FC:  Wait  *Var0
  608:  Goto  0
  614:  Return
  61C:  End
}

#new:Script $Script_80222324
{
    0:  Label  0
    C:  Wait  1`
   18:  Call  $Function_802184CC ( )
   24:  Goto  0
   30:  Return
   38:  End
}

#new:Script $Script_HandleEvent_80222364
{
    0:  Call  UseIdleAnimation  ( .Actor:Self .False )
   14:  Call  EnableIdleScript  ( .Actor:Self 00000000 )
   28:  Call  SetActorScale     ( .Actor:Self *Fixed[1.0] *Fixed[1.0] *Fixed[1.0] )
   44:  Call  GetLastEvent      ( .Actor:Self *Var0 )
   58:  Switch  *Var0
   64:  	CaseOR  ==  .Event:HitCombo % 9
   70:  	CaseOR  ==  .Event:Hit % A
   7C:  		SetConst  *Var0  00000001
   8C:  		SetConst  *Var1  00350006
   9C:  		ExecWait  DoNormalHit
   A8:  	EndCaseGroup
   B0:  	Case  ==  .Event:BurnHit % E
   BC:  		Call  SetAnimation  ( .Actor:Self 00000003 00350009 )
   D4:  		Call  SetAnimation  ( .Actor:Self 00000004 00350009 )
   EC:  		Call  SetAnimation  ( .Actor:Self 00000005 00350009 )
  104:  		Call  SetAnimation  ( .Actor:Self 00000006 00350009 )
  11C:  		Call  SetAnimation  ( .Actor:Self 00000007 00350009 )
  134:  		Call  SetAnimation  ( .Actor:Self 00000008 00350009 )
  14C:  		Call  SetAnimation  ( .Actor:Self 00000009 00350009 )
  164:  		Call  SetAnimation  ( .Actor:Self 0000000A 00350009 )
  17C:  		SetConst  *Var0  00000001
  18C:  		SetConst  *Var1  00350007
  19C:  		SetConst  *Var2  00350008
  1AC:  		ExecWait  DoBurnHit
  1B8:  	Case  ==  .Event:BurnDeath % 24
  1C4:  		Call  SetAnimation  ( .Actor:Self 00000003 00350009 )
  1DC:  		Call  SetAnimation  ( .Actor:Self 00000004 00350009 )
  1F4:  		Call  SetAnimation  ( .Actor:Self 00000005 00350009 )
  20C:  		Call  SetAnimation  ( .Actor:Self 00000006 00350009 )
  224:  		Call  SetAnimation  ( .Actor:Self 00000007 00350009 )
  23C:  		Call  SetAnimation  ( .Actor:Self 00000008 00350009 )
  254:  		Call  SetAnimation  ( .Actor:Self 00000009 00350009 )
  26C:  		Call  SetAnimation  ( .Actor:Self 0000000A 00350009 )
  284:  		SetConst  *Var0  00000001
  294:  		SetConst  *Var1  00350007
  2A4:  		SetConst  *Var2  00350008
  2B4:  		ExecWait  DoBurnHit
  2C0:  		SetConst  *Var0  00000001
  2D0:  		SetConst  *Var1  00350008
  2E0:  		ExecWait  DoDeath
  2EC:  		Return
  2F4:  	Case  ==  .Event:SpinSmashHit % B
  300:  		SetConst  *Var0  00000001
  310:  		SetConst  *Var1  00350006
  320:  		ExecWait  DoSpinSmashHit
  32C:  		Call  EnableIdleScript  ( .Actor:Self FFFFFFFF )
  340:  		Call  UseIdleAnimation  ( .Actor:Self .True )
  354:  		Return
  35C:  	Case  ==  .Event:ShockHit % 2F
  368:  		SetConst  *Var0  00000001
  378:  		SetConst  *Var1  00350006
  388:  		ExecWait  DoShockHit
  394:  		SetConst  *Var0  00000001
  3A4:  		SetConst  *Var1  00350006
  3B4:  		Call  UseBattleCamPreset    ( 00000002 )
  3C4:  		Call  SetAnimation  ( .Actor:Self *Var0 *Var1 )
  3DC:  		Call  GetActorPos   ( .Actor:Self *Var0 *Var1 *Var2 )
  3F8:  		Set   *Var1  00000000
  408:  		Call  SetGoalPos    ( .Actor:Self *Var0 *Var1 *Var2 )
  424:  		Call  SetActorJumpGravity   ( .Actor:Self *Fixed[1.4] )
  438:  		Call  AddGoalPos    ( .Actor:Self  30`  0`  0` )
  454:  		Call  JumpToGoal    ( .Actor:Self  15` .False .True .False )
  474:  		Call  PlaySoundAtActor  ( .Actor:Self 000003F9 )
  488:  		Call  AddGoalPos    ( .Actor:Self  15`  0`  0` )
  4A4:  		Call  JumpToGoal    ( .Actor:Self  8` .False .True .False )
  4C4:  		Call  PlaySoundAtActor  ( .Actor:Self 000003F9 )
  4D8:  		Call  AddGoalPos    ( .Actor:Self  5`  0`  0` )
  4F4:  		Call  JumpToGoal    ( .Actor:Self  5` .False .True .False )
  514:  		Call  PlaySoundAtActor  ( .Actor:Self 000003F9 )
  528:  		Call  JumpToGoal    ( .Actor:Self  5` .False .True .False )
  548:  		Call  PlaySoundAtActor  ( .Actor:Self 000003F9 )
  55C:  		SetConst  *Var0  00000001
  56C:  		SetConst  *Var1  00350005
  57C:  		ExecWait  $Script_80221794
  588:  		Call  SetActorJumpGravity   ( .Actor:Self *Fixed[1.6] )
  59C:  		Call  JumpToGoal    ( .Actor:Self  5` .False .True .False )
  5BC:  		Call  PlaySoundAtActor  ( .Actor:Self 000003F9 )
  5D0:  		Thread
  5D8:  			Call  ShakeCam  ( .Cam:Battle 00000000  1` *Fixed[0.5] )
  5F4:  		EndThread
  5FC:  		Call  SetGoalToHome ( .Actor:Self )
  60C:  		Call  GetGoalPos    ( .Actor:Self *Var0 *Var1 *Var2 )
  628:  		Call  SetPartPos    ( .Actor:Self 00000002 *Var0 *Var1 *Var2 )
  648:  		Call  SetActorVar   ( .Actor:Self 00000008 00000000 )
  660:  	CaseOR  ==  00000017 % 17
  66C:  	CaseOR  ==  .Event:Immune % 19
  678:  		SetConst  *Var0  00000001
  688:  		SetConst  *Var1  00350001
  698:  		ExecWait  DoImmune
  6A4:  	EndCaseGroup
  6AC:  	Case  ==  .Event:ShockDeath % 26
  6B8:  		SetConst  *Var0  00000001
  6C8:  		SetConst  *Var1  00350006
  6D8:  		ExecWait  DoShockHit
  6E4:  		Call  SetActorVar   ( .Actor:Self 00000008 00000000 )
  6FC:  		SetConst  *Var0  00000001
  70C:  		SetConst  *Var1  00350006
  71C:  		ExecWait  DoDeath
  728:  		Return
  730:  	Case  ==  .Event:Death % 20
  73C:  		SetConst  *Var0  00000001
  74C:  		SetConst  *Var1  00350006
  75C:  		ExecWait  DoNormalHit
  768:  		Wait  10`
  774:  		SetConst  *Var0  00000001
  784:  		SetConst  *Var1  00350006
  794:  		ExecWait  DoDeath
  7A0:  		Return
  7A8:  	Case  ==  .Event:SpinSmashDeath % 21
  7B4:  		SetConst  *Var0  00000001
  7C4:  		SetConst  *Var1  00350006
  7D4:  		ExecWait  DoSpinSmashHit
  7E0:  		SetConst  *Var0  00000001
  7F0:  		SetConst  *Var1  00350006
  800:  		ExecWait  DoDeath
  80C:  		Return
  814:  	Case  ==  .Event:RecoverStatus % 31
  820:  		SetConst  *Var0  00000001
  830:  		SetConst  *Var1  00350001
  840:  		ExecWait  DoRecover
  84C:  	Case  ==  .Event:ScareAway % 39
  858:  		SetConst  *Var0  00000001
  868:  		SetConst  *Var1  00350001
  878:  		SetConst  *Var2  00350006
  888:  		ExecWait  DoScareAway
  894:  		Return
  89C:  	Case  ==  .Event:BeginAirLift % 3A
  8A8:  		Call  GetStatusFlags    ( .Actor:Self *Var0 )
  8BC:  		If  *Var0  !&  ~Flags:StatusFlags:Sleep|Frozen|Fear|Paralyze|Dizzy|Stone|Stop % 35D000
  8CC:  			Call  SetGoalToHome ( .Actor:Self )
  8DC:  			Call  GetGoalPos    ( .Actor:Self *Var1 *Var2 *Var3 )
  8F8:  			If  *Var0  &  ~Flags:StatusFlags:Shrink % 80000
  908:  				Sub   *Var1  0000000A
  918:  				Add   *Var2  00000004
  928:  			Else
  930:  				Sub   *Var1  00000005
  940:  				Add   *Var2  0000000B
  950:  			EndIf
  958:  			Call  SetActorPos   ( .Actor:Self *Var1 *Var2 *Var3 )
  974:  		EndIf
  97C:  		SetConst  *Var0  00000001
  98C:  		SetConst  *Var1  00350006
  99C:  		ExecWait  DoAirLift
  9A8:  		Call  EnableIdleScript  ( .Actor:Self FFFFFFFF )
  9BC:  		Call  UseIdleAnimation  ( .Actor:Self .True )
  9D0:  		Return
  9D8:  	Case  ==  .Event:BlowAway % 16
  9E4:  		SetConst  *Var0  00000001
  9F4:  		SetConst  *Var1  00350006
  A04:  		ExecWait  DoBlowAway
  A10:  		Return
  A18:  	Case  ==  .Event:AirLiftFailed % 1F
  A24:  		SetConst  *Var0  00000001
  A34:  		SetConst  *Var1  00350001
  A44:  		ExecWait  DoImmune
  A50:  		Call  SetAnimationRate  ( .Actor:Self 00000001 *Fixed[1.0] )
  A68:  	Case  ==  .Event:UpAndAway % 3D
  A74:  		Wait  1000`
  A80:  	Default
  A88:  EndSwitch
  A90:  Call  GetStatusFlags    ( .Actor:Self *Var0 )
  AA4:  If  *Var0  &  ~Flags:StatusFlags:Sleep|Paralyze|Dizzy|Stone % 151000
  AB4:  	Call  GetActorPos   ( .Actor:Self *Var0 *Var1 *Var2 )
  AD0:  	If  *Var1  !=  00000000
  AE0:  		Call  SetActorJumpGravity   ( .Actor:Self *Fixed[0.8] )
  AF4:  		Call  SetGoalPos    ( .Actor:Self *Var0  0` *Var2 )
  B10:  		Call  FallToGoal    ( .Actor:Self  11` )
  B24:  	EndIf
  B2C:  EndIf
  B34:  Call  EnableIdleScript  ( .Actor:Self 00000001 )
  B48:  Call  UseIdleAnimation  ( .Actor:Self .True )
  B5C:  Return
  B64:  End
}

#new:Script $Script_TakeTurn_80222ED0
{
    0:  Call  UseIdleAnimation  ( .Actor:Self .False )
   14:  Call  SetActorVar       ( .Actor:Self 00000008 00000001 )
   2C:  Call  SetTargetActor    ( .Actor:Self .Actor:Player )
   40:  Call  EnableIdleScript  ( .Actor:Self 00000000 )
   54:  Call  UseBattleCamPreset    ( 0000003F )
   64:  Call  BattleCamTargetActor  ( .Actor:Self )
   74:  Call  8024ECF8  ( FFFFFFFF 00000001 00000000 )
   8C:  Call  SetActorJumpGravity   ( .Actor:Self *Fixed[0.5] )
   A0:  Call  GetActorPos       ( .Actor:Self *Var0 *Var1 *Var2 )
   BC:  Set   *Var1  00000000
   CC:  Add   *Var0  0000002D
   DC:  Call  SetGoalPos        ( .Actor:Self *Var0 *Var1 *Var2 )
   F8:  Call  JumpToGoal        ( .Actor:Self  15` .False .True .False )
  118:  Call  PlaySoundAtActor  ( .Actor:Self 000003F9 )
  12C:  Call  SetAnimation      ( .Actor:Self 00000001 00350005 )
  144:  Wait  15`
  150:  Call  PlaySoundAtActor  ( .Actor:Self 0000010F )
  164:  Call  EnemyTestTarget   ( .Actor:Self *Var0 ~Flags:DamageType:0 00000000 00000001 00000010 )
  188:  Switch  *Var0
  194:  	CaseOR  ==  .HitResult:Miss % 6
  1A0:  	CaseOR  ==  .HitResult:Lucky % 5
  1AC:  		Set   *VarA  *Var0
  1BC:  		Call  SetAnimation      ( .Actor:Self 00000001 00350001 )
  1D4:  		Call  SetGoalToTarget   ( .Actor:Self )
  1E4:  		Call  GetGoalPos        ( .Actor:Self *Var0 *Var1 *Var2 )
  200:  		Sub   *Var0  00000014
  210:  		Set   *Var1  00000000
  220:  		Call  SetActorJumpGravity   ( .Actor:Self *Fixed[1.8] )
  234:  		Call  SetGoalPos        ( .Actor:Self *Var0 *Var1 *Var2 )
  250:  		Call  JumpToGoal        ( .Actor:Self  10` .False .True .False )
  270:  		Call  PlaySoundAtActor  ( .Actor:Self 000003F9 )
  284:  		If  *VarA  ==  .HitResult:Lucky % 5
  294:  			Call  EnemyTestTarget   ( .Actor:Self *Var0 ~Flags:DamageType:TriggerLucky 00000000 00000000 00000000 )
  2B8:  		EndIf
  2C0:  		Call  SetActorJumpGravity   ( .Actor:Self *Fixed[1.8] )
  2D4:  		Call  GetActorPos   ( .Actor:Self *Var0 *Var1 *Var2 )
  2F0:  		Sub   *Var0  00000019
  300:  		Call  SetGoalPos    ( .Actor:Self *Var0 *Var1 *Var2 )
  31C:  		Call  JumpToGoal    ( .Actor:Self  6` .False .True .False )
  33C:  		Call  PlaySoundAtActor      ( .Actor:Self 000003F9 )
  350:  		Sub   *Var0  0000000F
  360:  		Call  SetGoalPos    ( .Actor:Self *Var0 *Var1 *Var2 )
  37C:  		Call  JumpToGoal    ( .Actor:Self  4` .False .True .False )
  39C:  		Call  PlaySoundAtActor      ( .Actor:Self 000003F9 )
  3B0:  		Call  SetAnimation  ( .Actor:Self 00000001 00350004 )
  3C8:  		Wait  20`
  3D4:  		Call  UseBattleCamPreset    ( 00000002 )
  3E4:  		Call  YieldTurn ( )
  3F0:  		Call  SetActorYaw   ( .Actor:Self  180` )
  404:  		Call  AddActorDecoration    ( .Actor:Self 00000001 00000000 .Decoration:Sweat )
  420:  		Call  SetGoalToHome ( .Actor:Self )
  430:  		Call  GetGoalPos    ( .Actor:Self *Var0 *Var1 *Var2 )
  44C:  		Call  SetActorSpeed ( .Actor:Self *Fixed[4.0] )
  460:  		Call  SetAnimation  ( .Actor:Self 00000001 00350004 )
  478:  		ExecWait  $Script_8022181C
  484:  		Call  SetAnimation  ( .Actor:Self 00000001 00350001 )
  49C:  		Call  SetActorYaw   ( .Actor:Self  0` )
  4B0:  		Call  HPBarToHome   ( .Actor:Self )
  4C0:  		Call  RemoveActorDecoration ( .Actor:Self 00000001 00000000 )
  4D8:  		Call  SetActorVar   ( .Actor:Self 00000008 00000000 )
  4F0:  		Call  EnableIdleScript      ( .Actor:Self FFFFFFFF )
  504:  		Return
  50C:  	EndCaseGroup
  514:  EndSwitch
  51C:  Call  SetAnimation      ( .Actor:Self 00000001 00350001 )
  534:  Call  SetGoalToTarget   ( .Actor:Self )
  544:  Call  GetGoalPos        ( .Actor:Self *Var0 *Var1 *Var2 )
  560:  Call  GetStatusFlags    ( .Actor:Self *VarA )
  574:  If  *VarA  &  ~Flags:StatusFlags:Shrink % 80000
  584:  	Add   *Var0  00000004
  594:  Else
  59C:  	Add   *Var0  0000000A
  5AC:  EndIf
  5B4:  Set   *Var1  0000001B
  5C4:  Call  SetActorJumpGravity   ( .Actor:Self *Fixed[0.2] )
  5D8:  Call  SetGoalPos    ( .Actor:Self *Var0 *Var1 *Var2 )
  5F4:  Call  JumpToGoal    ( .Actor:Self  5` .False .True .False )
  614:  Call  GetActorPos   ( .Actor:Self *Var0 *Var1 *Var2 )
  630:  Call  SetPartPos    ( .Actor:Self 00000002 *Var0 *Var1 *Var2 )
  650:  Wait  2`
  65C:  Call  EnemyDamageTarget     ( .Actor:Self *Var0 ~Flags:DamageType:0 00000000 00000000 00000003 00000020 )
  684:  Switch  *Var0
  690:  	CaseOR  ==  .HitResult:Hit % 0
  69C:  	CaseOR  ==  .HitResult:QuakeImmune % 2
  6A8:  		Call  UseBattleCamPreset    ( 00000002 )
  6B8:  		Call  SetAnimation  ( .Actor:Self 00000001 00350004 )
  6D0:  		Call  GetGoalPos    ( .Actor:Self *Var0 *Var1 *Var2 )
  6EC:  		Add   *Var0  00000028
  6FC:  		Set   *Var1  00000000
  70C:  		Call  SetActorJumpGravity   ( .Actor:Self *Fixed[1.8] )
  720:  		Call  SetGoalPos    ( .Actor:Self *Var0 *Var1 *Var2 )
  73C:  		Call  JumpToGoal    ( .Actor:Self  10` .False .True .False )
  75C:  		Call  PlaySoundAtActor  ( .Actor:Self 000003F9 )
  770:  		Add   *Var0  0000001E
  780:  		Call  SetGoalPos    ( .Actor:Self *Var0 *Var1 *Var2 )
  79C:  		Call  JumpToGoal    ( .Actor:Self  8` .False .True .False )
  7BC:  		Call  PlaySoundAtActor  ( .Actor:Self 000003F9 )
  7D0:  		Add   *Var0  00000014
  7E0:  		Call  SetGoalPos    ( .Actor:Self *Var0 *Var1 *Var2 )
  7FC:  		Call  JumpToGoal    ( .Actor:Self  6` .False .True .False )
  81C:  		Call  PlaySoundAtActor  ( .Actor:Self 000003F9 )
  830:  		Sub   *Var0  0000000A
  840:  		Call  JumpToGoal    ( .Actor:Self  4` .False .True .False )
  860:  		Call  PlaySoundAtActor  ( .Actor:Self 000003F9 )
  874:  		Call  SetAnimation  ( .Actor:Self 00000001 00350001 )
  88C:  		Wait  8`
  898:  		Call  YieldTurn ( )
  8A4:  		Call  SetGoalToHome ( .Actor:Self )
  8B4:  		Call  GetGoalPos    ( .Actor:Self *Var0 *Var1 *Var2 )
  8D0:  		Call  SetActorSpeed ( .Actor:Self *Fixed[4.0] )
  8E4:  		Call  SetAnimation  ( .Actor:Self 00000001 00350004 )
  8FC:  		ExecWait  $Script_8022181C
  908:  		Call  SetAnimation  ( .Actor:Self 00000001 00350001 )
  920:  		Call  GetActorPos   ( .Actor:Self *Var0 *Var1 *Var2 )
  93C:  		Call  SetPartPos    ( .Actor:Self 00000002 *Var0 *Var1 *Var2 )
  95C:  		Call  SetActorYaw   ( .Actor:Self  0` )
  970:  	EndCaseGroup
  978:  EndSwitch
  980:  Call  SetActorVar       ( .Actor:Self 00000008 00000000 )
  998:  Call  HPBarToHome       ( .Actor:Self )
  9A8:  Call  EnableIdleScript  ( .Actor:Self FFFFFFFF )
  9BC:  Call  UseIdleAnimation  ( .Actor:Self .True )
  9D0:  Return
  9D8:  End
}

#new:Script $Script_BeforeBattle_802238B0
{
    0:  Call  SetSpriteShading  ( FFFFFFFF )
   10:  Call  SetCamBGColor     ( .Cam:Battle  0`  0`  0` )
   2C:  Return
   34:  End
}

#new:Script $Script_AfterBattle_802238EC
{
    0:  Return
    8:  End
}

#new:Stage $Stage_802238FC
{
	$ASCII_80224940  % isk_tex
	$ASCII_80224930  % isk_bt00_shape
	00000000
	$Script_BeforeBattle_802238B0
	$Script_AfterBattle_802238EC
	00000000
	00000000
	00000000
	00000000
	00000000
}

PADDING: 80223924 to 80223930 (004EE064 to 004EE070)
00000000 00000000 00000000

#new:Script $Script_BeforeBattle_80223930
{
    0:  Call  SetSpriteShading  ( FFFFFFFF )
   10:  Call  SetCamBGColor     ( .Cam:Battle  0`  0`  0` )
   2C:  Return
   34:  End
}

#new:Script $Script_AfterBattle_8022396C
{
    0:  Return
    8:  End
}

#new:Stage $Stage_8022397C
{
	$ASCII_80224968  % isk_tex
	$ASCII_80224958  % isk_bt01_shape
	$ASCII_80224948  % isk_bt01_hit
	$Script_BeforeBattle_80223930
	$Script_AfterBattle_8022396C
	00000000
	00000000
	00000000
	00000000
	00000000
}

PADDING: 802239A4 to 802239B0 (004EE0E4 to 004EE0F0)
00000000 00000000 00000000

#new:Script $Script_BeforeBattle_802239B0
{
    0:  Call  SetSpriteShading  ( 000C0000 )
   10:  Call  SetCamBGColor     ( .Cam:Battle  0`  0`  0` )
   2C:  Return
   34:  End
}

#new:Script $Script_AfterBattle_802239EC
{
    0:  Return
    8:  End
}

#new:ForegroundModelList $ForegroundModelList_802239FC
{
	~Model:isk_bt02:o398
	~Model:isk_bt02:o397
	~Model:isk_bt02:o399
	00000000
}

#new:Stage $Stage_80223A0C
{
	$ASCII_80224990  % isk_tex
	$ASCII_80224980  % isk_bt02_shape
	$ASCII_80224970  % isk_bt02_hit
	$Script_BeforeBattle_802239B0
	$Script_AfterBattle_802239EC
	00000000
	$ForegroundModelList_802239FC
	00000000
	00000000
	00000000
}

PADDING: 80223A34 to 80223A40 (004EE174 to 004EE180)
00000000 00000000 00000000

#new:Script $Script_BeforeBattle_80223A40
{
    0:  Call  SetSpriteShading  ( FFFFFFFF )
   10:  Call  SetCamBGColor     ( .Cam:Battle  0`  0`  0` )
   2C:  Return
   34:  End
}

#new:Script $Script_AfterBattle_80223A7C
{
    0:  Return
    8:  End
}

#new:Stage $Stage_80223A8C
{
	$ASCII_802249C0  % isk_tex
	$ASCII_802249B0  % isk_bt03_shape
	$ASCII_802249A0  % isk_bt03_hit
	$Script_BeforeBattle_80223A40
	$Script_AfterBattle_80223A7C
	$ASCII_80224998  % sbk3_bg
	00000000
	00000000
	00000000
	00000000
}

PADDING: 80223AB4 to 80223AC0 (004EE1F4 to 004EE200)
00000000 00000000 00000000

#new:Script $Script_BeforeBattle_80223AC0
{
    0:  Call  SetSpriteShading  ( FFFFFFFF )
   10:  Call  SetCamBGColor     ( .Cam:Battle  0`  0`  0` )
   2C:  Call  $Function_802188B0 ( )
   38:  Return
   40:  End
}

#new:Script $Script_AfterBattle_80223B08
{
    0:  Call  $Function_80218944 ( )
    C:  Return
   14:  End
}

#new:ForegroundModelList $ForegroundModelList_80223B24
{
	~Model:isk_bt04:o500
	~Model:isk_bt04:o501
	00000000
}

#new:Stage $Stage_80223B30
{
	$ASCII_802249E8  % isk_tex
	$ASCII_802249D8  % isk_bt04_shape
	$ASCII_802249C8  % isk_bt04_hit
	$Script_BeforeBattle_80223AC0
	$Script_AfterBattle_80223B08
	00000000
	$ForegroundModelList_80223B24
	00000000
	00000000
	00000000
}

PADDING: 80223B58 to 80223B60 (004EE298 to 004EE2A0)
00000000 00000000

#new:Script $Script_BeforeBattle_80223B60
{
    0:  Call  SetSpriteShading  ( FFFFFFFF )
   10:  Call  SetCamBGColor     ( .Cam:Battle  0`  0`  0` )
   2C:  Call  $Function_80218980 ( )
   38:  Return
   40:  End
}

#new:Script $Script_AfterBattle_80223BA8
{
    0:  Call  $Function_80218A10 ( )
    C:  Return
   14:  End
}

#new:Stage $Stage_80223BC4
{
	$ASCII_80224A10  % isk_tex
	$ASCII_80224A00  % isk_bt05_shape
	$ASCII_802249F0  % isk_bt05_hit
	$Script_BeforeBattle_80223B60
	$Script_AfterBattle_80223BA8
	00000000
	00000000
	00000000
	00000000
	00000000
}

PADDING: 80223BEC to 80223BF0 (004EE32C to 004EE330)
00000000

#new:Script $Script_BeforeBattle_80223BF0
{
    0:  Call  SetSpriteShading  ( FFFFFFFF )
   10:  Call  SetCamBGColor     ( .Cam:Battle  0`  0`  0` )
   2C:  Call  $Function_80218A50 ( )
   38:  Return
   40:  End
}

#new:Script $Script_AfterBattle_80223C38
{
    0:  Call  $Function_80218A98 ( )
    C:  Return
   14:  End
}

#new:Stage $Stage_80223C54
{
	$ASCII_80224A38  % isk_tex
	$ASCII_80224A28  % isk_bt06_shape
	$ASCII_80224A18  % isk_bt06_hit
	$Script_BeforeBattle_80223BF0
	$Script_AfterBattle_80223C38
	00000000
	00000000
	00000000
	00000000
	00000000
}

PADDING: 80223C7C to 80223C80 (004EE3BC to 004EE3C0)
00000000

#new:Script $Script_BeforeBattle_80223C80
{
    0:  Call  SetSpriteShading  ( FFFFFFFF )
   10:  Call  SetCamBGColor     ( .Cam:Battle  0`  0`  0` )
   2C:  Call  $Function_80218AC0 ( )
   38:  Return
   40:  End
}

#new:Script $Script_AfterBattle_80223CC8
{
    0:  Call  $Function_80218B08 ( )
    C:  Return
   14:  End
}

#new:Stage $Stage_80223CE4
{
	$ASCII_80224A60  % isk_tex
	$ASCII_80224A50  % isk_bt07_shape
	$ASCII_80224A40  % isk_bt07_hit
	$Script_BeforeBattle_80223C80
	$Script_AfterBattle_80223CC8
	00000000
	00000000
	00000000
	00000000
	00000000
}

PADDING: 80223D0C to 80223D10 (004EE44C to 004EE450)
00000000

#new:Script $Script_BeforeBattle_80223D10
{
    0:  Call  SetSpriteShading  ( FFFFFFFF )
   10:  Call  SetCamBGColor     ( .Cam:Battle  0`  0`  0` )
   2C:  Return
   34:  End
}

#new:Script $Script_AfterBattle_80223D4C
{
    0:  Return
    8:  End
}

#new:Stage $Stage_80223D5C
{
	$ASCII_80224A88  % isk_tex
	$ASCII_80224A78  % isk_bt03_shape
	$ASCII_80224A68  % isk_bt03_hit
	$Script_BeforeBattle_80223D10
	$Script_AfterBattle_80223D4C
	00000000
	00000000
	00000000
	00000000
	00000000
}

PADDING: 80223D84 to 80223D90 (004EE4C4 to 004EE4D0)
00000000 00000000 00000000

#new:Script $Script_BeforeBattle_80223D90
{
    0:  Call  SetSpriteShading  ( FFFFFFFF )
   10:  Call  SetCamBGColor ( .Cam:Battle  0`  0`  0` )
   2C:  Call  EnableModel   ( ~Model:isk_bt02:o365 .False )
   40:  Call  EnableModel   ( ~Model:isk_bt02:o366 .False )
   54:  Call  EnableModel   ( ~Model:isk_bt02:o367 .False )
   68:  Call  EnableModel   ( ~Model:isk_bt02:o389 .False )
   7C:  Call  EnableModel   ( ~Model:isk_bt02:o390 .False )
   90:  Call  EnableModel   ( ~Model:isk_bt02:o391 .False )
   A4:  Return
   AC:  End
}

#new:Script $Script_AfterBattle_80223E44
{
    0:  Return
    8:  End
}

#new:ForegroundModelList $ForegroundModelList_80223E54
{
	~Model:isk_bt02:o398
	~Model:isk_bt02:o397
	~Model:isk_bt02:o399
	00000000
}

#new:Stage $Stage_80223E64
{
	$ASCII_80224AB0  % isk_tex
	$ASCII_80224AA0  % isk_bt02_shape
	$ASCII_80224A90  % isk_bt02_hit
	$Script_BeforeBattle_80223D90
	$Script_AfterBattle_80223E44
	00000000
	$ForegroundModelList_80223E54
	00000000
	00000000
	00000000
}

PADDING: 80223E8C to 80223E90 (004EE5CC to 004EE5D0)
00000000

#new:Script $Script_BeforeBattle_80223E90
{
    0:  Call  SetSpriteShading  ( FFFFFFFF )
   10:  Call  SetCamBGColor ( .Cam:Battle  0`  0`  0` )
   2C:  Call  EnableModel   ( ~Model:isk_bt02:kai2 .False )
   40:  Call  EnableModel   ( ~Model:isk_bt02:kai1 .False )
   54:  Return
   5C:  End
}

#new:Script $Script_AfterBattle_80223EF4
{
    0:  Return
    8:  End
}

#new:ForegroundModelList $ForegroundModelList_80223F04
{
	~Model:isk_bt02:o398
	~Model:isk_bt02:o397
	~Model:isk_bt02:o399
	00000000
}

#new:Stage $Stage_80223F14
{
	$ASCII_80224AD8  % isk_tex
	$ASCII_80224AC8  % isk_bt02_shape
	$ASCII_80224AB8  % isk_bt02_hit
	$Script_BeforeBattle_80223E90
	$Script_AfterBattle_80223EF4
	00000000
	$ForegroundModelList_80223F04
	00000000
	00000000
	00000000
}

PADDING: 80223F3C to 80223F40 (004EE67C to 004EE680)
00000000

#new:Script $Script_BeforeBattle_80223F40
{
    0:  Call  SetSpriteShading  ( FFFFFFFF )
   10:  Call  SetCamBGColor     ( .Cam:Battle  0`  0`  0` )
   2C:  Call  $Function_80218B30 ( )
   38:  Call  EnableModel       ( ~Model:isk_bt06:kesu .False )
   4C:  Return
   54:  End
}

#new:Script $Script_AfterBattle_80223F9C
{
    0:  Call  $Function_80218B78 ( )
    C:  Return
   14:  End
}

#new:Stage $Stage_80223FB8
{
	$ASCII_80224B00  % isk_tex
	$ASCII_80224AF0  % isk_bt06_shape
	$ASCII_80224AE0  % isk_bt06_hit
	$Script_BeforeBattle_80223F40
	$Script_AfterBattle_80223F9C
	00000000
	00000000
	00000000
	00000000
	00000000
}

#new:Script $Script_BeforeBattle_80223FE0
{
    0:  Call  SetSpriteShading  ( FFFFFFFF )
   10:  Call  SetCamBGColor     ( .Cam:Battle  0`  0`  0` )
   2C:  Call  $Function_80218BA0 ( )
   38:  Return
   40:  End
}

#new:Script $Script_AfterBattle_80224028
{
    0:  Call  $Function_80218BE8 ( )
    C:  Return
   14:  End
}

#new:Stage $Stage_80224044
{
	$ASCII_80224B28  % isk_tex
	$ASCII_80224B18  % isk_bt08_shape
	$ASCII_80224B08  % isk_bt08_hit
	$Script_BeforeBattle_80223FE0
	$Script_AfterBattle_80224028
	00000000
	00000000
	00000000
	00000000
	00000000
}

PADDING: 8022406C to 80224070 (004EE7AC to 004EE7B0)
00000000

#new:Vector3D $Vector3D_80224070
{
	15` 133` -25`
}

#new:Vector3D $Vector3D_8022407C
{
	55` 133` -25`
}

#new:Vector3D $Vector3D_80224088
{
	95` 133` -25`
}

MISSING: 80224094 to 802240A0 (004EE7D4 to 004EE7E0)
00000087 00000085 FFFFFFE7

#new:Vector3D $Vector3D_802240A0
{
	15` 112` -25`
}

#new:Vector3D $Vector3D_802240AC
{
	55` 112` -25`
}

#new:Vector3D $Vector3D_802240B8
{
	95` 112` -25`
}

MISSING: 802240C4 to 802240D0 (004EE804 to 004EE810)
00000087 00000070 FFFFFFE7

#new:Formation $Formation_00
{
	$PokeyMummy 00000001 0000000A 00000000 00000000 00000000 00000000
	$PokeyMummy 00000002 00000009 00000000 00000000 00000000 00000000
}

#new:Formation $Formation_01
{
	$PokeyMummy 00000000 0000000A 00000000 00000000 00000000 00000000
	$PokeyMummy 00000001 00000009 00000000 00000000 00000000 00000000
	$PokeyMummy 00000002 00000008 00000000 00000000 00000000 00000000
}

#new:Formation $Formation_02
{
	$PokeyMummy 00000001 00000009 00000000 00000000 00000000 00000000
	$Swooper $Vector3D_80224088 00000008 00000000 00000000 00000000 00000000
}

#new:Formation $Formation_03
{
	$PokeyMummy 00000000 0000000A 00000000 00000000 00000000 00000000
	$PokeyMummy 00000001 00000009 00000000 00000000 00000000 00000000
	$Swooper $Vector3D_80224088 00000008 00000000 00000000 00000000 00000000
}

#new:Vector3D $Vector3D_802241E8
{
	80` 133` -25`
}

#new:Vector3D $Vector3D_802241F4
{
	115` 133` -25`
}

#new:Formation $Formation_04
{
	$PokeyMummy 00000000 0000000A 00000000 00000000 00000000 00000000
	$PokeyMummy 00000001 00000009 00000000 00000000 00000000 00000000
	$Swooper $Vector3D_802241E8 00000008 00000000 00000000 00000000 00000000
	$Swooper $Vector3D_802241F4 00000007 00000000 00000000 00000000 00000000
}

#new:Formation $Formation_05
{
	$Swooper $Vector3D_8022407C 0000000A 00000000 00000000 00000000 00000000
	$Swooper $Vector3D_80224088 00000009 00000000 00000000 00000000 00000000
}

#new:Formation $Formation_06
{
	$Swooper $Vector3D_80224070 0000000A 00000000 00000000 00000000 00000000
	$Swooper $Vector3D_8022407C 00000009 00000000 00000000 00000000 00000000
	$Swooper $Vector3D_80224088 00000008 00000000 00000000 00000000 00000000
}

#new:Formation $Formation_07
{
	$StoneChomp 00000001 0000000A 00000000 00000000 00000000 00000000
	$StoneChomp 00000002 00000009 00000000 00000000 00000000 00000000
}

#new:Formation $Formation_08
{
	$StoneChomp 00000000 0000000A 00000000 00000000 00000000 00000000
	$StoneChomp 00000001 00000009 00000000 00000000 00000000 00000000
	$StoneChomp 00000002 00000008 00000000 00000000 00000000 00000000
}

#new:Formation $Formation_09
{
	$BuzzyBeetle 00000001 0000000A 00000000 00000000 00000000 00000000
	$BuzzyBeetle 00000002 00000009 00000000 00000000 00000000 00000000
}

#new:Formation $Formation_0A
{
	$BuzzyBeetle 00000000 0000000A 00000000 00000000 00000000 00000000
	$BuzzyBeetle 00000001 00000009 00000000 00000000 00000000 00000000
	$BuzzyBeetle 00000002 00000008 00000000 00000000 00000000 00000000
	$BuzzyBeetle 00000003 00000007 00000000 00000000 00000000 00000000
}

#new:Formation $Formation_0B
{
	$BuzzyBeetle 00000000 0000000A 00000000 00000000 00000000 00000000
	$BuzzyBeetle $Vector3D_802240AC 00000009 00000001 00000000 00000000 00000000
	$Swooper $Vector3D_802240B8 00000008 00000000 00000000 00000000 00000000
}

#new:Formation $Formation_0C
{
	$BuzzyBeetle 00000001 0000000A 00000000 00000000 00000000 00000000
	$Swooper $Vector3D_802240B8 00000009 00000000 00000000 00000000 00000000
}

#new:Formation $Formation_0D
{
	$BuzzyBeetle $Vector3D_802240AC 0000000A 00000001 00000000 00000000 00000000
	$BuzzyBeetle 00000002 00000009 00000000 00000000 00000000 00000000
}

#new:Formation $Formation_0E
{
	$BuzzyBeetle 00000001 0000000A 00000000 00000000 00000000 00000000
	$BuzzyBeetle $Vector3D_802240B8 00000009 00000001 00000000 00000000 00000000
}

#new:Formation $Formation_0F
{
	$BuzzyBeetle $Vector3D_802240AC 0000000A 00000001 00000000 00000000 00000000
	$BuzzyBeetle $Vector3D_802240B8 00000009 00000001 00000000 00000000 00000000
}

#new:Formation $Formation_10
{
	$BuzzyBeetle 00000000 0000000A 00000000 00000000 00000000 00000000
	$BuzzyBeetle $Vector3D_802240AC 00000009 00000001 00000000 00000000 00000000
	$BuzzyBeetle $Vector3D_802240B8 00000008 00000001 00000000 00000000 00000000
}

#new:Formation $Formation_11
{
	$BuzzyBeetle $Vector3D_802240A0 0000000A 00000001 00000000 00000000 00000000
	$BuzzyBeetle $Vector3D_802240AC 00000009 00000001 00000000 00000000 00000000
	$BuzzyBeetle $Vector3D_802240B8 00000008 00000001 00000000 00000000 00000000
}

#new:Vector3D $Vector3D_8022460C
{
	0` 112` -25`
}

#new:Vector3D $Vector3D_80224618
{
	40` 112` -25`
}

#new:Vector3D $Vector3D_80224624
{
	80` 112` -25`
}

#new:Vector3D $Vector3D_80224630
{
	120` 112` -25`
}

#new:Formation $Formation_12
{
	$BuzzyBeetle $Vector3D_8022460C 0000000A 00000001 00000000 00000000 00000000
	$BuzzyBeetle $Vector3D_80224618 00000009 00000001 00000000 00000000 00000000
	$BuzzyBeetle $Vector3D_80224624 00000008 00000001 00000000 00000000 00000000
	$BuzzyBeetle $Vector3D_80224630 00000007 00000001 00000000 00000000 00000000
}

#new:Formation $Formation_13
{
	$BuzzyBeetle $Vector3D_802240A0 0000000A 00000001 00000000 00000000 00000000
	$BuzzyBeetle $Vector3D_802240AC 00000009 00000001 00000000 00000000 00000000
	$Swooper $Vector3D_802240B8 00000008 00000000 00000000 00000000 00000000
}

#new:FormationTable $FormationTable
{
	$SJIS_80224CE0 00000002 $Formation_00 $Stage_80223E64 00000000
	$SJIS_80224CD0 00000003 $Formation_01 $Stage_80223E64 00000000
	$SJIS_80224CB8 00000002 $Formation_02 $Stage_80223B30 00000000
	$SJIS_80224C9C 00000003 $Formation_03 $Stage_80223B30 00000000
	$SJIS_80224C80 00000004 $Formation_04 $Stage_80223B30 00000000
	$SJIS_80224C74 00000002 $Formation_05 $Stage_80223B30 00000000
	$SJIS_80224C68 00000003 $Formation_06 $Stage_80223B30 00000000
	$SJIS_80224C54 00000002 $Formation_07 $Stage_80223E64 00000000
	$SJIS_80224C40 00000003 $Formation_08 $Stage_80223E64 00000000
	$SJIS_80224C34 00000002 $Formation_09 $Stage_80223E64 00000000
	$SJIS_80224C28 00000004 $Formation_0A $Stage_80223E64 00000000
	$SJIS_80224C00 00000003 $Formation_0B $Stage_80223BC4 00000000
	$SJIS_80224BF0 00000002 $Formation_0C $Stage_80223BC4 00000000
	$SJIS_80224BD4 00000002 $Formation_0D $Stage_80223BC4 00000000
	$SJIS_80224BB8 00000002 $Formation_0E $Stage_80223BC4 00000000
	$SJIS_80224BA0 00000002 $Formation_0F $Stage_80223BC4 00000000
	$SJIS_80224B80 00000003 $Formation_10 $Stage_80223BC4 00000000
	$SJIS_80224B68 00000003 $Formation_11 $Stage_80223BC4 00000000
	$SJIS_80224B50 00000004 $Formation_12 $Stage_80223BC4 00000000
	$SJIS_80224B30 00000003 $Formation_13 $Stage_80223BC4 00000000
	00000000 00000000 00000000 00000000 00000000
}

#new:StageTable $StageTable
{
	$ASCII_80224D50 $Stage_802238FC
	$ASCII_80224D48 $Stage_8022397C
	$ASCII_80224D40 $Stage_80223A0C
	$ASCII_80224D38 $Stage_80223E64
	$ASCII_80224D30 $Stage_80223F14
	$ASCII_80224D28 $Stage_80223A8C
	$ASCII_80224D20 $Stage_80223D5C
	$ASCII_80224D18 $Stage_80223B30
	$ASCII_80224D10 $Stage_80223BC4
	$ASCII_80224D08 $Stage_80223C54
	$ASCII_80224D00 $Stage_80223FB8
	$ASCII_80224CF8 $Stage_80223CE4
	$ASCII_80224CF0 $Stage_80224044
	00000000 00000000
}

PADDING: 80224914 to 80224920 (004EF054 to 004EF060)
00000000 00000000 00000000

#new:ConstDouble $ConstDouble_80224920
{
	0.200000d
}

PADDING: 80224928 to 80224930 (004EF068 to 004EF070)
00000000 00000000

#new:ASCII $ASCII_80224930
{
	"isk_bt00_shape"
}

#new:ASCII $ASCII_80224940
{
	"isk_tex"
}

#new:ASCII $ASCII_80224948
{
	"isk_bt01_hit"
}

#new:ASCII $ASCII_80224958
{
	"isk_bt01_shape"
}

#new:ASCII $ASCII_80224968
{
	"isk_tex"
}

#new:ASCII $ASCII_80224970
{
	"isk_bt02_hit"
}

#new:ASCII $ASCII_80224980
{
	"isk_bt02_shape"
}

#new:ASCII $ASCII_80224990
{
	"isk_tex"
}

#new:ASCII $ASCII_80224998
{
	"sbk3_bg"
}

#new:ASCII $ASCII_802249A0
{
	"isk_bt03_hit"
}

#new:ASCII $ASCII_802249B0
{
	"isk_bt03_shape"
}

#new:ASCII $ASCII_802249C0
{
	"isk_tex"
}

#new:ASCII $ASCII_802249C8
{
	"isk_bt04_hit"
}

#new:ASCII $ASCII_802249D8
{
	"isk_bt04_shape"
}

#new:ASCII $ASCII_802249E8
{
	"isk_tex"
}

#new:ASCII $ASCII_802249F0
{
	"isk_bt05_hit"
}

#new:ASCII $ASCII_80224A00
{
	"isk_bt05_shape"
}

#new:ASCII $ASCII_80224A10
{
	"isk_tex"
}

#new:ASCII $ASCII_80224A18
{
	"isk_bt06_hit"
}

#new:ASCII $ASCII_80224A28
{
	"isk_bt06_shape"
}

#new:ASCII $ASCII_80224A38
{
	"isk_tex"
}

#new:ASCII $ASCII_80224A40
{
	"isk_bt07_hit"
}

#new:ASCII $ASCII_80224A50
{
	"isk_bt07_shape"
}

#new:ASCII $ASCII_80224A60
{
	"isk_tex"
}

#new:ASCII $ASCII_80224A68
{
	"isk_bt03_hit"
}

#new:ASCII $ASCII_80224A78
{
	"isk_bt03_shape"
}

#new:ASCII $ASCII_80224A88
{
	"isk_tex"
}

#new:ASCII $ASCII_80224A90
{
	"isk_bt02_hit"
}

#new:ASCII $ASCII_80224AA0
{
	"isk_bt02_shape"
}

#new:ASCII $ASCII_80224AB0
{
	"isk_tex"
}

#new:ASCII $ASCII_80224AB8
{
	"isk_bt02_hit"
}

#new:ASCII $ASCII_80224AC8
{
	"isk_bt02_shape"
}

#new:ASCII $ASCII_80224AD8
{
	"isk_tex"
}

#new:ASCII $ASCII_80224AE0
{
	"isk_bt06_hit"
}

#new:ASCII $ASCII_80224AF0
{
	"isk_bt06_shape"
}

#new:ASCII $ASCII_80224B00
{
	"isk_tex"
}

#new:ASCII $ASCII_80224B08
{
	"isk_bt08_hit"
}

#new:ASCII $ASCII_80224B18
{
	"isk_bt08_shape"
}

#new:ASCII $ASCII_80224B28
{
	"isk_tex"
}

#new:SJIS $SJIS_80224B30
{
	メット(てんじょう)x２,バサバサ % metto(tenjou)x2,basabasa
}

#new:SJIS $SJIS_80224B50
{
	メット(てんじょう)x４ % metto(tenjou)x4
}

#new:SJIS $SJIS_80224B68
{
	メット(てんじょう)x３ % metto(tenjou)x3
}

#new:SJIS $SJIS_80224B80
{
	メット,メット(てんじょう)x２ % metto,metto(tenjou)x2
}

#new:SJIS $SJIS_80224BA0
{
	メット(てんじょう)x２ % metto(tenjou)x2
}

#new:SJIS $SJIS_80224BB8
{
	メット,メット(てんじょう) % metto,metto(tenjou)
}

#new:SJIS $SJIS_80224BD4
{
	メット（てんじょう）,メット % metto（tenjou）,metto
}

#new:SJIS $SJIS_80224BF0
{
	メット,バサバサ % metto,basabasa
}

#new:SJIS $SJIS_80224C00
{
	メット,メット（てんじょう）,バサバサ % metto,metto（tenjou）,basabasa
}

#new:SJIS $SJIS_80224C28
{
	メットx４ % mettox4
}

#new:SJIS $SJIS_80224C34
{
	メットx２ % mettox2
}

#new:SJIS $SJIS_80224C40
{
	ストーンワンワンx３ % suto-nwanwanx3
}

#new:SJIS $SJIS_80224C54
{
	ストーンワンワンx２ % suto-nwanwanx2
}

#new:SJIS $SJIS_80224C68
{
	バサバサx３ % basabasax3
}

#new:SJIS $SJIS_80224C74
{
	バサバサx２ % basabasax2
}

#new:SJIS $SJIS_80224C80
{
	サンボマミーx２,バサバサx２ % sanbomami-x2,basabasax2
}

#new:SJIS $SJIS_80224C9C
{
	サンボマミーx２,バサバサ % sanbomami-x2,basabasa
}

#new:SJIS $SJIS_80224CB8
{
	サンボマミー,バサバサ % sanbomami-,basabasa
}

#new:SJIS $SJIS_80224CD0
{
	サンボマミーx３ % sanbomami-x3
}

#new:SJIS $SJIS_80224CE0
{
	サンボマミーx２ % sanbomami-x2
}

#new:ASCII $ASCII_80224CF0
{
	"isk_08"
}

#new:ASCII $ASCII_80224CF8
{
	"isk_07"
}

#new:ASCII $ASCII_80224D00
{
	"isk_06b"
}

#new:ASCII $ASCII_80224D08
{
	"isk_06"
}

#new:ASCII $ASCII_80224D10
{
	"isk_05"
}

#new:ASCII $ASCII_80224D18
{
	"isk_04"
}

#new:ASCII $ASCII_80224D20
{
	"isk_03b"
}

#new:ASCII $ASCII_80224D28
{
	"isk_03"
}

#new:ASCII $ASCII_80224D30
{
	"isk_02c"
}

#new:ASCII $ASCII_80224D38
{
	"isk_02b"
}

#new:ASCII $ASCII_80224D40
{
	"isk_02"
}

#new:ASCII $ASCII_80224D48
{
	"isk_01"
}

#new:ASCII $ASCII_80224D50
{
	"isk_00"
}

PADDING: 80224D58 to 80224D60 (004EF498 to 004EF4A0)
00000000 00000000

