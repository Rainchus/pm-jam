% Script File: 06 Area TRD Part 1.bscr
% Decoded from: 4A10A0 to 4B11F0 (06 Area TRD Part 1)

#new:Function $Function_80218000
{
    0:  LA        V0, $SpecialFormation_8021A4E8
    8:  LI        V1, 1
    C:  SW        V1, C (V0)
   10:  LW        V1, 148 (A0)
   14:  SW        V1, 10 (V0)
   18:  JR        RA
   1C:  LI        V0, 2
}

#new:Function $Function_80218020
{
    0:  ADDIU     SP, SP, FFD8
    4:  SW        S1, 14 (SP)
    8:  COPY      S1, A0
    C:  SW        RA, 20 (SP)
   10:  SW        S3, 1C (SP)
   14:  SW        S2, 18 (SP)
   18:  SW        S0, 10 (SP)
   1C:  LW        S0, C (S1)
   20:  LW        A1, 0 (S0)
   24:  JAL       ~Func:get_variable
   28:  ADDIU     S0, S0, 4
   2C:  LW        A1, 0 (S0)
   30:  ADDIU     S0, S0, 4
   34:  COPY      A0, S1
   38:  JAL       ~Func:get_variable
   3C:  COPY      S3, V0
   40:  LW        A1, 0 (S0)
   44:  ADDIU     S0, S0, 4
   48:  COPY      A0, S1
   4C:  JAL       ~Func:get_variable
   50:  COPY      S2, V0
   54:  COPY      A0, S1
   58:  LW        A1, 0 (S0)
   5C:  JAL       ~Func:get_variable
   60:  COPY      S0, V0
   64:  LW        A0, 148 (S1)
   68:  JAL       ~Func:get_actor
   6C:  COPY      S1, V0
   70:  COPY      V1, V0
   74:  LW        V0, 8 (V1)
   78:  LBU       V0, 24 (V0)
   7C:  LW        A0, 8 (V1)
   80:  SUBU      S3, S3, V0
   84:  SB        S3, 194 (V1)
   88:  LBU       V0, 25 (A0)
   8C:  SUBU      S2, S2, V0
   90:  SB        S2, 195 (V1)
   94:  LBU       V0, 26 (A0)
   98:  SUBU      S0, S0, V0
   9C:  SB        S0, 196 (V1)
   A0:  LBU       A0, 27 (A0)
   A4:  SUBU      S1, S1, A0
   A8:  SB        S1, 197 (V1)
   AC:  LW        RA, 20 (SP)
   B0:  LW        S3, 1C (SP)
   B4:  LW        S2, 18 (SP)
   B8:  LW        S1, 14 (SP)
   BC:  LW        S0, 10 (SP)
   C0:  LI        V0, 2
   C4:  JR        RA
   C8:  ADDIU     SP, SP, 28
}

PADDING: 802180EC to 802180F0 (004A118C to 004A1190)
00000000

#new:Function $Function_802180F0
{
    0:  ADDIU     SP, SP, FFE0
    4:  SW        S1, 14 (SP)
    8:  COPY      S1, A0
    C:  SW        RA, 18 (SP)
   10:  SW        S0, 10 (SP)
   14:  LW        S0, C (S1)
   18:  LW        A1, 0 (S0)
   1C:  JAL       ~Func:get_variable
   20:  ADDIU     S0, S0, 4
   24:  COPY      A0, S1
   28:  LW        A1, 0 (S0)
   2C:  JAL       ~Func:get_variable
   30:  COPY      S0, V0
   34:  COPY      A0, S0
   38:  JAL       ~Func:start_rumble
   3C:  COPY      A1, V0
   40:  LW        RA, 18 (SP)
   44:  LW        S1, 14 (SP)
   48:  LW        S0, 10 (SP)
   4C:  LI        V0, 2
   50:  JR        RA
   54:  ADDIU     SP, SP, 20
}

#new:Function $Function_80218148
{
    0:  ADDIU     SP, SP, FFD8
    4:  SW        S1, 14 (SP)
    8:  COPY      S1, A0
    C:  SW        RA, 20 (SP)
   10:  SW        S3, 1C (SP)
   14:  SW        S2, 18 (SP)
   18:  SW        S0, 10 (SP)
   1C:  LW        S0, C (S1)
   20:  LW        A1, 0 (S0)
   24:  JAL       ~Func:get_variable
   28:  ADDIU     S0, S0, 4
   2C:  LW        A1, 0 (S0)
   30:  ADDIU     S0, S0, 4
   34:  COPY      A0, S1
   38:  JAL       ~Func:get_variable
   3C:  COPY      S3, V0
   40:  LW        A1, 0 (S0)
   44:  ADDIU     S0, S0, 4
   48:  COPY      A0, S1
   4C:  JAL       ~Func:get_variable
   50:  COPY      S2, V0
   54:  COPY      A0, S1
   58:  LW        A1, 0 (S0)
   5C:  JAL       ~Func:get_variable
   60:  COPY      S0, V0
   64:  LW        A0, 148 (S1)
   68:  JAL       ~Func:get_actor
   6C:  COPY      S1, V0
   70:  COPY      V1, V0
   74:  LW        V0, 8 (V1)
   78:  LBU       V0, 24 (V0)
   7C:  LW        A0, 8 (V1)
   80:  SUBU      S3, S3, V0
   84:  SB        S3, 194 (V1)
   88:  LBU       V0, 25 (A0)
   8C:  SUBU      S2, S2, V0
   90:  SB        S2, 195 (V1)
   94:  LBU       V0, 26 (A0)
   98:  SUBU      S0, S0, V0
   9C:  SB        S0, 196 (V1)
   A0:  LBU       A0, 27 (A0)
   A4:  SUBU      S1, S1, A0
   A8:  SB        S1, 197 (V1)
   AC:  LW        RA, 20 (SP)
   B0:  LW        S3, 1C (SP)
   B4:  LW        S2, 18 (SP)
   B8:  LW        S1, 14 (SP)
   BC:  LW        S0, 10 (SP)
   C0:  LI        V0, 2
   C4:  JR        RA
   C8:  ADDIU     SP, SP, 28
}

PADDING: 80218214 to 80218220 (004A12B4 to 004A12C0)
00000000 00000000 00000000

#new:Function $Function_80218220
{
    0:  ADDIU     SP, SP, FFA8
    4:  SW        S4, 20 (SP)
    8:  COPY      S4, A0
    C:  SW        RA, 24 (SP)
   10:  SW        S3, 1C (SP)
   14:  SW        S2, 18 (SP)
   18:  SW        S1, 14 (SP)
   1C:  SW        S0, 10 (SP)
   20:  SDC1      F30, 50 (SP)
   24:  SDC1      F28, 48 (SP)
   28:  SDC1      F26, 40 (SP)
   2C:  SDC1      F24, 38 (SP)
   30:  SDC1      F22, 30 (SP)
   34:  SDC1      F20, 28 (SP)
   38:  LW        S0, C (S4)
   3C:  LW        A1, 0 (S0)
   40:  JAL       ~Func:get_variable
   44:  ADDIU     S0, S0, 4
   48:  MTC1      V0, F0
   4C:  NOP
   50:  CVT.D.W   F0, F0
   54:  LW        S1, 0 (S0)
   58:  ADDIU     S0, S0, 4
   5C:  LIF       F3, 2.5625
   64:  MTC1      R0, F2
   68:  LIF       F20, 6.28318
   74:  LW        S3, 0 (S0)
   78:  DIV.D     F0, F0, F2
   7C:  CVT.S.D   F30, F0
   80:  MUL.S     F20, F30, F20
   84:  NOP
   88:  ADDIU     S0, S0, 4
   8C:  LW        S2, 0 (S0)
   90:  LIF       F0, 360.0
   98:  LW        S0, 4 (S0)
   9C:  DIV.S     F20, F20, F0
   A0:  JAL       ~Func:sin_rad
   A4:  MOV.S     F12, F20
   A8:  LIF       F12, 8.0
   B0:  NOP
   B4:  MUL.S     F12, F20, F12
   B8:  NOP
   BC:  LIF       F28, 150.0
   C4:  NOP
   C8:  MUL.S     F22, F0, F28
   CC:  NOP
   D0:  MTC1      R0, F26
   D4:  JAL       ~Func:sin_rad
   D8:  ADD.S     F22, F22, F26
   DC:  LIF       F2, 10.0
   E4:  NOP
   E8:  MUL.S     F24, F0, F2
   EC:  NOP
   F0:  MOV.S     F12, F20
   F4:  JAL       ~Func:cos_rad
   F8:  ADD.S     F24, F24, F26
   FC:  COPY      A0, S4
  100:  MUL.S     F20, F0, F28
  104:  NOP
  108:  COPY      A1, S1
  10C:  MFC1      A2, F22
  110:  LIF       F0, 20.0
  118:  LIF       F2, -50.0
  120:  DIV.S     F20, F20, F0
  124:  JAL       ~Func:set_float_variable
  128:  ADD.S     F20, F20, F2
  12C:  COPY      A0, S4
  130:  MFC1      A2, F24
  134:  JAL       ~Func:set_float_variable
  138:  COPY      A1, S3
  13C:  COPY      A0, S4
  140:  MFC1      A2, F20
  144:  JAL       ~Func:set_float_variable
  148:  COPY      A1, S2
  14C:  LIF       F0, 90.0
  154:  NOP
  158:  C.LT.S    F0, F30
  15C:  NOP
  160:  BC1F      .o190
  164:  CLEAR     A2
  168:  LIF       F0, 270.0
  170:  NOP
  174:  C.LT.S    F30, F0
  178:  NOP
  17C:  BC1TL     .o184
  180:  LI        A2, B4
        .o184
  184:  LIF       F0, 90.0
  18C:  NOP
        .o190
  190:  SUB.S     F0, F0, F30
  194:  ABS.S     F0, F0
  198:  TRUNC.W.S F4, F0
  19C:  MFC1      V0, F4
  1A0:  NOP
  1A4:  SLTI      V0, V0, 2D
  1A8:  BEQ       V0, R0, .o1CC
  1AC:  NOP
  1B0:  LIF       F0, 45.0
  1B8:  NOP
  1BC:  SUB.S     F0, F30, F0
  1C0:  ADD.S     F0, F0, F0
  1C4:  TRUNC.W.S F4, F0
  1C8:  MFC1      A2, F4
        .o1CC
  1CC:  LIF       F0, 270.0
  1D4:  NOP
  1D8:  SUB.S     F0, F0, F30
  1DC:  ABS.S     F0, F0
  1E0:  TRUNC.W.S F4, F0
  1E4:  MFC1      V0, F4
  1E8:  NOP
  1EC:  SLTI      V0, V0, 2D
  1F0:  BEQ       V0, R0, .o224
  1F4:  COPY      A0, S4
  1F8:  LIF       F0, 225.0
  200:  NOP
  204:  SUB.S     F0, F30, F0
  208:  ADD.S     F0, F0, F0
  20C:  LIF       F2, 180.0
  214:  NOP
  218:  ADD.S     F0, F0, F2
  21C:  TRUNC.W.S F4, F0
  220:  MFC1      A2, F4
        .o224
  224:  JAL       ~Func:set_variable
  228:  COPY      A1, S0
  22C:  LW        RA, 24 (SP)
  230:  LW        S4, 20 (SP)
  234:  LW        S3, 1C (SP)
  238:  LW        S2, 18 (SP)
  23C:  LW        S1, 14 (SP)
  240:  LW        S0, 10 (SP)
  244:  LDC1      F30, 50 (SP)
  248:  LDC1      F28, 48 (SP)
  24C:  LDC1      F26, 40 (SP)
  250:  LDC1      F24, 38 (SP)
  254:  LDC1      F22, 30 (SP)
  258:  LDC1      F20, 28 (SP)
  25C:  LI        V0, 2
  260:  JR        RA
  264:  ADDIU     SP, SP, 58
}

PADDING: 80218488 to 80218490 (004A1528 to 004A1530)
00000000 00000000

#new:Formation $Formation_00
{
	$KoopaTroopa 00000001 0000000A 00000000 00000000 00000000 00000000
}

#new:Formation $Formation_01
{
	$KoopaTroopa 00000001 0000000A 00000000 00000000 00000000 00000000
	$KoopaTroopa 00000002 00000009 00000000 00000000 00000000 00000000
}

#new:Formation $Formation_02
{
	$KoopaTroopa 00000000 0000000A 00000000 00000000 00000000 00000000
	$KoopaTroopa 00000001 00000009 00000000 00000000 00000000 00000000
	$KoopaTroopa 00000002 00000008 00000000 00000000 00000000 00000000
}

#new:Formation $Formation_03
{
	$KoopaTroopa 00000001 0000000A 00000000 00000000 00000000 00000000
	$Bobomb 00000002 00000009 00000000 00000000 00000000 00000000
}

#new:Formation $Formation_04
{
	$KoopaTroopa 00000000 0000000A 00000000 00000000 00000000 00000000
	$Bobomb 00000001 00000009 00000000 00000000 00000000 00000000
	$Bobomb 00000002 00000008 00000000 00000000 00000000 00000000
}

#new:Formation $Formation_05
{
	$KoopaTroopa 00000000 0000000A 00000000 00000000 00000000 00000000
	$Bobomb 00000001 00000009 00000000 00000000 00000000 00000000
	$Bobomb 00000002 00000008 00000000 00000000 00000000 00000000
	$Bobomb 00000003 00000007 00000000 00000000 00000000 00000000
}

#new:Formation $Formation_06
{
	$KoopaTroopa 00000000 0000000A 00000000 00000000 00000000 00000000
	$KoopaTroopa 00000001 00000009 00000000 00000000 00000000 00000000
	$Bobomb 00000002 00000008 00000000 00000000 00000000 00000000
}

#new:Formation $Formation_07
{
	$KoopaTroopa 00000000 0000000A 00000000 00000000 00000000 00000000
	$KoopaTroopa 00000001 00000009 00000000 00000000 00000000 00000000
	$Bobomb 00000002 00000008 00000000 00000000 00000000 00000000
	$Bobomb 00000003 00000007 00000000 00000000 00000000 00000000
}

#new:Formation $Formation_08
{
	$Paratroopa 00000005 0000000A 00000000 00000000 00000000 00000000
	$Paratroopa 00000006 00000009 00000000 00000000 00000000 00000000
}

#new:Formation $Formation_09
{
	$Paratroopa 00000004 0000000A 00000000 00000000 00000000 00000000
	$Paratroopa 00000005 00000009 00000000 00000000 00000000 00000000
	$Paratroopa 00000006 00000008 00000000 00000000 00000000 00000000
}

#new:Formation $Formation_0A
{
	$Paratroopa 00000005 0000000A 00000000 00000000 00000000 00000000
	$KoopaTroopa 00000002 00000009 00000000 00000000 00000000 00000000
}

#new:Formation $Formation_0B
{
	$Paratroopa 00000004 0000000A 00000000 00000000 00000000 00000000
	$KoopaTroopa 00000001 00000009 00000000 00000000 00000000 00000000
	$Paratroopa 00000006 00000008 00000000 00000000 00000000 00000000
}

#new:Formation $Formation_0C
{
	$Paratroopa 00000004 0000000A 00000000 00000000 00000000 00000000
	$KoopaTroopa 00000001 00000009 00000000 00000000 00000000 00000000
	$Paratroopa 00000006 00000008 00000000 00000000 00000000 00000000
	$KoopaTroopa 00000003 00000007 00000000 00000000 00000000 00000000
}

#new:Formation $Formation_0D
{
	$Paratroopa 00000004 0000000A 00000000 00000000 00000000 00000000
	$Bobomb 00000001 0000000A 00000000 00000000 00000000 00000000
	$Bobomb 00000002 00000009 00000000 00000000 00000000 00000000
}

#new:Formation $Formation_0E
{
	$Paratroopa 00000004 0000000A 00000000 00000000 00000000 00000000
	$Bobomb 00000001 0000000A 00000000 00000000 00000000 00000000
	$Bobomb 00000002 00000009 00000000 00000000 00000000 00000000
	$Bobomb 00000003 00000008 00000000 00000000 00000000 00000000
}

#new:Formation $Formation_0F
{
	$Bobomb 00000001 0000000A 00000000 00000000 00000000 00000000
}

#new:Formation $Formation_10
{
	$Bobomb 00000001 0000000A 00000000 00000000 00000000 00000000
	$Bobomb 00000002 00000009 00000000 00000000 00000000 00000000
}

#new:Formation $Formation_11
{
	$Bobomb 00000000 0000000A 00000000 00000000 00000000 00000000
	$Bobomb 00000001 00000009 00000000 00000000 00000000 00000000
	$Bobomb 00000002 00000008 00000000 00000000 00000000 00000000
}

#new:Formation $Formation_12
{
	$Bobomb 00000000 0000000A 00000000 00000000 00000000 00000000
	$Bobomb 00000001 00000009 00000000 00000000 00000000 00000000
	$Bobomb 00000002 00000008 00000000 00000000 00000000 00000000
	$Bobomb 00000003 00000007 00000000 00000000 00000000 00000000
}

#new:Formation $Formation_13
{
	$Bobomb 00000001 0000000A 00000000 00000000 00000000 00000000
	$KoopaTroopa 00000002 00000009 00000000 00000000 00000000 00000000
}

#new:Formation $Formation_14
{
	$Bobomb 00000000 0000000A 00000000 00000000 00000000 00000000
	$Bobomb 00000001 00000009 00000000 00000000 00000000 00000000
	$KoopaTroopa 00000002 00000008 00000000 00000000 00000000 00000000
}

#new:Formation $Formation_15
{
	$Bobomb 00000000 0000000A 00000000 00000000 00000000 00000000
	$KoopaTroopa 00000001 00000009 00000000 00000000 00000000 00000000
	$KoopaTroopa 00000002 00000008 00000000 00000000 00000000 00000000
}

#new:Formation $Formation_16
{
	$KoopaTroopa 00000000 0000000A 00000000 00000000 00000000 00000000
	$Bobomb 00000001 00000009 00000000 00000000 00000000 00000000
	$Bobomb 00000002 00000008 00000000 00000000 00000000 00000000
}

#new:Vector3D $Vector3D_80218B90
{
	50` 0` -20`
}

#new:Vector3D $Vector3D_80218B9C
{
	80` 0` 0`
}

#new:Vector3D $Vector3D_80218BA8
{
	110` 0` 20`
}

#new:Formation $Formation_17
{
	$BillBlaster $Vector3D_80218B90 0000000A 00000000 00000000 00000000 00000000
	$BillBlaster $Vector3D_80218B9C 00000009 00000000 00000000 00000000 00000000
	$BillBlaster $Vector3D_80218BA8 00000009 00000000 00000000 00000000 00000000
}

#new:Formation $Formation_18
{
	$BulletBill 00000001 0000000A 00000000 00000000 00000000 00000000
	$BulletBill 00000002 00000009 00000000 00000000 00000000 00000000
}

#new:Formation $Formation_19
{
	$BulletBill 00000001 0000000A 00000000 00000000 00000000 00000000
}

#new:Formation $Formation_1A
{
	$BulletBill 00000000 0000000A 00000000 00000000 00000000 00000000
	$BulletBill 00000001 00000009 00000000 00000000 00000000 00000000
	$BulletBill 00000002 00000008 00000000 00000000 00000000 00000000
}

#new:FormationTable $FormationTable
{
	$SJIS_80227E8C 00000001 $Formation_00 $Stage_80222B2C 00000000
	$SJIS_80227E80 00000002 $Formation_01 $Stage_80222B2C 00000000
	$SJIS_80227E74 00000003 $Formation_02 $Stage_80222B2C 00000000
	$SJIS_80227E60 00000002 $Formation_03 $Stage_80222B2C 00000000
	$SJIS_80227E4C 00000003 $Formation_04 $Stage_80222B2C 00000000
	$SJIS_80227E38 00000004 $Formation_05 $Stage_80222B2C 00000000
	$SJIS_80227E24 00000003 $Formation_06 $Stage_80222B2C 00000000
	$SJIS_80227E0C 00000004 $Formation_07 $Stage_80222B2C 00000000
	$SJIS_80227E00 00000002 $Formation_08 $Stage_80222B2C 00000000
	$SJIS_80227DF4 00000003 $Formation_09 $Stage_80222B2C 00000000
	$SJIS_80227DE0 00000002 $Formation_0A $Stage_80222B2C 00000000
	$SJIS_80227DC4 00000003 $Formation_0B $Stage_80222B2C 00000000
	$SJIS_80227DA0 00000004 $Formation_0C $Stage_80222B2C 00000000
	$SJIS_80227D88 00000003 $Formation_0D $Stage_80222B2C 00000000
	$SJIS_80227D70 00000004 $Formation_0E $Stage_80222B2C 00000000
	$SJIS_80227D64 00000001 $Formation_0F $Stage_80222B2C 00000000
	$SJIS_80227D58 00000002 $Formation_10 $Stage_80222B2C 00000000
	$SJIS_80227D4C 00000003 $Formation_11 $Stage_80222B2C 00000000
	$SJIS_80227D40 00000004 $Formation_12 $Stage_80222B2C 00000000
	$SJIS_80227D2C 00000002 $Formation_13 $Stage_80222B2C 00000000
	$SJIS_80227D18 00000003 $Formation_14 $Stage_80222B2C 00000000
	$SJIS_80227D04 00000003 $Formation_15 $Stage_80222B2C 00000000
	$SJIS_80227E4C 00000003 $Formation_16 $Stage_80222B2C 00000000
	$SJIS_80227CF0 00000003 $Formation_17 $Stage_80222B2C 00000000
	$SJIS_80227CE4 00000002 $Formation_18 $Stage_80222B2C 00000000
	$SJIS_80227CDC 00000001 $Formation_19 $Stage_80222B2C 00000000
	$SJIS_80227CD0 00000003 $Formation_1A $Stage_80222B2C 00000000
	00000000 00000000 00000000 00000000 00000000
}

#new:StageTable $StageTable
{
	$ASCII_80227F00 $Stage_80224BC4
	$ASCII_80227EF8 $Stage_80222B2C
	$ASCII_80227EF0 $Stage_80223330
	$ASCII_80227EE8 $Stage_80223B50
	$ASCII_80227EE0 $Stage_80224C6C
	$ASCII_80227ED8 $Stage_80225430
	$ASCII_80227ED0 $Stage_80223FC0
	$ASCII_80227EC8 $Stage_80224338
	$ASCII_80227EC0 $Stage_80224B40
	$ASCII_80227EB8 $Stage_80225C38
	$ASCII_80227EB0 $Stage_80226480
	$ASCII_80227EA8 $Stage_80226CC8
	$ASCII_80227EA0 $Stage_802274A0
	$ASCII_80227E98 $Stage_80227C9C
	00000000 00000000
}

PADDING: 80218F58 to 80218F60 (004A1FF8 to 004A2000)
00000000 00000000

#new:DefenseTable $DefenseTable_80218F60
{
	.Element:Normal 00000000
	.Element:End
}

#new:StatusTable $StatusTable_80218F6C
{
	.Status:Normal      0`
	.Status:Default     0`
	.Status:Sleep       0`
	.Status:Poison      0`
	.Status:Frozen    100`
	.Status:Dizzy     100`
	.Status:Fear        0`
	.Status:Static      0`
	.Status:Paralyze    0`
	.Status:Shrink    100`
	.Status:Stop        0`
	.Status:DefaultTurnMod    0`
	.Status:SleepTurnMod      0`
	.Status:PoisonTurnMod     0`
	.Status:FrozenTurnMod     0`
	.Status:DizzyTurnMod      1`
	.Status:FearTurnMod       0`
	.Status:StaticTurnMod     0`
	.Status:ParalyzeTurnMod   0`
	.Status:ShrinkTurnMod     0`
	.Status:StopTurnMod       0`
	.Status:End
}

#new:PartsTable $PartsTable_80219018
{
	00800000 01000000 001000FF $IdleAnimations_80219064 $DefenseTable_80218F60 00000400 00000000 00FA0000 00000000
}

#new:Actor $BulletBill
{
	% stats
	[Index]         Fb
	[Level]         5`b
	[MaxHP]         2`b
	[Coins]         0`b
	[Flags]       00000200
	[StatusTable] $StatusTable_80218F6C
	% ai
	[PartsCount]    1`s
	[PartsTable]  $PartsTable_80219018
	[Script]      $Script_Init_80219088
	% move effectiveness
	[Escape]       50`b
	[Item]          0`b
	[AirLift]     100`b
	[Hurricane]   100`b % Bow's "Spook" as well
	[UpAndAway]    95`b
	[PowerBounce]  85`b
	[SpinSmash]     0`b % weight (0-4)
	% ui positions
	[Size]         28`b  22`b % width height
	[HealthBar]     0`b   0`b % dx dy
	[StatusTurn]  -10`b  20`b % dx dy
	[StatusIcon]   10`b  20`b % dx dy
}

#new:IdleAnimations $IdleAnimations_80219064
{
	.Status:Normal    002D0001
	.Status:Stone     002D0000
	.Status:Stop      002D0000
	.Status:Paralyze  002D0000
	.Status:End
}

#new:Script $Script_Init_80219088
{
    0:  Call  BindTakeTurn  ( .Actor:Self $Script_TakeTurn_802197C0 )
   14:  Call  BindIdle      ( .Actor:Self $Script_Idle_80219380 )
   28:  Call  BindHandleEvent   ( .Actor:Self $Script_HandleEvent_802193E8 )
   3C:  Call  GetActorVar   ( .Actor:Self 00000000 *Var0 )
   54:  If  *Var0  ==  00000000
   64:  	Call  GetActorPos   ( .Actor:Self *Var0 *Var1 *Var2 )
   80:  	Add   *Var1  00000010
   90:  	Call  SetActorPos   ( .Actor:Self *Var0 *Var1 *Var2 )
   AC:  	Call  ForceHomePos  ( .Actor:Self *Var0 *Var1 *Var2 )
   C8:  	Call  HPBarToHome   ( .Actor:Self )
   D8:  Else
   E0:  	Call  GetActorVar       ( .Actor:Self 00000001 *Var0 )
   F8:  	Call  GetActorPos       ( *Var0 *Var1 *Var2 *Var3 )
  114:  	Call  GetStatusFlags    ( *Var0 *Var4 )
  128:  	If  *Var4  &  ~Flags:StatusFlags:Shrink % 80000
  138:  		Set   *Var5  FFFFFFF3
  148:  		Set   *Var6  00000004
  158:  	Else
  160:  		Set   *Var5  FFFFFFDF
  170:  		Set   *Var6  0000000B
  180:  	EndIf
  188:  	Add   *Var1  *Var5
  198:  	Add   *Var2  *Var6
  1A8:  	Call  SetActorPos   ( .Actor:Self *Var1 *Var2 *Var3 )
  1C4:  	Call  CopyStatusEffects     ( *Var0 .Actor:Self )
  1D8:  	Call  CopyBuffs     ( *Var0 .Actor:Self )
  1EC:  	Call  SetActorSounds        ( .Actor:Self .ActorSound:Jump 00000000 00000000 )
  208:  	Call  GetActorPos   ( *Var0 *Var1 *VarB *VarC )
  224:  	Sub   *Var1  0000005A
  234:  	Call  SetActorJumpGravity   ( .Actor:Self *Fixed[0.01] )
  248:  	Call  SetAnimation  ( .Actor:Self 00000001 002D0003 )
  260:  	Call  SetGoalPos    ( .Actor:Self *Var1 *Var2 *Var3 )
  27C:  	Call  JumpToGoal    ( .Actor:Self  5` .False .True .False )
  29C:  	Call  SetAnimation  ( .Actor:Self 00000001 002D0001 )
  2B4:  	Call  ForceHomePos  ( .Actor:Self *Var1 *Var2 *Var3 )
  2D0:  	Call  HPBarToHome   ( .Actor:Self )
  2E0:  EndIf
  2E8:  Return
  2F0:  End
}

#new:Script $Script_Idle_80219380
{
    0:  Return
    8:  End
}

#new:Script $Script_80219390
{
    0:  ExecWait  $Script_80219BE0
    C:  SetConst  *Var0  00000001
   1C:  SetConst  *Var1  002D0007
   2C:  Set   *Var2  FFFFCFC7
   3C:  ExecWait  DoDeath
   48:  Return
   50:  End
}

#new:Script $Script_HandleEvent_802193E8
{
    0:  Call  UseIdleAnimation  ( .Actor:Self .False )
   14:  Call  EnableIdleScript  ( .Actor:Self 00000000 )
   28:  Call  GetLastEvent      ( .Actor:Self *Var0 )
   3C:  Switch  *Var0
   48:  	Case  ==  .Event:HitCombo % 9
   54:  		SetConst  *Var0  00000001
   64:  		SetConst  *Var1  002D0005
   74:  		ExecWait  DoNormalHit
   80:  	Case  ==  .Event:Hit % A
   8C:  		SetConst  *Var0  00000001
   9C:  		SetConst  *Var1  002D0005
   AC:  		ExecWait  DoNormalHit
   B8:  	Case  ==  .Event:BurnHit % E
   C4:  		ExecWait  $Script_80219390
   D0:  		Return
   D8:  	Case  ==  .Event:BurnDeath % 24
   E4:  		ExecWait  $Script_80219390
   F0:  		Return
   F8:  	Case  ==  .Event:SpinSmashHit % B
  104:  		ExecWait  $Script_80219390
  110:  		Return
  118:  	Case  ==  .Event:SpinSmashDeath % 21
  124:  		ExecWait  $Script_80219390
  130:  		Return
  138:  	Case  ==  .Event:ShockHit % 2F
  144:  		SetConst  *Var0  00000001
  154:  		SetConst  *Var1  002D0005
  164:  		ExecWait  DoShockHit
  170:  		ExecWait  $Script_80219390
  17C:  		Return
  184:  	Case  ==  .Event:ShockDeath % 26
  190:  		SetConst  *Var0  00000001
  1A0:  		SetConst  *Var1  002D0005
  1B0:  		ExecWait  DoShockHit
  1BC:  		ExecWait  $Script_80219390
  1C8:  		Return
  1D0:  	CaseOR  ==  00000017 % 17
  1DC:  	CaseOR  ==  .Event:Immune % 19
  1E8:  	CaseOR  ==  .Event:AirLiftFailed % 1F
  1F4:  		SetConst  *Var0  00000001
  204:  		SetConst  *Var1  002D0001
  214:  		ExecWait  DoImmune
  220:  	EndCaseGroup
  228:  	Case  ==  .Event:Death % 20
  234:  		SetConst  *Var0  00000001
  244:  		SetConst  *Var1  002D0005
  254:  		ExecWait  DoNormalHit
  260:  		ExecWait  $Script_80219390
  26C:  		Return
  274:  	Case  ==  .Event:ExplodeTrigger % 22
  280:  		ExecWait  $Script_80219390
  28C:  		Return
  294:  	Case  ==  .Event:RecoverStatus % 31
  2A0:  		SetConst  *Var0  00000001
  2B0:  		SetConst  *Var1  002D0001
  2C0:  		ExecWait  DoRecover
  2CC:  	Case  ==  .Event:ScareAway % 39
  2D8:  		SetConst  *Var0  00000001
  2E8:  		SetConst  *Var1  002D0005
  2F8:  		ExecWait  DoNormalHit
  304:  		ExecWait  $Script_80219390
  310:  		Return
  318:  	Case  ==  .Event:BeginAirLift % 3A
  324:  		SetConst  *Var0  00000001
  334:  		SetConst  *Var1  002D0003
  344:  		ExecWait  DoAirLift
  350:  	Case  ==  .Event:BlowAway % 16
  35C:  		SetConst  *Var0  00000001
  36C:  		SetConst  *Var1  002D0003
  37C:  		ExecWait  DoBlowAway
  388:  		Return
  390:  	Default
  398:  EndSwitch
  3A0:  Call  EnableIdleScript  ( .Actor:Self 00000001 )
  3B4:  Call  UseIdleAnimation  ( .Actor:Self .True )
  3C8:  Return
  3D0:  End
}

#new:Script $Script_TakeTurn_802197C0
{
    0:  Call  UseIdleAnimation  ( .Actor:Self .False )
   14:  Call  EnableIdleScript  ( .Actor:Self 00000000 )
   28:  Call  SetTargetActor    ( .Actor:Self .Actor:Player )
   3C:  Call  SetGoalToTarget   ( .Actor:Self )
   4C:  Call  UseBattleCamPreset    ( 0000003F )
   5C:  Call  BattleCamTargetActor  ( .Actor:Self )
   6C:  Call  8024ECF8  ( FFFFFFFF 00000001 00000000 )
   84:  Call  SetAnimation      ( .Actor:Self 00000001 002D0004 )
   9C:  Call  SetActorDispOffset    ( .Actor:Self 00000000 FFFFFFFF 00000000 )
   B8:  Wait  1`
   C4:  Call  SetActorDispOffset    ( .Actor:Self 00000000 FFFFFFFE 00000000 )
   E0:  Wait  15`
   EC:  Call  8024E664  ( 00000013 )
   FC:  Call  EnemyTestTarget   ( .Actor:Self *Var0 ~Flags:DamageType:0 00000000 00000002 00000010 )
  120:  Switch  *Var0
  12C:  	CaseOR  ==  .HitResult:Miss % 6
  138:  	CaseOR  ==  .HitResult:Lucky % 5
  144:  		Set   *VarA  *Var0
  154:  		Call  GetActorPos   ( .Actor:Self *Var0 *Var1 *Var2 )
  170:  		Set   *Var3  *Var1
  180:  		Call  GetActorPos   ( .Actor:Player *Var0 *Var1 *Var2 )
  19C:  		Set   *Var1  *Var3
  1AC:  		Sub   *Var0  0000005A
  1BC:  		Call  SetActorJumpGravity   ( .Actor:Self *Fixed[0.01] )
  1D0:  		Call  SetGoalPos    ( .Actor:Self *Var0 *Var1 *Var2 )
  1EC:  		Call  JumpToGoal    ( .Actor:Self  18` .False .True .False )
  20C:  		If  *VarA  ==  .HitResult:Lucky % 5
  21C:  			Call  EnemyTestTarget   ( .Actor:Self *Var0 ~Flags:DamageType:TriggerLucky 00000000 00000000 00000000 )
  240:  		EndIf
  248:  		Call  UseBattleCamPreset    ( 00000002 )
  258:  		Call  YieldTurn ( )
  264:  		Call  8027D32C  ( FFFFFF81 )
  274:  		Call  UseIdleAnimation  ( .Actor:Self .False )
  288:  		Call  RemoveActor       ( .Actor:Self )
  298:  		Return
  2A0:  	EndCaseGroup
  2A8:  EndSwitch
  2B0:  Call  GetActorPos       ( .Actor:Self *Var0 *Var1 *Var2 )
  2CC:  Set   *Var3  *Var1
  2DC:  Call  GetActorPos       ( .Actor:Player *Var0 *Var1 *Var2 )
  2F8:  Set   *Var1  *Var3
  308:  Add   *Var0  0000000A
  318:  Call  SetActorJumpGravity   ( .Actor:Self *Fixed[0.01] )
  32C:  Call  SetGoalPos        ( .Actor:Self *Var0 *Var1 *Var2 )
  348:  Call  JumpToGoal        ( .Actor:Self  12` .False .True .False )
  368:  ExecWait  $Script_80219BE0
  374:  Call  SetGoalToTarget   ( .Actor:Self )
  384:  Wait  2`
  390:  Call  EnemyDamageTarget ( .Actor:Self *Var0 ~Flags:DamageType:IgnoreDefense 00000000 00000000 00000002 00000020 )
  3B8:  Call  UseBattleCamPreset    ( 00000002 )
  3C8:  Call  YieldTurn ( )
  3D4:  SetConst  *Var0  00000001
  3E4:  SetConst  *Var1  002D0007
  3F4:  Set   *Var2  FFFFCFC7
  404:  ExecWait  DoDeath
  410:  Return
  418:  End
}

#new:Script $Script_80219BE0
{
    0:  Call  GetActorPos   ( .Actor:Self *Var0 *Var1 *Var2 )
   1C:  Add   *Var2  00000002
   2C:  Call  PlayEffect    ( ~FX:SmokeRing:Blast1 *Var0 *Var1 *Var2 00000000 00000000 00000000 00000000 00000000 00000000 00000000 00000000 00000000 )
   70:  Add   *Var1  00000010
   80:  Add   *Var2  00000002
   90:  Call  PlayEffect    ( ~FX:FaintDustCloud *Var0 *Var1 *Var2 *Fixed[3.0] 0000001E 00000000 00000000 00000000 00000000 00000000 00000000 00000000 )
   D4:  Call  PlaySoundAtActor  ( .Actor:Self 00002078 )
   E8:  Call  StartRumble   ( 0000000B )
   F8:  Thread
  100:  	Call  ShakeCam  ( .Cam:Battle 00000000  5` *Fixed[1.0] )
  11C:  EndThread
  124:  Return
  12C:  End
}

PADDING: 80219D14 to 80219D20 (004A2DB4 to 004A2DC0)
00000000 00000000 00000000

#new:DefenseTable $DefenseTable_80219D20
{
	.Element:Normal 00000001
	.Element:End
}

#new:StatusTable $StatusTable_80219D2C
{
	.Status:Normal      0`
	.Status:Default     0`
	.Status:Sleep       0`
	.Status:Poison      0`
	.Status:Frozen    100`
	.Status:Dizzy       0`
	.Status:Fear        0`
	.Status:Static      0`
	.Status:Paralyze    0`
	.Status:Shrink     50`
	.Status:Stop        0`
	.Status:DefaultTurnMod    0`
	.Status:SleepTurnMod      0`
	.Status:PoisonTurnMod     0`
	.Status:FrozenTurnMod     0`
	.Status:DizzyTurnMod      0`
	.Status:FearTurnMod       0`
	.Status:StaticTurnMod     0`
	.Status:ParalyzeTurnMod   0`
	.Status:ShrinkTurnMod     0`
	.Status:StopTurnMod       0`
	.Status:End
}

#new:PartsTable $PartsTable_80219DD8
{
	00020000 01000000 FA1D00FF $IdleAnimations_80219E48 $DefenseTable_80219D20 00000000 00000000 00F70000 00000000
	80800001 02640000 961D00FF $IdleAnimations_80219E48 $DefenseTable_80219D20 00000000 00000000 00F70000 00000000
}

#new:Actor $BillBlaster
{
	% stats
	[Index]        10b
	[Level]        10`b
	[MaxHP]         4`b
	[Coins]         1`b
	[Flags]       00000000
	[StatusTable] $StatusTable_80219D2C
	% ai
	[PartsCount]    2`s
	[PartsTable]  $PartsTable_80219DD8
	[Script]      $Script_Init_80219E6C
	% move effectiveness
	[Escape]        0`b
	[Item]          0`b
	[AirLift]      20`b
	[Hurricane]    15`b % Bow's "Spook" as well
	[UpAndAway]    95`b
	[PowerBounce] 100`b
	[SpinSmash]     4`b % weight (0-4)
	% ui positions
	[Size]         55`b  32`b % width height
	[HealthBar]     8`b   0`b % dx dy
	[StatusTurn]  -24`b  20`b % dx dy
	[StatusIcon]    5`b  25`b % dx dy
}

#new:IdleAnimations $IdleAnimations_80219E48
{
	.Status:Normal    002E0001
	.Status:Stone     002E0000
	.Status:Stop      002E0000
	.Status:Paralyze  002E0000
	.Status:End
}

#new:Script $Script_Init_80219E6C
{
    0:  Call  BindTakeTurn  ( .Actor:Self $Script_TakeTurn_8021A200 )
   14:  Call  BindIdle      ( .Actor:Self $Script_Idle_80219ED0 )
   28:  Call  BindHandleEvent   ( .Actor:Self $Script_HandleEvent_80219EE0 )
   3C:  Call  SetActorVar   ( .Actor:Self 00000008 00000000 )
   54:  Return
   5C:  End
}

#new:Script $Script_Idle_80219ED0
{
    0:  Return
    8:  End
}

#new:Script $Script_HandleEvent_80219EE0
{
    0:  Call  UseIdleAnimation  ( .Actor:Self .False )
   14:  Call  EnableIdleScript  ( .Actor:Self 00000000 )
   28:  Call  GetLastEvent      ( .Actor:Self *Var0 )
   3C:  Switch  *Var0
   48:  	CaseOR  ==  .Event:HitCombo % 9
   54:  	CaseOR  ==  .Event:Hit % A
   60:  		SetConst  *Var0  00000001
   70:  		SetConst  *Var1  002E0003
   80:  		ExecWait  DoNormalHit
   8C:  	EndCaseGroup
   94:  	Case  ==  .Event:BurnHit % E
   A0:  		SetConst  *Var0  00000001
   B0:  		SetConst  *Var1  002E0003
   C0:  		SetConst  *Var2  FFFFFFFF
   D0:  		ExecWait  DoBurnHit
   DC:  	Case  ==  .Event:BurnDeath % 24
   E8:  		SetConst  *Var0  00000001
   F8:  		SetConst  *Var1  002E0003
  108:  		SetConst  *Var2  FFFFFFFF
  118:  		ExecWait  DoBurnHit
  124:  		SetConst  *Var0  00000001
  134:  		SetConst  *Var1  002E0003
  144:  		ExecWait  DoDeath
  150:  		Return
  158:  	CaseOR  ==  00000017 % 17
  164:  	CaseOR  ==  .Event:Immune % 19
  170:  	CaseOR  ==  .Event:AirLiftFailed % 1F
  17C:  		SetConst  *Var0  00000001
  18C:  		SetConst  *Var1  002E0001
  19C:  		ExecWait  DoImmune
  1A8:  	EndCaseGroup
  1B0:  	Case  ==  .Event:Death % 20
  1BC:  		SetConst  *Var0  00000001
  1CC:  		SetConst  *Var1  002E0003
  1DC:  		ExecWait  DoNormalHit
  1E8:  		Wait  10`
  1F4:  		SetConst  *Var0  00000001
  204:  		SetConst  *Var1  002E0003
  214:  		ExecWait  DoDeath
  220:  		Return
  228:  	Case  ==  .Event:RecoverStatus % 31
  234:  		SetConst  *Var0  00000001
  244:  		SetConst  *Var1  002E0001
  254:  		ExecWait  DoRecover
  260:  	Case  ==  .Event:BeginAirLift % 3A
  26C:  		SetConst  *Var0  00000001
  27C:  		SetConst  *Var1  002E0003
  28C:  		ExecWait  DoAirLift
  298:  	Case  ==  .Event:BlowAway % 16
  2A4:  		SetConst  *Var0  00000001
  2B4:  		SetConst  *Var1  002E0003
  2C4:  		ExecWait  DoBlowAway
  2D0:  		Return
  2D8:  	Default
  2E0:  EndSwitch
  2E8:  Call  EnableIdleScript  ( .Actor:Self 00000001 )
  2FC:  Call  UseIdleAnimation  ( .Actor:Self .True )
  310:  Return
  318:  End
}

#new:Script $Script_TakeTurn_8021A200
{
    0:  Call  UseIdleAnimation  ( .Actor:Self .False )
   14:  Call  EnableIdleScript  ( .Actor:Self 00000000 )
   28:  Call  GetActorVar       ( .Actor:Self 00000008 *Var0 )
   40:  Switch  *Var0
   4C:  	Case  ==  00000000
   58:  		ExecWait  $Script_8021A2BC
   64:  	Case  ==  00000001
   70:  		ExecWait  $Script_8021A470
   7C:  EndSwitch
   84:  Call  EnableIdleScript  ( .Actor:Self 00000001 )
   98:  Call  UseIdleAnimation  ( .Actor:Self .True )
   AC:  Return
   B4:  End
}

#new:Script $Script_8021A2BC
{
    0:  Call  SetAnimation  ( .Actor:Self 00000001 002E0002 )
   18:  Wait  13`
   24:  Thread
   2C:  	Call  ShakeCam  ( .Cam:Battle 00000000  10` *Fixed[1.0] )
   48:  EndThread
   50:  Call  StartRumble   ( 00000009 )
   60:  Call  PlaySoundAtActor  ( .Actor:Self 000002C8 )
   74:  Call  GetActorPos   ( .Actor:Self *Var0 *Var1 *Var2 )
   90:  Sub   *Var0  00000021
   A0:  Add   *Var1  00000013
   B0:  Add   *Var2  00000003
   C0:  Call  PlayEffect    ( ~FX:BigSteamPuff *Var0 *Var1 *Var2 00000002 00000005 00000000 00000002 00000000 00000000 00000000 00000000 00000000 00000000 )
  104:  Call  PlayEffect    ( ~FX:BigSteamPuff *Var0 *Var1 *Var2 00000002 00000005 00000002 00000002 00000000 00000000 00000000 00000000 00000000 00000000 )
  148:  Wait  2`
  154:  Call  $Function_80218000 ( )
  160:  Call  SummonEnemy   ( $SpecialFormation_8021A4E8 00000000 )
  174:  Call  SetActorVar   ( .Actor:Self 00000000 *Var0 )
  18C:  Call  SetActorVar   ( .Actor:Self 00000008 00000001 )
  1A4:  Return
  1AC:  End
}

#new:Script $Script_8021A470
{
    0:  Call  GetActorVar   ( .Actor:Self 00000000 *Var0 )
   18:  Call  ActorExists   ( *Var0 *Var1 )
   2C:  If  *Var1  ==  .False
   3C:  	Call  SetActorVar   ( .Actor:Self 00000008 00000000 )
   54:  EndIf
   5C:  Return
   64:  End
}

#new:Vector3D $Vector3D_8021A4DC
{
	0` -1000` 0`
}

#new:SpecialFormation $SpecialFormation_8021A4E8
{
	$BulletBill $Vector3D_8021A4DC 00000064 00000000 00000000 00000000 00000000
}

PADDING: 8021A504 to 8021A510 (004A35A4 to 004A35B0)
00000000 00000000 00000000

#new:IdleAnimations $IdleAnimations_8021A510
{
	.Status:Normal    002C0002
	.Status:Stone     002C0000
	.Status:Sleep     002C0018
	.Status:Poison    002C0004
	.Status:Stop      002C0000
	.Status:Static    002C0002
	.Status:Paralyze  002C0000
	.Status:Dizzy     002C001C
	.Status:Fear      002C001C
	.Status:End
}

#new:IdleAnimations $IdleAnimations_8021A55C
{
	.Status:Normal    002C0005
	.Status:Stone     002C0001
	.Status:Sleep     002C0018
	.Status:Poison    002C0005
	.Status:Stop      002C0001
	.Status:Static    002C0003
	.Status:Paralyze  002C0001
	.Status:Dizzy     002C001D
	.Status:Fear      002C001D
	.Status:End
}

#new:DefenseTable $DefenseTable_8021A5A8
{
	.Element:Normal 00000000
	.Element:End
}

#new:StatusTable $StatusTable_8021A5B4
{
	.Status:Normal      0`
	.Status:Default     0`
	.Status:Sleep      75`
	.Status:Poison      0`
	.Status:Frozen    100`
	.Status:Dizzy      80`
	.Status:Fear        0`
	.Status:Static      0`
	.Status:Paralyze   80`
	.Status:Shrink     90`
	.Status:Stop       90`
	.Status:DefaultTurnMod    0`
	.Status:SleepTurnMod      0`
	.Status:PoisonTurnMod     0`
	.Status:FrozenTurnMod     0`
	.Status:DizzyTurnMod      0`
	.Status:FearTurnMod       0`
	.Status:StaticTurnMod     0`
	.Status:ParalyzeTurnMod   0`
	.Status:ShrinkTurnMod     0`
	.Status:StopTurnMod       0`
	.Status:End
}

#new:StatusTable $StatusTable_8021A660
{
	.Status:Normal      0`
	.Status:Default     0`
	.Status:Sleep       0`
	.Status:Poison      0`
	.Status:Frozen      0`
	.Status:Dizzy      40`
	.Status:Fear        0`
	.Status:Static      0`
	.Status:Paralyze   40`
	.Status:Shrink      0`
	.Status:Stop        0`
	.Status:DefaultTurnMod    0`
	.Status:SleepTurnMod      0`
	.Status:PoisonTurnMod     0`
	.Status:FrozenTurnMod     0`
	.Status:DizzyTurnMod      0`
	.Status:FearTurnMod       0`
	.Status:StaticTurnMod     0`
	.Status:ParalyzeTurnMod   0`
	.Status:ShrinkTurnMod     0`
	.Status:StopTurnMod       0`
	.Status:End
}

#new:PartsTable $PartsTable_8021A70C
{
	00800000 01000000 001800FF $IdleAnimations_8021A510 $DefenseTable_8021A5A8 00000200 00000000 00F70000 00000000
}

#new:Actor $Bobomb
{
	% stats
	[Index]         Db
	[Level]         6`b
	[MaxHP]         3`b
	[Coins]         1`b
	[Flags]       00000000
	[StatusTable] $StatusTable_8021A5B4
	% ai
	[PartsCount]    1`s
	[PartsTable]  $PartsTable_8021A70C
	[Script]      $Script_Init_8021A758
	% move effectiveness
	[Escape]       70`b
	[Item]         90`b
	[AirLift]      90`b
	[Hurricane]    90`b % Bow's "Spook" as well
	[UpAndAway]    95`b
	[PowerBounce] 100`b
	[SpinSmash]     0`b % weight (0-4)
	% ui positions
	[Size]         34`b  35`b % width height
	[HealthBar]     0`b   0`b % dx dy
	[StatusTurn]  -10`b  20`b % dx dy
	[StatusIcon]   10`b  20`b % dx dy
}

#new:Script $Script_Init_8021A758
{
    0:  Call  BindTakeTurn  ( .Actor:Self $Script_TakeTurn_8021C89C )
   14:  Call  BindIdle      ( .Actor:Self $Script_Idle_8021A7D4 )
   28:  Call  BindHandleEvent   ( .Actor:Self $Script_HandleEvent_8021ACE8 )
   3C:  Call  SetActorVar   ( .Actor:Self 00000008 00000000 )
   54:  Call  SetActorVar   ( .Actor:Self 00000000 00000000 )
   6C:  Return
   74:  End
}

#new:Script $Script_Idle_8021A7D4
{
    0:  Return
    8:  End
}

#new:Script $Script_Ignite
{
    0:  Call  GetStatusFlags    ( .Actor:Self *Var0 )
   14:  If  *Var0  &  ~Flags:StatusFlags:Sleep|Frozen|Fear|Paralyze|Dizzy|Stone|Stop % 35D000
   24:  	Return
   2C:  EndIf
   34:  Label  0
   40:  Call  SetActorVar       ( .Actor:Self 00000008 00000001 )
   58:  Call  SetIdleAnimations ( .Actor:Self 00000001 $IdleAnimations_8021A55C )
   70:  Call  BindHandleEvent   ( .Actor:Self $Script_HandleEvent_8021B4A8 )
   84:  Call  SetPartEventBits  ( .Actor:Self 00000001 00008000 .True )
   A0:  Call  SetStatusTable    ( .Actor:Self $StatusTable_8021A660 )
   B4:  Call  PlayLoopingSoundAtActor   ( .Actor:Self 00000000 80000001 )
   CC:  Call  SetAnimation      ( .Actor:Self 00000001 002C0005 )
   E4:  Call  GetActorPos       ( .Actor:Self *Var0 *Var1 *Var2 )
  100:  Call  SetActorJumpGravity       ( .Actor:Self *Fixed[2.0] )
  114:  Call  SetGoalPos        ( .Actor:Self *Var0  0` *Var2 )
  130:  Call  JumpToGoal        ( .Actor:Self  5` .False .True .False )
  150:  Call  8026ED20  ( FFFFFF81 00000001 00000001 )
  168:  Call  8026EBF8  ( FFFFFF81 00000001 00000000 00000002 00000000 0000000A 00000000 0000000A 00000000 00000000 )
  19C:  Call  8026EA7C  ( FFFFFF81 00000001 0000000F )
  1B4:  Wait  3`
  1C0:  Call  StopLoopingSoundAtActor   ( .Actor:Self 00000000 )
  1D4:  Return
  1DC:  End
}

#new:Script $Script_8021A9C8
{
    0:  Call  BindHandleEvent   ( .Actor:Self $Script_HandleEvent_8021ACE8 )
   14:  Call  SetActorVar       ( .Actor:Self 00000008 00000000 )
   2C:  Call  SetIdleAnimations ( .Actor:Self 00000001 $IdleAnimations_8021A510 )
   44:  Call  SetPartEventBits  ( .Actor:Self 00000001 00008000 .False )
   60:  Call  SetStatusTable    ( .Actor:Self $StatusTable_8021A5B4 )
   74:  Call  GetActorPos       ( .Actor:Self *Var0 *Var1 *Var2 )
   90:  Add   *Var2  00000002
   A0:  Call  PlayEffect        ( ~FX:Steam:FloatingRings *Var0 *Var1 *Var2 00000000 00000000 00000000 00000000 00000000 00000000 00000000 00000000 00000000 )
   E4:  Call  StopLoopingSoundAtActor   ( .Actor:Self 00000000 )
   F8:  Call  8026ED20  ( FFFFFF81 00000001 00000000 )
  110:  Return
  118:  End
}

#new:Script $Script_8021AAE8
{
    0:  Call  GetActorVar   ( .Actor:Self 00000008 *Var0 )
   18:  If  *Var0  ==  00000001
   28:  	Call  StopLoopingSoundAtActor   ( .Actor:Self 00000000 )
   3C:  	Call  8026ED20  ( FFFFFF81 00000001 00000000 )
   54:  EndIf
   5C:  Return
   64:  End
}

#new:Script $Script_8021AB54
{
    0:  ExecWait  $Script_8021AAE8
    C:  Call  StartRumble   ( 0000000B )
   1C:  Thread
   24:  	Call  ShakeCam  ( .Cam:Battle 00000000  2` *Fixed[0.75] )
   40:  	Call  ShakeCam  ( .Cam:Battle 00000000  5` *Fixed[3.0] )
   5C:  	Call  ShakeCam  ( .Cam:Battle 00000000  10` *Fixed[4.5] )
   78:  	Call  ShakeCam  ( .Cam:Battle 00000000  5` *Fixed[3.0] )
   94:  EndThread
   9C:  Call  GetActorPos   ( .Actor:Self *Var0 *Var1 *Var2 )
   B8:  Add   *Var2  00000002
   C8:  Call  PlayEffect    ( ~FX:SmokeRing:Blast1 *Var0 *Var1 *Var2 00000000 00000000 00000000 00000000 00000000 00000000 00000000 00000000 00000000 )
  10C:  Add   *Var1  00000014
  11C:  Add   *Var2  00000002
  12C:  Call  PlayEffect    ( ~FX:Explosion1 *Var0 *Var1 *Var2 00000000 00000000 00000000 00000000 00000000 00000000 00000000 00000000 00000000 )
  170:  Call  PlaySoundAtActor  ( .Actor:Self .Sound:BombBlast )
  184:  Return
  18C:  End
}

#new:Script $Script_HandleEvent_8021ACE8
{
    0:  Call  UseIdleAnimation  ( .Actor:Self .False )
   14:  Call  EnableIdleScript  ( .Actor:Self 00000000 )
   28:  Call  GetLastEvent      ( .Actor:Self *Var0 )
   3C:  Switch  *Var0
   48:  	Case  ==  .Event:HitCombo % 9
   54:  		Call  GetLastDamage ( .Actor:Self *Var0 )
   68:  		If  *Var0  !=  00000000
   78:  			Call  SetActorVar   ( .Actor:Self 00000000 00000001 )
   90:  		EndIf
   98:  		SetConst  *Var0  00000001
   A8:  		SetConst  *Var1  002C000E
   B8:  		ExecWait  DoNormalHit
   C4:  	Case  ==  .Event:Hit % A
   D0:  		Call  GetLastElement    ( *VarE )
   E0:  		If  *VarE  &  00000020
   F0:  			SetConst  *Var0  00000001
  100:  			SetConst  *Var1  002C0010
  110:  			SetConst  *Var2  002C0011
  120:  			ExecWait  DoBurnHit
  12C:  			ExecWait  $Script_8021AB54
  138:  			SetConst  *Var0  00000001
  148:  			SetConst  *Var1  002C0011
  158:  			Set   *Var2  FFFFCFC7
  168:  			ExecWait  DoDeath
  174:  			Return
  17C:  		Else
  184:  			SetConst  *Var0  00000001
  194:  			SetConst  *Var1  002C000E
  1A4:  			ExecWait  DoNormalHit
  1B0:  			Call  GetLastDamage ( .Actor:Self *Var0 )
  1C4:  			If  *Var0  !=  00000000
  1D4:  				ExecWait  $Script_Ignite
  1E0:  			EndIf
  1E8:  		EndIf
  1F0:  	CaseOR  ==  .Event:BurnHit % E
  1FC:  	CaseOR  ==  .Event:BurnDeath % 24
  208:  		SetConst  *Var0  00000001
  218:  		SetConst  *Var1  002C0010
  228:  		SetConst  *Var2  002C0011
  238:  		ExecWait  DoBurnHit
  244:  		ExecWait  $Script_8021AB54
  250:  		SetConst  *Var0  00000001
  260:  		SetConst  *Var1  002C0011
  270:  		Set   *Var2  FFFFCFC7
  280:  		ExecWait  DoDeath
  28C:  		Return
  294:  	EndCaseGroup
  29C:  	Case  ==  .Event:SpinSmashHit % B
  2A8:  		SetConst  *Var0  00000001
  2B8:  		SetConst  *Var1  002C000E
  2C8:  		ExecWait  DoSpinSmashHit
  2D4:  		Call  GetLastDamage ( .Actor:Self *Var0 )
  2E8:  		If  *Var0  !=  00000000
  2F8:  			ExecWait  $Script_Ignite
  304:  		EndIf
  30C:  	Case  ==  .Event:SpinSmashDeath % 21
  318:  		SetConst  *Var0  00000001
  328:  		SetConst  *Var1  002C000E
  338:  		ExecWait  DoSpinSmashHit
  344:  		ExecWait  $Script_8021AAE8
  350:  		SetConst  *Var0  00000001
  360:  		SetConst  *Var1  002C000E
  370:  		ExecWait  DoDeath
  37C:  		Return
  384:  	CaseOR  ==  .Event:ShockHit % 2F
  390:  	CaseOR  ==  .Event:ShockDeath % 26
  39C:  		SetConst  *Var0  00000001
  3AC:  		SetConst  *Var1  002C0010
  3BC:  		Set   *Var2  FFFFCFC7
  3CC:  		ExecWait  DoDeath
  3D8:  		Return
  3E0:  	Case  ==  00000017 % 17
  3EC:  		SetConst  *Var0  00000001
  3FC:  		SetConst  *Var1  002C0002
  40C:  		ExecWait  DoImmune
  418:  	CaseOR  ==  .Event:Immune % 19
  424:  	CaseOR  ==  .Event:AirLiftFailed % 1F
  430:  		SetConst  *Var0  00000001
  440:  		SetConst  *Var1  002C0002
  450:  		ExecWait  DoImmune
  45C:  		Call  GetActorVar   ( .Actor:Self 00000000 *Var0 )
  474:  		If  *Var0  ==  00000001
  484:  			ExecWait  $Script_Ignite
  490:  		EndIf
  498:  	EndCaseGroup
  4A0:  	Case  ==  .Event:Death % 20
  4AC:  		Call  GetLastElement    ( *VarE )
  4BC:  		If  *VarE  &  00000020
  4CC:  			SetConst  *Var0  00000001
  4DC:  			SetConst  *Var1  002C0010
  4EC:  			SetConst  *Var2  002C0011
  4FC:  			ExecWait  DoBurnHit
  508:  			ExecWait  $Script_8021AB54
  514:  			SetConst  *Var0  00000001
  524:  			SetConst  *Var1  002C0011
  534:  			Set   *Var2  FFFFCFC7
  544:  			ExecWait  DoDeath
  550:  			Return
  558:  		Else
  560:  			SetConst  *Var0  00000001
  570:  			SetConst  *Var1  002C000E
  580:  			ExecWait  DoNormalHit
  58C:  			Wait  10`
  598:  			ExecWait  $Script_8021AAE8
  5A4:  			SetConst  *Var0  00000001
  5B4:  			SetConst  *Var1  002C000E
  5C4:  			ExecWait  DoDeath
  5D0:  		EndIf
  5D8:  		Return
  5E0:  	Case  ==  .Event:ExplodeTrigger % 22
  5EC:  		SetConst  *Var0  00000001
  5FC:  		SetConst  *Var1  002C0010
  60C:  		SetConst  *Var2  002C0011
  61C:  		ExecWait  DoBurnHit
  628:  		ExecWait  $Script_8021AB54
  634:  		SetConst  *Var0  00000001
  644:  		SetConst  *Var1  002C0011
  654:  		Set   *Var2  FFFFCFC7
  664:  		ExecWait  DoDeath
  670:  		Return
  678:  	Case  ==  .Event:RecoverStatus % 31
  684:  		SetConst  *Var0  00000001
  694:  		SetConst  *Var1  002C0002
  6A4:  		ExecWait  DoRecover
  6B0:  	Case  ==  .Event:ScareAway % 39
  6BC:  		SetConst  *Var0  00000001
  6CC:  		SetConst  *Var1  002C0006
  6DC:  		SetConst  *Var2  002C000E
  6EC:  		ExecWait  DoScareAway
  6F8:  		Return
  700:  	Case  ==  .Event:BeginAirLift % 3A
  70C:  		SetConst  *Var0  00000001
  71C:  		SetConst  *Var1  002C001C
  72C:  		ExecWait  DoAirLift
  738:  	Case  ==  .Event:BlowAway % 16
  744:  		SetConst  *Var0  00000001
  754:  		SetConst  *Var1  002C001C
  764:  		ExecWait  DoBlowAway
  770:  		Return
  778:  	Default
  780:  EndSwitch
  788:  Call  EnableIdleScript  ( .Actor:Self 00000001 )
  79C:  Call  UseIdleAnimation  ( .Actor:Self .True )
  7B0:  Return
  7B8:  End
}

#new:Script $Script_HandleEvent_8021B4A8
{
    0:  Call  UseIdleAnimation  ( .Actor:Self .False )
   14:  Call  EnableIdleScript  ( .Actor:Self 00000000 )
   28:  Call  GetLastEvent      ( .Actor:Self *Var0 )
   3C:  Switch  *Var0
   48:  	Case  ==  .Event:HitCombo % 9
   54:  		Call  GetLastElement    ( *VarE )
   64:  		If  *VarE  &  00000004
   74:  			ExecWait  $Script_8021A9C8
   80:  			SetConst  *Var0  00000001
   90:  			SetConst  *Var1  002C000E
   A0:  			ExecWait  DoNormalHit
   AC:  		Else
   B4:  			SetConst  *Var0  00000001
   C4:  			SetConst  *Var1  002C000F
   D4:  			ExecWait  DoNormalHit
   E0:  		EndIf
   E8:  	Case  ==  .Event:Hit % A
   F4:  		Call  GetLastElement    ( *VarE )
  104:  		Switch  *VarE
  110:  			Case  &  00000004
  11C:  				ExecWait  $Script_8021A9C8
  128:  				SetConst  *Var0  00000001
  138:  				SetConst  *Var1  002C000E
  148:  				ExecWait  DoNormalHit
  154:  			Case  &  00000020
  160:  				SetConst  *Var0  00000001
  170:  				SetConst  *Var1  002C0010
  180:  				ExecWait  DoNormalHit
  18C:  				ExecWait  $Script_8021AB54
  198:  				SetConst  *Var0  00000001
  1A8:  				SetConst  *Var1  002C0011
  1B8:  				Set   *Var2  FFFFCFC7
  1C8:  				ExecWait  DoDeath
  1D4:  				Return
  1DC:  			Default
  1E4:  				SetConst  *Var0  00000001
  1F4:  				SetConst  *Var1  002C000F
  204:  				ExecWait  DoNormalHit
  210:  				Call  GetLastDamage ( .Actor:Self *Var0 )
  224:  				If  *Var0  >  00000000
  234:  					ExecWait  $Script_8021AB54
  240:  					SetConst  *Var0  00000001
  250:  					SetConst  *Var1  002C0011
  260:  					Set   *Var2  FFFFCFC7
  270:  					ExecWait  DoDeath
  27C:  					Return
  284:  				EndIf
  28C:  		EndSwitch
  294:  	CaseOR  ==  .Event:BurnHit % E
  2A0:  	CaseOR  ==  .Event:BurnDeath % 24
  2AC:  	CaseOR  ==  .Event:SpinSmashHit % B
  2B8:  	CaseOR  ==  .Event:SpinSmashDeath % 21
  2C4:  	CaseOR  ==  .Event:ExplodeTrigger % 22
  2D0:  		ExecWait  $Script_8021AB54
  2DC:  		SetConst  *Var0  00000001
  2EC:  		SetConst  *Var1  002C0011
  2FC:  		Set   *Var2  FFFFCFC7
  30C:  		ExecWait  DoDeath
  318:  		Return
  320:  	EndCaseGroup
  328:  	CaseOR  ==  00000017 % 17
  334:  	CaseOR  ==  .Event:Immune % 19
  340:  	CaseOR  ==  .Event:AirLiftFailed % 1F
  34C:  		SetConst  *Var0  00000001
  35C:  		SetConst  *Var1  002C0003
  36C:  		ExecWait  DoImmune
  378:  	EndCaseGroup
  380:  	Case  ==  .Event:Death % 20
  38C:  		Call  GetLastElement    ( *VarE )
  39C:  		If  *VarE  &  00000004
  3AC:  			ExecWait  $Script_8021A9C8
  3B8:  			SetConst  *Var0  00000001
  3C8:  			SetConst  *Var1  002C000E
  3D8:  		Else
  3E0:  			ExecWait  $Script_8021AB54
  3EC:  			SetConst  *Var0  00000001
  3FC:  			SetConst  *Var1  002C0011
  40C:  			Set   *Var2  FFFFCFC7
  41C:  		EndIf
  424:  		ExecWait  DoDeath
  430:  		Return
  438:  	CaseOR  ==  .Event:ShockHit % 2F
  444:  	CaseOR  ==  .Event:ShockDeath % 26
  450:  		ExecWait  $Script_8021AB54
  45C:  		SetConst  *Var0  00000001
  46C:  		SetConst  *Var1  002C0011
  47C:  		Set   *Var2  FFFFCFC7
  48C:  		ExecWait  DoDeath
  498:  		Return
  4A0:  	EndCaseGroup
  4A8:  	Case  ==  .Event:RecoverStatus % 31
  4B4:  		SetConst  *Var0  00000001
  4C4:  		SetConst  *Var1  002C0003
  4D4:  		ExecWait  DoRecover
  4E0:  	Case  ==  .Event:ScareAway % 39
  4EC:  		ExecWait  $Script_8021AAE8
  4F8:  		SetConst  *Var0  00000001
  508:  		SetConst  *Var1  002C0006
  518:  		SetConst  *Var2  002C000E
  528:  		ExecWait  DoScareAway
  534:  		Return
  53C:  	Case  ==  .Event:BeginAirLift % 3A
  548:  		SetConst  *Var0  00000001
  558:  		SetConst  *Var1  002C001D
  568:  		ExecWait  DoAirLift
  574:  	Case  ==  .Event:BlowAway % 16
  580:  		Call  80269E80  ( *Var0 )
  590:  		If  *Var0  ==  00000014
  5A0:  			ExecWait  $Script_8021A9C8
  5AC:  			SetConst  *Var0  00000001
  5BC:  			SetConst  *Var1  002C001C
  5CC:  		Else
  5D4:  			ChildThread
  5DC:  				Wait  100`
  5E8:  				ExecWait  $Script_8021AB54
  5F4:  			EndChildThread
  5FC:  			SetConst  *Var0  00000001
  60C:  			SetConst  *Var1  002C001D
  61C:  		EndIf
  624:  		ExecWait  DoBlowAway
  630:  		Return
  638:  	Case  ==  .Event:UpAndAway % 3D
  644:  		ExecWait  $Script_8021A9C8
  650:  	Default
  658:  EndSwitch
  660:  Call  EnableIdleScript  ( .Actor:Self 00000001 )
  674:  Call  UseIdleAnimation  ( .Actor:Self .True )
  688:  Return
  690:  End
}

#new:Script $Script_TackleAttack
{
    0:  Call  SetTargetActor    ( .Actor:Self .Actor:Player )
   14:  Call  SetGoalToTarget   ( .Actor:Self )
   24:  Call  UseBattleCamPreset    ( 0000003F )
   34:  Call  BattleCamTargetActor  ( .Actor:Self )
   44:  Call  8024ECF8  ( FFFFFFFF 00000001 00000000 )
   5C:  Call  SetTargetActor    ( .Actor:Self .Actor:Player )
   70:  Call  SetAnimation      ( .Actor:Self 00000001 002C0006 )
   88:  Call  SetGoalToTarget   ( .Actor:Self )
   98:  Call  AddGoalPos        ( .Actor:Self  50`  0`  0` )
   B4:  Call  SetActorSpeed     ( .Actor:Self *Fixed[6.0] )
   C8:  Call  RunToGoal ( .Actor:Self  0` .False )
   E0:  Call  SetAnimation      ( .Actor:Self 00000001 002C0002 )
   F8:  Call  SetActorDispOffset    ( .Actor:Self 00000000 FFFFFFFF 00000000 )
  114:  Wait  1`
  120:  Call  SetActorDispOffset    ( .Actor:Self 00000000 FFFFFFFE 00000000 )
  13C:  Wait  5`
  148:  Call  SetActorDispOffset    ( .Actor:Self 00000000 00000000 00000000 )
  164:  Call  SetAnimation      ( .Actor:Self 00000001 002C0006 )
  17C:  Call  EnemyTestTarget   ( .Actor:Self *Var0 ~Flags:DamageType:0 00000000 00000001 00000010 )
  1A0:  Switch  *Var0
  1AC:  	CaseOR  ==  .HitResult:Miss % 6
  1B8:  	CaseOR  ==  .HitResult:Lucky % 5
  1C4:  		Set   *VarA  *Var0
  1D4:  		Call  SetGoalToTarget       ( .Actor:Self )
  1E4:  		Call  GetGoalPos    ( .Actor:Self *Var0 *Var1 *Var2 )
  200:  		Sub   *Var0  00000005
  210:  		Set   *Var1  00000000
  220:  		Call  SetActorJumpGravity   ( .Actor:Self *Fixed[1.1] )
  234:  		Call  SetGoalPos    ( .Actor:Self *Var0 *Var1 *Var2 )
  250:  		Call  JumpToGoal    ( .Actor:Self  20` .False .True .False )
  270:  		Call  SetAnimation  ( .Actor:Self 00000001 002C001C )
  288:  		Call  GetGoalPos    ( .Actor:Self *Var0 *Var1 *Var2 )
  2A4:  		Sub   *Var0  00000014
  2B4:  		Call  SetActorJumpGravity   ( .Actor:Self *Fixed[3.0] )
  2C8:  		Call  SetGoalPos    ( .Actor:Self *Var0 *Var1 *Var2 )
  2E4:  		Call  JumpToGoal    ( .Actor:Self  6` .False .True .False )
  304:  		Call  GetGoalPos    ( .Actor:Self *Var0 *Var1 *Var2 )
  320:  		Sub   *Var0  0000000F
  330:  		Call  SetActorJumpGravity   ( .Actor:Self *Fixed[3.0] )
  344:  		Call  SetGoalPos    ( .Actor:Self *Var0 *Var1 *Var2 )
  360:  		Call  JumpToGoal    ( .Actor:Self  5` .False .True .False )
  380:  		Call  GetGoalPos    ( .Actor:Self *Var0 *Var1 *Var2 )
  39C:  		Wait  8`
  3A8:  		If  *VarA  ==  .HitResult:Lucky % 5
  3B8:  			Call  EnemyTestTarget   ( .Actor:Self *Var0 ~Flags:DamageType:TriggerLucky 00000000 00000000 00000000 )
  3DC:  		EndIf
  3E4:  		Wait  5`
  3F0:  		Call  YieldTurn ( )
  3FC:  		Call  UseBattleCamPreset    ( 00000002 )
  40C:  		Call  SetActorYaw   ( .Actor:Self  180` )
  420:  		Call  AddActorDecoration    ( .Actor:Self 00000001 00000000 .Decoration:Sweat )
  43C:  		Call  SetAnimation  ( .Actor:Self 00000001 002C0006 )
  454:  		Call  SetGoalToHome ( .Actor:Self )
  464:  		Call  SetActorSpeed ( .Actor:Self *Fixed[8.0] )
  478:  		Call  RunToGoal     ( .Actor:Self  0` .False )
  490:  		Call  SetAnimation  ( .Actor:Self 00000001 002C0002 )
  4A8:  		Call  RemoveActorDecoration ( .Actor:Self 00000001 00000000 )
  4C0:  		Call  SetActorYaw   ( .Actor:Self  0` )
  4D4:  		Return
  4DC:  	EndCaseGroup
  4E4:  	Case  ==  .HitResult:HitStatic % 7
  4F0:  		Call  SetGoalToTarget   ( .Actor:Self )
  500:  		Call  SetActorJumpGravity   ( .Actor:Self *Fixed[1.1] )
  514:  		Call  JumpToGoal        ( .Actor:Self  20` .False .True .False )
  534:  		Call  SetAnimation      ( .Actor:Self 00000001 002C0014 )
  54C:  		Call  GetActorPos       ( .Actor:Self *Var0 *Var1 *Var2 )
  568:  		Call  GetActorSize      ( .Actor:Self *Var3 *Var4 )
  580:  		Call  PlayEffect        ( ~FX:ShockVolume *Var0 *Var1 *Var2 *Var4 *Var3 00000000 00000000 00000000 00000000 00000000 00000000 00000000 )
  5C4:  		Call  PlaySoundAtActor  ( .Actor:Self 0000037B )
  5D8:  		Wait  20`
  5E4:  		ExecWait  $Script_8021AB54
  5F0:  		Call  EnemyDamageTarget ( .Actor:Self *Var0 ~Flags:DamageType:Blast 00000000 00000000 00000002 00000020 )
  618:  		Return
  620:  EndSwitch
  628:  Call  SetGoalToTarget   ( .Actor:Self )
  638:  Call  SetActorJumpGravity   ( .Actor:Self *Fixed[1.1] )
  64C:  Call  JumpToGoal        ( .Actor:Self  20` .False .True .False )
  66C:  Wait  2`
  678:  Call  EnemyDamageTarget ( .Actor:Self *Var0 ~Flags:DamageType:0 00000000 00000000 00000001 00000020 )
  6A0:  Call  SetAnimation      ( .Actor:Self 00000001 002C0002 )
  6B8:  Switch  *Var0
  6C4:  	CaseOR  ==  .HitResult:Hit % 0
  6D0:  	CaseOR  ==  .HitResult:QuakeImmune % 2
  6DC:  		Call  UseBattleCamPreset    ( 00000002 )
  6EC:  		Call  GetGoalPos    ( .Actor:Self *Var0 *Var1 *Var2 )
  708:  		Add   *Var0  00000028
  718:  		Set   *Var1  00000000
  728:  		Call  SetActorJumpGravity   ( .Actor:Self *Fixed[1.8] )
  73C:  		Call  SetGoalPos    ( .Actor:Self *Var0 *Var1 *Var2 )
  758:  		Call  JumpToGoal    ( .Actor:Self  10` .False .True .False )
  778:  		Add   *Var0  0000001E
  788:  		Call  SetGoalPos    ( .Actor:Self *Var0 *Var1 *Var2 )
  7A4:  		Call  JumpToGoal    ( .Actor:Self  8` .False .True .False )
  7C4:  		Add   *Var0  00000014
  7D4:  		Call  SetGoalPos    ( .Actor:Self *Var0 *Var1 *Var2 )
  7F0:  		Call  JumpToGoal    ( .Actor:Self  6` .False .True .False )
  810:  		Wait  4`
  81C:  		Call  YieldTurn ( )
  828:  		Call  SetAnimation  ( .Actor:Self 00000001 002C0006 )
  840:  		Call  SetGoalToHome ( .Actor:Self )
  850:  		Call  SetActorSpeed ( .Actor:Self *Fixed[8.0] )
  864:  		Call  RunToGoal     ( .Actor:Self  0` .False )
  87C:  		Call  SetAnimation  ( .Actor:Self 00000001 002C0002 )
  894:  	EndCaseGroup
  89C:  EndSwitch
  8A4:  Return
  8AC:  End
}

#new:Script $Script_BlastAttack
{
    0:  Call  SetTargetActor        ( .Actor:Self .Actor:Player )
   14:  Call  SetGoalToTarget       ( .Actor:Self )
   24:  Call  UseBattleCamPreset    ( 0000003F )
   34:  Call  BattleCamTargetActor  ( .Actor:Self )
   44:  Call  8024ECF8  ( FFFFFFFF 00000001 00000000 )
   5C:  Call  PlayLoopingSoundAtActor   ( .Actor:Self 00000000 80000001 )
   74:  Call  EnemyTestTarget       ( .Actor:Self *Var0 ~Flags:DamageType:0 00000000 00000001 00000010 )
   98:  Switch  *Var0
   A4:  	CaseOR  ==  .HitResult:Miss % 6
   B0:  	CaseOR  ==  .HitResult:Lucky % 5
   BC:  		Set   *VarA  *Var0
   CC:  		Call  SetTargetActor        ( .Actor:Self .Actor:Player )
   E0:  		Call  SetAnimation  ( .Actor:Self 00000001 002C0007 )
   F8:  		Call  SetGoalToTarget       ( .Actor:Self )
  108:  		Call  AddGoalPos    ( .Actor:Self  80`  0`  0` )
  124:  		Call  SetActorSpeed ( .Actor:Self *Fixed[5.0] )
  138:  		Call  RunToGoal     ( .Actor:Self  0` .False )
  150:  		Call  SetActorRotationOffset    ( .Actor:Self FFFFFFFF 0000000E 00000000 )
  16C:  		Call  SetActorRotation      ( .Actor:Self 00000000 00000000 0000005A )
  188:  		Call  SetAnimation  ( .Actor:Self 00000001 002C0007 )
  1A0:  		Call  SetActorJumpGravity   ( .Actor:Self *Fixed[3.0] )
  1B4:  		Call  GetActorPos   ( .Actor:Self *Var0 *Var1 *Var2 )
  1D0:  		Sub   *Var0  0000001E
  1E0:  		Call  SetGoalPos    ( .Actor:Self *Var0 *Var1 *Var2 )
  1FC:  		Call  JumpToGoal    ( .Actor:Self  5` .False .True .False )
  21C:  		Call  UseBattleCamPreset    ( 00000002 )
  22C:  		ExecWait  $Script_8021AB54
  238:  		Call  SetAnimation  ( .Actor:Self 00000001 002C0011 )
  250:  		Wait  10`
  25C:  		If  *VarA  ==  00000005
  26C:  			Call  EnemyTestTarget   ( .Actor:Self *Var0 ~Flags:DamageType:TriggerLucky 00000000 00000000 00000000 )
  290:  		EndIf
  298:  		Wait  10`
  2A4:  		Call  SetActorRotationOffset    ( .Actor:Self 00000000 00000000 00000000 )
  2C0:  		Call  SetActorRotation  ( .Actor:Self 00000000 00000000 00000000 )
  2DC:  		SetConst  *Var0  00000001
  2EC:  		SetConst  *Var1  FFFFFFFF
  2FC:  		Set   *Var2  FFFFCFC7
  30C:  		ExecWait  DoDeath
  318:  		Return
  320:  	EndCaseGroup
  328:  EndSwitch
  330:  Call  SetTargetActor    ( .Actor:Self .Actor:Player )
  344:  Call  SetAnimation  ( .Actor:Self 00000001 002C0007 )
  35C:  Call  SetGoalToTarget   ( .Actor:Self )
  36C:  Call  AddGoalPos    ( .Actor:Self  10`  0`  0` )
  388:  Call  SetActorSpeed ( .Actor:Self *Fixed[5.0] )
  39C:  Call  RunToGoal     ( .Actor:Self  0` .False )
  3B4:  Call  SetAnimation  ( .Actor:Self 00000001 002C0014 )
  3CC:  Wait  15`
  3D8:  Set   *VarA  00000001
  3E8:  ExecWait  $Script_8021AB54
  3F4:  Call  SetAnimation  ( .Actor:Self 00000001 002C0011 )
  40C:  Wait  2`
  418:  Call  EnemyDamageTarget ( .Actor:Self *Var0 ~Flags:DamageType:NoContact|Blast 00000000 00000000 00000002 00000020 )
  440:  Call  UseBattleCamPreset    ( 00000002 )
  450:  Wait  15`
  45C:  SetConst  *Var0  00000001
  46C:  SetConst  *Var1  002C0011
  47C:  Set   *Var2  FFFFCFC7
  48C:  ExecWait  DoDeath
  498:  Return
  4A0:  End
}

#new:Script $Script_TakeTurn_8021C89C
{
    0:  Call  UseIdleAnimation  ( .Actor:Self .False )
   14:  Call  EnableIdleScript  ( .Actor:Self 00000000 )
   28:  Call  GetActorVar       ( .Actor:Self 00000008 *Var0 )
   40:  If  *Var0  ==  00000000
   50:  	ExecWait  $Script_TackleAttack
   5C:  Else
   64:  	ExecWait  $Script_BlastAttack
   70:  	Return
   78:  EndIf
   80:  Call  EnableIdleScript  ( .Actor:Self 00000001 )
   94:  Call  UseIdleAnimation  ( .Actor:Self .True )
   A8:  Return
   B0:  End
}

PADDING: 8021C954 to 8021C960 (004A59F4 to 004A5A00)
00000000 00000000 00000000

#new:DefenseTable $DefenseTable_8021C960
{
	.Element:Normal 00000001
	.Element:Hammer 00000001
	.Element:Jump   00000001
	.Element:Water  00000001
	.Element:Blast  00000001
	.Element:End
}

#new:DefenseTable $DefenseTable_8021C98C
{
	.Element:Normal 00000000
	.Element:End
}

#new:StatusTable $StatusTable_8021C998
{
	.Status:Normal      0`
	.Status:Default     0`
	.Status:Sleep      90`
	.Status:Poison     60`
	.Status:Frozen    100`
	.Status:Dizzy      90`
	.Status:Fear        0`
	.Status:Static     80`
	.Status:Paralyze   90`
	.Status:Shrink     90`
	.Status:Stop      100`
	.Status:DefaultTurnMod    0`
	.Status:SleepTurnMod      0`
	.Status:PoisonTurnMod     0`
	.Status:FrozenTurnMod     0`
	.Status:DizzyTurnMod      0`
	.Status:FearTurnMod       0`
	.Status:StaticTurnMod     0`
	.Status:ParalyzeTurnMod   1`
	.Status:ShrinkTurnMod     0`
	.Status:StopTurnMod       0`
	.Status:End
}

#new:PartsTable $PartsTable_8021CA44
{
	00800000 01000000 FE2400FF $IdleAnimations_8021CA90 $DefenseTable_8021C960 00001000 00000000 00F90000 00000000
}

#new:Actor $KoopaTroopa
{
	% stats
	[Index]         Bb
	[Level]         6`b
	[MaxHP]         4`b
	[Coins]         1`b
	[Flags]       00000000
	[StatusTable] $StatusTable_8021C998
	% ai
	[PartsCount]    1`s
	[PartsTable]  $PartsTable_8021CA44
	[Script]      $Script_Init_8021CB74
	% move effectiveness
	[Escape]       70`b
	[Item]         90`b
	[AirLift]      90`b
	[Hurricane]    90`b % Bow's "Spook" as well
	[UpAndAway]    95`b
	[PowerBounce] 100`b
	[SpinSmash]     0`b % weight (0-4)
	% ui positions
	[Size]         28`b  36`b % width height
	[HealthBar]     0`b   0`b % dx dy
	[StatusTurn]  -15`b  32`b % dx dy
	[StatusIcon]    5`b  32`b % dx dy
}

#new:IdleAnimations $IdleAnimations_8021CA90
{
	.Status:Normal    00290101
	.Status:Stone     00290100
	.Status:Sleep     00290111
	.Status:Poison    00290101
	.Status:Stop      00290100
	.Status:Static    00290101
	.Status:Paralyze  00290100
	.Status:Dizzy     00290113
	.Status:Fear      00290113
	.Status:End
}

#new:IdleAnimations $IdleAnimations_8021CADC
{
	.Status:Normal    00290103
	.Status:Stone     00290100
	.Status:Sleep     00290111
	.Status:Poison    00290103
	.Status:Stop      00290100
	.Status:Static    00290103
	.Status:Paralyze  00290100
	.Status:Dizzy     00290113
	.Status:Fear      00290113
	.Status:End
}

#new:IdleAnimations $IdleAnimations_8021CB28
{
	.Status:Normal    0029010F
	.Status:Stone     00290110
	.Status:Sleep     00290112
	.Status:Poison    0029010F
	.Status:Stop      00290110
	.Status:Static    0029010F
	.Status:Paralyze  00290110
	.Status:Dizzy     00290114
	.Status:Fear      00290114
	.Status:End
}

#new:Script $Script_Init_8021CB74
{
    0:  Call  BindTakeTurn  ( .Actor:Self $Script_TakeTurn_8021DD9C )
   14:  Call  BindIdle      ( .Actor:Self $Script_Idle_8021CD30 )
   28:  Call  BindHandleEvent   ( .Actor:Self $Script_HandleEvent_8021D218 )
   3C:  Call  SetActorVar   ( .Actor:Self 00000008 00000000 )
   54:  Return
   5C:  End
}

#new:Script $Script_8021CBD8
{
    0:  Switch  *Var0
    C:  	Case  ==  00000000
   18:  		If  *Var1  &  00041000
   28:  			Call  SetTargetOffset       ( .Actor:Self 00000001  -5`  15` )
   44:  			Call  8027D4C8  ( FFFFFF81 00000001 00000000 00000000 )
   60:  			Call  $Function_80218020    ( FFFFFFF6 00000014 0000000A 00000014 )
   7C:  		Else
   84:  			Call  SetTargetOffset       ( .Actor:Self 00000001  -4`  32` )
   A0:  			Call  8027D4C8  ( FFFFFF81 00000001 FFFFFFFF FFFFFFFC )
   BC:  			Call  $Function_80218020    ( FFFFFFF1 00000020 00000005 00000020 )
   D8:  		EndIf
   E0:  	Case  ==  00000001
   EC:  		Call  SetTargetOffset       ( .Actor:Self 00000001  -5`  15` )
  108:  		Call  8027D4C8  ( FFFFFF81 00000001 00000000 00000000 )
  124:  		Call  $Function_80218020    ( FFFFFFF6 00000014 0000000A 00000014 )
  140:  EndSwitch
  148:  Return
  150:  End
}

#new:Script $Script_Idle_8021CD30
{
    0:  Label  0
    C:  Call  RandInt   ( 00000050 *VarA )
   20:  Add   *VarA  00000050
   30:  Loop  *VarA
   3C:  	Label  1
   48:  	Call  GetActorVar       ( .Actor:Self 00000008 *Var0 )
   60:  	Call  GetStatusFlags    ( .Actor:Self *Var1 )
   74:  	ExecWait  $Script_8021CBD8
   80:  	If  *Var0  ==  00000001
   90:  		Wait  1`
   9C:  		Goto  1
   A8:  	EndIf
   B0:  	If  *Var1  &  0035D000
   C0:  		Wait  1`
   CC:  		Goto  1
   D8:  	EndIf
   E0:  	Wait  1`
   EC:  EndLoop
   F4:  Call  GetActorPos   ( .Actor:Self *Var0 *Var1 *Var2 )
  110:  Add   *Var0  00000005
  120:  Call  SetActorIdleSpeed ( .Actor:Self *Fixed[1.0] )
  134:  Call  SetIdleAnimations ( .Actor:Self 00000001 $IdleAnimations_8021CADC )
  14C:  Call  SetIdleGoal   ( .Actor:Self *Var0 *Var1 *Var2 )
  168:  Call  IdleRunToGoal ( .Actor:Self  0` )
  17C:  Call  GetActorVar   ( .Actor:Self 00000008 *Var0 )
  194:  Switch  *Var0
  1A0:  	Case  ==  00000000
  1AC:  		Call  SetIdleAnimations ( .Actor:Self 00000001 $IdleAnimations_8021CA90 )
  1C4:  	Case  ==  00000001
  1D0:  		Call  SetIdleAnimations ( .Actor:Self 00000001 $IdleAnimations_8021CB28 )
  1E8:  EndSwitch
  1F0:  Loop  00000014
  1FC:  	Label  2
  208:  	Call  GetActorVar       ( .Actor:Self 00000008 *Var0 )
  220:  	Call  GetStatusFlags    ( .Actor:Self *Var1 )
  234:  	ExecWait  $Script_8021CBD8
  240:  	If  *Var0  ==  00000001
  250:  		Wait  1`
  25C:  		Goto  2
  268:  	EndIf
  270:  	If  *Var1  &  0035D000
  280:  		Wait  1`
  28C:  		Goto  2
  298:  	EndIf
  2A0:  	Wait  1`
  2AC:  EndLoop
  2B4:  Call  GetActorPos   ( .Actor:Self *Var0 *Var1 *Var2 )
  2D0:  Sub   *Var0  00000005
  2E0:  Call  SetActorIdleSpeed ( .Actor:Self *Fixed[1.0] )
  2F4:  Call  SetIdleAnimations ( .Actor:Self 00000001 $IdleAnimations_8021CADC )
  30C:  Call  SetIdleGoal   ( .Actor:Self *Var0 *Var1 *Var2 )
  328:  Call  IdleRunToGoal ( .Actor:Self  0` )
  33C:  Call  GetActorVar   ( .Actor:Self 00000008 *Var0 )
  354:  Switch  *Var0
  360:  	Case  ==  00000000
  36C:  		Call  SetIdleAnimations ( .Actor:Self 00000001 $IdleAnimations_8021CA90 )
  384:  	Case  ==  00000001
  390:  		Call  SetIdleAnimations ( .Actor:Self 00000001 $IdleAnimations_8021CB28 )
  3A8:  EndSwitch
  3B0:  Loop  00000050
  3BC:  	Label  3
  3C8:  	Call  GetActorVar       ( .Actor:Self 00000008 *Var0 )
  3E0:  	Call  GetStatusFlags    ( .Actor:Self *Var1 )
  3F4:  	ExecWait  $Script_8021CBD8
  400:  	If  *Var0  ==  00000001
  410:  		Wait  1`
  41C:  		Goto  3
  428:  	EndIf
  430:  	If  *Var1  &  0035D000
  440:  		Wait  1`
  44C:  		Goto  3
  458:  	EndIf
  460:  	Wait  1`
  46C:  EndLoop
  474:  Goto  0
  480:  Return
  488:  End
}

#new:IntTable $IntTable_8021D1C0
{
	00000009 00000010 00000016 0000001A 0000001E 00000020 00000021 00000020
	0000001E 0000001A 00000016 00000010 00000009 00000000 00000004 00000006
	00000007 00000006 00000004 00000000 00000002 00000000
}

#new:Script $Script_HandleEvent_8021D218
{
    0:  Call  UseIdleAnimation  ( .Actor:Self .False )
   14:  Call  EnableIdleScript  ( .Actor:Self 00000000 )
   28:  Call  SetActorYaw       ( .Actor:Self  0` )
   3C:  Call  GetLastEvent      ( .Actor:Self *Var0 )
   50:  Switch  *Var0
   5C:  	CaseOR  ==  .Event:HitCombo % 9
   68:  	CaseOR  ==  .Event:Hit % A
   74:  		SetConst  *Var0  00000001
   84:  		SetConst  *Var1  0029010B
   94:  		ExecWait  DoNormalHit
   A0:  	EndCaseGroup
   A8:  	Case  ==  .Event:BurnHit % E
   B4:  		SetConst  *Var0  00000001
   C4:  		SetConst  *Var1  0029010C
   D4:  		SetConst  *Var2  0029010D
   E4:  		ExecWait  DoBurnHit
   F0:  	Case  ==  .Event:BurnDeath % 24
   FC:  		SetConst  *Var0  00000001
  10C:  		SetConst  *Var1  0029010C
  11C:  		SetConst  *Var2  0029010D
  12C:  		ExecWait  DoBurnHit
  138:  		SetConst  *Var0  00000001
  148:  		SetConst  *Var1  0029010D
  158:  		ExecWait  DoDeath
  164:  		Return
  16C:  	Case  ==  .Event:SpinSmashHit % B
  178:  		SetConst  *Var0  00000001
  188:  		SetConst  *Var1  0029010B
  198:  		ExecWait  DoSpinSmashHit
  1A4:  	Case  ==  .Event:SpinSmashDeath % 21
  1B0:  		SetConst  *Var0  00000001
  1C0:  		SetConst  *Var1  0029010B
  1D0:  		ExecWait  DoSpinSmashHit
  1DC:  		SetConst  *Var0  00000001
  1EC:  		SetConst  *Var1  0029010B
  1FC:  		ExecWait  DoDeath
  208:  		Return
  210:  	Case  ==  .Event:FlipTrigger % D
  21C:  		Call  SetActorVar       ( .Actor:Self 00000008 00000001 )
  234:  		Call  SetActorVar       ( .Actor:Self 00000009 00000002 )
  24C:  		Call  SetDefenseTable   ( .Actor:Self 00000001 $DefenseTable_8021C98C )
  264:  		Call  SetIdleAnimations ( .Actor:Self 00000001 $IdleAnimations_8021CB28 )
  27C:  		Call  SetTargetOffset   ( .Actor:Self 00000001  -5`  15` )
  298:  		Call  8027D4C8  ( FFFFFF81 00000001 00000000 00000000 )
  2B4:  		Call  SetActorFlagBits  ( .Actor:Self 00000400 .True )
  2CC:  		Call  SetAnimation      ( .Actor:Self 00000001 0029010B )
  2E4:  		Call  GetStatusFlags    ( .Actor:Self *VarA )
  2F8:  		Call  SetActorRotationOffset    ( .Actor:Self 00000000 0000000C 00000000 )
  314:  		ChildThread
  31C:  			Wait  4`
  328:  			Call  SetActorRotation  ( .Actor:Self 00000000 00000000 0000001E )
  344:  			Wait  1`
  350:  			Call  SetActorRotation  ( .Actor:Self 00000000 00000000 00000000 )
  36C:  			Wait  1`
  378:  			Call  SetActorRotation  ( .Actor:Self 00000000 00000000 FFFFFFE2 )
  394:  			Wait  1`
  3A0:  			Call  SetActorRotation  ( .Actor:Self 00000000 00000000 FFFFFFC4 )
  3BC:  			Wait  1`
  3C8:  			Call  SetActorRotation  ( .Actor:Self 00000000 00000000 FFFFFFB5 )
  3E4:  			Wait  1`
  3F0:  		EndChildThread
  3F8:  		UseIntBuffer  $IntTable_8021D1C0
  404:  		Loop  00000016
  410:  			Get1Int  *Var0
  41C:  			Call  SetActorDispOffset    ( .Actor:Self 00000000 *Var0 00000000 )
  438:  			Wait  1`
  444:  		EndLoop
  44C:  		Call  SetActorRotationOffset    ( .Actor:Self 00000000 00000000 00000000 )
  468:  		Call  SetActorRotation      ( .Actor:Self 00000000 00000000 00000000 )
  484:  		Call  SetActorDispOffset    ( .Actor:Self 00000000 00000000 00000000 )
  4A0:  		Call  SetAnimation  ( .Actor:Self 00000001 0029010F )
  4B8:  	Case  ==  .Event:ShockHit % 2F
  4C4:  		SetConst  *Var0  00000001
  4D4:  		SetConst  *Var1  0029010B
  4E4:  		ExecWait  DoShockHit
  4F0:  		SetConst  *Var0  00000001
  500:  		SetConst  *Var1  0029010B
  510:  		ExecWait  DoJumpBack
  51C:  		Call  JumpToGoal    ( .Actor:Self  5` .False .True .False )
  53C:  		SetConst  *Var0  00000001
  54C:  		SetConst  *Var1  00290104
  55C:  		ExecWait  DoReturnHome
  568:  		Call  SetActorJumpGravity   ( .Actor:Self *Fixed[1.6] )
  57C:  		Call  JumpToGoal    ( .Actor:Self  5` .False .True .False )
  59C:  	Case  ==  .Event:ShockDeath % 26
  5A8:  		SetConst  *Var0  00000001
  5B8:  		SetConst  *Var1  0029010B
  5C8:  		ExecWait  DoShockHit
  5D4:  		SetConst  *Var0  00000001
  5E4:  		SetConst  *Var1  0029010B
  5F4:  		ExecWait  DoDeath
  600:  		Return
  608:  	CaseOR  ==  00000017 % 17
  614:  	CaseOR  ==  .Event:Immune % 19
  620:  		Call  GetActorVar   ( .Actor:Self 00000008 *Var0 )
  638:  		If  *Var0  ==  00000000
  648:  			SetConst  *Var0  00000001
  658:  			SetConst  *Var1  00290107
  668:  			ExecWait  DoImmune
  674:  			Call  GetStatusFlags    ( .Actor:Self *Var0 )
  688:  			If  *Var0  !&  ~Flags:StatusFlags:Sleep|Frozen|Fear|Paralyze|Dizzy|Stone|Stop % 35D000
  698:  				Call  SetAnimation  ( .Actor:Self 00000001 00290108 )
  6B0:  				Wait  10`
  6BC:  			EndIf
  6C4:  		Else
  6CC:  			SetConst  *Var0  00000001
  6DC:  			SetConst  *Var1  0029010F
  6EC:  			ExecWait  DoImmune
  6F8:  		EndIf
  700:  	EndCaseGroup
  708:  	Case  ==  .Event:Death % 20
  714:  		SetConst  *Var0  00000001
  724:  		SetConst  *Var1  0029010B
  734:  		ExecWait  DoNormalHit
  740:  		Wait  10`
  74C:  		SetConst  *Var0  00000001
  75C:  		SetConst  *Var1  0029010B
  76C:  		ExecWait  DoDeath
  778:  		Return
  780:  	Case  ==  .Event:EndFirstStrike % 35
  78C:  		Call  GetActorVar   ( .Actor:Self 00000008 *Var0 )
  7A4:  		If  *Var0  ==  00000000
  7B4:  			SetConst  *Var0  00000001
  7C4:  			SetConst  *Var1  00290104
  7D4:  			ExecWait  DoReturnHome
  7E0:  		EndIf
  7E8:  		Call  GetActorPos   ( .Actor:Self *Var0 *Var1 *Var2 )
  804:  		Call  SetHomePos    ( .Actor:Self *Var0 *Var1 *Var2 )
  820:  		Call  HPBarToHome   ( .Actor:Self )
  830:  	Case  ==  .Event:RecoverStatus % 31
  83C:  		Call  GetActorVar   ( .Actor:Self 00000008 *Var0 )
  854:  		If  *Var0  ==  00000000
  864:  			SetConst  *Var0  00000001
  874:  			SetConst  *Var1  00290101
  884:  			ExecWait  DoRecover
  890:  		Else
  898:  			SetConst  *Var0  00000001
  8A8:  			SetConst  *Var1  0029010F
  8B8:  			ExecWait  DoImmune
  8C4:  		EndIf
  8CC:  	Case  ==  .Event:ScareAway % 39
  8D8:  		Call  GetActorVar   ( .Actor:Self 00000008 *Var0 )
  8F0:  		If  *Var0  ==  00000000
  900:  			SetConst  *Var0  00000001
  910:  			SetConst  *Var1  00290104
  920:  			SetConst  *Var2  0029010B
  930:  			ExecWait  DoScareAway
  93C:  			Return
  944:  		Else
  94C:  			SetConst  *Var0  00000001
  95C:  			SetConst  *Var1  0029010F
  96C:  			ExecWait  DoImmune
  978:  		EndIf
  980:  	Case  ==  .Event:BeginAirLift % 3A
  98C:  		Call  GetActorVar   ( .Actor:Self 00000008 *Var0 )
  9A4:  		If  *Var0  ==  00000000
  9B4:  			SetConst  *Var0  00000001
  9C4:  			SetConst  *Var1  00290117
  9D4:  		Else
  9DC:  			SetConst  *Var0  00000001
  9EC:  			SetConst  *Var1  0029010F
  9FC:  		EndIf
  A04:  		ExecWait  DoAirLift
  A10:  	Case  ==  .Event:BlowAway % 16
  A1C:  		Call  GetActorVar   ( .Actor:Self 00000008 *Var0 )
  A34:  		If  *Var0  ==  00000000
  A44:  			SetConst  *Var0  00000001
  A54:  			SetConst  *Var1  00290117
  A64:  		Else
  A6C:  			SetConst  *Var0  00000001
  A7C:  			SetConst  *Var1  0029010F
  A8C:  		EndIf
  A94:  		ExecWait  DoBlowAway
  AA0:  		Return
  AA8:  	Case  ==  .Event:AirLiftFailed % 1F
  AB4:  		Call  GetActorVar   ( .Actor:Self 00000008 *Var0 )
  ACC:  		If  *Var0  ==  00000000
  ADC:  			SetConst  *Var0  00000001
  AEC:  			SetConst  *Var1  00290101
  AFC:  			ExecWait  DoImmune
  B08:  		Else
  B10:  			SetConst  *Var0  00000001
  B20:  			SetConst  *Var1  0029010F
  B30:  			ExecWait  DoImmune
  B3C:  		EndIf
  B44:  EndSwitch
  B4C:  Call  EnableIdleScript  ( .Actor:Self FFFFFFFF )
  B60:  Call  UseIdleAnimation  ( .Actor:Self .True )
  B74:  Return
  B7C:  End
}

#new:Script $Script_TakeTurn_8021DD9C
{
    0:  Call  UseIdleAnimation  ( .Actor:Self .False )
   14:  Call  EnableIdleScript  ( .Actor:Self 00000000 )
   28:  Call  SetTargetActor    ( .Actor:Self .Actor:Player )
   3C:  Call  GetBattlePhase    ( *Var0 )
   4C:  If  *Var0  ==  00000001
   5C:  	Call  SetAnimation  ( .Actor:Self 00000001 00290106 )
   74:  Else
   7C:  	Call  GetActorVar   ( .Actor:Self 00000008 *Var0 )
   94:  	If  *Var0  ==  00000001
   A4:  		Call  GetActorVar   ( .Actor:Self 00000009 *Var0 )
   BC:  		Sub   *Var0  00000001
   CC:  		If  *Var0  >  00000000
   DC:  			Call  SetActorVar   ( .Actor:Self 00000009 *Var0 )
   F4:  			Call  AddActorDecoration    ( .Actor:Self 00000001 00000000 .Decoration:Sweat )
  110:  			Call  SetAnimationRate      ( .Actor:Self 00000001 *Fixed[3.0] )
  128:  			Wait  30`
  134:  			Call  SetAnimationRate      ( .Actor:Self 00000001 *Fixed[1.0] )
  14C:  			Call  RemoveActorDecoration ( .Actor:Self 00000001 00000000 )
  164:  		Else
  16C:  			Call  AddActorDecoration        ( .Actor:Self 00000001 00000000 .Decoration:Sweat )
  188:  			Call  SetAnimationRate  ( .Actor:Self 00000001 *Fixed[3.0] )
  1A0:  			Wait  20`
  1AC:  			Call  SetAnimationRate  ( .Actor:Self 00000001 *Fixed[1.0] )
  1C4:  			Call  RemoveActorDecoration     ( .Actor:Self 00000001 00000000 )
  1DC:  			Call  SetActorSounds    ( .Actor:Self .ActorSound:Jump 00000000 00000000 )
  1F8:  			Call  PlaySoundAtActor  ( .Actor:Self .Sound:Jump )
  20C:  			Call  SetAnimation      ( .Actor:Self 00000001 0029010F )
  224:  			Set   *Var0  00000000
  234:  			Call  SetActorRotationOffset    ( .Actor:Self 00000000 0000000C 00000000 )
  250:  			ChildThread
  258:  				Loop  00000005
  264:  					Add   *Var0  0000000F
  274:  					Call  SetActorRotation  ( .Actor:Self 00000000 00000000 *Var0 )
  290:  					Wait  1`
  29C:  				EndLoop
  2A4:  			EndChildThread
  2AC:  			Call  GetActorPos       ( .Actor:Self *Var0 *Var1 *Var2 )
  2C8:  			Call  SetGoalPos        ( .Actor:Self *Var0 *Var1 *Var2 )
  2E4:  			Call  SetActorJumpGravity       ( .Actor:Self *Fixed[3.0] )
  2F8:  			Call  JumpToGoal        ( .Actor:Self  8` .False .True .False )
  318:  			Call  PlaySoundAtActor  ( .Actor:Self 000020BA )
  32C:  			Call  SetActorRotationOffset    ( .Actor:Self 00000000 00000000 00000000 )
  348:  			Call  SetActorRotation  ( .Actor:Self 00000000 00000000 00000000 )
  364:  			Call  SetActorDispOffset        ( .Actor:Self 00000000 00000000 00000000 )
  380:  			Call  SetAnimation      ( .Actor:Self 00000001 00290101 )
  398:  			Call  SetActorVar       ( .Actor:Self 00000008 00000000 )
  3B0:  			Call  SetIdleAnimations ( .Actor:Self 00000001 $IdleAnimations_8021CA90 )
  3C8:  			Call  SetDefenseTable   ( .Actor:Self 00000001 $DefenseTable_8021C960 )
  3E0:  			Call  SetTargetOffset   ( .Actor:Self 00000001  -4`  32` )
  3FC:  			Call  8027D4C8  ( FFFFFF81 00000001 FFFFFFFF FFFFFFFC )
  418:  			Call  SetActorFlagBits  ( .Actor:Self 00000400 .False )
  430:  			Call  ResetActorSounds  ( .Actor:Self .ActorSound:Jump )
  444:  		EndIf
  44C:  		Call  EnableIdleScript  ( .Actor:Self 00000001 )
  460:  		Call  UseIdleAnimation  ( .Actor:Self .True )
  474:  		Return
  47C:  	EndIf
  484:  	Call  UseBattleCamPreset    ( 0000003F )
  494:  	Call  BattleCamTargetActor  ( .Actor:Self )
  4A4:  	Wait  10`
  4B0:  	Call  SetAnimation  ( .Actor:Self 00000001 00290107 )
  4C8:  	Wait  10`
  4D4:  	ChildThread
  4DC:  		Call  GetActorPos   ( .Actor:Self *Var0 *Var1 *Var2 )
  4F8:  		Add   *Var1  00000004
  508:  		Call  PlayEffect    ( ~FX:SmokeImpact:Small *Var0 *Var1 *Var2 00000020 00000004 00000000 0000000A 00000000 00000000 00000000 00000000 00000000 )
  54C:  		Wait  3`
  558:  		Call  PlayEffect    ( ~FX:SmokeImpact:Small *Var0 *Var1 *Var2 00000020 00000004 00000000 0000000A 00000000 00000000 00000000 00000000 00000000 )
  59C:  		Wait  2`
  5A8:  		Call  PlayEffect    ( ~FX:SmokeImpact:Small *Var0 *Var1 *Var2 00000020 00000004 00000000 0000000A 00000000 00000000 00000000 00000000 00000000 )
  5EC:  	EndChildThread
  5F4:  	Call  PlaySoundAtActor  ( .Actor:Self 00002021 )
  608:  	Call  SetAnimation      ( .Actor:Self 00000001 00290106 )
  620:  	Wait  10`
  62C:  	Call  8024ECF8  ( FFFFFFFF 00000001 00000000 )
  644:  EndIf
  64C:  Call  PlaySoundAtActor  ( .Actor:Self 000020D3 )
  660:  Call  SetActorSounds    ( .Actor:Self .ActorSound:Walk 00000000 00000000 )
  67C:  Call  EnemyTestTarget   ( .Actor:Self *Var0 ~Flags:DamageType:0 00000000 00000001 00000010 )
  6A0:  Switch  *Var0
  6AC:  	CaseOR  ==  .HitResult:Miss % 6
  6B8:  	CaseOR  ==  .HitResult:Lucky % 5
  6C4:  		Set   *VarA  *Var0
  6D4:  		Call  SetGoalToTarget   ( .Actor:Self )
  6E4:  		Call  AddGoalPos        ( .Actor:Self  -40`  0`  0` )
  700:  		Call  SetActorSpeed     ( .Actor:Self *Fixed[16.0] )
  714:  		Call  RunToGoal ( .Actor:Self  0` .False )
  72C:  		Call  GetBattlePhase    ( *Var0 )
  73C:  		If  *Var0  ==  00000001
  74C:  			Call  UseBattleCamPreset    ( 00000005 )
  75C:  			Call  SetBattleCamZoom      (  300` )
  76C:  			Call  SetBattleCamOffsetZ   (  20` )
  77C:  			Call  MoveBattleCamOver     (  10` )
  78C:  			Call  8024ECF8  ( FFFFFFFF 00000001 00000000 )
  7A4:  		EndIf
  7AC:  		Call  SetAnimation  ( .Actor:Self 00000001 00290108 )
  7C4:  		Wait  8`
  7D0:  		Call  ResetAllActorSounds   ( .Actor:Self )
  7E0:  		Call  SetActorYaw   ( .Actor:Self  180` )
  7F4:  		Wait  4`
  800:  		If  *VarA  ==  .HitResult:Lucky % 5
  810:  			Call  EnemyTestTarget   ( .Actor:Self *Var0 ~Flags:DamageType:TriggerLucky 00000000 00000000 00000000 )
  834:  		EndIf
  83C:  		Call  SetAnimation  ( .Actor:Self 00000001 00290115 )
  854:  		Wait  1`
  860:  		Call  SetAnimation  ( .Actor:Self 00000001 00290116 )
  878:  		Call  GetActorPos   ( .Actor:Self *Var0 *Var1 *Var2 )
  894:  		Add   *Var1  00000014
  8A4:  		Call  SetGoalPos    ( .Actor:Self *Var0 *Var1 *Var2 )
  8C0:  		Call  SetActorJumpGravity   ( .Actor:Self *Fixed[2.0] )
  8D4:  		Call  JumpToGoal    ( .Actor:Self  5` .False .True .False )
  8F4:  		Call  SetAnimation  ( .Actor:Self 00000001 00290117 )
  90C:  		Wait  6`
  918:  		Sub   *Var1  00000014
  928:  		Call  SetGoalPos    ( .Actor:Self *Var0 *Var1 *Var2 )
  944:  		Call  JumpToGoal    ( .Actor:Self  5` .False .True .False )
  964:  		Call  UseBattleCamPreset    ( 00000002 )
  974:  		Call  YieldTurn ( )
  980:  		Call  SetActorYaw   ( .Actor:Self  180` )
  994:  		Call  AddActorDecoration    ( .Actor:Self 00000001 00000000 .Decoration:Sweat )
  9B0:  		Call  SetAnimation  ( .Actor:Self 00000001 00290117 )
  9C8:  		Call  SetGoalToHome ( .Actor:Self )
  9D8:  		Call  SetActorSpeed ( .Actor:Self *Fixed[8.0] )
  9EC:  		Call  RunToGoal     ( .Actor:Self  0` .False )
  A04:  		Call  SetAnimation  ( .Actor:Self 00000001 00290101 )
  A1C:  		Call  RemoveActorDecoration ( .Actor:Self 00000001 00000000 )
  A34:  		Call  SetPartYaw    ( .Actor:Self 00000001  0` )
  A4C:  		Call  SetActorYaw   ( .Actor:Self  0` )
  A60:  		Call  EnableIdleScript      ( .Actor:Self 00000001 )
  A74:  		Call  UseIdleAnimation      ( .Actor:Self .True )
  A88:  		Return
  A90:  	EndCaseGroup
  A98:  EndSwitch
  AA0:  Call  SetGoalToTarget   ( .Actor:Self )
  AB0:  Call  SetActorSpeed     ( .Actor:Self *Fixed[16.0] )
  AC4:  Call  RunToGoal ( .Actor:Self  0` .False )
  ADC:  Call  ResetAllActorSounds   ( .Actor:Self )
  AEC:  Wait  2`
  AF8:  Call  EnemyDamageTarget ( .Actor:Self *Var0 ~Flags:DamageType:0 0000FFFF 00000000 00000001 00000020 )
  B20:  Switch  *Var0
  B2C:  	CaseOR  ==  .HitResult:Hit % 0
  B38:  	CaseOR  ==  .HitResult:QuakeImmune % 2
  B44:  		Call  UseBattleCamPreset    ( 00000002 )
  B54:  		Call  GetGoalPos    ( .Actor:Self *Var0 *Var1 *Var2 )
  B70:  		Add   *Var0  00000028
  B80:  		Set   *Var1  00000000
  B90:  		Call  SetActorJumpGravity   ( .Actor:Self *Fixed[1.8] )
  BA4:  		Call  SetGoalPos    ( .Actor:Self *Var0 *Var1 *Var2 )
  BC0:  		Call  JumpToGoal    ( .Actor:Self  10` .False .True .False )
  BE0:  		Add   *Var0  0000001E
  BF0:  		Call  SetGoalPos    ( .Actor:Self *Var0 *Var1 *Var2 )
  C0C:  		Call  JumpToGoal    ( .Actor:Self  8` .False .True .False )
  C2C:  		Add   *Var0  00000014
  C3C:  		Call  SetGoalPos    ( .Actor:Self *Var0 *Var1 *Var2 )
  C58:  		Call  JumpToGoal    ( .Actor:Self  6` .False .True .False )
  C78:  		Call  SetAnimation  ( .Actor:Self 00000001 00290108 )
  C90:  		Wait  8`
  C9C:  		Call  YieldTurn ( )
  CA8:  		SetConst  *Var0  00000001
  CB8:  		SetConst  *Var1  00290104
  CC8:  		ExecWait  DoReturnHome
  CD4:  		Call  SetAnimation  ( .Actor:Self 00000001 00290101 )
  CEC:  	EndCaseGroup
  CF4:  EndSwitch
  CFC:  Call  EnableIdleScript  ( .Actor:Self 00000001 )
  D10:  Call  UseIdleAnimation  ( .Actor:Self .True )
  D24:  Return
  D2C:  End
}

#new:DefenseTable $DefenseTable_8021EAD0
{
	.Element:Normal 00000001
	.Element:Hammer 00000001
	.Element:Jump   00000001
	.Element:Water  00000001
	.Element:Blast  00000001
	.Element:End
}

#new:DefenseTable $DefenseTable_8021EAFC
{
	.Element:Normal 00000001
	.Element:End
}

#new:DefenseTable $DefenseTable_8021EB08
{
	.Element:Normal 00000000
	.Element:End
}

#new:StatusTable $StatusTable_8021EB14
{
	.Status:Normal      0`
	.Status:Default     0`
	.Status:Sleep      90`
	.Status:Poison     60`
	.Status:Frozen    100`
	.Status:Dizzy      90`
	.Status:Fear        0`
	.Status:Static     80`
	.Status:Paralyze   90`
	.Status:Shrink     90`
	.Status:Stop      100`
	.Status:DefaultTurnMod    0`
	.Status:SleepTurnMod      0`
	.Status:PoisonTurnMod     0`
	.Status:FrozenTurnMod     0`
	.Status:DizzyTurnMod      0`
	.Status:FearTurnMod       0`
	.Status:StaticTurnMod     0`
	.Status:ParalyzeTurnMod   1`
	.Status:ShrinkTurnMod     0`
	.Status:StopTurnMod       0`
	.Status:End
}

#new:StatusTable $StatusTable_8021EBC0
{
	.Status:Normal      0`
	.Status:Default     0`
	.Status:Sleep      90`
	.Status:Poison     60`
	.Status:Frozen    100`
	.Status:Dizzy      90`
	.Status:Fear        0`
	.Status:Static     80`
	.Status:Paralyze   90`
	.Status:Shrink     90`
	.Status:Stop      100`
	.Status:DefaultTurnMod    0`
	.Status:SleepTurnMod      0`
	.Status:PoisonTurnMod     0`
	.Status:FrozenTurnMod     0`
	.Status:DizzyTurnMod      1`
	.Status:FearTurnMod       0`
	.Status:StaticTurnMod     0`
	.Status:ParalyzeTurnMod   1`
	.Status:ShrinkTurnMod     0`
	.Status:StopTurnMod       0`
	.Status:End
}

#new:PartsTable $PartsTable_8021EC6C
{
	00020001 01000000 FE2400FF $IdleAnimations_80220AA0 $DefenseTable_8021EAD0 00001000 00000000 00F90000 00000000
	00800000 02000000 FC2400FF $IdleAnimations_8021ED00 $DefenseTable_8021EAFC 00004000 00000000 02F20000 00000000
	00020001 03000000 002000FF $IdleAnimations_8021ED98 $DefenseTable_8021EAD0 00000000 00000000 00F60000 00000000
}

#new:Actor $Paratroopa
{
	% stats
	[Index]         Cb
	[Level]         6`b
	[MaxHP]         4`b
	[Coins]         1`b
	[Flags]       00000200
	[StatusTable] $StatusTable_8021EBC0
	% ai
	[PartsCount]    3`s
	[PartsTable]  $PartsTable_8021EC6C
	[Script]      $Script_Init_8021EE0C
	% move effectiveness
	[Escape]       60`b
	[Item]         90`b
	[AirLift]      95`b
	[Hurricane]   100`b % Bow's "Spook" as well
	[UpAndAway]    95`b
	[PowerBounce]  90`b
	[SpinSmash]     0`b % weight (0-4)
	% ui positions
	[Size]         50`b  38`b % width height
	[HealthBar]     0`b   0`b % dx dy
	[StatusTurn]  -10`b  29`b % dx dy
	[StatusIcon]    8`b  30`b % dx dy
}

#new:IdleAnimations $IdleAnimations_8021ED00
{
	.Status:Normal    002A0101
	.Status:Stone     002A0100
	.Status:Sleep     002A0112
	.Status:Poison    002A0100
	.Status:Stop      002A0100
	.Status:Static    002A0101
	.Status:Paralyze  002A0100
	.Status:Dizzy     002A0113
	.Status:Fear      002A0113
	.Status:End
}

#new:IdleAnimations $IdleAnimations_8021ED4C
{
	.Status:Normal    002A0101
	.Status:Stone     002A0100
	.Status:Sleep     002A0112
	.Status:Poison    002A0100
	.Status:Stop      002A0100
	.Status:Static    002A0101
	.Status:Paralyze  002A0100
	.Status:Dizzy     002A0113
	.Status:Fear      002A0113
	.Status:End
}

#new:IdleAnimations $IdleAnimations_8021ED98
{
	.Status:Normal    002A010F
	.Status:Stone     002A0100
	.Status:Sleep     002A0112
	.Status:Poison    002A0100
	.Status:Stop      002A0100
	.Status:Static    002A010F
	.Status:Paralyze  002A0100
	.Status:Dizzy     002A0113
	.Status:Fear      002A0113
	.Status:End
}

#new:Script $Script_NextTurn_8021EDE4
{
    0:  Call  SetActorVar   ( .Actor:Self 00000000 00000000 )
   18:  Return
   20:  End
}

#new:Script $Script_Init_8021EE0C
{
    0:  Call  BindTakeTurn  ( .Actor:Self $Script_TakeTurn_8021FA24 )
   14:  Call  BindIdle      ( .Actor:Self $Script_Idle_8021EF5C )
   28:  Call  BindHandleEvent   ( .Actor:Self $Script_HandleEvent_8021F2EC )
   3C:  Call  BindNextTurn  ( .Actor:Self $Script_NextTurn_8021EDE4 )
   50:  Call  SetActorVar   ( .Actor:Self 00000000 00000000 )
   68:  Return
   70:  End
}

#new:Script $Script_8021EE84
{
    0:  If  *Var1  &  00041000
   10:  	Call  SetTargetOffset       ( .Actor:Self 00000002  0`  25` )
   2C:  	Call  8027D4C8  ( FFFFFF81 00000002 00000003 FFFFFFFA )
   48:  	Call  $Function_80218148    ( FFFFFFED 00000019 00000004 0000001C )
   64:  Else
   6C:  	Call  SetTargetOffset       ( .Actor:Self 00000002  -2`  36` )
   88:  	Call  8027D4C8  ( FFFFFF81 00000002 00000000 FFFFFFF9 )
   A4:  	Call  $Function_80218148    ( FFFFFFF6 0000001D 00000008 0000001E )
   C0:  EndIf
   C8:  Return
   D0:  End
}

#new:Script $Script_Idle_8021EF5C
{
    0:  Label  A
    C:  Call  RandInt   ( 00000050 *Var0 )
   20:  Add   *Var0  00000050
   30:  Loop  *Var0
   3C:  	Label  0
   48:  	Call  GetStatusFlags    ( .Actor:Self *Var1 )
   5C:  	ExecWait  $Script_8021EE84
   68:  	If  *Var1  &  0035D000
   78:  		Wait  1`
   84:  		Goto  0
   90:  	EndIf
   98:  	Wait  1`
   A4:  EndLoop
   AC:  Call  GetActorPos       ( .Actor:Self *Var0 *Var1 *Var2 )
   C8:  Add   *Var0  00000005
   D8:  Call  SetActorIdleSpeed ( .Actor:Self *Fixed[0.6] )
   EC:  Call  SetIdleAnimations ( .Actor:Self 00000002 $IdleAnimations_8021ED4C )
  104:  Call  SetIdleGoal       ( .Actor:Self *Var0 *Var1 *Var2 )
  120:  Call  IdleFlyToGoal     ( .Actor:Self  0`  -5` .Easing:Linear )
  13C:  Call  SetIdleAnimations ( .Actor:Self 00000001 $IdleAnimations_8021ED00 )
  154:  Loop  00000014
  160:  	Label  1
  16C:  	Call  GetStatusFlags    ( .Actor:Self *Var1 )
  180:  	ExecWait  $Script_8021EE84
  18C:  	If  *Var1  &  0035D000
  19C:  		Wait  1`
  1A8:  		Goto  1
  1B4:  	EndIf
  1BC:  	Wait  1`
  1C8:  EndLoop
  1D0:  Call  GetActorPos       ( .Actor:Self *Var0 *Var1 *Var2 )
  1EC:  Sub   *Var0  00000005
  1FC:  Call  SetActorIdleSpeed ( .Actor:Self *Fixed[0.6] )
  210:  Call  SetIdleAnimations ( .Actor:Self 00000002 $IdleAnimations_8021ED4C )
  228:  Call  SetIdleGoal       ( .Actor:Self *Var0 *Var1 *Var2 )
  244:  Call  IdleFlyToGoal     ( .Actor:Self  0`  -5` .Easing:Linear )
  260:  Call  SetIdleAnimations ( .Actor:Self 00000002 $IdleAnimations_8021ED00 )
  278:  Loop  00000028
  284:  	Label  2
  290:  	Call  GetStatusFlags    ( .Actor:Self *Var1 )
  2A4:  	ExecWait  $Script_8021EE84
  2B0:  	If  *Var1  &  0035D000
  2C0:  		Wait  1`
  2CC:  		Goto  2
  2D8:  	EndIf
  2E0:  	Wait  1`
  2EC:  EndLoop
  2F4:  Goto  A
  300:  Return
  308:  End
}

#new:Script $Script_8021F26C
{
    0:  Call  SetAnimation  ( .Actor:Self 00000002 002A0103 )
   18:  Call  SetGoalToHome ( .Actor:Self )
   28:  Call  SetActorSpeed ( .Actor:Self *Fixed[8.0] )
   3C:  Call  FlyToGoal     ( .Actor:Self  0`  1` .Easing:SinOut )
   58:  Call  SetAnimation  ( .Actor:Self 00000002 002A0101 )
   70:  Return
   78:  End
}

#new:Script $Script_HandleEvent_8021F2EC
{
    0:  Call  UseIdleAnimation  ( .Actor:Self .False )
   14:  Call  EnableIdleScript  ( .Actor:Self 00000000 )
   28:  Call  GetLastEvent      ( .Actor:Self *Var0 )
   3C:  Switch  *Var0
   48:  	Case  ==  .Event:HitCombo % 9
   54:  		Call  SetActorVar   ( .Actor:Self 00000000 00000001 )
   6C:  		SetConst  *Var0  00000002
   7C:  		SetConst  *Var1  002A0107
   8C:  		ExecWait  DoNormalHit
   98:  	Case  ==  .Event:Hit % A
   A4:  		SetConst  *Var0  00000002
   B4:  		SetConst  *Var1  002A0107
   C4:  		ExecWait  DoNormalHit
   D0:  		Call  GetBattlePhase    ( *Var0 )
   E0:  		If  *Var0  ==  00000001
   F0:  			Call  GetEncounterState ( *Var0 )
  100:  			If  *Var0  ==  00000004
  110:  				ExecWait  $Script_802204DC
  11C:  			EndIf
  124:  		EndIf
  12C:  	Case  ==  .Event:SpinSmashHit % B
  138:  		SetConst  *Var0  00000002
  148:  		SetConst  *Var1  002A0107
  158:  		ExecWait  DoSpinSmashHit
  164:  	Case  ==  .Event:SpinSmashDeath % 21
  170:  		SetConst  *Var0  00000002
  180:  		SetConst  *Var1  002A0107
  190:  		ExecWait  DoSpinSmashHit
  19C:  		SetConst  *Var0  00000002
  1AC:  		SetConst  *Var1  002A0106
  1BC:  		ExecWait  DoDeath
  1C8:  		Return
  1D0:  	Case  ==  .Event:BurnHit % E
  1DC:  		SetConst  *Var0  00000002
  1EC:  		SetConst  *Var1  002A0108
  1FC:  		SetConst  *Var2  002A0109
  20C:  		ExecWait  DoBurnHit
  218:  	Case  ==  .Event:BurnDeath % 24
  224:  		SetConst  *Var0  00000002
  234:  		SetConst  *Var1  002A0108
  244:  		SetConst  *Var2  002A0109
  254:  		ExecWait  DoBurnHit
  260:  		SetConst  *Var0  00000002
  270:  		SetConst  *Var1  002A0109
  280:  		ExecWait  DoDeath
  28C:  		Return
  294:  	Case  ==  .Event:FallTrigger % C
  2A0:  		SetConst  *Var0  00000002
  2B0:  		SetConst  *Var1  002A0107
  2C0:  		ExecWait  DoNormalHit
  2CC:  		ExecWait  $Script_802204DC
  2D8:  	Case  ==  0000000F % F
  2E4:  		SetConst  *Var0  00000001
  2F4:  		SetConst  *Var1  002A0108
  304:  		SetConst  *Var1  002A0109
  314:  		ExecWait  DoBurnHit
  320:  		ExecWait  $Script_802204DC
  32C:  	Case  ==  .Event:ShockHit % 2F
  338:  		SetConst  *Var0  00000001
  348:  		SetConst  *Var1  002A0107
  358:  		ExecWait  DoShockHit
  364:  		SetConst  *Var0  00000001
  374:  		SetConst  *Var1  002A0106
  384:  		ExecWait  DoJumpBack
  390:  		ExecWait  $Script_8021F26C
  39C:  	Case  ==  .Event:ShockDeath % 26
  3A8:  		SetConst  *Var0  00000002
  3B8:  		SetConst  *Var1  002A0107
  3C8:  		ExecWait  DoShockHit
  3D4:  		SetConst  *Var0  00000002
  3E4:  		SetConst  *Var1  002A0106
  3F4:  		ExecWait  DoDeath
  400:  		Return
  408:  	Case  ==  00000017 % 17
  414:  		Call  SetActorVar   ( .Actor:Self 00000000 00000001 )
  42C:  		SetConst  *Var0  00000002
  43C:  		SetConst  *Var1  002A010B
  44C:  		ExecWait  DoImmune
  458:  	CaseOR  ==  .Event:Immune % 19
  464:  	CaseOR  ==  .Event:AirLiftFailed % 1F
  470:  		SetConst  *Var0  00000002
  480:  		SetConst  *Var1  002A010B
  490:  		ExecWait  DoImmune
  49C:  		Call  GetBattlePhase    ( *Var0 )
  4AC:  		If  *Var0  ==  00000001
  4BC:  			Call  GetEncounterState ( *Var0 )
  4CC:  			If  *Var0  ==  00000004
  4DC:  				ExecWait  $Script_802204DC
  4E8:  			EndIf
  4F0:  		EndIf
  4F8:  	EndCaseGroup
  500:  	Case  ==  .Event:Death % 20
  50C:  		SetConst  *Var0  00000002
  51C:  		SetConst  *Var1  002A0107
  52C:  		ExecWait  DoNormalHit
  538:  		Wait  10`
  544:  		SetConst  *Var0  00000002
  554:  		SetConst  *Var1  002A0106
  564:  		ExecWait  DoDeath
  570:  		Return
  578:  	Case  ==  .Event:BeginFirstStrike % 38
  584:  		Call  SetActorPos       ( .Actor:Self  20`  0`  0` )
  5A0:  		Call  HPBarToCurrent    ( .Actor:Self )
  5B0:  	Case  ==  .Event:EndFirstStrike % 35
  5BC:  		ExecWait  $Script_8021F26C
  5C8:  		Call  HPBarToHome   ( .Actor:Self )
  5D8:  	Case  ==  .Event:RecoverStatus % 31
  5E4:  		SetConst  *Var0  00000002
  5F4:  		SetConst  *Var1  002A0101
  604:  		ExecWait  DoRecover
  610:  	Case  ==  .Event:ScareAway % 39
  61C:  		Call  SetActorFlagBits  ( .Actor:Self 00000200 .False )
  634:  		SetConst  *Var0  00000002
  644:  		SetConst  *Var1  002A0103
  654:  		SetConst  *Var2  002A0107
  664:  		ExecWait  DoScareAway
  670:  		Return
  678:  	Case  ==  .Event:BeginAirLift % 3A
  684:  		SetConst  *Var0  00000002
  694:  		SetConst  *Var1  002A0103
  6A4:  		ExecWait  DoAirLift
  6B0:  	Case  ==  .Event:BlowAway % 16
  6BC:  		SetConst  *Var0  00000002
  6CC:  		SetConst  *Var1  002A0107
  6DC:  		ExecWait  DoBlowAway
  6E8:  		Return
  6F0:  	Default
  6F8:  EndSwitch
  700:  Call  EnableIdleScript  ( .Actor:Self FFFFFFFF )
  714:  Call  UseIdleAnimation  ( .Actor:Self .True )
  728:  Return
  730:  End
}

#new:Script $Script_TakeTurn_8021FA24
{
    0:  Call  UseIdleAnimation  ( .Actor:Self .False )
   14:  Call  EnableIdleScript  ( .Actor:Self 00000000 )
   28:  Call  SetTargetActor    ( .Actor:Self .Actor:Player )
   3C:  Call  SetGoalToTarget   ( .Actor:Self )
   4C:  Call  UseBattleCamPreset    ( 00000005 )
   5C:  Call  BattleCamTargetActor  ( .Actor:Self )
   6C:  Call  SetTargetActor    ( .Actor:Self .Actor:Player )
   80:  Call  SetAnimation      ( .Actor:Self 00000002 002A0103 )
   98:  Call  SetGoalToTarget   ( .Actor:Self )
   A8:  Call  AddGoalPos        ( .Actor:Self  40`  30`  0` )
   C4:  Call  SetActorSpeed     ( .Actor:Self *Fixed[7.0] )
   D8:  Call  FlyToGoal ( .Actor:Self  0`  -16` .Easing:Linear )
   F4:  Call  8024E664  ( 00000001 )
  104:  Wait  5`
  110:  Call  EnemyTestTarget   ( .Actor:Self *Var0 ~Flags:DamageType:0 00000000 00000001 00000010 )
  134:  Switch  *Var0
  140:  	CaseOR  ==  .HitResult:Miss % 6
  14C:  	CaseOR  ==  .HitResult:Lucky % 5
  158:  		Set   *VarA  *Var0
  168:  		Call  PlaySoundAtActor  ( .Actor:Self 000020E0 )
  17C:  		Call  SetActorSounds    ( .Actor:Self .ActorSound:Fly 00000000 00000000 )
  198:  		Call  SetAnimation  ( .Actor:Self 00000002 002A0104 )
  1B0:  		Call  GetActorPos   ( .Actor:Self *Var0 *Var1 *Var2 )
  1CC:  		Call  SetGoalPos    ( .Actor:Self *Var0 *Var1 *Var2 )
  1E8:  		Call  AddGoalPos    ( .Actor:Self  6`  6`  0` )
  204:  		Call  SetActorSpeed ( .Actor:Self *Fixed[2.0] )
  218:  		Call  FlyToGoal     ( .Actor:Self  0`  0` .Easing:Linear )
  234:  		Wait  6`
  240:  		Call  PlaySoundAtActor  ( .Actor:Self 000002C1 )
  254:  		Call  SetActorSounds    ( .Actor:Self .ActorSound:Fly 00000000 00000000 )
  270:  		Call  GetActorPos   ( .Actor:Player *Var0 *Var1 *Var2 )
  28C:  		Sub   *Var0  00000019
  29C:  		Set   *Var1  00000000
  2AC:  		Call  SetGoalPos    ( .Actor:Self *Var0 *Var1 *Var2 )
  2C8:  		Call  SetActorSpeed ( .Actor:Self *Fixed[10.0] )
  2DC:  		Call  SetAnimation  ( .Actor:Self 00000002 002A010C )
  2F4:  		Call  FlyToGoal     ( .Actor:Self  0`  0` .Easing:Linear )
  310:  		Call  GetActorPos   ( .Actor:Self *Var0 *Var1 *Var2 )
  32C:  		Sub   *Var0  0000001E
  33C:  		Call  SetGoalPos    ( .Actor:Self *Var0 *Var1 *Var2 )
  358:  		Call  SetActorJumpGravity   ( .Actor:Self *Fixed[4.0] )
  36C:  		Thread
  374:  			Call  SetActorRotationOffset    ( .Actor:Self 00000000 0000000A 00000000 )
  390:  			Set   *Var0  00000000
  3A0:  			Loop  00000008
  3AC:  				Add   *Var0  0000005A
  3BC:  				If  *Var0  >=  00000168
  3CC:  					Sub   *Var0  00000168
  3DC:  				EndIf
  3E4:  				Call  SetActorRotation  ( .Actor:Self 00000000 00000000 *Var0 )
  400:  				Wait  1`
  40C:  			EndLoop
  414:  			Call  SetActorRotation  ( .Actor:Self 00000000 00000000 00000000 )
  430:  			Call  SetActorRotationOffset    ( .Actor:Self 00000000 FFFFFFF6 00000000 )
  44C:  		EndThread
  454:  		Call  JumpToGoal    ( .Actor:Self  6` .False .True .False )
  474:  		Call  GetActorPos   ( .Actor:Self *Var0 *Var1 *Var2 )
  490:  		Sub   *Var0  0000001E
  4A0:  		Call  SetGoalPos    ( .Actor:Self *Var0 *Var1 *Var2 )
  4BC:  		Call  SetActorJumpGravity   ( .Actor:Self *Fixed[4.0] )
  4D0:  		Call  SetAnimation  ( .Actor:Self 00000002 002A0107 )
  4E8:  		Call  JumpToGoal    ( .Actor:Self  6` .False .True .False )
  508:  		Call  GetActorPos   ( .Actor:Self *Var0 *Var1 *Var2 )
  524:  		Sub   *Var0  0000001E
  534:  		Call  SetGoalPos    ( .Actor:Self *Var0 *Var1 *Var2 )
  550:  		Call  SetActorJumpGravity   ( .Actor:Self *Fixed[4.0] )
  564:  		Call  SetAnimation  ( .Actor:Self 00000002 002A0107 )
  57C:  		Call  JumpToGoal    ( .Actor:Self  6` .False .True .False )
  59C:  		If  *VarA  ==  .HitResult:Lucky % 5
  5AC:  			Call  EnemyTestTarget   ( .Actor:Self *Var0 ~Flags:DamageType:TriggerLucky 00000000 00000000 00000000 )
  5D0:  		EndIf
  5D8:  		Call  GetActorPos       ( .Actor:Self *Var0 *Var1 *Var2 )
  5F4:  		Add   *Var1  0000001E
  604:  		Call  SetActorPos       ( .Actor:Self *Var0 *Var1 *Var2 )
  620:  		Wait  20`
  62C:  		Call  UseBattleCamPreset    ( 00000002 )
  63C:  		Call  YieldTurn ( )
  648:  		Call  ResetAllActorSounds   ( .Actor:Self )
  658:  		Call  AddActorDecoration    ( .Actor:Self 00000002 00000000 .Decoration:Sweat )
  674:  		Call  SetActorYaw       ( .Actor:Self  180` )
  688:  		ExecWait  $Script_8021F26C
  694:  		Call  SetActorYaw       ( .Actor:Self  0` )
  6A8:  		Call  RemoveActorDecoration ( .Actor:Self 00000002 00000000 )
  6C0:  		Call  EnableIdleScript  ( .Actor:Self FFFFFFFF )
  6D4:  		Call  UseIdleAnimation  ( .Actor:Self .True )
  6E8:  		Return
  6F0:  	EndCaseGroup
  6F8:  EndSwitch
  700:  Call  PlaySoundAtActor  ( .Actor:Self 000020E0 )
  714:  Call  SetActorSounds    ( .Actor:Self .ActorSound:Fly 00000000 00000000 )
  730:  Call  SetAnimation  ( .Actor:Self 00000002 002A0104 )
  748:  Call  GetActorPos   ( .Actor:Self *Var0 *Var1 *Var2 )
  764:  Call  SetGoalPos    ( .Actor:Self *Var0 *Var1 *Var2 )
  780:  Call  AddGoalPos    ( .Actor:Self  6`  6`  0` )
  79C:  Call  SetActorSpeed ( .Actor:Self *Fixed[2.0] )
  7B0:  Call  FlyToGoal     ( .Actor:Self  0`  0` .Easing:Linear )
  7CC:  Wait  6`
  7D8:  Call  PlaySoundAtActor  ( .Actor:Self 000002C1 )
  7EC:  Call  SetActorSounds    ( .Actor:Self .ActorSound:Fly 00000000 00000000 )
  808:  Call  SetGoalToTarget   ( .Actor:Self )
  818:  Call  SetActorSpeed ( .Actor:Self *Fixed[10.0] )
  82C:  Call  SetAnimation  ( .Actor:Self 00000002 002A010C )
  844:  Call  FlyToGoal     ( .Actor:Self  0`  0` .Easing:Linear )
  860:  Wait  2`
  86C:  Call  EnemyDamageTarget ( .Actor:Self *Var0 ~Flags:DamageType:0 0000FFFF 00000000 00000001 00000020 )
  894:  Switch  *Var0
  8A0:  	CaseOR  ==  .HitResult:Hit % 0
  8AC:  	CaseOR  ==  .HitResult:QuakeImmune % 2
  8B8:  		Call  UseBattleCamPreset    ( 00000002 )
  8C8:  		Call  SetGoalToTarget   ( .Actor:Self )
  8D8:  		Call  AddGoalPos        ( .Actor:Self  40`  30`  0` )
  8F4:  		Call  SetActorSpeed     ( .Actor:Self *Fixed[6.0] )
  908:  		Call  SetAnimation      ( .Actor:Self 00000002 002A010D )
  920:  		Thread
  928:  			Call  SetActorRotationOffset    ( .Actor:Self 00000000 0000000A 00000000 )
  944:  			Set   *Var0  00000000
  954:  			Loop  0000000C
  960:  				Sub   *Var0  0000005A
  970:  				If  *Var0  <  00000000
  980:  					Add   *Var0  00000168
  990:  				EndIf
  998:  				Call  SetActorRotation  ( .Actor:Self 00000000 00000000 *Var0 )
  9B4:  				Wait  1`
  9C0:  			EndLoop
  9C8:  			Call  SetActorRotation  ( .Actor:Self 00000000 00000000 00000000 )
  9E4:  			Call  SetActorRotationOffset    ( .Actor:Self 00000000 FFFFFFF6 00000000 )
  A00:  			Call  SetAnimation  ( .Actor:Self 00000002 002A0101 )
  A18:  		EndThread
  A20:  		Call  FlyToGoal ( .Actor:Self  0`  30` .Easing:Linear )
  A3C:  		Wait  10`
  A48:  		Call  YieldTurn ( )
  A54:  		Call  ResetAllActorSounds   ( .Actor:Self )
  A64:  		ExecWait  $Script_8021F26C
  A70:  	EndCaseGroup
  A78:  EndSwitch
  A80:  Call  EnableIdleScript  ( .Actor:Self FFFFFFFF )
  A94:  Call  UseIdleAnimation  ( .Actor:Self .True )
  AA8:  Return
  AB0:  End
}

#new:Script $Script_802204DC
{
    0:  Call  SetPartDispOffset ( .Actor:Self 00000002 00000000 00000000 00000000 )
   20:  Call  8027D32C      ( FFFFFF81 )
   30:  Call  SetPartFlags  ( .Actor:Self 00000002 00020005 )
   48:  Call  SetPartFlags  ( .Actor:Self 00000003 00120004 )
   60:  Call  SetPartFlags  ( .Actor:Self 00000001 00800004 )
   78:  Call  GetActorPos   ( .Actor:Self *Var0 *Var1 *Var2 )
   94:  Add   *Var1  00000008
   A4:  Sub   *Var2  00000002
   B4:  Call  SetPartPos    ( .Actor:Self 00000003 *Var0 *Var1 *Var2 )
   D4:  Call  SetAnimation  ( .Actor:Self 00000001 0029010B )
   EC:  Call  SetActorSounds    ( .Actor:Self .ActorSound:Jump 00000301 00000000 )
  108:  Call  GetActorVar   ( .Actor:Self 00000000 *VarA )
  120:  If  *VarA  ==  00000000
  130:  	Call  GetActorPos   ( .Actor:Self *Var0 *Var1 *Var2 )
  14C:  	Set   *Var1  00000000
  15C:  	Call  SetActorJumpGravity   ( .Actor:Self *Fixed[0.8] )
  170:  	Call  SetGoalPos    ( .Actor:Self *Var0 *Var1 *Var2 )
  18C:  	Call  JumpToGoal    ( .Actor:Self  15` .False .True .False )
  1AC:  	Call  $Function_802180F0    ( 00000080 00000007 )
  1C0:  	Thread
  1C8:  		Call  ShakeCam  ( .Cam:Battle 00000000  5` *Fixed[0.3] )
  1E4:  	EndThread
  1EC:  	Call  ResetActorSounds  ( .Actor:Self .ActorSound:Jump )
  200:  	Call  SetGoalPos    ( .Actor:Self *Var0 *Var1 *Var2 )
  21C:  	Call  JumpToGoal    ( .Actor:Self  10` .False .True .False )
  23C:  	Call  SetGoalPos    ( .Actor:Self *Var0 *Var1 *Var2 )
  258:  	Call  JumpToGoal    ( .Actor:Self  5` .False .True .False )
  278:  	Loop  0000000A
  284:  		Call  SetPartFlagBits   ( .Actor:Self 00000003 00000001 .True )
  2A0:  		Wait  1`
  2AC:  		Call  SetPartFlagBits   ( .Actor:Self 00000003 00000001 .False )
  2C8:  		Wait  1`
  2D4:  	EndLoop
  2DC:  	Call  SetPartFlagBits   ( .Actor:Self 00000003 00000001 .True )
  2F8:  Else
  300:  	Call  GetActorPos   ( .Actor:Self *Var0 *Var1 *Var2 )
  31C:  	Set   *Var1  00000000
  32C:  	Call  SetActorJumpGravity   ( .Actor:Self *Fixed[0.8] )
  340:  	Call  SetGoalPos    ( .Actor:Self *Var0 *Var1 *Var2 )
  35C:  	Call  JumpToGoal    ( .Actor:Self  15` .False .True .False )
  37C:  	Thread
  384:  		Loop  0000000A
  390:  			Call  SetPartFlagBits   ( .Actor:Self 00000003 00000001 .True )
  3AC:  			Wait  1`
  3B8:  			Call  SetPartFlagBits   ( .Actor:Self 00000003 00000001 .False )
  3D4:  			Wait  1`
  3E0:  		EndLoop
  3E8:  		Call  SetPartFlagBits   ( .Actor:Self 00000003 00000001 .True )
  404:  	EndThread
  40C:  	Call  $Function_802180F0    ( 00000096 00000007 )
  420:  	Thread
  428:  		Call  ShakeCam  ( .Cam:Battle 00000000  5` *Fixed[0.3] )
  444:  	EndThread
  44C:  	Call  ResetActorSounds  ( .Actor:Self .ActorSound:Jump )
  460:  EndIf
  468:  Call  GetIndexFromHome  ( .Actor:Self *Var0 )
  47C:  Mod   *Var0  00000004
  48C:  Call  SetGoalToIndex    ( .Actor:Self *Var0 )
  4A0:  Call  GetGoalPos        ( .Actor:Self *Var0 *Var1 *Var2 )
  4BC:  Call  SetHomePos        ( .Actor:Self *Var0 *Var1 *Var2 )
  4D8:  Call  SetAnimation      ( .Actor:Self 00000001 00290101 )
  4F0:  Call  SetActorFlagBits  ( .Actor:Self 00000200 .False )
  508:  Call  SetStatusTable    ( .Actor:Self $StatusTable_8021EB14 )
  51C:  Call  BindNextTurn      ( .Actor:Self 00000000 )
  530:  ExecWait  $Script_80220B84
  53C:  Call  SetActorType      ( .Actor:Self 0000000B )
  550:  Call  SetActorFlagBits  ( .Actor:Self 00001000 .True )
  568:  Call  HPBarToHome       ( .Actor:Self )
  578:  Call  ResetAllActorSounds   ( .Actor:Self )
  588:  If  *VarA  !=  00000000
  598:  	Call  DispatchEvent ( .Actor:Self .Event:FlipTrigger )
  5AC:  EndIf
  5B4:  Return
  5BC:  End
}

#new:IdleAnimations $IdleAnimations_80220AA0
{
	.Status:Normal    00290101
	.Status:Stone     00290100
	.Status:Sleep     00290111
	.Status:Poison    00290101
	.Status:Stop      00290100
	.Status:Static    00290101
	.Status:Paralyze  00290100
	.Status:Dizzy     00290113
	.Status:Fear      00290113
	.Status:End
}

#new:IdleAnimations $IdleAnimations_80220AEC
{
	.Status:Normal    00290103
	.Status:Stone     00290100
	.Status:Sleep     00290111
	.Status:Poison    00290103
	.Status:Stop      00290100
	.Status:Static    00290103
	.Status:Paralyze  00290100
	.Status:Dizzy     00290113
	.Status:Fear      00290113
	.Status:End
}

#new:IdleAnimations $IdleAnimations_80220B38
{
	.Status:Normal    0029010F
	.Status:Stone     00290110
	.Status:Sleep     00290112
	.Status:Poison    0029010F
	.Status:Stop      00290110
	.Status:Static    0029010F
	.Status:Paralyze  00290110
	.Status:Dizzy     00290114
	.Status:Fear      00290114
	.Status:End
}

#new:Script $Script_80220B84
{
    0:  Call  BindTakeTurn  ( .Actor:Self $Script_TakeTurn_80221DAC )
   14:  Call  BindIdle      ( .Actor:Self $Script_Idle_80220D40 )
   28:  Call  BindHandleEvent   ( .Actor:Self $Script_HandleEvent_80221228 )
   3C:  Call  SetActorVar   ( .Actor:Self 00000008 00000000 )
   54:  Return
   5C:  End
}

#new:Script $Script_80220BE8
{
    0:  Switch  *Var0
    C:  	Case  ==  00000000
   18:  		If  *Var1  &  00041000
   28:  			Call  SetTargetOffset       ( .Actor:Self 00000001  -5`  15` )
   44:  			Call  8027D4C8  ( FFFFFF81 00000001 00000000 00000000 )
   60:  			Call  $Function_80218148    ( FFFFFFF6 00000014 0000000A 00000014 )
   7C:  		Else
   84:  			Call  SetTargetOffset       ( .Actor:Self 00000001  -4`  32` )
   A0:  			Call  8027D4C8  ( FFFFFF81 00000001 FFFFFFFF FFFFFFFC )
   BC:  			Call  $Function_80218148    ( FFFFFFF1 00000020 00000005 00000020 )
   D8:  		EndIf
   E0:  	Case  ==  00000001
   EC:  		Call  SetTargetOffset       ( .Actor:Self 00000001  -5`  15` )
  108:  		Call  8027D4C8  ( FFFFFF81 00000001 00000000 00000000 )
  124:  		Call  $Function_80218148    ( FFFFFFF6 00000014 0000000A 00000014 )
  140:  EndSwitch
  148:  Return
  150:  End
}

#new:Script $Script_Idle_80220D40
{
    0:  Label  0
    C:  Call  RandInt   ( 00000050 *VarA )
   20:  Add   *VarA  00000050
   30:  Loop  *VarA
   3C:  	Label  1
   48:  	Call  GetActorVar       ( .Actor:Self 00000008 *Var0 )
   60:  	Call  GetStatusFlags    ( .Actor:Self *Var1 )
   74:  	ExecWait  $Script_80220BE8
   80:  	If  *Var0  ==  00000001
   90:  		Wait  1`
   9C:  		Goto  1
   A8:  	EndIf
   B0:  	If  *Var1  &  0035D000
   C0:  		Wait  1`
   CC:  		Goto  1
   D8:  	EndIf
   E0:  	Wait  1`
   EC:  EndLoop
   F4:  Call  GetActorPos   ( .Actor:Self *Var0 *Var1 *Var2 )
  110:  Add   *Var0  00000005
  120:  Call  SetActorIdleSpeed ( .Actor:Self *Fixed[1.0] )
  134:  Call  SetIdleAnimations ( .Actor:Self 00000001 $IdleAnimations_80220AEC )
  14C:  Call  SetIdleGoal   ( .Actor:Self *Var0 *Var1 *Var2 )
  168:  Call  IdleRunToGoal ( .Actor:Self  0` )
  17C:  Call  GetActorVar   ( .Actor:Self 00000008 *Var0 )
  194:  Switch  *Var0
  1A0:  	Case  ==  00000000
  1AC:  		Call  SetIdleAnimations ( .Actor:Self 00000001 $IdleAnimations_80220AA0 )
  1C4:  	Case  ==  00000001
  1D0:  		Call  SetIdleAnimations ( .Actor:Self 00000001 $IdleAnimations_80220B38 )
  1E8:  EndSwitch
  1F0:  Loop  00000014
  1FC:  	Label  2
  208:  	Call  GetActorVar       ( .Actor:Self 00000008 *Var0 )
  220:  	Call  GetStatusFlags    ( .Actor:Self *Var1 )
  234:  	ExecWait  $Script_80220BE8
  240:  	If  *Var0  ==  00000001
  250:  		Wait  1`
  25C:  		Goto  2
  268:  	EndIf
  270:  	If  *Var1  &  0035D000
  280:  		Wait  1`
  28C:  		Goto  2
  298:  	EndIf
  2A0:  	Wait  1`
  2AC:  EndLoop
  2B4:  Call  GetActorPos   ( .Actor:Self *Var0 *Var1 *Var2 )
  2D0:  Sub   *Var0  00000005
  2E0:  Call  SetActorIdleSpeed ( .Actor:Self *Fixed[1.0] )
  2F4:  Call  SetIdleAnimations ( .Actor:Self 00000001 $IdleAnimations_80220AEC )
  30C:  Call  SetIdleGoal   ( .Actor:Self *Var0 *Var1 *Var2 )
  328:  Call  IdleRunToGoal ( .Actor:Self  0` )
  33C:  Call  GetActorVar   ( .Actor:Self 00000008 *Var0 )
  354:  Switch  *Var0
  360:  	Case  ==  00000000
  36C:  		Call  SetIdleAnimations ( .Actor:Self 00000001 $IdleAnimations_80220AA0 )
  384:  	Case  ==  00000001
  390:  		Call  SetIdleAnimations ( .Actor:Self 00000001 $IdleAnimations_80220B38 )
  3A8:  EndSwitch
  3B0:  Loop  00000050
  3BC:  	Label  3
  3C8:  	Call  GetActorVar       ( .Actor:Self 00000008 *Var0 )
  3E0:  	Call  GetStatusFlags    ( .Actor:Self *Var1 )
  3F4:  	ExecWait  $Script_80220BE8
  400:  	If  *Var0  ==  00000001
  410:  		Wait  1`
  41C:  		Goto  3
  428:  	EndIf
  430:  	If  *Var1  &  0035D000
  440:  		Wait  1`
  44C:  		Goto  3
  458:  	EndIf
  460:  	Wait  1`
  46C:  EndLoop
  474:  Goto  0
  480:  Return
  488:  End
}

#new:IntTable $IntTable_802211D0
{
	00000009 00000010 00000016 0000001A 0000001E 00000020 00000021 00000020
	0000001E 0000001A 00000016 00000010 00000009 00000000 00000004 00000006
	00000007 00000006 00000004 00000000 00000002 00000000
}

#new:Script $Script_HandleEvent_80221228
{
    0:  Call  UseIdleAnimation  ( .Actor:Self .False )
   14:  Call  EnableIdleScript  ( .Actor:Self 00000000 )
   28:  Call  SetActorYaw       ( .Actor:Self  0` )
   3C:  Call  GetLastEvent      ( .Actor:Self *Var0 )
   50:  Switch  *Var0
   5C:  	CaseOR  ==  .Event:HitCombo % 9
   68:  	CaseOR  ==  .Event:Hit % A
   74:  		SetConst  *Var0  00000001
   84:  		SetConst  *Var1  0029010B
   94:  		ExecWait  DoNormalHit
   A0:  	EndCaseGroup
   A8:  	Case  ==  .Event:BurnHit % E
   B4:  		SetConst  *Var0  00000001
   C4:  		SetConst  *Var1  0029010C
   D4:  		SetConst  *Var2  0029010D
   E4:  		ExecWait  DoBurnHit
   F0:  	Case  ==  .Event:BurnDeath % 24
   FC:  		SetConst  *Var0  00000001
  10C:  		SetConst  *Var1  0029010C
  11C:  		SetConst  *Var2  0029010D
  12C:  		ExecWait  DoBurnHit
  138:  		SetConst  *Var0  00000001
  148:  		SetConst  *Var1  0029010D
  158:  		ExecWait  DoDeath
  164:  		Return
  16C:  	Case  ==  .Event:SpinSmashHit % B
  178:  		SetConst  *Var0  00000001
  188:  		SetConst  *Var1  0029010B
  198:  		ExecWait  DoSpinSmashHit
  1A4:  	Case  ==  .Event:SpinSmashDeath % 21
  1B0:  		SetConst  *Var0  00000001
  1C0:  		SetConst  *Var1  0029010B
  1D0:  		ExecWait  DoSpinSmashHit
  1DC:  		SetConst  *Var0  00000001
  1EC:  		SetConst  *Var1  0029010B
  1FC:  		ExecWait  DoDeath
  208:  		Return
  210:  	Case  ==  .Event:FlipTrigger % D
  21C:  		Call  SetActorVar       ( .Actor:Self 00000008 00000001 )
  234:  		Call  SetActorVar       ( .Actor:Self 00000009 00000002 )
  24C:  		Call  SetDefenseTable   ( .Actor:Self 00000001 $DefenseTable_8021EB08 )
  264:  		Call  SetIdleAnimations ( .Actor:Self 00000001 $IdleAnimations_80220B38 )
  27C:  		Call  SetTargetOffset   ( .Actor:Self 00000001  -5`  15` )
  298:  		Call  8027D4C8  ( FFFFFF81 00000001 00000000 00000000 )
  2B4:  		Call  SetActorFlagBits  ( .Actor:Self 00000400 .True )
  2CC:  		Call  SetAnimation      ( .Actor:Self 00000001 0029010B )
  2E4:  		Call  GetStatusFlags    ( .Actor:Self *VarA )
  2F8:  		Call  SetActorRotationOffset    ( .Actor:Self 00000000 0000000C 00000000 )
  314:  		ChildThread
  31C:  			Wait  4`
  328:  			Call  SetActorRotation  ( .Actor:Self 00000000 00000000 0000001E )
  344:  			Wait  1`
  350:  			Call  SetActorRotation  ( .Actor:Self 00000000 00000000 00000000 )
  36C:  			Wait  1`
  378:  			Call  SetActorRotation  ( .Actor:Self 00000000 00000000 FFFFFFE2 )
  394:  			Wait  1`
  3A0:  			Call  SetActorRotation  ( .Actor:Self 00000000 00000000 FFFFFFC4 )
  3BC:  			Wait  1`
  3C8:  			Call  SetActorRotation  ( .Actor:Self 00000000 00000000 FFFFFFB5 )
  3E4:  			Wait  1`
  3F0:  		EndChildThread
  3F8:  		UseIntBuffer  $IntTable_802211D0
  404:  		Loop  00000016
  410:  			Get1Int  *Var0
  41C:  			Call  SetActorDispOffset    ( .Actor:Self 00000000 *Var0 00000000 )
  438:  			Wait  1`
  444:  		EndLoop
  44C:  		Call  SetActorRotationOffset    ( .Actor:Self 00000000 00000000 00000000 )
  468:  		Call  SetActorRotation      ( .Actor:Self 00000000 00000000 00000000 )
  484:  		Call  SetActorDispOffset    ( .Actor:Self 00000000 00000000 00000000 )
  4A0:  		Call  SetAnimation  ( .Actor:Self 00000001 0029010F )
  4B8:  	Case  ==  .Event:ShockHit % 2F
  4C4:  		SetConst  *Var0  00000001
  4D4:  		SetConst  *Var1  0029010B
  4E4:  		ExecWait  DoShockHit
  4F0:  		SetConst  *Var0  00000001
  500:  		SetConst  *Var1  0029010B
  510:  		ExecWait  DoJumpBack
  51C:  		Call  JumpToGoal    ( .Actor:Self  5` .False .True .False )
  53C:  		SetConst  *Var0  00000001
  54C:  		SetConst  *Var1  00290104
  55C:  		ExecWait  DoReturnHome
  568:  		Call  SetActorJumpGravity   ( .Actor:Self *Fixed[1.6] )
  57C:  		Call  JumpToGoal    ( .Actor:Self  5` .False .True .False )
  59C:  	Case  ==  .Event:ShockDeath % 26
  5A8:  		SetConst  *Var0  00000001
  5B8:  		SetConst  *Var1  0029010B
  5C8:  		ExecWait  DoShockHit
  5D4:  		SetConst  *Var0  00000001
  5E4:  		SetConst  *Var1  0029010B
  5F4:  		ExecWait  DoDeath
  600:  		Return
  608:  	CaseOR  ==  00000017 % 17
  614:  	CaseOR  ==  .Event:Immune % 19
  620:  		Call  GetActorVar   ( .Actor:Self 00000008 *Var0 )
  638:  		If  *Var0  ==  00000000
  648:  			SetConst  *Var0  00000001
  658:  			SetConst  *Var1  00290107
  668:  			ExecWait  DoImmune
  674:  			Call  GetStatusFlags    ( .Actor:Self *Var0 )
  688:  			If  *Var0  !&  ~Flags:StatusFlags:Sleep|Frozen|Fear|Paralyze|Dizzy|Stone|Stop % 35D000
  698:  				Call  SetAnimation  ( .Actor:Self 00000001 00290108 )
  6B0:  				Wait  10`
  6BC:  			EndIf
  6C4:  		Else
  6CC:  			SetConst  *Var0  00000001
  6DC:  			SetConst  *Var1  0029010F
  6EC:  			ExecWait  DoImmune
  6F8:  		EndIf
  700:  	EndCaseGroup
  708:  	Case  ==  .Event:Death % 20
  714:  		SetConst  *Var0  00000001
  724:  		SetConst  *Var1  0029010B
  734:  		ExecWait  DoNormalHit
  740:  		Wait  10`
  74C:  		SetConst  *Var0  00000001
  75C:  		SetConst  *Var1  0029010B
  76C:  		ExecWait  DoDeath
  778:  		Return
  780:  	Case  ==  .Event:EndFirstStrike % 35
  78C:  		Call  GetActorVar   ( .Actor:Self 00000008 *Var0 )
  7A4:  		If  *Var0  ==  00000000
  7B4:  			SetConst  *Var0  00000001
  7C4:  			SetConst  *Var1  00290104
  7D4:  			ExecWait  DoReturnHome
  7E0:  		EndIf
  7E8:  		Call  GetActorPos   ( .Actor:Self *Var0 *Var1 *Var2 )
  804:  		Call  SetHomePos    ( .Actor:Self *Var0 *Var1 *Var2 )
  820:  		Call  HPBarToHome   ( .Actor:Self )
  830:  	Case  ==  .Event:RecoverStatus % 31
  83C:  		Call  GetActorVar   ( .Actor:Self 00000008 *Var0 )
  854:  		If  *Var0  ==  00000000
  864:  			SetConst  *Var0  00000001
  874:  			SetConst  *Var1  00290101
  884:  			ExecWait  DoRecover
  890:  		Else
  898:  			SetConst  *Var0  00000001
  8A8:  			SetConst  *Var1  0029010F
  8B8:  			ExecWait  DoImmune
  8C4:  		EndIf
  8CC:  	Case  ==  .Event:ScareAway % 39
  8D8:  		Call  GetActorVar   ( .Actor:Self 00000008 *Var0 )
  8F0:  		If  *Var0  ==  00000000
  900:  			SetConst  *Var0  00000001
  910:  			SetConst  *Var1  00290104
  920:  			SetConst  *Var2  0029010B
  930:  			ExecWait  DoScareAway
  93C:  			Return
  944:  		Else
  94C:  			SetConst  *Var0  00000001
  95C:  			SetConst  *Var1  0029010F
  96C:  			ExecWait  DoImmune
  978:  		EndIf
  980:  	Case  ==  .Event:BeginAirLift % 3A
  98C:  		Call  GetActorVar   ( .Actor:Self 00000008 *Var0 )
  9A4:  		If  *Var0  ==  00000000
  9B4:  			SetConst  *Var0  00000001
  9C4:  			SetConst  *Var1  00290117
  9D4:  		Else
  9DC:  			SetConst  *Var0  00000001
  9EC:  			SetConst  *Var1  0029010F
  9FC:  		EndIf
  A04:  		ExecWait  DoAirLift
  A10:  	Case  ==  .Event:BlowAway % 16
  A1C:  		Call  GetActorVar   ( .Actor:Self 00000008 *Var0 )
  A34:  		If  *Var0  ==  00000000
  A44:  			SetConst  *Var0  00000001
  A54:  			SetConst  *Var1  00290117
  A64:  		Else
  A6C:  			SetConst  *Var0  00000001
  A7C:  			SetConst  *Var1  0029010F
  A8C:  		EndIf
  A94:  		ExecWait  DoBlowAway
  AA0:  		Return
  AA8:  	Case  ==  .Event:AirLiftFailed % 1F
  AB4:  		Call  GetActorVar   ( .Actor:Self 00000008 *Var0 )
  ACC:  		If  *Var0  ==  00000000
  ADC:  			SetConst  *Var0  00000001
  AEC:  			SetConst  *Var1  00290101
  AFC:  			ExecWait  DoImmune
  B08:  		Else
  B10:  			SetConst  *Var0  00000001
  B20:  			SetConst  *Var1  0029010F
  B30:  			ExecWait  DoImmune
  B3C:  		EndIf
  B44:  EndSwitch
  B4C:  Call  EnableIdleScript  ( .Actor:Self FFFFFFFF )
  B60:  Call  UseIdleAnimation  ( .Actor:Self .True )
  B74:  Return
  B7C:  End
}

#new:Script $Script_TakeTurn_80221DAC
{
    0:  Call  UseIdleAnimation  ( .Actor:Self .False )
   14:  Call  EnableIdleScript  ( .Actor:Self 00000000 )
   28:  Call  SetTargetActor    ( .Actor:Self .Actor:Player )
   3C:  Call  GetBattlePhase    ( *Var0 )
   4C:  If  *Var0  ==  00000001
   5C:  	Call  SetAnimation  ( .Actor:Self 00000001 00290106 )
   74:  Else
   7C:  	Call  GetActorVar   ( .Actor:Self 00000008 *Var0 )
   94:  	If  *Var0  ==  00000001
   A4:  		Call  GetActorVar   ( .Actor:Self 00000009 *Var0 )
   BC:  		Sub   *Var0  00000001
   CC:  		If  *Var0  >  00000000
   DC:  			Call  SetActorVar   ( .Actor:Self 00000009 *Var0 )
   F4:  			Call  AddActorDecoration    ( .Actor:Self 00000001 00000000 .Decoration:Sweat )
  110:  			Call  SetAnimationRate      ( .Actor:Self 00000001 *Fixed[3.0] )
  128:  			Wait  30`
  134:  			Call  SetAnimationRate      ( .Actor:Self 00000001 *Fixed[1.0] )
  14C:  			Call  RemoveActorDecoration ( .Actor:Self 00000001 00000000 )
  164:  		Else
  16C:  			Call  AddActorDecoration        ( .Actor:Self 00000001 00000000 .Decoration:Sweat )
  188:  			Call  SetAnimationRate  ( .Actor:Self 00000001 *Fixed[3.0] )
  1A0:  			Wait  20`
  1AC:  			Call  SetAnimationRate  ( .Actor:Self 00000001 *Fixed[1.0] )
  1C4:  			Call  RemoveActorDecoration     ( .Actor:Self 00000001 00000000 )
  1DC:  			Call  SetActorSounds    ( .Actor:Self .ActorSound:Jump 00000000 00000000 )
  1F8:  			Call  PlaySoundAtActor  ( .Actor:Self .Sound:Jump )
  20C:  			Call  SetAnimation      ( .Actor:Self 00000001 0029010F )
  224:  			Set   *Var0  00000000
  234:  			Call  SetActorRotationOffset    ( .Actor:Self 00000000 0000000C 00000000 )
  250:  			ChildThread
  258:  				Loop  00000005
  264:  					Add   *Var0  0000000F
  274:  					Call  SetActorRotation  ( .Actor:Self 00000000 00000000 *Var0 )
  290:  					Wait  1`
  29C:  				EndLoop
  2A4:  			EndChildThread
  2AC:  			Call  GetActorPos       ( .Actor:Self *Var0 *Var1 *Var2 )
  2C8:  			Call  SetGoalPos        ( .Actor:Self *Var0 *Var1 *Var2 )
  2E4:  			Call  SetActorJumpGravity       ( .Actor:Self *Fixed[3.0] )
  2F8:  			Call  JumpToGoal        ( .Actor:Self  8` .False .True .False )
  318:  			Call  PlaySoundAtActor  ( .Actor:Self 000020BA )
  32C:  			Call  SetActorRotationOffset    ( .Actor:Self 00000000 00000000 00000000 )
  348:  			Call  SetActorRotation  ( .Actor:Self 00000000 00000000 00000000 )
  364:  			Call  SetActorDispOffset        ( .Actor:Self 00000000 00000000 00000000 )
  380:  			Call  SetAnimation      ( .Actor:Self 00000001 00290101 )
  398:  			Call  SetActorVar       ( .Actor:Self 00000008 00000000 )
  3B0:  			Call  SetIdleAnimations ( .Actor:Self 00000001 $IdleAnimations_80220AA0 )
  3C8:  			Call  SetDefenseTable   ( .Actor:Self 00000001 $DefenseTable_8021EAD0 )
  3E0:  			Call  SetTargetOffset   ( .Actor:Self 00000001  -4`  32` )
  3FC:  			Call  8027D4C8  ( FFFFFF81 00000001 FFFFFFFF FFFFFFFC )
  418:  			Call  SetActorFlagBits  ( .Actor:Self 00000400 .False )
  430:  			Call  ResetActorSounds  ( .Actor:Self .ActorSound:Jump )
  444:  		EndIf
  44C:  		Call  EnableIdleScript  ( .Actor:Self 00000001 )
  460:  		Call  UseIdleAnimation  ( .Actor:Self .True )
  474:  		Return
  47C:  	EndIf
  484:  	Call  UseBattleCamPreset    ( 0000003F )
  494:  	Call  BattleCamTargetActor  ( .Actor:Self )
  4A4:  	Wait  10`
  4B0:  	Call  SetAnimation  ( .Actor:Self 00000001 00290107 )
  4C8:  	Wait  10`
  4D4:  	ChildThread
  4DC:  		Call  GetActorPos   ( .Actor:Self *Var0 *Var1 *Var2 )
  4F8:  		Add   *Var1  00000004
  508:  		Call  PlayEffect    ( ~FX:SmokeImpact:Small *Var0 *Var1 *Var2 00000020 00000004 00000000 0000000A 00000000 00000000 00000000 00000000 00000000 )
  54C:  		Wait  3`
  558:  		Call  PlayEffect    ( ~FX:SmokeImpact:Small *Var0 *Var1 *Var2 00000020 00000004 00000000 0000000A 00000000 00000000 00000000 00000000 00000000 )
  59C:  		Wait  2`
  5A8:  		Call  PlayEffect    ( ~FX:SmokeImpact:Small *Var0 *Var1 *Var2 00000020 00000004 00000000 0000000A 00000000 00000000 00000000 00000000 00000000 )
  5EC:  	EndChildThread
  5F4:  	Call  PlaySoundAtActor  ( .Actor:Self 00002021 )
  608:  	Call  SetAnimation      ( .Actor:Self 00000001 00290106 )
  620:  	Wait  10`
  62C:  	Call  8024ECF8  ( FFFFFFFF 00000001 00000000 )
  644:  EndIf
  64C:  Call  PlaySoundAtActor  ( .Actor:Self 000020D3 )
  660:  Call  SetActorSounds    ( .Actor:Self .ActorSound:Walk 00000000 00000000 )
  67C:  Call  EnemyTestTarget   ( .Actor:Self *Var0 ~Flags:DamageType:0 00000000 00000001 00000010 )
  6A0:  Switch  *Var0
  6AC:  	CaseOR  ==  .HitResult:Miss % 6
  6B8:  	CaseOR  ==  .HitResult:Lucky % 5
  6C4:  		Set   *VarA  *Var0
  6D4:  		Call  SetGoalToTarget   ( .Actor:Self )
  6E4:  		Call  AddGoalPos        ( .Actor:Self  -40`  0`  0` )
  700:  		Call  SetActorSpeed     ( .Actor:Self *Fixed[16.0] )
  714:  		Call  RunToGoal ( .Actor:Self  0` .False )
  72C:  		Call  GetBattlePhase    ( *Var0 )
  73C:  		If  *Var0  ==  00000001
  74C:  			Call  UseBattleCamPreset    ( 00000005 )
  75C:  			Call  SetBattleCamZoom      (  300` )
  76C:  			Call  SetBattleCamOffsetZ   (  20` )
  77C:  			Call  MoveBattleCamOver     (  10` )
  78C:  			Call  8024ECF8  ( FFFFFFFF 00000001 00000000 )
  7A4:  		EndIf
  7AC:  		Call  SetAnimation  ( .Actor:Self 00000001 00290108 )
  7C4:  		Wait  8`
  7D0:  		Call  ResetAllActorSounds   ( .Actor:Self )
  7E0:  		Call  SetActorYaw   ( .Actor:Self  180` )
  7F4:  		Wait  4`
  800:  		If  *VarA  ==  .HitResult:Lucky % 5
  810:  			Call  EnemyTestTarget   ( .Actor:Self *Var0 ~Flags:DamageType:TriggerLucky 00000000 00000000 00000000 )
  834:  		EndIf
  83C:  		Call  SetAnimation  ( .Actor:Self 00000001 00290115 )
  854:  		Wait  1`
  860:  		Call  SetAnimation  ( .Actor:Self 00000001 00290116 )
  878:  		Call  GetActorPos   ( .Actor:Self *Var0 *Var1 *Var2 )
  894:  		Add   *Var1  00000014
  8A4:  		Call  SetGoalPos    ( .Actor:Self *Var0 *Var1 *Var2 )
  8C0:  		Call  SetActorJumpGravity   ( .Actor:Self *Fixed[2.0] )
  8D4:  		Call  JumpToGoal    ( .Actor:Self  5` .False .True .False )
  8F4:  		Call  SetAnimation  ( .Actor:Self 00000001 00290117 )
  90C:  		Wait  6`
  918:  		Sub   *Var1  00000014
  928:  		Call  SetGoalPos    ( .Actor:Self *Var0 *Var1 *Var2 )
  944:  		Call  JumpToGoal    ( .Actor:Self  5` .False .True .False )
  964:  		Call  UseBattleCamPreset    ( 00000002 )
  974:  		Call  YieldTurn ( )
  980:  		Call  SetActorYaw   ( .Actor:Self  180` )
  994:  		Call  AddActorDecoration    ( .Actor:Self 00000001 00000000 .Decoration:Sweat )
  9B0:  		Call  SetAnimation  ( .Actor:Self 00000001 00290117 )
  9C8:  		Call  SetGoalToHome ( .Actor:Self )
  9D8:  		Call  SetActorSpeed ( .Actor:Self *Fixed[8.0] )
  9EC:  		Call  RunToGoal     ( .Actor:Self  0` .False )
  A04:  		Call  SetAnimation  ( .Actor:Self 00000001 00290101 )
  A1C:  		Call  RemoveActorDecoration ( .Actor:Self 00000001 00000000 )
  A34:  		Call  SetPartYaw    ( .Actor:Self 00000001  0` )
  A4C:  		Call  SetActorYaw   ( .Actor:Self  0` )
  A60:  		Call  EnableIdleScript      ( .Actor:Self 00000001 )
  A74:  		Call  UseIdleAnimation      ( .Actor:Self .True )
  A88:  		Return
  A90:  	EndCaseGroup
  A98:  EndSwitch
  AA0:  Call  SetGoalToTarget   ( .Actor:Self )
  AB0:  Call  SetActorSpeed     ( .Actor:Self *Fixed[16.0] )
  AC4:  Call  RunToGoal ( .Actor:Self  0` .False )
  ADC:  Call  ResetAllActorSounds   ( .Actor:Self )
  AEC:  Wait  2`
  AF8:  Call  EnemyDamageTarget ( .Actor:Self *Var0 ~Flags:DamageType:0 0000FFFF 00000000 00000001 00000020 )
  B20:  Switch  *Var0
  B2C:  	CaseOR  ==  .HitResult:Hit % 0
  B38:  	CaseOR  ==  .HitResult:QuakeImmune % 2
  B44:  		Call  UseBattleCamPreset    ( 00000002 )
  B54:  		Call  GetGoalPos    ( .Actor:Self *Var0 *Var1 *Var2 )
  B70:  		Add   *Var0  00000028
  B80:  		Set   *Var1  00000000
  B90:  		Call  SetActorJumpGravity   ( .Actor:Self *Fixed[1.8] )
  BA4:  		Call  SetGoalPos    ( .Actor:Self *Var0 *Var1 *Var2 )
  BC0:  		Call  JumpToGoal    ( .Actor:Self  10` .False .True .False )
  BE0:  		Add   *Var0  0000001E
  BF0:  		Call  SetGoalPos    ( .Actor:Self *Var0 *Var1 *Var2 )
  C0C:  		Call  JumpToGoal    ( .Actor:Self  8` .False .True .False )
  C2C:  		Add   *Var0  00000014
  C3C:  		Call  SetGoalPos    ( .Actor:Self *Var0 *Var1 *Var2 )
  C58:  		Call  JumpToGoal    ( .Actor:Self  6` .False .True .False )
  C78:  		Call  SetAnimation  ( .Actor:Self 00000001 00290108 )
  C90:  		Wait  8`
  C9C:  		Call  YieldTurn ( )
  CA8:  		SetConst  *Var0  00000001
  CB8:  		SetConst  *Var1  00290104
  CC8:  		ExecWait  DoReturnHome
  CD4:  		Call  SetAnimation  ( .Actor:Self 00000001 00290101 )
  CEC:  	EndCaseGroup
  CF4:  EndSwitch
  CFC:  Call  EnableIdleScript  ( .Actor:Self 00000001 )
  D10:  Call  UseIdleAnimation  ( .Actor:Self .True )
  D24:  Return
  D2C:  End
}

#new:Script $Script_BeforeBattle_80222AE0
{
    0:  Call  SetSpriteShading  ( FFFFFFFF )
   10:  Call  SetCamBGColor     ( .Cam:Battle  0`  0`  0` )
   2C:  Return
   34:  End
}

#new:Script $Script_AfterBattle_80222B1C
{
    0:  Return
    8:  End
}

#new:Stage $Stage_80222B2C
{
	$ASCII_80227F28  % trd_tex
	$ASCII_80227F18  % trd_bt01_shape
	$ASCII_80227F08  % trd_bt01_hit
	$Script_BeforeBattle_80222AE0
	$Script_AfterBattle_80222B1C
	00000000
	00000000
	00000000
	00000000
	00000000
}

PADDING: 80222B54 to 80222B60 (004ABBF4 to 004ABC00)
00000000 00000000 00000000

% Origin: HEURISTIC
#new:Script $Script_80222B60
{
    0:  Set   *VarA  *Var0
   10:  Label  0
   1C:  Call  RotateGroup   ( *VarA 00000002 00000000 00000000 00000001 )
   3C:  Wait  5`
   48:  Call  RotateGroup   ( *VarA 00000001 00000000 00000000 00000001 )
   68:  Wait  5`
   74:  Call  RotateGroup   ( *VarA FFFFFFFE 00000000 00000000 00000001 )
   94:  Wait  5`
   A0:  Call  RotateGroup   ( *VarA 00000001 00000000 00000000 00000001 )
   C0:  Wait  5`
   CC:  Call  RandInt       ( 0000001E *Var0 )
   E0:  Add   *Var0  0000001E
   F0:  Wait  *Var0
   FC:  Goto  0
  108:  Return
  110:  End
}

#new:Script $Script_80222C78
{
    0:  Set   *VarA  *Var0
   10:  Loop
   1C:  	Call  TranslateModel    ( *VarA 00000001 00000000 00000000 )
   38:  	Wait  2`
   44:  	Call  TranslateModel    ( *VarA 00000001 00000000 00000000 )
   60:  	Wait  1`
   6C:  	Call  TranslateModel    ( *VarA 00000001 *Fixed[-0.5] 00000000 )
   88:  	Wait  1`
   94:  	Call  TranslateModel    ( *VarA 00000001 FFFFFFFF 00000000 )
   B0:  	Wait  1`
   BC:  	Call  TranslateModel    ( *VarA *Fixed[1.5] FFFFFFFF 00000000 )
   D8:  	Wait  1`
   E4:  	Call  TranslateModel    ( *VarA 00000002 FFFFFFFF 00000000 )
  100:  	Wait  2`
  10C:  	Call  TranslateModel    ( *VarA 00000002 FFFFFFFF 00000000 )
  128:  	Wait  2`
  134:  	Call  TranslateModel    ( *VarA 00000002 FFFFFFFF 00000000 )
  150:  	Wait  1`
  15C:  	Call  TranslateModel    ( *VarA *Fixed[2.5] *Fixed[-1.5] 00000000 )
  178:  	Wait  1`
  184:  	Call  TranslateModel    ( *VarA 00000003 FFFFFFFE 00000000 )
  1A0:  	Wait  2`
  1AC:  	Call  TranslateModel    ( *VarA 00000003 FFFFFFFE 00000000 )
  1C8:  	Wait  1`
  1D4:  	Call  TranslateModel    ( *VarA 00000003 *Fixed[-2.5] 00000000 )
  1F0:  	Wait  1`
  1FC:  	Call  TranslateModel    ( *VarA 00000003 FFFFFFFD 00000000 )
  218:  	Wait  2`
  224:  	Call  TranslateModel    ( *VarA 00000003 FFFFFFFD 00000000 )
  240:  	Wait  2`
  24C:  	Call  TranslateModel    ( *VarA 00000003 FFFFFFFD 00000000 )
  268:  	Wait  1`
  274:  	Call  TranslateModel    ( *VarA 00000003 *Fixed[-2.5] 00000000 )
  290:  	Wait  1`
  29C:  	Call  TranslateModel    ( *VarA 00000003 FFFFFFFE 00000000 )
  2B8:  	Wait  1`
  2C4:  	Call  TranslateModel    ( *VarA *Fixed[2.5] FFFFFFFE 00000000 )
  2E0:  	Wait  1`
  2EC:  	Call  TranslateModel    ( *VarA 00000002 FFFFFFFE 00000000 )
  308:  	Wait  1`
  314:  	Call  TranslateModel    ( *VarA 00000002 *Fixed[-1.5] 00000000 )
  330:  	Wait  1`
  33C:  	Call  TranslateModel    ( *VarA 00000002 FFFFFFFF 00000000 )
  358:  	Wait  1`
  364:  	Call  TranslateModel    ( *VarA *Fixed[1.5] *Fixed[-0.5] 00000000 )
  380:  	Wait  1`
  38C:  	Call  TranslateModel    ( *VarA 00000001 00000000 00000000 )
  3A8:  	Wait  1`
  3B4:  	Call  TranslateModel    ( *VarA 00000001 *Fixed[0.5] 00000000 )
  3D0:  	Wait  1`
  3DC:  	Call  TranslateModel    ( *VarA 00000001 00000001 00000000 )
  3F8:  	Wait  1`
  404:  	Call  TranslateModel    ( *VarA *Fixed[0.5] 00000001 00000000 )
  420:  	Wait  1`
  42C:  	Call  TranslateModel    ( *VarA 00000000 00000001 00000000 )
  448:  	Wait  1`
  454:  	Call  TranslateModel    ( *VarA *Fixed[-0.5] 00000001 00000000 )
  470:  	Wait  1`
  47C:  	Call  TranslateModel    ( *VarA FFFFFFFF 00000001 00000000 )
  498:  	Wait  2`
  4A4:  	Call  TranslateModel    ( *VarA FFFFFFFF 00000001 00000000 )
  4C0:  	Wait  1`
  4CC:  	Call  TranslateModel    ( *VarA FFFFFFFF *Fixed[0.5] 00000000 )
  4E8:  	Wait  1`
  4F4:  	Call  TranslateModel    ( *VarA FFFFFFFF 00000000 00000000 )
  510:  	Wait  2`
  51C:  	Call  TranslateModel    ( *VarA FFFFFFFF 00000000 00000000 )
  538:  	Wait  1`
  544:  	Call  TranslateModel    ( *VarA *Fixed[-0.5] 00000000 00000000 )
  560:  	Wait  1`
  56C:  	Call  TranslateModel    ( *VarA 00000000 00000000 00000000 )
  588:  	Wait  2`
  594:  EndLoop
  59C:  Return
  5A4:  End
}

#new:Script $Script_BeforeBattle_80223224
{
    0:  Call  SetSpriteShading  ( FFFFFFFF )
   10:  Call  SetCamBGColor     ( .Cam:Battle  0`  0`  0` )
   2C:  Call  EnableModel       ( ~Model:trd_bt02:kabe2_2 .False )
   40:  Thread
   48:  	Set   *Var0  00000013
   58:  	Exec  $Script_80222C78
   64:  	Wait  5`
   70:  	Set   *Var0  00000011
   80:  	Exec  $Script_80222C78
   8C:  	Wait  5`
   98:  	Set   *Var0  0000000F
   A8:  	Exec  $Script_80222C78
   B4:  	Wait  5`
   C0:  	Set   *Var0  0000000D
   D0:  	Exec  $Script_80222C78
   DC:  EndThread
   E4:  Return
   EC:  End
}

#new:Script $Script_AfterBattle_80223318
{
    0:  Return
    8:  End
}

#new:ForegroundModelList $ForegroundModelList_80223328
{
	~Model:trd_bt02:saku
	00000000
}

#new:Stage $Stage_80223330
{
	$ASCII_80227F50  % trd_tex
	$ASCII_80227F40  % trd_bt02_shape
	$ASCII_80227F30  % trd_bt02_hit
	$Script_BeforeBattle_80223224
	$Script_AfterBattle_80223318
	00000000
	$ForegroundModelList_80223328
	00000000
	00000000
	00000000
}

PADDING: 80223358 to 80223360 (004AC3F8 to 004AC400)
00000000 00000000

% Origin: HEURISTIC
#new:Script $Script_80223360
{
    0:  Set   *VarA  *Var0
   10:  Label  0
   1C:  Call  RotateGroup   ( *VarA 00000002 00000000 00000000 00000001 )
   3C:  Wait  5`
   48:  Call  RotateGroup   ( *VarA 00000001 00000000 00000000 00000001 )
   68:  Wait  5`
   74:  Call  RotateGroup   ( *VarA FFFFFFFE 00000000 00000000 00000001 )
   94:  Wait  5`
   A0:  Call  RotateGroup   ( *VarA 00000001 00000000 00000000 00000001 )
   C0:  Wait  5`
   CC:  Call  RandInt       ( 0000001E *Var0 )
   E0:  Add   *Var0  0000001E
   F0:  Wait  *Var0
   FC:  Goto  0
  108:  Return
  110:  End
}

#new:Script $Script_80223478
{
    0:  Set   *VarA  *Var0
   10:  Loop
   1C:  	Call  TranslateModel    ( *VarA 00000001 00000000 00000000 )
   38:  	Wait  2`
   44:  	Call  TranslateModel    ( *VarA 00000001 00000000 00000000 )
   60:  	Wait  1`
   6C:  	Call  TranslateModel    ( *VarA 00000001 *Fixed[-0.5] 00000000 )
   88:  	Wait  1`
   94:  	Call  TranslateModel    ( *VarA 00000001 FFFFFFFF 00000000 )
   B0:  	Wait  1`
   BC:  	Call  TranslateModel    ( *VarA *Fixed[1.5] FFFFFFFF 00000000 )
   D8:  	Wait  1`
   E4:  	Call  TranslateModel    ( *VarA 00000002 FFFFFFFF 00000000 )
  100:  	Wait  2`
  10C:  	Call  TranslateModel    ( *VarA 00000002 FFFFFFFF 00000000 )
  128:  	Wait  2`
  134:  	Call  TranslateModel    ( *VarA 00000002 FFFFFFFF 00000000 )
  150:  	Wait  1`
  15C:  	Call  TranslateModel    ( *VarA *Fixed[2.5] *Fixed[-1.5] 00000000 )
  178:  	Wait  1`
  184:  	Call  TranslateModel    ( *VarA 00000003 FFFFFFFE 00000000 )
  1A0:  	Wait  2`
  1AC:  	Call  TranslateModel    ( *VarA 00000003 FFFFFFFE 00000000 )
  1C8:  	Wait  1`
  1D4:  	Call  TranslateModel    ( *VarA 00000003 *Fixed[-2.5] 00000000 )
  1F0:  	Wait  1`
  1FC:  	Call  TranslateModel    ( *VarA 00000003 FFFFFFFD 00000000 )
  218:  	Wait  2`
  224:  	Call  TranslateModel    ( *VarA 00000003 FFFFFFFD 00000000 )
  240:  	Wait  2`
  24C:  	Call  TranslateModel    ( *VarA 00000003 FFFFFFFD 00000000 )
  268:  	Wait  1`
  274:  	Call  TranslateModel    ( *VarA 00000003 *Fixed[-2.5] 00000000 )
  290:  	Wait  1`
  29C:  	Call  TranslateModel    ( *VarA 00000003 FFFFFFFE 00000000 )
  2B8:  	Wait  1`
  2C4:  	Call  TranslateModel    ( *VarA *Fixed[2.5] FFFFFFFE 00000000 )
  2E0:  	Wait  1`
  2EC:  	Call  TranslateModel    ( *VarA 00000002 FFFFFFFE 00000000 )
  308:  	Wait  1`
  314:  	Call  TranslateModel    ( *VarA 00000002 *Fixed[-1.5] 00000000 )
  330:  	Wait  1`
  33C:  	Call  TranslateModel    ( *VarA 00000002 FFFFFFFF 00000000 )
  358:  	Wait  1`
  364:  	Call  TranslateModel    ( *VarA *Fixed[1.5] *Fixed[-0.5] 00000000 )
  380:  	Wait  1`
  38C:  	Call  TranslateModel    ( *VarA 00000001 00000000 00000000 )
  3A8:  	Wait  1`
  3B4:  	Call  TranslateModel    ( *VarA 00000001 *Fixed[0.5] 00000000 )
  3D0:  	Wait  1`
  3DC:  	Call  TranslateModel    ( *VarA 00000001 00000001 00000000 )
  3F8:  	Wait  1`
  404:  	Call  TranslateModel    ( *VarA *Fixed[0.5] 00000001 00000000 )
  420:  	Wait  1`
  42C:  	Call  TranslateModel    ( *VarA 00000000 00000001 00000000 )
  448:  	Wait  1`
  454:  	Call  TranslateModel    ( *VarA *Fixed[-0.5] 00000001 00000000 )
  470:  	Wait  1`
  47C:  	Call  TranslateModel    ( *VarA FFFFFFFF 00000001 00000000 )
  498:  	Wait  2`
  4A4:  	Call  TranslateModel    ( *VarA FFFFFFFF 00000001 00000000 )
  4C0:  	Wait  1`
  4CC:  	Call  TranslateModel    ( *VarA FFFFFFFF *Fixed[0.5] 00000000 )
  4E8:  	Wait  1`
  4F4:  	Call  TranslateModel    ( *VarA FFFFFFFF 00000000 00000000 )
  510:  	Wait  2`
  51C:  	Call  TranslateModel    ( *VarA FFFFFFFF 00000000 00000000 )
  538:  	Wait  1`
  544:  	Call  TranslateModel    ( *VarA *Fixed[-0.5] 00000000 00000000 )
  560:  	Wait  1`
  56C:  	Call  TranslateModel    ( *VarA 00000000 00000000 00000000 )
  588:  	Wait  2`
  594:  EndLoop
  59C:  Return
  5A4:  End
}

#new:Script $Script_BeforeBattle_80223A24
{
    0:  Call  SetSpriteShading  ( FFFFFFFF )
   10:  Call  SetCamBGColor ( .Cam:Battle  0`  0`  0` )
   2C:  Call  EnableModel   ( ~Model:trd_bt02:saku .False )
   40:  Call  EnableModel   ( ~Model:trd_bt02:kiwa .False )
   54:  Call  EnableModel   ( ~Model:trd_bt02:tyuu .False )
   68:  Thread
   70:  	Set   *Var0  00000013
   80:  	Exec  $Script_80223478
   8C:  	Wait  5`
   98:  	Set   *Var0  00000011
   A8:  	Exec  $Script_80223478
   B4:  	Wait  5`
   C0:  	Set   *Var0  0000000F
   D0:  	Exec  $Script_80223478
   DC:  	Wait  5`
   E8:  	Set   *Var0  0000000D
   F8:  	Exec  $Script_80223478
  104:  EndThread
  10C:  Return
  114:  End
}

#new:Script $Script_AfterBattle_80223B40
{
    0:  Return
    8:  End
}

#new:Stage $Stage_80223B50
{
	$ASCII_80227F78  % trd_tex
	$ASCII_80227F68  % trd_bt02_shape
	$ASCII_80227F58  % trd_bt02_hit
	$Script_BeforeBattle_80223A24
	$Script_AfterBattle_80223B40
	00000000
	00000000
	00000000
	00000000
	00000000
}

PADDING: 80223B78 to 80223B80 (004ACC18 to 004ACC20)
00000000 00000000

#new:Script $Script_80223B80
{
    0:  Set   *VarA  *Var0
   10:  Set   *Var7  *Var2
   20:  Mul   *Var7  0000000A
   30:  Label  0
   3C:  Add   *Var7  00000004
   4C:  If  *Var7  >  00000E0F
   5C:  	Sub   *Var7  00000E10
   6C:  EndIf
   74:  Call  $Function_80218220    ( *Var7 *Var0 *Var1 *Var2 *Var3 )
   94:  Call  TranslateModel        ( *VarA *Var0 *Var1 *Var2 )
   B0:  Call  RotateModel   ( *VarA *Var3 00000000 00000001 00000000 )
   D0:  Wait  1`
   DC:  Goto  0
   E8:  Return
   F0:  End
}

#new:Script $Script_80223C78
{
    0:  Set   *VarA  *Var0
   10:  Set   *VarB  *Var3
   20:  Set   *VarC  *Var4
   30:  Set   *Var7  *Var2
   40:  Mul   *Var7  0000000A
   50:  Label  0
   5C:  Add   *Var7  00000004
   6C:  If  *Var7  >  00000E0F
   7C:  	Sub   *Var7  00000E10
   8C:  EndIf
   94:  Call  $Function_80218220    ( *Var7 *Var0 *Var1 *Var2 *Var3 )
   B4:  AddF  *Var1  *VarB
   C4:  AddF  *Var2  *VarC
   D4:  Call  TranslateModel        ( *VarA *Var0 *Var1 *Var2 )
   F0:  Call  RotateModel   ( *VarA *Var3 00000000 00000001 00000000 )
  110:  Wait  1`
  11C:  Goto  0
  128:  Return
  130:  End
}

% Origin: HEURISTIC
#new:Script $Script_80223DB0
{
    0:  Set   *VarA  *Var0
   10:  Set   *VarB  *Var3
   20:  Set   *VarC  *Var4
   30:  Set   *VarD  *Var5
   40:  Set   *Var7  *Var2
   50:  Mul   *Var7  0000000A
   60:  Label  0
   6C:  Add   *Var7  00000004
   7C:  If  *Var7  >  00000E0F
   8C:  	Sub   *Var7  00000E10
   9C:  EndIf
   A4:  Call  $Function_80218220    ( *Var7 *Var0 *Var1 *Var2 *Var3 )
   C4:  AddF  *Var0  *VarB
   D4:  AddF  *Var1  *VarC
   E4:  AddF  *Var2  *VarD
   F4:  Call  TranslateModel        ( *VarA *Var0 *Var1 *Var2 )
  110:  Call  RotateModel   ( *VarA *Var3 00000000 00000001 00000000 )
  130:  Wait  1`
  13C:  Goto  0
  148:  Return
  150:  End
}

#new:Script $Script_BeforeBattle_80223F08
{
    0:  Call  SetSpriteShading  ( FFFFFFFF )
   10:  Set   *Var0  00000004
   20:  Set   *Var2  00000000
   30:  Exec  $Script_80223B80
   3C:  Set   *Var0  00000002
   4C:  Set   *Var2  00000046
   5C:  Set   *Var3  000000AF
   6C:  Set   *Var4  FFFFFF56
   7C:  Exec  $Script_80223C78
   88:  Return
   90:  End
}

#new:Script $Script_AfterBattle_80223FA0
{
    0:  Return
    8:  End
}

#new:ForegroundModelList $ForegroundModelList_80223FB0
{
	~Model:trd_bt03:saku
	~Model:trd_bt03:kabe2
	~Model:trd_bt03:kabe
	00000000
}

#new:Stage $Stage_80223FC0
{
	$ASCII_80227FA8  % trd_tex
	$ASCII_80227F98  % trd_bt03_shape
	$ASCII_80227F88  % trd_bt03_hit
	$Script_BeforeBattle_80223F08
	$Script_AfterBattle_80223FA0
	$ASCII_80227F80  % nok_bg
	$ForegroundModelList_80223FB0
	00000000
	00000000
	00000000
}

PADDING: 80223FE8 to 80223FF0 (004AD088 to 004AD090)
00000000 00000000

#new:Script $Script_80223FF0
{
    0:  Set   *VarA  *Var1
   10:  Set   *VarB  *Var2
   20:  Set   *VarC  *Var3
   30:  Call  SetTexPanner  ( *Var0 *Var1 )
   44:  Set   *Var0  00000000
   54:  Set   *Var1  00000000
   64:  Loop
   70:  	Call  SetTexPanOffset   ( *VarA 00000000 *Var0 *Var1 )
   8C:  	Add   *Var0  *VarB
   9C:  	Add   *Var1  *VarC
   AC:  	Wait  1`
   B8:  EndLoop
   C0:  Return
   C8:  End
}

% Origin: HEURISTIC
#new:Script $Script_802240C0
{
    0:  Set   *VarA  *Var1
   10:  Set   *VarB  *Var2
   20:  Set   *VarC  *Var3
   30:  Call  SetTexPanner  ( *Var0 *Var1 )
   44:  Set   *Var0  00000000
   54:  Set   *Var1  00000000
   64:  Loop
   70:  	Call  SetTexPanOffset   ( *VarA 00000000 *Var0 00000000 )
   8C:  	Call  SetTexPanOffset   ( *VarA 00000001 *Var1 00000000 )
   A8:  	Add   *Var0  *VarB
   B8:  	Add   *Var1  *VarC
   C8:  	Wait  1`
   D4:  EndLoop
   DC:  Return
   E4:  End
}

% Origin: HEURISTIC
#new:Script $Script_802241AC
{
    0:  Set   *VarA  *Var1
   10:  Set   *VarB  *Var2
   20:  Set   *VarC  *Var3
   30:  Call  SetTexPanner  ( *Var0 *Var1 )
   44:  Set   *Var0  00000000
   54:  Set   *Var1  00000000
   64:  Loop
   70:  	Call  SetTexPanOffset   ( *VarA 00000000 00000000 *Var0 )
   8C:  	Call  SetTexPanOffset   ( *VarA 00000001 00000000 *Var1 )
   A8:  	Add   *Var0  *VarB
   B8:  	Add   *Var1  *VarC
   C8:  	Wait  1`
   D4:  EndLoop
   DC:  Return
   E4:  End
}

#new:Script $Script_BeforeBattle_80224298
{
    0:  Call  SetSpriteShading  ( FFFFFFFF )
   10:  Call  SetCamBGColor     ( .Cam:Battle  0`  0`  0` )
   2C:  Set   *Var0  0000000D
   3C:  Set   *Var1  00000000
   4C:  Set   *Var2  00000028
   5C:  Set   *Var3  00000000
   6C:  Exec  $Script_80223FF0
   78:  Return
   80:  End
}

#new:Script $Script_AfterBattle_80224320
{
    0:  Return
    8:  End
}

#new:ForegroundModelList $ForegroundModelList_80224330
{
	~Model:trd_bt04:hikari1
	00000000
}

#new:Stage $Stage_80224338
{
	$ASCII_80227FD0  % trd_tex
	$ASCII_80227FC0  % trd_bt04_shape
	$ASCII_80227FB0  % trd_bt04_hit
	$Script_BeforeBattle_80224298
	$Script_AfterBattle_80224320
	00000000
	$ForegroundModelList_80224330
	00000000
	00000000
	00000000
}

% Origin: HEURISTIC
#new:Script $Script_80224360
{
    0:  Set   *VarA  *Var0
   10:  Label  0
   1C:  Call  RotateGroup   ( *VarA 00000002 00000000 00000000 00000001 )
   3C:  Wait  5`
   48:  Call  RotateGroup   ( *VarA 00000001 00000000 00000000 00000001 )
   68:  Wait  5`
   74:  Call  RotateGroup   ( *VarA FFFFFFFE 00000000 00000000 00000001 )
   94:  Wait  5`
   A0:  Call  RotateGroup   ( *VarA 00000001 00000000 00000000 00000001 )
   C0:  Wait  5`
   CC:  Call  RandInt       ( 0000001E *Var0 )
   E0:  Add   *Var0  0000001E
   F0:  Wait  *Var0
   FC:  Goto  0
  108:  Return
  110:  End
}

#new:Script $Script_80224478
{
    0:  Set   *VarA  *Var0
   10:  Loop
   1C:  	Call  TranslateModel    ( *VarA 00000001 00000000 00000000 )
   38:  	Wait  2`
   44:  	Call  TranslateModel    ( *VarA 00000001 00000000 00000000 )
   60:  	Wait  1`
   6C:  	Call  TranslateModel    ( *VarA 00000001 *Fixed[-0.5] 00000000 )
   88:  	Wait  1`
   94:  	Call  TranslateModel    ( *VarA 00000001 FFFFFFFF 00000000 )
   B0:  	Wait  1`
   BC:  	Call  TranslateModel    ( *VarA *Fixed[1.5] FFFFFFFF 00000000 )
   D8:  	Wait  1`
   E4:  	Call  TranslateModel    ( *VarA 00000002 FFFFFFFF 00000000 )
  100:  	Wait  2`
  10C:  	Call  TranslateModel    ( *VarA 00000002 FFFFFFFF 00000000 )
  128:  	Wait  2`
  134:  	Call  TranslateModel    ( *VarA 00000002 FFFFFFFF 00000000 )
  150:  	Wait  1`
  15C:  	Call  TranslateModel    ( *VarA *Fixed[2.5] *Fixed[-1.5] 00000000 )
  178:  	Wait  1`
  184:  	Call  TranslateModel    ( *VarA 00000003 FFFFFFFE 00000000 )
  1A0:  	Wait  2`
  1AC:  	Call  TranslateModel    ( *VarA 00000003 FFFFFFFE 00000000 )
  1C8:  	Wait  1`
  1D4:  	Call  TranslateModel    ( *VarA 00000003 *Fixed[-2.5] 00000000 )
  1F0:  	Wait  1`
  1FC:  	Call  TranslateModel    ( *VarA 00000003 FFFFFFFD 00000000 )
  218:  	Wait  2`
  224:  	Call  TranslateModel    ( *VarA 00000003 FFFFFFFD 00000000 )
  240:  	Wait  2`
  24C:  	Call  TranslateModel    ( *VarA 00000003 FFFFFFFD 00000000 )
  268:  	Wait  1`
  274:  	Call  TranslateModel    ( *VarA 00000003 *Fixed[-2.5] 00000000 )
  290:  	Wait  1`
  29C:  	Call  TranslateModel    ( *VarA 00000003 FFFFFFFE 00000000 )
  2B8:  	Wait  1`
  2C4:  	Call  TranslateModel    ( *VarA *Fixed[2.5] FFFFFFFE 00000000 )
  2E0:  	Wait  1`
  2EC:  	Call  TranslateModel    ( *VarA 00000002 FFFFFFFE 00000000 )
  308:  	Wait  1`
  314:  	Call  TranslateModel    ( *VarA 00000002 *Fixed[-1.5] 00000000 )
  330:  	Wait  1`
  33C:  	Call  TranslateModel    ( *VarA 00000002 FFFFFFFF 00000000 )
  358:  	Wait  1`
  364:  	Call  TranslateModel    ( *VarA *Fixed[1.5] *Fixed[-0.5] 00000000 )
  380:  	Wait  1`
  38C:  	Call  TranslateModel    ( *VarA 00000001 00000000 00000000 )
  3A8:  	Wait  1`
  3B4:  	Call  TranslateModel    ( *VarA 00000001 *Fixed[0.5] 00000000 )
  3D0:  	Wait  1`
  3DC:  	Call  TranslateModel    ( *VarA 00000001 00000001 00000000 )
  3F8:  	Wait  1`
  404:  	Call  TranslateModel    ( *VarA *Fixed[0.5] 00000001 00000000 )
  420:  	Wait  1`
  42C:  	Call  TranslateModel    ( *VarA 00000000 00000001 00000000 )
  448:  	Wait  1`
  454:  	Call  TranslateModel    ( *VarA *Fixed[-0.5] 00000001 00000000 )
  470:  	Wait  1`
  47C:  	Call  TranslateModel    ( *VarA FFFFFFFF 00000001 00000000 )
  498:  	Wait  2`
  4A4:  	Call  TranslateModel    ( *VarA FFFFFFFF 00000001 00000000 )
  4C0:  	Wait  1`
  4CC:  	Call  TranslateModel    ( *VarA FFFFFFFF *Fixed[0.5] 00000000 )
  4E8:  	Wait  1`
  4F4:  	Call  TranslateModel    ( *VarA FFFFFFFF 00000000 00000000 )
  510:  	Wait  2`
  51C:  	Call  TranslateModel    ( *VarA FFFFFFFF 00000000 00000000 )
  538:  	Wait  1`
  544:  	Call  TranslateModel    ( *VarA *Fixed[-0.5] 00000000 00000000 )
  560:  	Wait  1`
  56C:  	Call  TranslateModel    ( *VarA 00000000 00000000 00000000 )
  588:  	Wait  2`
  594:  EndLoop
  59C:  Return
  5A4:  End
}

#new:Script $Script_BeforeBattle_80224A24
{
    0:  Call  SetSpriteShading  ( FFFFFFFF )
   10:  Call  SetCamBGColor     ( .Cam:Battle  0`  0`  0` )
   2C:  Thread
   34:  	Set   *Var0  0000001B
   44:  	Exec  $Script_80224478
   50:  	Wait  5`
   5C:  	Set   *Var0  00000019
   6C:  	Exec  $Script_80224478
   78:  EndThread
   80:  Thread
   88:  	Set   *Var0  00000006
   98:  	Exec  $Script_80224478
   A4:  	Wait  5`
   B0:  	Set   *Var0  00000004
   C0:  	Exec  $Script_80224478
   CC:  	Wait  5`
   D8:  	Set   *Var0  00000002
   E8:  	Exec  $Script_80224478
   F4:  EndThread
   FC:  Return
  104:  End
}

#new:Script $Script_AfterBattle_80224B30
{
    0:  Return
    8:  End
}

#new:Stage $Stage_80224B40
{
	$ASCII_80228000  % trd_tex
	$ASCII_80227FF0  % trd_bt05_shape
	$ASCII_80227FE0  % trd_bt05_hit
	$Script_BeforeBattle_80224A24
	$Script_AfterBattle_80224B30
	$ASCII_80227FD8  % nok_bg
	00000000
	00000000
	00000000
	00000000
}

PADDING: 80224B68 to 80224B70 (004ADC08 to 004ADC10)
00000000 00000000

#new:Script $Script_BeforeBattle_80224B70
{
    0:  Call  SetSpriteShading  ( FFFFFFFF )
   10:  Call  SetCamBGColor     ( .Cam:Battle  0`  0`  0` )
   2C:  Return
   34:  End
}

#new:Script $Script_AfterBattle_80224BAC
{
    0:  Return
    8:  End
}

#new:ForegroundModelList $ForegroundModelList_80224BBC
{
	~Model:trd_bt00:p1
	00000000
}

#new:Stage $Stage_80224BC4
{
	$ASCII_80228028  % trd_tex
	$ASCII_80228018  % trd_bt00_shape
	$ASCII_80228008  % trd_bt00_hit
	$Script_BeforeBattle_80224B70
	$Script_AfterBattle_80224BAC
	00000000
	$ForegroundModelList_80224BBC
	00000000
	00000000
	00000000
}

PADDING: 80224BEC to 80224BF0 (004ADC8C to 004ADC90)
00000000

#new:Script $Script_BeforeBattle_80224BF0
{
    0:  Call  SetSpriteShading  ( FFFFFFFF )
   10:  Call  SetCamBGColor ( .Cam:Battle  0`  0`  0` )
   2C:  Call  EnableModel   ( ~Model:trd_bt02:dai .False )
   40:  Call  EnableModel   ( ~Model:trd_bt02:kusari1 .False )
   54:  Return
   5C:  End
}

#new:Script $Script_AfterBattle_80224C54
{
    0:  Return
    8:  End
}

#new:ForegroundModelList $ForegroundModelList_80224C64
{
	~Model:trd_bt02:saku
	00000000
}

#new:Stage $Stage_80224C6C
{
	$ASCII_80228050  % trd_tex
	$ASCII_80228040  % trd_bt02_shape
	$ASCII_80228030  % trd_bt02_hit
	$Script_BeforeBattle_80224BF0
	$Script_AfterBattle_80224C54
	00000000
	$ForegroundModelList_80224C64
	00000000
	00000000
	00000000
}

PADDING: 80224C94 to 80224CA0 (004ADD34 to 004ADD40)
00000000 00000000 00000000

% Origin: HEURISTIC
#new:Script $Script_80224CA0
{
    0:  Set   *VarA  *Var0
   10:  Label  0
   1C:  Call  RotateGroup   ( *VarA 00000002 00000000 00000000 00000001 )
   3C:  Wait  5`
   48:  Call  RotateGroup   ( *VarA 00000001 00000000 00000000 00000001 )
   68:  Wait  5`
   74:  Call  RotateGroup   ( *VarA FFFFFFFE 00000000 00000000 00000001 )
   94:  Wait  5`
   A0:  Call  RotateGroup   ( *VarA 00000001 00000000 00000000 00000001 )
   C0:  Wait  5`
   CC:  Call  RandInt       ( 0000001E *Var0 )
   E0:  Add   *Var0  0000001E
   F0:  Wait  *Var0
   FC:  Goto  0
  108:  Return
  110:  End
}

% Origin: HEURISTIC
#new:Script $Script_80224DB8
{
    0:  Set   *VarA  *Var0
   10:  Loop
   1C:  	Call  TranslateModel    ( *VarA 00000001 00000000 00000000 )
   38:  	Wait  2`
   44:  	Call  TranslateModel    ( *VarA 00000001 00000000 00000000 )
   60:  	Wait  1`
   6C:  	Call  TranslateModel    ( *VarA 00000001 *Fixed[-0.5] 00000000 )
   88:  	Wait  1`
   94:  	Call  TranslateModel    ( *VarA 00000001 FFFFFFFF 00000000 )
   B0:  	Wait  1`
   BC:  	Call  TranslateModel    ( *VarA *Fixed[1.5] FFFFFFFF 00000000 )
   D8:  	Wait  1`
   E4:  	Call  TranslateModel    ( *VarA 00000002 FFFFFFFF 00000000 )
  100:  	Wait  2`
  10C:  	Call  TranslateModel    ( *VarA 00000002 FFFFFFFF 00000000 )
  128:  	Wait  2`
  134:  	Call  TranslateModel    ( *VarA 00000002 FFFFFFFF 00000000 )
  150:  	Wait  1`
  15C:  	Call  TranslateModel    ( *VarA *Fixed[2.5] *Fixed[-1.5] 00000000 )
  178:  	Wait  1`
  184:  	Call  TranslateModel    ( *VarA 00000003 FFFFFFFE 00000000 )
  1A0:  	Wait  2`
  1AC:  	Call  TranslateModel    ( *VarA 00000003 FFFFFFFE 00000000 )
  1C8:  	Wait  1`
  1D4:  	Call  TranslateModel    ( *VarA 00000003 *Fixed[-2.5] 00000000 )
  1F0:  	Wait  1`
  1FC:  	Call  TranslateModel    ( *VarA 00000003 FFFFFFFD 00000000 )
  218:  	Wait  2`
  224:  	Call  TranslateModel    ( *VarA 00000003 FFFFFFFD 00000000 )
  240:  	Wait  2`
  24C:  	Call  TranslateModel    ( *VarA 00000003 FFFFFFFD 00000000 )
  268:  	Wait  1`
  274:  	Call  TranslateModel    ( *VarA 00000003 *Fixed[-2.5] 00000000 )
  290:  	Wait  1`
  29C:  	Call  TranslateModel    ( *VarA 00000003 FFFFFFFE 00000000 )
  2B8:  	Wait  1`
  2C4:  	Call  TranslateModel    ( *VarA *Fixed[2.5] FFFFFFFE 00000000 )
  2E0:  	Wait  1`
  2EC:  	Call  TranslateModel    ( *VarA 00000002 FFFFFFFE 00000000 )
  308:  	Wait  1`
  314:  	Call  TranslateModel    ( *VarA 00000002 *Fixed[-1.5] 00000000 )
  330:  	Wait  1`
  33C:  	Call  TranslateModel    ( *VarA 00000002 FFFFFFFF 00000000 )
  358:  	Wait  1`
  364:  	Call  TranslateModel    ( *VarA *Fixed[1.5] *Fixed[-0.5] 00000000 )
  380:  	Wait  1`
  38C:  	Call  TranslateModel    ( *VarA 00000001 00000000 00000000 )
  3A8:  	Wait  1`
  3B4:  	Call  TranslateModel    ( *VarA 00000001 *Fixed[0.5] 00000000 )
  3D0:  	Wait  1`
  3DC:  	Call  TranslateModel    ( *VarA 00000001 00000001 00000000 )
  3F8:  	Wait  1`
  404:  	Call  TranslateModel    ( *VarA *Fixed[0.5] 00000001 00000000 )
  420:  	Wait  1`
  42C:  	Call  TranslateModel    ( *VarA 00000000 00000001 00000000 )
  448:  	Wait  1`
  454:  	Call  TranslateModel    ( *VarA *Fixed[-0.5] 00000001 00000000 )
  470:  	Wait  1`
  47C:  	Call  TranslateModel    ( *VarA FFFFFFFF 00000001 00000000 )
  498:  	Wait  2`
  4A4:  	Call  TranslateModel    ( *VarA FFFFFFFF 00000001 00000000 )
  4C0:  	Wait  1`
  4CC:  	Call  TranslateModel    ( *VarA FFFFFFFF *Fixed[0.5] 00000000 )
  4E8:  	Wait  1`
  4F4:  	Call  TranslateModel    ( *VarA FFFFFFFF 00000000 00000000 )
  510:  	Wait  2`
  51C:  	Call  TranslateModel    ( *VarA FFFFFFFF 00000000 00000000 )
  538:  	Wait  1`
  544:  	Call  TranslateModel    ( *VarA *Fixed[-0.5] 00000000 00000000 )
  560:  	Wait  1`
  56C:  	Call  TranslateModel    ( *VarA 00000000 00000000 00000000 )
  588:  	Wait  2`
  594:  EndLoop
  59C:  Return
  5A4:  End
}

#new:Script $Script_BeforeBattle_80225364
{
    0:  Call  SetSpriteShading  ( FFFFFFFF )
   10:  Call  SetCamBGColor ( .Cam:Battle  0`  0`  0` )
   2C:  Call  EnableModel   ( ~Model:trd_bt02:mizu .False )
   40:  Call  EnableModel   ( ~Model:trd_bt02:mizu2 .False )
   54:  Call  EnableModel   ( ~Model:trd_bt02:o298 .False )
   68:  Call  EnableModel   ( ~Model:trd_bt02:o297 .False )
   7C:  Call  EnableModel   ( ~Model:trd_bt02:kiwa .False )
   90:  Call  EnableModel   ( ~Model:trd_bt02:tyuu .False )
   A4:  Return
   AC:  End
}

#new:Script $Script_AfterBattle_80225418
{
    0:  Return
    8:  End
}

#new:ForegroundModelList $ForegroundModelList_80225428
{
	~Model:trd_bt02:saku
	00000000
}

#new:Stage $Stage_80225430
{
	$ASCII_80228078  % trd_tex
	$ASCII_80228068  % trd_bt02_shape
	$ASCII_80228058  % trd_bt02_hit
	$Script_BeforeBattle_80225364
	$Script_AfterBattle_80225418
	00000000
	$ForegroundModelList_80225428
	00000000
	00000000
	00000000
}

PADDING: 80225458 to 80225460 (004AE4F8 to 004AE500)
00000000 00000000

% Origin: HEURISTIC
#new:Script $Script_80225460
{
    0:  Set   *VarA  *Var0
   10:  Label  0
   1C:  Call  RotateGroup   ( *VarA 00000002 00000000 00000000 00000001 )
   3C:  Wait  5`
   48:  Call  RotateGroup   ( *VarA 00000001 00000000 00000000 00000001 )
   68:  Wait  5`
   74:  Call  RotateGroup   ( *VarA FFFFFFFE 00000000 00000000 00000001 )
   94:  Wait  5`
   A0:  Call  RotateGroup   ( *VarA 00000001 00000000 00000000 00000001 )
   C0:  Wait  5`
   CC:  Call  RandInt       ( 0000001E *Var0 )
   E0:  Add   *Var0  0000001E
   F0:  Wait  *Var0
   FC:  Goto  0
  108:  Return
  110:  End
}

% Origin: HEURISTIC
#new:Script $Script_80225578
{
    0:  Set   *VarA  *Var0
   10:  Loop
   1C:  	Call  TranslateModel    ( *VarA 00000001 00000000 00000000 )
   38:  	Wait  2`
   44:  	Call  TranslateModel    ( *VarA 00000001 00000000 00000000 )
   60:  	Wait  1`
   6C:  	Call  TranslateModel    ( *VarA 00000001 *Fixed[-0.5] 00000000 )
   88:  	Wait  1`
   94:  	Call  TranslateModel    ( *VarA 00000001 FFFFFFFF 00000000 )
   B0:  	Wait  1`
   BC:  	Call  TranslateModel    ( *VarA *Fixed[1.5] FFFFFFFF 00000000 )
   D8:  	Wait  1`
   E4:  	Call  TranslateModel    ( *VarA 00000002 FFFFFFFF 00000000 )
  100:  	Wait  2`
  10C:  	Call  TranslateModel    ( *VarA 00000002 FFFFFFFF 00000000 )
  128:  	Wait  2`
  134:  	Call  TranslateModel    ( *VarA 00000002 FFFFFFFF 00000000 )
  150:  	Wait  1`
  15C:  	Call  TranslateModel    ( *VarA *Fixed[2.5] *Fixed[-1.5] 00000000 )
  178:  	Wait  1`
  184:  	Call  TranslateModel    ( *VarA 00000003 FFFFFFFE 00000000 )
  1A0:  	Wait  2`
  1AC:  	Call  TranslateModel    ( *VarA 00000003 FFFFFFFE 00000000 )
  1C8:  	Wait  1`
  1D4:  	Call  TranslateModel    ( *VarA 00000003 *Fixed[-2.5] 00000000 )
  1F0:  	Wait  1`
  1FC:  	Call  TranslateModel    ( *VarA 00000003 FFFFFFFD 00000000 )
  218:  	Wait  2`
  224:  	Call  TranslateModel    ( *VarA 00000003 FFFFFFFD 00000000 )
  240:  	Wait  2`
  24C:  	Call  TranslateModel    ( *VarA 00000003 FFFFFFFD 00000000 )
  268:  	Wait  1`
  274:  	Call  TranslateModel    ( *VarA 00000003 *Fixed[-2.5] 00000000 )
  290:  	Wait  1`
  29C:  	Call  TranslateModel    ( *VarA 00000003 FFFFFFFE 00000000 )
  2B8:  	Wait  1`
  2C4:  	Call  TranslateModel    ( *VarA *Fixed[2.5] FFFFFFFE 00000000 )
  2E0:  	Wait  1`
  2EC:  	Call  TranslateModel    ( *VarA 00000002 FFFFFFFE 00000000 )
  308:  	Wait  1`
  314:  	Call  TranslateModel    ( *VarA 00000002 *Fixed[-1.5] 00000000 )
  330:  	Wait  1`
  33C:  	Call  TranslateModel    ( *VarA 00000002 FFFFFFFF 00000000 )
  358:  	Wait  1`
  364:  	Call  TranslateModel    ( *VarA *Fixed[1.5] *Fixed[-0.5] 00000000 )
  380:  	Wait  1`
  38C:  	Call  TranslateModel    ( *VarA 00000001 00000000 00000000 )
  3A8:  	Wait  1`
  3B4:  	Call  TranslateModel    ( *VarA 00000001 *Fixed[0.5] 00000000 )
  3D0:  	Wait  1`
  3DC:  	Call  TranslateModel    ( *VarA 00000001 00000001 00000000 )
  3F8:  	Wait  1`
  404:  	Call  TranslateModel    ( *VarA *Fixed[0.5] 00000001 00000000 )
  420:  	Wait  1`
  42C:  	Call  TranslateModel    ( *VarA 00000000 00000001 00000000 )
  448:  	Wait  1`
  454:  	Call  TranslateModel    ( *VarA *Fixed[-0.5] 00000001 00000000 )
  470:  	Wait  1`
  47C:  	Call  TranslateModel    ( *VarA FFFFFFFF 00000001 00000000 )
  498:  	Wait  2`
  4A4:  	Call  TranslateModel    ( *VarA FFFFFFFF 00000001 00000000 )
  4C0:  	Wait  1`
  4CC:  	Call  TranslateModel    ( *VarA FFFFFFFF *Fixed[0.5] 00000000 )
  4E8:  	Wait  1`
  4F4:  	Call  TranslateModel    ( *VarA FFFFFFFF 00000000 00000000 )
  510:  	Wait  2`
  51C:  	Call  TranslateModel    ( *VarA FFFFFFFF 00000000 00000000 )
  538:  	Wait  1`
  544:  	Call  TranslateModel    ( *VarA *Fixed[-0.5] 00000000 00000000 )
  560:  	Wait  1`
  56C:  	Call  TranslateModel    ( *VarA 00000000 00000000 00000000 )
  588:  	Wait  2`
  594:  EndLoop
  59C:  Return
  5A4:  End
}

#new:Script $Script_BeforeBattle_80225B24
{
    0:  Call  SetSpriteShading  ( FFFFFFFF )
   10:  Call  SetCamBGColor ( .Cam:Battle  0`  0`  0` )
   2C:  Call  EnableModel   ( ~Model:trd_bt05:kai .False )
   40:  Call  EnableModel   ( ~Model:trd_bt05:kusari1 .False )
   54:  Call  EnableModel   ( ~Model:trd_bt05:mizu1 .False )
   68:  Call  EnableModel   ( ~Model:trd_bt05:mizu2 .False )
   7C:  Call  EnableModel   ( ~Model:trd_bt05:mizu3 .False )
   90:  Call  EnableModel   ( ~Model:trd_bt05:ori .False )
   A4:  Call  EnableModel   ( ~Model:trd_bt05:saku1 .False )
   B8:  Call  EnableModel   ( ~Model:trd_bt05:saku2 .False )
   CC:  Call  EnableModel   ( ~Model:trd_bt05:mizu4 .False )
   E0:  Call  EnableModel   ( ~Model:trd_bt05:o318 .False )
   F4:  Return
   FC:  End
}

#new:Script $Script_AfterBattle_80225C28
{
    0:  Return
    8:  End
}

#new:Stage $Stage_80225C38
{
	$ASCII_802280A0  % trd_tex
	$ASCII_80228090  % trd_bt05_shape
	$ASCII_80228080  % trd_bt05_hit
	$Script_BeforeBattle_80225B24
	$Script_AfterBattle_80225C28
	00000000
	00000000
	00000000
	00000000
	00000000
}

% Origin: HEURISTIC
#new:Script $Script_80225C60
{
    0:  Set   *VarA  *Var0
   10:  Label  0
   1C:  Call  RotateGroup   ( *VarA 00000002 00000000 00000000 00000001 )
   3C:  Wait  5`
   48:  Call  RotateGroup   ( *VarA 00000001 00000000 00000000 00000001 )
   68:  Wait  5`
   74:  Call  RotateGroup   ( *VarA FFFFFFFE 00000000 00000000 00000001 )
   94:  Wait  5`
   A0:  Call  RotateGroup   ( *VarA 00000001 00000000 00000000 00000001 )
   C0:  Wait  5`
   CC:  Call  RandInt       ( 0000001E *Var0 )
   E0:  Add   *Var0  0000001E
   F0:  Wait  *Var0
   FC:  Goto  0
  108:  Return
  110:  End
}

#new:Script $Script_80225D78
{
    0:  Set   *VarA  *Var0
   10:  Loop
   1C:  	Call  TranslateModel    ( *VarA 00000001 00000000 00000000 )
   38:  	Wait  2`
   44:  	Call  TranslateModel    ( *VarA 00000001 00000000 00000000 )
   60:  	Wait  1`
   6C:  	Call  TranslateModel    ( *VarA 00000001 *Fixed[-0.5] 00000000 )
   88:  	Wait  1`
   94:  	Call  TranslateModel    ( *VarA 00000001 FFFFFFFF 00000000 )
   B0:  	Wait  1`
   BC:  	Call  TranslateModel    ( *VarA *Fixed[1.5] FFFFFFFF 00000000 )
   D8:  	Wait  1`
   E4:  	Call  TranslateModel    ( *VarA 00000002 FFFFFFFF 00000000 )
  100:  	Wait  2`
  10C:  	Call  TranslateModel    ( *VarA 00000002 FFFFFFFF 00000000 )
  128:  	Wait  2`
  134:  	Call  TranslateModel    ( *VarA 00000002 FFFFFFFF 00000000 )
  150:  	Wait  1`
  15C:  	Call  TranslateModel    ( *VarA *Fixed[2.5] *Fixed[-1.5] 00000000 )
  178:  	Wait  1`
  184:  	Call  TranslateModel    ( *VarA 00000003 FFFFFFFE 00000000 )
  1A0:  	Wait  2`
  1AC:  	Call  TranslateModel    ( *VarA 00000003 FFFFFFFE 00000000 )
  1C8:  	Wait  1`
  1D4:  	Call  TranslateModel    ( *VarA 00000003 *Fixed[-2.5] 00000000 )
  1F0:  	Wait  1`
  1FC:  	Call  TranslateModel    ( *VarA 00000003 FFFFFFFD 00000000 )
  218:  	Wait  2`
  224:  	Call  TranslateModel    ( *VarA 00000003 FFFFFFFD 00000000 )
  240:  	Wait  2`
  24C:  	Call  TranslateModel    ( *VarA 00000003 FFFFFFFD 00000000 )
  268:  	Wait  1`
  274:  	Call  TranslateModel    ( *VarA 00000003 *Fixed[-2.5] 00000000 )
  290:  	Wait  1`
  29C:  	Call  TranslateModel    ( *VarA 00000003 FFFFFFFE 00000000 )
  2B8:  	Wait  1`
  2C4:  	Call  TranslateModel    ( *VarA *Fixed[2.5] FFFFFFFE 00000000 )
  2E0:  	Wait  1`
  2EC:  	Call  TranslateModel    ( *VarA 00000002 FFFFFFFE 00000000 )
  308:  	Wait  1`
  314:  	Call  TranslateModel    ( *VarA 00000002 *Fixed[-1.5] 00000000 )
  330:  	Wait  1`
  33C:  	Call  TranslateModel    ( *VarA 00000002 FFFFFFFF 00000000 )
  358:  	Wait  1`
  364:  	Call  TranslateModel    ( *VarA *Fixed[1.5] *Fixed[-0.5] 00000000 )
  380:  	Wait  1`
  38C:  	Call  TranslateModel    ( *VarA 00000001 00000000 00000000 )
  3A8:  	Wait  1`
  3B4:  	Call  TranslateModel    ( *VarA 00000001 *Fixed[0.5] 00000000 )
  3D0:  	Wait  1`
  3DC:  	Call  TranslateModel    ( *VarA 00000001 00000001 00000000 )
  3F8:  	Wait  1`
  404:  	Call  TranslateModel    ( *VarA *Fixed[0.5] 00000001 00000000 )
  420:  	Wait  1`
  42C:  	Call  TranslateModel    ( *VarA 00000000 00000001 00000000 )
  448:  	Wait  1`
  454:  	Call  TranslateModel    ( *VarA *Fixed[-0.5] 00000001 00000000 )
  470:  	Wait  1`
  47C:  	Call  TranslateModel    ( *VarA FFFFFFFF 00000001 00000000 )
  498:  	Wait  2`
  4A4:  	Call  TranslateModel    ( *VarA FFFFFFFF 00000001 00000000 )
  4C0:  	Wait  1`
  4CC:  	Call  TranslateModel    ( *VarA FFFFFFFF *Fixed[0.5] 00000000 )
  4E8:  	Wait  1`
  4F4:  	Call  TranslateModel    ( *VarA FFFFFFFF 00000000 00000000 )
  510:  	Wait  2`
  51C:  	Call  TranslateModel    ( *VarA FFFFFFFF 00000000 00000000 )
  538:  	Wait  1`
  544:  	Call  TranslateModel    ( *VarA *Fixed[-0.5] 00000000 00000000 )
  560:  	Wait  1`
  56C:  	Call  TranslateModel    ( *VarA 00000000 00000000 00000000 )
  588:  	Wait  2`
  594:  EndLoop
  59C:  Return
  5A4:  End
}

#new:Script $Script_BeforeBattle_80226324
{
    0:  Call  SetSpriteShading  ( FFFFFFFF )
   10:  Call  SetCamBGColor ( .Cam:Battle  0`  0`  0` )
   2C:  Call  EnableModel   ( ~Model:trd_bt05:yuka3 .False )
   40:  Call  EnableModel   ( ~Model:trd_bt05:hako .False )
   54:  Call  EnableModel   ( ~Model:trd_bt05:ori .False )
   68:  Call  EnableModel   ( ~Model:trd_bt05:saku1 .False )
   7C:  Call  EnableModel   ( ~Model:trd_bt05:saku2 .False )
   90:  Call  EnableModel   ( ~Model:trd_bt05:mizu4 .False )
   A4:  Set   *Var0  0000001B
   B4:  Exec  $Script_80225D78
   C0:  Thread
   C8:  	Set   *Var0  00000006
   D8:  	Exec  $Script_80225D78
   E4:  	Wait  5`
   F0:  	Set   *Var0  00000004
  100:  	Exec  $Script_80225D78
  10C:  	Wait  5`
  118:  	Set   *Var0  00000002
  128:  	Exec  $Script_80225D78
  134:  EndThread
  13C:  Return
  144:  End
}

#new:Script $Script_AfterBattle_80226470
{
    0:  Return
    8:  End
}

#new:Stage $Stage_80226480
{
	$ASCII_802280C8  % trd_tex
	$ASCII_802280B8  % trd_bt05_shape
	$ASCII_802280A8  % trd_bt05_hit
	$Script_BeforeBattle_80226324
	$Script_AfterBattle_80226470
	00000000
	00000000
	00000000
	00000000
	00000000
}

PADDING: 802264A8 to 802264B0 (004AF548 to 004AF550)
00000000 00000000

% Origin: HEURISTIC
#new:Script $Script_802264B0
{
    0:  Set   *VarA  *Var0
   10:  Label  0
   1C:  Call  RotateGroup   ( *VarA 00000002 00000000 00000000 00000001 )
   3C:  Wait  5`
   48:  Call  RotateGroup   ( *VarA 00000001 00000000 00000000 00000001 )
   68:  Wait  5`
   74:  Call  RotateGroup   ( *VarA FFFFFFFE 00000000 00000000 00000001 )
   94:  Wait  5`
   A0:  Call  RotateGroup   ( *VarA 00000001 00000000 00000000 00000001 )
   C0:  Wait  5`
   CC:  Call  RandInt       ( 0000001E *Var0 )
   E0:  Add   *Var0  0000001E
   F0:  Wait  *Var0
   FC:  Goto  0
  108:  Return
  110:  End
}

#new:Script $Script_802265C8
{
    0:  Set   *VarA  *Var0
   10:  Loop
   1C:  	Call  TranslateModel    ( *VarA 00000001 00000000 00000000 )
   38:  	Wait  2`
   44:  	Call  TranslateModel    ( *VarA 00000001 00000000 00000000 )
   60:  	Wait  1`
   6C:  	Call  TranslateModel    ( *VarA 00000001 *Fixed[-0.5] 00000000 )
   88:  	Wait  1`
   94:  	Call  TranslateModel    ( *VarA 00000001 FFFFFFFF 00000000 )
   B0:  	Wait  1`
   BC:  	Call  TranslateModel    ( *VarA *Fixed[1.5] FFFFFFFF 00000000 )
   D8:  	Wait  1`
   E4:  	Call  TranslateModel    ( *VarA 00000002 FFFFFFFF 00000000 )
  100:  	Wait  2`
  10C:  	Call  TranslateModel    ( *VarA 00000002 FFFFFFFF 00000000 )
  128:  	Wait  2`
  134:  	Call  TranslateModel    ( *VarA 00000002 FFFFFFFF 00000000 )
  150:  	Wait  1`
  15C:  	Call  TranslateModel    ( *VarA *Fixed[2.5] *Fixed[-1.5] 00000000 )
  178:  	Wait  1`
  184:  	Call  TranslateModel    ( *VarA 00000003 FFFFFFFE 00000000 )
  1A0:  	Wait  2`
  1AC:  	Call  TranslateModel    ( *VarA 00000003 FFFFFFFE 00000000 )
  1C8:  	Wait  1`
  1D4:  	Call  TranslateModel    ( *VarA 00000003 *Fixed[-2.5] 00000000 )
  1F0:  	Wait  1`
  1FC:  	Call  TranslateModel    ( *VarA 00000003 FFFFFFFD 00000000 )
  218:  	Wait  2`
  224:  	Call  TranslateModel    ( *VarA 00000003 FFFFFFFD 00000000 )
  240:  	Wait  2`
  24C:  	Call  TranslateModel    ( *VarA 00000003 FFFFFFFD 00000000 )
  268:  	Wait  1`
  274:  	Call  TranslateModel    ( *VarA 00000003 *Fixed[-2.5] 00000000 )
  290:  	Wait  1`
  29C:  	Call  TranslateModel    ( *VarA 00000003 FFFFFFFE 00000000 )
  2B8:  	Wait  1`
  2C4:  	Call  TranslateModel    ( *VarA *Fixed[2.5] FFFFFFFE 00000000 )
  2E0:  	Wait  1`
  2EC:  	Call  TranslateModel    ( *VarA 00000002 FFFFFFFE 00000000 )
  308:  	Wait  1`
  314:  	Call  TranslateModel    ( *VarA 00000002 *Fixed[-1.5] 00000000 )
  330:  	Wait  1`
  33C:  	Call  TranslateModel    ( *VarA 00000002 FFFFFFFF 00000000 )
  358:  	Wait  1`
  364:  	Call  TranslateModel    ( *VarA *Fixed[1.5] *Fixed[-0.5] 00000000 )
  380:  	Wait  1`
  38C:  	Call  TranslateModel    ( *VarA 00000001 00000000 00000000 )
  3A8:  	Wait  1`
  3B4:  	Call  TranslateModel    ( *VarA 00000001 *Fixed[0.5] 00000000 )
  3D0:  	Wait  1`
  3DC:  	Call  TranslateModel    ( *VarA 00000001 00000001 00000000 )
  3F8:  	Wait  1`
  404:  	Call  TranslateModel    ( *VarA *Fixed[0.5] 00000001 00000000 )
  420:  	Wait  1`
  42C:  	Call  TranslateModel    ( *VarA 00000000 00000001 00000000 )
  448:  	Wait  1`
  454:  	Call  TranslateModel    ( *VarA *Fixed[-0.5] 00000001 00000000 )
  470:  	Wait  1`
  47C:  	Call  TranslateModel    ( *VarA FFFFFFFF 00000001 00000000 )
  498:  	Wait  2`
  4A4:  	Call  TranslateModel    ( *VarA FFFFFFFF 00000001 00000000 )
  4C0:  	Wait  1`
  4CC:  	Call  TranslateModel    ( *VarA FFFFFFFF *Fixed[0.5] 00000000 )
  4E8:  	Wait  1`
  4F4:  	Call  TranslateModel    ( *VarA FFFFFFFF 00000000 00000000 )
  510:  	Wait  2`
  51C:  	Call  TranslateModel    ( *VarA FFFFFFFF 00000000 00000000 )
  538:  	Wait  1`
  544:  	Call  TranslateModel    ( *VarA *Fixed[-0.5] 00000000 00000000 )
  560:  	Wait  1`
  56C:  	Call  TranslateModel    ( *VarA 00000000 00000000 00000000 )
  588:  	Wait  2`
  594:  EndLoop
  59C:  Return
  5A4:  End
}

#new:Script $Script_BeforeBattle_80226B74
{
    0:  Call  SetSpriteShading  ( FFFFFFFF )
   10:  Call  SetCamBGColor ( .Cam:Battle  0`  0`  0` )
   2C:  Call  EnableModel   ( ~Model:trd_bt05:yuka3 .False )
   40:  Call  EnableModel   ( ~Model:trd_bt05:hako .False )
   54:  Call  EnableModel   ( ~Model:trd_bt05:kai .False )
   68:  Call  EnableModel   ( ~Model:trd_bt05:kusari1 .False )
   7C:  Call  EnableModel   ( ~Model:trd_bt05:mizu4 .False )
   90:  Call  EnableModel   ( ~Model:trd_bt05:hikari2 .False )
   A4:  Call  EnableModel   ( ~Model:trd_bt05:o318 .False )
   B8:  Thread
   C0:  	Set   *Var0  00000006
   D0:  	Exec  $Script_802265C8
   DC:  	Wait  5`
   E8:  	Set   *Var0  00000004
   F8:  	Exec  $Script_802265C8
  104:  	Wait  5`
  110:  	Set   *Var0  00000002
  120:  	Exec  $Script_802265C8
  12C:  EndThread
  134:  Return
  13C:  End
}

#new:Script $Script_AfterBattle_80226CB8
{
    0:  Return
    8:  End
}

#new:Stage $Stage_80226CC8
{
	$ASCII_802280F0  % trd_tex
	$ASCII_802280E0  % trd_bt05_shape
	$ASCII_802280D0  % trd_bt05_hit
	$Script_BeforeBattle_80226B74
	$Script_AfterBattle_80226CB8
	00000000
	00000000
	00000000
	00000000
	00000000
}

% Origin: HEURISTIC
#new:Script $Script_80226CF0
{
    0:  Set   *VarA  *Var0
   10:  Label  0
   1C:  Call  RotateGroup   ( *VarA 00000002 00000000 00000000 00000001 )
   3C:  Wait  5`
   48:  Call  RotateGroup   ( *VarA 00000001 00000000 00000000 00000001 )
   68:  Wait  5`
   74:  Call  RotateGroup   ( *VarA FFFFFFFE 00000000 00000000 00000001 )
   94:  Wait  5`
   A0:  Call  RotateGroup   ( *VarA 00000001 00000000 00000000 00000001 )
   C0:  Wait  5`
   CC:  Call  RandInt       ( 0000001E *Var0 )
   E0:  Add   *Var0  0000001E
   F0:  Wait  *Var0
   FC:  Goto  0
  108:  Return
  110:  End
}

% Origin: HEURISTIC
#new:Script $Script_80226E08
{
    0:  Set   *VarA  *Var0
   10:  Loop
   1C:  	Call  TranslateModel    ( *VarA 00000001 00000000 00000000 )
   38:  	Wait  2`
   44:  	Call  TranslateModel    ( *VarA 00000001 00000000 00000000 )
   60:  	Wait  1`
   6C:  	Call  TranslateModel    ( *VarA 00000001 *Fixed[-0.5] 00000000 )
   88:  	Wait  1`
   94:  	Call  TranslateModel    ( *VarA 00000001 FFFFFFFF 00000000 )
   B0:  	Wait  1`
   BC:  	Call  TranslateModel    ( *VarA *Fixed[1.5] FFFFFFFF 00000000 )
   D8:  	Wait  1`
   E4:  	Call  TranslateModel    ( *VarA 00000002 FFFFFFFF 00000000 )
  100:  	Wait  2`
  10C:  	Call  TranslateModel    ( *VarA 00000002 FFFFFFFF 00000000 )
  128:  	Wait  2`
  134:  	Call  TranslateModel    ( *VarA 00000002 FFFFFFFF 00000000 )
  150:  	Wait  1`
  15C:  	Call  TranslateModel    ( *VarA *Fixed[2.5] *Fixed[-1.5] 00000000 )
  178:  	Wait  1`
  184:  	Call  TranslateModel    ( *VarA 00000003 FFFFFFFE 00000000 )
  1A0:  	Wait  2`
  1AC:  	Call  TranslateModel    ( *VarA 00000003 FFFFFFFE 00000000 )
  1C8:  	Wait  1`
  1D4:  	Call  TranslateModel    ( *VarA 00000003 *Fixed[-2.5] 00000000 )
  1F0:  	Wait  1`
  1FC:  	Call  TranslateModel    ( *VarA 00000003 FFFFFFFD 00000000 )
  218:  	Wait  2`
  224:  	Call  TranslateModel    ( *VarA 00000003 FFFFFFFD 00000000 )
  240:  	Wait  2`
  24C:  	Call  TranslateModel    ( *VarA 00000003 FFFFFFFD 00000000 )
  268:  	Wait  1`
  274:  	Call  TranslateModel    ( *VarA 00000003 *Fixed[-2.5] 00000000 )
  290:  	Wait  1`
  29C:  	Call  TranslateModel    ( *VarA 00000003 FFFFFFFE 00000000 )
  2B8:  	Wait  1`
  2C4:  	Call  TranslateModel    ( *VarA *Fixed[2.5] FFFFFFFE 00000000 )
  2E0:  	Wait  1`
  2EC:  	Call  TranslateModel    ( *VarA 00000002 FFFFFFFE 00000000 )
  308:  	Wait  1`
  314:  	Call  TranslateModel    ( *VarA 00000002 *Fixed[-1.5] 00000000 )
  330:  	Wait  1`
  33C:  	Call  TranslateModel    ( *VarA 00000002 FFFFFFFF 00000000 )
  358:  	Wait  1`
  364:  	Call  TranslateModel    ( *VarA *Fixed[1.5] *Fixed[-0.5] 00000000 )
  380:  	Wait  1`
  38C:  	Call  TranslateModel    ( *VarA 00000001 00000000 00000000 )
  3A8:  	Wait  1`
  3B4:  	Call  TranslateModel    ( *VarA 00000001 *Fixed[0.5] 00000000 )
  3D0:  	Wait  1`
  3DC:  	Call  TranslateModel    ( *VarA 00000001 00000001 00000000 )
  3F8:  	Wait  1`
  404:  	Call  TranslateModel    ( *VarA *Fixed[0.5] 00000001 00000000 )
  420:  	Wait  1`
  42C:  	Call  TranslateModel    ( *VarA 00000000 00000001 00000000 )
  448:  	Wait  1`
  454:  	Call  TranslateModel    ( *VarA *Fixed[-0.5] 00000001 00000000 )
  470:  	Wait  1`
  47C:  	Call  TranslateModel    ( *VarA FFFFFFFF 00000001 00000000 )
  498:  	Wait  2`
  4A4:  	Call  TranslateModel    ( *VarA FFFFFFFF 00000001 00000000 )
  4C0:  	Wait  1`
  4CC:  	Call  TranslateModel    ( *VarA FFFFFFFF *Fixed[0.5] 00000000 )
  4E8:  	Wait  1`
  4F4:  	Call  TranslateModel    ( *VarA FFFFFFFF 00000000 00000000 )
  510:  	Wait  2`
  51C:  	Call  TranslateModel    ( *VarA FFFFFFFF 00000000 00000000 )
  538:  	Wait  1`
  544:  	Call  TranslateModel    ( *VarA *Fixed[-0.5] 00000000 00000000 )
  560:  	Wait  1`
  56C:  	Call  TranslateModel    ( *VarA 00000000 00000000 00000000 )
  588:  	Wait  2`
  594:  EndLoop
  59C:  Return
  5A4:  End
}

#new:Script $Script_BeforeBattle_802273B4
{
    0:  Call  SetSpriteShading  ( FFFFFFFF )
   10:  Call  SetCamBGColor ( .Cam:Battle  0`  0`  0` )
   2C:  Call  EnableModel   ( ~Model:trd_bt05:o318 .False )
   40:  Call  EnableModel   ( ~Model:trd_bt05:mizu1 .False )
   54:  Call  EnableModel   ( ~Model:trd_bt05:mizu2 .False )
   68:  Call  EnableModel   ( ~Model:trd_bt05:mizu3 .False )
   7C:  Call  EnableModel   ( ~Model:trd_bt05:ori .False )
   90:  Call  EnableModel   ( ~Model:trd_bt05:saku1 .False )
   A4:  Call  EnableModel   ( ~Model:trd_bt05:saku2 .False )
   B8:  Call  EnableModel   ( ~Model:trd_bt05:mizu4 .False )
   CC:  Return
   D4:  End
}

#new:Script $Script_AfterBattle_80227490
{
    0:  Return
    8:  End
}

#new:Stage $Stage_802274A0
{
	$ASCII_80228118  % trd_tex
	$ASCII_80228108  % trd_bt05_shape
	$ASCII_802280F8  % trd_bt05_hit
	$Script_BeforeBattle_802273B4
	$Script_AfterBattle_80227490
	00000000
	00000000
	00000000
	00000000
	00000000
}

PADDING: 802274C8 to 802274D0 (004B0568 to 004B0570)
00000000 00000000

% Origin: HEURISTIC
#new:Script $Script_802274D0
{
    0:  Set   *VarA  *Var0
   10:  Label  0
   1C:  Call  RotateGroup   ( *VarA 00000002 00000000 00000000 00000001 )
   3C:  Wait  5`
   48:  Call  RotateGroup   ( *VarA 00000001 00000000 00000000 00000001 )
   68:  Wait  5`
   74:  Call  RotateGroup   ( *VarA FFFFFFFE 00000000 00000000 00000001 )
   94:  Wait  5`
   A0:  Call  RotateGroup   ( *VarA 00000001 00000000 00000000 00000001 )
   C0:  Wait  5`
   CC:  Call  RandInt       ( 0000001E *Var0 )
   E0:  Add   *Var0  0000001E
   F0:  Wait  *Var0
   FC:  Goto  0
  108:  Return
  110:  End
}

#new:Script $Script_802275E8
{
    0:  Set   *VarA  *Var0
   10:  Loop
   1C:  	Call  TranslateModel    ( *VarA 00000001 00000000 00000000 )
   38:  	Wait  2`
   44:  	Call  TranslateModel    ( *VarA 00000001 00000000 00000000 )
   60:  	Wait  1`
   6C:  	Call  TranslateModel    ( *VarA 00000001 *Fixed[-0.5] 00000000 )
   88:  	Wait  1`
   94:  	Call  TranslateModel    ( *VarA 00000001 FFFFFFFF 00000000 )
   B0:  	Wait  1`
   BC:  	Call  TranslateModel    ( *VarA *Fixed[1.5] FFFFFFFF 00000000 )
   D8:  	Wait  1`
   E4:  	Call  TranslateModel    ( *VarA 00000002 FFFFFFFF 00000000 )
  100:  	Wait  2`
  10C:  	Call  TranslateModel    ( *VarA 00000002 FFFFFFFF 00000000 )
  128:  	Wait  2`
  134:  	Call  TranslateModel    ( *VarA 00000002 FFFFFFFF 00000000 )
  150:  	Wait  1`
  15C:  	Call  TranslateModel    ( *VarA *Fixed[2.5] *Fixed[-1.5] 00000000 )
  178:  	Wait  1`
  184:  	Call  TranslateModel    ( *VarA 00000003 FFFFFFFE 00000000 )
  1A0:  	Wait  2`
  1AC:  	Call  TranslateModel    ( *VarA 00000003 FFFFFFFE 00000000 )
  1C8:  	Wait  1`
  1D4:  	Call  TranslateModel    ( *VarA 00000003 *Fixed[-2.5] 00000000 )
  1F0:  	Wait  1`
  1FC:  	Call  TranslateModel    ( *VarA 00000003 FFFFFFFD 00000000 )
  218:  	Wait  2`
  224:  	Call  TranslateModel    ( *VarA 00000003 FFFFFFFD 00000000 )
  240:  	Wait  2`
  24C:  	Call  TranslateModel    ( *VarA 00000003 FFFFFFFD 00000000 )
  268:  	Wait  1`
  274:  	Call  TranslateModel    ( *VarA 00000003 *Fixed[-2.5] 00000000 )
  290:  	Wait  1`
  29C:  	Call  TranslateModel    ( *VarA 00000003 FFFFFFFE 00000000 )
  2B8:  	Wait  1`
  2C4:  	Call  TranslateModel    ( *VarA *Fixed[2.5] FFFFFFFE 00000000 )
  2E0:  	Wait  1`
  2EC:  	Call  TranslateModel    ( *VarA 00000002 FFFFFFFE 00000000 )
  308:  	Wait  1`
  314:  	Call  TranslateModel    ( *VarA 00000002 *Fixed[-1.5] 00000000 )
  330:  	Wait  1`
  33C:  	Call  TranslateModel    ( *VarA 00000002 FFFFFFFF 00000000 )
  358:  	Wait  1`
  364:  	Call  TranslateModel    ( *VarA *Fixed[1.5] *Fixed[-0.5] 00000000 )
  380:  	Wait  1`
  38C:  	Call  TranslateModel    ( *VarA 00000001 00000000 00000000 )
  3A8:  	Wait  1`
  3B4:  	Call  TranslateModel    ( *VarA 00000001 *Fixed[0.5] 00000000 )
  3D0:  	Wait  1`
  3DC:  	Call  TranslateModel    ( *VarA 00000001 00000001 00000000 )
  3F8:  	Wait  1`
  404:  	Call  TranslateModel    ( *VarA *Fixed[0.5] 00000001 00000000 )
  420:  	Wait  1`
  42C:  	Call  TranslateModel    ( *VarA 00000000 00000001 00000000 )
  448:  	Wait  1`
  454:  	Call  TranslateModel    ( *VarA *Fixed[-0.5] 00000001 00000000 )
  470:  	Wait  1`
  47C:  	Call  TranslateModel    ( *VarA FFFFFFFF 00000001 00000000 )
  498:  	Wait  2`
  4A4:  	Call  TranslateModel    ( *VarA FFFFFFFF 00000001 00000000 )
  4C0:  	Wait  1`
  4CC:  	Call  TranslateModel    ( *VarA FFFFFFFF *Fixed[0.5] 00000000 )
  4E8:  	Wait  1`
  4F4:  	Call  TranslateModel    ( *VarA FFFFFFFF 00000000 00000000 )
  510:  	Wait  2`
  51C:  	Call  TranslateModel    ( *VarA FFFFFFFF 00000000 00000000 )
  538:  	Wait  1`
  544:  	Call  TranslateModel    ( *VarA *Fixed[-0.5] 00000000 00000000 )
  560:  	Wait  1`
  56C:  	Call  TranslateModel    ( *VarA 00000000 00000000 00000000 )
  588:  	Wait  2`
  594:  EndLoop
  59C:  Return
  5A4:  End
}

#new:Script $Script_BeforeBattle_80227B94
{
    0:  Call  SetSpriteShading  ( FFFFFFFF )
   10:  Call  SetCamBGColor ( .Cam:Battle  0`  0`  0` )
   2C:  Set   *Var0  0000001B
   3C:  Exec  $Script_802275E8
   48:  Call  EnableModel   ( ~Model:trd_bt05:mizu1 .False )
   5C:  Call  EnableModel   ( ~Model:trd_bt05:mizu2 .False )
   70:  Call  EnableModel   ( ~Model:trd_bt05:mizu3 .False )
   84:  Call  EnableModel   ( ~Model:trd_bt05:ori .False )
   98:  Call  EnableModel   ( ~Model:trd_bt05:saku1 .False )
   AC:  Call  EnableModel   ( ~Model:trd_bt05:saku2 .False )
   C0:  Call  EnableModel   ( ~Model:trd_bt05:mizu4 .False )
   D4:  Call  EnableModel   ( ~Model:trd_bt05:hako .False )
   E8:  Return
   F0:  End
}

#new:Script $Script_AfterBattle_80227C8C
{
    0:  Return
    8:  End
}

#new:Stage $Stage_80227C9C
{
	$ASCII_80228140  % trd_tex
	$ASCII_80228130  % trd_bt05_shape
	$ASCII_80228120  % trd_bt05_hit
	$Script_BeforeBattle_80227B94
	$Script_AfterBattle_80227C8C
	00000000
	00000000
	00000000
	00000000
	00000000
}

PADDING: 80227CC4 to 80227CD0 (004B0D64 to 004B0D70)
00000000 00000000 00000000

#new:SJIS $SJIS_80227CD0
{
	キラーx３ % kira-x3
}

#new:SJIS $SJIS_80227CDC
{
	キラー % kira-
}

#new:SJIS $SJIS_80227CE4
{
	キラーx２ % kira-x2
}

#new:SJIS $SJIS_80227CF0
{
	キラーたいほうx３ % kira-taihoux3
}

#new:SJIS $SJIS_80227D04
{
	ボムへい,ノコノコx2 % bomuhei,nokonokox2
}

#new:SJIS $SJIS_80227D18
{
	ボムへいx2,ノコノコ % bomuheix2,nokonoko
}

#new:SJIS $SJIS_80227D2C
{
	ボムへい,ノコノコ % bomuhei,nokonoko
}

#new:SJIS $SJIS_80227D40
{
	ボムへいx4 % bomuheix4
}

#new:SJIS $SJIS_80227D4C
{
	ボムへいx3 % bomuheix3
}

#new:SJIS $SJIS_80227D58
{
	ボムへいx2 % bomuheix2
}

#new:SJIS $SJIS_80227D64
{
	ボムへい % bomuhei
}

#new:SJIS $SJIS_80227D70
{
	パタパタ,ボムヘイx３ % patapata,bomuheix3
}

#new:SJIS $SJIS_80227D88
{
	パタパタ,ボムヘイx２ % patapata,bomuheix2
}

#new:SJIS $SJIS_80227DA0
{
	パタパタ,ノコノコ,パタパタ,ノコノコ % patapata,nokonoko,patapata,nokonoko
}

#new:SJIS $SJIS_80227DC4
{
	パタパタ,ノコノコ,パタパタ % patapata,nokonoko,patapata
}

#new:SJIS $SJIS_80227DE0
{
	パタパタ,ノコノコ % patapata,nokonoko
}

#new:SJIS $SJIS_80227DF4
{
	パタパタx３ % patapatax3
}

#new:SJIS $SJIS_80227E00
{
	パタパタx２ % patapatax2
}

#new:SJIS $SJIS_80227E0C
{
	ノコノコx2,ボムへいx2 % nokonokox2,bomuheix2
}

#new:SJIS $SJIS_80227E24
{
	ノコノコx2,ボムへい % nokonokox2,bomuhei
}

#new:SJIS $SJIS_80227E38
{
	ノコノコ,ボムへいx3 % nokonoko,bomuheix3
}

#new:SJIS $SJIS_80227E4C
{
	ノコノコ,ボムへいx2 % nokonoko,bomuheix2
}

#new:SJIS $SJIS_80227E60
{
	ノコノコ,ボムへい % nokonoko,bomuhei
}

#new:SJIS $SJIS_80227E74
{
	ノコノコx3 % nokonokox3
}

#new:SJIS $SJIS_80227E80
{
	ノコノコx2 % nokonokox2
}

#new:SJIS $SJIS_80227E8C
{
	ノコノコ % nokonoko
}

#new:ASCII $ASCII_80227E98
{
	"trd_05f"
}

#new:ASCII $ASCII_80227EA0
{
	"trd_05e"
}

#new:ASCII $ASCII_80227EA8
{
	"trd_05d"
}

#new:ASCII $ASCII_80227EB0
{
	"trd_05c"
}

#new:ASCII $ASCII_80227EB8
{
	"trd_05b"
}

#new:ASCII $ASCII_80227EC0
{
	"trd_05"
}

#new:ASCII $ASCII_80227EC8
{
	"trd_04"
}

#new:ASCII $ASCII_80227ED0
{
	"trd_03"
}

#new:ASCII $ASCII_80227ED8
{
	"trd_02d"
}

#new:ASCII $ASCII_80227EE0
{
	"trd_02c"
}

#new:ASCII $ASCII_80227EE8
{
	"trd_02b"
}

#new:ASCII $ASCII_80227EF0
{
	"trd_02"
}

#new:ASCII $ASCII_80227EF8
{
	"trd_01"
}

#new:ASCII $ASCII_80227F00
{
	"trd_00"
}

#new:ASCII $ASCII_80227F08
{
	"trd_bt01_hit"
}

#new:ASCII $ASCII_80227F18
{
	"trd_bt01_shape"
}

#new:ASCII $ASCII_80227F28
{
	"trd_tex"
}

#new:ASCII $ASCII_80227F30
{
	"trd_bt02_hit"
}

#new:ASCII $ASCII_80227F40
{
	"trd_bt02_shape"
}

#new:ASCII $ASCII_80227F50
{
	"trd_tex"
}

#new:ASCII $ASCII_80227F58
{
	"trd_bt02_hit"
}

#new:ASCII $ASCII_80227F68
{
	"trd_bt02_shape"
}

#new:ASCII $ASCII_80227F78
{
	"trd_tex"
}

#new:ASCII $ASCII_80227F80
{
	"nok_bg"
}

#new:ASCII $ASCII_80227F88
{
	"trd_bt03_hit"
}

#new:ASCII $ASCII_80227F98
{
	"trd_bt03_shape"
}

#new:ASCII $ASCII_80227FA8
{
	"trd_tex"
}

#new:ASCII $ASCII_80227FB0
{
	"trd_bt04_hit"
}

#new:ASCII $ASCII_80227FC0
{
	"trd_bt04_shape"
}

#new:ASCII $ASCII_80227FD0
{
	"trd_tex"
}

#new:ASCII $ASCII_80227FD8
{
	"nok_bg"
}

#new:ASCII $ASCII_80227FE0
{
	"trd_bt05_hit"
}

#new:ASCII $ASCII_80227FF0
{
	"trd_bt05_shape"
}

#new:ASCII $ASCII_80228000
{
	"trd_tex"
}

#new:ASCII $ASCII_80228008
{
	"trd_bt00_hit"
}

#new:ASCII $ASCII_80228018
{
	"trd_bt00_shape"
}

#new:ASCII $ASCII_80228028
{
	"trd_tex"
}

#new:ASCII $ASCII_80228030
{
	"trd_bt02_hit"
}

#new:ASCII $ASCII_80228040
{
	"trd_bt02_shape"
}

#new:ASCII $ASCII_80228050
{
	"trd_tex"
}

#new:ASCII $ASCII_80228058
{
	"trd_bt02_hit"
}

#new:ASCII $ASCII_80228068
{
	"trd_bt02_shape"
}

#new:ASCII $ASCII_80228078
{
	"trd_tex"
}

#new:ASCII $ASCII_80228080
{
	"trd_bt05_hit"
}

#new:ASCII $ASCII_80228090
{
	"trd_bt05_shape"
}

#new:ASCII $ASCII_802280A0
{
	"trd_tex"
}

#new:ASCII $ASCII_802280A8
{
	"trd_bt05_hit"
}

#new:ASCII $ASCII_802280B8
{
	"trd_bt05_shape"
}

#new:ASCII $ASCII_802280C8
{
	"trd_tex"
}

#new:ASCII $ASCII_802280D0
{
	"trd_bt05_hit"
}

#new:ASCII $ASCII_802280E0
{
	"trd_bt05_shape"
}

#new:ASCII $ASCII_802280F0
{
	"trd_tex"
}

#new:ASCII $ASCII_802280F8
{
	"trd_bt05_hit"
}

#new:ASCII $ASCII_80228108
{
	"trd_bt05_shape"
}

#new:ASCII $ASCII_80228118
{
	"trd_tex"
}

#new:ASCII $ASCII_80228120
{
	"trd_bt05_hit"
}

#new:ASCII $ASCII_80228130
{
	"trd_bt05_shape"
}

#new:ASCII $ASCII_80228140
{
	"trd_tex"
}

PADDING: 80228148 to 80228150 (004B11E8 to 004B11F0)
00000000 00000000

