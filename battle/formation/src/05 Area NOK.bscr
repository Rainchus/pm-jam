% Script File: 05 Area NOK.bscr
% Decoded from: 48D1A0 to 4A10A0 (05 Area NOK)

#new:Function $Function_80218000
{
    0:  ADDIU     SP, SP, FFD8
    4:  SDC1      F22, 20 (SP)
    8:  MOV.S     F22, F12
    C:  SDC1      F20, 18 (SP)
   10:  SW        RA, 10 (SP)
   14:  JAL       ~Func:length2D
   18:  MOV.S     F20, F14
   1C:  TRUNC.W.S F6, F20
   20:  MFC1      V0, F6
   24:  NOP
   28:  BLTZL     V0, .o30
   2C:  SUBU      V0, R0, V0
        .o30
   30:  MTC1      V0, F2
   34:  NOP
   38:  CVT.S.W   F2, F2
   3C:  DIV.S     F4, F2, F0
   40:  CLEAR     A0
   44:  LI        A2, 5A
   48:  COPY      A1, A0
   4C:  LA        A3, $FloatTable_8021A2D4
   54:  ANDI      V0, A2, FFFF
        .o58
   58:  ANDI      V1, A0, FFFF
   5C:  SUBU      V0, V0, V1
   60:  SRL       V1, V0, 1F
   64:  ADDU      V0, V0, V1
   68:  SRA       V0, V0, 1
   6C:  ADDU      V1, A0, V0
   70:  ANDI      V0, V1, FFFF
   74:  SLL       V0, V0, 2
   78:  ADDU      V0, V0, A3
   7C:  LWC1      F0, 0 (V0)
   80:  C.LT.S    F0, F4
   84:  NOP
   88:  BC1FL     .o94
   8C:  COPY      A2, V1
   90:  COPY      A0, V1
        .o94
   94:  ADDIU     A1, A1, 1
   98:  ANDI      V0, A1, FFFF
   9C:  SLTIU     V0, V0, 7
   A0:  BNE       V0, R0, .o58
   A4:  ANDI      V0, A2, FFFF
   A8:  ANDI      V0, A0, FFFF
   AC:  SLL       V0, V0, 2
   B0:  ANDI      V1, A2, FFFF
   B4:  LTF       F2, V0 ($FloatTable_8021A2D4)
   C0:  SLL       V1, V1, 2
   C4:  SUB.S     F2, F2, F4
   C8:  LTF       F0, V1 ($FloatTable_8021A2D4)
   D4:  SUB.S     F0, F0, F4
   D8:  ABS.S     F2, F2
   DC:  ABS.S     F0, F0
   E0:  C.LT.S    F2, F0
   E4:  NOP
   E8:  BC1F      .oF4
   EC:  COPY      V1, A2
   F0:  COPY      V1, A0
        .oF4
   F4:  MTC1      R0, F0
   F8:  NOP
   FC:  C.LT.S    F22, F0
  100:  NOP
  104:  BC1F      .o130
  108:  NOP
  10C:  C.LE.S    F0, F20
  110:  NOP
  114:  BC1F      .o128
  118:  LI        V0, B4
  11C:  SUBU      V1, V0, V1
  120:  MTC1      R0, F0
  124:  NOP
        .o128
  128:  C.LT.S    F22, F0
  12C:  NOP
        .o130
  130:  BC1F      .o148
  134:  NOP
  138:  C.LT.S    F20, F0
  13C:  NOP
  140:  BC1TL     .o148
  144:  ADDIU     V1, V1, B4
        .o148
  148:  MTC1      R0, F0
  14C:  NOP
  150:  C.LE.S    F0, F22
  154:  NOP
  158:  BC1F      .o174
  15C:  NOP
  160:  C.LT.S    F20, F0
  164:  NOP
  168:  BC1F      .o174
  16C:  LI        V0, 168
  170:  SUBU      V1, V0, V1
        .o174
  174:  LW        RA, 10 (SP)
  178:  LDC1      F22, 20 (SP)
  17C:  LDC1      F20, 18 (SP)
  180:  ANDI      V0, V1, FFFF
  184:  JR        RA
  188:  ADDIU     SP, SP, 28
}

#new:Function $Function_8021818C
{
    0:  ADDIU     SP, SP, FFD8
    4:  SW        S4, 20 (SP)
    8:  COPY      S4, A0
    C:  SW        RA, 24 (SP)
   10:  SW        S3, 1C (SP)
   14:  SW        S2, 18 (SP)
   18:  SW        S1, 14 (SP)
   1C:  SW        S0, 10 (SP)
   20:  LW        S2, C (S4)
   24:  LW        A1, 0 (S2)
   28:  JAL       ~Func:get_variable
   2C:  ADDIU     S2, S2, 4
   30:  LW        A1, 0 (S2)
   34:  ADDIU     S2, S2, 4
   38:  COPY      A0, S4
   3C:  JAL       ~Func:get_variable
   40:  COPY      S0, V0
   44:  LW        A1, 0 (S2)
   48:  ADDIU     S2, S2, 4
   4C:  COPY      A0, S4
   50:  JAL       ~Func:get_variable
   54:  COPY      S1, V0
   58:  COPY      S3, V0
   5C:  LW        A1, 0 (S2)
   60:  ADDIU     S2, S2, 4
   64:  COPY      A0, S4
   68:  JAL       ~Func:get_variable
   6C:  SUBU      S3, S3, S0
   70:  COPY      S0, V0
   74:  COPY      A0, S4
   78:  LW        A1, 0 (S2)
   7C:  JAL       ~Func:get_variable
   80:  SUBU      S0, S0, S1
   84:  BNE       S3, R0, .oA0
   88:  NOP
   8C:  BNE       S0, R0, .oA0
   90:  COPY      A0, S4
   94:  LW        A1, 0 (S2)
   98:  BEQ       R0, R0, .oC8
   9C:  COPY      A2, V0
        .oA0
   A0:  MTC1      S3, F12
   A4:  NOP
   A8:  CVT.S.W   F12, F12
   AC:  MTC1      S0, F14
   B0:  NOP
   B4:  JAL       $Function_80218000
   B8:  CVT.S.W   F14, F14
   BC:  COPY      A0, S4
   C0:  LW        A1, 0 (S2)
   C4:  ADDIU     A2, V0, FFA6
        .oC8
   C8:  JAL       ~Func:set_variable
   CC:  NOP
   D0:  LI        V0, 2
   D4:  LW        RA, 24 (SP)
   D8:  LW        S4, 20 (SP)
   DC:  LW        S3, 1C (SP)
   E0:  LW        S2, 18 (SP)
   E4:  LW        S1, 14 (SP)
   E8:  LW        S0, 10 (SP)
   EC:  JR        RA
   F0:  ADDIU     SP, SP, 28
}

#new:Function $Function_80218280
{
    0:  ADDIU     SP, SP, FFE0
    4:  SW        S1, 14 (SP)
    8:  COPY      S1, A0
    C:  SW        RA, 18 (SP)
   10:  SW        S0, 10 (SP)
   14:  LW        S0, C (S1)
   18:  LW        A1, 0 (S0)
   1C:  JAL       ~Func:get_variable
   20:  ADDIU     S0, S0, 4
   24:  COPY      A0, S1
   28:  LW        A1, 0 (S0)
   2C:  JAL       ~Func:get_variable
   30:  COPY      S0, V0
   34:  COPY      A0, S0
   38:  JAL       ~Func:start_rumble
   3C:  COPY      A1, V0
   40:  LW        RA, 18 (SP)
   44:  LW        S1, 14 (SP)
   48:  LW        S0, 10 (SP)
   4C:  LI        V0, 2
   50:  JR        RA
   54:  ADDIU     SP, SP, 20
}

#new:Function $Function_802182D8
{
    0:  ADDIU     SP, SP, FFD8
    4:  SDC1      F22, 20 (SP)
    8:  MOV.S     F22, F12
    C:  SDC1      F20, 18 (SP)
   10:  SW        RA, 10 (SP)
   14:  JAL       ~Func:length2D
   18:  MOV.S     F20, F14
   1C:  TRUNC.W.S F6, F20
   20:  MFC1      V0, F6
   24:  NOP
   28:  BLTZL     V0, .o30
   2C:  SUBU      V0, R0, V0
        .o30
   30:  MTC1      V0, F2
   34:  NOP
   38:  CVT.S.W   F2, F2
   3C:  DIV.S     F4, F2, F0
   40:  CLEAR     A0
   44:  LI        A2, 5A
   48:  COPY      A1, A0
   4C:  LA        A3, $FloatTable_8021D57C
   54:  ANDI      V0, A2, FFFF
        .o58
   58:  ANDI      V1, A0, FFFF
   5C:  SUBU      V0, V0, V1
   60:  SRL       V1, V0, 1F
   64:  ADDU      V0, V0, V1
   68:  SRA       V0, V0, 1
   6C:  ADDU      V1, A0, V0
   70:  ANDI      V0, V1, FFFF
   74:  SLL       V0, V0, 2
   78:  ADDU      V0, V0, A3
   7C:  LWC1      F0, 0 (V0)
   80:  C.LT.S    F0, F4
   84:  NOP
   88:  BC1FL     .o94
   8C:  COPY      A2, V1
   90:  COPY      A0, V1
        .o94
   94:  ADDIU     A1, A1, 1
   98:  ANDI      V0, A1, FFFF
   9C:  SLTIU     V0, V0, 7
   A0:  BNE       V0, R0, .o58
   A4:  ANDI      V0, A2, FFFF
   A8:  ANDI      V0, A0, FFFF
   AC:  SLL       V0, V0, 2
   B0:  ANDI      V1, A2, FFFF
   B4:  LTF       F2, V0 ($FloatTable_8021D57C)
   C0:  SLL       V1, V1, 2
   C4:  SUB.S     F2, F2, F4
   C8:  LTF       F0, V1 ($FloatTable_8021D57C)
   D4:  SUB.S     F0, F0, F4
   D8:  ABS.S     F2, F2
   DC:  ABS.S     F0, F0
   E0:  C.LT.S    F2, F0
   E4:  NOP
   E8:  BC1F      .oF4
   EC:  COPY      V1, A2
   F0:  COPY      V1, A0
        .oF4
   F4:  MTC1      R0, F0
   F8:  NOP
   FC:  C.LT.S    F22, F0
  100:  NOP
  104:  BC1F      .o130
  108:  NOP
  10C:  C.LE.S    F0, F20
  110:  NOP
  114:  BC1F      .o128
  118:  LI        V0, B4
  11C:  SUBU      V1, V0, V1
  120:  MTC1      R0, F0
  124:  NOP
        .o128
  128:  C.LT.S    F22, F0
  12C:  NOP
        .o130
  130:  BC1F      .o148
  134:  NOP
  138:  C.LT.S    F20, F0
  13C:  NOP
  140:  BC1TL     .o148
  144:  ADDIU     V1, V1, B4
        .o148
  148:  MTC1      R0, F0
  14C:  NOP
  150:  C.LE.S    F0, F22
  154:  NOP
  158:  BC1F      .o174
  15C:  NOP
  160:  C.LT.S    F20, F0
  164:  NOP
  168:  BC1F      .o174
  16C:  LI        V0, 168
  170:  SUBU      V1, V0, V1
        .o174
  174:  LW        RA, 10 (SP)
  178:  LDC1      F22, 20 (SP)
  17C:  LDC1      F20, 18 (SP)
  180:  ANDI      V0, V1, FFFF
  184:  JR        RA
  188:  ADDIU     SP, SP, 28
}

#new:Function $Function_80218464
{
    0:  ADDIU     SP, SP, FFD8
    4:  SW        S4, 20 (SP)
    8:  COPY      S4, A0
    C:  SW        RA, 24 (SP)
   10:  SW        S3, 1C (SP)
   14:  SW        S2, 18 (SP)
   18:  SW        S1, 14 (SP)
   1C:  SW        S0, 10 (SP)
   20:  LW        S2, C (S4)
   24:  LW        A1, 0 (S2)
   28:  JAL       ~Func:get_variable
   2C:  ADDIU     S2, S2, 4
   30:  LW        A1, 0 (S2)
   34:  ADDIU     S2, S2, 4
   38:  COPY      A0, S4
   3C:  JAL       ~Func:get_variable
   40:  COPY      S0, V0
   44:  LW        A1, 0 (S2)
   48:  ADDIU     S2, S2, 4
   4C:  COPY      A0, S4
   50:  JAL       ~Func:get_variable
   54:  COPY      S1, V0
   58:  COPY      S3, V0
   5C:  LW        A1, 0 (S2)
   60:  ADDIU     S2, S2, 4
   64:  COPY      A0, S4
   68:  JAL       ~Func:get_variable
   6C:  SUBU      S3, S3, S0
   70:  COPY      S0, V0
   74:  COPY      A0, S4
   78:  LW        A1, 0 (S2)
   7C:  JAL       ~Func:get_variable
   80:  SUBU      S0, S0, S1
   84:  BNE       S3, R0, .oA0
   88:  NOP
   8C:  BNE       S0, R0, .oA0
   90:  COPY      A0, S4
   94:  LW        A1, 0 (S2)
   98:  BEQ       R0, R0, .oC8
   9C:  COPY      A2, V0
        .oA0
   A0:  MTC1      S3, F12
   A4:  NOP
   A8:  CVT.S.W   F12, F12
   AC:  MTC1      S0, F14
   B0:  NOP
   B4:  JAL       $Function_802182D8
   B8:  CVT.S.W   F14, F14
   BC:  COPY      A0, S4
   C0:  LW        A1, 0 (S2)
   C4:  ADDIU     A2, V0, FFA6
        .oC8
   C8:  JAL       ~Func:set_variable
   CC:  NOP
   D0:  LI        V0, 2
   D4:  LW        RA, 24 (SP)
   D8:  LW        S4, 20 (SP)
   DC:  LW        S3, 1C (SP)
   E0:  LW        S2, 18 (SP)
   E4:  LW        S1, 14 (SP)
   E8:  LW        S0, 10 (SP)
   EC:  JR        RA
   F0:  ADDIU     SP, SP, 28
}

PADDING: 80218558 to 80218560 (0048D6F8 to 0048D700)
00000000 00000000

#new:Function $Function_80218560
{
    0:  ADDIU     SP, SP, FFD8
    4:  SDC1      F22, 20 (SP)
    8:  MOV.S     F22, F12
    C:  SDC1      F20, 18 (SP)
   10:  SW        RA, 10 (SP)
   14:  JAL       ~Func:length2D
   18:  MOV.S     F20, F14
   1C:  TRUNC.W.S F6, F20
   20:  MFC1      V0, F6
   24:  NOP
   28:  BLTZL     V0, .o30
   2C:  SUBU      V0, R0, V0
        .o30
   30:  MTC1      V0, F2
   34:  NOP
   38:  CVT.S.W   F2, F2
   3C:  DIV.S     F4, F2, F0
   40:  CLEAR     A0
   44:  LI        A2, 5A
   48:  COPY      A1, A0
   4C:  LA        A3, $FloatTable_8021F050
   54:  ANDI      V0, A2, FFFF
        .o58
   58:  ANDI      V1, A0, FFFF
   5C:  SUBU      V0, V0, V1
   60:  SRL       V1, V0, 1F
   64:  ADDU      V0, V0, V1
   68:  SRA       V0, V0, 1
   6C:  ADDU      V1, A0, V0
   70:  ANDI      V0, V1, FFFF
   74:  SLL       V0, V0, 2
   78:  ADDU      V0, V0, A3
   7C:  LWC1      F0, 0 (V0)
   80:  C.LT.S    F0, F4
   84:  NOP
   88:  BC1FL     .o94
   8C:  COPY      A2, V1
   90:  COPY      A0, V1
        .o94
   94:  ADDIU     A1, A1, 1
   98:  ANDI      V0, A1, FFFF
   9C:  SLTIU     V0, V0, 7
   A0:  BNE       V0, R0, .o58
   A4:  ANDI      V0, A2, FFFF
   A8:  ANDI      V0, A0, FFFF
   AC:  SLL       V0, V0, 2
   B0:  ANDI      V1, A2, FFFF
   B4:  LTF       F2, V0 ($FloatTable_8021F050)
   C0:  SLL       V1, V1, 2
   C4:  SUB.S     F2, F2, F4
   C8:  LTF       F0, V1 ($FloatTable_8021F050)
   D4:  SUB.S     F0, F0, F4
   D8:  ABS.S     F2, F2
   DC:  ABS.S     F0, F0
   E0:  C.LT.S    F2, F0
   E4:  NOP
   E8:  BC1F      .oF4
   EC:  COPY      V1, A2
   F0:  COPY      V1, A0
        .oF4
   F4:  MTC1      R0, F0
   F8:  NOP
   FC:  C.LT.S    F22, F0
  100:  NOP
  104:  BC1F      .o130
  108:  NOP
  10C:  C.LE.S    F0, F20
  110:  NOP
  114:  BC1F      .o128
  118:  LI        V0, B4
  11C:  SUBU      V1, V0, V1
  120:  MTC1      R0, F0
  124:  NOP
        .o128
  128:  C.LT.S    F22, F0
  12C:  NOP
        .o130
  130:  BC1F      .o148
  134:  NOP
  138:  C.LT.S    F20, F0
  13C:  NOP
  140:  BC1TL     .o148
  144:  ADDIU     V1, V1, B4
        .o148
  148:  MTC1      R0, F0
  14C:  NOP
  150:  C.LE.S    F0, F22
  154:  NOP
  158:  BC1F      .o174
  15C:  NOP
  160:  C.LT.S    F20, F0
  164:  NOP
  168:  BC1F      .o174
  16C:  LI        V0, 168
  170:  SUBU      V1, V0, V1
        .o174
  174:  LW        RA, 10 (SP)
  178:  LDC1      F22, 20 (SP)
  17C:  LDC1      F20, 18 (SP)
  180:  ANDI      V0, V1, FFFF
  184:  JR        RA
  188:  ADDIU     SP, SP, 28
}

#new:Function $Function_802186EC
{
    0:  ADDIU     SP, SP, FFD8
    4:  SW        S4, 20 (SP)
    8:  COPY      S4, A0
    C:  SW        RA, 24 (SP)
   10:  SW        S3, 1C (SP)
   14:  SW        S2, 18 (SP)
   18:  SW        S1, 14 (SP)
   1C:  SW        S0, 10 (SP)
   20:  LW        S2, C (S4)
   24:  LW        A1, 0 (S2)
   28:  JAL       ~Func:get_variable
   2C:  ADDIU     S2, S2, 4
   30:  LW        A1, 0 (S2)
   34:  ADDIU     S2, S2, 4
   38:  COPY      A0, S4
   3C:  JAL       ~Func:get_variable
   40:  COPY      S0, V0
   44:  LW        A1, 0 (S2)
   48:  ADDIU     S2, S2, 4
   4C:  COPY      A0, S4
   50:  JAL       ~Func:get_variable
   54:  COPY      S1, V0
   58:  COPY      S3, V0
   5C:  LW        A1, 0 (S2)
   60:  ADDIU     S2, S2, 4
   64:  COPY      A0, S4
   68:  JAL       ~Func:get_variable
   6C:  SUBU      S3, S3, S0
   70:  COPY      S0, V0
   74:  COPY      A0, S4
   78:  LW        A1, 0 (S2)
   7C:  JAL       ~Func:get_variable
   80:  SUBU      S0, S0, S1
   84:  BNE       S3, R0, .oA0
   88:  NOP
   8C:  BNE       S0, R0, .oA0
   90:  COPY      A0, S4
   94:  LW        A1, 0 (S2)
   98:  BEQ       R0, R0, .oC8
   9C:  COPY      A2, V0
        .oA0
   A0:  MTC1      S3, F12
   A4:  NOP
   A8:  CVT.S.W   F12, F12
   AC:  MTC1      S0, F14
   B0:  NOP
   B4:  JAL       $Function_80218560
   B8:  CVT.S.W   F14, F14
   BC:  COPY      A0, S4
   C0:  LW        A1, 0 (S2)
   C4:  ADDIU     A2, V0, FFA6
        .oC8
   C8:  JAL       ~Func:set_variable
   CC:  NOP
   D0:  LI        V0, 2
   D4:  LW        RA, 24 (SP)
   D8:  LW        S4, 20 (SP)
   DC:  LW        S3, 1C (SP)
   E0:  LW        S2, 18 (SP)
   E4:  LW        S1, 14 (SP)
   E8:  LW        S0, 10 (SP)
   EC:  JR        RA
   F0:  ADDIU     SP, SP, 28
}

#new:Function $Function_802187E0
{
    0:  ADDIU     SP, SP, FFD8
    4:  SW        S1, 14 (SP)
    8:  COPY      S1, A0
    C:  SW        RA, 20 (SP)
   10:  SW        S3, 1C (SP)
   14:  SW        S2, 18 (SP)
   18:  SW        S0, 10 (SP)
   1C:  LW        S0, C (S1)
   20:  LW        A1, 0 (S0)
   24:  JAL       ~Func:get_variable
   28:  ADDIU     S0, S0, 4
   2C:  LW        A1, 0 (S0)
   30:  ADDIU     S0, S0, 4
   34:  COPY      A0, S1
   38:  JAL       ~Func:get_variable
   3C:  COPY      S3, V0
   40:  LW        A1, 0 (S0)
   44:  ADDIU     S0, S0, 4
   48:  COPY      A0, S1
   4C:  JAL       ~Func:get_variable
   50:  COPY      S2, V0
   54:  COPY      A0, S1
   58:  LW        A1, 0 (S0)
   5C:  JAL       ~Func:get_variable
   60:  COPY      S0, V0
   64:  LW        A0, 148 (S1)
   68:  JAL       ~Func:get_actor
   6C:  COPY      S1, V0
   70:  COPY      V1, V0
   74:  LW        V0, 8 (V1)
   78:  LBU       V0, 24 (V0)
   7C:  LW        A0, 8 (V1)
   80:  SUBU      S3, S3, V0
   84:  SB        S3, 194 (V1)
   88:  LBU       V0, 25 (A0)
   8C:  SUBU      S2, S2, V0
   90:  SB        S2, 195 (V1)
   94:  LBU       V0, 26 (A0)
   98:  SUBU      S0, S0, V0
   9C:  SB        S0, 196 (V1)
   A0:  LBU       A0, 27 (A0)
   A4:  SUBU      S1, S1, A0
   A8:  SB        S1, 197 (V1)
   AC:  LW        RA, 20 (SP)
   B0:  LW        S3, 1C (SP)
   B4:  LW        S2, 18 (SP)
   B8:  LW        S1, 14 (SP)
   BC:  LW        S0, 10 (SP)
   C0:  LI        V0, 2
   C4:  JR        RA
   C8:  ADDIU     SP, SP, 28
}

PADDING: 802188AC to 802188B0 (0048DA4C to 0048DA50)
00000000

#new:Function $Function_802188B0
{
    0:  ADDIU     SP, SP, FFD8
    4:  SW        S1, 14 (SP)
    8:  COPY      S1, A0
    C:  SW        RA, 20 (SP)
   10:  SW        S3, 1C (SP)
   14:  SW        S2, 18 (SP)
   18:  SW        S0, 10 (SP)
   1C:  LW        S0, C (S1)
   20:  LW        A1, 0 (S0)
   24:  JAL       ~Func:get_variable
   28:  ADDIU     S0, S0, 4
   2C:  LW        A1, 0 (S0)
   30:  ADDIU     S0, S0, 4
   34:  COPY      A0, S1
   38:  JAL       ~Func:get_variable
   3C:  COPY      S3, V0
   40:  LW        A1, 0 (S0)
   44:  ADDIU     S0, S0, 4
   48:  COPY      A0, S1
   4C:  JAL       ~Func:get_variable
   50:  COPY      S2, V0
   54:  COPY      A0, S1
   58:  LW        A1, 0 (S0)
   5C:  JAL       ~Func:get_variable
   60:  COPY      S0, V0
   64:  MTC1      S3, F12
   68:  NOP
   6C:  CVT.S.W   F12, F12
   70:  MTC1      S2, F14
   74:  NOP
   78:  CVT.S.W   F14, F14
   7C:  MTC1      S0, F0
   80:  NOP
   84:  CVT.S.W   F0, F0
   88:  MFC1      A2, F0
   8C:  JAL       802D7460
   90:  COPY      A3, V0
   94:  LW        RA, 20 (SP)
   98:  LW        S3, 1C (SP)
   9C:  LW        S2, 18 (SP)
   A0:  LW        S1, 14 (SP)
   A4:  LW        S0, 10 (SP)
   A8:  LI        V0, 2
   AC:  JR        RA
   B0:  ADDIU     SP, SP, 28
}

#new:Function $Function_80218964
{
    0:  ADDIU     SP, SP, FFD8
    4:  SW        S1, 14 (SP)
    8:  COPY      S1, A0
    C:  SW        RA, 20 (SP)
   10:  SW        S3, 1C (SP)
   14:  SW        S2, 18 (SP)
   18:  SW        S0, 10 (SP)
   1C:  LW        S0, C (S1)
   20:  LW        A1, 0 (S0)
   24:  JAL       ~Func:get_variable
   28:  ADDIU     S0, S0, 4
   2C:  LW        A1, 0 (S0)
   30:  ADDIU     S0, S0, 4
   34:  COPY      A0, S1
   38:  JAL       ~Func:get_variable
   3C:  COPY      S3, V0
   40:  LW        A1, 0 (S0)
   44:  ADDIU     S0, S0, 4
   48:  COPY      A0, S1
   4C:  JAL       ~Func:get_variable
   50:  COPY      S2, V0
   54:  COPY      A0, S1
   58:  LW        A1, 0 (S0)
   5C:  JAL       ~Func:get_variable
   60:  COPY      S0, V0
   64:  MTC1      S3, F12
   68:  NOP
   6C:  CVT.S.W   F12, F12
   70:  MTC1      S2, F14
   74:  NOP
   78:  CVT.S.W   F14, F14
   7C:  MTC1      S0, F0
   80:  NOP
   84:  CVT.S.W   F0, F0
   88:  MFC1      A2, F0
   8C:  JAL       802D74C0
   90:  COPY      A3, V0
   94:  LW        RA, 20 (SP)
   98:  LW        S3, 1C (SP)
   9C:  LW        S2, 18 (SP)
   A0:  LW        S1, 14 (SP)
   A4:  LW        S0, 10 (SP)
   A8:  LI        V0, 2
   AC:  JR        RA
   B0:  ADDIU     SP, SP, 28
}

PADDING: 80218A18 to 80218A20 (0048DBB8 to 0048DBC0)
00000000 00000000

#new:Function $Function_80218A20
{
    0:  ADDIU     SP, SP, FFE0
    4:  SW        S1, 14 (SP)
    8:  COPY      S1, A0
    C:  SW        RA, 18 (SP)
   10:  SW        S0, 10 (SP)
   14:  LW        S0, C (S1)
   18:  LW        A1, 0 (S0)
   1C:  JAL       ~Func:get_variable
   20:  ADDIU     S0, S0, 4
   24:  COPY      A0, S1
   28:  LW        A1, 0 (S0)
   2C:  JAL       ~Func:get_variable
   30:  COPY      S0, V0
   34:  COPY      A0, S0
   38:  JAL       ~Func:start_rumble
   3C:  COPY      A1, V0
   40:  LW        RA, 18 (SP)
   44:  LW        S1, 14 (SP)
   48:  LW        S0, 10 (SP)
   4C:  LI        V0, 2
   50:  JR        RA
   54:  ADDIU     SP, SP, 20
}

#new:Function $Function_80218A78
{
    0:  ADDIU     SP, SP, FFD8
    4:  SW        S1, 14 (SP)
    8:  COPY      S1, A0
    C:  SW        RA, 20 (SP)
   10:  SW        S3, 1C (SP)
   14:  SW        S2, 18 (SP)
   18:  SW        S0, 10 (SP)
   1C:  LW        S0, C (S1)
   20:  LW        A1, 0 (S0)
   24:  JAL       ~Func:get_variable
   28:  ADDIU     S0, S0, 4
   2C:  LW        A1, 0 (S0)
   30:  ADDIU     S0, S0, 4
   34:  COPY      A0, S1
   38:  JAL       ~Func:get_variable
   3C:  COPY      S3, V0
   40:  LW        A1, 0 (S0)
   44:  ADDIU     S0, S0, 4
   48:  COPY      A0, S1
   4C:  JAL       ~Func:get_variable
   50:  COPY      S2, V0
   54:  COPY      A0, S1
   58:  LW        A1, 0 (S0)
   5C:  JAL       ~Func:get_variable
   60:  COPY      S0, V0
   64:  LW        A0, 148 (S1)
   68:  JAL       ~Func:get_actor
   6C:  COPY      S1, V0
   70:  COPY      V1, V0
   74:  LW        V0, 8 (V1)
   78:  LBU       V0, 24 (V0)
   7C:  LW        A0, 8 (V1)
   80:  SUBU      S3, S3, V0
   84:  SB        S3, 194 (V1)
   88:  LBU       V0, 25 (A0)
   8C:  SUBU      S2, S2, V0
   90:  SB        S2, 195 (V1)
   94:  LBU       V0, 26 (A0)
   98:  SUBU      S0, S0, V0
   9C:  SB        S0, 196 (V1)
   A0:  LBU       A0, 27 (A0)
   A4:  SUBU      S1, S1, A0
   A8:  SB        S1, 197 (V1)
   AC:  LW        RA, 20 (SP)
   B0:  LW        S3, 1C (SP)
   B4:  LW        S2, 18 (SP)
   B8:  LW        S1, 14 (SP)
   BC:  LW        S0, 10 (SP)
   C0:  LI        V0, 2
   C4:  JR        RA
   C8:  ADDIU     SP, SP, 28
}

PADDING: 80218B44 to 80218B50 (0048DCE4 to 0048DCF0)
00000000 00000000 00000000

#new:Function $Function_80218B50
{
    0:  ADDIU     SP, SP, FFE0
    4:  SW        S1, 14 (SP)
    8:  COPY      S1, A0
    C:  SW        RA, 18 (SP)
   10:  SW        S0, 10 (SP)
   14:  LW        S0, C (S1)
   18:  LW        A1, 0 (S0)
   1C:  JAL       ~Func:get_variable
   20:  ADDIU     S0, S0, 4
   24:  COPY      A0, S1
   28:  LW        A1, 0 (S0)
   2C:  JAL       ~Func:get_variable
   30:  COPY      S0, V0
   34:  COPY      A0, S0
   38:  JAL       ~Func:start_rumble
   3C:  COPY      A1, V0
   40:  LW        RA, 18 (SP)
   44:  LW        S1, 14 (SP)
   48:  LW        S0, 10 (SP)
   4C:  LI        V0, 2
   50:  JR        RA
   54:  ADDIU     SP, SP, 20
}

#new:Function $Function_80218BA8
{
    0:  ADDIU     SP, SP, FFD8
    4:  SW        S1, 14 (SP)
    8:  COPY      S1, A0
    C:  SW        RA, 20 (SP)
   10:  SW        S3, 1C (SP)
   14:  SW        S2, 18 (SP)
   18:  SW        S0, 10 (SP)
   1C:  LW        S0, C (S1)
   20:  LW        A1, 0 (S0)
   24:  JAL       ~Func:get_variable
   28:  ADDIU     S0, S0, 4
   2C:  LW        A1, 0 (S0)
   30:  ADDIU     S0, S0, 4
   34:  COPY      A0, S1
   38:  JAL       ~Func:get_variable
   3C:  COPY      S3, V0
   40:  LW        A1, 0 (S0)
   44:  ADDIU     S0, S0, 4
   48:  COPY      A0, S1
   4C:  JAL       ~Func:get_variable
   50:  COPY      S2, V0
   54:  COPY      A0, S1
   58:  LW        A1, 0 (S0)
   5C:  JAL       ~Func:get_variable
   60:  COPY      S0, V0
   64:  LW        A0, 148 (S1)
   68:  JAL       ~Func:get_actor
   6C:  COPY      S1, V0
   70:  COPY      V1, V0
   74:  LW        V0, 8 (V1)
   78:  LBU       V0, 24 (V0)
   7C:  LW        A0, 8 (V1)
   80:  SUBU      S3, S3, V0
   84:  SB        S3, 194 (V1)
   88:  LBU       V0, 25 (A0)
   8C:  SUBU      S2, S2, V0
   90:  SB        S2, 195 (V1)
   94:  LBU       V0, 26 (A0)
   98:  SUBU      S0, S0, V0
   9C:  SB        S0, 196 (V1)
   A0:  LBU       A0, 27 (A0)
   A4:  SUBU      S1, S1, A0
   A8:  SB        S1, 197 (V1)
   AC:  LW        RA, 20 (SP)
   B0:  LW        S3, 1C (SP)
   B4:  LW        S2, 18 (SP)
   B8:  LW        S1, 14 (SP)
   BC:  LW        S0, 10 (SP)
   C0:  LI        V0, 2
   C4:  JR        RA
   C8:  ADDIU     SP, SP, 28
}

#new:Function $Function_80218C74
{
    0:  ADDIU     SP, SP, FFB8
    4:  SW        S1, 14 (SP)
    8:  COPY      S1, A0
    C:  SW        RA, 24 (SP)
   10:  SW        S4, 20 (SP)
   14:  SW        S3, 1C (SP)
   18:  SW        S2, 18 (SP)
   1C:  SW        S0, 10 (SP)
   20:  SDC1      F26, 40 (SP)
   24:  SDC1      F24, 38 (SP)
   28:  SDC1      F22, 30 (SP)
   2C:  SDC1      F20, 28 (SP)
   30:  LW        S0, C (S1)
   34:  LW        A1, 0 (S0)
   38:  JAL       ~Func:get_variable
   3C:  ADDIU     S0, S0, 4
   40:  COPY      A0, S1
   44:  LW        A1, 0 (S0)
   48:  JAL       ~Func:get_variable
   4C:  COPY      S2, V0
   50:  LI        A0, 168
   54:  JAL       ~Func:rand_int
   58:  COPY      S3, V0
   5C:  MTC1      V0, F22
   60:  NOP
   64:  CVT.S.W   F22, F22
   68:  LIF       F24, 46.0
   70:  JAL       ~Func:cos_deg
   74:  MOV.S     F12, F22
   78:  MUL.S     F0, F0, F24
   7C:  NOP
   80:  MTC1      S2, F20
   84:  NOP
   88:  CVT.S.W   F20, F20
   8C:  ADD.S     F0, F20, F0
   90:  TRUNC.W.S F2, F0
   94:  MFC1      S2, F2
   98:  JAL       ~Func:sin_deg
   9C:  MOV.S     F12, F22
   A0:  MUL.S     F0, F0, F24
   A4:  NOP
   A8:  MTC1      S3, F24
   AC:  NOP
   B0:  CVT.S.W   F24, F24
   B4:  ADD.S     F0, F24, F0
   B8:  LIF       F26, 62.0
   C0:  TRUNC.W.S F2, F0
   C4:  MFC1      S3, F2
   C8:  JAL       ~Func:cos_deg
   CC:  MOV.S     F12, F22
   D0:  MUL.S     F0, F0, F26
   D4:  NOP
   D8:  ADD.S     F20, F20, F0
   DC:  TRUNC.W.S F2, F20
   E0:  MFC1      S4, F2
   E4:  JAL       ~Func:sin_deg
   E8:  MOV.S     F12, F22
   EC:  MUL.S     F0, F0, F26
   F0:  NOP
   F4:  ADDIU     S0, S0, 4
   F8:  LW        A1, 0 (S0)
   FC:  ADDIU     S0, S0, 4
  100:  ADD.S     F24, F24, F0
  104:  COPY      A2, S2
  108:  TRUNC.W.S F2, F24
  10C:  MFC1      S2, F2
  110:  JAL       ~Func:set_variable
  114:  COPY      A0, S1
  118:  LW        A1, 0 (S0)
  11C:  ADDIU     S0, S0, 4
  120:  COPY      A0, S1
  124:  JAL       ~Func:set_variable
  128:  COPY      A2, S3
  12C:  LW        A1, 0 (S0)
  130:  ADDIU     S0, S0, 4
  134:  COPY      A0, S1
  138:  JAL       ~Func:set_variable
  13C:  COPY      A2, S4
  140:  COPY      A0, S1
  144:  LW        A1, 0 (S0)
  148:  JAL       ~Func:set_variable
  14C:  COPY      A2, S2
  150:  LW        RA, 24 (SP)
  154:  LW        S4, 20 (SP)
  158:  LW        S3, 1C (SP)
  15C:  LW        S2, 18 (SP)
  160:  LW        S1, 14 (SP)
  164:  LW        S0, 10 (SP)
  168:  LDC1      F26, 40 (SP)
  16C:  LDC1      F24, 38 (SP)
  170:  LDC1      F22, 30 (SP)
  174:  LDC1      F20, 28 (SP)
  178:  LI        V0, 2
  17C:  JR        RA
  180:  ADDIU     SP, SP, 48
}

% Origin: HEURISTIC
#new:Function $Function_80218DF8
{
    0:  ADDIU     SP, SP, FFE8
    4:  SW        RA, 10 (SP)
    8:  LW        V0, C (A0)
    C:  JAL       ~Func:get_variable
   10:  LW        A1, 4 (V0)
   14:  LW        RA, 10 (SP)
   18:  LI        V0, 2
   1C:  JR        RA
   20:  ADDIU     SP, SP, 18
}

PADDING: 80218E1C to 80218E20 (0048DFBC to 0048DFC0)
00000000

#new:Formation $Formation_00
{
	$Goomba 00000001 0000000A 00000000 00000000 00000000 00000000
	$Goomba 00000002 00000009 00000000 00000000 00000000 00000000
}

#new:Formation $Formation_01
{
	$Goomba 00000001 0000000A 00000000 00000000 00000000 00000000
	$SpikedGoomba 00000002 00000009 00000000 00000000 00000000 00000000
}

#new:Formation $Formation_02
{
	$Paragoomba 00000005 0000000A 00000000 00000000 00000000 00000000
	$Paragoomba 00000006 00000009 00000000 00000000 00000000 00000000
}

#new:Formation $Formation_03
{
	$SpikedGoomba 00000001 0000000A 00000000 00000000 00000000 00000000
	$Paragoomba 00000006 00000009 00000000 00000000 00000000 00000000
}

#new:Formation $Formation_04
{
	$SpikedGoomba 00000001 0000000A 00000000 00000000 00000000 00000000
	$SpikedGoomba 00000002 00000009 00000000 00000000 00000000 00000000
}

#new:Formation $Formation_05
{
	$SpikedGoomba 00000000 0000000A 00000000 00000000 00000000 00000000
	$Goomba 00000001 00000009 00000000 00000000 00000000 00000000
	$Goomba 00000002 00000008 00000000 00000000 00000000 00000000
}

#new:Formation $Formation_06
{
	$SpikedGoomba 00000000 0000000A 00000000 00000000 00000000 00000000
	$SpikedGoomba 00000001 00000009 00000000 00000000 00000000 00000000
	$SpikedGoomba 00000002 00000008 00000000 00000000 00000000 00000000
}

#new:Formation $Formation_07
{
	$SpikedGoomba 00000000 0000000A 00000000 00000000 00000000 00000000
	$SpikedGoomba 00000001 00000009 00000000 00000000 00000000 00000000
	$SpikedGoomba 00000002 00000008 00000000 00000000 00000000 00000000
	$SpikedGoomba 00000003 00000007 00000000 00000000 00000000 00000000
}

#new:Formation $Formation_08
{
	$KoopaTroopa 00000001 0000000A 00000000 00000000 00000000 00000000
	$Goomba 00000002 00000009 00000000 00000000 00000000 00000000
}

#new:Formation $Formation_09
{
	$KoopaTroopa 00000001 0000000A 00000000 00000000 00000000 00000000
	$KoopaTroopa 00000002 00000009 00000000 00000000 00000000 00000000
}

#new:Formation $Formation_0A
{
	$KoopaTroopa 00000000 0000000A 00000000 00000000 00000000 00000000
	$KoopaTroopa 00000001 00000009 00000000 00000000 00000000 00000000
	$KoopaTroopa 00000002 00000008 00000000 00000000 00000000 00000000
}

#new:Formation $Formation_0B
{
	$KoopaTroopa 00000001 0000000A 00000000 00000000 00000000 00000000
	$SpikedGoomba 00000002 00000009 00000000 00000000 00000000 00000000
}

#new:Formation $Formation_0C
{
	$KoopaTroopa 00000000 0000000A 00000000 00000000 00000000 00000000
	$KoopaTroopa 00000001 00000009 00000000 00000000 00000000 00000000
	$SpikedGoomba 00000002 00000008 00000000 00000000 00000000 00000000
}

#new:Formation $Formation_0D
{
	$KoopaTroopa 00000000 0000000A 00000000 00000000 00000000 00000000
	$SpikedGoomba 00000001 00000009 00000000 00000000 00000000 00000000
	$SpikedGoomba 00000002 00000008 00000000 00000000 00000000 00000000
}

#new:Formation $Formation_0E
{
	$KoopaTroopa 00000000 0000000A 00000000 00000000 00000000 00000000
	$Paragoomba 00000005 00000009 00000000 00000000 00000000 00000000
	$Paragoomba 00000006 00000008 00000000 00000000 00000000 00000000
}

#new:Formation $Formation_0F
{
	$KoopaTroopa 00000000 0000000A 00000000 00000000 00000000 00000000
	$SpikedGoomba 00000001 00000009 00000000 00000000 00000000 00000000
	$Paragoomba 00000006 00000008 00000000 00000000 00000000 00000000
}

#new:Formation $Formation_10
{
	$KoopaTroopa 00000000 0000000A 00000000 00000000 00000000 00000000
	$KoopaTroopa 00000001 00000009 00000000 00000000 00000000 00000000
	$SpikedGoomba 00000002 00000008 00000000 00000000 00000000 00000000
	$Paragoomba 00000007 00000007 00000000 00000000 00000000 00000000
}

#new:Formation $Formation_11
{
	$Paratroopa 00000005 0000000A 00000000 00000000 00000000 00000000
	$Paratroopa 00000006 00000009 00000000 00000000 00000000 00000000
}

#new:Formation $Formation_12
{
	$Paratroopa 00000005 0000000A 00000000 00000000 00000000 00000000
	$KoopaTroopa 00000002 00000009 00000000 00000000 00000000 00000000
}

#new:Formation $Formation_13
{
	$Paratroopa 00000004 0000000A 00000000 00000000 00000000 00000000
	$KoopaTroopa 00000001 00000009 00000000 00000000 00000000 00000000
	$SpikedGoomba 00000002 00000008 00000000 00000000 00000000 00000000
}

#new:Formation $Formation_14
{
	$Paratroopa 00000004 0000000A 00000000 00000000 00000000 00000000
	$KoopaTroopa 00000001 00000009 00000000 00000000 00000000 00000000
	$SpikedGoomba 00000002 00000008 00000000 00000000 00000000 00000000
	$SpikedGoomba 00000003 00000007 00000000 00000000 00000000 00000000
}

#new:Formation $Formation_15
{
	$Fuzzy 00000001 0000000A 00000000 00000000 00000000 00000000
}

#new:Formation $Formation_16
{
	$Fuzzy 00000001 0000000A 00000000 00000000 00000000 00000000
	$Fuzzy 00000002 00000009 00000000 00000000 00000000 00000000
}

#new:Formation $Formation_17
{
	$Fuzzy 00000000 0000000A 00000000 00000000 00000000 00000000
	$Fuzzy 00000001 00000009 00000000 00000000 00000000 00000000
	$Fuzzy 00000002 00000008 00000000 00000000 00000000 00000000
	$Fuzzy 00000003 00000007 00000000 00000000 00000000 00000000
}

#new:Formation $Formation_18
{
	$KentCKoopa 00000001 0000000A 00000000 00000000 00000000 00000000
}

#new:FormationTable $FormationTable
{
	$SJIS_8022BE10 00000002 $Formation_00 $Stage_8022BAEC 00000000
	$SJIS_8022BDF8 00000002 $Formation_01 $Stage_8022BAEC 00000000
	$SJIS_8022BDE8 00000002 $Formation_02 $Stage_8022BAEC 00000000
	$SJIS_8022BDCC 00000002 $Formation_03 $Stage_8022BAEC 00000000
	$SJIS_8022BDBC 00000002 $Formation_04 $Stage_8022BAEC 00000000
	$SJIS_8022BDA0 00000003 $Formation_05 $Stage_8022BAEC 00000000
	$SJIS_8022BD90 00000003 $Formation_06 $Stage_8022BAEC 00000000
	$SJIS_8022BD80 00000004 $Formation_07 $Stage_8022BAEC 00000000
	$SJIS_8022BD6C 00000002 $Formation_08 $Stage_8022BAEC 00000000
	$SJIS_8022BD60 00000002 $Formation_09 $Stage_8022BAEC 00000000
	$SJIS_8022BD54 00000003 $Formation_0A $Stage_8022BAEC 00000000
	$SJIS_8022BD3C 00000002 $Formation_0B $Stage_8022BAEC 00000000
	$SJIS_8022BD24 00000003 $Formation_0C $Stage_8022BAEC 00000000
	$SJIS_8022BD08 00000003 $Formation_0D $Stage_8022BAEC 00000000
	$SJIS_8022BCEC 00000003 $Formation_0E $Stage_8022BAEC 00000000
	$SJIS_8022BCC8 00000003 $Formation_0F $Stage_8022BAEC 00000000
	$SJIS_8022BCA0 00000004 $Formation_10 $Stage_8022BAEC 00000000
	$SJIS_8022BC94 00000002 $Formation_11 $Stage_8022BAEC 00000000
	$SJIS_8022BC80 00000002 $Formation_12 $Stage_8022BAEC 00000000
	$SJIS_8022BC5C 00000003 $Formation_13 $Stage_8022BAEC 00000000
	$SJIS_8022BC38 00000004 $Formation_14 $Stage_8022BAEC 00000000
	$SJIS_8022BC2C 00000001 $Formation_15 $Stage_8022BAEC 00000000
	$SJIS_8022BC1C 00000002 $Formation_16 $Stage_8022BAEC 00000000
	$SJIS_8022BC0C 00000004 $Formation_17 $Stage_8022BAEC 00000000
	$SJIS_8022BC00 00000001 $Formation_18 $Stage_8022BAEC 00000000
	00000000 00000000 00000000 00000000 00000000
}

#new:StageTable $StageTable
{
	$ASCII_8022BE34 $Stage_8022B7E0
	$ASCII_8022BE2C $Stage_8022BAEC
	$ASCII_8022BE24 $Stage_8022BB5C
	$ASCII_8022BE1C $Stage_8022BBD8
	00000000 00000000
}

#new:DefenseTable $DefenseTable_80219750
{
	.Element:Normal 00000000
	.Element:End
}

#new:StatusTable $StatusTable_8021975C
{
	.Status:Normal      0`
	.Status:Default     0`
	.Status:Sleep     100`
	.Status:Poison    100`
	.Status:Frozen    100`
	.Status:Dizzy     100`
	.Status:Fear      100`
	.Status:Static    100`
	.Status:Paralyze  100`
	.Status:Shrink    100`
	.Status:Stop      100`
	.Status:DefaultTurnMod    0`
	.Status:SleepTurnMod      0`
	.Status:PoisonTurnMod     0`
	.Status:FrozenTurnMod     0`
	.Status:DizzyTurnMod      0`
	.Status:FearTurnMod       0`
	.Status:StaticTurnMod     0`
	.Status:ParalyzeTurnMod   0`
	.Status:ShrinkTurnMod     0`
	.Status:StopTurnMod       0`
	.Status:End
}

#new:PartsTable $PartsTable_80219808
{
	00800000 01000000 001400FF $IdleAnimations_80219854 $DefenseTable_80219750 00000000 00000000 00F60000 00000000
}

#new:Actor $Goomba
{
	% stats
	[Index]         7b
	[Level]         5`b
	[MaxHP]         2`b
	[Coins]         1`b
	[Flags]       00000000
	[StatusTable] $StatusTable_8021975C
	% ai
	[PartsCount]    1`s
	[PartsTable]  $PartsTable_80219808
	[Script]      $Script_Init_802198EC
	% move effectiveness
	[Escape]       90`b
	[Item]        100`b
	[AirLift]     100`b
	[Hurricane]    90`b % Bow's "Spook" as well
	[UpAndAway]    95`b
	[PowerBounce] 100`b
	[SpinSmash]     0`b % weight (0-4)
	% ui positions
	[Size]         24`b  24`b % width height
	[HealthBar]     0`b   0`b % dx dy
	[StatusTurn]  -10`b  20`b % dx dy
	[StatusIcon]   10`b  20`b % dx dy
}

#new:IdleAnimations $IdleAnimations_80219854
{
	.Status:Normal    00260001
	.Status:Stone     00260000
	.Status:Sleep     00260008
	.Status:Poison    00260001
	.Status:Stop      00260000
	.Status:Static    00260001
	.Status:Paralyze  00260000
	.Status:Dizzy     00260007
	.Status:Fear      00260007
	.Status:End
}

#new:IdleAnimations $IdleAnimations_802198A0
{
	.Status:Normal    00260003
	.Status:Stone     00260000
	.Status:Sleep     00260008
	.Status:Poison    00260001
	.Status:Stop      00260000
	.Status:Static    00260003
	.Status:Paralyze  00260000
	.Status:Dizzy     00260007
	.Status:Fear      00260007
	.Status:End
}

#new:Script $Script_Init_802198EC
{
    0:  Call  BindTakeTurn      ( .Actor:Self $Script_TakeTurn_8021A440 )
   14:  Call  BindIdle  ( .Actor:Self $Script_Idle_80219938 )
   28:  Call  BindHandleEvent   ( .Actor:Self $Script_HandleEvent_80219C14 )
   3C:  Return
   44:  End
}

#new:Script $Script_Idle_80219938
{
    0:  Label  A
    C:  Call  RandInt   ( 00000050 *Var0 )
   20:  Add   *Var0  00000050
   30:  Loop  *Var0
   3C:  	Label  0
   48:  	Call  GetStatusFlags    ( .Actor:Self *Var1 )
   5C:  	If  *Var1  &  ~Flags:StatusFlags:Sleep|Frozen|Fear|Paralyze|Dizzy|Stone|Stop % 35D000
   6C:  		Wait  1`
   78:  		Goto  0
   84:  	EndIf
   8C:  	Wait  1`
   98:  EndLoop
   A0:  Call  GetActorPos       ( .Actor:Self *Var0 *Var1 *Var2 )
   BC:  Add   *Var0  00000005
   CC:  Call  SetActorIdleSpeed ( .Actor:Self *Fixed[1.0] )
   E0:  Call  SetIdleAnimations ( .Actor:Self 00000001 $IdleAnimations_802198A0 )
   F8:  Call  SetIdleGoal       ( .Actor:Self *Var0 *Var1 *Var2 )
  114:  Call  IdleRunToGoal     ( .Actor:Self  0` )
  128:  Call  SetIdleAnimations ( .Actor:Self 00000001 $IdleAnimations_80219854 )
  140:  Loop  00000014
  14C:  	Label  1
  158:  	Call  GetStatusFlags    ( .Actor:Self *Var1 )
  16C:  	If  *Var1  &  ~Flags:StatusFlags:Sleep|Frozen|Fear|Paralyze|Dizzy|Stone|Stop % 35D000
  17C:  		Wait  1`
  188:  		Goto  1
  194:  	EndIf
  19C:  	Wait  1`
  1A8:  EndLoop
  1B0:  Call  GetActorPos       ( .Actor:Self *Var0 *Var1 *Var2 )
  1CC:  Sub   *Var0  00000005
  1DC:  Call  SetActorIdleSpeed ( .Actor:Self *Fixed[1.0] )
  1F0:  Call  SetIdleAnimations ( .Actor:Self 00000001 $IdleAnimations_802198A0 )
  208:  Call  SetIdleGoal       ( .Actor:Self *Var0 *Var1 *Var2 )
  224:  Call  IdleRunToGoal     ( .Actor:Self  0` )
  238:  Call  SetIdleAnimations ( .Actor:Self 00000001 $IdleAnimations_80219854 )
  250:  Loop  00000050
  25C:  	Label  2
  268:  	Call  GetStatusFlags    ( .Actor:Self *Var1 )
  27C:  	If  *Var1  &  ~Flags:StatusFlags:Sleep|Frozen|Fear|Paralyze|Dizzy|Stone|Stop % 35D000
  28C:  		Wait  1`
  298:  		Goto  2
  2A4:  	EndIf
  2AC:  	Wait  1`
  2B8:  EndLoop
  2C0:  Goto  A
  2CC:  Return
  2D4:  End
}

#new:Script $Script_HandleEvent_80219C14
{
    0:  Call  UseIdleAnimation  ( .Actor:Self .False )
   14:  Call  EnableIdleScript  ( .Actor:Self 00000000 )
   28:  Call  SetActorScale     ( .Actor:Self *Fixed[1.0] *Fixed[1.0] *Fixed[1.0] )
   44:  Call  GetLastEvent      ( .Actor:Self *Var0 )
   58:  Switch  *Var0
   64:  	CaseOR  ==  .Event:HitCombo % 9
   70:  	CaseOR  ==  .Event:Hit % A
   7C:  		SetConst  *Var0  00000001
   8C:  		SetConst  *Var1  00260005
   9C:  		ExecWait  DoNormalHit
   A8:  	EndCaseGroup
   B0:  	Case  ==  .Event:BurnHit % E
   BC:  		SetConst  *Var0  00000001
   CC:  		SetConst  *Var1  00260009
   DC:  		SetConst  *Var2  0026000A
   EC:  		ExecWait  DoBurnHit
   F8:  	Case  ==  .Event:BurnDeath % 24
  104:  		SetConst  *Var0  00000001
  114:  		SetConst  *Var1  00260009
  124:  		SetConst  *Var2  0026000A
  134:  		ExecWait  DoBurnHit
  140:  		SetConst  *Var0  00000001
  150:  		SetConst  *Var1  0026000A
  160:  		ExecWait  DoDeath
  16C:  		Return
  174:  	Case  ==  .Event:SpinSmashHit % B
  180:  		SetConst  *Var0  00000001
  190:  		SetConst  *Var1  00260005
  1A0:  		ExecWait  DoSpinSmashHit
  1AC:  	Case  ==  .Event:SpinSmashDeath % 21
  1B8:  		SetConst  *Var0  00000001
  1C8:  		SetConst  *Var1  00260005
  1D8:  		ExecWait  DoSpinSmashHit
  1E4:  		SetConst  *Var0  00000001
  1F4:  		SetConst  *Var1  00260006
  204:  		ExecWait  DoDeath
  210:  		Return
  218:  	Case  ==  .Event:ShockHit % 2F
  224:  		SetConst  *Var0  00000001
  234:  		SetConst  *Var1  0026000E
  244:  		ExecWait  DoShockHit
  250:  		SetConst  *Var0  00000001
  260:  		SetConst  *Var1  00260005
  270:  		ExecWait  DoJumpBack
  27C:  		Call  JumpToGoal    ( .Actor:Self  5` .False .True .False )
  29C:  		Call  SetAnimationRate      ( .Actor:Self 00000001 *Fixed[2.0] )
  2B4:  		Call  SetAnimation  ( .Actor:Self 00000001 00260007 )
  2CC:  		Call  SetGoalToHome ( .Actor:Self )
  2DC:  		Call  SetActorSpeed ( .Actor:Self *Fixed[8.0] )
  2F0:  		Call  RunToGoal     ( .Actor:Self  0` .False )
  308:  		Call  SetAnimationRate      ( .Actor:Self 00000001 *Fixed[1.0] )
  320:  		Wait  5`
  32C:  		Call  SetAnimation  ( .Actor:Self 00000001 00260001 )
  344:  		Call  SetActorJumpGravity   ( .Actor:Self *Fixed[1.6] )
  358:  		Call  JumpToGoal    ( .Actor:Self  5` .False .True .False )
  378:  	Case  ==  .Event:ShockDeath % 26
  384:  		SetConst  *Var0  00000001
  394:  		SetConst  *Var1  0026000E
  3A4:  		ExecWait  DoShockHit
  3B0:  		SetConst  *Var0  00000001
  3C0:  		SetConst  *Var1  00260006
  3D0:  		ExecWait  DoDeath
  3DC:  		Return
  3E4:  	Case  ==  .Event:StarBeam % 13
  3F0:  	CaseOR  ==  00000017 % 17
  3FC:  	CaseOR  ==  .Event:Immune % 19
  408:  	CaseOR  ==  .Event:AirLiftFailed % 1F
  414:  		SetConst  *Var0  00000001
  424:  		SetConst  *Var1  00260001
  434:  		ExecWait  DoImmune
  440:  	EndCaseGroup
  448:  	Case  ==  .Event:Death % 20
  454:  		SetConst  *Var0  00000001
  464:  		SetConst  *Var1  00260005
  474:  		ExecWait  DoNormalHit
  480:  		Wait  10`
  48C:  		SetConst  *Var0  00000001
  49C:  		SetConst  *Var1  00260006
  4AC:  		ExecWait  DoDeath
  4B8:  		Return
  4C0:  	Case  ==  .Event:EndFirstStrike % 35
  4CC:  		Call  SetAnimationRate  ( .Actor:Self 00000001 *Fixed[2.0] )
  4E4:  		Call  SetAnimation  ( .Actor:Self 00000001 00260003 )
  4FC:  		Call  SetGoalToHome ( .Actor:Self )
  50C:  		Call  SetActorSpeed ( .Actor:Self *Fixed[4.0] )
  520:  		Call  RunToGoal     ( .Actor:Self  0` .False )
  538:  		Call  SetAnimationRate  ( .Actor:Self 00000001 *Fixed[1.0] )
  550:  		Call  HPBarToHome   ( .Actor:Self )
  560:  	Case  ==  .Event:RecoverStatus % 31
  56C:  		SetConst  *Var0  00000001
  57C:  		SetConst  *Var1  00260001
  58C:  		ExecWait  DoRecover
  598:  	Case  ==  .Event:ScareAway % 39
  5A4:  		SetConst  *Var0  00000001
  5B4:  		SetConst  *Var1  00260003
  5C4:  		SetConst  *Var2  00260005
  5D4:  		ExecWait  DoScareAway
  5E0:  		Return
  5E8:  	Case  ==  .Event:BeginAirLift % 3A
  5F4:  		SetConst  *Var0  00000001
  604:  		SetConst  *Var1  00260003
  614:  		ExecWait  DoAirLift
  620:  	Case  ==  .Event:BlowAway % 16
  62C:  		SetConst  *Var0  00000001
  63C:  		SetConst  *Var1  00260005
  64C:  		ExecWait  DoBlowAway
  658:  		Return
  660:  	Default
  668:  EndSwitch
  670:  Call  SetAnimation      ( .Actor:Self 00000001 00260001 )
  688:  Call  EnableIdleScript  ( .Actor:Self 00000001 )
  69C:  Call  UseIdleAnimation  ( .Actor:Self .True )
  6B0:  Return
  6B8:  End
}

#new:FloatTable $FloatTable_8021A2D4
{
	0.0      0.017452 0.034899 0.052336 0.069756 0.087156 0.104528 0.121869
	0.139173 0.156434 0.173648 0.190809 0.207912 0.224951 0.241922 0.258819
	0.275637 0.292372 0.309017 0.325568 0.34202  0.358368 0.374607 0.390731
	0.406737 0.422618 0.438371 0.45399  0.469472 0.48481  0.5      0.515038
	0.529919 0.544639 0.559193 0.573576 0.587785 0.601815 0.615661 0.62932
	0.642788 0.656059 0.669131 0.681998 0.694658 0.707107 0.71934  0.731354
	0.743145 0.75471  0.766044 0.777146 0.788011 0.798636 0.809017 0.819152
	0.829038 0.838671 0.848048 0.857167 0.866025 0.87462  0.882948 0.891007
	0.898794 0.906308 0.913545 0.920505 0.927184 0.93358  0.939693 0.945519
	0.951057 0.956305 0.961262 0.965926 0.970296 0.97437  0.978148 0.981627
	0.984808 0.987688 0.990268 0.992546 0.994522 0.996195 0.997564 0.99863
	0.999391 0.999848 1.0
}

#new:Script $Script_TakeTurn_8021A440
{
    0:  Call  UseIdleAnimation  ( .Actor:Self .False )
   14:  Call  EnableIdleScript  ( .Actor:Self 00000000 )
   28:  Call  SetTargetActor    ( .Actor:Self .Actor:Player )
   3C:  Call  UseBattleCamPreset    ( 0000003F )
   4C:  Call  BattleCamTargetActor  ( .Actor:Self )
   5C:  Call  8024ECF8  ( FFFFFFFF 00000001 00000000 )
   74:  Call  SetAnimation      ( .Actor:Self 00000001 00260003 )
   8C:  Call  SetGoalToTarget   ( .Actor:Self )
   9C:  Call  AddGoalPos        ( .Actor:Self  50`  0`  0` )
   B8:  Call  SetActorSpeed     ( .Actor:Self *Fixed[6.0] )
   CC:  Call  RunToGoal ( .Actor:Self  0` .False )
   E4:  Call  SetAnimation      ( .Actor:Self 00000001 00260001 )
   FC:  Call  SetActorDispOffset    ( .Actor:Self 00000000 FFFFFFFF 00000000 )
  118:  Wait  1`
  124:  Call  SetActorDispOffset    ( .Actor:Self 00000000 FFFFFFFE 00000000 )
  140:  Wait  5`
  14C:  Call  SetActorDispOffset    ( .Actor:Self 00000000 00000000 00000000 )
  168:  Call  SetAnimation      ( .Actor:Self 00000001 00260004 )
  180:  Call  EnemyTestTarget   ( .Actor:Self *Var0 ~Flags:DamageType:0 00000000 00000001 00000010 )
  1A4:  Switch  *Var0
  1B0:  	CaseOR  ==  .HitResult:Miss % 6
  1BC:  	CaseOR  ==  .HitResult:Lucky % 5
  1C8:  		Set   *VarA  *Var0
  1D8:  		Call  SetGoalToTarget   ( .Actor:Self )
  1E8:  		Call  GetGoalPos        ( .Actor:Self *Var0 *Var1 *Var2 )
  204:  		Sub   *Var0  0000000A
  214:  		Set   *Var1  0000000A
  224:  		Add   *Var2  00000003
  234:  		Call  SetGoalPos        ( .Actor:Self *Var0 *Var1 *Var2 )
  250:  		Call  SetActorJumpGravity   ( .Actor:Self *Fixed[1.2] )
  264:  		Thread
  26C:  			Call  GetActorPos   ( .Actor:Self *Var1 *Var2 *Var0 )
  288:  			Set   *Var0  00000000
  298:  			Loop  00000010
  2A4:  				Call  GetActorPos   ( .Actor:Self *Var4 *Var5 *Var6 )
  2C0:  				Call  $Function_8021818C    ( *Var1 *Var2 *Var4 *Var5 *Var0 )
  2E0:  				Call  SetActorRotation      ( .Actor:Self 00000000 00000000 *Var0 )
  2FC:  				Set   *Var1  *Var4
  30C:  				Set   *Var2  *Var5
  31C:  				Set   *Var3  *Var6
  32C:  				Wait  1`
  338:  			EndLoop
  340:  		EndThread
  348:  		Thread
  350:  			Wait  6`
  35C:  			Call  SetAnimation  ( .Actor:Self 00000001 00260004 )
  374:  		EndThread
  37C:  		Call  JumpToGoal    ( .Actor:Self  16` .False .True .False )
  39C:  		Call  SetAnimation  ( .Actor:Self 00000001 00260008 )
  3B4:  		Call  SetActorScale ( .Actor:Self *Fixed[1.1] *Fixed[0.8] *Fixed[1.0] )
  3D0:  		Call  SetActorDispOffset    ( .Actor:Self 00000000 00000005 00000000 )
  3EC:  		Wait  1`
  3F8:  		Call  SetActorScale ( .Actor:Self *Fixed[1.3] *Fixed[0.5] *Fixed[1.0] )
  414:  		Call  SetActorDispOffset    ( .Actor:Self 00000000 FFFFFFFE 00000000 )
  430:  		Wait  1`
  43C:  		Call  SetActorScale ( .Actor:Self *Fixed[1.0] *Fixed[1.0] *Fixed[1.0] )
  458:  		Call  SetActorDispOffset    ( .Actor:Self 00000000 00000007 00000000 )
  474:  		Call  SetAnimation  ( .Actor:Self 00000001 00260005 )
  48C:  		Wait  5`
  498:  		If  *VarA  ==  .HitResult:Lucky % 5
  4A8:  			Call  EnemyTestTarget   ( .Actor:Self *Var0 ~Flags:DamageType:TriggerLucky 00000000 00000000 00000000 )
  4CC:  		EndIf
  4D4:  		Wait  5`
  4E0:  		Call  SetActorDispOffset    ( .Actor:Self 00000000 00000000 00000000 )
  4FC:  		Call  SetAnimation      ( .Actor:Self 00000001 00260004 )
  514:  		Call  SetGoalToTarget   ( .Actor:Self )
  524:  		Call  GetGoalPos        ( .Actor:Self *Var0 *Var1 *Var2 )
  540:  		Add   *Var0  00000014
  550:  		Set   *Var1  00000000
  560:  		Call  SetGoalPos        ( .Actor:Self *Var0 *Var1 *Var2 )
  57C:  		Call  SetActorJumpGravity   ( .Actor:Self *Fixed[2.0] )
  590:  		Thread
  598:  			Wait  4`
  5A4:  			Set   *Var0  000000B4
  5B4:  			Loop  00000004
  5C0:  				Sub   *Var0  0000002D
  5D0:  				Call  SetActorRotation  ( .Actor:Self 00000000 00000000 *Var0 )
  5EC:  				Wait  1`
  5F8:  			EndLoop
  600:  			Call  SetAnimation  ( .Actor:Self 00000001 00260004 )
  618:  		EndThread
  620:  		Call  JumpToGoal        ( .Actor:Self  15` .False .True .False )
  640:  		Call  SetAnimation      ( .Actor:Self 00000001 00260007 )
  658:  		Wait  5`
  664:  		Call  UseBattleCamPreset    ( 00000002 )
  674:  		Call  YieldTurn ( )
  680:  		Call  SetActorYaw       ( .Actor:Self  180` )
  694:  		Call  AddActorDecoration    ( .Actor:Self 00000001 00000000 .Decoration:Sweat )
  6B0:  		Call  SetAnimationRate  ( .Actor:Self 00000001 *Fixed[2.0] )
  6C8:  		Call  SetGoalToHome     ( .Actor:Self )
  6D8:  		Call  SetActorSpeed     ( .Actor:Self *Fixed[8.0] )
  6EC:  		Call  RunToGoal ( .Actor:Self  0` .False )
  704:  		Call  SetAnimationRate  ( .Actor:Self 00000001 *Fixed[1.0] )
  71C:  		Call  SetActorYaw       ( .Actor:Self  0` )
  730:  		Wait  5`
  73C:  		Call  SetAnimation      ( .Actor:Self 00000001 00260001 )
  754:  		Call  SetActorJumpGravity   ( .Actor:Self *Fixed[1.6] )
  768:  		Call  JumpToGoal        ( .Actor:Self  5` .False .True .False )
  788:  		Call  RemoveActorDecoration ( .Actor:Self 00000001 00000000 )
  7A0:  		Call  EnableIdleScript  ( .Actor:Self 00000001 )
  7B4:  		Call  UseIdleAnimation  ( .Actor:Self .True )
  7C8:  		Return
  7D0:  	EndCaseGroup
  7D8:  	Default
  7E0:  		Call  SetGoalToTarget       ( .Actor:Self )
  7F0:  		Call  SetActorJumpGravity   ( .Actor:Self *Fixed[1.2] )
  804:  		Thread
  80C:  			Call  GetActorPos   ( .Actor:Self *Var1 *Var2 *Var0 )
  828:  			Set   *Var0  00000000
  838:  			Loop  00000010
  844:  				Call  GetActorPos   ( .Actor:Self *Var4 *Var5 *Var6 )
  860:  				Call  $Function_8021818C    ( *Var1 *Var2 *Var4 *Var5 *Var0 )
  880:  				Call  SetActorRotation      ( .Actor:Self 00000000 00000000 *Var0 )
  89C:  				Set   *Var1  *Var4
  8AC:  				Set   *Var2  *Var5
  8BC:  				Set   *Var3  *Var6
  8CC:  				Wait  1`
  8D8:  			EndLoop
  8E0:  		EndThread
  8E8:  		Thread
  8F0:  			Wait  6`
  8FC:  			Call  SetAnimation  ( .Actor:Self 00000001 00260004 )
  914:  		EndThread
  91C:  		Call  JumpToGoal    ( .Actor:Self  16` .False .True .False )
  93C:  		Call  SetAnimation  ( .Actor:Self 00000001 0026000B )
  954:  		Call  SetActorScale ( .Actor:Self *Fixed[1.1] *Fixed[0.8] *Fixed[1.0] )
  970:  		Wait  1`
  97C:  		Call  SetActorScale ( .Actor:Self *Fixed[1.3] *Fixed[0.5] *Fixed[1.0] )
  998:  		Wait  1`
  9A4:  EndSwitch
  9AC:  Call  EnemyDamageTarget ( .Actor:Self *Var0 ~Flags:DamageType:0 00000000 00000000 00000001 00000020 )
  9D4:  Switch  *Var0
  9E0:  	CaseOR  ==  .HitResult:Hit % 0
  9EC:  	CaseOR  ==  .HitResult:QuakeImmune % 2
  9F8:  		Call  UseBattleCamPreset    ( 00000002 )
  A08:  		Call  SetActorScale ( .Actor:Self *Fixed[1.1] *Fixed[0.8] *Fixed[1.0] )
  A24:  		Wait  1`
  A30:  		Call  SetActorScale ( .Actor:Self *Fixed[1.0] *Fixed[1.0] *Fixed[1.0] )
  A4C:  		Wait  1`
  A58:  		Call  SetActorRotation      ( .Actor:Self 00000000 00000000 00000000 )
  A74:  		Call  SetActorDispOffset    ( .Actor:Self 00000000 00000000 00000000 )
  A90:  		Call  SetAnimation  ( .Actor:Self 00000001 00260001 )
  AA8:  		Call  GetGoalPos    ( .Actor:Self *Var0 *Var1 *Var2 )
  AC4:  		Add   *Var0  00000028
  AD4:  		Set   *Var1  00000000
  AE4:  		Call  SetActorJumpGravity   ( .Actor:Self *Fixed[1.8] )
  AF8:  		Call  SetGoalPos    ( .Actor:Self *Var0 *Var1 *Var2 )
  B14:  		Call  JumpToGoal    ( .Actor:Self  10` .False .True .False )
  B34:  		Add   *Var0  0000001E
  B44:  		Call  SetGoalPos    ( .Actor:Self *Var0 *Var1 *Var2 )
  B60:  		Call  JumpToGoal    ( .Actor:Self  8` .False .True .False )
  B80:  		Add   *Var0  00000014
  B90:  		Call  SetGoalPos    ( .Actor:Self *Var0 *Var1 *Var2 )
  BAC:  		Call  JumpToGoal    ( .Actor:Self  6` .False .True .False )
  BCC:  		Call  SetAnimation  ( .Actor:Self 00000001 00260001 )
  BE4:  		Wait  3`
  BF0:  		Call  YieldTurn ( )
  BFC:  		Call  SetAnimationRate      ( .Actor:Self 00000001 *Fixed[2.0] )
  C14:  		Call  SetAnimation  ( .Actor:Self 00000001 00260003 )
  C2C:  		Call  SetGoalToHome ( .Actor:Self )
  C3C:  		Call  SetActorSpeed ( .Actor:Self *Fixed[8.0] )
  C50:  		Call  RunToGoal     ( .Actor:Self  0` .False )
  C68:  		Call  SetAnimationRate      ( .Actor:Self 00000001 *Fixed[1.0] )
  C80:  	EndCaseGroup
  C88:  EndSwitch
  C90:  Call  EnableIdleScript  ( .Actor:Self 00000001 )
  CA4:  Call  UseIdleAnimation  ( .Actor:Self .True )
  CB8:  Return
  CC0:  End
}

PADDING: 8021B108 to 8021B110 (004902A8 to 004902B0)
00000000 00000000

#new:DefenseTable $DefenseTable_8021B110
{
	.Element:Normal 00000000
	.Element:End
}

#new:DefenseTable $DefenseTable_8021B11C
{
	.Element:Normal 00000000
	.Element:End
}

#new:StatusTable $StatusTable_8021B128
{
	.Status:Normal      0`
	.Status:Default     0`
	.Status:Sleep     100`
	.Status:Poison    100`
	.Status:Frozen    100`
	.Status:Dizzy     100`
	.Status:Fear      100`
	.Status:Static    100`
	.Status:Paralyze  100`
	.Status:Shrink    100`
	.Status:Stop      100`
	.Status:DefaultTurnMod    0`
	.Status:SleepTurnMod      0`
	.Status:PoisonTurnMod     0`
	.Status:FrozenTurnMod     0`
	.Status:DizzyTurnMod      0`
	.Status:FearTurnMod       0`
	.Status:StaticTurnMod     0`
	.Status:ParalyzeTurnMod   0`
	.Status:ShrinkTurnMod     0`
	.Status:StopTurnMod       0`
	.Status:End
}

#new:StatusTable $StatusTable_8021B1D4
{
	.Status:Normal      0`
	.Status:Default     0`
	.Status:Sleep     100`
	.Status:Poison     80`
	.Status:Frozen    100`
	.Status:Dizzy     100`
	.Status:Fear       80`
	.Status:Static     80`
	.Status:Paralyze  100`
	.Status:Shrink    100`
	.Status:Stop      100`
	.Status:DefaultTurnMod    0`
	.Status:SleepTurnMod      0`
	.Status:PoisonTurnMod     0`
	.Status:FrozenTurnMod     0`
	.Status:DizzyTurnMod      1`
	.Status:FearTurnMod       0`
	.Status:StaticTurnMod     0`
	.Status:ParalyzeTurnMod   0`
	.Status:ShrinkTurnMod     0`
	.Status:StopTurnMod       0`
	.Status:End
}

#new:PartsTable $PartsTable_8021B280
{
	00020001 01000000 001400FF $IdleAnimations_8021CAFC $DefenseTable_8021B110 00000000 00000000 00F60000 00000000
	00800000 02000000 001800FF $IdleAnimations_8021B338 $DefenseTable_8021B11C 00004000 00000000 00F60000 00000000
	00020001 03000000 F01800FF $IdleAnimations_8021B3D0 $DefenseTable_8021B110 00000000 00000000 00F60000 00000000
	00020001 04000000 F01800FF $IdleAnimations_8021B3DC $DefenseTable_8021B110 00000000 00000000 00F60000 00000000
}

#new:Actor $Paragoomba
{
	% stats
	[Index]         8b
	[Level]         6`b
	[MaxHP]         2`b
	[Coins]         1`b
	[Flags]       00000200
	[StatusTable] $StatusTable_8021B1D4
	% ai
	[PartsCount]    4`s
	[PartsTable]  $PartsTable_8021B280
	[Script]      $Script_Init_8021B3E8
	% move effectiveness
	[Escape]       90`b
	[Item]        100`b
	[AirLift]     100`b
	[Hurricane]   100`b % Bow's "Spook" as well
	[UpAndAway]    95`b
	[PowerBounce] 100`b
	[SpinSmash]     0`b % weight (0-4)
	% ui positions
	[Size]         36`b  26`b % width height
	[HealthBar]     0`b   0`b % dx dy
	[StatusTurn]  -10`b  20`b % dx dy
	[StatusIcon]   10`b  20`b % dx dy
}

#new:IdleAnimations $IdleAnimations_8021B338
{
	.Status:Normal    00280001
	.Status:Stone     00280000
	.Status:Sleep     0028000B
	.Status:Poison    00280001
	.Status:Stop      00280000
	.Status:Static    00280001
	.Status:Paralyze  00280000
	.Status:Dizzy     0028000C
	.Status:Fear      0028000C
	.Status:End
}

#new:IdleAnimations $IdleAnimations_8021B384
{
	.Status:Normal    00280004
	.Status:Stone     00280000
	.Status:Sleep     0028000B
	.Status:Poison    00280001
	.Status:Stop      00280000
	.Status:Static    00280004
	.Status:Paralyze  00280000
	.Status:Dizzy     0028000C
	.Status:Fear      0028000C
	.Status:End
}

#new:IdleAnimations $IdleAnimations_8021B3D0
{
	.Status:Normal    00280009
	.Status:End
}

#new:IdleAnimations $IdleAnimations_8021B3DC
{
	.Status:Normal    0028000A
	.Status:End
}

#new:Script $Script_Init_8021B3E8
{
    0:  Call  BindTakeTurn      ( .Actor:Self $Script_TakeTurn_8021BD5C )
   14:  Call  BindIdle  ( .Actor:Self $Script_Idle_8021B434 )
   28:  Call  BindHandleEvent   ( .Actor:Self $Script_HandleEvent_8021B768 )
   3C:  Return
   44:  End
}

#new:Script $Script_Idle_8021B434
{
    0:  Label  A
    C:  Call  RandInt   ( 00000050 *Var0 )
   20:  Add   *Var0  00000050
   30:  Loop  *Var0
   3C:  	Label  0
   48:  	Call  GetStatusFlags    ( .Actor:Self *Var1 )
   5C:  	If  *Var1  &  ~Flags:StatusFlags:Sleep|Frozen|Fear|Paralyze|Dizzy|Stone|Stop % 35D000
   6C:  		Wait  1`
   78:  		Goto  0
   84:  	EndIf
   8C:  	Wait  1`
   98:  EndLoop
   A0:  Call  GetActorPos       ( .Actor:Self *Var0 *Var1 *Var2 )
   BC:  Add   *Var0  00000005
   CC:  Call  SetActorIdleSpeed ( .Actor:Self *Fixed[0.6] )
   E0:  Call  SetIdleAnimations ( .Actor:Self 00000002 $IdleAnimations_8021B384 )
   F8:  Call  SetIdleGoal       ( .Actor:Self *Var0 *Var1 *Var2 )
  114:  Call  IdleFlyToGoal     ( .Actor:Self  0`  -5` .Easing:Linear )
  130:  Loop  00000014
  13C:  	Label  1
  148:  	Call  GetStatusFlags    ( .Actor:Self *Var1 )
  15C:  	If  *Var1  &  ~Flags:StatusFlags:Sleep|Frozen|Fear|Paralyze|Dizzy|Stone|Stop % 35D000
  16C:  		Wait  1`
  178:  		Goto  1
  184:  	EndIf
  18C:  	Wait  1`
  198:  EndLoop
  1A0:  Call  GetActorPos       ( .Actor:Self *Var0 *Var1 *Var2 )
  1BC:  Sub   *Var0  00000005
  1CC:  Call  SetActorIdleSpeed ( .Actor:Self *Fixed[0.6] )
  1E0:  Call  SetIdleGoal       ( .Actor:Self *Var0 *Var1 *Var2 )
  1FC:  Call  IdleFlyToGoal     ( .Actor:Self  0`  -5` .Easing:Linear )
  218:  Call  SetIdleAnimations ( .Actor:Self 00000002 $IdleAnimations_8021B338 )
  230:  Loop  00000028
  23C:  	Label  2
  248:  	Call  GetStatusFlags    ( .Actor:Self *Var1 )
  25C:  	If  *Var1  &  ~Flags:StatusFlags:Sleep|Frozen|Fear|Paralyze|Dizzy|Stone|Stop % 35D000
  26C:  		Wait  1`
  278:  		Goto  2
  284:  	EndIf
  28C:  	Wait  1`
  298:  EndLoop
  2A0:  Goto  A
  2AC:  Return
  2B4:  End
}

#new:Script $Script_8021B6F0
{
    0:  Call  ResetAllActorSounds   ( .Actor:Self )
   10:  Call  SetGoalToHome ( .Actor:Self )
   20:  Call  SetActorSpeed ( .Actor:Self *Fixed[7.0] )
   34:  Call  FlyToGoal     ( .Actor:Self  0`  1` .Easing:SinOut )
   50:  Call  SetAnimation  ( .Actor:Self 00000002 00280001 )
   68:  Return
   70:  End
}

#new:Script $Script_HandleEvent_8021B768
{
    0:  Call  UseIdleAnimation  ( .Actor:Self .False )
   14:  Call  EnableIdleScript  ( .Actor:Self 00000000 )
   28:  Call  GetLastEvent      ( .Actor:Self *Var0 )
   3C:  Switch  *Var0
   48:  	CaseOR  ==  .Event:HitCombo % 9
   54:  	CaseOR  ==  .Event:Hit % A
   60:  		SetConst  *Var0  00000002
   70:  		SetConst  *Var1  00280006
   80:  		ExecWait  DoNormalHit
   8C:  		Call  GetBattlePhase    ( *Var0 )
   9C:  		If  *Var0  ==  00000001
   AC:  			Call  GetEncounterState ( *Var0 )
   BC:  			If  *Var0  ==  00000004
   CC:  				ExecWait  $Script_8021C574
   D8:  			EndIf
   E0:  		EndIf
   E8:  	EndCaseGroup
   F0:  	Case  ==  .Event:BurnHit % E
   FC:  		SetConst  *Var0  00000002
  10C:  		SetConst  *Var1  0028000D
  11C:  		SetConst  *Var2  0028000E
  12C:  		ExecWait  DoBurnHit
  138:  	Case  ==  .Event:BurnDeath % 24
  144:  		SetConst  *Var0  00000002
  154:  		SetConst  *Var1  0028000D
  164:  		SetConst  *Var2  0028000E
  174:  		ExecWait  DoBurnHit
  180:  		SetConst  *Var0  00000002
  190:  		SetConst  *Var1  0028000E
  1A0:  		ExecWait  DoDeath
  1AC:  		Return
  1B4:  	Case  ==  .Event:FallTrigger % C
  1C0:  		SetConst  *Var0  00000002
  1D0:  		SetConst  *Var1  00280006
  1E0:  		ExecWait  DoNormalHit
  1EC:  		ExecWait  $Script_8021C574
  1F8:  	Case  ==  0000000F % F
  204:  		SetConst  *Var0  00000002
  214:  		SetConst  *Var1  0028000D
  224:  		SetConst  *Var2  0028000E
  234:  		ExecWait  DoBurnHit
  240:  		ExecWait  $Script_8021C574
  24C:  	Case  ==  .Event:ShockHit % 2F
  258:  		SetConst  *Var0  00000002
  268:  		SetConst  *Var1  0028000F
  278:  		ExecWait  DoShockHit
  284:  		SetConst  *Var0  00000002
  294:  		SetConst  *Var1  00280006
  2A4:  		ExecWait  DoJumpBack
  2B0:  		Call  SetAnimation  ( .Actor:Self 00000002 0028000C )
  2C8:  		ExecWait  $Script_8021B6F0
  2D4:  	Case  ==  .Event:ShockDeath % 26
  2E0:  		SetConst  *Var0  00000002
  2F0:  		SetConst  *Var1  0028000F
  300:  		ExecWait  DoShockHit
  30C:  		SetConst  *Var0  00000002
  31C:  		SetConst  *Var1  00280007
  32C:  		ExecWait  DoDeath
  338:  		Return
  340:  	Case  ==  .Event:StarBeam % 13
  34C:  	CaseOR  ==  00000017 % 17
  358:  	CaseOR  ==  .Event:Immune % 19
  364:  	CaseOR  ==  .Event:AirLiftFailed % 1F
  370:  		SetConst  *Var0  00000002
  380:  		SetConst  *Var1  00280001
  390:  		ExecWait  DoImmune
  39C:  	EndCaseGroup
  3A4:  	Case  ==  .Event:Death % 20
  3B0:  		SetConst  *Var0  00000002
  3C0:  		SetConst  *Var1  00280006
  3D0:  		ExecWait  DoNormalHit
  3DC:  		Wait  10`
  3E8:  		SetConst  *Var0  00000002
  3F8:  		SetConst  *Var1  00280007
  408:  		ExecWait  DoDeath
  414:  		Return
  41C:  	Case  ==  .Event:BeginFirstStrike % 38
  428:  		Call  SetActorPos       ( .Actor:Self  20`  0`  0` )
  444:  		Call  HPBarToCurrent    ( .Actor:Self )
  454:  	Case  ==  .Event:EndFirstStrike % 35
  460:  		Call  SetAnimation  ( .Actor:Self 00000002 00280004 )
  478:  		ExecWait  $Script_8021B6F0
  484:  		Call  HPBarToHome   ( .Actor:Self )
  494:  	Case  ==  .Event:RecoverStatus % 31
  4A0:  		SetConst  *Var0  00000002
  4B0:  		SetConst  *Var1  00280001
  4C0:  		ExecWait  DoRecover
  4CC:  	Case  ==  .Event:ScareAway % 39
  4D8:  		Call  SetActorFlagBits  ( .Actor:Self 00000200 .False )
  4F0:  		SetConst  *Var0  00000002
  500:  		SetConst  *Var1  00280004
  510:  		SetConst  *Var2  00280006
  520:  		ExecWait  DoScareAway
  52C:  		Return
  534:  	Case  ==  .Event:BeginAirLift % 3A
  540:  		SetConst  *Var0  00000002
  550:  		SetConst  *Var1  00280004
  560:  		ExecWait  DoAirLift
  56C:  	Case  ==  .Event:BlowAway % 16
  578:  		SetConst  *Var0  00000002
  588:  		SetConst  *Var1  00280006
  598:  		ExecWait  DoBlowAway
  5A4:  		Return
  5AC:  	Default
  5B4:  EndSwitch
  5BC:  Call  EnableIdleScript  ( .Actor:Self FFFFFFFF )
  5D0:  Call  UseIdleAnimation  ( .Actor:Self .True )
  5E4:  Return
  5EC:  End
}

#new:Script $Script_TakeTurn_8021BD5C
{
    0:  Call  UseIdleAnimation  ( .Actor:Self .False )
   14:  Call  EnableIdleScript  ( .Actor:Self 00000000 )
   28:  Call  SetTargetActor    ( .Actor:Self .Actor:Player )
   3C:  Call  SetGoalToTarget   ( .Actor:Self )
   4C:  Call  UseBattleCamPreset    ( 0000003F )
   5C:  Call  BattleCamTargetActor  ( .Actor:Self )
   6C:  Call  8024ECF8  ( FFFFFFFF 00000001 00000000 )
   84:  Call  SetAnimation      ( .Actor:Self 00000002 00280004 )
   9C:  Call  SetGoalToTarget   ( .Actor:Self )
   AC:  Call  AddGoalPos        ( .Actor:Self  50`  0`  0` )
   C8:  Call  SetActorSpeed     ( .Actor:Self *Fixed[6.0] )
   DC:  Call  FlyToGoal ( .Actor:Self  0`  -4` .Easing:Linear )
   F8:  Call  EnemyTestTarget   ( .Actor:Self *Var0 ~Flags:DamageType:0 00000000 00000001 00000010 )
  11C:  Switch  *Var0
  128:  	CaseOR  ==  .HitResult:Miss % 6
  134:  	CaseOR  ==  .HitResult:Lucky % 5
  140:  		Set   *VarA  *Var0
  150:  		Wait  10`
  15C:  		Call  UseBattleCamPreset    ( 00000042 )
  16C:  		Call  SetBattleCamZoom  (  300` )
  17C:  		Call  BattleCamTargetActor  ( .Actor:Self )
  18C:  		Call  8024ECF8  ( FFFFFFFF 00000001 00000000 )
  1A4:  		Call  PlaySoundAtActor  ( .Actor:Self 000020E0 )
  1B8:  		Call  SetActorSounds    ( .Actor:Self .ActorSound:Jump 00000000 00000000 )
  1D4:  		Call  SetActorSpeed     ( .Actor:Self *Fixed[5.0] )
  1E8:  		Call  SetActorJumpGravity   ( .Actor:Self *Fixed[1.8] )
  1FC:  		Call  SetAnimation      ( .Actor:Self 00000002 00280005 )
  214:  		Call  GetActorPos       ( .Actor:Self *Var0 *Var1 *Var2 )
  230:  		Call  SetGoalPos        ( .Actor:Self *Var0 *Var1 *Var2 )
  24C:  		Call  JumpToGoal        ( .Actor:Self  10` .False .False .False )
  26C:  		Call  PlaySoundAtActor  ( .Actor:Self 000002C1 )
  280:  		Call  SetActorSounds    ( .Actor:Self .ActorSound:Fly 00000000 00000000 )
  29C:  		Call  SetGoalToTarget   ( .Actor:Self )
  2AC:  		Sub   *Var0  00000050
  2BC:  		Set   *Var1  00000014
  2CC:  		Call  SetGoalPos        ( .Actor:Self *Var0 *Var1 *Var2 )
  2E8:  		Call  SetActorSpeed     ( .Actor:Self *Fixed[8.0] )
  2FC:  		Call  SetAnimation      ( .Actor:Self 00000002 00280005 )
  314:  		Call  FlyToGoal ( .Actor:Self  0`  -10` .Easing:QuadraticOut )
  330:  		Thread
  338:  			Loop  00000004
  344:  				Call  PlaySoundAtActor  ( .Actor:Self 000020DF )
  358:  				Wait  4`
  364:  			EndLoop
  36C:  		EndThread
  374:  		Call  SetAnimation  ( .Actor:Self 00000002 00280002 )
  38C:  		Call  AddActorDecoration    ( .Actor:Self 00000002 00000000 .Decoration:Sweat )
  3A8:  		Call  SetAnimationRate      ( .Actor:Self 00000002 *Fixed[3.0] )
  3C0:  		Wait  10`
  3CC:  		If  *VarA  ==  .HitResult:Lucky % 5
  3DC:  			Call  EnemyTestTarget   ( .Actor:Self *Var0 ~Flags:DamageType:TriggerLucky 00000000 00000000 00000000 )
  400:  		EndIf
  408:  		Wait  10`
  414:  		Call  SetAnimationRate  ( .Actor:Self 00000002 *Fixed[1.0] )
  42C:  		Call  UseBattleCamPreset    ( 00000002 )
  43C:  		Call  ResetAllActorSounds   ( .Actor:Self )
  44C:  		Call  YieldTurn ( )
  458:  		Call  SetAnimation      ( .Actor:Self 00000002 00280004 )
  470:  		Call  SetActorYaw       ( .Actor:Self  180` )
  484:  		ExecWait  $Script_8021B6F0
  490:  		Call  SetActorYaw       ( .Actor:Self  0` )
  4A4:  		Call  RemoveActorDecoration ( .Actor:Self 00000002 00000000 )
  4BC:  		Call  EnableIdleScript  ( .Actor:Self FFFFFFFF )
  4D0:  		Call  UseIdleAnimation  ( .Actor:Self .True )
  4E4:  		Return
  4EC:  	EndCaseGroup
  4F4:  	Default
  4FC:  		Wait  10`
  508:  		Call  UseBattleCamPreset    ( 00000042 )
  518:  		Call  SetBattleCamZoom  (  300` )
  528:  		Call  BattleCamTargetActor  ( .Actor:Self )
  538:  		Call  8024ECF8  ( FFFFFFFF 00000001 00000000 )
  550:  		Call  PlaySoundAtActor  ( .Actor:Self 000020E0 )
  564:  		Call  SetActorSounds    ( .Actor:Self .ActorSound:Jump 00000000 00000000 )
  580:  		Call  SetActorSpeed     ( .Actor:Self *Fixed[5.0] )
  594:  		Call  SetActorJumpGravity   ( .Actor:Self *Fixed[1.8] )
  5A8:  		Call  SetAnimation      ( .Actor:Self 00000002 00280005 )
  5C0:  		Call  GetActorPos       ( .Actor:Self *Var0 *Var1 *Var2 )
  5DC:  		Call  SetGoalPos        ( .Actor:Self *Var0 *Var1 *Var2 )
  5F8:  		Call  JumpToGoal        ( .Actor:Self  10` .False .False .False )
  618:  		Call  PlaySoundAtActor  ( .Actor:Self 000002C1 )
  62C:  		Call  SetActorSounds    ( .Actor:Self .ActorSound:Fly 00000000 00000000 )
  648:  		Call  SetGoalToTarget   ( .Actor:Self )
  658:  		Call  SetActorSpeed     ( .Actor:Self *Fixed[8.0] )
  66C:  		Call  SetAnimation      ( .Actor:Self 00000002 00280005 )
  684:  		Call  FlyToGoal ( .Actor:Self  0`  -10` .Easing:Linear )
  6A0:  EndSwitch
  6A8:  Wait  2`
  6B4:  Call  EnemyDamageTarget ( .Actor:Self *Var0 ~Flags:DamageType:0 00000000 00000000 00000001 00000020 )
  6DC:  Switch  *Var0
  6E8:  	CaseOR  ==  .HitResult:Hit % 0
  6F4:  	CaseOR  ==  .HitResult:QuakeImmune % 2
  700:  		Call  UseBattleCamPreset    ( 00000002 )
  710:  		Call  SetGoalToTarget       ( .Actor:Self )
  720:  		Call  AddGoalPos    ( .Actor:Self  50`  10`  0` )
  73C:  		Call  SetActorSpeed ( .Actor:Self *Fixed[6.0] )
  750:  		Call  SetAnimation  ( .Actor:Self 00000002 00280004 )
  768:  		Call  FlyToGoal     ( .Actor:Self  0`  -10` .Easing:Linear )
  784:  		Call  ResetAllActorSounds   ( .Actor:Self )
  794:  		Wait  5`
  7A0:  		Call  YieldTurn ( )
  7AC:  		Call  SetAnimation  ( .Actor:Self 00000002 00280004 )
  7C4:  		ExecWait  $Script_8021B6F0
  7D0:  	EndCaseGroup
  7D8:  EndSwitch
  7E0:  Call  EnableIdleScript  ( .Actor:Self FFFFFFFF )
  7F4:  Call  UseIdleAnimation  ( .Actor:Self .True )
  808:  Return
  810:  End
}

#new:Script $Script_8021C574
{
    0:  Call  8027D32C      ( FFFFFF81 )
   10:  Call  SetPartFlags  ( .Actor:Self 00000002 00020005 )
   28:  Call  SetPartFlags  ( .Actor:Self 00000003 00120004 )
   40:  Call  SetPartFlags  ( .Actor:Self 00000004 00120004 )
   58:  Call  SetPartFlags  ( .Actor:Self 00000001 00800004 )
   70:  Call  GetActorPos   ( .Actor:Self *Var0 *Var1 *Var2 )
   8C:  Call  SetPartPos    ( .Actor:Self 00000003 *Var0 *Var1 *Var2 )
   AC:  Call  SetPartDispOffset ( .Actor:Self 00000003 FFFFFFF7 00000007 FFFFFFFE )
   CC:  Call  SetPartPos    ( .Actor:Self 00000004 *Var0 *Var1 *Var2 )
   EC:  Call  SetPartDispOffset ( .Actor:Self 00000004 0000000B 00000007 FFFFFFFE )
  10C:  Call  GetLastEvent  ( .Actor:Self *Var0 )
  120:  If  *Var0  ==  0000000F % F
  130:  	Call  SetAnimation  ( .Actor:Self 00000001 0026000A )
  148:  Else
  150:  	Call  SetAnimation  ( .Actor:Self 00000001 00260005 )
  168:  EndIf
  170:  Call  SetActorSounds    ( .Actor:Self .ActorSound:Jump 00000301 00000000 )
  18C:  Call  GetActorPos       ( .Actor:Self *Var0 *Var1 *Var2 )
  1A8:  Set   *Var1  00000000
  1B8:  Call  SetActorJumpGravity   ( .Actor:Self *Fixed[0.8] )
  1CC:  Call  SetGoalPos        ( .Actor:Self *Var0 *Var1 *Var2 )
  1E8:  Call  JumpToGoal        ( .Actor:Self  15` .False .True .False )
  208:  Call  $Function_80218280    ( 00000064 0000000A )
  21C:  Thread
  224:  	Call  ShakeCam  ( .Cam:Battle 00000000  5` *Fixed[0.3] )
  240:  EndThread
  248:  Call  ResetActorSounds  ( .Actor:Self .ActorSound:Jump )
  25C:  Call  GetLastEvent      ( .Actor:Self *Var3 )
  270:  If  *Var3  ==  0000000F % F
  280:  	Call  SetAnimation  ( .Actor:Self 00000001 00260005 )
  298:  	Call  GetActorPos   ( .Actor:Self *Var3 *Var4 *Var5 )
  2B4:  	Add   *Var4  0000000A
  2C4:  	Add   *Var5  00000005
  2D4:  	Call  PlayEffect    ( ~FX:SmokeBurst:Black *Var3 *Var4 *Var5 *Fixed[1.0] 0000000A 00000000 00000000 00000000 00000000 00000000 00000000 00000000 )
  318:  EndIf
  320:  Call  SetGoalPos    ( .Actor:Self *Var0 *Var1 *Var2 )
  33C:  Call  JumpToGoal    ( .Actor:Self  10` .False .True .False )
  35C:  Call  SetGoalPos    ( .Actor:Self *Var0 *Var1 *Var2 )
  378:  Call  JumpToGoal    ( .Actor:Self  5` .False .True .False )
  398:  Loop  0000000A
  3A4:  	Call  SetPartFlagBits   ( .Actor:Self 00000003 00000001 .True )
  3C0:  	Call  SetPartFlagBits   ( .Actor:Self 00000004 00000001 .True )
  3DC:  	Wait  1`
  3E8:  	Call  SetPartFlagBits   ( .Actor:Self 00000003 00000001 .False )
  404:  	Call  SetPartFlagBits   ( .Actor:Self 00000004 00000001 .False )
  420:  	Wait  1`
  42C:  EndLoop
  434:  Call  SetPartFlagBits   ( .Actor:Self 00000003 00000001 .True )
  450:  Call  SetPartFlagBits   ( .Actor:Self 00000004 00000001 .True )
  46C:  Call  GetIndexFromHome  ( .Actor:Self *Var0 )
  480:  Mod   *Var0  00000004
  490:  Call  SetGoalToIndex    ( .Actor:Self *Var0 )
  4A4:  Call  GetGoalPos        ( .Actor:Self *Var0 *Var1 *Var2 )
  4C0:  Call  SetHomePos        ( .Actor:Self *Var0 *Var1 *Var2 )
  4DC:  Call  SetAnimation      ( .Actor:Self 00000001 00260001 )
  4F4:  Call  SetActorFlagBits  ( .Actor:Self 00000200 .False )
  50C:  Call  SetStatusTable    ( .Actor:Self $StatusTable_8021B128 )
  520:  Call  SetActorType      ( .Actor:Self 00000007 )
  534:  ExecWait  $Script_8021CB94
  540:  Call  SetActorFlagBits  ( .Actor:Self 00001000 .True )
  558:  Call  HPBarToHome       ( .Actor:Self )
  568:  Call  ResetAllActorSounds   ( .Actor:Self )
  578:  Return
  580:  End
}

#new:IdleAnimations $IdleAnimations_8021CAFC
{
	.Status:Normal    00260001
	.Status:Stone     00260000
	.Status:Sleep     00260008
	.Status:Poison    00260001
	.Status:Stop      00260000
	.Status:Static    00260001
	.Status:Paralyze  00260000
	.Status:Dizzy     00260007
	.Status:Fear      00260007
	.Status:End
}

#new:IdleAnimations $IdleAnimations_8021CB48
{
	.Status:Normal    00260003
	.Status:Stone     00260000
	.Status:Sleep     00260008
	.Status:Poison    00260001
	.Status:Stop      00260000
	.Status:Static    00260003
	.Status:Paralyze  00260000
	.Status:Dizzy     00260007
	.Status:Fear      00260007
	.Status:End
}

#new:Script $Script_8021CB94
{
    0:  Call  BindTakeTurn      ( .Actor:Self $Script_TakeTurn_8021D6E8 )
   14:  Call  BindIdle  ( .Actor:Self $Script_Idle_8021CBE0 )
   28:  Call  BindHandleEvent   ( .Actor:Self $Script_HandleEvent_8021CEBC )
   3C:  Return
   44:  End
}

#new:Script $Script_Idle_8021CBE0
{
    0:  Label  A
    C:  Call  RandInt   ( 00000050 *Var0 )
   20:  Add   *Var0  00000050
   30:  Loop  *Var0
   3C:  	Label  0
   48:  	Call  GetStatusFlags    ( .Actor:Self *Var1 )
   5C:  	If  *Var1  &  ~Flags:StatusFlags:Sleep|Frozen|Fear|Paralyze|Dizzy|Stone|Stop % 35D000
   6C:  		Wait  1`
   78:  		Goto  0
   84:  	EndIf
   8C:  	Wait  1`
   98:  EndLoop
   A0:  Call  GetActorPos       ( .Actor:Self *Var0 *Var1 *Var2 )
   BC:  Add   *Var0  00000005
   CC:  Call  SetActorIdleSpeed ( .Actor:Self *Fixed[1.0] )
   E0:  Call  SetIdleAnimations ( .Actor:Self 00000001 $IdleAnimations_8021CB48 )
   F8:  Call  SetIdleGoal       ( .Actor:Self *Var0 *Var1 *Var2 )
  114:  Call  IdleRunToGoal     ( .Actor:Self  0` )
  128:  Call  SetIdleAnimations ( .Actor:Self 00000001 $IdleAnimations_8021CAFC )
  140:  Loop  00000014
  14C:  	Label  1
  158:  	Call  GetStatusFlags    ( .Actor:Self *Var1 )
  16C:  	If  *Var1  &  ~Flags:StatusFlags:Sleep|Frozen|Fear|Paralyze|Dizzy|Stone|Stop % 35D000
  17C:  		Wait  1`
  188:  		Goto  1
  194:  	EndIf
  19C:  	Wait  1`
  1A8:  EndLoop
  1B0:  Call  GetActorPos       ( .Actor:Self *Var0 *Var1 *Var2 )
  1CC:  Sub   *Var0  00000005
  1DC:  Call  SetActorIdleSpeed ( .Actor:Self *Fixed[1.0] )
  1F0:  Call  SetIdleAnimations ( .Actor:Self 00000001 $IdleAnimations_8021CB48 )
  208:  Call  SetIdleGoal       ( .Actor:Self *Var0 *Var1 *Var2 )
  224:  Call  IdleRunToGoal     ( .Actor:Self  0` )
  238:  Call  SetIdleAnimations ( .Actor:Self 00000001 $IdleAnimations_8021CAFC )
  250:  Loop  00000050
  25C:  	Label  2
  268:  	Call  GetStatusFlags    ( .Actor:Self *Var1 )
  27C:  	If  *Var1  &  ~Flags:StatusFlags:Sleep|Frozen|Fear|Paralyze|Dizzy|Stone|Stop % 35D000
  28C:  		Wait  1`
  298:  		Goto  2
  2A4:  	EndIf
  2AC:  	Wait  1`
  2B8:  EndLoop
  2C0:  Goto  A
  2CC:  Return
  2D4:  End
}

#new:Script $Script_HandleEvent_8021CEBC
{
    0:  Call  UseIdleAnimation  ( .Actor:Self .False )
   14:  Call  EnableIdleScript  ( .Actor:Self 00000000 )
   28:  Call  SetActorScale     ( .Actor:Self *Fixed[1.0] *Fixed[1.0] *Fixed[1.0] )
   44:  Call  GetLastEvent      ( .Actor:Self *Var0 )
   58:  Switch  *Var0
   64:  	CaseOR  ==  .Event:HitCombo % 9
   70:  	CaseOR  ==  .Event:Hit % A
   7C:  		SetConst  *Var0  00000001
   8C:  		SetConst  *Var1  00260005
   9C:  		ExecWait  DoNormalHit
   A8:  	EndCaseGroup
   B0:  	Case  ==  .Event:BurnHit % E
   BC:  		SetConst  *Var0  00000001
   CC:  		SetConst  *Var1  00260009
   DC:  		SetConst  *Var2  0026000A
   EC:  		ExecWait  DoBurnHit
   F8:  	Case  ==  .Event:BurnDeath % 24
  104:  		SetConst  *Var0  00000001
  114:  		SetConst  *Var1  00260009
  124:  		SetConst  *Var2  0026000A
  134:  		ExecWait  DoBurnHit
  140:  		SetConst  *Var0  00000001
  150:  		SetConst  *Var1  0026000A
  160:  		ExecWait  DoDeath
  16C:  		Return
  174:  	Case  ==  .Event:SpinSmashHit % B
  180:  		SetConst  *Var0  00000001
  190:  		SetConst  *Var1  00260005
  1A0:  		ExecWait  DoSpinSmashHit
  1AC:  	Case  ==  .Event:SpinSmashDeath % 21
  1B8:  		SetConst  *Var0  00000001
  1C8:  		SetConst  *Var1  00260005
  1D8:  		ExecWait  DoSpinSmashHit
  1E4:  		SetConst  *Var0  00000001
  1F4:  		SetConst  *Var1  00260006
  204:  		ExecWait  DoDeath
  210:  		Return
  218:  	Case  ==  .Event:ShockHit % 2F
  224:  		SetConst  *Var0  00000001
  234:  		SetConst  *Var1  0026000E
  244:  		ExecWait  DoShockHit
  250:  		SetConst  *Var0  00000001
  260:  		SetConst  *Var1  00260005
  270:  		ExecWait  DoJumpBack
  27C:  		Call  JumpToGoal    ( .Actor:Self  5` .False .True .False )
  29C:  		Call  SetAnimationRate      ( .Actor:Self 00000001 *Fixed[2.0] )
  2B4:  		Call  SetAnimation  ( .Actor:Self 00000001 00260007 )
  2CC:  		Call  SetGoalToHome ( .Actor:Self )
  2DC:  		Call  SetActorSpeed ( .Actor:Self *Fixed[8.0] )
  2F0:  		Call  RunToGoal     ( .Actor:Self  0` .False )
  308:  		Call  SetAnimationRate      ( .Actor:Self 00000001 *Fixed[1.0] )
  320:  		Wait  5`
  32C:  		Call  SetAnimation  ( .Actor:Self 00000001 00260001 )
  344:  		Call  SetActorJumpGravity   ( .Actor:Self *Fixed[1.6] )
  358:  		Call  JumpToGoal    ( .Actor:Self  5` .False .True .False )
  378:  	Case  ==  .Event:ShockDeath % 26
  384:  		SetConst  *Var0  00000001
  394:  		SetConst  *Var1  0026000E
  3A4:  		ExecWait  DoShockHit
  3B0:  		SetConst  *Var0  00000001
  3C0:  		SetConst  *Var1  00260006
  3D0:  		ExecWait  DoDeath
  3DC:  		Return
  3E4:  	Case  ==  .Event:StarBeam % 13
  3F0:  	CaseOR  ==  00000017 % 17
  3FC:  	CaseOR  ==  .Event:Immune % 19
  408:  	CaseOR  ==  .Event:AirLiftFailed % 1F
  414:  		SetConst  *Var0  00000001
  424:  		SetConst  *Var1  00260001
  434:  		ExecWait  DoImmune
  440:  	EndCaseGroup
  448:  	Case  ==  .Event:Death % 20
  454:  		SetConst  *Var0  00000001
  464:  		SetConst  *Var1  00260005
  474:  		ExecWait  DoNormalHit
  480:  		Wait  10`
  48C:  		SetConst  *Var0  00000001
  49C:  		SetConst  *Var1  00260006
  4AC:  		ExecWait  DoDeath
  4B8:  		Return
  4C0:  	Case  ==  .Event:EndFirstStrike % 35
  4CC:  		Call  SetAnimationRate  ( .Actor:Self 00000001 *Fixed[2.0] )
  4E4:  		Call  SetAnimation  ( .Actor:Self 00000001 00260003 )
  4FC:  		Call  SetGoalToHome ( .Actor:Self )
  50C:  		Call  SetActorSpeed ( .Actor:Self *Fixed[4.0] )
  520:  		Call  RunToGoal     ( .Actor:Self  0` .False )
  538:  		Call  SetAnimationRate  ( .Actor:Self 00000001 *Fixed[1.0] )
  550:  		Call  HPBarToHome   ( .Actor:Self )
  560:  	Case  ==  .Event:RecoverStatus % 31
  56C:  		SetConst  *Var0  00000001
  57C:  		SetConst  *Var1  00260001
  58C:  		ExecWait  DoRecover
  598:  	Case  ==  .Event:ScareAway % 39
  5A4:  		SetConst  *Var0  00000001
  5B4:  		SetConst  *Var1  00260003
  5C4:  		SetConst  *Var2  00260005
  5D4:  		ExecWait  DoScareAway
  5E0:  		Return
  5E8:  	Case  ==  .Event:BeginAirLift % 3A
  5F4:  		SetConst  *Var0  00000001
  604:  		SetConst  *Var1  00260003
  614:  		ExecWait  DoAirLift
  620:  	Case  ==  .Event:BlowAway % 16
  62C:  		SetConst  *Var0  00000001
  63C:  		SetConst  *Var1  00260005
  64C:  		ExecWait  DoBlowAway
  658:  		Return
  660:  	Default
  668:  EndSwitch
  670:  Call  SetAnimation      ( .Actor:Self 00000001 00260001 )
  688:  Call  EnableIdleScript  ( .Actor:Self 00000001 )
  69C:  Call  UseIdleAnimation  ( .Actor:Self .True )
  6B0:  Return
  6B8:  End
}

#new:FloatTable $FloatTable_8021D57C
{
	0.0      0.017452 0.034899 0.052336 0.069756 0.087156 0.104528 0.121869
	0.139173 0.156434 0.173648 0.190809 0.207912 0.224951 0.241922 0.258819
	0.275637 0.292372 0.309017 0.325568 0.34202  0.358368 0.374607 0.390731
	0.406737 0.422618 0.438371 0.45399  0.469472 0.48481  0.5      0.515038
	0.529919 0.544639 0.559193 0.573576 0.587785 0.601815 0.615661 0.62932
	0.642788 0.656059 0.669131 0.681998 0.694658 0.707107 0.71934  0.731354
	0.743145 0.75471  0.766044 0.777146 0.788011 0.798636 0.809017 0.819152
	0.829038 0.838671 0.848048 0.857167 0.866025 0.87462  0.882948 0.891007
	0.898794 0.906308 0.913545 0.920505 0.927184 0.93358  0.939693 0.945519
	0.951057 0.956305 0.961262 0.965926 0.970296 0.97437  0.978148 0.981627
	0.984808 0.987688 0.990268 0.992546 0.994522 0.996195 0.997564 0.99863
	0.999391 0.999848 1.0
}

#new:Script $Script_TakeTurn_8021D6E8
{
    0:  Call  UseIdleAnimation  ( .Actor:Self .False )
   14:  Call  EnableIdleScript  ( .Actor:Self 00000000 )
   28:  Call  SetTargetActor    ( .Actor:Self .Actor:Player )
   3C:  Call  UseBattleCamPreset    ( 0000003F )
   4C:  Call  BattleCamTargetActor  ( .Actor:Self )
   5C:  Call  8024ECF8  ( FFFFFFFF 00000001 00000000 )
   74:  Call  SetAnimation      ( .Actor:Self 00000001 00260003 )
   8C:  Call  SetGoalToTarget   ( .Actor:Self )
   9C:  Call  AddGoalPos        ( .Actor:Self  50`  0`  0` )
   B8:  Call  SetActorSpeed     ( .Actor:Self *Fixed[6.0] )
   CC:  Call  RunToGoal ( .Actor:Self  0` .False )
   E4:  Call  SetAnimation      ( .Actor:Self 00000001 00260001 )
   FC:  Call  SetActorDispOffset    ( .Actor:Self 00000000 FFFFFFFF 00000000 )
  118:  Wait  1`
  124:  Call  SetActorDispOffset    ( .Actor:Self 00000000 FFFFFFFE 00000000 )
  140:  Wait  5`
  14C:  Call  SetActorDispOffset    ( .Actor:Self 00000000 00000000 00000000 )
  168:  Call  SetAnimation      ( .Actor:Self 00000001 00260004 )
  180:  Call  EnemyTestTarget   ( .Actor:Self *Var0 ~Flags:DamageType:0 00000000 00000001 00000010 )
  1A4:  Switch  *Var0
  1B0:  	CaseOR  ==  .HitResult:Miss % 6
  1BC:  	CaseOR  ==  .HitResult:Lucky % 5
  1C8:  		Set   *VarA  *Var0
  1D8:  		Call  SetGoalToTarget   ( .Actor:Self )
  1E8:  		Call  GetGoalPos        ( .Actor:Self *Var0 *Var1 *Var2 )
  204:  		Sub   *Var0  0000000A
  214:  		Set   *Var1  0000000A
  224:  		Add   *Var2  00000003
  234:  		Call  SetGoalPos        ( .Actor:Self *Var0 *Var1 *Var2 )
  250:  		Call  SetActorJumpGravity   ( .Actor:Self *Fixed[1.2] )
  264:  		Thread
  26C:  			Call  GetActorPos   ( .Actor:Self *Var1 *Var2 *Var0 )
  288:  			Set   *Var0  00000000
  298:  			Loop  00000010
  2A4:  				Call  GetActorPos   ( .Actor:Self *Var4 *Var5 *Var6 )
  2C0:  				Call  $Function_80218464    ( *Var1 *Var2 *Var4 *Var5 *Var0 )
  2E0:  				Call  SetActorRotation      ( .Actor:Self 00000000 00000000 *Var0 )
  2FC:  				Set   *Var1  *Var4
  30C:  				Set   *Var2  *Var5
  31C:  				Set   *Var3  *Var6
  32C:  				Wait  1`
  338:  			EndLoop
  340:  		EndThread
  348:  		Thread
  350:  			Wait  6`
  35C:  			Call  SetAnimation  ( .Actor:Self 00000001 00260004 )
  374:  		EndThread
  37C:  		Call  JumpToGoal    ( .Actor:Self  16` .False .True .False )
  39C:  		Call  SetAnimation  ( .Actor:Self 00000001 00260008 )
  3B4:  		Call  SetActorScale ( .Actor:Self *Fixed[1.1] *Fixed[0.8] *Fixed[1.0] )
  3D0:  		Call  SetActorDispOffset    ( .Actor:Self 00000000 00000005 00000000 )
  3EC:  		Wait  1`
  3F8:  		Call  SetActorScale ( .Actor:Self *Fixed[1.3] *Fixed[0.5] *Fixed[1.0] )
  414:  		Call  SetActorDispOffset    ( .Actor:Self 00000000 FFFFFFFE 00000000 )
  430:  		Wait  1`
  43C:  		Call  SetActorScale ( .Actor:Self *Fixed[1.0] *Fixed[1.0] *Fixed[1.0] )
  458:  		Call  SetActorDispOffset    ( .Actor:Self 00000000 00000007 00000000 )
  474:  		Call  SetAnimation  ( .Actor:Self 00000001 00260005 )
  48C:  		Wait  5`
  498:  		If  *VarA  ==  .HitResult:Lucky % 5
  4A8:  			Call  EnemyTestTarget   ( .Actor:Self *Var0 ~Flags:DamageType:TriggerLucky 00000000 00000000 00000000 )
  4CC:  		EndIf
  4D4:  		Wait  5`
  4E0:  		Call  SetActorDispOffset    ( .Actor:Self 00000000 00000000 00000000 )
  4FC:  		Call  SetAnimation      ( .Actor:Self 00000001 00260004 )
  514:  		Call  SetGoalToTarget   ( .Actor:Self )
  524:  		Call  GetGoalPos        ( .Actor:Self *Var0 *Var1 *Var2 )
  540:  		Add   *Var0  00000014
  550:  		Set   *Var1  00000000
  560:  		Call  SetGoalPos        ( .Actor:Self *Var0 *Var1 *Var2 )
  57C:  		Call  SetActorJumpGravity   ( .Actor:Self *Fixed[2.0] )
  590:  		Thread
  598:  			Wait  4`
  5A4:  			Set   *Var0  000000B4
  5B4:  			Loop  00000004
  5C0:  				Sub   *Var0  0000002D
  5D0:  				Call  SetActorRotation  ( .Actor:Self 00000000 00000000 *Var0 )
  5EC:  				Wait  1`
  5F8:  			EndLoop
  600:  			Call  SetAnimation  ( .Actor:Self 00000001 00260004 )
  618:  		EndThread
  620:  		Call  JumpToGoal        ( .Actor:Self  15` .False .True .False )
  640:  		Call  SetAnimation      ( .Actor:Self 00000001 00260007 )
  658:  		Wait  5`
  664:  		Call  UseBattleCamPreset    ( 00000002 )
  674:  		Call  YieldTurn ( )
  680:  		Call  SetActorYaw       ( .Actor:Self  180` )
  694:  		Call  AddActorDecoration    ( .Actor:Self 00000001 00000000 .Decoration:Sweat )
  6B0:  		Call  SetAnimationRate  ( .Actor:Self 00000001 *Fixed[2.0] )
  6C8:  		Call  SetGoalToHome     ( .Actor:Self )
  6D8:  		Call  SetActorSpeed     ( .Actor:Self *Fixed[8.0] )
  6EC:  		Call  RunToGoal ( .Actor:Self  0` .False )
  704:  		Call  SetAnimationRate  ( .Actor:Self 00000001 *Fixed[1.0] )
  71C:  		Call  SetActorYaw       ( .Actor:Self  0` )
  730:  		Wait  5`
  73C:  		Call  SetAnimation      ( .Actor:Self 00000001 00260001 )
  754:  		Call  SetActorJumpGravity   ( .Actor:Self *Fixed[1.6] )
  768:  		Call  JumpToGoal        ( .Actor:Self  5` .False .True .False )
  788:  		Call  RemoveActorDecoration ( .Actor:Self 00000001 00000000 )
  7A0:  		Call  EnableIdleScript  ( .Actor:Self 00000001 )
  7B4:  		Call  UseIdleAnimation  ( .Actor:Self .True )
  7C8:  		Return
  7D0:  	EndCaseGroup
  7D8:  	Default
  7E0:  		Call  SetGoalToTarget       ( .Actor:Self )
  7F0:  		Call  SetActorJumpGravity   ( .Actor:Self *Fixed[1.2] )
  804:  		Thread
  80C:  			Call  GetActorPos   ( .Actor:Self *Var1 *Var2 *Var0 )
  828:  			Set   *Var0  00000000
  838:  			Loop  00000010
  844:  				Call  GetActorPos   ( .Actor:Self *Var4 *Var5 *Var6 )
  860:  				Call  $Function_80218464    ( *Var1 *Var2 *Var4 *Var5 *Var0 )
  880:  				Call  SetActorRotation      ( .Actor:Self 00000000 00000000 *Var0 )
  89C:  				Set   *Var1  *Var4
  8AC:  				Set   *Var2  *Var5
  8BC:  				Set   *Var3  *Var6
  8CC:  				Wait  1`
  8D8:  			EndLoop
  8E0:  		EndThread
  8E8:  		Thread
  8F0:  			Wait  6`
  8FC:  			Call  SetAnimation  ( .Actor:Self 00000001 00260004 )
  914:  		EndThread
  91C:  		Call  JumpToGoal    ( .Actor:Self  16` .False .True .False )
  93C:  		Call  SetAnimation  ( .Actor:Self 00000001 0026000B )
  954:  		Call  SetActorScale ( .Actor:Self *Fixed[1.1] *Fixed[0.8] *Fixed[1.0] )
  970:  		Wait  1`
  97C:  		Call  SetActorScale ( .Actor:Self *Fixed[1.3] *Fixed[0.5] *Fixed[1.0] )
  998:  		Wait  1`
  9A4:  EndSwitch
  9AC:  Call  EnemyDamageTarget ( .Actor:Self *Var0 ~Flags:DamageType:0 00000000 00000000 00000001 00000020 )
  9D4:  Switch  *Var0
  9E0:  	CaseOR  ==  .HitResult:Hit % 0
  9EC:  	CaseOR  ==  .HitResult:QuakeImmune % 2
  9F8:  		Call  UseBattleCamPreset    ( 00000002 )
  A08:  		Call  SetActorScale ( .Actor:Self *Fixed[1.1] *Fixed[0.8] *Fixed[1.0] )
  A24:  		Wait  1`
  A30:  		Call  SetActorScale ( .Actor:Self *Fixed[1.0] *Fixed[1.0] *Fixed[1.0] )
  A4C:  		Wait  1`
  A58:  		Call  SetActorRotation      ( .Actor:Self 00000000 00000000 00000000 )
  A74:  		Call  SetActorDispOffset    ( .Actor:Self 00000000 00000000 00000000 )
  A90:  		Call  SetAnimation  ( .Actor:Self 00000001 00260001 )
  AA8:  		Call  GetGoalPos    ( .Actor:Self *Var0 *Var1 *Var2 )
  AC4:  		Add   *Var0  00000028
  AD4:  		Set   *Var1  00000000
  AE4:  		Call  SetActorJumpGravity   ( .Actor:Self *Fixed[1.8] )
  AF8:  		Call  SetGoalPos    ( .Actor:Self *Var0 *Var1 *Var2 )
  B14:  		Call  JumpToGoal    ( .Actor:Self  10` .False .True .False )
  B34:  		Add   *Var0  0000001E
  B44:  		Call  SetGoalPos    ( .Actor:Self *Var0 *Var1 *Var2 )
  B60:  		Call  JumpToGoal    ( .Actor:Self  8` .False .True .False )
  B80:  		Add   *Var0  00000014
  B90:  		Call  SetGoalPos    ( .Actor:Self *Var0 *Var1 *Var2 )
  BAC:  		Call  JumpToGoal    ( .Actor:Self  6` .False .True .False )
  BCC:  		Call  SetAnimation  ( .Actor:Self 00000001 00260001 )
  BE4:  		Wait  3`
  BF0:  		Call  YieldTurn ( )
  BFC:  		Call  SetAnimationRate      ( .Actor:Self 00000001 *Fixed[2.0] )
  C14:  		Call  SetAnimation  ( .Actor:Self 00000001 00260003 )
  C2C:  		Call  SetGoalToHome ( .Actor:Self )
  C3C:  		Call  SetActorSpeed ( .Actor:Self *Fixed[8.0] )
  C50:  		Call  RunToGoal     ( .Actor:Self  0` .False )
  C68:  		Call  SetAnimationRate      ( .Actor:Self 00000001 *Fixed[1.0] )
  C80:  	EndCaseGroup
  C88:  EndSwitch
  C90:  Call  EnableIdleScript  ( .Actor:Self 00000001 )
  CA4:  Call  UseIdleAnimation  ( .Actor:Self .True )
  CB8:  Return
  CC0:  End
}

#new:DefenseTable $DefenseTable_8021E3B0
{
	.Element:Normal 00000000
	.Element:End
}

#new:StatusTable $StatusTable_8021E3BC
{
	.Status:Normal      0`
	.Status:Default     0`
	.Status:Sleep     100`
	.Status:Poison     80`
	.Status:Frozen    100`
	.Status:Dizzy     100`
	.Status:Fear       80`
	.Status:Static     80`
	.Status:Paralyze  100`
	.Status:Shrink    100`
	.Status:Stop      100`
	.Status:DefaultTurnMod    0`
	.Status:SleepTurnMod      0`
	.Status:PoisonTurnMod     0`
	.Status:FrozenTurnMod     0`
	.Status:DizzyTurnMod      0`
	.Status:FearTurnMod       0`
	.Status:StaticTurnMod     0`
	.Status:ParalyzeTurnMod   0`
	.Status:ShrinkTurnMod     0`
	.Status:StopTurnMod       0`
	.Status:End
}

#new:PartsTable $PartsTable_8021E468
{
	00800000 01000000 001800FF $IdleAnimations_8021E4B4 $DefenseTable_8021E3B0 00000010 00000000 00F40000 00000000
}

#new:Actor $SpikedGoomba
{
	% stats
	[Index]         9b
	[Level]         6`b
	[MaxHP]         2`b
	[Coins]         1`b
	[Flags]       00000000
	[StatusTable] $StatusTable_8021E3BC
	% ai
	[PartsCount]    1`s
	[PartsTable]  $PartsTable_8021E468
	[Script]      $Script_Init_8021E54C
	% move effectiveness
	[Escape]       90`b
	[Item]        100`b
	[AirLift]      95`b
	[Hurricane]    90`b % Bow's "Spook" as well
	[UpAndAway]    95`b
	[PowerBounce] 100`b
	[SpinSmash]     0`b % weight (0-4)
	% ui positions
	[Size]         24`b  28`b % width height
	[HealthBar]     0`b   0`b % dx dy
	[StatusTurn]  -10`b  20`b % dx dy
	[StatusIcon]   10`b  20`b % dx dy
}

#new:IdleAnimations $IdleAnimations_8021E4B4
{
	.Status:Normal    00270001
	.Status:Stone     00270000
	.Status:Sleep     0027000A
	.Status:Poison    00270001
	.Status:Stop      00270000
	.Status:Static    00270001
	.Status:Paralyze  00270000
	.Status:Dizzy     00270009
	.Status:Fear      00270009
	.Status:End
}

#new:IdleAnimations $IdleAnimations_8021E500
{
	.Status:Normal    00270003
	.Status:Stone     00270000
	.Status:Sleep     0027000A
	.Status:Poison    00270001
	.Status:Stop      00270000
	.Status:Static    00270003
	.Status:Paralyze  00270000
	.Status:Dizzy     00270009
	.Status:Fear      00270009
	.Status:End
}

#new:Script $Script_Init_8021E54C
{
    0:  Call  BindTakeTurn      ( .Actor:Self $Script_TakeTurn_8021F1BC )
   14:  Call  BindIdle  ( .Actor:Self $Script_Idle_8021E598 )
   28:  Call  BindHandleEvent   ( .Actor:Self $Script_HandleEvent_8021E874 )
   3C:  Return
   44:  End
}

#new:Script $Script_Idle_8021E598
{
    0:  Label  A
    C:  Call  RandInt   ( 00000050 *Var0 )
   20:  Add   *Var0  00000050
   30:  Loop  *Var0
   3C:  	Label  0
   48:  	Call  GetStatusFlags    ( .Actor:Self *Var1 )
   5C:  	If  *Var1  &  ~Flags:StatusFlags:Sleep|Frozen|Fear|Paralyze|Dizzy|Stone|Stop % 35D000
   6C:  		Wait  1`
   78:  		Goto  0
   84:  	EndIf
   8C:  	Wait  1`
   98:  EndLoop
   A0:  Call  GetActorPos       ( .Actor:Self *Var0 *Var1 *Var2 )
   BC:  Add   *Var0  00000005
   CC:  Call  SetActorIdleSpeed ( .Actor:Self *Fixed[1.0] )
   E0:  Call  SetIdleAnimations ( .Actor:Self 00000001 $IdleAnimations_8021E500 )
   F8:  Call  SetIdleGoal       ( .Actor:Self *Var0 *Var1 *Var2 )
  114:  Call  IdleRunToGoal     ( .Actor:Self  0` )
  128:  Call  SetIdleAnimations ( .Actor:Self 00000001 $IdleAnimations_8021E4B4 )
  140:  Loop  00000014
  14C:  	Label  1
  158:  	Call  GetStatusFlags    ( .Actor:Self *Var1 )
  16C:  	If  *Var1  &  ~Flags:StatusFlags:Sleep|Frozen|Fear|Paralyze|Dizzy|Stone|Stop % 35D000
  17C:  		Wait  1`
  188:  		Goto  1
  194:  	EndIf
  19C:  	Wait  1`
  1A8:  EndLoop
  1B0:  Call  GetActorPos       ( .Actor:Self *Var0 *Var1 *Var2 )
  1CC:  Sub   *Var0  00000005
  1DC:  Call  SetActorIdleSpeed ( .Actor:Self *Fixed[1.0] )
  1F0:  Call  SetIdleAnimations ( .Actor:Self 00000001 $IdleAnimations_8021E500 )
  208:  Call  SetIdleGoal       ( .Actor:Self *Var0 *Var1 *Var2 )
  224:  Call  IdleRunToGoal     ( .Actor:Self  0` )
  238:  Call  SetIdleAnimations ( .Actor:Self 00000001 $IdleAnimations_8021E4B4 )
  250:  Loop  00000050
  25C:  	Label  2
  268:  	Call  GetStatusFlags    ( .Actor:Self *Var1 )
  27C:  	If  *Var1  &  ~Flags:StatusFlags:Sleep|Frozen|Fear|Paralyze|Dizzy|Stone|Stop % 35D000
  28C:  		Wait  1`
  298:  		Goto  2
  2A4:  	EndIf
  2AC:  	Wait  1`
  2B8:  EndLoop
  2C0:  Goto  A
  2CC:  Return
  2D4:  End
}

#new:Script $Script_HandleEvent_8021E874
{
    0:  Call  UseIdleAnimation  ( .Actor:Self .False )
   14:  Call  EnableIdleScript  ( .Actor:Self 00000000 )
   28:  Call  SetActorScale     ( .Actor:Self *Fixed[1.0] *Fixed[1.0] *Fixed[1.0] )
   44:  Call  GetLastEvent      ( .Actor:Self *Var0 )
   58:  Switch  *Var0
   64:  	CaseOR  ==  .Event:HitCombo % 9
   70:  	CaseOR  ==  .Event:Hit % A
   7C:  		SetConst  *Var0  00000001
   8C:  		SetConst  *Var1  00270006
   9C:  		ExecWait  DoNormalHit
   A8:  	EndCaseGroup
   B0:  	Case  ==  .Event:BurnHit % E
   BC:  		SetConst  *Var0  00000001
   CC:  		SetConst  *Var1  00270007
   DC:  		SetConst  *Var2  00270008
   EC:  		ExecWait  DoBurnHit
   F8:  	Case  ==  .Event:BurnDeath % 24
  104:  		SetConst  *Var0  00000001
  114:  		SetConst  *Var1  00270007
  124:  		SetConst  *Var2  00270008
  134:  		ExecWait  DoBurnHit
  140:  		SetConst  *Var0  00000001
  150:  		SetConst  *Var1  00270008
  160:  		ExecWait  DoDeath
  16C:  		Return
  174:  	Case  ==  .Event:SpinSmashHit % B
  180:  		SetConst  *Var0  00000001
  190:  		SetConst  *Var1  00270006
  1A0:  		ExecWait  DoSpinSmashHit
  1AC:  	Case  ==  .Event:SpinSmashDeath % 21
  1B8:  		SetConst  *Var0  00000001
  1C8:  		SetConst  *Var1  00270006
  1D8:  		ExecWait  DoSpinSmashHit
  1E4:  		SetConst  *Var0  00000001
  1F4:  		SetConst  *Var1  00270005
  204:  		ExecWait  DoDeath
  210:  		Return
  218:  	Case  ==  .Event:ShockHit % 2F
  224:  		SetConst  *Var0  00000001
  234:  		SetConst  *Var1  0027000C
  244:  		ExecWait  DoShockHit
  250:  		SetConst  *Var0  00000001
  260:  		SetConst  *Var1  00270006
  270:  		ExecWait  DoJumpBack
  27C:  		Call  JumpToGoal    ( .Actor:Self  5` .False .True .False )
  29C:  		Call  SetAnimationRate      ( .Actor:Self 00000001 *Fixed[2.0] )
  2B4:  		Call  SetAnimation  ( .Actor:Self 00000001 00270009 )
  2CC:  		Call  SetGoalToHome ( .Actor:Self )
  2DC:  		Call  SetActorSpeed ( .Actor:Self *Fixed[8.0] )
  2F0:  		Call  RunToGoal     ( .Actor:Self  0` .False )
  308:  		Call  SetAnimationRate      ( .Actor:Self 00000001 *Fixed[1.0] )
  320:  		Wait  5`
  32C:  		Call  SetAnimation  ( .Actor:Self 00000001 00270001 )
  344:  		Call  SetActorJumpGravity   ( .Actor:Self *Fixed[1.6] )
  358:  		Call  JumpToGoal    ( .Actor:Self  5` .False .True .False )
  378:  	Case  ==  .Event:ShockDeath % 26
  384:  		SetConst  *Var0  00000001
  394:  		SetConst  *Var1  0027000C
  3A4:  		ExecWait  DoShockHit
  3B0:  		SetConst  *Var0  00000001
  3C0:  		SetConst  *Var1  00270005
  3D0:  		ExecWait  DoDeath
  3DC:  		Return
  3E4:  	Case  ==  .Event:StarBeam % 13
  3F0:  	CaseOR  ==  00000017 % 17
  3FC:  	CaseOR  ==  .Event:Immune % 19
  408:  	CaseOR  ==  .Event:AirLiftFailed % 1F
  414:  		SetConst  *Var0  00000001
  424:  		SetConst  *Var1  00270001
  434:  		ExecWait  DoImmune
  440:  	EndCaseGroup
  448:  	Case  ==  .Event:Death % 20
  454:  		SetConst  *Var0  00000001
  464:  		SetConst  *Var1  00270006
  474:  		ExecWait  DoNormalHit
  480:  		Wait  10`
  48C:  		SetConst  *Var0  00000001
  49C:  		SetConst  *Var1  00270005
  4AC:  		ExecWait  DoDeath
  4B8:  		Return
  4C0:  	Case  ==  .Event:EndFirstStrike % 35
  4CC:  		Call  SetAnimationRate  ( .Actor:Self 00000001 *Fixed[2.0] )
  4E4:  		Call  SetAnimation  ( .Actor:Self 00000001 00270003 )
  4FC:  		Call  SetGoalToHome ( .Actor:Self )
  50C:  		Call  SetActorSpeed ( .Actor:Self *Fixed[4.0] )
  520:  		Call  RunToGoal     ( .Actor:Self  0` .False )
  538:  		Call  SetAnimationRate  ( .Actor:Self 00000001 *Fixed[1.0] )
  550:  		Call  HPBarToHome   ( .Actor:Self )
  560:  	Case  ==  .Event:RecoverStatus % 31
  56C:  		SetConst  *Var0  00000001
  57C:  		SetConst  *Var1  00270001
  58C:  		ExecWait  DoRecover
  598:  	Case  ==  .Event:ScareAway % 39
  5A4:  		SetConst  *Var0  00000001
  5B4:  		SetConst  *Var1  00270003
  5C4:  		SetConst  *Var2  00270006
  5D4:  		ExecWait  DoScareAway
  5E0:  		Return
  5E8:  	Case  ==  .Event:BeginAirLift % 3A
  5F4:  		SetConst  *Var0  00000001
  604:  		SetConst  *Var1  00270003
  614:  		ExecWait  DoAirLift
  620:  	Case  ==  .Event:BlowAway % 16
  62C:  		SetConst  *Var0  00000001
  63C:  		SetConst  *Var1  00270006
  64C:  		ExecWait  DoBlowAway
  658:  		Return
  660:  	Case  ==  .Event:SpikeTaunt % 1B
  66C:  		Call  GetStatusFlags    ( .Actor:Self *Var0 )
  680:  		If  *Var0  !&  ~Flags:StatusFlags:Sleep|Frozen|Fear|Paralyze|Dizzy|Stone|Stop % 35D000
  690:  			Call  SetAnimation  ( .Actor:Self 00000001 0027000B )
  6A8:  		EndIf
  6B0:  		Wait  10`
  6BC:  		Call  GetActorPos       ( .Actor:Self *Var0 *Var1 *Var2 )
  6D8:  		Call  GetStatusFlags    ( .Actor:Self *Var3 )
  6EC:  		If  *Var3  &  ~Flags:StatusFlags:Shrink % 80000
  6FC:  			Add   *Var1  0000000A
  70C:  		Else
  714:  			Add   *Var1  0000001A
  724:  		EndIf
  72C:  		Call  PlayEffect    ( ~FX:LensFlare:Rotating *Var0 *Var1 *Var2 00000014 00000000 00000000 00000000 00000000 00000000 00000000 00000000 00000000 )
  770:  		Wait  20`
  77C:  	Default
  784:  EndSwitch
  78C:  Call  SetAnimation      ( .Actor:Self 00000001 00270001 )
  7A4:  Call  EnableIdleScript  ( .Actor:Self 00000001 )
  7B8:  Call  UseIdleAnimation  ( .Actor:Self .True )
  7CC:  Return
  7D4:  End
}

#new:FloatTable $FloatTable_8021F050
{
	0.0      0.017452 0.034899 0.052336 0.069756 0.087156 0.104528 0.121869
	0.139173 0.156434 0.173648 0.190809 0.207912 0.224951 0.241922 0.258819
	0.275637 0.292372 0.309017 0.325568 0.34202  0.358368 0.374607 0.390731
	0.406737 0.422618 0.438371 0.45399  0.469472 0.48481  0.5      0.515038
	0.529919 0.544639 0.559193 0.573576 0.587785 0.601815 0.615661 0.62932
	0.642788 0.656059 0.669131 0.681998 0.694658 0.707107 0.71934  0.731354
	0.743145 0.75471  0.766044 0.777146 0.788011 0.798636 0.809017 0.819152
	0.829038 0.838671 0.848048 0.857167 0.866025 0.87462  0.882948 0.891007
	0.898794 0.906308 0.913545 0.920505 0.927184 0.93358  0.939693 0.945519
	0.951057 0.956305 0.961262 0.965926 0.970296 0.97437  0.978148 0.981627
	0.984808 0.987688 0.990268 0.992546 0.994522 0.996195 0.997564 0.99863
	0.999391 0.999848 1.0
}

#new:Script $Script_TakeTurn_8021F1BC
{
    0:  Call  UseIdleAnimation  ( .Actor:Self .False )
   14:  Call  EnableIdleScript  ( .Actor:Self 00000000 )
   28:  Call  SetTargetActor    ( .Actor:Self .Actor:Player )
   3C:  Call  UseBattleCamPreset    ( 0000003F )
   4C:  Call  BattleCamTargetActor  ( .Actor:Self )
   5C:  Call  8024ECF8  ( FFFFFFFF 00000001 00000000 )
   74:  Call  SetAnimation      ( .Actor:Self 00000001 00270003 )
   8C:  Call  SetGoalToTarget   ( .Actor:Self )
   9C:  Call  AddGoalPos        ( .Actor:Self  50`  0`  0` )
   B8:  Call  SetActorSpeed     ( .Actor:Self *Fixed[6.0] )
   CC:  Call  RunToGoal ( .Actor:Self  0` .False )
   E4:  Call  SetAnimation      ( .Actor:Self 00000001 00270001 )
   FC:  Call  SetActorDispOffset    ( .Actor:Self 00000000 FFFFFFFF 00000000 )
  118:  Wait  1`
  124:  Call  SetActorDispOffset    ( .Actor:Self 00000000 FFFFFFFE 00000000 )
  140:  Wait  5`
  14C:  Call  SetActorDispOffset    ( .Actor:Self 00000000 00000000 00000000 )
  168:  Call  SetAnimation      ( .Actor:Self 00000001 00270004 )
  180:  Call  EnemyTestTarget   ( .Actor:Self *Var0 ~Flags:DamageType:0 00000000 00000001 00000010 )
  1A4:  Switch  *Var0
  1B0:  	CaseOR  ==  .HitResult:Miss % 6
  1BC:  	CaseOR  ==  .HitResult:Lucky % 5
  1C8:  		Set   *VarA  *Var0
  1D8:  		Call  SetGoalToTarget   ( .Actor:Self )
  1E8:  		Call  GetGoalPos        ( .Actor:Self *Var0 *Var1 *Var2 )
  204:  		Sub   *Var0  0000000A
  214:  		Set   *Var1  0000000A
  224:  		Add   *Var2  00000003
  234:  		Call  SetGoalPos        ( .Actor:Self *Var0 *Var1 *Var2 )
  250:  		Call  SetActorJumpGravity   ( .Actor:Self *Fixed[1.2] )
  264:  		Thread
  26C:  			Call  GetActorPos   ( .Actor:Self *Var1 *Var2 *Var0 )
  288:  			Set   *Var0  00000000
  298:  			Loop  00000010
  2A4:  				Call  GetActorPos   ( .Actor:Self *Var4 *Var5 *Var6 )
  2C0:  				Call  $Function_802186EC    ( *Var1 *Var2 *Var4 *Var5 *Var0 )
  2E0:  				Call  SetActorRotation      ( .Actor:Self 00000000 00000000 *Var0 )
  2FC:  				Set   *Var1  *Var4
  30C:  				Set   *Var2  *Var5
  31C:  				Set   *Var3  *Var6
  32C:  				Wait  1`
  338:  			EndLoop
  340:  		EndThread
  348:  		Thread
  350:  			Wait  6`
  35C:  			Call  SetAnimation  ( .Actor:Self 00000001 00270004 )
  374:  		EndThread
  37C:  		Call  JumpToGoal    ( .Actor:Self  16` .False .True .False )
  39C:  		Call  SetAnimation  ( .Actor:Self 00000001 0027000A )
  3B4:  		Call  SetActorScale ( .Actor:Self *Fixed[1.1] *Fixed[0.8] *Fixed[1.0] )
  3D0:  		Call  SetActorDispOffset    ( .Actor:Self 00000000 00000005 00000000 )
  3EC:  		Wait  1`
  3F8:  		Call  SetActorScale ( .Actor:Self *Fixed[1.3] *Fixed[0.5] *Fixed[1.0] )
  414:  		Call  SetActorDispOffset    ( .Actor:Self 00000000 FFFFFFFE 00000000 )
  430:  		Wait  1`
  43C:  		Call  SetActorScale ( .Actor:Self *Fixed[1.0] *Fixed[1.0] *Fixed[1.0] )
  458:  		Call  SetActorDispOffset    ( .Actor:Self 00000000 00000007 00000000 )
  474:  		Call  SetAnimation  ( .Actor:Self 00000001 00270006 )
  48C:  		Wait  5`
  498:  		If  *VarA  ==  .HitResult:Lucky % 5
  4A8:  			Call  EnemyTestTarget   ( .Actor:Self *Var0 ~Flags:DamageType:TriggerLucky 00000000 00000000 00000000 )
  4CC:  		EndIf
  4D4:  		Wait  5`
  4E0:  		Call  SetActorDispOffset    ( .Actor:Self 00000000 00000000 00000000 )
  4FC:  		Call  SetAnimation      ( .Actor:Self 00000001 00270004 )
  514:  		Call  SetGoalToTarget   ( .Actor:Self )
  524:  		Call  GetGoalPos        ( .Actor:Self *Var0 *Var1 *Var2 )
  540:  		Add   *Var0  00000014
  550:  		Set   *Var1  00000000
  560:  		Call  SetGoalPos        ( .Actor:Self *Var0 *Var1 *Var2 )
  57C:  		Call  SetActorJumpGravity   ( .Actor:Self *Fixed[2.0] )
  590:  		Thread
  598:  			Wait  4`
  5A4:  			Set   *Var0  000000B4
  5B4:  			Loop  00000004
  5C0:  				Sub   *Var0  0000002D
  5D0:  				Call  SetActorRotation  ( .Actor:Self 00000000 00000000 *Var0 )
  5EC:  				Wait  1`
  5F8:  			EndLoop
  600:  			Call  SetAnimation  ( .Actor:Self 00000001 00270004 )
  618:  		EndThread
  620:  		Call  JumpToGoal        ( .Actor:Self  15` .False .True .False )
  640:  		Call  SetAnimation      ( .Actor:Self 00000001 00270009 )
  658:  		Wait  5`
  664:  		Call  UseBattleCamPreset    ( 00000002 )
  674:  		Call  YieldTurn ( )
  680:  		Call  SetActorYaw       ( .Actor:Self  180` )
  694:  		Call  AddActorDecoration    ( .Actor:Self 00000001 00000000 .Decoration:Sweat )
  6B0:  		Call  SetAnimationRate  ( .Actor:Self 00000001 *Fixed[2.0] )
  6C8:  		Call  SetGoalToHome     ( .Actor:Self )
  6D8:  		Call  SetActorSpeed     ( .Actor:Self *Fixed[8.0] )
  6EC:  		Call  RunToGoal ( .Actor:Self  0` .False )
  704:  		Call  SetAnimationRate  ( .Actor:Self 00000001 *Fixed[1.0] )
  71C:  		Call  SetActorYaw       ( .Actor:Self  0` )
  730:  		Wait  5`
  73C:  		Call  SetAnimation      ( .Actor:Self 00000001 00270001 )
  754:  		Call  SetActorJumpGravity   ( .Actor:Self *Fixed[1.6] )
  768:  		Call  JumpToGoal        ( .Actor:Self  5` .False .True .False )
  788:  		Call  RemoveActorDecoration ( .Actor:Self 00000001 00000000 )
  7A0:  		Call  EnableIdleScript  ( .Actor:Self 00000001 )
  7B4:  		Call  UseIdleAnimation  ( .Actor:Self .True )
  7C8:  		Return
  7D0:  	EndCaseGroup
  7D8:  	Default
  7E0:  		Call  SetGoalToTarget       ( .Actor:Self )
  7F0:  		Call  SetActorJumpGravity   ( .Actor:Self *Fixed[1.2] )
  804:  		Thread
  80C:  			Call  GetActorPos   ( .Actor:Self *Var1 *Var2 *Var0 )
  828:  			Set   *Var0  00000000
  838:  			Loop  00000010
  844:  				Call  GetActorPos   ( .Actor:Self *Var4 *Var5 *Var6 )
  860:  				Call  $Function_802186EC    ( *Var1 *Var2 *Var4 *Var5 *Var0 )
  880:  				Call  SetActorRotation      ( .Actor:Self 00000000 00000000 *Var0 )
  89C:  				Set   *Var1  *Var4
  8AC:  				Set   *Var2  *Var5
  8BC:  				Set   *Var3  *Var6
  8CC:  				Wait  1`
  8D8:  			EndLoop
  8E0:  		EndThread
  8E8:  		Thread
  8F0:  			Wait  6`
  8FC:  			Call  SetAnimation  ( .Actor:Self 00000001 00270004 )
  914:  		EndThread
  91C:  		Call  JumpToGoal    ( .Actor:Self  16` .False .True .False )
  93C:  		Call  SetAnimation  ( .Actor:Self 00000001 00270004 )
  954:  		Call  SetActorScale ( .Actor:Self *Fixed[1.1] *Fixed[0.8] *Fixed[1.0] )
  970:  		Wait  1`
  97C:  		Call  SetActorScale ( .Actor:Self *Fixed[1.3] *Fixed[0.5] *Fixed[1.0] )
  998:  		Wait  1`
  9A4:  EndSwitch
  9AC:  Call  EnemyDamageTarget ( .Actor:Self *Var0 ~Flags:DamageType:0 00000000 00000000 00000002 00000020 )
  9D4:  Switch  *Var0
  9E0:  	CaseOR  ==  .HitResult:Hit % 0
  9EC:  	CaseOR  ==  .HitResult:QuakeImmune % 2
  9F8:  		Call  UseBattleCamPreset    ( 00000002 )
  A08:  		Call  SetActorScale ( .Actor:Self *Fixed[1.1] *Fixed[0.8] *Fixed[1.0] )
  A24:  		Wait  1`
  A30:  		Call  SetActorScale ( .Actor:Self *Fixed[1.0] *Fixed[1.0] *Fixed[1.0] )
  A4C:  		Wait  1`
  A58:  		Call  SetActorRotation      ( .Actor:Self 00000000 00000000 00000000 )
  A74:  		Call  SetActorDispOffset    ( .Actor:Self 00000000 00000000 00000000 )
  A90:  		Call  SetAnimation  ( .Actor:Self 00000001 00270001 )
  AA8:  		Call  GetGoalPos    ( .Actor:Self *Var0 *Var1 *Var2 )
  AC4:  		Add   *Var0  00000028
  AD4:  		Set   *Var1  00000000
  AE4:  		Call  SetActorJumpGravity   ( .Actor:Self *Fixed[1.8] )
  AF8:  		Call  SetGoalPos    ( .Actor:Self *Var0 *Var1 *Var2 )
  B14:  		Call  JumpToGoal    ( .Actor:Self  10` .False .True .False )
  B34:  		Add   *Var0  0000001E
  B44:  		Call  SetGoalPos    ( .Actor:Self *Var0 *Var1 *Var2 )
  B60:  		Call  JumpToGoal    ( .Actor:Self  8` .False .True .False )
  B80:  		Add   *Var0  00000014
  B90:  		Call  SetGoalPos    ( .Actor:Self *Var0 *Var1 *Var2 )
  BAC:  		Call  JumpToGoal    ( .Actor:Self  6` .False .True .False )
  BCC:  		Call  GetLastDamage ( .Actor:Player *Var0 )
  BE0:  		If  *Var0  >  00000000
  BF0:  			Call  SetAnimation  ( .Actor:Self 00000001 0027000B )
  C08:  			Wait  15`
  C14:  		Else
  C1C:  			Call  SetAnimation  ( .Actor:Self 00000001 00270001 )
  C34:  			Wait  3`
  C40:  		EndIf
  C48:  		Call  YieldTurn ( )
  C54:  		Call  SetAnimationRate  ( .Actor:Self 00000001 *Fixed[2.0] )
  C6C:  		Call  SetAnimation  ( .Actor:Self 00000001 00270003 )
  C84:  		Call  SetGoalToHome ( .Actor:Self )
  C94:  		Call  SetActorSpeed ( .Actor:Self *Fixed[8.0] )
  CA8:  		Call  RunToGoal     ( .Actor:Self  0` .False )
  CC0:  		Call  SetAnimationRate  ( .Actor:Self 00000001 *Fixed[1.0] )
  CD8:  	EndCaseGroup
  CE0:  EndSwitch
  CE8:  Call  EnableIdleScript  ( .Actor:Self 00000001 )
  CFC:  Call  UseIdleAnimation  ( .Actor:Self .True )
  D10:  Return
  D18:  End
}

PADDING: 8021FEDC to 8021FEE0 (0049507C to 00495080)
00000000

#new:DefenseTable $DefenseTable_8021FEE0
{
	.Element:Normal 00000001
	.Element:Hammer 00000001
	.Element:Jump   00000001
	.Element:Water  00000001
	.Element:Blast  00000001
	.Element:End
}

#new:DefenseTable $DefenseTable_8021FF0C
{
	.Element:Normal 00000000
	.Element:End
}

#new:StatusTable $StatusTable_8021FF18
{
	.Status:Normal      0`
	.Status:Default     0`
	.Status:Sleep      90`
	.Status:Poison     60`
	.Status:Frozen    100`
	.Status:Dizzy      90`
	.Status:Fear        0`
	.Status:Static     80`
	.Status:Paralyze   90`
	.Status:Shrink     90`
	.Status:Stop      100`
	.Status:DefaultTurnMod    0`
	.Status:SleepTurnMod      0`
	.Status:PoisonTurnMod     0`
	.Status:FrozenTurnMod     0`
	.Status:DizzyTurnMod      0`
	.Status:FearTurnMod       0`
	.Status:StaticTurnMod     0`
	.Status:ParalyzeTurnMod   1`
	.Status:ShrinkTurnMod     0`
	.Status:StopTurnMod       0`
	.Status:End
}

#new:PartsTable $PartsTable_8021FFC4
{
	00800000 01000000 FE2400FF $IdleAnimations_80220010 $DefenseTable_8021FEE0 00001000 00000000 00F90000 00000000
}

#new:Actor $KoopaTroopa
{
	% stats
	[Index]         Bb
	[Level]         6`b
	[MaxHP]         4`b
	[Coins]         1`b
	[Flags]       00000000
	[StatusTable] $StatusTable_8021FF18
	% ai
	[PartsCount]    1`s
	[PartsTable]  $PartsTable_8021FFC4
	[Script]      $Script_Init_802200F4
	% move effectiveness
	[Escape]       70`b
	[Item]         90`b
	[AirLift]      90`b
	[Hurricane]    90`b % Bow's "Spook" as well
	[UpAndAway]    95`b
	[PowerBounce] 100`b
	[SpinSmash]     0`b % weight (0-4)
	% ui positions
	[Size]         28`b  36`b % width height
	[HealthBar]     0`b   0`b % dx dy
	[StatusTurn]  -15`b  32`b % dx dy
	[StatusIcon]    5`b  32`b % dx dy
}

#new:IdleAnimations $IdleAnimations_80220010
{
	.Status:Normal    00290101
	.Status:Stone     00290100
	.Status:Sleep     00290111
	.Status:Poison    00290101
	.Status:Stop      00290100
	.Status:Static    00290101
	.Status:Paralyze  00290100
	.Status:Dizzy     00290113
	.Status:Fear      00290113
	.Status:End
}

#new:IdleAnimations $IdleAnimations_8022005C
{
	.Status:Normal    00290103
	.Status:Stone     00290100
	.Status:Sleep     00290111
	.Status:Poison    00290103
	.Status:Stop      00290100
	.Status:Static    00290103
	.Status:Paralyze  00290100
	.Status:Dizzy     00290113
	.Status:Fear      00290113
	.Status:End
}

#new:IdleAnimations $IdleAnimations_802200A8
{
	.Status:Normal    0029010F
	.Status:Stone     00290110
	.Status:Sleep     00290112
	.Status:Poison    0029010F
	.Status:Stop      00290110
	.Status:Static    0029010F
	.Status:Paralyze  00290110
	.Status:Dizzy     00290114
	.Status:Fear      00290114
	.Status:End
}

#new:Script $Script_Init_802200F4
{
    0:  Call  BindTakeTurn  ( .Actor:Self $Script_TakeTurn_8022131C )
   14:  Call  BindIdle      ( .Actor:Self $Script_Idle_802202B0 )
   28:  Call  BindHandleEvent   ( .Actor:Self $Script_HandleEvent_80220798 )
   3C:  Call  SetActorVar   ( .Actor:Self 00000008 00000000 )
   54:  Return
   5C:  End
}

#new:Script $Script_80220158
{
    0:  Switch  *Var0
    C:  	Case  ==  00000000
   18:  		If  *Var1  &  00041000
   28:  			Call  SetTargetOffset       ( .Actor:Self 00000001  -5`  15` )
   44:  			Call  8027D4C8  ( FFFFFF81 00000001 00000000 00000000 )
   60:  			Call  $Function_802187E0    ( FFFFFFF6 00000014 0000000A 00000014 )
   7C:  		Else
   84:  			Call  SetTargetOffset       ( .Actor:Self 00000001  -4`  32` )
   A0:  			Call  8027D4C8  ( FFFFFF81 00000001 FFFFFFFF FFFFFFFC )
   BC:  			Call  $Function_802187E0    ( FFFFFFF1 00000020 00000005 00000020 )
   D8:  		EndIf
   E0:  	Case  ==  00000001
   EC:  		Call  SetTargetOffset       ( .Actor:Self 00000001  -5`  15` )
  108:  		Call  8027D4C8  ( FFFFFF81 00000001 00000000 00000000 )
  124:  		Call  $Function_802187E0    ( FFFFFFF6 00000014 0000000A 00000014 )
  140:  EndSwitch
  148:  Return
  150:  End
}

#new:Script $Script_Idle_802202B0
{
    0:  Label  0
    C:  Call  RandInt   ( 00000050 *VarA )
   20:  Add   *VarA  00000050
   30:  Loop  *VarA
   3C:  	Label  1
   48:  	Call  GetActorVar       ( .Actor:Self 00000008 *Var0 )
   60:  	Call  GetStatusFlags    ( .Actor:Self *Var1 )
   74:  	ExecWait  $Script_80220158
   80:  	If  *Var0  ==  00000001
   90:  		Wait  1`
   9C:  		Goto  1
   A8:  	EndIf
   B0:  	If  *Var1  &  0035D000
   C0:  		Wait  1`
   CC:  		Goto  1
   D8:  	EndIf
   E0:  	Wait  1`
   EC:  EndLoop
   F4:  Call  GetActorPos   ( .Actor:Self *Var0 *Var1 *Var2 )
  110:  Add   *Var0  00000005
  120:  Call  SetActorIdleSpeed ( .Actor:Self *Fixed[1.0] )
  134:  Call  SetIdleAnimations ( .Actor:Self 00000001 $IdleAnimations_8022005C )
  14C:  Call  SetIdleGoal   ( .Actor:Self *Var0 *Var1 *Var2 )
  168:  Call  IdleRunToGoal ( .Actor:Self  0` )
  17C:  Call  GetActorVar   ( .Actor:Self 00000008 *Var0 )
  194:  Switch  *Var0
  1A0:  	Case  ==  00000000
  1AC:  		Call  SetIdleAnimations ( .Actor:Self 00000001 $IdleAnimations_80220010 )
  1C4:  	Case  ==  00000001
  1D0:  		Call  SetIdleAnimations ( .Actor:Self 00000001 $IdleAnimations_802200A8 )
  1E8:  EndSwitch
  1F0:  Loop  00000014
  1FC:  	Label  2
  208:  	Call  GetActorVar       ( .Actor:Self 00000008 *Var0 )
  220:  	Call  GetStatusFlags    ( .Actor:Self *Var1 )
  234:  	ExecWait  $Script_80220158
  240:  	If  *Var0  ==  00000001
  250:  		Wait  1`
  25C:  		Goto  2
  268:  	EndIf
  270:  	If  *Var1  &  0035D000
  280:  		Wait  1`
  28C:  		Goto  2
  298:  	EndIf
  2A0:  	Wait  1`
  2AC:  EndLoop
  2B4:  Call  GetActorPos   ( .Actor:Self *Var0 *Var1 *Var2 )
  2D0:  Sub   *Var0  00000005
  2E0:  Call  SetActorIdleSpeed ( .Actor:Self *Fixed[1.0] )
  2F4:  Call  SetIdleAnimations ( .Actor:Self 00000001 $IdleAnimations_8022005C )
  30C:  Call  SetIdleGoal   ( .Actor:Self *Var0 *Var1 *Var2 )
  328:  Call  IdleRunToGoal ( .Actor:Self  0` )
  33C:  Call  GetActorVar   ( .Actor:Self 00000008 *Var0 )
  354:  Switch  *Var0
  360:  	Case  ==  00000000
  36C:  		Call  SetIdleAnimations ( .Actor:Self 00000001 $IdleAnimations_80220010 )
  384:  	Case  ==  00000001
  390:  		Call  SetIdleAnimations ( .Actor:Self 00000001 $IdleAnimations_802200A8 )
  3A8:  EndSwitch
  3B0:  Loop  00000050
  3BC:  	Label  3
  3C8:  	Call  GetActorVar       ( .Actor:Self 00000008 *Var0 )
  3E0:  	Call  GetStatusFlags    ( .Actor:Self *Var1 )
  3F4:  	ExecWait  $Script_80220158
  400:  	If  *Var0  ==  00000001
  410:  		Wait  1`
  41C:  		Goto  3
  428:  	EndIf
  430:  	If  *Var1  &  0035D000
  440:  		Wait  1`
  44C:  		Goto  3
  458:  	EndIf
  460:  	Wait  1`
  46C:  EndLoop
  474:  Goto  0
  480:  Return
  488:  End
}

#new:IntTable $IntTable_80220740
{
	00000009 00000010 00000016 0000001A 0000001E 00000020 00000021 00000020
	0000001E 0000001A 00000016 00000010 00000009 00000000 00000004 00000006
	00000007 00000006 00000004 00000000 00000002 00000000
}

#new:Script $Script_HandleEvent_80220798
{
    0:  Call  UseIdleAnimation  ( .Actor:Self .False )
   14:  Call  EnableIdleScript  ( .Actor:Self 00000000 )
   28:  Call  SetActorYaw       ( .Actor:Self  0` )
   3C:  Call  GetLastEvent      ( .Actor:Self *Var0 )
   50:  Switch  *Var0
   5C:  	CaseOR  ==  .Event:HitCombo % 9
   68:  	CaseOR  ==  .Event:Hit % A
   74:  		SetConst  *Var0  00000001
   84:  		SetConst  *Var1  0029010B
   94:  		ExecWait  DoNormalHit
   A0:  	EndCaseGroup
   A8:  	Case  ==  .Event:BurnHit % E
   B4:  		SetConst  *Var0  00000001
   C4:  		SetConst  *Var1  0029010C
   D4:  		SetConst  *Var2  0029010D
   E4:  		ExecWait  DoBurnHit
   F0:  	Case  ==  .Event:BurnDeath % 24
   FC:  		SetConst  *Var0  00000001
  10C:  		SetConst  *Var1  0029010C
  11C:  		SetConst  *Var2  0029010D
  12C:  		ExecWait  DoBurnHit
  138:  		SetConst  *Var0  00000001
  148:  		SetConst  *Var1  0029010D
  158:  		ExecWait  DoDeath
  164:  		Return
  16C:  	Case  ==  .Event:SpinSmashHit % B
  178:  		SetConst  *Var0  00000001
  188:  		SetConst  *Var1  0029010B
  198:  		ExecWait  DoSpinSmashHit
  1A4:  	Case  ==  .Event:SpinSmashDeath % 21
  1B0:  		SetConst  *Var0  00000001
  1C0:  		SetConst  *Var1  0029010B
  1D0:  		ExecWait  DoSpinSmashHit
  1DC:  		SetConst  *Var0  00000001
  1EC:  		SetConst  *Var1  0029010B
  1FC:  		ExecWait  DoDeath
  208:  		Return
  210:  	Case  ==  .Event:FlipTrigger % D
  21C:  		Call  SetActorVar       ( .Actor:Self 00000008 00000001 )
  234:  		Call  SetActorVar       ( .Actor:Self 00000009 00000002 )
  24C:  		Call  SetDefenseTable   ( .Actor:Self 00000001 $DefenseTable_8021FF0C )
  264:  		Call  SetIdleAnimations ( .Actor:Self 00000001 $IdleAnimations_802200A8 )
  27C:  		Call  SetTargetOffset   ( .Actor:Self 00000001  -5`  15` )
  298:  		Call  8027D4C8  ( FFFFFF81 00000001 00000000 00000000 )
  2B4:  		Call  SetActorFlagBits  ( .Actor:Self 00000400 .True )
  2CC:  		Call  SetAnimation      ( .Actor:Self 00000001 0029010B )
  2E4:  		Call  GetStatusFlags    ( .Actor:Self *VarA )
  2F8:  		Call  SetActorRotationOffset    ( .Actor:Self 00000000 0000000C 00000000 )
  314:  		ChildThread
  31C:  			Wait  4`
  328:  			Call  SetActorRotation  ( .Actor:Self 00000000 00000000 0000001E )
  344:  			Wait  1`
  350:  			Call  SetActorRotation  ( .Actor:Self 00000000 00000000 00000000 )
  36C:  			Wait  1`
  378:  			Call  SetActorRotation  ( .Actor:Self 00000000 00000000 FFFFFFE2 )
  394:  			Wait  1`
  3A0:  			Call  SetActorRotation  ( .Actor:Self 00000000 00000000 FFFFFFC4 )
  3BC:  			Wait  1`
  3C8:  			Call  SetActorRotation  ( .Actor:Self 00000000 00000000 FFFFFFB5 )
  3E4:  			Wait  1`
  3F0:  		EndChildThread
  3F8:  		UseIntBuffer  $IntTable_80220740
  404:  		Loop  00000016
  410:  			Get1Int  *Var0
  41C:  			Call  SetActorDispOffset    ( .Actor:Self 00000000 *Var0 00000000 )
  438:  			Wait  1`
  444:  		EndLoop
  44C:  		Call  SetActorRotationOffset    ( .Actor:Self 00000000 00000000 00000000 )
  468:  		Call  SetActorRotation      ( .Actor:Self 00000000 00000000 00000000 )
  484:  		Call  SetActorDispOffset    ( .Actor:Self 00000000 00000000 00000000 )
  4A0:  		Call  SetAnimation  ( .Actor:Self 00000001 0029010F )
  4B8:  	Case  ==  .Event:ShockHit % 2F
  4C4:  		SetConst  *Var0  00000001
  4D4:  		SetConst  *Var1  0029010B
  4E4:  		ExecWait  DoShockHit
  4F0:  		SetConst  *Var0  00000001
  500:  		SetConst  *Var1  0029010B
  510:  		ExecWait  DoJumpBack
  51C:  		Call  JumpToGoal    ( .Actor:Self  5` .False .True .False )
  53C:  		SetConst  *Var0  00000001
  54C:  		SetConst  *Var1  00290104
  55C:  		ExecWait  DoReturnHome
  568:  		Call  SetActorJumpGravity   ( .Actor:Self *Fixed[1.6] )
  57C:  		Call  JumpToGoal    ( .Actor:Self  5` .False .True .False )
  59C:  	Case  ==  .Event:ShockDeath % 26
  5A8:  		SetConst  *Var0  00000001
  5B8:  		SetConst  *Var1  0029010B
  5C8:  		ExecWait  DoShockHit
  5D4:  		SetConst  *Var0  00000001
  5E4:  		SetConst  *Var1  0029010B
  5F4:  		ExecWait  DoDeath
  600:  		Return
  608:  	CaseOR  ==  00000017 % 17
  614:  	CaseOR  ==  .Event:Immune % 19
  620:  		Call  GetActorVar   ( .Actor:Self 00000008 *Var0 )
  638:  		If  *Var0  ==  00000000
  648:  			SetConst  *Var0  00000001
  658:  			SetConst  *Var1  00290107
  668:  			ExecWait  DoImmune
  674:  			Call  GetStatusFlags    ( .Actor:Self *Var0 )
  688:  			If  *Var0  !&  ~Flags:StatusFlags:Sleep|Frozen|Fear|Paralyze|Dizzy|Stone|Stop % 35D000
  698:  				Call  SetAnimation  ( .Actor:Self 00000001 00290108 )
  6B0:  				Wait  10`
  6BC:  			EndIf
  6C4:  		Else
  6CC:  			SetConst  *Var0  00000001
  6DC:  			SetConst  *Var1  0029010F
  6EC:  			ExecWait  DoImmune
  6F8:  		EndIf
  700:  	EndCaseGroup
  708:  	Case  ==  .Event:Death % 20
  714:  		SetConst  *Var0  00000001
  724:  		SetConst  *Var1  0029010B
  734:  		ExecWait  DoNormalHit
  740:  		Wait  10`
  74C:  		SetConst  *Var0  00000001
  75C:  		SetConst  *Var1  0029010B
  76C:  		ExecWait  DoDeath
  778:  		Return
  780:  	Case  ==  .Event:EndFirstStrike % 35
  78C:  		Call  GetActorVar   ( .Actor:Self 00000008 *Var0 )
  7A4:  		If  *Var0  ==  00000000
  7B4:  			SetConst  *Var0  00000001
  7C4:  			SetConst  *Var1  00290104
  7D4:  			ExecWait  DoReturnHome
  7E0:  		EndIf
  7E8:  		Call  GetActorPos   ( .Actor:Self *Var0 *Var1 *Var2 )
  804:  		Call  SetHomePos    ( .Actor:Self *Var0 *Var1 *Var2 )
  820:  		Call  HPBarToHome   ( .Actor:Self )
  830:  	Case  ==  .Event:RecoverStatus % 31
  83C:  		Call  GetActorVar   ( .Actor:Self 00000008 *Var0 )
  854:  		If  *Var0  ==  00000000
  864:  			SetConst  *Var0  00000001
  874:  			SetConst  *Var1  00290101
  884:  			ExecWait  DoRecover
  890:  		Else
  898:  			SetConst  *Var0  00000001
  8A8:  			SetConst  *Var1  0029010F
  8B8:  			ExecWait  DoImmune
  8C4:  		EndIf
  8CC:  	Case  ==  .Event:ScareAway % 39
  8D8:  		Call  GetActorVar   ( .Actor:Self 00000008 *Var0 )
  8F0:  		If  *Var0  ==  00000000
  900:  			SetConst  *Var0  00000001
  910:  			SetConst  *Var1  00290104
  920:  			SetConst  *Var2  0029010B
  930:  			ExecWait  DoScareAway
  93C:  			Return
  944:  		Else
  94C:  			SetConst  *Var0  00000001
  95C:  			SetConst  *Var1  0029010F
  96C:  			ExecWait  DoImmune
  978:  		EndIf
  980:  	Case  ==  .Event:BeginAirLift % 3A
  98C:  		Call  GetActorVar   ( .Actor:Self 00000008 *Var0 )
  9A4:  		If  *Var0  ==  00000000
  9B4:  			SetConst  *Var0  00000001
  9C4:  			SetConst  *Var1  00290117
  9D4:  		Else
  9DC:  			SetConst  *Var0  00000001
  9EC:  			SetConst  *Var1  0029010F
  9FC:  		EndIf
  A04:  		ExecWait  DoAirLift
  A10:  	Case  ==  .Event:BlowAway % 16
  A1C:  		Call  GetActorVar   ( .Actor:Self 00000008 *Var0 )
  A34:  		If  *Var0  ==  00000000
  A44:  			SetConst  *Var0  00000001
  A54:  			SetConst  *Var1  00290117
  A64:  		Else
  A6C:  			SetConst  *Var0  00000001
  A7C:  			SetConst  *Var1  0029010F
  A8C:  		EndIf
  A94:  		ExecWait  DoBlowAway
  AA0:  		Return
  AA8:  	Case  ==  .Event:AirLiftFailed % 1F
  AB4:  		Call  GetActorVar   ( .Actor:Self 00000008 *Var0 )
  ACC:  		If  *Var0  ==  00000000
  ADC:  			SetConst  *Var0  00000001
  AEC:  			SetConst  *Var1  00290101
  AFC:  			ExecWait  DoImmune
  B08:  		Else
  B10:  			SetConst  *Var0  00000001
  B20:  			SetConst  *Var1  0029010F
  B30:  			ExecWait  DoImmune
  B3C:  		EndIf
  B44:  EndSwitch
  B4C:  Call  EnableIdleScript  ( .Actor:Self FFFFFFFF )
  B60:  Call  UseIdleAnimation  ( .Actor:Self .True )
  B74:  Return
  B7C:  End
}

#new:Script $Script_TakeTurn_8022131C
{
    0:  Call  UseIdleAnimation  ( .Actor:Self .False )
   14:  Call  EnableIdleScript  ( .Actor:Self 00000000 )
   28:  Call  SetTargetActor    ( .Actor:Self .Actor:Player )
   3C:  Call  GetBattlePhase    ( *Var0 )
   4C:  If  *Var0  ==  00000001
   5C:  	Call  SetAnimation  ( .Actor:Self 00000001 00290106 )
   74:  Else
   7C:  	Call  GetActorVar   ( .Actor:Self 00000008 *Var0 )
   94:  	If  *Var0  ==  00000001
   A4:  		Call  GetActorVar   ( .Actor:Self 00000009 *Var0 )
   BC:  		Sub   *Var0  00000001
   CC:  		If  *Var0  >  00000000
   DC:  			Call  SetActorVar   ( .Actor:Self 00000009 *Var0 )
   F4:  			Call  AddActorDecoration    ( .Actor:Self 00000001 00000000 .Decoration:Sweat )
  110:  			Call  SetAnimationRate      ( .Actor:Self 00000001 *Fixed[3.0] )
  128:  			Wait  30`
  134:  			Call  SetAnimationRate      ( .Actor:Self 00000001 *Fixed[1.0] )
  14C:  			Call  RemoveActorDecoration ( .Actor:Self 00000001 00000000 )
  164:  		Else
  16C:  			Call  AddActorDecoration        ( .Actor:Self 00000001 00000000 .Decoration:Sweat )
  188:  			Call  SetAnimationRate  ( .Actor:Self 00000001 *Fixed[3.0] )
  1A0:  			Wait  20`
  1AC:  			Call  SetAnimationRate  ( .Actor:Self 00000001 *Fixed[1.0] )
  1C4:  			Call  RemoveActorDecoration     ( .Actor:Self 00000001 00000000 )
  1DC:  			Call  SetActorSounds    ( .Actor:Self .ActorSound:Jump 00000000 00000000 )
  1F8:  			Call  PlaySoundAtActor  ( .Actor:Self .Sound:Jump )
  20C:  			Call  SetAnimation      ( .Actor:Self 00000001 0029010F )
  224:  			Set   *Var0  00000000
  234:  			Call  SetActorRotationOffset    ( .Actor:Self 00000000 0000000C 00000000 )
  250:  			ChildThread
  258:  				Loop  00000005
  264:  					Add   *Var0  0000000F
  274:  					Call  SetActorRotation  ( .Actor:Self 00000000 00000000 *Var0 )
  290:  					Wait  1`
  29C:  				EndLoop
  2A4:  			EndChildThread
  2AC:  			Call  GetActorPos       ( .Actor:Self *Var0 *Var1 *Var2 )
  2C8:  			Call  SetGoalPos        ( .Actor:Self *Var0 *Var1 *Var2 )
  2E4:  			Call  SetActorJumpGravity       ( .Actor:Self *Fixed[3.0] )
  2F8:  			Call  JumpToGoal        ( .Actor:Self  8` .False .True .False )
  318:  			Call  PlaySoundAtActor  ( .Actor:Self 000020BA )
  32C:  			Call  SetActorRotationOffset    ( .Actor:Self 00000000 00000000 00000000 )
  348:  			Call  SetActorRotation  ( .Actor:Self 00000000 00000000 00000000 )
  364:  			Call  SetActorDispOffset        ( .Actor:Self 00000000 00000000 00000000 )
  380:  			Call  SetAnimation      ( .Actor:Self 00000001 00290101 )
  398:  			Call  SetActorVar       ( .Actor:Self 00000008 00000000 )
  3B0:  			Call  SetIdleAnimations ( .Actor:Self 00000001 $IdleAnimations_80220010 )
  3C8:  			Call  SetDefenseTable   ( .Actor:Self 00000001 $DefenseTable_8021FEE0 )
  3E0:  			Call  SetTargetOffset   ( .Actor:Self 00000001  -4`  32` )
  3FC:  			Call  8027D4C8  ( FFFFFF81 00000001 FFFFFFFF FFFFFFFC )
  418:  			Call  SetActorFlagBits  ( .Actor:Self 00000400 .False )
  430:  			Call  ResetActorSounds  ( .Actor:Self .ActorSound:Jump )
  444:  		EndIf
  44C:  		Call  EnableIdleScript  ( .Actor:Self 00000001 )
  460:  		Call  UseIdleAnimation  ( .Actor:Self .True )
  474:  		Return
  47C:  	EndIf
  484:  	Call  UseBattleCamPreset    ( 0000003F )
  494:  	Call  BattleCamTargetActor  ( .Actor:Self )
  4A4:  	Wait  10`
  4B0:  	Call  SetAnimation  ( .Actor:Self 00000001 00290107 )
  4C8:  	Wait  10`
  4D4:  	ChildThread
  4DC:  		Call  GetActorPos   ( .Actor:Self *Var0 *Var1 *Var2 )
  4F8:  		Add   *Var1  00000004
  508:  		Call  PlayEffect    ( ~FX:SmokeImpact:Small *Var0 *Var1 *Var2 00000020 00000004 00000000 0000000A 00000000 00000000 00000000 00000000 00000000 )
  54C:  		Wait  3`
  558:  		Call  PlayEffect    ( ~FX:SmokeImpact:Small *Var0 *Var1 *Var2 00000020 00000004 00000000 0000000A 00000000 00000000 00000000 00000000 00000000 )
  59C:  		Wait  2`
  5A8:  		Call  PlayEffect    ( ~FX:SmokeImpact:Small *Var0 *Var1 *Var2 00000020 00000004 00000000 0000000A 00000000 00000000 00000000 00000000 00000000 )
  5EC:  	EndChildThread
  5F4:  	Call  PlaySoundAtActor  ( .Actor:Self 00002021 )
  608:  	Call  SetAnimation      ( .Actor:Self 00000001 00290106 )
  620:  	Wait  10`
  62C:  	Call  8024ECF8  ( FFFFFFFF 00000001 00000000 )
  644:  EndIf
  64C:  Call  PlaySoundAtActor  ( .Actor:Self 000020D3 )
  660:  Call  SetActorSounds    ( .Actor:Self .ActorSound:Walk 00000000 00000000 )
  67C:  Call  EnemyTestTarget   ( .Actor:Self *Var0 ~Flags:DamageType:0 00000000 00000001 00000010 )
  6A0:  Switch  *Var0
  6AC:  	CaseOR  ==  .HitResult:Miss % 6
  6B8:  	CaseOR  ==  .HitResult:Lucky % 5
  6C4:  		Set   *VarA  *Var0
  6D4:  		Call  SetGoalToTarget   ( .Actor:Self )
  6E4:  		Call  AddGoalPos        ( .Actor:Self  -40`  0`  0` )
  700:  		Call  SetActorSpeed     ( .Actor:Self *Fixed[16.0] )
  714:  		Call  RunToGoal ( .Actor:Self  0` .False )
  72C:  		Call  GetBattlePhase    ( *Var0 )
  73C:  		If  *Var0  ==  00000001
  74C:  			Call  UseBattleCamPreset    ( 00000005 )
  75C:  			Call  SetBattleCamZoom      (  300` )
  76C:  			Call  SetBattleCamOffsetZ   (  20` )
  77C:  			Call  MoveBattleCamOver     (  10` )
  78C:  			Call  8024ECF8  ( FFFFFFFF 00000001 00000000 )
  7A4:  		EndIf
  7AC:  		Call  SetAnimation  ( .Actor:Self 00000001 00290108 )
  7C4:  		Wait  8`
  7D0:  		Call  ResetAllActorSounds   ( .Actor:Self )
  7E0:  		Call  SetActorYaw   ( .Actor:Self  180` )
  7F4:  		Wait  4`
  800:  		If  *VarA  ==  .HitResult:Lucky % 5
  810:  			Call  EnemyTestTarget   ( .Actor:Self *Var0 ~Flags:DamageType:TriggerLucky 00000000 00000000 00000000 )
  834:  		EndIf
  83C:  		Call  SetAnimation  ( .Actor:Self 00000001 00290115 )
  854:  		Wait  1`
  860:  		Call  SetAnimation  ( .Actor:Self 00000001 00290116 )
  878:  		Call  GetActorPos   ( .Actor:Self *Var0 *Var1 *Var2 )
  894:  		Add   *Var1  00000014
  8A4:  		Call  SetGoalPos    ( .Actor:Self *Var0 *Var1 *Var2 )
  8C0:  		Call  SetActorJumpGravity   ( .Actor:Self *Fixed[2.0] )
  8D4:  		Call  JumpToGoal    ( .Actor:Self  5` .False .True .False )
  8F4:  		Call  SetAnimation  ( .Actor:Self 00000001 00290117 )
  90C:  		Wait  6`
  918:  		Sub   *Var1  00000014
  928:  		Call  SetGoalPos    ( .Actor:Self *Var0 *Var1 *Var2 )
  944:  		Call  JumpToGoal    ( .Actor:Self  5` .False .True .False )
  964:  		Call  UseBattleCamPreset    ( 00000002 )
  974:  		Call  YieldTurn ( )
  980:  		Call  SetActorYaw   ( .Actor:Self  180` )
  994:  		Call  AddActorDecoration    ( .Actor:Self 00000001 00000000 .Decoration:Sweat )
  9B0:  		Call  SetAnimation  ( .Actor:Self 00000001 00290117 )
  9C8:  		Call  SetGoalToHome ( .Actor:Self )
  9D8:  		Call  SetActorSpeed ( .Actor:Self *Fixed[8.0] )
  9EC:  		Call  RunToGoal     ( .Actor:Self  0` .False )
  A04:  		Call  SetAnimation  ( .Actor:Self 00000001 00290101 )
  A1C:  		Call  RemoveActorDecoration ( .Actor:Self 00000001 00000000 )
  A34:  		Call  SetPartYaw    ( .Actor:Self 00000001  0` )
  A4C:  		Call  SetActorYaw   ( .Actor:Self  0` )
  A60:  		Call  EnableIdleScript      ( .Actor:Self 00000001 )
  A74:  		Call  UseIdleAnimation      ( .Actor:Self .True )
  A88:  		Return
  A90:  	EndCaseGroup
  A98:  EndSwitch
  AA0:  Call  SetGoalToTarget   ( .Actor:Self )
  AB0:  Call  SetActorSpeed     ( .Actor:Self *Fixed[16.0] )
  AC4:  Call  RunToGoal ( .Actor:Self  0` .False )
  ADC:  Call  ResetAllActorSounds   ( .Actor:Self )
  AEC:  Wait  2`
  AF8:  Call  EnemyDamageTarget ( .Actor:Self *Var0 ~Flags:DamageType:0 0000FFFF 00000000 00000001 00000020 )
  B20:  Switch  *Var0
  B2C:  	CaseOR  ==  .HitResult:Hit % 0
  B38:  	CaseOR  ==  .HitResult:QuakeImmune % 2
  B44:  		Call  UseBattleCamPreset    ( 00000002 )
  B54:  		Call  GetGoalPos    ( .Actor:Self *Var0 *Var1 *Var2 )
  B70:  		Add   *Var0  00000028
  B80:  		Set   *Var1  00000000
  B90:  		Call  SetActorJumpGravity   ( .Actor:Self *Fixed[1.8] )
  BA4:  		Call  SetGoalPos    ( .Actor:Self *Var0 *Var1 *Var2 )
  BC0:  		Call  JumpToGoal    ( .Actor:Self  10` .False .True .False )
  BE0:  		Add   *Var0  0000001E
  BF0:  		Call  SetGoalPos    ( .Actor:Self *Var0 *Var1 *Var2 )
  C0C:  		Call  JumpToGoal    ( .Actor:Self  8` .False .True .False )
  C2C:  		Add   *Var0  00000014
  C3C:  		Call  SetGoalPos    ( .Actor:Self *Var0 *Var1 *Var2 )
  C58:  		Call  JumpToGoal    ( .Actor:Self  6` .False .True .False )
  C78:  		Call  SetAnimation  ( .Actor:Self 00000001 00290108 )
  C90:  		Wait  8`
  C9C:  		Call  YieldTurn ( )
  CA8:  		SetConst  *Var0  00000001
  CB8:  		SetConst  *Var1  00290104
  CC8:  		ExecWait  DoReturnHome
  CD4:  		Call  SetAnimation  ( .Actor:Self 00000001 00290101 )
  CEC:  	EndCaseGroup
  CF4:  EndSwitch
  CFC:  Call  EnableIdleScript  ( .Actor:Self 00000001 )
  D10:  Call  UseIdleAnimation  ( .Actor:Self .True )
  D24:  Return
  D2C:  End
}

#new:DefenseTable $DefenseTable_80222050
{
	.Element:Normal 00000000
	.Element:End
}

#new:StatusTable $StatusTable_8022205C
{
	.Status:Normal      0`
	.Status:Default     0`
	.Status:Sleep      95`
	.Status:Poison     90`
	.Status:Frozen    100`
	.Status:Dizzy      90`
	.Status:Fear        0`
	.Status:Static     70`
	.Status:Paralyze   75`
	.Status:Shrink     75`
	.Status:Stop      100`
	.Status:DefaultTurnMod    0`
	.Status:SleepTurnMod      0`
	.Status:PoisonTurnMod     0`
	.Status:FrozenTurnMod     0`
	.Status:DizzyTurnMod      0`
	.Status:FearTurnMod       0`
	.Status:StaticTurnMod     0`
	.Status:ParalyzeTurnMod   0`
	.Status:ShrinkTurnMod     0`
	.Status:StopTurnMod       0`
	.Status:End
}

#new:PartsTable $PartsTable_80222108
{
	00800000 01000000 001400FF $IdleAnimations_80222154 $DefenseTable_80222050 00000000 00000000 00F60000 00000000
}

#new:Actor $Fuzzy
{
	% stats
	[Index]         Ab
	[Level]         6`b
	[MaxHP]         3`b
	[Coins]         1`b
	[Flags]       00000000
	[StatusTable] $StatusTable_8022205C
	% ai
	[PartsCount]    1`s
	[PartsTable]  $PartsTable_80222108
	[Script]      $Script_Init_802221A0
	% move effectiveness
	[Escape]       50`b
	[Item]         95`b
	[AirLift]      95`b
	[Hurricane]    95`b % Bow's "Spook" as well
	[UpAndAway]    95`b
	[PowerBounce] 100`b
	[SpinSmash]     0`b % weight (0-4)
	% ui positions
	[Size]         33`b  28`b % width height
	[HealthBar]     0`b   0`b % dx dy
	[StatusTurn]  -10`b  20`b % dx dy
	[StatusIcon]   10`b  20`b % dx dy
}

#new:IdleAnimations $IdleAnimations_80222154
{
	.Status:Normal    002B0001
	.Status:Stone     002B0000
	.Status:Sleep     002B000E
	.Status:Poison    002B0001
	.Status:Stop      002B0000
	.Status:Static    002B0001
	.Status:Paralyze  002B0000
	.Status:Dizzy     002B000F
	.Status:Fear      002B000F
	.Status:End
}

#new:Script $Script_Init_802221A0
{
    0:  Call  BindTakeTurn      ( .Actor:Self $Script_TakeTurn_80222860 )
   14:  Call  BindIdle  ( .Actor:Self $Script_Idle_802221EC )
   28:  Call  BindHandleEvent   ( .Actor:Self $Script_HandleEvent_802221FC )
   3C:  Return
   44:  End
}

#new:Script $Script_Idle_802221EC
{
    0:  Return
    8:  End
}

#new:Script $Script_HandleEvent_802221FC
{
    0:  Call  UseIdleAnimation  ( .Actor:Self .False )
   14:  Call  EnableIdleScript  ( .Actor:Self 00000000 )
   28:  Call  SetActorScale     ( .Actor:Self *Fixed[1.0] *Fixed[1.0] *Fixed[1.0] )
   44:  Call  GetLastEvent      ( .Actor:Self *Var0 )
   58:  Switch  *Var0
   64:  	CaseOR  ==  .Event:HitCombo % 9
   70:  	CaseOR  ==  .Event:Hit % A
   7C:  		Call  GetLastElement    ( *Var0 )
   8C:  		If  *Var0  &  00000020
   9C:  			SetConst  *Var0  00000001
   AC:  			SetConst  *Var1  002B0013
   BC:  		Else
   C4:  			SetConst  *Var0  00000001
   D4:  			SetConst  *Var1  002B0008
   E4:  		EndIf
   EC:  		ExecWait  DoNormalHit
   F8:  	EndCaseGroup
  100:  	Case  ==  .Event:BurnHit % E
  10C:  		SetConst  *Var0  00000001
  11C:  		SetConst  *Var1  002B0010
  12C:  		SetConst  *Var2  002B0012
  13C:  		ExecWait  DoBurnHit
  148:  	Case  ==  .Event:BurnDeath % 24
  154:  		SetConst  *Var0  00000001
  164:  		SetConst  *Var1  002B0010
  174:  		SetConst  *Var2  002B0012
  184:  		ExecWait  DoBurnHit
  190:  		SetConst  *Var0  00000001
  1A0:  		SetConst  *Var1  002B0012
  1B0:  		ExecWait  DoDeath
  1BC:  		Return
  1C4:  	Case  ==  .Event:SpinSmashHit % B
  1D0:  		SetConst  *Var0  00000001
  1E0:  		SetConst  *Var1  002B0008
  1F0:  		ExecWait  DoSpinSmashHit
  1FC:  	Case  ==  .Event:SpinSmashDeath % 21
  208:  		SetConst  *Var0  00000001
  218:  		SetConst  *Var1  002B0008
  228:  		ExecWait  DoSpinSmashHit
  234:  		SetConst  *Var0  00000001
  244:  		SetConst  *Var1  002B0008
  254:  		ExecWait  DoDeath
  260:  		Return
  268:  	Case  ==  .Event:ShockHit % 2F
  274:  		SetConst  *Var0  00000001
  284:  		SetConst  *Var1  002B0013
  294:  		ExecWait  DoShockHit
  2A0:  		SetConst  *Var0  00000001
  2B0:  		SetConst  *Var1  002B0013
  2C0:  		ExecWait  DoJumpBack
  2CC:  		Call  JumpToGoal    ( .Actor:Self  5` .False .True .False )
  2EC:  		SetConst  *Var0  00000001
  2FC:  		SetConst  *Var1  002B0003
  30C:  		ExecWait  8029C0A4
  318:  		Call  SetActorJumpGravity   ( .Actor:Self *Fixed[1.6] )
  32C:  		Call  JumpToGoal    ( .Actor:Self  5` .False .True .False )
  34C:  	Case  ==  .Event:ShockDeath % 26
  358:  		SetConst  *Var0  00000001
  368:  		SetConst  *Var1  002B0013
  378:  		ExecWait  DoShockHit
  384:  		SetConst  *Var0  00000001
  394:  		SetConst  *Var1  002B0008
  3A4:  		ExecWait  DoDeath
  3B0:  		Return
  3B8:  	CaseOR  ==  00000017 % 17
  3C4:  	CaseOR  ==  .Event:Immune % 19
  3D0:  	CaseOR  ==  .Event:AirLiftFailed % 1F
  3DC:  		SetConst  *Var0  00000001
  3EC:  		SetConst  *Var1  002B0001
  3FC:  		ExecWait  DoImmune
  408:  	EndCaseGroup
  410:  	Case  ==  .Event:Death % 20
  41C:  		Call  GetLastElement    ( *Var0 )
  42C:  		If  *Var0  &  00000020
  43C:  			SetConst  *Var0  00000001
  44C:  			SetConst  *Var1  002B0013
  45C:  			ExecWait  DoNormalHit
  468:  			Wait  10`
  474:  			SetConst  *Var0  00000001
  484:  			SetConst  *Var1  002B0013
  494:  			ExecWait  DoDeath
  4A0:  		Else
  4A8:  			SetConst  *Var0  00000001
  4B8:  			SetConst  *Var1  002B0008
  4C8:  			ExecWait  DoNormalHit
  4D4:  			Wait  10`
  4E0:  			SetConst  *Var0  00000001
  4F0:  			SetConst  *Var1  002B0008
  500:  			ExecWait  DoDeath
  50C:  		EndIf
  514:  		Return
  51C:  	Case  ==  .Event:RecoverStatus % 31
  528:  		SetConst  *Var0  00000001
  538:  		SetConst  *Var1  002B0001
  548:  		ExecWait  DoRecover
  554:  	Case  ==  .Event:ScareAway % 39
  560:  		SetConst  *Var0  00000001
  570:  		SetConst  *Var1  002B0003
  580:  		SetConst  *Var2  002B0009
  590:  		ExecWait  DoScareAway
  59C:  		Return
  5A4:  	Case  ==  .Event:BeginAirLift % 3A
  5B0:  		SetConst  *Var0  00000001
  5C0:  		SetConst  *Var1  002B0003
  5D0:  		ExecWait  DoAirLift
  5DC:  	Case  ==  .Event:BlowAway % 16
  5E8:  		SetConst  *Var0  00000001
  5F8:  		SetConst  *Var1  002B0003
  608:  		ExecWait  DoBlowAway
  614:  		Return
  61C:  	Default
  624:  EndSwitch
  62C:  Call  EnableIdleScript  ( .Actor:Self 00000001 )
  640:  Call  UseIdleAnimation  ( .Actor:Self .True )
  654:  Return
  65C:  End
}

#new:Script $Script_TakeTurn_80222860
{
    0:  Call  UseIdleAnimation  ( .Actor:Self .False )
   14:  Call  EnableIdleScript  ( .Actor:Self 00000000 )
   28:  Call  SetTargetActor    ( .Actor:Self .Actor:Player )
   3C:  Call  UseBattleCamPreset    ( 0000003F )
   4C:  Call  BattleCamTargetActor  ( .Actor:Self )
   5C:  Call  8024ECF8  ( FFFFFFFF 00000001 00000000 )
   74:  Call  GetBattlePhase    ( *Var0 )
   84:  If  *Var0  ==  00000001
   94:  	Call  SetGoalToTarget   ( .Actor:Self )
   A4:  	Call  GetGoalPos        ( .Actor:Self *Var0 *Var1 *Var2 )
   C0:  	Add   *Var0  00000032
   D0:  	Set   *Var1  00000000
   E0:  	Call  SetActorPos       ( .Actor:Self *Var0 *Var1 *Var2 )
   FC:  	Goto  64
  108:  EndIf
  110:  Call  SetAnimation      ( .Actor:Self 00000001 002B0003 )
  128:  Call  SetGoalToTarget   ( .Actor:Self )
  138:  Call  GetGoalPos        ( .Actor:Self *Var0 *Var1 *Var2 )
  154:  Add   *Var0  00000032
  164:  Set   *Var1  00000000
  174:  Call  SetActorSpeed     ( .Actor:Self *Fixed[6.0] )
  188:  Call  SetActorJumpGravity   ( .Actor:Self *Fixed[1.8] )
  19C:  ExecWait  8029C12C
  1A8:  Call  SetAnimation      ( .Actor:Self 00000001 002B0001 )
  1C0:  Label  64
  1CC:  Call  SetActorDispOffset    ( .Actor:Self 00000000 0000000A 00000000 )
  1E8:  Call  SetAnimation      ( .Actor:Self 00000001 002B0004 )
  200:  Call  SetActorDispOffset    ( .Actor:Self 00000000 00000009 00000000 )
  21C:  Wait  1`
  228:  Call  SetActorDispOffset    ( .Actor:Self 00000000 00000008 00000000 )
  244:  Wait  5`
  250:  Call  EnemyTestTarget   ( .Actor:Self *Var0 ~Flags:DamageType:IgnoreDefense 00000000 00000001 00000010 )
  274:  Switch  *Var0
  280:  	CaseOR  ==  .HitResult:Miss % 6
  28C:  	CaseOR  ==  .HitResult:Lucky % 5
  298:  		Set   *VarA  *Var0
  2A8:  		Call  SetGoalToTarget       ( .Actor:Self )
  2B8:  		Call  GetGoalPos    ( .Actor:Self *Var0 *Var1 *Var2 )
  2D4:  		Sub   *Var0  00000005
  2E4:  		Set   *Var1  00000000
  2F4:  		Sub   *Var2  00000005
  304:  		Call  SetActorJumpGravity   ( .Actor:Self *Fixed[3.0] )
  318:  		Call  SetAnimation  ( .Actor:Self 00000001 002B0005 )
  330:  		Call  SetGoalPos    ( .Actor:Self *Var0 *Var1 *Var2 )
  34C:  		Call  JumpToGoal    ( .Actor:Self  11` .False .True .False )
  36C:  		Call  SetActorDispOffset    ( .Actor:Self 00000000 00000000 00000000 )
  388:  		Call  SetAnimation  ( .Actor:Self 00000001 002B0009 )
  3A0:  		Call  GetGoalPos    ( .Actor:Self *Var0 *Var1 *Var2 )
  3BC:  		Sub   *Var0  00000014
  3CC:  		Call  SetActorJumpGravity   ( .Actor:Self *Fixed[3.0] )
  3E0:  		Call  SetGoalPos    ( .Actor:Self *Var0 *Var1 *Var2 )
  3FC:  		Call  JumpToGoal    ( .Actor:Self  6` .False .True .False )
  41C:  		Call  GetGoalPos    ( .Actor:Self *Var0 *Var1 *Var2 )
  438:  		Sub   *Var0  0000000F
  448:  		Call  SetActorJumpGravity   ( .Actor:Self *Fixed[3.0] )
  45C:  		Call  SetGoalPos    ( .Actor:Self *Var0 *Var1 *Var2 )
  478:  		Call  JumpToGoal    ( .Actor:Self  5` .False .True .False )
  498:  		Call  GetGoalPos    ( .Actor:Self *Var0 *Var1 *Var2 )
  4B4:  		Wait  4`
  4C0:  		Wait  5`
  4CC:  		If  *VarA  ==  .HitResult:Lucky % 5
  4DC:  			Call  EnemyTestTarget   ( .Actor:Self *Var0 ~Flags:DamageType:TriggerLucky 00000000 00000000 00000000 )
  500:  		EndIf
  508:  		Wait  5`
  514:  		Call  UseBattleCamPreset    ( 00000002 )
  524:  		Call  YieldTurn ( )
  530:  		Call  SetActorYaw       ( .Actor:Self  180` )
  544:  		Call  AddActorDecoration    ( .Actor:Self 00000001 00000000 .Decoration:Sweat )
  560:  		Call  SetAnimation      ( .Actor:Self 00000001 002B0003 )
  578:  		Call  SetGoalToHome     ( .Actor:Self )
  588:  		Call  GetGoalPos        ( .Actor:Self *Var0 *Var1 *Var2 )
  5A4:  		Call  SetActorSpeed     ( .Actor:Self *Fixed[8.0] )
  5B8:  		Call  SetActorJumpGravity   ( .Actor:Self *Fixed[1.8] )
  5CC:  		ExecWait  8029C12C
  5D8:  		Call  RemoveActorDecoration ( .Actor:Self 00000001 00000000 )
  5F0:  		Call  SetActorYaw       ( .Actor:Self  0` )
  604:  		Call  EnableIdleScript  ( .Actor:Self 00000001 )
  618:  		Call  UseIdleAnimation  ( .Actor:Self .True )
  62C:  		Return
  634:  	EndCaseGroup
  63C:  	Case  ==  .HitResult:HitStatic % 7
  648:  		Call  GetStatusFlags    ( .Actor:Self *Var0 )
  65C:  		If  *Var0  &  ~Flags:StatusFlags:Static % 2000
  66C:  			Set   *Flag[00]  .False
  67C:  		Else
  684:  			Set   *Flag[00]  .True
  694:  		EndIf
  69C:  EndSwitch
  6A4:  Call  SetGoalToTarget   ( .Actor:Self )
  6B4:  Call  AddGoalPos        ( .Actor:Self  -3`  -12`  -15` )
  6D0:  Call  SetActorJumpGravity   ( .Actor:Self *Fixed[3.0] )
  6E4:  Call  SetAnimation      ( .Actor:Self 00000001 002B0005 )
  6FC:  Call  JumpToGoal        ( .Actor:Self  8` .False .True .False )
  71C:  If  *Flag[00]  ==  .True
  72C:  	Call  EnemyDamageTarget ( .Actor:Self *Var0 ~Flags:DamageType:IgnoreDefense 00000000 00000000 00000000 00000020 )
  754:  	Return
  75C:  EndIf
  764:  Wait  10`
  770:  Call  UseIdleAnimation  ( .Actor:Player .False )
  784:  Call  SetAnimation  ( .Actor:Player 00000000 0003000C )
  79C:  Call  PlaySoundAtActor  ( .Actor:Self 000003E0 )
  7B0:  Call  SetAnimation  ( .Actor:Self 00000001 002B0007 )
  7C8:  Wait  21`
  7D4:  Call  SetAnimation  ( .Actor:Self 00000001 002B0000 )
  7EC:  Call  SetActorRotation  ( .Actor:Self 00000000 00000000 0000014A )
  808:  Call  PlaySoundAtActor  ( .Actor:Self 000003E0 )
  81C:  Call  SetActorDispOffset    ( .Actor:Self FFFFFFFD FFFFFFFE 00000000 )
  838:  Call  SetActorScale ( .Actor:Self *Fixed[1.0] *Fixed[1.0] *Fixed[1.0] )
  854:  Wait  1`
  860:  Call  SetActorScale ( .Actor:Self *Fixed[0.9] *Fixed[1.2] *Fixed[1.0] )
  87C:  Wait  1`
  888:  Call  SetActorScale ( .Actor:Self *Fixed[0.8] *Fixed[1.3] *Fixed[1.0] )
  8A4:  Wait  1`
  8B0:  Call  SetActorScale ( .Actor:Self *Fixed[0.7] *Fixed[1.4] *Fixed[1.0] )
  8CC:  Wait  1`
  8D8:  Call  SetActorScale ( .Actor:Self *Fixed[0.7] *Fixed[1.5] *Fixed[1.0] )
  8F4:  Wait  2`
  900:  Call  SetActorScale ( .Actor:Self *Fixed[0.6] *Fixed[1.6] *Fixed[1.0] )
  91C:  Wait  10`
  928:  Wait  2`
  934:  Call  EnemyDamageTarget ( .Actor:Self *Var0 ~Flags:DamageType:IgnoreDefense 00000000 00000000 00000001 00000020 )
  95C:  Call  SetActorDispOffset    ( .Actor:Self 00000000 00000000 00000000 )
  978:  Call  SetAnimation  ( .Actor:Self 00000001 002B0001 )
  990:  Switch  *Var0
  99C:  	CaseOR  ==  .HitResult:Hit % 0
  9A8:  	CaseOR  ==  .HitResult:QuakeImmune % 2
  9B4:  		Call  UseBattleCamPreset    ( 00000002 )
  9C4:  		Call  GetLastDamage ( .Actor:Player *Var3 )
  9D8:  		If  *Var3  !=  00000000
  9E8:  			Call  PlaySoundAtActor  ( .Actor:Self 0000206D )
  9FC:  			Call  PlaySoundAtActor  ( .Actor:Self 00000214 )
  A10:  			Call  GetActorPos       ( .Actor:Self *Var0 *Var1 *Var2 )
  A2C:  			Add   *Var1  0000000A
  A3C:  			Call  $Function_802188B0    ( *Var0 *Var1 *Var2 *Var3 )
  A58:  			Thread
  A60:  				Wait  15`
  A6C:  				Call  PlaySoundAtActor      ( .Actor:Self 0000025C )
  A80:  				Call  $Function_80218964    ( *Var0 *Var1 *Var2 *Var3 )
  A9C:  			EndThread
  AA4:  			Add   *Var0  00000014
  AB4:  			Add   *Var1  00000014
  AC4:  			Call  PlayEffect    ( ~FX:Recover:HP *Var0 *Var1 *Var2 *Var3 00000000 00000000 00000000 00000000 00000000 00000000 00000000 00000000 )
  B08:  			Call  GetActorHP    ( .Actor:Self *Var0 )
  B1C:  			Add   *Var0  *Var3
  B2C:  			Call  SetEnemyHP    ( .Actor:Self *Var0 )
  B40:  		EndIf
  B48:  		Thread
  B50:  			Call  SetActorScale     ( .Actor:Self *Fixed[1.6] *Fixed[0.6] *Fixed[1.0] )
  B6C:  			Call  SetActorRotationOffset    ( .Actor:Self 00000000 0000000A 00000000 )
  B88:  			Wait  1`
  B94:  			Call  SetActorRotation  ( .Actor:Self 00000000 00000000 0000014A )
  BB0:  			Wait  1`
  BBC:  			Call  SetActorScale     ( .Actor:Self *Fixed[0.7] *Fixed[1.5] *Fixed[1.0] )
  BD8:  			Call  SetActorRotation  ( .Actor:Self 00000000 00000000 0000012C )
  BF4:  			Wait  1`
  C00:  			Call  SetActorRotation  ( .Actor:Self 00000000 00000000 0000010E )
  C1C:  			Wait  1`
  C28:  			Call  SetActorScale     ( .Actor:Self *Fixed[1.0] *Fixed[0.7] *Fixed[1.0] )
  C44:  			Call  SetActorRotation  ( .Actor:Self 00000000 00000000 000000F0 )
  C60:  			Wait  1`
  C6C:  			Call  SetActorRotation  ( .Actor:Self 00000000 00000000 000000D2 )
  C88:  			Wait  1`
  C94:  			Call  SetActorScale     ( .Actor:Self *Fixed[0.7] *Fixed[1.4] *Fixed[1.0] )
  CB0:  			Call  SetActorRotation  ( .Actor:Self 00000000 00000000 000000B4 )
  CCC:  			Wait  2`
  CD8:  			Call  SetActorScale     ( .Actor:Self *Fixed[1.0] *Fixed[0.7] *Fixed[1.0] )
  CF4:  			Wait  2`
  D00:  			Call  SetActorScale     ( .Actor:Self *Fixed[1.2] *Fixed[0.5] *Fixed[1.0] )
  D1C:  		EndThread
  D24:  		Call  GetGoalPos    ( .Actor:Self *Var0 *Var1 *Var2 )
  D40:  		Add   *Var0  00000028
  D50:  		Set   *Var1  00000000
  D60:  		Call  SetActorJumpGravity   ( .Actor:Self *Fixed[1.8] )
  D74:  		Call  SetGoalPos    ( .Actor:Self *Var0 *Var1 *Var2 )
  D90:  		Call  JumpToGoal    ( .Actor:Self  10` .False .True .False )
  DB0:  		Call  SetActorScale ( .Actor:Self *Fixed[1.4] *Fixed[0.2] *Fixed[1.0] )
  DCC:  		Wait  1`
  DD8:  		Thread
  DE0:  			Wait  1`
  DEC:  			Call  SetActorScale     ( .Actor:Self *Fixed[1.2] *Fixed[0.5] *Fixed[1.0] )
  E08:  			Call  SetActorRotation  ( .Actor:Self 00000000 00000000 00000096 )
  E24:  			Wait  1`
  E30:  			Call  SetActorScale     ( .Actor:Self *Fixed[1.0] *Fixed[1.0] *Fixed[1.0] )
  E4C:  			Call  SetActorRotation  ( .Actor:Self 00000000 00000000 00000078 )
  E68:  			Wait  1`
  E74:  			Call  SetActorRotation  ( .Actor:Self 00000000 00000000 0000005A )
  E90:  			Wait  1`
  E9C:  			Call  SetActorRotation  ( .Actor:Self 00000000 00000000 0000003C )
  EB8:  			Wait  1`
  EC4:  			Call  SetActorRotation  ( .Actor:Self 00000000 00000000 0000001E )
  EE0:  			Wait  1`
  EEC:  			Call  SetActorRotation  ( .Actor:Self 00000000 00000000 00000000 )
  F08:  			Call  SetActorRotationOffset    ( .Actor:Self 00000000 00000000 00000000 )
  F24:  		EndThread
  F2C:  		Call  GetGoalPos    ( .Actor:Self *Var0 *Var1 *Var2 )
  F48:  		Add   *Var0  0000001E
  F58:  		Call  SetGoalPos    ( .Actor:Self *Var0 *Var1 *Var2 )
  F74:  		Call  JumpToGoal    ( .Actor:Self  8` .False .True .False )
  F94:  		Wait  5`
  FA0:  		Call  YieldTurn ( )
  FAC:  		Call  SetActorDispOffset    ( .Actor:Self 00000000 00000000 00000000 )
  FC8:  		Call  SetAnimation  ( .Actor:Self 00000001 002B0003 )
  FE0:  		Call  SetGoalToHome ( .Actor:Self )
  FF0:  		Call  GetGoalPos    ( .Actor:Self *Var0 *Var1 *Var2 )
 100C:  		Call  SetActorSpeed ( .Actor:Self *Fixed[8.0] )
 1020:  		Call  SetActorJumpGravity   ( .Actor:Self *Fixed[1.8] )
 1034:  		ExecWait  8029C12C
 1040:  		Call  SetAnimation  ( .Actor:Self 00000001 002B0001 )
 1058:  	EndCaseGroup
 1060:  EndSwitch
 1068:  Call  EnableIdleScript  ( .Actor:Self 00000001 )
 107C:  Call  UseIdleAnimation  ( .Actor:Self .True )
 1090:  Return
 1098:  End
}

#new:DefenseTable $DefenseTable_80223900
{
	.Element:Normal 00000001
	.Element:Hammer 00000001
	.Element:Jump   00000001
	.Element:Water  00000001
	.Element:Blast  00000001
	.Element:End
}

#new:DefenseTable $DefenseTable_8022392C
{
	.Element:Normal 00000001
	.Element:End
}

#new:DefenseTable $DefenseTable_80223938
{
	.Element:Normal 00000000
	.Element:End
}

#new:StatusTable $StatusTable_80223944
{
	.Status:Normal      0`
	.Status:Default     0`
	.Status:Sleep      90`
	.Status:Poison     60`
	.Status:Frozen    100`
	.Status:Dizzy      90`
	.Status:Fear        0`
	.Status:Static     80`
	.Status:Paralyze   90`
	.Status:Shrink     90`
	.Status:Stop      100`
	.Status:DefaultTurnMod    0`
	.Status:SleepTurnMod      0`
	.Status:PoisonTurnMod     0`
	.Status:FrozenTurnMod     0`
	.Status:DizzyTurnMod      0`
	.Status:FearTurnMod       0`
	.Status:StaticTurnMod     0`
	.Status:ParalyzeTurnMod   1`
	.Status:ShrinkTurnMod     0`
	.Status:StopTurnMod       0`
	.Status:End
}

#new:StatusTable $StatusTable_802239F0
{
	.Status:Normal      0`
	.Status:Default     0`
	.Status:Sleep      90`
	.Status:Poison     60`
	.Status:Frozen    100`
	.Status:Dizzy      90`
	.Status:Fear        0`
	.Status:Static     80`
	.Status:Paralyze   90`
	.Status:Shrink     90`
	.Status:Stop      100`
	.Status:DefaultTurnMod    0`
	.Status:SleepTurnMod      0`
	.Status:PoisonTurnMod     0`
	.Status:FrozenTurnMod     0`
	.Status:DizzyTurnMod      1`
	.Status:FearTurnMod       0`
	.Status:StaticTurnMod     0`
	.Status:ParalyzeTurnMod   1`
	.Status:ShrinkTurnMod     0`
	.Status:StopTurnMod       0`
	.Status:End
}

#new:PartsTable $PartsTable_80223A9C
{
	00020001 01000000 FE2400FF $IdleAnimations_802258D0 $DefenseTable_80223900 00001000 00000000 00F90000 00000000
	00800000 02000000 FC2400FF $IdleAnimations_80223B30 $DefenseTable_8022392C 00004000 00000000 02F20000 00000000
	00020001 03000000 002000FF $IdleAnimations_80223BC8 $DefenseTable_80223900 00000000 00000000 00F60000 00000000
}

#new:Actor $Paratroopa
{
	% stats
	[Index]         Cb
	[Level]         6`b
	[MaxHP]         4`b
	[Coins]         1`b
	[Flags]       00000200
	[StatusTable] $StatusTable_802239F0
	% ai
	[PartsCount]    3`s
	[PartsTable]  $PartsTable_80223A9C
	[Script]      $Script_Init_80223C3C
	% move effectiveness
	[Escape]       60`b
	[Item]         90`b
	[AirLift]      95`b
	[Hurricane]   100`b % Bow's "Spook" as well
	[UpAndAway]    95`b
	[PowerBounce]  90`b
	[SpinSmash]     0`b % weight (0-4)
	% ui positions
	[Size]         50`b  38`b % width height
	[HealthBar]     0`b   0`b % dx dy
	[StatusTurn]  -10`b  29`b % dx dy
	[StatusIcon]    8`b  30`b % dx dy
}

#new:IdleAnimations $IdleAnimations_80223B30
{
	.Status:Normal    002A0101
	.Status:Stone     002A0100
	.Status:Sleep     002A0112
	.Status:Poison    002A0100
	.Status:Stop      002A0100
	.Status:Static    002A0101
	.Status:Paralyze  002A0100
	.Status:Dizzy     002A0113
	.Status:Fear      002A0113
	.Status:End
}

#new:IdleAnimations $IdleAnimations_80223B7C
{
	.Status:Normal    002A0101
	.Status:Stone     002A0100
	.Status:Sleep     002A0112
	.Status:Poison    002A0100
	.Status:Stop      002A0100
	.Status:Static    002A0101
	.Status:Paralyze  002A0100
	.Status:Dizzy     002A0113
	.Status:Fear      002A0113
	.Status:End
}

#new:IdleAnimations $IdleAnimations_80223BC8
{
	.Status:Normal    002A010F
	.Status:Stone     002A0100
	.Status:Sleep     002A0112
	.Status:Poison    002A0100
	.Status:Stop      002A0100
	.Status:Static    002A010F
	.Status:Paralyze  002A0100
	.Status:Dizzy     002A0113
	.Status:Fear      002A0113
	.Status:End
}

#new:Script $Script_NextTurn_80223C14
{
    0:  Call  SetActorVar   ( .Actor:Self 00000000 00000000 )
   18:  Return
   20:  End
}

#new:Script $Script_Init_80223C3C
{
    0:  Call  BindTakeTurn  ( .Actor:Self $Script_TakeTurn_80224854 )
   14:  Call  BindIdle      ( .Actor:Self $Script_Idle_80223D8C )
   28:  Call  BindHandleEvent   ( .Actor:Self $Script_HandleEvent_8022411C )
   3C:  Call  BindNextTurn  ( .Actor:Self $Script_NextTurn_80223C14 )
   50:  Call  SetActorVar   ( .Actor:Self 00000000 00000000 )
   68:  Return
   70:  End
}

#new:Script $Script_80223CB4
{
    0:  If  *Var1  &  00041000
   10:  	Call  SetTargetOffset       ( .Actor:Self 00000002  0`  25` )
   2C:  	Call  8027D4C8  ( FFFFFF81 00000002 00000003 FFFFFFFA )
   48:  	Call  $Function_80218A78    ( FFFFFFED 00000019 00000004 0000001C )
   64:  Else
   6C:  	Call  SetTargetOffset       ( .Actor:Self 00000002  -2`  36` )
   88:  	Call  8027D4C8  ( FFFFFF81 00000002 00000000 FFFFFFF9 )
   A4:  	Call  $Function_80218A78    ( FFFFFFF6 0000001D 00000008 0000001E )
   C0:  EndIf
   C8:  Return
   D0:  End
}

#new:Script $Script_Idle_80223D8C
{
    0:  Label  A
    C:  Call  RandInt   ( 00000050 *Var0 )
   20:  Add   *Var0  00000050
   30:  Loop  *Var0
   3C:  	Label  0
   48:  	Call  GetStatusFlags    ( .Actor:Self *Var1 )
   5C:  	ExecWait  $Script_80223CB4
   68:  	If  *Var1  &  0035D000
   78:  		Wait  1`
   84:  		Goto  0
   90:  	EndIf
   98:  	Wait  1`
   A4:  EndLoop
   AC:  Call  GetActorPos       ( .Actor:Self *Var0 *Var1 *Var2 )
   C8:  Add   *Var0  00000005
   D8:  Call  SetActorIdleSpeed ( .Actor:Self *Fixed[0.6] )
   EC:  Call  SetIdleAnimations ( .Actor:Self 00000002 $IdleAnimations_80223B7C )
  104:  Call  SetIdleGoal       ( .Actor:Self *Var0 *Var1 *Var2 )
  120:  Call  IdleFlyToGoal     ( .Actor:Self  0`  -5` .Easing:Linear )
  13C:  Call  SetIdleAnimations ( .Actor:Self 00000001 $IdleAnimations_80223B30 )
  154:  Loop  00000014
  160:  	Label  1
  16C:  	Call  GetStatusFlags    ( .Actor:Self *Var1 )
  180:  	ExecWait  $Script_80223CB4
  18C:  	If  *Var1  &  0035D000
  19C:  		Wait  1`
  1A8:  		Goto  1
  1B4:  	EndIf
  1BC:  	Wait  1`
  1C8:  EndLoop
  1D0:  Call  GetActorPos       ( .Actor:Self *Var0 *Var1 *Var2 )
  1EC:  Sub   *Var0  00000005
  1FC:  Call  SetActorIdleSpeed ( .Actor:Self *Fixed[0.6] )
  210:  Call  SetIdleAnimations ( .Actor:Self 00000002 $IdleAnimations_80223B7C )
  228:  Call  SetIdleGoal       ( .Actor:Self *Var0 *Var1 *Var2 )
  244:  Call  IdleFlyToGoal     ( .Actor:Self  0`  -5` .Easing:Linear )
  260:  Call  SetIdleAnimations ( .Actor:Self 00000002 $IdleAnimations_80223B30 )
  278:  Loop  00000028
  284:  	Label  2
  290:  	Call  GetStatusFlags    ( .Actor:Self *Var1 )
  2A4:  	ExecWait  $Script_80223CB4
  2B0:  	If  *Var1  &  0035D000
  2C0:  		Wait  1`
  2CC:  		Goto  2
  2D8:  	EndIf
  2E0:  	Wait  1`
  2EC:  EndLoop
  2F4:  Goto  A
  300:  Return
  308:  End
}

#new:Script $Script_8022409C
{
    0:  Call  SetAnimation  ( .Actor:Self 00000002 002A0103 )
   18:  Call  SetGoalToHome ( .Actor:Self )
   28:  Call  SetActorSpeed ( .Actor:Self *Fixed[8.0] )
   3C:  Call  FlyToGoal     ( .Actor:Self  0`  1` .Easing:SinOut )
   58:  Call  SetAnimation  ( .Actor:Self 00000002 002A0101 )
   70:  Return
   78:  End
}

#new:Script $Script_HandleEvent_8022411C
{
    0:  Call  UseIdleAnimation  ( .Actor:Self .False )
   14:  Call  EnableIdleScript  ( .Actor:Self 00000000 )
   28:  Call  GetLastEvent      ( .Actor:Self *Var0 )
   3C:  Switch  *Var0
   48:  	Case  ==  .Event:HitCombo % 9
   54:  		Call  SetActorVar   ( .Actor:Self 00000000 00000001 )
   6C:  		SetConst  *Var0  00000002
   7C:  		SetConst  *Var1  002A0107
   8C:  		ExecWait  DoNormalHit
   98:  	Case  ==  .Event:Hit % A
   A4:  		SetConst  *Var0  00000002
   B4:  		SetConst  *Var1  002A0107
   C4:  		ExecWait  DoNormalHit
   D0:  		Call  GetBattlePhase    ( *Var0 )
   E0:  		If  *Var0  ==  00000001
   F0:  			Call  GetEncounterState ( *Var0 )
  100:  			If  *Var0  ==  00000004
  110:  				ExecWait  $Script_8022530C
  11C:  			EndIf
  124:  		EndIf
  12C:  	Case  ==  .Event:SpinSmashHit % B
  138:  		SetConst  *Var0  00000002
  148:  		SetConst  *Var1  002A0107
  158:  		ExecWait  DoSpinSmashHit
  164:  	Case  ==  .Event:SpinSmashDeath % 21
  170:  		SetConst  *Var0  00000002
  180:  		SetConst  *Var1  002A0107
  190:  		ExecWait  DoSpinSmashHit
  19C:  		SetConst  *Var0  00000002
  1AC:  		SetConst  *Var1  002A0106
  1BC:  		ExecWait  DoDeath
  1C8:  		Return
  1D0:  	Case  ==  .Event:BurnHit % E
  1DC:  		SetConst  *Var0  00000002
  1EC:  		SetConst  *Var1  002A0108
  1FC:  		SetConst  *Var2  002A0109
  20C:  		ExecWait  DoBurnHit
  218:  	Case  ==  .Event:BurnDeath % 24
  224:  		SetConst  *Var0  00000002
  234:  		SetConst  *Var1  002A0108
  244:  		SetConst  *Var2  002A0109
  254:  		ExecWait  DoBurnHit
  260:  		SetConst  *Var0  00000002
  270:  		SetConst  *Var1  002A0109
  280:  		ExecWait  DoDeath
  28C:  		Return
  294:  	Case  ==  .Event:FallTrigger % C
  2A0:  		SetConst  *Var0  00000002
  2B0:  		SetConst  *Var1  002A0107
  2C0:  		ExecWait  DoNormalHit
  2CC:  		ExecWait  $Script_8022530C
  2D8:  	Case  ==  0000000F % F
  2E4:  		SetConst  *Var0  00000001
  2F4:  		SetConst  *Var1  002A0108
  304:  		SetConst  *Var1  002A0109
  314:  		ExecWait  DoBurnHit
  320:  		ExecWait  $Script_8022530C
  32C:  	Case  ==  .Event:ShockHit % 2F
  338:  		SetConst  *Var0  00000001
  348:  		SetConst  *Var1  002A0107
  358:  		ExecWait  DoShockHit
  364:  		SetConst  *Var0  00000001
  374:  		SetConst  *Var1  002A0106
  384:  		ExecWait  DoJumpBack
  390:  		ExecWait  $Script_8022409C
  39C:  	Case  ==  .Event:ShockDeath % 26
  3A8:  		SetConst  *Var0  00000002
  3B8:  		SetConst  *Var1  002A0107
  3C8:  		ExecWait  DoShockHit
  3D4:  		SetConst  *Var0  00000002
  3E4:  		SetConst  *Var1  002A0106
  3F4:  		ExecWait  DoDeath
  400:  		Return
  408:  	Case  ==  00000017 % 17
  414:  		Call  SetActorVar   ( .Actor:Self 00000000 00000001 )
  42C:  		SetConst  *Var0  00000002
  43C:  		SetConst  *Var1  002A010B
  44C:  		ExecWait  DoImmune
  458:  	CaseOR  ==  .Event:Immune % 19
  464:  	CaseOR  ==  .Event:AirLiftFailed % 1F
  470:  		SetConst  *Var0  00000002
  480:  		SetConst  *Var1  002A010B
  490:  		ExecWait  DoImmune
  49C:  		Call  GetBattlePhase    ( *Var0 )
  4AC:  		If  *Var0  ==  00000001
  4BC:  			Call  GetEncounterState ( *Var0 )
  4CC:  			If  *Var0  ==  00000004
  4DC:  				ExecWait  $Script_8022530C
  4E8:  			EndIf
  4F0:  		EndIf
  4F8:  	EndCaseGroup
  500:  	Case  ==  .Event:Death % 20
  50C:  		SetConst  *Var0  00000002
  51C:  		SetConst  *Var1  002A0107
  52C:  		ExecWait  DoNormalHit
  538:  		Wait  10`
  544:  		SetConst  *Var0  00000002
  554:  		SetConst  *Var1  002A0106
  564:  		ExecWait  DoDeath
  570:  		Return
  578:  	Case  ==  .Event:BeginFirstStrike % 38
  584:  		Call  SetActorPos       ( .Actor:Self  20`  0`  0` )
  5A0:  		Call  HPBarToCurrent    ( .Actor:Self )
  5B0:  	Case  ==  .Event:EndFirstStrike % 35
  5BC:  		ExecWait  $Script_8022409C
  5C8:  		Call  HPBarToHome   ( .Actor:Self )
  5D8:  	Case  ==  .Event:RecoverStatus % 31
  5E4:  		SetConst  *Var0  00000002
  5F4:  		SetConst  *Var1  002A0101
  604:  		ExecWait  DoRecover
  610:  	Case  ==  .Event:ScareAway % 39
  61C:  		Call  SetActorFlagBits  ( .Actor:Self 00000200 .False )
  634:  		SetConst  *Var0  00000002
  644:  		SetConst  *Var1  002A0103
  654:  		SetConst  *Var2  002A0107
  664:  		ExecWait  DoScareAway
  670:  		Return
  678:  	Case  ==  .Event:BeginAirLift % 3A
  684:  		SetConst  *Var0  00000002
  694:  		SetConst  *Var1  002A0103
  6A4:  		ExecWait  DoAirLift
  6B0:  	Case  ==  .Event:BlowAway % 16
  6BC:  		SetConst  *Var0  00000002
  6CC:  		SetConst  *Var1  002A0107
  6DC:  		ExecWait  DoBlowAway
  6E8:  		Return
  6F0:  	Default
  6F8:  EndSwitch
  700:  Call  EnableIdleScript  ( .Actor:Self FFFFFFFF )
  714:  Call  UseIdleAnimation  ( .Actor:Self .True )
  728:  Return
  730:  End
}

#new:Script $Script_TakeTurn_80224854
{
    0:  Call  UseIdleAnimation  ( .Actor:Self .False )
   14:  Call  EnableIdleScript  ( .Actor:Self 00000000 )
   28:  Call  SetTargetActor    ( .Actor:Self .Actor:Player )
   3C:  Call  SetGoalToTarget   ( .Actor:Self )
   4C:  Call  UseBattleCamPreset    ( 00000005 )
   5C:  Call  BattleCamTargetActor  ( .Actor:Self )
   6C:  Call  SetTargetActor    ( .Actor:Self .Actor:Player )
   80:  Call  SetAnimation      ( .Actor:Self 00000002 002A0103 )
   98:  Call  SetGoalToTarget   ( .Actor:Self )
   A8:  Call  AddGoalPos        ( .Actor:Self  40`  30`  0` )
   C4:  Call  SetActorSpeed     ( .Actor:Self *Fixed[7.0] )
   D8:  Call  FlyToGoal ( .Actor:Self  0`  -16` .Easing:Linear )
   F4:  Call  8024E664  ( 00000001 )
  104:  Wait  5`
  110:  Call  EnemyTestTarget   ( .Actor:Self *Var0 ~Flags:DamageType:0 00000000 00000001 00000010 )
  134:  Switch  *Var0
  140:  	CaseOR  ==  .HitResult:Miss % 6
  14C:  	CaseOR  ==  .HitResult:Lucky % 5
  158:  		Set   *VarA  *Var0
  168:  		Call  PlaySoundAtActor  ( .Actor:Self 000020E0 )
  17C:  		Call  SetActorSounds    ( .Actor:Self .ActorSound:Fly 00000000 00000000 )
  198:  		Call  SetAnimation  ( .Actor:Self 00000002 002A0104 )
  1B0:  		Call  GetActorPos   ( .Actor:Self *Var0 *Var1 *Var2 )
  1CC:  		Call  SetGoalPos    ( .Actor:Self *Var0 *Var1 *Var2 )
  1E8:  		Call  AddGoalPos    ( .Actor:Self  6`  6`  0` )
  204:  		Call  SetActorSpeed ( .Actor:Self *Fixed[2.0] )
  218:  		Call  FlyToGoal     ( .Actor:Self  0`  0` .Easing:Linear )
  234:  		Wait  6`
  240:  		Call  PlaySoundAtActor  ( .Actor:Self 000002C1 )
  254:  		Call  SetActorSounds    ( .Actor:Self .ActorSound:Fly 00000000 00000000 )
  270:  		Call  GetActorPos   ( .Actor:Player *Var0 *Var1 *Var2 )
  28C:  		Sub   *Var0  00000019
  29C:  		Set   *Var1  00000000
  2AC:  		Call  SetGoalPos    ( .Actor:Self *Var0 *Var1 *Var2 )
  2C8:  		Call  SetActorSpeed ( .Actor:Self *Fixed[10.0] )
  2DC:  		Call  SetAnimation  ( .Actor:Self 00000002 002A010C )
  2F4:  		Call  FlyToGoal     ( .Actor:Self  0`  0` .Easing:Linear )
  310:  		Call  GetActorPos   ( .Actor:Self *Var0 *Var1 *Var2 )
  32C:  		Sub   *Var0  0000001E
  33C:  		Call  SetGoalPos    ( .Actor:Self *Var0 *Var1 *Var2 )
  358:  		Call  SetActorJumpGravity   ( .Actor:Self *Fixed[4.0] )
  36C:  		Thread
  374:  			Call  SetActorRotationOffset    ( .Actor:Self 00000000 0000000A 00000000 )
  390:  			Set   *Var0  00000000
  3A0:  			Loop  00000008
  3AC:  				Add   *Var0  0000005A
  3BC:  				If  *Var0  >=  00000168
  3CC:  					Sub   *Var0  00000168
  3DC:  				EndIf
  3E4:  				Call  SetActorRotation  ( .Actor:Self 00000000 00000000 *Var0 )
  400:  				Wait  1`
  40C:  			EndLoop
  414:  			Call  SetActorRotation  ( .Actor:Self 00000000 00000000 00000000 )
  430:  			Call  SetActorRotationOffset    ( .Actor:Self 00000000 FFFFFFF6 00000000 )
  44C:  		EndThread
  454:  		Call  JumpToGoal    ( .Actor:Self  6` .False .True .False )
  474:  		Call  GetActorPos   ( .Actor:Self *Var0 *Var1 *Var2 )
  490:  		Sub   *Var0  0000001E
  4A0:  		Call  SetGoalPos    ( .Actor:Self *Var0 *Var1 *Var2 )
  4BC:  		Call  SetActorJumpGravity   ( .Actor:Self *Fixed[4.0] )
  4D0:  		Call  SetAnimation  ( .Actor:Self 00000002 002A0107 )
  4E8:  		Call  JumpToGoal    ( .Actor:Self  6` .False .True .False )
  508:  		Call  GetActorPos   ( .Actor:Self *Var0 *Var1 *Var2 )
  524:  		Sub   *Var0  0000001E
  534:  		Call  SetGoalPos    ( .Actor:Self *Var0 *Var1 *Var2 )
  550:  		Call  SetActorJumpGravity   ( .Actor:Self *Fixed[4.0] )
  564:  		Call  SetAnimation  ( .Actor:Self 00000002 002A0107 )
  57C:  		Call  JumpToGoal    ( .Actor:Self  6` .False .True .False )
  59C:  		If  *VarA  ==  .HitResult:Lucky % 5
  5AC:  			Call  EnemyTestTarget   ( .Actor:Self *Var0 ~Flags:DamageType:TriggerLucky 00000000 00000000 00000000 )
  5D0:  		EndIf
  5D8:  		Call  GetActorPos       ( .Actor:Self *Var0 *Var1 *Var2 )
  5F4:  		Add   *Var1  0000001E
  604:  		Call  SetActorPos       ( .Actor:Self *Var0 *Var1 *Var2 )
  620:  		Wait  20`
  62C:  		Call  UseBattleCamPreset    ( 00000002 )
  63C:  		Call  YieldTurn ( )
  648:  		Call  ResetAllActorSounds   ( .Actor:Self )
  658:  		Call  AddActorDecoration    ( .Actor:Self 00000002 00000000 .Decoration:Sweat )
  674:  		Call  SetActorYaw       ( .Actor:Self  180` )
  688:  		ExecWait  $Script_8022409C
  694:  		Call  SetActorYaw       ( .Actor:Self  0` )
  6A8:  		Call  RemoveActorDecoration ( .Actor:Self 00000002 00000000 )
  6C0:  		Call  EnableIdleScript  ( .Actor:Self FFFFFFFF )
  6D4:  		Call  UseIdleAnimation  ( .Actor:Self .True )
  6E8:  		Return
  6F0:  	EndCaseGroup
  6F8:  EndSwitch
  700:  Call  PlaySoundAtActor  ( .Actor:Self 000020E0 )
  714:  Call  SetActorSounds    ( .Actor:Self .ActorSound:Fly 00000000 00000000 )
  730:  Call  SetAnimation  ( .Actor:Self 00000002 002A0104 )
  748:  Call  GetActorPos   ( .Actor:Self *Var0 *Var1 *Var2 )
  764:  Call  SetGoalPos    ( .Actor:Self *Var0 *Var1 *Var2 )
  780:  Call  AddGoalPos    ( .Actor:Self  6`  6`  0` )
  79C:  Call  SetActorSpeed ( .Actor:Self *Fixed[2.0] )
  7B0:  Call  FlyToGoal     ( .Actor:Self  0`  0` .Easing:Linear )
  7CC:  Wait  6`
  7D8:  Call  PlaySoundAtActor  ( .Actor:Self 000002C1 )
  7EC:  Call  SetActorSounds    ( .Actor:Self .ActorSound:Fly 00000000 00000000 )
  808:  Call  SetGoalToTarget   ( .Actor:Self )
  818:  Call  SetActorSpeed ( .Actor:Self *Fixed[10.0] )
  82C:  Call  SetAnimation  ( .Actor:Self 00000002 002A010C )
  844:  Call  FlyToGoal     ( .Actor:Self  0`  0` .Easing:Linear )
  860:  Wait  2`
  86C:  Call  EnemyDamageTarget ( .Actor:Self *Var0 ~Flags:DamageType:0 0000FFFF 00000000 00000001 00000020 )
  894:  Switch  *Var0
  8A0:  	CaseOR  ==  .HitResult:Hit % 0
  8AC:  	CaseOR  ==  .HitResult:QuakeImmune % 2
  8B8:  		Call  UseBattleCamPreset    ( 00000002 )
  8C8:  		Call  SetGoalToTarget   ( .Actor:Self )
  8D8:  		Call  AddGoalPos        ( .Actor:Self  40`  30`  0` )
  8F4:  		Call  SetActorSpeed     ( .Actor:Self *Fixed[6.0] )
  908:  		Call  SetAnimation      ( .Actor:Self 00000002 002A010D )
  920:  		Thread
  928:  			Call  SetActorRotationOffset    ( .Actor:Self 00000000 0000000A 00000000 )
  944:  			Set   *Var0  00000000
  954:  			Loop  0000000C
  960:  				Sub   *Var0  0000005A
  970:  				If  *Var0  <  00000000
  980:  					Add   *Var0  00000168
  990:  				EndIf
  998:  				Call  SetActorRotation  ( .Actor:Self 00000000 00000000 *Var0 )
  9B4:  				Wait  1`
  9C0:  			EndLoop
  9C8:  			Call  SetActorRotation  ( .Actor:Self 00000000 00000000 00000000 )
  9E4:  			Call  SetActorRotationOffset    ( .Actor:Self 00000000 FFFFFFF6 00000000 )
  A00:  			Call  SetAnimation  ( .Actor:Self 00000002 002A0101 )
  A18:  		EndThread
  A20:  		Call  FlyToGoal ( .Actor:Self  0`  30` .Easing:Linear )
  A3C:  		Wait  10`
  A48:  		Call  YieldTurn ( )
  A54:  		Call  ResetAllActorSounds   ( .Actor:Self )
  A64:  		ExecWait  $Script_8022409C
  A70:  	EndCaseGroup
  A78:  EndSwitch
  A80:  Call  EnableIdleScript  ( .Actor:Self FFFFFFFF )
  A94:  Call  UseIdleAnimation  ( .Actor:Self .True )
  AA8:  Return
  AB0:  End
}

#new:Script $Script_8022530C
{
    0:  Call  SetPartDispOffset ( .Actor:Self 00000002 00000000 00000000 00000000 )
   20:  Call  8027D32C      ( FFFFFF81 )
   30:  Call  SetPartFlags  ( .Actor:Self 00000002 00020005 )
   48:  Call  SetPartFlags  ( .Actor:Self 00000003 00120004 )
   60:  Call  SetPartFlags  ( .Actor:Self 00000001 00800004 )
   78:  Call  GetActorPos   ( .Actor:Self *Var0 *Var1 *Var2 )
   94:  Add   *Var1  00000008
   A4:  Sub   *Var2  00000002
   B4:  Call  SetPartPos    ( .Actor:Self 00000003 *Var0 *Var1 *Var2 )
   D4:  Call  SetAnimation  ( .Actor:Self 00000001 0029010B )
   EC:  Call  SetActorSounds    ( .Actor:Self .ActorSound:Jump 00000301 00000000 )
  108:  Call  GetActorVar   ( .Actor:Self 00000000 *VarA )
  120:  If  *VarA  ==  00000000
  130:  	Call  GetActorPos   ( .Actor:Self *Var0 *Var1 *Var2 )
  14C:  	Set   *Var1  00000000
  15C:  	Call  SetActorJumpGravity   ( .Actor:Self *Fixed[0.8] )
  170:  	Call  SetGoalPos    ( .Actor:Self *Var0 *Var1 *Var2 )
  18C:  	Call  JumpToGoal    ( .Actor:Self  15` .False .True .False )
  1AC:  	Call  $Function_80218A20    ( 00000080 00000007 )
  1C0:  	Thread
  1C8:  		Call  ShakeCam  ( .Cam:Battle 00000000  5` *Fixed[0.3] )
  1E4:  	EndThread
  1EC:  	Call  ResetActorSounds  ( .Actor:Self .ActorSound:Jump )
  200:  	Call  SetGoalPos    ( .Actor:Self *Var0 *Var1 *Var2 )
  21C:  	Call  JumpToGoal    ( .Actor:Self  10` .False .True .False )
  23C:  	Call  SetGoalPos    ( .Actor:Self *Var0 *Var1 *Var2 )
  258:  	Call  JumpToGoal    ( .Actor:Self  5` .False .True .False )
  278:  	Loop  0000000A
  284:  		Call  SetPartFlagBits   ( .Actor:Self 00000003 00000001 .True )
  2A0:  		Wait  1`
  2AC:  		Call  SetPartFlagBits   ( .Actor:Self 00000003 00000001 .False )
  2C8:  		Wait  1`
  2D4:  	EndLoop
  2DC:  	Call  SetPartFlagBits   ( .Actor:Self 00000003 00000001 .True )
  2F8:  Else
  300:  	Call  GetActorPos   ( .Actor:Self *Var0 *Var1 *Var2 )
  31C:  	Set   *Var1  00000000
  32C:  	Call  SetActorJumpGravity   ( .Actor:Self *Fixed[0.8] )
  340:  	Call  SetGoalPos    ( .Actor:Self *Var0 *Var1 *Var2 )
  35C:  	Call  JumpToGoal    ( .Actor:Self  15` .False .True .False )
  37C:  	Thread
  384:  		Loop  0000000A
  390:  			Call  SetPartFlagBits   ( .Actor:Self 00000003 00000001 .True )
  3AC:  			Wait  1`
  3B8:  			Call  SetPartFlagBits   ( .Actor:Self 00000003 00000001 .False )
  3D4:  			Wait  1`
  3E0:  		EndLoop
  3E8:  		Call  SetPartFlagBits   ( .Actor:Self 00000003 00000001 .True )
  404:  	EndThread
  40C:  	Call  $Function_80218A20    ( 00000096 00000007 )
  420:  	Thread
  428:  		Call  ShakeCam  ( .Cam:Battle 00000000  5` *Fixed[0.3] )
  444:  	EndThread
  44C:  	Call  ResetActorSounds  ( .Actor:Self .ActorSound:Jump )
  460:  EndIf
  468:  Call  GetIndexFromHome  ( .Actor:Self *Var0 )
  47C:  Mod   *Var0  00000004
  48C:  Call  SetGoalToIndex    ( .Actor:Self *Var0 )
  4A0:  Call  GetGoalPos        ( .Actor:Self *Var0 *Var1 *Var2 )
  4BC:  Call  SetHomePos        ( .Actor:Self *Var0 *Var1 *Var2 )
  4D8:  Call  SetAnimation      ( .Actor:Self 00000001 00290101 )
  4F0:  Call  SetActorFlagBits  ( .Actor:Self 00000200 .False )
  508:  Call  SetStatusTable    ( .Actor:Self $StatusTable_80223944 )
  51C:  Call  BindNextTurn      ( .Actor:Self 00000000 )
  530:  ExecWait  $Script_802259B4
  53C:  Call  SetActorType      ( .Actor:Self 0000000B )
  550:  Call  SetActorFlagBits  ( .Actor:Self 00001000 .True )
  568:  Call  HPBarToHome       ( .Actor:Self )
  578:  Call  ResetAllActorSounds   ( .Actor:Self )
  588:  If  *VarA  !=  00000000
  598:  	Call  DispatchEvent ( .Actor:Self .Event:FlipTrigger )
  5AC:  EndIf
  5B4:  Return
  5BC:  End
}

#new:IdleAnimations $IdleAnimations_802258D0
{
	.Status:Normal    00290101
	.Status:Stone     00290100
	.Status:Sleep     00290111
	.Status:Poison    00290101
	.Status:Stop      00290100
	.Status:Static    00290101
	.Status:Paralyze  00290100
	.Status:Dizzy     00290113
	.Status:Fear      00290113
	.Status:End
}

#new:IdleAnimations $IdleAnimations_8022591C
{
	.Status:Normal    00290103
	.Status:Stone     00290100
	.Status:Sleep     00290111
	.Status:Poison    00290103
	.Status:Stop      00290100
	.Status:Static    00290103
	.Status:Paralyze  00290100
	.Status:Dizzy     00290113
	.Status:Fear      00290113
	.Status:End
}

#new:IdleAnimations $IdleAnimations_80225968
{
	.Status:Normal    0029010F
	.Status:Stone     00290110
	.Status:Sleep     00290112
	.Status:Poison    0029010F
	.Status:Stop      00290110
	.Status:Static    0029010F
	.Status:Paralyze  00290110
	.Status:Dizzy     00290114
	.Status:Fear      00290114
	.Status:End
}

#new:Script $Script_802259B4
{
    0:  Call  BindTakeTurn  ( .Actor:Self $Script_TakeTurn_80226BDC )
   14:  Call  BindIdle      ( .Actor:Self $Script_Idle_80225B70 )
   28:  Call  BindHandleEvent   ( .Actor:Self $Script_HandleEvent_80226058 )
   3C:  Call  SetActorVar   ( .Actor:Self 00000008 00000000 )
   54:  Return
   5C:  End
}

#new:Script $Script_80225A18
{
    0:  Switch  *Var0
    C:  	Case  ==  00000000
   18:  		If  *Var1  &  00041000
   28:  			Call  SetTargetOffset       ( .Actor:Self 00000001  -5`  15` )
   44:  			Call  8027D4C8  ( FFFFFF81 00000001 00000000 00000000 )
   60:  			Call  $Function_80218A78    ( FFFFFFF6 00000014 0000000A 00000014 )
   7C:  		Else
   84:  			Call  SetTargetOffset       ( .Actor:Self 00000001  -4`  32` )
   A0:  			Call  8027D4C8  ( FFFFFF81 00000001 FFFFFFFF FFFFFFFC )
   BC:  			Call  $Function_80218A78    ( FFFFFFF1 00000020 00000005 00000020 )
   D8:  		EndIf
   E0:  	Case  ==  00000001
   EC:  		Call  SetTargetOffset       ( .Actor:Self 00000001  -5`  15` )
  108:  		Call  8027D4C8  ( FFFFFF81 00000001 00000000 00000000 )
  124:  		Call  $Function_80218A78    ( FFFFFFF6 00000014 0000000A 00000014 )
  140:  EndSwitch
  148:  Return
  150:  End
}

#new:Script $Script_Idle_80225B70
{
    0:  Label  0
    C:  Call  RandInt   ( 00000050 *VarA )
   20:  Add   *VarA  00000050
   30:  Loop  *VarA
   3C:  	Label  1
   48:  	Call  GetActorVar       ( .Actor:Self 00000008 *Var0 )
   60:  	Call  GetStatusFlags    ( .Actor:Self *Var1 )
   74:  	ExecWait  $Script_80225A18
   80:  	If  *Var0  ==  00000001
   90:  		Wait  1`
   9C:  		Goto  1
   A8:  	EndIf
   B0:  	If  *Var1  &  0035D000
   C0:  		Wait  1`
   CC:  		Goto  1
   D8:  	EndIf
   E0:  	Wait  1`
   EC:  EndLoop
   F4:  Call  GetActorPos   ( .Actor:Self *Var0 *Var1 *Var2 )
  110:  Add   *Var0  00000005
  120:  Call  SetActorIdleSpeed ( .Actor:Self *Fixed[1.0] )
  134:  Call  SetIdleAnimations ( .Actor:Self 00000001 $IdleAnimations_8022591C )
  14C:  Call  SetIdleGoal   ( .Actor:Self *Var0 *Var1 *Var2 )
  168:  Call  IdleRunToGoal ( .Actor:Self  0` )
  17C:  Call  GetActorVar   ( .Actor:Self 00000008 *Var0 )
  194:  Switch  *Var0
  1A0:  	Case  ==  00000000
  1AC:  		Call  SetIdleAnimations ( .Actor:Self 00000001 $IdleAnimations_802258D0 )
  1C4:  	Case  ==  00000001
  1D0:  		Call  SetIdleAnimations ( .Actor:Self 00000001 $IdleAnimations_80225968 )
  1E8:  EndSwitch
  1F0:  Loop  00000014
  1FC:  	Label  2
  208:  	Call  GetActorVar       ( .Actor:Self 00000008 *Var0 )
  220:  	Call  GetStatusFlags    ( .Actor:Self *Var1 )
  234:  	ExecWait  $Script_80225A18
  240:  	If  *Var0  ==  00000001
  250:  		Wait  1`
  25C:  		Goto  2
  268:  	EndIf
  270:  	If  *Var1  &  0035D000
  280:  		Wait  1`
  28C:  		Goto  2
  298:  	EndIf
  2A0:  	Wait  1`
  2AC:  EndLoop
  2B4:  Call  GetActorPos   ( .Actor:Self *Var0 *Var1 *Var2 )
  2D0:  Sub   *Var0  00000005
  2E0:  Call  SetActorIdleSpeed ( .Actor:Self *Fixed[1.0] )
  2F4:  Call  SetIdleAnimations ( .Actor:Self 00000001 $IdleAnimations_8022591C )
  30C:  Call  SetIdleGoal   ( .Actor:Self *Var0 *Var1 *Var2 )
  328:  Call  IdleRunToGoal ( .Actor:Self  0` )
  33C:  Call  GetActorVar   ( .Actor:Self 00000008 *Var0 )
  354:  Switch  *Var0
  360:  	Case  ==  00000000
  36C:  		Call  SetIdleAnimations ( .Actor:Self 00000001 $IdleAnimations_802258D0 )
  384:  	Case  ==  00000001
  390:  		Call  SetIdleAnimations ( .Actor:Self 00000001 $IdleAnimations_80225968 )
  3A8:  EndSwitch
  3B0:  Loop  00000050
  3BC:  	Label  3
  3C8:  	Call  GetActorVar       ( .Actor:Self 00000008 *Var0 )
  3E0:  	Call  GetStatusFlags    ( .Actor:Self *Var1 )
  3F4:  	ExecWait  $Script_80225A18
  400:  	If  *Var0  ==  00000001
  410:  		Wait  1`
  41C:  		Goto  3
  428:  	EndIf
  430:  	If  *Var1  &  0035D000
  440:  		Wait  1`
  44C:  		Goto  3
  458:  	EndIf
  460:  	Wait  1`
  46C:  EndLoop
  474:  Goto  0
  480:  Return
  488:  End
}

#new:IntTable $IntTable_80226000
{
	00000009 00000010 00000016 0000001A 0000001E 00000020 00000021 00000020
	0000001E 0000001A 00000016 00000010 00000009 00000000 00000004 00000006
	00000007 00000006 00000004 00000000 00000002 00000000
}

#new:Script $Script_HandleEvent_80226058
{
    0:  Call  UseIdleAnimation  ( .Actor:Self .False )
   14:  Call  EnableIdleScript  ( .Actor:Self 00000000 )
   28:  Call  SetActorYaw       ( .Actor:Self  0` )
   3C:  Call  GetLastEvent      ( .Actor:Self *Var0 )
   50:  Switch  *Var0
   5C:  	CaseOR  ==  .Event:HitCombo % 9
   68:  	CaseOR  ==  .Event:Hit % A
   74:  		SetConst  *Var0  00000001
   84:  		SetConst  *Var1  0029010B
   94:  		ExecWait  DoNormalHit
   A0:  	EndCaseGroup
   A8:  	Case  ==  .Event:BurnHit % E
   B4:  		SetConst  *Var0  00000001
   C4:  		SetConst  *Var1  0029010C
   D4:  		SetConst  *Var2  0029010D
   E4:  		ExecWait  DoBurnHit
   F0:  	Case  ==  .Event:BurnDeath % 24
   FC:  		SetConst  *Var0  00000001
  10C:  		SetConst  *Var1  0029010C
  11C:  		SetConst  *Var2  0029010D
  12C:  		ExecWait  DoBurnHit
  138:  		SetConst  *Var0  00000001
  148:  		SetConst  *Var1  0029010D
  158:  		ExecWait  DoDeath
  164:  		Return
  16C:  	Case  ==  .Event:SpinSmashHit % B
  178:  		SetConst  *Var0  00000001
  188:  		SetConst  *Var1  0029010B
  198:  		ExecWait  DoSpinSmashHit
  1A4:  	Case  ==  .Event:SpinSmashDeath % 21
  1B0:  		SetConst  *Var0  00000001
  1C0:  		SetConst  *Var1  0029010B
  1D0:  		ExecWait  DoSpinSmashHit
  1DC:  		SetConst  *Var0  00000001
  1EC:  		SetConst  *Var1  0029010B
  1FC:  		ExecWait  DoDeath
  208:  		Return
  210:  	Case  ==  .Event:FlipTrigger % D
  21C:  		Call  SetActorVar       ( .Actor:Self 00000008 00000001 )
  234:  		Call  SetActorVar       ( .Actor:Self 00000009 00000002 )
  24C:  		Call  SetDefenseTable   ( .Actor:Self 00000001 $DefenseTable_80223938 )
  264:  		Call  SetIdleAnimations ( .Actor:Self 00000001 $IdleAnimations_80225968 )
  27C:  		Call  SetTargetOffset   ( .Actor:Self 00000001  -5`  15` )
  298:  		Call  8027D4C8  ( FFFFFF81 00000001 00000000 00000000 )
  2B4:  		Call  SetActorFlagBits  ( .Actor:Self 00000400 .True )
  2CC:  		Call  SetAnimation      ( .Actor:Self 00000001 0029010B )
  2E4:  		Call  GetStatusFlags    ( .Actor:Self *VarA )
  2F8:  		Call  SetActorRotationOffset    ( .Actor:Self 00000000 0000000C 00000000 )
  314:  		ChildThread
  31C:  			Wait  4`
  328:  			Call  SetActorRotation  ( .Actor:Self 00000000 00000000 0000001E )
  344:  			Wait  1`
  350:  			Call  SetActorRotation  ( .Actor:Self 00000000 00000000 00000000 )
  36C:  			Wait  1`
  378:  			Call  SetActorRotation  ( .Actor:Self 00000000 00000000 FFFFFFE2 )
  394:  			Wait  1`
  3A0:  			Call  SetActorRotation  ( .Actor:Self 00000000 00000000 FFFFFFC4 )
  3BC:  			Wait  1`
  3C8:  			Call  SetActorRotation  ( .Actor:Self 00000000 00000000 FFFFFFB5 )
  3E4:  			Wait  1`
  3F0:  		EndChildThread
  3F8:  		UseIntBuffer  $IntTable_80226000
  404:  		Loop  00000016
  410:  			Get1Int  *Var0
  41C:  			Call  SetActorDispOffset    ( .Actor:Self 00000000 *Var0 00000000 )
  438:  			Wait  1`
  444:  		EndLoop
  44C:  		Call  SetActorRotationOffset    ( .Actor:Self 00000000 00000000 00000000 )
  468:  		Call  SetActorRotation      ( .Actor:Self 00000000 00000000 00000000 )
  484:  		Call  SetActorDispOffset    ( .Actor:Self 00000000 00000000 00000000 )
  4A0:  		Call  SetAnimation  ( .Actor:Self 00000001 0029010F )
  4B8:  	Case  ==  .Event:ShockHit % 2F
  4C4:  		SetConst  *Var0  00000001
  4D4:  		SetConst  *Var1  0029010B
  4E4:  		ExecWait  DoShockHit
  4F0:  		SetConst  *Var0  00000001
  500:  		SetConst  *Var1  0029010B
  510:  		ExecWait  DoJumpBack
  51C:  		Call  JumpToGoal    ( .Actor:Self  5` .False .True .False )
  53C:  		SetConst  *Var0  00000001
  54C:  		SetConst  *Var1  00290104
  55C:  		ExecWait  DoReturnHome
  568:  		Call  SetActorJumpGravity   ( .Actor:Self *Fixed[1.6] )
  57C:  		Call  JumpToGoal    ( .Actor:Self  5` .False .True .False )
  59C:  	Case  ==  .Event:ShockDeath % 26
  5A8:  		SetConst  *Var0  00000001
  5B8:  		SetConst  *Var1  0029010B
  5C8:  		ExecWait  DoShockHit
  5D4:  		SetConst  *Var0  00000001
  5E4:  		SetConst  *Var1  0029010B
  5F4:  		ExecWait  DoDeath
  600:  		Return
  608:  	CaseOR  ==  00000017 % 17
  614:  	CaseOR  ==  .Event:Immune % 19
  620:  		Call  GetActorVar   ( .Actor:Self 00000008 *Var0 )
  638:  		If  *Var0  ==  00000000
  648:  			SetConst  *Var0  00000001
  658:  			SetConst  *Var1  00290107
  668:  			ExecWait  DoImmune
  674:  			Call  GetStatusFlags    ( .Actor:Self *Var0 )
  688:  			If  *Var0  !&  ~Flags:StatusFlags:Sleep|Frozen|Fear|Paralyze|Dizzy|Stone|Stop % 35D000
  698:  				Call  SetAnimation  ( .Actor:Self 00000001 00290108 )
  6B0:  				Wait  10`
  6BC:  			EndIf
  6C4:  		Else
  6CC:  			SetConst  *Var0  00000001
  6DC:  			SetConst  *Var1  0029010F
  6EC:  			ExecWait  DoImmune
  6F8:  		EndIf
  700:  	EndCaseGroup
  708:  	Case  ==  .Event:Death % 20
  714:  		SetConst  *Var0  00000001
  724:  		SetConst  *Var1  0029010B
  734:  		ExecWait  DoNormalHit
  740:  		Wait  10`
  74C:  		SetConst  *Var0  00000001
  75C:  		SetConst  *Var1  0029010B
  76C:  		ExecWait  DoDeath
  778:  		Return
  780:  	Case  ==  .Event:EndFirstStrike % 35
  78C:  		Call  GetActorVar   ( .Actor:Self 00000008 *Var0 )
  7A4:  		If  *Var0  ==  00000000
  7B4:  			SetConst  *Var0  00000001
  7C4:  			SetConst  *Var1  00290104
  7D4:  			ExecWait  DoReturnHome
  7E0:  		EndIf
  7E8:  		Call  GetActorPos   ( .Actor:Self *Var0 *Var1 *Var2 )
  804:  		Call  SetHomePos    ( .Actor:Self *Var0 *Var1 *Var2 )
  820:  		Call  HPBarToHome   ( .Actor:Self )
  830:  	Case  ==  .Event:RecoverStatus % 31
  83C:  		Call  GetActorVar   ( .Actor:Self 00000008 *Var0 )
  854:  		If  *Var0  ==  00000000
  864:  			SetConst  *Var0  00000001
  874:  			SetConst  *Var1  00290101
  884:  			ExecWait  DoRecover
  890:  		Else
  898:  			SetConst  *Var0  00000001
  8A8:  			SetConst  *Var1  0029010F
  8B8:  			ExecWait  DoImmune
  8C4:  		EndIf
  8CC:  	Case  ==  .Event:ScareAway % 39
  8D8:  		Call  GetActorVar   ( .Actor:Self 00000008 *Var0 )
  8F0:  		If  *Var0  ==  00000000
  900:  			SetConst  *Var0  00000001
  910:  			SetConst  *Var1  00290104
  920:  			SetConst  *Var2  0029010B
  930:  			ExecWait  DoScareAway
  93C:  			Return
  944:  		Else
  94C:  			SetConst  *Var0  00000001
  95C:  			SetConst  *Var1  0029010F
  96C:  			ExecWait  DoImmune
  978:  		EndIf
  980:  	Case  ==  .Event:BeginAirLift % 3A
  98C:  		Call  GetActorVar   ( .Actor:Self 00000008 *Var0 )
  9A4:  		If  *Var0  ==  00000000
  9B4:  			SetConst  *Var0  00000001
  9C4:  			SetConst  *Var1  00290117
  9D4:  		Else
  9DC:  			SetConst  *Var0  00000001
  9EC:  			SetConst  *Var1  0029010F
  9FC:  		EndIf
  A04:  		ExecWait  DoAirLift
  A10:  	Case  ==  .Event:BlowAway % 16
  A1C:  		Call  GetActorVar   ( .Actor:Self 00000008 *Var0 )
  A34:  		If  *Var0  ==  00000000
  A44:  			SetConst  *Var0  00000001
  A54:  			SetConst  *Var1  00290117
  A64:  		Else
  A6C:  			SetConst  *Var0  00000001
  A7C:  			SetConst  *Var1  0029010F
  A8C:  		EndIf
  A94:  		ExecWait  DoBlowAway
  AA0:  		Return
  AA8:  	Case  ==  .Event:AirLiftFailed % 1F
  AB4:  		Call  GetActorVar   ( .Actor:Self 00000008 *Var0 )
  ACC:  		If  *Var0  ==  00000000
  ADC:  			SetConst  *Var0  00000001
  AEC:  			SetConst  *Var1  00290101
  AFC:  			ExecWait  DoImmune
  B08:  		Else
  B10:  			SetConst  *Var0  00000001
  B20:  			SetConst  *Var1  0029010F
  B30:  			ExecWait  DoImmune
  B3C:  		EndIf
  B44:  EndSwitch
  B4C:  Call  EnableIdleScript  ( .Actor:Self FFFFFFFF )
  B60:  Call  UseIdleAnimation  ( .Actor:Self .True )
  B74:  Return
  B7C:  End
}

#new:Script $Script_TakeTurn_80226BDC
{
    0:  Call  UseIdleAnimation  ( .Actor:Self .False )
   14:  Call  EnableIdleScript  ( .Actor:Self 00000000 )
   28:  Call  SetTargetActor    ( .Actor:Self .Actor:Player )
   3C:  Call  GetBattlePhase    ( *Var0 )
   4C:  If  *Var0  ==  00000001
   5C:  	Call  SetAnimation  ( .Actor:Self 00000001 00290106 )
   74:  Else
   7C:  	Call  GetActorVar   ( .Actor:Self 00000008 *Var0 )
   94:  	If  *Var0  ==  00000001
   A4:  		Call  GetActorVar   ( .Actor:Self 00000009 *Var0 )
   BC:  		Sub   *Var0  00000001
   CC:  		If  *Var0  >  00000000
   DC:  			Call  SetActorVar   ( .Actor:Self 00000009 *Var0 )
   F4:  			Call  AddActorDecoration    ( .Actor:Self 00000001 00000000 .Decoration:Sweat )
  110:  			Call  SetAnimationRate      ( .Actor:Self 00000001 *Fixed[3.0] )
  128:  			Wait  30`
  134:  			Call  SetAnimationRate      ( .Actor:Self 00000001 *Fixed[1.0] )
  14C:  			Call  RemoveActorDecoration ( .Actor:Self 00000001 00000000 )
  164:  		Else
  16C:  			Call  AddActorDecoration        ( .Actor:Self 00000001 00000000 .Decoration:Sweat )
  188:  			Call  SetAnimationRate  ( .Actor:Self 00000001 *Fixed[3.0] )
  1A0:  			Wait  20`
  1AC:  			Call  SetAnimationRate  ( .Actor:Self 00000001 *Fixed[1.0] )
  1C4:  			Call  RemoveActorDecoration     ( .Actor:Self 00000001 00000000 )
  1DC:  			Call  SetActorSounds    ( .Actor:Self .ActorSound:Jump 00000000 00000000 )
  1F8:  			Call  PlaySoundAtActor  ( .Actor:Self .Sound:Jump )
  20C:  			Call  SetAnimation      ( .Actor:Self 00000001 0029010F )
  224:  			Set   *Var0  00000000
  234:  			Call  SetActorRotationOffset    ( .Actor:Self 00000000 0000000C 00000000 )
  250:  			ChildThread
  258:  				Loop  00000005
  264:  					Add   *Var0  0000000F
  274:  					Call  SetActorRotation  ( .Actor:Self 00000000 00000000 *Var0 )
  290:  					Wait  1`
  29C:  				EndLoop
  2A4:  			EndChildThread
  2AC:  			Call  GetActorPos       ( .Actor:Self *Var0 *Var1 *Var2 )
  2C8:  			Call  SetGoalPos        ( .Actor:Self *Var0 *Var1 *Var2 )
  2E4:  			Call  SetActorJumpGravity       ( .Actor:Self *Fixed[3.0] )
  2F8:  			Call  JumpToGoal        ( .Actor:Self  8` .False .True .False )
  318:  			Call  PlaySoundAtActor  ( .Actor:Self 000020BA )
  32C:  			Call  SetActorRotationOffset    ( .Actor:Self 00000000 00000000 00000000 )
  348:  			Call  SetActorRotation  ( .Actor:Self 00000000 00000000 00000000 )
  364:  			Call  SetActorDispOffset        ( .Actor:Self 00000000 00000000 00000000 )
  380:  			Call  SetAnimation      ( .Actor:Self 00000001 00290101 )
  398:  			Call  SetActorVar       ( .Actor:Self 00000008 00000000 )
  3B0:  			Call  SetIdleAnimations ( .Actor:Self 00000001 $IdleAnimations_802258D0 )
  3C8:  			Call  SetDefenseTable   ( .Actor:Self 00000001 $DefenseTable_80223900 )
  3E0:  			Call  SetTargetOffset   ( .Actor:Self 00000001  -4`  32` )
  3FC:  			Call  8027D4C8  ( FFFFFF81 00000001 FFFFFFFF FFFFFFFC )
  418:  			Call  SetActorFlagBits  ( .Actor:Self 00000400 .False )
  430:  			Call  ResetActorSounds  ( .Actor:Self .ActorSound:Jump )
  444:  		EndIf
  44C:  		Call  EnableIdleScript  ( .Actor:Self 00000001 )
  460:  		Call  UseIdleAnimation  ( .Actor:Self .True )
  474:  		Return
  47C:  	EndIf
  484:  	Call  UseBattleCamPreset    ( 0000003F )
  494:  	Call  BattleCamTargetActor  ( .Actor:Self )
  4A4:  	Wait  10`
  4B0:  	Call  SetAnimation  ( .Actor:Self 00000001 00290107 )
  4C8:  	Wait  10`
  4D4:  	ChildThread
  4DC:  		Call  GetActorPos   ( .Actor:Self *Var0 *Var1 *Var2 )
  4F8:  		Add   *Var1  00000004
  508:  		Call  PlayEffect    ( ~FX:SmokeImpact:Small *Var0 *Var1 *Var2 00000020 00000004 00000000 0000000A 00000000 00000000 00000000 00000000 00000000 )
  54C:  		Wait  3`
  558:  		Call  PlayEffect    ( ~FX:SmokeImpact:Small *Var0 *Var1 *Var2 00000020 00000004 00000000 0000000A 00000000 00000000 00000000 00000000 00000000 )
  59C:  		Wait  2`
  5A8:  		Call  PlayEffect    ( ~FX:SmokeImpact:Small *Var0 *Var1 *Var2 00000020 00000004 00000000 0000000A 00000000 00000000 00000000 00000000 00000000 )
  5EC:  	EndChildThread
  5F4:  	Call  PlaySoundAtActor  ( .Actor:Self 00002021 )
  608:  	Call  SetAnimation      ( .Actor:Self 00000001 00290106 )
  620:  	Wait  10`
  62C:  	Call  8024ECF8  ( FFFFFFFF 00000001 00000000 )
  644:  EndIf
  64C:  Call  PlaySoundAtActor  ( .Actor:Self 000020D3 )
  660:  Call  SetActorSounds    ( .Actor:Self .ActorSound:Walk 00000000 00000000 )
  67C:  Call  EnemyTestTarget   ( .Actor:Self *Var0 ~Flags:DamageType:0 00000000 00000001 00000010 )
  6A0:  Switch  *Var0
  6AC:  	CaseOR  ==  .HitResult:Miss % 6
  6B8:  	CaseOR  ==  .HitResult:Lucky % 5
  6C4:  		Set   *VarA  *Var0
  6D4:  		Call  SetGoalToTarget   ( .Actor:Self )
  6E4:  		Call  AddGoalPos        ( .Actor:Self  -40`  0`  0` )
  700:  		Call  SetActorSpeed     ( .Actor:Self *Fixed[16.0] )
  714:  		Call  RunToGoal ( .Actor:Self  0` .False )
  72C:  		Call  GetBattlePhase    ( *Var0 )
  73C:  		If  *Var0  ==  00000001
  74C:  			Call  UseBattleCamPreset    ( 00000005 )
  75C:  			Call  SetBattleCamZoom      (  300` )
  76C:  			Call  SetBattleCamOffsetZ   (  20` )
  77C:  			Call  MoveBattleCamOver     (  10` )
  78C:  			Call  8024ECF8  ( FFFFFFFF 00000001 00000000 )
  7A4:  		EndIf
  7AC:  		Call  SetAnimation  ( .Actor:Self 00000001 00290108 )
  7C4:  		Wait  8`
  7D0:  		Call  ResetAllActorSounds   ( .Actor:Self )
  7E0:  		Call  SetActorYaw   ( .Actor:Self  180` )
  7F4:  		Wait  4`
  800:  		If  *VarA  ==  .HitResult:Lucky % 5
  810:  			Call  EnemyTestTarget   ( .Actor:Self *Var0 ~Flags:DamageType:TriggerLucky 00000000 00000000 00000000 )
  834:  		EndIf
  83C:  		Call  SetAnimation  ( .Actor:Self 00000001 00290115 )
  854:  		Wait  1`
  860:  		Call  SetAnimation  ( .Actor:Self 00000001 00290116 )
  878:  		Call  GetActorPos   ( .Actor:Self *Var0 *Var1 *Var2 )
  894:  		Add   *Var1  00000014
  8A4:  		Call  SetGoalPos    ( .Actor:Self *Var0 *Var1 *Var2 )
  8C0:  		Call  SetActorJumpGravity   ( .Actor:Self *Fixed[2.0] )
  8D4:  		Call  JumpToGoal    ( .Actor:Self  5` .False .True .False )
  8F4:  		Call  SetAnimation  ( .Actor:Self 00000001 00290117 )
  90C:  		Wait  6`
  918:  		Sub   *Var1  00000014
  928:  		Call  SetGoalPos    ( .Actor:Self *Var0 *Var1 *Var2 )
  944:  		Call  JumpToGoal    ( .Actor:Self  5` .False .True .False )
  964:  		Call  UseBattleCamPreset    ( 00000002 )
  974:  		Call  YieldTurn ( )
  980:  		Call  SetActorYaw   ( .Actor:Self  180` )
  994:  		Call  AddActorDecoration    ( .Actor:Self 00000001 00000000 .Decoration:Sweat )
  9B0:  		Call  SetAnimation  ( .Actor:Self 00000001 00290117 )
  9C8:  		Call  SetGoalToHome ( .Actor:Self )
  9D8:  		Call  SetActorSpeed ( .Actor:Self *Fixed[8.0] )
  9EC:  		Call  RunToGoal     ( .Actor:Self  0` .False )
  A04:  		Call  SetAnimation  ( .Actor:Self 00000001 00290101 )
  A1C:  		Call  RemoveActorDecoration ( .Actor:Self 00000001 00000000 )
  A34:  		Call  SetPartYaw    ( .Actor:Self 00000001  0` )
  A4C:  		Call  SetActorYaw   ( .Actor:Self  0` )
  A60:  		Call  EnableIdleScript      ( .Actor:Self 00000001 )
  A74:  		Call  UseIdleAnimation      ( .Actor:Self .True )
  A88:  		Return
  A90:  	EndCaseGroup
  A98:  EndSwitch
  AA0:  Call  SetGoalToTarget   ( .Actor:Self )
  AB0:  Call  SetActorSpeed     ( .Actor:Self *Fixed[16.0] )
  AC4:  Call  RunToGoal ( .Actor:Self  0` .False )
  ADC:  Call  ResetAllActorSounds   ( .Actor:Self )
  AEC:  Wait  2`
  AF8:  Call  EnemyDamageTarget ( .Actor:Self *Var0 ~Flags:DamageType:0 0000FFFF 00000000 00000001 00000020 )
  B20:  Switch  *Var0
  B2C:  	CaseOR  ==  .HitResult:Hit % 0
  B38:  	CaseOR  ==  .HitResult:QuakeImmune % 2
  B44:  		Call  UseBattleCamPreset    ( 00000002 )
  B54:  		Call  GetGoalPos    ( .Actor:Self *Var0 *Var1 *Var2 )
  B70:  		Add   *Var0  00000028
  B80:  		Set   *Var1  00000000
  B90:  		Call  SetActorJumpGravity   ( .Actor:Self *Fixed[1.8] )
  BA4:  		Call  SetGoalPos    ( .Actor:Self *Var0 *Var1 *Var2 )
  BC0:  		Call  JumpToGoal    ( .Actor:Self  10` .False .True .False )
  BE0:  		Add   *Var0  0000001E
  BF0:  		Call  SetGoalPos    ( .Actor:Self *Var0 *Var1 *Var2 )
  C0C:  		Call  JumpToGoal    ( .Actor:Self  8` .False .True .False )
  C2C:  		Add   *Var0  00000014
  C3C:  		Call  SetGoalPos    ( .Actor:Self *Var0 *Var1 *Var2 )
  C58:  		Call  JumpToGoal    ( .Actor:Self  6` .False .True .False )
  C78:  		Call  SetAnimation  ( .Actor:Self 00000001 00290108 )
  C90:  		Wait  8`
  C9C:  		Call  YieldTurn ( )
  CA8:  		SetConst  *Var0  00000001
  CB8:  		SetConst  *Var1  00290104
  CC8:  		ExecWait  DoReturnHome
  CD4:  		Call  SetAnimation  ( .Actor:Self 00000001 00290101 )
  CEC:  	EndCaseGroup
  CF4:  EndSwitch
  CFC:  Call  EnableIdleScript  ( .Actor:Self 00000001 )
  D10:  Call  UseIdleAnimation  ( .Actor:Self .True )
  D24:  Return
  D2C:  End
}

#new:IntTable $IntTable_80227910
{
	00000009 00000010 00000016 0000001A 0000001E 00000020 00000021 00000020
	0000001E 0000001A 00000016 00000010 00000009 00000000 00000004 00000006
	00000007 00000006 00000004 00000000 00000002 00000000
}

#new:IdleAnimations $IdleAnimations_80227968
{
	.Status:Normal    00470001
	.Status:Stone     00470000
	.Status:Sleep     00470013
	.Status:Poison    00470001
	.Status:Stop      00470000
	.Status:Static    00470000
	.Status:Paralyze  00470000
	.Status:Dizzy     00470014
	.Status:Fear      00470000
	.Status:End
}

#new:IdleAnimations $IdleAnimations_802279B4
{
	.Status:Normal    0047001A
	.Status:Stop      00470019
	.Status:Paralyze  00470019
	.Status:End
}

#new:IdleAnimations $IdleAnimations_802279D0
{
	.Status:Normal    00D50000
	.Status:End
}

#new:DefenseTable $DefenseTable_802279DC
{
	.Element:Normal 00000006
	.Element:Blast  00000006
	.Element:End
}

#new:DefenseTable $DefenseTable_802279F0
{
	.Element:Normal 00000003
	.Element:End
}

#new:DefenseTable $DefenseTable_802279FC
{
	.Element:Normal 00000000
	.Element:End
}

#new:StatusTable $StatusTable_80227A08
{
	.Status:Normal      0`
	.Status:Default     0`
	.Status:Sleep      80`
	.Status:Poison      0`
	.Status:Frozen      0`
	.Status:Dizzy      30`
	.Status:Fear        0`
	.Status:Static      0`
	.Status:Paralyze   30`
	.Status:Shrink     40`
	.Status:Stop       50`
	.Status:DefaultTurnMod    0`
	.Status:SleepTurnMod      1`
	.Status:PoisonTurnMod     0`
	.Status:FrozenTurnMod     0`
	.Status:DizzyTurnMod     -1`
	.Status:FearTurnMod       0`
	.Status:StaticTurnMod     0`
	.Status:ParalyzeTurnMod  -1`
	.Status:ShrinkTurnMod    -1`
	.Status:StopTurnMod      -2`
	.Status:End
}

#new:PartsTable $PartsTable_80227AB4
{
	00800000 01000000 003C00FF $IdleAnimations_80227968 $DefenseTable_802279DC 00001000 00000000 00000000 00000000
	00020000 020C3D00 00EC00FF 00000000 $DefenseTable_802279F0 00000000 00000000 00000000 00000000
	00020000 032D0000 BA1A00FF 00000000 $DefenseTable_802279FC 00000000 00000000 00000000 00000000
	00120003 04000000 000000FF $IdleAnimations_802279D0 $DefenseTable_802279FC 00000000 00000000 00000000 00000000
	00120003 05000000 000000FF $IdleAnimations_802279D0 $DefenseTable_802279FC 00000000 00000000 00000000 00000000
	00120003 06000000 000000FF $IdleAnimations_802279D0 $DefenseTable_802279FC 00000000 00000000 00000000 00000000
	00120003 07000000 000000FF $IdleAnimations_802279D0 $DefenseTable_802279FC 00000000 00000000 00000000 00000000
	00120003 08000000 000000FF $IdleAnimations_802279D0 $DefenseTable_802279FC 00000000 00000000 00000000 00000000
	00120003 09000000 000000FF $IdleAnimations_802279D0 $DefenseTable_802279FC 00000000 00000000 00000000 00000000
}

#new:Actor $KentCKoopa
{
	% stats
	[Index]        B9b
	[Level]        55`b
	[MaxHP]        70`b
	[Coins]         0`b
	[Flags]       00000000
	[StatusTable] $StatusTable_80227A08
	% ai
	[PartsCount]    9`s
	[PartsTable]  $PartsTable_80227AB4
	[Script]      $Script_Init_80227C20
	% move effectiveness
	[Escape]        0`b
	[Item]          0`b
	[AirLift]       0`b
	[Hurricane]     0`b % Bow's "Spook" as well
	[UpAndAway]     0`b
	[PowerBounce]  70`b
	[SpinSmash]     0`b % weight (0-4)
	% ui positions
	[Size]         90`b  70`b % width height
	[HealthBar]     0`b   0`b % dx dy
	[StatusTurn]  -26`b  38`b % dx dy
	[StatusIcon]    2`b  63`b % dx dy
}

#new:Script $Script_Init_80227C20
{
    0:  Call  8027D434      ( FFFFFF81 00000003 00000046 )
   18:  Call  SetPartSize   ( .Actor:Self 00000003  30`  30` )
   34:  Call  BindTakeTurn  ( .Actor:Self $Script_TakeTurn_80228A7C )
   48:  Call  BindIdle      ( .Actor:Self $Script_Idle_80227DD4 )
   5C:  Call  BindHandleEvent   ( .Actor:Self $Script_HandleEvent_80227E08 )
   70:  Call  BindNextTurn  ( .Actor:Self $Script_NextTurn_80227D2C )
   84:  Call  SetActorVar   ( .Actor:Self 00000000 00000000 )
   9C:  Call  SetActorVar   ( .Actor:Self 00000001 0047001C )
   B4:  Call  SetActorVar   ( .Actor:Self 00000002 00000000 )
   CC:  Call  SetActorVar   ( .Actor:Self 00000003 00000014 )
   E4:  Call  SetActorVar   ( .Actor:Self 00000004 00000002 )
   FC:  Return
  104:  End
}

#new:Script $Script_NextTurn_80227D2C
{
    0:  Call  UseIdleAnimation  ( .Actor:Self .False )
   14:  Call  EnableIdleScript  ( .Actor:Self 00000000 )
   28:  Call  GetBattlePhase    ( *Var0 )
   38:  Switch  *Var0
   44:  	Case  ==  0000000A
   50:  		Call  SetActorVar   ( .Actor:Self 00000004 00000002 )
   68:  EndSwitch
   70:  Call  EnableIdleScript  ( .Actor:Self 00000001 )
   84:  Call  UseIdleAnimation  ( .Actor:Self .True )
   98:  Return
   A0:  End
}

#new:Script $Script_Idle_80227DD4
{
    0:  Label  0
    C:  Wait  1`
   18:  Goto  0
   24:  Return
   2C:  End
}

#new:Script $Script_HandleEvent_80227E08
{
    0:  Call  UseIdleAnimation  ( .Actor:Self .False )
   14:  Call  EnableIdleScript  ( .Actor:Self 00000000 )
   28:  Call  GetLastElement    ( *VarE )
   38:  Call  GetLastEvent      ( .Actor:Self *VarD )
   4C:  Switch  *VarD
   58:  	Case  ==  .Event:BeginFirstStrike % 38
   64:  	Case  ==  .Event:HitCombo % 9
   70:  		SetConst  *Var0  00000001
   80:  		Call  GetActorVar   ( .Actor:Self 00000001 *Var1 )
   98:  		ExecWait  DoNormalHit
   A4:  	Case  ==  .Event:Hit % A
   B0:  		SetConst  *Var0  00000001
   C0:  		Call  GetActorVar   ( .Actor:Self 00000001 *Var1 )
   D8:  		ExecWait  DoNormalHit
   E4:  		Call  SetActorVar   ( .Actor:Self 00000004 00000002 )
   FC:  	Case  ==  .Event:Death % 20
  108:  		SetConst  *Var0  00000001
  118:  		Call  GetActorVar   ( .Actor:Self 00000001 *Var1 )
  130:  		ExecWait  DoNormalHit
  13C:  		Wait  10`
  148:  		SetConst  *Var0  00000001
  158:  		Call  GetActorVar   ( .Actor:Self 00000001 *Var1 )
  170:  		ExecWait  DoDeath
  17C:  		Return
  184:  	Case  ==  .Event:BurnHit % E
  190:  		Call  SetActorVar   ( .Actor:Self 00000004 00000002 )
  1A8:  		Call  GetActorVar   ( .Actor:Self 00000000 *Var0 )
  1C0:  		If  *Var0  ==  00000000
  1D0:  			Set   *Var0  00000001
  1E0:  			Set   *Var1  00470015
  1F0:  			Set   *Var2  00470016
  200:  			ExecWait  DoBurnHit
  20C:  		Else
  214:  			Set   *Var0  00000001
  224:  			Set   *Var1  00470017
  234:  			Set   *Var2  00470018
  244:  			ExecWait  DoBurnHit
  250:  		EndIf
  258:  	Case  ==  .Event:BurnDeath % 24
  264:  		Call  GetActorVar   ( .Actor:Self 00000000 *Var0 )
  27C:  		If  *Var0  ==  00000000
  28C:  			Set   *Var0  00000001
  29C:  			Set   *Var1  00470015
  2AC:  			Set   *Var2  00470016
  2BC:  		Else
  2C4:  			Set   *Var0  00000001
  2D4:  			Set   *Var1  00470017
  2E4:  			Set   *Var2  00470018
  2F4:  		EndIf
  2FC:  		ExecWait  DoBurnHit
  308:  		Wait  10`
  314:  		SetConst  *Var0  00000001
  324:  		SetConst  *Var1  *Var2
  334:  		ExecWait  DoDeath
  340:  		Return
  348:  	Case  ==  .Event:SpinSmashHit % B
  354:  		Call  SetActorVar   ( .Actor:Self 00000004 00000002 )
  36C:  		Call  GetActorVar   ( .Actor:Self 00000000 *Var0 )
  384:  		If  *Var0  ==  00000000
  394:  			SetConst  *Var0  00000001
  3A4:  			Call  GetActorVar   ( .Actor:Self 00000001 *Var1 )
  3BC:  			ExecWait  DoNormalHit
  3C8:  		Else
  3D0:  			SetConst  *Var0  00000001
  3E0:  			Call  GetActorVar   ( .Actor:Self 00000001 *Var1 )
  3F8:  			ExecWait  $Script_8022B158
  404:  		EndIf
  40C:  	Case  ==  .Event:SpinSmashDeath % 21
  418:  		Call  GetActorVar   ( .Actor:Self 00000000 *Var0 )
  430:  		If  *Var0  ==  00000000
  440:  			SetConst  *Var0  00000001
  450:  			Call  GetActorVar   ( .Actor:Self 00000001 *Var1 )
  468:  			ExecWait  DoNormalHit
  474:  			SetConst  *Var0  00000001
  484:  			Call  GetActorVar   ( .Actor:Self 00000001 *Var1 )
  49C:  			ExecWait  DoDeath
  4A8:  			Return
  4B0:  		Else
  4B8:  			SetConst  *Var0  00000001
  4C8:  			Call  GetActorVar   ( .Actor:Self 00000001 *Var1 )
  4E0:  			ExecWait  $Script_8022B204
  4EC:  			Return
  4F4:  		EndIf
  4FC:  	Case  ==  .Event:ShockHit % 2F
  508:  		SetConst  *Var0  00000001
  518:  		Call  GetActorVar   ( .Actor:Self 00000001 *Var1 )
  530:  		ExecWait  DoShockHit
  53C:  		SetConst  *Var0  00000001
  54C:  		Call  GetActorVar   ( .Actor:Self 00000001 *Var1 )
  564:  		ExecWait  DoJumpBack
  570:  		SetConst  *Var0  00000001
  580:  		Call  GetActorVar   ( .Actor:Self 00000001 *Var1 )
  598:  		ExecWait  DoReturnHome
  5A4:  	Case  ==  .Event:ShockDeath % 26
  5B0:  		SetConst  *Var0  00000001
  5C0:  		Call  GetActorVar   ( .Actor:Self 00000001 *Var1 )
  5D8:  		ExecWait  DoShockHit
  5E4:  		SetConst  *Var0  00000001
  5F4:  		Call  GetActorVar   ( .Actor:Self 00000001 *Var1 )
  60C:  		ExecWait  DoJumpBack
  618:  		SetConst  *Var0  00000001
  628:  		Call  GetActorVar   ( .Actor:Self 00000001 *Var1 )
  640:  		ExecWait  DoDeath
  64C:  		Return
  654:  	Case  ==  00000017 % 17
  660:  		Call  GetActorVar   ( .Actor:Self 00000000 *Var0 )
  678:  		If  *Var0  ==  00000000
  688:  			SetConst  *Var0  00000001
  698:  			SetConst  *Var1  00470009
  6A8:  			ExecWait  DoImmune
  6B4:  		Else
  6BC:  			SetConst  *Var0  00000001
  6CC:  			SetConst  *Var1  0047001A
  6DC:  			ExecWait  DoImmune
  6E8:  		EndIf
  6F0:  	Case  ==  .Event:Immune % 19
  6FC:  		Call  SetActorVar   ( .Actor:Self 00000004 00000002 )
  714:  		Call  GetActorVar   ( .Actor:Self 00000000 *Var0 )
  72C:  		If  *Var0  ==  00000000
  73C:  			SetConst  *Var0  00000001
  74C:  			SetConst  *Var1  00470009
  75C:  			ExecWait  DoImmune
  768:  			Call  GetStatusFlags    ( .Actor:Self *Var2 )
  77C:  			If  *Var2  ==  ~Flags:StatusFlags:0 % 0
  78C:  				Wait  20`
  798:  				Call  SetAnimation  ( .Actor:Self 00000001 0047000C )
  7B0:  				Wait  8`
  7BC:  			EndIf
  7C4:  		Else
  7CC:  			SetConst  *Var0  00000001
  7DC:  			SetConst  *Var1  0047001A
  7EC:  			ExecWait  DoImmune
  7F8:  		EndIf
  800:  	Case  ==  .Event:AirLiftFailed % 1F
  80C:  		Call  GetActorVar   ( .Actor:Self 00000000 *Var0 )
  824:  		If  *Var0  ==  00000000
  834:  			Set   *Var1  00470001
  844:  		Else
  84C:  			Set   *Var1  0047001A
  85C:  		EndIf
  864:  		Set   *Var0  00000001
  874:  		ExecWait  DoImmune
  880:  	Case  ==  .Event:EndFirstStrike % 35
  88C:  		ExecWait  $Script_8022AD84
  898:  		Call  HPBarToHome   ( .Actor:Self )
  8A8:  	Case  ==  .Event:RecoverStatus % 31
  8B4:  		Call  GetActorVar   ( .Actor:Self 00000000 *Var0 )
  8CC:  		If  *Var0  ==  00000000
  8DC:  			SetConst  *Var1  00470001
  8EC:  			SetConst  *Var0  00000001
  8FC:  			ExecWait  DoRecover
  908:  		Else
  910:  			SetConst  *Var0  00000001
  920:  			SetConst  *Var1  0047001A
  930:  			ExecWait  DoImmune
  93C:  		EndIf
  944:  	Case  ==  .Event:FlipTrigger % D
  950:  		Call  GetActorVar   ( .Actor:Self 00000000 *Var0 )
  968:  		If  *Var0  ==  00000001
  978:  			SetConst  *Var0  00000001
  988:  			SetConst  *Var1  00470012
  998:  			ExecWait  DoNormalHit
  9A4:  			Return
  9AC:  		EndIf
  9B4:  		Call  GetActorVar   ( .Actor:Self 00000004 *Var0 )
  9CC:  		If  *Var0  >  00000000
  9DC:  			Sub   *Var0  00000001
  9EC:  			Call  SetActorVar   ( .Actor:Self 00000004 *Var0 )
  A04:  		EndIf
  A0C:  		Call  80269E80  ( *Var0 )
  A1C:  		If  *Var0  ==  00000016
  A2C:  			Call  SetActorVar   ( .Actor:Self 00000004 00000000 )
  A44:  		EndIf
  A4C:  		Call  GetActorVar   ( .Actor:Self 00000004 *Var0 )
  A64:  		If  *Var0  ==  00000000
  A74:  			Call  GetBattleFlags    ( *VarD )
  A84:  			If  *VarD  &  00000020
  A94:  				Call  SetActorVar   ( .Actor:Self 00000004 00000002 )
  AAC:  			EndIf
  AB4:  			ExecWait  $Script_FlipOver_KentC
  AC0:  		Else
  AC8:  			Call  GetBattleFlags    ( *VarD )
  AD8:  			If  *VarD  &  00000020
  AE8:  				Call  SetActorVar   ( .Actor:Self 00000004 00000002 )
  B00:  				Call  GetLastDamage ( .Actor:Self *Var0 )
  B14:  				If  *Var0  >  00000000
  B24:  					SetConst  *Var0  00000001
  B34:  					SetConst  *Var1  0047001C
  B44:  					ExecWait  DoNormalHit
  B50:  				Else
  B58:  					SetConst  *Var0  00000001
  B68:  					SetConst  *Var1  00470009
  B78:  					ExecWait  DoImmune
  B84:  					Call  GetStatusFlags    ( .Actor:Self *Var2 )
  B98:  					If  *Var2  ==  ~Flags:StatusFlags:0 % 0
  BA8:  						Wait  20`
  BB4:  						Call  SetAnimation  ( .Actor:Self 00000001 0047000C )
  BCC:  						Wait  8`
  BD8:  					EndIf
  BE0:  				EndIf
  BE8:  			Else
  BF0:  				SetConst  *Var0  00000001
  C00:  				SetConst  *Var1  0047001C
  C10:  				ExecWait  DoNormalHit
  C1C:  			EndIf
  C24:  		EndIf
  C2C:  	Default
  C34:  EndSwitch
  C3C:  Call  EnableIdleScript  ( .Actor:Self 00000001 )
  C50:  Call  UseIdleAnimation  ( .Actor:Self .True )
  C64:  Return
  C6C:  End
}

#new:Script $Script_TakeTurn_80228A7C
{
    0:  Call  SetActorVar   ( .Actor:Self 00000004 00000002 )
   18:  Call  GetActorVar   ( .Actor:Self 00000000 *Var0 )
   30:  If  *Var0  ==  00000001
   40:  	Call  UseIdleAnimation  ( .Actor:Self .False )
   54:  	Call  EnableIdleScript  ( .Actor:Self 00000000 )
   68:  	Call  UseBattleCamPreset    ( 0000000E )
   78:  	Call  SetBattleCamZoom  (  200` )
   88:  	Call  SetBattleCamOffsetZ   (  20` )
   98:  	Call  BattleCamTargetActor  ( .Actor:Self )
   A8:  	Call  MoveBattleCamOver (  25` )
   B8:  	Call  GetActorVar       ( .Actor:Self 00000002 *Var0 )
   D0:  	Sub   *Var0  00000001
   E0:  	Call  SetActorVar       ( .Actor:Self 00000002 *Var0 )
   F8:  	If  *Var0  >  00000000
  108:  		Call  GetActorPos       ( .Actor:Self *Var0 *Var1 *Var2 )
  124:  		Add   *Var0  00000024
  134:  		Add   *Var1  00000012
  144:  		Call  SetAnimationRate  ( .Actor:Self 00000001 *Fixed[3.0] )
  15C:  		Loop  00000005
  168:  			Call  PlayEffect    ( ~FX:Sweat:Large *Var0 *Var1 *Var2 00000001 000000E1 0000000A 00000000 00000000 00000000 00000000 00000000 00000000 )
  1AC:  			Wait  5`
  1B8:  		EndLoop
  1C0:  		Wait  30`
  1CC:  		Call  SetAnimationRate  ( .Actor:Self 00000001 *Fixed[1.0] )
  1E4:  		Call  UseBattleCamPreset    ( 00000002 )
  1F4:  		Call  MoveBattleCamOver (  20` )
  204:  		Call  EnableIdleScript  ( .Actor:Self 00000001 )
  218:  		Call  UseIdleAnimation  ( .Actor:Self .True )
  22C:  		Return
  234:  	Else
  23C:  		Call  GetActorPos       ( .Actor:Self *Var0 *Var1 *Var2 )
  258:  		Add   *Var0  00000024
  268:  		Add   *Var1  00000012
  278:  		Call  SetAnimationRate  ( .Actor:Self 00000001 *Fixed[3.0] )
  290:  		Loop  00000005
  29C:  			Call  PlayEffect    ( ~FX:Sweat:Large *Var0 *Var1 *Var2 00000001 000000E1 0000000A 00000000 00000000 00000000 00000000 00000000 00000000 )
  2E0:  			Wait  5`
  2EC:  		EndLoop
  2F4:  		Call  SetAnimationRate  ( .Actor:Self 00000001 *Fixed[3.0] )
  30C:  		Wait  30`
  318:  		Call  UseBattleCamPreset    ( 00000002 )
  328:  		Call  MoveBattleCamOver (  15` )
  338:  		Call  SetAnimationRate  ( .Actor:Self 00000001 *Fixed[1.0] )
  350:  		Call  SetAnimation      ( .Actor:Self 00000001 00470019 )
  368:  		Thread
  370:  			Wait  3`
  37C:  			Call  GetStatusFlags    ( .Actor:Self *Var0 )
  390:  			If  *Var0  !&  ~Flags:StatusFlags:Shrink % 80000
  3A0:  				Call  SetActorRotationOffset    ( .Actor:Self 00000000 0000001B 00000000 )
  3BC:  			Else
  3C4:  				Call  SetActorRotationOffset    ( .Actor:Self 00000000 0000000A 00000000 )
  3E0:  			EndIf
  3E8:  			Set   *Var0  00000000
  3F8:  			Loop  00000005
  404:  				Add   *Var0  00000024
  414:  				Call  SetActorRotation  ( .Actor:Self 00000000 00000000 *Var0 )
  430:  				Wait  1`
  43C:  			EndLoop
  444:  		EndThread
  44C:  		Call  SetActorJumpGravity   ( .Actor:Self *Fixed[1.0] )
  460:  		Call  GetActorPos       ( .Actor:Self *Var0 *Var1 *Var2 )
  47C:  		Call  SetGoalPos        ( .Actor:Self *Var0 *Var1 *Var2 )
  498:  		Call  JumpToGoal        ( .Actor:Self  15` .False .True .False )
  4B8:  		Call  GetStatusFlags    ( .Actor:Self *Var3 )
  4CC:  		If  *Var3  !&  ~Flags:StatusFlags:Shrink % 80000
  4DC:  			Call  $Function_80218B50    ( 00000050 0000000E )
  4F0:  			Call  ShakeCam  ( .Cam:Battle 00000000  2` *Fixed[0.5] )
  50C:  		EndIf
  514:  		Wait  3`
  520:  		Call  SetActorRotation  ( .Actor:Self 00000000 00000000 00000000 )
  53C:  		Call  SetActorRotationOffset    ( .Actor:Self 00000000 00000000 00000000 )
  558:  		Call  SetAnimation      ( .Actor:Self 00000001 0047000C )
  570:  		Wait  10`
  57C:  		Call  SetDefenseTable   ( .Actor:Self 00000001 $DefenseTable_802279DC )
  594:  		Call  SetEnemyTargetOffset      ( .Actor:Self 00000001  0`  60` )
  5B0:  		Call  SetPartFlagBits   ( .Actor:Self 00000003 00020000 .True )
  5CC:  		Call  SetPartFlagBits   ( .Actor:Self 00000003 00800000 .False )
  5E8:  		Call  SetPartFlags      ( .Actor:Self 00000002 00020004 )
  600:  		Call  SetPartFlags      ( .Actor:Self 00000001 00800004 )
  618:  		Call  SetIdleAnimations ( .Actor:Self 00000001 $IdleAnimations_80227968 )
  630:  		Call  $Function_80218BA8        ( FFFFFFE6 00000026 00000002 0000003F )
  64C:  		Call  SetActorVar       ( .Actor:Self 00000000 00000000 )
  664:  		Call  SetActorVar       ( .Actor:Self 00000001 0047001C )
  67C:  	EndIf
  684:  EndIf
  68C:  Call  RandInt   ( 00000064 *Var0 )
  6A0:  If  *Var0  <  00000032
  6B0:  	Call  GetStatusFlags    ( .Actor:Partner *Var0 )
  6C4:  	If  *Var0  !&  ~Flags:StatusFlags:KO % 1000000
  6D4:  		ExecWait  $Script_ShellToss_KentC
  6E0:  	Else
  6E8:  		ExecWait  $Script_Tackle_KentC
  6F4:  	EndIf
  6FC:  Else
  704:  	ExecWait  $Script_Tackle_KentC
  710:  EndIf
  718:  Return
  720:  End
}

#new:Script $Script_ShellToss_KentC
{
    0:  Call  UseIdleAnimation  ( .Actor:Self .False )
   14:  Call  EnableIdleScript  ( .Actor:Self 00000000 )
   28:  Call  SetTargetActor    ( .Actor:Self .Actor:Player )
   3C:  Call  UseBattleCamPreset    ( 0000000E )
   4C:  Call  SetBattleCamZoom  (  200` )
   5C:  Call  SetBattleCamOffsetZ   (  20` )
   6C:  Call  BattleCamTargetActor  ( .Actor:Self )
   7C:  Call  MoveBattleCamOver (  25` )
   8C:  Wait  20`
   98:  Call  SetAnimation      ( .Actor:Self 00000001 0047000B )
   B0:  Wait  10`
   BC:  Thread
   C4:  	Call  GetActorPos   ( .Actor:Self *Var0 *Var1 *Var2 )
   E0:  	Add   *Var1  00000004
   F0:  	Call  PlayEffect    ( ~FX:SmokeImpact:Small *Var0 *Var1 *Var2 00000020 00000004 00000000 0000000A 00000000 00000000 00000000 00000000 00000000 )
  134:  	Wait  3`
  140:  	Call  PlayEffect    ( ~FX:SmokeImpact:Small *Var0 *Var1 *Var2 00000020 00000004 00000000 0000000A 00000000 00000000 00000000 00000000 00000000 )
  184:  	Wait  2`
  190:  	Call  PlayEffect    ( ~FX:SmokeImpact:Small *Var0 *Var1 *Var2 00000020 00000004 00000000 0000000A 00000000 00000000 00000000 00000000 00000000 )
  1D4:  EndThread
  1DC:  Call  SetActorSounds    ( .Actor:Self .ActorSound:Walk 00000000 00000000 )
  1F8:  Call  PlaySoundAtActor  ( .Actor:Self 00000370 )
  20C:  Call  SetAnimation      ( .Actor:Self 00000001 0047000A )
  224:  Wait  10`
  230:  Call  EnemyTestTarget   ( .Actor:Self *VarA ~Flags:DamageType:0 00000000 00000003 00000010 )
  254:  Switch  *VarA
  260:  	CaseOR  ==  .HitResult:Miss % 6
  26C:  	CaseOR  ==  .HitResult:Lucky % 5
  278:  		Call  SetTargetActor    ( .Actor:Self .Actor:Partner )
  28C:  		Call  EnemyTestTarget   ( .Actor:Self *VarB ~Flags:DamageType:0 00000000 00000003 00000010 )
  2B0:  		Switch  *VarB
  2BC:  			Case  ==  .HitResult:Miss % 6
  2C8:  				Call  UseBattleCamPreset    ( 00000002 )
  2D8:  				Call  MoveBattleCamOver (  30` )
  2E8:  				Call  SetGoalToTarget   ( .Actor:Self )
  2F8:  				Call  GetGoalPos    ( .Actor:Self *Var0 *Var1 *Var2 )
  314:  				Sub   *Var0  00000028
  324:  				Call  SetGoalPos    ( .Actor:Self *Var0 *Var1 *Var2 )
  340:  				Call  SetActorSpeed ( .Actor:Self *Fixed[5.0] )
  354:  				Call  SetGoalPos    ( .Actor:Self  -240`  0` *Var2 )
  370:  				Call  RunToGoal     ( .Actor:Self  0` .False )
  388:  				Call  SetActorPos   ( .Actor:Self  240`  0` *Var2 )
  3A4:  				Call  SetGoalToHome ( .Actor:Self )
  3B4:  				Call  RunToGoal     ( .Actor:Self  0` .False )
  3CC:  				Call  ResetAllActorSounds   ( .Actor:Self )
  3DC:  				Call  StopSound     ( 00000370 )
  3EC:  				Call  SetAnimation  ( .Actor:Self 00000001 0047000C )
  404:  				Wait  8`
  410:  				Call  YieldTurn ( )
  41C:  				Call  SetAnimation  ( .Actor:Self 00000001 00470001 )
  434:  				Call  EnableIdleScript  ( .Actor:Self 00000001 )
  448:  				Call  UseIdleAnimation  ( .Actor:Self .True )
  45C:  				Return
  464:  			Default
  46C:  				Call  GetStatusFlags    ( .Actor:Player *Var0 )
  480:  				If  *Var0  !&  ~Flags:StatusFlags:Sleep|Frozen|Fear|Paralyze|Dizzy|Stone|Stop|Transparent % 435D000
  490:  					Call  UseIdleAnimation  ( .Actor:Player .False )
  4A4:  					Call  SetAnimation      ( .Actor:Player 00000000 0001002B )
  4BC:  				EndIf
  4C4:  				Call  UseBattleCamPreset    ( 00000013 )
  4D4:  				Call  SetBattleCamTarget    (  -25`  60`  0` )
  4EC:  				Call  SetBattleCamZoom  (  460` )
  4FC:  				Call  SetBattleCamOffsetZ   (  0` )
  50C:  				Call  MoveBattleCamOver (  50` )
  51C:  				Call  SetTargetActor    ( .Actor:Self .Actor:Player )
  530:  				Call  SetGoalToTarget   ( .Actor:Self )
  540:  				Call  GetGoalPos        ( .Actor:Self *Var0 *Var1 *Var2 )
  55C:  				Call  GetStatusFlags    ( .Actor:Self *Var3 )
  570:  				If  *Var3  !&  ~Flags:StatusFlags:Shrink % 80000
  580:  					Add   *Var0  00000020
  590:  				Else
  598:  					Add   *Var0  0000000C
  5A8:  				EndIf
  5B0:  				Set   *Var1  00000000
  5C0:  				Call  SetActorSpeed ( .Actor:Self *Fixed[5.0] )
  5D4:  				Call  SetGoalPos    ( .Actor:Self *Var0 *Var1 *Var2 )
  5F0:  				Call  RunToGoal     ( .Actor:Self  0` .False )
  608:  				If  *VarA  ==  .HitResult:Lucky % 5
  618:  					Call  EnemyTestTarget   ( .Actor:Self *Var0 ~Flags:DamageType:TriggerLucky 00000000 00000000 00000000 )
  63C:  				EndIf
  644:  				Set   *VarA  00000001
  654:  		EndSwitch
  65C:  	EndCaseGroup
  664:  	Default
  66C:  		Call  UseBattleCamPreset    ( 00000013 )
  67C:  		Call  SetBattleCamTarget    (  -25`  60`  0` )
  694:  		Call  SetBattleCamZoom      (  460` )
  6A4:  		Call  SetBattleCamOffsetZ   (  0` )
  6B4:  		Call  MoveBattleCamOver     (  50` )
  6C4:  		Call  UseIdleAnimation      ( .Actor:Player .False )
  6D8:  		Call  GetStatusFlags        ( .Actor:Player *Var0 )
  6EC:  		If  *Var0  !&  ~Flags:StatusFlags:Sleep|Frozen|Fear|Paralyze|Dizzy|Stone|Stop|Transparent % 435D000
  6FC:  			Call  SetAnimation  ( .Actor:Player 00000000 0001002B )
  714:  		EndIf
  71C:  		Call  SetGoalToTarget   ( .Actor:Self )
  72C:  		Call  GetGoalPos        ( .Actor:Self *Var0 *Var1 *Var2 )
  748:  		Call  GetStatusFlags    ( .Actor:Self *Var3 )
  75C:  		If  *Var3  !&  ~Flags:StatusFlags:Shrink % 80000
  76C:  			Add   *Var0  00000020
  77C:  		Else
  784:  			Add   *Var0  0000000C
  794:  		EndIf
  79C:  		Set   *Var1  00000000
  7AC:  		Call  SetActorSpeed     ( .Actor:Self *Fixed[5.0] )
  7C0:  		Call  SetGoalPos        ( .Actor:Self *Var0 *Var1 *Var2 )
  7DC:  		Call  RunToGoal ( .Actor:Self  0` .False )
  7F4:  		Call  SetGoalToTarget   ( .Actor:Self )
  804:  		Call  GetStatusFlags    ( .Actor:Self *VarE )
  818:  		If  *VarE  !&  ~Flags:StatusFlags:Shrink % 80000
  828:  			Call  80269EAC  ( 00000018 )
  838:  		EndIf
  840:  		Call  EnemyDamageTarget ( .Actor:Self *VarF ~Flags:DamageType:0 0000FFFF 00000000 00000003 00000020 )
  868:  		Set   *VarA  00000000
  878:  		If  *VarE  !&  ~Flags:StatusFlags:Shrink % 80000
  888:  			Call  GetBattleFlags    ( *Var0 )
  898:  			If  *Var0  !&  80000000
  8A8:  				Call  GetStatusFlags    ( .Actor:Player *Var0 )
  8BC:  				If  *Var0  !&  ~Flags:StatusFlags:Stone % 100000
  8CC:  					Set   *VarA  00000001
  8DC:  				EndIf
  8E4:  			EndIf
  8EC:  		EndIf
  8F4:  EndSwitch
  8FC:  If  *VarA  !=  00000000
  90C:  	Call  SetTargetActor    ( .Actor:Self .Actor:Partner )
  920:  	Call  SetGoalToTarget   ( .Actor:Self )
  930:  	Call  GetGoalPos        ( .Actor:Self *Var0 *Var1 *Var2 )
  94C:  	Add   *Var0  00000020
  95C:  	Call  SetActorSpeed     ( .Actor:Self *Fixed[5.0] )
  970:  	Call  SetGoalPos        ( .Actor:Self *Var0  0` *Var2 )
  98C:  	Call  RunToGoal ( .Actor:Self  0` .False )
  9A4:  	Call  SetGoalToTarget   ( .Actor:Self )
  9B4:  	Call  80269EAC  ( 00000019 )
  9C4:  	Call  EnemyDamageTarget ( .Actor:Self *Var0 ~Flags:DamageType:0 0000FFFF 00000000 00000003 00000020 )
  9EC:  	Call  GetBattleFlags    ( *Var0 )
  9FC:  	If  *Var0  !&  80000000
  A0C:  		Call  SetGoalToTarget   ( .Actor:Self )
  A1C:  		Call  GetGoalPos    ( .Actor:Self *Var0 *Var1 *Var2 )
  A38:  		Call  SetGoalPos    ( .Actor:Self  -240`  0` *Var2 )
  A54:  		Call  RunToGoal     ( .Actor:Self  0` .False )
  A6C:  		Call  UseBattleCamPreset    ( 00000002 )
  A7C:  		Call  MoveBattleCamOver (  20` )
  A8C:  		Call  SetActorPos   ( .Actor:Self  240`  0` *Var2 )
  AA8:  		Call  SetGoalToHome ( .Actor:Self )
  AB8:  		Call  RunToGoal     ( .Actor:Self  0` .False )
  AD0:  		Call  ResetAllActorSounds   ( .Actor:Self )
  AE0:  		Call  StopSound     ( 00000370 )
  AF0:  		Call  SetAnimation  ( .Actor:Self 00000001 0047000C )
  B08:  		Wait  8`
  B14:  		Call  YieldTurn ( )
  B20:  		Call  SetAnimation  ( .Actor:Self 00000001 00470001 )
  B38:  		Call  EnableIdleScript  ( .Actor:Self 00000001 )
  B4C:  		Call  UseIdleAnimation  ( .Actor:Self .True )
  B60:  		Return
  B68:  	Else
  B70:  		Call  UseBattleCamPreset    ( 00000013 )
  B80:  		Call  SetBattleCamTarget    (  -45`  60`  0` )
  B98:  		Call  SetBattleCamZoom      (  460` )
  BA8:  		Call  SetBattleCamOffsetZ   (  0` )
  BB8:  		Call  MoveBattleCamOver     (  30` )
  BC8:  	EndIf
  BD0:  EndIf
  BD8:  Call  GetActorPos   ( .Actor:Self *Var0 *Var1 *Var2 )
  BF4:  Add   *Var0  0000001E
  C04:  Set   *Var1  00000000
  C14:  Call  SetActorJumpGravity   ( .Actor:Self *Fixed[1.8] )
  C28:  Call  SetGoalPos    ( .Actor:Self *Var0 *Var1 *Var2 )
  C44:  Call  JumpToGoal    ( .Actor:Self  8` .False .True .False )
  C64:  Thread
  C6C:  	Call  GetStatusFlags    ( .Actor:Self *Var3 )
  C80:  	If  *Var3  !&  ~Flags:StatusFlags:Shrink % 80000
  C90:  		Call  $Function_80218B50    ( 00000050 0000000E )
  CA4:  		Call  ShakeCam  ( .Cam:Battle 00000000  1` *Fixed[0.5] )
  CC0:  	EndIf
  CC8:  EndThread
  CD0:  Add   *Var0  00000010
  CE0:  Call  SetGoalPos    ( .Actor:Self *Var0 *Var1 *Var2 )
  CFC:  Call  JumpToGoal    ( .Actor:Self  6` .False .True .False )
  D1C:  Thread
  D24:  	Call  GetStatusFlags    ( .Actor:Self *Var3 )
  D38:  	If  *Var3  !&  ~Flags:StatusFlags:Shrink % 80000
  D48:  		Call  $Function_80218B50    ( 00000050 0000000E )
  D5C:  		Call  ShakeCam  ( .Cam:Battle 00000000  1` *Fixed[0.5] )
  D78:  	EndIf
  D80:  EndThread
  D88:  Add   *Var0  0000000A
  D98:  Call  SetGoalPos    ( .Actor:Self *Var0 *Var1 *Var2 )
  DB4:  Call  JumpToGoal    ( .Actor:Self  4` .False .True .False )
  DD4:  Thread
  DDC:  	Call  GetStatusFlags    ( .Actor:Self *Var3 )
  DF0:  	If  *Var3  !&  ~Flags:StatusFlags:Shrink % 80000
  E00:  		Call  $Function_80218B50    ( 00000050 0000000E )
  E14:  		Call  ShakeCam  ( .Cam:Battle 00000000  1` *Fixed[0.5] )
  E30:  	EndIf
  E38:  EndThread
  E40:  Call  ResetAllActorSounds   ( .Actor:Self )
  E50:  Call  StopSound ( 00000370 )
  E60:  Call  SetAnimation      ( .Actor:Self 00000001 0047000C )
  E78:  Wait  8`
  E84:  Call  YieldTurn ( )
  E90:  Call  UseBattleCamPreset    ( 00000002 )
  EA0:  Call  MoveBattleCamOver (  20` )
  EB0:  SetConst  *Var0  00000001
  EC0:  SetConst  *Var1  00470004
  ED0:  ExecWait  DoReturnHome
  EDC:  Call  SetAnimation      ( .Actor:Self 00000001 00470001 )
  EF4:  Call  EnableIdleScript  ( .Actor:Self 00000001 )
  F08:  Call  UseIdleAnimation  ( .Actor:Self .True )
  F1C:  Return
  F24:  End
}

#new:Script $Script_Tackle_KentC
{
    0:  Call  UseIdleAnimation  ( .Actor:Self .False )
   14:  Call  EnableIdleScript  ( .Actor:Self 00000000 )
   28:  Call  SetTargetActor    ( .Actor:Self .Actor:Player )
   3C:  Call  UseBattleCamPreset    ( 0000003F )
   4C:  Call  SetBattleCamZoom  (  280` )
   5C:  Call  BattleCamTargetActor  ( .Actor:Self )
   6C:  Call  MoveBattleCamOver (  20` )
   7C:  Call  8024ECF8  ( FFFFFFFF 00000001 00000000 )
   94:  Call  SetGoalToTarget   ( .Actor:Self )
   A4:  Call  GetGoalPos        ( .Actor:Self *Var0 *Var1 *Var2 )
   C0:  Add   *Var0  00000032
   D0:  Set   *Var1  00000000
   E0:  Call  SetActorSpeed     ( .Actor:Self *Fixed[3.0] )
   F4:  Call  SetAnimation      ( .Actor:Self 00000001 00470003 )
  10C:  Call  SetGoalPos        ( .Actor:Self *Var0 *Var1 *Var2 )
  128:  Call  RunToGoal ( .Actor:Self  0` .False )
  140:  Call  SetAnimation      ( .Actor:Self 00000001 00470001 )
  158:  Wait  8`
  164:  Call  PlaySoundAtActor  ( .Actor:Self 000003E7 )
  178:  Call  EnemyTestTarget   ( .Actor:Self *Var0 ~Flags:DamageType:0 00000000 00000001 00000010 )
  19C:  Switch  *Var0
  1A8:  	CaseOR  ==  .HitResult:Miss % 6
  1B4:  	CaseOR  ==  .HitResult:Lucky % 5
  1C0:  		Set   *VarA  *Var0
  1D0:  		Call  SetAnimation  ( .Actor:Self 00000001 00470006 )
  1E8:  		Thread
  1F0:  			Wait  7`
  1FC:  			Call  SetAnimation  ( .Actor:Self 00000001 00470007 )
  214:  			Wait  4`
  220:  			Call  SetAnimation  ( .Actor:Self 00000001 00470008 )
  238:  		EndThread
  240:  		Call  SetActorJumpGravity   ( .Actor:Self *Fixed[1.0] )
  254:  		Call  SetGoalToTarget   ( .Actor:Self )
  264:  		Call  GetGoalPos        ( .Actor:Self *Var0 *Var1 *Var2 )
  280:  		Sub   *Var0  00000014
  290:  		Set   *Var1  00000000
  2A0:  		Call  SetGoalPos        ( .Actor:Self *Var0 *Var1 *Var2 )
  2BC:  		Call  JumpToGoal        ( .Actor:Self  20` .False .True .False )
  2DC:  		Call  PlaySoundAtActor  ( .Actor:Self 000020EC )
  2F0:  		Thread
  2F8:  			Call  GetStatusFlags    ( .Actor:Self *Var3 )
  30C:  			If  *Var3  !&  ~Flags:StatusFlags:Shrink % 80000
  31C:  				Call  $Function_80218B50    ( 00000050 0000000E )
  330:  				Call  ShakeCam  ( .Cam:Battle 00000000  1` *Fixed[0.5] )
  34C:  			EndIf
  354:  		EndThread
  35C:  		Sub   *Var0  0000000F
  36C:  		Call  SetActorJumpGravity   ( .Actor:Self *Fixed[1.0] )
  380:  		Call  SetGoalPos        ( .Actor:Self *Var0 *Var1 *Var2 )
  39C:  		Call  JumpToGoal        ( .Actor:Self  12` .False .True .False )
  3BC:  		Call  PlaySoundAtActor  ( .Actor:Self 000020EC )
  3D0:  		Thread
  3D8:  			Call  GetStatusFlags    ( .Actor:Self *Var3 )
  3EC:  			If  *Var3  !&  ~Flags:StatusFlags:Shrink % 80000
  3FC:  				Call  $Function_80218B50    ( 00000050 0000000E )
  410:  				Call  ShakeCam  ( .Cam:Battle 00000000  1` *Fixed[0.5] )
  42C:  			EndIf
  434:  		EndThread
  43C:  		Call  SetAnimation  ( .Actor:Self 00000001 00470001 )
  454:  		Sub   *Var0  0000000A
  464:  		Call  SetGoalPos    ( .Actor:Self *Var0 *Var1 *Var2 )
  480:  		Call  JumpToGoal    ( .Actor:Self  8` .False .True .False )
  4A0:  		Call  PlaySoundAtActor  ( .Actor:Self 000020EC )
  4B4:  		Thread
  4BC:  			Call  GetStatusFlags    ( .Actor:Self *Var3 )
  4D0:  			If  *Var3  !&  ~Flags:StatusFlags:Shrink % 80000
  4E0:  				Call  $Function_80218B50    ( 00000050 0000000E )
  4F4:  				Call  ShakeCam  ( .Cam:Battle 00000000  1` *Fixed[0.5] )
  510:  			EndIf
  518:  		EndThread
  520:  		Wait  8`
  52C:  		If  *VarA  ==  .HitResult:Lucky % 5
  53C:  			Call  EnemyTestTarget   ( .Actor:Self *Var0 ~Flags:DamageType:TriggerLucky 00000000 00000000 00000000 )
  560:  		EndIf
  568:  		Call  UseBattleCamPreset    ( 00000002 )
  578:  		Call  MoveBattleCamOver     (  20` )
  588:  		Set   *Var3  00000000
  598:  		Loop  0000000C
  5A4:  			Add   *Var3  0000000F
  5B4:  			Call  SetActorYaw   ( .Actor:Self *Var3 )
  5C8:  			Wait  1`
  5D4:  		EndLoop
  5DC:  		Call  SetGoalToHome ( .Actor:Self )
  5EC:  		Call  SetActorSpeed ( .Actor:Self *Fixed[6.0] )
  600:  		Call  SetAnimation  ( .Actor:Self 00000001 00470004 )
  618:  		Call  SetPartYaw    ( .Actor:Self 00000001  180` )
  630:  		Call  AddActorDecoration    ( .Actor:Self 00000001 00000000 .Decoration:Sweat )
  64C:  		Call  RunToGoal     ( .Actor:Self  0` .False )
  664:  		Call  SetAnimation  ( .Actor:Self 00000001 00470001 )
  67C:  		Call  RemoveActorDecoration ( .Actor:Self 00000001 00000000 )
  694:  		Set   *Var3  000000B4
  6A4:  		Loop  0000000F
  6B0:  			Sub   *Var3  0000000C
  6C0:  			Call  SetActorYaw   ( .Actor:Self *Var3 )
  6D4:  			Wait  1`
  6E0:  		EndLoop
  6E8:  		Call  SetActorYaw       ( .Actor:Self  0` )
  6FC:  		Call  EnableIdleScript  ( .Actor:Self 00000001 )
  710:  		Call  UseIdleAnimation  ( .Actor:Self .True )
  724:  		Return
  72C:  	EndCaseGroup
  734:  EndSwitch
  73C:  Call  SetAnimation  ( .Actor:Self 00000001 00470006 )
  754:  Thread
  75C:  	Wait  5`
  768:  	Call  SetAnimation  ( .Actor:Self 00000001 00470007 )
  780:  	Wait  2`
  78C:  	Call  SetAnimation  ( .Actor:Self 00000001 00470008 )
  7A4:  EndThread
  7AC:  Call  SetActorJumpGravity   ( .Actor:Self *Fixed[1.3] )
  7C0:  Call  SetGoalToTarget   ( .Actor:Self )
  7D0:  Call  JumpToGoal        ( .Actor:Self  14` .False .True .False )
  7F0:  Wait  2`
  7FC:  Call  SetGoalToTarget   ( .Actor:Self )
  80C:  Call  GetStatusFlags    ( .Actor:Self *VarF )
  820:  If  *VarF  !&  ~Flags:StatusFlags:Shrink % 80000
  830:  	Call  80269EAC  ( 00000018 )
  840:  EndIf
  848:  Call  EnemyDamageTarget ( .Actor:Self *VarF ~Flags:DamageType:0 0000FFFF 00000000 0000000A 00000020 )
  870:  Switch  *VarF
  87C:  	CaseOR  ==  .HitResult:Hit % 0
  888:  	CaseOR  ==  .HitResult:QuakeImmune % 2
  894:  	CaseOR  ==  0000000A % A
  8A0:  		Call  UseBattleCamPreset    ( 00000002 )
  8B0:  		Call  MoveBattleCamOver     (  30` )
  8C0:  		Call  GetBattleFlags        ( *Var0 )
  8D0:  		If  *Var0  !&  80000000
  8E0:  			Call  GetStatusFlags    ( .Actor:Player *Var0 )
  8F4:  			If  *Var0  !&  ~Flags:StatusFlags:Stone % 100000
  904:  				Call  GetStatusFlags    ( .Actor:Self *VarE )
  918:  				If  *VarE  !&  ~Flags:StatusFlags:Shrink % 80000
  928:  					Call  LandJump  ( .Actor:Self )
  938:  					Call  PlaySoundAtActor  ( .Actor:Self 000020EC )
  94C:  				EndIf
  954:  			EndIf
  95C:  		EndIf
  964:  		Thread
  96C:  			Call  $Function_80218B50    ( 00000050 0000000E )
  980:  			Call  GetStatusFlags        ( .Actor:Self *Var3 )
  994:  			If  *Var3  !&  ~Flags:StatusFlags:Shrink % 80000
  9A4:  				Call  $Function_80218B50    ( 00000050 0000000E )
  9B8:  				Call  ShakeCam  ( .Cam:Battle 00000000  1` *Fixed[0.5] )
  9D4:  			EndIf
  9DC:  		EndThread
  9E4:  		Thread
  9EC:  			Wait  5`
  9F8:  			Call  SetAnimation  ( .Actor:Self 00000001 00470006 )
  A10:  		EndThread
  A18:  		Call  GetActorPos       ( .Actor:Self *Var0 *Var1 *Var2 )
  A34:  		Add   *Var0  00000028
  A44:  		Set   *Var1  00000000
  A54:  		Call  SetActorJumpGravity   ( .Actor:Self *Fixed[1.0] )
  A68:  		Call  SetGoalPos        ( .Actor:Self *Var0 *Var1 *Var2 )
  A84:  		Call  JumpToGoal        ( .Actor:Self  12` .False .True .False )
  AA4:  		Call  PlaySoundAtActor  ( .Actor:Self 000020EC )
  AB8:  		Thread
  AC0:  			Call  GetStatusFlags    ( .Actor:Self *Var3 )
  AD4:  			If  *Var3  !&  ~Flags:StatusFlags:Shrink % 80000
  AE4:  				Call  $Function_80218B50    ( 00000050 0000000E )
  AF8:  				Call  ShakeCam  ( .Cam:Battle 00000000  1` *Fixed[0.5] )
  B14:  			EndIf
  B1C:  		EndThread
  B24:  		Call  SetAnimation  ( .Actor:Self 00000001 00470001 )
  B3C:  		Add   *Var0  00000014
  B4C:  		Call  SetGoalPos    ( .Actor:Self *Var0 *Var1 *Var2 )
  B68:  		Call  JumpToGoal    ( .Actor:Self  8` .False .True .False )
  B88:  		Call  PlaySoundAtActor  ( .Actor:Self 000020EC )
  B9C:  		Thread
  BA4:  			Call  GetStatusFlags    ( .Actor:Self *Var3 )
  BB8:  			If  *Var3  !&  ~Flags:StatusFlags:Shrink % 80000
  BC8:  				Call  $Function_80218B50    ( 00000050 0000000E )
  BDC:  				Call  ShakeCam  ( .Cam:Battle 00000000  1` *Fixed[0.5] )
  BF8:  			EndIf
  C00:  		EndThread
  C08:  		Wait  8`
  C14:  		If  *VarF  ==  0000000A % A
  C24:  			Return
  C2C:  		EndIf
  C34:  		Call  UseBattleCamPreset    ( 00000002 )
  C44:  		Call  MoveBattleCamOver     (  20` )
  C54:  		ExecWait  $Script_8022AD84
  C60:  	Case  ==  00000003 % 3
  C6C:  	EndCaseGroup
  C74:  EndSwitch
  C7C:  Call  EnableIdleScript  ( .Actor:Self 00000001 )
  C90:  Call  UseIdleAnimation  ( .Actor:Self .True )
  CA4:  Return
  CAC:  End
}

#new:Script $Script_8022AD84
{
    0:  SetConst  *Var0  00000001
   10:  SetConst  *Var1  00470004
   20:  ExecWait  DoReturnHome
   2C:  Return
   34:  End
}

#new:Script $Script_FlipOver_KentC
{
    0:  Call  SetEnemyTargetOffset  ( .Actor:Self 00000001  0`  40` )
   1C:  Call  SetDefenseTable   ( .Actor:Self 00000001 $DefenseTable_802279F0 )
   34:  Call  SetIdleAnimations ( .Actor:Self 00000001 $IdleAnimations_802279B4 )
   4C:  Call  $Function_80218BA8    ( FFFFFFE8 0000002F 00000017 00000025 )
   68:  Call  SetAnimation      ( .Actor:Self 00000001 0047001C )
   80:  Call  SetActorVar       ( .Actor:Self 00000000 00000001 )
   98:  Call  SetActorVar       ( .Actor:Self 00000001 00470012 )
   B0:  Thread
   B8:  	Wait  4`
   C4:  	Call  GetStatusFlags    ( .Actor:Self *Var0 )
   D8:  	If  *Var0  !&  ~Flags:StatusFlags:Shrink % 80000
   E8:  		Call  SetActorRotationOffset    ( .Actor:Self 00000000 00000023 00000000 )
  104:  	Else
  10C:  		Call  SetActorRotationOffset    ( .Actor:Self 00000000 0000000E 00000000 )
  128:  	EndIf
  130:  	Set   *Var0  00000000
  140:  	Loop  00000005
  14C:  		Sub   *Var0  00000012
  15C:  		Call  SetActorRotation  ( .Actor:Self 00000000 00000000 *Var0 )
  178:  		Wait  1`
  184:  	EndLoop
  18C:  EndThread
  194:  UseIntBuffer  $IntTable_80227910
  1A0:  Loop  00000016
  1AC:  	Get1Int  *Var0
  1B8:  	Call  SetActorDispOffset    ( .Actor:Self 00000000 *Var0 00000000 )
  1D4:  	If  *Var0  ==  00000000
  1E4:  		Thread
  1EC:  			Call  GetStatusFlags    ( .Actor:Self *Var3 )
  200:  			If  *Var3  !&  ~Flags:StatusFlags:Shrink % 80000
  210:  				Call  $Function_80218B50    ( 00000050 0000000E )
  224:  				Call  ShakeCam  ( .Cam:Battle 00000000  1` *Fixed[0.5] )
  240:  			EndIf
  248:  		EndThread
  250:  	EndIf
  258:  	Wait  1`
  264:  EndLoop
  26C:  Call  SetActorRotationOffset    ( .Actor:Self 00000000 00000000 00000000 )
  288:  Call  SetActorRotation  ( .Actor:Self 00000000 00000000 00000000 )
  2A4:  Call  SetActorDispOffset        ( .Actor:Self 00000000 00000000 00000000 )
  2C0:  Call  SetAnimation      ( .Actor:Self 00000001 0047001D )
  2D8:  Wait  1`
  2E4:  Call  SetAnimation      ( .Actor:Self 00000001 0047001E )
  2FC:  Call  SetPartFlagBits   ( .Actor:Self 00000003 00020000 .False )
  318:  Call  SetPartFlagBits   ( .Actor:Self 00000003 00800000 .True )
  334:  Call  SetPartFlags      ( .Actor:Self 00000002 00000004 )
  34C:  Call  SetPartFlags      ( .Actor:Self 00000001 00020004 )
  364:  Call  SetActorVar       ( .Actor:Self 00000002 00000001 )
  37C:  Wait  8`
  388:  Return
  390:  End
}

#new:Script $Script_8022B158
{
    0:  Call  SetAnimation  ( .Actor:Self *Var0 *Var1 )
   18:  Set   *VarA  00000005
   28:  ExecWait  $Script_8022B2E8
   34:  Set   *Var2  00000000
   44:  Loop  00000024
   50:  	Add   *Var2  0000001E
   60:  	Call  SetActorYaw   ( .Actor:Self *Var2 )
   74:  	Wait  1`
   80:  EndLoop
   88:  Call  SetActorYaw   ( .Actor:Self  0` )
   9C:  Return
   A4:  End
}

#new:Script $Script_8022B204
{
    0:  Call  SetAnimation  ( .Actor:Self *Var0 *Var1 )
   18:  Set   *VarA  00000000
   28:  ExecWait  $Script_8022B2E8
   34:  Set   *Var2  00000000
   44:  Loop  00000030
   50:  	Add   *Var2  0000001E
   60:  	Call  SetActorYaw   ( .Actor:Self *Var2 )
   74:  	Wait  1`
   80:  EndLoop
   88:  Call  SetActorYaw   ( .Actor:Self  0` )
   9C:  Wait  10`
   A8:  Set   *Var0  00000001
   B8:  Set   *Var1  FFFFFFFF
   C8:  ExecWait  DoDeath
   D4:  Return
   DC:  End
}

#new:Script $Script_8022B2E8
{
    0:  Call  GetStatusFlags    ( .Actor:Self *Var3 )
   14:  If  *Var3  &  ~Flags:StatusFlags:Shrink % 80000
   24:  	Return
   2C:  EndIf
   34:  Call  GetActorVar   ( .Actor:Self 00000003 *Var3 )
   4C:  Call  GetLastDamage ( .Actor:Self *Var4 )
   60:  If  *Var4  >  *Var3
   70:  	Set   *Var4  *Var3
   80:  EndIf
   88:  If  *Var4  >  00000006
   98:  	Set   *Var4  00000006
   A8:  EndIf
   B0:  If  *Var4  >  00000000
   C0:  	Thread
   C8:  		Sub   *Var3  *Var4
   D8:  		Call  SetActorVar   ( .Actor:Self 00000003 *Var3 )
   F0:  		Set   *Var5  00000004
  100:  		Loop  *Var4
  10C:  			Exec  $Script_8022B444
  118:  			Add   *Var5  00000001
  128:  			Wait  *VarA
  134:  		EndLoop
  13C:  	EndThread
  144:  EndIf
  14C:  Return
  154:  End
}

#new:Script $Script_8022B444
{
    0:  Call  PlaySoundAtPart   ( .Actor:Self *Var5 00000212 )
   18:  Call  GetActorPos       ( .Actor:Self *Var6 *Var7 *Var8 )
   34:  Call  SetPartPos        ( .Actor:Self *Var5 *Var6  35` *Var8 )
   54:  Call  $Function_80218C74    ( *Var6 *Var8 *Var0 *Var1 *Var2 *Var3 )
   78:  Call  SetPartFlagBits   ( .Actor:Self *Var5 00000001 .False )
   94:  Call  SetPartJumpGravity    ( .Actor:Self *Var5 *Fixed[1.0] )
   AC:  Call  JumpPartTo        ( .Actor:Self *Var5 *Var0  0` *Var1  18` .True )
   D4:  Call  JumpPartTo        ( .Actor:Self *Var5 *Var2  0` *Var3  9` .True )
   FC:  Wait  10`
  108:  Loop  0000000A
  114:  	Call  SetPartFlagBits   ( .Actor:Self *Var5 00000001 .False )
  130:  	Wait  1`
  13C:  	Call  SetPartFlagBits   ( .Actor:Self *Var5 00000001 .True )
  158:  	Wait  1`
  164:  EndLoop
  16C:  Call  PlaySoundAtPart   ( .Actor:Self *Var5 00000211 )
  184:  Call  AddCoin   ( 00000001 )
  194:  Return
  19C:  End
}

PADDING: 8022B5E8 to 8022B5F0 (004A0788 to 004A0790)
00000000 00000000

#new:Script $Script_8022B5F0
{
    0:  Set   *VarA  *Var0
   10:  Label  0
   1C:  Call  TranslateModel    ( *VarA 00000000 00000002 00000000 )
   38:  Wait  5`
   44:  Call  TranslateModel    ( *VarA 00000000 00000000 00000000 )
   60:  Wait  5`
   6C:  Call  TranslateModel    ( *VarA 00000000 00000002 00000000 )
   88:  Wait  5`
   94:  Call  TranslateModel    ( *VarA 00000000 00000000 00000000 )
   B0:  Wait  5`
   BC:  Call  RandInt   ( 0000001E *Var0 )
   D0:  Add   *Var0  0000001E
   E0:  Wait  *Var0
   EC:  Goto  0
   F8:  Return
  100:  End
}

#new:Script $Script_BeforeBattle_8022B6F8
{
    0:  Call  SetSpriteShading  ( FFFFFFFF )
   10:  Set   *Var0  00000013
   20:  Exec  $Script_8022B5F0
   2C:  Set   *Var0  00000014
   3C:  Exec  $Script_8022B5F0
   48:  Set   *Var0  00000015
   58:  Exec  $Script_8022B5F0
   64:  Set   *Var0  00000016
   74:  Exec  $Script_8022B5F0
   80:  Set   *Var0  00000017
   90:  Exec  $Script_8022B5F0
   9C:  Set   *Var0  00000018
   AC:  Exec  $Script_8022B5F0
   B8:  Return
   C0:  End
}

#new:Script $Script_AfterBattle_8022B7C0
{
    0:  Return
    8:  End
}

#new:ForegroundModelList $ForegroundModelList_8022B7D0
{
	~Model:nok_bt01:ha3
	~Model:nok_bt01:hap
	~Model:nok_bt01:kusa3
	00000000
}

#new:Stage $Stage_8022B7E0
{
	$ASCII_8022BE64  % nok_tex
	$ASCII_8022BE54  % nok_bt01_shape
	$ASCII_8022BE44  % nok_bt01_hit
	$Script_BeforeBattle_8022B6F8
	$Script_AfterBattle_8022B7C0
	$ASCII_8022BE3C  % nok_bg
	$ForegroundModelList_8022B7D0
	00000000
	00000000
	00000000
}

PADDING: 8022B808 to 8022B810 (004A09A8 to 004A09B0)
00000000 00000000

#new:Script $Script_8022B810
{
    0:  Set   *VarA  *Var0
   10:  Label  0
   1C:  Call  TranslateModel    ( *VarA 00000000 00000002 00000000 )
   38:  Wait  5`
   44:  Call  TranslateModel    ( *VarA 00000000 00000000 00000000 )
   60:  Wait  5`
   6C:  Call  TranslateModel    ( *VarA 00000000 00000002 00000000 )
   88:  Wait  5`
   94:  Call  TranslateModel    ( *VarA 00000000 00000000 00000000 )
   B0:  Wait  5`
   BC:  Call  RandInt   ( 0000001E *Var0 )
   D0:  Add   *Var0  0000001E
   E0:  Wait  *Var0
   EC:  Goto  0
   F8:  Return
  100:  End
}

#new:Script $Script_BeforeBattle_8022B918
{
    0:  Call  SetSpriteShading  ( FFFFFFFF )
   10:  Thread
   18:  	Set   *Var0  00000013
   28:  	Exec  $Script_8022B810
   34:  	Wait  5`
   40:  	Set   *Var0  00000014
   50:  	Exec  $Script_8022B810
   5C:  	Wait  5`
   68:  	Set   *Var0  00000015
   78:  	Exec  $Script_8022B810
   84:  	Wait  5`
   90:  	Set   *Var0  00000016
   A0:  	Exec  $Script_8022B810
   AC:  	Wait  5`
   B8:  	Set   *Var0  00000017
   C8:  	Exec  $Script_8022B810
   D4:  	Wait  5`
   E0:  	Set   *Var0  00000018
   F0:  	Exec  $Script_8022B810
   FC:  	Wait  5`
  108:  	Set   *Var0  00000019
  118:  	Exec  $Script_8022B810
  124:  	Wait  5`
  130:  	Set   *Var0  0000001A
  140:  	Exec  $Script_8022B810
  14C:  	Wait  5`
  158:  	Set   *Var0  0000001B
  168:  	Exec  $Script_8022B810
  174:  	Wait  5`
  180:  	Set   *Var0  0000001C
  190:  	Exec  $Script_8022B810
  19C:  EndThread
  1A4:  Return
  1AC:  End
}

#new:Script $Script_AfterBattle_8022BACC
{
    0:  Return
    8:  End
}

#new:ForegroundModelList $ForegroundModelList_8022BADC
{
	~Model:nok_bt02:ha3
	~Model:nok_bt02:hap
	~Model:nok_bt02:kusa3
	00000000
}

#new:Stage $Stage_8022BAEC
{
	$ASCII_8022BE94  % nok_tex
	$ASCII_8022BE84  % nok_bt02_shape
	$ASCII_8022BE74  % nok_bt02_hit
	$Script_BeforeBattle_8022B918
	$Script_AfterBattle_8022BACC
	$ASCII_8022BE6C  % nok_bg
	$ForegroundModelList_8022BADC
	00000000
	00000000
	00000000
}

PADDING: 8022BB14 to 8022BB20 (004A0CB4 to 004A0CC0)
00000000 00000000 00000000

#new:Script $Script_BeforeBattle_8022BB20
{
    0:  Call  SetSpriteShading  ( FFFFFFFF )
   10:  Return
   18:  End
}

#new:Script $Script_AfterBattle_8022BB40
{
    0:  Return
    8:  End
}

#new:ForegroundModelList $ForegroundModelList_8022BB50
{
	~Model:nok_bt03:ha3
	~Model:nok_bt03:hap
	00000000
}

#new:Stage $Stage_8022BB5C
{
	$ASCII_8022BEC4  % nok_tex
	$ASCII_8022BEB4  % nok_bt03_shape
	$ASCII_8022BEA4  % nok_bt03_hit
	$Script_BeforeBattle_8022BB20
	$Script_AfterBattle_8022BB40
	$ASCII_8022BE9C  % nok_bg
	$ForegroundModelList_8022BB50
	00000000
	00000000
	00000000
}

PADDING: 8022BB84 to 8022BB90 (004A0D24 to 004A0D30)
00000000 00000000 00000000

#new:Script $Script_BeforeBattle_8022BB90
{
    0:  Call  SetSpriteShading  ( FFFFFFFF )
   10:  Return
   18:  End
}

#new:Script $Script_AfterBattle_8022BBB0
{
    0:  Return
    8:  End
}

#new:ForegroundModelList $ForegroundModelList_8022BBC0
{
	~Model:nok_bt04:ueki2
	~Model:nok_bt04:ueki1
	~Model:nok_bt04:kabu2
	~Model:nok_bt04:kabu1
	~Model:nok_bt04:kusa3
	00000000
}

#new:Stage $Stage_8022BBD8
{
	$ASCII_8022BEF4  % nok_tex
	$ASCII_8022BEE4  % nok_bt04_shape
	$ASCII_8022BED4  % nok_bt04_hit
	$Script_BeforeBattle_8022BB90
	$Script_AfterBattle_8022BBB0
	$ASCII_8022BECC  % nok_bg
	$ForegroundModelList_8022BBC0
	00000000
	00000000
	00000000
}

#new:SJIS $SJIS_8022BC00
{
	ゼニノコー % zeninoko-
}

#new:SJIS $SJIS_8022BC0C
{
	チョロボンx4 % chorobonx4
}

#new:SJIS $SJIS_8022BC1C
{
	チョロボンx2 % chorobonx2
}

#new:SJIS $SJIS_8022BC2C
{
	チョロボン % chorobon
}

#new:SJIS $SJIS_8022BC38
{
	パタパタ、ノコノコ、トゲクリボーx2 % patapata,nokonoko,togekuribo-x2
}

#new:SJIS $SJIS_8022BC5C
{
	パタパタ、ノコノコ、トゲクリボー % patapata,nokonoko,togekuribo-
}

#new:SJIS $SJIS_8022BC80
{
	パタパタ、ノコノコ % patapata,nokonoko
}

#new:SJIS $SJIS_8022BC94
{
	パタパタx2 % patapatax2
}

#new:SJIS $SJIS_8022BCA0
{
	ノコノコx2、トゲクリボー,パタクリボー % nokonokox2,togekuribo-,patakuribo-
}

#new:SJIS $SJIS_8022BCC8
{
	ノコノコ、トゲクリボー,パタクリボー % nokonoko,togekuribo-,patakuribo-
}

#new:SJIS $SJIS_8022BCEC
{
	ノコノコ、パタクリボーx2 % nokonoko,patakuribo-x2
}

#new:SJIS $SJIS_8022BD08
{
	ノコノコ、トゲクリボーx2 % nokonoko,togekuribo-x2
}

#new:SJIS $SJIS_8022BD24
{
	ノコノコx2、トゲクリ % nokonokox2,togekuri
}

#new:SJIS $SJIS_8022BD3C
{
	ノコノコ、トゲクリボー % nokonoko,togekuribo-
}

#new:SJIS $SJIS_8022BD54
{
	ノコノコx３ % nokonokox3
}

#new:SJIS $SJIS_8022BD60
{
	ノコノコx２ % nokonokox2
}

#new:SJIS $SJIS_8022BD6C
{
	ノコノコ、クリボー % nokonoko,kuribo-
}

#new:SJIS $SJIS_8022BD80
{
	トゲクリボーx４ % togekuribo-x4
}

#new:SJIS $SJIS_8022BD90
{
	トゲクリボーx３ % togekuribo-x3
}

#new:SJIS $SJIS_8022BDA0
{
	トゲクリボー、クリボーx2 % togekuribo-,kuribo-x2
}

#new:SJIS $SJIS_8022BDBC
{
	トゲクリボーx２ % togekuribo-x2
}

#new:SJIS $SJIS_8022BDCC
{
	トゲクリボー、パタクリボー % togekuribo-,patakuribo-
}

#new:SJIS $SJIS_8022BDE8
{
	パタクリボーx２ % patakuribo-x2
}

#new:SJIS $SJIS_8022BDF8
{
	クリボー,トゲクリボー % kuribo-,togekuribo-
}

#new:SJIS $SJIS_8022BE10
{
	クリボーx２ % kuribo-x2
}

#new:ASCII $ASCII_8022BE1C
{
	"nok_04"
}

#new:ASCII $ASCII_8022BE24
{
	"nok_03"
}

#new:ASCII $ASCII_8022BE2C
{
	"nok_02"
}

#new:ASCII $ASCII_8022BE34
{
	"nok_01"
}

#new:ASCII $ASCII_8022BE3C
{
	"nok_bg"
}

#new:ASCII $ASCII_8022BE44
{
	"nok_bt01_hit"
}

#new:ASCII $ASCII_8022BE54
{
	"nok_bt01_shape"
}

#new:ASCII $ASCII_8022BE64
{
	"nok_tex"
}

#new:ASCII $ASCII_8022BE6C
{
	"nok_bg"
}

#new:ASCII $ASCII_8022BE74
{
	"nok_bt02_hit"
}

#new:ASCII $ASCII_8022BE84
{
	"nok_bt02_shape"
}

#new:ASCII $ASCII_8022BE94
{
	"nok_tex"
}

#new:ASCII $ASCII_8022BE9C
{
	"nok_bg"
}

#new:ASCII $ASCII_8022BEA4
{
	"nok_bt03_hit"
}

#new:ASCII $ASCII_8022BEB4
{
	"nok_bt03_shape"
}

#new:ASCII $ASCII_8022BEC4
{
	"nok_tex"
}

#new:ASCII $ASCII_8022BECC
{
	"nok_bg"
}

#new:ASCII $ASCII_8022BED4
{
	"nok_bt04_hit"
}

#new:ASCII $ASCII_8022BEE4
{
	"nok_bt04_shape"
}

#new:ASCII $ASCII_8022BEF4
{
	"nok_tex"
}

PADDING: 8022BEFC to 8022BF00 (004A109C to 004A10A0)
00000000

