% Script File: 1A Area TIK.bscr
% Decoded from: 5EC490 to 608AB0 (1A Area TIK)

#new:Function $Function_80218000
{
    0:  ADDIU     SP, SP, FFD8
    4:  SW        S1, 14 (SP)
    8:  COPY      S1, A0
    C:  SW        RA, 20 (SP)
   10:  SW        S3, 1C (SP)
   14:  SW        S2, 18 (SP)
   18:  SW        S0, 10 (SP)
   1C:  LW        S0, C (S1)
   20:  LW        A1, 0 (S0)
   24:  JAL       ~Func:get_variable
   28:  ADDIU     S0, S0, 4
   2C:  LW        A1, 0 (S0)
   30:  ADDIU     S0, S0, 4
   34:  COPY      A0, S1
   38:  JAL       ~Func:get_variable
   3C:  COPY      S3, V0
   40:  LW        A1, 0 (S0)
   44:  ADDIU     S0, S0, 4
   48:  COPY      A0, S1
   4C:  JAL       ~Func:get_variable
   50:  COPY      S2, V0
   54:  COPY      A0, S1
   58:  LW        A1, 0 (S0)
   5C:  JAL       ~Func:get_variable
   60:  COPY      S0, V0
   64:  LW        A0, 148 (S1)
   68:  JAL       ~Func:get_actor
   6C:  COPY      S1, V0
   70:  COPY      V1, V0
   74:  LW        V0, 8 (V1)
   78:  LBU       V0, 24 (V0)
   7C:  LW        A0, 8 (V1)
   80:  SUBU      S3, S3, V0
   84:  SB        S3, 194 (V1)
   88:  LBU       V0, 25 (A0)
   8C:  SUBU      S2, S2, V0
   90:  SB        S2, 195 (V1)
   94:  LBU       V0, 26 (A0)
   98:  SUBU      S0, S0, V0
   9C:  SB        S0, 196 (V1)
   A0:  LBU       A0, 27 (A0)
   A4:  SUBU      S1, S1, A0
   A8:  SB        S1, 197 (V1)
   AC:  LW        RA, 20 (SP)
   B0:  LW        S3, 1C (SP)
   B4:  LW        S2, 18 (SP)
   B8:  LW        S1, 14 (SP)
   BC:  LW        S0, 10 (SP)
   C0:  LI        V0, 2
   C4:  JR        RA
   C8:  ADDIU     SP, SP, 28
}

PADDING: 802180CC to 802180D0 (005EC55C to 005EC560)
00000000

#new:Function $Function_802180D0
{
    0:  ADDIU     SP, SP, FFE0
    4:  SW        S1, 14 (SP)
    8:  COPY      S1, A0
    C:  SW        RA, 18 (SP)
   10:  SW        S0, 10 (SP)
   14:  LW        S0, C (S1)
   18:  LW        A1, 0 (S0)
   1C:  JAL       ~Func:get_variable
   20:  ADDIU     S0, S0, 4
   24:  COPY      A0, S1
   28:  LW        A1, 0 (S0)
   2C:  JAL       ~Func:get_variable
   30:  COPY      S0, V0
   34:  COPY      A0, S0
   38:  JAL       ~Func:start_rumble
   3C:  COPY      A1, V0
   40:  LW        RA, 18 (SP)
   44:  LW        S1, 14 (SP)
   48:  LW        S0, 10 (SP)
   4C:  LI        V0, 2
   50:  JR        RA
   54:  ADDIU     SP, SP, 20
}

#new:Function $Function_80218128
{
    0:  ADDIU     SP, SP, FFD8
    4:  SW        S1, 14 (SP)
    8:  COPY      S1, A0
    C:  SW        RA, 20 (SP)
   10:  SW        S3, 1C (SP)
   14:  SW        S2, 18 (SP)
   18:  SW        S0, 10 (SP)
   1C:  LW        S0, C (S1)
   20:  LW        A1, 0 (S0)
   24:  JAL       ~Func:get_variable
   28:  ADDIU     S0, S0, 4
   2C:  LW        A1, 0 (S0)
   30:  ADDIU     S0, S0, 4
   34:  COPY      A0, S1
   38:  JAL       ~Func:get_variable
   3C:  COPY      S3, V0
   40:  LW        A1, 0 (S0)
   44:  ADDIU     S0, S0, 4
   48:  COPY      A0, S1
   4C:  JAL       ~Func:get_variable
   50:  COPY      S2, V0
   54:  COPY      A0, S1
   58:  LW        A1, 0 (S0)
   5C:  JAL       ~Func:get_variable
   60:  COPY      S0, V0
   64:  LW        A0, 148 (S1)
   68:  JAL       ~Func:get_actor
   6C:  COPY      S1, V0
   70:  COPY      V1, V0
   74:  LW        V0, 8 (V1)
   78:  LBU       V0, 24 (V0)
   7C:  LW        A0, 8 (V1)
   80:  SUBU      S3, S3, V0
   84:  SB        S3, 194 (V1)
   88:  LBU       V0, 25 (A0)
   8C:  SUBU      S2, S2, V0
   90:  SB        S2, 195 (V1)
   94:  LBU       V0, 26 (A0)
   98:  SUBU      S0, S0, V0
   9C:  SB        S0, 196 (V1)
   A0:  LBU       A0, 27 (A0)
   A4:  SUBU      S1, S1, A0
   A8:  SB        S1, 197 (V1)
   AC:  LW        RA, 20 (SP)
   B0:  LW        S3, 1C (SP)
   B4:  LW        S2, 18 (SP)
   B8:  LW        S1, 14 (SP)
   BC:  LW        S0, 10 (SP)
   C0:  LI        V0, 2
   C4:  JR        RA
   C8:  ADDIU     SP, SP, 28
}

PADDING: 802181F4 to 80218200 (005EC684 to 005EC690)
00000000 00000000 00000000

#new:Function $Function_80218200
{
    0:  ADDIU     SP, SP, FFD8
    4:  SDC1      F22, 20 (SP)
    8:  MOV.S     F22, F12
    C:  SDC1      F20, 18 (SP)
   10:  SW        RA, 10 (SP)
   14:  JAL       ~Func:length2D
   18:  MOV.S     F20, F14
   1C:  TRUNC.W.S F6, F20
   20:  MFC1      V0, F6
   24:  NOP
   28:  BLTZL     V0, .o30
   2C:  SUBU      V0, R0, V0
        .o30
   30:  MTC1      V0, F2
   34:  NOP
   38:  CVT.S.W   F2, F2
   3C:  DIV.S     F4, F2, F0
   40:  CLEAR     A0
   44:  LI        A2, 5A
   48:  COPY      A1, A0
   4C:  LA        A3, $FloatTable_80222DA4
   54:  ANDI      V0, A2, FFFF
        .o58
   58:  ANDI      V1, A0, FFFF
   5C:  SUBU      V0, V0, V1
   60:  SRL       V1, V0, 1F
   64:  ADDU      V0, V0, V1
   68:  SRA       V0, V0, 1
   6C:  ADDU      V1, A0, V0
   70:  ANDI      V0, V1, FFFF
   74:  SLL       V0, V0, 2
   78:  ADDU      V0, V0, A3
   7C:  LWC1      F0, 0 (V0)
   80:  C.LT.S    F0, F4
   84:  NOP
   88:  BC1FL     .o94
   8C:  COPY      A2, V1
   90:  COPY      A0, V1
        .o94
   94:  ADDIU     A1, A1, 1
   98:  ANDI      V0, A1, FFFF
   9C:  SLTIU     V0, V0, 7
   A0:  BNE       V0, R0, .o58
   A4:  ANDI      V0, A2, FFFF
   A8:  ANDI      V0, A0, FFFF
   AC:  SLL       V0, V0, 2
   B0:  ANDI      V1, A2, FFFF
   B4:  LTF       F2, V0 ($FloatTable_80222DA4)
   C0:  SLL       V1, V1, 2
   C4:  SUB.S     F2, F2, F4
   C8:  LTF       F0, V1 ($FloatTable_80222DA4)
   D4:  SUB.S     F0, F0, F4
   D8:  ABS.S     F2, F2
   DC:  ABS.S     F0, F0
   E0:  C.LT.S    F2, F0
   E4:  NOP
   E8:  BC1F      .oF4
   EC:  COPY      V1, A2
   F0:  COPY      V1, A0
        .oF4
   F4:  MTC1      R0, F0
   F8:  NOP
   FC:  C.LT.S    F22, F0
  100:  NOP
  104:  BC1F      .o130
  108:  NOP
  10C:  C.LE.S    F0, F20
  110:  NOP
  114:  BC1F      .o128
  118:  LI        V0, B4
  11C:  SUBU      V1, V0, V1
  120:  MTC1      R0, F0
  124:  NOP
        .o128
  128:  C.LT.S    F22, F0
  12C:  NOP
        .o130
  130:  BC1F      .o148
  134:  NOP
  138:  C.LT.S    F20, F0
  13C:  NOP
  140:  BC1TL     .o148
  144:  ADDIU     V1, V1, B4
        .o148
  148:  MTC1      R0, F0
  14C:  NOP
  150:  C.LE.S    F0, F22
  154:  NOP
  158:  BC1F      .o174
  15C:  NOP
  160:  C.LT.S    F20, F0
  164:  NOP
  168:  BC1F      .o174
  16C:  LI        V0, 168
  170:  SUBU      V1, V0, V1
        .o174
  174:  LW        RA, 10 (SP)
  178:  LDC1      F22, 20 (SP)
  17C:  LDC1      F20, 18 (SP)
  180:  ANDI      V0, V1, FFFF
  184:  JR        RA
  188:  ADDIU     SP, SP, 28
}

#new:Function $Function_8021838C
{
    0:  ADDIU     SP, SP, FFD8
    4:  SW        S4, 20 (SP)
    8:  COPY      S4, A0
    C:  SW        RA, 24 (SP)
   10:  SW        S3, 1C (SP)
   14:  SW        S2, 18 (SP)
   18:  SW        S1, 14 (SP)
   1C:  SW        S0, 10 (SP)
   20:  LW        S2, C (S4)
   24:  LW        A1, 0 (S2)
   28:  JAL       ~Func:get_variable
   2C:  ADDIU     S2, S2, 4
   30:  LW        A1, 0 (S2)
   34:  ADDIU     S2, S2, 4
   38:  COPY      A0, S4
   3C:  JAL       ~Func:get_variable
   40:  COPY      S0, V0
   44:  LW        A1, 0 (S2)
   48:  ADDIU     S2, S2, 4
   4C:  COPY      A0, S4
   50:  JAL       ~Func:get_variable
   54:  COPY      S1, V0
   58:  COPY      S3, V0
   5C:  LW        A1, 0 (S2)
   60:  ADDIU     S2, S2, 4
   64:  COPY      A0, S4
   68:  JAL       ~Func:get_variable
   6C:  SUBU      S3, S3, S0
   70:  COPY      S0, V0
   74:  COPY      A0, S4
   78:  LW        A1, 0 (S2)
   7C:  JAL       ~Func:get_variable
   80:  SUBU      S0, S0, S1
   84:  BNE       S3, R0, .oA0
   88:  NOP
   8C:  BNE       S0, R0, .oA0
   90:  COPY      A0, S4
   94:  LW        A1, 0 (S2)
   98:  BEQ       R0, R0, .oC8
   9C:  COPY      A2, V0
        .oA0
   A0:  MTC1      S3, F12
   A4:  NOP
   A8:  CVT.S.W   F12, F12
   AC:  MTC1      S0, F14
   B0:  NOP
   B4:  JAL       $Function_80218200
   B8:  CVT.S.W   F14, F14
   BC:  COPY      A0, S4
   C0:  LW        A1, 0 (S2)
   C4:  ADDIU     A2, V0, FFA6
        .oC8
   C8:  JAL       ~Func:set_variable
   CC:  NOP
   D0:  LI        V0, 2
   D4:  LW        RA, 24 (SP)
   D8:  LW        S4, 20 (SP)
   DC:  LW        S3, 1C (SP)
   E0:  LW        S2, 18 (SP)
   E4:  LW        S1, 14 (SP)
   E8:  LW        S0, 10 (SP)
   EC:  JR        RA
   F0:  ADDIU     SP, SP, 28
}

#new:Function $Function_80218480
{
    0:  ADDIU     SP, SP, FFD8
    4:  SDC1      F22, 20 (SP)
    8:  MOV.S     F22, F12
    C:  SDC1      F20, 18 (SP)
   10:  SW        RA, 10 (SP)
   14:  JAL       ~Func:length2D
   18:  MOV.S     F20, F14
   1C:  TRUNC.W.S F6, F20
   20:  MFC1      V0, F6
   24:  NOP
   28:  BLTZL     V0, .o30
   2C:  SUBU      V0, R0, V0
        .o30
   30:  MTC1      V0, F2
   34:  NOP
   38:  CVT.S.W   F2, F2
   3C:  DIV.S     F4, F2, F0
   40:  CLEAR     A0
   44:  LI        A2, 5A
   48:  COPY      A1, A0
   4C:  LA        A3, $FloatTable_80224880
   54:  ANDI      V0, A2, FFFF
        .o58
   58:  ANDI      V1, A0, FFFF
   5C:  SUBU      V0, V0, V1
   60:  SRL       V1, V0, 1F
   64:  ADDU      V0, V0, V1
   68:  SRA       V0, V0, 1
   6C:  ADDU      V1, A0, V0
   70:  ANDI      V0, V1, FFFF
   74:  SLL       V0, V0, 2
   78:  ADDU      V0, V0, A3
   7C:  LWC1      F0, 0 (V0)
   80:  C.LT.S    F0, F4
   84:  NOP
   88:  BC1FL     .o94
   8C:  COPY      A2, V1
   90:  COPY      A0, V1
        .o94
   94:  ADDIU     A1, A1, 1
   98:  ANDI      V0, A1, FFFF
   9C:  SLTIU     V0, V0, 7
   A0:  BNE       V0, R0, .o58
   A4:  ANDI      V0, A2, FFFF
   A8:  ANDI      V0, A0, FFFF
   AC:  SLL       V0, V0, 2
   B0:  ANDI      V1, A2, FFFF
   B4:  LTF       F2, V0 ($FloatTable_80224880)
   C0:  SLL       V1, V1, 2
   C4:  SUB.S     F2, F2, F4
   C8:  LTF       F0, V1 ($FloatTable_80224880)
   D4:  SUB.S     F0, F0, F4
   D8:  ABS.S     F2, F2
   DC:  ABS.S     F0, F0
   E0:  C.LT.S    F2, F0
   E4:  NOP
   E8:  BC1F      .oF4
   EC:  COPY      V1, A2
   F0:  COPY      V1, A0
        .oF4
   F4:  MTC1      R0, F0
   F8:  NOP
   FC:  C.LT.S    F22, F0
  100:  NOP
  104:  BC1F      .o130
  108:  NOP
  10C:  C.LE.S    F0, F20
  110:  NOP
  114:  BC1F      .o128
  118:  LI        V0, B4
  11C:  SUBU      V1, V0, V1
  120:  MTC1      R0, F0
  124:  NOP
        .o128
  128:  C.LT.S    F22, F0
  12C:  NOP
        .o130
  130:  BC1F      .o148
  134:  NOP
  138:  C.LT.S    F20, F0
  13C:  NOP
  140:  BC1TL     .o148
  144:  ADDIU     V1, V1, B4
        .o148
  148:  MTC1      R0, F0
  14C:  NOP
  150:  C.LE.S    F0, F22
  154:  NOP
  158:  BC1F      .o174
  15C:  NOP
  160:  C.LT.S    F20, F0
  164:  NOP
  168:  BC1F      .o174
  16C:  LI        V0, 168
  170:  SUBU      V1, V0, V1
        .o174
  174:  LW        RA, 10 (SP)
  178:  LDC1      F22, 20 (SP)
  17C:  LDC1      F20, 18 (SP)
  180:  ANDI      V0, V1, FFFF
  184:  JR        RA
  188:  ADDIU     SP, SP, 28
}

#new:Function $Function_8021860C
{
    0:  ADDIU     SP, SP, FFD8
    4:  SW        S4, 20 (SP)
    8:  COPY      S4, A0
    C:  SW        RA, 24 (SP)
   10:  SW        S3, 1C (SP)
   14:  SW        S2, 18 (SP)
   18:  SW        S1, 14 (SP)
   1C:  SW        S0, 10 (SP)
   20:  LW        S2, C (S4)
   24:  LW        A1, 0 (S2)
   28:  JAL       ~Func:get_variable
   2C:  ADDIU     S2, S2, 4
   30:  LW        A1, 0 (S2)
   34:  ADDIU     S2, S2, 4
   38:  COPY      A0, S4
   3C:  JAL       ~Func:get_variable
   40:  COPY      S0, V0
   44:  LW        A1, 0 (S2)
   48:  ADDIU     S2, S2, 4
   4C:  COPY      A0, S4
   50:  JAL       ~Func:get_variable
   54:  COPY      S1, V0
   58:  COPY      S3, V0
   5C:  LW        A1, 0 (S2)
   60:  ADDIU     S2, S2, 4
   64:  COPY      A0, S4
   68:  JAL       ~Func:get_variable
   6C:  SUBU      S3, S3, S0
   70:  COPY      S0, V0
   74:  COPY      A0, S4
   78:  LW        A1, 0 (S2)
   7C:  JAL       ~Func:get_variable
   80:  SUBU      S0, S0, S1
   84:  BNE       S3, R0, .oA0
   88:  NOP
   8C:  BNE       S0, R0, .oA0
   90:  COPY      A0, S4
   94:  LW        A1, 0 (S2)
   98:  BEQ       R0, R0, .oC8
   9C:  COPY      A2, V0
        .oA0
   A0:  MTC1      S3, F12
   A4:  NOP
   A8:  CVT.S.W   F12, F12
   AC:  MTC1      S0, F14
   B0:  NOP
   B4:  JAL       $Function_80218480
   B8:  CVT.S.W   F14, F14
   BC:  COPY      A0, S4
   C0:  LW        A1, 0 (S2)
   C4:  ADDIU     A2, V0, FFA6
        .oC8
   C8:  JAL       ~Func:set_variable
   CC:  NOP
   D0:  LI        V0, 2
   D4:  LW        RA, 24 (SP)
   D8:  LW        S4, 20 (SP)
   DC:  LW        S3, 1C (SP)
   E0:  LW        S2, 18 (SP)
   E4:  LW        S1, 14 (SP)
   E8:  LW        S0, 10 (SP)
   EC:  JR        RA
   F0:  ADDIU     SP, SP, 28
}

#new:Function $Function_80218700
{
    0:  ADDIU     SP, SP, FFE0
    4:  SW        S1, 14 (SP)
    8:  COPY      S1, A0
    C:  SW        RA, 18 (SP)
   10:  SW        S0, 10 (SP)
   14:  LW        S0, C (S1)
   18:  LW        A1, 0 (S0)
   1C:  JAL       ~Func:get_variable
   20:  ADDIU     S0, S0, 4
   24:  COPY      A0, S1
   28:  LW        A1, 0 (S0)
   2C:  JAL       ~Func:get_variable
   30:  COPY      S0, V0
   34:  COPY      A0, S0
   38:  JAL       ~Func:start_rumble
   3C:  COPY      A1, V0
   40:  LW        RA, 18 (SP)
   44:  LW        S1, 14 (SP)
   48:  LW        S0, 10 (SP)
   4C:  LI        V0, 2
   50:  JR        RA
   54:  ADDIU     SP, SP, 20
}

#new:Function $Function_80218758
{
    0:  ADDIU     SP, SP, FFD8
    4:  SDC1      F22, 20 (SP)
    8:  MOV.S     F22, F12
    C:  SDC1      F20, 18 (SP)
   10:  SW        RA, 10 (SP)
   14:  JAL       ~Func:length2D
   18:  MOV.S     F20, F14
   1C:  TRUNC.W.S F6, F20
   20:  MFC1      V0, F6
   24:  NOP
   28:  BLTZL     V0, .o30
   2C:  SUBU      V0, R0, V0
        .o30
   30:  MTC1      V0, F2
   34:  NOP
   38:  CVT.S.W   F2, F2
   3C:  DIV.S     F4, F2, F0
   40:  CLEAR     A0
   44:  LI        A2, 5A
   48:  COPY      A1, A0
   4C:  LA        A3, $FloatTable_80227B7C
   54:  ANDI      V0, A2, FFFF
        .o58
   58:  ANDI      V1, A0, FFFF
   5C:  SUBU      V0, V0, V1
   60:  SRL       V1, V0, 1F
   64:  ADDU      V0, V0, V1
   68:  SRA       V0, V0, 1
   6C:  ADDU      V1, A0, V0
   70:  ANDI      V0, V1, FFFF
   74:  SLL       V0, V0, 2
   78:  ADDU      V0, V0, A3
   7C:  LWC1      F0, 0 (V0)
   80:  C.LT.S    F0, F4
   84:  NOP
   88:  BC1FL     .o94
   8C:  COPY      A2, V1
   90:  COPY      A0, V1
        .o94
   94:  ADDIU     A1, A1, 1
   98:  ANDI      V0, A1, FFFF
   9C:  SLTIU     V0, V0, 7
   A0:  BNE       V0, R0, .o58
   A4:  ANDI      V0, A2, FFFF
   A8:  ANDI      V0, A0, FFFF
   AC:  SLL       V0, V0, 2
   B0:  ANDI      V1, A2, FFFF
   B4:  LTF       F2, V0 ($FloatTable_80227B7C)
   C0:  SLL       V1, V1, 2
   C4:  SUB.S     F2, F2, F4
   C8:  LTF       F0, V1 ($FloatTable_80227B7C)
   D4:  SUB.S     F0, F0, F4
   D8:  ABS.S     F2, F2
   DC:  ABS.S     F0, F0
   E0:  C.LT.S    F2, F0
   E4:  NOP
   E8:  BC1F      .oF4
   EC:  COPY      V1, A2
   F0:  COPY      V1, A0
        .oF4
   F4:  MTC1      R0, F0
   F8:  NOP
   FC:  C.LT.S    F22, F0
  100:  NOP
  104:  BC1F      .o130
  108:  NOP
  10C:  C.LE.S    F0, F20
  110:  NOP
  114:  BC1F      .o128
  118:  LI        V0, B4
  11C:  SUBU      V1, V0, V1
  120:  MTC1      R0, F0
  124:  NOP
        .o128
  128:  C.LT.S    F22, F0
  12C:  NOP
        .o130
  130:  BC1F      .o148
  134:  NOP
  138:  C.LT.S    F20, F0
  13C:  NOP
  140:  BC1TL     .o148
  144:  ADDIU     V1, V1, B4
        .o148
  148:  MTC1      R0, F0
  14C:  NOP
  150:  C.LE.S    F0, F22
  154:  NOP
  158:  BC1F      .o174
  15C:  NOP
  160:  C.LT.S    F20, F0
  164:  NOP
  168:  BC1F      .o174
  16C:  LI        V0, 168
  170:  SUBU      V1, V0, V1
        .o174
  174:  LW        RA, 10 (SP)
  178:  LDC1      F22, 20 (SP)
  17C:  LDC1      F20, 18 (SP)
  180:  ANDI      V0, V1, FFFF
  184:  JR        RA
  188:  ADDIU     SP, SP, 28
}

#new:Function $Function_802188E4
{
    0:  ADDIU     SP, SP, FFD8
    4:  SW        S4, 20 (SP)
    8:  COPY      S4, A0
    C:  SW        RA, 24 (SP)
   10:  SW        S3, 1C (SP)
   14:  SW        S2, 18 (SP)
   18:  SW        S1, 14 (SP)
   1C:  SW        S0, 10 (SP)
   20:  LW        S2, C (S4)
   24:  LW        A1, 0 (S2)
   28:  JAL       ~Func:get_variable
   2C:  ADDIU     S2, S2, 4
   30:  LW        A1, 0 (S2)
   34:  ADDIU     S2, S2, 4
   38:  COPY      A0, S4
   3C:  JAL       ~Func:get_variable
   40:  COPY      S0, V0
   44:  LW        A1, 0 (S2)
   48:  ADDIU     S2, S2, 4
   4C:  COPY      A0, S4
   50:  JAL       ~Func:get_variable
   54:  COPY      S1, V0
   58:  COPY      S3, V0
   5C:  LW        A1, 0 (S2)
   60:  ADDIU     S2, S2, 4
   64:  COPY      A0, S4
   68:  JAL       ~Func:get_variable
   6C:  SUBU      S3, S3, S0
   70:  COPY      S0, V0
   74:  COPY      A0, S4
   78:  LW        A1, 0 (S2)
   7C:  JAL       ~Func:get_variable
   80:  SUBU      S0, S0, S1
   84:  BNE       S3, R0, .oA0
   88:  NOP
   8C:  BNE       S0, R0, .oA0
   90:  COPY      A0, S4
   94:  LW        A1, 0 (S2)
   98:  BEQ       R0, R0, .oC8
   9C:  COPY      A2, V0
        .oA0
   A0:  MTC1      S3, F12
   A4:  NOP
   A8:  CVT.S.W   F12, F12
   AC:  MTC1      S0, F14
   B0:  NOP
   B4:  JAL       $Function_80218758
   B8:  CVT.S.W   F14, F14
   BC:  COPY      A0, S4
   C0:  LW        A1, 0 (S2)
   C4:  ADDIU     A2, V0, FFA6
        .oC8
   C8:  JAL       ~Func:set_variable
   CC:  NOP
   D0:  LI        V0, 2
   D4:  LW        RA, 24 (SP)
   D8:  LW        S4, 20 (SP)
   DC:  LW        S3, 1C (SP)
   E0:  LW        S2, 18 (SP)
   E4:  LW        S1, 14 (SP)
   E8:  LW        S0, 10 (SP)
   EC:  JR        RA
   F0:  ADDIU     SP, SP, 28
}

PADDING: 802189D8 to 802189E0 (005ECE68 to 005ECE70)
00000000 00000000

#new:Function $Function_802189E0
{
    0:  ADDIU     SP, SP, FFD8
    4:  SW        S1, 14 (SP)
    8:  COPY      S1, A0
    C:  SW        RA, 20 (SP)
   10:  SW        S3, 1C (SP)
   14:  SW        S2, 18 (SP)
   18:  SW        S0, 10 (SP)
   1C:  LW        S0, C (S1)
   20:  LW        A1, 0 (S0)
   24:  JAL       ~Func:get_variable
   28:  ADDIU     S0, S0, 4
   2C:  LW        A1, 0 (S0)
   30:  ADDIU     S0, S0, 4
   34:  COPY      A0, S1
   38:  JAL       ~Func:get_variable
   3C:  COPY      S3, V0
   40:  LW        A1, 0 (S0)
   44:  ADDIU     S0, S0, 4
   48:  COPY      A0, S1
   4C:  JAL       ~Func:get_variable
   50:  COPY      S2, V0
   54:  COPY      A0, S1
   58:  LW        A1, 0 (S0)
   5C:  JAL       ~Func:get_variable
   60:  COPY      S0, V0
   64:  LW        A0, 148 (S1)
   68:  JAL       ~Func:get_actor
   6C:  COPY      S1, V0
   70:  COPY      V1, V0
   74:  LW        V0, 8 (V1)
   78:  LBU       V0, 24 (V0)
   7C:  LW        A0, 8 (V1)
   80:  SUBU      S3, S3, V0
   84:  SB        S3, 194 (V1)
   88:  LBU       V0, 25 (A0)
   8C:  SUBU      S2, S2, V0
   90:  SB        S2, 195 (V1)
   94:  LBU       V0, 26 (A0)
   98:  SUBU      S0, S0, V0
   9C:  SB        S0, 196 (V1)
   A0:  LBU       A0, 27 (A0)
   A4:  SUBU      S1, S1, A0
   A8:  SB        S1, 197 (V1)
   AC:  LW        RA, 20 (SP)
   B0:  LW        S3, 1C (SP)
   B4:  LW        S2, 18 (SP)
   B8:  LW        S1, 14 (SP)
   BC:  LW        S0, 10 (SP)
   C0:  LI        V0, 2
   C4:  JR        RA
   C8:  ADDIU     SP, SP, 28
}

PADDING: 80218AAC to 80218AB0 (005ECF3C to 005ECF40)
00000000

#new:Function $Function_80218AB0
{
    0:  ADDIU     SP, SP, FFD8
    4:  SW        S1, 14 (SP)
    8:  COPY      S1, A0
    C:  SW        RA, 20 (SP)
   10:  SW        S3, 1C (SP)
   14:  SW        S2, 18 (SP)
   18:  SW        S0, 10 (SP)
   1C:  LW        S0, C (S1)
   20:  LW        A1, 0 (S0)
   24:  JAL       ~Func:get_variable
   28:  ADDIU     S0, S0, 4
   2C:  LW        A1, 0 (S0)
   30:  ADDIU     S0, S0, 4
   34:  COPY      A0, S1
   38:  JAL       ~Func:get_variable
   3C:  COPY      S3, V0
   40:  LW        A1, 0 (S0)
   44:  ADDIU     S0, S0, 4
   48:  COPY      A0, S1
   4C:  JAL       ~Func:get_variable
   50:  COPY      S2, V0
   54:  COPY      A0, S1
   58:  LW        A1, 0 (S0)
   5C:  JAL       ~Func:get_variable
   60:  COPY      S0, V0
   64:  LW        A0, 148 (S1)
   68:  JAL       ~Func:get_actor
   6C:  COPY      S1, V0
   70:  COPY      V1, V0
   74:  LW        V0, 8 (V1)
   78:  LBU       V0, 24 (V0)
   7C:  LW        A0, 8 (V1)
   80:  SUBU      S3, S3, V0
   84:  SB        S3, 194 (V1)
   88:  LBU       V0, 25 (A0)
   8C:  SUBU      S2, S2, V0
   90:  SB        S2, 195 (V1)
   94:  LBU       V0, 26 (A0)
   98:  SUBU      S0, S0, V0
   9C:  SB        S0, 196 (V1)
   A0:  LBU       A0, 27 (A0)
   A4:  SUBU      S1, S1, A0
   A8:  SB        S1, 197 (V1)
   AC:  LW        RA, 20 (SP)
   B0:  LW        S3, 1C (SP)
   B4:  LW        S2, 18 (SP)
   B8:  LW        S1, 14 (SP)
   BC:  LW        S0, 10 (SP)
   C0:  LI        V0, 2
   C4:  JR        RA
   C8:  ADDIU     SP, SP, 28
}

PADDING: 80218B7C to 80218B80 (005ED00C to 005ED010)
00000000

#new:Function $Function_80218B80
{
    0:  ADDIU     SP, SP, FFB0
    4:  SW        S4, 20 (SP)
    8:  COPY      S4, A0
    C:  SW        RA, 28 (SP)
   10:  SW        S5, 24 (SP)
   14:  SW        S3, 1C (SP)
   18:  SW        S2, 18 (SP)
   1C:  SW        S1, 14 (SP)
   20:  SW        S0, 10 (SP)
   24:  SDC1      F26, 48 (SP)
   28:  SDC1      F24, 40 (SP)
   2C:  SDC1      F22, 38 (SP)
   30:  SDC1      F20, 30 (SP)
   34:  LW        V0, C (S4)
   38:  JAL       ~Func:get_variable
   3C:  LW        A1, 0 (V0)
   40:  JAL       ~Func:get_model_list_index_from_tree_index
   44:  COPY      A0, V0
   48:  JAL       ~Func:get_model_from_list_index
   4C:  COPY      A0, V0
   50:  LA        S2, 800DC070
   58:  SW        R0, 8C (S4)
   5C:  LW        S0, D8 (S2)
   60:  BEQ       S0, R0, .o154
   64:  COPY      S1, V0
   68:  LWC1      F2, 144 (S0)
   6C:  LWC1      F0, 98 (S1)
   70:  SUB.S     F2, F2, F0
   74:  MUL.S     F6, F2, F2
   78:  NOP
   7C:  LWC1      F0, A0 (S1)
   80:  LWC1      F2, 14C (S0)
   84:  SUB.S     F2, F2, F0
   88:  MUL.S     F4, F2, F2
   8C:  NOP
   90:  LBU       V0, 191 (S0)
   94:  LWC1      F2, 148 (S0)
   98:  MTC1      V0, F0
   9C:  NOP
   A0:  CVT.S.W   F0, F0
   A4:  ADD.S     F2, F2, F0
   A8:  LIF       F0, 1.5
   B0:  NOP
   B4:  SUB.S     F2, F2, F0
   B8:  ADD.S     F12, F6, F4
   BC:  LWC1      F0, 9C (S1)
   C0:  SUB.S     F20, F2, F0
   C4:  SQRT.S    F2, F12
   C8:  C.EQ.S    F2, F2
   CC:  NOP
   D0:  BC1T      .oE4
   D4:  NOP
   D8:  JAL       ~Func:sqrtf
   DC:  NOP
   E0:  MOV.S     F2, F0
        .oE4
   E4:  MTC1      R0, F0
   E8:  NOP
   EC:  C.LT.S    F0, F20
   F0:  NOP
   F4:  BC1F      .o154
   F8:  MOV.S     F4, F2
   FC:  LBU       V0, 191 (S0)
  100:  MTC1      V0, F0
  104:  NOP
  108:  CVT.S.W   F0, F0
  10C:  C.LT.S    F20, F0
  110:  NOP
  114:  BC1F      .o154
  118:  NOP
  11C:  LBU       V0, 190 (S0)
  120:  LIF       F2, 0.5
  128:  MTC1      V0, F0
  12C:  NOP
  130:  CVT.S.W   F0, F0
  134:  MUL.S     F0, F0, F2
  138:  NOP
  13C:  C.LT.S    F4, F0
  140:  NOP
  144:  BC1F      .o154
  148:  LI        V0, 1
  14C:  BEQ       R0, R0, .o45C
  150:  SW        V0, 8C (S4)
        .o154
  154:  LW        S0, DC (S2)
  158:  BEQ       S0, R0, .o260
  15C:  CLEAR     S3
  160:  LWC1      F2, 144 (S0)
  164:  LWC1      F0, 98 (S1)
  168:  SUB.S     F2, F2, F0
  16C:  MUL.S     F6, F2, F2
  170:  NOP
  174:  LWC1      F0, A0 (S1)
  178:  LWC1      F2, 14C (S0)
  17C:  SUB.S     F2, F2, F0
  180:  MUL.S     F4, F2, F2
  184:  NOP
  188:  LBU       V0, 191 (S0)
  18C:  LWC1      F2, 148 (S0)
  190:  MTC1      V0, F0
  194:  NOP
  198:  CVT.S.W   F0, F0
  19C:  ADD.S     F2, F2, F0
  1A0:  LIF       F0, 1.5
  1A8:  NOP
  1AC:  SUB.S     F2, F2, F0
  1B0:  ADD.S     F12, F6, F4
  1B4:  LWC1      F0, 9C (S1)
  1B8:  SUB.S     F20, F2, F0
  1BC:  SQRT.S    F2, F12
  1C0:  C.EQ.S    F2, F2
  1C4:  NOP
  1C8:  BC1T      .o1DC
  1CC:  NOP
  1D0:  JAL       ~Func:sqrtf
  1D4:  NOP
  1D8:  MOV.S     F2, F0
        .o1DC
  1DC:  MTC1      R0, F0
  1E0:  NOP
  1E4:  C.LT.S    F0, F20
  1E8:  NOP
  1EC:  BC1F      .o25C
  1F0:  MOV.S     F4, F2
  1F4:  LBU       V0, 191 (S0)
  1F8:  MTC1      V0, F0
  1FC:  NOP
  200:  CVT.S.W   F0, F0
  204:  C.LT.S    F20, F0
  208:  NOP
  20C:  BC1F      .o260
  210:  CLEAR     S3
  214:  LBU       V0, 190 (S0)
  218:  LIF       F2, 0.5
  220:  MTC1      V0, F0
  224:  NOP
  228:  CVT.S.W   F0, F0
  22C:  MUL.S     F0, F0, F2
  230:  NOP
  234:  C.LT.S    F4, F0
  238:  NOP
  23C:  BC1F      .o260
  240:  LI        V0, 1
  244:  BEQ       R0, R0, .o45C
  248:  SW        V0, 8C (S4)
        .o24C
  24C:  BEQ       R0, R0, .o45C
  250:  SW        V0, 8C (S4)
        .o254
  254:  BEQ       R0, R0, .o45C
  258:  SW        V0, 8C (S4)
        .o25C
  25C:  CLEAR     S3
        .o260
  260:  LUI       S5, 10
  264:  LIF       F26, 1.5
  26C:  MTC1      R0, F24
  270:  LIF       F22, 0.5
        .o278
  278:  LW        S0, E0 (S2)
  27C:  BEQL      S0, R0, .o450
  280:  ADDIU     S3, S3, 1
  284:  LW        V0, 0 (S0)
  288:  ANDI      V0, V0, 1
  28C:  BNEL      V0, R0, .o450
  290:  ADDIU     S3, S3, 1
  294:  LWC1      F2, 144 (S0)
  298:  LWC1      F0, 98 (S1)
  29C:  SUB.S     F2, F2, F0
  2A0:  MUL.S     F6, F2, F2
  2A4:  NOP
  2A8:  LWC1      F0, A0 (S1)
  2AC:  LWC1      F2, 14C (S0)
  2B0:  SUB.S     F2, F2, F0
  2B4:  MUL.S     F4, F2, F2
  2B8:  NOP
  2BC:  LBU       V0, 191 (S0)
  2C0:  LWC1      F2, 148 (S0)
  2C4:  MTC1      V0, F0
  2C8:  NOP
  2CC:  CVT.S.W   F0, F0
  2D0:  ADD.S     F2, F2, F0
  2D4:  SUB.S     F2, F2, F26
  2D8:  ADD.S     F12, F6, F4
  2DC:  LWC1      F0, 9C (S1)
  2E0:  SUB.S     F20, F2, F0
  2E4:  SQRT.S    F0, F12
  2E8:  C.EQ.S    F0, F0
  2EC:  NOP
  2F0:  BC1T      .o300
  2F4:  NOP
  2F8:  JAL       ~Func:sqrtf
  2FC:  NOP
        .o300
  300:  C.LT.S    F24, F20
  304:  NOP
  308:  BC1F      .o358
  30C:  MOV.S     F4, F0
  310:  LBU       V0, 191 (S0)
  314:  MTC1      V0, F0
  318:  NOP
  31C:  CVT.S.W   F0, F0
  320:  C.LT.S    F20, F0
  324:  NOP
  328:  BC1F      .o358
  32C:  NOP
  330:  LBU       V0, 190 (S0)
  334:  MTC1      V0, F0
  338:  NOP
  33C:  CVT.S.W   F0, F0
  340:  MUL.S     F0, F0, F22
  344:  NOP
  348:  C.LT.S    F4, F0
  34C:  NOP
  350:  BC1T      .o24C
  354:  LI        V0, 1
        .o358
  358:  LW        S0, 1F4 (S0)
  35C:  BEQL      S0, R0, .o450
  360:  ADDIU     S3, S3, 1
        .o364
  364:  LW        V1, 0 (S0)
  368:  ANDI      V0, V1, 1
  36C:  BNE       V0, R0, .o440
  370:  AND       V0, V1, S5
  374:  BEQ       V0, R0, .o440
  378:  NOP
  37C:  LWC1      F2, 58 (S0)
  380:  LWC1      F0, 98 (S1)
  384:  SUB.S     F2, F2, F0
  388:  MUL.S     F6, F2, F2
  38C:  NOP
  390:  LWC1      F0, A0 (S1)
  394:  LWC1      F2, 60 (S0)
  398:  SUB.S     F2, F2, F0
  39C:  MUL.S     F4, F2, F2
  3A0:  NOP
  3A4:  LBU       V0, 73 (S0)
  3A8:  LWC1      F0, 5C (S0)
  3AC:  MTC1      V0, F2
  3B0:  NOP
  3B4:  CVT.S.W   F2, F2
  3B8:  ADD.S     F0, F0, F2
  3BC:  SUB.S     F0, F0, F26
  3C0:  ADD.S     F12, F6, F4
  3C4:  LWC1      F2, 9C (S1)
  3C8:  SUB.S     F20, F0, F2
  3CC:  SQRT.S    F0, F12
  3D0:  C.EQ.S    F0, F0
  3D4:  NOP
  3D8:  BC1T      .o3E8
  3DC:  NOP
  3E0:  JAL       ~Func:sqrtf
  3E4:  NOP
        .o3E8
  3E8:  C.LT.S    F24, F20
  3EC:  NOP
  3F0:  BC1F      .o440
  3F4:  MOV.S     F4, F0
  3F8:  LBU       V0, 73 (S0)
  3FC:  MTC1      V0, F0
  400:  NOP
  404:  CVT.S.W   F0, F0
  408:  C.LT.S    F20, F0
  40C:  NOP
  410:  BC1F      .o440
  414:  NOP
  418:  LBU       V0, 72 (S0)
  41C:  MTC1      V0, F0
  420:  NOP
  424:  CVT.S.W   F0, F0
  428:  MUL.S     F0, F0, F22
  42C:  NOP
  430:  C.LT.S    F4, F0
  434:  NOP
  438:  BC1T      .o254
  43C:  LI        V0, 1
        .o440
  440:  LW        S0, C (S0)
  444:  BNE       S0, R0, .o364
  448:  NOP
  44C:  ADDIU     S3, S3, 1
        .o450
  450:  SLTI      V0, S3, 18
  454:  BNE       V0, R0, .o278
  458:  ADDIU     S2, S2, 4
        .o45C
  45C:  LI        V0, 2
  460:  LW        RA, 28 (SP)
  464:  LW        S5, 24 (SP)
  468:  LW        S4, 20 (SP)
  46C:  LW        S3, 1C (SP)
  470:  LW        S2, 18 (SP)
  474:  LW        S1, 14 (SP)
  478:  LW        S0, 10 (SP)
  47C:  LDC1      F26, 48 (SP)
  480:  LDC1      F24, 40 (SP)
  484:  LDC1      F22, 38 (SP)
  488:  LDC1      F20, 30 (SP)
  48C:  JR        RA
  490:  ADDIU     SP, SP, 50
}

PADDING: 80219014 to 80219020 (005ED4A4 to 005ED4B0)
00000000 00000000 00000000

#new:Function $Function_80219020
{
    0:  ADDIU     SP, SP, FFB0
    4:  SW        S4, 20 (SP)
    8:  COPY      S4, A0
    C:  SW        RA, 28 (SP)
   10:  SW        S5, 24 (SP)
   14:  SW        S3, 1C (SP)
   18:  SW        S2, 18 (SP)
   1C:  SW        S1, 14 (SP)
   20:  SW        S0, 10 (SP)
   24:  SDC1      F26, 48 (SP)
   28:  SDC1      F24, 40 (SP)
   2C:  SDC1      F22, 38 (SP)
   30:  SDC1      F20, 30 (SP)
   34:  LW        V0, C (S4)
   38:  JAL       ~Func:get_variable
   3C:  LW        A1, 0 (V0)
   40:  JAL       ~Func:get_model_list_index_from_tree_index
   44:  COPY      A0, V0
   48:  JAL       ~Func:get_model_from_list_index
   4C:  COPY      A0, V0
   50:  LA        S2, 800DC070
   58:  SW        R0, 8C (S4)
   5C:  LW        S0, D8 (S2)
   60:  BEQ       S0, R0, .o154
   64:  COPY      S1, V0
   68:  LWC1      F2, 144 (S0)
   6C:  LWC1      F0, 98 (S1)
   70:  SUB.S     F2, F2, F0
   74:  MUL.S     F6, F2, F2
   78:  NOP
   7C:  LWC1      F0, A0 (S1)
   80:  LWC1      F2, 14C (S0)
   84:  SUB.S     F2, F2, F0
   88:  MUL.S     F4, F2, F2
   8C:  NOP
   90:  LBU       V0, 191 (S0)
   94:  LWC1      F2, 148 (S0)
   98:  MTC1      V0, F0
   9C:  NOP
   A0:  CVT.S.W   F0, F0
   A4:  ADD.S     F2, F2, F0
   A8:  LIF       F0, 1.5
   B0:  NOP
   B4:  SUB.S     F2, F2, F0
   B8:  ADD.S     F12, F6, F4
   BC:  LWC1      F0, 9C (S1)
   C0:  SUB.S     F20, F2, F0
   C4:  SQRT.S    F2, F12
   C8:  C.EQ.S    F2, F2
   CC:  NOP
   D0:  BC1T      .oE4
   D4:  NOP
   D8:  JAL       ~Func:sqrtf
   DC:  NOP
   E0:  MOV.S     F2, F0
        .oE4
   E4:  MTC1      R0, F0
   E8:  NOP
   EC:  C.LT.S    F0, F20
   F0:  NOP
   F4:  BC1F      .o154
   F8:  MOV.S     F4, F2
   FC:  LBU       V0, 191 (S0)
  100:  MTC1      V0, F0
  104:  NOP
  108:  CVT.S.W   F0, F0
  10C:  C.LT.S    F20, F0
  110:  NOP
  114:  BC1F      .o154
  118:  NOP
  11C:  LBU       V0, 190 (S0)
  120:  LIF       F2, 0.5
  128:  MTC1      V0, F0
  12C:  NOP
  130:  CVT.S.W   F0, F0
  134:  MUL.S     F0, F0, F2
  138:  NOP
  13C:  C.LT.S    F4, F0
  140:  NOP
  144:  BC1F      .o154
  148:  LI        V0, 1
  14C:  BEQ       R0, R0, .o45C
  150:  SW        V0, 8C (S4)
        .o154
  154:  LW        S0, DC (S2)
  158:  BEQ       S0, R0, .o260
  15C:  CLEAR     S3
  160:  LWC1      F2, 144 (S0)
  164:  LWC1      F0, 98 (S1)
  168:  SUB.S     F2, F2, F0
  16C:  MUL.S     F6, F2, F2
  170:  NOP
  174:  LWC1      F0, A0 (S1)
  178:  LWC1      F2, 14C (S0)
  17C:  SUB.S     F2, F2, F0
  180:  MUL.S     F4, F2, F2
  184:  NOP
  188:  LBU       V0, 191 (S0)
  18C:  LWC1      F2, 148 (S0)
  190:  MTC1      V0, F0
  194:  NOP
  198:  CVT.S.W   F0, F0
  19C:  ADD.S     F2, F2, F0
  1A0:  LIF       F0, 1.5
  1A8:  NOP
  1AC:  SUB.S     F2, F2, F0
  1B0:  ADD.S     F12, F6, F4
  1B4:  LWC1      F0, 9C (S1)
  1B8:  SUB.S     F20, F2, F0
  1BC:  SQRT.S    F2, F12
  1C0:  C.EQ.S    F2, F2
  1C4:  NOP
  1C8:  BC1T      .o1DC
  1CC:  NOP
  1D0:  JAL       ~Func:sqrtf
  1D4:  NOP
  1D8:  MOV.S     F2, F0
        .o1DC
  1DC:  MTC1      R0, F0
  1E0:  NOP
  1E4:  C.LT.S    F0, F20
  1E8:  NOP
  1EC:  BC1F      .o25C
  1F0:  MOV.S     F4, F2
  1F4:  LBU       V0, 191 (S0)
  1F8:  MTC1      V0, F0
  1FC:  NOP
  200:  CVT.S.W   F0, F0
  204:  C.LT.S    F20, F0
  208:  NOP
  20C:  BC1F      .o260
  210:  CLEAR     S3
  214:  LBU       V0, 190 (S0)
  218:  LIF       F2, 0.5
  220:  MTC1      V0, F0
  224:  NOP
  228:  CVT.S.W   F0, F0
  22C:  MUL.S     F0, F0, F2
  230:  NOP
  234:  C.LT.S    F4, F0
  238:  NOP
  23C:  BC1F      .o260
  240:  LI        V0, 1
  244:  BEQ       R0, R0, .o45C
  248:  SW        V0, 8C (S4)
        .o24C
  24C:  BEQ       R0, R0, .o45C
  250:  SW        V0, 8C (S4)
        .o254
  254:  BEQ       R0, R0, .o45C
  258:  SW        V0, 8C (S4)
        .o25C
  25C:  CLEAR     S3
        .o260
  260:  LUI       S5, 10
  264:  LIF       F26, 1.5
  26C:  MTC1      R0, F24
  270:  LIF       F22, 0.5
        .o278
  278:  LW        S0, E0 (S2)
  27C:  BEQL      S0, R0, .o450
  280:  ADDIU     S3, S3, 1
  284:  LW        V0, 0 (S0)
  288:  ANDI      V0, V0, 1
  28C:  BNEL      V0, R0, .o450
  290:  ADDIU     S3, S3, 1
  294:  LWC1      F2, 144 (S0)
  298:  LWC1      F0, 98 (S1)
  29C:  SUB.S     F2, F2, F0
  2A0:  MUL.S     F6, F2, F2
  2A4:  NOP
  2A8:  LWC1      F0, A0 (S1)
  2AC:  LWC1      F2, 14C (S0)
  2B0:  SUB.S     F2, F2, F0
  2B4:  MUL.S     F4, F2, F2
  2B8:  NOP
  2BC:  LBU       V0, 191 (S0)
  2C0:  LWC1      F2, 148 (S0)
  2C4:  MTC1      V0, F0
  2C8:  NOP
  2CC:  CVT.S.W   F0, F0
  2D0:  ADD.S     F2, F2, F0
  2D4:  SUB.S     F2, F2, F26
  2D8:  ADD.S     F12, F6, F4
  2DC:  LWC1      F0, 9C (S1)
  2E0:  SUB.S     F20, F2, F0
  2E4:  SQRT.S    F0, F12
  2E8:  C.EQ.S    F0, F0
  2EC:  NOP
  2F0:  BC1T      .o300
  2F4:  NOP
  2F8:  JAL       ~Func:sqrtf
  2FC:  NOP
        .o300
  300:  C.LT.S    F24, F20
  304:  NOP
  308:  BC1F      .o358
  30C:  MOV.S     F4, F0
  310:  LBU       V0, 191 (S0)
  314:  MTC1      V0, F0
  318:  NOP
  31C:  CVT.S.W   F0, F0
  320:  C.LT.S    F20, F0
  324:  NOP
  328:  BC1F      .o358
  32C:  NOP
  330:  LBU       V0, 190 (S0)
  334:  MTC1      V0, F0
  338:  NOP
  33C:  CVT.S.W   F0, F0
  340:  MUL.S     F0, F0, F22
  344:  NOP
  348:  C.LT.S    F4, F0
  34C:  NOP
  350:  BC1T      .o24C
  354:  LI        V0, 1
        .o358
  358:  LW        S0, 1F4 (S0)
  35C:  BEQL      S0, R0, .o450
  360:  ADDIU     S3, S3, 1
        .o364
  364:  LW        V1, 0 (S0)
  368:  ANDI      V0, V1, 1
  36C:  BNE       V0, R0, .o440
  370:  AND       V0, V1, S5
  374:  BEQ       V0, R0, .o440
  378:  NOP
  37C:  LWC1      F2, 58 (S0)
  380:  LWC1      F0, 98 (S1)
  384:  SUB.S     F2, F2, F0
  388:  MUL.S     F6, F2, F2
  38C:  NOP
  390:  LWC1      F0, A0 (S1)
  394:  LWC1      F2, 60 (S0)
  398:  SUB.S     F2, F2, F0
  39C:  MUL.S     F4, F2, F2
  3A0:  NOP
  3A4:  LBU       V0, 73 (S0)
  3A8:  LWC1      F0, 5C (S0)
  3AC:  MTC1      V0, F2
  3B0:  NOP
  3B4:  CVT.S.W   F2, F2
  3B8:  ADD.S     F0, F0, F2
  3BC:  SUB.S     F0, F0, F26
  3C0:  ADD.S     F12, F6, F4
  3C4:  LWC1      F2, 9C (S1)
  3C8:  SUB.S     F20, F0, F2
  3CC:  SQRT.S    F0, F12
  3D0:  C.EQ.S    F0, F0
  3D4:  NOP
  3D8:  BC1T      .o3E8
  3DC:  NOP
  3E0:  JAL       ~Func:sqrtf
  3E4:  NOP
        .o3E8
  3E8:  C.LT.S    F24, F20
  3EC:  NOP
  3F0:  BC1F      .o440
  3F4:  MOV.S     F4, F0
  3F8:  LBU       V0, 73 (S0)
  3FC:  MTC1      V0, F0
  400:  NOP
  404:  CVT.S.W   F0, F0
  408:  C.LT.S    F20, F0
  40C:  NOP
  410:  BC1F      .o440
  414:  NOP
  418:  LBU       V0, 72 (S0)
  41C:  MTC1      V0, F0
  420:  NOP
  424:  CVT.S.W   F0, F0
  428:  MUL.S     F0, F0, F22
  42C:  NOP
  430:  C.LT.S    F4, F0
  434:  NOP
  438:  BC1T      .o254
  43C:  LI        V0, 1
        .o440
  440:  LW        S0, C (S0)
  444:  BNE       S0, R0, .o364
  448:  NOP
  44C:  ADDIU     S3, S3, 1
        .o450
  450:  SLTI      V0, S3, 18
  454:  BNE       V0, R0, .o278
  458:  ADDIU     S2, S2, 4
        .o45C
  45C:  LI        V0, 2
  460:  LW        RA, 28 (SP)
  464:  LW        S5, 24 (SP)
  468:  LW        S4, 20 (SP)
  46C:  LW        S3, 1C (SP)
  470:  LW        S2, 18 (SP)
  474:  LW        S1, 14 (SP)
  478:  LW        S0, 10 (SP)
  47C:  LDC1      F26, 48 (SP)
  480:  LDC1      F24, 40 (SP)
  484:  LDC1      F22, 38 (SP)
  488:  LDC1      F20, 30 (SP)
  48C:  JR        RA
  490:  ADDIU     SP, SP, 50
}

PADDING: 802194B4 to 802194C0 (005ED944 to 005ED950)
00000000 00000000 00000000

#new:Function $Function_802194C0
{
    0:  ADDIU     SP, SP, FFB0
    4:  SW        S4, 20 (SP)
    8:  COPY      S4, A0
    C:  SW        RA, 28 (SP)
   10:  SW        S5, 24 (SP)
   14:  SW        S3, 1C (SP)
   18:  SW        S2, 18 (SP)
   1C:  SW        S1, 14 (SP)
   20:  SW        S0, 10 (SP)
   24:  SDC1      F26, 48 (SP)
   28:  SDC1      F24, 40 (SP)
   2C:  SDC1      F22, 38 (SP)
   30:  SDC1      F20, 30 (SP)
   34:  LW        V0, C (S4)
   38:  JAL       ~Func:get_variable
   3C:  LW        A1, 0 (V0)
   40:  JAL       ~Func:get_model_list_index_from_tree_index
   44:  COPY      A0, V0
   48:  JAL       ~Func:get_model_from_list_index
   4C:  COPY      A0, V0
   50:  LA        S2, 800DC070
   58:  SW        R0, 8C (S4)
   5C:  LW        S0, D8 (S2)
   60:  BEQ       S0, R0, .o154
   64:  COPY      S1, V0
   68:  LWC1      F2, 144 (S0)
   6C:  LWC1      F0, 98 (S1)
   70:  SUB.S     F2, F2, F0
   74:  MUL.S     F6, F2, F2
   78:  NOP
   7C:  LWC1      F0, A0 (S1)
   80:  LWC1      F2, 14C (S0)
   84:  SUB.S     F2, F2, F0
   88:  MUL.S     F4, F2, F2
   8C:  NOP
   90:  LBU       V0, 191 (S0)
   94:  LWC1      F2, 148 (S0)
   98:  MTC1      V0, F0
   9C:  NOP
   A0:  CVT.S.W   F0, F0
   A4:  ADD.S     F2, F2, F0
   A8:  LIF       F0, 1.5
   B0:  NOP
   B4:  SUB.S     F2, F2, F0
   B8:  ADD.S     F12, F6, F4
   BC:  LWC1      F0, 9C (S1)
   C0:  SUB.S     F20, F2, F0
   C4:  SQRT.S    F2, F12
   C8:  C.EQ.S    F2, F2
   CC:  NOP
   D0:  BC1T      .oE4
   D4:  NOP
   D8:  JAL       ~Func:sqrtf
   DC:  NOP
   E0:  MOV.S     F2, F0
        .oE4
   E4:  MTC1      R0, F0
   E8:  NOP
   EC:  C.LT.S    F0, F20
   F0:  NOP
   F4:  BC1F      .o154
   F8:  MOV.S     F4, F2
   FC:  LBU       V0, 191 (S0)
  100:  MTC1      V0, F0
  104:  NOP
  108:  CVT.S.W   F0, F0
  10C:  C.LT.S    F20, F0
  110:  NOP
  114:  BC1F      .o154
  118:  NOP
  11C:  LBU       V0, 190 (S0)
  120:  LIF       F2, 0.5
  128:  MTC1      V0, F0
  12C:  NOP
  130:  CVT.S.W   F0, F0
  134:  MUL.S     F0, F0, F2
  138:  NOP
  13C:  C.LT.S    F4, F0
  140:  NOP
  144:  BC1F      .o154
  148:  LI        V0, 1
  14C:  BEQ       R0, R0, .o45C
  150:  SW        V0, 8C (S4)
        .o154
  154:  LW        S0, DC (S2)
  158:  BEQ       S0, R0, .o260
  15C:  CLEAR     S3
  160:  LWC1      F2, 144 (S0)
  164:  LWC1      F0, 98 (S1)
  168:  SUB.S     F2, F2, F0
  16C:  MUL.S     F6, F2, F2
  170:  NOP
  174:  LWC1      F0, A0 (S1)
  178:  LWC1      F2, 14C (S0)
  17C:  SUB.S     F2, F2, F0
  180:  MUL.S     F4, F2, F2
  184:  NOP
  188:  LBU       V0, 191 (S0)
  18C:  LWC1      F2, 148 (S0)
  190:  MTC1      V0, F0
  194:  NOP
  198:  CVT.S.W   F0, F0
  19C:  ADD.S     F2, F2, F0
  1A0:  LIF       F0, 1.5
  1A8:  NOP
  1AC:  SUB.S     F2, F2, F0
  1B0:  ADD.S     F12, F6, F4
  1B4:  LWC1      F0, 9C (S1)
  1B8:  SUB.S     F20, F2, F0
  1BC:  SQRT.S    F2, F12
  1C0:  C.EQ.S    F2, F2
  1C4:  NOP
  1C8:  BC1T      .o1DC
  1CC:  NOP
  1D0:  JAL       ~Func:sqrtf
  1D4:  NOP
  1D8:  MOV.S     F2, F0
        .o1DC
  1DC:  MTC1      R0, F0
  1E0:  NOP
  1E4:  C.LT.S    F0, F20
  1E8:  NOP
  1EC:  BC1F      .o25C
  1F0:  MOV.S     F4, F2
  1F4:  LBU       V0, 191 (S0)
  1F8:  MTC1      V0, F0
  1FC:  NOP
  200:  CVT.S.W   F0, F0
  204:  C.LT.S    F20, F0
  208:  NOP
  20C:  BC1F      .o260
  210:  CLEAR     S3
  214:  LBU       V0, 190 (S0)
  218:  LIF       F2, 0.5
  220:  MTC1      V0, F0
  224:  NOP
  228:  CVT.S.W   F0, F0
  22C:  MUL.S     F0, F0, F2
  230:  NOP
  234:  C.LT.S    F4, F0
  238:  NOP
  23C:  BC1F      .o260
  240:  LI        V0, 1
  244:  BEQ       R0, R0, .o45C
  248:  SW        V0, 8C (S4)
        .o24C
  24C:  BEQ       R0, R0, .o45C
  250:  SW        V0, 8C (S4)
        .o254
  254:  BEQ       R0, R0, .o45C
  258:  SW        V0, 8C (S4)
        .o25C
  25C:  CLEAR     S3
        .o260
  260:  LUI       S5, 10
  264:  LIF       F26, 1.5
  26C:  MTC1      R0, F24
  270:  LIF       F22, 0.5
        .o278
  278:  LW        S0, E0 (S2)
  27C:  BEQL      S0, R0, .o450
  280:  ADDIU     S3, S3, 1
  284:  LW        V0, 0 (S0)
  288:  ANDI      V0, V0, 1
  28C:  BNEL      V0, R0, .o450
  290:  ADDIU     S3, S3, 1
  294:  LWC1      F2, 144 (S0)
  298:  LWC1      F0, 98 (S1)
  29C:  SUB.S     F2, F2, F0
  2A0:  MUL.S     F6, F2, F2
  2A4:  NOP
  2A8:  LWC1      F0, A0 (S1)
  2AC:  LWC1      F2, 14C (S0)
  2B0:  SUB.S     F2, F2, F0
  2B4:  MUL.S     F4, F2, F2
  2B8:  NOP
  2BC:  LBU       V0, 191 (S0)
  2C0:  LWC1      F2, 148 (S0)
  2C4:  MTC1      V0, F0
  2C8:  NOP
  2CC:  CVT.S.W   F0, F0
  2D0:  ADD.S     F2, F2, F0
  2D4:  SUB.S     F2, F2, F26
  2D8:  ADD.S     F12, F6, F4
  2DC:  LWC1      F0, 9C (S1)
  2E0:  SUB.S     F20, F2, F0
  2E4:  SQRT.S    F0, F12
  2E8:  C.EQ.S    F0, F0
  2EC:  NOP
  2F0:  BC1T      .o300
  2F4:  NOP
  2F8:  JAL       ~Func:sqrtf
  2FC:  NOP
        .o300
  300:  C.LT.S    F24, F20
  304:  NOP
  308:  BC1F      .o358
  30C:  MOV.S     F4, F0
  310:  LBU       V0, 191 (S0)
  314:  MTC1      V0, F0
  318:  NOP
  31C:  CVT.S.W   F0, F0
  320:  C.LT.S    F20, F0
  324:  NOP
  328:  BC1F      .o358
  32C:  NOP
  330:  LBU       V0, 190 (S0)
  334:  MTC1      V0, F0
  338:  NOP
  33C:  CVT.S.W   F0, F0
  340:  MUL.S     F0, F0, F22
  344:  NOP
  348:  C.LT.S    F4, F0
  34C:  NOP
  350:  BC1T      .o24C
  354:  LI        V0, 1
        .o358
  358:  LW        S0, 1F4 (S0)
  35C:  BEQL      S0, R0, .o450
  360:  ADDIU     S3, S3, 1
        .o364
  364:  LW        V1, 0 (S0)
  368:  ANDI      V0, V1, 1
  36C:  BNE       V0, R0, .o440
  370:  AND       V0, V1, S5
  374:  BEQ       V0, R0, .o440
  378:  NOP
  37C:  LWC1      F2, 58 (S0)
  380:  LWC1      F0, 98 (S1)
  384:  SUB.S     F2, F2, F0
  388:  MUL.S     F6, F2, F2
  38C:  NOP
  390:  LWC1      F0, A0 (S1)
  394:  LWC1      F2, 60 (S0)
  398:  SUB.S     F2, F2, F0
  39C:  MUL.S     F4, F2, F2
  3A0:  NOP
  3A4:  LBU       V0, 73 (S0)
  3A8:  LWC1      F0, 5C (S0)
  3AC:  MTC1      V0, F2
  3B0:  NOP
  3B4:  CVT.S.W   F2, F2
  3B8:  ADD.S     F0, F0, F2
  3BC:  SUB.S     F0, F0, F26
  3C0:  ADD.S     F12, F6, F4
  3C4:  LWC1      F2, 9C (S1)
  3C8:  SUB.S     F20, F0, F2
  3CC:  SQRT.S    F0, F12
  3D0:  C.EQ.S    F0, F0
  3D4:  NOP
  3D8:  BC1T      .o3E8
  3DC:  NOP
  3E0:  JAL       ~Func:sqrtf
  3E4:  NOP
        .o3E8
  3E8:  C.LT.S    F24, F20
  3EC:  NOP
  3F0:  BC1F      .o440
  3F4:  MOV.S     F4, F0
  3F8:  LBU       V0, 73 (S0)
  3FC:  MTC1      V0, F0
  400:  NOP
  404:  CVT.S.W   F0, F0
  408:  C.LT.S    F20, F0
  40C:  NOP
  410:  BC1F      .o440
  414:  NOP
  418:  LBU       V0, 72 (S0)
  41C:  MTC1      V0, F0
  420:  NOP
  424:  CVT.S.W   F0, F0
  428:  MUL.S     F0, F0, F22
  42C:  NOP
  430:  C.LT.S    F4, F0
  434:  NOP
  438:  BC1T      .o254
  43C:  LI        V0, 1
        .o440
  440:  LW        S0, C (S0)
  444:  BNE       S0, R0, .o364
  448:  NOP
  44C:  ADDIU     S3, S3, 1
        .o450
  450:  SLTI      V0, S3, 18
  454:  BNE       V0, R0, .o278
  458:  ADDIU     S2, S2, 4
        .o45C
  45C:  LI        V0, 2
  460:  LW        RA, 28 (SP)
  464:  LW        S5, 24 (SP)
  468:  LW        S4, 20 (SP)
  46C:  LW        S3, 1C (SP)
  470:  LW        S2, 18 (SP)
  474:  LW        S1, 14 (SP)
  478:  LW        S0, 10 (SP)
  47C:  LDC1      F26, 48 (SP)
  480:  LDC1      F24, 40 (SP)
  484:  LDC1      F22, 38 (SP)
  488:  LDC1      F20, 30 (SP)
  48C:  JR        RA
  490:  ADDIU     SP, SP, 50
}

PADDING: 80219954 to 80219960 (005EDDE4 to 005EDDF0)
00000000 00000000 00000000

% Origin: HEURISTIC
#new:Function $Function_80219960
{
    0:  ADDIU     SP, SP, FFA0
    4:  SW        S0, 20 (SP)
    8:  COPY      S0, A0
    C:  SW        RA, 28 (SP)
   10:  SW        S1, 24 (SP)
   14:  SDC1      F30, 58 (SP)
   18:  SDC1      F28, 50 (SP)
   1C:  SDC1      F26, 48 (SP)
   20:  SDC1      F24, 40 (SP)
   24:  SDC1      F22, 38 (SP)
   28:  SDC1      F20, 30 (SP)
   2C:  LW        V0, C (S0)
   30:  JAL       ~Func:get_variable
   34:  LW        A1, 0 (V0)
   38:  COPY      S1, V0
   3C:  LI        A0, 1
   40:  BEQ       S1, A0, .o100
   44:  SW        S1, 70 (S0)
   48:  SLTI      V0, S1, 2
   4C:  BEQ       V0, R0, .o64
   50:  LI        V0, 2
   54:  BEQ       S1, R0, .o7C
   58:  LI        V0, 8E
   5C:  BEQ       R0, R0, .o400
   60:  NOP
        .o64
   64:  BEQ       S1, V0, .o27C
   68:  LI        V0, 3
   6C:  BEQ       S1, V0, .oBC
   70:  LI        V1, 5B
   74:  BEQ       R0, R0, .o400
   78:  NOP
        .o7C
   7C:  LIF       F4, 142.0
   84:  LIF       F30, -118.0
   8C:  LI        V1, FF8A
   90:  SW        R0, 14 (SP)
   94:  SWC1      F4, 10 (SP)
   98:  SW        V0, 90 (S0)
   9C:  LI        V0, 2C
   A0:  SW        V0, 9C (S0)
   A4:  LI        V0, 3
   A8:  SW        R0, 94 (S0)
   AC:  SW        V1, 98 (S0)
   B0:  SW        V1, A0 (S0)
   B4:  BEQ       R0, R0, .oF0
   B8:  SW        V0, A4 (S0)
        .oBC
   BC:  LIF       F4, 91.0
   C4:  LIF       F30, -118.0
   CC:  LI        V0, FF8A
   D0:  SW        R0, 14 (SP)
   D4:  SWC1      F4, 10 (SP)
   D8:  SW        V1, 90 (S0)
   DC:  SW        R0, 94 (S0)
   E0:  SW        V0, 98 (S0)
   E4:  SW        V1, 9C (S0)
   E8:  SW        V0, A0 (S0)
   EC:  SW        S1, A4 (S0)
        .oF0
   F0:  SW        R0, A8 (S0)
   F4:  SW        R0, B0 (S0)
   F8:  BEQ       R0, R0, .o400
   FC:  SW        A0, 70 (S0)
        .o100
  100:  LW        V0, A8 (S0)
  104:  LW        V1, A4 (S0)
  108:  ADDU      V0, V0, V1
  10C:  SW        V0, A8 (S0)
  110:  SLTI      V0, V0, 2E
  114:  BNE       V0, R0, .o124
  118:  NOP
  11C:  LI        V0, 2D
  120:  SW        V0, A8 (S0)
        .o124
  124:  LWC1      F4, 90 (S0)
  128:  CVT.S.W   F4, F4
  12C:  SWC1      F4, 10 (SP)
  130:  LWC1      F4, 94 (S0)
  134:  CVT.S.W   F4, F4
  138:  SWC1      F4, 14 (SP)
  13C:  LWC1      F12, A8 (S0)
  140:  CVT.S.W   F12, F12
  144:  LIF       F26, 6.28318
  150:  LWC1      F30, 98 (S0)
  154:  CVT.S.W   F30, F30
  158:  MUL.S     F12, F12, F26
  15C:  NOP
  160:  LWC1      F28, 9C (S0)
  164:  CVT.S.W   F28, F28
  168:  LIF       F24, 360.0
  170:  LWC1      F4, A0 (S0)
  174:  CVT.S.W   F4, F4
  178:  SWC1      F4, 18 (SP)
  17C:  JAL       ~Func:sin_rad
  180:  DIV.S     F12, F12, F24
  184:  CVT.D.S   F0, F0
  188:  LIF       F23, 1.875
  190:  MTC1      R0, F22
  194:  LWC1      F4, 10 (SP)
  198:  SUB.D     F0, F22, F0
  19C:  CVT.D.S   F20, F4
  1A0:  MUL.D     F20, F20, F0
  1A4:  NOP
  1A8:  LWC1      F12, A8 (S0)
  1AC:  CVT.S.W   F12, F12
  1B0:  MUL.S     F12, F12, F26
  1B4:  NOP
  1B8:  JAL       ~Func:sin_rad
  1BC:  DIV.S     F12, F12, F24
  1C0:  MUL.S     F0, F28, F0
  1C4:  NOP
  1C8:  LW        V0, A8 (S0)
  1CC:  SLL       V0, V0, 1
  1D0:  MTC1      V0, F12
  1D4:  NOP
  1D8:  CVT.S.W   F12, F12
  1DC:  MUL.S     F12, F12, F26
  1E0:  NOP
  1E4:  CVT.D.S   F0, F0
  1E8:  ADD.D     F20, F20, F0
  1EC:  DIV.S     F12, F12, F24
  1F0:  CVT.S.D   F20, F20
  1F4:  JAL       ~Func:sin_rad
  1F8:  SWC1      F20, 10 (SP)
  1FC:  LWC1      F12, A8 (S0)
  200:  CVT.S.W   F12, F12
  204:  MUL.S     F12, F12, F26
  208:  NOP
  20C:  LIF       F2, 90.0
  214:  NOP
  218:  MUL.S     F0, F0, F2
  21C:  NOP
  220:  LWC1      F4, 14 (SP)
  224:  ADD.S     F4, F4, F0
  228:  DIV.S     F12, F12, F24
  22C:  JAL       ~Func:sin_rad
  230:  SWC1      F4, 14 (SP)
  234:  LWC1      F12, A8 (S0)
  238:  CVT.S.W   F12, F12
  23C:  MUL.S     F12, F12, F26
  240:  NOP
  244:  CVT.D.S   F0, F0
  248:  SUB.D     F22, F22, F0
  24C:  CVT.D.S   F20, F30
  250:  MUL.D     F20, F20, F22
  254:  NOP
  258:  JAL       ~Func:sin_rad
  25C:  DIV.S     F12, F12, F24
  260:  LWC1      F4, 18 (SP)
  264:  MUL.S     F0, F4, F0
  268:  NOP
  26C:  CVT.D.S   F0, F0
  270:  ADD.D     F20, F20, F0
  274:  BEQ       R0, R0, .o3F0
  278:  LI        V0, 2D
        .o27C
  27C:  LW        V0, A8 (S0)
  280:  LW        V1, A4 (S0)
  284:  ADDU      V0, V0, V1
  288:  SW        V0, A8 (S0)
  28C:  SLTI      V0, V0, 5B
  290:  BNE       V0, R0, .o29C
  294:  LI        V0, 5A
  298:  SW        V0, A8 (S0)
        .o29C
  29C:  LWC1      F4, 90 (S0)
  2A0:  CVT.S.W   F4, F4
  2A4:  SWC1      F4, 10 (SP)
  2A8:  LWC1      F4, 94 (S0)
  2AC:  CVT.S.W   F4, F4
  2B0:  SWC1      F4, 14 (SP)
  2B4:  LWC1      F12, A8 (S0)
  2B8:  CVT.S.W   F12, F12
  2BC:  LIF       F26, 6.28318
  2C8:  LWC1      F30, 98 (S0)
  2CC:  CVT.S.W   F30, F30
  2D0:  MUL.S     F12, F12, F26
  2D4:  NOP
  2D8:  LWC1      F28, 9C (S0)
  2DC:  CVT.S.W   F28, F28
  2E0:  LIF       F24, 360.0
  2E8:  LWC1      F4, A0 (S0)
  2EC:  CVT.S.W   F4, F4
  2F0:  SWC1      F4, 18 (SP)
  2F4:  JAL       ~Func:sin_rad
  2F8:  DIV.S     F12, F12, F24
  2FC:  CVT.D.S   F0, F0
  300:  LIF       F23, 1.875
  308:  MTC1      R0, F22
  30C:  LWC1      F4, 10 (SP)
  310:  SUB.D     F0, F22, F0
  314:  CVT.D.S   F20, F4
  318:  MUL.D     F20, F20, F0
  31C:  NOP
  320:  LWC1      F12, A8 (S0)
  324:  CVT.S.W   F12, F12
  328:  MUL.S     F12, F12, F26
  32C:  NOP
  330:  JAL       ~Func:sin_rad
  334:  DIV.S     F12, F12, F24
  338:  MUL.S     F0, F28, F0
  33C:  NOP
  340:  LW        V0, A8 (S0)
  344:  SLL       V0, V0, 1
  348:  MTC1      V0, F12
  34C:  NOP
  350:  CVT.S.W   F12, F12
  354:  MUL.S     F12, F12, F26
  358:  NOP
  35C:  CVT.D.S   F0, F0
  360:  ADD.D     F20, F20, F0
  364:  DIV.S     F12, F12, F24
  368:  CVT.S.D   F20, F20
  36C:  JAL       ~Func:sin_rad
  370:  SWC1      F20, 10 (SP)
  374:  LWC1      F12, A8 (S0)
  378:  CVT.S.W   F12, F12
  37C:  MUL.S     F12, F12, F26
  380:  NOP
  384:  LIF       F2, 90.0
  38C:  NOP
  390:  MUL.S     F0, F0, F2
  394:  NOP
  398:  LWC1      F4, 14 (SP)
  39C:  ADD.S     F4, F4, F0
  3A0:  DIV.S     F12, F12, F24
  3A4:  JAL       ~Func:sin_rad
  3A8:  SWC1      F4, 14 (SP)
  3AC:  LWC1      F12, A8 (S0)
  3B0:  CVT.S.W   F12, F12
  3B4:  MUL.S     F12, F12, F26
  3B8:  NOP
  3BC:  CVT.D.S   F0, F0
  3C0:  SUB.D     F22, F22, F0
  3C4:  CVT.D.S   F20, F30
  3C8:  MUL.D     F20, F20, F22
  3CC:  NOP
  3D0:  JAL       ~Func:sin_rad
  3D4:  DIV.S     F12, F12, F24
  3D8:  LWC1      F4, 18 (SP)
  3DC:  MUL.S     F0, F4, F0
  3E0:  NOP
  3E4:  CVT.D.S   F0, F0
  3E8:  ADD.D     F20, F20, F0
  3EC:  LI        V0, 5A
        .o3F0
  3F0:  LW        V1, A8 (S0)
  3F4:  BNE       V1, V0, .o400
  3F8:  CVT.S.D   F30, F20
  3FC:  SW        S1, B0 (S0)
        .o400
  400:  LWC1      F4, 10 (SP)
  404:  TRUNC.W.S F4, F4
  408:  SWC1      F4, 84 (S0)
  40C:  LWC1      F4, 14 (SP)
  410:  TRUNC.W.S F4, F4
  414:  SWC1      F4, 88 (S0)
  418:  TRUNC.W.S F4, F30
  41C:  SWC1      F4, 8C (S0)
  420:  LW        RA, 28 (SP)
  424:  LW        S1, 24 (SP)
  428:  LW        S0, 20 (SP)
  42C:  LDC1      F30, 58 (SP)
  430:  LDC1      F28, 50 (SP)
  434:  LDC1      F26, 48 (SP)
  438:  LDC1      F24, 40 (SP)
  43C:  LDC1      F22, 38 (SP)
  440:  LDC1      F20, 30 (SP)
  444:  LI        V0, 2
  448:  JR        RA
  44C:  ADDIU     SP, SP, 60
}

#new:Function $Function_80219DB0
{
    0:  ADDIU     SP, SP, FFE8
    4:  SW        S0, 10 (SP)
    8:  COPY      S0, A0
    C:  SW        RA, 14 (SP)
   10:  LW        V1, A8 (S0)
   14:  LW        V0, 88 (S0)
   18:  ADDU      V1, V1, V0
   1C:  BGEZ      V1, .o30
   20:  SW        V1, A8 (S0)
   24:  LUI       V0, 2
   28:  BEQ       R0, R0, .o40
   2C:  ADDU      V0, V1, V0
        .o30
   30:  LUI       A0, 2
   34:  SLT       V0, A0, V1
   38:  BEQ       V0, R0, .o44
   3C:  SUBU      V0, V1, A0
        .o40
   40:  SW        V0, A8 (S0)
        .o44
   44:  LW        V1, AC (S0)
   48:  LW        V0, 8C (S0)
   4C:  ADDU      V1, V1, V0
   50:  BGEZ      V1, .o64
   54:  SW        V1, AC (S0)
   58:  LUI       V0, 2
   5C:  BEQ       R0, R0, .o74
   60:  ADDU      V0, V1, V0
        .o64
   64:  LUI       A0, 2
   68:  SLT       V0, A0, V1
   6C:  BEQ       V0, R0, .o78
   70:  SUBU      V0, V1, A0
        .o74
   74:  SW        V0, AC (S0)
        .o78
   78:  LW        V1, B0 (S0)
   7C:  LW        V0, 90 (S0)
   80:  ADDU      V1, V1, V0
   84:  BGEZ      V1, .o98
   88:  SW        V1, B0 (S0)
   8C:  LUI       V0, 2
   90:  BEQ       R0, R0, .oA8
   94:  ADDU      V0, V1, V0
        .o98
   98:  LUI       A0, 2
   9C:  SLT       V0, A0, V1
   A0:  BEQ       V0, R0, .oAC
   A4:  SUBU      V0, V1, A0
        .oA8
   A8:  SW        V0, B0 (S0)
        .oAC
   AC:  LW        V1, B4 (S0)
   B0:  LW        V0, 94 (S0)
   B4:  ADDU      V1, V1, V0
   B8:  BGEZ      V1, .oCC
   BC:  SW        V1, B4 (S0)
   C0:  LUI       V0, 2
   C4:  BEQ       R0, R0, .oDC
   C8:  ADDU      V0, V1, V0
        .oCC
   CC:  LUI       A0, 2
   D0:  SLT       V0, A0, V1
   D4:  BEQ       V0, R0, .oE0
   D8:  SUBU      V0, V1, A0
        .oDC
   DC:  SW        V0, B4 (S0)
        .oE0
   E0:  LW        A0, 84 (S0)
   E4:  JAL       ~Func:set_main_pan_u
   E8:  LW        A1, A8 (S0)
   EC:  LW        A0, 84 (S0)
   F0:  JAL       ~Func:set_main_pan_v
   F4:  LW        A1, AC (S0)
   F8:  LW        A0, 84 (S0)
   FC:  JAL       ~Func:set_aux_pan_u
  100:  LW        A1, B0 (S0)
  104:  LW        A0, 84 (S0)
  108:  JAL       ~Func:set_aux_pan_v
  10C:  LW        A1, B4 (S0)
  110:  LW        RA, 14 (SP)
  114:  LW        S0, 10 (SP)
  118:  CLEAR     V0
  11C:  JR        RA
  120:  ADDIU     SP, SP, 18
}

#new:Function $Function_80219ED4
{
    0:  ADDIU     SP, SP, FFE8
    4:  SW        S0, 10 (SP)
    8:  COPY      S0, A0
    C:  BEQ       A1, R0, .o24
   10:  SW        RA, 14 (SP)
   14:  SW        R0, 70 (S0)
   18:  SW        R0, 74 (S0)
   1C:  SW        R0, 78 (S0)
   20:  SW        R0, 7C (S0)
        .o24
   24:  LW        V0, 70 (S0)
   28:  BNE       V0, R0, .o64
   2C:  NOP
   30:  LW        V1, A8 (S0)
   34:  LW        V0, 88 (S0)
   38:  ADDU      V1, V1, V0
   3C:  BGEZ      V1, .o50
   40:  SW        V1, A8 (S0)
   44:  LUI       V0, 2
   48:  BEQ       R0, R0, .o60
   4C:  ADDU      V0, V1, V0
        .o50
   50:  LUI       A0, 2
   54:  SLT       V0, A0, V1
   58:  BEQ       V0, R0, .o64
   5C:  SUBU      V0, V1, A0
        .o60
   60:  SW        V0, A8 (S0)
        .o64
   64:  LW        V0, 74 (S0)
   68:  BNE       V0, R0, .oA4
   6C:  NOP
   70:  LW        V1, AC (S0)
   74:  LW        V0, 8C (S0)
   78:  ADDU      V1, V1, V0
   7C:  BGEZ      V1, .o90
   80:  SW        V1, AC (S0)
   84:  LUI       V0, 2
   88:  BEQ       R0, R0, .oA0
   8C:  ADDU      V0, V1, V0
        .o90
   90:  LUI       A0, 2
   94:  SLT       V0, A0, V1
   98:  BEQ       V0, R0, .oA4
   9C:  SUBU      V0, V1, A0
        .oA0
   A0:  SW        V0, AC (S0)
        .oA4
   A4:  LW        V0, 78 (S0)
   A8:  BNE       V0, R0, .oE4
   AC:  NOP
   B0:  LW        V1, B0 (S0)
   B4:  LW        V0, 90 (S0)
   B8:  ADDU      V1, V1, V0
   BC:  BGEZ      V1, .oD0
   C0:  SW        V1, B0 (S0)
   C4:  LUI       V0, 2
   C8:  BEQ       R0, R0, .oE0
   CC:  ADDU      V0, V1, V0
        .oD0
   D0:  LUI       A0, 2
   D4:  SLT       V0, A0, V1
   D8:  BEQ       V0, R0, .oE4
   DC:  SUBU      V0, V1, A0
        .oE0
   E0:  SW        V0, B0 (S0)
        .oE4
   E4:  LW        V0, 7C (S0)
   E8:  BNE       V0, R0, .o124
   EC:  NOP
   F0:  LW        V1, B4 (S0)
   F4:  LW        V0, 94 (S0)
   F8:  ADDU      V1, V1, V0
   FC:  BGEZ      V1, .o110
  100:  SW        V1, B4 (S0)
  104:  LUI       V0, 2
  108:  BEQ       R0, R0, .o120
  10C:  ADDU      V0, V1, V0
        .o110
  110:  LUI       A0, 2
  114:  SLT       V0, A0, V1
  118:  BEQ       V0, R0, .o124
  11C:  SUBU      V0, V1, A0
        .o120
  120:  SW        V0, B4 (S0)
        .o124
  124:  LW        A0, 84 (S0)
  128:  JAL       ~Func:set_main_pan_u
  12C:  LW        A1, A8 (S0)
  130:  LW        A0, 84 (S0)
  134:  JAL       ~Func:set_main_pan_v
  138:  LW        A1, AC (S0)
  13C:  LW        A0, 84 (S0)
  140:  JAL       ~Func:set_aux_pan_u
  144:  LW        A1, B0 (S0)
  148:  LW        A0, 84 (S0)
  14C:  JAL       ~Func:set_aux_pan_v
  150:  LW        A1, B4 (S0)
  154:  LW        V0, 70 (S0)
  158:  LW        V1, 78 (S0)
  15C:  LW        A0, 98 (S0)
  160:  ADDIU     V0, V0, 1
  164:  SW        V0, 70 (S0)
  168:  LW        V0, 74 (S0)
  16C:  ADDIU     V1, V1, 1
  170:  SW        V1, 78 (S0)
  174:  LW        V1, 70 (S0)
  178:  ADDIU     V0, V0, 1
  17C:  SW        V0, 74 (S0)
  180:  LW        V0, 7C (S0)
  184:  SLT       V1, V1, A0
  188:  ADDIU     V0, V0, 1
  18C:  BNE       V1, R0, .o198
  190:  SW        V0, 7C (S0)
  194:  SW        R0, 70 (S0)
        .o198
  198:  LW        V0, 74 (S0)
  19C:  LW        V1, 9C (S0)
  1A0:  SLT       V0, V0, V1
  1A4:  BEQL      V0, R0, .o1AC
  1A8:  SW        R0, 74 (S0)
        .o1AC
  1AC:  LW        V0, 78 (S0)
  1B0:  LW        V1, A0 (S0)
  1B4:  SLT       V0, V0, V1
  1B8:  BEQL      V0, R0, .o1C0
  1BC:  SW        R0, 78 (S0)
        .o1C0
  1C0:  LW        V0, 7C (S0)
  1C4:  LW        V1, A4 (S0)
  1C8:  SLT       V0, V0, V1
  1CC:  BEQL      V0, R0, .o1D4
  1D0:  SW        R0, 7C (S0)
        .o1D4
  1D4:  LW        RA, 14 (SP)
  1D8:  LW        S0, 10 (SP)
  1DC:  CLEAR     V0
  1E0:  JR        RA
  1E4:  ADDIU     SP, SP, 18
}

PADDING: 8021A0BC to 8021A0C0 (005EE54C to 005EE550)
00000000

#new:DefenseTable $DefenseTable_8021A0C0
{
	.Element:Normal 00000002
	.Element:Hammer 00000002
	.Element:Jump   00000002
	.Element:Water  00000002
	.Element:Blast  00000002
	.Element:End
}

#new:DefenseTable $DefenseTable_8021A0EC
{
	.Element:Normal 00000000
	.Element:End
}

#new:StatusTable $StatusTable_8021A0F8
{
	.Status:Normal      0`
	.Status:Default     0`
	.Status:Sleep      80`
	.Status:Poison     60`
	.Status:Frozen    100`
	.Status:Dizzy      50`
	.Status:Fear        0`
	.Status:Static     80`
	.Status:Paralyze   90`
	.Status:Shrink     75`
	.Status:Stop       90`
	.Status:DefaultTurnMod    0`
	.Status:SleepTurnMod      0`
	.Status:PoisonTurnMod     0`
	.Status:FrozenTurnMod     0`
	.Status:DizzyTurnMod     -1`
	.Status:FearTurnMod       0`
	.Status:StaticTurnMod     0`
	.Status:ParalyzeTurnMod   1`
	.Status:ShrinkTurnMod     0`
	.Status:StopTurnMod       0`
	.Status:End
}

#new:PartsTable $PartsTable_8021A1A4
{
	00800000 01000000 FE2400FF $IdleAnimations_8021A1F0 $DefenseTable_8021A0C0 00001000 00000000 00F90000 00000000
}

#new:Actor $DarkKoopa
{
	% stats
	[Index]         5b
	[Level]        18`b
	[MaxHP]         8`b
	[Coins]         2`b
	[Flags]       00000000
	[StatusTable] $StatusTable_8021A0F8
	% ai
	[PartsCount]    1`s
	[PartsTable]  $PartsTable_8021A1A4
	[Script]      $Script_Init_8021A36C
	% move effectiveness
	[Escape]       60`b
	[Item]         70`b
	[AirLift]      85`b
	[Hurricane]    75`b % Bow's "Spook" as well
	[UpAndAway]    95`b
	[PowerBounce]  90`b
	[SpinSmash]     0`b % weight (0-4)
	% ui positions
	[Size]         28`b  36`b % width height
	[HealthBar]     0`b   0`b % dx dy
	[StatusTurn]  -15`b  32`b % dx dy
	[StatusIcon]    5`b  32`b % dx dy
}

#new:IdleAnimations $IdleAnimations_8021A1F0
{
	.Status:Normal    00290001
	.Status:Stone     00290000
	.Status:Sleep     00290011
	.Status:Poison    00290001
	.Status:Stop      00290000
	.Status:Static    00290001
	.Status:Paralyze  00290000
	.Status:Dizzy     00290013
	.Status:Fear      00290013
	.Status:End
}

#new:IdleAnimations $IdleAnimations_8021A23C
{
	.Status:Normal    00290003
	.Status:Stone     00290000
	.Status:Sleep     00290011
	.Status:Poison    00290003
	.Status:Stop      00290000
	.Status:Static    00290003
	.Status:Paralyze  00290000
	.Status:Dizzy     00290013
	.Status:Fear      00290013
	.Status:End
}

#new:IdleAnimations $IdleAnimations_8021A288
{
	.Status:Normal    00290002
	.Status:Stone     00290000
	.Status:Sleep     00290011
	.Status:Poison    00290002
	.Status:Stop      00290000
	.Status:Static    00290002
	.Status:Paralyze  00290000
	.Status:Dizzy     00290013
	.Status:Fear      00290013
	.Status:End
}

#new:IdleAnimations $IdleAnimations_8021A2D4
{
	.Status:Normal    00290003
	.Status:Stone     00290000
	.Status:Sleep     00290011
	.Status:Poison    00290003
	.Status:Stop      00290000
	.Status:Static    00290003
	.Status:Paralyze  00290000
	.Status:Dizzy     00290013
	.Status:Fear      00290013
	.Status:End
}

#new:IdleAnimations $IdleAnimations_8021A320
{
	.Status:Normal    0029000F
	.Status:Stone     00290010
	.Status:Sleep     00290012
	.Status:Poison    0029000F
	.Status:Stop      00290010
	.Status:Static    0029000F
	.Status:Paralyze  00290010
	.Status:Dizzy     00290014
	.Status:Fear      00290014
	.Status:End
}

#new:Script $Script_Init_8021A36C
{
    0:  Call  BindTakeTurn  ( .Actor:Self $Script_TakeTurn_8021D014 )
   14:  Call  BindIdle      ( .Actor:Self $Script_Idle_8021A5E4 )
   28:  Call  BindHandleEvent   ( .Actor:Self $Script_HandleEvent_8021AE4C )
   3C:  Call  RandInt       ( 000003E8 *Var0 )
   50:  If  *Var0  <  0000012C
   60:  	Call  SetActorVar   ( .Actor:Self 00000008 00000000 )
   78:  Else
   80:  	Call  SetActorVar       ( .Actor:Self 00000008 00000001 )
   98:  	Call  SetIdleAnimations ( .Actor:Self 00000001 $IdleAnimations_8021A288 )
   B0:  	Call  SetAnimation      ( .Actor:Self 00000001 00290002 )
   C8:  EndIf
   D0:  Call  SetActorVar   ( .Actor:Self 00000001 00000000 )
   E8:  Return
   F0:  End
}

#new:Script $Script_8021A464
{
    0:  Switch  *Var0
    C:  	CaseOR  ==  00000000
   18:  	CaseOR  ==  00000001
   24:  		If  *Var1  &  00041000
   34:  			Call  SetTargetOffset       ( .Actor:Self 00000001  -5`  15` )
   50:  			Call  8027D4C8  ( FFFFFF81 00000001 00000000 00000000 )
   6C:  			Call  $Function_80218000    ( FFFFFFF6 00000014 0000000A 00000014 )
   88:  		Else
   90:  			Call  SetTargetOffset       ( .Actor:Self 00000001  -4`  32` )
   AC:  			Call  8027D4C8  ( FFFFFF81 00000001 FFFFFFFF FFFFFFFC )
   C8:  			Call  $Function_80218000    ( FFFFFFF1 00000020 00000005 00000020 )
   E4:  		EndIf
   EC:  	EndCaseGroup
   F4:  	CaseOR  ==  00000002
  100:  	CaseOR  ==  00000003
  10C:  		Call  SetTargetOffset       ( .Actor:Self 00000001  -5`  15` )
  128:  		Call  8027D4C8  ( FFFFFF81 00000001 00000000 00000000 )
  144:  		Call  $Function_80218000    ( FFFFFFF6 00000014 0000000A 00000014 )
  160:  	EndCaseGroup
  168:  EndSwitch
  170:  Return
  178:  End
}

#new:Script $Script_Idle_8021A5E4
{
    0:  Label  0
    C:  Call  RandInt   ( 00000050 *VarA )
   20:  Add   *VarA  00000050
   30:  Loop  *VarA
   3C:  	Label  1
   48:  	Call  GetActorVar       ( .Actor:Self 00000008 *Var0 )
   60:  	Call  GetStatusFlags    ( .Actor:Self *Var1 )
   74:  	ExecWait  $Script_8021A464
   80:  	If  *Var0  ==  00000002
   90:  		Wait  1`
   9C:  		Goto  1
   A8:  	EndIf
   B0:  	If  *Var0  ==  00000003
   C0:  		Wait  1`
   CC:  		Goto  1
   D8:  	EndIf
   E0:  	If  *Var1  &  0035D000
   F0:  		Wait  1`
   FC:  		Goto  1
  108:  	EndIf
  110:  	Wait  1`
  11C:  EndLoop
  124:  Call  GetActorVar   ( .Actor:Self 00000008 *Var0 )
  13C:  Switch  *Var0
  148:  	Case  ==  00000000
  154:  		Call  SetIdleAnimations ( .Actor:Self 00000001 $IdleAnimations_8021A23C )
  16C:  	Case  ==  00000001
  178:  		Call  SetIdleAnimations ( .Actor:Self 00000001 $IdleAnimations_8021A2D4 )
  190:  EndSwitch
  198:  Call  GetActorPos   ( .Actor:Self *Var0 *Var1 *Var2 )
  1B4:  Add   *Var0  00000005
  1C4:  Call  SetActorIdleSpeed ( .Actor:Self *Fixed[1.0] )
  1D8:  Call  SetIdleGoal   ( .Actor:Self *Var0 *Var1 *Var2 )
  1F4:  Call  IdleRunToGoal ( .Actor:Self  0` )
  208:  Call  GetActorVar   ( .Actor:Self 00000008 *Var0 )
  220:  Switch  *Var0
  22C:  	Case  ==  00000000
  238:  		Call  SetIdleAnimations ( .Actor:Self 00000001 $IdleAnimations_8021A1F0 )
  250:  	Case  ==  00000001
  25C:  		Call  SetIdleAnimations ( .Actor:Self 00000001 $IdleAnimations_8021A288 )
  274:  	CaseOR  ==  00000002
  280:  	CaseOR  ==  00000003
  28C:  		Call  SetIdleAnimations ( .Actor:Self 00000001 $IdleAnimations_8021A320 )
  2A4:  	EndCaseGroup
  2AC:  EndSwitch
  2B4:  Loop  00000014
  2C0:  	Label  2
  2CC:  	Call  GetActorVar       ( .Actor:Self 00000008 *Var0 )
  2E4:  	Call  GetStatusFlags    ( .Actor:Self *Var1 )
  2F8:  	ExecWait  $Script_8021A464
  304:  	If  *Var0  ==  00000002
  314:  		Wait  1`
  320:  		Goto  2
  32C:  	EndIf
  334:  	If  *Var0  ==  00000003
  344:  		Wait  1`
  350:  		Goto  2
  35C:  	EndIf
  364:  	If  *Var1  &  0035D000
  374:  		Wait  1`
  380:  		Goto  2
  38C:  	EndIf
  394:  	Wait  1`
  3A0:  EndLoop
  3A8:  Call  GetActorVar   ( .Actor:Self 00000008 *Var0 )
  3C0:  Switch  *Var0
  3CC:  	Case  ==  00000000
  3D8:  		Call  SetIdleAnimations ( .Actor:Self 00000001 $IdleAnimations_8021A23C )
  3F0:  	Case  ==  00000001
  3FC:  		Call  SetIdleAnimations ( .Actor:Self 00000001 $IdleAnimations_8021A2D4 )
  414:  EndSwitch
  41C:  Call  GetActorPos   ( .Actor:Self *Var0 *Var1 *Var2 )
  438:  Sub   *Var0  00000005
  448:  Call  SetActorIdleSpeed ( .Actor:Self *Fixed[1.0] )
  45C:  Call  SetIdleGoal   ( .Actor:Self *Var0 *Var1 *Var2 )
  478:  Call  IdleRunToGoal ( .Actor:Self  0` )
  48C:  Call  GetActorVar   ( .Actor:Self 00000008 *Var0 )
  4A4:  Switch  *Var0
  4B0:  	Case  ==  00000000
  4BC:  		Call  SetIdleAnimations ( .Actor:Self 00000001 $IdleAnimations_8021A1F0 )
  4D4:  	Case  ==  00000001
  4E0:  		Call  SetIdleAnimations ( .Actor:Self 00000001 $IdleAnimations_8021A288 )
  4F8:  	CaseOR  ==  00000002
  504:  	CaseOR  ==  00000003
  510:  		Call  SetIdleAnimations ( .Actor:Self 00000001 $IdleAnimations_8021A320 )
  528:  	EndCaseGroup
  530:  EndSwitch
  538:  Loop  00000032
  544:  	Label  3
  550:  	Call  GetActorVar       ( .Actor:Self 00000008 *Var0 )
  568:  	Call  GetStatusFlags    ( .Actor:Self *Var1 )
  57C:  	ExecWait  $Script_8021A464
  588:  	If  *Var0  ==  00000002
  598:  		Wait  1`
  5A4:  		Goto  3
  5B0:  	EndIf
  5B8:  	If  *Var0  ==  00000003
  5C8:  		Wait  1`
  5D4:  		Goto  3
  5E0:  	EndIf
  5E8:  	If  *Var1  &  0035D000
  5F8:  		Wait  1`
  604:  		Goto  3
  610:  	EndIf
  618:  	Wait  1`
  624:  EndLoop
  62C:  Call  GetActorVar   ( .Actor:Self 00000008 *Var0 )
  644:  Switch  *Var0
  650:  	Case  ==  00000001
  65C:  		Call  SetActorVar   ( .Actor:Self 00000001 00000001 )
  674:  		Thread
  67C:  			Call  MakeLerp      ( 000002D0 00000000 0000001E .Easing:CosInOut )
  698:  			Label  A
  6A4:  			Call  UpdateLerp ( )
  6B0:  			Call  SetActorYaw   ( .Actor:Self *Var0 )
  6C4:  			If  *Var1  ==  00000001
  6D4:  				Call  GetActorVar   ( .Actor:Self 00000001 *Var2 )
  6EC:  				If  *Var2  ==  00000001
  6FC:  					Wait  1`
  708:  					Goto  A
  714:  				EndIf
  71C:  			EndIf
  724:  			Call  SetActorVar   ( .Actor:Self 00000001 00000000 )
  73C:  			Call  SetActorYaw   ( .Actor:Self  0` )
  750:  		EndThread
  758:  		Wait  8`
  764:  		Call  AddActorDecoration    ( .Actor:Self 00000001 00000001 .Decoration:Whirlwind )
  780:  		Wait  15`
  78C:  		Call  RemoveActorDecoration ( .Actor:Self 00000001 00000001 )
  7A4:  		Wait  8`
  7B0:  		Call  SetActorVar   ( .Actor:Self 00000001 00000000 )
  7C8:  	Case  ==  00000000
  7D4:  	Case  ==  00000002
  7E0:  	Case  ==  00000003
  7EC:  EndSwitch
  7F4:  Goto  0
  800:  Return
  808:  End
}

#new:IntTable $IntTable_8021ADF4
{
	00000009 00000010 00000016 0000001A 0000001E 00000020 00000021 00000020
	0000001E 0000001A 00000016 00000010 00000009 00000000 00000004 00000006
	00000007 00000006 00000004 00000000 00000002 00000000
}

#new:Script $Script_HandleEvent_8021AE4C
{
    0:  Call  UseIdleAnimation  ( .Actor:Self .False )
   14:  Call  EnableIdleScript  ( .Actor:Self 00000000 )
   28:  Call  SetAnimationRate  ( .Actor:Self 00000001 *Fixed[1.0] )
   40:  Call  SetActorYaw       ( .Actor:Self  0` )
   54:  Call  GetActorVar       ( .Actor:Self 00000001 *Var0 )
   6C:  If  *Var0  ==  00000001
   7C:  	Call  RemoveActorDecoration ( .Actor:Self 00000001 00000001 )
   94:  	Call  SetActorVar   ( .Actor:Self 00000001 00000000 )
   AC:  EndIf
   B4:  Call  GetLastEvent  ( .Actor:Self *Var0 )
   C8:  Switch  *Var0
   D4:  	CaseOR  ==  .Event:HitCombo % 9
   E0:  	CaseOR  ==  .Event:Hit % A
   EC:  		SetConst  *Var0  00000001
   FC:  		SetConst  *Var1  0029000B
  10C:  		ExecWait  DoNormalHit
  118:  	EndCaseGroup
  120:  	Case  ==  .Event:BurnHit % E
  12C:  		SetConst  *Var0  00000001
  13C:  		SetConst  *Var1  0029000C
  14C:  		SetConst  *Var2  0029000D
  15C:  		ExecWait  DoBurnHit
  168:  	Case  ==  .Event:BurnDeath % 24
  174:  		SetConst  *Var0  00000001
  184:  		SetConst  *Var1  0029000C
  194:  		SetConst  *Var2  0029000D
  1A4:  		ExecWait  DoBurnHit
  1B0:  		SetConst  *Var0  00000001
  1C0:  		SetConst  *Var1  0029000D
  1D0:  		ExecWait  DoDeath
  1DC:  		Return
  1E4:  	Case  ==  .Event:SpinSmashHit % B
  1F0:  		SetConst  *Var0  00000001
  200:  		SetConst  *Var1  0029000B
  210:  		ExecWait  DoSpinSmashHit
  21C:  	Case  ==  .Event:SpinSmashDeath % 21
  228:  		SetConst  *Var0  00000001
  238:  		SetConst  *Var1  0029000B
  248:  		ExecWait  DoSpinSmashHit
  254:  		SetConst  *Var0  00000001
  264:  		SetConst  *Var1  0029000B
  274:  		ExecWait  DoDeath
  280:  		Return
  288:  	Case  ==  .Event:FlipTrigger % D
  294:  		Call  GetActorVar   ( .Actor:Self 00000008 *Var0 )
  2AC:  		Switch  *Var0
  2B8:  			Case  ==  00000000
  2C4:  				Call  SetActorVar   ( .Actor:Self 00000008 00000002 )
  2DC:  			Case  ==  00000001
  2E8:  				Call  SetActorVar   ( .Actor:Self 00000008 00000003 )
  300:  		EndSwitch
  308:  		Call  SetActorVar       ( .Actor:Self 00000009 00000001 )
  320:  		Call  SetDefenseTable   ( .Actor:Self 00000001 $DefenseTable_8021A0EC )
  338:  		Call  SetIdleAnimations ( .Actor:Self 00000001 $IdleAnimations_8021A320 )
  350:  		Call  SetTargetOffset   ( .Actor:Self 00000001  -5`  15` )
  36C:  		Call  8027D4C8  ( FFFFFF81 00000001 00000000 00000000 )
  388:  		Call  SetActorFlagBits  ( .Actor:Self 00000400 .True )
  3A0:  		Call  SetAnimation      ( .Actor:Self 00000001 0029000B )
  3B8:  		Call  SetActorRotationOffset    ( .Actor:Self 00000000 0000000C 00000000 )
  3D4:  		Thread
  3DC:  			Wait  4`
  3E8:  			Call  SetActorRotation  ( .Actor:Self 00000000 00000000 0000001E )
  404:  			Wait  1`
  410:  			Call  SetActorRotation  ( .Actor:Self 00000000 00000000 00000000 )
  42C:  			Wait  1`
  438:  			Call  SetActorRotation  ( .Actor:Self 00000000 00000000 FFFFFFE2 )
  454:  			Wait  1`
  460:  			Call  SetActorRotation  ( .Actor:Self 00000000 00000000 FFFFFFC4 )
  47C:  			Wait  1`
  488:  			Call  SetActorRotation  ( .Actor:Self 00000000 00000000 FFFFFFB5 )
  4A4:  			Wait  1`
  4B0:  		EndThread
  4B8:  		UseIntBuffer  $IntTable_8021ADF4
  4C4:  		Loop  00000016
  4D0:  			Get1Int  *Var0
  4DC:  			Call  SetActorDispOffset    ( .Actor:Self 00000000 *Var0 00000000 )
  4F8:  			Wait  1`
  504:  		EndLoop
  50C:  		Call  SetActorRotationOffset    ( .Actor:Self 00000000 00000000 00000000 )
  528:  		Call  SetActorRotation      ( .Actor:Self 00000000 00000000 00000000 )
  544:  		Call  SetActorDispOffset    ( .Actor:Self 00000000 00000000 00000000 )
  560:  		Call  SetAnimation  ( .Actor:Self 00000001 0029000F )
  578:  		Call  SetAnimationRate      ( .Actor:Self 00000001 *Fixed[0.5] )
  590:  	Case  ==  .Event:ShockHit % 2F
  59C:  		SetConst  *Var0  00000001
  5AC:  		SetConst  *Var1  0029000B
  5BC:  		ExecWait  DoShockHit
  5C8:  		SetConst  *Var0  00000001
  5D8:  		SetConst  *Var1  0029000B
  5E8:  		ExecWait  DoJumpBack
  5F4:  		Call  JumpToGoal    ( .Actor:Self  5` .False .True .False )
  614:  		SetConst  *Var0  00000001
  624:  		SetConst  *Var1  00290004
  634:  		ExecWait  DoReturnHome
  640:  		Call  SetActorJumpGravity   ( .Actor:Self *Fixed[1.6] )
  654:  		Call  JumpToGoal    ( .Actor:Self  5` .False .True .False )
  674:  	Case  ==  .Event:ShockDeath % 26
  680:  		SetConst  *Var0  00000001
  690:  		SetConst  *Var1  0029000B
  6A0:  		ExecWait  DoShockHit
  6AC:  		SetConst  *Var0  00000001
  6BC:  		SetConst  *Var1  0029000B
  6CC:  		ExecWait  DoDeath
  6D8:  		Return
  6E0:  	CaseOR  ==  00000017 % 17
  6EC:  	CaseOR  ==  .Event:Immune % 19
  6F8:  		Call  GetActorVar   ( .Actor:Self 00000008 *Var0 )
  710:  		Switch  *Var0
  71C:  			CaseOR  ==  00000000
  728:  			CaseOR  ==  00000001
  734:  				SetConst  *Var0  00000001
  744:  				SetConst  *Var1  00290007
  754:  				ExecWait  DoImmune
  760:  				Call  GetStatusFlags    ( .Actor:Self *Var0 )
  774:  				If  *Var0  !&  ~Flags:StatusFlags:Sleep|Frozen|Fear|Paralyze|Dizzy|Stone|Stop % 35D000
  784:  					Call  SetAnimation  ( .Actor:Self 00000001 00290008 )
  79C:  					Wait  10`
  7A8:  				EndIf
  7B0:  			EndCaseGroup
  7B8:  			CaseOR  ==  00000002
  7C4:  			CaseOR  ==  00000003
  7D0:  				SetConst  *Var0  00000001
  7E0:  				SetConst  *Var1  0029000F
  7F0:  				ExecWait  DoImmune
  7FC:  			EndCaseGroup
  804:  		EndSwitch
  80C:  	EndCaseGroup
  814:  	Case  ==  .Event:Death % 20
  820:  		SetConst  *Var0  00000001
  830:  		SetConst  *Var1  0029000B
  840:  		ExecWait  DoNormalHit
  84C:  		Wait  10`
  858:  		SetConst  *Var0  00000001
  868:  		SetConst  *Var1  0029000B
  878:  		ExecWait  DoDeath
  884:  		Return
  88C:  	Case  ==  .Event:EndFirstStrike % 35
  898:  		Call  GetActorVar   ( .Actor:Self 00000008 *Var0 )
  8B0:  		If  *Var0  ==  00000000
  8C0:  			SetConst  *Var0  00000001
  8D0:  			SetConst  *Var1  00290004
  8E0:  			ExecWait  DoReturnHome
  8EC:  		EndIf
  8F4:  		Call  GetActorPos   ( .Actor:Self *Var0 *Var1 *Var2 )
  910:  		Call  SetHomePos    ( .Actor:Self *Var0 *Var1 *Var2 )
  92C:  		Call  HPBarToHome   ( .Actor:Self )
  93C:  	Case  ==  .Event:RecoverStatus % 31
  948:  		Call  GetActorVar   ( .Actor:Self 00000008 *Var0 )
  960:  		If  *Var0  ==  00000000
  970:  			SetConst  *Var0  00000001
  980:  			SetConst  *Var1  00290002
  990:  			ExecWait  DoRecover
  99C:  		EndIf
  9A4:  	Case  ==  .Event:ScareAway % 39
  9B0:  		Call  GetActorVar   ( .Actor:Self 00000008 *Var0 )
  9C8:  		Switch  *Var0
  9D4:  			CaseOR  ==  00000000
  9E0:  			CaseOR  ==  00000001
  9EC:  				SetConst  *Var0  00000001
  9FC:  				SetConst  *Var1  00290004
  A0C:  				SetConst  *Var2  0029000B
  A1C:  				ExecWait  DoScareAway
  A28:  				Return
  A30:  			EndCaseGroup
  A38:  			CaseOR  ==  00000002
  A44:  			CaseOR  ==  00000003
  A50:  				SetConst  *Var0  00000001
  A60:  				SetConst  *Var1  0029000F
  A70:  				ExecWait  DoImmune
  A7C:  			EndCaseGroup
  A84:  		EndSwitch
  A8C:  	Case  ==  .Event:BeginAirLift % 3A
  A98:  		Call  GetActorVar   ( .Actor:Self 00000008 *Var0 )
  AB0:  		Switch  *Var0
  ABC:  			CaseOR  ==  00000000
  AC8:  			CaseOR  ==  00000001
  AD4:  				SetConst  *Var0  00000001
  AE4:  				SetConst  *Var1  00290017
  AF4:  			EndCaseGroup
  AFC:  			CaseOR  ==  00000002
  B08:  			CaseOR  ==  00000003
  B14:  				SetConst  *Var0  00000001
  B24:  				SetConst  *Var1  0029000F
  B34:  			EndCaseGroup
  B3C:  		EndSwitch
  B44:  		ExecWait  DoAirLift
  B50:  	Case  ==  .Event:BlowAway % 16
  B5C:  		Call  GetActorVar   ( .Actor:Self 00000008 *Var0 )
  B74:  		Switch  *Var0
  B80:  			CaseOR  ==  00000000
  B8C:  			CaseOR  ==  00000001
  B98:  				SetConst  *Var0  00000001
  BA8:  				SetConst  *Var1  00290017
  BB8:  			EndCaseGroup
  BC0:  			CaseOR  ==  00000002
  BCC:  			CaseOR  ==  00000003
  BD8:  				SetConst  *Var0  00000001
  BE8:  				SetConst  *Var1  0029000F
  BF8:  			EndCaseGroup
  C00:  		EndSwitch
  C08:  		ExecWait  DoBlowAway
  C14:  		Return
  C1C:  	Case  ==  .Event:AirLiftFailed % 1F
  C28:  		Call  GetActorVar   ( .Actor:Self 00000008 *Var0 )
  C40:  		Switch  *Var0
  C4C:  			CaseOR  ==  00000000
  C58:  			CaseOR  ==  00000001
  C64:  				SetConst  *Var0  00000001
  C74:  				SetConst  *Var1  00290001
  C84:  				ExecWait  DoImmune
  C90:  			EndCaseGroup
  C98:  			CaseOR  ==  00000002
  CA4:  			CaseOR  ==  00000003
  CB0:  				SetConst  *Var0  00000001
  CC0:  				SetConst  *Var1  0029000F
  CD0:  				ExecWait  DoImmune
  CDC:  			EndCaseGroup
  CE4:  		EndSwitch
  CEC:  EndSwitch
  CF4:  Call  EnableIdleScript  ( .Actor:Self FFFFFFFF )
  D08:  Call  UseIdleAnimation  ( .Actor:Self .True )
  D1C:  Return
  D24:  End
}

#new:Script $Script_8021BB78
{
    0:  Call  UseIdleAnimation  ( .Actor:Self .False )
   14:  Call  EnableIdleScript  ( .Actor:Self 00000000 )
   28:  Call  SetTargetActor    ( .Actor:Self .Actor:Player )
   3C:  Call  GetBattlePhase    ( *Var0 )
   4C:  If  *Var0  ==  00000001
   5C:  	Call  SetAnimation  ( .Actor:Self 00000001 00290006 )
   74:  Else
   7C:  	Call  UseBattleCamPreset    ( 0000003F )
   8C:  	Call  BattleCamTargetActor  ( .Actor:Self )
   9C:  	Wait  10`
   A8:  	Call  SetAnimation  ( .Actor:Self 00000001 00290007 )
   C0:  	Wait  10`
   CC:  	Thread
   D4:  		Call  GetActorPos   ( .Actor:Self *Var0 *Var1 *Var2 )
   F0:  		Add   *Var1  00000004
  100:  		Call  PlayEffect    ( ~FX:SmokeImpact:Small *Var0 *Var1 *Var2 00000020 00000004 00000000 0000000A 00000000 00000000 00000000 00000000 00000000 )
  144:  		Wait  3`
  150:  		Call  PlayEffect    ( ~FX:SmokeImpact:Small *Var0 *Var1 *Var2 00000020 00000004 00000000 0000000A 00000000 00000000 00000000 00000000 00000000 )
  194:  		Wait  2`
  1A0:  		Call  PlayEffect    ( ~FX:SmokeImpact:Small *Var0 *Var1 *Var2 00000020 00000004 00000000 0000000A 00000000 00000000 00000000 00000000 00000000 )
  1E4:  	EndThread
  1EC:  	Call  PlaySoundAtActor  ( .Actor:Self 00002021 )
  200:  	Call  SetAnimation      ( .Actor:Self 00000001 00290006 )
  218:  	Wait  10`
  224:  	Call  8024ECF8  ( FFFFFFFF 00000001 00000000 )
  23C:  EndIf
  244:  Call  PlaySoundAtActor  ( .Actor:Self 000020D3 )
  258:  Call  SetActorSounds    ( .Actor:Self .ActorSound:Walk 00000000 00000000 )
  274:  Call  EnemyTestTarget   ( .Actor:Self *Var0 ~Flags:DamageType:StatusAlwaysHits 00000000 00000003 00000010 )
  298:  Switch  *Var0
  2A4:  	CaseOR  ==  .HitResult:Miss % 6
  2B0:  	CaseOR  ==  .HitResult:Lucky % 5
  2BC:  		Set   *VarA  *Var0
  2CC:  		Call  SetGoalToTarget       ( .Actor:Self )
  2DC:  		Call  GetStatusFlags        ( .Actor:Self *Var5 )
  2F0:  		Call  AddGoalPos    ( .Actor:Self  -40`  0`  0` )
  30C:  		Call  SetActorSpeed ( .Actor:Self *Fixed[16.0] )
  320:  		Call  RunToGoal     ( .Actor:Self  0` .False )
  338:  		Call  SetAnimation  ( .Actor:Self 00000001 00290008 )
  350:  		Wait  8`
  35C:  		Call  ResetAllActorSounds   ( .Actor:Self )
  36C:  		Call  SetActorYaw   ( .Actor:Self  180` )
  380:  		Wait  4`
  38C:  		If  *VarA  ==  .HitResult:Lucky % 5
  39C:  			Call  EnemyTestTarget   ( .Actor:Self *Var0 ~Flags:DamageType:TriggerLucky 00000000 00000000 00000000 )
  3C0:  		EndIf
  3C8:  		Call  SetAnimation  ( .Actor:Self 00000001 00290015 )
  3E0:  		Wait  1`
  3EC:  		Call  SetAnimation  ( .Actor:Self 00000001 00290016 )
  404:  		Call  GetActorPos   ( .Actor:Self *Var0 *Var1 *Var2 )
  420:  		Add   *Var1  00000014
  430:  		Call  SetGoalPos    ( .Actor:Self *Var0 *Var1 *Var2 )
  44C:  		Call  SetActorJumpGravity   ( .Actor:Self *Fixed[2.0] )
  460:  		Call  JumpToGoal    ( .Actor:Self  5` .False .True .False )
  480:  		Call  SetAnimation  ( .Actor:Self 00000001 00290017 )
  498:  		Wait  6`
  4A4:  		Sub   *Var1  00000014
  4B4:  		Call  SetGoalPos    ( .Actor:Self *Var0 *Var1 *Var2 )
  4D0:  		Call  JumpToGoal    ( .Actor:Self  5` .False .True .False )
  4F0:  		Call  UseBattleCamPreset    ( 00000002 )
  500:  		Call  YieldTurn ( )
  50C:  		Call  SetActorYaw   ( .Actor:Self  180` )
  520:  		Call  AddActorDecoration    ( .Actor:Self 00000001 00000000 .Decoration:Sweat )
  53C:  		Call  SetAnimation  ( .Actor:Self 00000001 00290017 )
  554:  		Call  SetActorSpeed ( .Actor:Self *Fixed[6.0] )
  568:  		Call  SetGoalToHome ( .Actor:Self )
  578:  		Call  RunToGoal     ( .Actor:Self  0` .False )
  590:  		Call  SetAnimation  ( .Actor:Self 00000001 00290001 )
  5A8:  		Call  RemoveActorDecoration ( .Actor:Self 00000001 00000000 )
  5C0:  		Call  SetActorYaw   ( .Actor:Self  0` )
  5D4:  		Call  EnableIdleScript      ( .Actor:Self 00000001 )
  5E8:  		Call  UseIdleAnimation      ( .Actor:Self .True )
  5FC:  		Return
  604:  	EndCaseGroup
  60C:  EndSwitch
  614:  Call  SetGoalToTarget   ( .Actor:Self )
  624:  Call  SetActorSpeed     ( .Actor:Self *Fixed[16.0] )
  638:  Call  RunToGoal ( .Actor:Self  0` .False )
  650:  Call  ResetAllActorSounds   ( .Actor:Self )
  660:  Wait  2`
  66C:  Call  EnemyDamageTarget ( .Actor:Self *Var0 ~Flags:DamageType:StatusAlwaysHits 0000FFFF 00000000 00000003 00000020 )
  694:  Switch  *Var0
  6A0:  	CaseOR  ==  .HitResult:Hit % 0
  6AC:  	CaseOR  ==  .HitResult:QuakeImmune % 2
  6B8:  		Call  UseBattleCamPreset    ( 00000002 )
  6C8:  		Call  GetGoalPos    ( .Actor:Self *Var0 *Var1 *Var2 )
  6E4:  		Add   *Var0  00000028
  6F4:  		Set   *Var1  00000000
  704:  		Call  SetActorJumpGravity   ( .Actor:Self *Fixed[1.8] )
  718:  		Call  SetGoalPos    ( .Actor:Self *Var0 *Var1 *Var2 )
  734:  		Call  JumpToGoal    ( .Actor:Self  10` .False .True .False )
  754:  		Add   *Var0  0000001E
  764:  		Call  SetGoalPos    ( .Actor:Self *Var0 *Var1 *Var2 )
  780:  		Call  JumpToGoal    ( .Actor:Self  8` .False .True .False )
  7A0:  		Add   *Var0  00000014
  7B0:  		Call  SetGoalPos    ( .Actor:Self *Var0 *Var1 *Var2 )
  7CC:  		Call  JumpToGoal    ( .Actor:Self  6` .False .True .False )
  7EC:  		Call  SetAnimation  ( .Actor:Self 00000001 00290008 )
  804:  		Wait  8`
  810:  		Call  YieldTurn ( )
  81C:  		SetConst  *Var0  00000001
  82C:  		SetConst  *Var1  00290004
  83C:  		ExecWait  DoReturnHome
  848:  		Call  SetAnimation  ( .Actor:Self 00000001 00290001 )
  860:  	EndCaseGroup
  868:  EndSwitch
  870:  Call  EnableIdleScript  ( .Actor:Self 00000001 )
  884:  Call  UseIdleAnimation  ( .Actor:Self .True )
  898:  Return
  8A0:  End
}

#new:Script $Script_8021C420
{
    0:  Label  A
    C:  Call  GetActorVar   ( .Actor:Self 00000001 *Var0 )
   24:  Wait  1`
   30:  If  *Var0  ==  00000001
   40:  	Goto  A
   4C:  EndIf
   54:  Call  UseIdleAnimation  ( .Actor:Self .False )
   68:  Call  EnableIdleScript  ( .Actor:Self 00000000 )
   7C:  Call  SetActorYaw       ( .Actor:Self  0` )
   90:  Call  SetTargetActor    ( .Actor:Self .Actor:Player )
   A4:  Call  UseBattleCamPreset    ( 0000003F )
   B4:  Call  BattleCamTargetActor  ( .Actor:Self )
   C4:  Call  SetGoalToTarget   ( .Actor:Self )
   D4:  Call  GetStatusFlags    ( .Actor:Self *Var0 )
   E8:  If  *Var0  &  ~Flags:StatusFlags:Shrink % 80000
   F8:  	Call  AddGoalPos    ( .Actor:Self  8`  0`  0` )
  114:  Else
  11C:  	Call  AddGoalPos    ( .Actor:Self  20`  0`  0` )
  138:  EndIf
  140:  Call  SetAnimation  ( .Actor:Self 00000001 00290004 )
  158:  Call  SetActorSpeed ( .Actor:Self *Fixed[6.0] )
  16C:  Call  RunToGoal     ( .Actor:Self  0` .False )
  184:  Call  SetAnimation  ( .Actor:Self 00000001 00290002 )
  19C:  Wait  10`
  1A8:  Call  SetAnimation  ( .Actor:Self 00000001 00290007 )
  1C0:  Wait  10`
  1CC:  Thread
  1D4:  	Call  GetActorPos   ( .Actor:Self *Var0 *Var1 *Var2 )
  1F0:  	Add   *Var1  00000004
  200:  	Call  PlayEffect    ( ~FX:SmokeImpact:Small *Var0 *Var1 *Var2 00000020 00000004 00000000 0000000A 00000000 00000000 00000000 00000000 00000000 )
  244:  	Wait  3`
  250:  	Call  PlayEffect    ( ~FX:SmokeImpact:Small *Var0 *Var1 *Var2 00000020 00000004 00000000 0000000A 00000000 00000000 00000000 00000000 00000000 )
  294:  	Wait  2`
  2A0:  	Call  PlayEffect    ( ~FX:SmokeImpact:Small *Var0 *Var1 *Var2 00000020 00000004 00000000 0000000A 00000000 00000000 00000000 00000000 00000000 )
  2E4:  EndThread
  2EC:  Call  PlaySoundAtActor  ( .Actor:Self 00002021 )
  300:  Call  SetAnimation      ( .Actor:Self 00000001 00290006 )
  318:  Wait  20`
  324:  Call  PlaySoundAtActor  ( .Actor:Self 00002026 )
  338:  Call  AddActorDecoration    ( .Actor:Self 00000001 00000001 .Decoration:Whirlwind )
  354:  Wait  40`
  360:  Call  EnemyTestTarget   ( .Actor:Self *Var0 ~Flags:DamageType:StatusAlwaysHits 00000000 00000000 00000010 )
  384:  Switch  *Var0
  390:  	CaseOR  ==  .HitResult:Miss % 6
  39C:  	CaseOR  ==  .HitResult:Lucky % 5
  3A8:  		Set   *VarA  *Var0
  3B8:  		Call  SetAnimation  ( .Actor:Self 00000001 00290008 )
  3D0:  		Call  RemoveActorDecoration ( .Actor:Self 00000001 00000001 )
  3E8:  		Wait  10`
  3F4:  		If  *VarA  ==  .HitResult:Lucky % 5
  404:  			Call  EnemyTestTarget   ( .Actor:Self *Var0 ~Flags:DamageType:TriggerLucky 00000000 00000000 00000000 )
  428:  		EndIf
  430:  		Wait  10`
  43C:  		Call  UseBattleCamPreset    ( 00000002 )
  44C:  		Call  YieldTurn ( )
  458:  		Call  SetActorYaw   ( .Actor:Self  180` )
  46C:  		Call  AddActorDecoration    ( .Actor:Self 00000001 00000000 .Decoration:Sweat )
  488:  		Call  SetAnimation  ( .Actor:Self 00000001 00290017 )
  4A0:  		Call  SetActorSpeed ( .Actor:Self *Fixed[6.0] )
  4B4:  		Call  SetGoalToHome ( .Actor:Self )
  4C4:  		Call  RunToGoal     ( .Actor:Self  0` .False )
  4DC:  		Call  SetAnimation  ( .Actor:Self 00000001 00290002 )
  4F4:  		Call  RemoveActorDecoration ( .Actor:Self 00000001 00000000 )
  50C:  		Call  SetActorYaw   ( .Actor:Self  0` )
  520:  		Return
  528:  	EndCaseGroup
  530:  EndSwitch
  538:  Wait  2`
  544:  Call  SetGoalToTarget   ( .Actor:Self )
  554:  Call  EnemyDamageTarget ( .Actor:Self *Var0 ~Flags:DamageType:NoContact 0000FFFF ~DebuffType:Dizzy:2:60` 00000000 00000020 )
  57C:  Switch  *Var0
  588:  	CaseOR  ==  .HitResult:Hit % 0
  594:  	CaseOR  ==  .HitResult:QuakeImmune % 2
  5A0:  		Thread
  5A8:  			Call  WasStatusInflicted    ( .Actor:Self *Var0 )
  5BC:  			If  *Var0  ==  00000001
  5CC:  				Call  MakeLerp      ( 00000000 00000438 0000001E .Easing:CosInOut )
  5E8:  				Label  0
  5F4:  				Call  UpdateLerp ( )
  600:  				Call  SetActorYaw   ( .Actor:Player *Var0 )
  614:  				Wait  1`
  620:  				If  *Var1  ==  00000001
  630:  					Goto  0
  63C:  				EndIf
  644:  			EndIf
  64C:  		EndThread
  654:  		Wait  20`
  660:  		Call  SetAnimation  ( .Actor:Self 00000001 00290008 )
  678:  		Call  RemoveActorDecoration ( .Actor:Self 00000001 00000001 )
  690:  		Wait  10`
  69C:  		Wait  10`
  6A8:  		Call  UseBattleCamPreset    ( 00000002 )
  6B8:  		Call  YieldTurn ( )
  6C4:  		SetConst  *Var0  00000001
  6D4:  		SetConst  *Var1  00290004
  6E4:  		ExecWait  DoReturnHome
  6F0:  		Call  SetAnimation  ( .Actor:Self 00000001 00290002 )
  708:  	EndCaseGroup
  710:  EndSwitch
  718:  Call  EnableIdleScript  ( .Actor:Self 00000001 )
  72C:  Call  UseIdleAnimation  ( .Actor:Self .True )
  740:  Return
  748:  End
}

#new:Script $Script_8021CB70
{
    0:  Call  UseIdleAnimation  ( .Actor:Self .False )
   14:  Call  EnableIdleScript  ( .Actor:Self 00000000 )
   28:  Call  SetActorYaw       ( .Actor:Self  0` )
   3C:  Call  SetTargetActor    ( .Actor:Self .Actor:Player )
   50:  Call  GetActorVar       ( .Actor:Self 00000009 *Var0 )
   68:  Sub   *Var0  00000001
   78:  If  *Var0  >  00000000
   88:  	Call  SetActorVar   ( .Actor:Self 00000009 *Var0 )
   A0:  	Call  AddActorDecoration    ( .Actor:Self 00000001 00000000 .Decoration:Sweat )
   BC:  	Call  SetAnimationRate      ( .Actor:Self 00000001 *Fixed[2.0] )
   D4:  	Wait  30`
   E0:  	Call  SetAnimationRate      ( .Actor:Self 00000001 *Fixed[0.5] )
   F8:  	Call  RemoveActorDecoration ( .Actor:Self 00000001 00000000 )
  110:  Else
  118:  	Call  AddActorDecoration        ( .Actor:Self 00000001 00000000 .Decoration:Sweat )
  134:  	Call  SetAnimationRate  ( .Actor:Self 00000001 *Fixed[2.0] )
  14C:  	Wait  20`
  158:  	Call  SetAnimationRate  ( .Actor:Self 00000001 *Fixed[0.5] )
  170:  	Call  RemoveActorDecoration     ( .Actor:Self 00000001 00000000 )
  188:  	Call  SetActorSounds    ( .Actor:Self .ActorSound:Jump 00000000 00000000 )
  1A4:  	Call  PlaySoundAtActor  ( .Actor:Self .Sound:Jump )
  1B8:  	Call  SetAnimationRate  ( .Actor:Self 00000001 *Fixed[1.0] )
  1D0:  	Call  SetAnimation      ( .Actor:Self 00000001 0029000F )
  1E8:  	Set   *Var0  00000000
  1F8:  	Call  SetActorRotationOffset    ( .Actor:Self 00000000 0000000C 00000000 )
  214:  	Thread
  21C:  		Loop  00000005
  228:  			Add   *Var0  0000000F
  238:  			Call  SetActorRotation  ( .Actor:Self 00000000 00000000 *Var0 )
  254:  			Wait  1`
  260:  		EndLoop
  268:  	EndThread
  270:  	Call  GetActorPos       ( .Actor:Self *Var0 *Var1 *Var2 )
  28C:  	Call  SetGoalPos        ( .Actor:Self *Var0 *Var1 *Var2 )
  2A8:  	Call  SetActorJumpGravity       ( .Actor:Self *Fixed[3.0] )
  2BC:  	Call  JumpToGoal        ( .Actor:Self  8` .False .True .False )
  2DC:  	Call  PlaySoundAtActor  ( .Actor:Self 000020BA )
  2F0:  	Call  SetActorRotationOffset    ( .Actor:Self 00000000 00000000 00000000 )
  30C:  	Call  SetActorRotation  ( .Actor:Self 00000000 00000000 00000000 )
  328:  	Call  SetActorDispOffset        ( .Actor:Self 00000000 00000000 00000000 )
  344:  	Call  SetDefenseTable   ( .Actor:Self 00000001 $DefenseTable_8021A0C0 )
  35C:  	Call  SetTargetOffset   ( .Actor:Self 00000001  -4`  32` )
  378:  	Call  8027D4C8  ( FFFFFF81 00000001 FFFFFFFF FFFFFFFC )
  394:  	Call  SetActorFlagBits  ( .Actor:Self 00000400 .False )
  3AC:  	Call  ResetActorSounds  ( .Actor:Self .ActorSound:Jump )
  3C0:  	Call  GetActorVar       ( .Actor:Self 00000008 *Var0 )
  3D8:  	Switch  *Var0
  3E4:  		Case  ==  00000002
  3F0:  			Call  SetActorVar       ( .Actor:Self 00000008 00000000 )
  408:  			Call  SetIdleAnimations ( .Actor:Self 00000001 $IdleAnimations_8021A1F0 )
  420:  		Case  ==  00000003
  42C:  			Call  SetActorVar       ( .Actor:Self 00000008 00000001 )
  444:  			Call  SetIdleAnimations ( .Actor:Self 00000001 $IdleAnimations_8021A288 )
  45C:  	EndSwitch
  464:  EndIf
  46C:  Call  EnableIdleScript  ( .Actor:Self 00000001 )
  480:  Call  UseIdleAnimation  ( .Actor:Self .True )
  494:  Return
  49C:  End
}

#new:Script $Script_TakeTurn_8021D014
{
    0:  Call  GetBattlePhase    ( *Var0 )
   10:  If  *Var0  ==  00000001
   20:  	Call  SetActorVar   ( .Actor:Self 00000008 00000000 )
   38:  EndIf
   40:  Call  GetActorVar   ( .Actor:Self 00000008 *Var0 )
   58:  Switch  *Var0
   64:  	Case  ==  00000000
   70:  		ExecWait  $Script_8021BB78
   7C:  		Call  RandInt   ( 000003E8 *Var0 )
   90:  		If  *Var0  <  0000012C
   A0:  			Call  SetActorVar       ( .Actor:Self 00000008 00000000 )
   B8:  			Call  SetIdleAnimations ( .Actor:Self 00000001 $IdleAnimations_8021A1F0 )
   D0:  		Else
   D8:  			Call  SetActorVar       ( .Actor:Self 00000008 00000001 )
   F0:  			Call  SetIdleAnimations ( .Actor:Self 00000001 $IdleAnimations_8021A288 )
  108:  		EndIf
  110:  	Case  ==  00000001
  11C:  		ExecWait  $Script_8021C420
  128:  		Call  RandInt   ( 000003E8 *Var0 )
  13C:  		If  *Var0  <  0000012C
  14C:  			Call  SetActorVar       ( .Actor:Self 00000008 00000000 )
  164:  			Call  SetIdleAnimations ( .Actor:Self 00000001 $IdleAnimations_8021A1F0 )
  17C:  		Else
  184:  			Call  SetActorVar       ( .Actor:Self 00000008 00000001 )
  19C:  			Call  SetIdleAnimations ( .Actor:Self 00000001 $IdleAnimations_8021A288 )
  1B4:  		EndIf
  1BC:  	CaseOR  ==  00000002
  1C8:  	CaseOR  ==  00000003
  1D4:  		ExecWait  $Script_8021CB70
  1E0:  	EndCaseGroup
  1E8:  EndSwitch
  1F0:  Return
  1F8:  End
}

PADDING: 8021D214 to 8021D220 (005F16A4 to 005F16B0)
00000000 00000000 00000000

#new:DefenseTable $DefenseTable_8021D220
{
	.Element:Normal 00000002
	.Element:Hammer 00000002
	.Element:Jump   00000002
	.Element:Water  00000002
	.Element:Blast  00000002
	.Element:End
}

#new:DefenseTable $DefenseTable_8021D24C
{
	.Element:Normal 00000002
	.Element:End
}

#new:DefenseTable $DefenseTable_8021D258
{
	.Element:Normal 00000000
	.Element:End
}

#new:StatusTable $StatusTable_8021D264
{
	.Status:Normal      0`
	.Status:Default     0`
	.Status:Sleep      80`
	.Status:Poison     60`
	.Status:Frozen    100`
	.Status:Dizzy      50`
	.Status:Fear        0`
	.Status:Static     80`
	.Status:Paralyze   90`
	.Status:Shrink     75`
	.Status:Stop       90`
	.Status:DefaultTurnMod    0`
	.Status:SleepTurnMod      0`
	.Status:PoisonTurnMod     0`
	.Status:FrozenTurnMod     0`
	.Status:DizzyTurnMod     -1`
	.Status:FearTurnMod       0`
	.Status:StaticTurnMod     0`
	.Status:ParalyzeTurnMod   1`
	.Status:ShrinkTurnMod     0`
	.Status:StopTurnMod       0`
	.Status:End
}

#new:StatusTable $StatusTable_8021D310
{
	.Status:Normal      0`
	.Status:Default     0`
	.Status:Sleep      80`
	.Status:Poison     60`
	.Status:Frozen    100`
	.Status:Dizzy      90`
	.Status:Fear        0`
	.Status:Static     80`
	.Status:Paralyze   90`
	.Status:Shrink     75`
	.Status:Stop       90`
	.Status:DefaultTurnMod    0`
	.Status:SleepTurnMod      0`
	.Status:PoisonTurnMod     0`
	.Status:FrozenTurnMod     0`
	.Status:DizzyTurnMod      0`
	.Status:FearTurnMod       0`
	.Status:StaticTurnMod     0`
	.Status:ParalyzeTurnMod   1`
	.Status:ShrinkTurnMod     0`
	.Status:StopTurnMod       0`
	.Status:End
}

#new:PartsTable $PartsTable_8021D3BC
{
	00020001 01000000 FE2400FF $IdleAnimations_8021F1F0 $DefenseTable_8021D220 00001000 00000000 00F90000 00000000
	00800000 02000000 FC2400FF $IdleAnimations_8021D450 $DefenseTable_8021D24C 00004000 00000000 02F20000 00000000
	00020001 03000000 002000FF $IdleAnimations_8021D4E8 $DefenseTable_8021D220 00000000 00000000 00F60000 00000000
}

#new:Actor $DarkParatroopa
{
	% stats
	[Index]         6b
	[Level]        18`b
	[MaxHP]         8`b
	[Coins]         2`b
	[Flags]       00000200
	[StatusTable] $StatusTable_8021D310
	% ai
	[PartsCount]    3`s
	[PartsTable]  $PartsTable_8021D3BC
	[Script]      $Script_Init_8021D55C
	% move effectiveness
	[Escape]       50`b
	[Item]         70`b
	[AirLift]      90`b
	[Hurricane]    80`b % Bow's "Spook" as well
	[UpAndAway]    95`b
	[PowerBounce]  85`b
	[SpinSmash]     0`b % weight (0-4)
	% ui positions
	[Size]         50`b  38`b % width height
	[HealthBar]     0`b   0`b % dx dy
	[StatusTurn]  -10`b  29`b % dx dy
	[StatusIcon]    8`b  30`b % dx dy
}

#new:IdleAnimations $IdleAnimations_8021D450
{
	.Status:Normal    002A0001
	.Status:Stone     002A0000
	.Status:Sleep     002A0012
	.Status:Poison    002A0000
	.Status:Stop      002A0000
	.Status:Static    002A0001
	.Status:Paralyze  002A0000
	.Status:Dizzy     002A0013
	.Status:Fear      002A0013
	.Status:End
}

#new:IdleAnimations $IdleAnimations_8021D49C
{
	.Status:Normal    002A0001
	.Status:Stone     002A0000
	.Status:Sleep     002A0012
	.Status:Poison    002A0000
	.Status:Stop      002A0000
	.Status:Static    002A0001
	.Status:Paralyze  002A0000
	.Status:Dizzy     002A0013
	.Status:Fear      002A0013
	.Status:End
}

#new:IdleAnimations $IdleAnimations_8021D4E8
{
	.Status:Normal    002A000F
	.Status:Stone     002A0000
	.Status:Sleep     002A0012
	.Status:Poison    002A0000
	.Status:Stop      002A0000
	.Status:Static    002A000F
	.Status:Paralyze  002A0000
	.Status:Dizzy     002A0013
	.Status:Fear      002A0013
	.Status:End
}

#new:Script $Script_NextTurn_8021D534
{
    0:  Call  SetActorVar   ( .Actor:Self 00000000 00000000 )
   18:  Return
   20:  End
}

#new:Script $Script_Init_8021D55C
{
    0:  Call  BindTakeTurn  ( .Actor:Self $Script_TakeTurn_8021E174 )
   14:  Call  BindIdle      ( .Actor:Self $Script_Idle_8021D6AC )
   28:  Call  BindHandleEvent   ( .Actor:Self $Script_HandleEvent_8021DA3C )
   3C:  Call  BindNextTurn  ( .Actor:Self $Script_NextTurn_8021D534 )
   50:  Call  SetActorVar   ( .Actor:Self 00000000 00000000 )
   68:  Return
   70:  End
}

#new:Script $Script_8021D5D4
{
    0:  If  *Var1  &  00041000
   10:  	Call  SetTargetOffset       ( .Actor:Self 00000002  0`  25` )
   2C:  	Call  8027D4C8  ( FFFFFF81 00000002 00000003 FFFFFFFA )
   48:  	Call  $Function_80218128    ( FFFFFFED 00000019 00000004 0000001C )
   64:  Else
   6C:  	Call  SetTargetOffset       ( .Actor:Self 00000002  -2`  36` )
   88:  	Call  8027D4C8  ( FFFFFF81 00000002 00000000 FFFFFFF9 )
   A4:  	Call  $Function_80218128    ( FFFFFFF6 0000001D 00000008 0000001E )
   C0:  EndIf
   C8:  Return
   D0:  End
}

#new:Script $Script_Idle_8021D6AC
{
    0:  Label  A
    C:  Call  RandInt   ( 00000050 *Var0 )
   20:  Add   *Var0  00000050
   30:  Loop  *Var0
   3C:  	Label  0
   48:  	Call  GetStatusFlags    ( .Actor:Self *Var1 )
   5C:  	ExecWait  $Script_8021D5D4
   68:  	If  *Var1  &  0035D000
   78:  		Wait  1`
   84:  		Goto  0
   90:  	EndIf
   98:  	Wait  1`
   A4:  EndLoop
   AC:  Call  GetActorPos       ( .Actor:Self *Var0 *Var1 *Var2 )
   C8:  Add   *Var0  00000005
   D8:  Call  SetActorIdleSpeed ( .Actor:Self *Fixed[0.6] )
   EC:  Call  SetIdleAnimations ( .Actor:Self 00000002 $IdleAnimations_8021D49C )
  104:  Call  SetIdleGoal       ( .Actor:Self *Var0 *Var1 *Var2 )
  120:  Call  IdleFlyToGoal     ( .Actor:Self  0`  -5` .Easing:Linear )
  13C:  Call  SetIdleAnimations ( .Actor:Self 00000001 $IdleAnimations_8021D450 )
  154:  Loop  00000014
  160:  	Label  1
  16C:  	Call  GetStatusFlags    ( .Actor:Self *Var1 )
  180:  	ExecWait  $Script_8021D5D4
  18C:  	If  *Var1  &  0035D000
  19C:  		Wait  1`
  1A8:  		Goto  1
  1B4:  	EndIf
  1BC:  	Wait  1`
  1C8:  EndLoop
  1D0:  Call  GetActorPos       ( .Actor:Self *Var0 *Var1 *Var2 )
  1EC:  Sub   *Var0  00000005
  1FC:  Call  SetActorIdleSpeed ( .Actor:Self *Fixed[0.6] )
  210:  Call  SetIdleAnimations ( .Actor:Self 00000002 $IdleAnimations_8021D49C )
  228:  Call  SetIdleGoal       ( .Actor:Self *Var0 *Var1 *Var2 )
  244:  Call  IdleFlyToGoal     ( .Actor:Self  0`  -5` .Easing:Linear )
  260:  Call  SetIdleAnimations ( .Actor:Self 00000002 $IdleAnimations_8021D450 )
  278:  Loop  00000028
  284:  	Label  2
  290:  	Call  GetStatusFlags    ( .Actor:Self *Var1 )
  2A4:  	ExecWait  $Script_8021D5D4
  2B0:  	If  *Var1  &  0035D000
  2C0:  		Wait  1`
  2CC:  		Goto  2
  2D8:  	EndIf
  2E0:  	Wait  1`
  2EC:  EndLoop
  2F4:  Goto  A
  300:  Return
  308:  End
}

#new:Script $Script_8021D9BC
{
    0:  Call  SetAnimation  ( .Actor:Self 00000002 002A0003 )
   18:  Call  SetGoalToHome ( .Actor:Self )
   28:  Call  SetActorSpeed ( .Actor:Self *Fixed[8.0] )
   3C:  Call  FlyToGoal     ( .Actor:Self  0`  1` .Easing:SinOut )
   58:  Call  SetAnimation  ( .Actor:Self 00000002 002A0001 )
   70:  Return
   78:  End
}

#new:Script $Script_HandleEvent_8021DA3C
{
    0:  Call  UseIdleAnimation  ( .Actor:Self .False )
   14:  Call  EnableIdleScript  ( .Actor:Self 00000000 )
   28:  Call  GetLastEvent      ( .Actor:Self *Var0 )
   3C:  Switch  *Var0
   48:  	Case  ==  .Event:HitCombo % 9
   54:  		Call  SetActorVar   ( .Actor:Self 00000000 00000001 )
   6C:  		SetConst  *Var0  00000002
   7C:  		SetConst  *Var1  002A0007
   8C:  		ExecWait  DoNormalHit
   98:  	Case  ==  .Event:Hit % A
   A4:  		SetConst  *Var0  00000002
   B4:  		SetConst  *Var1  002A0007
   C4:  		ExecWait  DoNormalHit
   D0:  		Call  GetBattlePhase    ( *Var0 )
   E0:  		If  *Var0  ==  00000001
   F0:  			Call  GetEncounterState ( *Var0 )
  100:  			If  *Var0  ==  00000004
  110:  				ExecWait  $Script_8021EC2C
  11C:  			EndIf
  124:  		EndIf
  12C:  	Case  ==  .Event:SpinSmashHit % B
  138:  		SetConst  *Var0  00000002
  148:  		SetConst  *Var1  002A0007
  158:  		ExecWait  DoSpinSmashHit
  164:  	Case  ==  .Event:SpinSmashDeath % 21
  170:  		SetConst  *Var0  00000002
  180:  		SetConst  *Var1  002A0007
  190:  		ExecWait  DoSpinSmashHit
  19C:  		SetConst  *Var0  00000002
  1AC:  		SetConst  *Var1  002A0006
  1BC:  		ExecWait  DoDeath
  1C8:  		Return
  1D0:  	Case  ==  .Event:BurnHit % E
  1DC:  		SetConst  *Var0  00000002
  1EC:  		SetConst  *Var1  002A0008
  1FC:  		SetConst  *Var2  002A0009
  20C:  		ExecWait  DoBurnHit
  218:  	Case  ==  .Event:BurnDeath % 24
  224:  		SetConst  *Var0  00000002
  234:  		SetConst  *Var1  002A0008
  244:  		SetConst  *Var2  002A0009
  254:  		ExecWait  DoBurnHit
  260:  		SetConst  *Var0  00000002
  270:  		SetConst  *Var1  002A0009
  280:  		ExecWait  DoDeath
  28C:  		Return
  294:  	Case  ==  .Event:FallTrigger % C
  2A0:  		SetConst  *Var0  00000002
  2B0:  		SetConst  *Var1  002A0007
  2C0:  		ExecWait  DoNormalHit
  2CC:  		ExecWait  $Script_8021EC2C
  2D8:  	Case  ==  0000000F % F
  2E4:  		SetConst  *Var0  00000001
  2F4:  		SetConst  *Var1  002A0008
  304:  		SetConst  *Var1  002A0009
  314:  		ExecWait  DoBurnHit
  320:  		ExecWait  $Script_8021EC2C
  32C:  	Case  ==  .Event:ShockHit % 2F
  338:  		SetConst  *Var0  00000001
  348:  		SetConst  *Var1  002A0007
  358:  		ExecWait  DoShockHit
  364:  		SetConst  *Var0  00000001
  374:  		SetConst  *Var1  002A0006
  384:  		ExecWait  DoJumpBack
  390:  		ExecWait  $Script_8021D9BC
  39C:  	Case  ==  .Event:ShockDeath % 26
  3A8:  		SetConst  *Var0  00000002
  3B8:  		SetConst  *Var1  002A0007
  3C8:  		ExecWait  DoShockHit
  3D4:  		SetConst  *Var0  00000002
  3E4:  		SetConst  *Var1  002A0006
  3F4:  		ExecWait  DoDeath
  400:  		Return
  408:  	Case  ==  00000017 % 17
  414:  		Call  SetActorVar   ( .Actor:Self 00000000 00000001 )
  42C:  		SetConst  *Var0  00000002
  43C:  		SetConst  *Var1  002A000B
  44C:  		ExecWait  DoImmune
  458:  	CaseOR  ==  .Event:Immune % 19
  464:  	CaseOR  ==  .Event:AirLiftFailed % 1F
  470:  		SetConst  *Var0  00000002
  480:  		SetConst  *Var1  002A000B
  490:  		ExecWait  DoImmune
  49C:  		Call  GetBattlePhase    ( *Var0 )
  4AC:  		If  *Var0  ==  00000001
  4BC:  			Call  GetEncounterState ( *Var0 )
  4CC:  			If  *Var0  ==  00000004
  4DC:  				ExecWait  $Script_8021EC2C
  4E8:  			EndIf
  4F0:  		EndIf
  4F8:  	EndCaseGroup
  500:  	Case  ==  .Event:Death % 20
  50C:  		SetConst  *Var0  00000002
  51C:  		SetConst  *Var1  002A0007
  52C:  		ExecWait  DoNormalHit
  538:  		Wait  10`
  544:  		SetConst  *Var0  00000002
  554:  		SetConst  *Var1  002A0006
  564:  		ExecWait  DoDeath
  570:  		Return
  578:  	Case  ==  .Event:BeginFirstStrike % 38
  584:  		Call  SetActorPos       ( .Actor:Self  20`  0`  0` )
  5A0:  		Call  HPBarToCurrent    ( .Actor:Self )
  5B0:  	Case  ==  .Event:EndFirstStrike % 35
  5BC:  		ExecWait  $Script_8021D9BC
  5C8:  		Call  HPBarToHome   ( .Actor:Self )
  5D8:  	Case  ==  .Event:RecoverStatus % 31
  5E4:  		SetConst  *Var0  00000002
  5F4:  		SetConst  *Var1  002A0001
  604:  		ExecWait  DoRecover
  610:  	Case  ==  .Event:ScareAway % 39
  61C:  		Call  SetActorFlagBits  ( .Actor:Self 00000200 .False )
  634:  		SetConst  *Var0  00000002
  644:  		SetConst  *Var1  002A0003
  654:  		SetConst  *Var2  002A0007
  664:  		ExecWait  DoScareAway
  670:  		Return
  678:  	Case  ==  .Event:BeginAirLift % 3A
  684:  		SetConst  *Var0  00000002
  694:  		SetConst  *Var1  002A0003
  6A4:  		ExecWait  DoAirLift
  6B0:  	Case  ==  .Event:BlowAway % 16
  6BC:  		SetConst  *Var0  00000002
  6CC:  		SetConst  *Var1  002A0007
  6DC:  		ExecWait  DoBlowAway
  6E8:  		Return
  6F0:  	Default
  6F8:  EndSwitch
  700:  Call  EnableIdleScript  ( .Actor:Self FFFFFFFF )
  714:  Call  UseIdleAnimation  ( .Actor:Self .True )
  728:  Return
  730:  End
}

#new:Script $Script_TakeTurn_8021E174
{
    0:  Call  UseIdleAnimation  ( .Actor:Self .False )
   14:  Call  EnableIdleScript  ( .Actor:Self 00000000 )
   28:  Call  SetTargetActor    ( .Actor:Self .Actor:Player )
   3C:  Call  SetGoalToTarget   ( .Actor:Self )
   4C:  Call  UseBattleCamPreset    ( 00000005 )
   5C:  Call  BattleCamTargetActor  ( .Actor:Self )
   6C:  Call  SetTargetActor    ( .Actor:Self .Actor:Player )
   80:  Call  SetAnimation      ( .Actor:Self 00000002 002A0003 )
   98:  Call  SetGoalToTarget   ( .Actor:Self )
   A8:  Call  AddGoalPos        ( .Actor:Self  40`  30`  0` )
   C4:  Call  SetActorSpeed     ( .Actor:Self *Fixed[7.0] )
   D8:  Call  FlyToGoal ( .Actor:Self  0`  -16` .Easing:Linear )
   F4:  Call  8024E664  ( 00000001 )
  104:  Wait  5`
  110:  Call  EnemyTestTarget   ( .Actor:Self *Var0 ~Flags:DamageType:0 00000000 00000003 00000010 )
  134:  Switch  *Var0
  140:  	CaseOR  ==  .HitResult:Miss % 6
  14C:  	CaseOR  ==  .HitResult:Lucky % 5
  158:  		Set   *VarA  *Var0
  168:  		Call  PlaySoundAtActor  ( .Actor:Self 000020E0 )
  17C:  		Call  SetActorSounds    ( .Actor:Self .ActorSound:Fly 00000000 00000000 )
  198:  		Call  SetAnimation  ( .Actor:Self 00000002 002A0004 )
  1B0:  		Call  GetActorPos   ( .Actor:Self *Var0 *Var1 *Var2 )
  1CC:  		Call  SetGoalPos    ( .Actor:Self *Var0 *Var1 *Var2 )
  1E8:  		Call  AddGoalPos    ( .Actor:Self  6`  6`  0` )
  204:  		Call  SetActorSpeed ( .Actor:Self *Fixed[2.0] )
  218:  		Call  FlyToGoal     ( .Actor:Self  0`  0` .Easing:Linear )
  234:  		Wait  6`
  240:  		Call  PlaySoundAtActor  ( .Actor:Self 000002C1 )
  254:  		Call  SetActorSounds    ( .Actor:Self .ActorSound:Fly 00000000 00000000 )
  270:  		Call  GetActorPos   ( .Actor:Player *Var0 *Var1 *Var2 )
  28C:  		Sub   *Var0  00000019
  29C:  		Set   *Var1  00000000
  2AC:  		Call  SetGoalPos    ( .Actor:Self *Var0 *Var1 *Var2 )
  2C8:  		Call  SetActorSpeed ( .Actor:Self *Fixed[10.0] )
  2DC:  		Call  SetAnimation  ( .Actor:Self 00000002 002A000C )
  2F4:  		Call  FlyToGoal     ( .Actor:Self  0`  0` .Easing:Linear )
  310:  		Call  GetActorPos   ( .Actor:Self *Var0 *Var1 *Var2 )
  32C:  		Sub   *Var0  0000001E
  33C:  		Call  SetGoalPos    ( .Actor:Self *Var0 *Var1 *Var2 )
  358:  		Call  SetActorJumpGravity   ( .Actor:Self *Fixed[4.0] )
  36C:  		Thread
  374:  			Call  SetActorRotationOffset    ( .Actor:Self 00000000 0000000A 00000000 )
  390:  			Set   *Var0  00000000
  3A0:  			Loop  00000008
  3AC:  				Add   *Var0  0000005A
  3BC:  				If  *Var0  >=  00000168
  3CC:  					Sub   *Var0  00000168
  3DC:  				EndIf
  3E4:  				Call  SetActorRotation  ( .Actor:Self 00000000 00000000 *Var0 )
  400:  				Wait  1`
  40C:  			EndLoop
  414:  			Call  SetActorRotation  ( .Actor:Self 00000000 00000000 00000000 )
  430:  			Call  SetActorRotationOffset    ( .Actor:Self 00000000 FFFFFFF6 00000000 )
  44C:  		EndThread
  454:  		Call  JumpToGoal    ( .Actor:Self  6` .False .True .False )
  474:  		Call  GetActorPos   ( .Actor:Self *Var0 *Var1 *Var2 )
  490:  		Sub   *Var0  0000001E
  4A0:  		Call  SetGoalPos    ( .Actor:Self *Var0 *Var1 *Var2 )
  4BC:  		Call  SetActorJumpGravity   ( .Actor:Self *Fixed[4.0] )
  4D0:  		Call  SetAnimation  ( .Actor:Self 00000002 002A0007 )
  4E8:  		Call  JumpToGoal    ( .Actor:Self  6` .False .True .False )
  508:  		Call  GetActorPos   ( .Actor:Self *Var0 *Var1 *Var2 )
  524:  		Sub   *Var0  0000001E
  534:  		Call  SetGoalPos    ( .Actor:Self *Var0 *Var1 *Var2 )
  550:  		Call  SetActorJumpGravity   ( .Actor:Self *Fixed[4.0] )
  564:  		Call  SetAnimation  ( .Actor:Self 00000002 002A0007 )
  57C:  		Call  JumpToGoal    ( .Actor:Self  6` .False .True .False )
  59C:  		If  *VarA  ==  .HitResult:Lucky % 5
  5AC:  			Call  EnemyTestTarget   ( .Actor:Self *Var0 ~Flags:DamageType:TriggerLucky 00000000 00000000 00000000 )
  5D0:  		EndIf
  5D8:  		Call  GetActorPos       ( .Actor:Self *Var0 *Var1 *Var2 )
  5F4:  		Add   *Var1  0000001E
  604:  		Call  SetActorPos       ( .Actor:Self *Var0 *Var1 *Var2 )
  620:  		Wait  20`
  62C:  		Call  UseBattleCamPreset    ( 00000002 )
  63C:  		Call  YieldTurn ( )
  648:  		Call  ResetAllActorSounds   ( .Actor:Self )
  658:  		Call  AddActorDecoration    ( .Actor:Self 00000002 00000000 .Decoration:Sweat )
  674:  		Call  SetActorYaw       ( .Actor:Self  180` )
  688:  		ExecWait  $Script_8021D9BC
  694:  		Call  SetActorYaw       ( .Actor:Self  0` )
  6A8:  		Call  RemoveActorDecoration ( .Actor:Self 00000002 00000000 )
  6C0:  		Call  EnableIdleScript  ( .Actor:Self FFFFFFFF )
  6D4:  		Call  UseIdleAnimation  ( .Actor:Self .True )
  6E8:  		Return
  6F0:  	EndCaseGroup
  6F8:  EndSwitch
  700:  Call  PlaySoundAtActor  ( .Actor:Self 000020E0 )
  714:  Call  SetActorSounds    ( .Actor:Self .ActorSound:Fly 00000000 00000000 )
  730:  Call  SetAnimation  ( .Actor:Self 00000002 002A0004 )
  748:  Call  GetActorPos   ( .Actor:Self *Var0 *Var1 *Var2 )
  764:  Call  SetGoalPos    ( .Actor:Self *Var0 *Var1 *Var2 )
  780:  Call  AddGoalPos    ( .Actor:Self  6`  6`  0` )
  79C:  Call  SetActorSpeed ( .Actor:Self *Fixed[2.0] )
  7B0:  Call  FlyToGoal     ( .Actor:Self  0`  0` .Easing:Linear )
  7CC:  Wait  6`
  7D8:  Call  PlaySoundAtActor  ( .Actor:Self 000002C1 )
  7EC:  Call  SetActorSounds    ( .Actor:Self .ActorSound:Fly 00000000 00000000 )
  808:  Call  SetGoalToTarget   ( .Actor:Self )
  818:  Call  SetActorSpeed ( .Actor:Self *Fixed[10.0] )
  82C:  Call  SetAnimation  ( .Actor:Self 00000002 002A000C )
  844:  Call  FlyToGoal     ( .Actor:Self  0`  0` .Easing:Linear )
  860:  Wait  2`
  86C:  Call  EnemyDamageTarget ( .Actor:Self *Var0 ~Flags:DamageType:0 0000FFFF 00000000 00000003 00000020 )
  894:  Switch  *Var0
  8A0:  	CaseOR  ==  .HitResult:Hit % 0
  8AC:  	CaseOR  ==  .HitResult:QuakeImmune % 2
  8B8:  		Call  UseBattleCamPreset    ( 00000002 )
  8C8:  		Call  SetGoalToTarget   ( .Actor:Self )
  8D8:  		Call  AddGoalPos        ( .Actor:Self  40`  30`  0` )
  8F4:  		Call  SetActorSpeed     ( .Actor:Self *Fixed[6.0] )
  908:  		Call  SetAnimation      ( .Actor:Self 00000002 002A000D )
  920:  		Thread
  928:  			Call  SetActorRotationOffset    ( .Actor:Self 00000000 0000000A 00000000 )
  944:  			Set   *Var0  00000000
  954:  			Loop  0000000C
  960:  				Sub   *Var0  0000005A
  970:  				If  *Var0  <  00000000
  980:  					Add   *Var0  00000168
  990:  				EndIf
  998:  				Call  SetActorRotation  ( .Actor:Self 00000000 00000000 *Var0 )
  9B4:  				Wait  1`
  9C0:  			EndLoop
  9C8:  			Call  SetActorRotation  ( .Actor:Self 00000000 00000000 00000000 )
  9E4:  			Call  SetActorRotationOffset    ( .Actor:Self 00000000 FFFFFFF6 00000000 )
  A00:  			Call  SetAnimation  ( .Actor:Self 00000002 002A0001 )
  A18:  		EndThread
  A20:  		Call  FlyToGoal ( .Actor:Self  0`  30` .Easing:Linear )
  A3C:  		Wait  10`
  A48:  		Call  YieldTurn ( )
  A54:  		Call  ResetAllActorSounds   ( .Actor:Self )
  A64:  		ExecWait  $Script_8021D9BC
  A70:  	EndCaseGroup
  A78:  EndSwitch
  A80:  Call  EnableIdleScript  ( .Actor:Self FFFFFFFF )
  A94:  Call  UseIdleAnimation  ( .Actor:Self .True )
  AA8:  Return
  AB0:  End
}

#new:Script $Script_8021EC2C
{
    0:  Call  SetPartDispOffset ( .Actor:Self 00000002 00000000 00000000 00000000 )
   20:  Call  8027D32C      ( FFFFFF81 )
   30:  Call  SetPartFlags  ( .Actor:Self 00000002 00020005 )
   48:  Call  SetPartFlags  ( .Actor:Self 00000003 00120004 )
   60:  Call  SetPartFlags  ( .Actor:Self 00000001 00800004 )
   78:  Call  GetActorPos   ( .Actor:Self *Var0 *Var1 *Var2 )
   94:  Add   *Var1  00000008
   A4:  Sub   *Var2  00000002
   B4:  Call  SetPartPos    ( .Actor:Self 00000003 *Var0 *Var1 *Var2 )
   D4:  Call  SetAnimation  ( .Actor:Self 00000001 0029000B )
   EC:  Call  SetActorSounds    ( .Actor:Self .ActorSound:Jump 00000301 00000000 )
  108:  Call  GetActorVar   ( .Actor:Self 00000000 *VarA )
  120:  If  *VarA  ==  00000000
  130:  	Call  GetActorPos   ( .Actor:Self *Var0 *Var1 *Var2 )
  14C:  	Set   *Var1  00000000
  15C:  	Call  SetActorJumpGravity   ( .Actor:Self *Fixed[0.8] )
  170:  	Call  SetGoalPos    ( .Actor:Self *Var0 *Var1 *Var2 )
  18C:  	Call  JumpToGoal    ( .Actor:Self  15` .False .True .False )
  1AC:  	Call  $Function_802180D0    ( 00000080 00000007 )
  1C0:  	Thread
  1C8:  		Call  ShakeCam  ( .Cam:Battle 00000000  5` *Fixed[0.3] )
  1E4:  	EndThread
  1EC:  	Call  ResetActorSounds  ( .Actor:Self .ActorSound:Jump )
  200:  	Call  SetGoalPos    ( .Actor:Self *Var0 *Var1 *Var2 )
  21C:  	Call  JumpToGoal    ( .Actor:Self  10` .False .True .False )
  23C:  	Call  SetGoalPos    ( .Actor:Self *Var0 *Var1 *Var2 )
  258:  	Call  JumpToGoal    ( .Actor:Self  5` .False .True .False )
  278:  	Loop  0000000A
  284:  		Call  SetPartFlagBits   ( .Actor:Self 00000003 00000001 .True )
  2A0:  		Wait  1`
  2AC:  		Call  SetPartFlagBits   ( .Actor:Self 00000003 00000001 .False )
  2C8:  		Wait  1`
  2D4:  	EndLoop
  2DC:  	Call  SetPartFlagBits   ( .Actor:Self 00000003 00000001 .True )
  2F8:  Else
  300:  	Call  GetActorPos   ( .Actor:Self *Var0 *Var1 *Var2 )
  31C:  	Set   *Var1  00000000
  32C:  	Call  SetActorJumpGravity   ( .Actor:Self *Fixed[0.8] )
  340:  	Call  SetGoalPos    ( .Actor:Self *Var0 *Var1 *Var2 )
  35C:  	Call  JumpToGoal    ( .Actor:Self  15` .False .True .False )
  37C:  	Thread
  384:  		Loop  0000000A
  390:  			Call  SetPartFlagBits   ( .Actor:Self 00000003 00000001 .True )
  3AC:  			Wait  1`
  3B8:  			Call  SetPartFlagBits   ( .Actor:Self 00000003 00000001 .False )
  3D4:  			Wait  1`
  3E0:  		EndLoop
  3E8:  		Call  SetPartFlagBits   ( .Actor:Self 00000003 00000001 .True )
  404:  	EndThread
  40C:  	Call  $Function_802180D0    ( 00000096 00000007 )
  420:  	Thread
  428:  		Call  ShakeCam  ( .Cam:Battle 00000000  5` *Fixed[0.3] )
  444:  	EndThread
  44C:  	Call  ResetActorSounds  ( .Actor:Self .ActorSound:Jump )
  460:  EndIf
  468:  Call  GetIndexFromHome  ( .Actor:Self *Var0 )
  47C:  Mod   *Var0  00000004
  48C:  Call  SetGoalToIndex    ( .Actor:Self *Var0 )
  4A0:  Call  GetGoalPos        ( .Actor:Self *Var0 *Var1 *Var2 )
  4BC:  Call  SetHomePos        ( .Actor:Self *Var0 *Var1 *Var2 )
  4D8:  Call  SetAnimation      ( .Actor:Self 00000001 00290001 )
  4F0:  Call  SetActorFlagBits  ( .Actor:Self 00000200 .False )
  508:  Call  SetStatusTable    ( .Actor:Self $StatusTable_8021D264 )
  51C:  Call  BindNextTurn      ( .Actor:Self 00000000 )
  530:  ExecWait  $Script_8021F36C
  53C:  Call  SetActorType      ( .Actor:Self 00000005 )
  550:  Call  SetActorFlagBits  ( .Actor:Self 00001000 .True )
  568:  Call  HPBarToHome       ( .Actor:Self )
  578:  Call  ResetAllActorSounds   ( .Actor:Self )
  588:  If  *VarA  !=  00000000
  598:  	Call  DispatchEvent ( .Actor:Self .Event:FlipTrigger )
  5AC:  EndIf
  5B4:  Return
  5BC:  End
}

#new:IdleAnimations $IdleAnimations_8021F1F0
{
	.Status:Normal    00290001
	.Status:Stone     00290000
	.Status:Sleep     00290011
	.Status:Poison    00290001
	.Status:Stop      00290000
	.Status:Static    00290001
	.Status:Paralyze  00290000
	.Status:Dizzy     00290013
	.Status:Fear      00290013
	.Status:End
}

#new:IdleAnimations $IdleAnimations_8021F23C
{
	.Status:Normal    00290003
	.Status:Stone     00290000
	.Status:Sleep     00290011
	.Status:Poison    00290003
	.Status:Stop      00290000
	.Status:Static    00290003
	.Status:Paralyze  00290000
	.Status:Dizzy     00290013
	.Status:Fear      00290013
	.Status:End
}

#new:IdleAnimations $IdleAnimations_8021F288
{
	.Status:Normal    00290002
	.Status:Stone     00290000
	.Status:Sleep     00290011
	.Status:Poison    00290002
	.Status:Stop      00290000
	.Status:Static    00290002
	.Status:Paralyze  00290000
	.Status:Dizzy     00290013
	.Status:Fear      00290013
	.Status:End
}

#new:IdleAnimations $IdleAnimations_8021F2D4
{
	.Status:Normal    00290003
	.Status:Stone     00290000
	.Status:Sleep     00290011
	.Status:Poison    00290003
	.Status:Stop      00290000
	.Status:Static    00290003
	.Status:Paralyze  00290000
	.Status:Dizzy     00290013
	.Status:Fear      00290013
	.Status:End
}

#new:IdleAnimations $IdleAnimations_8021F320
{
	.Status:Normal    0029000F
	.Status:Stone     00290010
	.Status:Sleep     00290012
	.Status:Poison    0029000F
	.Status:Stop      00290010
	.Status:Static    0029000F
	.Status:Paralyze  00290010
	.Status:Dizzy     00290014
	.Status:Fear      00290014
	.Status:End
}

#new:Script $Script_8021F36C
{
    0:  Call  BindTakeTurn  ( .Actor:Self $Script_TakeTurn_80222014 )
   14:  Call  BindIdle      ( .Actor:Self $Script_Idle_8021F5E4 )
   28:  Call  BindHandleEvent   ( .Actor:Self $Script_HandleEvent_8021FE4C )
   3C:  Call  RandInt       ( 000003E8 *Var0 )
   50:  If  *Var0  <  0000012C
   60:  	Call  SetActorVar   ( .Actor:Self 00000008 00000000 )
   78:  Else
   80:  	Call  SetActorVar       ( .Actor:Self 00000008 00000001 )
   98:  	Call  SetIdleAnimations ( .Actor:Self 00000001 $IdleAnimations_8021F288 )
   B0:  	Call  SetAnimation      ( .Actor:Self 00000001 00290002 )
   C8:  EndIf
   D0:  Call  SetActorVar   ( .Actor:Self 00000001 00000000 )
   E8:  Return
   F0:  End
}

#new:Script $Script_8021F464
{
    0:  Switch  *Var0
    C:  	CaseOR  ==  00000000
   18:  	CaseOR  ==  00000001
   24:  		If  *Var1  &  00041000
   34:  			Call  SetTargetOffset       ( .Actor:Self 00000001  -5`  15` )
   50:  			Call  8027D4C8  ( FFFFFF81 00000001 00000000 00000000 )
   6C:  			Call  $Function_80218128    ( FFFFFFF6 00000014 0000000A 00000014 )
   88:  		Else
   90:  			Call  SetTargetOffset       ( .Actor:Self 00000001  -4`  32` )
   AC:  			Call  8027D4C8  ( FFFFFF81 00000001 FFFFFFFF FFFFFFFC )
   C8:  			Call  $Function_80218128    ( FFFFFFF1 00000020 00000005 00000020 )
   E4:  		EndIf
   EC:  	EndCaseGroup
   F4:  	CaseOR  ==  00000002
  100:  	CaseOR  ==  00000003
  10C:  		Call  SetTargetOffset       ( .Actor:Self 00000001  -5`  15` )
  128:  		Call  8027D4C8  ( FFFFFF81 00000001 00000000 00000000 )
  144:  		Call  $Function_80218128    ( FFFFFFF6 00000014 0000000A 00000014 )
  160:  	EndCaseGroup
  168:  EndSwitch
  170:  Return
  178:  End
}

#new:Script $Script_Idle_8021F5E4
{
    0:  Label  0
    C:  Call  RandInt   ( 00000050 *VarA )
   20:  Add   *VarA  00000050
   30:  Loop  *VarA
   3C:  	Label  1
   48:  	Call  GetActorVar       ( .Actor:Self 00000008 *Var0 )
   60:  	Call  GetStatusFlags    ( .Actor:Self *Var1 )
   74:  	ExecWait  $Script_8021F464
   80:  	If  *Var0  ==  00000002
   90:  		Wait  1`
   9C:  		Goto  1
   A8:  	EndIf
   B0:  	If  *Var0  ==  00000003
   C0:  		Wait  1`
   CC:  		Goto  1
   D8:  	EndIf
   E0:  	If  *Var1  &  0035D000
   F0:  		Wait  1`
   FC:  		Goto  1
  108:  	EndIf
  110:  	Wait  1`
  11C:  EndLoop
  124:  Call  GetActorVar   ( .Actor:Self 00000008 *Var0 )
  13C:  Switch  *Var0
  148:  	Case  ==  00000000
  154:  		Call  SetIdleAnimations ( .Actor:Self 00000001 $IdleAnimations_8021F23C )
  16C:  	Case  ==  00000001
  178:  		Call  SetIdleAnimations ( .Actor:Self 00000001 $IdleAnimations_8021F2D4 )
  190:  EndSwitch
  198:  Call  GetActorPos   ( .Actor:Self *Var0 *Var1 *Var2 )
  1B4:  Add   *Var0  00000005
  1C4:  Call  SetActorIdleSpeed ( .Actor:Self *Fixed[1.0] )
  1D8:  Call  SetIdleGoal   ( .Actor:Self *Var0 *Var1 *Var2 )
  1F4:  Call  IdleRunToGoal ( .Actor:Self  0` )
  208:  Call  GetActorVar   ( .Actor:Self 00000008 *Var0 )
  220:  Switch  *Var0
  22C:  	Case  ==  00000000
  238:  		Call  SetIdleAnimations ( .Actor:Self 00000001 $IdleAnimations_8021F1F0 )
  250:  	Case  ==  00000001
  25C:  		Call  SetIdleAnimations ( .Actor:Self 00000001 $IdleAnimations_8021F288 )
  274:  	CaseOR  ==  00000002
  280:  	CaseOR  ==  00000003
  28C:  		Call  SetIdleAnimations ( .Actor:Self 00000001 $IdleAnimations_8021F320 )
  2A4:  	EndCaseGroup
  2AC:  EndSwitch
  2B4:  Loop  00000014
  2C0:  	Label  2
  2CC:  	Call  GetActorVar       ( .Actor:Self 00000008 *Var0 )
  2E4:  	Call  GetStatusFlags    ( .Actor:Self *Var1 )
  2F8:  	ExecWait  $Script_8021F464
  304:  	If  *Var0  ==  00000002
  314:  		Wait  1`
  320:  		Goto  2
  32C:  	EndIf
  334:  	If  *Var0  ==  00000003
  344:  		Wait  1`
  350:  		Goto  2
  35C:  	EndIf
  364:  	If  *Var1  &  0035D000
  374:  		Wait  1`
  380:  		Goto  2
  38C:  	EndIf
  394:  	Wait  1`
  3A0:  EndLoop
  3A8:  Call  GetActorVar   ( .Actor:Self 00000008 *Var0 )
  3C0:  Switch  *Var0
  3CC:  	Case  ==  00000000
  3D8:  		Call  SetIdleAnimations ( .Actor:Self 00000001 $IdleAnimations_8021F23C )
  3F0:  	Case  ==  00000001
  3FC:  		Call  SetIdleAnimations ( .Actor:Self 00000001 $IdleAnimations_8021F2D4 )
  414:  EndSwitch
  41C:  Call  GetActorPos   ( .Actor:Self *Var0 *Var1 *Var2 )
  438:  Sub   *Var0  00000005
  448:  Call  SetActorIdleSpeed ( .Actor:Self *Fixed[1.0] )
  45C:  Call  SetIdleGoal   ( .Actor:Self *Var0 *Var1 *Var2 )
  478:  Call  IdleRunToGoal ( .Actor:Self  0` )
  48C:  Call  GetActorVar   ( .Actor:Self 00000008 *Var0 )
  4A4:  Switch  *Var0
  4B0:  	Case  ==  00000000
  4BC:  		Call  SetIdleAnimations ( .Actor:Self 00000001 $IdleAnimations_8021F1F0 )
  4D4:  	Case  ==  00000001
  4E0:  		Call  SetIdleAnimations ( .Actor:Self 00000001 $IdleAnimations_8021F288 )
  4F8:  	CaseOR  ==  00000002
  504:  	CaseOR  ==  00000003
  510:  		Call  SetIdleAnimations ( .Actor:Self 00000001 $IdleAnimations_8021F320 )
  528:  	EndCaseGroup
  530:  EndSwitch
  538:  Loop  00000032
  544:  	Label  3
  550:  	Call  GetActorVar       ( .Actor:Self 00000008 *Var0 )
  568:  	Call  GetStatusFlags    ( .Actor:Self *Var1 )
  57C:  	ExecWait  $Script_8021F464
  588:  	If  *Var0  ==  00000002
  598:  		Wait  1`
  5A4:  		Goto  3
  5B0:  	EndIf
  5B8:  	If  *Var0  ==  00000003
  5C8:  		Wait  1`
  5D4:  		Goto  3
  5E0:  	EndIf
  5E8:  	If  *Var1  &  0035D000
  5F8:  		Wait  1`
  604:  		Goto  3
  610:  	EndIf
  618:  	Wait  1`
  624:  EndLoop
  62C:  Call  GetActorVar   ( .Actor:Self 00000008 *Var0 )
  644:  Switch  *Var0
  650:  	Case  ==  00000001
  65C:  		Call  SetActorVar   ( .Actor:Self 00000001 00000001 )
  674:  		Thread
  67C:  			Call  MakeLerp      ( 000002D0 00000000 0000001E .Easing:CosInOut )
  698:  			Label  A
  6A4:  			Call  UpdateLerp ( )
  6B0:  			Call  SetActorYaw   ( .Actor:Self *Var0 )
  6C4:  			If  *Var1  ==  00000001
  6D4:  				Call  GetActorVar   ( .Actor:Self 00000001 *Var2 )
  6EC:  				If  *Var2  ==  00000001
  6FC:  					Wait  1`
  708:  					Goto  A
  714:  				EndIf
  71C:  			EndIf
  724:  			Call  SetActorVar   ( .Actor:Self 00000001 00000000 )
  73C:  			Call  SetActorYaw   ( .Actor:Self  0` )
  750:  		EndThread
  758:  		Wait  8`
  764:  		Call  AddActorDecoration    ( .Actor:Self 00000001 00000001 .Decoration:Whirlwind )
  780:  		Wait  15`
  78C:  		Call  RemoveActorDecoration ( .Actor:Self 00000001 00000001 )
  7A4:  		Wait  8`
  7B0:  		Call  SetActorVar   ( .Actor:Self 00000001 00000000 )
  7C8:  	Case  ==  00000000
  7D4:  	Case  ==  00000002
  7E0:  	Case  ==  00000003
  7EC:  EndSwitch
  7F4:  Goto  0
  800:  Return
  808:  End
}

#new:IntTable $IntTable_8021FDF4
{
	00000009 00000010 00000016 0000001A 0000001E 00000020 00000021 00000020
	0000001E 0000001A 00000016 00000010 00000009 00000000 00000004 00000006
	00000007 00000006 00000004 00000000 00000002 00000000
}

#new:Script $Script_HandleEvent_8021FE4C
{
    0:  Call  UseIdleAnimation  ( .Actor:Self .False )
   14:  Call  EnableIdleScript  ( .Actor:Self 00000000 )
   28:  Call  SetAnimationRate  ( .Actor:Self 00000001 *Fixed[1.0] )
   40:  Call  SetActorYaw       ( .Actor:Self  0` )
   54:  Call  GetActorVar       ( .Actor:Self 00000001 *Var0 )
   6C:  If  *Var0  ==  00000001
   7C:  	Call  RemoveActorDecoration ( .Actor:Self 00000001 00000001 )
   94:  	Call  SetActorVar   ( .Actor:Self 00000001 00000000 )
   AC:  EndIf
   B4:  Call  GetLastEvent  ( .Actor:Self *Var0 )
   C8:  Switch  *Var0
   D4:  	CaseOR  ==  .Event:HitCombo % 9
   E0:  	CaseOR  ==  .Event:Hit % A
   EC:  		SetConst  *Var0  00000001
   FC:  		SetConst  *Var1  0029000B
  10C:  		ExecWait  DoNormalHit
  118:  	EndCaseGroup
  120:  	Case  ==  .Event:BurnHit % E
  12C:  		SetConst  *Var0  00000001
  13C:  		SetConst  *Var1  0029000C
  14C:  		SetConst  *Var2  0029000D
  15C:  		ExecWait  DoBurnHit
  168:  	Case  ==  .Event:BurnDeath % 24
  174:  		SetConst  *Var0  00000001
  184:  		SetConst  *Var1  0029000C
  194:  		SetConst  *Var2  0029000D
  1A4:  		ExecWait  DoBurnHit
  1B0:  		SetConst  *Var0  00000001
  1C0:  		SetConst  *Var1  0029000D
  1D0:  		ExecWait  DoDeath
  1DC:  		Return
  1E4:  	Case  ==  .Event:SpinSmashHit % B
  1F0:  		SetConst  *Var0  00000001
  200:  		SetConst  *Var1  0029000B
  210:  		ExecWait  DoSpinSmashHit
  21C:  	Case  ==  .Event:SpinSmashDeath % 21
  228:  		SetConst  *Var0  00000001
  238:  		SetConst  *Var1  0029000B
  248:  		ExecWait  DoSpinSmashHit
  254:  		SetConst  *Var0  00000001
  264:  		SetConst  *Var1  0029000B
  274:  		ExecWait  DoDeath
  280:  		Return
  288:  	Case  ==  .Event:FlipTrigger % D
  294:  		Call  GetActorVar   ( .Actor:Self 00000008 *Var0 )
  2AC:  		Switch  *Var0
  2B8:  			Case  ==  00000000
  2C4:  				Call  SetActorVar   ( .Actor:Self 00000008 00000002 )
  2DC:  			Case  ==  00000001
  2E8:  				Call  SetActorVar   ( .Actor:Self 00000008 00000003 )
  300:  		EndSwitch
  308:  		Call  SetActorVar       ( .Actor:Self 00000009 00000001 )
  320:  		Call  SetDefenseTable   ( .Actor:Self 00000001 $DefenseTable_8021D258 )
  338:  		Call  SetIdleAnimations ( .Actor:Self 00000001 $IdleAnimations_8021F320 )
  350:  		Call  SetTargetOffset   ( .Actor:Self 00000001  -5`  15` )
  36C:  		Call  8027D4C8  ( FFFFFF81 00000001 00000000 00000000 )
  388:  		Call  SetActorFlagBits  ( .Actor:Self 00000400 .True )
  3A0:  		Call  SetAnimation      ( .Actor:Self 00000001 0029000B )
  3B8:  		Call  SetActorRotationOffset    ( .Actor:Self 00000000 0000000C 00000000 )
  3D4:  		Thread
  3DC:  			Wait  4`
  3E8:  			Call  SetActorRotation  ( .Actor:Self 00000000 00000000 0000001E )
  404:  			Wait  1`
  410:  			Call  SetActorRotation  ( .Actor:Self 00000000 00000000 00000000 )
  42C:  			Wait  1`
  438:  			Call  SetActorRotation  ( .Actor:Self 00000000 00000000 FFFFFFE2 )
  454:  			Wait  1`
  460:  			Call  SetActorRotation  ( .Actor:Self 00000000 00000000 FFFFFFC4 )
  47C:  			Wait  1`
  488:  			Call  SetActorRotation  ( .Actor:Self 00000000 00000000 FFFFFFB5 )
  4A4:  			Wait  1`
  4B0:  		EndThread
  4B8:  		UseIntBuffer  $IntTable_8021FDF4
  4C4:  		Loop  00000016
  4D0:  			Get1Int  *Var0
  4DC:  			Call  SetActorDispOffset    ( .Actor:Self 00000000 *Var0 00000000 )
  4F8:  			Wait  1`
  504:  		EndLoop
  50C:  		Call  SetActorRotationOffset    ( .Actor:Self 00000000 00000000 00000000 )
  528:  		Call  SetActorRotation      ( .Actor:Self 00000000 00000000 00000000 )
  544:  		Call  SetActorDispOffset    ( .Actor:Self 00000000 00000000 00000000 )
  560:  		Call  SetAnimation  ( .Actor:Self 00000001 0029000F )
  578:  		Call  SetAnimationRate      ( .Actor:Self 00000001 *Fixed[0.5] )
  590:  	Case  ==  .Event:ShockHit % 2F
  59C:  		SetConst  *Var0  00000001
  5AC:  		SetConst  *Var1  0029000B
  5BC:  		ExecWait  DoShockHit
  5C8:  		SetConst  *Var0  00000001
  5D8:  		SetConst  *Var1  0029000B
  5E8:  		ExecWait  DoJumpBack
  5F4:  		Call  JumpToGoal    ( .Actor:Self  5` .False .True .False )
  614:  		SetConst  *Var0  00000001
  624:  		SetConst  *Var1  00290004
  634:  		ExecWait  DoReturnHome
  640:  		Call  SetActorJumpGravity   ( .Actor:Self *Fixed[1.6] )
  654:  		Call  JumpToGoal    ( .Actor:Self  5` .False .True .False )
  674:  	Case  ==  .Event:ShockDeath % 26
  680:  		SetConst  *Var0  00000001
  690:  		SetConst  *Var1  0029000B
  6A0:  		ExecWait  DoShockHit
  6AC:  		SetConst  *Var0  00000001
  6BC:  		SetConst  *Var1  0029000B
  6CC:  		ExecWait  DoDeath
  6D8:  		Return
  6E0:  	CaseOR  ==  00000017 % 17
  6EC:  	CaseOR  ==  .Event:Immune % 19
  6F8:  		Call  GetActorVar   ( .Actor:Self 00000008 *Var0 )
  710:  		Switch  *Var0
  71C:  			CaseOR  ==  00000000
  728:  			CaseOR  ==  00000001
  734:  				SetConst  *Var0  00000001
  744:  				SetConst  *Var1  00290007
  754:  				ExecWait  DoImmune
  760:  				Call  GetStatusFlags    ( .Actor:Self *Var0 )
  774:  				If  *Var0  !&  ~Flags:StatusFlags:Sleep|Frozen|Fear|Paralyze|Dizzy|Stone|Stop % 35D000
  784:  					Call  SetAnimation  ( .Actor:Self 00000001 00290008 )
  79C:  					Wait  10`
  7A8:  				EndIf
  7B0:  			EndCaseGroup
  7B8:  			CaseOR  ==  00000002
  7C4:  			CaseOR  ==  00000003
  7D0:  				SetConst  *Var0  00000001
  7E0:  				SetConst  *Var1  0029000F
  7F0:  				ExecWait  DoImmune
  7FC:  			EndCaseGroup
  804:  		EndSwitch
  80C:  	EndCaseGroup
  814:  	Case  ==  .Event:Death % 20
  820:  		SetConst  *Var0  00000001
  830:  		SetConst  *Var1  0029000B
  840:  		ExecWait  DoNormalHit
  84C:  		Wait  10`
  858:  		SetConst  *Var0  00000001
  868:  		SetConst  *Var1  0029000B
  878:  		ExecWait  DoDeath
  884:  		Return
  88C:  	Case  ==  .Event:EndFirstStrike % 35
  898:  		Call  GetActorVar   ( .Actor:Self 00000008 *Var0 )
  8B0:  		If  *Var0  ==  00000000
  8C0:  			SetConst  *Var0  00000001
  8D0:  			SetConst  *Var1  00290004
  8E0:  			ExecWait  DoReturnHome
  8EC:  		EndIf
  8F4:  		Call  GetActorPos   ( .Actor:Self *Var0 *Var1 *Var2 )
  910:  		Call  SetHomePos    ( .Actor:Self *Var0 *Var1 *Var2 )
  92C:  		Call  HPBarToHome   ( .Actor:Self )
  93C:  	Case  ==  .Event:RecoverStatus % 31
  948:  		Call  GetActorVar   ( .Actor:Self 00000008 *Var0 )
  960:  		If  *Var0  ==  00000000
  970:  			SetConst  *Var0  00000001
  980:  			SetConst  *Var1  00290002
  990:  			ExecWait  DoRecover
  99C:  		EndIf
  9A4:  	Case  ==  .Event:ScareAway % 39
  9B0:  		Call  GetActorVar   ( .Actor:Self 00000008 *Var0 )
  9C8:  		Switch  *Var0
  9D4:  			CaseOR  ==  00000000
  9E0:  			CaseOR  ==  00000001
  9EC:  				SetConst  *Var0  00000001
  9FC:  				SetConst  *Var1  00290004
  A0C:  				SetConst  *Var2  0029000B
  A1C:  				ExecWait  DoScareAway
  A28:  				Return
  A30:  			EndCaseGroup
  A38:  			CaseOR  ==  00000002
  A44:  			CaseOR  ==  00000003
  A50:  				SetConst  *Var0  00000001
  A60:  				SetConst  *Var1  0029000F
  A70:  				ExecWait  DoImmune
  A7C:  			EndCaseGroup
  A84:  		EndSwitch
  A8C:  	Case  ==  .Event:BeginAirLift % 3A
  A98:  		Call  GetActorVar   ( .Actor:Self 00000008 *Var0 )
  AB0:  		Switch  *Var0
  ABC:  			CaseOR  ==  00000000
  AC8:  			CaseOR  ==  00000001
  AD4:  				SetConst  *Var0  00000001
  AE4:  				SetConst  *Var1  00290017
  AF4:  			EndCaseGroup
  AFC:  			CaseOR  ==  00000002
  B08:  			CaseOR  ==  00000003
  B14:  				SetConst  *Var0  00000001
  B24:  				SetConst  *Var1  0029000F
  B34:  			EndCaseGroup
  B3C:  		EndSwitch
  B44:  		ExecWait  DoAirLift
  B50:  	Case  ==  .Event:BlowAway % 16
  B5C:  		Call  GetActorVar   ( .Actor:Self 00000008 *Var0 )
  B74:  		Switch  *Var0
  B80:  			CaseOR  ==  00000000
  B8C:  			CaseOR  ==  00000001
  B98:  				SetConst  *Var0  00000001
  BA8:  				SetConst  *Var1  00290017
  BB8:  			EndCaseGroup
  BC0:  			CaseOR  ==  00000002
  BCC:  			CaseOR  ==  00000003
  BD8:  				SetConst  *Var0  00000001
  BE8:  				SetConst  *Var1  0029000F
  BF8:  			EndCaseGroup
  C00:  		EndSwitch
  C08:  		ExecWait  DoBlowAway
  C14:  		Return
  C1C:  	Case  ==  .Event:AirLiftFailed % 1F
  C28:  		Call  GetActorVar   ( .Actor:Self 00000008 *Var0 )
  C40:  		Switch  *Var0
  C4C:  			CaseOR  ==  00000000
  C58:  			CaseOR  ==  00000001
  C64:  				SetConst  *Var0  00000001
  C74:  				SetConst  *Var1  00290001
  C84:  				ExecWait  DoImmune
  C90:  			EndCaseGroup
  C98:  			CaseOR  ==  00000002
  CA4:  			CaseOR  ==  00000003
  CB0:  				SetConst  *Var0  00000001
  CC0:  				SetConst  *Var1  0029000F
  CD0:  				ExecWait  DoImmune
  CDC:  			EndCaseGroup
  CE4:  		EndSwitch
  CEC:  EndSwitch
  CF4:  Call  EnableIdleScript  ( .Actor:Self FFFFFFFF )
  D08:  Call  UseIdleAnimation  ( .Actor:Self .True )
  D1C:  Return
  D24:  End
}

#new:Script $Script_80220B78
{
    0:  Call  UseIdleAnimation  ( .Actor:Self .False )
   14:  Call  EnableIdleScript  ( .Actor:Self 00000000 )
   28:  Call  SetTargetActor    ( .Actor:Self .Actor:Player )
   3C:  Call  GetBattlePhase    ( *Var0 )
   4C:  If  *Var0  ==  00000001
   5C:  	Call  SetAnimation  ( .Actor:Self 00000001 00290006 )
   74:  Else
   7C:  	Call  UseBattleCamPreset    ( 0000003F )
   8C:  	Call  BattleCamTargetActor  ( .Actor:Self )
   9C:  	Wait  10`
   A8:  	Call  SetAnimation  ( .Actor:Self 00000001 00290007 )
   C0:  	Wait  10`
   CC:  	Thread
   D4:  		Call  GetActorPos   ( .Actor:Self *Var0 *Var1 *Var2 )
   F0:  		Add   *Var1  00000004
  100:  		Call  PlayEffect    ( ~FX:SmokeImpact:Small *Var0 *Var1 *Var2 00000020 00000004 00000000 0000000A 00000000 00000000 00000000 00000000 00000000 )
  144:  		Wait  3`
  150:  		Call  PlayEffect    ( ~FX:SmokeImpact:Small *Var0 *Var1 *Var2 00000020 00000004 00000000 0000000A 00000000 00000000 00000000 00000000 00000000 )
  194:  		Wait  2`
  1A0:  		Call  PlayEffect    ( ~FX:SmokeImpact:Small *Var0 *Var1 *Var2 00000020 00000004 00000000 0000000A 00000000 00000000 00000000 00000000 00000000 )
  1E4:  	EndThread
  1EC:  	Call  PlaySoundAtActor  ( .Actor:Self 00002021 )
  200:  	Call  SetAnimation      ( .Actor:Self 00000001 00290006 )
  218:  	Wait  10`
  224:  	Call  8024ECF8  ( FFFFFFFF 00000001 00000000 )
  23C:  EndIf
  244:  Call  PlaySoundAtActor  ( .Actor:Self 000020D3 )
  258:  Call  SetActorSounds    ( .Actor:Self .ActorSound:Walk 00000000 00000000 )
  274:  Call  EnemyTestTarget   ( .Actor:Self *Var0 ~Flags:DamageType:StatusAlwaysHits 00000000 00000003 00000010 )
  298:  Switch  *Var0
  2A4:  	CaseOR  ==  .HitResult:Miss % 6
  2B0:  	CaseOR  ==  .HitResult:Lucky % 5
  2BC:  		Set   *VarA  *Var0
  2CC:  		Call  SetGoalToTarget       ( .Actor:Self )
  2DC:  		Call  GetStatusFlags        ( .Actor:Self *Var5 )
  2F0:  		Call  AddGoalPos    ( .Actor:Self  -40`  0`  0` )
  30C:  		Call  SetActorSpeed ( .Actor:Self *Fixed[16.0] )
  320:  		Call  RunToGoal     ( .Actor:Self  0` .False )
  338:  		Call  SetAnimation  ( .Actor:Self 00000001 00290008 )
  350:  		Wait  8`
  35C:  		Call  ResetAllActorSounds   ( .Actor:Self )
  36C:  		Call  SetActorYaw   ( .Actor:Self  180` )
  380:  		Wait  4`
  38C:  		If  *VarA  ==  .HitResult:Lucky % 5
  39C:  			Call  EnemyTestTarget   ( .Actor:Self *Var0 ~Flags:DamageType:TriggerLucky 00000000 00000000 00000000 )
  3C0:  		EndIf
  3C8:  		Call  SetAnimation  ( .Actor:Self 00000001 00290015 )
  3E0:  		Wait  1`
  3EC:  		Call  SetAnimation  ( .Actor:Self 00000001 00290016 )
  404:  		Call  GetActorPos   ( .Actor:Self *Var0 *Var1 *Var2 )
  420:  		Add   *Var1  00000014
  430:  		Call  SetGoalPos    ( .Actor:Self *Var0 *Var1 *Var2 )
  44C:  		Call  SetActorJumpGravity   ( .Actor:Self *Fixed[2.0] )
  460:  		Call  JumpToGoal    ( .Actor:Self  5` .False .True .False )
  480:  		Call  SetAnimation  ( .Actor:Self 00000001 00290017 )
  498:  		Wait  6`
  4A4:  		Sub   *Var1  00000014
  4B4:  		Call  SetGoalPos    ( .Actor:Self *Var0 *Var1 *Var2 )
  4D0:  		Call  JumpToGoal    ( .Actor:Self  5` .False .True .False )
  4F0:  		Call  UseBattleCamPreset    ( 00000002 )
  500:  		Call  YieldTurn ( )
  50C:  		Call  SetActorYaw   ( .Actor:Self  180` )
  520:  		Call  AddActorDecoration    ( .Actor:Self 00000001 00000000 .Decoration:Sweat )
  53C:  		Call  SetAnimation  ( .Actor:Self 00000001 00290017 )
  554:  		Call  SetActorSpeed ( .Actor:Self *Fixed[6.0] )
  568:  		Call  SetGoalToHome ( .Actor:Self )
  578:  		Call  RunToGoal     ( .Actor:Self  0` .False )
  590:  		Call  SetAnimation  ( .Actor:Self 00000001 00290001 )
  5A8:  		Call  RemoveActorDecoration ( .Actor:Self 00000001 00000000 )
  5C0:  		Call  SetActorYaw   ( .Actor:Self  0` )
  5D4:  		Call  EnableIdleScript      ( .Actor:Self 00000001 )
  5E8:  		Call  UseIdleAnimation      ( .Actor:Self .True )
  5FC:  		Return
  604:  	EndCaseGroup
  60C:  EndSwitch
  614:  Call  SetGoalToTarget   ( .Actor:Self )
  624:  Call  SetActorSpeed     ( .Actor:Self *Fixed[16.0] )
  638:  Call  RunToGoal ( .Actor:Self  0` .False )
  650:  Call  ResetAllActorSounds   ( .Actor:Self )
  660:  Wait  2`
  66C:  Call  EnemyDamageTarget ( .Actor:Self *Var0 ~Flags:DamageType:StatusAlwaysHits 0000FFFF 00000000 00000003 00000020 )
  694:  Switch  *Var0
  6A0:  	CaseOR  ==  .HitResult:Hit % 0
  6AC:  	CaseOR  ==  .HitResult:QuakeImmune % 2
  6B8:  		Call  UseBattleCamPreset    ( 00000002 )
  6C8:  		Call  GetGoalPos    ( .Actor:Self *Var0 *Var1 *Var2 )
  6E4:  		Add   *Var0  00000028
  6F4:  		Set   *Var1  00000000
  704:  		Call  SetActorJumpGravity   ( .Actor:Self *Fixed[1.8] )
  718:  		Call  SetGoalPos    ( .Actor:Self *Var0 *Var1 *Var2 )
  734:  		Call  JumpToGoal    ( .Actor:Self  10` .False .True .False )
  754:  		Add   *Var0  0000001E
  764:  		Call  SetGoalPos    ( .Actor:Self *Var0 *Var1 *Var2 )
  780:  		Call  JumpToGoal    ( .Actor:Self  8` .False .True .False )
  7A0:  		Add   *Var0  00000014
  7B0:  		Call  SetGoalPos    ( .Actor:Self *Var0 *Var1 *Var2 )
  7CC:  		Call  JumpToGoal    ( .Actor:Self  6` .False .True .False )
  7EC:  		Call  SetAnimation  ( .Actor:Self 00000001 00290008 )
  804:  		Wait  8`
  810:  		Call  YieldTurn ( )
  81C:  		SetConst  *Var0  00000001
  82C:  		SetConst  *Var1  00290004
  83C:  		ExecWait  DoReturnHome
  848:  		Call  SetAnimation  ( .Actor:Self 00000001 00290001 )
  860:  	EndCaseGroup
  868:  EndSwitch
  870:  Call  EnableIdleScript  ( .Actor:Self 00000001 )
  884:  Call  UseIdleAnimation  ( .Actor:Self .True )
  898:  Return
  8A0:  End
}

#new:Script $Script_80221420
{
    0:  Label  A
    C:  Call  GetActorVar   ( .Actor:Self 00000001 *Var0 )
   24:  Wait  1`
   30:  If  *Var0  ==  00000001
   40:  	Goto  A
   4C:  EndIf
   54:  Call  UseIdleAnimation  ( .Actor:Self .False )
   68:  Call  EnableIdleScript  ( .Actor:Self 00000000 )
   7C:  Call  SetActorYaw       ( .Actor:Self  0` )
   90:  Call  SetTargetActor    ( .Actor:Self .Actor:Player )
   A4:  Call  UseBattleCamPreset    ( 0000003F )
   B4:  Call  BattleCamTargetActor  ( .Actor:Self )
   C4:  Call  SetGoalToTarget   ( .Actor:Self )
   D4:  Call  GetStatusFlags    ( .Actor:Self *Var0 )
   E8:  If  *Var0  &  ~Flags:StatusFlags:Shrink % 80000
   F8:  	Call  AddGoalPos    ( .Actor:Self  8`  0`  0` )
  114:  Else
  11C:  	Call  AddGoalPos    ( .Actor:Self  20`  0`  0` )
  138:  EndIf
  140:  Call  SetAnimation  ( .Actor:Self 00000001 00290004 )
  158:  Call  SetActorSpeed ( .Actor:Self *Fixed[6.0] )
  16C:  Call  RunToGoal     ( .Actor:Self  0` .False )
  184:  Call  SetAnimation  ( .Actor:Self 00000001 00290002 )
  19C:  Wait  10`
  1A8:  Call  SetAnimation  ( .Actor:Self 00000001 00290007 )
  1C0:  Wait  10`
  1CC:  Thread
  1D4:  	Call  GetActorPos   ( .Actor:Self *Var0 *Var1 *Var2 )
  1F0:  	Add   *Var1  00000004
  200:  	Call  PlayEffect    ( ~FX:SmokeImpact:Small *Var0 *Var1 *Var2 00000020 00000004 00000000 0000000A 00000000 00000000 00000000 00000000 00000000 )
  244:  	Wait  3`
  250:  	Call  PlayEffect    ( ~FX:SmokeImpact:Small *Var0 *Var1 *Var2 00000020 00000004 00000000 0000000A 00000000 00000000 00000000 00000000 00000000 )
  294:  	Wait  2`
  2A0:  	Call  PlayEffect    ( ~FX:SmokeImpact:Small *Var0 *Var1 *Var2 00000020 00000004 00000000 0000000A 00000000 00000000 00000000 00000000 00000000 )
  2E4:  EndThread
  2EC:  Call  PlaySoundAtActor  ( .Actor:Self 00002021 )
  300:  Call  SetAnimation      ( .Actor:Self 00000001 00290006 )
  318:  Wait  20`
  324:  Call  PlaySoundAtActor  ( .Actor:Self 00002026 )
  338:  Call  AddActorDecoration    ( .Actor:Self 00000001 00000001 .Decoration:Whirlwind )
  354:  Wait  40`
  360:  Call  EnemyTestTarget   ( .Actor:Self *Var0 ~Flags:DamageType:StatusAlwaysHits 00000000 00000000 00000010 )
  384:  Switch  *Var0
  390:  	CaseOR  ==  .HitResult:Miss % 6
  39C:  	CaseOR  ==  .HitResult:Lucky % 5
  3A8:  		Set   *VarA  *Var0
  3B8:  		Call  SetAnimation  ( .Actor:Self 00000001 00290008 )
  3D0:  		Call  RemoveActorDecoration ( .Actor:Self 00000001 00000001 )
  3E8:  		Wait  10`
  3F4:  		If  *VarA  ==  .HitResult:Lucky % 5
  404:  			Call  EnemyTestTarget   ( .Actor:Self *Var0 ~Flags:DamageType:TriggerLucky 00000000 00000000 00000000 )
  428:  		EndIf
  430:  		Wait  10`
  43C:  		Call  UseBattleCamPreset    ( 00000002 )
  44C:  		Call  YieldTurn ( )
  458:  		Call  SetActorYaw   ( .Actor:Self  180` )
  46C:  		Call  AddActorDecoration    ( .Actor:Self 00000001 00000000 .Decoration:Sweat )
  488:  		Call  SetAnimation  ( .Actor:Self 00000001 00290017 )
  4A0:  		Call  SetActorSpeed ( .Actor:Self *Fixed[6.0] )
  4B4:  		Call  SetGoalToHome ( .Actor:Self )
  4C4:  		Call  RunToGoal     ( .Actor:Self  0` .False )
  4DC:  		Call  SetAnimation  ( .Actor:Self 00000001 00290002 )
  4F4:  		Call  RemoveActorDecoration ( .Actor:Self 00000001 00000000 )
  50C:  		Call  SetActorYaw   ( .Actor:Self  0` )
  520:  		Return
  528:  	EndCaseGroup
  530:  EndSwitch
  538:  Wait  2`
  544:  Call  SetGoalToTarget   ( .Actor:Self )
  554:  Call  EnemyDamageTarget ( .Actor:Self *Var0 ~Flags:DamageType:NoContact 0000FFFF ~DebuffType:Dizzy:2:60` 00000000 00000020 )
  57C:  Switch  *Var0
  588:  	CaseOR  ==  .HitResult:Hit % 0
  594:  	CaseOR  ==  .HitResult:QuakeImmune % 2
  5A0:  		Thread
  5A8:  			Call  WasStatusInflicted    ( .Actor:Self *Var0 )
  5BC:  			If  *Var0  ==  00000001
  5CC:  				Call  MakeLerp      ( 00000000 00000438 0000001E .Easing:CosInOut )
  5E8:  				Label  0
  5F4:  				Call  UpdateLerp ( )
  600:  				Call  SetActorYaw   ( .Actor:Player *Var0 )
  614:  				Wait  1`
  620:  				If  *Var1  ==  00000001
  630:  					Goto  0
  63C:  				EndIf
  644:  			EndIf
  64C:  		EndThread
  654:  		Wait  20`
  660:  		Call  SetAnimation  ( .Actor:Self 00000001 00290008 )
  678:  		Call  RemoveActorDecoration ( .Actor:Self 00000001 00000001 )
  690:  		Wait  10`
  69C:  		Wait  10`
  6A8:  		Call  UseBattleCamPreset    ( 00000002 )
  6B8:  		Call  YieldTurn ( )
  6C4:  		SetConst  *Var0  00000001
  6D4:  		SetConst  *Var1  00290004
  6E4:  		ExecWait  DoReturnHome
  6F0:  		Call  SetAnimation  ( .Actor:Self 00000001 00290002 )
  708:  	EndCaseGroup
  710:  EndSwitch
  718:  Call  EnableIdleScript  ( .Actor:Self 00000001 )
  72C:  Call  UseIdleAnimation  ( .Actor:Self .True )
  740:  Return
  748:  End
}

#new:Script $Script_80221B70
{
    0:  Call  UseIdleAnimation  ( .Actor:Self .False )
   14:  Call  EnableIdleScript  ( .Actor:Self 00000000 )
   28:  Call  SetActorYaw       ( .Actor:Self  0` )
   3C:  Call  SetTargetActor    ( .Actor:Self .Actor:Player )
   50:  Call  GetActorVar       ( .Actor:Self 00000009 *Var0 )
   68:  Sub   *Var0  00000001
   78:  If  *Var0  >  00000000
   88:  	Call  SetActorVar   ( .Actor:Self 00000009 *Var0 )
   A0:  	Call  AddActorDecoration    ( .Actor:Self 00000001 00000000 .Decoration:Sweat )
   BC:  	Call  SetAnimationRate      ( .Actor:Self 00000001 *Fixed[2.0] )
   D4:  	Wait  30`
   E0:  	Call  SetAnimationRate      ( .Actor:Self 00000001 *Fixed[0.5] )
   F8:  	Call  RemoveActorDecoration ( .Actor:Self 00000001 00000000 )
  110:  Else
  118:  	Call  AddActorDecoration        ( .Actor:Self 00000001 00000000 .Decoration:Sweat )
  134:  	Call  SetAnimationRate  ( .Actor:Self 00000001 *Fixed[2.0] )
  14C:  	Wait  20`
  158:  	Call  SetAnimationRate  ( .Actor:Self 00000001 *Fixed[0.5] )
  170:  	Call  RemoveActorDecoration     ( .Actor:Self 00000001 00000000 )
  188:  	Call  SetActorSounds    ( .Actor:Self .ActorSound:Jump 00000000 00000000 )
  1A4:  	Call  PlaySoundAtActor  ( .Actor:Self .Sound:Jump )
  1B8:  	Call  SetAnimationRate  ( .Actor:Self 00000001 *Fixed[1.0] )
  1D0:  	Call  SetAnimation      ( .Actor:Self 00000001 0029000F )
  1E8:  	Set   *Var0  00000000
  1F8:  	Call  SetActorRotationOffset    ( .Actor:Self 00000000 0000000C 00000000 )
  214:  	Thread
  21C:  		Loop  00000005
  228:  			Add   *Var0  0000000F
  238:  			Call  SetActorRotation  ( .Actor:Self 00000000 00000000 *Var0 )
  254:  			Wait  1`
  260:  		EndLoop
  268:  	EndThread
  270:  	Call  GetActorPos       ( .Actor:Self *Var0 *Var1 *Var2 )
  28C:  	Call  SetGoalPos        ( .Actor:Self *Var0 *Var1 *Var2 )
  2A8:  	Call  SetActorJumpGravity       ( .Actor:Self *Fixed[3.0] )
  2BC:  	Call  JumpToGoal        ( .Actor:Self  8` .False .True .False )
  2DC:  	Call  PlaySoundAtActor  ( .Actor:Self 000020BA )
  2F0:  	Call  SetActorRotationOffset    ( .Actor:Self 00000000 00000000 00000000 )
  30C:  	Call  SetActorRotation  ( .Actor:Self 00000000 00000000 00000000 )
  328:  	Call  SetActorDispOffset        ( .Actor:Self 00000000 00000000 00000000 )
  344:  	Call  SetDefenseTable   ( .Actor:Self 00000001 $DefenseTable_8021D220 )
  35C:  	Call  SetTargetOffset   ( .Actor:Self 00000001  -4`  32` )
  378:  	Call  8027D4C8  ( FFFFFF81 00000001 FFFFFFFF FFFFFFFC )
  394:  	Call  SetActorFlagBits  ( .Actor:Self 00000400 .False )
  3AC:  	Call  ResetActorSounds  ( .Actor:Self .ActorSound:Jump )
  3C0:  	Call  GetActorVar       ( .Actor:Self 00000008 *Var0 )
  3D8:  	Switch  *Var0
  3E4:  		Case  ==  00000002
  3F0:  			Call  SetActorVar       ( .Actor:Self 00000008 00000000 )
  408:  			Call  SetIdleAnimations ( .Actor:Self 00000001 $IdleAnimations_8021F1F0 )
  420:  		Case  ==  00000003
  42C:  			Call  SetActorVar       ( .Actor:Self 00000008 00000001 )
  444:  			Call  SetIdleAnimations ( .Actor:Self 00000001 $IdleAnimations_8021F288 )
  45C:  	EndSwitch
  464:  EndIf
  46C:  Call  EnableIdleScript  ( .Actor:Self 00000001 )
  480:  Call  UseIdleAnimation  ( .Actor:Self .True )
  494:  Return
  49C:  End
}

#new:Script $Script_TakeTurn_80222014
{
    0:  Call  GetBattlePhase    ( *Var0 )
   10:  If  *Var0  ==  00000001
   20:  	Call  SetActorVar   ( .Actor:Self 00000008 00000000 )
   38:  EndIf
   40:  Call  GetActorVar   ( .Actor:Self 00000008 *Var0 )
   58:  Switch  *Var0
   64:  	Case  ==  00000000
   70:  		ExecWait  $Script_80220B78
   7C:  		Call  RandInt   ( 000003E8 *Var0 )
   90:  		If  *Var0  <  0000012C
   A0:  			Call  SetActorVar       ( .Actor:Self 00000008 00000000 )
   B8:  			Call  SetIdleAnimations ( .Actor:Self 00000001 $IdleAnimations_8021F1F0 )
   D0:  		Else
   D8:  			Call  SetActorVar       ( .Actor:Self 00000008 00000001 )
   F0:  			Call  SetIdleAnimations ( .Actor:Self 00000001 $IdleAnimations_8021F288 )
  108:  		EndIf
  110:  	Case  ==  00000001
  11C:  		ExecWait  $Script_80221420
  128:  		Call  RandInt   ( 000003E8 *Var0 )
  13C:  		If  *Var0  <  0000012C
  14C:  			Call  SetActorVar       ( .Actor:Self 00000008 00000000 )
  164:  			Call  SetIdleAnimations ( .Actor:Self 00000001 $IdleAnimations_8021F1F0 )
  17C:  		Else
  184:  			Call  SetActorVar       ( .Actor:Self 00000008 00000001 )
  19C:  			Call  SetIdleAnimations ( .Actor:Self 00000001 $IdleAnimations_8021F288 )
  1B4:  		EndIf
  1BC:  	CaseOR  ==  00000002
  1C8:  	CaseOR  ==  00000003
  1D4:  		ExecWait  $Script_80221B70
  1E0:  	EndCaseGroup
  1E8:  EndSwitch
  1F0:  Return
  1F8:  End
}

PADDING: 80222214 to 80222220 (005F66A4 to 005F66B0)
00000000 00000000 00000000

#new:DefenseTable $DefenseTable_80222220
{
	.Element:Normal 00000000
	.Element:End
}

#new:StatusTable $StatusTable_8022222C
{
	.Status:Normal      0`
	.Status:Default     0`
	.Status:Sleep      70`
	.Status:Poison    100`
	.Status:Frozen    100`
	.Status:Dizzy      80`
	.Status:Fear      100`
	.Status:Static    100`
	.Status:Paralyze   90`
	.Status:Shrink     80`
	.Status:Stop       90`
	.Status:DefaultTurnMod    0`
	.Status:SleepTurnMod      0`
	.Status:PoisonTurnMod     0`
	.Status:FrozenTurnMod     0`
	.Status:DizzyTurnMod      0`
	.Status:FearTurnMod       0`
	.Status:StaticTurnMod     0`
	.Status:ParalyzeTurnMod   0`
	.Status:ShrinkTurnMod     0`
	.Status:StopTurnMod       0`
	.Status:End
}

#new:PartsTable $PartsTable_802222D8
{
	00800000 01000000 001400FF $IdleAnimations_80222324 $DefenseTable_80222220 00000000 00000000 00F60000 00000000
}

#new:Actor $Gloomba
{
	% stats
	[Index]         2b
	[Level]        11`b
	[MaxHP]         7`b
	[Coins]         1`b
	[Flags]       00000000
	[StatusTable] $StatusTable_8022222C
	% ai
	[PartsCount]    1`s
	[PartsTable]  $PartsTable_802222D8
	[Script]      $Script_Init_802223BC
	% move effectiveness
	[Escape]       70`b
	[Item]         80`b
	[AirLift]      90`b
	[Hurricane]    85`b % Bow's "Spook" as well
	[UpAndAway]    95`b
	[PowerBounce] 100`b
	[SpinSmash]     0`b % weight (0-4)
	% ui positions
	[Size]         24`b  24`b % width height
	[HealthBar]     0`b   0`b % dx dy
	[StatusTurn]  -10`b  20`b % dx dy
	[StatusIcon]   10`b  20`b % dx dy
}

#new:IdleAnimations $IdleAnimations_80222324
{
	.Status:Normal    00260401
	.Status:Stone     00260400
	.Status:Sleep     00260408
	.Status:Poison    00260401
	.Status:Stop      00260400
	.Status:Static    00260401
	.Status:Paralyze  00260400
	.Status:Dizzy     00260407
	.Status:Fear      00260407
	.Status:End
}

#new:IdleAnimations $IdleAnimations_80222370
{
	.Status:Normal    00260403
	.Status:Stone     00260400
	.Status:Sleep     00260408
	.Status:Poison    00260401
	.Status:Stop      00260400
	.Status:Static    00260403
	.Status:Paralyze  00260400
	.Status:Dizzy     00260407
	.Status:Fear      00260407
	.Status:End
}

#new:Script $Script_Init_802223BC
{
    0:  Call  BindTakeTurn      ( .Actor:Self $Script_TakeTurn_80222F10 )
   14:  Call  BindIdle  ( .Actor:Self $Script_Idle_80222408 )
   28:  Call  BindHandleEvent   ( .Actor:Self $Script_HandleEvent_802226E4 )
   3C:  Return
   44:  End
}

#new:Script $Script_Idle_80222408
{
    0:  Label  A
    C:  Call  RandInt   ( 00000050 *Var0 )
   20:  Add   *Var0  00000050
   30:  Loop  *Var0
   3C:  	Label  0
   48:  	Call  GetStatusFlags    ( .Actor:Self *Var1 )
   5C:  	If  *Var1  &  ~Flags:StatusFlags:Sleep|Frozen|Fear|Paralyze|Dizzy|Stone|Stop % 35D000
   6C:  		Wait  1`
   78:  		Goto  0
   84:  	EndIf
   8C:  	Wait  1`
   98:  EndLoop
   A0:  Call  GetActorPos       ( .Actor:Self *Var0 *Var1 *Var2 )
   BC:  Add   *Var0  00000005
   CC:  Call  SetActorIdleSpeed ( .Actor:Self *Fixed[1.0] )
   E0:  Call  SetIdleAnimations ( .Actor:Self 00000001 $IdleAnimations_80222370 )
   F8:  Call  SetIdleGoal       ( .Actor:Self *Var0 *Var1 *Var2 )
  114:  Call  IdleRunToGoal     ( .Actor:Self  0` )
  128:  Call  SetIdleAnimations ( .Actor:Self 00000001 $IdleAnimations_80222324 )
  140:  Loop  00000014
  14C:  	Label  1
  158:  	Call  GetStatusFlags    ( .Actor:Self *Var1 )
  16C:  	If  *Var1  &  ~Flags:StatusFlags:Sleep|Frozen|Fear|Paralyze|Dizzy|Stone|Stop % 35D000
  17C:  		Wait  1`
  188:  		Goto  1
  194:  	EndIf
  19C:  	Wait  1`
  1A8:  EndLoop
  1B0:  Call  GetActorPos       ( .Actor:Self *Var0 *Var1 *Var2 )
  1CC:  Sub   *Var0  00000005
  1DC:  Call  SetActorIdleSpeed ( .Actor:Self *Fixed[1.0] )
  1F0:  Call  SetIdleAnimations ( .Actor:Self 00000001 $IdleAnimations_80222370 )
  208:  Call  SetIdleGoal       ( .Actor:Self *Var0 *Var1 *Var2 )
  224:  Call  IdleRunToGoal     ( .Actor:Self  0` )
  238:  Call  SetIdleAnimations ( .Actor:Self 00000001 $IdleAnimations_80222324 )
  250:  Loop  00000050
  25C:  	Label  2
  268:  	Call  GetStatusFlags    ( .Actor:Self *Var1 )
  27C:  	If  *Var1  &  ~Flags:StatusFlags:Sleep|Frozen|Fear|Paralyze|Dizzy|Stone|Stop % 35D000
  28C:  		Wait  1`
  298:  		Goto  2
  2A4:  	EndIf
  2AC:  	Wait  1`
  2B8:  EndLoop
  2C0:  Goto  A
  2CC:  Return
  2D4:  End
}

#new:Script $Script_HandleEvent_802226E4
{
    0:  Call  UseIdleAnimation  ( .Actor:Self .False )
   14:  Call  EnableIdleScript  ( .Actor:Self 00000000 )
   28:  Call  SetActorScale     ( .Actor:Self *Fixed[1.0] *Fixed[1.0] *Fixed[1.0] )
   44:  Call  GetLastEvent      ( .Actor:Self *Var0 )
   58:  Switch  *Var0
   64:  	CaseOR  ==  .Event:HitCombo % 9
   70:  	CaseOR  ==  .Event:Hit % A
   7C:  		SetConst  *Var0  00000001
   8C:  		SetConst  *Var1  00260405
   9C:  		ExecWait  DoNormalHit
   A8:  	EndCaseGroup
   B0:  	Case  ==  .Event:BurnHit % E
   BC:  		SetConst  *Var0  00000001
   CC:  		SetConst  *Var1  00260409
   DC:  		SetConst  *Var2  0026040A
   EC:  		ExecWait  DoBurnHit
   F8:  	Case  ==  .Event:BurnDeath % 24
  104:  		SetConst  *Var0  00000001
  114:  		SetConst  *Var1  00260409
  124:  		SetConst  *Var2  0026040A
  134:  		ExecWait  DoBurnHit
  140:  		SetConst  *Var0  00000001
  150:  		SetConst  *Var1  0026040A
  160:  		ExecWait  DoDeath
  16C:  		Return
  174:  	Case  ==  .Event:SpinSmashHit % B
  180:  		SetConst  *Var0  00000001
  190:  		SetConst  *Var1  00260405
  1A0:  		ExecWait  DoSpinSmashHit
  1AC:  	Case  ==  .Event:SpinSmashDeath % 21
  1B8:  		SetConst  *Var0  00000001
  1C8:  		SetConst  *Var1  00260405
  1D8:  		ExecWait  DoSpinSmashHit
  1E4:  		SetConst  *Var0  00000001
  1F4:  		SetConst  *Var1  00260406
  204:  		ExecWait  DoDeath
  210:  		Return
  218:  	Case  ==  .Event:ShockHit % 2F
  224:  		SetConst  *Var0  00000001
  234:  		SetConst  *Var1  0026040E
  244:  		ExecWait  DoShockHit
  250:  		SetConst  *Var0  00000001
  260:  		SetConst  *Var1  00260405
  270:  		ExecWait  DoJumpBack
  27C:  		Call  JumpToGoal    ( .Actor:Self  5` .False .True .False )
  29C:  		Call  SetAnimationRate      ( .Actor:Self 00000001 *Fixed[2.0] )
  2B4:  		Call  SetAnimation  ( .Actor:Self 00000001 00260407 )
  2CC:  		Call  SetGoalToHome ( .Actor:Self )
  2DC:  		Call  SetActorSpeed ( .Actor:Self *Fixed[8.0] )
  2F0:  		Call  RunToGoal     ( .Actor:Self  0` .False )
  308:  		Call  SetAnimationRate      ( .Actor:Self 00000001 *Fixed[1.0] )
  320:  		Wait  5`
  32C:  		Call  SetAnimation  ( .Actor:Self 00000001 00260401 )
  344:  		Call  SetActorJumpGravity   ( .Actor:Self *Fixed[1.6] )
  358:  		Call  JumpToGoal    ( .Actor:Self  5` .False .True .False )
  378:  	Case  ==  .Event:ShockDeath % 26
  384:  		SetConst  *Var0  00000001
  394:  		SetConst  *Var1  0026040E
  3A4:  		ExecWait  DoShockHit
  3B0:  		SetConst  *Var0  00000001
  3C0:  		SetConst  *Var1  00260406
  3D0:  		ExecWait  DoDeath
  3DC:  		Return
  3E4:  	Case  ==  .Event:StarBeam % 13
  3F0:  	CaseOR  ==  00000017 % 17
  3FC:  	CaseOR  ==  .Event:Immune % 19
  408:  	CaseOR  ==  .Event:AirLiftFailed % 1F
  414:  		SetConst  *Var0  00000001
  424:  		SetConst  *Var1  00260401
  434:  		ExecWait  DoImmune
  440:  	EndCaseGroup
  448:  	Case  ==  .Event:Death % 20
  454:  		SetConst  *Var0  00000001
  464:  		SetConst  *Var1  00260405
  474:  		ExecWait  DoNormalHit
  480:  		Wait  10`
  48C:  		SetConst  *Var0  00000001
  49C:  		SetConst  *Var1  00260406
  4AC:  		ExecWait  DoDeath
  4B8:  		Return
  4C0:  	Case  ==  .Event:EndFirstStrike % 35
  4CC:  		Call  SetAnimationRate  ( .Actor:Self 00000001 *Fixed[2.0] )
  4E4:  		Call  SetAnimation  ( .Actor:Self 00000001 00260403 )
  4FC:  		Call  SetGoalToHome ( .Actor:Self )
  50C:  		Call  SetActorSpeed ( .Actor:Self *Fixed[4.0] )
  520:  		Call  RunToGoal     ( .Actor:Self  0` .False )
  538:  		Call  SetAnimationRate  ( .Actor:Self 00000001 *Fixed[1.0] )
  550:  		Call  HPBarToHome   ( .Actor:Self )
  560:  	Case  ==  .Event:RecoverStatus % 31
  56C:  		SetConst  *Var0  00000001
  57C:  		SetConst  *Var1  00260401
  58C:  		ExecWait  DoRecover
  598:  	Case  ==  .Event:ScareAway % 39
  5A4:  		SetConst  *Var0  00000001
  5B4:  		SetConst  *Var1  00260403
  5C4:  		SetConst  *Var2  00260405
  5D4:  		ExecWait  DoScareAway
  5E0:  		Return
  5E8:  	Case  ==  .Event:BeginAirLift % 3A
  5F4:  		SetConst  *Var0  00000001
  604:  		SetConst  *Var1  00260403
  614:  		ExecWait  DoAirLift
  620:  	Case  ==  .Event:BlowAway % 16
  62C:  		SetConst  *Var0  00000001
  63C:  		SetConst  *Var1  00260405
  64C:  		ExecWait  DoBlowAway
  658:  		Return
  660:  	Default
  668:  EndSwitch
  670:  Call  SetAnimation      ( .Actor:Self 00000001 00260401 )
  688:  Call  EnableIdleScript  ( .Actor:Self 00000001 )
  69C:  Call  UseIdleAnimation  ( .Actor:Self .True )
  6B0:  Return
  6B8:  End
}

#new:FloatTable $FloatTable_80222DA4
{
	0.0      0.017452 0.034899 0.052336 0.069756 0.087156 0.104528 0.121869
	0.139173 0.156434 0.173648 0.190809 0.207912 0.224951 0.241922 0.258819
	0.275637 0.292372 0.309017 0.325568 0.34202  0.358368 0.374607 0.390731
	0.406737 0.422618 0.438371 0.45399  0.469472 0.48481  0.5      0.515038
	0.529919 0.544639 0.559193 0.573576 0.587785 0.601815 0.615661 0.62932
	0.642788 0.656059 0.669131 0.681998 0.694658 0.707107 0.71934  0.731354
	0.743145 0.75471  0.766044 0.777146 0.788011 0.798636 0.809017 0.819152
	0.829038 0.838671 0.848048 0.857167 0.866025 0.87462  0.882948 0.891007
	0.898794 0.906308 0.913545 0.920505 0.927184 0.93358  0.939693 0.945519
	0.951057 0.956305 0.961262 0.965926 0.970296 0.97437  0.978148 0.981627
	0.984808 0.987688 0.990268 0.992546 0.994522 0.996195 0.997564 0.99863
	0.999391 0.999848 1.0
}

#new:Script $Script_TakeTurn_80222F10
{
    0:  Call  UseIdleAnimation  ( .Actor:Self .False )
   14:  Call  EnableIdleScript  ( .Actor:Self 00000000 )
   28:  Call  SetTargetActor    ( .Actor:Self .Actor:Player )
   3C:  Call  UseBattleCamPreset    ( 0000003F )
   4C:  Call  BattleCamTargetActor  ( .Actor:Self )
   5C:  Call  8024ECF8  ( FFFFFFFF 00000001 00000000 )
   74:  Call  SetAnimation      ( .Actor:Self 00000001 00260403 )
   8C:  Call  SetGoalToTarget   ( .Actor:Self )
   9C:  Call  AddGoalPos        ( .Actor:Self  50`  0`  0` )
   B8:  Call  SetActorSpeed     ( .Actor:Self *Fixed[6.0] )
   CC:  Call  RunToGoal ( .Actor:Self  0` .False )
   E4:  Call  SetAnimation      ( .Actor:Self 00000001 00260401 )
   FC:  Call  SetActorDispOffset    ( .Actor:Self 00000000 FFFFFFFF 00000000 )
  118:  Wait  1`
  124:  Call  SetActorDispOffset    ( .Actor:Self 00000000 FFFFFFFE 00000000 )
  140:  Wait  5`
  14C:  Call  SetActorDispOffset    ( .Actor:Self 00000000 00000000 00000000 )
  168:  Call  SetAnimation      ( .Actor:Self 00000001 00260404 )
  180:  Call  EnemyTestTarget   ( .Actor:Self *Var0 ~Flags:DamageType:0 00000000 00000001 00000010 )
  1A4:  Switch  *Var0
  1B0:  	CaseOR  ==  .HitResult:Miss % 6
  1BC:  	CaseOR  ==  .HitResult:Lucky % 5
  1C8:  		Set   *VarA  *Var0
  1D8:  		Call  SetGoalToTarget   ( .Actor:Self )
  1E8:  		Call  GetGoalPos        ( .Actor:Self *Var0 *Var1 *Var2 )
  204:  		Sub   *Var0  0000000A
  214:  		Set   *Var1  0000000A
  224:  		Add   *Var2  00000003
  234:  		Call  SetGoalPos        ( .Actor:Self *Var0 *Var1 *Var2 )
  250:  		Call  SetActorJumpGravity   ( .Actor:Self *Fixed[1.2] )
  264:  		Thread
  26C:  			Call  GetActorPos   ( .Actor:Self *Var1 *Var2 *Var0 )
  288:  			Set   *Var0  00000000
  298:  			Loop  00000010
  2A4:  				Call  GetActorPos   ( .Actor:Self *Var4 *Var5 *Var6 )
  2C0:  				Call  $Function_8021838C    ( *Var1 *Var2 *Var4 *Var5 *Var0 )
  2E0:  				Call  SetActorRotation      ( .Actor:Self 00000000 00000000 *Var0 )
  2FC:  				Set   *Var1  *Var4
  30C:  				Set   *Var2  *Var5
  31C:  				Set   *Var3  *Var6
  32C:  				Wait  1`
  338:  			EndLoop
  340:  		EndThread
  348:  		Thread
  350:  			Wait  6`
  35C:  			Call  SetAnimation  ( .Actor:Self 00000001 00260404 )
  374:  		EndThread
  37C:  		Call  JumpToGoal    ( .Actor:Self  16` .False .True .False )
  39C:  		Call  SetAnimation  ( .Actor:Self 00000001 00260408 )
  3B4:  		Call  SetActorScale ( .Actor:Self *Fixed[1.1] *Fixed[0.8] *Fixed[1.0] )
  3D0:  		Call  SetActorDispOffset    ( .Actor:Self 00000000 00000005 00000000 )
  3EC:  		Wait  1`
  3F8:  		Call  SetActorScale ( .Actor:Self *Fixed[1.3] *Fixed[0.5] *Fixed[1.0] )
  414:  		Call  SetActorDispOffset    ( .Actor:Self 00000000 FFFFFFFE 00000000 )
  430:  		Wait  1`
  43C:  		Call  SetActorScale ( .Actor:Self *Fixed[1.0] *Fixed[1.0] *Fixed[1.0] )
  458:  		Call  SetActorDispOffset    ( .Actor:Self 00000000 00000007 00000000 )
  474:  		Call  SetAnimation  ( .Actor:Self 00000001 00260405 )
  48C:  		Wait  5`
  498:  		If  *VarA  ==  .HitResult:Lucky % 5
  4A8:  			Call  EnemyTestTarget   ( .Actor:Self *Var0 ~Flags:DamageType:TriggerLucky 00000000 00000000 00000000 )
  4CC:  		EndIf
  4D4:  		Wait  5`
  4E0:  		Call  SetActorDispOffset    ( .Actor:Self 00000000 00000000 00000000 )
  4FC:  		Call  SetAnimation      ( .Actor:Self 00000001 00260404 )
  514:  		Call  SetGoalToTarget   ( .Actor:Self )
  524:  		Call  GetGoalPos        ( .Actor:Self *Var0 *Var1 *Var2 )
  540:  		Add   *Var0  00000014
  550:  		Set   *Var1  00000000
  560:  		Call  SetGoalPos        ( .Actor:Self *Var0 *Var1 *Var2 )
  57C:  		Call  SetActorJumpGravity   ( .Actor:Self *Fixed[2.0] )
  590:  		Thread
  598:  			Wait  4`
  5A4:  			Set   *Var0  000000B4
  5B4:  			Loop  00000004
  5C0:  				Sub   *Var0  0000002D
  5D0:  				Call  SetActorRotation  ( .Actor:Self 00000000 00000000 *Var0 )
  5EC:  				Wait  1`
  5F8:  			EndLoop
  600:  			Call  SetAnimation  ( .Actor:Self 00000001 00260404 )
  618:  		EndThread
  620:  		Call  JumpToGoal        ( .Actor:Self  15` .False .True .False )
  640:  		Call  SetAnimation      ( .Actor:Self 00000001 00260407 )
  658:  		Wait  5`
  664:  		Call  UseBattleCamPreset    ( 00000002 )
  674:  		Call  YieldTurn ( )
  680:  		Call  SetActorYaw       ( .Actor:Self  180` )
  694:  		Call  AddActorDecoration    ( .Actor:Self 00000001 00000000 .Decoration:Sweat )
  6B0:  		Call  SetAnimationRate  ( .Actor:Self 00000001 *Fixed[2.0] )
  6C8:  		Call  SetGoalToHome     ( .Actor:Self )
  6D8:  		Call  SetActorSpeed     ( .Actor:Self *Fixed[8.0] )
  6EC:  		Call  RunToGoal ( .Actor:Self  0` .False )
  704:  		Call  SetAnimationRate  ( .Actor:Self 00000001 *Fixed[1.0] )
  71C:  		Call  SetActorYaw       ( .Actor:Self  0` )
  730:  		Wait  5`
  73C:  		Call  SetAnimation      ( .Actor:Self 00000001 00260401 )
  754:  		Call  SetActorJumpGravity   ( .Actor:Self *Fixed[1.6] )
  768:  		Call  JumpToGoal        ( .Actor:Self  5` .False .True .False )
  788:  		Call  RemoveActorDecoration ( .Actor:Self 00000001 00000000 )
  7A0:  		Call  EnableIdleScript  ( .Actor:Self 00000001 )
  7B4:  		Call  UseIdleAnimation  ( .Actor:Self .True )
  7C8:  		Return
  7D0:  	EndCaseGroup
  7D8:  	Default
  7E0:  		Call  SetGoalToTarget       ( .Actor:Self )
  7F0:  		Call  SetActorJumpGravity   ( .Actor:Self *Fixed[1.2] )
  804:  		Thread
  80C:  			Call  GetActorPos   ( .Actor:Self *Var1 *Var2 *Var0 )
  828:  			Set   *Var0  00000000
  838:  			Loop  00000010
  844:  				Call  GetActorPos   ( .Actor:Self *Var4 *Var5 *Var6 )
  860:  				Call  $Function_8021838C    ( *Var1 *Var2 *Var4 *Var5 *Var0 )
  880:  				Call  SetActorRotation      ( .Actor:Self 00000000 00000000 *Var0 )
  89C:  				Set   *Var1  *Var4
  8AC:  				Set   *Var2  *Var5
  8BC:  				Set   *Var3  *Var6
  8CC:  				Wait  1`
  8D8:  			EndLoop
  8E0:  		EndThread
  8E8:  		Thread
  8F0:  			Wait  6`
  8FC:  			Call  SetAnimation  ( .Actor:Self 00000001 00260404 )
  914:  		EndThread
  91C:  		Call  JumpToGoal    ( .Actor:Self  16` .False .True .False )
  93C:  		Call  SetAnimation  ( .Actor:Self 00000001 0026040B )
  954:  		Call  SetActorScale ( .Actor:Self *Fixed[1.1] *Fixed[0.8] *Fixed[1.0] )
  970:  		Wait  1`
  97C:  		Call  SetActorScale ( .Actor:Self *Fixed[1.3] *Fixed[0.5] *Fixed[1.0] )
  998:  		Wait  1`
  9A4:  EndSwitch
  9AC:  Call  EnemyDamageTarget ( .Actor:Self *Var0 ~Flags:DamageType:0 00000000 00000000 00000002 00000020 )
  9D4:  Switch  *Var0
  9E0:  	CaseOR  ==  .HitResult:Hit % 0
  9EC:  	CaseOR  ==  .HitResult:QuakeImmune % 2
  9F8:  		Call  UseBattleCamPreset    ( 00000002 )
  A08:  		Call  SetActorScale ( .Actor:Self *Fixed[1.1] *Fixed[0.8] *Fixed[1.0] )
  A24:  		Wait  1`
  A30:  		Call  SetActorScale ( .Actor:Self *Fixed[1.0] *Fixed[1.0] *Fixed[1.0] )
  A4C:  		Wait  1`
  A58:  		Call  SetActorRotation      ( .Actor:Self 00000000 00000000 00000000 )
  A74:  		Call  SetActorDispOffset    ( .Actor:Self 00000000 00000000 00000000 )
  A90:  		Call  SetAnimation  ( .Actor:Self 00000001 00260401 )
  AA8:  		Call  GetGoalPos    ( .Actor:Self *Var0 *Var1 *Var2 )
  AC4:  		Add   *Var0  00000028
  AD4:  		Set   *Var1  00000000
  AE4:  		Call  SetActorJumpGravity   ( .Actor:Self *Fixed[1.8] )
  AF8:  		Call  SetGoalPos    ( .Actor:Self *Var0 *Var1 *Var2 )
  B14:  		Call  JumpToGoal    ( .Actor:Self  10` .False .True .False )
  B34:  		Add   *Var0  0000001E
  B44:  		Call  SetGoalPos    ( .Actor:Self *Var0 *Var1 *Var2 )
  B60:  		Call  JumpToGoal    ( .Actor:Self  8` .False .True .False )
  B80:  		Add   *Var0  00000014
  B90:  		Call  SetGoalPos    ( .Actor:Self *Var0 *Var1 *Var2 )
  BAC:  		Call  JumpToGoal    ( .Actor:Self  6` .False .True .False )
  BCC:  		Call  SetAnimation  ( .Actor:Self 00000001 00260401 )
  BE4:  		Wait  3`
  BF0:  		Call  YieldTurn ( )
  BFC:  		Call  SetAnimationRate      ( .Actor:Self 00000001 *Fixed[2.0] )
  C14:  		Call  SetAnimation  ( .Actor:Self 00000001 00260403 )
  C2C:  		Call  SetGoalToHome ( .Actor:Self )
  C3C:  		Call  SetActorSpeed ( .Actor:Self *Fixed[8.0] )
  C50:  		Call  RunToGoal     ( .Actor:Self  0` .False )
  C68:  		Call  SetAnimationRate      ( .Actor:Self 00000001 *Fixed[1.0] )
  C80:  	EndCaseGroup
  C88:  EndSwitch
  C90:  Call  EnableIdleScript  ( .Actor:Self 00000001 )
  CA4:  Call  UseIdleAnimation  ( .Actor:Self .True )
  CB8:  Return
  CC0:  End
}

PADDING: 80223BD8 to 80223BE0 (005F8068 to 005F8070)
00000000 00000000

#new:DefenseTable $DefenseTable_80223BE0
{
	.Element:Normal 00000000
	.Element:End
}

#new:StatusTable $StatusTable_80223BEC
{
	.Status:Normal      0`
	.Status:Default     0`
	.Status:Sleep      70`
	.Status:Poison     80`
	.Status:Frozen    100`
	.Status:Dizzy      80`
	.Status:Fear       80`
	.Status:Static     80`
	.Status:Paralyze   90`
	.Status:Shrink     80`
	.Status:Stop       90`
	.Status:DefaultTurnMod    0`
	.Status:SleepTurnMod      0`
	.Status:PoisonTurnMod     0`
	.Status:FrozenTurnMod     0`
	.Status:DizzyTurnMod      0`
	.Status:FearTurnMod       0`
	.Status:StaticTurnMod     0`
	.Status:ParalyzeTurnMod   0`
	.Status:ShrinkTurnMod     0`
	.Status:StopTurnMod       0`
	.Status:End
}

#new:PartsTable $PartsTable_80223C98
{
	00800000 01000000 001800FF $IdleAnimations_80223CE4 $DefenseTable_80223BE0 00000010 00000000 00F40000 00000000
}

#new:Actor $SpikedGloomba
{
	% stats
	[Index]         4b
	[Level]        12`b
	[MaxHP]         7`b
	[Coins]         1`b
	[Flags]       00000000
	[StatusTable] $StatusTable_80223BEC
	% ai
	[PartsCount]    1`s
	[PartsTable]  $PartsTable_80223C98
	[Script]      $Script_Init_80223D7C
	% move effectiveness
	[Escape]       65`b
	[Item]         75`b
	[AirLift]      90`b
	[Hurricane]    85`b % Bow's "Spook" as well
	[UpAndAway]    95`b
	[PowerBounce] 100`b
	[SpinSmash]     0`b % weight (0-4)
	% ui positions
	[Size]         24`b  28`b % width height
	[HealthBar]     0`b   0`b % dx dy
	[StatusTurn]  -10`b  20`b % dx dy
	[StatusIcon]   10`b  20`b % dx dy
}

#new:IdleAnimations $IdleAnimations_80223CE4
{
	.Status:Normal    00270101
	.Status:Stone     00270100
	.Status:Sleep     0027010A
	.Status:Poison    00270101
	.Status:Stop      00270100
	.Status:Static    00270101
	.Status:Paralyze  00270100
	.Status:Dizzy     00270109
	.Status:Fear      00270109
	.Status:End
}

#new:IdleAnimations $IdleAnimations_80223D30
{
	.Status:Normal    00270103
	.Status:Stone     00270100
	.Status:Sleep     0027010A
	.Status:Poison    00270101
	.Status:Stop      00270100
	.Status:Static    00270103
	.Status:Paralyze  00270100
	.Status:Dizzy     00270109
	.Status:Fear      00270109
	.Status:End
}

#new:Script $Script_Init_80223D7C
{
    0:  Call  BindTakeTurn      ( .Actor:Self $Script_TakeTurn_802249EC )
   14:  Call  BindIdle  ( .Actor:Self $Script_Idle_80223DC8 )
   28:  Call  BindHandleEvent   ( .Actor:Self $Script_HandleEvent_802240A4 )
   3C:  Return
   44:  End
}

#new:Script $Script_Idle_80223DC8
{
    0:  Label  A
    C:  Call  RandInt   ( 00000050 *Var0 )
   20:  Add   *Var0  00000050
   30:  Loop  *Var0
   3C:  	Label  0
   48:  	Call  GetStatusFlags    ( .Actor:Self *Var1 )
   5C:  	If  *Var1  &  ~Flags:StatusFlags:Sleep|Frozen|Fear|Paralyze|Dizzy|Stone|Stop % 35D000
   6C:  		Wait  1`
   78:  		Goto  0
   84:  	EndIf
   8C:  	Wait  1`
   98:  EndLoop
   A0:  Call  GetActorPos       ( .Actor:Self *Var0 *Var1 *Var2 )
   BC:  Add   *Var0  00000005
   CC:  Call  SetActorIdleSpeed ( .Actor:Self *Fixed[1.0] )
   E0:  Call  SetIdleAnimations ( .Actor:Self 00000001 $IdleAnimations_80223D30 )
   F8:  Call  SetIdleGoal       ( .Actor:Self *Var0 *Var1 *Var2 )
  114:  Call  IdleRunToGoal     ( .Actor:Self  0` )
  128:  Call  SetIdleAnimations ( .Actor:Self 00000001 $IdleAnimations_80223CE4 )
  140:  Loop  00000014
  14C:  	Label  1
  158:  	Call  GetStatusFlags    ( .Actor:Self *Var1 )
  16C:  	If  *Var1  &  ~Flags:StatusFlags:Sleep|Frozen|Fear|Paralyze|Dizzy|Stone|Stop % 35D000
  17C:  		Wait  1`
  188:  		Goto  1
  194:  	EndIf
  19C:  	Wait  1`
  1A8:  EndLoop
  1B0:  Call  GetActorPos       ( .Actor:Self *Var0 *Var1 *Var2 )
  1CC:  Sub   *Var0  00000005
  1DC:  Call  SetActorIdleSpeed ( .Actor:Self *Fixed[1.0] )
  1F0:  Call  SetIdleAnimations ( .Actor:Self 00000001 $IdleAnimations_80223D30 )
  208:  Call  SetIdleGoal       ( .Actor:Self *Var0 *Var1 *Var2 )
  224:  Call  IdleRunToGoal     ( .Actor:Self  0` )
  238:  Call  SetIdleAnimations ( .Actor:Self 00000001 $IdleAnimations_80223CE4 )
  250:  Loop  00000050
  25C:  	Label  2
  268:  	Call  GetStatusFlags    ( .Actor:Self *Var1 )
  27C:  	If  *Var1  &  ~Flags:StatusFlags:Sleep|Frozen|Fear|Paralyze|Dizzy|Stone|Stop % 35D000
  28C:  		Wait  1`
  298:  		Goto  2
  2A4:  	EndIf
  2AC:  	Wait  1`
  2B8:  EndLoop
  2C0:  Goto  A
  2CC:  Return
  2D4:  End
}

#new:Script $Script_HandleEvent_802240A4
{
    0:  Call  UseIdleAnimation  ( .Actor:Self .False )
   14:  Call  EnableIdleScript  ( .Actor:Self 00000000 )
   28:  Call  SetActorScale     ( .Actor:Self *Fixed[1.0] *Fixed[1.0] *Fixed[1.0] )
   44:  Call  GetLastEvent      ( .Actor:Self *Var0 )
   58:  Switch  *Var0
   64:  	CaseOR  ==  .Event:HitCombo % 9
   70:  	CaseOR  ==  .Event:Hit % A
   7C:  		SetConst  *Var0  00000001
   8C:  		SetConst  *Var1  00270106
   9C:  		ExecWait  DoNormalHit
   A8:  	EndCaseGroup
   B0:  	Case  ==  .Event:BurnHit % E
   BC:  		SetConst  *Var0  00000001
   CC:  		SetConst  *Var1  00270107
   DC:  		SetConst  *Var2  00270108
   EC:  		ExecWait  DoBurnHit
   F8:  	Case  ==  .Event:BurnDeath % 24
  104:  		SetConst  *Var0  00000001
  114:  		SetConst  *Var1  00270107
  124:  		SetConst  *Var2  00270108
  134:  		ExecWait  DoBurnHit
  140:  		SetConst  *Var0  00000001
  150:  		SetConst  *Var1  00270108
  160:  		ExecWait  DoDeath
  16C:  		Return
  174:  	Case  ==  .Event:SpinSmashHit % B
  180:  		SetConst  *Var0  00000001
  190:  		SetConst  *Var1  00270106
  1A0:  		ExecWait  DoSpinSmashHit
  1AC:  	Case  ==  .Event:SpinSmashDeath % 21
  1B8:  		SetConst  *Var0  00000001
  1C8:  		SetConst  *Var1  00270106
  1D8:  		ExecWait  DoSpinSmashHit
  1E4:  		SetConst  *Var0  00000001
  1F4:  		SetConst  *Var1  00270105
  204:  		ExecWait  DoDeath
  210:  		Return
  218:  	Case  ==  .Event:ShockHit % 2F
  224:  		SetConst  *Var0  00000001
  234:  		SetConst  *Var1  0027010C
  244:  		ExecWait  DoShockHit
  250:  		SetConst  *Var0  00000001
  260:  		SetConst  *Var1  00270106
  270:  		ExecWait  DoJumpBack
  27C:  		Call  JumpToGoal    ( .Actor:Self  5` .False .True .False )
  29C:  		Call  SetAnimationRate      ( .Actor:Self 00000001 *Fixed[2.0] )
  2B4:  		Call  SetAnimation  ( .Actor:Self 00000001 00270109 )
  2CC:  		Call  SetGoalToHome ( .Actor:Self )
  2DC:  		Call  SetActorSpeed ( .Actor:Self *Fixed[8.0] )
  2F0:  		Call  RunToGoal     ( .Actor:Self  0` .False )
  308:  		Call  SetAnimationRate      ( .Actor:Self 00000001 *Fixed[1.0] )
  320:  		Wait  5`
  32C:  		Call  SetAnimation  ( .Actor:Self 00000001 00270101 )
  344:  		Call  SetActorJumpGravity   ( .Actor:Self *Fixed[1.6] )
  358:  		Call  JumpToGoal    ( .Actor:Self  5` .False .True .False )
  378:  	Case  ==  .Event:ShockDeath % 26
  384:  		SetConst  *Var0  00000001
  394:  		SetConst  *Var1  0027010C
  3A4:  		ExecWait  DoShockHit
  3B0:  		SetConst  *Var0  00000001
  3C0:  		SetConst  *Var1  00270105
  3D0:  		ExecWait  DoDeath
  3DC:  		Return
  3E4:  	Case  ==  .Event:StarBeam % 13
  3F0:  	CaseOR  ==  00000017 % 17
  3FC:  	CaseOR  ==  .Event:Immune % 19
  408:  	CaseOR  ==  .Event:AirLiftFailed % 1F
  414:  		SetConst  *Var0  00000001
  424:  		SetConst  *Var1  00270101
  434:  		ExecWait  DoImmune
  440:  	EndCaseGroup
  448:  	Case  ==  .Event:Death % 20
  454:  		SetConst  *Var0  00000001
  464:  		SetConst  *Var1  00270106
  474:  		ExecWait  DoNormalHit
  480:  		Wait  10`
  48C:  		SetConst  *Var0  00000001
  49C:  		SetConst  *Var1  00270105
  4AC:  		ExecWait  DoDeath
  4B8:  		Return
  4C0:  	Case  ==  .Event:EndFirstStrike % 35
  4CC:  		Call  SetAnimationRate  ( .Actor:Self 00000001 *Fixed[2.0] )
  4E4:  		Call  SetAnimation  ( .Actor:Self 00000001 00270103 )
  4FC:  		Call  SetGoalToHome ( .Actor:Self )
  50C:  		Call  SetActorSpeed ( .Actor:Self *Fixed[4.0] )
  520:  		Call  RunToGoal     ( .Actor:Self  0` .False )
  538:  		Call  SetAnimationRate  ( .Actor:Self 00000001 *Fixed[1.0] )
  550:  		Call  HPBarToHome   ( .Actor:Self )
  560:  	Case  ==  .Event:RecoverStatus % 31
  56C:  		SetConst  *Var0  00000001
  57C:  		SetConst  *Var1  00270101
  58C:  		ExecWait  DoRecover
  598:  	Case  ==  .Event:ScareAway % 39
  5A4:  		SetConst  *Var0  00000001
  5B4:  		SetConst  *Var1  00270103
  5C4:  		SetConst  *Var2  00270106
  5D4:  		ExecWait  DoScareAway
  5E0:  		Return
  5E8:  	Case  ==  .Event:BeginAirLift % 3A
  5F4:  		SetConst  *Var0  00000001
  604:  		SetConst  *Var1  00270103
  614:  		ExecWait  DoAirLift
  620:  	Case  ==  .Event:BlowAway % 16
  62C:  		SetConst  *Var0  00000001
  63C:  		SetConst  *Var1  00270106
  64C:  		ExecWait  DoBlowAway
  658:  		Return
  660:  	Case  ==  .Event:SpikeTaunt % 1B
  66C:  		Call  GetStatusFlags    ( .Actor:Self *Var0 )
  680:  		If  *Var0  !&  ~Flags:StatusFlags:Sleep|Frozen|Fear|Paralyze|Dizzy|Stone|Stop % 35D000
  690:  			Call  SetAnimation  ( .Actor:Self 00000001 0027010B )
  6A8:  		EndIf
  6B0:  		Wait  10`
  6BC:  		Call  GetActorPos       ( .Actor:Self *Var0 *Var1 *Var2 )
  6D8:  		Call  GetStatusFlags    ( .Actor:Self *Var3 )
  6EC:  		If  *Var3  &  ~Flags:StatusFlags:Shrink % 80000
  6FC:  			Add   *Var1  0000000A
  70C:  		Else
  714:  			Add   *Var1  0000001A
  724:  		EndIf
  72C:  		Call  PlayEffect    ( ~FX:LensFlare:Rotating *Var0 *Var1 *Var2 00000014 00000000 00000000 00000000 00000000 00000000 00000000 00000000 00000000 )
  770:  		Wait  20`
  77C:  	Default
  784:  EndSwitch
  78C:  Call  SetAnimation      ( .Actor:Self 00000001 00270101 )
  7A4:  Call  EnableIdleScript  ( .Actor:Self 00000001 )
  7B8:  Call  UseIdleAnimation  ( .Actor:Self .True )
  7CC:  Return
  7D4:  End
}

#new:FloatTable $FloatTable_80224880
{
	0.0      0.017452 0.034899 0.052336 0.069756 0.087156 0.104528 0.121869
	0.139173 0.156434 0.173648 0.190809 0.207912 0.224951 0.241922 0.258819
	0.275637 0.292372 0.309017 0.325568 0.34202  0.358368 0.374607 0.390731
	0.406737 0.422618 0.438371 0.45399  0.469472 0.48481  0.5      0.515038
	0.529919 0.544639 0.559193 0.573576 0.587785 0.601815 0.615661 0.62932
	0.642788 0.656059 0.669131 0.681998 0.694658 0.707107 0.71934  0.731354
	0.743145 0.75471  0.766044 0.777146 0.788011 0.798636 0.809017 0.819152
	0.829038 0.838671 0.848048 0.857167 0.866025 0.87462  0.882948 0.891007
	0.898794 0.906308 0.913545 0.920505 0.927184 0.93358  0.939693 0.945519
	0.951057 0.956305 0.961262 0.965926 0.970296 0.97437  0.978148 0.981627
	0.984808 0.987688 0.990268 0.992546 0.994522 0.996195 0.997564 0.99863
	0.999391 0.999848 1.0
}

#new:Script $Script_TakeTurn_802249EC
{
    0:  Call  UseIdleAnimation  ( .Actor:Self .False )
   14:  Call  EnableIdleScript  ( .Actor:Self 00000000 )
   28:  Call  SetTargetActor    ( .Actor:Self .Actor:Player )
   3C:  Call  UseBattleCamPreset    ( 0000003F )
   4C:  Call  BattleCamTargetActor  ( .Actor:Self )
   5C:  Call  8024ECF8  ( FFFFFFFF 00000001 00000000 )
   74:  Call  SetAnimation      ( .Actor:Self 00000001 00270103 )
   8C:  Call  SetGoalToTarget   ( .Actor:Self )
   9C:  Call  AddGoalPos        ( .Actor:Self  50`  0`  0` )
   B8:  Call  SetActorSpeed     ( .Actor:Self *Fixed[6.0] )
   CC:  Call  RunToGoal ( .Actor:Self  0` .False )
   E4:  Call  SetAnimation      ( .Actor:Self 00000001 00270101 )
   FC:  Call  SetActorDispOffset    ( .Actor:Self 00000000 FFFFFFFF 00000000 )
  118:  Wait  1`
  124:  Call  SetActorDispOffset    ( .Actor:Self 00000000 FFFFFFFE 00000000 )
  140:  Wait  5`
  14C:  Call  SetActorDispOffset    ( .Actor:Self 00000000 00000000 00000000 )
  168:  Call  SetAnimation      ( .Actor:Self 00000001 00270104 )
  180:  Call  EnemyTestTarget   ( .Actor:Self *Var0 ~Flags:DamageType:0 00000000 00000001 00000010 )
  1A4:  Switch  *Var0
  1B0:  	CaseOR  ==  .HitResult:Miss % 6
  1BC:  	CaseOR  ==  .HitResult:Lucky % 5
  1C8:  		Set   *VarA  *Var0
  1D8:  		Call  SetGoalToTarget   ( .Actor:Self )
  1E8:  		Call  GetGoalPos        ( .Actor:Self *Var0 *Var1 *Var2 )
  204:  		Sub   *Var0  0000000A
  214:  		Set   *Var1  0000000A
  224:  		Add   *Var2  00000003
  234:  		Call  SetGoalPos        ( .Actor:Self *Var0 *Var1 *Var2 )
  250:  		Call  SetActorJumpGravity   ( .Actor:Self *Fixed[1.2] )
  264:  		Thread
  26C:  			Call  GetActorPos   ( .Actor:Self *Var1 *Var2 *Var0 )
  288:  			Set   *Var0  00000000
  298:  			Loop  00000010
  2A4:  				Call  GetActorPos   ( .Actor:Self *Var4 *Var5 *Var6 )
  2C0:  				Call  $Function_8021860C    ( *Var1 *Var2 *Var4 *Var5 *Var0 )
  2E0:  				Call  SetActorRotation      ( .Actor:Self 00000000 00000000 *Var0 )
  2FC:  				Set   *Var1  *Var4
  30C:  				Set   *Var2  *Var5
  31C:  				Set   *Var3  *Var6
  32C:  				Wait  1`
  338:  			EndLoop
  340:  		EndThread
  348:  		Thread
  350:  			Wait  6`
  35C:  			Call  SetAnimation  ( .Actor:Self 00000001 00270104 )
  374:  		EndThread
  37C:  		Call  JumpToGoal    ( .Actor:Self  16` .False .True .False )
  39C:  		Call  SetAnimation  ( .Actor:Self 00000001 0027010A )
  3B4:  		Call  SetActorScale ( .Actor:Self *Fixed[1.1] *Fixed[0.8] *Fixed[1.0] )
  3D0:  		Call  SetActorDispOffset    ( .Actor:Self 00000000 00000005 00000000 )
  3EC:  		Wait  1`
  3F8:  		Call  SetActorScale ( .Actor:Self *Fixed[1.3] *Fixed[0.5] *Fixed[1.0] )
  414:  		Call  SetActorDispOffset    ( .Actor:Self 00000000 FFFFFFFE 00000000 )
  430:  		Wait  1`
  43C:  		Call  SetActorScale ( .Actor:Self *Fixed[1.0] *Fixed[1.0] *Fixed[1.0] )
  458:  		Call  SetActorDispOffset    ( .Actor:Self 00000000 00000007 00000000 )
  474:  		Call  SetAnimation  ( .Actor:Self 00000001 00270106 )
  48C:  		Wait  5`
  498:  		If  *VarA  ==  .HitResult:Lucky % 5
  4A8:  			Call  EnemyTestTarget   ( .Actor:Self *Var0 ~Flags:DamageType:TriggerLucky 00000000 00000000 00000000 )
  4CC:  		EndIf
  4D4:  		Wait  5`
  4E0:  		Call  SetActorDispOffset    ( .Actor:Self 00000000 00000000 00000000 )
  4FC:  		Call  SetAnimation      ( .Actor:Self 00000001 00270104 )
  514:  		Call  SetGoalToTarget   ( .Actor:Self )
  524:  		Call  GetGoalPos        ( .Actor:Self *Var0 *Var1 *Var2 )
  540:  		Add   *Var0  00000014
  550:  		Set   *Var1  00000000
  560:  		Call  SetGoalPos        ( .Actor:Self *Var0 *Var1 *Var2 )
  57C:  		Call  SetActorJumpGravity   ( .Actor:Self *Fixed[2.0] )
  590:  		Thread
  598:  			Wait  4`
  5A4:  			Set   *Var0  000000B4
  5B4:  			Loop  00000004
  5C0:  				Sub   *Var0  0000002D
  5D0:  				Call  SetActorRotation  ( .Actor:Self 00000000 00000000 *Var0 )
  5EC:  				Wait  1`
  5F8:  			EndLoop
  600:  			Call  SetAnimation  ( .Actor:Self 00000001 00270104 )
  618:  		EndThread
  620:  		Call  JumpToGoal        ( .Actor:Self  15` .False .True .False )
  640:  		Call  SetAnimation      ( .Actor:Self 00000001 00270109 )
  658:  		Wait  5`
  664:  		Call  UseBattleCamPreset    ( 00000002 )
  674:  		Call  YieldTurn ( )
  680:  		Call  SetActorYaw       ( .Actor:Self  180` )
  694:  		Call  AddActorDecoration    ( .Actor:Self 00000001 00000000 .Decoration:Sweat )
  6B0:  		Call  SetAnimationRate  ( .Actor:Self 00000001 *Fixed[2.0] )
  6C8:  		Call  SetGoalToHome     ( .Actor:Self )
  6D8:  		Call  SetActorSpeed     ( .Actor:Self *Fixed[8.0] )
  6EC:  		Call  RunToGoal ( .Actor:Self  0` .False )
  704:  		Call  SetAnimationRate  ( .Actor:Self 00000001 *Fixed[1.0] )
  71C:  		Call  SetActorYaw       ( .Actor:Self  0` )
  730:  		Wait  5`
  73C:  		Call  SetAnimation      ( .Actor:Self 00000001 00270101 )
  754:  		Call  SetActorJumpGravity   ( .Actor:Self *Fixed[1.6] )
  768:  		Call  JumpToGoal        ( .Actor:Self  5` .False .True .False )
  788:  		Call  RemoveActorDecoration ( .Actor:Self 00000001 00000000 )
  7A0:  		Call  EnableIdleScript  ( .Actor:Self 00000001 )
  7B4:  		Call  UseIdleAnimation  ( .Actor:Self .True )
  7C8:  		Return
  7D0:  	EndCaseGroup
  7D8:  	Default
  7E0:  		Call  SetGoalToTarget       ( .Actor:Self )
  7F0:  		Call  SetActorJumpGravity   ( .Actor:Self *Fixed[1.2] )
  804:  		Thread
  80C:  			Call  GetActorPos   ( .Actor:Self *Var1 *Var2 *Var0 )
  828:  			Set   *Var0  00000000
  838:  			Loop  00000010
  844:  				Call  GetActorPos   ( .Actor:Self *Var4 *Var5 *Var6 )
  860:  				Call  $Function_8021860C    ( *Var1 *Var2 *Var4 *Var5 *Var0 )
  880:  				Call  SetActorRotation      ( .Actor:Self 00000000 00000000 *Var0 )
  89C:  				Set   *Var1  *Var4
  8AC:  				Set   *Var2  *Var5
  8BC:  				Set   *Var3  *Var6
  8CC:  				Wait  1`
  8D8:  			EndLoop
  8E0:  		EndThread
  8E8:  		Thread
  8F0:  			Wait  6`
  8FC:  			Call  SetAnimation  ( .Actor:Self 00000001 00270104 )
  914:  		EndThread
  91C:  		Call  JumpToGoal    ( .Actor:Self  16` .False .True .False )
  93C:  		Call  SetAnimation  ( .Actor:Self 00000001 00270104 )
  954:  		Call  SetActorScale ( .Actor:Self *Fixed[1.1] *Fixed[0.8] *Fixed[1.0] )
  970:  		Wait  1`
  97C:  		Call  SetActorScale ( .Actor:Self *Fixed[1.3] *Fixed[0.5] *Fixed[1.0] )
  998:  		Wait  1`
  9A4:  EndSwitch
  9AC:  Call  EnemyDamageTarget ( .Actor:Self *Var0 ~Flags:DamageType:0 00000000 00000000 00000003 00000020 )
  9D4:  Switch  *Var0
  9E0:  	CaseOR  ==  .HitResult:Hit % 0
  9EC:  	CaseOR  ==  .HitResult:QuakeImmune % 2
  9F8:  		Call  UseBattleCamPreset    ( 00000002 )
  A08:  		Call  SetActorScale ( .Actor:Self *Fixed[1.1] *Fixed[0.8] *Fixed[1.0] )
  A24:  		Wait  1`
  A30:  		Call  SetActorScale ( .Actor:Self *Fixed[1.0] *Fixed[1.0] *Fixed[1.0] )
  A4C:  		Wait  1`
  A58:  		Call  SetActorRotation      ( .Actor:Self 00000000 00000000 00000000 )
  A74:  		Call  SetActorDispOffset    ( .Actor:Self 00000000 00000000 00000000 )
  A90:  		Call  SetAnimation  ( .Actor:Self 00000001 00270101 )
  AA8:  		Call  GetGoalPos    ( .Actor:Self *Var0 *Var1 *Var2 )
  AC4:  		Add   *Var0  00000028
  AD4:  		Set   *Var1  00000000
  AE4:  		Call  SetActorJumpGravity   ( .Actor:Self *Fixed[1.8] )
  AF8:  		Call  SetGoalPos    ( .Actor:Self *Var0 *Var1 *Var2 )
  B14:  		Call  JumpToGoal    ( .Actor:Self  10` .False .True .False )
  B34:  		Add   *Var0  0000001E
  B44:  		Call  SetGoalPos    ( .Actor:Self *Var0 *Var1 *Var2 )
  B60:  		Call  JumpToGoal    ( .Actor:Self  8` .False .True .False )
  B80:  		Add   *Var0  00000014
  B90:  		Call  SetGoalPos    ( .Actor:Self *Var0 *Var1 *Var2 )
  BAC:  		Call  JumpToGoal    ( .Actor:Self  6` .False .True .False )
  BCC:  		Call  GetLastDamage ( .Actor:Player *Var0 )
  BE0:  		If  *Var0  >  00000000
  BF0:  			Call  SetAnimation  ( .Actor:Self 00000001 0027010B )
  C08:  			Wait  15`
  C14:  		Else
  C1C:  			Call  SetAnimation  ( .Actor:Self 00000001 00270101 )
  C34:  			Wait  3`
  C40:  		EndIf
  C48:  		Call  YieldTurn ( )
  C54:  		Call  SetAnimationRate  ( .Actor:Self 00000001 *Fixed[2.0] )
  C6C:  		Call  SetAnimation  ( .Actor:Self 00000001 00270103 )
  C84:  		Call  SetGoalToHome ( .Actor:Self )
  C94:  		Call  SetActorSpeed ( .Actor:Self *Fixed[8.0] )
  CA8:  		Call  RunToGoal     ( .Actor:Self  0` .False )
  CC0:  		Call  SetAnimationRate  ( .Actor:Self 00000001 *Fixed[1.0] )
  CD8:  	EndCaseGroup
  CE0:  EndSwitch
  CE8:  Call  EnableIdleScript  ( .Actor:Self 00000001 )
  CFC:  Call  UseIdleAnimation  ( .Actor:Self .True )
  D10:  Return
  D18:  End
}

PADDING: 8022570C to 80225710 (005F9B9C to 005F9BA0)
00000000

#new:DefenseTable $DefenseTable_80225710
{
	.Element:Normal 00000000
	.Element:End
}

#new:DefenseTable $DefenseTable_8022571C
{
	.Element:Normal 00000000
	.Element:End
}

#new:StatusTable $StatusTable_80225728
{
	.Status:Normal      0`
	.Status:Default     0`
	.Status:Sleep      70`
	.Status:Poison    100`
	.Status:Frozen    100`
	.Status:Dizzy      80`
	.Status:Fear      100`
	.Status:Static    100`
	.Status:Paralyze   90`
	.Status:Shrink     80`
	.Status:Stop       90`
	.Status:DefaultTurnMod    0`
	.Status:SleepTurnMod      0`
	.Status:PoisonTurnMod     0`
	.Status:FrozenTurnMod     0`
	.Status:DizzyTurnMod      0`
	.Status:FearTurnMod       0`
	.Status:StaticTurnMod     0`
	.Status:ParalyzeTurnMod   0`
	.Status:ShrinkTurnMod     0`
	.Status:StopTurnMod       0`
	.Status:End
}

#new:StatusTable $StatusTable_802257D4
{
	.Status:Normal      0`
	.Status:Default     0`
	.Status:Sleep      70`
	.Status:Poison     80`
	.Status:Frozen    100`
	.Status:Dizzy      90`
	.Status:Fear       80`
	.Status:Static     80`
	.Status:Paralyze   90`
	.Status:Shrink     80`
	.Status:Stop       90`
	.Status:DefaultTurnMod    0`
	.Status:SleepTurnMod      0`
	.Status:PoisonTurnMod     0`
	.Status:FrozenTurnMod     0`
	.Status:DizzyTurnMod      1`
	.Status:FearTurnMod       0`
	.Status:StaticTurnMod     0`
	.Status:ParalyzeTurnMod   0`
	.Status:ShrinkTurnMod     0`
	.Status:StopTurnMod       0`
	.Status:End
}

#new:PartsTable $PartsTable_80225880
{
	00020001 01000000 001400FF $IdleAnimations_802270FC $DefenseTable_80225710 00000000 00000000 00F60000 00000000
	00800000 02000000 001800FF $IdleAnimations_80225938 $DefenseTable_8022571C 00004000 00000000 00F60000 00000000
	00020001 03000000 F01800FF $IdleAnimations_802259D0 $DefenseTable_80225710 00000000 00000000 00F60000 00000000
	00020001 04000000 F01800FF $IdleAnimations_802259DC $DefenseTable_80225710 00000000 00000000 00F60000 00000000
}

#new:Actor $Paragloomba
{
	% stats
	[Index]         3b
	[Level]        11`b
	[MaxHP]         7`b
	[Coins]         1`b
	[Flags]       00000200
	[StatusTable] $StatusTable_802257D4
	% ai
	[PartsCount]    4`s
	[PartsTable]  $PartsTable_80225880
	[Script]      $Script_Init_802259E8
	% move effectiveness
	[Escape]       65`b
	[Item]         80`b
	[AirLift]      95`b
	[Hurricane]    90`b % Bow's "Spook" as well
	[UpAndAway]    95`b
	[PowerBounce] 100`b
	[SpinSmash]     0`b % weight (0-4)
	% ui positions
	[Size]         36`b  26`b % width height
	[HealthBar]     0`b   0`b % dx dy
	[StatusTurn]  -10`b  20`b % dx dy
	[StatusIcon]   10`b  20`b % dx dy
}

#new:IdleAnimations $IdleAnimations_80225938
{
	.Status:Normal    00280301
	.Status:Stone     00280300
	.Status:Sleep     0028030B
	.Status:Poison    00280301
	.Status:Stop      00280300
	.Status:Static    00280301
	.Status:Paralyze  00280300
	.Status:Dizzy     0028030C
	.Status:Fear      0028030C
	.Status:End
}

#new:IdleAnimations $IdleAnimations_80225984
{
	.Status:Normal    00280304
	.Status:Stone     00280300
	.Status:Sleep     0028030B
	.Status:Poison    00280301
	.Status:Stop      00280300
	.Status:Static    00280304
	.Status:Paralyze  00280300
	.Status:Dizzy     0028030C
	.Status:Fear      0028030C
	.Status:End
}

#new:IdleAnimations $IdleAnimations_802259D0
{
	.Status:Normal    00280309
	.Status:End
}

#new:IdleAnimations $IdleAnimations_802259DC
{
	.Status:Normal    0028030A
	.Status:End
}

#new:Script $Script_Init_802259E8
{
    0:  Call  BindTakeTurn      ( .Actor:Self $Script_TakeTurn_8022635C )
   14:  Call  BindIdle  ( .Actor:Self $Script_Idle_80225A34 )
   28:  Call  BindHandleEvent   ( .Actor:Self $Script_HandleEvent_80225D68 )
   3C:  Return
   44:  End
}

#new:Script $Script_Idle_80225A34
{
    0:  Label  A
    C:  Call  RandInt   ( 00000050 *Var0 )
   20:  Add   *Var0  00000050
   30:  Loop  *Var0
   3C:  	Label  0
   48:  	Call  GetStatusFlags    ( .Actor:Self *Var1 )
   5C:  	If  *Var1  &  ~Flags:StatusFlags:Sleep|Frozen|Fear|Paralyze|Dizzy|Stone|Stop % 35D000
   6C:  		Wait  1`
   78:  		Goto  0
   84:  	EndIf
   8C:  	Wait  1`
   98:  EndLoop
   A0:  Call  GetActorPos       ( .Actor:Self *Var0 *Var1 *Var2 )
   BC:  Add   *Var0  00000005
   CC:  Call  SetActorIdleSpeed ( .Actor:Self *Fixed[0.6] )
   E0:  Call  SetIdleAnimations ( .Actor:Self 00000002 $IdleAnimations_80225984 )
   F8:  Call  SetIdleGoal       ( .Actor:Self *Var0 *Var1 *Var2 )
  114:  Call  IdleFlyToGoal     ( .Actor:Self  0`  -5` .Easing:Linear )
  130:  Loop  00000014
  13C:  	Label  1
  148:  	Call  GetStatusFlags    ( .Actor:Self *Var1 )
  15C:  	If  *Var1  &  ~Flags:StatusFlags:Sleep|Frozen|Fear|Paralyze|Dizzy|Stone|Stop % 35D000
  16C:  		Wait  1`
  178:  		Goto  1
  184:  	EndIf
  18C:  	Wait  1`
  198:  EndLoop
  1A0:  Call  GetActorPos       ( .Actor:Self *Var0 *Var1 *Var2 )
  1BC:  Sub   *Var0  00000005
  1CC:  Call  SetActorIdleSpeed ( .Actor:Self *Fixed[0.6] )
  1E0:  Call  SetIdleGoal       ( .Actor:Self *Var0 *Var1 *Var2 )
  1FC:  Call  IdleFlyToGoal     ( .Actor:Self  0`  -5` .Easing:Linear )
  218:  Call  SetIdleAnimations ( .Actor:Self 00000002 $IdleAnimations_80225938 )
  230:  Loop  00000028
  23C:  	Label  2
  248:  	Call  GetStatusFlags    ( .Actor:Self *Var1 )
  25C:  	If  *Var1  &  ~Flags:StatusFlags:Sleep|Frozen|Fear|Paralyze|Dizzy|Stone|Stop % 35D000
  26C:  		Wait  1`
  278:  		Goto  2
  284:  	EndIf
  28C:  	Wait  1`
  298:  EndLoop
  2A0:  Goto  A
  2AC:  Return
  2B4:  End
}

#new:Script $Script_80225CF0
{
    0:  Call  ResetAllActorSounds   ( .Actor:Self )
   10:  Call  SetGoalToHome ( .Actor:Self )
   20:  Call  SetActorSpeed ( .Actor:Self *Fixed[7.0] )
   34:  Call  FlyToGoal     ( .Actor:Self  0`  1` .Easing:SinOut )
   50:  Call  SetAnimation  ( .Actor:Self 00000002 00280301 )
   68:  Return
   70:  End
}

#new:Script $Script_HandleEvent_80225D68
{
    0:  Call  UseIdleAnimation  ( .Actor:Self .False )
   14:  Call  EnableIdleScript  ( .Actor:Self 00000000 )
   28:  Call  GetLastEvent      ( .Actor:Self *Var0 )
   3C:  Switch  *Var0
   48:  	CaseOR  ==  .Event:HitCombo % 9
   54:  	CaseOR  ==  .Event:Hit % A
   60:  		SetConst  *Var0  00000002
   70:  		SetConst  *Var1  00280306
   80:  		ExecWait  DoNormalHit
   8C:  		Call  GetBattlePhase    ( *Var0 )
   9C:  		If  *Var0  ==  00000001
   AC:  			Call  GetEncounterState ( *Var0 )
   BC:  			If  *Var0  ==  00000004
   CC:  				ExecWait  $Script_80226B74
   D8:  			EndIf
   E0:  		EndIf
   E8:  	EndCaseGroup
   F0:  	Case  ==  .Event:BurnHit % E
   FC:  		SetConst  *Var0  00000002
  10C:  		SetConst  *Var1  0028030D
  11C:  		SetConst  *Var2  0028030E
  12C:  		ExecWait  DoBurnHit
  138:  	Case  ==  .Event:BurnDeath % 24
  144:  		SetConst  *Var0  00000002
  154:  		SetConst  *Var1  0028030D
  164:  		SetConst  *Var2  0028030E
  174:  		ExecWait  DoBurnHit
  180:  		SetConst  *Var0  00000002
  190:  		SetConst  *Var1  0028030E
  1A0:  		ExecWait  DoDeath
  1AC:  		Return
  1B4:  	Case  ==  .Event:FallTrigger % C
  1C0:  		SetConst  *Var0  00000002
  1D0:  		SetConst  *Var1  00280306
  1E0:  		ExecWait  DoNormalHit
  1EC:  		ExecWait  $Script_80226B74
  1F8:  	Case  ==  0000000F % F
  204:  		SetConst  *Var0  00000002
  214:  		SetConst  *Var1  0028030D
  224:  		SetConst  *Var2  0028030E
  234:  		ExecWait  DoBurnHit
  240:  		ExecWait  $Script_80226B74
  24C:  	Case  ==  .Event:ShockHit % 2F
  258:  		SetConst  *Var0  00000002
  268:  		SetConst  *Var1  0028030F
  278:  		ExecWait  DoShockHit
  284:  		SetConst  *Var0  00000002
  294:  		SetConst  *Var1  00280306
  2A4:  		ExecWait  DoJumpBack
  2B0:  		Call  SetAnimation  ( .Actor:Self 00000002 0028030C )
  2C8:  		ExecWait  $Script_80225CF0
  2D4:  	Case  ==  .Event:ShockDeath % 26
  2E0:  		SetConst  *Var0  00000002
  2F0:  		SetConst  *Var1  0028030F
  300:  		ExecWait  DoShockHit
  30C:  		SetConst  *Var0  00000002
  31C:  		SetConst  *Var1  00280307
  32C:  		ExecWait  DoDeath
  338:  		Return
  340:  	Case  ==  .Event:StarBeam % 13
  34C:  	CaseOR  ==  00000017 % 17
  358:  	CaseOR  ==  .Event:Immune % 19
  364:  	CaseOR  ==  .Event:AirLiftFailed % 1F
  370:  		SetConst  *Var0  00000002
  380:  		SetConst  *Var1  00280301
  390:  		ExecWait  DoImmune
  39C:  	EndCaseGroup
  3A4:  	Case  ==  .Event:Death % 20
  3B0:  		SetConst  *Var0  00000002
  3C0:  		SetConst  *Var1  00280306
  3D0:  		ExecWait  DoNormalHit
  3DC:  		Wait  10`
  3E8:  		SetConst  *Var0  00000002
  3F8:  		SetConst  *Var1  00280307
  408:  		ExecWait  DoDeath
  414:  		Return
  41C:  	Case  ==  .Event:BeginFirstStrike % 38
  428:  		Call  SetActorPos       ( .Actor:Self  20`  0`  0` )
  444:  		Call  HPBarToCurrent    ( .Actor:Self )
  454:  	Case  ==  .Event:EndFirstStrike % 35
  460:  		Call  SetAnimation  ( .Actor:Self 00000002 00280304 )
  478:  		ExecWait  $Script_80225CF0
  484:  		Call  HPBarToHome   ( .Actor:Self )
  494:  	Case  ==  .Event:RecoverStatus % 31
  4A0:  		SetConst  *Var0  00000002
  4B0:  		SetConst  *Var1  00280301
  4C0:  		ExecWait  DoRecover
  4CC:  	Case  ==  .Event:ScareAway % 39
  4D8:  		Call  SetActorFlagBits  ( .Actor:Self 00000200 .False )
  4F0:  		SetConst  *Var0  00000002
  500:  		SetConst  *Var1  00280304
  510:  		SetConst  *Var2  00280306
  520:  		ExecWait  DoScareAway
  52C:  		Return
  534:  	Case  ==  .Event:BeginAirLift % 3A
  540:  		SetConst  *Var0  00000002
  550:  		SetConst  *Var1  00280304
  560:  		ExecWait  DoAirLift
  56C:  	Case  ==  .Event:BlowAway % 16
  578:  		SetConst  *Var0  00000002
  588:  		SetConst  *Var1  00280306
  598:  		ExecWait  DoBlowAway
  5A4:  		Return
  5AC:  	Default
  5B4:  EndSwitch
  5BC:  Call  EnableIdleScript  ( .Actor:Self FFFFFFFF )
  5D0:  Call  UseIdleAnimation  ( .Actor:Self .True )
  5E4:  Return
  5EC:  End
}

#new:Script $Script_TakeTurn_8022635C
{
    0:  Call  UseIdleAnimation  ( .Actor:Self .False )
   14:  Call  EnableIdleScript  ( .Actor:Self 00000000 )
   28:  Call  SetTargetActor    ( .Actor:Self .Actor:Player )
   3C:  Call  SetGoalToTarget   ( .Actor:Self )
   4C:  Call  UseBattleCamPreset    ( 0000003F )
   5C:  Call  BattleCamTargetActor  ( .Actor:Self )
   6C:  Call  8024ECF8  ( FFFFFFFF 00000001 00000000 )
   84:  Call  SetAnimation      ( .Actor:Self 00000002 00280304 )
   9C:  Call  SetGoalToTarget   ( .Actor:Self )
   AC:  Call  AddGoalPos        ( .Actor:Self  50`  0`  0` )
   C8:  Call  SetActorSpeed     ( .Actor:Self *Fixed[6.0] )
   DC:  Call  FlyToGoal ( .Actor:Self  0`  -4` .Easing:Linear )
   F8:  Call  EnemyTestTarget   ( .Actor:Self *Var0 ~Flags:DamageType:0 00000000 00000002 00000010 )
  11C:  Switch  *Var0
  128:  	CaseOR  ==  .HitResult:Miss % 6
  134:  	CaseOR  ==  .HitResult:Lucky % 5
  140:  		Set   *VarA  *Var0
  150:  		Wait  10`
  15C:  		Call  UseBattleCamPreset    ( 00000042 )
  16C:  		Call  SetBattleCamZoom  (  300` )
  17C:  		Call  BattleCamTargetActor  ( .Actor:Self )
  18C:  		Call  8024ECF8  ( FFFFFFFF 00000001 00000000 )
  1A4:  		Call  PlaySoundAtActor  ( .Actor:Self 000020E0 )
  1B8:  		Call  SetActorSounds    ( .Actor:Self .ActorSound:Jump 00000000 00000000 )
  1D4:  		Call  SetActorSpeed     ( .Actor:Self *Fixed[5.0] )
  1E8:  		Call  SetActorJumpGravity   ( .Actor:Self *Fixed[1.8] )
  1FC:  		Call  SetAnimation      ( .Actor:Self 00000002 00280305 )
  214:  		Call  GetActorPos       ( .Actor:Self *Var0 *Var1 *Var2 )
  230:  		Call  SetGoalPos        ( .Actor:Self *Var0 *Var1 *Var2 )
  24C:  		Call  JumpToGoal        ( .Actor:Self  10` .False .False .False )
  26C:  		Call  PlaySoundAtActor  ( .Actor:Self 000002C1 )
  280:  		Call  SetActorSounds    ( .Actor:Self .ActorSound:Fly 00000000 00000000 )
  29C:  		Call  SetGoalToTarget   ( .Actor:Self )
  2AC:  		Sub   *Var0  00000050
  2BC:  		Set   *Var1  00000014
  2CC:  		Call  SetGoalPos        ( .Actor:Self *Var0 *Var1 *Var2 )
  2E8:  		Call  SetActorSpeed     ( .Actor:Self *Fixed[8.0] )
  2FC:  		Call  SetAnimation      ( .Actor:Self 00000002 00280305 )
  314:  		Call  FlyToGoal ( .Actor:Self  0`  -10` .Easing:QuadraticOut )
  330:  		Thread
  338:  			Loop  00000004
  344:  				Call  PlaySoundAtActor  ( .Actor:Self 000020DF )
  358:  				Wait  4`
  364:  			EndLoop
  36C:  		EndThread
  374:  		Call  SetAnimation  ( .Actor:Self 00000002 00280302 )
  38C:  		Call  AddActorDecoration    ( .Actor:Self 00000002 00000000 .Decoration:Sweat )
  3A8:  		Call  SetAnimationRate      ( .Actor:Self 00000002 *Fixed[3.0] )
  3C0:  		Wait  10`
  3CC:  		If  *VarA  ==  .HitResult:Lucky % 5
  3DC:  			Call  EnemyTestTarget   ( .Actor:Self *Var0 ~Flags:DamageType:TriggerLucky 00000000 00000000 00000000 )
  400:  		EndIf
  408:  		Wait  10`
  414:  		Call  SetAnimationRate  ( .Actor:Self 00000002 *Fixed[1.0] )
  42C:  		Call  UseBattleCamPreset    ( 00000002 )
  43C:  		Call  ResetAllActorSounds   ( .Actor:Self )
  44C:  		Call  YieldTurn ( )
  458:  		Call  SetAnimation      ( .Actor:Self 00000002 00280304 )
  470:  		Call  SetActorYaw       ( .Actor:Self  180` )
  484:  		ExecWait  $Script_80225CF0
  490:  		Call  SetActorYaw       ( .Actor:Self  0` )
  4A4:  		Call  RemoveActorDecoration ( .Actor:Self 00000002 00000000 )
  4BC:  		Call  EnableIdleScript  ( .Actor:Self FFFFFFFF )
  4D0:  		Call  UseIdleAnimation  ( .Actor:Self .True )
  4E4:  		Return
  4EC:  	EndCaseGroup
  4F4:  	Default
  4FC:  		Wait  10`
  508:  		Call  UseBattleCamPreset    ( 00000042 )
  518:  		Call  SetBattleCamZoom  (  300` )
  528:  		Call  BattleCamTargetActor  ( .Actor:Self )
  538:  		Call  8024ECF8  ( FFFFFFFF 00000001 00000000 )
  550:  		Call  PlaySoundAtActor  ( .Actor:Self 000020E0 )
  564:  		Call  SetActorSounds    ( .Actor:Self .ActorSound:Jump 00000000 00000000 )
  580:  		Call  SetActorSpeed     ( .Actor:Self *Fixed[5.0] )
  594:  		Call  SetActorJumpGravity   ( .Actor:Self *Fixed[1.8] )
  5A8:  		Call  SetAnimation      ( .Actor:Self 00000002 00280305 )
  5C0:  		Call  GetActorPos       ( .Actor:Self *Var0 *Var1 *Var2 )
  5DC:  		Call  SetGoalPos        ( .Actor:Self *Var0 *Var1 *Var2 )
  5F8:  		Call  JumpToGoal        ( .Actor:Self  10` .False .False .False )
  618:  		Call  PlaySoundAtActor  ( .Actor:Self 000002C1 )
  62C:  		Call  SetActorSounds    ( .Actor:Self .ActorSound:Fly 00000000 00000000 )
  648:  		Call  SetGoalToTarget   ( .Actor:Self )
  658:  		Call  SetActorSpeed     ( .Actor:Self *Fixed[8.0] )
  66C:  		Call  SetAnimation      ( .Actor:Self 00000002 00280305 )
  684:  		Call  FlyToGoal ( .Actor:Self  0`  -10` .Easing:Linear )
  6A0:  EndSwitch
  6A8:  Wait  2`
  6B4:  Call  EnemyDamageTarget ( .Actor:Self *Var0 ~Flags:DamageType:0 00000000 00000000 00000002 00000020 )
  6DC:  Switch  *Var0
  6E8:  	CaseOR  ==  .HitResult:Hit % 0
  6F4:  	CaseOR  ==  .HitResult:QuakeImmune % 2
  700:  		Call  UseBattleCamPreset    ( 00000002 )
  710:  		Call  SetGoalToTarget       ( .Actor:Self )
  720:  		Call  AddGoalPos    ( .Actor:Self  50`  10`  0` )
  73C:  		Call  SetActorSpeed ( .Actor:Self *Fixed[6.0] )
  750:  		Call  SetAnimation  ( .Actor:Self 00000002 00280304 )
  768:  		Call  FlyToGoal     ( .Actor:Self  0`  -10` .Easing:Linear )
  784:  		Call  ResetAllActorSounds   ( .Actor:Self )
  794:  		Wait  5`
  7A0:  		Call  YieldTurn ( )
  7AC:  		Call  SetAnimation  ( .Actor:Self 00000002 00280304 )
  7C4:  		ExecWait  $Script_80225CF0
  7D0:  	EndCaseGroup
  7D8:  EndSwitch
  7E0:  Call  EnableIdleScript  ( .Actor:Self FFFFFFFF )
  7F4:  Call  UseIdleAnimation  ( .Actor:Self .True )
  808:  Return
  810:  End
}

#new:Script $Script_80226B74
{
    0:  Call  8027D32C      ( FFFFFF81 )
   10:  Call  SetPartFlags  ( .Actor:Self 00000002 00020005 )
   28:  Call  SetPartFlags  ( .Actor:Self 00000003 00120004 )
   40:  Call  SetPartFlags  ( .Actor:Self 00000004 00120004 )
   58:  Call  SetPartFlags  ( .Actor:Self 00000001 00800004 )
   70:  Call  GetActorPos   ( .Actor:Self *Var0 *Var1 *Var2 )
   8C:  Call  SetPartPos    ( .Actor:Self 00000003 *Var0 *Var1 *Var2 )
   AC:  Call  SetPartDispOffset ( .Actor:Self 00000003 FFFFFFF7 00000007 FFFFFFFE )
   CC:  Call  SetPartPos    ( .Actor:Self 00000004 *Var0 *Var1 *Var2 )
   EC:  Call  SetPartDispOffset ( .Actor:Self 00000004 0000000B 00000007 FFFFFFFE )
  10C:  Call  GetLastEvent  ( .Actor:Self *Var0 )
  120:  If  *Var0  ==  0000000F % F
  130:  	Call  SetAnimation  ( .Actor:Self 00000001 0026040A )
  148:  Else
  150:  	Call  SetAnimation  ( .Actor:Self 00000001 00260405 )
  168:  EndIf
  170:  Call  SetActorSounds    ( .Actor:Self .ActorSound:Jump 00000301 00000000 )
  18C:  Call  GetActorPos       ( .Actor:Self *Var0 *Var1 *Var2 )
  1A8:  Set   *Var1  00000000
  1B8:  Call  SetActorJumpGravity   ( .Actor:Self *Fixed[0.8] )
  1CC:  Call  SetGoalPos        ( .Actor:Self *Var0 *Var1 *Var2 )
  1E8:  Call  JumpToGoal        ( .Actor:Self  15` .False .True .False )
  208:  Call  $Function_80218700    ( 00000064 0000000A )
  21C:  Thread
  224:  	Call  ShakeCam  ( .Cam:Battle 00000000  5` *Fixed[0.3] )
  240:  EndThread
  248:  Call  ResetActorSounds  ( .Actor:Self .ActorSound:Jump )
  25C:  Call  GetLastEvent      ( .Actor:Self *Var3 )
  270:  If  *Var3  ==  0000000F % F
  280:  	Call  SetAnimation  ( .Actor:Self 00000001 00260405 )
  298:  	Call  GetActorPos   ( .Actor:Self *Var3 *Var4 *Var5 )
  2B4:  	Add   *Var4  0000000A
  2C4:  	Add   *Var5  00000005
  2D4:  	Call  PlayEffect    ( ~FX:SmokeBurst:Black *Var3 *Var4 *Var5 *Fixed[1.0] 0000000A 00000000 00000000 00000000 00000000 00000000 00000000 00000000 )
  318:  EndIf
  320:  Call  SetGoalPos    ( .Actor:Self *Var0 *Var1 *Var2 )
  33C:  Call  JumpToGoal    ( .Actor:Self  10` .False .True .False )
  35C:  Call  SetGoalPos    ( .Actor:Self *Var0 *Var1 *Var2 )
  378:  Call  JumpToGoal    ( .Actor:Self  5` .False .True .False )
  398:  Loop  0000000A
  3A4:  	Call  SetPartFlagBits   ( .Actor:Self 00000003 00000001 .True )
  3C0:  	Call  SetPartFlagBits   ( .Actor:Self 00000004 00000001 .True )
  3DC:  	Wait  1`
  3E8:  	Call  SetPartFlagBits   ( .Actor:Self 00000003 00000001 .False )
  404:  	Call  SetPartFlagBits   ( .Actor:Self 00000004 00000001 .False )
  420:  	Wait  1`
  42C:  EndLoop
  434:  Call  SetPartFlagBits   ( .Actor:Self 00000003 00000001 .True )
  450:  Call  SetPartFlagBits   ( .Actor:Self 00000004 00000001 .True )
  46C:  Call  GetIndexFromHome  ( .Actor:Self *Var0 )
  480:  Mod   *Var0  00000004
  490:  Call  SetGoalToIndex    ( .Actor:Self *Var0 )
  4A4:  Call  GetGoalPos        ( .Actor:Self *Var0 *Var1 *Var2 )
  4C0:  Call  SetHomePos        ( .Actor:Self *Var0 *Var1 *Var2 )
  4DC:  Call  SetAnimation      ( .Actor:Self 00000001 00260401 )
  4F4:  Call  SetActorFlagBits  ( .Actor:Self 00000200 .False )
  50C:  Call  SetStatusTable    ( .Actor:Self $StatusTable_80225728 )
  520:  Call  SetActorType      ( .Actor:Self 00000002 )
  534:  ExecWait  $Script_80227194
  540:  Call  SetActorFlagBits  ( .Actor:Self 00001000 .True )
  558:  Call  HPBarToHome       ( .Actor:Self )
  568:  Call  ResetAllActorSounds   ( .Actor:Self )
  578:  Return
  580:  End
}

#new:IdleAnimations $IdleAnimations_802270FC
{
	.Status:Normal    00260401
	.Status:Stone     00260400
	.Status:Sleep     00260408
	.Status:Poison    00260401
	.Status:Stop      00260400
	.Status:Static    00260401
	.Status:Paralyze  00260400
	.Status:Dizzy     00260407
	.Status:Fear      00260407
	.Status:End
}

#new:IdleAnimations $IdleAnimations_80227148
{
	.Status:Normal    00260403
	.Status:Stone     00260400
	.Status:Sleep     00260408
	.Status:Poison    00260401
	.Status:Stop      00260400
	.Status:Static    00260403
	.Status:Paralyze  00260400
	.Status:Dizzy     00260407
	.Status:Fear      00260407
	.Status:End
}

#new:Script $Script_80227194
{
    0:  Call  BindTakeTurn      ( .Actor:Self $Script_TakeTurn_80227CE8 )
   14:  Call  BindIdle  ( .Actor:Self $Script_Idle_802271E0 )
   28:  Call  BindHandleEvent   ( .Actor:Self $Script_HandleEvent_802274BC )
   3C:  Return
   44:  End
}

#new:Script $Script_Idle_802271E0
{
    0:  Label  A
    C:  Call  RandInt   ( 00000050 *Var0 )
   20:  Add   *Var0  00000050
   30:  Loop  *Var0
   3C:  	Label  0
   48:  	Call  GetStatusFlags    ( .Actor:Self *Var1 )
   5C:  	If  *Var1  &  ~Flags:StatusFlags:Sleep|Frozen|Fear|Paralyze|Dizzy|Stone|Stop % 35D000
   6C:  		Wait  1`
   78:  		Goto  0
   84:  	EndIf
   8C:  	Wait  1`
   98:  EndLoop
   A0:  Call  GetActorPos       ( .Actor:Self *Var0 *Var1 *Var2 )
   BC:  Add   *Var0  00000005
   CC:  Call  SetActorIdleSpeed ( .Actor:Self *Fixed[1.0] )
   E0:  Call  SetIdleAnimations ( .Actor:Self 00000001 $IdleAnimations_80227148 )
   F8:  Call  SetIdleGoal       ( .Actor:Self *Var0 *Var1 *Var2 )
  114:  Call  IdleRunToGoal     ( .Actor:Self  0` )
  128:  Call  SetIdleAnimations ( .Actor:Self 00000001 $IdleAnimations_802270FC )
  140:  Loop  00000014
  14C:  	Label  1
  158:  	Call  GetStatusFlags    ( .Actor:Self *Var1 )
  16C:  	If  *Var1  &  ~Flags:StatusFlags:Sleep|Frozen|Fear|Paralyze|Dizzy|Stone|Stop % 35D000
  17C:  		Wait  1`
  188:  		Goto  1
  194:  	EndIf
  19C:  	Wait  1`
  1A8:  EndLoop
  1B0:  Call  GetActorPos       ( .Actor:Self *Var0 *Var1 *Var2 )
  1CC:  Sub   *Var0  00000005
  1DC:  Call  SetActorIdleSpeed ( .Actor:Self *Fixed[1.0] )
  1F0:  Call  SetIdleAnimations ( .Actor:Self 00000001 $IdleAnimations_80227148 )
  208:  Call  SetIdleGoal       ( .Actor:Self *Var0 *Var1 *Var2 )
  224:  Call  IdleRunToGoal     ( .Actor:Self  0` )
  238:  Call  SetIdleAnimations ( .Actor:Self 00000001 $IdleAnimations_802270FC )
  250:  Loop  00000050
  25C:  	Label  2
  268:  	Call  GetStatusFlags    ( .Actor:Self *Var1 )
  27C:  	If  *Var1  &  ~Flags:StatusFlags:Sleep|Frozen|Fear|Paralyze|Dizzy|Stone|Stop % 35D000
  28C:  		Wait  1`
  298:  		Goto  2
  2A4:  	EndIf
  2AC:  	Wait  1`
  2B8:  EndLoop
  2C0:  Goto  A
  2CC:  Return
  2D4:  End
}

#new:Script $Script_HandleEvent_802274BC
{
    0:  Call  UseIdleAnimation  ( .Actor:Self .False )
   14:  Call  EnableIdleScript  ( .Actor:Self 00000000 )
   28:  Call  SetActorScale     ( .Actor:Self *Fixed[1.0] *Fixed[1.0] *Fixed[1.0] )
   44:  Call  GetLastEvent      ( .Actor:Self *Var0 )
   58:  Switch  *Var0
   64:  	CaseOR  ==  .Event:HitCombo % 9
   70:  	CaseOR  ==  .Event:Hit % A
   7C:  		SetConst  *Var0  00000001
   8C:  		SetConst  *Var1  00260405
   9C:  		ExecWait  DoNormalHit
   A8:  	EndCaseGroup
   B0:  	Case  ==  .Event:BurnHit % E
   BC:  		SetConst  *Var0  00000001
   CC:  		SetConst  *Var1  00260409
   DC:  		SetConst  *Var2  0026040A
   EC:  		ExecWait  DoBurnHit
   F8:  	Case  ==  .Event:BurnDeath % 24
  104:  		SetConst  *Var0  00000001
  114:  		SetConst  *Var1  00260409
  124:  		SetConst  *Var2  0026040A
  134:  		ExecWait  DoBurnHit
  140:  		SetConst  *Var0  00000001
  150:  		SetConst  *Var1  0026040A
  160:  		ExecWait  DoDeath
  16C:  		Return
  174:  	Case  ==  .Event:SpinSmashHit % B
  180:  		SetConst  *Var0  00000001
  190:  		SetConst  *Var1  00260405
  1A0:  		ExecWait  DoSpinSmashHit
  1AC:  	Case  ==  .Event:SpinSmashDeath % 21
  1B8:  		SetConst  *Var0  00000001
  1C8:  		SetConst  *Var1  00260405
  1D8:  		ExecWait  DoSpinSmashHit
  1E4:  		SetConst  *Var0  00000001
  1F4:  		SetConst  *Var1  00260406
  204:  		ExecWait  DoDeath
  210:  		Return
  218:  	Case  ==  .Event:ShockHit % 2F
  224:  		SetConst  *Var0  00000001
  234:  		SetConst  *Var1  0026040E
  244:  		ExecWait  DoShockHit
  250:  		SetConst  *Var0  00000001
  260:  		SetConst  *Var1  00260405
  270:  		ExecWait  DoJumpBack
  27C:  		Call  JumpToGoal    ( .Actor:Self  5` .False .True .False )
  29C:  		Call  SetAnimationRate      ( .Actor:Self 00000001 *Fixed[2.0] )
  2B4:  		Call  SetAnimation  ( .Actor:Self 00000001 00260407 )
  2CC:  		Call  SetGoalToHome ( .Actor:Self )
  2DC:  		Call  SetActorSpeed ( .Actor:Self *Fixed[8.0] )
  2F0:  		Call  RunToGoal     ( .Actor:Self  0` .False )
  308:  		Call  SetAnimationRate      ( .Actor:Self 00000001 *Fixed[1.0] )
  320:  		Wait  5`
  32C:  		Call  SetAnimation  ( .Actor:Self 00000001 00260401 )
  344:  		Call  SetActorJumpGravity   ( .Actor:Self *Fixed[1.6] )
  358:  		Call  JumpToGoal    ( .Actor:Self  5` .False .True .False )
  378:  	Case  ==  .Event:ShockDeath % 26
  384:  		SetConst  *Var0  00000001
  394:  		SetConst  *Var1  0026040E
  3A4:  		ExecWait  DoShockHit
  3B0:  		SetConst  *Var0  00000001
  3C0:  		SetConst  *Var1  00260406
  3D0:  		ExecWait  DoDeath
  3DC:  		Return
  3E4:  	Case  ==  .Event:StarBeam % 13
  3F0:  	CaseOR  ==  00000017 % 17
  3FC:  	CaseOR  ==  .Event:Immune % 19
  408:  	CaseOR  ==  .Event:AirLiftFailed % 1F
  414:  		SetConst  *Var0  00000001
  424:  		SetConst  *Var1  00260401
  434:  		ExecWait  DoImmune
  440:  	EndCaseGroup
  448:  	Case  ==  .Event:Death % 20
  454:  		SetConst  *Var0  00000001
  464:  		SetConst  *Var1  00260405
  474:  		ExecWait  DoNormalHit
  480:  		Wait  10`
  48C:  		SetConst  *Var0  00000001
  49C:  		SetConst  *Var1  00260406
  4AC:  		ExecWait  DoDeath
  4B8:  		Return
  4C0:  	Case  ==  .Event:EndFirstStrike % 35
  4CC:  		Call  SetAnimationRate  ( .Actor:Self 00000001 *Fixed[2.0] )
  4E4:  		Call  SetAnimation  ( .Actor:Self 00000001 00260403 )
  4FC:  		Call  SetGoalToHome ( .Actor:Self )
  50C:  		Call  SetActorSpeed ( .Actor:Self *Fixed[4.0] )
  520:  		Call  RunToGoal     ( .Actor:Self  0` .False )
  538:  		Call  SetAnimationRate  ( .Actor:Self 00000001 *Fixed[1.0] )
  550:  		Call  HPBarToHome   ( .Actor:Self )
  560:  	Case  ==  .Event:RecoverStatus % 31
  56C:  		SetConst  *Var0  00000001
  57C:  		SetConst  *Var1  00260401
  58C:  		ExecWait  DoRecover
  598:  	Case  ==  .Event:ScareAway % 39
  5A4:  		SetConst  *Var0  00000001
  5B4:  		SetConst  *Var1  00260403
  5C4:  		SetConst  *Var2  00260405
  5D4:  		ExecWait  DoScareAway
  5E0:  		Return
  5E8:  	Case  ==  .Event:BeginAirLift % 3A
  5F4:  		SetConst  *Var0  00000001
  604:  		SetConst  *Var1  00260403
  614:  		ExecWait  DoAirLift
  620:  	Case  ==  .Event:BlowAway % 16
  62C:  		SetConst  *Var0  00000001
  63C:  		SetConst  *Var1  00260405
  64C:  		ExecWait  DoBlowAway
  658:  		Return
  660:  	Default
  668:  EndSwitch
  670:  Call  SetAnimation      ( .Actor:Self 00000001 00260401 )
  688:  Call  EnableIdleScript  ( .Actor:Self 00000001 )
  69C:  Call  UseIdleAnimation  ( .Actor:Self .True )
  6B0:  Return
  6B8:  End
}

#new:FloatTable $FloatTable_80227B7C
{
	0.0      0.017452 0.034899 0.052336 0.069756 0.087156 0.104528 0.121869
	0.139173 0.156434 0.173648 0.190809 0.207912 0.224951 0.241922 0.258819
	0.275637 0.292372 0.309017 0.325568 0.34202  0.358368 0.374607 0.390731
	0.406737 0.422618 0.438371 0.45399  0.469472 0.48481  0.5      0.515038
	0.529919 0.544639 0.559193 0.573576 0.587785 0.601815 0.615661 0.62932
	0.642788 0.656059 0.669131 0.681998 0.694658 0.707107 0.71934  0.731354
	0.743145 0.75471  0.766044 0.777146 0.788011 0.798636 0.809017 0.819152
	0.829038 0.838671 0.848048 0.857167 0.866025 0.87462  0.882948 0.891007
	0.898794 0.906308 0.913545 0.920505 0.927184 0.93358  0.939693 0.945519
	0.951057 0.956305 0.961262 0.965926 0.970296 0.97437  0.978148 0.981627
	0.984808 0.987688 0.990268 0.992546 0.994522 0.996195 0.997564 0.99863
	0.999391 0.999848 1.0
}

#new:Script $Script_TakeTurn_80227CE8
{
    0:  Call  UseIdleAnimation  ( .Actor:Self .False )
   14:  Call  EnableIdleScript  ( .Actor:Self 00000000 )
   28:  Call  SetTargetActor    ( .Actor:Self .Actor:Player )
   3C:  Call  UseBattleCamPreset    ( 0000003F )
   4C:  Call  BattleCamTargetActor  ( .Actor:Self )
   5C:  Call  8024ECF8  ( FFFFFFFF 00000001 00000000 )
   74:  Call  SetAnimation      ( .Actor:Self 00000001 00260403 )
   8C:  Call  SetGoalToTarget   ( .Actor:Self )
   9C:  Call  AddGoalPos        ( .Actor:Self  50`  0`  0` )
   B8:  Call  SetActorSpeed     ( .Actor:Self *Fixed[6.0] )
   CC:  Call  RunToGoal ( .Actor:Self  0` .False )
   E4:  Call  SetAnimation      ( .Actor:Self 00000001 00260401 )
   FC:  Call  SetActorDispOffset    ( .Actor:Self 00000000 FFFFFFFF 00000000 )
  118:  Wait  1`
  124:  Call  SetActorDispOffset    ( .Actor:Self 00000000 FFFFFFFE 00000000 )
  140:  Wait  5`
  14C:  Call  SetActorDispOffset    ( .Actor:Self 00000000 00000000 00000000 )
  168:  Call  SetAnimation      ( .Actor:Self 00000001 00260404 )
  180:  Call  EnemyTestTarget   ( .Actor:Self *Var0 ~Flags:DamageType:0 00000000 00000001 00000010 )
  1A4:  Switch  *Var0
  1B0:  	CaseOR  ==  .HitResult:Miss % 6
  1BC:  	CaseOR  ==  .HitResult:Lucky % 5
  1C8:  		Set   *VarA  *Var0
  1D8:  		Call  SetGoalToTarget   ( .Actor:Self )
  1E8:  		Call  GetGoalPos        ( .Actor:Self *Var0 *Var1 *Var2 )
  204:  		Sub   *Var0  0000000A
  214:  		Set   *Var1  0000000A
  224:  		Add   *Var2  00000003
  234:  		Call  SetGoalPos        ( .Actor:Self *Var0 *Var1 *Var2 )
  250:  		Call  SetActorJumpGravity   ( .Actor:Self *Fixed[1.2] )
  264:  		Thread
  26C:  			Call  GetActorPos   ( .Actor:Self *Var1 *Var2 *Var0 )
  288:  			Set   *Var0  00000000
  298:  			Loop  00000010
  2A4:  				Call  GetActorPos   ( .Actor:Self *Var4 *Var5 *Var6 )
  2C0:  				Call  $Function_802188E4    ( *Var1 *Var2 *Var4 *Var5 *Var0 )
  2E0:  				Call  SetActorRotation      ( .Actor:Self 00000000 00000000 *Var0 )
  2FC:  				Set   *Var1  *Var4
  30C:  				Set   *Var2  *Var5
  31C:  				Set   *Var3  *Var6
  32C:  				Wait  1`
  338:  			EndLoop
  340:  		EndThread
  348:  		Thread
  350:  			Wait  6`
  35C:  			Call  SetAnimation  ( .Actor:Self 00000001 00260404 )
  374:  		EndThread
  37C:  		Call  JumpToGoal    ( .Actor:Self  16` .False .True .False )
  39C:  		Call  SetAnimation  ( .Actor:Self 00000001 00260408 )
  3B4:  		Call  SetActorScale ( .Actor:Self *Fixed[1.1] *Fixed[0.8] *Fixed[1.0] )
  3D0:  		Call  SetActorDispOffset    ( .Actor:Self 00000000 00000005 00000000 )
  3EC:  		Wait  1`
  3F8:  		Call  SetActorScale ( .Actor:Self *Fixed[1.3] *Fixed[0.5] *Fixed[1.0] )
  414:  		Call  SetActorDispOffset    ( .Actor:Self 00000000 FFFFFFFE 00000000 )
  430:  		Wait  1`
  43C:  		Call  SetActorScale ( .Actor:Self *Fixed[1.0] *Fixed[1.0] *Fixed[1.0] )
  458:  		Call  SetActorDispOffset    ( .Actor:Self 00000000 00000007 00000000 )
  474:  		Call  SetAnimation  ( .Actor:Self 00000001 00260405 )
  48C:  		Wait  5`
  498:  		If  *VarA  ==  .HitResult:Lucky % 5
  4A8:  			Call  EnemyTestTarget   ( .Actor:Self *Var0 ~Flags:DamageType:TriggerLucky 00000000 00000000 00000000 )
  4CC:  		EndIf
  4D4:  		Wait  5`
  4E0:  		Call  SetActorDispOffset    ( .Actor:Self 00000000 00000000 00000000 )
  4FC:  		Call  SetAnimation      ( .Actor:Self 00000001 00260404 )
  514:  		Call  SetGoalToTarget   ( .Actor:Self )
  524:  		Call  GetGoalPos        ( .Actor:Self *Var0 *Var1 *Var2 )
  540:  		Add   *Var0  00000014
  550:  		Set   *Var1  00000000
  560:  		Call  SetGoalPos        ( .Actor:Self *Var0 *Var1 *Var2 )
  57C:  		Call  SetActorJumpGravity   ( .Actor:Self *Fixed[2.0] )
  590:  		Thread
  598:  			Wait  4`
  5A4:  			Set   *Var0  000000B4
  5B4:  			Loop  00000004
  5C0:  				Sub   *Var0  0000002D
  5D0:  				Call  SetActorRotation  ( .Actor:Self 00000000 00000000 *Var0 )
  5EC:  				Wait  1`
  5F8:  			EndLoop
  600:  			Call  SetAnimation  ( .Actor:Self 00000001 00260404 )
  618:  		EndThread
  620:  		Call  JumpToGoal        ( .Actor:Self  15` .False .True .False )
  640:  		Call  SetAnimation      ( .Actor:Self 00000001 00260407 )
  658:  		Wait  5`
  664:  		Call  UseBattleCamPreset    ( 00000002 )
  674:  		Call  YieldTurn ( )
  680:  		Call  SetActorYaw       ( .Actor:Self  180` )
  694:  		Call  AddActorDecoration    ( .Actor:Self 00000001 00000000 .Decoration:Sweat )
  6B0:  		Call  SetAnimationRate  ( .Actor:Self 00000001 *Fixed[2.0] )
  6C8:  		Call  SetGoalToHome     ( .Actor:Self )
  6D8:  		Call  SetActorSpeed     ( .Actor:Self *Fixed[8.0] )
  6EC:  		Call  RunToGoal ( .Actor:Self  0` .False )
  704:  		Call  SetAnimationRate  ( .Actor:Self 00000001 *Fixed[1.0] )
  71C:  		Call  SetActorYaw       ( .Actor:Self  0` )
  730:  		Wait  5`
  73C:  		Call  SetAnimation      ( .Actor:Self 00000001 00260401 )
  754:  		Call  SetActorJumpGravity   ( .Actor:Self *Fixed[1.6] )
  768:  		Call  JumpToGoal        ( .Actor:Self  5` .False .True .False )
  788:  		Call  RemoveActorDecoration ( .Actor:Self 00000001 00000000 )
  7A0:  		Call  EnableIdleScript  ( .Actor:Self 00000001 )
  7B4:  		Call  UseIdleAnimation  ( .Actor:Self .True )
  7C8:  		Return
  7D0:  	EndCaseGroup
  7D8:  	Default
  7E0:  		Call  SetGoalToTarget       ( .Actor:Self )
  7F0:  		Call  SetActorJumpGravity   ( .Actor:Self *Fixed[1.2] )
  804:  		Thread
  80C:  			Call  GetActorPos   ( .Actor:Self *Var1 *Var2 *Var0 )
  828:  			Set   *Var0  00000000
  838:  			Loop  00000010
  844:  				Call  GetActorPos   ( .Actor:Self *Var4 *Var5 *Var6 )
  860:  				Call  $Function_802188E4    ( *Var1 *Var2 *Var4 *Var5 *Var0 )
  880:  				Call  SetActorRotation      ( .Actor:Self 00000000 00000000 *Var0 )
  89C:  				Set   *Var1  *Var4
  8AC:  				Set   *Var2  *Var5
  8BC:  				Set   *Var3  *Var6
  8CC:  				Wait  1`
  8D8:  			EndLoop
  8E0:  		EndThread
  8E8:  		Thread
  8F0:  			Wait  6`
  8FC:  			Call  SetAnimation  ( .Actor:Self 00000001 00260404 )
  914:  		EndThread
  91C:  		Call  JumpToGoal    ( .Actor:Self  16` .False .True .False )
  93C:  		Call  SetAnimation  ( .Actor:Self 00000001 0026040B )
  954:  		Call  SetActorScale ( .Actor:Self *Fixed[1.1] *Fixed[0.8] *Fixed[1.0] )
  970:  		Wait  1`
  97C:  		Call  SetActorScale ( .Actor:Self *Fixed[1.3] *Fixed[0.5] *Fixed[1.0] )
  998:  		Wait  1`
  9A4:  EndSwitch
  9AC:  Call  EnemyDamageTarget ( .Actor:Self *Var0 ~Flags:DamageType:0 00000000 00000000 00000002 00000020 )
  9D4:  Switch  *Var0
  9E0:  	CaseOR  ==  .HitResult:Hit % 0
  9EC:  	CaseOR  ==  .HitResult:QuakeImmune % 2
  9F8:  		Call  UseBattleCamPreset    ( 00000002 )
  A08:  		Call  SetActorScale ( .Actor:Self *Fixed[1.1] *Fixed[0.8] *Fixed[1.0] )
  A24:  		Wait  1`
  A30:  		Call  SetActorScale ( .Actor:Self *Fixed[1.0] *Fixed[1.0] *Fixed[1.0] )
  A4C:  		Wait  1`
  A58:  		Call  SetActorRotation      ( .Actor:Self 00000000 00000000 00000000 )
  A74:  		Call  SetActorDispOffset    ( .Actor:Self 00000000 00000000 00000000 )
  A90:  		Call  SetAnimation  ( .Actor:Self 00000001 00260401 )
  AA8:  		Call  GetGoalPos    ( .Actor:Self *Var0 *Var1 *Var2 )
  AC4:  		Add   *Var0  00000028
  AD4:  		Set   *Var1  00000000
  AE4:  		Call  SetActorJumpGravity   ( .Actor:Self *Fixed[1.8] )
  AF8:  		Call  SetGoalPos    ( .Actor:Self *Var0 *Var1 *Var2 )
  B14:  		Call  JumpToGoal    ( .Actor:Self  10` .False .True .False )
  B34:  		Add   *Var0  0000001E
  B44:  		Call  SetGoalPos    ( .Actor:Self *Var0 *Var1 *Var2 )
  B60:  		Call  JumpToGoal    ( .Actor:Self  8` .False .True .False )
  B80:  		Add   *Var0  00000014
  B90:  		Call  SetGoalPos    ( .Actor:Self *Var0 *Var1 *Var2 )
  BAC:  		Call  JumpToGoal    ( .Actor:Self  6` .False .True .False )
  BCC:  		Call  SetAnimation  ( .Actor:Self 00000001 00260401 )
  BE4:  		Wait  3`
  BF0:  		Call  YieldTurn ( )
  BFC:  		Call  SetAnimationRate      ( .Actor:Self 00000001 *Fixed[2.0] )
  C14:  		Call  SetAnimation  ( .Actor:Self 00000001 00260403 )
  C2C:  		Call  SetGoalToHome ( .Actor:Self )
  C3C:  		Call  SetActorSpeed ( .Actor:Self *Fixed[8.0] )
  C50:  		Call  RunToGoal     ( .Actor:Self  0` .False )
  C68:  		Call  SetAnimationRate      ( .Actor:Self 00000001 *Fixed[1.0] )
  C80:  	EndCaseGroup
  C88:  EndSwitch
  C90:  Call  EnableIdleScript  ( .Actor:Self 00000001 )
  CA4:  Call  UseIdleAnimation  ( .Actor:Self .True )
  CB8:  Return
  CC0:  End
}

#new:DefenseTable $DefenseTable_802289B0
{
	.Element:Normal 00000002
	.Element:Fire   00000063
	.Element:Blast  00000063
	.Element:End
}

#new:DefenseTable $DefenseTable_802289CC
{
	.Element:Normal 00000000
	.Element:End
}

#new:StatusTable $StatusTable_802289D8
{
	.Status:Normal      0`
	.Status:Default     0`
	.Status:Sleep      90`
	.Status:Poison     50`
	.Status:Frozen      0`
	.Status:Dizzy      75`
	.Status:Fear        0`
	.Status:Static     50`
	.Status:Paralyze   75`
	.Status:Shrink     90`
	.Status:Stop       90`
	.Status:DefaultTurnMod    0`
	.Status:SleepTurnMod      0`
	.Status:PoisonTurnMod     0`
	.Status:FrozenTurnMod     0`
	.Status:DizzyTurnMod      0`
	.Status:FearTurnMod       0`
	.Status:StaticTurnMod     0`
	.Status:ParalyzeTurnMod   0`
	.Status:ShrinkTurnMod     0`
	.Status:StopTurnMod       0`
	.Status:End
}

#new:PartsTable $PartsTable_80228A84
{
	00800000 01000000 001000FF $IdleAnimations_80228B1C $DefenseTable_802289B0 00001000 00000000 01070000 00000000
}

#new:Actor $BuzzyBeetle
{
	% stats
	[Index]        17b
	[Level]        10`b
	[MaxHP]         3`b
	[Coins]         1`b
	[Flags]       00000800
	[StatusTable] $StatusTable_802289D8
	% ai
	[PartsCount]    1`s
	[PartsTable]  $PartsTable_80228A84
	[Script]      $Script_Init_80228BAC
	% move effectiveness
	[Escape]       60`b
	[Item]         75`b
	[AirLift]      75`b
	[Hurricane]    75`b % Bow's "Spook" as well
	[UpAndAway]    95`b
	[PowerBounce]  90`b
	[SpinSmash]     0`b % weight (0-4)
	% ui positions
	[Size]         22`b  18`b % width height
	[HealthBar]     0`b   0`b % dx dy
	[StatusTurn]   -8`b  16`b % dx dy
	[StatusIcon]    8`b  13`b % dx dy
}

#new:IdleAnimations $IdleAnimations_80228AD0
{
	.Status:Normal    00330001
	.Status:Stone     00330000
	.Status:Sleep     00330009
	.Status:Poison    00330001
	.Status:Stop      00330000
	.Status:Static    00330001
	.Status:Paralyze  00330000
	.Status:Dizzy     0033000A
	.Status:Fear      0033000A
	.Status:End
}

#new:IdleAnimations $IdleAnimations_80228B1C
{
	.Status:Normal    0033000F
	.Status:Stone     0033000E
	.Status:Sleep     00330014
	.Status:Poison    0033000F
	.Status:Stop      0033000E
	.Status:Static    0033000F
	.Status:Paralyze  0033000E
	.Status:Dizzy     00330015
	.Status:Fear      00330015
	.Status:End
}

#new:IdleAnimations $IdleAnimations_80228B68
{
	.Status:Normal    00330002
	.Status:Stone     0033001A
	.Status:Sleep     0033001B
	.Status:Poison    00330002
	.Status:Stop      0033001A
	.Status:Static    00330002
	.Status:Dizzy     0033001C
	.Status:Fear      0033001C
	.Status:End
}

#new:Script $Script_Init_80228BAC
{
    0:  Call  BindIdle      ( .Actor:Self $Script_Idle_80228D7C )
   14:  Call  GetActorVar   ( .Actor:Self 00000000 *Var0 )
   2C:  If  *Var0  ==  00000001
   3C:  	Call  SetActorVar       ( .Actor:Self 00000008 00000000 )
   54:  	Call  $Function_802189E0    ( FFFFFFF6 00000000 0000000A 00000000 )
   70:  	Call  BindTakeTurn      ( .Actor:Self $Script_TakeTurn_8022A47C )
   84:  	Call  BindHandleEvent   ( .Actor:Self $Script_HandleEvent_802291C0 )
   98:  	Call  SetPartEventBits  ( .Actor:Self 00000001 00001000 .False )
   B4:  Else
   BC:  	Call  SetActorVar       ( .Actor:Self 00000008 00000001 )
   D4:  	Call  SetTargetOffset   ( .Actor:Self 00000001  0`  16` )
   F0:  	Call  8027D4C8  ( FFFFFF81 00000001 FFFFFFFF FFFFFFF7 )
  10C:  	Call  BindTakeTurn      ( .Actor:Self $Script_TakeTurn_8022AF34 )
  120:  	Call  BindHandleEvent   ( .Actor:Self $Script_HandleEvent_80229718 )
  134:  	Call  SetIdleAnimations ( .Actor:Self 00000001 $IdleAnimations_80228AD0 )
  14C:  	Call  SetActorFlagBits  ( .Actor:Self 00000800 .False )
  164:  	Call  SetPartEventBits  ( .Actor:Self 00000001 00001000 .True )
  180:  EndIf
  188:  Call  HPBarToHome       ( .Actor:Self )
  198:  Call  EnableIdleScript  ( .Actor:Self 00000001 )
  1AC:  Call  UseIdleAnimation  ( .Actor:Self .True )
  1C0:  Return
  1C8:  End
}

#new:Script $Script_Idle_80228D7C
{
    0:  Return
    8:  End
}

#new:Script $Script_80228D8C
{
    0:  Call  8027D32C      ( FFFFFF81 )
   10:  Call  SetActorVar   ( .Actor:Self 00000008 00000002 )
   28:  Call  SetTargetOffset   ( .Actor:Self 00000001  0`  16` )
   44:  Call  8027D4C8      ( FFFFFF81 00000001 FFFFFFFF FFFFFFF7 )
   60:  Call  $Function_802189E0    ( FFFFFFF6 00000014 0000000A 00000014 )
   7C:  Call  BindTakeTurn  ( .Actor:Self $Script_TakeTurn_8022AF34 )
   90:  Call  BindHandleEvent   ( .Actor:Self $Script_HandleEvent_80229718 )
   A4:  Call  SetActorVar   ( .Actor:Self 00000009 00000001 )
   BC:  Call  SetDefenseTable   ( .Actor:Self 00000001 $DefenseTable_802289CC )
   D4:  Call  SetIdleAnimations ( .Actor:Self 00000001 $IdleAnimations_80228B68 )
   EC:  Call  SetActorFlagBits  ( .Actor:Self 00000800 .False )
  104:  Call  SetPartEventBits  ( .Actor:Self 00000001 00000010 .False )
  120:  Call  SetPartEventBits  ( .Actor:Self 00000001 00001000 .True )
  13C:  Call  SetActorFlagBits  ( .Actor:Self 00000400 .True )
  154:  Call  SetAnimation  ( .Actor:Self 00000001 00330008 )
  16C:  Call  SetActorYaw   ( .Actor:Self  180` )
  180:  Call  GetActorPos   ( .Actor:Self *Var0 *Var1 *Var2 )
  19C:  Sub   *Var1  00000018
  1AC:  Call  SetActorPos   ( .Actor:Self *Var0 *Var1 *Var2 )
  1C8:  Set   *Var1  00000000
  1D8:  Call  SetActorSounds    ( .Actor:Self .ActorSound:Jump 00000301 00000000 )
  1F4:  Call  SetActorJumpGravity   ( .Actor:Self *Fixed[0.8] )
  208:  Call  SetGoalPos    ( .Actor:Self *Var0 *Var1 *Var2 )
  224:  Call  JumpToGoal    ( .Actor:Self  15` .False .True .False )
  244:  Call  GetIndexFromPos   ( .Actor:Self *VarA )
  258:  Mod   *VarA  00000004
  268:  Call  SetGoalToIndex    ( .Actor:Self *VarA )
  27C:  Call  GetGoalPos    ( .Actor:Self *VarA *VarB *VarC )
  298:  Call  SetHomePos    ( .Actor:Self *VarA *VarB *VarC )
  2B4:  Set   *VarD  *VarA
  2C4:  Set   *VarE  *VarB
  2D4:  Set   *VarF  *VarC
  2E4:  Sub   *VarD  *Var0
  2F4:  Sub   *VarE  *Var1
  304:  Sub   *VarF  *Var2
  314:  Div   *VarD  00000002
  324:  Div   *VarE  00000002
  334:  Div   *VarF  00000002
  344:  Add   *Var0  *VarD
  354:  Add   *Var1  *VarE
  364:  Add   *Var2  *VarF
  374:  Call  ResetAllActorSounds   ( .Actor:Self )
  384:  Call  SetAnimation  ( .Actor:Self 00000001 00330002 )
  39C:  Call  SetGoalPos    ( .Actor:Self *Var0 *Var1 *Var2 )
  3B8:  Call  JumpToGoal    ( .Actor:Self  10` .False .True .False )
  3D8:  Call  SetGoalPos    ( .Actor:Self *VarA *VarB *VarC )
  3F4:  Call  JumpToGoal    ( .Actor:Self  5` .False .True .False )
  414:  Call  HPBarToHome   ( .Actor:Self )
  424:  Return
  42C:  End
}

#new:Script $Script_HandleEvent_802291C0
{
    0:  Call  UseIdleAnimation  ( .Actor:Self .False )
   14:  Call  EnableIdleScript  ( .Actor:Self 00000000 )
   28:  Call  GetLastEvent      ( .Actor:Self *Var0 )
   3C:  Switch  *Var0
   48:  	Case  ==  .Event:HitCombo % 9
   54:  		SetConst  *Var0  00000001
   64:  		SetConst  *Var1  00330013
   74:  		ExecWait  DoNormalHit
   80:  	Case  ==  .Event:Hit % A
   8C:  		SetConst  *Var0  00000001
   9C:  		SetConst  *Var1  00330013
   AC:  		ExecWait  DoNormalHit
   B8:  		ExecWait  $Script_80228D8C
   C4:  	Case  ==  .Event:FlipTrigger % D
   D0:  		SetConst  *Var0  00000001
   E0:  		SetConst  *Var1  00330013
   F0:  		ExecWait  DoNormalHit
   FC:  		ExecWait  $Script_80228D8C
  108:  	Case  ==  .Event:BurnHit % E
  114:  		SetConst  *Var0  00000001
  124:  		SetConst  *Var1  00330018
  134:  		SetConst  *Var2  00330018
  144:  		ExecWait  DoBurnHit
  150:  		ExecWait  $Script_80228D8C
  15C:  	Case  ==  .Event:BurnDeath % 24
  168:  		SetConst  *Var0  00000001
  178:  		SetConst  *Var1  00330018
  188:  		SetConst  *Var2  00330018
  198:  		ExecWait  DoBurnHit
  1A4:  		SetConst  *Var0  00000001
  1B4:  		SetConst  *Var1  00330018
  1C4:  		ExecWait  DoDeath
  1D0:  		Return
  1D8:  	Case  ==  .Event:ShockHit % 2F
  1E4:  		SetConst  *Var0  00000001
  1F4:  		SetConst  *Var1  00330013
  204:  		ExecWait  DoShockHit
  210:  		SetConst  *Var0  00000001
  220:  		SetConst  *Var1  00330007
  230:  		ExecWait  DoJumpBack
  23C:  		SetConst  *Var0  00000001
  24C:  		SetConst  *Var1  00330004
  25C:  		ExecWait  DoReturnHome
  268:  	Case  ==  .Event:ShockDeath % 26
  274:  		SetConst  *Var0  00000001
  284:  		SetConst  *Var1  00330013
  294:  		ExecWait  DoShockHit
  2A0:  		SetConst  *Var0  00000001
  2B0:  		SetConst  *Var1  00330007
  2C0:  		ExecWait  DoDeath
  2CC:  		Return
  2D4:  	Case  ==  00000017 % 17
  2E0:  		SetConst  *Var0  00000001
  2F0:  		SetConst  *Var1  00330016
  300:  		ExecWait  DoImmune
  30C:  	Case  ==  .Event:Immune % 19
  318:  		SetConst  *Var0  00000001
  328:  		SetConst  *Var1  00330016
  338:  		ExecWait  DoImmune
  344:  		Wait  2`
  350:  		Call  GetStatusFlags    ( .Actor:Self *Var0 )
  364:  		If  *Var0  !&  ~Flags:StatusFlags:Stop % 200000
  374:  			ExecWait  $Script_80228D8C
  380:  		EndIf
  388:  	Case  ==  .Event:Death % 20
  394:  		SetConst  *Var0  00000001
  3A4:  		SetConst  *Var1  00330013
  3B4:  		ExecWait  DoNormalHit
  3C0:  		Wait  10`
  3CC:  		SetConst  *Var0  00000001
  3DC:  		SetConst  *Var1  00330013
  3EC:  		ExecWait  DoDeath
  3F8:  		Return
  400:  	Case  ==  .Event:RecoverStatus % 31
  40C:  	Case  ==  .Event:ScareAway % 39
  418:  		Call  SetActorFlagBits  ( .Actor:Self 00000200 .True )
  430:  		SetConst  *Var0  00000001
  440:  		SetConst  *Var1  00330011
  450:  		SetConst  *Var2  00330013
  460:  		ExecWait  DoScareAway
  46C:  		Return
  474:  	Default
  47C:  EndSwitch
  484:  Call  EnableIdleScript  ( .Actor:Self 00000001 )
  498:  Call  UseIdleAnimation  ( .Actor:Self .True )
  4AC:  Return
  4B4:  End
}

#new:Script $Script_8022967C
{
    0:  Call  GetActorVar   ( .Actor:Self 00000008 *Var3 )
   18:  If  *Var3  ==  00000002
   28:  	Set   *Var1  *Var2
   38:  EndIf
   40:  Return
   48:  End
}

#new:IntTable $IntTable_802296CC
{
	00000007 0000000D 00000011 00000015 00000017 00000018 00000017 00000015
	00000011 0000000D 00000007 00000000 00000004 00000007 00000006 00000004
	00000000 00000002 00000000
}

#new:Script $Script_HandleEvent_80229718
{
    0:  Call  UseIdleAnimation  ( .Actor:Self .False )
   14:  Call  EnableIdleScript  ( .Actor:Self 00000000 )
   28:  Call  GetLastEvent      ( .Actor:Self *Var0 )
   3C:  Switch  *Var0
   48:  	CaseOR  ==  .Event:HitCombo % 9
   54:  	CaseOR  ==  .Event:Hit % A
   60:  		SetConst  *Var0  00000001
   70:  		SetConst  *Var1  00330007
   80:  		SetConst  *Var2  00330019
   90:  		ExecWait  $Script_8022967C
   9C:  		ExecWait  DoNormalHit
   A8:  	EndCaseGroup
   B0:  	Case  ==  .Event:BurnHit % E
   BC:  		Call  GetActorVar   ( .Actor:Self 00000008 *Var0 )
   D4:  		If  *Var0  !=  00000002
   E4:  			SetConst  *Var0  00000001
   F4:  			SetConst  *Var1  0033000B
  104:  			SetConst  *Var2  0033000B
  114:  			ExecWait  DoBurnHit
  120:  		Else
  128:  			SetConst  *Var0  00000001
  138:  			SetConst  *Var1  0033001D
  148:  			SetConst  *Var2  0033001D
  158:  			ExecWait  DoBurnHit
  164:  		EndIf
  16C:  	Case  ==  .Event:BurnDeath % 24
  178:  		Call  GetActorVar   ( .Actor:Self 00000008 *Var0 )
  190:  		If  *Var0  !=  00000002
  1A0:  			SetConst  *Var0  00000001
  1B0:  			SetConst  *Var1  0033000B
  1C0:  			SetConst  *Var2  0033000B
  1D0:  			ExecWait  DoBurnHit
  1DC:  			SetConst  *Var0  00000001
  1EC:  			SetConst  *Var1  0033000B
  1FC:  			ExecWait  DoDeath
  208:  		Else
  210:  			SetConst  *Var0  00000001
  220:  			SetConst  *Var1  0033001D
  230:  			SetConst  *Var2  0033001D
  240:  			ExecWait  DoBurnHit
  24C:  			SetConst  *Var0  00000001
  25C:  			SetConst  *Var1  0033001D
  26C:  			ExecWait  DoDeath
  278:  		EndIf
  280:  		Return
  288:  	Case  ==  .Event:SpinSmashHit % B
  294:  		SetConst  *Var0  00000001
  2A4:  		SetConst  *Var1  00330007
  2B4:  		SetConst  *Var2  00330019
  2C4:  		ExecWait  $Script_8022967C
  2D0:  		ExecWait  DoSpinSmashHit
  2DC:  	Case  ==  .Event:FlipTrigger % D
  2E8:  		Call  SetActorVar       ( .Actor:Self 00000008 00000002 )
  300:  		Call  SetTargetOffset   ( .Actor:Self 00000001  0`  16` )
  31C:  		Call  8027D4C8  ( FFFFFF81 00000001 FFFFFFFF FFFFFFF7 )
  338:  		Call  SetActorVar       ( .Actor:Self 00000009 00000001 )
  350:  		Call  SetDefenseTable   ( .Actor:Self 00000001 $DefenseTable_802289CC )
  368:  		Call  SetIdleAnimations ( .Actor:Self 00000001 $IdleAnimations_80228B68 )
  380:  		Call  SetActorFlagBits  ( .Actor:Self 00000400 .True )
  398:  		Call  SetAnimation      ( .Actor:Self 00000001 00330007 )
  3B0:  		Call  SetActorRotationOffset    ( .Actor:Self 00000000 0000000C 00000000 )
  3CC:  		Thread
  3D4:  			Wait  1`
  3E0:  			Call  SetActorRotation  ( .Actor:Self 00000000 00000000 00000000 )
  3FC:  			Wait  1`
  408:  			Call  SetActorRotation  ( .Actor:Self 00000000 00000000 FFFFFFD3 )
  424:  			Wait  1`
  430:  			Call  SetActorRotation  ( .Actor:Self 00000000 00000000 FFFFFFA6 )
  44C:  			Wait  1`
  458:  			Call  SetActorRotation  ( .Actor:Self 00000000 00000000 FFFFFF79 )
  474:  			Wait  1`
  480:  			Call  SetActorRotation  ( .Actor:Self 00000000 00000000 FFFFFF4C )
  49C:  			Wait  1`
  4A8:  		EndThread
  4B0:  		UseIntBuffer  $IntTable_802296CC
  4BC:  		Loop  00000013
  4C8:  			Get1Int  *Var0
  4D4:  			Call  SetActorDispOffset    ( .Actor:Self 00000000 *Var0 00000000 )
  4F0:  			Wait  1`
  4FC:  		EndLoop
  504:  		Call  SetActorDispOffset    ( .Actor:Self 00000000 00000000 00000000 )
  520:  		Call  SetActorRotationOffset    ( .Actor:Self 00000000 00000000 00000000 )
  53C:  		Call  SetActorRotation      ( .Actor:Self 00000000 00000000 00000000 )
  558:  		Call  SetAnimation  ( .Actor:Self 00000001 00330019 )
  570:  	Case  ==  .Event:ShockHit % 2F
  57C:  		SetConst  *Var0  00000001
  58C:  		SetConst  *Var1  00330007
  59C:  		ExecWait  DoShockHit
  5A8:  		SetConst  *Var0  00000001
  5B8:  		SetConst  *Var1  00330007
  5C8:  		ExecWait  DoJumpBack
  5D4:  		SetConst  *Var0  00000001
  5E4:  		SetConst  *Var1  00330004
  5F4:  		ExecWait  DoReturnHome
  600:  	Case  ==  .Event:ShockDeath % 26
  60C:  		SetConst  *Var0  00000001
  61C:  		SetConst  *Var1  00330007
  62C:  		ExecWait  DoShockHit
  638:  		SetConst  *Var0  00000001
  648:  		SetConst  *Var1  00330007
  658:  		ExecWait  DoDeath
  664:  		Return
  66C:  	Case  ==  00000017 % 17
  678:  		Call  GetActorVar   ( .Actor:Self 00000008 *Var0 )
  690:  		If  *Var0  ==  00000001
  6A0:  			SetConst  *Var0  00000001
  6B0:  			SetConst  *Var1  0033000C
  6C0:  			ExecWait  DoImmune
  6CC:  			Call  SetAnimation  ( .Actor:Self 00000001 00330017 )
  6E4:  			Wait  8`
  6F0:  		Else
  6F8:  			SetConst  *Var0  00000001
  708:  			SetConst  *Var1  00330002
  718:  			ExecWait  DoImmune
  724:  		EndIf
  72C:  	Case  ==  .Event:Immune % 19
  738:  		Call  GetActorVar   ( .Actor:Self 00000008 *Var0 )
  750:  		If  *Var0  ==  00000001
  760:  			SetConst  *Var0  00000001
  770:  			SetConst  *Var1  0033000C
  780:  			ExecWait  DoImmune
  78C:  			Call  SetAnimation  ( .Actor:Self 00000001 0033000D )
  7A4:  			Wait  8`
  7B0:  		Else
  7B8:  			SetConst  *Var0  00000001
  7C8:  			SetConst  *Var1  00330002
  7D8:  			ExecWait  DoImmune
  7E4:  		EndIf
  7EC:  	Case  ==  .Event:SpikeTaunt % 1B
  7F8:  		Wait  10`
  804:  		Call  GetActorPos       ( .Actor:Self *Var0 *Var1 *Var2 )
  820:  		Call  GetStatusFlags    ( .Actor:Self *Var3 )
  834:  		If  *Var3  &  ~Flags:StatusFlags:Shrink % 80000
  844:  			Add   *Var1  00000009
  854:  		Else
  85C:  			Add   *Var1  00000018
  86C:  		EndIf
  874:  		Call  PlayEffect    ( ~FX:LensFlare:Rotating *Var0 *Var1 *Var2 00000014 00000000 00000000 00000000 00000000 00000000 00000000 00000000 00000000 )
  8B8:  		Wait  20`
  8C4:  	Case  ==  .Event:Death % 20
  8D0:  		SetConst  *Var0  00000001
  8E0:  		SetConst  *Var1  00330007
  8F0:  		SetConst  *Var2  00330019
  900:  		ExecWait  $Script_8022967C
  90C:  		ExecWait  DoNormalHit
  918:  		Wait  10`
  924:  		SetConst  *Var0  00000001
  934:  		SetConst  *Var1  00330007
  944:  		SetConst  *Var2  00330019
  954:  		ExecWait  $Script_8022967C
  960:  		ExecWait  DoDeath
  96C:  		Return
  974:  	Case  ==  .Event:SpinSmashDeath % 21
  980:  		SetConst  *Var0  00000001
  990:  		SetConst  *Var1  00330007
  9A0:  		SetConst  *Var2  00330019
  9B0:  		ExecWait  $Script_8022967C
  9BC:  		ExecWait  DoSpinSmashHit
  9C8:  		SetConst  *Var0  00000001
  9D8:  		SetConst  *Var1  00330007
  9E8:  		SetConst  *Var2  00330019
  9F8:  		ExecWait  $Script_8022967C
  A04:  		ExecWait  DoDeath
  A10:  		Return
  A18:  	Case  ==  .Event:RecoverStatus % 31
  A24:  		Call  GetActorVar   ( .Actor:Self 00000008 *Var0 )
  A3C:  		If  *Var0  ==  00000001
  A4C:  			SetConst  *Var0  00000001
  A5C:  			SetConst  *Var1  00330001
  A6C:  			ExecWait  DoRecover
  A78:  		EndIf
  A80:  	Case  ==  .Event:ScareAway % 39
  A8C:  		Call  GetActorVar   ( .Actor:Self 00000008 *Var0 )
  AA4:  		If  *Var0  ==  00000001
  AB4:  			SetConst  *Var0  00000001
  AC4:  			SetConst  *Var1  00330004
  AD4:  			SetConst  *Var2  00330007
  AE4:  			ExecWait  DoScareAway
  AF0:  			Return
  AF8:  		Else
  B00:  			SetConst  *Var0  00000001
  B10:  			SetConst  *Var1  00330002
  B20:  			ExecWait  DoImmune
  B2C:  		EndIf
  B34:  	Case  ==  .Event:BeginAirLift % 3A
  B40:  		Call  GetActorVar   ( .Actor:Self 00000008 *Var0 )
  B58:  		If  *Var0  ==  00000001
  B68:  			SetConst  *Var0  00000001
  B78:  			SetConst  *Var1  00330004
  B88:  		Else
  B90:  			SetConst  *Var0  00000001
  BA0:  			SetConst  *Var1  00330002
  BB0:  		EndIf
  BB8:  		ExecWait  DoAirLift
  BC4:  	Case  ==  .Event:BlowAway % 16
  BD0:  		Call  GetActorVar   ( .Actor:Self 00000008 *Var0 )
  BE8:  		If  *Var0  ==  00000001
  BF8:  			SetConst  *Var0  00000001
  C08:  			SetConst  *Var1  00330007
  C18:  		Else
  C20:  			SetConst  *Var0  00000001
  C30:  			SetConst  *Var1  00330008
  C40:  		EndIf
  C48:  		ExecWait  DoBlowAway
  C54:  		Return
  C5C:  	Case  ==  .Event:AirLiftFailed % 1F
  C68:  		Call  GetActorVar   ( .Actor:Self 00000008 *Var0 )
  C80:  		If  *Var0  ==  00000001
  C90:  			SetConst  *Var0  00000001
  CA0:  			SetConst  *Var1  0033000C
  CB0:  			ExecWait  DoImmune
  CBC:  			Call  SetAnimation  ( .Actor:Self 00000001 0033000D )
  CD4:  			Wait  8`
  CE0:  		Else
  CE8:  			SetConst  *Var0  00000001
  CF8:  			SetConst  *Var1  00330002
  D08:  			ExecWait  DoImmune
  D14:  		EndIf
  D1C:  	Default
  D24:  EndSwitch
  D2C:  Call  EnableIdleScript  ( .Actor:Self 00000001 )
  D40:  Call  UseIdleAnimation  ( .Actor:Self .True )
  D54:  Return
  D5C:  End
}

#new:Script $Script_TakeTurn_8022A47C
{
    0:  Call  UseIdleAnimation  ( .Actor:Self .False )
   14:  Call  EnableIdleScript  ( .Actor:Self 00000000 )
   28:  Call  SetTargetActor    ( .Actor:Self .Actor:Player )
   3C:  Call  SetActorVar       ( .Actor:Self 00000008 00000001 )
   54:  Call  SetTargetOffset   ( .Actor:Self 00000001  0`  16` )
   70:  Call  8027D4C8  ( FFFFFF81 00000001 FFFFFFFF FFFFFFF7 )
   8C:  Call  $Function_802189E0    ( FFFFFFF6 00000014 0000000A 00000014 )
   A8:  Call  BindTakeTurn      ( .Actor:Self $Script_TakeTurn_8022AF34 )
   BC:  Call  BindHandleEvent   ( .Actor:Self $Script_HandleEvent_80229718 )
   D0:  Call  SetIdleAnimations ( .Actor:Self 00000001 $IdleAnimations_80228AD0 )
   E8:  Call  SetActorFlagBits  ( .Actor:Self 00000800 .False )
  100:  Call  SetPartEventBits  ( .Actor:Self 00000001 00001000 .True )
  11C:  Call  GetIndexFromPos   ( .Actor:Self *Var0 )
  130:  Mod   *Var0  00000004
  140:  Call  SetGoalToIndex    ( .Actor:Self *Var0 )
  154:  Call  GetGoalPos        ( .Actor:Self *Var0 *Var1 *Var2 )
  170:  Call  SetHomePos        ( .Actor:Self *Var0 *Var1 *Var2 )
  18C:  Call  HPBarToHome       ( .Actor:Self )
  19C:  Call  UseBattleCamPreset    ( 0000003F )
  1AC:  Call  BattleCamTargetActor  ( .Actor:Self )
  1BC:  Call  8024ECF8  ( FFFFFFFF 00000001 00000000 )
  1D4:  Call  GetBattlePhase    ( *Var0 )
  1E4:  If  *Var0  ==  00000001
  1F4:  	Call  SetGoalToTarget   ( .Actor:Self )
  204:  	Call  GetActorPos   ( .Actor:Self *Var3 *Var4 *Var5 )
  220:  	Call  GetGoalPos    ( .Actor:Self *Var0 *Var1 *Var2 )
  23C:  	Call  SetActorPos   ( .Actor:Self *Var0 *Var4 *Var2 )
  258:  	Call  SetAnimation  ( .Actor:Self 00000001 0033000E )
  270:  Else
  278:  	Call  SetAnimation  ( .Actor:Self 00000001 00330011 )
  290:  	Call  SetGoalToTarget   ( .Actor:Self )
  2A0:  	Call  GetActorPos   ( .Actor:Self *Var3 *Var4 *Var5 )
  2BC:  	Call  GetGoalPos    ( .Actor:Self *Var0 *Var1 *Var2 )
  2D8:  	Call  SetGoalPos    ( .Actor:Self *Var0 *Var4 *Var2 )
  2F4:  	Call  SetActorSpeed ( .Actor:Self *Fixed[6.0] )
  308:  	Call  RunToGoal     ( .Actor:Self  0` .False )
  320:  	Call  SetAnimation  ( .Actor:Self 00000001 0033000E )
  338:  	Wait  8`
  344:  EndIf
  34C:  Call  SetActorSounds    ( .Actor:Self .ActorSound:Jump 00000301 00000000 )
  368:  Call  GetBattlePhase    ( *Var0 )
  378:  If  *Var0  ==  00000001
  388:  	Call  UseBattleCamPreset    ( 00000005 )
  398:  	Call  SetBattleCamZoom      (  430` )
  3A8:  	Call  SetBattleCamOffsetZ   (  20` )
  3B8:  	Call  MoveBattleCamOver     (  10` )
  3C8:  	Call  8024ECF8  ( FFFFFFFF 00000001 00000000 )
  3E0:  EndIf
  3E8:  Call  EnemyTestTarget   ( .Actor:Self *Var0 ~Flags:DamageType:0 00000000 00000003 00000010 )
  40C:  Switch  *Var0
  418:  	CaseOR  ==  .HitResult:Miss % 6
  424:  	CaseOR  ==  .HitResult:Lucky % 5
  430:  		Set   *VarA  *Var0
  440:  		Call  SetActorYaw   ( .Actor:Self  180` )
  454:  		Call  SetPartYaw    ( .Actor:Self 00000001  180` )
  46C:  		Call  SetAnimation  ( .Actor:Self 00000001 00330008 )
  484:  		Call  GetActorPos   ( .Actor:Self *Var0 *Var1 *Var2 )
  4A0:  		Sub   *Var1  00000018
  4B0:  		Call  SetActorPos   ( .Actor:Self *Var0 *Var1 *Var2 )
  4CC:  		Call  SetActorJumpGravity   ( .Actor:Self *Fixed[0.8] )
  4E0:  		Call  GetActorPos   ( .Actor:Self *Var0 *Var1 *Var2 )
  4FC:  		Set   *Var1  00000000
  50C:  		Call  SetGoalPos    ( .Actor:Self *Var0 *Var1 *Var2 )
  528:  		Call  JumpToGoal    ( .Actor:Self  15` .False .True .False )
  548:  		If  *VarA  ==  .HitResult:Lucky % 5
  558:  			Call  EnemyTestTarget   ( .Actor:Self *Var0 ~Flags:DamageType:TriggerLucky 00000000 00000000 00000000 )
  57C:  		EndIf
  584:  		Call  ResetAllActorSounds   ( .Actor:Self )
  594:  		Add   *Var0  0000001E
  5A4:  		Call  SetGoalPos    ( .Actor:Self *Var0 *Var1 *Var2 )
  5C0:  		Call  JumpToGoal    ( .Actor:Self  15` .False .True .False )
  5E0:  		Thread
  5E8:  			Wait  5`
  5F4:  			Call  SetAnimation  ( .Actor:Self 00000001 00330000 )
  60C:  		EndThread
  614:  		Add   *Var0  00000014
  624:  		Call  SetGoalPos    ( .Actor:Self *Var0 *Var1 *Var2 )
  640:  		Call  JumpToGoal    ( .Actor:Self  8` .False .True .False )
  660:  		Wait  8`
  66C:  		Call  UseBattleCamPreset    ( 00000002 )
  67C:  		Call  YieldTurn ( )
  688:  		Call  SetGoalToHome ( .Actor:Self )
  698:  		Call  SetActorSpeed ( .Actor:Self *Fixed[6.0] )
  6AC:  		Call  SetAnimation  ( .Actor:Self 00000001 00330004 )
  6C4:  		Call  AddActorDecoration    ( .Actor:Self 00000001 00000000 .Decoration:Sweat )
  6E0:  		Call  RunToGoal     ( .Actor:Self  0` .False )
  6F8:  		Call  SetAnimation  ( .Actor:Self 00000001 00330001 )
  710:  		Call  RemoveActorDecoration ( .Actor:Self 00000001 00000000 )
  728:  		Call  SetActorYaw   ( .Actor:Self  0` )
  73C:  		Call  EnableIdleScript      ( .Actor:Self 00000001 )
  750:  		Call  UseIdleAnimation      ( .Actor:Self .True )
  764:  		Return
  76C:  	EndCaseGroup
  774:  EndSwitch
  77C:  Call  SetActorYaw   ( .Actor:Self  180` )
  790:  Call  SetAnimation  ( .Actor:Self 00000001 00330008 )
  7A8:  Call  GetActorPos   ( .Actor:Self *Var0 *Var1 *Var2 )
  7C4:  Sub   *Var1  00000018
  7D4:  Call  SetActorPos   ( .Actor:Self *Var0 *Var1 *Var2 )
  7F0:  Call  SetActorJumpGravity   ( .Actor:Self *Fixed[0.8] )
  804:  Call  SetGoalToTarget       ( .Actor:Self )
  814:  Call  GetGoalPos    ( .Actor:Self *Var3 *Var4 *Var5 )
  830:  Call  GetActorPos   ( .Actor:Self *Var0 *Var1 *Var2 )
  84C:  Set   *Var1  *Var4
  85C:  Call  SetGoalPos    ( .Actor:Self *Var0 *Var1 *Var2 )
  878:  Call  JumpToGoal    ( .Actor:Self  15` .False .True .False )
  898:  Call  ResetAllActorSounds   ( .Actor:Self )
  8A8:  Wait  2`
  8B4:  Call  EnemyDamageTarget     ( .Actor:Self *Var0 ~Flags:DamageType:0 0000FFFF 00000000 00000003 00000020 )
  8DC:  Switch  *Var0
  8E8:  	CaseOR  ==  .HitResult:Hit % 0
  8F4:  	CaseOR  ==  .HitResult:QuakeImmune % 2
  900:  		Call  UseBattleCamPreset    ( 00000002 )
  910:  		Call  GetActorPos   ( .Actor:Self *Var0 *Var1 *Var2 )
  92C:  		Add   *Var0  0000001E
  93C:  		Set   *Var1  00000000
  94C:  		Call  SetGoalPos    ( .Actor:Self *Var0 *Var1 *Var2 )
  968:  		Call  JumpToGoal    ( .Actor:Self  15` .False .True .False )
  988:  		Thread
  990:  			Wait  5`
  99C:  			Call  SetAnimation  ( .Actor:Self 00000001 00330000 )
  9B4:  		EndThread
  9BC:  		Add   *Var0  00000014
  9CC:  		Call  SetGoalPos    ( .Actor:Self *Var0 *Var1 *Var2 )
  9E8:  		Call  JumpToGoal    ( .Actor:Self  8` .False .True .False )
  A08:  		Wait  8`
  A14:  		Call  YieldTurn ( )
  A20:  		SetConst  *Var0  00000001
  A30:  		SetConst  *Var1  00330004
  A40:  		ExecWait  DoReturnHome
  A4C:  		Call  SetAnimation  ( .Actor:Self 00000001 00330001 )
  A64:  	EndCaseGroup
  A6C:  EndSwitch
  A74:  Label  A
  A80:  Call  EnableIdleScript  ( .Actor:Self 00000001 )
  A94:  Call  UseIdleAnimation  ( .Actor:Self .True )
  AA8:  Return
  AB0:  End
}

#new:Script $Script_TakeTurn_8022AF34
{
    0:  Call  UseIdleAnimation  ( .Actor:Self .False )
   14:  Call  EnableIdleScript  ( .Actor:Self 00000000 )
   28:  Call  GetActorVar       ( .Actor:Self 00000008 *Var0 )
   40:  If  *Var0  ==  00000002
   50:  	Call  GetActorVar   ( .Actor:Self 00000009 *Var0 )
   68:  	Sub   *Var0  00000001
   78:  	If  *Var0  >  00000000
   88:  		Call  SetActorVar   ( .Actor:Self 00000009 *Var0 )
   A0:  		Call  AddActorDecoration    ( .Actor:Self 00000001 00000000 .Decoration:Sweat )
   BC:  		Wait  30`
   C8:  		Call  RemoveActorDecoration ( .Actor:Self 00000001 00000000 )
   E0:  		Call  UseBattleCamPreset    ( 00000002 )
   F0:  	Else
   F8:  		Call  AddActorDecoration    ( .Actor:Self 00000001 00000000 .Decoration:Sweat )
  114:  		Wait  20`
  120:  		Call  RemoveActorDecoration ( .Actor:Self 00000001 00000000 )
  138:  		SetConst  *Var0  00000001
  148:  		SetConst  *Var1  00330002
  158:  		SetConst  *Var2  00330001
  168:  		ExecWait  8029BBB4
  174:  		Call  SetActorYaw       ( .Actor:Self  0` )
  188:  		Call  SetActorVar       ( .Actor:Self 00000008 00000001 )
  1A0:  		Call  SetTargetOffset   ( .Actor:Self 00000001  0`  16` )
  1BC:  		Call  8027D4C8  ( FFFFFF81 00000001 FFFFFFFF FFFFFFF7 )
  1D8:  		Call  SetDefenseTable   ( .Actor:Self 00000001 $DefenseTable_802289B0 )
  1F0:  		Call  SetIdleAnimations ( .Actor:Self 00000001 $IdleAnimations_80228AD0 )
  208:  		Call  BindIdle  ( .Actor:Self $Script_Idle_80228D7C )
  21C:  		Call  SetActorFlagBits  ( .Actor:Self 00000400 .False )
  234:  	EndIf
  23C:  	Call  EnableIdleScript  ( .Actor:Self 00000001 )
  250:  	Call  UseIdleAnimation  ( .Actor:Self .True )
  264:  	Return
  26C:  EndIf
  274:  Call  SetTargetActor    ( .Actor:Self .Actor:Player )
  288:  Call  UseBattleCamPreset    ( 0000003F )
  298:  Call  BattleCamTargetActor  ( .Actor:Self )
  2A8:  Call  8024ECF8  ( FFFFFFFF 00000001 00000000 )
  2C0:  Call  SetAnimation      ( .Actor:Self 00000001 0033000C )
  2D8:  Wait  10`
  2E4:  Call  SetAnimation      ( .Actor:Self 00000001 00330006 )
  2FC:  Thread
  304:  	Call  GetActorPos   ( .Actor:Self *Var0 *Var1 *Var2 )
  320:  	Call  PlayEffect    ( ~FX:SmokeImpact:Small *Var0 *Var1 *Var2 00000020 00000004 00000000 0000000A 00000000 00000000 00000000 00000000 00000000 )
  364:  	Wait  10`
  370:  	Call  PlayEffect    ( ~FX:SmokeImpact:Small *Var0 *Var1 *Var2 00000020 00000004 00000000 0000000A 00000000 00000000 00000000 00000000 00000000 )
  3B4:  	Wait  5`
  3C0:  	Call  PlayEffect    ( ~FX:SmokeImpact:Small *Var0 *Var1 *Var2 00000020 00000004 00000000 0000000A 00000000 00000000 00000000 00000000 00000000 )
  404:  EndThread
  40C:  Call  PlaySoundAtActor  ( .Actor:Self 00002021 )
  420:  Call  SetAnimation      ( .Actor:Self 00000001 00330005 )
  438:  Wait  20`
  444:  Call  SetActorSounds    ( .Actor:Self .ActorSound:Walk 00000000 00000000 )
  460:  Call  PlaySoundAtActor  ( .Actor:Self 000020D3 )
  474:  Call  EnemyTestTarget   ( .Actor:Self *Var0 ~Flags:DamageType:0 00000000 00000002 00000010 )
  498:  Switch  *Var0
  4A4:  	CaseOR  ==  .HitResult:Miss % 6
  4B0:  	CaseOR  ==  .HitResult:Lucky % 5
  4BC:  		Set   *VarA  *Var0
  4CC:  		Thread
  4D4:  			Loop
  4E0:  				Call  GetActorPos   ( .Actor:Player *Var0 *Var1 *Var2 )
  4FC:  				Add   *Var0  0000001E
  50C:  				Call  GetActorPos   ( .Actor:Self *Var3 *Var4 *Var5 )
  528:  				If  *Var0  >  *Var3
  538:  					BreakLoop
  540:  				EndIf
  548:  				Wait  1`
  554:  			EndLoop
  55C:  			Call  UseBattleCamPreset    ( 00000001 )
  56C:  			If  *VarA  ==  .HitResult:Lucky % 5
  57C:  				Call  EnemyTestTarget   ( .Actor:Self *Var0 ~Flags:DamageType:TriggerLucky 00000000 00000000 00000000 )
  5A0:  			EndIf
  5A8:  			Wait  15`
  5B4:  			Call  UseBattleCamPreset    ( 00000002 )
  5C4:  		EndThread
  5CC:  		Call  SetGoalToTarget       ( .Actor:Self )
  5DC:  		Call  AddGoalPos    ( .Actor:Self  -150`  0`  0` )
  5F8:  		Call  SetActorSpeed ( .Actor:Self *Fixed[14.0] )
  60C:  		Call  RunToGoal     ( .Actor:Self  0` .False )
  624:  		Wait  15`
  630:  		Call  YieldTurn ( )
  63C:  		Call  ResetAllActorSounds   ( .Actor:Self )
  64C:  		Call  AddActorDecoration    ( .Actor:Self 00000001 00000000 .Decoration:Sweat )
  668:  		Call  SetGoalToHome ( .Actor:Self )
  678:  		Call  GetGoalPos    ( .Actor:Self *Var0 *Var1 *Var2 )
  694:  		Add   *Var0  000000C8
  6A4:  		Call  SetActorPos   ( .Actor:Self *Var0 *Var1 *Var2 )
  6C0:  		Call  SetActorSpeed ( .Actor:Self *Fixed[10.0] )
  6D4:  		Call  RunToGoal     ( .Actor:Self  0` .False )
  6EC:  		Wait  10`
  6F8:  		Call  SetAnimation  ( .Actor:Self 00000001 0033000D )
  710:  		Wait  10`
  71C:  		Call  RemoveActorDecoration ( .Actor:Self 00000001 00000000 )
  734:  		Call  EnableIdleScript      ( .Actor:Self 00000001 )
  748:  		Call  UseIdleAnimation      ( .Actor:Self .True )
  75C:  		Return
  764:  	EndCaseGroup
  76C:  EndSwitch
  774:  Call  SetGoalToTarget   ( .Actor:Self )
  784:  Call  SetActorSpeed     ( .Actor:Self *Fixed[14.0] )
  798:  Call  RunToGoal ( .Actor:Self  0` .False )
  7B0:  Wait  2`
  7BC:  Call  EnemyDamageTarget ( .Actor:Self *Var0 ~Flags:DamageType:0 0000FFFF 00000000 00000002 00000020 )
  7E4:  Switch  *Var0
  7F0:  	CaseOR  ==  .HitResult:Hit % 0
  7FC:  	CaseOR  ==  .HitResult:QuakeImmune % 2
  808:  		Call  UseBattleCamPreset    ( 00000002 )
  818:  		Call  GetGoalPos    ( .Actor:Self *Var0 *Var1 *Var2 )
  834:  		Add   *Var0  00000028
  844:  		Set   *Var1  00000000
  854:  		Call  SetActorJumpGravity   ( .Actor:Self *Fixed[1.8] )
  868:  		Call  SetGoalPos    ( .Actor:Self *Var0 *Var1 *Var2 )
  884:  		Call  JumpToGoal    ( .Actor:Self  10` .False .True .False )
  8A4:  		Add   *Var0  0000001E
  8B4:  		Call  SetGoalPos    ( .Actor:Self *Var0 *Var1 *Var2 )
  8D0:  		Call  JumpToGoal    ( .Actor:Self  8` .False .True .False )
  8F0:  		Add   *Var0  00000014
  900:  		Call  SetGoalPos    ( .Actor:Self *Var0 *Var1 *Var2 )
  91C:  		Call  JumpToGoal    ( .Actor:Self  6` .False .True .False )
  93C:  		Call  SetAnimation  ( .Actor:Self 00000001 00330001 )
  954:  		Wait  8`
  960:  		Call  YieldTurn ( )
  96C:  		Call  ResetAllActorSounds   ( .Actor:Self )
  97C:  		SetConst  *Var0  00000001
  98C:  		SetConst  *Var1  00330004
  99C:  		ExecWait  DoReturnHome
  9A8:  		Call  SetAnimation  ( .Actor:Self 00000001 00330001 )
  9C0:  	EndCaseGroup
  9C8:  EndSwitch
  9D0:  Call  EnableIdleScript  ( .Actor:Self 00000001 )
  9E4:  Call  UseIdleAnimation  ( .Actor:Self .True )
  9F8:  Return
  A00:  End
}

PADDING: 8022B93C to 8022B940 (005FFDCC to 005FFDD0)
00000000

#new:DefenseTable $DefenseTable_8022B940
{
	.Element:Normal 00000004
	.Element:Fire   00000063
	.Element:Blast  00000063
	.Element:End
}

#new:DefenseTable $DefenseTable_8022B95C
{
	.Element:Normal 00000000
	.Element:End
}

#new:StatusTable $StatusTable_8022B968
{
	.Status:Normal      0`
	.Status:Default     0`
	.Status:Sleep      60`
	.Status:Poison     50`
	.Status:Frozen      0`
	.Status:Dizzy      75`
	.Status:Fear        0`
	.Status:Static     50`
	.Status:Paralyze   75`
	.Status:Shrink     75`
	.Status:Stop       90`
	.Status:DefaultTurnMod    0`
	.Status:SleepTurnMod     -1`
	.Status:PoisonTurnMod     0`
	.Status:FrozenTurnMod     0`
	.Status:DizzyTurnMod      1`
	.Status:FearTurnMod       0`
	.Status:StaticTurnMod     0`
	.Status:ParalyzeTurnMod   0`
	.Status:ShrinkTurnMod     0`
	.Status:StopTurnMod       0`
	.Status:End
}

#new:PartsTable $PartsTable_8022BA14
{
	00800000 01000000 001800FF $IdleAnimations_8022BAAC $DefenseTable_8022B940 00001010 00000000 000E0000 00000000
}

#new:Actor $SpikeTop
{
	% stats
	[Index]        2Cb
	[Level]        17`b
	[MaxHP]         4`b
	[Coins]         1`b
	[Flags]       00000800
	[StatusTable] $StatusTable_8022B968
	% ai
	[PartsCount]    1`s
	[PartsTable]  $PartsTable_8022BA14
	[Script]      $Script_Init_8022BB3C
	% move effectiveness
	[Escape]       60`b
	[Item]         60`b
	[AirLift]      70`b
	[Hurricane]    65`b % Bow's "Spook" as well
	[UpAndAway]    95`b
	[PowerBounce]  90`b
	[SpinSmash]     0`b % weight (0-4)
	% ui positions
	[Size]         24`b  24`b % width height
	[HealthBar]     0`b   0`b % dx dy
	[StatusTurn]   -8`b  16`b % dx dy
	[StatusIcon]    8`b  13`b % dx dy
}

#new:IdleAnimations $IdleAnimations_8022BA60
{
	.Status:Normal    004D0003
	.Status:Stone     004D0000
	.Status:Sleep     004D001B
	.Status:Poison    004D0003
	.Status:Stop      004D0000
	.Status:Static    004D0003
	.Status:Paralyze  004D0000
	.Status:Dizzy     004D001E
	.Status:Fear      004D001E
	.Status:End
}

#new:IdleAnimations $IdleAnimations_8022BAAC
{
	.Status:Normal    004D0004
	.Status:Stone     004D0001
	.Status:Sleep     004D001C
	.Status:Poison    004D0004
	.Status:Stop      004D0001
	.Status:Static    004D0004
	.Status:Paralyze  004D0001
	.Status:Dizzy     004D001F
	.Status:Fear      004D001F
	.Status:End
}

#new:IdleAnimations $IdleAnimations_8022BAF8
{
	.Status:Normal    004D0005
	.Status:Stone     004D0002
	.Status:Sleep     004D001D
	.Status:Poison    004D0005
	.Status:Stop      004D0002
	.Status:Static    004D0005
	.Status:Dizzy     004D0020
	.Status:Fear      004D0020
	.Status:End
}

#new:Script $Script_Init_8022BB3C
{
    0:  Call  BindIdle      ( .Actor:Self $Script_Idle_8022BD0C )
   14:  Call  GetActorVar   ( .Actor:Self 00000000 *Var0 )
   2C:  If  *Var0  ==  00000001
   3C:  	Call  SetActorVar       ( .Actor:Self 00000008 00000000 )
   54:  	Call  $Function_80218AB0    ( FFFFFFF6 00000000 0000000A 00000000 )
   70:  	Call  BindTakeTurn      ( .Actor:Self $Script_TakeTurn_8022D444 )
   84:  	Call  BindHandleEvent   ( .Actor:Self $Script_HandleEvent_8022C150 )
   98:  	Call  SetPartEventBits  ( .Actor:Self 00000001 00001000 .False )
   B4:  Else
   BC:  	Call  SetActorVar       ( .Actor:Self 00000008 00000001 )
   D4:  	Call  SetTargetOffset   ( .Actor:Self 00000001  0`  24` )
   F0:  	Call  8027D4C8  ( FFFFFF81 00000001 FFFFFFFF FFFFFFF7 )
  10C:  	Call  BindTakeTurn      ( .Actor:Self $Script_TakeTurn_8022DEFC )
  120:  	Call  BindHandleEvent   ( .Actor:Self $Script_HandleEvent_8022C6A8 )
  134:  	Call  SetIdleAnimations ( .Actor:Self 00000001 $IdleAnimations_8022BA60 )
  14C:  	Call  SetActorFlagBits  ( .Actor:Self 00000800 .False )
  164:  	Call  SetPartEventBits  ( .Actor:Self 00000001 00001000 .True )
  180:  EndIf
  188:  Call  HPBarToHome       ( .Actor:Self )
  198:  Call  EnableIdleScript  ( .Actor:Self 00000001 )
  1AC:  Call  UseIdleAnimation  ( .Actor:Self .True )
  1C0:  Return
  1C8:  End
}

#new:Script $Script_Idle_8022BD0C
{
    0:  Return
    8:  End
}

#new:Script $Script_8022BD1C
{
    0:  Call  8027D32C      ( FFFFFF81 )
   10:  Call  SetActorVar   ( .Actor:Self 00000008 00000002 )
   28:  Call  SetTargetOffset   ( .Actor:Self 00000001  1`  20` )
   44:  Call  8027D4C8      ( FFFFFF81 00000001 FFFFFFFD FFFFFFF8 )
   60:  Call  $Function_80218AB0    ( FFFFFFF6 00000014 0000000A 00000014 )
   7C:  Call  BindTakeTurn  ( .Actor:Self $Script_TakeTurn_8022DEFC )
   90:  Call  BindHandleEvent   ( .Actor:Self $Script_HandleEvent_8022C6A8 )
   A4:  Call  SetActorVar   ( .Actor:Self 00000009 00000001 )
   BC:  Call  SetDefenseTable   ( .Actor:Self 00000001 $DefenseTable_8022B95C )
   D4:  Call  SetIdleAnimations ( .Actor:Self 00000001 $IdleAnimations_8022BAF8 )
   EC:  Call  SetActorFlagBits  ( .Actor:Self 00000800 .False )
  104:  Call  SetPartEventBits  ( .Actor:Self 00000001 00000010 .False )
  120:  Call  SetPartEventBits  ( .Actor:Self 00000001 00001000 .True )
  13C:  Call  SetActorFlagBits  ( .Actor:Self 00000400 .True )
  154:  Call  SetAnimation  ( .Actor:Self 00000001 004D0015 )
  16C:  Call  SetActorYaw   ( .Actor:Self  180` )
  180:  Call  GetActorPos   ( .Actor:Self *Var0 *Var1 *Var2 )
  19C:  Sub   *Var1  00000018
  1AC:  Call  SetActorPos   ( .Actor:Self *Var0 *Var1 *Var2 )
  1C8:  Set   *Var1  00000000
  1D8:  Call  SetActorSounds    ( .Actor:Self .ActorSound:Jump 00000301 00000000 )
  1F4:  Call  SetActorJumpGravity   ( .Actor:Self *Fixed[0.8] )
  208:  Call  SetGoalPos    ( .Actor:Self *Var0 *Var1 *Var2 )
  224:  Call  JumpToGoal    ( .Actor:Self  15` .False .True .False )
  244:  Call  GetIndexFromPos   ( .Actor:Self *VarA )
  258:  Mod   *VarA  00000004
  268:  Call  SetGoalToIndex    ( .Actor:Self *VarA )
  27C:  Call  GetGoalPos    ( .Actor:Self *VarA *VarB *VarC )
  298:  Call  SetHomePos    ( .Actor:Self *VarA *VarB *VarC )
  2B4:  Set   *VarD  *VarA
  2C4:  Set   *VarE  *VarB
  2D4:  Set   *VarF  *VarC
  2E4:  Sub   *VarD  *Var0
  2F4:  Sub   *VarE  *Var1
  304:  Sub   *VarF  *Var2
  314:  Div   *VarD  00000002
  324:  Div   *VarE  00000002
  334:  Div   *VarF  00000002
  344:  Add   *Var0  *VarD
  354:  Add   *Var1  *VarE
  364:  Add   *Var2  *VarF
  374:  Call  ResetAllActorSounds   ( .Actor:Self )
  384:  Call  SetAnimation  ( .Actor:Self 00000001 004D0005 )
  39C:  Call  SetGoalPos    ( .Actor:Self *Var0 *Var1 *Var2 )
  3B8:  Call  JumpToGoal    ( .Actor:Self  10` .False .True .False )
  3D8:  Call  SetGoalPos    ( .Actor:Self *VarA *VarB *VarC )
  3F4:  Call  JumpToGoal    ( .Actor:Self  5` .False .True .False )
  414:  Call  HPBarToHome   ( .Actor:Self )
  424:  Return
  42C:  End
}

#new:Script $Script_HandleEvent_8022C150
{
    0:  Call  UseIdleAnimation  ( .Actor:Self .False )
   14:  Call  EnableIdleScript  ( .Actor:Self 00000000 )
   28:  Call  GetLastEvent      ( .Actor:Self *Var0 )
   3C:  Switch  *Var0
   48:  	Case  ==  .Event:HitCombo % 9
   54:  		SetConst  *Var0  00000001
   64:  		SetConst  *Var1  004D0014
   74:  		ExecWait  DoNormalHit
   80:  	Case  ==  .Event:Hit % A
   8C:  		SetConst  *Var0  00000001
   9C:  		SetConst  *Var1  004D0014
   AC:  		ExecWait  DoNormalHit
   B8:  		ExecWait  $Script_8022BD1C
   C4:  	Case  ==  .Event:FlipTrigger % D
   D0:  		SetConst  *Var0  00000001
   E0:  		SetConst  *Var1  004D0014
   F0:  		ExecWait  DoNormalHit
   FC:  		ExecWait  $Script_8022BD1C
  108:  	Case  ==  .Event:BurnHit % E
  114:  		SetConst  *Var0  00000001
  124:  		SetConst  *Var1  004D0019
  134:  		SetConst  *Var2  004D001A
  144:  		ExecWait  DoBurnHit
  150:  		ExecWait  $Script_8022BD1C
  15C:  	Case  ==  .Event:BurnDeath % 24
  168:  		SetConst  *Var0  00000001
  178:  		SetConst  *Var1  004D0019
  188:  		SetConst  *Var2  004D001A
  198:  		ExecWait  DoBurnHit
  1A4:  		SetConst  *Var0  00000001
  1B4:  		SetConst  *Var1  004D001A
  1C4:  		ExecWait  DoDeath
  1D0:  		Return
  1D8:  	Case  ==  .Event:ShockHit % 2F
  1E4:  		SetConst  *Var0  00000001
  1F4:  		SetConst  *Var1  004D0014
  204:  		ExecWait  DoShockHit
  210:  		SetConst  *Var0  00000001
  220:  		SetConst  *Var1  004D0013
  230:  		ExecWait  DoJumpBack
  23C:  		SetConst  *Var0  00000001
  24C:  		SetConst  *Var1  004D0008
  25C:  		ExecWait  DoReturnHome
  268:  	Case  ==  .Event:ShockDeath % 26
  274:  		SetConst  *Var0  00000001
  284:  		SetConst  *Var1  004D0014
  294:  		ExecWait  DoShockHit
  2A0:  		SetConst  *Var0  00000001
  2B0:  		SetConst  *Var1  004D0013
  2C0:  		ExecWait  DoDeath
  2CC:  		Return
  2D4:  	Case  ==  00000017 % 17
  2E0:  		SetConst  *Var0  00000001
  2F0:  		SetConst  *Var1  004D000D
  300:  		ExecWait  DoImmune
  30C:  	Case  ==  .Event:Immune % 19
  318:  		SetConst  *Var0  00000001
  328:  		SetConst  *Var1  004D000D
  338:  		ExecWait  DoImmune
  344:  		Wait  2`
  350:  		Call  GetStatusFlags    ( .Actor:Self *Var0 )
  364:  		If  *Var0  !&  ~Flags:StatusFlags:Stop % 200000
  374:  			ExecWait  $Script_8022BD1C
  380:  		EndIf
  388:  	Case  ==  .Event:Death % 20
  394:  		SetConst  *Var0  00000001
  3A4:  		SetConst  *Var1  004D0014
  3B4:  		ExecWait  DoNormalHit
  3C0:  		Wait  10`
  3CC:  		SetConst  *Var0  00000001
  3DC:  		SetConst  *Var1  004D0014
  3EC:  		ExecWait  DoDeath
  3F8:  		Return
  400:  	Case  ==  .Event:RecoverStatus % 31
  40C:  	Case  ==  .Event:ScareAway % 39
  418:  		Call  SetActorFlagBits  ( .Actor:Self 00000200 .True )
  430:  		SetConst  *Var0  00000001
  440:  		SetConst  *Var1  004D0009
  450:  		SetConst  *Var2  004D0014
  460:  		ExecWait  DoScareAway
  46C:  		Return
  474:  	Default
  47C:  EndSwitch
  484:  Call  EnableIdleScript  ( .Actor:Self 00000001 )
  498:  Call  UseIdleAnimation  ( .Actor:Self .True )
  4AC:  Return
  4B4:  End
}

#new:Script $Script_8022C60C
{
    0:  Call  GetActorVar   ( .Actor:Self 00000008 *Var3 )
   18:  If  *Var3  ==  00000002
   28:  	Set   *Var1  *Var2
   38:  EndIf
   40:  Return
   48:  End
}

#new:IntTable $IntTable_8022C65C
{
	00000007 0000000D 00000011 00000015 00000017 00000018 00000017 00000015
	00000011 0000000D 00000007 00000000 00000004 00000007 00000006 00000004
	00000000 00000002 00000000
}

#new:Script $Script_HandleEvent_8022C6A8
{
    0:  Call  UseIdleAnimation  ( .Actor:Self .False )
   14:  Call  EnableIdleScript  ( .Actor:Self 00000000 )
   28:  Call  GetLastEvent      ( .Actor:Self *Var0 )
   3C:  Switch  *Var0
   48:  	CaseOR  ==  .Event:HitCombo % 9
   54:  	CaseOR  ==  .Event:Hit % A
   60:  		SetConst  *Var0  00000001
   70:  		SetConst  *Var1  004D0013
   80:  		SetConst  *Var2  004D0015
   90:  		ExecWait  $Script_8022C60C
   9C:  		ExecWait  DoNormalHit
   A8:  	EndCaseGroup
   B0:  	Case  ==  .Event:BurnHit % E
   BC:  		Call  GetActorVar   ( .Actor:Self 00000008 *Var0 )
   D4:  		If  *Var0  !=  00000002
   E4:  			SetConst  *Var0  00000001
   F4:  			SetConst  *Var1  004D0016
  104:  			SetConst  *Var2  004D0017
  114:  			ExecWait  DoBurnHit
  120:  		Else
  128:  			SetConst  *Var0  00000001
  138:  			SetConst  *Var1  004D0018
  148:  			SetConst  *Var2  004D0018
  158:  			ExecWait  DoBurnHit
  164:  		EndIf
  16C:  	Case  ==  .Event:BurnDeath % 24
  178:  		Call  GetActorVar   ( .Actor:Self 00000008 *Var0 )
  190:  		If  *Var0  !=  00000002
  1A0:  			SetConst  *Var0  00000001
  1B0:  			SetConst  *Var1  004D0016
  1C0:  			SetConst  *Var2  004D0017
  1D0:  			ExecWait  DoBurnHit
  1DC:  			SetConst  *Var0  00000001
  1EC:  			SetConst  *Var1  004D0017
  1FC:  			ExecWait  DoDeath
  208:  		Else
  210:  			SetConst  *Var0  00000001
  220:  			SetConst  *Var1  004D0018
  230:  			SetConst  *Var2  004D0018
  240:  			ExecWait  DoBurnHit
  24C:  			SetConst  *Var0  00000001
  25C:  			SetConst  *Var1  004D0018
  26C:  			ExecWait  DoDeath
  278:  		EndIf
  280:  		Return
  288:  	Case  ==  .Event:SpinSmashHit % B
  294:  		SetConst  *Var0  00000001
  2A4:  		SetConst  *Var1  004D0013
  2B4:  		SetConst  *Var2  004D0015
  2C4:  		ExecWait  $Script_8022C60C
  2D0:  		ExecWait  DoSpinSmashHit
  2DC:  	Case  ==  .Event:FlipTrigger % D
  2E8:  		Call  SetActorVar       ( .Actor:Self 00000008 00000002 )
  300:  		Call  SetTargetOffset   ( .Actor:Self 00000001  1`  20` )
  31C:  		Call  8027D4C8  ( FFFFFF81 00000001 FFFFFFFD FFFFFFF8 )
  338:  		Call  SetActorVar       ( .Actor:Self 00000009 00000001 )
  350:  		Call  SetDefenseTable   ( .Actor:Self 00000001 $DefenseTable_8022B95C )
  368:  		Call  SetIdleAnimations ( .Actor:Self 00000001 $IdleAnimations_8022BAF8 )
  380:  		Call  SetPartEventBits  ( .Actor:Self 00000001 00000010 .False )
  39C:  		Call  SetActorFlagBits  ( .Actor:Self 00000400 .True )
  3B4:  		Call  SetAnimation      ( .Actor:Self 00000001 004D0013 )
  3CC:  		Call  SetActorRotationOffset    ( .Actor:Self 00000000 0000000C 00000000 )
  3E8:  		Thread
  3F0:  			Wait  1`
  3FC:  			Call  SetActorRotation  ( .Actor:Self 00000000 00000000 00000000 )
  418:  			Wait  1`
  424:  			Call  SetActorRotation  ( .Actor:Self 00000000 00000000 FFFFFFD3 )
  440:  			Wait  1`
  44C:  			Call  SetActorRotation  ( .Actor:Self 00000000 00000000 FFFFFFA6 )
  468:  			Wait  1`
  474:  			Call  SetActorRotation  ( .Actor:Self 00000000 00000000 FFFFFF79 )
  490:  			Wait  1`
  49C:  			Call  SetActorRotation  ( .Actor:Self 00000000 00000000 FFFFFF4C )
  4B8:  			Wait  1`
  4C4:  		EndThread
  4CC:  		UseIntBuffer  $IntTable_8022C65C
  4D8:  		Loop  00000013
  4E4:  			Get1Int  *Var0
  4F0:  			Call  SetActorDispOffset    ( .Actor:Self 00000000 *Var0 00000000 )
  50C:  			Wait  1`
  518:  		EndLoop
  520:  		Call  SetActorDispOffset    ( .Actor:Self 00000000 00000000 00000000 )
  53C:  		Call  SetActorRotationOffset    ( .Actor:Self 00000000 00000000 00000000 )
  558:  		Call  SetActorRotation      ( .Actor:Self 00000000 00000000 00000000 )
  574:  		Call  SetAnimation  ( .Actor:Self 00000001 004D0015 )
  58C:  	Case  ==  .Event:ShockHit % 2F
  598:  		SetConst  *Var0  00000001
  5A8:  		SetConst  *Var1  004D0013
  5B8:  		ExecWait  DoShockHit
  5C4:  		SetConst  *Var0  00000001
  5D4:  		SetConst  *Var1  004D0013
  5E4:  		ExecWait  DoJumpBack
  5F0:  		SetConst  *Var0  00000001
  600:  		SetConst  *Var1  004D0008
  610:  		ExecWait  DoReturnHome
  61C:  	Case  ==  .Event:ShockDeath % 26
  628:  		SetConst  *Var0  00000001
  638:  		SetConst  *Var1  004D0013
  648:  		ExecWait  DoShockHit
  654:  		SetConst  *Var0  00000001
  664:  		SetConst  *Var1  004D0013
  674:  		ExecWait  DoDeath
  680:  		Return
  688:  	Case  ==  00000017 % 17
  694:  		Call  GetActorVar   ( .Actor:Self 00000008 *Var0 )
  6AC:  		If  *Var0  ==  00000001
  6BC:  			SetConst  *Var0  00000001
  6CC:  			SetConst  *Var1  004D000B
  6DC:  			ExecWait  DoImmune
  6E8:  			Call  SetAnimation  ( .Actor:Self 00000001 004D000E )
  700:  			Wait  8`
  70C:  		Else
  714:  			SetConst  *Var0  00000001
  724:  			SetConst  *Var1  004D0005
  734:  			ExecWait  DoImmune
  740:  		EndIf
  748:  	Case  ==  .Event:Immune % 19
  754:  		Call  GetActorVar   ( .Actor:Self 00000008 *Var0 )
  76C:  		If  *Var0  ==  00000001
  77C:  			SetConst  *Var0  00000001
  78C:  			SetConst  *Var1  004D000B
  79C:  			ExecWait  DoImmune
  7A8:  			Call  SetAnimation  ( .Actor:Self 00000001 004D000C )
  7C0:  			Wait  8`
  7CC:  		Else
  7D4:  			SetConst  *Var0  00000001
  7E4:  			SetConst  *Var1  004D0005
  7F4:  			ExecWait  DoImmune
  800:  		EndIf
  808:  	Case  ==  .Event:SpikeTaunt % 1B
  814:  		Wait  10`
  820:  		Call  GetActorPos       ( .Actor:Self *Var0 *Var1 *Var2 )
  83C:  		Call  GetStatusFlags    ( .Actor:Self *Var3 )
  850:  		If  *Var3  &  ~Flags:StatusFlags:Shrink % 80000
  860:  			Add   *Var1  00000009
  870:  		Else
  878:  			Add   *Var1  00000018
  888:  		EndIf
  890:  		Call  PlayEffect    ( ~FX:LensFlare:Rotating *Var0 *Var1 *Var2 00000014 00000000 00000000 00000000 00000000 00000000 00000000 00000000 00000000 )
  8D4:  		Wait  20`
  8E0:  	Case  ==  .Event:Death % 20
  8EC:  		SetConst  *Var0  00000001
  8FC:  		SetConst  *Var1  004D0013
  90C:  		SetConst  *Var2  004D0015
  91C:  		ExecWait  $Script_8022C60C
  928:  		ExecWait  DoNormalHit
  934:  		Wait  10`
  940:  		SetConst  *Var0  00000001
  950:  		SetConst  *Var1  004D0013
  960:  		SetConst  *Var2  004D0015
  970:  		ExecWait  $Script_8022C60C
  97C:  		ExecWait  DoDeath
  988:  		Return
  990:  	Case  ==  .Event:SpinSmashDeath % 21
  99C:  		SetConst  *Var0  00000001
  9AC:  		SetConst  *Var1  004D0013
  9BC:  		SetConst  *Var2  004D0015
  9CC:  		ExecWait  $Script_8022C60C
  9D8:  		ExecWait  DoSpinSmashHit
  9E4:  		SetConst  *Var0  00000001
  9F4:  		SetConst  *Var1  004D0013
  A04:  		SetConst  *Var2  004D0015
  A14:  		ExecWait  $Script_8022C60C
  A20:  		ExecWait  DoDeath
  A2C:  		Return
  A34:  	Case  ==  .Event:RecoverStatus % 31
  A40:  		Call  GetActorVar   ( .Actor:Self 00000008 *Var0 )
  A58:  		If  *Var0  ==  00000001
  A68:  			SetConst  *Var0  00000001
  A78:  			SetConst  *Var1  004D0003
  A88:  			ExecWait  DoRecover
  A94:  		EndIf
  A9C:  	Case  ==  .Event:ScareAway % 39
  AA8:  		Call  GetActorVar   ( .Actor:Self 00000008 *Var0 )
  AC0:  		If  *Var0  ==  00000001
  AD0:  			SetConst  *Var0  00000001
  AE0:  			SetConst  *Var1  004D0008
  AF0:  			SetConst  *Var2  004D0013
  B00:  			ExecWait  DoScareAway
  B0C:  			Return
  B14:  		Else
  B1C:  			SetConst  *Var0  00000001
  B2C:  			SetConst  *Var1  004D0005
  B3C:  			ExecWait  DoImmune
  B48:  		EndIf
  B50:  	Case  ==  .Event:BeginAirLift % 3A
  B5C:  		Call  GetActorVar   ( .Actor:Self 00000008 *Var0 )
  B74:  		If  *Var0  ==  00000001
  B84:  			SetConst  *Var0  00000001
  B94:  			SetConst  *Var1  004D0008
  BA4:  		Else
  BAC:  			SetConst  *Var0  00000001
  BBC:  			SetConst  *Var1  004D0005
  BCC:  		EndIf
  BD4:  		ExecWait  DoAirLift
  BE0:  	Case  ==  .Event:BlowAway % 16
  BEC:  		Call  SetActorDispOffset    ( .Actor:Self 00000007 00000000 00000000 )
  C08:  		Call  GetActorVar   ( .Actor:Self 00000008 *Var0 )
  C20:  		If  *Var0  ==  00000001
  C30:  			SetConst  *Var0  00000001
  C40:  			SetConst  *Var1  004D0013
  C50:  		Else
  C58:  			SetConst  *Var0  00000001
  C68:  			SetConst  *Var1  004D0015
  C78:  		EndIf
  C80:  		ExecWait  DoBlowAway
  C8C:  		Return
  C94:  	Case  ==  .Event:AirLiftFailed % 1F
  CA0:  		Call  GetActorVar   ( .Actor:Self 00000008 *Var0 )
  CB8:  		If  *Var0  ==  00000001
  CC8:  			SetConst  *Var0  00000001
  CD8:  			SetConst  *Var1  004D000B
  CE8:  			ExecWait  DoImmune
  CF4:  			Call  SetAnimation  ( .Actor:Self 00000001 004D000C )
  D0C:  			Wait  8`
  D18:  		Else
  D20:  			SetConst  *Var0  00000001
  D30:  			SetConst  *Var1  004D0005
  D40:  			ExecWait  DoImmune
  D4C:  		EndIf
  D54:  	Default
  D5C:  EndSwitch
  D64:  Call  EnableIdleScript  ( .Actor:Self 00000001 )
  D78:  Call  UseIdleAnimation  ( .Actor:Self .True )
  D8C:  Return
  D94:  End
}

#new:Script $Script_TakeTurn_8022D444
{
    0:  Call  UseIdleAnimation  ( .Actor:Self .False )
   14:  Call  EnableIdleScript  ( .Actor:Self 00000000 )
   28:  Call  SetTargetActor    ( .Actor:Self .Actor:Player )
   3C:  Call  SetActorVar       ( .Actor:Self 00000008 00000001 )
   54:  Call  SetTargetOffset   ( .Actor:Self 00000001  0`  24` )
   70:  Call  8027D4C8  ( FFFFFF81 00000001 FFFFFFFF FFFFFFF7 )
   8C:  Call  $Function_80218AB0    ( FFFFFFF6 00000014 0000000A 00000014 )
   A8:  Call  BindTakeTurn      ( .Actor:Self $Script_TakeTurn_8022DEFC )
   BC:  Call  BindHandleEvent   ( .Actor:Self $Script_HandleEvent_8022C6A8 )
   D0:  Call  SetIdleAnimations ( .Actor:Self 00000001 $IdleAnimations_8022BA60 )
   E8:  Call  SetActorFlagBits  ( .Actor:Self 00000800 .False )
  100:  Call  SetPartEventBits  ( .Actor:Self 00000001 00001000 .True )
  11C:  Call  GetIndexFromPos   ( .Actor:Self *Var0 )
  130:  Mod   *Var0  00000004
  140:  Call  SetGoalToIndex    ( .Actor:Self *Var0 )
  154:  Call  GetGoalPos        ( .Actor:Self *Var0 *Var1 *Var2 )
  170:  Call  SetHomePos        ( .Actor:Self *Var0 *Var1 *Var2 )
  18C:  Call  HPBarToHome       ( .Actor:Self )
  19C:  Call  UseBattleCamPreset    ( 0000003F )
  1AC:  Call  BattleCamTargetActor  ( .Actor:Self )
  1BC:  Call  8024ECF8  ( FFFFFFFF 00000001 00000000 )
  1D4:  Call  GetBattlePhase    ( *Var0 )
  1E4:  If  *Var0  ==  00000001
  1F4:  	Call  SetGoalToTarget   ( .Actor:Self )
  204:  	Call  GetActorPos   ( .Actor:Self *Var3 *Var4 *Var5 )
  220:  	Call  GetGoalPos    ( .Actor:Self *Var0 *Var1 *Var2 )
  23C:  	Call  SetActorPos   ( .Actor:Self *Var0 *Var4 *Var2 )
  258:  	Call  SetAnimation  ( .Actor:Self 00000001 004D0001 )
  270:  Else
  278:  	Call  SetAnimation  ( .Actor:Self 00000001 004D0009 )
  290:  	Call  SetGoalToTarget   ( .Actor:Self )
  2A0:  	Call  GetActorPos   ( .Actor:Self *Var3 *Var4 *Var5 )
  2BC:  	Call  GetGoalPos    ( .Actor:Self *Var0 *Var1 *Var2 )
  2D8:  	Call  SetGoalPos    ( .Actor:Self *Var0 *Var4 *Var2 )
  2F4:  	Call  SetActorSpeed ( .Actor:Self *Fixed[6.0] )
  308:  	Call  RunToGoal     ( .Actor:Self  0` .False )
  320:  	Call  SetAnimation  ( .Actor:Self 00000001 004D0001 )
  338:  	Wait  8`
  344:  EndIf
  34C:  Call  SetActorSounds    ( .Actor:Self .ActorSound:Jump 00000301 00000000 )
  368:  Call  GetBattlePhase    ( *Var0 )
  378:  If  *Var0  ==  00000001
  388:  	Call  UseBattleCamPreset    ( 00000005 )
  398:  	Call  SetBattleCamZoom      (  430` )
  3A8:  	Call  SetBattleCamOffsetZ   (  20` )
  3B8:  	Call  MoveBattleCamOver     (  10` )
  3C8:  	Call  8024ECF8  ( FFFFFFFF 00000001 00000000 )
  3E0:  EndIf
  3E8:  Call  EnemyTestTarget   ( .Actor:Self *Var0 ~Flags:DamageType:0 00000000 00000004 00000010 )
  40C:  Switch  *Var0
  418:  	CaseOR  ==  .HitResult:Miss % 6
  424:  	CaseOR  ==  .HitResult:Lucky % 5
  430:  		Set   *VarA  *Var0
  440:  		Call  SetActorYaw   ( .Actor:Self  180` )
  454:  		Call  SetPartYaw    ( .Actor:Self 00000001  180` )
  46C:  		Call  SetAnimation  ( .Actor:Self 00000001 004D0015 )
  484:  		Call  GetActorPos   ( .Actor:Self *Var0 *Var1 *Var2 )
  4A0:  		Sub   *Var1  00000018
  4B0:  		Call  SetActorPos   ( .Actor:Self *Var0 *Var1 *Var2 )
  4CC:  		Call  SetActorJumpGravity   ( .Actor:Self *Fixed[0.8] )
  4E0:  		Call  GetActorPos   ( .Actor:Self *Var0 *Var1 *Var2 )
  4FC:  		Set   *Var1  00000000
  50C:  		Call  SetGoalPos    ( .Actor:Self *Var0 *Var1 *Var2 )
  528:  		Call  JumpToGoal    ( .Actor:Self  15` .False .True .False )
  548:  		If  *VarA  ==  .HitResult:Lucky % 5
  558:  			Call  EnemyTestTarget   ( .Actor:Self *Var0 ~Flags:DamageType:TriggerLucky 00000000 00000000 00000000 )
  57C:  		EndIf
  584:  		Call  ResetAllActorSounds   ( .Actor:Self )
  594:  		Add   *Var0  0000001E
  5A4:  		Call  SetGoalPos    ( .Actor:Self *Var0 *Var1 *Var2 )
  5C0:  		Call  JumpToGoal    ( .Actor:Self  15` .False .True .False )
  5E0:  		Thread
  5E8:  			Wait  5`
  5F4:  			Call  SetAnimation  ( .Actor:Self 00000001 004D0000 )
  60C:  		EndThread
  614:  		Add   *Var0  00000014
  624:  		Call  SetGoalPos    ( .Actor:Self *Var0 *Var1 *Var2 )
  640:  		Call  JumpToGoal    ( .Actor:Self  8` .False .True .False )
  660:  		Wait  8`
  66C:  		Call  UseBattleCamPreset    ( 00000002 )
  67C:  		Call  YieldTurn ( )
  688:  		Call  SetGoalToHome ( .Actor:Self )
  698:  		Call  SetActorSpeed ( .Actor:Self *Fixed[6.0] )
  6AC:  		Call  SetAnimation  ( .Actor:Self 00000001 004D0008 )
  6C4:  		Call  AddActorDecoration    ( .Actor:Self 00000001 00000000 .Decoration:Sweat )
  6E0:  		Call  RunToGoal     ( .Actor:Self  0` .False )
  6F8:  		Call  SetAnimation  ( .Actor:Self 00000001 004D0003 )
  710:  		Call  RemoveActorDecoration ( .Actor:Self 00000001 00000000 )
  728:  		Call  SetActorYaw   ( .Actor:Self  0` )
  73C:  		Call  EnableIdleScript      ( .Actor:Self 00000001 )
  750:  		Call  UseIdleAnimation      ( .Actor:Self .True )
  764:  		Return
  76C:  	EndCaseGroup
  774:  EndSwitch
  77C:  Call  SetActorYaw   ( .Actor:Self  180` )
  790:  Call  SetAnimation  ( .Actor:Self 00000001 004D0015 )
  7A8:  Call  GetActorPos   ( .Actor:Self *Var0 *Var1 *Var2 )
  7C4:  Sub   *Var1  00000018
  7D4:  Call  SetActorPos   ( .Actor:Self *Var0 *Var1 *Var2 )
  7F0:  Call  SetActorJumpGravity   ( .Actor:Self *Fixed[0.8] )
  804:  Call  SetGoalToTarget       ( .Actor:Self )
  814:  Call  GetGoalPos    ( .Actor:Self *Var3 *Var4 *Var5 )
  830:  Call  GetActorPos   ( .Actor:Self *Var0 *Var1 *Var2 )
  84C:  Set   *Var1  *Var4
  85C:  Call  SetGoalPos    ( .Actor:Self *Var0 *Var1 *Var2 )
  878:  Call  JumpToGoal    ( .Actor:Self  15` .False .True .False )
  898:  Call  ResetAllActorSounds   ( .Actor:Self )
  8A8:  Wait  2`
  8B4:  Call  EnemyDamageTarget     ( .Actor:Self *Var0 ~Flags:DamageType:0 0000FFFF 00000000 00000004 00000020 )
  8DC:  Switch  *Var0
  8E8:  	CaseOR  ==  .HitResult:Hit % 0
  8F4:  	CaseOR  ==  .HitResult:QuakeImmune % 2
  900:  		Call  UseBattleCamPreset    ( 00000002 )
  910:  		Call  GetActorPos   ( .Actor:Self *Var0 *Var1 *Var2 )
  92C:  		Add   *Var0  0000001E
  93C:  		Set   *Var1  00000000
  94C:  		Call  SetGoalPos    ( .Actor:Self *Var0 *Var1 *Var2 )
  968:  		Call  JumpToGoal    ( .Actor:Self  15` .False .True .False )
  988:  		Thread
  990:  			Wait  5`
  99C:  			Call  SetAnimation  ( .Actor:Self 00000001 004D0000 )
  9B4:  		EndThread
  9BC:  		Add   *Var0  00000014
  9CC:  		Call  SetGoalPos    ( .Actor:Self *Var0 *Var1 *Var2 )
  9E8:  		Call  JumpToGoal    ( .Actor:Self  8` .False .True .False )
  A08:  		Wait  8`
  A14:  		Call  YieldTurn ( )
  A20:  		SetConst  *Var0  00000001
  A30:  		SetConst  *Var1  004D0008
  A40:  		ExecWait  DoReturnHome
  A4C:  		Call  SetAnimation  ( .Actor:Self 00000001 004D0003 )
  A64:  	EndCaseGroup
  A6C:  EndSwitch
  A74:  Label  A
  A80:  Call  EnableIdleScript  ( .Actor:Self 00000001 )
  A94:  Call  UseIdleAnimation  ( .Actor:Self .True )
  AA8:  Return
  AB0:  End
}

#new:Script $Script_TakeTurn_8022DEFC
{
    0:  Call  UseIdleAnimation  ( .Actor:Self .False )
   14:  Call  EnableIdleScript  ( .Actor:Self 00000000 )
   28:  Call  GetActorVar       ( .Actor:Self 00000008 *Var0 )
   40:  If  *Var0  ==  00000002
   50:  	Call  GetActorVar   ( .Actor:Self 00000009 *Var0 )
   68:  	Sub   *Var0  00000001
   78:  	If  *Var0  >  00000000
   88:  		Call  SetActorVar   ( .Actor:Self 00000009 *Var0 )
   A0:  		Call  AddActorDecoration    ( .Actor:Self 00000001 00000000 .Decoration:Sweat )
   BC:  		Wait  30`
   C8:  		Call  RemoveActorDecoration ( .Actor:Self 00000001 00000000 )
   E0:  		Call  UseBattleCamPreset    ( 00000002 )
   F0:  	Else
   F8:  		Call  AddActorDecoration    ( .Actor:Self 00000001 00000000 .Decoration:Sweat )
  114:  		Wait  20`
  120:  		Call  RemoveActorDecoration ( .Actor:Self 00000001 00000000 )
  138:  		SetConst  *Var0  00000001
  148:  		SetConst  *Var1  004D0005
  158:  		SetConst  *Var2  004D0003
  168:  		ExecWait  8029BBB4
  174:  		Call  SetActorYaw       ( .Actor:Self  0` )
  188:  		Call  SetActorVar       ( .Actor:Self 00000008 00000001 )
  1A0:  		Call  SetTargetOffset   ( .Actor:Self 00000001  0`  24` )
  1BC:  		Call  8027D4C8  ( FFFFFF81 00000001 FFFFFFFF FFFFFFF7 )
  1D8:  		Call  SetDefenseTable   ( .Actor:Self 00000001 $DefenseTable_8022B940 )
  1F0:  		Call  SetIdleAnimations ( .Actor:Self 00000001 $IdleAnimations_8022BA60 )
  208:  		Call  BindIdle  ( .Actor:Self $Script_Idle_8022BD0C )
  21C:  		Call  SetActorFlagBits  ( .Actor:Self 00000400 .False )
  234:  		Call  SetPartEventBits  ( .Actor:Self 00000001 00000010 .True )
  250:  	EndIf
  258:  	Call  EnableIdleScript  ( .Actor:Self 00000001 )
  26C:  	Call  UseIdleAnimation  ( .Actor:Self .True )
  280:  	Return
  288:  EndIf
  290:  Call  SetTargetActor    ( .Actor:Self .Actor:Player )
  2A4:  Call  UseBattleCamPreset    ( 0000003F )
  2B4:  Call  BattleCamTargetActor  ( .Actor:Self )
  2C4:  Call  8024ECF8  ( FFFFFFFF 00000001 00000000 )
  2DC:  Call  SetAnimation      ( .Actor:Self 00000001 004D000B )
  2F4:  Wait  10`
  300:  Call  SetAnimation      ( .Actor:Self 00000001 004D000F )
  318:  Thread
  320:  	Call  GetActorPos   ( .Actor:Self *Var0 *Var1 *Var2 )
  33C:  	Call  PlayEffect    ( ~FX:SmokeImpact:Small *Var0 *Var1 *Var2 00000020 00000004 00000000 0000000A 00000000 00000000 00000000 00000000 00000000 )
  380:  	Wait  10`
  38C:  	Call  PlayEffect    ( ~FX:SmokeImpact:Small *Var0 *Var1 *Var2 00000020 00000004 00000000 0000000A 00000000 00000000 00000000 00000000 00000000 )
  3D0:  	Wait  5`
  3DC:  	Call  PlayEffect    ( ~FX:SmokeImpact:Small *Var0 *Var1 *Var2 00000020 00000004 00000000 0000000A 00000000 00000000 00000000 00000000 00000000 )
  420:  EndThread
  428:  Call  PlaySoundAtActor  ( .Actor:Self 00002021 )
  43C:  Call  SetAnimation      ( .Actor:Self 00000001 004D000A )
  454:  Wait  20`
  460:  Call  SetActorSounds    ( .Actor:Self .ActorSound:Walk 00000000 00000000 )
  47C:  Call  PlaySoundAtActor  ( .Actor:Self 000020D3 )
  490:  Call  EnemyTestTarget   ( .Actor:Self *Var0 ~Flags:DamageType:0 00000000 00000003 00000010 )
  4B4:  Switch  *Var0
  4C0:  	CaseOR  ==  .HitResult:Miss % 6
  4CC:  	CaseOR  ==  .HitResult:Lucky % 5
  4D8:  		Set   *VarA  *Var0
  4E8:  		Thread
  4F0:  			Loop
  4FC:  				Call  GetActorPos   ( .Actor:Player *Var0 *Var1 *Var2 )
  518:  				Add   *Var0  0000001E
  528:  				Call  GetActorPos   ( .Actor:Self *Var3 *Var4 *Var5 )
  544:  				If  *Var0  >  *Var3
  554:  					BreakLoop
  55C:  				EndIf
  564:  				Wait  1`
  570:  			EndLoop
  578:  			Call  UseBattleCamPreset    ( 00000001 )
  588:  			If  *VarA  ==  .HitResult:Lucky % 5
  598:  				Call  EnemyTestTarget   ( .Actor:Self *Var0 ~Flags:DamageType:TriggerLucky 00000000 00000000 00000000 )
  5BC:  			EndIf
  5C4:  			Wait  15`
  5D0:  			Call  UseBattleCamPreset    ( 00000002 )
  5E0:  		EndThread
  5E8:  		Call  SetGoalToTarget       ( .Actor:Self )
  5F8:  		Call  AddGoalPos    ( .Actor:Self  -150`  0`  0` )
  614:  		Call  SetActorSpeed ( .Actor:Self *Fixed[14.0] )
  628:  		Call  RunToGoal     ( .Actor:Self  0` .False )
  640:  		Wait  15`
  64C:  		Call  YieldTurn ( )
  658:  		Call  ResetAllActorSounds   ( .Actor:Self )
  668:  		Call  AddActorDecoration    ( .Actor:Self 00000001 00000000 .Decoration:Sweat )
  684:  		Call  SetGoalToHome ( .Actor:Self )
  694:  		Call  GetGoalPos    ( .Actor:Self *Var0 *Var1 *Var2 )
  6B0:  		Add   *Var0  000000C8
  6C0:  		Call  SetActorPos   ( .Actor:Self *Var0 *Var1 *Var2 )
  6DC:  		Call  SetActorSpeed ( .Actor:Self *Fixed[10.0] )
  6F0:  		Call  RunToGoal     ( .Actor:Self  0` .False )
  708:  		Wait  10`
  714:  		Call  SetAnimation  ( .Actor:Self 00000001 004D000C )
  72C:  		Wait  10`
  738:  		Call  RemoveActorDecoration ( .Actor:Self 00000001 00000000 )
  750:  		Call  EnableIdleScript      ( .Actor:Self 00000001 )
  764:  		Call  UseIdleAnimation      ( .Actor:Self .True )
  778:  		Return
  780:  	EndCaseGroup
  788:  EndSwitch
  790:  Call  SetGoalToTarget   ( .Actor:Self )
  7A0:  Call  SetActorSpeed     ( .Actor:Self *Fixed[14.0] )
  7B4:  Call  RunToGoal ( .Actor:Self  0` .False )
  7CC:  Wait  2`
  7D8:  Call  EnemyDamageTarget ( .Actor:Self *Var0 ~Flags:DamageType:0 0000FFFF 00000000 00000003 00000020 )
  800:  Switch  *Var0
  80C:  	CaseOR  ==  .HitResult:Hit % 0
  818:  	CaseOR  ==  .HitResult:QuakeImmune % 2
  824:  		Call  UseBattleCamPreset    ( 00000002 )
  834:  		Call  GetGoalPos    ( .Actor:Self *Var0 *Var1 *Var2 )
  850:  		Add   *Var0  00000028
  860:  		Set   *Var1  00000000
  870:  		Call  SetActorJumpGravity   ( .Actor:Self *Fixed[1.8] )
  884:  		Call  SetGoalPos    ( .Actor:Self *Var0 *Var1 *Var2 )
  8A0:  		Call  JumpToGoal    ( .Actor:Self  10` .False .True .False )
  8C0:  		Add   *Var0  0000001E
  8D0:  		Call  SetGoalPos    ( .Actor:Self *Var0 *Var1 *Var2 )
  8EC:  		Call  JumpToGoal    ( .Actor:Self  8` .False .True .False )
  90C:  		Add   *Var0  00000014
  91C:  		Call  SetGoalPos    ( .Actor:Self *Var0 *Var1 *Var2 )
  938:  		Call  JumpToGoal    ( .Actor:Self  6` .False .True .False )
  958:  		Call  SetAnimation  ( .Actor:Self 00000001 004D0003 )
  970:  		Wait  8`
  97C:  		Call  YieldTurn ( )
  988:  		Call  ResetAllActorSounds   ( .Actor:Self )
  998:  		SetConst  *Var0  00000001
  9A8:  		SetConst  *Var1  004D0008
  9B8:  		ExecWait  DoReturnHome
  9C4:  		Call  SetAnimation  ( .Actor:Self 00000001 004D0003 )
  9DC:  	EndCaseGroup
  9E4:  EndSwitch
  9EC:  Call  EnableIdleScript  ( .Actor:Self 00000001 )
  A00:  Call  UseIdleAnimation  ( .Actor:Self .True )
  A14:  Return
  A1C:  End
}

#new:IdleAnimations $IdleAnimations_8022E920
{
	.Status:Normal    004A0001
	.Status:Stone     004A0000
	.Status:Sleep     004A0010
	.Status:Poison    004A0001
	.Status:Stop      004A0000
	.Status:Static    004A0001
	.Status:Paralyze  004A0000
	.Status:Dizzy     004A0012
	.Status:Fear      004A0012
	.Status:End
}

#new:IdleAnimations $IdleAnimations_8022E96C
{
	.Status:Normal    004A0002
	.Status:Stone     004A0015
	.Status:Sleep     004A0011
	.Status:Poison    004A0002
	.Status:Stop      004A0015
	.Status:Static    004A0002
	.Status:Paralyze  004A0015
	.Status:Dizzy     004A0013
	.Status:Fear      004A0013
	.Status:End
}

#new:IdleAnimations $IdleAnimations_8022E9B8
{
	.Status:Normal    0049000B
	.Status:End
}

#new:DefenseTable $DefenseTable_8022E9C4
{
	.Element:Normal 00000003
	.Element:End
}

#new:DefenseTable $DefenseTable_8022E9D0
{
	.Element:Normal 00000000
	.Element:End
}

#new:StatusTable $StatusTable_8022E9DC
{
	.Status:Normal      0`
	.Status:Default     0`
	.Status:Sleep      60`
	.Status:Poison     50`
	.Status:Frozen      0`
	.Status:Dizzy      75`
	.Status:Fear        0`
	.Status:Static     50`
	.Status:Paralyze   75`
	.Status:Shrink     75`
	.Status:Stop       90`
	.Status:DefaultTurnMod    0`
	.Status:SleepTurnMod      0`
	.Status:PoisonTurnMod     0`
	.Status:FrozenTurnMod     0`
	.Status:DizzyTurnMod      0`
	.Status:FearTurnMod       0`
	.Status:StaticTurnMod     0`
	.Status:ParalyzeTurnMod   0`
	.Status:ShrinkTurnMod     0`
	.Status:StopTurnMod       0`
	.Status:End
}

#new:PartsTable $PartsTable_8022EA88
{
	00800000 01000000 001400FF $IdleAnimations_8022E920 $DefenseTable_8022E9C4 00201000 00000000 00FC0000 00000000
	00020001 02000000 000000FF $IdleAnimations_8022E9B8 $DefenseTable_8022E9C4 00000000 00000000 00000000 00000000
}

#new:Actor $Spiny
{
	% stats
	[Index]        2Fb
	[Level]        19`b
	[MaxHP]         5`b
	[Coins]         1`b
	[Flags]       00000000
	[StatusTable] $StatusTable_8022E9DC
	% ai
	[PartsCount]    2`s
	[PartsTable]  $PartsTable_8022EA88
	[Script]      $Script_Init_8022EAF8
	% move effectiveness
	[Escape]       60`b
	[Item]         60`b
	[AirLift]      75`b
	[Hurricane]    75`b % Bow's "Spook" as well
	[UpAndAway]    95`b
	[PowerBounce]  90`b
	[SpinSmash]     0`b % weight (0-4)
	% ui positions
	[Size]         24`b  24`b % width height
	[HealthBar]     0`b   0`b % dx dy
	[StatusTurn]  -10`b  20`b % dx dy
	[StatusIcon]   10`b  20`b % dx dy
}

#new:Script $Script_Init_8022EAF8
{
    0:  Call  BindIdle      ( .Actor:Self $Script_Idle_8022EB74 )
   14:  Call  BindTakeTurn  ( .Actor:Self $Script_TakeTurn_8022F810 )
   28:  Call  BindHandleEvent   ( .Actor:Self $Script_HandleEvent_8022ED44 )
   3C:  Call  SetActorVar   ( .Actor:Self 00000000 00000000 )
   54:  Call  SetActorVar   ( .Actor:Self 00000001 00000000 )
   6C:  Return
   74:  End
}

#new:Script $Script_Idle_8022EB74
{
    0:  Return
    8:  End
}

#new:Script $Script_8022EB84
{
    0:  Call  SetAnimation  ( .Actor:Self 00000002 0049000C )
   18:  Call  SetPartFlagBits   ( .Actor:Self 00000001 00000001 .True )
   34:  Call  SetPartFlagBits   ( .Actor:Self 00000002 00000001 .False )
   50:  Call  SetActorYaw   ( .Actor:Self  180` )
   64:  Call  SetGoalToHome ( .Actor:Self )
   74:  Call  RunToGoal     ( .Actor:Self  0` .False )
   8C:  Call  SetActorYaw   ( .Actor:Self  0` )
   A0:  Call  SetPartFlagBits   ( .Actor:Self 00000001 00000001 .False )
   BC:  Call  SetPartFlagBits   ( .Actor:Self 00000002 00000001 .True )
   D8:  Call  SetAnimation  ( .Actor:Self 00000001 004A001A )
   F0:  Wait  8`
   FC:  Call  SetAnimation  ( .Actor:Self 00000001 004A0001 )
  114:  Return
  11C:  End
}

#new:Script $Script_8022ECA8
{
    0:  Call  GetActorVar   ( .Actor:Self 00000000 *Var3 )
   18:  If  *Var3  ==  00000001
   28:  	Set   *Var1  *Var2
   38:  EndIf
   40:  Return
   48:  End
}

#new:IntTable $IntTable_8022ECF8
{
	00000007 0000000D 00000011 00000015 00000017 00000018 00000017 00000015
	00000011 0000000D 00000007 00000000 00000004 00000007 00000006 00000004
	00000000 00000002 00000000
}

#new:Script $Script_HandleEvent_8022ED44
{
    0:  Call  UseIdleAnimation  ( .Actor:Self .False )
   14:  Call  EnableIdleScript  ( .Actor:Self 00000000 )
   28:  Call  GetLastEvent      ( .Actor:Self *Var0 )
   3C:  Switch  *Var0
   48:  	CaseOR  ==  .Event:HitCombo % 9
   54:  	CaseOR  ==  .Event:Hit % A
   60:  		SetConst  *Var0  00000001
   70:  		SetConst  *Var1  004A0009
   80:  		SetConst  *Var2  004A000A
   90:  		ExecWait  $Script_8022ECA8
   9C:  		ExecWait  DoNormalHit
   A8:  	EndCaseGroup
   B0:  	Case  ==  .Event:BurnHit % E
   BC:  		Call  GetActorVar   ( .Actor:Self 00000000 *Var0 )
   D4:  		If  *Var0  !=  00000001
   E4:  			SetConst  *Var0  00000001
   F4:  			SetConst  *Var1  004A000B
  104:  			SetConst  *Var2  004A000C
  114:  			ExecWait  DoBurnHit
  120:  		Else
  128:  			SetConst  *Var0  00000001
  138:  			SetConst  *Var1  004A000D
  148:  			SetConst  *Var2  004A000E
  158:  			ExecWait  DoBurnHit
  164:  		EndIf
  16C:  	Case  ==  .Event:BurnDeath % 24
  178:  		Call  GetActorVar   ( .Actor:Self 00000000 *Var0 )
  190:  		If  *Var0  !=  00000001
  1A0:  			SetConst  *Var0  00000001
  1B0:  			SetConst  *Var1  004A000B
  1C0:  			SetConst  *Var2  004A000C
  1D0:  			ExecWait  DoBurnHit
  1DC:  			SetConst  *Var0  00000001
  1EC:  			SetConst  *Var1  004A000C
  1FC:  			ExecWait  DoDeath
  208:  		Else
  210:  			SetConst  *Var0  00000001
  220:  			SetConst  *Var1  004A000D
  230:  			SetConst  *Var2  004A000E
  240:  			ExecWait  DoBurnHit
  24C:  			SetConst  *Var0  00000001
  25C:  			SetConst  *Var1  004A000E
  26C:  			ExecWait  DoDeath
  278:  		EndIf
  280:  		Return
  288:  	Case  ==  .Event:SpinSmashHit % B
  294:  		SetConst  *Var0  00000001
  2A4:  		SetConst  *Var1  004A0009
  2B4:  		SetConst  *Var2  004A000A
  2C4:  		ExecWait  $Script_8022ECA8
  2D0:  		ExecWait  DoSpinSmashHit
  2DC:  	Case  ==  .Event:SpinSmashDeath % 21
  2E8:  		SetConst  *Var0  00000001
  2F8:  		SetConst  *Var1  004A0009
  308:  		SetConst  *Var2  004A000A
  318:  		ExecWait  $Script_8022ECA8
  324:  		ExecWait  DoSpinSmashHit
  330:  		SetConst  *Var0  00000001
  340:  		SetConst  *Var1  004A0009
  350:  		SetConst  *Var2  004A000A
  360:  		ExecWait  $Script_8022ECA8
  36C:  		ExecWait  DoDeath
  378:  		Return
  380:  	Case  ==  .Event:FlipTrigger % D
  38C:  		Call  GetActorVar   ( .Actor:Self 00000000 *Var0 )
  3A4:  		If  *Var0  ==  00000001
  3B4:  			Call  SetAnimation  ( .Actor:Self 00000001 004A000A )
  3CC:  		Else
  3D4:  			Call  SetAnimation  ( .Actor:Self 00000001 004A0016 )
  3EC:  		EndIf
  3F4:  		Call  SetActorVar       ( .Actor:Self 00000000 00000001 )
  40C:  		Call  SetActorVar       ( .Actor:Self 00000001 00000001 )
  424:  		Call  SetDefenseTable   ( .Actor:Self 00000001 $DefenseTable_8022E9D0 )
  43C:  		Call  SetIdleAnimations ( .Actor:Self 00000001 $IdleAnimations_8022E96C )
  454:  		Call  SetPartEventBits  ( .Actor:Self 00000001 00200000 .False )
  470:  		Call  SetActorFlagBits  ( .Actor:Self 00000400 .True )
  488:  		UseIntBuffer  $IntTable_8022ECF8
  494:  		Loop  00000013
  4A0:  			Get1Int  *Var0
  4AC:  			Call  SetActorDispOffset    ( .Actor:Self 00000000 *Var0 00000000 )
  4C8:  			Wait  1`
  4D4:  		EndLoop
  4DC:  		Wait  20`
  4E8:  	CaseOR  ==  00000017 % 17
  4F4:  	CaseOR  ==  .Event:Immune % 19
  500:  	CaseOR  ==  .Event:AirLiftFailed % 1F
  50C:  		Call  GetActorVar   ( .Actor:Self 00000000 *Var0 )
  524:  		Switch  *Var0
  530:  			Case  ==  00000000
  53C:  				SetConst  *Var0  00000001
  54C:  				SetConst  *Var1  004A0006
  55C:  				ExecWait  DoImmune
  568:  				Call  SetAnimation  ( .Actor:Self 00000001 004A0007 )
  580:  				Wait  10`
  58C:  			Case  ==  00000001
  598:  				SetConst  *Var0  00000001
  5A8:  				SetConst  *Var1  004A0002
  5B8:  				ExecWait  DoImmune
  5C4:  		EndSwitch
  5CC:  	EndCaseGroup
  5D4:  	Case  ==  .Event:SpikeTaunt % 1B
  5E0:  		Wait  10`
  5EC:  		Call  GetActorPos       ( .Actor:Self *Var0 *Var1 *Var2 )
  608:  		Call  GetStatusFlags    ( .Actor:Self *Var3 )
  61C:  		If  *Var0  &  00080000
  62C:  			Call  GetActorVar   ( .Actor:Self 00000000 *VarA )
  644:  			If  *VarA  ==  00000000
  654:  				Add   *Var0  00000000
  664:  			EndIf
  66C:  			Add   *Var1  00000008
  67C:  		Else
  684:  			Call  GetActorVar   ( .Actor:Self 00000000 *VarA )
  69C:  			If  *VarA  ==  00000000
  6AC:  				Add   *Var0  FFFFFFFF
  6BC:  			EndIf
  6C4:  			Add   *Var1  00000016
  6D4:  		EndIf
  6DC:  		Call  PlayEffect    ( ~FX:LensFlare:Rotating *Var0 *Var1 *Var2 00000014 00000000 00000000 00000000 00000000 00000000 00000000 00000000 00000000 )
  720:  		Wait  20`
  72C:  	Case  ==  .Event:Death % 20
  738:  		SetConst  *Var0  00000001
  748:  		SetConst  *Var1  004A0009
  758:  		SetConst  *Var2  004A000A
  768:  		ExecWait  $Script_8022ECA8
  774:  		ExecWait  DoNormalHit
  780:  		Wait  10`
  78C:  		SetConst  *Var0  00000001
  79C:  		SetConst  *Var1  004A0009
  7AC:  		SetConst  *Var2  004A000A
  7BC:  		ExecWait  $Script_8022ECA8
  7C8:  		ExecWait  DoDeath
  7D4:  		Return
  7DC:  	Case  ==  .Event:RecoverStatus % 31
  7E8:  		Call  GetActorVar   ( .Actor:Self 00000000 *Var0 )
  800:  		Switch  *Var0
  80C:  			Case  ==  00000000
  818:  				SetConst  *Var0  00000001
  828:  				SetConst  *Var1  004A0001
  838:  				ExecWait  DoRecover
  844:  			Case  ==  00000001
  850:  				SetConst  *Var0  00000001
  860:  				SetConst  *Var1  004A0002
  870:  				ExecWait  DoImmune
  87C:  		EndSwitch
  884:  	Case  ==  .Event:ScareAway % 39
  890:  		Call  GetActorVar   ( .Actor:Self 00000000 *Var0 )
  8A8:  		Switch  *Var0
  8B4:  			Case  ==  00000000
  8C0:  				SetConst  *Var0  00000001
  8D0:  				SetConst  *Var1  004A0004
  8E0:  				SetConst  *Var2  004A0009
  8F0:  				ExecWait  DoScareAway
  8FC:  				Return
  904:  			Case  ==  00000001
  910:  				SetConst  *Var0  00000001
  920:  				SetConst  *Var1  004A0002
  930:  				ExecWait  DoImmune
  93C:  		EndSwitch
  944:  	Case  ==  .Event:BeginAirLift % 3A
  950:  		Call  GetActorVar   ( .Actor:Self 00000000 *Var0 )
  968:  		Switch  *Var0
  974:  			Case  ==  00000000
  980:  				SetConst  *Var0  00000001
  990:  				SetConst  *Var1  004A0004
  9A0:  			Case  ==  00000001
  9AC:  				SetConst  *Var0  00000001
  9BC:  				SetConst  *Var1  004A0002
  9CC:  		EndSwitch
  9D4:  		ExecWait  DoAirLift
  9E0:  	Case  ==  .Event:BlowAway % 16
  9EC:  		Call  GetActorVar   ( .Actor:Self 00000000 *Var0 )
  A04:  		Switch  *Var0
  A10:  			Case  ==  00000000
  A1C:  				SetConst  *Var0  00000001
  A2C:  				SetConst  *Var1  004A0004
  A3C:  			Case  ==  00000001
  A48:  				SetConst  *Var0  00000001
  A58:  				SetConst  *Var1  004A0002
  A68:  		EndSwitch
  A70:  		ExecWait  DoBlowAway
  A7C:  		Return
  A84:  	Default
  A8C:  EndSwitch
  A94:  Call  EnableIdleScript  ( .Actor:Self 00000001 )
  AA8:  Call  UseIdleAnimation  ( .Actor:Self .True )
  ABC:  Return
  AC4:  End
}

#new:Script $Script_TakeTurn_8022F810
{
    0:  Call  UseIdleAnimation  ( .Actor:Self .False )
   14:  Call  EnableIdleScript  ( .Actor:Self 00000000 )
   28:  Call  GetActorVar       ( .Actor:Self 00000000 *Var0 )
   40:  If  *Var0  ==  00000001
   50:  	Call  GetActorVar   ( .Actor:Self 00000001 *Var0 )
   68:  	Sub   *Var0  00000001
   78:  	Call  SetActorVar   ( .Actor:Self 00000001 *Var0 )
   90:  	If  *Var0  >  00000000
   A0:  		Call  SetAnimation  ( .Actor:Self 00000001 004A0014 )
   B8:  		Call  AddActorDecoration    ( .Actor:Self 00000001 00000000 .Decoration:Sweat )
   D4:  		Wait  30`
   E0:  		Call  RemoveActorDecoration ( .Actor:Self 00000001 00000000 )
   F8:  	Else
  100:  		Call  SetAnimation      ( .Actor:Self 00000001 004A0014 )
  118:  		Call  AddActorDecoration    ( .Actor:Self 00000001 00000000 .Decoration:Sweat )
  134:  		Wait  20`
  140:  		Call  RemoveActorDecoration ( .Actor:Self 00000001 00000000 )
  158:  		SetConst  *Var0  00000001
  168:  		SetConst  *Var1  004A0002
  178:  		SetConst  *Var2  004A0001
  188:  		ExecWait  8029BBB4
  194:  		Call  SetActorVar       ( .Actor:Self 00000000 00000000 )
  1AC:  		Call  SetDefenseTable   ( .Actor:Self 00000001 $DefenseTable_8022E9C4 )
  1C4:  		Call  SetIdleAnimations ( .Actor:Self 00000001 $IdleAnimations_8022E920 )
  1DC:  		Call  SetPartEventBits  ( .Actor:Self 00000001 00200000 .True )
  1F8:  		Call  SetActorFlagBits  ( .Actor:Self 00000400 .False )
  210:  	EndIf
  218:  	Call  EnableIdleScript  ( .Actor:Self 00000001 )
  22C:  	Call  UseIdleAnimation  ( .Actor:Self .True )
  240:  	Return
  248:  EndIf
  250:  Call  UseBattleCamPreset    ( 0000003F )
  260:  Call  BattleCamTargetActor  ( .Actor:Self )
  270:  Call  8024ECF8  ( FFFFFFFF 00000001 00000000 )
  288:  Call  SetTargetActor        ( .Actor:Self .Actor:Player )
  29C:  Call  GetActorVar   ( .Actor:Self 00000000 *Var0 )
  2B4:  If  *Var0  ==  00000000
  2C4:  	Wait  10`
  2D0:  	Call  SetAnimation  ( .Actor:Self 00000001 004A0019 )
  2E8:  	Wait  8`
  2F4:  	Call  SetAnimation  ( .Actor:Self 00000001 004A0018 )
  30C:  	Wait  10`
  318:  Else
  320:  	Wait  20`
  32C:  EndIf
  334:  Thread
  33C:  	Call  GetActorPos   ( .Actor:Self *Var0 *Var1 *Var2 )
  358:  	Call  PlayEffect    ( ~FX:SmokeImpact:Small *Var0 *Var1 *Var2 00000020 00000004 00000000 0000000A 00000000 00000000 00000000 00000000 00000000 )
  39C:  	Wait  10`
  3A8:  	Call  PlayEffect    ( ~FX:SmokeImpact:Small *Var0 *Var1 *Var2 00000020 00000004 00000000 0000000A 00000000 00000000 00000000 00000000 00000000 )
  3EC:  	Wait  5`
  3F8:  	Call  PlayEffect    ( ~FX:SmokeImpact:Small *Var0 *Var1 *Var2 00000020 00000004 00000000 0000000A 00000000 00000000 00000000 00000000 00000000 )
  43C:  EndThread
  444:  Call  EnableActorBlur   ( .Actor:Self 00000001 )
  458:  Call  SetPartFlagBits   ( .Actor:Self 00000001 00000001 .True )
  474:  Call  SetPartFlagBits   ( .Actor:Self 00000002 00000001 .False )
  490:  Call  SetAnimation      ( .Actor:Self 00000002 0049000C )
  4A8:  Wait  10`
  4B4:  Call  PlaySoundAtPart   ( .Actor:Self 00000002 000002C7 )
  4CC:  Call  SetActorSounds    ( .Actor:Self .ActorSound:Walk 00000000 00000000 )
  4E8:  Call  SetPartSounds     ( .Actor:Self 00000002 .ActorSound:Walk 00000000 00000000 )
  508:  Call  EnemyTestTarget   ( .Actor:Self *VarA ~Flags:DamageType:0 00000000 00000004 00000010 )
  52C:  Switch  *VarA
  538:  	CaseOR  ==  .HitResult:Miss % 6
  544:  	CaseOR  ==  .HitResult:Lucky % 5
  550:  		Thread
  558:  			Loop
  564:  				Call  GetActorPos   ( .Actor:Player *Var0 *Var1 *Var2 )
  580:  				Add   *Var0  0000001E
  590:  				Call  GetActorPos   ( .Actor:Self *Var3 *Var4 *Var5 )
  5AC:  				If  *Var0  >  *Var3
  5BC:  					BreakLoop
  5C4:  				EndIf
  5CC:  				Wait  1`
  5D8:  			EndLoop
  5E0:  			Call  UseBattleCamPreset    ( 00000001 )
  5F0:  			If  *VarA  ==  .HitResult:Lucky % 5
  600:  				Call  EnemyTestTarget   ( .Actor:Self *Var0 ~Flags:DamageType:TriggerLucky 00000000 00000000 00000000 )
  624:  			EndIf
  62C:  			Wait  15`
  638:  			Call  UseBattleCamPreset    ( 00000002 )
  648:  		EndThread
  650:  		Call  SetGoalToTarget   ( .Actor:Self )
  660:  		Call  AddGoalPos        ( .Actor:Self  -200`  0`  0` )
  67C:  		Call  SetActorSpeed     ( .Actor:Self *Fixed[16.0] )
  690:  		Call  RunToGoal ( .Actor:Self  0` .False )
  6A8:  		Call  ResetAllActorSounds   ( .Actor:Self )
  6B8:  		Call  EnableActorBlur   ( .Actor:Self 00000000 )
  6CC:  		Call  UseBattleCamPreset    ( 00000002 )
  6DC:  		Call  YieldTurn ( )
  6E8:  		Call  AddActorDecoration    ( .Actor:Self 00000001 00000000 .Decoration:Sweat )
  704:  		Call  SetActorSpeed     ( .Actor:Self *Fixed[6.0] )
  718:  		ExecWait  $Script_8022EB84
  724:  		Call  RemoveActorDecoration ( .Actor:Self 00000001 00000000 )
  73C:  		Return
  744:  	EndCaseGroup
  74C:  EndSwitch
  754:  Call  SetGoalToTarget   ( .Actor:Self )
  764:  Call  SetActorSpeed     ( .Actor:Self *Fixed[16.0] )
  778:  Call  RunToGoal ( .Actor:Self  0` .False )
  790:  Call  ResetAllActorSounds   ( .Actor:Self )
  7A0:  Wait  2`
  7AC:  Call  EnemyDamageTarget ( .Actor:Self *Var0 ~Flags:DamageType:0 0000FFFF 00000000 00000004 00000020 )
  7D4:  Switch  *Var0
  7E0:  	CaseOR  ==  .HitResult:Hit % 0
  7EC:  	CaseOR  ==  .HitResult:QuakeImmune % 2
  7F8:  		Call  UseBattleCamPreset    ( 00000002 )
  808:  		Call  SetAnimation  ( .Actor:Self 00000002 0049000B )
  820:  		Call  GetGoalPos    ( .Actor:Self *Var0 *Var1 *Var2 )
  83C:  		Add   *Var0  00000014
  84C:  		Set   *Var1  00000000
  85C:  		Call  SetActorJumpGravity   ( .Actor:Self *Fixed[1.0] )
  870:  		Call  SetGoalPos    ( .Actor:Self *Var0 *Var1 *Var2 )
  88C:  		Call  JumpToGoal    ( .Actor:Self  20` .False .True .False )
  8AC:  		Add   *Var0  0000000A
  8BC:  		Call  SetGoalPos    ( .Actor:Self *Var0 *Var1 *Var2 )
  8D8:  		Call  JumpToGoal    ( .Actor:Self  10` .False .True .False )
  8F8:  		Add   *Var0  0000000A
  908:  		Call  SetGoalPos    ( .Actor:Self *Var0 *Var1 *Var2 )
  924:  		Call  JumpToGoal    ( .Actor:Self  5` .False .True .False )
  944:  		Call  EnableActorBlur       ( .Actor:Self 00000000 )
  958:  		Call  YieldTurn ( )
  964:  		Call  SetActorSpeed ( .Actor:Self *Fixed[6.0] )
  978:  		ExecWait  $Script_8022EB84
  984:  	EndCaseGroup
  98C:  EndSwitch
  994:  Call  EnableActorBlur   ( .Actor:Self 00000000 )
  9A8:  Call  EnableIdleScript  ( .Actor:Self 00000001 )
  9BC:  Call  UseIdleAnimation  ( .Actor:Self .True )
  9D0:  Return
  9D8:  End
}

#new:Script $Script_802301F0
{
    0:  Set   *VarA  *Var1
   10:  Set   *VarB  *Var2
   20:  Set   *VarC  *Var3
   30:  Call  SetTexPanner  ( *Var0 *Var1 )
   44:  Set   *Var0  00000000
   54:  Set   *Var1  00000000
   64:  Loop
   70:  	Call  SetTexPanOffset   ( *VarA 00000000 *Var0 *Var1 )
   8C:  	Add   *Var0  *VarB
   9C:  	Add   *Var1  *VarC
   AC:  	Wait  1`
   B8:  EndLoop
   C0:  Return
   C8:  End
}

% Origin: HEURISTIC
#new:Script $Script_802302C0
{
    0:  Set   *VarA  *Var1
   10:  Set   *VarB  *Var2
   20:  Set   *VarC  *Var3
   30:  Call  SetTexPanner  ( *Var0 *Var1 )
   44:  Set   *Var0  00000000
   54:  Set   *Var1  00000000
   64:  Loop
   70:  	Call  SetTexPanOffset   ( *VarA 00000000 *Var0 00000000 )
   8C:  	Call  SetTexPanOffset   ( *VarA 00000001 *Var1 00000000 )
   A8:  	Add   *Var0  *VarB
   B8:  	Add   *Var1  *VarC
   C8:  	Wait  1`
   D4:  EndLoop
   DC:  Return
   E4:  End
}

% Origin: HEURISTIC
#new:Script $Script_802303AC
{
    0:  Set   *VarA  *Var1
   10:  Set   *VarB  *Var2
   20:  Set   *VarC  *Var3
   30:  Call  SetTexPanner  ( *Var0 *Var1 )
   44:  Set   *Var0  00000000
   54:  Set   *Var1  00000000
   64:  Loop
   70:  	Call  SetTexPanOffset   ( *VarA 00000000 00000000 *Var0 )
   8C:  	Call  SetTexPanOffset   ( *VarA 00000001 00000000 *Var1 )
   A8:  	Add   *Var0  *VarB
   B8:  	Add   *Var1  *VarC
   C8:  	Wait  1`
   D4:  EndLoop
   DC:  Return
   E4:  End
}

#new:Script $Script_80230498
{
    0:  Set   *Var1  *Array[5]
   10:  Add   *Var1  00000001
   20:  Set   *Var2  *Array[0]
   30:  Set   *Var3  *Array[1]
   40:  Set   *Var4  *Array[5]
   50:  Add   *Var4  00000002
   60:  Set   *Var5  *Array[0]
   70:  Set   *Var6  *Array[1]
   80:  Set   *Var7  *Array[5]
   90:  Add   *Var7  00000003
   A0:  Set   *Var8  *Array[0]
   B0:  Set   *Var9  *Array[1]
   C0:  Set   *VarA  *Array[5]
   D0:  Add   *VarA  00000004
   E0:  Set   *VarB  *Array[0]
   F0:  Set   *VarC  *Array[1]
  100:  Call  EnableModel   ( *Var1 .True )
  114:  Call  EnableModel   ( *Var4 .True )
  128:  Call  EnableModel   ( *Var7 .True )
  13C:  Call  EnableModel   ( *VarA .True )
  150:  Loop  00000005
  15C:  	Add   *Var0  00000001
  16C:  	Add   *Var2  00000001
  17C:  	Add   *Var3  00000001
  18C:  	Call  TranslateModel    ( *Var1 *Var2 *Var0 *Var3 )
  1A8:  	Call  ScaleModel        ( *Var1 *Fixed[0.5] *Fixed[0.5] *Fixed[0.5] )
  1C4:  	Add   *Var5  FFFFFFFF
  1D4:  	Add   *Var6  00000001
  1E4:  	Call  TranslateModel    ( *Var4 *Var5 *Var0 *Var6 )
  200:  	Call  ScaleModel        ( *Var4 *Fixed[0.5] *Fixed[0.5] *Fixed[0.5] )
  21C:  	Add   *Var8  00000001
  22C:  	Add   *Var9  FFFFFFFF
  23C:  	Call  TranslateModel    ( *Var7 *Var8 *Var0 *Var9 )
  258:  	Call  ScaleModel        ( *Var7 *Fixed[0.5] *Fixed[0.5] *Fixed[0.5] )
  274:  	Add   *VarB  FFFFFFFF
  284:  	Add   *VarC  FFFFFFFF
  294:  	Call  TranslateModel    ( *VarA *VarB *Var0 *VarC )
  2B0:  	Call  ScaleModel        ( *VarA *Fixed[0.5] *Fixed[0.5] *Fixed[0.5] )
  2CC:  	Wait  1`
  2D8:  EndLoop
  2E0:  Loop  00000005
  2EC:  	Add   *Var0  FFFFFFFF
  2FC:  	Add   *Var2  00000001
  30C:  	Add   *Var3  00000001
  31C:  	Call  TranslateModel    ( *Var1 *Var2 *Var0 *Var3 )
  338:  	Call  ScaleModel        ( *Var1 *Fixed[0.5] *Fixed[0.5] *Fixed[0.5] )
  354:  	Add   *Var5  FFFFFFFF
  364:  	Add   *Var6  00000001
  374:  	Call  TranslateModel    ( *Var4 *Var5 *Var0 *Var6 )
  390:  	Call  ScaleModel        ( *Var4 *Fixed[0.5] *Fixed[0.5] *Fixed[0.5] )
  3AC:  	Add   *Var8  00000001
  3BC:  	Add   *Var9  FFFFFFFF
  3CC:  	Call  TranslateModel    ( *Var7 *Var8 *Var0 *Var9 )
  3E8:  	Call  ScaleModel        ( *Var7 *Fixed[0.5] *Fixed[0.5] *Fixed[0.5] )
  404:  	Add   *VarB  FFFFFFFF
  414:  	Add   *VarC  FFFFFFFF
  424:  	Call  TranslateModel    ( *VarA *VarB *Var0 *VarC )
  440:  	Call  ScaleModel        ( *VarA *Fixed[0.5] *Fixed[0.5] *Fixed[0.5] )
  45C:  	Wait  1`
  468:  EndLoop
  470:  Call  EnableModel   ( *Var1 .False )
  484:  Call  EnableModel   ( *Var4 .False )
  498:  Call  EnableModel   ( *Var7 .False )
  4AC:  Call  EnableModel   ( *VarA .False )
  4C0:  Return
  4C8:  End
}

#new:Script $Script_80230968
{
    0:  SetGroup  00000000
    C:  UseArray  *VarA
   18:  Set   *Var5  *Array[5]
   28:  Loop  00000005
   34:  	Call  CloneModel        ( ~Model:tik_bt01:o351 *Var5 )
   48:  	Call  TranslateModel    ( *Var5 *Array[0] *Array[2] *Array[1] )
   64:  	Add   *Var5  00000001
   74:  EndLoop
   7C:  Label  0
   88:  Call  RandInt   ( 000000C8 *Var0 )
   9C:  Add   *Var0  00000032
   AC:  Wait  *Var0
   B8:  Call  EnableModel       ( *Array[5] .True )
   CC:  Call  MakeLerp  ( *Array[2] *Array[3] *Array[4] .Easing:QuadraticIn )
   E8:  Label  1
   F4:  Call  UpdateLerp ( )
  100:  Call  TranslateModel    ( *Array[5] *Array[0] *Var0 *Array[1] )
  11C:  Wait  1`
  128:  Call  $Function_80218B80    ( *Array[5] )
  138:  If  *Var2  ==  00000001
  148:  	Goto  A
  154:  EndIf
  15C:  If  *Var1  ==  00000001
  16C:  	Goto  1
  178:  EndIf
  180:  Label  A
  18C:  Call  EnableModel   ( *Array[5] .False )
  1A0:  ExecWait  $Script_80230498
  1AC:  Goto  0
  1B8:  Return
  1C0:  End
}

#new:Script $Script_80230B30
{
    0:  Set   *VarF  00002710
   10:  UseIntBuffer  *Var0
   1C:  Get1Int  *Var1
   28:  Loop  *Var1
   34:  	Get4Int  *Var2 *Var3 *Var4 *Var5
   4C:  	Get3Int  *Var6 *Var7 *Var8
   60:  	Get1Int  *Var9
   6C:  	Loop  *Var9
   78:  		NewArray  00000006 *VarA
   88:  		UseArray  *VarA
   94:  		Call  RandInt   ( *Var4 *VarB )
   A8:  		Call  RandInt   ( *Var5 *VarC )
   BC:  		Set   *VarD  *Var2
   CC:  		Set   *VarE  *Var3
   DC:  		Add   *VarD  *VarB
   EC:  		Add   *VarE  *VarC
   FC:  		Set   *Array[0]  *VarD
  10C:  		Set   *Array[1]  *VarE
  11C:  		Set   *Array[2]  *Var6
  12C:  		Set   *Array[3]  *Var7
  13C:  		Set   *Array[4]  *Var8
  14C:  		Set   *Array[5]  *VarF
  15C:  		ChildThread
  164:  			Exec  $Script_80230968
  170:  		EndChildThread
  178:  		Add   *VarF  00000005
  188:  	EndLoop
  190:  EndLoop
  198:  Call  EnableModel   ( ~Model:tik_bt01:o351 .False )
  1AC:  Return
  1B4:  End
}

#new:Unknown $???_80230CEC
{
	00000001 FFFFFF9C FFFFFFCE 000000C8 00000064 000000C8 00000000 0000003C
	00000004
}

#new:Script $Script_BeforeBattle_80230D10
{
    0:  Call  SetSpriteShading  ( FFFFFFFF )
   10:  Call  SetCamBGColor     ( .Cam:Battle  0`  0`  0` )
   2C:  Set   *Var0  0000000D
   3C:  Set   *Var1  00000000
   4C:  Set   *Var2  00000000
   5C:  Set   *Var3  FFFFFE0C
   6C:  Exec  $Script_802301F0
   78:  Set   *Var0  $???_80230CEC
   88:  Exec  $Script_80230B30
   94:  Return
   9C:  End
}

#new:Script $Script_AfterBattle_80230DB4
{
    0:  Return
    8:  End
}

#new:Stage $Stage_80230DC4
{
	$ASCII_80234310  % tik_tex
	$ASCII_80234300  % tik_bt01_shape
	$ASCII_802342F0  % tik_bt01_hit
	$Script_BeforeBattle_80230D10
	$Script_AfterBattle_80230DB4
	00000000
	00000000
	00000000
	00000000
	00000000
}

PADDING: 80230DEC to 80230DF0 (0060527C to 00605280)
00000000

#new:Script $Script_80230DF0
{
    0:  Set   *VarA  *Var1
   10:  Set   *VarB  *Var2
   20:  Set   *VarC  *Var3
   30:  Call  SetTexPanner  ( *Var0 *Var1 )
   44:  Set   *Var0  00000000
   54:  Set   *Var1  00000000
   64:  Loop
   70:  	Call  SetTexPanOffset   ( *VarA 00000000 *Var0 *Var1 )
   8C:  	Add   *Var0  *VarB
   9C:  	Add   *Var1  *VarC
   AC:  	Wait  1`
   B8:  EndLoop
   C0:  Return
   C8:  End
}

% Origin: HEURISTIC
#new:Script $Script_80230EC0
{
    0:  Set   *VarA  *Var1
   10:  Set   *VarB  *Var2
   20:  Set   *VarC  *Var3
   30:  Call  SetTexPanner  ( *Var0 *Var1 )
   44:  Set   *Var0  00000000
   54:  Set   *Var1  00000000
   64:  Loop
   70:  	Call  SetTexPanOffset   ( *VarA 00000000 *Var0 00000000 )
   8C:  	Call  SetTexPanOffset   ( *VarA 00000001 *Var1 00000000 )
   A8:  	Add   *Var0  *VarB
   B8:  	Add   *Var1  *VarC
   C8:  	Wait  1`
   D4:  EndLoop
   DC:  Return
   E4:  End
}

% Origin: HEURISTIC
#new:Script $Script_80230FAC
{
    0:  Set   *VarA  *Var1
   10:  Set   *VarB  *Var2
   20:  Set   *VarC  *Var3
   30:  Call  SetTexPanner  ( *Var0 *Var1 )
   44:  Set   *Var0  00000000
   54:  Set   *Var1  00000000
   64:  Loop
   70:  	Call  SetTexPanOffset   ( *VarA 00000000 00000000 *Var0 )
   8C:  	Call  SetTexPanOffset   ( *VarA 00000001 00000000 *Var1 )
   A8:  	Add   *Var0  *VarB
   B8:  	Add   *Var1  *VarC
   C8:  	Wait  1`
   D4:  EndLoop
   DC:  Return
   E4:  End
}

#new:Script $Script_80231098
{
    0:  Set   *Var1  *Array[5]
   10:  Add   *Var1  00000001
   20:  Set   *Var2  *Array[0]
   30:  Set   *Var3  *Array[1]
   40:  Set   *Var4  *Array[5]
   50:  Add   *Var4  00000002
   60:  Set   *Var5  *Array[0]
   70:  Set   *Var6  *Array[1]
   80:  Set   *Var7  *Array[5]
   90:  Add   *Var7  00000003
   A0:  Set   *Var8  *Array[0]
   B0:  Set   *Var9  *Array[1]
   C0:  Set   *VarA  *Array[5]
   D0:  Add   *VarA  00000004
   E0:  Set   *VarB  *Array[0]
   F0:  Set   *VarC  *Array[1]
  100:  Call  EnableModel   ( *Var1 .True )
  114:  Call  EnableModel   ( *Var4 .True )
  128:  Call  EnableModel   ( *Var7 .True )
  13C:  Call  EnableModel   ( *VarA .True )
  150:  Loop  00000005
  15C:  	Add   *Var0  00000001
  16C:  	Add   *Var2  00000001
  17C:  	Add   *Var3  00000001
  18C:  	Call  TranslateModel    ( *Var1 *Var2 *Var0 *Var3 )
  1A8:  	Call  ScaleModel        ( *Var1 *Fixed[0.5] *Fixed[0.5] *Fixed[0.5] )
  1C4:  	Add   *Var5  FFFFFFFF
  1D4:  	Add   *Var6  00000001
  1E4:  	Call  TranslateModel    ( *Var4 *Var5 *Var0 *Var6 )
  200:  	Call  ScaleModel        ( *Var4 *Fixed[0.5] *Fixed[0.5] *Fixed[0.5] )
  21C:  	Add   *Var8  00000001
  22C:  	Add   *Var9  FFFFFFFF
  23C:  	Call  TranslateModel    ( *Var7 *Var8 *Var0 *Var9 )
  258:  	Call  ScaleModel        ( *Var7 *Fixed[0.5] *Fixed[0.5] *Fixed[0.5] )
  274:  	Add   *VarB  FFFFFFFF
  284:  	Add   *VarC  FFFFFFFF
  294:  	Call  TranslateModel    ( *VarA *VarB *Var0 *VarC )
  2B0:  	Call  ScaleModel        ( *VarA *Fixed[0.5] *Fixed[0.5] *Fixed[0.5] )
  2CC:  	Wait  1`
  2D8:  EndLoop
  2E0:  Loop  00000005
  2EC:  	Add   *Var0  FFFFFFFF
  2FC:  	Add   *Var2  00000001
  30C:  	Add   *Var3  00000001
  31C:  	Call  TranslateModel    ( *Var1 *Var2 *Var0 *Var3 )
  338:  	Call  ScaleModel        ( *Var1 *Fixed[0.5] *Fixed[0.5] *Fixed[0.5] )
  354:  	Add   *Var5  FFFFFFFF
  364:  	Add   *Var6  00000001
  374:  	Call  TranslateModel    ( *Var4 *Var5 *Var0 *Var6 )
  390:  	Call  ScaleModel        ( *Var4 *Fixed[0.5] *Fixed[0.5] *Fixed[0.5] )
  3AC:  	Add   *Var8  00000001
  3BC:  	Add   *Var9  FFFFFFFF
  3CC:  	Call  TranslateModel    ( *Var7 *Var8 *Var0 *Var9 )
  3E8:  	Call  ScaleModel        ( *Var7 *Fixed[0.5] *Fixed[0.5] *Fixed[0.5] )
  404:  	Add   *VarB  FFFFFFFF
  414:  	Add   *VarC  FFFFFFFF
  424:  	Call  TranslateModel    ( *VarA *VarB *Var0 *VarC )
  440:  	Call  ScaleModel        ( *VarA *Fixed[0.5] *Fixed[0.5] *Fixed[0.5] )
  45C:  	Wait  1`
  468:  EndLoop
  470:  Call  EnableModel   ( *Var1 .False )
  484:  Call  EnableModel   ( *Var4 .False )
  498:  Call  EnableModel   ( *Var7 .False )
  4AC:  Call  EnableModel   ( *VarA .False )
  4C0:  Return
  4C8:  End
}

#new:Script $Script_80231568
{
    0:  SetGroup  00000000
    C:  UseArray  *VarA
   18:  Set   *Var5  *Array[5]
   28:  Loop  00000005
   34:  	Call  CloneModel        ( ~Model:tik_bt02:o354 *Var5 )
   48:  	Call  TranslateModel    ( *Var5 *Array[0] *Array[2] *Array[1] )
   64:  	Add   *Var5  00000001
   74:  EndLoop
   7C:  Label  0
   88:  Call  RandInt   ( 000000C8 *Var0 )
   9C:  Add   *Var0  00000032
   AC:  Wait  *Var0
   B8:  Call  EnableModel       ( *Array[5] .True )
   CC:  Call  MakeLerp  ( *Array[2] *Array[3] *Array[4] .Easing:QuadraticIn )
   E8:  Label  1
   F4:  Call  UpdateLerp ( )
  100:  Call  TranslateModel    ( *Array[5] *Array[0] *Var0 *Array[1] )
  11C:  Wait  1`
  128:  Call  $Function_80219020    ( *Array[5] )
  138:  If  *Var2  ==  00000001
  148:  	Goto  A
  154:  EndIf
  15C:  If  *Var1  ==  00000001
  16C:  	Goto  1
  178:  EndIf
  180:  Label  A
  18C:  Call  EnableModel   ( *Array[5] .False )
  1A0:  ExecWait  $Script_80231098
  1AC:  Goto  0
  1B8:  Return
  1C0:  End
}

#new:Script $Script_80231730
{
    0:  Set   *VarF  00002710
   10:  UseIntBuffer  *Var0
   1C:  Get1Int  *Var1
   28:  Loop  *Var1
   34:  	Get4Int  *Var2 *Var3 *Var4 *Var5
   4C:  	Get3Int  *Var6 *Var7 *Var8
   60:  	Get1Int  *Var9
   6C:  	Loop  *Var9
   78:  		NewArray  00000006 *VarA
   88:  		UseArray  *VarA
   94:  		Call  RandInt   ( *Var4 *VarB )
   A8:  		Call  RandInt   ( *Var5 *VarC )
   BC:  		Set   *VarD  *Var2
   CC:  		Set   *VarE  *Var3
   DC:  		Add   *VarD  *VarB
   EC:  		Add   *VarE  *VarC
   FC:  		Set   *Array[0]  *VarD
  10C:  		Set   *Array[1]  *VarE
  11C:  		Set   *Array[2]  *Var6
  12C:  		Set   *Array[3]  *Var7
  13C:  		Set   *Array[4]  *Var8
  14C:  		Set   *Array[5]  *VarF
  15C:  		ChildThread
  164:  			Exec  $Script_80231568
  170:  		EndChildThread
  178:  		Add   *VarF  00000005
  188:  	EndLoop
  190:  EndLoop
  198:  Call  EnableModel   ( ~Model:tik_bt02:o354 .False )
  1AC:  Return
  1B4:  End
}

#new:Unknown $???_802318EC
{
	00000001 FFFFFF9C FFFFFFCE 000000C8 00000064 000000C8 00000000 0000003C
	00000004
}

#new:Script $Script_BeforeBattle_80231910
{
    0:  Call  SetSpriteShading  ( FFFFFFFF )
   10:  Call  SetCamBGColor     ( .Cam:Battle  0`  0`  0` )
   2C:  Set   *Var0  $???_802318EC
   3C:  Exec  $Script_80231730
   48:  Set   *Var0  0000000E
   58:  Set   *Var1  00000000
   68:  Set   *Var2  00000000
   78:  Set   *Var3  FFFFFE0C
   88:  Exec  $Script_80230DF0
   94:  Return
   9C:  End
}

#new:Script $Script_AfterBattle_802319B4
{
    0:  Return
    8:  End
}

#new:Stage $Stage_802319C4
{
	$ASCII_80234338  % tik_tex
	$ASCII_80234328  % tik_bt02_shape
	$ASCII_80234318  % tik_bt02_hit
	$Script_BeforeBattle_80231910
	$Script_AfterBattle_802319B4
	00000000
	00000000
	00000000
	00000000
	00000000
}

PADDING: 802319EC to 802319F0 (00605E7C to 00605E80)
00000000

#new:Script $Script_802319F0
{
    0:  Set   *Var1  *Array[5]
   10:  Add   *Var1  00000001
   20:  Set   *Var2  *Array[0]
   30:  Set   *Var3  *Array[1]
   40:  Set   *Var4  *Array[5]
   50:  Add   *Var4  00000002
   60:  Set   *Var5  *Array[0]
   70:  Set   *Var6  *Array[1]
   80:  Set   *Var7  *Array[5]
   90:  Add   *Var7  00000003
   A0:  Set   *Var8  *Array[0]
   B0:  Set   *Var9  *Array[1]
   C0:  Set   *VarA  *Array[5]
   D0:  Add   *VarA  00000004
   E0:  Set   *VarB  *Array[0]
   F0:  Set   *VarC  *Array[1]
  100:  Call  EnableModel   ( *Var1 .True )
  114:  Call  EnableModel   ( *Var4 .True )
  128:  Call  EnableModel   ( *Var7 .True )
  13C:  Call  EnableModel   ( *VarA .True )
  150:  Loop  00000005
  15C:  	Add   *Var0  00000001
  16C:  	Add   *Var2  00000001
  17C:  	Add   *Var3  00000001
  18C:  	Call  TranslateModel    ( *Var1 *Var2 *Var0 *Var3 )
  1A8:  	Call  ScaleModel        ( *Var1 *Fixed[0.5] *Fixed[0.5] *Fixed[0.5] )
  1C4:  	Add   *Var5  FFFFFFFF
  1D4:  	Add   *Var6  00000001
  1E4:  	Call  TranslateModel    ( *Var4 *Var5 *Var0 *Var6 )
  200:  	Call  ScaleModel        ( *Var4 *Fixed[0.5] *Fixed[0.5] *Fixed[0.5] )
  21C:  	Add   *Var8  00000001
  22C:  	Add   *Var9  FFFFFFFF
  23C:  	Call  TranslateModel    ( *Var7 *Var8 *Var0 *Var9 )
  258:  	Call  ScaleModel        ( *Var7 *Fixed[0.5] *Fixed[0.5] *Fixed[0.5] )
  274:  	Add   *VarB  FFFFFFFF
  284:  	Add   *VarC  FFFFFFFF
  294:  	Call  TranslateModel    ( *VarA *VarB *Var0 *VarC )
  2B0:  	Call  ScaleModel        ( *VarA *Fixed[0.5] *Fixed[0.5] *Fixed[0.5] )
  2CC:  	Wait  1`
  2D8:  EndLoop
  2E0:  Loop  00000005
  2EC:  	Add   *Var0  FFFFFFFF
  2FC:  	Add   *Var2  00000001
  30C:  	Add   *Var3  00000001
  31C:  	Call  TranslateModel    ( *Var1 *Var2 *Var0 *Var3 )
  338:  	Call  ScaleModel        ( *Var1 *Fixed[0.5] *Fixed[0.5] *Fixed[0.5] )
  354:  	Add   *Var5  FFFFFFFF
  364:  	Add   *Var6  00000001
  374:  	Call  TranslateModel    ( *Var4 *Var5 *Var0 *Var6 )
  390:  	Call  ScaleModel        ( *Var4 *Fixed[0.5] *Fixed[0.5] *Fixed[0.5] )
  3AC:  	Add   *Var8  00000001
  3BC:  	Add   *Var9  FFFFFFFF
  3CC:  	Call  TranslateModel    ( *Var7 *Var8 *Var0 *Var9 )
  3E8:  	Call  ScaleModel        ( *Var7 *Fixed[0.5] *Fixed[0.5] *Fixed[0.5] )
  404:  	Add   *VarB  FFFFFFFF
  414:  	Add   *VarC  FFFFFFFF
  424:  	Call  TranslateModel    ( *VarA *VarB *Var0 *VarC )
  440:  	Call  ScaleModel        ( *VarA *Fixed[0.5] *Fixed[0.5] *Fixed[0.5] )
  45C:  	Wait  1`
  468:  EndLoop
  470:  Call  EnableModel   ( *Var1 .False )
  484:  Call  EnableModel   ( *Var4 .False )
  498:  Call  EnableModel   ( *Var7 .False )
  4AC:  Call  EnableModel   ( *VarA .False )
  4C0:  Return
  4C8:  End
}

#new:Script $Script_80231EC0
{
    0:  SetGroup  00000000
    C:  UseArray  *VarA
   18:  Set   *Var5  *Array[5]
   28:  Loop  00000005
   34:  	Call  CloneModel        ( ~Model:tik_bt03:o371 *Var5 )
   48:  	Call  TranslateModel    ( *Var5 *Array[0] *Array[2] *Array[1] )
   64:  	Add   *Var5  00000001
   74:  EndLoop
   7C:  Label  0
   88:  Call  RandInt   ( 000000C8 *Var0 )
   9C:  Add   *Var0  00000032
   AC:  Wait  *Var0
   B8:  Call  EnableModel       ( *Array[5] .True )
   CC:  Call  MakeLerp  ( *Array[2] *Array[3] *Array[4] .Easing:QuadraticIn )
   E8:  Label  1
   F4:  Call  UpdateLerp ( )
  100:  Call  TranslateModel    ( *Array[5] *Array[0] *Var0 *Array[1] )
  11C:  Wait  1`
  128:  Call  $Function_802194C0    ( *Array[5] )
  138:  If  *Var2  ==  00000001
  148:  	Goto  A
  154:  EndIf
  15C:  If  *Var1  ==  00000001
  16C:  	Goto  1
  178:  EndIf
  180:  Label  A
  18C:  Call  EnableModel   ( *Array[5] .False )
  1A0:  ExecWait  $Script_802319F0
  1AC:  Goto  0
  1B8:  Return
  1C0:  End
}

#new:Script $Script_80232088
{
    0:  Set   *VarF  00002710
   10:  UseIntBuffer  *Var0
   1C:  Get1Int  *Var1
   28:  Loop  *Var1
   34:  	Get4Int  *Var2 *Var3 *Var4 *Var5
   4C:  	Get3Int  *Var6 *Var7 *Var8
   60:  	Get1Int  *Var9
   6C:  	Loop  *Var9
   78:  		NewArray  00000006 *VarA
   88:  		UseArray  *VarA
   94:  		Call  RandInt   ( *Var4 *VarB )
   A8:  		Call  RandInt   ( *Var5 *VarC )
   BC:  		Set   *VarD  *Var2
   CC:  		Set   *VarE  *Var3
   DC:  		Add   *VarD  *VarB
   EC:  		Add   *VarE  *VarC
   FC:  		Set   *Array[0]  *VarD
  10C:  		Set   *Array[1]  *VarE
  11C:  		Set   *Array[2]  *Var6
  12C:  		Set   *Array[3]  *Var7
  13C:  		Set   *Array[4]  *Var8
  14C:  		Set   *Array[5]  *VarF
  15C:  		ChildThread
  164:  			Exec  $Script_80231EC0
  170:  		EndChildThread
  178:  		Add   *VarF  00000005
  188:  	EndLoop
  190:  EndLoop
  198:  Call  EnableModel   ( ~Model:tik_bt03:o371 .False )
  1AC:  Return
  1B4:  End
}

#new:Unknown $???_80232244
{
	00000001 FFFFFF9C FFFFFFCE 000000C8 00000064 000000C8 00000000 0000003C
	00000004
}

#new:Script $Script_BeforeBattle_80232268
{
    0:  Call  SetSpriteShading  ( FFFFFFFF )
   10:  Call  SetCamBGColor     ( .Cam:Battle  0`  0`  0` )
   2C:  Set   *Var0  $???_80232244
   3C:  Exec  $Script_80232088
   48:  Return
   50:  End
}

#new:Script $Script_AfterBattle_802322C0
{
    0:  Return
    8:  End
}

#new:Stage $Stage_802322D0
{
	$ASCII_80234360  % tik_tex
	$ASCII_80234350  % tik_bt03_shape
	$ASCII_80234340  % tik_bt03_hit
	$Script_BeforeBattle_80232268
	$Script_AfterBattle_802322C0
	00000000
	00000000
	00000000
	00000000
	00000000
}

PADDING: 802322F8 to 80232300 (00606788 to 00606790)
00000000 00000000

% Origin: HEURISTIC
#new:Script $Script_80232300
{
    0:  Set   *VarA  *Var0
   10:  Label  0
   1C:  Call  $Function_80219960    ( 00000000 )
   2C:  Call  TranslateModel        ( *VarA *Var0 *Var1 *Var2 )
   48:  Call  RotateModel   ( *VarA FFFFFFEC 00000000 00000000 00000001 )
   68:  Wait  1`
   74:  Loop
   80:  	Call  $Function_80219960    ( 00000001 )
   90:  	Call  TranslateModel        ( *VarA *Var0 *Var1 *Var2 )
   AC:  	Call  RotateModel   ( *VarA FFFFFFEC 00000000 00000000 00000001 )
   CC:  	Wait  1`
   D8:  	If  *VarB  ==  00000001
   E8:  		BreakLoop
   F0:  	EndIf
   F8:  EndLoop
  100:  Call  TranslateModel    ( *VarA *Var0 *Var1 *Var2 )
  11C:  Call  RotateModel       ( *VarA FFFFFFF9 00000000 00000000 00000001 )
  13C:  Wait  5`
  148:  Call  TranslateModel    ( *VarA *Var0 *Var1 *Var2 )
  164:  Call  RotateModel       ( *VarA FFFFFFE5 00000000 00000000 00000001 )
  184:  Wait  2`
  190:  Call  TranslateModel    ( *VarA *Var0 *Var1 *Var2 )
  1AC:  Call  RotateModel       ( *VarA FFFFFFFB 00000000 00000000 00000001 )
  1CC:  Wait  3`
  1D8:  Call  TranslateModel    ( *VarA *Var0 *Var1 *Var2 )
  1F4:  Call  RotateModel       ( *VarA FFFFFFEC 00000000 00000000 00000001 )
  214:  Wait  5`
  220:  Loop
  22C:  	Call  $Function_80219960    ( 00000002 )
  23C:  	Call  TranslateModel        ( *VarA *Var0 *Var1 *Var2 )
  258:  	Call  RotateModel   ( *VarA FFFFFFEC 00000000 00000000 00000001 )
  278:  	Wait  1`
  284:  	If  *VarB  ==  00000002
  294:  		BreakLoop
  29C:  	EndIf
  2A4:  EndLoop
  2AC:  Call  RandInt   ( 00000050 *VarB )
  2C0:  Add   *VarB  0000001E
  2D0:  Loop  *VarB
  2DC:  	Call  TranslateModel    ( *VarA *Var0 *Var1 *Var2 )
  2F8:  	Call  RotateModel       ( *VarA FFFFFFEC 00000000 00000000 00000001 )
  318:  	Wait  1`
  324:  EndLoop
  32C:  Call  RandInt   ( 00000005 *Var0 )
  340:  If  *Var0  !=  00000000
  350:  	Goto  0
  35C:  EndIf
  364:  Call  $Function_80219960    ( 00000003 )
  374:  Call  TranslateModel        ( *VarA *Var0 *Var1 *Var2 )
  390:  Call  RotateModel   ( *VarA FFFFFFEC 00000000 00000000 00000001 )
  3B0:  Wait  1`
  3BC:  Loop
  3C8:  	Call  $Function_80219960    ( 00000001 )
  3D8:  	Call  TranslateModel        ( *VarA *Var0 *Var1 *Var2 )
  3F4:  	Call  RotateModel   ( *VarA FFFFFFEC 00000000 00000000 00000001 )
  414:  	Wait  1`
  420:  	If  *VarB  ==  00000001
  430:  		BreakLoop
  438:  	EndIf
  440:  EndLoop
  448:  Call  TranslateModel    ( *VarA *Var0 *Var1 *Var2 )
  464:  Call  RotateModel       ( *VarA FFFFFFF9 00000000 00000000 00000001 )
  484:  Wait  5`
  490:  Call  TranslateModel    ( *VarA *Var0 *Var1 *Var2 )
  4AC:  Call  RotateModel       ( *VarA FFFFFFE5 00000000 00000000 00000001 )
  4CC:  Wait  2`
  4D8:  Call  TranslateModel    ( *VarA *Var0 *Var1 *Var2 )
  4F4:  Call  RotateModel       ( *VarA FFFFFFFB 00000000 00000000 00000001 )
  514:  Wait  3`
  520:  Call  TranslateModel    ( *VarA *Var0 *Var1 *Var2 )
  53C:  Call  RotateModel       ( *VarA FFFFFFEC 00000000 00000000 00000001 )
  55C:  Wait  5`
  568:  Loop
  574:  	Call  $Function_80219960    ( 00000002 )
  584:  	Call  TranslateModel        ( *VarA *Var0 *Var1 *Var2 )
  5A0:  	Call  RotateModel   ( *VarA FFFFFFEC 00000000 00000000 00000001 )
  5C0:  	Wait  1`
  5CC:  	If  *VarB  ==  00000002
  5DC:  		BreakLoop
  5E4:  	EndIf
  5EC:  EndLoop
  5F4:  Call  RandInt   ( 00000050 *VarB )
  608:  Add   *VarB  0000001E
  618:  Loop  *VarB
  624:  	Call  TranslateModel    ( *VarA *Var0 *Var1 *Var2 )
  640:  	Call  RotateModel       ( *VarA FFFFFFEC 00000000 00000000 00000001 )
  660:  	Wait  1`
  66C:  EndLoop
  674:  Goto  0
  680:  Return
  688:  End
}

#new:Script $Script_80232990
{
    0:  Set   *VarA  *Var0
   10:  Loop
   1C:  	Call  TranslateModel    ( *VarA 00000001 00000000 00000000 )
   38:  	Wait  2`
   44:  	Call  TranslateModel    ( *VarA 00000001 00000000 00000000 )
   60:  	Wait  2`
   6C:  	Call  TranslateModel    ( *VarA 00000001 FFFFFFFF 00000000 )
   88:  	Wait  2`
   94:  	Call  TranslateModel    ( *VarA 00000002 FFFFFFFF 00000000 )
   B0:  	Wait  2`
   BC:  	Call  TranslateModel    ( *VarA 00000002 FFFFFFFF 00000000 )
   D8:  	Wait  2`
   E4:  	Call  TranslateModel    ( *VarA 00000002 FFFFFFFF 00000000 )
  100:  	Wait  2`
  10C:  	Call  TranslateModel    ( *VarA 00000003 FFFFFFFE 00000000 )
  128:  	Wait  2`
  134:  	Call  TranslateModel    ( *VarA 00000003 FFFFFFFE 00000000 )
  150:  	Wait  2`
  15C:  	Call  TranslateModel    ( *VarA 00000003 FFFFFFFD 00000000 )
  178:  	Wait  2`
  184:  	Call  TranslateModel    ( *VarA 00000003 FFFFFFFD 00000000 )
  1A0:  	Wait  2`
  1AC:  	Call  TranslateModel    ( *VarA 00000003 FFFFFFFD 00000000 )
  1C8:  	Wait  2`
  1D4:  	Call  TranslateModel    ( *VarA 00000003 FFFFFFFE 00000000 )
  1F0:  	Wait  2`
  1FC:  	Call  TranslateModel    ( *VarA 00000002 FFFFFFFE 00000000 )
  218:  	Wait  2`
  224:  	Call  TranslateModel    ( *VarA 00000002 FFFFFFFF 00000000 )
  240:  	Wait  2`
  24C:  	Call  TranslateModel    ( *VarA 00000001 00000000 00000000 )
  268:  	Wait  2`
  274:  	Call  TranslateModel    ( *VarA 00000001 00000001 00000000 )
  290:  	Wait  2`
  29C:  	Call  TranslateModel    ( *VarA 00000000 00000001 00000000 )
  2B8:  	Wait  2`
  2C4:  	Call  TranslateModel    ( *VarA FFFFFFFF 00000001 00000000 )
  2E0:  	Wait  2`
  2EC:  	Call  TranslateModel    ( *VarA FFFFFFFF 00000001 00000000 )
  308:  	Wait  2`
  314:  	Call  TranslateModel    ( *VarA FFFFFFFF 00000000 00000000 )
  330:  	Wait  2`
  33C:  	Call  TranslateModel    ( *VarA FFFFFFFF 00000000 00000000 )
  358:  	Wait  2`
  364:  	Call  TranslateModel    ( *VarA 00000000 00000000 00000000 )
  380:  	Wait  2`
  38C:  EndLoop
  394:  Return
  39C:  End
}

#new:IntTable $IntTable_80232D34
{
	00000000 FFFFFFFF FFFFFFFF FFFFFFFE FFFFFFFE FFFFFFFD FFFFFFFB FFFFFFF8
	FFFFFFF8 FFFFFFF9 FFFFFFFA FFFFFFFC FFFFFFFE FFFFFFFF 00000000 000000FF
}

#new:Script $Script_80232D74
{
    0:  Set   *VarA  *Var0
   10:  Set   *VarB  *Var1
   20:  Set   *Var5  00000005
   30:  UseIntBuffer  $IntTable_80232D34
   3C:  Label  0
   48:  Get1Int  *Var1
   54:  If  *Var1  ==  000000FF
   64:  	UseIntBuffer  $IntTable_80232D34
   70:  	Get1Int  *Var1
   7C:  EndIf
   84:  Set   *Var0  *Var5
   94:  Call  TranslateModel    ( *VarA *Var0 *Var1 00000000 )
   B0:  Wait  1`
   BC:  Add   *Var5  00000001
   CC:  Set   *VarC  *VarB
   DC:  Sub   *VarC  00000014
   EC:  If  *Var5  >  *VarC
   FC:  	Goto  1
  108:  EndIf
  110:  Set   *Var0  *Var5
  120:  Call  TranslateModel    ( *VarA *Var0 *Var1 00000000 )
  13C:  Wait  1`
  148:  Add   *Var5  00000001
  158:  Set   *VarC  *VarB
  168:  Sub   *VarC  00000014
  178:  If  *Var5  >  *VarC
  188:  	Goto  1
  194:  EndIf
  19C:  Goto  0
  1A8:  Label  1
  1B4:  Set   *Var2  00000000
  1C4:  Loop  00000014
  1D0:  	Add   *Var5  00000001
  1E0:  	Sub   *Var1  00000002
  1F0:  	Set   *Var0  *Var5
  200:  	Call  TranslateModel    ( *VarA *Var0 *Var1 00000000 )
  21C:  	Wait  1`
  228:  EndLoop
  230:  Sub   *Var5  00000118
  240:  Set   *Var1  00000000
  250:  Goto  0
  25C:  Return
  264:  End
}

% Origin: HEURISTIC
#new:Script $Script_80232FE0
{
    0:  Set   *VarA  *Var0
   10:  Loop
   1C:  	Call  TranslateModel    ( *VarA 00000000 00000000 00000000 )
   38:  	Wait  2`
   44:  	Call  TranslateModel    ( *VarA 00000000 00000000 00000000 )
   60:  	Wait  2`
   6C:  	Call  TranslateModel    ( *VarA 00000000 FFFFFFFF 00000000 )
   88:  	Wait  2`
   94:  	Call  TranslateModel    ( *VarA 00000000 FFFFFFFF 00000000 )
   B0:  	Wait  2`
   BC:  	Call  TranslateModel    ( *VarA 00000000 FFFFFFFF 00000000 )
   D8:  	Wait  2`
   E4:  	Call  TranslateModel    ( *VarA 00000000 FFFFFFFF 00000000 )
  100:  	Wait  2`
  10C:  	Call  TranslateModel    ( *VarA 00000000 FFFFFFFE 00000000 )
  128:  	Wait  2`
  134:  	Call  TranslateModel    ( *VarA 00000000 FFFFFFFE 00000000 )
  150:  	Wait  2`
  15C:  	Call  TranslateModel    ( *VarA 00000000 FFFFFFFD 00000000 )
  178:  	Wait  2`
  184:  	Call  TranslateModel    ( *VarA 00000000 FFFFFFFD 00000000 )
  1A0:  	Wait  2`
  1AC:  	Call  TranslateModel    ( *VarA 00000000 FFFFFFFD 00000000 )
  1C8:  	Wait  2`
  1D4:  	Call  TranslateModel    ( *VarA 00000000 FFFFFFFE 00000000 )
  1F0:  	Wait  2`
  1FC:  	Call  TranslateModel    ( *VarA 00000000 FFFFFFFE 00000000 )
  218:  	Wait  2`
  224:  	Call  TranslateModel    ( *VarA 00000000 FFFFFFFF 00000000 )
  240:  	Wait  2`
  24C:  	Call  TranslateModel    ( *VarA 00000000 00000000 00000000 )
  268:  	Wait  2`
  274:  	Call  TranslateModel    ( *VarA 00000000 00000001 00000000 )
  290:  	Wait  2`
  29C:  	Call  TranslateModel    ( *VarA 00000000 00000001 00000000 )
  2B8:  	Wait  2`
  2C4:  	Call  TranslateModel    ( *VarA 00000000 00000001 00000000 )
  2E0:  	Wait  2`
  2EC:  	Call  TranslateModel    ( *VarA 00000000 00000001 00000000 )
  308:  	Wait  2`
  314:  	Call  TranslateModel    ( *VarA 00000000 00000000 00000000 )
  330:  	Wait  2`
  33C:  	Call  TranslateModel    ( *VarA 00000000 00000000 00000000 )
  358:  	Wait  2`
  364:  	Call  TranslateModel    ( *VarA 00000000 00000000 00000000 )
  380:  	Wait  2`
  38C:  EndLoop
  394:  Return
  39C:  End
}

#new:Script $Script_BeforeBattle_80233384
{
    0:  Call  SetSpriteShading  ( FFFFFFFF )
   10:  Call  SetCamBGColor     ( .Cam:Battle  0`  0`  0` )
   2C:  Thread
   34:  	Set   *Var0  0000000F
   44:  	Exec  $Script_80232990
   50:  	Wait  5`
   5C:  	Set   *Var0  00000010
   6C:  	Exec  $Script_80232990
   78:  	Wait  5`
   84:  	Set   *Var0  00000011
   94:  	Exec  $Script_80232990
   A0:  EndThread
   A8:  Thread
   B0:  	Wait  5`
   BC:  	Set   *Var0  00000009
   CC:  	Set   *Var1  00000091
   DC:  	Exec  $Script_80232D74
   E8:  	Set   *Var0  0000000A
   F8:  	Set   *Var1  00000091
  108:  	Exec  $Script_80232D74
  114:  EndThread
  11C:  Set   *Var0  0000000C
  12C:  Set   *Var1  0000003C
  13C:  Exec  $Script_80232D74
  148:  Set   *Var0  0000000D
  158:  Set   *Var1  0000003C
  168:  Exec  $Script_80232D74
  174:  Return
  17C:  End
}

#new:Script $Script_AfterBattle_80233508
{
    0:  Return
    8:  End
}

#new:Stage $Stage_80233518
{
	$ASCII_80234388  % tik_tex
	$ASCII_80234378  % tik_bt04_shape
	$ASCII_80234368  % tik_bt04_hit
	$Script_BeforeBattle_80233384
	$Script_AfterBattle_80233508
	00000000
	00000000
	00000000
	00000000
	00000000
}

#new:Script $Script_80233540
{
    0:  SetGroup  00000000
    C:  If  *Var5  ==  00000001
   1C:  	If  *Var6  ==  00000001
   2C:  		If  *Var7  ==  00000001
   3C:  			If  *Var8  ==  00000001
   4C:  				Call  $Function_80219DB0 ( )
   58:  				Return
   60:  			EndIf
   68:  		EndIf
   70:  	EndIf
   78:  EndIf
   80:  Call  $Function_80219ED4 ( )
   8C:  Return
   94:  End
}

#new:Script $Script_BeforeBattle_802335DC
{
    0:  Call  SetSpriteShading  ( FFFFFFFF )
   10:  Call  SetCamBGColor     ( .Cam:Battle  0`  0`  0` )
   2C:  Call  SetTexPanner      ( ~Model:tik_bt05:taki1 00000001 )
   40:  Call  EnableTexPanning  ( ~Model:tik_bt05:taki1 .True )
   54:  Thread
   5C:  	Set   *Var0  00000001
   6C:  	Set   *Var1  00000000
   7C:  	Set   *Var2  FFFFF574
   8C:  	Set   *Var3  00000000
   9C:  	Set   *Var4  FFFFF448
   AC:  	Set   *Var5  00000001
   BC:  	Set   *Var6  00000001
   CC:  	Set   *Var7  00000001
   DC:  	Set   *Var8  00000001
   EC:  	Set   *Var9  00000000
   FC:  	Set   *VarA  00000000
  10C:  	Set   *VarB  00000000
  11C:  	Set   *VarC  00000000
  12C:  	Exec  $Script_80233540
  138:  EndThread
  140:  Call  SetTexPanner      ( ~Model:tik_bt05:taki2 00000002 )
  154:  Call  EnableTexPanning  ( ~Model:tik_bt05:taki2 .True )
  168:  Thread
  170:  	Set   *Var0  00000002
  180:  	Set   *Var1  00000032
  190:  	Set   *Var2  FFFFFF38
  1A0:  	Set   *Var3  0000006E
  1B0:  	Set   *Var4  FFFFFE0C
  1C0:  	Set   *Var5  00000001
  1D0:  	Set   *Var6  00000001
  1E0:  	Set   *Var7  00000001
  1F0:  	Set   *Var8  00000001
  200:  	Set   *Var9  00000000
  210:  	Set   *VarA  00000000
  220:  	Set   *VarB  00000000
  230:  	Set   *VarC  00000000
  240:  	Exec  $Script_80233540
  24C:  EndThread
  254:  Return
  25C:  End
}

#new:Script $Script_AfterBattle_80233840
{
    0:  Return
    8:  End
}

#new:ForegroundModelList $ForegroundModelList_80233850
{
	~Model:tik_bt05:taki1
	00000000
}

#new:Stage $Stage_80233858
{
	$ASCII_802343B0  % tik_tex
	$ASCII_802343A0  % tik_bt05_shape
	$ASCII_80234390  % tik_bt05_hit
	$Script_BeforeBattle_802335DC
	$Script_AfterBattle_80233840
	00000000
	$ForegroundModelList_80233850
	00000000
	00000000
	00000000
}

#new:Formation $Formation_00
{
	$DarkKoopa 00000001 0000000A 00000000 00000000 00000000 00000000
	$DarkKoopa 00000002 00000009 00000000 00000000 00000000 00000000
}

#new:Formation $Formation_01
{
	$DarkKoopa 00000000 0000000A 00000000 00000000 00000000 00000000
	$DarkKoopa 00000001 00000009 00000000 00000000 00000000 00000000
	$DarkKoopa 00000002 00000008 00000000 00000000 00000000 00000000
}

#new:Formation $Formation_02
{
	$DarkKoopa 00000000 0000000A 00000000 00000000 00000000 00000000
	$DarkKoopa 00000001 00000009 00000000 00000000 00000000 00000000
	$DarkKoopa 00000002 00000008 00000000 00000000 00000000 00000000
	$DarkKoopa 00000003 00000007 00000000 00000000 00000000 00000000
}

#new:Formation $Formation_03
{
	$DarkKoopa 00000000 0000000A 00000000 00000000 00000000 00000000
	$DarkParatroopa 00000005 00000009 00000000 00000000 00000000 00000000
	$DarkParatroopa 00000006 00000008 00000000 00000000 00000000 00000000
}

#new:Formation $Formation_04
{
	$DarkKoopa 00000000 0000000A 00000000 00000000 00000000 00000000
	$SpikeTop 00000001 00000009 00000000 00000000 00000000 00000000
	$SpikeTop 00000002 00000008 00000000 00000000 00000000 00000000
}

#new:Formation $Formation_05
{
	$DarkKoopa 00000000 0000000A 00000000 00000000 00000000 00000000
	$SpikeTop 00000001 00000009 00000000 00000000 00000000 00000000
	$DarkKoopa 00000002 00000008 00000000 00000000 00000000 00000000
}

#new:Formation $Formation_06
{
	$DarkKoopa 00000000 0000000A 00000000 00000000 00000000 00000000
	$Spiny 00000001 00000009 00000000 00000000 00000000 00000000
	$Spiny 00000002 00000008 00000000 00000000 00000000 00000000
}

#new:Formation $Formation_07
{
	$DarkKoopa 00000000 0000000A 00000000 00000000 00000000 00000000
	$Spiny 00000001 00000009 00000000 00000000 00000000 00000000
	$DarkKoopa 00000002 00000008 00000000 00000000 00000000 00000000
	$Spiny 00000003 00000007 00000000 00000000 00000000 00000000
}

#new:Formation $Formation_08
{
	$DarkParatroopa 00000005 0000000A 00000000 00000000 00000000 00000000
	$DarkParatroopa 00000006 00000009 00000000 00000000 00000000 00000000
}

#new:Formation $Formation_09
{
	$DarkParatroopa 00000004 0000000A 00000000 00000000 00000000 00000000
	$DarkParatroopa 00000005 00000009 00000000 00000000 00000000 00000000
	$DarkParatroopa 00000006 00000008 00000000 00000000 00000000 00000000
}

#new:Formation $Formation_0A
{
	$Gloomba 00000001 0000000A 00000000 00000000 00000000 00000000
	$Gloomba 00000002 00000009 00000000 00000000 00000000 00000000
}

#new:Formation $Formation_0B
{
	$Gloomba 00000000 0000000A 00000000 00000000 00000000 00000000
	$Gloomba 00000001 00000009 00000000 00000000 00000000 00000000
	$Gloomba 00000002 00000008 00000000 00000000 00000000 00000000
	$Gloomba 00000003 00000007 00000000 00000000 00000000 00000000
}

#new:Formation $Formation_0C
{
	$Paragloomba 00000004 0000000A 00000000 00000000 00000000 00000000
	$Paragloomba 00000005 00000009 00000000 00000000 00000000 00000000
	$Paragloomba 00000006 00000008 00000000 00000000 00000000 00000000
}

#new:Formation $Formation_0D
{
	$Paragloomba 00000005 0000000A 00000000 00000000 00000000 00000000
	$SpikedGloomba 00000002 00000009 00000000 00000000 00000000 00000000
}

#new:Formation $Formation_0E
{
	$SpikedGloomba 00000001 0000000A 00000000 00000000 00000000 00000000
	$SpikedGloomba 00000002 00000009 00000000 00000000 00000000 00000000
}

#new:Formation $Formation_0F
{
	$SpikedGloomba 00000000 0000000A 00000000 00000000 00000000 00000000
	$Gloomba 00000001 00000009 00000000 00000000 00000000 00000000
	$Gloomba 00000002 00000008 00000000 00000000 00000000 00000000
}

#new:Formation $Formation_10
{
	$SpikedGloomba 00000000 0000000A 00000000 00000000 00000000 00000000
	$BuzzyBeetle 00000001 00000009 00000000 00000000 00000000 00000000
	$BuzzyBeetle 00000002 00000008 00000000 00000000 00000000 00000000
}

#new:Formation $Formation_11
{
	$SpikedGloomba 00000000 0000000A 00000000 00000000 00000000 00000000
	$BuzzyBeetle 00000001 00000009 00000000 00000000 00000000 00000000
	$SpikedGloomba 00000002 00000008 00000000 00000000 00000000 00000000
	$BuzzyBeetle 00000003 00000007 00000000 00000000 00000000 00000000
}

#new:Formation $Formation_12
{
	$SpikedGloomba 00000000 0000000A 00000000 00000000 00000000 00000000
	$BuzzyBeetle 00000001 00000009 00000000 00000000 00000000 00000000
	$Paragloomba 00000006 00000008 00000000 00000000 00000000 00000000
	$BuzzyBeetle 00000003 00000007 00000000 00000000 00000000 00000000
}

#new:Formation $Formation_13
{
	$SpikeTop 00000000 0000000A 00000000 00000000 00000000 00000000
	$SpikeTop 00000001 00000009 00000000 00000000 00000000 00000000
	$SpikeTop 00000002 00000008 00000000 00000000 00000000 00000000
	$SpikeTop 00000003 00000007 00000000 00000000 00000000 00000000
}

#new:Formation $Formation_14
{
	$SpikeTop 00000001 0000000A 00000000 00000000 00000000 00000000
	$SpikeTop 00000002 00000009 00000000 00000000 00000000 00000000
}

#new:Formation $Formation_15
{
	$BuzzyBeetle 00000000 0000000A 00000000 00000000 00000000 00000000
	$SpikedGloomba 00000001 00000009 00000000 00000000 00000000 00000000
	$BuzzyBeetle 00000002 00000008 00000000 00000000 00000000 00000000
}

#new:Formation $Formation_16
{
	$Spiny 00000001 0000000A 00000000 00000000 00000000 00000000
	$Spiny 00000002 00000009 00000000 00000000 00000000 00000000
}

#new:Formation $Formation_17
{
	$Spiny 00000000 0000000A 00000000 00000000 00000000 00000000
	$Spiny 00000001 00000009 00000000 00000000 00000000 00000000
	$Spiny 00000002 00000008 00000000 00000000 00000000 00000000
}

#new:Formation $Formation_18
{
	$Spiny 00000000 0000000A 00000000 00000000 00000000 00000000
	$Spiny 00000001 00000009 00000000 00000000 00000000 00000000
	$Spiny 00000002 00000008 00000000 00000000 00000000 00000000
	$Spiny 00000003 00000007 00000000 00000000 00000000 00000000
}

#new:FormationTable $FormationTable
{
	$SJIS_802345E8 00000002 $Formation_00 $Stage_80230DC4 00000000
	$SJIS_802345D8 00000003 $Formation_01 $Stage_80230DC4 00000000
	$SJIS_802345C8 00000004 $Formation_02 $Stage_80230DC4 00000000
	$SJIS_802345A8 00000003 $Formation_03 $Stage_80230DC4 00000000
	$SJIS_8023458C 00000003 $Formation_04 $Stage_80230DC4 00000000
	$SJIS_80234564 00000003 $Formation_05 $Stage_80230DC4 00000000
	$SJIS_80234548 00000003 $Formation_06 $Stage_80230DC4 00000000
	$SJIS_8023451C 00000004 $Formation_07 $Stage_80230DC4 00000000
	$SJIS_8023450C 00000002 $Formation_08 $Stage_80230DC4 00000000
	$SJIS_802344FC 00000003 $Formation_09 $Stage_80230DC4 00000000
	$SJIS_802344EC 00000002 $Formation_0A $Stage_80230DC4 00000000
	$SJIS_802344DC 00000004 $Formation_0B $Stage_80230DC4 00000000
	$SJIS_802344CC 00000003 $Formation_0C $Stage_80230DC4 00000000
	$SJIS_802344B0 00000002 $Formation_0D $Stage_80230DC4 00000000
	$SJIS_802344A0 00000002 $Formation_0E $Stage_80230DC4 00000000
	$SJIS_80234480 00000003 $Formation_0F $Stage_80230DC4 00000000
	$SJIS_80234468 00000003 $Formation_10 $Stage_80230DC4 00000000
	$SJIS_80234440 00000004 $Formation_11 $Stage_80230DC4 00000000
	$SJIS_80234418 00000004 $Formation_12 $Stage_80230DC4 00000000
	$SJIS_80234408 00000004 $Formation_13 $Stage_80230DC4 00000000
	$SJIS_802343F8 00000002 $Formation_14 $Stage_80230DC4 00000000
	$SJIS_802343DC 00000003 $Formation_15 $Stage_80230DC4 00000000
	$SJIS_802343D0 00000002 $Formation_16 $Stage_80230DC4 00000000
	$SJIS_802343C4 00000003 $Formation_17 $Stage_80230DC4 00000000
	$SJIS_802343B8 00000004 $Formation_18 $Stage_80230DC4 00000000
	00000000 00000000 00000000 00000000 00000000
}

#new:StageTable $StageTable
{
	$ASCII_80234618 $Stage_80230DC4
	$ASCII_80234610 $Stage_802319C4
	$ASCII_80234608 $Stage_802322D0
	$ASCII_80234600 $Stage_80233518
	$ASCII_802345F8 $Stage_80233858
	00000000 00000000
}

PADDING: 802342EC to 802342F0 (0060877C to 00608780)
00000000

#new:ASCII $ASCII_802342F0
{
	"tik_bt01_hit"
}

#new:ASCII $ASCII_80234300
{
	"tik_bt01_shape"
}

#new:ASCII $ASCII_80234310
{
	"tik_tex"
}

#new:ASCII $ASCII_80234318
{
	"tik_bt02_hit"
}

#new:ASCII $ASCII_80234328
{
	"tik_bt02_shape"
}

#new:ASCII $ASCII_80234338
{
	"tik_tex"
}

#new:ASCII $ASCII_80234340
{
	"tik_bt03_hit"
}

#new:ASCII $ASCII_80234350
{
	"tik_bt03_shape"
}

#new:ASCII $ASCII_80234360
{
	"tik_tex"
}

#new:ASCII $ASCII_80234368
{
	"tik_bt04_hit"
}

#new:ASCII $ASCII_80234378
{
	"tik_bt04_shape"
}

#new:ASCII $ASCII_80234388
{
	"tik_tex"
}

#new:ASCII $ASCII_80234390
{
	"tik_bt05_hit"
}

#new:ASCII $ASCII_802343A0
{
	"tik_bt05_shape"
}

#new:ASCII $ASCII_802343B0
{
	"tik_tex"
}

#new:SJIS $SJIS_802343B8
{
	トゲゾーx４ % togezo-x4
}

#new:SJIS $SJIS_802343C4
{
	トゲゾーx３ % togezo-x3
}

#new:SJIS $SJIS_802343D0
{
	トゲゾーx２ % togezo-x2
}

#new:SJIS $SJIS_802343DC
{
	メット,ヤミトゲクリ,メット % metto,yamitogekuri,metto
}

#new:SJIS $SJIS_802343F8
{
	トゲメットx２ % togemettox2
}

#new:SJIS $SJIS_80234408
{
	トゲメットx４ % togemettox4
}

#new:SJIS $SJIS_80234418
{
	ヤミトゲクリ,メット,ヤミパタクリ,メット % yamitogekuri,metto,yamipatakuri,metto
}

#new:SJIS $SJIS_80234440
{
	ヤミトゲクリ,メット,ヤミトゲクリ,メット % yamitogekuri,metto,yamitogekuri,metto
}

#new:SJIS $SJIS_80234468
{
	ヤミトゲクリ,メットx２ % yamitogekuri,mettox2
}

#new:SJIS $SJIS_80234480
{
	ヤミトゲクリ,ヤミクリボーx２ % yamitogekuri,yamikuribo-x2
}

#new:SJIS $SJIS_802344A0
{
	ヤミトゲクリx２ % yamitogekurix2
}

#new:SJIS $SJIS_802344B0
{
	ヤミパタクリ,ヤミトゲクリ % yamipatakuri,yamitogekuri
}

#new:SJIS $SJIS_802344CC
{
	ヤミパタクリx３ % yamipatakurix3
}

#new:SJIS $SJIS_802344DC
{
	ヤミクリボーx４ % yamikuribo-x4
}

#new:SJIS $SJIS_802344EC
{
	ヤミクリボーx２ % yamikuribo-x2
}

#new:SJIS $SJIS_802344FC
{
	ヤミパタパタx３ % yamipatapatax3
}

#new:SJIS $SJIS_8023450C
{
	ヤミパタパタx２ % yamipatapatax2
}

#new:SJIS $SJIS_8023451C
{
	ヤミノコノコ,トゲゾー,ヤミノコノコ,トゲゾー % yaminokonoko,togezo-,yaminokonoko,togezo-
}

#new:SJIS $SJIS_80234548
{
	ヤミノコノコ,トゲゾーx２ % yaminokonoko,togezo-x2
}

#new:SJIS $SJIS_80234564
{
	ヤミノコノコ,トゲメット,ヤミノコノコ % yaminokonoko,togemetto,yaminokonoko
}

#new:SJIS $SJIS_8023458C
{
	ヤミノコノコ,トゲメットx２ % yaminokonoko,togemettox2
}

#new:SJIS $SJIS_802345A8
{
	ヤミノコノコ,ヤミパタパタx２ % yaminokonoko,yamipatapatax2
}

#new:SJIS $SJIS_802345C8
{
	ヤミノコノコx４ % yaminokonokox4
}

#new:SJIS $SJIS_802345D8
{
	ヤミノコノコx３ % yaminokonokox3
}

#new:SJIS $SJIS_802345E8
{
	ヤミノコノコx２ % yaminokonokox2
}

#new:ASCII $ASCII_802345F8
{
	"tik_05"
}

#new:ASCII $ASCII_80234600
{
	"tik_04"
}

#new:ASCII $ASCII_80234608
{
	"tik_03"
}

#new:ASCII $ASCII_80234610
{
	"tik_02"
}

#new:ASCII $ASCII_80234618
{
	"tik_01"
}

