% Script File: 18 Area FLO.bscr
% Decoded from: 5B14B0 to 5CE690 (18 Area FLO)

#new:Function $Function_80218000
{
    0:  ADDIU     SP, SP, FFD8
    4:  SW        S1, 14 (SP)
    8:  COPY      S1, A0
    C:  SW        RA, 20 (SP)
   10:  SW        S3, 1C (SP)
   14:  SW        S2, 18 (SP)
   18:  SW        S0, 10 (SP)
   1C:  LW        S0, C (S1)
   20:  LW        A1, 0 (S0)
   24:  JAL       ~Func:get_variable
   28:  ADDIU     S0, S0, 4
   2C:  LW        A1, 0 (S0)
   30:  ADDIU     S0, S0, 4
   34:  COPY      A0, S1
   38:  JAL       ~Func:get_variable
   3C:  COPY      S3, V0
   40:  LW        A1, 0 (S0)
   44:  ADDIU     S0, S0, 4
   48:  COPY      A0, S1
   4C:  JAL       ~Func:get_variable
   50:  COPY      S2, V0
   54:  COPY      A0, S1
   58:  LW        A1, 0 (S0)
   5C:  JAL       ~Func:get_variable
   60:  COPY      S0, V0
   64:  LW        A0, 148 (S1)
   68:  JAL       ~Func:get_actor
   6C:  COPY      S1, V0
   70:  COPY      V1, V0
   74:  LW        V0, 8 (V1)
   78:  LBU       V0, 24 (V0)
   7C:  LW        A0, 8 (V1)
   80:  SUBU      S3, S3, V0
   84:  SB        S3, 194 (V1)
   88:  LBU       V0, 25 (A0)
   8C:  SUBU      S2, S2, V0
   90:  SB        S2, 195 (V1)
   94:  LBU       V0, 26 (A0)
   98:  SUBU      S0, S0, V0
   9C:  SB        S0, 196 (V1)
   A0:  LBU       A0, 27 (A0)
   A4:  SUBU      S1, S1, A0
   A8:  SB        S1, 197 (V1)
   AC:  LW        RA, 20 (SP)
   B0:  LW        S3, 1C (SP)
   B4:  LW        S2, 18 (SP)
   B8:  LW        S1, 14 (SP)
   BC:  LW        S0, 10 (SP)
   C0:  LI        V0, 2
   C4:  JR        RA
   C8:  ADDIU     SP, SP, 28
}

#new:Function $Function_802180CC
{
    0:  ADDIU     SP, SP, FFC8
    4:  SW        S1, 14 (SP)
    8:  COPY      S1, A0
    C:  SW        RA, 24 (SP)
   10:  SW        S4, 20 (SP)
   14:  SW        S3, 1C (SP)
   18:  SW        S2, 18 (SP)
   1C:  SW        S0, 10 (SP)
   20:  SDC1      F22, 30 (SP)
   24:  SDC1      F20, 28 (SP)
   28:  LW        S0, C (S1)
   2C:  LW        A1, 0 (S0)
   30:  JAL       ~Func:get_variable
   34:  ADDIU     S0, S0, 4
   38:  LW        A1, 0 (S0)
   3C:  ADDIU     S0, S0, 4
   40:  COPY      A0, S1
   44:  JAL       ~Func:get_variable
   48:  COPY      S3, V0
   4C:  LW        A1, 0 (S0)
   50:  ADDIU     S0, S0, 4
   54:  COPY      A0, S1
   58:  JAL       ~Func:get_variable
   5C:  COPY      S4, V0
   60:  COPY      A0, S1
   64:  LW        A1, 0 (S0)
   68:  JAL       ~Func:get_variable
   6C:  COPY      S2, V0
   70:  MTC1      V0, F20
   74:  NOP
   78:  CVT.S.W   F20, F20
   7C:  JAL       ~Func:cos_deg
   80:  MOV.S     F12, F20
   84:  MTC1      S2, F22
   88:  NOP
   8C:  CVT.S.W   F22, F22
   90:  MUL.S     F0, F22, F0
   94:  NOP
   98:  MOV.S     F12, F20
   9C:  MTC1      S3, F20
   A0:  NOP
   A4:  CVT.S.W   F20, F20
   A8:  ADD.S     F20, F20, F0
   AC:  JAL       ~Func:sin_deg
   B0:  ADDIU     S0, S0, 4
   B4:  MUL.S     F22, F22, F0
   B8:  NOP
   BC:  LW        A1, 0 (S0)
   C0:  ADDIU     S0, S0, 4
   C4:  COPY      A0, S1
   C8:  MFC1      A2, F20
   CC:  MTC1      S4, F20
   D0:  NOP
   D4:  CVT.S.W   F20, F20
   D8:  JAL       ~Func:set_float_variable
   DC:  SUB.S     F20, F20, F22
   E0:  LW        A1, 0 (S0)
   E4:  MFC1      A2, F20
   E8:  JAL       ~Func:set_float_variable
   EC:  COPY      A0, S1
   F0:  LW        RA, 24 (SP)
   F4:  LW        S4, 20 (SP)
   F8:  LW        S3, 1C (SP)
   FC:  LW        S2, 18 (SP)
  100:  LW        S1, 14 (SP)
  104:  LW        S0, 10 (SP)
  108:  LDC1      F22, 30 (SP)
  10C:  LDC1      F20, 28 (SP)
  110:  LI        V0, 2
  114:  JR        RA
  118:  ADDIU     SP, SP, 38
}

PADDING: 802181E8 to 802181F0 (005B1698 to 005B16A0)
00000000 00000000

#new:Function $Function_802181F0
{
    0:  ADDIU     SP, SP, FFB8
    4:  SW        S2, 18 (SP)
    8:  COPY      S2, A0
    C:  SW        RA, 28 (SP)
   10:  SW        S5, 24 (SP)
   14:  SW        S4, 20 (SP)
   18:  SW        S3, 1C (SP)
   1C:  SW        S1, 14 (SP)
   20:  SW        S0, 10 (SP)
   24:  SDC1      F24, 40 (SP)
   28:  SDC1      F22, 38 (SP)
   2C:  SDC1      F20, 30 (SP)
   30:  LW        S0, C (S2)
   34:  LW        S4, 0 (S0)
   38:  ADDIU     S0, S0, 4
   3C:  JAL       ~Func:get_variable
   40:  COPY      A1, S4
   44:  COPY      S3, V0
   48:  LW        S5, 0 (S0)
   4C:  ADDIU     S0, S0, 4
   50:  LW        A1, 0 (S0)
   54:  ADDIU     S0, S0, 4
   58:  JAL       ~Func:get_float_variable
   5C:  COPY      A0, S2
   60:  LW        A1, 0 (S0)
   64:  ADDIU     S0, S0, 4
   68:  COPY      A0, S2
   6C:  JAL       ~Func:get_float_variable
   70:  MOV.S     F24, F0
   74:  LW        A1, 0 (S0)
   78:  ADDIU     S0, S0, 4
   7C:  COPY      A0, S2
   80:  JAL       ~Func:get_variable
   84:  MOV.S     F20, F0
   88:  LW        A1, 0 (S0)
   8C:  ADDIU     S0, S0, 4
   90:  COPY      A0, S2
   94:  JAL       ~Func:get_variable
   98:  COPY      S1, V0
   9C:  COPY      A0, S2
   A0:  LW        A1, 0 (S0)
   A4:  JAL       ~Func:get_float_variable
   A8:  COPY      S0, V0
   AC:  LIF       F2, 180.0
   B4:  LIF       F4, 3.141592
   C0:  DIV.S     F0, F0, F2
   C4:  MUL.S     F22, F0, F4
   C8:  NOP
   CC:  SUB.S     F20, F20, F24
   D0:  LIF       F0, 0.5
   D8:  NOP
   DC:  MUL.S     F20, F20, F0
   E0:  NOP
   E4:  BEQ       S0, R0, .o104
   E8:  SLT       V0, S1, S3
   EC:  BEQ       V0, R0, .o104
   F0:  COPY      A0, S2
   F4:  COPY      S3, S1
   F8:  COPY      A1, S4
   FC:  JAL       ~Func:set_variable
  100:  COPY      A2, S1
        .o104
  104:  LIF       F0, 3.141592
  110:  MTC1      S3, F12
  114:  NOP
  118:  CVT.S.W   F12, F12
  11C:  MUL.S     F12, F12, F0
  120:  NOP
  124:  MTC1      S1, F0
  128:  NOP
  12C:  CVT.S.W   F0, F0
  130:  DIV.S     F12, F12, F0
  134:  JAL       ~Func:cos_rad
  138:  ADD.S     F12, F12, F22
  13C:  MUL.S     F0, F20, F0
  140:  NOP
  144:  ADD.S     F2, F24, F20
  148:  SUB.S     F2, F2, F0
  14C:  COPY      A0, S2
  150:  MFC1      A2, F2
  154:  JAL       ~Func:set_float_variable
  158:  COPY      A1, S5
  15C:  LW        RA, 28 (SP)
  160:  LW        S5, 24 (SP)
  164:  LW        S4, 20 (SP)
  168:  LW        S3, 1C (SP)
  16C:  LW        S2, 18 (SP)
  170:  LW        S1, 14 (SP)
  174:  LW        S0, 10 (SP)
  178:  LDC1      F24, 40 (SP)
  17C:  LDC1      F22, 38 (SP)
  180:  LDC1      F20, 30 (SP)
  184:  LI        V0, 2
  188:  JR        RA
  18C:  ADDIU     SP, SP, 48
}

#new:Function $Function_80218380
{
    0:  ADDIU     SP, SP, FFD8
    4:  SW        S1, 14 (SP)
    8:  COPY      S1, A0
    C:  SW        RA, 20 (SP)
   10:  SW        S3, 1C (SP)
   14:  SW        S2, 18 (SP)
   18:  SW        S0, 10 (SP)
   1C:  LW        S0, C (S1)
   20:  LW        A1, 0 (S0)
   24:  JAL       ~Func:get_variable
   28:  ADDIU     S0, S0, 4
   2C:  LW        A1, 0 (S0)
   30:  ADDIU     S0, S0, 4
   34:  COPY      A0, S1
   38:  JAL       ~Func:get_variable
   3C:  COPY      S3, V0
   40:  LW        A1, 0 (S0)
   44:  ADDIU     S0, S0, 4
   48:  COPY      A0, S1
   4C:  JAL       ~Func:get_variable
   50:  COPY      S2, V0
   54:  COPY      A0, S1
   58:  LW        A1, 0 (S0)
   5C:  JAL       ~Func:get_variable
   60:  COPY      S0, V0
   64:  LW        A0, 148 (S1)
   68:  JAL       ~Func:get_actor
   6C:  COPY      S1, V0
   70:  COPY      V1, V0
   74:  LW        V0, 8 (V1)
   78:  LBU       V0, 24 (V0)
   7C:  LW        A0, 8 (V1)
   80:  SUBU      S3, S3, V0
   84:  SB        S3, 194 (V1)
   88:  LBU       V0, 25 (A0)
   8C:  SUBU      S2, S2, V0
   90:  SB        S2, 195 (V1)
   94:  LBU       V0, 26 (A0)
   98:  SUBU      S0, S0, V0
   9C:  SB        S0, 196 (V1)
   A0:  LBU       A0, 27 (A0)
   A4:  SUBU      S1, S1, A0
   A8:  SB        S1, 197 (V1)
   AC:  LW        RA, 20 (SP)
   B0:  LW        S3, 1C (SP)
   B4:  LW        S2, 18 (SP)
   B8:  LW        S1, 14 (SP)
   BC:  LW        S0, 10 (SP)
   C0:  LI        V0, 2
   C4:  JR        RA
   C8:  ADDIU     SP, SP, 28
}

#new:Function $Function_8021844C
{
    0:  ADDIU     SP, SP, FFD0
    4:  SW        S1, 14 (SP)
    8:  COPY      S1, A0
    C:  SW        RA, 24 (SP)
   10:  SW        S4, 20 (SP)
   14:  SW        S3, 1C (SP)
   18:  SW        S2, 18 (SP)
   1C:  SW        S0, 10 (SP)
   20:  SDC1      F20, 28 (SP)
   24:  LW        S0, C (S1)
   28:  LW        A1, 0 (S0)
   2C:  JAL       ~Func:get_variable
   30:  ADDIU     S0, S0, 4
   34:  LW        S4, 0 (S0)
   38:  ADDIU     S0, S0, 4
   3C:  LW        A1, 0 (S0)
   40:  ADDIU     S0, S0, 4
   44:  COPY      A0, S1
   48:  JAL       ~Func:get_variable
   4C:  COPY      S2, V0
   50:  LW        A1, 0 (S0)
   54:  ADDIU     S0, S0, 4
   58:  COPY      A0, S1
   5C:  JAL       ~Func:get_variable
   60:  COPY      S3, V0
   64:  COPY      A0, S1
   68:  LW        A1, 0 (S0)
   6C:  JAL       ~Func:get_float_variable
   70:  COPY      S0, V0
   74:  LIF       F8, 6.283184
   80:  MTC1      S2, F4
   84:  NOP
   88:  CVT.S.W   F4, F4
   8C:  MUL.S     F8, F4, F8
   90:  NOP
   94:  MTC1      S0, F6
   98:  NOP
   9C:  CVT.S.W   F6, F6
   A0:  LIF       F2, 1.0
   A8:  DIV.S     F4, F4, F6
   AC:  SUB.S     F2, F2, F4
   B0:  MUL.S     F20, F0, F2
   B4:  NOP
   B8:  MTC1      S3, F12
   BC:  NOP
   C0:  CVT.S.W   F12, F12
   C4:  JAL       ~Func:cos_rad
   C8:  DIV.S     F12, F8, F12
   CC:  MUL.S     F20, F20, F0
   D0:  NOP
   D4:  COPY      A0, S1
   D8:  TRUNC.W.S F10, F20
   DC:  MFC1      A2, F10
   E0:  JAL       ~Func:set_variable
   E4:  COPY      A1, S4
   E8:  LW        RA, 24 (SP)
   EC:  LW        S4, 20 (SP)
   F0:  LW        S3, 1C (SP)
   F4:  LW        S2, 18 (SP)
   F8:  LW        S1, 14 (SP)
   FC:  LW        S0, 10 (SP)
  100:  LDC1      F20, 28 (SP)
  104:  LI        V0, 2
  108:  JR        RA
  10C:  ADDIU     SP, SP, 30
}

PADDING: 8021855C to 80218560 (005B1A0C to 005B1A10)
00000000

% Origin: HINT
#new:Function $Function_80218560
{
    0:  ADDIU     SP, SP, FFA0
    4:  SW        S1, 24 (SP)
    8:  COPY      S1, A0
    C:  SW        RA, 28 (SP)
   10:  SW        S0, 20 (SP)
   14:  SDC1      F30, 58 (SP)
   18:  SDC1      F28, 50 (SP)
   1C:  SDC1      F26, 48 (SP)
   20:  SDC1      F24, 40 (SP)
   24:  SDC1      F22, 38 (SP)
   28:  SDC1      F20, 30 (SP)
   2C:  LW        S0, C (S1)
   30:  LW        A1, 0 (S0)
   34:  JAL       ~Func:get_float_variable
   38:  ADDIU     S0, S0, 4
   3C:  LW        A1, 0 (S0)
   40:  ADDIU     S0, S0, 4
   44:  COPY      A0, S1
   48:  JAL       ~Func:get_float_variable
   4C:  MOV.S     F30, F0
   50:  LW        A1, 0 (S0)
   54:  ADDIU     S0, S0, 4
   58:  COPY      A0, S1
   5C:  JAL       ~Func:get_float_variable
   60:  MOV.S     F20, F0
   64:  LW        A1, 0 (S0)
   68:  ADDIU     S0, S0, 4
   6C:  COPY      A0, S1
   70:  JAL       ~Func:get_float_variable
   74:  MOV.S     F28, F0
   78:  LW        A1, 0 (S0)
   7C:  ADDIU     S0, S0, 4
   80:  COPY      A0, S1
   84:  JAL       ~Func:get_float_variable
   88:  MOV.S     F26, F0
   8C:  LW        A1, 0 (S0)
   90:  ADDIU     S0, S0, 4
   94:  COPY      A0, S1
   98:  JAL       ~Func:get_float_variable
   9C:  MOV.S     F24, F0
   A0:  COPY      A0, S1
   A4:  LW        A1, 0 (S0)
   A8:  JAL       ~Func:get_variable
   AC:  MOV.S     F22, F0
   B0:  LW        A0, 148 (S1)
   B4:  JAL       ~Func:get_actor
   B8:  COPY      S0, V0
   BC:  CVT.D.S   F20, F20
   C0:  MFC1      A1, F30
   C4:  LIF       F1, 2.3125
   CC:  MTC1      R0, F0
   D0:  MFC1      A3, F28
   D4:  ADD.D     F20, F20, F0
   D8:  CLEAR     A0
   DC:  SW        S0, 1C (SP)
   E0:  CVT.S.D   F20, F20
   E4:  MFC1      A2, F20
   E8:  COPY      S0, V0
   EC:  SWC1      F26, 10 (SP)
   F0:  SWC1      F24, 14 (SP)
   F4:  JAL       ~Func:playFX_12
   F8:  SWC1      F22, 18 (SP)
   FC:  COPY      A0, V0
  100:  LB        V1, 210 (S0)
  104:  LI        V0, A
  108:  BNE       V1, V0, .o128
  10C:  NOP
  110:  LW        V0, C (A0)
  114:  LIF       F0, 0.39804688
  120:  NOP
  124:  SWC1      F0, 28 (V0)
        .o128
  128:  LW        RA, 28 (SP)
  12C:  LW        S1, 24 (SP)
  130:  LW        S0, 20 (SP)
  134:  LDC1      F30, 58 (SP)
  138:  LDC1      F28, 50 (SP)
  13C:  LDC1      F26, 48 (SP)
  140:  LDC1      F24, 40 (SP)
  144:  LDC1      F22, 38 (SP)
  148:  LDC1      F20, 30 (SP)
  14C:  LI        V0, 2
  150:  JR        RA
  154:  ADDIU     SP, SP, 60
}

% Origin: HINT
#new:Function $Function_802186B8
{
    0:  ADDIU     SP, SP, FFE8
    4:  SW        RA, 10 (SP)
    8:  LW        V0, C (A0)
    C:  LAH       A2, 800DC1EC
   14:  JAL       ~Func:set_variable
   18:  LW        A1, 0 (V0)
   1C:  LW        RA, 10 (SP)
   20:  LI        V0, 2
   24:  JR        RA
   28:  ADDIU     SP, SP, 18
}

% Origin: HINT
#new:Function $Function_802186E4
{
    0:  ADDIU     SP, SP, FFD8
    4:  SW        S1, 14 (SP)
    8:  COPY      S1, A0
    C:  SW        RA, 20 (SP)
   10:  SW        S3, 1C (SP)
   14:  SW        S2, 18 (SP)
   18:  SW        S0, 10 (SP)
   1C:  LW        S0, C (S1)
   20:  LW        A1, 0 (S0)
   24:  JAL       ~Func:get_variable
   28:  ADDIU     S0, S0, 4
   2C:  LW        A1, 0 (S0)
   30:  ADDIU     S0, S0, 4
   34:  COPY      A0, S1
   38:  JAL       ~Func:get_variable
   3C:  COPY      S3, V0
   40:  LW        A1, 0 (S0)
   44:  ADDIU     S0, S0, 4
   48:  COPY      A0, S1
   4C:  JAL       ~Func:get_variable
   50:  COPY      S2, V0
   54:  COPY      A0, S1
   58:  LW        A1, 0 (S0)
   5C:  JAL       ~Func:get_variable
   60:  COPY      S0, V0
   64:  LW        A0, 148 (S1)
   68:  JAL       ~Func:get_actor
   6C:  COPY      S1, V0
   70:  COPY      V1, V0
   74:  LW        V0, 8 (V1)
   78:  LBU       V0, 24 (V0)
   7C:  LW        A0, 8 (V1)
   80:  SUBU      S3, S3, V0
   84:  SB        S3, 194 (V1)
   88:  LBU       V0, 25 (A0)
   8C:  SUBU      S2, S2, V0
   90:  SB        S2, 195 (V1)
   94:  LBU       V0, 26 (A0)
   98:  SUBU      S0, S0, V0
   9C:  SB        S0, 196 (V1)
   A0:  LBU       A0, 27 (A0)
   A4:  SUBU      S1, S1, A0
   A8:  SB        S1, 197 (V1)
   AC:  LW        RA, 20 (SP)
   B0:  LW        S3, 1C (SP)
   B4:  LW        S2, 18 (SP)
   B8:  LW        S1, 14 (SP)
   BC:  LW        S0, 10 (SP)
   C0:  LI        V0, 2
   C4:  JR        RA
   C8:  ADDIU     SP, SP, 28
}

% Origin: HINT
#new:Function $Function_802187B0
{
    0:  ADDIU     SP, SP, FFE0
    4:  SW        S1, 14 (SP)
    8:  COPY      S1, A0
    C:  SW        RA, 18 (SP)
   10:  SW        S0, 10 (SP)
   14:  LW        S0, C (S1)
   18:  LW        A1, 0 (S0)
   1C:  JAL       ~Func:get_variable
   20:  ADDIU     S0, S0, 4
   24:  COPY      A0, S1
   28:  LW        A1, 0 (S0)
   2C:  JAL       ~Func:get_variable
   30:  COPY      S0, V0
   34:  COPY      A0, S0
   38:  JAL       ~Func:start_rumble
   3C:  COPY      A1, V0
   40:  LW        RA, 18 (SP)
   44:  LW        S1, 14 (SP)
   48:  LW        S0, 10 (SP)
   4C:  LI        V0, 2
   50:  JR        RA
   54:  ADDIU     SP, SP, 20
}

% Origin: HINT
#new:Function $Function_80218808
{
    0:  ADDIU     SP, SP, FFE0
    4:  SW        S1, 14 (SP)
    8:  COPY      S1, A0
    C:  SW        RA, 18 (SP)
   10:  SW        S0, 10 (SP)
   14:  LW        S0, C (S1)
   18:  LW        A1, 0 (S0)
   1C:  JAL       ~Func:get_variable
   20:  ADDIU     S0, S0, 4
   24:  COPY      A0, V0
   28:  LI        V0, FF81
   2C:  BNE       A0, V0, .o38
   30:  NOP
   34:  LW        A0, 148 (S1)
        .o38
   38:  JAL       ~Func:get_actor
   3C:  NOP
   40:  COPY      A0, V0
   44:  LBU       V1, 136 (A0)
   48:  LI        V0, 47
   4C:  BEQ       V1, V0, .o7C
   50:  SLT       V0, V1, V0
   54:  BNEL      V0, R0, .o9C
   58:  COPY      A0, S1
   5C:  SLTI      V0, V1, 65
   60:  BEQ       V0, R0, .o98
   64:  SLTI      V0, V1, 4D
   68:  BNE       V0, R0, .o9C
   6C:  COPY      A0, S1
   70:  LW        A1, 0 (S0)
   74:  BEQ       R0, R0, .oA4
   78:  LI        A2, FFFF
        .o7C
   7C:  LW        V1, A8 (A0)
   80:  LI        V0, 1
   84:  BNE       V1, V0, .o9C
   88:  COPY      A0, S1
   8C:  LW        A1, 0 (S0)
   90:  BEQ       R0, R0, .oA4
   94:  LI        A2, FFFF
        .o98
   98:  COPY      A0, S1
        .o9C
   9C:  LW        A1, 0 (S0)
   A0:  CLEAR     A2
        .oA4
   A4:  JAL       ~Func:set_variable
   A8:  NOP
   AC:  LW        RA, 18 (SP)
   B0:  LW        S1, 14 (SP)
   B4:  LW        S0, 10 (SP)
   B8:  LI        V0, 2
   BC:  JR        RA
   C0:  ADDIU     SP, SP, 20
}

PADDING: 802188CC to 802188D0 (005B1D7C to 005B1D80)
00000000

% Origin: HINT
#new:Function $Function_802188D0
{
    0:  ADDIU     SP, SP, FFA0
    4:  SW        S1, 24 (SP)
    8:  COPY      S1, A0
    C:  SW        RA, 28 (SP)
   10:  SW        S0, 20 (SP)
   14:  SDC1      F30, 58 (SP)
   18:  SDC1      F28, 50 (SP)
   1C:  SDC1      F26, 48 (SP)
   20:  SDC1      F24, 40 (SP)
   24:  SDC1      F22, 38 (SP)
   28:  SDC1      F20, 30 (SP)
   2C:  LW        S0, C (S1)
   30:  LW        A1, 0 (S0)
   34:  JAL       ~Func:get_float_variable
   38:  ADDIU     S0, S0, 4
   3C:  LW        A1, 0 (S0)
   40:  ADDIU     S0, S0, 4
   44:  COPY      A0, S1
   48:  JAL       ~Func:get_float_variable
   4C:  MOV.S     F30, F0
   50:  LW        A1, 0 (S0)
   54:  ADDIU     S0, S0, 4
   58:  COPY      A0, S1
   5C:  JAL       ~Func:get_float_variable
   60:  MOV.S     F20, F0
   64:  LW        A1, 0 (S0)
   68:  ADDIU     S0, S0, 4
   6C:  COPY      A0, S1
   70:  JAL       ~Func:get_float_variable
   74:  MOV.S     F28, F0
   78:  LW        A1, 0 (S0)
   7C:  ADDIU     S0, S0, 4
   80:  COPY      A0, S1
   84:  JAL       ~Func:get_float_variable
   88:  MOV.S     F26, F0
   8C:  LW        A1, 0 (S0)
   90:  ADDIU     S0, S0, 4
   94:  COPY      A0, S1
   98:  JAL       ~Func:get_float_variable
   9C:  MOV.S     F24, F0
   A0:  COPY      A0, S1
   A4:  LW        A1, 0 (S0)
   A8:  JAL       ~Func:get_variable
   AC:  MOV.S     F22, F0
   B0:  LW        A0, 148 (S1)
   B4:  JAL       ~Func:get_actor
   B8:  COPY      S0, V0
   BC:  CVT.D.S   F20, F20
   C0:  MFC1      A1, F30
   C4:  LIF       F1, 2.3125
   CC:  MTC1      R0, F0
   D0:  MFC1      A3, F28
   D4:  ADD.D     F20, F20, F0
   D8:  CLEAR     A0
   DC:  SW        S0, 1C (SP)
   E0:  CVT.S.D   F20, F20
   E4:  MFC1      A2, F20
   E8:  COPY      S0, V0
   EC:  SWC1      F26, 10 (SP)
   F0:  SWC1      F24, 14 (SP)
   F4:  JAL       ~Func:playFX_12
   F8:  SWC1      F22, 18 (SP)
   FC:  COPY      A0, V0
  100:  LB        V1, 210 (S0)
  104:  LI        V0, A
  108:  BNE       V1, V0, .o128
  10C:  NOP
  110:  LW        V0, C (A0)
  114:  LIF       F0, 0.39804688
  120:  NOP
  124:  SWC1      F0, 28 (V0)
        .o128
  128:  LW        RA, 28 (SP)
  12C:  LW        S1, 24 (SP)
  130:  LW        S0, 20 (SP)
  134:  LDC1      F30, 58 (SP)
  138:  LDC1      F28, 50 (SP)
  13C:  LDC1      F26, 48 (SP)
  140:  LDC1      F24, 40 (SP)
  144:  LDC1      F22, 38 (SP)
  148:  LDC1      F20, 30 (SP)
  14C:  LI        V0, 2
  150:  JR        RA
  154:  ADDIU     SP, SP, 60
}

#new:Function $Function_80218A28
{
    0:  ADDIU     SP, SP, FFE8
    4:  SW        RA, 10 (SP)
    8:  LW        V0, C (A0)
    C:  LAH       A2, 800DC1EC
   14:  JAL       ~Func:set_variable
   18:  LW        A1, 0 (V0)
   1C:  LW        RA, 10 (SP)
   20:  LI        V0, 2
   24:  JR        RA
   28:  ADDIU     SP, SP, 18
}

#new:Function $Function_80218A54
{
    0:  ADDIU     SP, SP, FFD8
    4:  SW        S1, 14 (SP)
    8:  COPY      S1, A0
    C:  SW        RA, 20 (SP)
   10:  SW        S3, 1C (SP)
   14:  SW        S2, 18 (SP)
   18:  SW        S0, 10 (SP)
   1C:  LW        S0, C (S1)
   20:  LW        A1, 0 (S0)
   24:  JAL       ~Func:get_variable
   28:  ADDIU     S0, S0, 4
   2C:  LW        A1, 0 (S0)
   30:  ADDIU     S0, S0, 4
   34:  COPY      A0, S1
   38:  JAL       ~Func:get_variable
   3C:  COPY      S3, V0
   40:  LW        A1, 0 (S0)
   44:  ADDIU     S0, S0, 4
   48:  COPY      A0, S1
   4C:  JAL       ~Func:get_variable
   50:  COPY      S2, V0
   54:  COPY      A0, S1
   58:  LW        A1, 0 (S0)
   5C:  JAL       ~Func:get_variable
   60:  COPY      S0, V0
   64:  LW        A0, 148 (S1)
   68:  JAL       ~Func:get_actor
   6C:  COPY      S1, V0
   70:  COPY      V1, V0
   74:  LW        V0, 8 (V1)
   78:  LBU       V0, 24 (V0)
   7C:  LW        A0, 8 (V1)
   80:  SUBU      S3, S3, V0
   84:  SB        S3, 194 (V1)
   88:  LBU       V0, 25 (A0)
   8C:  SUBU      S2, S2, V0
   90:  SB        S2, 195 (V1)
   94:  LBU       V0, 26 (A0)
   98:  SUBU      S0, S0, V0
   9C:  SB        S0, 196 (V1)
   A0:  LBU       A0, 27 (A0)
   A4:  SUBU      S1, S1, A0
   A8:  SB        S1, 197 (V1)
   AC:  LW        RA, 20 (SP)
   B0:  LW        S3, 1C (SP)
   B4:  LW        S2, 18 (SP)
   B8:  LW        S1, 14 (SP)
   BC:  LW        S0, 10 (SP)
   C0:  LI        V0, 2
   C4:  JR        RA
   C8:  ADDIU     SP, SP, 28
}

#new:Function $Function_80218B20
{
    0:  ADDIU     SP, SP, FFE0
    4:  SW        S1, 14 (SP)
    8:  COPY      S1, A0
    C:  SW        RA, 18 (SP)
   10:  SW        S0, 10 (SP)
   14:  LW        S0, C (S1)
   18:  LW        A1, 0 (S0)
   1C:  JAL       ~Func:get_variable
   20:  ADDIU     S0, S0, 4
   24:  COPY      A0, S1
   28:  LW        A1, 0 (S0)
   2C:  JAL       ~Func:get_variable
   30:  COPY      S0, V0
   34:  COPY      A0, S0
   38:  JAL       ~Func:start_rumble
   3C:  COPY      A1, V0
   40:  LW        RA, 18 (SP)
   44:  LW        S1, 14 (SP)
   48:  LW        S0, 10 (SP)
   4C:  LI        V0, 2
   50:  JR        RA
   54:  ADDIU     SP, SP, 20
}

% Origin: HINT
#new:Function $Function_80218B78
{
    0:  ADDIU     SP, SP, FFE0
    4:  SW        S1, 14 (SP)
    8:  COPY      S1, A0
    C:  SW        RA, 18 (SP)
   10:  SW        S0, 10 (SP)
   14:  LW        S0, C (S1)
   18:  LW        A1, 0 (S0)
   1C:  JAL       ~Func:get_variable
   20:  ADDIU     S0, S0, 4
   24:  COPY      A0, V0
   28:  LI        V0, FF81
   2C:  BNE       A0, V0, .o38
   30:  NOP
   34:  LW        A0, 148 (S1)
        .o38
   38:  JAL       ~Func:get_actor
   3C:  NOP
   40:  COPY      A0, V0
   44:  LBU       V1, 136 (A0)
   48:  LI        V0, 47
   4C:  BEQ       V1, V0, .o7C
   50:  SLT       V0, V1, V0
   54:  BNEL      V0, R0, .o9C
   58:  COPY      A0, S1
   5C:  SLTI      V0, V1, 65
   60:  BEQ       V0, R0, .o98
   64:  SLTI      V0, V1, 4D
   68:  BNE       V0, R0, .o9C
   6C:  COPY      A0, S1
   70:  LW        A1, 0 (S0)
   74:  BEQ       R0, R0, .oA4
   78:  LI        A2, FFFF
        .o7C
   7C:  LW        V1, A8 (A0)
   80:  LI        V0, 1
   84:  BNE       V1, V0, .o9C
   88:  COPY      A0, S1
   8C:  LW        A1, 0 (S0)
   90:  BEQ       R0, R0, .oA4
   94:  LI        A2, FFFF
        .o98
   98:  COPY      A0, S1
        .o9C
   9C:  LW        A1, 0 (S0)
   A0:  CLEAR     A2
        .oA4
   A4:  JAL       ~Func:set_variable
   A8:  NOP
   AC:  LW        RA, 18 (SP)
   B0:  LW        S1, 14 (SP)
   B4:  LW        S0, 10 (SP)
   B8:  LI        V0, 2
   BC:  JR        RA
   C0:  ADDIU     SP, SP, 20
}

PADDING: 80218C3C to 80218C40 (005B20EC to 005B20F0)
00000000

% Origin: HINT
#new:Function $Function_80218C40
{
    0:  ADDIU     SP, SP, FFA0
    4:  SW        S1, 24 (SP)
    8:  COPY      S1, A0
    C:  SW        RA, 28 (SP)
   10:  SW        S0, 20 (SP)
   14:  SDC1      F30, 58 (SP)
   18:  SDC1      F28, 50 (SP)
   1C:  SDC1      F26, 48 (SP)
   20:  SDC1      F24, 40 (SP)
   24:  SDC1      F22, 38 (SP)
   28:  SDC1      F20, 30 (SP)
   2C:  LW        S0, C (S1)
   30:  LW        A1, 0 (S0)
   34:  JAL       ~Func:get_float_variable
   38:  ADDIU     S0, S0, 4
   3C:  LW        A1, 0 (S0)
   40:  ADDIU     S0, S0, 4
   44:  COPY      A0, S1
   48:  JAL       ~Func:get_float_variable
   4C:  MOV.S     F30, F0
   50:  LW        A1, 0 (S0)
   54:  ADDIU     S0, S0, 4
   58:  COPY      A0, S1
   5C:  JAL       ~Func:get_float_variable
   60:  MOV.S     F20, F0
   64:  LW        A1, 0 (S0)
   68:  ADDIU     S0, S0, 4
   6C:  COPY      A0, S1
   70:  JAL       ~Func:get_float_variable
   74:  MOV.S     F28, F0
   78:  LW        A1, 0 (S0)
   7C:  ADDIU     S0, S0, 4
   80:  COPY      A0, S1
   84:  JAL       ~Func:get_float_variable
   88:  MOV.S     F26, F0
   8C:  LW        A1, 0 (S0)
   90:  ADDIU     S0, S0, 4
   94:  COPY      A0, S1
   98:  JAL       ~Func:get_float_variable
   9C:  MOV.S     F24, F0
   A0:  COPY      A0, S1
   A4:  LW        A1, 0 (S0)
   A8:  JAL       ~Func:get_variable
   AC:  MOV.S     F22, F0
   B0:  LW        A0, 148 (S1)
   B4:  JAL       ~Func:get_actor
   B8:  COPY      S0, V0
   BC:  CVT.D.S   F20, F20
   C0:  MFC1      A1, F30
   C4:  LIF       F1, 2.3125
   CC:  MTC1      R0, F0
   D0:  MFC1      A3, F28
   D4:  ADD.D     F20, F20, F0
   D8:  CLEAR     A0
   DC:  SW        S0, 1C (SP)
   E0:  CVT.S.D   F20, F20
   E4:  MFC1      A2, F20
   E8:  COPY      S0, V0
   EC:  SWC1      F26, 10 (SP)
   F0:  SWC1      F24, 14 (SP)
   F4:  JAL       ~Func:playFX_12
   F8:  SWC1      F22, 18 (SP)
   FC:  COPY      A0, V0
  100:  LB        V1, 210 (S0)
  104:  LI        V0, A
  108:  BNE       V1, V0, .o128
  10C:  NOP
  110:  LW        V0, C (A0)
  114:  LIF       F0, 0.39804688
  120:  NOP
  124:  SWC1      F0, 28 (V0)
        .o128
  128:  LW        RA, 28 (SP)
  12C:  LW        S1, 24 (SP)
  130:  LW        S0, 20 (SP)
  134:  LDC1      F30, 58 (SP)
  138:  LDC1      F28, 50 (SP)
  13C:  LDC1      F26, 48 (SP)
  140:  LDC1      F24, 40 (SP)
  144:  LDC1      F22, 38 (SP)
  148:  LDC1      F20, 30 (SP)
  14C:  LI        V0, 2
  150:  JR        RA
  154:  ADDIU     SP, SP, 60
}

% Origin: HINT
#new:Function $Function_80218D98
{
    0:  ADDIU     SP, SP, FFE8
    4:  SW        RA, 10 (SP)
    8:  LW        V0, C (A0)
    C:  LAH       A2, 800DC1EC
   14:  JAL       ~Func:set_variable
   18:  LW        A1, 0 (V0)
   1C:  LW        RA, 10 (SP)
   20:  LI        V0, 2
   24:  JR        RA
   28:  ADDIU     SP, SP, 18
}

% Origin: HINT
#new:Function $Function_80218DC4
{
    0:  ADDIU     SP, SP, FFD8
    4:  SW        S1, 14 (SP)
    8:  COPY      S1, A0
    C:  SW        RA, 20 (SP)
   10:  SW        S3, 1C (SP)
   14:  SW        S2, 18 (SP)
   18:  SW        S0, 10 (SP)
   1C:  LW        S0, C (S1)
   20:  LW        A1, 0 (S0)
   24:  JAL       ~Func:get_variable
   28:  ADDIU     S0, S0, 4
   2C:  LW        A1, 0 (S0)
   30:  ADDIU     S0, S0, 4
   34:  COPY      A0, S1
   38:  JAL       ~Func:get_variable
   3C:  COPY      S3, V0
   40:  LW        A1, 0 (S0)
   44:  ADDIU     S0, S0, 4
   48:  COPY      A0, S1
   4C:  JAL       ~Func:get_variable
   50:  COPY      S2, V0
   54:  COPY      A0, S1
   58:  LW        A1, 0 (S0)
   5C:  JAL       ~Func:get_variable
   60:  COPY      S0, V0
   64:  LW        A0, 148 (S1)
   68:  JAL       ~Func:get_actor
   6C:  COPY      S1, V0
   70:  COPY      V1, V0
   74:  LW        V0, 8 (V1)
   78:  LBU       V0, 24 (V0)
   7C:  LW        A0, 8 (V1)
   80:  SUBU      S3, S3, V0
   84:  SB        S3, 194 (V1)
   88:  LBU       V0, 25 (A0)
   8C:  SUBU      S2, S2, V0
   90:  SB        S2, 195 (V1)
   94:  LBU       V0, 26 (A0)
   98:  SUBU      S0, S0, V0
   9C:  SB        S0, 196 (V1)
   A0:  LBU       A0, 27 (A0)
   A4:  SUBU      S1, S1, A0
   A8:  SB        S1, 197 (V1)
   AC:  LW        RA, 20 (SP)
   B0:  LW        S3, 1C (SP)
   B4:  LW        S2, 18 (SP)
   B8:  LW        S1, 14 (SP)
   BC:  LW        S0, 10 (SP)
   C0:  LI        V0, 2
   C4:  JR        RA
   C8:  ADDIU     SP, SP, 28
}

% Origin: HINT
#new:Function $Function_80218E90
{
    0:  ADDIU     SP, SP, FFE0
    4:  SW        S1, 14 (SP)
    8:  COPY      S1, A0
    C:  SW        RA, 18 (SP)
   10:  SW        S0, 10 (SP)
   14:  LW        S0, C (S1)
   18:  LW        A1, 0 (S0)
   1C:  JAL       ~Func:get_variable
   20:  ADDIU     S0, S0, 4
   24:  COPY      A0, S1
   28:  LW        A1, 0 (S0)
   2C:  JAL       ~Func:get_variable
   30:  COPY      S0, V0
   34:  COPY      A0, S0
   38:  JAL       ~Func:start_rumble
   3C:  COPY      A1, V0
   40:  LW        RA, 18 (SP)
   44:  LW        S1, 14 (SP)
   48:  LW        S0, 10 (SP)
   4C:  LI        V0, 2
   50:  JR        RA
   54:  ADDIU     SP, SP, 20
}

% Origin: HINT
#new:Function $Function_80218EE8
{
    0:  ADDIU     SP, SP, FFE0
    4:  SW        S1, 14 (SP)
    8:  COPY      S1, A0
    C:  SW        RA, 18 (SP)
   10:  SW        S0, 10 (SP)
   14:  LW        S0, C (S1)
   18:  LW        A1, 0 (S0)
   1C:  JAL       ~Func:get_variable
   20:  ADDIU     S0, S0, 4
   24:  COPY      A0, V0
   28:  LI        V0, FF81
   2C:  BNE       A0, V0, .o38
   30:  NOP
   34:  LW        A0, 148 (S1)
        .o38
   38:  JAL       ~Func:get_actor
   3C:  NOP
   40:  COPY      A0, V0
   44:  LBU       V1, 136 (A0)
   48:  LI        V0, 47
   4C:  BEQ       V1, V0, .o7C
   50:  SLT       V0, V1, V0
   54:  BNEL      V0, R0, .o9C
   58:  COPY      A0, S1
   5C:  SLTI      V0, V1, 65
   60:  BEQ       V0, R0, .o98
   64:  SLTI      V0, V1, 4D
   68:  BNE       V0, R0, .o9C
   6C:  COPY      A0, S1
   70:  LW        A1, 0 (S0)
   74:  BEQ       R0, R0, .oA4
   78:  LI        A2, FFFF
        .o7C
   7C:  LW        V1, A8 (A0)
   80:  LI        V0, 1
   84:  BNE       V1, V0, .o9C
   88:  COPY      A0, S1
   8C:  LW        A1, 0 (S0)
   90:  BEQ       R0, R0, .oA4
   94:  LI        A2, FFFF
        .o98
   98:  COPY      A0, S1
        .o9C
   9C:  LW        A1, 0 (S0)
   A0:  CLEAR     A2
        .oA4
   A4:  JAL       ~Func:set_variable
   A8:  NOP
   AC:  LW        RA, 18 (SP)
   B0:  LW        S1, 14 (SP)
   B4:  LW        S0, 10 (SP)
   B8:  LI        V0, 2
   BC:  JR        RA
   C0:  ADDIU     SP, SP, 20
}

% Origin: HINT
#new:Function $Function_80218FAC
{
    0:  ADDIU     SP, SP, FFE0
    4:  SW        S1, 14 (SP)
    8:  COPY      S1, A0
    C:  SW        S2, 18 (SP)
   10:  LA        S2, 8010F290
   18:  SW        RA, 1C (SP)
   1C:  SW        S0, 10 (SP)
   20:  LW        S0, C (S1)
   24:  LB        A2, 0 (S2)
   28:  LW        A1, 0 (S0)
   2C:  JAL       ~Func:set_variable
   30:  ADDIU     S0, S0, 4
   34:  LW        A1, 0 (S0)
   38:  LB        A2, 1 (S2)
   3C:  JAL       ~Func:set_variable
   40:  COPY      A0, S1
   44:  LW        RA, 1C (SP)
   48:  LW        S2, 18 (SP)
   4C:  LW        S1, 14 (SP)
   50:  LW        S0, 10 (SP)
   54:  LI        V0, 2
   58:  JR        RA
   5C:  ADDIU     SP, SP, 20
}

% Origin: HINT
#new:Function $Function_8021900C
{
    0:  ADDIU     SP, SP, FFD8
    4:  SW        S3, 1C (SP)
    8:  COPY      S3, A0
    C:  SW        RA, 20 (SP)
   10:  SW        S2, 18 (SP)
   14:  SW        S1, 14 (SP)
   18:  SW        S0, 10 (SP)
   1C:  LW        S0, C (S3)
   20:  LW        A1, 0 (S0)
   24:  JAL       ~Func:get_variable
   28:  ADDIU     S0, S0, 4
   2C:  COPY      S1, V0
   30:  LW        A1, 0 (S0)
   34:  ADDIU     S0, S0, 4
   38:  JAL       ~Func:get_variable
   3C:  COPY      A0, S3
   40:  COPY      S2, V0
   44:  LI        V0, FF81
   48:  BNE       S1, V0, .o54
   4C:  NOP
   50:  LW        S1, 148 (S3)
        .o54
   54:  JAL       ~Func:get_actor
   58:  COPY      A0, S1
   5C:  COPY      A0, V0
   60:  JAL       ~Func:get_actor_part
   64:  COPY      A1, S2
   68:  LW        A0, 78 (V0)
   6C:  JAL       ~Func:lookup_defense
   70:  LI        A1, 1
   74:  COPY      A0, S3
   78:  LW        A1, 0 (S0)
   7C:  JAL       ~Func:set_variable
   80:  COPY      A2, V0
   84:  LW        RA, 20 (SP)
   88:  LW        S3, 1C (SP)
   8C:  LW        S2, 18 (SP)
   90:  LW        S1, 14 (SP)
   94:  LW        S0, 10 (SP)
   98:  LI        V0, 2
   9C:  JR        RA
   A0:  ADDIU     SP, SP, 28
}

#new:Function $Function_802190B0
{
    0:  ADDIU     SP, SP, FFA0
    4:  SW        S1, 24 (SP)
    8:  COPY      S1, A0
    C:  SW        RA, 28 (SP)
   10:  SW        S0, 20 (SP)
   14:  SDC1      F30, 58 (SP)
   18:  SDC1      F28, 50 (SP)
   1C:  SDC1      F26, 48 (SP)
   20:  SDC1      F24, 40 (SP)
   24:  SDC1      F22, 38 (SP)
   28:  SDC1      F20, 30 (SP)
   2C:  LW        S0, C (S1)
   30:  LW        A1, 0 (S0)
   34:  JAL       ~Func:get_float_variable
   38:  ADDIU     S0, S0, 4
   3C:  LW        A1, 0 (S0)
   40:  ADDIU     S0, S0, 4
   44:  COPY      A0, S1
   48:  JAL       ~Func:get_float_variable
   4C:  MOV.S     F30, F0
   50:  LW        A1, 0 (S0)
   54:  ADDIU     S0, S0, 4
   58:  COPY      A0, S1
   5C:  JAL       ~Func:get_float_variable
   60:  MOV.S     F20, F0
   64:  LW        A1, 0 (S0)
   68:  ADDIU     S0, S0, 4
   6C:  COPY      A0, S1
   70:  JAL       ~Func:get_float_variable
   74:  MOV.S     F28, F0
   78:  LW        A1, 0 (S0)
   7C:  ADDIU     S0, S0, 4
   80:  COPY      A0, S1
   84:  JAL       ~Func:get_float_variable
   88:  MOV.S     F26, F0
   8C:  LW        A1, 0 (S0)
   90:  ADDIU     S0, S0, 4
   94:  COPY      A0, S1
   98:  JAL       ~Func:get_float_variable
   9C:  MOV.S     F24, F0
   A0:  COPY      A0, S1
   A4:  LW        A1, 0 (S0)
   A8:  JAL       ~Func:get_variable
   AC:  MOV.S     F22, F0
   B0:  LW        A0, 148 (S1)
   B4:  JAL       ~Func:get_actor
   B8:  COPY      S0, V0
   BC:  CVT.D.S   F20, F20
   C0:  MFC1      A1, F30
   C4:  LIF       F1, 2.3125
   CC:  MTC1      R0, F0
   D0:  MFC1      A3, F28
   D4:  ADD.D     F20, F20, F0
   D8:  CLEAR     A0
   DC:  SW        S0, 1C (SP)
   E0:  CVT.S.D   F20, F20
   E4:  MFC1      A2, F20
   E8:  COPY      S0, V0
   EC:  SWC1      F26, 10 (SP)
   F0:  SWC1      F24, 14 (SP)
   F4:  JAL       ~Func:playFX_12
   F8:  SWC1      F22, 18 (SP)
   FC:  COPY      A0, V0
  100:  LB        V1, 210 (S0)
  104:  LI        V0, A
  108:  BNE       V1, V0, .o128
  10C:  NOP
  110:  LW        V0, C (A0)
  114:  LIF       F0, 0.39804688
  120:  NOP
  124:  SWC1      F0, 28 (V0)
        .o128
  128:  LW        RA, 28 (SP)
  12C:  LW        S1, 24 (SP)
  130:  LW        S0, 20 (SP)
  134:  LDC1      F30, 58 (SP)
  138:  LDC1      F28, 50 (SP)
  13C:  LDC1      F26, 48 (SP)
  140:  LDC1      F24, 40 (SP)
  144:  LDC1      F22, 38 (SP)
  148:  LDC1      F20, 30 (SP)
  14C:  LI        V0, 2
  150:  JR        RA
  154:  ADDIU     SP, SP, 60
}

#new:Function $Function_80219208
{
    0:  ADDIU     SP, SP, FFE8
    4:  SW        RA, 10 (SP)
    8:  LW        V0, C (A0)
    C:  LAH       A2, 800DC1EC
   14:  JAL       ~Func:set_variable
   18:  LW        A1, 0 (V0)
   1C:  LW        RA, 10 (SP)
   20:  LI        V0, 2
   24:  JR        RA
   28:  ADDIU     SP, SP, 18
}

#new:Function $Function_80219234
{
    0:  ADDIU     SP, SP, FFD8
    4:  SW        S1, 14 (SP)
    8:  COPY      S1, A0
    C:  SW        RA, 20 (SP)
   10:  SW        S3, 1C (SP)
   14:  SW        S2, 18 (SP)
   18:  SW        S0, 10 (SP)
   1C:  LW        S0, C (S1)
   20:  LW        A1, 0 (S0)
   24:  JAL       ~Func:get_variable
   28:  ADDIU     S0, S0, 4
   2C:  LW        A1, 0 (S0)
   30:  ADDIU     S0, S0, 4
   34:  COPY      A0, S1
   38:  JAL       ~Func:get_variable
   3C:  COPY      S3, V0
   40:  LW        A1, 0 (S0)
   44:  ADDIU     S0, S0, 4
   48:  COPY      A0, S1
   4C:  JAL       ~Func:get_variable
   50:  COPY      S2, V0
   54:  COPY      A0, S1
   58:  LW        A1, 0 (S0)
   5C:  JAL       ~Func:get_variable
   60:  COPY      S0, V0
   64:  LW        A0, 148 (S1)
   68:  JAL       ~Func:get_actor
   6C:  COPY      S1, V0
   70:  COPY      V1, V0
   74:  LW        V0, 8 (V1)
   78:  LBU       V0, 24 (V0)
   7C:  LW        A0, 8 (V1)
   80:  SUBU      S3, S3, V0
   84:  SB        S3, 194 (V1)
   88:  LBU       V0, 25 (A0)
   8C:  SUBU      S2, S2, V0
   90:  SB        S2, 195 (V1)
   94:  LBU       V0, 26 (A0)
   98:  SUBU      S0, S0, V0
   9C:  SB        S0, 196 (V1)
   A0:  LBU       A0, 27 (A0)
   A4:  SUBU      S1, S1, A0
   A8:  SB        S1, 197 (V1)
   AC:  LW        RA, 20 (SP)
   B0:  LW        S3, 1C (SP)
   B4:  LW        S2, 18 (SP)
   B8:  LW        S1, 14 (SP)
   BC:  LW        S0, 10 (SP)
   C0:  LI        V0, 2
   C4:  JR        RA
   C8:  ADDIU     SP, SP, 28
}

#new:Function $Function_80219300
{
    0:  ADDIU     SP, SP, FFE0
    4:  SW        S1, 14 (SP)
    8:  COPY      S1, A0
    C:  SW        RA, 18 (SP)
   10:  SW        S0, 10 (SP)
   14:  LW        S0, C (S1)
   18:  LW        A1, 0 (S0)
   1C:  JAL       ~Func:get_variable
   20:  ADDIU     S0, S0, 4
   24:  COPY      A0, S1
   28:  LW        A1, 0 (S0)
   2C:  JAL       ~Func:get_variable
   30:  COPY      S0, V0
   34:  COPY      A0, S0
   38:  JAL       ~Func:start_rumble
   3C:  COPY      A1, V0
   40:  LW        RA, 18 (SP)
   44:  LW        S1, 14 (SP)
   48:  LW        S0, 10 (SP)
   4C:  LI        V0, 2
   50:  JR        RA
   54:  ADDIU     SP, SP, 20
}

#new:Function $Function_80219358
{
    0:  ADDIU     SP, SP, FFE0
    4:  SW        S1, 14 (SP)
    8:  COPY      S1, A0
    C:  SW        RA, 18 (SP)
   10:  SW        S0, 10 (SP)
   14:  LW        S0, C (S1)
   18:  LW        A1, 0 (S0)
   1C:  JAL       ~Func:get_variable
   20:  ADDIU     S0, S0, 4
   24:  COPY      A0, V0
   28:  LI        V0, FF81
   2C:  BNE       A0, V0, .o38
   30:  NOP
   34:  LW        A0, 148 (S1)
        .o38
   38:  JAL       ~Func:get_actor
   3C:  NOP
   40:  COPY      A0, V0
   44:  LBU       V1, 136 (A0)
   48:  LI        V0, 47
   4C:  BEQ       V1, V0, .o7C
   50:  SLT       V0, V1, V0
   54:  BNEL      V0, R0, .o9C
   58:  COPY      A0, S1
   5C:  SLTI      V0, V1, 65
   60:  BEQ       V0, R0, .o98
   64:  SLTI      V0, V1, 4D
   68:  BNE       V0, R0, .o9C
   6C:  COPY      A0, S1
   70:  LW        A1, 0 (S0)
   74:  BEQ       R0, R0, .oA4
   78:  LI        A2, FFFF
        .o7C
   7C:  LW        V1, A8 (A0)
   80:  LI        V0, 1
   84:  BNE       V1, V0, .o9C
   88:  COPY      A0, S1
   8C:  LW        A1, 0 (S0)
   90:  BEQ       R0, R0, .oA4
   94:  LI        A2, FFFF
        .o98
   98:  COPY      A0, S1
        .o9C
   9C:  LW        A1, 0 (S0)
   A0:  CLEAR     A2
        .oA4
   A4:  JAL       ~Func:set_variable
   A8:  NOP
   AC:  LW        RA, 18 (SP)
   B0:  LW        S1, 14 (SP)
   B4:  LW        S0, 10 (SP)
   B8:  LI        V0, 2
   BC:  JR        RA
   C0:  ADDIU     SP, SP, 20
}

PADDING: 8021941C to 80219420 (005B28CC to 005B28D0)
00000000

#new:Function $Function_80219420
{
    0:  ADDIU     SP, SP, FFD0
    4:  SW        S2, 20 (SP)
    8:  CLEAR     S2
    C:  SW        S1, 1C (SP)
   10:  COPY      S1, S2
   14:  SW        S3, 24 (SP)
   18:  LA        S3, 800934F0
   20:  SW        S0, 18 (SP)
   24:  LA        S0, $???_802311D8
   2C:  SW        RA, 28 (SP)
        .o30
   30:  LAW       V0, 8007419C
   38:  LW        A1, 0 (S0)
   3C:  LH        V1, 86 (V0)
   40:  LH        V0, 8C (V0)
   44:  SLL       V1, V1, 4
   48:  ADDU      V1, V1, S3
   4C:  LW        V1, 4 (V1)
   50:  SLL       V0, V0, 5
   54:  ADDU      V0, V0, V1
   58:  JAL       ~Func:strcmp
   5C:  LW        A0, 0 (V0)
   60:  BNE       V0, R0, .o70
   64:  ADDIU     S1, S1, 1
   68:  BEQ       R0, R0, .o7C
   6C:  LI        S2, 1
        .o70
   70:  SLTIU     V0, S1, B
   74:  BNE       V0, R0, .o30
   78:  ADDIU     S0, S0, 4
        .o7C
   7C:  MTC1      R0, F0
   80:  NOP
   84:  MFC1      A1, F0
   88:  COPY      A0, S2
   8C:  SW        R0, 14 (SP)
   90:  COPY      A2, A1
   94:  COPY      A3, A1
   98:  JAL       ~Func:playFX_82
   9C:  SW        A1, 10 (SP)
   A0:  LW        RA, 28 (SP)
   A4:  LW        S3, 24 (SP)
   A8:  LW        S2, 20 (SP)
   AC:  LW        S1, 1C (SP)
   B0:  LW        S0, 18 (SP)
   B4:  LI        V0, 2
   B8:  JR        RA
   BC:  ADDIU     SP, SP, 30
}

#new:Function $Function_802194E0
{
    0:  ADDIU     SP, SP, FFD0
    4:  SW        S2, 20 (SP)
    8:  CLEAR     S2
    C:  SW        S1, 1C (SP)
   10:  COPY      S1, S2
   14:  SW        S3, 24 (SP)
   18:  LA        S3, 800934F0
   20:  SW        S0, 18 (SP)
   24:  LA        S0, $???_80231678
   2C:  SW        RA, 28 (SP)
        .o30
   30:  LAW       V0, 8007419C
   38:  LW        A1, 0 (S0)
   3C:  LH        V1, 86 (V0)
   40:  LH        V0, 8C (V0)
   44:  SLL       V1, V1, 4
   48:  ADDU      V1, V1, S3
   4C:  LW        V1, 4 (V1)
   50:  SLL       V0, V0, 5
   54:  ADDU      V0, V0, V1
   58:  JAL       ~Func:strcmp
   5C:  LW        A0, 0 (V0)
   60:  BNE       V0, R0, .o70
   64:  ADDIU     S1, S1, 1
   68:  BEQ       R0, R0, .o7C
   6C:  LI        S2, 1
        .o70
   70:  SLTIU     V0, S1, B
   74:  BNE       V0, R0, .o30
   78:  ADDIU     S0, S0, 4
        .o7C
   7C:  MTC1      R0, F0
   80:  NOP
   84:  MFC1      A1, F0
   88:  COPY      A0, S2
   8C:  SW        R0, 14 (SP)
   90:  COPY      A2, A1
   94:  COPY      A3, A1
   98:  JAL       ~Func:playFX_82
   9C:  SW        A1, 10 (SP)
   A0:  LW        RA, 28 (SP)
   A4:  LW        S3, 24 (SP)
   A8:  LW        S2, 20 (SP)
   AC:  LW        S1, 1C (SP)
   B0:  LW        S0, 18 (SP)
   B4:  LI        V0, 2
   B8:  JR        RA
   BC:  ADDIU     SP, SP, 30
}

#new:Function $Function_802195A0
{
    0:  ADDIU     SP, SP, FFD0
    4:  SW        S2, 20 (SP)
    8:  CLEAR     S2
    C:  SW        S1, 1C (SP)
   10:  COPY      S1, S2
   14:  SW        S3, 24 (SP)
   18:  LA        S3, 800934F0
   20:  SW        S0, 18 (SP)
   24:  LA        S0, $???_80231B08
   2C:  SW        RA, 28 (SP)
        .o30
   30:  LAW       V0, 8007419C
   38:  LW        A1, 0 (S0)
   3C:  LH        V1, 86 (V0)
   40:  LH        V0, 8C (V0)
   44:  SLL       V1, V1, 4
   48:  ADDU      V1, V1, S3
   4C:  LW        V1, 4 (V1)
   50:  SLL       V0, V0, 5
   54:  ADDU      V0, V0, V1
   58:  JAL       ~Func:strcmp
   5C:  LW        A0, 0 (V0)
   60:  BNE       V0, R0, .o70
   64:  ADDIU     S1, S1, 1
   68:  BEQ       R0, R0, .o7C
   6C:  LI        S2, 1
        .o70
   70:  SLTIU     V0, S1, B
   74:  BNE       V0, R0, .o30
   78:  ADDIU     S0, S0, 4
        .o7C
   7C:  MTC1      R0, F0
   80:  NOP
   84:  MFC1      A1, F0
   88:  COPY      A0, S2
   8C:  SW        R0, 14 (SP)
   90:  COPY      A2, A1
   94:  COPY      A3, A1
   98:  JAL       ~Func:playFX_82
   9C:  SW        A1, 10 (SP)
   A0:  LW        RA, 28 (SP)
   A4:  LW        S3, 24 (SP)
   A8:  LW        S2, 20 (SP)
   AC:  LW        S1, 1C (SP)
   B0:  LW        S0, 18 (SP)
   B4:  LI        V0, 2
   B8:  JR        RA
   BC:  ADDIU     SP, SP, 30
}

#new:Function $Function_80219660
{
    0:  ADDIU     SP, SP, FFD0
    4:  SW        S2, 20 (SP)
    8:  CLEAR     S2
    C:  SW        S1, 1C (SP)
   10:  COPY      S1, S2
   14:  SW        S3, 24 (SP)
   18:  LA        S3, 800934F0
   20:  SW        S0, 18 (SP)
   24:  LA        S0, $???_80231FA8
   2C:  SW        RA, 28 (SP)
        .o30
   30:  LAW       V0, 8007419C
   38:  LW        A1, 0 (S0)
   3C:  LH        V1, 86 (V0)
   40:  LH        V0, 8C (V0)
   44:  SLL       V1, V1, 4
   48:  ADDU      V1, V1, S3
   4C:  LW        V1, 4 (V1)
   50:  SLL       V0, V0, 5
   54:  ADDU      V0, V0, V1
   58:  JAL       ~Func:strcmp
   5C:  LW        A0, 0 (V0)
   60:  BNE       V0, R0, .o70
   64:  ADDIU     S1, S1, 1
   68:  BEQ       R0, R0, .o7C
   6C:  LI        S2, 1
        .o70
   70:  SLTIU     V0, S1, B
   74:  BNE       V0, R0, .o30
   78:  ADDIU     S0, S0, 4
        .o7C
   7C:  MTC1      R0, F0
   80:  NOP
   84:  MFC1      A1, F0
   88:  COPY      A0, S2
   8C:  SW        R0, 14 (SP)
   90:  COPY      A2, A1
   94:  COPY      A3, A1
   98:  JAL       ~Func:playFX_82
   9C:  SW        A1, 10 (SP)
   A0:  LW        RA, 28 (SP)
   A4:  LW        S3, 24 (SP)
   A8:  LW        S2, 20 (SP)
   AC:  LW        S1, 1C (SP)
   B0:  LW        S0, 18 (SP)
   B4:  LI        V0, 2
   B8:  JR        RA
   BC:  ADDIU     SP, SP, 30
}

#new:Function $Function_80219720
{
    0:  ADDIU     SP, SP, FFD0
    4:  SW        S2, 20 (SP)
    8:  CLEAR     S2
    C:  SW        S1, 1C (SP)
   10:  COPY      S1, S2
   14:  SW        S3, 24 (SP)
   18:  LA        S3, 800934F0
   20:  SW        S0, 18 (SP)
   24:  LA        S0, $???_80232428
   2C:  SW        RA, 28 (SP)
        .o30
   30:  LAW       V0, 8007419C
   38:  LW        A1, 0 (S0)
   3C:  LH        V1, 86 (V0)
   40:  LH        V0, 8C (V0)
   44:  SLL       V1, V1, 4
   48:  ADDU      V1, V1, S3
   4C:  LW        V1, 4 (V1)
   50:  SLL       V0, V0, 5
   54:  ADDU      V0, V0, V1
   58:  JAL       ~Func:strcmp
   5C:  LW        A0, 0 (V0)
   60:  BNE       V0, R0, .o70
   64:  ADDIU     S1, S1, 1
   68:  BEQ       R0, R0, .o7C
   6C:  LI        S2, 1
        .o70
   70:  SLTIU     V0, S1, B
   74:  BNE       V0, R0, .o30
   78:  ADDIU     S0, S0, 4
        .o7C
   7C:  MTC1      R0, F0
   80:  NOP
   84:  MFC1      A1, F0
   88:  COPY      A0, S2
   8C:  SW        R0, 14 (SP)
   90:  COPY      A2, A1
   94:  COPY      A3, A1
   98:  JAL       ~Func:playFX_82
   9C:  SW        A1, 10 (SP)
   A0:  LW        RA, 28 (SP)
   A4:  LW        S3, 24 (SP)
   A8:  LW        S2, 20 (SP)
   AC:  LW        S1, 1C (SP)
   B0:  LW        S0, 18 (SP)
   B4:  LI        V0, 2
   B8:  JR        RA
   BC:  ADDIU     SP, SP, 30
}

#new:Function $Function_802197E0
{
    0:  ADDIU     SP, SP, FFD0
    4:  SW        S2, 20 (SP)
    8:  CLEAR     S2
    C:  SW        S1, 1C (SP)
   10:  COPY      S1, S2
   14:  SW        S3, 24 (SP)
   18:  LA        S3, 800934F0
   20:  SW        S0, 18 (SP)
   24:  LA        S0, $???_802328D8
   2C:  SW        RA, 28 (SP)
        .o30
   30:  LAW       V0, 8007419C
   38:  LW        A1, 0 (S0)
   3C:  LH        V1, 86 (V0)
   40:  LH        V0, 8C (V0)
   44:  SLL       V1, V1, 4
   48:  ADDU      V1, V1, S3
   4C:  LW        V1, 4 (V1)
   50:  SLL       V0, V0, 5
   54:  ADDU      V0, V0, V1
   58:  JAL       ~Func:strcmp
   5C:  LW        A0, 0 (V0)
   60:  BNE       V0, R0, .o70
   64:  ADDIU     S1, S1, 1
   68:  BEQ       R0, R0, .o7C
   6C:  LI        S2, 1
        .o70
   70:  SLTIU     V0, S1, B
   74:  BNE       V0, R0, .o30
   78:  ADDIU     S0, S0, 4
        .o7C
   7C:  MTC1      R0, F0
   80:  NOP
   84:  MFC1      A1, F0
   88:  COPY      A0, S2
   8C:  SW        R0, 14 (SP)
   90:  COPY      A2, A1
   94:  COPY      A3, A1
   98:  JAL       ~Func:playFX_82
   9C:  SW        A1, 10 (SP)
   A0:  LW        RA, 28 (SP)
   A4:  LW        S3, 24 (SP)
   A8:  LW        S2, 20 (SP)
   AC:  LW        S1, 1C (SP)
   B0:  LW        S0, 18 (SP)
   B4:  LI        V0, 2
   B8:  JR        RA
   BC:  ADDIU     SP, SP, 30
}

#new:Function $Function_802198A0
{
    0:  ADDIU     SP, SP, FFD0
    4:  SW        S2, 20 (SP)
    8:  CLEAR     S2
    C:  SW        S1, 1C (SP)
   10:  COPY      S1, S2
   14:  SW        S3, 24 (SP)
   18:  LA        S3, 800934F0
   20:  SW        S0, 18 (SP)
   24:  LA        S0, $???_80232BE8
   2C:  SW        RA, 28 (SP)
        .o30
   30:  LAW       V0, 8007419C
   38:  LW        A1, 0 (S0)
   3C:  LH        V1, 86 (V0)
   40:  LH        V0, 8C (V0)
   44:  SLL       V1, V1, 4
   48:  ADDU      V1, V1, S3
   4C:  LW        V1, 4 (V1)
   50:  SLL       V0, V0, 5
   54:  ADDU      V0, V0, V1
   58:  JAL       ~Func:strcmp
   5C:  LW        A0, 0 (V0)
   60:  BNE       V0, R0, .o70
   64:  ADDIU     S1, S1, 1
   68:  BEQ       R0, R0, .o7C
   6C:  LI        S2, 1
        .o70
   70:  SLTIU     V0, S1, B
   74:  BNE       V0, R0, .o30
   78:  ADDIU     S0, S0, 4
        .o7C
   7C:  MTC1      R0, F0
   80:  NOP
   84:  MFC1      A1, F0
   88:  COPY      A0, S2
   8C:  SW        R0, 14 (SP)
   90:  COPY      A2, A1
   94:  COPY      A3, A1
   98:  JAL       ~Func:playFX_82
   9C:  SW        A1, 10 (SP)
   A0:  LW        RA, 28 (SP)
   A4:  LW        S3, 24 (SP)
   A8:  LW        S2, 20 (SP)
   AC:  LW        S1, 1C (SP)
   B0:  LW        S0, 18 (SP)
   B4:  LI        V0, 2
   B8:  JR        RA
   BC:  ADDIU     SP, SP, 30
}

#new:Function $Function_80219960
{
    0:  ADDIU     SP, SP, FFB8
    4:  SW        S2, 18 (SP)
    8:  COPY      S2, A0
    C:  SW        RA, 28 (SP)
   10:  SW        S5, 24 (SP)
   14:  SW        S4, 20 (SP)
   18:  SW        S3, 1C (SP)
   1C:  SW        S1, 14 (SP)
   20:  SW        S0, 10 (SP)
   24:  SDC1      F24, 40 (SP)
   28:  SDC1      F22, 38 (SP)
   2C:  SDC1      F20, 30 (SP)
   30:  LW        S0, C (S2)
   34:  LW        S4, 0 (S0)
   38:  ADDIU     S0, S0, 4
   3C:  JAL       ~Func:get_variable
   40:  COPY      A1, S4
   44:  COPY      S3, V0
   48:  LW        S5, 0 (S0)
   4C:  ADDIU     S0, S0, 4
   50:  LW        A1, 0 (S0)
   54:  ADDIU     S0, S0, 4
   58:  JAL       ~Func:get_float_variable
   5C:  COPY      A0, S2
   60:  LW        A1, 0 (S0)
   64:  ADDIU     S0, S0, 4
   68:  COPY      A0, S2
   6C:  JAL       ~Func:get_float_variable
   70:  MOV.S     F24, F0
   74:  LW        A1, 0 (S0)
   78:  ADDIU     S0, S0, 4
   7C:  COPY      A0, S2
   80:  JAL       ~Func:get_variable
   84:  MOV.S     F20, F0
   88:  LW        A1, 0 (S0)
   8C:  ADDIU     S0, S0, 4
   90:  COPY      A0, S2
   94:  JAL       ~Func:get_variable
   98:  COPY      S1, V0
   9C:  COPY      A0, S2
   A0:  LW        A1, 0 (S0)
   A4:  JAL       ~Func:get_float_variable
   A8:  COPY      S0, V0
   AC:  LIF       F2, 180.0
   B4:  LIF       F4, 3.141592
   C0:  DIV.S     F0, F0, F2
   C4:  MUL.S     F22, F0, F4
   C8:  NOP
   CC:  SUB.S     F20, F20, F24
   D0:  LIF       F0, 0.5
   D8:  NOP
   DC:  MUL.S     F20, F20, F0
   E0:  NOP
   E4:  BEQ       S0, R0, .o104
   E8:  SLT       V0, S1, S3
   EC:  BEQ       V0, R0, .o104
   F0:  COPY      A0, S2
   F4:  COPY      S3, S1
   F8:  COPY      A1, S4
   FC:  JAL       ~Func:set_variable
  100:  COPY      A2, S1
        .o104
  104:  LIF       F0, 3.141592
  110:  MTC1      S3, F12
  114:  NOP
  118:  CVT.S.W   F12, F12
  11C:  MUL.S     F12, F12, F0
  120:  NOP
  124:  MTC1      S1, F0
  128:  NOP
  12C:  CVT.S.W   F0, F0
  130:  DIV.S     F12, F12, F0
  134:  JAL       ~Func:cos_rad
  138:  ADD.S     F12, F12, F22
  13C:  MUL.S     F0, F20, F0
  140:  NOP
  144:  ADD.S     F2, F24, F20
  148:  SUB.S     F2, F2, F0
  14C:  COPY      A0, S2
  150:  MFC1      A2, F2
  154:  JAL       ~Func:set_float_variable
  158:  COPY      A1, S5
  15C:  LW        RA, 28 (SP)
  160:  LW        S5, 24 (SP)
  164:  LW        S4, 20 (SP)
  168:  LW        S3, 1C (SP)
  16C:  LW        S2, 18 (SP)
  170:  LW        S1, 14 (SP)
  174:  LW        S0, 10 (SP)
  178:  LDC1      F24, 40 (SP)
  17C:  LDC1      F22, 38 (SP)
  180:  LDC1      F20, 30 (SP)
  184:  LI        V0, 2
  188:  JR        RA
  18C:  ADDIU     SP, SP, 48
}

#new:Function $Function_80219AF0
{
    0:  ADDIU     SP, SP, FFB8
    4:  SW        S2, 18 (SP)
    8:  COPY      S2, A0
    C:  SW        RA, 28 (SP)
   10:  SW        S5, 24 (SP)
   14:  SW        S4, 20 (SP)
   18:  SW        S3, 1C (SP)
   1C:  SW        S1, 14 (SP)
   20:  SW        S0, 10 (SP)
   24:  SDC1      F24, 40 (SP)
   28:  SDC1      F22, 38 (SP)
   2C:  SDC1      F20, 30 (SP)
   30:  LW        S0, C (S2)
   34:  LW        S4, 0 (S0)
   38:  ADDIU     S0, S0, 4
   3C:  JAL       ~Func:get_variable
   40:  COPY      A1, S4
   44:  COPY      S3, V0
   48:  LW        S5, 0 (S0)
   4C:  ADDIU     S0, S0, 4
   50:  LW        A1, 0 (S0)
   54:  ADDIU     S0, S0, 4
   58:  JAL       ~Func:get_float_variable
   5C:  COPY      A0, S2
   60:  LW        A1, 0 (S0)
   64:  ADDIU     S0, S0, 4
   68:  COPY      A0, S2
   6C:  JAL       ~Func:get_float_variable
   70:  MOV.S     F24, F0
   74:  LW        A1, 0 (S0)
   78:  ADDIU     S0, S0, 4
   7C:  COPY      A0, S2
   80:  JAL       ~Func:get_variable
   84:  MOV.S     F20, F0
   88:  LW        A1, 0 (S0)
   8C:  ADDIU     S0, S0, 4
   90:  COPY      A0, S2
   94:  JAL       ~Func:get_variable
   98:  COPY      S1, V0
   9C:  COPY      A0, S2
   A0:  LW        A1, 0 (S0)
   A4:  JAL       ~Func:get_float_variable
   A8:  COPY      S0, V0
   AC:  LIF       F2, 180.0
   B4:  LIF       F4, 3.141592
   C0:  DIV.S     F0, F0, F2
   C4:  MUL.S     F22, F0, F4
   C8:  NOP
   CC:  SUB.S     F20, F20, F24
   D0:  LIF       F0, 0.5
   D8:  NOP
   DC:  MUL.S     F20, F20, F0
   E0:  NOP
   E4:  BEQ       S0, R0, .o104
   E8:  SLT       V0, S1, S3
   EC:  BEQ       V0, R0, .o104
   F0:  COPY      A0, S2
   F4:  COPY      S3, S1
   F8:  COPY      A1, S4
   FC:  JAL       ~Func:set_variable
  100:  COPY      A2, S1
        .o104
  104:  LIF       F0, 3.141592
  110:  MTC1      S3, F12
  114:  NOP
  118:  CVT.S.W   F12, F12
  11C:  MUL.S     F12, F12, F0
  120:  NOP
  124:  MTC1      S1, F0
  128:  NOP
  12C:  CVT.S.W   F0, F0
  130:  DIV.S     F12, F12, F0
  134:  JAL       ~Func:cos_rad
  138:  ADD.S     F12, F12, F22
  13C:  MUL.S     F0, F20, F0
  140:  NOP
  144:  ADD.S     F2, F24, F20
  148:  SUB.S     F2, F2, F0
  14C:  COPY      A0, S2
  150:  MFC1      A2, F2
  154:  JAL       ~Func:set_float_variable
  158:  COPY      A1, S5
  15C:  LW        RA, 28 (SP)
  160:  LW        S5, 24 (SP)
  164:  LW        S4, 20 (SP)
  168:  LW        S3, 1C (SP)
  16C:  LW        S2, 18 (SP)
  170:  LW        S1, 14 (SP)
  174:  LW        S0, 10 (SP)
  178:  LDC1      F24, 40 (SP)
  17C:  LDC1      F22, 38 (SP)
  180:  LDC1      F20, 30 (SP)
  184:  LI        V0, 2
  188:  JR        RA
  18C:  ADDIU     SP, SP, 48
}

#new:Function $Function_80219C80
{
    0:  ADDIU     SP, SP, FFD0
    4:  SW        S2, 20 (SP)
    8:  CLEAR     S2
    C:  SW        S1, 1C (SP)
   10:  COPY      S1, S2
   14:  SW        S3, 24 (SP)
   18:  LA        S3, 800934F0
   20:  SW        S0, 18 (SP)
   24:  LA        S0, $???_80233564
   2C:  SW        RA, 28 (SP)
        .o30
   30:  LAW       V0, 8007419C
   38:  LW        A1, 0 (S0)
   3C:  LH        V1, 86 (V0)
   40:  LH        V0, 8C (V0)
   44:  SLL       V1, V1, 4
   48:  ADDU      V1, V1, S3
   4C:  LW        V1, 4 (V1)
   50:  SLL       V0, V0, 5
   54:  ADDU      V0, V0, V1
   58:  JAL       ~Func:strcmp
   5C:  LW        A0, 0 (V0)
   60:  BNE       V0, R0, .o70
   64:  ADDIU     S1, S1, 1
   68:  BEQ       R0, R0, .o7C
   6C:  LI        S2, 1
        .o70
   70:  SLTIU     V0, S1, B
   74:  BNE       V0, R0, .o30
   78:  ADDIU     S0, S0, 4
        .o7C
   7C:  MTC1      R0, F0
   80:  NOP
   84:  MFC1      A1, F0
   88:  COPY      A0, S2
   8C:  SW        R0, 14 (SP)
   90:  COPY      A2, A1
   94:  COPY      A3, A1
   98:  JAL       ~Func:playFX_82
   9C:  SW        A1, 10 (SP)
   A0:  LW        RA, 28 (SP)
   A4:  LW        S3, 24 (SP)
   A8:  LW        S2, 20 (SP)
   AC:  LW        S1, 1C (SP)
   B0:  LW        S0, 18 (SP)
   B4:  LI        V0, 2
   B8:  JR        RA
   BC:  ADDIU     SP, SP, 30
}

#new:Function $Function_80219D40
{
    0:  ADDIU     SP, SP, FFD0
    4:  SW        S2, 20 (SP)
    8:  CLEAR     S2
    C:  SW        S1, 1C (SP)
   10:  COPY      S1, S2
   14:  SW        S3, 24 (SP)
   18:  LA        S3, 800934F0
   20:  SW        S0, 18 (SP)
   24:  LA        S0, $???_80233870
   2C:  SW        RA, 28 (SP)
        .o30
   30:  LAW       V0, 8007419C
   38:  LW        A1, 0 (S0)
   3C:  LH        V1, 86 (V0)
   40:  LH        V0, 8C (V0)
   44:  SLL       V1, V1, 4
   48:  ADDU      V1, V1, S3
   4C:  LW        V1, 4 (V1)
   50:  SLL       V0, V0, 5
   54:  ADDU      V0, V0, V1
   58:  JAL       ~Func:strcmp
   5C:  LW        A0, 0 (V0)
   60:  BNE       V0, R0, .o70
   64:  ADDIU     S1, S1, 1
   68:  BEQ       R0, R0, .o7C
   6C:  LI        S2, 1
        .o70
   70:  SLTIU     V0, S1, B
   74:  BNE       V0, R0, .o30
   78:  ADDIU     S0, S0, 4
        .o7C
   7C:  MTC1      R0, F0
   80:  NOP
   84:  MFC1      A1, F0
   88:  COPY      A0, S2
   8C:  SW        R0, 14 (SP)
   90:  COPY      A2, A1
   94:  COPY      A3, A1
   98:  JAL       ~Func:playFX_82
   9C:  SW        A1, 10 (SP)
   A0:  LW        RA, 28 (SP)
   A4:  LW        S3, 24 (SP)
   A8:  LW        S2, 20 (SP)
   AC:  LW        S1, 1C (SP)
   B0:  LW        S0, 18 (SP)
   B4:  LI        V0, 2
   B8:  JR        RA
   BC:  ADDIU     SP, SP, 30
}

#new:Function $Function_80219E00
{
    0:  ADDIU     SP, SP, FFD0
    4:  SW        S2, 20 (SP)
    8:  CLEAR     S2
    C:  SW        S1, 1C (SP)
   10:  COPY      S1, S2
   14:  SW        S3, 24 (SP)
   18:  LA        S3, 800934F0
   20:  SW        S0, 18 (SP)
   24:  LA        S0, $???_80233950
   2C:  SW        RA, 28 (SP)
        .o30
   30:  LAW       V0, 8007419C
   38:  LW        A1, 0 (S0)
   3C:  LH        V1, 86 (V0)
   40:  LH        V0, 8C (V0)
   44:  SLL       V1, V1, 4
   48:  ADDU      V1, V1, S3
   4C:  LW        V1, 4 (V1)
   50:  SLL       V0, V0, 5
   54:  ADDU      V0, V0, V1
   58:  JAL       ~Func:strcmp
   5C:  LW        A0, 0 (V0)
   60:  BNE       V0, R0, .o70
   64:  ADDIU     S1, S1, 1
   68:  BEQ       R0, R0, .o7C
   6C:  LI        S2, 1
        .o70
   70:  SLTIU     V0, S1, B
   74:  BNE       V0, R0, .o30
   78:  ADDIU     S0, S0, 4
        .o7C
   7C:  MTC1      R0, F0
   80:  NOP
   84:  MFC1      A1, F0
   88:  COPY      A0, S2
   8C:  SW        R0, 14 (SP)
   90:  COPY      A2, A1
   94:  COPY      A3, A1
   98:  JAL       ~Func:playFX_82
   9C:  SW        A1, 10 (SP)
   A0:  LW        RA, 28 (SP)
   A4:  LW        S3, 24 (SP)
   A8:  LW        S2, 20 (SP)
   AC:  LW        S1, 1C (SP)
   B0:  LW        S0, 18 (SP)
   B4:  LI        V0, 2
   B8:  JR        RA
   BC:  ADDIU     SP, SP, 30
}

#new:IdleAnimations $IdleAnimations_80219EC0
{
	.Status:Normal    00490001
	.Status:Stone     00490000
	.Status:Sleep     00490008
	.Status:Poison    00490001
	.Status:Stop      00490000
	.Status:Static    00490001
	.Status:Paralyze  00490000
	.Status:Dizzy     00490009
	.Status:Fear      00490009
	.Status:End
}

#new:IdleAnimations $IdleAnimations_80219F0C
{
	.Status:Normal    0049000B
	.Status:End
}

#new:IdleAnimations $IdleAnimations_80219F18
{
	.Status:Normal    004A0001
	.Status:End
}

#new:DefenseTable $DefenseTable_80219F24
{
	.Element:Normal 00000000
	.Element:Mystery00000000
	.Element:End
}

#new:StatusTable $StatusTable_80219F38
{
	.Status:Normal      0`
	.Status:Default     0`
	.Status:Sleep      50`
	.Status:Poison     50`
	.Status:Frozen      0`
	.Status:Dizzy     100`
	.Status:Fear        0`
	.Status:Static     50`
	.Status:Paralyze   50`
	.Status:Shrink     75`
	.Status:Stop       80`
	.Status:DefaultTurnMod    0`
	.Status:SleepTurnMod      0`
	.Status:PoisonTurnMod     0`
	.Status:FrozenTurnMod     0`
	.Status:DizzyTurnMod      1`
	.Status:FearTurnMod       0`
	.Status:StaticTurnMod     0`
	.Status:ParalyzeTurnMod  -1`
	.Status:ShrinkTurnMod     0`
	.Status:StopTurnMod       0`
	.Status:End
}

#new:PartsTable $PartsTable_80219FE4
{
	00800000 01000000 FB2300FF $IdleAnimations_80219EC0 $DefenseTable_80219F24 00000000 00000000 00F30000 00000000
	00120001 02000000 000000FF $IdleAnimations_80219F0C $DefenseTable_80219F24 00000000 00000000 00000000 00000000
	00120001 03000000 000000FF $IdleAnimations_80219F18 $DefenseTable_80219F24 00000000 00000000 00000000 00000000
}

#new:Actor $Lakitu
{
	% stats
	[Index]        2Eb
	[Level]        20`b
	[MaxHP]        12`b
	[Coins]         2`b
	[Flags]       00000200
	[StatusTable] $StatusTable_80219F38
	% ai
	[PartsCount]    3`s
	[PartsTable]  $PartsTable_80219FE4
	[Script]      $Script_Init_8021A078
	% move effectiveness
	[Escape]       40`b
	[Item]         50`b
	[AirLift]      90`b
	[Hurricane]    90`b % Bow's "Spook" as well
	[UpAndAway]    95`b
	[PowerBounce]  85`b
	[SpinSmash]     0`b % weight (0-4)
	% ui positions
	[Size]         32`b  38`b % width height
	[HealthBar]     0`b   0`b % dx dy
	[StatusTurn]  -11`b  20`b % dx dy
	[StatusIcon]   10`b  34`b % dx dy
}

#new:Script $Script_Init_8021A078
{
    0:  Call  BindTakeTurn  ( .Actor:Self $Script_TakeTurn_8021BD2C )
   14:  Call  BindIdle      ( .Actor:Self $Script_Idle_8021A0DC )
   28:  Call  BindHandleEvent   ( .Actor:Self $Script_HandleEvent_8021A16C )
   3C:  Call  SetActorVar   ( .Actor:Self 00000000 00000000 )
   54:  Return
   5C:  End
}

#new:Script $Script_Idle_8021A0DC
{
    0:  Return
    8:  End
}

#new:Script $Script_8021A0EC
{
    0:  Call  SetAnimation  ( .Actor:Self 00000001 00490003 )
   18:  Call  SetGoalToHome ( .Actor:Self )
   28:  Call  SetActorSpeed ( .Actor:Self *Fixed[7.0] )
   3C:  Call  FlyToGoal     ( .Actor:Self  0`  0` .Easing:SinOut )
   58:  Call  SetAnimation  ( .Actor:Self 00000001 00490001 )
   70:  Return
   78:  End
}

#new:Script $Script_HandleEvent_8021A16C
{
    0:  Call  UseIdleAnimation  ( .Actor:Self .False )
   14:  Call  EnableIdleScript  ( .Actor:Self 00000000 )
   28:  Call  GetLastEvent      ( .Actor:Self *Var0 )
   3C:  Switch  *Var0
   48:  	CaseOR  ==  .Event:HitCombo % 9
   54:  	CaseOR  ==  .Event:Hit % A
   60:  		SetConst  *Var0  00000001
   70:  		SetConst  *Var1  00490004
   80:  		ExecWait  DoNormalHit
   8C:  	EndCaseGroup
   94:  	Case  ==  .Event:BurnHit % E
   A0:  		SetConst  *Var0  00000001
   B0:  		SetConst  *Var1  00490005
   C0:  		SetConst  *Var2  00490006
   D0:  		ExecWait  DoBurnHit
   DC:  	Case  ==  .Event:BurnDeath % 24
   E8:  		SetConst  *Var0  00000001
   F8:  		SetConst  *Var1  00490005
  108:  		SetConst  *Var2  00490006
  118:  		ExecWait  DoBurnHit
  124:  		SetConst  *Var0  00000001
  134:  		SetConst  *Var1  00490006
  144:  		ExecWait  DoDeath
  150:  		Return
  158:  	Case  ==  .Event:SpinSmashHit % B
  164:  		SetConst  *Var0  00000001
  174:  		SetConst  *Var1  00490004
  184:  		ExecWait  DoSpinSmashHit
  190:  	Case  ==  .Event:SpinSmashDeath % 21
  19C:  		SetConst  *Var0  00000001
  1AC:  		SetConst  *Var1  00490004
  1BC:  		ExecWait  DoSpinSmashHit
  1C8:  		SetConst  *Var0  00000001
  1D8:  		SetConst  *Var1  00490004
  1E8:  		ExecWait  DoDeath
  1F4:  		Return
  1FC:  	Case  ==  .Event:ShockHit % 2F
  208:  		SetConst  *Var0  00000001
  218:  		SetConst  *Var1  00490004
  228:  		ExecWait  DoShockHit
  234:  		SetConst  *Var0  00000001
  244:  		SetConst  *Var1  00490004
  254:  		ExecWait  DoJumpBack
  260:  		ExecWait  $Script_8021A0EC
  26C:  	Case  ==  .Event:ShockDeath % 26
  278:  		SetConst  *Var0  00000001
  288:  		SetConst  *Var1  00490004
  298:  		ExecWait  DoShockHit
  2A4:  		SetConst  *Var0  00000001
  2B4:  		SetConst  *Var1  00490004
  2C4:  		ExecWait  DoDeath
  2D0:  		Return
  2D8:  	CaseOR  ==  00000017 % 17
  2E4:  	CaseOR  ==  .Event:Immune % 19
  2F0:  	CaseOR  ==  .Event:AirLiftFailed % 1F
  2FC:  		SetConst  *Var0  00000001
  30C:  		SetConst  *Var1  00490001
  31C:  		ExecWait  DoImmune
  328:  	EndCaseGroup
  330:  	Case  ==  .Event:Death % 20
  33C:  		SetConst  *Var0  00000001
  34C:  		SetConst  *Var1  00490004
  35C:  		ExecWait  DoNormalHit
  368:  		Wait  10`
  374:  		SetConst  *Var0  00000001
  384:  		SetConst  *Var1  00490004
  394:  		ExecWait  DoDeath
  3A0:  		Return
  3A8:  	Case  ==  .Event:BeginFirstStrike % 38
  3B4:  		Call  SetActorPos       ( .Actor:Self  20`  0`  0` )
  3D0:  		Call  HPBarToCurrent    ( .Actor:Self )
  3E0:  	Case  ==  .Event:EndFirstStrike % 35
  3EC:  		ExecWait  $Script_8021A0EC
  3F8:  		Call  HPBarToHome   ( .Actor:Self )
  408:  	Case  ==  .Event:RecoverStatus % 31
  414:  		SetConst  *Var0  00000001
  424:  		SetConst  *Var1  00490001
  434:  		ExecWait  DoRecover
  440:  	Case  ==  .Event:ScareAway % 39
  44C:  		SetConst  *Var0  00000001
  45C:  		SetConst  *Var1  00490003
  46C:  		SetConst  *Var2  00490004
  47C:  		ExecWait  DoScareAway
  488:  		Return
  490:  	Case  ==  .Event:BeginAirLift % 3A
  49C:  		SetConst  *Var0  00000001
  4AC:  		SetConst  *Var1  00490004
  4BC:  		ExecWait  DoAirLift
  4C8:  	Case  ==  .Event:BlowAway % 16
  4D4:  		SetConst  *Var0  00000001
  4E4:  		SetConst  *Var1  00490004
  4F4:  		ExecWait  DoBlowAway
  500:  		Return
  508:  	Default
  510:  EndSwitch
  518:  Call  EnableIdleScript  ( .Actor:Self 00000001 )
  52C:  Call  UseIdleAnimation  ( .Actor:Self .True )
  540:  Return
  548:  End
}

#new:Script $Script_ThrowSpint
{
    0:  Call  UseIdleAnimation  ( .Actor:Self .False )
   14:  Call  EnableIdleScript  ( .Actor:Self 00000000 )
   28:  Call  SetTargetActor    ( .Actor:Self .Actor:Player )
   3C:  Call  UseBattleCamPreset    ( 0000003F )
   4C:  Call  BattleCamTargetActor  ( .Actor:Self )
   5C:  Call  8024ECF8      ( FFFFFFFF 00000001 00000000 )
   74:  Call  SetActorSpeed ( .Actor:Self *Fixed[6.0] )
   88:  Call  SetAnimation  ( .Actor:Self 00000001 00490003 )
   A0:  Call  GetActorPos   ( .Actor:Self *Var0 *Var1 *Var2 )
   BC:  Call  SetGoalPos    ( .Actor:Self  -20` *Var1 *Var2 )
   D8:  Call  RunToGoal     ( .Actor:Self  0` .False )
   F0:  Call  SetAnimation  ( .Actor:Self 00000001 00490001 )
  108:  Call  SetAnimation  ( .Actor:Self 00000002 0049000B )
  120:  Call  SetAnimation  ( .Actor:Self 00000001 00490012 )
  138:  Wait  20`
  144:  Call  SetAnimation  ( .Actor:Self 00000001 00490013 )
  15C:  Call  GetStatusFlags    ( .Actor:Self *VarA )
  170:  If  *VarA  &  ~Flags:StatusFlags:Shrink % 80000
  180:  	Call  GetActorPos   ( .Actor:Self *Var0 *Var1 *Var2 )
  19C:  	Add   *Var0  FFFFFFFD
  1AC:  	Add   *Var1  00000010
  1BC:  	Add   *Var2  00000002
  1CC:  	Call  PlayEffect    ( ~FX:EnergyIn:ShortStreaks *Var0 *Var1 *Var2 *Fixed[0.4] 0000000A 00000000 00000000 00000000 00000000 00000000 00000000 00000000 )
  210:  	Call  GetActorPos   ( .Actor:Self *Var0 *Var1 *Var2 )
  22C:  	Add   *Var1  0000000C
  23C:  	Add   *Var2  00000000
  24C:  	Call  SetPartPos    ( .Actor:Self 00000002 *Var0 *Var1 *Var2 )
  26C:  	Call  SetPartScale  ( .Actor:Self 00000002 *Fixed[0.4] *Fixed[0.4] *Fixed[0.4] )
  28C:  Else
  294:  	Call  GetActorPos   ( .Actor:Self *Var0 *Var1 *Var2 )
  2B0:  	Add   *Var0  FFFFFFF8
  2C0:  	Add   *Var1  00000028
  2D0:  	Add   *Var2  00000005
  2E0:  	Call  PlayEffect    ( ~FX:EnergyIn:ShortStreaks *Var0 *Var1 *Var2 *Fixed[1.0] 0000000A 00000000 00000000 00000000 00000000 00000000 00000000 00000000 )
  324:  	Call  GetActorPos   ( .Actor:Self *Var0 *Var1 *Var2 )
  340:  	Add   *Var1  0000001E
  350:  	Add   *Var2  00000002
  360:  	Call  SetPartPos    ( .Actor:Self 00000002 *Var0 *Var1 *Var2 )
  380:  	Call  SetPartScale  ( .Actor:Self 00000002 *Fixed[1.0] *Fixed[1.0] *Fixed[1.0] )
  3A0:  EndIf
  3A8:  Call  SetPartFlagBits   ( .Actor:Self 00000002 00000001 .False )
  3C4:  Wait  10`
  3D0:  Thread
  3D8:  	Call  SetAnimation  ( .Actor:Self 00000001 00490015 )
  3F0:  	Wait  20`
  3FC:  	Call  SetAnimation  ( .Actor:Self 00000001 00490001 )
  414:  EndThread
  41C:  Call  SetAnimation      ( .Actor:Self 00000002 0049000C )
  434:  Call  PlaySoundAtPart   ( .Actor:Self 00000002 000020D2 )
  44C:  Call  SetPartSounds     ( .Actor:Self 00000002 .ActorSound:Jump 00000000 00000000 )
  46C:  Call  EnemyTestTarget   ( .Actor:Self *Var0 ~Flags:DamageType:0 00000000 00000001 00000010 )
  490:  Switch  *Var0
  49C:  	CaseOR  ==  .HitResult:Miss % 6
  4A8:  	CaseOR  ==  .HitResult:Lucky % 5
  4B4:  		Set   *VarA  *Var0
  4C4:  		Call  SetPartJumpGravity    ( .Actor:Self 00000002 *Fixed[1.0] )
  4DC:  		Call  SetGoalToTarget   ( .Actor:Self )
  4EC:  		Call  GetGoalPos        ( .Actor:Self *Var0 *Var1 *Var2 )
  508:  		Sub   *Var0  00000028
  518:  		Set   *Var1  00000000
  528:  		Call  JumpPartTo        ( .Actor:Self 00000002 *Var0  0` *Var2  20` .True )
  550:  		Sub   *Var0  0000001E
  560:  		If  *VarA  ==  .HitResult:Lucky % 5
  570:  			Call  EnemyTestTarget   ( .Actor:Self *VarA ~Flags:DamageType:TriggerLucky 00000000 00000000 00000000 )
  594:  		EndIf
  59C:  		Call  ResetAllActorSounds   ( .Actor:Self )
  5AC:  		Call  JumpPartTo        ( .Actor:Self 00000002 *Var0  0` *Var2  10` .True )
  5D4:  		Sub   *Var0  00000014
  5E4:  		Call  JumpPartTo        ( .Actor:Self 00000002 *Var0  0` *Var2  5` .True )
  60C:  		Call  SetPartFlagBits   ( .Actor:Self 00000002 00000001 .True )
  628:  		Wait  20`
  634:  		Call  YieldTurn ( )
  640:  		Call  UseBattleCamPreset    ( 00000002 )
  650:  		Call  AddActorDecoration    ( .Actor:Self 00000001 00000000 .Decoration:Sweat )
  66C:  		Call  SetActorYaw       ( .Actor:Self  180` )
  680:  		ExecWait  $Script_8021A0EC
  68C:  		Call  SetActorYaw       ( .Actor:Self  0` )
  6A0:  		Call  RemoveActorDecoration ( .Actor:Self 00000001 00000000 )
  6B8:  		Call  EnableIdleScript  ( .Actor:Self 00000001 )
  6CC:  		Call  UseIdleAnimation  ( .Actor:Self .True )
  6E0:  		Return
  6E8:  	EndCaseGroup
  6F0:  EndSwitch
  6F8:  Call  SetPartJumpGravity    ( .Actor:Self 00000002 *Fixed[1.0] )
  710:  Call  SetGoalToTarget   ( .Actor:Self )
  720:  Call  GetGoalPos        ( .Actor:Self *Var0 *Var1 *Var2 )
  73C:  Call  JumpPartTo        ( .Actor:Self 00000002 *Var0 *Var1 *Var2  20` .True )
  764:  Call  ResetAllActorSounds   ( .Actor:Self )
  774:  Wait  2`
  780:  Call  EnemyDamageTarget ( .Actor:Self *Var0 ~Flags:DamageType:NoContact 00000000 00000000 00000003 00000020 )
  7A8:  Switch  *Var0
  7B4:  	CaseOR  ==  .HitResult:Hit % 0
  7C0:  	CaseOR  ==  .HitResult:QuakeImmune % 2
  7CC:  		Call  UseBattleCamPreset    ( 00000002 )
  7DC:  		Thread
  7E4:  			Call  SetPartJumpGravity    ( .Actor:Self 00000002 *Fixed[1.0] )
  7FC:  			Call  SetGoalToTarget   ( .Actor:Self )
  80C:  			Call  GetGoalPos        ( .Actor:Self *Var0 *Var1 *Var2 )
  828:  			Sub   *Var0  00000028
  838:  			Call  JumpPartTo        ( .Actor:Self 00000002 *Var0  0` *Var2  20` .True )
  860:  			Sub   *Var0  0000001E
  870:  			Call  JumpPartTo        ( .Actor:Self 00000002 *Var0  0` *Var2  10` .True )
  898:  			Sub   *Var0  00000014
  8A8:  			Call  JumpPartTo        ( .Actor:Self 00000002 *Var0  0` *Var2  5` .True )
  8D0:  			Call  SetPartFlagBits   ( .Actor:Self 00000002 00000001 .True )
  8EC:  		EndThread
  8F4:  		Wait  20`
  900:  		Call  YieldTurn ( )
  90C:  		ExecWait  $Script_8021A0EC
  918:  	EndCaseGroup
  920:  EndSwitch
  928:  Call  EnableIdleScript  ( .Actor:Self 00000001 )
  93C:  Call  UseIdleAnimation  ( .Actor:Self .True )
  950:  Return
  958:  End
}

#new:Vector3D $Vector3D_8021B01C
{
	0` -1000` 0`
}

#new:SpecialFormation $SpecialFormation_8021B028
{
	$Spiny $Vector3D_8021B01C 00000064 00000001 00000000 00000000 00000000
}

#new:Script $Script_SummonSpiny
{
    0:  Call  UseIdleAnimation  ( .Actor:Self .False )
   14:  Call  EnableIdleScript  ( .Actor:Self 00000000 )
   28:  Call  SetTargetActor    ( .Actor:Self .Actor:Player )
   3C:  Call  UseBattleCamPreset    ( 0000000E )
   4C:  Call  BattleCamTargetActor  ( .Actor:Self )
   5C:  Call  SummonEnemy       ( $SpecialFormation_8021B028 00000000 )
   70:  Call  CopyStatusEffects ( .Actor:Self *Var0 )
   84:  Set   *VarB  *Var0
   94:  Call  SetAnimation      ( .Actor:Self 00000002 0049000B )
   AC:  Call  SetAnimation      ( .Actor:Self 00000001 00490012 )
   C4:  Wait  20`
   D0:  Call  SetAnimation      ( .Actor:Self 00000001 00490013 )
   E8:  Call  GetStatusFlags    ( .Actor:Self *Var0 )
   FC:  If  *Var0  &  ~Flags:StatusFlags:Shrink % 80000
  10C:  	Call  GetActorPos   ( .Actor:Self *Var0 *Var1 *Var2 )
  128:  	Add   *Var0  FFFFFFFD
  138:  	Add   *Var1  00000010
  148:  	Add   *Var2  00000002
  158:  	Call  PlayEffect    ( ~FX:EnergyIn:ShortStreaks *Var0 *Var1 *Var2 *Fixed[0.4] 0000000A 00000000 00000000 00000000 00000000 00000000 00000000 00000000 )
  19C:  	Call  GetActorPos   ( .Actor:Self *Var0 *Var1 *Var2 )
  1B8:  	Add   *Var1  0000000C
  1C8:  	Add   *Var2  00000000
  1D8:  	Call  SetPartPos    ( .Actor:Self 00000002 *Var0 *Var1 *Var2 )
  1F8:  	Call  SetPartScale  ( .Actor:Self 00000002 *Fixed[0.4] *Fixed[0.4] *Fixed[0.4] )
  218:  	Call  SetPartScale  ( .Actor:Self 00000003 *Fixed[0.4] *Fixed[0.4] *Fixed[0.4] )
  238:  Else
  240:  	Call  GetActorPos   ( .Actor:Self *Var0 *Var1 *Var2 )
  25C:  	Add   *Var0  FFFFFFF8
  26C:  	Add   *Var1  00000028
  27C:  	Add   *Var2  00000005
  28C:  	Call  PlayEffect    ( ~FX:EnergyIn:ShortStreaks *Var0 *Var1 *Var2 *Fixed[1.0] 0000000A 00000000 00000000 00000000 00000000 00000000 00000000 00000000 )
  2D0:  	Call  GetActorPos   ( .Actor:Self *Var0 *Var1 *Var2 )
  2EC:  	Add   *Var1  0000001E
  2FC:  	Add   *Var2  00000002
  30C:  	Call  SetPartPos    ( .Actor:Self 00000002 *Var0 *Var1 *Var2 )
  32C:  	Call  SetPartScale  ( .Actor:Self 00000002 *Fixed[1.0] *Fixed[1.0] *Fixed[1.0] )
  34C:  	Call  SetPartScale  ( .Actor:Self 00000003 *Fixed[1.0] *Fixed[1.0] *Fixed[1.0] )
  36C:  EndIf
  374:  Call  SetPartFlagBits   ( .Actor:Self 00000002 00000001 .False )
  390:  Wait  10`
  39C:  Thread
  3A4:  	Call  SetAnimation  ( .Actor:Self 00000001 00490015 )
  3BC:  	Wait  20`
  3C8:  	Call  SetAnimation  ( .Actor:Self 00000001 00490001 )
  3E0:  EndThread
  3E8:  Call  UseBattleCamPreset    ( 00000002 )
  3F8:  Call  PlaySoundAtPart       ( .Actor:Self 00000002 000020D2 )
  410:  Call  SetPartSounds ( .Actor:Self 00000002 .ActorSound:Jump 00000000 00000000 )
  430:  Call  SetAnimation  ( .Actor:Self 00000002 0049000C )
  448:  Call  SetPartJumpGravity    ( .Actor:Self 00000002 *Fixed[1.6] )
  460:  Call  GetActorPos   ( .Actor:Self *Var0 *Var1 *Var2 )
  47C:  Sub   *Var0  00000028
  48C:  Call  JumpPartTo    ( .Actor:Self 00000002 *Var0  0` *Var2  12` .True )
  4B4:  Call  SetPartPos    ( .Actor:Self 00000003 *Var0  0` *Var2 )
  4D4:  Sub   *Var0  0000001E
  4E4:  Thread
  4EC:  	Call  SetPartRotationOffset ( .Actor:Self 00000003 00000000 00000010 00000000 )
  50C:  	Set   *Var0  00000000
  51C:  	Set   *Var1  00000000
  52C:  	Set   *Flag[00]  .False
  53C:  	Loop  0000000C
  548:  		Add   *Var0  0000001E
  558:  		Call  SetPartRotation   ( .Actor:Self 00000003 00000000 00000000 *Var0 )
  578:  		Add   *Var1  00000001
  588:  		If  *Var1  >=  00000006
  598:  			If  *Flag[00]  ==  .True
  5A8:  				Call  SetPartFlagBits   ( .Actor:Self 00000002 00000001 .False )
  5C4:  				Call  SetPartFlagBits   ( .Actor:Self 00000003 00000001 .True )
  5E0:  				Set   *Flag[00]  .False
  5F0:  			Else
  5F8:  				Call  SetPartFlagBits   ( .Actor:Self 00000002 00000001 .True )
  614:  				Call  SetPartFlagBits   ( .Actor:Self 00000003 00000001 .False )
  630:  				Set   *Flag[00]  .True
  640:  			EndIf
  648:  		EndIf
  650:  		Wait  1`
  65C:  	EndLoop
  664:  EndThread
  66C:  Thread
  674:  	Call  SetPartJumpGravity    ( .Actor:Self 00000003 *Fixed[1.3] )
  68C:  	Call  JumpPartTo    ( .Actor:Self 00000003 *Var0  0` *Var2  12` .True )
  6B4:  EndThread
  6BC:  Wait  1`
  6C8:  Call  ResetAllActorSounds   ( .Actor:Self )
  6D8:  Call  SetPartJumpGravity    ( .Actor:Self 00000002 *Fixed[1.3] )
  6F0:  Call  JumpPartTo    ( .Actor:Self 00000002 *Var0  0` *Var2  12` .True )
  718:  Call  PlayEffect    ( ~FX:Steam:SmallOutward *Var0 00000000 *Var2 00000000 00000000 00000000 00000000 00000000 00000000 00000000 00000000 00000000 )
  75C:  Call  GetPartOffset ( .Actor:Self 00000002 *Var0 *Var1 *Var2 )
  77C:  Call  SetActorPos   ( *VarB *Var0 *Var1 *Var2 )
  798:  Call  SetPartFlagBits       ( .Actor:Self 00000002 00000001 .True )
  7B4:  Call  SetPartFlagBits       ( .Actor:Self 00000003 00000001 .True )
  7D0:  Call  SetAnimation  ( *VarB 00000001 004A0001 )
  7E8:  Wait  20`
  7F4:  Call  SetAnimation  ( *VarB 00000001 004A0004 )
  80C:  Call  SetGoalToIndex        ( *VarB *VarA )
  820:  Call  GetGoalPos    ( *VarB *Var0 *Var1 *Var2 )
  83C:  Call  GetActorPos   ( *VarB *Var3 *Var4 *Var5 )
  858:  If  *Var0  <  *Var3
  868:  	Call  SetActorYaw   ( *VarB  0` )
  87C:  Else
  884:  	Call  SetActorYaw   ( *VarB  180` )
  898:  EndIf
  8A0:  Call  SetActorSpeed ( *VarB *Fixed[4.0] )
  8B4:  Call  RunToGoal     ( *VarB  0` .False )
  8CC:  Call  SetAnimation  ( *VarB 00000001 004A0001 )
  8E4:  Call  SetActorYaw   ( *VarB  0` )
  8F8:  Call  GetActorPos   ( *VarB *Var0 *Var1 *Var2 )
  914:  Call  ForceHomePos  ( *VarB *Var0 *Var1 *Var2 )
  930:  Call  HPBarToHome   ( *VarB )
  940:  Call  GetActorVar   ( .Actor:Self 00000000 *Var0 )
  958:  Add   *Var0  00000001
  968:  Call  SetActorVar   ( .Actor:Self 00000000 *Var0 )
  980:  Call  EnableIdleScript  ( .Actor:Self 00000001 )
  994:  Call  UseIdleAnimation  ( .Actor:Self .True )
  9A8:  Return
  9B0:  End
}

#new:Script $Script_GetFirstOpenColumn
{
    0:  Call  EnemyCreateTargetList ( 00008002 )
   10:  Call  InitTargetIterator ( )
   1C:  Label  0
   28:  Call  GetOwnerTarget        ( *Var0 *Var5 )
   3C:  Call  GetIndexFromHome      ( *Var0 *Var5 )
   50:  Mod   *Var5  00000004
   60:  Switch  *Var5
   6C:  	Case  ==  00000000
   78:  		Set   *Flag[01]  .True
   88:  	Case  ==  00000001
   94:  		Set   *Flag[02]  .True
   A4:  	Case  ==  00000002
   B0:  		Set   *Flag[03]  .True
   C0:  	Case  ==  00000003
   CC:  		Set   *Flag[04]  .True
   DC:  EndSwitch
   E4:  Call  ChooseNextTarget  ( .Iter:Next *Var0 )
   F8:  If  *Var0  !=  FFFFFFFF
  108:  	Goto  0
  114:  EndIf
  11C:  If  *Flag[01]  ==  .False
  12C:  	Set   *VarA  00000000
  13C:  	Return
  144:  EndIf
  14C:  If  *Flag[02]  ==  .False
  15C:  	Set   *VarA  00000001
  16C:  	Return
  174:  EndIf
  17C:  If  *Flag[03]  ==  .False
  18C:  	Set   *VarA  00000002
  19C:  	Return
  1A4:  EndIf
  1AC:  If  *Flag[04]  ==  .False
  1BC:  	Set   *VarA  00000003
  1CC:  	Return
  1D4:  EndIf
  1DC:  Set   *VarA  FFFFFFFF
  1EC:  Return
  1F4:  End
}

#new:Script $Script_CountActiveSummoners
{
    0:  Set   *Var9  00000000
   10:  Call  EnemyCreateTargetList ( 00008002 )
   20:  Call  InitTargetIterator ( )
   2C:  Label  0
   38:  Call  GetOwnerTarget        ( *Var0 *Var1 )
   4C:  Call  GetOriginalActorType  ( *Var0 *Var2 )
   60:  Switch  *Var2
   6C:  	Case  ==  0000002E
   78:  		Call  GetStatusFlags    ( *Var0 *Var3 )
   8C:  		If  *Var3  !&  ~Flags:StatusFlags:Sleep|Frozen|Fear|Paralyze|Dizzy|Stone|Stop % 35D000
   9C:  			Call  GetActorVar   ( *Var0 00000000 *Var3 )
   B4:  			If  *Var3  <  00000003
   C4:  				Add   *Var9  00000001
   D4:  			EndIf
   DC:  		EndIf
   E4:  EndSwitch
   EC:  Call  ChooseNextTarget  ( .Iter:Next *Var0 )
  100:  If  *Var0  !=  FFFFFFFF
  110:  	Goto  0
  11C:  EndIf
  124:  Return
  12C:  End
}

#new:Script $Script_TakeTurn_8021BD2C
{
    0:  Call  GetActorVar   ( .Actor:Self 00000000 *Var0 )
   18:  If  *Var0  >=  00000003
   28:  	ExecWait  $Script_ThrowSpint
   34:  	Return
   3C:  EndIf
   44:  ExecWait  $Script_GetFirstOpenColumn
   50:  If  *VarA  ==  FFFFFFFF
   60:  	ExecWait  $Script_ThrowSpint
   6C:  	Return
   74:  EndIf
   7C:  ExecWait  $Script_CountActiveSummoners
   88:  Switch  *Var9
   94:  	Case  ==  00000001
   A0:  		Call  RandInt   ( 000003E8 *Var0 )
   B4:  		If  *Var0  <  000001F4
   C4:  			ExecWait  $Script_SummonSpiny
   D0:  			Return
   D8:  		EndIf
   E0:  	Case  ==  00000002
   EC:  		Call  RandInt   ( 000003E8 *Var0 )
  100:  		If  *Var0  <  000000FA
  110:  			ExecWait  $Script_SummonSpiny
  11C:  			Return
  124:  		EndIf
  12C:  	Case  ==  00000003
  138:  		Call  RandInt   ( 000003E8 *Var0 )
  14C:  		If  *Var0  <  00000096
  15C:  			ExecWait  $Script_SummonSpiny
  168:  			Return
  170:  		EndIf
  178:  EndSwitch
  180:  ExecWait  $Script_ThrowSpint
  18C:  Return
  194:  End
}

PADDING: 8021BEC8 to 8021BED0 (005B5378 to 005B5380)
00000000 00000000

#new:IdleAnimations $IdleAnimations_8021BED0
{
	.Status:Normal    004A0001
	.Status:Stone     004A0000
	.Status:Sleep     004A0010
	.Status:Poison    004A0001
	.Status:Stop      004A0000
	.Status:Static    004A0001
	.Status:Paralyze  004A0000
	.Status:Dizzy     004A0012
	.Status:Fear      004A0012
	.Status:End
}

#new:IdleAnimations $IdleAnimations_8021BF1C
{
	.Status:Normal    004A0002
	.Status:Stone     004A0015
	.Status:Sleep     004A0011
	.Status:Poison    004A0002
	.Status:Stop      004A0015
	.Status:Static    004A0002
	.Status:Paralyze  004A0015
	.Status:Dizzy     004A0013
	.Status:Fear      004A0013
	.Status:End
}

#new:IdleAnimations $IdleAnimations_8021BF68
{
	.Status:Normal    0049000B
	.Status:End
}

#new:DefenseTable $DefenseTable_8021BF74
{
	.Element:Normal 00000003
	.Element:End
}

#new:DefenseTable $DefenseTable_8021BF80
{
	.Element:Normal 00000000
	.Element:End
}

#new:StatusTable $StatusTable_8021BF8C
{
	.Status:Normal      0`
	.Status:Default     0`
	.Status:Sleep      60`
	.Status:Poison     50`
	.Status:Frozen      0`
	.Status:Dizzy      75`
	.Status:Fear        0`
	.Status:Static     50`
	.Status:Paralyze   75`
	.Status:Shrink     75`
	.Status:Stop       90`
	.Status:DefaultTurnMod    0`
	.Status:SleepTurnMod      0`
	.Status:PoisonTurnMod     0`
	.Status:FrozenTurnMod     0`
	.Status:DizzyTurnMod      0`
	.Status:FearTurnMod       0`
	.Status:StaticTurnMod     0`
	.Status:ParalyzeTurnMod   0`
	.Status:ShrinkTurnMod     0`
	.Status:StopTurnMod       0`
	.Status:End
}

#new:PartsTable $PartsTable_8021C038
{
	00800000 01000000 001400FF $IdleAnimations_8021BED0 $DefenseTable_8021BF74 00201000 00000000 00FC0000 00000000
	00020001 02000000 000000FF $IdleAnimations_8021BF68 $DefenseTable_8021BF74 00000000 00000000 00000000 00000000
}

#new:Actor $Spiny
{
	% stats
	[Index]        2Fb
	[Level]        19`b
	[MaxHP]         5`b
	[Coins]         1`b
	[Flags]       00000000
	[StatusTable] $StatusTable_8021BF8C
	% ai
	[PartsCount]    2`s
	[PartsTable]  $PartsTable_8021C038
	[Script]      $Script_Init_8021C0A8
	% move effectiveness
	[Escape]       60`b
	[Item]         60`b
	[AirLift]      75`b
	[Hurricane]    75`b % Bow's "Spook" as well
	[UpAndAway]    95`b
	[PowerBounce]  90`b
	[SpinSmash]     0`b % weight (0-4)
	% ui positions
	[Size]         24`b  24`b % width height
	[HealthBar]     0`b   0`b % dx dy
	[StatusTurn]  -10`b  20`b % dx dy
	[StatusIcon]   10`b  20`b % dx dy
}

#new:Script $Script_Init_8021C0A8
{
    0:  Call  BindIdle      ( .Actor:Self $Script_Idle_8021C124 )
   14:  Call  BindTakeTurn  ( .Actor:Self $Script_TakeTurn_8021CDC0 )
   28:  Call  BindHandleEvent   ( .Actor:Self $Script_HandleEvent_8021C2F4 )
   3C:  Call  SetActorVar   ( .Actor:Self 00000000 00000000 )
   54:  Call  SetActorVar   ( .Actor:Self 00000001 00000000 )
   6C:  Return
   74:  End
}

#new:Script $Script_Idle_8021C124
{
    0:  Return
    8:  End
}

#new:Script $Script_8021C134
{
    0:  Call  SetAnimation  ( .Actor:Self 00000002 0049000C )
   18:  Call  SetPartFlagBits   ( .Actor:Self 00000001 00000001 .True )
   34:  Call  SetPartFlagBits   ( .Actor:Self 00000002 00000001 .False )
   50:  Call  SetActorYaw   ( .Actor:Self  180` )
   64:  Call  SetGoalToHome ( .Actor:Self )
   74:  Call  RunToGoal     ( .Actor:Self  0` .False )
   8C:  Call  SetActorYaw   ( .Actor:Self  0` )
   A0:  Call  SetPartFlagBits   ( .Actor:Self 00000001 00000001 .False )
   BC:  Call  SetPartFlagBits   ( .Actor:Self 00000002 00000001 .True )
   D8:  Call  SetAnimation  ( .Actor:Self 00000001 004A001A )
   F0:  Wait  8`
   FC:  Call  SetAnimation  ( .Actor:Self 00000001 004A0001 )
  114:  Return
  11C:  End
}

#new:Script $Script_8021C258
{
    0:  Call  GetActorVar   ( .Actor:Self 00000000 *Var3 )
   18:  If  *Var3  ==  00000001
   28:  	Set   *Var1  *Var2
   38:  EndIf
   40:  Return
   48:  End
}

#new:IntTable $IntTable_8021C2A8
{
	00000007 0000000D 00000011 00000015 00000017 00000018 00000017 00000015
	00000011 0000000D 00000007 00000000 00000004 00000007 00000006 00000004
	00000000 00000002 00000000
}

#new:Script $Script_HandleEvent_8021C2F4
{
    0:  Call  UseIdleAnimation  ( .Actor:Self .False )
   14:  Call  EnableIdleScript  ( .Actor:Self 00000000 )
   28:  Call  GetLastEvent      ( .Actor:Self *Var0 )
   3C:  Switch  *Var0
   48:  	CaseOR  ==  .Event:HitCombo % 9
   54:  	CaseOR  ==  .Event:Hit % A
   60:  		SetConst  *Var0  00000001
   70:  		SetConst  *Var1  004A0009
   80:  		SetConst  *Var2  004A000A
   90:  		ExecWait  $Script_8021C258
   9C:  		ExecWait  DoNormalHit
   A8:  	EndCaseGroup
   B0:  	Case  ==  .Event:BurnHit % E
   BC:  		Call  GetActorVar   ( .Actor:Self 00000000 *Var0 )
   D4:  		If  *Var0  !=  00000001
   E4:  			SetConst  *Var0  00000001
   F4:  			SetConst  *Var1  004A000B
  104:  			SetConst  *Var2  004A000C
  114:  			ExecWait  DoBurnHit
  120:  		Else
  128:  			SetConst  *Var0  00000001
  138:  			SetConst  *Var1  004A000D
  148:  			SetConst  *Var2  004A000E
  158:  			ExecWait  DoBurnHit
  164:  		EndIf
  16C:  	Case  ==  .Event:BurnDeath % 24
  178:  		Call  GetActorVar   ( .Actor:Self 00000000 *Var0 )
  190:  		If  *Var0  !=  00000001
  1A0:  			SetConst  *Var0  00000001
  1B0:  			SetConst  *Var1  004A000B
  1C0:  			SetConst  *Var2  004A000C
  1D0:  			ExecWait  DoBurnHit
  1DC:  			SetConst  *Var0  00000001
  1EC:  			SetConst  *Var1  004A000C
  1FC:  			ExecWait  DoDeath
  208:  		Else
  210:  			SetConst  *Var0  00000001
  220:  			SetConst  *Var1  004A000D
  230:  			SetConst  *Var2  004A000E
  240:  			ExecWait  DoBurnHit
  24C:  			SetConst  *Var0  00000001
  25C:  			SetConst  *Var1  004A000E
  26C:  			ExecWait  DoDeath
  278:  		EndIf
  280:  		Return
  288:  	Case  ==  .Event:SpinSmashHit % B
  294:  		SetConst  *Var0  00000001
  2A4:  		SetConst  *Var1  004A0009
  2B4:  		SetConst  *Var2  004A000A
  2C4:  		ExecWait  $Script_8021C258
  2D0:  		ExecWait  DoSpinSmashHit
  2DC:  	Case  ==  .Event:SpinSmashDeath % 21
  2E8:  		SetConst  *Var0  00000001
  2F8:  		SetConst  *Var1  004A0009
  308:  		SetConst  *Var2  004A000A
  318:  		ExecWait  $Script_8021C258
  324:  		ExecWait  DoSpinSmashHit
  330:  		SetConst  *Var0  00000001
  340:  		SetConst  *Var1  004A0009
  350:  		SetConst  *Var2  004A000A
  360:  		ExecWait  $Script_8021C258
  36C:  		ExecWait  DoDeath
  378:  		Return
  380:  	Case  ==  .Event:FlipTrigger % D
  38C:  		Call  GetActorVar   ( .Actor:Self 00000000 *Var0 )
  3A4:  		If  *Var0  ==  00000001
  3B4:  			Call  SetAnimation  ( .Actor:Self 00000001 004A000A )
  3CC:  		Else
  3D4:  			Call  SetAnimation  ( .Actor:Self 00000001 004A0016 )
  3EC:  		EndIf
  3F4:  		Call  SetActorVar       ( .Actor:Self 00000000 00000001 )
  40C:  		Call  SetActorVar       ( .Actor:Self 00000001 00000001 )
  424:  		Call  SetDefenseTable   ( .Actor:Self 00000001 $DefenseTable_8021BF80 )
  43C:  		Call  SetIdleAnimations ( .Actor:Self 00000001 $IdleAnimations_8021BF1C )
  454:  		Call  SetPartEventBits  ( .Actor:Self 00000001 00200000 .False )
  470:  		Call  SetActorFlagBits  ( .Actor:Self 00000400 .True )
  488:  		UseIntBuffer  $IntTable_8021C2A8
  494:  		Loop  00000013
  4A0:  			Get1Int  *Var0
  4AC:  			Call  SetActorDispOffset    ( .Actor:Self 00000000 *Var0 00000000 )
  4C8:  			Wait  1`
  4D4:  		EndLoop
  4DC:  		Wait  20`
  4E8:  	CaseOR  ==  00000017 % 17
  4F4:  	CaseOR  ==  .Event:Immune % 19
  500:  	CaseOR  ==  .Event:AirLiftFailed % 1F
  50C:  		Call  GetActorVar   ( .Actor:Self 00000000 *Var0 )
  524:  		Switch  *Var0
  530:  			Case  ==  00000000
  53C:  				SetConst  *Var0  00000001
  54C:  				SetConst  *Var1  004A0006
  55C:  				ExecWait  DoImmune
  568:  				Call  SetAnimation  ( .Actor:Self 00000001 004A0007 )
  580:  				Wait  10`
  58C:  			Case  ==  00000001
  598:  				SetConst  *Var0  00000001
  5A8:  				SetConst  *Var1  004A0002
  5B8:  				ExecWait  DoImmune
  5C4:  		EndSwitch
  5CC:  	EndCaseGroup
  5D4:  	Case  ==  .Event:SpikeTaunt % 1B
  5E0:  		Wait  10`
  5EC:  		Call  GetActorPos       ( .Actor:Self *Var0 *Var1 *Var2 )
  608:  		Call  GetStatusFlags    ( .Actor:Self *Var3 )
  61C:  		If  *Var0  &  00080000
  62C:  			Call  GetActorVar   ( .Actor:Self 00000000 *VarA )
  644:  			If  *VarA  ==  00000000
  654:  				Add   *Var0  00000000
  664:  			EndIf
  66C:  			Add   *Var1  00000008
  67C:  		Else
  684:  			Call  GetActorVar   ( .Actor:Self 00000000 *VarA )
  69C:  			If  *VarA  ==  00000000
  6AC:  				Add   *Var0  FFFFFFFF
  6BC:  			EndIf
  6C4:  			Add   *Var1  00000016
  6D4:  		EndIf
  6DC:  		Call  PlayEffect    ( ~FX:LensFlare:Rotating *Var0 *Var1 *Var2 00000014 00000000 00000000 00000000 00000000 00000000 00000000 00000000 00000000 )
  720:  		Wait  20`
  72C:  	Case  ==  .Event:Death % 20
  738:  		SetConst  *Var0  00000001
  748:  		SetConst  *Var1  004A0009
  758:  		SetConst  *Var2  004A000A
  768:  		ExecWait  $Script_8021C258
  774:  		ExecWait  DoNormalHit
  780:  		Wait  10`
  78C:  		SetConst  *Var0  00000001
  79C:  		SetConst  *Var1  004A0009
  7AC:  		SetConst  *Var2  004A000A
  7BC:  		ExecWait  $Script_8021C258
  7C8:  		ExecWait  DoDeath
  7D4:  		Return
  7DC:  	Case  ==  .Event:RecoverStatus % 31
  7E8:  		Call  GetActorVar   ( .Actor:Self 00000000 *Var0 )
  800:  		Switch  *Var0
  80C:  			Case  ==  00000000
  818:  				SetConst  *Var0  00000001
  828:  				SetConst  *Var1  004A0001
  838:  				ExecWait  DoRecover
  844:  			Case  ==  00000001
  850:  				SetConst  *Var0  00000001
  860:  				SetConst  *Var1  004A0002
  870:  				ExecWait  DoImmune
  87C:  		EndSwitch
  884:  	Case  ==  .Event:ScareAway % 39
  890:  		Call  GetActorVar   ( .Actor:Self 00000000 *Var0 )
  8A8:  		Switch  *Var0
  8B4:  			Case  ==  00000000
  8C0:  				SetConst  *Var0  00000001
  8D0:  				SetConst  *Var1  004A0004
  8E0:  				SetConst  *Var2  004A0009
  8F0:  				ExecWait  DoScareAway
  8FC:  				Return
  904:  			Case  ==  00000001
  910:  				SetConst  *Var0  00000001
  920:  				SetConst  *Var1  004A0002
  930:  				ExecWait  DoImmune
  93C:  		EndSwitch
  944:  	Case  ==  .Event:BeginAirLift % 3A
  950:  		Call  GetActorVar   ( .Actor:Self 00000000 *Var0 )
  968:  		Switch  *Var0
  974:  			Case  ==  00000000
  980:  				SetConst  *Var0  00000001
  990:  				SetConst  *Var1  004A0004
  9A0:  			Case  ==  00000001
  9AC:  				SetConst  *Var0  00000001
  9BC:  				SetConst  *Var1  004A0002
  9CC:  		EndSwitch
  9D4:  		ExecWait  DoAirLift
  9E0:  	Case  ==  .Event:BlowAway % 16
  9EC:  		Call  GetActorVar   ( .Actor:Self 00000000 *Var0 )
  A04:  		Switch  *Var0
  A10:  			Case  ==  00000000
  A1C:  				SetConst  *Var0  00000001
  A2C:  				SetConst  *Var1  004A0004
  A3C:  			Case  ==  00000001
  A48:  				SetConst  *Var0  00000001
  A58:  				SetConst  *Var1  004A0002
  A68:  		EndSwitch
  A70:  		ExecWait  DoBlowAway
  A7C:  		Return
  A84:  	Default
  A8C:  EndSwitch
  A94:  Call  EnableIdleScript  ( .Actor:Self 00000001 )
  AA8:  Call  UseIdleAnimation  ( .Actor:Self .True )
  ABC:  Return
  AC4:  End
}

#new:Script $Script_TakeTurn_8021CDC0
{
    0:  Call  UseIdleAnimation  ( .Actor:Self .False )
   14:  Call  EnableIdleScript  ( .Actor:Self 00000000 )
   28:  Call  GetActorVar       ( .Actor:Self 00000000 *Var0 )
   40:  If  *Var0  ==  00000001
   50:  	Call  GetActorVar   ( .Actor:Self 00000001 *Var0 )
   68:  	Sub   *Var0  00000001
   78:  	Call  SetActorVar   ( .Actor:Self 00000001 *Var0 )
   90:  	If  *Var0  >  00000000
   A0:  		Call  SetAnimation  ( .Actor:Self 00000001 004A0014 )
   B8:  		Call  AddActorDecoration    ( .Actor:Self 00000001 00000000 .Decoration:Sweat )
   D4:  		Wait  30`
   E0:  		Call  RemoveActorDecoration ( .Actor:Self 00000001 00000000 )
   F8:  	Else
  100:  		Call  SetAnimation      ( .Actor:Self 00000001 004A0014 )
  118:  		Call  AddActorDecoration    ( .Actor:Self 00000001 00000000 .Decoration:Sweat )
  134:  		Wait  20`
  140:  		Call  RemoveActorDecoration ( .Actor:Self 00000001 00000000 )
  158:  		SetConst  *Var0  00000001
  168:  		SetConst  *Var1  004A0002
  178:  		SetConst  *Var2  004A0001
  188:  		ExecWait  8029BBB4
  194:  		Call  SetActorVar       ( .Actor:Self 00000000 00000000 )
  1AC:  		Call  SetDefenseTable   ( .Actor:Self 00000001 $DefenseTable_8021BF74 )
  1C4:  		Call  SetIdleAnimations ( .Actor:Self 00000001 $IdleAnimations_8021BED0 )
  1DC:  		Call  SetPartEventBits  ( .Actor:Self 00000001 00200000 .True )
  1F8:  		Call  SetActorFlagBits  ( .Actor:Self 00000400 .False )
  210:  	EndIf
  218:  	Call  EnableIdleScript  ( .Actor:Self 00000001 )
  22C:  	Call  UseIdleAnimation  ( .Actor:Self .True )
  240:  	Return
  248:  EndIf
  250:  Call  UseBattleCamPreset    ( 0000003F )
  260:  Call  BattleCamTargetActor  ( .Actor:Self )
  270:  Call  8024ECF8  ( FFFFFFFF 00000001 00000000 )
  288:  Call  SetTargetActor        ( .Actor:Self .Actor:Player )
  29C:  Call  GetActorVar   ( .Actor:Self 00000000 *Var0 )
  2B4:  If  *Var0  ==  00000000
  2C4:  	Wait  10`
  2D0:  	Call  SetAnimation  ( .Actor:Self 00000001 004A0019 )
  2E8:  	Wait  8`
  2F4:  	Call  SetAnimation  ( .Actor:Self 00000001 004A0018 )
  30C:  	Wait  10`
  318:  Else
  320:  	Wait  20`
  32C:  EndIf
  334:  Thread
  33C:  	Call  GetActorPos   ( .Actor:Self *Var0 *Var1 *Var2 )
  358:  	Call  PlayEffect    ( ~FX:SmokeImpact:Small *Var0 *Var1 *Var2 00000020 00000004 00000000 0000000A 00000000 00000000 00000000 00000000 00000000 )
  39C:  	Wait  10`
  3A8:  	Call  PlayEffect    ( ~FX:SmokeImpact:Small *Var0 *Var1 *Var2 00000020 00000004 00000000 0000000A 00000000 00000000 00000000 00000000 00000000 )
  3EC:  	Wait  5`
  3F8:  	Call  PlayEffect    ( ~FX:SmokeImpact:Small *Var0 *Var1 *Var2 00000020 00000004 00000000 0000000A 00000000 00000000 00000000 00000000 00000000 )
  43C:  EndThread
  444:  Call  EnableActorBlur   ( .Actor:Self 00000001 )
  458:  Call  SetPartFlagBits   ( .Actor:Self 00000001 00000001 .True )
  474:  Call  SetPartFlagBits   ( .Actor:Self 00000002 00000001 .False )
  490:  Call  SetAnimation      ( .Actor:Self 00000002 0049000C )
  4A8:  Wait  10`
  4B4:  Call  PlaySoundAtPart   ( .Actor:Self 00000002 000002C7 )
  4CC:  Call  SetActorSounds    ( .Actor:Self .ActorSound:Walk 00000000 00000000 )
  4E8:  Call  SetPartSounds     ( .Actor:Self 00000002 .ActorSound:Walk 00000000 00000000 )
  508:  Call  EnemyTestTarget   ( .Actor:Self *VarA ~Flags:DamageType:0 00000000 00000004 00000010 )
  52C:  Switch  *VarA
  538:  	CaseOR  ==  .HitResult:Miss % 6
  544:  	CaseOR  ==  .HitResult:Lucky % 5
  550:  		Thread
  558:  			Loop
  564:  				Call  GetActorPos   ( .Actor:Player *Var0 *Var1 *Var2 )
  580:  				Add   *Var0  0000001E
  590:  				Call  GetActorPos   ( .Actor:Self *Var3 *Var4 *Var5 )
  5AC:  				If  *Var0  >  *Var3
  5BC:  					BreakLoop
  5C4:  				EndIf
  5CC:  				Wait  1`
  5D8:  			EndLoop
  5E0:  			Call  UseBattleCamPreset    ( 00000001 )
  5F0:  			If  *VarA  ==  .HitResult:Lucky % 5
  600:  				Call  EnemyTestTarget   ( .Actor:Self *Var0 ~Flags:DamageType:TriggerLucky 00000000 00000000 00000000 )
  624:  			EndIf
  62C:  			Wait  15`
  638:  			Call  UseBattleCamPreset    ( 00000002 )
  648:  		EndThread
  650:  		Call  SetGoalToTarget   ( .Actor:Self )
  660:  		Call  AddGoalPos        ( .Actor:Self  -200`  0`  0` )
  67C:  		Call  SetActorSpeed     ( .Actor:Self *Fixed[16.0] )
  690:  		Call  RunToGoal ( .Actor:Self  0` .False )
  6A8:  		Call  ResetAllActorSounds   ( .Actor:Self )
  6B8:  		Call  EnableActorBlur   ( .Actor:Self 00000000 )
  6CC:  		Call  UseBattleCamPreset    ( 00000002 )
  6DC:  		Call  YieldTurn ( )
  6E8:  		Call  AddActorDecoration    ( .Actor:Self 00000001 00000000 .Decoration:Sweat )
  704:  		Call  SetActorSpeed     ( .Actor:Self *Fixed[6.0] )
  718:  		ExecWait  $Script_8021C134
  724:  		Call  RemoveActorDecoration ( .Actor:Self 00000001 00000000 )
  73C:  		Return
  744:  	EndCaseGroup
  74C:  EndSwitch
  754:  Call  SetGoalToTarget   ( .Actor:Self )
  764:  Call  SetActorSpeed     ( .Actor:Self *Fixed[16.0] )
  778:  Call  RunToGoal ( .Actor:Self  0` .False )
  790:  Call  ResetAllActorSounds   ( .Actor:Self )
  7A0:  Wait  2`
  7AC:  Call  EnemyDamageTarget ( .Actor:Self *Var0 ~Flags:DamageType:0 0000FFFF 00000000 00000004 00000020 )
  7D4:  Switch  *Var0
  7E0:  	CaseOR  ==  .HitResult:Hit % 0
  7EC:  	CaseOR  ==  .HitResult:QuakeImmune % 2
  7F8:  		Call  UseBattleCamPreset    ( 00000002 )
  808:  		Call  SetAnimation  ( .Actor:Self 00000002 0049000B )
  820:  		Call  GetGoalPos    ( .Actor:Self *Var0 *Var1 *Var2 )
  83C:  		Add   *Var0  00000014
  84C:  		Set   *Var1  00000000
  85C:  		Call  SetActorJumpGravity   ( .Actor:Self *Fixed[1.0] )
  870:  		Call  SetGoalPos    ( .Actor:Self *Var0 *Var1 *Var2 )
  88C:  		Call  JumpToGoal    ( .Actor:Self  20` .False .True .False )
  8AC:  		Add   *Var0  0000000A
  8BC:  		Call  SetGoalPos    ( .Actor:Self *Var0 *Var1 *Var2 )
  8D8:  		Call  JumpToGoal    ( .Actor:Self  10` .False .True .False )
  8F8:  		Add   *Var0  0000000A
  908:  		Call  SetGoalPos    ( .Actor:Self *Var0 *Var1 *Var2 )
  924:  		Call  JumpToGoal    ( .Actor:Self  5` .False .True .False )
  944:  		Call  EnableActorBlur       ( .Actor:Self 00000000 )
  958:  		Call  YieldTurn ( )
  964:  		Call  SetActorSpeed ( .Actor:Self *Fixed[6.0] )
  978:  		ExecWait  $Script_8021C134
  984:  	EndCaseGroup
  98C:  EndSwitch
  994:  Call  EnableActorBlur   ( .Actor:Self 00000000 )
  9A8:  Call  EnableIdleScript  ( .Actor:Self 00000001 )
  9BC:  Call  UseIdleAnimation  ( .Actor:Self .True )
  9D0:  Return
  9D8:  End
}

#new:DefenseTable $DefenseTable_8021D7A0
{
	.Element:Normal 00000000
	.Element:End
}

#new:StatusTable $StatusTable_8021D7AC
{
	.Status:Normal      0`
	.Status:Default     0`
	.Status:Sleep      95`
	.Status:Poison     50`
	.Status:Frozen      0`
	.Status:Dizzy      30`
	.Status:Fear        0`
	.Status:Static     50`
	.Status:Paralyze   30`
	.Status:Shrink     30`
	.Status:Stop       30`
	.Status:DefaultTurnMod    0`
	.Status:SleepTurnMod      0`
	.Status:PoisonTurnMod     0`
	.Status:FrozenTurnMod     0`
	.Status:DizzyTurnMod      0`
	.Status:FearTurnMod       0`
	.Status:StaticTurnMod     0`
	.Status:ParalyzeTurnMod   1`
	.Status:ShrinkTurnMod     0`
	.Status:StopTurnMod       0`
	.Status:End
}

#new:PartsTable $PartsTable_8021D858
{
	00800000 01000000 FE1E00FF $IdleAnimations_8021D8A4 $DefenseTable_8021D7A0 00000000 00000000 00F80000 00000000
}

#new:Actor $CrazeeDayzee
{
	% stats
	[Index]        32b
	[Level]        19`b
	[MaxHP]         8`b
	[Coins]         2`b
	[Flags]       00000000
	[StatusTable] $StatusTable_8021D7AC
	% ai
	[PartsCount]    1`s
	[PartsTable]  $PartsTable_8021D858
	[Script]      $Script_Init_8021D8F0
	% move effectiveness
	[Escape]       50`b
	[Item]        100`b
	[AirLift]      85`b
	[Hurricane]    80`b % Bow's "Spook" as well
	[UpAndAway]    95`b
	[PowerBounce]  75`b
	[SpinSmash]     0`b % weight (0-4)
	% ui positions
	[Size]         32`b  34`b % width height
	[HealthBar]     0`b   0`b % dx dy
	[StatusTurn]  -14`b  17`b % dx dy
	[StatusIcon]    9`b  25`b % dx dy
}

#new:IdleAnimations $IdleAnimations_8021D8A4
{
	.Status:Normal    00480001
	.Status:Stone     00480000
	.Status:Sleep     0048000C
	.Status:Poison    00480001
	.Status:Stop      00480000
	.Status:Static    00480001
	.Status:Paralyze  00480000
	.Status:Dizzy     0048000B
	.Status:Fear      0048000B
	.Status:End
}

#new:Script $Script_Init_8021D8F0
{
    0:  Call  BindTakeTurn      ( .Actor:Self $Script_TakeTurn_8021E7BC )
   14:  Call  BindIdle  ( .Actor:Self $Script_Idle_8021D93C )
   28:  Call  BindHandleEvent   ( .Actor:Self $Script_HandleEvent_8021D988 )
   3C:  Return
   44:  End
}

#new:Script $Script_Idle_8021D93C
{
    0:  Return
    8:  End
}

#new:Script $Script_8021D94C
{
    0:  SetConst  *Var0  00000001
   10:  SetConst  *Var1  00480003
   20:  ExecWait  DoReturnHome
   2C:  Return
   34:  End
}

#new:Script $Script_HandleEvent_8021D988
{
    0:  Call  UseIdleAnimation  ( .Actor:Self .False )
   14:  Call  GetLastEvent      ( .Actor:Self *Var0 )
   28:  Switch  *Var0
   34:  	CaseOR  ==  .Event:HitCombo % 9
   40:  	CaseOR  ==  .Event:Hit % A
   4C:  		SetConst  *Var0  00000001
   5C:  		SetConst  *Var1  00480008
   6C:  		ExecWait  DoNormalHit
   78:  	EndCaseGroup
   80:  	Case  ==  .Event:BurnHit % E
   8C:  		SetConst  *Var0  00000001
   9C:  		SetConst  *Var1  00480009
   AC:  		SetConst  *Var2  0048000A
   BC:  		ExecWait  DoBurnHit
   C8:  	Case  ==  .Event:BurnDeath % 24
   D4:  		SetConst  *Var0  00000001
   E4:  		SetConst  *Var1  00480009
   F4:  		SetConst  *Var2  0048000A
  104:  		ExecWait  DoBurnHit
  110:  		SetConst  *Var0  00000001
  120:  		SetConst  *Var1  0048000A
  130:  		ExecWait  DoDeath
  13C:  		Return
  144:  	Case  ==  .Event:SpinSmashHit % B
  150:  		SetConst  *Var0  00000001
  160:  		SetConst  *Var1  00480008
  170:  		ExecWait  DoSpinSmashHit
  17C:  	Case  ==  .Event:SpinSmashDeath % 21
  188:  		SetConst  *Var0  00000001
  198:  		SetConst  *Var1  00480008
  1A8:  		ExecWait  DoSpinSmashHit
  1B4:  		SetConst  *Var0  00000001
  1C4:  		SetConst  *Var1  00480008
  1D4:  		ExecWait  DoDeath
  1E0:  		Return
  1E8:  	Case  ==  .Event:ShockHit % 2F
  1F4:  		SetConst  *Var0  00000001
  204:  		SetConst  *Var1  00480008
  214:  		ExecWait  DoShockHit
  220:  		SetConst  *Var0  00000001
  230:  		SetConst  *Var1  00480008
  240:  		ExecWait  DoJumpBack
  24C:  		ExecWait  $Script_8021D94C
  258:  	Case  ==  .Event:ShockDeath % 26
  264:  		SetConst  *Var0  00000001
  274:  		SetConst  *Var1  00480008
  284:  		ExecWait  DoShockHit
  290:  		SetConst  *Var0  00000001
  2A0:  		SetConst  *Var1  00480008
  2B0:  		ExecWait  DoDeath
  2BC:  		Return
  2C4:  	CaseOR  ==  00000017 % 17
  2D0:  	CaseOR  ==  .Event:Immune % 19
  2DC:  	CaseOR  ==  .Event:AirLiftFailed % 1F
  2E8:  		SetConst  *Var0  00000001
  2F8:  		SetConst  *Var1  00480001
  308:  		ExecWait  DoImmune
  314:  	EndCaseGroup
  31C:  	Case  ==  .Event:Death % 20
  328:  		SetConst  *Var0  00000001
  338:  		SetConst  *Var1  00480008
  348:  		ExecWait  DoNormalHit
  354:  		Wait  10`
  360:  		SetConst  *Var0  00000001
  370:  		SetConst  *Var1  00480008
  380:  		ExecWait  DoDeath
  38C:  		Return
  394:  	Case  ==  .Event:RecoverStatus % 31
  3A0:  		SetConst  *Var0  00000001
  3B0:  		SetConst  *Var1  00480001
  3C0:  		ExecWait  DoRecover
  3CC:  	Case  ==  .Event:ScareAway % 39
  3D8:  		SetConst  *Var0  00000001
  3E8:  		SetConst  *Var1  00480004
  3F8:  		SetConst  *Var2  00480008
  408:  		ExecWait  DoScareAway
  414:  		Return
  41C:  	Case  ==  .Event:BeginAirLift % 3A
  428:  		SetConst  *Var0  00000001
  438:  		SetConst  *Var1  00480004
  448:  		ExecWait  DoAirLift
  454:  	Case  ==  .Event:BlowAway % 16
  460:  		Call  GetStatusFlags    ( .Actor:Self *Var0 )
  474:  		If  *Var0  !&  ~Flags:StatusFlags:Sleep|Frozen|Fear|Paralyze|Dizzy|Stone|Stop % 35D000
  484:  			If  *Var0  &  ~Flags:StatusFlags:Shrink % 80000
  494:  				Call  SetActorDispOffset    ( .Actor:Self 00000000 00000001 00000000 )
  4B0:  			Else
  4B8:  				Call  SetActorDispOffset    ( .Actor:Self 00000000 00000003 00000000 )
  4D4:  			EndIf
  4DC:  		EndIf
  4E4:  		SetConst  *Var0  00000001
  4F4:  		SetConst  *Var1  00480008
  504:  		ExecWait  DoBlowAway
  510:  		Return
  518:  	Default
  520:  EndSwitch
  528:  Call  UseIdleAnimation  ( .Actor:Self .True )
  53C:  Return
  544:  End
}

#new:Script $Script_Crazee_Sing
{
    0:  Call  UseIdleAnimation  ( .Actor:Self .False )
   14:  Call  SetTargetActor    ( .Actor:Self .Actor:Player )
   28:  Call  GetBattlePhase    ( *Var0 )
   38:  If  *Var0  ==  00000001
   48:  	Call  GetActorPos   ( .Actor:Self *Var0 *Var1 *Var2 )
   64:  	Call  SetActorPos   ( .Actor:Self  -20` *Var1 *Var2 )
   80:  Else
   88:  	Call  UseBattleCamPreset    ( 0000003F )
   98:  	Call  BattleCamTargetActor  ( .Actor:Self )
   A8:  	Call  8024ECF8  ( FFFFFFFF 00000001 00000000 )
   C0:  	Call  MoveBattleCamOver     (  70` )
   D0:  	Set   *Flag[00]  .False
   E0:  	Label  0
   EC:  	If  *Flag[00]  ==  .False
   FC:  		Call  SetAnimation  ( .Actor:Self 00000001 0048000E )
  114:  		Set   *Flag[00]  .True
  124:  	Else
  12C:  		Call  SetAnimation  ( .Actor:Self 00000001 0048000F )
  144:  		Set   *Flag[00]  .False
  154:  	EndIf
  15C:  	Wait  1`
  168:  	Call  SetActorJumpGravity   ( .Actor:Self *Fixed[0.5] )
  17C:  	Call  GetActorPos   ( .Actor:Self *Var0 *Var1 *Var2 )
  198:  	Sub   *Var0  00000014
  1A8:  	Call  SetGoalPos    ( .Actor:Self *Var0 *Var1 *Var2 )
  1C4:  	Call  JumpToGoal    ( .Actor:Self  15` .False .True .False )
  1E4:  	If  *Var0  >  00000000
  1F4:  		Goto  0
  200:  	EndIf
  208:  	If  *Flag[00]  ==  .False
  218:  		Call  SetAnimation  ( .Actor:Self 00000001 0048000E )
  230:  		Set   *Flag[00]  .True
  240:  	Else
  248:  		Call  SetAnimation  ( .Actor:Self 00000001 0048000F )
  260:  		Set   *Flag[00]  .False
  270:  	EndIf
  278:  	Wait  1`
  284:  	Call  SetActorJumpGravity   ( .Actor:Self *Fixed[0.5] )
  298:  	Call  SetGoalPos    ( .Actor:Self  -35`  0`  10` )
  2B4:  	Call  JumpToGoal    ( .Actor:Self  15` .False .True .False )
  2D4:  EndIf
  2DC:  Call  SetAnimation  ( .Actor:Self 00000001 00480001 )
  2F4:  Wait  10`
  300:  Thread
  308:  	Call  SetAnimation  ( .Actor:Self 00000001 00480006 )
  320:  	Wait  40`
  32C:  	Call  SetAnimation  ( .Actor:Self 00000001 00480007 )
  344:  EndThread
  34C:  Wait  20`
  358:  Call  PlaySoundAtActor  ( .Actor:Self .Sound:DayzeeSong )
  36C:  Call  GetActorPos       ( .Actor:Self *Var0 *Var1 *Var2 )
  388:  Add   *Var1  00000019
  398:  Add   *Var2  00000002
  3A8:  Loop  0000000D
  3B4:  	Call  RandInt       ( 0000001E *Var3 )
  3C8:  	Sub   *Var3  0000000F
  3D8:  	Add   *Var3  *Var0
  3E8:  	Call  PlayEffect    ( ~FX:MusicNote:Left *Var3 *Var1 *Var2 00000000 00000000 00000000 00000000 00000000 00000000 00000000 00000000 00000000 )
  42C:  	Wait  10`
  438:  EndLoop
  440:  Call  SetAnimation      ( .Actor:Self 00000001 00480001 )
  458:  Wait  10`
  464:  Call  EnemyTestTarget   ( .Actor:Self *Var0 ~Flags:DamageType:0 00000000 00000001 00000010 )
  488:  Switch  *Var0
  494:  	CaseOR  ==  .HitResult:Miss % 6
  4A0:  	CaseOR  ==  .HitResult:Lucky % 5
  4AC:  		Set   *VarA  *Var0
  4BC:  		If  *VarA  ==  .HitResult:Lucky % 5
  4CC:  			Call  EnemyTestTarget   ( .Actor:Self *Var0 ~Flags:DamageType:TriggerLucky 00000000 00000000 00000000 )
  4F0:  		EndIf
  4F8:  		Call  UseBattleCamPreset    ( 00000002 )
  508:  		Wait  15`
  514:  		Call  YieldTurn ( )
  520:  		Call  SetActorYaw   ( .Actor:Self  180` )
  534:  		Call  AddActorDecoration    ( .Actor:Self 00000001 00000000 .Decoration:Sweat )
  550:  		ExecWait  $Script_8021D94C
  55C:  		Call  RemoveActorDecoration ( .Actor:Self 00000001 00000000 )
  574:  		Call  SetActorYaw   ( .Actor:Self  0` )
  588:  		Call  UseIdleAnimation      ( .Actor:Self .True )
  59C:  		Return
  5A4:  	EndCaseGroup
  5AC:  EndSwitch
  5B4:  Call  SetTargetActor    ( .Actor:Self .Actor:Player )
  5C8:  Call  SetGoalToTarget   ( .Actor:Self )
  5D8:  Wait  2`
  5E4:  Call  EnemyDamageTarget ( .Actor:Self *VarF ~Flags:DamageType:NoContact 00000000 ~DebuffType:Sleep:3:20` 00000004 00000020 )
  60C:  Switch  *VarF
  618:  	CaseOR  ==  .HitResult:Hit % 0
  624:  	CaseOR  ==  .HitResult:QuakeImmune % 2
  630:  		Call  UseBattleCamPreset    ( 00000002 )
  640:  		Call  MoveBattleCamOver     (  10` )
  650:  		Wait  20`
  65C:  		Call  YieldTurn ( )
  668:  		ExecWait  $Script_8021D94C
  674:  	EndCaseGroup
  67C:  EndSwitch
  684:  Call  UseIdleAnimation  ( .Actor:Self .True )
  698:  Return
  6A0:  End
}

#new:Script $Script_Crazee_RunAway
{
    0:  Call  UseIdleAnimation  ( .Actor:Self .False )
   14:  Call  UseBattleCamPreset    ( 00000013 )
   24:  Call  SetBattleCamZoom  (  300` )
   34:  Call  SetBattleCamOffsetZ   (  30` )
   44:  Call  GetActorPos       ( .Actor:Self *Var0 *Var1 *Var2 )
   60:  Sub   *Var0  00000014
   70:  Call  SetBattleCamTarget    ( *Var0 *Var1 *Var2 )
   88:  Call  MoveBattleCamOver (  30` )
   98:  Call  SetActorYaw       ( .Actor:Self  180` )
   AC:  Call  SetAnimation      ( .Actor:Self 00000001 00480003 )
   C4:  Wait  10`
   D0:  Call  GetActorPos       ( .Actor:Self *Var0 *Var1 *Var2 )
   EC:  Call  SetActorSpeed     ( .Actor:Self *Fixed[1.0] )
  100:  Sub   *Var0  00000014
  110:  Call  SetGoalPos        ( .Actor:Self *Var0 *Var1 *Var2 )
  12C:  Call  RunToGoal ( .Actor:Self  0` .False )
  144:  Wait  20`
  150:  Call  UseBattleCamPreset    ( 00000002 )
  160:  Call  EnableActorBlur   ( .Actor:Self 00000001 )
  174:  Call  SetAnimation      ( .Actor:Self 00000001 00480004 )
  18C:  Call  SetActorSpeed     ( .Actor:Self *Fixed[12.0] )
  1A0:  Add   *Var0  000000C8
  1B0:  Call  SetGoalPos        ( .Actor:Self *Var0 *Var1 *Var2 )
  1CC:  Call  RunToGoal ( .Actor:Self  0` .False )
  1E4:  Call  EnableActorBlur   ( .Actor:Self 00000000 )
  1F8:  Call  SetBattleFlagBits ( 00040000 .True )
  20C:  Call  UseIdleAnimation  ( .Actor:Self .True )
  220:  Call  RemoveActor       ( .Actor:Self )
  230:  Return
  238:  End
}

#new:Script $Script_TakeTurn_8021E7BC
{
    0:  Call  GetBattlePhase    ( *Var0 )
   10:  If  *Var0  ==  00000001
   20:  	ExecWait  $Script_Crazee_Sing
   2C:  	Return
   34:  EndIf
   3C:  Call  GetActorHP    ( .Actor:Self *Var0 )
   50:  Call  RandInt       ( 00000064 *Var1 )
   64:  Switch  *Var0
   70:  	Case  ==  00000001
   7C:  		If  *Var1  <  00000050
   8C:  			ExecWait  $Script_Crazee_RunAway
   98:  			Return
   A0:  		EndIf
   A8:  	Case  ==  00000002
   B4:  		If  *Var1  <  00000028
   C4:  			ExecWait  $Script_Crazee_RunAway
   D0:  			Return
   D8:  		EndIf
   E0:  	Case  ==  00000003
   EC:  		If  *Var1  <  00000014
   FC:  			ExecWait  $Script_Crazee_RunAway
  108:  			Return
  110:  		EndIf
  118:  	Case  ==  00000004
  124:  		If  *Var1  <  0000000A
  134:  			ExecWait  $Script_Crazee_RunAway
  140:  			Return
  148:  		EndIf
  150:  EndSwitch
  158:  ExecWait  $Script_Crazee_Sing
  164:  Return
  16C:  End
}

#new:IdleAnimations $IdleAnimations_8021E930
{
	.Status:Normal    004B0001
	.Status:Stone     004B0000
	.Status:Sleep     004B0009
	.Status:Poison    004B0001
	.Status:Stop      004B0000
	.Status:Static    004B0001
	.Status:Paralyze  004B0000
	.Status:Dizzy     004B000A
	.Status:Fear      004B000A
	.Status:End
}

#new:DefenseTable $DefenseTable_8021E97C
{
	.Element:Normal 00000000
	.Element:End
}

#new:StatusTable $StatusTable_8021E988
{
	.Status:Normal      0`
	.Status:Default     0`
	.Status:Sleep      60`
	.Status:Poison     50`
	.Status:Frozen      0`
	.Status:Dizzy     100`
	.Status:Fear        0`
	.Status:Static      0`
	.Status:Paralyze   90`
	.Status:Shrink     75`
	.Status:Stop       90`
	.Status:DefaultTurnMod    0`
	.Status:SleepTurnMod      0`
	.Status:PoisonTurnMod     0`
	.Status:FrozenTurnMod     0`
	.Status:DizzyTurnMod      1`
	.Status:FearTurnMod       0`
	.Status:StaticTurnMod     0`
	.Status:ParalyzeTurnMod   0`
	.Status:ShrinkTurnMod     0`
	.Status:StopTurnMod       0`
	.Status:End
}

#new:PartsTable $PartsTable_8021EA34
{
	00800000 01000000 F92100FF $IdleAnimations_8021E930 $DefenseTable_8021E97C 00000000 00000000 02F60000 00000000
	00120001 02000000 001800FF $IdleAnimations_8021E930 $DefenseTable_8021E97C 00000000 00000000 FFFB0000 00000000
	00120001 03000000 001800FF $IdleAnimations_8021E930 $DefenseTable_8021E97C 00000000 00000000 FFFB0000 00000000
	00120001 04000000 001800FF $IdleAnimations_8021E930 $DefenseTable_8021E97C 00000000 00000000 FFFB0000 00000000
	00120001 05000000 001800FF $IdleAnimations_8021E930 $DefenseTable_8021E97C 00000000 00000000 FFFB0000 00000000
	00120001 06000000 001800FF $IdleAnimations_8021E930 $DefenseTable_8021E97C 00000000 00000000 FFFB0000 00000000
}

#new:Actor $Bzzap
{
	% stats
	[Index]        31b
	[Level]        19`b
	[MaxHP]         3`b
	[Coins]         1`b
	[Flags]       00000200
	[StatusTable] $StatusTable_8021E988
	% ai
	[PartsCount]    6`s
	[PartsTable]  $PartsTable_8021EA34
	[Script]      $Script_Init_8021EB34
	% move effectiveness
	[Escape]       40`b
	[Item]         70`b
	[AirLift]      95`b
	[Hurricane]    95`b % Bow's "Spook" as well
	[UpAndAway]    95`b
	[PowerBounce]  90`b
	[SpinSmash]     0`b % weight (0-4)
	% ui positions
	[Size]         38`b  38`b % width height
	[HealthBar]     0`b   0`b % dx dy
	[StatusTurn]  -10`b  20`b % dx dy
	[StatusIcon]   10`b  20`b % dx dy
}

#new:Script $Script_Init_8021EB34
{
    0:  Call  BindTakeTurn  ( .Actor:Self $Script_TakeTurn_8022139C )
   14:  Call  BindIdle      ( .Actor:Self $Script_Idle_8021EC20 )
   28:  Call  BindHandleEvent   ( .Actor:Self $Script_HandleEvent_8021EDB8 )
   3C:  Call  SetPartScale  ( .Actor:Self 00000002 *Fixed[0.4] *Fixed[0.4] *Fixed[0.4] )
   5C:  Call  SetPartScale  ( .Actor:Self 00000003 *Fixed[0.4] *Fixed[0.4] *Fixed[0.4] )
   7C:  Call  SetPartScale  ( .Actor:Self 00000004 *Fixed[0.4] *Fixed[0.4] *Fixed[0.4] )
   9C:  Call  SetPartScale  ( .Actor:Self 00000005 *Fixed[0.4] *Fixed[0.4] *Fixed[0.4] )
   BC:  Call  SetPartScale  ( .Actor:Self 00000006 *Fixed[0.4] *Fixed[0.4] *Fixed[0.4] )
   DC:  Return
   E4:  End
}

#new:Script $Script_Idle_8021EC20
{
    0:  Label  0
    C:  Call  GetStatusFlags    ( .Actor:Self *VarA )
   20:  If  *VarA  &  ~Flags:StatusFlags:Sleep|Dizzy % 41000
   30:  	Call  SetTargetOffset       ( .Actor:Self 00000001  -7`  19` )
   4C:  	Call  8027D4C8  ( FFFFFF81 00000001 00000002 FFFFFFFA )
   68:  	Call  $Function_80218000    ( FFFFFFEC 00000014 0000000A 0000001B )
   84:  Else
   8C:  	Call  SetTargetOffset       ( .Actor:Self 00000001  -7`  33` )
   A8:  	Call  8027D4C8  ( FFFFFF81 00000001 00000002 FFFFFFF6 )
   C4:  	Call  $Function_80218000    ( FFFFFFF0 00000016 00000004 00000016 )
   E0:  EndIf
   E8:  Wait  1`
   F4:  Goto  0
  100:  Return
  108:  End
}

#new:Script $Script_8021ED30
{
    0:  Call  SetPartRotation   ( .Actor:Self 00000001 00000000 00000000 00000000 )
   20:  Call  SetAnimation  ( .Actor:Self 00000001 004B0003 )
   38:  Call  SetGoalToHome ( .Actor:Self )
   48:  Call  SetActorSpeed ( .Actor:Self *Fixed[8.0] )
   5C:  Call  FlyToGoal     ( .Actor:Self  0`  1` .Easing:SinOut )
   78:  Return
   80:  End
}

#new:Script $Script_HandleEvent_8021EDB8
{
    0:  Call  UseIdleAnimation  ( .Actor:Self .False )
   14:  Call  EnableIdleScript  ( .Actor:Self 00000000 )
   28:  Call  GetLastEvent      ( .Actor:Self *Var0 )
   3C:  Switch  *Var0
   48:  	CaseOR  ==  .Event:HitCombo % 9
   54:  	CaseOR  ==  .Event:Hit % A
   60:  		SetConst  *Var0  00000001
   70:  		SetConst  *Var1  004B0006
   80:  		ExecWait  DoNormalHit
   8C:  	EndCaseGroup
   94:  	Case  ==  .Event:BurnHit % E
   A0:  		SetConst  *Var0  00000001
   B0:  		SetConst  *Var1  004B0007
   C0:  		SetConst  *Var2  004B0008
   D0:  		ExecWait  DoBurnHit
   DC:  	Case  ==  .Event:BurnDeath % 24
   E8:  		SetConst  *Var0  00000001
   F8:  		SetConst  *Var1  004B0007
  108:  		SetConst  *Var2  004B0008
  118:  		ExecWait  DoBurnHit
  124:  		SetConst  *Var0  00000001
  134:  		SetConst  *Var1  004B0008
  144:  		ExecWait  DoDeath
  150:  		Return
  158:  	Case  ==  .Event:SpinSmashHit % B
  164:  		SetConst  *Var0  00000001
  174:  		SetConst  *Var1  004B0006
  184:  		ExecWait  DoSpinSmashHit
  190:  	Case  ==  .Event:SpinSmashDeath % 21
  19C:  		SetConst  *Var0  00000001
  1AC:  		SetConst  *Var1  004B0006
  1BC:  		ExecWait  DoSpinSmashHit
  1C8:  		SetConst  *Var0  00000001
  1D8:  		SetConst  *Var1  004B000B
  1E8:  		ExecWait  DoDeath
  1F4:  		Return
  1FC:  	Case  ==  .Event:ShockHit % 2F
  208:  		SetConst  *Var0  00000001
  218:  		SetConst  *Var1  004B0006
  228:  		ExecWait  DoShockHit
  234:  		SetConst  *Var0  00000001
  244:  		SetConst  *Var1  004B0006
  254:  		ExecWait  DoJumpBack
  260:  		ExecWait  $Script_8021ED30
  26C:  	Case  ==  .Event:ShockDeath % 26
  278:  		SetConst  *Var0  00000001
  288:  		SetConst  *Var1  004B0006
  298:  		ExecWait  DoShockHit
  2A4:  		SetConst  *Var0  00000001
  2B4:  		SetConst  *Var1  004B000B
  2C4:  		ExecWait  DoDeath
  2D0:  		Return
  2D8:  	CaseOR  ==  00000017 % 17
  2E4:  	CaseOR  ==  .Event:Immune % 19
  2F0:  	CaseOR  ==  .Event:AirLiftFailed % 1F
  2FC:  		SetConst  *Var0  00000001
  30C:  		SetConst  *Var1  004B0001
  31C:  		ExecWait  DoImmune
  328:  	EndCaseGroup
  330:  	Case  ==  .Event:Death % 20
  33C:  		SetConst  *Var0  00000001
  34C:  		SetConst  *Var1  004B0006
  35C:  		ExecWait  DoNormalHit
  368:  		Wait  10`
  374:  		SetConst  *Var0  00000001
  384:  		SetConst  *Var1  004B000B
  394:  		ExecWait  DoDeath
  3A0:  		Return
  3A8:  	Case  ==  .Event:BeginFirstStrike % 38
  3B4:  		Call  SetActorPos       ( .Actor:Self  20`  0`  0` )
  3D0:  		Call  HPBarToCurrent    ( .Actor:Self )
  3E0:  	Case  ==  .Event:EndFirstStrike % 35
  3EC:  		ExecWait  $Script_8021ED30
  3F8:  		Call  HPBarToHome   ( .Actor:Self )
  408:  	Case  ==  .Event:RecoverStatus % 31
  414:  		SetConst  *Var0  00000001
  424:  		SetConst  *Var1  004B0001
  434:  		ExecWait  DoRecover
  440:  	Case  ==  .Event:ScareAway % 39
  44C:  		Call  SetActorFlagBits  ( .Actor:Self 00000200 .False )
  464:  		SetConst  *Var0  00000001
  474:  		SetConst  *Var1  004B0003
  484:  		SetConst  *Var2  004B0006
  494:  		ExecWait  DoScareAway
  4A0:  		Return
  4A8:  	Case  ==  .Event:BeginAirLift % 3A
  4B4:  		SetConst  *Var0  00000001
  4C4:  		SetConst  *Var1  004B0001
  4D4:  		ExecWait  DoAirLift
  4E0:  	Case  ==  .Event:BlowAway % 16
  4EC:  		Call  GetStatusFlags    ( .Actor:Self *Var0 )
  500:  		If  *Var0  !&  ~Flags:StatusFlags:Sleep|Frozen|Fear|Paralyze|Dizzy|Stone|Stop % 35D000
  510:  			If  *Var0  &  ~Flags:StatusFlags:Shrink % 80000
  520:  				Call  SetActorDispOffset    ( .Actor:Self 00000000 00000003 00000000 )
  53C:  			Else
  544:  				Call  SetActorDispOffset    ( .Actor:Self 00000000 00000009 00000000 )
  560:  			EndIf
  568:  		EndIf
  570:  		SetConst  *Var0  00000001
  580:  		SetConst  *Var1  004B0006
  590:  		ExecWait  DoBlowAway
  59C:  	Default
  5A4:  EndSwitch
  5AC:  Call  EnableIdleScript  ( .Actor:Self 00000001 )
  5C0:  Call  UseIdleAnimation  ( .Actor:Self .True )
  5D4:  Return
  5DC:  End
}

#new:Script $Script_Sting
{
    0:  Call  UseIdleAnimation  ( .Actor:Self .False )
   14:  Call  EnableIdleScript  ( .Actor:Self 00000000 )
   28:  Call  SetTargetActor    ( .Actor:Self .Actor:Player )
   3C:  Call  UseBattleCamPreset    ( 0000003F )
   4C:  Call  BattleCamTargetActor  ( .Actor:Self )
   5C:  Call  8024ECF8  ( FFFFFFFF 00000001 00000000 )
   74:  Call  SetAnimation      ( .Actor:Self 00000001 004B0003 )
   8C:  Call  SetGoalToTarget   ( .Actor:Self )
   9C:  Call  AddGoalPos        ( .Actor:Self  52`  10`  0` )
   B8:  Call  SetActorSpeed     ( .Actor:Self *Fixed[6.0] )
   CC:  Call  FlyToGoal ( .Actor:Self  0`  -4` .Easing:CosIn )
   E8:  Call  EnemyTestTarget   ( .Actor:Self *Var0 ~Flags:DamageType:0 00000000 00000001 00000010 )
  10C:  Switch  *Var0
  118:  	CaseOR  ==  .HitResult:Miss % 6
  124:  	CaseOR  ==  .HitResult:Lucky % 5
  130:  		Set   *VarA  *Var0
  140:  		Wait  10`
  14C:  		Call  SetGoalToTarget   ( .Actor:Self )
  15C:  		Call  GetGoalPos    ( .Actor:Self *Var0 *Var1 *Var2 )
  178:  		Add   *Var0  00000014
  188:  		Add   *Var2  00000001
  198:  		Call  SetGoalPos    ( .Actor:Self *Var0 *Var1 *Var2 )
  1B4:  		Call  SetActorSpeed ( .Actor:Self *Fixed[8.0] )
  1C8:  		Call  FlyToGoal     ( .Actor:Self  0`  -10` .Easing:QuadraticOut )
  1E4:  		Wait  5`
  1F0:  		Call  PlaySoundAtActor  ( .Actor:Self 000020CA )
  204:  		Call  SetAnimation  ( .Actor:Self 00000001 004B0004 )
  21C:  		Wait  10`
  228:  		If  *VarA  ==  .HitResult:Lucky % 5
  238:  			Call  EnemyTestTarget   ( .Actor:Self *Var0 ~Flags:DamageType:TriggerLucky 00000000 00000000 00000000 )
  25C:  		EndIf
  264:  		Wait  15`
  270:  		Call  UseBattleCamPreset    ( 00000002 )
  280:  		Call  YieldTurn ( )
  28C:  		Call  SetActorYaw   ( .Actor:Self  180` )
  2A0:  		Call  AddActorDecoration    ( .Actor:Self 00000001 00000000 .Decoration:Sweat )
  2BC:  		ExecWait  $Script_8021ED30
  2C8:  		Call  RemoveActorDecoration ( .Actor:Self 00000001 00000000 )
  2E0:  		Call  SetActorYaw   ( .Actor:Self  0` )
  2F4:  		Call  EnableIdleScript      ( .Actor:Self 00000001 )
  308:  		Call  UseIdleAnimation      ( .Actor:Self .True )
  31C:  		Return
  324:  	EndCaseGroup
  32C:  EndSwitch
  334:  Wait  10`
  340:  Call  SetGoalToTarget   ( .Actor:Self )
  350:  Call  GetGoalPos    ( .Actor:Self *Var0 *Var1 *Var2 )
  36C:  Add   *Var0  00000014
  37C:  Add   *Var2  00000001
  38C:  Call  SetGoalPos    ( .Actor:Self *Var0 *Var1 *Var2 )
  3A8:  Call  SetActorSpeed ( .Actor:Self *Fixed[5.0] )
  3BC:  Call  FlyToGoal     ( .Actor:Self  0`  -10` .Easing:QuadraticOut )
  3D8:  Wait  5`
  3E4:  Call  PlaySoundAtActor  ( .Actor:Self 000020CA )
  3F8:  Call  SetAnimation  ( .Actor:Self 00000001 004B0004 )
  410:  Wait  6`
  41C:  Wait  2`
  428:  Call  EnemyDamageTarget ( .Actor:Self *Var0 ~Flags:DamageType:0 00000000 ~DebuffType:Poison:3:40` 00000006 00000020 )
  450:  Switch  *Var0
  45C:  	CaseOR  ==  .HitResult:Hit % 0
  468:  	CaseOR  ==  .HitResult:QuakeImmune % 2
  474:  		Call  UseBattleCamPreset    ( 00000002 )
  484:  		Wait  20`
  490:  		Call  YieldTurn ( )
  49C:  		ExecWait  $Script_8021ED30
  4A8:  	EndCaseGroup
  4B0:  EndSwitch
  4B8:  Call  EnableIdleScript  ( .Actor:Self 00000001 )
  4CC:  Call  UseIdleAnimation  ( .Actor:Self .True )
  4E0:  Return
  4E8:  End
}

#new:Script $Script_8021F88C
{
    0:  Set   *Var9  *Var0
   10:  Call  SetPartYaw    ( .Actor:Self *Var9  0` )
   28:  Call  GetActorPos   ( .Actor:Self *VarA *VarB *VarC )
   44:  Add   *VarA  000000C8
   54:  Add   *VarB  00000064
   64:  Call  SetPartPos    ( .Actor:Self *Var9 *VarA *VarB *VarC )
   84:  Call  SetPartFlagBits       ( .Actor:Self *Var9 00000001 .False )
   A0:  Call  SetAnimation  ( .Actor:Self *Var9 004B0003 )
   B8:  Call  GetActorPos   ( .Actor:Self *VarA *VarB *VarC )
   D4:  Add   *VarB  00000032
   E4:  Sub   *VarC  0000001E
   F4:  Call  SetPartMoveSpeed      ( .Actor:Self *Var9 *Fixed[6.0] )
  10C:  Call  SetPartJumpGravity    ( .Actor:Self *Var9 *Fixed[1.0] )
  124:  Call  FlyPartTo     ( .Actor:Self *Var9 *VarA *VarB *VarC  0`  -10` .Easing:Linear )
  150:  Call  GetActorPos   ( .Actor:Self *Var3 *Var4 *Var5 )
  16C:  Call  GetPartOffset ( .Actor:Self *Var9 *Var6 *Var7 *Var8 )
  18C:  Call  MakeLerp      ( 0000005A 000001C2 00000032 .Easing:Linear )
  1A8:  Label  0
  1B4:  Call  UpdateLerp ( )
  1C0:  Call  $Function_802180CC    ( *Var3 *Var5 0000001E *Var0 *Var6 *Var8 )
  1E4:  Call  SetPartPos    ( .Actor:Self *Var9 *Var6 *Var7 *Var8 )
  204:  If  *Var3  >  *Var6
  214:  	Call  SetPartYaw    ( .Actor:Self *Var9  180` )
  22C:  Else
  234:  	Call  SetPartYaw    ( .Actor:Self *Var9  0` )
  24C:  EndIf
  254:  Wait  1`
  260:  If  *Var1  ==  00000001
  270:  	Goto  0
  27C:  EndIf
  284:  Call  SetPartYaw    ( .Actor:Self *Var9  0` )
  29C:  If  *Var9  ==  00000002
  2AC:  	Call  UseBattleCamPreset    ( 00000008 )
  2BC:  	Call  SetBattleCamZoom      (  400` )
  2CC:  	Call  SetBattleCamOffsetZ   (  30` )
  2DC:  	Call  BattleCamTargetActor  ( .Actor:Player )
  2EC:  	Call  MoveBattleCamOver     (  60` )
  2FC:  EndIf
  304:  Call  SetAnimation  ( .Actor:Self *Var9 004B0003 )
  31C:  Call  GetActorPos   ( .Actor:Player *VarA *VarB *VarC )
  338:  Add   *VarB  0000001E
  348:  Add   *VarC  0000001E
  358:  Call  SetPartMoveSpeed      ( .Actor:Self *Var9 *Fixed[6.0] )
  370:  Call  SetPartJumpGravity    ( .Actor:Self *Var9 *Fixed[1.0] )
  388:  Call  FlyPartTo     ( .Actor:Self *Var9 *VarA *VarB *VarC  0`  -10` .Easing:Linear )
  3B4:  Call  GetActorPos   ( .Actor:Player *Var3 *Var4 *Var5 )
  3D0:  Call  GetPartOffset ( .Actor:Self *Var9 *Var6 *Var7 *Var8 )
  3F0:  Call  MakeLerp      ( FFFFFFA6 FFFFFD30 00000064 .Easing:Linear )
  40C:  Label  1
  418:  Call  UpdateLerp ( )
  424:  Call  $Function_802180CC    ( *Var3 *Var5 0000001E *Var0 *Var6 *Var8 )
  448:  Call  SetPartPos    ( .Actor:Self *Var9 *Var6 *Var7 *Var8 )
  468:  If  *Var3  >  *Var6
  478:  	Call  SetPartYaw    ( .Actor:Self *Var9  180` )
  490:  Else
  498:  	Call  SetPartYaw    ( .Actor:Self *Var9  0` )
  4B0:  EndIf
  4B8:  Wait  1`
  4C4:  If  *Var1  ==  00000001
  4D4:  	Goto  1
  4E0:  EndIf
  4E8:  Return
  4F0:  End
}

#new:Script $Script_Swarm
{
    0:  Call  UseIdleAnimation  ( .Actor:Self .False )
   14:  Call  EnableIdleScript  ( .Actor:Self 00000000 )
   28:  Call  SetTargetActor    ( .Actor:Self .Actor:Player )
   3C:  Call  UseBattleCamPreset    ( 0000003F )
   4C:  Call  BattleCamTargetActor  ( .Actor:Self )
   5C:  Call  8024ECF8      ( FFFFFFFF 00000001 00000000 )
   74:  Call  SetPartSounds ( .Actor:Self 00000002 .ActorSound:Fly 00000000 00000000 )
   94:  Call  SetPartSounds ( .Actor:Self 00000003 .ActorSound:Fly 00000000 00000000 )
   B4:  Call  SetPartSounds ( .Actor:Self 00000004 .ActorSound:Fly 00000000 00000000 )
   D4:  Call  SetPartSounds ( .Actor:Self 00000005 .ActorSound:Fly 00000000 00000000 )
   F4:  Call  SetPartSounds ( .Actor:Self 00000006 .ActorSound:Fly 00000000 00000000 )
  114:  Call  PlaySoundAtActor  ( .Actor:Self 000020CC )
  128:  Call  SetActorYaw   ( .Actor:Self  180` )
  13C:  Call  SetAnimation  ( .Actor:Self 00000001 004B0005 )
  154:  Wait  40`
  160:  Call  SetAnimation  ( .Actor:Self 00000001 004B0001 )
  178:  Call  SetActorYaw   ( .Actor:Self  0` )
  18C:  Call  PlaySound     ( 00000358 )
  19C:  Set   *Var0  00000002
  1AC:  Exec  $Script_8021F88C *VarA
  1BC:  Wait  11`
  1C8:  Set   *Var0  00000003
  1D8:  Exec  $Script_8021F88C
  1E4:  Wait  11`
  1F0:  Set   *Var0  00000004
  200:  Exec  $Script_8021F88C
  20C:  Wait  11`
  218:  Set   *Var0  00000005
  228:  Exec  $Script_8021F88C
  234:  Wait  11`
  240:  Set   *Var0  00000006
  250:  Exec  $Script_8021F88C
  25C:  Label  0
  268:  DoesScriptExist  *VarA *Var0
  278:  Wait  1`
  284:  If  *Var0  ==  00000001
  294:  	Goto  0
  2A0:  EndIf
  2A8:  Call  EnemyTestTarget   ( .Actor:Self *Var0 ~Flags:DamageType:0 00000000 00000001 00000010 )
  2CC:  Switch  *Var0
  2D8:  	CaseOR  ==  .HitResult:Miss % 6
  2E4:  	CaseOR  ==  .HitResult:Lucky % 5
  2F0:  		Set   *VarA  *Var0
  300:  		Thread
  308:  			Call  PlaySoundAtPart   ( .Actor:Self 00000002 000020CB )
  320:  			Call  SetAnimation  ( .Actor:Self 00000002 004B0004 )
  338:  			Call  SetGoalToTarget   ( .Actor:Self )
  348:  			Call  AddGoalPos    ( .Actor:Self  -30`  -20`  1` )
  364:  			Call  GetGoalPos    ( .Actor:Self *Var0 *Var1 *Var2 )
  380:  			Call  SetPartMoveSpeed  ( .Actor:Self 00000002 *Fixed[3.0] )
  398:  			Call  FlyPartTo     ( .Actor:Self 00000002 *Var0 *Var1 *Var2  0`  -10` .Easing:Linear )
  3C4:  			Call  SetAnimation  ( .Actor:Self 00000002 004B0003 )
  3DC:  			Call  SetPartYaw    ( .Actor:Self 00000002  180` )
  3F4:  			Call  GetActorPos   ( .Actor:Self *Var0 *Var1 *Var2 )
  410:  			Add   *Var1  00000064
  420:  			Add   *Var2  00000064
  430:  			Call  AddActorDecoration    ( .Actor:Self 00000002 00000000 .Decoration:Sweat )
  44C:  			Call  FlyPartTo     ( .Actor:Self 00000002 *Var0 *Var1 *Var2  0`  10` .Easing:Linear )
  478:  			Call  RemoveActorDecoration ( .Actor:Self 00000002 00000000 )
  490:  			Call  SetPartFlagBits   ( .Actor:Self 00000002 00000001 .True )
  4AC:  		EndThread
  4B4:  		Wait  11`
  4C0:  		Thread
  4C8:  			Call  PlaySoundAtPart   ( .Actor:Self 00000003 000020CB )
  4E0:  			Call  SetAnimation  ( .Actor:Self 00000003 004B0004 )
  4F8:  			Call  SetGoalToTarget   ( .Actor:Self )
  508:  			Call  AddGoalPos    ( .Actor:Self  -30`  -20`  1` )
  524:  			Call  GetGoalPos    ( .Actor:Self *Var0 *Var1 *Var2 )
  540:  			Call  SetPartMoveSpeed  ( .Actor:Self 00000003 *Fixed[3.0] )
  558:  			Call  FlyPartTo     ( .Actor:Self 00000003 *Var0 *Var1 *Var2  0`  -10` .Easing:Linear )
  584:  			Call  SetAnimation  ( .Actor:Self 00000003 004B0003 )
  59C:  			Call  SetPartYaw    ( .Actor:Self 00000003  180` )
  5B4:  			Call  GetActorPos   ( .Actor:Self *Var0 *Var1 *Var2 )
  5D0:  			Add   *Var1  00000064
  5E0:  			Add   *Var2  00000064
  5F0:  			Call  AddActorDecoration    ( .Actor:Self 00000003 00000000 .Decoration:Sweat )
  60C:  			Call  FlyPartTo     ( .Actor:Self 00000003 *Var0 *Var1 *Var2  0`  10` .Easing:Linear )
  638:  			Call  RemoveActorDecoration ( .Actor:Self 00000003 00000000 )
  650:  			Call  SetPartFlagBits   ( .Actor:Self 00000003 00000001 .True )
  66C:  		EndThread
  674:  		Wait  11`
  680:  		Thread
  688:  			Call  PlaySoundAtPart   ( .Actor:Self 00000004 000020CB )
  6A0:  			Call  SetAnimation  ( .Actor:Self 00000004 004B0004 )
  6B8:  			Call  SetGoalToTarget   ( .Actor:Self )
  6C8:  			Call  AddGoalPos    ( .Actor:Self  -30`  -20`  1` )
  6E4:  			Call  GetGoalPos    ( .Actor:Self *Var0 *Var1 *Var2 )
  700:  			Call  SetPartMoveSpeed  ( .Actor:Self 00000004 *Fixed[3.0] )
  718:  			Call  FlyPartTo     ( .Actor:Self 00000004 *Var0 *Var1 *Var2  0`  -10` .Easing:Linear )
  744:  			Call  SetAnimation  ( .Actor:Self 00000004 004B0003 )
  75C:  			Call  SetPartYaw    ( .Actor:Self 00000004  180` )
  774:  			Call  GetActorPos   ( .Actor:Self *Var0 *Var1 *Var2 )
  790:  			Add   *Var1  00000064
  7A0:  			Add   *Var2  00000064
  7B0:  			Call  AddActorDecoration    ( .Actor:Self 00000004 00000000 .Decoration:Sweat )
  7CC:  			Call  FlyPartTo     ( .Actor:Self 00000004 *Var0 *Var1 *Var2  0`  10` .Easing:Linear )
  7F8:  			Call  RemoveActorDecoration ( .Actor:Self 00000004 00000000 )
  810:  			Call  SetPartFlagBits   ( .Actor:Self 00000004 00000001 .True )
  82C:  		EndThread
  834:  		Wait  11`
  840:  		Thread
  848:  			Call  PlaySoundAtPart   ( .Actor:Self 00000005 000020CB )
  860:  			Call  SetAnimation  ( .Actor:Self 00000005 004B0004 )
  878:  			Call  SetGoalToTarget   ( .Actor:Self )
  888:  			Call  AddGoalPos    ( .Actor:Self  -30`  -20`  1` )
  8A4:  			Call  GetGoalPos    ( .Actor:Self *Var0 *Var1 *Var2 )
  8C0:  			Call  SetPartMoveSpeed  ( .Actor:Self 00000005 *Fixed[3.0] )
  8D8:  			Call  FlyPartTo     ( .Actor:Self 00000005 *Var0 *Var1 *Var2  0`  -10` .Easing:Linear )
  904:  			Call  SetAnimation  ( .Actor:Self 00000005 004B0003 )
  91C:  			Call  SetPartYaw    ( .Actor:Self 00000005  180` )
  934:  			Call  GetActorPos   ( .Actor:Self *Var0 *Var1 *Var2 )
  950:  			Add   *Var1  00000064
  960:  			Add   *Var2  00000064
  970:  			Call  AddActorDecoration    ( .Actor:Self 00000005 00000000 .Decoration:Sweat )
  98C:  			Call  FlyPartTo     ( .Actor:Self 00000005 *Var0 *Var1 *Var2  0`  10` .Easing:Linear )
  9B8:  			Call  RemoveActorDecoration ( .Actor:Self 00000005 00000000 )
  9D0:  			Call  SetPartFlagBits   ( .Actor:Self 00000005 00000001 .True )
  9EC:  		EndThread
  9F4:  		Wait  11`
  A00:  		Thread
  A08:  			Call  PlaySoundAtPart   ( .Actor:Self 00000006 000020CB )
  A20:  			Call  SetAnimation  ( .Actor:Self 00000006 004B0004 )
  A38:  			Call  SetGoalToTarget   ( .Actor:Self )
  A48:  			Call  AddGoalPos    ( .Actor:Self  -30`  -20`  1` )
  A64:  			Call  GetGoalPos    ( .Actor:Self *Var0 *Var1 *Var2 )
  A80:  			Call  SetPartMoveSpeed  ( .Actor:Self 00000006 *Fixed[3.0] )
  A98:  			Call  FlyPartTo     ( .Actor:Self 00000006 *Var0 *Var1 *Var2  0`  -10` .Easing:Linear )
  AC4:  			Call  SetAnimation  ( .Actor:Self 00000006 004B0003 )
  ADC:  			Call  SetPartYaw    ( .Actor:Self 00000006  180` )
  AF4:  			Call  GetActorPos   ( .Actor:Self *Var0 *Var1 *Var2 )
  B10:  			Add   *Var1  00000064
  B20:  			Add   *Var2  00000064
  B30:  			Call  AddActorDecoration    ( .Actor:Self 00000006 00000000 .Decoration:Sweat )
  B4C:  			Call  FlyPartTo     ( .Actor:Self 00000006 *Var0 *Var1 *Var2  0`  10` .Easing:Linear )
  B78:  			Call  RemoveActorDecoration ( .Actor:Self 00000006 00000000 )
  B90:  			Call  SetPartFlagBits   ( .Actor:Self 00000006 00000001 .True )
  BAC:  		EndThread
  BB4:  		Wait  11`
  BC0:  		If  *VarA  ==  .HitResult:Lucky % 5
  BD0:  			Call  EnemyTestTarget   ( .Actor:Self *Var0 ~Flags:DamageType:TriggerLucky 00000000 00000000 00000000 )
  BF4:  		EndIf
  BFC:  		Wait  30`
  C08:  		Call  UseBattleCamPreset    ( 00000002 )
  C18:  		Wait  30`
  C24:  		Call  StopSound ( 00000358 )
  C34:  		Call  YieldTurn ( )
  C40:  		Call  EnableIdleScript  ( .Actor:Self 00000001 )
  C54:  		Call  UseIdleAnimation  ( .Actor:Self .True )
  C68:  		Return
  C70:  	EndCaseGroup
  C78:  EndSwitch
  C80:  Thread
  C88:  	Call  PlaySoundAtPart   ( .Actor:Self 00000002 000020CB )
  CA0:  	Call  SetAnimation  ( .Actor:Self 00000002 004B0004 )
  CB8:  	Call  SetGoalToTarget   ( .Actor:Self )
  CC8:  	Call  AddGoalPos    ( .Actor:Self  -10`  -10`  1` )
  CE4:  	Call  GetGoalPos    ( .Actor:Self *Var0 *Var1 *Var2 )
  D00:  	Call  SetPartMoveSpeed  ( .Actor:Self 00000002 *Fixed[3.0] )
  D18:  	Call  FlyPartTo     ( .Actor:Self 00000002 *Var0 *Var1 *Var2  0`  -10` .Easing:Linear )
  D44:  	Wait  2`
  D50:  	Call  SetGoalToTarget   ( .Actor:Self )
  D60:  	Call  EnemyDamageTarget ( .Actor:Self *Var0 ~Flags:DamageType:NoContact 00000000 00000000 00000001 00000010 )
  D88:  	Call  SetAnimation  ( .Actor:Self 00000002 004B0003 )
  DA0:  	Call  SetPartYaw    ( .Actor:Self 00000002  180` )
  DB8:  	Call  GetActorPos   ( .Actor:Self *Var0 *Var1 *Var2 )
  DD4:  	Add   *Var1  00000064
  DE4:  	Add   *Var2  00000064
  DF4:  	Call  FlyPartTo     ( .Actor:Self 00000002 *Var0 *Var1 *Var2  0`  10` .Easing:Linear )
  E20:  	Call  SetPartFlagBits   ( .Actor:Self 00000002 00000001 .True )
  E3C:  EndThread
  E44:  Wait  11`
  E50:  Thread
  E58:  	Call  PlaySoundAtPart   ( .Actor:Self 00000003 000020CB )
  E70:  	Call  SetAnimation  ( .Actor:Self 00000003 004B0004 )
  E88:  	Call  SetGoalToTarget   ( .Actor:Self )
  E98:  	Call  AddGoalPos    ( .Actor:Self  -10`  -10`  1` )
  EB4:  	Call  GetGoalPos    ( .Actor:Self *Var0 *Var1 *Var2 )
  ED0:  	Call  SetPartMoveSpeed  ( .Actor:Self 00000003 *Fixed[3.0] )
  EE8:  	Call  FlyPartTo     ( .Actor:Self 00000003 *Var0 *Var1 *Var2  0`  -10` .Easing:Linear )
  F14:  	Wait  2`
  F20:  	Call  SetGoalToTarget   ( .Actor:Self )
  F30:  	Call  EnemyDamageTarget ( .Actor:Self *Var0 ~Flags:DamageType:NoContact 00000000 00000000 00000001 00000040 )
  F58:  	Call  SetAnimation  ( .Actor:Self 00000003 004B0003 )
  F70:  	Call  SetPartYaw    ( .Actor:Self 00000003  180` )
  F88:  	Call  GetActorPos   ( .Actor:Self *Var0 *Var1 *Var2 )
  FA4:  	Add   *Var1  00000064
  FB4:  	Add   *Var2  00000064
  FC4:  	Call  FlyPartTo     ( .Actor:Self 00000003 *Var0 *Var1 *Var2  0`  10` .Easing:Linear )
  FF0:  	Call  SetPartFlagBits   ( .Actor:Self 00000003 00000001 .True )
 100C:  EndThread
 1014:  Wait  11`
 1020:  Thread
 1028:  	Call  PlaySoundAtPart   ( .Actor:Self 00000004 000020CB )
 1040:  	Call  SetAnimation  ( .Actor:Self 00000004 004B0004 )
 1058:  	Call  SetGoalToTarget   ( .Actor:Self )
 1068:  	Call  AddGoalPos    ( .Actor:Self  -10`  -10`  1` )
 1084:  	Call  GetGoalPos    ( .Actor:Self *Var0 *Var1 *Var2 )
 10A0:  	Call  SetPartMoveSpeed  ( .Actor:Self 00000004 *Fixed[3.0] )
 10B8:  	Call  FlyPartTo     ( .Actor:Self 00000004 *Var0 *Var1 *Var2  0`  -10` .Easing:Linear )
 10E4:  	Wait  2`
 10F0:  	Call  SetGoalToTarget   ( .Actor:Self )
 1100:  	Call  EnemyDamageTarget ( .Actor:Self *Var0 ~Flags:DamageType:NoContact 00000000 00000000 00000001 00000040 )
 1128:  	Call  SetAnimation  ( .Actor:Self 00000004 004B0003 )
 1140:  	Call  SetPartYaw    ( .Actor:Self 00000004  180` )
 1158:  	Call  GetActorPos   ( .Actor:Self *Var0 *Var1 *Var2 )
 1174:  	Add   *Var1  00000064
 1184:  	Add   *Var2  00000064
 1194:  	Call  FlyPartTo     ( .Actor:Self 00000004 *Var0 *Var1 *Var2  0`  10` .Easing:Linear )
 11C0:  	Call  SetPartFlagBits   ( .Actor:Self 00000004 00000001 .True )
 11DC:  EndThread
 11E4:  Wait  11`
 11F0:  Thread
 11F8:  	Call  PlaySoundAtPart   ( .Actor:Self 00000005 000020CB )
 1210:  	Call  SetAnimation  ( .Actor:Self 00000005 004B0004 )
 1228:  	Call  SetGoalToTarget   ( .Actor:Self )
 1238:  	Call  AddGoalPos    ( .Actor:Self  -10`  -10`  1` )
 1254:  	Call  GetGoalPos    ( .Actor:Self *Var0 *Var1 *Var2 )
 1270:  	Call  SetPartMoveSpeed  ( .Actor:Self 00000005 *Fixed[3.0] )
 1288:  	Call  FlyPartTo     ( .Actor:Self 00000005 *Var0 *Var1 *Var2  0`  -10` .Easing:Linear )
 12B4:  	Wait  2`
 12C0:  	Call  SetGoalToTarget   ( .Actor:Self )
 12D0:  	Call  EnemyDamageTarget ( .Actor:Self *Var0 ~Flags:DamageType:NoContact 00000000 00000000 00000001 00000040 )
 12F8:  	Call  SetAnimation  ( .Actor:Self 00000005 004B0003 )
 1310:  	Call  SetPartYaw    ( .Actor:Self 00000005  180` )
 1328:  	Call  GetActorPos   ( .Actor:Self *Var0 *Var1 *Var2 )
 1344:  	Add   *Var1  00000064
 1354:  	Add   *Var2  00000064
 1364:  	Call  FlyPartTo     ( .Actor:Self 00000005 *Var0 *Var1 *Var2  0`  10` .Easing:Linear )
 1390:  	Call  SetPartFlagBits   ( .Actor:Self 00000005 00000001 .True )
 13AC:  EndThread
 13B4:  Wait  11`
 13C0:  Wait  1`
 13CC:  Call  PlaySoundAtPart   ( .Actor:Self 00000006 000020CB )
 13E4:  Call  SetAnimation      ( .Actor:Self 00000006 004B0004 )
 13FC:  Call  SetGoalToTarget   ( .Actor:Self )
 140C:  Call  AddGoalPos        ( .Actor:Self  -10`  -10`  1` )
 1428:  Call  GetGoalPos        ( .Actor:Self *Var0 *Var1 *Var2 )
 1444:  Call  SetPartMoveSpeed  ( .Actor:Self 00000006 *Fixed[3.0] )
 145C:  Call  FlyPartTo ( .Actor:Self 00000006 *Var0 *Var1 *Var2  0`  -10` .Easing:Linear )
 1488:  Wait  2`
 1494:  Call  SetGoalToTarget   ( .Actor:Self )
 14A4:  Call  EnemyDamageTarget ( .Actor:Self *Var0 ~Flags:DamageType:NoContact 00000000 00000000 00000001 00000020 )
 14CC:  Switch  *Var0
 14D8:  	CaseOR  ==  .HitResult:Hit % 0
 14E4:  	CaseOR  ==  .HitResult:QuakeImmune % 2
 14F0:  		Call  UseBattleCamPreset    ( 00000002 )
 1500:  		Call  SetAnimation  ( .Actor:Self 00000006 004B0003 )
 1518:  		Call  SetPartYaw    ( .Actor:Self 00000006  180` )
 1530:  		Call  GetActorPos   ( .Actor:Self *Var0 *Var1 *Var2 )
 154C:  		Add   *Var1  00000064
 155C:  		Add   *Var2  00000064
 156C:  		Call  FlyPartTo     ( .Actor:Self 00000006 *Var0 *Var1 *Var2  0`  10` .Easing:Linear )
 1598:  		Call  SetPartFlagBits       ( .Actor:Self 00000006 00000001 .True )
 15B4:  		Call  StopSound     ( 00000358 )
 15C4:  		Call  YieldTurn ( )
 15D0:  	EndCaseGroup
 15D8:  EndSwitch
 15E0:  Call  EnableIdleScript  ( .Actor:Self 00000001 )
 15F4:  Call  UseIdleAnimation  ( .Actor:Self .True )
 1608:  Return
 1610:  End
}

#new:Script $Script_TakeTurn_8022139C
{
    0:  Call  GetBattlePhase    ( *Var0 )
   10:  If  *Var0  ==  00000001
   20:  	ExecWait  $Script_Sting
   2C:  	Return
   34:  EndIf
   3C:  Call  RandInt   ( 000003E8 *Var0 )
   50:  If  *Var0  <  000001F4
   60:  	ExecWait  $Script_Sting
   6C:  Else
   74:  	ExecWait  $Script_Swarm
   80:  EndIf
   88:  Return
   90:  End
}

PADDING: 80221434 to 80221440 (005BA8E4 to 005BA8F0)
00000000 00000000 00000000

#new:DefenseTable $DefenseTable_80221440
{
	.Element:Normal 00000001
	.Element:End
}

#new:StatusTable $StatusTable_8022144C
{
	.Status:Normal      0`
	.Status:Default     0`
	.Status:Sleep      10`
	.Status:Poison      0`
	.Status:Frozen      0`
	.Status:Dizzy      10`
	.Status:Fear        0`
	.Status:Static      0`
	.Status:Paralyze   10`
	.Status:Shrink     10`
	.Status:Stop       10`
	.Status:DefaultTurnMod    0`
	.Status:SleepTurnMod     -1`
	.Status:PoisonTurnMod     0`
	.Status:FrozenTurnMod     0`
	.Status:DizzyTurnMod     -1`
	.Status:FearTurnMod       0`
	.Status:StaticTurnMod     0`
	.Status:ParalyzeTurnMod  -1`
	.Status:ShrinkTurnMod     0`
	.Status:StopTurnMod      -2`
	.Status:End
}

#new:PartsTable $PartsTable_802214F8
{
	00800000 01000000 FE1E00FF $IdleAnimations_80221544 $DefenseTable_80221440 00000000 00000000 00F80000 00000000
}

#new:Actor $AmazyDayzee
{
	% stats
	[Index]        33b
	[Level]       100`b
	[MaxHP]        20`b
	[Coins]         5`b
	[Flags]       00000000
	[StatusTable] $StatusTable_8022144C
	% ai
	[PartsCount]    1`s
	[PartsTable]  $PartsTable_802214F8
	[Script]      $Script_Init_80221590
	% move effectiveness
	[Escape]       90`b
	[Item]        100`b
	[AirLift]      85`b
	[Hurricane]    80`b % Bow's "Spook" as well
	[UpAndAway]    95`b
	[PowerBounce]  70`b
	[SpinSmash]     0`b % weight (0-4)
	% ui positions
	[Size]         32`b  34`b % width height
	[HealthBar]     0`b   0`b % dx dy
	[StatusTurn]  -14`b  17`b % dx dy
	[StatusIcon]    9`b  25`b % dx dy
}

#new:IdleAnimations $IdleAnimations_80221544
{
	.Status:Normal    00480101
	.Status:Stone     00480100
	.Status:Sleep     0048010C
	.Status:Poison    00480101
	.Status:Stop      00480100
	.Status:Static    00480101
	.Status:Paralyze  00480100
	.Status:Dizzy     0048010B
	.Status:Fear      0048010B
	.Status:End
}

#new:Script $Script_Init_80221590
{
    0:  Call  BindTakeTurn      ( .Actor:Self $Script_TakeTurn_80222500 )
   14:  Call  BindIdle  ( .Actor:Self $Script_Idle_802215DC )
   28:  Call  BindHandleEvent   ( .Actor:Self $Script_HandleEvent_802216CC )
   3C:  Return
   44:  End
}

#new:Script $Script_Idle_802215DC
{
    0:  Label  0
    C:  Call  GetActorPos   ( .Actor:Self *Var0 *Var1 *Var2 )
   28:  Add   *Var1  0000000F
   38:  Sub   *Var2  00000002
   48:  Call  PlayEffect    ( ~FX:Sparkles:TreeShake *Var0 *Var1 *Var2 0000001E 00000000 00000000 00000000 00000000 00000000 00000000 00000000 00000000 )
   8C:  Wait  15`
   98:  Goto  0
   A4:  Return
   AC:  End
}

#new:Script $Script_80221690
{
    0:  SetConst  *Var0  00000001
   10:  SetConst  *Var1  00480103
   20:  ExecWait  DoReturnHome
   2C:  Return
   34:  End
}

#new:Script $Script_HandleEvent_802216CC
{
    0:  Call  UseIdleAnimation  ( .Actor:Self .False )
   14:  Call  GetLastEvent      ( .Actor:Self *Var0 )
   28:  Switch  *Var0
   34:  	CaseOR  ==  .Event:HitCombo % 9
   40:  	CaseOR  ==  .Event:Hit % A
   4C:  		SetConst  *Var0  00000001
   5C:  		SetConst  *Var1  00480108
   6C:  		ExecWait  DoNormalHit
   78:  	EndCaseGroup
   80:  	Case  ==  .Event:BurnHit % E
   8C:  		SetConst  *Var0  00000001
   9C:  		SetConst  *Var1  00480109
   AC:  		SetConst  *Var2  0048010A
   BC:  		ExecWait  DoBurnHit
   C8:  	Case  ==  .Event:BurnDeath % 24
   D4:  		SetConst  *Var0  00000001
   E4:  		SetConst  *Var1  00480109
   F4:  		SetConst  *Var2  0048010A
  104:  		ExecWait  DoBurnHit
  110:  		SetConst  *Var0  00000001
  120:  		SetConst  *Var1  0048010A
  130:  		ExecWait  DoDeath
  13C:  		Return
  144:  	Case  ==  .Event:SpinSmashHit % B
  150:  		SetConst  *Var0  00000001
  160:  		SetConst  *Var1  00480108
  170:  		ExecWait  DoSpinSmashHit
  17C:  	Case  ==  .Event:SpinSmashDeath % 21
  188:  		SetConst  *Var0  00000001
  198:  		SetConst  *Var1  00480108
  1A8:  		ExecWait  DoSpinSmashHit
  1B4:  		SetConst  *Var0  00000001
  1C4:  		SetConst  *Var1  00480108
  1D4:  		ExecWait  DoDeath
  1E0:  		Return
  1E8:  	Case  ==  .Event:ShockHit % 2F
  1F4:  		SetConst  *Var0  00000001
  204:  		SetConst  *Var1  00480108
  214:  		ExecWait  DoShockHit
  220:  		SetConst  *Var0  00000001
  230:  		SetConst  *Var1  00480108
  240:  		ExecWait  DoJumpBack
  24C:  		ExecWait  $Script_80221690
  258:  	Case  ==  .Event:ShockDeath % 26
  264:  		SetConst  *Var0  00000001
  274:  		SetConst  *Var1  00480108
  284:  		ExecWait  DoShockHit
  290:  		SetConst  *Var0  00000001
  2A0:  		SetConst  *Var1  00480108
  2B0:  		ExecWait  DoDeath
  2BC:  		Return
  2C4:  	CaseOR  ==  00000017 % 17
  2D0:  	CaseOR  ==  .Event:Immune % 19
  2DC:  	CaseOR  ==  .Event:AirLiftFailed % 1F
  2E8:  		SetConst  *Var0  00000001
  2F8:  		SetConst  *Var1  00480101
  308:  		ExecWait  DoImmune
  314:  	EndCaseGroup
  31C:  	Case  ==  .Event:Death % 20
  328:  		SetConst  *Var0  00000001
  338:  		SetConst  *Var1  00480108
  348:  		ExecWait  DoNormalHit
  354:  		Wait  10`
  360:  		SetConst  *Var0  00000001
  370:  		SetConst  *Var1  00480108
  380:  		ExecWait  DoDeath
  38C:  		Return
  394:  	Case  ==  .Event:RecoverStatus % 31
  3A0:  		SetConst  *Var0  00000001
  3B0:  		SetConst  *Var1  00480101
  3C0:  		ExecWait  DoRecover
  3CC:  	Case  ==  .Event:ScareAway % 39
  3D8:  		SetConst  *Var0  00000001
  3E8:  		SetConst  *Var1  00480104
  3F8:  		SetConst  *Var2  00480108
  408:  		ExecWait  DoScareAway
  414:  		Return
  41C:  	Case  ==  .Event:BeginAirLift % 3A
  428:  		SetConst  *Var0  00000001
  438:  		SetConst  *Var1  00480104
  448:  		ExecWait  DoAirLift
  454:  	Case  ==  .Event:BlowAway % 16
  460:  		Call  GetStatusFlags    ( .Actor:Self *Var0 )
  474:  		If  *Var0  !&  ~Flags:StatusFlags:Sleep|Frozen|Fear|Paralyze|Dizzy|Stone|Stop % 35D000
  484:  			If  *Var0  &  ~Flags:StatusFlags:Shrink % 80000
  494:  				Call  SetActorDispOffset    ( .Actor:Self 00000000 00000001 00000000 )
  4B0:  			Else
  4B8:  				Call  SetActorDispOffset    ( .Actor:Self 00000000 00000003 00000000 )
  4D4:  			EndIf
  4DC:  		EndIf
  4E4:  		SetConst  *Var0  00000001
  4F4:  		SetConst  *Var1  00480108
  504:  		ExecWait  DoBlowAway
  510:  		Return
  518:  	Default
  520:  EndSwitch
  528:  Call  UseIdleAnimation  ( .Actor:Self .True )
  53C:  Return
  544:  End
}

#new:Script $Script_Amazy_Sing
{
    0:  Call  UseIdleAnimation  ( .Actor:Self .False )
   14:  Call  SetTargetActor    ( .Actor:Self .Actor:Player )
   28:  Call  GetBattlePhase    ( *Var0 )
   38:  If  *Var0  ==  00000001
   48:  	Call  GetActorPos   ( .Actor:Self *Var0 *Var1 *Var2 )
   64:  	Call  SetActorPos   ( .Actor:Self  -20` *Var1 *Var2 )
   80:  Else
   88:  	Call  UseBattleCamPreset    ( 0000003F )
   98:  	Call  BattleCamTargetActor  ( .Actor:Self )
   A8:  	Call  8024ECF8  ( FFFFFFFF 00000001 00000000 )
   C0:  	Call  MoveBattleCamOver     (  70` )
   D0:  	Set   *Flag[00]  .False
   E0:  	Label  0
   EC:  	If  *Flag[00]  ==  .False
   FC:  		Call  SetAnimation  ( .Actor:Self 00000001 0048010E )
  114:  		Set   *Flag[00]  .True
  124:  	Else
  12C:  		Call  SetAnimation  ( .Actor:Self 00000001 0048010F )
  144:  		Set   *Flag[00]  .False
  154:  	EndIf
  15C:  	Wait  1`
  168:  	Call  SetActorJumpGravity   ( .Actor:Self *Fixed[0.5] )
  17C:  	Call  GetActorPos   ( .Actor:Self *Var0 *Var1 *Var2 )
  198:  	Sub   *Var0  00000014
  1A8:  	Call  SetGoalPos    ( .Actor:Self *Var0 *Var1 *Var2 )
  1C4:  	Call  JumpToGoal    ( .Actor:Self  15` .False .True .False )
  1E4:  	If  *Var0  >  00000000
  1F4:  		Goto  0
  200:  	EndIf
  208:  	If  *Flag[00]  ==  .False
  218:  		Call  SetAnimation  ( .Actor:Self 00000001 0048010E )
  230:  		Set   *Flag[00]  .True
  240:  	Else
  248:  		Call  SetAnimation  ( .Actor:Self 00000001 0048010F )
  260:  		Set   *Flag[00]  .False
  270:  	EndIf
  278:  	Wait  1`
  284:  	Call  SetActorJumpGravity   ( .Actor:Self *Fixed[0.5] )
  298:  	Call  SetGoalPos    ( .Actor:Self  -35`  0`  10` )
  2B4:  	Call  JumpToGoal    ( .Actor:Self  15` .False .True .False )
  2D4:  EndIf
  2DC:  Call  SetAnimation  ( .Actor:Self 00000001 00480101 )
  2F4:  Wait  10`
  300:  Thread
  308:  	Call  SetAnimation  ( .Actor:Self 00000001 00480106 )
  320:  	Wait  40`
  32C:  	Call  SetAnimation  ( .Actor:Self 00000001 00480107 )
  344:  EndThread
  34C:  Wait  20`
  358:  Call  PlaySoundAtActor  ( .Actor:Self .Sound:DayzeeSong )
  36C:  Call  GetActorPos       ( .Actor:Self *Var0 *Var1 *Var2 )
  388:  Add   *Var1  00000019
  398:  Add   *Var2  00000002
  3A8:  Loop  0000000D
  3B4:  	Call  RandInt       ( 0000001E *Var3 )
  3C8:  	Sub   *Var3  0000000F
  3D8:  	Add   *Var3  *Var0
  3E8:  	Call  PlayEffect    ( ~FX:MusicNote:Left *Var3 *Var1 *Var2 00000000 00000000 00000000 00000000 00000000 00000000 00000000 00000000 00000000 )
  42C:  	Wait  10`
  438:  EndLoop
  440:  Call  SetAnimation      ( .Actor:Self 00000001 00480101 )
  458:  Wait  10`
  464:  Call  EnemyTestTarget   ( .Actor:Self *Var0 ~Flags:DamageType:0 00000000 00000001 00000010 )
  488:  Switch  *Var0
  494:  	CaseOR  ==  .HitResult:Miss % 6
  4A0:  	CaseOR  ==  .HitResult:Lucky % 5
  4AC:  		Set   *VarA  *Var0
  4BC:  		If  *VarA  ==  .HitResult:Lucky % 5
  4CC:  			Call  EnemyTestTarget   ( .Actor:Self *Var0 ~Flags:DamageType:TriggerLucky 00000000 00000000 00000000 )
  4F0:  		EndIf
  4F8:  		Call  UseBattleCamPreset    ( 00000002 )
  508:  		Wait  15`
  514:  		Call  YieldTurn ( )
  520:  		Call  SetActorYaw   ( .Actor:Self  180` )
  534:  		Call  AddActorDecoration    ( .Actor:Self 00000001 00000000 .Decoration:Sweat )
  550:  		ExecWait  $Script_80221690
  55C:  		Call  RemoveActorDecoration ( .Actor:Self 00000001 00000000 )
  574:  		Call  SetActorYaw   ( .Actor:Self  0` )
  588:  		Call  UseIdleAnimation      ( .Actor:Self .True )
  59C:  		Return
  5A4:  	EndCaseGroup
  5AC:  EndSwitch
  5B4:  Call  SetTargetActor    ( .Actor:Self .Actor:Player )
  5C8:  Call  SetGoalToTarget   ( .Actor:Self )
  5D8:  Wait  2`
  5E4:  Call  EnemyDamageTarget ( .Actor:Self *VarF ~Flags:DamageType:NoContact 00000000 ~DebuffType:Sleep:3:15` 00000014 00000020 )
  60C:  Switch  *VarF
  618:  	CaseOR  ==  .HitResult:Hit % 0
  624:  	CaseOR  ==  .HitResult:QuakeImmune % 2
  630:  		Call  UseBattleCamPreset    ( 00000002 )
  640:  		Call  MoveBattleCamOver     (  10` )
  650:  		Wait  20`
  65C:  		Call  YieldTurn ( )
  668:  		ExecWait  $Script_80221690
  674:  	EndCaseGroup
  67C:  EndSwitch
  684:  Call  UseIdleAnimation  ( .Actor:Self .True )
  698:  Return
  6A0:  End
}

#new:Script $Script_Amazy_RunAway
{
    0:  Call  UseIdleAnimation  ( .Actor:Self .False )
   14:  Call  UseBattleCamPreset    ( 00000013 )
   24:  Call  SetBattleCamZoom  (  300` )
   34:  Call  SetBattleCamOffsetZ   (  30` )
   44:  Call  GetActorPos       ( .Actor:Self *Var0 *Var1 *Var2 )
   60:  Sub   *Var0  00000014
   70:  Call  SetBattleCamTarget    ( *Var0 *Var1 *Var2 )
   88:  Call  MoveBattleCamOver (  30` )
   98:  Call  SetActorYaw       ( .Actor:Self  180` )
   AC:  Call  SetAnimation      ( .Actor:Self 00000001 00480103 )
   C4:  Wait  10`
   D0:  Call  GetActorPos       ( .Actor:Self *Var0 *Var1 *Var2 )
   EC:  Call  SetActorSpeed     ( .Actor:Self *Fixed[1.0] )
  100:  Sub   *Var0  00000014
  110:  Call  SetGoalPos        ( .Actor:Self *Var0 *Var1 *Var2 )
  12C:  Call  RunToGoal ( .Actor:Self  0` .False )
  144:  Wait  20`
  150:  Call  UseBattleCamPreset    ( 00000002 )
  160:  Call  EnableActorBlur   ( .Actor:Self 00000001 )
  174:  Call  SetAnimation      ( .Actor:Self 00000001 00480104 )
  18C:  Call  SetActorSpeed     ( .Actor:Self *Fixed[12.0] )
  1A0:  Add   *Var0  000000C8
  1B0:  Call  SetGoalPos        ( .Actor:Self *Var0 *Var1 *Var2 )
  1CC:  Call  RunToGoal ( .Actor:Self  0` .False )
  1E4:  Call  EnableActorBlur   ( .Actor:Self 00000000 )
  1F8:  Call  SetBattleFlagBits ( 00040000 .True )
  20C:  Call  UseIdleAnimation  ( .Actor:Self .True )
  220:  Call  RemoveActor       ( .Actor:Self )
  230:  Return
  238:  End
}

#new:Script $Script_TakeTurn_80222500
{
    0:  Call  GetBattlePhase    ( *Var0 )
   10:  If  *Var0  ==  00000001
   20:  	ExecWait  $Script_Amazy_Sing
   2C:  	Return
   34:  EndIf
   3C:  Call  RandInt   ( 000003E8 *Var0 )
   50:  Switch  *Var0
   5C:  	Case  <  00000352
   68:  		ExecWait  $Script_Amazy_RunAway
   74:  	Default
   7C:  		ExecWait  $Script_Amazy_Sing
   88:  EndSwitch
   90:  Return
   98:  End
}

#new:IdleAnimations $IdleAnimations_802225A0
{
	.Status:Normal    007D0001
	.Status:Stone     007D0000
	.Status:Sleep     007D0009
	.Status:Poison    007D0001
	.Status:Stop      007D0000
	.Status:Static    007D0001
	.Status:Paralyze  007D0000
	.Status:Dizzy     007D000B
	.Status:End
}

#new:DefenseTable $DefenseTable_802225E4
{
	.Element:Normal 00000000
	.Element:Mystery00000000
	.Element:End
}

#new:StatusTable $StatusTable_802225F8
{
	.Status:Normal      0`
	.Status:Default     0`
	.Status:Sleep      50`
	.Status:Poison     90`
	.Status:Frozen      0`
	.Status:Dizzy     100`
	.Status:Fear        0`
	.Status:Static     70`
	.Status:Paralyze   40`
	.Status:Shrink     75`
	.Status:Stop       80`
	.Status:DefaultTurnMod    0`
	.Status:SleepTurnMod      0`
	.Status:PoisonTurnMod     0`
	.Status:FrozenTurnMod     0`
	.Status:DizzyTurnMod      0`
	.Status:FearTurnMod       0`
	.Status:StaticTurnMod     0`
	.Status:ParalyzeTurnMod   0`
	.Status:ShrinkTurnMod     0`
	.Status:StopTurnMod      -1`
	.Status:End
}

#new:PartsTable $PartsTable_802226A4
{
	00800000 01000000 FE1A00FF $IdleAnimations_802225A0 $DefenseTable_802225E4 00000000 00000000 00F30000 00000000
}

#new:Actor $RuffPuff
{
	% stats
	[Index]        34b
	[Level]        19`b
	[MaxHP]        10`b
	[Coins]         2`b
	[Flags]       00000200
	[StatusTable] $StatusTable_802225F8
	% ai
	[PartsCount]    1`s
	[PartsTable]  $PartsTable_802226A4
	[Script]      $Script_Init_802226F0
	% move effectiveness
	[Escape]       50`b
	[Item]         40`b
	[AirLift]      90`b
	[Hurricane]    90`b % Bow's "Spook" as well
	[UpAndAway]    95`b
	[PowerBounce]  80`b
	[SpinSmash]     0`b % weight (0-4)
	% ui positions
	[Size]         32`b  32`b % width height
	[HealthBar]     0`b   0`b % dx dy
	[StatusTurn]  -10`b  20`b % dx dy
	[StatusIcon]   10`b  20`b % dx dy
}

#new:Script $Script_Init_802226F0
{
    0:  Call  BindTakeTurn      ( .Actor:Self $Script_TakeTurn_80222DE8 )
   14:  Call  BindIdle  ( .Actor:Self $Script_Idle_8022273C )
   28:  Call  BindHandleEvent   ( .Actor:Self $Script_HandleEvent_80222898 )
   3C:  Return
   44:  End
}

#new:Script $Script_Idle_8022273C
{
    0:  Set   *VarF  00000000
   10:  Loop
   1C:  	Call  $Function_802181F0    ( *VarF *Var0 *Fixed[0.97] *Fixed[1.03] 0000000F 00000000 00000000 )
   44:  	Call  $Function_802181F0    ( *VarF *Var1 *Fixed[1.03] *Fixed[0.97] 0000000F 00000000 00000000 )
   6C:  	Add   *VarF  00000001
   7C:  	Call  SetActorScale ( .Actor:Self *Var1 *Var0 *Fixed[1.0] )
   98:  	If  *VarF  >=  0000001E
   A8:  		Set   *VarF  00000000
   B8:  	EndIf
   C0:  	Wait  1`
   CC:  EndLoop
   D4:  Return
   DC:  End
}

#new:Script $Script_80222820
{
    0:  Call  UseBattleCamPreset    ( 00000002 )
   10:  Call  SetAnimation  ( .Actor:Self 00000001 007D0004 )
   28:  Call  SetActorSpeed ( .Actor:Self *Fixed[8.0] )
   3C:  Call  SetGoalToHome ( .Actor:Self )
   4C:  Call  FlyToGoal     ( .Actor:Self  0`  -10` .Easing:SinOut )
   68:  Return
   70:  End
}

#new:Script $Script_HandleEvent_80222898
{
    0:  Call  UseIdleAnimation  ( .Actor:Self .False )
   14:  Call  EnableIdleScript  ( .Actor:Self 00000000 )
   28:  Call  GetLastEvent      ( .Actor:Self *Var0 )
   3C:  Switch  *Var0
   48:  	CaseOR  ==  .Event:HitCombo % 9
   54:  	CaseOR  ==  .Event:Hit % A
   60:  		SetConst  *Var0  00000001
   70:  		SetConst  *Var1  007D0006
   80:  		ExecWait  DoNormalHit
   8C:  	EndCaseGroup
   94:  	Case  ==  .Event:BurnHit % E
   A0:  		SetConst  *Var0  00000001
   B0:  		SetConst  *Var1  007D0007
   C0:  		SetConst  *Var2  007D0008
   D0:  		ExecWait  DoBurnHit
   DC:  	Case  ==  .Event:BurnDeath % 24
   E8:  		SetConst  *Var0  00000001
   F8:  		SetConst  *Var1  007D0007
  108:  		SetConst  *Var2  007D0008
  118:  		ExecWait  DoBurnHit
  124:  		SetConst  *Var0  00000001
  134:  		SetConst  *Var1  007D0008
  144:  		ExecWait  DoDeath
  150:  		Return
  158:  	Case  ==  .Event:SpinSmashHit % B
  164:  		SetConst  *Var0  00000001
  174:  		SetConst  *Var1  007D0006
  184:  		ExecWait  DoSpinSmashHit
  190:  	Case  ==  .Event:SpinSmashDeath % 21
  19C:  		SetConst  *Var0  00000001
  1AC:  		SetConst  *Var1  007D0006
  1BC:  		ExecWait  DoSpinSmashHit
  1C8:  		SetConst  *Var0  00000001
  1D8:  		SetConst  *Var1  007D0006
  1E8:  		ExecWait  DoDeath
  1F4:  		Return
  1FC:  	Case  ==  .Event:ShockHit % 2F
  208:  		SetConst  *Var0  00000001
  218:  		SetConst  *Var1  007D0006
  228:  		ExecWait  DoShockHit
  234:  		SetConst  *Var0  00000001
  244:  		SetConst  *Var1  007D0006
  254:  		ExecWait  DoJumpBack
  260:  		ExecWait  $Script_80222820
  26C:  	Case  ==  .Event:ShockDeath % 26
  278:  		SetConst  *Var0  00000001
  288:  		SetConst  *Var1  007D0006
  298:  		ExecWait  DoShockHit
  2A4:  		SetConst  *Var0  00000001
  2B4:  		SetConst  *Var1  007D0006
  2C4:  		ExecWait  DoDeath
  2D0:  		Return
  2D8:  	CaseOR  ==  00000017 % 17
  2E4:  	CaseOR  ==  .Event:Immune % 19
  2F0:  	CaseOR  ==  .Event:AirLiftFailed % 1F
  2FC:  		SetConst  *Var0  00000001
  30C:  		SetConst  *Var1  007D0001
  31C:  		ExecWait  DoImmune
  328:  	EndCaseGroup
  330:  	Case  ==  .Event:Death % 20
  33C:  		SetConst  *Var0  00000001
  34C:  		SetConst  *Var1  007D0006
  35C:  		ExecWait  DoNormalHit
  368:  		Wait  10`
  374:  		SetConst  *Var0  00000001
  384:  		SetConst  *Var1  007D0006
  394:  		ExecWait  DoDeath
  3A0:  		Return
  3A8:  	Case  ==  .Event:BeginFirstStrike % 38
  3B4:  		Call  SetActorPos       ( .Actor:Self  20`  0`  0` )
  3D0:  		Call  HPBarToCurrent    ( .Actor:Self )
  3E0:  	Case  ==  .Event:EndFirstStrike % 35
  3EC:  		ExecWait  $Script_80222820
  3F8:  		Call  HPBarToHome   ( .Actor:Self )
  408:  	Case  ==  .Event:RecoverStatus % 31
  414:  		SetConst  *Var0  00000001
  424:  		SetConst  *Var1  007D0001
  434:  		ExecWait  DoRecover
  440:  	Case  ==  .Event:ScareAway % 39
  44C:  		SetConst  *Var0  00000001
  45C:  		SetConst  *Var1  007D0004
  46C:  		SetConst  *Var2  007D0006
  47C:  		ExecWait  DoScareAway
  488:  		Return
  490:  	Case  ==  .Event:BeginAirLift % 3A
  49C:  		SetConst  *Var0  00000001
  4AC:  		SetConst  *Var1  007D0004
  4BC:  		ExecWait  DoAirLift
  4C8:  	Case  ==  .Event:BlowAway % 16
  4D4:  		SetConst  *Var0  00000001
  4E4:  		SetConst  *Var1  007D0004
  4F4:  		ExecWait  DoBlowAway
  500:  		Return
  508:  	Default
  510:  EndSwitch
  518:  Call  EnableIdleScript  ( .Actor:Self 00000001 )
  52C:  Call  UseIdleAnimation  ( .Actor:Self .True )
  540:  Return
  548:  End
}

#new:Script $Script_TakeTurn_80222DE8
{
    0:  Call  UseIdleAnimation  ( .Actor:Self .False )
   14:  Call  EnableIdleScript  ( .Actor:Self 00000000 )
   28:  Call  SetTargetActor    ( .Actor:Self .Actor:Player )
   3C:  Call  UseBattleCamPreset    ( 0000003F )
   4C:  Call  BattleCamTargetActor  ( .Actor:Self )
   5C:  Call  8024ECF8  ( FFFFFFFF 00000001 00000000 )
   74:  Call  SetAnimation      ( .Actor:Self 00000001 007D0004 )
   8C:  Call  SetGoalToTarget   ( .Actor:Self )
   9C:  Call  AddGoalPos        ( .Actor:Self  50`  0`  0` )
   B8:  Call  SetActorSpeed     ( .Actor:Self *Fixed[6.0] )
   CC:  Call  FlyToGoal ( .Actor:Self  0`  -10` .Easing:SinOut )
   E8:  Call  SetAnimation      ( .Actor:Self 00000001 007D0001 )
  100:  Wait  5`
  10C:  Call  SetAnimation      ( .Actor:Self 00000001 007D0005 )
  124:  Wait  5`
  130:  Call  EnemyTestTarget   ( .Actor:Self *Var0 ~Flags:DamageType:0 00000000 00000001 00000010 )
  154:  Switch  *Var0
  160:  	CaseOR  ==  .HitResult:Miss % 6
  16C:  	CaseOR  ==  .HitResult:Lucky % 5
  178:  		Set   *VarA  *Var0
  188:  		Call  SetActorJumpGravity   ( .Actor:Self *Fixed[1.2] )
  19C:  		Call  SetGoalToTarget   ( .Actor:Self )
  1AC:  		Call  GetGoalPos        ( .Actor:Self *Var0 *Var1 *Var2 )
  1C8:  		Call  SetGoalPos        ( .Actor:Self *Var0  0` *Var2 )
  1E4:  		Thread
  1EC:  			Call  SetActorRotationOffset    ( .Actor:Self 00000000 00000010 00000000 )
  208:  			SetF  *Var0  *Fixed[0.0]
  218:  			Loop  0000000F
  224:  				AddF  *Var0  *Fixed[12.0]
  234:  				Call  SetActorRotation  ( .Actor:Self 00000000 00000000 *Var0 )
  250:  				Wait  1`
  25C:  			EndLoop
  264:  		EndThread
  26C:  		Call  AddGoalPos    ( .Actor:Self  -10`  0`  0` )
  288:  		Call  JumpToGoal    ( .Actor:Self  20` .False .True .False )
  2A8:  		If  *VarA  ==  .HitResult:Lucky % 5
  2B8:  			Call  EnemyTestTarget   ( .Actor:Self *VarA ~Flags:DamageType:TriggerLucky 00000000 00000000 00000000 )
  2DC:  		EndIf
  2E4:  		Thread
  2EC:  			Call  SetActorRotationOffset    ( .Actor:Self 00000000 00000010 00000000 )
  308:  			SetF  *Var0  *Fixed[180.0]
  318:  			Loop  0000000A
  324:  				AddF  *Var0  *Fixed[18.0]
  334:  				Call  SetActorRotation  ( .Actor:Self 00000000 00000000 *Var0 )
  350:  				Wait  1`
  35C:  			EndLoop
  364:  			Call  SetActorRotationOffset    ( .Actor:Self 00000000 00000000 00000000 )
  380:  			Call  SetActorRotation  ( .Actor:Self 00000000 00000000 00000000 )
  39C:  		EndThread
  3A4:  		Call  AddGoalPos    ( .Actor:Self  -30`  0`  0` )
  3C0:  		Call  JumpToGoal    ( .Actor:Self  15` .False .True .False )
  3E0:  		Call  AddGoalPos    ( .Actor:Self  -20`  0`  0` )
  3FC:  		Call  JumpToGoal    ( .Actor:Self  10` .False .True .False )
  41C:  		Call  AddGoalPos    ( .Actor:Self  -10`  0`  0` )
  438:  		Call  JumpToGoal    ( .Actor:Self  5` .False .True .False )
  458:  		Wait  15`
  464:  		Call  UseBattleCamPreset    ( 00000002 )
  474:  		Call  YieldTurn ( )
  480:  		Call  SetActorYaw   ( .Actor:Self  180` )
  494:  		Call  AddActorDecoration    ( .Actor:Self 00000001 00000000 .Decoration:Sweat )
  4B0:  		ExecWait  $Script_80222820
  4BC:  		Call  RemoveActorDecoration ( .Actor:Self 00000001 00000000 )
  4D4:  		Call  SetActorYaw   ( .Actor:Self  0` )
  4E8:  		Call  EnableIdleScript      ( .Actor:Self 00000001 )
  4FC:  		Call  UseIdleAnimation      ( .Actor:Self .True )
  510:  		Return
  518:  	EndCaseGroup
  520:  EndSwitch
  528:  Thread
  530:  	Call  SetActorRotationOffset    ( .Actor:Self 00000000 0000000D 00000000 )
  54C:  	SetF  *Var0  *Fixed[0.0]
  55C:  	Loop  00000008
  568:  		AddF  *Var0  *Fixed[22.5]
  578:  		Call  SetActorRotation  ( .Actor:Self 00000000 00000000 *Var0 )
  594:  		Wait  1`
  5A0:  	EndLoop
  5A8:  EndThread
  5B0:  Call  SetGoalToTarget   ( .Actor:Self )
  5C0:  Call  SetActorJumpGravity   ( .Actor:Self *Fixed[1.2] )
  5D4:  Call  JumpToGoal        ( .Actor:Self  8` .False .True .False )
  5F4:  Wait  2`
  600:  Call  EnemyDamageTarget ( .Actor:Self *Var0 ~Flags:DamageType:0 0000FFFF 00000000 00000004 00000020 )
  628:  Switch  *Var0
  634:  	CaseOR  ==  .HitResult:Hit % 0
  640:  	CaseOR  ==  .HitResult:QuakeImmune % 2
  64C:  		Call  UseBattleCamPreset    ( 00000002 )
  65C:  		Thread
  664:  			Call  SetActorRotationOffset    ( .Actor:Self 00000000 00000010 00000000 )
  680:  			SetF  *Var0  *Fixed[180.0]
  690:  			Loop  0000000A
  69C:  				SubF  *Var0  *Fixed[22.5]
  6AC:  				Call  SetActorRotation  ( .Actor:Self 00000000 00000000 *Var0 )
  6C8:  				Wait  1`
  6D4:  			EndLoop
  6DC:  			Call  SetActorRotationOffset    ( .Actor:Self 00000000 00000000 00000000 )
  6F8:  			Call  SetActorRotation  ( .Actor:Self 00000000 00000000 00000000 )
  714:  		EndThread
  71C:  		Call  SetGoalToTarget   ( .Actor:Self )
  72C:  		Call  AddGoalPos        ( .Actor:Self  30`  0`  0` )
  748:  		Call  SetActorJumpGravity   ( .Actor:Self *Fixed[0.8] )
  75C:  		Call  JumpWithBounce    ( .Actor:Self  10` *Fixed[5.0] )
  774:  		Wait  10`
  780:  		Call  YieldTurn ( )
  78C:  		ExecWait  $Script_80222820
  798:  	EndCaseGroup
  7A0:  EndSwitch
  7A8:  Call  EnableIdleScript  ( .Actor:Self 00000001 )
  7BC:  Call  UseIdleAnimation  ( .Actor:Self .True )
  7D0:  Return
  7D8:  End
}

PADDING: 802235C8 to 802235D0 (005BCA78 to 005BCA80)
00000000 00000000

#new:IdleAnimations $IdleAnimations_802235D0
{
	.Status:Normal    00400001
	.Status:Stone     00400000
	.Status:Sleep     00400004
	.Status:Poison    00400001
	.Status:Stop      00400000
	.Status:Static    00400001
	.Status:Paralyze  00400000
	.Status:Dizzy     0040000A
	.Status:Fear      0040000A
	.Status:End
}

#new:DefenseTable $DefenseTable_8022361C
{
	.Element:Normal 00000000
	.Element:Shock  00000000
	.Element:End
}

#new:StatusTable $StatusTable_80223630
{
	.Status:Normal      0`
	.Status:Default     0`
	.Status:Sleep      70`
	.Status:Poison     50`
	.Status:Frozen      0`
	.Status:Dizzy      90`
	.Status:Fear      100`
	.Status:Static     50`
	.Status:Paralyze   90`
	.Status:Shrink     75`
	.Status:Stop       90`
	.Status:DefaultTurnMod    0`
	.Status:SleepTurnMod      0`
	.Status:PoisonTurnMod     0`
	.Status:FrozenTurnMod     0`
	.Status:DizzyTurnMod      1`
	.Status:FearTurnMod       0`
	.Status:StaticTurnMod     0`
	.Status:ParalyzeTurnMod   1`
	.Status:ShrinkTurnMod     0`
	.Status:StopTurnMod       0`
	.Status:End
}

#new:PartsTable $PartsTable_802236DC
{
	00800000 01000000 FE2600FF $IdleAnimations_802235D0 $DefenseTable_8022361C 00000000 00000000 FFFB0000 00000000
}

#new:Actor $MediGuy
{
	% stats
	[Index]        22b
	[Level]        14`b
	[MaxHP]         7`b
	[Coins]         2`b
	[Flags]       00000200
	[StatusTable] $StatusTable_80223630
	% ai
	[PartsCount]    1`s
	[PartsTable]  $PartsTable_802236DC
	[Script]      $Script_Init_80223728
	% move effectiveness
	[Escape]       60`b
	[Item]         70`b
	[AirLift]      90`b
	[Hurricane]    95`b % Bow's "Spook" as well
	[UpAndAway]    95`b
	[PowerBounce]  90`b
	[SpinSmash]     0`b % weight (0-4)
	% ui positions
	[Size]         24`b  40`b % width height
	[HealthBar]     0`b   0`b % dx dy
	[StatusTurn]  -10`b  20`b % dx dy
	[StatusIcon]   12`b  31`b % dx dy
}

#new:Script $Script_Init_80223728
{
    0:  Call  BindTakeTurn  ( .Actor:Self $Script_TakeTurn_80224B0C )
   14:  Call  BindIdle      ( .Actor:Self $Script_Idle_802237CC )
   28:  Call  BindHandleEvent   ( .Actor:Self $Script_HandleEvent_802239A0 )
   3C:  Call  GetActorPos   ( .Actor:Self *Var0 *Var1 *Var2 )
   58:  Sub   *Var1  00000005
   68:  Call  ForceHomePos  ( .Actor:Self *Var0 *Var1 *Var2 )
   84:  Call  HPBarToHome   ( .Actor:Self )
   94:  Return
   9C:  End
}

#new:Script $Script_Idle_802237CC
{
    0:  Label  0
    C:  Call  GetStatusFlags    ( .Actor:Self *Var0 )
   20:  If  *Var0  &  ~Flags:StatusFlags:Sleep % 1000
   30:  	Call  SetTargetOffset       ( .Actor:Self 00000001  -2`  24` )
   4C:  	Call  8027D4C8  ( FFFFFF81 00000001 FFFFFFFF FFFFFFFB )
   68:  	Call  $Function_80218380    ( FFFFFFF6 00000014 0000000A 00000014 )
   84:  Else
   8C:  	Call  SetTargetOffset       ( .Actor:Self 00000001  -2`  38` )
   A8:  	Call  8027D4C8  ( FFFFFF81 00000001 FFFFFFFF FFFFFFFB )
   C4:  	Call  $Function_80218380    ( FFFFFFF6 00000014 0000000C 0000001F )
   E0:  EndIf
   E8:  Wait  1`
   F4:  Goto  0
  100:  Return
  108:  End
}

#new:Script $Script_802238DC
{
    0:  Call  ResetAllActorSounds   ( .Actor:Self )
   10:  Call  SetPartRotation       ( .Actor:Self 00000001 00000000 00000000 00000000 )
   30:  Call  SetActorYaw   ( .Actor:Self  180` )
   44:  Call  SetAnimation  ( .Actor:Self 00000001 00400003 )
   5C:  Call  SetGoalToHome ( .Actor:Self )
   6C:  Call  FlyToGoal     ( .Actor:Self  0`  1` .Easing:Linear )
   88:  Call  SetAnimation  ( .Actor:Self 00000001 00400001 )
   A0:  Call  SetActorYaw   ( .Actor:Self  0` )
   B4:  Return
   BC:  End
}

#new:Script $Script_HandleEvent_802239A0
{
    0:  Call  UseIdleAnimation  ( .Actor:Self .False )
   14:  Call  EnableIdleScript  ( .Actor:Self 00000000 )
   28:  Call  GetLastEvent      ( .Actor:Self *Var0 )
   3C:  Switch  *Var0
   48:  	CaseOR  ==  .Event:HitCombo % 9
   54:  	CaseOR  ==  .Event:Hit % A
   60:  		SetConst  *Var0  00000001
   70:  		SetConst  *Var1  00400006
   80:  		ExecWait  DoNormalHit
   8C:  	EndCaseGroup
   94:  	Case  ==  .Event:BurnHit % E
   A0:  		SetConst  *Var0  00000001
   B0:  		SetConst  *Var1  00400008
   C0:  		SetConst  *Var2  00400009
   D0:  		ExecWait  DoBurnHit
   DC:  	Case  ==  .Event:BurnDeath % 24
   E8:  		SetConst  *Var0  00000001
   F8:  		SetConst  *Var1  00400008
  108:  		SetConst  *Var2  00400009
  118:  		ExecWait  DoBurnHit
  124:  		SetConst  *Var0  00000001
  134:  		SetConst  *Var1  00400009
  144:  		ExecWait  DoDeath
  150:  		Return
  158:  	Case  ==  .Event:SpinSmashHit % B
  164:  		SetConst  *Var0  00000001
  174:  		SetConst  *Var1  00400006
  184:  		ExecWait  DoSpinSmashHit
  190:  	Case  ==  .Event:SpinSmashDeath % 21
  19C:  		SetConst  *Var0  00000001
  1AC:  		SetConst  *Var1  00400006
  1BC:  		ExecWait  DoSpinSmashHit
  1C8:  		SetConst  *Var0  00000001
  1D8:  		SetConst  *Var1  00400007
  1E8:  		ExecWait  DoDeath
  1F4:  		Return
  1FC:  	Case  ==  .Event:ShockHit % 2F
  208:  		SetConst  *Var0  00000001
  218:  		SetConst  *Var1  00400006
  228:  		ExecWait  DoShockHit
  234:  		SetConst  *Var0  00000001
  244:  		SetConst  *Var1  00400006
  254:  		ExecWait  DoJumpBack
  260:  		Call  SetActorSpeed ( .Actor:Self *Fixed[4.0] )
  274:  		ExecWait  $Script_802238DC
  280:  	Case  ==  .Event:ShockDeath % 26
  28C:  		SetConst  *Var0  00000001
  29C:  		SetConst  *Var1  00400006
  2AC:  		ExecWait  DoShockHit
  2B8:  		Call  SetPartRotation   ( .Actor:Self 00000001 00000000 00000000 00000000 )
  2D8:  		SetConst  *Var0  00000001
  2E8:  		SetConst  *Var1  00400007
  2F8:  		ExecWait  DoDeath
  304:  		Return
  30C:  	CaseOR  ==  00000017 % 17
  318:  	CaseOR  ==  .Event:Immune % 19
  324:  	CaseOR  ==  .Event:AirLiftFailed % 1F
  330:  		SetConst  *Var0  00000001
  340:  		SetConst  *Var1  00400001
  350:  		ExecWait  DoImmune
  35C:  	EndCaseGroup
  364:  	Case  ==  .Event:Death % 20
  370:  		SetConst  *Var0  00000001
  380:  		SetConst  *Var1  00400006
  390:  		ExecWait  DoNormalHit
  39C:  		Wait  10`
  3A8:  		SetConst  *Var0  00000001
  3B8:  		SetConst  *Var1  00400007
  3C8:  		ExecWait  DoDeath
  3D4:  		Return
  3DC:  	Case  ==  .Event:BeginFirstStrike % 38
  3E8:  		Call  SetActorPos       ( .Actor:Self  20`  0`  0` )
  404:  		Call  HPBarToCurrent    ( .Actor:Self )
  414:  	Case  ==  .Event:EndFirstStrike % 35
  420:  		Call  SetActorSpeed ( .Actor:Self *Fixed[6.0] )
  434:  		ExecWait  $Script_802238DC
  440:  		Call  HPBarToHome   ( .Actor:Self )
  450:  	Case  ==  .Event:RecoverStatus % 31
  45C:  		SetConst  *Var0  00000001
  46C:  		SetConst  *Var1  00400001
  47C:  		ExecWait  DoRecover
  488:  	Case  ==  .Event:ScareAway % 39
  494:  		Call  SetActorFlagBits  ( .Actor:Self 00000200 .False )
  4AC:  		SetConst  *Var0  00000001
  4BC:  		SetConst  *Var1  00400003
  4CC:  		SetConst  *Var2  0040000B
  4DC:  		ExecWait  DoScareAway
  4E8:  		Return
  4F0:  	Case  ==  .Event:BeginAirLift % 3A
  4FC:  		SetConst  *Var0  00000001
  50C:  		SetConst  *Var1  00400006
  51C:  		ExecWait  DoAirLift
  528:  	Case  ==  .Event:BlowAway % 16
  534:  		SetConst  *Var0  00000001
  544:  		SetConst  *Var1  00400006
  554:  		ExecWait  DoBlowAway
  560:  		Return
  568:  	Default
  570:  EndSwitch
  578:  Call  EnableIdleScript  ( .Actor:Self 00000001 )
  58C:  Call  UseIdleAnimation  ( .Actor:Self .True )
  5A0:  Return
  5A8:  End
}

#new:Script $Script_FlyingAttack
{
    0:  Call  UseIdleAnimation  ( .Actor:Self .False )
   14:  Call  EnableIdleScript  ( .Actor:Self 00000000 )
   28:  Call  SetTargetActor    ( .Actor:Self .Actor:Player )
   3C:  Call  UseBattleCamPreset    ( 0000003F )
   4C:  Call  BattleCamTargetActor  ( .Actor:Self )
   5C:  Call  8024ECF8  ( FFFFFFFF 00000001 00000000 )
   74:  Thread
   7C:  	SetF  *Var0  *Fixed[0.0]
   8C:  	Loop  0000000F
   98:  		AddF  *Var0  *Fixed[2.0]
   A8:  		Call  SetPartRotation   ( .Actor:Self 00000001 00000000 00000000 *Var0 )
   C8:  		Wait  1`
   D4:  	EndLoop
   DC:  EndThread
   E4:  Call  SetAnimation  ( .Actor:Self 00000001 00400003 )
   FC:  Call  SetGoalToTarget   ( .Actor:Self )
  10C:  Call  AddGoalPos    ( .Actor:Self  50`  0`  0` )
  128:  Call  SetActorSpeed ( .Actor:Self *Fixed[5.0] )
  13C:  Call  FlyToGoal     ( .Actor:Self  0`  -4` .Easing:CosIn )
  158:  Call  EnemyTestTarget   ( .Actor:Self *VarA ~Flags:DamageType:0 00000000 00000001 00000010 )
  17C:  Switch  *VarA
  188:  	CaseOR  ==  .HitResult:Miss % 6
  194:  	CaseOR  ==  .HitResult:Lucky % 5
  1A0:  		Wait  10`
  1AC:  		Call  PlaySoundAtActor  ( .Actor:Self 000002F8 )
  1C0:  		Call  SetActorSpeed     ( .Actor:Self *Fixed[5.0] )
  1D4:  		Call  SetActorJumpGravity   ( .Actor:Self *Fixed[1.8] )
  1E8:  		Call  SetAnimation      ( .Actor:Self 00000001 00400005 )
  200:  		Call  GetActorPos       ( .Actor:Self *Var0 *Var1 *Var2 )
  21C:  		Call  SetGoalPos        ( .Actor:Self *Var0 *Var1 *Var2 )
  238:  		Call  JumpToGoal        ( .Actor:Self  10` .False .True .False )
  258:  		Call  SetActorSounds    ( .Actor:Self .ActorSound:Fly 00000000 00000000 )
  274:  		Call  PlaySoundAtActor  ( .Actor:Self 000002F9 )
  288:  		Thread
  290:  			Wait  5`
  29C:  			Set   *Var0  00000000
  2AC:  			Loop  0000003C
  2B8:  				Call  $Function_8021844C    ( *Var0 *Var1 0000000F 0000003C *Fixed[30.0] )
  2D8:  				Call  SetPartRotation       ( .Actor:Self 00000001 00000000 00000000 *Var1 )
  2F8:  				Add   *Var0  00000001
  308:  				Wait  1`
  314:  			EndLoop
  31C:  		EndThread
  324:  		Call  SetGoalToTarget   ( .Actor:Self )
  334:  		Call  GetGoalPos    ( .Actor:Self *Var0 *Var1 *Var2 )
  350:  		Sub   *Var0  00000032
  360:  		Add   *Var2  00000001
  370:  		Call  SetGoalPos    ( .Actor:Self *Var0 *Var1 *Var2 )
  38C:  		Call  SetActorSpeed ( .Actor:Self *Fixed[8.0] )
  3A0:  		Call  SetAnimation  ( .Actor:Self 00000001 00400005 )
  3B8:  		Call  FlyToGoal     ( .Actor:Self  0`  -10` .Easing:QuadraticOut )
  3D4:  		If  *VarA  ==  .HitResult:Lucky % 5
  3E4:  			Call  EnemyTestTarget   ( .Actor:Self *Var0 ~Flags:DamageType:TriggerLucky 00000000 00000000 00000000 )
  408:  		EndIf
  410:  		Wait  30`
  41C:  		Call  ResetAllActorSounds   ( .Actor:Self )
  42C:  		Call  UseBattleCamPreset    ( 00000002 )
  43C:  		Call  AddActorDecoration    ( .Actor:Self 00000001 00000000 .Decoration:Sweat )
  458:  		Call  SetActorSpeed ( .Actor:Self *Fixed[10.0] )
  46C:  		ExecWait  $Script_802238DC
  478:  		Call  RemoveActorDecoration ( .Actor:Self 00000001 00000000 )
  490:  		Call  EnableIdleScript      ( .Actor:Self 00000001 )
  4A4:  		Call  UseIdleAnimation      ( .Actor:Self .True )
  4B8:  		Return
  4C0:  	EndCaseGroup
  4C8:  EndSwitch
  4D0:  Wait  10`
  4DC:  Call  PlaySoundAtActor  ( .Actor:Self 000002F8 )
  4F0:  Call  SetActorSpeed ( .Actor:Self *Fixed[5.0] )
  504:  Call  SetActorJumpGravity   ( .Actor:Self *Fixed[1.8] )
  518:  Call  SetAnimation  ( .Actor:Self 00000001 00400005 )
  530:  Call  GetActorPos   ( .Actor:Self *Var0 *Var1 *Var2 )
  54C:  Call  SetGoalPos    ( .Actor:Self *Var0 *Var1 *Var2 )
  568:  Call  JumpToGoal    ( .Actor:Self  10` .False .True .False )
  588:  Set   *VarA  *Var0
  598:  Set   *VarB  *Var1
  5A8:  Set   *VarC  *Var2
  5B8:  Call  SetActorSounds    ( .Actor:Self .ActorSound:Fly 00000000 00000000 )
  5D4:  Call  PlaySoundAtActor  ( .Actor:Self 000002F9 )
  5E8:  Call  SetGoalToTarget   ( .Actor:Self )
  5F8:  Call  GetGoalPos    ( .Actor:Self *Var0 *Var1 *Var2 )
  614:  Add   *Var2  00000001
  624:  Call  SetGoalPos    ( .Actor:Self *Var0 *Var1 *Var2 )
  640:  Call  SetActorSpeed ( .Actor:Self *Fixed[8.0] )
  654:  Call  SetAnimation  ( .Actor:Self 00000001 00400005 )
  66C:  Call  FlyToGoal     ( .Actor:Self  0`  -10` .Easing:QuadraticOut )
  688:  Wait  2`
  694:  Call  EnemyDamageTarget ( .Actor:Self *Var0 ~Flags:DamageType:0 00000000 00000000 00000001 00000020 )
  6BC:  Switch  *Var0
  6C8:  	CaseOR  ==  .HitResult:Hit % 0
  6D4:  	CaseOR  ==  .HitResult:QuakeImmune % 2
  6E0:  		Call  ResetAllActorSounds   ( .Actor:Self )
  6F0:  		Call  UseBattleCamPreset    ( 00000002 )
  700:  		Call  GetActorPos   ( .Actor:Self *Var0 *Var1 *Var2 )
  71C:  		Add   *Var0  0000001E
  72C:  		Call  SetActorJumpGravity   ( .Actor:Self *Fixed[1.0] )
  740:  		Call  SetGoalPos    ( .Actor:Self *Var0 *Var1 *Var2 )
  75C:  		Call  JumpWithBounce        ( .Actor:Self  10` *Fixed[2.0] )
  774:  		Wait  20`
  780:  		Call  SetActorSpeed ( .Actor:Self *Fixed[6.0] )
  794:  		ExecWait  $Script_802238DC
  7A0:  	EndCaseGroup
  7A8:  EndSwitch
  7B0:  Call  EnableIdleScript  ( .Actor:Self 00000001 )
  7C4:  Call  UseIdleAnimation  ( .Actor:Self .True )
  7D8:  Return
  7E0:  End
}

#new:Script $Script_HealOneAlly
{
    0:  Set   *VarA  *Var0
   10:  Call  UseIdleAnimation  ( .Actor:Self .False )
   24:  Call  EnableIdleScript  ( .Actor:Self 00000000 )
   38:  Call  UseBattleCamPreset    ( 0000003F )
   48:  Call  BattleCamTargetActor  ( .Actor:Self )
   58:  Call  GetOwnerID        ( *Var0 )
   68:  Call  GetActorPos       ( *Var0 *Var1 *Var2 *Var3 )
   84:  Call  PlaySoundAtActor  ( .Actor:Self 000002F8 )
   98:  Call  PlaySoundAtActor  ( .Actor:Self 00000214 )
   AC:  Call  PlaySoundAtActor  ( .Actor:Self 00000000 )
   C0:  Call  SetAnimation      ( .Actor:Self 00000001 00400005 )
   D8:  Add   *Var2  00000032
   E8:  Call  PlayEffect        ( ~FX:Sparkles:Random *Var1 *Var2 *Var3 0000000A 00000000 00000000 00000000 00000000 00000000 00000000 00000000 00000000 )
  12C:  Call  PlayEffect        ( ~FX:Recover:LittleHeart *Var1 *Var2 *Var3 00000000 00000000 00000000 00000000 00000000 00000000 00000000 00000000 00000000 )
  170:  Wait  30`
  17C:  Call  SetAnimation      ( .Actor:Self 00000001 00400001 )
  194:  Wait  10`
  1A0:  Call  UseBattleCamPreset    ( 0000003F )
  1B0:  Call  BattleCamTargetActor  ( *VarA )
  1C0:  Call  GetEnemyMaxHP     ( *VarA *Var4 )
  1D4:  Mul   *Var4  0000003C
  1E4:  Div   *Var4  00000064
  1F4:  Thread
  1FC:  	Wait  5`
  208:  	Call  PlaySoundAtActor  ( *VarA 0000206D )
  21C:  	Call  PlaySoundAtActor  ( *VarA 00000214 )
  230:  	Wait  30`
  23C:  	Call  PlaySoundAtActor  ( *VarA 0000025C )
  250:  EndThread
  258:  Thread
  260:  	Call  8026BF48  ( 00000001 )
  270:  	Call  HealActor ( *VarA *Var4 .False )
  288:  	Call  8026BF48  ( 00000000 )
  298:  EndThread
  2A0:  Call  WaitForBuffDone ( )
  2AC:  Call  UseBattleCamPreset    ( 00000002 )
  2BC:  Call  EnableIdleScript      ( .Actor:Self 00000001 )
  2D0:  Call  UseIdleAnimation      ( .Actor:Self .True )
  2E4:  Return
  2EC:  End
}

#new:Script $Script_80224A2C
{
    0:  Call  EnemyCreateTargetList ( 00000002 )
   10:  Call  InitTargetIterator ( )
   1C:  Label  0
   28:  Call  GetOwnerTarget    ( *Var0 *Var1 )
   3C:  Call  GetActorHP        ( *Var0 *Var2 )
   50:  Call  GetEnemyMaxHP     ( *Var0 *Var3 )
   64:  If  *Var2  !=  *Var3
   74:  	Call  GetOwnerTarget    ( *Var0 *Var1 )
   88:  	Return
   90:  EndIf
   98:  Call  ChooseNextTarget  ( .Iter:Next *Var0 )
   AC:  If  *Var0  !=  FFFFFFFF
   BC:  	Goto  0
   C8:  EndIf
   D0:  Return
   D8:  End
}

#new:Script $Script_TakeTurn_80224B0C
{
    0:  ExecWait  $Script_80224A2C
    C:  If  *Var0  ==  FFFFFFFF
   1C:  	ExecWait  $Script_FlyingAttack
   28:  Else
   30:  	Call  RandInt   ( 000003E8 *VarA )
   44:  	If  *VarA  <  00000258
   54:  		ExecWait  $Script_HealOneAlly
   60:  	Else
   68:  		ExecWait  $Script_FlyingAttack
   74:  	EndIf
   7C:  EndIf
   84:  Return
   8C:  End
}

#new:DefenseTable $DefenseTable_80224BA0
{
	.Element:Normal 00000000
	.Element:End
}

% Origin: HINT
#new:DefenseTable $DefenseTable_80224BAC
{
	.Element:Normal 00000000
	.Element:End
}

#new:StatusTable $StatusTable_80224BB8
{
	.Status:Normal      0`
	.Status:Default     0`
	.Status:Sleep      50`
	.Status:Poison     50`
	.Status:Frozen      0`
	.Status:Dizzy      75`
	.Status:Fear        0`
	.Status:Static     50`
	.Status:Paralyze   75`
	.Status:Shrink     80`
	.Status:Stop       90`
	.Status:DefaultTurnMod    0`
	.Status:SleepTurnMod      0`
	.Status:PoisonTurnMod     0`
	.Status:FrozenTurnMod     0`
	.Status:DizzyTurnMod      0`
	.Status:FearTurnMod       0`
	.Status:StaticTurnMod     0`
	.Status:ParalyzeTurnMod   0`
	.Status:ShrinkTurnMod     0`
	.Status:StopTurnMod      -1`
	.Status:End
}

% Origin: HINT
#new:StatusTable $StatusTable_80224C64
{
	.Status:Normal      0`
	.Status:Default     0`
	.Status:Sleep      50`
	.Status:Poison     50`
	.Status:Frozen      0`
	.Status:Dizzy     100`
	.Status:Fear        0`
	.Status:Static     50`
	.Status:Paralyze   75`
	.Status:Shrink     80`
	.Status:Stop       90`
	.Status:DefaultTurnMod    0`
	.Status:SleepTurnMod      0`
	.Status:PoisonTurnMod     0`
	.Status:FrozenTurnMod     0`
	.Status:DizzyTurnMod      0`
	.Status:FearTurnMod       0`
	.Status:StaticTurnMod     0`
	.Status:ParalyzeTurnMod   0`
	.Status:ShrinkTurnMod     0`
	.Status:StopTurnMod      -1`
	.Status:End
}

#new:PartsTable $PartsTable_80224D10
{
	00800000 01000000 022300FF $IdleAnimations_80224DF0 $DefenseTable_80224BA0 00000000 00000000 FBF40000 00000000
}

% Origin: HINT
#new:PartsTable $PartsTable_80224D34
{
	00020001 01000000 022300FF $IdleAnimations_80224DF0 $DefenseTable_80224BAC 00800000 00000000 FBF40000 00000000
	00800000 02000000 F62300FF $IdleAnimations_80224E3C $DefenseTable_80224BAC 00000000 00000000 00F80000 00000000
	00020001 03000000 000000FF $IdleAnimations_80224E88 $DefenseTable_80224BAC 00000000 00000000 00000000 00000000
}

#new:Actor $RMagikoopa
{
	% stats
	[Index]        51b
	[Level]        21`b
	[MaxHP]        11`b
	[Coins]         2`b
	[Flags]       00000000
	[StatusTable] $StatusTable_80224BB8
	% ai
	[PartsCount]    1`s
	[PartsTable]  $PartsTable_80224D10
	[Script]      $Script_Init_80226FD8
	% move effectiveness
	[Escape]       40`b
	[Item]         40`b
	[AirLift]      80`b
	[Hurricane]    70`b % Bow's "Spook" as well
	[UpAndAway]    95`b
	[PowerBounce]  80`b
	[SpinSmash]     0`b % weight (0-4)
	% ui positions
	[Size]         36`b  40`b % width height
	[HealthBar]     0`b   0`b % dx dy
	[StatusTurn]  -10`b  20`b % dx dy
	[StatusIcon]   10`b  32`b % dx dy
}

% Origin: HINT
#new:Actor $FlyingRMagikoopa
{
	% stats
	[Index]        52b
	[Level]        21`b
	[MaxHP]        11`b
	[Coins]         2`b
	[Flags]       00000200
	[StatusTable] $StatusTable_80224C64
	% ai
	[PartsCount]    3`s
	[PartsTable]  $PartsTable_80224D34
	[Script]      $Script_Init_8022707C
	% move effectiveness
	[Escape]       40`b
	[Item]         40`b
	[AirLift]      95`b
	[Hurricane]    75`b % Bow's "Spook" as well
	[UpAndAway]    95`b
	[PowerBounce]  80`b
	[SpinSmash]     0`b % weight (0-4)
	% ui positions
	[Size]         48`b  40`b % width height
	[HealthBar]     0`b   0`b % dx dy
	[StatusTurn]  -25`b  20`b % dx dy
	[StatusIcon]    1`b  34`b % dx dy
}

% Origin: HINT
#new:IdleAnimations $IdleAnimations_80224DF0
{
	.Status:Normal    00560101
	.Status:Stone     00560100
	.Status:Sleep     00560108
	.Status:Poison    00560101
	.Status:Stop      00560100
	.Status:Static    00560101
	.Status:Paralyze  00560100
	.Status:Dizzy     00560107
	.Status:Fear      00560107
	.Status:End
}

% Origin: HINT
#new:IdleAnimations $IdleAnimations_80224E3C
{
	.Status:Normal    00570101
	.Status:Stone     00570100
	.Status:Sleep     00570108
	.Status:Poison    00570101
	.Status:Stop      00570100
	.Status:Static    00570101
	.Status:Paralyze  00570100
	.Status:Dizzy     00570107
	.Status:Fear      00570107
	.Status:End
}

% Origin: HINT
#new:IdleAnimations $IdleAnimations_80224E88
{
	.Status:Normal    0057010A
	.Status:End
}

% Origin: HINT
#new:Script $Script_Idle_80224E94
{
    0:  Return
    8:  End
}

#new:Script $Script_HandleEvent_80224EA4
{
    0:  Call  UseIdleAnimation  ( .Actor:Self .False )
   14:  Call  EnableIdleScript  ( .Actor:Self 00000000 )
   28:  Call  GetLastEvent      ( .Actor:Self *Var0 )
   3C:  Switch  *Var0
   48:  	CaseOR  ==  .Event:HitCombo % 9
   54:  	CaseOR  ==  .Event:Hit % A
   60:  		SetConst  *Var0  00000001
   70:  		SetConst  *Var1  00560104
   80:  		ExecWait  DoNormalHit
   8C:  	EndCaseGroup
   94:  	Case  ==  .Event:BurnHit % E
   A0:  		SetConst  *Var0  00000001
   B0:  		SetConst  *Var1  00560105
   C0:  		SetConst  *Var2  00560106
   D0:  		ExecWait  DoBurnHit
   DC:  	Case  ==  .Event:BurnDeath % 24
   E8:  		SetConst  *Var0  00000001
   F8:  		SetConst  *Var1  00560105
  108:  		SetConst  *Var2  00560106
  118:  		ExecWait  DoBurnHit
  124:  		SetConst  *Var0  00000001
  134:  		SetConst  *Var1  00560106
  144:  		ExecWait  DoDeath
  150:  		Return
  158:  	Case  ==  .Event:SpinSmashHit % B
  164:  		SetConst  *Var0  00000001
  174:  		SetConst  *Var1  00560104
  184:  		ExecWait  DoSpinSmashHit
  190:  	Case  ==  .Event:SpinSmashDeath % 21
  19C:  		SetConst  *Var0  00000001
  1AC:  		SetConst  *Var1  00560104
  1BC:  		ExecWait  DoSpinSmashHit
  1C8:  		SetConst  *Var0  00000001
  1D8:  		SetConst  *Var1  00560104
  1E8:  		ExecWait  DoDeath
  1F4:  		Return
  1FC:  	CaseOR  ==  00000017 % 17
  208:  	CaseOR  ==  .Event:Immune % 19
  214:  	CaseOR  ==  .Event:AirLiftFailed % 1F
  220:  		SetConst  *Var0  00000001
  230:  		SetConst  *Var1  00560101
  240:  		ExecWait  DoImmune
  24C:  	EndCaseGroup
  254:  	Case  ==  .Event:Death % 20
  260:  		SetConst  *Var0  00000001
  270:  		SetConst  *Var1  00560104
  280:  		ExecWait  DoNormalHit
  28C:  		Wait  10`
  298:  		SetConst  *Var0  00000001
  2A8:  		SetConst  *Var1  00560104
  2B8:  		ExecWait  DoDeath
  2C4:  		Return
  2CC:  	Case  ==  .Event:RecoverStatus % 31
  2D8:  		SetConst  *Var0  00000001
  2E8:  		SetConst  *Var1  00560101
  2F8:  		ExecWait  DoRecover
  304:  	Case  ==  .Event:ScareAway % 39
  310:  		Call  SetAnimation  ( .Actor:Self 00000001 00560104 )
  328:  		Call  SetActorJumpGravity   ( .Actor:Self *Fixed[1.5] )
  33C:  		Call  GetActorPos   ( .Actor:Self *Var0 *Var1 *Var2 )
  358:  		Call  SetGoalPos    ( .Actor:Self *Var0 *Var1 *Var2 )
  374:  		Call  JumpToGoal    ( .Actor:Self  15` .False .True .False )
  394:  		Wait  15`
  3A0:  		Call  SetAnimation  ( .Actor:Self 00000001 00560102 )
  3B8:  		ExecWait  $Script_RMagikoopa_RunAway
  3C4:  		Return
  3CC:  	Case  ==  .Event:BeginAirLift % 3A
  3D8:  		SetConst  *Var0  00000001
  3E8:  		SetConst  *Var1  00560102
  3F8:  		ExecWait  DoAirLift
  404:  	Case  ==  .Event:BlowAway % 16
  410:  		Call  GetStatusFlags    ( .Actor:Self *Var0 )
  424:  		If  *Var0  !&  ~Flags:StatusFlags:Sleep|Frozen|Fear|Paralyze|Dizzy|Stone|Stop % 35D000
  434:  			If  *Var0  &  ~Flags:StatusFlags:Shrink % 80000
  444:  				Call  SetPartDispOffset ( .Actor:Self 00000001 00000000 00000002 00000000 )
  464:  			Else
  46C:  				Call  SetPartDispOffset ( .Actor:Self 00000001 FFFFFFFC 00000005 00000000 )
  48C:  			EndIf
  494:  		EndIf
  49C:  		SetConst  *Var0  00000001
  4AC:  		SetConst  *Var1  00560104
  4BC:  		ExecWait  DoBlowAway
  4C8:  		Return
  4D0:  	Default
  4D8:  EndSwitch
  4E0:  Call  EnableIdleScript  ( .Actor:Self 00000001 )
  4F4:  Call  UseIdleAnimation  ( .Actor:Self .True )
  508:  Return
  510:  End
}

% Origin: HINT
#new:Script $Script_802253BC
{
    0:  Call  GetBattleFlags    ( *Var0 )
   10:  If  *Var0  !&  00080000
   20:  	If  *Var0  &  00000240
   30:  		Call  SetActorVar   ( .Actor:Self 00000000 00000001 )
   48:  	EndIf
   50:  Else
   58:  	Call  $Function_802186B8    ( *Var0 )
   68:  	Switch  *Var0
   74:  		CaseOR  ==  00000083
   80:  		CaseOR  ==  00000084
   8C:  		CaseOR  ==  00000085
   98:  		CaseOR  ==  00000088
   A4:  			Call  GetBattleFlags    ( *Var0 )
   B4:  			If  *Var0  &  00000240
   C4:  				Call  SetActorVar   ( .Actor:Self 00000000 00000001 )
   DC:  			EndIf
   E4:  		EndCaseGroup
   EC:  	EndSwitch
   F4:  EndIf
   FC:  Return
  104:  End
}

% Origin: HINT
#new:Script $Script_802254C8
{
    0:  Call  GetActorVar   ( .Actor:Self 00000000 *Var0 )
   18:  If  *Var0  ==  00000001
   28:  	Call  SetAnimation  ( .Actor:Self 00000001 00560104 )
   40:  	Goto  0
   4C:  EndIf
   54:  Call  GetLastElement    ( *Var0 )
   64:  If  *Var0  &  00000400
   74:  	Call  SetAnimation  ( .Actor:Self 00000001 00560104 )
   8C:  	Goto  0
   98:  EndIf
   A0:  Return
   A8:  Label  0
   B4:  Call  8027D32C  ( FFFFFF81 )
   C4:  Call  GetStatusFlags    ( .Actor:Self *Var0 )
   D8:  If  *Var0  &  ~Flags:StatusFlags:Shrink % 80000
   E8:  	Call  SetPartScale  ( .Actor:Self 00000003 *Fixed[0.4] *Fixed[0.4] *Fixed[0.4] )
  108:  EndIf
  110:  Call  SetPartFlagBits   ( .Actor:Self 00000001 00800000 .True )
  12C:  Call  SetPartFlagBits   ( .Actor:Self 00000001 00020001 .False )
  148:  Call  SetPartFlagBits   ( .Actor:Self 00000002 00020001 .True )
  164:  Call  SetPartFlagBits   ( .Actor:Self 00000002 00800000 .False )
  180:  Call  SetPartFlagBits   ( .Actor:Self 00000003 00100000 .True )
  19C:  Call  SetPartFlagBits   ( .Actor:Self 00000003 00000001 .False )
  1B8:  Call  GetActorPos       ( .Actor:Self *Var0 *Var1 *Var2 )
  1D4:  Sub   *Var2  00000001
  1E4:  Call  SetPartPos        ( .Actor:Self 00000003 *Var0 *Var1 *Var2 )
  204:  Call  PlaySoundAtActor  ( .Actor:Self 00000301 )
  218:  Call  GetActorPos       ( .Actor:Self *Var0 *Var1 *Var2 )
  234:  Set   *Var1  00000000
  244:  Call  SetActorJumpGravity   ( .Actor:Self *Fixed[0.8] )
  258:  Call  SetGoalPos        ( .Actor:Self *Var0 *Var1 *Var2 )
  274:  Call  JumpToGoal        ( .Actor:Self  15` .False .True .False )
  294:  Call  $Function_802187B0    ( 00000096 0000000A )
  2A8:  Thread
  2B0:  	Call  ShakeCam  ( .Cam:Battle 00000000  5` *Fixed[0.7] )
  2CC:  EndThread
  2D4:  Call  GetLastEvent  ( .Actor:Self *Var3 )
  2E8:  If  *Var3  ==  0000000F % F
  2F8:  	Call  SetAnimation  ( .Actor:Self 00000001 00560104 )
  310:  	Call  GetActorPos   ( .Actor:Self *Var3 *Var4 *Var5 )
  32C:  	Add   *Var4  0000000A
  33C:  	Add   *Var5  00000005
  34C:  	Call  PlayEffect    ( ~FX:SmokeBurst:Black *Var3 *Var4 *Var5 *Fixed[1.0] 0000000A 00000000 00000000 00000000 00000000 00000000 00000000 00000000 )
  390:  EndIf
  398:  Call  SetGoalPos    ( .Actor:Self *Var0 *Var1 *Var2 )
  3B4:  Call  JumpToGoal    ( .Actor:Self  10` .False .True .False )
  3D4:  Call  SetGoalPos    ( .Actor:Self *Var0 *Var1 *Var2 )
  3F0:  Call  JumpToGoal    ( .Actor:Self  5` .False .True .False )
  410:  Loop  00000014
  41C:  	Call  SetPartFlagBits   ( .Actor:Self 00000003 00000001 .True )
  438:  	Wait  1`
  444:  	Call  SetPartFlagBits   ( .Actor:Self 00000003 00000001 .False )
  460:  	Wait  1`
  46C:  EndLoop
  474:  Call  SetPartFlagBits   ( .Actor:Self 00000003 00000001 .True )
  490:  Call  SetAnimation      ( .Actor:Self 00000001 00560101 )
  4A8:  Call  SetActorFlagBits  ( .Actor:Self 00000200 .False )
  4C0:  Call  BindHandleEvent   ( .Actor:Self $Script_HandleEvent_80224EA4 )
  4D4:  Call  SetActorType      ( .Actor:Self 00000051 )
  4E8:  Call  SetStatusTable    ( .Actor:Self $StatusTable_80224BB8 )
  4FC:  Call  $Function_802186E4    ( FFFFFFF6 00000014 0000000A 00000020 )
  518:  Call  SetActorFlagBits  ( .Actor:Self 00001000 .True )
  530:  Call  ResetAllActorSounds   ( .Actor:Self )
  540:  Call  GetIndexFromPos   ( .Actor:Self *Var0 )
  554:  Mod   *Var0  00000004
  564:  Call  SetGoalToIndex    ( .Actor:Self *Var0 )
  578:  Call  SetActorSpeed     ( .Actor:Self *Fixed[4.0] )
  58C:  Call  RunToGoal ( .Actor:Self  0` .False )
  5A4:  Call  GetGoalPos        ( .Actor:Self *Var0 *Var1 *Var2 )
  5C0:  Call  ForceHomePos      ( .Actor:Self *Var0 *Var1 *Var2 )
  5DC:  Call  HPBarToHome       ( .Actor:Self )
  5EC:  Return
  5F4:  End
}

% Origin: HINT
#new:Script $Script_HandleEvent_80225AC4
{
    0:  Call  UseIdleAnimation  ( .Actor:Self .False )
   14:  Call  EnableIdleScript  ( .Actor:Self 00000000 )
   28:  Call  GetLastEvent      ( .Actor:Self *Var0 )
   3C:  Switch  *Var0
   48:  	Case  ==  .Event:HitCombo % 9
   54:  		ExecWait  $Script_802253BC
   60:  		SetConst  *Var0  00000002
   70:  		SetConst  *Var1  00570104
   80:  		ExecWait  DoNormalHit
   8C:  	CaseOR  ==  .Event:Hit % A
   98:  	CaseOR  ==  .Event:FallTrigger % C
   A4:  		ExecWait  $Script_802253BC
   B0:  		SetConst  *Var0  00000002
   C0:  		SetConst  *Var1  00570104
   D0:  		ExecWait  DoNormalHit
   DC:  		ExecWait  $Script_802254C8
   E8:  	EndCaseGroup
   F0:  	CaseOR  ==  .Event:BurnHit % E
   FC:  	CaseOR  ==  0000000F % F
  108:  		ExecWait  $Script_802253BC
  114:  		SetConst  *Var0  00000002
  124:  		SetConst  *Var1  00570105
  134:  		SetConst  *Var2  00570106
  144:  		ExecWait  DoBurnHit
  150:  		ExecWait  $Script_802254C8
  15C:  	EndCaseGroup
  164:  	Case  ==  .Event:BurnDeath % 24
  170:  		SetConst  *Var0  00000002
  180:  		SetConst  *Var1  00570105
  190:  		SetConst  *Var2  00570106
  1A0:  		ExecWait  DoBurnHit
  1AC:  		SetConst  *Var0  00000002
  1BC:  		SetConst  *Var1  00570106
  1CC:  		ExecWait  DoDeath
  1D8:  		Return
  1E0:  	Case  ==  .Event:SpinSmashHit % B
  1EC:  		SetConst  *Var0  00000002
  1FC:  		SetConst  *Var1  00570104
  20C:  		ExecWait  DoSpinSmashHit
  218:  	Case  ==  .Event:SpinSmashDeath % 21
  224:  		SetConst  *Var0  00000002
  234:  		SetConst  *Var1  00570104
  244:  		ExecWait  DoSpinSmashHit
  250:  		SetConst  *Var0  00000002
  260:  		SetConst  *Var1  00570104
  270:  		ExecWait  DoDeath
  27C:  		Return
  284:  	CaseOR  ==  00000017 % 17
  290:  	CaseOR  ==  .Event:Immune % 19
  29C:  	CaseOR  ==  .Event:AirLiftFailed % 1F
  2A8:  		SetConst  *Var0  00000002
  2B8:  		SetConst  *Var1  00570101
  2C8:  		ExecWait  DoImmune
  2D4:  	EndCaseGroup
  2DC:  	Case  ==  .Event:Death % 20
  2E8:  		SetConst  *Var0  00000002
  2F8:  		SetConst  *Var1  00570104
  308:  		ExecWait  DoNormalHit
  314:  		Wait  10`
  320:  		SetConst  *Var0  00000002
  330:  		SetConst  *Var1  00570104
  340:  		ExecWait  DoDeath
  34C:  		Return
  354:  	Case  ==  .Event:BeginFirstStrike % 38
  360:  		Call  SetActorPos       ( .Actor:Self  20`  0`  0` )
  37C:  		Call  HPBarToCurrent    ( .Actor:Self )
  38C:  	Case  ==  .Event:EndFirstStrike % 35
  398:  		Call  SetAnimation  ( .Actor:Self 00000002 00570101 )
  3B0:  		Call  SetGoalToHome ( .Actor:Self )
  3C0:  		Call  SetActorSpeed ( .Actor:Self *Fixed[4.0] )
  3D4:  		Call  FlyToGoal     ( .Actor:Self  0`  1` .Easing:Linear )
  3F0:  		Call  SetAnimation  ( .Actor:Self 00000002 00570101 )
  408:  		Call  HPBarToHome   ( .Actor:Self )
  418:  	Case  ==  .Event:RecoverStatus % 31
  424:  		SetConst  *Var0  00000002
  434:  		SetConst  *Var1  00570101
  444:  		ExecWait  DoRecover
  450:  	Case  ==  .Event:ScareAway % 39
  45C:  		Call  SetAnimation  ( .Actor:Self 00000002 00570104 )
  474:  		Call  SetActorJumpGravity   ( .Actor:Self *Fixed[1.5] )
  488:  		Call  GetActorPos   ( .Actor:Self *Var0 *Var1 *Var2 )
  4A4:  		Call  SetGoalPos    ( .Actor:Self *Var0 *Var1 *Var2 )
  4C0:  		Call  JumpToGoal    ( .Actor:Self  15` .False .True .False )
  4E0:  		Wait  15`
  4EC:  		Call  SetAnimation  ( .Actor:Self 00000002 00570102 )
  504:  		ExecWait  $Script_RMagikoopa_RunAway
  510:  		Return
  518:  	Case  ==  .Event:BeginAirLift % 3A
  524:  		SetConst  *Var0  00000002
  534:  		SetConst  *Var1  00570102
  544:  		ExecWait  DoAirLift
  550:  	Case  ==  .Event:BlowAway % 16
  55C:  		Call  GetStatusFlags    ( .Actor:Self *Var0 )
  570:  		If  *Var0  !&  ~Flags:StatusFlags:Sleep|Frozen|Fear|Paralyze|Dizzy|Stone|Stop % 35D000
  580:  			If  *Var0  &  ~Flags:StatusFlags:Shrink % 80000
  590:  				Call  SetPartDispOffset ( .Actor:Self 00000002 FFFFFFFD 00000000 00000000 )
  5B0:  			Else
  5B8:  				Call  SetPartDispOffset ( .Actor:Self 00000002 FFFFFFF1 00000000 00000000 )
  5D8:  			EndIf
  5E0:  		EndIf
  5E8:  		SetConst  *Var0  00000002
  5F8:  		SetConst  *Var1  00570104
  608:  		ExecWait  DoBlowAway
  614:  		Return
  61C:  	Default
  624:  EndSwitch
  62C:  Call  EnableIdleScript  ( .Actor:Self 00000001 )
  640:  Call  UseIdleAnimation  ( .Actor:Self .True )
  654:  Return
  65C:  End
}

% Origin: HINT
#new:Script $Script_RMagikoopa_ShapeSpell
{
    0:  Call  UseIdleAnimation  ( .Actor:Self .False )
   14:  Call  EnableIdleScript  ( .Actor:Self 00000000 )
   28:  Call  SetTargetActor    ( .Actor:Self .Actor:Player )
   3C:  Call  GetBattlePhase    ( *Var0 )
   4C:  If  *Var0  ==  00000001
   5C:  	Call  UseBattleCamPreset    ( 00000002 )
   6C:  	Call  MoveBattleCamOver     (  1` )
   7C:  Else
   84:  	Call  UseBattleCamPreset    ( 00000002 )
   94:  	Call  MoveBattleCamOver     (  10` )
   A4:  EndIf
   AC:  Call  PlaySoundAtActor  ( .Actor:Self .Sound:SpellCast1 )
   C0:  Call  GetActorPos       ( .Actor:Self *Var0 *Var1 *Var2 )
   DC:  Call  GetStatusFlags    ( .Actor:Self *VarA )
   F0:  If  *VarA  &  ~Flags:StatusFlags:Shrink % 80000
  100:  	Sub   *Var0  0000000C
  110:  	Add   *Var1  0000000E
  120:  Else
  128:  	Sub   *Var0  0000001E
  138:  	Add   *Var1  00000024
  148:  EndIf
  150:  Call  PlayEffect        ( ~FX:GatherMagic:Pink *Var0 *Var1 *Var2 *Fixed[0.5] 0000001E 00000000 00000000 00000000 00000000 00000000 00000000 00000000 )
  194:  Call  SetAnimation      ( .Actor:Self 00000002 00570102 )
  1AC:  Wait  30`
  1B8:  Call  EnemyTestTarget   ( .Actor:Self *Var0 ~Flags:DamageType:0 00000000 00000001 00000010 )
  1DC:  Switch  *Var0
  1E8:  	CaseOR  ==  .HitResult:Miss % 6
  1F4:  	CaseOR  ==  .HitResult:Lucky % 5
  200:  		Set   *VarA  *Var0
  210:  		Call  PlaySoundAtActor  ( .Actor:Self .Sound:SpellCast2 )
  224:  		Call  SetAnimation      ( .Actor:Self 00000002 00570103 )
  23C:  		Wait  5`
  248:  		Call  GetActorPos       ( .Actor:Self *Var0 *Var1 *Var2 )
  264:  		Call  GetStatusFlags    ( .Actor:Self *Var9 )
  278:  		If  *Var9  &  ~Flags:StatusFlags:Shrink % 80000
  288:  			Sub   *Var0  00000008
  298:  			Add   *Var1  00000008
  2A8:  		Else
  2B0:  			Sub   *Var0  00000014
  2C0:  			Add   *Var1  00000014
  2D0:  		EndIf
  2D8:  		Call  SetGoalToTarget       ( .Actor:Self )
  2E8:  		Call  GetGoalPos    ( .Actor:Self *Var3 *Var4 *Var5 )
  304:  		Sub   *Var3  00000032
  314:  		Set   *Var4  00000000
  324:  		Call  $Function_80218560    ( *Var0 *Var1 *Var5 *Var3 *Var4 *Var5 00000019 )
  34C:  		Wait  50`
  358:  		If  *VarA  ==  .HitResult:Lucky % 5
  368:  			Call  EnemyTestTarget   ( .Actor:Self *Var0 ~Flags:DamageType:TriggerLucky 00000000 00000000 00000000 )
  38C:  		EndIf
  394:  		Wait  14`
  3A0:  		Call  YieldTurn ( )
  3AC:  		Call  AddActorDecoration    ( .Actor:Self 00000002 00000000 .Decoration:Sweat )
  3C8:  		Wait  30`
  3D4:  		Call  RemoveActorDecoration ( .Actor:Self 00000002 00000000 )
  3EC:  		Call  EnableIdleScript      ( .Actor:Self 00000001 )
  400:  		Call  UseIdleAnimation      ( .Actor:Self .True )
  414:  		Return
  41C:  	EndCaseGroup
  424:  EndSwitch
  42C:  Call  PlaySoundAtActor  ( .Actor:Self .Sound:SpellCast2 )
  440:  Call  SetAnimation      ( .Actor:Self 00000002 00570103 )
  458:  Wait  5`
  464:  Call  GetActorPos       ( .Actor:Self *Var0 *Var1 *Var2 )
  480:  Call  GetStatusFlags    ( .Actor:Self *VarA )
  494:  If  *VarA  &  ~Flags:StatusFlags:Shrink % 80000
  4A4:  	Sub   *Var0  00000008
  4B4:  	Add   *Var1  00000008
  4C4:  Else
  4CC:  	Sub   *Var0  00000014
  4DC:  	Add   *Var1  00000014
  4EC:  EndIf
  4F4:  Call  SetGoalToTarget   ( .Actor:Self )
  504:  Call  GetGoalPos        ( .Actor:Self *Var3 *Var4 *Var5 )
  520:  Sub   *Var3  0000000A
  530:  Call  $Function_80218560    ( *Var0 *Var1 *Var5 *Var3 *Var4 *Var5 00000014 )
  558:  Wait  18`
  564:  Wait  2`
  570:  Call  EnemyDamageTarget ( .Actor:Self *Var0 ~Flags:DamageType:NoContact|Magic 00000000 00000000 00000003 00000020 )
  598:  Switch  *Var0
  5A4:  	CaseOR  ==  .HitResult:Hit % 0
  5B0:  	CaseOR  ==  .HitResult:QuakeImmune % 2
  5BC:  		Wait  19`
  5C8:  		Call  YieldTurn ( )
  5D4:  	EndCaseGroup
  5DC:  EndSwitch
  5E4:  Call  EnableIdleScript  ( .Actor:Self 00000001 )
  5F8:  Call  UseIdleAnimation  ( .Actor:Self .True )
  60C:  Return
  614:  End
}

% Origin: HINT
#new:Script $Script_RMagikoopa_WandStrike
{
    0:  Call  UseIdleAnimation  ( .Actor:Self .False )
   14:  Call  EnableIdleScript  ( .Actor:Self 00000000 )
   28:  Call  SetTargetActor    ( .Actor:Self .Actor:Player )
   3C:  Call  UseBattleCamPreset    ( 0000003F )
   4C:  Call  BattleCamTargetActor  ( .Actor:Self )
   5C:  Call  8024ECF8  ( FFFFFFFF 00000001 00000000 )
   74:  Call  PlaySoundAtActor  ( .Actor:Self 000002DB )
   88:  Thread
   90:  	Call  SetAnimation  ( .Actor:Self 00000001 00560102 )
   A8:  	Set   *Var0  000000C8
   B8:  	Loop  00000014
   C4:  		Sub   *Var0  0000000A
   D4:  		Call  SetPartAlpha  ( .Actor:Self 00000001 *Var0 )
   EC:  		Wait  1`
   F8:  	EndLoop
  100:  EndThread
  108:  Wait  10`
  114:  Call  SetGoalToTarget   ( .Actor:Self )
  124:  Call  GetGoalPos        ( .Actor:Self *Var0 *Var1 *Var2 )
  140:  Call  GetStatusFlags    ( .Actor:Self *VarA )
  154:  If  *VarA  &  ~Flags:StatusFlags:Shrink % 80000
  164:  	Add   *Var0  00000005
  174:  Else
  17C:  	Add   *Var0  00000019
  18C:  EndIf
  194:  Set   *Var1  00000000
  1A4:  Call  SetGoalPos    ( .Actor:Self *Var0 *Var1 *Var2 )
  1C0:  Call  FlyToGoal     ( .Actor:Self  30`  0` .Easing:CosInOut )
  1DC:  Set   *Var0  00000037
  1EC:  Loop  00000014
  1F8:  	Add   *Var0  0000000A
  208:  	Call  SetPartAlpha  ( .Actor:Self 00000001 *Var0 )
  220:  	Wait  1`
  22C:  EndLoop
  234:  Call  SetPartAlpha      ( .Actor:Self 00000001 000000FF )
  24C:  Call  SetAnimation      ( .Actor:Self 00000001 00560103 )
  264:  Wait  11`
  270:  Call  PlaySoundAtActor  ( .Actor:Self 000002DC )
  284:  Call  EnemyTestTarget   ( .Actor:Self *Var0 ~Flags:DamageType:0 00000000 00000001 00000010 )
  2A8:  Switch  *Var0
  2B4:  	CaseOR  ==  .HitResult:Miss % 6
  2C0:  	CaseOR  ==  .HitResult:Lucky % 5
  2CC:  		Set   *VarA  *Var0
  2DC:  		Call  UseBattleCamPreset    ( 00000002 )
  2EC:  		If  *VarA  ==  .HitResult:Lucky % 5
  2FC:  			Call  EnemyTestTarget   ( .Actor:Self *Var0 ~Flags:DamageType:TriggerLucky 00000000 00000000 00000000 )
  320:  		EndIf
  328:  		Wait  15`
  334:  		Set   *Var0  000000C8
  344:  		Loop  00000014
  350:  			Sub   *Var0  0000000A
  360:  			Call  SetPartAlpha  ( .Actor:Self 00000001 *Var0 )
  378:  			Wait  1`
  384:  		EndLoop
  38C:  		Call  YieldTurn ( )
  398:  		Call  SetGoalToHome ( .Actor:Self )
  3A8:  		Call  SetAnimation  ( .Actor:Self 00000001 00560101 )
  3C0:  		Call  FlyToGoal     ( .Actor:Self  30`  0` .Easing:CosInOut )
  3DC:  		Set   *Var0  00000037
  3EC:  		Loop  00000014
  3F8:  			Add   *Var0  0000000A
  408:  			Call  SetPartAlpha  ( .Actor:Self 00000001 *Var0 )
  420:  			Wait  1`
  42C:  		EndLoop
  434:  		Call  SetPartAlpha      ( .Actor:Self 00000001 000000FF )
  44C:  		Call  EnableIdleScript  ( .Actor:Self 00000001 )
  460:  		Call  UseIdleAnimation  ( .Actor:Self .True )
  474:  		Return
  47C:  	EndCaseGroup
  484:  EndSwitch
  48C:  Call  SetGoalToTarget   ( .Actor:Self )
  49C:  Wait  2`
  4A8:  Call  EnemyDamageTarget ( .Actor:Self *Var0 ~Flags:DamageType:NoContact 00000000 00000000 00000003 00000020 )
  4D0:  Switch  *Var0
  4DC:  	CaseOR  ==  .HitResult:Hit % 0
  4E8:  	CaseOR  ==  .HitResult:QuakeImmune % 2
  4F4:  		Call  UseBattleCamPreset    ( 00000002 )
  504:  		Wait  10`
  510:  		Set   *Var0  000000C8
  520:  		Loop  00000014
  52C:  			Sub   *Var0  0000000A
  53C:  			Call  SetPartAlpha  ( .Actor:Self 00000001 *Var0 )
  554:  			Wait  1`
  560:  		EndLoop
  568:  		Call  YieldTurn ( )
  574:  		Call  SetGoalToHome ( .Actor:Self )
  584:  		Call  SetAnimation  ( .Actor:Self 00000001 00560101 )
  59C:  		Call  FlyToGoal     ( .Actor:Self  20`  0` .Easing:CosInOut )
  5B8:  		Set   *Var0  00000037
  5C8:  		Loop  00000014
  5D4:  			Add   *Var0  0000000A
  5E4:  			Call  SetPartAlpha  ( .Actor:Self 00000001 *Var0 )
  5FC:  			Wait  1`
  608:  		EndLoop
  610:  		Call  SetPartAlpha  ( .Actor:Self 00000001 000000FF )
  628:  	EndCaseGroup
  630:  EndSwitch
  638:  Call  EnableIdleScript  ( .Actor:Self 00000001 )
  64C:  Call  UseIdleAnimation  ( .Actor:Self .True )
  660:  Return
  668:  End
}

% Origin: HINT
#new:Script $Script_RMagikoopa_RunAway
{
    0:  Call  UseIdleAnimation  ( .Actor:Self .False )
   14:  Call  EnableIdleScript  ( .Actor:Self 00000000 )
   28:  Call  8027D32C  ( FFFFFF81 )
   38:  Call  GetLastEvent      ( .Actor:Self *Var0 )
   4C:  If  *Var0  !=  .Event:ScareAway % 39
   5C:  	Call  UseBattleCamPreset    ( 0000000E )
   6C:  	Call  BattleCamTargetActor  ( .Actor:Self )
   7C:  	Call  MoveBattleCamOver     (  15` )
   8C:  	Wait  15`
   98:  	Call  UseBattleCamPreset    ( 00000001 )
   A8:  EndIf
   B0:  Call  SetActorSpeed ( .Actor:Self *Fixed[1.0] )
   C4:  Call  GetActorPos   ( .Actor:Self *Var0 *Var1 *Var2 )
   E0:  Add   *Var0  00000014
   F0:  Call  SetGoalPos    ( .Actor:Self *Var0 *Var1 *Var2 )
  10C:  Call  RunToGoal     ( .Actor:Self  0` .False )
  124:  Wait  10`
  130:  Call  SetActorYaw   ( .Actor:Self  180` )
  144:  Call  EnableActorBlur       ( .Actor:Self 00000001 )
  158:  Call  SetActorSpeed ( .Actor:Self *Fixed[10.0] )
  16C:  Call  GetActorPos   ( .Actor:Self *Var0 *Var1 *Var2 )
  188:  Add   *Var0  000000C8
  198:  Call  SetGoalPos    ( .Actor:Self *Var0 *Var1 *Var2 )
  1B4:  Call  RunToGoal     ( .Actor:Self  0` .False )
  1CC:  Call  YieldTurn ( )
  1D8:  Call  UseBattleCamPreset    ( 00000002 )
  1E8:  ExecWait  ForceNextTarget
  1F4:  Call  8027D32C      ( FFFFFF81 )
  204:  Call  RemoveActor   ( .Actor:Self )
  214:  Return
  21C:  End
}

#new:Script $Script_Init_80226FD8
{
    0:  Call  BindIdle      ( .Actor:Self $Script_Idle_80224E94 )
   14:  Call  BindTakeTurn  ( .Actor:Self $Script_TakeTurn_80227120 )
   28:  Call  BindHandleEvent   ( .Actor:Self $Script_HandleEvent_80224EA4 )
   3C:  Call  GetBattleVar  ( 00000002 *Var0 )
   50:  If  *Var0  ==  00000000
   60:  	Call  SetBattleVar  ( 00000002 FFFFFFFF )
   74:  EndIf
   7C:  Call  SetActorVar   ( .Actor:Self 00000000 00000000 )
   94:  Return
   9C:  End
}

% Origin: HINT
#new:Script $Script_Init_8022707C
{
    0:  Call  BindIdle      ( .Actor:Self $Script_Idle_80224E94 )
   14:  Call  BindTakeTurn  ( .Actor:Self $Script_TakeTurn_80227120 )
   28:  Call  BindHandleEvent   ( .Actor:Self $Script_HandleEvent_80225AC4 )
   3C:  Call  GetBattleVar  ( 00000002 *Var0 )
   50:  If  *Var0  ==  00000000
   60:  	Call  SetBattleVar  ( 00000002 FFFFFFFF )
   74:  EndIf
   7C:  Call  SetActorVar   ( .Actor:Self 00000000 00000000 )
   94:  Return
   9C:  End
}

% Origin: HINT
#new:Script $Script_TakeTurn_80227120
{
    0:  Set   *Flag[00]  .False
   10:  Label  A
   1C:  Call  EnemyCreateTargetList ( 00008002 )
   2C:  Call  InitTargetIterator ( )
   38:  Label  0
   44:  Call  GetOwnerTarget    ( *Var0 *Var1 )
   58:  Call  GetIndexFromHome  ( *Var0 *Var1 )
   6C:  Call  GetBattleVar      ( 00000002 *Var2 )
   80:  If  *Var1  >  *Var2
   90:  	Call  $Function_80218808    ( *Var0 *Var3 )
   A4:  	If  *Var3  ==  00000000
   B4:  		Call  GetActorAttackBoost   ( *Var0 *Var4 )
   C8:  		If  *Var4  <  00000003
   D8:  			Set   *Var8  *Var0
   E8:  			Call  SetBattleVar  ( 00000002 *Var1 )
   FC:  			Goto  64
  108:  		EndIf
  110:  	EndIf
  118:  EndIf
  120:  Call  ChooseNextTarget  ( .Iter:Next *Var0 )
  134:  If  *Var0  !=  FFFFFFFF
  144:  	Goto  0
  150:  EndIf
  158:  If  *Flag[00]  ==  .False
  168:  	Set   *Flag[00]  .True
  178:  	Call  SetBattleVar  ( 00000002 FFFFFFFF )
  18C:  	Goto  A
  198:  EndIf
  1A0:  Call  CountPlayerTargets    ( .Actor:Self 00008002 *Var0 )
  1B8:  If  *Var0  ==  00000001
  1C8:  	ExecWait  $Script_RMagikoopa_RunAway
  1D4:  	Return
  1DC:  EndIf
  1E4:  Call  GetActorFlags ( .Actor:Self *Var0 )
  1F8:  If  *Var0  &  00000200
  208:  	ExecWait  $Script_RMagikoopa_ShapeSpell
  214:  Else
  21C:  	ExecWait  $Script_RMagikoopa_WandStrike
  228:  EndIf
  230:  Return
  238:  Label  64
  244:  Call  UseIdleAnimation  ( .Actor:Self .False )
  258:  Call  EnableIdleScript  ( .Actor:Self 00000000 )
  26C:  Call  SetTargetActor    ( .Actor:Self .Actor:Player )
  280:  Call  UseBattleCamPreset    ( 0000000E )
  290:  Call  BattleCamTargetActor  ( .Actor:Self )
  2A0:  Call  MoveBattleCamOver (  15` )
  2B0:  Wait  15`
  2BC:  Call  GetActorFlags     ( .Actor:Self *Var0 )
  2D0:  If  *Var0  !&  00000200
  2E0:  	Call  SetAnimation  ( .Actor:Self 00000001 00560102 )
  2F8:  Else
  300:  	Call  SetAnimation  ( .Actor:Self 00000002 00570102 )
  318:  EndIf
  320:  Wait  5`
  32C:  Call  PlaySoundAtActor  ( .Actor:Self .Sound:SpellCast1 )
  340:  Call  GetActorFlags     ( .Actor:Self *Var0 )
  354:  If  *Var0  !&  00000200
  364:  	Call  GetActorPos       ( .Actor:Self *Var0 *Var1 *Var2 )
  380:  	Call  GetStatusFlags    ( .Actor:Self *VarA )
  394:  	If  *VarA  &  ~Flags:StatusFlags:Shrink % 80000
  3A4:  		Sub   *Var0  00000006
  3B4:  		Add   *Var1  0000000C
  3C4:  		Sub   *Var2  00000002
  3D4:  		Call  PlayEffect    ( ~FX:RadialFlowOut:YellowEnergy *Var0 *Var1 *Var2 *Fixed[0.12] 0000001E 00000000 00000000 00000000 00000000 00000000 00000000 00000000 )
  418:  	Else
  420:  		Sub   *Var0  00000010
  430:  		Add   *Var1  0000001F
  440:  		Sub   *Var2  00000002
  450:  		Call  PlayEffect    ( ~FX:RadialFlowOut:YellowEnergy *Var0 *Var1 *Var2 *Fixed[0.3] 0000001E 00000000 00000000 00000000 00000000 00000000 00000000 00000000 )
  494:  	EndIf
  49C:  Else
  4A4:  	Call  GetActorPos       ( .Actor:Self *Var0 *Var1 *Var2 )
  4C0:  	Call  GetStatusFlags    ( .Actor:Self *VarA )
  4D4:  	If  *VarA  &  ~Flags:StatusFlags:Shrink % 80000
  4E4:  		Sub   *Var0  0000000C
  4F4:  		Add   *Var1  0000000E
  504:  		Sub   *Var2  00000002
  514:  		Call  PlayEffect    ( ~FX:RadialFlowOut:YellowEnergy *Var0 *Var1 *Var2 *Fixed[0.12] 0000001E 00000000 00000000 00000000 00000000 00000000 00000000 00000000 )
  558:  	Else
  560:  		Sub   *Var0  0000001E
  570:  		Add   *Var1  00000024
  580:  		Sub   *Var2  00000002
  590:  		Call  PlayEffect    ( ~FX:RadialFlowOut:YellowEnergy *Var0 *Var1 *Var2 *Fixed[0.3] 0000001E 00000000 00000000 00000000 00000000 00000000 00000000 00000000 )
  5D4:  	EndIf
  5DC:  EndIf
  5E4:  Wait  30`
  5F0:  Call  GetActorFlags ( .Actor:Self *Var0 )
  604:  If  *Var0  !&  00000200
  614:  	Call  SetAnimation  ( .Actor:Self 00000001 00560101 )
  62C:  Else
  634:  	Call  SetAnimation  ( .Actor:Self 00000002 00570101 )
  64C:  EndIf
  654:  Wait  5`
  660:  Thread
  668:  	Wait  10`
  674:  	Call  PlaySoundAtActor  ( *Var8 000002DD )
  688:  EndThread
  690:  Thread
  698:  	Call  8026BF48      ( 00000001 )
  6A8:  	Call  BoostAttack   ( *Var8 00000001 )
  6BC:  	Call  8026BF48      ( 00000000 )
  6CC:  EndThread
  6D4:  Call  WaitForBuffDone ( )
  6E0:  Call  UseBattleCamPreset    ( 00000002 )
  6F0:  Wait  10`
  6FC:  Call  YieldTurn ( )
  708:  Call  EnableIdleScript      ( .Actor:Self 00000001 )
  71C:  Call  UseIdleAnimation      ( .Actor:Self .True )
  730:  Return
  738:  End
}

% Origin: HINT
#new:DefenseTable $DefenseTable_80227860
{
	.Element:Normal 00000000
	.Element:End
}

#new:DefenseTable $DefenseTable_8022786C
{
	.Element:Normal 00000000
	.Element:End
}

% Origin: HINT
#new:StatusTable $StatusTable_80227878
{
	.Status:Normal      0`
	.Status:Default     0`
	.Status:Sleep      50`
	.Status:Poison     50`
	.Status:Frozen      0`
	.Status:Dizzy      75`
	.Status:Fear        0`
	.Status:Static     50`
	.Status:Paralyze   75`
	.Status:Shrink     80`
	.Status:Stop       90`
	.Status:DefaultTurnMod    0`
	.Status:SleepTurnMod      0`
	.Status:PoisonTurnMod     0`
	.Status:FrozenTurnMod     0`
	.Status:DizzyTurnMod      0`
	.Status:FearTurnMod       0`
	.Status:StaticTurnMod     0`
	.Status:ParalyzeTurnMod   0`
	.Status:ShrinkTurnMod     0`
	.Status:StopTurnMod      -1`
	.Status:End
}

#new:StatusTable $StatusTable_80227924
{
	.Status:Normal      0`
	.Status:Default     0`
	.Status:Sleep      50`
	.Status:Poison     50`
	.Status:Frozen      0`
	.Status:Dizzy     100`
	.Status:Fear        0`
	.Status:Static     50`
	.Status:Paralyze   75`
	.Status:Shrink     80`
	.Status:Stop       90`
	.Status:DefaultTurnMod    0`
	.Status:SleepTurnMod      0`
	.Status:PoisonTurnMod     0`
	.Status:FrozenTurnMod     0`
	.Status:DizzyTurnMod      0`
	.Status:FearTurnMod       0`
	.Status:StaticTurnMod     0`
	.Status:ParalyzeTurnMod   0`
	.Status:ShrinkTurnMod     0`
	.Status:StopTurnMod      -1`
	.Status:End
}

% Origin: HINT
#new:PartsTable $PartsTable_802279D0
{
	00800000 01000000 022300FF $IdleAnimations_80227AB0 $DefenseTable_80227860 00000000 00000000 FBF40000 00000000
}

#new:PartsTable $PartsTable_802279F4
{
	00020001 01000000 022300FF $IdleAnimations_80227AB0 $DefenseTable_8022786C 00000000 00000000 FBF40000 00000000
	00800000 02000000 F62300FF $IdleAnimations_80227AFC $DefenseTable_8022786C 00800000 00000000 00F80000 00000000
	00020001 03000000 000000FF $IdleAnimations_80227B48 $DefenseTable_8022786C 00000000 00000000 00000000 00000000
}

% Origin: HINT
#new:Actor $GRNMagikoopa
{
	% stats
	[Index]        53b
	[Level]        21`b
	[MaxHP]        11`b
	[Coins]         2`b
	[Flags]       00000000
	[StatusTable] $StatusTable_80227878
	% ai
	[PartsCount]    1`s
	[PartsTable]  $PartsTable_802279D0
	[Script]      $Script_Init_80229C98
	% move effectiveness
	[Escape]       40`b
	[Item]         40`b
	[AirLift]      80`b
	[Hurricane]    70`b % Bow's "Spook" as well
	[UpAndAway]    95`b
	[PowerBounce]  75`b
	[SpinSmash]     0`b % weight (0-4)
	% ui positions
	[Size]         36`b  40`b % width height
	[HealthBar]     0`b   0`b % dx dy
	[StatusTurn]  -10`b  20`b % dx dy
	[StatusIcon]   10`b  32`b % dx dy
}

#new:Actor $FlyingGRNMagikoopa
{
	% stats
	[Index]        54b
	[Level]        21`b
	[MaxHP]        11`b
	[Coins]         2`b
	[Flags]       00000200
	[StatusTable] $StatusTable_80227924
	% ai
	[PartsCount]    3`s
	[PartsTable]  $PartsTable_802279F4
	[Script]      $Script_Init_80229D3C
	% move effectiveness
	[Escape]       40`b
	[Item]         40`b
	[AirLift]      95`b
	[Hurricane]    75`b % Bow's "Spook" as well
	[UpAndAway]    95`b
	[PowerBounce]  75`b
	[SpinSmash]     0`b % weight (0-4)
	% ui positions
	[Size]         48`b  40`b % width height
	[HealthBar]     0`b   0`b % dx dy
	[StatusTurn]  -25`b  20`b % dx dy
	[StatusIcon]    1`b  34`b % dx dy
}

% Origin: HINT
#new:IdleAnimations $IdleAnimations_80227AB0
{
	.Status:Normal    00560401
	.Status:Stone     00560400
	.Status:Sleep     00560408
	.Status:Poison    00560401
	.Status:Stop      00560400
	.Status:Static    00560401
	.Status:Paralyze  00560400
	.Status:Dizzy     00560407
	.Status:Fear      00560407
	.Status:End
}

#new:IdleAnimations $IdleAnimations_80227AFC
{
	.Status:Normal    00570401
	.Status:Stone     00570400
	.Status:Sleep     00570408
	.Status:Poison    00570401
	.Status:Stop      00570400
	.Status:Static    00570401
	.Status:Paralyze  00570400
	.Status:Dizzy     00570407
	.Status:Fear      00570407
	.Status:End
}

#new:IdleAnimations $IdleAnimations_80227B48
{
	.Status:Normal    0057040A
	.Status:End
}

% Origin: HINT
#new:Script $Script_Idle_80227B54
{
    0:  Return
    8:  End
}

% Origin: HINT
#new:Script $Script_HandleEvent_80227B64
{
    0:  Call  UseIdleAnimation  ( .Actor:Self .False )
   14:  Call  EnableIdleScript  ( .Actor:Self 00000000 )
   28:  Call  GetLastEvent      ( .Actor:Self *Var0 )
   3C:  Switch  *Var0
   48:  	CaseOR  ==  .Event:HitCombo % 9
   54:  	CaseOR  ==  .Event:Hit % A
   60:  		SetConst  *Var0  00000001
   70:  		SetConst  *Var1  00560404
   80:  		ExecWait  DoNormalHit
   8C:  	EndCaseGroup
   94:  	Case  ==  .Event:BurnHit % E
   A0:  		SetConst  *Var0  00000001
   B0:  		SetConst  *Var1  00560405
   C0:  		SetConst  *Var2  00560406
   D0:  		ExecWait  DoBurnHit
   DC:  	Case  ==  .Event:BurnDeath % 24
   E8:  		SetConst  *Var0  00000001
   F8:  		SetConst  *Var1  00560405
  108:  		SetConst  *Var2  00560406
  118:  		ExecWait  DoBurnHit
  124:  		SetConst  *Var0  00000001
  134:  		SetConst  *Var1  00560406
  144:  		ExecWait  DoDeath
  150:  		Return
  158:  	Case  ==  .Event:SpinSmashHit % B
  164:  		SetConst  *Var0  00000001
  174:  		SetConst  *Var1  00560404
  184:  		ExecWait  DoSpinSmashHit
  190:  	Case  ==  .Event:SpinSmashDeath % 21
  19C:  		SetConst  *Var0  00000001
  1AC:  		SetConst  *Var1  00560404
  1BC:  		ExecWait  DoSpinSmashHit
  1C8:  		SetConst  *Var0  00000001
  1D8:  		SetConst  *Var1  00560404
  1E8:  		ExecWait  DoDeath
  1F4:  		Return
  1FC:  	CaseOR  ==  00000017 % 17
  208:  	CaseOR  ==  .Event:Immune % 19
  214:  	CaseOR  ==  .Event:AirLiftFailed % 1F
  220:  		SetConst  *Var0  00000001
  230:  		SetConst  *Var1  00560401
  240:  		ExecWait  DoImmune
  24C:  	EndCaseGroup
  254:  	Case  ==  .Event:Death % 20
  260:  		SetConst  *Var0  00000001
  270:  		SetConst  *Var1  00560404
  280:  		ExecWait  DoNormalHit
  28C:  		Wait  10`
  298:  		SetConst  *Var0  00000001
  2A8:  		SetConst  *Var1  00560404
  2B8:  		ExecWait  DoDeath
  2C4:  		Return
  2CC:  	Case  ==  .Event:RecoverStatus % 31
  2D8:  		SetConst  *Var0  00000001
  2E8:  		SetConst  *Var1  00560401
  2F8:  		ExecWait  DoRecover
  304:  	Case  ==  .Event:ScareAway % 39
  310:  		Call  SetAnimation  ( .Actor:Self 00000001 00560404 )
  328:  		Call  SetActorJumpGravity   ( .Actor:Self *Fixed[1.5] )
  33C:  		Call  GetActorPos   ( .Actor:Self *Var0 *Var1 *Var2 )
  358:  		Call  SetGoalPos    ( .Actor:Self *Var0 *Var1 *Var2 )
  374:  		Call  JumpToGoal    ( .Actor:Self  15` .False .True .False )
  394:  		Wait  15`
  3A0:  		Call  SetAnimation  ( .Actor:Self 00000001 00560402 )
  3B8:  		ExecWait  $Script_GRNMagikoopa_RunAway
  3C4:  		Return
  3CC:  	Case  ==  .Event:BeginAirLift % 3A
  3D8:  		SetConst  *Var0  00000001
  3E8:  		SetConst  *Var1  00560402
  3F8:  		ExecWait  DoAirLift
  404:  	Case  ==  .Event:BlowAway % 16
  410:  		Call  GetStatusFlags    ( .Actor:Self *Var0 )
  424:  		If  *Var0  !&  ~Flags:StatusFlags:Sleep|Frozen|Fear|Paralyze|Dizzy|Stone|Stop % 35D000
  434:  			If  *Var0  &  ~Flags:StatusFlags:Shrink % 80000
  444:  				Call  SetPartDispOffset ( .Actor:Self 00000001 00000000 00000002 00000000 )
  464:  			Else
  46C:  				Call  SetPartDispOffset ( .Actor:Self 00000001 FFFFFFFC 00000005 00000000 )
  48C:  			EndIf
  494:  		EndIf
  49C:  		SetConst  *Var0  00000001
  4AC:  		SetConst  *Var1  00560404
  4BC:  		ExecWait  DoBlowAway
  4C8:  		Return
  4D0:  	Default
  4D8:  EndSwitch
  4E0:  Call  EnableIdleScript  ( .Actor:Self 00000001 )
  4F4:  Call  UseIdleAnimation  ( .Actor:Self .True )
  508:  Return
  510:  End
}

#new:Script $Script_8022807C
{
    0:  Call  GetBattleFlags    ( *Var0 )
   10:  If  *Var0  !&  00080000
   20:  	If  *Var0  &  00000240
   30:  		Call  SetActorVar   ( .Actor:Self 00000000 00000001 )
   48:  	EndIf
   50:  Else
   58:  	Call  $Function_80218A28    ( *Var0 )
   68:  	Switch  *Var0
   74:  		CaseOR  ==  00000083
   80:  		CaseOR  ==  00000084
   8C:  		CaseOR  ==  00000085
   98:  		CaseOR  ==  00000088
   A4:  			Call  GetBattleFlags    ( *Var0 )
   B4:  			If  *Var0  &  00000240
   C4:  				Call  SetActorVar   ( .Actor:Self 00000000 00000001 )
   DC:  			EndIf
   E4:  		EndCaseGroup
   EC:  	EndSwitch
   F4:  EndIf
   FC:  Return
  104:  End
}

#new:Script $Script_80228188
{
    0:  Call  GetActorVar   ( .Actor:Self 00000000 *Var0 )
   18:  If  *Var0  ==  00000001
   28:  	Call  SetAnimation  ( .Actor:Self 00000001 00560404 )
   40:  	Goto  0
   4C:  EndIf
   54:  Call  GetLastElement    ( *Var0 )
   64:  If  *Var0  &  00000400
   74:  	Call  SetAnimation  ( .Actor:Self 00000001 00560404 )
   8C:  	Goto  0
   98:  EndIf
   A0:  Return
   A8:  Label  0
   B4:  Call  8027D32C  ( FFFFFF81 )
   C4:  Call  GetStatusFlags    ( .Actor:Self *Var0 )
   D8:  If  *Var0  &  ~Flags:StatusFlags:Shrink % 80000
   E8:  	Call  SetPartScale  ( .Actor:Self 00000003 *Fixed[0.4] *Fixed[0.4] *Fixed[0.4] )
  108:  EndIf
  110:  Call  SetPartFlagBits   ( .Actor:Self 00000001 00800000 .True )
  12C:  Call  SetPartFlagBits   ( .Actor:Self 00000001 00020001 .False )
  148:  Call  SetPartFlagBits   ( .Actor:Self 00000002 00020001 .True )
  164:  Call  SetPartFlagBits   ( .Actor:Self 00000002 00800000 .False )
  180:  Call  SetPartFlagBits   ( .Actor:Self 00000003 00100000 .True )
  19C:  Call  SetPartFlagBits   ( .Actor:Self 00000003 00000001 .False )
  1B8:  Call  GetActorPos       ( .Actor:Self *Var0 *Var1 *Var2 )
  1D4:  Sub   *Var2  00000001
  1E4:  Call  SetPartPos        ( .Actor:Self 00000003 *Var0 *Var1 *Var2 )
  204:  Call  PlaySoundAtActor  ( .Actor:Self 00000301 )
  218:  Call  GetActorPos       ( .Actor:Self *Var0 *Var1 *Var2 )
  234:  Set   *Var1  00000000
  244:  Call  SetActorJumpGravity   ( .Actor:Self *Fixed[0.8] )
  258:  Call  SetGoalPos        ( .Actor:Self *Var0 *Var1 *Var2 )
  274:  Call  JumpToGoal        ( .Actor:Self  15` .False .True .False )
  294:  Call  $Function_80218B20    ( 00000096 0000000A )
  2A8:  Thread
  2B0:  	Call  ShakeCam  ( .Cam:Battle 00000000  5` *Fixed[0.7] )
  2CC:  EndThread
  2D4:  Call  GetLastEvent  ( .Actor:Self *Var3 )
  2E8:  If  *Var3  ==  0000000F % F
  2F8:  	Call  SetAnimation  ( .Actor:Self 00000001 00560404 )
  310:  	Call  GetActorPos   ( .Actor:Self *Var3 *Var4 *Var5 )
  32C:  	Add   *Var4  0000000A
  33C:  	Add   *Var5  00000005
  34C:  	Call  PlayEffect    ( ~FX:SmokeBurst:Black *Var3 *Var4 *Var5 *Fixed[1.0] 0000000A 00000000 00000000 00000000 00000000 00000000 00000000 00000000 )
  390:  EndIf
  398:  Call  SetGoalPos    ( .Actor:Self *Var0 *Var1 *Var2 )
  3B4:  Call  JumpToGoal    ( .Actor:Self  10` .False .True .False )
  3D4:  Call  SetGoalPos    ( .Actor:Self *Var0 *Var1 *Var2 )
  3F0:  Call  JumpToGoal    ( .Actor:Self  5` .False .True .False )
  410:  Loop  00000014
  41C:  	Call  SetPartFlagBits   ( .Actor:Self 00000003 00000001 .True )
  438:  	Wait  1`
  444:  	Call  SetPartFlagBits   ( .Actor:Self 00000003 00000001 .False )
  460:  	Wait  1`
  46C:  EndLoop
  474:  Call  SetPartFlagBits   ( .Actor:Self 00000003 00000001 .True )
  490:  Call  SetAnimation      ( .Actor:Self 00000001 00560401 )
  4A8:  Call  SetActorFlagBits  ( .Actor:Self 00000200 .False )
  4C0:  Call  BindHandleEvent   ( .Actor:Self $Script_HandleEvent_80227B64 )
  4D4:  Call  SetActorType      ( .Actor:Self 00000053 )
  4E8:  Call  SetStatusTable    ( .Actor:Self $StatusTable_80227878 )
  4FC:  Call  $Function_80218A54    ( FFFFFFF6 00000014 0000000A 00000020 )
  518:  Call  SetActorFlagBits  ( .Actor:Self 00001000 .True )
  530:  Call  ResetAllActorSounds   ( .Actor:Self )
  540:  Call  GetIndexFromPos   ( .Actor:Self *Var0 )
  554:  Mod   *Var0  00000004
  564:  Call  SetGoalToIndex    ( .Actor:Self *Var0 )
  578:  Call  SetActorSpeed     ( .Actor:Self *Fixed[4.0] )
  58C:  Call  RunToGoal ( .Actor:Self  0` .False )
  5A4:  Call  GetGoalPos        ( .Actor:Self *Var0 *Var1 *Var2 )
  5C0:  Call  ForceHomePos      ( .Actor:Self *Var0 *Var1 *Var2 )
  5DC:  Call  HPBarToHome       ( .Actor:Self )
  5EC:  Return
  5F4:  End
}

#new:Script $Script_HandleEvent_80228784
{
    0:  Call  UseIdleAnimation  ( .Actor:Self .False )
   14:  Call  EnableIdleScript  ( .Actor:Self 00000000 )
   28:  Call  GetLastEvent      ( .Actor:Self *Var0 )
   3C:  Switch  *Var0
   48:  	Case  ==  .Event:HitCombo % 9
   54:  		ExecWait  $Script_8022807C
   60:  		SetConst  *Var0  00000002
   70:  		SetConst  *Var1  00570404
   80:  		ExecWait  DoNormalHit
   8C:  	CaseOR  ==  .Event:Hit % A
   98:  	CaseOR  ==  .Event:FallTrigger % C
   A4:  		ExecWait  $Script_8022807C
   B0:  		SetConst  *Var0  00000002
   C0:  		SetConst  *Var1  00570404
   D0:  		ExecWait  DoNormalHit
   DC:  		ExecWait  $Script_80228188
   E8:  	EndCaseGroup
   F0:  	CaseOR  ==  .Event:BurnHit % E
   FC:  	CaseOR  ==  0000000F % F
  108:  		ExecWait  $Script_8022807C
  114:  		SetConst  *Var0  00000002
  124:  		SetConst  *Var1  00570405
  134:  		SetConst  *Var2  00570406
  144:  		ExecWait  DoBurnHit
  150:  		ExecWait  $Script_80228188
  15C:  	EndCaseGroup
  164:  	Case  ==  .Event:BurnDeath % 24
  170:  		SetConst  *Var0  00000002
  180:  		SetConst  *Var1  00570405
  190:  		SetConst  *Var2  00570406
  1A0:  		ExecWait  DoBurnHit
  1AC:  		SetConst  *Var0  00000002
  1BC:  		SetConst  *Var1  00570406
  1CC:  		ExecWait  DoDeath
  1D8:  		Return
  1E0:  	Case  ==  .Event:SpinSmashHit % B
  1EC:  		SetConst  *Var0  00000002
  1FC:  		SetConst  *Var1  00570404
  20C:  		ExecWait  DoSpinSmashHit
  218:  	Case  ==  .Event:SpinSmashDeath % 21
  224:  		SetConst  *Var0  00000002
  234:  		SetConst  *Var1  00570404
  244:  		ExecWait  DoSpinSmashHit
  250:  		SetConst  *Var0  00000002
  260:  		SetConst  *Var1  00570404
  270:  		ExecWait  DoDeath
  27C:  		Return
  284:  	CaseOR  ==  00000017 % 17
  290:  	CaseOR  ==  .Event:Immune % 19
  29C:  	CaseOR  ==  .Event:AirLiftFailed % 1F
  2A8:  		SetConst  *Var0  00000002
  2B8:  		SetConst  *Var1  00570401
  2C8:  		ExecWait  DoImmune
  2D4:  	EndCaseGroup
  2DC:  	Case  ==  .Event:Death % 20
  2E8:  		SetConst  *Var0  00000002
  2F8:  		SetConst  *Var1  00570404
  308:  		ExecWait  DoNormalHit
  314:  		Wait  10`
  320:  		SetConst  *Var0  00000002
  330:  		SetConst  *Var1  00570404
  340:  		ExecWait  DoDeath
  34C:  		Return
  354:  	Case  ==  .Event:BeginFirstStrike % 38
  360:  		Call  SetActorPos       ( .Actor:Self  20`  0`  0` )
  37C:  		Call  HPBarToCurrent    ( .Actor:Self )
  38C:  	Case  ==  .Event:EndFirstStrike % 35
  398:  		Call  SetAnimation  ( .Actor:Self 00000002 00570401 )
  3B0:  		Call  SetGoalToHome ( .Actor:Self )
  3C0:  		Call  SetActorSpeed ( .Actor:Self *Fixed[4.0] )
  3D4:  		Call  FlyToGoal     ( .Actor:Self  0`  1` .Easing:Linear )
  3F0:  		Call  SetAnimation  ( .Actor:Self 00000002 00570401 )
  408:  		Call  HPBarToHome   ( .Actor:Self )
  418:  	Case  ==  .Event:RecoverStatus % 31
  424:  		SetConst  *Var0  00000002
  434:  		SetConst  *Var1  00570401
  444:  		ExecWait  DoRecover
  450:  	Case  ==  .Event:ScareAway % 39
  45C:  		Call  SetAnimation  ( .Actor:Self 00000002 00570404 )
  474:  		Call  SetActorJumpGravity   ( .Actor:Self *Fixed[1.5] )
  488:  		Call  GetActorPos   ( .Actor:Self *Var0 *Var1 *Var2 )
  4A4:  		Call  SetGoalPos    ( .Actor:Self *Var0 *Var1 *Var2 )
  4C0:  		Call  JumpToGoal    ( .Actor:Self  15` .False .True .False )
  4E0:  		Wait  15`
  4EC:  		Call  SetAnimation  ( .Actor:Self 00000002 00570402 )
  504:  		ExecWait  $Script_GRNMagikoopa_RunAway
  510:  		Return
  518:  	Case  ==  .Event:BeginAirLift % 3A
  524:  		SetConst  *Var0  00000002
  534:  		SetConst  *Var1  00570402
  544:  		ExecWait  DoAirLift
  550:  	Case  ==  .Event:BlowAway % 16
  55C:  		Call  GetStatusFlags    ( .Actor:Self *Var0 )
  570:  		If  *Var0  !&  ~Flags:StatusFlags:Sleep|Frozen|Fear|Paralyze|Dizzy|Stone|Stop % 35D000
  580:  			If  *Var0  &  ~Flags:StatusFlags:Shrink % 80000
  590:  				Call  SetPartDispOffset ( .Actor:Self 00000002 FFFFFFFD 00000000 00000000 )
  5B0:  			Else
  5B8:  				Call  SetPartDispOffset ( .Actor:Self 00000002 FFFFFFF1 00000000 00000000 )
  5D8:  			EndIf
  5E0:  		EndIf
  5E8:  		SetConst  *Var0  00000002
  5F8:  		SetConst  *Var1  00570404
  608:  		ExecWait  DoBlowAway
  614:  		Return
  61C:  	Default
  624:  EndSwitch
  62C:  Call  EnableIdleScript  ( .Actor:Self 00000001 )
  640:  Call  UseIdleAnimation  ( .Actor:Self .True )
  654:  Return
  65C:  End
}

% Origin: HINT
#new:Script $Script_GRNMagikoopa_ShapeSpell
{
    0:  Call  UseIdleAnimation  ( .Actor:Self .False )
   14:  Call  EnableIdleScript  ( .Actor:Self 00000000 )
   28:  Call  SetTargetActor    ( .Actor:Self .Actor:Player )
   3C:  Call  GetBattlePhase    ( *Var0 )
   4C:  If  *Var0  ==  00000001
   5C:  	Call  UseBattleCamPreset    ( 00000002 )
   6C:  	Call  MoveBattleCamOver     (  1` )
   7C:  Else
   84:  	Call  UseBattleCamPreset    ( 00000002 )
   94:  	Call  MoveBattleCamOver     (  10` )
   A4:  EndIf
   AC:  Call  PlaySoundAtActor  ( .Actor:Self .Sound:SpellCast1 )
   C0:  Call  GetActorPos       ( .Actor:Self *Var0 *Var1 *Var2 )
   DC:  Call  GetStatusFlags    ( .Actor:Self *VarA )
   F0:  If  *VarA  &  ~Flags:StatusFlags:Shrink % 80000
  100:  	Sub   *Var0  0000000C
  110:  	Add   *Var1  0000000E
  120:  Else
  128:  	Sub   *Var0  0000001E
  138:  	Add   *Var1  00000024
  148:  EndIf
  150:  Call  PlayEffect        ( ~FX:GatherMagic:Pink *Var0 *Var1 *Var2 *Fixed[0.5] 0000001E 00000000 00000000 00000000 00000000 00000000 00000000 00000000 )
  194:  Call  SetAnimation      ( .Actor:Self 00000002 00570402 )
  1AC:  Wait  30`
  1B8:  Call  EnemyTestTarget   ( .Actor:Self *Var0 ~Flags:DamageType:0 00000000 00000001 00000010 )
  1DC:  Switch  *Var0
  1E8:  	CaseOR  ==  .HitResult:Miss % 6
  1F4:  	CaseOR  ==  .HitResult:Lucky % 5
  200:  		Set   *VarA  *Var0
  210:  		Call  PlaySoundAtActor  ( .Actor:Self .Sound:SpellCast2 )
  224:  		Call  SetAnimation      ( .Actor:Self 00000002 00570403 )
  23C:  		Wait  5`
  248:  		Call  GetActorPos       ( .Actor:Self *Var0 *Var1 *Var2 )
  264:  		Call  GetStatusFlags    ( .Actor:Self *Var9 )
  278:  		If  *Var9  &  ~Flags:StatusFlags:Shrink % 80000
  288:  			Sub   *Var0  00000008
  298:  			Add   *Var1  00000008
  2A8:  		Else
  2B0:  			Sub   *Var0  00000014
  2C0:  			Add   *Var1  00000014
  2D0:  		EndIf
  2D8:  		Call  SetGoalToTarget       ( .Actor:Self )
  2E8:  		Call  GetGoalPos    ( .Actor:Self *Var3 *Var4 *Var5 )
  304:  		Sub   *Var3  00000032
  314:  		Set   *Var4  00000000
  324:  		Call  $Function_802188D0    ( *Var0 *Var1 *Var5 *Var3 *Var4 *Var5 00000019 )
  34C:  		Wait  50`
  358:  		If  *VarA  ==  .HitResult:Lucky % 5
  368:  			Call  EnemyTestTarget   ( .Actor:Self *Var0 ~Flags:DamageType:TriggerLucky 00000000 00000000 00000000 )
  38C:  		EndIf
  394:  		Wait  14`
  3A0:  		Call  YieldTurn ( )
  3AC:  		Call  AddActorDecoration    ( .Actor:Self 00000002 00000000 .Decoration:Sweat )
  3C8:  		Wait  30`
  3D4:  		Call  RemoveActorDecoration ( .Actor:Self 00000002 00000000 )
  3EC:  		Call  EnableIdleScript      ( .Actor:Self 00000001 )
  400:  		Call  UseIdleAnimation      ( .Actor:Self .True )
  414:  		Return
  41C:  	EndCaseGroup
  424:  EndSwitch
  42C:  Call  PlaySoundAtActor  ( .Actor:Self .Sound:SpellCast2 )
  440:  Call  SetAnimation      ( .Actor:Self 00000002 00570403 )
  458:  Wait  5`
  464:  Call  GetActorPos       ( .Actor:Self *Var0 *Var1 *Var2 )
  480:  Call  GetStatusFlags    ( .Actor:Self *VarA )
  494:  If  *VarA  &  ~Flags:StatusFlags:Shrink % 80000
  4A4:  	Sub   *Var0  00000008
  4B4:  	Add   *Var1  00000008
  4C4:  Else
  4CC:  	Sub   *Var0  00000014
  4DC:  	Add   *Var1  00000014
  4EC:  EndIf
  4F4:  Call  SetGoalToTarget   ( .Actor:Self )
  504:  Call  GetGoalPos        ( .Actor:Self *Var3 *Var4 *Var5 )
  520:  Sub   *Var3  0000000A
  530:  Call  $Function_802188D0    ( *Var0 *Var1 *Var5 *Var3 *Var4 *Var5 00000014 )
  558:  Wait  18`
  564:  Wait  2`
  570:  Call  EnemyDamageTarget ( .Actor:Self *Var0 ~Flags:DamageType:NoContact|Magic 00000000 00000000 00000003 00000020 )
  598:  Switch  *Var0
  5A4:  	CaseOR  ==  .HitResult:Hit % 0
  5B0:  	CaseOR  ==  .HitResult:QuakeImmune % 2
  5BC:  		Wait  19`
  5C8:  		Call  YieldTurn ( )
  5D4:  	EndCaseGroup
  5DC:  EndSwitch
  5E4:  Call  EnableIdleScript  ( .Actor:Self 00000001 )
  5F8:  Call  UseIdleAnimation  ( .Actor:Self .True )
  60C:  Return
  614:  End
}

% Origin: HINT
#new:Script $Script_GRNMagikoopa_WandStrike
{
    0:  Call  UseIdleAnimation  ( .Actor:Self .False )
   14:  Call  EnableIdleScript  ( .Actor:Self 00000000 )
   28:  Call  SetTargetActor    ( .Actor:Self .Actor:Player )
   3C:  Call  UseBattleCamPreset    ( 0000003F )
   4C:  Call  BattleCamTargetActor  ( .Actor:Self )
   5C:  Call  8024ECF8  ( FFFFFFFF 00000001 00000000 )
   74:  Call  PlaySoundAtActor  ( .Actor:Self 000002DB )
   88:  Thread
   90:  	Call  SetAnimation  ( .Actor:Self 00000001 00560402 )
   A8:  	Set   *Var0  000000C8
   B8:  	Loop  00000014
   C4:  		Sub   *Var0  0000000A
   D4:  		Call  SetPartAlpha  ( .Actor:Self 00000001 *Var0 )
   EC:  		Wait  1`
   F8:  	EndLoop
  100:  EndThread
  108:  Wait  10`
  114:  Call  SetGoalToTarget   ( .Actor:Self )
  124:  Call  GetGoalPos        ( .Actor:Self *Var0 *Var1 *Var2 )
  140:  Call  GetStatusFlags    ( .Actor:Self *VarA )
  154:  If  *VarA  &  ~Flags:StatusFlags:Shrink % 80000
  164:  	Add   *Var0  00000005
  174:  Else
  17C:  	Add   *Var0  00000019
  18C:  EndIf
  194:  Set   *Var1  00000000
  1A4:  Call  SetGoalPos    ( .Actor:Self *Var0 *Var1 *Var2 )
  1C0:  Call  FlyToGoal     ( .Actor:Self  30`  0` .Easing:CosInOut )
  1DC:  Set   *Var0  00000037
  1EC:  Loop  00000014
  1F8:  	Add   *Var0  0000000A
  208:  	Call  SetPartAlpha  ( .Actor:Self 00000001 *Var0 )
  220:  	Wait  1`
  22C:  EndLoop
  234:  Call  SetPartAlpha      ( .Actor:Self 00000001 000000FF )
  24C:  Call  SetAnimation      ( .Actor:Self 00000001 00560403 )
  264:  Wait  11`
  270:  Call  PlaySoundAtActor  ( .Actor:Self 000002DC )
  284:  Call  EnemyTestTarget   ( .Actor:Self *Var0 ~Flags:DamageType:0 00000000 00000001 00000010 )
  2A8:  Switch  *Var0
  2B4:  	CaseOR  ==  .HitResult:Miss % 6
  2C0:  	CaseOR  ==  .HitResult:Lucky % 5
  2CC:  		Set   *VarA  *Var0
  2DC:  		Call  UseBattleCamPreset    ( 00000002 )
  2EC:  		If  *VarA  ==  .HitResult:Lucky % 5
  2FC:  			Call  EnemyTestTarget   ( .Actor:Self *Var0 ~Flags:DamageType:TriggerLucky 00000000 00000000 00000000 )
  320:  		EndIf
  328:  		Wait  15`
  334:  		Set   *Var0  000000C8
  344:  		Loop  00000014
  350:  			Sub   *Var0  0000000A
  360:  			Call  SetPartAlpha  ( .Actor:Self 00000001 *Var0 )
  378:  			Wait  1`
  384:  		EndLoop
  38C:  		Call  YieldTurn ( )
  398:  		Call  SetGoalToHome ( .Actor:Self )
  3A8:  		Call  SetAnimation  ( .Actor:Self 00000001 00560401 )
  3C0:  		Call  FlyToGoal     ( .Actor:Self  30`  0` .Easing:CosInOut )
  3DC:  		Set   *Var0  00000037
  3EC:  		Loop  00000014
  3F8:  			Add   *Var0  0000000A
  408:  			Call  SetPartAlpha  ( .Actor:Self 00000001 *Var0 )
  420:  			Wait  1`
  42C:  		EndLoop
  434:  		Call  SetPartAlpha      ( .Actor:Self 00000001 000000FF )
  44C:  		Call  EnableIdleScript  ( .Actor:Self 00000001 )
  460:  		Call  UseIdleAnimation  ( .Actor:Self .True )
  474:  		Return
  47C:  	EndCaseGroup
  484:  EndSwitch
  48C:  Call  SetGoalToTarget   ( .Actor:Self )
  49C:  Wait  2`
  4A8:  Call  EnemyDamageTarget ( .Actor:Self *Var0 ~Flags:DamageType:NoContact 00000000 00000000 00000003 00000020 )
  4D0:  Switch  *Var0
  4DC:  	CaseOR  ==  .HitResult:Hit % 0
  4E8:  	CaseOR  ==  .HitResult:QuakeImmune % 2
  4F4:  		Call  UseBattleCamPreset    ( 00000002 )
  504:  		Wait  10`
  510:  		Set   *Var0  000000C8
  520:  		Loop  00000014
  52C:  			Sub   *Var0  0000000A
  53C:  			Call  SetPartAlpha  ( .Actor:Self 00000001 *Var0 )
  554:  			Wait  1`
  560:  		EndLoop
  568:  		Call  YieldTurn ( )
  574:  		Call  SetGoalToHome ( .Actor:Self )
  584:  		Call  SetAnimation  ( .Actor:Self 00000001 00560401 )
  59C:  		Call  FlyToGoal     ( .Actor:Self  20`  0` .Easing:CosInOut )
  5B8:  		Set   *Var0  00000037
  5C8:  		Loop  00000014
  5D4:  			Add   *Var0  0000000A
  5E4:  			Call  SetPartAlpha  ( .Actor:Self 00000001 *Var0 )
  5FC:  			Wait  1`
  608:  		EndLoop
  610:  		Call  SetPartAlpha  ( .Actor:Self 00000001 000000FF )
  628:  	EndCaseGroup
  630:  EndSwitch
  638:  Call  EnableIdleScript  ( .Actor:Self 00000001 )
  64C:  Call  UseIdleAnimation  ( .Actor:Self .True )
  660:  Return
  668:  End
}

% Origin: HINT
#new:Script $Script_GRNMagikoopa_RunAway
{
    0:  Call  UseIdleAnimation  ( .Actor:Self .False )
   14:  Call  EnableIdleScript  ( .Actor:Self 00000000 )
   28:  Call  8027D32C  ( FFFFFF81 )
   38:  Call  GetLastEvent      ( .Actor:Self *Var0 )
   4C:  If  *Var0  !=  .Event:ScareAway % 39
   5C:  	Call  UseBattleCamPreset    ( 0000000E )
   6C:  	Call  BattleCamTargetActor  ( .Actor:Self )
   7C:  	Call  MoveBattleCamOver     (  15` )
   8C:  	Wait  15`
   98:  	Call  UseBattleCamPreset    ( 00000001 )
   A8:  EndIf
   B0:  Call  SetActorSpeed ( .Actor:Self *Fixed[1.0] )
   C4:  Call  GetActorPos   ( .Actor:Self *Var0 *Var1 *Var2 )
   E0:  Add   *Var0  00000014
   F0:  Call  SetGoalPos    ( .Actor:Self *Var0 *Var1 *Var2 )
  10C:  Call  RunToGoal     ( .Actor:Self  0` .False )
  124:  Wait  10`
  130:  Call  SetActorYaw   ( .Actor:Self  180` )
  144:  Call  EnableActorBlur       ( .Actor:Self 00000001 )
  158:  Call  SetActorSpeed ( .Actor:Self *Fixed[10.0] )
  16C:  Call  GetActorPos   ( .Actor:Self *Var0 *Var1 *Var2 )
  188:  Add   *Var0  000000C8
  198:  Call  SetGoalPos    ( .Actor:Self *Var0 *Var1 *Var2 )
  1B4:  Call  RunToGoal     ( .Actor:Self  0` .False )
  1CC:  Call  YieldTurn ( )
  1D8:  Call  UseBattleCamPreset    ( 00000002 )
  1E8:  ExecWait  ForceNextTarget
  1F4:  Call  8027D32C      ( FFFFFF81 )
  204:  Call  RemoveActor   ( .Actor:Self )
  214:  Return
  21C:  End
}

% Origin: HINT
#new:Script $Script_Init_80229C98
{
    0:  Call  BindIdle      ( .Actor:Self $Script_Idle_80227B54 )
   14:  Call  BindTakeTurn  ( .Actor:Self $Script_TakeTurn_80229DE0 )
   28:  Call  BindHandleEvent   ( .Actor:Self $Script_HandleEvent_80227B64 )
   3C:  Call  GetBattleVar  ( 00000002 *Var0 )
   50:  If  *Var0  ==  00000000
   60:  	Call  SetBattleVar  ( 00000002 FFFFFFFF )
   74:  EndIf
   7C:  Call  SetActorVar   ( .Actor:Self 00000000 00000000 )
   94:  Return
   9C:  End
}

#new:Script $Script_Init_80229D3C
{
    0:  Call  BindIdle      ( .Actor:Self $Script_Idle_80227B54 )
   14:  Call  BindTakeTurn  ( .Actor:Self $Script_TakeTurn_80229DE0 )
   28:  Call  BindHandleEvent   ( .Actor:Self $Script_HandleEvent_80228784 )
   3C:  Call  GetBattleVar  ( 00000002 *Var0 )
   50:  If  *Var0  ==  00000000
   60:  	Call  SetBattleVar  ( 00000002 FFFFFFFF )
   74:  EndIf
   7C:  Call  SetActorVar   ( .Actor:Self 00000000 00000000 )
   94:  Return
   9C:  End
}

% Origin: HINT
#new:Script $Script_TakeTurn_80229DE0
{
    0:  Set   *Flag[00]  .False
   10:  Label  A
   1C:  Call  EnemyCreateTargetList ( 00008002 )
   2C:  Call  InitTargetIterator ( )
   38:  Label  0
   44:  Call  GetOwnerTarget    ( *Var0 *Var1 )
   58:  Call  GetIndexFromHome  ( *Var0 *Var1 )
   6C:  Call  GetBattleVar      ( 00000002 *Var2 )
   80:  If  *Var1  >  *Var2
   90:  	Call  $Function_80218B78    ( *Var0 *Var3 )
   A4:  	If  *Var3  ==  00000000
   B4:  		Call  GetActorDefenseBoost  ( *Var0 *Var4 )
   C8:  		If  *Var4  <  00000003
   D8:  			Set   *Var8  *Var0
   E8:  			Call  SetBattleVar  ( 00000002 *Var1 )
   FC:  			Goto  64
  108:  		EndIf
  110:  	EndIf
  118:  EndIf
  120:  Call  ChooseNextTarget  ( .Iter:Next *Var0 )
  134:  If  *Var0  !=  FFFFFFFF
  144:  	Goto  0
  150:  EndIf
  158:  If  *Flag[00]  ==  .False
  168:  	Set   *Flag[00]  .True
  178:  	Call  SetBattleVar  ( 00000002 FFFFFFFF )
  18C:  	Goto  A
  198:  EndIf
  1A0:  Call  CountPlayerTargets    ( .Actor:Self 00008002 *Var0 )
  1B8:  If  *Var0  ==  00000001
  1C8:  	ExecWait  $Script_GRNMagikoopa_RunAway
  1D4:  	Return
  1DC:  EndIf
  1E4:  Call  GetActorFlags ( .Actor:Self *Var0 )
  1F8:  If  *Var0  &  00000200
  208:  	ExecWait  $Script_GRNMagikoopa_ShapeSpell
  214:  Else
  21C:  	ExecWait  $Script_GRNMagikoopa_WandStrike
  228:  EndIf
  230:  Return
  238:  Label  64
  244:  Call  UseIdleAnimation  ( .Actor:Self .False )
  258:  Call  EnableIdleScript  ( .Actor:Self 00000000 )
  26C:  Call  SetTargetActor    ( .Actor:Self .Actor:Player )
  280:  Call  UseBattleCamPreset    ( 0000000E )
  290:  Call  BattleCamTargetActor  ( .Actor:Self )
  2A0:  Call  MoveBattleCamOver (  15` )
  2B0:  Wait  15`
  2BC:  Call  GetActorFlags     ( .Actor:Self *Var0 )
  2D0:  If  *Var0  !&  00000200
  2E0:  	Call  SetAnimation  ( .Actor:Self 00000001 00560402 )
  2F8:  Else
  300:  	Call  SetAnimation  ( .Actor:Self 00000002 00570402 )
  318:  EndIf
  320:  Wait  5`
  32C:  Call  PlaySoundAtActor  ( .Actor:Self .Sound:SpellCast1 )
  340:  Call  GetActorFlags     ( .Actor:Self *Var0 )
  354:  If  *Var0  !&  00000200
  364:  	Call  GetActorPos       ( .Actor:Self *Var0 *Var1 *Var2 )
  380:  	Call  GetStatusFlags    ( .Actor:Self *VarA )
  394:  	If  *VarA  &  ~Flags:StatusFlags:Shrink % 80000
  3A4:  		Sub   *Var0  00000006
  3B4:  		Add   *Var1  0000000C
  3C4:  		Sub   *Var2  00000002
  3D4:  		Call  PlayEffect    ( ~FX:RadialFlowOut:YellowEnergy *Var0 *Var1 *Var2 *Fixed[0.12] 0000001E 00000000 00000000 00000000 00000000 00000000 00000000 00000000 )
  418:  	Else
  420:  		Sub   *Var0  00000010
  430:  		Add   *Var1  0000001F
  440:  		Sub   *Var2  00000002
  450:  		Call  PlayEffect    ( ~FX:RadialFlowOut:YellowEnergy *Var0 *Var1 *Var2 *Fixed[0.3] 0000001E 00000000 00000000 00000000 00000000 00000000 00000000 00000000 )
  494:  	EndIf
  49C:  Else
  4A4:  	Call  GetActorPos       ( .Actor:Self *Var0 *Var1 *Var2 )
  4C0:  	Call  GetStatusFlags    ( .Actor:Self *VarA )
  4D4:  	If  *VarA  &  ~Flags:StatusFlags:Shrink % 80000
  4E4:  		Sub   *Var0  0000000C
  4F4:  		Add   *Var1  0000000E
  504:  		Sub   *Var2  00000002
  514:  		Call  PlayEffect    ( ~FX:RadialFlowOut:YellowEnergy *Var0 *Var1 *Var2 *Fixed[0.12] 0000001E 00000000 00000000 00000000 00000000 00000000 00000000 00000000 )
  558:  	Else
  560:  		Sub   *Var0  0000001E
  570:  		Add   *Var1  00000024
  580:  		Sub   *Var2  00000002
  590:  		Call  PlayEffect    ( ~FX:RadialFlowOut:YellowEnergy *Var0 *Var1 *Var2 *Fixed[0.3] 0000001E 00000000 00000000 00000000 00000000 00000000 00000000 00000000 )
  5D4:  	EndIf
  5DC:  EndIf
  5E4:  Wait  30`
  5F0:  Call  GetActorFlags ( .Actor:Self *Var0 )
  604:  If  *Var0  !&  00000200
  614:  	Call  SetAnimation  ( .Actor:Self 00000001 00560401 )
  62C:  Else
  634:  	Call  SetAnimation  ( .Actor:Self 00000002 00570401 )
  64C:  EndIf
  654:  Wait  5`
  660:  Thread
  668:  	Wait  10`
  674:  	Call  PlaySoundAtActor  ( *Var8 000002DD )
  688:  EndThread
  690:  Thread
  698:  	Call  8026BF48      ( 00000001 )
  6A8:  	Call  BoostDefense  ( *Var8 00000001 )
  6BC:  	Call  8026BF48      ( 00000000 )
  6CC:  EndThread
  6D4:  Call  WaitForBuffDone ( )
  6E0:  Call  UseBattleCamPreset    ( 00000002 )
  6F0:  Wait  10`
  6FC:  Call  YieldTurn ( )
  708:  Call  EnableIdleScript      ( .Actor:Self 00000001 )
  71C:  Call  UseIdleAnimation      ( .Actor:Self .True )
  730:  Return
  738:  End
}

#new:DefenseTable $DefenseTable_8022A520
{
	.Element:Normal 00000000
	.Element:End
}

% Origin: HINT
#new:DefenseTable $DefenseTable_8022A52C
{
	.Element:Normal 00000000
	.Element:End
}

#new:StatusTable $StatusTable_8022A538
{
	.Status:Normal      0`
	.Status:Default     0`
	.Status:Sleep      50`
	.Status:Poison     50`
	.Status:Frozen      0`
	.Status:Dizzy      75`
	.Status:Fear        0`
	.Status:Static     50`
	.Status:Paralyze   75`
	.Status:Shrink     80`
	.Status:Stop       90`
	.Status:DefaultTurnMod    0`
	.Status:SleepTurnMod      0`
	.Status:PoisonTurnMod     0`
	.Status:FrozenTurnMod     0`
	.Status:DizzyTurnMod      0`
	.Status:FearTurnMod       0`
	.Status:StaticTurnMod     0`
	.Status:ParalyzeTurnMod   0`
	.Status:ShrinkTurnMod     0`
	.Status:StopTurnMod      -1`
	.Status:End
}

% Origin: HINT
#new:StatusTable $StatusTable_8022A5E4
{
	.Status:Normal      0`
	.Status:Default     0`
	.Status:Sleep      50`
	.Status:Poison     50`
	.Status:Frozen      0`
	.Status:Dizzy     100`
	.Status:Fear        0`
	.Status:Static     50`
	.Status:Paralyze   75`
	.Status:Shrink     80`
	.Status:Stop       90`
	.Status:DefaultTurnMod    0`
	.Status:SleepTurnMod      0`
	.Status:PoisonTurnMod     0`
	.Status:FrozenTurnMod     0`
	.Status:DizzyTurnMod      0`
	.Status:FearTurnMod       0`
	.Status:StaticTurnMod     0`
	.Status:ParalyzeTurnMod   0`
	.Status:ShrinkTurnMod     0`
	.Status:StopTurnMod      -1`
	.Status:End
}

#new:PartsTable $PartsTable_8022A690
{
	00800000 01000000 022300FF $IdleAnimations_8022A770 $DefenseTable_8022A520 00000000 00000000 FBF40000 00000000
}

% Origin: HINT
#new:PartsTable $PartsTable_8022A6B4
{
	00020001 01000000 022300FF $IdleAnimations_8022A770 $DefenseTable_8022A52C 00000000 00000000 FBF40000 00000000
	00800000 02000000 F62300FF $IdleAnimations_8022A7BC $DefenseTable_8022A52C 00800000 00000000 00F80000 00000000
	00020001 03000000 000000FF $IdleAnimations_8022A808 $DefenseTable_8022A52C 00000000 00000000 00000000 00000000
}

#new:Actor $WMagikoopa
{
	% stats
	[Index]        59b
	[Level]        21`b
	[MaxHP]        11`b
	[Coins]         2`b
	[Flags]       00000000
	[StatusTable] $StatusTable_8022A538
	% ai
	[PartsCount]    1`s
	[PartsTable]  $PartsTable_8022A690
	[Script]      $Script_Init_8022C958
	% move effectiveness
	[Escape]       40`b
	[Item]         40`b
	[AirLift]      80`b
	[Hurricane]    70`b % Bow's "Spook" as well
	[UpAndAway]    95`b
	[PowerBounce]  80`b
	[SpinSmash]     0`b % weight (0-4)
	% ui positions
	[Size]         36`b  40`b % width height
	[HealthBar]     0`b   0`b % dx dy
	[StatusTurn]  -10`b  20`b % dx dy
	[StatusIcon]   10`b  32`b % dx dy
}

% Origin: HINT
#new:Actor $FlyingWMagikoopa
{
	% stats
	[Index]        5Ab
	[Level]        21`b
	[MaxHP]        11`b
	[Coins]         2`b
	[Flags]       00000200
	[StatusTable] $StatusTable_8022A5E4
	% ai
	[PartsCount]    3`s
	[PartsTable]  $PartsTable_8022A6B4
	[Script]      $Script_Init_8022C9BC
	% move effectiveness
	[Escape]       40`b
	[Item]         40`b
	[AirLift]      95`b
	[Hurricane]    75`b % Bow's "Spook" as well
	[UpAndAway]    95`b
	[PowerBounce]  80`b
	[SpinSmash]     0`b % weight (0-4)
	% ui positions
	[Size]         48`b  40`b % width height
	[HealthBar]     0`b   0`b % dx dy
	[StatusTurn]  -25`b  20`b % dx dy
	[StatusIcon]    1`b  34`b % dx dy
}

% Origin: HINT
#new:IdleAnimations $IdleAnimations_8022A770
{
	.Status:Normal    00560301
	.Status:Stone     00560300
	.Status:Sleep     00560308
	.Status:Poison    00560301
	.Status:Stop      00560300
	.Status:Static    00560301
	.Status:Paralyze  00560300
	.Status:Dizzy     00560307
	.Status:Fear      00560307
	.Status:End
}

% Origin: HINT
#new:IdleAnimations $IdleAnimations_8022A7BC
{
	.Status:Normal    00570301
	.Status:Stone     00570300
	.Status:Sleep     00570308
	.Status:Poison    00570301
	.Status:Stop      00570300
	.Status:Static    00570301
	.Status:Paralyze  00570300
	.Status:Dizzy     00570307
	.Status:Fear      00570307
	.Status:End
}

% Origin: HINT
#new:IdleAnimations $IdleAnimations_8022A808
{
	.Status:Normal    0057030A
	.Status:End
}

% Origin: HINT
#new:Script $Script_Idle_8022A814
{
    0:  Return
    8:  End
}

#new:Script $Script_HandleEvent_8022A824
{
    0:  Call  UseIdleAnimation  ( .Actor:Self .False )
   14:  Call  EnableIdleScript  ( .Actor:Self 00000000 )
   28:  Call  GetLastEvent      ( .Actor:Self *Var0 )
   3C:  Switch  *Var0
   48:  	CaseOR  ==  .Event:HitCombo % 9
   54:  	CaseOR  ==  .Event:Hit % A
   60:  		SetConst  *Var0  00000001
   70:  		SetConst  *Var1  00560304
   80:  		ExecWait  DoNormalHit
   8C:  	EndCaseGroup
   94:  	Case  ==  .Event:BurnHit % E
   A0:  		SetConst  *Var0  00000001
   B0:  		SetConst  *Var1  00560305
   C0:  		SetConst  *Var2  00560306
   D0:  		ExecWait  DoBurnHit
   DC:  	Case  ==  .Event:BurnDeath % 24
   E8:  		SetConst  *Var0  00000001
   F8:  		SetConst  *Var1  00560305
  108:  		SetConst  *Var2  00560306
  118:  		ExecWait  DoBurnHit
  124:  		SetConst  *Var0  00000001
  134:  		SetConst  *Var1  00560306
  144:  		ExecWait  DoDeath
  150:  		Return
  158:  	Case  ==  .Event:SpinSmashHit % B
  164:  		SetConst  *Var0  00000001
  174:  		SetConst  *Var1  00560304
  184:  		ExecWait  DoSpinSmashHit
  190:  	Case  ==  .Event:SpinSmashDeath % 21
  19C:  		SetConst  *Var0  00000001
  1AC:  		SetConst  *Var1  00560304
  1BC:  		ExecWait  DoSpinSmashHit
  1C8:  		SetConst  *Var0  00000001
  1D8:  		SetConst  *Var1  00560304
  1E8:  		ExecWait  DoDeath
  1F4:  		Return
  1FC:  	CaseOR  ==  00000017 % 17
  208:  	CaseOR  ==  .Event:Immune % 19
  214:  	CaseOR  ==  .Event:AirLiftFailed % 1F
  220:  		SetConst  *Var0  00000001
  230:  		SetConst  *Var1  00560301
  240:  		ExecWait  DoImmune
  24C:  	EndCaseGroup
  254:  	Case  ==  .Event:Death % 20
  260:  		SetConst  *Var0  00000001
  270:  		SetConst  *Var1  00560304
  280:  		ExecWait  DoNormalHit
  28C:  		Wait  10`
  298:  		SetConst  *Var0  00000001
  2A8:  		SetConst  *Var1  00560304
  2B8:  		ExecWait  DoDeath
  2C4:  		Return
  2CC:  	Case  ==  .Event:RecoverStatus % 31
  2D8:  		SetConst  *Var0  00000001
  2E8:  		SetConst  *Var1  00560301
  2F8:  		ExecWait  DoRecover
  304:  	Case  ==  .Event:ScareAway % 39
  310:  		Call  SetAnimation  ( .Actor:Self 00000001 00560304 )
  328:  		Call  SetActorJumpGravity   ( .Actor:Self *Fixed[1.5] )
  33C:  		Call  GetActorPos   ( .Actor:Self *Var0 *Var1 *Var2 )
  358:  		Call  SetGoalPos    ( .Actor:Self *Var0 *Var1 *Var2 )
  374:  		Call  JumpToGoal    ( .Actor:Self  15` .False .True .False )
  394:  		Wait  15`
  3A0:  		Call  SetAnimation  ( .Actor:Self 00000001 00560302 )
  3B8:  		ExecWait  $Script_WMagikoopa_RunAway
  3C4:  		Return
  3CC:  	Case  ==  .Event:BeginAirLift % 3A
  3D8:  		SetConst  *Var0  00000001
  3E8:  		SetConst  *Var1  00560302
  3F8:  		ExecWait  DoAirLift
  404:  	Case  ==  .Event:BlowAway % 16
  410:  		Call  GetStatusFlags    ( .Actor:Self *Var0 )
  424:  		If  *Var0  !&  ~Flags:StatusFlags:Sleep|Frozen|Fear|Paralyze|Dizzy|Stone|Stop % 35D000
  434:  			If  *Var0  &  ~Flags:StatusFlags:Shrink % 80000
  444:  				Call  SetPartDispOffset ( .Actor:Self 00000001 00000000 00000002 00000000 )
  464:  			Else
  46C:  				Call  SetPartDispOffset ( .Actor:Self 00000001 FFFFFFFC 00000005 00000000 )
  48C:  			EndIf
  494:  		EndIf
  49C:  		SetConst  *Var0  00000001
  4AC:  		SetConst  *Var1  00560304
  4BC:  		ExecWait  DoBlowAway
  4C8:  		Return
  4D0:  	Default
  4D8:  EndSwitch
  4E0:  Call  EnableIdleScript  ( .Actor:Self 00000001 )
  4F4:  Call  UseIdleAnimation  ( .Actor:Self .True )
  508:  Return
  510:  End
}

% Origin: HINT
#new:Script $Script_8022AD3C
{
    0:  Call  GetBattleFlags    ( *Var0 )
   10:  If  *Var0  !&  00080000
   20:  	If  *Var0  &  00000240
   30:  		Call  SetActorVar   ( .Actor:Self 00000000 00000001 )
   48:  	EndIf
   50:  Else
   58:  	Call  $Function_80218D98    ( *Var0 )
   68:  	Switch  *Var0
   74:  		CaseOR  ==  00000083
   80:  		CaseOR  ==  00000084
   8C:  		CaseOR  ==  00000085
   98:  		CaseOR  ==  00000088
   A4:  			Call  GetBattleFlags    ( *Var0 )
   B4:  			If  *Var0  &  00000240
   C4:  				Call  SetActorVar   ( .Actor:Self 00000000 00000001 )
   DC:  			EndIf
   E4:  		EndCaseGroup
   EC:  	EndSwitch
   F4:  EndIf
   FC:  Return
  104:  End
}

% Origin: HINT
#new:Script $Script_8022AE48
{
    0:  Call  GetActorVar   ( .Actor:Self 00000000 *Var0 )
   18:  If  *Var0  ==  00000001
   28:  	Call  SetAnimation  ( .Actor:Self 00000001 00560304 )
   40:  	Goto  0
   4C:  EndIf
   54:  Call  GetLastElement    ( *Var0 )
   64:  If  *Var0  &  00000400
   74:  	Call  SetAnimation  ( .Actor:Self 00000001 00560304 )
   8C:  	Goto  0
   98:  EndIf
   A0:  Return
   A8:  Label  0
   B4:  Call  8027D32C  ( FFFFFF81 )
   C4:  Call  GetStatusFlags    ( .Actor:Self *Var0 )
   D8:  If  *Var0  &  ~Flags:StatusFlags:Shrink % 80000
   E8:  	Call  SetPartScale  ( .Actor:Self 00000003 *Fixed[0.4] *Fixed[0.4] *Fixed[0.4] )
  108:  EndIf
  110:  Call  SetPartFlagBits   ( .Actor:Self 00000001 00800000 .True )
  12C:  Call  SetPartFlagBits   ( .Actor:Self 00000001 00020001 .False )
  148:  Call  SetPartFlagBits   ( .Actor:Self 00000002 00020001 .True )
  164:  Call  SetPartFlagBits   ( .Actor:Self 00000002 00800000 .False )
  180:  Call  SetPartFlagBits   ( .Actor:Self 00000003 00100000 .True )
  19C:  Call  SetPartFlagBits   ( .Actor:Self 00000003 00000001 .False )
  1B8:  Call  GetActorPos       ( .Actor:Self *Var0 *Var1 *Var2 )
  1D4:  Sub   *Var2  00000001
  1E4:  Call  SetPartPos        ( .Actor:Self 00000003 *Var0 *Var1 *Var2 )
  204:  Call  PlaySoundAtActor  ( .Actor:Self 00000301 )
  218:  Call  GetActorPos       ( .Actor:Self *Var0 *Var1 *Var2 )
  234:  Set   *Var1  00000000
  244:  Call  SetActorJumpGravity   ( .Actor:Self *Fixed[0.8] )
  258:  Call  SetGoalPos        ( .Actor:Self *Var0 *Var1 *Var2 )
  274:  Call  JumpToGoal        ( .Actor:Self  15` .False .True .False )
  294:  Call  $Function_80218E90    ( 00000096 0000000A )
  2A8:  Thread
  2B0:  	Call  ShakeCam  ( .Cam:Battle 00000000  5` *Fixed[0.7] )
  2CC:  EndThread
  2D4:  Call  GetLastEvent  ( .Actor:Self *Var3 )
  2E8:  If  *Var3  ==  0000000F % F
  2F8:  	Call  SetAnimation  ( .Actor:Self 00000001 00560304 )
  310:  	Call  GetActorPos   ( .Actor:Self *Var3 *Var4 *Var5 )
  32C:  	Add   *Var4  0000000A
  33C:  	Add   *Var5  00000005
  34C:  	Call  PlayEffect    ( ~FX:SmokeBurst:Black *Var3 *Var4 *Var5 *Fixed[1.0] 0000000A 00000000 00000000 00000000 00000000 00000000 00000000 00000000 )
  390:  EndIf
  398:  Call  SetGoalPos    ( .Actor:Self *Var0 *Var1 *Var2 )
  3B4:  Call  JumpToGoal    ( .Actor:Self  10` .False .True .False )
  3D4:  Call  SetGoalPos    ( .Actor:Self *Var0 *Var1 *Var2 )
  3F0:  Call  JumpToGoal    ( .Actor:Self  5` .False .True .False )
  410:  Loop  00000014
  41C:  	Call  SetPartFlagBits   ( .Actor:Self 00000003 00000001 .True )
  438:  	Wait  1`
  444:  	Call  SetPartFlagBits   ( .Actor:Self 00000003 00000001 .False )
  460:  	Wait  1`
  46C:  EndLoop
  474:  Call  SetPartFlagBits   ( .Actor:Self 00000003 00000001 .True )
  490:  Call  SetAnimation      ( .Actor:Self 00000001 00560301 )
  4A8:  Call  SetActorFlagBits  ( .Actor:Self 00000200 .False )
  4C0:  Call  BindHandleEvent   ( .Actor:Self $Script_HandleEvent_8022A824 )
  4D4:  Call  SetActorType      ( .Actor:Self 00000059 )
  4E8:  Call  SetStatusTable    ( .Actor:Self $StatusTable_8022A538 )
  4FC:  Call  $Function_80218DC4    ( FFFFFFF6 00000014 0000000A 00000020 )
  518:  Call  SetActorFlagBits  ( .Actor:Self 00001000 .True )
  530:  Call  ResetAllActorSounds   ( .Actor:Self )
  540:  Call  GetIndexFromPos   ( .Actor:Self *Var0 )
  554:  Mod   *Var0  00000004
  564:  Call  SetGoalToIndex    ( .Actor:Self *Var0 )
  578:  Call  SetActorSpeed     ( .Actor:Self *Fixed[4.0] )
  58C:  Call  RunToGoal ( .Actor:Self  0` .False )
  5A4:  Call  GetGoalPos        ( .Actor:Self *Var0 *Var1 *Var2 )
  5C0:  Call  ForceHomePos      ( .Actor:Self *Var0 *Var1 *Var2 )
  5DC:  Call  HPBarToHome       ( .Actor:Self )
  5EC:  Return
  5F4:  End
}

% Origin: HINT
#new:Script $Script_HandleEvent_8022B444
{
    0:  Call  UseIdleAnimation  ( .Actor:Self .False )
   14:  Call  EnableIdleScript  ( .Actor:Self 00000000 )
   28:  Call  GetLastEvent      ( .Actor:Self *Var0 )
   3C:  Switch  *Var0
   48:  	Case  ==  .Event:HitCombo % 9
   54:  		ExecWait  $Script_8022AD3C
   60:  		SetConst  *Var0  00000002
   70:  		SetConst  *Var1  00570304
   80:  		ExecWait  DoNormalHit
   8C:  	CaseOR  ==  .Event:Hit % A
   98:  	CaseOR  ==  .Event:FallTrigger % C
   A4:  		ExecWait  $Script_8022AD3C
   B0:  		SetConst  *Var0  00000002
   C0:  		SetConst  *Var1  00570304
   D0:  		ExecWait  DoNormalHit
   DC:  		ExecWait  $Script_8022AE48
   E8:  	EndCaseGroup
   F0:  	CaseOR  ==  .Event:BurnHit % E
   FC:  	CaseOR  ==  0000000F % F
  108:  		ExecWait  $Script_8022AD3C
  114:  		SetConst  *Var0  00000002
  124:  		SetConst  *Var1  00570305
  134:  		SetConst  *Var2  00570306
  144:  		ExecWait  DoBurnHit
  150:  		ExecWait  $Script_8022AE48
  15C:  	EndCaseGroup
  164:  	Case  ==  .Event:BurnDeath % 24
  170:  		SetConst  *Var0  00000002
  180:  		SetConst  *Var1  00570305
  190:  		SetConst  *Var2  00570306
  1A0:  		ExecWait  DoBurnHit
  1AC:  		SetConst  *Var0  00000002
  1BC:  		SetConst  *Var1  00570306
  1CC:  		ExecWait  DoDeath
  1D8:  		Return
  1E0:  	Case  ==  .Event:SpinSmashHit % B
  1EC:  		SetConst  *Var0  00000002
  1FC:  		SetConst  *Var1  00570304
  20C:  		ExecWait  DoSpinSmashHit
  218:  	Case  ==  .Event:SpinSmashDeath % 21
  224:  		SetConst  *Var0  00000002
  234:  		SetConst  *Var1  00570304
  244:  		ExecWait  DoSpinSmashHit
  250:  		SetConst  *Var0  00000002
  260:  		SetConst  *Var1  00570304
  270:  		ExecWait  DoDeath
  27C:  		Return
  284:  	CaseOR  ==  00000017 % 17
  290:  	CaseOR  ==  .Event:Immune % 19
  29C:  	CaseOR  ==  .Event:AirLiftFailed % 1F
  2A8:  		SetConst  *Var0  00000002
  2B8:  		SetConst  *Var1  00570301
  2C8:  		ExecWait  DoImmune
  2D4:  	EndCaseGroup
  2DC:  	Case  ==  .Event:Death % 20
  2E8:  		SetConst  *Var0  00000002
  2F8:  		SetConst  *Var1  00570304
  308:  		ExecWait  DoNormalHit
  314:  		Wait  10`
  320:  		SetConst  *Var0  00000002
  330:  		SetConst  *Var1  00570304
  340:  		ExecWait  DoDeath
  34C:  		Return
  354:  	Case  ==  .Event:BeginFirstStrike % 38
  360:  		Call  SetActorPos       ( .Actor:Self  20`  0`  0` )
  37C:  		Call  HPBarToCurrent    ( .Actor:Self )
  38C:  	Case  ==  .Event:EndFirstStrike % 35
  398:  		Call  SetAnimation  ( .Actor:Self 00000002 00570301 )
  3B0:  		Call  SetGoalToHome ( .Actor:Self )
  3C0:  		Call  SetActorSpeed ( .Actor:Self *Fixed[4.0] )
  3D4:  		Call  FlyToGoal     ( .Actor:Self  0`  1` .Easing:Linear )
  3F0:  		Call  SetAnimation  ( .Actor:Self 00000002 00570301 )
  408:  		Call  HPBarToHome   ( .Actor:Self )
  418:  	Case  ==  .Event:RecoverStatus % 31
  424:  		SetConst  *Var0  00000002
  434:  		SetConst  *Var1  00570301
  444:  		ExecWait  DoRecover
  450:  	Case  ==  .Event:ScareAway % 39
  45C:  		Call  SetAnimation  ( .Actor:Self 00000002 00570304 )
  474:  		Call  SetActorJumpGravity   ( .Actor:Self *Fixed[1.5] )
  488:  		Call  GetActorPos   ( .Actor:Self *Var0 *Var1 *Var2 )
  4A4:  		Call  SetGoalPos    ( .Actor:Self *Var0 *Var1 *Var2 )
  4C0:  		Call  JumpToGoal    ( .Actor:Self  15` .False .True .False )
  4E0:  		Wait  15`
  4EC:  		Call  SetAnimation  ( .Actor:Self 00000002 00570302 )
  504:  		ExecWait  $Script_WMagikoopa_RunAway
  510:  		Return
  518:  	Case  ==  .Event:BeginAirLift % 3A
  524:  		SetConst  *Var0  00000002
  534:  		SetConst  *Var1  00570302
  544:  		ExecWait  DoAirLift
  550:  	Case  ==  .Event:BlowAway % 16
  55C:  		Call  GetStatusFlags    ( .Actor:Self *Var0 )
  570:  		If  *Var0  !&  ~Flags:StatusFlags:Sleep|Frozen|Fear|Paralyze|Dizzy|Stone|Stop % 35D000
  580:  			If  *Var0  &  ~Flags:StatusFlags:Shrink % 80000
  590:  				Call  SetPartDispOffset ( .Actor:Self 00000002 FFFFFFFD 00000000 00000000 )
  5B0:  			Else
  5B8:  				Call  SetPartDispOffset ( .Actor:Self 00000002 FFFFFFF1 00000000 00000000 )
  5D8:  			EndIf
  5E0:  		EndIf
  5E8:  		SetConst  *Var0  00000002
  5F8:  		SetConst  *Var1  00570304
  608:  		ExecWait  DoBlowAway
  614:  		Return
  61C:  	Default
  624:  EndSwitch
  62C:  Call  EnableIdleScript  ( .Actor:Self 00000001 )
  640:  Call  UseIdleAnimation  ( .Actor:Self .True )
  654:  Return
  65C:  End
}

% Origin: HINT
#new:Script $Script_WMagikoopa_ShapeSpell
{
    0:  Call  UseIdleAnimation  ( .Actor:Self .False )
   14:  Call  EnableIdleScript  ( .Actor:Self 00000000 )
   28:  Call  SetTargetActor    ( .Actor:Self .Actor:Player )
   3C:  Call  GetBattlePhase    ( *Var0 )
   4C:  If  *Var0  ==  00000001
   5C:  	Call  UseBattleCamPreset    ( 00000002 )
   6C:  	Call  MoveBattleCamOver     (  1` )
   7C:  Else
   84:  	Call  UseBattleCamPreset    ( 00000002 )
   94:  	Call  MoveBattleCamOver     (  10` )
   A4:  EndIf
   AC:  Call  PlaySoundAtActor  ( .Actor:Self .Sound:SpellCast1 )
   C0:  Call  GetActorPos       ( .Actor:Self *Var0 *Var1 *Var2 )
   DC:  Call  GetStatusFlags    ( .Actor:Self *VarA )
   F0:  If  *VarA  &  ~Flags:StatusFlags:Shrink % 80000
  100:  	Sub   *Var0  0000000C
  110:  	Add   *Var1  0000000E
  120:  Else
  128:  	Sub   *Var0  0000001E
  138:  	Add   *Var1  00000024
  148:  EndIf
  150:  Call  PlayEffect        ( ~FX:GatherMagic:Pink *Var0 *Var1 *Var2 *Fixed[0.5] 0000001E 00000000 00000000 00000000 00000000 00000000 00000000 00000000 )
  194:  Call  SetAnimation      ( .Actor:Self 00000002 00570302 )
  1AC:  Wait  30`
  1B8:  Call  EnemyTestTarget   ( .Actor:Self *Var0 ~Flags:DamageType:0 00000000 00000001 00000010 )
  1DC:  Switch  *Var0
  1E8:  	CaseOR  ==  .HitResult:Miss % 6
  1F4:  	CaseOR  ==  .HitResult:Lucky % 5
  200:  		Set   *VarA  *Var0
  210:  		Call  PlaySoundAtActor  ( .Actor:Self .Sound:SpellCast2 )
  224:  		Call  SetAnimation      ( .Actor:Self 00000002 00570303 )
  23C:  		Wait  5`
  248:  		Call  GetActorPos       ( .Actor:Self *Var0 *Var1 *Var2 )
  264:  		Call  GetStatusFlags    ( .Actor:Self *Var9 )
  278:  		If  *Var9  &  ~Flags:StatusFlags:Shrink % 80000
  288:  			Sub   *Var0  00000008
  298:  			Add   *Var1  00000008
  2A8:  		Else
  2B0:  			Sub   *Var0  00000014
  2C0:  			Add   *Var1  00000014
  2D0:  		EndIf
  2D8:  		Call  SetGoalToTarget       ( .Actor:Self )
  2E8:  		Call  GetGoalPos    ( .Actor:Self *Var3 *Var4 *Var5 )
  304:  		Sub   *Var3  00000032
  314:  		Set   *Var4  00000000
  324:  		Call  $Function_80218C40    ( *Var0 *Var1 *Var5 *Var3 *Var4 *Var5 00000019 )
  34C:  		Wait  50`
  358:  		If  *VarA  ==  .HitResult:Lucky % 5
  368:  			Call  EnemyTestTarget   ( .Actor:Self *Var0 ~Flags:DamageType:TriggerLucky 00000000 00000000 00000000 )
  38C:  		EndIf
  394:  		Wait  14`
  3A0:  		Call  YieldTurn ( )
  3AC:  		Call  AddActorDecoration    ( .Actor:Self 00000002 00000000 .Decoration:Sweat )
  3C8:  		Wait  30`
  3D4:  		Call  RemoveActorDecoration ( .Actor:Self 00000002 00000000 )
  3EC:  		Call  EnableIdleScript      ( .Actor:Self 00000001 )
  400:  		Call  UseIdleAnimation      ( .Actor:Self .True )
  414:  		Return
  41C:  	EndCaseGroup
  424:  EndSwitch
  42C:  Call  PlaySoundAtActor  ( .Actor:Self .Sound:SpellCast2 )
  440:  Call  SetAnimation      ( .Actor:Self 00000002 00570303 )
  458:  Wait  5`
  464:  Call  GetActorPos       ( .Actor:Self *Var0 *Var1 *Var2 )
  480:  Call  GetStatusFlags    ( .Actor:Self *VarA )
  494:  If  *VarA  &  ~Flags:StatusFlags:Shrink % 80000
  4A4:  	Sub   *Var0  00000008
  4B4:  	Add   *Var1  00000008
  4C4:  Else
  4CC:  	Sub   *Var0  00000014
  4DC:  	Add   *Var1  00000014
  4EC:  EndIf
  4F4:  Call  SetGoalToTarget   ( .Actor:Self )
  504:  Call  GetGoalPos        ( .Actor:Self *Var3 *Var4 *Var5 )
  520:  Sub   *Var3  0000000A
  530:  Call  $Function_80218C40    ( *Var0 *Var1 *Var5 *Var3 *Var4 *Var5 00000014 )
  558:  Wait  18`
  564:  Wait  2`
  570:  Call  EnemyDamageTarget ( .Actor:Self *Var0 ~Flags:DamageType:NoContact|Magic 00000000 00000000 00000003 00000020 )
  598:  Switch  *Var0
  5A4:  	CaseOR  ==  .HitResult:Hit % 0
  5B0:  	CaseOR  ==  .HitResult:QuakeImmune % 2
  5BC:  		Wait  19`
  5C8:  		Call  YieldTurn ( )
  5D4:  	EndCaseGroup
  5DC:  EndSwitch
  5E4:  Call  EnableIdleScript  ( .Actor:Self 00000001 )
  5F8:  Call  UseIdleAnimation  ( .Actor:Self .True )
  60C:  Return
  614:  End
}

% Origin: HINT
#new:Script $Script_WMagikoopa_WandStrike
{
    0:  Call  UseIdleAnimation  ( .Actor:Self .False )
   14:  Call  EnableIdleScript  ( .Actor:Self 00000000 )
   28:  Call  SetTargetActor    ( .Actor:Self .Actor:Player )
   3C:  Call  UseBattleCamPreset    ( 0000003F )
   4C:  Call  BattleCamTargetActor  ( .Actor:Self )
   5C:  Call  8024ECF8  ( FFFFFFFF 00000001 00000000 )
   74:  Call  PlaySoundAtActor  ( .Actor:Self 000002DB )
   88:  Thread
   90:  	Call  SetAnimation  ( .Actor:Self 00000001 00560302 )
   A8:  	Set   *Var0  000000C8
   B8:  	Loop  00000014
   C4:  		Sub   *Var0  0000000A
   D4:  		Call  SetPartAlpha  ( .Actor:Self 00000001 *Var0 )
   EC:  		Wait  1`
   F8:  	EndLoop
  100:  EndThread
  108:  Wait  10`
  114:  Call  SetGoalToTarget   ( .Actor:Self )
  124:  Call  GetGoalPos        ( .Actor:Self *Var0 *Var1 *Var2 )
  140:  Call  GetStatusFlags    ( .Actor:Self *VarA )
  154:  If  *VarA  &  ~Flags:StatusFlags:Shrink % 80000
  164:  	Add   *Var0  00000005
  174:  Else
  17C:  	Add   *Var0  00000019
  18C:  EndIf
  194:  Set   *Var1  00000000
  1A4:  Call  SetGoalPos    ( .Actor:Self *Var0 *Var1 *Var2 )
  1C0:  Call  FlyToGoal     ( .Actor:Self  30`  0` .Easing:CosInOut )
  1DC:  Set   *Var0  00000037
  1EC:  Loop  00000014
  1F8:  	Add   *Var0  0000000A
  208:  	Call  SetPartAlpha  ( .Actor:Self 00000001 *Var0 )
  220:  	Wait  1`
  22C:  EndLoop
  234:  Call  SetPartAlpha      ( .Actor:Self 00000001 000000FF )
  24C:  Call  SetAnimation      ( .Actor:Self 00000001 00560303 )
  264:  Wait  11`
  270:  Call  PlaySoundAtActor  ( .Actor:Self 000002DC )
  284:  Call  EnemyTestTarget   ( .Actor:Self *Var0 ~Flags:DamageType:0 00000000 00000001 00000010 )
  2A8:  Switch  *Var0
  2B4:  	CaseOR  ==  .HitResult:Miss % 6
  2C0:  	CaseOR  ==  .HitResult:Lucky % 5
  2CC:  		Set   *VarA  *Var0
  2DC:  		Call  UseBattleCamPreset    ( 00000002 )
  2EC:  		If  *VarA  ==  .HitResult:Lucky % 5
  2FC:  			Call  EnemyTestTarget   ( .Actor:Self *Var0 ~Flags:DamageType:TriggerLucky 00000000 00000000 00000000 )
  320:  		EndIf
  328:  		Wait  15`
  334:  		Set   *Var0  000000C8
  344:  		Loop  00000014
  350:  			Sub   *Var0  0000000A
  360:  			Call  SetPartAlpha  ( .Actor:Self 00000001 *Var0 )
  378:  			Wait  1`
  384:  		EndLoop
  38C:  		Call  YieldTurn ( )
  398:  		Call  SetGoalToHome ( .Actor:Self )
  3A8:  		Call  SetAnimation  ( .Actor:Self 00000001 00560301 )
  3C0:  		Call  FlyToGoal     ( .Actor:Self  30`  0` .Easing:CosInOut )
  3DC:  		Set   *Var0  00000037
  3EC:  		Loop  00000014
  3F8:  			Add   *Var0  0000000A
  408:  			Call  SetPartAlpha  ( .Actor:Self 00000001 *Var0 )
  420:  			Wait  1`
  42C:  		EndLoop
  434:  		Call  SetPartAlpha      ( .Actor:Self 00000001 000000FF )
  44C:  		Call  EnableIdleScript  ( .Actor:Self 00000001 )
  460:  		Call  UseIdleAnimation  ( .Actor:Self .True )
  474:  		Return
  47C:  	EndCaseGroup
  484:  EndSwitch
  48C:  Call  SetGoalToTarget   ( .Actor:Self )
  49C:  Wait  2`
  4A8:  Call  EnemyDamageTarget ( .Actor:Self *Var0 ~Flags:DamageType:NoContact 00000000 00000000 00000003 00000020 )
  4D0:  Switch  *Var0
  4DC:  	CaseOR  ==  .HitResult:Hit % 0
  4E8:  	CaseOR  ==  .HitResult:QuakeImmune % 2
  4F4:  		Call  UseBattleCamPreset    ( 00000002 )
  504:  		Wait  10`
  510:  		Set   *Var0  000000C8
  520:  		Loop  00000014
  52C:  			Sub   *Var0  0000000A
  53C:  			Call  SetPartAlpha  ( .Actor:Self 00000001 *Var0 )
  554:  			Wait  1`
  560:  		EndLoop
  568:  		Call  YieldTurn ( )
  574:  		Call  SetGoalToHome ( .Actor:Self )
  584:  		Call  SetAnimation  ( .Actor:Self 00000001 00560301 )
  59C:  		Call  FlyToGoal     ( .Actor:Self  20`  0` .Easing:CosInOut )
  5B8:  		Set   *Var0  00000037
  5C8:  		Loop  00000014
  5D4:  			Add   *Var0  0000000A
  5E4:  			Call  SetPartAlpha  ( .Actor:Self 00000001 *Var0 )
  5FC:  			Wait  1`
  608:  		EndLoop
  610:  		Call  SetPartAlpha  ( .Actor:Self 00000001 000000FF )
  628:  	EndCaseGroup
  630:  EndSwitch
  638:  Call  EnableIdleScript  ( .Actor:Self 00000001 )
  64C:  Call  UseIdleAnimation  ( .Actor:Self .True )
  660:  Return
  668:  End
}

% Origin: HINT
#new:Script $Script_WMagikoopa_RunAway
{
    0:  Call  UseIdleAnimation  ( .Actor:Self .False )
   14:  Call  EnableIdleScript  ( .Actor:Self 00000000 )
   28:  Call  8027D32C  ( FFFFFF81 )
   38:  Call  GetLastEvent      ( .Actor:Self *Var0 )
   4C:  If  *Var0  !=  .Event:ScareAway % 39
   5C:  	Call  UseBattleCamPreset    ( 0000000E )
   6C:  	Call  BattleCamTargetActor  ( .Actor:Self )
   7C:  	Call  MoveBattleCamOver     (  15` )
   8C:  	Wait  15`
   98:  	Call  UseBattleCamPreset    ( 00000001 )
   A8:  EndIf
   B0:  Call  SetActorSpeed ( .Actor:Self *Fixed[1.0] )
   C4:  Call  GetActorPos   ( .Actor:Self *Var0 *Var1 *Var2 )
   E0:  Add   *Var0  00000014
   F0:  Call  SetGoalPos    ( .Actor:Self *Var0 *Var1 *Var2 )
  10C:  Call  RunToGoal     ( .Actor:Self  0` .False )
  124:  Wait  10`
  130:  Call  SetActorYaw   ( .Actor:Self  180` )
  144:  Call  EnableActorBlur       ( .Actor:Self 00000001 )
  158:  Call  SetActorSpeed ( .Actor:Self *Fixed[10.0] )
  16C:  Call  GetActorPos   ( .Actor:Self *Var0 *Var1 *Var2 )
  188:  Add   *Var0  000000C8
  198:  Call  SetGoalPos    ( .Actor:Self *Var0 *Var1 *Var2 )
  1B4:  Call  RunToGoal     ( .Actor:Self  0` .False )
  1CC:  Call  YieldTurn ( )
  1D8:  Call  UseBattleCamPreset    ( 00000002 )
  1E8:  ExecWait  ForceNextTarget
  1F4:  Call  8027D32C      ( FFFFFF81 )
  204:  Call  RemoveActor   ( .Actor:Self )
  214:  Return
  21C:  End
}

#new:Script $Script_Init_8022C958
{
    0:  Call  BindIdle      ( .Actor:Self $Script_Idle_8022A814 )
   14:  Call  BindTakeTurn  ( .Actor:Self $Script_TakeTurn_8022DEE4 )
   28:  Call  BindHandleEvent   ( .Actor:Self $Script_HandleEvent_8022A824 )
   3C:  Call  SetActorVar   ( .Actor:Self 00000000 00000000 )
   54:  Return
   5C:  End
}

% Origin: HINT
#new:Script $Script_Init_8022C9BC
{
    0:  Call  BindIdle      ( .Actor:Self $Script_Idle_8022A814 )
   14:  Call  BindTakeTurn  ( .Actor:Self $Script_TakeTurn_8022DEE4 )
   28:  Call  BindHandleEvent   ( .Actor:Self $Script_HandleEvent_8022B444 )
   3C:  Call  SetActorVar   ( .Actor:Self 00000000 00000000 )
   54:  Return
   5C:  End
}

% Origin: HINT
#new:Script $Script_HealOne
{
    0:  Set   *Var8  00000000
   10:  Set   *Var9  0000270F
   20:  Call  EnemyCreateTargetList ( 00008002 )
   30:  Call  InitTargetIterator ( )
   3C:  Label  0
   48:  Call  GetOwnerTarget        ( *Var0 *Var1 )
   5C:  Call  GetActorHP    ( *Var0 *Var2 )
   70:  Call  $Function_80218FAC    ( *Var3 *Var4 )
   84:  If  *Var3  >  *Var4
   94:  	Set   *Var3  *Var4
   A4:  EndIf
   AC:  Call  $Function_8021900C    ( *Var0 *Var1 *Var5 )
   C4:  Call  GetActorDefenseBoost  ( *Var0 *Var6 )
   D8:  Add   *Var5  *Var6
   E8:  Sub   *Var3  *Var5
   F8:  Sub   *Var2  *Var3
  108:  Call  $Function_80218EE8    ( *Var0 *VarA )
  11C:  If  *VarA  ==  00000000
  12C:  	Call  GetEnemyMaxHP ( *Var0 *VarA )
  140:  	Call  GetActorHP    ( *Var0 *VarB )
  154:  	If  *VarA  !=  *VarB
  164:  		If  *Var2  <  *Var9
  174:  			Set   *Var8  *Var0
  184:  			Set   *Var9  *Var2
  194:  		Else
  19C:  			If  *Var2  ==  *Var9
  1AC:  				If  *Var0  <  *Var8
  1BC:  					Set   *Var8  *Var0
  1CC:  					Set   *Var9  *Var2
  1DC:  				EndIf
  1E4:  			EndIf
  1EC:  		EndIf
  1F4:  	EndIf
  1FC:  EndIf
  204:  Call  ChooseNextTarget  ( .Iter:Next *Var0 )
  218:  If  *Var0  !=  FFFFFFFF
  228:  	Goto  0
  234:  EndIf
  23C:  If  *Var8  !=  00000000
  24C:  	Goto  64
  258:  EndIf
  260:  Set   *Var8  00000000
  270:  Set   *Var9  0000270F
  280:  Call  EnemyCreateTargetList ( 00008002 )
  290:  Call  InitTargetIterator ( )
  29C:  Label  1
  2A8:  Call  GetOwnerTarget        ( *Var0 *Var1 )
  2BC:  Call  GetActorHP    ( *Var0 *Var2 )
  2D0:  Call  $Function_80218FAC    ( *Var3 *Var4 )
  2E4:  If  *Var3  >  *Var4
  2F4:  	Set   *Var3  *Var4
  304:  EndIf
  30C:  Call  $Function_8021900C    ( *Var0 *Var1 *Var5 )
  324:  Call  GetActorDefenseBoost  ( *Var0 *Var6 )
  338:  Add   *Var5  *Var6
  348:  Sub   *Var3  *Var5
  358:  Sub   *Var2  *Var4
  368:  Set   *Flag[00]  .False
  378:  Call  GetOriginalActorType  ( *Var0 *VarA )
  38C:  If  *VarA  ==  00000047
  39C:  	Call  GetActorVar   ( *Var0 00000008 *VarA )
  3B4:  	If  *VarA  ==  00000001
  3C4:  		Set   *Flag[00]  .True
  3D4:  	EndIf
  3DC:  EndIf
  3E4:  Call  GetOwnerID    ( *VarA )
  3F4:  If  *VarA  !=  *Var0
  404:  	If  *Flag[00]  ==  .False
  414:  		Call  GetEnemyMaxHP ( *Var0 *VarA )
  428:  		Call  GetActorHP    ( *Var0 *VarB )
  43C:  		If  *VarA  !=  *VarB
  44C:  			If  *Var2  <  *Var9
  45C:  				Set   *Var8  *Var0
  46C:  				Set   *Var9  *Var2
  47C:  			Else
  484:  				If  *Var2  ==  *Var9
  494:  					If  *Var0  <  *Var8
  4A4:  						Set   *Var8  *Var0
  4B4:  						Set   *Var9  *Var2
  4C4:  					EndIf
  4CC:  				EndIf
  4D4:  			EndIf
  4DC:  		EndIf
  4E4:  	EndIf
  4EC:  EndIf
  4F4:  Call  ChooseNextTarget  ( .Iter:Next *Var0 )
  508:  If  *Var0  !=  FFFFFFFF
  518:  	Goto  1
  524:  EndIf
  52C:  If  *Var8  !=  00000000
  53C:  	Goto  64
  548:  EndIf
  550:  Call  EnemyCreateTargetList ( 00008002 )
  560:  Call  InitTargetIterator ( )
  56C:  Label  2
  578:  Call  GetOwnerTarget        ( *Var0 *Var1 )
  58C:  Set   *Flag[00]  .False
  59C:  Call  GetOriginalActorType  ( *Var0 *VarA )
  5B0:  If  *VarA  ==  00000047
  5C0:  	Call  GetActorVar   ( *Var0 00000008 *VarA )
  5D8:  	If  *VarA  ==  00000001
  5E8:  		Set   *Flag[00]  .True
  5F8:  	EndIf
  600:  EndIf
  608:  Call  GetOwnerID    ( *VarA )
  618:  If  *VarA  !=  *Var0
  628:  	If  *Flag[00]  ==  .False
  638:  		Call  GetEnemyMaxHP ( *Var0 *VarA )
  64C:  		Call  GetActorHP    ( *Var0 *VarB )
  660:  		If  *VarA  !=  *VarB
  670:  			Set   *Var8  *Var0
  680:  			Goto  64
  68C:  		EndIf
  694:  	EndIf
  69C:  EndIf
  6A4:  Call  ChooseNextTarget  ( .Iter:Next *Var0 )
  6B8:  If  *Var0  !=  FFFFFFFF
  6C8:  	Goto  2
  6D4:  EndIf
  6DC:  Call  GetEnemyMaxHP ( .Actor:Self *VarA )
  6F0:  Call  GetActorHP    ( .Actor:Self *VarB )
  704:  If  *VarA  !=  *VarB
  714:  	Set   *Var8  FFFFFF81
  724:  	Goto  64
  730:  EndIf
  738:  Call  EnemyCreateTargetList ( 00008002 )
  748:  Call  InitTargetIterator ( )
  754:  Label  3
  760:  Call  GetOwnerTarget        ( *Var0 *Var1 )
  774:  Call  GetOwnerID    ( *VarA )
  784:  If  *VarA  !=  *Var0
  794:  	Call  GetActorFlags ( .Actor:Self *Var0 )
  7A8:  	If  *Var0  &  00000200
  7B8:  		ExecWait  $Script_WMagikoopa_ShapeSpell
  7C4:  	Else
  7CC:  		ExecWait  $Script_WMagikoopa_WandStrike
  7D8:  	EndIf
  7E0:  	Return
  7E8:  EndIf
  7F0:  Call  ChooseNextTarget  ( .Iter:Next *Var0 )
  804:  If  *Var0  !=  FFFFFFFF
  814:  	Goto  3
  820:  EndIf
  828:  ExecWait  $Script_WMagikoopa_RunAway
  834:  Return
  83C:  Label  64
  848:  Call  RandInt   ( 000003E8 *Var0 )
  85C:  If  *Var0  >  000002EE
  86C:  	Call  GetActorFlags ( .Actor:Self *Var0 )
  880:  	If  *Var0  &  00000200
  890:  		ExecWait  $Script_WMagikoopa_ShapeSpell
  89C:  	Else
  8A4:  		ExecWait  $Script_WMagikoopa_WandStrike
  8B0:  	EndIf
  8B8:  	Return
  8C0:  EndIf
  8C8:  Call  UseIdleAnimation  ( .Actor:Self .False )
  8DC:  Call  EnableIdleScript  ( .Actor:Self 00000000 )
  8F0:  Call  SetTargetActor    ( .Actor:Self .Actor:Player )
  904:  Call  UseBattleCamPreset    ( 0000000E )
  914:  Call  BattleCamTargetActor  ( .Actor:Self )
  924:  Call  MoveBattleCamOver (  15` )
  934:  Wait  15`
  940:  Call  GetActorFlags     ( .Actor:Self *Var0 )
  954:  If  *Var0  !&  00000200
  964:  	Call  SetAnimation  ( .Actor:Self 00000001 00560302 )
  97C:  Else
  984:  	Call  SetAnimation  ( .Actor:Self 00000002 00570302 )
  99C:  EndIf
  9A4:  Wait  5`
  9B0:  Call  PlaySoundAtActor  ( .Actor:Self .Sound:SpellCast1 )
  9C4:  Call  GetActorFlags     ( .Actor:Self *Var0 )
  9D8:  If  *Var0  !&  00000200
  9E8:  	Call  GetActorPos       ( .Actor:Self *Var0 *Var1 *Var2 )
  A04:  	Call  GetStatusFlags    ( .Actor:Self *VarA )
  A18:  	If  *VarA  &  ~Flags:StatusFlags:Shrink % 80000
  A28:  		Sub   *Var0  00000006
  A38:  		Add   *Var1  0000000C
  A48:  		Sub   *Var2  00000002
  A58:  		Call  PlayEffect    ( ~FX:RadialFlowOut:RedEnergy *Var0 *Var1 *Var2 *Fixed[0.12] 0000001E 00000000 00000000 00000000 00000000 00000000 00000000 00000000 )
  A9C:  	Else
  AA4:  		Sub   *Var0  00000010
  AB4:  		Add   *Var1  0000001F
  AC4:  		Sub   *Var2  00000002
  AD4:  		Call  PlayEffect    ( ~FX:RadialFlowOut:RedEnergy *Var0 *Var1 *Var2 *Fixed[0.3] 0000001E 00000000 00000000 00000000 00000000 00000000 00000000 00000000 )
  B18:  	EndIf
  B20:  Else
  B28:  	Call  GetActorPos       ( .Actor:Self *Var0 *Var1 *Var2 )
  B44:  	Call  GetStatusFlags    ( .Actor:Self *VarA )
  B58:  	If  *VarA  &  ~Flags:StatusFlags:Shrink % 80000
  B68:  		Sub   *Var0  0000000C
  B78:  		Add   *Var1  0000000E
  B88:  		Sub   *Var2  00000002
  B98:  		Call  PlayEffect    ( ~FX:RadialFlowOut:RedEnergy *Var0 *Var1 *Var2 *Fixed[0.12] 0000001E 00000000 00000000 00000000 00000000 00000000 00000000 00000000 )
  BDC:  	Else
  BE4:  		Sub   *Var0  0000001E
  BF4:  		Add   *Var1  00000024
  C04:  		Sub   *Var2  00000002
  C14:  		Call  PlayEffect    ( ~FX:RadialFlowOut:RedEnergy *Var0 *Var1 *Var2 *Fixed[0.3] 0000001E 00000000 00000000 00000000 00000000 00000000 00000000 00000000 )
  C58:  	EndIf
  C60:  EndIf
  C68:  Wait  30`
  C74:  Call  GetActorFlags ( .Actor:Self *Var0 )
  C88:  If  *Var0  !&  00000200
  C98:  	Call  SetAnimation  ( .Actor:Self 00000001 00560301 )
  CB0:  Else
  CB8:  	Call  SetAnimation  ( .Actor:Self 00000002 00570301 )
  CD0:  EndIf
  CD8:  Wait  5`
  CE4:  Thread
  CEC:  	Wait  5`
  CF8:  	Call  PlaySoundAtActor  ( *Var8 0000206D )
  D0C:  	Call  PlaySoundAtActor  ( *Var8 00000214 )
  D20:  	Wait  30`
  D2C:  	Call  PlaySoundAtActor  ( *Var8 0000025C )
  D40:  EndThread
  D48:  Thread
  D50:  	Call  8026BF48  ( 00000001 )
  D60:  	Call  HealActor ( *Var8 00000005 .False )
  D78:  	Call  8026BF48  ( 00000000 )
  D88:  EndThread
  D90:  Call  WaitForBuffDone ( )
  D9C:  Call  UseBattleCamPreset    ( 00000002 )
  DAC:  Wait  10`
  DB8:  Call  YieldTurn ( )
  DC4:  Call  EnableIdleScript      ( .Actor:Self 00000001 )
  DD8:  Call  UseIdleAnimation      ( .Actor:Self .True )
  DEC:  Return
  DF4:  End
}

% Origin: HINT
#new:Script $Script_HealAll
{
    0:  Call  RandInt   ( 000003E8 *Var0 )
   14:  If  *Var0  >  000002EE
   24:  	Call  GetActorFlags ( .Actor:Self *Var0 )
   38:  	If  *Var0  &  00000200
   48:  		ExecWait  $Script_WMagikoopa_ShapeSpell
   54:  	Else
   5C:  		ExecWait  $Script_WMagikoopa_WandStrike
   68:  	EndIf
   70:  	Return
   78:  EndIf
   80:  Call  UseIdleAnimation  ( .Actor:Self .False )
   94:  Call  EnableIdleScript  ( .Actor:Self 00000000 )
   A8:  Call  SetTargetActor    ( .Actor:Self .Actor:Player )
   BC:  Call  UseBattleCamPreset    ( 0000000E )
   CC:  Call  BattleCamTargetActor  ( .Actor:Self )
   DC:  Call  MoveBattleCamOver (  15` )
   EC:  Wait  15`
   F8:  Call  GetActorFlags     ( .Actor:Self *Var0 )
  10C:  If  *Var0  !&  00000200
  11C:  	Call  SetAnimation  ( .Actor:Self 00000001 00560302 )
  134:  Else
  13C:  	Call  SetAnimation  ( .Actor:Self 00000002 00570302 )
  154:  EndIf
  15C:  Wait  5`
  168:  Call  PlaySoundAtActor  ( .Actor:Self .Sound:SpellCast1 )
  17C:  Call  GetActorFlags     ( .Actor:Self *Var0 )
  190:  If  *Var0  !&  00000200
  1A0:  	Call  GetActorPos       ( .Actor:Self *Var0 *Var1 *Var2 )
  1BC:  	Call  GetStatusFlags    ( .Actor:Self *VarA )
  1D0:  	If  *VarA  &  ~Flags:StatusFlags:Shrink % 80000
  1E0:  		Sub   *Var0  00000006
  1F0:  		Add   *Var1  0000000C
  200:  		Sub   *Var2  00000002
  210:  		Call  PlayEffect    ( ~FX:RadialFlowOut:RedEnergy *Var0 *Var1 *Var2 *Fixed[0.12] 0000001E 00000000 00000000 00000000 00000000 00000000 00000000 00000000 )
  254:  	Else
  25C:  		Sub   *Var0  00000010
  26C:  		Add   *Var1  0000001F
  27C:  		Sub   *Var2  00000002
  28C:  		Call  PlayEffect    ( ~FX:RadialFlowOut:RedEnergy *Var0 *Var1 *Var2 *Fixed[0.3] 0000001E 00000000 00000000 00000000 00000000 00000000 00000000 00000000 )
  2D0:  	EndIf
  2D8:  Else
  2E0:  	Call  GetActorPos       ( .Actor:Self *Var0 *Var1 *Var2 )
  2FC:  	Call  GetStatusFlags    ( .Actor:Self *VarA )
  310:  	If  *VarA  &  ~Flags:StatusFlags:Shrink % 80000
  320:  		Sub   *Var0  0000000C
  330:  		Add   *Var1  0000000E
  340:  		Sub   *Var2  00000002
  350:  		Call  PlayEffect    ( ~FX:RadialFlowOut:RedEnergy *Var0 *Var1 *Var2 *Fixed[0.12] 0000001E 00000000 00000000 00000000 00000000 00000000 00000000 00000000 )
  394:  	Else
  39C:  		Sub   *Var0  0000001E
  3AC:  		Add   *Var1  00000024
  3BC:  		Sub   *Var2  00000002
  3CC:  		Call  PlayEffect    ( ~FX:RadialFlowOut:RedEnergy *Var0 *Var1 *Var2 *Fixed[0.3] 0000001E 00000000 00000000 00000000 00000000 00000000 00000000 00000000 )
  410:  	EndIf
  418:  EndIf
  420:  Wait  30`
  42C:  Call  GetActorFlags ( .Actor:Self *Var0 )
  440:  If  *Var0  !&  00000200
  450:  	Call  SetAnimation  ( .Actor:Self 00000001 00560301 )
  468:  Else
  470:  	Call  SetAnimation  ( .Actor:Self 00000002 00570301 )
  488:  EndIf
  490:  Wait  5`
  49C:  Call  EnemyCreateTargetList ( 00008002 )
  4AC:  Call  InitTargetIterator ( )
  4B8:  Label  0
  4C4:  Set   *Flag[00]  .False
  4D4:  Call  GetOwnerTarget        ( *Var0 *Var1 )
  4E8:  Call  GetOriginalActorType  ( *Var0 *Var1 )
  4FC:  If  *Var1  ==  00000047
  50C:  	Call  GetActorVar   ( *Var0 00000008 *Var1 )
  524:  	If  *Var1  ==  00000001
  534:  		Set   *Flag[00]  .True
  544:  	EndIf
  54C:  EndIf
  554:  If  *Flag[00]  ==  .False
  564:  	Thread
  56C:  		Wait  5`
  578:  		Call  PlaySoundAtActor  ( *Var0 0000206D )
  58C:  		Call  PlaySoundAtActor  ( *Var0 00000214 )
  5A0:  		Wait  30`
  5AC:  		Call  PlaySoundAtActor  ( *Var0 0000025C )
  5C0:  	EndThread
  5C8:  	Thread
  5D0:  		Call  8026BF48  ( 00000001 )
  5E0:  		Call  HealActor ( *Var0 00000003 .True )
  5F8:  		Call  8026BF48  ( 00000000 )
  608:  	EndThread
  610:  EndIf
  618:  Call  ChooseNextTarget  ( .Iter:Next *Var0 )
  62C:  If  *Var0  !=  FFFFFFFF
  63C:  	Goto  0
  648:  EndIf
  650:  Call  WaitForBuffDone ( )
  65C:  Wait  1`
  668:  Call  UseBattleCamPreset    ( 00000002 )
  678:  Wait  10`
  684:  Call  YieldTurn ( )
  690:  Call  EnableIdleScript      ( .Actor:Self 00000001 )
  6A4:  Call  UseIdleAnimation      ( .Actor:Self .True )
  6B8:  Return
  6C0:  End
}

% Origin: HINT
#new:Script $Script_TakeTurn_8022DEE4
{
    0:  Call  CountPlayerTargets    ( .Actor:Self 00008002 *Var0 )
   18:  If  *Var0  ==  00000001
   28:  	ExecWait  $Script_WMagikoopa_RunAway
   34:  	Return
   3C:  EndIf
   44:  Set   *VarA  00000000
   54:  Set   *VarB  00000000
   64:  Call  EnemyCreateTargetList ( 00008002 )
   74:  Call  InitTargetIterator ( )
   80:  Label  0
   8C:  Set   *Flag[00]  .False
   9C:  Call  GetOwnerTarget        ( *Var0 *Var1 )
   B0:  Call  GetOriginalActorType  ( *Var0 *Var1 )
   C4:  If  *Var1  ==  00000047
   D4:  	Call  GetActorVar   ( *Var0 00000008 *Var1 )
   EC:  	If  *Var1  ==  00000001
   FC:  		Set   *Flag[00]  .True
  10C:  	EndIf
  114:  EndIf
  11C:  If  *Flag[00]  ==  .False
  12C:  	Call  GetActorHP    ( *Var0 *Var2 )
  140:  	Call  GetEnemyMaxHP ( *Var0 *Var3 )
  154:  	If  *Var2  !=  *Var3
  164:  		Add   *VarA  00000001
  174:  	EndIf
  17C:  	Add   *VarB  00000001
  18C:  EndIf
  194:  Call  ChooseNextTarget  ( .Iter:Next *Var0 )
  1A8:  If  *Var0  !=  FFFFFFFF
  1B8:  	Goto  0
  1C4:  EndIf
  1CC:  Mul   *VarA  00000064
  1DC:  Div   *VarA  *VarB
  1EC:  Switch  *VarA
  1F8:  	Case  >=  0000003C
  204:  		ExecWait  $Script_HealAll
  210:  	Case  ==  00000000
  21C:  		Call  GetActorFlags ( .Actor:Self *Var0 )
  230:  		If  *Var0  &  00000200
  240:  			ExecWait  $Script_WMagikoopa_ShapeSpell
  24C:  		Else
  254:  			ExecWait  $Script_WMagikoopa_WandStrike
  260:  		EndIf
  268:  	Default
  270:  		ExecWait  $Script_HealOne
  27C:  EndSwitch
  284:  Return
  28C:  End
}

PADDING: 8022E178 to 8022E180 (005C7628 to 005C7630)
00000000 00000000

#new:DefenseTable $DefenseTable_8022E180
{
	.Element:Normal 00000000
	.Element:End
}

#new:DefenseTable $DefenseTable_8022E18C
{
	.Element:Normal 00000000
	.Element:End
}

#new:StatusTable $StatusTable_8022E198
{
	.Status:Normal      0`
	.Status:Default     0`
	.Status:Sleep      50`
	.Status:Poison     50`
	.Status:Frozen      0`
	.Status:Dizzy      75`
	.Status:Fear        0`
	.Status:Static     50`
	.Status:Paralyze   75`
	.Status:Shrink     80`
	.Status:Stop       90`
	.Status:DefaultTurnMod    0`
	.Status:SleepTurnMod      0`
	.Status:PoisonTurnMod     0`
	.Status:FrozenTurnMod     0`
	.Status:DizzyTurnMod      0`
	.Status:FearTurnMod       0`
	.Status:StaticTurnMod     0`
	.Status:ParalyzeTurnMod   0`
	.Status:ShrinkTurnMod     0`
	.Status:StopTurnMod      -1`
	.Status:End
}

#new:StatusTable $StatusTable_8022E244
{
	.Status:Normal      0`
	.Status:Default     0`
	.Status:Sleep      50`
	.Status:Poison     50`
	.Status:Frozen      0`
	.Status:Dizzy     100`
	.Status:Fear        0`
	.Status:Static     50`
	.Status:Paralyze   75`
	.Status:Shrink     80`
	.Status:Stop       90`
	.Status:DefaultTurnMod    0`
	.Status:SleepTurnMod      0`
	.Status:PoisonTurnMod     0`
	.Status:FrozenTurnMod     0`
	.Status:DizzyTurnMod      0`
	.Status:FearTurnMod       0`
	.Status:StaticTurnMod     0`
	.Status:ParalyzeTurnMod   0`
	.Status:ShrinkTurnMod     0`
	.Status:StopTurnMod      -1`
	.Status:End
}

#new:PartsTable $PartsTable_8022E2F0
{
	00800000 01000000 022300FF $IdleAnimations_8022E3D0 $DefenseTable_8022E180 00000000 00000000 FBF40000 00000000
}

#new:PartsTable $PartsTable_8022E314
{
	00020001 01000000 022300FF $IdleAnimations_8022E3D0 $DefenseTable_8022E18C 00000000 00000000 FBF40000 00000000
	00800000 02000000 F62300FF $IdleAnimations_8022E41C $DefenseTable_8022E18C 00800000 00000000 00F80000 00000000
	00020001 03000000 000000FF $IdleAnimations_8022E468 $DefenseTable_8022E18C 00000000 00000000 00000000 00000000
}

#new:Actor $YMagikoopa
{
	% stats
	[Index]        55b
	[Level]        21`b
	[MaxHP]        11`b
	[Coins]         2`b
	[Flags]       00000000
	[StatusTable] $StatusTable_8022E198
	% ai
	[PartsCount]    1`s
	[PartsTable]  $PartsTable_8022E2F0
	[Script]      $Script_Init_802305B8
	% move effectiveness
	[Escape]       40`b
	[Item]         40`b
	[AirLift]      80`b
	[Hurricane]    70`b % Bow's "Spook" as well
	[UpAndAway]    95`b
	[PowerBounce]  80`b
	[SpinSmash]     0`b % weight (0-4)
	% ui positions
	[Size]         36`b  40`b % width height
	[HealthBar]     0`b   0`b % dx dy
	[StatusTurn]  -10`b  20`b % dx dy
	[StatusIcon]   10`b  32`b % dx dy
}

#new:Actor $FlyingYMagikoopa
{
	% stats
	[Index]        56b
	[Level]        21`b
	[MaxHP]        11`b
	[Coins]         2`b
	[Flags]       00000200
	[StatusTable] $StatusTable_8022E244
	% ai
	[PartsCount]    3`s
	[PartsTable]  $PartsTable_8022E314
	[Script]      $Script_Init_8023065C
	% move effectiveness
	[Escape]       40`b
	[Item]         40`b
	[AirLift]      95`b
	[Hurricane]    75`b % Bow's "Spook" as well
	[UpAndAway]    95`b
	[PowerBounce]  80`b
	[SpinSmash]     0`b % weight (0-4)
	% ui positions
	[Size]         48`b  40`b % width height
	[HealthBar]     0`b   0`b % dx dy
	[StatusTurn]  -25`b  20`b % dx dy
	[StatusIcon]    1`b  34`b % dx dy
}

#new:IdleAnimations $IdleAnimations_8022E3D0
{
	.Status:Normal    00560201
	.Status:Stone     00560200
	.Status:Sleep     00560208
	.Status:Poison    00560201
	.Status:Stop      00560200
	.Status:Static    00560201
	.Status:Paralyze  00560200
	.Status:Dizzy     00560207
	.Status:Fear      00560207
	.Status:End
}

#new:IdleAnimations $IdleAnimations_8022E41C
{
	.Status:Normal    00570201
	.Status:Stone     00570200
	.Status:Sleep     00570208
	.Status:Poison    00570201
	.Status:Stop      00570200
	.Status:Static    00570201
	.Status:Paralyze  00570200
	.Status:Dizzy     00570207
	.Status:Fear      00570207
	.Status:End
}

#new:IdleAnimations $IdleAnimations_8022E468
{
	.Status:Normal    0057020A
	.Status:End
}

#new:Script $Script_Idle_8022E474
{
    0:  Return
    8:  End
}

#new:Script $Script_HandleEvent_8022E484
{
    0:  Call  UseIdleAnimation  ( .Actor:Self .False )
   14:  Call  EnableIdleScript  ( .Actor:Self 00000000 )
   28:  Call  GetLastEvent      ( .Actor:Self *Var0 )
   3C:  Switch  *Var0
   48:  	CaseOR  ==  .Event:HitCombo % 9
   54:  	CaseOR  ==  .Event:Hit % A
   60:  		SetConst  *Var0  00000001
   70:  		SetConst  *Var1  00560204
   80:  		ExecWait  DoNormalHit
   8C:  	EndCaseGroup
   94:  	Case  ==  .Event:BurnHit % E
   A0:  		SetConst  *Var0  00000001
   B0:  		SetConst  *Var1  00560205
   C0:  		SetConst  *Var2  00560206
   D0:  		ExecWait  DoBurnHit
   DC:  	Case  ==  .Event:BurnDeath % 24
   E8:  		SetConst  *Var0  00000001
   F8:  		SetConst  *Var1  00560205
  108:  		SetConst  *Var2  00560206
  118:  		ExecWait  DoBurnHit
  124:  		SetConst  *Var0  00000001
  134:  		SetConst  *Var1  00560206
  144:  		ExecWait  DoDeath
  150:  		Return
  158:  	Case  ==  .Event:SpinSmashHit % B
  164:  		SetConst  *Var0  00000001
  174:  		SetConst  *Var1  00560204
  184:  		ExecWait  DoSpinSmashHit
  190:  	Case  ==  .Event:SpinSmashDeath % 21
  19C:  		SetConst  *Var0  00000001
  1AC:  		SetConst  *Var1  00560204
  1BC:  		ExecWait  DoSpinSmashHit
  1C8:  		SetConst  *Var0  00000001
  1D8:  		SetConst  *Var1  00560204
  1E8:  		ExecWait  DoDeath
  1F4:  		Return
  1FC:  	CaseOR  ==  00000017 % 17
  208:  	CaseOR  ==  .Event:Immune % 19
  214:  	CaseOR  ==  .Event:AirLiftFailed % 1F
  220:  		SetConst  *Var0  00000001
  230:  		SetConst  *Var1  00560201
  240:  		ExecWait  DoImmune
  24C:  	EndCaseGroup
  254:  	Case  ==  .Event:Death % 20
  260:  		SetConst  *Var0  00000001
  270:  		SetConst  *Var1  00560204
  280:  		ExecWait  DoNormalHit
  28C:  		Wait  10`
  298:  		SetConst  *Var0  00000001
  2A8:  		SetConst  *Var1  00560204
  2B8:  		ExecWait  DoDeath
  2C4:  		Return
  2CC:  	Case  ==  .Event:RecoverStatus % 31
  2D8:  		SetConst  *Var0  00000001
  2E8:  		SetConst  *Var1  00560201
  2F8:  		ExecWait  DoRecover
  304:  	Case  ==  .Event:ScareAway % 39
  310:  		Call  SetAnimation  ( .Actor:Self 00000001 00560204 )
  328:  		Call  SetActorJumpGravity   ( .Actor:Self *Fixed[1.5] )
  33C:  		Call  GetActorPos   ( .Actor:Self *Var0 *Var1 *Var2 )
  358:  		Call  SetGoalPos    ( .Actor:Self *Var0 *Var1 *Var2 )
  374:  		Call  JumpToGoal    ( .Actor:Self  15` .False .True .False )
  394:  		Wait  15`
  3A0:  		Call  SetAnimation  ( .Actor:Self 00000001 00560202 )
  3B8:  		ExecWait  $Script_YMagikoopa_RunAway
  3C4:  		Return
  3CC:  	Case  ==  .Event:BeginAirLift % 3A
  3D8:  		SetConst  *Var0  00000001
  3E8:  		SetConst  *Var1  00560202
  3F8:  		ExecWait  DoAirLift
  404:  	Case  ==  .Event:BlowAway % 16
  410:  		Call  GetStatusFlags    ( .Actor:Self *Var0 )
  424:  		If  *Var0  !&  ~Flags:StatusFlags:Sleep|Frozen|Fear|Paralyze|Dizzy|Stone|Stop % 35D000
  434:  			If  *Var0  &  ~Flags:StatusFlags:Shrink % 80000
  444:  				Call  SetPartDispOffset ( .Actor:Self 00000001 00000000 00000002 00000000 )
  464:  			Else
  46C:  				Call  SetPartDispOffset ( .Actor:Self 00000001 FFFFFFFC 00000005 00000000 )
  48C:  			EndIf
  494:  		EndIf
  49C:  		SetConst  *Var0  00000001
  4AC:  		SetConst  *Var1  00560204
  4BC:  		ExecWait  DoBlowAway
  4C8:  		Return
  4D0:  	Default
  4D8:  EndSwitch
  4E0:  Call  EnableIdleScript  ( .Actor:Self 00000001 )
  4F4:  Call  UseIdleAnimation  ( .Actor:Self .True )
  508:  Return
  510:  End
}

#new:Script $Script_8022E99C
{
    0:  Call  GetBattleFlags    ( *Var0 )
   10:  If  *Var0  !&  00080000
   20:  	If  *Var0  &  00000240
   30:  		Call  SetActorVar   ( .Actor:Self 00000000 00000001 )
   48:  	EndIf
   50:  Else
   58:  	Call  $Function_80219208    ( *Var0 )
   68:  	Switch  *Var0
   74:  		CaseOR  ==  00000083
   80:  		CaseOR  ==  00000084
   8C:  		CaseOR  ==  00000085
   98:  		CaseOR  ==  00000088
   A4:  			Call  GetBattleFlags    ( *Var0 )
   B4:  			If  *Var0  &  00000240
   C4:  				Call  SetActorVar   ( .Actor:Self 00000000 00000001 )
   DC:  			EndIf
   E4:  		EndCaseGroup
   EC:  	EndSwitch
   F4:  EndIf
   FC:  Return
  104:  End
}

#new:Script $Script_8022EAA8
{
    0:  Call  GetActorVar   ( .Actor:Self 00000000 *Var0 )
   18:  If  *Var0  ==  00000001
   28:  	Call  SetAnimation  ( .Actor:Self 00000001 00560204 )
   40:  	Goto  0
   4C:  EndIf
   54:  Call  GetLastElement    ( *Var0 )
   64:  If  *Var0  &  00000400
   74:  	Call  SetAnimation  ( .Actor:Self 00000001 00560204 )
   8C:  	Goto  0
   98:  EndIf
   A0:  Return
   A8:  Label  0
   B4:  Call  8027D32C  ( FFFFFF81 )
   C4:  Call  GetStatusFlags    ( .Actor:Self *Var0 )
   D8:  If  *Var0  &  ~Flags:StatusFlags:Shrink % 80000
   E8:  	Call  SetPartScale  ( .Actor:Self 00000003 *Fixed[0.4] *Fixed[0.4] *Fixed[0.4] )
  108:  EndIf
  110:  Call  SetPartFlagBits   ( .Actor:Self 00000001 00800000 .True )
  12C:  Call  SetPartFlagBits   ( .Actor:Self 00000001 00020001 .False )
  148:  Call  SetPartFlagBits   ( .Actor:Self 00000002 00020001 .True )
  164:  Call  SetPartFlagBits   ( .Actor:Self 00000002 00800000 .False )
  180:  Call  SetPartFlagBits   ( .Actor:Self 00000003 00100000 .True )
  19C:  Call  SetPartFlagBits   ( .Actor:Self 00000003 00000001 .False )
  1B8:  Call  GetActorPos       ( .Actor:Self *Var0 *Var1 *Var2 )
  1D4:  Sub   *Var2  00000001
  1E4:  Call  SetPartPos        ( .Actor:Self 00000003 *Var0 *Var1 *Var2 )
  204:  Call  PlaySoundAtActor  ( .Actor:Self 00000301 )
  218:  Call  GetActorPos       ( .Actor:Self *Var0 *Var1 *Var2 )
  234:  Set   *Var1  00000000
  244:  Call  SetActorJumpGravity   ( .Actor:Self *Fixed[0.8] )
  258:  Call  SetGoalPos        ( .Actor:Self *Var0 *Var1 *Var2 )
  274:  Call  JumpToGoal        ( .Actor:Self  15` .False .True .False )
  294:  Call  $Function_80219300    ( 00000096 0000000A )
  2A8:  Thread
  2B0:  	Call  ShakeCam  ( .Cam:Battle 00000000  5` *Fixed[0.7] )
  2CC:  EndThread
  2D4:  Call  GetLastEvent  ( .Actor:Self *Var3 )
  2E8:  If  *Var3  ==  0000000F % F
  2F8:  	Call  SetAnimation  ( .Actor:Self 00000001 00560204 )
  310:  	Call  GetActorPos   ( .Actor:Self *Var3 *Var4 *Var5 )
  32C:  	Add   *Var4  0000000A
  33C:  	Add   *Var5  00000005
  34C:  	Call  PlayEffect    ( ~FX:SmokeBurst:Black *Var3 *Var4 *Var5 *Fixed[1.0] 0000000A 00000000 00000000 00000000 00000000 00000000 00000000 00000000 )
  390:  EndIf
  398:  Call  SetGoalPos    ( .Actor:Self *Var0 *Var1 *Var2 )
  3B4:  Call  JumpToGoal    ( .Actor:Self  10` .False .True .False )
  3D4:  Call  SetGoalPos    ( .Actor:Self *Var0 *Var1 *Var2 )
  3F0:  Call  JumpToGoal    ( .Actor:Self  5` .False .True .False )
  410:  Loop  00000014
  41C:  	Call  SetPartFlagBits   ( .Actor:Self 00000003 00000001 .True )
  438:  	Wait  1`
  444:  	Call  SetPartFlagBits   ( .Actor:Self 00000003 00000001 .False )
  460:  	Wait  1`
  46C:  EndLoop
  474:  Call  SetPartFlagBits   ( .Actor:Self 00000003 00000001 .True )
  490:  Call  SetAnimation      ( .Actor:Self 00000001 00560201 )
  4A8:  Call  SetActorFlagBits  ( .Actor:Self 00000200 .False )
  4C0:  Call  BindHandleEvent   ( .Actor:Self $Script_HandleEvent_8022E484 )
  4D4:  Call  SetActorType      ( .Actor:Self 00000055 )
  4E8:  Call  SetStatusTable    ( .Actor:Self $StatusTable_8022E198 )
  4FC:  Call  $Function_80219234    ( FFFFFFF6 00000014 0000000A 00000020 )
  518:  Call  SetActorFlagBits  ( .Actor:Self 00001000 .True )
  530:  Call  ResetAllActorSounds   ( .Actor:Self )
  540:  Call  GetIndexFromPos   ( .Actor:Self *Var0 )
  554:  Mod   *Var0  00000004
  564:  Call  SetGoalToIndex    ( .Actor:Self *Var0 )
  578:  Call  SetActorSpeed     ( .Actor:Self *Fixed[4.0] )
  58C:  Call  RunToGoal ( .Actor:Self  0` .False )
  5A4:  Call  GetGoalPos        ( .Actor:Self *Var0 *Var1 *Var2 )
  5C0:  Call  ForceHomePos      ( .Actor:Self *Var0 *Var1 *Var2 )
  5DC:  Call  HPBarToHome       ( .Actor:Self )
  5EC:  Return
  5F4:  End
}

#new:Script $Script_HandleEvent_8022F0A4
{
    0:  Call  UseIdleAnimation  ( .Actor:Self .False )
   14:  Call  EnableIdleScript  ( .Actor:Self 00000000 )
   28:  Call  GetLastEvent      ( .Actor:Self *Var0 )
   3C:  Switch  *Var0
   48:  	Case  ==  .Event:HitCombo % 9
   54:  		ExecWait  $Script_8022E99C
   60:  		SetConst  *Var0  00000002
   70:  		SetConst  *Var1  00570204
   80:  		ExecWait  DoNormalHit
   8C:  	CaseOR  ==  .Event:Hit % A
   98:  	CaseOR  ==  .Event:FallTrigger % C
   A4:  		ExecWait  $Script_8022E99C
   B0:  		SetConst  *Var0  00000002
   C0:  		SetConst  *Var1  00570204
   D0:  		ExecWait  DoNormalHit
   DC:  		ExecWait  $Script_8022EAA8
   E8:  	EndCaseGroup
   F0:  	CaseOR  ==  .Event:BurnHit % E
   FC:  	CaseOR  ==  0000000F % F
  108:  		ExecWait  $Script_8022E99C
  114:  		SetConst  *Var0  00000002
  124:  		SetConst  *Var1  00570205
  134:  		SetConst  *Var2  00570206
  144:  		ExecWait  DoBurnHit
  150:  		ExecWait  $Script_8022EAA8
  15C:  	EndCaseGroup
  164:  	Case  ==  .Event:BurnDeath % 24
  170:  		SetConst  *Var0  00000002
  180:  		SetConst  *Var1  00570205
  190:  		SetConst  *Var2  00570206
  1A0:  		ExecWait  DoBurnHit
  1AC:  		SetConst  *Var0  00000002
  1BC:  		SetConst  *Var1  00570206
  1CC:  		ExecWait  DoDeath
  1D8:  		Return
  1E0:  	Case  ==  .Event:SpinSmashHit % B
  1EC:  		SetConst  *Var0  00000002
  1FC:  		SetConst  *Var1  00570204
  20C:  		ExecWait  DoSpinSmashHit
  218:  	Case  ==  .Event:SpinSmashDeath % 21
  224:  		SetConst  *Var0  00000002
  234:  		SetConst  *Var1  00570204
  244:  		ExecWait  DoSpinSmashHit
  250:  		SetConst  *Var0  00000002
  260:  		SetConst  *Var1  00570204
  270:  		ExecWait  DoDeath
  27C:  		Return
  284:  	CaseOR  ==  00000017 % 17
  290:  	CaseOR  ==  .Event:Immune % 19
  29C:  	CaseOR  ==  .Event:AirLiftFailed % 1F
  2A8:  		SetConst  *Var0  00000002
  2B8:  		SetConst  *Var1  00570201
  2C8:  		ExecWait  DoImmune
  2D4:  	EndCaseGroup
  2DC:  	Case  ==  .Event:Death % 20
  2E8:  		SetConst  *Var0  00000002
  2F8:  		SetConst  *Var1  00570204
  308:  		ExecWait  DoNormalHit
  314:  		Wait  10`
  320:  		SetConst  *Var0  00000002
  330:  		SetConst  *Var1  00570204
  340:  		ExecWait  DoDeath
  34C:  		Return
  354:  	Case  ==  .Event:BeginFirstStrike % 38
  360:  		Call  SetActorPos       ( .Actor:Self  20`  0`  0` )
  37C:  		Call  HPBarToCurrent    ( .Actor:Self )
  38C:  	Case  ==  .Event:EndFirstStrike % 35
  398:  		Call  SetAnimation  ( .Actor:Self 00000002 00570201 )
  3B0:  		Call  SetGoalToHome ( .Actor:Self )
  3C0:  		Call  SetActorSpeed ( .Actor:Self *Fixed[4.0] )
  3D4:  		Call  FlyToGoal     ( .Actor:Self  0`  1` .Easing:Linear )
  3F0:  		Call  SetAnimation  ( .Actor:Self 00000002 00570201 )
  408:  		Call  HPBarToHome   ( .Actor:Self )
  418:  	Case  ==  .Event:RecoverStatus % 31
  424:  		SetConst  *Var0  00000002
  434:  		SetConst  *Var1  00570201
  444:  		ExecWait  DoRecover
  450:  	Case  ==  .Event:ScareAway % 39
  45C:  		Call  SetAnimation  ( .Actor:Self 00000002 00570204 )
  474:  		Call  SetActorJumpGravity   ( .Actor:Self *Fixed[1.5] )
  488:  		Call  GetActorPos   ( .Actor:Self *Var0 *Var1 *Var2 )
  4A4:  		Call  SetGoalPos    ( .Actor:Self *Var0 *Var1 *Var2 )
  4C0:  		Call  JumpToGoal    ( .Actor:Self  15` .False .True .False )
  4E0:  		Wait  15`
  4EC:  		Call  SetAnimation  ( .Actor:Self 00000002 00570202 )
  504:  		ExecWait  $Script_YMagikoopa_RunAway
  510:  		Return
  518:  	Case  ==  .Event:BeginAirLift % 3A
  524:  		SetConst  *Var0  00000002
  534:  		SetConst  *Var1  00570202
  544:  		ExecWait  DoAirLift
  550:  	Case  ==  .Event:BlowAway % 16
  55C:  		Call  GetStatusFlags    ( .Actor:Self *Var0 )
  570:  		If  *Var0  !&  ~Flags:StatusFlags:Sleep|Frozen|Fear|Paralyze|Dizzy|Stone|Stop % 35D000
  580:  			If  *Var0  &  ~Flags:StatusFlags:Shrink % 80000
  590:  				Call  SetPartDispOffset ( .Actor:Self 00000002 FFFFFFFD 00000000 00000000 )
  5B0:  			Else
  5B8:  				Call  SetPartDispOffset ( .Actor:Self 00000002 FFFFFFF1 00000000 00000000 )
  5D8:  			EndIf
  5E0:  		EndIf
  5E8:  		SetConst  *Var0  00000002
  5F8:  		SetConst  *Var1  00570204
  608:  		ExecWait  DoBlowAway
  614:  		Return
  61C:  	Default
  624:  EndSwitch
  62C:  Call  EnableIdleScript  ( .Actor:Self 00000001 )
  640:  Call  UseIdleAnimation  ( .Actor:Self .True )
  654:  Return
  65C:  End
}

#new:Script $Script_YMagikoopa_ShapeSpell
{
    0:  Call  UseIdleAnimation  ( .Actor:Self .False )
   14:  Call  EnableIdleScript  ( .Actor:Self 00000000 )
   28:  Call  SetTargetActor    ( .Actor:Self .Actor:Player )
   3C:  Call  GetBattlePhase    ( *Var0 )
   4C:  If  *Var0  ==  00000001
   5C:  	Call  UseBattleCamPreset    ( 00000002 )
   6C:  	Call  MoveBattleCamOver     (  1` )
   7C:  Else
   84:  	Call  UseBattleCamPreset    ( 00000002 )
   94:  	Call  MoveBattleCamOver     (  10` )
   A4:  EndIf
   AC:  Call  PlaySoundAtActor  ( .Actor:Self .Sound:SpellCast1 )
   C0:  Call  GetActorPos       ( .Actor:Self *Var0 *Var1 *Var2 )
   DC:  Call  GetStatusFlags    ( .Actor:Self *VarA )
   F0:  If  *VarA  &  ~Flags:StatusFlags:Shrink % 80000
  100:  	Sub   *Var0  0000000C
  110:  	Add   *Var1  0000000E
  120:  Else
  128:  	Sub   *Var0  0000001E
  138:  	Add   *Var1  00000024
  148:  EndIf
  150:  Call  PlayEffect        ( ~FX:GatherMagic:Pink *Var0 *Var1 *Var2 *Fixed[0.5] 0000001E 00000000 00000000 00000000 00000000 00000000 00000000 00000000 )
  194:  Call  SetAnimation      ( .Actor:Self 00000002 00570202 )
  1AC:  Wait  30`
  1B8:  Call  EnemyTestTarget   ( .Actor:Self *Var0 ~Flags:DamageType:0 00000000 00000001 00000010 )
  1DC:  Switch  *Var0
  1E8:  	CaseOR  ==  .HitResult:Miss % 6
  1F4:  	CaseOR  ==  .HitResult:Lucky % 5
  200:  		Set   *VarA  *Var0
  210:  		Call  PlaySoundAtActor  ( .Actor:Self .Sound:SpellCast2 )
  224:  		Call  SetAnimation      ( .Actor:Self 00000002 00570203 )
  23C:  		Wait  5`
  248:  		Call  GetActorPos       ( .Actor:Self *Var0 *Var1 *Var2 )
  264:  		Call  GetStatusFlags    ( .Actor:Self *Var9 )
  278:  		If  *Var9  &  ~Flags:StatusFlags:Shrink % 80000
  288:  			Sub   *Var0  00000008
  298:  			Add   *Var1  00000008
  2A8:  		Else
  2B0:  			Sub   *Var0  00000014
  2C0:  			Add   *Var1  00000014
  2D0:  		EndIf
  2D8:  		Call  SetGoalToTarget       ( .Actor:Self )
  2E8:  		Call  GetGoalPos    ( .Actor:Self *Var3 *Var4 *Var5 )
  304:  		Sub   *Var3  00000032
  314:  		Set   *Var4  00000000
  324:  		Call  $Function_802190B0    ( *Var0 *Var1 *Var5 *Var3 *Var4 *Var5 00000019 )
  34C:  		Wait  50`
  358:  		If  *VarA  ==  .HitResult:Lucky % 5
  368:  			Call  EnemyTestTarget   ( .Actor:Self *Var0 ~Flags:DamageType:TriggerLucky 00000000 00000000 00000000 )
  38C:  		EndIf
  394:  		Wait  14`
  3A0:  		Call  YieldTurn ( )
  3AC:  		Call  AddActorDecoration    ( .Actor:Self 00000002 00000000 .Decoration:Sweat )
  3C8:  		Wait  30`
  3D4:  		Call  RemoveActorDecoration ( .Actor:Self 00000002 00000000 )
  3EC:  		Call  EnableIdleScript      ( .Actor:Self 00000001 )
  400:  		Call  UseIdleAnimation      ( .Actor:Self .True )
  414:  		Return
  41C:  	EndCaseGroup
  424:  EndSwitch
  42C:  Call  PlaySoundAtActor  ( .Actor:Self .Sound:SpellCast2 )
  440:  Call  SetAnimation      ( .Actor:Self 00000002 00570203 )
  458:  Wait  5`
  464:  Call  GetActorPos       ( .Actor:Self *Var0 *Var1 *Var2 )
  480:  Call  GetStatusFlags    ( .Actor:Self *VarA )
  494:  If  *VarA  &  ~Flags:StatusFlags:Shrink % 80000
  4A4:  	Sub   *Var0  00000008
  4B4:  	Add   *Var1  00000008
  4C4:  Else
  4CC:  	Sub   *Var0  00000014
  4DC:  	Add   *Var1  00000014
  4EC:  EndIf
  4F4:  Call  SetGoalToTarget   ( .Actor:Self )
  504:  Call  GetGoalPos        ( .Actor:Self *Var3 *Var4 *Var5 )
  520:  Sub   *Var3  0000000A
  530:  Call  $Function_802190B0    ( *Var0 *Var1 *Var5 *Var3 *Var4 *Var5 00000014 )
  558:  Wait  18`
  564:  Wait  2`
  570:  Call  EnemyDamageTarget ( .Actor:Self *Var0 ~Flags:DamageType:NoContact|Magic 00000000 00000000 00000003 00000020 )
  598:  Switch  *Var0
  5A4:  	CaseOR  ==  .HitResult:Hit % 0
  5B0:  	CaseOR  ==  .HitResult:QuakeImmune % 2
  5BC:  		Wait  19`
  5C8:  		Call  YieldTurn ( )
  5D4:  	EndCaseGroup
  5DC:  EndSwitch
  5E4:  Call  EnableIdleScript  ( .Actor:Self 00000001 )
  5F8:  Call  UseIdleAnimation  ( .Actor:Self .True )
  60C:  Return
  614:  End
}

#new:Script $Script_YMagikoopa_WandStrike
{
    0:  Call  UseIdleAnimation  ( .Actor:Self .False )
   14:  Call  EnableIdleScript  ( .Actor:Self 00000000 )
   28:  Call  SetTargetActor    ( .Actor:Self .Actor:Player )
   3C:  Call  UseBattleCamPreset    ( 0000003F )
   4C:  Call  BattleCamTargetActor  ( .Actor:Self )
   5C:  Call  8024ECF8  ( FFFFFFFF 00000001 00000000 )
   74:  Call  PlaySoundAtActor  ( .Actor:Self 000002DB )
   88:  Thread
   90:  	Call  SetAnimation  ( .Actor:Self 00000001 00560202 )
   A8:  	Set   *Var0  000000C8
   B8:  	Loop  00000014
   C4:  		Sub   *Var0  0000000A
   D4:  		Call  SetPartAlpha  ( .Actor:Self 00000001 *Var0 )
   EC:  		Wait  1`
   F8:  	EndLoop
  100:  EndThread
  108:  Wait  10`
  114:  Call  SetGoalToTarget   ( .Actor:Self )
  124:  Call  GetGoalPos        ( .Actor:Self *Var0 *Var1 *Var2 )
  140:  Call  GetStatusFlags    ( .Actor:Self *VarA )
  154:  If  *VarA  &  ~Flags:StatusFlags:Shrink % 80000
  164:  	Add   *Var0  00000005
  174:  Else
  17C:  	Add   *Var0  00000019
  18C:  EndIf
  194:  Set   *Var1  00000000
  1A4:  Call  SetGoalPos    ( .Actor:Self *Var0 *Var1 *Var2 )
  1C0:  Call  FlyToGoal     ( .Actor:Self  30`  0` .Easing:CosInOut )
  1DC:  Set   *Var0  00000037
  1EC:  Loop  00000014
  1F8:  	Add   *Var0  0000000A
  208:  	Call  SetPartAlpha  ( .Actor:Self 00000001 *Var0 )
  220:  	Wait  1`
  22C:  EndLoop
  234:  Call  SetPartAlpha      ( .Actor:Self 00000001 000000FF )
  24C:  Call  SetAnimation      ( .Actor:Self 00000001 00560203 )
  264:  Wait  11`
  270:  Call  PlaySoundAtActor  ( .Actor:Self 000002DC )
  284:  Call  EnemyTestTarget   ( .Actor:Self *Var0 ~Flags:DamageType:0 00000000 00000001 00000010 )
  2A8:  Switch  *Var0
  2B4:  	CaseOR  ==  .HitResult:Miss % 6
  2C0:  	CaseOR  ==  .HitResult:Lucky % 5
  2CC:  		Set   *VarA  *Var0
  2DC:  		Call  UseBattleCamPreset    ( 00000002 )
  2EC:  		If  *VarA  ==  .HitResult:Lucky % 5
  2FC:  			Call  EnemyTestTarget   ( .Actor:Self *Var0 ~Flags:DamageType:TriggerLucky 00000000 00000000 00000000 )
  320:  		EndIf
  328:  		Wait  15`
  334:  		Set   *Var0  000000C8
  344:  		Loop  00000014
  350:  			Sub   *Var0  0000000A
  360:  			Call  SetPartAlpha  ( .Actor:Self 00000001 *Var0 )
  378:  			Wait  1`
  384:  		EndLoop
  38C:  		Call  YieldTurn ( )
  398:  		Call  SetGoalToHome ( .Actor:Self )
  3A8:  		Call  SetAnimation  ( .Actor:Self 00000001 00560201 )
  3C0:  		Call  FlyToGoal     ( .Actor:Self  30`  0` .Easing:CosInOut )
  3DC:  		Set   *Var0  00000037
  3EC:  		Loop  00000014
  3F8:  			Add   *Var0  0000000A
  408:  			Call  SetPartAlpha  ( .Actor:Self 00000001 *Var0 )
  420:  			Wait  1`
  42C:  		EndLoop
  434:  		Call  SetPartAlpha      ( .Actor:Self 00000001 000000FF )
  44C:  		Call  EnableIdleScript  ( .Actor:Self 00000001 )
  460:  		Call  UseIdleAnimation  ( .Actor:Self .True )
  474:  		Return
  47C:  	EndCaseGroup
  484:  EndSwitch
  48C:  Call  SetGoalToTarget   ( .Actor:Self )
  49C:  Wait  2`
  4A8:  Call  EnemyDamageTarget ( .Actor:Self *Var0 ~Flags:DamageType:NoContact 00000000 00000000 00000003 00000020 )
  4D0:  Switch  *Var0
  4DC:  	CaseOR  ==  .HitResult:Hit % 0
  4E8:  	CaseOR  ==  .HitResult:QuakeImmune % 2
  4F4:  		Call  UseBattleCamPreset    ( 00000002 )
  504:  		Wait  10`
  510:  		Set   *Var0  000000C8
  520:  		Loop  00000014
  52C:  			Sub   *Var0  0000000A
  53C:  			Call  SetPartAlpha  ( .Actor:Self 00000001 *Var0 )
  554:  			Wait  1`
  560:  		EndLoop
  568:  		Call  YieldTurn ( )
  574:  		Call  SetGoalToHome ( .Actor:Self )
  584:  		Call  SetAnimation  ( .Actor:Self 00000001 00560201 )
  59C:  		Call  FlyToGoal     ( .Actor:Self  20`  0` .Easing:CosInOut )
  5B8:  		Set   *Var0  00000037
  5C8:  		Loop  00000014
  5D4:  			Add   *Var0  0000000A
  5E4:  			Call  SetPartAlpha  ( .Actor:Self 00000001 *Var0 )
  5FC:  			Wait  1`
  608:  		EndLoop
  610:  		Call  SetPartAlpha  ( .Actor:Self 00000001 000000FF )
  628:  	EndCaseGroup
  630:  EndSwitch
  638:  Call  EnableIdleScript  ( .Actor:Self 00000001 )
  64C:  Call  UseIdleAnimation  ( .Actor:Self .True )
  660:  Return
  668:  End
}

#new:Script $Script_YMagikoopa_RunAway
{
    0:  Call  UseIdleAnimation  ( .Actor:Self .False )
   14:  Call  EnableIdleScript  ( .Actor:Self 00000000 )
   28:  Call  8027D32C  ( FFFFFF81 )
   38:  Call  GetLastEvent      ( .Actor:Self *Var0 )
   4C:  If  *Var0  !=  .Event:ScareAway % 39
   5C:  	Call  UseBattleCamPreset    ( 0000000E )
   6C:  	Call  BattleCamTargetActor  ( .Actor:Self )
   7C:  	Call  MoveBattleCamOver     (  15` )
   8C:  	Wait  15`
   98:  	Call  UseBattleCamPreset    ( 00000001 )
   A8:  EndIf
   B0:  Call  SetActorSpeed ( .Actor:Self *Fixed[1.0] )
   C4:  Call  GetActorPos   ( .Actor:Self *Var0 *Var1 *Var2 )
   E0:  Add   *Var0  00000014
   F0:  Call  SetGoalPos    ( .Actor:Self *Var0 *Var1 *Var2 )
  10C:  Call  RunToGoal     ( .Actor:Self  0` .False )
  124:  Wait  10`
  130:  Call  SetActorYaw   ( .Actor:Self  180` )
  144:  Call  EnableActorBlur       ( .Actor:Self 00000001 )
  158:  Call  SetActorSpeed ( .Actor:Self *Fixed[10.0] )
  16C:  Call  GetActorPos   ( .Actor:Self *Var0 *Var1 *Var2 )
  188:  Add   *Var0  000000C8
  198:  Call  SetGoalPos    ( .Actor:Self *Var0 *Var1 *Var2 )
  1B4:  Call  RunToGoal     ( .Actor:Self  0` .False )
  1CC:  Call  YieldTurn ( )
  1D8:  Call  UseBattleCamPreset    ( 00000002 )
  1E8:  ExecWait  ForceNextTarget
  1F4:  Call  8027D32C      ( FFFFFF81 )
  204:  Call  RemoveActor   ( .Actor:Self )
  214:  Return
  21C:  End
}

#new:Script $Script_Init_802305B8
{
    0:  Call  BindIdle      ( .Actor:Self $Script_Idle_8022E474 )
   14:  Call  BindTakeTurn  ( .Actor:Self $Script_TakeTurn_80230700 )
   28:  Call  BindHandleEvent   ( .Actor:Self $Script_HandleEvent_8022E484 )
   3C:  Call  GetBattleVar  ( 00000002 *Var0 )
   50:  If  *Var0  ==  00000000
   60:  	Call  SetBattleVar  ( 00000002 FFFFFFFF )
   74:  EndIf
   7C:  Call  SetActorVar   ( .Actor:Self 00000000 00000000 )
   94:  Return
   9C:  End
}

#new:Script $Script_Init_8023065C
{
    0:  Call  BindIdle      ( .Actor:Self $Script_Idle_8022E474 )
   14:  Call  BindTakeTurn  ( .Actor:Self $Script_TakeTurn_80230700 )
   28:  Call  BindHandleEvent   ( .Actor:Self $Script_HandleEvent_8022F0A4 )
   3C:  Call  GetBattleVar  ( 00000002 *Var0 )
   50:  If  *Var0  ==  00000000
   60:  	Call  SetBattleVar  ( 00000002 FFFFFFFF )
   74:  EndIf
   7C:  Call  SetActorVar   ( .Actor:Self 00000000 00000000 )
   94:  Return
   9C:  End
}

#new:Script $Script_TakeTurn_80230700
{
    0:  Set   *Flag[00]  .False
   10:  Label  A
   1C:  Call  EnemyCreateTargetList ( 00008002 )
   2C:  Call  InitTargetIterator ( )
   38:  Label  0
   44:  Call  GetOwnerTarget    ( *Var0 *Var1 )
   58:  Call  GetIndexFromHome  ( *Var0 *Var1 )
   6C:  Call  GetBattleVar      ( 00000002 *Var2 )
   80:  If  *Var1  >  *Var2
   90:  	Call  $Function_80219358    ( *Var0 *Var3 )
   A4:  	If  *Var3  ==  00000000
   B4:  		Call  GetStatusFlags    ( *Var0 *Var4 )
   C8:  		If  *Var4  !&  ~Flags:StatusFlags:Static|Transparent % 4002000
   D8:  			Set   *Var8  *Var0
   E8:  			Call  SetBattleVar  ( 00000002 *Var1 )
   FC:  			Goto  64
  108:  		EndIf
  110:  	EndIf
  118:  EndIf
  120:  Call  ChooseNextTarget  ( .Iter:Next *Var0 )
  134:  If  *Var0  !=  FFFFFFFF
  144:  	Goto  0
  150:  EndIf
  158:  If  *Flag[00]  ==  .False
  168:  	Set   *Flag[00]  .True
  178:  	Call  SetBattleVar  ( 00000002 FFFFFFFF )
  18C:  	Goto  A
  198:  EndIf
  1A0:  Call  CountPlayerTargets    ( .Actor:Self 00008002 *Var0 )
  1B8:  If  *Var0  ==  00000001
  1C8:  	ExecWait  $Script_YMagikoopa_RunAway
  1D4:  	Return
  1DC:  EndIf
  1E4:  Call  GetActorFlags ( .Actor:Self *Var0 )
  1F8:  If  *Var0  &  00000200
  208:  	ExecWait  $Script_YMagikoopa_ShapeSpell
  214:  Else
  21C:  	ExecWait  $Script_YMagikoopa_WandStrike
  228:  EndIf
  230:  Return
  238:  Label  64
  244:  Call  UseIdleAnimation  ( .Actor:Self .False )
  258:  Call  EnableIdleScript  ( .Actor:Self 00000000 )
  26C:  Call  SetTargetActor    ( .Actor:Self .Actor:Player )
  280:  Call  UseBattleCamPreset    ( 0000000E )
  290:  Call  BattleCamTargetActor  ( .Actor:Self )
  2A0:  Call  MoveBattleCamOver (  15` )
  2B0:  Wait  15`
  2BC:  Call  GetActorFlags     ( .Actor:Self *Var0 )
  2D0:  If  *Var0  !&  00000200
  2E0:  	Call  SetAnimation  ( .Actor:Self 00000001 00560202 )
  2F8:  Else
  300:  	Call  SetAnimation  ( .Actor:Self 00000002 00570202 )
  318:  EndIf
  320:  Wait  5`
  32C:  Call  PlaySoundAtActor  ( .Actor:Self 000002F0 )
  340:  Call  GetActorFlags     ( .Actor:Self *Var0 )
  354:  If  *Var0  !&  00000200
  364:  	Call  GetActorPos       ( .Actor:Self *Var0 *Var1 *Var2 )
  380:  	Call  GetStatusFlags    ( .Actor:Self *VarA )
  394:  	If  *VarA  &  ~Flags:StatusFlags:Shrink % 80000
  3A4:  		Sub   *Var0  00000006
  3B4:  		Add   *Var1  0000000C
  3C4:  		Sub   *Var2  00000002
  3D4:  		Call  PlayEffect    ( ~FX:SnakingStatic *Var0 *Var1 *Var2 *Fixed[0.12] 0000001E 00000000 00000000 00000000 00000000 00000000 00000000 00000000 )
  418:  	Else
  420:  		Sub   *Var0  00000010
  430:  		Add   *Var1  0000001F
  440:  		Sub   *Var2  00000002
  450:  		Call  PlayEffect    ( ~FX:SnakingStatic *Var0 *Var1 *Var2 *Fixed[0.3] 0000001E 00000000 00000000 00000000 00000000 00000000 00000000 00000000 )
  494:  	EndIf
  49C:  Else
  4A4:  	Call  GetActorPos       ( .Actor:Self *Var0 *Var1 *Var2 )
  4C0:  	Call  GetStatusFlags    ( .Actor:Self *VarA )
  4D4:  	If  *VarA  &  ~Flags:StatusFlags:Shrink % 80000
  4E4:  		Sub   *Var0  0000000C
  4F4:  		Add   *Var1  0000000E
  504:  		Sub   *Var2  00000002
  514:  		Call  PlayEffect    ( ~FX:SnakingStatic *Var0 *Var1 *Var2 *Fixed[0.12] 0000001E 00000000 00000000 00000000 00000000 00000000 00000000 00000000 )
  558:  	Else
  560:  		Sub   *Var0  0000001E
  570:  		Add   *Var1  00000024
  580:  		Sub   *Var2  00000002
  590:  		Call  PlayEffect    ( ~FX:SnakingStatic *Var0 *Var1 *Var2 *Fixed[0.3] 0000001E 00000000 00000000 00000000 00000000 00000000 00000000 00000000 )
  5D4:  	EndIf
  5DC:  EndIf
  5E4:  Wait  30`
  5F0:  Call  GetActorFlags ( .Actor:Self *Var0 )
  604:  If  *Var0  !&  00000200
  614:  	Call  SetAnimation  ( .Actor:Self 00000001 00560201 )
  62C:  Else
  634:  	Call  SetAnimation  ( .Actor:Self 00000002 00570201 )
  64C:  EndIf
  654:  Wait  5`
  660:  Thread
  668:  	Wait  10`
  674:  	Loop  00000004
  680:  		Call  PlaySoundAtActor  ( *Var8 000003D2 )
  694:  		Call  RandInt   ( 00000003 *Var0 )
  6A8:  		Add   *Var0  00000003
  6B8:  		Wait  *Var0
  6C4:  	EndLoop
  6CC:  EndThread
  6D4:  Thread
  6DC:  	Call  8026BF48  ( 00000001 )
  6EC:  	Call  ElectrifyActor    ( *Var8 00000003 )
  700:  	Call  8026BF48  ( 00000000 )
  710:  EndThread
  718:  Call  WaitForBuffDone ( )
  724:  Call  UseBattleCamPreset    ( 00000002 )
  734:  Wait  10`
  740:  Call  YieldTurn ( )
  74C:  Call  EnableIdleScript      ( .Actor:Self 00000001 )
  760:  Call  UseIdleAnimation      ( .Actor:Self .True )
  774:  Return
  77C:  End
}

PADDING: 80230E84 to 80230E90 (005CA334 to 005CA340)
00000000 00000000 00000000

#new:Script $Script_80230E90
{
    0:  Label  0
    C:  Call  RandInt   ( 000000FA *Var0 )
   20:  Sub   *Var0  0000007D
   30:  Set   *Var1  00000000
   40:  Call  RandInt   ( 00000028 *Var2 )
   54:  Sub   *Var2  00000064
   64:  Call  RandInt   ( 0000001E *Var3 )
   78:  Add   *Var3  0000005A
   88:  Call  PlayEffect    ( ~FX:FloatingFlower *Var0 *Var1 *Var2 *Var3 00000000 00000000 00000000 00000000 00000000 00000000 00000000 00000000 00000000 )
   CC:  Call  RandInt   ( 00000014 *Var0 )
   E0:  Add   *Var0  00000014
   F0:  Wait  *Var0
   FC:  Goto  0
  108:  Return
  110:  End
}

% Origin: HEURISTIC
#new:Script $Script_80230FA8
{
    0:  Label  0
    C:  Call  RandInt   ( 000000FA *Var0 )
   20:  Sub   *Var0  0000007D
   30:  Set   *Var1  00000000
   40:  Call  RandInt   ( 00000032 *Var2 )
   54:  Add   *Var2  00000047
   64:  Call  RandInt   ( 0000001E *Var3 )
   78:  Add   *Var3  0000005A
   88:  Call  PlayEffect    ( ~FX:FloatingFlower *Var0 *Var1 *Var2 *Var3 00000000 00000000 00000000 00000000 00000000 00000000 00000000 00000000 00000000 )
   CC:  Call  RandInt   ( 0000001E *Var0 )
   E0:  Add   *Var0  00000014
   F0:  Wait  *Var0
   FC:  Goto  0
  108:  Return
  110:  End
}

% Origin: HEURISTIC
#new:Script $Script_802310C0
{
    0:  Label  0
    C:  Call  RandInt   ( 000000FA *Var0 )
   20:  Sub   *Var0  0000007D
   30:  Set   *Var1  00000032
   40:  Call  RandInt   ( 00000028 *Var2 )
   54:  Add   *Var2  FFFFFF84
   64:  Call  RandInt   ( 0000001E *Var3 )
   78:  Add   *Var3  0000005A
   88:  Call  PlayEffect    ( ~FX:FloatingFlower *Var0 *Var1 *Var2 *Var3 00000000 00000000 00000000 00000000 00000000 00000000 00000000 00000000 00000000 )
   CC:  Call  RandInt   ( 0000001E *Var0 )
   E0:  Add   *Var0  00000014
   F0:  Wait  *Var0
   FC:  Goto  0
  108:  Return
  110:  End
}

#new:Unknown $???_802311D8
{
	$ASCII_80234920 $ASCII_80234918 $ASCII_80234910 $ASCII_80234908 $ASCII_80234900 $ASCII_802348F8 $ASCII_802348F0 $ASCII_802348E8
	$ASCII_802348E0 $ASCII_802348D8 $ASCII_802348D0
}

#new:Script $Script_80231204
{
    0:  If  *GB_StoryProgress  >=  .Story:Ch6_DestroyedPuffPuffMachine % 35
   10:  	Call  $Function_80219420 ( )
   1C:  EndIf
   24:  Return
   2C:  End
}

#new:Script $Script_BeforeBattle_80231238
{
    0:  Call  SetSpriteShading  ( FFFFFFFF )
   10:  Call  SetCamBGColor     ( .Cam:Battle  0`  0`  0` )
   2C:  Call  SetGroupEnabled   ( ~Model:flo_bt01:dai_03 00000001 )
   40:  Call  SetGroupEnabled   ( ~Model:flo_bt01:dai_04 00000000 )
   54:  Call  SetGroupEnabled   ( ~Model:flo_bt01:dai_05 00000000 )
   68:  Exec  $Script_80230E90
   74:  ExecWait  $Script_80231204
   80:  Return
   88:  End
}

#new:Script $Script_AfterBattle_802312C8
{
    0:  Return
    8:  End
}

#new:ForegroundModelList $ForegroundModelList_802312D8
{
	FFFFFFFF
	~Model:flo_bt01:o400
	~Model:flo_bt01:o401
	~Model:flo_bt01:o407
	~Model:flo_bt01:o411
	~Model:flo_bt01:o422
	~Model:flo_bt01:o423
	~Model:flo_bt01:o424
	00000000
}

#new:Stage $Stage_802312FC
{
	$ASCII_80234950  % flo_tex
	$ASCII_80234940  % flo_bt01_shape
	$ASCII_80234930  % flo_bt01_hit
	$Script_BeforeBattle_80231238
	$Script_AfterBattle_802312C8
	$ASCII_80234928  % fla_bg
	$ForegroundModelList_802312D8
	00000000
	00000000
	00000000
}

PADDING: 80231324 to 80231330 (005CA7D4 to 005CA7E0)
00000000 00000000 00000000

#new:Script $Script_80231330
{
    0:  Label  0
    C:  Call  RandInt   ( 000000FA *Var0 )
   20:  Sub   *Var0  0000007D
   30:  Set   *Var1  00000000
   40:  Call  RandInt   ( 00000028 *Var2 )
   54:  Sub   *Var2  00000064
   64:  Call  RandInt   ( 0000001E *Var3 )
   78:  Add   *Var3  0000005A
   88:  Call  PlayEffect    ( ~FX:FloatingFlower *Var0 *Var1 *Var2 *Var3 00000000 00000000 00000000 00000000 00000000 00000000 00000000 00000000 00000000 )
   CC:  Call  RandInt   ( 00000014 *Var0 )
   E0:  Add   *Var0  00000014
   F0:  Wait  *Var0
   FC:  Goto  0
  108:  Return
  110:  End
}

% Origin: HEURISTIC
#new:Script $Script_80231448
{
    0:  Label  0
    C:  Call  RandInt   ( 000000FA *Var0 )
   20:  Sub   *Var0  0000007D
   30:  Set   *Var1  00000000
   40:  Call  RandInt   ( 00000032 *Var2 )
   54:  Add   *Var2  00000047
   64:  Call  RandInt   ( 0000001E *Var3 )
   78:  Add   *Var3  0000005A
   88:  Call  PlayEffect    ( ~FX:FloatingFlower *Var0 *Var1 *Var2 *Var3 00000000 00000000 00000000 00000000 00000000 00000000 00000000 00000000 00000000 )
   CC:  Call  RandInt   ( 0000001E *Var0 )
   E0:  Add   *Var0  00000014
   F0:  Wait  *Var0
   FC:  Goto  0
  108:  Return
  110:  End
}

% Origin: HEURISTIC
#new:Script $Script_80231560
{
    0:  Label  0
    C:  Call  RandInt   ( 000000FA *Var0 )
   20:  Sub   *Var0  0000007D
   30:  Set   *Var1  00000032
   40:  Call  RandInt   ( 00000028 *Var2 )
   54:  Add   *Var2  FFFFFF84
   64:  Call  RandInt   ( 0000001E *Var3 )
   78:  Add   *Var3  0000005A
   88:  Call  PlayEffect    ( ~FX:FloatingFlower *Var0 *Var1 *Var2 *Var3 00000000 00000000 00000000 00000000 00000000 00000000 00000000 00000000 00000000 )
   CC:  Call  RandInt   ( 0000001E *Var0 )
   E0:  Add   *Var0  00000014
   F0:  Wait  *Var0
   FC:  Goto  0
  108:  Return
  110:  End
}

#new:Unknown $???_80231678
{
	$ASCII_802349A8 $ASCII_802349A0 $ASCII_80234998 $ASCII_80234990 $ASCII_80234988 $ASCII_80234980 $ASCII_80234978 $ASCII_80234970
	$ASCII_80234968 $ASCII_80234960 $ASCII_80234958
}

#new:Script $Script_802316A4
{
    0:  If  *GB_StoryProgress  >=  .Story:Ch6_DestroyedPuffPuffMachine % 35
   10:  	Call  $Function_802194E0 ( )
   1C:  EndIf
   24:  Return
   2C:  End
}

#new:Script $Script_BeforeBattle_802316D8
{
    0:  Call  SetSpriteShading  ( FFFFFFFF )
   10:  Call  SetCamBGColor     ( .Cam:Battle  0`  0`  0` )
   2C:  Call  SetGroupEnabled   ( ~Model:flo_bt01:dai_03 00000000 )
   40:  Call  SetGroupEnabled   ( ~Model:flo_bt01:dai_04 00000001 )
   54:  Call  SetGroupEnabled   ( ~Model:flo_bt01:dai_05 00000000 )
   68:  Exec  $Script_80231330
   74:  ExecWait  $Script_802316A4
   80:  Return
   88:  End
}

#new:Script $Script_AfterBattle_80231768
{
    0:  Return
    8:  End
}

#new:ForegroundModelList $ForegroundModelList_80231778
{
	FFFFFFFF
	~Model:flo_bt01:kuki
	~Model:flo_bt01:hana1
	~Model:flo_bt01:mae1
	~Model:flo_bt01:mae2
	~Model:flo_bt01:mae3
	00000000
}

#new:Stage $Stage_80231794
{
	$ASCII_802349D8  % flo_tex
	$ASCII_802349C8  % flo_bt01_shape
	$ASCII_802349B8  % flo_bt01_hit
	$Script_BeforeBattle_802316D8
	$Script_AfterBattle_80231768
	$ASCII_802349B0  % fla_bg
	$ForegroundModelList_80231778
	00000000
	00000000
	00000000
}

PADDING: 802317BC to 802317C0 (005CAC6C to 005CAC70)
00000000

#new:Script $Script_802317C0
{
    0:  Label  0
    C:  Call  RandInt   ( 000000FA *Var0 )
   20:  Sub   *Var0  0000007D
   30:  Set   *Var1  00000000
   40:  Call  RandInt   ( 00000028 *Var2 )
   54:  Sub   *Var2  00000064
   64:  Call  RandInt   ( 0000001E *Var3 )
   78:  Add   *Var3  0000005A
   88:  Call  PlayEffect    ( ~FX:FloatingFlower *Var0 *Var1 *Var2 *Var3 00000000 00000000 00000000 00000000 00000000 00000000 00000000 00000000 00000000 )
   CC:  Call  RandInt   ( 00000014 *Var0 )
   E0:  Add   *Var0  00000014
   F0:  Wait  *Var0
   FC:  Goto  0
  108:  Return
  110:  End
}

#new:Script $Script_802318D8
{
    0:  Label  0
    C:  Call  RandInt   ( 000000FA *Var0 )
   20:  Sub   *Var0  0000007D
   30:  Set   *Var1  00000000
   40:  Call  RandInt   ( 00000032 *Var2 )
   54:  Add   *Var2  00000047
   64:  Call  RandInt   ( 0000001E *Var3 )
   78:  Add   *Var3  0000005A
   88:  Call  PlayEffect    ( ~FX:FloatingFlower *Var0 *Var1 *Var2 *Var3 00000000 00000000 00000000 00000000 00000000 00000000 00000000 00000000 00000000 )
   CC:  Call  RandInt   ( 0000001E *Var0 )
   E0:  Add   *Var0  00000014
   F0:  Wait  *Var0
   FC:  Goto  0
  108:  Return
  110:  End
}

% Origin: HEURISTIC
#new:Script $Script_802319F0
{
    0:  Label  0
    C:  Call  RandInt   ( 000000FA *Var0 )
   20:  Sub   *Var0  0000007D
   30:  Set   *Var1  00000032
   40:  Call  RandInt   ( 00000028 *Var2 )
   54:  Add   *Var2  FFFFFF84
   64:  Call  RandInt   ( 0000001E *Var3 )
   78:  Add   *Var3  0000005A
   88:  Call  PlayEffect    ( ~FX:FloatingFlower *Var0 *Var1 *Var2 *Var3 00000000 00000000 00000000 00000000 00000000 00000000 00000000 00000000 00000000 )
   CC:  Call  RandInt   ( 0000001E *Var0 )
   E0:  Add   *Var0  00000014
   F0:  Wait  *Var0
   FC:  Goto  0
  108:  Return
  110:  End
}

#new:Unknown $???_80231B08
{
	$ASCII_80234A30 $ASCII_80234A28 $ASCII_80234A20 $ASCII_80234A18 $ASCII_80234A10 $ASCII_80234A08 $ASCII_80234A00 $ASCII_802349F8
	$ASCII_802349F0 $ASCII_802349E8 $ASCII_802349E0
}

#new:Script $Script_80231B34
{
    0:  If  *GB_StoryProgress  >=  .Story:Ch6_DestroyedPuffPuffMachine % 35
   10:  	Call  $Function_802195A0 ( )
   1C:  EndIf
   24:  Return
   2C:  End
}

#new:Script $Script_BeforeBattle_80231B68
{
    0:  Call  SetSpriteShading  ( FFFFFFFF )
   10:  Call  SetCamBGColor     ( .Cam:Battle  0`  0`  0` )
   2C:  Call  SetGroupEnabled   ( ~Model:flo_bt01:dai_03 00000000 )
   40:  Call  SetGroupEnabled   ( ~Model:flo_bt01:dai_04 00000000 )
   54:  Call  SetGroupEnabled   ( ~Model:flo_bt01:dai_05 00000001 )
   68:  Exec  $Script_802317C0
   74:  Exec  $Script_802318D8
   80:  ExecWait  $Script_80231B34
   8C:  Return
   94:  End
}

#new:Script $Script_AfterBattle_80231C04
{
    0:  Return
    8:  End
}

#new:ForegroundModelList $ForegroundModelList_80231C14
{
	FFFFFFFF
	~Model:flo_bt01:o381
	~Model:flo_bt01:o382
	~Model:flo_bt01:o388
	~Model:flo_bt01:o389
	~Model:flo_bt01:o390
	~Model:flo_bt01:o383
	00000000
}

#new:Stage $Stage_80231C34
{
	$ASCII_80234A60  % flo_tex
	$ASCII_80234A50  % flo_bt01_shape
	$ASCII_80234A40  % flo_bt01_hit
	$Script_BeforeBattle_80231B68
	$Script_AfterBattle_80231C04
	$ASCII_80234A38  % fla_bg
	$ForegroundModelList_80231C14
	00000000
	00000000
	00000000
}

PADDING: 80231C5C to 80231C60 (005CB10C to 005CB110)
00000000

% Origin: HEURISTIC
#new:Script $Script_80231C60
{
    0:  Label  0
    C:  Call  RandInt   ( 000000FA *Var0 )
   20:  Sub   *Var0  0000007D
   30:  Set   *Var1  00000000
   40:  Call  RandInt   ( 00000028 *Var2 )
   54:  Sub   *Var2  00000064
   64:  Call  RandInt   ( 0000001E *Var3 )
   78:  Add   *Var3  0000005A
   88:  Call  PlayEffect    ( ~FX:FloatingFlower *Var0 *Var1 *Var2 *Var3 00000000 00000000 00000000 00000000 00000000 00000000 00000000 00000000 00000000 )
   CC:  Call  RandInt   ( 00000014 *Var0 )
   E0:  Add   *Var0  00000014
   F0:  Wait  *Var0
   FC:  Goto  0
  108:  Return
  110:  End
}

% Origin: HEURISTIC
#new:Script $Script_80231D78
{
    0:  Label  0
    C:  Call  RandInt   ( 000000FA *Var0 )
   20:  Sub   *Var0  0000007D
   30:  Set   *Var1  00000000
   40:  Call  RandInt   ( 00000032 *Var2 )
   54:  Add   *Var2  00000047
   64:  Call  RandInt   ( 0000001E *Var3 )
   78:  Add   *Var3  0000005A
   88:  Call  PlayEffect    ( ~FX:FloatingFlower *Var0 *Var1 *Var2 *Var3 00000000 00000000 00000000 00000000 00000000 00000000 00000000 00000000 00000000 )
   CC:  Call  RandInt   ( 0000001E *Var0 )
   E0:  Add   *Var0  00000014
   F0:  Wait  *Var0
   FC:  Goto  0
  108:  Return
  110:  End
}

#new:Script $Script_80231E90
{
    0:  Label  0
    C:  Call  RandInt   ( 000000FA *Var0 )
   20:  Sub   *Var0  0000007D
   30:  Set   *Var1  00000032
   40:  Call  RandInt   ( 00000028 *Var2 )
   54:  Add   *Var2  FFFFFF84
   64:  Call  RandInt   ( 0000001E *Var3 )
   78:  Add   *Var3  0000005A
   88:  Call  PlayEffect    ( ~FX:FloatingFlower *Var0 *Var1 *Var2 *Var3 00000000 00000000 00000000 00000000 00000000 00000000 00000000 00000000 00000000 )
   CC:  Call  RandInt   ( 0000001E *Var0 )
   E0:  Add   *Var0  00000014
   F0:  Wait  *Var0
   FC:  Goto  0
  108:  Return
  110:  End
}

#new:Unknown $???_80231FA8
{
	$ASCII_80234AB8 $ASCII_80234AB0 $ASCII_80234AA8 $ASCII_80234AA0 $ASCII_80234A98 $ASCII_80234A90 $ASCII_80234A88 $ASCII_80234A80
	$ASCII_80234A78 $ASCII_80234A70 $ASCII_80234A68
}

#new:Script $Script_80231FD4
{
    0:  If  *GB_StoryProgress  >=  .Story:Ch6_DestroyedPuffPuffMachine % 35
   10:  	Call  $Function_80219660 ( )
   1C:  EndIf
   24:  Return
   2C:  End
}

#new:Script $Script_BeforeBattle_80232008
{
    0:  Call  SetSpriteShading  ( FFFFFFFF )
   10:  Call  SetCamBGColor     ( .Cam:Battle  0`  0`  0` )
   2C:  Call  SetGroupEnabled   ( ~Model:flo_bt02:dai_05 00000001 )
   40:  Call  SetGroupEnabled   ( ~Model:flo_bt02:0809 00000000 )
   54:  Call  SetGroupEnabled   ( ~Model:flo_bt02:16 00000000 )
   68:  Exec  $Script_80231E90
   74:  ExecWait  $Script_80231FD4
   80:  Return
   88:  End
}

#new:Script $Script_AfterBattle_80232098
{
    0:  Return
    8:  End
}

#new:ForegroundModelList $ForegroundModelList_802320A8
{
	FFFFFFFF
	~Model:flo_bt02:o403
	~Model:flo_bt02:o404
	00000000
}

#new:Stage $Stage_802320B8
{
	$ASCII_80234AE8  % flo_tex
	$ASCII_80234AD8  % flo_bt02_shape
	$ASCII_80234AC8  % flo_bt02_hit
	$Script_BeforeBattle_80232008
	$Script_AfterBattle_80232098
	$ASCII_80234AC0  % fla_bg
	$ForegroundModelList_802320A8
	00000000
	00000000
	00000000
}

% Origin: HEURISTIC
#new:Script $Script_802320E0
{
    0:  Label  0
    C:  Call  RandInt   ( 000000FA *Var0 )
   20:  Sub   *Var0  0000007D
   30:  Set   *Var1  00000000
   40:  Call  RandInt   ( 00000028 *Var2 )
   54:  Sub   *Var2  00000064
   64:  Call  RandInt   ( 0000001E *Var3 )
   78:  Add   *Var3  0000005A
   88:  Call  PlayEffect    ( ~FX:FloatingFlower *Var0 *Var1 *Var2 *Var3 00000000 00000000 00000000 00000000 00000000 00000000 00000000 00000000 00000000 )
   CC:  Call  RandInt   ( 00000014 *Var0 )
   E0:  Add   *Var0  00000014
   F0:  Wait  *Var0
   FC:  Goto  0
  108:  Return
  110:  End
}

% Origin: HEURISTIC
#new:Script $Script_802321F8
{
    0:  Label  0
    C:  Call  RandInt   ( 000000FA *Var0 )
   20:  Sub   *Var0  0000007D
   30:  Set   *Var1  00000000
   40:  Call  RandInt   ( 00000032 *Var2 )
   54:  Add   *Var2  00000047
   64:  Call  RandInt   ( 0000001E *Var3 )
   78:  Add   *Var3  0000005A
   88:  Call  PlayEffect    ( ~FX:FloatingFlower *Var0 *Var1 *Var2 *Var3 00000000 00000000 00000000 00000000 00000000 00000000 00000000 00000000 00000000 )
   CC:  Call  RandInt   ( 0000001E *Var0 )
   E0:  Add   *Var0  00000014
   F0:  Wait  *Var0
   FC:  Goto  0
  108:  Return
  110:  End
}

#new:Script $Script_80232310
{
    0:  Label  0
    C:  Call  RandInt   ( 000000FA *Var0 )
   20:  Sub   *Var0  0000007D
   30:  Set   *Var1  00000032
   40:  Call  RandInt   ( 00000028 *Var2 )
   54:  Add   *Var2  FFFFFF84
   64:  Call  RandInt   ( 0000001E *Var3 )
   78:  Add   *Var3  0000005A
   88:  Call  PlayEffect    ( ~FX:FloatingFlower *Var0 *Var1 *Var2 *Var3 00000000 00000000 00000000 00000000 00000000 00000000 00000000 00000000 00000000 )
   CC:  Call  RandInt   ( 0000001E *Var0 )
   E0:  Add   *Var0  00000014
   F0:  Wait  *Var0
   FC:  Goto  0
  108:  Return
  110:  End
}

#new:Unknown $???_80232428
{
	$ASCII_80234B40 $ASCII_80234B38 $ASCII_80234B30 $ASCII_80234B28 $ASCII_80234B20 $ASCII_80234B18 $ASCII_80234B10 $ASCII_80234B08
	$ASCII_80234B00 $ASCII_80234AF8 $ASCII_80234AF0
}

#new:Script $Script_80232454
{
    0:  If  *GB_StoryProgress  >=  .Story:Ch6_DestroyedPuffPuffMachine % 35
   10:  	Call  $Function_80219720 ( )
   1C:  EndIf
   24:  Return
   2C:  End
}

#new:Script $Script_BeforeBattle_80232488
{
    0:  Call  SetSpriteShading  ( FFFFFFFF )
   10:  Call  SetCamBGColor     ( .Cam:Battle  0`  0`  0` )
   2C:  Call  SetGroupEnabled   ( ~Model:flo_bt02:dai_05 00000000 )
   40:  Call  SetGroupEnabled   ( ~Model:flo_bt02:0809 00000001 )
   54:  Call  SetGroupEnabled   ( ~Model:flo_bt02:16 00000000 )
   68:  Exec  $Script_80232310
   74:  Call  ModifyColliderFlags   ( 00000003 ~Collider:flo_bt02:yuka 00000006 )
   8C:  ExecWait  $Script_80232454
   98:  Return
   A0:  End
}

#new:Script $Script_AfterBattle_80232530
{
    0:  Return
    8:  End
}

#new:ForegroundModelList $ForegroundModelList_80232540
{
	FFFFFFFF
	~Model:flo_bt02:8hana4
	~Model:flo_bt02:8hana5
	~Model:flo_bt02:8hana6
	~Model:flo_bt02:8hana1
	~Model:flo_bt02:8hana1
	~Model:flo_bt02:8hana3
	00000000
}

#new:Stage $Stage_80232560
{
	$ASCII_80234B70  % flo_tex
	$ASCII_80234B60  % flo_bt02_shape
	$ASCII_80234B50  % flo_bt02_hit
	$Script_BeforeBattle_80232488
	$Script_AfterBattle_80232530
	$ASCII_80234B48  % fla_bg
	$ForegroundModelList_80232540
	00000000
	00000000
	00000000
}

PADDING: 80232588 to 80232590 (005CBA38 to 005CBA40)
00000000 00000000

% Origin: HEURISTIC
#new:Script $Script_80232590
{
    0:  Label  0
    C:  Call  RandInt   ( 000000FA *Var0 )
   20:  Sub   *Var0  0000007D
   30:  Set   *Var1  00000000
   40:  Call  RandInt   ( 00000028 *Var2 )
   54:  Sub   *Var2  00000064
   64:  Call  RandInt   ( 0000001E *Var3 )
   78:  Add   *Var3  0000005A
   88:  Call  PlayEffect    ( ~FX:FloatingFlower *Var0 *Var1 *Var2 *Var3 00000000 00000000 00000000 00000000 00000000 00000000 00000000 00000000 00000000 )
   CC:  Call  RandInt   ( 00000014 *Var0 )
   E0:  Add   *Var0  00000014
   F0:  Wait  *Var0
   FC:  Goto  0
  108:  Return
  110:  End
}

% Origin: HEURISTIC
#new:Script $Script_802326A8
{
    0:  Label  0
    C:  Call  RandInt   ( 000000FA *Var0 )
   20:  Sub   *Var0  0000007D
   30:  Set   *Var1  00000000
   40:  Call  RandInt   ( 00000032 *Var2 )
   54:  Add   *Var2  00000047
   64:  Call  RandInt   ( 0000001E *Var3 )
   78:  Add   *Var3  0000005A
   88:  Call  PlayEffect    ( ~FX:FloatingFlower *Var0 *Var1 *Var2 *Var3 00000000 00000000 00000000 00000000 00000000 00000000 00000000 00000000 00000000 )
   CC:  Call  RandInt   ( 0000001E *Var0 )
   E0:  Add   *Var0  00000014
   F0:  Wait  *Var0
   FC:  Goto  0
  108:  Return
  110:  End
}

#new:Script $Script_802327C0
{
    0:  Label  0
    C:  Call  RandInt   ( 000000FA *Var0 )
   20:  Sub   *Var0  0000007D
   30:  Set   *Var1  00000032
   40:  Call  RandInt   ( 00000028 *Var2 )
   54:  Add   *Var2  FFFFFF84
   64:  Call  RandInt   ( 0000001E *Var3 )
   78:  Add   *Var3  0000005A
   88:  Call  PlayEffect    ( ~FX:FloatingFlower *Var0 *Var1 *Var2 *Var3 00000000 00000000 00000000 00000000 00000000 00000000 00000000 00000000 00000000 )
   CC:  Call  RandInt   ( 0000001E *Var0 )
   E0:  Add   *Var0  00000014
   F0:  Wait  *Var0
   FC:  Goto  0
  108:  Return
  110:  End
}

#new:Unknown $???_802328D8
{
	$ASCII_80234BC8 $ASCII_80234BC0 $ASCII_80234BB8 $ASCII_80234BB0 $ASCII_80234BA8 $ASCII_80234BA0 $ASCII_80234B98 $ASCII_80234B90
	$ASCII_80234B88 $ASCII_80234B80 $ASCII_80234B78
}

#new:Script $Script_80232904
{
    0:  If  *GB_StoryProgress  >=  .Story:Ch6_DestroyedPuffPuffMachine % 35
   10:  	Call  $Function_802197E0 ( )
   1C:  EndIf
   24:  Return
   2C:  End
}

#new:Script $Script_BeforeBattle_80232938
{
    0:  Call  SetSpriteShading  ( FFFFFFFF )
   10:  Call  SetCamBGColor     ( .Cam:Battle  0`  0`  0` )
   2C:  Call  SetGroupEnabled   ( ~Model:flo_bt02:dai_05 00000001 )
   40:  Call  SetGroupEnabled   ( ~Model:flo_bt02:0809 00000000 )
   54:  Call  SetGroupEnabled   ( ~Model:flo_bt02:g90 00000000 )
   68:  Call  SetGroupEnabled   ( ~Model:flo_bt02:16 00000001 )
   7C:  Exec  $Script_802327C0
   88:  ExecWait  $Script_80232904
   94:  Return
   9C:  End
}

#new:Script $Script_AfterBattle_802329DC
{
    0:  Return
    8:  End
}

#new:ForegroundModelList $ForegroundModelList_802329EC
{
	FFFFFFFF
	~Model:flo_bt02:o403
	~Model:flo_bt02:o404
	00000000
}

#new:Stage $Stage_802329FC
{
	$ASCII_80234BF8  % flo_tex
	$ASCII_80234BE8  % flo_bt02_shape
	$ASCII_80234BD8  % flo_bt02_hit
	$Script_BeforeBattle_80232938
	$Script_AfterBattle_802329DC
	$ASCII_80234BD0  % fla_bg
	$ForegroundModelList_802329EC
	00000000
	00000000
	00000000
}

PADDING: 80232A24 to 80232A30 (005CBED4 to 005CBEE0)
00000000 00000000 00000000

#new:Script $Script_80232A30
{
    0:  Set   *VarA  *Var0
   10:  UseIntBuffer  *VarA
   1C:  Loop
   28:  	Get1Int  *Var0
   34:  	If  *Var0  ==  00000000
   44:  		BreakLoop
   4C:  	EndIf
   54:  	Call  SetTexPanner  ( *Var0 0000000E )
   68:  	Get1Int  *Var0
   74:  	If  *Var0  ==  00000000
   84:  		BreakLoop
   8C:  	EndIf
   94:  	Call  SetTexPanner  ( *Var0 0000000F )
   A8:  EndLoop
   B0:  Set   *Var0  00000000
   C0:  Set   *Var1  00000000
   D0:  Label  0
   DC:  Label  0
   E8:  Add   *Var0  FFFFFF74
   F8:  If  *Var0  <  00000000
  108:  	Add   *Var0  00010000
  118:  EndIf
  120:  Call  SetTexPanOffset   ( 0000000E 00000000 *Var0 00000000 )
  13C:  Add   *Var1  FFFFFF38
  14C:  If  *Var1  <  00000000
  15C:  	Add   *Var1  00010000
  16C:  EndIf
  174:  Call  SetTexPanOffset   ( 0000000F 00000000 *Var1 00000000 )
  190:  Wait  1`
  19C:  Goto  0
  1A8:  Return
  1B0:  End
}

#new:Unknown $???_80232BE8
{
	$ASCII_80234C50 $ASCII_80234C48 $ASCII_80234C40 $ASCII_80234C38 $ASCII_80234C30 $ASCII_80234C28 $ASCII_80234C20 $ASCII_80234C18
	$ASCII_80234C10 $ASCII_80234C08 $ASCII_80234C00
}

#new:Script $Script_80232C14
{
    0:  If  *GB_StoryProgress  >=  .Story:Ch6_DestroyedPuffPuffMachine % 35
   10:  	Call  $Function_802198A0 ( )
   1C:  EndIf
   24:  Return
   2C:  End
}

#new:Script $Script_80232C48
{
    0:  Call  EnableModel   ( *VarF .True )
   14:  Set   *VarE  0000009F
   24:  Loop  *VarE
   30:  	AddF  *Var3  00000000
   40:  	AddF  *Var4  *Fixed[0.0]
   50:  	SetF  *Var5  *Fixed[0.01]
   60:  	AddF  *Var0  *Var3
   70:  	AddF  *Var1  *Var4
   80:  	AddF  *Var2  *Var5
   90:  	MulF  *Var6  *Fixed[1.01]
   A0:  	AddF  *Var7  *Fixed[0.01]
   B0:  	SetF  *Var8  *Var6
   C0:  	Call  $Function_80219960    ( *VarE *VarA *Fixed[0.0] *Fixed[0.203125] 0000000F 00000000 00000000 )
   E8:  	AddF  *Var8  *VarA
   F8:  	SetF  *Var9  *Var7
  108:  	Call  $Function_80219960    ( *VarE *VarA *Fixed[0.0] *Fixed[0.203125] 00000014 00000000 0000005A )
  130:  	AddF  *Var9  *VarA
  140:  	SetF  *VarA  *Var0
  150:  	MulF  *VarA  *Fixed[10.0]
  160:  	Call  TranslateModel        ( *VarF *Var0 *Var1 *Var2 )
  17C:  	Call  ScaleModel    ( *VarF *Var8 *Var9 00000001 )
  198:  	Call  RotateModel   ( *VarF *VarA 00000000 00000000 00000001 )
  1B8:  	Wait  1`
  1C4:  EndLoop
  1CC:  Call  EnableModel   ( *VarF .False )
  1E0:  Return
  1E8:  End
}

#new:Unknown $???_80232E38
{
	00000021 00000022 00000023 00000000
}

#new:Script $Script_BeforeBattle_80232E48
{
    0:  Call  SetSpriteShading  ( FFFFFFFF )
   10:  Call  SetCamBGColor ( .Cam:Battle  0`  0`  0` )
   2C:  Set   *Var0  $???_80232E38
   3C:  Exec  $Script_80232A30
   48:  Call  SetTexPanner  ( ~Model:flo_bt03:piko4 00000001 )
   5C:  Call  SetTexPanner  ( ~Model:flo_bt03:piko5 00000002 )
   70:  Call  SetTexPanner  ( ~Model:flo_bt03:piko1 00000003 )
   84:  Call  SetTexPanner  ( ~Model:flo_bt03:piko2 00000004 )
   98:  Call  SetTexPanner  ( ~Model:flo_bt03:piko3 00000005 )
   AC:  Call  SetTexPanner  ( ~Model:flo_bt03:piko6 00000006 )
   C0:  Call  SetTexPanner  ( ~Model:flo_bt03:piko7 00000007 )
   D4:  Thread
   DC:  	Set   *VarE  00000001
   EC:  	Set   *VarF  00000000
   FC:  	Loop
  108:  		AddF  *VarF  *VarE
  118:  		If  *VarF  >=  00000438
  128:  			Set   *VarF  00000000
  138:  		EndIf
  140:  		Set   *Var0  *VarF
  150:  		Div   *Var0  00000009
  160:  		Mod   *Var0  00000002
  170:  		Mul   *Var0  00004000
  180:  		Set   *Var1  *VarF
  190:  		Div   *Var1  00000004
  1A0:  		Mod   *Var1  00000002
  1B0:  		Mul   *Var1  00004000
  1C0:  		Set   *Var2  *VarF
  1D0:  		Div   *Var2  00000005
  1E0:  		Mod   *Var2  00000002
  1F0:  		Mul   *Var2  00004000
  200:  		Set   *Var3  *VarF
  210:  		Div   *Var3  00000006
  220:  		Mod   *Var3  00000002
  230:  		Mul   *Var3  00004000
  240:  		Set   *Var4  *VarF
  250:  		Div   *Var4  00000002
  260:  		Mod   *Var4  00000002
  270:  		Mul   *Var4  00004000
  280:  		Set   *Var5  *VarF
  290:  		Div   *Var5  00000008
  2A0:  		Mod   *Var5  00000002
  2B0:  		Mul   *Var5  00004000
  2C0:  		Set   *Var6  *VarF
  2D0:  		Div   *Var6  00000008
  2E0:  		Mod   *Var6  00000002
  2F0:  		Mul   *Var6  00008000
  300:  		Call  SetTexPanOffset   ( 00000001 00000000 *Var0 00000000 )
  31C:  		Call  SetTexPanOffset   ( 00000002 00000000 *Var1 00000000 )
  338:  		Call  SetTexPanOffset   ( 00000003 00000000 *Var2 00000000 )
  354:  		Call  SetTexPanOffset   ( 00000004 00000000 *Var3 00000000 )
  370:  		Call  SetTexPanOffset   ( 00000005 00000000 *Var4 00000000 )
  38C:  		Call  SetTexPanOffset   ( 00000006 00000000 *Var5 00000000 )
  3A8:  		Call  SetTexPanOffset   ( 00000007 00000000 *Var6 00000000 )
  3C4:  		Wait  1`
  3D0:  	EndLoop
  3D8:  EndThread
  3E0:  Thread
  3E8:  	Set   *Var0  00000000
  3F8:  	Loop  00000010
  404:  		Set   *Var1  *Var0
  414:  		Add   *Var1  00002710
  424:  		Add   *Var0  00000001
  434:  		Call  CloneModel    ( ~Model:flo_bt03:o454 *Var1 )
  448:  		Call  EnableModel   ( *Var1 .False )
  45C:  	EndLoop
  464:  	Call  EnableModel   ( ~Model:flo_bt03:o454 .False )
  478:  	Set   *VarE  00000000
  488:  	Loop
  494:  		SetF  *Var0  *Fixed[106.0]
  4A4:  		SetF  *Var1  *Fixed[94.0]
  4B4:  		SetF  *Var2  *Fixed[-91.0]
  4C4:  		Call  RandInt   ( 00000064 *Var3 )
  4D8:  		AddF  *Var3  FFFFFFCE
  4E8:  		DivF  *Var3  *Fixed[200.0]
  4F8:  		SetF  *Var4  *Fixed[1.0]
  508:  		SetF  *Var5  00000000
  518:  		SetF  *Var6  *Fixed[0.296875]
  528:  		SetF  *Var7  *Fixed[0.296875]
  538:  		Set   *VarF  *VarE
  548:  		Add   *VarF  00002710
  558:  		Exec  $Script_80232C48
  564:  		Add   *VarE  00000001
  574:  		If  *VarE  >=  00000010
  584:  			Set   *VarE  00000000
  594:  		EndIf
  59C:  		Wait  10`
  5A8:  	EndLoop
  5B0:  EndThread
  5B8:  ExecWait  $Script_80232C14
  5C4:  Return
  5CC:  End
}

#new:Script $Script_AfterBattle_8023341C
{
    0:  Return
    8:  End
}

#new:ForegroundModelList $ForegroundModelList_8023342C
{
	FFFFFFFF
	~Model:flo_bt03:o411
	~Model:flo_bt03:o415
	00000000
}

#new:Stage $Stage_8023343C
{
	$ASCII_80234C80  % flo_tex
	$ASCII_80234C70  % flo_bt03_shape
	$ASCII_80234C60  % flo_bt03_hit
	$Script_BeforeBattle_80232E48
	$Script_AfterBattle_8023341C
	$ASCII_80234C58  % fla_bg
	$ForegroundModelList_8023342C
	00000000
	00000000
	00000000
}

PADDING: 80233464 to 80233470 (005CC914 to 005CC920)
00000000 00000000 00000000

#new:Script $Script_80233470
{
    0:  Set   *VarA  *Var0
   10:  Set   *VarF  00000000
   20:  Loop
   2C:  	Call  $Function_80219AF0    ( *VarF *Var0 *Fixed[0.96875] *Fixed[1.03125] 0000000F 00000000 00000000 )
   54:  	Call  $Function_80219AF0    ( *VarF *Var1 *Fixed[1.03125] *Fixed[0.96875] 0000000F 00000000 00000000 )
   7C:  	Call  ScaleModel    ( *VarA *Var1 *Var0 00000001 )
   98:  	Add   *VarF  00000001
   A8:  	If  *VarF  >=  0000001E
   B8:  		Set   *VarF  00000000
   C8:  	EndIf
   D0:  	Wait  1`
   DC:  EndLoop
   E4:  Return
   EC:  End
}

#new:Unknown $???_80233564
{
	$ASCII_80234CD8 $ASCII_80234CD0 $ASCII_80234CC8 $ASCII_80234CC0 $ASCII_80234CB8 $ASCII_80234CB0 $ASCII_80234CA8 $ASCII_80234CA0
	$ASCII_80234C98 $ASCII_80234C90 $ASCII_80234C88
}

#new:Script $Script_80233590
{
    0:  If  *GB_StoryProgress  >=  .Story:Ch6_DestroyedPuffPuffMachine % 35
   10:  	Call  $Function_80219C80 ( )
   1C:  EndIf
   24:  Return
   2C:  End
}

#new:Script $Script_BeforeBattle_802335C4
{
    0:  Call  SetSpriteShading  ( FFFFFFFF )
   10:  Call  SetCamBGColor     ( .Cam:Battle  0`  0`  0` )
   2C:  Set   *Var0  0000000E
   3C:  Exec  $Script_80233470
   48:  Set   *Var0  00000010
   58:  Exec  $Script_80233470
   64:  Set   *Var0  00000012
   74:  Exec  $Script_80233470
   80:  Set   *Var0  00000014
   90:  Exec  $Script_80233470
   9C:  Set   *Var0  00000019
   AC:  Exec  $Script_80233470
   B8:  Thread
   C0:  	Set   *Var0  0000001F
   D0:  	Exec  $Script_80233470
   DC:  	Set   *Var0  00000020
   EC:  	Exec  $Script_80233470
   F8:  	Wait  5`
  104:  	Set   *Var0  00000000
  114:  	Exec  $Script_80233470
  120:  	Set   *Var0  00000001
  130:  	Exec  $Script_80233470
  13C:  	Wait  5`
  148:  	Set   *Var0  00000005
  158:  	Exec  $Script_80233470
  164:  	Set   *Var0  00000004
  174:  	Exec  $Script_80233470
  180:  	Set   *Var0  00000006
  190:  	Exec  $Script_80233470
  19C:  	Wait  5`
  1A8:  	Set   *Var0  00000021
  1B8:  	Exec  $Script_80233470
  1C4:  	Set   *Var0  00000022
  1D4:  	Exec  $Script_80233470
  1E0:  EndThread
  1E8:  Call  CloneModel        ( ~Model:flo_bt04:o427 00002710 )
  1FC:  Call  EnableModel       ( 00002710 .False )
  210:  Call  TranslateModel    ( 00002710 00000000 00000009 00000000 )
  22C:  Call  ParentColliderToModel ( ~Collider:flo_bt04:yuka 00002710 )
  240:  ExecWait  $Script_80233590
  24C:  Return
  254:  End
}

#new:Script $Script_AfterBattle_80233820
{
    0:  Return
    8:  End
}

#new:ForegroundModelList $ForegroundModelList_80233830
{
	FFFFFFFF
	~Model:flo_bt04:o431
	~Model:flo_bt04:o419
	00000000
}

#new:Stage $Stage_80233840
{
	$ASCII_80234D08  % flo_tex
	$ASCII_80234CF8  % flo_bt04_shape
	$ASCII_80234CE8  % flo_bt04_hit
	$Script_BeforeBattle_802335C4
	$Script_AfterBattle_80233820
	$ASCII_80234CE0  % sra_bg
	$ForegroundModelList_80233830
	00000000
	00000000
	00000000
}

PADDING: 80233868 to 80233870 (005CCD18 to 005CCD20)
00000000 00000000

#new:Unknown $???_80233870
{
	$ASCII_80234D60 $ASCII_80234D58 $ASCII_80234D50 $ASCII_80234D48 $ASCII_80234D40 $ASCII_80234D38 $ASCII_80234D30 $ASCII_80234D28
	$ASCII_80234D20 $ASCII_80234D18 $ASCII_80234D10
}

#new:Script $Script_8023389C
{
    0:  If  *GB_StoryProgress  >=  .Story:Ch6_DestroyedPuffPuffMachine % 35
   10:  	Call  $Function_80219D40 ( )
   1C:  EndIf
   24:  Return
   2C:  End
}

#new:Script $Script_BeforeBattle_802338D0
{
    0:  Call  SetSpriteShading  ( FFFFFFFF )
   10:  Call  SetCamBGColor     ( .Cam:Battle  0`  0`  0` )
   2C:  ExecWait  $Script_8023389C
   38:  Return
   40:  End
}

#new:Script $Script_AfterBattle_80233918
{
    0:  Return
    8:  End
}

#new:Stage $Stage_80233928
{
	$ASCII_80234D90  % flo_tex
	$ASCII_80234D80  % flo_bt05_shape
	$ASCII_80234D70  % flo_bt05_hit
	$Script_BeforeBattle_802338D0
	$Script_AfterBattle_80233918
	$ASCII_80234D68  % fla_bg
	00000000
	00000000
	00000000
	00000000
}

#new:Unknown $???_80233950
{
	$ASCII_80234DE8 $ASCII_80234DE0 $ASCII_80234DD8 $ASCII_80234DD0 $ASCII_80234DC8 $ASCII_80234DC0 $ASCII_80234DB8 $ASCII_80234DB0
	$ASCII_80234DA8 $ASCII_80234DA0 $ASCII_80234D98
}

#new:Script $Script_8023397C
{
    0:  If  *GB_StoryProgress  >=  .Story:Ch6_DestroyedPuffPuffMachine % 35
   10:  	Call  $Function_80219E00 ( )
   1C:  EndIf
   24:  Return
   2C:  End
}

#new:Script $Script_BeforeBattle_802339B0
{
    0:  Call  SetSpriteShading  ( FFFFFFFF )
   10:  Call  SetCamBGColor     ( .Cam:Battle  0`  0`  0` )
   2C:  ExecWait  $Script_8023397C
   38:  Return
   40:  End
}

#new:Script $Script_AfterBattle_802339F8
{
    0:  Return
    8:  End
}

#new:Stage $Stage_80233A08
{
	$ASCII_80234E18  % flo_tex
	$ASCII_80234E08  % flo_bt06_shape
	$ASCII_80234DF8  % flo_bt06_hit
	$Script_BeforeBattle_802339B0
	$Script_AfterBattle_802339F8
	$ASCII_80234DF0  % fla_bg
	00000000
	00000000
	00000000
	00000000
}

#new:Formation $Formation_00
{
	$Lakitu 00000005 0000000A 00000000 00000000 00000000 00000000
	$Lakitu 00000006 00000009 00000000 00000000 00000000 00000000
}

#new:Formation $Formation_01
{
	$Lakitu 00000004 0000000A 00000000 00000000 00000000 00000000
	$Lakitu 00000005 00000009 00000000 00000000 00000000 00000000
	$Lakitu 00000006 00000008 00000000 00000000 00000000 00000000
}

#new:Formation $Formation_02
{
	$Lakitu 00000005 0000000A 00000000 00000000 00000000 00000000
	$RuffPuff 00000006 00000009 00000000 00000000 00000000 00000000
}

#new:Formation $Formation_03
{
	$Lakitu 00000004 0000000A 00000000 00000000 00000000 00000000
	$Bzzap 00000005 00000009 00000000 00000000 00000000 00000000
	$Bzzap 00000006 00000008 00000000 00000000 00000000 00000000
}

#new:Formation $Formation_04
{
	$Lakitu 00000004 0000000A 00000000 00000000 00000000 00000000
	$Bzzap 00000005 00000009 00000000 00000000 00000000 00000000
	$Lakitu 00000006 00000008 00000000 00000000 00000000 00000000
	$Bzzap 00000007 00000007 00000000 00000000 00000000 00000000
}

#new:Formation $Formation_05
{
	$Lakitu 00000005 0000000A 00000000 00000000 00000000 00000000
	$CrazeeDayzee 00000002 00000009 00000000 00000000 00000000 00000000
}

#new:Formation $Formation_06
{
	$Lakitu 00000005 0000000A 00000000 00000000 00000000 00000000
	$Spiny 00000002 00000009 00000000 00000000 00000000 00000000
}

#new:Formation $Formation_07
{
	$Lakitu 00000004 0000000A 00000000 00000000 00000000 00000000
	$Lakitu 00000005 00000009 00000000 00000000 00000000 00000000
	$Spiny 00000002 00000008 00000000 00000000 00000000 00000000
	$Spiny 00000003 00000007 00000000 00000000 00000000 00000000
}

#new:Formation $Formation_08
{
	$Lakitu 00000004 0000000A 00000000 00000000 00000000 00000000
	$Lakitu 00000005 00000009 00000000 00000000 00000000 00000000
	$Lakitu 00000006 00000008 00000000 00000000 00000000 00000000
	$Spiny 00000003 00000007 00000000 00000000 00000000 00000000
}

#new:Formation $Formation_09
{
	$Lakitu 00000004 0000000A 00000000 00000000 00000000 00000000
	$Lakitu 00000005 00000009 00000000 00000000 00000000 00000000
	$WMagikoopa 00000002 00000008 00000000 00000000 00000000 00000000
}

#new:Formation $Formation_0A
{
	$Lakitu 00000004 0000000A 00000000 00000000 00000000 00000000
	$Lakitu 00000005 00000009 00000000 00000000 00000000 00000000
	$RMagikoopa 00000002 00000008 00000000 00000000 00000000 00000000
}

#new:Formation $Formation_0B
{
	$Lakitu 00000004 0000000A 00000000 00000000 00000000 00000000
	$Lakitu 00000005 00000009 00000000 00000000 00000000 00000000
	$Lakitu 00000006 00000008 00000000 00000000 00000000 00000000
	$YMagikoopa 00000003 00000007 00000000 00000000 00000000 00000000
}

#new:Formation $Formation_0C
{
	$Spiny 00000001 0000000A 00000000 00000000 00000000 00000000
	$Spiny 00000002 00000009 00000000 00000000 00000000 00000000
}

#new:Formation $Formation_0D
{
	$Spiny 00000000 0000000A 00000000 00000000 00000000 00000000
	$Spiny 00000001 00000009 00000000 00000000 00000000 00000000
	$Spiny 00000002 00000008 00000000 00000000 00000000 00000000
}

#new:Formation $Formation_0E
{
	$Spiny 00000000 0000000A 00000000 00000000 00000000 00000000
	$CrazeeDayzee 00000001 00000009 00000000 00000000 00000000 00000000
	$MediGuy 00000006 00000008 00000000 00000000 00000000 00000000
}

#new:Formation $Formation_0F
{
	$CrazeeDayzee 00000001 0000000A 00000000 00000000 00000000 00000000
}

#new:Formation $Formation_10
{
	$CrazeeDayzee 00000001 0000000A 00000000 00000000 00000000 00000000
	$CrazeeDayzee 00000002 00000009 00000000 00000000 00000000 00000000
}

#new:Formation $Formation_11
{
	$CrazeeDayzee 00000000 0000000A 00000000 00000000 00000000 00000000
	$CrazeeDayzee 00000001 00000009 00000000 00000000 00000000 00000000
	$CrazeeDayzee 00000002 00000008 00000000 00000000 00000000 00000000
}

#new:Formation $Formation_12
{
	$CrazeeDayzee 00000000 0000000A 00000000 00000000 00000000 00000000
	$CrazeeDayzee 00000001 00000009 00000000 00000000 00000000 00000000
	$CrazeeDayzee 00000002 00000008 00000000 00000000 00000000 00000000
	$CrazeeDayzee 00000003 00000007 00000000 00000000 00000000 00000000
}

#new:Formation $Formation_13
{
	$CrazeeDayzee 00000001 0000000A 00000000 00000000 00000000 00000000
	$Bzzap 00000006 00000009 00000000 00000000 00000000 00000000
}

#new:Formation $Formation_14
{
	$CrazeeDayzee 00000000 0000000A 00000000 00000000 00000000 00000000
	$Bzzap 00000005 00000009 00000000 00000000 00000000 00000000
	$Bzzap 00000006 00000008 00000000 00000000 00000000 00000000
}

#new:Formation $Formation_15
{
	$CrazeeDayzee 00000000 0000000A 00000000 00000000 00000000 00000000
	$CrazeeDayzee 00000001 00000009 00000000 00000000 00000000 00000000
	$Bzzap 00000006 00000008 00000000 00000000 00000000 00000000
}

#new:Formation $Formation_16
{
	$CrazeeDayzee 00000000 0000000A 00000000 00000000 00000000 00000000
	$CrazeeDayzee 00000001 00000009 00000000 00000000 00000000 00000000
	$AmazyDayzee 00000002 00000008 00000000 00000000 00000000 00000000
}

#new:Formation $Formation_17
{
	$Bzzap 00000005 0000000A 00000000 00000000 00000000 00000000
	$Bzzap 00000006 00000009 00000000 00000000 00000000 00000000
}

#new:Formation $Formation_18
{
	$Bzzap 00000004 0000000A 00000000 00000000 00000000 00000000
	$Bzzap 00000005 00000009 00000000 00000000 00000000 00000000
	$Bzzap 00000006 00000008 00000000 00000000 00000000 00000000
}

#new:Formation $Formation_19
{
	$Bzzap 00000004 0000000A 00000000 00000000 00000000 00000000
	$Bzzap 00000005 00000009 00000000 00000000 00000000 00000000
	$FlyingGRNMagikoopa 00000006 00000008 00000000 00000000 00000000 00000000
}

#new:Formation $Formation_1A
{
	$Bzzap 00000005 0000000A 00000000 00000000 00000000 00000000
	$RuffPuff 00000006 00000009 00000000 00000000 00000000 00000000
}

#new:Formation $Formation_1B
{
	$Bzzap 00000004 0000000A 00000000 00000000 00000000 00000000
	$RuffPuff 00000005 00000009 00000000 00000000 00000000 00000000
	$Bzzap 00000006 00000008 00000000 00000000 00000000 00000000
}

#new:Formation $Formation_1C
{
	$AmazyDayzee 00000001 0000000A 00000000 00000000 00000000 00000000
}

#new:Formation $Formation_1D
{
	$AmazyDayzee 00000000 0000000A 00000000 00000000 00000000 00000000
	$Bzzap 00000005 00000009 00000000 00000000 00000000 00000000
	$Bzzap 00000006 00000008 00000000 00000000 00000000 00000000
}

#new:Formation $Formation_1E
{
	$AmazyDayzee 00000000 0000000A 00000000 00000000 00000000 00000000
	$AmazyDayzee 00000001 00000009 00000000 00000000 00000000 00000000
	$AmazyDayzee 00000002 00000008 00000000 00000000 00000000 00000000
	$AmazyDayzee 00000003 00000007 00000000 00000000 00000000 00000000
}

#new:Formation $Formation_1F
{
	$RuffPuff 00000005 0000000A 00000000 00000000 00000000 00000000
	$RuffPuff 00000006 00000009 00000000 00000000 00000000 00000000
}

#new:Formation $Formation_20
{
	$RuffPuff 00000004 0000000A 00000000 00000000 00000000 00000000
	$RuffPuff 00000005 00000009 00000000 00000000 00000000 00000000
	$RuffPuff 00000006 00000008 00000000 00000000 00000000 00000000
	$RuffPuff 00000007 00000007 00000000 00000000 00000000 00000000
}

#new:Formation $Formation_21
{
	$RuffPuff 00000005 0000000A 00000000 00000000 00000000 00000000
	$Lakitu 00000006 00000009 00000000 00000000 00000000 00000000
}

#new:Formation $Formation_22
{
	$RuffPuff 00000004 0000000A 00000000 00000000 00000000 00000000
	$RuffPuff 00000005 00000009 00000000 00000000 00000000 00000000
	$Bzzap 00000006 00000008 00000000 00000000 00000000 00000000
}

#new:Formation $Formation_23
{
	$RuffPuff 00000004 0000000A 00000000 00000000 00000000 00000000
	$RuffPuff 00000005 00000009 00000000 00000000 00000000 00000000
	$CrazeeDayzee 00000002 00000008 00000000 00000000 00000000 00000000
}

#new:Formation $Formation_24
{
	$RuffPuff 00000004 0000000A 00000000 00000000 00000000 00000000
	$RuffPuff 00000005 00000009 00000000 00000000 00000000 00000000
	$FlyingYMagikoopa 00000006 00000008 00000000 00000000 00000000 00000000
}

#new:FormationTable $FormationTable
{
	$SJIS_80235180 00000002 $Formation_00 $Stage_802312FC 00000000
	$SJIS_80235174 00000003 $Formation_01 $Stage_802312FC 00000000
	$SJIS_8023515C 00000002 $Formation_02 $Stage_802312FC 00000000
	$SJIS_80235144 00000003 $Formation_03 $Stage_802312FC 00000000
	$SJIS_80235120 00000004 $Formation_04 $Stage_802312FC 00000000
	$SJIS_8023510C 00000002 $Formation_05 $Stage_802312FC 00000000
	$SJIS_802350F8 00000002 $Formation_06 $Stage_802312FC 00000000
	$SJIS_802350E0 00000004 $Formation_07 $Stage_802312FC 00000000
	$SJIS_802350C8 00000004 $Formation_08 $Stage_802312FC 00000000
	$SJIS_802350A8 00000003 $Formation_09 $Stage_802312FC 00000000
	$SJIS_8023508C 00000003 $Formation_0A $Stage_802312FC 00000000
	$SJIS_8023506C 00000004 $Formation_0B $Stage_802312FC 00000000
	$SJIS_80235060 00000002 $Formation_0C $Stage_802312FC 00000000
	$SJIS_80235054 00000003 $Formation_0D $Stage_802312FC 00000000
	$SJIS_8023502C 00000003 $Formation_0E $Stage_802312FC 00000000
	$SJIS_8023501C 00000001 $Formation_0F $Stage_802312FC 00000000
	$SJIS_8023500C 00000002 $Formation_10 $Stage_802312FC 00000000
	$SJIS_80234FFC 00000003 $Formation_11 $Stage_802312FC 00000000
	$SJIS_80234FEC 00000004 $Formation_12 $Stage_802312FC 00000000
	$SJIS_80234FD4 00000002 $Formation_13 $Stage_802312FC 00000000
	$SJIS_80234FBC 00000003 $Formation_14 $Stage_802312FC 00000000
	$SJIS_80234FA4 00000003 $Formation_15 $Stage_802312FC 00000000
	$SJIS_80234F80 00000003 $Formation_16 $Stage_802312FC 00000000
	$SJIS_80234F74 00000002 $Formation_17 $Stage_802312FC 00000000
	$SJIS_80234F68 00000003 $Formation_18 $Stage_802312FC 00000000
	$SJIS_80234F44 00000003 $Formation_19 $Stage_802312FC 00000000
	$SJIS_80234F2C 00000002 $Formation_1A $Stage_802312FC 00000000
	$SJIS_80234F0C 00000003 $Formation_1B $Stage_802312FC 00000000
	$SJIS_80234EF4 00000001 $Formation_1C $Stage_802312FC 00000000
	$SJIS_80234ED4 00000003 $Formation_1D $Stage_802312FC 00000000
	$SJIS_80234EBC 00000004 $Formation_1E $Stage_802312FC 00000000
	$SJIS_80234EAC 00000002 $Formation_1F $Stage_802312FC 00000000
	$SJIS_80234E9C 00000004 $Formation_20 $Stage_802312FC 00000000
	$SJIS_80234E84 00000002 $Formation_21 $Stage_802312FC 00000000
	$SJIS_80234E68 00000003 $Formation_22 $Stage_802312FC 00000000
	$SJIS_80234E4C 00000003 $Formation_23 $Stage_802312FC 00000000
	$SJIS_80234E20 00000003 $Formation_24 $Stage_802312FC 00000000
	00000000 00000000 00000000 00000000 00000000
}

#new:StageTable $StageTable
{
	$ASCII_802351D4 $Stage_802312FC
	$ASCII_802351CC $Stage_80231794
	$ASCII_802351C4 $Stage_80231C34
	$ASCII_802351BC $Stage_802320B8
	$ASCII_802351B4 $Stage_80232560
	$ASCII_802351AC $Stage_802329FC
	$ASCII_802351A4 $Stage_8023343C
	$ASCII_8023519C $Stage_80233840
	$ASCII_80235194 $Stage_80233928
	$ASCII_8023518C $Stage_80233A08
	00000000 00000000
}

PADDING: 802348C4 to 802348D0 (005CDD74 to 005CDD80)
00000000 00000000 00000000

% Origin: HEURISTIC
#new:ASCII $ASCII_802348D0
{
	"flo_24"
}

% Origin: HEURISTIC
#new:ASCII $ASCII_802348D8
{
	"flo_22"
}

% Origin: HEURISTIC
#new:ASCII $ASCII_802348E0
{
	"flo_21"
}

% Origin: HEURISTIC
#new:ASCII $ASCII_802348E8
{
	"flo_19"
}

% Origin: HEURISTIC
#new:ASCII $ASCII_802348F0
{
	"flo_18"
}

% Origin: HEURISTIC
#new:ASCII $ASCII_802348F8
{
	"flo_17"
}

% Origin: HEURISTIC
#new:ASCII $ASCII_80234900
{
	"flo_16"
}

% Origin: HEURISTIC
#new:ASCII $ASCII_80234908
{
	"flo_10"
}

% Origin: HEURISTIC
#new:ASCII $ASCII_80234910
{
	"flo_09"
}

% Origin: HEURISTIC
#new:ASCII $ASCII_80234918
{
	"flo_08"
}

% Origin: HEURISTIC
#new:ASCII $ASCII_80234920
{
	"flo_03"
}

#new:ASCII $ASCII_80234928
{
	"fla_bg"
}

#new:ASCII $ASCII_80234930
{
	"flo_bt01_hit"
}

#new:ASCII $ASCII_80234940
{
	"flo_bt01_shape"
}

#new:ASCII $ASCII_80234950
{
	"flo_tex"
}

% Origin: HEURISTIC
#new:ASCII $ASCII_80234958
{
	"flo_24"
}

% Origin: HEURISTIC
#new:ASCII $ASCII_80234960
{
	"flo_22"
}

% Origin: HEURISTIC
#new:ASCII $ASCII_80234968
{
	"flo_21"
}

% Origin: HEURISTIC
#new:ASCII $ASCII_80234970
{
	"flo_19"
}

% Origin: HEURISTIC
#new:ASCII $ASCII_80234978
{
	"flo_18"
}

% Origin: HEURISTIC
#new:ASCII $ASCII_80234980
{
	"flo_17"
}

% Origin: HEURISTIC
#new:ASCII $ASCII_80234988
{
	"flo_16"
}

% Origin: HEURISTIC
#new:ASCII $ASCII_80234990
{
	"flo_10"
}

% Origin: HEURISTIC
#new:ASCII $ASCII_80234998
{
	"flo_09"
}

% Origin: HEURISTIC
#new:ASCII $ASCII_802349A0
{
	"flo_08"
}

% Origin: HEURISTIC
#new:ASCII $ASCII_802349A8
{
	"flo_03"
}

#new:ASCII $ASCII_802349B0
{
	"fla_bg"
}

#new:ASCII $ASCII_802349B8
{
	"flo_bt01_hit"
}

#new:ASCII $ASCII_802349C8
{
	"flo_bt01_shape"
}

#new:ASCII $ASCII_802349D8
{
	"flo_tex"
}

% Origin: HEURISTIC
#new:ASCII $ASCII_802349E0
{
	"flo_24"
}

% Origin: HEURISTIC
#new:ASCII $ASCII_802349E8
{
	"flo_22"
}

% Origin: HEURISTIC
#new:ASCII $ASCII_802349F0
{
	"flo_21"
}

% Origin: HEURISTIC
#new:ASCII $ASCII_802349F8
{
	"flo_19"
}

% Origin: HEURISTIC
#new:ASCII $ASCII_80234A00
{
	"flo_18"
}

% Origin: HEURISTIC
#new:ASCII $ASCII_80234A08
{
	"flo_17"
}

% Origin: HEURISTIC
#new:ASCII $ASCII_80234A10
{
	"flo_16"
}

% Origin: HEURISTIC
#new:ASCII $ASCII_80234A18
{
	"flo_10"
}

% Origin: HEURISTIC
#new:ASCII $ASCII_80234A20
{
	"flo_09"
}

% Origin: HEURISTIC
#new:ASCII $ASCII_80234A28
{
	"flo_08"
}

% Origin: HEURISTIC
#new:ASCII $ASCII_80234A30
{
	"flo_03"
}

#new:ASCII $ASCII_80234A38
{
	"fla_bg"
}

#new:ASCII $ASCII_80234A40
{
	"flo_bt01_hit"
}

#new:ASCII $ASCII_80234A50
{
	"flo_bt01_shape"
}

#new:ASCII $ASCII_80234A60
{
	"flo_tex"
}

% Origin: HEURISTIC
#new:ASCII $ASCII_80234A68
{
	"flo_24"
}

% Origin: HEURISTIC
#new:ASCII $ASCII_80234A70
{
	"flo_22"
}

% Origin: HEURISTIC
#new:ASCII $ASCII_80234A78
{
	"flo_21"
}

% Origin: HEURISTIC
#new:ASCII $ASCII_80234A80
{
	"flo_19"
}

% Origin: HEURISTIC
#new:ASCII $ASCII_80234A88
{
	"flo_18"
}

% Origin: HEURISTIC
#new:ASCII $ASCII_80234A90
{
	"flo_17"
}

% Origin: HEURISTIC
#new:ASCII $ASCII_80234A98
{
	"flo_16"
}

% Origin: HEURISTIC
#new:ASCII $ASCII_80234AA0
{
	"flo_10"
}

% Origin: HEURISTIC
#new:ASCII $ASCII_80234AA8
{
	"flo_09"
}

% Origin: HEURISTIC
#new:ASCII $ASCII_80234AB0
{
	"flo_08"
}

% Origin: HEURISTIC
#new:ASCII $ASCII_80234AB8
{
	"flo_03"
}

#new:ASCII $ASCII_80234AC0
{
	"fla_bg"
}

#new:ASCII $ASCII_80234AC8
{
	"flo_bt02_hit"
}

#new:ASCII $ASCII_80234AD8
{
	"flo_bt02_shape"
}

#new:ASCII $ASCII_80234AE8
{
	"flo_tex"
}

% Origin: HEURISTIC
#new:ASCII $ASCII_80234AF0
{
	"flo_24"
}

% Origin: HEURISTIC
#new:ASCII $ASCII_80234AF8
{
	"flo_22"
}

% Origin: HEURISTIC
#new:ASCII $ASCII_80234B00
{
	"flo_21"
}

% Origin: HEURISTIC
#new:ASCII $ASCII_80234B08
{
	"flo_19"
}

% Origin: HEURISTIC
#new:ASCII $ASCII_80234B10
{
	"flo_18"
}

% Origin: HEURISTIC
#new:ASCII $ASCII_80234B18
{
	"flo_17"
}

% Origin: HEURISTIC
#new:ASCII $ASCII_80234B20
{
	"flo_16"
}

% Origin: HEURISTIC
#new:ASCII $ASCII_80234B28
{
	"flo_10"
}

% Origin: HEURISTIC
#new:ASCII $ASCII_80234B30
{
	"flo_09"
}

% Origin: HEURISTIC
#new:ASCII $ASCII_80234B38
{
	"flo_08"
}

% Origin: HEURISTIC
#new:ASCII $ASCII_80234B40
{
	"flo_03"
}

#new:ASCII $ASCII_80234B48
{
	"fla_bg"
}

#new:ASCII $ASCII_80234B50
{
	"flo_bt02_hit"
}

#new:ASCII $ASCII_80234B60
{
	"flo_bt02_shape"
}

#new:ASCII $ASCII_80234B70
{
	"flo_tex"
}

% Origin: HEURISTIC
#new:ASCII $ASCII_80234B78
{
	"flo_24"
}

% Origin: HEURISTIC
#new:ASCII $ASCII_80234B80
{
	"flo_22"
}

% Origin: HEURISTIC
#new:ASCII $ASCII_80234B88
{
	"flo_21"
}

% Origin: HEURISTIC
#new:ASCII $ASCII_80234B90
{
	"flo_19"
}

% Origin: HEURISTIC
#new:ASCII $ASCII_80234B98
{
	"flo_18"
}

% Origin: HEURISTIC
#new:ASCII $ASCII_80234BA0
{
	"flo_17"
}

% Origin: HEURISTIC
#new:ASCII $ASCII_80234BA8
{
	"flo_16"
}

% Origin: HEURISTIC
#new:ASCII $ASCII_80234BB0
{
	"flo_10"
}

% Origin: HEURISTIC
#new:ASCII $ASCII_80234BB8
{
	"flo_09"
}

% Origin: HEURISTIC
#new:ASCII $ASCII_80234BC0
{
	"flo_08"
}

% Origin: HEURISTIC
#new:ASCII $ASCII_80234BC8
{
	"flo_03"
}

#new:ASCII $ASCII_80234BD0
{
	"fla_bg"
}

#new:ASCII $ASCII_80234BD8
{
	"flo_bt02_hit"
}

#new:ASCII $ASCII_80234BE8
{
	"flo_bt02_shape"
}

#new:ASCII $ASCII_80234BF8
{
	"flo_tex"
}

% Origin: HEURISTIC
#new:ASCII $ASCII_80234C00
{
	"flo_24"
}

% Origin: HEURISTIC
#new:ASCII $ASCII_80234C08
{
	"flo_22"
}

% Origin: HEURISTIC
#new:ASCII $ASCII_80234C10
{
	"flo_21"
}

% Origin: HEURISTIC
#new:ASCII $ASCII_80234C18
{
	"flo_19"
}

% Origin: HEURISTIC
#new:ASCII $ASCII_80234C20
{
	"flo_18"
}

% Origin: HEURISTIC
#new:ASCII $ASCII_80234C28
{
	"flo_17"
}

% Origin: HEURISTIC
#new:ASCII $ASCII_80234C30
{
	"flo_16"
}

% Origin: HEURISTIC
#new:ASCII $ASCII_80234C38
{
	"flo_10"
}

% Origin: HEURISTIC
#new:ASCII $ASCII_80234C40
{
	"flo_09"
}

% Origin: HEURISTIC
#new:ASCII $ASCII_80234C48
{
	"flo_08"
}

% Origin: HEURISTIC
#new:ASCII $ASCII_80234C50
{
	"flo_03"
}

#new:ASCII $ASCII_80234C58
{
	"fla_bg"
}

#new:ASCII $ASCII_80234C60
{
	"flo_bt03_hit"
}

#new:ASCII $ASCII_80234C70
{
	"flo_bt03_shape"
}

#new:ASCII $ASCII_80234C80
{
	"flo_tex"
}

% Origin: HEURISTIC
#new:ASCII $ASCII_80234C88
{
	"flo_24"
}

% Origin: HEURISTIC
#new:ASCII $ASCII_80234C90
{
	"flo_22"
}

% Origin: HEURISTIC
#new:ASCII $ASCII_80234C98
{
	"flo_21"
}

% Origin: HEURISTIC
#new:ASCII $ASCII_80234CA0
{
	"flo_19"
}

% Origin: HEURISTIC
#new:ASCII $ASCII_80234CA8
{
	"flo_18"
}

% Origin: HEURISTIC
#new:ASCII $ASCII_80234CB0
{
	"flo_17"
}

% Origin: HEURISTIC
#new:ASCII $ASCII_80234CB8
{
	"flo_16"
}

% Origin: HEURISTIC
#new:ASCII $ASCII_80234CC0
{
	"flo_10"
}

% Origin: HEURISTIC
#new:ASCII $ASCII_80234CC8
{
	"flo_09"
}

% Origin: HEURISTIC
#new:ASCII $ASCII_80234CD0
{
	"flo_08"
}

% Origin: HEURISTIC
#new:ASCII $ASCII_80234CD8
{
	"flo_03"
}

#new:ASCII $ASCII_80234CE0
{
	"sra_bg"
}

#new:ASCII $ASCII_80234CE8
{
	"flo_bt04_hit"
}

#new:ASCII $ASCII_80234CF8
{
	"flo_bt04_shape"
}

#new:ASCII $ASCII_80234D08
{
	"flo_tex"
}

% Origin: HEURISTIC
#new:ASCII $ASCII_80234D10
{
	"flo_24"
}

% Origin: HEURISTIC
#new:ASCII $ASCII_80234D18
{
	"flo_22"
}

% Origin: HEURISTIC
#new:ASCII $ASCII_80234D20
{
	"flo_21"
}

% Origin: HEURISTIC
#new:ASCII $ASCII_80234D28
{
	"flo_19"
}

% Origin: HEURISTIC
#new:ASCII $ASCII_80234D30
{
	"flo_18"
}

% Origin: HEURISTIC
#new:ASCII $ASCII_80234D38
{
	"flo_17"
}

% Origin: HEURISTIC
#new:ASCII $ASCII_80234D40
{
	"flo_16"
}

% Origin: HEURISTIC
#new:ASCII $ASCII_80234D48
{
	"flo_10"
}

% Origin: HEURISTIC
#new:ASCII $ASCII_80234D50
{
	"flo_09"
}

% Origin: HEURISTIC
#new:ASCII $ASCII_80234D58
{
	"flo_08"
}

% Origin: HEURISTIC
#new:ASCII $ASCII_80234D60
{
	"flo_03"
}

#new:ASCII $ASCII_80234D68
{
	"fla_bg"
}

#new:ASCII $ASCII_80234D70
{
	"flo_bt05_hit"
}

#new:ASCII $ASCII_80234D80
{
	"flo_bt05_shape"
}

#new:ASCII $ASCII_80234D90
{
	"flo_tex"
}

% Origin: HEURISTIC
#new:ASCII $ASCII_80234D98
{
	"flo_24"
}

% Origin: HEURISTIC
#new:ASCII $ASCII_80234DA0
{
	"flo_22"
}

% Origin: HEURISTIC
#new:ASCII $ASCII_80234DA8
{
	"flo_21"
}

% Origin: HEURISTIC
#new:ASCII $ASCII_80234DB0
{
	"flo_19"
}

% Origin: HEURISTIC
#new:ASCII $ASCII_80234DB8
{
	"flo_18"
}

% Origin: HEURISTIC
#new:ASCII $ASCII_80234DC0
{
	"flo_17"
}

% Origin: HEURISTIC
#new:ASCII $ASCII_80234DC8
{
	"flo_16"
}

% Origin: HEURISTIC
#new:ASCII $ASCII_80234DD0
{
	"flo_10"
}

% Origin: HEURISTIC
#new:ASCII $ASCII_80234DD8
{
	"flo_09"
}

% Origin: HEURISTIC
#new:ASCII $ASCII_80234DE0
{
	"flo_08"
}

% Origin: HEURISTIC
#new:ASCII $ASCII_80234DE8
{
	"flo_03"
}

#new:ASCII $ASCII_80234DF0
{
	"fla_bg"
}

#new:ASCII $ASCII_80234DF8
{
	"flo_bt06_hit"
}

#new:ASCII $ASCII_80234E08
{
	"flo_bt06_shape"
}

#new:ASCII $ASCII_80234E18
{
	"flo_tex"
}

#new:SJIS $SJIS_80234E20
{
	クモクモーンx２,イエローカメック（そら） % kumokumo-nx2,iero-kamekku（sora）
}

#new:SJIS $SJIS_80234E4C
{
	クモクモーンx２,パンジー % kumokumo-nx2,panji-
}

#new:SJIS $SJIS_80234E68
{
	クモクモーンx２,ハッチー % kumokumo-nx2,hacchi-
}

#new:SJIS $SJIS_80234E84
{
	クモクモーン,ジュゲム % kumokumo-n,jugemu
}

#new:SJIS $SJIS_80234E9C
{
	クモクモーンx4 % kumokumo-nx4
}

#new:SJIS $SJIS_80234EAC
{
	クモクモーンx2 % kumokumo-nx2
}

#new:SJIS $SJIS_80234EBC
{
	きらめくパンジーさんx４ % kiramekupanji-sanx4
}

#new:SJIS $SJIS_80234ED4
{
	きらめくパンジーさん,ハッチーx2 % kiramekupanji-san,hacchi-x2
}

#new:SJIS $SJIS_80234EF4
{
	きらめくパンジーさん % kiramekupanji-san
}

#new:SJIS $SJIS_80234F0C
{
	ハッチー,クモクモーン,ハッチー % hacchi-,kumokumo-n,hacchi-
}

#new:SJIS $SJIS_80234F2C
{
	ハッチー,クモクモーン % hacchi-,kumokumo-n
}

#new:SJIS $SJIS_80234F44
{
	ハッチーx2,グリーンカメック（そら） % hacchi-x2,guri-nkamekku（sora）
}

#new:SJIS $SJIS_80234F68
{
	ハッチーx3 % hacchi-x3
}

#new:SJIS $SJIS_80234F74
{
	ハッチーx2 % hacchi-x2
}

#new:SJIS $SJIS_80234F80
{
	パンジーさんx2,きらめくパンジーさん % panji-sanx2,kiramekupanji-san
}

#new:SJIS $SJIS_80234FA4
{
	パンジーさんx2,ハッチー % panji-sanx2,hacchi-
}

#new:SJIS $SJIS_80234FBC
{
	パンジーさん,ハッチーx2 % panji-san,hacchi-x2
}

#new:SJIS $SJIS_80234FD4
{
	パンジーさん,ハッチー % panji-san,hacchi-
}

#new:SJIS $SJIS_80234FEC
{
	パンジーさんx4 % panji-sanx4
}

#new:SJIS $SJIS_80234FFC
{
	パンジーさんx3 % panji-sanx3
}

#new:SJIS $SJIS_8023500C
{
	パンジーさんx2 % panji-sanx2
}

#new:SJIS $SJIS_8023501C
{
	パンジーさん % panji-san
}

#new:SJIS $SJIS_8023502C
{
	トゲゾー,パンジーさん,かいふくヘイホー % togezo-,panji-san,kaifukuheiho-
}

#new:SJIS $SJIS_80235054
{
	トゲゾーx3 % togezo-x3
}

#new:SJIS $SJIS_80235060
{
	トゲゾーx2 % togezo-x2
}

#new:SJIS $SJIS_8023506C
{
	ジュゲムx３,イエローカメック % jugemux3,iero-kamekku
}

#new:SJIS $SJIS_8023508C
{
	ジュゲムx２,レッドカメック % jugemux2,reddokamekku
}

#new:SJIS $SJIS_802350A8
{
	ジュゲムx２,ホワイトカメック % jugemux2,howaitokamekku
}

#new:SJIS $SJIS_802350C8
{
	ジュゲムx３,トゲゾー % jugemux3,togezo-
}

#new:SJIS $SJIS_802350E0
{
	ジュゲムx２,トゲゾーx２ % jugemux2,togezo-x2
}

#new:SJIS $SJIS_802350F8
{
	ジュゲム,トゲゾー % jugemu,togezo-
}

#new:SJIS $SJIS_8023510C
{
	ジュゲム,パンジー % jugemu,panji-
}

#new:SJIS $SJIS_80235120
{
	ジュゲム,ハッチー,ジュゲム,ハッチー % jugemu,hacchi-,jugemu,hacchi-
}

#new:SJIS $SJIS_80235144
{
	ジュゲム,ハッチーx２ % jugemu,hacchi-x2
}

#new:SJIS $SJIS_8023515C
{
	ジュゲム,クモクモーン % jugemu,kumokumo-n
}

#new:SJIS $SJIS_80235174
{
	ジュゲムx3 % jugemux3
}

#new:SJIS $SJIS_80235180
{
	ジュゲムx2 % jugemux2
}

#new:ASCII $ASCII_8023518C
{
	"flo_06"
}

#new:ASCII $ASCII_80235194
{
	"flo_05"
}

#new:ASCII $ASCII_8023519C
{
	"flo_04"
}

#new:ASCII $ASCII_802351A4
{
	"flo_03"
}

#new:ASCII $ASCII_802351AC
{
	"flo_02c"
}

#new:ASCII $ASCII_802351B4
{
	"flo_02b"
}

#new:ASCII $ASCII_802351BC
{
	"flo_02"
}

#new:ASCII $ASCII_802351C4
{
	"flo_01c"
}

#new:ASCII $ASCII_802351CC
{
	"flo_01b"
}

#new:ASCII $ASCII_802351D4
{
	"flo_01"
}

PADDING: 802351DC to 802351E0 (005CE68C to 005CE690)
00000000

