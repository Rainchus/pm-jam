% Script File: 0D Area MIM.bscr
% Decoded from: 4F7BE0 to 4FEA50 (0D Area MIM)

#new:Function $Function_80218000
{
    0:  ADDIU     SP, SP, FFD8
    4:  SW        S1, 14 (SP)
    8:  COPY      S1, A0
    C:  SW        RA, 20 (SP)
   10:  SW        S3, 1C (SP)
   14:  SW        S2, 18 (SP)
   18:  SW        S0, 10 (SP)
   1C:  LW        S0, C (S1)
   20:  LW        A1, 0 (S0)
   24:  JAL       ~Func:get_variable
   28:  ADDIU     S0, S0, 4
   2C:  LW        A1, 0 (S0)
   30:  ADDIU     S0, S0, 4
   34:  COPY      A0, S1
   38:  JAL       ~Func:get_variable
   3C:  COPY      S3, V0
   40:  LW        A1, 0 (S0)
   44:  ADDIU     S0, S0, 4
   48:  COPY      A0, S1
   4C:  JAL       ~Func:get_variable
   50:  COPY      S2, V0
   54:  COPY      A0, S1
   58:  LW        A1, 0 (S0)
   5C:  JAL       ~Func:get_variable
   60:  COPY      S0, V0
   64:  MTC1      S3, F12
   68:  NOP
   6C:  CVT.S.W   F12, F12
   70:  MTC1      S2, F14
   74:  NOP
   78:  CVT.S.W   F14, F14
   7C:  MTC1      S0, F0
   80:  NOP
   84:  CVT.S.W   F0, F0
   88:  MFC1      A2, F0
   8C:  JAL       802D7460
   90:  COPY      A3, V0
   94:  LW        RA, 20 (SP)
   98:  LW        S3, 1C (SP)
   9C:  LW        S2, 18 (SP)
   A0:  LW        S1, 14 (SP)
   A4:  LW        S0, 10 (SP)
   A8:  LI        V0, 2
   AC:  JR        RA
   B0:  ADDIU     SP, SP, 28
}

#new:Function $Function_802180B4
{
    0:  ADDIU     SP, SP, FFD8
    4:  SW        S1, 14 (SP)
    8:  COPY      S1, A0
    C:  SW        RA, 20 (SP)
   10:  SW        S3, 1C (SP)
   14:  SW        S2, 18 (SP)
   18:  SW        S0, 10 (SP)
   1C:  LW        S0, C (S1)
   20:  LW        A1, 0 (S0)
   24:  JAL       ~Func:get_variable
   28:  ADDIU     S0, S0, 4
   2C:  LW        A1, 0 (S0)
   30:  ADDIU     S0, S0, 4
   34:  COPY      A0, S1
   38:  JAL       ~Func:get_variable
   3C:  COPY      S3, V0
   40:  LW        A1, 0 (S0)
   44:  ADDIU     S0, S0, 4
   48:  COPY      A0, S1
   4C:  JAL       ~Func:get_variable
   50:  COPY      S2, V0
   54:  COPY      A0, S1
   58:  LW        A1, 0 (S0)
   5C:  JAL       ~Func:get_variable
   60:  COPY      S0, V0
   64:  MTC1      S3, F12
   68:  NOP
   6C:  CVT.S.W   F12, F12
   70:  MTC1      S2, F14
   74:  NOP
   78:  CVT.S.W   F14, F14
   7C:  MTC1      S0, F0
   80:  NOP
   84:  CVT.S.W   F0, F0
   88:  MFC1      A2, F0
   8C:  JAL       802D74C0
   90:  COPY      A3, V0
   94:  LW        RA, 20 (SP)
   98:  LW        S3, 1C (SP)
   9C:  LW        S2, 18 (SP)
   A0:  LW        S1, 14 (SP)
   A4:  LW        S0, 10 (SP)
   A8:  LI        V0, 2
   AC:  JR        RA
   B0:  ADDIU     SP, SP, 28
}

PADDING: 80218168 to 80218170 (004F7D48 to 004F7D50)
00000000 00000000

#new:Function $Function_80218170
{
    0:  ADDIU     SP, SP, FFD8
    4:  SW        S1, 14 (SP)
    8:  COPY      S1, A0
    C:  SW        RA, 20 (SP)
   10:  SW        S3, 1C (SP)
   14:  SW        S2, 18 (SP)
   18:  SW        S0, 10 (SP)
   1C:  LW        S0, C (S1)
   20:  LW        A1, 0 (S0)
   24:  JAL       ~Func:get_variable
   28:  ADDIU     S0, S0, 4
   2C:  LW        A1, 0 (S0)
   30:  ADDIU     S0, S0, 4
   34:  COPY      A0, S1
   38:  JAL       ~Func:get_variable
   3C:  COPY      S3, V0
   40:  LW        A1, 0 (S0)
   44:  ADDIU     S0, S0, 4
   48:  COPY      A0, S1
   4C:  JAL       ~Func:get_variable
   50:  COPY      S2, V0
   54:  COPY      A0, S1
   58:  LW        A1, 0 (S0)
   5C:  JAL       ~Func:get_variable
   60:  COPY      S0, V0
   64:  LW        A0, 148 (S1)
   68:  JAL       ~Func:get_actor
   6C:  COPY      S1, V0
   70:  COPY      V1, V0
   74:  LW        V0, 8 (V1)
   78:  LBU       V0, 24 (V0)
   7C:  LW        A0, 8 (V1)
   80:  SUBU      S3, S3, V0
   84:  SB        S3, 194 (V1)
   88:  LBU       V0, 25 (A0)
   8C:  SUBU      S2, S2, V0
   90:  SB        S2, 195 (V1)
   94:  LBU       V0, 26 (A0)
   98:  SUBU      S0, S0, V0
   9C:  SB        S0, 196 (V1)
   A0:  LBU       A0, 27 (A0)
   A4:  SUBU      S1, S1, A0
   A8:  SB        S1, 197 (V1)
   AC:  LW        RA, 20 (SP)
   B0:  LW        S3, 1C (SP)
   B4:  LW        S2, 18 (SP)
   B8:  LW        S1, 14 (SP)
   BC:  LW        S0, 10 (SP)
   C0:  LI        V0, 2
   C4:  JR        RA
   C8:  ADDIU     SP, SP, 28
}

#new:Function $Function_8021823C
{
    0:  ADDIU     SP, SP, FFC8
    4:  SW        S1, 14 (SP)
    8:  COPY      S1, A0
    C:  SW        RA, 24 (SP)
   10:  SW        S4, 20 (SP)
   14:  SW        S3, 1C (SP)
   18:  SW        S2, 18 (SP)
   1C:  SW        S0, 10 (SP)
   20:  SDC1      F22, 30 (SP)
   24:  SDC1      F20, 28 (SP)
   28:  LW        S0, C (S1)
   2C:  LW        A1, 0 (S0)
   30:  JAL       ~Func:get_variable
   34:  ADDIU     S0, S0, 4
   38:  LW        A1, 0 (S0)
   3C:  ADDIU     S0, S0, 4
   40:  COPY      A0, S1
   44:  JAL       ~Func:get_variable
   48:  COPY      S3, V0
   4C:  LW        A1, 0 (S0)
   50:  ADDIU     S0, S0, 4
   54:  COPY      A0, S1
   58:  JAL       ~Func:get_variable
   5C:  COPY      S4, V0
   60:  COPY      A0, S1
   64:  LW        A1, 0 (S0)
   68:  JAL       ~Func:get_variable
   6C:  COPY      S2, V0
   70:  MTC1      V0, F20
   74:  NOP
   78:  CVT.S.W   F20, F20
   7C:  JAL       ~Func:cos_deg
   80:  MOV.S     F12, F20
   84:  MTC1      S2, F22
   88:  NOP
   8C:  CVT.S.W   F22, F22
   90:  MUL.S     F0, F22, F0
   94:  NOP
   98:  MOV.S     F12, F20
   9C:  MTC1      S3, F20
   A0:  NOP
   A4:  CVT.S.W   F20, F20
   A8:  ADD.S     F20, F20, F0
   AC:  JAL       ~Func:sin_deg
   B0:  ADDIU     S0, S0, 4
   B4:  MUL.S     F22, F22, F0
   B8:  NOP
   BC:  LW        A1, 0 (S0)
   C0:  ADDIU     S0, S0, 4
   C4:  COPY      A0, S1
   C8:  MFC1      A2, F20
   CC:  MTC1      S4, F20
   D0:  NOP
   D4:  CVT.S.W   F20, F20
   D8:  JAL       ~Func:set_float_variable
   DC:  SUB.S     F20, F20, F22
   E0:  LW        A1, 0 (S0)
   E4:  MFC1      A2, F20
   E8:  JAL       ~Func:set_float_variable
   EC:  COPY      A0, S1
   F0:  LW        RA, 24 (SP)
   F4:  LW        S4, 20 (SP)
   F8:  LW        S3, 1C (SP)
   FC:  LW        S2, 18 (SP)
  100:  LW        S1, 14 (SP)
  104:  LW        S0, 10 (SP)
  108:  LDC1      F22, 30 (SP)
  10C:  LDC1      F20, 28 (SP)
  110:  LI        V0, 2
  114:  JR        RA
  118:  ADDIU     SP, SP, 38
}

PADDING: 80218358 to 80218360 (004F7F38 to 004F7F40)
00000000 00000000

#new:Function $Function_80218360
{
    0:  ADDIU     SP, SP, FFE8
    4:  SW        RA, 10 (SP)
    8:  JAL       ~Func:enable_world_fog
    C:  NOP
   10:  LI        A0, 3B6
   14:  JAL       ~Func:set_world_fog_dist
   18:  LI        A1, 3E8
   1C:  LI        A0, 10
   20:  COPY      A1, A0
   24:  COPY      A2, A0
   28:  JAL       ~Func:set_world_fog_color
   2C:  LI        A3, FF
   30:  LA        V0, 800B1D80
   38:  LI        V1, 14
   3C:  SH        V1, 584 (V0)
   40:  SH        V1, 586 (V0)
   44:  LI        V1, 1C
   48:  SH        V1, 588 (V0)
   4C:  LW        RA, 10 (SP)
   50:  LI        V0, 2
   54:  JR        RA
   58:  ADDIU     SP, SP, 18
}

PADDING: 802183BC to 802183C0 (004F7F9C to 004F7FA0)
00000000

#new:DefenseTable $DefenseTable_802183C0
{
	.Element:Normal 00000000
	.Element:End
}

#new:StatusTable $StatusTable_802183CC
{
	.Status:Normal      0`
	.Status:Default     0`
	.Status:Sleep      95`
	.Status:Poison     90`
	.Status:Frozen      0`
	.Status:Dizzy      90`
	.Status:Fear        0`
	.Status:Static     70`
	.Status:Paralyze   75`
	.Status:Shrink     75`
	.Status:Stop       90`
	.Status:DefaultTurnMod    0`
	.Status:SleepTurnMod     -1`
	.Status:PoisonTurnMod     0`
	.Status:FrozenTurnMod     0`
	.Status:DizzyTurnMod      0`
	.Status:FearTurnMod       0`
	.Status:StaticTurnMod     0`
	.Status:ParalyzeTurnMod   0`
	.Status:ShrinkTurnMod     0`
	.Status:StopTurnMod       0`
	.Status:End
}

#new:PartsTable $PartsTable_80218478
{
	00800000 01000000 001400FF $IdleAnimations_802184C4 $DefenseTable_802183C0 00000000 00000000 00F60000 00000000
}

#new:Actor $ForestFuzzy
{
	% stats
	[Index]        1Ab
	[Level]        11`b
	[MaxHP]         6`b
	[Coins]         1`b
	[Flags]       00000000
	[StatusTable] $StatusTable_802183CC
	% ai
	[PartsCount]    1`s
	[PartsTable]  $PartsTable_80218478
	[Script]      $Script_Init_80218510
	% move effectiveness
	[Escape]       40`b
	[Item]         85`b
	[AirLift]      90`b
	[Hurricane]    90`b % Bow's "Spook" as well
	[UpAndAway]    95`b
	[PowerBounce] 100`b
	[SpinSmash]     0`b % weight (0-4)
	% ui positions
	[Size]         33`b  28`b % width height
	[HealthBar]     0`b   0`b % dx dy
	[StatusTurn]  -10`b  20`b % dx dy
	[StatusIcon]   10`b  20`b % dx dy
}

#new:IdleAnimations $IdleAnimations_802184C4
{
	.Status:Normal    002B0101
	.Status:Stone     002B0100
	.Status:Sleep     002B010E
	.Status:Poison    002B0101
	.Status:Stop      002B0100
	.Status:Static    002B0101
	.Status:Paralyze  002B0100
	.Status:Dizzy     002B010F
	.Status:Fear      002B010F
	.Status:End
}

#new:Script $Script_Init_80218510
{
    0:  Call  BindTakeTurn  ( .Actor:Self $Script_TakeTurn_8021A61C )
   14:  Call  BindIdle      ( .Actor:Self $Script_Idle_80218574 )
   28:  Call  BindHandleEvent   ( .Actor:Self $Script_HandleEvent_80218584 )
   3C:  Call  SetActorVar   ( .Actor:Self 00000000 00000000 )
   54:  Return
   5C:  End
}

#new:Script $Script_Idle_80218574
{
    0:  Return
    8:  End
}

#new:Script $Script_HandleEvent_80218584
{
    0:  Call  UseIdleAnimation  ( .Actor:Self .False )
   14:  Call  EnableIdleScript  ( .Actor:Self 00000000 )
   28:  Call  SetActorScale     ( .Actor:Self *Fixed[1.0] *Fixed[1.0] *Fixed[1.0] )
   44:  Call  SetActorDispOffset    ( .Actor:Self 00000000 00000000 00000000 )
   60:  Call  GetLastEvent      ( .Actor:Self *Var0 )
   74:  Switch  *Var0
   80:  	CaseOR  ==  .Event:HitCombo % 9
   8C:  	CaseOR  ==  .Event:Hit % A
   98:  		Call  GetLastElement    ( *Var0 )
   A8:  		If  *Var0  &  00000020
   B8:  			SetConst  *Var0  00000001
   C8:  			SetConst  *Var1  002B0113
   D8:  		Else
   E0:  			SetConst  *Var0  00000001
   F0:  			SetConst  *Var1  002B0108
  100:  		EndIf
  108:  		ExecWait  DoNormalHit
  114:  	EndCaseGroup
  11C:  	Case  ==  .Event:BurnHit % E
  128:  		SetConst  *Var0  00000001
  138:  		SetConst  *Var1  002B0110
  148:  		SetConst  *Var2  002B0112
  158:  		ExecWait  DoBurnHit
  164:  	Case  ==  .Event:BurnDeath % 24
  170:  		SetConst  *Var0  00000001
  180:  		SetConst  *Var1  002B0110
  190:  		SetConst  *Var2  002B0112
  1A0:  		ExecWait  DoBurnHit
  1AC:  		SetConst  *Var0  00000001
  1BC:  		SetConst  *Var1  002B0112
  1CC:  		ExecWait  DoDeath
  1D8:  		Return
  1E0:  	Case  ==  .Event:SpinSmashHit % B
  1EC:  		SetConst  *Var0  00000001
  1FC:  		SetConst  *Var1  002B0108
  20C:  		ExecWait  DoSpinSmashHit
  218:  	Case  ==  .Event:SpinSmashDeath % 21
  224:  		SetConst  *Var0  00000001
  234:  		SetConst  *Var1  002B0108
  244:  		ExecWait  DoSpinSmashHit
  250:  		SetConst  *Var0  00000001
  260:  		SetConst  *Var1  002B0108
  270:  		ExecWait  DoDeath
  27C:  		Return
  284:  	Case  ==  .Event:ShockHit % 2F
  290:  		Call  80269470 ( )
  29C:  		SetConst  *Var0  00000001
  2AC:  		SetConst  *Var1  002B0113
  2BC:  		ExecWait  DoShockHit
  2C8:  		SetConst  *Var0  00000001
  2D8:  		SetConst  *Var1  002B0113
  2E8:  		ExecWait  DoJumpBack
  2F4:  		Call  JumpToGoal    ( .Actor:Self  5` .False .True .False )
  314:  		SetConst  *Var0  00000001
  324:  		SetConst  *Var1  002B0103
  334:  		ExecWait  8029C0A4
  340:  		Call  SetActorJumpGravity   ( .Actor:Self *Fixed[1.6] )
  354:  		Call  JumpToGoal    ( .Actor:Self  5` .False .True .False )
  374:  	Case  ==  .Event:ShockDeath % 26
  380:  		Call  80269470 ( )
  38C:  		SetConst  *Var0  00000001
  39C:  		SetConst  *Var1  002B0113
  3AC:  		ExecWait  DoShockHit
  3B8:  		SetConst  *Var0  00000001
  3C8:  		SetConst  *Var1  002B0113
  3D8:  		ExecWait  DoDeath
  3E4:  		Return
  3EC:  	CaseOR  ==  00000017 % 17
  3F8:  	CaseOR  ==  .Event:Immune % 19
  404:  		SetConst  *Var0  00000001
  414:  		SetConst  *Var1  002B0101
  424:  		ExecWait  DoImmune
  430:  	EndCaseGroup
  438:  	Case  ==  .Event:Death % 20
  444:  		Call  GetLastElement    ( *Var0 )
  454:  		If  *Var0  &  00000020
  464:  			SetConst  *Var0  00000001
  474:  			SetConst  *Var1  002B0113
  484:  			ExecWait  DoNormalHit
  490:  			Wait  10`
  49C:  			SetConst  *Var0  00000001
  4AC:  			SetConst  *Var1  002B0113
  4BC:  			ExecWait  DoDeath
  4C8:  		Else
  4D0:  			SetConst  *Var0  00000001
  4E0:  			SetConst  *Var1  002B0108
  4F0:  			ExecWait  DoNormalHit
  4FC:  			Wait  10`
  508:  			SetConst  *Var0  00000001
  518:  			SetConst  *Var1  002B0108
  528:  			ExecWait  DoDeath
  534:  		EndIf
  53C:  		Return
  544:  	Case  ==  .Event:RecoverStatus % 31
  550:  		SetConst  *Var0  00000001
  560:  		SetConst  *Var1  002B0101
  570:  		ExecWait  DoRecover
  57C:  	Case  ==  .Event:ScareAway % 39
  588:  		SetConst  *Var0  00000001
  598:  		SetConst  *Var1  002B0103
  5A8:  		SetConst  *Var2  002B0109
  5B8:  		ExecWait  DoScareAway
  5C4:  		Return
  5CC:  	Case  ==  .Event:BeginAirLift % 3A
  5D8:  		SetConst  *Var0  00000001
  5E8:  		SetConst  *Var1  002B0103
  5F8:  		ExecWait  DoAirLift
  604:  	Case  ==  .Event:BlowAway % 16
  610:  		SetConst  *Var0  00000001
  620:  		SetConst  *Var1  002B0103
  630:  		ExecWait  DoBlowAway
  63C:  		Return
  644:  	Case  ==  .Event:AirLiftFailed % 1F
  650:  		SetConst  *Var0  00000001
  660:  		SetConst  *Var1  002B0101
  670:  		ExecWait  DoImmune
  67C:  	Default
  684:  EndSwitch
  68C:  Call  EnableIdleScript  ( .Actor:Self 00000001 )
  6A0:  Call  UseIdleAnimation  ( .Actor:Self .True )
  6B4:  Return
  6BC:  End
}

#new:Script $Script_80218C48
{
    0:  Call  UseIdleAnimation      ( .Actor:Self .False )
   14:  Call  EnableIdleScript      ( .Actor:Self 00000000 )
   28:  Call  UseBattleCamPreset    ( 00000013 )
   38:  Call  GetActorPos   ( .Actor:Self *Var0 *Var1 *Var2 )
   54:  Call  SetBattleCamTarget    ( *Var0 *Var1 *Var2 )
   6C:  Call  SetBattleCamZoom      (  330` )
   7C:  Call  SetBattleCamOffsetZ   (  30` )
   8C:  Call  MoveBattleCamOver     (  20` )
   9C:  Wait  20`
   A8:  Call  SetActorDispOffset    ( .Actor:Self 00000000 00000000 00000000 )
   C4:  Call  UseBattleCamPreset    ( 00000001 )
   D4:  Thread
   DC:  	Wait  30`
   E8:  	Call  PlaySoundAtActor  ( .Actor:Self 0000206E )
   FC:  	Wait  30`
  108:  	Loop  00000004
  114:  		Call  PlaySoundAtActor  ( .Actor:Self 0000206F )
  128:  		Wait  11`
  134:  	EndLoop
  13C:  	Call  PlaySoundAtActor  ( .Actor:Self 00002070 )
  150:  EndThread
  158:  Call  SetAnimation  ( .Actor:Self 00000001 002B010D )
  170:  Wait  130`
  17C:  Call  SetAnimation  ( .Actor:Self 00000001 002B0102 )
  194:  Call  SummonEnemy   ( $SpecialFormation_8021A800 00000000 )
  1A8:  Call  GetActorPos   ( .Actor:Self *Var1 *Var2 *Var3 )
  1C4:  Call  SetActorPos   ( *Var0 *Var1 *Var2 *Var3 )
  1E0:  Call  SetGoalToIndex        ( *Var0 *VarA )
  1F4:  Call  UseBattleCamPreset    ( 00000002 )
  204:  Call  MoveBattleCamOver     (  20` )
  214:  Thread
  21C:  	Call  SetAnimation  ( .Actor:Self 00000001 002B0102 )
  234:  	Call  SetActorJumpGravity   ( .Actor:Self *Fixed[1.4] )
  248:  	Call  GetActorPos   ( .Actor:Self *Var1 *Var2 *Var3 )
  264:  	Call  SetGoalPos    ( .Actor:Self *Var1 *Var2 *Var3 )
  280:  	Call  JumpToGoal    ( .Actor:Self  14` .False .True .False )
  2A0:  EndThread
  2A8:  Wait  1`
  2B4:  Call  SetAnimation  ( *Var0 00000001 002B0102 )
  2CC:  Call  SetActorJumpGravity   ( *Var0 *Fixed[1.4] )
  2E0:  Call  JumpToGoal    ( *Var0  14` .False .True .False )
  300:  Call  GetActorPos   ( *Var0 *Var1 *Var2 *Var3 )
  31C:  Call  ForceHomePos  ( *Var0 *Var1 *Var2 *Var3 )
  338:  Call  HPBarToHome   ( *Var0 )
  348:  Call  SetAnimation  ( *Var0 00000001 002B0101 )
  360:  Call  GetActorVar   ( .Actor:Self 00000000 *Var1 )
  378:  Switch  *Var1
  384:  	Case  ==  00000000
  390:  		Call  SetActorVar   ( *Var0 00000000 00000001 )
  3A8:  	Case  ==  00000001
  3B4:  		Call  SetActorVar   ( *Var0 00000000 00000002 )
  3CC:  EndSwitch
  3D4:  Call  EnableIdleScript  ( .Actor:Self 00000001 )
  3E8:  Call  UseIdleAnimation  ( .Actor:Self .True )
  3FC:  Return
  404:  End
}

#new:Script $Script_80219054
{
    0:  Call  UseIdleAnimation  ( .Actor:Self .False )
   14:  Call  EnableIdleScript  ( .Actor:Self 00000000 )
   28:  Call  UseBattleCamPreset    ( 0000003F )
   38:  Call  BattleCamTargetActor  ( .Actor:Self )
   48:  Call  8024ECF8  ( FFFFFFFF 00000001 00000000 )
   60:  Call  GetBattlePhase    ( *Var0 )
   70:  If  *Var0  ==  00000001
   80:  	Call  SetGoalToTarget   ( .Actor:Self )
   90:  	Call  GetGoalPos        ( .Actor:Self *Var0 *Var1 *Var2 )
   AC:  	Add   *Var0  00000032
   BC:  	Set   *Var1  00000000
   CC:  	Call  SetActorPos       ( .Actor:Self *Var0 *Var1 *Var2 )
   E8:  	Goto  64
   F4:  EndIf
   FC:  Call  SetTargetActor    ( .Actor:Self .Actor:Player )
  110:  Call  SetAnimation      ( .Actor:Self 00000001 002B0103 )
  128:  Call  SetGoalToTarget   ( .Actor:Self )
  138:  Call  GetGoalPos        ( .Actor:Self *Var0 *Var1 *Var2 )
  154:  Add   *Var0  00000032
  164:  Set   *Var1  00000000
  174:  Call  SetActorSpeed     ( .Actor:Self *Fixed[6.0] )
  188:  Call  SetActorJumpGravity   ( .Actor:Self *Fixed[1.8] )
  19C:  ExecWait  8029C12C
  1A8:  Call  SetAnimation      ( .Actor:Self 00000001 002B0101 )
  1C0:  Label  64
  1CC:  Call  SetActorDispOffset    ( .Actor:Self 00000000 0000000A 00000000 )
  1E8:  Call  SetAnimation      ( .Actor:Self 00000001 002B0104 )
  200:  Call  SetActorDispOffset    ( .Actor:Self 00000000 00000009 00000000 )
  21C:  Wait  1`
  228:  Call  SetActorDispOffset    ( .Actor:Self 00000000 00000008 00000000 )
  244:  Wait  5`
  250:  Call  EnemyTestTarget   ( .Actor:Self *Var0 ~Flags:DamageType:IgnoreDefense 00000000 00000001 00000010 )
  274:  Switch  *Var0
  280:  	CaseOR  ==  .HitResult:Miss % 6
  28C:  	CaseOR  ==  .HitResult:Lucky % 5
  298:  		Set   *VarA  *Var0
  2A8:  		Call  SetGoalToTarget       ( .Actor:Self )
  2B8:  		Call  GetGoalPos    ( .Actor:Self *Var0 *Var1 *Var2 )
  2D4:  		Sub   *Var0  00000005
  2E4:  		Set   *Var1  00000000
  2F4:  		Sub   *Var2  00000005
  304:  		Call  SetActorJumpGravity   ( .Actor:Self *Fixed[3.0] )
  318:  		Call  SetAnimation  ( .Actor:Self 00000001 002B0105 )
  330:  		Call  SetGoalPos    ( .Actor:Self *Var0 *Var1 *Var2 )
  34C:  		Call  JumpToGoal    ( .Actor:Self  11` .False .True .False )
  36C:  		Call  SetActorDispOffset    ( .Actor:Self 00000000 00000000 00000000 )
  388:  		Call  SetAnimation  ( .Actor:Self 00000001 002B0109 )
  3A0:  		Call  GetGoalPos    ( .Actor:Self *Var0 *Var1 *Var2 )
  3BC:  		Sub   *Var0  00000014
  3CC:  		Call  SetActorJumpGravity   ( .Actor:Self *Fixed[3.0] )
  3E0:  		Call  SetGoalPos    ( .Actor:Self *Var0 *Var1 *Var2 )
  3FC:  		Call  JumpToGoal    ( .Actor:Self  6` .False .True .False )
  41C:  		Call  GetGoalPos    ( .Actor:Self *Var0 *Var1 *Var2 )
  438:  		Sub   *Var0  0000000F
  448:  		Call  SetActorJumpGravity   ( .Actor:Self *Fixed[3.0] )
  45C:  		Call  SetGoalPos    ( .Actor:Self *Var0 *Var1 *Var2 )
  478:  		Call  JumpToGoal    ( .Actor:Self  5` .False .True .False )
  498:  		Call  GetGoalPos    ( .Actor:Self *Var0 *Var1 *Var2 )
  4B4:  		Wait  4`
  4C0:  		Wait  5`
  4CC:  		If  *VarA  ==  .HitResult:Lucky % 5
  4DC:  			Call  EnemyTestTarget   ( .Actor:Self *Var0 ~Flags:DamageType:TriggerLucky 00000000 00000000 00000000 )
  500:  		EndIf
  508:  		Wait  5`
  514:  		Call  UseBattleCamPreset    ( 00000002 )
  524:  		Call  YieldTurn ( )
  530:  		Call  SetActorYaw       ( .Actor:Self  180` )
  544:  		Call  AddActorDecoration    ( .Actor:Self 00000001 00000000 .Decoration:Sweat )
  560:  		Call  SetAnimation      ( .Actor:Self 00000001 002B0103 )
  578:  		Call  SetGoalToHome     ( .Actor:Self )
  588:  		Call  GetGoalPos        ( .Actor:Self *Var0 *Var1 *Var2 )
  5A4:  		Call  SetActorSpeed     ( .Actor:Self *Fixed[8.0] )
  5B8:  		Call  SetActorJumpGravity   ( .Actor:Self *Fixed[1.8] )
  5CC:  		ExecWait  8029C12C
  5D8:  		Call  RemoveActorDecoration ( .Actor:Self 00000001 00000000 )
  5F0:  		Call  SetActorYaw       ( .Actor:Self  0` )
  604:  		Call  EnableIdleScript  ( .Actor:Self 00000001 )
  618:  		Call  UseIdleAnimation  ( .Actor:Self .True )
  62C:  		Return
  634:  	EndCaseGroup
  63C:  	Case  ==  .HitResult:HitStatic % 7
  648:  		Call  GetStatusFlags    ( .Actor:Self *Var0 )
  65C:  		If  *Var0  &  ~Flags:StatusFlags:Static % 2000
  66C:  			Set   *Flag[00]  .False
  67C:  		Else
  684:  			Set   *Flag[00]  .True
  694:  		EndIf
  69C:  EndSwitch
  6A4:  Call  SetGoalToTarget   ( .Actor:Self )
  6B4:  Call  AddGoalPos        ( .Actor:Self  -3`  -12`  -15` )
  6D0:  Call  SetActorJumpGravity   ( .Actor:Self *Fixed[3.0] )
  6E4:  Call  SetAnimation      ( .Actor:Self 00000001 002B0105 )
  6FC:  Call  JumpToGoal        ( .Actor:Self  8` .False .True .False )
  71C:  If  *Flag[00]  ==  .True
  72C:  	Call  EnemyDamageTarget ( .Actor:Self *Var0 ~Flags:DamageType:IgnoreDefense 00000000 00000000 00000000 00000020 )
  754:  	Return
  75C:  EndIf
  764:  Wait  10`
  770:  Call  UseIdleAnimation  ( .Actor:Player .False )
  784:  Call  SetAnimation  ( .Actor:Player 00000000 0003000C )
  79C:  Call  PlaySoundAtActor  ( .Actor:Self 000003E0 )
  7B0:  Call  SetAnimation  ( .Actor:Self 00000001 002B0107 )
  7C8:  Wait  21`
  7D4:  Call  SetAnimation  ( .Actor:Self 00000001 002B0100 )
  7EC:  Call  SetActorRotation  ( .Actor:Self 00000000 00000000 0000014A )
  808:  Call  PlaySoundAtActor  ( .Actor:Self 000003E0 )
  81C:  Call  SetActorDispOffset    ( .Actor:Self FFFFFFFD FFFFFFFE 00000000 )
  838:  Call  SetActorScale ( .Actor:Self *Fixed[1.0] *Fixed[1.0] *Fixed[1.0] )
  854:  Wait  1`
  860:  Call  SetActorScale ( .Actor:Self *Fixed[0.9] *Fixed[1.2] *Fixed[1.0] )
  87C:  Wait  1`
  888:  Call  SetActorScale ( .Actor:Self *Fixed[0.8] *Fixed[1.3] *Fixed[1.0] )
  8A4:  Wait  1`
  8B0:  Call  SetActorScale ( .Actor:Self *Fixed[0.7] *Fixed[1.4] *Fixed[1.0] )
  8CC:  Wait  1`
  8D8:  Call  SetActorScale ( .Actor:Self *Fixed[0.7] *Fixed[1.5] *Fixed[1.0] )
  8F4:  Wait  2`
  900:  Call  SetActorScale ( .Actor:Self *Fixed[0.6] *Fixed[1.6] *Fixed[1.0] )
  91C:  Wait  10`
  928:  Wait  2`
  934:  Call  UseIdleAnimation  ( .Actor:Player .True )
  948:  Call  EnemyDamageTarget ( .Actor:Self *VarA ~Flags:DamageType:IgnoreDefense 00000000 00000000 00000001 00000020 )
  970:  Call  SetActorDispOffset    ( .Actor:Self 00000000 00000000 00000000 )
  98C:  Call  SetAnimation  ( .Actor:Self 00000001 002B0101 )
  9A4:  Call  UseBattleCamPreset    ( 00000002 )
  9B4:  Call  GetLastDamage ( .Actor:Player *Var3 )
  9C8:  If  *Var3  !=  00000000
  9D8:  	Call  PlaySoundAtActor  ( .Actor:Self 0000206D )
  9EC:  	Call  PlaySoundAtActor  ( .Actor:Self 00000214 )
  A00:  	Call  GetActorPos       ( .Actor:Self *Var0 *Var1 *Var2 )
  A1C:  	Add   *Var1  0000000A
  A2C:  	Call  $Function_80218000    ( *Var0 *Var1 *Var2 *Var3 )
  A48:  	Thread
  A50:  		Wait  15`
  A5C:  		Call  PlaySoundAtActor      ( .Actor:Self 0000025C )
  A70:  		Call  $Function_802180B4    ( *Var0 *Var1 *Var2 *Var3 )
  A8C:  	EndThread
  A94:  	Add   *Var0  00000014
  AA4:  	Add   *Var1  00000014
  AB4:  	Call  PlayEffect    ( ~FX:Recover:HP *Var0 *Var1 *Var2 *Var3 00000000 00000000 00000000 00000000 00000000 00000000 00000000 00000000 )
  AF8:  	Call  GetActorHP    ( .Actor:Self *Var0 )
  B0C:  	Add   *Var0  *Var3
  B1C:  	Call  SetEnemyHP    ( .Actor:Self *Var0 )
  B30:  EndIf
  B38:  Thread
  B40:  	Call  SetActorScale     ( .Actor:Self *Fixed[1.6] *Fixed[0.6] *Fixed[1.0] )
  B5C:  	Call  SetActorRotationOffset    ( .Actor:Self 00000000 0000000A 00000000 )
  B78:  	Wait  1`
  B84:  	Call  SetActorRotation  ( .Actor:Self 00000000 00000000 0000014A )
  BA0:  	Wait  1`
  BAC:  	Call  SetActorScale     ( .Actor:Self *Fixed[0.7] *Fixed[1.5] *Fixed[1.0] )
  BC8:  	Call  SetActorRotation  ( .Actor:Self 00000000 00000000 0000012C )
  BE4:  	Wait  1`
  BF0:  	Call  SetActorRotation  ( .Actor:Self 00000000 00000000 0000010E )
  C0C:  	Wait  1`
  C18:  	Call  SetActorScale     ( .Actor:Self *Fixed[1.0] *Fixed[0.7] *Fixed[1.0] )
  C34:  	Call  SetActorRotation  ( .Actor:Self 00000000 00000000 000000F0 )
  C50:  	Wait  1`
  C5C:  	Call  SetActorRotation  ( .Actor:Self 00000000 00000000 000000D2 )
  C78:  	Wait  1`
  C84:  	Call  SetActorScale     ( .Actor:Self *Fixed[0.7] *Fixed[1.4] *Fixed[1.0] )
  CA0:  	Call  SetActorRotation  ( .Actor:Self 00000000 00000000 000000B4 )
  CBC:  	Wait  2`
  CC8:  	Call  SetActorScale     ( .Actor:Self *Fixed[1.0] *Fixed[0.7] *Fixed[1.0] )
  CE4:  	Wait  2`
  CF0:  	Call  SetActorScale     ( .Actor:Self *Fixed[1.2] *Fixed[0.5] *Fixed[1.0] )
  D0C:  EndThread
  D14:  Call  GetGoalPos    ( .Actor:Self *Var0 *Var1 *Var2 )
  D30:  Add   *Var0  00000028
  D40:  Set   *Var1  00000000
  D50:  Call  SetActorJumpGravity   ( .Actor:Self *Fixed[1.8] )
  D64:  Call  SetGoalPos    ( .Actor:Self *Var0 *Var1 *Var2 )
  D80:  Call  JumpToGoal    ( .Actor:Self  10` .False .True .False )
  DA0:  Call  SetActorScale ( .Actor:Self *Fixed[1.4] *Fixed[0.2] *Fixed[1.0] )
  DBC:  Wait  1`
  DC8:  Thread
  DD0:  	Wait  1`
  DDC:  	Call  SetActorScale     ( .Actor:Self *Fixed[1.2] *Fixed[0.5] *Fixed[1.0] )
  DF8:  	Call  SetActorRotation  ( .Actor:Self 00000000 00000000 00000096 )
  E14:  	Wait  1`
  E20:  	Call  SetActorScale     ( .Actor:Self *Fixed[1.0] *Fixed[1.0] *Fixed[1.0] )
  E3C:  	Call  SetActorRotation  ( .Actor:Self 00000000 00000000 00000078 )
  E58:  	Wait  1`
  E64:  	Call  SetActorRotation  ( .Actor:Self 00000000 00000000 0000005A )
  E80:  	Wait  1`
  E8C:  	Call  SetActorRotation  ( .Actor:Self 00000000 00000000 0000003C )
  EA8:  	Wait  1`
  EB4:  	Call  SetActorRotation  ( .Actor:Self 00000000 00000000 0000001E )
  ED0:  	Wait  1`
  EDC:  	Call  SetActorRotation  ( .Actor:Self 00000000 00000000 00000000 )
  EF8:  	Call  SetActorRotationOffset    ( .Actor:Self 00000000 00000000 00000000 )
  F14:  EndThread
  F1C:  Call  GetGoalPos    ( .Actor:Self *Var0 *Var1 *Var2 )
  F38:  Add   *Var0  0000001E
  F48:  Call  SetGoalPos    ( .Actor:Self *Var0 *Var1 *Var2 )
  F64:  Call  JumpToGoal    ( .Actor:Self  8` .False .True .False )
  F84:  Wait  5`
  F90:  Call  YieldTurn ( )
  F9C:  Call  SetActorDispOffset    ( .Actor:Self 00000000 00000000 00000000 )
  FB8:  Call  SetAnimation  ( .Actor:Self 00000001 002B0103 )
  FD0:  Call  SetGoalToHome ( .Actor:Self )
  FE0:  Call  GetGoalPos    ( .Actor:Self *Var0 *Var1 *Var2 )
  FFC:  Call  SetActorSpeed ( .Actor:Self *Fixed[8.0] )
 1010:  Call  SetActorJumpGravity   ( .Actor:Self *Fixed[1.8] )
 1024:  ExecWait  8029C12C
 1030:  Call  SetAnimation  ( .Actor:Self 00000001 002B0101 )
 1048:  Call  EnableIdleScript      ( .Actor:Self 00000001 )
 105C:  Call  UseIdleAnimation      ( .Actor:Self .True )
 1070:  Return
 1078:  End
}

#new:Script $Script_8021A0D4
{
    0:  Set   *Flag[01]  .False
   10:  Set   *Flag[02]  .False
   20:  Set   *Flag[03]  .False
   30:  Set   *Flag[04]  .False
   40:  Call  EnemyCreateTargetList ( 00008002 )
   50:  Call  InitTargetIterator ( )
   5C:  Label  0
   68:  Call  GetOwnerTarget        ( *Var0 *Var5 )
   7C:  Call  GetIndexFromHome      ( *Var0 *Var5 )
   90:  Mod   *Var5  00000004
   A0:  Switch  *Var5
   AC:  	Case  ==  00000000
   B8:  		Set   *Flag[01]  .True
   C8:  	Case  ==  00000001
   D4:  		Set   *Flag[02]  .True
   E4:  	Case  ==  00000002
   F0:  		Set   *Flag[03]  .True
  100:  	Case  ==  00000003
  10C:  		Set   *Flag[04]  .True
  11C:  EndSwitch
  124:  Call  ChooseNextTarget  ( .Iter:Next *Var0 )
  138:  If  *Var0  !=  FFFFFFFF
  148:  	Goto  0
  154:  EndIf
  15C:  Set   *VarA  FFFFFFFF
  16C:  Set   *VarB  FFFFFFFF
  17C:  Call  GetIndexFromHome  ( .Actor:Self *Var0 )
  190:  Switch  *Var0
  19C:  	Case  ==  00000000
  1A8:  		If  *Flag[02]  ==  .False
  1B8:  			Set   *VarA  00000001
  1C8:  		EndIf
  1D0:  	Case  ==  00000001
  1DC:  		If  *Flag[01]  ==  .False
  1EC:  			Set   *VarA  00000000
  1FC:  		EndIf
  204:  		If  *Flag[03]  ==  .False
  214:  			If  *VarA  ==  FFFFFFFF
  224:  				Set   *VarA  00000002
  234:  			Else
  23C:  				Set   *VarB  00000002
  24C:  			EndIf
  254:  		EndIf
  25C:  	Case  ==  00000002
  268:  		If  *Flag[02]  ==  .False
  278:  			Set   *VarA  00000001
  288:  		EndIf
  290:  		If  *Flag[04]  ==  .False
  2A0:  			If  *VarA  ==  FFFFFFFF
  2B0:  				Set   *VarA  00000003
  2C0:  			Else
  2C8:  				Set   *VarB  00000003
  2D8:  			EndIf
  2E0:  		EndIf
  2E8:  	Case  ==  00000003
  2F4:  		If  *Flag[03]  ==  .False
  304:  			Set   *VarA  00000002
  314:  		EndIf
  31C:  EndSwitch
  324:  If  *VarB  !=  FFFFFFFF
  334:  	Call  RandInt   ( 000003E8 *Var0 )
  348:  	If  *Var0  <  000001F4
  358:  		Set   *VarA  *VarB
  368:  	EndIf
  370:  EndIf
  378:  Return
  380:  End
}

#new:Script $Script_8021A45C
{
    0:  Set   *Var9  00000000
   10:  Call  EnemyCreateTargetList ( 00008002 )
   20:  Call  InitTargetIterator ( )
   2C:  Label  0
   38:  Call  GetOwnerTarget        ( *Var0 *Var1 )
   4C:  Call  GetOriginalActorType  ( *Var0 *Var2 )
   60:  Switch  *Var2
   6C:  	CaseOR  ==  0000001A
   78:  	CaseOR  ==  00000029
   84:  		Call  GetStatusFlags    ( *Var0 *Var3 )
   98:  		If  *Var3  !&  ~Flags:StatusFlags:Sleep|Frozen|Fear|Paralyze|Dizzy|Stone|Stop % 35D000
   A8:  			Call  GetActorVar   ( *Var0 00000000 *Var3 )
   C0:  			If  *Var3  !=  00000002
   D0:  				Add   *Var9  00000001
   E0:  			EndIf
   E8:  		EndIf
   F0:  	EndCaseGroup
   F8:  	Case  ==  0000002A
  104:  		Call  GetStatusFlags    ( *Var0 *Var3 )
  118:  		If  *Var3  !&  ~Flags:StatusFlags:Sleep|Frozen|Fear|Paralyze|Dizzy|Stone|Stop % 35D000
  128:  			Call  GetActorVar   ( *Var0 00000001 *Var3 )
  140:  			If  *Var3  <  00000002
  150:  				Add   *Var9  00000001
  160:  			EndIf
  168:  		EndIf
  170:  EndSwitch
  178:  Call  ChooseNextTarget  ( .Iter:Next *Var0 )
  18C:  If  *Var0  !=  FFFFFFFF
  19C:  	Goto  0
  1A8:  EndIf
  1B0:  Return
  1B8:  End
}

#new:Script $Script_TakeTurn_8021A61C
{
    0:  Call  GetBattlePhase    ( *Var0 )
   10:  If  *Var0  ==  00000001
   20:  	ExecWait  $Script_80219054
   2C:  	Return
   34:  EndIf
   3C:  Call  GetActorVar   ( .Actor:Self 00000000 *Var0 )
   54:  If  *Var0  ==  00000002
   64:  	ExecWait  $Script_80219054
   70:  	Return
   78:  EndIf
   80:  ExecWait  $Script_8021A0D4
   8C:  If  *VarA  ==  FFFFFFFF
   9C:  	ExecWait  $Script_80219054
   A8:  	Return
   B0:  EndIf
   B8:  ExecWait  $Script_8021A45C
   C4:  Switch  *Var9
   D0:  	Case  ==  00000001
   DC:  		Call  RandInt   ( 000003E8 *Var0 )
   F0:  		If  *Var0  <  0000012C
  100:  			ExecWait  $Script_80218C48
  10C:  			Return
  114:  		EndIf
  11C:  	Case  ==  00000002
  128:  		Call  RandInt   ( 000003E8 *Var0 )
  13C:  		If  *Var0  <  00000096
  14C:  			ExecWait  $Script_80218C48
  158:  			Return
  160:  		EndIf
  168:  	Case  ==  00000003
  174:  		Call  RandInt   ( 000003E8 *Var0 )
  188:  		If  *Var0  <  00000064
  198:  			ExecWait  $Script_80218C48
  1A4:  			Return
  1AC:  		EndIf
  1B4:  EndSwitch
  1BC:  ExecWait  $Script_80219054
  1C8:  Return
  1D0:  End
}

#new:Vector3D $Vector3D_8021A7F4
{
	0` -1000` 0`
}

#new:SpecialFormation $SpecialFormation_8021A800
{
	$ForestFuzzy $Vector3D_8021A7F4 00000000 00000000 00000000 00000000 00000000
}

PADDING: 8021A81C to 8021A820 (004FA3FC to 004FA400)
00000000

#new:IdleAnimations $IdleAnimations_8021A820
{
	.Status:Normal    004B0001
	.Status:Stone     004B0000
	.Status:Sleep     004B0009
	.Status:Poison    004B0001
	.Status:Stop      004B0000
	.Status:Static    004B0001
	.Status:Paralyze  004B0000
	.Status:Dizzy     004B000A
	.Status:Fear      004B000A
	.Status:End
}

#new:DefenseTable $DefenseTable_8021A86C
{
	.Element:Normal 00000000
	.Element:End
}

#new:StatusTable $StatusTable_8021A878
{
	.Status:Normal      0`
	.Status:Default     0`
	.Status:Sleep      60`
	.Status:Poison     50`
	.Status:Frozen      0`
	.Status:Dizzy     100`
	.Status:Fear        0`
	.Status:Static      0`
	.Status:Paralyze   90`
	.Status:Shrink     75`
	.Status:Stop       90`
	.Status:DefaultTurnMod    0`
	.Status:SleepTurnMod      0`
	.Status:PoisonTurnMod     0`
	.Status:FrozenTurnMod     0`
	.Status:DizzyTurnMod      1`
	.Status:FearTurnMod       0`
	.Status:StaticTurnMod     0`
	.Status:ParalyzeTurnMod   0`
	.Status:ShrinkTurnMod     0`
	.Status:StopTurnMod       0`
	.Status:End
}

#new:PartsTable $PartsTable_8021A924
{
	00800000 01000000 F92100FF $IdleAnimations_8021A820 $DefenseTable_8021A86C 00000000 00000000 02F60000 00000000
	00120001 02000000 001800FF $IdleAnimations_8021A820 $DefenseTable_8021A86C 00000000 00000000 FFFB0000 00000000
	00120001 03000000 001800FF $IdleAnimations_8021A820 $DefenseTable_8021A86C 00000000 00000000 FFFB0000 00000000
	00120001 04000000 001800FF $IdleAnimations_8021A820 $DefenseTable_8021A86C 00000000 00000000 FFFB0000 00000000
	00120001 05000000 001800FF $IdleAnimations_8021A820 $DefenseTable_8021A86C 00000000 00000000 FFFB0000 00000000
	00120001 06000000 001800FF $IdleAnimations_8021A820 $DefenseTable_8021A86C 00000000 00000000 FFFB0000 00000000
}

#new:Actor $Bzzap
{
	% stats
	[Index]        31b
	[Level]        19`b
	[MaxHP]         3`b
	[Coins]         1`b
	[Flags]       00000200
	[StatusTable] $StatusTable_8021A878
	% ai
	[PartsCount]    6`s
	[PartsTable]  $PartsTable_8021A924
	[Script]      $Script_Init_8021AA24
	% move effectiveness
	[Escape]       40`b
	[Item]         70`b
	[AirLift]      95`b
	[Hurricane]    95`b % Bow's "Spook" as well
	[UpAndAway]    95`b
	[PowerBounce]  90`b
	[SpinSmash]     0`b % weight (0-4)
	% ui positions
	[Size]         38`b  38`b % width height
	[HealthBar]     0`b   0`b % dx dy
	[StatusTurn]  -10`b  20`b % dx dy
	[StatusIcon]   10`b  20`b % dx dy
}

#new:Script $Script_Init_8021AA24
{
    0:  Call  BindTakeTurn  ( .Actor:Self $Script_TakeTurn_8021D28C )
   14:  Call  BindIdle      ( .Actor:Self $Script_Idle_8021AB10 )
   28:  Call  BindHandleEvent   ( .Actor:Self $Script_HandleEvent_8021ACA8 )
   3C:  Call  SetPartScale  ( .Actor:Self 00000002 *Fixed[0.4] *Fixed[0.4] *Fixed[0.4] )
   5C:  Call  SetPartScale  ( .Actor:Self 00000003 *Fixed[0.4] *Fixed[0.4] *Fixed[0.4] )
   7C:  Call  SetPartScale  ( .Actor:Self 00000004 *Fixed[0.4] *Fixed[0.4] *Fixed[0.4] )
   9C:  Call  SetPartScale  ( .Actor:Self 00000005 *Fixed[0.4] *Fixed[0.4] *Fixed[0.4] )
   BC:  Call  SetPartScale  ( .Actor:Self 00000006 *Fixed[0.4] *Fixed[0.4] *Fixed[0.4] )
   DC:  Return
   E4:  End
}

#new:Script $Script_Idle_8021AB10
{
    0:  Label  0
    C:  Call  GetStatusFlags    ( .Actor:Self *VarA )
   20:  If  *VarA  &  ~Flags:StatusFlags:Sleep|Dizzy % 41000
   30:  	Call  SetTargetOffset       ( .Actor:Self 00000001  -7`  19` )
   4C:  	Call  8027D4C8  ( FFFFFF81 00000001 00000002 FFFFFFFA )
   68:  	Call  $Function_80218170    ( FFFFFFEC 00000014 0000000A 0000001B )
   84:  Else
   8C:  	Call  SetTargetOffset       ( .Actor:Self 00000001  -7`  33` )
   A8:  	Call  8027D4C8  ( FFFFFF81 00000001 00000002 FFFFFFF6 )
   C4:  	Call  $Function_80218170    ( FFFFFFF0 00000016 00000004 00000016 )
   E0:  EndIf
   E8:  Wait  1`
   F4:  Goto  0
  100:  Return
  108:  End
}

#new:Script $Script_8021AC20
{
    0:  Call  SetPartRotation   ( .Actor:Self 00000001 00000000 00000000 00000000 )
   20:  Call  SetAnimation  ( .Actor:Self 00000001 004B0003 )
   38:  Call  SetGoalToHome ( .Actor:Self )
   48:  Call  SetActorSpeed ( .Actor:Self *Fixed[8.0] )
   5C:  Call  FlyToGoal     ( .Actor:Self  0`  1` .Easing:SinOut )
   78:  Return
   80:  End
}

#new:Script $Script_HandleEvent_8021ACA8
{
    0:  Call  UseIdleAnimation  ( .Actor:Self .False )
   14:  Call  EnableIdleScript  ( .Actor:Self 00000000 )
   28:  Call  GetLastEvent      ( .Actor:Self *Var0 )
   3C:  Switch  *Var0
   48:  	CaseOR  ==  .Event:HitCombo % 9
   54:  	CaseOR  ==  .Event:Hit % A
   60:  		SetConst  *Var0  00000001
   70:  		SetConst  *Var1  004B0006
   80:  		ExecWait  DoNormalHit
   8C:  	EndCaseGroup
   94:  	Case  ==  .Event:BurnHit % E
   A0:  		SetConst  *Var0  00000001
   B0:  		SetConst  *Var1  004B0007
   C0:  		SetConst  *Var2  004B0008
   D0:  		ExecWait  DoBurnHit
   DC:  	Case  ==  .Event:BurnDeath % 24
   E8:  		SetConst  *Var0  00000001
   F8:  		SetConst  *Var1  004B0007
  108:  		SetConst  *Var2  004B0008
  118:  		ExecWait  DoBurnHit
  124:  		SetConst  *Var0  00000001
  134:  		SetConst  *Var1  004B0008
  144:  		ExecWait  DoDeath
  150:  		Return
  158:  	Case  ==  .Event:SpinSmashHit % B
  164:  		SetConst  *Var0  00000001
  174:  		SetConst  *Var1  004B0006
  184:  		ExecWait  DoSpinSmashHit
  190:  	Case  ==  .Event:SpinSmashDeath % 21
  19C:  		SetConst  *Var0  00000001
  1AC:  		SetConst  *Var1  004B0006
  1BC:  		ExecWait  DoSpinSmashHit
  1C8:  		SetConst  *Var0  00000001
  1D8:  		SetConst  *Var1  004B000B
  1E8:  		ExecWait  DoDeath
  1F4:  		Return
  1FC:  	Case  ==  .Event:ShockHit % 2F
  208:  		SetConst  *Var0  00000001
  218:  		SetConst  *Var1  004B0006
  228:  		ExecWait  DoShockHit
  234:  		SetConst  *Var0  00000001
  244:  		SetConst  *Var1  004B0006
  254:  		ExecWait  DoJumpBack
  260:  		ExecWait  $Script_8021AC20
  26C:  	Case  ==  .Event:ShockDeath % 26
  278:  		SetConst  *Var0  00000001
  288:  		SetConst  *Var1  004B0006
  298:  		ExecWait  DoShockHit
  2A4:  		SetConst  *Var0  00000001
  2B4:  		SetConst  *Var1  004B000B
  2C4:  		ExecWait  DoDeath
  2D0:  		Return
  2D8:  	CaseOR  ==  00000017 % 17
  2E4:  	CaseOR  ==  .Event:Immune % 19
  2F0:  	CaseOR  ==  .Event:AirLiftFailed % 1F
  2FC:  		SetConst  *Var0  00000001
  30C:  		SetConst  *Var1  004B0001
  31C:  		ExecWait  DoImmune
  328:  	EndCaseGroup
  330:  	Case  ==  .Event:Death % 20
  33C:  		SetConst  *Var0  00000001
  34C:  		SetConst  *Var1  004B0006
  35C:  		ExecWait  DoNormalHit
  368:  		Wait  10`
  374:  		SetConst  *Var0  00000001
  384:  		SetConst  *Var1  004B000B
  394:  		ExecWait  DoDeath
  3A0:  		Return
  3A8:  	Case  ==  .Event:BeginFirstStrike % 38
  3B4:  		Call  SetActorPos       ( .Actor:Self  20`  0`  0` )
  3D0:  		Call  HPBarToCurrent    ( .Actor:Self )
  3E0:  	Case  ==  .Event:EndFirstStrike % 35
  3EC:  		ExecWait  $Script_8021AC20
  3F8:  		Call  HPBarToHome   ( .Actor:Self )
  408:  	Case  ==  .Event:RecoverStatus % 31
  414:  		SetConst  *Var0  00000001
  424:  		SetConst  *Var1  004B0001
  434:  		ExecWait  DoRecover
  440:  	Case  ==  .Event:ScareAway % 39
  44C:  		Call  SetActorFlagBits  ( .Actor:Self 00000200 .False )
  464:  		SetConst  *Var0  00000001
  474:  		SetConst  *Var1  004B0003
  484:  		SetConst  *Var2  004B0006
  494:  		ExecWait  DoScareAway
  4A0:  		Return
  4A8:  	Case  ==  .Event:BeginAirLift % 3A
  4B4:  		SetConst  *Var0  00000001
  4C4:  		SetConst  *Var1  004B0001
  4D4:  		ExecWait  DoAirLift
  4E0:  	Case  ==  .Event:BlowAway % 16
  4EC:  		Call  GetStatusFlags    ( .Actor:Self *Var0 )
  500:  		If  *Var0  !&  ~Flags:StatusFlags:Sleep|Frozen|Fear|Paralyze|Dizzy|Stone|Stop % 35D000
  510:  			If  *Var0  &  ~Flags:StatusFlags:Shrink % 80000
  520:  				Call  SetActorDispOffset    ( .Actor:Self 00000000 00000003 00000000 )
  53C:  			Else
  544:  				Call  SetActorDispOffset    ( .Actor:Self 00000000 00000009 00000000 )
  560:  			EndIf
  568:  		EndIf
  570:  		SetConst  *Var0  00000001
  580:  		SetConst  *Var1  004B0006
  590:  		ExecWait  DoBlowAway
  59C:  	Default
  5A4:  EndSwitch
  5AC:  Call  EnableIdleScript  ( .Actor:Self 00000001 )
  5C0:  Call  UseIdleAnimation  ( .Actor:Self .True )
  5D4:  Return
  5DC:  End
}

#new:Script $Script_8021B28C
{
    0:  Call  UseIdleAnimation  ( .Actor:Self .False )
   14:  Call  EnableIdleScript  ( .Actor:Self 00000000 )
   28:  Call  SetTargetActor    ( .Actor:Self .Actor:Player )
   3C:  Call  UseBattleCamPreset    ( 0000003F )
   4C:  Call  BattleCamTargetActor  ( .Actor:Self )
   5C:  Call  8024ECF8  ( FFFFFFFF 00000001 00000000 )
   74:  Call  SetAnimation      ( .Actor:Self 00000001 004B0003 )
   8C:  Call  SetGoalToTarget   ( .Actor:Self )
   9C:  Call  AddGoalPos        ( .Actor:Self  52`  10`  0` )
   B8:  Call  SetActorSpeed     ( .Actor:Self *Fixed[6.0] )
   CC:  Call  FlyToGoal ( .Actor:Self  0`  -4` .Easing:CosIn )
   E8:  Call  EnemyTestTarget   ( .Actor:Self *Var0 ~Flags:DamageType:0 00000000 00000001 00000010 )
  10C:  Switch  *Var0
  118:  	CaseOR  ==  .HitResult:Miss % 6
  124:  	CaseOR  ==  .HitResult:Lucky % 5
  130:  		Set   *VarA  *Var0
  140:  		Wait  10`
  14C:  		Call  SetGoalToTarget   ( .Actor:Self )
  15C:  		Call  GetGoalPos    ( .Actor:Self *Var0 *Var1 *Var2 )
  178:  		Add   *Var0  00000014
  188:  		Add   *Var2  00000001
  198:  		Call  SetGoalPos    ( .Actor:Self *Var0 *Var1 *Var2 )
  1B4:  		Call  SetActorSpeed ( .Actor:Self *Fixed[8.0] )
  1C8:  		Call  FlyToGoal     ( .Actor:Self  0`  -10` .Easing:QuadraticOut )
  1E4:  		Wait  5`
  1F0:  		Call  PlaySoundAtActor  ( .Actor:Self 000020CA )
  204:  		Call  SetAnimation  ( .Actor:Self 00000001 004B0004 )
  21C:  		Wait  10`
  228:  		If  *VarA  ==  .HitResult:Lucky % 5
  238:  			Call  EnemyTestTarget   ( .Actor:Self *Var0 ~Flags:DamageType:TriggerLucky 00000000 00000000 00000000 )
  25C:  		EndIf
  264:  		Wait  15`
  270:  		Call  UseBattleCamPreset    ( 00000002 )
  280:  		Call  YieldTurn ( )
  28C:  		Call  SetActorYaw   ( .Actor:Self  180` )
  2A0:  		Call  AddActorDecoration    ( .Actor:Self 00000001 00000000 .Decoration:Sweat )
  2BC:  		ExecWait  $Script_8021AC20
  2C8:  		Call  RemoveActorDecoration ( .Actor:Self 00000001 00000000 )
  2E0:  		Call  SetActorYaw   ( .Actor:Self  0` )
  2F4:  		Call  EnableIdleScript      ( .Actor:Self 00000001 )
  308:  		Call  UseIdleAnimation      ( .Actor:Self .True )
  31C:  		Return
  324:  	EndCaseGroup
  32C:  EndSwitch
  334:  Wait  10`
  340:  Call  SetGoalToTarget   ( .Actor:Self )
  350:  Call  GetGoalPos    ( .Actor:Self *Var0 *Var1 *Var2 )
  36C:  Add   *Var0  00000014
  37C:  Add   *Var2  00000001
  38C:  Call  SetGoalPos    ( .Actor:Self *Var0 *Var1 *Var2 )
  3A8:  Call  SetActorSpeed ( .Actor:Self *Fixed[5.0] )
  3BC:  Call  FlyToGoal     ( .Actor:Self  0`  -10` .Easing:QuadraticOut )
  3D8:  Wait  5`
  3E4:  Call  PlaySoundAtActor  ( .Actor:Self 000020CA )
  3F8:  Call  SetAnimation  ( .Actor:Self 00000001 004B0004 )
  410:  Wait  6`
  41C:  Wait  2`
  428:  Call  EnemyDamageTarget ( .Actor:Self *Var0 ~Flags:DamageType:0 00000000 ~DebuffType:Poison:3:40` 00000006 00000020 )
  450:  Switch  *Var0
  45C:  	CaseOR  ==  .HitResult:Hit % 0
  468:  	CaseOR  ==  .HitResult:QuakeImmune % 2
  474:  		Call  UseBattleCamPreset    ( 00000002 )
  484:  		Wait  20`
  490:  		Call  YieldTurn ( )
  49C:  		ExecWait  $Script_8021AC20
  4A8:  	EndCaseGroup
  4B0:  EndSwitch
  4B8:  Call  EnableIdleScript  ( .Actor:Self 00000001 )
  4CC:  Call  UseIdleAnimation  ( .Actor:Self .True )
  4E0:  Return
  4E8:  End
}

#new:Script $Script_8021B77C
{
    0:  Set   *Var9  *Var0
   10:  Call  SetPartYaw    ( .Actor:Self *Var9  0` )
   28:  Call  GetActorPos   ( .Actor:Self *VarA *VarB *VarC )
   44:  Add   *VarA  000000C8
   54:  Add   *VarB  00000064
   64:  Call  SetPartPos    ( .Actor:Self *Var9 *VarA *VarB *VarC )
   84:  Call  SetPartFlagBits       ( .Actor:Self *Var9 00000001 .False )
   A0:  Call  SetAnimation  ( .Actor:Self *Var9 004B0003 )
   B8:  Call  GetActorPos   ( .Actor:Self *VarA *VarB *VarC )
   D4:  Add   *VarB  00000032
   E4:  Sub   *VarC  0000001E
   F4:  Call  SetPartMoveSpeed      ( .Actor:Self *Var9 *Fixed[6.0] )
  10C:  Call  SetPartJumpGravity    ( .Actor:Self *Var9 *Fixed[1.0] )
  124:  Call  FlyPartTo     ( .Actor:Self *Var9 *VarA *VarB *VarC  0`  -10` .Easing:Linear )
  150:  Call  GetActorPos   ( .Actor:Self *Var3 *Var4 *Var5 )
  16C:  Call  GetPartOffset ( .Actor:Self *Var9 *Var6 *Var7 *Var8 )
  18C:  Call  MakeLerp      ( 0000005A 000001C2 00000032 .Easing:Linear )
  1A8:  Label  0
  1B4:  Call  UpdateLerp ( )
  1C0:  Call  $Function_8021823C    ( *Var3 *Var5 0000001E *Var0 *Var6 *Var8 )
  1E4:  Call  SetPartPos    ( .Actor:Self *Var9 *Var6 *Var7 *Var8 )
  204:  If  *Var3  >  *Var6
  214:  	Call  SetPartYaw    ( .Actor:Self *Var9  180` )
  22C:  Else
  234:  	Call  SetPartYaw    ( .Actor:Self *Var9  0` )
  24C:  EndIf
  254:  Wait  1`
  260:  If  *Var1  ==  00000001
  270:  	Goto  0
  27C:  EndIf
  284:  Call  SetPartYaw    ( .Actor:Self *Var9  0` )
  29C:  If  *Var9  ==  00000002
  2AC:  	Call  UseBattleCamPreset    ( 00000008 )
  2BC:  	Call  SetBattleCamZoom      (  400` )
  2CC:  	Call  SetBattleCamOffsetZ   (  30` )
  2DC:  	Call  BattleCamTargetActor  ( .Actor:Player )
  2EC:  	Call  MoveBattleCamOver     (  60` )
  2FC:  EndIf
  304:  Call  SetAnimation  ( .Actor:Self *Var9 004B0003 )
  31C:  Call  GetActorPos   ( .Actor:Player *VarA *VarB *VarC )
  338:  Add   *VarB  0000001E
  348:  Add   *VarC  0000001E
  358:  Call  SetPartMoveSpeed      ( .Actor:Self *Var9 *Fixed[6.0] )
  370:  Call  SetPartJumpGravity    ( .Actor:Self *Var9 *Fixed[1.0] )
  388:  Call  FlyPartTo     ( .Actor:Self *Var9 *VarA *VarB *VarC  0`  -10` .Easing:Linear )
  3B4:  Call  GetActorPos   ( .Actor:Player *Var3 *Var4 *Var5 )
  3D0:  Call  GetPartOffset ( .Actor:Self *Var9 *Var6 *Var7 *Var8 )
  3F0:  Call  MakeLerp      ( FFFFFFA6 FFFFFD30 00000064 .Easing:Linear )
  40C:  Label  1
  418:  Call  UpdateLerp ( )
  424:  Call  $Function_8021823C    ( *Var3 *Var5 0000001E *Var0 *Var6 *Var8 )
  448:  Call  SetPartPos    ( .Actor:Self *Var9 *Var6 *Var7 *Var8 )
  468:  If  *Var3  >  *Var6
  478:  	Call  SetPartYaw    ( .Actor:Self *Var9  180` )
  490:  Else
  498:  	Call  SetPartYaw    ( .Actor:Self *Var9  0` )
  4B0:  EndIf
  4B8:  Wait  1`
  4C4:  If  *Var1  ==  00000001
  4D4:  	Goto  1
  4E0:  EndIf
  4E8:  Return
  4F0:  End
}

#new:Script $Script_8021BC74
{
    0:  Call  UseIdleAnimation  ( .Actor:Self .False )
   14:  Call  EnableIdleScript  ( .Actor:Self 00000000 )
   28:  Call  SetTargetActor    ( .Actor:Self .Actor:Player )
   3C:  Call  UseBattleCamPreset    ( 0000003F )
   4C:  Call  BattleCamTargetActor  ( .Actor:Self )
   5C:  Call  8024ECF8      ( FFFFFFFF 00000001 00000000 )
   74:  Call  SetPartSounds ( .Actor:Self 00000002 .ActorSound:Fly 00000000 00000000 )
   94:  Call  SetPartSounds ( .Actor:Self 00000003 .ActorSound:Fly 00000000 00000000 )
   B4:  Call  SetPartSounds ( .Actor:Self 00000004 .ActorSound:Fly 00000000 00000000 )
   D4:  Call  SetPartSounds ( .Actor:Self 00000005 .ActorSound:Fly 00000000 00000000 )
   F4:  Call  SetPartSounds ( .Actor:Self 00000006 .ActorSound:Fly 00000000 00000000 )
  114:  Call  PlaySoundAtActor  ( .Actor:Self 000020CC )
  128:  Call  SetActorYaw   ( .Actor:Self  180` )
  13C:  Call  SetAnimation  ( .Actor:Self 00000001 004B0005 )
  154:  Wait  40`
  160:  Call  SetAnimation  ( .Actor:Self 00000001 004B0001 )
  178:  Call  SetActorYaw   ( .Actor:Self  0` )
  18C:  Call  PlaySound     ( 00000358 )
  19C:  Set   *Var0  00000002
  1AC:  Exec  $Script_8021B77C *VarA
  1BC:  Wait  11`
  1C8:  Set   *Var0  00000003
  1D8:  Exec  $Script_8021B77C
  1E4:  Wait  11`
  1F0:  Set   *Var0  00000004
  200:  Exec  $Script_8021B77C
  20C:  Wait  11`
  218:  Set   *Var0  00000005
  228:  Exec  $Script_8021B77C
  234:  Wait  11`
  240:  Set   *Var0  00000006
  250:  Exec  $Script_8021B77C
  25C:  Label  0
  268:  DoesScriptExist  *VarA *Var0
  278:  Wait  1`
  284:  If  *Var0  ==  00000001
  294:  	Goto  0
  2A0:  EndIf
  2A8:  Call  EnemyTestTarget   ( .Actor:Self *Var0 ~Flags:DamageType:0 00000000 00000001 00000010 )
  2CC:  Switch  *Var0
  2D8:  	CaseOR  ==  .HitResult:Miss % 6
  2E4:  	CaseOR  ==  .HitResult:Lucky % 5
  2F0:  		Set   *VarA  *Var0
  300:  		Thread
  308:  			Call  PlaySoundAtPart   ( .Actor:Self 00000002 000020CB )
  320:  			Call  SetAnimation  ( .Actor:Self 00000002 004B0004 )
  338:  			Call  SetGoalToTarget   ( .Actor:Self )
  348:  			Call  AddGoalPos    ( .Actor:Self  -30`  -20`  1` )
  364:  			Call  GetGoalPos    ( .Actor:Self *Var0 *Var1 *Var2 )
  380:  			Call  SetPartMoveSpeed  ( .Actor:Self 00000002 *Fixed[3.0] )
  398:  			Call  FlyPartTo     ( .Actor:Self 00000002 *Var0 *Var1 *Var2  0`  -10` .Easing:Linear )
  3C4:  			Call  SetAnimation  ( .Actor:Self 00000002 004B0003 )
  3DC:  			Call  SetPartYaw    ( .Actor:Self 00000002  180` )
  3F4:  			Call  GetActorPos   ( .Actor:Self *Var0 *Var1 *Var2 )
  410:  			Add   *Var1  00000064
  420:  			Add   *Var2  00000064
  430:  			Call  AddActorDecoration    ( .Actor:Self 00000002 00000000 .Decoration:Sweat )
  44C:  			Call  FlyPartTo     ( .Actor:Self 00000002 *Var0 *Var1 *Var2  0`  10` .Easing:Linear )
  478:  			Call  RemoveActorDecoration ( .Actor:Self 00000002 00000000 )
  490:  			Call  SetPartFlagBits   ( .Actor:Self 00000002 00000001 .True )
  4AC:  		EndThread
  4B4:  		Wait  11`
  4C0:  		Thread
  4C8:  			Call  PlaySoundAtPart   ( .Actor:Self 00000003 000020CB )
  4E0:  			Call  SetAnimation  ( .Actor:Self 00000003 004B0004 )
  4F8:  			Call  SetGoalToTarget   ( .Actor:Self )
  508:  			Call  AddGoalPos    ( .Actor:Self  -30`  -20`  1` )
  524:  			Call  GetGoalPos    ( .Actor:Self *Var0 *Var1 *Var2 )
  540:  			Call  SetPartMoveSpeed  ( .Actor:Self 00000003 *Fixed[3.0] )
  558:  			Call  FlyPartTo     ( .Actor:Self 00000003 *Var0 *Var1 *Var2  0`  -10` .Easing:Linear )
  584:  			Call  SetAnimation  ( .Actor:Self 00000003 004B0003 )
  59C:  			Call  SetPartYaw    ( .Actor:Self 00000003  180` )
  5B4:  			Call  GetActorPos   ( .Actor:Self *Var0 *Var1 *Var2 )
  5D0:  			Add   *Var1  00000064
  5E0:  			Add   *Var2  00000064
  5F0:  			Call  AddActorDecoration    ( .Actor:Self 00000003 00000000 .Decoration:Sweat )
  60C:  			Call  FlyPartTo     ( .Actor:Self 00000003 *Var0 *Var1 *Var2  0`  10` .Easing:Linear )
  638:  			Call  RemoveActorDecoration ( .Actor:Self 00000003 00000000 )
  650:  			Call  SetPartFlagBits   ( .Actor:Self 00000003 00000001 .True )
  66C:  		EndThread
  674:  		Wait  11`
  680:  		Thread
  688:  			Call  PlaySoundAtPart   ( .Actor:Self 00000004 000020CB )
  6A0:  			Call  SetAnimation  ( .Actor:Self 00000004 004B0004 )
  6B8:  			Call  SetGoalToTarget   ( .Actor:Self )
  6C8:  			Call  AddGoalPos    ( .Actor:Self  -30`  -20`  1` )
  6E4:  			Call  GetGoalPos    ( .Actor:Self *Var0 *Var1 *Var2 )
  700:  			Call  SetPartMoveSpeed  ( .Actor:Self 00000004 *Fixed[3.0] )
  718:  			Call  FlyPartTo     ( .Actor:Self 00000004 *Var0 *Var1 *Var2  0`  -10` .Easing:Linear )
  744:  			Call  SetAnimation  ( .Actor:Self 00000004 004B0003 )
  75C:  			Call  SetPartYaw    ( .Actor:Self 00000004  180` )
  774:  			Call  GetActorPos   ( .Actor:Self *Var0 *Var1 *Var2 )
  790:  			Add   *Var1  00000064
  7A0:  			Add   *Var2  00000064
  7B0:  			Call  AddActorDecoration    ( .Actor:Self 00000004 00000000 .Decoration:Sweat )
  7CC:  			Call  FlyPartTo     ( .Actor:Self 00000004 *Var0 *Var1 *Var2  0`  10` .Easing:Linear )
  7F8:  			Call  RemoveActorDecoration ( .Actor:Self 00000004 00000000 )
  810:  			Call  SetPartFlagBits   ( .Actor:Self 00000004 00000001 .True )
  82C:  		EndThread
  834:  		Wait  11`
  840:  		Thread
  848:  			Call  PlaySoundAtPart   ( .Actor:Self 00000005 000020CB )
  860:  			Call  SetAnimation  ( .Actor:Self 00000005 004B0004 )
  878:  			Call  SetGoalToTarget   ( .Actor:Self )
  888:  			Call  AddGoalPos    ( .Actor:Self  -30`  -20`  1` )
  8A4:  			Call  GetGoalPos    ( .Actor:Self *Var0 *Var1 *Var2 )
  8C0:  			Call  SetPartMoveSpeed  ( .Actor:Self 00000005 *Fixed[3.0] )
  8D8:  			Call  FlyPartTo     ( .Actor:Self 00000005 *Var0 *Var1 *Var2  0`  -10` .Easing:Linear )
  904:  			Call  SetAnimation  ( .Actor:Self 00000005 004B0003 )
  91C:  			Call  SetPartYaw    ( .Actor:Self 00000005  180` )
  934:  			Call  GetActorPos   ( .Actor:Self *Var0 *Var1 *Var2 )
  950:  			Add   *Var1  00000064
  960:  			Add   *Var2  00000064
  970:  			Call  AddActorDecoration    ( .Actor:Self 00000005 00000000 .Decoration:Sweat )
  98C:  			Call  FlyPartTo     ( .Actor:Self 00000005 *Var0 *Var1 *Var2  0`  10` .Easing:Linear )
  9B8:  			Call  RemoveActorDecoration ( .Actor:Self 00000005 00000000 )
  9D0:  			Call  SetPartFlagBits   ( .Actor:Self 00000005 00000001 .True )
  9EC:  		EndThread
  9F4:  		Wait  11`
  A00:  		Thread
  A08:  			Call  PlaySoundAtPart   ( .Actor:Self 00000006 000020CB )
  A20:  			Call  SetAnimation  ( .Actor:Self 00000006 004B0004 )
  A38:  			Call  SetGoalToTarget   ( .Actor:Self )
  A48:  			Call  AddGoalPos    ( .Actor:Self  -30`  -20`  1` )
  A64:  			Call  GetGoalPos    ( .Actor:Self *Var0 *Var1 *Var2 )
  A80:  			Call  SetPartMoveSpeed  ( .Actor:Self 00000006 *Fixed[3.0] )
  A98:  			Call  FlyPartTo     ( .Actor:Self 00000006 *Var0 *Var1 *Var2  0`  -10` .Easing:Linear )
  AC4:  			Call  SetAnimation  ( .Actor:Self 00000006 004B0003 )
  ADC:  			Call  SetPartYaw    ( .Actor:Self 00000006  180` )
  AF4:  			Call  GetActorPos   ( .Actor:Self *Var0 *Var1 *Var2 )
  B10:  			Add   *Var1  00000064
  B20:  			Add   *Var2  00000064
  B30:  			Call  AddActorDecoration    ( .Actor:Self 00000006 00000000 .Decoration:Sweat )
  B4C:  			Call  FlyPartTo     ( .Actor:Self 00000006 *Var0 *Var1 *Var2  0`  10` .Easing:Linear )
  B78:  			Call  RemoveActorDecoration ( .Actor:Self 00000006 00000000 )
  B90:  			Call  SetPartFlagBits   ( .Actor:Self 00000006 00000001 .True )
  BAC:  		EndThread
  BB4:  		Wait  11`
  BC0:  		If  *VarA  ==  .HitResult:Lucky % 5
  BD0:  			Call  EnemyTestTarget   ( .Actor:Self *Var0 ~Flags:DamageType:TriggerLucky 00000000 00000000 00000000 )
  BF4:  		EndIf
  BFC:  		Wait  30`
  C08:  		Call  UseBattleCamPreset    ( 00000002 )
  C18:  		Wait  30`
  C24:  		Call  StopSound ( 00000358 )
  C34:  		Call  YieldTurn ( )
  C40:  		Call  EnableIdleScript  ( .Actor:Self 00000001 )
  C54:  		Call  UseIdleAnimation  ( .Actor:Self .True )
  C68:  		Return
  C70:  	EndCaseGroup
  C78:  EndSwitch
  C80:  Thread
  C88:  	Call  PlaySoundAtPart   ( .Actor:Self 00000002 000020CB )
  CA0:  	Call  SetAnimation  ( .Actor:Self 00000002 004B0004 )
  CB8:  	Call  SetGoalToTarget   ( .Actor:Self )
  CC8:  	Call  AddGoalPos    ( .Actor:Self  -10`  -10`  1` )
  CE4:  	Call  GetGoalPos    ( .Actor:Self *Var0 *Var1 *Var2 )
  D00:  	Call  SetPartMoveSpeed  ( .Actor:Self 00000002 *Fixed[3.0] )
  D18:  	Call  FlyPartTo     ( .Actor:Self 00000002 *Var0 *Var1 *Var2  0`  -10` .Easing:Linear )
  D44:  	Wait  2`
  D50:  	Call  SetGoalToTarget   ( .Actor:Self )
  D60:  	Call  EnemyDamageTarget ( .Actor:Self *Var0 ~Flags:DamageType:NoContact 00000000 00000000 00000001 00000010 )
  D88:  	Call  SetAnimation  ( .Actor:Self 00000002 004B0003 )
  DA0:  	Call  SetPartYaw    ( .Actor:Self 00000002  180` )
  DB8:  	Call  GetActorPos   ( .Actor:Self *Var0 *Var1 *Var2 )
  DD4:  	Add   *Var1  00000064
  DE4:  	Add   *Var2  00000064
  DF4:  	Call  FlyPartTo     ( .Actor:Self 00000002 *Var0 *Var1 *Var2  0`  10` .Easing:Linear )
  E20:  	Call  SetPartFlagBits   ( .Actor:Self 00000002 00000001 .True )
  E3C:  EndThread
  E44:  Wait  11`
  E50:  Thread
  E58:  	Call  PlaySoundAtPart   ( .Actor:Self 00000003 000020CB )
  E70:  	Call  SetAnimation  ( .Actor:Self 00000003 004B0004 )
  E88:  	Call  SetGoalToTarget   ( .Actor:Self )
  E98:  	Call  AddGoalPos    ( .Actor:Self  -10`  -10`  1` )
  EB4:  	Call  GetGoalPos    ( .Actor:Self *Var0 *Var1 *Var2 )
  ED0:  	Call  SetPartMoveSpeed  ( .Actor:Self 00000003 *Fixed[3.0] )
  EE8:  	Call  FlyPartTo     ( .Actor:Self 00000003 *Var0 *Var1 *Var2  0`  -10` .Easing:Linear )
  F14:  	Wait  2`
  F20:  	Call  SetGoalToTarget   ( .Actor:Self )
  F30:  	Call  EnemyDamageTarget ( .Actor:Self *Var0 ~Flags:DamageType:NoContact 00000000 00000000 00000001 00000040 )
  F58:  	Call  SetAnimation  ( .Actor:Self 00000003 004B0003 )
  F70:  	Call  SetPartYaw    ( .Actor:Self 00000003  180` )
  F88:  	Call  GetActorPos   ( .Actor:Self *Var0 *Var1 *Var2 )
  FA4:  	Add   *Var1  00000064
  FB4:  	Add   *Var2  00000064
  FC4:  	Call  FlyPartTo     ( .Actor:Self 00000003 *Var0 *Var1 *Var2  0`  10` .Easing:Linear )
  FF0:  	Call  SetPartFlagBits   ( .Actor:Self 00000003 00000001 .True )
 100C:  EndThread
 1014:  Wait  11`
 1020:  Thread
 1028:  	Call  PlaySoundAtPart   ( .Actor:Self 00000004 000020CB )
 1040:  	Call  SetAnimation  ( .Actor:Self 00000004 004B0004 )
 1058:  	Call  SetGoalToTarget   ( .Actor:Self )
 1068:  	Call  AddGoalPos    ( .Actor:Self  -10`  -10`  1` )
 1084:  	Call  GetGoalPos    ( .Actor:Self *Var0 *Var1 *Var2 )
 10A0:  	Call  SetPartMoveSpeed  ( .Actor:Self 00000004 *Fixed[3.0] )
 10B8:  	Call  FlyPartTo     ( .Actor:Self 00000004 *Var0 *Var1 *Var2  0`  -10` .Easing:Linear )
 10E4:  	Wait  2`
 10F0:  	Call  SetGoalToTarget   ( .Actor:Self )
 1100:  	Call  EnemyDamageTarget ( .Actor:Self *Var0 ~Flags:DamageType:NoContact 00000000 00000000 00000001 00000040 )
 1128:  	Call  SetAnimation  ( .Actor:Self 00000004 004B0003 )
 1140:  	Call  SetPartYaw    ( .Actor:Self 00000004  180` )
 1158:  	Call  GetActorPos   ( .Actor:Self *Var0 *Var1 *Var2 )
 1174:  	Add   *Var1  00000064
 1184:  	Add   *Var2  00000064
 1194:  	Call  FlyPartTo     ( .Actor:Self 00000004 *Var0 *Var1 *Var2  0`  10` .Easing:Linear )
 11C0:  	Call  SetPartFlagBits   ( .Actor:Self 00000004 00000001 .True )
 11DC:  EndThread
 11E4:  Wait  11`
 11F0:  Thread
 11F8:  	Call  PlaySoundAtPart   ( .Actor:Self 00000005 000020CB )
 1210:  	Call  SetAnimation  ( .Actor:Self 00000005 004B0004 )
 1228:  	Call  SetGoalToTarget   ( .Actor:Self )
 1238:  	Call  AddGoalPos    ( .Actor:Self  -10`  -10`  1` )
 1254:  	Call  GetGoalPos    ( .Actor:Self *Var0 *Var1 *Var2 )
 1270:  	Call  SetPartMoveSpeed  ( .Actor:Self 00000005 *Fixed[3.0] )
 1288:  	Call  FlyPartTo     ( .Actor:Self 00000005 *Var0 *Var1 *Var2  0`  -10` .Easing:Linear )
 12B4:  	Wait  2`
 12C0:  	Call  SetGoalToTarget   ( .Actor:Self )
 12D0:  	Call  EnemyDamageTarget ( .Actor:Self *Var0 ~Flags:DamageType:NoContact 00000000 00000000 00000001 00000040 )
 12F8:  	Call  SetAnimation  ( .Actor:Self 00000005 004B0003 )
 1310:  	Call  SetPartYaw    ( .Actor:Self 00000005  180` )
 1328:  	Call  GetActorPos   ( .Actor:Self *Var0 *Var1 *Var2 )
 1344:  	Add   *Var1  00000064
 1354:  	Add   *Var2  00000064
 1364:  	Call  FlyPartTo     ( .Actor:Self 00000005 *Var0 *Var1 *Var2  0`  10` .Easing:Linear )
 1390:  	Call  SetPartFlagBits   ( .Actor:Self 00000005 00000001 .True )
 13AC:  EndThread
 13B4:  Wait  11`
 13C0:  Wait  1`
 13CC:  Call  PlaySoundAtPart   ( .Actor:Self 00000006 000020CB )
 13E4:  Call  SetAnimation      ( .Actor:Self 00000006 004B0004 )
 13FC:  Call  SetGoalToTarget   ( .Actor:Self )
 140C:  Call  AddGoalPos        ( .Actor:Self  -10`  -10`  1` )
 1428:  Call  GetGoalPos        ( .Actor:Self *Var0 *Var1 *Var2 )
 1444:  Call  SetPartMoveSpeed  ( .Actor:Self 00000006 *Fixed[3.0] )
 145C:  Call  FlyPartTo ( .Actor:Self 00000006 *Var0 *Var1 *Var2  0`  -10` .Easing:Linear )
 1488:  Wait  2`
 1494:  Call  SetGoalToTarget   ( .Actor:Self )
 14A4:  Call  EnemyDamageTarget ( .Actor:Self *Var0 ~Flags:DamageType:NoContact 00000000 00000000 00000001 00000020 )
 14CC:  Switch  *Var0
 14D8:  	CaseOR  ==  .HitResult:Hit % 0
 14E4:  	CaseOR  ==  .HitResult:QuakeImmune % 2
 14F0:  		Call  UseBattleCamPreset    ( 00000002 )
 1500:  		Call  SetAnimation  ( .Actor:Self 00000006 004B0003 )
 1518:  		Call  SetPartYaw    ( .Actor:Self 00000006  180` )
 1530:  		Call  GetActorPos   ( .Actor:Self *Var0 *Var1 *Var2 )
 154C:  		Add   *Var1  00000064
 155C:  		Add   *Var2  00000064
 156C:  		Call  FlyPartTo     ( .Actor:Self 00000006 *Var0 *Var1 *Var2  0`  10` .Easing:Linear )
 1598:  		Call  SetPartFlagBits       ( .Actor:Self 00000006 00000001 .True )
 15B4:  		Call  StopSound     ( 00000358 )
 15C4:  		Call  YieldTurn ( )
 15D0:  	EndCaseGroup
 15D8:  EndSwitch
 15E0:  Call  EnableIdleScript  ( .Actor:Self 00000001 )
 15F4:  Call  UseIdleAnimation  ( .Actor:Self .True )
 1608:  Return
 1610:  End
}

#new:Script $Script_TakeTurn_8021D28C
{
    0:  Call  GetBattlePhase    ( *Var0 )
   10:  If  *Var0  ==  00000001
   20:  	ExecWait  $Script_8021B28C
   2C:  	Return
   34:  EndIf
   3C:  Call  RandInt   ( 000003E8 *Var0 )
   50:  If  *Var0  <  000001F4
   60:  	ExecWait  $Script_8021B28C
   6C:  Else
   74:  	ExecWait  $Script_8021BC74
   80:  EndIf
   88:  Return
   90:  End
}

PADDING: 8021D324 to 8021D330 (004FCF04 to 004FCF10)
00000000 00000000 00000000

#new:IdleAnimations $IdleAnimations_8021D330
{
	.Status:Normal    00370001
	.Status:Stone     00370000
	.Status:Sleep     00370000
	.Status:Poison    00370001
	.Status:Stop      00370000
	.Status:Static    00370001
	.Status:Paralyze  00370000
	.Status:Dizzy     00370001
	.Status:Fear      00370001
	.Status:End
}

MISSING: 8021D37C to 8021D394 (004FCF5C to 004FCF74)
00000001 00370001 00000000 00000001 00370006 00000000

#new:DefenseTable $DefenseTable_8021D394
{
	.Element:Normal 00000000
	.Element:End
}

#new:StatusTable $StatusTable_8021D3A0
{
	.Status:Normal      0`
	.Status:Default     0`
	.Status:Sleep      95`
	.Status:Poison      0`
	.Status:Frozen      0`
	.Status:Dizzy      50`
	.Status:Fear        0`
	.Status:Static      0`
	.Status:Paralyze  100`
	.Status:Shrink     80`
	.Status:Stop       90`
	.Status:DefaultTurnMod    0`
	.Status:SleepTurnMod      1`
	.Status:PoisonTurnMod     0`
	.Status:FrozenTurnMod     0`
	.Status:DizzyTurnMod      0`
	.Status:FearTurnMod       0`
	.Status:StaticTurnMod     0`
	.Status:ParalyzeTurnMod   0`
	.Status:ShrinkTurnMod     0`
	.Status:StopTurnMod       0`
	.Status:End
}

#new:PartsTable $PartsTable_8021D44C
{
	00800000 01000000 002300FF $IdleAnimations_8021D330 $DefenseTable_8021D394 00000010 00000000 00F60000 00000000
}

#new:Actor $PiranhaPlant
{
	% stats
	[Index]        19b
	[Level]        11`b
	[MaxHP]         5`b
	[Coins]         1`b
	[Flags]       00000000
	[StatusTable] $StatusTable_8021D3A0
	% ai
	[PartsCount]    1`s
	[PartsTable]  $PartsTable_8021D44C
	[Script]      $Script_Init_8021D498
	% move effectiveness
	[Escape]       70`b
	[Item]         40`b
	[AirLift]      20`b
	[Hurricane]    20`b % Bow's "Spook" as well
	[UpAndAway]    95`b
	[PowerBounce]  90`b
	[SpinSmash]     0`b % weight (0-4)
	% ui positions
	[Size]         38`b  38`b % width height
	[HealthBar]     0`b   0`b % dx dy
	[StatusTurn]   -7`b  33`b % dx dy
	[StatusIcon]   10`b  33`b % dx dy
}

#new:Script $Script_Init_8021D498
{
    0:  Call  BindTakeTurn      ( .Actor:Self $Script_TakeTurn_8021DCD4 )
   14:  Call  BindIdle  ( .Actor:Self $Script_Idle_8021D4E4 )
   28:  Call  BindHandleEvent   ( .Actor:Self $Script_HandleEvent_8021D60C )
   3C:  Return
   44:  End
}

#new:Script $Script_Idle_8021D4E4
{
    0:  Return
    8:  End
}

#new:Script $Script_8021D4F4
{
    0:  Call  UseBattleCamPreset    ( 00000002 )
   10:  Call  MoveBattleCamOver (  20` )
   20:  Call  SetActorFlagBits  ( .Actor:Self 00000004 .True )
   38:  Call  PlaySoundAtActor  ( .Actor:Self .Sound:MoleDig )
   4C:  Call  SetAnimation      ( .Actor:Self 00000001 00370004 )
   64:  Wait  10`
   70:  Call  SetGoalToHome     ( .Actor:Self )
   80:  Call  GetGoalPos        ( .Actor:Self *Var0 *Var1 *Var2 )
   9C:  Call  SetActorPos       ( .Actor:Self *Var0 *Var1 *Var2 )
   B8:  Call  PlaySoundAtActor  ( .Actor:Self .Sound:MoleSurface )
   CC:  Call  SetAnimation      ( .Actor:Self 00000001 00370003 )
   E4:  Wait  10`
   F0:  Call  SetActorFlagBits  ( .Actor:Self 00000004 .False )
  108:  Return
  110:  End
}

#new:Script $Script_HandleEvent_8021D60C
{
    0:  Call  UseIdleAnimation  ( .Actor:Self .False )
   14:  Call  EnableIdleScript  ( .Actor:Self 00000000 )
   28:  Call  GetLastEvent      ( .Actor:Self *Var0 )
   3C:  Switch  *Var0
   48:  	CaseOR  ==  .Event:HitCombo % 9
   54:  	CaseOR  ==  .Event:Hit % A
   60:  		SetConst  *Var0  00000001
   70:  		SetConst  *Var1  00370009
   80:  		ExecWait  DoNormalHit
   8C:  	EndCaseGroup
   94:  	Case  ==  .Event:BurnHit % E
   A0:  		SetConst  *Var0  00000001
   B0:  		SetConst  *Var1  0037000A
   C0:  		SetConst  *Var2  0037000B
   D0:  		ExecWait  DoBurnHit
   DC:  	Case  ==  .Event:BurnDeath % 24
   E8:  		SetConst  *Var0  00000001
   F8:  		SetConst  *Var1  0037000A
  108:  		SetConst  *Var2  0037000B
  118:  		ExecWait  DoBurnHit
  124:  		SetConst  *Var0  00000001
  134:  		SetConst  *Var1  0037000B
  144:  		ExecWait  DoDeath
  150:  		Return
  158:  	Case  ==  .Event:SpinSmashHit % B
  164:  		SetConst  *Var0  00000001
  174:  		SetConst  *Var1  00370009
  184:  		ExecWait  DoSpinSmashHit
  190:  	Case  ==  .Event:SpinSmashDeath % 21
  19C:  		SetConst  *Var0  00000001
  1AC:  		SetConst  *Var1  00370009
  1BC:  		ExecWait  DoSpinSmashHit
  1C8:  		SetConst  *Var0  00000001
  1D8:  		SetConst  *Var1  00370009
  1E8:  		ExecWait  DoDeath
  1F4:  		Return
  1FC:  	Case  ==  .Event:ShockHit % 2F
  208:  		SetConst  *Var0  00000001
  218:  		SetConst  *Var1  00370009
  228:  		ExecWait  DoShockHit
  234:  		Call  SetActorSpeed ( .Actor:Self *Fixed[4.0] )
  248:  		ExecWait  $Script_8021D4F4
  254:  	Case  ==  .Event:ShockDeath % 26
  260:  		SetConst  *Var0  00000001
  270:  		SetConst  *Var1  00370009
  280:  		ExecWait  DoShockHit
  28C:  		SetConst  *Var0  00000001
  29C:  		SetConst  *Var1  00370009
  2AC:  		ExecWait  DoDeath
  2B8:  		Return
  2C0:  	CaseOR  ==  00000017 % 17
  2CC:  	CaseOR  ==  .Event:Immune % 19
  2D8:  	CaseOR  ==  .Event:AirLiftFailed % 1F
  2E4:  		SetConst  *Var0  00000001
  2F4:  		SetConst  *Var1  00370001
  304:  		ExecWait  DoImmune
  310:  	EndCaseGroup
  318:  	Case  ==  .Event:SpikeTaunt % 1B
  324:  		Thread
  32C:  			Wait  10`
  338:  			Call  GetActorPos       ( .Actor:Self *Var0 *Var1 *Var2 )
  354:  			Call  GetStatusFlags    ( .Actor:Self *Var3 )
  368:  			If  *Var3  &  ~Flags:StatusFlags:Shrink % 80000
  378:  				Add   *Var0  00000000
  388:  				Add   *Var1  0000000E
  398:  			Else
  3A0:  				Add   *Var0  00000000
  3B0:  				Add   *Var1  00000023
  3C0:  			EndIf
  3C8:  			Call  PlayEffect    ( ~FX:LensFlare:Rotating *Var0 *Var1 *Var2 00000014 00000000 00000000 00000000 00000000 00000000 00000000 00000000 00000000 )
  40C:  			Wait  20`
  418:  		EndThread
  420:  		Loop  00000028
  42C:  			Call  SetAnimation  ( .Actor:Self 00000001 00370001 )
  444:  			Wait  1`
  450:  			Call  SetAnimation  ( .Actor:Self 00000001 00370006 )
  468:  			Wait  1`
  474:  		EndLoop
  47C:  		Call  SetAnimation  ( .Actor:Self 00000001 00370001 )
  494:  	Case  ==  .Event:Death % 20
  4A0:  		SetConst  *Var0  00000001
  4B0:  		SetConst  *Var1  00370009
  4C0:  		ExecWait  DoNormalHit
  4CC:  		Wait  10`
  4D8:  		SetConst  *Var0  00000001
  4E8:  		SetConst  *Var1  00370009
  4F8:  		ExecWait  DoDeath
  504:  		Return
  50C:  	Case  ==  .Event:RecoverStatus % 31
  518:  		SetConst  *Var0  00000001
  528:  		SetConst  *Var1  00370001
  538:  		ExecWait  DoRecover
  544:  	Case  ==  .Event:ScareAway % 39
  550:  		SetConst  *Var0  00000001
  560:  		SetConst  *Var1  00370009
  570:  		ExecWait  DoNormalHit
  57C:  		Call  PlaySoundAtActor  ( .Actor:Self .Sound:MoleDig )
  590:  		Call  SetAnimation      ( .Actor:Self 00000001 00370004 )
  5A8:  		Call  SetActorFlagBits  ( .Actor:Self 00000004 .True )
  5C0:  		Wait  8`
  5CC:  		Call  8027D32C  ( FFFFFF81 )
  5DC:  		Call  UseIdleAnimation  ( .Actor:Self .False )
  5F0:  		Call  RemoveActor       ( .Actor:Self )
  600:  		Return
  608:  	Case  ==  .Event:BeginAirLift % 3A
  614:  		SetConst  *Var0  00000001
  624:  		SetConst  *Var1  00370009
  634:  		ExecWait  DoAirLift
  640:  	Case  ==  .Event:BlowAway % 16
  64C:  		SetConst  *Var0  00000001
  65C:  		SetConst  *Var1  00370009
  66C:  		ExecWait  DoBlowAway
  678:  		Return
  680:  	Default
  688:  EndSwitch
  690:  Call  EnableIdleScript  ( .Actor:Self 00000001 )
  6A4:  Call  UseIdleAnimation  ( .Actor:Self .True )
  6B8:  Return
  6C0:  End
}

#new:Script $Script_TakeTurn_8021DCD4
{
    0:  Call  UseIdleAnimation  ( .Actor:Self .False )
   14:  Call  EnableIdleScript  ( .Actor:Self 00000000 )
   28:  Call  SetTargetActor    ( .Actor:Self .Actor:Player )
   3C:  Call  GetBattlePhase    ( *Var0 )
   4C:  If  *Var0  ==  00000001
   5C:  	Call  SetAnimation      ( .Actor:Self 00000001 00370004 )
   74:  	Call  SetActorFlagBits  ( .Actor:Self 00000004 .True )
   8C:  	Call  UseBattleCamPreset    ( 0000003F )
   9C:  	Call  BattleCamTargetActor  ( .Actor:Self )
   AC:  	Call  8024ECF8  ( FFFFFFFF 00000001 00000000 )
   C4:  	Call  MoveBattleCamOver (  1` )
   D4:  	Call  SetGoalToTarget   ( .Actor:Self )
   E4:  	Call  GetGoalPos        ( .Actor:Self *Var0 *Var1 *Var2 )
  100:  	Add   *Var0  00000014
  110:  	Set   *Var1  00000000
  120:  	Call  SetActorPos       ( .Actor:Self *Var0 *Var1 *Var2 )
  13C:  	Wait  15`
  148:  	Goto  7B
  154:  EndIf
  15C:  Call  PlaySoundAtActor  ( .Actor:Self .Sound:MoleDig )
  170:  Call  SetAnimation      ( .Actor:Self 00000001 00370004 )
  188:  Call  SetActorFlagBits  ( .Actor:Self 00000004 .True )
  1A0:  Wait  8`
  1AC:  Call  UseBattleCamPreset    ( 00000013 )
  1BC:  Call  SetGoalToTarget   ( .Actor:Self )
  1CC:  Call  GetGoalPos        ( .Actor:Self *Var0 *Var1 *Var2 )
  1E8:  Add   *Var0  00000014
  1F8:  Set   *Var1  00000000
  208:  Call  SetBattleCamTarget    ( *Var0 *Var1 *Var2 )
  220:  Call  SetBattleCamZoom  (  350` )
  230:  Call  SetBattleCamOffsetZ   (  45` )
  240:  Call  8024ECF8  ( FFFFFFFF 00000001 00000000 )
  258:  Call  MoveBattleCamOver (  20` )
  268:  Call  SetGoalToTarget   ( .Actor:Self )
  278:  Call  GetGoalPos        ( .Actor:Self *Var0 *Var1 *Var2 )
  294:  Call  GetStatusFlags    ( .Actor:Self *Var5 )
  2A8:  If  *Var5  &  ~Flags:StatusFlags:Shrink % 80000
  2B8:  	Add   *Var0  00000008
  2C8:  	Add   *Var0  FFFFFFFD
  2D8:  Else
  2E0:  	Add   *Var0  00000014
  2F0:  EndIf
  2F8:  Set   *Var1  00000000
  308:  Call  SetActorJumpGravity   ( .Actor:Self *Fixed[1.0] )
  31C:  Call  SetActorSounds    ( .Actor:Self .ActorSound:Jump 00000000 00000000 )
  338:  Call  SetGoalPos        ( .Actor:Self *Var0 *Var1 *Var2 )
  354:  Call  JumpToGoal        ( .Actor:Self  20` .False .False .False )
  374:  Label  7B
  380:  Call  PlaySoundAtActor  ( .Actor:Self .Sound:MoleSurface )
  394:  Call  SetActorPos       ( .Actor:Self *Var0 *Var1 *Var2 )
  3B0:  Call  SetActorFlagBits  ( .Actor:Self 00000004 .False )
  3C8:  Call  SetAnimation      ( .Actor:Self 00000001 00370003 )
  3E0:  Wait  8`
  3EC:  Call  SetAnimation      ( .Actor:Self 00000001 00370005 )
  404:  Call  EnemyTestTarget   ( .Actor:Self *Var0 ~Flags:DamageType:0 00000000 00000001 00000010 )
  428:  Switch  *Var0
  434:  	CaseOR  ==  .HitResult:Miss % 6
  440:  	CaseOR  ==  .HitResult:Lucky % 5
  44C:  		Set   *VarA  *Var0
  45C:  		Call  GetStatusFlags    ( .Actor:Self *Var5 )
  470:  		If  *Var5  !&  ~Flags:StatusFlags:Shrink % 80000
  480:  			Call  SetAnimation  ( .Actor:Self 00000001 00370006 )
  498:  			Wait  2`
  4A4:  		EndIf
  4AC:  		Thread
  4B4:  			Wait  6`
  4C0:  			Call  PlaySoundAtActor  ( .Actor:Self 000020DE )
  4D4:  		EndThread
  4DC:  		Call  SetAnimation  ( .Actor:Self 00000001 00370007 )
  4F4:  		Wait  10`
  500:  		Call  SetAnimation  ( .Actor:Self 00000001 00370008 )
  518:  		Wait  2`
  524:  		If  *VarA  ==  .HitResult:Lucky % 5
  534:  			Call  EnemyTestTarget   ( .Actor:Self *Var0 ~Flags:DamageType:TriggerLucky 00000000 00000000 00000000 )
  558:  		EndIf
  560:  		Wait  15`
  56C:  		Call  UseBattleCamPreset    ( 00000002 )
  57C:  		Call  YieldTurn ( )
  588:  		Call  SetActorSpeed     ( .Actor:Self *Fixed[4.0] )
  59C:  		ExecWait  $Script_8021D4F4
  5A8:  		Call  EnableIdleScript  ( .Actor:Self 00000001 )
  5BC:  		Call  UseIdleAnimation  ( .Actor:Self .True )
  5D0:  		Return
  5D8:  	EndCaseGroup
  5E0:  EndSwitch
  5E8:  Call  SetAnimation  ( .Actor:Self 00000001 00370006 )
  600:  Wait  2`
  60C:  Thread
  614:  	Wait  6`
  620:  	Call  PlaySoundAtActor  ( .Actor:Self 000020DE )
  634:  EndThread
  63C:  Call  SetAnimation      ( .Actor:Self 00000001 00370007 )
  654:  Wait  10`
  660:  Wait  2`
  66C:  Call  SetGoalToTarget   ( .Actor:Self )
  67C:  Call  EnemyDamageTarget ( .Actor:Self *Var0 ~Flags:DamageType:0 00000000 00000000 00000003 00000020 )
  6A4:  Switch  *Var0
  6B0:  	CaseOR  ==  .HitResult:Hit % 0
  6BC:  	CaseOR  ==  .HitResult:QuakeImmune % 2
  6C8:  		Call  UseBattleCamPreset    ( 00000002 )
  6D8:  		Wait  2`
  6E4:  		Call  SetAnimation  ( .Actor:Self 00000001 00370008 )
  6FC:  		Wait  15`
  708:  		Call  YieldTurn ( )
  714:  		Call  SetActorSpeed ( .Actor:Self *Fixed[6.0] )
  728:  		ExecWait  $Script_8021D4F4
  734:  	EndCaseGroup
  73C:  EndSwitch
  744:  Call  EnableIdleScript  ( .Actor:Self 00000001 )
  758:  Call  UseIdleAnimation  ( .Actor:Self .True )
  76C:  Return
  774:  End
}

#new:Script $Script_BeforeBattle_8021E450
{
    0:  Call  SetSpriteShading  ( FFFFFFFF )
   10:  Call  $Function_80218360 ( )
   1C:  Return
   24:  End
}

#new:Script $Script_AfterBattle_8021E47C
{
    0:  Return
    8:  End
}

#new:Stage $Stage_8021E48C
{
	$ASCII_8021EC20  % mim_tex
	$ASCII_8021EC10  % mim_bt01_shape
	$ASCII_8021EC00  % mim_bt01_hit
	$Script_BeforeBattle_8021E450
	$Script_AfterBattle_8021E47C
	00000000
	00000000
	00000000
	00000000
	00000000
}

PADDING: 8021E4B4 to 8021E4C0 (004FE094 to 004FE0A0)
00000000 00000000 00000000

#new:Formation $Formation_00
{
	$ForestFuzzy 00000001 0000000A 00000000 00000000 00000000 00000000
	$ForestFuzzy 00000002 00000009 00000000 00000000 00000000 00000000
}

#new:Formation $Formation_01
{
	$ForestFuzzy 00000000 0000000A 00000000 00000000 00000000 00000000
	$ForestFuzzy 00000001 00000009 00000000 00000000 00000000 00000000
	$ForestFuzzy 00000002 00000008 00000000 00000000 00000000 00000000
}

#new:Formation $Formation_02
{
	$ForestFuzzy 00000000 0000000A 00000000 00000000 00000000 00000000
	$ForestFuzzy 00000001 00000009 00000000 00000000 00000000 00000000
	$ForestFuzzy 00000002 00000008 00000000 00000000 00000000 00000000
	$ForestFuzzy 00000003 00000007 00000000 00000000 00000000 00000000
}

#new:Formation $Formation_03
{
	$ForestFuzzy 00000001 0000000A 00000000 00000000 00000000 00000000
	$PiranhaPlant 00000002 00000009 00000000 00000000 00000000 00000000
}

#new:Formation $Formation_04
{
	$ForestFuzzy 00000000 0000000A 00000000 00000000 00000000 00000000
	$ForestFuzzy 00000001 00000009 00000000 00000000 00000000 00000000
	$PiranhaPlant 00000002 00000008 00000000 00000000 00000000 00000000
}

#new:Formation $Formation_05
{
	$ForestFuzzy 00000000 0000000A 00000000 00000000 00000000 00000000
	$ForestFuzzy 00000001 00000009 00000000 00000000 00000000 00000000
	$PiranhaPlant 00000002 00000008 00000000 00000000 00000000 00000000
	$PiranhaPlant 00000003 00000007 00000000 00000000 00000000 00000000
}

#new:Formation $Formation_06
{
	$ForestFuzzy 00000000 0000000A 00000000 00000000 00000000 00000000
	$ForestFuzzy 00000001 00000009 00000000 00000000 00000000 00000000
	$ForestFuzzy 00000002 00000008 00000000 00000000 00000000 00000000
	$PiranhaPlant 00000003 00000007 00000000 00000000 00000000 00000000
}

#new:Formation $Formation_07
{
	$ForestFuzzy 00000000 0000000A 00000000 00000000 00000000 00000000
	$PiranhaPlant 00000001 00000009 00000000 00000000 00000000 00000000
	$ForestFuzzy 00000002 00000008 00000000 00000000 00000000 00000000
	$PiranhaPlant 00000003 00000007 00000000 00000000 00000000 00000000
}

#new:Formation $Formation_08
{
	$PiranhaPlant 00000001 0000000A 00000000 00000000 00000000 00000000
}

#new:Formation $Formation_09
{
	$PiranhaPlant 00000001 0000000A 00000000 00000000 00000000 00000000
	$PiranhaPlant 00000002 00000009 00000000 00000000 00000000 00000000
}

#new:Formation $Formation_0A
{
	$PiranhaPlant 00000000 0000000A 00000000 00000000 00000000 00000000
	$PiranhaPlant 00000001 00000009 00000000 00000000 00000000 00000000
	$PiranhaPlant 00000002 00000008 00000000 00000000 00000000 00000000
}

#new:Formation $Formation_0B
{
	$PiranhaPlant 00000000 0000000A 00000000 00000000 00000000 00000000
	$PiranhaPlant 00000001 00000009 00000000 00000000 00000000 00000000
	$PiranhaPlant 00000002 00000008 00000000 00000000 00000000 00000000
	$PiranhaPlant 00000003 00000007 00000000 00000000 00000000 00000000
}

#new:Formation $Formation_0C
{
	$PiranhaPlant 00000001 0000000A 00000000 00000000 00000000 00000000
	$ForestFuzzy 00000002 00000009 00000000 00000000 00000000 00000000
}

#new:Formation $Formation_0D
{
	$PiranhaPlant 00000000 0000000A 00000000 00000000 00000000 00000000
	$PiranhaPlant 00000001 00000009 00000000 00000000 00000000 00000000
	$ForestFuzzy 00000002 00000008 00000000 00000000 00000000 00000000
}

#new:Formation $Formation_0E
{
	$PiranhaPlant 00000000 0000000A 00000000 00000000 00000000 00000000
	$ForestFuzzy 00000001 00000009 00000000 00000000 00000000 00000000
	$ForestFuzzy 00000002 00000008 00000000 00000000 00000000 00000000
}

#new:Formation $Formation_0F
{
	$PiranhaPlant 00000000 0000000A 00000000 00000000 00000000 00000000
	$ForestFuzzy 00000001 00000009 00000000 00000000 00000000 00000000
	$PiranhaPlant 00000002 00000008 00000000 00000000 00000000 00000000
}

#new:Formation $Formation_10
{
	$Bzzap 00000005 0000000A 00000000 00000000 00000000 00000000
	$Bzzap 00000006 00000009 00000000 00000000 00000000 00000000
}

#new:Formation $Formation_11
{
	$Bzzap 00000004 0000000A 00000000 00000000 00000000 00000000
	$Bzzap 00000005 00000009 00000000 00000000 00000000 00000000
	$Bzzap 00000006 00000008 00000000 00000000 00000000 00000000
}

#new:FormationTable $FormationTable
{
	$SJIS_8021EE50 00000002 $Formation_00 $Stage_8021E48C 00000000
	$SJIS_8021EE38 00000003 $Formation_01 $Stage_8021E48C 00000000
	$SJIS_8021EE20 00000004 $Formation_02 $Stage_8021E48C 00000000
	$SJIS_8021EDFC 00000002 $Formation_03 $Stage_8021E48C 00000000
	$SJIS_8021EDD4 00000003 $Formation_04 $Stage_8021E48C 00000000
	$SJIS_8021EDAC 00000004 $Formation_05 $Stage_8021E48C 00000000
	$SJIS_8021ED84 00000004 $Formation_06 $Stage_8021E48C 00000000
	$SJIS_8021ED3C 00000004 $Formation_07 $Stage_8021E48C 00000000
	$SJIS_8021ED28 00000001 $Formation_08 $Stage_8021E48C 00000000
	$SJIS_8021ED14 00000002 $Formation_09 $Stage_8021E48C 00000000
	$SJIS_8021ED00 00000003 $Formation_0A $Stage_8021E48C 00000000
	$SJIS_8021ECEC 00000004 $Formation_0B $Stage_8021E48C 00000000
	$SJIS_8021ECC8 00000002 $Formation_0C $Stage_8021E48C 00000000
	$SJIS_8021ECA0 00000003 $Formation_0D $Stage_8021E48C 00000000
	$SJIS_8021EC78 00000003 $Formation_0E $Stage_8021E48C 00000000
	$SJIS_8021EC40 00000003 $Formation_0F $Stage_8021E48C 00000000
	$SJIS_8021EC34 00000002 $Formation_10 $Stage_8021E48C 00000000
	$SJIS_8021EC28 00000003 $Formation_11 $Stage_8021E48C 00000000
	00000000 00000000 00000000 00000000 00000000
}

#new:StageTable $StageTable
{
	$ASCII_8021EE68 $Stage_8021E48C
	00000000 00000000
}

PADDING: 8021EBFC to 8021EC00 (004FE7DC to 004FE7E0)
00000000

#new:ASCII $ASCII_8021EC00
{
	"mim_bt01_hit"
}

#new:ASCII $ASCII_8021EC10
{
	"mim_bt01_shape"
}

#new:ASCII $ASCII_8021EC20
{
	"mim_tex"
}

#new:SJIS $SJIS_8021EC28
{
	ハッチーx3 % hacchi-x3
}

#new:SJIS $SJIS_8021EC34
{
	ハッチーx2 % hacchi-x2
}

#new:SJIS $SJIS_8021EC40
{
	パックンフラワー,グリーンチョロボン,パックンフラワー % pakkunfurawa-,guri-nchorobon,pakkunfurawa-
}

#new:SJIS $SJIS_8021EC78
{
	パックンフラワー,グリーンチョロボンx2 % pakkunfurawa-,guri-nchorobonx2
}

#new:SJIS $SJIS_8021ECA0
{
	パックンフラワーx2,グリーンチョロボン % pakkunfurawa-x2,guri-nchorobon
}

#new:SJIS $SJIS_8021ECC8
{
	パックンフラワー,グリーンチョロボン % pakkunfurawa-,guri-nchorobon
}

#new:SJIS $SJIS_8021ECEC
{
	パックンフラワーx4 % pakkunfurawa-x4
}

#new:SJIS $SJIS_8021ED00
{
	パックンフラワーx3 % pakkunfurawa-x3
}

#new:SJIS $SJIS_8021ED14
{
	パックンフラワーx2 % pakkunfurawa-x2
}

#new:SJIS $SJIS_8021ED28
{
	パックンフラワー % pakkunfurawa-
}

#new:SJIS $SJIS_8021ED3C
{
	グリーンチョロボン,パックンフラワー,グリーンチョロボン,パックンフラワー % guri-nchorobon,pakkunfurawa-,guri-nchorobon,pakkunfurawa-
}

#new:SJIS $SJIS_8021ED84
{
	グリーンチョロボンx3,パックンフラワー % guri-nchorobonx3,pakkunfurawa-
}

#new:SJIS $SJIS_8021EDAC
{
	グリーンチョロボンx2,パックンフラワーx2 % guri-nchorobonx2,pakkunfurawa-x2
}

#new:SJIS $SJIS_8021EDD4
{
	グリーンチョロボンx2,パックンフラワー % guri-nchorobonx2,pakkunfurawa-
}

#new:SJIS $SJIS_8021EDFC
{
	グリーンチョロボン,パックンフラワー % guri-nchorobon,pakkunfurawa-
}

#new:SJIS $SJIS_8021EE20
{
	グリーンチョロボンx4 % guri-nchorobonx4
}

#new:SJIS $SJIS_8021EE38
{
	グリーンチョロボンx3 % guri-nchorobonx3
}

#new:SJIS $SJIS_8021EE50
{
	グリーンチョロボンx2 % guri-nchorobonx2
}

#new:ASCII $ASCII_8021EE68
{
	"mim_01"
}

