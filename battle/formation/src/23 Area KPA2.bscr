% Script File: 23 Area KPA2.bscr
% Decoded from: 69F200 to 6BBB90 (23 Area KPA2)

#new:Function $Function_80218000
{
    0:  ADDIU     SP, SP, FFE8
    4:  SW        S0, 10 (SP)
    8:  COPY      S0, A0
    C:  BEQ       A1, R0, .o48
   10:  SW        RA, 14 (SP)
   14:  JAL       ~Func:mdl_set_all_fog_mode
   18:  LI        A0, 1
   1C:  CLEAR     A0
   20:  COPY      A1, A0
   24:  COPY      A2, A0
   28:  COPY      A3, A0
   2C:  LAW       V0, 801512F0
   34:  LI        V1, 1
   38:  JAL       ~Func:set_background_color_blend
   3C:  SB        V1, 0 (V0)
   40:  LI        V0, 14
   44:  SW        V0, 70 (S0)
        .o48
   48:  CLEAR     A0
   4C:  COPY      A1, A0
   50:  COPY      A2, A0
   54:  LW        V1, 70 (S0)
   58:  LI        V0, 14
   5C:  SUBU      V0, V0, V1
   60:  SLL       A3, V0, 2
   64:  ADDU      A3, A3, V0
   68:  SLL       A3, A3, 1
   6C:  JAL       ~Func:set_background_color_blend
   70:  ANDI      A3, A3, FE
   74:  LW        V0, 70 (S0)
   78:  ADDIU     V0, V0, FFFF
   7C:  SW        V0, 70 (S0)
   80:  SLTIU     V0, V0, 1
   84:  LW        RA, 14 (SP)
   88:  LW        S0, 10 (SP)
   8C:  SLL       V0, V0, 1
   90:  JR        RA
   94:  ADDIU     SP, SP, 18
}

#new:Function $Function_80218098
{
    0:  ADDIU     SP, SP, FFE8
    4:  SW        S0, 10 (SP)
    8:  COPY      S0, A0
    C:  BEQ       A1, R0, .o1C
   10:  SW        RA, 14 (SP)
   14:  LI        V0, 14
   18:  SW        V0, 70 (S0)
        .o1C
   1C:  CLEAR     A0
   20:  COPY      A1, A0
   24:  LW        V0, 70 (S0)
   28:  COPY      A2, A0
   2C:  SLL       A3, V0, 2
   30:  ADDU      A3, A3, V0
   34:  SLL       A3, A3, 1
   38:  JAL       ~Func:set_background_color_blend
   3C:  ANDI      A3, A3, FE
   40:  LW        V0, 70 (S0)
   44:  ADDIU     V0, V0, FFFF
   48:  BEQ       V0, R0, .o58
   4C:  SW        V0, 70 (S0)
   50:  BEQ       R0, R0, .o70
   54:  CLEAR     V0
        .o58
   58:  CLEAR     A0
   5C:  COPY      A1, A0
   60:  COPY      A2, A0
   64:  JAL       ~Func:set_background_color_blend
   68:  COPY      A3, A0
   6C:  LI        V0, 2
        .o70
   70:  LW        RA, 14 (SP)
   74:  LW        S0, 10 (SP)
   78:  JR        RA
   7C:  ADDIU     SP, SP, 18
}

PADDING: 80218118 to 80218120 (0069F318 to 0069F320)
00000000 00000000

#new:Function $Function_80218120
{
    0:  ADDIU     SP, SP, FFE0
    4:  SW        S1, 14 (SP)
    8:  COPY      S1, A0
    C:  SW        RA, 18 (SP)
   10:  SW        S0, 10 (SP)
   14:  LW        S0, C (S1)
   18:  LW        A1, 0 (S0)
   1C:  JAL       ~Func:get_variable
   20:  ADDIU     S0, S0, 4
   24:  COPY      A0, S1
   28:  LW        A1, 0 (S0)
   2C:  JAL       ~Func:get_variable
   30:  COPY      S0, V0
   34:  COPY      A0, S0
   38:  JAL       ~Func:start_rumble
   3C:  COPY      A1, V0
   40:  LW        RA, 18 (SP)
   44:  LW        S1, 14 (SP)
   48:  LW        S0, 10 (SP)
   4C:  LI        V0, 2
   50:  JR        RA
   54:  ADDIU     SP, SP, 20
}

#new:Function $Function_80218178
{
    0:  ADDIU     SP, SP, FFE8
    4:  SW        RA, 10 (SP)
    8:  LW        V0, C (A0)
    C:  JAL       ~Func:get_variable
   10:  LW        A1, 0 (V0)
   14:  LW        V1, C (V0)
   18:  LIF       F0, 0.03975586
   24:  NOP
   28:  SWC1      F0, 38 (V1)
   2C:  SWC1      F0, 30 (V1)
   30:  LW        V1, C (V0)
   34:  LIF       F0, 1.875
   3C:  NOP
   40:  SWC1      F0, 34 (V1)
   44:  LW        V1, C (V0)
   48:  LIF       F0, 0.04975586
   54:  NOP
   58:  SWC1      F0, 3C (V1)
   5C:  LW        RA, 10 (SP)
   60:  LI        V0, 2
   64:  JR        RA
   68:  ADDIU     SP, SP, 18
}

#new:Function $Function_802181E4
{
    0:  ADDIU     SP, SP, FF58
    4:  SW        S3, 74 (SP)
    8:  COPY      S3, A0
    C:  SW        RA, 88 (SP)
   10:  SW        S7, 84 (SP)
   14:  SW        S6, 80 (SP)
   18:  SW        S5, 7C (SP)
   1C:  SW        S4, 78 (SP)
   20:  SW        S2, 70 (SP)
   24:  SW        S1, 6C (SP)
   28:  SW        S0, 68 (SP)
   2C:  SDC1      F24, A0 (SP)
   30:  SDC1      F22, 98 (SP)
   34:  SDC1      F20, 90 (SP)
   38:  LW        A0, 148 (S3)
   3C:  JAL       ~Func:get_actor
   40:  COPY      S0, A1
   44:  BNE       V0, R0, .o54
   48:  COPY      A0, V0
   4C:  BEQ       R0, R0, .o36C
   50:  LI        V0, 2
        .o54
   54:  JAL       ~Func:get_actor_part
   58:  LI        A1, 1
   5C:  BEQ       S0, R0, .oAC
   60:  COPY      S5, V0
   64:  CLEAR     S0
   68:  LI        S1, FF
   6C:  SW        R0, 74 (S3)
   70:  SW        R0, 78 (S3)
   74:  SW        R0, 70 (S3)
   78:  COPY      A1, S0
        .o7C
   7C:  LI        A2, 11
   80:  LI        A3, 14
   84:  SW        R0, 10 (SP)
   88:  SW        R0, 14 (SP)
   8C:  SW        S1, 18 (SP)
   90:  SW        R0, 1C (SP)
   94:  LW        A0, 84 (S5)
   98:  JAL       802DE780
   9C:  ADDIU     S0, S0, 1
   A0:  SLTI      V0, S0, A
   A4:  BNE       V0, R0, .o7C
   A8:  COPY      A1, S0
        .oAC
   AC:  LW        V0, 74 (S3)
   B0:  ADDIU     A0, V0, A
   B4:  SLTI      V0, A0, 168
   B8:  BNE       V0, R0, .oFC
   BC:  SW        A0, 74 (S3)
   C0:  LI        V0, B60B60B7
   C8:  MULT      A0, V0
   CC:  SRA       V1, A0, 1F
   D0:  MFHI      T0
   D4:  ADDU      V0, T0, A0
   D8:  SRA       V0, V0, 8
   DC:  SUBU      V0, V0, V1
   E0:  SLL       V1, V0, 1
   E4:  ADDU      V1, V1, V0
   E8:  SLL       V0, V1, 4
   EC:  SUBU      V0, V0, V1
   F0:  SLL       V0, V0, 3
   F4:  SUBU      V0, A0, V0
   F8:  SW        V0, 74 (S3)
        .oFC
   FC:  CLEAR     S1
  100:  LUI       S2, 8000
  104:  COPY      S0, S1
  108:  LIF       F25, 1.875
  110:  MTC1      R0, F24
  114:  LIF       F23, 3.1875
  11C:  MTC1      R0, F22
  120:  LIF       F21, 28.0
  128:  MTC1      R0, F20
        .o12C
  12C:  LHU       A0, 76 (S3)
  130:  ADDU      A0, A0, S0
  134:  ADDIU     A0, A0, 78
  138:  SLL       A0, A0, 10
  13C:  JAL       ~Func:cosine
  140:  SRA       A0, A0, 10
  144:  CVT.D.S   F0, F0
  148:  ADD.D     F0, F0, F24
  14C:  MUL.D     F0, F0, F22
  150:  NOP
  154:  ADDIU     V0, SP, 20
  158:  C.LE.D    F20, F0
  15C:  NOP
  160:  BC1T      .o178
  164:  ADDU      V0, V0, S1
  168:  TRUNC.W.D F2, F0
  16C:  MFC1      V1, F2
  170:  BEQ       R0, R0, .o190
  174:  SB        V1, 0 (V0)
        .o178
  178:  SUB.D     F0, F0, F20
  17C:  TRUNC.W.D F2, F0
  180:  MFC1      V1, F2
  184:  NOP
  188:  OR        V1, V1, S2
  18C:  SB        V1, 0 (V0)
        .o190
  190:  LHU       A0, 76 (S3)
  194:  ADDU      A0, A0, S0
  198:  ADDIU     A0, A0, 3C
  19C:  SLL       A0, A0, 10
  1A0:  JAL       ~Func:cosine
  1A4:  SRA       A0, A0, 10
  1A8:  CVT.D.S   F0, F0
  1AC:  ADD.D     F0, F0, F24
  1B0:  MUL.D     F0, F0, F22
  1B4:  NOP
  1B8:  ADDIU     V0, SP, 38
  1BC:  C.LE.D    F20, F0
  1C0:  NOP
  1C4:  BC1T      .o1DC
  1C8:  ADDU      V0, V0, S1
  1CC:  TRUNC.W.D F2, F0
  1D0:  MFC1      V1, F2
  1D4:  BEQ       R0, R0, .o1F4
  1D8:  SB        V1, 0 (V0)
        .o1DC
  1DC:  SUB.D     F0, F0, F20
  1E0:  TRUNC.W.D F2, F0
  1E4:  MFC1      V1, F2
  1E8:  NOP
  1EC:  OR        V1, V1, S2
  1F0:  SB        V1, 0 (V0)
        .o1F4
  1F4:  LHU       A0, 76 (S3)
  1F8:  ADDU      A0, A0, S0
  1FC:  ADDIU     A0, A0, B4
  200:  SLL       A0, A0, 10
  204:  JAL       ~Func:cosine
  208:  SRA       A0, A0, 10
  20C:  CVT.D.S   F0, F0
  210:  ADD.D     F0, F0, F24
  214:  MUL.D     F0, F0, F22
  218:  NOP
  21C:  ADDIU     V0, SP, 50
  220:  C.LE.D    F20, F0
  224:  NOP
  228:  BC1T      .o240
  22C:  ADDU      V0, V0, S1
  230:  TRUNC.W.D F2, F0
  234:  MFC1      V1, F2
  238:  BEQ       R0, R0, .o258
  23C:  SB        V1, 0 (V0)
        .o240
  240:  SUB.D     F0, F0, F20
  244:  TRUNC.W.D F2, F0
  248:  MFC1      V1, F2
  24C:  NOP
  250:  OR        V1, V1, S2
  254:  SB        V1, 0 (V0)
        .o258
  258:  ADDIU     S1, S1, 1
  25C:  SLTI      V0, S1, 14
  260:  BNE       V0, R0, .o12C
  264:  ADDIU     S0, S0, 19
  268:  LW        V0, 7C (S5)
  26C:  LUI       V1, 4
  270:  AND       V0, V0, V1
  274:  BEQ       V0, R0, .o30C
  278:  CLEAR     S1
  27C:  ADDIU     S7, SP, 20
  280:  ADDIU     S6, SP, 38
  284:  ADDIU     S4, SP, 50
  288:  LI        S3, FF
  28C:  CLEAR     S0
        .o290
  290:  ADDU      V0, S7, S1
  294:  ADDU      A0, S6, S1
  298:  LBU       V1, 0 (V0)
  29C:  ADDU      V0, S4, S1
  2A0:  LBU       A0, 0 (A0)
  2A4:  LBU       V0, 0 (V0)
  2A8:  SLL       V1, V1, 18
  2AC:  SLL       A0, A0, 10
  2B0:  OR        V1, V1, A0
  2B4:  SLL       V0, V0, 8
  2B8:  OR        V1, V1, V0
  2BC:  ORI       S2, V1, FF
  2C0:  COPY      A1, S0
        .o2C4
  2C4:  LI        A2, C
  2C8:  COPY      A3, S1
  2CC:  SW        S2, 10 (SP)
  2D0:  SW        R0, 14 (SP)
  2D4:  SW        S3, 18 (SP)
  2D8:  SW        R0, 1C (SP)
  2DC:  LW        A0, 84 (S5)
  2E0:  JAL       802DE780
  2E4:  ADDIU     S0, S0, 1
  2E8:  SLTI      V0, S0, A
  2EC:  BNE       V0, R0, .o2C4
  2F0:  COPY      A1, S0
  2F4:  ADDIU     S1, S1, 1
  2F8:  SLTI      V0, S1, 14
  2FC:  BNE       V0, R0, .o290
  300:  CLEAR     S0
  304:  BEQ       R0, R0, .o36C
  308:  CLEAR     V0
        .o30C
  30C:  LI        S2, FF
  310:  COPY      S4, S2
  314:  CLEAR     S0
        .o318
  318:  COPY      A1, S0
        .o31C
  31C:  LI        A2, C
  320:  COPY      A3, S1
  324:  SW        S2, 10 (SP)
  328:  SW        R0, 14 (SP)
  32C:  SW        S4, 18 (SP)
  330:  SW        R0, 1C (SP)
  334:  LW        A0, 84 (S5)
  338:  JAL       802DE780
  33C:  ADDIU     S0, S0, 1
  340:  SLTI      V0, S0, A
  344:  BNE       V0, R0, .o31C
  348:  COPY      A1, S0
  34C:  ADDIU     S1, S1, 1
  350:  SLTI      V0, S1, 14
  354:  BNE       V0, R0, .o318
  358:  CLEAR     S0
  35C:  CLEAR     V0
  360:  SW        R0, 74 (S3)
  364:  SW        R0, 78 (S3)
  368:  SW        R0, 70 (S3)
        .o36C
  36C:  LW        RA, 88 (SP)
  370:  LW        S7, 84 (SP)
  374:  LW        S6, 80 (SP)
  378:  LW        S5, 7C (SP)
  37C:  LW        S4, 78 (SP)
  380:  LW        S3, 74 (SP)
  384:  LW        S2, 70 (SP)
  388:  LW        S1, 6C (SP)
  38C:  LW        S0, 68 (SP)
  390:  LDC1      F24, A0 (SP)
  394:  LDC1      F22, 98 (SP)
  398:  LDC1      F20, 90 (SP)
  39C:  JR        RA
  3A0:  ADDIU     SP, SP, A8
}

#new:Function $Function_80218588
{
    0:  ADDIU     SP, SP, FFE8
    4:  SW        S0, 10 (SP)
    8:  COPY      S0, A0
    C:  BEQ       A1, R0, .o48
   10:  SW        RA, 14 (SP)
   14:  JAL       ~Func:mdl_set_all_fog_mode
   18:  LI        A0, 1
   1C:  CLEAR     A0
   20:  COPY      A1, A0
   24:  COPY      A2, A0
   28:  COPY      A3, A0
   2C:  LAW       V0, 801512F0
   34:  LI        V1, 1
   38:  JAL       ~Func:set_background_color_blend
   3C:  SB        V1, 0 (V0)
   40:  LI        V0, 14
   44:  SW        V0, 70 (S0)
        .o48
   48:  CLEAR     A0
   4C:  COPY      A1, A0
   50:  COPY      A2, A0
   54:  LW        V1, 70 (S0)
   58:  LI        V0, 14
   5C:  SUBU      V0, V0, V1
   60:  SLL       A3, V0, 2
   64:  ADDU      A3, A3, V0
   68:  SLL       A3, A3, 1
   6C:  JAL       ~Func:set_background_color_blend
   70:  ANDI      A3, A3, FE
   74:  LW        V0, 70 (S0)
   78:  ADDIU     V0, V0, FFFF
   7C:  SW        V0, 70 (S0)
   80:  SLTIU     V0, V0, 1
   84:  LW        RA, 14 (SP)
   88:  LW        S0, 10 (SP)
   8C:  SLL       V0, V0, 1
   90:  JR        RA
   94:  ADDIU     SP, SP, 18
}

#new:Function $Function_80218620
{
    0:  ADDIU     SP, SP, FFE8
    4:  SW        S0, 10 (SP)
    8:  COPY      S0, A0
    C:  BEQ       A1, R0, .o1C
   10:  SW        RA, 14 (SP)
   14:  LI        V0, 14
   18:  SW        V0, 70 (S0)
        .o1C
   1C:  CLEAR     A0
   20:  COPY      A1, A0
   24:  LW        V0, 70 (S0)
   28:  COPY      A2, A0
   2C:  SLL       A3, V0, 2
   30:  ADDU      A3, A3, V0
   34:  SLL       A3, A3, 1
   38:  JAL       ~Func:set_background_color_blend
   3C:  ANDI      A3, A3, FE
   40:  LW        V0, 70 (S0)
   44:  ADDIU     V0, V0, FFFF
   48:  BEQ       V0, R0, .o58
   4C:  SW        V0, 70 (S0)
   50:  BEQ       R0, R0, .o70
   54:  CLEAR     V0
        .o58
   58:  CLEAR     A0
   5C:  COPY      A1, A0
   60:  COPY      A2, A0
   64:  JAL       ~Func:set_background_color_blend
   68:  COPY      A3, A0
   6C:  LI        V0, 2
        .o70
   70:  LW        RA, 14 (SP)
   74:  LW        S0, 10 (SP)
   78:  JR        RA
   7C:  ADDIU     SP, SP, 18
}

#new:Function $Function_802186A0
{
    0:  ADDIU     SP, SP, FFE8
    4:  SW        RA, 10 (SP)
    8:  JAL       ~Func:get_actor
    C:  LW        A0, 148 (A0)
   10:  LH        A0, 436 (V0)
   14:  SB        R0, 224 (V0)
   18:  JAL       ~Func:remove_status_4
   1C:  SB        R0, 223 (V0)
   20:  LW        RA, 10 (SP)
   24:  LI        V0, 2
   28:  JR        RA
   2C:  ADDIU     SP, SP, 18
}

#new:Function $Function_802186D0
{
    0:  ADDIU     SP, SP, FFA8
    4:  SW        S1, 1C (SP)
    8:  COPY      S1, A0
    C:  SW        S2, 20 (SP)
   10:  SW        RA, 2C (SP)
   14:  SW        S4, 28 (SP)
   18:  SW        S3, 24 (SP)
   1C:  SW        S0, 18 (SP)
   20:  SDC1      F28, 50 (SP)
   24:  SDC1      F26, 48 (SP)
   28:  SDC1      F24, 40 (SP)
   2C:  SDC1      F22, 38 (SP)
   30:  SDC1      F20, 30 (SP)
   34:  LW        A0, 148 (S1)
   38:  LW        S0, C (S1)
   3C:  JAL       ~Func:get_actor
   40:  COPY      S2, A1
   44:  COPY      S3, V0
   48:  BEQ       S3, R0, .o3A0
   4C:  LI        V0, 2
   50:  BEQ       S2, R0, .o144
   54:  COPY      A0, S1
   58:  LW        A1, 0 (S0)
   5C:  ADDIU     S0, S0, 4
   60:  JAL       ~Func:get_variable
   64:  CLEAR     S2
   68:  LW        A1, 0 (S0)
   6C:  ADDIU     S0, S0, 4
   70:  MTC1      V0, F28
   74:  NOP
   78:  CVT.S.W   F28, F28
   7C:  JAL       ~Func:get_variable
   80:  COPY      A0, S1
   84:  LW        A1, 0 (S0)
   88:  ADDIU     S0, S0, 4
   8C:  MTC1      V0, F26
   90:  NOP
   94:  CVT.S.W   F26, F26
   98:  JAL       ~Func:get_variable
   9C:  COPY      A0, S1
   A0:  LW        A1, 0 (S0)
   A4:  ADDIU     S0, S0, 4
   A8:  MTC1      V0, F24
   AC:  NOP
   B0:  CVT.S.W   F24, F24
   B4:  JAL       ~Func:get_float_variable
   B8:  COPY      A0, S1
   BC:  COPY      A0, S1
   C0:  LW        A1, 0 (S0)
   C4:  JAL       ~Func:get_float_variable
   C8:  MOV.S     F20, F0
   CC:  LI        A0, B4
   D0:  JAL       ~Func:heap_malloc
   D4:  MOV.S     F22, F0
   D8:  COPY      S1, V0
   DC:  LI        A2, 28
   E0:  LI        A1, FF
   E4:  LI        A0, 1
   E8:  ADDIU     V1, S1, 38
   EC:  SW        S1, 78 (S3)
        .oF0
   F0:  SWC1      F28, FFCC (V1)
   F4:  SWC1      F26, FFD0 (V1)
   F8:  SWC1      F24, FFD4 (V1)
   FC:  SWC1      F20, FFE0 (V1)
  100:  SWC1      F20, FFD8 (V1)
  104:  SWC1      F22, FFDC (V1)
  108:  SW        A0, FFE4 (V1)
  10C:  SW        A2, FFE8 (V1)
  110:  SW        A1, FFEC (V1)
  114:  SW        A1, FFF0 (V1)
  118:  SW        R0, FFF4 (V1)
  11C:  SW        R0, FFF8 (V1)
  120:  SW        R0, FFFC (V1)
  124:  SW        R0, 0 (V1)
  128:  ADDIU     V1, V1, 3C
  12C:  ADDIU     S2, S2, 1
  130:  SLTI      V0, S2, 3
  134:  BNE       V0, R0, .oF0
  138:  ADDIU     A0, A0, A
  13C:  BEQ       R0, R0, .o3A0
  140:  CLEAR     V0
        .o144
  144:  CLEAR     S4
  148:  COPY      S2, S4
  14C:  LW        S1, 78 (S3)
  150:  LIF       F24, 0.09951172
  15C:  LIF       F22, 0.5
  164:  LIF       F20, 255.0
  16C:  ADDIU     S0, S1, 28
        .o170
  170:  LW        V0, FFF4 (S0)
  174:  BLEZ      V0, .o1E8
  178:  ADDIU     V0, V0, FFFF
  17C:  BGTZ      V0, .o374
  180:  SW        V0, FFF4 (S0)
  184:  LWC1      F0, FFF0 (S0)
  188:  LI        V0, FFFF
  18C:  SW        V0, 14 (SP)
  190:  SWC1      F0, 10 (SP)
  194:  LW        A1, FFDC (S0)
  198:  LW        A2, FFE0 (S0)
  19C:  LW        A3, FFE4 (S0)
  1A0:  JAL       ~Func:playFX_85
  1A4:  CLEAR     A0
  1A8:  SW        V0, 0 (S1)
  1AC:  LW        V0, C (V0)
  1B0:  LWC1      F0, 4 (S0)
  1B4:  SWC1      F0, 3C (V0)
  1B8:  LW        V0, 0 (S1)
  1BC:  LWC1      F0, 8 (S0)
  1C0:  LW        V0, C (V0)
  1C4:  SWC1      F0, 40 (V0)
  1C8:  LW        V0, 0 (S1)
  1CC:  LWC1      F0, C (S0)
  1D0:  LW        V0, C (V0)
  1D4:  SWC1      F0, 44 (V0)
  1D8:  LW        V0, 0 (S1)
  1DC:  LW        V0, C (V0)
  1E0:  BEQ       R0, R0, .o374
  1E4:  SH        R0, 0 (V0)
        .o1E8
  1E8:  LW        V0, 10 (S0)
  1EC:  BEQ       V0, R0, .o1FC
  1F0:  NOP
  1F4:  BEQ       R0, R0, .o374
  1F8:  ADDIU     S4, S4, 1
        .o1FC
  1FC:  LWC1      F0, FFE8 (S0)
  200:  LWC1      F8, FFEC (S0)
  204:  SUB.S     F0, F0, F8
  208:  LWC1      F2, FFF8 (S0)
  20C:  CVT.S.W   F2, F2
  210:  ABS.S     F0, F0
  214:  MUL.S     F0, F0, F2
  218:  NOP
  21C:  LWC1      F6, C (S0)
  220:  LIF       F2, 9.0
  228:  LIF       F4, 40.0
  230:  ADD.S     F6, F6, F2
  234:  LW        V1, FFF8 (S0)
  238:  DIV.S     F0, F0, F4
  23C:  ADD.S     F0, F0, F8
  240:  SLTI      V0, V1, B
  244:  SWC1      F6, C (S0)
  248:  BEQ       V0, R0, .o2BC
  24C:  SWC1      F0, FFF0 (S0)
  250:  SRL       V0, V1, 1F
  254:  ADDU      V0, V1, V0
  258:  SRA       V0, V0, 1
  25C:  MTC1      V0, F2
  260:  NOP
  264:  CVT.S.W   F2, F2
  268:  COPY      V0, V1
  26C:  MUL.S     F2, F2, F24
  270:  NOP
  274:  SRL       V1, V0, 1F
  278:  ADDU      V0, V0, V1
  27C:  SRA       V0, V0, 1
  280:  MTC1      V0, F0
  284:  NOP
  288:  CVT.S.W   F0, F0
  28C:  MUL.S     F0, F0, F24
  290:  NOP
  294:  ADD.S     F2, F2, F22
  298:  MUL.S     F2, F2, F20
  29C:  NOP
  2A0:  ADD.S     F0, F0, F22
  2A4:  MUL.S     F0, F0, F20
  2A8:  NOP
  2AC:  TRUNC.W.S F10, F2
  2B0:  SWC1      F10, FFFC (S0)
  2B4:  TRUNC.W.S F10, F0
  2B8:  SWC1      F10, 0 (S0)
        .o2BC
  2BC:  LW        V0, FFF8 (S0)
  2C0:  ADDIU     V0, V0, FFFF
  2C4:  BGTZ      V0, .o2E4
  2C8:  SW        V0, FFF8 (S0)
  2CC:  LW        A0, 0 (S1)
  2D0:  JAL       ~Func:remove_effect
  2D4:  NOP
  2D8:  LI        V0, 1
  2DC:  BEQ       R0, R0, .o374
  2E0:  SW        V0, 10 (S0)
        .o2E4
  2E4:  LW        V0, 0 (S1)
  2E8:  LWC1      F0, FFDC (S0)
  2EC:  LW        V0, C (V0)
  2F0:  SWC1      F0, 4 (V0)
  2F4:  LW        V0, 0 (S1)
  2F8:  LWC1      F0, FFE0 (S0)
  2FC:  LW        V0, C (V0)
  300:  SWC1      F0, 8 (V0)
  304:  LW        V0, 0 (S1)
  308:  LWC1      F0, FFE4 (S0)
  30C:  LW        V0, C (V0)
  310:  SWC1      F0, C (V0)
  314:  LW        V0, 0 (S1)
  318:  LWC1      F0, 4 (S0)
  31C:  LW        V0, C (V0)
  320:  SWC1      F0, 3C (V0)
  324:  LW        V0, 0 (S1)
  328:  LWC1      F0, 8 (S0)
  32C:  LW        V0, C (V0)
  330:  SWC1      F0, 40 (V0)
  334:  LW        V0, 0 (S1)
  338:  LWC1      F0, C (S0)
  33C:  LW        V0, C (V0)
  340:  SWC1      F0, 44 (V0)
  344:  LW        V0, 0 (S1)
  348:  LWC1      F0, FFF0 (S0)
  34C:  LW        V0, C (V0)
  350:  SWC1      F0, 38 (V0)
  354:  LW        V0, 0 (S1)
  358:  LW        V1, C (V0)
  35C:  LW        V0, FFFC (S0)
  360:  SW        V0, 24 (V1)
  364:  LW        V0, 0 (S1)
  368:  LW        V1, C (V0)
  36C:  LW        V0, 0 (S0)
  370:  SW        V0, 34 (V1)
        .o374
  374:  ADDIU     S0, S0, 3C
  378:  ADDIU     S2, S2, 1
  37C:  SLTI      V0, S2, 3
  380:  BNE       V0, R0, .o170
  384:  ADDIU     S1, S1, 3C
  388:  SLTI      V0, S4, 3
  38C:  BNE       V0, R0, .o3A0
  390:  CLEAR     V0
  394:  JAL       ~Func:heap_free
  398:  COPY      A0, S1
  39C:  LI        V0, 2
        .o3A0
  3A0:  LW        RA, 2C (SP)
  3A4:  LW        S4, 28 (SP)
  3A8:  LW        S3, 24 (SP)
  3AC:  LW        S2, 20 (SP)
  3B0:  LW        S1, 1C (SP)
  3B4:  LW        S0, 18 (SP)
  3B8:  LDC1      F28, 50 (SP)
  3BC:  LDC1      F26, 48 (SP)
  3C0:  LDC1      F24, 40 (SP)
  3C4:  LDC1      F22, 38 (SP)
  3C8:  LDC1      F20, 30 (SP)
  3CC:  JR        RA
  3D0:  ADDIU     SP, SP, 58
}

#new:Function $Function_80218AA4
{
    0:  ADDIU     SP, SP, FFB0
    4:  SW        S1, 1C (SP)
    8:  COPY      S1, A0
    C:  SW        S2, 20 (SP)
   10:  SW        RA, 2C (SP)
   14:  SW        S4, 28 (SP)
   18:  SW        S3, 24 (SP)
   1C:  SW        S0, 18 (SP)
   20:  SDC1      F26, 48 (SP)
   24:  SDC1      F24, 40 (SP)
   28:  SDC1      F22, 38 (SP)
   2C:  SDC1      F20, 30 (SP)
   30:  LW        A0, 148 (S1)
   34:  LW        S0, C (S1)
   38:  JAL       ~Func:get_actor
   3C:  COPY      S2, A1
   40:  COPY      S4, V0
   44:  BEQ       S4, R0, .o42C
   48:  LI        V0, 2
   4C:  BEQ       S2, R0, .o154
   50:  CLEAR     S3
   54:  LW        A1, 0 (S0)
   58:  ADDIU     S0, S0, 4
   5C:  JAL       ~Func:get_variable
   60:  COPY      A0, S1
   64:  LW        A1, 0 (S0)
   68:  ADDIU     S0, S0, 4
   6C:  MTC1      V0, F26
   70:  NOP
   74:  CVT.S.W   F26, F26
   78:  JAL       ~Func:get_variable
   7C:  COPY      A0, S1
   80:  LW        A1, 0 (S0)
   84:  ADDIU     S0, S0, 4
   88:  MTC1      V0, F24
   8C:  NOP
   90:  CVT.S.W   F24, F24
   94:  JAL       ~Func:get_variable
   98:  COPY      A0, S1
   9C:  LW        A1, 0 (S0)
   A0:  MTC1      V0, F22
   A4:  NOP
   A8:  CVT.S.W   F22, F22
   AC:  JAL       ~Func:get_float_variable
   B0:  COPY      A0, S1
   B4:  LB        V1, 210 (S4)
   B8:  LI        V0, A
   BC:  BNE       V1, V0, .oDC
   C0:  MOV.S     F20, F0
   C4:  LAD       F2, $ConstDouble_80234740
   CC:  CVT.D.S   F0, F20
   D0:  MUL.D     F0, F0, F2
   D4:  NOP
   D8:  CVT.S.D   F20, F0
        .oDC
   DC:  JAL       ~Func:heap_malloc
   E0:  LI        A0, 9C
   E4:  COPY      S1, V0
   E8:  CLEAR     S2
   EC:  LI        A2, 32
   F0:  LI        A1, FF
   F4:  LI        A0, 1
   F8:  LIF       F0, 90.0
  100:  ADDIU     V1, S1, 30
  104:  SW        S1, 78 (S4)
        .o108
  108:  SWC1      F26, FFD4 (V1)
  10C:  SWC1      F24, FFD8 (V1)
  110:  SWC1      F22, FFDC (V1)
  114:  SWC1      F20, FFE0 (V1)
  118:  SW        A0, FFE4 (V1)
  11C:  SW        A2, FFE8 (V1)
  120:  SW        A1, FFEC (V1)
  124:  SW        A1, FFF0 (V1)
  128:  SWC1      F0, FFF4 (V1)
  12C:  SW        R0, FFF8 (V1)
  130:  SW        R0, FFFC (V1)
  134:  SW        R0, 0 (V1)
  138:  ADDIU     V1, V1, 34
  13C:  ADDIU     S2, S2, 1
  140:  SLTI      V0, S2, 3
  144:  BNE       V0, R0, .o108
  148:  ADDIU     A0, A0, 10
  14C:  BEQ       R0, R0, .o42C
  150:  CLEAR     V0
        .o154
  154:  LW        S1, 78 (S4)
  158:  COPY      S2, S3
  15C:  ADDIU     S0, S1, 30
        .o160
  160:  LW        V0, FFE4 (S0)
  164:  BLEZ      V0, .o1CC
  168:  ADDIU     V0, V0, FFFF
  16C:  BGTZ      V0, .o400
  170:  SW        V0, FFE4 (S0)
  174:  LWC1      F0, FFE0 (S0)
  178:  LI        V0, FFFF
  17C:  SW        V0, 14 (SP)
  180:  SWC1      F0, 10 (SP)
  184:  LW        A1, FFD4 (S0)
  188:  LW        A2, FFD8 (S0)
  18C:  LW        A3, FFDC (S0)
  190:  JAL       ~Func:playFX_85
  194:  CLEAR     A0
  198:  SW        V0, 0 (S1)
  19C:  LW        V0, C (V0)
  1A0:  LWC1      F0, FFF4 (S0)
  1A4:  SWC1      F0, 3C (V0)
  1A8:  LW        V0, 0 (S1)
  1AC:  LWC1      F0, FFF8 (S0)
  1B0:  LW        V0, C (V0)
  1B4:  SWC1      F0, 40 (V0)
  1B8:  LW        V0, 0 (S1)
  1BC:  LWC1      F0, FFFC (S0)
  1C0:  LW        V0, C (V0)
  1C4:  BEQ       R0, R0, .o400
  1C8:  SWC1      F0, 44 (V0)
        .o1CC
  1CC:  LW        V0, 0 (S0)
  1D0:  BEQ       V0, R0, .o1E0
  1D4:  LI        V0, A
  1D8:  BEQ       R0, R0, .o400
  1DC:  ADDIU     S3, S3, 1
        .o1E0
  1E0:  LB        V1, 210 (S4)
  1E4:  BEQ       V1, V0, .o274
  1E8:  NOP
  1EC:  LWC1      F2, FFD8 (S0)
  1F0:  LIF       F1, 3.0625
  1F8:  MTC1      R0, F0
  1FC:  CVT.D.S   F2, F2
  200:  C.LT.D    F2, F0
  204:  LIF       F1, 2.125
  20C:  MTC1      R0, F0
  210:  BC1TL     .o2F0
  214:  ADD.D     F0, F2, F0
  218:  LIF       F1, 3.21875
  220:  MTC1      R0, F0
  224:  NOP
  228:  C.LT.D    F2, F0
  22C:  LAD       F0, $ConstDouble_80234748
  234:  BC1TL     .o2F0
  238:  ADD.D     F0, F2, F0
  23C:  LIF       F1, 3.3125
  244:  MTC1      R0, F0
  248:  NOP
  24C:  C.LT.D    F2, F0
  250:  LAD       F0, $ConstDouble_80234750
  258:  BC1TL     .o2F0
  25C:  ADD.D     F0, F2, F0
  260:  LIF       F1, 1.875
  268:  MTC1      R0, F0
  26C:  BEQ       R0, R0, .o2F0
  270:  ADD.D     F0, F2, F0
        .o274
  274:  LWC1      F2, FFD8 (S0)
  278:  LIF       F1, 2.75
  280:  MTC1      R0, F0
  284:  CVT.D.S   F2, F2
  288:  C.LT.D    F2, F0
  28C:  LAD       F0, $ConstDouble_80234758
  294:  BC1TL     .o2F0
  298:  ADD.D     F0, F2, F0
  29C:  LIF       F1, 2.875
  2A4:  MTC1      R0, F0
  2A8:  NOP
  2AC:  C.LT.D    F2, F0
  2B0:  LAD       F0, $ConstDouble_80234760
  2B8:  BC1TL     .o2F0
  2BC:  ADD.D     F0, F2, F0
  2C0:  LIF       F1, 3.0
  2C8:  MTC1      R0, F0
  2CC:  NOP
  2D0:  C.LT.D    F2, F0
  2D4:  LAD       F0, $ConstDouble_80234768
  2DC:  BC1FL     .o2F0
  2E0:  ADD.D     F0, F2, F0
  2E4:  LAD       F0, $ConstDouble_80234770
  2EC:  ADD.D     F0, F2, F0
        .o2F0
  2F0:  CVT.S.D   F0, F0
  2F4:  SWC1      F0, FFD8 (S0)
  2F8:  LWC1      F0, FFF8 (S0)
  2FC:  LIF       F2, 18.0
  304:  LW        V1, FFE8 (S0)
  308:  ADD.S     F0, F0, F2
  30C:  SLTI      V0, V1, 11
  310:  BEQ       V0, R0, .o34C
  314:  SWC1      F0, FFF8 (S0)
  318:  SLL       V0, V1, 8
  31C:  SUBU      V1, V0, V1
  320:  BLTZL     V1, .o328
  324:  ADDIU     V1, V1, F
        .o328
  328:  LW        V0, FFE8 (S0)
  32C:  SRA       V1, V1, 4
  330:  SW        V1, FFEC (S0)
  334:  SLL       V1, V0, 8
  338:  SUBU      V0, V1, V0
  33C:  BLTZL     V0, .o344
  340:  ADDIU     V0, V0, F
        .o344
  344:  SRA       V0, V0, 4
  348:  SW        V0, FFF0 (S0)
        .o34C
  34C:  LW        V0, 0 (S1)
  350:  LWC1      F0, FFD4 (S0)
  354:  LW        V0, C (V0)
  358:  SWC1      F0, 4 (V0)
  35C:  LW        V0, 0 (S1)
  360:  LWC1      F0, FFD8 (S0)
  364:  LW        V0, C (V0)
  368:  SWC1      F0, 8 (V0)
  36C:  LW        V0, 0 (S1)
  370:  LWC1      F0, FFDC (S0)
  374:  LW        V0, C (V0)
  378:  SWC1      F0, C (V0)
  37C:  LW        V0, 0 (S1)
  380:  LWC1      F0, FFF4 (S0)
  384:  LW        V0, C (V0)
  388:  SWC1      F0, 3C (V0)
  38C:  LW        V0, 0 (S1)
  390:  LWC1      F0, FFF8 (S0)
  394:  LW        V0, C (V0)
  398:  SWC1      F0, 40 (V0)
  39C:  LW        V0, 0 (S1)
  3A0:  LWC1      F0, FFFC (S0)
  3A4:  LW        V0, C (V0)
  3A8:  SWC1      F0, 44 (V0)
  3AC:  LW        V0, 0 (S1)
  3B0:  LWC1      F0, FFE0 (S0)
  3B4:  LW        V0, C (V0)
  3B8:  SWC1      F0, 38 (V0)
  3BC:  LW        V0, 0 (S1)
  3C0:  LW        V1, C (V0)
  3C4:  LW        V0, FFEC (S0)
  3C8:  SW        V0, 24 (V1)
  3CC:  LW        V0, 0 (S1)
  3D0:  LW        V1, C (V0)
  3D4:  LW        V0, FFF0 (S0)
  3D8:  SW        V0, 34 (V1)
  3DC:  LW        V0, FFE8 (S0)
  3E0:  ADDIU     V0, V0, FFFF
  3E4:  BGTZ      V0, .o400
  3E8:  SW        V0, FFE8 (S0)
  3EC:  LW        A0, 0 (S1)
  3F0:  JAL       ~Func:remove_effect
  3F4:  NOP
  3F8:  LI        V0, 1
  3FC:  SW        V0, 0 (S0)
        .o400
  400:  ADDIU     S0, S0, 34
  404:  ADDIU     S2, S2, 1
  408:  SLTI      V0, S2, 3
  40C:  BNE       V0, R0, .o160
  410:  ADDIU     S1, S1, 34
  414:  SLTI      V0, S3, 3
  418:  BNE       V0, R0, .o42C
  41C:  CLEAR     V0
  420:  JAL       ~Func:heap_free
  424:  COPY      A0, S1
  428:  LI        V0, 2
        .o42C
  42C:  LW        RA, 2C (SP)
  430:  LW        S4, 28 (SP)
  434:  LW        S3, 24 (SP)
  438:  LW        S2, 20 (SP)
  43C:  LW        S1, 1C (SP)
  440:  LW        S0, 18 (SP)
  444:  LDC1      F26, 48 (SP)
  448:  LDC1      F24, 40 (SP)
  44C:  LDC1      F22, 38 (SP)
  450:  LDC1      F20, 30 (SP)
  454:  JR        RA
  458:  ADDIU     SP, SP, 50
}

#new:Function $Function_80218F00
{
    0:  ADDIU     SP, SP, FFE0
    4:  SW        S1, 14 (SP)
    8:  COPY      S1, A0
    C:  SW        RA, 18 (SP)
   10:  SW        S0, 10 (SP)
   14:  LW        S0, C (S1)
   18:  LW        A1, 0 (S0)
   1C:  JAL       ~Func:get_variable
   20:  ADDIU     S0, S0, 4
   24:  COPY      A0, S1
   28:  LW        A1, 0 (S0)
   2C:  JAL       ~Func:get_variable
   30:  COPY      S0, V0
   34:  COPY      A0, S0
   38:  JAL       ~Func:start_rumble
   3C:  COPY      A1, V0
   40:  LW        RA, 18 (SP)
   44:  LW        S1, 14 (SP)
   48:  LW        S0, 10 (SP)
   4C:  LI        V0, 2
   50:  JR        RA
   54:  ADDIU     SP, SP, 20
}

#new:Function $Function_80218F58
{
    0:  ADDIU     SP, SP, FF58
    4:  SW        S3, 74 (SP)
    8:  COPY      S3, A0
    C:  SW        RA, 88 (SP)
   10:  SW        S7, 84 (SP)
   14:  SW        S6, 80 (SP)
   18:  SW        S5, 7C (SP)
   1C:  SW        S4, 78 (SP)
   20:  SW        S2, 70 (SP)
   24:  SW        S1, 6C (SP)
   28:  SW        S0, 68 (SP)
   2C:  SDC1      F24, A0 (SP)
   30:  SDC1      F22, 98 (SP)
   34:  SDC1      F20, 90 (SP)
   38:  LW        A0, 148 (S3)
   3C:  JAL       ~Func:get_actor
   40:  COPY      S0, A1
   44:  BNE       V0, R0, .o54
   48:  COPY      A0, V0
   4C:  BEQ       R0, R0, .o36C
   50:  LI        V0, 2
        .o54
   54:  JAL       ~Func:get_actor_part
   58:  LI        A1, 1
   5C:  BEQ       S0, R0, .oAC
   60:  COPY      S5, V0
   64:  CLEAR     S0
   68:  LI        S1, FF
   6C:  SW        R0, 74 (S3)
   70:  SW        R0, 78 (S3)
   74:  SW        R0, 70 (S3)
   78:  COPY      A1, S0
        .o7C
   7C:  LI        A2, 11
   80:  LI        A3, 14
   84:  SW        R0, 10 (SP)
   88:  SW        R0, 14 (SP)
   8C:  SW        S1, 18 (SP)
   90:  SW        R0, 1C (SP)
   94:  LW        A0, 84 (S5)
   98:  JAL       802DE780
   9C:  ADDIU     S0, S0, 1
   A0:  SLTI      V0, S0, A
   A4:  BNE       V0, R0, .o7C
   A8:  COPY      A1, S0
        .oAC
   AC:  LW        V0, 74 (S3)
   B0:  ADDIU     A0, V0, A
   B4:  SLTI      V0, A0, 168
   B8:  BNE       V0, R0, .oFC
   BC:  SW        A0, 74 (S3)
   C0:  LI        V0, B60B60B7
   C8:  MULT      A0, V0
   CC:  SRA       V1, A0, 1F
   D0:  MFHI      T0
   D4:  ADDU      V0, T0, A0
   D8:  SRA       V0, V0, 8
   DC:  SUBU      V0, V0, V1
   E0:  SLL       V1, V0, 1
   E4:  ADDU      V1, V1, V0
   E8:  SLL       V0, V1, 4
   EC:  SUBU      V0, V0, V1
   F0:  SLL       V0, V0, 3
   F4:  SUBU      V0, A0, V0
   F8:  SW        V0, 74 (S3)
        .oFC
   FC:  CLEAR     S1
  100:  LUI       S2, 8000
  104:  COPY      S0, S1
  108:  LIF       F25, 1.875
  110:  MTC1      R0, F24
  114:  LIF       F23, 3.1875
  11C:  MTC1      R0, F22
  120:  LIF       F21, 28.0
  128:  MTC1      R0, F20
        .o12C
  12C:  LHU       A0, 76 (S3)
  130:  ADDU      A0, A0, S0
  134:  ADDIU     A0, A0, 78
  138:  SLL       A0, A0, 10
  13C:  JAL       ~Func:cosine
  140:  SRA       A0, A0, 10
  144:  CVT.D.S   F0, F0
  148:  ADD.D     F0, F0, F24
  14C:  MUL.D     F0, F0, F22
  150:  NOP
  154:  ADDIU     V0, SP, 20
  158:  C.LE.D    F20, F0
  15C:  NOP
  160:  BC1T      .o178
  164:  ADDU      V0, V0, S1
  168:  TRUNC.W.D F2, F0
  16C:  MFC1      V1, F2
  170:  BEQ       R0, R0, .o190
  174:  SB        V1, 0 (V0)
        .o178
  178:  SUB.D     F0, F0, F20
  17C:  TRUNC.W.D F2, F0
  180:  MFC1      V1, F2
  184:  NOP
  188:  OR        V1, V1, S2
  18C:  SB        V1, 0 (V0)
        .o190
  190:  LHU       A0, 76 (S3)
  194:  ADDU      A0, A0, S0
  198:  ADDIU     A0, A0, 3C
  19C:  SLL       A0, A0, 10
  1A0:  JAL       ~Func:cosine
  1A4:  SRA       A0, A0, 10
  1A8:  CVT.D.S   F0, F0
  1AC:  ADD.D     F0, F0, F24
  1B0:  MUL.D     F0, F0, F22
  1B4:  NOP
  1B8:  ADDIU     V0, SP, 38
  1BC:  C.LE.D    F20, F0
  1C0:  NOP
  1C4:  BC1T      .o1DC
  1C8:  ADDU      V0, V0, S1
  1CC:  TRUNC.W.D F2, F0
  1D0:  MFC1      V1, F2
  1D4:  BEQ       R0, R0, .o1F4
  1D8:  SB        V1, 0 (V0)
        .o1DC
  1DC:  SUB.D     F0, F0, F20
  1E0:  TRUNC.W.D F2, F0
  1E4:  MFC1      V1, F2
  1E8:  NOP
  1EC:  OR        V1, V1, S2
  1F0:  SB        V1, 0 (V0)
        .o1F4
  1F4:  LHU       A0, 76 (S3)
  1F8:  ADDU      A0, A0, S0
  1FC:  ADDIU     A0, A0, B4
  200:  SLL       A0, A0, 10
  204:  JAL       ~Func:cosine
  208:  SRA       A0, A0, 10
  20C:  CVT.D.S   F0, F0
  210:  ADD.D     F0, F0, F24
  214:  MUL.D     F0, F0, F22
  218:  NOP
  21C:  ADDIU     V0, SP, 50
  220:  C.LE.D    F20, F0
  224:  NOP
  228:  BC1T      .o240
  22C:  ADDU      V0, V0, S1
  230:  TRUNC.W.D F2, F0
  234:  MFC1      V1, F2
  238:  BEQ       R0, R0, .o258
  23C:  SB        V1, 0 (V0)
        .o240
  240:  SUB.D     F0, F0, F20
  244:  TRUNC.W.D F2, F0
  248:  MFC1      V1, F2
  24C:  NOP
  250:  OR        V1, V1, S2
  254:  SB        V1, 0 (V0)
        .o258
  258:  ADDIU     S1, S1, 1
  25C:  SLTI      V0, S1, 14
  260:  BNE       V0, R0, .o12C
  264:  ADDIU     S0, S0, 19
  268:  LW        V0, 7C (S5)
  26C:  LUI       V1, 4
  270:  AND       V0, V0, V1
  274:  BEQ       V0, R0, .o30C
  278:  CLEAR     S1
  27C:  ADDIU     S7, SP, 20
  280:  ADDIU     S6, SP, 38
  284:  ADDIU     S4, SP, 50
  288:  LI        S3, FF
  28C:  CLEAR     S0
        .o290
  290:  ADDU      V0, S7, S1
  294:  ADDU      A0, S6, S1
  298:  LBU       V1, 0 (V0)
  29C:  ADDU      V0, S4, S1
  2A0:  LBU       A0, 0 (A0)
  2A4:  LBU       V0, 0 (V0)
  2A8:  SLL       V1, V1, 18
  2AC:  SLL       A0, A0, 10
  2B0:  OR        V1, V1, A0
  2B4:  SLL       V0, V0, 8
  2B8:  OR        V1, V1, V0
  2BC:  ORI       S2, V1, FF
  2C0:  COPY      A1, S0
        .o2C4
  2C4:  LI        A2, C
  2C8:  COPY      A3, S1
  2CC:  SW        S2, 10 (SP)
  2D0:  SW        R0, 14 (SP)
  2D4:  SW        S3, 18 (SP)
  2D8:  SW        R0, 1C (SP)
  2DC:  LW        A0, 84 (S5)
  2E0:  JAL       802DE780
  2E4:  ADDIU     S0, S0, 1
  2E8:  SLTI      V0, S0, A
  2EC:  BNE       V0, R0, .o2C4
  2F0:  COPY      A1, S0
  2F4:  ADDIU     S1, S1, 1
  2F8:  SLTI      V0, S1, 14
  2FC:  BNE       V0, R0, .o290
  300:  CLEAR     S0
  304:  BEQ       R0, R0, .o36C
  308:  CLEAR     V0
        .o30C
  30C:  LI        S2, FF
  310:  COPY      S4, S2
  314:  CLEAR     S0
        .o318
  318:  COPY      A1, S0
        .o31C
  31C:  LI        A2, C
  320:  COPY      A3, S1
  324:  SW        S2, 10 (SP)
  328:  SW        R0, 14 (SP)
  32C:  SW        S4, 18 (SP)
  330:  SW        R0, 1C (SP)
  334:  LW        A0, 84 (S5)
  338:  JAL       802DE780
  33C:  ADDIU     S0, S0, 1
  340:  SLTI      V0, S0, A
  344:  BNE       V0, R0, .o31C
  348:  COPY      A1, S0
  34C:  ADDIU     S1, S1, 1
  350:  SLTI      V0, S1, 14
  354:  BNE       V0, R0, .o318
  358:  CLEAR     S0
  35C:  CLEAR     V0
  360:  SW        R0, 74 (S3)
  364:  SW        R0, 78 (S3)
  368:  SW        R0, 70 (S3)
        .o36C
  36C:  LW        RA, 88 (SP)
  370:  LW        S7, 84 (SP)
  374:  LW        S6, 80 (SP)
  378:  LW        S5, 7C (SP)
  37C:  LW        S4, 78 (SP)
  380:  LW        S3, 74 (SP)
  384:  LW        S2, 70 (SP)
  388:  LW        S1, 6C (SP)
  38C:  LW        S0, 68 (SP)
  390:  LDC1      F24, A0 (SP)
  394:  LDC1      F22, 98 (SP)
  398:  LDC1      F20, 90 (SP)
  39C:  JR        RA
  3A0:  ADDIU     SP, SP, A8
}

#new:Function $Function_802192FC
{
    0:  ADDIU     SP, SP, FFE8
    4:  SW        S0, 10 (SP)
    8:  COPY      S0, A0
    C:  BEQ       A1, R0, .o48
   10:  SW        RA, 14 (SP)
   14:  JAL       ~Func:mdl_set_all_fog_mode
   18:  LI        A0, 1
   1C:  CLEAR     A0
   20:  COPY      A1, A0
   24:  COPY      A2, A0
   28:  COPY      A3, A0
   2C:  LAW       V0, 801512F0
   34:  LI        V1, 1
   38:  JAL       ~Func:set_background_color_blend
   3C:  SB        V1, 0 (V0)
   40:  LI        V0, 14
   44:  SW        V0, 70 (S0)
        .o48
   48:  CLEAR     A0
   4C:  COPY      A1, A0
   50:  COPY      A2, A0
   54:  LW        V1, 70 (S0)
   58:  LI        V0, 14
   5C:  SUBU      V0, V0, V1
   60:  SLL       A3, V0, 2
   64:  ADDU      A3, A3, V0
   68:  SLL       A3, A3, 1
   6C:  JAL       ~Func:set_background_color_blend
   70:  ANDI      A3, A3, FE
   74:  LW        V0, 70 (S0)
   78:  ADDIU     V0, V0, FFFF
   7C:  SW        V0, 70 (S0)
   80:  SLTIU     V0, V0, 1
   84:  LW        RA, 14 (SP)
   88:  LW        S0, 10 (SP)
   8C:  SLL       V0, V0, 1
   90:  JR        RA
   94:  ADDIU     SP, SP, 18
}

#new:Function $Function_80219394
{
    0:  ADDIU     SP, SP, FFE8
    4:  SW        S0, 10 (SP)
    8:  COPY      S0, A0
    C:  BEQ       A1, R0, .o1C
   10:  SW        RA, 14 (SP)
   14:  LI        V0, 14
   18:  SW        V0, 70 (S0)
        .o1C
   1C:  CLEAR     A0
   20:  COPY      A1, A0
   24:  LW        V0, 70 (S0)
   28:  COPY      A2, A0
   2C:  SLL       A3, V0, 2
   30:  ADDU      A3, A3, V0
   34:  SLL       A3, A3, 1
   38:  JAL       ~Func:set_background_color_blend
   3C:  ANDI      A3, A3, FE
   40:  LW        V0, 70 (S0)
   44:  ADDIU     V0, V0, FFFF
   48:  BEQ       V0, R0, .o58
   4C:  SW        V0, 70 (S0)
   50:  BEQ       R0, R0, .o70
   54:  CLEAR     V0
        .o58
   58:  CLEAR     A0
   5C:  COPY      A1, A0
   60:  COPY      A2, A0
   64:  JAL       ~Func:set_background_color_blend
   68:  COPY      A3, A0
   6C:  LI        V0, 2
        .o70
   70:  LW        RA, 14 (SP)
   74:  LW        S0, 10 (SP)
   78:  JR        RA
   7C:  ADDIU     SP, SP, 18
}

#new:Function $Function_80219414
{
    0:  ADDIU     SP, SP, FFE8
    4:  SW        RA, 10 (SP)
    8:  JAL       ~Func:get_actor
    C:  LW        A0, 148 (A0)
   10:  LH        A0, 436 (V0)
   14:  SB        R0, 224 (V0)
   18:  JAL       ~Func:remove_status_4
   1C:  SB        R0, 223 (V0)
   20:  LW        RA, 10 (SP)
   24:  LI        V0, 2
   28:  JR        RA
   2C:  ADDIU     SP, SP, 18
}

#new:Function $Function_80219444
{
    0:  ADDIU     SP, SP, FFA8
    4:  SW        S1, 1C (SP)
    8:  COPY      S1, A0
    C:  SW        S2, 20 (SP)
   10:  SW        RA, 2C (SP)
   14:  SW        S4, 28 (SP)
   18:  SW        S3, 24 (SP)
   1C:  SW        S0, 18 (SP)
   20:  SDC1      F28, 50 (SP)
   24:  SDC1      F26, 48 (SP)
   28:  SDC1      F24, 40 (SP)
   2C:  SDC1      F22, 38 (SP)
   30:  SDC1      F20, 30 (SP)
   34:  LW        A0, 148 (S1)
   38:  LW        S0, C (S1)
   3C:  JAL       ~Func:get_actor
   40:  COPY      S2, A1
   44:  COPY      S3, V0
   48:  BEQ       S3, R0, .o3A0
   4C:  LI        V0, 2
   50:  BEQ       S2, R0, .o144
   54:  COPY      A0, S1
   58:  LW        A1, 0 (S0)
   5C:  ADDIU     S0, S0, 4
   60:  JAL       ~Func:get_variable
   64:  CLEAR     S2
   68:  LW        A1, 0 (S0)
   6C:  ADDIU     S0, S0, 4
   70:  MTC1      V0, F28
   74:  NOP
   78:  CVT.S.W   F28, F28
   7C:  JAL       ~Func:get_variable
   80:  COPY      A0, S1
   84:  LW        A1, 0 (S0)
   88:  ADDIU     S0, S0, 4
   8C:  MTC1      V0, F26
   90:  NOP
   94:  CVT.S.W   F26, F26
   98:  JAL       ~Func:get_variable
   9C:  COPY      A0, S1
   A0:  LW        A1, 0 (S0)
   A4:  ADDIU     S0, S0, 4
   A8:  MTC1      V0, F24
   AC:  NOP
   B0:  CVT.S.W   F24, F24
   B4:  JAL       ~Func:get_float_variable
   B8:  COPY      A0, S1
   BC:  COPY      A0, S1
   C0:  LW        A1, 0 (S0)
   C4:  JAL       ~Func:get_float_variable
   C8:  MOV.S     F20, F0
   CC:  LI        A0, B4
   D0:  JAL       ~Func:heap_malloc
   D4:  MOV.S     F22, F0
   D8:  COPY      S1, V0
   DC:  LI        A2, 28
   E0:  LI        A1, FF
   E4:  LI        A0, 1
   E8:  ADDIU     V1, S1, 38
   EC:  SW        S1, 78 (S3)
        .oF0
   F0:  SWC1      F28, FFCC (V1)
   F4:  SWC1      F26, FFD0 (V1)
   F8:  SWC1      F24, FFD4 (V1)
   FC:  SWC1      F20, FFE0 (V1)
  100:  SWC1      F20, FFD8 (V1)
  104:  SWC1      F22, FFDC (V1)
  108:  SW        A0, FFE4 (V1)
  10C:  SW        A2, FFE8 (V1)
  110:  SW        A1, FFEC (V1)
  114:  SW        A1, FFF0 (V1)
  118:  SW        R0, FFF4 (V1)
  11C:  SW        R0, FFF8 (V1)
  120:  SW        R0, FFFC (V1)
  124:  SW        R0, 0 (V1)
  128:  ADDIU     V1, V1, 3C
  12C:  ADDIU     S2, S2, 1
  130:  SLTI      V0, S2, 3
  134:  BNE       V0, R0, .oF0
  138:  ADDIU     A0, A0, A
  13C:  BEQ       R0, R0, .o3A0
  140:  CLEAR     V0
        .o144
  144:  CLEAR     S4
  148:  COPY      S2, S4
  14C:  LW        S1, 78 (S3)
  150:  LIF       F24, 0.09951172
  15C:  LIF       F22, 0.5
  164:  LIF       F20, 255.0
  16C:  ADDIU     S0, S1, 28
        .o170
  170:  LW        V0, FFF4 (S0)
  174:  BLEZ      V0, .o1E8
  178:  ADDIU     V0, V0, FFFF
  17C:  BGTZ      V0, .o374
  180:  SW        V0, FFF4 (S0)
  184:  LWC1      F0, FFF0 (S0)
  188:  LI        V0, FFFF
  18C:  SW        V0, 14 (SP)
  190:  SWC1      F0, 10 (SP)
  194:  LW        A1, FFDC (S0)
  198:  LW        A2, FFE0 (S0)
  19C:  LW        A3, FFE4 (S0)
  1A0:  JAL       ~Func:playFX_85
  1A4:  CLEAR     A0
  1A8:  SW        V0, 0 (S1)
  1AC:  LW        V0, C (V0)
  1B0:  LWC1      F0, 4 (S0)
  1B4:  SWC1      F0, 3C (V0)
  1B8:  LW        V0, 0 (S1)
  1BC:  LWC1      F0, 8 (S0)
  1C0:  LW        V0, C (V0)
  1C4:  SWC1      F0, 40 (V0)
  1C8:  LW        V0, 0 (S1)
  1CC:  LWC1      F0, C (S0)
  1D0:  LW        V0, C (V0)
  1D4:  SWC1      F0, 44 (V0)
  1D8:  LW        V0, 0 (S1)
  1DC:  LW        V0, C (V0)
  1E0:  BEQ       R0, R0, .o374
  1E4:  SH        R0, 0 (V0)
        .o1E8
  1E8:  LW        V0, 10 (S0)
  1EC:  BEQ       V0, R0, .o1FC
  1F0:  NOP
  1F4:  BEQ       R0, R0, .o374
  1F8:  ADDIU     S4, S4, 1
        .o1FC
  1FC:  LWC1      F0, FFE8 (S0)
  200:  LWC1      F8, FFEC (S0)
  204:  SUB.S     F0, F0, F8
  208:  LWC1      F2, FFF8 (S0)
  20C:  CVT.S.W   F2, F2
  210:  ABS.S     F0, F0
  214:  MUL.S     F0, F0, F2
  218:  NOP
  21C:  LWC1      F6, C (S0)
  220:  LIF       F2, 9.0
  228:  LIF       F4, 40.0
  230:  ADD.S     F6, F6, F2
  234:  LW        V1, FFF8 (S0)
  238:  DIV.S     F0, F0, F4
  23C:  ADD.S     F0, F0, F8
  240:  SLTI      V0, V1, B
  244:  SWC1      F6, C (S0)
  248:  BEQ       V0, R0, .o2BC
  24C:  SWC1      F0, FFF0 (S0)
  250:  SRL       V0, V1, 1F
  254:  ADDU      V0, V1, V0
  258:  SRA       V0, V0, 1
  25C:  MTC1      V0, F2
  260:  NOP
  264:  CVT.S.W   F2, F2
  268:  COPY      V0, V1
  26C:  MUL.S     F2, F2, F24
  270:  NOP
  274:  SRL       V1, V0, 1F
  278:  ADDU      V0, V0, V1
  27C:  SRA       V0, V0, 1
  280:  MTC1      V0, F0
  284:  NOP
  288:  CVT.S.W   F0, F0
  28C:  MUL.S     F0, F0, F24
  290:  NOP
  294:  ADD.S     F2, F2, F22
  298:  MUL.S     F2, F2, F20
  29C:  NOP
  2A0:  ADD.S     F0, F0, F22
  2A4:  MUL.S     F0, F0, F20
  2A8:  NOP
  2AC:  TRUNC.W.S F10, F2
  2B0:  SWC1      F10, FFFC (S0)
  2B4:  TRUNC.W.S F10, F0
  2B8:  SWC1      F10, 0 (S0)
        .o2BC
  2BC:  LW        V0, FFF8 (S0)
  2C0:  ADDIU     V0, V0, FFFF
  2C4:  BGTZ      V0, .o2E4
  2C8:  SW        V0, FFF8 (S0)
  2CC:  LW        A0, 0 (S1)
  2D0:  JAL       ~Func:remove_effect
  2D4:  NOP
  2D8:  LI        V0, 1
  2DC:  BEQ       R0, R0, .o374
  2E0:  SW        V0, 10 (S0)
        .o2E4
  2E4:  LW        V0, 0 (S1)
  2E8:  LWC1      F0, FFDC (S0)
  2EC:  LW        V0, C (V0)
  2F0:  SWC1      F0, 4 (V0)
  2F4:  LW        V0, 0 (S1)
  2F8:  LWC1      F0, FFE0 (S0)
  2FC:  LW        V0, C (V0)
  300:  SWC1      F0, 8 (V0)
  304:  LW        V0, 0 (S1)
  308:  LWC1      F0, FFE4 (S0)
  30C:  LW        V0, C (V0)
  310:  SWC1      F0, C (V0)
  314:  LW        V0, 0 (S1)
  318:  LWC1      F0, 4 (S0)
  31C:  LW        V0, C (V0)
  320:  SWC1      F0, 3C (V0)
  324:  LW        V0, 0 (S1)
  328:  LWC1      F0, 8 (S0)
  32C:  LW        V0, C (V0)
  330:  SWC1      F0, 40 (V0)
  334:  LW        V0, 0 (S1)
  338:  LWC1      F0, C (S0)
  33C:  LW        V0, C (V0)
  340:  SWC1      F0, 44 (V0)
  344:  LW        V0, 0 (S1)
  348:  LWC1      F0, FFF0 (S0)
  34C:  LW        V0, C (V0)
  350:  SWC1      F0, 38 (V0)
  354:  LW        V0, 0 (S1)
  358:  LW        V1, C (V0)
  35C:  LW        V0, FFFC (S0)
  360:  SW        V0, 24 (V1)
  364:  LW        V0, 0 (S1)
  368:  LW        V1, C (V0)
  36C:  LW        V0, 0 (S0)
  370:  SW        V0, 34 (V1)
        .o374
  374:  ADDIU     S0, S0, 3C
  378:  ADDIU     S2, S2, 1
  37C:  SLTI      V0, S2, 3
  380:  BNE       V0, R0, .o170
  384:  ADDIU     S1, S1, 3C
  388:  SLTI      V0, S4, 3
  38C:  BNE       V0, R0, .o3A0
  390:  CLEAR     V0
  394:  JAL       ~Func:heap_free
  398:  COPY      A0, S1
  39C:  LI        V0, 2
        .o3A0
  3A0:  LW        RA, 2C (SP)
  3A4:  LW        S4, 28 (SP)
  3A8:  LW        S3, 24 (SP)
  3AC:  LW        S2, 20 (SP)
  3B0:  LW        S1, 1C (SP)
  3B4:  LW        S0, 18 (SP)
  3B8:  LDC1      F28, 50 (SP)
  3BC:  LDC1      F26, 48 (SP)
  3C0:  LDC1      F24, 40 (SP)
  3C4:  LDC1      F22, 38 (SP)
  3C8:  LDC1      F20, 30 (SP)
  3CC:  JR        RA
  3D0:  ADDIU     SP, SP, 58
}

#new:Function $Function_80219818
{
    0:  ADDIU     SP, SP, FFB0
    4:  SW        S1, 1C (SP)
    8:  COPY      S1, A0
    C:  SW        S2, 20 (SP)
   10:  SW        RA, 2C (SP)
   14:  SW        S4, 28 (SP)
   18:  SW        S3, 24 (SP)
   1C:  SW        S0, 18 (SP)
   20:  SDC1      F26, 48 (SP)
   24:  SDC1      F24, 40 (SP)
   28:  SDC1      F22, 38 (SP)
   2C:  SDC1      F20, 30 (SP)
   30:  LW        A0, 148 (S1)
   34:  LW        S0, C (S1)
   38:  JAL       ~Func:get_actor
   3C:  COPY      S2, A1
   40:  COPY      S4, V0
   44:  BEQ       S4, R0, .o42C
   48:  LI        V0, 2
   4C:  BEQ       S2, R0, .o154
   50:  CLEAR     S3
   54:  LW        A1, 0 (S0)
   58:  ADDIU     S0, S0, 4
   5C:  JAL       ~Func:get_variable
   60:  COPY      A0, S1
   64:  LW        A1, 0 (S0)
   68:  ADDIU     S0, S0, 4
   6C:  MTC1      V0, F26
   70:  NOP
   74:  CVT.S.W   F26, F26
   78:  JAL       ~Func:get_variable
   7C:  COPY      A0, S1
   80:  LW        A1, 0 (S0)
   84:  ADDIU     S0, S0, 4
   88:  MTC1      V0, F24
   8C:  NOP
   90:  CVT.S.W   F24, F24
   94:  JAL       ~Func:get_variable
   98:  COPY      A0, S1
   9C:  LW        A1, 0 (S0)
   A0:  MTC1      V0, F22
   A4:  NOP
   A8:  CVT.S.W   F22, F22
   AC:  JAL       ~Func:get_float_variable
   B0:  COPY      A0, S1
   B4:  LB        V1, 210 (S4)
   B8:  LI        V0, A
   BC:  BNE       V1, V0, .oDC
   C0:  MOV.S     F20, F0
   C4:  LAD       F2, $ConstDouble_80234780
   CC:  CVT.D.S   F0, F20
   D0:  MUL.D     F0, F0, F2
   D4:  NOP
   D8:  CVT.S.D   F20, F0
        .oDC
   DC:  JAL       ~Func:heap_malloc
   E0:  LI        A0, 9C
   E4:  COPY      S1, V0
   E8:  CLEAR     S2
   EC:  LI        A2, 32
   F0:  LI        A1, FF
   F4:  LI        A0, 1
   F8:  LIF       F0, 90.0
  100:  ADDIU     V1, S1, 30
  104:  SW        S1, 78 (S4)
        .o108
  108:  SWC1      F26, FFD4 (V1)
  10C:  SWC1      F24, FFD8 (V1)
  110:  SWC1      F22, FFDC (V1)
  114:  SWC1      F20, FFE0 (V1)
  118:  SW        A0, FFE4 (V1)
  11C:  SW        A2, FFE8 (V1)
  120:  SW        A1, FFEC (V1)
  124:  SW        A1, FFF0 (V1)
  128:  SWC1      F0, FFF4 (V1)
  12C:  SW        R0, FFF8 (V1)
  130:  SW        R0, FFFC (V1)
  134:  SW        R0, 0 (V1)
  138:  ADDIU     V1, V1, 34
  13C:  ADDIU     S2, S2, 1
  140:  SLTI      V0, S2, 3
  144:  BNE       V0, R0, .o108
  148:  ADDIU     A0, A0, 10
  14C:  BEQ       R0, R0, .o42C
  150:  CLEAR     V0
        .o154
  154:  LW        S1, 78 (S4)
  158:  COPY      S2, S3
  15C:  ADDIU     S0, S1, 30
        .o160
  160:  LW        V0, FFE4 (S0)
  164:  BLEZ      V0, .o1CC
  168:  ADDIU     V0, V0, FFFF
  16C:  BGTZ      V0, .o400
  170:  SW        V0, FFE4 (S0)
  174:  LWC1      F0, FFE0 (S0)
  178:  LI        V0, FFFF
  17C:  SW        V0, 14 (SP)
  180:  SWC1      F0, 10 (SP)
  184:  LW        A1, FFD4 (S0)
  188:  LW        A2, FFD8 (S0)
  18C:  LW        A3, FFDC (S0)
  190:  JAL       ~Func:playFX_85
  194:  CLEAR     A0
  198:  SW        V0, 0 (S1)
  19C:  LW        V0, C (V0)
  1A0:  LWC1      F0, FFF4 (S0)
  1A4:  SWC1      F0, 3C (V0)
  1A8:  LW        V0, 0 (S1)
  1AC:  LWC1      F0, FFF8 (S0)
  1B0:  LW        V0, C (V0)
  1B4:  SWC1      F0, 40 (V0)
  1B8:  LW        V0, 0 (S1)
  1BC:  LWC1      F0, FFFC (S0)
  1C0:  LW        V0, C (V0)
  1C4:  BEQ       R0, R0, .o400
  1C8:  SWC1      F0, 44 (V0)
        .o1CC
  1CC:  LW        V0, 0 (S0)
  1D0:  BEQ       V0, R0, .o1E0
  1D4:  LI        V0, A
  1D8:  BEQ       R0, R0, .o400
  1DC:  ADDIU     S3, S3, 1
        .o1E0
  1E0:  LB        V1, 210 (S4)
  1E4:  BEQ       V1, V0, .o274
  1E8:  NOP
  1EC:  LWC1      F2, FFD8 (S0)
  1F0:  LIF       F1, 3.0625
  1F8:  MTC1      R0, F0
  1FC:  CVT.D.S   F2, F2
  200:  C.LT.D    F2, F0
  204:  LIF       F1, 2.125
  20C:  MTC1      R0, F0
  210:  BC1TL     .o2F0
  214:  ADD.D     F0, F2, F0
  218:  LIF       F1, 3.21875
  220:  MTC1      R0, F0
  224:  NOP
  228:  C.LT.D    F2, F0
  22C:  LAD       F0, $ConstDouble_80234788
  234:  BC1TL     .o2F0
  238:  ADD.D     F0, F2, F0
  23C:  LIF       F1, 3.3125
  244:  MTC1      R0, F0
  248:  NOP
  24C:  C.LT.D    F2, F0
  250:  LAD       F0, $ConstDouble_80234790
  258:  BC1TL     .o2F0
  25C:  ADD.D     F0, F2, F0
  260:  LIF       F1, 1.875
  268:  MTC1      R0, F0
  26C:  BEQ       R0, R0, .o2F0
  270:  ADD.D     F0, F2, F0
        .o274
  274:  LWC1      F2, FFD8 (S0)
  278:  LIF       F1, 2.75
  280:  MTC1      R0, F0
  284:  CVT.D.S   F2, F2
  288:  C.LT.D    F2, F0
  28C:  LAD       F0, $ConstDouble_80234798
  294:  BC1TL     .o2F0
  298:  ADD.D     F0, F2, F0
  29C:  LIF       F1, 2.875
  2A4:  MTC1      R0, F0
  2A8:  NOP
  2AC:  C.LT.D    F2, F0
  2B0:  LAD       F0, $ConstDouble_802347A0
  2B8:  BC1TL     .o2F0
  2BC:  ADD.D     F0, F2, F0
  2C0:  LIF       F1, 3.0
  2C8:  MTC1      R0, F0
  2CC:  NOP
  2D0:  C.LT.D    F2, F0
  2D4:  LAD       F0, $ConstDouble_802347A8
  2DC:  BC1FL     .o2F0
  2E0:  ADD.D     F0, F2, F0
  2E4:  LAD       F0, $ConstDouble_802347B0
  2EC:  ADD.D     F0, F2, F0
        .o2F0
  2F0:  CVT.S.D   F0, F0
  2F4:  SWC1      F0, FFD8 (S0)
  2F8:  LWC1      F0, FFF8 (S0)
  2FC:  LIF       F2, 18.0
  304:  LW        V1, FFE8 (S0)
  308:  ADD.S     F0, F0, F2
  30C:  SLTI      V0, V1, 11
  310:  BEQ       V0, R0, .o34C
  314:  SWC1      F0, FFF8 (S0)
  318:  SLL       V0, V1, 8
  31C:  SUBU      V1, V0, V1
  320:  BLTZL     V1, .o328
  324:  ADDIU     V1, V1, F
        .o328
  328:  LW        V0, FFE8 (S0)
  32C:  SRA       V1, V1, 4
  330:  SW        V1, FFEC (S0)
  334:  SLL       V1, V0, 8
  338:  SUBU      V0, V1, V0
  33C:  BLTZL     V0, .o344
  340:  ADDIU     V0, V0, F
        .o344
  344:  SRA       V0, V0, 4
  348:  SW        V0, FFF0 (S0)
        .o34C
  34C:  LW        V0, 0 (S1)
  350:  LWC1      F0, FFD4 (S0)
  354:  LW        V0, C (V0)
  358:  SWC1      F0, 4 (V0)
  35C:  LW        V0, 0 (S1)
  360:  LWC1      F0, FFD8 (S0)
  364:  LW        V0, C (V0)
  368:  SWC1      F0, 8 (V0)
  36C:  LW        V0, 0 (S1)
  370:  LWC1      F0, FFDC (S0)
  374:  LW        V0, C (V0)
  378:  SWC1      F0, C (V0)
  37C:  LW        V0, 0 (S1)
  380:  LWC1      F0, FFF4 (S0)
  384:  LW        V0, C (V0)
  388:  SWC1      F0, 3C (V0)
  38C:  LW        V0, 0 (S1)
  390:  LWC1      F0, FFF8 (S0)
  394:  LW        V0, C (V0)
  398:  SWC1      F0, 40 (V0)
  39C:  LW        V0, 0 (S1)
  3A0:  LWC1      F0, FFFC (S0)
  3A4:  LW        V0, C (V0)
  3A8:  SWC1      F0, 44 (V0)
  3AC:  LW        V0, 0 (S1)
  3B0:  LWC1      F0, FFE0 (S0)
  3B4:  LW        V0, C (V0)
  3B8:  SWC1      F0, 38 (V0)
  3BC:  LW        V0, 0 (S1)
  3C0:  LW        V1, C (V0)
  3C4:  LW        V0, FFEC (S0)
  3C8:  SW        V0, 24 (V1)
  3CC:  LW        V0, 0 (S1)
  3D0:  LW        V1, C (V0)
  3D4:  LW        V0, FFF0 (S0)
  3D8:  SW        V0, 34 (V1)
  3DC:  LW        V0, FFE8 (S0)
  3E0:  ADDIU     V0, V0, FFFF
  3E4:  BGTZ      V0, .o400
  3E8:  SW        V0, FFE8 (S0)
  3EC:  LW        A0, 0 (S1)
  3F0:  JAL       ~Func:remove_effect
  3F4:  NOP
  3F8:  LI        V0, 1
  3FC:  SW        V0, 0 (S0)
        .o400
  400:  ADDIU     S0, S0, 34
  404:  ADDIU     S2, S2, 1
  408:  SLTI      V0, S2, 3
  40C:  BNE       V0, R0, .o160
  410:  ADDIU     S1, S1, 34
  414:  SLTI      V0, S3, 3
  418:  BNE       V0, R0, .o42C
  41C:  CLEAR     V0
  420:  JAL       ~Func:heap_free
  424:  COPY      A0, S1
  428:  LI        V0, 2
        .o42C
  42C:  LW        RA, 2C (SP)
  430:  LW        S4, 28 (SP)
  434:  LW        S3, 24 (SP)
  438:  LW        S2, 20 (SP)
  43C:  LW        S1, 1C (SP)
  440:  LW        S0, 18 (SP)
  444:  LDC1      F26, 48 (SP)
  448:  LDC1      F24, 40 (SP)
  44C:  LDC1      F22, 38 (SP)
  450:  LDC1      F20, 30 (SP)
  454:  JR        RA
  458:  ADDIU     SP, SP, 50
}

#new:Function $Function_80219C74
{
    0:  ADDIU     SP, SP, FFE0
    4:  SW        S1, 14 (SP)
    8:  COPY      S1, A0
    C:  SW        S2, 18 (SP)
   10:  LA        S2, 800DC070
   18:  SW        RA, 1C (SP)
   1C:  SW        S0, 10 (SP)
   20:  LW        S0, C (S1)
   24:  LB        A2, 97 (S2)
   28:  LW        A1, 0 (S0)
   2C:  JAL       ~Func:set_variable
   30:  ADDIU     S0, S0, 4
   34:  LW        A1, 0 (S0)
   38:  LB        A2, 96 (S2)
   3C:  JAL       ~Func:set_variable
   40:  COPY      A0, S1
   44:  LW        RA, 1C (SP)
   48:  LW        S2, 18 (SP)
   4C:  LW        S1, 14 (SP)
   50:  LW        S0, 10 (SP)
   54:  LI        V0, 2
   58:  JR        RA
   5C:  ADDIU     SP, SP, 20
}

#new:Function $Function_80219CD4
{
    0:  ADDIU     SP, SP, FFE8
    4:  LA        V1, 8010F290
    C:  SW        RA, 10 (SP)
   10:  LB        V0, 2 (V1)
   14:  SLL       A2, V0, 1
   18:  ADDU      A2, A2, V0
   1C:  SLL       A2, A2, 3
   20:  ADDU      A2, A2, V0
   24:  LB        V0, 3 (V1)
   28:  SLL       A2, A2, 2
   2C:  BNE       V0, R0, .o38
   30:  DIV       A2, V0
   34:  BREAK     1C00
        .o38
   38:  LI        AT, FFFF
   3C:  BNE       V0, AT, .o50
   40:  LUI       AT, 8000
   44:  BNE       A2, AT, .o50
   48:  NOP
   4C:  BREAK     1800
        .o50
   50:  MFLO      A2
   54:  LW        V0, C (A0)
   58:  JAL       ~Func:set_variable
   5C:  LW        A1, 0 (V0)
   60:  LW        RA, 10 (SP)
   64:  LI        V0, 2
   68:  JR        RA
   6C:  ADDIU     SP, SP, 18
}

#new:Function $Function_80219D44
{
    0:  ADDIU     SP, SP, FFD8
    4:  SW        S2, 18 (SP)
    8:  COPY      S2, A0
    C:  SW        RA, 1C (SP)
   10:  SW        S1, 14 (SP)
   14:  SW        S0, 10 (SP)
   18:  SDC1      F20, 20 (SP)
   1C:  BEQ       A1, R0, .o130
   20:  LW        S0, C (S2)
   24:  JAL       ~Func:heap_malloc
   28:  LI        A0, 24
   2C:  COPY      S1, V0
   30:  SW        S1, 70 (S2)
   34:  LW        A1, 0 (S0)
   38:  ADDIU     S0, S0, 4
   3C:  JAL       ~Func:get_variable
   40:  COPY      A0, S2
   44:  SW        V0, 20 (S1)
   48:  LW        A1, 0 (S0)
   4C:  ADDIU     S0, S0, 4
   50:  JAL       ~Func:get_float_variable
   54:  COPY      A0, S2
   58:  SWC1      F0, 0 (S1)
   5C:  LW        A1, 0 (S0)
   60:  ADDIU     S0, S0, 4
   64:  JAL       ~Func:get_float_variable
   68:  COPY      A0, S2
   6C:  SWC1      F0, 4 (S1)
   70:  LW        A1, 0 (S0)
   74:  ADDIU     S0, S0, 4
   78:  JAL       ~Func:get_float_variable
   7C:  COPY      A0, S2
   80:  SWC1      F0, 8 (S1)
   84:  LW        A1, 0 (S0)
   88:  ADDIU     S0, S0, 4
   8C:  JAL       ~Func:get_variable
   90:  COPY      A0, S2
   94:  SW        V0, 1C (S1)
   98:  LW        A1, 0 (S0)
   9C:  JAL       ~Func:get_float_variable
   A0:  COPY      A0, S2
   A4:  LW        A0, 20 (S1)
   A8:  JAL       ~Func:get_item_entity
   AC:  SWC1      F0, 10 (S1)
   B0:  COPY      S0, V0
   B4:  LWC1      F12, 8 (S0)
   B8:  LWC1      F14, 10 (S0)
   BC:  LW        A2, 0 (S1)
   C0:  JAL       ~Func:dist2D
   C4:  LW        A3, 8 (S1)
   C8:  LWC1      F12, 8 (S0)
   CC:  LWC1      F14, 10 (S0)
   D0:  LW        A2, 0 (S1)
   D4:  LW        A3, 8 (S1)
   D8:  JAL       ~Func:atan2
   DC:  MOV.S     F20, F0
   E0:  LWC1      F4, 10 (S1)
   E4:  LWC1      F6, 1C (S1)
   E8:  CVT.S.W   F6, F6
   EC:  MUL.S     F4, F4, F6
   F0:  NOP
   F4:  LIF       F2, 0.5
   FC:  NOP
  100:  MUL.S     F4, F4, F2
  104:  NOP
  108:  SWC1      F0, C (S1)
  10C:  LWC1      F0, 4 (S1)
  110:  LWC1      F2, C (S0)
  114:  SUB.S     F0, F0, F2
  118:  MOV.S     F2, F6
  11C:  DIV.S     F0, F0, F6
  120:  ADD.S     F4, F4, F0
  124:  DIV.S     F20, F20, F2
  128:  SWC1      F20, 14 (S1)
  12C:  SWC1      F4, 18 (S1)
        .o130
  130:  LW        S1, 70 (S2)
  134:  JAL       ~Func:get_item_entity
  138:  LW        A0, 20 (S1)
  13C:  COPY      S0, V0
  140:  BNE       S0, R0, .o158
  144:  NOP
  148:  JAL       ~Func:heap_free
  14C:  LW        A0, 70 (S2)
  150:  BEQ       R0, R0, .o1FC
  154:  LI        V0, 2
        .o158
  158:  LWC1      F12, C (S1)
  15C:  JAL       ~Func:sin_deg
  160:  NOP
  164:  LWC1      F2, 14 (S1)
  168:  MUL.S     F2, F2, F0
  16C:  NOP
  170:  LWC1      F0, 8 (S0)
  174:  ADD.S     F0, F0, F2
  178:  SWC1      F0, 8 (S0)
  17C:  JAL       ~Func:cos_deg
  180:  LWC1      F12, C (S1)
  184:  LWC1      F2, 14 (S1)
  188:  MUL.S     F2, F2, F0
  18C:  NOP
  190:  LWC1      F0, 10 (S0)
  194:  SUB.S     F0, F0, F2
  198:  SWC1      F0, 10 (S0)
  19C:  LWC1      F0, C (S0)
  1A0:  LWC1      F2, 18 (S1)
  1A4:  ADD.S     F0, F0, F2
  1A8:  SWC1      F0, C (S0)
  1AC:  LWC1      F0, 18 (S1)
  1B0:  LWC1      F2, 10 (S1)
  1B4:  LW        V0, 1C (S1)
  1B8:  SUB.S     F0, F0, F2
  1BC:  ADDIU     V0, V0, FFFF
  1C0:  SW        V0, 1C (S1)
  1C4:  BLTZ      V0, .o1D4
  1C8:  SWC1      F0, 18 (S1)
  1CC:  BEQ       R0, R0, .o1FC
  1D0:  CLEAR     V0
        .o1D4
  1D4:  LWC1      F0, 0 (S1)
  1D8:  SWC1      F0, 8 (S0)
  1DC:  LWC1      F0, 4 (S1)
  1E0:  SWC1      F0, C (S0)
  1E4:  LWC1      F0, 8 (S1)
  1E8:  SWC1      F0, 10 (S0)
  1EC:  SW        R0, 18 (S1)
  1F0:  JAL       ~Func:heap_free
  1F4:  LW        A0, 70 (S2)
  1F8:  LI        V0, 1
        .o1FC
  1FC:  LW        RA, 1C (SP)
  200:  LW        S2, 18 (SP)
  204:  LW        S1, 14 (SP)
  208:  LW        S0, 10 (SP)
  20C:  LDC1      F20, 20 (SP)
  210:  JR        RA
  214:  ADDIU     SP, SP, 28
}

#new:Function $Function_80219F5C
{
    0:  ADDIU     SP, SP, FFE0
    4:  SW        S2, 18 (SP)
    8:  COPY      S2, A0
    C:  SW        RA, 1C (SP)
   10:  SW        S1, 14 (SP)
   14:  SW        S0, 10 (SP)
   18:  LW        S0, C (S2)
   1C:  LW        A1, 0 (S0)
   20:  JAL       ~Func:get_variable
   24:  ADDIU     S0, S0, 4
   28:  JAL       ~Func:get_item_entity
   2C:  COPY      A0, V0
   30:  LW        A1, 0 (S0)
   34:  ADDIU     S0, S0, 4
   38:  COPY      S1, V0
   3C:  LWC1      F0, 8 (S1)
   40:  TRUNC.W.S F2, F0
   44:  MFC1      A2, F2
   48:  JAL       ~Func:set_variable
   4C:  COPY      A0, S2
   50:  LW        A1, 0 (S0)
   54:  ADDIU     S0, S0, 4
   58:  LWC1      F0, C (S1)
   5C:  TRUNC.W.S F2, F0
   60:  MFC1      A2, F2
   64:  JAL       ~Func:set_variable
   68:  COPY      A0, S2
   6C:  LWC1      F0, 10 (S1)
   70:  LW        A1, 0 (S0)
   74:  TRUNC.W.S F2, F0
   78:  MFC1      A2, F2
   7C:  JAL       ~Func:set_variable
   80:  COPY      A0, S2
   84:  LW        RA, 1C (SP)
   88:  LW        S2, 18 (SP)
   8C:  LW        S1, 14 (SP)
   90:  LW        S0, 10 (SP)
   94:  LI        V0, 2
   98:  JR        RA
   9C:  ADDIU     SP, SP, 20
}

#new:Function $Function_80219FFC
{
    0:  ADDIU     SP, SP, FFC0
    4:  SW        S3, 2C (SP)
    8:  COPY      S3, A0
    C:  SW        S0, 20 (SP)
   10:  CLEAR     S0
   14:  SW        S2, 28 (SP)
   18:  LA        S2, 800DC070
   20:  SW        S4, 30 (SP)
   24:  LA        S4, 8010F290
   2C:  SW        S5, 34 (SP)
   30:  LI        A0, FFFF
   34:  SW        RA, 38 (SP)
   38:  SW        S1, 24 (SP)
   3C:  LB        V0, AE (S2)
   40:  LW        S1, C (S3)
   44:  BNE       V0, A0, .o54
   48:  COPY      S5, S4
   4C:  SW        R0, 10 (SP)
   50:  LI        S0, 1
        .o54
   54:  LB        V0, AF (S2)
   58:  BNE       V0, A0, .o70
   5C:  SLL       V0, S0, 2
   60:  ADDU      V1, SP, V0
   64:  LI        V0, 1
   68:  SW        V0, 10 (V1)
   6C:  ADDU      S0, S0, V0
        .o70
   70:  LB        V0, B0 (S2)
   74:  BNE       V0, A0, .o8C
   78:  SLL       V0, S0, 2
   7C:  ADDU      V1, SP, V0
   80:  LI        V0, 2
   84:  SW        V0, 10 (V1)
   88:  ADDIU     S0, S0, 1
        .o8C
   8C:  JAL       ~Func:rand_int
   90:  LI        A0, 2
   94:  ADDIU     A0, S0, FFFF
   98:  JAL       ~Func:rand_int
   9C:  ADDIU     S0, V0, 2
   A0:  SLL       V0, V0, 2
   A4:  ADDU      V0, SP, V0
   A8:  LW        V1, 10 (V0)
   AC:  LI        V0, 1
   B0:  BEQ       V1, V0, .o124
   B4:  SLTI      V0, V1, 2
   B8:  BEQ       V0, R0, .oD0
   BC:  LI        V0, 2
   C0:  BEQL      V1, R0, .oE0
   C4:  SB        S0, AE (S2)
   C8:  BEQ       R0, R0, .o194
   CC:  NOP
        .oD0
   D0:  BEQL      V1, V0, .o16C
   D4:  SB        S0, B0 (S2)
   D8:  BEQ       R0, R0, .o194
   DC:  NOP
        .oE0
   E0:  LW        A1, 0 (S1)
   E4:  LB        V0, 1 (S4)
   E8:  ADDIU     S1, S1, 4
   EC:  SLL       V0, V0, 2
   F0:  LTW       A2, V0 ($IntTable_8022466C)
   FC:  JAL       ~Func:set_variable
  100:  COPY      A0, S3
  104:  LB        V0, 1 (S4)
  108:  LW        A1, 0 (S1)
  10C:  SLL       V0, V0, 2
  110:  LTW       A2, V0 ($IntTable_80224678)
  11C:  BEQ       R0, R0, .o18C
  120:  COPY      A0, S3
        .o124
  124:  SB        S0, AF (S2)
  128:  LW        A1, 0 (S1)
  12C:  LB        V0, 0 (S5)
  130:  ADDIU     S1, S1, 4
  134:  SLL       V0, V0, 2
  138:  LTW       A2, V0 ($IntTable_80224684)
  144:  JAL       ~Func:set_variable
  148:  COPY      A0, S3
  14C:  LB        V0, 0 (S5)
  150:  LW        A1, 0 (S1)
  154:  SLL       V0, V0, 2
  158:  LTW       A2, V0 ($IntTable_80224690)
  164:  BEQ       R0, R0, .o18C
  168:  COPY      A0, S3
        .o16C
  16C:  LW        A1, 0 (S1)
  170:  ADDIU     S1, S1, 4
  174:  COPY      A0, S3
  178:  JAL       ~Func:set_variable
  17C:  LI        A2, 16C
  180:  COPY      A0, S3
  184:  LW        A1, 0 (S1)
  188:  LI        A2, 4F
        .o18C
  18C:  JAL       ~Func:set_variable
  190:  NOP
        .o194
  194:  LW        RA, 38 (SP)
  198:  LW        S5, 34 (SP)
  19C:  LW        S4, 30 (SP)
  1A0:  LW        S3, 2C (SP)
  1A4:  LW        S2, 28 (SP)
  1A8:  LW        S1, 24 (SP)
  1AC:  LW        S0, 20 (SP)
  1B0:  LI        V0, 2
  1B4:  JR        RA
  1B8:  ADDIU     SP, SP, 40
}

#new:Function $Function_8021A1B8
{
    0:  ADDIU     SP, SP, FFE0
    4:  SW        S2, 18 (SP)
    8:  COPY      S2, A0
    C:  SW        RA, 1C (SP)
   10:  SW        S1, 14 (SP)
   14:  SW        S0, 10 (SP)
   18:  LW        A0, 148 (S2)
   1C:  JAL       ~Func:get_actor
   20:  LW        S0, C (S2)
   24:  LA        S1, 800DC070
   2C:  LB        V1, 210 (V0)
   30:  LI        V0, A
   34:  BEQ       V1, V0, .o6C
   38:  LI        V1, FFFF
   3C:  LB        V0, AE (S1)
   40:  BEQ       V0, V1, .o60
   44:  COPY      A0, S2
   48:  LB        V0, AF (S1)
   4C:  BEQ       V0, V1, .o60
   50:  NOP
   54:  LB        V0, B0 (S1)
   58:  BNE       V0, V1, .o70
   5C:  NOP
        .o60
   60:  LW        A1, 0 (S0)
   64:  BEQ       R0, R0, .o78
   68:  CLEAR     A2
        .o6C
   6C:  COPY      A0, S2
        .o70
   70:  LW        A1, 0 (S0)
   74:  LI        A2, FFFF
        .o78
   78:  JAL       ~Func:set_variable
   7C:  NOP
   80:  LI        V0, 2
   84:  LW        RA, 1C (SP)
   88:  LW        S2, 18 (SP)
   8C:  LW        S1, 14 (SP)
   90:  LW        S0, 10 (SP)
   94:  JR        RA
   98:  ADDIU     SP, SP, 20
}

#new:Function $Function_8021A254
{
    0:  ADDIU     SP, SP, FFE8
    4:  SW        RA, 10 (SP)
    8:  LW        V0, C (A0)
    C:  JAL       ~Func:get_variable
   10:  LW        A1, 0 (V0)
   14:  LW        V1, C (V0)
   18:  LIF       F0, 0.03975586
   24:  NOP
   28:  SWC1      F0, 38 (V1)
   2C:  SWC1      F0, 30 (V1)
   30:  LW        V1, C (V0)
   34:  LIF       F0, 1.875
   3C:  NOP
   40:  SWC1      F0, 34 (V1)
   44:  LW        V1, C (V0)
   48:  LIF       F0, 0.04975586
   54:  NOP
   58:  SWC1      F0, 3C (V1)
   5C:  LW        RA, 10 (SP)
   60:  LI        V0, 2
   64:  JR        RA
   68:  ADDIU     SP, SP, 18
}

#new:Function $Function_8021A2C0
{
    0:  ADDIU     SP, SP, FFE0
    4:  SW        S1, 14 (SP)
    8:  COPY      S1, A0
    C:  SW        RA, 18 (SP)
   10:  SW        S0, 10 (SP)
   14:  LW        S0, C (S1)
   18:  LW        A1, 0 (S0)
   1C:  JAL       ~Func:get_variable
   20:  ADDIU     S0, S0, 4
   24:  COPY      A0, S1
   28:  LW        A1, 0 (S0)
   2C:  JAL       ~Func:get_variable
   30:  COPY      S0, V0
   34:  COPY      A0, S0
   38:  JAL       ~Func:start_rumble
   3C:  COPY      A1, V0
   40:  LW        RA, 18 (SP)
   44:  LW        S1, 14 (SP)
   48:  LW        S0, 10 (SP)
   4C:  LI        V0, 2
   50:  JR        RA
   54:  ADDIU     SP, SP, 20
}

#new:Function $Function_8021A318
{
    0:  ADDIU     SP, SP, FF58
    4:  SW        S3, 74 (SP)
    8:  COPY      S3, A0
    C:  SW        RA, 88 (SP)
   10:  SW        S7, 84 (SP)
   14:  SW        S6, 80 (SP)
   18:  SW        S5, 7C (SP)
   1C:  SW        S4, 78 (SP)
   20:  SW        S2, 70 (SP)
   24:  SW        S1, 6C (SP)
   28:  SW        S0, 68 (SP)
   2C:  SDC1      F24, A0 (SP)
   30:  SDC1      F22, 98 (SP)
   34:  SDC1      F20, 90 (SP)
   38:  LW        A0, 148 (S3)
   3C:  JAL       ~Func:get_actor
   40:  COPY      S0, A1
   44:  BNE       V0, R0, .o54
   48:  COPY      A0, V0
   4C:  BEQ       R0, R0, .o36C
   50:  LI        V0, 2
        .o54
   54:  JAL       ~Func:get_actor_part
   58:  LI        A1, 1
   5C:  BEQ       S0, R0, .oAC
   60:  COPY      S5, V0
   64:  CLEAR     S0
   68:  LI        S1, FF
   6C:  SW        R0, 74 (S3)
   70:  SW        R0, 78 (S3)
   74:  SW        R0, 70 (S3)
   78:  COPY      A1, S0
        .o7C
   7C:  LI        A2, 11
   80:  LI        A3, 14
   84:  SW        R0, 10 (SP)
   88:  SW        R0, 14 (SP)
   8C:  SW        S1, 18 (SP)
   90:  SW        R0, 1C (SP)
   94:  LW        A0, 84 (S5)
   98:  JAL       802DE780
   9C:  ADDIU     S0, S0, 1
   A0:  SLTI      V0, S0, A
   A4:  BNE       V0, R0, .o7C
   A8:  COPY      A1, S0
        .oAC
   AC:  LW        V0, 74 (S3)
   B0:  ADDIU     A0, V0, A
   B4:  SLTI      V0, A0, 168
   B8:  BNE       V0, R0, .oFC
   BC:  SW        A0, 74 (S3)
   C0:  LI        V0, B60B60B7
   C8:  MULT      A0, V0
   CC:  SRA       V1, A0, 1F
   D0:  MFHI      T0
   D4:  ADDU      V0, T0, A0
   D8:  SRA       V0, V0, 8
   DC:  SUBU      V0, V0, V1
   E0:  SLL       V1, V0, 1
   E4:  ADDU      V1, V1, V0
   E8:  SLL       V0, V1, 4
   EC:  SUBU      V0, V0, V1
   F0:  SLL       V0, V0, 3
   F4:  SUBU      V0, A0, V0
   F8:  SW        V0, 74 (S3)
        .oFC
   FC:  CLEAR     S1
  100:  LUI       S2, 8000
  104:  COPY      S0, S1
  108:  LIF       F25, 1.875
  110:  MTC1      R0, F24
  114:  LIF       F23, 3.1875
  11C:  MTC1      R0, F22
  120:  LIF       F21, 28.0
  128:  MTC1      R0, F20
        .o12C
  12C:  LHU       A0, 76 (S3)
  130:  ADDU      A0, A0, S0
  134:  ADDIU     A0, A0, 78
  138:  SLL       A0, A0, 10
  13C:  JAL       ~Func:cosine
  140:  SRA       A0, A0, 10
  144:  CVT.D.S   F0, F0
  148:  ADD.D     F0, F0, F24
  14C:  MUL.D     F0, F0, F22
  150:  NOP
  154:  ADDIU     V0, SP, 20
  158:  C.LE.D    F20, F0
  15C:  NOP
  160:  BC1T      .o178
  164:  ADDU      V0, V0, S1
  168:  TRUNC.W.D F2, F0
  16C:  MFC1      V1, F2
  170:  BEQ       R0, R0, .o190
  174:  SB        V1, 0 (V0)
        .o178
  178:  SUB.D     F0, F0, F20
  17C:  TRUNC.W.D F2, F0
  180:  MFC1      V1, F2
  184:  NOP
  188:  OR        V1, V1, S2
  18C:  SB        V1, 0 (V0)
        .o190
  190:  LHU       A0, 76 (S3)
  194:  ADDU      A0, A0, S0
  198:  ADDIU     A0, A0, 3C
  19C:  SLL       A0, A0, 10
  1A0:  JAL       ~Func:cosine
  1A4:  SRA       A0, A0, 10
  1A8:  CVT.D.S   F0, F0
  1AC:  ADD.D     F0, F0, F24
  1B0:  MUL.D     F0, F0, F22
  1B4:  NOP
  1B8:  ADDIU     V0, SP, 38
  1BC:  C.LE.D    F20, F0
  1C0:  NOP
  1C4:  BC1T      .o1DC
  1C8:  ADDU      V0, V0, S1
  1CC:  TRUNC.W.D F2, F0
  1D0:  MFC1      V1, F2
  1D4:  BEQ       R0, R0, .o1F4
  1D8:  SB        V1, 0 (V0)
        .o1DC
  1DC:  SUB.D     F0, F0, F20
  1E0:  TRUNC.W.D F2, F0
  1E4:  MFC1      V1, F2
  1E8:  NOP
  1EC:  OR        V1, V1, S2
  1F0:  SB        V1, 0 (V0)
        .o1F4
  1F4:  LHU       A0, 76 (S3)
  1F8:  ADDU      A0, A0, S0
  1FC:  ADDIU     A0, A0, B4
  200:  SLL       A0, A0, 10
  204:  JAL       ~Func:cosine
  208:  SRA       A0, A0, 10
  20C:  CVT.D.S   F0, F0
  210:  ADD.D     F0, F0, F24
  214:  MUL.D     F0, F0, F22
  218:  NOP
  21C:  ADDIU     V0, SP, 50
  220:  C.LE.D    F20, F0
  224:  NOP
  228:  BC1T      .o240
  22C:  ADDU      V0, V0, S1
  230:  TRUNC.W.D F2, F0
  234:  MFC1      V1, F2
  238:  BEQ       R0, R0, .o258
  23C:  SB        V1, 0 (V0)
        .o240
  240:  SUB.D     F0, F0, F20
  244:  TRUNC.W.D F2, F0
  248:  MFC1      V1, F2
  24C:  NOP
  250:  OR        V1, V1, S2
  254:  SB        V1, 0 (V0)
        .o258
  258:  ADDIU     S1, S1, 1
  25C:  SLTI      V0, S1, 14
  260:  BNE       V0, R0, .o12C
  264:  ADDIU     S0, S0, 19
  268:  LW        V0, 7C (S5)
  26C:  LUI       V1, 8
  270:  AND       V0, V0, V1
  274:  BEQ       V0, R0, .o30C
  278:  CLEAR     S1
  27C:  ADDIU     S7, SP, 20
  280:  ADDIU     S6, SP, 38
  284:  ADDIU     S4, SP, 50
  288:  LI        S3, FF
  28C:  CLEAR     S0
        .o290
  290:  ADDU      V0, S7, S1
  294:  ADDU      A0, S6, S1
  298:  LBU       V1, 0 (V0)
  29C:  ADDU      V0, S4, S1
  2A0:  LBU       A0, 0 (A0)
  2A4:  LBU       V0, 0 (V0)
  2A8:  SLL       V1, V1, 18
  2AC:  SLL       A0, A0, 10
  2B0:  OR        V1, V1, A0
  2B4:  SLL       V0, V0, 8
  2B8:  OR        V1, V1, V0
  2BC:  ORI       S2, V1, FF
  2C0:  COPY      A1, S0
        .o2C4
  2C4:  LI        A2, C
  2C8:  COPY      A3, S1
  2CC:  SW        S2, 10 (SP)
  2D0:  SW        R0, 14 (SP)
  2D4:  SW        S3, 18 (SP)
  2D8:  SW        R0, 1C (SP)
  2DC:  LW        A0, 84 (S5)
  2E0:  JAL       802DE780
  2E4:  ADDIU     S0, S0, 1
  2E8:  SLTI      V0, S0, A
  2EC:  BNE       V0, R0, .o2C4
  2F0:  COPY      A1, S0
  2F4:  ADDIU     S1, S1, 1
  2F8:  SLTI      V0, S1, 14
  2FC:  BNE       V0, R0, .o290
  300:  CLEAR     S0
  304:  BEQ       R0, R0, .o36C
  308:  CLEAR     V0
        .o30C
  30C:  LI        S2, FF
  310:  COPY      S4, S2
  314:  CLEAR     S0
        .o318
  318:  COPY      A1, S0
        .o31C
  31C:  LI        A2, C
  320:  COPY      A3, S1
  324:  SW        S2, 10 (SP)
  328:  SW        R0, 14 (SP)
  32C:  SW        S4, 18 (SP)
  330:  SW        R0, 1C (SP)
  334:  LW        A0, 84 (S5)
  338:  JAL       802DE780
  33C:  ADDIU     S0, S0, 1
  340:  SLTI      V0, S0, A
  344:  BNE       V0, R0, .o31C
  348:  COPY      A1, S0
  34C:  ADDIU     S1, S1, 1
  350:  SLTI      V0, S1, 14
  354:  BNE       V0, R0, .o318
  358:  CLEAR     S0
  35C:  CLEAR     V0
  360:  SW        R0, 74 (S3)
  364:  SW        R0, 78 (S3)
  368:  SW        R0, 70 (S3)
        .o36C
  36C:  LW        RA, 88 (SP)
  370:  LW        S7, 84 (SP)
  374:  LW        S6, 80 (SP)
  378:  LW        S5, 7C (SP)
  37C:  LW        S4, 78 (SP)
  380:  LW        S3, 74 (SP)
  384:  LW        S2, 70 (SP)
  388:  LW        S1, 6C (SP)
  38C:  LW        S0, 68 (SP)
  390:  LDC1      F24, A0 (SP)
  394:  LDC1      F22, 98 (SP)
  398:  LDC1      F20, 90 (SP)
  39C:  JR        RA
  3A0:  ADDIU     SP, SP, A8
}

#new:Function $Function_8021A6BC
{
    0:  ADDIU     SP, SP, FFE8
    4:  SW        S0, 10 (SP)
    8:  COPY      S0, A0
    C:  BEQ       A1, R0, .o48
   10:  SW        RA, 14 (SP)
   14:  JAL       ~Func:mdl_set_all_fog_mode
   18:  LI        A0, 1
   1C:  CLEAR     A0
   20:  COPY      A1, A0
   24:  COPY      A2, A0
   28:  COPY      A3, A0
   2C:  LAW       V0, 801512F0
   34:  LI        V1, 1
   38:  JAL       ~Func:set_background_color_blend
   3C:  SB        V1, 0 (V0)
   40:  LI        V0, 14
   44:  SW        V0, 70 (S0)
        .o48
   48:  CLEAR     A0
   4C:  COPY      A1, A0
   50:  COPY      A2, A0
   54:  LW        V1, 70 (S0)
   58:  LI        V0, 14
   5C:  SUBU      V0, V0, V1
   60:  SLL       A3, V0, 2
   64:  ADDU      A3, A3, V0
   68:  SLL       A3, A3, 1
   6C:  JAL       ~Func:set_background_color_blend
   70:  ANDI      A3, A3, FE
   74:  LW        V0, 70 (S0)
   78:  ADDIU     V0, V0, FFFF
   7C:  SW        V0, 70 (S0)
   80:  SLTIU     V0, V0, 1
   84:  LW        RA, 14 (SP)
   88:  LW        S0, 10 (SP)
   8C:  SLL       V0, V0, 1
   90:  JR        RA
   94:  ADDIU     SP, SP, 18
}

#new:Function $Function_8021A754
{
    0:  ADDIU     SP, SP, FFE8
    4:  SW        S0, 10 (SP)
    8:  COPY      S0, A0
    C:  BEQ       A1, R0, .o1C
   10:  SW        RA, 14 (SP)
   14:  LI        V0, 14
   18:  SW        V0, 70 (S0)
        .o1C
   1C:  CLEAR     A0
   20:  COPY      A1, A0
   24:  LW        V0, 70 (S0)
   28:  COPY      A2, A0
   2C:  SLL       A3, V0, 2
   30:  ADDU      A3, A3, V0
   34:  SLL       A3, A3, 1
   38:  JAL       ~Func:set_background_color_blend
   3C:  ANDI      A3, A3, FE
   40:  LW        V0, 70 (S0)
   44:  ADDIU     V0, V0, FFFF
   48:  BEQ       V0, R0, .o58
   4C:  SW        V0, 70 (S0)
   50:  BEQ       R0, R0, .o70
   54:  CLEAR     V0
        .o58
   58:  CLEAR     A0
   5C:  COPY      A1, A0
   60:  COPY      A2, A0
   64:  JAL       ~Func:set_background_color_blend
   68:  COPY      A3, A0
   6C:  LI        V0, 2
        .o70
   70:  LW        RA, 14 (SP)
   74:  LW        S0, 10 (SP)
   78:  JR        RA
   7C:  ADDIU     SP, SP, 18
}

#new:Function $Function_8021A7D4
{
    0:  ADDIU     SP, SP, FFE8
    4:  SW        RA, 10 (SP)
    8:  JAL       ~Func:get_actor
    C:  LW        A0, 148 (A0)
   10:  LH        A0, 436 (V0)
   14:  SB        R0, 224 (V0)
   18:  JAL       ~Func:remove_status_4
   1C:  SB        R0, 223 (V0)
   20:  LW        RA, 10 (SP)
   24:  LI        V0, 2
   28:  JR        RA
   2C:  ADDIU     SP, SP, 18
}

#new:Function $Function_8021A804
{
    0:  ADDIU     SP, SP, FFA8
    4:  SW        S1, 1C (SP)
    8:  COPY      S1, A0
    C:  SW        S2, 20 (SP)
   10:  SW        RA, 2C (SP)
   14:  SW        S4, 28 (SP)
   18:  SW        S3, 24 (SP)
   1C:  SW        S0, 18 (SP)
   20:  SDC1      F28, 50 (SP)
   24:  SDC1      F26, 48 (SP)
   28:  SDC1      F24, 40 (SP)
   2C:  SDC1      F22, 38 (SP)
   30:  SDC1      F20, 30 (SP)
   34:  LW        A0, 148 (S1)
   38:  LW        S0, C (S1)
   3C:  JAL       ~Func:get_actor
   40:  COPY      S2, A1
   44:  COPY      S3, V0
   48:  BEQ       S3, R0, .o3A0
   4C:  LI        V0, 2
   50:  BEQ       S2, R0, .o144
   54:  COPY      A0, S1
   58:  LW        A1, 0 (S0)
   5C:  ADDIU     S0, S0, 4
   60:  JAL       ~Func:get_variable
   64:  CLEAR     S2
   68:  LW        A1, 0 (S0)
   6C:  ADDIU     S0, S0, 4
   70:  MTC1      V0, F28
   74:  NOP
   78:  CVT.S.W   F28, F28
   7C:  JAL       ~Func:get_variable
   80:  COPY      A0, S1
   84:  LW        A1, 0 (S0)
   88:  ADDIU     S0, S0, 4
   8C:  MTC1      V0, F26
   90:  NOP
   94:  CVT.S.W   F26, F26
   98:  JAL       ~Func:get_variable
   9C:  COPY      A0, S1
   A0:  LW        A1, 0 (S0)
   A4:  ADDIU     S0, S0, 4
   A8:  MTC1      V0, F24
   AC:  NOP
   B0:  CVT.S.W   F24, F24
   B4:  JAL       ~Func:get_float_variable
   B8:  COPY      A0, S1
   BC:  COPY      A0, S1
   C0:  LW        A1, 0 (S0)
   C4:  JAL       ~Func:get_float_variable
   C8:  MOV.S     F20, F0
   CC:  LI        A0, B4
   D0:  JAL       ~Func:heap_malloc
   D4:  MOV.S     F22, F0
   D8:  COPY      S1, V0
   DC:  LI        A2, 28
   E0:  LI        A1, FF
   E4:  LI        A0, 1
   E8:  ADDIU     V1, S1, 38
   EC:  SW        S1, 78 (S3)
        .oF0
   F0:  SWC1      F28, FFCC (V1)
   F4:  SWC1      F26, FFD0 (V1)
   F8:  SWC1      F24, FFD4 (V1)
   FC:  SWC1      F20, FFE0 (V1)
  100:  SWC1      F20, FFD8 (V1)
  104:  SWC1      F22, FFDC (V1)
  108:  SW        A0, FFE4 (V1)
  10C:  SW        A2, FFE8 (V1)
  110:  SW        A1, FFEC (V1)
  114:  SW        A1, FFF0 (V1)
  118:  SW        R0, FFF4 (V1)
  11C:  SW        R0, FFF8 (V1)
  120:  SW        R0, FFFC (V1)
  124:  SW        R0, 0 (V1)
  128:  ADDIU     V1, V1, 3C
  12C:  ADDIU     S2, S2, 1
  130:  SLTI      V0, S2, 3
  134:  BNE       V0, R0, .oF0
  138:  ADDIU     A0, A0, A
  13C:  BEQ       R0, R0, .o3A0
  140:  CLEAR     V0
        .o144
  144:  CLEAR     S4
  148:  COPY      S2, S4
  14C:  LW        S1, 78 (S3)
  150:  LIF       F24, 0.09951172
  15C:  LIF       F22, 0.5
  164:  LIF       F20, 255.0
  16C:  ADDIU     S0, S1, 28
        .o170
  170:  LW        V0, FFF4 (S0)
  174:  BLEZ      V0, .o1E8
  178:  ADDIU     V0, V0, FFFF
  17C:  BGTZ      V0, .o374
  180:  SW        V0, FFF4 (S0)
  184:  LWC1      F0, FFF0 (S0)
  188:  LI        V0, FFFF
  18C:  SW        V0, 14 (SP)
  190:  SWC1      F0, 10 (SP)
  194:  LW        A1, FFDC (S0)
  198:  LW        A2, FFE0 (S0)
  19C:  LW        A3, FFE4 (S0)
  1A0:  JAL       ~Func:playFX_85
  1A4:  CLEAR     A0
  1A8:  SW        V0, 0 (S1)
  1AC:  LW        V0, C (V0)
  1B0:  LWC1      F0, 4 (S0)
  1B4:  SWC1      F0, 3C (V0)
  1B8:  LW        V0, 0 (S1)
  1BC:  LWC1      F0, 8 (S0)
  1C0:  LW        V0, C (V0)
  1C4:  SWC1      F0, 40 (V0)
  1C8:  LW        V0, 0 (S1)
  1CC:  LWC1      F0, C (S0)
  1D0:  LW        V0, C (V0)
  1D4:  SWC1      F0, 44 (V0)
  1D8:  LW        V0, 0 (S1)
  1DC:  LW        V0, C (V0)
  1E0:  BEQ       R0, R0, .o374
  1E4:  SH        R0, 0 (V0)
        .o1E8
  1E8:  LW        V0, 10 (S0)
  1EC:  BEQ       V0, R0, .o1FC
  1F0:  NOP
  1F4:  BEQ       R0, R0, .o374
  1F8:  ADDIU     S4, S4, 1
        .o1FC
  1FC:  LWC1      F0, FFE8 (S0)
  200:  LWC1      F8, FFEC (S0)
  204:  SUB.S     F0, F0, F8
  208:  LWC1      F2, FFF8 (S0)
  20C:  CVT.S.W   F2, F2
  210:  ABS.S     F0, F0
  214:  MUL.S     F0, F0, F2
  218:  NOP
  21C:  LWC1      F6, C (S0)
  220:  LIF       F2, 9.0
  228:  LIF       F4, 40.0
  230:  ADD.S     F6, F6, F2
  234:  LW        V1, FFF8 (S0)
  238:  DIV.S     F0, F0, F4
  23C:  ADD.S     F0, F0, F8
  240:  SLTI      V0, V1, B
  244:  SWC1      F6, C (S0)
  248:  BEQ       V0, R0, .o2BC
  24C:  SWC1      F0, FFF0 (S0)
  250:  SRL       V0, V1, 1F
  254:  ADDU      V0, V1, V0
  258:  SRA       V0, V0, 1
  25C:  MTC1      V0, F2
  260:  NOP
  264:  CVT.S.W   F2, F2
  268:  COPY      V0, V1
  26C:  MUL.S     F2, F2, F24
  270:  NOP
  274:  SRL       V1, V0, 1F
  278:  ADDU      V0, V0, V1
  27C:  SRA       V0, V0, 1
  280:  MTC1      V0, F0
  284:  NOP
  288:  CVT.S.W   F0, F0
  28C:  MUL.S     F0, F0, F24
  290:  NOP
  294:  ADD.S     F2, F2, F22
  298:  MUL.S     F2, F2, F20
  29C:  NOP
  2A0:  ADD.S     F0, F0, F22
  2A4:  MUL.S     F0, F0, F20
  2A8:  NOP
  2AC:  TRUNC.W.S F10, F2
  2B0:  SWC1      F10, FFFC (S0)
  2B4:  TRUNC.W.S F10, F0
  2B8:  SWC1      F10, 0 (S0)
        .o2BC
  2BC:  LW        V0, FFF8 (S0)
  2C0:  ADDIU     V0, V0, FFFF
  2C4:  BGTZ      V0, .o2E4
  2C8:  SW        V0, FFF8 (S0)
  2CC:  LW        A0, 0 (S1)
  2D0:  JAL       ~Func:remove_effect
  2D4:  NOP
  2D8:  LI        V0, 1
  2DC:  BEQ       R0, R0, .o374
  2E0:  SW        V0, 10 (S0)
        .o2E4
  2E4:  LW        V0, 0 (S1)
  2E8:  LWC1      F0, FFDC (S0)
  2EC:  LW        V0, C (V0)
  2F0:  SWC1      F0, 4 (V0)
  2F4:  LW        V0, 0 (S1)
  2F8:  LWC1      F0, FFE0 (S0)
  2FC:  LW        V0, C (V0)
  300:  SWC1      F0, 8 (V0)
  304:  LW        V0, 0 (S1)
  308:  LWC1      F0, FFE4 (S0)
  30C:  LW        V0, C (V0)
  310:  SWC1      F0, C (V0)
  314:  LW        V0, 0 (S1)
  318:  LWC1      F0, 4 (S0)
  31C:  LW        V0, C (V0)
  320:  SWC1      F0, 3C (V0)
  324:  LW        V0, 0 (S1)
  328:  LWC1      F0, 8 (S0)
  32C:  LW        V0, C (V0)
  330:  SWC1      F0, 40 (V0)
  334:  LW        V0, 0 (S1)
  338:  LWC1      F0, C (S0)
  33C:  LW        V0, C (V0)
  340:  SWC1      F0, 44 (V0)
  344:  LW        V0, 0 (S1)
  348:  LWC1      F0, FFF0 (S0)
  34C:  LW        V0, C (V0)
  350:  SWC1      F0, 38 (V0)
  354:  LW        V0, 0 (S1)
  358:  LW        V1, C (V0)
  35C:  LW        V0, FFFC (S0)
  360:  SW        V0, 24 (V1)
  364:  LW        V0, 0 (S1)
  368:  LW        V1, C (V0)
  36C:  LW        V0, 0 (S0)
  370:  SW        V0, 34 (V1)
        .o374
  374:  ADDIU     S0, S0, 3C
  378:  ADDIU     S2, S2, 1
  37C:  SLTI      V0, S2, 3
  380:  BNE       V0, R0, .o170
  384:  ADDIU     S1, S1, 3C
  388:  SLTI      V0, S4, 3
  38C:  BNE       V0, R0, .o3A0
  390:  CLEAR     V0
  394:  JAL       ~Func:heap_free
  398:  COPY      A0, S1
  39C:  LI        V0, 2
        .o3A0
  3A0:  LW        RA, 2C (SP)
  3A4:  LW        S4, 28 (SP)
  3A8:  LW        S3, 24 (SP)
  3AC:  LW        S2, 20 (SP)
  3B0:  LW        S1, 1C (SP)
  3B4:  LW        S0, 18 (SP)
  3B8:  LDC1      F28, 50 (SP)
  3BC:  LDC1      F26, 48 (SP)
  3C0:  LDC1      F24, 40 (SP)
  3C4:  LDC1      F22, 38 (SP)
  3C8:  LDC1      F20, 30 (SP)
  3CC:  JR        RA
  3D0:  ADDIU     SP, SP, 58
}

#new:Function $Function_8021ABD8
{
    0:  ADDIU     SP, SP, FFB0
    4:  SW        S1, 1C (SP)
    8:  COPY      S1, A0
    C:  SW        S2, 20 (SP)
   10:  SW        RA, 2C (SP)
   14:  SW        S4, 28 (SP)
   18:  SW        S3, 24 (SP)
   1C:  SW        S0, 18 (SP)
   20:  SDC1      F26, 48 (SP)
   24:  SDC1      F24, 40 (SP)
   28:  SDC1      F22, 38 (SP)
   2C:  SDC1      F20, 30 (SP)
   30:  LW        A0, 148 (S1)
   34:  LW        S0, C (S1)
   38:  JAL       ~Func:get_actor
   3C:  COPY      S2, A1
   40:  COPY      S4, V0
   44:  BEQ       S4, R0, .o424
   48:  LI        V0, 2
   4C:  BEQ       S2, R0, .o154
   50:  CLEAR     S3
   54:  LW        A1, 0 (S0)
   58:  ADDIU     S0, S0, 4
   5C:  JAL       ~Func:get_variable
   60:  COPY      A0, S1
   64:  LW        A1, 0 (S0)
   68:  ADDIU     S0, S0, 4
   6C:  MTC1      V0, F26
   70:  NOP
   74:  CVT.S.W   F26, F26
   78:  JAL       ~Func:get_variable
   7C:  COPY      A0, S1
   80:  LW        A1, 0 (S0)
   84:  ADDIU     S0, S0, 4
   88:  MTC1      V0, F24
   8C:  NOP
   90:  CVT.S.W   F24, F24
   94:  JAL       ~Func:get_variable
   98:  COPY      A0, S1
   9C:  LW        A1, 0 (S0)
   A0:  MTC1      V0, F22
   A4:  NOP
   A8:  CVT.S.W   F22, F22
   AC:  JAL       ~Func:get_float_variable
   B0:  COPY      A0, S1
   B4:  LB        V1, 210 (S4)
   B8:  LI        V0, A
   BC:  BNE       V1, V0, .oDC
   C0:  MOV.S     F20, F0
   C4:  LAD       F2, $ConstDouble_802347C0
   CC:  CVT.D.S   F0, F20
   D0:  MUL.D     F0, F0, F2
   D4:  NOP
   D8:  CVT.S.D   F20, F0
        .oDC
   DC:  JAL       ~Func:heap_malloc
   E0:  LI        A0, 9C
   E4:  COPY      S1, V0
   E8:  CLEAR     S2
   EC:  LI        A2, 32
   F0:  LI        A1, FF
   F4:  LI        A0, 1
   F8:  LIF       F0, 90.0
  100:  ADDIU     V1, S1, 30
  104:  SW        S1, 78 (S4)
        .o108
  108:  SWC1      F26, FFD4 (V1)
  10C:  SWC1      F24, FFD8 (V1)
  110:  SWC1      F22, FFDC (V1)
  114:  SWC1      F20, FFE0 (V1)
  118:  SW        A0, FFE4 (V1)
  11C:  SW        A2, FFE8 (V1)
  120:  SW        A1, FFEC (V1)
  124:  SW        A1, FFF0 (V1)
  128:  SWC1      F0, FFF4 (V1)
  12C:  SW        R0, FFF8 (V1)
  130:  SW        R0, FFFC (V1)
  134:  SW        R0, 0 (V1)
  138:  ADDIU     V1, V1, 34
  13C:  ADDIU     S2, S2, 1
  140:  SLTI      V0, S2, 3
  144:  BNE       V0, R0, .o108
  148:  ADDIU     A0, A0, 10
  14C:  BEQ       R0, R0, .o424
  150:  CLEAR     V0
        .o154
  154:  LW        S1, 78 (S4)
  158:  COPY      S2, S3
  15C:  ADDIU     S0, S1, 30
        .o160
  160:  LW        V0, FFE4 (S0)
  164:  BLEZ      V0, .o1CC
  168:  ADDIU     V0, V0, FFFF
  16C:  BGTZ      V0, .o3F8
  170:  SW        V0, FFE4 (S0)
  174:  LWC1      F0, FFE0 (S0)
  178:  LI        V0, FFFF
  17C:  SW        V0, 14 (SP)
  180:  SWC1      F0, 10 (SP)
  184:  LW        A1, FFD4 (S0)
  188:  LW        A2, FFD8 (S0)
  18C:  LW        A3, FFDC (S0)
  190:  JAL       ~Func:playFX_85
  194:  CLEAR     A0
  198:  SW        V0, 0 (S1)
  19C:  LW        V0, C (V0)
  1A0:  LWC1      F0, FFF4 (S0)
  1A4:  SWC1      F0, 3C (V0)
  1A8:  LW        V0, 0 (S1)
  1AC:  LWC1      F0, FFF8 (S0)
  1B0:  LW        V0, C (V0)
  1B4:  SWC1      F0, 40 (V0)
  1B8:  LW        V0, 0 (S1)
  1BC:  LWC1      F0, FFFC (S0)
  1C0:  LW        V0, C (V0)
  1C4:  BEQ       R0, R0, .o3F8
  1C8:  SWC1      F0, 44 (V0)
        .o1CC
  1CC:  LW        V0, 0 (S0)
  1D0:  BEQ       V0, R0, .o1E0
  1D4:  LI        V0, A
  1D8:  BEQ       R0, R0, .o3F8
  1DC:  ADDIU     S3, S3, 1
        .o1E0
  1E0:  LB        V1, 210 (S4)
  1E4:  BEQ       V1, V0, .o26C
  1E8:  NOP
  1EC:  LWC1      F2, FFD8 (S0)
  1F0:  LIF       F1, 3.21875
  1F8:  MTC1      R0, F0
  1FC:  CVT.D.S   F2, F2
  200:  C.LT.D    F2, F0
  204:  LIF       F1, 2.28125
  20C:  MTC1      R0, F0
  210:  BC1TL     .o2E8
  214:  ADD.D     F0, F2, F0
  218:  LAD       F0, $ConstDouble_802347C8
  220:  C.LT.D    F2, F0
  224:  LAD       F0, $ConstDouble_802347D0
  22C:  BC1TL     .o2E8
  230:  ADD.D     F0, F2, F0
  234:  LIF       F1, 3.46875
  23C:  MTC1      R0, F0
  240:  NOP
  244:  C.LT.D    F2, F0
  248:  LAD       F0, $ConstDouble_802347D8
  250:  BC1TL     .o2E8
  254:  ADD.D     F0, F2, F0
  258:  LIF       F1, 1.9375
  260:  MTC1      R0, F0
  264:  BEQ       R0, R0, .o2E8
  268:  ADD.D     F0, F2, F0
        .o26C
  26C:  LWC1      F2, FFD8 (S0)
  270:  LIF       F1, 2.875
  278:  MTC1      R0, F0
  27C:  CVT.D.S   F2, F2
  280:  C.LT.D    F2, F0
  284:  LAD       F0, $ConstDouble_802347E0
  28C:  BC1TL     .o2E8
  290:  ADD.D     F0, F2, F0
  294:  LIF       F1, 3.03125
  29C:  MTC1      R0, F0
  2A0:  NOP
  2A4:  C.LT.D    F2, F0
  2A8:  LAD       F0, $ConstDouble_802347E8
  2B0:  BC1TL     .o2E8
  2B4:  ADD.D     F0, F2, F0
  2B8:  LIF       F1, 3.125
  2C0:  MTC1      R0, F0
  2C4:  NOP
  2C8:  C.LT.D    F2, F0
  2CC:  LAD       F0, $ConstDouble_802347F0
  2D4:  BC1FL     .o2E8
  2D8:  ADD.D     F0, F2, F0
  2DC:  LAD       F0, $ConstDouble_802347F8
  2E4:  ADD.D     F0, F2, F0
        .o2E8
  2E8:  CVT.S.D   F0, F0
  2EC:  SWC1      F0, FFD8 (S0)
  2F0:  LWC1      F0, FFF8 (S0)
  2F4:  LIF       F2, 18.0
  2FC:  LW        V1, FFE8 (S0)
  300:  ADD.S     F0, F0, F2
  304:  SLTI      V0, V1, 11
  308:  BEQ       V0, R0, .o344
  30C:  SWC1      F0, FFF8 (S0)
  310:  SLL       V0, V1, 8
  314:  SUBU      V1, V0, V1
  318:  BLTZL     V1, .o320
  31C:  ADDIU     V1, V1, F
        .o320
  320:  LW        V0, FFE8 (S0)
  324:  SRA       V1, V1, 4
  328:  SW        V1, FFEC (S0)
  32C:  SLL       V1, V0, 8
  330:  SUBU      V0, V1, V0
  334:  BLTZL     V0, .o33C
  338:  ADDIU     V0, V0, F
        .o33C
  33C:  SRA       V0, V0, 4
  340:  SW        V0, FFF0 (S0)
        .o344
  344:  LW        V0, 0 (S1)
  348:  LWC1      F0, FFD4 (S0)
  34C:  LW        V0, C (V0)
  350:  SWC1      F0, 4 (V0)
  354:  LW        V0, 0 (S1)
  358:  LWC1      F0, FFD8 (S0)
  35C:  LW        V0, C (V0)
  360:  SWC1      F0, 8 (V0)
  364:  LW        V0, 0 (S1)
  368:  LWC1      F0, FFDC (S0)
  36C:  LW        V0, C (V0)
  370:  SWC1      F0, C (V0)
  374:  LW        V0, 0 (S1)
  378:  LWC1      F0, FFF4 (S0)
  37C:  LW        V0, C (V0)
  380:  SWC1      F0, 3C (V0)
  384:  LW        V0, 0 (S1)
  388:  LWC1      F0, FFF8 (S0)
  38C:  LW        V0, C (V0)
  390:  SWC1      F0, 40 (V0)
  394:  LW        V0, 0 (S1)
  398:  LWC1      F0, FFFC (S0)
  39C:  LW        V0, C (V0)
  3A0:  SWC1      F0, 44 (V0)
  3A4:  LW        V0, 0 (S1)
  3A8:  LWC1      F0, FFE0 (S0)
  3AC:  LW        V0, C (V0)
  3B0:  SWC1      F0, 38 (V0)
  3B4:  LW        V0, 0 (S1)
  3B8:  LW        V1, C (V0)
  3BC:  LW        V0, FFEC (S0)
  3C0:  SW        V0, 24 (V1)
  3C4:  LW        V0, 0 (S1)
  3C8:  LW        V1, C (V0)
  3CC:  LW        V0, FFF0 (S0)
  3D0:  SW        V0, 34 (V1)
  3D4:  LW        V0, FFE8 (S0)
  3D8:  ADDIU     V0, V0, FFFF
  3DC:  BGTZ      V0, .o3F8
  3E0:  SW        V0, FFE8 (S0)
  3E4:  LW        A0, 0 (S1)
  3E8:  JAL       ~Func:remove_effect
  3EC:  NOP
  3F0:  LI        V0, 1
  3F4:  SW        V0, 0 (S0)
        .o3F8
  3F8:  ADDIU     S0, S0, 34
  3FC:  ADDIU     S2, S2, 1
  400:  SLTI      V0, S2, 3
  404:  BNE       V0, R0, .o160
  408:  ADDIU     S1, S1, 34
  40C:  SLTI      V0, S3, 3
  410:  BNE       V0, R0, .o424
  414:  CLEAR     V0
  418:  JAL       ~Func:heap_free
  41C:  COPY      A0, S1
  420:  LI        V0, 2
        .o424
  424:  LW        RA, 2C (SP)
  428:  LW        S4, 28 (SP)
  42C:  LW        S3, 24 (SP)
  430:  LW        S2, 20 (SP)
  434:  LW        S1, 1C (SP)
  438:  LW        S0, 18 (SP)
  43C:  LDC1      F26, 48 (SP)
  440:  LDC1      F24, 40 (SP)
  444:  LDC1      F22, 38 (SP)
  448:  LDC1      F20, 30 (SP)
  44C:  JR        RA
  450:  ADDIU     SP, SP, 50
}

#new:Function $Function_8021B02C
{
    0:  ADDIU     SP, SP, FFE0
    4:  SW        S1, 14 (SP)
    8:  COPY      S1, A0
    C:  SW        S2, 18 (SP)
   10:  LA        S2, 800DC070
   18:  SW        RA, 1C (SP)
   1C:  SW        S0, 10 (SP)
   20:  LW        S0, C (S1)
   24:  LB        A2, 97 (S2)
   28:  LW        A1, 0 (S0)
   2C:  JAL       ~Func:set_variable
   30:  ADDIU     S0, S0, 4
   34:  LW        A1, 0 (S0)
   38:  LB        A2, 96 (S2)
   3C:  JAL       ~Func:set_variable
   40:  COPY      A0, S1
   44:  LW        RA, 1C (SP)
   48:  LW        S2, 18 (SP)
   4C:  LW        S1, 14 (SP)
   50:  LW        S0, 10 (SP)
   54:  LI        V0, 2
   58:  JR        RA
   5C:  ADDIU     SP, SP, 20
}

#new:Function $Function_8021B08C
{
    0:  ADDIU     SP, SP, FFE8
    4:  LA        V1, 8010F290
    C:  SW        RA, 10 (SP)
   10:  LB        V0, 2 (V1)
   14:  SLL       A2, V0, 1
   18:  ADDU      A2, A2, V0
   1C:  SLL       A2, A2, 3
   20:  ADDU      A2, A2, V0
   24:  LB        V0, 3 (V1)
   28:  SLL       A2, A2, 2
   2C:  BNE       V0, R0, .o38
   30:  DIV       A2, V0
   34:  BREAK     1C00
        .o38
   38:  LI        AT, FFFF
   3C:  BNE       V0, AT, .o50
   40:  LUI       AT, 8000
   44:  BNE       A2, AT, .o50
   48:  NOP
   4C:  BREAK     1800
        .o50
   50:  MFLO      A2
   54:  LW        V0, C (A0)
   58:  JAL       ~Func:set_variable
   5C:  LW        A1, 0 (V0)
   60:  LW        RA, 10 (SP)
   64:  LI        V0, 2
   68:  JR        RA
   6C:  ADDIU     SP, SP, 18
}

#new:Function $Function_8021B0FC
{
    0:  ADDIU     SP, SP, FFD8
    4:  SW        S2, 18 (SP)
    8:  COPY      S2, A0
    C:  SW        RA, 1C (SP)
   10:  SW        S1, 14 (SP)
   14:  SW        S0, 10 (SP)
   18:  SDC1      F20, 20 (SP)
   1C:  BEQ       A1, R0, .o130
   20:  LW        S0, C (S2)
   24:  JAL       ~Func:heap_malloc
   28:  LI        A0, 24
   2C:  COPY      S1, V0
   30:  SW        S1, 70 (S2)
   34:  LW        A1, 0 (S0)
   38:  ADDIU     S0, S0, 4
   3C:  JAL       ~Func:get_variable
   40:  COPY      A0, S2
   44:  SW        V0, 20 (S1)
   48:  LW        A1, 0 (S0)
   4C:  ADDIU     S0, S0, 4
   50:  JAL       ~Func:get_float_variable
   54:  COPY      A0, S2
   58:  SWC1      F0, 0 (S1)
   5C:  LW        A1, 0 (S0)
   60:  ADDIU     S0, S0, 4
   64:  JAL       ~Func:get_float_variable
   68:  COPY      A0, S2
   6C:  SWC1      F0, 4 (S1)
   70:  LW        A1, 0 (S0)
   74:  ADDIU     S0, S0, 4
   78:  JAL       ~Func:get_float_variable
   7C:  COPY      A0, S2
   80:  SWC1      F0, 8 (S1)
   84:  LW        A1, 0 (S0)
   88:  ADDIU     S0, S0, 4
   8C:  JAL       ~Func:get_variable
   90:  COPY      A0, S2
   94:  SW        V0, 1C (S1)
   98:  LW        A1, 0 (S0)
   9C:  JAL       ~Func:get_float_variable
   A0:  COPY      A0, S2
   A4:  LW        A0, 20 (S1)
   A8:  JAL       ~Func:get_item_entity
   AC:  SWC1      F0, 10 (S1)
   B0:  COPY      S0, V0
   B4:  LWC1      F12, 8 (S0)
   B8:  LWC1      F14, 10 (S0)
   BC:  LW        A2, 0 (S1)
   C0:  JAL       ~Func:dist2D
   C4:  LW        A3, 8 (S1)
   C8:  LWC1      F12, 8 (S0)
   CC:  LWC1      F14, 10 (S0)
   D0:  LW        A2, 0 (S1)
   D4:  LW        A3, 8 (S1)
   D8:  JAL       ~Func:atan2
   DC:  MOV.S     F20, F0
   E0:  LWC1      F4, 10 (S1)
   E4:  LWC1      F6, 1C (S1)
   E8:  CVT.S.W   F6, F6
   EC:  MUL.S     F4, F4, F6
   F0:  NOP
   F4:  LIF       F2, 0.5
   FC:  NOP
  100:  MUL.S     F4, F4, F2
  104:  NOP
  108:  SWC1      F0, C (S1)
  10C:  LWC1      F0, 4 (S1)
  110:  LWC1      F2, C (S0)
  114:  SUB.S     F0, F0, F2
  118:  MOV.S     F2, F6
  11C:  DIV.S     F0, F0, F6
  120:  ADD.S     F4, F4, F0
  124:  DIV.S     F20, F20, F2
  128:  SWC1      F20, 14 (S1)
  12C:  SWC1      F4, 18 (S1)
        .o130
  130:  LW        S1, 70 (S2)
  134:  JAL       ~Func:get_item_entity
  138:  LW        A0, 20 (S1)
  13C:  COPY      S0, V0
  140:  BNE       S0, R0, .o158
  144:  NOP
  148:  JAL       ~Func:heap_free
  14C:  LW        A0, 70 (S2)
  150:  BEQ       R0, R0, .o1FC
  154:  LI        V0, 2
        .o158
  158:  LWC1      F12, C (S1)
  15C:  JAL       ~Func:sin_deg
  160:  NOP
  164:  LWC1      F2, 14 (S1)
  168:  MUL.S     F2, F2, F0
  16C:  NOP
  170:  LWC1      F0, 8 (S0)
  174:  ADD.S     F0, F0, F2
  178:  SWC1      F0, 8 (S0)
  17C:  JAL       ~Func:cos_deg
  180:  LWC1      F12, C (S1)
  184:  LWC1      F2, 14 (S1)
  188:  MUL.S     F2, F2, F0
  18C:  NOP
  190:  LWC1      F0, 10 (S0)
  194:  SUB.S     F0, F0, F2
  198:  SWC1      F0, 10 (S0)
  19C:  LWC1      F0, C (S0)
  1A0:  LWC1      F2, 18 (S1)
  1A4:  ADD.S     F0, F0, F2
  1A8:  SWC1      F0, C (S0)
  1AC:  LWC1      F0, 18 (S1)
  1B0:  LWC1      F2, 10 (S1)
  1B4:  LW        V0, 1C (S1)
  1B8:  SUB.S     F0, F0, F2
  1BC:  ADDIU     V0, V0, FFFF
  1C0:  SW        V0, 1C (S1)
  1C4:  BLTZ      V0, .o1D4
  1C8:  SWC1      F0, 18 (S1)
  1CC:  BEQ       R0, R0, .o1FC
  1D0:  CLEAR     V0
        .o1D4
  1D4:  LWC1      F0, 0 (S1)
  1D8:  SWC1      F0, 8 (S0)
  1DC:  LWC1      F0, 4 (S1)
  1E0:  SWC1      F0, C (S0)
  1E4:  LWC1      F0, 8 (S1)
  1E8:  SWC1      F0, 10 (S0)
  1EC:  SW        R0, 18 (S1)
  1F0:  JAL       ~Func:heap_free
  1F4:  LW        A0, 70 (S2)
  1F8:  LI        V0, 1
        .o1FC
  1FC:  LW        RA, 1C (SP)
  200:  LW        S2, 18 (SP)
  204:  LW        S1, 14 (SP)
  208:  LW        S0, 10 (SP)
  20C:  LDC1      F20, 20 (SP)
  210:  JR        RA
  214:  ADDIU     SP, SP, 28
}

#new:Function $Function_8021B314
{
    0:  ADDIU     SP, SP, FFE0
    4:  SW        S2, 18 (SP)
    8:  COPY      S2, A0
    C:  SW        RA, 1C (SP)
   10:  SW        S1, 14 (SP)
   14:  SW        S0, 10 (SP)
   18:  LW        S0, C (S2)
   1C:  LW        A1, 0 (S0)
   20:  JAL       ~Func:get_variable
   24:  ADDIU     S0, S0, 4
   28:  JAL       ~Func:get_item_entity
   2C:  COPY      A0, V0
   30:  LW        A1, 0 (S0)
   34:  ADDIU     S0, S0, 4
   38:  COPY      S1, V0
   3C:  LWC1      F0, 8 (S1)
   40:  TRUNC.W.S F2, F0
   44:  MFC1      A2, F2
   48:  JAL       ~Func:set_variable
   4C:  COPY      A0, S2
   50:  LW        A1, 0 (S0)
   54:  ADDIU     S0, S0, 4
   58:  LWC1      F0, C (S1)
   5C:  TRUNC.W.S F2, F0
   60:  MFC1      A2, F2
   64:  JAL       ~Func:set_variable
   68:  COPY      A0, S2
   6C:  LWC1      F0, 10 (S1)
   70:  LW        A1, 0 (S0)
   74:  TRUNC.W.S F2, F0
   78:  MFC1      A2, F2
   7C:  JAL       ~Func:set_variable
   80:  COPY      A0, S2
   84:  LW        RA, 1C (SP)
   88:  LW        S2, 18 (SP)
   8C:  LW        S1, 14 (SP)
   90:  LW        S0, 10 (SP)
   94:  LI        V0, 2
   98:  JR        RA
   9C:  ADDIU     SP, SP, 20
}

#new:Function $Function_8021B3B4
{
    0:  ADDIU     SP, SP, FFC0
    4:  SW        S3, 2C (SP)
    8:  COPY      S3, A0
    C:  SW        S0, 20 (SP)
   10:  CLEAR     S0
   14:  SW        S2, 28 (SP)
   18:  LA        S2, 800DC070
   20:  SW        S4, 30 (SP)
   24:  LA        S4, 8010F290
   2C:  SW        S5, 34 (SP)
   30:  LI        A0, FFFF
   34:  SW        RA, 38 (SP)
   38:  SW        S1, 24 (SP)
   3C:  LB        V0, AE (S2)
   40:  LW        S1, C (S3)
   44:  BNE       V0, A0, .o54
   48:  COPY      S5, S4
   4C:  SW        R0, 10 (SP)
   50:  LI        S0, 1
        .o54
   54:  LB        V0, AF (S2)
   58:  BNE       V0, A0, .o70
   5C:  SLL       V0, S0, 2
   60:  ADDU      V1, SP, V0
   64:  LI        V0, 1
   68:  SW        V0, 10 (V1)
   6C:  ADDU      S0, S0, V0
        .o70
   70:  LB        V0, B0 (S2)
   74:  BNE       V0, A0, .o8C
   78:  SLL       V0, S0, 2
   7C:  ADDU      V1, SP, V0
   80:  LI        V0, 2
   84:  SW        V0, 10 (V1)
   88:  ADDIU     S0, S0, 1
        .o8C
   8C:  JAL       ~Func:rand_int
   90:  LI        A0, 2
   94:  ADDIU     A0, S0, FFFF
   98:  JAL       ~Func:rand_int
   9C:  ADDIU     S0, V0, 2
   A0:  SLL       V0, V0, 2
   A4:  ADDU      V0, SP, V0
   A8:  LW        V1, 10 (V0)
   AC:  LI        V0, 1
   B0:  BEQ       V1, V0, .o124
   B4:  SLTI      V0, V1, 2
   B8:  BEQ       V0, R0, .oD0
   BC:  LI        V0, 2
   C0:  BEQL      V1, R0, .oE0
   C4:  SB        S0, AE (S2)
   C8:  BEQ       R0, R0, .o194
   CC:  NOP
        .oD0
   D0:  BEQL      V1, V0, .o16C
   D4:  SB        S0, B0 (S2)
   D8:  BEQ       R0, R0, .o194
   DC:  NOP
        .oE0
   E0:  LW        A1, 0 (S1)
   E4:  LB        V0, 1 (S4)
   E8:  ADDIU     S1, S1, 4
   EC:  SLL       V0, V0, 2
   F0:  LTW       A2, V0 ($IntTable_80229EBC)
   FC:  JAL       ~Func:set_variable
  100:  COPY      A0, S3
  104:  LB        V0, 1 (S4)
  108:  LW        A1, 0 (S1)
  10C:  SLL       V0, V0, 2
  110:  LTW       A2, V0 ($IntTable_80229EC8)
  11C:  BEQ       R0, R0, .o18C
  120:  COPY      A0, S3
        .o124
  124:  SB        S0, AF (S2)
  128:  LW        A1, 0 (S1)
  12C:  LB        V0, 0 (S5)
  130:  ADDIU     S1, S1, 4
  134:  SLL       V0, V0, 2
  138:  LTW       A2, V0 ($IntTable_80229ED4)
  144:  JAL       ~Func:set_variable
  148:  COPY      A0, S3
  14C:  LB        V0, 0 (S5)
  150:  LW        A1, 0 (S1)
  154:  SLL       V0, V0, 2
  158:  LTW       A2, V0 ($IntTable_80229EE0)
  164:  BEQ       R0, R0, .o18C
  168:  COPY      A0, S3
        .o16C
  16C:  LW        A1, 0 (S1)
  170:  ADDIU     S1, S1, 4
  174:  COPY      A0, S3
  178:  JAL       ~Func:set_variable
  17C:  LI        A2, 16C
  180:  COPY      A0, S3
  184:  LW        A1, 0 (S1)
  188:  LI        A2, 4F
        .o18C
  18C:  JAL       ~Func:set_variable
  190:  NOP
        .o194
  194:  LW        RA, 38 (SP)
  198:  LW        S5, 34 (SP)
  19C:  LW        S4, 30 (SP)
  1A0:  LW        S3, 2C (SP)
  1A4:  LW        S2, 28 (SP)
  1A8:  LW        S1, 24 (SP)
  1AC:  LW        S0, 20 (SP)
  1B0:  LI        V0, 2
  1B4:  JR        RA
  1B8:  ADDIU     SP, SP, 40
}

#new:Function $Function_8021B570
{
    0:  ADDIU     SP, SP, FFE0
    4:  SW        S2, 18 (SP)
    8:  COPY      S2, A0
    C:  SW        RA, 1C (SP)
   10:  SW        S1, 14 (SP)
   14:  SW        S0, 10 (SP)
   18:  LW        A0, 148 (S2)
   1C:  JAL       ~Func:get_actor
   20:  LW        S0, C (S2)
   24:  LA        S1, 800DC070
   2C:  LB        V1, 210 (V0)
   30:  LI        V0, A
   34:  BEQ       V1, V0, .o6C
   38:  LI        V1, FFFF
   3C:  LB        V0, AE (S1)
   40:  BEQ       V0, V1, .o60
   44:  COPY      A0, S2
   48:  LB        V0, AF (S1)
   4C:  BEQ       V0, V1, .o60
   50:  NOP
   54:  LB        V0, B0 (S1)
   58:  BNE       V0, V1, .o70
   5C:  NOP
        .o60
   60:  LW        A1, 0 (S0)
   64:  BEQ       R0, R0, .o78
   68:  CLEAR     A2
        .o6C
   6C:  COPY      A0, S2
        .o70
   70:  LW        A1, 0 (S0)
   74:  LI        A2, FFFF
        .o78
   78:  JAL       ~Func:set_variable
   7C:  NOP
   80:  LI        V0, 2
   84:  LW        RA, 1C (SP)
   88:  LW        S2, 18 (SP)
   8C:  LW        S1, 14 (SP)
   90:  LW        S0, 10 (SP)
   94:  JR        RA
   98:  ADDIU     SP, SP, 20
}

#new:Function $Function_8021B60C
{
    0:  ADDIU     SP, SP, FFE8
    4:  SW        RA, 10 (SP)
    8:  LW        V0, C (A0)
    C:  JAL       ~Func:get_variable
   10:  LW        A1, 0 (V0)
   14:  LW        V1, C (V0)
   18:  LIF       F0, 0.03975586
   24:  NOP
   28:  SWC1      F0, 38 (V1)
   2C:  SWC1      F0, 30 (V1)
   30:  LW        V1, C (V0)
   34:  LIF       F0, 1.875
   3C:  NOP
   40:  SWC1      F0, 34 (V1)
   44:  LW        V1, C (V0)
   48:  LIF       F0, 0.04975586
   54:  NOP
   58:  SWC1      F0, 3C (V1)
   5C:  LW        RA, 10 (SP)
   60:  LI        V0, 2
   64:  JR        RA
   68:  ADDIU     SP, SP, 18
}

#new:Function $Function_8021B678
{
    0:  ADDIU     SP, SP, FF88
    4:  SW        S5, 3C (SP)
    8:  COPY      S5, A0
    C:  SW        S1, 2C (SP)
   10:  SW        RA, 4C (SP)
   14:  SW        S8, 48 (SP)
   18:  SW        S7, 44 (SP)
   1C:  SW        S6, 40 (SP)
   20:  SW        S4, 38 (SP)
   24:  SW        S3, 34 (SP)
   28:  SW        S2, 30 (SP)
   2C:  SW        S0, 28 (SP)
   30:  SDC1      F28, 70 (SP)
   34:  SDC1      F26, 68 (SP)
   38:  SDC1      F24, 60 (SP)
   3C:  SDC1      F22, 58 (SP)
   40:  SDC1      F20, 50 (SP)
   44:  LW        A0, 148 (S5)
   48:  LW        S3, C (S5)
   4C:  JAL       ~Func:get_actor
   50:  COPY      S1, A1
   54:  COPY      S0, V0
   58:  BEQ       S0, R0, .o28C
   5C:  LI        V0, 2
   60:  BEQ       S1, R0, .o15C
   64:  ADDIU     S4, S0, C
   68:  JAL       ~Func:heap_malloc
   6C:  LI        A0, 60
   70:  COPY      S1, V0
   74:  SW        S1, 78 (S0)
   78:  LW        A1, 0 (S3)
   7C:  ADDIU     S3, S3, 4
   80:  COPY      A0, S5
   84:  CLEAR     S8
   88:  COPY      S2, S8
   8C:  LI        S7, 3C
   90:  LI        S6, 2D
   94:  COPY      S4, S8
   98:  LIF       F28, 1.0
   A0:  LIF       F26, 10.0
   A8:  LIF       F24, 15.0
   B0:  JAL       ~Func:get_variable
   B4:  ADDIU     S0, S1, 18
   B8:  LW        A1, 0 (S3)
   BC:  MTC1      V0, F22
   C0:  NOP
   C4:  CVT.S.W   F22, F22
   C8:  JAL       ~Func:get_variable
   CC:  COPY      A0, S5
   D0:  MTC1      V0, F20
   D4:  NOP
   D8:  CVT.S.W   F20, F20
        .oDC
   DC:  LI        A0, 2
   E0:  MFC1      A1, F22
   E4:  LUI       A2, 4348
   E8:  MFC1      A3, F20
   EC:  ADDIU     S2, S2, 1
   F0:  SWC1      F22, 10 (SP)
   F4:  SW        R0, 14 (SP)
   F8:  SWC1      F20, 18 (SP)
   FC:  SWC1      F28, 1C (SP)
  100:  JAL       ~Func:playFX_5E
  104:  SW        S7, 20 (SP)
  108:  MTC1      S8, F0
  10C:  NOP
  110:  CVT.S.W   F0, F0
  114:  SW        V0, 0 (S1)
  118:  SWC1      F0, FFF0 (S0)
  11C:  MTC1      S4, F0
  120:  NOP
  124:  CVT.S.W   F0, F0
  128:  SW        S6, 4 (S0)
  12C:  SWC1      F22, FFEC (S0)
  130:  SWC1      F20, FFF4 (S0)
  134:  SWC1      F26, FFF8 (S0)
  138:  SWC1      F0, FFFC (S0)
  13C:  SWC1      F24, 0 (S0)
  140:  ADDIU     S0, S0, 20
  144:  ADDIU     S1, S1, 20
  148:  SLTI      V0, S2, 3
  14C:  BNE       V0, R0, .oDC
  150:  ADDIU     S4, S4, 78
  154:  BEQ       R0, R0, .o28C
  158:  CLEAR     V0
        .o15C
  15C:  CLEAR     S2
  160:  LW        S1, 78 (S0)
  164:  LIF       F23, 1.9375
  16C:  MTC1      R0, F22
  170:  ADDIU     S0, S1, 1C
        .o174
  174:  JAL       ~Func:cos_deg
  178:  LWC1      F12, FFF8 (S0)
  17C:  LWC1      F2, FFF4 (S0)
  180:  MUL.S     F0, F0, F2
  184:  NOP
  188:  LWC1      F20, FFE8 (S0)
  18C:  LWC1      F12, FFF8 (S0)
  190:  JAL       ~Func:sin_deg
  194:  ADD.S     F20, F20, F0
  198:  LW        V0, 0 (S1)
  19C:  LWC1      F4, FFF4 (S0)
  1A0:  LWC1      F2, FFF0 (S0)
  1A4:  LW        V0, C (V0)
  1A8:  SWC1      F20, 4 (V0)
  1AC:  LW        V0, 0 (S1)
  1B0:  LW        V0, C (V0)
  1B4:  SWC1      F20, 10 (V0)
  1B8:  LW        V0, 0 (S1)
  1BC:  MUL.S     F0, F0, F4
  1C0:  NOP
  1C4:  LW        V0, C (V0)
  1C8:  SWC1      F20, 1C (V0)
  1CC:  LW        V0, 0 (S1)
  1D0:  ADD.S     F2, F2, F0
  1D4:  LW        V0, C (V0)
  1D8:  SWC1      F2, C (V0)
  1DC:  LW        V0, 0 (S1)
  1E0:  LW        V0, C (V0)
  1E4:  SWC1      F2, 18 (V0)
  1E8:  LW        V0, 0 (S1)
  1EC:  LW        V0, C (V0)
  1F0:  SWC1      F2, 24 (V0)
  1F4:  LW        V0, 0 (S0)
  1F8:  SLTI      V0, V0, B
  1FC:  BNE       V0, R0, .o218
  200:  NOP
  204:  LWC1      F0, FFF4 (S0)
  208:  CVT.D.S   F0, F0
  20C:  ADD.D     F0, F0, F22
  210:  CVT.S.D   F0, F0
  214:  SWC1      F0, FFF4 (S0)
        .o218
  218:  LWC1      F0, FFF8 (S0)
  21C:  LWC1      F2, FFFC (S0)
  220:  LW        V0, 0 (S0)
  224:  ADD.S     F0, F0, F2
  228:  SLTI      V0, V0, 1F
  22C:  BNE       V0, R0, .o250
  230:  SWC1      F0, FFF8 (S0)
  234:  MOV.S     F0, F2
  238:  LAD       F2, $ConstDouble_80234800
  240:  CVT.D.S   F0, F0
  244:  SUB.D     F0, F0, F2
  248:  CVT.S.D   F0, F0
  24C:  SWC1      F0, FFFC (S0)
        .o250
  250:  ADDIU     S1, S1, 20
  254:  LW        V0, 0 (S0)
  258:  ADDIU     S2, S2, 1
  25C:  ADDIU     V0, V0, FFFF
  260:  SW        V0, 0 (S0)
  264:  SLTI      V0, S2, 3
  268:  BNE       V0, R0, .o174
  26C:  ADDIU     S0, S0, 20
  270:  LW        S1, 6C (S4)
  274:  LW        V0, 1C (S1)
  278:  BGTZ      V0, .o28C
  27C:  CLEAR     V0
  280:  JAL       ~Func:heap_free
  284:  COPY      A0, S1
  288:  LI        V0, 2
        .o28C
  28C:  LW        RA, 4C (SP)
  290:  LW        S8, 48 (SP)
  294:  LW        S7, 44 (SP)
  298:  LW        S6, 40 (SP)
  29C:  LW        S5, 3C (SP)
  2A0:  LW        S4, 38 (SP)
  2A4:  LW        S3, 34 (SP)
  2A8:  LW        S2, 30 (SP)
  2AC:  LW        S1, 2C (SP)
  2B0:  LW        S0, 28 (SP)
  2B4:  LDC1      F28, 70 (SP)
  2B8:  LDC1      F26, 68 (SP)
  2BC:  LDC1      F24, 60 (SP)
  2C0:  LDC1      F22, 58 (SP)
  2C4:  LDC1      F20, 50 (SP)
  2C8:  JR        RA
  2CC:  ADDIU     SP, SP, 78
}

PADDING: 8021B948 to 8021B950 (006A2B48 to 006A2B50)
00000000 00000000

#new:Function $Function_8021B950
{
    0:  ADDIU     SP, SP, FFE0
    4:  SW        S1, 14 (SP)
    8:  COPY      S1, A0
    C:  SW        RA, 18 (SP)
   10:  SW        S0, 10 (SP)
   14:  LW        S0, C (S1)
   18:  LW        A1, 0 (S0)
   1C:  JAL       ~Func:get_variable
   20:  ADDIU     S0, S0, 4
   24:  COPY      A0, S1
   28:  LW        A1, 0 (S0)
   2C:  JAL       ~Func:get_variable
   30:  COPY      S0, V0
   34:  COPY      A0, S0
   38:  JAL       ~Func:start_rumble
   3C:  COPY      A1, V0
   40:  LW        RA, 18 (SP)
   44:  LW        S1, 14 (SP)
   48:  LW        S0, 10 (SP)
   4C:  LI        V0, 2
   50:  JR        RA
   54:  ADDIU     SP, SP, 20
}

#new:Function $Function_8021B9A8
{
    0:  ADDIU     SP, SP, FF78
    4:  SW        S1, 44 (SP)
    8:  COPY      S1, A0
    C:  SW        RA, 64 (SP)
   10:  SW        S8, 60 (SP)
   14:  SW        S7, 5C (SP)
   18:  SW        S6, 58 (SP)
   1C:  SW        S5, 54 (SP)
   20:  SW        S4, 50 (SP)
   24:  SW        S3, 4C (SP)
   28:  SW        S2, 48 (SP)
   2C:  SW        S0, 40 (SP)
   30:  SDC1      F26, 80 (SP)
   34:  SDC1      F24, 78 (SP)
   38:  SDC1      F22, 70 (SP)
   3C:  SDC1      F20, 68 (SP)
   40:  LW        S0, C (S1)
   44:  LA        T3, $???_80234810
   4C:  LW        T0, 0 (T3)
   50:  LW        T1, 4 (T3)
   54:  LW        T2, 8 (T3)
   58:  SW        T0, 28 (SP)
   5C:  SW        T1, 2C (SP)
   60:  SW        T2, 30 (SP)
   64:  LW        T0, C (T3)
   68:  LW        T1, 10 (T3)
   6C:  LW        T2, 14 (T3)
   70:  SW        T0, 34 (SP)
   74:  SW        T1, 38 (SP)
   78:  SW        T2, 3C (SP)
   7C:  JAL       ~Func:get_actor
   80:  LW        A0, 148 (S1)
   84:  COPY      S2, V0
   88:  BEQ       S2, R0, .o278
   8C:  LI        V0, 2
   90:  LW        A1, 0 (S0)
   94:  ADDIU     S0, S0, 4
   98:  JAL       ~Func:get_variable
   9C:  COPY      A0, S1
   A0:  LW        A1, 0 (S0)
   A4:  ADDIU     S0, S0, 4
   A8:  COPY      A0, S1
   AC:  JAL       ~Func:get_variable
   B0:  COPY      S8, V0
   B4:  COPY      S5, V0
   B8:  LW        A1, 0 (S0)
   BC:  ADDIU     S0, S0, 4
   C0:  JAL       ~Func:get_variable
   C4:  COPY      A0, S1
   C8:  COPY      A0, S1
   CC:  LW        A1, 0 (S0)
   D0:  JAL       ~Func:get_float_variable
   D4:  COPY      S6, V0
   D8:  LB        V1, 210 (S2)
   DC:  LI        V0, A
   E0:  BEQ       V1, V0, .o11C
   E4:  MOV.S     F24, F0
   E8:  LIF       F2, 36.0
   F0:  NOP
   F4:  MUL.S     F2, F24, F2
   F8:  NOP
   FC:  MTC1      S5, F0
  100:  NOP
  104:  CVT.S.W   F0, F0
  108:  ADD.S     F0, F0, F2
  10C:  TRUNC.W.S F4, F0
  110:  MFC1      S5, F4
  114:  BEQ       R0, R0, .o14C
  118:  CLEAR     S4
        .o11C
  11C:  LAD       F0, $ConstDouble_80234828
  124:  CVT.D.S   F2, F24
  128:  MUL.D     F2, F2, F0
  12C:  NOP
  130:  MTC1      S5, F0
  134:  NOP
  138:  CVT.D.W   F0, F0
  13C:  ADD.D     F0, F0, F2
  140:  TRUNC.W.D F4, F0
  144:  MFC1      S5, F4
  148:  CLEAR     S4
        .o14C
  14C:  LIF       F26, 200.0
  154:  ADDIU     S7, S6, 14
  158:  ADDIU     S3, SP, 28
        .o15C
  15C:  JAL       ~Func:rand_int
  160:  LI        A0, 1E
  164:  LW        V1, 0 (S3)
  168:  ADDU      V1, V1, V0
  16C:  ADDIU     V1, V1, FFF1
  170:  MTC1      V1, F20
  174:  NOP
  178:  CVT.S.W   F20, F20
  17C:  JAL       ~Func:sin_deg
  180:  MOV.S     F12, F20
  184:  MUL.S     F0, F0, F26
  188:  NOP
  18C:  MTC1      S8, F22
  190:  NOP
  194:  CVT.S.W   F22, F22
  198:  ADD.S     F0, F0, F22
  19C:  TRUNC.W.S F4, F0
  1A0:  MFC1      S0, F4
  1A4:  JAL       ~Func:cos_deg
  1A8:  MOV.S     F12, F20
  1AC:  LI        A0, 1
  1B0:  MTC1      S0, F2
  1B4:  NOP
  1B8:  CVT.S.W   F2, F2
  1BC:  SWC1      F2, 10 (SP)
  1C0:  MTC1      S7, F2
  1C4:  NOP
  1C8:  CVT.S.W   F2, F2
  1CC:  MUL.S     F0, F0, F26
  1D0:  NOP
  1D4:  SWC1      F2, 18 (SP)
  1D8:  MTC1      S5, F2
  1DC:  NOP
  1E0:  CVT.S.W   F2, F2
  1E4:  LI        V0, B
  1E8:  MFC1      A1, F22
  1EC:  MFC1      A2, F2
  1F0:  ADD.S     F0, F0, F2
  1F4:  SWC1      F24, 1C (SP)
  1F8:  SW        V0, 20 (SP)
  1FC:  TRUNC.W.S F4, F0
  200:  MFC1      V0, F4
  204:  MTC1      S6, F4
  208:  NOP
  20C:  CVT.S.W   F4, F4
  210:  MFC1      A3, F4
  214:  MTC1      V0, F0
  218:  NOP
  21C:  CVT.S.W   F0, F0
  220:  JAL       ~Func:playFX_5E
  224:  SWC1      F0, 14 (SP)
  228:  LI        A0, 100
  22C:  JAL       ~Func:rand_int
  230:  COPY      S0, V0
  234:  LI        A0, 100
  238:  JAL       ~Func:rand_int
  23C:  COPY      S1, V0
  240:  LI        A0, 100
  244:  JAL       ~Func:rand_int
  248:  COPY      S2, V0
  24C:  LW        V1, C (S0)
  250:  SW        S1, 30 (V1)
  254:  LW        V1, C (S0)
  258:  SW        S2, 34 (V1)
  25C:  LW        V1, C (S0)
  260:  ADDIU     S4, S4, 1
  264:  SW        V0, 38 (V1)
  268:  SLTI      V0, S4, 6
  26C:  BNE       V0, R0, .o15C
  270:  ADDIU     S3, S3, 4
  274:  LI        V0, 2
        .o278
  278:  LW        RA, 64 (SP)
  27C:  LW        S8, 60 (SP)
  280:  LW        S7, 5C (SP)
  284:  LW        S6, 58 (SP)
  288:  LW        S5, 54 (SP)
  28C:  LW        S4, 50 (SP)
  290:  LW        S3, 4C (SP)
  294:  LW        S2, 48 (SP)
  298:  LW        S1, 44 (SP)
  29C:  LW        S0, 40 (SP)
  2A0:  LDC1      F26, 80 (SP)
  2A4:  LDC1      F24, 78 (SP)
  2A8:  LDC1      F22, 70 (SP)
  2AC:  LDC1      F20, 68 (SP)
  2B0:  JR        RA
  2B4:  ADDIU     SP, SP, 88
}

#new:Function $Function_8021BC60
{
    0:  ADDIU     SP, SP, FF58
    4:  SW        S3, 74 (SP)
    8:  COPY      S3, A0
    C:  SW        RA, 88 (SP)
   10:  SW        S7, 84 (SP)
   14:  SW        S6, 80 (SP)
   18:  SW        S5, 7C (SP)
   1C:  SW        S4, 78 (SP)
   20:  SW        S2, 70 (SP)
   24:  SW        S1, 6C (SP)
   28:  SW        S0, 68 (SP)
   2C:  SDC1      F24, A0 (SP)
   30:  SDC1      F22, 98 (SP)
   34:  SDC1      F20, 90 (SP)
   38:  LW        A0, 148 (S3)
   3C:  JAL       ~Func:get_actor
   40:  COPY      S0, A1
   44:  BNE       V0, R0, .o54
   48:  COPY      A0, V0
   4C:  BEQ       R0, R0, .o36C
   50:  LI        V0, 2
        .o54
   54:  JAL       ~Func:get_actor_part
   58:  LI        A1, 1
   5C:  BEQ       S0, R0, .oAC
   60:  COPY      S5, V0
   64:  CLEAR     S0
   68:  LI        S1, FF
   6C:  SW        R0, 74 (S3)
   70:  SW        R0, 78 (S3)
   74:  SW        R0, 70 (S3)
   78:  COPY      A1, S0
        .o7C
   7C:  LI        A2, 11
   80:  LI        A3, 14
   84:  SW        R0, 10 (SP)
   88:  SW        R0, 14 (SP)
   8C:  SW        S1, 18 (SP)
   90:  SW        R0, 1C (SP)
   94:  LW        A0, 84 (S5)
   98:  JAL       802DE780
   9C:  ADDIU     S0, S0, 1
   A0:  SLTI      V0, S0, A
   A4:  BNE       V0, R0, .o7C
   A8:  COPY      A1, S0
        .oAC
   AC:  LW        V0, 74 (S3)
   B0:  ADDIU     A0, V0, A
   B4:  SLTI      V0, A0, 168
   B8:  BNE       V0, R0, .oFC
   BC:  SW        A0, 74 (S3)
   C0:  LI        V0, B60B60B7
   C8:  MULT      A0, V0
   CC:  SRA       V1, A0, 1F
   D0:  MFHI      T0
   D4:  ADDU      V0, T0, A0
   D8:  SRA       V0, V0, 8
   DC:  SUBU      V0, V0, V1
   E0:  SLL       V1, V0, 1
   E4:  ADDU      V1, V1, V0
   E8:  SLL       V0, V1, 4
   EC:  SUBU      V0, V0, V1
   F0:  SLL       V0, V0, 3
   F4:  SUBU      V0, A0, V0
   F8:  SW        V0, 74 (S3)
        .oFC
   FC:  CLEAR     S1
  100:  LUI       S2, 8000
  104:  COPY      S0, S1
  108:  LIF       F25, 1.875
  110:  MTC1      R0, F24
  114:  LIF       F23, 3.1875
  11C:  MTC1      R0, F22
  120:  LIF       F21, 28.0
  128:  MTC1      R0, F20
        .o12C
  12C:  LHU       A0, 76 (S3)
  130:  ADDU      A0, A0, S0
  134:  ADDIU     A0, A0, 78
  138:  SLL       A0, A0, 10
  13C:  JAL       ~Func:cosine
  140:  SRA       A0, A0, 10
  144:  CVT.D.S   F0, F0
  148:  ADD.D     F0, F0, F24
  14C:  MUL.D     F0, F0, F22
  150:  NOP
  154:  ADDIU     V0, SP, 20
  158:  C.LE.D    F20, F0
  15C:  NOP
  160:  BC1T      .o178
  164:  ADDU      V0, V0, S1
  168:  TRUNC.W.D F2, F0
  16C:  MFC1      V1, F2
  170:  BEQ       R0, R0, .o190
  174:  SB        V1, 0 (V0)
        .o178
  178:  SUB.D     F0, F0, F20
  17C:  TRUNC.W.D F2, F0
  180:  MFC1      V1, F2
  184:  NOP
  188:  OR        V1, V1, S2
  18C:  SB        V1, 0 (V0)
        .o190
  190:  LHU       A0, 76 (S3)
  194:  ADDU      A0, A0, S0
  198:  ADDIU     A0, A0, 3C
  19C:  SLL       A0, A0, 10
  1A0:  JAL       ~Func:cosine
  1A4:  SRA       A0, A0, 10
  1A8:  CVT.D.S   F0, F0
  1AC:  ADD.D     F0, F0, F24
  1B0:  MUL.D     F0, F0, F22
  1B4:  NOP
  1B8:  ADDIU     V0, SP, 38
  1BC:  C.LE.D    F20, F0
  1C0:  NOP
  1C4:  BC1T      .o1DC
  1C8:  ADDU      V0, V0, S1
  1CC:  TRUNC.W.D F2, F0
  1D0:  MFC1      V1, F2
  1D4:  BEQ       R0, R0, .o1F4
  1D8:  SB        V1, 0 (V0)
        .o1DC
  1DC:  SUB.D     F0, F0, F20
  1E0:  TRUNC.W.D F2, F0
  1E4:  MFC1      V1, F2
  1E8:  NOP
  1EC:  OR        V1, V1, S2
  1F0:  SB        V1, 0 (V0)
        .o1F4
  1F4:  LHU       A0, 76 (S3)
  1F8:  ADDU      A0, A0, S0
  1FC:  ADDIU     A0, A0, B4
  200:  SLL       A0, A0, 10
  204:  JAL       ~Func:cosine
  208:  SRA       A0, A0, 10
  20C:  CVT.D.S   F0, F0
  210:  ADD.D     F0, F0, F24
  214:  MUL.D     F0, F0, F22
  218:  NOP
  21C:  ADDIU     V0, SP, 50
  220:  C.LE.D    F20, F0
  224:  NOP
  228:  BC1T      .o240
  22C:  ADDU      V0, V0, S1
  230:  TRUNC.W.D F2, F0
  234:  MFC1      V1, F2
  238:  BEQ       R0, R0, .o258
  23C:  SB        V1, 0 (V0)
        .o240
  240:  SUB.D     F0, F0, F20
  244:  TRUNC.W.D F2, F0
  248:  MFC1      V1, F2
  24C:  NOP
  250:  OR        V1, V1, S2
  254:  SB        V1, 0 (V0)
        .o258
  258:  ADDIU     S1, S1, 1
  25C:  SLTI      V0, S1, 14
  260:  BNE       V0, R0, .o12C
  264:  ADDIU     S0, S0, 19
  268:  LW        V0, 7C (S5)
  26C:  LUI       V1, 8
  270:  AND       V0, V0, V1
  274:  BEQ       V0, R0, .o30C
  278:  CLEAR     S1
  27C:  ADDIU     S7, SP, 20
  280:  ADDIU     S6, SP, 38
  284:  ADDIU     S4, SP, 50
  288:  LI        S3, FF
  28C:  CLEAR     S0
        .o290
  290:  ADDU      V0, S7, S1
  294:  ADDU      A0, S6, S1
  298:  LBU       V1, 0 (V0)
  29C:  ADDU      V0, S4, S1
  2A0:  LBU       A0, 0 (A0)
  2A4:  LBU       V0, 0 (V0)
  2A8:  SLL       V1, V1, 18
  2AC:  SLL       A0, A0, 10
  2B0:  OR        V1, V1, A0
  2B4:  SLL       V0, V0, 8
  2B8:  OR        V1, V1, V0
  2BC:  ORI       S2, V1, FF
  2C0:  COPY      A1, S0
        .o2C4
  2C4:  LI        A2, C
  2C8:  COPY      A3, S1
  2CC:  SW        S2, 10 (SP)
  2D0:  SW        R0, 14 (SP)
  2D4:  SW        S3, 18 (SP)
  2D8:  SW        R0, 1C (SP)
  2DC:  LW        A0, 84 (S5)
  2E0:  JAL       802DE780
  2E4:  ADDIU     S0, S0, 1
  2E8:  SLTI      V0, S0, A
  2EC:  BNE       V0, R0, .o2C4
  2F0:  COPY      A1, S0
  2F4:  ADDIU     S1, S1, 1
  2F8:  SLTI      V0, S1, 14
  2FC:  BNE       V0, R0, .o290
  300:  CLEAR     S0
  304:  BEQ       R0, R0, .o36C
  308:  CLEAR     V0
        .o30C
  30C:  LI        S2, FF
  310:  COPY      S4, S2
  314:  CLEAR     S0
        .o318
  318:  COPY      A1, S0
        .o31C
  31C:  LI        A2, C
  320:  COPY      A3, S1
  324:  SW        S2, 10 (SP)
  328:  SW        R0, 14 (SP)
  32C:  SW        S4, 18 (SP)
  330:  SW        R0, 1C (SP)
  334:  LW        A0, 84 (S5)
  338:  JAL       802DE780
  33C:  ADDIU     S0, S0, 1
  340:  SLTI      V0, S0, A
  344:  BNE       V0, R0, .o31C
  348:  COPY      A1, S0
  34C:  ADDIU     S1, S1, 1
  350:  SLTI      V0, S1, 14
  354:  BNE       V0, R0, .o318
  358:  CLEAR     S0
  35C:  CLEAR     V0
  360:  SW        R0, 74 (S3)
  364:  SW        R0, 78 (S3)
  368:  SW        R0, 70 (S3)
        .o36C
  36C:  LW        RA, 88 (SP)
  370:  LW        S7, 84 (SP)
  374:  LW        S6, 80 (SP)
  378:  LW        S5, 7C (SP)
  37C:  LW        S4, 78 (SP)
  380:  LW        S3, 74 (SP)
  384:  LW        S2, 70 (SP)
  388:  LW        S1, 6C (SP)
  38C:  LW        S0, 68 (SP)
  390:  LDC1      F24, A0 (SP)
  394:  LDC1      F22, 98 (SP)
  398:  LDC1      F20, 90 (SP)
  39C:  JR        RA
  3A0:  ADDIU     SP, SP, A8
}

#new:Function $Function_8021C004
{
    0:  ADDIU     SP, SP, FFE8
    4:  SW        S0, 10 (SP)
    8:  COPY      S0, A0
    C:  BEQ       A1, R0, .o48
   10:  SW        RA, 14 (SP)
   14:  JAL       ~Func:mdl_set_all_fog_mode
   18:  LI        A0, 1
   1C:  CLEAR     A0
   20:  COPY      A1, A0
   24:  COPY      A2, A0
   28:  COPY      A3, A0
   2C:  LAW       V0, 801512F0
   34:  LI        V1, 1
   38:  JAL       ~Func:set_background_color_blend
   3C:  SB        V1, 0 (V0)
   40:  LI        V0, 14
   44:  SW        V0, 70 (S0)
        .o48
   48:  CLEAR     A0
   4C:  COPY      A1, A0
   50:  COPY      A2, A0
   54:  LW        V1, 70 (S0)
   58:  LI        V0, 14
   5C:  SUBU      V0, V0, V1
   60:  SLL       A3, V0, 2
   64:  ADDU      A3, A3, V0
   68:  SLL       A3, A3, 1
   6C:  JAL       ~Func:set_background_color_blend
   70:  ANDI      A3, A3, FE
   74:  LW        V0, 70 (S0)
   78:  ADDIU     V0, V0, FFFF
   7C:  SW        V0, 70 (S0)
   80:  SLTIU     V0, V0, 1
   84:  LW        RA, 14 (SP)
   88:  LW        S0, 10 (SP)
   8C:  SLL       V0, V0, 1
   90:  JR        RA
   94:  ADDIU     SP, SP, 18
}

#new:Function $Function_8021C09C
{
    0:  ADDIU     SP, SP, FFE8
    4:  SW        S0, 10 (SP)
    8:  COPY      S0, A0
    C:  BEQ       A1, R0, .o1C
   10:  SW        RA, 14 (SP)
   14:  LI        V0, 14
   18:  SW        V0, 70 (S0)
        .o1C
   1C:  CLEAR     A0
   20:  COPY      A1, A0
   24:  LW        V0, 70 (S0)
   28:  COPY      A2, A0
   2C:  SLL       A3, V0, 2
   30:  ADDU      A3, A3, V0
   34:  SLL       A3, A3, 1
   38:  JAL       ~Func:set_background_color_blend
   3C:  ANDI      A3, A3, FE
   40:  LW        V0, 70 (S0)
   44:  ADDIU     V0, V0, FFFF
   48:  BEQ       V0, R0, .o58
   4C:  SW        V0, 70 (S0)
   50:  BEQ       R0, R0, .o70
   54:  CLEAR     V0
        .o58
   58:  CLEAR     A0
   5C:  COPY      A1, A0
   60:  COPY      A2, A0
   64:  JAL       ~Func:set_background_color_blend
   68:  COPY      A3, A0
   6C:  LI        V0, 2
        .o70
   70:  LW        RA, 14 (SP)
   74:  LW        S0, 10 (SP)
   78:  JR        RA
   7C:  ADDIU     SP, SP, 18
}

#new:Function $Function_8021C11C
{
    0:  ADDIU     SP, SP, FFE8
    4:  SW        RA, 10 (SP)
    8:  JAL       ~Func:get_actor
    C:  LW        A0, 148 (A0)
   10:  LH        A0, 436 (V0)
   14:  SB        R0, 224 (V0)
   18:  JAL       ~Func:remove_status_4
   1C:  SB        R0, 223 (V0)
   20:  LW        RA, 10 (SP)
   24:  LI        V0, 2
   28:  JR        RA
   2C:  ADDIU     SP, SP, 18
}

#new:Function $Function_8021C14C
{
    0:  ADDIU     SP, SP, FFA8
    4:  SW        S1, 1C (SP)
    8:  COPY      S1, A0
    C:  SW        S2, 20 (SP)
   10:  SW        RA, 2C (SP)
   14:  SW        S4, 28 (SP)
   18:  SW        S3, 24 (SP)
   1C:  SW        S0, 18 (SP)
   20:  SDC1      F28, 50 (SP)
   24:  SDC1      F26, 48 (SP)
   28:  SDC1      F24, 40 (SP)
   2C:  SDC1      F22, 38 (SP)
   30:  SDC1      F20, 30 (SP)
   34:  LW        A0, 148 (S1)
   38:  LW        S0, C (S1)
   3C:  JAL       ~Func:get_actor
   40:  COPY      S2, A1
   44:  COPY      S3, V0
   48:  BEQ       S3, R0, .o3A0
   4C:  LI        V0, 2
   50:  BEQ       S2, R0, .o144
   54:  COPY      A0, S1
   58:  LW        A1, 0 (S0)
   5C:  ADDIU     S0, S0, 4
   60:  JAL       ~Func:get_variable
   64:  CLEAR     S2
   68:  LW        A1, 0 (S0)
   6C:  ADDIU     S0, S0, 4
   70:  MTC1      V0, F28
   74:  NOP
   78:  CVT.S.W   F28, F28
   7C:  JAL       ~Func:get_variable
   80:  COPY      A0, S1
   84:  LW        A1, 0 (S0)
   88:  ADDIU     S0, S0, 4
   8C:  MTC1      V0, F26
   90:  NOP
   94:  CVT.S.W   F26, F26
   98:  JAL       ~Func:get_variable
   9C:  COPY      A0, S1
   A0:  LW        A1, 0 (S0)
   A4:  ADDIU     S0, S0, 4
   A8:  MTC1      V0, F24
   AC:  NOP
   B0:  CVT.S.W   F24, F24
   B4:  JAL       ~Func:get_float_variable
   B8:  COPY      A0, S1
   BC:  COPY      A0, S1
   C0:  LW        A1, 0 (S0)
   C4:  JAL       ~Func:get_float_variable
   C8:  MOV.S     F20, F0
   CC:  LI        A0, B4
   D0:  JAL       ~Func:heap_malloc
   D4:  MOV.S     F22, F0
   D8:  COPY      S1, V0
   DC:  LI        A2, 28
   E0:  LI        A1, FF
   E4:  LI        A0, 1
   E8:  ADDIU     V1, S1, 38
   EC:  SW        S1, 78 (S3)
        .oF0
   F0:  SWC1      F28, FFCC (V1)
   F4:  SWC1      F26, FFD0 (V1)
   F8:  SWC1      F24, FFD4 (V1)
   FC:  SWC1      F20, FFE0 (V1)
  100:  SWC1      F20, FFD8 (V1)
  104:  SWC1      F22, FFDC (V1)
  108:  SW        A0, FFE4 (V1)
  10C:  SW        A2, FFE8 (V1)
  110:  SW        A1, FFEC (V1)
  114:  SW        A1, FFF0 (V1)
  118:  SW        R0, FFF4 (V1)
  11C:  SW        R0, FFF8 (V1)
  120:  SW        R0, FFFC (V1)
  124:  SW        R0, 0 (V1)
  128:  ADDIU     V1, V1, 3C
  12C:  ADDIU     S2, S2, 1
  130:  SLTI      V0, S2, 3
  134:  BNE       V0, R0, .oF0
  138:  ADDIU     A0, A0, A
  13C:  BEQ       R0, R0, .o3A0
  140:  CLEAR     V0
        .o144
  144:  CLEAR     S4
  148:  COPY      S2, S4
  14C:  LW        S1, 78 (S3)
  150:  LIF       F24, 0.09951172
  15C:  LIF       F22, 0.5
  164:  LIF       F20, 255.0
  16C:  ADDIU     S0, S1, 28
        .o170
  170:  LW        V0, FFF4 (S0)
  174:  BLEZ      V0, .o1E8
  178:  ADDIU     V0, V0, FFFF
  17C:  BGTZ      V0, .o374
  180:  SW        V0, FFF4 (S0)
  184:  LWC1      F0, FFF0 (S0)
  188:  LI        V0, FFFF
  18C:  SW        V0, 14 (SP)
  190:  SWC1      F0, 10 (SP)
  194:  LW        A1, FFDC (S0)
  198:  LW        A2, FFE0 (S0)
  19C:  LW        A3, FFE4 (S0)
  1A0:  JAL       ~Func:playFX_85
  1A4:  CLEAR     A0
  1A8:  SW        V0, 0 (S1)
  1AC:  LW        V0, C (V0)
  1B0:  LWC1      F0, 4 (S0)
  1B4:  SWC1      F0, 3C (V0)
  1B8:  LW        V0, 0 (S1)
  1BC:  LWC1      F0, 8 (S0)
  1C0:  LW        V0, C (V0)
  1C4:  SWC1      F0, 40 (V0)
  1C8:  LW        V0, 0 (S1)
  1CC:  LWC1      F0, C (S0)
  1D0:  LW        V0, C (V0)
  1D4:  SWC1      F0, 44 (V0)
  1D8:  LW        V0, 0 (S1)
  1DC:  LW        V0, C (V0)
  1E0:  BEQ       R0, R0, .o374
  1E4:  SH        R0, 0 (V0)
        .o1E8
  1E8:  LW        V0, 10 (S0)
  1EC:  BEQ       V0, R0, .o1FC
  1F0:  NOP
  1F4:  BEQ       R0, R0, .o374
  1F8:  ADDIU     S4, S4, 1
        .o1FC
  1FC:  LWC1      F0, FFE8 (S0)
  200:  LWC1      F8, FFEC (S0)
  204:  SUB.S     F0, F0, F8
  208:  LWC1      F2, FFF8 (S0)
  20C:  CVT.S.W   F2, F2
  210:  ABS.S     F0, F0
  214:  MUL.S     F0, F0, F2
  218:  NOP
  21C:  LWC1      F6, C (S0)
  220:  LIF       F2, 9.0
  228:  LIF       F4, 40.0
  230:  ADD.S     F6, F6, F2
  234:  LW        V1, FFF8 (S0)
  238:  DIV.S     F0, F0, F4
  23C:  ADD.S     F0, F0, F8
  240:  SLTI      V0, V1, B
  244:  SWC1      F6, C (S0)
  248:  BEQ       V0, R0, .o2BC
  24C:  SWC1      F0, FFF0 (S0)
  250:  SRL       V0, V1, 1F
  254:  ADDU      V0, V1, V0
  258:  SRA       V0, V0, 1
  25C:  MTC1      V0, F2
  260:  NOP
  264:  CVT.S.W   F2, F2
  268:  COPY      V0, V1
  26C:  MUL.S     F2, F2, F24
  270:  NOP
  274:  SRL       V1, V0, 1F
  278:  ADDU      V0, V0, V1
  27C:  SRA       V0, V0, 1
  280:  MTC1      V0, F0
  284:  NOP
  288:  CVT.S.W   F0, F0
  28C:  MUL.S     F0, F0, F24
  290:  NOP
  294:  ADD.S     F2, F2, F22
  298:  MUL.S     F2, F2, F20
  29C:  NOP
  2A0:  ADD.S     F0, F0, F22
  2A4:  MUL.S     F0, F0, F20
  2A8:  NOP
  2AC:  TRUNC.W.S F10, F2
  2B0:  SWC1      F10, FFFC (S0)
  2B4:  TRUNC.W.S F10, F0
  2B8:  SWC1      F10, 0 (S0)
        .o2BC
  2BC:  LW        V0, FFF8 (S0)
  2C0:  ADDIU     V0, V0, FFFF
  2C4:  BGTZ      V0, .o2E4
  2C8:  SW        V0, FFF8 (S0)
  2CC:  LW        A0, 0 (S1)
  2D0:  JAL       ~Func:remove_effect
  2D4:  NOP
  2D8:  LI        V0, 1
  2DC:  BEQ       R0, R0, .o374
  2E0:  SW        V0, 10 (S0)
        .o2E4
  2E4:  LW        V0, 0 (S1)
  2E8:  LWC1      F0, FFDC (S0)
  2EC:  LW        V0, C (V0)
  2F0:  SWC1      F0, 4 (V0)
  2F4:  LW        V0, 0 (S1)
  2F8:  LWC1      F0, FFE0 (S0)
  2FC:  LW        V0, C (V0)
  300:  SWC1      F0, 8 (V0)
  304:  LW        V0, 0 (S1)
  308:  LWC1      F0, FFE4 (S0)
  30C:  LW        V0, C (V0)
  310:  SWC1      F0, C (V0)
  314:  LW        V0, 0 (S1)
  318:  LWC1      F0, 4 (S0)
  31C:  LW        V0, C (V0)
  320:  SWC1      F0, 3C (V0)
  324:  LW        V0, 0 (S1)
  328:  LWC1      F0, 8 (S0)
  32C:  LW        V0, C (V0)
  330:  SWC1      F0, 40 (V0)
  334:  LW        V0, 0 (S1)
  338:  LWC1      F0, C (S0)
  33C:  LW        V0, C (V0)
  340:  SWC1      F0, 44 (V0)
  344:  LW        V0, 0 (S1)
  348:  LWC1      F0, FFF0 (S0)
  34C:  LW        V0, C (V0)
  350:  SWC1      F0, 38 (V0)
  354:  LW        V0, 0 (S1)
  358:  LW        V1, C (V0)
  35C:  LW        V0, FFFC (S0)
  360:  SW        V0, 24 (V1)
  364:  LW        V0, 0 (S1)
  368:  LW        V1, C (V0)
  36C:  LW        V0, 0 (S0)
  370:  SW        V0, 34 (V1)
        .o374
  374:  ADDIU     S0, S0, 3C
  378:  ADDIU     S2, S2, 1
  37C:  SLTI      V0, S2, 3
  380:  BNE       V0, R0, .o170
  384:  ADDIU     S1, S1, 3C
  388:  SLTI      V0, S4, 3
  38C:  BNE       V0, R0, .o3A0
  390:  CLEAR     V0
  394:  JAL       ~Func:heap_free
  398:  COPY      A0, S1
  39C:  LI        V0, 2
        .o3A0
  3A0:  LW        RA, 2C (SP)
  3A4:  LW        S4, 28 (SP)
  3A8:  LW        S3, 24 (SP)
  3AC:  LW        S2, 20 (SP)
  3B0:  LW        S1, 1C (SP)
  3B4:  LW        S0, 18 (SP)
  3B8:  LDC1      F28, 50 (SP)
  3BC:  LDC1      F26, 48 (SP)
  3C0:  LDC1      F24, 40 (SP)
  3C4:  LDC1      F22, 38 (SP)
  3C8:  LDC1      F20, 30 (SP)
  3CC:  JR        RA
  3D0:  ADDIU     SP, SP, 58
}

#new:Function $Function_8021C520
{
    0:  ADDIU     SP, SP, FFB0
    4:  SW        S1, 1C (SP)
    8:  COPY      S1, A0
    C:  SW        S2, 20 (SP)
   10:  SW        RA, 2C (SP)
   14:  SW        S4, 28 (SP)
   18:  SW        S3, 24 (SP)
   1C:  SW        S0, 18 (SP)
   20:  SDC1      F26, 48 (SP)
   24:  SDC1      F24, 40 (SP)
   28:  SDC1      F22, 38 (SP)
   2C:  SDC1      F20, 30 (SP)
   30:  LW        A0, 148 (S1)
   34:  LW        S0, C (S1)
   38:  JAL       ~Func:get_actor
   3C:  COPY      S2, A1
   40:  COPY      S4, V0
   44:  BEQ       S4, R0, .o424
   48:  LI        V0, 2
   4C:  BEQ       S2, R0, .o154
   50:  CLEAR     S3
   54:  LW        A1, 0 (S0)
   58:  ADDIU     S0, S0, 4
   5C:  JAL       ~Func:get_variable
   60:  COPY      A0, S1
   64:  LW        A1, 0 (S0)
   68:  ADDIU     S0, S0, 4
   6C:  MTC1      V0, F26
   70:  NOP
   74:  CVT.S.W   F26, F26
   78:  JAL       ~Func:get_variable
   7C:  COPY      A0, S1
   80:  LW        A1, 0 (S0)
   84:  ADDIU     S0, S0, 4
   88:  MTC1      V0, F24
   8C:  NOP
   90:  CVT.S.W   F24, F24
   94:  JAL       ~Func:get_variable
   98:  COPY      A0, S1
   9C:  LW        A1, 0 (S0)
   A0:  MTC1      V0, F22
   A4:  NOP
   A8:  CVT.S.W   F22, F22
   AC:  JAL       ~Func:get_float_variable
   B0:  COPY      A0, S1
   B4:  LB        V1, 210 (S4)
   B8:  LI        V0, A
   BC:  BNE       V1, V0, .oDC
   C0:  MOV.S     F20, F0
   C4:  LAD       F2, $ConstDouble_80234830
   CC:  CVT.D.S   F0, F20
   D0:  MUL.D     F0, F0, F2
   D4:  NOP
   D8:  CVT.S.D   F20, F0
        .oDC
   DC:  JAL       ~Func:heap_malloc
   E0:  LI        A0, 9C
   E4:  COPY      S1, V0
   E8:  CLEAR     S2
   EC:  LI        A2, 32
   F0:  LI        A1, FF
   F4:  LI        A0, 1
   F8:  LIF       F0, 90.0
  100:  ADDIU     V1, S1, 30
  104:  SW        S1, 78 (S4)
        .o108
  108:  SWC1      F26, FFD4 (V1)
  10C:  SWC1      F24, FFD8 (V1)
  110:  SWC1      F22, FFDC (V1)
  114:  SWC1      F20, FFE0 (V1)
  118:  SW        A0, FFE4 (V1)
  11C:  SW        A2, FFE8 (V1)
  120:  SW        A1, FFEC (V1)
  124:  SW        A1, FFF0 (V1)
  128:  SWC1      F0, FFF4 (V1)
  12C:  SW        R0, FFF8 (V1)
  130:  SW        R0, FFFC (V1)
  134:  SW        R0, 0 (V1)
  138:  ADDIU     V1, V1, 34
  13C:  ADDIU     S2, S2, 1
  140:  SLTI      V0, S2, 3
  144:  BNE       V0, R0, .o108
  148:  ADDIU     A0, A0, 10
  14C:  BEQ       R0, R0, .o424
  150:  CLEAR     V0
        .o154
  154:  LW        S1, 78 (S4)
  158:  COPY      S2, S3
  15C:  ADDIU     S0, S1, 30
        .o160
  160:  LW        V0, FFE4 (S0)
  164:  BLEZ      V0, .o1CC
  168:  ADDIU     V0, V0, FFFF
  16C:  BGTZ      V0, .o3F8
  170:  SW        V0, FFE4 (S0)
  174:  LWC1      F0, FFE0 (S0)
  178:  LI        V0, FFFF
  17C:  SW        V0, 14 (SP)
  180:  SWC1      F0, 10 (SP)
  184:  LW        A1, FFD4 (S0)
  188:  LW        A2, FFD8 (S0)
  18C:  LW        A3, FFDC (S0)
  190:  JAL       ~Func:playFX_85
  194:  CLEAR     A0
  198:  SW        V0, 0 (S1)
  19C:  LW        V0, C (V0)
  1A0:  LWC1      F0, FFF4 (S0)
  1A4:  SWC1      F0, 3C (V0)
  1A8:  LW        V0, 0 (S1)
  1AC:  LWC1      F0, FFF8 (S0)
  1B0:  LW        V0, C (V0)
  1B4:  SWC1      F0, 40 (V0)
  1B8:  LW        V0, 0 (S1)
  1BC:  LWC1      F0, FFFC (S0)
  1C0:  LW        V0, C (V0)
  1C4:  BEQ       R0, R0, .o3F8
  1C8:  SWC1      F0, 44 (V0)
        .o1CC
  1CC:  LW        V0, 0 (S0)
  1D0:  BEQ       V0, R0, .o1E0
  1D4:  LI        V0, A
  1D8:  BEQ       R0, R0, .o3F8
  1DC:  ADDIU     S3, S3, 1
        .o1E0
  1E0:  LB        V1, 210 (S4)
  1E4:  BEQ       V1, V0, .o26C
  1E8:  NOP
  1EC:  LWC1      F2, FFD8 (S0)
  1F0:  LIF       F1, 3.21875
  1F8:  MTC1      R0, F0
  1FC:  CVT.D.S   F2, F2
  200:  C.LT.D    F2, F0
  204:  LIF       F1, 2.28125
  20C:  MTC1      R0, F0
  210:  BC1TL     .o2E8
  214:  ADD.D     F0, F2, F0
  218:  LAD       F0, $ConstDouble_80234838
  220:  C.LT.D    F2, F0
  224:  LAD       F0, $ConstDouble_80234840
  22C:  BC1TL     .o2E8
  230:  ADD.D     F0, F2, F0
  234:  LIF       F1, 3.46875
  23C:  MTC1      R0, F0
  240:  NOP
  244:  C.LT.D    F2, F0
  248:  LAD       F0, $ConstDouble_80234848
  250:  BC1TL     .o2E8
  254:  ADD.D     F0, F2, F0
  258:  LIF       F1, 1.9375
  260:  MTC1      R0, F0
  264:  BEQ       R0, R0, .o2E8
  268:  ADD.D     F0, F2, F0
        .o26C
  26C:  LWC1      F2, FFD8 (S0)
  270:  LIF       F1, 2.875
  278:  MTC1      R0, F0
  27C:  CVT.D.S   F2, F2
  280:  C.LT.D    F2, F0
  284:  LAD       F0, $ConstDouble_80234850
  28C:  BC1TL     .o2E8
  290:  ADD.D     F0, F2, F0
  294:  LIF       F1, 3.03125
  29C:  MTC1      R0, F0
  2A0:  NOP
  2A4:  C.LT.D    F2, F0
  2A8:  LAD       F0, $ConstDouble_80234858
  2B0:  BC1TL     .o2E8
  2B4:  ADD.D     F0, F2, F0
  2B8:  LIF       F1, 3.125
  2C0:  MTC1      R0, F0
  2C4:  NOP
  2C8:  C.LT.D    F2, F0
  2CC:  LAD       F0, $ConstDouble_80234860
  2D4:  BC1FL     .o2E8
  2D8:  ADD.D     F0, F2, F0
  2DC:  LAD       F0, $ConstDouble_80234868
  2E4:  ADD.D     F0, F2, F0
        .o2E8
  2E8:  CVT.S.D   F0, F0
  2EC:  SWC1      F0, FFD8 (S0)
  2F0:  LWC1      F0, FFF8 (S0)
  2F4:  LIF       F2, 18.0
  2FC:  LW        V1, FFE8 (S0)
  300:  ADD.S     F0, F0, F2
  304:  SLTI      V0, V1, 11
  308:  BEQ       V0, R0, .o344
  30C:  SWC1      F0, FFF8 (S0)
  310:  SLL       V0, V1, 8
  314:  SUBU      V1, V0, V1
  318:  BLTZL     V1, .o320
  31C:  ADDIU     V1, V1, F
        .o320
  320:  LW        V0, FFE8 (S0)
  324:  SRA       V1, V1, 4
  328:  SW        V1, FFEC (S0)
  32C:  SLL       V1, V0, 8
  330:  SUBU      V0, V1, V0
  334:  BLTZL     V0, .o33C
  338:  ADDIU     V0, V0, F
        .o33C
  33C:  SRA       V0, V0, 4
  340:  SW        V0, FFF0 (S0)
        .o344
  344:  LW        V0, 0 (S1)
  348:  LWC1      F0, FFD4 (S0)
  34C:  LW        V0, C (V0)
  350:  SWC1      F0, 4 (V0)
  354:  LW        V0, 0 (S1)
  358:  LWC1      F0, FFD8 (S0)
  35C:  LW        V0, C (V0)
  360:  SWC1      F0, 8 (V0)
  364:  LW        V0, 0 (S1)
  368:  LWC1      F0, FFDC (S0)
  36C:  LW        V0, C (V0)
  370:  SWC1      F0, C (V0)
  374:  LW        V0, 0 (S1)
  378:  LWC1      F0, FFF4 (S0)
  37C:  LW        V0, C (V0)
  380:  SWC1      F0, 3C (V0)
  384:  LW        V0, 0 (S1)
  388:  LWC1      F0, FFF8 (S0)
  38C:  LW        V0, C (V0)
  390:  SWC1      F0, 40 (V0)
  394:  LW        V0, 0 (S1)
  398:  LWC1      F0, FFFC (S0)
  39C:  LW        V0, C (V0)
  3A0:  SWC1      F0, 44 (V0)
  3A4:  LW        V0, 0 (S1)
  3A8:  LWC1      F0, FFE0 (S0)
  3AC:  LW        V0, C (V0)
  3B0:  SWC1      F0, 38 (V0)
  3B4:  LW        V0, 0 (S1)
  3B8:  LW        V1, C (V0)
  3BC:  LW        V0, FFEC (S0)
  3C0:  SW        V0, 24 (V1)
  3C4:  LW        V0, 0 (S1)
  3C8:  LW        V1, C (V0)
  3CC:  LW        V0, FFF0 (S0)
  3D0:  SW        V0, 34 (V1)
  3D4:  LW        V0, FFE8 (S0)
  3D8:  ADDIU     V0, V0, FFFF
  3DC:  BGTZ      V0, .o3F8
  3E0:  SW        V0, FFE8 (S0)
  3E4:  LW        A0, 0 (S1)
  3E8:  JAL       ~Func:remove_effect
  3EC:  NOP
  3F0:  LI        V0, 1
  3F4:  SW        V0, 0 (S0)
        .o3F8
  3F8:  ADDIU     S0, S0, 34
  3FC:  ADDIU     S2, S2, 1
  400:  SLTI      V0, S2, 3
  404:  BNE       V0, R0, .o160
  408:  ADDIU     S1, S1, 34
  40C:  SLTI      V0, S3, 3
  410:  BNE       V0, R0, .o424
  414:  CLEAR     V0
  418:  JAL       ~Func:heap_free
  41C:  COPY      A0, S1
  420:  LI        V0, 2
        .o424
  424:  LW        RA, 2C (SP)
  428:  LW        S4, 28 (SP)
  42C:  LW        S3, 24 (SP)
  430:  LW        S2, 20 (SP)
  434:  LW        S1, 1C (SP)
  438:  LW        S0, 18 (SP)
  43C:  LDC1      F26, 48 (SP)
  440:  LDC1      F24, 40 (SP)
  444:  LDC1      F22, 38 (SP)
  448:  LDC1      F20, 30 (SP)
  44C:  JR        RA
  450:  ADDIU     SP, SP, 50
}

#new:Function $Function_8021C974
{
    0:  ADDIU     SP, SP, FFE0
    4:  SW        S1, 14 (SP)
    8:  COPY      S1, A0
    C:  SW        S2, 18 (SP)
   10:  LA        S2, 800DC070
   18:  SW        RA, 1C (SP)
   1C:  SW        S0, 10 (SP)
   20:  LW        S0, C (S1)
   24:  LB        A2, 97 (S2)
   28:  LW        A1, 0 (S0)
   2C:  JAL       ~Func:set_variable
   30:  ADDIU     S0, S0, 4
   34:  LW        A1, 0 (S0)
   38:  LB        A2, 96 (S2)
   3C:  JAL       ~Func:set_variable
   40:  COPY      A0, S1
   44:  LW        RA, 1C (SP)
   48:  LW        S2, 18 (SP)
   4C:  LW        S1, 14 (SP)
   50:  LW        S0, 10 (SP)
   54:  LI        V0, 2
   58:  JR        RA
   5C:  ADDIU     SP, SP, 20
}

#new:Function $Function_GetPlayerPercentHP
{
    0:  ADDIU     SP, SP, FFE8
    4:  LA        V1, 8010F290
    C:  SW        RA, 10 (SP)
   10:  LB        V0, 2 (V1)
   14:  SLL       A2, V0, 1
   18:  ADDU      A2, A2, V0
   1C:  SLL       A2, A2, 3
   20:  ADDU      A2, A2, V0
   24:  LB        V0, 3 (V1)
   28:  SLL       A2, A2, 2
   2C:  BNE       V0, R0, .o38
   30:  DIV       A2, V0
   34:  BREAK     1C00
        .o38
   38:  LI        AT, FFFF
   3C:  BNE       V0, AT, .o50
   40:  LUI       AT, 8000
   44:  BNE       A2, AT, .o50
   48:  NOP
   4C:  BREAK     1800
        .o50
   50:  MFLO      A2
   54:  LW        V0, C (A0)
   58:  JAL       ~Func:set_variable
   5C:  LW        A1, 0 (V0)
   60:  LW        RA, 10 (SP)
   64:  LI        V0, 2
   68:  JR        RA
   6C:  ADDIU     SP, SP, 18
}

#new:Function $Function_8021CA44
{
    0:  ADDIU     SP, SP, FFD8
    4:  SW        S2, 18 (SP)
    8:  COPY      S2, A0
    C:  SW        RA, 1C (SP)
   10:  SW        S1, 14 (SP)
   14:  SW        S0, 10 (SP)
   18:  SDC1      F20, 20 (SP)
   1C:  BEQ       A1, R0, .o130
   20:  LW        S0, C (S2)
   24:  JAL       ~Func:heap_malloc
   28:  LI        A0, 24
   2C:  COPY      S1, V0
   30:  SW        S1, 70 (S2)
   34:  LW        A1, 0 (S0)
   38:  ADDIU     S0, S0, 4
   3C:  JAL       ~Func:get_variable
   40:  COPY      A0, S2
   44:  SW        V0, 20 (S1)
   48:  LW        A1, 0 (S0)
   4C:  ADDIU     S0, S0, 4
   50:  JAL       ~Func:get_float_variable
   54:  COPY      A0, S2
   58:  SWC1      F0, 0 (S1)
   5C:  LW        A1, 0 (S0)
   60:  ADDIU     S0, S0, 4
   64:  JAL       ~Func:get_float_variable
   68:  COPY      A0, S2
   6C:  SWC1      F0, 4 (S1)
   70:  LW        A1, 0 (S0)
   74:  ADDIU     S0, S0, 4
   78:  JAL       ~Func:get_float_variable
   7C:  COPY      A0, S2
   80:  SWC1      F0, 8 (S1)
   84:  LW        A1, 0 (S0)
   88:  ADDIU     S0, S0, 4
   8C:  JAL       ~Func:get_variable
   90:  COPY      A0, S2
   94:  SW        V0, 1C (S1)
   98:  LW        A1, 0 (S0)
   9C:  JAL       ~Func:get_float_variable
   A0:  COPY      A0, S2
   A4:  LW        A0, 20 (S1)
   A8:  JAL       ~Func:get_item_entity
   AC:  SWC1      F0, 10 (S1)
   B0:  COPY      S0, V0
   B4:  LWC1      F12, 8 (S0)
   B8:  LWC1      F14, 10 (S0)
   BC:  LW        A2, 0 (S1)
   C0:  JAL       ~Func:dist2D
   C4:  LW        A3, 8 (S1)
   C8:  LWC1      F12, 8 (S0)
   CC:  LWC1      F14, 10 (S0)
   D0:  LW        A2, 0 (S1)
   D4:  LW        A3, 8 (S1)
   D8:  JAL       ~Func:atan2
   DC:  MOV.S     F20, F0
   E0:  LWC1      F4, 10 (S1)
   E4:  LWC1      F6, 1C (S1)
   E8:  CVT.S.W   F6, F6
   EC:  MUL.S     F4, F4, F6
   F0:  NOP
   F4:  LIF       F2, 0.5
   FC:  NOP
  100:  MUL.S     F4, F4, F2
  104:  NOP
  108:  SWC1      F0, C (S1)
  10C:  LWC1      F0, 4 (S1)
  110:  LWC1      F2, C (S0)
  114:  SUB.S     F0, F0, F2
  118:  MOV.S     F2, F6
  11C:  DIV.S     F0, F0, F6
  120:  ADD.S     F4, F4, F0
  124:  DIV.S     F20, F20, F2
  128:  SWC1      F20, 14 (S1)
  12C:  SWC1      F4, 18 (S1)
        .o130
  130:  LW        S1, 70 (S2)
  134:  JAL       ~Func:get_item_entity
  138:  LW        A0, 20 (S1)
  13C:  COPY      S0, V0
  140:  BNE       S0, R0, .o158
  144:  NOP
  148:  JAL       ~Func:heap_free
  14C:  LW        A0, 70 (S2)
  150:  BEQ       R0, R0, .o1FC
  154:  LI        V0, 2
        .o158
  158:  LWC1      F12, C (S1)
  15C:  JAL       ~Func:sin_deg
  160:  NOP
  164:  LWC1      F2, 14 (S1)
  168:  MUL.S     F2, F2, F0
  16C:  NOP
  170:  LWC1      F0, 8 (S0)
  174:  ADD.S     F0, F0, F2
  178:  SWC1      F0, 8 (S0)
  17C:  JAL       ~Func:cos_deg
  180:  LWC1      F12, C (S1)
  184:  LWC1      F2, 14 (S1)
  188:  MUL.S     F2, F2, F0
  18C:  NOP
  190:  LWC1      F0, 10 (S0)
  194:  SUB.S     F0, F0, F2
  198:  SWC1      F0, 10 (S0)
  19C:  LWC1      F0, C (S0)
  1A0:  LWC1      F2, 18 (S1)
  1A4:  ADD.S     F0, F0, F2
  1A8:  SWC1      F0, C (S0)
  1AC:  LWC1      F0, 18 (S1)
  1B0:  LWC1      F2, 10 (S1)
  1B4:  LW        V0, 1C (S1)
  1B8:  SUB.S     F0, F0, F2
  1BC:  ADDIU     V0, V0, FFFF
  1C0:  SW        V0, 1C (S1)
  1C4:  BLTZ      V0, .o1D4
  1C8:  SWC1      F0, 18 (S1)
  1CC:  BEQ       R0, R0, .o1FC
  1D0:  CLEAR     V0
        .o1D4
  1D4:  LWC1      F0, 0 (S1)
  1D8:  SWC1      F0, 8 (S0)
  1DC:  LWC1      F0, 4 (S1)
  1E0:  SWC1      F0, C (S0)
  1E4:  LWC1      F0, 8 (S1)
  1E8:  SWC1      F0, 10 (S0)
  1EC:  SW        R0, 18 (S1)
  1F0:  JAL       ~Func:heap_free
  1F4:  LW        A0, 70 (S2)
  1F8:  LI        V0, 1
        .o1FC
  1FC:  LW        RA, 1C (SP)
  200:  LW        S2, 18 (SP)
  204:  LW        S1, 14 (SP)
  208:  LW        S0, 10 (SP)
  20C:  LDC1      F20, 20 (SP)
  210:  JR        RA
  214:  ADDIU     SP, SP, 28
}

#new:Function $Function_8021CC5C
{
    0:  ADDIU     SP, SP, FFE0
    4:  SW        S2, 18 (SP)
    8:  COPY      S2, A0
    C:  SW        RA, 1C (SP)
   10:  SW        S1, 14 (SP)
   14:  SW        S0, 10 (SP)
   18:  LW        S0, C (S2)
   1C:  LW        A1, 0 (S0)
   20:  JAL       ~Func:get_variable
   24:  ADDIU     S0, S0, 4
   28:  JAL       ~Func:get_item_entity
   2C:  COPY      A0, V0
   30:  LW        A1, 0 (S0)
   34:  ADDIU     S0, S0, 4
   38:  COPY      S1, V0
   3C:  LWC1      F0, 8 (S1)
   40:  TRUNC.W.S F2, F0
   44:  MFC1      A2, F2
   48:  JAL       ~Func:set_variable
   4C:  COPY      A0, S2
   50:  LW        A1, 0 (S0)
   54:  ADDIU     S0, S0, 4
   58:  LWC1      F0, C (S1)
   5C:  TRUNC.W.S F2, F0
   60:  MFC1      A2, F2
   64:  JAL       ~Func:set_variable
   68:  COPY      A0, S2
   6C:  LWC1      F0, 10 (S1)
   70:  LW        A1, 0 (S0)
   74:  TRUNC.W.S F2, F0
   78:  MFC1      A2, F2
   7C:  JAL       ~Func:set_variable
   80:  COPY      A0, S2
   84:  LW        RA, 1C (SP)
   88:  LW        S2, 18 (SP)
   8C:  LW        S1, 14 (SP)
   90:  LW        S0, 10 (SP)
   94:  LI        V0, 2
   98:  JR        RA
   9C:  ADDIU     SP, SP, 20
}

#new:Function $Function_8021CCFC
{
    0:  ADDIU     SP, SP, FFC0
    4:  SW        S3, 2C (SP)
    8:  COPY      S3, A0
    C:  SW        S0, 20 (SP)
   10:  CLEAR     S0
   14:  SW        S2, 28 (SP)
   18:  LA        S2, 800DC070
   20:  SW        S4, 30 (SP)
   24:  LA        S4, 8010F290
   2C:  SW        S5, 34 (SP)
   30:  LI        A0, FFFF
   34:  SW        RA, 38 (SP)
   38:  SW        S1, 24 (SP)
   3C:  LB        V0, AE (S2)
   40:  LW        S1, C (S3)
   44:  BNE       V0, A0, .o54
   48:  COPY      S5, S4
   4C:  SW        R0, 10 (SP)
   50:  LI        S0, 1
        .o54
   54:  LB        V0, AF (S2)
   58:  BNE       V0, A0, .o70
   5C:  SLL       V0, S0, 2
   60:  ADDU      V1, SP, V0
   64:  LI        V0, 1
   68:  SW        V0, 10 (V1)
   6C:  ADDU      S0, S0, V0
        .o70
   70:  LB        V0, B0 (S2)
   74:  BNE       V0, A0, .o8C
   78:  SLL       V0, S0, 2
   7C:  ADDU      V1, SP, V0
   80:  LI        V0, 2
   84:  SW        V0, 10 (V1)
   88:  ADDIU     S0, S0, 1
        .o8C
   8C:  JAL       ~Func:rand_int
   90:  LI        A0, 2
   94:  ADDIU     A0, S0, FFFF
   98:  JAL       ~Func:rand_int
   9C:  ADDIU     S0, V0, 2
   A0:  SLL       V0, V0, 2
   A4:  ADDU      V0, SP, V0
   A8:  LW        V1, 10 (V0)
   AC:  LI        V0, 1
   B0:  BEQ       V1, V0, .o124
   B4:  SLTI      V0, V1, 2
   B8:  BEQ       V0, R0, .oD0
   BC:  LI        V0, 2
   C0:  BEQL      V1, R0, .oE0
   C4:  SB        S0, AE (S2)
   C8:  BEQ       R0, R0, .o194
   CC:  NOP
        .oD0
   D0:  BEQL      V1, V0, .o16C
   D4:  SB        S0, B0 (S2)
   D8:  BEQ       R0, R0, .o194
   DC:  NOP
        .oE0
   E0:  LW        A1, 0 (S1)
   E4:  LB        V0, 1 (S4)
   E8:  ADDIU     S1, S1, 4
   EC:  SLL       V0, V0, 2
   F0:  LTW       A2, V0 ($IntTable_80230B28)
   FC:  JAL       ~Func:set_variable
  100:  COPY      A0, S3
  104:  LB        V0, 1 (S4)
  108:  LW        A1, 0 (S1)
  10C:  SLL       V0, V0, 2
  110:  LTW       A2, V0 ($IntTable_80230B34)
  11C:  BEQ       R0, R0, .o18C
  120:  COPY      A0, S3
        .o124
  124:  SB        S0, AF (S2)
  128:  LW        A1, 0 (S1)
  12C:  LB        V0, 0 (S5)
  130:  ADDIU     S1, S1, 4
  134:  SLL       V0, V0, 2
  138:  LTW       A2, V0 ($IntTable_80230B40)
  144:  JAL       ~Func:set_variable
  148:  COPY      A0, S3
  14C:  LB        V0, 0 (S5)
  150:  LW        A1, 0 (S1)
  154:  SLL       V0, V0, 2
  158:  LTW       A2, V0 ($IntTable_80230B4C)
  164:  BEQ       R0, R0, .o18C
  168:  COPY      A0, S3
        .o16C
  16C:  LW        A1, 0 (S1)
  170:  ADDIU     S1, S1, 4
  174:  COPY      A0, S3
  178:  JAL       ~Func:set_variable
  17C:  LI        A2, 16C
  180:  COPY      A0, S3
  184:  LW        A1, 0 (S1)
  188:  LI        A2, 4F
        .o18C
  18C:  JAL       ~Func:set_variable
  190:  NOP
        .o194
  194:  LW        RA, 38 (SP)
  198:  LW        S5, 34 (SP)
  19C:  LW        S4, 30 (SP)
  1A0:  LW        S3, 2C (SP)
  1A4:  LW        S2, 28 (SP)
  1A8:  LW        S1, 24 (SP)
  1AC:  LW        S0, 20 (SP)
  1B0:  LI        V0, 2
  1B4:  JR        RA
  1B8:  ADDIU     SP, SP, 40
}

#new:Function $Function_8021CEB8
{
    0:  ADDIU     SP, SP, FFE0
    4:  SW        S2, 18 (SP)
    8:  COPY      S2, A0
    C:  SW        RA, 1C (SP)
   10:  SW        S1, 14 (SP)
   14:  SW        S0, 10 (SP)
   18:  LW        A0, 148 (S2)
   1C:  JAL       ~Func:get_actor
   20:  LW        S0, C (S2)
   24:  LA        S1, 800DC070
   2C:  LB        V1, 210 (V0)
   30:  LI        V0, A
   34:  BEQ       V1, V0, .o6C
   38:  LI        V1, FFFF
   3C:  LB        V0, AE (S1)
   40:  BEQ       V0, V1, .o60
   44:  COPY      A0, S2
   48:  LB        V0, AF (S1)
   4C:  BEQ       V0, V1, .o60
   50:  NOP
   54:  LB        V0, B0 (S1)
   58:  BNE       V0, V1, .o70
   5C:  NOP
        .o60
   60:  LW        A1, 0 (S0)
   64:  BEQ       R0, R0, .o78
   68:  CLEAR     A2
        .o6C
   6C:  COPY      A0, S2
        .o70
   70:  LW        A1, 0 (S0)
   74:  LI        A2, FFFF
        .o78
   78:  JAL       ~Func:set_variable
   7C:  NOP
   80:  LI        V0, 2
   84:  LW        RA, 1C (SP)
   88:  LW        S2, 18 (SP)
   8C:  LW        S1, 14 (SP)
   90:  LW        S0, 10 (SP)
   94:  JR        RA
   98:  ADDIU     SP, SP, 20
}

#new:Function $Function_8021CF54
{
    0:  ADDIU     SP, SP, FFE8
    4:  SW        RA, 10 (SP)
    8:  LW        V0, C (A0)
    C:  JAL       ~Func:get_variable
   10:  LW        A1, 0 (V0)
   14:  LW        V1, C (V0)
   18:  LIF       F0, 0.03975586
   24:  NOP
   28:  SWC1      F0, 38 (V1)
   2C:  SWC1      F0, 30 (V1)
   30:  LW        V1, C (V0)
   34:  LIF       F0, 1.875
   3C:  NOP
   40:  SWC1      F0, 34 (V1)
   44:  LW        V1, C (V0)
   48:  LIF       F0, 0.04975586
   54:  NOP
   58:  SWC1      F0, 3C (V1)
   5C:  LW        RA, 10 (SP)
   60:  LI        V0, 2
   64:  JR        RA
   68:  ADDIU     SP, SP, 18
}

#new:Function $Function_8021CFC0
{
    0:  ADDIU     SP, SP, FF88
    4:  SW        S5, 3C (SP)
    8:  COPY      S5, A0
    C:  SW        S1, 2C (SP)
   10:  SW        RA, 4C (SP)
   14:  SW        S8, 48 (SP)
   18:  SW        S7, 44 (SP)
   1C:  SW        S6, 40 (SP)
   20:  SW        S4, 38 (SP)
   24:  SW        S3, 34 (SP)
   28:  SW        S2, 30 (SP)
   2C:  SW        S0, 28 (SP)
   30:  SDC1      F28, 70 (SP)
   34:  SDC1      F26, 68 (SP)
   38:  SDC1      F24, 60 (SP)
   3C:  SDC1      F22, 58 (SP)
   40:  SDC1      F20, 50 (SP)
   44:  LW        A0, 148 (S5)
   48:  LW        S3, C (S5)
   4C:  JAL       ~Func:get_actor
   50:  COPY      S1, A1
   54:  COPY      S0, V0
   58:  BEQ       S0, R0, .o28C
   5C:  LI        V0, 2
   60:  BEQ       S1, R0, .o15C
   64:  ADDIU     S4, S0, C
   68:  JAL       ~Func:heap_malloc
   6C:  LI        A0, 60
   70:  COPY      S1, V0
   74:  SW        S1, 78 (S0)
   78:  LW        A1, 0 (S3)
   7C:  ADDIU     S3, S3, 4
   80:  COPY      A0, S5
   84:  CLEAR     S8
   88:  COPY      S2, S8
   8C:  LI        S7, 3C
   90:  LI        S6, 2D
   94:  COPY      S4, S8
   98:  LIF       F28, 1.0
   A0:  LIF       F26, 10.0
   A8:  LIF       F24, 15.0
   B0:  JAL       ~Func:get_variable
   B4:  ADDIU     S0, S1, 18
   B8:  LW        A1, 0 (S3)
   BC:  MTC1      V0, F22
   C0:  NOP
   C4:  CVT.S.W   F22, F22
   C8:  JAL       ~Func:get_variable
   CC:  COPY      A0, S5
   D0:  MTC1      V0, F20
   D4:  NOP
   D8:  CVT.S.W   F20, F20
        .oDC
   DC:  LI        A0, 2
   E0:  MFC1      A1, F22
   E4:  LUI       A2, 4348
   E8:  MFC1      A3, F20
   EC:  ADDIU     S2, S2, 1
   F0:  SWC1      F22, 10 (SP)
   F4:  SW        R0, 14 (SP)
   F8:  SWC1      F20, 18 (SP)
   FC:  SWC1      F28, 1C (SP)
  100:  JAL       ~Func:playFX_5E
  104:  SW        S7, 20 (SP)
  108:  MTC1      S8, F0
  10C:  NOP
  110:  CVT.S.W   F0, F0
  114:  SW        V0, 0 (S1)
  118:  SWC1      F0, FFF0 (S0)
  11C:  MTC1      S4, F0
  120:  NOP
  124:  CVT.S.W   F0, F0
  128:  SW        S6, 4 (S0)
  12C:  SWC1      F22, FFEC (S0)
  130:  SWC1      F20, FFF4 (S0)
  134:  SWC1      F26, FFF8 (S0)
  138:  SWC1      F0, FFFC (S0)
  13C:  SWC1      F24, 0 (S0)
  140:  ADDIU     S0, S0, 20
  144:  ADDIU     S1, S1, 20
  148:  SLTI      V0, S2, 3
  14C:  BNE       V0, R0, .oDC
  150:  ADDIU     S4, S4, 78
  154:  BEQ       R0, R0, .o28C
  158:  CLEAR     V0
        .o15C
  15C:  CLEAR     S2
  160:  LW        S1, 78 (S0)
  164:  LIF       F23, 1.9375
  16C:  MTC1      R0, F22
  170:  ADDIU     S0, S1, 1C
        .o174
  174:  JAL       ~Func:cos_deg
  178:  LWC1      F12, FFF8 (S0)
  17C:  LWC1      F2, FFF4 (S0)
  180:  MUL.S     F0, F0, F2
  184:  NOP
  188:  LWC1      F20, FFE8 (S0)
  18C:  LWC1      F12, FFF8 (S0)
  190:  JAL       ~Func:sin_deg
  194:  ADD.S     F20, F20, F0
  198:  LW        V0, 0 (S1)
  19C:  LWC1      F4, FFF4 (S0)
  1A0:  LWC1      F2, FFF0 (S0)
  1A4:  LW        V0, C (V0)
  1A8:  SWC1      F20, 4 (V0)
  1AC:  LW        V0, 0 (S1)
  1B0:  LW        V0, C (V0)
  1B4:  SWC1      F20, 10 (V0)
  1B8:  LW        V0, 0 (S1)
  1BC:  MUL.S     F0, F0, F4
  1C0:  NOP
  1C4:  LW        V0, C (V0)
  1C8:  SWC1      F20, 1C (V0)
  1CC:  LW        V0, 0 (S1)
  1D0:  ADD.S     F2, F2, F0
  1D4:  LW        V0, C (V0)
  1D8:  SWC1      F2, C (V0)
  1DC:  LW        V0, 0 (S1)
  1E0:  LW        V0, C (V0)
  1E4:  SWC1      F2, 18 (V0)
  1E8:  LW        V0, 0 (S1)
  1EC:  LW        V0, C (V0)
  1F0:  SWC1      F2, 24 (V0)
  1F4:  LW        V0, 0 (S0)
  1F8:  SLTI      V0, V0, B
  1FC:  BNE       V0, R0, .o218
  200:  NOP
  204:  LWC1      F0, FFF4 (S0)
  208:  CVT.D.S   F0, F0
  20C:  ADD.D     F0, F0, F22
  210:  CVT.S.D   F0, F0
  214:  SWC1      F0, FFF4 (S0)
        .o218
  218:  LWC1      F0, FFF8 (S0)
  21C:  LWC1      F2, FFFC (S0)
  220:  LW        V0, 0 (S0)
  224:  ADD.S     F0, F0, F2
  228:  SLTI      V0, V0, 1F
  22C:  BNE       V0, R0, .o250
  230:  SWC1      F0, FFF8 (S0)
  234:  MOV.S     F0, F2
  238:  LAD       F2, $ConstDouble_80234870
  240:  CVT.D.S   F0, F0
  244:  SUB.D     F0, F0, F2
  248:  CVT.S.D   F0, F0
  24C:  SWC1      F0, FFFC (S0)
        .o250
  250:  ADDIU     S1, S1, 20
  254:  LW        V0, 0 (S0)
  258:  ADDIU     S2, S2, 1
  25C:  ADDIU     V0, V0, FFFF
  260:  SW        V0, 0 (S0)
  264:  SLTI      V0, S2, 3
  268:  BNE       V0, R0, .o174
  26C:  ADDIU     S0, S0, 20
  270:  LW        S1, 6C (S4)
  274:  LW        V0, 1C (S1)
  278:  BGTZ      V0, .o28C
  27C:  CLEAR     V0
  280:  JAL       ~Func:heap_free
  284:  COPY      A0, S1
  288:  LI        V0, 2
        .o28C
  28C:  LW        RA, 4C (SP)
  290:  LW        S8, 48 (SP)
  294:  LW        S7, 44 (SP)
  298:  LW        S6, 40 (SP)
  29C:  LW        S5, 3C (SP)
  2A0:  LW        S4, 38 (SP)
  2A4:  LW        S3, 34 (SP)
  2A8:  LW        S2, 30 (SP)
  2AC:  LW        S1, 2C (SP)
  2B0:  LW        S0, 28 (SP)
  2B4:  LDC1      F28, 70 (SP)
  2B8:  LDC1      F26, 68 (SP)
  2BC:  LDC1      F24, 60 (SP)
  2C0:  LDC1      F22, 58 (SP)
  2C4:  LDC1      F20, 50 (SP)
  2C8:  JR        RA
  2CC:  ADDIU     SP, SP, 78
}

#new:Function $Function_8021D290
{
    0:  LW        A0, C0 (A0)
    4:  LW        V1, C (A0)
    8:  LI        V0, 55
    C:  SW        V0, 30 (V1)
   10:  LW        V1, C (A0)
   14:  LI        V0, 2A
   18:  SW        V0, 34 (V1)
   1C:  LW        V0, C (A0)
   20:  LI        V1, FF
   24:  SW        V1, 38 (V0)
   28:  LW        V0, C (A0)
   2C:  SW        V1, 40 (V0)
   30:  LW        V1, C (A0)
   34:  LI        V0, AF
   38:  SW        V0, 44 (V1)
   3C:  LW        V1, C (A0)
   40:  LI        V0, EF
   44:  SW        V0, 48 (V1)
   48:  JR        RA
   4C:  LI        V0, 2
}

#new:IdleAnimations $IdleAnimations_8021D2E0
{
	.Status:Normal    00810002
	.Status:Stone     00810000
	.Status:Sleep     00810002
	.Status:Poison    00810002
	.Status:Stop      00810000
	.Status:Static    00810000
	.Status:Paralyze  00810000
	.Status:Paralyze  00810000
	.Status:Dizzy     00810002
	.Status:Dizzy     00810002
	.Status:End
}

#new:DefenseTable $DefenseTable_8021D334
{
	.Element:Normal 00000001
	.Element:End
}

#new:StatusTable $StatusTable_8021D340
{
	.Status:Normal      0`
	.Status:Default     0`
	.Status:Sleep      30`
	.Status:Poison      0`
	.Status:Frozen      0`
	.Status:Dizzy      30`
	.Status:Fear        0`
	.Status:Static      0`
	.Status:Paralyze   30`
	.Status:Shrink     50`
	.Status:Stop       30`
	.Status:DefaultTurnMod    0`
	.Status:SleepTurnMod     -1`
	.Status:PoisonTurnMod     0`
	.Status:FrozenTurnMod     0`
	.Status:DizzyTurnMod     -1`
	.Status:FearTurnMod       0`
	.Status:StaticTurnMod     0`
	.Status:ParalyzeTurnMod  -1`
	.Status:ShrinkTurnMod    -1`
	.Status:StopTurnMod      -2`
	.Status:End
}

#new:PartsTable $PartsTable_8021D3EC
{
	00800000 01000000 EE4800FF $IdleAnimations_8021D2E0 $DefenseTable_8021D334 00000000 00000002 00F80000 00000000
}

#new:Actor $UnusedBowser
{
	% stats
	[Index]        C1b
	[Level]       100`b
	[MaxHP]        50`b
	[Coins]         0`b
	[Flags]       00000000
	[StatusTable] $StatusTable_8021D340
	% ai
	[PartsCount]    1`s
	[PartsTable]  $PartsTable_8021D3EC
	[Script]      $Script_Init_8021D438
	% move effectiveness
	[Escape]        0`b
	[Item]          0`b
	[AirLift]       0`b
	[Hurricane]     0`b % Bow's "Spook" as well
	[UpAndAway]     0`b
	[PowerBounce]  65`b
	[SpinSmash]     4`b % weight (0-4)
	% ui positions
	[Size]         80`b  82`b % width height
	[HealthBar]     0`b   0`b % dx dy
	[StatusTurn]  -40`b  67`b % dx dy
	[StatusIcon]   10`b  60`b % dx dy
}

#new:Script $Script_Init_8021D438
{
    0:  Call  BindTakeTurn  ( .Actor:Self $Script_TakeTurn_8021D880 )
   14:  Call  BindIdle      ( .Actor:Self $Script_Idle_8021D4CC )
   28:  Call  BindHandleEvent   ( .Actor:Self $Script_HandleEvent_8021D500 )
   3C:  Call  SetActorVar   ( .Actor:Self 00000001 00000000 )
   54:  Call  SetActorVar   ( .Actor:Self 00000002 00000000 )
   6C:  Call  SetActorVar   ( .Actor:Self 00000003 00000001 )
   84:  Return
   8C:  End
}

#new:Script $Script_Idle_8021D4CC
{
    0:  Label  0
    C:  Wait  1`
   18:  Goto  0
   24:  Return
   2C:  End
}

#new:Script $Script_HandleEvent_8021D500
{
    0:  Call  UseIdleAnimation  ( .Actor:Self .False )
   14:  Call  GetLastElement    ( *VarE )
   24:  Call  GetLastEvent      ( .Actor:Self *Var0 )
   38:  Switch  *Var0
   44:  	Case  ==  .Event:BeginFirstStrike % 38
   50:  	CaseOR  ==  .Event:HitCombo % 9
   5C:  	CaseOR  ==  .Event:Hit % A
   68:  		Set   *Var1  0081000D
   78:  		ExecWait  $Script_8021D80C
   84:  	EndCaseGroup
   8C:  	Case  ==  .Event:BurnHit % E
   98:  		Set   *Var1  0081000D
   A8:  		ExecWait  $Script_8021D80C
   B4:  	CaseOR  ==  .Event:BurnDeath % 24
   C0:  		SetConst  *Var1  0081000D
   D0:  		ExecWait  $Script_8021D838
   DC:  		Return
   E4:  	Case  ==  .Event:SpinSmashHit % B
   F0:  		Set   *Var1  0081000D
  100:  		ExecWait  $Script_8021D80C
  10C:  	Case  ==  .Event:SpinSmashDeath % 21
  118:  		SetConst  *Var1  0081000D
  128:  		ExecWait  $Script_8021D838
  134:  		Return
  13C:  	Case  ==  .Event:ShockHit % 2F
  148:  		SetConst  *Var0  00000001
  158:  		SetConst  *Var1  0081000D
  168:  		ExecWait  DoShockHit
  174:  	Case  ==  .Event:ShockDeath % 26
  180:  		SetConst  *Var1  0081000D
  190:  		ExecWait  $Script_8021D838
  19C:  		Return
  1A4:  	CaseOR  ==  00000017 % 17
  1B0:  	CaseOR  ==  .Event:Immune % 19
  1BC:  		Set   *Var1  0081000D
  1CC:  		ExecWait  $Script_8021D80C
  1D8:  	EndCaseGroup
  1E0:  	Case  ==  .Event:SpikeTaunt % 1B
  1EC:  	Case  ==  .Event:Death % 20
  1F8:  		SetConst  *Var1  0081000D
  208:  		ExecWait  $Script_8021D838
  214:  		Return
  21C:  	Case  ==  .Event:EndFirstStrike % 35
  228:  	Case  ==  .Event:RecoverStatus % 31
  234:  		SetConst  *Var0  00000001
  244:  		SetConst  *Var1  00810002
  254:  		ExecWait  DoRecover
  260:  	Case  ==  00000030 % 30
  26C:  		SetConst  *Var0  00000001
  27C:  		SetConst  *Var1  0081000D
  28C:  		ExecWait  DoNormalHit
  298:  		Wait  1000`
  2A4:  	Default
  2AC:  		SetConst  *Var1  0081000D
  2BC:  		Call  SetAnimation  ( .Actor:Self 00000001 *Var1 )
  2D4:  		Wait  20`
  2E0:  EndSwitch
  2E8:  Call  UseIdleAnimation  ( .Actor:Self .True )
  2FC:  Return
  304:  End
}

#new:Script $Script_8021D80C
{
    0:  SetConst  *Var0  00000001
   10:  ExecWait  DoNormalHit
   1C:  Return
   24:  End
}

#new:Script $Script_8021D838
{
    0:  SetConst  *Var0  00000001
   10:  ExecWait  DoNormalHit
   1C:  SetConst  *Var0  00000001
   2C:  ExecWait  DoDeath
   38:  Return
   40:  End
}

#new:Script $Script_TakeTurn_8021D880
{
    0:  Call  GetActorVar   ( .Actor:Self 00000001 *Var0 )
   18:  Add   *Var0  00000001
   28:  If  *Var0  <  00000005
   38:  	Call  SetActorVar   ( .Actor:Self 00000001 *Var0 )
   50:  	Call  SetActorVar   ( .Actor:Self 00000002 00000005 )
   68:  	ExecWait  $Script_8021DA28
   74:  	Return
   7C:  EndIf
   84:  Call  GetActorVar   ( .Actor:Self 00000002 *Var0 )
   9C:  Add   *Var0  00000001
   AC:  Call  SetActorVar   ( .Actor:Self 00000002 *Var0 )
   C4:  If  *Var0  <  00000004
   D4:  	ExecWait  $Script_8021DA28
   E0:  	Return
   E8:  EndIf
   F0:  If  *Var0  >  00000006
  100:  	Call  SetActorVar   ( .Actor:Self 00000002 00000000 )
  118:  	ExecWait  $Script_8021E93C
  124:  	Return
  12C:  EndIf
  134:  Call  GetActorHP    ( .Actor:Self *Var0 )
  148:  If  *Var0  <  00000008
  158:  	Call  SetActorVar   ( .Actor:Self 00000002 00000000 )
  170:  	ExecWait  $Script_8021E93C
  17C:  	Return
  184:  EndIf
  18C:  ExecWait  $Script_8021DA28
  198:  Return
  1A0:  End
}

#new:Script $Script_8021DA28
{
    0:  Call  GetStatusFlags    ( .Actor:Player *Var0 )
   14:  If  *Var0  &  ~Flags:StatusFlags:Static % 2000
   24:  	ExecWait  $Script_8021E504
   30:  	Return
   38:  EndIf
   40:  Call  RandInt   ( 00000002 *Var0 )
   54:  Switch  *Var0
   60:  	Case  ==  00000000
   6C:  		ExecWait  $Script_8021DAFC
   78:  		Return
   80:  	Case  ==  00000001
   8C:  		ExecWait  $Script_8021DEB0
   98:  		Return
   A0:  	Default
   A8:  		ExecWait  $Script_8021E504
   B4:  		Return
   BC:  EndSwitch
   C4:  Return
   CC:  End
}

#new:Script $Script_8021DAFC
{
    0:  Call  UseIdleAnimation  ( .Actor:Self .False )
   14:  Call  SetTargetActor    ( .Actor:Self .Actor:Player )
   28:  Call  UseBattleCamPreset    ( 0000003F )
   38:  Call  SetBattleCamZoom  (  150` )
   48:  Call  SetBattleCamOffsetZ   (  0` )
   58:  Call  BattleCamTargetActor  ( .Actor:Self )
   68:  Call  MoveBattleCamOver (  40` )
   78:  Call  SetAnimation      ( .Actor:Self 00000001 00810003 )
   90:  Call  SetGoalToTarget   ( .Actor:Self )
   A0:  Call  AddGoalPos        ( .Actor:Self  40`  0`  0` )
   BC:  Call  SetActorSpeed     ( .Actor:Self *Fixed[3.0] )
   D0:  Call  RunToGoal ( .Actor:Self  0` .False )
   E8:  Call  SetAnimation      ( .Actor:Self 00000001 00810009 )
  100:  Wait  25`
  10C:  Call  8024ECF8  ( FFFFFFFF 00000001 00000000 )
  124:  Call  SetAnimation      ( .Actor:Self 00000001 00810015 )
  13C:  Wait  3`
  148:  Call  EnemyTestTarget   ( .Actor:Self *VarA ~Flags:DamageType:0 00000000 00000001 00000010 )
  16C:  Switch  *VarA
  178:  	CaseOR  ==  .HitResult:Miss % 6
  184:  	CaseOR  ==  .HitResult:Lucky % 5
  190:  		Wait  20`
  19C:  		Call  UseBattleCamPreset    ( 00000002 )
  1AC:  		Call  SetAnimation  ( .Actor:Self 00000001 0081000C )
  1C4:  		If  *VarA  ==  .HitResult:Lucky % 5
  1D4:  			Call  EnemyTestTarget   ( .Actor:Self *Var0 ~Flags:DamageType:TriggerLucky 00000000 00000000 00000000 )
  1F8:  			Wait  50`
  204:  		Else
  20C:  			Wait  30`
  218:  		EndIf
  220:  		Call  SetActorSpeed ( .Actor:Self *Fixed[3.0] )
  234:  		Set   *Var1  00810003
  244:  		ExecWait  $Script_8021EEF8
  250:  		Return
  258:  	EndCaseGroup
  260:  	Default
  268:  EndSwitch
  270:  Call  GetActorVar       ( .Actor:Self 00000003 *Var0 )
  288:  Mul   *Var0  00000006
  298:  Call  EnemyDamageTarget ( .Actor:Self *VarF ~Flags:DamageType:NoContact 00000000 00000000 *Var0 00000020 )
  2C0:  Switch  *VarF
  2CC:  	CaseOR  ==  .HitResult:Hit % 0
  2D8:  	CaseOR  ==  .HitResult:QuakeImmune % 2
  2E4:  	CaseOR  ==  0000000A % A
  2F0:  		Wait  30`
  2FC:  		Call  SetAnimation  ( .Actor:Self 00000001 00810007 )
  314:  		Wait  45`
  320:  		If  *VarF  ==  0000000A % A
  330:  			Return
  338:  		EndIf
  340:  		Call  UseBattleCamPreset    ( 00000002 )
  350:  		Call  SetActorSpeed ( .Actor:Self *Fixed[3.0] )
  364:  		Set   *Var1  00810003
  374:  		ExecWait  $Script_8021EEF8
  380:  	EndCaseGroup
  388:  EndSwitch
  390:  Call  UseIdleAnimation  ( .Actor:Self .True )
  3A4:  Return
  3AC:  End
}

#new:Script $Script_8021DEB0
{
    0:  Call  UseIdleAnimation  ( .Actor:Self .False )
   14:  Call  SetTargetActor    ( .Actor:Self .Actor:Player )
   28:  Call  UseBattleCamPreset    ( 0000003F )
   38:  Call  SetBattleCamZoom  (  150` )
   48:  Call  SetBattleCamOffsetZ   (  0` )
   58:  Call  BattleCamTargetActor  ( .Actor:Self )
   68:  Call  MoveBattleCamOver (  40` )
   78:  Call  SetAnimation      ( .Actor:Self 00000001 00810003 )
   90:  Call  SetGoalToTarget   ( .Actor:Self )
   A0:  Call  AddGoalPos        ( .Actor:Self  80`  0`  0` )
   BC:  Call  SetActorSpeed     ( .Actor:Self *Fixed[3.0] )
   D0:  Call  RunToGoal ( .Actor:Self  0` .False )
   E8:  Call  8024ECF8  ( FFFFFFFF 00000001 00000000 )
  100:  Call  SetAnimation      ( .Actor:Self 00000001 00810002 )
  118:  Wait  15`
  124:  Call  SetAnimation      ( .Actor:Self 00000001 00810011 )
  13C:  Wait  3`
  148:  Call  SetAnimation      ( .Actor:Self 00000001 00810012 )
  160:  Call  EnemyTestTarget   ( .Actor:Self *VarA ~Flags:DamageType:0 00000000 00000001 00000010 )
  184:  Switch  *VarA
  190:  	CaseOR  ==  .HitResult:Miss % 6
  19C:  	CaseOR  ==  .HitResult:Lucky % 5
  1A8:  		Call  SetActorJumpGravity   ( .Actor:Self *Fixed[0.5] )
  1BC:  		Call  SetGoalToTarget   ( .Actor:Self )
  1CC:  		Call  GetGoalPos        ( .Actor:Self *Var0 *Var1 *Var2 )
  1E8:  		Sub   *Var0  0000001E
  1F8:  		Set   *Var1  00000000
  208:  		Call  SetGoalPos        ( .Actor:Self *Var0 *Var1 *Var2 )
  224:  		Call  JumpToGoal        ( .Actor:Self  28` .False .True .False )
  244:  		Thread
  24C:  			Call  ShakeCam  ( .Cam:Battle 00000000  4` *Fixed[3.0] )
  268:  		EndThread
  270:  		Sub   *Var0  00000023
  280:  		Call  SetGoalPos    ( .Actor:Self *Var0 *Var1 *Var2 )
  29C:  		Call  JumpToGoal    ( .Actor:Self  14` .False .True .False )
  2BC:  		Thread
  2C4:  			Call  ShakeCam  ( .Cam:Battle 00000000  4` *Fixed[2.0] )
  2E0:  		EndThread
  2E8:  		Call  SetAnimation  ( .Actor:Self 00000001 00810014 )
  300:  		Wait  3`
  30C:  		Call  SetAnimation  ( .Actor:Self 00000001 00810002 )
  324:  		Wait  25`
  330:  		Call  UseBattleCamPreset    ( 00000002 )
  340:  		If  *VarA  ==  .HitResult:Lucky % 5
  350:  			Call  EnemyTestTarget   ( .Actor:Self *Var0 ~Flags:DamageType:TriggerLucky 00000000 00000000 00000000 )
  374:  		EndIf
  37C:  		Call  SetActorSpeed ( .Actor:Self *Fixed[3.0] )
  390:  		Set   *Var1  00810003
  3A0:  		ExecWait  $Script_8021EEF8
  3AC:  		Return
  3B4:  	EndCaseGroup
  3BC:  	Default
  3C4:  EndSwitch
  3CC:  Call  SetActorJumpGravity   ( .Actor:Self *Fixed[0.5] )
  3E0:  Call  SetGoalToTarget       ( .Actor:Self )
  3F0:  Call  JumpToGoal    ( .Actor:Self  24` .False .True .False )
  410:  Thread
  418:  	Call  ShakeCam  ( .Cam:Battle 00000000  4` *Fixed[3.0] )
  434:  EndThread
  43C:  Call  SetAnimation      ( .Actor:Self 00000001 00810013 )
  454:  Call  GetActorVar       ( .Actor:Self 00000003 *Var0 )
  46C:  Mul   *Var0  00000006
  47C:  Call  EnemyDamageTarget ( .Actor:Self *VarF ~Flags:DamageType:NoContact 00000000 00000000 *Var0 00000020 )
  4A4:  Switch  *VarF
  4B0:  	CaseOR  ==  .HitResult:Hit % 0
  4BC:  	CaseOR  ==  .HitResult:QuakeImmune % 2
  4C8:  	CaseOR  ==  0000000A % A
  4D4:  		Call  GetActorPos   ( .Actor:Self *Var0 *Var1 *Var2 )
  4F0:  		Add   *Var0  00000028
  500:  		Set   *Var1  00000000
  510:  		Call  SetGoalPos    ( .Actor:Self *Var0 *Var1 *Var2 )
  52C:  		Call  JumpToGoal    ( .Actor:Self  18` .False .True .False )
  54C:  		Thread
  554:  			Call  ShakeCam  ( .Cam:Battle 00000000  4` *Fixed[3.0] )
  570:  		EndThread
  578:  		Call  SetAnimation  ( .Actor:Self 00000001 00810014 )
  590:  		Wait  3`
  59C:  		Call  SetAnimation  ( .Actor:Self 00000001 00810002 )
  5B4:  		Wait  20`
  5C0:  		If  *VarF  ==  0000000A % A
  5D0:  			Return
  5D8:  		EndIf
  5E0:  		Call  UseBattleCamPreset    ( 00000002 )
  5F0:  		Call  SetActorSpeed ( .Actor:Self *Fixed[3.0] )
  604:  		Set   *Var1  00810003
  614:  		ExecWait  $Script_8021EEF8
  620:  	EndCaseGroup
  628:  EndSwitch
  630:  Call  UseIdleAnimation  ( .Actor:Self .True )
  644:  Return
  64C:  End
}

#new:Script $Script_8021E504
{
    0:  Call  UseIdleAnimation  ( .Actor:Self .False )
   14:  Call  SetTargetActor    ( .Actor:Self .Actor:Player )
   28:  Call  SetGoalToTarget   ( .Actor:Self )
   38:  Call  UseBattleCamPreset    ( 0000003F )
   48:  Call  SetBattleCamZoom  (  150` )
   58:  Call  SetBattleCamOffsetZ   (  0` )
   68:  Call  BattleCamTargetActor  ( .Actor:Self )
   78:  Call  MoveBattleCamOver (  40` )
   88:  Call  SetAnimation      ( .Actor:Self 00000001 00810016 )
   A0:  Wait  35`
   AC:  Call  SetAnimation      ( .Actor:Self 00000001 00810017 )
   C4:  Wait  10`
   D0:  Call  GetActorPos       ( .Actor:Self *Var0 *Var1 *Var2 )
   EC:  Sub   *Var0  00000046
   FC:  Add   *Var1  00000023
  10C:  Add   *Var2  0000000A
  11C:  Call  SetGoalToTarget   ( .Actor:Self )
  12C:  Call  GetGoalPos        ( .Actor:Self *Var3 *Var4 *Var5 )
  148:  Sub   *Var3  00000028
  158:  Set   *Var4  00000014
  168:  Call  PlayEffect        ( ~FX:FireBreath:Large *Var0 *Var1 *Var2 *Var3 *Var4 *Var5 00000032 00000001 00000018 00000000 00000000 00000000 )
  1AC:  Call  UseBattleCamPreset    ( 00000002 )
  1BC:  Call  MoveBattleCamOver (  100` )
  1CC:  Wait  20`
  1D8:  Call  SetAnimation      ( .Actor:Self 00000001 00810018 )
  1F0:  Wait  30`
  1FC:  Call  EnemyTestTarget   ( .Actor:Self *VarA ~Flags:DamageType:0 00000000 00000001 00000010 )
  220:  Switch  *VarA
  22C:  	CaseOR  ==  .HitResult:Miss % 6
  238:  	CaseOR  ==  .HitResult:Lucky % 5
  244:  		Call  SetAnimation  ( .Actor:Self 00000001 00810019 )
  25C:  		Wait  15`
  268:  		Call  SetAnimation  ( .Actor:Self 00000001 00810002 )
  280:  		Wait  30`
  28C:  		Call  SetAnimation  ( .Actor:Self 00000001 0081000C )
  2A4:  		If  *VarA  ==  .HitResult:Lucky % 5
  2B4:  			Call  EnemyTestTarget   ( .Actor:Self *Var0 ~Flags:DamageType:TriggerLucky 00000000 00000000 00000000 )
  2D8:  		EndIf
  2E0:  		Wait  30`
  2EC:  		Return
  2F4:  	EndCaseGroup
  2FC:  	Default
  304:  EndSwitch
  30C:  Call  GetActorVar       ( .Actor:Self 00000003 *Var0 )
  324:  Mul   *Var0  00000008
  334:  Call  SetGoalToTarget   ( .Actor:Self )
  344:  Call  EnemyDamageTarget ( .Actor:Self *VarF ~Flags:DamageType:Fire 0000FFFF 00000000 *Var0 00000020 )
  36C:  Switch  *VarF
  378:  	CaseOR  ==  .HitResult:Hit % 0
  384:  	CaseOR  ==  .HitResult:QuakeImmune % 2
  390:  	CaseOR  ==  0000000A % A
  39C:  		Call  SetAnimation  ( .Actor:Self 00000001 00810019 )
  3B4:  		Wait  15`
  3C0:  		Call  SetAnimation  ( .Actor:Self 00000001 00810002 )
  3D8:  		Wait  30`
  3E4:  		If  *VarF  ==  0000000A % A
  3F4:  			Return
  3FC:  		EndIf
  404:  	EndCaseGroup
  40C:  EndSwitch
  414:  Call  UseIdleAnimation  ( .Actor:Self .True )
  428:  Return
  430:  End
}

#new:Script $Script_8021E93C
{
    0:  Call  UseIdleAnimation  ( .Actor:Self .False )
   14:  Call  SetTargetActor    ( .Actor:Self .Actor:Player )
   28:  Call  SetGoalToTarget   ( .Actor:Self )
   38:  Call  UseBattleCamPreset    ( 0000000D )
   48:  Call  BattleCamTargetActor  ( .Actor:Self )
   58:  Call  MoveBattleCamOver (  30` )
   68:  Call  SetAnimation      ( .Actor:Self 00000001 0081000F )
   80:  Wait  10`
   8C:  Call  $Function_80218000 ( )
   98:  Call  GetActorPos       ( .Actor:Self *Var0 *Var1 *Var2 )
   B4:  Add   *Var0  0000000F
   C4:  Sub   *Var2  00000003
   D4:  Call  PlayEffect        ( ~FX:LightRays:SharpA *Var0 0000005A *Var2 *Fixed[1.0] *VarF 00000000 00000000 00000000 00000000 00000000 00000000 00000000 )
  118:  Sub   *Var2  00000003
  128:  Call  PlayEffect        ( 0000003C 00000002 *Var0 0000005A *Var2 *Fixed[1.0] *VarE 00000000 00000000 00000000 00000000 00000000 00000000 00000000 )
  16C:  Wait  16`
  178:  Call  UseBattleCamPreset    ( 00000002 )
  188:  Call  MoveBattleCamOver (  45` )
  198:  Wait  19`
  1A4:  Call  RemoveEffect      ( *VarF )
  1B4:  Call  RemoveEffect      ( *VarE )
  1C4:  Call  GetActorPos       ( .Actor:Self *Var0 *Var1 *Var2 )
  1E0:  Add   *Var0  0000000D
  1F0:  Set   *Var1  00000037
  200:  Call  PlayEffect        ( ~FX:EnergyShockwave *Var0 *Var1 *Var2 *Fixed[1.0] 0000003C 00000000 00000000 00000000 00000000 00000000 00000000 00000000 )
  244:  Thread
  24C:  	Call  $Function_80218098 ( )
  258:  EndThread
  260:  Wait  8`
  26C:  Call  EnemyTestTarget   ( .Actor:Self *VarA ~Flags:DamageType:0 00000000 00000001 00000010 )
  290:  Switch  *VarA
  29C:  	Case  ==  .HitResult:Miss % 6
  2A8:  		Call  SetAnimation  ( .Actor:Self 00000001 00810002 )
  2C0:  		Wait  15`
  2CC:  		ExecWait  $Script_8021F024
  2D8:  		Wait  30`
  2E4:  		Return
  2EC:  	Case  ==  .HitResult:Lucky % 5
  2F8:  		Call  8026BF48  ( 00000001 )
  308:  		Thread
  310:  			Wait  2`
  31C:  			Call  SetTargetActor    ( .Actor:Self .Actor:Partner )
  330:  			Call  SetGoalToTarget   ( .Actor:Self )
  340:  			Call  SetTargetActor    ( .Actor:Self .Actor:Partner )
  354:  			Call  EnemyDamageTarget ( .Actor:Self *Var0 ~Flags:DamageType:Magic|Cosmic 00000000 00000000 00000003 00000020 )
  37C:  			Call  8026BF48  ( 00000000 )
  38C:  		EndThread
  394:  		Call  SetAnimation  ( .Actor:Self 00000001 00810002 )
  3AC:  		Wait  15`
  3B8:  		ExecWait  $Script_8021F024
  3C4:  		If  *VarA  ==  00000005
  3D4:  			Call  EnemyTestTarget   ( .Actor:Self *Var0 ~Flags:DamageType:TriggerLucky 00000000 00000000 00000000 )
  3F8:  		EndIf
  400:  		Wait  30`
  40C:  		Return
  414:  	Default
  41C:  EndSwitch
  424:  Call  8026BF48  ( 00000001 )
  434:  Thread
  43C:  	Wait  2`
  448:  	Call  SetTargetActor    ( .Actor:Self .Actor:Partner )
  45C:  	Call  SetGoalToTarget   ( .Actor:Self )
  46C:  	Call  SetTargetActor    ( .Actor:Self .Actor:Partner )
  480:  	Call  EnemyDamageTarget ( .Actor:Self *Var0 ~Flags:DamageType:Magic|Cosmic 00000000 00000000 00000003 00000020 )
  4A8:  	Call  8026BF48  ( 00000000 )
  4B8:  EndThread
  4C0:  Call  SetGoalToTarget   ( .Actor:Self )
  4D0:  Call  EnemyDamageTarget ( .Actor:Self *VarF ~Flags:DamageType:Magic|Cosmic 00000000 ~DebuffType:0|Poison:0:0` 00000004 00000020 )
  4F8:  Call  RemovePlayerBuffs ( ~Flags:PlayerBuff:All )
  508:  Switch  *VarF
  514:  	CaseOR  ==  .HitResult:Hit % 0
  520:  	CaseOR  ==  .HitResult:QuakeImmune % 2
  52C:  	CaseOR  ==  0000000A % A
  538:  		Call  SetAnimation  ( .Actor:Self 00000001 00810002 )
  550:  		Wait  15`
  55C:  		ExecWait  $Script_8021F024
  568:  		If  *VarF  ==  0000000A
  578:  			Return
  580:  		EndIf
  588:  	EndCaseGroup
  590:  EndSwitch
  598:  Call  UseIdleAnimation  ( .Actor:Self .True )
  5AC:  Return
  5B4:  End
}

#new:Script $Script_8021EEF8
{
    0:  Set   *Var0  00000001
   10:  Call  GetActorPos   ( .Actor:Self *VarA *VarB *VarC )
   2C:  Call  SetGoalToHome ( .Actor:Self )
   3C:  Call  GetGoalPos    ( .Actor:Self *VarD *VarE *VarF )
   58:  If  *VarA  <  *VarD
   68:  	Call  SetActorYaw   ( .Actor:Self  180` )
   7C:  Else
   84:  	Call  SetActorYaw   ( .Actor:Self  0` )
   98:  EndIf
   A0:  Call  GetDist2D ( *Var9 *VarA *VarC *VarD *VarF )
   C0:  If  *Var9  >=  *Fixed[4.0]
   D0:  	Call  SetAnimation  ( .Actor:Self *Var0 *Var1 )
   E8:  	Call  RunToGoal     ( .Actor:Self  0` .False )
  100:  EndIf
  108:  Call  SetActorYaw   ( .Actor:Self  0` )
  11C:  Return
  124:  End
}

#new:Script $Script_8021F024
{
    0:  Call  GetActorPos   ( .Actor:Self *Var1 *Var2 *Var3 )
   1C:  Add   *Var2  0000003C
   2C:  Call  PlayEffect    ( ~FX:Sparkles:Star *Var1 *Var2 *Var3 *Fixed[1.0] 00000000 00000000 00000000 00000000 00000000 00000000 00000000 00000000 )
   70:  Add   *Var1  0000001E
   80:  Add   *Var2  00000014
   90:  Call  PlayEffect    ( ~FX:Recover:HP *Var1 *Var2 *Var3 0000000A 00000000 00000000 00000000 00000000 00000000 00000000 00000000 00000000 )
   D4:  Call  GetActorHP    ( .Actor:Self *Var0 )
   E8:  Add   *Var0  0000000A
   F8:  Call  GetEnemyMaxHP ( .Actor:Self *Var1 )
  10C:  If  *Var0  >  *Var1
  11C:  	Set   *Var0  *Var1
  12C:  EndIf
  134:  Call  SetEnemyHP    ( .Actor:Self *Var0 )
  148:  Call  GetActorVar   ( .Actor:Self 00000003 *Var0 )
  160:  Add   *Var0  00000001
  170:  Call  SetActorVar   ( .Actor:Self 00000003 *Var0 )
  188:  Return
  190:  End
}

PADDING: 8021F1BC to 8021F1C0 (006A63BC to 006A63C0)
00000000

#new:IdleAnimations $IdleAnimations_8021F1C0
{
	.Status:Normal    00810002
	.Status:Stone     00810000
	.Status:Sleep     00810002
	.Status:Poison    00810002
	.Status:Stop      00810000
	.Status:Static    00810000
	.Status:Paralyze  00810000
	.Status:Paralyze  00810000
	.Status:Dizzy     00810002
	.Status:Dizzy     00810002
	.Status:End
}

#new:DefenseTable $DefenseTable_8021F214
{
	.Element:Normal 00000000
	.Element:End
}

#new:DefenseTable $DefenseTable_8021F220
{
	.Element:Normal 00000001
	.Element:End
}

#new:StatusTable $StatusTable_8021F22C
{
	.Status:Normal      0`
	.Status:Default     0`
	.Status:Sleep       0`
	.Status:Poison      0`
	.Status:Frozen      0`
	.Status:Dizzy       0`
	.Status:Fear        0`
	.Status:Static      0`
	.Status:Paralyze    0`
	.Status:Shrink      0`
	.Status:Stop        0`
	.Status:DefaultTurnMod    0`
	.Status:SleepTurnMod      0`
	.Status:PoisonTurnMod     0`
	.Status:FrozenTurnMod     0`
	.Status:DizzyTurnMod      0`
	.Status:FearTurnMod       0`
	.Status:StaticTurnMod     0`
	.Status:ParalyzeTurnMod   0`
	.Status:ShrinkTurnMod     0`
	.Status:StopTurnMod       0`
	.Status:End
}

#new:StatusTable $StatusTable_8021F2D8
{
	.Status:Normal      0`
	.Status:Default     0`
	.Status:Sleep       0`
	.Status:Poison      0`
	.Status:Frozen      0`
	.Status:Dizzy       0`
	.Status:Fear        0`
	.Status:Static      0`
	.Status:Paralyze    0`
	.Status:Shrink      0`
	.Status:Stop        0`
	.Status:DefaultTurnMod    0`
	.Status:SleepTurnMod      0`
	.Status:PoisonTurnMod     0`
	.Status:FrozenTurnMod     0`
	.Status:DizzyTurnMod      0`
	.Status:FearTurnMod       0`
	.Status:StaticTurnMod     0`
	.Status:ParalyzeTurnMod   0`
	.Status:ShrinkTurnMod     0`
	.Status:StopTurnMod       0`
	.Status:End
}

#new:PartsTable $PartsTable_8021F384
{
	00800000 01000000 EE4800FF $IdleAnimations_8021F1C0 $DefenseTable_8021F214 00000000 00000000 00F80000 00000000
}

#new:Actor $IntroBowser
{
	% stats
	[Index]        C0b
	[Level]         0`b
	[MaxHP]        10`b
	[Coins]         0`b
	[Flags]       00000000
	[StatusTable] $StatusTable_8021F22C
	% ai
	[PartsCount]    1`s
	[PartsTable]  $PartsTable_8021F384
	[Script]      $Script_Init_8021F3D0
	% move effectiveness
	[Escape]        0`b
	[Item]          0`b
	[AirLift]       0`b
	[Hurricane]     0`b % Bow's "Spook" as well
	[UpAndAway]     0`b
	[PowerBounce]  80`b
	[SpinSmash]     4`b % weight (0-4)
	% ui positions
	[Size]         80`b  82`b % width height
	[HealthBar]     0`b   0`b % dx dy
	[StatusTurn]  -10`b  20`b % dx dy
	[StatusIcon]   10`b  20`b % dx dy
}

#new:Script $Script_Init_8021F3D0
{
    0:  Call  SetActorVar   ( .Actor:Self 00000000 00000000 )
   18:  Call  SetActorVar   ( .Actor:Self 00000001 00000000 )
   30:  Call  SetActorVar   ( .Actor:Self 0000000E 00000000 )
   48:  Call  8026E020      ( 00000001 )
   58:  Call  CreateNpc     ( 00000000 00D60004 )
   6C:  Call  SetNpcYaw     ( 00000000  90` )
   80:  Call  SetNpcPos     ( 00000000  -130`  0`  -12` )
   9C:  Call  EnableNpcShadow       ( 00000000 .True )
   B0:  Call  BindTakeTurn  ( .Actor:Self $Script_TakeTurn_8021FC14 )
   C4:  Call  BindIdle      ( .Actor:Self $Script_Idle_8021F53C )
   D8:  Call  BindHandleEvent       ( .Actor:Self $Script_HandleEvent_8021F800 )
   EC:  Call  BindNextTurn  ( .Actor:Self $Script_NextTurn_8021F598 )
  100:  Call  ModifyActorDecoration ( .Actor:Self 00000001 00000001 00000064 00000000 00000000 00000000 )
  128:  Exec  $Script_80220974
  134:  Call  SetBattleFlagBits     ( 00800000 .True )
  148:  Call  SetBattleFlagBits2    ( 02000000 .True )
  15C:  Return
  164:  End
}

#new:Script $Script_Idle_8021F53C
{
    0:  Call  GetActorPos   ( .Actor:Self *Var0 *Var1 *Var2 )
   1C:  Label  0
   28:  ExecWait  $Script_80221328
   34:  Wait  1`
   40:  Goto  0
   4C:  Return
   54:  End
}

#new:Script $Script_NextTurn_8021F598
{
    0:  Call  UseIdleAnimation  ( .Actor:Self .False )
   14:  Call  GetBattlePhase    ( *Var0 )
   24:  Switch  *Var0
   30:  	Case  ==  0000000A
   3C:  		Call  GetActorVar   ( .Actor:Self 00000001 *Var0 )
   54:  		If  *Var0  ==  00000000
   64:  			Call  SetActorVar       ( .Actor:Self 00000001 00000001 )
   7C:  			Call  802535B4  ( 00000000 )
   8C:  			Call  UseBattleCamPreset    ( 00000013 )
   9C:  			Call  SetBattleCamTarget    (  -115`  0`  0` )
   B4:  			Call  SetBattleCamZoom  (  320` )
   C4:  			Call  SetBattleCamOffsetZ   (  50` )
   D4:  			Call  MoveBattleCamOver (  20` )
   E4:  			Wait  20`
   F0:  			Call  UseIdleAnimation  ( .Actor:Player .False )
  104:  			Call  SetAnimation      ( .Actor:Player 00000000 00010002 )
  11C:  			Call  SetActorYaw       ( .Actor:Player  180` )
  130:  			Call  SpeakToPlayer     ( 00000000 00D60002 00D60004 00000005 00000057 ) % Mario, you can do it!
  150:  			Call  SetJumpAnimations ( .Actor:Player 00000000 00010007 00010007 00010008 )
  170:  			Call  SetActorSpeed     ( .Actor:Player *Fixed[5.0] )
  184:  			Call  SetActorJumpGravity   ( .Actor:Player *Fixed[1.5] )
  198:  			Call  SetAnimation      ( .Actor:Player 00000000 0003000B )
  1B0:  			Wait  24`
  1BC:  			Call  SetAnimation      ( .Actor:Player 00000000 00010002 )
  1D4:  			Wait  10`
  1E0:  			Call  SetActorYaw       ( .Actor:Player  0` )
  1F4:  			Call  UseIdleAnimation  ( .Actor:Player .True )
  208:  			Call  UseBattleCamPreset    ( 00000002 )
  218:  			Wait  20`
  224:  			Call  802535B4  ( 00000001 )
  234:  		EndIf
  23C:  EndSwitch
  244:  Call  UseIdleAnimation  ( .Actor:Self .True )
  258:  Return
  260:  End
}

#new:Script $Script_HandleEvent_8021F800
{
    0:  Call  UseIdleAnimation  ( .Actor:Self .False )
   14:  Call  GetLastElement    ( *VarE )
   24:  Call  GetLastEvent      ( .Actor:Self *Var0 )
   38:  Switch  *Var0
   44:  	Case  ==  .Event:BeginFirstStrike % 38
   50:  	CaseOR  ==  .Event:HitCombo % 9
   5C:  	CaseOR  ==  .Event:Hit % A
   68:  		Set   *Var1  0081000D
   78:  		ExecWait  $Script_8021FBA0
   84:  	EndCaseGroup
   8C:  	Case  ==  .Event:BurnHit % E
   98:  		Set   *Var1  0081000D
   A8:  		ExecWait  $Script_8021FBA0
   B4:  	CaseOR  ==  .Event:BurnDeath % 24
   C0:  		SetConst  *Var1  0081000D
   D0:  		ExecWait  $Script_8021FBCC
   DC:  		Return
   E4:  	Case  ==  .Event:SpinSmashHit % B
   F0:  		Set   *Var1  0081000D
  100:  		ExecWait  $Script_8021FBA0
  10C:  	Case  ==  .Event:SpinSmashDeath % 21
  118:  		SetConst  *Var1  0081000D
  128:  		ExecWait  $Script_8021FBCC
  134:  		Return
  13C:  	Case  ==  .Event:ShockHit % 2F
  148:  		SetConst  *Var0  00000001
  158:  		SetConst  *Var1  0081000D
  168:  		ExecWait  DoShockHit
  174:  	Case  ==  .Event:ShockDeath % 26
  180:  		SetConst  *Var1  0081000D
  190:  		ExecWait  $Script_8021FBCC
  19C:  		Return
  1A4:  	CaseOR  ==  00000017 % 17
  1B0:  	CaseOR  ==  .Event:Immune % 19
  1BC:  		SetConst  *Var0  00000001
  1CC:  		Set   *Var1  00810002
  1DC:  		ExecWait  DoImmune
  1E8:  		Call  GetActorVar   ( .Actor:Self 00000000 *Var0 )
  200:  		If  *Var0  ==  00000003
  210:  			Call  ActorSpeak    ( 0000005B .Actor:Self 00000001 00810005 00810002 ) % Gwa ha ha ha ha ha! Is that all you've got? How sa ...
  230:  		EndIf
  238:  	EndCaseGroup
  240:  	Case  ==  .Event:SpikeTaunt % 1B
  24C:  	Case  ==  .Event:Death % 20
  258:  		SetConst  *Var1  0081000D
  268:  		ExecWait  $Script_8021FBCC
  274:  		Return
  27C:  	Case  ==  .Event:EndFirstStrike % 35
  288:  	Case  ==  .Event:RecoverStatus % 31
  294:  		SetConst  *Var0  00000001
  2A4:  		SetConst  *Var1  00810012
  2B4:  		ExecWait  DoRecover
  2C0:  		Call  SetAnimation  ( .Actor:Self 00000001 00810014 )
  2D8:  		Call  ShakeCam      ( .Cam:Battle 00000000  4` *Fixed[3.0] )
  2F4:  	Case  ==  00000030 % 30
  300:  		SetConst  *Var0  00000001
  310:  		SetConst  *Var1  0081000D
  320:  		ExecWait  DoNormalHit
  32C:  		Wait  1000`
  338:  	Default
  340:  		SetConst  *Var1  0081000D
  350:  		Call  SetAnimation  ( .Actor:Self 00000001 *Var1 )
  368:  		Wait  20`
  374:  EndSwitch
  37C:  Call  UseIdleAnimation  ( .Actor:Self .True )
  390:  Return
  398:  End
}

#new:Script $Script_8021FBA0
{
    0:  SetConst  *Var0  00000001
   10:  ExecWait  DoNormalHit
   1C:  Return
   24:  End
}

#new:Script $Script_8021FBCC
{
    0:  SetConst  *Var0  00000001
   10:  ExecWait  DoNormalHit
   1C:  SetConst  *Var0  00000001
   2C:  ExecWait  DoDeath
   38:  Return
   40:  End
}

#new:Script $Script_TakeTurn_8021FC14
{
    0:  Call  UseIdleAnimation  ( .Actor:Self .False )
   14:  Call  GetActorVar       ( .Actor:Self 00000000 *Var0 )
   2C:  Add   *Var0  00000001
   3C:  Call  SetActorVar       ( .Actor:Self 00000000 *Var0 )
   54:  Switch  *Var0
   60:  	Case  <  00000003
   6C:  		ExecWait  $Script_IntroClawSwipe
   78:  	Case  ==  00000003
   84:  		ExecWait  $Script_IntroUseStarRod
   90:  		ExecWait  $Script_IntroClawSwipe
   9C:  	Case  ==  00000004
   A8:  		ExecWait  $Script_IntroClawSwipe
   B4:  	Case  ==  00000005
   C0:  		Call  UseBattleCamPreset    ( 0000000D )
   D0:  		Call  BattleCamTargetActor  ( .Actor:Self )
   E0:  		Call  MoveBattleCamOver     (  30` )
   F0:  		Wait  30`
   FC:  		Call  ActorSpeak    ( 0000005C .Actor:Self 00000001 00810005 00810002 ) % Yup, just as I expected. Mario's no match for the  ...
  11C:  		ExecWait  $Script_IntroFireBreath
  128:  EndSwitch
  130:  Return
  138:  End
}

#new:Script $Script_IntroClawSwipe
{
    0:  Call  SetTargetActor    ( .Actor:Self .Actor:Player )
   14:  Call  UseBattleCamPreset    ( 0000003F )
   24:  Call  SetBattleCamZoom  (  200` )
   34:  Call  BattleCamTargetActor  ( .Actor:Self )
   44:  Call  MoveBattleCamOver (  40` )
   54:  Call  8024ECF8  ( FFFFFFFF 00000001 00000000 )
   6C:  Call  SetAnimation      ( .Actor:Self 00000001 00810003 )
   84:  Call  SetGoalToTarget   ( .Actor:Self )
   94:  Call  AddGoalPos        ( .Actor:Self  40`  0`  0` )
   B0:  Call  SetActorSpeed     ( .Actor:Self *Fixed[3.0] )
   C4:  Call  RunToGoal ( .Actor:Self  0` .False )
   DC:  Call  SetAnimation      ( .Actor:Self 00000001 00810009 )
   F4:  Wait  25`
  100:  Call  SetAnimation      ( .Actor:Self 00000001 00810015 )
  118:  Call  PlaySoundAtActor  ( .Actor:Self 0000035E )
  12C:  Wait  3`
  138:  Wait  2`
  144:  Call  SetGoalToTarget   ( .Actor:Self )
  154:  Call  GetActorVar       ( .Actor:Self 00000000 *Var1 )
  16C:  If  *Var1  <  00000003
  17C:  	Set   *Var0  00000001
  18C:  	Call  80269EAC  ( 0000000C )
  19C:  	Call  EnemyDamageTarget ( .Actor:Self *VarF ~Flags:DamageType:NoContact 00000000 00000000 *Var0 00000020 )
  1C4:  Else
  1CC:  	Set   *Var0  00000003
  1DC:  	Call  80269EAC  ( 0000000C )
  1EC:  	Call  EnemyDamageTarget ( .Actor:Self *VarF ~Flags:DamageType:NoContact 00000000 00000000 *Var0 00000020 )
  214:  EndIf
  21C:  Call  UseBattleCamPreset    ( 00000002 )
  22C:  Call  MoveBattleCamOver     (  20` )
  23C:  Thread
  244:  	Call  GetActorVar   ( .Actor:Self 00000000 *Var0 )
  25C:  	If  *Var0  >=  00000003
  26C:  		Call  SetNpcAnimation   ( 00000000 00D60007 )
  280:  	Else
  288:  		Call  SetNpcAnimation   ( 00000000 00D60006 )
  29C:  	EndIf
  2A4:  	Wait  45`
  2B0:  	Call  SetNpcAnimation   ( 00000000 00D60004 )
  2C4:  EndThread
  2CC:  Switch  *VarF
  2D8:  	CaseOR  ==  .HitResult:Hit % 0
  2E4:  	CaseOR  ==  .HitResult:QuakeImmune % 2
  2F0:  	CaseOR  ==  0000000A % A
  2FC:  		Wait  30`
  308:  		If  *VarF  ==  0000000A % A
  318:  			Return
  320:  		EndIf
  328:  		Call  SetActorSpeed ( .Actor:Self *Fixed[5.0] )
  33C:  		Set   *Var1  00810003
  34C:  		ExecWait  $Script_80220820
  358:  	EndCaseGroup
  360:  EndSwitch
  368:  Call  UseIdleAnimation  ( .Actor:Self .True )
  37C:  Return
  384:  End
}

#new:Script $Script_IntroFireBreath
{
    0:  Call  SetTargetActor    ( .Actor:Self .Actor:Player )
   14:  Call  SetGoalToTarget   ( .Actor:Self )
   24:  Call  UseBattleCamPreset    ( 00000013 )
   34:  Call  GetActorPos       ( .Actor:Self *Var0 *Var1 *Var2 )
   50:  Sub   *Var0  0000001E
   60:  Add   *Var1  00000041
   70:  Call  SetBattleCamTarget    ( *Var0 *Var1 *Var2 )
   88:  Call  SetBattleCamZoom  (  400` )
   98:  Call  SetBattleCamOffsetZ   (  0` )
   A8:  Call  MoveBattleCamOver (  40` )
   B8:  Call  SetAnimation      ( .Actor:Self 00000001 00810016 )
   D0:  Wait  35`
   DC:  Call  SetAnimation      ( .Actor:Self 00000001 00810017 )
   F4:  Wait  10`
  100:  Call  GetActorPos       ( .Actor:Self *Var0 *Var1 *Var2 )
  11C:  Sub   *Var0  00000032
  12C:  Add   *Var1  00000021
  13C:  Add   *Var2  0000000A
  14C:  Call  SetGoalToTarget   ( .Actor:Self )
  15C:  Call  GetGoalPos        ( .Actor:Self *Var3 *Var4 *Var5 )
  178:  Sub   *Var3  00000028
  188:  Set   *Var4  00000014
  198:  Call  PlayEffect        ( ~FX:FireBreath:Tiny *Var0 *Var1 *Var2 *Var3 *Var4 *Var5 00000032 00000001 00000018 00000000 00000000 00000000 )
  1DC:  Call  $Function_80218178    ( *VarF )
  1EC:  Thread
  1F4:  	Call  $Function_80218120    ( 00000032 00000094 )
  208:  	Call  PlaySound ( 000003BD )
  218:  	Wait  70`
  224:  	Call  PlaySound ( 000007BD )
  234:  EndThread
  23C:  Call  SetNpcAnimation   ( 00000000 00D60007 )
  250:  Call  UseBattleCamPreset    ( 00000002 )
  260:  Call  MoveBattleCamOver (  55` )
  270:  Wait  20`
  27C:  Call  SetAnimation      ( .Actor:Self 00000001 00810018 )
  294:  Wait  30`
  2A0:  Wait  2`
  2AC:  Call  SetGoalToTarget   ( .Actor:Self )
  2BC:  Call  EnemyDamageTarget ( .Actor:Self *VarF ~Flags:DamageType:Fire 0000FFFF 00000000 0000000A 00000020 )
  2E4:  Switch  *VarF
  2F0:  	CaseOR  ==  .HitResult:Hit % 0
  2FC:  	CaseOR  ==  .HitResult:QuakeImmune % 2
  308:  	CaseOR  ==  0000000A % A
  314:  		Thread
  31C:  			Call  SetAnimation  ( .Actor:Self 00000001 00810019 )
  334:  			Wait  15`
  340:  			Call  SetAnimation  ( .Actor:Self 00000001 00810002 )
  358:  		EndThread
  360:  		Wait  60`
  36C:  		Call  SetNpcAnimation   ( 00000000 00D60006 )
  380:  		Loop  00000044
  38C:  			Call  GetAnimation  ( .Actor:Player 00000000 *Var0 )
  3A4:  			If  *Var0  ==  00010018
  3B4:  				BreakLoop
  3BC:  			EndIf
  3C4:  			Wait  1`
  3D0:  		EndLoop
  3D8:  		Call  SetNpcAnimation   ( 00000000 00D6000A )
  3EC:  		Wait  30`
  3F8:  	EndCaseGroup
  400:  EndSwitch
  408:  Call  UseIdleAnimation  ( .Actor:Self .True )
  41C:  Return
  424:  End
}

#new:Script $Script_IntroUseStarRod
{
    0:  Call  UseBattleCamPreset    ( 0000000D )
   10:  Call  BattleCamTargetActor  ( .Actor:Self )
   20:  Call  MoveBattleCamOver     (  30` )
   30:  Wait  30`
   3C:  Call  ActorSpeak    ( 00000058 .Actor:Self 00000001 00810005 00810002 ) % Good old Mario...always fighting. You're a thorn i ...
   5C:  Call  UseBattleCamPreset    ( 00000013 )
   6C:  Call  GetActorPos   ( .Actor:Self *Var0 *Var1 *Var2 )
   88:  Sub   *Var0  0000000F
   98:  Add   *Var1  00000041
   A8:  Call  SetBattleCamTarget    ( *Var0 *Var1 *Var2 )
   C0:  Call  SetBattleCamZoom      (  320` )
   D0:  Call  SetBattleCamOffsetZ   (  0` )
   E0:  Call  MoveBattleCamOver     (  20` )
   F0:  Wait  20`
   FC:  Thread
  104:  	Wait  2`
  110:  	Call  GetActorPos   ( .Actor:Self *Var0 *Var1 *Var2 )
  12C:  	Add   *Var0  00000014
  13C:  	Add   *Var1  0000005A
  14C:  	Call  PlayEffect    ( ~FX:RainbowShimmer *Var0 *Var1 *Var2 0000001E 0000001E 00000007 0000001E 00000000 00000000 00000000 00000000 00000000 )
  190:  EndThread
  198:  Call  SetAnimation      ( .Actor:Self 00000001 0081000F )
  1B0:  Wait  30`
  1BC:  Call  ActorSpeak        ( 00000059 .Actor:Self 00000001 0081001F 0081001E ) % Take a look at this! Look what I stole from Star H ...
  1DC:  Call  SetTargetActor    ( .Actor:Self .Actor:Player )
  1F0:  Call  SetGoalToTarget   ( .Actor:Self )
  200:  Call  SetAnimation      ( .Actor:Self 00000001 0081000F )
  218:  ExecWait  $Script_80220990
  224:  Call  UseBattleCamPreset    ( 00000013 )
  234:  Call  GetActorPos       ( .Actor:Self *Var0 *Var1 *Var2 )
  250:  Sub   *Var0  0000000F
  260:  Add   *Var1  00000041
  270:  Call  SetBattleCamTarget    ( *Var0 *Var1 *Var2 )
  288:  Call  SetBattleCamZoom  (  320` )
  298:  Call  SetBattleCamOffsetZ   (  0` )
  2A8:  Call  MoveBattleCamOver (  25` )
  2B8:  Call  ActorSpeak        ( 0000005A .Actor:Self 00000001 00810009 00810001 ) % Gwa ha ha ha ha ha! How do you like that, Mario?!
  2D8:  Call  SetDefenseTable   ( .Actor:Self 00000001 $DefenseTable_8021F220 )
  2F0:  Call  SetStatusTable    ( .Actor:Self $StatusTable_8021F2D8 )
  304:  Return
  30C:  End
}

#new:Script $Script_80220820
{
    0:  Set   *Var0  00000001
   10:  Call  GetActorPos   ( .Actor:Self *VarA *VarB *VarC )
   2C:  Call  SetGoalToHome ( .Actor:Self )
   3C:  Call  GetGoalPos    ( .Actor:Self *VarD *VarE *VarF )
   58:  Call  SetActorYaw   ( .Actor:Self  0` )
   6C:  Call  GetDist2D     ( *Var9 *VarA *VarC *VarD *VarF )
   8C:  If  *Var9  >=  *Fixed[5.0]
   9C:  	Call  SetAnimation  ( .Actor:Self *Var0 *Var1 )
   B4:  	Call  RunToGoal     ( .Actor:Self  0` .False )
   CC:  EndIf
   D4:  If  *VarB  ==  000000B4
   E4:  	Loop  0000000F
   F0:  		Sub   *VarB  0000000C
  100:  		Call  SetActorYaw   ( .Actor:Self *VarB )
  114:  		Wait  1`
  120:  	EndLoop
  128:  EndIf
  130:  Call  SetActorYaw   ( .Actor:Self  0` )
  144:  Return
  14C:  End
}

#new:Script $Script_80220974
{
    0:  Call  $Function_802181E4 ( )
    C:  Return
   14:  End
}

#new:Script $Script_80220990
{
    0:  Call  $Function_80218588 ( )
    C:  Call  GetStatusFlags    ( .Actor:Self *Var3 )
   20:  Call  GetActorPos       ( .Actor:Self *Var0 *Var1 *Var2 )
   3C:  If  *Var3  !&  ~Flags:StatusFlags:Shrink % 80000
   4C:  	Add   *Var0  0000000F
   5C:  	Add   *Var1  0000005A
   6C:  	Thread
   74:  		Call  PlaySoundAtActor      ( .Actor:Self 00002123 )
   88:  		Add   *Var2  0000000A
   98:  		Call  $Function_802186D0    ( *Var0 *Var1 *Var2 *Fixed[2.5] *Fixed[0.05] )
   B8:  	EndThread
   C0:  Else
   C8:  	Add   *Var0  00000006
   D8:  	Add   *Var1  00000024
   E8:  	Thread
   F0:  		Call  PlaySoundAtActor      ( .Actor:Self 00002123 )
  104:  		Add   *Var2  0000000A
  114:  		Call  $Function_802186D0    ( *Var0 *Var1 *Var2 *Fixed[2.5] *Fixed[0.02] )
  134:  	EndThread
  13C:  EndIf
  144:  Wait  65`
  150:  Call  GetActorPos   ( .Actor:Self *Var0 *Var1 *Var2 )
  16C:  If  *Var3  !&  ~Flags:StatusFlags:Shrink % 80000
  17C:  	Add   *Var0  0000000F
  18C:  	Sub   *Var2  00000003
  19C:  	Call  PlayEffect    ( ~FX:LightRays:SharpA *Var0 0000005A *Var2 *Fixed[1.0] *VarF 00000000 00000000 00000000 00000000 00000000 00000000 00000000 )
  1E0:  	Call  PlayEffect    ( 0000003C 00000002 *Var0 0000005A *Var2 *Fixed[1.0] *VarE 00000000 00000000 00000000 00000000 00000000 00000000 00000000 )
  224:  	Sub   *Var2  00000003
  234:  	Call  PlayEffect    ( 0000003C 00000002 *Var0 0000005A *Var2 *Fixed[1.0] *VarD 00000000 00000000 00000000 00000000 00000000 00000000 00000000 )
  278:  Else
  280:  	Add   *Var0  00000006
  290:  	Sub   *Var2  00000003
  2A0:  	Call  PlayEffect    ( ~FX:LightRays:SharpA *Var0 00000024 *Var2 *Fixed[0.4] *VarF 00000000 00000000 00000000 00000000 00000000 00000000 00000000 )
  2E4:  	Call  PlayEffect    ( 0000003C 00000002 *Var0 00000024 *Var2 *Fixed[0.4] *VarE 00000000 00000000 00000000 00000000 00000000 00000000 00000000 )
  328:  	Sub   *Var2  00000003
  338:  	Call  PlayEffect    ( 0000003C 00000002 *Var0 00000024 *Var2 *Fixed[0.4] *VarD 00000000 00000000 00000000 00000000 00000000 00000000 00000000 )
  37C:  EndIf
  384:  Call  PlaySoundAtActor  ( .Actor:Self 00002121 )
  398:  Wait  30`
  3A4:  Call  RemoveEffect      ( *VarF )
  3B4:  Call  RemoveEffect      ( *VarE )
  3C4:  Call  RemoveEffect      ( *VarD )
  3D4:  Call  SetPartEventBits  ( .Actor:Self 00000001 00040000 .True )
  3F0:  Call  AddActorDecoration    ( .Actor:Self 00000001 00000001 .Decoration:RadialStarEmitter )
  40C:  Call  SetDefenseTable   ( .Actor:Self 00000001 $DefenseTable_8021F220 )
  424:  Call  SetStatusTable    ( .Actor:Self $StatusTable_8021F2D8 )
  438:  Call  $Function_802186A0 ( )
  444:  Wait  3`
  450:  Call  GetStatusFlags    ( .Actor:Self *Var3 )
  464:  If  *Var3  !&  ~Flags:StatusFlags:Shrink % 80000
  474:  	Call  GetActorPos   ( .Actor:Self *Var0 *Var1 *Var2 )
  490:  	Add   *Var1  00000028
  4A0:  	Add   *Var2  0000000C
  4B0:  	Call  PlayEffect    ( ~FX:RainbowShimmer *Var0 *Var1 *Var2 00000046 00000050 00000019 0000003C 00000000 00000000 00000000 00000000 00000000 )
  4F4:  Else
  4FC:  	Call  GetActorPos   ( .Actor:Self *Var0 *Var1 *Var2 )
  518:  	Add   *Var1  00000010
  528:  	Add   *Var2  0000000C
  538:  	Call  PlayEffect    ( ~FX:RainbowShimmer *Var0 *Var1 *Var2 0000001C 00000020 0000000A 0000003C 00000000 00000000 00000000 00000000 00000000 )
  57C:  EndIf
  584:  Call  PlaySoundAtActor  ( .Actor:Self 00002125 )
  598:  Thread
  5A0:  	Call  GetActorPos   ( .Actor:Self *Var0 *Var1 *Var2 )
  5BC:  	Call  $Function_80218AA4    ( *Var0 *Var1 *Var2 *Fixed[0.8] )
  5D8:  EndThread
  5E0:  Wait  75`
  5EC:  Thread
  5F4:  	Call  $Function_80218620 ( )
  600:  EndThread
  608:  Call  SetAnimation      ( .Actor:Self 00000001 00810008 )
  620:  Call  GetStatusFlags    ( .Actor:Self *Var3 )
  634:  Call  GetActorPos       ( .Actor:Self *Var0 *Var1 *Var2 )
  650:  If  *Var3  !&  ~Flags:StatusFlags:Shrink % 80000
  660:  	Add   *Var1  00000028
  670:  Else
  678:  	Add   *Var1  00000010
  688:  EndIf
  690:  Call  PlayEffect        ( ~FX:EnergyWaveOut:Grey *Var0 *Var1 *Var2 *Fixed[1.0] 0000000F 00000000 00000000 00000000 00000000 00000000 00000000 00000000 )
  6D4:  Call  PlaySoundAtActor  ( .Actor:Self 00002124 )
  6E8:  Call  UseBattleCamPreset    ( 00000013 )
  6F8:  Call  GetActorPos       ( .Actor:Self *Var0 *Var1 *Var2 )
  714:  Sub   *Var0  0000000F
  724:  Add   *Var1  00000041
  734:  Call  SetBattleCamTarget    ( *Var0 *Var1 *Var2 )
  74C:  Call  SetBattleCamZoom  (  400` )
  75C:  Call  SetBattleCamOffsetZ   (  0` )
  76C:  Call  MoveBattleCamOver (  32` )
  77C:  Wait  32`
  788:  Return
  790:  End
}

% Origin: HEURISTIC
#new:Script $Script_80221128
{
    0:  If  *Var1  !=  FFFFFFFF
   10:  	Call  SetAnimation  ( .Actor:Self *Var0 *Var1 )
   28:  EndIf
   30:  Call  UseBattleCamPreset    ( 00000002 )
   40:  Call  SetActorJumpGravity   ( .Actor:Self *Fixed[1.4] )
   54:  Call  SetGoalToHome ( .Actor:Self )
   64:  Call  GetGoalPos    ( .Actor:Self *Var2 *Var3 *Var4 )
   80:  Call  GetActorPos   ( .Actor:Self *Var5 *Var6 *Var7 )
   9C:  Set   *Var8  *Var2
   AC:  Add   *Var8  *Var5
   BC:  Div   *Var8  00000002
   CC:  Set   *Var9  *Var4
   DC:  Add   *Var9  *Var7
   EC:  Div   *Var9  00000002
   FC:  Call  SetGoalPos    ( .Actor:Self *Var8  0` *Var9 )
  118:  Call  JumpToGoal    ( .Actor:Self  15` .False .True .False )
  138:  Add   *Var8  *Var2
  148:  Div   *Var8  00000002
  158:  Add   *Var9  *Var4
  168:  Div   *Var9  00000002
  178:  Call  SetGoalPos    ( .Actor:Self *Var8  0` *Var9 )
  194:  Call  JumpToGoal    ( .Actor:Self  8` .False .True .False )
  1B4:  Call  SetGoalPos    ( .Actor:Self *Var2 *Var3 *Var4 )
  1D0:  Call  JumpToGoal    ( .Actor:Self  5` .False .True .False )
  1F0:  Return
  1F8:  End
}

#new:Script $Script_80221328
{
    0:  Call  GetAnimation  ( .Actor:Self 00000001 *Var7 )
   18:  If  *Var7  !=  00810003
   28:  	If  *Var3  ==  00810003
   38:  		Call  PlaySoundAtActor  ( .Actor:Self 000020B4 )
   4C:  		Call  PlaySoundAtActor  ( .Actor:Self 000020F6 )
   60:  	EndIf
   68:  	Set   *Var3  *Var7
   78:  	Call  GetActorPos   ( .Actor:Self *Var0 *Var1 *Var2 )
   94:  	Return
   9C:  EndIf
   A4:  Call  GetActorPos   ( .Actor:Self *Var5 *Var6 *Var7 )
   C0:  Sub   *Var5  *Var0
   D0:  If  *Var5  >  FFFFFFE2
   E0:  	If  *Var5  <  0000001E
   F0:  		Set   *Var3  *Var7
  100:  		Return
  108:  	EndIf
  110:  EndIf
  118:  Call  GetActorPos       ( .Actor:Self *Var0 *Var1 *Var2 )
  134:  Call  PlaySoundAtActor  ( .Actor:Self 000020B4 )
  148:  Call  PlaySoundAtActor  ( .Actor:Self 000020F6 )
  15C:  Set   *Var3  *Var7
  16C:  Return
  174:  End
}

PADDING: 802214A4 to 802214B0 (006A86A4 to 006A86B0)
00000000 00000000 00000000

#new:IdleAnimations $IdleAnimations_802214B0
{
	.Status:Normal    00810002
	.Status:Stone     00810000
	.Status:Sleep     00810002
	.Status:Poison    00810002
	.Status:Stop      00810000
	.Status:Static    00810000
	.Status:Paralyze  00810000
	.Status:Paralyze  00810000
	.Status:Dizzy     00810002
	.Status:Dizzy     00810002
	.Status:End
}

#new:DefenseTable $DefenseTable_80221504
{
	.Element:Normal 00000001
	.Element:End
}

#new:DefenseTable $DefenseTable_80221510
{
	.Element:Normal 00000004
	.Element:End
}

#new:StatusTable $StatusTable_8022151C
{
	.Status:Normal      0`
	.Status:Default     0`
	.Status:Sleep      30`
	.Status:Poison      0`
	.Status:Frozen      0`
	.Status:Dizzy      30`
	.Status:Fear        0`
	.Status:Static      0`
	.Status:Paralyze   30`
	.Status:Shrink     50`
	.Status:Stop       30`
	.Status:DefaultTurnMod    0`
	.Status:SleepTurnMod     -1`
	.Status:PoisonTurnMod     0`
	.Status:FrozenTurnMod     0`
	.Status:DizzyTurnMod     -1`
	.Status:FearTurnMod       0`
	.Status:StaticTurnMod     0`
	.Status:ParalyzeTurnMod  -1`
	.Status:ShrinkTurnMod    -1`
	.Status:StopTurnMod      -2`
	.Status:End
}

#new:StatusTable $StatusTable_802215C8
{
	.Status:Normal      0`
	.Status:Default     0`
	.Status:Sleep       0`
	.Status:Poison      0`
	.Status:Frozen      0`
	.Status:Dizzy       0`
	.Status:Fear        0`
	.Status:Static      0`
	.Status:Paralyze    0`
	.Status:Shrink      0`
	.Status:Stop        0`
	.Status:DefaultTurnMod    0`
	.Status:SleepTurnMod     -1`
	.Status:PoisonTurnMod     0`
	.Status:FrozenTurnMod     0`
	.Status:DizzyTurnMod     -1`
	.Status:FearTurnMod       0`
	.Status:StaticTurnMod     0`
	.Status:ParalyzeTurnMod  -1`
	.Status:ShrinkTurnMod    -1`
	.Status:StopTurnMod      -2`
	.Status:End
}

#new:PartsTable $PartsTable_80221674
{
	00800000 01000000 EE4800FF $IdleAnimations_802214B0 $DefenseTable_80221504 00000000 00000000 00F80000 00000000
}

#new:Actor $Bowser1
{
	% stats
	[Index]        C1b
	[Level]       100`b
	[MaxHP]        50`b
	[Coins]         0`b
	[Flags]       00000000
	[StatusTable] $StatusTable_8022151C
	% ai
	[PartsCount]    1`s
	[PartsTable]  $PartsTable_80221674
	[Script]      $Script_Init_802216C0
	% move effectiveness
	[Escape]        0`b
	[Item]          0`b
	[AirLift]       0`b
	[Hurricane]     0`b % Bow's "Spook" as well
	[UpAndAway]     0`b
	[PowerBounce]  65`b
	[SpinSmash]     4`b % weight (0-4)
	% ui positions
	[Size]         80`b  82`b % width height
	[HealthBar]     0`b   0`b % dx dy
	[StatusTurn]  -40`b  67`b % dx dy
	[StatusIcon]   10`b  60`b % dx dy
}

#new:Script $Script_Init_802216C0
{
    0:  Call  SetActorVar   ( .Actor:Self 00000000 00000000 )
   18:  Call  SetActorVar   ( .Actor:Self 00000002 00000000 )
   30:  Call  SetActorVar   ( .Actor:Self 00000004 00000003 )
   48:  Call  SetActorVar   ( .Actor:Self 00000005 00000003 )
   60:  Call  SetActorVar   ( .Actor:Self 00000009 00000000 )
   78:  Call  SetActorVar   ( .Actor:Self 0000000A 00000000 )
   90:  Call  SetActorVar   ( .Actor:Self 00000003 00000000 )
   A8:  Call  SetActorVar   ( .Actor:Self 00000006 00000000 )
   C0:  Call  SetActorVar   ( .Actor:Self 00000007 00000001 )
   D8:  Call  SetActorVar   ( .Actor:Self 0000000E 00000000 )
   F0:  Call  BindTakeTurn  ( .Actor:Self $Script_TakeTurn_80222B48 )
  104:  Call  BindIdle      ( .Actor:Self $Script_Idle_80221844 )
  118:  Call  BindHandleEvent       ( .Actor:Self $Script_HandleEvent_80221B18 )
  12C:  Call  BindNextTurn  ( .Actor:Self $Script_NextTurn_80221970 )
  140:  Call  ModifyActorDecoration ( .Actor:Self 00000001 00000001 00000064 00000000 00000000 00000000 )
  168:  Exec  $Script_80222E2C
  174:  Return
  17C:  End
}

#new:Script $Script_Idle_80221844
{
    0:  Call  GetActorPos   ( .Actor:Self *Var0 *Var1 *Var2 )
   1C:  Call  GetAnimation  ( .Actor:Self 00000001 *Var3 )
   34:  Label  0
   40:  Call  ActorExists   ( .Actor:Self *VarB )
   54:  If  *VarB  ==  .False
   64:  	Return
   6C:  EndIf
   74:  Call  GetStatusFlags    ( .Actor:Self *VarB )
   88:  If  *VarB  !&  ~Flags:StatusFlags:Shrink % 80000
   98:  	Call  ModifyActorDecoration ( .Actor:Self 00000001 00000001 00000064 00000000 00000000 00000000 )
   C0:  Else
   C8:  	Call  ModifyActorDecoration ( .Actor:Self 00000001 00000001 00000028 00000000 00000000 00000000 )
   F0:  EndIf
   F8:  ExecWait  $Script_8022376C
  104:  Wait  1`
  110:  Goto  0
  11C:  Return
  124:  End
}

#new:Script $Script_NextTurn_80221970
{
    0:  Call  UseIdleAnimation  ( .Actor:Self .False )
   14:  Call  GetBattlePhase    ( *Var0 )
   24:  Switch  *Var0
   30:  	Case  ==  0000000A
   3C:  		Call  GetActorVar   ( .Actor:Self 00000001 *Var0 )
   54:  		If  *Var0  !&  00000001
   64:  			ConstOR  *Var0 00000001
   74:  			Call  SetActorVar       ( .Actor:Self 00000001 *Var0 )
   8C:  			Call  802535B4  ( 00000000 )
   9C:  			Call  UseBattleCamPreset    ( 0000000D )
   AC:  			Call  BattleCamTargetActor  ( .Actor:Self )
   BC:  			Call  MoveBattleCamOver (  20` )
   CC:  			Wait  20`
   D8:  			Call  UseIdleAnimation  ( .Actor:Self .False )
   EC:  			Call  ActorSpeak        ( 00130073 .Actor:Self 00000001 00810005 00810002 ) % Gwaaaah ha ha ha!!! All right, Mario! Let's see yo ...
  10C:  			Call  SetAnimation      ( .Actor:Self 00000001 00810002 )
  124:  			Call  UseBattleCamPreset    ( 00000002 )
  134:  			Call  MoveBattleCamOver (  20` )
  144:  			Wait  20`
  150:  			Call  802535B4  ( 00000001 )
  160:  		EndIf
  168:  EndSwitch
  170:  Call  EnableIdleScript  ( .Actor:Self 00000001 )
  184:  Call  UseIdleAnimation  ( .Actor:Self .True )
  198:  Return
  1A0:  End
}

#new:Script $Script_HandleEvent_80221B18
{
    0:  Call  UseIdleAnimation  ( .Actor:Self .False )
   14:  Call  GetLastElement    ( *VarE )
   24:  Call  GetLastEvent      ( .Actor:Self *Var0 )
   38:  Switch  *Var0
   44:  	Case  ==  .Event:BeginFirstStrike % 38
   50:  	Case  ==  .Event:HitCombo % 9
   5C:  		Set   *Var1  0081000D
   6C:  		ExecWait  $Script_802227B4
   78:  		Return
   80:  	Case  ==  .Event:Hit % A
   8C:  		Set   *Var1  0081000D
   9C:  		ExecWait  $Script_8022260C
   A8:  		Return
   B0:  	Case  ==  .Event:Death % 20
   BC:  		SetConst  *Var1  0081000D
   CC:  		ExecWait  $Script_802227B4
   D8:  		SetConst  *Var0  00000001
   E8:  		SetConst  *Var1  0081000D
   F8:  		ExecWait  $Script_802227E0
  104:  		Return
  10C:  	Case  ==  .Event:BurnHit % E
  118:  		Set   *Var0  00000001
  128:  		Set   *Var1  00810020
  138:  		Set   *Var2  00810021
  148:  		ExecWait  $Script_80226F08
  154:  		Call  GetPartEventFlags ( .Actor:Self 00000001 *Var0 )
  16C:  		If  *Var0  !&  00040000
  17C:  			Call  GetActorVar   ( .Actor:Self 00000001 *Var0 )
  194:  			If  *Var0  &  00000004
  1A4:  				If  *Var0  !&  00000008
  1B4:  					ConstOR  *Var0 00000008
  1C4:  					Call  SetActorVar       ( .Actor:Self 00000001 *Var0 )
  1DC:  					Call  GetStatusFlags    ( .Actor:Self *Var0 )
  1F0:  					If  *Var0  !&  ~Flags:StatusFlags:Sleep|Paralyze|Dizzy|Stone|Stop % 351000
  200:  						Call  UseBattleCamPreset    ( 0000000D )
  210:  						Call  BattleCamTargetActor  ( .Actor:Self )
  220:  						Call  MoveBattleCamOver     (  30` )
  230:  						Call  ActorSpeak    ( 00130077 .Actor:Self 00000001 0081000B 0081000B ) % Graaaargh! You cheap little...coward!! This fight' ...
  250:  					EndIf
  258:  				EndIf
  260:  			EndIf
  268:  		EndIf
  270:  		Call  UseIdleAnimation  ( .Actor:Self .True )
  284:  		Return
  28C:  	Case  ==  .Event:BurnDeath % 24
  298:  		Set   *Var0  00000001
  2A8:  		Set   *Var1  00810020
  2B8:  		Set   *Var2  00810021
  2C8:  		ExecWait  $Script_80226F08
  2D4:  		SetConst  *Var0  00000001
  2E4:  		SetConst  *Var1  00810021
  2F4:  		ExecWait  $Script_802227E0
  300:  		Return
  308:  	Case  ==  .Event:SpinSmashHit % B
  314:  		Set   *Var1  0081000D
  324:  		ExecWait  $Script_8022260C
  330:  		Return
  338:  	Case  ==  .Event:SpinSmashDeath % 21
  344:  		SetConst  *Var1  0081000D
  354:  		ExecWait  $Script_802227B4
  360:  		SetConst  *Var0  00000001
  370:  		SetConst  *Var1  0081000D
  380:  		ExecWait  $Script_802227E0
  38C:  		Return
  394:  	Case  ==  .Event:ShockHit % 2F
  3A0:  		SetConst  *Var0  00000001
  3B0:  		SetConst  *Var1  0081000D
  3C0:  		ExecWait  DoShockHit
  3CC:  		SetConst  *Var0  00000001
  3DC:  		SetConst  *Var1  0081000D
  3EC:  		ExecWait  $Script_8022356C
  3F8:  		Call  SetActorSpeed ( .Actor:Self *Fixed[8.0] )
  40C:  		Set   *Var1  00810003
  41C:  		ExecWait  $Script_80222CD8
  428:  	Case  ==  .Event:ShockDeath % 26
  434:  		SetConst  *Var0  00000001
  444:  		SetConst  *Var1  0081000D
  454:  		ExecWait  DoShockHit
  460:  		SetConst  *Var0  00000001
  470:  		SetConst  *Var1  0081000D
  480:  		ExecWait  $Script_8022356C
  48C:  		SetConst  *Var0  00000001
  49C:  		SetConst  *Var1  0081000D
  4AC:  		ExecWait  $Script_802227E0
  4B8:  		Return
  4C0:  	CaseOR  ==  00000017 % 17
  4CC:  	CaseOR  ==  .Event:Immune % 19
  4D8:  		Call  80269E80  ( *Var2 )
  4E8:  		Switch  *Var2
  4F4:  			CaseOR  ==  00000012
  500:  			CaseOR  ==  00000015
  50C:  				Call  SetAnimation  ( .Actor:Self 00000001 00810007 )
  524:  				Wait  30`
  530:  			EndCaseGroup
  538:  			Default
  540:  				Set   *Var1  00810007
  550:  				ExecWait  $Script_80222B1C
  55C:  		EndSwitch
  564:  	EndCaseGroup
  56C:  	Case  ==  .Event:AirLiftFailed % 1F
  578:  		SetConst  *Var0  00000001
  588:  		Set   *Var1  00810002
  598:  		ExecWait  DoImmune
  5A4:  	Case  ==  .Event:SpikeTaunt % 1B
  5B0:  	Case  ==  .Event:EndFirstStrike % 35
  5BC:  	Case  ==  .Event:RecoverStatus % 31
  5C8:  		SetConst  *Var0  00000001
  5D8:  		SetConst  *Var1  00810012
  5E8:  		ExecWait  DoRecover
  5F4:  		Call  SetAnimation  ( .Actor:Self 00000001 00810014 )
  60C:  		Call  ShakeCam      ( .Cam:Battle 00000000  4` *Fixed[3.0] )
  628:  	Case  ==  00000030 % 30
  634:  		SetConst  *Var0  00000001
  644:  		SetConst  *Var1  0081000D
  654:  		ExecWait  DoNormalHit
  660:  		Wait  1000`
  66C:  	Case  ==  .Event:SwapPartner % 3F
  678:  		Call  $Function_80219394 ( )
  684:  	Case  ==  .Event:StarBeam % 13
  690:  		Call  FreezeBattleCam       ( .True )
  6A0:  		Call  RemoveActorDecoration ( .Actor:Self 00000001 00000001 )
  6B8:  		Call  GetStatusFlags        ( .Actor:Self *Var3 )
  6CC:  		If  *Var3  !&  ~Flags:StatusFlags:Shrink % 80000
  6DC:  			Set   *Var3  00000032
  6EC:  			Set   *Var4  00000028
  6FC:  		Else
  704:  			Set   *Var3  00000014
  714:  			Set   *Var4  00000010
  724:  		EndIf
  72C:  		Call  GetActorPos   ( .Actor:Self *Var0 *Var1 *Var2 )
  748:  		Add   *Var1  *Var3
  758:  		Call  PlayEffect    ( ~FX:Sparkles:Star *Var0 *Var1 *Var2 00000032 00000000 00000000 00000000 00000000 00000000 00000000 00000000 00000000 )
  79C:  		Call  GetActorPos   ( .Actor:Self *Var0 *Var1 *Var2 )
  7B8:  		Add   *Var1  *Var4
  7C8:  		Call  PlayEffect    ( ~FX:ShimmerBurst:Pink *Var0 *Var1 *Var2 *Fixed[0.7] 0000001E 00000000 00000000 00000000 00000000 00000000 00000000 00000000 )
  80C:  		Call  SetPartEventBits  ( .Actor:Self 00000001 00040000 .False )
  828:  		Call  SetActorVar   ( .Actor:Self 00000003 00000000 )
  840:  		Call  SetDefenseTable   ( .Actor:Self 00000001 $DefenseTable_80221504 )
  858:  		Call  SetStatusTable    ( .Actor:Self $StatusTable_8022151C )
  86C:  		Set   *Var1  0081000D
  87C:  		ExecWait  $Script_802227B4
  888:  		Call  GetActorVar   ( .Actor:Self 00000001 *Var0 )
  8A0:  		If  *Var0  !&  00000002
  8B0:  			ConstOR  *Var0 00000002
  8C0:  			ConstOR  *Var0 00000004
  8D0:  			Call  SetActorVar       ( .Actor:Self 00000001 *Var0 )
  8E8:  			Call  UseBattleCamPreset    ( 0000000D )
  8F8:  			Call  BattleCamTargetActor  ( .Actor:Self )
  908:  			Call  MoveBattleCamOver (  30` )
  918:  			Call  ActorSpeak        ( 00130075 .Actor:Self 00000001 0081000D 0081000D ) % What the...OW! What in the world was that?
  938:  			Call  SetAnimation      ( .Actor:Self 00000001 00810001 )
  950:  			Loop  00000002
  95C:  				Set   *Var0  00000000
  96C:  				Loop  0000000A
  978:  					Add   *Var0  00000012
  988:  					Call  SetActorYaw   ( .Actor:Self *Var0 )
  99C:  					Wait  1`
  9A8:  				EndLoop
  9B0:  				Wait  5`
  9BC:  				Set   *Var0  000000B4
  9CC:  				Loop  0000000A
  9D8:  					Sub   *Var0  00000012
  9E8:  					Call  SetActorYaw   ( .Actor:Self *Var0 )
  9FC:  					Wait  1`
  A08:  				EndLoop
  A10:  				Call  SetActorYaw   ( .Actor:Self  0` )
  A24:  				Wait  5`
  A30:  			EndLoop
  A38:  			Wait  20`
  A44:  			Call  ActorSpeak    ( 00130076 .Actor:Self 00000001 0081000D 0081000D ) % Goooah? What happened to the power of that stupid  ...
  A64:  			Call  SetAnimation  ( .Actor:Self 00000001 00810002 )
  A7C:  		EndIf
  A84:  		Call  FreezeBattleCam       ( .False )
  A94:  		Call  UseBattleCamPreset    ( 00000002 )
  AA4:  		Call  MoveBattleCamOver     (  30` )
  AB4:  		Wait  30`
  AC0:  	Default
  AC8:  EndSwitch
  AD0:  Call  UseIdleAnimation  ( .Actor:Self .True )
  AE4:  Return
  AEC:  End
}

#new:Script $Script_8022260C
{
    0:  Call  GetPartEventFlags ( .Actor:Self 00000001 *Var0 )
   18:  If  *Var0  !&  00040000
   28:  	Call  GetActorVar   ( .Actor:Self 00000001 *Var0 )
   40:  	If  *Var0  &  00000004
   50:  		If  *Var0  !&  00000008
   60:  			ConstOR  *Var0 00000008
   70:  			Call  SetActorVar       ( .Actor:Self 00000001 *Var0 )
   88:  			Call  GetStatusFlags    ( .Actor:Self *Var0 )
   9C:  			If  *Var0  !&  ~Flags:StatusFlags:Sleep|Paralyze|Dizzy|Stone|Stop % 351000
   AC:  				Call  FreezeBattleCam   ( .True )
   BC:  				ExecWait  $Script_802227B4
   C8:  				Call  UseBattleCamPreset    ( 0000000D )
   D8:  				Call  BattleCamTargetActor  ( .Actor:Self )
   E8:  				Call  MoveBattleCamOver (  30` )
   F8:  				Call  ActorSpeak        ( 00130077 .Actor:Self 00000001 0081000B 0081000B ) % Graaaargh! You cheap little...coward!! This fight' ...
  118:  				Call  FreezeBattleCam   ( .False )
  128:  			Else
  130:  				ExecWait  $Script_802227B4
  13C:  			EndIf
  144:  			Call  UseIdleAnimation  ( .Actor:Self .True )
  158:  			Return
  160:  		EndIf
  168:  	EndIf
  170:  EndIf
  178:  ExecWait  $Script_802227B4
  184:  Call  UseIdleAnimation  ( .Actor:Self .True )
  198:  Return
  1A0:  End
}

#new:Script $Script_802227B4
{
    0:  SetConst  *Var0  00000001
   10:  ExecWait  DoNormalHit
   1C:  Return
   24:  End
}

#new:Script $Script_802227E0
{
    0:  Call  8027D32C  ( FFFFFF81 )
   10:  Call  UseIdleAnimation  ( .Actor:Self .False )
   24:  If  *Var1  !=  FFFFFFFF
   34:  	Call  SetAnimation  ( .Actor:Self *Var0 *Var1 )
   4C:  	Wait  10`
   58:  EndIf
   60:  Call  80269E80  ( *Var5 )
   70:  Switch  *Var5
   7C:  	CaseOR  ==  0000000A
   88:  	CaseOR  ==  0000000E
   94:  	CaseOR  ==  0000000C
   A0:  	CaseOR  ==  00000010
   AC:  	CaseOR  ==  0000000B
   B8:  	CaseOR  ==  0000000F
   C4:  	CaseOR  ==  0000000D
   D0:  	CaseOR  ==  00000011
   DC:  	CaseOR  ==  00000002
   E8:  	EndCaseGroup
   F0:  	Default
   F8:  		Set   *Flag[00]  .False
  108:  		Call  GetOriginalActorType  ( .Actor:Self *Var1 )
  11C:  		Switch  *Var1
  128:  			CaseOR  ==  0000000D
  134:  			CaseOR  ==  0000000F
  140:  			CaseOR  ==  0000004A
  14C:  			EndCaseGroup
  154:  			Default
  15C:  		EndSwitch
  164:  		If  *Var2  !=  FFFFCFC7
  174:  			Set   *Var2  00000000
  184:  			Loop  00000018
  190:  				Call  SetActorYaw   ( .Actor:Self *Var2 )
  1A4:  				Add   *Var2  0000001E
  1B4:  				Wait  1`
  1C0:  			EndLoop
  1C8:  			Call  SetActorYaw   ( .Actor:Self  0` )
  1DC:  		EndIf
  1E4:  EndSwitch
  1EC:  Call  GetActorPos       ( .Actor:Self *Var0 *Var1 *Var2 )
  208:  Add   *Var1  0000000A
  218:  Add   *Var2  0000000A
  228:  Call  PlayEffect        ( ~FX:BigSmokePuff *Var0 *Var1 *Var2 00000000 00000000 00000000 00000000 00000000 00000000 00000000 00000000 00000000 00000000 )
  26C:  Call  PlaySoundAtActor  ( .Actor:Self .Sound:Death )
  280:  Call  DropStarPoints    ( .Actor:Self )
  290:  Call  SetActorYaw       ( .Actor:Self  0` )
  2A4:  Set   *Var3  00000000
  2B4:  Loop  0000000C
  2C0:  	Call  SetActorRotation  ( .Actor:Self *Var3 00000000 00000000 )
  2DC:  	Add   *Var3  00000008
  2EC:  	Wait  1`
  2F8:  EndLoop
  300:  Call  UseBattleCamPreset    ( 00000002 )
  310:  ExecWait  ForceNextTarget
  31C:  Call  RemoveActor   ( .Actor:Self )
  32C:  Return
  334:  End
}

#new:Script $Script_80222B1C
{
    0:  SetConst  *Var0  00000001
   10:  ExecWait  DoImmune
   1C:  Return
   24:  End
}

#new:Script $Script_TakeTurn_80222B48
{
    0:  Call  UseIdleAnimation  ( .Actor:Self .False )
   14:  Call  UseIdleAnimation  ( .Actor:Self .False )
   28:  ExecWait  $Script_80223E20
   34:  Call  UseIdleAnimation  ( .Actor:Self .True )
   48:  Return
   50:  End
}

#new:Script $Script_UseStarRod1
{
    0:  Call  GetActorVar   ( .Actor:Self 00000001 *Var0 )
   18:  If  *Var0  !&  00000040
   28:  	ConstOR  *Var0 00000040
   38:  	Call  SetActorVar       ( .Actor:Self 00000001 *Var0 )
   50:  	Call  UseBattleCamPreset    ( 0000000D )
   60:  	Call  BattleCamTargetActor  ( .Actor:Self )
   70:  	Call  MoveBattleCamOver (  20` )
   80:  	Wait  20`
   8C:  	Call  SetAnimation      ( .Actor:Self 00000001 0081000F )
   A4:  	Wait  5`
   B0:  	Call  ActorSpeak        ( 00130074 .Actor:Self 00000001 0081001F 0081001E ) % All right, enough of that! Now witness the power o ...
   D0:  	Call  SetAnimation      ( .Actor:Self 00000001 00810010 )
   E8:  Else
   F0:  	Call  SetAnimation  ( .Actor:Self 00000001 0081000F )
  108:  EndIf
  110:  Wait  2`
  11C:  ExecWait  $Script_80222E48
  128:  Return
  130:  End
}

#new:Script $Script_80222CD8
{
    0:  Set   *Var0  00000001
   10:  Call  GetActorPos   ( .Actor:Self *VarA *VarB *VarC )
   2C:  Call  SetGoalToHome ( .Actor:Self )
   3C:  Call  GetGoalPos    ( .Actor:Self *VarD *VarE *VarF )
   58:  Call  SetActorYaw   ( .Actor:Self  0` )
   6C:  Call  GetDist2D     ( *Var9 *VarA *VarC *VarD *VarF )
   8C:  If  *Var9  >=  *Fixed[5.0]
   9C:  	Call  SetAnimation  ( .Actor:Self *Var0 *Var1 )
   B4:  	Call  RunToGoal     ( .Actor:Self  0` .False )
   CC:  EndIf
   D4:  If  *VarB  ==  000000B4
   E4:  	Loop  0000000F
   F0:  		Sub   *VarB  0000000C
  100:  		Call  SetActorYaw   ( .Actor:Self *VarB )
  114:  		Wait  1`
  120:  	EndLoop
  128:  EndIf
  130:  Call  SetActorYaw   ( .Actor:Self  0` )
  144:  Return
  14C:  End
}

#new:Script $Script_80222E2C
{
    0:  Call  $Function_80218F58 ( )
    C:  Return
   14:  End
}

#new:Script $Script_80222E48
{
    0:  Call  $Function_802192FC ( )
    C:  Call  GetStatusFlags    ( .Actor:Self *Var3 )
   20:  Call  GetActorPos       ( .Actor:Self *Var0 *Var1 *Var2 )
   3C:  If  *Var3  !&  ~Flags:StatusFlags:Shrink % 80000
   4C:  	Add   *Var0  0000000F
   5C:  	Add   *Var1  0000005A
   6C:  	Thread
   74:  		Call  PlaySoundAtActor      ( .Actor:Self 00002123 )
   88:  		Add   *Var2  0000000A
   98:  		Call  $Function_80219444    ( *Var0 *Var1 *Var2 *Fixed[2.5] *Fixed[0.05] )
   B8:  	EndThread
   C0:  Else
   C8:  	Add   *Var0  00000006
   D8:  	Add   *Var1  00000024
   E8:  	Thread
   F0:  		Call  PlaySoundAtActor      ( .Actor:Self 00002123 )
  104:  		Add   *Var2  0000000A
  114:  		Call  $Function_80219444    ( *Var0 *Var1 *Var2 *Fixed[2.5] *Fixed[0.02] )
  134:  	EndThread
  13C:  EndIf
  144:  Wait  65`
  150:  Call  GetActorPos   ( .Actor:Self *Var0 *Var1 *Var2 )
  16C:  If  *Var3  !&  ~Flags:StatusFlags:Shrink % 80000
  17C:  	Add   *Var0  0000000F
  18C:  	Sub   *Var2  00000003
  19C:  	Call  PlayEffect    ( ~FX:LightRays:SharpA *Var0 0000005A *Var2 *Fixed[1.0] *VarF 00000000 00000000 00000000 00000000 00000000 00000000 00000000 )
  1E0:  	Call  PlayEffect    ( 0000003C 00000002 *Var0 0000005A *Var2 *Fixed[1.0] *VarE 00000000 00000000 00000000 00000000 00000000 00000000 00000000 )
  224:  	Sub   *Var2  00000003
  234:  	Call  PlayEffect    ( 0000003C 00000002 *Var0 0000005A *Var2 *Fixed[1.0] *VarD 00000000 00000000 00000000 00000000 00000000 00000000 00000000 )
  278:  Else
  280:  	Add   *Var0  00000006
  290:  	Sub   *Var2  00000003
  2A0:  	Call  PlayEffect    ( ~FX:LightRays:SharpA *Var0 00000024 *Var2 *Fixed[0.4] *VarF 00000000 00000000 00000000 00000000 00000000 00000000 00000000 )
  2E4:  	Call  PlayEffect    ( 0000003C 00000002 *Var0 00000024 *Var2 *Fixed[0.4] *VarE 00000000 00000000 00000000 00000000 00000000 00000000 00000000 )
  328:  	Sub   *Var2  00000003
  338:  	Call  PlayEffect    ( 0000003C 00000002 *Var0 00000024 *Var2 *Fixed[0.4] *VarD 00000000 00000000 00000000 00000000 00000000 00000000 00000000 )
  37C:  EndIf
  384:  Call  PlaySoundAtActor  ( .Actor:Self 00002121 )
  398:  Wait  30`
  3A4:  Call  RemoveEffect      ( *VarF )
  3B4:  Call  RemoveEffect      ( *VarE )
  3C4:  Call  RemoveEffect      ( *VarD )
  3D4:  Call  SetPartEventBits  ( .Actor:Self 00000001 00040000 .True )
  3F0:  Call  AddActorDecoration    ( .Actor:Self 00000001 00000001 .Decoration:RadialStarEmitter )
  40C:  Call  SetDefenseTable   ( .Actor:Self 00000001 $DefenseTable_80221510 )
  424:  Call  SetStatusTable    ( .Actor:Self $StatusTable_802215C8 )
  438:  Call  $Function_80219414 ( )
  444:  Wait  3`
  450:  Call  GetStatusFlags    ( .Actor:Self *Var3 )
  464:  If  *Var3  !&  ~Flags:StatusFlags:Shrink % 80000
  474:  	Call  GetActorPos   ( .Actor:Self *Var0 *Var1 *Var2 )
  490:  	Add   *Var1  00000028
  4A0:  	Add   *Var2  0000000C
  4B0:  	Call  PlayEffect    ( ~FX:RainbowShimmer *Var0 *Var1 *Var2 00000046 00000050 00000019 0000003C 00000000 00000000 00000000 00000000 00000000 )
  4F4:  Else
  4FC:  	Call  GetActorPos   ( .Actor:Self *Var0 *Var1 *Var2 )
  518:  	Add   *Var1  00000010
  528:  	Add   *Var2  0000000C
  538:  	Call  PlayEffect    ( ~FX:RainbowShimmer *Var0 *Var1 *Var2 0000001C 00000020 0000000A 0000003C 00000000 00000000 00000000 00000000 00000000 )
  57C:  EndIf
  584:  Call  PlaySoundAtActor  ( .Actor:Self 00002125 )
  598:  Thread
  5A0:  	Call  GetActorPos   ( .Actor:Self *Var0 *Var1 *Var2 )
  5BC:  	Call  $Function_80219818    ( *Var0 *Var1 *Var2 *Fixed[0.8] )
  5D8:  EndThread
  5E0:  Wait  75`
  5EC:  Thread
  5F4:  	Call  $Function_80219394 ( )
  600:  EndThread
  608:  Call  SetAnimation      ( .Actor:Self 00000001 00810008 )
  620:  Call  GetStatusFlags    ( .Actor:Self *Var3 )
  634:  Call  GetActorPos       ( .Actor:Self *Var0 *Var1 *Var2 )
  650:  If  *Var3  !&  ~Flags:StatusFlags:Shrink % 80000
  660:  	Add   *Var1  00000028
  670:  Else
  678:  	Add   *Var1  00000010
  688:  EndIf
  690:  Call  PlayEffect        ( ~FX:EnergyWaveOut:Grey *Var0 *Var1 *Var2 *Fixed[1.0] 0000000F 00000000 00000000 00000000 00000000 00000000 00000000 00000000 )
  6D4:  Call  PlaySoundAtActor  ( .Actor:Self 00002124 )
  6E8:  Call  UseBattleCamPreset    ( 00000002 )
  6F8:  Call  MoveBattleCamOver (  39` )
  708:  Wait  30`
  714:  Return
  71C:  End
}

#new:Script $Script_8022356C
{
    0:  If  *Var1  !=  FFFFFFFF
   10:  	Call  SetAnimation  ( .Actor:Self *Var0 *Var1 )
   28:  EndIf
   30:  Call  UseBattleCamPreset    ( 00000002 )
   40:  Call  SetActorJumpGravity   ( .Actor:Self *Fixed[1.4] )
   54:  Call  SetGoalToHome ( .Actor:Self )
   64:  Call  GetGoalPos    ( .Actor:Self *Var2 *Var3 *Var4 )
   80:  Call  GetActorPos   ( .Actor:Self *Var5 *Var6 *Var7 )
   9C:  Set   *Var8  *Var2
   AC:  Add   *Var8  *Var5
   BC:  Div   *Var8  00000002
   CC:  Set   *Var9  *Var4
   DC:  Add   *Var9  *Var7
   EC:  Div   *Var9  00000002
   FC:  Call  SetGoalPos    ( .Actor:Self *Var8  0` *Var9 )
  118:  Call  JumpToGoal    ( .Actor:Self  15` .False .True .False )
  138:  Add   *Var8  *Var2
  148:  Div   *Var8  00000002
  158:  Add   *Var9  *Var4
  168:  Div   *Var9  00000002
  178:  Call  SetGoalPos    ( .Actor:Self *Var8  0` *Var9 )
  194:  Call  JumpToGoal    ( .Actor:Self  8` .False .True .False )
  1B4:  Call  SetGoalPos    ( .Actor:Self *Var2 *Var3 *Var4 )
  1D0:  Call  JumpToGoal    ( .Actor:Self  5` .False .True .False )
  1F0:  Return
  1F8:  End
}

#new:Script $Script_8022376C
{
    0:  Call  GetAnimation  ( .Actor:Self 00000001 *Var7 )
   18:  If  *Var7  !=  00810003
   28:  	If  *Var3  ==  00810003
   38:  		Call  PlaySoundAtActor  ( .Actor:Self 000020B4 )
   4C:  		Call  PlaySoundAtActor  ( .Actor:Self 000020F6 )
   60:  	EndIf
   68:  	Set   *Var3  *Var7
   78:  	Call  GetActorPos   ( .Actor:Self *Var0 *Var1 *Var2 )
   94:  	Return
   9C:  EndIf
   A4:  Call  GetActorPos   ( .Actor:Self *Var5 *Var6 *Var7 )
   C0:  Sub   *Var5  *Var0
   D0:  If  *Var5  >  FFFFFFE2
   E0:  	If  *Var5  <  0000001E
   F0:  		Set   *Var3  *Var7
  100:  		Return
  108:  	EndIf
  110:  EndIf
  118:  Call  GetActorPos       ( .Actor:Self *Var0 *Var1 *Var2 )
  134:  Call  PlaySoundAtActor  ( .Actor:Self 000020B4 )
  148:  Call  PlaySoundAtActor  ( .Actor:Self 000020F6 )
  15C:  Set   *Var3  *Var7
  16C:  Return
  174:  End
}

#new:Script $Script_HealSelf1
{
    0:  Call  GetActorVar       ( .Actor:Self 00000007 *Var0 )
   18:  Sub   *Var0  00000001
   28:  Call  SetActorVar       ( .Actor:Self 00000007 *Var0 )
   40:  Call  GetStatusFlags    ( .Actor:Self *Var3 )
   54:  If  *Var3  !&  ~Flags:StatusFlags:Shrink % 80000
   64:  	Call  UseBattleCamPreset    ( 00000013 )
   74:  	Call  GetActorPos   ( .Actor:Self *Var0 *Var1 *Var2 )
   90:  	Sub   *Var0  0000000F
   A0:  	Add   *Var1  00000041
   B0:  	Call  SetBattleCamTarget    ( *Var0 *Var1 *Var2 )
   C8:  	Call  SetBattleCamZoom      (  420` )
   D8:  	Call  SetBattleCamOffsetZ   (  0` )
   E8:  	Call  MoveBattleCamOver     (  40` )
   F8:  Else
  100:  	Call  UseBattleCamPreset    ( 00000013 )
  110:  	Call  GetActorPos   ( .Actor:Self *Var0 *Var1 *Var2 )
  12C:  	Sub   *Var0  00000006
  13C:  	Add   *Var1  0000001A
  14C:  	Call  SetBattleCamTarget    ( *Var0 *Var1 *Var2 )
  164:  	Call  SetBattleCamZoom      (  294` )
  174:  	Call  SetBattleCamOffsetZ   (  0` )
  184:  	Call  MoveBattleCamOver     (  40` )
  194:  EndIf
  19C:  Call  SetAnimation      ( .Actor:Self 00000001 0081000F )
  1B4:  Call  $Function_802192FC ( )
  1C0:  Call  PlaySoundAtActor  ( .Actor:Self 00002126 )
  1D4:  Call  GetStatusFlags    ( .Actor:Self *Var3 )
  1E8:  If  *Var3  !&  ~Flags:StatusFlags:Shrink % 80000
  1F8:  	Call  GetActorPos   ( .Actor:Self *Var0 *Var1 *Var2 )
  214:  	Add   *Var0  0000000F
  224:  	Add   *Var1  0000005A
  234:  	Sub   *Var2  00000003
  244:  	Call  PlayEffect    ( ~FX:EnergyIn:YellowPoints *Var0 *Var1 *Var2 *Fixed[1.0] 00000032 00000000 00000000 00000000 00000000 00000000 00000000 00000000 )
  288:  	Call  GetActorPos   ( .Actor:Self *Var0 *Var1 *Var2 )
  2A4:  	Add   *Var0  0000000F
  2B4:  	Sub   *Var2  00000003
  2C4:  	Call  PlayEffect    ( ~FX:RadialFlowOut:YellowEnergy *Var0 0000005A *Var2 *Fixed[0.3] 0000001E 00000000 00000000 00000000 00000000 00000000 00000000 00000000 )
  308:  Else
  310:  	Call  GetActorPos   ( .Actor:Self *Var0 *Var1 *Var2 )
  32C:  	Add   *Var0  00000006
  33C:  	Add   *Var1  00000024
  34C:  	Sub   *Var2  00000003
  35C:  	Call  PlayEffect    ( ~FX:EnergyIn:YellowPoints *Var0 *Var1 *Var2 *Fixed[0.4] 00000032 00000000 00000000 00000000 00000000 00000000 00000000 00000000 )
  3A0:  	Call  GetActorPos   ( .Actor:Self *Var0 *Var1 *Var2 )
  3BC:  	Add   *Var0  00000006
  3CC:  	Sub   *Var2  00000003
  3DC:  	Call  PlayEffect    ( ~FX:RadialFlowOut:YellowEnergy *Var0 00000024 *Var2 *Fixed[0.12] 0000001E 00000000 00000000 00000000 00000000 00000000 00000000 00000000 )
  420:  EndIf
  428:  Wait  30`
  434:  Call  GetEnemyMaxHP ( .Actor:Self *Var0 )
  448:  Mul   *Var0  00000028
  458:  Div   *Var0  00000064
  468:  Thread
  470:  	Wait  5`
  47C:  	Call  PlaySoundAtActor  ( .Actor:Self 0000206D )
  490:  	Call  PlaySoundAtActor  ( .Actor:Self 00000214 )
  4A4:  	Wait  30`
  4B0:  	Call  PlaySoundAtActor  ( .Actor:Self 0000025C )
  4C4:  EndThread
  4CC:  Thread
  4D4:  	Call  8026BF48  ( 00000001 )
  4E4:  	Call  HealActor ( .Actor:Self *Var0 .False )
  4FC:  	Call  8026BF48  ( 00000000 )
  50C:  EndThread
  514:  Call  UseIdleAnimation  ( .Actor:Self .True )
  528:  Return
  530:  End
}

#new:Script $Script_80223E20
{
    0:  Call  AddActorVar   ( .Actor:Self 00000000 00000001 )
   18:  Call  AddActorVar   ( .Actor:Self 00000004 00000001 )
   30:  Call  AddActorVar   ( .Actor:Self 00000005 00000001 )
   48:  Call  AddActorVar   ( .Actor:Self 00000002 00000001 )
   60:  Call  AddActorVar   ( .Actor:Self 00000003 00000001 )
   78:  Call  AddActorVar   ( .Actor:Self 00000006 00000001 )
   90:  Call  GetActorVar   ( .Actor:Self 00000000 *Var0 )
   A8:  If  *Var0  ==  00000002
   B8:  	Call  GetStatusFlags    ( .Actor:Self *Var0 )
   CC:  	If  *Var0  !&  ~Flags:StatusFlags:Shrink % 80000
   DC:  		Call  UseBattleCamPreset    ( 00000013 )
   EC:  		Call  GetActorPos   ( .Actor:Self *Var0 *Var1 *Var2 )
  108:  		Sub   *Var0  0000000F
  118:  		Add   *Var1  0000003C
  128:  		Call  SetBattleCamTarget    ( *Var0 *Var1 *Var2 )
  140:  		Call  SetBattleCamZoom      (  420` )
  150:  		Call  SetBattleCamOffsetZ   (  0` )
  160:  		Call  MoveBattleCamOver     (  30` )
  170:  	Else
  178:  		Call  UseBattleCamPreset    ( 00000013 )
  188:  		Call  GetActorPos   ( .Actor:Self *Var0 *Var1 *Var2 )
  1A4:  		Sub   *Var0  00000006
  1B4:  		Add   *Var1  00000018
  1C4:  		Call  SetBattleCamTarget    ( *Var0 *Var1 *Var2 )
  1DC:  		Call  SetBattleCamZoom      (  420` )
  1EC:  		Call  SetBattleCamOffsetZ   (  0` )
  1FC:  		Call  MoveBattleCamOver     (  30` )
  20C:  	EndIf
  214:  	ExecWait  $Script_UseStarRod1
  220:  	Return
  228:  EndIf
  230:  Call  GetActorHP    ( .Actor:Self *Var0 )
  244:  Call  GetEnemyMaxHP ( .Actor:Self *Var1 )
  258:  Mul   *Var0  00000064
  268:  Div   *Var0  *Var1
  278:  Call  $Function_80219CD4    ( *Var2 )
  288:  Sub   *Var2  *Var0
  298:  If  *Var2  >  0000001E
  2A8:  	Call  GetActorVar   ( .Actor:Self 00000007 *Var0 )
  2C0:  	If  *Var0  !=  00000000
  2D0:  		Call  RandInt   ( 00000064 *Var0 )
  2E4:  		If  *Var0  <  00000050
  2F4:  			Call  GetActorVar   ( .Actor:Self 00000006 *Var0 )
  30C:  			If  *Var0  >  00000001
  31C:  				Call  SetActorVar   ( .Actor:Self 00000006 00000000 )
  334:  				ExecWait  $Script_HealSelf1
  340:  				Return
  348:  			Else
  350:  				Call  RandInt   ( 00000064 *Var0 )
  364:  				If  *Var0  <  00000000
  374:  					Call  SetActorVar   ( .Actor:Self 00000006 00000000 )
  38C:  					ExecWait  $Script_HealSelf1
  398:  					Return
  3A0:  				EndIf
  3A8:  			EndIf
  3B0:  		EndIf
  3B8:  	EndIf
  3C0:  EndIf
  3C8:  Call  GetActorVar   ( .Actor:Self 00000000 *Var0 )
  3E0:  If  *Var0  >  00000001
  3F0:  	Call  GetPartEventFlags ( .Actor:Self 00000001 *Var0 )
  408:  	If  *Var0  !&  00040000
  418:  		Call  GetActorVar   ( .Actor:Self 00000003 *Var0 )
  430:  		Switch  *Var0
  43C:  			Case  ==  00000001
  448:  				Set   *Var0  00000000
  458:  			Case  ==  00000002
  464:  				Set   *Var0  00000014
  474:  			Case  ==  00000003
  480:  				Set   *Var0  0000001E
  490:  			Default
  498:  				Set   *Var0  00000064
  4A8:  		EndSwitch
  4B0:  		Call  RandInt   ( 00000064 *Var1 )
  4C4:  		If  *Var1  <  *Var0
  4D4:  			ExecWait  $Script_UseStarRod1
  4E0:  			Return
  4E8:  		EndIf
  4F0:  	EndIf
  4F8:  EndIf
  500:  Call  GetActorVar   ( .Actor:Self 00000002 *Var0 )
  518:  If  *Var0  <  00000003
  528:  	ExecWait  $Script_80224570
  534:  	Return
  53C:  EndIf
  544:  ExecWait  $Script_80224380
  550:  Return
  558:  End
}

#new:Script $Script_80224380
{
    0:  Call  GetActorVar   ( .Actor:Self 00000000 *Var0 )
   18:  If  *Var0  <=  00000003
   28:  	ExecWait  $Script_80224570
   34:  	Return
   3C:  EndIf
   44:  Call  GetActorVar   ( .Actor:Self 00000002 *Var0 )
   5C:  If  *Var0  >=  00000006
   6C:  	Call  RandInt   ( 00000014 *Var0 )
   80:  	If  *Var0  <  00000014
   90:  		ExecWait  $Script_Shockwave1
   9C:  	Else
   A4:  		ExecWait  $Script_Shockwave1
   B0:  	EndIf
   B8:  	Return
   C0:  EndIf
   C8:  Call  RandInt   ( 00000064 *Var0 )
   DC:  If  *Var0  <  0000004B
   EC:  	Call  $Function_80219C74    ( *Var0 *Var1 )
  100:  	If  *Var0  >  00000000
  110:  		ExecWait  $Script_Shockwave1
  11C:  		Return
  124:  	EndIf
  12C:  	If  *Var1  >  00000000
  13C:  		ExecWait  $Script_Shockwave1
  148:  		Return
  150:  	EndIf
  158:  EndIf
  160:  Call  RandInt   ( 00000064 *Var0 )
  174:  If  *Var0  <  00000014
  184:  	If  *Var0  <  00000014
  194:  		ExecWait  $Script_Shockwave1
  1A0:  	Else
  1A8:  		ExecWait  $Script_Shockwave1
  1B4:  	EndIf
  1BC:  	Return
  1C4:  EndIf
  1CC:  ExecWait  $Script_80224570
  1D8:  Return
  1E0:  Return
  1E8:  End
}

#new:Script $Script_80224570
{
    0:  Call  RandInt   ( 00000050 *Var0 )
   14:  If  *Var0  <  00000014
   24:  	Call  GetActorVar   ( .Actor:Self 00000005 *Var0 )
   3C:  	If  *Var0  >=  00000002
   4C:  		ExecWait  $Script_DisableJump1
   58:  		Return
   60:  	EndIf
   68:  EndIf
   70:  Call  RandInt   ( 0000003C *Var0 )
   84:  If  *Var0  <  00000014
   94:  	Call  GetActorVar   ( .Actor:Self 00000004 *Var0 )
   AC:  	If  *Var0  >=  00000002
   BC:  		ExecWait  $Script_ClawSwipe1
   C8:  		Return
   D0:  	EndIf
   D8:  EndIf
   E0:  ExecWait  $Script_FireBreath1
   EC:  Return
   F4:  End
}

#new:IntTable $IntTable_8022466C
{
	00000166 00000167 00000168
}

#new:IntTable $IntTable_80224678
{
	00000049 0000004A 0000004B
}

#new:IntTable $IntTable_80224684
{
	00000169 0000016A 0000016B
}

#new:IntTable $IntTable_80224690
{
	0000004C 0000004D 0000004E
}

#new:Script $Script_8022469C
{
    0:  Label  0
    C:  Call  GetActorVar   ( .Actor:Self 00000009 *VarA )
   24:  Switch  *VarA
   30:  	Case  ==  00000000
   3C:  	Case  ==  00000001
   48:  		Call  GetActorPos   ( .Actor:Player *Var1 *Var2 *Var3 )
   64:  		Set   *Var2  00000000
   74:  		Sub   *Var3  00000001
   84:  		Call  $Function_80219FFC    ( *Var4 *Var5 )
   98:  		Call  MakeItemEntity        ( *Var4 *Var1 *Var2 *Var3 .ItemSpawnMode:Decoration 00000000 )
   BC:  		Call  SetActorVar   ( .Actor:Self 0000000A *Var0 )
   D4:  		Add   *Var1  00000007
   E4:  		Call  $Function_80219D44    ( *Var0 *Var1 *Var2 *Var3 00000008 *Fixed[1.0] )
  108:  		Add   *Var1  0000000C
  118:  		Call  $Function_80219D44    ( *Var0 *Var1 *Var2 *Var3 00000008 *Fixed[1.0] )
  13C:  		Add   *Var1  00000007
  14C:  		Call  $Function_80219D44    ( *Var0 *Var1 *Var2 *Var3 00000005 *Fixed[1.0] )
  170:  		Call  SetActorVar   ( .Actor:Self 00000009 00000000 )
  188:  	Case  ==  00000002
  194:  		Call  ShowMessageBox    ( *Var5 0000003C )
  1A8:  		Call  RemoveItemEntity  ( *Var0 )
  1B8:  		Call  SetActorVar       ( .Actor:Self 00000009 00000003 )
  1D0:  		Return
  1D8:  EndSwitch
  1E0:  Wait  1`
  1EC:  Goto  0
  1F8:  Return
  200:  End
}

#new:Script $Script_DisableJump1
{
    0:  Call  SetActorVar       ( .Actor:Self 00000005 00000000 )
   18:  Call  SetTargetActor    ( .Actor:Self .Actor:Player )
   2C:  Call  GetStatusFlags    ( .Actor:Self *Var0 )
   40:  If  *Var0  !&  ~Flags:StatusFlags:Shrink % 80000
   50:  	Call  UseBattleCamPreset    ( 0000003F )
   60:  	Call  SetBattleCamZoom      (  300` )
   70:  	Call  SetBattleCamOffsetZ   (  36` )
   80:  	Call  BattleCamTargetActor  ( .Actor:Self )
   90:  	Call  MoveBattleCamOver     (  40` )
   A0:  	Call  8024ECF8  ( FFFFFFFF 00000001 00000000 )
   B8:  Else
   C0:  	Call  UseBattleCamPreset    ( 0000003F )
   D0:  	Call  SetBattleCamZoom      (  240` )
   E0:  	Call  SetBattleCamOffsetZ   (  14` )
   F0:  	Call  BattleCamTargetActor  ( .Actor:Self )
  100:  	Call  MoveBattleCamOver     (  40` )
  110:  	Call  8024ECF8  ( FFFFFFFF 00000001 00000000 )
  128:  EndIf
  130:  Call  SetAnimation  ( .Actor:Self 00000001 00810003 )
  148:  Call  SetGoalToTarget       ( .Actor:Self )
  158:  Call  AddGoalPos    ( .Actor:Self  60`  0`  0` )
  174:  Call  SetActorSpeed ( .Actor:Self *Fixed[3.0] )
  188:  Call  RunToGoal     ( .Actor:Self  0` .False )
  1A0:  Call  SetAnimation  ( .Actor:Self 00000001 00810002 )
  1B8:  Wait  15`
  1C4:  Call  SetAnimation  ( .Actor:Self 00000001 00810011 )
  1DC:  Wait  3`
  1E8:  Call  SetAnimation  ( .Actor:Self 00000001 00810012 )
  200:  Call  SetActorJumpGravity   ( .Actor:Self *Fixed[1.2] )
  214:  Call  EnemyTestTarget       ( .Actor:Self *VarA ~Flags:DamageType:0 00000000 00000001 00000010 )
  238:  Switch  *VarA
  244:  	CaseOR  ==  .HitResult:Miss % 6
  250:  	CaseOR  ==  .HitResult:Lucky % 5
  25C:  		Call  SetGoalToTarget   ( .Actor:Self )
  26C:  		Call  GetGoalPos        ( .Actor:Self *Var0 *Var1 *Var2 )
  288:  		Sub   *Var0  0000001E
  298:  		Set   *Var1  00000000
  2A8:  		Call  SetActorSounds    ( .Actor:Self .ActorSound:Jump 00000000 00000000 )
  2C4:  		Call  SetGoalPos        ( .Actor:Self *Var0 *Var1 *Var2 )
  2E0:  		Call  JumpToGoal        ( .Actor:Self  18` .False .True .False )
  300:  		Thread
  308:  			Call  $Function_80218F00    ( 00000050 0000000E )
  31C:  			Call  ShakeCam  ( .Cam:Battle 00000000  4` *Fixed[3.0] )
  338:  		EndThread
  340:  		Sub   *Var0  00000023
  350:  		Call  SetGoalPos    ( .Actor:Self *Var0 *Var1 *Var2 )
  36C:  		Call  JumpToGoal    ( .Actor:Self  14` .False .True .False )
  38C:  		Thread
  394:  			Call  $Function_80218F00    ( 00000050 0000000E )
  3A8:  			Call  ShakeCam  ( .Cam:Battle 00000000  4` *Fixed[2.0] )
  3C4:  		EndThread
  3CC:  		Call  SetAnimation  ( .Actor:Self 00000001 00810014 )
  3E4:  		Wait  3`
  3F0:  		Call  SetAnimation  ( .Actor:Self 00000001 00810002 )
  408:  		Wait  25`
  414:  		Call  UseBattleCamPreset    ( 00000002 )
  424:  		If  *VarA  ==  .HitResult:Lucky % 5
  434:  			Call  EnemyTestTarget   ( .Actor:Self *Var0 ~Flags:DamageType:TriggerLucky 00000000 00000000 00000000 )
  458:  		EndIf
  460:  		Call  SetActorSpeed ( .Actor:Self *Fixed[8.0] )
  474:  		Set   *Var1  00810003
  484:  		ExecWait  $Script_80222CD8
  490:  		Return
  498:  	EndCaseGroup
  4A0:  	Default
  4A8:  EndSwitch
  4B0:  Call  SetGoalToTarget   ( .Actor:Self )
  4C0:  Call  JumpToGoal        ( .Actor:Self  15` .False .True .False )
  4E0:  Thread
  4E8:  	Call  ShakeCam  ( .Cam:Battle 00000000  4` *Fixed[3.0] )
  504:  EndThread
  50C:  Wait  2`
  518:  Call  SetGoalToTarget   ( .Actor:Self )
  528:  Call  SetAnimation      ( .Actor:Self 00000001 00810013 )
  540:  Call  GetPartEventFlags ( .Actor:Self 00000001 *Var1 )
  558:  If  *Var1  &  00080000
  568:  	Set   *Var0  0000000C
  578:  Else
  580:  	Set   *Var0  00000006
  590:  EndIf
  598:  Call  GetStatusFlags    ( .Actor:Self *VarF )
  5AC:  If  *VarF  !&  ~Flags:StatusFlags:Shrink % 80000
  5BC:  	Call  80269EAC  ( 00000018 )
  5CC:  EndIf
  5D4:  Call  EnemyDamageTarget ( .Actor:Self *VarF ~Flags:DamageType:0 00000000 00000000 *Var0 00000020 )
  5FC:  Set   *Var0  FFFFFFFF
  60C:  Call  GetBattleFlags    ( *Var1 )
  61C:  If  *Var1  !&  80000000
  62C:  	Call  GetStatusFlags    ( .Actor:Player *Var1 )
  640:  	If  *Var1  !&  ~Flags:StatusFlags:Stone|RightOn % 40100000
  650:  		Call  GetStatusFlags    ( .Actor:Self *Var1 )
  664:  		If  *Var1  !&  ~Flags:StatusFlags:Shrink % 80000
  674:  			Call  $Function_8021A1B8    ( *Var0 )
  684:  		EndIf
  68C:  	EndIf
  694:  EndIf
  69C:  If  *Var0  !=  FFFFFFFF
  6AC:  	Call  LandJump      ( .Actor:Self )
  6BC:  	Call  $Function_80218F00    ( 00000050 0000000E )
  6D0:  	Call  PlaySoundAtActor      ( .Actor:Self 000020EA )
  6E4:  	Call  SetActorVar   ( .Actor:Self 00000009 00000001 )
  6FC:  	Exec  $Script_8022469C
  708:  	Call  GetActorPos   ( .Actor:Self *Var0 *Var1 *Var2 )
  724:  	Add   *Var0  00000034
  734:  	Set   *Var1  00000000
  744:  	Call  SetGoalPos    ( .Actor:Self *Var0 *Var1 *Var2 )
  760:  	Call  JumpToGoal    ( .Actor:Self  15` .False .True .False )
  780:  	Call  PlaySoundAtActor      ( .Actor:Self 000020EA )
  794:  	Thread
  79C:  		Call  $Function_80218F00    ( 00000050 0000000E )
  7B0:  		Call  ShakeCam  ( .Cam:Battle 00000000  4` *Fixed[3.0] )
  7CC:  	EndThread
  7D4:  	Add   *Var0  0000001E
  7E4:  	Call  SetGoalPos    ( .Actor:Self *Var0 *Var1 *Var2 )
  800:  	Call  JumpToGoal    ( .Actor:Self  10` .False .True .False )
  820:  	Thread
  828:  		Call  $Function_80218F00    ( 00000050 0000000E )
  83C:  		Call  ShakeCam  ( .Cam:Battle 00000000  3` *Fixed[2.0] )
  858:  	EndThread
  860:  	Call  SetAnimation  ( .Actor:Self 00000001 00810014 )
  878:  	Wait  3`
  884:  	Label  0
  890:  	Call  GetActorVar   ( .Actor:Self 00000009 *Var0 )
  8A8:  	If  *Var0  !=  00000000
  8B8:  		Wait  1`
  8C4:  		Goto  0
  8D0:  	EndIf
  8D8:  	Wait  8`
  8E4:  	Call  SetActorYaw   ( .Actor:Self  0` )
  8F8:  	Call  SetAnimation  ( .Actor:Self 00000001 00810003 )
  910:  	Call  GetActorVar   ( .Actor:Self 0000000A *Var0 )
  928:  	Call  $Function_80219F5C    ( *Var0 *Var1 *Var2 *Var3 )
  944:  	Add   *Var1  0000001E
  954:  	Call  SetActorSpeed ( .Actor:Self *Fixed[2.0] )
  968:  	Call  SetGoalPos    ( .Actor:Self *Var1 *Var2 *Var3 )
  984:  	Call  RunToGoal     ( .Actor:Self  0` .False )
  99C:  	Call  SetAnimation  ( .Actor:Self 00000001 00810002 )
  9B4:  	Wait  8`
  9C0:  	Call  SetAnimationRate  ( .Actor:Self 00000001 *Fixed[2.0] )
  9D8:  	Call  SetAnimation  ( .Actor:Self 00000001 0081001A )
  9F0:  	Wait  2`
  9FC:  	Call  GetActorVar   ( .Actor:Self 0000000A *Var0 )
  A14:  	Call  $Function_80219F5C    ( *Var0 *Var1 *Var2 *Var3 )
  A30:  	Call  SetActorVar   ( .Actor:Self 00000009 00000002 )
  A48:  	Call  PlayEffect    ( ~FX:Firework:White *Var1 00000000 *Var3 *Fixed[0.5] 00000000 00000000 00000000 00000000 00000000 00000000 00000000 00000000 )
  A8C:  	Call  PlayEffect    ( ~FX:Steam:SmallOutward *Var1 00000000 *Var3 *Fixed[2.0] 00000000 00000000 00000000 00000000 00000000 00000000 00000000 00000000 )
  AD0:  	Call  PlaySoundAtActor  ( .Actor:Self 000020F6 )
  AE4:  	Wait  4`
  AF0:  	Call  SetAnimation  ( .Actor:Self 00000001 00810002 )
  B08:  	Call  SetAnimation  ( .Actor:Self 00000001 0081001A )
  B20:  	Wait  2`
  B2C:  	Call  PlayEffect    ( ~FX:Firework:White *Var1 00000000 *Var3 *Fixed[0.5] 00000000 00000000 00000000 00000000 00000000 00000000 00000000 00000000 )
  B70:  	Call  PlayEffect    ( ~FX:Steam:SmallOutward *Var1 00000000 *Var3 *Fixed[2.0] 00000000 00000000 00000000 00000000 00000000 00000000 00000000 00000000 )
  BB4:  	Call  PlaySoundAtActor  ( .Actor:Self 000020F6 )
  BC8:  	Wait  4`
  BD4:  	Call  SetAnimation  ( .Actor:Self 00000001 00810002 )
  BEC:  	Call  SetAnimation  ( .Actor:Self 00000001 0081001A )
  C04:  	Wait  2`
  C10:  	Call  PlayEffect    ( ~FX:Firework:White *Var1 00000000 *Var3 *Fixed[0.5] 00000000 00000000 00000000 00000000 00000000 00000000 00000000 00000000 )
  C54:  	Call  PlayEffect    ( ~FX:Steam:SmallOutward *Var1 00000000 *Var3 *Fixed[2.0] 00000000 00000000 00000000 00000000 00000000 00000000 00000000 00000000 )
  C98:  	Call  PlaySoundAtActor  ( .Actor:Self 000020F6 )
  CAC:  	Wait  20`
  CB8:  	Call  SetAnimation  ( .Actor:Self 00000001 00810007 )
  CD0:  	Wait  20`
  CDC:  	Call  SetAnimationRate  ( .Actor:Self 00000001 *Fixed[1.0] )
  CF4:  Else
  CFC:  	Call  GetBattleFlags    ( *Var1 )
  D0C:  	If  *Var1  !&  80000000
  D1C:  		Call  GetStatusFlags    ( .Actor:Player *Var1 )
  D30:  		If  *Var1  !&  ~Flags:StatusFlags:Stone % 100000
  D40:  			Call  GetStatusFlags    ( .Actor:Self *Var1 )
  D54:  			If  *Var1  !&  ~Flags:StatusFlags:Shrink % 80000
  D64:  				Call  LandJump  ( .Actor:Self )
  D74:  			EndIf
  D7C:  		EndIf
  D84:  	EndIf
  D8C:  	Call  $Function_80218F00    ( 00000050 0000000E )
  DA0:  	Call  GetActorPos       ( .Actor:Self *Var0 *Var1 *Var2 )
  DBC:  	Add   *Var0  00000028
  DCC:  	Set   *Var1  00000000
  DDC:  	Call  SetActorSounds    ( .Actor:Self .ActorSound:Jump 00000000 00000000 )
  DF8:  	Call  SetGoalPos        ( .Actor:Self *Var0 *Var1 *Var2 )
  E14:  	Call  JumpToGoal        ( .Actor:Self  18` .False .True .False )
  E34:  	Call  PlaySoundAtActor  ( .Actor:Self 000020EA )
  E48:  	Thread
  E50:  		Call  $Function_80218F00    ( 00000050 0000000E )
  E64:  		Call  ShakeCam  ( .Cam:Battle 00000000  4` *Fixed[3.0] )
  E80:  	EndThread
  E88:  	Call  SetAnimation  ( .Actor:Self 00000001 00810014 )
  EA0:  	Wait  3`
  EAC:  	Call  SetAnimation  ( .Actor:Self 00000001 00810002 )
  EC4:  	Wait  20`
  ED0:  EndIf
  ED8:  If  *VarF  ==  0000000A
  EE8:  	Return
  EF0:  EndIf
  EF8:  Call  UseBattleCamPreset    ( 00000002 )
  F08:  Call  SetActorSpeed ( .Actor:Self *Fixed[8.0] )
  F1C:  Set   *Var1  00810003
  F2C:  ExecWait  $Script_80222CD8
  F38:  Return
  F40:  End
}

#new:Script $Script_802257EC
{
    0:  Call  SetAnimation  ( .Actor:Self 00000001 0081000C )
   18:  Thread
   20:  	Wait  5`
   2C:  	Loop  00000004
   38:  		Call  $Function_80218F00    ( 00000050 0000000E )
   4C:  		Call  ShakeCam  ( .Cam:Battle 00000000  2` *Fixed[2.0] )
   68:  		Wait  4`
   74:  	EndLoop
   7C:  	Call  SetAnimation  ( .Actor:Self 00000001 00810002 )
   94:  EndThread
   9C:  Return
   A4:  End
}

#new:Script $Script_ClawSwipe1
{
    0:  Call  SetActorVar       ( .Actor:Self 00000004 00000000 )
   18:  Call  SetTargetActor    ( .Actor:Self .Actor:Player )
   2C:  Call  GetStatusFlags    ( .Actor:Self *Var0 )
   40:  If  *Var0  !&  ~Flags:StatusFlags:Shrink % 80000
   50:  	Call  UseBattleCamPreset    ( 0000003F )
   60:  	Call  SetBattleCamZoom      (  200` )
   70:  	Call  BattleCamTargetActor  ( .Actor:Self )
   80:  	Call  MoveBattleCamOver     (  40` )
   90:  	Call  8024ECF8  ( FFFFFFFF 00000001 00000000 )
   A8:  Else
   B0:  	Call  UseBattleCamPreset    ( 0000003F )
   C0:  	Call  SetBattleCamZoom      (  160` )
   D0:  	Call  SetBattleCamOffsetZ   (  5` )
   E0:  	Call  BattleCamTargetActor  ( .Actor:Self )
   F0:  	Call  MoveBattleCamOver     (  40` )
  100:  	Call  8024ECF8  ( FFFFFFFF 00000001 00000000 )
  118:  EndIf
  120:  Call  SetAnimation      ( .Actor:Self 00000001 00810003 )
  138:  Call  SetGoalToTarget   ( .Actor:Self )
  148:  Call  GetStatusFlags    ( .Actor:Self *Var0 )
  15C:  If  *Var0  !&  ~Flags:StatusFlags:Shrink % 80000
  16C:  	Call  AddGoalPos    ( .Actor:Self  40`  0`  0` )
  188:  Else
  190:  	Call  AddGoalPos    ( .Actor:Self  16`  0`  0` )
  1AC:  EndIf
  1B4:  Call  SetActorSpeed ( .Actor:Self *Fixed[3.0] )
  1C8:  Call  RunToGoal     ( .Actor:Self  0` .False )
  1E0:  Call  SetAnimation  ( .Actor:Self 00000001 00810009 )
  1F8:  Wait  25`
  204:  Call  SetAnimation  ( .Actor:Self 00000001 00810015 )
  21C:  Call  PlaySoundAtActor  ( .Actor:Self 0000035E )
  230:  Wait  3`
  23C:  Call  EnemyTestTarget   ( .Actor:Self *VarA ~Flags:DamageType:0 00000000 00000001 00000010 )
  260:  Switch  *VarA
  26C:  	CaseOR  ==  .HitResult:Miss % 6
  278:  	CaseOR  ==  .HitResult:Lucky % 5
  284:  		Wait  20`
  290:  		Call  UseBattleCamPreset    ( 00000002 )
  2A0:  		Call  MoveBattleCamOver     (  20` )
  2B0:  		ExecWait  $Script_802257EC
  2BC:  		If  *VarA  ==  00000005
  2CC:  			Call  EnemyTestTarget   ( .Actor:Self *Var0 ~Flags:DamageType:TriggerLucky 00000000 00000000 00000000 )
  2F0:  			Wait  30`
  2FC:  		Else
  304:  			Wait  30`
  310:  		EndIf
  318:  		Call  SetActorSpeed ( .Actor:Self *Fixed[8.0] )
  32C:  		Set   *Var1  00810003
  33C:  		ExecWait  $Script_80222CD8
  348:  		Return
  350:  	EndCaseGroup
  358:  	Default
  360:  EndSwitch
  368:  Wait  2`
  374:  Call  SetGoalToTarget   ( .Actor:Self )
  384:  Call  GetPartEventFlags ( .Actor:Self 00000001 *Var0 )
  39C:  If  *Var0  &  00040000
  3AC:  	Set   *Var0  0000000C
  3BC:  	Call  80269EAC  ( 0000000C )
  3CC:  	Call  EnemyDamageTarget ( .Actor:Self *VarF ~Flags:DamageType:0 00000000 ~DebuffType:Poison:3:100` *Var0 00000020 )
  3F4:  Else
  3FC:  	Set   *Var0  00000006
  40C:  	Call  80269EAC  ( 0000000C )
  41C:  	Call  EnemyDamageTarget ( .Actor:Self *VarF ~Flags:DamageType:0 00000000 ~DebuffType:Poison:3:100` *Var0 00000020 )
  444:  EndIf
  44C:  Call  UseBattleCamPreset    ( 00000002 )
  45C:  Call  MoveBattleCamOver     (  20` )
  46C:  Switch  *VarF
  478:  	CaseOR  ==  .HitResult:Hit % 0
  484:  	CaseOR  ==  .HitResult:QuakeImmune % 2
  490:  	CaseOR  ==  0000000A % A
  49C:  		Wait  30`
  4A8:  		If  *VarF  ==  0000000A % A
  4B8:  			Return
  4C0:  		EndIf
  4C8:  		Call  UseBattleCamPreset    ( 00000002 )
  4D8:  		Call  MoveBattleCamOver     (  20` )
  4E8:  		Call  SetActorSpeed ( .Actor:Self *Fixed[8.0] )
  4FC:  		Set   *Var1  00810003
  50C:  		ExecWait  $Script_80222CD8
  518:  	EndCaseGroup
  520:  EndSwitch
  528:  Return
  530:  End
}

#new:Script $Script_Shockwave1
{
    0:  Call  SetActorVar       ( .Actor:Self 00000002 00000000 )
   18:  Call  SetTargetActor    ( .Actor:Self .Actor:Player )
   2C:  Call  SetGoalToTarget   ( .Actor:Self )
   3C:  Call  GetStatusFlags    ( .Actor:Self *Var3 )
   50:  If  *Var3  !&  ~Flags:StatusFlags:Shrink % 80000
   60:  	Call  UseBattleCamPreset    ( 00000013 )
   70:  	Call  GetActorPos   ( .Actor:Self *Var0 *Var1 *Var2 )
   8C:  	Sub   *Var0  00000018
   9C:  	Add   *Var1  00000041
   AC:  	Call  SetBattleCamTarget    ( *Var0 *Var1 *Var2 )
   C4:  	Call  SetBattleCamZoom      (  420` )
   D4:  	Call  SetBattleCamOffsetZ   (  0` )
   E4:  	Call  MoveBattleCamOver     (  40` )
   F4:  Else
   FC:  	Call  UseBattleCamPreset    ( 00000013 )
  10C:  	Call  GetActorPos   ( .Actor:Self *Var0 *Var1 *Var2 )
  128:  	Sub   *Var0  00000009
  138:  	Add   *Var1  0000001A
  148:  	Call  SetBattleCamTarget    ( *Var0 *Var1 *Var2 )
  160:  	Call  SetBattleCamZoom      (  250` )
  170:  	Call  SetBattleCamOffsetZ   (  0` )
  180:  	Call  MoveBattleCamOver     (  40` )
  190:  EndIf
  198:  Call  SetAnimation      ( .Actor:Self 00000001 0081000F )
  1B0:  Wait  10`
  1BC:  Call  $Function_802192FC ( )
  1C8:  Call  PlaySoundAtActor  ( .Actor:Self 00002121 )
  1DC:  Call  GetStatusFlags    ( .Actor:Self *Var0 )
  1F0:  If  *Var0  !&  ~Flags:StatusFlags:Shrink % 80000
  200:  	Call  GetActorPos   ( .Actor:Self *Var0 *Var1 *Var2 )
  21C:  	Add   *Var0  0000000F
  22C:  	Sub   *Var2  00000003
  23C:  	Call  PlayEffect    ( ~FX:LightRays:SharpA *Var0 0000005A *Var2 *Fixed[1.0] *VarF 00000000 00000000 00000000 00000000 00000000 00000000 00000000 )
  280:  	Sub   *Var2  00000003
  290:  	Call  PlayEffect    ( 0000003C 00000002 *Var0 0000005A *Var2 *Fixed[1.0] *VarE 00000000 00000000 00000000 00000000 00000000 00000000 00000000 )
  2D4:  Else
  2DC:  	Call  GetActorPos   ( .Actor:Self *Var0 *Var1 *Var2 )
  2F8:  	Add   *Var0  00000006
  308:  	Sub   *Var2  00000003
  318:  	Call  PlayEffect    ( ~FX:LightRays:SharpA *Var0 00000024 *Var2 *Fixed[0.4] *VarF 00000000 00000000 00000000 00000000 00000000 00000000 00000000 )
  35C:  	Sub   *Var2  00000003
  36C:  	Call  PlayEffect    ( 0000003C 00000002 *Var0 00000024 *Var2 *Fixed[0.4] *VarE 00000000 00000000 00000000 00000000 00000000 00000000 00000000 )
  3B0:  EndIf
  3B8:  Wait  25`
  3C4:  Call  UseBattleCamPreset    ( 00000013 )
  3D4:  Call  SetBattleCamTarget    (  -45`  60`  0` )
  3EC:  Call  SetBattleCamZoom  (  530` )
  3FC:  Call  SetBattleCamOffsetZ   (  0` )
  40C:  Call  MoveBattleCamOver (  80` )
  41C:  Wait  10`
  428:  Call  RemoveEffect      ( *VarF )
  438:  Call  RemoveEffect      ( *VarE )
  448:  Call  PlaySoundAtActor  ( .Actor:Self 00002122 )
  45C:  Call  GetStatusFlags    ( .Actor:Self *Var0 )
  470:  If  *Var0  !&  ~Flags:StatusFlags:Shrink % 80000
  480:  	Call  GetActorPos   ( .Actor:Self *Var0 *Var1 *Var2 )
  49C:  	Add   *Var0  0000000D
  4AC:  	Set   *Var1  00000037
  4BC:  	Call  PlayEffect    ( ~FX:EnergyShockwave *Var0 *Var1 *Var2 *Fixed[1.0] 0000003C 00000000 00000000 00000000 00000000 00000000 00000000 00000000 )
  500:  Else
  508:  	Call  GetActorPos   ( .Actor:Self *Var0 *Var1 *Var2 )
  524:  	Add   *Var0  00000005
  534:  	Set   *Var1  00000016
  544:  	Call  PlayEffect    ( ~FX:EnergyShockwave *Var0 *Var1 *Var2 *Fixed[1.0] 0000003C 00000000 00000000 00000000 00000000 00000000 00000000 00000000 )
  588:  EndIf
  590:  Thread
  598:  	Call  $Function_80219394 ( )
  5A4:  EndThread
  5AC:  Wait  8`
  5B8:  Call  SetGoalToTarget   ( .Actor:Self )
  5C8:  Call  EnemyTestTarget   ( .Actor:Self *VarA ~Flags:DamageType:0 00000000 00000001 00000010 )
  5EC:  Switch  *VarA
  5F8:  	CaseOR  ==  .HitResult:Miss % 6
  604:  	CaseOR  ==  .HitResult:Lucky % 5
  610:  		Call  SetTargetActor    ( .Actor:Self .Actor:Partner )
  624:  		Call  EnemyTestTarget   ( .Actor:Self *VarB ~Flags:DamageType:0 00000000 00000001 00000010 )
  648:  		Switch  *VarB
  654:  			Case  ==  .HitResult:Miss % 6
  660:  				Call  SetAnimation  ( .Actor:Self 00000001 00810002 )
  678:  				Wait  30`
  684:  				Return
  68C:  			Default
  694:  				Wait  2`
  6A0:  				If  *VarA  ==  .HitResult:Lucky % 5
  6B0:  					ExecWait  $Script_802257EC
  6BC:  					Call  SetTargetActor    ( .Actor:Self .Actor:Player )
  6D0:  					Call  EnemyTestTarget   ( .Actor:Self *Var0 ~Flags:DamageType:TriggerLucky 00000000 00000000 00000000 )
  6F4:  				EndIf
  6FC:  				Wait  2`
  708:  				Call  SetTargetActor    ( .Actor:Self .Actor:Partner )
  71C:  				Call  SetGoalToTarget   ( .Actor:Self )
  72C:  				If  *Var0  &  00040000 % 40000
  73C:  					Set   *Var1  00000003
  74C:  				Else
  754:  					Set   *Var1  00000003
  764:  				EndIf
  76C:  				Call  EnemyDamageTarget ( .Actor:Self *Var0 ~Flags:DamageType:NoOtherDamagePopups|Magic|Cosmic 0000FFFF 00000000 *Var1 00000020 )
  794:  				Call  RemovePlayerBuffs ( ~Flags:PlayerBuff:PartnerGlowing )
  7A4:  				If  *VarA  !=  00000005
  7B4:  					Call  SetAnimation  ( .Actor:Self 00000001 00810002 )
  7CC:  				EndIf
  7D4:  				Wait  30`
  7E0:  				Return
  7E8:  		EndSwitch
  7F0:  	EndCaseGroup
  7F8:  	Default
  800:  EndSwitch
  808:  Call  8026BF48  ( 00000001 )
  818:  Thread
  820:  	Wait  4`
  82C:  	Call  SetTargetActor    ( .Actor:Self .Actor:Partner )
  840:  	Call  SetGoalToTarget   ( .Actor:Self )
  850:  	If  *Var0  &  00040000 % 40000
  860:  		Set   *Var1  00000003
  870:  	Else
  878:  		Set   *Var1  00000003
  888:  	EndIf
  890:  	Call  EnemyDamageTarget ( .Actor:Self *Var0 ~Flags:DamageType:NoOtherDamagePopups|Magic|Cosmic 0000FFFF 00000000 *Var1 00000020 )
  8B8:  	Call  8026BF48  ( 00000000 )
  8C8:  EndThread
  8D0:  Wait  2`
  8DC:  Call  SetGoalToTarget   ( .Actor:Self )
  8EC:  If  *Var0  &  00040000 % 40000
  8FC:  	Set   *Var1  00000004
  90C:  Else
  914:  	Set   *Var1  00000004
  924:  EndIf
  92C:  Call  EnemyDamageTarget ( .Actor:Self *VarF ~Flags:DamageType:NoOtherDamagePopups|Magic|Cosmic 0000FFFF 00000000 *Var1 00000020 )
  954:  Call  RemovePlayerBuffs ( ~Flags:PlayerBuff:All )
  964:  Switch  *VarF
  970:  	CaseOR  ==  .HitResult:Hit % 0
  97C:  	CaseOR  ==  .HitResult:QuakeImmune % 2
  988:  	CaseOR  ==  0000000A % A
  994:  		Call  SetAnimation  ( .Actor:Self 00000001 00810002 )
  9AC:  		Wait  15`
  9B8:  		If  *VarF  ==  0000000A % A
  9C8:  			Return
  9D0:  		EndIf
  9D8:  	EndCaseGroup
  9E0:  EndSwitch
  9E8:  Return
  9F0:  End
}

#new:Script $Script_FireBreath1
{
    0:  Call  SetTargetActor    ( .Actor:Self .Actor:Player )
   14:  Call  SetGoalToTarget   ( .Actor:Self )
   24:  Call  GetStatusFlags    ( .Actor:Self *Var0 )
   38:  If  *Var0  !&  ~Flags:StatusFlags:Shrink % 80000
   48:  	Call  UseBattleCamPreset    ( 00000013 )
   58:  	Call  GetActorPos   ( .Actor:Self *Var0 *Var1 *Var2 )
   74:  	Sub   *Var0  0000001E
   84:  	Add   *Var1  00000041
   94:  	Call  SetBattleCamTarget    ( *Var0 *Var1 *Var2 )
   AC:  	Call  SetBattleCamZoom      (  400` )
   BC:  	Call  MoveBattleCamOver     (  40` )
   CC:  Else
   D4:  	Call  UseBattleCamPreset    ( 00000013 )
   E4:  	Call  GetActorPos   ( .Actor:Self *Var0 *Var1 *Var2 )
  100:  	Sub   *Var0  0000001E
  110:  	Add   *Var1  0000002D
  120:  	Call  SetBattleCamTarget    ( *Var0 *Var1 *Var2 )
  138:  	Call  SetBattleCamZoom      (  350` )
  148:  	Call  MoveBattleCamOver     (  40` )
  158:  EndIf
  160:  Call  SetAnimation      ( .Actor:Self 00000001 00810016 )
  178:  Wait  35`
  184:  Call  SetAnimation      ( .Actor:Self 00000001 00810017 )
  19C:  Call  UseBattleCamPreset    ( 00000002 )
  1AC:  Call  MoveBattleCamOver (  55` )
  1BC:  Wait  10`
  1C8:  Call  GetPartEventFlags ( .Actor:Self 00000001 *Var3 )
  1E0:  Call  GetStatusFlags    ( .Actor:Self *Var4 )
  1F4:  Call  GetActorPos       ( .Actor:Self *Var0 *Var1 *Var2 )
  210:  If  *Var3  &  00040000
  220:  	If  *Var4  !&  ~Flags:StatusFlags:Shrink % 80000
  230:  		Sub   *Var0  00000046
  240:  		Add   *Var1  00000023
  250:  	Else
  258:  		Sub   *Var0  0000001C
  268:  		Add   *Var1  0000000E
  278:  	EndIf
  280:  Else
  288:  	If  *Var4  !&  ~Flags:StatusFlags:Shrink % 80000
  298:  		Sub   *Var0  00000032
  2A8:  		Add   *Var1  00000021
  2B8:  	Else
  2C0:  		Sub   *Var0  00000014
  2D0:  		Add   *Var1  0000000D
  2E0:  	EndIf
  2E8:  EndIf
  2F0:  Add   *Var2  0000000A
  300:  Call  SetGoalToTarget   ( .Actor:Self )
  310:  Call  GetGoalPos        ( .Actor:Self *Var3 *Var4 *Var5 )
  32C:  Sub   *Var3  00000028
  33C:  Set   *Var4  00000014
  34C:  Call  GetPartEventFlags ( .Actor:Self 00000001 *Var6 )
  364:  If  *Var6  &  00040000
  374:  	Call  PlayEffect    ( ~FX:FireBreath:Large *Var0 *Var1 *Var2 *Var3 *Var4 *Var5 00000032 00000001 00000018 00000000 00000000 00000000 )
  3B8:  Else
  3C0:  	Call  PlayEffect    ( ~FX:FireBreath:Tiny *Var0 *Var1 *Var2 *Var3 *Var4 *Var5 00000032 00000001 00000018 00000000 00000000 00000000 )
  404:  	Call  $Function_8021A254    ( *VarF )
  414:  EndIf
  41C:  Thread
  424:  	Call  $Function_80218F00    ( 00000032 00000094 )
  438:  	Call  PlaySound ( 000003BD )
  448:  	Wait  70`
  454:  	Call  PlaySound ( 000007BD )
  464:  EndThread
  46C:  Wait  10`
  478:  Call  SetGoalToTarget   ( .Actor:Self )
  488:  Call  EnemyTestTarget   ( .Actor:Self *VarA ~Flags:DamageType:0 00000000 00000001 00000010 )
  4AC:  Switch  *VarA
  4B8:  	CaseOR  ==  .HitResult:Miss % 6
  4C4:  	CaseOR  ==  .HitResult:Lucky % 5
  4D0:  		Wait  10`
  4DC:  		Call  SetAnimation  ( .Actor:Self 00000001 00810018 )
  4F4:  		Wait  30`
  500:  		Call  SetAnimation  ( .Actor:Self 00000001 00810019 )
  518:  		Wait  15`
  524:  		Call  SetAnimation  ( .Actor:Self 00000001 00810002 )
  53C:  		Wait  30`
  548:  		ExecWait  $Script_802257EC
  554:  		If  *VarA  ==  00000005
  564:  			Call  EnemyTestTarget   ( .Actor:Self *Var0 ~Flags:DamageType:TriggerLucky 00000000 00000000 00000000 )
  588:  		EndIf
  590:  		Wait  30`
  59C:  		Return
  5A4:  	EndCaseGroup
  5AC:  	Default
  5B4:  EndSwitch
  5BC:  Wait  2`
  5C8:  Call  SetGoalToTarget   ( .Actor:Self )
  5D8:  Call  GetPartEventFlags ( .Actor:Self 00000001 *Var0 )
  5F0:  If  *Var0  &  00040000
  600:  	Set   *Var0  00000010
  610:  Else
  618:  	Set   *Var0  00000008
  628:  EndIf
  630:  Call  EnemyDamageTarget ( .Actor:Self *VarF ~Flags:DamageType:Fire 0000FFFF 00000000 *Var0 00000020 )
  658:  Switch  *VarF
  664:  	CaseOR  ==  .HitResult:Hit % 0
  670:  	CaseOR  ==  .HitResult:QuakeImmune % 2
  67C:  	CaseOR  ==  0000000A % A
  688:  		Wait  10`
  694:  		Call  SetAnimation  ( .Actor:Self 00000001 00810018 )
  6AC:  		Wait  30`
  6B8:  		Call  SetAnimation  ( .Actor:Self 00000001 00810019 )
  6D0:  		Wait  15`
  6DC:  		Call  SetAnimation  ( .Actor:Self 00000001 00810002 )
  6F4:  		Wait  30`
  700:  		If  *VarF  ==  0000000A % A
  710:  			Return
  718:  		EndIf
  720:  	EndCaseGroup
  728:  EndSwitch
  730:  Return
  738:  End
}

#new:Script $Script_80226F08
{
    0:  Call  GetLastEvent  ( .Actor:Self *Var3 )
   14:  If  *Var3  ==  .Event:BurnDeath % 24
   24:  	Call  RemoveActorDecoration ( .Actor:Self 00000001 00000001 )
   3C:  	Call  SetPartEventBits      ( .Actor:Self 00000001 00040000 .False )
   58:  EndIf
   60:  Call  SetAnimation  ( .Actor:Self *Var0 *Var1 )
   78:  Call  80269E80      ( *Var3 )
   88:  Switch  *Var3
   94:  	Case  ==  00000009
   A0:  		Call  GetOriginalActorType  ( .Actor:Self *Var7 )
   B4:  		Switch  *Var7
   C0:  			CaseOR  ==  00000012
   CC:  			CaseOR  ==  00000030
   D8:  			EndCaseGroup
   E0:  			Default
   E8:  				Call  GetActorPos   ( .Actor:Self *Var4 *Var5 *Var6 )
  104:  				Call  SetActorJumpGravity   ( .Actor:Self *Fixed[0.01] )
  118:  				Add   *Var5  00000037
  128:  				Call  SetGoalPos    ( .Actor:Self *Var4 *Var5 *Var6 )
  144:  				Call  JumpToGoal    ( .Actor:Self  8` .False .False .False )
  164:  		EndSwitch
  16C:  		Set   *Var7  00000000
  17C:  		Loop  0000001E
  188:  			Add   *Var7  00000030
  198:  			Call  SetActorYaw   ( .Actor:Self *Var7 )
  1AC:  			Wait  1`
  1B8:  		EndLoop
  1C0:  		Call  GetOriginalActorType  ( .Actor:Self *Var7 )
  1D4:  		Switch  *Var7
  1E0:  			CaseOR  ==  00000012
  1EC:  			CaseOR  ==  00000030
  1F8:  				Wait  30`
  204:  			EndCaseGroup
  20C:  			Default
  214:  				Sub   *Var5  00000037
  224:  				Call  SetActorJumpGravity   ( .Actor:Self *Fixed[0.8] )
  238:  				If  *Var5  ==  00000000
  248:  					Call  SetGoalPos    ( .Actor:Self *Var4 *Var5 *Var6 )
  264:  					Call  JumpToGoal    ( .Actor:Self  15` .False .True .False )
  284:  					Call  SetGoalPos    ( .Actor:Self *Var4 *Var5 *Var6 )
  2A0:  					Call  JumpToGoal    ( .Actor:Self  10` .False .True .False )
  2C0:  					Call  SetGoalPos    ( .Actor:Self *Var4 *Var5 *Var6 )
  2DC:  					Call  JumpToGoal    ( .Actor:Self  5` .False .True .False )
  2FC:  				Else
  304:  					Call  SetGoalPos    ( .Actor:Self *Var4 *Var5 *Var6 )
  320:  					Call  JumpToGoal    ( .Actor:Self  15` .False .False .False )
  340:  					Call  SetGoalPos    ( .Actor:Self *Var4 *Var5 *Var6 )
  35C:  					Call  JumpToGoal    ( .Actor:Self  10` .False .False .False )
  37C:  					Call  SetGoalPos    ( .Actor:Self *Var4 *Var5 *Var6 )
  398:  					Call  JumpToGoal    ( .Actor:Self  5` .False .False .False )
  3B8:  				EndIf
  3C0:  		EndSwitch
  3C8:  	Default
  3D0:  		Wait  20`
  3DC:  EndSwitch
  3E4:  If  *Var2  !=  FFFFFFFF
  3F4:  	Call  SetAnimation  ( .Actor:Self *Var0 *Var2 )
  40C:  EndIf
  414:  Wait  10`
  420:  Call  GetLastEvent  ( .Actor:Self *Var1 )
  434:  Switch  *Var1
  440:  	Case  ==  .Event:BurnHit % E
  44C:  		Call  GetPartEventFlags ( .Actor:Self *Var0 *Var1 )
  464:  		If  *Var1  !&  00000202
  474:  			Call  GetActorPos       ( .Actor:Self *Var0 *Var1 *Var2 )
  490:  			Call  GetActorSize      ( .Actor:Self *Var3 *Var4 )
  4A8:  			Call  GetStatusFlags    ( .Actor:Self *Var5 )
  4BC:  			If  *Var5  &  ~Flags:StatusFlags:Shrink % 80000
  4CC:  				MulF  *Var3  *Fixed[0.4]
  4DC:  				MulF  *Var4  *Fixed[0.4]
  4EC:  			EndIf
  4F4:  			DivF  *Var3  *Fixed[2.0]
  504:  			Call  GetActorFlags ( .Actor:Self *Var5 )
  518:  			If  *Var5  &  00000800
  528:  				SubF  *Var1  *Var3
  538:  			Else
  540:  				AddF  *Var1  *Var3
  550:  			EndIf
  558:  			AddF  *Var2  *Fixed[5.0]
  568:  			DivF  *Var3  *Fixed[10.0]
  578:  			Call  GetStatusFlags    ( .Actor:Self *Var5 )
  58C:  			If  *Var5  &  ~Flags:StatusFlags:Shrink % 80000
  59C:  				MulF  *Var3  *Fixed[0.4]
  5AC:  				If  *Var3  <  00000001
  5BC:  					SetF  *Var3  *Fixed[1.0]
  5CC:  				EndIf
  5D4:  			EndIf
  5DC:  			Call  PlayEffect    ( ~FX:SmokeBurst:Black *Var0 *Var1 *Var2 *Var3 0000000A 00000000 00000000 00000000 00000000 00000000 00000000 00000000 )
  620:  		EndIf
  628:  	Case  ==  .Event:BurnDeath % 24
  634:  EndSwitch
  63C:  Return
  644:  End
}

PADDING: 80227554 to 80227560 (006AE754 to 006AE760)
00000000 00000000 00000000

#new:IdleAnimations $IdleAnimations_80227560
{
	.Status:Normal    00810002
	.Status:Stone     00810000
	.Status:Sleep     00810002
	.Status:Poison    00810002
	.Status:Stop      00810000
	.Status:Static    00810000
	.Status:Paralyze  00810000
	.Status:Paralyze  00810000
	.Status:Dizzy     00810002
	.Status:Dizzy     00810002
	.Status:End
}

#new:DefenseTable $DefenseTable_802275B4
{
	.Element:Normal 00000002
	.Element:End
}

#new:DefenseTable $DefenseTable_802275C0
{
	.Element:Normal 00000063
	.Element:End
}

#new:StatusTable $StatusTable_802275CC
{
	.Status:Normal      0`
	.Status:Default     0`
	.Status:Sleep       0`
	.Status:Poison      0`
	.Status:Frozen      0`
	.Status:Dizzy       0`
	.Status:Fear        0`
	.Status:Static      0`
	.Status:Paralyze    0`
	.Status:Shrink      0`
	.Status:Stop        0`
	.Status:DefaultTurnMod    0`
	.Status:SleepTurnMod     -1`
	.Status:PoisonTurnMod     0`
	.Status:FrozenTurnMod     0`
	.Status:DizzyTurnMod     -1`
	.Status:FearTurnMod       0`
	.Status:StaticTurnMod     0`
	.Status:ParalyzeTurnMod  -1`
	.Status:ShrinkTurnMod    -1`
	.Status:StopTurnMod      -2`
	.Status:End
}

#new:StatusTable $StatusTable_80227678
{
	.Status:Normal      0`
	.Status:Default     0`
	.Status:Sleep       0`
	.Status:Poison      0`
	.Status:Frozen      0`
	.Status:Dizzy       0`
	.Status:Fear        0`
	.Status:Static      0`
	.Status:Paralyze    0`
	.Status:Shrink      0`
	.Status:Stop        0`
	.Status:DefaultTurnMod    0`
	.Status:SleepTurnMod     -1`
	.Status:PoisonTurnMod     0`
	.Status:FrozenTurnMod     0`
	.Status:DizzyTurnMod     -1`
	.Status:FearTurnMod       0`
	.Status:StaticTurnMod     0`
	.Status:ParalyzeTurnMod  -1`
	.Status:ShrinkTurnMod    -1`
	.Status:StopTurnMod      -2`
	.Status:End
}

#new:PartsTable $PartsTable_80227724
{
	00800000 01000000 E56C00FF $IdleAnimations_80227560 $DefenseTable_802275B4 00000000 00000000 00F80000 00000000
}

#new:Actor $Bowser2
{
	% stats
	[Index]        C3b
	[Level]         0`b
	[MaxHP]        99`b
	[Coins]         0`b
	[Flags]       00000000
	[StatusTable] $StatusTable_802275CC
	% ai
	[PartsCount]    1`s
	[PartsTable]  $PartsTable_80227724
	[Script]      $Script_Init_80227770
	% move effectiveness
	[Escape]        0`b
	[Item]          0`b
	[AirLift]       0`b
	[Hurricane]     0`b % Bow's "Spook" as well
	[UpAndAway]     0`b
	[PowerBounce]  50`b
	[SpinSmash]     4`b % weight (0-4)
	% ui positions
	[Size]        123`b 119`b % width height
	[HealthBar]     0`b   0`b % dx dy
	[StatusTurn]  -53`b 103`b % dx dy
	[StatusIcon]   33`b  92`b % dx dy
}

#new:Script $Script_Init_80227770
{
    0:  Call  SetActorVar   ( .Actor:Self 00000000 00000000 )
   18:  Call  SetActorVar   ( .Actor:Self 00000002 00000000 )
   30:  Call  SetActorVar   ( .Actor:Self 00000004 00000003 )
   48:  Call  SetActorVar   ( .Actor:Self 00000005 00000003 )
   60:  Call  SetActorVar   ( .Actor:Self 00000003 00000000 )
   78:  Call  SetActorVar   ( .Actor:Self 00000006 00000000 )
   90:  Call  SetActorVar   ( .Actor:Self 00000007 00000003 )
   A8:  Call  SetActorVar   ( .Actor:Self 0000000E 00000000 )
   C0:  Call  SetActorVar   ( .Actor:Self 00000009 00000000 )
   D8:  Call  SetActorVar   ( .Actor:Self 0000000A 00000000 )
   F0:  Call  SetActorScale ( .Actor:Self *Fixed[1.5] *Fixed[1.5] *Fixed[1.0] )
  10C:  Call  ModifyActorDecoration ( .Actor:Self 00000001 00000001 00000096 00000000 00000000 00000000 )
  134:  Exec  $Script_8022865C
  140:  Call  ModifyActorDecoration ( .Actor:Self 00000001 00000000 00000096 00000096 00000000 00000000 )
  168:  Call  AddActorDecoration    ( .Actor:Self 00000001 00000000 0000000A )
  184:  Call  BindTakeTurn  ( .Actor:Self $Script_TakeTurn_80228490 )
  198:  Call  BindIdle      ( .Actor:Self $Script_Idle_80227954 )
  1AC:  Call  BindHandleEvent       ( .Actor:Self $Script_HandleEvent_80227AD0 )
  1C0:  Call  SetBattleFlagBits2    ( 02000400 .True )
  1D4:  Return
  1DC:  End
}

#new:Script $Script_Idle_80227954
{
    0:  Call  GetActorPos   ( .Actor:Self *Var0 *Var1 *Var2 )
   1C:  Call  GetAnimation  ( .Actor:Self 00000001 *Var3 )
   34:  Label  0
   40:  Call  ActorExists   ( .Actor:Self *VarB )
   54:  If  *VarB  ==  .False
   64:  	Return
   6C:  EndIf
   74:  Call  GetStatusFlags    ( .Actor:Self *VarB )
   88:  If  *VarB  !&  ~Flags:StatusFlags:Shrink % 80000
   98:  	Call  ModifyActorDecoration ( .Actor:Self 00000001 00000000 00000096 00000096 000000FF 00000000 )
   C0:  	Call  ModifyActorDecoration ( .Actor:Self 00000001 00000001 00000096 00000000 00000000 00000000 )
   E8:  Else
   F0:  	Call  ModifyActorDecoration ( .Actor:Self 00000001 00000000 0000003C 0000003C 000000FF 00000000 )
  118:  	Call  ModifyActorDecoration ( .Actor:Self 00000001 00000001 0000003C 00000000 00000000 00000000 )
  140:  EndIf
  148:  ExecWait  $Script_80228F9C
  154:  Wait  1`
  160:  Goto  0
  16C:  Return
  174:  End
}

#new:Script $Script_HandleEvent_80227AD0
{
    0:  Call  UseIdleAnimation  ( .Actor:Self .False )
   14:  Call  GetLastElement    ( *VarE )
   24:  Call  GetLastEvent      ( .Actor:Self *Var0 )
   38:  Switch  *Var0
   44:  	Case  ==  .Event:BeginFirstStrike % 38
   50:  	CaseOR  ==  .Event:HitCombo % 9
   5C:  	CaseOR  ==  .Event:Hit % A
   68:  		Set   *Var1  0081000D
   78:  		ExecWait  $Script_802283C0
   84:  		Return
   8C:  	EndCaseGroup
   94:  	Case  ==  .Event:BurnHit % E
   A0:  		Set   *Var0  00000001
   B0:  		Set   *Var1  00810020
   C0:  		Set   *Var2  00810021
   D0:  		ExecWait  $Script_8022C79C
   DC:  	Case  ==  .Event:BurnDeath % 24
   E8:  		Set   *Var0  00000001
   F8:  		Set   *Var1  00810020
  108:  		Set   *Var2  00810021
  118:  		ExecWait  $Script_8022C79C
  124:  		Return
  12C:  	Case  ==  .Event:SpinSmashHit % B
  138:  		Set   *Var1  0081000D
  148:  		ExecWait  $Script_802283C0
  154:  		Return
  15C:  	Case  ==  .Event:SpinSmashDeath % 21
  168:  		SetConst  *Var1  0081000D
  178:  		ExecWait  $Script_802283C0
  184:  		Return
  18C:  	Case  ==  .Event:ShockHit % 2F
  198:  		SetConst  *Var0  00000001
  1A8:  		SetConst  *Var1  0081000D
  1B8:  		ExecWait  DoShockHit
  1C4:  		SetConst  *Var0  00000001
  1D4:  		SetConst  *Var1  0081000D
  1E4:  		ExecWait  $Script_80228D9C
  1F0:  		Call  SetActorSpeed ( .Actor:Self *Fixed[8.0] )
  204:  		Set   *Var1  00810003
  214:  		ExecWait  $Script_80228508
  220:  	Case  ==  .Event:ShockDeath % 26
  22C:  		SetConst  *Var0  00000001
  23C:  		SetConst  *Var1  0081000D
  24C:  		ExecWait  DoShockHit
  258:  		SetConst  *Var0  00000001
  268:  		SetConst  *Var1  0081000D
  278:  		ExecWait  $Script_80228D9C
  284:  		Call  SetActorSpeed ( .Actor:Self *Fixed[8.0] )
  298:  		Set   *Var1  00810003
  2A8:  		ExecWait  $Script_80228508
  2B4:  	CaseOR  ==  00000017 % 17
  2C0:  	CaseOR  ==  .Event:Immune % 19
  2CC:  		Call  80269E80  ( *Var2 )
  2DC:  		Switch  *Var2
  2E8:  			CaseOR  ==  00000012
  2F4:  			CaseOR  ==  00000015
  300:  				Call  SetAnimation  ( .Actor:Self 00000001 00810007 )
  318:  				Wait  30`
  324:  			EndCaseGroup
  32C:  			Default
  334:  				Set   *Var1  00810007
  344:  				ExecWait  $Script_80228464
  350:  		EndSwitch
  358:  	EndCaseGroup
  360:  	Case  ==  .Event:AirLiftFailed % 1F
  36C:  		SetConst  *Var0  00000001
  37C:  		Set   *Var1  00810002
  38C:  		ExecWait  DoImmune
  398:  	Case  ==  .Event:SpikeTaunt % 1B
  3A4:  	Case  ==  .Event:Death % 20
  3B0:  		SetConst  *Var1  0081000D
  3C0:  		ExecWait  $Script_802283C0
  3CC:  		Return
  3D4:  	Case  ==  .Event:EndFirstStrike % 35
  3E0:  	Case  ==  .Event:RecoverStatus % 31
  3EC:  		SetConst  *Var0  00000001
  3FC:  		SetConst  *Var1  00810012
  40C:  		ExecWait  DoRecover
  418:  		Call  SetAnimation  ( .Actor:Self 00000001 00810014 )
  430:  		Call  ShakeCam      ( .Cam:Battle 00000000  4` *Fixed[3.0] )
  44C:  	Case  ==  .Event:SwapPartner % 3F
  458:  		Call  $Function_8021A754 ( )
  464:  	Case  ==  00000030 % 30
  470:  		SetConst  *Var0  00000001
  480:  		SetConst  *Var1  0081000D
  490:  		ExecWait  DoNormalHit
  49C:  		Wait  1000`
  4A8:  	Case  ==  0000001D % 1D
  4B4:  		Call  GetStatusFlags    ( .Actor:Self *Var3 )
  4C8:  		If  *Var3  !&  ~Flags:StatusFlags:Shrink % 80000
  4D8:  			Set   *Var3  0000003C
  4E8:  			Set   *Var4  00000061
  4F8:  		Else
  500:  			Set   *Var3  00000018
  510:  			Set   *Var4  00000027
  520:  		EndIf
  528:  		Call  GetActorPos       ( .Actor:Self *Var0 *Var1 *Var2 )
  544:  		Add   *Var1  *Var3
  554:  		Call  PlayEffect        ( ~FX:EnergyWaveOut:Grey *Var0 *Var1 *Var2 *Fixed[1.5] 00000014 00000000 00000000 00000000 00000000 00000000 00000000 00000000 )
  598:  		Call  SetAnimation      ( .Actor:Self 00000001 00810008 )
  5B0:  		Wait  30`
  5BC:  		Call  UseBattleCamPreset    ( 00000013 )
  5CC:  		Call  GetActorPos       ( .Actor:Self *Var0 *Var1 *Var2 )
  5E8:  		Sub   *Var0  0000000F
  5F8:  		Add   *Var1  *Var4
  608:  		Call  SetBattleCamTarget    ( *Var0 *Var1 *Var2 )
  620:  		Call  SetBattleCamZoom  (  420` )
  630:  		Call  SetBattleCamOffsetZ   (  0` )
  640:  		Call  MoveBattleCamOver (  30` )
  650:  		Wait  30`
  65C:  		Call  ActorSpeak        ( 00130085 .Actor:Self 00000001 00810007 00810007 ) % Gwaaah ha ha ha!! You idiot!! That weak attack doe ...
  67C:  		Call  UseBattleCamPreset    ( 0000000E )
  68C:  		Call  BattleCamTargetActor  ( .Actor:Player )
  69C:  		Call  MoveBattleCamOver (  20` )
  6AC:  		Wait  20`
  6B8:  		Call  GetCurrentPartnerID   ( *Var0 )
  6C8:  		Switch  *Var0
  6D4:  			Case  ==  .Partner:Kooper % 2
  6E0:  				Call  ActorSpeak    ( 00130087 .Actor:Partner 00000000 FFFFFFFF FFFFFFFF ) % Oh no, Mario! The Star Beam isn't working!
  700:  			Case  ==  .Partner:Bombette % 3
  70C:  				Call  ActorSpeak    ( 00130088 .Actor:Partner 00000000 FFFFFFFF FFFFFFFF ) % What's the matter? Why won't the Star Beam work?
  72C:  			Case  ==  .Partner:Parakarry % 4
  738:  				Call  ActorSpeak    ( 00130089 .Actor:Partner 00000000 FFFFFFFF FFFFFFFF ) % Uh-oh, this is a problem! The Star Beam's ineffect ...
  758:  			Case  ==  .Partner:Bow % 9
  764:  				Call  ActorSpeak    ( 0013008A .Actor:Partner 00000000 FFFFFFFF FFFFFFFF ) % Well, don't just stand there staring at the sky, M ...
  784:  			Case  ==  .Partner:Watt % 6
  790:  				Call  ActorSpeak    ( 0013008B .Actor:Partner 00000000 FFFFFFFF FFFFFFFF ) % Oh no!! We're in trouble! The Star Beam doesn't wo ...
  7B0:  			Case  ==  .Partner:Sushie % 7
  7BC:  				Call  ActorSpeak    ( 0013008C .Actor:Partner 00000000 FFFFFFFF FFFFFFFF ) % Oh, this is no good! The Star Beam doesn't work! W ...
  7DC:  			Case  ==  .Partner:Lakilester % 8
  7E8:  				Call  ActorSpeak    ( 0013008D .Actor:Partner 00000000 FFFFFFFF FFFFFFFF ) % Oh man, just what we need!! The Star Beam's broken ...
  808:  			Default
  810:  				Call  ActorSpeak    ( 00130086 .Actor:Partner 00000000 FFFFFFFF FFFFFFFF ) % Oh, we're hurting, Mario! The Star Beam doesn't wo ...
  830:  		EndSwitch
  838:  		Call  UseBattleCamPreset    ( 00000002 )
  848:  		Call  MoveBattleCamOver (  30` )
  858:  		Call  GetActorHP        ( .Actor:Self *GB_FinalBowserHP )
  86C:  		Call  SetActorFlagBits  ( .Actor:Self 00400000 .True )
  884:  		Call  SetBattleFlagBits ( 00060000 .True )
  898:  		Call  8026F60C  ( 00000014 )
  8A8:  		Return
  8B0:  	Case  ==  00000014 % 14
  8BC:  	Default
  8C4:  EndSwitch
  8CC:  Call  UseIdleAnimation  ( .Actor:Self .True )
  8E0:  Return
  8E8:  End
}

#new:Script $Script_802283C0
{
    0:  ExecWait  $Script_802283F0
    C:  Call  UseIdleAnimation  ( .Actor:Self .True )
   20:  Return
   28:  End
}

#new:Script $Script_802283F0
{
    0:  SetConst  *Var0  00000001
   10:  ExecWait  DoNormalHit
   1C:  Return
   24:  End
}

% Origin: HEURISTIC
#new:Script $Script_8022841C
{
    0:  SetConst  *Var0  00000001
   10:  ExecWait  DoNormalHit
   1C:  SetConst  *Var0  00000001
   2C:  ExecWait  DoDeath
   38:  Return
   40:  End
}

#new:Script $Script_80228464
{
    0:  SetConst  *Var0  00000001
   10:  ExecWait  DoImmune
   1C:  Return
   24:  End
}

#new:Script $Script_TakeTurn_80228490
{
    0:  Call  UseIdleAnimation  ( .Actor:Self .False )
   14:  ExecWait  $Script_80229650
   20:  Call  UseIdleAnimation  ( .Actor:Self .True )
   34:  Return
   3C:  End
}

#new:Script $Script_802284D4
{
    0:  Call  SetAnimation  ( .Actor:Self 00000001 0081000F )
   18:  ExecWait  $Script_80228678
   24:  Return
   2C:  End
}

#new:Script $Script_80228508
{
    0:  Set   *Var0  00000001
   10:  Call  GetActorPos   ( .Actor:Self *VarA *VarB *VarC )
   2C:  Call  SetGoalToHome ( .Actor:Self )
   3C:  Call  GetGoalPos    ( .Actor:Self *VarD *VarE *VarF )
   58:  Call  SetActorYaw   ( .Actor:Self  0` )
   6C:  Call  GetDist2D     ( *Var9 *VarA *VarC *VarD *VarF )
   8C:  If  *Var9  >=  *Fixed[5.0]
   9C:  	Call  SetAnimation  ( .Actor:Self *Var0 *Var1 )
   B4:  	Call  RunToGoal     ( .Actor:Self  0` .False )
   CC:  EndIf
   D4:  If  *VarB  ==  000000B4
   E4:  	Loop  0000000F
   F0:  		Sub   *VarB  0000000C
  100:  		Call  SetActorYaw   ( .Actor:Self *VarB )
  114:  		Wait  1`
  120:  	EndLoop
  128:  EndIf
  130:  Call  SetActorYaw   ( .Actor:Self  0` )
  144:  Return
  14C:  End
}

#new:Script $Script_8022865C
{
    0:  Call  $Function_8021A318 ( )
    C:  Return
   14:  End
}

#new:Script $Script_80228678
{
    0:  Call  $Function_8021A6BC ( )
    C:  Call  GetStatusFlags    ( .Actor:Self *Var3 )
   20:  Call  GetActorPos       ( .Actor:Self *Var0 *Var1 *Var2 )
   3C:  If  *Var3  !&  ~Flags:StatusFlags:Shrink % 80000
   4C:  	Add   *Var0  00000016
   5C:  	Add   *Var1  00000087
   6C:  	Thread
   74:  		Call  PlaySoundAtActor      ( .Actor:Self 00002123 )
   88:  		Add   *Var2  0000000A
   98:  		Call  $Function_8021A804    ( *Var0 *Var1 *Var2 *Fixed[2.5] *Fixed[0.07519531] )
   B8:  	EndThread
   C0:  Else
   C8:  	Add   *Var0  00000009
   D8:  	Add   *Var1  00000036
   E8:  	Thread
   F0:  		Call  PlaySoundAtActor      ( .Actor:Self 00002123 )
  104:  		Add   *Var2  0000000A
  114:  		Call  $Function_8021A804    ( *Var0 *Var1 *Var2 *Fixed[2.5] *Fixed[0.03] )
  134:  	EndThread
  13C:  EndIf
  144:  Wait  65`
  150:  Call  GetActorPos   ( .Actor:Self *Var0 *Var1 *Var2 )
  16C:  If  *Var3  !&  ~Flags:StatusFlags:Shrink % 80000
  17C:  	Add   *Var0  00000016
  18C:  	Sub   *Var2  00000003
  19C:  	Call  PlayEffect    ( ~FX:LightRays:SharpA *Var0 00000087 *Var2 *Fixed[1.5] *VarF 00000000 00000000 00000000 00000000 00000000 00000000 00000000 )
  1E0:  	Call  PlayEffect    ( 0000003C 00000002 *Var0 00000087 *Var2 *Fixed[1.0] *VarE 00000000 00000000 00000000 00000000 00000000 00000000 00000000 )
  224:  	Sub   *Var2  00000003
  234:  	Call  PlayEffect    ( 0000003C 00000002 *Var0 00000087 *Var2 *Fixed[1.5] *VarD 00000000 00000000 00000000 00000000 00000000 00000000 00000000 )
  278:  Else
  280:  	Add   *Var0  00000009
  290:  	Sub   *Var2  00000003
  2A0:  	Call  PlayEffect    ( ~FX:LightRays:SharpA *Var0 00000036 *Var2 *Fixed[0.6] *VarF 00000000 00000000 00000000 00000000 00000000 00000000 00000000 )
  2E4:  	Call  PlayEffect    ( 0000003C 00000002 *Var0 00000036 *Var2 *Fixed[0.4] *VarE 00000000 00000000 00000000 00000000 00000000 00000000 00000000 )
  328:  	Sub   *Var2  00000003
  338:  	Call  PlayEffect    ( 0000003C 00000002 *Var0 00000036 *Var2 *Fixed[0.6] *VarD 00000000 00000000 00000000 00000000 00000000 00000000 00000000 )
  37C:  EndIf
  384:  Call  PlaySoundAtActor  ( .Actor:Self 00002121 )
  398:  Wait  30`
  3A4:  Call  RemoveEffect      ( *VarF )
  3B4:  Call  RemoveEffect      ( *VarE )
  3C4:  Call  RemoveEffect      ( *VarD )
  3D4:  Call  SetPartEventBits  ( .Actor:Self 00000001 00080000 .True )
  3F0:  Call  AddActorDecoration    ( .Actor:Self 00000001 00000001 .Decoration:RadialStarEmitter )
  40C:  Call  SetDefenseTable   ( .Actor:Self 00000001 $DefenseTable_802275C0 )
  424:  Call  SetStatusTable    ( .Actor:Self $StatusTable_80227678 )
  438:  Call  $Function_8021A7D4 ( )
  444:  Wait  3`
  450:  Call  GetStatusFlags    ( .Actor:Self *Var3 )
  464:  If  *Var3  !&  ~Flags:StatusFlags:Shrink % 80000
  474:  	Call  GetActorPos   ( .Actor:Self *Var0 *Var1 *Var2 )
  490:  	Add   *Var1  0000003C
  4A0:  	Add   *Var2  0000000C
  4B0:  	Call  PlayEffect    ( ~FX:RainbowShimmer *Var0 *Var1 *Var2 00000069 00000078 00000025 0000003C 00000000 00000000 00000000 00000000 00000000 )
  4F4:  Else
  4FC:  	Call  GetActorPos   ( .Actor:Self *Var0 *Var1 *Var2 )
  518:  	Add   *Var1  00000018
  528:  	Add   *Var2  0000000C
  538:  	Call  PlayEffect    ( ~FX:RainbowShimmer *Var0 *Var1 *Var2 0000002A 00000030 0000000F 0000003C 00000000 00000000 00000000 00000000 00000000 )
  57C:  EndIf
  584:  Call  PlaySoundAtActor  ( .Actor:Self 00002125 )
  598:  Thread
  5A0:  	Call  GetActorPos   ( .Actor:Self *Var0 *Var1 *Var2 )
  5BC:  	Call  $Function_8021ABD8    ( *Var0 *Var1 *Var2 *Fixed[1.2] )
  5D8:  EndThread
  5E0:  Wait  75`
  5EC:  Thread
  5F4:  	Call  $Function_8021A754 ( )
  600:  EndThread
  608:  Call  SetAnimation      ( .Actor:Self 00000001 00810008 )
  620:  Call  GetStatusFlags    ( .Actor:Self *Var3 )
  634:  Call  GetActorPos       ( .Actor:Self *Var0 *Var1 *Var2 )
  650:  If  *Var3  !&  ~Flags:StatusFlags:Shrink % 80000
  660:  	Add   *Var1  0000003C
  670:  Else
  678:  	Add   *Var1  00000018
  688:  EndIf
  690:  Call  PlayEffect        ( ~FX:EnergyWaveOut:Grey *Var0 *Var1 *Var2 *Fixed[1.5] 0000000F 00000000 00000000 00000000 00000000 00000000 00000000 00000000 )
  6D4:  Call  PlaySoundAtActor  ( .Actor:Self 00002124 )
  6E8:  Call  UseBattleCamPreset    ( 00000002 )
  6F8:  Call  MoveBattleCamOver (  39` )
  708:  Wait  30`
  714:  Return
  71C:  End
}

#new:Script $Script_80228D9C
{
    0:  If  *Var1  !=  FFFFFFFF
   10:  	Call  SetAnimation  ( .Actor:Self *Var0 *Var1 )
   28:  EndIf
   30:  Call  UseBattleCamPreset    ( 00000002 )
   40:  Call  SetActorJumpGravity   ( .Actor:Self *Fixed[1.4] )
   54:  Call  SetGoalToHome ( .Actor:Self )
   64:  Call  GetGoalPos    ( .Actor:Self *Var2 *Var3 *Var4 )
   80:  Call  GetActorPos   ( .Actor:Self *Var5 *Var6 *Var7 )
   9C:  Set   *Var8  *Var2
   AC:  Add   *Var8  *Var5
   BC:  Div   *Var8  00000002
   CC:  Set   *Var9  *Var4
   DC:  Add   *Var9  *Var7
   EC:  Div   *Var9  00000002
   FC:  Call  SetGoalPos    ( .Actor:Self *Var8  0` *Var9 )
  118:  Call  JumpToGoal    ( .Actor:Self  15` .False .True .False )
  138:  Add   *Var8  *Var2
  148:  Div   *Var8  00000002
  158:  Add   *Var9  *Var4
  168:  Div   *Var9  00000002
  178:  Call  SetGoalPos    ( .Actor:Self *Var8  0` *Var9 )
  194:  Call  JumpToGoal    ( .Actor:Self  8` .False .True .False )
  1B4:  Call  SetGoalPos    ( .Actor:Self *Var2 *Var3 *Var4 )
  1D0:  Call  JumpToGoal    ( .Actor:Self  5` .False .True .False )
  1F0:  Return
  1F8:  End
}

#new:Script $Script_80228F9C
{
    0:  Call  GetAnimation  ( .Actor:Self 00000001 *Var7 )
   18:  If  *Var7  !=  00810003
   28:  	If  *Var3  ==  00810003
   38:  		Call  PlaySoundAtActor  ( .Actor:Self 000020B4 )
   4C:  		Call  PlaySoundAtActor  ( .Actor:Self 000020F6 )
   60:  	EndIf
   68:  	Set   *Var3  *Var7
   78:  	Call  GetActorPos   ( .Actor:Self *Var0 *Var1 *Var2 )
   94:  	Return
   9C:  EndIf
   A4:  Call  GetActorPos   ( .Actor:Self *Var5 *Var6 *Var7 )
   C0:  Sub   *Var5  *Var0
   D0:  If  *Var5  >  FFFFFFE2
   E0:  	If  *Var5  <  0000001E
   F0:  		Set   *Var3  *Var7
  100:  		Return
  108:  	EndIf
  110:  EndIf
  118:  Call  GetActorPos       ( .Actor:Self *Var0 *Var1 *Var2 )
  134:  Call  PlaySoundAtActor  ( .Actor:Self 000020B4 )
  148:  Call  PlaySoundAtActor  ( .Actor:Self 000020F6 )
  15C:  Set   *Var3  *Var7
  16C:  Return
  174:  End
}

#new:Script $Script_HealSelf2
{
    0:  Call  GetActorVar       ( .Actor:Self 00000007 *Var0 )
   18:  Sub   *Var0  00000001
   28:  Call  SetActorVar       ( .Actor:Self 00000007 *Var0 )
   40:  Call  GetStatusFlags    ( .Actor:Self *Var3 )
   54:  If  *Var3  !&  ~Flags:StatusFlags:Shrink % 80000
   64:  	Call  UseBattleCamPreset    ( 00000013 )
   74:  	Call  GetActorPos   ( .Actor:Self *Var0 *Var1 *Var2 )
   90:  	Sub   *Var0  0000000F
   A0:  	Add   *Var1  00000061
   B0:  	Call  SetBattleCamTarget    ( *Var0 *Var1 *Var2 )
   C8:  	Call  SetBattleCamZoom      (  420` )
   D8:  	Call  SetBattleCamOffsetZ   (  0` )
   E8:  	Call  MoveBattleCamOver     (  40` )
   F8:  Else
  100:  	Call  UseBattleCamPreset    ( 00000013 )
  110:  	Call  GetActorPos   ( .Actor:Self *Var0 *Var1 *Var2 )
  12C:  	Sub   *Var0  00000006
  13C:  	Add   *Var1  00000027
  14C:  	Call  SetBattleCamTarget    ( *Var0 *Var1 *Var2 )
  164:  	Call  SetBattleCamZoom      (  294` )
  174:  	Call  SetBattleCamOffsetZ   (  0` )
  184:  	Call  MoveBattleCamOver     (  40` )
  194:  EndIf
  19C:  Call  SetAnimation      ( .Actor:Self 00000001 0081000F )
  1B4:  Call  $Function_8021A6BC ( )
  1C0:  Call  PlaySoundAtActor  ( .Actor:Self 00002126 )
  1D4:  Call  GetStatusFlags    ( .Actor:Self *Var3 )
  1E8:  If  *Var3  !&  ~Flags:StatusFlags:Shrink % 80000
  1F8:  	Call  GetActorPos   ( .Actor:Self *Var0 *Var1 *Var2 )
  214:  	Add   *Var0  00000016
  224:  	Add   *Var1  00000087
  234:  	Sub   *Var2  00000003
  244:  	Call  PlayEffect    ( ~FX:EnergyIn:YellowPoints *Var0 *Var1 *Var2 *Fixed[1.5] 00000032 00000000 00000000 00000000 00000000 00000000 00000000 00000000 )
  288:  	Call  GetActorPos   ( .Actor:Self *Var0 *Var1 *Var2 )
  2A4:  	Add   *Var0  00000016
  2B4:  	Sub   *Var2  00000003
  2C4:  	Call  PlayEffect    ( ~FX:RadialFlowOut:YellowEnergy *Var0 00000087 *Var2 *Fixed[0.45] 0000001E 00000000 00000000 00000000 00000000 00000000 00000000 00000000 )
  308:  Else
  310:  	Call  GetActorPos   ( .Actor:Self *Var0 *Var1 *Var2 )
  32C:  	Add   *Var0  00000009
  33C:  	Add   *Var1  00000036
  34C:  	Sub   *Var2  00000003
  35C:  	Call  PlayEffect    ( ~FX:EnergyIn:YellowPoints *Var0 *Var1 *Var2 *Fixed[0.6] 00000032 00000000 00000000 00000000 00000000 00000000 00000000 00000000 )
  3A0:  	Call  GetActorPos   ( .Actor:Self *Var0 *Var1 *Var2 )
  3BC:  	Add   *Var0  00000009
  3CC:  	Sub   *Var2  00000003
  3DC:  	Call  PlayEffect    ( ~FX:RadialFlowOut:YellowEnergy *Var0 00000036 *Var2 *Fixed[0.18] 0000001E 00000000 00000000 00000000 00000000 00000000 00000000 00000000 )
  420:  EndIf
  428:  Wait  30`
  434:  Call  GetEnemyMaxHP ( .Actor:Self *Var0 )
  448:  Mul   *Var0  0000001F
  458:  Div   *Var0  00000064
  468:  Thread
  470:  	Wait  5`
  47C:  	Call  PlaySoundAtActor  ( .Actor:Self 0000206D )
  490:  	Call  PlaySoundAtActor  ( .Actor:Self 00000214 )
  4A4:  	Wait  30`
  4B0:  	Call  PlaySoundAtActor  ( .Actor:Self 0000025C )
  4C4:  EndThread
  4CC:  Thread
  4D4:  	Call  8026BF48  ( 00000001 )
  4E4:  	Call  HealActor ( .Actor:Self *Var0 .False )
  4FC:  	Call  8026BF48  ( 00000000 )
  50C:  EndThread
  514:  Call  UseIdleAnimation  ( .Actor:Self .True )
  528:  Return
  530:  End
}

#new:Script $Script_80229650
{
    0:  Call  AddActorVar   ( .Actor:Self 00000000 00000001 )
   18:  Call  AddActorVar   ( .Actor:Self 00000004 00000001 )
   30:  Call  AddActorVar   ( .Actor:Self 00000005 00000001 )
   48:  Call  AddActorVar   ( .Actor:Self 00000002 00000001 )
   60:  Call  AddActorVar   ( .Actor:Self 00000003 00000001 )
   78:  Call  AddActorVar   ( .Actor:Self 00000006 00000001 )
   90:  Call  GetActorVar   ( .Actor:Self 00000000 *Var0 )
   A8:  If  *Var0  ==  00000002
   B8:  	Call  GetStatusFlags    ( .Actor:Self *Var0 )
   CC:  	If  *Var0  !&  ~Flags:StatusFlags:Shrink % 80000
   DC:  		Call  UseBattleCamPreset    ( 00000013 )
   EC:  		Call  GetActorPos   ( .Actor:Self *Var0 *Var1 *Var2 )
  108:  		Sub   *Var0  0000000F
  118:  		Add   *Var1  0000005A
  128:  		Call  SetBattleCamTarget    ( *Var0 *Var1 *Var2 )
  140:  		Call  SetBattleCamZoom      (  420` )
  150:  		Call  SetBattleCamOffsetZ   (  0` )
  160:  		Call  MoveBattleCamOver     (  30` )
  170:  	Else
  178:  		Call  UseBattleCamPreset    ( 00000013 )
  188:  		Call  GetActorPos   ( .Actor:Self *Var0 *Var1 *Var2 )
  1A4:  		Sub   *Var0  00000006
  1B4:  		Add   *Var1  00000024
  1C4:  		Call  SetBattleCamTarget    ( *Var0 *Var1 *Var2 )
  1DC:  		Call  SetBattleCamZoom      (  420` )
  1EC:  		Call  SetBattleCamOffsetZ   (  0` )
  1FC:  		Call  MoveBattleCamOver     (  30` )
  20C:  	EndIf
  214:  	Call  ActorSpeak    ( 00130084 .Actor:Self 00000001 00810007 00810007 ) % Gwuuh huh huh huh! Time to increase my power with  ...
  234:  	ExecWait  $Script_802284D4
  240:  	Return
  248:  EndIf
  250:  Call  GetActorHP    ( .Actor:Self *Var0 )
  264:  Call  GetEnemyMaxHP ( .Actor:Self *Var1 )
  278:  Mul   *Var0  00000064
  288:  Div   *Var0  *Var1
  298:  Call  $Function_8021B08C    ( *Var2 )
  2A8:  Sub   *Var2  *Var0
  2B8:  If  *Var2  >  00000019
  2C8:  	Call  GetActorVar   ( .Actor:Self 00000007 *Var0 )
  2E0:  	If  *Var0  !=  00000000
  2F0:  		Call  RandInt   ( 00000064 *Var0 )
  304:  		If  *Var0  <  0000004B
  314:  			Call  GetActorVar   ( .Actor:Self 00000006 *Var0 )
  32C:  			If  *Var0  >  00000001
  33C:  				Call  SetActorVar   ( .Actor:Self 00000006 00000000 )
  354:  				ExecWait  $Script_HealSelf2
  360:  				Return
  368:  			Else
  370:  				Call  RandInt   ( 00000064 *Var0 )
  384:  				If  *Var0  <  00000000
  394:  					Call  SetActorVar   ( .Actor:Self 00000006 00000000 )
  3AC:  					ExecWait  $Script_HealSelf2
  3B8:  					Return
  3C0:  				EndIf
  3C8:  			EndIf
  3D0:  		EndIf
  3D8:  	EndIf
  3E0:  EndIf
  3E8:  Call  GetActorVar   ( .Actor:Self 00000000 *Var0 )
  400:  If  *Var0  >  00000001
  410:  	Call  GetPartEventFlags ( .Actor:Self 00000001 *Var0 )
  428:  	If  *Var0  !&  00080000
  438:  		Call  GetActorVar   ( .Actor:Self 00000003 *Var0 )
  450:  		Switch  *Var0
  45C:  			Case  ==  00000001
  468:  				Set   *Var0  00000000
  478:  			Case  ==  00000002
  484:  				Set   *Var0  00000000
  494:  			Case  ==  00000003
  4A0:  				Set   *Var0  0000000F
  4B0:  			Default
  4B8:  				Set   *Var0  0000004B
  4C8:  		EndSwitch
  4D0:  		Call  RandInt   ( 00000064 *Var1 )
  4E4:  		If  *Var1  <  *Var0
  4F4:  			ExecWait  $Script_802284D4
  500:  			Return
  508:  		EndIf
  510:  	EndIf
  518:  EndIf
  520:  Call  GetActorVar   ( .Actor:Self 00000002 *Var0 )
  538:  If  *Var0  <  00000003
  548:  	ExecWait  $Script_80229DC0
  554:  	Return
  55C:  EndIf
  564:  ExecWait  $Script_80229BD0
  570:  Return
  578:  End
}

#new:Script $Script_80229BD0
{
    0:  Call  GetActorVar   ( .Actor:Self 00000000 *Var0 )
   18:  If  *Var0  <=  00000003
   28:  	ExecWait  $Script_80229DC0
   34:  	Return
   3C:  EndIf
   44:  Call  GetActorVar   ( .Actor:Self 00000002 *Var0 )
   5C:  If  *Var0  >=  00000006
   6C:  	Call  RandInt   ( 0000001E *Var0 )
   80:  	If  *Var0  <  00000014
   90:  		ExecWait  $Script_Shockwave2
   9C:  	Else
   A4:  		ExecWait  $Script_Thunderbolt2
   B0:  	EndIf
   B8:  	Return
   C0:  EndIf
   C8:  Call  RandInt   ( 00000064 *Var0 )
   DC:  If  *Var0  <  0000004B
   EC:  	Call  $Function_8021B02C    ( *Var0 *Var1 )
  100:  	If  *Var0  >  00000000
  110:  		ExecWait  $Script_Shockwave2
  11C:  		Return
  124:  	EndIf
  12C:  	If  *Var1  >  00000000
  13C:  		ExecWait  $Script_Shockwave2
  148:  		Return
  150:  	EndIf
  158:  EndIf
  160:  Call  RandInt   ( 0000006E *Var0 )
  174:  If  *Var0  <  0000001E
  184:  	If  *Var0  <  00000014
  194:  		ExecWait  $Script_Shockwave2
  1A0:  	Else
  1A8:  		ExecWait  $Script_Thunderbolt2
  1B4:  	EndIf
  1BC:  	Return
  1C4:  EndIf
  1CC:  ExecWait  $Script_80229DC0
  1D8:  Return
  1E0:  Return
  1E8:  End
}

#new:Script $Script_80229DC0
{
    0:  Call  RandInt   ( 00000050 *Var0 )
   14:  If  *Var0  <  00000014
   24:  	Call  GetActorVar   ( .Actor:Self 00000005 *Var0 )
   3C:  	If  *Var0  >=  00000002
   4C:  		ExecWait  $Script_DisableJump2
   58:  		Return
   60:  	EndIf
   68:  EndIf
   70:  Call  RandInt   ( 0000003C *Var0 )
   84:  If  *Var0  <  00000014
   94:  	Call  GetActorVar   ( .Actor:Self 00000004 *Var0 )
   AC:  	If  *Var0  >=  00000002
   BC:  		ExecWait  $Script_ClawSwipe2
   C8:  		Return
   D0:  	EndIf
   D8:  EndIf
   E0:  ExecWait  $Script_FireBreath2
   EC:  Return
   F4:  End
}

#new:IntTable $IntTable_80229EBC
{
	00000166 00000167 00000168
}

#new:IntTable $IntTable_80229EC8
{
	00000049 0000004A 0000004B
}

#new:IntTable $IntTable_80229ED4
{
	00000169 0000016A 0000016B
}

#new:IntTable $IntTable_80229EE0
{
	0000004C 0000004D 0000004E
}

#new:Script $Script_80229EEC
{
    0:  Label  0
    C:  Call  GetActorVar   ( .Actor:Self 00000009 *VarA )
   24:  Switch  *VarA
   30:  	Case  ==  00000000
   3C:  	Case  ==  00000001
   48:  		Call  GetActorPos   ( .Actor:Player *Var1 *Var2 *Var3 )
   64:  		Set   *Var2  00000000
   74:  		Sub   *Var3  00000001
   84:  		Call  $Function_8021B3B4    ( *Var4 *Var5 )
   98:  		Call  MakeItemEntity        ( *Var4 *Var1 *Var2 *Var3 .ItemSpawnMode:Decoration 00000000 )
   BC:  		Call  SetActorVar   ( .Actor:Self 0000000A *Var0 )
   D4:  		Add   *Var1  00000007
   E4:  		Call  $Function_8021B0FC    ( *Var0 *Var1 *Var2 *Var3 00000008 *Fixed[1.0] )
  108:  		Add   *Var1  0000000C
  118:  		Call  $Function_8021B0FC    ( *Var0 *Var1 *Var2 *Var3 00000008 *Fixed[1.0] )
  13C:  		Add   *Var1  00000007
  14C:  		Call  $Function_8021B0FC    ( *Var0 *Var1 *Var2 *Var3 00000005 *Fixed[1.0] )
  170:  		Call  SetActorVar   ( .Actor:Self 00000009 00000000 )
  188:  	Case  ==  00000002
  194:  		Call  ShowMessageBox    ( *Var5 0000003C )
  1A8:  		Call  RemoveItemEntity  ( *Var0 )
  1B8:  		Call  SetActorVar       ( .Actor:Self 00000009 00000003 )
  1D0:  		Return
  1D8:  EndSwitch
  1E0:  Wait  1`
  1EC:  Goto  0
  1F8:  Return
  200:  End
}

#new:Script $Script_DisableJump2
{
    0:  Call  SetActorVar       ( .Actor:Self 00000005 00000000 )
   18:  Call  SetTargetActor    ( .Actor:Self .Actor:Player )
   2C:  Call  GetStatusFlags    ( .Actor:Self *Var0 )
   40:  If  *Var0  !&  ~Flags:StatusFlags:Shrink % 80000
   50:  	Call  UseBattleCamPreset    ( 0000003F )
   60:  	Call  SetBattleCamZoom      (  300` )
   70:  	Call  SetBattleCamOffsetZ   (  54` )
   80:  	Call  BattleCamTargetActor  ( .Actor:Self )
   90:  	Call  MoveBattleCamOver     (  40` )
   A0:  	Call  8024ECF8  ( FFFFFFFF 00000001 00000000 )
   B8:  Else
   C0:  	Call  UseBattleCamPreset    ( 0000003F )
   D0:  	Call  SetBattleCamZoom      (  240` )
   E0:  	Call  SetBattleCamOffsetZ   (  21` )
   F0:  	Call  BattleCamTargetActor  ( .Actor:Self )
  100:  	Call  MoveBattleCamOver     (  40` )
  110:  	Call  8024ECF8  ( FFFFFFFF 00000001 00000000 )
  128:  EndIf
  130:  Call  SetAnimation  ( .Actor:Self 00000001 00810003 )
  148:  Call  SetGoalToTarget       ( .Actor:Self )
  158:  Call  AddGoalPos    ( .Actor:Self  60`  0`  0` )
  174:  Call  SetActorSpeed ( .Actor:Self *Fixed[3.0] )
  188:  Call  RunToGoal     ( .Actor:Self  0` .False )
  1A0:  Call  SetAnimation  ( .Actor:Self 00000001 00810002 )
  1B8:  Wait  15`
  1C4:  Call  SetAnimation  ( .Actor:Self 00000001 00810011 )
  1DC:  Wait  3`
  1E8:  Call  SetAnimation  ( .Actor:Self 00000001 00810012 )
  200:  Call  SetActorJumpGravity   ( .Actor:Self *Fixed[1.2] )
  214:  Call  EnemyTestTarget       ( .Actor:Self *VarA ~Flags:DamageType:0 00000000 00000001 00000010 )
  238:  Switch  *VarA
  244:  	CaseOR  ==  .HitResult:Miss % 6
  250:  	CaseOR  ==  .HitResult:Lucky % 5
  25C:  		Call  SetGoalToTarget   ( .Actor:Self )
  26C:  		Call  GetGoalPos        ( .Actor:Self *Var0 *Var1 *Var2 )
  288:  		Sub   *Var0  0000001E
  298:  		Set   *Var1  00000000
  2A8:  		Call  SetActorSounds    ( .Actor:Self .ActorSound:Jump 00000000 00000000 )
  2C4:  		Call  SetGoalPos        ( .Actor:Self *Var0 *Var1 *Var2 )
  2E0:  		Call  JumpToGoal        ( .Actor:Self  18` .False .True .False )
  300:  		Thread
  308:  			Call  $Function_8021A2C0    ( 00000050 0000000E )
  31C:  			Call  ShakeCam  ( .Cam:Battle 00000000  4` *Fixed[3.0] )
  338:  		EndThread
  340:  		Sub   *Var0  00000023
  350:  		Call  SetGoalPos    ( .Actor:Self *Var0 *Var1 *Var2 )
  36C:  		Call  JumpToGoal    ( .Actor:Self  14` .False .True .False )
  38C:  		Thread
  394:  			Call  $Function_8021A2C0    ( 00000050 0000000E )
  3A8:  			Call  ShakeCam  ( .Cam:Battle 00000000  4` *Fixed[2.0] )
  3C4:  		EndThread
  3CC:  		Call  SetAnimation  ( .Actor:Self 00000001 00810014 )
  3E4:  		Wait  3`
  3F0:  		Call  SetAnimation  ( .Actor:Self 00000001 00810002 )
  408:  		Wait  25`
  414:  		Call  UseBattleCamPreset    ( 00000002 )
  424:  		If  *VarA  ==  .HitResult:Lucky % 5
  434:  			Call  EnemyTestTarget   ( .Actor:Self *Var0 ~Flags:DamageType:TriggerLucky 00000000 00000000 00000000 )
  458:  		EndIf
  460:  		Call  SetActorSpeed ( .Actor:Self *Fixed[8.0] )
  474:  		Set   *Var1  00810003
  484:  		ExecWait  $Script_80228508
  490:  		Return
  498:  	EndCaseGroup
  4A0:  	Default
  4A8:  EndSwitch
  4B0:  Call  SetGoalToTarget   ( .Actor:Self )
  4C0:  Call  JumpToGoal        ( .Actor:Self  15` .False .True .False )
  4E0:  Thread
  4E8:  	Call  ShakeCam  ( .Cam:Battle 00000000  4` *Fixed[3.0] )
  504:  EndThread
  50C:  Wait  2`
  518:  Call  SetGoalToTarget   ( .Actor:Self )
  528:  Call  SetAnimation      ( .Actor:Self 00000001 00810013 )
  540:  Call  GetPartEventFlags ( .Actor:Self 00000001 *Var1 )
  558:  If  *Var1  &  00080000
  568:  	Set   *Var0  00000010
  578:  Else
  580:  	Set   *Var0  00000008
  590:  EndIf
  598:  Call  GetStatusFlags    ( .Actor:Self *VarF )
  5AC:  If  *VarF  !&  ~Flags:StatusFlags:Shrink % 80000
  5BC:  	Call  80269EAC  ( 00000018 )
  5CC:  EndIf
  5D4:  Call  EnemyDamageTarget ( .Actor:Self *VarF ~Flags:DamageType:0 00000000 00000000 *Var0 00000020 )
  5FC:  Set   *Var0  FFFFFFFF
  60C:  Call  GetBattleFlags    ( *Var1 )
  61C:  If  *Var1  !&  80000000
  62C:  	Call  GetStatusFlags    ( .Actor:Player *Var1 )
  640:  	If  *Var1  !&  ~Flags:StatusFlags:Stone|RightOn % 40100000
  650:  		Call  GetStatusFlags    ( .Actor:Self *Var1 )
  664:  		If  *Var1  !&  ~Flags:StatusFlags:Shrink % 80000
  674:  			Call  $Function_8021B570    ( *Var0 )
  684:  		EndIf
  68C:  	EndIf
  694:  EndIf
  69C:  If  *Var0  !=  FFFFFFFF
  6AC:  	Call  LandJump      ( .Actor:Self )
  6BC:  	Call  $Function_8021A2C0    ( 00000050 0000000E )
  6D0:  	Call  PlaySoundAtActor      ( .Actor:Self 000020EA )
  6E4:  	Call  SetActorVar   ( .Actor:Self 00000009 00000001 )
  6FC:  	Exec  $Script_80229EEC
  708:  	Call  GetActorPos   ( .Actor:Self *Var0 *Var1 *Var2 )
  724:  	Add   *Var0  00000034
  734:  	Set   *Var1  00000000
  744:  	Call  SetGoalPos    ( .Actor:Self *Var0 *Var1 *Var2 )
  760:  	Call  JumpToGoal    ( .Actor:Self  15` .False .True .False )
  780:  	Call  PlaySoundAtActor      ( .Actor:Self 000020EA )
  794:  	Thread
  79C:  		Call  $Function_8021A2C0    ( 00000050 0000000E )
  7B0:  		Call  ShakeCam  ( .Cam:Battle 00000000  4` *Fixed[3.0] )
  7CC:  	EndThread
  7D4:  	Add   *Var0  0000001E
  7E4:  	Call  SetGoalPos    ( .Actor:Self *Var0 *Var1 *Var2 )
  800:  	Call  JumpToGoal    ( .Actor:Self  10` .False .True .False )
  820:  	Thread
  828:  		Call  $Function_8021A2C0    ( 00000050 0000000E )
  83C:  		Call  ShakeCam  ( .Cam:Battle 00000000  3` *Fixed[2.0] )
  858:  	EndThread
  860:  	Call  SetAnimation  ( .Actor:Self 00000001 00810014 )
  878:  	Wait  3`
  884:  	Label  0
  890:  	Call  GetActorVar   ( .Actor:Self 00000009 *Var0 )
  8A8:  	If  *Var0  !=  00000000
  8B8:  		Wait  1`
  8C4:  		Goto  0
  8D0:  	EndIf
  8D8:  	Wait  8`
  8E4:  	Call  SetActorYaw   ( .Actor:Self  0` )
  8F8:  	Call  SetAnimation  ( .Actor:Self 00000001 00810003 )
  910:  	Call  GetActorVar   ( .Actor:Self 0000000A *Var0 )
  928:  	Call  $Function_8021B314    ( *Var0 *Var1 *Var2 *Var3 )
  944:  	Add   *Var1  00000026
  954:  	Call  SetActorSpeed ( .Actor:Self *Fixed[2.0] )
  968:  	Call  SetGoalPos    ( .Actor:Self *Var1 *Var2 *Var3 )
  984:  	Call  RunToGoal     ( .Actor:Self  0` .False )
  99C:  	Call  SetAnimation  ( .Actor:Self 00000001 00810002 )
  9B4:  	Wait  8`
  9C0:  	Call  SetAnimationRate  ( .Actor:Self 00000001 *Fixed[2.0] )
  9D8:  	Call  SetAnimation  ( .Actor:Self 00000001 0081001A )
  9F0:  	Wait  2`
  9FC:  	Call  GetActorVar   ( .Actor:Self 0000000A *Var0 )
  A14:  	Call  $Function_8021B314    ( *Var0 *Var1 *Var2 *Var3 )
  A30:  	Call  SetActorVar   ( .Actor:Self 00000009 00000002 )
  A48:  	Call  PlayEffect    ( ~FX:Firework:White *Var1 00000000 *Var3 *Fixed[0.75] 00000000 00000000 00000000 00000000 00000000 00000000 00000000 00000000 )
  A8C:  	Call  PlayEffect    ( ~FX:Steam:SmallOutward *Var1 00000000 *Var3 *Fixed[3.0] 00000000 00000000 00000000 00000000 00000000 00000000 00000000 00000000 )
  AD0:  	Call  PlaySoundAtActor  ( .Actor:Self 000020F6 )
  AE4:  	Wait  4`
  AF0:  	Call  SetAnimation  ( .Actor:Self 00000001 00810002 )
  B08:  	Call  SetAnimation  ( .Actor:Self 00000001 0081001A )
  B20:  	Wait  2`
  B2C:  	Call  PlayEffect    ( ~FX:Firework:White *Var1 00000000 *Var3 *Fixed[0.75] 00000000 00000000 00000000 00000000 00000000 00000000 00000000 00000000 )
  B70:  	Call  PlayEffect    ( ~FX:Steam:SmallOutward *Var1 00000000 *Var3 *Fixed[3.0] 00000000 00000000 00000000 00000000 00000000 00000000 00000000 00000000 )
  BB4:  	Call  PlaySoundAtActor  ( .Actor:Self 000020F6 )
  BC8:  	Wait  4`
  BD4:  	Call  SetAnimation  ( .Actor:Self 00000001 00810002 )
  BEC:  	Call  SetAnimation  ( .Actor:Self 00000001 0081001A )
  C04:  	Wait  2`
  C10:  	Call  PlayEffect    ( ~FX:Firework:White *Var1 00000000 *Var3 *Fixed[0.75] 00000000 00000000 00000000 00000000 00000000 00000000 00000000 00000000 )
  C54:  	Call  PlayEffect    ( ~FX:Steam:SmallOutward *Var1 00000000 *Var3 *Fixed[3.0] 00000000 00000000 00000000 00000000 00000000 00000000 00000000 00000000 )
  C98:  	Call  PlaySoundAtActor  ( .Actor:Self 000020F6 )
  CAC:  	Wait  20`
  CB8:  	Call  SetAnimation  ( .Actor:Self 00000001 00810007 )
  CD0:  	Wait  20`
  CDC:  	Call  SetAnimationRate  ( .Actor:Self 00000001 *Fixed[1.0] )
  CF4:  Else
  CFC:  	Call  GetBattleFlags    ( *Var1 )
  D0C:  	If  *Var1  !&  80000000
  D1C:  		Call  GetStatusFlags    ( .Actor:Player *Var1 )
  D30:  		If  *Var1  !&  ~Flags:StatusFlags:Stone % 100000
  D40:  			Call  GetStatusFlags    ( .Actor:Self *Var1 )
  D54:  			If  *Var1  !&  ~Flags:StatusFlags:Shrink % 80000
  D64:  				Call  LandJump  ( .Actor:Self )
  D74:  			EndIf
  D7C:  		EndIf
  D84:  	EndIf
  D8C:  	Call  $Function_8021A2C0    ( 00000050 0000000E )
  DA0:  	Call  GetActorPos       ( .Actor:Self *Var0 *Var1 *Var2 )
  DBC:  	Add   *Var0  00000028
  DCC:  	Set   *Var1  00000000
  DDC:  	Call  SetActorSounds    ( .Actor:Self .ActorSound:Jump 00000000 00000000 )
  DF8:  	Call  SetGoalPos        ( .Actor:Self *Var0 *Var1 *Var2 )
  E14:  	Call  JumpToGoal        ( .Actor:Self  18` .False .True .False )
  E34:  	Call  PlaySoundAtActor  ( .Actor:Self 000020EA )
  E48:  	Thread
  E50:  		Call  $Function_8021A2C0    ( 00000050 0000000E )
  E64:  		Call  ShakeCam  ( .Cam:Battle 00000000  4` *Fixed[3.0] )
  E80:  	EndThread
  E88:  	Call  SetAnimation  ( .Actor:Self 00000001 00810014 )
  EA0:  	Wait  3`
  EAC:  	Call  SetAnimation  ( .Actor:Self 00000001 00810002 )
  EC4:  	Wait  20`
  ED0:  EndIf
  ED8:  If  *VarF  ==  0000000A
  EE8:  	Return
  EF0:  EndIf
  EF8:  Call  UseBattleCamPreset    ( 00000002 )
  F08:  Call  SetActorSpeed ( .Actor:Self *Fixed[8.0] )
  F1C:  Set   *Var1  00810003
  F2C:  ExecWait  $Script_80228508
  F38:  Return
  F40:  End
}

#new:Script $Script_8022B03C
{
    0:  Call  SetAnimation  ( .Actor:Self 00000001 0081000C )
   18:  Thread
   20:  	Wait  5`
   2C:  	Loop  00000004
   38:  		Call  $Function_8021A2C0    ( 00000050 0000000E )
   4C:  		Call  ShakeCam  ( .Cam:Battle 00000000  2` *Fixed[2.0] )
   68:  		Wait  4`
   74:  	EndLoop
   7C:  	Call  SetAnimation  ( .Actor:Self 00000001 00810002 )
   94:  EndThread
   9C:  Return
   A4:  End
}

#new:Script $Script_ClawSwipe2
{
    0:  Call  SetActorVar       ( .Actor:Self 00000004 00000000 )
   18:  Call  SetTargetActor    ( .Actor:Self .Actor:Player )
   2C:  Call  GetStatusFlags    ( .Actor:Self *Var0 )
   40:  If  *Var0  !&  ~Flags:StatusFlags:Shrink % 80000
   50:  	Call  UseBattleCamPreset    ( 0000003F )
   60:  	Call  SetBattleCamZoom      (  200` )
   70:  	Call  BattleCamTargetActor  ( .Actor:Self )
   80:  	Call  MoveBattleCamOver     (  40` )
   90:  	Call  8024ECF8  ( FFFFFFFF 00000001 00000000 )
   A8:  Else
   B0:  	Call  UseBattleCamPreset    ( 0000003F )
   C0:  	Call  SetBattleCamZoom      (  160` )
   D0:  	Call  SetBattleCamOffsetZ   (  5` )
   E0:  	Call  BattleCamTargetActor  ( .Actor:Self )
   F0:  	Call  MoveBattleCamOver     (  40` )
  100:  	Call  8024ECF8  ( FFFFFFFF 00000001 00000000 )
  118:  EndIf
  120:  Call  SetAnimation      ( .Actor:Self 00000001 00810003 )
  138:  Call  SetGoalToTarget   ( .Actor:Self )
  148:  Call  GetStatusFlags    ( .Actor:Self *Var0 )
  15C:  If  *Var0  !&  ~Flags:StatusFlags:Shrink % 80000
  16C:  	Call  AddGoalPos    ( .Actor:Self  60`  0`  0` )
  188:  Else
  190:  	Call  AddGoalPos    ( .Actor:Self  24`  0`  0` )
  1AC:  EndIf
  1B4:  Call  SetActorSpeed ( .Actor:Self *Fixed[3.0] )
  1C8:  Call  RunToGoal     ( .Actor:Self  0` .False )
  1E0:  Call  SetAnimation  ( .Actor:Self 00000001 00810009 )
  1F8:  Wait  25`
  204:  Call  SetAnimation  ( .Actor:Self 00000001 00810015 )
  21C:  Call  PlaySoundAtActor  ( .Actor:Self 0000035E )
  230:  Wait  3`
  23C:  Call  EnemyTestTarget   ( .Actor:Self *VarA ~Flags:DamageType:0 00000000 00000001 00000010 )
  260:  Switch  *VarA
  26C:  	CaseOR  ==  .HitResult:Miss % 6
  278:  	CaseOR  ==  .HitResult:Lucky % 5
  284:  		Wait  20`
  290:  		Call  UseBattleCamPreset    ( 00000002 )
  2A0:  		Call  MoveBattleCamOver     (  20` )
  2B0:  		ExecWait  $Script_8022B03C
  2BC:  		If  *VarA  ==  00000005
  2CC:  			Call  EnemyTestTarget   ( .Actor:Self *Var0 ~Flags:DamageType:TriggerLucky 00000000 00000000 00000000 )
  2F0:  			Wait  30`
  2FC:  		Else
  304:  			Wait  30`
  310:  		EndIf
  318:  		Call  SetActorSpeed ( .Actor:Self *Fixed[8.0] )
  32C:  		Set   *Var1  00810003
  33C:  		ExecWait  $Script_80228508
  348:  		Return
  350:  	EndCaseGroup
  358:  	Default
  360:  EndSwitch
  368:  Wait  2`
  374:  Call  SetGoalToTarget   ( .Actor:Self )
  384:  Call  GetPartEventFlags ( .Actor:Self 00000001 *Var0 )
  39C:  If  *Var0  &  00080000
  3AC:  	Set   *Var0  00000010
  3BC:  	Call  80269EAC  ( 0000000C )
  3CC:  	Call  EnemyDamageTarget ( .Actor:Self *VarF ~Flags:DamageType:0 00000000 ~DebuffType:Poison:3:100` *Var0 00000020 )
  3F4:  Else
  3FC:  	Set   *Var0  00000008
  40C:  	Call  80269EAC  ( 0000000C )
  41C:  	Call  EnemyDamageTarget ( .Actor:Self *VarF ~Flags:DamageType:0 00000000 ~DebuffType:Poison:3:100` *Var0 00000020 )
  444:  EndIf
  44C:  Switch  *VarF
  458:  	CaseOR  ==  .HitResult:Hit % 0
  464:  	CaseOR  ==  .HitResult:QuakeImmune % 2
  470:  	CaseOR  ==  0000000A % A
  47C:  		Wait  30`
  488:  		If  *VarF  ==  0000000A % A
  498:  			Return
  4A0:  		EndIf
  4A8:  		Call  UseBattleCamPreset    ( 00000002 )
  4B8:  		Call  MoveBattleCamOver     (  20` )
  4C8:  		Call  SetActorSpeed ( .Actor:Self *Fixed[8.0] )
  4DC:  		Set   *Var1  00810003
  4EC:  		ExecWait  $Script_80228508
  4F8:  	EndCaseGroup
  500:  EndSwitch
  508:  Return
  510:  End
}

#new:Script $Script_Shockwave2
{
    0:  Call  SetActorVar       ( .Actor:Self 00000002 00000000 )
   18:  Call  SetTargetActor    ( .Actor:Self .Actor:Player )
   2C:  Call  SetGoalToTarget   ( .Actor:Self )
   3C:  Call  GetStatusFlags    ( .Actor:Self *Var3 )
   50:  If  *Var3  !&  ~Flags:StatusFlags:Shrink % 80000
   60:  	Call  UseBattleCamPreset    ( 00000013 )
   70:  	Call  GetActorPos   ( .Actor:Self *Var0 *Var1 *Var2 )
   8C:  	Sub   *Var0  00000018
   9C:  	Add   *Var1  00000061
   AC:  	Call  SetBattleCamTarget    ( *Var0 *Var1 *Var2 )
   C4:  	Call  SetBattleCamZoom      (  420` )
   D4:  	Call  SetBattleCamOffsetZ   (  0` )
   E4:  	Call  MoveBattleCamOver     (  40` )
   F4:  Else
   FC:  	Call  UseBattleCamPreset    ( 00000013 )
  10C:  	Call  GetActorPos   ( .Actor:Self *Var0 *Var1 *Var2 )
  128:  	Sub   *Var0  00000009
  138:  	Add   *Var1  00000027
  148:  	Call  SetBattleCamTarget    ( *Var0 *Var1 *Var2 )
  160:  	Call  SetBattleCamZoom      (  375` )
  170:  	Call  SetBattleCamOffsetZ   (  0` )
  180:  	Call  MoveBattleCamOver     (  40` )
  190:  EndIf
  198:  Call  SetAnimation      ( .Actor:Self 00000001 0081000F )
  1B0:  Wait  10`
  1BC:  Call  $Function_8021A6BC ( )
  1C8:  Call  PlaySoundAtActor  ( .Actor:Self 00002121 )
  1DC:  Call  GetStatusFlags    ( .Actor:Self *Var0 )
  1F0:  If  *Var0  !&  ~Flags:StatusFlags:Shrink % 80000
  200:  	Call  GetActorPos   ( .Actor:Self *Var0 *Var1 *Var2 )
  21C:  	Add   *Var0  00000016
  22C:  	Sub   *Var2  00000003
  23C:  	Call  PlayEffect    ( ~FX:LightRays:SharpA *Var0 00000087 *Var2 *Fixed[1.0] *VarF 00000000 00000000 00000000 00000000 00000000 00000000 00000000 )
  280:  	Sub   *Var2  00000003
  290:  	Call  PlayEffect    ( 0000003C 00000002 *Var0 00000087 *Var2 *Fixed[1.0] *VarE 00000000 00000000 00000000 00000000 00000000 00000000 00000000 )
  2D4:  Else
  2DC:  	Call  GetActorPos   ( .Actor:Self *Var0 *Var1 *Var2 )
  2F8:  	Add   *Var0  00000009
  308:  	Sub   *Var2  00000003
  318:  	Call  PlayEffect    ( ~FX:LightRays:SharpA *Var0 00000036 *Var2 *Fixed[0.4] *VarF 00000000 00000000 00000000 00000000 00000000 00000000 00000000 )
  35C:  	Sub   *Var2  00000003
  36C:  	Call  PlayEffect    ( 0000003C 00000002 *Var0 00000036 *Var2 *Fixed[0.4] *VarE 00000000 00000000 00000000 00000000 00000000 00000000 00000000 )
  3B0:  EndIf
  3B8:  Wait  25`
  3C4:  Call  UseBattleCamPreset    ( 00000013 )
  3D4:  Call  SetBattleCamTarget    (  -45`  60`  0` )
  3EC:  Call  SetBattleCamZoom  (  530` )
  3FC:  Call  SetBattleCamOffsetZ   (  0` )
  40C:  Call  MoveBattleCamOver (  80` )
  41C:  Wait  10`
  428:  Call  RemoveEffect      ( *VarF )
  438:  Call  RemoveEffect      ( *VarE )
  448:  Call  PlaySoundAtActor  ( .Actor:Self 00002122 )
  45C:  Call  GetStatusFlags    ( .Actor:Self *Var0 )
  470:  If  *Var0  !&  ~Flags:StatusFlags:Shrink % 80000
  480:  	Call  GetActorPos   ( .Actor:Self *Var0 *Var1 *Var2 )
  49C:  	Add   *Var0  00000013
  4AC:  	Set   *Var1  00000037
  4BC:  	Call  PlayEffect    ( ~FX:EnergyShockwave *Var0 *Var1 *Var2 *Fixed[1.0] 0000003C 00000000 00000000 00000000 00000000 00000000 00000000 00000000 )
  500:  Else
  508:  	Call  GetActorPos   ( .Actor:Self *Var0 *Var1 *Var2 )
  524:  	Add   *Var0  00000007
  534:  	Set   *Var1  00000016
  544:  	Call  PlayEffect    ( ~FX:EnergyShockwave *Var0 *Var1 *Var2 *Fixed[1.0] 0000003C 00000000 00000000 00000000 00000000 00000000 00000000 00000000 )
  588:  EndIf
  590:  Thread
  598:  	Call  $Function_8021A754 ( )
  5A4:  EndThread
  5AC:  Wait  8`
  5B8:  Call  SetGoalToTarget   ( .Actor:Self )
  5C8:  Call  EnemyTestTarget   ( .Actor:Self *VarA ~Flags:DamageType:0 00000000 00000001 00000010 )
  5EC:  Switch  *VarA
  5F8:  	CaseOR  ==  .HitResult:Miss % 6
  604:  	CaseOR  ==  .HitResult:Lucky % 5
  610:  		Call  SetTargetActor    ( .Actor:Self .Actor:Partner )
  624:  		Call  EnemyTestTarget   ( .Actor:Self *VarB ~Flags:DamageType:0 00000000 00000001 00000010 )
  648:  		Switch  *VarB
  654:  			Case  ==  .HitResult:Miss % 6
  660:  				Call  SetAnimation  ( .Actor:Self 00000001 00810002 )
  678:  				Wait  30`
  684:  				Return
  68C:  			Default
  694:  				Wait  2`
  6A0:  				If  *VarA  ==  .HitResult:Lucky % 5
  6B0:  					ExecWait  $Script_8022B03C
  6BC:  					Call  SetTargetActor    ( .Actor:Self .Actor:Player )
  6D0:  					Call  EnemyTestTarget   ( .Actor:Self *Var0 ~Flags:DamageType:TriggerLucky 00000000 00000000 00000000 )
  6F4:  				EndIf
  6FC:  				Wait  2`
  708:  				Call  SetTargetActor    ( .Actor:Self .Actor:Partner )
  71C:  				Call  SetGoalToTarget   ( .Actor:Self )
  72C:  				If  *Var0  &  00040000 % 40000
  73C:  					Set   *Var1  00000003
  74C:  				Else
  754:  					Set   *Var1  00000003
  764:  				EndIf
  76C:  				Call  EnemyDamageTarget ( .Actor:Self *Var0 ~Flags:DamageType:NoOtherDamagePopups|Magic|Cosmic 0000FFFF 00000000 *Var1 00000020 )
  794:  				Call  RemovePlayerBuffs ( ~Flags:PlayerBuff:PartnerGlowing )
  7A4:  				If  *VarA  !=  00000005
  7B4:  					Call  SetAnimation  ( .Actor:Self 00000001 00810002 )
  7CC:  				EndIf
  7D4:  				Wait  30`
  7E0:  				Return
  7E8:  		EndSwitch
  7F0:  	EndCaseGroup
  7F8:  	Default
  800:  EndSwitch
  808:  Call  8026BF48  ( 00000001 )
  818:  Thread
  820:  	Wait  4`
  82C:  	Call  SetTargetActor    ( .Actor:Self .Actor:Partner )
  840:  	Call  SetGoalToTarget   ( .Actor:Self )
  850:  	If  *Var0  &  00040000 % 40000
  860:  		Set   *Var1  00000003
  870:  	Else
  878:  		Set   *Var1  00000003
  888:  	EndIf
  890:  	Call  EnemyDamageTarget ( .Actor:Self *Var0 ~Flags:DamageType:NoOtherDamagePopups|Magic|Cosmic 0000FFFF 00000000 *Var1 00000020 )
  8B8:  	Call  8026BF48  ( 00000000 )
  8C8:  EndThread
  8D0:  Wait  2`
  8DC:  Call  SetGoalToTarget   ( .Actor:Self )
  8EC:  If  *Var0  &  00040000 % 40000
  8FC:  	Set   *Var1  00000006
  90C:  Else
  914:  	Set   *Var1  00000006
  924:  EndIf
  92C:  Call  EnemyDamageTarget ( .Actor:Self *VarF ~Flags:DamageType:NoOtherDamagePopups|Magic|Cosmic 0000FFFF 00000000 *Var1 00000020 )
  954:  Call  RemovePlayerBuffs ( ~Flags:PlayerBuff:All )
  964:  Switch  *VarF
  970:  	CaseOR  ==  .HitResult:Hit % 0
  97C:  	CaseOR  ==  .HitResult:QuakeImmune % 2
  988:  	CaseOR  ==  0000000A % A
  994:  		Call  SetAnimation  ( .Actor:Self 00000001 00810002 )
  9AC:  		Wait  15`
  9B8:  		If  *VarF  ==  0000000A % A
  9C8:  			Return
  9D0:  		EndIf
  9D8:  	EndCaseGroup
  9E0:  EndSwitch
  9E8:  Return
  9F0:  End
}

#new:Script $Script_FireBreath2
{
    0:  Call  SetTargetActor    ( .Actor:Self .Actor:Player )
   14:  Call  SetGoalToTarget   ( .Actor:Self )
   24:  Call  GetStatusFlags    ( .Actor:Self *Var0 )
   38:  If  *Var0  !&  ~Flags:StatusFlags:Shrink % 80000
   48:  	Call  UseBattleCamPreset    ( 00000013 )
   58:  	Call  GetActorPos   ( .Actor:Self *Var0 *Var1 *Var2 )
   74:  	Sub   *Var0  0000001E
   84:  	Add   *Var1  00000051
   94:  	Call  SetBattleCamTarget    ( *Var0 *Var1 *Var2 )
   AC:  	Call  SetBattleCamZoom      (  400` )
   BC:  	Call  MoveBattleCamOver     (  40` )
   CC:  Else
   D4:  	Call  UseBattleCamPreset    ( 00000013 )
   E4:  	Call  GetActorPos   ( .Actor:Self *Var0 *Var1 *Var2 )
  100:  	Sub   *Var0  0000001E
  110:  	Add   *Var1  00000038
  120:  	Call  SetBattleCamTarget    ( *Var0 *Var1 *Var2 )
  138:  	Call  SetBattleCamZoom      (  350` )
  148:  	Call  MoveBattleCamOver     (  40` )
  158:  EndIf
  160:  Call  SetAnimation      ( .Actor:Self 00000001 00810016 )
  178:  Wait  35`
  184:  Call  SetAnimation      ( .Actor:Self 00000001 00810017 )
  19C:  Call  UseBattleCamPreset    ( 00000002 )
  1AC:  Call  MoveBattleCamOver (  55` )
  1BC:  Wait  10`
  1C8:  Call  GetPartEventFlags ( .Actor:Self 00000001 *Var3 )
  1E0:  Call  GetStatusFlags    ( .Actor:Self *Var4 )
  1F4:  Call  GetActorPos       ( .Actor:Self *Var0 *Var1 *Var2 )
  210:  If  *Var3  &  00080000
  220:  	If  *Var4  !&  ~Flags:StatusFlags:Shrink % 80000
  230:  		Sub   *Var0  00000046
  240:  		Add   *Var1  00000023
  250:  	Else
  258:  		Sub   *Var0  0000001C
  268:  		Add   *Var1  0000000E
  278:  	EndIf
  280:  Else
  288:  	If  *Var4  !&  ~Flags:StatusFlags:Shrink % 80000
  298:  		Sub   *Var0  0000004B
  2A8:  		Add   *Var1  00000031
  2B8:  	Else
  2C0:  		Sub   *Var0  0000001E
  2D0:  		Add   *Var1  00000013
  2E0:  	EndIf
  2E8:  EndIf
  2F0:  Add   *Var2  0000000A
  300:  Call  SetGoalToTarget   ( .Actor:Self )
  310:  Call  GetGoalPos        ( .Actor:Self *Var3 *Var4 *Var5 )
  32C:  Sub   *Var3  00000028
  33C:  Set   *Var4  00000014
  34C:  Call  GetPartEventFlags ( .Actor:Self 00000001 *Var6 )
  364:  If  *Var6  &  00080000
  374:  	Call  PlayEffect    ( ~FX:FireBreath:Large *Var0 *Var1 *Var2 *Var3 *Var4 *Var5 00000032 00000001 00000018 00000000 00000000 00000000 )
  3B8:  Else
  3C0:  	Call  GetStatusFlags    ( .Actor:Self *Var7 )
  3D4:  	If  *Var7  !&  ~Flags:StatusFlags:Shrink % 80000
  3E4:  		Add   *Var0  0000000F
  3F4:  	Else
  3FC:  		Add   *Var0  00000006
  40C:  	EndIf
  414:  	Sub   *Var3  0000000A
  424:  	Call  PlayEffect    ( ~FX:FireBreath:Tiny *Var0 *Var1 *Var2 *Var3 *Var4 *Var5 00000032 00000001 00000018 00000000 00000000 00000000 )
  468:  	Call  $Function_8021B60C    ( *VarF )
  478:  EndIf
  480:  Thread
  488:  	Call  $Function_8021A2C0    ( 00000032 00000094 )
  49C:  	Call  PlaySound ( 000003BD )
  4AC:  	Wait  70`
  4B8:  	Call  PlaySound ( 000007BD )
  4C8:  EndThread
  4D0:  Wait  10`
  4DC:  Call  SetGoalToTarget   ( .Actor:Self )
  4EC:  Call  EnemyTestTarget   ( .Actor:Self *VarA ~Flags:DamageType:0 00000000 00000001 00000010 )
  510:  Switch  *VarA
  51C:  	CaseOR  ==  .HitResult:Miss % 6
  528:  	CaseOR  ==  .HitResult:Lucky % 5
  534:  		Wait  10`
  540:  		Call  SetAnimation  ( .Actor:Self 00000001 00810018 )
  558:  		Wait  30`
  564:  		Call  SetAnimation  ( .Actor:Self 00000001 00810019 )
  57C:  		Wait  15`
  588:  		Call  SetAnimation  ( .Actor:Self 00000001 00810002 )
  5A0:  		Wait  30`
  5AC:  		ExecWait  $Script_8022B03C
  5B8:  		If  *VarA  ==  00000005
  5C8:  			Call  EnemyTestTarget   ( .Actor:Self *Var0 ~Flags:DamageType:TriggerLucky 00000000 00000000 00000000 )
  5EC:  		EndIf
  5F4:  		Wait  30`
  600:  		Return
  608:  	EndCaseGroup
  610:  	Default
  618:  EndSwitch
  620:  Wait  2`
  62C:  Call  SetGoalToTarget   ( .Actor:Self )
  63C:  Call  GetPartEventFlags ( .Actor:Self 00000001 *Var0 )
  654:  If  *Var0  &  00080000
  664:  	Set   *Var0  00000014
  674:  Else
  67C:  	Set   *Var0  0000000A
  68C:  EndIf
  694:  Call  EnemyDamageTarget ( .Actor:Self *VarF ~Flags:DamageType:Fire 0000FFFF 00000000 *Var0 00000020 )
  6BC:  Switch  *VarF
  6C8:  	CaseOR  ==  .HitResult:Hit % 0
  6D4:  	CaseOR  ==  .HitResult:QuakeImmune % 2
  6E0:  	CaseOR  ==  0000000A % A
  6EC:  		Wait  10`
  6F8:  		Call  SetAnimation  ( .Actor:Self 00000001 00810018 )
  710:  		Wait  30`
  71C:  		Call  SetAnimation  ( .Actor:Self 00000001 00810019 )
  734:  		Wait  15`
  740:  		Call  SetAnimation  ( .Actor:Self 00000001 00810002 )
  758:  		Wait  30`
  764:  		If  *VarF  ==  0000000A % A
  774:  			Return
  77C:  		EndIf
  784:  	EndCaseGroup
  78C:  EndSwitch
  794:  Return
  79C:  End
}

#new:Script $Script_8022C79C
{
    0:  Call  SetAnimation  ( .Actor:Self *Var0 *Var1 )
   18:  Call  80269E80      ( *Var3 )
   28:  Switch  *Var3
   34:  	Case  ==  00000009
   40:  		Call  GetOriginalActorType  ( .Actor:Self *Var7 )
   54:  		Switch  *Var7
   60:  			CaseOR  ==  00000012
   6C:  			CaseOR  ==  00000030
   78:  			EndCaseGroup
   80:  			Default
   88:  				Call  GetActorPos   ( .Actor:Self *Var4 *Var5 *Var6 )
   A4:  				Call  SetActorJumpGravity   ( .Actor:Self *Fixed[0.01] )
   B8:  				Add   *Var5  00000037
   C8:  				Call  SetGoalPos    ( .Actor:Self *Var4 *Var5 *Var6 )
   E4:  				Call  JumpToGoal    ( .Actor:Self  8` .False .False .False )
  104:  		EndSwitch
  10C:  		Set   *Var7  00000000
  11C:  		Loop  0000001E
  128:  			Add   *Var7  00000030
  138:  			Call  SetActorYaw   ( .Actor:Self *Var7 )
  14C:  			Wait  1`
  158:  		EndLoop
  160:  		Call  GetOriginalActorType  ( .Actor:Self *Var7 )
  174:  		Switch  *Var7
  180:  			CaseOR  ==  00000012
  18C:  			CaseOR  ==  00000030
  198:  				Wait  30`
  1A4:  			EndCaseGroup
  1AC:  			Default
  1B4:  				Sub   *Var5  00000037
  1C4:  				Call  SetActorJumpGravity   ( .Actor:Self *Fixed[0.8] )
  1D8:  				If  *Var5  ==  00000000
  1E8:  					Call  SetGoalPos    ( .Actor:Self *Var4 *Var5 *Var6 )
  204:  					Call  JumpToGoal    ( .Actor:Self  15` .False .True .False )
  224:  					Call  SetGoalPos    ( .Actor:Self *Var4 *Var5 *Var6 )
  240:  					Call  JumpToGoal    ( .Actor:Self  10` .False .True .False )
  260:  					Call  SetGoalPos    ( .Actor:Self *Var4 *Var5 *Var6 )
  27C:  					Call  JumpToGoal    ( .Actor:Self  5` .False .True .False )
  29C:  				Else
  2A4:  					Call  SetGoalPos    ( .Actor:Self *Var4 *Var5 *Var6 )
  2C0:  					Call  JumpToGoal    ( .Actor:Self  15` .False .False .False )
  2E0:  					Call  SetGoalPos    ( .Actor:Self *Var4 *Var5 *Var6 )
  2FC:  					Call  JumpToGoal    ( .Actor:Self  10` .False .False .False )
  31C:  					Call  SetGoalPos    ( .Actor:Self *Var4 *Var5 *Var6 )
  338:  					Call  JumpToGoal    ( .Actor:Self  5` .False .False .False )
  358:  				EndIf
  360:  		EndSwitch
  368:  	Default
  370:  		Wait  20`
  37C:  EndSwitch
  384:  If  *Var2  !=  FFFFFFFF
  394:  	Call  SetAnimation  ( .Actor:Self *Var0 *Var2 )
  3AC:  EndIf
  3B4:  Wait  10`
  3C0:  Call  GetLastEvent  ( .Actor:Self *Var1 )
  3D4:  Switch  *Var1
  3E0:  	Case  ==  .Event:BurnHit % E
  3EC:  		Call  GetPartEventFlags ( .Actor:Self *Var0 *Var1 )
  404:  		If  *Var1  !&  00000202
  414:  			Call  GetActorPos       ( .Actor:Self *Var0 *Var1 *Var2 )
  430:  			Call  GetActorSize      ( .Actor:Self *Var3 *Var4 )
  448:  			Call  GetStatusFlags    ( .Actor:Self *Var5 )
  45C:  			If  *Var5  &  ~Flags:StatusFlags:Shrink % 80000
  46C:  				MulF  *Var3  *Fixed[0.4]
  47C:  				MulF  *Var4  *Fixed[0.4]
  48C:  			EndIf
  494:  			DivF  *Var3  *Fixed[2.0]
  4A4:  			Call  GetActorFlags ( .Actor:Self *Var5 )
  4B8:  			If  *Var5  &  00000800
  4C8:  				SubF  *Var1  *Var3
  4D8:  			Else
  4E0:  				AddF  *Var1  *Var3
  4F0:  			EndIf
  4F8:  			AddF  *Var2  *Fixed[5.0]
  508:  			DivF  *Var3  *Fixed[10.0]
  518:  			Call  GetStatusFlags    ( .Actor:Self *Var5 )
  52C:  			If  *Var5  &  ~Flags:StatusFlags:Shrink % 80000
  53C:  				MulF  *Var3  *Fixed[0.4]
  54C:  				If  *Var3  <  00000001
  55C:  					SetF  *Var3  *Fixed[1.0]
  56C:  				EndIf
  574:  			EndIf
  57C:  			Call  PlayEffect    ( ~FX:SmokeBurst:Black *Var0 *Var1 *Var2 *Var3 0000000A 00000000 00000000 00000000 00000000 00000000 00000000 00000000 )
  5C0:  		EndIf
  5C8:  	Case  ==  .Event:BurnDeath % 24
  5D4:  EndSwitch
  5DC:  Return
  5E4:  End
}

#new:Script $Script_Thunderbolt2
{
    0:  Call  SetTargetActor    ( .Actor:Self .Actor:Player )
   14:  Call  UseBattleCamPreset    ( 0000000D )
   24:  Call  BattleCamTargetActor  ( .Actor:Self )
   34:  Call  MoveBattleCamOver (  30` )
   44:  Call  UseBattleCamPreset    ( 00000002 )
   54:  Call  MoveBattleCamOver (  30` )
   64:  Call  PlaySoundAtActor  ( .Actor:Self 000003EF )
   78:  Call  SetAnimation      ( .Actor:Self 00000001 0081000F )
   90:  Call  $Function_8021A6BC ( )
   9C:  Call  GetStatusFlags    ( .Actor:Self *Var0 )
   B0:  If  *Var0  !&  ~Flags:StatusFlags:Shrink % 80000
   C0:  	Call  GetActorPos   ( .Actor:Self *Var0 *Var1 *Var2 )
   DC:  	Add   *Var1  00000036
   EC:  	Sub   *Var2  00000003
   FC:  	Call  PlayEffect    ( ~FX:EnergyIn:YellowPoints *Var0 *Var1 *Var2 *Fixed[1.5] 00000032 00000000 00000000 00000000 00000000 00000000 00000000 00000000 )
  140:  	Wait  50`
  14C:  	Call  GetActorPos   ( .Actor:Self *Var0 *Var1 *Var2 )
  168:  	Add   *Var0  00000016
  178:  	Sub   *Var2  00000003
  188:  	Call  PlayEffect    ( ~FX:LightRays:SharpA *Var0 00000087 *Var2 *Fixed[1.5] *VarF 00000000 00000000 00000000 00000000 00000000 00000000 00000000 )
  1CC:  	Call  PlaySoundAtActor  ( .Actor:Self 00002121 )
  1E0:  	Sub   *Var2  00000003
  1F0:  	Call  PlayEffect    ( 0000003C 00000002 *Var0 00000087 *Var2 *Fixed[1.5] *VarE 00000000 00000000 00000000 00000000 00000000 00000000 00000000 )
  234:  	Wait  30`
  240:  	Call  RemoveEffect  ( *VarF )
  250:  	Call  RemoveEffect  ( *VarE )
  260:  Else
  268:  	Call  GetActorPos   ( .Actor:Self *Var0 *Var1 *Var2 )
  284:  	Add   *Var1  00000015
  294:  	Sub   *Var2  00000003
  2A4:  	Call  PlayEffect    ( ~FX:EnergyIn:YellowPoints *Var0 *Var1 *Var2 *Fixed[0.6] 00000032 00000000 00000000 00000000 00000000 00000000 00000000 00000000 )
  2E8:  	Wait  50`
  2F4:  	Call  GetActorPos   ( .Actor:Self *Var0 *Var1 *Var2 )
  310:  	Add   *Var0  00000009
  320:  	Sub   *Var2  00000003
  330:  	Call  PlayEffect    ( ~FX:LightRays:SharpA *Var0 00000036 *Var2 *Fixed[0.6] *VarF 00000000 00000000 00000000 00000000 00000000 00000000 00000000 )
  374:  	Call  PlaySoundAtActor  ( .Actor:Self 00002121 )
  388:  	Sub   *Var2  00000003
  398:  	Call  PlayEffect    ( 0000003C 00000002 *Var0 00000036 *Var2 *Fixed[0.6] *VarE 00000000 00000000 00000000 00000000 00000000 00000000 00000000 )
  3DC:  	Wait  30`
  3E8:  	Call  RemoveEffect  ( *VarF )
  3F8:  	Call  RemoveEffect  ( *VarE )
  408:  EndIf
  410:  Call  PlaySoundAtActor  ( .Actor:Self 00002127 )
  424:  Call  SetGoalToTarget   ( .Actor:Self )
  434:  Thread
  43C:  	Call  GetGoalPos    ( .Actor:Self *Var0 00000000 *Var1 )
  458:  	Call  $Function_8021B678    ( *Var0 *Var1 )
  46C:  EndThread
  474:  Call  EnemyTestTarget   ( .Actor:Self *VarA ~Flags:DamageType:0 00000000 00000001 00000010 )
  498:  Switch  *VarA
  4A4:  	CaseOR  ==  .HitResult:Miss % 6
  4B0:  	CaseOR  ==  .HitResult:Lucky % 5
  4BC:  		Wait  10`
  4C8:  		If  *VarA  ==  .HitResult:Lucky % 5
  4D8:  			Call  EnemyTestTarget   ( .Actor:Self *Var0 ~Flags:DamageType:TriggerLucky 00000000 00000000 00000000 )
  4FC:  			Wait  20`
  508:  			Call  $Function_8021A754 ( )
  514:  		Else
  51C:  			Wait  20`
  528:  			Call  $Function_8021A754 ( )
  534:  		EndIf
  53C:  		Call  SetActorSpeed ( .Actor:Self *Fixed[5.0] )
  550:  		Set   *Var1  00810003
  560:  		ExecWait  $Script_80228508
  56C:  		Return
  574:  	EndCaseGroup
  57C:  	Default
  584:  EndSwitch
  58C:  Wait  5`
  598:  Call  SetGoalToTarget   ( .Actor:Self )
  5A8:  Call  GetPartEventFlags ( .Actor:Self 00000001 *Var0 )
  5C0:  If  *Var0  &  00080000
  5D0:  	Set   *Var0  00000014
  5E0:  	Call  EnemyDamageTarget ( .Actor:Self *VarF ~Flags:DamageType:NoContact|Electric 00000000 00000000 *Var0 00000020 )
  608:  Else
  610:  	Set   *Var0  0000000A
  620:  	Call  EnemyDamageTarget ( .Actor:Self *VarF ~Flags:DamageType:NoContact|Electric 00000000 00000000 *Var0 00000020 )
  648:  EndIf
  650:  Switch  *VarF
  65C:  	CaseOR  ==  .HitResult:Hit % 0
  668:  	CaseOR  ==  .HitResult:QuakeImmune % 2
  674:  	CaseOR  ==  0000000A % A
  680:  		Wait  30`
  68C:  		Call  $Function_8021A754 ( )
  698:  		If  *VarF  ==  0000000A % A
  6A8:  			Return
  6B0:  		EndIf
  6B8:  		Call  SetActorSpeed ( .Actor:Self *Fixed[5.0] )
  6CC:  		Set   *Var1  00810003
  6DC:  		ExecWait  $Script_80228508
  6E8:  	EndCaseGroup
  6F0:  EndSwitch
  6F8:  Return
  700:  End
}

#new:IdleAnimations $IdleAnimations_8022D490
{
	.Status:Normal    00810002
	.Status:Stone     00810000
	.Status:Sleep     00810002
	.Status:Poison    00810002
	.Status:Stop      00810000
	.Status:Static    00810000
	.Status:Paralyze  00810000
	.Status:Paralyze  00810000
	.Status:Dizzy     00810002
	.Status:Dizzy     00810002
	.Status:End
}

#new:DefenseTable $DefenseTable_8022D4E4
{
	.Element:Normal 00000002
	.Element:End
}

#new:DefenseTable $DefenseTable_8022D4F0
{
	.Element:Normal 00000063
	.Element:End
}

#new:StatusTable $StatusTable_8022D4FC
{
	.Status:Normal      0`
	.Status:Default     0`
	.Status:Sleep       0`
	.Status:Poison      0`
	.Status:Frozen      0`
	.Status:Dizzy       0`
	.Status:Fear        0`
	.Status:Static      0`
	.Status:Paralyze    0`
	.Status:Shrink      0`
	.Status:Stop        0`
	.Status:DefaultTurnMod    0`
	.Status:SleepTurnMod     -1`
	.Status:PoisonTurnMod     0`
	.Status:FrozenTurnMod     0`
	.Status:DizzyTurnMod     -1`
	.Status:FearTurnMod       0`
	.Status:StaticTurnMod     0`
	.Status:ParalyzeTurnMod  -1`
	.Status:ShrinkTurnMod    -1`
	.Status:StopTurnMod      -2`
	.Status:End
}

#new:StatusTable $StatusTable_8022D5A8
{
	.Status:Normal      0`
	.Status:Default     0`
	.Status:Sleep       0`
	.Status:Poison      0`
	.Status:Frozen      0`
	.Status:Dizzy       0`
	.Status:Fear        0`
	.Status:Static      0`
	.Status:Paralyze    0`
	.Status:Shrink      0`
	.Status:Stop        0`
	.Status:DefaultTurnMod    0`
	.Status:SleepTurnMod     -1`
	.Status:PoisonTurnMod     0`
	.Status:FrozenTurnMod     0`
	.Status:DizzyTurnMod     -1`
	.Status:FearTurnMod       0`
	.Status:StaticTurnMod     0`
	.Status:ParalyzeTurnMod  -1`
	.Status:ShrinkTurnMod    -1`
	.Status:StopTurnMod      -2`
	.Status:End
}

#new:PartsTable $PartsTable_8022D654
{
	00800000 01000000 E56C00FF $IdleAnimations_8022D490 $DefenseTable_8022D4E4 00000000 00000000 00F80000 00000000
}

#new:Actor $Bowser3
{
	% stats
	[Index]        C5b
	[Level]         0`b
	[MaxHP]        99`b
	[Coins]         0`b
	[Flags]       00000000
	[StatusTable] $StatusTable_8022D4FC
	% ai
	[PartsCount]    1`s
	[PartsTable]  $PartsTable_8022D654
	[Script]      $Script_Init_8022D6A0
	% move effectiveness
	[Escape]        0`b
	[Item]          0`b
	[AirLift]       0`b
	[Hurricane]     0`b % Bow's "Spook" as well
	[UpAndAway]     0`b
	[PowerBounce]  60`b
	[SpinSmash]     4`b % weight (0-4)
	% ui positions
	[Size]        123`b 119`b % width height
	[HealthBar]     0`b   0`b % dx dy
	[StatusTurn]  -53`b 103`b % dx dy
	[StatusIcon]   33`b  92`b % dx dy
}

#new:Script $Script_Init_8022D6A0
{
    0:  Call  SetActorVar   ( .Actor:Self 00000000 00000000 )
   18:  Call  SetActorVar   ( .Actor:Self 00000002 00000000 )
   30:  Call  SetActorVar   ( .Actor:Self 00000004 00000003 )
   48:  Call  SetActorVar   ( .Actor:Self 00000005 00000003 )
   60:  Call  SetActorVar   ( .Actor:Self 00000009 00000000 )
   78:  Call  SetActorVar   ( .Actor:Self 0000000A 00000000 )
   90:  Call  SetActorVar   ( .Actor:Self 00000003 00000000 )
   A8:  Call  SetActorVar   ( .Actor:Self 00000006 00000000 )
   C0:  Call  SetActorVar   ( .Actor:Self 00000007 00000003 )
   D8:  Call  SetActorVar   ( .Actor:Self 0000000E 00000000 )
   F0:  Call  SetEnemyHP    ( .Actor:Self *GB_FinalBowserHP )
  104:  If  *GB_FinalBowserHP  <  00000001
  114:  	Call  SetEnemyHP    ( .Actor:Self  1` )
  128:  EndIf
  130:  Call  SetActorScale     ( .Actor:Self *Fixed[1.5] *Fixed[1.5] *Fixed[1.0] )
  14C:  Call  ModifyActorDecoration ( .Actor:Self 00000001 00000001 00000096 00000000 00000000 00000000 )
  174:  Exec  $Script_8022F488
  180:  Call  ModifyActorDecoration ( .Actor:Self 00000001 00000000 00000096 00000096 00000000 00000000 )
  1A8:  Call  AddActorDecoration    ( .Actor:Self 00000001 00000000 0000000A )
  1C4:  Call  SetPartEventBits  ( .Actor:Self 00000001 00080000 .True )
  1E0:  Call  AddActorDecoration    ( .Actor:Self 00000001 00000001 .Decoration:RadialStarEmitter )
  1FC:  Call  SetDefenseTable   ( .Actor:Self 00000001 $DefenseTable_8022D4F0 )
  214:  Call  SetStatusTable    ( .Actor:Self $StatusTable_8022D5A8 )
  228:  Call  BindTakeTurn      ( .Actor:Self $Script_TakeTurn_8022F2BC )
  23C:  Call  BindIdle  ( .Actor:Self $Script_Idle_8022D93C )
  250:  Call  BindHandleEvent   ( .Actor:Self $Script_HandleEvent_8022DF74 )
  264:  Call  BindNextTurn      ( .Actor:Self $Script_NextTurn_8022DAB8 )
  278:  Call  SetBattleFlagBits2    ( 02000000 .True )
  28C:  Return
  294:  End
}

#new:Script $Script_Idle_8022D93C
{
    0:  Call  GetActorPos   ( .Actor:Self *Var0 *Var1 *Var2 )
   1C:  Call  GetAnimation  ( .Actor:Self 00000001 *Var3 )
   34:  Label  0
   40:  Call  ActorExists   ( .Actor:Self *VarB )
   54:  If  *VarB  ==  .False
   64:  	Return
   6C:  EndIf
   74:  Call  GetStatusFlags    ( .Actor:Self *VarB )
   88:  If  *VarB  !&  ~Flags:StatusFlags:Shrink % 80000
   98:  	Call  ModifyActorDecoration ( .Actor:Self 00000001 00000000 00000096 00000096 000000FF 00000000 )
   C0:  	Call  ModifyActorDecoration ( .Actor:Self 00000001 00000001 00000096 00000000 00000000 00000000 )
   E8:  Else
   F0:  	Call  ModifyActorDecoration ( .Actor:Self 00000001 00000000 0000003C 0000003C 000000FF 00000000 )
  118:  	Call  ModifyActorDecoration ( .Actor:Self 00000001 00000001 0000003C 00000000 00000000 00000000 )
  140:  EndIf
  148:  ExecWait  $Script_8022FDC8
  154:  Wait  1`
  160:  Goto  0
  16C:  Return
  174:  End
}

#new:Script $Script_NextTurn_8022DAB8
{
    0:  Call  GetBattlePhase    ( *Var0 )
   10:  Switch  *Var0
   1C:  	Case  ==  0000000A
   28:  		Call  GetActorVar   ( .Actor:Self 00000000 *Var0 )
   40:  		If  *Var0  ==  00000000
   50:  			Call  UseIdleAnimation  ( .Actor:Self .False )
   64:  			Call  802535B4  ( 00000000 )
   74:  			Call  GetStatusFlags    ( .Actor:Self *Var3 )
   88:  			If  *Var3  !&  ~Flags:StatusFlags:Shrink % 80000
   98:  				Call  UseBattleCamPreset    ( 00000013 )
   A8:  				Call  GetActorPos   ( .Actor:Self *Var0 *Var1 *Var2 )
   C4:  				Sub   *Var0  0000000F
   D4:  				Add   *Var1  0000005A
   E4:  				Call  SetBattleCamTarget    ( *Var0 *Var1 *Var2 )
   FC:  				Call  SetBattleCamZoom      (  420` )
  10C:  				Call  SetBattleCamOffsetZ   (  0` )
  11C:  				Call  MoveBattleCamOver     (  30` )
  12C:  			Else
  134:  				Call  UseBattleCamPreset    ( 00000013 )
  144:  				Call  GetActorPos   ( .Actor:Self *Var0 *Var1 *Var2 )
  160:  				Sub   *Var0  00000006
  170:  				Add   *Var1  00000024
  180:  				Call  SetBattleCamTarget    ( *Var0 *Var1 *Var2 )
  198:  				Call  SetBattleCamZoom      (  420` )
  1A8:  				Call  SetBattleCamOffsetZ   (  0` )
  1B8:  				Call  MoveBattleCamOver     (  30` )
  1C8:  			EndIf
  1D0:  			Call  ActorSpeak        ( 001300A6 .Actor:Self 00000001 00810005 00810002 ) % Mario! Are you still standing? You should just giv ...
  1F0:  			Call  802535B4  ( 00000001 )
  200:  			Call  UseIdleAnimation  ( .Actor:Self .True )
  214:  		EndIf
  21C:  	Case  ==  0000000C
  228:  		Call  GetActorHP    ( .Actor:Self *Var0 )
  23C:  		Call  GetEnemyMaxHP ( .Actor:Self *Var1 )
  250:  		Mul   *Var0  00000064
  260:  		Div   *Var0  *Var1
  270:  		If  *Var0  <  00000032
  280:  			Call  GetActorVar   ( .Actor:Self 00000001 *Var0 )
  298:  			If  *Var0  !&  00000010
  2A8:  				ConstOR  *Var0 00000010
  2B8:  				Call  SetActorVar       ( .Actor:Self 00000001 *Var0 )
  2D0:  				Call  UseIdleAnimation  ( .Actor:Self .False )
  2E4:  				Call  802535B4  ( 00000000 )
  2F4:  				Call  GetStatusFlags    ( .Actor:Self *Var3 )
  308:  				If  *Var3  !&  ~Flags:StatusFlags:Shrink % 80000
  318:  					Call  UseBattleCamPreset    ( 00000013 )
  328:  					Call  GetActorPos   ( .Actor:Self *Var0 *Var1 *Var2 )
  344:  					Sub   *Var0  0000000F
  354:  					Add   *Var1  0000005A
  364:  					Call  SetBattleCamTarget    ( *Var0 *Var1 *Var2 )
  37C:  					Call  SetBattleCamZoom      (  420` )
  38C:  					Call  SetBattleCamOffsetZ   (  0` )
  39C:  					Call  MoveBattleCamOver     (  30` )
  3AC:  				Else
  3B4:  					Call  UseBattleCamPreset    ( 00000013 )
  3C4:  					Call  GetActorPos   ( .Actor:Self *Var0 *Var1 *Var2 )
  3E0:  					Sub   *Var0  00000006
  3F0:  					Add   *Var1  00000024
  400:  					Call  SetBattleCamTarget    ( *Var0 *Var1 *Var2 )
  418:  					Call  SetBattleCamZoom      (  420` )
  428:  					Call  SetBattleCamOffsetZ   (  0` )
  438:  					Call  MoveBattleCamOver     (  30` )
  448:  				EndIf
  450:  				Call  ActorSpeak        ( 001300A8 .Actor:Self 00000001 00810005 00810002 ) % This battle's not over yet!
  470:  				Call  802535B4  ( 00000001 )
  480:  				Call  UseIdleAnimation  ( .Actor:Self .True )
  494:  			EndIf
  49C:  		EndIf
  4A4:  EndSwitch
  4AC:  Return
  4B4:  End
}

#new:Script $Script_HandleEvent_8022DF74
{
    0:  Call  UseIdleAnimation  ( .Actor:Self .False )
   14:  Call  GetLastElement    ( *VarE )
   24:  Call  GetLastEvent      ( .Actor:Self *Var0 )
   38:  Switch  *Var0
   44:  	Case  ==  .Event:BeginFirstStrike % 38
   50:  	CaseOR  ==  .Event:HitCombo % 9
   5C:  	CaseOR  ==  .Event:Hit % A
   68:  		Set   *Var1  0081000D
   78:  		ExecWait  $Script_8022E8E0
   84:  		Return
   8C:  	EndCaseGroup
   94:  	Case  ==  .Event:Death % 20
   A0:  		SetConst  *Var0  00000001
   B0:  		SetConst  *Var1  0081000D
   C0:  		ExecWait  DoNormalHit
   CC:  		SetConst  *Var1  0081000D
   DC:  		ExecWait  $Script_8022E93C
   E8:  		Return
   F0:  	Case  ==  .Event:BurnHit % E
   FC:  		Set   *Var0  00000001
  10C:  		Set   *Var1  00810020
  11C:  		Set   *Var2  00810021
  12C:  		ExecWait  $Script_80233408
  138:  	Case  ==  .Event:BurnDeath % 24
  144:  		Set   *Var0  00000001
  154:  		Set   *Var1  00810020
  164:  		Set   *Var2  00810021
  174:  		ExecWait  $Script_80233408
  180:  		SetConst  *Var1  00810021
  190:  		ExecWait  $Script_8022E93C
  19C:  		Return
  1A4:  	Case  ==  .Event:SpinSmashHit % B
  1B0:  		Set   *Var1  0081000D
  1C0:  		ExecWait  $Script_8022E8E0
  1CC:  		Return
  1D4:  	Case  ==  .Event:SpinSmashDeath % 21
  1E0:  		SetConst  *Var0  00000001
  1F0:  		SetConst  *Var1  0081000D
  200:  		ExecWait  DoNormalHit
  20C:  		SetConst  *Var1  0081000D
  21C:  		ExecWait  $Script_8022E93C
  228:  		Return
  230:  	Case  ==  .Event:ShockHit % 2F
  23C:  		SetConst  *Var0  00000001
  24C:  		SetConst  *Var1  0081000D
  25C:  		ExecWait  DoShockHit
  268:  		SetConst  *Var0  00000001
  278:  		SetConst  *Var1  0081000D
  288:  		ExecWait  $Script_8022FBC8
  294:  		Call  SetActorSpeed ( .Actor:Self *Fixed[8.0] )
  2A8:  		Set   *Var1  00810003
  2B8:  		ExecWait  $Script_8022F334
  2C4:  	Case  ==  .Event:ShockDeath % 26
  2D0:  		SetConst  *Var0  00000001
  2E0:  		SetConst  *Var1  0081000D
  2F0:  		ExecWait  DoShockHit
  2FC:  		SetConst  *Var0  00000001
  30C:  		SetConst  *Var1  0081000D
  31C:  		ExecWait  $Script_8022FBC8
  328:  		SetConst  *Var0  00000001
  338:  		SetConst  *Var1  0081000D
  348:  		ExecWait  $Script_8022E93C
  354:  		Return
  35C:  	CaseOR  ==  00000017 % 17
  368:  	CaseOR  ==  .Event:Immune % 19
  374:  		Call  80269E80  ( *Var2 )
  384:  		Switch  *Var2
  390:  			CaseOR  ==  00000012
  39C:  			CaseOR  ==  00000015
  3A8:  				Call  SetAnimation  ( .Actor:Self 00000001 00810007 )
  3C0:  				Wait  30`
  3CC:  			EndCaseGroup
  3D4:  			Default
  3DC:  				Set   *Var1  00810007
  3EC:  				ExecWait  $Script_8022F290
  3F8:  		EndSwitch
  400:  	EndCaseGroup
  408:  	Case  ==  .Event:AirLiftFailed % 1F
  414:  		SetConst  *Var0  00000001
  424:  		Set   *Var1  00810002
  434:  		ExecWait  DoImmune
  440:  	Case  ==  .Event:SpikeTaunt % 1B
  44C:  	Case  ==  .Event:EndFirstStrike % 35
  458:  	Case  ==  .Event:RecoverStatus % 31
  464:  		SetConst  *Var0  00000001
  474:  		SetConst  *Var1  00810012
  484:  		ExecWait  DoRecover
  490:  		Call  SetAnimation  ( .Actor:Self 00000001 00810014 )
  4A8:  		Call  ShakeCam      ( .Cam:Battle 00000000  4` *Fixed[3.0] )
  4C4:  	Case  ==  .Event:SwapPartner % 3F
  4D0:  		Call  $Function_8021C09C ( )
  4DC:  	Case  ==  00000030 % 30
  4E8:  		SetConst  *Var0  00000001
  4F8:  		SetConst  *Var1  0081000D
  508:  		ExecWait  DoNormalHit
  514:  		Wait  1000`
  520:  	Case  ==  0000001D % 1D
  52C:  		Set   *Var1  00810002
  53C:  		ExecWait  $Script_8022F290
  548:  		Call  SetAnimation      ( .Actor:Self 00000001 00810002 )
  560:  		Call  SetActorFlagBits  ( .Actor:Self 00400000 .True )
  578:  		Call  SetBattleFlagBits ( 00060000 .True )
  58C:  		Call  8026F60C  ( 0000000A )
  59C:  		Return
  5A4:  	Case  ==  00000014 % 14
  5B0:  		Call  FreezeBattleCam       ( .True )
  5C0:  		Call  RemoveActorDecoration ( .Actor:Self 00000001 00000001 )
  5D8:  		Call  GetStatusFlags        ( .Actor:Self *Var3 )
  5EC:  		If  *Var3  !&  ~Flags:StatusFlags:Shrink % 80000
  5FC:  			Set   *Var3  0000004B
  60C:  			Set   *Var4  0000003C
  61C:  		Else
  624:  			Set   *Var3  0000001E
  634:  			Set   *Var4  00000018
  644:  		EndIf
  64C:  		Call  GetActorPos   ( .Actor:Self *Var0 *Var1 *Var2 )
  668:  		Add   *Var1  *Var3
  678:  		Call  PlayEffect    ( ~FX:Sparkles:Star *Var0 *Var1 *Var2 0000004B 00000000 00000000 00000000 00000000 00000000 00000000 00000000 00000000 )
  6BC:  		Call  GetActorPos   ( .Actor:Self *Var0 *Var1 *Var2 )
  6D8:  		Add   *Var1  *Var4
  6E8:  		Call  PlayEffect    ( ~FX:ShimmerBurst:Pink *Var0 *Var1 *Var2 *Fixed[1.05] 00000032 00000000 00000000 00000000 00000000 00000000 00000000 00000000 )
  72C:  		Call  SetPartEventBits  ( .Actor:Self 00000001 00080000 .False )
  748:  		Call  SetActorVar   ( .Actor:Self 00000003 00000000 )
  760:  		Call  SetDefenseTable   ( .Actor:Self 00000001 $DefenseTable_8022D4E4 )
  778:  		Call  SetStatusTable    ( .Actor:Self $StatusTable_8022D4FC )
  78C:  		Set   *Var1  0081000D
  79C:  		ExecWait  $Script_8022E910
  7A8:  		Call  GetActorVar   ( .Actor:Self 00000001 *Var0 )
  7C0:  		If  *Var0  !&  00000020
  7D0:  			ConstOR  *Var0 00000020
  7E0:  			Call  SetActorVar       ( .Actor:Self 00000001 *Var0 )
  7F8:  			Call  GetStatusFlags    ( .Actor:Self *Var3 )
  80C:  			If  *Var3  !&  ~Flags:StatusFlags:Shrink % 80000
  81C:  				Set   *Var3  0000005A
  82C:  			Else
  834:  				Set   *Var3  00000024
  844:  			EndIf
  84C:  			Call  UseBattleCamPreset    ( 00000013 )
  85C:  			Call  GetActorPos   ( .Actor:Self *Var0 *Var1 *Var2 )
  878:  			Sub   *Var0  0000000F
  888:  			Add   *Var1  *Var3
  898:  			Call  SetBattleCamTarget    ( *Var0 *Var1 *Var2 )
  8B0:  			Call  SetBattleCamZoom      (  420` )
  8C0:  			Call  SetBattleCamOffsetZ   (  0` )
  8D0:  			Call  MoveBattleCamOver     (  30` )
  8E0:  			Call  ActorSpeak    ( 001300A7 .Actor:Self 00000001 0081000D 0081000D ) % Gwaaa-huh!??? You've gotta be kidding me! My Star  ...
  900:  			Call  UseBattleCamPreset    ( 00000002 )
  910:  			Call  MoveBattleCamOver     (  45` )
  920:  		EndIf
  928:  		Call  FreezeBattleCam   ( .False )
  938:  	Default
  940:  EndSwitch
  948:  Call  UseIdleAnimation  ( .Actor:Self .True )
  95C:  Return
  964:  End
}

#new:Script $Script_8022E8E0
{
    0:  ExecWait  $Script_8022E910
    C:  Call  UseIdleAnimation  ( .Actor:Self .True )
   20:  Return
   28:  End
}

#new:Script $Script_8022E910
{
    0:  SetConst  *Var0  00000001
   10:  ExecWait  DoNormalHit
   1C:  Return
   24:  End
}

#new:Script $Script_8022E93C
{
    0:  Call  SetPartEventBits      ( .Actor:Self 00000001 00080000 .False )
   1C:  Call  RemoveActorDecoration ( .Actor:Self 00000001 00000001 )
   34:  Call  RemoveActorDecoration ( .Actor:Self 00000001 00000000 )
   4C:  Wait  14`
   58:  Call  SetAnimation  ( .Actor:Self 00000001 0081000E )
   70:  Call  GetStatusFlags        ( .Actor:Self *Var3 )
   84:  If  *Var3  !&  ~Flags:StatusFlags:Shrink % 80000
   94:  	Call  UseBattleCamPreset    ( 00000013 )
   A4:  	Call  GetActorPos   ( .Actor:Self *Var0 *Var1 *Var2 )
   C0:  	Sub   *Var0  0000000F
   D0:  	Add   *Var1  00000043
   E0:  	Call  SetBattleCamTarget    ( *Var0 *Var1 *Var2 )
   F8:  	Call  SetBattleCamZoom      (  420` )
  108:  	Call  SetBattleCamOffsetZ   (  0` )
  118:  	Call  MoveBattleCamOver     (  15` )
  128:  Else
  130:  	Call  UseBattleCamPreset    ( 00000013 )
  140:  	Call  GetActorPos   ( .Actor:Self *Var0 *Var1 *Var2 )
  15C:  	Sub   *Var0  00000006
  16C:  	Add   *Var1  0000001B
  17C:  	Call  SetBattleCamTarget    ( *Var0 *Var1 *Var2 )
  194:  	Call  SetBattleCamZoom      (  420` )
  1A4:  	Call  SetBattleCamOffsetZ   (  0` )
  1B4:  	Call  MoveBattleCamOver     (  15` )
  1C4:  EndIf
  1CC:  Wait  30`
  1D8:  Call  PlaySoundAtActor  ( .Actor:Self 00002128 )
  1EC:  Call  SetAnimation      ( .Actor:Self 00000001 0081000D )
  204:  Thread
  20C:  	Call  MakeLerp  ( 00000000 00000050 00000008 .Easing:QuadraticOut )
  228:  	Set   *Var2  00000000
  238:  	Label  0
  244:  	Call  UpdateLerp ( )
  250:  	Label  1
  25C:  	If  *Var2  >=  *Var0
  26C:  		Call  GetActorPos   ( .Actor:Self *Var3 *Var4 *Var5 )
  288:  		Call  GetActorScale ( .Actor:Self *Var6 *Var6 *Var7 )
  2A4:  		Call  $Function_8021B9A8    ( *Var3 *Var4 *Var5 *Var6 )
  2C0:  		If  *Var1  ==  00000001
  2D0:  			Goto  0
  2DC:  		EndIf
  2E4:  	Else
  2EC:  		Wait  1`
  2F8:  		Add   *Var2  00000001
  308:  		Goto  1
  314:  	EndIf
  31C:  EndThread
  324:  Wait  20`
  330:  Thread
  338:  	Wait  30`
  344:  	Call  GetActorPos       ( .Actor:Self *Var0 *Var1 *Var2 )
  360:  	Call  GetStatusFlags    ( .Actor:Self *VarA )
  374:  	If  *VarA  !&  ~Flags:StatusFlags:Shrink % 80000
  384:  		Add   *Var1  0000003C
  394:  	Else
  39C:  		Add   *Var1  00000018
  3AC:  	EndIf
  3B4:  	Call  PlayEffect    ( ~FX:ShimmerBurst:Pink *Var0 *Var1 *Var2 *Fixed[1.05] 00000032 00000000 00000000 00000000 00000000 00000000 00000000 00000000 )
  3F8:  	Set   *Var1  00000032
  408:  	If  *Var1  >  00000000
  418:  		SetF  *Var0  *Fixed[1.5]
  428:  		Loop  *Var1
  434:  			SubF  *Var0  *Fixed[0.01]
  444:  			Call  SetActorScale ( .Actor:Self *Var0 *Var0 *Fixed[1.0] )
  460:  			Wait  1`
  46C:  		EndLoop
  474:  		Call  SetActorScale ( .Actor:Self *Fixed[1.0] *Fixed[1.0] *Fixed[1.0] )
  490:  	EndIf
  498:  EndThread
  4A0:  Call  EnableActorBlur   ( .Actor:Self 00000001 )
  4B4:  Call  MakeLerp  ( 00000000 00001950 00000064 .Easing:CosInOut )
  4D0:  Label  2
  4DC:  Call  UpdateLerp ( )
  4E8:  Mod   *Var0  00000168
  4F8:  Call  SetActorYaw       ( .Actor:Self *Var0 )
  50C:  Wait  1`
  518:  If  *Var1  ==  00000001
  528:  	Goto  2
  534:  EndIf
  53C:  Call  EnableActorBlur   ( .Actor:Self 00000000 )
  550:  Call  SetAnimation      ( .Actor:Self 00000001 0081000E )
  568:  Wait  15`
  574:  Call  PlaySoundAtActor  ( .Actor:Self 00002129 )
  588:  Call  SetAnimation      ( .Actor:Self 00000001 0081001C )
  5A0:  Thread
  5A8:  	Call  $Function_8021B950    ( 000000B4 00000010 )
  5BC:  	Call  ShakeCam  ( .Cam:Battle 00000000  4` *Fixed[3.0] )
  5D8:  EndThread
  5E0:  Call  GetActorPos   ( .Actor:Self *Var0 *Var1 *Var2 )
  5FC:  Call  PlayEffect    ( ~FX:Steam:LargeOutward *Var0 *Var1 *Var2 00000000 00000000 00000000 00000000 00000000 00000000 00000000 00000000 00000000 )
  640:  Call  SetPartScale  ( .Actor:Self 00000001 *Fixed[1.1] *Fixed[0.93] *Fixed[1.0] )
  660:  Wait  1`
  66C:  Call  SetPartScale  ( .Actor:Self 00000001 *Fixed[1.2] *Fixed[0.85] *Fixed[1.0] )
  68C:  Wait  1`
  698:  Call  SetPartScale  ( .Actor:Self 00000001 *Fixed[1.25] *Fixed[0.8] *Fixed[1.0] )
  6B8:  Wait  1`
  6C4:  Call  SetPartScale  ( .Actor:Self 00000001 *Fixed[1.3] *Fixed[0.75] *Fixed[1.0] )
  6E4:  Wait  1`
  6F0:  Call  SetPartScale  ( .Actor:Self 00000001 *Fixed[1.2] *Fixed[0.87] *Fixed[1.0] )
  710:  Wait  1`
  71C:  Call  SetPartScale  ( .Actor:Self 00000001 *Fixed[1.1] *Fixed[0.92] *Fixed[1.0] )
  73C:  Wait  1`
  748:  Call  SetPartScale  ( .Actor:Self 00000001 *Fixed[1.0] *Fixed[1.0] *Fixed[1.0] )
  768:  Wait  30`
  774:  Call  SetActorSize  ( .Actor:Self  52`  115` )
  78C:  Call  GetStatusFlags    ( .Actor:Self *Var0 )
  7A0:  If  *Var0  !&  ~Flags:StatusFlags:Shrink % 80000
  7B0:  	Call  UseBattleCamPreset    ( 00000013 )
  7C0:  	Call  GetActorPos   ( .Actor:Self *Var0 *Var1 *Var2 )
  7DC:  	Sub   *Var0  0000000F
  7EC:  	Add   *Var1  0000002D
  7FC:  	Call  SetBattleCamTarget    ( *Var0 *Var1 *Var2 )
  814:  	Call  SetBattleCamZoom      (  300` )
  824:  	Call  SetBattleCamOffsetZ   (  0` )
  834:  	Call  MoveBattleCamOver     (  40` )
  844:  Else
  84C:  	Call  UseBattleCamPreset    ( 00000013 )
  85C:  	Call  GetActorPos   ( .Actor:Self *Var0 *Var1 *Var2 )
  878:  	Sub   *Var0  00000006
  888:  	Add   *Var1  00000012
  898:  	Call  SetBattleCamTarget    ( *Var0 *Var1 *Var2 )
  8B0:  	Call  SetBattleCamZoom      (  300` )
  8C0:  	Call  SetBattleCamOffsetZ   (  0` )
  8D0:  	Call  MoveBattleCamOver     (  40` )
  8E0:  EndIf
  8E8:  Call  ActorSpeak        ( 001300A9 .Actor:Self 00000001 0081001D 0081001C ) % Ohhhhhhh, NOOO!!!! Mario defeated me...again... He ...
  908:  Call  SetActorFlagBits  ( .Actor:Self 00400000 .True )
  920:  Call  SetBattleFlagBits ( 00060000 .True )
  934:  Call  8026F60C  ( 00000014 )
  944:  Return
  94C:  End
}

#new:Script $Script_8022F290
{
    0:  SetConst  *Var0  00000001
   10:  ExecWait  DoImmune
   1C:  Return
   24:  End
}

#new:Script $Script_TakeTurn_8022F2BC
{
    0:  Call  UseIdleAnimation  ( .Actor:Self .False )
   14:  ExecWait  $Script_UseMove3
   20:  Call  UseIdleAnimation  ( .Actor:Self .True )
   34:  Return
   3C:  End
}

#new:Script $Script_8022F300
{
    0:  Call  SetAnimation  ( .Actor:Self 00000001 0081000F )
   18:  ExecWait  $Script_8022F4A4
   24:  Return
   2C:  End
}

#new:Script $Script_8022F334
{
    0:  Set   *Var0  00000001
   10:  Call  GetActorPos   ( .Actor:Self *VarA *VarB *VarC )
   2C:  Call  SetGoalToHome ( .Actor:Self )
   3C:  Call  GetGoalPos    ( .Actor:Self *VarD *VarE *VarF )
   58:  Call  SetActorYaw   ( .Actor:Self  0` )
   6C:  Call  GetDist2D     ( *Var9 *VarA *VarC *VarD *VarF )
   8C:  If  *Var9  >=  *Fixed[5.0]
   9C:  	Call  SetAnimation  ( .Actor:Self *Var0 *Var1 )
   B4:  	Call  RunToGoal     ( .Actor:Self  0` .False )
   CC:  EndIf
   D4:  If  *VarB  ==  000000B4
   E4:  	Loop  0000000F
   F0:  		Sub   *VarB  0000000C
  100:  		Call  SetActorYaw   ( .Actor:Self *VarB )
  114:  		Wait  1`
  120:  	EndLoop
  128:  EndIf
  130:  Call  SetActorYaw   ( .Actor:Self  0` )
  144:  Return
  14C:  End
}

#new:Script $Script_8022F488
{
    0:  Call  $Function_8021BC60 ( )
    C:  Return
   14:  End
}

#new:Script $Script_8022F4A4
{
    0:  Call  $Function_8021C004 ( )
    C:  Call  GetStatusFlags    ( .Actor:Self *Var3 )
   20:  Call  GetActorPos       ( .Actor:Self *Var0 *Var1 *Var2 )
   3C:  If  *Var3  !&  ~Flags:StatusFlags:Shrink % 80000
   4C:  	Add   *Var0  00000016
   5C:  	Add   *Var1  00000087
   6C:  	Thread
   74:  		Call  PlaySoundAtActor      ( .Actor:Self 00002123 )
   88:  		Add   *Var2  0000000A
   98:  		Call  $Function_8021C14C    ( *Var0 *Var1 *Var2 *Fixed[2.5] *Fixed[0.07519531] )
   B8:  	EndThread
   C0:  Else
   C8:  	Add   *Var0  00000009
   D8:  	Add   *Var1  00000036
   E8:  	Thread
   F0:  		Call  PlaySoundAtActor      ( .Actor:Self 00002123 )
  104:  		Add   *Var2  0000000A
  114:  		Call  $Function_8021C14C    ( *Var0 *Var1 *Var2 *Fixed[2.5] *Fixed[0.03] )
  134:  	EndThread
  13C:  EndIf
  144:  Wait  65`
  150:  Call  GetActorPos   ( .Actor:Self *Var0 *Var1 *Var2 )
  16C:  If  *Var3  !&  ~Flags:StatusFlags:Shrink % 80000
  17C:  	Add   *Var0  00000016
  18C:  	Sub   *Var2  00000003
  19C:  	Call  PlayEffect    ( ~FX:LightRays:SharpA *Var0 00000087 *Var2 *Fixed[1.5] *VarF 00000000 00000000 00000000 00000000 00000000 00000000 00000000 )
  1E0:  	Call  PlayEffect    ( 0000003C 00000002 *Var0 00000087 *Var2 *Fixed[1.0] *VarE 00000000 00000000 00000000 00000000 00000000 00000000 00000000 )
  224:  	Sub   *Var2  00000003
  234:  	Call  PlayEffect    ( 0000003C 00000002 *Var0 00000087 *Var2 *Fixed[1.5] *VarD 00000000 00000000 00000000 00000000 00000000 00000000 00000000 )
  278:  Else
  280:  	Add   *Var0  00000009
  290:  	Sub   *Var2  00000003
  2A0:  	Call  PlayEffect    ( ~FX:LightRays:SharpA *Var0 00000036 *Var2 *Fixed[0.6] *VarF 00000000 00000000 00000000 00000000 00000000 00000000 00000000 )
  2E4:  	Call  PlayEffect    ( 0000003C 00000002 *Var0 00000036 *Var2 *Fixed[0.4] *VarE 00000000 00000000 00000000 00000000 00000000 00000000 00000000 )
  328:  	Sub   *Var2  00000003
  338:  	Call  PlayEffect    ( 0000003C 00000002 *Var0 00000036 *Var2 *Fixed[0.6] *VarD 00000000 00000000 00000000 00000000 00000000 00000000 00000000 )
  37C:  EndIf
  384:  Call  PlaySoundAtActor  ( .Actor:Self 00002121 )
  398:  Wait  30`
  3A4:  Call  RemoveEffect      ( *VarF )
  3B4:  Call  RemoveEffect      ( *VarE )
  3C4:  Call  RemoveEffect      ( *VarD )
  3D4:  Call  SetPartEventBits  ( .Actor:Self 00000001 00080000 .True )
  3F0:  Call  AddActorDecoration    ( .Actor:Self 00000001 00000001 .Decoration:RadialStarEmitter )
  40C:  Call  SetDefenseTable   ( .Actor:Self 00000001 $DefenseTable_8022D4F0 )
  424:  Call  SetStatusTable    ( .Actor:Self $StatusTable_8022D5A8 )
  438:  Call  $Function_8021C11C ( )
  444:  Wait  3`
  450:  Call  GetStatusFlags    ( .Actor:Self *Var3 )
  464:  If  *Var3  !&  ~Flags:StatusFlags:Shrink % 80000
  474:  	Call  GetActorPos   ( .Actor:Self *Var0 *Var1 *Var2 )
  490:  	Add   *Var1  0000003C
  4A0:  	Add   *Var2  0000000C
  4B0:  	Call  PlayEffect    ( ~FX:RainbowShimmer *Var0 *Var1 *Var2 00000069 00000078 00000025 0000003C 00000000 00000000 00000000 00000000 00000000 )
  4F4:  Else
  4FC:  	Call  GetActorPos   ( .Actor:Self *Var0 *Var1 *Var2 )
  518:  	Add   *Var1  00000018
  528:  	Add   *Var2  0000000C
  538:  	Call  PlayEffect    ( ~FX:RainbowShimmer *Var0 *Var1 *Var2 0000002A 00000030 0000000F 0000003C 00000000 00000000 00000000 00000000 00000000 )
  57C:  EndIf
  584:  Call  PlaySoundAtActor  ( .Actor:Self 00002125 )
  598:  Thread
  5A0:  	Call  GetActorPos   ( .Actor:Self *Var0 *Var1 *Var2 )
  5BC:  	Call  $Function_8021C520    ( *Var0 *Var1 *Var2 *Fixed[1.2] )
  5D8:  EndThread
  5E0:  Wait  75`
  5EC:  Thread
  5F4:  	Call  $Function_8021C09C ( )
  600:  EndThread
  608:  Call  SetAnimation      ( .Actor:Self 00000001 00810008 )
  620:  Call  GetStatusFlags    ( .Actor:Self *Var3 )
  634:  Call  GetActorPos       ( .Actor:Self *Var0 *Var1 *Var2 )
  650:  If  *Var3  !&  ~Flags:StatusFlags:Shrink % 80000
  660:  	Add   *Var1  0000003C
  670:  Else
  678:  	Add   *Var1  00000018
  688:  EndIf
  690:  Call  PlayEffect        ( ~FX:EnergyWaveOut:Grey *Var0 *Var1 *Var2 *Fixed[1.5] 0000000F 00000000 00000000 00000000 00000000 00000000 00000000 00000000 )
  6D4:  Call  PlaySoundAtActor  ( .Actor:Self 00002124 )
  6E8:  Call  UseBattleCamPreset    ( 00000002 )
  6F8:  Call  MoveBattleCamOver (  39` )
  708:  Wait  30`
  714:  Return
  71C:  End
}

#new:Script $Script_8022FBC8
{
    0:  If  *Var1  !=  FFFFFFFF
   10:  	Call  SetAnimation  ( .Actor:Self *Var0 *Var1 )
   28:  EndIf
   30:  Call  UseBattleCamPreset    ( 00000002 )
   40:  Call  SetActorJumpGravity   ( .Actor:Self *Fixed[1.4] )
   54:  Call  SetGoalToHome ( .Actor:Self )
   64:  Call  GetGoalPos    ( .Actor:Self *Var2 *Var3 *Var4 )
   80:  Call  GetActorPos   ( .Actor:Self *Var5 *Var6 *Var7 )
   9C:  Set   *Var8  *Var2
   AC:  Add   *Var8  *Var5
   BC:  Div   *Var8  00000002
   CC:  Set   *Var9  *Var4
   DC:  Add   *Var9  *Var7
   EC:  Div   *Var9  00000002
   FC:  Call  SetGoalPos    ( .Actor:Self *Var8  0` *Var9 )
  118:  Call  JumpToGoal    ( .Actor:Self  15` .False .True .False )
  138:  Add   *Var8  *Var2
  148:  Div   *Var8  00000002
  158:  Add   *Var9  *Var4
  168:  Div   *Var9  00000002
  178:  Call  SetGoalPos    ( .Actor:Self *Var8  0` *Var9 )
  194:  Call  JumpToGoal    ( .Actor:Self  8` .False .True .False )
  1B4:  Call  SetGoalPos    ( .Actor:Self *Var2 *Var3 *Var4 )
  1D0:  Call  JumpToGoal    ( .Actor:Self  5` .False .True .False )
  1F0:  Return
  1F8:  End
}

#new:Script $Script_8022FDC8
{
    0:  Call  GetAnimation  ( .Actor:Self 00000001 *Var7 )
   18:  If  *Var7  !=  00810003
   28:  	If  *Var3  ==  00810003
   38:  		Call  PlaySoundAtActor  ( .Actor:Self 000020B4 )
   4C:  		Call  PlaySoundAtActor  ( .Actor:Self 000020F6 )
   60:  	EndIf
   68:  	Set   *Var3  *Var7
   78:  	Call  GetActorPos   ( .Actor:Self *Var0 *Var1 *Var2 )
   94:  	Return
   9C:  EndIf
   A4:  Call  GetActorPos   ( .Actor:Self *Var5 *Var6 *Var7 )
   C0:  Sub   *Var5  *Var0
   D0:  If  *Var5  >  FFFFFFE2
   E0:  	If  *Var5  <  0000001E
   F0:  		Set   *Var3  *Var7
  100:  		Return
  108:  	EndIf
  110:  EndIf
  118:  Call  GetActorPos       ( .Actor:Self *Var0 *Var1 *Var2 )
  134:  Call  PlaySoundAtActor  ( .Actor:Self 000020B4 )
  148:  Call  PlaySoundAtActor  ( .Actor:Self 000020F6 )
  15C:  Set   *Var3  *Var7
  16C:  Return
  174:  End
}

#new:Script $Script_HealSelf3
{
    0:  Call  GetActorVar       ( .Actor:Self 00000007 *Var0 )
   18:  Sub   *Var0  00000001
   28:  Call  SetActorVar       ( .Actor:Self 00000007 *Var0 )
   40:  Call  GetStatusFlags    ( .Actor:Self *Var3 )
   54:  If  *Var3  !&  ~Flags:StatusFlags:Shrink % 80000
   64:  	Call  UseBattleCamPreset    ( 00000013 )
   74:  	Call  GetActorPos   ( .Actor:Self *Var0 *Var1 *Var2 )
   90:  	Sub   *Var0  0000000F
   A0:  	Add   *Var1  00000061
   B0:  	Call  SetBattleCamTarget    ( *Var0 *Var1 *Var2 )
   C8:  	Call  SetBattleCamZoom      (  420` )
   D8:  	Call  SetBattleCamOffsetZ   (  0` )
   E8:  	Call  MoveBattleCamOver     (  40` )
   F8:  Else
  100:  	Call  UseBattleCamPreset    ( 00000013 )
  110:  	Call  GetActorPos   ( .Actor:Self *Var0 *Var1 *Var2 )
  12C:  	Sub   *Var0  00000006
  13C:  	Add   *Var1  00000027
  14C:  	Call  SetBattleCamTarget    ( *Var0 *Var1 *Var2 )
  164:  	Call  SetBattleCamZoom      (  294` )
  174:  	Call  SetBattleCamOffsetZ   (  0` )
  184:  	Call  MoveBattleCamOver     (  40` )
  194:  EndIf
  19C:  Call  SetAnimation      ( .Actor:Self 00000001 0081000F )
  1B4:  Call  $Function_8021C004 ( )
  1C0:  Call  PlaySoundAtActor  ( .Actor:Self 00002126 )
  1D4:  Call  GetStatusFlags    ( .Actor:Self *Var3 )
  1E8:  If  *Var3  !&  ~Flags:StatusFlags:Shrink % 80000
  1F8:  	Call  GetActorPos   ( .Actor:Self *Var0 *Var1 *Var2 )
  214:  	Add   *Var0  00000016
  224:  	Add   *Var1  00000087
  234:  	Sub   *Var2  00000003
  244:  	Call  PlayEffect    ( ~FX:EnergyIn:YellowPoints *Var0 *Var1 *Var2 *Fixed[1.5] 00000032 00000000 00000000 00000000 00000000 00000000 00000000 00000000 )
  288:  	Call  GetActorPos   ( .Actor:Self *Var0 *Var1 *Var2 )
  2A4:  	Add   *Var0  00000016
  2B4:  	Sub   *Var2  00000003
  2C4:  	Call  PlayEffect    ( ~FX:RadialFlowOut:YellowEnergy *Var0 00000087 *Var2 *Fixed[0.45] 0000001E 00000000 00000000 00000000 00000000 00000000 00000000 00000000 )
  308:  Else
  310:  	Call  GetActorPos   ( .Actor:Self *Var0 *Var1 *Var2 )
  32C:  	Add   *Var0  00000009
  33C:  	Add   *Var1  00000036
  34C:  	Sub   *Var2  00000003
  35C:  	Call  PlayEffect    ( ~FX:EnergyIn:YellowPoints *Var0 *Var1 *Var2 *Fixed[0.6] 00000032 00000000 00000000 00000000 00000000 00000000 00000000 00000000 )
  3A0:  	Call  GetActorPos   ( .Actor:Self *Var0 *Var1 *Var2 )
  3BC:  	Add   *Var0  00000009
  3CC:  	Sub   *Var2  00000003
  3DC:  	Call  PlayEffect    ( ~FX:RadialFlowOut:YellowEnergy *Var0 00000036 *Var2 *Fixed[0.18] 0000001E 00000000 00000000 00000000 00000000 00000000 00000000 00000000 )
  420:  EndIf
  428:  Wait  30`
  434:  Call  GetEnemyMaxHP ( .Actor:Self *Var0 )
  448:  Mul   *Var0  0000001F
  458:  Div   *Var0  00000064
  468:  Thread
  470:  	Wait  5`
  47C:  	Call  PlaySoundAtActor  ( .Actor:Self 0000206D )
  490:  	Call  PlaySoundAtActor  ( .Actor:Self 00000214 )
  4A4:  	Wait  30`
  4B0:  	Call  PlaySoundAtActor  ( .Actor:Self 0000025C )
  4C4:  EndThread
  4CC:  Thread
  4D4:  	Call  8026BF48  ( 00000001 )
  4E4:  	Call  HealActor ( .Actor:Self *Var0 .False )
  4FC:  	Call  8026BF48  ( 00000000 )
  50C:  EndThread
  514:  Call  UseIdleAnimation  ( .Actor:Self .True )
  528:  Return
  530:  End
}

#new:Script $Script_UseMove3
{
    0:  Call  AddActorVar   ( .Actor:Self 00000000 00000001 )
   18:  Call  AddActorVar   ( .Actor:Self 00000004 00000001 )
   30:  Call  AddActorVar   ( .Actor:Self 00000005 00000001 )
   48:  Call  AddActorVar   ( .Actor:Self 00000002 00000001 )
   60:  Call  AddActorVar   ( .Actor:Self 00000003 00000001 )
   78:  Call  AddActorVar   ( .Actor:Self 00000006 00000001 )
   90:  Call  GetActorHP    ( .Actor:Self *Var0 )
   A4:  Call  GetEnemyMaxHP ( .Actor:Self *Var1 )
   B8:  Mul   *Var0  00000064
   C8:  Div   *Var0  *Var1
   D8:  Call  $Function_GetPlayerPercentHP  ( *Var2 )
   E8:  Sub   *Var2  *Var0
   F8:  If  *Var2  >  00000019
  108:  	Call  GetActorVar   ( .Actor:Self 00000007 *Var0 )
  120:  	If  *Var0  !=  00000000
  130:  		Call  RandInt   ( 00000064 *Var0 )
  144:  		If  *Var0  <  0000004B
  154:  			Call  GetActorVar   ( .Actor:Self 00000006 *Var0 )
  16C:  			If  *Var0  >  00000001
  17C:  				Call  SetActorVar   ( .Actor:Self 00000006 00000000 )
  194:  				ExecWait  $Script_HealSelf3
  1A0:  				Return
  1A8:  			Else
  1B0:  				Call  RandInt   ( 00000064 *Var0 )
  1C4:  				If  *Var0  <  00000000
  1D4:  					Call  SetActorVar   ( .Actor:Self 00000006 00000000 )
  1EC:  					ExecWait  $Script_HealSelf3
  1F8:  					Return
  200:  				EndIf
  208:  			EndIf
  210:  		EndIf
  218:  	EndIf
  220:  EndIf
  228:  Call  GetActorVar   ( .Actor:Self 00000000 *Var0 )
  240:  If  *Var0  >  00000001
  250:  	Call  GetPartEventFlags ( .Actor:Self 00000001 *Var0 )
  268:  	If  *Var0  !&  00080000
  278:  		Call  GetActorVar   ( .Actor:Self 00000003 *Var0 )
  290:  		Switch  *Var0
  29C:  			Case  ==  00000001
  2A8:  				Set   *Var0  00000000
  2B8:  			Case  ==  00000002
  2C4:  				Set   *Var0  00000000
  2D4:  			Case  ==  00000003
  2E0:  				Set   *Var0  0000000F
  2F0:  			Default
  2F8:  				Set   *Var0  0000004B
  308:  		EndSwitch
  310:  		Call  RandInt   ( 00000064 *Var1 )
  324:  		If  *Var1  <  *Var0
  334:  			ExecWait  $Script_8022F300
  340:  			Return
  348:  		EndIf
  350:  	EndIf
  358:  EndIf
  360:  Call  GetActorVar   ( .Actor:Self 00000002 *Var0 )
  378:  If  *Var0  <  00000003
  388:  	ExecWait  $Script_80230A2C
  394:  	Return
  39C:  EndIf
  3A4:  ExecWait  $Script_8023083C
  3B0:  Return
  3B8:  End
}

#new:Script $Script_8023083C
{
    0:  Call  GetActorVar   ( .Actor:Self 00000000 *Var0 )
   18:  If  *Var0  <=  00000003
   28:  	ExecWait  $Script_80230A2C
   34:  	Return
   3C:  EndIf
   44:  Call  GetActorVar   ( .Actor:Self 00000002 *Var0 )
   5C:  If  *Var0  >=  00000006
   6C:  	Call  RandInt   ( 0000001E *Var0 )
   80:  	If  *Var0  <  00000014
   90:  		ExecWait  $Script_Shockwave3
   9C:  	Else
   A4:  		ExecWait  $Script_Thunderbolt3
   B0:  	EndIf
   B8:  	Return
   C0:  EndIf
   C8:  Call  RandInt   ( 00000064 *Var0 )
   DC:  If  *Var0  <  0000004B
   EC:  	Call  $Function_8021C974    ( *Var0 *Var1 )
  100:  	If  *Var0  >  00000000
  110:  		ExecWait  $Script_Shockwave3
  11C:  		Return
  124:  	EndIf
  12C:  	If  *Var1  >  00000000
  13C:  		ExecWait  $Script_Shockwave3
  148:  		Return
  150:  	EndIf
  158:  EndIf
  160:  Call  RandInt   ( 0000006E *Var0 )
  174:  If  *Var0  <  0000001E
  184:  	If  *Var0  <  00000014
  194:  		ExecWait  $Script_Shockwave3
  1A0:  	Else
  1A8:  		ExecWait  $Script_Thunderbolt3
  1B4:  	EndIf
  1BC:  	Return
  1C4:  EndIf
  1CC:  ExecWait  $Script_80230A2C
  1D8:  Return
  1E0:  Return
  1E8:  End
}

#new:Script $Script_80230A2C
{
    0:  Call  RandInt   ( 00000050 *Var0 )
   14:  If  *Var0  <  00000014
   24:  	Call  GetActorVar   ( .Actor:Self 00000005 *Var0 )
   3C:  	If  *Var0  >=  00000002
   4C:  		ExecWait  $Script_DisableJump3
   58:  		Return
   60:  	EndIf
   68:  EndIf
   70:  Call  RandInt   ( 0000003C *Var0 )
   84:  If  *Var0  <  00000014
   94:  	Call  GetActorVar   ( .Actor:Self 00000004 *Var0 )
   AC:  	If  *Var0  >=  00000002
   BC:  		ExecWait  $Script_ClawSwipe3
   C8:  		Return
   D0:  	EndIf
   D8:  EndIf
   E0:  ExecWait  $Script_FireBreath3
   EC:  Return
   F4:  End
}

#new:IntTable $IntTable_80230B28
{
	00000166 00000167 00000168
}

#new:IntTable $IntTable_80230B34
{
	00000049 0000004A 0000004B
}

#new:IntTable $IntTable_80230B40
{
	00000169 0000016A 0000016B
}

#new:IntTable $IntTable_80230B4C
{
	0000004C 0000004D 0000004E
}

#new:Script $Script_80230B58
{
    0:  Label  0
    C:  Call  GetActorVar   ( .Actor:Self 00000009 *VarA )
   24:  Switch  *VarA
   30:  	Case  ==  00000000
   3C:  	Case  ==  00000001
   48:  		Call  GetActorPos   ( .Actor:Player *Var1 *Var2 *Var3 )
   64:  		Set   *Var2  00000000
   74:  		Sub   *Var3  00000001
   84:  		Call  $Function_8021CCFC    ( *Var4 *Var5 )
   98:  		Call  MakeItemEntity        ( *Var4 *Var1 *Var2 *Var3 .ItemSpawnMode:Decoration 00000000 )
   BC:  		Call  SetActorVar   ( .Actor:Self 0000000A *Var0 )
   D4:  		Add   *Var1  00000007
   E4:  		Call  $Function_8021CA44    ( *Var0 *Var1 *Var2 *Var3 00000008 *Fixed[1.0] )
  108:  		Add   *Var1  0000000C
  118:  		Call  $Function_8021CA44    ( *Var0 *Var1 *Var2 *Var3 00000008 *Fixed[1.0] )
  13C:  		Add   *Var1  00000007
  14C:  		Call  $Function_8021CA44    ( *Var0 *Var1 *Var2 *Var3 00000005 *Fixed[1.0] )
  170:  		Call  SetActorVar   ( .Actor:Self 00000009 00000000 )
  188:  	Case  ==  00000002
  194:  		Call  ShowMessageBox    ( *Var5 0000003C )
  1A8:  		Call  RemoveItemEntity  ( *Var0 )
  1B8:  		Call  SetActorVar       ( .Actor:Self 00000009 00000003 )
  1D0:  		Return
  1D8:  EndSwitch
  1E0:  Wait  1`
  1EC:  Goto  0
  1F8:  Return
  200:  End
}

#new:Script $Script_DisableJump3
{
    0:  Call  SetActorVar       ( .Actor:Self 00000005 00000000 )
   18:  Call  SetTargetActor    ( .Actor:Self .Actor:Player )
   2C:  Call  GetStatusFlags    ( .Actor:Self *Var0 )
   40:  If  *Var0  !&  ~Flags:StatusFlags:Shrink % 80000
   50:  	Call  UseBattleCamPreset    ( 0000003F )
   60:  	Call  SetBattleCamZoom      (  300` )
   70:  	Call  SetBattleCamOffsetZ   (  54` )
   80:  	Call  BattleCamTargetActor  ( .Actor:Self )
   90:  	Call  MoveBattleCamOver     (  40` )
   A0:  	Call  8024ECF8  ( FFFFFFFF 00000001 00000000 )
   B8:  Else
   C0:  	Call  UseBattleCamPreset    ( 0000003F )
   D0:  	Call  SetBattleCamZoom      (  240` )
   E0:  	Call  SetBattleCamOffsetZ   (  21` )
   F0:  	Call  BattleCamTargetActor  ( .Actor:Self )
  100:  	Call  MoveBattleCamOver     (  40` )
  110:  	Call  8024ECF8  ( FFFFFFFF 00000001 00000000 )
  128:  EndIf
  130:  Call  SetAnimation  ( .Actor:Self 00000001 00810003 )
  148:  Call  SetGoalToTarget       ( .Actor:Self )
  158:  Call  AddGoalPos    ( .Actor:Self  60`  0`  0` )
  174:  Call  SetActorSpeed ( .Actor:Self *Fixed[3.0] )
  188:  Call  RunToGoal     ( .Actor:Self  0` .False )
  1A0:  Call  SetAnimation  ( .Actor:Self 00000001 00810002 )
  1B8:  Wait  15`
  1C4:  Call  SetAnimation  ( .Actor:Self 00000001 00810011 )
  1DC:  Wait  3`
  1E8:  Call  SetAnimation  ( .Actor:Self 00000001 00810012 )
  200:  Call  SetActorJumpGravity   ( .Actor:Self *Fixed[1.2] )
  214:  Call  EnemyTestTarget       ( .Actor:Self *VarA ~Flags:DamageType:0 00000000 00000001 00000010 )
  238:  Switch  *VarA
  244:  	CaseOR  ==  .HitResult:Miss % 6
  250:  	CaseOR  ==  .HitResult:Lucky % 5
  25C:  		Call  SetGoalToTarget   ( .Actor:Self )
  26C:  		Call  GetGoalPos        ( .Actor:Self *Var0 *Var1 *Var2 )
  288:  		Sub   *Var0  0000001E
  298:  		Set   *Var1  00000000
  2A8:  		Call  SetActorSounds    ( .Actor:Self .ActorSound:Jump 00000000 00000000 )
  2C4:  		Call  SetGoalPos        ( .Actor:Self *Var0 *Var1 *Var2 )
  2E0:  		Call  JumpToGoal        ( .Actor:Self  18` .False .True .False )
  300:  		Thread
  308:  			Call  $Function_8021B950    ( 00000050 0000000E )
  31C:  			Call  ShakeCam  ( .Cam:Battle 00000000  4` *Fixed[3.0] )
  338:  		EndThread
  340:  		Sub   *Var0  00000023
  350:  		Call  SetGoalPos    ( .Actor:Self *Var0 *Var1 *Var2 )
  36C:  		Call  JumpToGoal    ( .Actor:Self  14` .False .True .False )
  38C:  		Thread
  394:  			Call  $Function_8021B950    ( 00000050 0000000E )
  3A8:  			Call  ShakeCam  ( .Cam:Battle 00000000  4` *Fixed[2.0] )
  3C4:  		EndThread
  3CC:  		Call  SetAnimation  ( .Actor:Self 00000001 00810014 )
  3E4:  		Wait  3`
  3F0:  		Call  SetAnimation  ( .Actor:Self 00000001 00810002 )
  408:  		Wait  25`
  414:  		Call  UseBattleCamPreset    ( 00000002 )
  424:  		If  *VarA  ==  .HitResult:Lucky % 5
  434:  			Call  EnemyTestTarget   ( .Actor:Self *Var0 ~Flags:DamageType:TriggerLucky 00000000 00000000 00000000 )
  458:  		EndIf
  460:  		Call  SetActorSpeed ( .Actor:Self *Fixed[8.0] )
  474:  		Set   *Var1  00810003
  484:  		ExecWait  $Script_8022F334
  490:  		Return
  498:  	EndCaseGroup
  4A0:  	Default
  4A8:  EndSwitch
  4B0:  Call  SetGoalToTarget   ( .Actor:Self )
  4C0:  Call  JumpToGoal        ( .Actor:Self  15` .False .True .False )
  4E0:  Thread
  4E8:  	Call  ShakeCam  ( .Cam:Battle 00000000  4` *Fixed[3.0] )
  504:  EndThread
  50C:  Wait  2`
  518:  Call  SetGoalToTarget   ( .Actor:Self )
  528:  Call  SetAnimation      ( .Actor:Self 00000001 00810013 )
  540:  Call  GetPartEventFlags ( .Actor:Self 00000001 *Var1 )
  558:  If  *Var1  &  00080000
  568:  	Set   *Var0  00000010
  578:  Else
  580:  	Set   *Var0  00000008
  590:  EndIf
  598:  Call  GetStatusFlags    ( .Actor:Self *VarF )
  5AC:  If  *VarF  !&  ~Flags:StatusFlags:Shrink % 80000
  5BC:  	Call  80269EAC  ( 00000018 )
  5CC:  EndIf
  5D4:  Call  EnemyDamageTarget ( .Actor:Self *VarF ~Flags:DamageType:0 00000000 00000000 *Var0 00000020 )
  5FC:  Set   *Var0  FFFFFFFF
  60C:  Call  GetBattleFlags    ( *Var1 )
  61C:  If  *Var1  !&  80000000
  62C:  	Call  GetStatusFlags    ( .Actor:Player *Var1 )
  640:  	If  *Var1  !&  ~Flags:StatusFlags:Stone|RightOn % 40100000
  650:  		Call  GetStatusFlags    ( .Actor:Self *Var1 )
  664:  		If  *Var1  !&  ~Flags:StatusFlags:Shrink % 80000
  674:  			Call  $Function_8021CEB8    ( *Var0 )
  684:  		EndIf
  68C:  	EndIf
  694:  EndIf
  69C:  If  *Var0  !=  FFFFFFFF
  6AC:  	Call  LandJump      ( .Actor:Self )
  6BC:  	Call  $Function_8021B950    ( 00000050 0000000E )
  6D0:  	Call  PlaySoundAtActor      ( .Actor:Self 000020EA )
  6E4:  	Call  SetActorVar   ( .Actor:Self 00000009 00000001 )
  6FC:  	Exec  $Script_80230B58
  708:  	Call  GetActorPos   ( .Actor:Self *Var0 *Var1 *Var2 )
  724:  	Add   *Var0  00000034
  734:  	Set   *Var1  00000000
  744:  	Call  SetGoalPos    ( .Actor:Self *Var0 *Var1 *Var2 )
  760:  	Call  JumpToGoal    ( .Actor:Self  15` .False .True .False )
  780:  	Call  PlaySoundAtActor      ( .Actor:Self 000020EA )
  794:  	Thread
  79C:  		Call  $Function_8021B950    ( 00000050 0000000E )
  7B0:  		Call  ShakeCam  ( .Cam:Battle 00000000  4` *Fixed[3.0] )
  7CC:  	EndThread
  7D4:  	Add   *Var0  0000001E
  7E4:  	Call  SetGoalPos    ( .Actor:Self *Var0 *Var1 *Var2 )
  800:  	Call  JumpToGoal    ( .Actor:Self  10` .False .True .False )
  820:  	Thread
  828:  		Call  $Function_8021B950    ( 00000050 0000000E )
  83C:  		Call  ShakeCam  ( .Cam:Battle 00000000  3` *Fixed[2.0] )
  858:  	EndThread
  860:  	Call  SetAnimation  ( .Actor:Self 00000001 00810014 )
  878:  	Wait  3`
  884:  	Label  0
  890:  	Call  GetActorVar   ( .Actor:Self 00000009 *Var0 )
  8A8:  	If  *Var0  !=  00000000
  8B8:  		Wait  1`
  8C4:  		Goto  0
  8D0:  	EndIf
  8D8:  	Wait  8`
  8E4:  	Call  SetActorYaw   ( .Actor:Self  0` )
  8F8:  	Call  SetAnimation  ( .Actor:Self 00000001 00810003 )
  910:  	Call  GetActorVar   ( .Actor:Self 0000000A *Var0 )
  928:  	Call  $Function_8021CC5C    ( *Var0 *Var1 *Var2 *Var3 )
  944:  	Add   *Var1  00000026
  954:  	Call  SetActorSpeed ( .Actor:Self *Fixed[2.0] )
  968:  	Call  SetGoalPos    ( .Actor:Self *Var1 *Var2 *Var3 )
  984:  	Call  RunToGoal     ( .Actor:Self  0` .False )
  99C:  	Call  SetAnimation  ( .Actor:Self 00000001 00810002 )
  9B4:  	Wait  8`
  9C0:  	Call  SetAnimationRate  ( .Actor:Self 00000001 *Fixed[2.0] )
  9D8:  	Call  SetAnimation  ( .Actor:Self 00000001 0081001A )
  9F0:  	Wait  2`
  9FC:  	Call  GetActorVar   ( .Actor:Self 0000000A *Var0 )
  A14:  	Call  $Function_8021CC5C    ( *Var0 *Var1 *Var2 *Var3 )
  A30:  	Call  SetActorVar   ( .Actor:Self 00000009 00000002 )
  A48:  	Call  PlayEffect    ( ~FX:Firework:White *Var1 00000000 *Var3 *Fixed[0.75] 00000000 00000000 00000000 00000000 00000000 00000000 00000000 00000000 )
  A8C:  	Call  PlayEffect    ( ~FX:Steam:SmallOutward *Var1 00000000 *Var3 *Fixed[3.0] 00000000 00000000 00000000 00000000 00000000 00000000 00000000 00000000 )
  AD0:  	Call  PlaySoundAtActor  ( .Actor:Self 000020F6 )
  AE4:  	Wait  4`
  AF0:  	Call  SetAnimation  ( .Actor:Self 00000001 00810002 )
  B08:  	Call  SetAnimation  ( .Actor:Self 00000001 0081001A )
  B20:  	Wait  2`
  B2C:  	Call  PlayEffect    ( ~FX:Firework:White *Var1 00000000 *Var3 *Fixed[0.75] 00000000 00000000 00000000 00000000 00000000 00000000 00000000 00000000 )
  B70:  	Call  PlayEffect    ( ~FX:Steam:SmallOutward *Var1 00000000 *Var3 *Fixed[3.0] 00000000 00000000 00000000 00000000 00000000 00000000 00000000 00000000 )
  BB4:  	Call  PlaySoundAtActor  ( .Actor:Self 000020F6 )
  BC8:  	Wait  4`
  BD4:  	Call  SetAnimation  ( .Actor:Self 00000001 00810002 )
  BEC:  	Call  SetAnimation  ( .Actor:Self 00000001 0081001A )
  C04:  	Wait  2`
  C10:  	Call  PlayEffect    ( ~FX:Firework:White *Var1 00000000 *Var3 *Fixed[0.75] 00000000 00000000 00000000 00000000 00000000 00000000 00000000 00000000 )
  C54:  	Call  PlayEffect    ( ~FX:Steam:SmallOutward *Var1 00000000 *Var3 *Fixed[3.0] 00000000 00000000 00000000 00000000 00000000 00000000 00000000 00000000 )
  C98:  	Call  PlaySoundAtActor  ( .Actor:Self 000020F6 )
  CAC:  	Wait  20`
  CB8:  	Call  SetAnimation  ( .Actor:Self 00000001 00810007 )
  CD0:  	Wait  20`
  CDC:  	Call  SetAnimationRate  ( .Actor:Self 00000001 *Fixed[1.0] )
  CF4:  Else
  CFC:  	Call  GetBattleFlags    ( *Var1 )
  D0C:  	If  *Var1  !&  80000000
  D1C:  		Call  GetStatusFlags    ( .Actor:Player *Var1 )
  D30:  		If  *Var1  !&  ~Flags:StatusFlags:Stone % 100000
  D40:  			Call  GetStatusFlags    ( .Actor:Self *Var1 )
  D54:  			If  *Var1  !&  ~Flags:StatusFlags:Shrink % 80000
  D64:  				Call  LandJump  ( .Actor:Self )
  D74:  			EndIf
  D7C:  		EndIf
  D84:  	EndIf
  D8C:  	Call  $Function_8021B950    ( 00000050 0000000E )
  DA0:  	Call  GetActorPos       ( .Actor:Self *Var0 *Var1 *Var2 )
  DBC:  	Add   *Var0  00000028
  DCC:  	Set   *Var1  00000000
  DDC:  	Call  SetActorSounds    ( .Actor:Self .ActorSound:Jump 00000000 00000000 )
  DF8:  	Call  SetGoalPos        ( .Actor:Self *Var0 *Var1 *Var2 )
  E14:  	Call  JumpToGoal        ( .Actor:Self  18` .False .True .False )
  E34:  	Call  PlaySoundAtActor  ( .Actor:Self 000020EA )
  E48:  	Thread
  E50:  		Call  $Function_8021B950    ( 00000050 0000000E )
  E64:  		Call  ShakeCam  ( .Cam:Battle 00000000  4` *Fixed[3.0] )
  E80:  	EndThread
  E88:  	Call  SetAnimation  ( .Actor:Self 00000001 00810014 )
  EA0:  	Wait  3`
  EAC:  	Call  SetAnimation  ( .Actor:Self 00000001 00810002 )
  EC4:  	Wait  20`
  ED0:  EndIf
  ED8:  If  *VarF  ==  0000000A
  EE8:  	Return
  EF0:  EndIf
  EF8:  Call  UseBattleCamPreset    ( 00000002 )
  F08:  Call  SetActorSpeed ( .Actor:Self *Fixed[8.0] )
  F1C:  Set   *Var1  00810003
  F2C:  ExecWait  $Script_8022F334
  F38:  Return
  F40:  End
}

#new:Script $Script_80231CA8
{
    0:  Call  SetAnimation  ( .Actor:Self 00000001 0081000C )
   18:  Thread
   20:  	Wait  5`
   2C:  	Loop  00000004
   38:  		Call  $Function_8021B950    ( 00000050 0000000E )
   4C:  		Call  ShakeCam  ( .Cam:Battle 00000000  2` *Fixed[2.0] )
   68:  		Wait  4`
   74:  	EndLoop
   7C:  	Call  SetAnimation  ( .Actor:Self 00000001 00810002 )
   94:  EndThread
   9C:  Return
   A4:  End
}

#new:Script $Script_ClawSwipe3
{
    0:  Call  SetActorVar       ( .Actor:Self 00000004 00000000 )
   18:  Call  SetTargetActor    ( .Actor:Self .Actor:Player )
   2C:  Call  GetStatusFlags    ( .Actor:Self *Var0 )
   40:  If  *Var0  !&  ~Flags:StatusFlags:Shrink % 80000
   50:  	Call  UseBattleCamPreset    ( 0000003F )
   60:  	Call  SetBattleCamZoom      (  200` )
   70:  	Call  BattleCamTargetActor  ( .Actor:Self )
   80:  	Call  MoveBattleCamOver     (  40` )
   90:  	Call  8024ECF8  ( FFFFFFFF 00000001 00000000 )
   A8:  Else
   B0:  	Call  UseBattleCamPreset    ( 0000003F )
   C0:  	Call  SetBattleCamZoom      (  160` )
   D0:  	Call  SetBattleCamOffsetZ   (  5` )
   E0:  	Call  BattleCamTargetActor  ( .Actor:Self )
   F0:  	Call  MoveBattleCamOver     (  40` )
  100:  	Call  8024ECF8  ( FFFFFFFF 00000001 00000000 )
  118:  EndIf
  120:  Call  SetAnimation      ( .Actor:Self 00000001 00810003 )
  138:  Call  SetGoalToTarget   ( .Actor:Self )
  148:  Call  GetStatusFlags    ( .Actor:Self *Var0 )
  15C:  If  *Var0  !&  ~Flags:StatusFlags:Shrink % 80000
  16C:  	Call  AddGoalPos    ( .Actor:Self  60`  0`  0` )
  188:  Else
  190:  	Call  AddGoalPos    ( .Actor:Self  24`  0`  0` )
  1AC:  EndIf
  1B4:  Call  SetActorSpeed ( .Actor:Self *Fixed[3.0] )
  1C8:  Call  RunToGoal     ( .Actor:Self  0` .False )
  1E0:  Call  SetAnimation  ( .Actor:Self 00000001 00810009 )
  1F8:  Wait  25`
  204:  Call  SetAnimation  ( .Actor:Self 00000001 00810015 )
  21C:  Call  PlaySoundAtActor  ( .Actor:Self 0000035E )
  230:  Wait  3`
  23C:  Call  EnemyTestTarget   ( .Actor:Self *VarA ~Flags:DamageType:0 00000000 00000001 00000010 )
  260:  Switch  *VarA
  26C:  	CaseOR  ==  .HitResult:Miss % 6
  278:  	CaseOR  ==  .HitResult:Lucky % 5
  284:  		Wait  20`
  290:  		Call  UseBattleCamPreset    ( 00000002 )
  2A0:  		Call  MoveBattleCamOver     (  20` )
  2B0:  		ExecWait  $Script_80231CA8
  2BC:  		If  *VarA  ==  00000005
  2CC:  			Call  EnemyTestTarget   ( .Actor:Self *Var0 ~Flags:DamageType:TriggerLucky 00000000 00000000 00000000 )
  2F0:  			Wait  30`
  2FC:  		Else
  304:  			Wait  30`
  310:  		EndIf
  318:  		Call  SetActorSpeed ( .Actor:Self *Fixed[8.0] )
  32C:  		Set   *Var1  00810003
  33C:  		ExecWait  $Script_8022F334
  348:  		Return
  350:  	EndCaseGroup
  358:  	Default
  360:  EndSwitch
  368:  Wait  2`
  374:  Call  SetGoalToTarget   ( .Actor:Self )
  384:  Call  GetPartEventFlags ( .Actor:Self 00000001 *Var0 )
  39C:  If  *Var0  &  00080000
  3AC:  	Set   *Var0  00000010
  3BC:  	Call  80269EAC  ( 0000000C )
  3CC:  	Call  EnemyDamageTarget ( .Actor:Self *VarF ~Flags:DamageType:0 00000000 ~DebuffType:Poison:3:100` *Var0 00000020 )
  3F4:  Else
  3FC:  	Set   *Var0  00000008
  40C:  	Call  80269EAC  ( 0000000C )
  41C:  	Call  EnemyDamageTarget ( .Actor:Self *VarF ~Flags:DamageType:0 00000000 ~DebuffType:Poison:3:100` *Var0 00000020 )
  444:  EndIf
  44C:  Switch  *VarF
  458:  	CaseOR  ==  .HitResult:Hit % 0
  464:  	CaseOR  ==  .HitResult:QuakeImmune % 2
  470:  	CaseOR  ==  0000000A % A
  47C:  		Wait  30`
  488:  		If  *VarF  ==  0000000A % A
  498:  			Return
  4A0:  		EndIf
  4A8:  		Call  UseBattleCamPreset    ( 00000002 )
  4B8:  		Call  MoveBattleCamOver     (  20` )
  4C8:  		Call  SetActorSpeed ( .Actor:Self *Fixed[8.0] )
  4DC:  		Set   *Var1  00810003
  4EC:  		ExecWait  $Script_8022F334
  4F8:  	EndCaseGroup
  500:  EndSwitch
  508:  Return
  510:  End
}

#new:Script $Script_Shockwave3
{
    0:  Call  SetActorVar       ( .Actor:Self 00000002 00000000 )
   18:  Call  SetTargetActor    ( .Actor:Self .Actor:Player )
   2C:  Call  SetGoalToTarget   ( .Actor:Self )
   3C:  Call  GetStatusFlags    ( .Actor:Self *Var3 )
   50:  If  *Var3  !&  ~Flags:StatusFlags:Shrink % 80000
   60:  	Call  UseBattleCamPreset    ( 00000013 )
   70:  	Call  GetActorPos   ( .Actor:Self *Var0 *Var1 *Var2 )
   8C:  	Sub   *Var0  00000018
   9C:  	Add   *Var1  00000061
   AC:  	Call  SetBattleCamTarget    ( *Var0 *Var1 *Var2 )
   C4:  	Call  SetBattleCamZoom      (  420` )
   D4:  	Call  SetBattleCamOffsetZ   (  0` )
   E4:  	Call  MoveBattleCamOver     (  40` )
   F4:  Else
   FC:  	Call  UseBattleCamPreset    ( 00000013 )
  10C:  	Call  GetActorPos   ( .Actor:Self *Var0 *Var1 *Var2 )
  128:  	Sub   *Var0  00000009
  138:  	Add   *Var1  00000027
  148:  	Call  SetBattleCamTarget    ( *Var0 *Var1 *Var2 )
  160:  	Call  SetBattleCamZoom      (  375` )
  170:  	Call  SetBattleCamOffsetZ   (  0` )
  180:  	Call  MoveBattleCamOver     (  40` )
  190:  EndIf
  198:  Call  SetAnimation      ( .Actor:Self 00000001 0081000F )
  1B0:  Wait  10`
  1BC:  Call  $Function_8021C004 ( )
  1C8:  Call  PlaySoundAtActor  ( .Actor:Self 00002121 )
  1DC:  Call  GetStatusFlags    ( .Actor:Self *Var0 )
  1F0:  If  *Var0  !&  ~Flags:StatusFlags:Shrink % 80000
  200:  	Call  GetActorPos   ( .Actor:Self *Var0 *Var1 *Var2 )
  21C:  	Add   *Var0  00000016
  22C:  	Sub   *Var2  00000003
  23C:  	Call  PlayEffect    ( ~FX:LightRays:SharpA *Var0 00000087 *Var2 *Fixed[1.0] *VarF 00000000 00000000 00000000 00000000 00000000 00000000 00000000 )
  280:  	Sub   *Var2  00000003
  290:  	Call  PlayEffect    ( 0000003C 00000002 *Var0 00000087 *Var2 *Fixed[1.0] *VarE 00000000 00000000 00000000 00000000 00000000 00000000 00000000 )
  2D4:  Else
  2DC:  	Call  GetActorPos   ( .Actor:Self *Var0 *Var1 *Var2 )
  2F8:  	Add   *Var0  00000009
  308:  	Sub   *Var2  00000003
  318:  	Call  PlayEffect    ( ~FX:LightRays:SharpA *Var0 00000036 *Var2 *Fixed[0.4] *VarF 00000000 00000000 00000000 00000000 00000000 00000000 00000000 )
  35C:  	Sub   *Var2  00000003
  36C:  	Call  PlayEffect    ( 0000003C 00000002 *Var0 00000036 *Var2 *Fixed[0.4] *VarE 00000000 00000000 00000000 00000000 00000000 00000000 00000000 )
  3B0:  EndIf
  3B8:  Wait  25`
  3C4:  Call  UseBattleCamPreset    ( 00000013 )
  3D4:  Call  SetBattleCamTarget    (  -45`  60`  0` )
  3EC:  Call  SetBattleCamZoom  (  530` )
  3FC:  Call  SetBattleCamOffsetZ   (  0` )
  40C:  Call  MoveBattleCamOver (  80` )
  41C:  Wait  10`
  428:  Call  RemoveEffect      ( *VarF )
  438:  Call  RemoveEffect      ( *VarE )
  448:  Call  PlaySoundAtActor  ( .Actor:Self 00002122 )
  45C:  Call  GetStatusFlags    ( .Actor:Self *Var0 )
  470:  If  *Var0  !&  ~Flags:StatusFlags:Shrink % 80000
  480:  	Call  GetActorPos   ( .Actor:Self *Var0 *Var1 *Var2 )
  49C:  	Add   *Var0  00000013
  4AC:  	Set   *Var1  00000037
  4BC:  	Call  PlayEffect    ( ~FX:EnergyShockwave *Var0 *Var1 *Var2 *Fixed[1.0] 0000003C 00000000 00000000 00000000 00000000 00000000 00000000 00000000 )
  500:  Else
  508:  	Call  GetActorPos   ( .Actor:Self *Var0 *Var1 *Var2 )
  524:  	Add   *Var0  00000007
  534:  	Set   *Var1  00000016
  544:  	Call  PlayEffect    ( ~FX:EnergyShockwave *Var0 *Var1 *Var2 *Fixed[1.0] 0000003C 00000000 00000000 00000000 00000000 00000000 00000000 00000000 )
  588:  EndIf
  590:  Thread
  598:  	Call  $Function_8021C09C ( )
  5A4:  EndThread
  5AC:  Wait  8`
  5B8:  Call  SetGoalToTarget   ( .Actor:Self )
  5C8:  Call  EnemyTestTarget   ( .Actor:Self *VarA ~Flags:DamageType:0 00000000 00000001 00000010 )
  5EC:  Switch  *VarA
  5F8:  	CaseOR  ==  .HitResult:Miss % 6
  604:  	CaseOR  ==  .HitResult:Lucky % 5
  610:  		Call  SetTargetActor    ( .Actor:Self .Actor:Partner )
  624:  		Call  EnemyTestTarget   ( .Actor:Self *VarB ~Flags:DamageType:0 00000000 00000001 00000010 )
  648:  		Switch  *VarB
  654:  			Case  ==  .HitResult:Miss % 6
  660:  				Call  SetAnimation  ( .Actor:Self 00000001 00810002 )
  678:  				Wait  30`
  684:  				Return
  68C:  			Default
  694:  				Wait  2`
  6A0:  				If  *VarA  ==  .HitResult:Lucky % 5
  6B0:  					ExecWait  $Script_80231CA8
  6BC:  					Call  SetTargetActor    ( .Actor:Self .Actor:Player )
  6D0:  					Call  EnemyTestTarget   ( .Actor:Self *Var0 ~Flags:DamageType:TriggerLucky 00000000 00000000 00000000 )
  6F4:  				EndIf
  6FC:  				Wait  2`
  708:  				Call  SetTargetActor    ( .Actor:Self .Actor:Partner )
  71C:  				Call  SetGoalToTarget   ( .Actor:Self )
  72C:  				If  *Var0  &  00040000 % 40000
  73C:  					Set   *Var1  00000003
  74C:  				Else
  754:  					Set   *Var1  00000003
  764:  				EndIf
  76C:  				Call  EnemyDamageTarget ( .Actor:Self *Var0 ~Flags:DamageType:NoOtherDamagePopups|Magic|Cosmic 0000FFFF 00000000 *Var1 00000020 )
  794:  				Call  RemovePlayerBuffs ( ~Flags:PlayerBuff:PartnerGlowing )
  7A4:  				If  *VarA  !=  00000005
  7B4:  					Call  SetAnimation  ( .Actor:Self 00000001 00810002 )
  7CC:  				EndIf
  7D4:  				Wait  30`
  7E0:  				Return
  7E8:  		EndSwitch
  7F0:  	EndCaseGroup
  7F8:  	Default
  800:  EndSwitch
  808:  Call  8026BF48  ( 00000001 )
  818:  Thread
  820:  	Wait  4`
  82C:  	Call  SetTargetActor    ( .Actor:Self .Actor:Partner )
  840:  	Call  SetGoalToTarget   ( .Actor:Self )
  850:  	If  *Var0  &  00040000 % 40000
  860:  		Set   *Var1  00000003
  870:  	Else
  878:  		Set   *Var1  00000003
  888:  	EndIf
  890:  	Call  EnemyDamageTarget ( .Actor:Self *Var0 ~Flags:DamageType:NoOtherDamagePopups|Magic|Cosmic 0000FFFF 00000000 *Var1 00000020 )
  8B8:  	Call  8026BF48  ( 00000000 )
  8C8:  EndThread
  8D0:  Wait  2`
  8DC:  Call  SetGoalToTarget   ( .Actor:Self )
  8EC:  If  *Var0  &  00040000 % 40000
  8FC:  	Set   *Var1  00000006
  90C:  Else
  914:  	Set   *Var1  00000006
  924:  EndIf
  92C:  Call  EnemyDamageTarget ( .Actor:Self *VarF ~Flags:DamageType:NoOtherDamagePopups|Magic|Cosmic 0000FFFF 00000000 *Var1 00000020 )
  954:  Call  RemovePlayerBuffs ( ~Flags:PlayerBuff:All )
  964:  Switch  *VarF
  970:  	CaseOR  ==  .HitResult:Hit % 0
  97C:  	CaseOR  ==  .HitResult:QuakeImmune % 2
  988:  	CaseOR  ==  0000000A % A
  994:  		Call  SetAnimation  ( .Actor:Self 00000001 00810002 )
  9AC:  		Wait  15`
  9B8:  		If  *VarF  ==  0000000A % A
  9C8:  			Return
  9D0:  		EndIf
  9D8:  	EndCaseGroup
  9E0:  EndSwitch
  9E8:  Return
  9F0:  End
}

#new:Script $Script_FireBreath3
{
    0:  Call  SetTargetActor    ( .Actor:Self .Actor:Player )
   14:  Call  SetGoalToTarget   ( .Actor:Self )
   24:  Call  GetStatusFlags    ( .Actor:Self *Var0 )
   38:  If  *Var0  !&  ~Flags:StatusFlags:Shrink % 80000
   48:  	Call  UseBattleCamPreset    ( 00000013 )
   58:  	Call  GetActorPos   ( .Actor:Self *Var0 *Var1 *Var2 )
   74:  	Sub   *Var0  0000001E
   84:  	Add   *Var1  00000051
   94:  	Call  SetBattleCamTarget    ( *Var0 *Var1 *Var2 )
   AC:  	Call  SetBattleCamZoom      (  400` )
   BC:  	Call  MoveBattleCamOver     (  40` )
   CC:  Else
   D4:  	Call  UseBattleCamPreset    ( 00000013 )
   E4:  	Call  GetActorPos   ( .Actor:Self *Var0 *Var1 *Var2 )
  100:  	Sub   *Var0  0000001E
  110:  	Add   *Var1  00000038
  120:  	Call  SetBattleCamTarget    ( *Var0 *Var1 *Var2 )
  138:  	Call  SetBattleCamZoom      (  350` )
  148:  	Call  MoveBattleCamOver     (  40` )
  158:  EndIf
  160:  Call  SetAnimation      ( .Actor:Self 00000001 00810016 )
  178:  Wait  35`
  184:  Call  SetAnimation      ( .Actor:Self 00000001 00810017 )
  19C:  Call  UseBattleCamPreset    ( 00000002 )
  1AC:  Call  MoveBattleCamOver (  55` )
  1BC:  Wait  10`
  1C8:  Call  GetPartEventFlags ( .Actor:Self 00000001 *Var3 )
  1E0:  Call  GetStatusFlags    ( .Actor:Self *Var4 )
  1F4:  Call  GetActorPos       ( .Actor:Self *Var0 *Var1 *Var2 )
  210:  If  *Var3  &  00080000
  220:  	If  *Var4  !&  ~Flags:StatusFlags:Shrink % 80000
  230:  		Sub   *Var0  00000046
  240:  		Add   *Var1  00000023
  250:  	Else
  258:  		Sub   *Var0  0000001C
  268:  		Add   *Var1  0000000E
  278:  	EndIf
  280:  Else
  288:  	If  *Var4  !&  ~Flags:StatusFlags:Shrink % 80000
  298:  		Sub   *Var0  0000004B
  2A8:  		Add   *Var1  00000031
  2B8:  	Else
  2C0:  		Sub   *Var0  0000001E
  2D0:  		Add   *Var1  00000013
  2E0:  	EndIf
  2E8:  EndIf
  2F0:  Add   *Var2  0000000A
  300:  Call  SetGoalToTarget   ( .Actor:Self )
  310:  Call  GetGoalPos        ( .Actor:Self *Var3 *Var4 *Var5 )
  32C:  Sub   *Var3  00000028
  33C:  Set   *Var4  00000014
  34C:  Call  GetPartEventFlags ( .Actor:Self 00000001 *Var6 )
  364:  If  *Var6  &  00080000
  374:  	Call  PlayEffect    ( ~FX:FireBreath:Large *Var0 *Var1 *Var2 *Var3 *Var4 *Var5 00000032 00000001 00000018 00000000 00000000 00000000 )
  3B8:  Else
  3C0:  	Call  GetStatusFlags    ( .Actor:Self *Var7 )
  3D4:  	If  *Var7  !&  ~Flags:StatusFlags:Shrink % 80000
  3E4:  		Add   *Var0  0000000F
  3F4:  	Else
  3FC:  		Add   *Var0  00000006
  40C:  	EndIf
  414:  	Sub   *Var3  0000000A
  424:  	Call  PlayEffect    ( ~FX:FireBreath:Tiny *Var0 *Var1 *Var2 *Var3 *Var4 *Var5 00000032 00000001 00000018 00000000 00000000 00000000 )
  468:  	Call  $Function_8021CF54    ( *VarF )
  478:  EndIf
  480:  Thread
  488:  	Call  $Function_8021B950    ( 00000032 00000094 )
  49C:  	Call  PlaySound ( 000003BD )
  4AC:  	Wait  70`
  4B8:  	Call  PlaySound ( 000007BD )
  4C8:  EndThread
  4D0:  Wait  10`
  4DC:  Call  SetGoalToTarget   ( .Actor:Self )
  4EC:  Call  EnemyTestTarget   ( .Actor:Self *VarA ~Flags:DamageType:0 00000000 00000001 00000010 )
  510:  Switch  *VarA
  51C:  	CaseOR  ==  .HitResult:Miss % 6
  528:  	CaseOR  ==  .HitResult:Lucky % 5
  534:  		Wait  10`
  540:  		Call  SetAnimation  ( .Actor:Self 00000001 00810018 )
  558:  		Wait  30`
  564:  		Call  SetAnimation  ( .Actor:Self 00000001 00810019 )
  57C:  		Wait  15`
  588:  		Call  SetAnimation  ( .Actor:Self 00000001 00810002 )
  5A0:  		Wait  30`
  5AC:  		ExecWait  $Script_80231CA8
  5B8:  		If  *VarA  ==  00000005
  5C8:  			Call  EnemyTestTarget   ( .Actor:Self *Var0 ~Flags:DamageType:TriggerLucky 00000000 00000000 00000000 )
  5EC:  		EndIf
  5F4:  		Wait  30`
  600:  		Return
  608:  	EndCaseGroup
  610:  	Default
  618:  EndSwitch
  620:  Wait  2`
  62C:  Call  SetGoalToTarget   ( .Actor:Self )
  63C:  Call  GetPartEventFlags ( .Actor:Self 00000001 *Var0 )
  654:  If  *Var0  &  00080000
  664:  	Set   *Var0  00000014
  674:  Else
  67C:  	Set   *Var0  0000000A
  68C:  EndIf
  694:  Call  EnemyDamageTarget ( .Actor:Self *VarF ~Flags:DamageType:Fire 0000FFFF 00000000 *Var0 00000020 )
  6BC:  Switch  *VarF
  6C8:  	CaseOR  ==  .HitResult:Hit % 0
  6D4:  	CaseOR  ==  .HitResult:QuakeImmune % 2
  6E0:  	CaseOR  ==  0000000A % A
  6EC:  		Wait  10`
  6F8:  		Call  SetAnimation  ( .Actor:Self 00000001 00810018 )
  710:  		Wait  30`
  71C:  		Call  SetAnimation  ( .Actor:Self 00000001 00810019 )
  734:  		Wait  15`
  740:  		Call  SetAnimation  ( .Actor:Self 00000001 00810002 )
  758:  		Wait  30`
  764:  		If  *VarF  ==  0000000A % A
  774:  			Return
  77C:  		EndIf
  784:  	EndCaseGroup
  78C:  EndSwitch
  794:  Return
  79C:  End
}

#new:Script $Script_80233408
{
    0:  Call  SetAnimation  ( .Actor:Self *Var0 *Var1 )
   18:  Call  80269E80      ( *Var3 )
   28:  Switch  *Var3
   34:  	Case  ==  00000009
   40:  		Call  GetOriginalActorType  ( .Actor:Self *Var7 )
   54:  		Switch  *Var7
   60:  			CaseOR  ==  00000012
   6C:  			CaseOR  ==  00000030
   78:  			EndCaseGroup
   80:  			Default
   88:  				Call  GetActorPos   ( .Actor:Self *Var4 *Var5 *Var6 )
   A4:  				Call  SetActorJumpGravity   ( .Actor:Self *Fixed[0.01] )
   B8:  				Add   *Var5  00000037
   C8:  				Call  SetGoalPos    ( .Actor:Self *Var4 *Var5 *Var6 )
   E4:  				Call  JumpToGoal    ( .Actor:Self  8` .False .False .False )
  104:  		EndSwitch
  10C:  		Set   *Var7  00000000
  11C:  		Loop  0000001E
  128:  			Add   *Var7  00000030
  138:  			Call  SetActorYaw   ( .Actor:Self *Var7 )
  14C:  			Wait  1`
  158:  		EndLoop
  160:  		Call  GetOriginalActorType  ( .Actor:Self *Var7 )
  174:  		Switch  *Var7
  180:  			CaseOR  ==  00000012
  18C:  			CaseOR  ==  00000030
  198:  				Wait  30`
  1A4:  			EndCaseGroup
  1AC:  			Default
  1B4:  				Sub   *Var5  00000037
  1C4:  				Call  SetActorJumpGravity   ( .Actor:Self *Fixed[0.8] )
  1D8:  				If  *Var5  ==  00000000
  1E8:  					Call  SetGoalPos    ( .Actor:Self *Var4 *Var5 *Var6 )
  204:  					Call  JumpToGoal    ( .Actor:Self  15` .False .True .False )
  224:  					Call  SetGoalPos    ( .Actor:Self *Var4 *Var5 *Var6 )
  240:  					Call  JumpToGoal    ( .Actor:Self  10` .False .True .False )
  260:  					Call  SetGoalPos    ( .Actor:Self *Var4 *Var5 *Var6 )
  27C:  					Call  JumpToGoal    ( .Actor:Self  5` .False .True .False )
  29C:  				Else
  2A4:  					Call  SetGoalPos    ( .Actor:Self *Var4 *Var5 *Var6 )
  2C0:  					Call  JumpToGoal    ( .Actor:Self  15` .False .False .False )
  2E0:  					Call  SetGoalPos    ( .Actor:Self *Var4 *Var5 *Var6 )
  2FC:  					Call  JumpToGoal    ( .Actor:Self  10` .False .False .False )
  31C:  					Call  SetGoalPos    ( .Actor:Self *Var4 *Var5 *Var6 )
  338:  					Call  JumpToGoal    ( .Actor:Self  5` .False .False .False )
  358:  				EndIf
  360:  		EndSwitch
  368:  	Default
  370:  		Wait  20`
  37C:  EndSwitch
  384:  If  *Var2  !=  FFFFFFFF
  394:  	Call  SetAnimation  ( .Actor:Self *Var0 *Var2 )
  3AC:  EndIf
  3B4:  Wait  10`
  3C0:  Call  GetLastEvent  ( .Actor:Self *Var1 )
  3D4:  Switch  *Var1
  3E0:  	Case  ==  .Event:BurnHit % E
  3EC:  		Call  GetPartEventFlags ( .Actor:Self *Var0 *Var1 )
  404:  		If  *Var1  !&  00000202
  414:  			Call  GetActorPos       ( .Actor:Self *Var0 *Var1 *Var2 )
  430:  			Call  GetActorSize      ( .Actor:Self *Var3 *Var4 )
  448:  			Call  GetStatusFlags    ( .Actor:Self *Var5 )
  45C:  			If  *Var5  &  ~Flags:StatusFlags:Shrink % 80000
  46C:  				MulF  *Var3  *Fixed[0.4]
  47C:  				MulF  *Var4  *Fixed[0.4]
  48C:  			EndIf
  494:  			DivF  *Var3  *Fixed[2.0]
  4A4:  			Call  GetActorFlags ( .Actor:Self *Var5 )
  4B8:  			If  *Var5  &  00000800
  4C8:  				SubF  *Var1  *Var3
  4D8:  			Else
  4E0:  				AddF  *Var1  *Var3
  4F0:  			EndIf
  4F8:  			AddF  *Var2  *Fixed[5.0]
  508:  			DivF  *Var3  *Fixed[10.0]
  518:  			Call  GetStatusFlags    ( .Actor:Self *Var5 )
  52C:  			If  *Var5  &  ~Flags:StatusFlags:Shrink % 80000
  53C:  				MulF  *Var3  *Fixed[0.4]
  54C:  				If  *Var3  <  00000001
  55C:  					SetF  *Var3  *Fixed[1.0]
  56C:  				EndIf
  574:  			EndIf
  57C:  			Call  PlayEffect    ( ~FX:SmokeBurst:Black *Var0 *Var1 *Var2 *Var3 0000000A 00000000 00000000 00000000 00000000 00000000 00000000 00000000 )
  5C0:  		EndIf
  5C8:  	Case  ==  .Event:BurnDeath % 24
  5D4:  EndSwitch
  5DC:  Return
  5E4:  End
}

#new:Script $Script_Thunderbolt3
{
    0:  Call  SetTargetActor    ( .Actor:Self .Actor:Player )
   14:  Call  UseBattleCamPreset    ( 0000000D )
   24:  Call  BattleCamTargetActor  ( .Actor:Self )
   34:  Call  MoveBattleCamOver (  30` )
   44:  Call  UseBattleCamPreset    ( 00000002 )
   54:  Call  MoveBattleCamOver (  30` )
   64:  Call  PlaySoundAtActor  ( .Actor:Self 000003EF )
   78:  Call  SetAnimation      ( .Actor:Self 00000001 0081000F )
   90:  Call  $Function_8021C004 ( )
   9C:  Call  GetStatusFlags    ( .Actor:Self *Var0 )
   B0:  If  *Var0  !&  ~Flags:StatusFlags:Shrink % 80000
   C0:  	Call  GetActorPos   ( .Actor:Self *Var0 *Var1 *Var2 )
   DC:  	Add   *Var1  00000036
   EC:  	Sub   *Var2  00000003
   FC:  	Call  PlayEffect    ( ~FX:EnergyIn:YellowPoints *Var0 *Var1 *Var2 *Fixed[1.5] 00000032 00000000 00000000 00000000 00000000 00000000 00000000 00000000 )
  140:  	Wait  50`
  14C:  	Call  GetActorPos   ( .Actor:Self *Var0 *Var1 *Var2 )
  168:  	Add   *Var0  00000016
  178:  	Sub   *Var2  00000003
  188:  	Call  PlayEffect    ( ~FX:LightRays:SharpA *Var0 00000087 *Var2 *Fixed[1.5] *VarF 00000000 00000000 00000000 00000000 00000000 00000000 00000000 )
  1CC:  	Call  PlaySoundAtActor  ( .Actor:Self 00002121 )
  1E0:  	Sub   *Var2  00000003
  1F0:  	Call  PlayEffect    ( 0000003C 00000002 *Var0 00000087 *Var2 *Fixed[1.5] *VarE 00000000 00000000 00000000 00000000 00000000 00000000 00000000 )
  234:  	Wait  30`
  240:  	Call  RemoveEffect  ( *VarF )
  250:  	Call  RemoveEffect  ( *VarE )
  260:  Else
  268:  	Call  GetActorPos   ( .Actor:Self *Var0 *Var1 *Var2 )
  284:  	Add   *Var1  00000015
  294:  	Sub   *Var2  00000003
  2A4:  	Call  PlayEffect    ( ~FX:EnergyIn:YellowPoints *Var0 *Var1 *Var2 *Fixed[0.6] 00000032 00000000 00000000 00000000 00000000 00000000 00000000 00000000 )
  2E8:  	Wait  50`
  2F4:  	Call  GetActorPos   ( .Actor:Self *Var0 *Var1 *Var2 )
  310:  	Add   *Var0  00000009
  320:  	Sub   *Var2  00000003
  330:  	Call  PlayEffect    ( ~FX:LightRays:SharpA *Var0 00000036 *Var2 *Fixed[0.6] *VarF 00000000 00000000 00000000 00000000 00000000 00000000 00000000 )
  374:  	Call  PlaySoundAtActor  ( .Actor:Self 00002121 )
  388:  	Sub   *Var2  00000003
  398:  	Call  PlayEffect    ( 0000003C 00000002 *Var0 00000036 *Var2 *Fixed[0.6] *VarE 00000000 00000000 00000000 00000000 00000000 00000000 00000000 )
  3DC:  	Wait  30`
  3E8:  	Call  RemoveEffect  ( *VarF )
  3F8:  	Call  RemoveEffect  ( *VarE )
  408:  EndIf
  410:  Call  PlaySoundAtActor  ( .Actor:Self 00002127 )
  424:  Call  SetGoalToTarget   ( .Actor:Self )
  434:  Thread
  43C:  	Call  GetGoalPos    ( .Actor:Self *Var0 00000000 *Var1 )
  458:  	Call  $Function_8021CFC0    ( *Var0 *Var1 )
  46C:  EndThread
  474:  Call  EnemyTestTarget   ( .Actor:Self *VarA ~Flags:DamageType:0 00000000 00000001 00000010 )
  498:  Switch  *VarA
  4A4:  	CaseOR  ==  .HitResult:Miss % 6
  4B0:  	CaseOR  ==  .HitResult:Lucky % 5
  4BC:  		Wait  10`
  4C8:  		If  *VarA  ==  .HitResult:Lucky % 5
  4D8:  			Call  EnemyTestTarget   ( .Actor:Self *Var0 ~Flags:DamageType:TriggerLucky 00000000 00000000 00000000 )
  4FC:  			Wait  20`
  508:  			Call  $Function_8021C09C ( )
  514:  		Else
  51C:  			Wait  20`
  528:  			Call  $Function_8021C09C ( )
  534:  		EndIf
  53C:  		Call  SetActorSpeed ( .Actor:Self *Fixed[5.0] )
  550:  		Set   *Var1  00810003
  560:  		ExecWait  $Script_8022F334
  56C:  		Return
  574:  	EndCaseGroup
  57C:  	Default
  584:  EndSwitch
  58C:  Wait  5`
  598:  Call  SetGoalToTarget   ( .Actor:Self )
  5A8:  Call  GetPartEventFlags ( .Actor:Self 00000001 *Var0 )
  5C0:  If  *Var0  &  00080000
  5D0:  	Set   *Var0  00000014
  5E0:  	Call  EnemyDamageTarget ( .Actor:Self *VarF ~Flags:DamageType:NoContact|Electric 00000000 00000000 *Var0 00000020 )
  608:  Else
  610:  	Set   *Var0  0000000A
  620:  	Call  EnemyDamageTarget ( .Actor:Self *VarF ~Flags:DamageType:NoContact|Electric 00000000 00000000 *Var0 00000020 )
  648:  EndIf
  650:  Switch  *VarF
  65C:  	CaseOR  ==  .HitResult:Hit % 0
  668:  	CaseOR  ==  .HitResult:QuakeImmune % 2
  674:  	CaseOR  ==  0000000A % A
  680:  		Wait  30`
  68C:  		Call  $Function_8021C09C ( )
  698:  		If  *VarF  ==  0000000A % A
  6A8:  			Return
  6B0:  		EndIf
  6B8:  		Call  SetActorSpeed ( .Actor:Self *Fixed[5.0] )
  6CC:  		Set   *Var1  00810003
  6DC:  		ExecWait  $Script_8022F334
  6E8:  	EndCaseGroup
  6F0:  EndSwitch
  6F8:  Return
  700:  End
}

PADDING: 802340FC to 80234100 (006BB2FC to 006BB300)
00000000

#new:Script $Script_80234100
{
    0:  Set   *VarA  *Var0
   10:  Call  SetTexPanner  ( *VarA 00000001 )
   24:  Set   *Var0  00000000
   34:  Set   *Var1  00000000
   44:  Loop
   50:  	Call  SetTexPanOffset   ( 00000001 00000000 *Var0 *Var1 )
   6C:  	Add   *Var0  00008000
   7C:  	Add   *Var1  00000000
   8C:  	Wait  5`
   98:  EndLoop
   A0:  Return
   A8:  End
}

#new:Script $Script_BeforeBattle_802341B0
{
    0:  Call  SetSpriteShading  ( FFFFFFFF )
   10:  Call  SetCamBGColor     ( .Cam:Battle  0`  0`  0` )
   2C:  Call  SetGroupEnabled   ( ~Model:kpa_bt01:switch 00000000 )
   40:  Thread
   48:  	Set   *Var0  00000025
   58:  	Exec  $Script_80234100
   64:  	Wait  5`
   70:  	Set   *Var0  00000027
   80:  	Exec  $Script_80234100
   8C:  EndThread
   94:  Return
   9C:  End
}

#new:Script $Script_AfterBattle_80234254
{
    0:  Return
    8:  End
}

#new:ForegroundModelList $ForegroundModelList_80234264
{
	~Model:kpa_bt01:o383
	~Model:kpa_bt01:o382
	~Model:kpa_bt01:o381
	00000000
}

#new:Stage $Stage_80234274
{
	$ASCII_802348A0  % kpa_tex
	$ASCII_80234890  % kpa_bt01_shape
	$ASCII_80234880  % kpa_bt01_hit
	$Script_BeforeBattle_802341B0
	$Script_AfterBattle_80234254
	00000000
	$ForegroundModelList_80234264
	00000000
	00000000
	00000000
}

PADDING: 8023429C to 802342A0 (006BB49C to 006BB4A0)
00000000

#new:Script $Script_BeforeBattle_802342A0
{
    0:  Call  SetSpriteShading  ( FFFFFFFF )
   10:  Return
   18:  End
}

#new:Script $Script_AfterBattle_802342C0
{
    0:  Return
    8:  End
}

#new:ForegroundModelList $ForegroundModelList_802342D0
{
	~Model:kkj_bt01:hana
	~Model:kkj_bt01:ha1
	~Model:kkj_bt01:ha2
	00000000
}

#new:Stage $Stage_802342E0
{
	$ASCII_802348D0  % kkj_tex
	$ASCII_802348C0  % kkj_bt01_shape
	$ASCII_802348B0  % kkj_bt01_hit
	$Script_BeforeBattle_802342A0
	$Script_AfterBattle_802342C0
	$ASCII_802348A8  % kpa_bg
	$ForegroundModelList_802342D0
	00000000
	00000000
	00000000
}

PADDING: 80234308 to 80234310 (006BB508 to 006BB510)
00000000 00000000

#new:IntTable $IntTable_80234310
{
	FFFFFFEA 000000BE FFFFFFA5 FFFFFFA8 00000015 FFFFFFA5 0000003C FFFFFFFF
	000000BE FFFFFFA5 00000058 00000018 FFFFFFA5 0000000A FFFFFFBD 000000BE
	FFFFFFA5 FFFFFF86 0000000A FFFFFFA5 0000005A 00000039 000000BE FFFFFFA5
	FFFFFFFC 00000011 FFFFFFA5 0000003C
}

#new:Script $Script_80234380
{
    0:  Label  0
    C:  UseIntBuffer  $IntTable_80234310
   18:  Loop  00000004
   24:  	Get3Int  *Var0 *Var1 *Var2
   38:  	Get3Int  *Var3 *Var4 *Var5
   4C:  	Call  PlayEffect    ( ~FX:Lightning *Var0 *Var1 *Var2 *Var3 *Var4 *Var5 00000001 00000008 00000000 00000000 00000000 00000000 )
   90:  	Call  $Function_8021D290 ( )
   9C:  	Get1Int  *Var0
   A8:  	Wait  *Var0
   B4:  EndLoop
   BC:  Goto  0
   C8:  Return
   D0:  End
}

#new:IntTable $IntTable_80234458
{
	FFFFFF87 00000021 FFFFFF98 FFFFFFE8 00000029 FFFFFF98 00000005 00000024
	00000029 FFFFFF98 00000080 00000022 FFFFFF98 0000001E 00000092 00000001
	00000071 00000026 FFFFFFF1 00000079 00000005 FFFFFFBE FFFFFFF6 00000073
	FFFFFF65 00000001 00000061 0000005A
}

#new:Script $Script_802344C8
{
    0:  Label  0
    C:  UseIntBuffer  $IntTable_80234458
   18:  Loop  00000004
   24:  	Get3Int  *Var0 *Var1 *Var2
   38:  	Get3Int  *Var3 *Var4 *Var5
   4C:  	Call  PlayEffect    ( ~FX:Lightning *Var0 *Var1 *Var2 *Var3 *Var4 *Var5 00000001 00000005 00000000 00000000 00000000 00000000 )
   90:  	Call  $Function_8021D290 ( )
   9C:  	Get1Int  *Var0
   A8:  	Wait  *Var0
   B4:  EndLoop
   BC:  Goto  0
   C8:  Return
   D0:  End
}

#new:Script $Script_BeforeBattle_802345A0
{
    0:  Call  SetSpriteShading  ( FFFFFFFF )
   10:  Exec  $Script_80234380
   1C:  Exec  $Script_802344C8
   28:  Return
   30:  End
}

#new:Script $Script_AfterBattle_802345D8
{
    0:  Return
    8:  End
}

#new:Stage $Stage_802345E8
{
	$ASCII_80234900  % kkj_tex
	$ASCII_802348F0  % kkj_bt02_shape
	$ASCII_802348E0  % kkj_bt02_hit
	$Script_BeforeBattle_802345A0
	$Script_AfterBattle_802345D8
	$ASCII_802348D8  % kpa_bg
	00000000
	00000000
	00000000
	00000000
}

#new:Vector3D $Vector3D_80234610
{
	80` 0` -10`
}

#new:Formation $Formation_00
{
	$UnusedBowser 00000002 0000000A 00000000 00000000 00000000 00000000
}

#new:Formation $Formation_01
{
	$IntroBowser 00000002 0000000A 00000000 00000000 00000000 00000000
}

#new:Formation $Formation_02
{
	$Bowser1 00000002 0000000A 00000000 00000000 00000000 00000000
}

#new:Formation $Formation_03
{
	$Bowser2 $Vector3D_80234610 0000000A 00000000 00000000 00000000 00000000
}

#new:Formation $Formation_04
{
	$Bowser3 $Vector3D_80234610 0000000A 00000000 00000000 00000000 00000000
}

#new:FormationTable $FormationTable
{
	$SJIS_80234968 00000001 $Formation_00 $Stage_80234274 00000000
	$SJIS_80234950 00000001 $Formation_01 $Stage_802342E0 00000000
	$SJIS_80234938 00000001 $Formation_02 $Stage_802342E0 00000000
	$SJIS_80234920 00000001 $Formation_03 $Stage_802345E8 00000000
	$SJIS_80234908 00000001 $Formation_04 $Stage_802345E8 00000000
	00000000 00000000 00000000 00000000 00000000
}

#new:StageTable $StageTable
{
	$ASCII_80234980 $Stage_80234274
	$ASCII_80234978 $Stage_802342E0
	$ASCII_80234970 $Stage_802345E8
	00000000 00000000
}

#new:ConstDouble $ConstDouble_80234740
{
	0.400000d
}

#new:ConstDouble $ConstDouble_80234748
{
	2.400000d
}

#new:ConstDouble $ConstDouble_80234750
{
	1.600000d
}

#new:ConstDouble $ConstDouble_80234758
{
	1.200000d
}

#new:ConstDouble $ConstDouble_80234760
{
	0.960000d
}

#new:ConstDouble $ConstDouble_80234768
{
	0.400000d
}

#new:ConstDouble $ConstDouble_80234770
{
	0.640000d
}

PADDING: 80234778 to 80234780 (006BB978 to 006BB980)
00000000 00000000

#new:ConstDouble $ConstDouble_80234780
{
	0.400000d
}

#new:ConstDouble $ConstDouble_80234788
{
	2.400000d
}

#new:ConstDouble $ConstDouble_80234790
{
	1.600000d
}

#new:ConstDouble $ConstDouble_80234798
{
	1.200000d
}

#new:ConstDouble $ConstDouble_802347A0
{
	0.960000d
}

#new:ConstDouble $ConstDouble_802347A8
{
	0.400000d
}

#new:ConstDouble $ConstDouble_802347B0
{
	0.640000d
}

PADDING: 802347B8 to 802347C0 (006BB9B8 to 006BB9C0)
00000000 00000000

#new:ConstDouble $ConstDouble_802347C0
{
	0.400000d
}

#new:ConstDouble $ConstDouble_802347C8
{
	90.000000d
}

#new:ConstDouble $ConstDouble_802347D0
{
	3.600000d
}

#new:ConstDouble $ConstDouble_802347D8
{
	2.400000d
}

#new:ConstDouble $ConstDouble_802347E0
{
	1.800000d
}

#new:ConstDouble $ConstDouble_802347E8
{
	1.440000d
}

#new:ConstDouble $ConstDouble_802347F0
{
	0.600000d
}

#new:ConstDouble $ConstDouble_802347F8
{
	0.960000d
}

#new:ConstDouble $ConstDouble_80234800
{
	0.300000d
}

PADDING: 80234808 to 80234810 (006BBA08 to 006BBA10)
00000000 00000000

#new:Unknown $???_80234810
{
	0000005A 00000087 000000E1 0000010E 0000013B 00000195
}

#new:ConstDouble $ConstDouble_80234828
{
	14.400000d
}

#new:ConstDouble $ConstDouble_80234830
{
	0.400000d
}

#new:ConstDouble $ConstDouble_80234838
{
	90.000000d
}

#new:ConstDouble $ConstDouble_80234840
{
	3.600000d
}

#new:ConstDouble $ConstDouble_80234848
{
	2.400000d
}

#new:ConstDouble $ConstDouble_80234850
{
	1.800000d
}

#new:ConstDouble $ConstDouble_80234858
{
	1.440000d
}

#new:ConstDouble $ConstDouble_80234860
{
	0.600000d
}

#new:ConstDouble $ConstDouble_80234868
{
	0.960000d
}

#new:ConstDouble $ConstDouble_80234870
{
	0.300000d
}

PADDING: 80234878 to 80234880 (006BBA78 to 006BBA80)
00000000 00000000

#new:ASCII $ASCII_80234880
{
	"kpa_bt01_hit"
}

#new:ASCII $ASCII_80234890
{
	"kpa_bt01_shape"
}

#new:ASCII $ASCII_802348A0
{
	"kpa_tex"
}

#new:ASCII $ASCII_802348A8
{
	"kpa_bg"
}

#new:ASCII $ASCII_802348B0
{
	"kkj_bt01_hit"
}

#new:ASCII $ASCII_802348C0
{
	"kkj_bt01_shape"
}

#new:ASCII $ASCII_802348D0
{
	"kkj_tex"
}

#new:ASCII $ASCII_802348D8
{
	"kpa_bg"
}

#new:ASCII $ASCII_802348E0
{
	"kkj_bt02_hit"
}

#new:ASCII $ASCII_802348F0
{
	"kkj_bt02_shape"
}

#new:ASCII $ASCII_80234900
{
	"kkj_tex"
}

#new:SJIS $SJIS_80234908
{
	クッパ(ラストバトル３) % kuppa(rasutobatoru3)
}

#new:SJIS $SJIS_80234920
{
	クッパ(ラストバトル２) % kuppa(rasutobatoru2)
}

#new:SJIS $SJIS_80234938
{
	クッパ(ラストバトル１) % kuppa(rasutobatoru1)
}

#new:SJIS $SJIS_80234950
{
	クッパ(オープニング) % kuppa(o-puningu)
}

#new:SJIS $SJIS_80234968
{
	クッパ % kuppa
}

#new:ASCII $ASCII_80234970
{
	"kpa_03"
}

#new:ASCII $ASCII_80234978
{
	"kpa_02"
}

#new:ASCII $ASCII_80234980
{
	"kpa_01"
}

PADDING: 80234988 to 80234990 (006BBB88 to 006BBB90)
00000000 00000000

