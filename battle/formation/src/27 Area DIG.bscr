% Script File: 27 Area DIG.bscr
% Decoded from: 6DDDC0 to 6F0B30 (27 Area DIG)

% Origin: HEURISTIC
#new:Function $Function_80218000
{
    0:  ADDIU     SP, SP, FFD8
    4:  SW        S1, 14 (SP)
    8:  COPY      S1, A0
    C:  SW        RA, 20 (SP)
   10:  SW        S3, 1C (SP)
   14:  SW        S2, 18 (SP)
   18:  SW        S0, 10 (SP)
   1C:  LW        S0, C (S1)
   20:  LW        A1, 0 (S0)
   24:  JAL       ~Func:get_variable
   28:  ADDIU     S0, S0, 4
   2C:  LW        A1, 0 (S0)
   30:  ADDIU     S0, S0, 4
   34:  COPY      A0, S1
   38:  JAL       ~Func:get_variable
   3C:  COPY      S3, V0
   40:  LW        A1, 0 (S0)
   44:  ADDIU     S0, S0, 4
   48:  COPY      A0, S1
   4C:  JAL       ~Func:get_variable
   50:  COPY      S2, V0
   54:  COPY      A0, S1
   58:  LW        A1, 0 (S0)
   5C:  JAL       ~Func:get_variable
   60:  COPY      S0, V0
   64:  LW        A0, 148 (S1)
   68:  JAL       ~Func:get_actor
   6C:  COPY      S1, V0
   70:  COPY      V1, V0
   74:  LW        V0, 8 (V1)
   78:  LBU       V0, 24 (V0)
   7C:  LW        A0, 8 (V1)
   80:  SUBU      S3, S3, V0
   84:  SB        S3, 194 (V1)
   88:  LBU       V0, 25 (A0)
   8C:  SUBU      S2, S2, V0
   90:  SB        S2, 195 (V1)
   94:  LBU       V0, 26 (A0)
   98:  SUBU      S0, S0, V0
   9C:  SB        S0, 196 (V1)
   A0:  LBU       A0, 27 (A0)
   A4:  SUBU      S1, S1, A0
   A8:  SB        S1, 197 (V1)
   AC:  LW        RA, 20 (SP)
   B0:  LW        S3, 1C (SP)
   B4:  LW        S2, 18 (SP)
   B8:  LW        S1, 14 (SP)
   BC:  LW        S0, 10 (SP)
   C0:  LI        V0, 2
   C4:  JR        RA
   C8:  ADDIU     SP, SP, 28
}

PADDING: 802180CC to 802180D0 (006DDE8C to 006DDE90)
00000000

#new:Function $Function_802180D0
{
    0:  ADDIU     SP, SP, FFD8
    4:  SW        S1, 14 (SP)
    8:  COPY      S1, A0
    C:  SW        RA, 20 (SP)
   10:  SW        S3, 1C (SP)
   14:  SW        S2, 18 (SP)
   18:  SW        S0, 10 (SP)
   1C:  LW        S0, C (S1)
   20:  LW        A1, 0 (S0)
   24:  JAL       ~Func:get_variable
   28:  ADDIU     S0, S0, 4
   2C:  LW        A1, 0 (S0)
   30:  ADDIU     S0, S0, 4
   34:  COPY      A0, S1
   38:  JAL       ~Func:get_variable
   3C:  COPY      S3, V0
   40:  LW        A1, 0 (S0)
   44:  ADDIU     S0, S0, 4
   48:  COPY      A0, S1
   4C:  JAL       ~Func:get_variable
   50:  COPY      S2, V0
   54:  COPY      A0, S1
   58:  LW        A1, 0 (S0)
   5C:  JAL       ~Func:get_variable
   60:  COPY      S0, V0
   64:  MTC1      S3, F12
   68:  NOP
   6C:  CVT.S.W   F12, F12
   70:  MTC1      S2, F14
   74:  NOP
   78:  CVT.S.W   F14, F14
   7C:  MTC1      S0, F0
   80:  NOP
   84:  CVT.S.W   F0, F0
   88:  MFC1      A2, F0
   8C:  JAL       802D7460
   90:  COPY      A3, V0
   94:  LW        RA, 20 (SP)
   98:  LW        S3, 1C (SP)
   9C:  LW        S2, 18 (SP)
   A0:  LW        S1, 14 (SP)
   A4:  LW        S0, 10 (SP)
   A8:  LI        V0, 2
   AC:  JR        RA
   B0:  ADDIU     SP, SP, 28
}

#new:Function $Function_80218184
{
    0:  ADDIU     SP, SP, FFD8
    4:  SW        S1, 14 (SP)
    8:  COPY      S1, A0
    C:  SW        RA, 20 (SP)
   10:  SW        S3, 1C (SP)
   14:  SW        S2, 18 (SP)
   18:  SW        S0, 10 (SP)
   1C:  LW        S0, C (S1)
   20:  LW        A1, 0 (S0)
   24:  JAL       ~Func:get_variable
   28:  ADDIU     S0, S0, 4
   2C:  LW        A1, 0 (S0)
   30:  ADDIU     S0, S0, 4
   34:  COPY      A0, S1
   38:  JAL       ~Func:get_variable
   3C:  COPY      S3, V0
   40:  LW        A1, 0 (S0)
   44:  ADDIU     S0, S0, 4
   48:  COPY      A0, S1
   4C:  JAL       ~Func:get_variable
   50:  COPY      S2, V0
   54:  COPY      A0, S1
   58:  LW        A1, 0 (S0)
   5C:  JAL       ~Func:get_variable
   60:  COPY      S0, V0
   64:  MTC1      S3, F12
   68:  NOP
   6C:  CVT.S.W   F12, F12
   70:  MTC1      S2, F14
   74:  NOP
   78:  CVT.S.W   F14, F14
   7C:  MTC1      S0, F0
   80:  NOP
   84:  CVT.S.W   F0, F0
   88:  MFC1      A2, F0
   8C:  JAL       802D74C0
   90:  COPY      A3, V0
   94:  LW        RA, 20 (SP)
   98:  LW        S3, 1C (SP)
   9C:  LW        S2, 18 (SP)
   A0:  LW        S1, 14 (SP)
   A4:  LW        S0, 10 (SP)
   A8:  LI        V0, 2
   AC:  JR        RA
   B0:  ADDIU     SP, SP, 28
}

PADDING: 80218238 to 80218240 (006DDFF8 to 006DE000)
00000000 00000000

#new:Function $Function_80218240
{
    0:  ADDIU     SP, SP, FFD8
    4:  SW        S1, 14 (SP)
    8:  COPY      S1, A0
    C:  SW        RA, 20 (SP)
   10:  SW        S3, 1C (SP)
   14:  SW        S2, 18 (SP)
   18:  SW        S0, 10 (SP)
   1C:  LW        S0, C (S1)
   20:  LW        A1, 0 (S0)
   24:  JAL       ~Func:get_variable
   28:  ADDIU     S0, S0, 4
   2C:  LW        A1, 0 (S0)
   30:  ADDIU     S0, S0, 4
   34:  COPY      A0, S1
   38:  JAL       ~Func:get_variable
   3C:  COPY      S3, V0
   40:  LW        A1, 0 (S0)
   44:  ADDIU     S0, S0, 4
   48:  COPY      A0, S1
   4C:  JAL       ~Func:get_variable
   50:  COPY      S2, V0
   54:  COPY      A0, S1
   58:  LW        A1, 0 (S0)
   5C:  JAL       ~Func:get_variable
   60:  COPY      S0, V0
   64:  LW        A0, 148 (S1)
   68:  JAL       ~Func:get_actor
   6C:  COPY      S1, V0
   70:  COPY      V1, V0
   74:  LW        V0, 8 (V1)
   78:  LBU       V0, 24 (V0)
   7C:  LW        A0, 8 (V1)
   80:  SUBU      S3, S3, V0
   84:  SB        S3, 194 (V1)
   88:  LBU       V0, 25 (A0)
   8C:  SUBU      S2, S2, V0
   90:  SB        S2, 195 (V1)
   94:  LBU       V0, 26 (A0)
   98:  SUBU      S0, S0, V0
   9C:  SB        S0, 196 (V1)
   A0:  LBU       A0, 27 (A0)
   A4:  SUBU      S1, S1, A0
   A8:  SB        S1, 197 (V1)
   AC:  LW        RA, 20 (SP)
   B0:  LW        S3, 1C (SP)
   B4:  LW        S2, 18 (SP)
   B8:  LW        S1, 14 (SP)
   BC:  LW        S0, 10 (SP)
   C0:  LI        V0, 2
   C4:  JR        RA
   C8:  ADDIU     SP, SP, 28
}

PADDING: 8021830C to 80218310 (006DE0CC to 006DE0D0)
00000000

#new:Function $Function_80218310
{
    0:  ADDIU     SP, SP, FFD8
    4:  SW        S1, 14 (SP)
    8:  COPY      S1, A0
    C:  SW        RA, 20 (SP)
   10:  SW        S3, 1C (SP)
   14:  SW        S2, 18 (SP)
   18:  SW        S0, 10 (SP)
   1C:  LW        S0, C (S1)
   20:  LW        A1, 0 (S0)
   24:  JAL       ~Func:get_variable
   28:  ADDIU     S0, S0, 4
   2C:  LW        A1, 0 (S0)
   30:  ADDIU     S0, S0, 4
   34:  COPY      A0, S1
   38:  JAL       ~Func:get_variable
   3C:  COPY      S3, V0
   40:  LW        A1, 0 (S0)
   44:  ADDIU     S0, S0, 4
   48:  COPY      A0, S1
   4C:  JAL       ~Func:get_variable
   50:  COPY      S2, V0
   54:  COPY      A0, S1
   58:  LW        A1, 0 (S0)
   5C:  JAL       ~Func:get_variable
   60:  COPY      S0, V0
   64:  LW        A0, 148 (S1)
   68:  JAL       ~Func:get_actor
   6C:  COPY      S1, V0
   70:  COPY      V1, V0
   74:  LW        V0, 8 (V1)
   78:  LBU       V0, 24 (V0)
   7C:  LW        A0, 8 (V1)
   80:  SUBU      S3, S3, V0
   84:  SB        S3, 194 (V1)
   88:  LBU       V0, 25 (A0)
   8C:  SUBU      S2, S2, V0
   90:  SB        S2, 195 (V1)
   94:  LBU       V0, 26 (A0)
   98:  SUBU      S0, S0, V0
   9C:  SB        S0, 196 (V1)
   A0:  LBU       A0, 27 (A0)
   A4:  SUBU      S1, S1, A0
   A8:  SB        S1, 197 (V1)
   AC:  LW        RA, 20 (SP)
   B0:  LW        S3, 1C (SP)
   B4:  LW        S2, 18 (SP)
   B8:  LW        S1, 14 (SP)
   BC:  LW        S0, 10 (SP)
   C0:  LI        V0, 2
   C4:  JR        RA
   C8:  ADDIU     SP, SP, 28
}

PADDING: 802183DC to 802183E0 (006DE19C to 006DE1A0)
00000000

% Origin: HEURISTIC
#new:Function $Function_802183E0
{
    0:  ADDIU     SP, SP, FFE8
    4:  SW        S0, 10 (SP)
    8:  COPY      S0, A0
    C:  LI        A1, *GB_IWA00_Whacka_HitCount
   14:  CLEAR     A0
   18:  SW        RA, 14 (SP)
   1C:  JAL       ~Func:get_variable
   20:  SW        R0, 84 (S0)
   24:  SLTI      V0, V0, 8
   28:  BNE       V0, R0, .o34
   2C:  LI        V0, 1
   30:  SW        V0, 84 (S0)
        .o34
   34:  LW        RA, 14 (SP)
   38:  LW        S0, 10 (SP)
   3C:  LI        V0, 2
   40:  JR        RA
   44:  ADDIU     SP, SP, 18
}

PADDING: 80218428 to 80218430 (006DE1E8 to 006DE1F0)
00000000 00000000

#new:Function $Function_80218430
{
    0:  ADDIU     SP, SP, FF78
    4:  SW        S1, 54 (SP)
    8:  COPY      S1, A0
    C:  SW        RA, 60 (SP)
   10:  SW        S3, 5C (SP)
   14:  SW        S2, 58 (SP)
   18:  SW        S0, 50 (SP)
   1C:  SDC1      F26, 80 (SP)
   20:  SDC1      F24, 78 (SP)
   24:  SDC1      F22, 70 (SP)
   28:  SDC1      F20, 68 (SP)
   2C:  LW        S0, C (S1)
   30:  LW        A1, 0 (S0)
   34:  JAL       ~Func:get_variable
   38:  ADDIU     S0, S0, 4
   3C:  MTC1      V0, F20
   40:  NOP
   44:  CVT.D.W   F20, F20
   48:  LIF       F1, 2.5625
   50:  MTC1      R0, F0
   54:  LW        S2, 0 (S0)
   58:  ADDIU     S0, S0, 4
   5C:  DIV.D     F20, F20, F0
   60:  LIF       F0, 6.28318
   6C:  CVT.S.D   F20, F20
   70:  MUL.S     F20, F20, F0
   74:  NOP
   78:  LW        S3, 0 (S0)
   7C:  LW        S0, 4 (S0)
   80:  LIF       F0, 360.0
   88:  LIF       F24, 150.0
   90:  DIV.S     F20, F20, F0
   94:  JAL       ~Func:sin_rad
   98:  MOV.S     F12, F20
   9C:  MUL.S     F22, F0, F24
   A0:  NOP
   A4:  MTC1      R0, F26
   A8:  NOP
   AC:  ADD.S     F22, F22, F26
   B0:  JAL       ~Func:cos_rad
   B4:  MOV.S     F12, F20
   B8:  MUL.S     F20, F0, F24
   BC:  NOP
   C0:  LIF       F24, -252.0
   C8:  LWC1      F0, B8 (S1)
   CC:  CVT.S.W   F0, F0
   D0:  SUB.S     F24, F24, F0
   D4:  LWC1      F0, B0 (S1)
   D8:  CVT.S.W   F0, F0
   DC:  SUB.S     F22, F22, F0
   E0:  COPY      A0, S1
   E4:  COPY      A1, S2
   E8:  ADD.S     F20, F20, F26
   EC:  LWC1      F0, B4 (S1)
   F0:  CVT.S.W   F0, F0
   F4:  MFC1      A2, F22
   F8:  JAL       ~Func:set_float_variable
   FC:  SUB.S     F20, F20, F0
  100:  COPY      A0, S1
  104:  MFC1      A2, F20
  108:  JAL       ~Func:set_float_variable
  10C:  COPY      A1, S3
  110:  COPY      A0, S1
  114:  MFC1      A2, F24
  118:  JAL       ~Func:set_float_variable
  11C:  COPY      A1, S0
  120:  LW        RA, 60 (SP)
  124:  LW        S3, 5C (SP)
  128:  LW        S2, 58 (SP)
  12C:  LW        S1, 54 (SP)
  130:  LW        S0, 50 (SP)
  134:  LDC1      F26, 80 (SP)
  138:  LDC1      F24, 78 (SP)
  13C:  LDC1      F22, 70 (SP)
  140:  LDC1      F20, 68 (SP)
  144:  LI        V0, 2
  148:  JR        RA
  14C:  ADDIU     SP, SP, 88
}

#new:Function $Function_80218580
{
    0:  ADDIU     SP, SP, FFE8
    4:  SW        S0, 10 (SP)
    8:  COPY      S0, A0
    C:  SW        RA, 14 (SP)
   10:  JAL       ~Func:get_model_list_index_from_tree_index
   14:  LW        A0, AC (S0)
   18:  JAL       ~Func:get_model_from_list_index
   1C:  COPY      A0, V0
   20:  LWC1      F0, 98 (V0)
   24:  TRUNC.W.S F2, F0
   28:  SWC1      F2, B0 (S0)
   2C:  LWC1      F0, 9C (V0)
   30:  TRUNC.W.S F2, F0
   34:  SWC1      F2, B4 (S0)
   38:  LWC1      F0, A0 (V0)
   3C:  TRUNC.W.S F2, F0
   40:  SWC1      F2, B8 (S0)
   44:  LW        RA, 14 (SP)
   48:  LW        S0, 10 (SP)
   4C:  LI        V0, 2
   50:  JR        RA
   54:  ADDIU     SP, SP, 18
}

PADDING: 802185D8 to 802185E0 (006DE398 to 006DE3A0)
00000000 00000000

#new:Function $Function_802185E0
{
    0:  LAW       V0, 8007419C
    8:  SW        R0, 84 (A0)
    C:  LBU       V0, AA (V0)
   10:  ANDI      V0, V0, 1
   14:  BEQ       V0, R0, .o20
   18:  LI        V0, 1
   1C:  SW        V0, 84 (A0)
        .o20
   20:  JR        RA
   24:  LI        V0, 2
}

#new:Function $Function_80218608
{
    0:  ADDIU     SP, SP, FFE8
    4:  SW        RA, 10 (SP)
    8:  JAL       ~Func:add_coins
    C:  LI        A0, 1
   10:  LW        RA, 10 (SP)
   14:  LI        V0, 2
   18:  JR        RA
   1C:  ADDIU     SP, SP, 18
}

PADDING: 80218628 to 80218630 (006DE3E8 to 006DE3F0)
00000000 00000000

#new:Function $Function_80218630
{
    0:  LHU       V0, 86 (A0)
    4:  SAH       V0, 802809F8
    C:  JR        RA
   10:  LI        V0, 2
}

#new:Function $Function_80218644
{
    0:  ADDIU     SP, SP, FFE8
    4:  LA        A0, 800DC070
    C:  LI        V0, 1
   10:  SW        RA, 14 (SP)
   14:  SW        S0, 10 (SP)
   18:  SB        V0, 178 (A0)
   1C:  LABU      V1, 800B0F16
   24:  LW        S0, D8 (A0)
   28:  LI        V0, 3
   2C:  SH        V0, 17C (A0)
   30:  LAW       V0, 8008F0A0
   38:  SLL       V1, V1, 18
   3C:  SRA       V1, V1, 18
   40:  SH        V1, 17A (A0)
   44:  SW        V0, 184 (A0)
   48:  JAL       ~Func:player_create_target_list
   4C:  COPY      A0, S0
   50:  LB        V1, 40D (S0)
   54:  SB        R0, 425 (S0)
   58:  SLL       V0, V1, 2
   5C:  ADDU      V0, V0, V1
   60:  SLL       V0, V0, 2
   64:  ADDIU     V0, V0, 22C
   68:  ADDU      V0, S0, V0
   6C:  LHU       V1, 0 (V0)
   70:  SH        V1, 428 (S0)
   74:  LBU       V0, 3 (V0)
   78:  SB        V0, 426 (S0)
   7C:  LW        RA, 14 (SP)
   80:  LW        S0, 10 (SP)
   84:  LI        V0, 2
   88:  JR        RA
   8C:  ADDIU     SP, SP, 18
}

PADDING: 802186D4 to 802186E0 (006DE494 to 006DE4A0)
00000000 00000000 00000000

#new:Function $Function_802186E0
{
    0:  ADDIU     SP, SP, FFE8
    4:  LA        A0, 800DC070
    C:  SW        RA, 14 (SP)
   10:  SW        S0, 10 (SP)
   14:  SB        R0, 178 (A0)
   18:  LABU      V1, 800B0F16
   20:  LW        S0, D8 (A0)
   24:  LI        V0, 20
   28:  SH        V0, 17C (A0)
   2C:  LAW       V0, 8008F2E4
   34:  SLL       V1, V1, 18
   38:  SRA       V1, V1, 18
   3C:  SH        V1, 17A (A0)
   40:  SW        V0, 184 (A0)
   44:  JAL       ~Func:player_create_target_list
   48:  COPY      A0, S0
   4C:  LB        V1, 40E (S0)
   50:  LI        V0, 1
   54:  SB        V0, 425 (S0)
   58:  SLL       V0, V1, 2
   5C:  ADDU      V0, V0, V1
   60:  SLL       V0, V0, 2
   64:  ADDIU     V0, V0, 22C
   68:  ADDU      V0, S0, V0
   6C:  LHU       V1, 0 (V0)
   70:  SH        V1, 428 (S0)
   74:  LBU       V0, 3 (V0)
   78:  SB        V0, 426 (S0)
   7C:  LW        RA, 14 (SP)
   80:  LW        S0, 10 (SP)
   84:  LI        V0, 2
   88:  JR        RA
   8C:  ADDIU     SP, SP, 18
}

#new:Function $Function_80218770
{
    0:  ADDIU     SP, SP, FFE8
    4:  LA        V1, 800DC070
    C:  SW        RA, 14 (SP)
   10:  SW        S0, 10 (SP)
   14:  LW        S0, DC (V1)
   18:  LI        V0, 6
   1C:  SB        V0, 178 (V1)
   20:  SH        R0, 17A (V1)
   24:  LAW       A0, 8008FC44
   2C:  LI        V0, 98
   30:  SH        V0, 17C (V1)
   34:  SW        A0, 184 (V1)
   38:  JAL       ~Func:player_create_target_list
   3C:  COPY      A0, S0
   40:  LB        V1, 40D (S0)
   44:  SB        R0, 425 (S0)
   48:  SLL       V0, V1, 2
   4C:  ADDU      V0, V0, V1
   50:  SLL       V0, V0, 2
   54:  ADDIU     V0, V0, 22C
   58:  ADDU      V0, S0, V0
   5C:  LHU       V1, 0 (V0)
   60:  SH        V1, 428 (S0)
   64:  LBU       V0, 3 (V0)
   68:  SB        V0, 426 (S0)
   6C:  LW        RA, 14 (SP)
   70:  LW        S0, 10 (SP)
   74:  LI        V0, 2
   78:  JR        RA
   7C:  ADDIU     SP, SP, 18
}

#new:Function $Function_802187F0
{
    0:  ADDIU     SP, SP, FFE8
    4:  LA        V1, 800DC070
    C:  LI        V0, 2
   10:  SW        RA, 14 (SP)
   14:  SW        S0, 10 (SP)
   18:  SB        V0, 178 (V1)
   1C:  LI        V0, 82
   20:  SH        V0, 17A (V1)
   24:  LI        V0, 82
   28:  SH        R0, 17C (V1)
   2C:  SW        R0, 188 (V1)
   30:  SAH       V0, 8010F444
   38:  LAW       V0, 80088928
   40:  LW        S0, D8 (V1)
   44:  ORI       V0, V0, 8000
   48:  COPY      A0, S0
   4C:  JAL       ~Func:player_create_target_list
   50:  SW        V0, 184 (V1)
   54:  LB        V1, 40D (S0)
   58:  SB        R0, 425 (S0)
   5C:  SLL       V0, V1, 2
   60:  ADDU      V0, V0, V1
   64:  SLL       V0, V0, 2
   68:  ADDIU     V0, V0, 22C
   6C:  ADDU      V0, S0, V0
   70:  LHU       V1, 0 (V0)
   74:  SH        V1, 428 (S0)
   78:  LBU       V0, 3 (V0)
   7C:  SB        V0, 426 (S0)
   80:  LW        RA, 14 (SP)
   84:  LW        S0, 10 (SP)
   88:  LI        V0, 2
   8C:  JR        RA
   90:  ADDIU     SP, SP, 18
}

PADDING: 80218884 to 80218890 (006DE644 to 006DE650)
00000000 00000000 00000000

#new:Function $Function_80218890
{
    0:  LHU       V0, 86 (A0)
    4:  SAH       V0, 802809F8
    C:  JR        RA
   10:  LI        V0, 2
}

PADDING: 802188A4 to 802188B0 (006DE664 to 006DE670)
00000000 00000000 00000000

% Origin: HEURISTIC
#new:DefenseTable $DefenseTable_802188B0
{
	.Element:Normal 00000001
	.Element:Hammer 00000001
	.Element:Jump   00000001
	.Element:Water  00000001
	.Element:Blast  00000001
	.Element:End
}

% Origin: HEURISTIC
#new:DefenseTable $DefenseTable_802188DC
{
	.Element:Normal 00000000
	.Element:End
}

#new:Unknown $???_802188E8
{
	00000001 00000000 00000002 00000000 00000006 0000005A 00000009 0000003C
	00000007 00000064 00000004 0000005A 00000003 00000000 0000000B 00000050
	00000005 0000005A 0000000A 0000005A 00000008 00000064 0000001F 00000000
	00000020 00000000 00000025 00000000 00000022 00000000 00000024 00000000
	00000023 00000000 00000021 00000000 00000026 00000001 00000027 00000000
	00000029 00000000 00000000
}

#new:Unknown $???_80218994
{
	00800000 01000000 FE2400FF $IdleAnimations_802189E0 $DefenseTable_802188B0 00001000 00000000 00F90000
	00000000 00000000 000B0604 00010000 $???_80218994 $Script_80218AC4 $???_802188E8 465A5A5A
	5F006401 1C240000 F1200520
}

% Origin: HEURISTIC
#new:IdleAnimations $IdleAnimations_802189E0
{
	.Status:Normal    00290101
	.Status:Stone     00290100
	.Status:Sleep     00290111
	.Status:Poison    00290101
	.Status:Stop      00290100
	.Status:Static    00290101
	.Status:Paralyze  00290100
	.Status:Dizzy     00290113
	.Status:Fear      00290113
	.Status:End
}

% Origin: HEURISTIC
#new:IdleAnimations $IdleAnimations_80218A2C
{
	.Status:Normal    00290103
	.Status:Stone     00290100
	.Status:Sleep     00290111
	.Status:Poison    00290103
	.Status:Stop      00290100
	.Status:Static    00290103
	.Status:Paralyze  00290100
	.Status:Dizzy     00290113
	.Status:Fear      00290113
	.Status:End
}

% Origin: HEURISTIC
#new:IdleAnimations $IdleAnimations_80218A78
{
	.Status:Normal    0029010F
	.Status:Stone     00290110
	.Status:Sleep     00290112
	.Status:Poison    0029010F
	.Status:Stop      00290110
	.Status:Static    0029010F
	.Status:Paralyze  00290110
	.Status:Dizzy     00290114
	.Status:Fear      00290114
	.Status:End
}

% Origin: HEURISTIC
#new:Script $Script_80218AC4
{
    0:  Call  BindTakeTurn  ( .Actor:Self $Script_TakeTurn_80219CEC )
   14:  Call  BindIdle      ( .Actor:Self $Script_Idle_80218C80 )
   28:  Call  BindHandleEvent   ( .Actor:Self $Script_HandleEvent_80219168 )
   3C:  Call  SetActorVar   ( .Actor:Self 00000008 00000000 )
   54:  Return
   5C:  End
}

% Origin: HEURISTIC
#new:Script $Script_80218B28
{
    0:  Switch  *Var0
    C:  	Case  ==  00000000
   18:  		If  *Var1  &  00041000
   28:  			Call  SetTargetOffset       ( .Actor:Self 00000001  -5`  15` )
   44:  			Call  8027D4C8  ( FFFFFF81 00000001 00000000 00000000 )
   60:  			Call  $Function_80218000    ( FFFFFFF6 00000014 0000000A 00000014 )
   7C:  		Else
   84:  			Call  SetTargetOffset       ( .Actor:Self 00000001  -4`  32` )
   A0:  			Call  8027D4C8  ( FFFFFF81 00000001 FFFFFFFF FFFFFFFC )
   BC:  			Call  $Function_80218000    ( FFFFFFF1 00000020 00000005 00000020 )
   D8:  		EndIf
   E0:  	Case  ==  00000001
   EC:  		Call  SetTargetOffset       ( .Actor:Self 00000001  -5`  15` )
  108:  		Call  8027D4C8  ( FFFFFF81 00000001 00000000 00000000 )
  124:  		Call  $Function_80218000    ( FFFFFFF6 00000014 0000000A 00000014 )
  140:  EndSwitch
  148:  Return
  150:  End
}

% Origin: HEURISTIC
#new:Script $Script_Idle_80218C80
{
    0:  Label  0
    C:  Call  RandInt   ( 00000050 *VarA )
   20:  Add   *VarA  00000050
   30:  Loop  *VarA
   3C:  	Label  1
   48:  	Call  GetActorVar       ( .Actor:Self 00000008 *Var0 )
   60:  	Call  GetStatusFlags    ( .Actor:Self *Var1 )
   74:  	ExecWait  $Script_80218B28
   80:  	If  *Var0  ==  00000001
   90:  		Wait  1`
   9C:  		Goto  1
   A8:  	EndIf
   B0:  	If  *Var1  &  0035D000
   C0:  		Wait  1`
   CC:  		Goto  1
   D8:  	EndIf
   E0:  	Wait  1`
   EC:  EndLoop
   F4:  Call  GetActorPos   ( .Actor:Self *Var0 *Var1 *Var2 )
  110:  Add   *Var0  00000005
  120:  Call  SetActorIdleSpeed ( .Actor:Self *Fixed[1.0] )
  134:  Call  SetIdleAnimations ( .Actor:Self 00000001 $IdleAnimations_80218A2C )
  14C:  Call  SetIdleGoal   ( .Actor:Self *Var0 *Var1 *Var2 )
  168:  Call  IdleRunToGoal ( .Actor:Self  0` )
  17C:  Call  GetActorVar   ( .Actor:Self 00000008 *Var0 )
  194:  Switch  *Var0
  1A0:  	Case  ==  00000000
  1AC:  		Call  SetIdleAnimations ( .Actor:Self 00000001 $IdleAnimations_802189E0 )
  1C4:  	Case  ==  00000001
  1D0:  		Call  SetIdleAnimations ( .Actor:Self 00000001 $IdleAnimations_80218A78 )
  1E8:  EndSwitch
  1F0:  Loop  00000014
  1FC:  	Label  2
  208:  	Call  GetActorVar       ( .Actor:Self 00000008 *Var0 )
  220:  	Call  GetStatusFlags    ( .Actor:Self *Var1 )
  234:  	ExecWait  $Script_80218B28
  240:  	If  *Var0  ==  00000001
  250:  		Wait  1`
  25C:  		Goto  2
  268:  	EndIf
  270:  	If  *Var1  &  0035D000
  280:  		Wait  1`
  28C:  		Goto  2
  298:  	EndIf
  2A0:  	Wait  1`
  2AC:  EndLoop
  2B4:  Call  GetActorPos   ( .Actor:Self *Var0 *Var1 *Var2 )
  2D0:  Sub   *Var0  00000005
  2E0:  Call  SetActorIdleSpeed ( .Actor:Self *Fixed[1.0] )
  2F4:  Call  SetIdleAnimations ( .Actor:Self 00000001 $IdleAnimations_80218A2C )
  30C:  Call  SetIdleGoal   ( .Actor:Self *Var0 *Var1 *Var2 )
  328:  Call  IdleRunToGoal ( .Actor:Self  0` )
  33C:  Call  GetActorVar   ( .Actor:Self 00000008 *Var0 )
  354:  Switch  *Var0
  360:  	Case  ==  00000000
  36C:  		Call  SetIdleAnimations ( .Actor:Self 00000001 $IdleAnimations_802189E0 )
  384:  	Case  ==  00000001
  390:  		Call  SetIdleAnimations ( .Actor:Self 00000001 $IdleAnimations_80218A78 )
  3A8:  EndSwitch
  3B0:  Loop  00000050
  3BC:  	Label  3
  3C8:  	Call  GetActorVar       ( .Actor:Self 00000008 *Var0 )
  3E0:  	Call  GetStatusFlags    ( .Actor:Self *Var1 )
  3F4:  	ExecWait  $Script_80218B28
  400:  	If  *Var0  ==  00000001
  410:  		Wait  1`
  41C:  		Goto  3
  428:  	EndIf
  430:  	If  *Var1  &  0035D000
  440:  		Wait  1`
  44C:  		Goto  3
  458:  	EndIf
  460:  	Wait  1`
  46C:  EndLoop
  474:  Goto  0
  480:  Return
  488:  End
}

% Origin: HEURISTIC
#new:IntTable $IntTable_80219110
{
	00000009 00000010 00000016 0000001A 0000001E 00000020 00000021 00000020
	0000001E 0000001A 00000016 00000010 00000009 00000000 00000004 00000006
	00000007 00000006 00000004 00000000 00000002 00000000
}

% Origin: HEURISTIC
#new:Script $Script_HandleEvent_80219168
{
    0:  Call  UseIdleAnimation  ( .Actor:Self .False )
   14:  Call  EnableIdleScript  ( .Actor:Self 00000000 )
   28:  Call  SetActorYaw       ( .Actor:Self  0` )
   3C:  Call  GetLastEvent      ( .Actor:Self *Var0 )
   50:  Switch  *Var0
   5C:  	CaseOR  ==  .Event:HitCombo % 9
   68:  	CaseOR  ==  .Event:Hit % A
   74:  		SetConst  *Var0  00000001
   84:  		SetConst  *Var1  0029010B
   94:  		ExecWait  DoNormalHit
   A0:  	EndCaseGroup
   A8:  	Case  ==  .Event:BurnHit % E
   B4:  		SetConst  *Var0  00000001
   C4:  		SetConst  *Var1  0029010C
   D4:  		SetConst  *Var2  0029010D
   E4:  		ExecWait  DoBurnHit
   F0:  	Case  ==  .Event:BurnDeath % 24
   FC:  		SetConst  *Var0  00000001
  10C:  		SetConst  *Var1  0029010C
  11C:  		SetConst  *Var2  0029010D
  12C:  		ExecWait  DoBurnHit
  138:  		SetConst  *Var0  00000001
  148:  		SetConst  *Var1  0029010D
  158:  		ExecWait  DoDeath
  164:  		Return
  16C:  	Case  ==  .Event:SpinSmashHit % B
  178:  		SetConst  *Var0  00000001
  188:  		SetConst  *Var1  0029010B
  198:  		ExecWait  DoSpinSmashHit
  1A4:  	Case  ==  .Event:SpinSmashDeath % 21
  1B0:  		SetConst  *Var0  00000001
  1C0:  		SetConst  *Var1  0029010B
  1D0:  		ExecWait  DoSpinSmashHit
  1DC:  		SetConst  *Var0  00000001
  1EC:  		SetConst  *Var1  0029010B
  1FC:  		ExecWait  DoDeath
  208:  		Return
  210:  	Case  ==  .Event:FlipTrigger % D
  21C:  		Call  SetActorVar       ( .Actor:Self 00000008 00000001 )
  234:  		Call  SetActorVar       ( .Actor:Self 00000009 00000002 )
  24C:  		Call  SetDefenseTable   ( .Actor:Self 00000001 $DefenseTable_802188DC )
  264:  		Call  SetIdleAnimations ( .Actor:Self 00000001 $IdleAnimations_80218A78 )
  27C:  		Call  SetTargetOffset   ( .Actor:Self 00000001  -5`  15` )
  298:  		Call  8027D4C8  ( FFFFFF81 00000001 00000000 00000000 )
  2B4:  		Call  SetActorFlagBits  ( .Actor:Self 00000400 .True )
  2CC:  		Call  SetAnimation      ( .Actor:Self 00000001 0029010B )
  2E4:  		Call  GetStatusFlags    ( .Actor:Self *VarA )
  2F8:  		Call  SetActorRotationOffset    ( .Actor:Self 00000000 0000000C 00000000 )
  314:  		ChildThread
  31C:  			Wait  4`
  328:  			Call  SetActorRotation  ( .Actor:Self 00000000 00000000 0000001E )
  344:  			Wait  1`
  350:  			Call  SetActorRotation  ( .Actor:Self 00000000 00000000 00000000 )
  36C:  			Wait  1`
  378:  			Call  SetActorRotation  ( .Actor:Self 00000000 00000000 FFFFFFE2 )
  394:  			Wait  1`
  3A0:  			Call  SetActorRotation  ( .Actor:Self 00000000 00000000 FFFFFFC4 )
  3BC:  			Wait  1`
  3C8:  			Call  SetActorRotation  ( .Actor:Self 00000000 00000000 FFFFFFB5 )
  3E4:  			Wait  1`
  3F0:  		EndChildThread
  3F8:  		UseIntBuffer  $IntTable_80219110
  404:  		Loop  00000016
  410:  			Get1Int  *Var0
  41C:  			Call  SetActorDispOffset    ( .Actor:Self 00000000 *Var0 00000000 )
  438:  			Wait  1`
  444:  		EndLoop
  44C:  		Call  SetActorRotationOffset    ( .Actor:Self 00000000 00000000 00000000 )
  468:  		Call  SetActorRotation      ( .Actor:Self 00000000 00000000 00000000 )
  484:  		Call  SetActorDispOffset    ( .Actor:Self 00000000 00000000 00000000 )
  4A0:  		Call  SetAnimation  ( .Actor:Self 00000001 0029010F )
  4B8:  	Case  ==  .Event:ShockHit % 2F
  4C4:  		SetConst  *Var0  00000001
  4D4:  		SetConst  *Var1  0029010B
  4E4:  		ExecWait  DoShockHit
  4F0:  		SetConst  *Var0  00000001
  500:  		SetConst  *Var1  0029010B
  510:  		ExecWait  DoJumpBack
  51C:  		Call  JumpToGoal    ( .Actor:Self  5` .False .True .False )
  53C:  		SetConst  *Var0  00000001
  54C:  		SetConst  *Var1  00290104
  55C:  		ExecWait  DoReturnHome
  568:  		Call  SetActorJumpGravity   ( .Actor:Self *Fixed[1.6] )
  57C:  		Call  JumpToGoal    ( .Actor:Self  5` .False .True .False )
  59C:  	Case  ==  .Event:ShockDeath % 26
  5A8:  		SetConst  *Var0  00000001
  5B8:  		SetConst  *Var1  0029010B
  5C8:  		ExecWait  DoShockHit
  5D4:  		SetConst  *Var0  00000001
  5E4:  		SetConst  *Var1  0029010B
  5F4:  		ExecWait  DoDeath
  600:  		Return
  608:  	CaseOR  ==  00000017 % 17
  614:  	CaseOR  ==  .Event:Immune % 19
  620:  		Call  GetActorVar   ( .Actor:Self 00000008 *Var0 )
  638:  		If  *Var0  ==  00000000
  648:  			SetConst  *Var0  00000001
  658:  			SetConst  *Var1  00290107
  668:  			ExecWait  DoImmune
  674:  			Call  GetStatusFlags    ( .Actor:Self *Var0 )
  688:  			If  *Var0  !&  ~Flags:StatusFlags:Sleep|Frozen|Fear|Paralyze|Dizzy|Stone|Stop % 35D000
  698:  				Call  SetAnimation  ( .Actor:Self 00000001 00290108 )
  6B0:  				Wait  10`
  6BC:  			EndIf
  6C4:  		Else
  6CC:  			SetConst  *Var0  00000001
  6DC:  			SetConst  *Var1  0029010F
  6EC:  			ExecWait  DoImmune
  6F8:  		EndIf
  700:  	EndCaseGroup
  708:  	Case  ==  .Event:Death % 20
  714:  		SetConst  *Var0  00000001
  724:  		SetConst  *Var1  0029010B
  734:  		ExecWait  DoNormalHit
  740:  		Wait  10`
  74C:  		SetConst  *Var0  00000001
  75C:  		SetConst  *Var1  0029010B
  76C:  		ExecWait  DoDeath
  778:  		Return
  780:  	Case  ==  .Event:EndFirstStrike % 35
  78C:  		Call  GetActorVar   ( .Actor:Self 00000008 *Var0 )
  7A4:  		If  *Var0  ==  00000000
  7B4:  			SetConst  *Var0  00000001
  7C4:  			SetConst  *Var1  00290104
  7D4:  			ExecWait  DoReturnHome
  7E0:  		EndIf
  7E8:  		Call  GetActorPos   ( .Actor:Self *Var0 *Var1 *Var2 )
  804:  		Call  SetHomePos    ( .Actor:Self *Var0 *Var1 *Var2 )
  820:  		Call  HPBarToHome   ( .Actor:Self )
  830:  	Case  ==  .Event:RecoverStatus % 31
  83C:  		Call  GetActorVar   ( .Actor:Self 00000008 *Var0 )
  854:  		If  *Var0  ==  00000000
  864:  			SetConst  *Var0  00000001
  874:  			SetConst  *Var1  00290101
  884:  			ExecWait  DoRecover
  890:  		Else
  898:  			SetConst  *Var0  00000001
  8A8:  			SetConst  *Var1  0029010F
  8B8:  			ExecWait  DoImmune
  8C4:  		EndIf
  8CC:  	Case  ==  .Event:ScareAway % 39
  8D8:  		Call  GetActorVar   ( .Actor:Self 00000008 *Var0 )
  8F0:  		If  *Var0  ==  00000000
  900:  			SetConst  *Var0  00000001
  910:  			SetConst  *Var1  00290104
  920:  			SetConst  *Var2  0029010B
  930:  			ExecWait  DoScareAway
  93C:  			Return
  944:  		Else
  94C:  			SetConst  *Var0  00000001
  95C:  			SetConst  *Var1  0029010F
  96C:  			ExecWait  DoImmune
  978:  		EndIf
  980:  	Case  ==  .Event:BeginAirLift % 3A
  98C:  		Call  GetActorVar   ( .Actor:Self 00000008 *Var0 )
  9A4:  		If  *Var0  ==  00000000
  9B4:  			SetConst  *Var0  00000001
  9C4:  			SetConst  *Var1  00290117
  9D4:  		Else
  9DC:  			SetConst  *Var0  00000001
  9EC:  			SetConst  *Var1  0029010F
  9FC:  		EndIf
  A04:  		ExecWait  DoAirLift
  A10:  	Case  ==  .Event:BlowAway % 16
  A1C:  		Call  GetActorVar   ( .Actor:Self 00000008 *Var0 )
  A34:  		If  *Var0  ==  00000000
  A44:  			SetConst  *Var0  00000001
  A54:  			SetConst  *Var1  00290117
  A64:  		Else
  A6C:  			SetConst  *Var0  00000001
  A7C:  			SetConst  *Var1  0029010F
  A8C:  		EndIf
  A94:  		ExecWait  DoBlowAway
  AA0:  		Return
  AA8:  	Case  ==  .Event:AirLiftFailed % 1F
  AB4:  		Call  GetActorVar   ( .Actor:Self 00000008 *Var0 )
  ACC:  		If  *Var0  ==  00000000
  ADC:  			SetConst  *Var0  00000001
  AEC:  			SetConst  *Var1  00290101
  AFC:  			ExecWait  DoImmune
  B08:  		Else
  B10:  			SetConst  *Var0  00000001
  B20:  			SetConst  *Var1  0029010F
  B30:  			ExecWait  DoImmune
  B3C:  		EndIf
  B44:  EndSwitch
  B4C:  Call  EnableIdleScript  ( .Actor:Self FFFFFFFF )
  B60:  Call  UseIdleAnimation  ( .Actor:Self .True )
  B74:  Return
  B7C:  End
}

% Origin: HEURISTIC
#new:Script $Script_TakeTurn_80219CEC
{
    0:  Call  UseIdleAnimation  ( .Actor:Self .False )
   14:  Call  EnableIdleScript  ( .Actor:Self 00000000 )
   28:  Call  SetTargetActor    ( .Actor:Self .Actor:Player )
   3C:  Call  GetBattlePhase    ( *Var0 )
   4C:  If  *Var0  ==  00000001
   5C:  	Call  SetAnimation  ( .Actor:Self 00000001 00290106 )
   74:  Else
   7C:  	Call  GetActorVar   ( .Actor:Self 00000008 *Var0 )
   94:  	If  *Var0  ==  00000001
   A4:  		Call  GetActorVar   ( .Actor:Self 00000009 *Var0 )
   BC:  		Sub   *Var0  00000001
   CC:  		If  *Var0  >  00000000
   DC:  			Call  SetActorVar   ( .Actor:Self 00000009 *Var0 )
   F4:  			Call  AddActorDecoration    ( .Actor:Self 00000001 00000000 .Decoration:Sweat )
  110:  			Call  SetAnimationRate      ( .Actor:Self 00000001 *Fixed[3.0] )
  128:  			Wait  30`
  134:  			Call  SetAnimationRate      ( .Actor:Self 00000001 *Fixed[1.0] )
  14C:  			Call  RemoveActorDecoration ( .Actor:Self 00000001 00000000 )
  164:  		Else
  16C:  			Call  AddActorDecoration        ( .Actor:Self 00000001 00000000 .Decoration:Sweat )
  188:  			Call  SetAnimationRate  ( .Actor:Self 00000001 *Fixed[3.0] )
  1A0:  			Wait  20`
  1AC:  			Call  SetAnimationRate  ( .Actor:Self 00000001 *Fixed[1.0] )
  1C4:  			Call  RemoveActorDecoration     ( .Actor:Self 00000001 00000000 )
  1DC:  			Call  SetActorSounds    ( .Actor:Self .ActorSound:Jump 00000000 00000000 )
  1F8:  			Call  PlaySoundAtActor  ( .Actor:Self .Sound:Jump )
  20C:  			Call  SetAnimation      ( .Actor:Self 00000001 0029010F )
  224:  			Set   *Var0  00000000
  234:  			Call  SetActorRotationOffset    ( .Actor:Self 00000000 0000000C 00000000 )
  250:  			ChildThread
  258:  				Loop  00000005
  264:  					Add   *Var0  0000000F
  274:  					Call  SetActorRotation  ( .Actor:Self 00000000 00000000 *Var0 )
  290:  					Wait  1`
  29C:  				EndLoop
  2A4:  			EndChildThread
  2AC:  			Call  GetActorPos       ( .Actor:Self *Var0 *Var1 *Var2 )
  2C8:  			Call  SetGoalPos        ( .Actor:Self *Var0 *Var1 *Var2 )
  2E4:  			Call  SetActorJumpGravity       ( .Actor:Self *Fixed[3.0] )
  2F8:  			Call  JumpToGoal        ( .Actor:Self  8` .False .True .False )
  318:  			Call  PlaySoundAtActor  ( .Actor:Self 000020BA )
  32C:  			Call  SetActorRotationOffset    ( .Actor:Self 00000000 00000000 00000000 )
  348:  			Call  SetActorRotation  ( .Actor:Self 00000000 00000000 00000000 )
  364:  			Call  SetActorDispOffset        ( .Actor:Self 00000000 00000000 00000000 )
  380:  			Call  SetAnimation      ( .Actor:Self 00000001 00290101 )
  398:  			Call  SetActorVar       ( .Actor:Self 00000008 00000000 )
  3B0:  			Call  SetIdleAnimations ( .Actor:Self 00000001 $IdleAnimations_802189E0 )
  3C8:  			Call  SetDefenseTable   ( .Actor:Self 00000001 $DefenseTable_802188B0 )
  3E0:  			Call  SetTargetOffset   ( .Actor:Self 00000001  -4`  32` )
  3FC:  			Call  8027D4C8  ( FFFFFF81 00000001 FFFFFFFF FFFFFFFC )
  418:  			Call  SetActorFlagBits  ( .Actor:Self 00000400 .False )
  430:  			Call  ResetActorSounds  ( .Actor:Self .ActorSound:Jump )
  444:  		EndIf
  44C:  		Call  EnableIdleScript  ( .Actor:Self 00000001 )
  460:  		Call  UseIdleAnimation  ( .Actor:Self .True )
  474:  		Return
  47C:  	EndIf
  484:  	Call  UseBattleCamPreset    ( 0000003F )
  494:  	Call  BattleCamTargetActor  ( .Actor:Self )
  4A4:  	Wait  10`
  4B0:  	Call  SetAnimation  ( .Actor:Self 00000001 00290107 )
  4C8:  	Wait  10`
  4D4:  	ChildThread
  4DC:  		Call  GetActorPos   ( .Actor:Self *Var0 *Var1 *Var2 )
  4F8:  		Add   *Var1  00000004
  508:  		Call  PlayEffect    ( ~FX:SmokeImpact:Small *Var0 *Var1 *Var2 00000020 00000004 00000000 0000000A 00000000 00000000 00000000 00000000 00000000 )
  54C:  		Wait  3`
  558:  		Call  PlayEffect    ( ~FX:SmokeImpact:Small *Var0 *Var1 *Var2 00000020 00000004 00000000 0000000A 00000000 00000000 00000000 00000000 00000000 )
  59C:  		Wait  2`
  5A8:  		Call  PlayEffect    ( ~FX:SmokeImpact:Small *Var0 *Var1 *Var2 00000020 00000004 00000000 0000000A 00000000 00000000 00000000 00000000 00000000 )
  5EC:  	EndChildThread
  5F4:  	Call  PlaySoundAtActor  ( .Actor:Self 00002021 )
  608:  	Call  SetAnimation      ( .Actor:Self 00000001 00290106 )
  620:  	Wait  10`
  62C:  	Call  8024ECF8  ( FFFFFFFF 00000001 00000000 )
  644:  EndIf
  64C:  Call  PlaySoundAtActor  ( .Actor:Self 000020D3 )
  660:  Call  SetActorSounds    ( .Actor:Self .ActorSound:Walk 00000000 00000000 )
  67C:  Call  EnemyTestTarget   ( .Actor:Self *Var0 ~Flags:DamageType:0 00000000 00000001 00000010 )
  6A0:  Switch  *Var0
  6AC:  	CaseOR  ==  .HitResult:Miss % 6
  6B8:  	CaseOR  ==  .HitResult:Lucky % 5
  6C4:  		Set   *VarA  *Var0
  6D4:  		Call  SetGoalToTarget   ( .Actor:Self )
  6E4:  		Call  AddGoalPos        ( .Actor:Self  -40`  0`  0` )
  700:  		Call  SetActorSpeed     ( .Actor:Self *Fixed[16.0] )
  714:  		Call  RunToGoal ( .Actor:Self  0` .False )
  72C:  		Call  GetBattlePhase    ( *Var0 )
  73C:  		If  *Var0  ==  00000001
  74C:  			Call  UseBattleCamPreset    ( 00000005 )
  75C:  			Call  SetBattleCamZoom      (  300` )
  76C:  			Call  SetBattleCamOffsetZ   (  20` )
  77C:  			Call  MoveBattleCamOver     (  10` )
  78C:  			Call  8024ECF8  ( FFFFFFFF 00000001 00000000 )
  7A4:  		EndIf
  7AC:  		Call  SetAnimation  ( .Actor:Self 00000001 00290108 )
  7C4:  		Wait  8`
  7D0:  		Call  ResetAllActorSounds   ( .Actor:Self )
  7E0:  		Call  SetActorYaw   ( .Actor:Self  180` )
  7F4:  		Wait  4`
  800:  		If  *VarA  ==  .HitResult:Lucky % 5
  810:  			Call  EnemyTestTarget   ( .Actor:Self *Var0 ~Flags:DamageType:TriggerLucky 00000000 00000000 00000000 )
  834:  		EndIf
  83C:  		Call  SetAnimation  ( .Actor:Self 00000001 00290115 )
  854:  		Wait  1`
  860:  		Call  SetAnimation  ( .Actor:Self 00000001 00290116 )
  878:  		Call  GetActorPos   ( .Actor:Self *Var0 *Var1 *Var2 )
  894:  		Add   *Var1  00000014
  8A4:  		Call  SetGoalPos    ( .Actor:Self *Var0 *Var1 *Var2 )
  8C0:  		Call  SetActorJumpGravity   ( .Actor:Self *Fixed[2.0] )
  8D4:  		Call  JumpToGoal    ( .Actor:Self  5` .False .True .False )
  8F4:  		Call  SetAnimation  ( .Actor:Self 00000001 00290117 )
  90C:  		Wait  6`
  918:  		Sub   *Var1  00000014
  928:  		Call  SetGoalPos    ( .Actor:Self *Var0 *Var1 *Var2 )
  944:  		Call  JumpToGoal    ( .Actor:Self  5` .False .True .False )
  964:  		Call  UseBattleCamPreset    ( 00000002 )
  974:  		Call  YieldTurn ( )
  980:  		Call  SetActorYaw   ( .Actor:Self  180` )
  994:  		Call  AddActorDecoration    ( .Actor:Self 00000001 00000000 .Decoration:Sweat )
  9B0:  		Call  SetAnimation  ( .Actor:Self 00000001 00290117 )
  9C8:  		Call  SetGoalToHome ( .Actor:Self )
  9D8:  		Call  SetActorSpeed ( .Actor:Self *Fixed[8.0] )
  9EC:  		Call  RunToGoal     ( .Actor:Self  0` .False )
  A04:  		Call  SetAnimation  ( .Actor:Self 00000001 00290101 )
  A1C:  		Call  RemoveActorDecoration ( .Actor:Self 00000001 00000000 )
  A34:  		Call  SetPartYaw    ( .Actor:Self 00000001  0` )
  A4C:  		Call  SetActorYaw   ( .Actor:Self  0` )
  A60:  		Call  EnableIdleScript      ( .Actor:Self 00000001 )
  A74:  		Call  UseIdleAnimation      ( .Actor:Self .True )
  A88:  		Return
  A90:  	EndCaseGroup
  A98:  EndSwitch
  AA0:  Call  SetGoalToTarget   ( .Actor:Self )
  AB0:  Call  SetActorSpeed     ( .Actor:Self *Fixed[16.0] )
  AC4:  Call  RunToGoal ( .Actor:Self  0` .False )
  ADC:  Call  ResetAllActorSounds   ( .Actor:Self )
  AEC:  Wait  2`
  AF8:  Call  EnemyDamageTarget ( .Actor:Self *Var0 ~Flags:DamageType:0 0000FFFF 00000000 00000001 00000020 )
  B20:  Switch  *Var0
  B2C:  	CaseOR  ==  .HitResult:Hit % 0
  B38:  	CaseOR  ==  .HitResult:QuakeImmune % 2
  B44:  		Call  UseBattleCamPreset    ( 00000002 )
  B54:  		Call  GetGoalPos    ( .Actor:Self *Var0 *Var1 *Var2 )
  B70:  		Add   *Var0  00000028
  B80:  		Set   *Var1  00000000
  B90:  		Call  SetActorJumpGravity   ( .Actor:Self *Fixed[1.8] )
  BA4:  		Call  SetGoalPos    ( .Actor:Self *Var0 *Var1 *Var2 )
  BC0:  		Call  JumpToGoal    ( .Actor:Self  10` .False .True .False )
  BE0:  		Add   *Var0  0000001E
  BF0:  		Call  SetGoalPos    ( .Actor:Self *Var0 *Var1 *Var2 )
  C0C:  		Call  JumpToGoal    ( .Actor:Self  8` .False .True .False )
  C2C:  		Add   *Var0  00000014
  C3C:  		Call  SetGoalPos    ( .Actor:Self *Var0 *Var1 *Var2 )
  C58:  		Call  JumpToGoal    ( .Actor:Self  6` .False .True .False )
  C78:  		Call  SetAnimation  ( .Actor:Self 00000001 00290108 )
  C90:  		Wait  8`
  C9C:  		Call  YieldTurn ( )
  CA8:  		SetConst  *Var0  00000001
  CB8:  		SetConst  *Var1  00290104
  CC8:  		ExecWait  DoReturnHome
  CD4:  		Call  SetAnimation  ( .Actor:Self 00000001 00290101 )
  CEC:  	EndCaseGroup
  CF4:  EndSwitch
  CFC:  Call  EnableIdleScript  ( .Actor:Self 00000001 )
  D10:  Call  UseIdleAnimation  ( .Actor:Self .True )
  D24:  Return
  D2C:  End
}

#new:DefenseTable $DefenseTable_8021AA20
{
	.Element:Normal 00000000
	.Element:End
}

#new:StatusTable $StatusTable_8021AA2C
{
	.Status:Normal      0`
	.Status:Default     0`
	.Status:Sleep      95`
	.Status:Poison     90`
	.Status:Frozen    100`
	.Status:Dizzy      90`
	.Status:Fear        0`
	.Status:Static     70`
	.Status:Paralyze   75`
	.Status:Shrink     75`
	.Status:Stop      100`
	.Status:DefaultTurnMod    0`
	.Status:SleepTurnMod      0`
	.Status:PoisonTurnMod     0`
	.Status:FrozenTurnMod     0`
	.Status:DizzyTurnMod      0`
	.Status:FearTurnMod       0`
	.Status:StaticTurnMod     0`
	.Status:ParalyzeTurnMod   0`
	.Status:ShrinkTurnMod     0`
	.Status:StopTurnMod       0`
	.Status:End
}

#new:PartsTable $PartsTable_8021AAD8
{
	00800000 01000000 001400FF $IdleAnimations_8021AB24 $DefenseTable_8021AA20 00000000 00000000 00F60000 00000000
}

#new:Actor $Fuzzy
{
	% stats
	[Index]         Ab
	[Level]         6`b
	[MaxHP]         3`b
	[Coins]         1`b
	[Flags]       00000000
	[StatusTable] $StatusTable_8021AA2C
	% ai
	[PartsCount]    1`s
	[PartsTable]  $PartsTable_8021AAD8
	[Script]      $Script_Init_8021AB70
	% move effectiveness
	[Escape]       50`b
	[Item]         95`b
	[AirLift]      95`b
	[Hurricane]    95`b % Bow's "Spook" as well
	[UpAndAway]    95`b
	[PowerBounce] 100`b
	[SpinSmash]     0`b % weight (0-4)
	% ui positions
	[Size]         33`b  28`b % width height
	[HealthBar]     0`b   0`b % dx dy
	[StatusTurn]  -10`b  20`b % dx dy
	[StatusIcon]   10`b  20`b % dx dy
}

#new:IdleAnimations $IdleAnimations_8021AB24
{
	.Status:Normal    002B0001
	.Status:Stone     002B0000
	.Status:Sleep     002B000E
	.Status:Poison    002B0001
	.Status:Stop      002B0000
	.Status:Static    002B0001
	.Status:Paralyze  002B0000
	.Status:Dizzy     002B000F
	.Status:Fear      002B000F
	.Status:End
}

#new:Script $Script_Init_8021AB70
{
    0:  Call  BindTakeTurn      ( .Actor:Self $Script_TakeTurn_8021B230 )
   14:  Call  BindIdle  ( .Actor:Self $Script_Idle_8021ABBC )
   28:  Call  BindHandleEvent   ( .Actor:Self $Script_HandleEvent_8021ABCC )
   3C:  Return
   44:  End
}

#new:Script $Script_Idle_8021ABBC
{
    0:  Return
    8:  End
}

#new:Script $Script_HandleEvent_8021ABCC
{
    0:  Call  UseIdleAnimation  ( .Actor:Self .False )
   14:  Call  EnableIdleScript  ( .Actor:Self 00000000 )
   28:  Call  SetActorScale     ( .Actor:Self *Fixed[1.0] *Fixed[1.0] *Fixed[1.0] )
   44:  Call  GetLastEvent      ( .Actor:Self *Var0 )
   58:  Switch  *Var0
   64:  	CaseOR  ==  .Event:HitCombo % 9
   70:  	CaseOR  ==  .Event:Hit % A
   7C:  		Call  GetLastElement    ( *Var0 )
   8C:  		If  *Var0  &  00000020
   9C:  			SetConst  *Var0  00000001
   AC:  			SetConst  *Var1  002B0013
   BC:  		Else
   C4:  			SetConst  *Var0  00000001
   D4:  			SetConst  *Var1  002B0008
   E4:  		EndIf
   EC:  		ExecWait  DoNormalHit
   F8:  	EndCaseGroup
  100:  	Case  ==  .Event:BurnHit % E
  10C:  		SetConst  *Var0  00000001
  11C:  		SetConst  *Var1  002B0010
  12C:  		SetConst  *Var2  002B0012
  13C:  		ExecWait  DoBurnHit
  148:  	Case  ==  .Event:BurnDeath % 24
  154:  		SetConst  *Var0  00000001
  164:  		SetConst  *Var1  002B0010
  174:  		SetConst  *Var2  002B0012
  184:  		ExecWait  DoBurnHit
  190:  		SetConst  *Var0  00000001
  1A0:  		SetConst  *Var1  002B0012
  1B0:  		ExecWait  DoDeath
  1BC:  		Return
  1C4:  	Case  ==  .Event:SpinSmashHit % B
  1D0:  		SetConst  *Var0  00000001
  1E0:  		SetConst  *Var1  002B0008
  1F0:  		ExecWait  DoSpinSmashHit
  1FC:  	Case  ==  .Event:SpinSmashDeath % 21
  208:  		SetConst  *Var0  00000001
  218:  		SetConst  *Var1  002B0008
  228:  		ExecWait  DoSpinSmashHit
  234:  		SetConst  *Var0  00000001
  244:  		SetConst  *Var1  002B0008
  254:  		ExecWait  DoDeath
  260:  		Return
  268:  	Case  ==  .Event:ShockHit % 2F
  274:  		SetConst  *Var0  00000001
  284:  		SetConst  *Var1  002B0013
  294:  		ExecWait  DoShockHit
  2A0:  		SetConst  *Var0  00000001
  2B0:  		SetConst  *Var1  002B0013
  2C0:  		ExecWait  DoJumpBack
  2CC:  		Call  JumpToGoal    ( .Actor:Self  5` .False .True .False )
  2EC:  		SetConst  *Var0  00000001
  2FC:  		SetConst  *Var1  002B0003
  30C:  		ExecWait  8029C0A4
  318:  		Call  SetActorJumpGravity   ( .Actor:Self *Fixed[1.6] )
  32C:  		Call  JumpToGoal    ( .Actor:Self  5` .False .True .False )
  34C:  	Case  ==  .Event:ShockDeath % 26
  358:  		SetConst  *Var0  00000001
  368:  		SetConst  *Var1  002B0013
  378:  		ExecWait  DoShockHit
  384:  		SetConst  *Var0  00000001
  394:  		SetConst  *Var1  002B0008
  3A4:  		ExecWait  DoDeath
  3B0:  		Return
  3B8:  	CaseOR  ==  00000017 % 17
  3C4:  	CaseOR  ==  .Event:Immune % 19
  3D0:  	CaseOR  ==  .Event:AirLiftFailed % 1F
  3DC:  		SetConst  *Var0  00000001
  3EC:  		SetConst  *Var1  002B0001
  3FC:  		ExecWait  DoImmune
  408:  	EndCaseGroup
  410:  	Case  ==  .Event:Death % 20
  41C:  		Call  GetLastElement    ( *Var0 )
  42C:  		If  *Var0  &  00000020
  43C:  			SetConst  *Var0  00000001
  44C:  			SetConst  *Var1  002B0013
  45C:  			ExecWait  DoNormalHit
  468:  			Wait  10`
  474:  			SetConst  *Var0  00000001
  484:  			SetConst  *Var1  002B0013
  494:  			ExecWait  DoDeath
  4A0:  		Else
  4A8:  			SetConst  *Var0  00000001
  4B8:  			SetConst  *Var1  002B0008
  4C8:  			ExecWait  DoNormalHit
  4D4:  			Wait  10`
  4E0:  			SetConst  *Var0  00000001
  4F0:  			SetConst  *Var1  002B0008
  500:  			ExecWait  DoDeath
  50C:  		EndIf
  514:  		Return
  51C:  	Case  ==  .Event:RecoverStatus % 31
  528:  		SetConst  *Var0  00000001
  538:  		SetConst  *Var1  002B0001
  548:  		ExecWait  DoRecover
  554:  	Case  ==  .Event:ScareAway % 39
  560:  		SetConst  *Var0  00000001
  570:  		SetConst  *Var1  002B0003
  580:  		SetConst  *Var2  002B0009
  590:  		ExecWait  DoScareAway
  59C:  		Return
  5A4:  	Case  ==  .Event:BeginAirLift % 3A
  5B0:  		SetConst  *Var0  00000001
  5C0:  		SetConst  *Var1  002B0003
  5D0:  		ExecWait  DoAirLift
  5DC:  	Case  ==  .Event:BlowAway % 16
  5E8:  		SetConst  *Var0  00000001
  5F8:  		SetConst  *Var1  002B0003
  608:  		ExecWait  DoBlowAway
  614:  		Return
  61C:  	Default
  624:  EndSwitch
  62C:  Call  EnableIdleScript  ( .Actor:Self 00000001 )
  640:  Call  UseIdleAnimation  ( .Actor:Self .True )
  654:  Return
  65C:  End
}

#new:Script $Script_TakeTurn_8021B230
{
    0:  Call  UseIdleAnimation  ( .Actor:Self .False )
   14:  Call  EnableIdleScript  ( .Actor:Self 00000000 )
   28:  Call  SetTargetActor    ( .Actor:Self .Actor:Player )
   3C:  Call  UseBattleCamPreset    ( 0000003F )
   4C:  Call  BattleCamTargetActor  ( .Actor:Self )
   5C:  Call  8024ECF8  ( FFFFFFFF 00000001 00000000 )
   74:  Call  GetBattlePhase    ( *Var0 )
   84:  If  *Var0  ==  00000001
   94:  	Call  SetGoalToTarget   ( .Actor:Self )
   A4:  	Call  GetGoalPos        ( .Actor:Self *Var0 *Var1 *Var2 )
   C0:  	Add   *Var0  00000032
   D0:  	Set   *Var1  00000000
   E0:  	Call  SetActorPos       ( .Actor:Self *Var0 *Var1 *Var2 )
   FC:  	Goto  64
  108:  EndIf
  110:  Call  SetAnimation      ( .Actor:Self 00000001 002B0003 )
  128:  Call  SetGoalToTarget   ( .Actor:Self )
  138:  Call  GetGoalPos        ( .Actor:Self *Var0 *Var1 *Var2 )
  154:  Add   *Var0  00000032
  164:  Set   *Var1  00000000
  174:  Call  SetActorSpeed     ( .Actor:Self *Fixed[6.0] )
  188:  Call  SetActorJumpGravity   ( .Actor:Self *Fixed[1.8] )
  19C:  ExecWait  8029C12C
  1A8:  Call  SetAnimation      ( .Actor:Self 00000001 002B0001 )
  1C0:  Label  64
  1CC:  Call  SetActorDispOffset    ( .Actor:Self 00000000 0000000A 00000000 )
  1E8:  Call  SetAnimation      ( .Actor:Self 00000001 002B0004 )
  200:  Call  SetActorDispOffset    ( .Actor:Self 00000000 00000009 00000000 )
  21C:  Wait  1`
  228:  Call  SetActorDispOffset    ( .Actor:Self 00000000 00000008 00000000 )
  244:  Wait  5`
  250:  Call  EnemyTestTarget   ( .Actor:Self *Var0 ~Flags:DamageType:IgnoreDefense 00000000 00000001 00000010 )
  274:  Switch  *Var0
  280:  	CaseOR  ==  .HitResult:Miss % 6
  28C:  	CaseOR  ==  .HitResult:Lucky % 5
  298:  		Set   *VarA  *Var0
  2A8:  		Call  SetGoalToTarget       ( .Actor:Self )
  2B8:  		Call  GetGoalPos    ( .Actor:Self *Var0 *Var1 *Var2 )
  2D4:  		Sub   *Var0  00000005
  2E4:  		Set   *Var1  00000000
  2F4:  		Sub   *Var2  00000005
  304:  		Call  SetActorJumpGravity   ( .Actor:Self *Fixed[3.0] )
  318:  		Call  SetAnimation  ( .Actor:Self 00000001 002B0005 )
  330:  		Call  SetGoalPos    ( .Actor:Self *Var0 *Var1 *Var2 )
  34C:  		Call  JumpToGoal    ( .Actor:Self  11` .False .True .False )
  36C:  		Call  SetActorDispOffset    ( .Actor:Self 00000000 00000000 00000000 )
  388:  		Call  SetAnimation  ( .Actor:Self 00000001 002B0009 )
  3A0:  		Call  GetGoalPos    ( .Actor:Self *Var0 *Var1 *Var2 )
  3BC:  		Sub   *Var0  00000014
  3CC:  		Call  SetActorJumpGravity   ( .Actor:Self *Fixed[3.0] )
  3E0:  		Call  SetGoalPos    ( .Actor:Self *Var0 *Var1 *Var2 )
  3FC:  		Call  JumpToGoal    ( .Actor:Self  6` .False .True .False )
  41C:  		Call  GetGoalPos    ( .Actor:Self *Var0 *Var1 *Var2 )
  438:  		Sub   *Var0  0000000F
  448:  		Call  SetActorJumpGravity   ( .Actor:Self *Fixed[3.0] )
  45C:  		Call  SetGoalPos    ( .Actor:Self *Var0 *Var1 *Var2 )
  478:  		Call  JumpToGoal    ( .Actor:Self  5` .False .True .False )
  498:  		Call  GetGoalPos    ( .Actor:Self *Var0 *Var1 *Var2 )
  4B4:  		Wait  4`
  4C0:  		Wait  5`
  4CC:  		If  *VarA  ==  .HitResult:Lucky % 5
  4DC:  			Call  EnemyTestTarget   ( .Actor:Self *Var0 ~Flags:DamageType:TriggerLucky 00000000 00000000 00000000 )
  500:  		EndIf
  508:  		Wait  5`
  514:  		Call  UseBattleCamPreset    ( 00000002 )
  524:  		Call  YieldTurn ( )
  530:  		Call  SetActorYaw       ( .Actor:Self  180` )
  544:  		Call  AddActorDecoration    ( .Actor:Self 00000001 00000000 .Decoration:Sweat )
  560:  		Call  SetAnimation      ( .Actor:Self 00000001 002B0003 )
  578:  		Call  SetGoalToHome     ( .Actor:Self )
  588:  		Call  GetGoalPos        ( .Actor:Self *Var0 *Var1 *Var2 )
  5A4:  		Call  SetActorSpeed     ( .Actor:Self *Fixed[8.0] )
  5B8:  		Call  SetActorJumpGravity   ( .Actor:Self *Fixed[1.8] )
  5CC:  		ExecWait  8029C12C
  5D8:  		Call  RemoveActorDecoration ( .Actor:Self 00000001 00000000 )
  5F0:  		Call  SetActorYaw       ( .Actor:Self  0` )
  604:  		Call  EnableIdleScript  ( .Actor:Self 00000001 )
  618:  		Call  UseIdleAnimation  ( .Actor:Self .True )
  62C:  		Return
  634:  	EndCaseGroup
  63C:  	Case  ==  .HitResult:HitStatic % 7
  648:  		Call  GetStatusFlags    ( .Actor:Self *Var0 )
  65C:  		If  *Var0  &  ~Flags:StatusFlags:Static % 2000
  66C:  			Set   *Flag[00]  .False
  67C:  		Else
  684:  			Set   *Flag[00]  .True
  694:  		EndIf
  69C:  EndSwitch
  6A4:  Call  SetGoalToTarget   ( .Actor:Self )
  6B4:  Call  AddGoalPos        ( .Actor:Self  -3`  -12`  -15` )
  6D0:  Call  SetActorJumpGravity   ( .Actor:Self *Fixed[3.0] )
  6E4:  Call  SetAnimation      ( .Actor:Self 00000001 002B0005 )
  6FC:  Call  JumpToGoal        ( .Actor:Self  8` .False .True .False )
  71C:  If  *Flag[00]  ==  .True
  72C:  	Call  EnemyDamageTarget ( .Actor:Self *Var0 ~Flags:DamageType:IgnoreDefense 00000000 00000000 00000000 00000020 )
  754:  	Return
  75C:  EndIf
  764:  Wait  10`
  770:  Call  UseIdleAnimation  ( .Actor:Player .False )
  784:  Call  SetAnimation  ( .Actor:Player 00000000 0003000C )
  79C:  Call  PlaySoundAtActor  ( .Actor:Self 000003E0 )
  7B0:  Call  SetAnimation  ( .Actor:Self 00000001 002B0007 )
  7C8:  Wait  21`
  7D4:  Call  SetAnimation  ( .Actor:Self 00000001 002B0000 )
  7EC:  Call  SetActorRotation  ( .Actor:Self 00000000 00000000 0000014A )
  808:  Call  PlaySoundAtActor  ( .Actor:Self 000003E0 )
  81C:  Call  SetActorDispOffset    ( .Actor:Self FFFFFFFD FFFFFFFE 00000000 )
  838:  Call  SetActorScale ( .Actor:Self *Fixed[1.0] *Fixed[1.0] *Fixed[1.0] )
  854:  Wait  1`
  860:  Call  SetActorScale ( .Actor:Self *Fixed[0.9] *Fixed[1.2] *Fixed[1.0] )
  87C:  Wait  1`
  888:  Call  SetActorScale ( .Actor:Self *Fixed[0.8] *Fixed[1.3] *Fixed[1.0] )
  8A4:  Wait  1`
  8B0:  Call  SetActorScale ( .Actor:Self *Fixed[0.7] *Fixed[1.4] *Fixed[1.0] )
  8CC:  Wait  1`
  8D8:  Call  SetActorScale ( .Actor:Self *Fixed[0.7] *Fixed[1.5] *Fixed[1.0] )
  8F4:  Wait  2`
  900:  Call  SetActorScale ( .Actor:Self *Fixed[0.6] *Fixed[1.6] *Fixed[1.0] )
  91C:  Wait  10`
  928:  Wait  2`
  934:  Call  EnemyDamageTarget ( .Actor:Self *Var0 ~Flags:DamageType:IgnoreDefense 00000000 00000000 00000001 00000020 )
  95C:  Call  SetActorDispOffset    ( .Actor:Self 00000000 00000000 00000000 )
  978:  Call  SetAnimation  ( .Actor:Self 00000001 002B0001 )
  990:  Switch  *Var0
  99C:  	CaseOR  ==  .HitResult:Hit % 0
  9A8:  	CaseOR  ==  .HitResult:QuakeImmune % 2
  9B4:  		Call  UseBattleCamPreset    ( 00000002 )
  9C4:  		Call  GetLastDamage ( .Actor:Player *Var3 )
  9D8:  		If  *Var3  !=  00000000
  9E8:  			Call  PlaySoundAtActor  ( .Actor:Self 0000206D )
  9FC:  			Call  PlaySoundAtActor  ( .Actor:Self 00000214 )
  A10:  			Call  GetActorPos       ( .Actor:Self *Var0 *Var1 *Var2 )
  A2C:  			Add   *Var1  0000000A
  A3C:  			Call  $Function_802180D0    ( *Var0 *Var1 *Var2 *Var3 )
  A58:  			Thread
  A60:  				Wait  15`
  A6C:  				Call  PlaySoundAtActor      ( .Actor:Self 0000025C )
  A80:  				Call  $Function_80218184    ( *Var0 *Var1 *Var2 *Var3 )
  A9C:  			EndThread
  AA4:  			Add   *Var0  00000014
  AB4:  			Add   *Var1  00000014
  AC4:  			Call  PlayEffect    ( ~FX:Recover:HP *Var0 *Var1 *Var2 *Var3 00000000 00000000 00000000 00000000 00000000 00000000 00000000 00000000 )
  B08:  			Call  GetActorHP    ( .Actor:Self *Var0 )
  B1C:  			Add   *Var0  *Var3
  B2C:  			Call  SetEnemyHP    ( .Actor:Self *Var0 )
  B40:  		EndIf
  B48:  		Thread
  B50:  			Call  SetActorScale     ( .Actor:Self *Fixed[1.6] *Fixed[0.6] *Fixed[1.0] )
  B6C:  			Call  SetActorRotationOffset    ( .Actor:Self 00000000 0000000A 00000000 )
  B88:  			Wait  1`
  B94:  			Call  SetActorRotation  ( .Actor:Self 00000000 00000000 0000014A )
  BB0:  			Wait  1`
  BBC:  			Call  SetActorScale     ( .Actor:Self *Fixed[0.7] *Fixed[1.5] *Fixed[1.0] )
  BD8:  			Call  SetActorRotation  ( .Actor:Self 00000000 00000000 0000012C )
  BF4:  			Wait  1`
  C00:  			Call  SetActorRotation  ( .Actor:Self 00000000 00000000 0000010E )
  C1C:  			Wait  1`
  C28:  			Call  SetActorScale     ( .Actor:Self *Fixed[1.0] *Fixed[0.7] *Fixed[1.0] )
  C44:  			Call  SetActorRotation  ( .Actor:Self 00000000 00000000 000000F0 )
  C60:  			Wait  1`
  C6C:  			Call  SetActorRotation  ( .Actor:Self 00000000 00000000 000000D2 )
  C88:  			Wait  1`
  C94:  			Call  SetActorScale     ( .Actor:Self *Fixed[0.7] *Fixed[1.4] *Fixed[1.0] )
  CB0:  			Call  SetActorRotation  ( .Actor:Self 00000000 00000000 000000B4 )
  CCC:  			Wait  2`
  CD8:  			Call  SetActorScale     ( .Actor:Self *Fixed[1.0] *Fixed[0.7] *Fixed[1.0] )
  CF4:  			Wait  2`
  D00:  			Call  SetActorScale     ( .Actor:Self *Fixed[1.2] *Fixed[0.5] *Fixed[1.0] )
  D1C:  		EndThread
  D24:  		Call  GetGoalPos    ( .Actor:Self *Var0 *Var1 *Var2 )
  D40:  		Add   *Var0  00000028
  D50:  		Set   *Var1  00000000
  D60:  		Call  SetActorJumpGravity   ( .Actor:Self *Fixed[1.8] )
  D74:  		Call  SetGoalPos    ( .Actor:Self *Var0 *Var1 *Var2 )
  D90:  		Call  JumpToGoal    ( .Actor:Self  10` .False .True .False )
  DB0:  		Call  SetActorScale ( .Actor:Self *Fixed[1.4] *Fixed[0.2] *Fixed[1.0] )
  DCC:  		Wait  1`
  DD8:  		Thread
  DE0:  			Wait  1`
  DEC:  			Call  SetActorScale     ( .Actor:Self *Fixed[1.2] *Fixed[0.5] *Fixed[1.0] )
  E08:  			Call  SetActorRotation  ( .Actor:Self 00000000 00000000 00000096 )
  E24:  			Wait  1`
  E30:  			Call  SetActorScale     ( .Actor:Self *Fixed[1.0] *Fixed[1.0] *Fixed[1.0] )
  E4C:  			Call  SetActorRotation  ( .Actor:Self 00000000 00000000 00000078 )
  E68:  			Wait  1`
  E74:  			Call  SetActorRotation  ( .Actor:Self 00000000 00000000 0000005A )
  E90:  			Wait  1`
  E9C:  			Call  SetActorRotation  ( .Actor:Self 00000000 00000000 0000003C )
  EB8:  			Wait  1`
  EC4:  			Call  SetActorRotation  ( .Actor:Self 00000000 00000000 0000001E )
  EE0:  			Wait  1`
  EEC:  			Call  SetActorRotation  ( .Actor:Self 00000000 00000000 00000000 )
  F08:  			Call  SetActorRotationOffset    ( .Actor:Self 00000000 00000000 00000000 )
  F24:  		EndThread
  F2C:  		Call  GetGoalPos    ( .Actor:Self *Var0 *Var1 *Var2 )
  F48:  		Add   *Var0  0000001E
  F58:  		Call  SetGoalPos    ( .Actor:Self *Var0 *Var1 *Var2 )
  F74:  		Call  JumpToGoal    ( .Actor:Self  8` .False .True .False )
  F94:  		Wait  5`
  FA0:  		Call  YieldTurn ( )
  FAC:  		Call  SetActorDispOffset    ( .Actor:Self 00000000 00000000 00000000 )
  FC8:  		Call  SetAnimation  ( .Actor:Self 00000001 002B0003 )
  FE0:  		Call  SetGoalToHome ( .Actor:Self )
  FF0:  		Call  GetGoalPos    ( .Actor:Self *Var0 *Var1 *Var2 )
 100C:  		Call  SetActorSpeed ( .Actor:Self *Fixed[8.0] )
 1020:  		Call  SetActorJumpGravity   ( .Actor:Self *Fixed[1.8] )
 1034:  		ExecWait  8029C12C
 1040:  		Call  SetAnimation  ( .Actor:Self 00000001 002B0001 )
 1058:  	EndCaseGroup
 1060:  EndSwitch
 1068:  Call  EnableIdleScript  ( .Actor:Self 00000001 )
 107C:  Call  UseIdleAnimation  ( .Actor:Self .True )
 1090:  Return
 1098:  End
}

#new:DefenseTable $DefenseTable_8021C2D0
{
	.Element:Normal 00000000
	.Element:End
}

#new:StatusTable $StatusTable_8021C2DC
{
	.Status:Normal      0`
	.Status:Default     0`
	.Status:Sleep      90`
	.Status:Poison      0`
	.Status:Frozen      0`
	.Status:Dizzy      90`
	.Status:Fear        0`
	.Status:Static      0`
	.Status:Paralyze  100`
	.Status:Shrink     90`
	.Status:Stop      100`
	.Status:DefaultTurnMod    0`
	.Status:SleepTurnMod      0`
	.Status:PoisonTurnMod     0`
	.Status:FrozenTurnMod     0`
	.Status:DizzyTurnMod      0`
	.Status:FearTurnMod       0`
	.Status:StaticTurnMod     0`
	.Status:ParalyzeTurnMod   0`
	.Status:ShrinkTurnMod     0`
	.Status:StopTurnMod       0`
	.Status:End
}

#new:PartsTable $PartsTable_8021C388
{
	00020000 01000000 001400FF $IdleAnimations_8021C488 $DefenseTable_8021C2D0 00200010 00000000 00000000 00000000
	00800001 02000000 004800FF 00000000 $DefenseTable_8021C2D0 00200010 00000000 00F80000 00000000
	00020001 03000000 003600FF 00000000 $DefenseTable_8021C2D0 00200010 00000000 00F80000 00000000
	00020001 04000000 002400FF 00000000 $DefenseTable_8021C2D0 00200010 00000000 00F80000 00000000
	00020001 05000000 001000FF 00000000 $DefenseTable_8021C2D0 00200010 00000000 00F80000 00000000
	00120001 06000000 000000FF $IdleAnimations_8021C578 $DefenseTable_8021C2D0 00200010 00000000 00000000 00000000
}

#new:Actor $Pokey
{
	% stats
	[Index]        14b
	[Level]         9`b
	[MaxHP]         4`b
	[Coins]         1`b
	[Flags]       00000000
	[StatusTable] $StatusTable_8021C2DC
	% ai
	[PartsCount]    6`s
	[PartsTable]  $PartsTable_8021C388
	[Script]      $Script_Init_8021C584
	% move effectiveness
	[Escape]       70`b
	[Item]         70`b
	[AirLift]      90`b
	[Hurricane]    85`b % Bow's "Spook" as well
	[UpAndAway]    95`b
	[PowerBounce] 100`b
	[SpinSmash]     0`b % weight (0-4)
	% ui positions
	[Size]         24`b  80`b % width height
	[HealthBar]     0`b   0`b % dx dy
	[StatusTurn]  -15`b  75`b % dx dy
	[StatusIcon]   10`b  65`b % dx dy
}

#new:IdleAnimations $IdleAnimations_8021C488
{
	.Status:Normal    00310004
	.Status:Stone     00310000
	.Status:Sleep     00310025
	.Status:Stop      00310000
	.Status:Paralyze  00310000
	.Status:Dizzy     00310021
	.Status:Fear      00310021
	.Status:End
}

#new:IdleAnimations $IdleAnimations_8021C4C4
{
	.Status:Normal    00310005
	.Status:Stone     00310001
	.Status:Sleep     00310026
	.Status:Stop      00310001
	.Status:Paralyze  00310001
	.Status:Dizzy     00310022
	.Status:Fear      00310022
	.Status:End
}

#new:IdleAnimations $IdleAnimations_8021C500
{
	.Status:Normal    00310006
	.Status:Stone     00310002
	.Status:Sleep     00310027
	.Status:Stop      00310002
	.Status:Paralyze  00310002
	.Status:Dizzy     00310023
	.Status:Fear      00310023
	.Status:End
}

#new:IdleAnimations $IdleAnimations_8021C53C
{
	.Status:Normal    00310007
	.Status:Stone     00310003
	.Status:Sleep     00310028
	.Status:Stop      00310003
	.Status:Paralyze  00310003
	.Status:Dizzy     00310024
	.Status:Fear      00310024
	.Status:End
}

#new:IdleAnimations $IdleAnimations_8021C578
{
	.Status:Normal    00310016
	.Status:End
}

#new:Script $Script_Init_8021C584
{
    0:  Call  BindTakeTurn  ( .Actor:Self $Script_TakeTurn_8021E068 )
   14:  Call  BindIdle      ( .Actor:Self $Script_Idle_8021C700 )
   28:  Call  BindHandleEvent   ( .Actor:Self $Script_HandleEvent_8021C710 )
   3C:  Call  SetActorVar   ( .Actor:Self 0000000A 00000000 )
   54:  Call  GetActorVar   ( .Actor:Self 00000001 *Var0 )
   6C:  Call  SetActorVar   ( .Actor:Self 00000009 *Var0 )
   84:  Call  SetActorVar   ( .Actor:Self 00000000 00000000 )
   9C:  Call  SetActorVar   ( .Actor:Self 00000001 00310004 )
   B4:  Call  SetActorVar   ( .Actor:Self 00000002 00310008 )
   CC:  Call  SetActorVar   ( .Actor:Self 00000003 0031000C )
   E4:  Call  SetActorVar   ( .Actor:Self 00000004 00310010 )
   FC:  Call  SetActorVar   ( .Actor:Self 00000005 00310011 )
  114:  Call  SetActorVar   ( .Actor:Self 00000006 00310018 )
  12C:  Call  SetActorVar   ( .Actor:Self 00000007 00310019 )
  144:  Call  EnableIdleScript  ( .Actor:Self 00000001 )
  158:  Call  UseIdleAnimation  ( .Actor:Self .True )
  16C:  Return
  174:  End
}

#new:Script $Script_Idle_8021C700
{
    0:  Return
    8:  End
}

#new:Script $Script_HandleEvent_8021C710
{
    0:  Call  UseIdleAnimation  ( .Actor:Self .False )
   14:  Call  EnableIdleScript  ( .Actor:Self 00000000 )
   28:  Call  GetLastEvent      ( .Actor:Self *Var0 )
   3C:  Switch  *Var0
   48:  	Case  ==  .Event:HitCombo % 9
   54:  		SetConst  *Var0  00000001
   64:  		Call  GetActorVar   ( .Actor:Self 00000003 *Var1 )
   7C:  		ExecWait  DoNormalHit
   88:  	Case  ==  .Event:Hit % A
   94:  		Call  GetStatusFlags    ( .Actor:Self *Var0 )
   A8:  		If  *Var0  &  ~Flags:StatusFlags:Shrink % 80000
   B8:  			SetConst  *Var0  00000001
   C8:  			Call  GetActorVar   ( .Actor:Self 00000003 *Var1 )
   E0:  			ExecWait  DoNormalHit
   EC:  		Else
   F4:  			Call  GetActorVar   ( .Actor:Self 00000000 *VarA )
  10C:  			If  *VarA  ==  00000003
  11C:  				SetConst  *Var0  00000001
  12C:  				Call  GetActorVar   ( .Actor:Self 00000003 *Var1 )
  144:  				ExecWait  DoNormalHit
  150:  			Else
  158:  				Call  80269E80  ( *Var0 )
  168:  				Switch  *Var0
  174:  					CaseOR  ==  00000006
  180:  					CaseOR  ==  00000007
  18C:  					CaseOR  ==  00000009
  198:  						ExecWait  $Script_80220CFC
  1A4:  					EndCaseGroup
  1AC:  					Default
  1B4:  						SetConst  *Var0  00000001
  1C4:  						Call  GetActorVar   ( .Actor:Self 00000003 *Var1 )
  1DC:  						ExecWait  DoNormalHit
  1E8:  				EndSwitch
  1F0:  			EndIf
  1F8:  		EndIf
  200:  	Case  ==  .Event:Death % 20
  20C:  		Call  GetStatusFlags    ( .Actor:Self *Var0 )
  220:  		If  *Var0  &  ~Flags:StatusFlags:Shrink % 80000
  230:  			SetConst  *Var0  00000001
  240:  			Call  GetActorVar   ( .Actor:Self 00000003 *Var1 )
  258:  			ExecWait  DoNormalHit
  264:  			Wait  10`
  270:  		Else
  278:  			Call  GetActorVar   ( .Actor:Self 00000000 *VarA )
  290:  			If  *VarA  ==  00000003
  2A0:  				SetConst  *Var0  00000001
  2B0:  				Call  GetActorVar   ( .Actor:Self 00000003 *Var1 )
  2C8:  				ExecWait  DoNormalHit
  2D4:  				Wait  10`
  2E0:  			Else
  2E8:  				Call  80269E80  ( *Var0 )
  2F8:  				Switch  *Var0
  304:  					CaseOR  ==  00000006
  310:  					CaseOR  ==  00000007
  31C:  					CaseOR  ==  00000009
  328:  						ExecWait  $Script_80220CFC
  334:  					EndCaseGroup
  33C:  					Default
  344:  						SetConst  *Var0  00000001
  354:  						Call  GetActorVar   ( .Actor:Self 00000003 *Var1 )
  36C:  						ExecWait  DoNormalHit
  378:  						Wait  10`
  384:  				EndSwitch
  38C:  			EndIf
  394:  		EndIf
  39C:  		SetConst  *Var0  00000001
  3AC:  		Call  GetActorVar   ( .Actor:Self 00000003 *Var1 )
  3C4:  		ExecWait  DoDeath
  3D0:  		Return
  3D8:  	Case  ==  .Event:BurnHit % E
  3E4:  		Call  GetActorVar       ( .Actor:Self 00000006 *Var1 )
  3FC:  		Call  GetActorVar       ( .Actor:Self 00000007 *Var2 )
  414:  		SetConst  *Var0  00000001
  424:  		Call  GetStatusFlags    ( .Actor:Self *Var3 )
  438:  		If  *Var3  &  ~Flags:StatusFlags:Shrink % 80000
  448:  			ExecWait  DoBurnHit
  454:  		Else
  45C:  			Call  GetActorVar   ( .Actor:Self 00000000 *VarA )
  474:  			If  *VarA  ==  00000003
  484:  				ExecWait  DoBurnHit
  490:  			Else
  498:  				Call  80269E80  ( *VarA )
  4A8:  				Switch  *VarA
  4B4:  					CaseOR  ==  00000006
  4C0:  					CaseOR  ==  00000007
  4CC:  					CaseOR  ==  00000009
  4D8:  						ExecWait  $Script_80220CFC
  4E4:  					EndCaseGroup
  4EC:  					Default
  4F4:  						ExecWait  DoBurnHit
  500:  				EndSwitch
  508:  			EndIf
  510:  		EndIf
  518:  	CaseOR  ==  .Event:BurnDeath % 24
  524:  		Call  GetActorVar       ( .Actor:Self 00000006 *Var1 )
  53C:  		Call  GetActorVar       ( .Actor:Self 00000007 *Var2 )
  554:  		SetConst  *Var0  00000001
  564:  		Call  GetStatusFlags    ( .Actor:Self *Var3 )
  578:  		If  *Var3  &  ~Flags:StatusFlags:Shrink % 80000
  588:  			ExecWait  DoBurnHit
  594:  		Else
  59C:  			Call  GetActorVar   ( .Actor:Self 00000000 *VarA )
  5B4:  			If  *VarA  ==  00000003
  5C4:  				ExecWait  DoBurnHit
  5D0:  			Else
  5D8:  				Call  80269E80  ( *VarA )
  5E8:  				Switch  *VarA
  5F4:  					CaseOR  ==  00000006
  600:  					CaseOR  ==  00000007
  60C:  					CaseOR  ==  00000009
  618:  						ExecWait  $Script_80220CFC
  624:  					EndCaseGroup
  62C:  					Default
  634:  						ExecWait  DoBurnHit
  640:  				EndSwitch
  648:  			EndIf
  650:  		EndIf
  658:  		SetConst  *Var0  00000001
  668:  		Call  GetActorVar   ( .Actor:Self 00000007 *Var1 )
  680:  		ExecWait  DoDeath
  68C:  		Return
  694:  	Case  ==  .Event:SpinSmashHit % B
  6A0:  		ExecWait  $Script_8021FFA0
  6AC:  	Case  ==  .Event:SpinSmashDeath % 21
  6B8:  		ExecWait  $Script_8021FFA0
  6C4:  		SetConst  *Var0  00000001
  6D4:  		Call  GetActorVar   ( .Actor:Self 00000003 *Var1 )
  6EC:  		ExecWait  DoDeath
  6F8:  		Return
  700:  	Case  ==  .Event:SpinSmashLaunchHit % 11
  70C:  		Call  GetStatusFlags    ( .Actor:Self *Var3 )
  720:  		If  *Var3  &  ~Flags:StatusFlags:Shrink % 80000
  730:  			SetConst  *Var0  00000001
  740:  			Call  GetActorVar   ( .Actor:Self 00000003 *Var1 )
  758:  			ExecWait  DoNormalHit
  764:  		Else
  76C:  			ExecWait  $Script_80220CFC
  778:  		EndIf
  780:  	Case  ==  00000025 % 25
  78C:  		Call  GetStatusFlags    ( .Actor:Self *Var3 )
  7A0:  		If  *Var3  &  ~Flags:StatusFlags:Shrink % 80000
  7B0:  			SetConst  *Var0  00000001
  7C0:  			Call  GetActorVar   ( .Actor:Self 00000003 *Var1 )
  7D8:  			ExecWait  DoNormalHit
  7E4:  		Else
  7EC:  			ExecWait  $Script_80220CFC
  7F8:  		EndIf
  800:  		SetConst  *Var0  00000001
  810:  		SetConst  *Var1  FFFFFFFF
  820:  		ExecWait  DoDeath
  82C:  		Return
  834:  	Case  ==  .Event:ShockHit % 2F
  840:  		Call  SetActorRotation      ( .Actor:Self 00000000 00000000 00000000 )
  85C:  		SetConst  *Var0  00000001
  86C:  		Call  GetActorVar   ( .Actor:Self 00000003 *Var1 )
  884:  		ExecWait  DoShockHit
  890:  		Call  GetActorVar   ( .Actor:Self 00000002 *Var1 )
  8A8:  		Call  SetAnimation  ( .Actor:Self 00000001 *Var1 )
  8C0:  		Call  SetGoalToHome ( .Actor:Self )
  8D0:  		Call  GetGoalPos    ( .Actor:Self *Var0 *Var1 *Var2 )
  8EC:  		Call  SetActorSpeed ( .Actor:Self *Fixed[4.0] )
  900:  		Call  SetActorJumpGravity   ( .Actor:Self *Fixed[2.0] )
  914:  		ExecWait  8029C12C
  920:  	Case  ==  .Event:ShockDeath % 26
  92C:  		Call  SetActorRotation  ( .Actor:Self 00000000 00000000 00000000 )
  948:  		SetConst  *Var0  00000001
  958:  		Call  GetActorVar       ( .Actor:Self 00000003 *Var1 )
  970:  		ExecWait  DoShockHit
  97C:  		SetConst  *Var0  00000001
  98C:  		Call  GetActorVar       ( .Actor:Self 00000003 *Var1 )
  9A4:  		ExecWait  DoDeath
  9B0:  		Return
  9B8:  	CaseOR  ==  00000017 % 17
  9C4:  	CaseOR  ==  .Event:Immune % 19
  9D0:  		SetConst  *Var0  00000001
  9E0:  		Call  GetActorVar   ( .Actor:Self 00000001 *Var1 )
  9F8:  		ExecWait  DoImmune
  A04:  	EndCaseGroup
  A0C:  	Case  ==  .Event:SpikeTaunt % 1B
  A18:  		Call  GetActorVar   ( .Actor:Self 00000000 *Var0 )
  A30:  		Switch  *Var0
  A3C:  			Case  ==  00000000
  A48:  				Set   *Var0  00000000
  A58:  				Set   *Var1  0000004D
  A68:  				SetConst  *Var2  00310021
  A78:  			Case  ==  00000001
  A84:  				Set   *Var0  00000000
  A94:  				Set   *Var1  0000003B
  AA4:  				SetConst  *Var2  00310022
  AB4:  			Case  ==  00000002
  AC0:  				Set   *Var0  00000000
  AD0:  				Set   *Var1  00000029
  AE0:  				SetConst  *Var2  00310023
  AF0:  			Case  ==  00000003
  AFC:  				Set   *Var0  00000000
  B0C:  				Set   *Var1  00000017
  B1C:  				SetConst  *Var2  00310024
  B2C:  		EndSwitch
  B34:  		Call  GetStatusFlags    ( .Actor:Self *Var3 )
  B48:  		If  *Var3  !&  ~Flags:StatusFlags:Sleep % 1000
  B58:  			Call  SetAnimation  ( .Actor:Self 00000001 *Var2 )
  B70:  		EndIf
  B78:  		Call  GetActorPos       ( .Actor:Self *Var3 *Var4 *Var5 )
  B94:  		Call  GetStatusFlags    ( .Actor:Self *Var6 )
  BA8:  		If  *Var6  &  ~Flags:StatusFlags:Shrink % 80000
  BB8:  			MulF  *Var0  *Fixed[0.4]
  BC8:  			MulF  *Var1  *Fixed[0.4]
  BD8:  		EndIf
  BE0:  		AddF  *Var3  *Var0
  BF0:  		AddF  *Var4  *Var1
  C00:  		Call  PlayEffect    ( ~FX:LensFlare:Rotating *Var3 *Var4 *Var5 00000014 00000000 00000000 00000000 00000000 00000000 00000000 00000000 00000000 )
  C44:  		Wait  30`
  C50:  	Case  ==  .Event:RecoverStatus % 31
  C5C:  		SetConst  *Var0  00000001
  C6C:  		Call  GetActorVar   ( .Actor:Self 00000001 *Var1 )
  C84:  		ExecWait  DoRecover
  C90:  	Case  ==  .Event:ScareAway % 39
  C9C:  		ExecWait  $Script_802211D4
  CA8:  		Return
  CB0:  	Default
  CB8:  EndSwitch
  CC0:  Call  EnableIdleScript  ( .Actor:Self 00000001 )
  CD4:  Call  UseIdleAnimation  ( .Actor:Self .True )
  CE8:  Return
  CF0:  End
}

#new:Script $Script_8021D408
{
    0:  Call  UseIdleAnimation  ( .Actor:Self .False )
   14:  Call  EnableIdleScript  ( .Actor:Self 00000000 )
   28:  Call  SetTargetActor    ( .Actor:Self .Actor:Player )
   3C:  Call  UseBattleCamPreset    ( 0000003F )
   4C:  Call  BattleCamTargetActor  ( .Actor:Self )
   5C:  Call  8024ECF8  ( FFFFFFFF 00000001 00000000 )
   74:  Call  SetGoalToTarget   ( .Actor:Self )
   84:  Call  GetActorVar       ( .Actor:Self 00000000 *Var0 )
   9C:  Switch  *Var0
   A8:  	Case  ==  00000000
   B4:  		Call  GetStatusFlags    ( .Actor:Self *Var0 )
   C8:  		If  *Var0  !&  ~Flags:StatusFlags:Shrink % 80000
   D8:  			Call  AddGoalPos    ( .Actor:Self  60`  0`  0` )
   F4:  		Else
   FC:  			Call  AddGoalPos    ( .Actor:Self  24`  0`  0` )
  118:  		EndIf
  120:  		Call  SetAnimation  ( .Actor:Self 00000001 00310008 )
  138:  		Call  SetActorSpeed ( .Actor:Self *Fixed[4.0] )
  14C:  		Call  RunToGoal     ( .Actor:Self  0` .False )
  164:  		Call  SetAnimation  ( .Actor:Self 00000001 00310004 )
  17C:  	Case  ==  00000001
  188:  		Call  GetStatusFlags    ( .Actor:Self *Var0 )
  19C:  		If  *Var0  !&  ~Flags:StatusFlags:Shrink % 80000
  1AC:  			Call  AddGoalPos    ( .Actor:Self  40`  0`  0` )
  1C8:  		Else
  1D0:  			Call  AddGoalPos    ( .Actor:Self  16`  0`  0` )
  1EC:  		EndIf
  1F4:  		Call  SetAnimation  ( .Actor:Self 00000001 00310009 )
  20C:  		Call  SetActorSpeed ( .Actor:Self *Fixed[4.0] )
  220:  		Call  RunToGoal     ( .Actor:Self  0` .False )
  238:  		Call  SetAnimation  ( .Actor:Self 00000001 00310005 )
  250:  	Case  ==  00000002
  25C:  		Call  GetStatusFlags    ( .Actor:Self *Var0 )
  270:  		If  *Var0  !&  ~Flags:StatusFlags:Shrink % 80000
  280:  			Call  AddGoalPos    ( .Actor:Self  20`  0`  0` )
  29C:  		Else
  2A4:  			Call  AddGoalPos    ( .Actor:Self  8`  0`  0` )
  2C0:  		EndIf
  2C8:  		Call  SetAnimation  ( .Actor:Self 00000001 0031000A )
  2E0:  		Call  SetActorSpeed ( .Actor:Self *Fixed[4.0] )
  2F4:  		Call  RunToGoal     ( .Actor:Self  0` .False )
  30C:  		Call  SetAnimation  ( .Actor:Self 00000001 00310006 )
  324:  EndSwitch
  32C:  Call  PlaySoundAtActor  ( .Actor:Self 00000342 )
  340:  Call  MakeLerp  ( 00000000 FFFFFFD8 00000014 .Easing:CosInOut )
  35C:  Label  0
  368:  Call  UpdateLerp ( )
  374:  Call  SetActorRotation  ( .Actor:Self 00000000 00000000 *Var0 )
  390:  Wait  1`
  39C:  If  *Var1  ==  00000001
  3AC:  	Goto  0
  3B8:  EndIf
  3C0:  ChildThread
  3C8:  	Wait  3`
  3D4:  	Call  PlaySoundAtActor  ( .Actor:Self 000002ED )
  3E8:  EndChildThread
  3F0:  Call  MakeLerp  ( FFFFFFD8 0000005A 00000005 .Easing:QuadraticIn )
  40C:  Label  3
  418:  Call  UpdateLerp ( )
  424:  Call  SetActorRotation  ( .Actor:Self 00000000 00000000 *Var0 )
  440:  Wait  1`
  44C:  If  *Var1  ==  00000001
  45C:  	Goto  3
  468:  EndIf
  470:  Call  EnemyTestTarget   ( .Actor:Self *Var0 ~Flags:DamageType:0 00000000 00000000 00000020 )
  494:  Switch  *Var0
  4A0:  	CaseOR  ==  .HitResult:Miss % 6
  4AC:  	CaseOR  ==  .HitResult:Lucky % 5
  4B8:  		Set   *VarA  *Var0
  4C8:  		Call  MakeLerp  ( 0000005A 00000000 00000005 .Easing:Linear )
  4E4:  		Label  4
  4F0:  		Call  UpdateLerp ( )
  4FC:  		Call  SetActorRotation  ( .Actor:Self 00000000 00000000 *Var0 )
  518:  		Wait  1`
  524:  		If  *Var1  ==  00000001
  534:  			Goto  4
  540:  		EndIf
  548:  		If  *VarA  ==  .HitResult:Lucky % 5
  558:  			Call  EnemyTestTarget   ( .Actor:Self *Var0 ~Flags:DamageType:TriggerLucky 00000000 00000000 00000000 )
  57C:  		EndIf
  584:  		Call  YieldTurn ( )
  590:  		Call  UseBattleCamPreset    ( 00000002 )
  5A0:  		Call  AddActorDecoration    ( .Actor:Self 00000001 00000000 .Decoration:Sweat )
  5BC:  		Call  GetActorVar   ( .Actor:Self 00000000 *Var0 )
  5D4:  		Switch  *Var0
  5E0:  			Case  ==  00000000
  5EC:  				Call  SetAnimation  ( .Actor:Self 00000001 00310008 )
  604:  				Call  SetActorSpeed ( .Actor:Self *Fixed[8.0] )
  618:  				Call  SetGoalToHome ( .Actor:Self )
  628:  				Call  RunToGoal     ( .Actor:Self  0` .False )
  640:  				Call  SetAnimation  ( .Actor:Self 00000001 00310004 )
  658:  			Case  ==  00000001
  664:  				Call  SetAnimation  ( .Actor:Self 00000001 00310009 )
  67C:  				Call  SetActorSpeed ( .Actor:Self *Fixed[8.0] )
  690:  				Call  SetGoalToHome ( .Actor:Self )
  6A0:  				Call  RunToGoal     ( .Actor:Self  0` .False )
  6B8:  				Call  SetAnimation  ( .Actor:Self 00000001 00310005 )
  6D0:  			Case  ==  00000002
  6DC:  				Call  SetAnimation  ( .Actor:Self 00000001 0031000A )
  6F4:  				Call  SetActorSpeed ( .Actor:Self *Fixed[8.0] )
  708:  				Call  SetGoalToHome ( .Actor:Self )
  718:  				Call  RunToGoal     ( .Actor:Self  0` .False )
  730:  				Call  SetAnimation  ( .Actor:Self 00000001 00310006 )
  748:  		EndSwitch
  750:  		Call  RemoveActorDecoration ( .Actor:Self 00000001 00000000 )
  768:  		Call  EnableIdleScript      ( .Actor:Self 00000001 )
  77C:  		Call  UseIdleAnimation      ( .Actor:Self .True )
  790:  		Return
  798:  EndSwitch
  7A0:  Call  GetActorVar   ( .Actor:Self 00000000 *Var0 )
  7B8:  Switch  *Var0
  7C4:  	Case  ==  00000000
  7D0:  		Set   *Var1  00000002
  7E0:  	Case  ==  00000001
  7EC:  		Set   *Var1  00000002
  7FC:  	Default
  804:  		Set   *Var1  00000002
  814:  EndSwitch
  81C:  Call  SetGoalToTarget   ( .Actor:Self )
  82C:  Wait  2`
  838:  Call  EnemyDamageTarget ( .Actor:Self *Var0 ~Flags:DamageType:0 00000000 ~DebuffType:Poison:3:0` *Var1 00000020 )
  860:  Switch  *Var0
  86C:  	CaseOR  ==  .HitResult:Hit % 0
  878:  	CaseOR  ==  .HitResult:QuakeImmune % 2
  884:  		Call  UseBattleCamPreset    ( 00000002 )
  894:  		Call  MakeLerp  ( 0000005A 00000000 0000000A .Easing:Linear )
  8B0:  		Label  5
  8BC:  		Call  UpdateLerp ( )
  8C8:  		Call  SetActorRotation      ( .Actor:Self 00000000 00000000 *Var0 )
  8E4:  		Wait  1`
  8F0:  		If  *Var1  ==  00000001
  900:  			Goto  5
  90C:  		EndIf
  914:  		Call  YieldTurn ( )
  920:  		Call  GetActorVar   ( .Actor:Self 00000000 *Var0 )
  938:  		Switch  *Var0
  944:  			Case  ==  00000000
  950:  				Call  SetAnimation  ( .Actor:Self 00000001 00310008 )
  968:  				Call  SetActorSpeed ( .Actor:Self *Fixed[8.0] )
  97C:  				Call  SetGoalToHome ( .Actor:Self )
  98C:  				Call  RunToGoal     ( .Actor:Self  0` .False )
  9A4:  				Call  SetAnimation  ( .Actor:Self 00000001 00310004 )
  9BC:  			Case  ==  00000001
  9C8:  				Call  SetAnimation  ( .Actor:Self 00000001 00310009 )
  9E0:  				Call  SetActorSpeed ( .Actor:Self *Fixed[8.0] )
  9F4:  				Call  SetGoalToHome ( .Actor:Self )
  A04:  				Call  RunToGoal     ( .Actor:Self  0` .False )
  A1C:  				Call  SetAnimation  ( .Actor:Self 00000001 00310005 )
  A34:  			Case  ==  00000002
  A40:  				Call  SetAnimation  ( .Actor:Self 00000001 0031000A )
  A58:  				Call  SetActorSpeed ( .Actor:Self *Fixed[8.0] )
  A6C:  				Call  SetGoalToHome ( .Actor:Self )
  A7C:  				Call  RunToGoal     ( .Actor:Self  0` .False )
  A94:  				Call  SetAnimation  ( .Actor:Self 00000001 00310006 )
  AAC:  		EndSwitch
  AB4:  	EndCaseGroup
  ABC:  EndSwitch
  AC4:  Call  EnableIdleScript  ( .Actor:Self 00000001 )
  AD8:  Call  UseIdleAnimation  ( .Actor:Self .True )
  AEC:  Return
  AF4:  End
}

#new:Script $Script_8021DF04
{
    0:  Set   *Var9  00000000
   10:  Call  EnemyCreateTargetList ( 00008002 )
   20:  Call  InitTargetIterator ( )
   2C:  Label  0
   38:  Call  GetOwnerTarget        ( *Var0 *Var1 )
   4C:  Call  GetOriginalActorType  ( *Var0 *Var2 )
   60:  Switch  *Var2
   6C:  	Case  ==  00000014
   78:  		Call  GetStatusFlags    ( *Var0 *Var3 )
   8C:  		If  *Var3  !&  ~Flags:StatusFlags:Sleep|Frozen|Fear|Paralyze|Dizzy|Shrink|Stone|Stop % 3DD000
   9C:  			Call  GetActorVar   ( .Actor:Self 00000000 *Var3 )
   B4:  			If  *Var3  ==  00000000
   C4:  				Call  GetActorVar   ( *Var0 0000000A *Var3 )
   DC:  				If  *Var3  !=  00000002
   EC:  					Add   *Var9  00000001
   FC:  				EndIf
  104:  			EndIf
  10C:  		EndIf
  114:  EndSwitch
  11C:  Call  ChooseNextTarget  ( .Iter:Next *Var0 )
  130:  If  *Var0  !=  FFFFFFFF
  140:  	Goto  0
  14C:  EndIf
  154:  Return
  15C:  End
}

#new:Script $Script_TakeTurn_8021E068
{
    0:  Call  GetActorVar   ( .Actor:Self 00000000 *VarA )
   18:  If  *VarA  ==  00000003
   28:  	ExecWait  $Script_8021F5E0
   34:  	Return
   3C:  EndIf
   44:  Call  GetActorVar   ( .Actor:Self 00000009 *Var0 )
   5C:  If  *Var0  ==  00000000
   6C:  	Call  GetActorVar   ( .Actor:Self 0000000A *Var0 )
   84:  	If  *Var0  ==  00000002
   94:  		Goto  7B
   A0:  	EndIf
   A8:  	ExecWait  $Script_8021EB94
   B4:  	If  *VarE  ==  FFFFFFFF
   C4:  		Goto  7B
   D0:  	EndIf
   D8:  	ExecWait  $Script_8021DF04
   E4:  	Switch  *Var9
   F0:  		Case  ==  00000001
   FC:  			Call  RandInt   ( 000003E8 *Var0 )
  110:  			If  *Var0  <  00000190
  120:  				ExecWait  $Script_8021EE7C
  12C:  				Return
  134:  			EndIf
  13C:  		Case  ==  00000002
  148:  			Call  RandInt   ( 000003E8 *Var0 )
  15C:  			If  *Var0  <  000000C8
  16C:  				ExecWait  $Script_8021EE7C
  178:  				Return
  180:  			EndIf
  188:  		Case  ==  00000003
  194:  			Call  RandInt   ( 000003E8 *Var0 )
  1A8:  			If  *Var0  <  00000064
  1B8:  				ExecWait  $Script_8021EE7C
  1C4:  				Return
  1CC:  			EndIf
  1D4:  	EndSwitch
  1DC:  EndIf
  1E4:  Label  7B
  1F0:  Call  RandInt   ( 000003E8 *Var0 )
  204:  If  *Var0  <  000001F4
  214:  	ExecWait  $Script_8021D408
  220:  	Return
  228:  EndIf
  230:  Call  UseIdleAnimation  ( .Actor:Self .False )
  244:  Call  EnableIdleScript  ( .Actor:Self 00000000 )
  258:  Call  GetBattlePhase    ( *Var0 )
  268:  If  *Var0  ==  00000001
  278:  	Call  UseBattleCamPreset    ( 00000002 )
  288:  	Call  MoveBattleCamOver     (  1` )
  298:  EndIf
  2A0:  Call  SetPartSounds     ( .Actor:Self 00000006 .ActorSound:Jump 00000000 00000000 )
  2C0:  Call  GetStatusFlags    ( .Actor:Self *Var0 )
  2D4:  If  *Var0  !&  ~Flags:StatusFlags:Shrink % 80000
  2E4:  	Call  SetPartScale  ( .Actor:Self 00000006 *Fixed[1.0] *Fixed[1.0] *Fixed[1.0] )
  304:  Else
  30C:  	Call  SetPartScale  ( .Actor:Self 00000006 *Fixed[0.4] *Fixed[0.4] *Fixed[1.0] )
  32C:  EndIf
  334:  ChildThread
  33C:  	Call  SetPartFlagBits   ( .Actor:Self 00000006 00000001 .False )
  358:  	Call  GetActorPos       ( .Actor:Self *Var0 *Var1 *Var2 )
  374:  	Call  SetPartPos        ( .Actor:Self 00000006 *Var0 *Var1 *Var2 )
  394:  	Call  SetPartJumpGravity    ( .Actor:Self 00000006 *Fixed[2.2] )
  3AC:  	Call  SetAnimation      ( .Actor:Self 00000006 00310016 )
  3C4:  	Call  GetStatusFlags    ( .Actor:Self *Var5 )
  3D8:  	Call  GetActorVar       ( .Actor:Self 00000000 *VarA )
  3F0:  	Switch  *VarA
  3FC:  		Case  ==  00000000
  408:  			If  *Var5  !&  ~Flags:StatusFlags:Shrink % 80000
  418:  				Add   *Var1  00000026
  428:  			Else
  430:  				Add   *Var1  0000000F
  440:  				Call  SetPartJumpGravity    ( .Actor:Self 00000006 *Fixed[1.2] )
  458:  			EndIf
  460:  			Call  JumpPartTo    ( .Actor:Self 00000006 *Var0 *Var1 *Var2  15` .True )
  488:  		Case  ==  00000001
  494:  			If  *Var5  !&  ~Flags:StatusFlags:Shrink % 80000
  4A4:  				Add   *Var1  00000014
  4B4:  			Else
  4BC:  				Add   *Var1  00000008
  4CC:  				Call  SetPartJumpGravity    ( .Actor:Self 00000006 *Fixed[1.2] )
  4E4:  			EndIf
  4EC:  			Call  JumpPartTo    ( .Actor:Self 00000006 *Var0 *Var1 *Var2  15` .True )
  514:  		Case  ==  00000002
  520:  			If  *Var5  !&  ~Flags:StatusFlags:Shrink % 80000
  530:  				Add   *Var1  00000008
  540:  			Else
  548:  				Add   *Var1  00000003
  558:  				Call  SetPartJumpGravity    ( .Actor:Self 00000006 *Fixed[1.2] )
  570:  			EndIf
  578:  			Call  JumpPartTo    ( .Actor:Self 00000006 *Var0 *Var1 *Var2  15` .True )
  5A0:  		Case  ==  00000003
  5AC:  	EndSwitch
  5B4:  EndChildThread
  5BC:  Call  PlaySoundAtActor  ( .Actor:Self 00000342 )
  5D0:  Call  GetActorVar       ( .Actor:Self 00000004 *Var1 )
  5E8:  Call  SetAnimation      ( .Actor:Self 00000001 *Var1 )
  600:  Wait  12`
  60C:  Call  GetActorVar       ( .Actor:Self 00000005 *Var1 )
  624:  Call  SetAnimation      ( .Actor:Self 00000001 *Var1 )
  63C:  Wait  1`
  648:  Call  PlaySoundAtActor  ( .Actor:Self 000002CE )
  65C:  Wait  3`
  668:  ExecWait  $Script_802200CC
  674:  Call  SetTargetActor    ( .Actor:Self .Actor:Player )
  688:  Call  EnemyTestTarget   ( .Actor:Self *Var0 ~Flags:DamageType:NoContact 00000000 00000002 00000020 )
  6AC:  Switch  *Var0
  6B8:  	CaseOR  ==  .HitResult:Miss % 6
  6C4:  	CaseOR  ==  .HitResult:Lucky % 5
  6D0:  		If  *Var0  ==  .HitResult:Lucky % 5
  6E0:  			ChildThread
  6E8:  				Wait  5`
  6F4:  				Call  EnemyTestTarget   ( .Actor:Self *Var0 ~Flags:DamageType:TriggerLucky 00000000 00000000 00000000 )
  718:  			EndChildThread
  720:  		EndIf
  728:  		Call  SetTargetActor    ( .Actor:Self .Actor:Player )
  73C:  		Call  SetGoalToTarget   ( .Actor:Self )
  74C:  		Call  GetGoalPos        ( .Actor:Self *Var0 *Var1 *Var2 )
  768:  		Sub   *Var0  00000050
  778:  		Sub   *Var1  00000005
  788:  		Call  SetPartMoveSpeed  ( .Actor:Self 00000006 *Fixed[20.0] )
  7A0:  		Call  SetPartJumpGravity    ( .Actor:Self 00000006 *Fixed[0.1] )
  7B8:  		Call  SetAnimation      ( .Actor:Self 00000006 00310016 )
  7D0:  		Call  JumpPartTo        ( .Actor:Self 00000006 *Var0 *Var1 *Var2  0` .True )
  7F8:  		Call  SetPartFlagBits   ( .Actor:Self 00000006 00000001 .True )
  814:  		Call  GetActorVar       ( .Actor:Self 00000002 *Var1 )
  82C:  		Call  SetAnimation      ( .Actor:Self 00000001 *Var1 )
  844:  		Return
  84C:  	EndCaseGroup
  854:  EndSwitch
  85C:  Call  SetTargetActor    ( .Actor:Self .Actor:Player )
  870:  Call  SetGoalToTarget   ( .Actor:Self )
  880:  Call  GetGoalPos        ( .Actor:Self *Var0 *Var1 *Var2 )
  89C:  Call  SetPartMoveSpeed  ( .Actor:Self 00000006 *Fixed[20.0] )
  8B4:  Call  SetPartJumpGravity    ( .Actor:Self 00000006 *Fixed[0.1] )
  8CC:  Call  SetAnimation      ( .Actor:Self 00000006 00310016 )
  8E4:  Call  JumpPartTo        ( .Actor:Self 00000006 *Var0 *Var1 *Var2  0` .True )
  90C:  Call  EnemyDamageTarget ( .Actor:Self *Var0 ~Flags:DamageType:NoContact 00000000 ~DebuffType:Poison:3:0` 00000002 00000020 )
  934:  Call  GetActorVar       ( .Actor:Self 00000002 *Var1 )
  94C:  Call  SetAnimation      ( .Actor:Self 00000001 *Var1 )
  964:  Switch  *Var0
  970:  	CaseOR  ==  .HitResult:Hit % 0
  97C:  	CaseOR  ==  .HitResult:QuakeImmune % 2
  988:  		Call  GetActorPos       ( .Actor:Player *Var0 *Var1 *Var2 )
  9A4:  		Sub   *Var0  00000037
  9B4:  		Set   *Var1  00000000
  9C4:  		Call  SetPartMoveSpeed  ( .Actor:Self 00000006 *Fixed[6.0] )
  9DC:  		Call  SetPartJumpGravity    ( .Actor:Self 00000006 *Fixed[0.1] )
  9F4:  		Call  FlyPartTo ( .Actor:Self 00000006 *Var0 *Var1 *Var2  0`  25` .Easing:Linear )
  A20:  		Call  SetPartMoveSpeed  ( .Actor:Self 00000006 *Fixed[4.0] )
  A38:  		Sub   *Var0  00000018
  A48:  		Call  FlyPartTo ( .Actor:Self 00000006 *Var0 *Var1 *Var2  0`  21` .Easing:Linear )
  A74:  		Call  SetPartMoveSpeed  ( .Actor:Self 00000006 *Fixed[3.0] )
  A8C:  		Sub   *Var0  00000014
  A9C:  		Call  FlyPartTo ( .Actor:Self 00000006 *Var0 *Var1 *Var2  0`  20` .Easing:Linear )
  AC8:  		Call  SetPartFlagBits   ( .Actor:Self 00000006 00000001 .True )
  AE4:  	EndCaseGroup
  AEC:  EndSwitch
  AF4:  Call  EnableIdleScript  ( .Actor:Self 00000001 )
  B08:  Call  UseIdleAnimation  ( .Actor:Self .True )
  B1C:  Return
  B24:  End
}

#new:Script $Script_8021EB94
{
    0:  Set   *VarE  FFFFFFFF
   10:  Call  GetStatusFlags    ( .Actor:Self *Var0 )
   24:  If  *Var0  &  ~Flags:StatusFlags:Shrink % 80000
   34:  	Return
   3C:  EndIf
   44:  Call  GetActorVar   ( .Actor:Self 00000000 *Var0 )
   5C:  If  *Var0  !=  00000000
   6C:  	Return
   74:  EndIf
   7C:  Set   *Flag[01]  .False
   8C:  Set   *Flag[02]  .False
   9C:  Set   *Flag[03]  .False
   AC:  Set   *Flag[04]  .False
   BC:  Call  EnemyCreateTargetList ( 00008002 )
   CC:  Call  InitTargetIterator ( )
   D8:  Label  0
   E4:  Call  GetOwnerTarget        ( *Var0 *Var5 )
   F8:  Call  GetIndexFromHome      ( *Var0 *Var5 )
  10C:  Mod   *Var5  00000004
  11C:  Switch  *Var5
  128:  	Case  ==  00000000
  134:  		Set   *Flag[01]  .True
  144:  	Case  ==  00000001
  150:  		Set   *Flag[02]  .True
  160:  	Case  ==  00000002
  16C:  		Set   *Flag[03]  .True
  17C:  	Case  ==  00000003
  188:  		Set   *Flag[04]  .True
  198:  EndSwitch
  1A0:  Call  ChooseNextTarget  ( .Iter:Next *Var0 )
  1B4:  If  *Var0  !=  FFFFFFFF
  1C4:  	Goto  0
  1D0:  EndIf
  1D8:  Call  GetIndexFromHome  ( .Actor:Self *Var1 )
  1EC:  Switch  *Var1
  1F8:  	Case  ==  00000000
  204:  		Return
  20C:  	Case  ==  00000001
  218:  		If  *Flag[01]  ==  .False
  228:  			Set   *VarE  00000000
  238:  		EndIf
  240:  	Case  ==  00000002
  24C:  		If  *Flag[02]  ==  .False
  25C:  			Set   *VarE  00000001
  26C:  		EndIf
  274:  	Case  ==  00000003
  280:  		If  *Flag[03]  ==  .False
  290:  			Set   *VarE  00000002
  2A0:  		EndIf
  2A8:  EndSwitch
  2B0:  Return
  2B8:  End
}

#new:Vector3D $Vector3D_8021EE54
{
	400` -100` 0`
}

#new:SpecialFormation $SpecialFormation_8021EE60
{
	$Pokey $Vector3D_8021EE54 00000064 00000000 00000000 00000000 00000000
}

#new:Script $Script_8021EE7C
{
    0:  Call  UseIdleAnimation  ( .Actor:Self .False )
   14:  Call  EnableIdleScript  ( .Actor:Self 00000000 )
   28:  Call  SetTargetActor    ( .Actor:Self .Actor:Player )
   3C:  Call  UseBattleCamPreset    ( 0000000E )
   4C:  Call  BattleCamTargetActor  ( .Actor:Self )
   5C:  Call  MoveBattleCamOver (  30` )
   6C:  Call  SetAnimation      ( .Actor:Self 00000001 00310004 )
   84:  Call  MakeLerp  ( 00000000 FFFFFFEC 00000014 .Easing:CosInOut )
   A0:  Label  0
   AC:  Call  UpdateLerp ( )
   B8:  Call  SetActorRotation  ( .Actor:Self 00000000 00000000 *Var0 )
   D4:  Wait  1`
   E0:  If  *Var1  ==  00000001
   F0:  	Goto  0
   FC:  EndIf
  104:  ChildThread
  10C:  	Wait  8`
  118:  	Call  PlaySoundAtActor  ( .Actor:Self 00000344 )
  12C:  EndChildThread
  134:  Call  MakeLerp  ( FFFFFFEC 0000001E 00000014 .Easing:CosInOut )
  150:  Label  1
  15C:  Call  UpdateLerp ( )
  168:  Call  SetActorRotation  ( .Actor:Self 00000000 00000000 *Var0 )
  184:  Wait  1`
  190:  If  *Var1  ==  00000001
  1A0:  	Goto  1
  1AC:  EndIf
  1B4:  ChildThread
  1BC:  	Wait  6`
  1C8:  	Call  PlaySoundAtActor  ( .Actor:Self 00000345 )
  1DC:  EndChildThread
  1E4:  Call  MakeLerp  ( 0000001E FFFFFFD8 00000014 .Easing:CosInOut )
  200:  Label  2
  20C:  Call  UpdateLerp ( )
  218:  Call  SetActorRotation  ( .Actor:Self 00000000 00000000 *Var0 )
  234:  Wait  1`
  240:  If  *Var1  ==  00000001
  250:  	Goto  2
  25C:  EndIf
  264:  ChildThread
  26C:  	Wait  4`
  278:  	Call  PlaySoundAtActor  ( .Actor:Self 000002EE )
  28C:  EndChildThread
  294:  Call  MakeLerp  ( FFFFFFD8 0000005A 0000000A .Easing:CosInOut )
  2B0:  Label  3
  2BC:  Call  UpdateLerp ( )
  2C8:  Call  SetActorRotation  ( .Actor:Self 00000000 00000000 *Var0 )
  2E4:  Wait  1`
  2F0:  If  *Var1  ==  00000001
  300:  	Goto  3
  30C:  EndIf
  314:  Wait  20`
  320:  Call  PlaySoundAtActor  ( .Actor:Self 00000346 )
  334:  Call  StartRumble       ( 00000009 )
  344:  Thread
  34C:  	Call  ShakeCam  ( .Cam:Battle 00000000  10` *Fixed[1.0] )
  368:  EndThread
  370:  Call  SummonEnemy   ( $SpecialFormation_8021EE60 00000000 )
  384:  Set   *VarB  *Var0
  394:  Call  GetActorPos   ( .Actor:Self *Var0 *Var1 *Var2 )
  3B0:  Sub   *Var0  00000028
  3C0:  Sub   *Var1  00000050
  3D0:  Call  SetActorPos   ( *VarB *Var0 *Var1 *Var2 )
  3EC:  ChildThread
  3F4:  	Call  PlayEffect    ( ~FX:ShockWave:Sand *Var0 00000000 *Var2 00000000 00000000 00000000 00000000 00000000 00000000 00000000 00000000 00000000 )
  438:  	Call  UseIdleAnimation      ( *VarB .False )
  44C:  	Call  SetAnimation  ( *VarB 00000001 0031000C )
  464:  	Call  GetActorPos   ( *VarB *Var0 *Var1 *Var2 )
  480:  	Call  SetActorJumpGravity   ( *VarB *Fixed[1.2] )
  494:  	Call  SetGoalPos    ( *VarB *Var0  0` *Var2 )
  4B0:  	Call  JumpToGoal    ( *VarB  20` .False .True .False )
  4D0:  	Wait  20`
  4DC:  	Call  GetActorPos   ( *VarB *Var0 *Var1 *Var2 )
  4F8:  	Call  SetAnimation  ( *VarB 00000001 00310004 )
  510:  	Call  SetHomePos    ( *VarB *Var0 *Var1 *Var2 )
  52C:  	Call  HPBarToHome   ( *VarB )
  53C:  	Call  UseIdleAnimation      ( *VarB .True )
  550:  EndChildThread
  558:  Call  GetActorVar   ( .Actor:Self 0000000A *Var1 )
  570:  Switch  *Var1
  57C:  	Case  ==  00000000
  588:  		Call  SetActorVar   ( *VarB 0000000A 00000001 )
  5A0:  	Case  ==  00000001
  5AC:  		Call  SetActorVar   ( *VarB 0000000A 00000002 )
  5C4:  EndSwitch
  5CC:  Call  UseBattleCamPreset    ( 00000002 )
  5DC:  Call  MoveBattleCamOver (  20` )
  5EC:  Set   *VarA  *Var0
  5FC:  Call  MakeLerp  ( 0000005A FFFFFFE2 00000007 .Easing:QuadraticOut )
  618:  Label  4
  624:  Call  UpdateLerp ( )
  630:  Call  SetActorRotation  ( .Actor:Self 00000000 00000000 *Var0 )
  64C:  Wait  1`
  658:  If  *Var1  ==  00000001
  668:  	Goto  4
  674:  EndIf
  67C:  Wait  20`
  688:  Call  MakeLerp  ( FFFFFFE2 00000000 0000000A .Easing:CosInOut )
  6A4:  Label  5
  6B0:  Call  UpdateLerp ( )
  6BC:  Call  SetActorRotation  ( .Actor:Self 00000000 00000000 *Var0 )
  6D8:  Wait  1`
  6E4:  If  *Var1  ==  00000001
  6F4:  	Goto  5
  700:  EndIf
  708:  Wait  20`
  714:  Call  SetAnimation      ( .Actor:Self 00000001 00310004 )
  72C:  Call  EnableIdleScript  ( .Actor:Self 00000001 )
  740:  Call  UseIdleAnimation  ( .Actor:Self .True )
  754:  Return
  75C:  End
}

#new:Script $Script_8021F5E0
{
    0:  Call  UseIdleAnimation  ( .Actor:Self .False )
   14:  Call  EnableIdleScript  ( .Actor:Self 00000000 )
   28:  Call  SetActorSounds    ( .Actor:Self .ActorSound:Walk 000002EC 000002EC )
   44:  Call  SetActorSounds    ( .Actor:Self .ActorSound:Jump 000002EC 00000000 )
   60:  Call  UseBattleCamPreset    ( 0000003F )
   70:  Call  BattleCamTargetActor  ( .Actor:Self )
   80:  Call  8024ECF8  ( FFFFFFFF 00000001 00000000 )
   98:  Call  SetTargetActor    ( .Actor:Self .Actor:Player )
   AC:  Call  SetGoalToTarget   ( .Actor:Self )
   BC:  Call  GetGoalPos        ( .Actor:Self *Var0 *Var1 *Var2 )
   D8:  Add   *Var0  00000032
   E8:  Set   *Var1  00000000
   F8:  Call  SetActorJumpGravity   ( .Actor:Self *Fixed[1.8] )
  10C:  Call  SetAnimation      ( .Actor:Self 00000001 0031000B )
  124:  Call  SetActorSpeed     ( .Actor:Self *Fixed[4.0] )
  138:  Call  SetActorJumpGravity   ( .Actor:Self *Fixed[2.0] )
  14C:  ExecWait  8029C12C
  158:  Call  SetAnimation      ( .Actor:Self 00000001 00310007 )
  170:  Wait  4`
  17C:  Call  SetActorDispOffset    ( .Actor:Self 00000000 FFFFFFFF 00000000 )
  198:  Wait  1`
  1A4:  Call  SetActorDispOffset    ( .Actor:Self 00000000 FFFFFFFE 00000000 )
  1C0:  Wait  4`
  1CC:  Call  SetActorDispOffset    ( .Actor:Self 00000000 00000000 00000000 )
  1E8:  Call  SetAnimation      ( .Actor:Self 00000001 0031000B )
  200:  Call  EnemyTestTarget   ( .Actor:Self *Var0 ~Flags:DamageType:0 00000000 00000002 00000010 )
  224:  Switch  *Var0
  230:  	CaseOR  ==  .HitResult:Miss % 6
  23C:  	CaseOR  ==  .HitResult:Lucky % 5
  248:  		Set   *VarA  *Var0
  258:  		Call  SetGoalToTarget   ( .Actor:Self )
  268:  		Call  GetGoalPos        ( .Actor:Self *Var0 *Var1 *Var2 )
  284:  		Sub   *Var0  00000005
  294:  		Set   *Var1  0000000A
  2A4:  		Call  SetGoalPos        ( .Actor:Self *Var0 *Var1 *Var2 )
  2C0:  		Call  SetActorJumpGravity   ( .Actor:Self *Fixed[1.1] )
  2D4:  		ChildThread
  2DC:  			Wait  2`
  2E8:  			Set   *Var0  00000000
  2F8:  			Loop  00000005
  304:  				Add   *Var0  0000001E
  314:  				Call  SetActorRotation  ( .Actor:Self 00000000 00000000 *Var0 )
  330:  				Wait  1`
  33C:  			EndLoop
  344:  		EndChildThread
  34C:  		Call  JumpToGoal    ( .Actor:Self  22` .False .True .False )
  36C:  		If  *VarA  ==  .HitResult:Lucky % 5
  37C:  			Call  EnemyTestTarget   ( .Actor:Self *Var0 ~Flags:DamageType:TriggerLucky 00000000 00000000 00000000 )
  3A0:  		EndIf
  3A8:  		Call  SetActorRotationOffset    ( .Actor:Self 00000000 0000000A 00000000 )
  3C4:  		ChildThread
  3CC:  			Wait  2`
  3D8:  			Set   *Var0  000000B4
  3E8:  			Loop  00000006
  3F4:  				Add   *Var0  0000001E
  404:  				If  *Var0  ==  00000168
  414:  					Set   *Var0  00000000
  424:  				EndIf
  42C:  				Call  SetActorRotation  ( .Actor:Self 00000000 00000000 *Var0 )
  448:  				Wait  1`
  454:  			EndLoop
  45C:  			Call  SetActorRotationOffset    ( .Actor:Self 00000000 00000000 00000000 )
  478:  		EndChildThread
  480:  		Call  SetActorJumpGravity   ( .Actor:Self *Fixed[2.0] )
  494:  		Call  GetActorPos   ( .Actor:Self *Var0 *Var1 *Var2 )
  4B0:  		Sub   *Var0  0000001E
  4C0:  		Set   *Var1  00000000
  4D0:  		Call  SetGoalPos    ( .Actor:Self *Var0 *Var1 *Var2 )
  4EC:  		Call  JumpToGoal    ( .Actor:Self  6` .False .True .False )
  50C:  		Wait  15`
  518:  		Call  UseBattleCamPreset    ( 00000002 )
  528:  		Call  YieldTurn ( )
  534:  		Call  AddActorDecoration    ( .Actor:Self 00000001 00000000 .Decoration:Sweat )
  550:  		Call  SetGoalToHome ( .Actor:Self )
  560:  		Call  GetGoalPos    ( .Actor:Self *Var0 *Var1 *Var2 )
  57C:  		Call  SetActorSpeed ( .Actor:Self *Fixed[4.0] )
  590:  		Call  SetAnimation  ( .Actor:Self 00000001 0031000B )
  5A8:  		Call  SetActorJumpGravity   ( .Actor:Self *Fixed[2.0] )
  5BC:  		ExecWait  8029C12C
  5C8:  		Call  RemoveActorDecoration ( .Actor:Self 00000001 00000000 )
  5E0:  		Call  SetAnimation  ( .Actor:Self 00000001 00310007 )
  5F8:  		Return
  600:  	EndCaseGroup
  608:  EndSwitch
  610:  Call  SetGoalToTarget       ( .Actor:Self )
  620:  Call  SetActorJumpGravity   ( .Actor:Self *Fixed[1.1] )
  634:  ChildThread
  63C:  	Wait  2`
  648:  	Set   *Var0  00000000
  658:  	Loop  00000005
  664:  		Add   *Var0  0000001E
  674:  		Call  SetActorRotation  ( .Actor:Self 00000000 00000000 *Var0 )
  690:  		Wait  1`
  69C:  	EndLoop
  6A4:  EndChildThread
  6AC:  Call  JumpToGoal        ( .Actor:Self  18` .False .True .False )
  6CC:  Wait  2`
  6D8:  Call  EnemyDamageTarget ( .Actor:Self *Var0 ~Flags:DamageType:0 00000000 ~DebuffType:Poison:3:0` 00000002 00000020 )
  700:  Call  SetAnimation      ( .Actor:Self 00000001 00310007 )
  718:  Switch  *Var0
  724:  	CaseOR  ==  .HitResult:Hit % 0
  730:  	CaseOR  ==  .HitResult:QuakeImmune % 2
  73C:  		Call  UseBattleCamPreset    ( 00000002 )
  74C:  		Call  SetActorRotation      ( .Actor:Self 00000000 00000000 00000000 )
  768:  		Call  SetActorDispOffset    ( .Actor:Self 00000000 00000000 00000000 )
  784:  		Call  GetGoalPos    ( .Actor:Self *Var0 *Var1 *Var2 )
  7A0:  		Add   *Var0  00000028
  7B0:  		Set   *Var1  00000000
  7C0:  		Call  SetActorJumpGravity   ( .Actor:Self *Fixed[1.8] )
  7D4:  		Call  SetGoalPos    ( .Actor:Self *Var0 *Var1 *Var2 )
  7F0:  		Call  JumpToGoal    ( .Actor:Self  10` .False .True .False )
  810:  		Add   *Var0  0000001E
  820:  		Call  SetGoalPos    ( .Actor:Self *Var0 *Var1 *Var2 )
  83C:  		Call  JumpToGoal    ( .Actor:Self  8` .False .True .False )
  85C:  		Add   *Var0  00000014
  86C:  		Call  SetGoalPos    ( .Actor:Self *Var0 *Var1 *Var2 )
  888:  		Call  JumpToGoal    ( .Actor:Self  6` .False .True .False )
  8A8:  		Sub   *Var0  0000000A
  8B8:  		Call  JumpToGoal    ( .Actor:Self  4` .False .True .False )
  8D8:  		Call  SetAnimation  ( .Actor:Self 00000001 00310007 )
  8F0:  		Call  SetGoalToHome ( .Actor:Self )
  900:  		Call  GetGoalPos    ( .Actor:Self *Var0 *Var1 *Var2 )
  91C:  		Call  SetActorSpeed ( .Actor:Self *Fixed[4.0] )
  930:  		Call  SetAnimation  ( .Actor:Self 00000001 0031000B )
  948:  		Call  SetActorJumpGravity   ( .Actor:Self *Fixed[2.0] )
  95C:  		ExecWait  8029C12C
  968:  		Call  SetAnimation  ( .Actor:Self 00000001 00310007 )
  980:  EndSwitch
  988:  Call  EnableIdleScript  ( .Actor:Self 00000001 )
  99C:  Call  UseIdleAnimation  ( .Actor:Self .True )
  9B0:  Return
  9B8:  End
}

#new:Script $Script_8021FFA0
{
    0:  Call  GetStatusFlags    ( .Actor:Self *VarA )
   14:  If  *VarA  &  ~Flags:StatusFlags:Shrink % 80000
   24:  	SetConst  *Var0  00000001
   34:  	Call  GetActorVar   ( .Actor:Self 00000003 *Var1 )
   4C:  	ExecWait  DoSpinSmashHit
   58:  	Return
   60:  EndIf
   68:  Call  GetActorVar   ( .Actor:Self 00000000 *VarA )
   80:  Switch  *VarA
   8C:  	Case  ==  00000000
   98:  		ExecWait  $Script_802208B0
   A4:  	Case  ==  00000001
   B0:  		ExecWait  $Script_802208B0
   BC:  	Case  ==  00000002
   C8:  		ExecWait  $Script_802208B0
   D4:  	Case  ==  00000003
   E0:  		SetConst  *Var0  00000001
   F0:  		Call  GetActorVar   ( .Actor:Self 00000003 *Var1 )
  108:  		ExecWait  DoSpinSmashHit
  114:  EndSwitch
  11C:  Return
  124:  End
}

#new:Script $Script_802200CC
{
    0:  Call  GetActorVar   ( .Actor:Self 00000000 *VarA )
   18:  Switch  *VarA
   24:  	Case  ==  00000000
   30:  		Call  SetActorVar   ( .Actor:Self 00000001 00310005 )
   48:  		Call  SetActorVar   ( .Actor:Self 00000002 00310009 )
   60:  		Call  SetActorVar   ( .Actor:Self 00000003 0031000D )
   78:  		Call  SetActorVar   ( .Actor:Self 00000004 00310012 )
   90:  		Call  SetActorVar   ( .Actor:Self 00000005 00310013 )
   A8:  		Call  SetActorVar   ( .Actor:Self 00000006 0031001A )
   C0:  		Call  SetActorVar   ( .Actor:Self 00000007 0031001B )
   D8:  		Call  SetIdleAnimations ( .Actor:Self 00000001 $IdleAnimations_8021C4C4 )
   F0:  		Call  SetPartFlagBits   ( .Actor:Self 00000002 00800000 .False )
  10C:  		Call  SetPartFlagBits   ( .Actor:Self 00000002 00020000 .True )
  128:  		Call  SetPartFlagBits   ( .Actor:Self 00000003 00020000 .False )
  144:  		Call  SetPartFlagBits   ( .Actor:Self 00000003 00800000 .True )
  160:  		Call  SetActorVar   ( .Actor:Self 00000000 00000001 )
  178:  		Call  SetActorSize  ( .Actor:Self  62`  -250000000` )
  190:  		Call  SetPartSize   ( .Actor:Self 00000001  62`  -250000000` )
  1AC:  		Call  $Function_80218240    ( FFFFFFF1 00000037 0000000A 0000002D )
  1C8:  	Case  ==  00000001
  1D4:  		Call  SetActorVar   ( .Actor:Self 00000001 00310006 )
  1EC:  		Call  SetActorVar   ( .Actor:Self 00000002 0031000A )
  204:  		Call  SetActorVar   ( .Actor:Self 00000003 0031000E )
  21C:  		Call  SetActorVar   ( .Actor:Self 00000004 00310014 )
  234:  		Call  SetActorVar   ( .Actor:Self 00000005 00310015 )
  24C:  		Call  SetActorVar   ( .Actor:Self 00000006 0031001C )
  264:  		Call  SetActorVar   ( .Actor:Self 00000007 0031001D )
  27C:  		Call  SetIdleAnimations ( .Actor:Self 00000001 $IdleAnimations_8021C500 )
  294:  		Call  SetPartFlagBits   ( .Actor:Self 00000003 00800000 .False )
  2B0:  		Call  SetPartFlagBits   ( .Actor:Self 00000003 00020000 .True )
  2CC:  		Call  SetPartFlagBits   ( .Actor:Self 00000004 00020000 .False )
  2E8:  		Call  SetPartFlagBits   ( .Actor:Self 00000004 00800000 .True )
  304:  		Call  SetActorVar   ( .Actor:Self 00000000 00000002 )
  31C:  		Call  SetActorSize  ( .Actor:Self  44`  -250000000` )
  334:  		Call  SetPartSize   ( .Actor:Self 00000001  44`  -250000000` )
  350:  		Call  $Function_80218240    ( FFFFFFF1 00000023 0000000A 00000019 )
  36C:  	Case  ==  00000002
  378:  		Call  SetActorVar   ( .Actor:Self 00000001 00310007 )
  390:  		Call  SetActorVar   ( .Actor:Self 00000002 0031000B )
  3A8:  		Call  SetActorVar   ( .Actor:Self 00000003 0031000F )
  3C0:  		Call  SetActorVar   ( .Actor:Self 00000006 0031001E )
  3D8:  		Call  SetActorVar   ( .Actor:Self 00000007 0031001F )
  3F0:  		Call  SetIdleAnimations ( .Actor:Self 00000001 $IdleAnimations_8021C53C )
  408:  		Call  SetPartFlagBits   ( .Actor:Self 00000004 00800000 .False )
  424:  		Call  SetPartFlagBits   ( .Actor:Self 00000004 00020000 .True )
  440:  		Call  SetPartFlagBits   ( .Actor:Self 00000005 00020000 .False )
  45C:  		Call  SetPartFlagBits   ( .Actor:Self 00000005 00800000 .True )
  478:  		Call  SetActorVar   ( .Actor:Self 00000000 00000003 )
  490:  		Call  SetActorSize  ( .Actor:Self  26`  -250000000` )
  4A8:  		Call  SetPartSize   ( .Actor:Self 00000001  26`  -250000000` )
  4C4:  		Call  $Function_80218240    ( FFFFFFF1 0000000F 0000000A 00000005 )
  4E0:  EndSwitch
  4E8:  Return
  4F0:  End
}

#new:Script $Script_802205C4
{
    0:  Call  GetActorPos   ( .Actor:Self *Var0 *Var1 *Var2 )
   1C:  Add   *Var1  00000012
   2C:  Call  SetActorPos   ( .Actor:Self *Var0 *Var1 *Var2 )
   48:  Call  GetActorPos   ( .Actor:Self *Var0 *Var1 *Var2 )
   64:  Set   *Var3  *Var1
   74:  Wait  2`
   80:  Sub   *Var3  00000001
   90:  Call  SetActorPos   ( .Actor:Self *Var0 *Var3 *Var2 )
   AC:  Wait  3`
   B8:  Sub   *Var3  00000002
   C8:  Call  SetActorPos   ( .Actor:Self *Var0 *Var3 *Var2 )
   E4:  Wait  2`
   F0:  Sub   *Var3  00000003
  100:  Call  SetActorPos   ( .Actor:Self *Var0 *Var3 *Var2 )
  11C:  Wait  1`
  128:  Sub   *Var3  00000005
  138:  Call  SetActorPos   ( .Actor:Self *Var0 *Var3 *Var2 )
  154:  Wait  1`
  160:  Sub   *Var3  00000007
  170:  Call  SetActorPos   ( .Actor:Self *Var0 *Var3 *Var2 )
  18C:  Wait  1`
  198:  Add   *Var3  00000002
  1A8:  Call  SetActorPos   ( .Actor:Self *Var0 *Var3 *Var2 )
  1C4:  Wait  1`
  1D0:  Add   *Var3  00000003
  1E0:  Call  SetActorPos   ( .Actor:Self *Var0 *Var3 *Var2 )
  1FC:  Wait  1`
  208:  Add   *Var3  00000003
  218:  Call  SetActorPos   ( .Actor:Self *Var0 *Var3 *Var2 )
  234:  Wait  1`
  240:  Sub   *Var3  00000003
  250:  Call  SetActorPos   ( .Actor:Self *Var0 *Var3 *Var2 )
  26C:  Wait  1`
  278:  Sub   *Var3  00000003
  288:  Call  SetActorPos   ( .Actor:Self *Var0 *Var3 *Var2 )
  2A4:  Wait  1`
  2B0:  Sub   *Var3  00000002
  2C0:  Call  SetActorPos   ( .Actor:Self *Var0 *Var3 *Var2 )
  2DC:  Return
  2E4:  End
}

#new:Script $Script_802208B0
{
    0:  Call  GetActorPos       ( .Actor:Self *Var0 *Var1 *Var2 )
   1C:  Call  SetPartPos        ( .Actor:Self 00000006 *Var0 *Var1 *Var2 )
   3C:  Call  SetPartFlagBits   ( .Actor:Self 00000006 00000001 .False )
   58:  Call  GetStatusFlags    ( .Actor:Self *Var0 )
   6C:  If  *Var0  !&  ~Flags:StatusFlags:Shrink % 80000
   7C:  	Call  SetPartScale  ( .Actor:Self 00000006 *Fixed[1.0] *Fixed[1.0] *Fixed[1.0] )
   9C:  Else
   A4:  	Call  SetPartScale  ( .Actor:Self 00000006 *Fixed[0.4] *Fixed[0.4] *Fixed[1.0] )
   C4:  EndIf
   CC:  ExecWait  $Script_802200CC
   D8:  SetConst  *Var0  00000001
   E8:  Call  GetActorVar   ( .Actor:Self 00000003 *Var1 )
  100:  Call  SetAnimation  ( .Actor:Self *Var0 *Var1 )
  118:  ChildThread
  120:  	Wait  4`
  12C:  	ExecWait  $Script_802205C4
  138:  EndChildThread
  140:  Call  EnemyCreateTargetList ( 00018004 )
  150:  Call  InitTargetIterator ( )
  15C:  Label  0
  168:  Call  GetOwnerID    ( *Var1 )
  178:  Call  GetOwnerTarget        ( *Var0 *Var9 )
  18C:  If  *Var1  !=  *Var0
  19C:  	Call  ChooseNextTarget  ( .Iter:Next *Var0 )
  1B0:  	Goto  0
  1BC:  EndIf
  1C4:  Label  1
  1D0:  Add   *VarF  00000001
  1E0:  Call  ChooseNextTarget  ( .Iter:Next *Var0 )
  1F4:  If  *Var0  ==  FFFFFFFF
  204:  	Goto  A
  210:  EndIf
  218:  Call  GetOwnerTarget    ( *Var0 *Var9 )
  22C:  Call  GetActorFlags     ( *Var0 *Var1 )
  240:  If  *Var1  &  00004000
  250:  	Goto  1
  25C:  EndIf
  264:  Call  GetOwnerID        ( *Var0 )
  274:  Call  GetOwnerTarget    ( *Var0 *Var1 )
  288:  Call  SetGoalToTarget   ( .Actor:Self )
  298:  Call  GetGoalPos        ( .Actor:Self *Var0 *Var1 *Var2 )
  2B4:  Set   *Var1  00000000
  2C4:  Call  SetPartJumpGravity    ( .Actor:Self 00000006 *Fixed[0.1] )
  2DC:  Call  SetPartMoveSpeed  ( .Actor:Self 00000006 *Fixed[7.0] )
  2F4:  Call  JumpPartTo        ( .Actor:Self 00000006 *Var0 *Var1 *Var2  0` .True )
  31C:  ChildThread
  324:  	Call  ShakeCam  ( .Cam:Battle 00000000  2` *Fixed[1.0] )
  340:  EndChildThread
  348:  Call  SetGoalToTarget   ( .Actor:Self )
  358:  Call  GetOwnerTarget    ( *Var0 *Var1 )
  36C:  Call  DispatchDamageEvent   ( *Var0 00000001 .Event:SpinSmashLaunchHit )
  384:  Goto  1
  390:  Label  A
  39C:  Call  UseBattleCamPreset    ( 00000003 )
  3AC:  Call  SetPartJumpGravity    ( .Actor:Self 00000006 *Fixed[0.1] )
  3C4:  Call  SetPartMoveSpeed  ( .Actor:Self 00000006 *Fixed[6.0] )
  3DC:  Call  JumpPartTo        ( .Actor:Self 00000006  296`  0`  0`  0` .True )
  404:  Call  SetPartFlagBits   ( .Actor:Self 00000006 00020000 .True )
  420:  Call  SetPartFlagBits   ( .Actor:Self 00000006 00000001 .True )
  43C:  Return
  444:  End
}

#new:Script $Script_80220CFC
{
    0:  Call  GetStatusFlags    ( .Actor:Self *Var0 )
   14:  If  *Var0  !&  ~Flags:StatusFlags:Shrink % 80000
   24:  	Call  SetPartScale  ( .Actor:Self 00000006 *Fixed[1.0] *Fixed[1.0] *Fixed[1.0] )
   44:  Else
   4C:  	Call  SetPartScale  ( .Actor:Self 00000006 *Fixed[0.4] *Fixed[0.4] *Fixed[1.0] )
   6C:  EndIf
   74:  ExecWait  $Script_802200CC
   80:  SetConst  *Var0  00000001
   90:  Call  GetLastEvent  ( .Actor:Self *Var1 )
   A4:  Switch  *Var1
   B0:  	CaseOR  ==  .Event:BurnHit % E
   BC:  	CaseOR  ==  .Event:BurnDeath % 24
   C8:  		Call  SetAnimation  ( .Actor:Self 00000006 00310020 )
   E0:  		Call  GetActorVar   ( .Actor:Self 00000006 *Var1 )
   F8:  	EndCaseGroup
  100:  	Default
  108:  		Call  GetActorVar   ( .Actor:Self 00000003 *Var1 )
  120:  EndSwitch
  128:  Call  SetAnimation  ( .Actor:Self *Var0 *Var1 )
  140:  ChildThread
  148:  	Wait  4`
  154:  	ExecWait  $Script_802205C4
  160:  EndChildThread
  168:  Call  GetActorVar   ( .Actor:Self 00000000 *VarA )
  180:  If  *VarA  !=  00000003
  190:  	Call  GetActorPos   ( .Actor:Self *Var0 *Var1 *Var2 )
  1AC:  	Call  SetPartPos    ( .Actor:Self 00000006 *Var0 *Var1 *Var2 )
  1CC:  	Call  SetPartFlagBits   ( .Actor:Self 00000006 00000001 .False )
  1E8:  	Call  SetPartMoveSpeed  ( .Actor:Self 00000006 *Fixed[6.0] )
  200:  	Call  GetActorPos   ( .Actor:Self *Var0 *Var1 *Var2 )
  21C:  	Add   *Var0  0000001E
  22C:  	Set   *Var1  00000000
  23C:  	Call  FlyPartTo     ( .Actor:Self 00000006 *Var0 *Var1 *Var2  10`  18` .Easing:Linear )
  268:  	Add   *Var0  00000014
  278:  	Call  FlyPartTo     ( .Actor:Self 00000006 *Var0 *Var1 *Var2  8`  10` .Easing:Linear )
  2A4:  	Loop  00000014
  2B0:  		Call  SetPartFlagBits   ( .Actor:Self 00000006 00000001 .True )
  2CC:  		Wait  1`
  2D8:  		Call  SetPartFlagBits   ( .Actor:Self 00000006 00000001 .False )
  2F4:  		Wait  1`
  300:  	EndLoop
  308:  	Call  SetPartFlagBits   ( .Actor:Self 00000006 00020000 .True )
  324:  	Call  SetPartFlagBits   ( .Actor:Self 00000006 00000001 .True )
  340:  Else
  348:  	Wait  30`
  354:  EndIf
  35C:  Call  GetLastEvent  ( .Actor:Self *Var0 )
  370:  Switch  *Var0
  37C:  	Case  ==  .Event:BurnHit % E
  388:  		Call  GetActorVar   ( .Actor:Self 00000007 *Var1 )
  3A0:  		Call  SetAnimation  ( .Actor:Self 00000001 *Var1 )
  3B8:  		Call  GetActorPos   ( .Actor:Self *Var0 *Var1 *Var2 )
  3D4:  		Call  GetActorSize  ( .Actor:Self *Var3 *Var4 )
  3EC:  		Div   *Var3  00000002
  3FC:  		Add   *Var1  *Var3
  40C:  		Add   *Var2  00000005
  41C:  		DivF  *Var3  *Fixed[10.0]
  42C:  		Call  PlayEffect    ( ~FX:SmokeBurst:Black *Var0 *Var1 *Var2 *Var3 0000000A 00000000 00000000 00000000 00000000 00000000 00000000 00000000 )
  470:  	Case  ==  .Event:BurnDeath % 24
  47C:  		Call  GetActorVar   ( .Actor:Self 00000007 *Var1 )
  494:  		Call  SetAnimation  ( .Actor:Self 00000001 *Var1 )
  4AC:  		Wait  10`
  4B8:  	Default
  4C0:  EndSwitch
  4C8:  Return
  4D0:  End
}

#new:Script $Script_802211D4
{
    0:  SetConst  *Var0  00000001
   10:  Call  GetActorVar   ( .Actor:Self 00000003 *Var1 )
   28:  Call  UseBattleCamPreset    ( 00000002 )
   38:  Call  GetActorFlags ( .Actor:Self *Var9 )
   4C:  Call  SetActorJumpGravity   ( .Actor:Self *Fixed[0.05] )
   60:  Call  GetActorPos   ( .Actor:Self *VarA *VarB *VarC )
   7C:  Set   *VarD  *VarB
   8C:  Add   *VarD  00000028
   9C:  Call  SetGoalPos    ( .Actor:Self *VarA *VarD *VarC )
   B8:  Call  JumpToGoal    ( .Actor:Self  5` .False .True .False )
   D8:  Call  SetAnimation  ( .Actor:Self *Var0 *Var1 )
   F0:  Wait  20`
   FC:  Call  SetGoalPos    ( .Actor:Self *VarA *VarB *VarC )
  118:  Call  FallToGoal    ( .Actor:Self  10` )
  12C:  Wait  20`
  138:  Call  SetActorYaw   ( .Actor:Self  180` )
  14C:  Wait  5`
  158:  Call  SetActorVar   ( .Actor:Self 00000000 *Var2 )
  170:  Switch  *Var2
  17C:  	Case  ==  00000000
  188:  		Set   *Var2  00000060
  198:  		Set   *Var6  00000004
  1A8:  	Case  ==  00000001
  1B4:  		Set   *Var2  00000048
  1C4:  		Set   *Var6  00000003
  1D4:  	Case  ==  00000002
  1E0:  		Set   *Var2  00000030
  1F0:  		Set   *Var6  00000002
  200:  	Default
  208:  		Set   *Var2  00000018
  218:  		Set   *Var6  00000001
  228:  EndSwitch
  230:  ChildThread
  238:  	Call  GetActorPos   ( .Actor:Self *VarA *VarB *VarC )
  254:  	Loop  *Var6
  260:  		Call  PlayEffect    ( ~FX:ShockWave:Sand *VarA 00000000 *VarC 00000000 00000000 00000000 00000000 00000000 00000000 00000000 00000000 00000000 )
  2A4:  		Wait  10`
  2B0:  	EndLoop
  2B8:  EndChildThread
  2C0:  Call  SetActorSpeed ( .Actor:Self *Fixed[2.0] )
  2D4:  Call  GetActorPos   ( .Actor:Self *Var3 *Var4 *Var5 )
  2F0:  Sub   *Var4  *Var2
  300:  Call  SetGoalPos    ( .Actor:Self *Var3 *Var4 *Var5 )
  31C:  Call  FlyToGoal     ( .Actor:Self  0`  0` .Easing:Linear )
  338:  Wait  8`
  344:  Call  8027D32C      ( FFFFFF81 )
  354:  Call  UseIdleAnimation  ( .Actor:Self .False )
  368:  Call  RemoveActor   ( .Actor:Self )
  378:  Return
  380:  End
}

PADDING: 8022155C to 80221560 (006E731C to 006E7320)
00000000

#new:IdleAnimations $IdleAnimations_80221560
{
	.Status:Normal    00320001
	.Status:Stone     00320000
	.Status:Sleep     00320010
	.Status:Poison    00320001
	.Status:Stop      00320000
	.Status:Static    00320001
	.Status:Paralyze  00320000
	.Status:Dizzy     00320011
	.Status:Fear      00320011
	.Status:End
}

#new:IdleAnimations $IdleAnimations_802215AC
{
	.Status:Normal    00320002
	.Status:Stone     00320004
	.Status:Sleep     00320010
	.Status:Poison    00320002
	.Status:Stop      00320004
	.Status:Static    00320002
	.Status:Paralyze  00320004
	.Status:Dizzy     00320011
	.Status:Fear      00320011
	.Status:End
}

#new:IdleAnimations $IdleAnimations_802215F8
{
	.Status:Normal    00320014
	.Status:End
}

#new:DefenseTable $DefenseTable_80221604
{
	.Element:Normal 00000000
	.Element:End
}

#new:StatusTable $StatusTable_80221610
{
	.Status:Normal      0`
	.Status:Default     0`
	.Status:Sleep      70`
	.Status:Poison     20`
	.Status:Frozen    100`
	.Status:Dizzy      90`
	.Status:Fear       50`
	.Status:Static     30`
	.Status:Paralyze  100`
	.Status:Shrink     90`
	.Status:Stop      100`
	.Status:DefaultTurnMod    0`
	.Status:SleepTurnMod      0`
	.Status:PoisonTurnMod     0`
	.Status:FrozenTurnMod     0`
	.Status:DizzyTurnMod      0`
	.Status:FearTurnMod       0`
	.Status:StaticTurnMod     0`
	.Status:ParalyzeTurnMod   1`
	.Status:ShrinkTurnMod     0`
	.Status:StopTurnMod       0`
	.Status:End
}

#new:PartsTable $PartsTable_802216BC
{
	00800000 01000000 FE1C00FF $IdleAnimations_80221560 $DefenseTable_80221604 00000000 00000000 00F40000 00000000
	00020001 02001E00 000000FF $IdleAnimations_802215F8 $DefenseTable_80221604 00000000 00000000 00000000 00000000
}

#new:PartsTable $PartsTable_80221704
{
	00020000 02000000 000000FF $IdleAnimations_802215F8 $DefenseTable_80221604 00000000 00000000 00000000 00000000
}

#new:Actor $BanditA
{
	% stats
	[Index]        13b
	[Level]         9`b
	[MaxHP]         5`b
	[Coins]         1`b
	[Flags]       00000000
	[StatusTable] $StatusTable_80221610
	% ai
	[PartsCount]    2`s
	[PartsTable]  $PartsTable_802216BC
	[Script]      $Script_Init_802217A0
	% move effectiveness
	[Escape]       40`b
	[Item]         90`b
	[AirLift]      90`b
	[Hurricane]    90`b % Bow's "Spook" as well
	[UpAndAway]    95`b
	[PowerBounce]  80`b
	[SpinSmash]     0`b % weight (0-4)
	% ui positions
	[Size]         26`b  32`b % width height
	[HealthBar]     0`b   0`b % dx dy
	[StatusTurn]  -10`b  25`b % dx dy
	[StatusIcon]   10`b  25`b % dx dy
}

#new:Actor $BanditB
{
	% stats
	[Index]        13b
	[Level]         9`b
	[MaxHP]         5`b
	[Coins]         1`b
	[Flags]       00600000
	[StatusTable] $StatusTable_80221610
	% ai
	[PartsCount]    1`s
	[PartsTable]  $PartsTable_80221704
	[Script]      $Script_Init_80221814
	% move effectiveness
	[Escape]       40`b
	[Item]         90`b
	[AirLift]      90`b
	[Hurricane]    90`b % Bow's "Spook" as well
	[UpAndAway]    95`b
	[PowerBounce]  80`b
	[SpinSmash]     0`b % weight (0-4)
	% ui positions
	[Size]         26`b  32`b % width height
	[HealthBar]     0`b   0`b % dx dy
	[StatusTurn]  -10`b  25`b % dx dy
	[StatusIcon]   10`b  25`b % dx dy
}

#new:Vector3D $Vector3D_80221778
{
	0` -1000` 0`
}

#new:SpecialFormation $SpecialFormation_80221784
{
	$BanditB $Vector3D_80221778 00000000 00000000 00000000 00000000 00000000
}

#new:Script $Script_Init_802217A0
{
    0:  Call  BindTakeTurn  ( .Actor:Self $Script_TakeTurn_80222950 )
   14:  Call  BindIdle      ( .Actor:Self $Script_Idle_80221860 )
   28:  Call  BindHandleEvent   ( .Actor:Self $Script_HandleEvent_80221FD8 )
   3C:  Call  SetActorVar   ( .Actor:Self 00000000 00000000 )
   54:  Return
   5C:  End
}

#new:Script $Script_HandleEvent_80221804
{
    0:  Return
    8:  End
}

#new:Script $Script_Init_80221814
{
    0:  Call  BindTakeTurn      ( .Actor:Self $Script_HandleEvent_80221804 )
   14:  Call  BindIdle  ( .Actor:Self $Script_HandleEvent_80221804 )
   28:  Call  BindHandleEvent   ( .Actor:Self $Script_HandleEvent_80221804 )
   3C:  Return
   44:  End
}

#new:Script $Script_Idle_80221860
{
    0:  Return
    8:  End
}

#new:Script $Script_80221870
{
    0:  Call  GetActorVar   ( .Actor:Self 00000000 *Var0 )
   18:  Switch  *Var0
   24:  	Case  ==  00000000
   30:  	Case  ==  00000001
   3C:  		Call  SetActorVar   ( .Actor:Self 00000000 00000000 )
   54:  		Call  SetIdleAnimations ( .Actor:Self 00000001 $IdleAnimations_80221560 )
   6C:  		Call  SetPartFlagBits   ( .Actor:Self 00000002 00100000 .False )
   88:  		Call  SummonEnemy   ( $SpecialFormation_80221784 00000000 )
   9C:  		Set   *VarA  *Var0
   AC:  		Call  GetPartOffset ( .Actor:Self 00000002 *Var1 *Var2 *Var3 )
   CC:  		Call  SetActorPos   ( *VarA *Var1 *Var2 *Var3 )
   E8:  		Call  SetPartFlagBits   ( .Actor:Self 00000002 00000001 .True )
  104:  		Call  GetActorVar   ( .Actor:Self 00000001 *Var0 )
  11C:  		Call  SetActorVar   ( *VarA 00000001 *Var0 )
  134:  		Call  SetActorJumpGravity   ( *VarA *Fixed[1.0] )
  148:  		Call  RandInt       ( 00000168 *Var0 )
  15C:  		Call  GetActorPos   ( .Actor:Self *Var1 *Var2 *Var3 )
  178:  		Add   *Var2  0000001E
  188:  		Call  SetActorPos   ( *VarA *Var1 *Var2 *Var3 )
  1A4:  		Call  SetActorSounds    ( *VarA .ActorSound:Jump 00000000 00000000 )
  1C0:  		Call  AddVectorPolar    ( *Var1 *Var3 *Fixed[40.0] *Var0 )
  1DC:  		Call  SetGoalPos    ( *VarA *Var1  0` *Var3 )
  1F8:  		Call  JumpToGoal    ( *VarA  20` .False .True .False )
  218:  		Call  PlaySoundAtActor  ( *VarA 00000212 )
  22C:  		Call  AddVectorPolar    ( *Var1 *Var3 *Fixed[20.0] *Var0 )
  248:  		Call  SetGoalPos    ( *VarA *Var1  0` *Var3 )
  264:  		Call  JumpToGoal    ( *VarA  10` .False .True .False )
  284:  		Call  PlaySoundAtActor  ( *VarA 00000212 )
  298:  		Call  AddVectorPolar    ( *Var1 *Var3 *Fixed[10.0] *Var0 )
  2B4:  		Call  SetGoalPos    ( *VarA *Var1  0` *Var3 )
  2D0:  		Call  JumpToGoal    ( *VarA  5` .False .True .False )
  2F0:  		Call  PlaySoundAtActor  ( *VarA 00000212 )
  304:  		Loop
  310:  			Call  GetBattleFlags    ( *Var1 )
  320:  			If  *Var1  &  00080000
  330:  				BreakLoop
  338:  			EndIf
  340:  			If  *Var1  !&  00000100
  350:  				BreakLoop
  358:  			EndIf
  360:  			Wait  1`
  36C:  		EndLoop
  374:  		Wait  15`
  380:  		Call  SetActorJumpGravity   ( *VarA *Fixed[1.0] )
  394:  		Call  SetActorSpeed ( *VarA *Fixed[6.0] )
  3A8:  		Set   *Var0  FFFFFFBA
  3B8:  		Set   *Var1  00000000
  3C8:  		Set   *Var2  0000000A
  3D8:  		Label  5
  3E4:  		Call  GetActorPos   ( *VarA *Var3 *Var4 *Var5 )
  400:  		If  *Var3  ==  *Var0
  410:  			Goto  A
  41C:  		EndIf
  424:  		If  *Var3  <  *Var0
  434:  			Set   *Var4  *Var0
  444:  			Sub   *Var4  *Var3
  454:  			If  *Var4  <  0000001E
  464:  				Call  SetGoalPos        ( *VarA *Var0 *Var1 *Var2 )
  480:  				Call  JumpToGoal        ( *VarA  5` .False .True .False )
  4A0:  				Call  PlaySoundAtActor  ( *VarA 00000212 )
  4B4:  			Else
  4BC:  				Set   *Var4  *Var3
  4CC:  				Add   *Var3  0000001E
  4DC:  				Call  SetGoalPos        ( *VarA *Var3 *Var1 *Var2 )
  4F8:  				Call  JumpToGoal        ( *VarA  0` .False .True .False )
  518:  				Call  PlaySoundAtActor  ( *VarA 00000212 )
  52C:  			EndIf
  534:  		Else
  53C:  			Set   *Var4  *Var3
  54C:  			Sub   *Var4  *Var0
  55C:  			If  *Var4  <  0000001E
  56C:  				Call  SetGoalPos        ( *VarA *Var0 *Var1 *Var2 )
  588:  				Call  JumpToGoal        ( *VarA  5` .False .True .False )
  5A8:  				Call  PlaySoundAtActor  ( *VarA 00000212 )
  5BC:  			Else
  5C4:  				Sub   *Var3  0000001E
  5D4:  				Call  SetGoalPos        ( *VarA *Var3 *Var1 *Var2 )
  5F0:  				Call  JumpToGoal        ( *VarA  0` .False .True .False )
  610:  				Call  PlaySoundAtActor  ( *VarA 00000212 )
  624:  			EndIf
  62C:  		EndIf
  634:  		Goto  5
  640:  		Label  A
  64C:  		Call  EnableActorBlur   ( *VarA 00000001 )
  660:  		Call  SetTargetActor    ( *VarA .Actor:Player )
  674:  		Call  SetGoalToTarget   ( *VarA )
  684:  		Call  JumpToGoal    ( *VarA  15` .False .False .False )
  6A4:  		Call  GetGoalPos    ( *VarA *Var0 *Var1 *Var2 )
  6C0:  		Call  PlayEffect    ( ~FX:SmallGoldSparkle *Var0 *Var1 *Var2 *Fixed[1.0] 00000000 00000000 00000000 00000000 00000000 00000000 00000000 00000000 )
  704:  		Call  PlaySoundAtActor  ( *VarA 00000211 )
  718:  		Call  GetActorVar   ( *VarA 00000001 *Var0 )
  730:  		Call  AddCoin       ( *Var0 )
  740:  		Call  RemoveActor   ( *VarA )
  750:  EndSwitch
  758:  Return
  760:  End
}

#new:Script $Script_HandleEvent_80221FD8
{
    0:  UseArray  $End[0]
    C:  Call  UseIdleAnimation  ( .Actor:Self .False )
   20:  Call  EnableIdleScript  ( .Actor:Self 00000000 )
   34:  Call  GetLastEvent      ( .Actor:Self *Var0 )
   48:  Switch  *Var0
   54:  	Case  ==  .Event:HitCombo % 9
   60:  		Exec  $Script_80221870 *Array[0]
   70:  		SetConst  *Var0  00000001
   80:  		SetConst  *Var1  00320009
   90:  		ExecWait  DoNormalHit
   9C:  		Loop
   A8:  			DoesScriptExist  *Array[0] *Var0
   B8:  			If  *Var0  ==  00000000
   C8:  				BreakLoop
   D0:  			EndIf
   D8:  			Wait  1`
   E4:  		EndLoop
   EC:  	CaseOR  ==  .Event:Hit % A
   F8:  	CaseOR  ==  .Event:SpinSmashLaunchHit % 11
  104:  		Exec  $Script_80221870 *Array[0]
  114:  		SetConst  *Var0  00000001
  124:  		SetConst  *Var1  00320009
  134:  		ExecWait  DoNormalHit
  140:  		Loop
  14C:  			DoesScriptExist  *Array[0] *Var0
  15C:  			If  *Var0  ==  00000000
  16C:  				BreakLoop
  174:  			EndIf
  17C:  			Wait  1`
  188:  		EndLoop
  190:  	EndCaseGroup
  198:  	Case  ==  .Event:BurnHit % E
  1A4:  		Exec  $Script_80221870 *Array[0]
  1B4:  		SetConst  *Var0  00000001
  1C4:  		SetConst  *Var1  0032000A
  1D4:  		SetConst  *Var2  0032000B
  1E4:  		ExecWait  DoBurnHit
  1F0:  		Loop
  1FC:  			DoesScriptExist  *Array[0] *Var0
  20C:  			If  *Var0  ==  00000000
  21C:  				BreakLoop
  224:  			EndIf
  22C:  			Wait  1`
  238:  		EndLoop
  240:  	Case  ==  .Event:BurnDeath % 24
  24C:  		Exec  $Script_80221870 *Array[0]
  25C:  		SetConst  *Var0  00000001
  26C:  		SetConst  *Var1  0032000A
  27C:  		SetConst  *Var2  0032000B
  28C:  		ExecWait  DoBurnHit
  298:  		SetConst  *Var0  00000001
  2A8:  		SetConst  *Var1  0032000B
  2B8:  		ExecWait  DoDeath
  2C4:  		Loop
  2D0:  			DoesScriptExist  *Array[0] *Var0
  2E0:  			If  *Var0  ==  00000000
  2F0:  				BreakLoop
  2F8:  			EndIf
  300:  			Wait  1`
  30C:  		EndLoop
  314:  		Return
  31C:  	Case  ==  .Event:SpinSmashHit % B
  328:  		Exec  $Script_80221870 *Array[0]
  338:  		SetConst  *Var0  00000001
  348:  		SetConst  *Var1  00320009
  358:  		ExecWait  DoSpinSmashHit
  364:  		Loop
  370:  			DoesScriptExist  *Array[0] *Var0
  380:  			If  *Var0  ==  00000000
  390:  				BreakLoop
  398:  			EndIf
  3A0:  			Wait  1`
  3AC:  		EndLoop
  3B4:  	Case  ==  .Event:SpinSmashDeath % 21
  3C0:  		Exec  $Script_80221870 *Array[0]
  3D0:  		SetConst  *Var0  00000001
  3E0:  		SetConst  *Var1  00320009
  3F0:  		ExecWait  DoSpinSmashHit
  3FC:  		SetConst  *Var0  00000001
  40C:  		SetConst  *Var1  00320009
  41C:  		ExecWait  DoDeath
  428:  		Loop
  434:  			DoesScriptExist  *Array[0] *Var0
  444:  			If  *Var0  ==  00000000
  454:  				BreakLoop
  45C:  			EndIf
  464:  			Wait  1`
  470:  		EndLoop
  478:  		Return
  480:  	Case  ==  .Event:ShockHit % 2F
  48C:  		SetConst  *Var0  00000001
  49C:  		SetConst  *Var1  00320009
  4AC:  		ExecWait  DoShockHit
  4B8:  		SetConst  *Var0  00000001
  4C8:  		SetConst  *Var1  00320009
  4D8:  		ExecWait  DoJumpBack
  4E4:  		SetConst  *Var0  00000001
  4F4:  		SetConst  *Var1  00320007
  504:  		ExecWait  DoReturnHome
  510:  		Call  SetActorJumpGravity   ( .Actor:Self *Fixed[1.6] )
  524:  		Call  JumpToGoal    ( .Actor:Self  5` .False .True .False )
  544:  	Case  ==  .Event:ShockDeath % 26
  550:  		SetConst  *Var0  00000001
  560:  		SetConst  *Var1  00320009
  570:  		ExecWait  DoShockHit
  57C:  		SetConst  *Var0  00000001
  58C:  		SetConst  *Var1  00320009
  59C:  		ExecWait  DoDeath
  5A8:  		Return
  5B0:  	CaseOR  ==  00000017 % 17
  5BC:  	CaseOR  ==  .Event:Immune % 19
  5C8:  	CaseOR  ==  .Event:AirLiftFailed % 1F
  5D4:  		Call  GetActorVar   ( .Actor:Self 00000000 *Var0 )
  5EC:  		Switch  *Var0
  5F8:  			Case  ==  00000000
  604:  				SetConst  *Var1  00320001
  614:  			Case  ==  00000001
  620:  				SetConst  *Var1  00320002
  630:  		EndSwitch
  638:  		SetConst  *Var0  00000001
  648:  		ExecWait  DoImmune
  654:  	EndCaseGroup
  65C:  	CaseOR  ==  .Event:Death % 20
  668:  	CaseOR  ==  00000025 % 25
  674:  		Exec  $Script_80221870 *Array[0]
  684:  		SetConst  *Var0  00000001
  694:  		SetConst  *Var1  00320009
  6A4:  		ExecWait  DoNormalHit
  6B0:  		Wait  10`
  6BC:  		SetConst  *Var0  00000001
  6CC:  		SetConst  *Var1  00320009
  6DC:  		ExecWait  DoDeath
  6E8:  		Loop
  6F4:  			DoesScriptExist  *Array[0] *Var0
  704:  			If  *Var0  ==  00000000
  714:  				BreakLoop
  71C:  			EndIf
  724:  			Wait  1`
  730:  		EndLoop
  738:  		Return
  740:  	EndCaseGroup
  748:  	Case  ==  .Event:RecoverStatus % 31
  754:  		SetConst  *Var0  00000001
  764:  		SetConst  *Var1  00320001
  774:  		ExecWait  DoRecover
  780:  	Case  ==  .Event:ScareAway % 39
  78C:  		Exec  $Script_80221870 *Array[0]
  79C:  		SetConst  *Var0  00000001
  7AC:  		SetConst  *Var1  00320007
  7BC:  		SetConst  *Var2  00320009
  7CC:  		ExecWait  DoScareAway
  7D8:  		Loop
  7E4:  			DoesScriptExist  *Array[0] *Var0
  7F4:  			If  *Var0  ==  00000000
  804:  				BreakLoop
  80C:  			EndIf
  814:  			Wait  1`
  820:  		EndLoop
  828:  		Return
  830:  	Case  ==  .Event:BeginAirLift % 3A
  83C:  		Exec  $Script_80221870 *Array[0]
  84C:  		SetConst  *Var0  00000001
  85C:  		SetConst  *Var1  00320009
  86C:  		ExecWait  DoAirLift
  878:  		Loop
  884:  			DoesScriptExist  *Array[0] *Var0
  894:  			If  *Var0  ==  00000000
  8A4:  				BreakLoop
  8AC:  			EndIf
  8B4:  			Wait  1`
  8C0:  		EndLoop
  8C8:  	Case  ==  .Event:BlowAway % 16
  8D4:  		SetConst  *Var0  00000001
  8E4:  		SetConst  *Var1  00320009
  8F4:  		SetConst  *Var2  00040000
  904:  		ExecWait  DoBlowAway
  910:  		Return
  918:  	Default
  920:  EndSwitch
  928:  Call  SetAnimation      ( .Actor:Self 00000001 00320001 )
  940:  Call  EnableIdleScript  ( .Actor:Self 00000001 )
  954:  Call  UseIdleAnimation  ( .Actor:Self .True )
  968:  Return
  970:  End
}

#new:Script $Script_TakeTurn_80222950
{
    0:  Call  UseIdleAnimation  ( .Actor:Self .False )
   14:  Call  EnableIdleScript  ( .Actor:Self 00000000 )
   28:  Call  SetTargetActor    ( .Actor:Self .Actor:Player )
   3C:  Call  GetActorVar       ( .Actor:Self 00000000 *Var0 )
   54:  If  *Var0  ==  00000001
   64:  	Call  SetActorYaw   ( .Actor:Self  180` )
   78:  	Call  SetAnimation  ( .Actor:Self 00000001 00320008 )
   90:  	Wait  30`
   9C:  	Call  SetActorSpeed ( .Actor:Self *Fixed[10.0] )
   B0:  	Call  SetGoalPos    ( .Actor:Self  300`  0`  0` )
   CC:  	Call  RunToGoal     ( .Actor:Self  0` .False )
   E4:  	Call  SetBattleFlagBits ( 00040000 .True )
   F8:  	Call  8027D32C      ( FFFFFF81 )
  108:  	Call  RemoveActor   ( .Actor:Self )
  118:  	Return
  120:  EndIf
  128:  Call  UseBattleCamPreset    ( 0000003F )
  138:  Call  BattleCamTargetActor  ( .Actor:Self )
  148:  Call  8024ECF8  ( FFFFFFFF 00000001 00000000 )
  160:  Call  GetBattlePhase        ( *Var0 )
  170:  If  *Var0  ==  00000001
  180:  	Call  SetGoalToTarget   ( .Actor:Self )
  190:  	Call  GetGoalPos        ( .Actor:Self *Var0 *Var1 *Var2 )
  1AC:  	Add   *Var0  00000032
  1BC:  	Set   *Var1  00000000
  1CC:  	Call  SetActorPos       ( .Actor:Self *Var0 *Var1 *Var2 )
  1E8:  Else
  1F0:  	Call  SetAnimation  ( .Actor:Self 00000001 00320007 )
  208:  	Call  SetGoalToTarget   ( .Actor:Self )
  218:  	Call  AddGoalPos    ( .Actor:Self  50`  0`  0` )
  234:  	Call  SetActorSpeed ( .Actor:Self *Fixed[6.0] )
  248:  	Call  RunToGoal     ( .Actor:Self  0` .False )
  260:  	Call  SetAnimation  ( .Actor:Self 00000001 00320001 )
  278:  	Wait  6`
  284:  EndIf
  28C:  Call  SetActorSpeed     ( .Actor:Self *Fixed[2.0] )
  2A0:  Call  SetAnimation      ( .Actor:Self 00000001 00320005 )
  2B8:  Call  SetGoalToTarget   ( .Actor:Self )
  2C8:  Call  AddGoalPos        ( .Actor:Self  35`  0`  0` )
  2E4:  Call  RunToGoal ( .Actor:Self  0` .False )
  2FC:  Call  PlaySoundAtActor  ( .Actor:Self 000020C2 )
  310:  Call  SetActorSounds    ( .Actor:Self .ActorSound:Walk 00000000 00000000 )
  32C:  Call  EnemyTestTarget   ( .Actor:Self *Var0 ~Flags:DamageType:0 00000000 00000001 00000010 )
  350:  Switch  *Var0
  35C:  	CaseOR  ==  .HitResult:Miss % 6
  368:  	CaseOR  ==  .HitResult:Lucky % 5
  374:  		Set   *VarA  *Var0
  384:  		Call  SetAnimation  ( .Actor:Self 00000001 0032000D )
  39C:  		Call  SetGoalToTarget       ( .Actor:Self )
  3AC:  		Call  SetActorSpeed ( .Actor:Self *Fixed[8.0] )
  3C0:  		Call  RunToGoal     ( .Actor:Self  0` .False )
  3D8:  		Call  ResetAllActorSounds   ( .Actor:Self )
  3E8:  		Call  SetActorSpeed ( .Actor:Self *Fixed[6.0] )
  3FC:  		Call  SetActorJumpGravity   ( .Actor:Self *Fixed[0.5] )
  410:  		Call  GetActorPos   ( .Actor:Self *Var0 *Var1 *Var2 )
  42C:  		Sub   *Var0  0000001E
  43C:  		Call  SetGoalPos    ( .Actor:Self *Var0 *Var1 *Var2 )
  458:  		Call  JumpToGoal    ( .Actor:Self  8` .False .True .False )
  478:  		Sub   *Var0  00000014
  488:  		Call  SetGoalPos    ( .Actor:Self *Var0 *Var1 *Var2 )
  4A4:  		Call  JumpToGoal    ( .Actor:Self  8` .False .True .False )
  4C4:  		Wait  5`
  4D0:  		If  *VarA  ==  .HitResult:Lucky % 5
  4E0:  			Call  EnemyTestTarget   ( .Actor:Self *Var0 ~Flags:DamageType:TriggerLucky 00000000 00000000 00000000 )
  504:  		EndIf
  50C:  		Wait  5`
  518:  		Call  UseBattleCamPreset    ( 00000002 )
  528:  		Call  YieldTurn ( )
  534:  		Call  SetActorYaw   ( .Actor:Self  180` )
  548:  		Call  AddActorDecoration    ( .Actor:Self 00000001 00000000 .Decoration:Sweat )
  564:  		Call  SetAnimation  ( .Actor:Self 00000001 00320007 )
  57C:  		Call  SetGoalToHome ( .Actor:Self )
  58C:  		Call  SetActorSpeed ( .Actor:Self *Fixed[8.0] )
  5A0:  		Call  RunToGoal     ( .Actor:Self  0` .False )
  5B8:  		Call  SetAnimation  ( .Actor:Self 00000001 00320001 )
  5D0:  		Call  RemoveActorDecoration ( .Actor:Self 00000001 00000000 )
  5E8:  		Call  SetActorYaw   ( .Actor:Self  0` )
  5FC:  		Call  EnableIdleScript      ( .Actor:Self 00000001 )
  610:  		Call  UseIdleAnimation      ( .Actor:Self .True )
  624:  		Return
  62C:  	EndCaseGroup
  634:  EndSwitch
  63C:  Call  SetAnimation      ( .Actor:Self 00000001 0032000D )
  654:  Call  SetGoalToTarget   ( .Actor:Self )
  664:  Call  SetActorSpeed     ( .Actor:Self *Fixed[8.0] )
  678:  Call  RunToGoal ( .Actor:Self  0` .False )
  690:  Call  ResetAllActorSounds   ( .Actor:Self )
  6A0:  Wait  2`
  6AC:  Call  EnemyDamageTarget ( .Actor:Self *Var0 ~Flags:DamageType:0 00000000 00000000 00000002 00000020 )
  6D4:  Switch  *Var0
  6E0:  	CaseOR  ==  .HitResult:Hit % 0
  6EC:  	CaseOR  ==  .HitResult:QuakeImmune % 2
  6F8:  		Call  GetLastDamage ( .Actor:Player *Var0 )
  70C:  		If  *Var0  <=  00000000
  71C:  			Set   *Var0  00000001
  72C:  			Goto  A
  738:  		EndIf
  740:  		Call  GetBattleFlags    ( *Var0 )
  750:  		If  *Var0  &  80000000
  760:  			Set   *Var0  00000001
  770:  			Goto  A
  77C:  		EndIf
  784:  		Call  GetStatusFlags    ( .Actor:Self *Var0 )
  798:  		If  *Var0  &  ~Flags:StatusFlags:Shrink % 80000
  7A8:  			Set   *Var0  00000000
  7B8:  			Goto  A
  7C4:  		EndIf
  7CC:  		Call  GetStatusFlags    ( .Actor:Player *Var0 )
  7E0:  		If  *Var0  &  ~Flags:StatusFlags:Stone % 100000
  7F0:  			Set   *Var0  00000000
  800:  			Goto  A
  80C:  		EndIf
  814:  		Call  AddCoin   ( 00000000 )
  824:  		Switch  *Var0
  830:  			Case  ==  00000000
  83C:  				Set   *Var0  00000001
  84C:  			Case  <  0000000A
  858:  				Call  SetActorVar   ( .Actor:Self 00000001 *Var0 )
  870:  				Set   *Var0  00000002
  880:  			Case  >=  0000000A
  88C:  				Call  SetActorVar   ( .Actor:Self 00000001 0000000A )
  8A4:  				Set   *Var0  00000002
  8B4:  		EndSwitch
  8BC:  		Label  A
  8C8:  		Switch  *Var0
  8D4:  			Case  ==  00000000
  8E0:  				Call  GetGoalPos    ( .Actor:Self *Var0 *Var1 *Var2 )
  8FC:  				Add   *Var0  0000001E
  90C:  				Set   *Var1  00000000
  91C:  				Call  SetActorJumpGravity   ( .Actor:Self *Fixed[1.8] )
  930:  				Call  SetGoalPos    ( .Actor:Self *Var0 *Var1 *Var2 )
  94C:  				Call  JumpToGoal    ( .Actor:Self  10` .False .True .False )
  96C:  				Call  SetAnimation  ( .Actor:Self 00000001 00320001 )
  984:  				Wait  20`
  990:  				Call  SetAnimation  ( .Actor:Self 00000001 00320007 )
  9A8:  			Case  ==  00000001
  9B4:  				Call  GetGoalPos    ( .Actor:Self *Var0 *Var1 *Var2 )
  9D0:  				Add   *Var0  0000001E
  9E0:  				Set   *Var1  00000000
  9F0:  				Call  SetActorJumpGravity   ( .Actor:Self *Fixed[1.8] )
  A04:  				Call  SetGoalPos    ( .Actor:Self *Var0 *Var1 *Var2 )
  A20:  				Call  JumpToGoal    ( .Actor:Self  10` .False .True .False )
  A40:  				Call  SetAnimation  ( .Actor:Self 00000001 0032000E )
  A58:  				Wait  20`
  A64:  				Call  PlaySoundAtActor      ( .Actor:Self 000020C3 )
  A78:  				Call  SetAnimation  ( .Actor:Self 00000001 00320010 )
  A90:  				Wait  20`
  A9C:  				Call  SetAnimation  ( .Actor:Self 00000001 00320007 )
  AB4:  			Default
  ABC:  				Call  SetGoalToTarget   ( .Actor:Self )
  ACC:  				Call  GetGoalPos    ( .Actor:Self *VarA *VarB *VarC )
  AE8:  				Add   *VarA  0000001E
  AF8:  				Set   *VarB  00000000
  B08:  				Call  GetActorVar   ( .Actor:Self 00000001 *Var0 )
  B20:  				Mul   *Var0  FFFFFFFF
  B30:  				Call  AddCoin       ( *Var0 )
  B40:  				Thread
  B48:  					Call  SetPartFlagBits   ( .Actor:Self 00000002 00100000 .True )
  B64:  					Call  SetPartFlagBits   ( .Actor:Self 00000002 00000001 .False )
  B80:  					Call  GetActorPos       ( .Actor:Player *Var0 *Var1 *Var2 )
  B9C:  					Call  SetPartPos        ( .Actor:Self 00000002 *Var0 *Var1 *Var2 )
  BBC:  					Call  SetPartJumpGravity    ( .Actor:Self 00000002 *Fixed[1.0] )
  BD4:  					Add   *VarB  0000001E
  BE4:  					Call  JumpPartTo        ( .Actor:Self 00000002 *VarA *VarB *VarC  22` .True )
  C0C:  					Call  SetPartFlagBits   ( .Actor:Self 00000002 00100000 .False )
  C28:  				EndThread
  C30:  				Thread
  C38:  					Call  GetActorVar   ( .Actor:Self 00000001 *Var0 )
  C50:  					Loop  *Var0
  C5C:  						Call  PlaySoundAtActor  ( .Actor:Self 00000212 )
  C70:  						Wait  1`
  C7C:  					EndLoop
  C84:  				EndThread
  C8C:  				Call  SetActorJumpGravity   ( .Actor:Self *Fixed[1.8] )
  CA0:  				Call  SetGoalPos    ( .Actor:Self *VarA *VarB *VarC )
  CBC:  				Call  JumpToGoal    ( .Actor:Self  10` .False .True .False )
  CDC:  				Call  SetIdleAnimations     ( .Actor:Self 00000001 $IdleAnimations_802215AC )
  CF4:  				Call  SetAnimation  ( .Actor:Self 00000001 0032000E )
  D0C:  				Call  SetActorVar   ( .Actor:Self 00000000 00000001 )
  D24:  				Wait  7`
  D30:  				Call  SetAnimation  ( .Actor:Self 00000001 0032000F )
  D48:  				Wait  20`
  D54:  				Call  SetAnimation  ( .Actor:Self 00000001 00320008 )
  D6C:  		EndSwitch
  D74:  		Call  UseBattleCamPreset    ( 00000002 )
  D84:  		Call  YieldTurn ( )
  D90:  		Call  SetGoalToHome ( .Actor:Self )
  DA0:  		Call  SetActorSpeed ( .Actor:Self *Fixed[8.0] )
  DB4:  		Call  RunToGoal     ( .Actor:Self  0` .False )
  DCC:  	EndCaseGroup
  DD4:  EndSwitch
  DDC:  Call  EnableIdleScript  ( .Actor:Self 00000001 )
  DF0:  Call  UseIdleAnimation  ( .Actor:Self .True )
  E04:  Return
  E0C:  End
}

PADDING: 80223764 to 80223770 (006E9524 to 006E9530)
00000000 00000000 00000000

#new:DefenseTable $DefenseTable_80223770
{
	.Element:Normal 00000000
	.Element:Shock  00000000
	.Element:End
}

#new:StatusTable $StatusTable_80223784
{
	.Status:Normal      0`
	.Status:Default     0`
	.Status:Sleep      70`
	.Status:Poison     50`
	.Status:Frozen      0`
	.Status:Dizzy      90`
	.Status:Fear      100`
	.Status:Static     50`
	.Status:Paralyze   90`
	.Status:Shrink     75`
	.Status:Stop       90`
	.Status:DefaultTurnMod    0`
	.Status:SleepTurnMod      0`
	.Status:PoisonTurnMod     0`
	.Status:FrozenTurnMod     0`
	.Status:DizzyTurnMod      0`
	.Status:FearTurnMod       0`
	.Status:StaticTurnMod     0`
	.Status:ParalyzeTurnMod   1`
	.Status:ShrinkTurnMod     0`
	.Status:StopTurnMod       0`
	.Status:End
}

#new:PartsTable $PartsTable_80223830
{
	00800000 01000000 001800FF $IdleAnimations_8022387C $DefenseTable_80223770 00000000 00000000 FFF60000 00000000
}

#new:Actor $ShyGuy
{
	% stats
	[Index]        1Fb
	[Level]        14`b
	[MaxHP]         7`b
	[Coins]         1`b
	[Flags]       00000000
	[StatusTable] $StatusTable_80223784
	% ai
	[PartsCount]    1`s
	[PartsTable]  $PartsTable_80223830
	[Script]      $Script_Init_802238C8
	% move effectiveness
	[Escape]       60`b
	[Item]         80`b
	[AirLift]      85`b
	[Hurricane]    80`b % Bow's "Spook" as well
	[UpAndAway]    95`b
	[PowerBounce] 100`b
	[SpinSmash]     0`b % weight (0-4)
	% ui positions
	[Size]         28`b  24`b % width height
	[HealthBar]     0`b   0`b % dx dy
	[StatusTurn]  -10`b  20`b % dx dy
	[StatusIcon]   10`b  20`b % dx dy
}

#new:IdleAnimations $IdleAnimations_8022387C
{
	.Status:Normal    003B0001
	.Status:Stone     003B0000
	.Status:Sleep     003B0012
	.Status:Poison    003B0001
	.Status:Stop      003B0000
	.Status:Static    003B0001
	.Status:Paralyze  003B0000
	.Status:Dizzy     003B0013
	.Status:Fear      003B0013
	.Status:End
}

#new:Script $Script_Init_802238C8
{
    0:  Call  BindTakeTurn      ( .Actor:Self $Script_TakeTurn_80225214 )
   14:  Call  BindIdle  ( .Actor:Self $Script_Idle_80223914 )
   28:  Call  BindHandleEvent   ( .Actor:Self $Script_HandleEvent_80223A88 )
   3C:  Return
   44:  End
}

#new:Script $Script_Idle_80223914
{
    0:  Label  0
    C:  Call  GetStatusFlags    ( .Actor:Self *Var0 )
   20:  If  *Var0  &  ~Flags:StatusFlags:Sleep % 1000
   30:  	Call  SetTargetOffset       ( .Actor:Self 00000001  -4`  14` )
   4C:  	Call  8027D4C8  ( FFFFFF81 00000001 00000000 00000000 )
   68:  	Call  $Function_80218310    ( FFFFFFF6 0000000D 0000000A 0000000D )
   84:  Else
   8C:  	Call  SetTargetOffset       ( .Actor:Self 00000001  0`  24` )
   A8:  	Call  8027D4C8  ( FFFFFF81 00000001 FFFFFFFF FFFFFFF6 )
   C4:  	Call  $Function_80218310    ( FFFFFFF6 00000014 0000000A 00000014 )
   E0:  EndIf
   E8:  Wait  1`
   F4:  Goto  0
  100:  Return
  108:  End
}

#new:Script $Script_80223A24
{
    0:  Call  ResetAllActorSounds   ( .Actor:Self )
   10:  SetConst  *Var0  00000001
   20:  SetConst  *Var1  003B0003
   30:  ExecWait  DoReturnHome
   3C:  Call  SetAnimation  ( .Actor:Self 00000001 003B0001 )
   54:  Return
   5C:  End
}

#new:Script $Script_HandleEvent_80223A88
{
    0:  Call  UseIdleAnimation  ( .Actor:Self .False )
   14:  Call  GetLastEvent      ( .Actor:Self *Var0 )
   28:  Switch  *Var0
   34:  	CaseOR  ==  .Event:HitCombo % 9
   40:  	CaseOR  ==  .Event:Hit % A
   4C:  		SetConst  *Var0  00000001
   5C:  		SetConst  *Var1  003B000C
   6C:  		ExecWait  DoNormalHit
   78:  	EndCaseGroup
   80:  	Case  ==  .Event:BurnHit % E
   8C:  		SetConst  *Var0  00000001
   9C:  		SetConst  *Var1  003B000D
   AC:  		SetConst  *Var2  003B000E
   BC:  		ExecWait  DoBurnHit
   C8:  	Case  ==  .Event:BurnDeath % 24
   D4:  		SetConst  *Var0  00000001
   E4:  		SetConst  *Var1  003B000D
   F4:  		SetConst  *Var2  003B000E
  104:  		ExecWait  DoBurnHit
  110:  		SetConst  *Var0  00000001
  120:  		SetConst  *Var1  003B000E
  130:  		ExecWait  DoDeath
  13C:  		Return
  144:  	Case  ==  .Event:SpinSmashHit % B
  150:  		SetConst  *Var0  00000001
  160:  		SetConst  *Var1  003B000C
  170:  		ExecWait  DoSpinSmashHit
  17C:  	Case  ==  .Event:SpinSmashDeath % 21
  188:  		SetConst  *Var0  00000001
  198:  		SetConst  *Var1  003B000C
  1A8:  		ExecWait  DoSpinSmashHit
  1B4:  		SetConst  *Var0  00000001
  1C4:  		SetConst  *Var1  003B000C
  1D4:  		ExecWait  DoDeath
  1E0:  		Return
  1E8:  	Case  ==  .Event:ShockHit % 2F
  1F4:  		SetConst  *Var0  00000001
  204:  		SetConst  *Var1  003B000C
  214:  		ExecWait  DoShockHit
  220:  		SetConst  *Var0  00000001
  230:  		SetConst  *Var1  003B000C
  240:  		ExecWait  DoJumpBack
  24C:  		Call  SetActorSpeed ( .Actor:Self *Fixed[4.0] )
  260:  		ExecWait  $Script_80223A24
  26C:  	Case  ==  .Event:ShockDeath % 26
  278:  		SetConst  *Var0  00000001
  288:  		SetConst  *Var1  003B000C
  298:  		ExecWait  DoShockHit
  2A4:  		SetConst  *Var0  00000001
  2B4:  		SetConst  *Var1  003B000C
  2C4:  		ExecWait  DoDeath
  2D0:  		Return
  2D8:  	CaseOR  ==  00000017 % 17
  2E4:  	CaseOR  ==  .Event:Immune % 19
  2F0:  	CaseOR  ==  .Event:AirLiftFailed % 1F
  2FC:  		SetConst  *Var0  00000001
  30C:  		SetConst  *Var1  003B0001
  31C:  		ExecWait  DoImmune
  328:  	EndCaseGroup
  330:  	Case  ==  .Event:Death % 20
  33C:  		SetConst  *Var0  00000001
  34C:  		SetConst  *Var1  003B000C
  35C:  		ExecWait  DoNormalHit
  368:  		Wait  10`
  374:  		SetConst  *Var0  00000001
  384:  		SetConst  *Var1  003B000C
  394:  		ExecWait  DoDeath
  3A0:  		Return
  3A8:  	Case  ==  .Event:RecoverStatus % 31
  3B4:  		SetConst  *Var0  00000001
  3C4:  		SetConst  *Var1  003B0001
  3D4:  		ExecWait  DoRecover
  3E0:  	Case  ==  .Event:ScareAway % 39
  3EC:  		SetConst  *Var0  00000001
  3FC:  		SetConst  *Var1  003B0003
  40C:  		SetConst  *Var2  003B0014
  41C:  		ExecWait  DoScareAway
  428:  		Return
  430:  	Case  ==  .Event:BeginAirLift % 3A
  43C:  		SetConst  *Var0  00000001
  44C:  		SetConst  *Var1  003B000C
  45C:  		ExecWait  DoAirLift
  468:  	Case  ==  .Event:BlowAway % 16
  474:  		SetConst  *Var0  00000001
  484:  		SetConst  *Var1  003B000C
  494:  		ExecWait  DoBlowAway
  4A0:  		Return
  4A8:  	Default
  4B0:  EndSwitch
  4B8:  Call  UseIdleAnimation  ( .Actor:Self .True )
  4CC:  Return
  4D4:  End
}

#new:Script $Script_80223F64
{
    0:  Call  UseIdleAnimation  ( .Actor:Self .False )
   14:  Call  EnableIdleScript  ( .Actor:Self 00000000 )
   28:  Call  SetTargetActor    ( .Actor:Self .Actor:Player )
   3C:  Call  UseBattleCamPreset    ( 0000003F )
   4C:  Call  BattleCamTargetActor  ( .Actor:Self )
   5C:  Call  MoveBattleCamOver (  20` )
   6C:  Call  8024ECF8  ( FFFFFFFF 00000001 00000000 )
   84:  Call  SetAnimation      ( .Actor:Self 00000001 003B0003 )
   9C:  Call  SetActorSpeed     ( .Actor:Self *Fixed[4.0] )
   B0:  Call  SetGoalToTarget   ( .Actor:Self )
   C0:  Call  GetGoalPos        ( .Actor:Self *Var0 *Var1 *Var2 )
   DC:  Add   *Var0  00000032
   EC:  Set   *Var1  00000000
   FC:  Call  SetGoalPos        ( .Actor:Self *Var0 *Var1 *Var2 )
  118:  Call  RunToGoal ( .Actor:Self  0` .False )
  130:  Call  EnemyTestTarget   ( .Actor:Self *Var0 ~Flags:DamageType:0 00000000 00000001 00000010 )
  154:  Switch  *Var0
  160:  	CaseOR  ==  .HitResult:Miss % 6
  16C:  	CaseOR  ==  .HitResult:Lucky % 5
  178:  		Set   *VarA  *Var0
  188:  		Call  SetActorSounds    ( .Actor:Self .ActorSound:Jump 000002EF 00000000 )
  1A4:  		Call  SetActorSounds    ( .Actor:Self .ActorSound:Walk 000020BA 000003B4 )
  1C0:  		Call  SetActorSounds    ( .Actor:Self .ActorSound:WalkIncrement 0000000A 00000000 )
  1DC:  		Call  SetActorSpeed ( .Actor:Self *Fixed[6.0] )
  1F0:  		Call  SetAnimation  ( .Actor:Self 00000001 003B0004 )
  208:  		Call  SetGoalToTarget   ( .Actor:Self )
  218:  		Call  RunToGoal     ( .Actor:Self  0` .False )
  230:  		Call  SetAnimation  ( .Actor:Self 00000001 003B0005 )
  248:  		Call  SetActorSpeed ( .Actor:Self *Fixed[6.0] )
  25C:  		Call  SetActorJumpGravity   ( .Actor:Self *Fixed[0.5] )
  270:  		Call  GetActorPos   ( .Actor:Self *Var0 *Var1 *Var2 )
  28C:  		Sub   *Var0  0000001E
  29C:  		Call  SetGoalPos    ( .Actor:Self *Var0 *Var1 *Var2 )
  2B8:  		Call  JumpToGoal    ( .Actor:Self  8` .False .True .False )
  2D8:  		If  *VarA  ==  .HitResult:Lucky % 5
  2E8:  			Call  EnemyTestTarget   ( .Actor:Self *VarA ~Flags:DamageType:TriggerLucky 00000000 00000000 00000000 )
  30C:  		EndIf
  314:  		Call  ResetAllActorSounds   ( .Actor:Self )
  324:  		Sub   *Var0  00000014
  334:  		Call  SetGoalPos        ( .Actor:Self *Var0 *Var1 *Var2 )
  350:  		Call  JumpToGoal        ( .Actor:Self  8` .False .True .False )
  370:  		Wait  15`
  37C:  		Call  UseBattleCamPreset    ( 00000002 )
  38C:  		Call  SetActorYaw       ( .Actor:Self  180` )
  3A0:  		Call  AddActorDecoration    ( .Actor:Self 00000001 00000000 .Decoration:Sweat )
  3BC:  		Call  SetActorSpeed     ( .Actor:Self *Fixed[4.0] )
  3D0:  		SetConst  *Var0  00000001
  3E0:  		SetConst  *Var1  003B0004
  3F0:  		ExecWait  DoReturnHome
  3FC:  		Call  RemoveActorDecoration ( .Actor:Self 00000001 00000000 )
  414:  		Call  SetActorYaw       ( .Actor:Self  0` )
  428:  		Call  SetAnimation      ( .Actor:Self 00000001 003B0001 )
  440:  		Call  EnableIdleScript  ( .Actor:Self 00000001 )
  454:  		Call  UseIdleAnimation  ( .Actor:Self .True )
  468:  		Return
  470:  	EndCaseGroup
  478:  EndSwitch
  480:  Thread
  488:  	Wait  3`
  494:  	Call  PlaySoundAtActor  ( .Actor:Self 000002EF )
  4A8:  EndThread
  4B0:  Call  SetActorSounds    ( .Actor:Self .ActorSound:Walk 000020BA 000003B4 )
  4CC:  Call  SetActorSounds    ( .Actor:Self .ActorSound:WalkIncrement 0000000A 00000000 )
  4E8:  Call  SetActorSpeed     ( .Actor:Self *Fixed[6.0] )
  4FC:  Call  SetAnimation      ( .Actor:Self 00000001 003B0004 )
  514:  Call  SetGoalToTarget   ( .Actor:Self )
  524:  Call  GetGoalPos        ( .Actor:Self *Var0 *Var1 *Var2 )
  540:  Add   *Var0  0000000A
  550:  Set   *Var1  00000000
  560:  Call  SetGoalPos        ( .Actor:Self *Var0 *Var1 *Var2 )
  57C:  Call  RunToGoal ( .Actor:Self  0` .False )
  594:  Call  SetAnimation      ( .Actor:Self 00000001 003B0005 )
  5AC:  Wait  2`
  5B8:  Call  SetGoalToTarget   ( .Actor:Self )
  5C8:  Call  EnemyDamageTarget ( .Actor:Self *Var0 ~Flags:DamageType:0 00000000 00000000 00000002 00000020 )
  5F0:  Call  ResetAllActorSounds   ( .Actor:Self )
  600:  Call  UseBattleCamPreset    ( 00000002 )
  610:  Call  MoveBattleCamOver (  15` )
  620:  Call  GetGoalPos        ( .Actor:Self *Var0 *Var1 *Var2 )
  63C:  Add   *Var0  0000001E
  64C:  Set   *Var1  00000000
  65C:  Call  SetActorJumpGravity   ( .Actor:Self *Fixed[1.8] )
  670:  Call  SetGoalPos        ( .Actor:Self *Var0 *Var1 *Var2 )
  68C:  Call  JumpToGoal        ( .Actor:Self  10` .False .True .False )
  6AC:  Call  SetAnimation      ( .Actor:Self 00000001 003B0001 )
  6C4:  Wait  8`
  6D0:  Call  SetActorSpeed     ( .Actor:Self *Fixed[6.0] )
  6E4:  ExecWait  $Script_80223A24
  6F0:  Call  EnableIdleScript  ( .Actor:Self 00000001 )
  704:  Call  UseIdleAnimation  ( .Actor:Self .True )
  718:  Return
  720:  End
}

#new:Script $Script_8022468C
{
    0:  Call  UseIdleAnimation  ( .Actor:Self .False )
   14:  Call  EnableIdleScript  ( .Actor:Self 00000000 )
   28:  Call  SetTargetActor    ( .Actor:Self .Actor:Player )
   3C:  Call  UseBattleCamPreset    ( 0000003F )
   4C:  Call  BattleCamTargetActor  ( .Actor:Self )
   5C:  Call  MoveBattleCamOver (  20` )
   6C:  Call  8024ECF8  ( FFFFFFFF 00000001 00000000 )
   84:  Call  PlaySoundAtActor  ( .Actor:Self 00000234 )
   98:  Call  SetAnimation      ( .Actor:Self 00000001 003B0009 )
   B0:  Wait  20`
   BC:  Call  SetAnimation      ( .Actor:Self 00000001 003B0003 )
   D4:  Call  SetActorSpeed     ( .Actor:Self *Fixed[3.0] )
   E8:  Call  SetGoalToTarget   ( .Actor:Self )
   F8:  Call  GetGoalPos        ( .Actor:Self *Var0 *Var1 *Var2 )
  114:  Add   *Var0  00000050
  124:  Set   *Var1  00000000
  134:  Call  SetGoalPos        ( .Actor:Self *Var0 *Var1 *Var2 )
  150:  Call  RunToGoal ( .Actor:Self  0` .False )
  168:  Call  SetActorSounds    ( .Actor:Self .ActorSound:Walk 000020BA 000003B4 )
  184:  Call  SetActorSounds    ( .Actor:Self .ActorSound:WalkIncrement 0000000A 00000000 )
  1A0:  Call  SetAnimation      ( .Actor:Self 00000001 003B0004 )
  1B8:  Call  SetActorSpeed     ( .Actor:Self *Fixed[5.0] )
  1CC:  Sub   *Var0  00000028
  1DC:  Call  SetGoalPos        ( .Actor:Self *Var0 *Var1 *Var2 )
  1F8:  Call  RunToGoal ( .Actor:Self  0` .False )
  210:  Call  EnemyTestTarget   ( .Actor:Self *Var0 ~Flags:DamageType:0 00000000 00000001 00000010 )
  234:  Switch  *Var0
  240:  	CaseOR  ==  .HitResult:Miss % 6
  24C:  	CaseOR  ==  .HitResult:Lucky % 5
  258:  		Set   *VarA  *Var0
  268:  		Call  SetActorSpeed ( .Actor:Self *Fixed[6.0] )
  27C:  		Call  SetAnimation  ( .Actor:Self 00000001 003B0009 )
  294:  		Thread
  29C:  			Wait  12`
  2A8:  			Call  SetAnimation  ( .Actor:Self 00000001 003B000A )
  2C0:  		EndThread
  2C8:  		Call  SetActorJumpGravity   ( .Actor:Self *Fixed[0.8] )
  2DC:  		Call  SetGoalToTarget   ( .Actor:Self )
  2EC:  		Call  GetGoalPos        ( .Actor:Self *Var0 *Var1 *Var2 )
  308:  		Sub   *Var0  0000000A
  318:  		Set   *Var1  00000000
  328:  		Call  SetGoalPos        ( .Actor:Self *Var0 *Var1 *Var2 )
  344:  		Call  JumpToGoal        ( .Actor:Self  24` .False .True .False )
  364:  		If  *VarA  ==  .HitResult:Lucky % 5
  374:  			Call  EnemyTestTarget   ( .Actor:Self *Var0 ~Flags:DamageType:TriggerLucky 00000000 00000000 00000000 )
  398:  		EndIf
  3A0:  		Call  SetAnimation  ( .Actor:Self 00000001 003B0005 )
  3B8:  		Call  SetActorSpeed ( .Actor:Self *Fixed[6.0] )
  3CC:  		Call  SetActorJumpGravity   ( .Actor:Self *Fixed[0.5] )
  3E0:  		Call  GetActorPos   ( .Actor:Self *Var0 *Var1 *Var2 )
  3FC:  		Sub   *Var0  0000001E
  40C:  		Call  SetGoalPos    ( .Actor:Self *Var0 *Var1 *Var2 )
  428:  		Call  JumpToGoal    ( .Actor:Self  8` .False .True .False )
  448:  		Sub   *Var0  00000014
  458:  		Call  SetGoalPos    ( .Actor:Self *Var0 *Var1 *Var2 )
  474:  		Call  JumpToGoal    ( .Actor:Self  8` .False .True .False )
  494:  		Wait  15`
  4A0:  		Call  UseBattleCamPreset    ( 00000002 )
  4B0:  		Call  MoveBattleCamOver     (  15` )
  4C0:  		Call  SetActorYaw   ( .Actor:Self  180` )
  4D4:  		Call  AddActorDecoration    ( .Actor:Self 00000001 00000000 .Decoration:Sweat )
  4F0:  		Call  SetActorSpeed ( .Actor:Self *Fixed[6.0] )
  504:  		SetConst  *Var0  00000001
  514:  		SetConst  *Var1  003B0004
  524:  		ExecWait  DoReturnHome
  530:  		Call  RemoveActorDecoration ( .Actor:Self 00000001 00000000 )
  548:  		Call  SetActorYaw   ( .Actor:Self  0` )
  55C:  		Call  SetAnimation  ( .Actor:Self 00000001 003B0001 )
  574:  		Call  EnableIdleScript      ( .Actor:Self 00000001 )
  588:  		Call  UseIdleAnimation      ( .Actor:Self .True )
  59C:  		Return
  5A4:  	EndCaseGroup
  5AC:  EndSwitch
  5B4:  Call  SetActorSpeed ( .Actor:Self *Fixed[6.0] )
  5C8:  Call  SetAnimation  ( .Actor:Self 00000001 003B0009 )
  5E0:  Thread
  5E8:  	Wait  9`
  5F4:  	Call  SetAnimation  ( .Actor:Self 00000001 003B000A )
  60C:  EndThread
  614:  Call  SetActorJumpGravity   ( .Actor:Self *Fixed[0.8] )
  628:  Call  SetGoalToTarget   ( .Actor:Self )
  638:  Call  JumpToGoal        ( .Actor:Self  18` .False .True .False )
  658:  Wait  2`
  664:  Call  EnemyDamageTarget ( .Actor:Self *Var0 ~Flags:DamageType:0 00000000 00000000 00000003 00000020 )
  68C:  Switch  *Var0
  698:  	CaseOR  ==  .HitResult:Hit % 0
  6A4:  	CaseOR  ==  .HitResult:QuakeImmune % 2
  6B0:  		Call  UseBattleCamPreset    ( 00000002 )
  6C0:  		Call  MoveBattleCamOver     (  15` )
  6D0:  		Thread
  6D8:  			Call  SetActorRotationOffset    ( .Actor:Self 00000000 0000000E 00000000 )
  6F4:  			Set   *Var3  00000000
  704:  			Loop  00000014
  710:  				Sub   *Var3  0000001E
  720:  				If  *Var3  <  00000000
  730:  					Add   *Var3  00000168
  740:  				EndIf
  748:  				Call  SetActorRotation  ( .Actor:Self 00000000 00000000 *Var3 )
  764:  				Wait  1`
  770:  			EndLoop
  778:  			Call  SetActorRotation  ( .Actor:Self 00000000 00000000 00000000 )
  794:  			Call  SetActorRotationOffset    ( .Actor:Self 00000000 00000000 00000000 )
  7B0:  		EndThread
  7B8:  		Call  GetBattleFlags    ( *Var0 )
  7C8:  		If  *Var0  &  80000000
  7D8:  			Goto  1
  7E4:  		EndIf
  7EC:  		Call  GetLastDamage ( .Actor:Player *Var0 )
  800:  		If  *Var0  ==  00000000
  810:  			Goto  1
  81C:  		EndIf
  824:  		Call  GetGoalPos    ( .Actor:Self *Var0 *Var1 *Var2 )
  840:  		Add   *Var0  00000028
  850:  		Set   *Var1  00000000
  860:  		Call  SetActorJumpGravity   ( .Actor:Self *Fixed[0.8] )
  874:  		Call  SetGoalPos    ( .Actor:Self *Var0 *Var1 *Var2 )
  890:  		Call  JumpToGoal    ( .Actor:Self  20` .False .True .False )
  8B0:  		Call  PlaySoundAtActor      ( .Actor:Self 00000349 )
  8C4:  		Call  PlaySoundAtActor      ( .Actor:Self 00000749 )
  8D8:  		Call  SetAnimation  ( .Actor:Self 00000001 003B0009 )
  8F0:  		Wait  10`
  8FC:  		Call  SetAnimation  ( .Actor:Self 00000001 003B0007 )
  914:  		Wait  15`
  920:  		Goto  2
  92C:  		Label  1
  938:  		Call  GetGoalPos    ( .Actor:Self *Var0 *Var1 *Var2 )
  954:  		Add   *Var0  00000028
  964:  		Set   *Var1  00000000
  974:  		Call  SetActorJumpGravity   ( .Actor:Self *Fixed[0.8] )
  988:  		Call  SetGoalPos    ( .Actor:Self *Var0 *Var1 *Var2 )
  9A4:  		Call  JumpToGoal    ( .Actor:Self  20` .False .True .False )
  9C4:  		Call  PlaySoundAtActor      ( .Actor:Self 000020E4 )
  9D8:  		Call  SetAnimation  ( .Actor:Self 00000001 003B0010 )
  9F0:  		Wait  10`
  9FC:  		Call  PlaySoundAtActor      ( .Actor:Self 000020C3 )
  A10:  		Call  AddActorDecoration    ( .Actor:Self 00000001 00000000 .Decoration:Sweat )
  A2C:  		Call  RandInt       ( 00000064 *Var0 )
  A40:  		If  *Var0  <  00000032
  A50:  			Call  SetAnimation  ( .Actor:Self 00000001 003B0011 )
  A68:  		Else
  A70:  			Call  SetAnimation  ( .Actor:Self 00000001 003B0013 )
  A88:  		EndIf
  A90:  		Wait  25`
  A9C:  		Call  RemoveActorDecoration ( .Actor:Self 00000001 00000000 )
  AB4:  		Call  SetActorYaw   ( .Actor:Self  180` )
  AC8:  		Label  2
  AD4:  		Call  SetActorSpeed ( .Actor:Self *Fixed[6.0] )
  AE8:  		SetConst  *Var0  00000001
  AF8:  		SetConst  *Var1  003B0004
  B08:  		ExecWait  DoReturnHome
  B14:  		Call  SetActorYaw   ( .Actor:Self  0` )
  B28:  		Call  SetAnimation  ( .Actor:Self 00000001 003B0001 )
  B40:  	EndCaseGroup
  B48:  EndSwitch
  B50:  Call  EnableIdleScript  ( .Actor:Self 00000001 )
  B64:  Call  UseIdleAnimation  ( .Actor:Self .True )
  B78:  Return
  B80:  End
}

#new:Script $Script_TakeTurn_80225214
{
    0:  Call  RandInt   ( 00000001 *Var0 )
   14:  If  *Var0  ==  00000000
   24:  	ExecWait  $Script_80223F64
   30:  Else
   38:  	ExecWait  $Script_8022468C
   44:  EndIf
   4C:  Return
   54:  End
}

#new:IdleAnimations $IdleAnimations_80225270
{
	.Status:Normal    006B0002
	.Status:Stone     006B0000
	.Status:Sleep     006B0000
	.Status:Poison    006B0002
	.Status:Stop      006B0000
	.Status:Static    006B0000
	.Status:Paralyze  006B0000
	.Status:Paralyze  006B0000
	.Status:Dizzy     006B0000
	.Status:Dizzy     006B0000
	.Status:Fear      006B0000
	.Status:End
}

#new:DefenseTable $DefenseTable_802252CC
{
	.Element:Normal 00000000
	.Element:End
}

#new:StatusTable $StatusTable_802252D8
{
	.Status:Normal      0`
	.Status:Default     0`
	.Status:Sleep      80`
	.Status:Poison      0`
	.Status:Frozen      0`
	.Status:Dizzy      80`
	.Status:Fear        0`
	.Status:Static      0`
	.Status:Paralyze   80`
	.Status:Shrink     90`
	.Status:Stop       80`
	.Status:DefaultTurnMod    0`
	.Status:SleepTurnMod      0`
	.Status:PoisonTurnMod     0`
	.Status:FrozenTurnMod     0`
	.Status:DizzyTurnMod      0`
	.Status:FearTurnMod       0`
	.Status:StaticTurnMod     0`
	.Status:ParalyzeTurnMod   0`
	.Status:ShrinkTurnMod     0`
	.Status:StopTurnMod       0`
	.Status:End
}

#new:PartsTable $PartsTable_80225384
{
	00802000 01000000 F14B00FF $IdleAnimations_80225270 $DefenseTable_802252CC 00000000 00000000 00F60000 00000000
}

#new:Actor $TubbaBlubba
{
	% stats
	[Index]        A3b
	[Level]        70`b
	[MaxHP]        10`b
	[Coins]         0`b
	[Flags]       00000000
	[StatusTable] $StatusTable_802252D8
	% ai
	[PartsCount]    1`s
	[PartsTable]  $PartsTable_80225384
	[Script]      $Script_Init_802253D0
	% move effectiveness
	[Escape]        0`b
	[Item]          0`b
	[AirLift]       0`b
	[Hurricane]     0`b % Bow's "Spook" as well
	[UpAndAway]     0`b
	[PowerBounce]  75`b
	[SpinSmash]     4`b % weight (0-4)
	% ui positions
	[Size]        110`b 100`b % width height
	[HealthBar]     0`b   0`b % dx dy
	[StatusTurn]  -33`b  78`b % dx dy
	[StatusIcon]   10`b  75`b % dx dy
}

#new:Script $Script_Init_802253D0
{
    0:  Call  BindTakeTurn  ( .Actor:Self $Script_TakeTurn_802256A0 )
   14:  Call  BindIdle      ( .Actor:Self $Script_Idle_802255D8 )
   28:  Call  BindHandleEvent   ( .Actor:Self $Script_HandleEvent_802255E8 )
   3C:  Call  BindNextTurn  ( .Actor:Self $Script_NextTurn_802255C8 )
   50:  Call  SetActorVar   ( .Actor:Self 00000001 00000000 )
   68:  Call  SetActorVar   ( .Actor:Self 00000000 00000000 )
   80:  Exec  $Script_80225488 *Var0
   90:  Call  SetActorVar   ( .Actor:Self 00000002 *Var0 )
   A8:  Return
   B0:  End
}

#new:Script $Script_80225488
{
    0:  Label  0
    C:  Wait  1`
   18:  Call  ActorExists   ( .Actor:Self *Var0 )
   2C:  If  *Var0  ==  .False
   3C:  	Return
   44:  EndIf
   4C:  Call  GetStatusFlags    ( .Actor:Self *Var0 )
   60:  If  *Var0  &  ~Flags:StatusFlags:Shrink % 80000
   70:  	Goto  0
   7C:  EndIf
   84:  Call  GetAnimation  ( .Actor:Self 00000001 *Var0 )
   9C:  If  *Var0  ==  006B0006
   AC:  	Goto  1
   B8:  EndIf
   C0:  If  *Var0  ==  006B0007
   D0:  	Goto  1
   DC:  EndIf
   E4:  Goto  0
   F0:  Label  1
   FC:  Call  ShakeCam  ( .Cam:Battle 00000000  2` *Fixed[0.5] )
  118:  Wait  1`
  124:  Goto  0
  130:  Return
  138:  End
}

#new:Script $Script_NextTurn_802255C8
{
    0:  Return
    8:  End
}

#new:Script $Script_Idle_802255D8
{
    0:  Return
    8:  End
}

#new:Script $Script_HandleEvent_802255E8
{
    0:  Return
    8:  End
}

#new:Script $Script_802255F8
{
    0:  Call  SetAnimation  ( .Actor:Self 00000001 006B0002 )
   18:  Call  SetGoalToHome ( .Actor:Self )
   28:  Call  SetActorSpeed ( .Actor:Self *Fixed[6.0] )
   3C:  Call  SetAnimation  ( .Actor:Self 00000001 006B0007 )
   54:  Call  RunToGoal     ( .Actor:Self  0` .False )
   6C:  Call  SetAnimation  ( .Actor:Self 00000001 006B0002 )
   84:  Call  SetActorYaw   ( .Actor:Self  0` )
   98:  Return
   A0:  End
}

#new:Script $Script_TakeTurn_802256A0
{
    0:  Call  UseIdleAnimation  ( .Actor:Self .False )
   14:  Call  EnableIdleScript  ( .Actor:Self 00000000 )
   28:  Call  SetTargetActor    ( .Actor:Self .Actor:Player )
   3C:  Call  EnemyTestTarget   ( .Actor:Self *Var0 ~Flags:DamageType:0 00000000 00000001 00000010 )
   60:  If  *Var0  ==  .HitResult:Miss % 6
   70:  	Call  SetActorSpeed ( .Actor:Self *Fixed[3.0] )
   84:  	Call  GetActorPos   ( .Actor:Self *Var0 *Var1 *Var2 )
   A0:  	Call  SetAnimation  ( .Actor:Self 00000001 006B0007 )
   B8:  	Call  SetGoalPos    ( .Actor:Self  0`  0`  0` )
   D4:  	Call  RunToGoal     ( .Actor:Self  0` .False )
   EC:  	Call  SetAnimation  ( .Actor:Self 00000001 006B0001 )
  104:  	Wait  30`
  110:  	Set   *Var0  00000000
  120:  	Loop  0000000C
  12C:  		Add   *Var0  0000000F
  13C:  		Call  SetActorYaw   ( .Actor:Self *Var0 )
  150:  		Wait  1`
  15C:  	EndLoop
  164:  	Wait  10`
  170:  	Set   *Var0  000000B4
  180:  	Loop  0000000C
  18C:  		Sub   *Var0  0000000F
  19C:  		Call  SetActorYaw   ( .Actor:Self *Var0 )
  1B0:  		Wait  1`
  1BC:  	EndLoop
  1C4:  	Wait  20`
  1D0:  	Call  SetAnimation  ( .Actor:Self 00000001 006B0002 )
  1E8:  	Call  GetActorPos   ( .Actor:Self *Var0 *Var1 *Var2 )
  204:  	Set   *Var1  00000050
  214:  	Call  PlayEffect    ( ~FX:EmoteIcon:Question 00000000 *Var0 *Var1 *Var2 0000001E 0000013B 0000001E 00000000 00000000 00000000 00000000 00000000 )
  258:  	Wait  40`
  264:  	Call  SetAnimation  ( .Actor:Self 00000001 006B0001 )
  27C:  	Set   *Var0  00000000
  28C:  	Loop  0000000F
  298:  		Add   *Var0  0000000C
  2A8:  		Call  SetActorYaw   ( .Actor:Self *Var0 )
  2BC:  		Wait  1`
  2C8:  	EndLoop
  2D0:  	Call  SetAnimation  ( .Actor:Self 00000001 006B0006 )
  2E8:  	Call  SetActorSpeed ( .Actor:Self *Fixed[3.0] )
  2FC:  	Call  GetActorPos   ( .Actor:Self *Var0 *Var1 *Var2 )
  318:  	Set   *Var0  000000DC
  328:  	Call  SetGoalPos    ( .Actor:Self *Var0 *Var1 *Var2 )
  344:  	Call  RunToGoal     ( .Actor:Self  0` .False )
  35C:  	Call  GetActorVar   ( .Actor:Self 00000002 *Var0 )
  374:  	Kill  *Var0
  380:  	Call  SetActorFlagBits  ( .Actor:Self 00400000 .True )
  398:  	Call  SetBattleFlagBits ( 00060000 .True )
  3AC:  	Call  8026F60C      ( 0000000A )
  3BC:  	Return
  3C4:  EndIf
  3CC:  Call  GetActorVar   ( .Actor:Self 00000001 *Var0 )
  3E4:  If  *Var0  ==  00000001
  3F4:  	Call  802535B4      ( 00000000 )
  404:  	Call  SetActorVar   ( .Actor:Self 00000001 00000002 )
  41C:  	Call  ActorSpeak    ( 000E0103 .Actor:Self 00000001 006B0009 006B0002 ) % Bah ha ha ha ha! That wimpy little attack doesn't  ...
  43C:  	Thread
  444:  		Call  SetAnimation  ( .Actor:Self 00000001 006B0015 )
  45C:  		Wait  4`
  468:  		Call  SetAnimation  ( .Actor:Self 00000001 006B0016 )
  480:  		Wait  15`
  48C:  	EndThread
  494:  	Call  EndActorSpeech    ( .Actor:Self 00000001 FFFFFFFF FFFFFFFF )
  4B0:  	Call  SetAnimation      ( .Actor:Self 00000001 006B0001 )
  4C8:  	Call  UseBattleCamPreset    ( 00000002 )
  4D8:  	Call  MoveBattleCamOver (  15` )
  4E8:  	Wait  15`
  4F4:  	Call  802535B4  ( 00000001 )
  504:  EndIf
  50C:  ExecWait  $Script_8022614C
  518:  Call  EnableIdleScript  ( .Actor:Self 00000001 )
  52C:  Call  UseIdleAnimation  ( .Actor:Self .True )
  540:  Return
  548:  End
}

% Origin: HEURISTIC
#new:Script $Script_80225BF0
{
    0:  Call  SetTargetActor    ( .Actor:Self .Actor:Player )
   14:  Call  UseBattleCamPreset    ( 0000003F )
   24:  Call  SetBattleCamZoom  (  150` )
   34:  Call  BattleCamTargetActor  ( .Actor:Self )
   44:  Call  8024ECF8  ( FFFFFFFF 00000001 00000000 )
   5C:  Call  SetAnimation      ( .Actor:Self 00000001 006B0007 )
   74:  Call  SetGoalToTarget   ( .Actor:Self )
   84:  If  *Var5  !&  00080000
   94:  	Call  AddGoalPos    ( .Actor:Self  50`  0`  0` )
   B0:  Else
   B8:  	Call  AddGoalPos    ( .Actor:Self  20`  0`  0` )
   D4:  EndIf
   DC:  Call  SetActorSpeed ( .Actor:Self *Fixed[4.0] )
   F0:  Call  RunToGoal     ( .Actor:Self  0` .False )
  108:  Call  SetAnimation  ( .Actor:Self 00000001 006B0015 )
  120:  Wait  8`
  12C:  Call  SetAnimation  ( .Actor:Self 00000001 006B0016 )
  144:  Wait  20`
  150:  Call  SetAnimation  ( .Actor:Self 00000001 006B0017 )
  168:  Wait  3`
  174:  Call  SetGoalToTarget   ( .Actor:Self )
  184:  Call  GetStatusFlags    ( .Actor:Self *Var0 )
  198:  If  *Var0  !&  ~Flags:StatusFlags:Shrink % 80000
  1A8:  	Call  GetGoalPos    ( .Actor:Self *Var0 *Var1 *Var2 )
  1C4:  	Set   *Var1  00000000
  1D4:  	Call  PlayEffect    ( ~FX:Steam:LargeOutward *Var0 *Var1 *Var2 00000000 00000000 00000000 00000000 00000000 00000000 00000000 00000000 00000000 )
  218:  	Call  PlayEffect    ( ~FX:ShockWave:LargeWhite *Var0 *Var1 *Var2 00000000 00000000 00000000 00000000 00000000 00000000 00000000 00000000 00000000 )
  25C:  	Thread
  264:  		Call  ShakeCam  ( .Cam:Battle 00000000  5` *Fixed[15.0] )
  280:  	EndThread
  288:  	Call  PlaySoundAtActor  ( .Actor:Self 000020EA )
  29C:  EndIf
  2A4:  Call  EnemyTestTarget   ( .Actor:Self *Var0 ~Flags:DamageType:0 00000000 00000001 00000010 )
  2C8:  Switch  *Var0
  2D4:  	CaseOR  ==  .HitResult:Miss % 6
  2E0:  	CaseOR  ==  .HitResult:Lucky % 5
  2EC:  		Wait  30`
  2F8:  		Call  SetAnimation  ( .Actor:Self 00000001 006B0002 )
  310:  		Call  UseBattleCamPreset    ( 00000002 )
  320:  		Call  MoveBattleCamOver     (  20` )
  330:  		If  *VarA  ==  00000005
  340:  			Call  EnemyTestTarget   ( .Actor:Self *Var0 ~Flags:DamageType:TriggerLucky 00000000 00000000 00000000 )
  364:  		EndIf
  36C:  		ExecWait  $Script_802255F8
  378:  		Return
  380:  	EndCaseGroup
  388:  	Default
  390:  EndSwitch
  398:  Call  GetStatusFlags    ( .Actor:Self *Var5 )
  3AC:  If  *Var5  !&  ~Flags:StatusFlags:Shrink % 80000
  3BC:  	Call  GetGoalPos    ( .Actor:Self *Var0 *Var1 *Var2 )
  3D8:  	Call  PlayEffect    ( ~FX:ShockWave:LargeWhite *Var0 00000000 *Var2 00000000 00000000 00000000 00000000 00000000 00000000 00000000 00000000 00000000 )
  41C:  EndIf
  424:  Wait  2`
  430:  Call  SetGoalToTarget   ( .Actor:Self )
  440:  If  *Var5  !&  ~Flags:StatusFlags:Shrink % 80000
  450:  	Call  80269EAC  ( 00000017 )
  460:  EndIf
  468:  Call  EnemyDamageTarget     ( .Actor:Self *VarF ~Flags:DamageType:NoContact 00000000 00000000 00000004 00000020 )
  490:  Call  UseBattleCamPreset    ( 00000002 )
  4A0:  Call  MoveBattleCamOver     (  20` )
  4B0:  Switch  *VarF
  4BC:  	CaseOR  ==  .HitResult:Hit % 0
  4C8:  	CaseOR  ==  .HitResult:QuakeImmune % 2
  4D4:  	CaseOR  ==  0000000A % A
  4E0:  		Wait  30`
  4EC:  		Call  SetAnimation  ( .Actor:Self 00000001 006B0002 )
  504:  		If  *VarF  ==  0000000A % A
  514:  			Return
  51C:  		EndIf
  524:  		Call  YieldTurn ( )
  530:  		ExecWait  $Script_802255F8
  53C:  	EndCaseGroup
  544:  EndSwitch
  54C:  Return
  554:  End
}

#new:Script $Script_8022614C
{
    0:  Call  SetTargetActor    ( .Actor:Self .Actor:Player )
   14:  Call  UseBattleCamPreset    ( 0000003F )
   24:  Call  SetBattleCamZoom  (  180` )
   34:  Call  BattleCamTargetActor  ( .Actor:Self )
   44:  Call  8024ECF8  ( FFFFFFFF 00000001 00000000 )
   5C:  Call  SetAnimation      ( .Actor:Self 00000001 006B0007 )
   74:  Call  SetGoalToTarget   ( .Actor:Self )
   84:  Call  AddGoalPos        ( .Actor:Self  70`  0`  0` )
   A0:  Call  SetActorSpeed     ( .Actor:Self *Fixed[4.0] )
   B4:  Call  RunToGoal ( .Actor:Self  0` .False )
   CC:  Call  SetAnimation      ( .Actor:Self 00000001 006B000F )
   E4:  Wait  8`
   F0:  Call  SetAnimation      ( .Actor:Self 00000001 006B0010 )
  108:  Call  EnemyTestTarget   ( .Actor:Self *Var0 ~Flags:DamageType:0 00000000 00000001 00000010 )
  12C:  Switch  *Var0
  138:  	CaseOR  ==  .HitResult:Miss % 6
  144:  	CaseOR  ==  .HitResult:Lucky % 5
  150:  		Set   *VarA  *Var0
  160:  		Thread
  168:  			Wait  12`
  174:  			Call  SetAnimation  ( .Actor:Self 00000001 006B0011 )
  18C:  		EndThread
  194:  		Call  SetGoalToTarget       ( .Actor:Self )
  1A4:  		Call  GetGoalPos    ( .Actor:Self *Var0 *Var1 *Var2 )
  1C0:  		Sub   *Var0  0000000F
  1D0:  		Set   *Var1  00000000
  1E0:  		Add   *Var2  00000005
  1F0:  		Call  SetActorJumpGravity   ( .Actor:Self *Fixed[1.0] )
  204:  		Call  PlaySound     ( 000003E2 )
  214:  		Call  SetGoalPos    ( .Actor:Self *Var0 *Var1 *Var2 )
  230:  		Call  JumpToGoal    ( .Actor:Self  23` .False .True .False )
  250:  		Call  PlaySoundAtActor      ( .Actor:Self 000020EA )
  264:  		Call  SetAnimation  ( .Actor:Self 00000001 006B0012 )
  27C:  		Thread
  284:  			Call  GetActorPos   ( .Actor:Self *Var0 *Var1 *Var2 )
  2A0:  			Call  PlayEffect    ( ~FX:SmokeImpact:Large *Var0 *Var1 *Var2 0000003C 00000008 0000000A 00000014 00000000 00000000 00000000 00000000 00000000 )
  2E4:  		EndThread
  2EC:  		Thread
  2F4:  			Call  ShakeCam  ( .Cam:Battle 00000000  5` *Fixed[3.0] )
  310:  		EndThread
  318:  		Call  GetGoalPos    ( .Actor:Self *Var0 *Var1 *Var2 )
  334:  		Sub   *Var0  00000014
  344:  		Set   *Var1  00000000
  354:  		Add   *Var2  00000005
  364:  		Call  SetActorJumpGravity   ( .Actor:Self *Fixed[1.0] )
  378:  		Call  SetGoalPos    ( .Actor:Self *Var0 *Var1 *Var2 )
  394:  		Call  JumpToGoal    ( .Actor:Self  10` .False .True .False )
  3B4:  		Call  ShakeCam      ( .Cam:Battle 00000000  5` *Fixed[3.0] )
  3D0:  		Call  GetActorPos   ( .Actor:Self *Var0 *Var1 *Var2 )
  3EC:  		Call  PlayEffect    ( ~FX:SmokeImpact:Large *Var0 *Var1 *Var2 0000003C 00000008 0000000A 00000014 00000000 00000000 00000000 00000000 00000000 )
  430:  		If  *VarA  ==  .HitResult:Lucky % 5
  440:  			Call  EnemyTestTarget   ( .Actor:Self *Var0 ~Flags:DamageType:TriggerLucky 00000000 00000000 00000000 )
  464:  		EndIf
  46C:  		Call  UseBattleCamPreset    ( 00000002 )
  47C:  		Call  MoveBattleCamOver     (  20` )
  48C:  		Wait  8`
  498:  		Call  SetAnimation  ( .Actor:Self 00000001 006B0013 )
  4B0:  		Wait  4`
  4BC:  		ExecWait  $Script_802255F8
  4C8:  		Return
  4D0:  	EndCaseGroup
  4D8:  	Default
  4E0:  		Thread
  4E8:  			Wait  12`
  4F4:  			Call  SetAnimation  ( .Actor:Self 00000001 006B0011 )
  50C:  		EndThread
  514:  		Call  SetGoalToTarget   ( .Actor:Self )
  524:  		Call  SetActorJumpGravity   ( .Actor:Self *Fixed[1.0] )
  538:  		Call  PlaySound ( 000003E2 )
  548:  		Call  JumpToGoal        ( .Actor:Self  16` .False .True .False )
  568:  EndSwitch
  570:  Wait  2`
  57C:  Call  PlaySoundAtActor  ( .Actor:Self 000020EA )
  590:  Call  SetGoalToTarget   ( .Actor:Self )
  5A0:  Call  GetStatusFlags    ( .Actor:Self *Var5 )
  5B4:  If  *Var5  !&  ~Flags:StatusFlags:Shrink % 80000
  5C4:  	Call  80269EAC  ( 00000018 )
  5D4:  	Call  PlaySoundAtActor  ( .Actor:Self 000020EA )
  5E8:  EndIf
  5F0:  Call  EnemyDamageTarget     ( .Actor:Self *Var0 ~Flags:DamageType:NoContact 00000000 00000000 00000006 00000020 )
  618:  Call  UseBattleCamPreset    ( 00000002 )
  628:  Call  MoveBattleCamOver     (  20` )
  638:  Set   *VarF  *Var0
  648:  Switch  *VarF
  654:  	CaseOR  ==  .HitResult:Hit % 0
  660:  	CaseOR  ==  .HitResult:QuakeImmune % 2
  66C:  	CaseOR  ==  0000000A % A
  678:  		Call  GetStatusFlags    ( .Actor:Self *Var5 )
  68C:  		If  *Var5  &  ~Flags:StatusFlags:Shrink % 80000
  69C:  			Goto  1
  6A8:  		EndIf
  6B0:  		Call  GetBattleFlags    ( *Var0 )
  6C0:  		If  *Var0  !&  80000000
  6D0:  			Call  GetStatusFlags    ( .Actor:Player *Var0 )
  6E4:  			If  *Var0  !&  ~Flags:StatusFlags:Stone % 100000
  6F4:  				Call  LandJump  ( .Actor:Self )
  704:  			Else
  70C:  				Goto  1
  718:  			EndIf
  720:  		Else
  728:  			Goto  1
  734:  		EndIf
  73C:  		Label  0
  748:  		Call  GetActorPos   ( .Actor:Self *Var0 *Var1 *Var2 )
  764:  		Call  PlayEffect    ( ~FX:ShockWave:White *Var0 00000000 *Var2 00000000 00000000 00000000 00000000 00000000 00000000 00000000 00000000 00000000 )
  7A8:  		Call  SetAnimation  ( .Actor:Self 00000001 006B000D )
  7C0:  		Thread
  7C8:  			Call  GetActorPos   ( .Actor:Self *Var0 *Var1 *Var2 )
  7E4:  			Call  PlayEffect    ( ~FX:SmokeImpact:Large *Var0 *Var1 *Var2 0000003C 00000008 0000000A 00000014 00000000 00000000 00000000 00000000 00000000 )
  828:  		EndThread
  830:  		Thread
  838:  			Call  ShakeCam  ( .Cam:Battle 00000000  5` *Fixed[3.0] )
  854:  		EndThread
  85C:  		Call  GetGoalPos    ( .Actor:Self *Var0 *Var1 *Var2 )
  878:  		Sub   *Var0  00000014
  888:  		Set   *Var1  00000000
  898:  		Add   *Var2  00000005
  8A8:  		Call  SetActorJumpGravity   ( .Actor:Self *Fixed[1.0] )
  8BC:  		Call  SetGoalPos    ( .Actor:Self *Var0 *Var1 *Var2 )
  8D8:  		Call  JumpToGoal    ( .Actor:Self  10` .False .True .False )
  8F8:  		Call  ShakeCam      ( .Cam:Battle 00000000  5` *Fixed[3.0] )
  914:  		Call  GetActorPos   ( .Actor:Self *Var0 *Var1 *Var2 )
  930:  		Call  PlayEffect    ( ~FX:SmokeImpact:Large *Var0 *Var1 *Var2 0000003C 00000008 0000000A 00000014 00000000 00000000 00000000 00000000 00000000 )
  974:  		Goto  2
  980:  		Label  1
  98C:  		Call  GetStatusFlags        ( .Actor:Self *Var5 )
  9A0:  		If  *Var5  !&  ~Flags:StatusFlags:Shrink % 80000
  9B0:  			Wait  3`
  9BC:  			Call  GetGoalPos    ( .Actor:Self *Var0 *Var1 *Var2 )
  9D8:  			Call  PlayEffect    ( ~FX:ShockWave:LargeWhite *Var0 00000000 *Var2 00000000 00000000 00000000 00000000 00000000 00000000 00000000 00000000 00000000 )
  A1C:  			Call  ShakeCam      ( .Cam:Battle 00000000  5` *Fixed[3.0] )
  A38:  		EndIf
  A40:  		Call  GetGoalPos    ( .Actor:Self *Var0 *Var1 *Var2 )
  A5C:  		Add   *Var0  00000028
  A6C:  		Set   *Var1  00000000
  A7C:  		Call  SetActorJumpGravity   ( .Actor:Self *Fixed[1.8] )
  A90:  		Thread
  A98:  			Wait  8`
  AA4:  			Call  SetAnimation  ( .Actor:Self 00000001 006B000E )
  ABC:  		EndThread
  AC4:  		Call  SetGoalPos    ( .Actor:Self *Var0 *Var1 *Var2 )
  AE0:  		Call  JumpToGoal    ( .Actor:Self  10` .False .True .False )
  B00:  		If  *Var5  !&  ~Flags:StatusFlags:Shrink % 80000
  B10:  			Call  ShakeCam      ( .Cam:Battle 00000000  5` *Fixed[3.0] )
  B2C:  			Call  GetActorPos   ( .Actor:Self *Var0 *Var1 *Var2 )
  B48:  			Call  PlayEffect    ( ~FX:SmokeImpact:Large *Var0 *Var1 *Var2 0000003C 00000008 0000000A 00000014 00000000 00000000 00000000 00000000 00000000 )
  B8C:  			Wait  8`
  B98:  		EndIf
  BA0:  		Label  2
  BAC:  		If  *VarF  ==  0000000A % A
  BBC:  			Return
  BC4:  		EndIf
  BCC:  		Call  YieldTurn ( )
  BD8:  		ExecWait  $Script_802255F8
  BE4:  	EndCaseGroup
  BEC:  EndSwitch
  BF4:  Return
  BFC:  End
}

#new:DefenseTable $DefenseTable_80226D50
{
	.Element:Normal 00000000
	.Element:End
}

#new:StatusTable $StatusTable_80226D5C
{
	.Status:Normal      0`
	.Status:Default     0`
	.Status:Sleep      90`
	.Status:Poison     80`
	.Status:Frozen    100`
	.Status:Dizzy      90`
	.Status:Fear        0`
	.Status:Static     10`
	.Status:Paralyze  100`
	.Status:Shrink     90`
	.Status:Stop      100`
	.Status:DefaultTurnMod    0`
	.Status:SleepTurnMod      0`
	.Status:PoisonTurnMod     0`
	.Status:FrozenTurnMod     0`
	.Status:DizzyTurnMod     -1`
	.Status:FearTurnMod       0`
	.Status:StaticTurnMod     0`
	.Status:ParalyzeTurnMod   1`
	.Status:ShrinkTurnMod     0`
	.Status:StopTurnMod       0`
	.Status:End
}

#new:PartsTable $PartsTable_80226E08
{
	00020000 01000000 FE1000FF $IdleAnimations_80226E9C $DefenseTable_80226D50 00000000 00000000 00F90000 00000000
	80800001 020000F1 FE0C00FF $IdleAnimations_80226E9C $DefenseTable_80226D50 00000000 00000000 00F90000 00000000
	00120001 03000000 000000FF $IdleAnimations_80226EE8 $DefenseTable_80226D50 00000000 00000000 00000000 00000000
}

#new:Actor $MontyMole
{
	% stats
	[Index]        12b
	[Level]         8`b
	[MaxHP]         3`b
	[Coins]         1`b
	[Flags]       00000000
	[StatusTable] $StatusTable_80226D5C
	% ai
	[PartsCount]    3`s
	[PartsTable]  $PartsTable_80226E08
	[Script]      $Script_Init_802270B0
	% move effectiveness
	[Escape]       80`b
	[Item]         85`b
	[AirLift]      70`b
	[Hurricane]    50`b % Bow's "Spook" as well
	[UpAndAway]    95`b
	[PowerBounce] 100`b
	[SpinSmash]     4`b % weight (0-4)
	% ui positions
	[Size]         34`b  18`b % width height
	[HealthBar]     0`b   0`b % dx dy
	[StatusTurn]  -10`b  20`b % dx dy
	[StatusIcon]   10`b  20`b % dx dy
}

#new:IdleAnimations $IdleAnimations_80226E9C
{
	.Status:Normal    002F0001
	.Status:Stone     002F0000
	.Status:Sleep     002F0014
	.Status:Poison    002F0001
	.Status:Stop      002F0000
	.Status:Static    002F0001
	.Status:Paralyze  002F0000
	.Status:Dizzy     002F0014
	.Status:Fear      002F0014
	.Status:End
}

#new:IdleAnimations $IdleAnimations_80226EE8
{
	.Status:Normal    002F000F
	.Status:End
}

#new:IdleAnimations $IdleAnimations_80226EF4
{
	.Status:Normal    002F0012
	.Status:End
}

MISSING: 80226F00 to 80226F0C (006ECCC0 to 006ECCCC)
00000001 002F0006 00000000

#new:PartsTable $PartsTable_80226F0C
{
	00022000 01000000 000000FF $IdleAnimations_80226EF4 00000000 00000000 00000000 00000000 00000000
}

#new:Script $Script_Init_80226F30
{
    0:  Call  GetActorVar   ( .Actor:Self 00000000 *Var0 )
   18:  If  *Var0  ==  00000001
   28:  	Call  SetPartScale  ( .Actor:Self 00000001 *Fixed[0.4] *Fixed[0.4] *Fixed[0.4] )
   48:  EndIf
   50:  Return
   58:  End
}

#new:Actor $EmptyMoleHole
{
	% stats
	[Index]        6Bb
	[Level]         9`b
	[MaxHP]         5`b
	[Coins]         2`b
	[Flags]       00640004
	[StatusTable] 00000000
	% ai
	[PartsCount]    1`s
	[PartsTable]  $PartsTable_80226F0C
	[Script]      $Script_Init_80226F30
	% move effectiveness
	[Escape]       80`b
	[Item]         80`b
	[AirLift]       0`b
	[Hurricane]    80`b % Bow's "Spook" as well
	[UpAndAway]    90`b
	[PowerBounce]  90`b
	[SpinSmash]     4`b % weight (0-4)
	% ui positions
	[Size]         32`b  18`b % width height
	[HealthBar]     0`b   0`b % dx dy
	[StatusTurn]  -10`b  20`b % dx dy
	[StatusIcon]   10`b  20`b % dx dy
}

#new:Vector3D $Vector3D_80226FB8
{
	0` -1000` 0`
}

#new:SpecialFormation $SpecialFormation_80226FC4
{
	$EmptyMoleHole $Vector3D_80226FB8 00000000 00000000 00000000 00000000 00000000
}

#new:SpecialFormation $SpecialFormation_80226FE0
{
	$EmptyMoleHole $Vector3D_80226FB8 00000000 00000001 00000000 00000000 00000000
}

#new:Script $Script_80226FFC
{
    0:  Call  GetStatusFlags    ( .Actor:Self *Var0 )
   14:  If  *Var0  &  ~Flags:StatusFlags:Shrink % 80000
   24:  	Call  SummonEnemy   ( $SpecialFormation_80226FE0 00000000 )
   38:  Else
   40:  	Call  SummonEnemy   ( $SpecialFormation_80226FC4 00000000 )
   54:  EndIf
   5C:  Call  GetActorPos   ( .Actor:Self *Var1 *Var2 *Var3 )
   78:  Sub   *Var3  00000001
   88:  Call  SetActorPos   ( *Var0 *Var1 *Var2 *Var3 )
   A4:  Return
   AC:  End
}

#new:Script $Script_Init_802270B0
{
    0:  Call  BindTakeTurn      ( .Actor:Self $Script_TakeTurn_802278AC )
   14:  Call  BindIdle  ( .Actor:Self $Script_Idle_80227114 )
   28:  Call  BindHandleEvent   ( .Actor:Self $Script_HandleEvent_80227124 )
   3C:  Call  SetActorFlagBits  ( .Actor:Self 00000004 .True )
   54:  Return
   5C:  End
}

#new:Script $Script_Idle_80227114
{
    0:  Return
    8:  End
}

#new:Script $Script_HandleEvent_80227124
{
    0:  Call  UseIdleAnimation  ( .Actor:Self .False )
   14:  Call  EnableIdleScript  ( .Actor:Self 00000000 )
   28:  Call  GetLastElement    ( *VarE )
   38:  Call  GetLastEvent      ( .Actor:Self *Var0 )
   4C:  Switch  *Var0
   58:  	CaseOR  ==  .Event:HitCombo % 9
   64:  	CaseOR  ==  .Event:Hit % A
   70:  		If  *VarE  &  00000040
   80:  			ChildThread
   88:  				Wait  8`
   94:  				Call  SetAnimation  ( .Actor:Self 00000001 002F0007 )
   AC:  			EndChildThread
   B4:  			SetConst  *Var0  00000001
   C4:  			SetConst  *Var1  002F0006
   D4:  			ExecWait  DoNormalHit
   E0:  			Call  SetAnimation  ( .Actor:Self 00000001 002F0008 )
   F8:  			Wait  10`
  104:  		Else
  10C:  			SetConst  *Var0  00000001
  11C:  			SetConst  *Var1  002F0005
  12C:  			ExecWait  DoNormalHit
  138:  		EndIf
  140:  	EndCaseGroup
  148:  	Case  ==  .Event:BurnHit % E
  154:  		SetConst  *Var0  00000001
  164:  		SetConst  *Var1  002F000A
  174:  		SetConst  *Var2  002F000B
  184:  		ExecWait  DoBurnHit
  190:  	Case  ==  .Event:BurnDeath % 24
  19C:  		SetConst  *Var0  00000001
  1AC:  		SetConst  *Var1  002F000A
  1BC:  		SetConst  *Var2  002F000B
  1CC:  		ExecWait  DoBurnHit
  1D8:  		ExecWait  $Script_80226FFC
  1E4:  		SetConst  *Var0  00000001
  1F4:  		SetConst  *Var1  002F000C
  204:  		ExecWait  DoDeath
  210:  		Return
  218:  	CaseOR  ==  00000017 % 17
  224:  	CaseOR  ==  .Event:Immune % 19
  230:  		Call  GetLastElement    ( *Var0 )
  240:  		If  *Var0  &  00000040
  250:  			Call  PlaySoundAtActor  ( .Actor:Self .Sound:MoleDig )
  264:  			Call  SetAnimationRate  ( .Actor:Self 00000001 *Fixed[2.0] )
  27C:  			Call  SetAnimation      ( .Actor:Self 00000001 002F0011 )
  294:  			Wait  80`
  2A0:  			Call  PlaySoundAtActor  ( .Actor:Self .Sound:MoleSurface )
  2B4:  			Call  SetAnimationRate  ( .Actor:Self 00000001 *Fixed[1.0] )
  2CC:  			Call  SetAnimation      ( .Actor:Self 00000001 002F0010 )
  2E4:  			Wait  20`
  2F0:  			Call  SetAnimation      ( .Actor:Self 00000001 002F0014 )
  308:  			Wait  20`
  314:  		Else
  31C:  			SetConst  *Var0  00000001
  32C:  			SetConst  *Var1  002F0001
  33C:  			ExecWait  DoImmune
  348:  		EndIf
  350:  	EndCaseGroup
  358:  	Case  ==  .Event:Death % 20
  364:  		SetConst  *Var0  00000001
  374:  		SetConst  *Var1  002F0005
  384:  		ExecWait  DoNormalHit
  390:  		Call  SetAnimation  ( .Actor:Self 00000001 002F0006 )
  3A8:  		Wait  10`
  3B4:  		ExecWait  $Script_80226FFC
  3C0:  		SetConst  *Var0  00000001
  3D0:  		SetConst  *Var1  002F0009
  3E0:  		ExecWait  DoDeath
  3EC:  		Return
  3F4:  	Case  ==  .Event:RecoverStatus % 31
  400:  		Call  SetAnimation  ( .Actor:Self 00000001 002F0006 )
  418:  		Wait  8`
  424:  		Call  SetAnimation  ( .Actor:Self 00000001 002F0007 )
  43C:  		Wait  5`
  448:  		Call  SetAnimation  ( .Actor:Self 00000001 002F0008 )
  460:  		Wait  8`
  46C:  	Case  ==  .Event:ScareAway % 39
  478:  		Call  SetAnimation      ( .Actor:Self 00000001 002F0006 )
  490:  		Wait  15`
  49C:  		Call  SetAnimation      ( .Actor:Self 00000001 002F0007 )
  4B4:  		Wait  15`
  4C0:  		Call  SetAnimation      ( .Actor:Self 00000001 002F0008 )
  4D8:  		Wait  15`
  4E4:  		Call  SetActorFlagBits  ( .Actor:Self 00404000 .True )
  4FC:  		Call  SetIdleAnimations ( .Actor:Self 00000001 $IdleAnimations_80226EF4 )
  514:  		Return
  51C:  	Case  ==  .Event:BeginAirLift % 3A
  528:  		SetConst  *Var0  00000001
  538:  		SetConst  *Var1  002F0005
  548:  		ExecWait  DoAirLift
  554:  	Case  ==  .Event:BlowAway % 16
  560:  		ExecWait  $Script_80226FFC
  56C:  		Call  GetStatusFlags    ( .Actor:Self *Var0 )
  580:  		If  *Var0  &  ~Flags:StatusFlags:Sleep|Frozen|Fear|Paralyze|Dizzy|Stone|Stop % 35D000
  590:  			Call  SetActorDispOffset    ( .Actor:Self 00000000 FFFFFFFB 00000000 )
  5AC:  			Call  SetAnimation  ( .Actor:Self 00000001 002F0019 )
  5C4:  		Else
  5CC:  			If  *Var0  &  ~Flags:StatusFlags:Shrink % 80000
  5DC:  				Call  SetActorDispOffset    ( .Actor:Self 00000000 FFFFFFF7 00000000 )
  5F8:  			Else
  600:  				Call  SetActorDispOffset    ( .Actor:Self 00000000 FFFFFFE9 00000000 )
  61C:  			EndIf
  624:  			Call  SetAnimation  ( .Actor:Self 00000001 002F0009 )
  63C:  		EndIf
  644:  		Wait  1000`
  650:  		Return
  658:  	Case  ==  .Event:AirLiftFailed % 1F
  664:  		Call  PlaySoundAtActor  ( .Actor:Self .Sound:MoleDig )
  678:  		Call  SetAnimationRate  ( .Actor:Self 00000001 *Fixed[2.0] )
  690:  		Call  SetAnimation      ( .Actor:Self 00000001 002F0011 )
  6A8:  		Wait  40`
  6B4:  		Call  PlaySoundAtActor  ( .Actor:Self .Sound:MoleSurface )
  6C8:  		Call  SetAnimationRate  ( .Actor:Self 00000001 *Fixed[1.0] )
  6E0:  		Call  SetAnimation      ( .Actor:Self 00000001 002F0010 )
  6F8:  		Wait  20`
  704:  		Call  SetAnimation      ( .Actor:Self 00000001 002F0014 )
  71C:  		Wait  20`
  728:  	Case  ==  .Event:UpAndAway % 3D
  734:  		ExecWait  $Script_80226FFC
  740:  	Default
  748:  EndSwitch
  750:  Call  EnableIdleScript  ( .Actor:Self 00000001 )
  764:  Call  UseIdleAnimation  ( .Actor:Self .True )
  778:  Return
  780:  End
}

#new:Script $Script_TakeTurn_802278AC
{
    0:  Call  UseIdleAnimation  ( .Actor:Self .False )
   14:  Call  EnableIdleScript  ( .Actor:Self 00000000 )
   28:  Call  SetTargetActor    ( .Actor:Self .Actor:Player )
   3C:  Call  SetGoalToTarget   ( .Actor:Self )
   4C:  Call  GetBattlePhase    ( *Var0 )
   5C:  If  *Var0  ==  00000001
   6C:  	Call  UseBattleCamPreset    ( 00000002 )
   7C:  	Call  MoveBattleCamOver     (  1` )
   8C:  EndIf
   94:  ChildThread
   9C:  	Call  PlaySoundAtActor  ( .Actor:Self .Sound:MoleDig )
   B0:  	Wait  20`
   BC:  	Call  PlaySoundAtActor  ( .Actor:Self .Sound:MoleSurface )
   D0:  EndChildThread
   D8:  Call  SetAnimation      ( .Actor:Self 00000001 002F0004 )
   F0:  Wait  37`
   FC:  Call  GetActorPos       ( .Actor:Self *Var0 *Var1 *Var2 )
  118:  Add   *Var1  00000014
  128:  Call  SetPartPos        ( .Actor:Self 00000003 *Var0 *Var1 *Var2 )
  148:  Wait  1`
  154:  Call  SetPartFlagBits   ( .Actor:Self 00000003 00000001 .False )
  170:  Call  GetStatusFlags    ( .Actor:Self *Var0 )
  184:  If  *Var0  &  ~Flags:StatusFlags:Shrink % 80000
  194:  	Call  SetPartScale  ( .Actor:Self 00000003 *Fixed[0.4] *Fixed[0.4] *Fixed[0.4] )
  1B4:  Else
  1BC:  	Call  SetPartScale  ( .Actor:Self 00000003 *Fixed[1.0] *Fixed[1.0] *Fixed[1.0] )
  1DC:  EndIf
  1E4:  Call  PlaySoundAtPart   ( .Actor:Self 00000003 .Sound:MoleThrow )
  1FC:  Call  SetPartSounds     ( .Actor:Self 00000003 .ActorSound:Fly 00000000 00000000 )
  21C:  Call  EnemyTestTarget   ( .Actor:Self *Var0 ~Flags:DamageType:NoContact 00000000 00000002 00000020 )
  240:  Switch  *Var0
  24C:  	CaseOR  ==  .HitResult:Miss % 6
  258:  	CaseOR  ==  .HitResult:Lucky % 5
  264:  		Set   *VarA  *Var0
  274:  		Call  SetTargetActor    ( .Actor:Self .Actor:Player )
  288:  		Call  SetGoalToTarget   ( .Actor:Self )
  298:  		Call  GetGoalPos        ( .Actor:Self *Var0 *Var1 *Var2 )
  2B4:  		Sub   *Var0  00000064
  2C4:  		Set   *Var1  FFFFFFFB
  2D4:  		Call  SetPartMoveSpeed  ( .Actor:Self 00000003 *Fixed[12.0] )
  2EC:  		Call  SetPartJumpGravity    ( .Actor:Self 00000003 *Fixed[0.1] )
  304:  		Call  SetAnimation      ( .Actor:Self 00000003 002F000F )
  31C:  		Call  FlyPartTo ( .Actor:Self 00000003 *Var0 *Var1 *Var2  0`  30` .Easing:Linear )
  348:  		Call  SetPartFlagBits   ( .Actor:Self 00000003 00000001 .True )
  364:  		If  *VarA  ==  .HitResult:Lucky % 5
  374:  			Call  EnemyTestTarget   ( .Actor:Self *Var0 ~Flags:DamageType:TriggerLucky 00000000 00000000 00000000 )
  398:  		EndIf
  3A0:  		Call  YieldTurn ( )
  3AC:  		Call  EnableIdleScript  ( .Actor:Self 00000001 )
  3C0:  		Call  UseIdleAnimation  ( .Actor:Self .True )
  3D4:  		Return
  3DC:  	EndCaseGroup
  3E4:  EndSwitch
  3EC:  Call  SetTargetActor    ( .Actor:Self .Actor:Player )
  400:  Call  SetGoalToTarget   ( .Actor:Self )
  410:  Call  GetGoalPos        ( .Actor:Self *Var0 *Var1 *Var2 )
  42C:  Call  SetPartMoveSpeed  ( .Actor:Self 00000003 *Fixed[12.0] )
  444:  Call  SetPartJumpGravity    ( .Actor:Self 00000003 *Fixed[0.1] )
  45C:  Call  SetAnimation      ( .Actor:Self 00000003 002F000F )
  474:  Call  FlyPartTo ( .Actor:Self 00000003 *Var0 *Var1 *Var2  0`  20` .Easing:Linear )
  4A0:  Wait  2`
  4AC:  Call  EnemyDamageTarget ( .Actor:Self *Var0 ~Flags:DamageType:NoContact 00000000 00000000 00000002 00000020 )
  4D4:  Switch  *Var0
  4E0:  	CaseOR  ==  .HitResult:Hit % 0
  4EC:  	CaseOR  ==  .HitResult:QuakeImmune % 2
  4F8:  		Call  GetActorPos       ( .Actor:Player *Var0 *Var1 *Var2 )
  514:  		Sub   *Var0  00000037
  524:  		Set   *Var1  00000000
  534:  		Call  SetPartMoveSpeed  ( .Actor:Self 00000003 *Fixed[6.0] )
  54C:  		Call  SetPartJumpGravity    ( .Actor:Self 00000003 *Fixed[0.1] )
  564:  		Call  FlyPartTo ( .Actor:Self 00000003 *Var0 *Var1 *Var2  0`  25` .Easing:Linear )
  590:  		Call  SetPartMoveSpeed  ( .Actor:Self 00000003 *Fixed[4.0] )
  5A8:  		Sub   *Var0  00000014
  5B8:  		Call  FlyPartTo ( .Actor:Self 00000003 *Var0 *Var1 *Var2  0`  21` .Easing:Linear )
  5E4:  		Call  SetPartFlagBits   ( .Actor:Self 00000003 00000001 .True )
  600:  	EndCaseGroup
  608:  EndSwitch
  610:  Call  EnableIdleScript  ( .Actor:Self 00000001 )
  624:  Call  UseIdleAnimation  ( .Actor:Self .True )
  638:  Return
  640:  End
}

PADDING: 80227EF4 to 80227F00 (006EDCB4 to 006EDCC0)
00000000 00000000 00000000

#new:Unknown $???_80227F00
{
	00000001 00920001 0000000C 00920000 00000006 00920001 00000009 00920001
	00000008 00920000 0000000B 00920001 00000005 00920000 00000004 00920001
	00000003 00920001 00000000
}

#new:Unknown $???_80227F4C
{
	00000001 00000000 00000000
}

#new:Unknown $???_80227F58
{
	00000001 00000000 00000002 00000000 00000006 00000000 00000009 00000000
	00000007 00000000 00000004 00000000 00000003 00000000 0000000B 00000000
	00000005 00000000 0000000A 00000000 00000008 00000000 0000001F 00000000
	00000020 00000000 00000025 00000000 00000022 00000000 00000024 00000000
	00000023 00000000 00000021 00000000 00000026 00000000 00000027 00000000
	00000029 00000000 00000000
}

#new:Unknown $???_80228004
{
	00800000 01000000 001E00FF $???_80227F00 $???_80227F4C 00000000 00000000 00FB0000
	00000000 00040004 00D00063 00010000 $???_80228004 $Script_80228050 $???_80227F58 00000000
	00043200 2F200000 EC280A1E
}

% Origin: HEURISTIC
#new:Script $Script_80228050
{
    0:  Call  BindTakeTurn  ( .Actor:Self $Script_TakeTurn_802288E4 )
   14:  Call  BindIdle      ( .Actor:Self $Script_Idle_8022810C )
   28:  Call  BindHandleEvent   ( .Actor:Self $Script_HandleEvent_80228140 )
   3C:  Call  SetActorVar   ( .Actor:Self 00000000 00000000 )
   54:  Call  $Function_802183E0 ( )
   60:  If  *Var0  ==  00000000
   70:  	Call  SetActorFlagBits  ( .Actor:Self 00600001 .True )
   88:  	Call  SetPartFlagBits   ( .Actor:Self 00000001 00020000 .True )
   A4:  EndIf
   AC:  Return
   B4:  End
}

% Origin: HEURISTIC
#new:Script $Script_Idle_8022810C
{
    0:  Label  0
    C:  Wait  1`
   18:  Goto  0
   24:  Return
   2C:  End
}

% Origin: HEURISTIC
#new:Script $Script_HandleEvent_80228140
{
    0:  Call  UseIdleAnimation  ( .Actor:Self .False )
   14:  Call  EnableIdleScript  ( .Actor:Self 00000000 )
   28:  Call  GetLastEvent      ( .Actor:Self *Var0 )
   3C:  Switch  *Var0
   48:  	Case  ==  .Event:HitCombo % 9
   54:  		Call  PlaySoundAtActor  ( .Actor:Self 00002073 )
   68:  		SetConst  *Var0  00000001
   78:  		SetConst  *Var1  00920001
   88:  		ExecWait  DoNormalHit
   94:  	Case  ==  .Event:Hit % A
   A0:  		SetConst  *Var0  00000001
   B0:  		SetConst  *Var1  00920004
   C0:  		ExecWait  $Script_80228934
   CC:  		ExecWait  DoNormalHit
   D8:  		Call  RandInt   ( 00000064 *Var0 )
   EC:  		If  *Var0  <=  00000064
   FC:  			ExecWait  $Script_80228A14
  108:  			Return
  110:  		EndIf
  118:  	Case  ==  .Event:BurnHit % E
  124:  		SetConst  *Var0  00000001
  134:  		SetConst  *Var1  00920001
  144:  		SetConst  *Var2  00920001
  154:  		ExecWait  $Script_80228934
  160:  		ExecWait  DoNormalHit
  16C:  		Call  RandInt   ( 00000064 *Var0 )
  180:  		If  *Var0  <=  00000064
  190:  			ExecWait  $Script_80228A14
  19C:  			Return
  1A4:  		EndIf
  1AC:  	Case  ==  .Event:BurnDeath % 24
  1B8:  		SetConst  *Var0  00000001
  1C8:  		SetConst  *Var1  00920001
  1D8:  		SetConst  *Var2  00920001
  1E8:  		ExecWait  $Script_80228934
  1F4:  		ExecWait  DoNormalHit
  200:  		If  00000064  >=  00000064
  210:  			ExecWait  $Script_80228A14
  21C:  			Return
  224:  		Else
  22C:  			SetConst  *Var0  00000001
  23C:  			SetConst  *Var1  00920001
  24C:  			ExecWait  DoDeath
  258:  			Return
  260:  		EndIf
  268:  	Case  ==  .Event:SpinSmashHit % B
  274:  		SetConst  *Var0  00000001
  284:  		SetConst  *Var1  00920001
  294:  		ExecWait  DoSpinSmashHit
  2A0:  		Call  RandInt   ( 00000064 *Var0 )
  2B4:  		If  *Var0  <=  00000064
  2C4:  			ExecWait  $Script_80228A14
  2D0:  			Return
  2D8:  		EndIf
  2E0:  	Case  ==  .Event:SpinSmashDeath % 21
  2EC:  		SetConst  *Var0  00000001
  2FC:  		SetConst  *Var1  00920001
  30C:  		ExecWait  DoSpinSmashHit
  318:  		If  00000064  >=  00000064
  328:  			ExecWait  $Script_80228A14
  334:  			Return
  33C:  		Else
  344:  			SetConst  *Var0  00000001
  354:  			SetConst  *Var1  00920001
  364:  			ExecWait  DoDeath
  370:  			Return
  378:  		EndIf
  380:  	Case  ==  .Event:ShockHit % 2F
  38C:  		SetConst  *Var0  00000001
  39C:  		SetConst  *Var1  00920001
  3AC:  		ExecWait  DoShockHit
  3B8:  		SetConst  *Var0  00000001
  3C8:  		SetConst  *Var1  00920001
  3D8:  		ExecWait  DoJumpBack
  3E4:  		SetConst  *Var0  00000001
  3F4:  		SetConst  *Var1  00920001
  404:  		ExecWait  DoReturnHome
  410:  	Case  ==  .Event:ShockDeath % 26
  41C:  		SetConst  *Var0  00000001
  42C:  		SetConst  *Var1  00920001
  43C:  		ExecWait  DoShockHit
  448:  		SetConst  *Var0  00000001
  458:  		SetConst  *Var1  00920001
  468:  		ExecWait  DoDeath
  474:  		Return
  47C:  	Case  ==  00000017 % 17
  488:  		SetConst  *Var0  00000001
  498:  		SetConst  *Var1  00920001
  4A8:  		ExecWait  DoImmune
  4B4:  	Case  ==  .Event:Immune % 19
  4C0:  		SetConst  *Var0  00000001
  4D0:  		SetConst  *Var1  00920001
  4E0:  		ExecWait  DoImmune
  4EC:  		Call  RandInt   ( 00000064 *Var0 )
  500:  		If  *Var0  <=  00000064
  510:  			ExecWait  $Script_80228A14
  51C:  			Return
  524:  		EndIf
  52C:  	Case  ==  .Event:AirLiftFailed % 1F
  538:  		SetConst  *Var0  00000001
  548:  		SetConst  *Var1  00920001
  558:  		ExecWait  DoImmune
  564:  		Call  RandInt   ( 00000064 *Var0 )
  578:  		If  *Var0  <=  00000064
  588:  			ExecWait  $Script_80228A14
  594:  			Return
  59C:  		EndIf
  5A4:  	Case  ==  .Event:Death % 20
  5B0:  		SetConst  *Var0  00000001
  5C0:  		SetConst  *Var1  00920004
  5D0:  		ExecWait  $Script_80228934
  5DC:  		ExecWait  DoNormalHit
  5E8:  		Wait  10`
  5F4:  		If  00000064  >=  00000064
  604:  			ExecWait  $Script_80228A14
  610:  			Return
  618:  		Else
  620:  			SetConst  *Var0  00000001
  630:  			SetConst  *Var1  00920001
  640:  			ExecWait  DoDeath
  64C:  			Return
  654:  		EndIf
  65C:  	Case  ==  .Event:RecoverStatus % 31
  668:  		SetConst  *Var0  00000001
  678:  		SetConst  *Var1  00920001
  688:  		ExecWait  DoRecover
  694:  	Case  ==  .Event:ScareAway % 39
  6A0:  		SetConst  *Var0  00000001
  6B0:  		SetConst  *Var1  00920001
  6C0:  		SetConst  *Var2  00920001
  6D0:  		ExecWait  DoScareAway
  6DC:  		Return
  6E4:  	Case  ==  .Event:BeginAirLift % 3A
  6F0:  		SetConst  *Var0  00000001
  700:  		SetConst  *Var1  00920001
  710:  		ExecWait  DoAirLift
  71C:  	Case  ==  .Event:BlowAway % 16
  728:  		SetConst  *Var0  00000001
  738:  		SetConst  *Var1  00920001
  748:  		ExecWait  DoBlowAway
  754:  		Return
  75C:  	Default
  764:  EndSwitch
  76C:  Call  EnableIdleScript  ( .Actor:Self 00000001 )
  780:  Call  UseIdleAnimation  ( .Actor:Self .True )
  794:  Return
  79C:  End
}

% Origin: HEURISTIC
#new:Script $Script_TakeTurn_802288E4
{
    0:  Call  RandInt   ( 00000064 *Var0 )
   14:  If  *Var0  <=  00000064
   24:  	ExecWait  $Script_80228A14
   30:  	Return
   38:  EndIf
   40:  Return
   48:  End
}

% Origin: HEURISTIC
#new:Script $Script_80228934
{
    0:  Call  SetActorVar       ( .Actor:Self 00000000 00000001 )
   18:  Call  PlaySoundAtActor  ( .Actor:Self 00002073 )
   2C:  Thread
   34:  	Wait  15`
   40:  	Call  SetAnimation      ( .Actor:Self 00000001 00920001 )
   58:  	Call  GetActorPos       ( .Actor:Self *Var0 *Var1 *Var2 )
   74:  	Add   *Var0  00000005
   84:  	Add   *Var1  00000014
   94:  	Add   *Var2  0000000A
   A4:  	Call  MakeItemEntity    ( .Item:WhackasBump *Var0 *Var1 *Var2 .ItemSpawnMode:Fall_SpawnAlways 00000000 )
   C8:  EndThread
   D0:  Return
   D8:  End
}

% Origin: HEURISTIC
#new:Script $Script_80228A14
{
    0:  Call  UseIdleAnimation  ( .Actor:Self .False )
   14:  Call  EnableIdleScript  ( .Actor:Self 00000000 )
   28:  Call  PlaySoundAtActor  ( .Actor:Self .Sound:MoleDig )
   3C:  Call  SetAnimation      ( .Actor:Self 00000001 00920003 )
   54:  Wait  40`
   60:  Call  GetActorVar       ( .Actor:Self 00000000 *Var0 )
   78:  If  *Var0  !=  00000000
   88:  	Call  SetBattleFlagBits2    ( 10000000 .True )
   9C:  EndIf
   A4:  Call  SetPartFlagBits   ( .Actor:Self 00000001 00020000 .True )
   C0:  Call  SetActorFlagBits  ( .Actor:Self 00600001 .True )
   D8:  Call  RemoveActor       ( .Actor:Self )
   E8:  Return
   F0:  End
}

PADDING: 80228B0C to 80228B10 (006EE8CC to 006EE8D0)
00000000

#new:Script $Script_BeforeBattle_80228B10
{
    0:  Call  SetSpriteShading  ( FFFFFFFF )
   10:  Return
   18:  End
}

#new:Script $Script_AfterBattle_80228B30
{
    0:  Return
    8:  End
}

#new:ForegroundModelList $ForegroundModelList_80228B40
{
	~Model:nok_bt04:ueki2
	~Model:nok_bt04:ueki1
	~Model:nok_bt04:kabu2
	~Model:nok_bt04:kabu1
	~Model:nok_bt04:kusa3
	00000000
}

#new:Stage $Stage_80228B58
{
	$ASCII_8022AC18  % nok_tex
	$ASCII_8022AC08  % nok_bt04_shape
	$ASCII_8022ABF8  % nok_bt04_hit
	$Script_BeforeBattle_80228B10
	$Script_AfterBattle_80228B30
	$ASCII_8022ABF0  % nok_bg
	$ForegroundModelList_80228B40
	00000000
	00000000
	00000000
}

#new:Script $Script_BeforeBattle_80228B80
{
    0:  Call  SetSpriteShading  ( FFFFFFFF )
   10:  Call  SetGroupEnabled   ( ~Model:iwa_bt01:a 00000000 )
   24:  Return
   2C:  End
}

#new:Script $Script_AfterBattle_80228BB4
{
    0:  Return
    8:  End
}

#new:ForegroundModelList $ForegroundModelList_80228BC4
{
	~Model:iwa_bt01:iwa1
	~Model:iwa_bt01:o331
	00000000
}

#new:Stage $Stage_80228BD0
{
	$ASCII_8022AC48  % iwa_tex
	$ASCII_8022AC38  % iwa_bt01_shape
	$ASCII_8022AC28  % iwa_bt01_hit
	$Script_BeforeBattle_80228B80
	$Script_AfterBattle_80228BB4
	$ASCII_8022AC20  % iwa_bg
	$ForegroundModelList_80228BC4
	00000000
	00000000
	00000000
}

PADDING: 80228BF8 to 80228C00 (006EE9B8 to 006EE9C0)
00000000 00000000

#new:Script $Script_80228C00
{
    0:  Set   *VarA  *Var0
   10:  Set   *Var7  *Var1
   20:  Mul   *Var7  0000000A
   30:  Call  $Function_80218580 ( )
   3C:  Label  0
   48:  Add   *Var7  00000001
   58:  If  *Var7  >  00000E0F
   68:  	Sub   *Var7  00000E10
   78:  EndIf
   80:  Call  $Function_80218430    ( *Var7 *Var0 *Var1 *Var2 )
   9C:  Call  TranslateModel        ( *VarA *Var0 *Var1 *Var2 )
   B8:  Wait  1`
   C4:  Goto  0
   D0:  Return
   D8:  End
}

#new:Script $Script_BeforeBattle_80228CE0
{
    0:  Call  SetSpriteShading  ( FFFFFFFF )
   10:  Set   *Var0  00000001
   20:  Set   *Var1  00000000
   30:  Exec  $Script_80228C00
   3C:  Set   *Var0  00000003
   4C:  Set   *Var1  00000078
   5C:  Exec  $Script_80228C00
   68:  Set   *Var0  00000005
   78:  Set   *Var1  000000F0
   88:  Exec  $Script_80228C00
   94:  Call  PlayEffect        ( ~FX:SunRays:RightCorner 00000000 00000000 00000000 00000000 00000000 00000000 00000000 00000000 00000000 00000000 00000000 00000000 )
   D8:  Return
   E0:  End
}

#new:Script $Script_AfterBattle_80228DC8
{
    0:  Return
    8:  End
}

#new:ForegroundModelList $ForegroundModelList_80228DD8
{
	~Model:sbk_bt02:o322
	~Model:sbk_bt02:o321
	~Model:sbk_bt02:o320
	~Model:sbk_bt02:o319
	00000000
}

#new:Stage $Stage_80228DEC
{
	$ASCII_8022AC78  % sbk_tex
	$ASCII_8022AC68  % sbk_bt02_shape
	$ASCII_8022AC58  % sbk_bt02_hit
	$Script_BeforeBattle_80228CE0
	$Script_AfterBattle_80228DC8
	$ASCII_8022AC50  % sbk_bg
	$ForegroundModelList_80228DD8
	00000000
	00000000
	00000000
}

PADDING: 80228E14 to 80228E20 (006EEBD4 to 006EEBE0)
00000000 00000000 00000000

#new:Script $Script_BeforeBattle_80228E20
{
    0:  Call  SetSpriteShading  ( FFFFFFFF )
   10:  Call  SetCamBGColor     ( .Cam:Battle  0`  0`  0` )
   2C:  Call  SetTexPanner      ( ~Model:omo_bt04:o409 0000000A )
   40:  Thread
   48:  	Set   *VarE  00000000
   58:  	Loop
   64:  		Add   *VarE  00008000
   74:  		Call  SetTexPanOffset   ( 0000000A 00000000 *VarE 00000000 )
   90:  		Wait  10`
   9C:  	EndLoop
   A4:  EndThread
   AC:  Return
   B4:  End
}

#new:Script $Script_AfterBattle_80228EDC
{
    0:  Return
    8:  End
}

#new:ForegroundModelList $ForegroundModelList_80228EEC
{
	~Model:omo_bt04:itigo
	~Model:omo_bt04:kisya
	~Model:omo_bt04:kusari
	00000000
}

#new:Stage $Stage_80228EFC
{
	$ASCII_8022ACA8  % omo_tex
	$ASCII_8022AC98  % omo_bt04_shape
	$ASCII_8022AC88  % omo_bt04_hit
	$Script_BeforeBattle_80228E20
	$Script_AfterBattle_80228EDC
	$ASCII_8022AC80  % omo_bg
	$ForegroundModelList_80228EEC
	00000004
	$SpecialFormation_80228F54
	00000000
}

#new:Vector3D $Vector3D_80228F24
{
	-49` 56` -68`
}

#new:Vector3D $Vector3D_80228F30
{
	-13` 56` -68`
}

#new:Vector3D $Vector3D_80228F3C
{
	20` 56` -68`
}

#new:Vector3D $Vector3D_80228F48
{
	53` 56` -68`
}

#new:SpecialFormation $SpecialFormation_80228F54
{
	$SlotMachineStart $Vector3D_80228F24 00000000 00000000 00000000 00000000 00000000
	$SlotMachineStop $Vector3D_80228F30 00000000 00000001 00000000 00000000 00000000
	$SlotMachineStop $Vector3D_80228F3C 00000000 00000002 00000000 00000000 00000000
	$SlotMachineStop $Vector3D_80228F48 00000000 00000003 00000000 00000000 00000000
}

#new:IntTable $IntTable_80228FC4
{
	00000000 00000001 00000000 00000002 00000000 00000002 00000000 00000002
}

#new:IntTable $IntTable_80228FE4
{
	00000000 00000001 00000000 00000002 00000001 00000002 00000000 00000002
}

#new:IntTable $IntTable_80229004
{
	00000000 00000001 00000000 00000002 00000000 00000002 00000000 00000002
}

#new:DefenseTable $DefenseTable_80229024
{
	.Element:Normal 00000000
	.Element:End
}

#new:StatusTable $StatusTable_80229030
{
	.Status:Normal      0`
	.Status:Default     0`
	.Status:Sleep       0`
	.Status:Poison      0`
	.Status:Frozen      0`
	.Status:Dizzy       0`
	.Status:Fear        0`
	.Status:Static      0`
	.Status:Paralyze    0`
	.Status:Shrink      0`
	.Status:Stop        0`
	.Status:DefaultTurnMod    0`
	.Status:SleepTurnMod      0`
	.Status:PoisonTurnMod     0`
	.Status:FrozenTurnMod     0`
	.Status:DizzyTurnMod      0`
	.Status:FearTurnMod       0`
	.Status:StaticTurnMod     0`
	.Status:ParalyzeTurnMod   0`
	.Status:ShrinkTurnMod     0`
	.Status:StopTurnMod       0`
	.Status:End
}

#new:PartsTable $PartsTable_802290DC
{
	00800000 01000000 000000FF 00000000 $DefenseTable_80229024 00000000 00000000 00000000 00000000
}

#new:Actor $SlotMachineStop
{
	% stats
	[Index]        CFb
	[Level]        99`b
	[MaxHP]        99`b
	[Coins]         0`b
	[Flags]       00244005
	[StatusTable] $StatusTable_80229030
	% ai
	[PartsCount]    1`s
	[PartsTable]  $PartsTable_802290DC
	[Script]      $Script_Init_80229150
	% move effectiveness
	[Escape]        0`b
	[Item]          0`b
	[AirLift]       0`b
	[Hurricane]     0`b % Bow's "Spook" as well
	[UpAndAway]     0`b
	[PowerBounce]   0`b
	[SpinSmash]     0`b % weight (0-4)
	% ui positions
	[Size]         44`b  40`b % width height
	[HealthBar]     0`b   0`b % dx dy
	[StatusTurn]  -10`b  20`b % dx dy
	[StatusIcon]   10`b  20`b % dx dy
}

#new:Actor $SlotMachineStart
{
	% stats
	[Index]        CEb
	[Level]        99`b
	[MaxHP]        99`b
	[Coins]         0`b
	[Flags]       00244005
	[StatusTable] $StatusTable_80229030
	% ai
	[PartsCount]    1`s
	[PartsTable]  $PartsTable_802290DC
	[Script]      $Script_Init_80229150
	% move effectiveness
	[Escape]        0`b
	[Item]          0`b
	[AirLift]       0`b
	[Hurricane]     0`b % Bow's "Spook" as well
	[UpAndAway]     0`b
	[PowerBounce]   0`b
	[SpinSmash]     0`b % weight (0-4)
	% ui positions
	[Size]         44`b  40`b % width height
	[HealthBar]     0`b   0`b % dx dy
	[StatusTurn]  -10`b  20`b % dx dy
	[StatusIcon]   10`b  20`b % dx dy
}

#new:Script $Script_Init_80229150
{
    0:  UseArray  $End[10]
    C:  Call  BindTakeTurn      ( .Actor:Self $Script_TakeTurn_8022A598 )
   20:  Call  BindIdle  ( .Actor:Self $Script_Idle_802292E8 )
   34:  Call  BindHandleEvent   ( .Actor:Self $Script_HandleEvent_80229E44 )
   48:  Set   *Array[1]  00000000
   58:  Set   *Array[2]  00000000
   68:  Set   *Array[3]  00000000
   78:  Set   *Array[4]  00000000
   88:  Call  RandInt   ( 00000008 *Var0 )
   9C:  Mul   *Var0  0000002D
   AC:  Set   *Array[5]  *Var0
   BC:  Call  RandInt   ( 00000008 *Var0 )
   D0:  Mul   *Var0  0000002D
   E0:  Set   *Array[6]  *Var0
   F0:  Call  RandInt   ( 00000008 *Var0 )
  104:  Mul   *Var0  0000002D
  114:  Set   *Array[7]  *Var0
  124:  Call  $Function_802185E0 ( )
  130:  If  *Var0  ==  00000001
  140:  	Set   *Array[1]  00000001
  150:  	Set   *Array[2]  00000001
  160:  	Set   *Array[3]  00000001
  170:  	Set   *Array[4]  00000001
  180:  EndIf
  188:  Return
  190:  End
}

#new:Script $Script_Idle_802292E8
{
    0:  UseArray  $End[10]
    C:  Call  EnableTexPanning  ( 0000002D .True )
   20:  Set   *VarE  00000000
   30:  Set   *VarF  00000000
   40:  Label  0
   4C:  Call  GetActorVar       ( .Actor:Self 00000000 *Var0 )
   64:  Switch  *Var0
   70:  	Case  ==  00000000
   7C:  	Case  ==  00000001
   88:  		Switch  *Array[2]
   94:  			Case  ==  00000000
   A0:  			Case  ==  00000001
   AC:  				Add   *Array[5]  00000005
   BC:  			Case  ==  00000002
   C8:  				If  *Array[8]  >  00000000
   D8:  					Add   *Array[5]  00000005
   E8:  					Sub   *Array[8]  00000005
   F8:  					BreakCase
  100:  				EndIf
  108:  				Set   *Var0  *Array[5]
  118:  				Mod   *Var0  0000002D
  128:  				If  *Var0  !=  00000000
  138:  					Add   *Array[5]  00000005
  148:  				Else
  150:  					Set   *Array[2]  00000003
  160:  				EndIf
  168:  		EndSwitch
  170:  		Call  RotateModel   ( 00000020 *Array[5] 00000001 00000000 00000000 )
  190:  		Call  RotateModel   ( 00000021 *Array[5] 00000001 00000000 00000000 )
  1B0:  		Call  RotateModel   ( 00000022 *Array[5] 00000001 00000000 00000000 )
  1D0:  	Case  ==  00000002
  1DC:  		Switch  *Array[3]
  1E8:  			Case  ==  00000000
  1F4:  			Case  ==  00000001
  200:  				Add   *Array[6]  00000005
  210:  			Case  ==  00000002
  21C:  				If  *Array[9]  >  00000000
  22C:  					Add   *Array[6]  00000005
  23C:  					Sub   *Array[9]  00000005
  24C:  					BreakCase
  254:  				EndIf
  25C:  				Set   *Var0  *Array[6]
  26C:  				Mod   *Var0  0000002D
  27C:  				If  *Var0  !=  00000000
  28C:  					Add   *Array[6]  00000005
  29C:  				Else
  2A4:  					Set   *Array[3]  00000003
  2B4:  				EndIf
  2BC:  		EndSwitch
  2C4:  		Call  RotateModel   ( 00000024 *Array[6] 00000001 00000000 00000000 )
  2E4:  		Call  RotateModel   ( 00000025 *Array[6] 00000001 00000000 00000000 )
  304:  		Call  RotateModel   ( 00000026 *Array[6] 00000001 00000000 00000000 )
  324:  	Case  ==  00000003
  330:  		Switch  *Array[4]
  33C:  			Case  ==  00000000
  348:  			Case  ==  00000001
  354:  				Add   *Array[7]  00000005
  364:  			Case  ==  00000002
  370:  				If  *Array[A]  >  00000000
  380:  					Add   *Array[7]  00000005
  390:  					Sub   *Array[A]  00000005
  3A0:  					BreakCase
  3A8:  				EndIf
  3B0:  				Set   *Var0  *Array[7]
  3C0:  				Mod   *Var0  0000002D
  3D0:  				If  *Var0  !=  00000000
  3E0:  					Add   *Array[7]  00000005
  3F0:  				Else
  3F8:  					Set   *Array[4]  00000003
  408:  				EndIf
  410:  		EndSwitch
  418:  		Call  RotateModel   ( 00000028 *Array[7] 00000001 00000000 00000000 )
  438:  		Call  RotateModel   ( 00000029 *Array[7] 00000001 00000000 00000000 )
  458:  		Call  RotateModel   ( 0000002A *Array[7] 00000001 00000000 00000000 )
  478:  EndSwitch
  480:  If  *Array[5]  >=  00000168
  490:  	Sub   *Array[5]  00000168
  4A0:  EndIf
  4A8:  If  *Array[6]  >=  00000168
  4B8:  	Sub   *Array[6]  00000168
  4C8:  EndIf
  4D0:  If  *Array[7]  >=  00000168
  4E0:  	Sub   *Array[7]  00000168
  4F0:  EndIf
  4F8:  If  *Array[1]  ==  00000000
  508:  	Add   *VarF  FFFFFEEB
  518:  	Call  SetTexPanOffset   ( 0000000B 00000000 00000000 *VarF )
  534:  EndIf
  53C:  If  *Array[1]  ==  00000001
  54C:  	Add   *VarF  FFFFFBAA
  55C:  	Call  SetTexPanOffset   ( 0000000B 00000000 00000000 *VarF )
  578:  EndIf
  580:  If  *Array[1]  ==  00000002
  590:  	Add   *VarF  FFFFF2FE
  5A0:  	Call  SetTexPanOffset   ( 0000000B 00000000 00000000 *VarF )
  5BC:  EndIf
  5C4:  If  *Array[1]  ==  00000002
  5D4:  	Goto  1
  5E0:  EndIf
  5E8:  If  *Array[1]  ==  00000000
  5F8:  	Goto  1
  604:  EndIf
  60C:  Call  GetActorVar   ( .Actor:Self 00000000 *Var0 )
  624:  If  *Var0  !=  00000000
  634:  	Goto  1
  640:  EndIf
  648:  Set   *Var0  *Array[2]
  658:  Add   *Var0  *Array[3]
  668:  Add   *Var0  *Array[4]
  678:  If  *Var0  ==  00000009
  688:  	Set   *Var0  *Array[5]
  698:  	Div   *Var0  0000002D
  6A8:  	UseIntBuffer  $IntTable_80228FC4
  6B4:  	GetIntN  *VarA *Var0
  6C4:  	Set   *Var0  *Array[6]
  6D4:  	Div   *Var0  0000002D
  6E4:  	UseIntBuffer  $IntTable_80228FE4
  6F0:  	GetIntN  *VarB *Var0
  700:  	Set   *Var0  *Array[7]
  710:  	Div   *Var0  0000002D
  720:  	UseIntBuffer  $IntTable_80229004
  72C:  	GetIntN  *VarC *Var0
  73C:  	Loop
  748:  		If  *VarA  !=  *VarB
  758:  			BreakLoop
  760:  		EndIf
  768:  		If  *VarA  !=  *VarC
  778:  			BreakLoop
  780:  		EndIf
  788:  		If  *VarB  !=  *VarC
  798:  			BreakLoop
  7A0:  		EndIf
  7A8:  		Thread
  7B0:  			Call  8026BF48  ( 00000001 )
  7C0:  			Call  UseBattleCamPreset    ( 00000013 )
  7D0:  			Call  SetBattleCamTarget    (  0`  100`  0` )
  7E8:  			Call  SetBattleCamOffsetZ   (  0` )
  7F8:  			Call  SetBattleCamZoom      (  340` )
  808:  			Call  MoveBattleCamOver     (  10` )
  818:  			Switch  *VarA
  824:  				Case  ==  00000000
  830:  					Loop  0000000A
  83C:  						Call  MakeItemEntity    ( .Item:Coin FFFFFFF9 00000069 FFFFFFB6 .ItemSpawnMode:Toss_SpawnAlways_Small 00000000 )
  860:  						Call  $Function_80218608 ( )
  86C:  						Wait  1`
  878:  						Call  MakeItemEntity    ( .Item:Coin 00000011 00000069 FFFFFFB6 .ItemSpawnMode:Toss_SpawnAlways_Small 00000000 )
  89C:  						Call  $Function_80218608 ( )
  8A8:  						Wait  1`
  8B4:  						Call  MakeItemEntity    ( .Item:Coin 0000002A 00000069 FFFFFFB6 .ItemSpawnMode:Toss_SpawnAlways_Small 00000000 )
  8D8:  						Call  $Function_80218608 ( )
  8E4:  						Wait  10`
  8F0:  					EndLoop
  8F8:  				Case  ==  00000001
  904:  					Loop  0000000A
  910:  						Call  MakeItemEntity    ( .Item:Coin FFFFFFF9 00000069 FFFFFFB6 .ItemSpawnMode:Toss_SpawnAlways_Small 00000000 )
  934:  						Call  $Function_80218608 ( )
  940:  						Wait  1`
  94C:  						Call  MakeItemEntity    ( .Item:Coin 00000011 00000069 FFFFFFB6 .ItemSpawnMode:Toss_SpawnAlways_Small 00000000 )
  970:  						Call  $Function_80218608 ( )
  97C:  						Wait  1`
  988:  						Call  MakeItemEntity    ( .Item:Coin 0000002A 00000069 FFFFFFB6 .ItemSpawnMode:Toss_SpawnAlways_Small 00000000 )
  9AC:  						Call  $Function_80218608 ( )
  9B8:  						Wait  10`
  9C4:  					EndLoop
  9CC:  				Case  ==  00000002
  9D8:  					Loop  0000000A
  9E4:  						Call  MakeItemEntity    ( .Item:Coin FFFFFFF9 00000069 FFFFFFB6 .ItemSpawnMode:Toss_SpawnAlways_Small 00000000 )
  A08:  						Call  $Function_80218608 ( )
  A14:  						Wait  1`
  A20:  						Call  MakeItemEntity    ( .Item:Coin 00000011 00000069 FFFFFFB6 .ItemSpawnMode:Toss_SpawnAlways_Small 00000000 )
  A44:  						Call  $Function_80218608 ( )
  A50:  						Wait  1`
  A5C:  						Call  MakeItemEntity    ( .Item:Coin 0000002A 00000069 FFFFFFB6 .ItemSpawnMode:Toss_SpawnAlways_Small 00000000 )
  A80:  						Call  $Function_80218608 ( )
  A8C:  						Wait  10`
  A98:  					EndLoop
  AA0:  			EndSwitch
  AA8:  			Set   *Array[1]  00000000
  AB8:  			Set   *Array[2]  00000000
  AC8:  			Set   *Array[3]  00000000
  AD8:  			Set   *Array[4]  00000000
  AE8:  			Call  8026BF48  ( 00000000 )
  AF8:  		EndThread
  B00:  		Set   *Array[1]  00000002
  B10:  		BreakLoop
  B18:  	EndLoop
  B20:  EndIf
  B28:  Label  1
  B34:  Wait  1`
  B40:  Goto  0
  B4C:  Return
  B54:  End
}

#new:Script $Script_HandleEvent_80229E44
{
    0:  UseArray  $End[10]
    C:  Call  UseIdleAnimation  ( .Actor:Self .False )
   20:  Call  GetLastEvent      ( .Actor:Self *Var0 )
   34:  Switch  *Var0
   40:  	CaseOR  ==  .Event:HitCombo % 9
   4C:  	CaseOR  ==  .Event:Hit % A
   58:  	CaseOR  ==  .Event:BurnHit % E
   64:  	CaseOR  ==  .Event:ShockHit % 2F
   70:  		Call  GetActorVar   ( .Actor:Self 00000000 *Var0 )
   88:  		Switch  *Var0
   94:  			Case  ==  00000000
   A0:  				Call  TranslateModel    ( 0000001C 00000000 FFFFFFFE 00000000 )
   BC:  				Wait  1`
   C8:  				Call  TranslateModel    ( 0000001C 00000000 FFFFFFFA 00000000 )
   E4:  				Wait  1`
   F0:  				Call  TranslateModel    ( 0000001C 00000000 FFFFFFF9 00000000 )
  10C:  				Wait  4`
  118:  				Call  TranslateModel    ( 0000001C 00000000 FFFFFFFC 00000000 )
  134:  				Wait  1`
  140:  				Call  TranslateModel    ( 0000001C 00000000 FFFFFFFE 00000000 )
  15C:  				Wait  1`
  168:  				Call  TranslateModel    ( 0000001C 00000000 FFFFFFFF 00000000 )
  184:  				Wait  1`
  190:  				Call  TranslateModel    ( 0000001C 00000000 00000000 00000000 )
  1AC:  				Set   *Array[1]  00000001
  1BC:  				Set   *Array[2]  00000001
  1CC:  				Set   *Array[3]  00000001
  1DC:  				Set   *Array[4]  00000001
  1EC:  			Case  ==  00000001
  1F8:  				Call  TranslateModel    ( 0000001D 00000000 FFFFFFFE 00000000 )
  214:  				Wait  1`
  220:  				Call  TranslateModel    ( 0000001D 00000000 FFFFFFFA 00000000 )
  23C:  				Wait  1`
  248:  				Call  TranslateModel    ( 0000001D 00000000 FFFFFFF9 00000000 )
  264:  				Wait  4`
  270:  				Call  TranslateModel    ( 0000001D 00000000 FFFFFFFC 00000000 )
  28C:  				Wait  1`
  298:  				Call  TranslateModel    ( 0000001D 00000000 FFFFFFFE 00000000 )
  2B4:  				Wait  1`
  2C0:  				Call  TranslateModel    ( 0000001D 00000000 FFFFFFFF 00000000 )
  2DC:  				Wait  1`
  2E8:  				Call  TranslateModel    ( 0000001D 00000000 00000000 00000000 )
  304:  				If  *Array[2]  ==  00000001
  314:  					Set   *Array[8]  00000064
  324:  					Set   *Array[9]  00000096
  334:  					Set   *Array[A]  000000C8
  344:  					Set   *Array[2]  00000002
  354:  					Set   *Array[3]  00000002
  364:  					Set   *Array[4]  00000002
  374:  				EndIf
  37C:  			Case  ==  00000002
  388:  				Call  TranslateModel    ( 0000001D 00000000 FFFFFFFE 00000000 )
  3A4:  				Wait  1`
  3B0:  				Call  TranslateModel    ( 0000001D 00000000 FFFFFFFA 00000000 )
  3CC:  				Wait  1`
  3D8:  				Call  TranslateModel    ( 0000001D 00000000 FFFFFFF9 00000000 )
  3F4:  				Wait  4`
  400:  				Call  TranslateModel    ( 0000001D 00000000 FFFFFFFC 00000000 )
  41C:  				Wait  1`
  428:  				Call  TranslateModel    ( 0000001D 00000000 FFFFFFFE 00000000 )
  444:  				Wait  1`
  450:  				Call  TranslateModel    ( 0000001D 00000000 FFFFFFFF 00000000 )
  46C:  				Wait  1`
  478:  				Call  TranslateModel    ( 0000001D 00000000 00000000 00000000 )
  494:  				If  *Array[3]  ==  00000001
  4A4:  					Set   *Array[8]  00000096
  4B4:  					Set   *Array[9]  00000064
  4C4:  					Set   *Array[A]  000000C8
  4D4:  					Set   *Array[2]  00000002
  4E4:  					Set   *Array[3]  00000002
  4F4:  					Set   *Array[4]  00000002
  504:  				EndIf
  50C:  			Case  ==  00000003
  518:  				Call  TranslateModel    ( 0000001D 00000000 FFFFFFFE 00000000 )
  534:  				Wait  1`
  540:  				Call  TranslateModel    ( 0000001D 00000000 FFFFFFFA 00000000 )
  55C:  				Wait  1`
  568:  				Call  TranslateModel    ( 0000001D 00000000 FFFFFFF9 00000000 )
  584:  				Wait  4`
  590:  				Call  TranslateModel    ( 0000001D 00000000 FFFFFFFC 00000000 )
  5AC:  				Wait  1`
  5B8:  				Call  TranslateModel    ( 0000001D 00000000 FFFFFFFE 00000000 )
  5D4:  				Wait  1`
  5E0:  				Call  TranslateModel    ( 0000001D 00000000 FFFFFFFF 00000000 )
  5FC:  				Wait  1`
  608:  				Call  TranslateModel    ( 0000001D 00000000 00000000 00000000 )
  624:  				If  *Array[4]  ==  00000001
  634:  					Set   *Array[8]  000000C8
  644:  					Set   *Array[9]  00000096
  654:  					Set   *Array[A]  00000064
  664:  					Set   *Array[2]  00000002
  674:  					Set   *Array[3]  00000002
  684:  					Set   *Array[4]  00000002
  694:  				EndIf
  69C:  		EndSwitch
  6A4:  	EndCaseGroup
  6AC:  	CaseOR  ==  .Event:BurnDeath % 24
  6B8:  	CaseOR  ==  .Event:SpinSmashHit % B
  6C4:  	CaseOR  ==  .Event:ShockDeath % 26
  6D0:  	CaseOR  ==  .Event:Death % 20
  6DC:  	CaseOR  ==  .Event:SpinSmashDeath % 21
  6E8:  	CaseOR  ==  .Event:SpikeContact % 2A
  6F4:  	CaseOR  ==  .Event:BurnContact % 2C
  700:  	EndCaseGroup
  708:  	CaseOR  ==  00000017 % 17
  714:  	CaseOR  ==  .Event:Immune % 19
  720:  	EndCaseGroup
  728:  EndSwitch
  730:  Call  UseIdleAnimation  ( .Actor:Self .True )
  744:  Return
  74C:  End
}

#new:Script $Script_TakeTurn_8022A598
{
    0:  UseArray  $End[10]
    C:  Return
   14:  End
}

PADDING: 8022A5B4 to 8022A5C0 (006F0374 to 006F0380)
00000000 00000000 00000000

#new:Script $Script_BeforeBattle_8022A5C0
{
    0:  Call  SetSpriteShading  ( FFFFFFFF )
   10:  Return
   18:  End
}

#new:Script $Script_AfterBattle_8022A5E0
{
    0:  Return
    8:  End
}

#new:Stage $Stage_8022A5F0
{
	$ASCII_8022ACD0  % dgb_tex
	$ASCII_8022ACC0  % dgb_bt05_shape
	$ASCII_8022ACB0  % dgb_bt05_hit
	$Script_BeforeBattle_8022A5C0
	$Script_AfterBattle_8022A5E0
	00000000
	00000000
	00000000
	00000000
	00000000
}

PADDING: 8022A618 to 8022A620 (006F03D8 to 006F03E0)
00000000 00000000

#new:Formation $Formation_00
{
	$Fuzzy 00000000 0000000A 00000000 00000000 00000000 00000000
	$Fuzzy 00000001 00000009 00000000 00000000 00000000 00000000
	$Fuzzy 00000002 00000008 00000000 00000000 00000000 00000000
	$Fuzzy 00000003 00000007 00000000 00000000 00000000 00000000
}

#new:Formation $Formation_01
{
	$MontyMole 00000001 0000000A 00000000 00000000 00000000 00000000
	$MontyMole 00000002 00000009 00000000 00000000 00000000 00000000
	$MontyMole 00000003 00000008 00000000 00000000 00000000 00000000
}

#new:Formation $Formation_02
{
	$Pokey 00000001 0000000A 00000000 00000000 00000000 00000000
	$BanditA 00000002 00000009 00000000 00000000 00000000 00000000
	$Pokey 00000003 00000008 00000000 00000000 00000000 00000000
}

#new:Formation $Formation_03
{
	$ShyGuy 00000000 0000000A 00000000 00000000 00000000 00000000
	$ShyGuy 00000001 00000009 00000000 00000000 00000000 00000000
	$ShyGuy 00000002 00000008 00000000 00000000 00000000 00000000
	$ShyGuy 00000003 00000007 00000000 00000000 00000000 00000000
}

#new:Formation $Formation_04
{
	$TubbaBlubba 00000002 0000000A 00000000 00000000 00000000 00000000
}

#new:FormationTable $FormationTable
{
	$SJIS_8022AD28 00000004 $Formation_00 $Stage_80228B58 $Script_8022A870
	$SJIS_8022AD14 00000003 $Formation_01 $Stage_80228BD0 $Script_8022A910
	$SJIS_8022AD00 00000003 $Formation_02 $Stage_80228DEC $Script_8022A9F0
	$SJIS_8022ACEC 00000004 $Formation_03 $Stage_80228EFC $Script_8022AAA0
	$SJIS_8022ACD8 00000001 $Formation_04 $Stage_8022A5F0 $Script_8022AB40
	00000000 00000000 00000000 00000000 00000000
}

#new:StageTable $StageTable
{
	$ASCII_8022AD5C $Stage_80228B58
	$ASCII_8022AD54 $Stage_80228BD0
	$ASCII_8022AD4C $Stage_80228DEC
	$ASCII_8022AD44 $Stage_80228EFC
	$ASCII_8022AD3C $Stage_8022A5F0
	00000000 00000000
}

PADDING: 8022A86C to 8022A870 (006F062C to 006F0630)
00000000

#new:Script $Script_8022A870
{
    0:  Wait  3`
    C:  Call  SetCamViewport    ( .Cam:Battle  29`  20`  262`  177` )
   2C:  Call  802535B4  ( 00000000 )
   3C:  Set   *Var0  0000000F
   4C:  Call  $Function_80218630 ( )
   58:  Call  WaitForState      ( .BattleState:PlayerMenu )
   68:  Call  $Function_80218644 ( )
   74:  Call  SetBattleState    ( .BattleState:PlayerMove )
   84:  Wait  00002710
   90:  Return
   98:  End
}

#new:Script $Script_8022A910
{
    0:  Call  UseBattleCamPreset    ( 00000002 )
   10:  Call  MoveBattleCamOver (  1` )
   20:  Wait  3`
   2C:  Call  SetCamViewport    ( .Cam:Battle  29`  20`  262`  177` )
   4C:  Call  802535B4  ( 00000000 )
   5C:  Call  WaitForState      ( .BattleState:PlayerMenu )
   6C:  Call  $Function_802186E0 ( )
   78:  Call  SetBattleState    ( .BattleState:PlayerMove )
   88:  Wait  130`
   94:  Loop  0000001E
   A0:  	Call  GetCommandAutoSuccess ( 00000000 )
   B0:  	Wait  1`
   BC:  EndLoop
   C4:  Return
   CC:  End
}

PADDING: 8022A9E4 to 8022A9F0 (006F07A4 to 006F07B0)
00000000 00000000 00000000

#new:Script $Script_8022A9F0
{
    0:  Call  UseBattleCamPreset    ( 00000002 )
   10:  Call  MoveBattleCamOver (  1` )
   20:  Wait  3`
   2C:  Call  SetCamViewport    ( .Cam:Battle  29`  20`  262`  177` )
   4C:  Call  802535B4  ( 00000000 )
   5C:  Call  WaitForState      ( .BattleState:PlayerMenu )
   6C:  Call  $Function_80218770 ( )
   78:  Call  SetBattleState    ( .BattleState:PartnerMove )
   88:  Wait  90`
   94:  Return
   9C:  End
}

PADDING: 8022AA94 to 8022AAA0 (006F0854 to 006F0860)
00000000 00000000 00000000

#new:Script $Script_8022AAA0
{
    0:  Call  UseBattleCamPreset    ( 00000002 )
   10:  Call  MoveBattleCamOver (  1` )
   20:  Wait  3`
   2C:  Call  SetCamViewport    ( .Cam:Battle  29`  20`  262`  177` )
   4C:  Call  802535B4  ( 00000000 )
   5C:  Call  WaitForState      ( .BattleState:PlayerMenu )
   6C:  Call  $Function_802187F0 ( )
   78:  Call  SetBattleState    ( .BattleState:PlayerMove )
   88:  Return
   90:  End
}

PADDING: 8022AB38 to 8022AB40 (006F08F8 to 006F0900)
00000000 00000000

#new:Script $Script_8022AB40
{
    0:  Call  UseBattleCamPreset    ( 00000002 )
   10:  Call  MoveBattleCamOver (  1` )
   20:  Wait  3`
   2C:  Call  SetCamViewport    ( .Cam:Battle  29`  20`  262`  177` )
   4C:  Call  802535B4  ( 00000000 )
   5C:  Set   *Var0  00000005
   6C:  Call  $Function_80218890 ( )
   78:  Call  WaitForState      ( .BattleState:PlayerMenu )
   88:  Call  SetBattleState    ( .BattleState:NextEnemy )
   98:  Return
   A0:  End
}

PADDING: 8022ABE8 to 8022ABF0 (006F09A8 to 006F09B0)
00000000 00000000

#new:ASCII $ASCII_8022ABF0
{
	"nok_bg"
}

#new:ASCII $ASCII_8022ABF8
{
	"nok_bt04_hit"
}

#new:ASCII $ASCII_8022AC08
{
	"nok_bt04_shape"
}

#new:ASCII $ASCII_8022AC18
{
	"nok_tex"
}

#new:ASCII $ASCII_8022AC20
{
	"iwa_bg"
}

#new:ASCII $ASCII_8022AC28
{
	"iwa_bt01_hit"
}

#new:ASCII $ASCII_8022AC38
{
	"iwa_bt01_shape"
}

#new:ASCII $ASCII_8022AC48
{
	"iwa_tex"
}

#new:ASCII $ASCII_8022AC50
{
	"sbk_bg"
}

#new:ASCII $ASCII_8022AC58
{
	"sbk_bt02_hit"
}

#new:ASCII $ASCII_8022AC68
{
	"sbk_bt02_shape"
}

#new:ASCII $ASCII_8022AC78
{
	"sbk_tex"
}

#new:ASCII $ASCII_8022AC80
{
	"omo_bg"
}

#new:ASCII $ASCII_8022AC88
{
	"omo_bt04_hit"
}

#new:ASCII $ASCII_8022AC98
{
	"omo_bt04_shape"
}

#new:ASCII $ASCII_8022ACA8
{
	"omo_tex"
}

#new:ASCII $ASCII_8022ACB0
{
	"dgb_bt05_hit"
}

#new:ASCII $ASCII_8022ACC0
{
	"dgb_bt05_shape"
}

#new:ASCII $ASCII_8022ACD0
{
	"dgb_tex"
}

#new:SJIS $SJIS_8022ACD8
{
	ダイジェスト０５ % daijyesuto05
}

#new:SJIS $SJIS_8022ACEC
{
	ダイジェスト０４ % daijyesuto04
}

#new:SJIS $SJIS_8022AD00
{
	ダイジェスト０３ % daijyesuto03
}

#new:SJIS $SJIS_8022AD14
{
	ダイジェスト０２ % daijyesuto02
}

#new:SJIS $SJIS_8022AD28
{
	ダイジェスト０１ % daijyesuto01
}

#new:ASCII $ASCII_8022AD3C
{
	"dig_05"
}

#new:ASCII $ASCII_8022AD44
{
	"dig_04"
}

#new:ASCII $ASCII_8022AD4C
{
	"dig_03"
}

#new:ASCII $ASCII_8022AD54
{
	"dig_02"
}

#new:ASCII $ASCII_8022AD5C
{
	"dig_01"
}

PADDING: 8022AD64 to 8022AD70 (006F0B24 to 006F0B30)
00000000 00000000 00000000

