#define .luigiStill     00A30000
#define .luigiIdle      00A30001
#define .luigiWalk      00A30002
#define .luigiScared    00A30003
#define .luigiRun       00A30004
#define .luigiRaise     00A30005
#define .luigiThrow     00A30006
#define .luigiHammer    00A30007
#define .luigiHurt      00A30008
#define .luigiDead      00A30009
#define .luigiBurnHurt  00A3000A
#define .luigiBurnDead  00A3000B
#define .luigiDizzy     00A3000C
#define .luigiSleep     00A3000D



%Memory Luigi parts
#define .luigiPart 1
#define .hammerPart 2

%Memory Luigi stats
#define .luigiHP 50`b
#define .hammerThrowDamage 5
#define .luigiDashDamage 4
#define .booDashDamage 3

#new:Actor $LuigiMemory {
    % stats
    [Index]         DBb 
    [Level]         5`b 
    [MaxHP]         .luigiHP 
    [Coins]         1`b 
    [Flags]       00000000 
    [StatusTable] $StatusTable_MemoryLuigi
    % ai
    [PartsCount]    2`s 
    [PartsTable]  $PartsTable_MemoryLuigi0
    [Script]      $Script_Init_MemoryLuigi
    % move effectiveness
    [Escape]       90`b 
    [Item]        100`b 
    [AirLift]     100`b 
    [Hurricane]    90`b % Bow's "Spook" as well
    [UpAndAway]    95`b 
    [PowerBounce] 100`b 
    [SpinSmash]     0`b % weight (0-4)
    % ui positions
    [Size]         24`b  24`b % width height
    [HealthBar]     0`b   0`b % dx dy
    [StatusTurn]  -10`b  20`b % dx dy
    [StatusIcon]   10`b  20`b % dx dy
}

#new:DefenseTable $DefenseTable_MemoryLuigi {
.Element:Normal 00000000
.Element:End
}

#new:StatusTable $StatusTable_MemoryLuigi {
.Status:Normal      0`
.Status:Default     0`
.Status:Sleep     100`
.Status:Poison    100`
.Status:Frozen    100`
.Status:Dizzy     100`
.Status:Fear      100`
.Status:Static    100`
.Status:Paralyze  100`
.Status:Shrink    100`
.Status:Stop      100`
.Status:DefaultTurnMod    0`
.Status:SleepTurnMod      0`
.Status:PoisonTurnMod     0`
.Status:FrozenTurnMod     0`
.Status:DizzyTurnMod      0`
.Status:FearTurnMod       0`
.Status:StaticTurnMod     0`
.Status:ParalyzeTurnMod   0`
.Status:ShrinkTurnMod     0`
.Status:StopTurnMod       0`
.Status:End
}

#new:PartsTable $PartsTable_MemoryLuigi0 { %ActorPartBlueprint struct in decomp
/% s32 flags %/                 00800000
/% s8 index %/                  ~Byte:.luigiPart
/% Vec3b posOffset %/           00b 00b 00b
/% Vec2b targetOffset %/        00b 30b %for cursor when selecting to attack in battle
/% s16 opacity %/               00FFs
/% s32* IdleAnimations %/       $IdleAnimations_MemoryLuigi
/% s32* defenseTable %/         $DefenseTable_MemoryLuigi
/% s32 eventFlags %/            00000000
/% s32 elementImmunityFlags %/  00000000
/% s8 unk_1C %/                 00b
/% s8 unk_1D %/                 F6b
/% s8 unk_1E %/                 00b
/% s8 unk_1F %/                 00b
/% s8 unk_20 %/                 00000000

%hammer
/% s32 flags %/                 00120001
/% s8 index %/                  ~Byte:.hammerPart
/% Vec3b posOffset %/           00b 00b 00b
/% Vec2b targetOffset %/        00b 00b %for cursor when selecting to attack in battle
/% s16 opacity %/               00FFs
/% s32* IdleAnimations %/       $IdleAnimations_Hammer
/% s32* defenseTable %/         $DefenseTable_MemoryLuigi
/% s32 eventFlags %/            00000000
/% s32 elementImmunityFlags %/  00000000
/% s8 unk_1C %/                 00b
/% s8 unk_1D %/                 00b
/% s8 unk_1E %/                 00b
/% s8 unk_1F %/                 00b
/% s8 unk_20 %/                 00000000
}

#new:IdleAnimations $IdleAnimations_Hammer {
.Status:Normal    .luigiHammer
.Status:End
}

#new:IdleAnimations $IdleAnimations_MemoryLuigi {
.Status:Normal    .luigiIdle
.Status:Stone     .luigiIdle
.Status:Sleep     .luigiSleep
.Status:Poison    .luigiIdle
.Status:Stop      .luigiStill
.Status:Static    .luigiIdle
.Status:Paralyze  .luigiIdle
.Status:Dizzy     .luigiDizzy
.Status:Fear      .luigiIdle
.Status:End
}

#new:Script $Script_Init_MemoryLuigi {
    Call BindTakeTurn      ( .Actor:Self $Script_TakeTurn_MemoryLuigi )
    Call BindIdle  ( .Actor:Self $Script_Idle_MemoryLuigi )
    Call BindHandleEvent   ( .Actor:Self $Script_HandleEvent_MemoryLuigi )
    Return
    End
}

#new:Script $Script_Idle_MemoryLuigi {
    Return
    End
}

#new:Script $Script_HandleEvent_MemoryLuigi {
    Call UseIdleAnimation  ( .Actor:Self .False )
    Call EnableIdleScript  ( .Actor:Self .False )
    Call SetActorScale     ( .Actor:Self *Fixed[1.0] *Fixed[1.0] *Fixed[1.0] )
    Call GetLastEvent      ( .Actor:Self *Var0 )
    Switch  *Var0 
        CaseOR  ==  .Event:HitCombo % 9
        CaseOR  ==  .Event:Hit % A
            SetConst  *Var0  .luigiPart 
            SetConst  *Var1  .luigiHurt 
            ExecWait  DoNormalHit
        EndCaseGroup 
        Case  ==  .Event:BurnHit % E
            SetConst  *Var0  .luigiPart 
            SetConst  *Var1  .luigiBurnHurt 
            SetConst  *Var2  .luigiBurnDead 
        ExecWait  DoBurnHit 
        Case  ==  .Event:BurnDeath % 24
            SetConst  *Var0  .luigiPart 
            SetConst  *Var1  .luigiBurnHurt 
            SetConst  *Var2  .luigiBurnDead 
            ExecWait  DoBurnHit 
            SetConst  *Var0  .luigiPart 
            SetConst  *Var1  .luigiBurnDead 
            ExecWait  DoDeath 
            Return
        Case  ==  .Event:Death % 20
            SetConst  *Var0  .luigiPart 
            SetConst  *Var1  .luigiHurt 
            ExecWait  DoNormalHit 
            Wait  10`
            SetConst  *Var0  .luigiPart  
            SetConst  *Var1  .luigiDead
            ExecWait  DoDeath 
            Return
    EndSwitch
    % 174:  	Case  ==  .Event:SpinSmashHit % B
    % 180:  		SetConst  *Var0  00000001 
    % 190:  		SetConst  *Var1  00260005 
    % 1A0:  		ExecWait  DoSpinSmashHit 
    % 1AC:  	Case  ==  .Event:SpinSmashDeath % 21
    % 1B8:  		SetConst  *Var0  00000001 
    % 1C8:  		SetConst  *Var1  00260005 
    % 1D8:  		ExecWait  DoSpinSmashHit 
    % 1E4:  		SetConst  *Var0  00000001 
    % 1F4:  		SetConst  *Var1  00260006 
    % 204:  		ExecWait  DoDeath 
    % 210:  		Return
    % 218:  	Case  ==  .Event:ShockHit % 2F
    % 224:  		SetConst  *Var0  00000001 
    % 234:  		SetConst  *Var1  0026000E 
    % 244:  		ExecWait  DoShockHit 
    % 250:  		SetConst  *Var0  00000001 
    % 260:  		SetConst  *Var1  00260005 
    % 270:  		ExecWait  DoJumpBack 
    % 27C:  		Call JumpToGoal    ( .Actor:Self  5` .False .True .False )
    % 29C:  		Call SetAnimationRate      ( .Actor:Self 00000001 *Fixed[2.0] )
    % 2B4:  		Call SetAnimation  ( .Actor:Self 00000001 00260007 )
    % 2CC:  		Call SetGoalToHome ( .Actor:Self )
    % 2DC:  		Call SetActorSpeed ( .Actor:Self *Fixed[8.0] )
    % 2F0:  		Call RunToGoal     ( .Actor:Self  0` .False )
    % 308:  		Call SetAnimationRate      ( .Actor:Self 00000001 *Fixed[1.0] )
    % 320:  		Wait  5`
    % 32C:  		Call SetAnimation  ( .Actor:Self 00000001 00260001 )
    % 344:  		Call SetActorJumpGravity   ( .Actor:Self *Fixed[1.6] )
    % 358:  		Call JumpToGoal    ( .Actor:Self  5` .False .True .False )
    % 378:  	Case  ==  .Event:ShockDeath % 26
    % 384:  		SetConst  *Var0  00000001 
    % 394:  		SetConst  *Var1  0026000E 
    % 3A4:  		ExecWait  DoShockHit 
    % 3B0:  		SetConst  *Var0  00000001 
    % 3C0:  		SetConst  *Var1  00260006 
    % 3D0:  		ExecWait  DoDeath 
    % 3DC:  		Return
    % 3E4:  	Case  ==  .Event:StarBeam % 13
    % 3F0:  	CaseOR  ==  00000017 % 17
    % 3FC:  	CaseOR  ==  .Event:Immune % 19
    % 408:  	CaseOR  ==  .Event:AirLiftFailed % 1F
    % 414:  		SetConst  *Var0  00000001 
    % 424:  		SetConst  *Var1  00260001 
    % 434:  		ExecWait  DoImmune 
    % 440:  	EndCaseGroup
    % 448:  	Case  ==  .Event:Death % 20
    % 454:  		SetConst  *Var0  00000001 
    % 464:  		SetConst  *Var1  .luigiHurt 
    % 474:  		ExecWait  DoNormalHit 
    % 480:  		Wait  10`
    % 48C:  		SetConst  *Var0  00000001 
    % 49C:  		SetConst  *Var1  .luigiDeath
    % 4AC:  		ExecWait  DoDeath 
    % 4B8:  		Return
    % 4C0:  	Case  ==  .Event:EndFirstStrike % 35
    % 4CC:  		Call SetAnimationRate  ( .Actor:Self 00000001 *Fixed[2.0] )
    % 4E4:  		Call SetAnimation  ( .Actor:Self 00000001 00260003 )
    % 4FC:  		Call SetGoalToHome ( .Actor:Self )
    % 50C:  		Call SetActorSpeed ( .Actor:Self *Fixed[4.0] )
    % 520:  		Call RunToGoal     ( .Actor:Self  0` .False )
    % 538:  		Call SetAnimationRate  ( .Actor:Self 00000001 *Fixed[1.0] )
    % 550:  		Call HPBarToHome   ( .Actor:Self )
    % 560:  	Case  ==  .Event:RecoverStatus % 31
    % 56C:  		SetConst  *Var0  00000001 
    % 57C:  		SetConst  *Var1  00260001 
    % 58C:  		ExecWait  DoRecover 
    % 598:  	Case  ==  .Event:ScareAway % 39
    % 5A4:  		SetConst  *Var0  00000001 
    % 5B4:  		SetConst  *Var1  00260003 
    % 5C4:  		SetConst  *Var2  00260005 
    % 5D4:  		ExecWait  DoScareAway 
    % 5E0:  		Return
    % 5E8:  	Case  ==  .Event:BeginAirLift % 3A
    % 5F4:  		SetConst  *Var0  00000001 
    % 604:  		SetConst  *Var1  00260003 
    % 614:  		ExecWait  DoAirLift 
    % 620:  	Case  ==  .Event:BlowAway % 16
    % 62C:  		SetConst  *Var0  00000001 
    % 63C:  		SetConst  *Var1  00260005 
    % 64C:  		ExecWait  DoBlowAway 
    % 658:  		Return
    % 660:  	Default
    % 668:  EndSwitch
    Call SetAnimation      ( .Actor:Self .luigiPart .luigiIdle )
    Call EnableIdleScript  ( .Actor:Self .True )
    Call UseIdleAnimation  ( .Actor:Self .True )
    Return
    End
}

#new:FloatTable $FloatTable_MemoryLuigi {
0.0      0.017452 0.034899 0.052336 0.069756 0.087156 0.104528 0.121869
0.139173 0.156434 0.173648 0.190809 0.207912 0.224951 0.241922 0.258819
0.275637 0.292372 0.309017 0.325568 0.34202  0.358368 0.374607 0.390731
0.406737 0.422618 0.438371 0.45399  0.469472 0.48481  0.5      0.515038
0.529919 0.544639 0.559193 0.573576 0.587785 0.601815 0.615661 0.62932
0.642788 0.656059 0.669131 0.681998 0.694658 0.707107 0.71934  0.731354
0.743145 0.75471  0.766044 0.777146 0.788011 0.798636 0.809017 0.819152
0.829038 0.838671 0.848048 0.857167 0.866025 0.87462  0.882948 0.891007
0.898794 0.906308 0.913545 0.920505 0.927184 0.93358  0.939693 0.945519
0.951057 0.956305 0.961262 0.965926 0.970296 0.97437  0.978148 0.981627
0.984808 0.987688 0.990268 0.992546 0.994522 0.996195 0.997564 0.99863
0.999391 0.999848 1.0
}

#new:Script $LuigiHammerThrow {
    Call SetTargetActor    ( .Actor:Self .Actor:Player )
    Call SetAnimation ( .Actor:Self .luigiPart .luigiRaise )
    Wait 28`
    Call SetAnimation ( .Actor:Self .luigiPart .luigiThrow )
    Wait 15`
    Call GetActorPos ( .Actor:Self *Var0 *Var1 *Var2 )
    Add *Var1 10`
    Call SetPartPos        ( .Actor:Self .hammerPart  *Var0  *Var1  *Var2 )
    Call SetPartScale  ( .Actor:Self .hammerPart *Fixed[1.0] *Fixed[1.0] *Fixed[1.0] )
    Call SetPartJumpGravity    ( .Actor:Self .hammerPart *Fixed[3.0] )
    Call SetPartFlagBits   ( .Actor:Self .hammerPart 00000001 .False )
    Call SetGoalToTarget   ( .Actor:Self )
    Call GetGoalPos        ( .Actor:Self *Var0 *Var1 *Var2 )

    Call EnemyTestTarget   ( .Actor:Self *Var3 ~Flags:DamageType:0 00000000 00000001 00000010 )
    Switch  *Var3 
        CaseOR  ==  .HitResult:Miss % 6
        CaseOR  ==  .HitResult:Lucky % 5
            Add *Var1 -32` %target mario's feet
            Call JumpPartTo        ( .Actor:Self .hammerPart *Var0 *Var1 *Var2  15` .True )
            Call SetPartFlagBits   ( .Actor:Self .hammerPart 00000001 .True )
            Wait  2`
        EndCaseGroup

        Default
            Call JumpPartTo        ( .Actor:Self .hammerPart *Var0 *Var1 *Var2  15` .True )
            Call SetPartFlagBits   ( .Actor:Self .hammerPart 00000001 .True )
            Wait  2`
            Call EnemyDamageTarget ( .Actor:Self *Var0 ~Flags:DamageType:NoContact 00000000 00000000 .hammerThrowDamage 00000020 )
    EndSwitch

    Return
    End
}

#new:Script $LuigiRunAttackFall {
    %luigi runs
    Call SetAnimation( .Actor:Self .luigiPart .luigiRun)
    Call SetGoalToTarget ( .Actor:Self )
    Call AddGoalPos ( .Actor:Self 50` 0` 0` ) %60 X units in front of mario
    Call SetActorSpeed ( .Actor:Self *Fixed[7.0] )
    Call RunToGoal ( .Actor:Self 0` .True )

    %luigi trips
    Call SetAnimation( .Actor:Self .luigiPart .luigiIdle)
    Set *Var0 0
    Call GetActorRotation ( .Actor:Self *Var4 *Var5 *Var6 )
    Call GetActorPos ( .Actor:Self *Var7 *Var8 *Var9 ) %store luigi's original Y
    Loop 11`
        Call SetActorRotation ( .Actor:Self 0` 0` *Var0 )
        Call GetActorPos ( .Actor:Self *Var1 *Var2 *Var3 )
        Add *Var2 1`
        Call SetActorPos ( .Actor:Self *Var1 *Var2 *Var3 )
        Add *Var0 9`
        Wait 1`
    EndLoop

    %luigi goes to stand up
    Wait 30`
    Call SetActorRotation ( .Actor:Self *Var4 *Var5 *Var6 )
    Call GetActorPos ( .Actor:Self *Var1 *Var2 *Var3 )
    Call SetGoalPos ( .Actor:Self *Var1 *Var8 *Var3 )

    %luigi jumps in place
    Call SetAnimation  ( .Actor:Self .luigiPart .luigiIdle )
    Call SetActorJumpGravity   ( .Actor:Self *Fixed[1.0] )
    Call JumpToGoal    ( .Actor:Self  15` .False .True .False )

    %luigi returns to home
    Wait 15`
    Call SetAnimation ( .Actor:Self .luigiPart .luigiWalk )
    Call SetGoalToHome ( .Actor:Self )
    Call SetActorSpeed ( .Actor:Self *Fixed[4.0] )
    Call RunToGoal ( .Actor:Self 0` .True )

    Return
    End
}

#new:Script $LuigiRunAttackSuccess {
    %luigi running attacking player
    Call SetAnimation( .Actor:Self .luigiPart .luigiRun)
    Call SetGoalToTarget ( .Actor:Self )
    Call SetActorSpeed ( .Actor:Self *Fixed[7.0] )
    Call RunToGoal ( .Actor:Self 0` .True )
    Call EnemyDamageTarget ( .Actor:Self *Var0 ~Flags:DamageType:NoContact 00000000 00000000 .luigiDashDamage 00000030 )


    %boo attacking player after
    Call AddGoalPos ( .Actor:Self -42` 0` 0` )
    Call SetActorSpeed ( .Actor:Self *Fixed[7.0] )
    Call RunToGoal ( .Actor:Self 0` .True )
    Call SetGoalToTarget ( .Actor:Self )
    Call EnemyDamageTarget ( .Actor:Self *Var0 ~Flags:DamageType:NoContact 00000000 00000000 .booDashDamage 00000030 )


    %run off screen
    Call AddGoalPos ( .Actor:Self -180` 0` 0` )
    Call SetActorSpeed ( .Actor:Self *Fixed[7.0] )
    Call RunToGoal ( .Actor:Self 0` .True )


    %wrap around from left of screen to right and then walk back to home position
    Wait 30`
    Call SetAnimation ( .Actor:Self .luigiPart .luigiWalk )
    Call SetActorPos ( .Actor:Self 200` 0` 0` )
    Call SetGoalToHome ( .Actor:Self )
    Call SetActorSpeed ( .Actor:Self *Fixed[4.0] )
    Call RunToGoal ( .Actor:Self 0` .True )
    Return
    End
}

#new:Script $LuigiRunAttackMain {
    Call SetTargetActor    ( .Actor:Self .Actor:Player )
    Call SetAnimation ( .Actor:Self .luigiPart .luigiScared )
    Wait 8`
    Call PlaySoundAtActor (.Actor:Self .Sound:BooSpook)
    Wait 16`
    
    Call EnemyTestTarget   ( .Actor:Self *Var1 ~Flags:DamageType:0 00000000 00000001 00000010 )

    Switch  *Var1 
    CaseOR  ==  .HitResult:Miss % 6
    CaseOR  ==  .HitResult:Lucky % 5
        ExecWait $LuigiRunAttackFall
    Default
        ExecWait $LuigiRunAttackSuccess
    EndSwitch

    Return
    End
}

#new:Script $Script_TakeTurn_MemoryLuigi {
    Call UseIdleAnimation  ( .Actor:Self .False )
    Call EnableIdleScript  ( .Actor:Self .False )
    Call RandInt ( 99` *Var0 )

    If *Var0 < 50`
        ExecWait $LuigiHammerThrow
    Else
        ExecWait $LuigiRunAttackMain
    EndIf
    
    Call EnableIdleScript  ( .Actor:Self .True )
    Call UseIdleAnimation  ( .Actor:Self .True )
    Return
    End
}