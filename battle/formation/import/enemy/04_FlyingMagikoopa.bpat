% Automatically dumped from section 04

#new:Actor $04_FlyingMagikoopa {
% stats
[Index]        96b 
[Level]        32`b 
[MaxHP]         8`b 
[Coins]         0`b 
[Flags]       00000200 
[StatusTable] $StatusTable_8021D544_04 
% ai
[PartsCount]    3`s 
[PartsTable]  $PartsTable_8021D614_04 
[Script]      $Script_Init_8021E2C0_04 
% move effectiveness
[Escape]        0`b 
[Item]          0`b 
[AirLift]       0`b 
[Hurricane]     0`b % Bow's "Spook" as well
[UpAndAway]     0`b 
[PowerBounce] 100`b 
[SpinSmash]     4`b % weight (0-4)
% ui positions
[Size]         48`b  40`b % width height
[HealthBar]     0`b   0`b % dx dy
[StatusTurn]  -10`b  20`b % dx dy
[StatusIcon]   10`b  20`b % dx dy
}

#new:Function $Function_802182A8_04 {
    0:  ADDIU     SP, SP, FFE8
    4:  SW        RA, 10 (SP)
    8:  LW        V0, C (A0)
    C:  LAH       A2, 800DC1EC
   14:  JAL       ~Func:set_variable
   18:  LW        A1, 0 (V0)
   1C:  LW        RA, 10 (SP)
   20:  LI        V0, 2
   24:  JR        RA
   28:  ADDIU     SP, SP, 18
}

#new:Function $Function_802182D4_04 {
    0:  ADDIU     SP, SP, FFD8
    4:  SW        S1, 14 (SP)
    8:  COPY      S1, A0
    C:  SW        RA, 20 (SP)
   10:  SW        S3, 1C (SP)
   14:  SW        S2, 18 (SP)
   18:  SW        S0, 10 (SP)
   1C:  LW        S0, C (S1)
   20:  LW        A1, 0 (S0)
   24:  JAL       ~Func:get_variable
   28:  ADDIU     S0, S0, 4
   2C:  LW        A1, 0 (S0)
   30:  ADDIU     S0, S0, 4
   34:  COPY      A0, S1
   38:  JAL       ~Func:get_variable
   3C:  COPY      S3, V0
   40:  LW        A1, 0 (S0)
   44:  ADDIU     S0, S0, 4
   48:  COPY      A0, S1
   4C:  JAL       ~Func:get_variable
   50:  COPY      S2, V0
   54:  COPY      A0, S1
   58:  LW        A1, 0 (S0)
   5C:  JAL       ~Func:get_variable
   60:  COPY      S0, V0
   64:  LW        A0, 148 (S1)
   68:  JAL       ~Func:get_actor
   6C:  COPY      S1, V0
   70:  COPY      V1, V0
   74:  LW        V0, 8 (V1)
   78:  LBU       V0, 24 (V0)
   7C:  LW        A0, 8 (V1)
   80:  SUBU      S3, S3, V0
   84:  SB        S3, 194 (V1)
   88:  LBU       V0, 25 (A0)
   8C:  SUBU      S2, S2, V0
   90:  SB        S2, 195 (V1)
   94:  LBU       V0, 26 (A0)
   98:  SUBU      S0, S0, V0
   9C:  SB        S0, 196 (V1)
   A0:  LBU       A0, 27 (A0)
   A4:  SUBU      S1, S1, A0
   A8:  SB        S1, 197 (V1)
   AC:  LW        RA, 20 (SP)
   B0:  LW        S3, 1C (SP)
   B4:  LW        S2, 18 (SP)
   B8:  LW        S1, 14 (SP)
   BC:  LW        S0, 10 (SP)
   C0:  LI        V0, 2
   C4:  JR        RA
   C8:  ADDIU     SP, SP, 28
}

#new:Function $Function_802183A0_04 {
    0:  ADDIU     SP, SP, FFE0
    4:  SW        S1, 14 (SP)
    8:  COPY      S1, A0
    C:  SW        RA, 18 (SP)
   10:  SW        S0, 10 (SP)
   14:  LW        S0, C (S1)
   18:  LW        A1, 0 (S0)
   1C:  JAL       ~Func:get_variable
   20:  ADDIU     S0, S0, 4
   24:  COPY      A0, S1
   28:  LW        A1, 0 (S0)
   2C:  JAL       ~Func:get_variable
   30:  COPY      S0, V0
   34:  COPY      A0, S0
   38:  JAL       ~Func:start_rumble
   3C:  COPY      A1, V0
   40:  LW        RA, 18 (SP)
   44:  LW        S1, 14 (SP)
   48:  LW        S0, 10 (SP)
   4C:  LI        V0, 2
   50:  JR        RA
   54:  ADDIU     SP, SP, 20
}

#new:DefenseTable $DefenseTable_8021D48C_04 {
.Element:Normal 00000000
.Element:End
}

#new:StatusTable $StatusTable_8021D498_04 {
.Status:Normal      0`
.Status:Default     0`
.Status:Sleep     100`
.Status:Poison     50`
.Status:Frozen      0`
.Status:Dizzy      50`
.Status:Fear        0`
.Status:Static     50`
.Status:Paralyze  100`
.Status:Shrink    100`
.Status:Stop      100`
.Status:DefaultTurnMod    0`
.Status:SleepTurnMod      0`
.Status:PoisonTurnMod     0`
.Status:FrozenTurnMod     0`
.Status:DizzyTurnMod      0`
.Status:FearTurnMod       0`
.Status:StaticTurnMod     0`
.Status:ParalyzeTurnMod   0`
.Status:ShrinkTurnMod     0`
.Status:StopTurnMod       0`
.Status:End
}

#new:StatusTable $StatusTable_8021D544_04 {
.Status:Normal      0`
.Status:Default     0`
.Status:Sleep     100`
.Status:Poison     50`
.Status:Frozen      0`
.Status:Dizzy     100`
.Status:Fear        0`
.Status:Static     50`
.Status:Paralyze  100`
.Status:Shrink    100`
.Status:Stop      100`
.Status:DefaultTurnMod    0`
.Status:SleepTurnMod      0`
.Status:PoisonTurnMod     0`
.Status:FrozenTurnMod     0`
.Status:DizzyTurnMod      1`
.Status:FearTurnMod       0`
.Status:StaticTurnMod     0`
.Status:ParalyzeTurnMod   0`
.Status:ShrinkTurnMod     0`
.Status:StopTurnMod       0`
.Status:End
}

#new:PartsTable $PartsTable_8021D614_04 {
00020001 01000000 022300FF $IdleAnimations_8021D6D0_04 $DefenseTable_8021D48C_04 00000000 00000000 FBF40000 00000000 
00800000 02000000 F62300FF $IdleAnimations_8021D71C_04 $DefenseTable_8021D48C_04 00000000 00000000 00F80000 00000000 
00020001 03000000 000000FF $IdleAnimations_8021D768_04 $DefenseTable_8021D48C_04 00000000 00000000 00000000 00000000 
}

#new:IdleAnimations $IdleAnimations_8021D6D0_04 {
.Status:Normal    00560001
.Status:Stone     00560000
.Status:Sleep     00560008
.Status:Poison    00560001
.Status:Stop      00560000
.Status:Static    00560001
.Status:Paralyze  00560000
.Status:Dizzy     00560007
.Status:Fear      00560007
.Status:End
}

#new:IdleAnimations $IdleAnimations_8021D71C_04 {
.Status:Normal    00570001
.Status:Stone     00570000
.Status:Sleep     00570008
.Status:Poison    00570001
.Status:Stop      00570000
.Status:Static    00570001
.Status:Paralyze  00570000
.Status:Dizzy     00570007
.Status:Fear      00570007
.Status:End
}

#new:IdleAnimations $IdleAnimations_8021D768_04 {
.Status:Normal    0057000A
.Status:End
}

#new:Script $Script_Idle_8021D774_04 {
    0:  Return
    8:  End
}

#new:Script $Script_8021D784_04 {
    0:  Call  GetBattleFlags    ( *Var0 )
   10:  If  *Var0  !&  00080000 
   20:  	If  *Var0  &  00000240 
   30:  		Call  SetActorVar   ( .Actor:Self 00000002 00000001 )
   48:  	EndIf
   50:  Else
   58:  	Call  $Function_802182A8_04 ( *Var0 )
   68:  	Switch  *Var0 
   74:  		CaseOR  ==  00000083 
   80:  		CaseOR  ==  00000084 
   8C:  		CaseOR  ==  00000085 
   98:  		CaseOR  ==  00000088 
   A4:  			Call  GetBattleFlags    ( *Var0 )
   B4:  			If  *Var0  &  00000240 
   C4:  				Call  SetActorVar   ( .Actor:Self 00000002 00000001 )
   DC:  			EndIf
   E4:  		EndCaseGroup
   EC:  	EndSwitch
   F4:  EndIf
   FC:  Return
  104:  End
}

#new:Script $Script_8021D890_04 {
    0:  Call  GetActorVar   ( .Actor:Self 00000002 *Var0 )
   18:  If  *Var0  ==  00000001 
   28:  	Call  SetAnimation  ( .Actor:Self 00000001 00560004 )
   40:  	Goto  0
   4C:  EndIf
   54:  Call  GetLastElement    ( *Var0 )
   64:  If  *Var0  &  00000400 
   74:  	Call  SetAnimation  ( .Actor:Self 00000001 00560004 )
   8C:  	Goto  0
   98:  EndIf
   A0:  Return
   A8:  Label  0
   B4:  Call  8027D32C  ( FFFFFF81 )
   C4:  Call  GetStatusFlags    ( .Actor:Self *Var0 )
   D8:  If  *Var0  &  ~Flags:StatusFlags:Shrink % 80000
   E8:  	Call  SetPartScale  ( .Actor:Self 00000003 *Fixed[0.4] *Fixed[0.4] *Fixed[0.4] )
  108:  EndIf
  110:  Call  SetPartFlagBits   ( .Actor:Self 00000001 00800000 .True )
  12C:  Call  SetPartFlagBits   ( .Actor:Self 00000001 00020001 .False )
  148:  Call  SetPartFlagBits   ( .Actor:Self 00000002 00020001 .True )
  164:  Call  SetPartFlagBits   ( .Actor:Self 00000002 00800000 .False )
  180:  Call  SetPartFlagBits   ( .Actor:Self 00000003 00100000 .True )
  19C:  Call  SetPartFlagBits   ( .Actor:Self 00000003 00000001 .False )
  1B8:  Call  GetActorPos       ( .Actor:Self *Var0 *Var1 *Var2 )
  1D4:  Sub   *Var2  00000001 
  1E4:  Call  SetPartPos        ( .Actor:Self 00000003 *Var0 *Var1 *Var2 )
  204:  Call  PlaySoundAtActor  ( .Actor:Self 00000301 )
  218:  Call  GetActorPos       ( .Actor:Self *Var0 *Var1 *Var2 )
  234:  Set   *Var1  00000000 
  244:  Call  SetActorJumpGravity   ( .Actor:Self *Fixed[0.8] )
  258:  Call  SetGoalPos        ( .Actor:Self *Var0 *Var1 *Var2 )
  274:  Call  JumpToGoal        ( .Actor:Self  15` .False .True .False )
  294:  Call  $Function_802183A0_04 ( 00000096 0000000A )
  2A8:  Thread
  2B0:  	Call  ShakeCam  ( .Cam:Battle 00000000  5` *Fixed[0.7] )
  2CC:  EndThread
  2D4:  Call  GetLastEvent  ( .Actor:Self *Var3 )
  2E8:  If  *Var3  ==  0000000F % F
  2F8:  	Call  SetAnimation  ( .Actor:Self 00000001 00560004 )
  310:  	Call  GetActorPos   ( .Actor:Self *Var3 *Var4 *Var5 )
  32C:  	Add   *Var4  0000000A 
  33C:  	Add   *Var5  00000005 
  34C:  	Call  PlayEffect    ( ~FX:SmokeBurst:Black *Var3 *Var4 *Var5 *Fixed[1.0] 0000000A 00000000 00000000 00000000 00000000 00000000 00000000 00000000 )
  390:  EndIf
  398:  Call  SetGoalPos    ( .Actor:Self *Var0 *Var1 *Var2 )
  3B4:  Call  JumpToGoal    ( .Actor:Self  10` .False .True .False )
  3D4:  Call  SetGoalPos    ( .Actor:Self *Var0 *Var1 *Var2 )
  3F0:  Call  JumpToGoal    ( .Actor:Self  5` .False .True .False )
  410:  Loop  00000014 
  41C:  	Call  SetPartFlagBits   ( .Actor:Self 00000003 00000001 .True )
  438:  	Wait  1`
  444:  	Call  SetPartFlagBits   ( .Actor:Self 00000003 00000001 .False )
  460:  	Wait  1`
  46C:  EndLoop
  474:  Call  SetPartFlagBits   ( .Actor:Self 00000003 00000001 .True )
  490:  Call  SetAnimation      ( .Actor:Self 00000001 00560001 )
  4A8:  Call  SetActorFlagBits  ( .Actor:Self 00000200 .False )
  4C0:  Call  BindHandleEvent   ( .Actor:Self $Script_HandleEvent_8021E6D8_04 )
  4D4:  Call  SetActorType      ( .Actor:Self 00000095 )
  4E8:  Call  SetStatusTable    ( .Actor:Self $StatusTable_8021D498_04 )
  4FC:  Call  $Function_802182D4_04 ( FFFFFFF6 00000014 0000000A 00000020 )
  518:  Call  SetActorFlagBits  ( .Actor:Self 00001000 .True )
  530:  Call  ResetAllActorSounds   ( .Actor:Self )
  540:  Call  GetIndexFromPos   ( .Actor:Self *Var0 )
  554:  Mod   *Var0  00000004 
  564:  Call  SetGoalToIndex    ( .Actor:Self *Var0 )
  578:  Call  SetActorSpeed     ( .Actor:Self *Fixed[4.0] )
  58C:  Call  RunToGoal ( .Actor:Self  0` .False )
  5A4:  Call  GetGoalPos        ( .Actor:Self *Var0 *Var1 *Var2 )
  5C0:  Call  ForceHomePos      ( .Actor:Self *Var0 *Var1 *Var2 )
  5DC:  Call  HPBarToHome       ( .Actor:Self )
  5EC:  Return
  5F4:  End
}

#new:Script $Script_RunAway_04 {
    0:  Call  UseIdleAnimation  ( .Actor:Self .False )
   14:  Call  EnableIdleScript  ( .Actor:Self 00000000 )
   28:  Call  8027D32C  ( FFFFFF81 )
   38:  Call  GetLastEvent      ( .Actor:Self *Var0 )
   4C:  If  *Var0  !=  .Event:ScareAway % 39
   5C:  	Call  UseBattleCamPreset    ( 0000000E )
   6C:  	Call  BattleCamTargetActor  ( .Actor:Self )
   7C:  	Call  MoveBattleCamOver     (  15` )
   8C:  	Wait  15`
   98:  	Call  UseBattleCamPreset    ( 00000001 )
   A8:  EndIf
   B0:  Call  SetActorSpeed ( .Actor:Self *Fixed[1.0] )
   C4:  Call  GetActorPos   ( .Actor:Self *Var0 *Var1 *Var2 )
   E0:  Add   *Var0  00000014 
   F0:  Call  SetGoalPos    ( .Actor:Self *Var0 *Var1 *Var2 )
  10C:  Call  RunToGoal     ( .Actor:Self  0` .False )
  124:  Wait  10`
  130:  Call  SetActorYaw   ( .Actor:Self  180` )
  144:  Call  EnableActorBlur       ( .Actor:Self 00000001 )
  158:  Call  SetActorSpeed ( .Actor:Self *Fixed[10.0] )
  16C:  Call  GetActorPos   ( .Actor:Self *Var0 *Var1 *Var2 )
  188:  Add   *Var0  000000C8 
  198:  Call  SetGoalPos    ( .Actor:Self *Var0 *Var1 *Var2 )
  1B4:  Call  RunToGoal     ( .Actor:Self  0` .False )
  1CC:  Call  YieldTurn ( )
  1D8:  Call  UseBattleCamPreset    ( 00000002 )
  1E8:  ExecWait  ForceNextTarget 
  1F4:  Call  8027D32C      ( FFFFFF81 )
  204:  Call  RemoveActor   ( .Actor:Self )
  214:  Return
  21C:  End
}

#new:Script $Script_Init_8021E2C0_04 {
    0:  Call  BindIdle      ( .Actor:Self $Script_Idle_8021D774_04 )
   14:  Call  BindTakeTurn  ( .Actor:Self $Script_TakeTurn_80223B24_04 )
   28:  Call  BindHandleEvent   ( .Actor:Self $Script_HandleEvent_8021EDF0_04 )
   3C:  Call  GetBattleVar  ( 00000002 *Var0 )
   50:  If  *Var0  ==  00000000 
   60:  	Call  SetBattleVar  ( 00000002 FFFFFFFF )
   74:  EndIf
   7C:  Call  SetActorVar   ( .Actor:Self 00000000 00000000 )
   94:  Call  SetActorVar   ( .Actor:Self 00000001 00000000 )
   AC:  Call  SetActorVar   ( .Actor:Self 00000002 00000000 )
   C4:  Call  SetActorVar   ( .Actor:Self 00000003 00000000 )
   DC:  Call  SetActorVar   ( .Actor:Self 00000004 00000000 )
   F4:  Call  SetActorVar   ( .Actor:Self 00000005 00000000 )
  10C:  Call  SetActorVar   ( .Actor:Self 00000006 00000000 )
  124:  Call  SetActorVar   ( .Actor:Self 00000007 00000000 )
  13C:  Call  SetActorVar   ( .Actor:Self 00000008 00000000 )
  154:  Call  SetActorVar   ( .Actor:Self 00000009 FFFFFFFF )
  16C:  Call  SetActorVar   ( .Actor:Self 0000000A 00000000 )
  184:  Call  SetActorVar   ( .Actor:Self 0000000B FFFFFFFF )
  19C:  Return
  1A4:  End
}

#new:Script $Script_8021E46C_04 {
    0:  Call  GetActorVar   ( .Actor:Self 00000001 *Var0 )
   18:  If  *Var0  ==  00000001 
   28:  	Return
   30:  EndIf
   38:  Call  GetActorVar   ( .Actor:Self 00000009 *Var0 )
   50:  Call  ActorExists   ( *Var0 *Var1 )
   64:  If  *Var1  ==  .False 
   74:  	Return
   7C:  EndIf
   84:  Call  SetActorVar       ( .Actor:Self 0000000A 00000000 )
   9C:  Call  GetLastElement    ( *VarA )
   AC:  If  *VarA  &  20000000 
   BC:  	Label  0
   C8:  	Call  GetBattleFlags    ( *VarA )
   D8:  	If  *VarA  &  00000100 
   E8:  		Wait  1`
   F4:  		Goto  0
  100:  	EndIf
  108:  EndIf
  110:  Call  GetActorVar   ( .Actor:Self 00000009 *Var0 )
  128:  Call  SetActorVar   ( .Actor:Self 00000009 FFFFFFFF )
  140:  Call  GetActorFlags ( .Actor:Self *VarA )
  154:  If  *VarA  &  00000200 
  164:  	Call  SetPartEventBits  ( .Actor:Self 00000002 00400000 .False )
  180:  Else
  188:  	Call  SetPartEventBits  ( .Actor:Self 00000001 00400000 .False )
  1A4:  EndIf
  1AC:  Call  GetActorPos   ( *Var0 *Var1 *Var2 *Var3 )
  1C8:  Call  RemoveActor   ( *Var0 )
  1D8:  Thread
  1E0:  	Add   *Var3  00000002 
  1F0:  	Loop  00000002 
  1FC:  		Call  PlayEffect    ( ~FX:BigSmokePuff *Var1 *Var2 *Var3 00000000 00000000 00000000 00000000 00000000 00000000 00000000 00000000 00000000 00000000 )
  240:  		Wait  2`
  24C:  	EndLoop
  254:  EndThread
  25C:  Return
  264:  End
}

#new:Script $Script_HandleEvent_8021E6D8_04 {
    0:  Call  UseIdleAnimation  ( .Actor:Self .False )
   14:  Call  EnableIdleScript  ( .Actor:Self 00000000 )
   28:  Call  SetPartAlpha      ( .Actor:Self 00000001 000000FF )
   40:  Call  GetLastEvent      ( .Actor:Self *Var0 )
   54:  Switch  *Var0 
   60:  	Case  ==  .Event:HitCombo % 9
   6C:  		Call  GetActorVar   ( .Actor:Self 00000000 *Var0 )
   84:  		ConstOR  *Var0 00000001 
   94:  		Call  SetActorVar   ( .Actor:Self 00000000 *Var0 )
   AC:  		SetConst  *Var0  00000001 
   BC:  		SetConst  *Var1  00560004 
   CC:  		ExecWait  DoNormalHit 
   D8:  	CaseOR  ==  .Event:Hit % A
   E4:  	CaseOR  ==  .Event:UpAndAway % 3D
   F0:  		SetConst  *Var0  00000001 
  100:  		SetConst  *Var1  00560004 
  110:  		ExecWait  DoNormalHit 
  11C:  		ExecWait  $Script_8021E46C_04 
  128:  	EndCaseGroup
  130:  	Case  ==  .Event:BurnHit % E
  13C:  		SetConst  *Var0  00000001 
  14C:  		SetConst  *Var1  00560005 
  15C:  		SetConst  *Var2  00560006 
  16C:  		ExecWait  DoBurnHit 
  178:  		ExecWait  $Script_8021E46C_04 
  184:  	Case  ==  .Event:BurnDeath % 24
  190:  		SetConst  *Var0  00000001 
  1A0:  		SetConst  *Var1  00560005 
  1B0:  		SetConst  *Var2  00560006 
  1C0:  		ExecWait  DoBurnHit 
  1CC:  		ExecWait  $Script_8021E46C_04 
  1D8:  		SetConst  *Var0  00000001 
  1E8:  		SetConst  *Var1  00560006 
  1F8:  		ExecWait  DoDeath 
  204:  		Return
  20C:  	Case  ==  .Event:SpinSmashHit % B
  218:  		SetConst  *Var0  00000001 
  228:  		SetConst  *Var1  00560004 
  238:  		ExecWait  DoSpinSmashHit 
  244:  		ExecWait  $Script_8021E46C_04 
  250:  	Case  ==  .Event:SpinSmashDeath % 21
  25C:  		SetConst  *Var0  00000001 
  26C:  		SetConst  *Var1  00560004 
  27C:  		ExecWait  DoSpinSmashHit 
  288:  		ExecWait  $Script_8021E46C_04 
  294:  		SetConst  *Var0  00000001 
  2A4:  		SetConst  *Var1  00560004 
  2B4:  		ExecWait  DoDeath 
  2C0:  		Return
  2C8:  	Case  ==  00000017 % 17
  2D4:  		SetConst  *Var0  00000001 
  2E4:  		SetConst  *Var1  00560001 
  2F4:  		ExecWait  DoImmune 
  300:  	Case  ==  .Event:Immune % 19
  30C:  		SetConst  *Var0  00000001 
  31C:  		SetConst  *Var1  00560001 
  32C:  		ExecWait  DoImmune 
  338:  		Call  GetActorVar   ( .Actor:Self 00000000 *Var0 )
  350:  		If  *Var0  &  00000001 
  360:  			ExecWait  $Script_8021E46C_04 
  36C:  			Return
  374:  		EndIf
  37C:  		Call  GetStatusFlags    ( .Actor:Self *Var0 )
  390:  		If  *Var0  !=  ~Flags:StatusFlags:0 % 0
  3A0:  			ExecWait  $Script_8021E46C_04 
  3AC:  		EndIf
  3B4:  	Case  ==  .Event:Death % 20
  3C0:  		SetConst  *Var0  00000001 
  3D0:  		SetConst  *Var1  00560004 
  3E0:  		ExecWait  DoNormalHit 
  3EC:  		ExecWait  $Script_8021E46C_04 
  3F8:  		Wait  10`
  404:  		SetConst  *Var0  00000001 
  414:  		SetConst  *Var1  00560004 
  424:  		ExecWait  DoDeath 
  430:  		Return
  438:  	Case  ==  .Event:RecoverStatus % 31
  444:  		SetConst  *Var0  00000001 
  454:  		SetConst  *Var1  00560001 
  464:  		ExecWait  DoRecover 
  470:  	Case  ==  .Event:ScareAway % 39
  47C:  		ExecWait  $Script_8021E46C_04 
  488:  		Call  SetAnimation  ( .Actor:Self 00000001 00560004 )
  4A0:  		Call  SetActorJumpGravity   ( .Actor:Self *Fixed[1.5] )
  4B4:  		Call  GetActorPos   ( .Actor:Self *Var0 *Var1 *Var2 )
  4D0:  		Call  SetGoalPos    ( .Actor:Self *Var0 *Var1 *Var2 )
  4EC:  		Call  JumpToGoal    ( .Actor:Self  15` .False .True .False )
  50C:  		Wait  15`
  518:  		Call  SetAnimation  ( .Actor:Self 00000001 00560002 )
  530:  		ExecWait  $Script_RunAway_04 
  53C:  		Return
  544:  	Case  ==  .Event:BeginAirLift % 3A
  550:  		SetConst  *Var0  00000001 
  560:  		SetConst  *Var1  00560002 
  570:  		ExecWait  DoAirLift 
  57C:  	Case  ==  .Event:BlowAway % 16
  588:  		ExecWait  $Script_8021E46C_04 
  594:  		Call  GetStatusFlags    ( .Actor:Self *Var0 )
  5A8:  		If  *Var0  !&  ~Flags:StatusFlags:Sleep|Frozen|Fear|Paralyze|Dizzy|Stone|Stop % 35D000
  5B8:  			If  *Var0  &  ~Flags:StatusFlags:Shrink % 80000
  5C8:  				Call  SetPartDispOffset ( .Actor:Self 00000001 00000000 00000002 00000000 )
  5E8:  			Else
  5F0:  				Call  SetPartDispOffset ( .Actor:Self 00000001 FFFFFFFC 00000005 00000000 )
  610:  			EndIf
  618:  		EndIf
  620:  		SetConst  *Var0  00000001 
  630:  		SetConst  *Var1  00560004 
  640:  		ExecWait  DoBlowAway 
  64C:  		Return
  654:  	Case  ==  .Event:AirLiftFailed % 1F
  660:  		SetConst  *Var0  00000001 
  670:  		SetConst  *Var1  00560001 
  680:  		ExecWait  DoImmune 
  68C:  	Case  ==  .Event:StarBeam % 13
  698:  		SetConst  *Var0  00000001 
  6A8:  		SetConst  *Var1  00560004 
  6B8:  		ExecWait  DoNormalHit 
  6C4:  		ExecWait  $Script_8021E46C_04 
  6D0:  	Default
  6D8:  EndSwitch
  6E0:  Call  EnableIdleScript  ( .Actor:Self 00000001 )
  6F4:  Call  UseIdleAnimation  ( .Actor:Self .True )
  708:  Return
  710:  End
}

#new:Script $Script_HandleEvent_8021EDF0_04 {
    0:  Call  UseIdleAnimation  ( .Actor:Self .False )
   14:  Call  EnableIdleScript  ( .Actor:Self 00000000 )
   28:  Call  SetPartAlpha      ( .Actor:Self 00000002 000000FF )
   40:  Call  GetLastEvent      ( .Actor:Self *Var0 )
   54:  Switch  *Var0 
   60:  	Case  ==  .Event:HitCombo % 9
   6C:  		Call  GetActorVar   ( .Actor:Self 00000000 *Var0 )
   84:  		ConstOR  *Var0 00000001 
   94:  		Call  SetActorVar   ( .Actor:Self 00000000 *Var0 )
   AC:  		ExecWait  $Script_8021D784_04 
   B8:  		SetConst  *Var0  00000002 
   C8:  		SetConst  *Var1  00570004 
   D8:  		ExecWait  DoNormalHit 
   E4:  	CaseOR  ==  .Event:Hit % A
   F0:  	CaseOR  ==  .Event:FallTrigger % C
   FC:  		ExecWait  $Script_8021D784_04 
  108:  		SetConst  *Var0  00000002 
  118:  		SetConst  *Var1  00570004 
  128:  		ExecWait  DoNormalHit 
  134:  		ExecWait  $Script_8021E46C_04 
  140:  		ExecWait  $Script_8021D890_04 
  14C:  	EndCaseGroup
  154:  	Case  ==  .Event:UpAndAway % 3D
  160:  		SetConst  *Var0  00000002 
  170:  		SetConst  *Var1  00570004 
  180:  		ExecWait  DoNormalHit 
  18C:  		ExecWait  $Script_8021E46C_04 
  198:  	CaseOR  ==  .Event:BurnHit % E
  1A4:  	CaseOR  ==  0000000F % F
  1B0:  		ExecWait  $Script_8021D784_04 
  1BC:  		SetConst  *Var0  00000002 
  1CC:  		SetConst  *Var1  00570005 
  1DC:  		SetConst  *Var2  00570006 
  1EC:  		ExecWait  DoBurnHit 
  1F8:  		ExecWait  $Script_8021E46C_04 
  204:  		ExecWait  $Script_8021D890_04 
  210:  	EndCaseGroup
  218:  	Case  ==  .Event:BurnDeath % 24
  224:  		SetConst  *Var0  00000002 
  234:  		SetConst  *Var1  00570005 
  244:  		SetConst  *Var2  00570006 
  254:  		ExecWait  DoBurnHit 
  260:  		ExecWait  $Script_8021E46C_04 
  26C:  		SetConst  *Var0  00000002 
  27C:  		SetConst  *Var1  00570006 
  28C:  		ExecWait  DoDeath 
  298:  		Return
  2A0:  	Case  ==  .Event:SpinSmashHit % B
  2AC:  		SetConst  *Var0  00000002 
  2BC:  		SetConst  *Var1  00570004 
  2CC:  		ExecWait  DoSpinSmashHit 
  2D8:  		ExecWait  $Script_8021E46C_04 
  2E4:  	Case  ==  .Event:SpinSmashDeath % 21
  2F0:  		SetConst  *Var0  00000002 
  300:  		SetConst  *Var1  00570004 
  310:  		ExecWait  DoSpinSmashHit 
  31C:  		ExecWait  $Script_8021E46C_04 
  328:  		SetConst  *Var0  00000002 
  338:  		SetConst  *Var1  00570004 
  348:  		ExecWait  DoDeath 
  354:  		Return
  35C:  	Case  ==  00000017 % 17
  368:  		SetConst  *Var0  00000002 
  378:  		SetConst  *Var1  00570001 
  388:  		ExecWait  DoImmune 
  394:  	Case  ==  .Event:Immune % 19
  3A0:  		SetConst  *Var0  00000002 
  3B0:  		SetConst  *Var1  00570001 
  3C0:  		ExecWait  DoImmune 
  3CC:  		Call  GetActorVar   ( .Actor:Self 00000000 *Var0 )
  3E4:  		If  *Var0  &  00000001 
  3F4:  			ExecWait  $Script_8021E46C_04 
  400:  			Return
  408:  		EndIf
  410:  		Call  GetStatusFlags    ( .Actor:Self *Var0 )
  424:  		If  *Var0  !=  ~Flags:StatusFlags:0 % 0
  434:  			ExecWait  $Script_8021E46C_04 
  440:  		EndIf
  448:  	Case  ==  .Event:Death % 20
  454:  		SetConst  *Var0  00000002 
  464:  		SetConst  *Var1  00570004 
  474:  		ExecWait  DoNormalHit 
  480:  		ExecWait  $Script_8021E46C_04 
  48C:  		Wait  10`
  498:  		SetConst  *Var0  00000002 
  4A8:  		SetConst  *Var1  00570004 
  4B8:  		ExecWait  DoDeath 
  4C4:  		Return
  4CC:  	Case  ==  .Event:BeginFirstStrike % 38
  4D8:  		Call  SetActorPos       ( .Actor:Self  20`  0`  0` )
  4F4:  		Call  HPBarToCurrent    ( .Actor:Self )
  504:  	Case  ==  .Event:EndFirstStrike % 35
  510:  		Call  SetAnimation  ( .Actor:Self 00000002 00570001 )
  528:  		Call  SetGoalToHome ( .Actor:Self )
  538:  		Call  SetActorSpeed ( .Actor:Self *Fixed[4.0] )
  54C:  		Call  FlyToGoal     ( .Actor:Self  0`  1` .Easing:Linear )
  568:  		Call  SetAnimation  ( .Actor:Self 00000002 00570001 )
  580:  		Call  HPBarToHome   ( .Actor:Self )
  590:  	Case  ==  .Event:RecoverStatus % 31
  59C:  		SetConst  *Var0  00000002 
  5AC:  		SetConst  *Var1  00570001 
  5BC:  		ExecWait  DoRecover 
  5C8:  	Case  ==  .Event:ScareAway % 39
  5D4:  		ExecWait  $Script_8021E46C_04 
  5E0:  		Call  SetAnimation  ( .Actor:Self 00000002 00570004 )
  5F8:  		Call  SetActorJumpGravity   ( .Actor:Self *Fixed[1.5] )
  60C:  		Call  GetActorPos   ( .Actor:Self *Var0 *Var1 *Var2 )
  628:  		Call  SetGoalPos    ( .Actor:Self *Var0 *Var1 *Var2 )
  644:  		Call  JumpToGoal    ( .Actor:Self  15` .False .True .False )
  664:  		Wait  15`
  670:  		Call  SetAnimation  ( .Actor:Self 00000002 00570002 )
  688:  		ExecWait  $Script_RunAway_04 
  694:  		Return
  69C:  	Case  ==  .Event:BeginAirLift % 3A
  6A8:  		SetConst  *Var0  00000002 
  6B8:  		SetConst  *Var1  00570002 
  6C8:  		ExecWait  DoAirLift 
  6D4:  	Case  ==  .Event:BlowAway % 16
  6E0:  		ExecWait  $Script_8021E46C_04 
  6EC:  		Call  GetStatusFlags    ( .Actor:Self *Var0 )
  700:  		If  *Var0  !&  ~Flags:StatusFlags:Sleep|Frozen|Fear|Paralyze|Dizzy|Stone|Stop % 35D000
  710:  			If  *Var0  &  ~Flags:StatusFlags:Shrink % 80000
  720:  				Call  SetPartDispOffset ( .Actor:Self 00000002 FFFFFFFD 00000000 00000000 )
  740:  			Else
  748:  				Call  SetPartDispOffset ( .Actor:Self 00000002 FFFFFFF1 00000000 00000000 )
  768:  			EndIf
  770:  		EndIf
  778:  		SetConst  *Var0  00000002 
  788:  		SetConst  *Var1  00570004 
  798:  		ExecWait  DoBlowAway 
  7A4:  		Return
  7AC:  	Case  ==  .Event:AirLiftFailed % 1F
  7B8:  		SetConst  *Var0  00000002 
  7C8:  		SetConst  *Var1  00570001 
  7D8:  		ExecWait  DoImmune 
  7E4:  	Case  ==  .Event:StarBeam % 13
  7F0:  		SetConst  *Var0  00000002 
  800:  		SetConst  *Var1  00570004 
  810:  		ExecWait  DoNormalHit 
  81C:  		ExecWait  $Script_8021E46C_04 
  828:  	Default
  830:  EndSwitch
  838:  Call  EnableIdleScript  ( .Actor:Self 00000001 )
  84C:  Call  UseIdleAnimation  ( .Actor:Self .True )
  860:  Return
  868:  End
}

#new:Script $Script_TakeTurn_80223B24_04 {
    0:  Call  GetBattlePhase    ( *Var0 )
   10:  If  *Var0  ==  00000001 
   20:  	ExecWait  $Script_ShapeSpell_04 
   2C:  	Return
   34:  EndIf
   3C:  Call  GetActorVar   ( .Actor:Self 0000000A *Var0 )
   54:  If  *Var0  ==  00000001 
   64:  	Goto  14
   70:  EndIf
   78:  Set   *VarA  00000000 
   88:  Call  EnemyCreateTargetList ( 00008002 )
   98:  Call  InitTargetIterator ( )
   A4:  Label  0
   B0:  Set   *Flag[00]  .False 
   C0:  Call  GetOwnerTarget        ( *Var0 *Var1 )
   D4:  Call  GetOriginalActorType  ( *Var0 *Var1 )
   E8:  If  *Var1  ==  00000047 
   F8:  	Call  GetActorVar   ( *Var0 00000008 *Var1 )
  110:  	If  *Var1  ==  00000001 
  120:  		Set   *Flag[00]  .True 
  130:  	EndIf
  138:  EndIf
  140:  Call  GetActorHP    ( *Var0 *Var2 )
  154:  Call  GetEnemyMaxHP ( *Var0 *Var3 )
  168:  MulF  *Var2  *Fixed[100.0] 
  178:  DivF  *Var2  *Var3 
  188:  If  *Flag[00]  ==  .False 
  198:  	If  *Var2  <=  00000000 
  1A8:  		Call  RandInt   ( 00000063 *Var4 )
  1BC:  		Add   *Var4  00000001 
  1CC:  		If  *Var4  <  00000000 
  1DC:  			Add   *VarA  00000001 
  1EC:  			Set   *VarB  *Var0 
  1FC:  		EndIf
  204:  	EndIf
  20C:  EndIf
  214:  Call  ChooseNextTarget  ( .Iter:Next *Var0 )
  228:  If  *Var0  !=  FFFFFFFF 
  238:  	Goto  0
  244:  EndIf
  24C:  If  *VarA  >  00000000 
  25C:  	Goto  A
  268:  EndIf
  270:  Set   *VarA  00000000 
  280:  Call  EnemyCreateTargetList ( 00008002 )
  290:  Call  InitTargetIterator ( )
  29C:  Label  1
  2A8:  Set   *Flag[00]  .False 
  2B8:  Call  GetOwnerTarget        ( *Var0 *Var1 )
  2CC:  Call  GetOriginalActorType  ( *Var0 *Var1 )
  2E0:  If  *Var1  ==  00000047 
  2F0:  	Call  GetActorVar   ( *Var0 00000008 *Var1 )
  308:  	If  *Var1  ==  00000001 
  318:  		Set   *Flag[00]  .True 
  328:  	EndIf
  330:  EndIf
  338:  Call  GetActorHP    ( *Var0 *Var2 )
  34C:  Call  GetEnemyMaxHP ( *Var0 *Var3 )
  360:  MulF  *Var2  *Fixed[100.0] 
  370:  DivF  *Var2  *Var3 
  380:  If  *Flag[00]  ==  .False 
  390:  	If  *Var2  <=  00000000 
  3A0:  		Call  RandInt   ( 00000063 *Var4 )
  3B4:  		Add   *Var4  00000001 
  3C4:  		If  *Var4  <  00000000 
  3D4:  			Add   *VarA  00000001 
  3E4:  			Set   *VarB  *Var0 
  3F4:  		EndIf
  3FC:  	EndIf
  404:  EndIf
  40C:  Call  ChooseNextTarget  ( .Iter:Next *Var0 )
  420:  If  *Var0  !=  FFFFFFFF 
  430:  	Goto  1
  43C:  EndIf
  444:  If  *VarA  >  00000000 
  454:  	Goto  A
  460:  EndIf
  468:  Set   *VarA  00000000 
  478:  Call  EnemyCreateTargetList ( 00008002 )
  488:  Call  InitTargetIterator ( )
  494:  Label  2
  4A0:  Set   *Flag[00]  .False 
  4B0:  Call  GetOwnerTarget        ( *Var0 *Var1 )
  4C4:  Call  GetOriginalActorType  ( *Var0 *Var1 )
  4D8:  If  *Var1  ==  00000047 
  4E8:  	Call  GetActorVar   ( *Var0 00000008 *Var1 )
  500:  	If  *Var1  ==  00000001 
  510:  		Set   *Flag[00]  .True 
  520:  	EndIf
  528:  EndIf
  530:  Call  GetActorHP    ( *Var0 *Var2 )
  544:  Call  GetEnemyMaxHP ( *Var0 *Var3 )
  558:  MulF  *Var2  *Fixed[100.0] 
  568:  DivF  *Var2  *Var3 
  578:  If  *Flag[00]  ==  .False 
  588:  	If  *Var2  <=  00000000 
  598:  		Call  RandInt   ( 00000063 *Var4 )
  5AC:  		Add   *Var4  00000001 
  5BC:  		If  *Var4  <  00000000 
  5CC:  			Add   *VarA  00000001 
  5DC:  			Set   *VarB  *Var0 
  5EC:  		EndIf
  5F4:  	EndIf
  5FC:  EndIf
  604:  Call  ChooseNextTarget  ( .Iter:Next *Var0 )
  618:  If  *Var0  !=  FFFFFFFF 
  628:  	Goto  2
  634:  EndIf
  63C:  If  *VarA  >  00000000 
  64C:  	Goto  A
  658:  EndIf
  660:  Goto  14
  66C:  Label  A
  678:  Call  CountPlayerTargets    ( .Actor:Self 00008002 *Var0 )
  690:  If  *Var0  ==  00000001 
  6A0:  	ExecWait  $Script_RunAway_04 
  6AC:  	Return
  6B4:  EndIf
  6BC:  If  *VarA  ==  00000001 
  6CC:  	Call  GetActorVar   ( .Actor:Self 00000004 *Var0 )
  6E4:  	If  *Var0  <  00000000 
  6F4:  		Call  RandInt   ( 000003E8 *Var0 )
  708:  		If  *Var0  <  00000000 
  718:  			ExecWait  $Script_HealOne_04 
  724:  			Return
  72C:  		EndIf
  734:  	Else
  73C:  		Call  GetActorVar   ( .Actor:Self 00000003 *Var0 )
  754:  		If  *Var0  <  00000000 
  764:  			Call  RandInt   ( 000003E8 *Var0 )
  778:  			If  *Var0  <  00000000 
  788:  				ExecWait  $Script_HealAll_04 
  794:  				Return
  79C:  			EndIf
  7A4:  		EndIf
  7AC:  	EndIf
  7B4:  Else
  7BC:  	Call  GetActorVar   ( .Actor:Self 00000003 *Var0 )
  7D4:  	If  *Var0  <  00000000 
  7E4:  		Call  RandInt   ( 000003E8 *Var0 )
  7F8:  		If  *Var0  <  00000000 
  808:  			ExecWait  $Script_HealAll_04 
  814:  			Return
  81C:  		EndIf
  824:  	Else
  82C:  		Call  GetActorVar   ( .Actor:Self 00000004 *Var0 )
  844:  		If  *Var0  <  00000000 
  854:  			SetF  *Var9  *Fixed[100.0] 
  864:  			Call  EnemyCreateTargetList ( 00008002 )
  874:  			Call  InitTargetIterator ( )
  880:  			Label  B
  88C:  			Set   *Flag[00]  .False 
  89C:  			Call  GetOwnerTarget        ( *Var0 *Var1 )
  8B0:  			Call  GetOriginalActorType  ( *Var0 *Var1 )
  8C4:  			If  *Var1  ==  00000047 
  8D4:  				Call  GetActorVar   ( *Var0 00000008 *Var1 )
  8EC:  				If  *Var1  ==  00000001 
  8FC:  					Set   *Flag[00]  .True 
  90C:  				EndIf
  914:  			EndIf
  91C:  			Call  GetActorHP    ( *Var0 *Var2 )
  930:  			Call  GetEnemyMaxHP ( *Var0 *Var3 )
  944:  			MulF  *Var2  *Fixed[100.0] 
  954:  			DivF  *Var2  *Var3 
  964:  			If  *Flag[00]  ==  .False 
  974:  				If  *Var2  <=  *Var9 
  984:  					SetF  *Var9  *Var2 
  994:  					Set   *VarB  *Var0 
  9A4:  				EndIf
  9AC:  			EndIf
  9B4:  			Call  ChooseNextTarget  ( .Iter:Next *Var0 )
  9C8:  			If  *Var0  !=  FFFFFFFF 
  9D8:  				Goto  B
  9E4:  			EndIf
  9EC:  			Call  RandInt   ( 000003E8 *Var0 )
  A00:  			If  *Var0  <  00000000 
  A10:  				ExecWait  $Script_HealOne_04 
  A1C:  				Return
  A24:  			EndIf
  A2C:  		EndIf
  A34:  	EndIf
  A3C:  EndIf
  A44:  Label  14
  A50:  Set   *VarA  00000064 
  A60:  Set   *VarB  00000000 
  A70:  Set   *VarC  00000000 
  A80:  Set   *VarD  00000000 
  A90:  Set   *VarE  00000000 
  AA0:  Set   *VarF  00000000 
  AB0:  Call  GetActorVar   ( .Actor:Self 0000000A *Var0 )
  AC8:  If  *Var0  ==  00000001 
  AD8:  	Set   *VarA  00000064 
  AE8:  	Set   *VarB  00000000 
  AF8:  	Set   *VarC  00000000 
  B08:  	Set   *VarD  00000000 
  B18:  	Set   *VarE  00000000 
  B28:  	Set   *VarF  00000000 
  B38:  	Goto  7B
  B44:  Else
  B4C:  	ExecWait  $Script_80221144_04 
  B58:  	If  *Var0  ==  FFFFFFFF 
  B68:  		Set   *VarB  00000000 
  B78:  	EndIf
  B80:  EndIf
  B88:  Call  GetStatusFlags    ( .Actor:Self *Var0 )
  B9C:  If  *Var0  !=  ~Flags:StatusFlags:0 % 0
  BAC:  	Set   *VarB  00000000 
  BBC:  EndIf
  BC4:  Call  GetActorVar   ( .Actor:Self 0000000B *Var0 )
  BDC:  Switch  *Var0 
  BE8:  	Case  ==  00000004 
  BF4:  		Call  GetActorVar   ( .Actor:Self 00000005 *Var1 )
  C0C:  		If  *Var1  <  00000000 
  C1C:  			Call  RandInt   ( 00000063 *Var0 )
  C30:  			Add   *Var0  00000001 
  C40:  			If  *Var0  <=  00000000 
  C50:  				Set   *VarA  00000000 
  C60:  				Set   *VarB  00000000 
  C70:  				Set   *VarC  00000064 
  C80:  				Set   *VarD  00000000 
  C90:  				Set   *VarE  00000000 
  CA0:  				Set   *VarF  00000000 
  CB0:  			EndIf
  CB8:  		EndIf
  CC0:  	Case  ==  00000005 
  CCC:  		Call  GetActorVar   ( .Actor:Self 00000006 *Var1 )
  CE4:  		If  *Var1  <  00000000 
  CF4:  			Call  RandInt   ( 00000063 *Var0 )
  D08:  			Add   *Var0  00000001 
  D18:  			If  *Var0  <=  00000000 
  D28:  				Set   *VarA  00000000 
  D38:  				Set   *VarB  00000000 
  D48:  				Set   *VarC  00000000 
  D58:  				Set   *VarD  00000064 
  D68:  				Set   *VarE  00000000 
  D78:  				Set   *VarF  00000000 
  D88:  			EndIf
  D90:  		EndIf
  D98:  EndSwitch
  DA0:  Call  GetActorVar   ( .Actor:Self 00000005 *Var0 )
  DB8:  If  *Var0  >=  00000000 
  DC8:  	Set   *VarC  00000000 
  DD8:  EndIf
  DE0:  Call  GetActorVar   ( .Actor:Self 00000006 *Var0 )
  DF8:  If  *Var0  >=  00000000 
  E08:  	Set   *VarD  00000000 
  E18:  EndIf
  E20:  Call  GetActorVar   ( .Actor:Self 00000007 *Var0 )
  E38:  If  *Var0  >=  00000000 
  E48:  	Set   *VarE  00000000 
  E58:  EndIf
  E60:  Call  GetActorVar   ( .Actor:Self 00000008 *Var0 )
  E78:  If  *Var0  >=  00000000 
  E88:  	Set   *VarF  00000000 
  E98:  EndIf
  EA0:  Label  7B
  EAC:  Set   *Var9  00000000 
  EBC:  Add   *Var9  *VarA 
  ECC:  Add   *Var9  *VarB 
  EDC:  Add   *Var9  *VarC 
  EEC:  Add   *Var9  *VarD 
  EFC:  Add   *Var9  *VarE 
  F0C:  Add   *Var9  *VarF 
  F1C:  Sub   *Var9  00000001 
  F2C:  Call  RandInt   ( *Var9 *Var0 )
  F40:  Add   *Var0  00000001 
  F50:  If  *Var0  <=  *VarA 
  F60:  	ExecWait  $Script_ShapeSpell_04 
  F6C:  	Return
  F74:  EndIf
  F7C:  Add   *VarA  *VarB 
  F8C:  If  *Var0  <=  *VarA 
  F9C:  	ExecWait  $Script_MakeCopy_04 
  FA8:  	Return
  FB0:  EndIf
  FB8:  Add   *VarA  *VarC 
  FC8:  If  *Var0  <=  *VarA 
  FD8:  	ExecWait  $Script_BoostAttack_04 
  FE4:  	Return
  FEC:  EndIf
  FF4:  Add   *VarA  *VarD 
 1004:  If  *Var0  <=  *VarA 
 1014:  	ExecWait  $Script_BoostDefense_04 
 1020:  	Return
 1028:  EndIf
 1030:  Add   *VarA  *VarE 
 1040:  If  *Var0  <=  *VarA 
 1050:  	ExecWait  $Script_Electrify_04 
 105C:  	Return
 1064:  EndIf
 106C:  ExecWait  $Script_Vanish_04 
 1078:  Return
 1080:  End
}

