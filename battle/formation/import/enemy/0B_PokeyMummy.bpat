% Automatically dumped from section 0B

#new:Actor $0B_PokeyMummy {
% stats
[Index]        15b 
[Level]        10`b 
[MaxHP]         4`b 
[Coins]         1`b 
[Flags]       00000000 
[StatusTable] $StatusTable_80218C1C_0B 
% ai
[PartsCount]    6`s 
[PartsTable]  $PartsTable_80218CC8_0B 
[Script]      $Script_Init_80218EC4_0B 
% move effectiveness
[Escape]       60`b 
[Item]         60`b 
[AirLift]      90`b 
[Hurricane]    85`b % Bow's "Spook" as well
[UpAndAway]    95`b 
[PowerBounce]  95`b 
[SpinSmash]     0`b % weight (0-4)
% ui positions
[Size]         24`b  80`b % width height
[HealthBar]     0`b   0`b % dx dy
[StatusTurn]  -15`b  75`b % dx dy
[StatusIcon]   10`b  65`b % dx dy
}

#new:Function $Function_80218000_0B {
    0:  ADDIU     SP, SP, FFD8
    4:  SW        S1, 14 (SP)
    8:  COPY      S1, A0
    C:  SW        RA, 20 (SP)
   10:  SW        S3, 1C (SP)
   14:  SW        S2, 18 (SP)
   18:  SW        S0, 10 (SP)
   1C:  LW        S0, C (S1)
   20:  LW        A1, 0 (S0)
   24:  JAL       ~Func:get_variable
   28:  ADDIU     S0, S0, 4
   2C:  LW        A1, 0 (S0)
   30:  ADDIU     S0, S0, 4
   34:  COPY      A0, S1
   38:  JAL       ~Func:get_variable
   3C:  COPY      S3, V0
   40:  LW        A1, 0 (S0)
   44:  ADDIU     S0, S0, 4
   48:  COPY      A0, S1
   4C:  JAL       ~Func:get_variable
   50:  COPY      S2, V0
   54:  COPY      A0, S1
   58:  LW        A1, 0 (S0)
   5C:  JAL       ~Func:get_variable
   60:  COPY      S0, V0
   64:  LW        A0, 148 (S1)
   68:  JAL       ~Func:get_actor
   6C:  COPY      S1, V0
   70:  COPY      V1, V0
   74:  LW        V0, 8 (V1)
   78:  LBU       V0, 24 (V0)
   7C:  LW        A0, 8 (V1)
   80:  SUBU      S3, S3, V0
   84:  SB        S3, 194 (V1)
   88:  LBU       V0, 25 (A0)
   8C:  SUBU      S2, S2, V0
   90:  SB        S2, 195 (V1)
   94:  LBU       V0, 26 (A0)
   98:  SUBU      S0, S0, V0
   9C:  SB        S0, 196 (V1)
   A0:  LBU       A0, 27 (A0)
   A4:  SUBU      S1, S1, A0
   A8:  SB        S1, 197 (V1)
   AC:  LW        RA, 20 (SP)
   B0:  LW        S3, 1C (SP)
   B4:  LW        S2, 18 (SP)
   B8:  LW        S1, 14 (SP)
   BC:  LW        S0, 10 (SP)
   C0:  LI        V0, 2
   C4:  JR        RA
   C8:  ADDIU     SP, SP, 28
}

#new:DefenseTable $DefenseTable_80218C10_0B {
.Element:Normal 00000000
.Element:End
}

#new:StatusTable $StatusTable_80218C1C_0B {
.Status:Normal      0`
.Status:Default     0`
.Status:Sleep      80`
.Status:Poison      0`
.Status:Frozen      0`
.Status:Dizzy      90`
.Status:Fear        0`
.Status:Static      0`
.Status:Paralyze  100`
.Status:Shrink     90`
.Status:Stop       90`
.Status:DefaultTurnMod    0`
.Status:SleepTurnMod      0`
.Status:PoisonTurnMod     0`
.Status:FrozenTurnMod     0`
.Status:DizzyTurnMod      0`
.Status:FearTurnMod       0`
.Status:StaticTurnMod     0`
.Status:ParalyzeTurnMod   0`
.Status:ShrinkTurnMod     0`
.Status:StopTurnMod       0`
.Status:End
}

#new:PartsTable $PartsTable_80218CC8_0B {
00020000 01000000 001400FF $IdleAnimations_80218DC8_0B $DefenseTable_80218C10_0B 00200010 00000000 00000000 00000000 
00800001 02000000 004800FF 00000000 $DefenseTable_80218C10_0B 00200010 00000000 00F80000 00000000 
00020001 03000000 003600FF 00000000 $DefenseTable_80218C10_0B 00200010 00000000 00F80000 00000000 
00020001 04000000 002400FF 00000000 $DefenseTable_80218C10_0B 00200010 00000000 00F80000 00000000 
00020001 05000000 001000FF 00000000 $DefenseTable_80218C10_0B 00200010 00000000 00F80000 00000000 
00120001 06000000 000000FF $IdleAnimations_80218EB8_0B $DefenseTable_80218C10_0B 00200010 00000000 00000000 00000000 
}

#new:IdleAnimations $IdleAnimations_80218DC8_0B {
.Status:Normal    00310104
.Status:Stone     00310100
.Status:Sleep     00310125
.Status:Stop      00310100
.Status:Paralyze  00310100
.Status:Dizzy     00310121
.Status:Fear      00310121
.Status:End
}

#new:IdleAnimations $IdleAnimations_80218E04_0B {
.Status:Normal    00310105
.Status:Stone     00310101
.Status:Sleep     00310126
.Status:Stop      00310101
.Status:Paralyze  00310101
.Status:Dizzy     00310122
.Status:Fear      00310122
.Status:End
}

#new:IdleAnimations $IdleAnimations_80218E40_0B {
.Status:Normal    00310106
.Status:Stone     00310102
.Status:Sleep     00310127
.Status:Stop      00310102
.Status:Paralyze  00310102
.Status:Dizzy     00310123
.Status:Fear      00310123
.Status:End
}

#new:IdleAnimations $IdleAnimations_80218E7C_0B {
.Status:Normal    00310107
.Status:Stone     00310103
.Status:Sleep     00310128
.Status:Stop      00310103
.Status:Paralyze  00310103
.Status:Dizzy     00310124
.Status:Fear      00310124
.Status:End
}

#new:IdleAnimations $IdleAnimations_80218EB8_0B {
.Status:Normal    00310116
.Status:End
}

#new:Script $Script_Init_80218EC4_0B {
    0:  Call  BindTakeTurn  ( .Actor:Self $Script_TakeTurn_80219D88_0B )
   14:  Call  BindIdle      ( .Actor:Self $Script_Idle_80219040_0B )
   28:  Call  BindHandleEvent   ( .Actor:Self $Script_HandleEvent_80219050_0B )
   3C:  Call  SetActorVar   ( .Actor:Self 0000000A 00000000 )
   54:  Call  GetActorVar   ( .Actor:Self 00000001 *Var0 )
   6C:  Call  SetActorVar   ( .Actor:Self 00000009 *Var0 )
   84:  Call  SetActorVar   ( .Actor:Self 00000000 00000000 )
   9C:  Call  SetActorVar   ( .Actor:Self 00000001 00310104 )
   B4:  Call  SetActorVar   ( .Actor:Self 00000002 00310108 )
   CC:  Call  SetActorVar   ( .Actor:Self 00000003 0031010C )
   E4:  Call  SetActorVar   ( .Actor:Self 00000004 00310110 )
   FC:  Call  SetActorVar   ( .Actor:Self 00000005 00310111 )
  114:  Call  SetActorVar   ( .Actor:Self 00000006 00310118 )
  12C:  Call  SetActorVar   ( .Actor:Self 00000007 00310119 )
  144:  Call  EnableIdleScript  ( .Actor:Self 00000001 )
  158:  Call  UseIdleAnimation  ( .Actor:Self .True )
  16C:  Return
  174:  End
}

#new:Script $Script_Idle_80219040_0B {
    0:  Return
    8:  End
}

#new:Script $Script_HandleEvent_80219050_0B {
    0:  Call  UseIdleAnimation  ( .Actor:Self .False )
   14:  Call  EnableIdleScript  ( .Actor:Self 00000000 )
   28:  Call  GetLastEvent      ( .Actor:Self *Var0 )
   3C:  Switch  *Var0 
   48:  	Case  ==  .Event:HitCombo % 9
   54:  		SetConst  *Var0  00000001 
   64:  		Call  GetActorVar   ( .Actor:Self 00000003 *Var1 )
   7C:  		ExecWait  DoNormalHit 
   88:  	Case  ==  .Event:Hit % A
   94:  		Call  GetStatusFlags    ( .Actor:Self *Var0 )
   A8:  		If  *Var0  &  ~Flags:StatusFlags:Shrink % 80000
   B8:  			SetConst  *Var0  00000001 
   C8:  			Call  GetActorVar   ( .Actor:Self 00000003 *Var1 )
   E0:  			ExecWait  DoNormalHit 
   EC:  		Else
   F4:  			Call  GetActorVar   ( .Actor:Self 00000000 *VarA )
  10C:  			If  *VarA  ==  00000003 
  11C:  				SetConst  *Var0  00000001 
  12C:  				Call  GetActorVar   ( .Actor:Self 00000003 *Var1 )
  144:  				ExecWait  DoNormalHit 
  150:  			Else
  158:  				Call  80269E80  ( *Var0 )
  168:  				Switch  *Var0 
  174:  					CaseOR  ==  00000006 
  180:  					CaseOR  ==  00000007 
  18C:  					CaseOR  ==  00000009 
  198:  						ExecWait  $Script_8021BDE4_0B 
  1A4:  					EndCaseGroup
  1AC:  					Default
  1B4:  						SetConst  *Var0  00000001 
  1C4:  						Call  GetActorVar   ( .Actor:Self 00000003 *Var1 )
  1DC:  						ExecWait  DoNormalHit 
  1E8:  				EndSwitch
  1F0:  			EndIf
  1F8:  		EndIf
  200:  	Case  ==  .Event:Death % 20
  20C:  		Call  GetStatusFlags    ( .Actor:Self *Var0 )
  220:  		If  *Var0  &  ~Flags:StatusFlags:Shrink % 80000
  230:  			SetConst  *Var0  00000001 
  240:  			Call  GetActorVar   ( .Actor:Self 00000003 *Var1 )
  258:  			ExecWait  DoNormalHit 
  264:  			Wait  10`
  270:  		Else
  278:  			Call  GetActorVar   ( .Actor:Self 00000000 *VarA )
  290:  			If  *VarA  ==  00000003 
  2A0:  				SetConst  *Var0  00000001 
  2B0:  				Call  GetActorVar   ( .Actor:Self 00000003 *Var1 )
  2C8:  				ExecWait  DoNormalHit 
  2D4:  				Wait  10`
  2E0:  			Else
  2E8:  				Call  80269E80  ( *Var0 )
  2F8:  				Switch  *Var0 
  304:  					CaseOR  ==  00000006 
  310:  					CaseOR  ==  00000007 
  31C:  					CaseOR  ==  00000009 
  328:  						ExecWait  $Script_8021BDE4_0B 
  334:  					EndCaseGroup
  33C:  					Default
  344:  						SetConst  *Var0  00000001 
  354:  						Call  GetActorVar   ( .Actor:Self 00000003 *Var1 )
  36C:  						ExecWait  DoNormalHit 
  378:  						Wait  10`
  384:  				EndSwitch
  38C:  			EndIf
  394:  		EndIf
  39C:  		SetConst  *Var0  00000001 
  3AC:  		Call  GetActorVar   ( .Actor:Self 00000003 *Var1 )
  3C4:  		ExecWait  DoDeath 
  3D0:  		Return
  3D8:  	Case  ==  .Event:BurnHit % E
  3E4:  		Call  GetActorVar       ( .Actor:Self 00000006 *Var1 )
  3FC:  		Call  GetActorVar       ( .Actor:Self 00000007 *Var2 )
  414:  		SetConst  *Var0  00000001 
  424:  		Call  GetStatusFlags    ( .Actor:Self *Var3 )
  438:  		If  *Var3  &  ~Flags:StatusFlags:Shrink % 80000
  448:  			ExecWait  DoBurnHit 
  454:  		Else
  45C:  			Call  GetActorVar   ( .Actor:Self 00000000 *VarA )
  474:  			If  *VarA  ==  00000003 
  484:  				ExecWait  DoBurnHit 
  490:  			Else
  498:  				Call  80269E80  ( *VarA )
  4A8:  				Switch  *VarA 
  4B4:  					CaseOR  ==  00000006 
  4C0:  					CaseOR  ==  00000007 
  4CC:  					CaseOR  ==  00000009 
  4D8:  						ExecWait  $Script_8021BDE4_0B 
  4E4:  					EndCaseGroup
  4EC:  					Default
  4F4:  						ExecWait  DoBurnHit 
  500:  				EndSwitch
  508:  			EndIf
  510:  		EndIf
  518:  	CaseOR  ==  .Event:BurnDeath % 24
  524:  		Call  GetActorVar       ( .Actor:Self 00000006 *Var1 )
  53C:  		Call  GetActorVar       ( .Actor:Self 00000007 *Var2 )
  554:  		SetConst  *Var0  00000001 
  564:  		Call  GetStatusFlags    ( .Actor:Self *Var3 )
  578:  		If  *Var3  &  ~Flags:StatusFlags:Shrink % 80000
  588:  			ExecWait  DoBurnHit 
  594:  		Else
  59C:  			Call  GetActorVar   ( .Actor:Self 00000000 *VarA )
  5B4:  			If  *VarA  ==  00000003 
  5C4:  				ExecWait  DoBurnHit 
  5D0:  			Else
  5D8:  				Call  80269E80  ( *VarA )
  5E8:  				Switch  *VarA 
  5F4:  					CaseOR  ==  00000006 
  600:  					CaseOR  ==  00000007 
  60C:  					CaseOR  ==  00000009 
  618:  						ExecWait  $Script_8021BDE4_0B 
  624:  					EndCaseGroup
  62C:  					Default
  634:  						ExecWait  DoBurnHit 
  640:  				EndSwitch
  648:  			EndIf
  650:  		EndIf
  658:  		SetConst  *Var0  00000001 
  668:  		Call  GetActorVar   ( .Actor:Self 00000007 *Var1 )
  680:  		ExecWait  DoDeath 
  68C:  		Return
  694:  	Case  ==  .Event:SpinSmashHit % B
  6A0:  		ExecWait  $Script_8021B088_0B 
  6AC:  	Case  ==  .Event:SpinSmashDeath % 21
  6B8:  		ExecWait  $Script_8021B088_0B 
  6C4:  		SetConst  *Var0  00000001 
  6D4:  		Call  GetActorVar   ( .Actor:Self 00000003 *Var1 )
  6EC:  		ExecWait  DoDeath 
  6F8:  		Return
  700:  	Case  ==  .Event:SpinSmashLaunchHit % 11
  70C:  		Call  GetStatusFlags    ( .Actor:Self *Var3 )
  720:  		If  *Var3  &  ~Flags:StatusFlags:Shrink % 80000
  730:  			SetConst  *Var0  00000001 
  740:  			Call  GetActorVar   ( .Actor:Self 00000003 *Var1 )
  758:  			ExecWait  DoNormalHit 
  764:  		Else
  76C:  			ExecWait  $Script_8021BDE4_0B 
  778:  		EndIf
  780:  	Case  ==  00000025 % 25
  78C:  		Call  GetStatusFlags    ( .Actor:Self *Var3 )
  7A0:  		If  *Var3  &  ~Flags:StatusFlags:Shrink % 80000
  7B0:  			SetConst  *Var0  00000001 
  7C0:  			Call  GetActorVar   ( .Actor:Self 00000003 *Var1 )
  7D8:  			ExecWait  DoNormalHit 
  7E4:  		Else
  7EC:  			ExecWait  $Script_8021BDE4_0B 
  7F8:  		EndIf
  800:  		SetConst  *Var0  00000001 
  810:  		SetConst  *Var1  FFFFFFFF 
  820:  		ExecWait  DoDeath 
  82C:  		Return
  834:  	Case  ==  .Event:ShockHit % 2F
  840:  		Call  SetActorRotation      ( .Actor:Self 00000000 00000000 00000000 )
  85C:  		SetConst  *Var0  00000001 
  86C:  		Call  GetActorVar   ( .Actor:Self 00000003 *Var1 )
  884:  		ExecWait  DoShockHit 
  890:  		Call  GetActorVar   ( .Actor:Self 00000002 *Var1 )
  8A8:  		Call  SetAnimation  ( .Actor:Self 00000001 *Var1 )
  8C0:  		Call  SetGoalToHome ( .Actor:Self )
  8D0:  		Call  GetGoalPos    ( .Actor:Self *Var0 *Var1 *Var2 )
  8EC:  		Call  SetActorSpeed ( .Actor:Self *Fixed[4.0] )
  900:  		Call  SetActorJumpGravity   ( .Actor:Self *Fixed[2.0] )
  914:  		ExecWait  8029C12C 
  920:  	Case  ==  .Event:ShockDeath % 26
  92C:  		Call  SetActorRotation  ( .Actor:Self 00000000 00000000 00000000 )
  948:  		SetConst  *Var0  00000001 
  958:  		Call  GetActorVar       ( .Actor:Self 00000003 *Var1 )
  970:  		ExecWait  DoShockHit 
  97C:  		SetConst  *Var0  00000001 
  98C:  		Call  GetActorVar       ( .Actor:Self 00000003 *Var1 )
  9A4:  		ExecWait  DoDeath 
  9B0:  		Return
  9B8:  	CaseOR  ==  00000017 % 17
  9C4:  	CaseOR  ==  .Event:Immune % 19
  9D0:  		SetConst  *Var0  00000001 
  9E0:  		Call  GetActorVar   ( .Actor:Self 00000001 *Var1 )
  9F8:  		ExecWait  DoImmune 
  A04:  	EndCaseGroup
  A0C:  	Case  ==  .Event:SpikeTaunt % 1B
  A18:  		Call  GetBattleFlags    ( *Var0 )
  A28:  		If  *Var0  !&  00080000 
  A38:  			Call  AfflictActor  ( .Actor:Player .Status:Poison 00000003 )
  A50:  		EndIf
  A58:  		Call  GetActorVar   ( .Actor:Self 00000000 *Var0 )
  A70:  		Switch  *Var0 
  A7C:  			Case  ==  00000000 
  A88:  				Set   *Var0  00000000 
  A98:  				Set   *Var1  0000004D 
  AA8:  				SetConst  *Var2  00310121 
  AB8:  			Case  ==  00000001 
  AC4:  				Set   *Var0  00000000 
  AD4:  				Set   *Var1  0000003B 
  AE4:  				SetConst  *Var2  00310122 
  AF4:  			Case  ==  00000002 
  B00:  				Set   *Var0  00000000 
  B10:  				Set   *Var1  00000029 
  B20:  				SetConst  *Var2  00310123 
  B30:  			Case  ==  00000003 
  B3C:  				Set   *Var0  00000000 
  B4C:  				Set   *Var1  00000017 
  B5C:  				SetConst  *Var2  00310124 
  B6C:  		EndSwitch
  B74:  		Call  GetStatusFlags    ( .Actor:Self *Var3 )
  B88:  		If  *Var3  !&  ~Flags:StatusFlags:Sleep % 1000
  B98:  			Call  SetAnimation  ( .Actor:Self 00000001 *Var2 )
  BB0:  		EndIf
  BB8:  		Call  GetActorPos       ( .Actor:Self *Var3 *Var4 *Var5 )
  BD4:  		Call  GetStatusFlags    ( .Actor:Self *Var6 )
  BE8:  		If  *Var6  &  ~Flags:StatusFlags:Shrink % 80000
  BF8:  			MulF  *Var0  *Fixed[0.4] 
  C08:  			MulF  *Var1  *Fixed[0.4] 
  C18:  		EndIf
  C20:  		AddF  *Var3  *Var0 
  C30:  		AddF  *Var4  *Var1 
  C40:  		Call  PlayEffect    ( ~FX:LensFlare:Rotating *Var3 *Var4 *Var5 00000014 00000000 00000000 00000000 00000000 00000000 00000000 00000000 00000000 )
  C84:  		Wait  30`
  C90:  	Case  ==  .Event:RecoverStatus % 31
  C9C:  		SetConst  *Var0  00000001 
  CAC:  		Call  GetActorVar   ( .Actor:Self 00000001 *Var1 )
  CC4:  		ExecWait  DoRecover 
  CD0:  	Case  ==  .Event:ScareAway % 39
  CDC:  		ExecWait  $Script_8021C2BC_0B 
  CE8:  		Return
  CF0:  	Default
  CF8:  EndSwitch
  D00:  Call  EnableIdleScript  ( .Actor:Self 00000001 )
  D14:  Call  UseIdleAnimation  ( .Actor:Self .True )
  D28:  Return
  D30:  End
}

#new:Script $Script_TakeTurn_80219D88_0B {
    0:  Call  GetActorVar   ( .Actor:Self 00000000 *VarA )
   18:  If  *VarA  ==  00000003 
   28:  	ExecWait  $Script_8021A6C8_0B 
   34:  	Return
   3C:  EndIf
   44:  Call  UseIdleAnimation  ( .Actor:Self .False )
   58:  Call  EnableIdleScript  ( .Actor:Self 00000000 )
   6C:  Call  GetBattlePhase    ( *Var0 )
   7C:  If  *Var0  ==  00000001 
   8C:  	Call  UseBattleCamPreset    ( 00000002 )
   9C:  	Call  MoveBattleCamOver     (  1` )
   AC:  EndIf
   B4:  Call  SetPartSounds     ( .Actor:Self 00000006 .ActorSound:Jump 00000000 00000000 )
   D4:  Call  GetStatusFlags    ( .Actor:Self *Var0 )
   E8:  If  *Var0  !&  ~Flags:StatusFlags:Shrink % 80000
   F8:  	Call  SetPartScale  ( .Actor:Self 00000006 *Fixed[1.0] *Fixed[1.0] *Fixed[1.0] )
  118:  Else
  120:  	Call  SetPartScale  ( .Actor:Self 00000006 *Fixed[0.4] *Fixed[0.4] *Fixed[1.0] )
  140:  EndIf
  148:  ChildThread
  150:  	Call  SetPartFlagBits   ( .Actor:Self 00000006 00000001 .False )
  16C:  	Call  GetActorPos       ( .Actor:Self *Var0 *Var1 *Var2 )
  188:  	Call  SetPartPos        ( .Actor:Self 00000006 *Var0 *Var1 *Var2 )
  1A8:  	Call  SetPartJumpGravity    ( .Actor:Self 00000006 *Fixed[2.2] )
  1C0:  	Call  SetAnimation      ( .Actor:Self 00000006 00310116 )
  1D8:  	Call  GetStatusFlags    ( .Actor:Self *Var5 )
  1EC:  	Call  GetActorVar       ( .Actor:Self 00000000 *VarA )
  204:  	Switch  *VarA 
  210:  		Case  ==  00000000 
  21C:  			If  *Var5  !&  ~Flags:StatusFlags:Shrink % 80000
  22C:  				Add   *Var1  00000026 
  23C:  			Else
  244:  				Add   *Var1  0000000F 
  254:  				Call  SetPartJumpGravity    ( .Actor:Self 00000006 *Fixed[1.2] )
  26C:  			EndIf
  274:  			Call  JumpPartTo    ( .Actor:Self 00000006 *Var0 *Var1 *Var2  15` .True )
  29C:  		Case  ==  00000001 
  2A8:  			If  *Var5  !&  ~Flags:StatusFlags:Shrink % 80000
  2B8:  				Add   *Var1  00000014 
  2C8:  			Else
  2D0:  				Add   *Var1  00000008 
  2E0:  				Call  SetPartJumpGravity    ( .Actor:Self 00000006 *Fixed[1.2] )
  2F8:  			EndIf
  300:  			Call  JumpPartTo    ( .Actor:Self 00000006 *Var0 *Var1 *Var2  15` .True )
  328:  		Case  ==  00000002 
  334:  			If  *Var5  !&  ~Flags:StatusFlags:Shrink % 80000
  344:  				Add   *Var1  00000008 
  354:  			Else
  35C:  				Add   *Var1  00000003 
  36C:  				Call  SetPartJumpGravity    ( .Actor:Self 00000006 *Fixed[1.2] )
  384:  			EndIf
  38C:  			Call  JumpPartTo    ( .Actor:Self 00000006 *Var0 *Var1 *Var2  15` .True )
  3B4:  		Case  ==  00000003 
  3C0:  	EndSwitch
  3C8:  EndChildThread
  3D0:  Call  PlaySoundAtActor  ( .Actor:Self 00000342 )
  3E4:  Call  GetActorVar       ( .Actor:Self 00000004 *Var1 )
  3FC:  Call  SetAnimation      ( .Actor:Self 00000001 *Var1 )
  414:  Wait  12`
  420:  Call  GetActorVar       ( .Actor:Self 00000005 *Var1 )
  438:  Call  SetAnimation      ( .Actor:Self 00000001 *Var1 )
  450:  Wait  1`
  45C:  Call  PlaySoundAtActor  ( .Actor:Self 000002CE )
  470:  Wait  3`
  47C:  ExecWait  $Script_8021B1B4_0B 
  488:  Call  SetTargetActor    ( .Actor:Self .Actor:Player )
  49C:  Call  EnemyTestTarget   ( .Actor:Self *Var0 ~Flags:DamageType:NoContact 00000000 00000002 00000020 )
  4C0:  Switch  *Var0 
  4CC:  	CaseOR  ==  .HitResult:Miss % 6
  4D8:  	CaseOR  ==  .HitResult:Lucky % 5
  4E4:  		If  *Var0  ==  .HitResult:Lucky % 5
  4F4:  			ChildThread
  4FC:  				Wait  5`
  508:  				Call  EnemyTestTarget   ( .Actor:Self *Var0 ~Flags:DamageType:TriggerLucky 00000000 00000000 00000000 )
  52C:  			EndChildThread
  534:  		EndIf
  53C:  		Call  SetTargetActor    ( .Actor:Self .Actor:Player )
  550:  		Call  SetGoalToTarget   ( .Actor:Self )
  560:  		Call  GetGoalPos        ( .Actor:Self *Var0 *Var1 *Var2 )
  57C:  		Sub   *Var0  00000050 
  58C:  		Sub   *Var1  00000005 
  59C:  		Call  SetPartMoveSpeed  ( .Actor:Self 00000006 *Fixed[20.0] )
  5B4:  		Call  SetPartJumpGravity    ( .Actor:Self 00000006 *Fixed[0.1] )
  5CC:  		Call  SetAnimation      ( .Actor:Self 00000006 00310116 )
  5E4:  		Call  JumpPartTo        ( .Actor:Self 00000006 *Var0 *Var1 *Var2  0` .True )
  60C:  		Call  SetPartFlagBits   ( .Actor:Self 00000006 00000001 .True )
  628:  		Call  GetActorVar       ( .Actor:Self 00000002 *Var1 )
  640:  		Call  SetAnimation      ( .Actor:Self 00000001 *Var1 )
  658:  		Return
  660:  	EndCaseGroup
  668:  EndSwitch
  670:  Call  SetTargetActor    ( .Actor:Self .Actor:Player )
  684:  Call  SetGoalToTarget   ( .Actor:Self )
  694:  Call  GetGoalPos        ( .Actor:Self *Var0 *Var1 *Var2 )
  6B0:  Call  SetPartMoveSpeed  ( .Actor:Self 00000006 *Fixed[20.0] )
  6C8:  Call  SetPartJumpGravity    ( .Actor:Self 00000006 *Fixed[0.1] )
  6E0:  Call  SetAnimation      ( .Actor:Self 00000006 00310116 )
  6F8:  Call  JumpPartTo        ( .Actor:Self 00000006 *Var0 *Var1 *Var2  0` .True )
  720:  Call  EnemyDamageTarget ( .Actor:Self *Var0 ~Flags:DamageType:NoContact 00000000 ~DebuffType:Poison:3:40` 00000002 00000020 )
  748:  Call  GetActorVar       ( .Actor:Self 00000002 *Var1 )
  760:  Call  SetAnimation      ( .Actor:Self 00000001 *Var1 )
  778:  Switch  *Var0 
  784:  	CaseOR  ==  .HitResult:Hit % 0
  790:  	CaseOR  ==  .HitResult:QuakeImmune % 2
  79C:  		Call  GetActorPos       ( .Actor:Player *Var0 *Var1 *Var2 )
  7B8:  		Sub   *Var0  00000037 
  7C8:  		Set   *Var1  00000000 
  7D8:  		Call  SetPartMoveSpeed  ( .Actor:Self 00000006 *Fixed[6.0] )
  7F0:  		Call  SetPartJumpGravity    ( .Actor:Self 00000006 *Fixed[0.1] )
  808:  		Call  FlyPartTo ( .Actor:Self 00000006 *Var0 *Var1 *Var2  0`  25` .Easing:Linear )
  834:  		Call  SetPartMoveSpeed  ( .Actor:Self 00000006 *Fixed[4.0] )
  84C:  		Sub   *Var0  00000018 
  85C:  		Call  FlyPartTo ( .Actor:Self 00000006 *Var0 *Var1 *Var2  0`  21` .Easing:Linear )
  888:  		Call  SetPartMoveSpeed  ( .Actor:Self 00000006 *Fixed[3.0] )
  8A0:  		Sub   *Var0  00000014 
  8B0:  		Call  FlyPartTo ( .Actor:Self 00000006 *Var0 *Var1 *Var2  0`  20` .Easing:Linear )
  8DC:  		Call  SetPartFlagBits   ( .Actor:Self 00000006 00000001 .True )
  8F8:  	EndCaseGroup
  900:  EndSwitch
  908:  Call  EnableIdleScript  ( .Actor:Self 00000001 )
  91C:  Call  UseIdleAnimation  ( .Actor:Self .True )
  930:  Return
  938:  End
}

#new:Script $Script_8021A6C8_0B {
    0:  Call  UseIdleAnimation  ( .Actor:Self .False )
   14:  Call  EnableIdleScript  ( .Actor:Self 00000000 )
   28:  Call  SetActorSounds    ( .Actor:Self .ActorSound:Walk 000002EC 000002EC )
   44:  Call  SetActorSounds    ( .Actor:Self .ActorSound:Jump 000002EC 00000000 )
   60:  Call  UseBattleCamPreset    ( 0000003F )
   70:  Call  BattleCamTargetActor  ( .Actor:Self )
   80:  Call  8024ECF8  ( FFFFFFFF 00000001 00000000 )
   98:  Call  SetTargetActor    ( .Actor:Self .Actor:Player )
   AC:  Call  SetGoalToTarget   ( .Actor:Self )
   BC:  Call  GetGoalPos        ( .Actor:Self *Var0 *Var1 *Var2 )
   D8:  Add   *Var0  00000032 
   E8:  Set   *Var1  00000000 
   F8:  Call  SetActorJumpGravity   ( .Actor:Self *Fixed[1.8] )
  10C:  Call  SetAnimation      ( .Actor:Self 00000001 0031010B )
  124:  Call  SetActorSpeed     ( .Actor:Self *Fixed[4.0] )
  138:  Call  SetActorJumpGravity   ( .Actor:Self *Fixed[2.0] )
  14C:  ExecWait  8029C12C 
  158:  Call  SetAnimation      ( .Actor:Self 00000001 00310107 )
  170:  Wait  4`
  17C:  Call  SetActorDispOffset    ( .Actor:Self 00000000 FFFFFFFF 00000000 )
  198:  Wait  1`
  1A4:  Call  SetActorDispOffset    ( .Actor:Self 00000000 FFFFFFFE 00000000 )
  1C0:  Wait  4`
  1CC:  Call  SetActorDispOffset    ( .Actor:Self 00000000 00000000 00000000 )
  1E8:  Call  SetAnimation      ( .Actor:Self 00000001 0031010B )
  200:  Call  EnemyTestTarget   ( .Actor:Self *Var0 ~Flags:DamageType:0 00000000 00000002 00000010 )
  224:  Switch  *Var0 
  230:  	CaseOR  ==  .HitResult:Miss % 6
  23C:  	CaseOR  ==  .HitResult:Lucky % 5
  248:  		Set   *VarA  *Var0 
  258:  		Call  SetGoalToTarget   ( .Actor:Self )
  268:  		Call  GetGoalPos        ( .Actor:Self *Var0 *Var1 *Var2 )
  284:  		Sub   *Var0  00000005 
  294:  		Set   *Var1  0000000A 
  2A4:  		Call  SetGoalPos        ( .Actor:Self *Var0 *Var1 *Var2 )
  2C0:  		Call  SetActorJumpGravity   ( .Actor:Self *Fixed[1.1] )
  2D4:  		ChildThread
  2DC:  			Wait  2`
  2E8:  			Set   *Var0  00000000 
  2F8:  			Loop  00000005 
  304:  				Add   *Var0  0000001E 
  314:  				Call  SetActorRotation  ( .Actor:Self 00000000 00000000 *Var0 )
  330:  				Wait  1`
  33C:  			EndLoop
  344:  		EndChildThread
  34C:  		Call  JumpToGoal    ( .Actor:Self  22` .False .True .False )
  36C:  		If  *VarA  ==  .HitResult:Lucky % 5
  37C:  			Call  EnemyTestTarget   ( .Actor:Self *Var0 ~Flags:DamageType:TriggerLucky 00000000 00000000 00000000 )
  3A0:  		EndIf
  3A8:  		Call  SetActorRotationOffset    ( .Actor:Self 00000000 0000000A 00000000 )
  3C4:  		ChildThread
  3CC:  			Wait  2`
  3D8:  			Set   *Var0  000000B4 
  3E8:  			Loop  00000006 
  3F4:  				Add   *Var0  0000001E 
  404:  				If  *Var0  ==  00000168 
  414:  					Set   *Var0  00000000 
  424:  				EndIf
  42C:  				Call  SetActorRotation  ( .Actor:Self 00000000 00000000 *Var0 )
  448:  				Wait  1`
  454:  			EndLoop
  45C:  			Call  SetActorRotationOffset    ( .Actor:Self 00000000 00000000 00000000 )
  478:  		EndChildThread
  480:  		Call  SetActorJumpGravity   ( .Actor:Self *Fixed[2.0] )
  494:  		Call  GetActorPos   ( .Actor:Self *Var0 *Var1 *Var2 )
  4B0:  		Sub   *Var0  0000001E 
  4C0:  		Set   *Var1  00000000 
  4D0:  		Call  SetGoalPos    ( .Actor:Self *Var0 *Var1 *Var2 )
  4EC:  		Call  JumpToGoal    ( .Actor:Self  6` .False .True .False )
  50C:  		Wait  15`
  518:  		Call  UseBattleCamPreset    ( 00000002 )
  528:  		Call  YieldTurn ( )
  534:  		Call  AddActorDecoration    ( .Actor:Self 00000001 00000000 .Decoration:Sweat )
  550:  		Call  SetGoalToHome ( .Actor:Self )
  560:  		Call  GetGoalPos    ( .Actor:Self *Var0 *Var1 *Var2 )
  57C:  		Call  SetActorSpeed ( .Actor:Self *Fixed[4.0] )
  590:  		Call  SetAnimation  ( .Actor:Self 00000001 0031010B )
  5A8:  		Call  SetActorJumpGravity   ( .Actor:Self *Fixed[2.0] )
  5BC:  		ExecWait  8029C12C 
  5C8:  		Call  RemoveActorDecoration ( .Actor:Self 00000001 00000000 )
  5E0:  		Call  SetAnimation  ( .Actor:Self 00000001 00310107 )
  5F8:  		Return
  600:  	EndCaseGroup
  608:  EndSwitch
  610:  Call  SetGoalToTarget       ( .Actor:Self )
  620:  Call  SetActorJumpGravity   ( .Actor:Self *Fixed[1.1] )
  634:  ChildThread
  63C:  	Wait  2`
  648:  	Set   *Var0  00000000 
  658:  	Loop  00000005 
  664:  		Add   *Var0  0000001E 
  674:  		Call  SetActorRotation  ( .Actor:Self 00000000 00000000 *Var0 )
  690:  		Wait  1`
  69C:  	EndLoop
  6A4:  EndChildThread
  6AC:  Call  JumpToGoal        ( .Actor:Self  18` .False .True .False )
  6CC:  Wait  2`
  6D8:  Call  EnemyDamageTarget ( .Actor:Self *Var0 ~Flags:DamageType:0 00000000 ~DebuffType:Poison:3:100` 00000002 00000020 )
  700:  Call  SetAnimation      ( .Actor:Self 00000001 00310107 )
  718:  Switch  *Var0 
  724:  	CaseOR  ==  .HitResult:Hit % 0
  730:  	CaseOR  ==  .HitResult:QuakeImmune % 2
  73C:  		Call  UseBattleCamPreset    ( 00000002 )
  74C:  		Call  SetActorRotation      ( .Actor:Self 00000000 00000000 00000000 )
  768:  		Call  SetActorDispOffset    ( .Actor:Self 00000000 00000000 00000000 )
  784:  		Call  GetGoalPos    ( .Actor:Self *Var0 *Var1 *Var2 )
  7A0:  		Add   *Var0  00000028 
  7B0:  		Set   *Var1  00000000 
  7C0:  		Call  SetActorJumpGravity   ( .Actor:Self *Fixed[1.8] )
  7D4:  		Call  SetGoalPos    ( .Actor:Self *Var0 *Var1 *Var2 )
  7F0:  		Call  JumpToGoal    ( .Actor:Self  10` .False .True .False )
  810:  		Add   *Var0  0000001E 
  820:  		Call  SetGoalPos    ( .Actor:Self *Var0 *Var1 *Var2 )
  83C:  		Call  JumpToGoal    ( .Actor:Self  8` .False .True .False )
  85C:  		Add   *Var0  00000014 
  86C:  		Call  SetGoalPos    ( .Actor:Self *Var0 *Var1 *Var2 )
  888:  		Call  JumpToGoal    ( .Actor:Self  6` .False .True .False )
  8A8:  		Sub   *Var0  0000000A 
  8B8:  		Call  JumpToGoal    ( .Actor:Self  4` .False .True .False )
  8D8:  		Call  SetAnimation  ( .Actor:Self 00000001 00310107 )
  8F0:  		Call  SetGoalToHome ( .Actor:Self )
  900:  		Call  GetGoalPos    ( .Actor:Self *Var0 *Var1 *Var2 )
  91C:  		Call  SetActorSpeed ( .Actor:Self *Fixed[4.0] )
  930:  		Call  SetAnimation  ( .Actor:Self 00000001 0031010B )
  948:  		Call  SetActorJumpGravity   ( .Actor:Self *Fixed[2.0] )
  95C:  		ExecWait  8029C12C 
  968:  		Call  SetAnimation  ( .Actor:Self 00000001 00310107 )
  980:  EndSwitch
  988:  Call  EnableIdleScript  ( .Actor:Self 00000001 )
  99C:  Call  UseIdleAnimation  ( .Actor:Self .True )
  9B0:  Return
  9B8:  End
}

#new:Script $Script_8021B088_0B {
    0:  Call  GetStatusFlags    ( .Actor:Self *VarA )
   14:  If  *VarA  &  ~Flags:StatusFlags:Shrink % 80000
   24:  	SetConst  *Var0  00000001 
   34:  	Call  GetActorVar   ( .Actor:Self 00000003 *Var1 )
   4C:  	ExecWait  DoSpinSmashHit 
   58:  	Return
   60:  EndIf
   68:  Call  GetActorVar   ( .Actor:Self 00000000 *VarA )
   80:  Switch  *VarA 
   8C:  	Case  ==  00000000 
   98:  		ExecWait  $Script_8021B998_0B 
   A4:  	Case  ==  00000001 
   B0:  		ExecWait  $Script_8021B998_0B 
   BC:  	Case  ==  00000002 
   C8:  		ExecWait  $Script_8021B998_0B 
   D4:  	Case  ==  00000003 
   E0:  		SetConst  *Var0  00000001 
   F0:  		Call  GetActorVar   ( .Actor:Self 00000003 *Var1 )
  108:  		ExecWait  DoSpinSmashHit 
  114:  EndSwitch
  11C:  Return
  124:  End
}

#new:Script $Script_8021B1B4_0B {
    0:  Call  GetActorVar   ( .Actor:Self 00000000 *VarA )
   18:  Switch  *VarA 
   24:  	Case  ==  00000000 
   30:  		Call  SetActorVar   ( .Actor:Self 00000001 00310105 )
   48:  		Call  SetActorVar   ( .Actor:Self 00000002 00310109 )
   60:  		Call  SetActorVar   ( .Actor:Self 00000003 0031010D )
   78:  		Call  SetActorVar   ( .Actor:Self 00000004 00310112 )
   90:  		Call  SetActorVar   ( .Actor:Self 00000005 00310113 )
   A8:  		Call  SetActorVar   ( .Actor:Self 00000006 0031011A )
   C0:  		Call  SetActorVar   ( .Actor:Self 00000007 0031011B )
   D8:  		Call  SetIdleAnimations ( .Actor:Self 00000001 $IdleAnimations_80218E04_0B )
   F0:  		Call  SetPartFlagBits   ( .Actor:Self 00000002 00800000 .False )
  10C:  		Call  SetPartFlagBits   ( .Actor:Self 00000002 00020000 .True )
  128:  		Call  SetPartFlagBits   ( .Actor:Self 00000003 00020000 .False )
  144:  		Call  SetPartFlagBits   ( .Actor:Self 00000003 00800000 .True )
  160:  		Call  SetActorVar   ( .Actor:Self 00000000 00000001 )
  178:  		Call  SetActorSize  ( .Actor:Self  62`  -250000000` )
  190:  		Call  SetPartSize   ( .Actor:Self 00000001  62`  -250000000` )
  1AC:  		Call  $Function_80218000_0B ( FFFFFFF1 00000037 0000000A 0000002D )
  1C8:  	Case  ==  00000001 
  1D4:  		Call  SetActorVar   ( .Actor:Self 00000001 00310106 )
  1EC:  		Call  SetActorVar   ( .Actor:Self 00000002 0031010A )
  204:  		Call  SetActorVar   ( .Actor:Self 00000003 0031010E )
  21C:  		Call  SetActorVar   ( .Actor:Self 00000004 00310114 )
  234:  		Call  SetActorVar   ( .Actor:Self 00000005 00310115 )
  24C:  		Call  SetActorVar   ( .Actor:Self 00000006 0031011C )
  264:  		Call  SetActorVar   ( .Actor:Self 00000007 0031011D )
  27C:  		Call  SetIdleAnimations ( .Actor:Self 00000001 $IdleAnimations_80218E40_0B )
  294:  		Call  SetPartFlagBits   ( .Actor:Self 00000003 00800000 .False )
  2B0:  		Call  SetPartFlagBits   ( .Actor:Self 00000003 00020000 .True )
  2CC:  		Call  SetPartFlagBits   ( .Actor:Self 00000004 00020000 .False )
  2E8:  		Call  SetPartFlagBits   ( .Actor:Self 00000004 00800000 .True )
  304:  		Call  SetActorVar   ( .Actor:Self 00000000 00000002 )
  31C:  		Call  SetActorSize  ( .Actor:Self  44`  -250000000` )
  334:  		Call  SetPartSize   ( .Actor:Self 00000001  44`  -250000000` )
  350:  		Call  $Function_80218000_0B ( FFFFFFF1 00000023 0000000A 00000019 )
  36C:  	Case  ==  00000002 
  378:  		Call  SetActorVar   ( .Actor:Self 00000001 00310107 )
  390:  		Call  SetActorVar   ( .Actor:Self 00000002 0031010B )
  3A8:  		Call  SetActorVar   ( .Actor:Self 00000003 0031010F )
  3C0:  		Call  SetActorVar   ( .Actor:Self 00000006 0031011E )
  3D8:  		Call  SetActorVar   ( .Actor:Self 00000007 0031011F )
  3F0:  		Call  SetIdleAnimations ( .Actor:Self 00000001 $IdleAnimations_80218E7C_0B )
  408:  		Call  SetPartFlagBits   ( .Actor:Self 00000004 00800000 .False )
  424:  		Call  SetPartFlagBits   ( .Actor:Self 00000004 00020000 .True )
  440:  		Call  SetPartFlagBits   ( .Actor:Self 00000005 00020000 .False )
  45C:  		Call  SetPartFlagBits   ( .Actor:Self 00000005 00800000 .True )
  478:  		Call  SetActorVar   ( .Actor:Self 00000000 00000003 )
  490:  		Call  SetActorSize  ( .Actor:Self  26`  -250000000` )
  4A8:  		Call  SetPartSize   ( .Actor:Self 00000001  26`  -250000000` )
  4C4:  		Call  $Function_80218000_0B ( FFFFFFF1 0000000F 0000000A 00000005 )
  4E0:  EndSwitch
  4E8:  Return
  4F0:  End
}

#new:Script $Script_8021B6AC_0B {
    0:  Call  GetActorPos   ( .Actor:Self *Var0 *Var1 *Var2 )
   1C:  Add   *Var1  00000012 
   2C:  Call  SetActorPos   ( .Actor:Self *Var0 *Var1 *Var2 )
   48:  Call  GetActorPos   ( .Actor:Self *Var0 *Var1 *Var2 )
   64:  Set   *Var3  *Var1 
   74:  Wait  2`
   80:  Sub   *Var3  00000001 
   90:  Call  SetActorPos   ( .Actor:Self *Var0 *Var3 *Var2 )
   AC:  Wait  3`
   B8:  Sub   *Var3  00000002 
   C8:  Call  SetActorPos   ( .Actor:Self *Var0 *Var3 *Var2 )
   E4:  Wait  2`
   F0:  Sub   *Var3  00000003 
  100:  Call  SetActorPos   ( .Actor:Self *Var0 *Var3 *Var2 )
  11C:  Wait  1`
  128:  Sub   *Var3  00000005 
  138:  Call  SetActorPos   ( .Actor:Self *Var0 *Var3 *Var2 )
  154:  Wait  1`
  160:  Sub   *Var3  00000007 
  170:  Call  SetActorPos   ( .Actor:Self *Var0 *Var3 *Var2 )
  18C:  Wait  1`
  198:  Add   *Var3  00000002 
  1A8:  Call  SetActorPos   ( .Actor:Self *Var0 *Var3 *Var2 )
  1C4:  Wait  1`
  1D0:  Add   *Var3  00000003 
  1E0:  Call  SetActorPos   ( .Actor:Self *Var0 *Var3 *Var2 )
  1FC:  Wait  1`
  208:  Add   *Var3  00000003 
  218:  Call  SetActorPos   ( .Actor:Self *Var0 *Var3 *Var2 )
  234:  Wait  1`
  240:  Sub   *Var3  00000003 
  250:  Call  SetActorPos   ( .Actor:Self *Var0 *Var3 *Var2 )
  26C:  Wait  1`
  278:  Sub   *Var3  00000003 
  288:  Call  SetActorPos   ( .Actor:Self *Var0 *Var3 *Var2 )
  2A4:  Wait  1`
  2B0:  Sub   *Var3  00000002 
  2C0:  Call  SetActorPos   ( .Actor:Self *Var0 *Var3 *Var2 )
  2DC:  Return
  2E4:  End
}

#new:Script $Script_8021B998_0B {
    0:  Call  GetActorPos       ( .Actor:Self *Var0 *Var1 *Var2 )
   1C:  Call  SetPartPos        ( .Actor:Self 00000006 *Var0 *Var1 *Var2 )
   3C:  Call  SetPartFlagBits   ( .Actor:Self 00000006 00000001 .False )
   58:  Call  GetStatusFlags    ( .Actor:Self *Var0 )
   6C:  If  *Var0  !&  ~Flags:StatusFlags:Shrink % 80000
   7C:  	Call  SetPartScale  ( .Actor:Self 00000006 *Fixed[1.0] *Fixed[1.0] *Fixed[1.0] )
   9C:  Else
   A4:  	Call  SetPartScale  ( .Actor:Self 00000006 *Fixed[0.4] *Fixed[0.4] *Fixed[1.0] )
   C4:  EndIf
   CC:  ExecWait  $Script_8021B1B4_0B 
   D8:  SetConst  *Var0  00000001 
   E8:  Call  GetActorVar   ( .Actor:Self 00000003 *Var1 )
  100:  Call  SetAnimation  ( .Actor:Self *Var0 *Var1 )
  118:  ChildThread
  120:  	Wait  4`
  12C:  	ExecWait  $Script_8021B6AC_0B 
  138:  EndChildThread
  140:  Call  EnemyCreateTargetList ( 00018004 )
  150:  Call  InitTargetIterator ( )
  15C:  Label  0
  168:  Call  GetOwnerID    ( *Var1 )
  178:  Call  GetOwnerTarget        ( *Var0 *Var9 )
  18C:  If  *Var1  !=  *Var0 
  19C:  	Call  ChooseNextTarget  ( .Iter:Next *Var0 )
  1B0:  	Goto  0
  1BC:  EndIf
  1C4:  Label  1
  1D0:  Add   *VarF  00000001 
  1E0:  Call  ChooseNextTarget  ( .Iter:Next *Var0 )
  1F4:  If  *Var0  ==  FFFFFFFF 
  204:  	Goto  A
  210:  EndIf
  218:  Call  GetOwnerTarget    ( *Var0 *Var9 )
  22C:  Call  GetActorFlags     ( *Var0 *Var1 )
  240:  If  *Var1  &  00004000 
  250:  	Goto  1
  25C:  EndIf
  264:  Call  GetOwnerID        ( *Var0 )
  274:  Call  GetOwnerTarget    ( *Var0 *Var1 )
  288:  Call  SetGoalToTarget   ( .Actor:Self )
  298:  Call  GetGoalPos        ( .Actor:Self *Var0 *Var1 *Var2 )
  2B4:  Set   *Var1  00000000 
  2C4:  Call  SetPartJumpGravity    ( .Actor:Self 00000006 *Fixed[0.1] )
  2DC:  Call  SetPartMoveSpeed  ( .Actor:Self 00000006 *Fixed[7.0] )
  2F4:  Call  JumpPartTo        ( .Actor:Self 00000006 *Var0 *Var1 *Var2  0` .True )
  31C:  ChildThread
  324:  	Call  ShakeCam  ( .Cam:Battle 00000000  2` *Fixed[1.0] )
  340:  EndChildThread
  348:  Call  SetGoalToTarget   ( .Actor:Self )
  358:  Call  GetOwnerTarget    ( *Var0 *Var1 )
  36C:  Call  DispatchDamageEvent   ( *Var0 00000001 .Event:SpinSmashLaunchHit )
  384:  Goto  1
  390:  Label  A
  39C:  Call  UseBattleCamPreset    ( 00000003 )
  3AC:  Call  SetPartJumpGravity    ( .Actor:Self 00000006 *Fixed[0.1] )
  3C4:  Call  SetPartMoveSpeed  ( .Actor:Self 00000006 *Fixed[6.0] )
  3DC:  Call  JumpPartTo        ( .Actor:Self 00000006  296`  0`  0`  0` .True )
  404:  Call  SetPartFlagBits   ( .Actor:Self 00000006 00020000 .True )
  420:  Call  SetPartFlagBits   ( .Actor:Self 00000006 00000001 .True )
  43C:  Return
  444:  End
}

#new:Script $Script_8021BDE4_0B {
    0:  Call  GetStatusFlags    ( .Actor:Self *Var0 )
   14:  If  *Var0  !&  ~Flags:StatusFlags:Shrink % 80000
   24:  	Call  SetPartScale  ( .Actor:Self 00000006 *Fixed[1.0] *Fixed[1.0] *Fixed[1.0] )
   44:  Else
   4C:  	Call  SetPartScale  ( .Actor:Self 00000006 *Fixed[0.4] *Fixed[0.4] *Fixed[1.0] )
   6C:  EndIf
   74:  ExecWait  $Script_8021B1B4_0B 
   80:  SetConst  *Var0  00000001 
   90:  Call  GetLastEvent  ( .Actor:Self *Var1 )
   A4:  Switch  *Var1 
   B0:  	CaseOR  ==  .Event:BurnHit % E
   BC:  	CaseOR  ==  .Event:BurnDeath % 24
   C8:  		Call  SetAnimation  ( .Actor:Self 00000006 00310020 )
   E0:  		Call  GetActorVar   ( .Actor:Self 00000006 *Var1 )
   F8:  	EndCaseGroup
  100:  	Default
  108:  		Call  GetActorVar   ( .Actor:Self 00000003 *Var1 )
  120:  EndSwitch
  128:  Call  SetAnimation  ( .Actor:Self *Var0 *Var1 )
  140:  ChildThread
  148:  	Wait  4`
  154:  	ExecWait  $Script_8021B6AC_0B 
  160:  EndChildThread
  168:  Call  GetActorVar   ( .Actor:Self 00000000 *VarA )
  180:  If  *VarA  !=  00000003 
  190:  	Call  GetActorPos   ( .Actor:Self *Var0 *Var1 *Var2 )
  1AC:  	Call  SetPartPos    ( .Actor:Self 00000006 *Var0 *Var1 *Var2 )
  1CC:  	Call  SetPartFlagBits   ( .Actor:Self 00000006 00000001 .False )
  1E8:  	Call  SetPartMoveSpeed  ( .Actor:Self 00000006 *Fixed[6.0] )
  200:  	Call  GetActorPos   ( .Actor:Self *Var0 *Var1 *Var2 )
  21C:  	Add   *Var0  0000001E 
  22C:  	Set   *Var1  00000000 
  23C:  	Call  FlyPartTo     ( .Actor:Self 00000006 *Var0 *Var1 *Var2  10`  18` .Easing:Linear )
  268:  	Add   *Var0  00000014 
  278:  	Call  FlyPartTo     ( .Actor:Self 00000006 *Var0 *Var1 *Var2  8`  10` .Easing:Linear )
  2A4:  	Loop  00000014 
  2B0:  		Call  SetPartFlagBits   ( .Actor:Self 00000006 00000001 .True )
  2CC:  		Wait  1`
  2D8:  		Call  SetPartFlagBits   ( .Actor:Self 00000006 00000001 .False )
  2F4:  		Wait  1`
  300:  	EndLoop
  308:  	Call  SetPartFlagBits   ( .Actor:Self 00000006 00020000 .True )
  324:  	Call  SetPartFlagBits   ( .Actor:Self 00000006 00000001 .True )
  340:  Else
  348:  	Wait  30`
  354:  EndIf
  35C:  Call  GetLastEvent  ( .Actor:Self *Var0 )
  370:  Switch  *Var0 
  37C:  	Case  ==  .Event:BurnHit % E
  388:  		Call  GetActorVar   ( .Actor:Self 00000007 *Var1 )
  3A0:  		Call  SetAnimation  ( .Actor:Self 00000001 *Var1 )
  3B8:  		Call  GetActorPos   ( .Actor:Self *Var0 *Var1 *Var2 )
  3D4:  		Call  GetActorSize  ( .Actor:Self *Var3 *Var4 )
  3EC:  		Div   *Var3  00000002 
  3FC:  		Add   *Var1  *Var3 
  40C:  		Add   *Var2  00000005 
  41C:  		DivF  *Var3  *Fixed[10.0] 
  42C:  		Call  PlayEffect    ( ~FX:SmokeBurst:Black *Var0 *Var1 *Var2 *Var3 0000000A 00000000 00000000 00000000 00000000 00000000 00000000 00000000 )
  470:  	Case  ==  .Event:BurnDeath % 24
  47C:  		Call  GetActorVar   ( .Actor:Self 00000007 *Var1 )
  494:  		Call  SetAnimation  ( .Actor:Self 00000001 *Var1 )
  4AC:  		Wait  10`
  4B8:  	Default
  4C0:  EndSwitch
  4C8:  Return
  4D0:  End
}

#new:Script $Script_8021C2BC_0B {
    0:  SetConst  *Var0  00000001 
   10:  Call  GetActorVar   ( .Actor:Self 00000003 *Var1 )
   28:  Call  UseBattleCamPreset    ( 00000002 )
   38:  Call  GetActorFlags ( .Actor:Self *Var9 )
   4C:  Call  SetActorJumpGravity   ( .Actor:Self *Fixed[0.05] )
   60:  Call  GetActorPos   ( .Actor:Self *VarA *VarB *VarC )
   7C:  Set   *VarD  *VarB 
   8C:  Add   *VarD  00000028 
   9C:  Call  SetGoalPos    ( .Actor:Self *VarA *VarD *VarC )
   B8:  Call  JumpToGoal    ( .Actor:Self  5` .False .True .False )
   D8:  Call  SetAnimation  ( .Actor:Self *Var0 *Var1 )
   F0:  Wait  20`
   FC:  Call  SetGoalPos    ( .Actor:Self *VarA *VarB *VarC )
  118:  Call  FallToGoal    ( .Actor:Self  10` )
  12C:  Wait  20`
  138:  Call  SetActorYaw   ( .Actor:Self  180` )
  14C:  Wait  5`
  158:  Call  SetActorSpeed ( .Actor:Self *Fixed[4.0] )
  16C:  Call  SetGoalPos    ( .Actor:Self  200`  0`  0` )
  188:  Call  RunToGoal     ( .Actor:Self  0` .False )
  1A0:  Wait  8`
  1AC:  Call  8027D32C      ( FFFFFF81 )
  1BC:  Call  UseIdleAnimation      ( .Actor:Self .False )
  1D0:  Call  RemoveActor   ( .Actor:Self )
  1E0:  Return
  1E8:  End
}

