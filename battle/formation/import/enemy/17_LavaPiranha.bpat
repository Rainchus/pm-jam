% Automatically dumped from section 17

#new:Actor $17_LavaPiranha {
% stats
[Index]        B3b 
[Level]        45`b 
[MaxHP]        40`b 
[Coins]         0`b 
[Flags]       00000000 
[StatusTable] $StatusTable_8021D148_17 
% ai
[PartsCount]    2`s 
[PartsTable]  $PartsTable_8021D1F4_17 
[Script]      $Script_Init_8021D264_17 
% move effectiveness
[Escape]        0`b 
[Item]          0`b 
[AirLift]       0`b 
[Hurricane]     0`b % Bow's "Spook" as well
[UpAndAway]     0`b 
[PowerBounce]  70`b 
[SpinSmash]     4`b % weight (0-4)
% ui positions
[Size]         50`b  50`b % width height
[HealthBar]    20`b -10`b % dx dy
[StatusTurn]    5`b  45`b % dx dy
[StatusIcon]   30`b  47`b % dx dy
}

#new:Function $Function_80218000_17 {
    0:  ADDIU     SP, SP, FFE0
    4:  SW        S1, 14 (SP)
    8:  COPY      S1, A0
    C:  SW        RA, 18 (SP)
   10:  SW        S0, 10 (SP)
   14:  LW        S0, C (S1)
   18:  LW        A1, 0 (S0)
   1C:  JAL       ~Func:get_variable
   20:  ADDIU     S0, S0, 4
   24:  COPY      A0, S1
   28:  LW        A1, 0 (S0)
   2C:  JAL       ~Func:get_variable
   30:  COPY      S0, V0
   34:  COPY      A0, S0
   38:  JAL       ~Func:start_rumble
   3C:  COPY      A1, V0
   40:  LW        RA, 18 (SP)
   44:  LW        S1, 14 (SP)
   48:  LW        S0, 10 (SP)
   4C:  LI        V0, 2
   50:  JR        RA
   54:  ADDIU     SP, SP, 20
}

#new:Function $Function_80218058_17 {
    0:  ADDIU     SP, SP, FE60
    4:  SW        S3, 194 (SP)
    8:  COPY      S3, A0
    C:  SW        S1, 18C (SP)
   10:  ADDIU     S1, SP, 10
   14:  COPY      A0, S1
   18:  LI        A1, 1
   1C:  SW        RA, 198 (SP)
   20:  SW        S2, 190 (SP)
   24:  SW        S0, 188 (SP)
   28:  LW        V1, 90 (S3)
   2C:  CLEAR     S2
   30:  SW        S3, 17C (SP)
   34:  SLLV      V0, V1, A1
   38:  ADDU      V0, V0, V1
   3C:  SW        V0, 178 (SP)
   40:  LW        V1, 90 (S3)
   44:  ADDIU     V0, SP, 178
   48:  SW        R0, 184 (SP)
   4C:  SW        V0, 1C (SP)
   50:  JAL       ~Func:LoadPath
   54:  SW        V1, 180 (SP)
   58:  COPY      S0, S3
        .o5C
   5C:  COPY      A0, S1
   60:  JAL       ~Func:GetNextPathPos
   64:  LI        A1, 1
   68:  COPY      A0, S1
   6C:  LI        A1, *Var1
   70:  JAL       ~Func:get_float_variable
   74:  RESERVED
   78:  COPY      A0, S1
   7C:  LI        A1, *Var2
   84:  JAL       ~Func:get_float_variable
   88:  SWC1      F0, 98 (S0)
   8C:  COPY      A0, S1
   90:  LI        A1, *Var3
   98:  JAL       ~Func:get_float_variable
   9C:  SWC1      F0, 9C (S0)
   A0:  SWC1      F0, A0 (S0)
   A4:  ADDIU     S0, S0, C
   A8:  LW        V0, 84 (S1)
   AC:  BNE       V0, R0, .o5C
   B0:  ADDIU     S2, S2, 1
   B4:  SW        S2, 1DC (S3)
   B8:  LW        RA, 198 (SP)
   BC:  LW        S3, 194 (SP)
   C0:  LW        S2, 190 (SP)
   C4:  LW        S1, 18C (SP)
   C8:  LW        S0, 188 (SP)
   CC:  JR        RA
   D0:  ADDIU     SP, SP, 1A0
}

#new:Function $Function_8021812C_17 {
    0:  ADDIU     SP, SP, FFD8
    4:  SW        S1, 14 (SP)
    8:  COPY      S1, A0
    C:  SW        RA, 24 (SP)
   10:  SW        S4, 20 (SP)
   14:  SW        S3, 1C (SP)
   18:  SW        S2, 18 (SP)
   1C:  SW        S0, 10 (SP)
   20:  LW        S0, C (S1)
   24:  LW        A1, 0 (S0)
   28:  JAL       ~Func:get_variable
   2C:  ADDIU     S0, S0, 4
   30:  LW        A1, 0 (S0)
   34:  ADDIU     S0, S0, 4
   38:  COPY      A0, S1
   3C:  JAL       ~Func:get_variable
   40:  COPY      S3, V0
   44:  LW        A1, 0 (S0)
   48:  ADDIU     S0, S0, 4
   4C:  COPY      A0, S1
   50:  JAL       ~Func:get_variable
   54:  COPY      S2, V0
   58:  LW        A1, 0 (S0)
   5C:  ADDIU     S0, S0, 4
   60:  COPY      A0, S1
   64:  JAL       ~Func:get_variable
   68:  COPY      S4, V0
   6C:  COPY      A0, S1
   70:  LW        A1, 0 (S0)
   74:  JAL       ~Func:get_variable
   78:  COPY      S0, V0
   7C:  MTC1      V0, F2
   80:  NOP
   84:  CVT.S.W   F2, F2
   88:  LI        V0, 2
   8C:  LA        V1, $End[0]
   94:  SLL       A0, S3, 4
   98:  SUBU      A0, A0, S3
   9C:  SLL       A0, A0, 5
   A0:  ADDU      A0, A0, V1
   A4:  SLL       V1, S2, 1
   A8:  ADDU      V1, V1, S2
   AC:  SLLV      V1, V1, V0
   B0:  ADDU      A0, A0, V1
   B4:  MTC1      S4, F0
   B8:  NOP
   BC:  CVT.S.W   F0, F0
   C0:  SWC1      F0, 0 (A0)
   C4:  MTC1      S0, F0
   C8:  NOP
   CC:  CVT.S.W   F0, F0
   D0:  SWC1      F0, 4 (A0)
   D4:  SWC1      F2, 8 (A0)
   D8:  LW        RA, 24 (SP)
   DC:  LW        S4, 20 (SP)
   E0:  LW        S3, 1C (SP)
   E4:  LW        S2, 18 (SP)
   E8:  LW        S1, 14 (SP)
   EC:  LW        S0, 10 (SP)
   F0:  JR        RA
   F4:  ADDIU     SP, SP, 28
}

#new:Function $Function_80218224_17 {
    0:  ADDIU     SP, SP, FFD8
    4:  SW        S1, 14 (SP)
    8:  COPY      S1, A0
    C:  SW        RA, 20 (SP)
   10:  SW        S3, 1C (SP)
   14:  SW        S2, 18 (SP)
   18:  SW        S0, 10 (SP)
   1C:  LW        S0, C (S1)
   20:  LW        A1, 0 (S0)
   24:  JAL       ~Func:get_variable
   28:  ADDIU     S0, S0, 4
   2C:  LW        A1, 0 (S0)
   30:  ADDIU     S0, S0, 4
   34:  COPY      A0, S1
   38:  JAL       ~Func:get_variable
   3C:  COPY      S3, V0
   40:  LW        A1, 0 (S0)
   44:  ADDIU     S0, S0, 4
   48:  COPY      A0, S1
   4C:  JAL       ~Func:get_variable
   50:  COPY      S2, V0
   54:  LW        A1, 0 (S0)
   58:  ADDIU     S0, S0, 4
   5C:  JAL       ~Func:get_variable
   60:  COPY      A0, S1
   64:  LW        A1, 0 (S0)
   68:  JAL       ~Func:get_variable
   6C:  COPY      A0, S1
   70:  MTC1      V0, F0
   74:  NOP
   78:  CVT.S.W   F0, F0
   7C:  LI        V0, 2
   80:  LA        A0, $End[0]
   88:  SLL       V1, S3, 4
   8C:  SUBU      V1, V1, S3
   90:  SLL       V1, V1, 5
   94:  ADDU      V1, V1, A0
   98:  SLLV      S2, S2, V0
   9C:  ADDU      V1, V1, S2
   A0:  SWC1      F0, 6C (V1)
   A4:  LW        RA, 20 (SP)
   A8:  LW        S3, 1C (SP)
   AC:  LW        S2, 18 (SP)
   B0:  LW        S1, 14 (SP)
   B4:  LW        S0, 10 (SP)
   B8:  JR        RA
   BC:  ADDIU     SP, SP, 28
}

#new:Function $Function_802182E4_17 {
    0:  ADDIU     SP, SP, FFE0
    4:  SW        S1, 14 (SP)
    8:  COPY      S1, A0
    C:  SW        RA, 18 (SP)
   10:  SW        S0, 10 (SP)
   14:  LW        S0, C (S1)
   18:  LW        A1, 0 (S0)
   1C:  JAL       ~Func:get_variable
   20:  ADDIU     S0, S0, 4
   24:  LW        A1, 0 (S0)
   28:  ADDIU     S0, S0, 4
   2C:  JAL       ~Func:get_variable
   30:  COPY      A0, S1
   34:  LW        A1, 0 (S0)
   38:  ADDIU     S0, S0, 4
   3C:  JAL       ~Func:get_variable
   40:  COPY      A0, S1
   44:  LW        A1, 0 (S0)
   48:  ADDIU     S0, S0, 4
   4C:  JAL       ~Func:get_variable
   50:  COPY      A0, S1
   54:  LW        A1, 0 (S0)
   58:  JAL       ~Func:get_variable
   5C:  COPY      A0, S1
   60:  LW        RA, 18 (SP)
   64:  LW        S1, 14 (SP)
   68:  LW        S0, 10 (SP)
   6C:  LI        V0, 2
   70:  JR        RA
   74:  ADDIU     SP, SP, 20
}

#new:Function $Function_8021835C_17 {
    0:  ADDIU     SP, SP, FF78
    4:  LAW       V1, $End[780]
    C:  LI        V0, FFFF
   10:  SW        RA, 54 (SP)
   14:  SW        S8, 50 (SP)
   18:  SW        S7, 4C (SP)
   1C:  SW        S6, 48 (SP)
   20:  SW        S5, 44 (SP)
   24:  SW        S4, 40 (SP)
   28:  SW        S3, 3C (SP)
   2C:  SW        S2, 38 (SP)
   30:  SW        S1, 34 (SP)
   34:  SW        S0, 30 (SP)
   38:  SDC1      F30, 80 (SP)
   3C:  SDC1      F28, 78 (SP)
   40:  SDC1      F26, 70 (SP)
   44:  SDC1      F24, 68 (SP)
   48:  SDC1      F22, 60 (SP)
   4C:  BEQ       V1, V0, .o50C
   50:  SDC1      F20, 58 (SP)
   54:  BNE       V1, R0, .o1BC
   58:  CLEAR     A3
   5C:  LA        S0, $End[0]
   64:  LIF       F28, 90.0
   6C:  LIF       F26, 180.0
   74:  LIF       F20, 360.0
   7C:  LIF       F22, -180.0
        .o84
   84:  LI        V0, 1
   88:  BEQ       A3, V0, .oD0
   8C:  SLTI      V0, A3, 2
   90:  BEQL      V0, R0, .oA8
   94:  LI        V0, 2
   98:  BEQ       A3, R0, .oC0
   9C:  NOP
   A0:  BEQ       R0, R0, .o50C
   A4:  NOP
        .oA8
   A8:  BEQ       A3, V0, .oD8
   AC:  LI        V0, 3
   B0:  BEQ       A3, V0, .oDC
   B4:  LI        S4, 5
   B8:  BEQ       R0, R0, .o50C
   BC:  NOP
        .oC0
   C0:  LIF       F24, 10.0
   C8:  BEQ       R0, R0, .oE4
   CC:  LI        S4, 9
        .oD0
   D0:  BEQ       R0, R0, .oDC
   D4:  LI        S4, 7
        .oD8
   D8:  LI        S4, 7
        .oDC
   DC:  LIF       F24, 8.0
        .oE4
   E4:  CLEAR     S1
   E8:  SW        S4, 90 (S0)
   EC:  BLEZ      S4, .o18C
   F0:  SWC1      F24, 94 (S0)
   F4:  ADDIU     A1, S4, FFFF
   F8:  COPY      V1, S0
   FC:  LI        A0, 4
  100:  LIF       F9, 1.75
  108:  MTC1      R0, F8
  10C:  LAD       F6, $ConstDouble_8022AC40_17
        .o114
  114:  BNE       S1, A1, .o128
  118:  ADDU      V0, S0, A0
  11C:  LWC1      F0, 6C (V1)
  120:  BEQ       R0, R0, .o174
  124:  ADD.S     F0, F0, F28
        .o128
  128:  LWC1      F0, 6C (V1)
  12C:  LWC1      F4, 6C (V0)
  130:  SUB.S     F2, F4, F0
  134:  C.LT.S    F26, F2
  138:  NOP
  13C:  BC1F      .o14C
  140:  NOP
  144:  BEQ       R0, R0, .o15C
  148:  ADD.S     F0, F0, F20
        .o14C
  14C:  C.LT.S    F2, F22
  150:  NOP
  154:  BC1TL     .o15C
  158:  ADD.S     F4, F4, F20
        .o15C
  15C:  ADD.S     F0, F0, F4
  160:  CVT.D.S   F0, F0
  164:  MUL.D     F0, F0, F8
  168:  NOP
  16C:  ADD.D     F0, F0, F6
  170:  CVT.S.D   F0, F0
        .o174
  174:  SWC1      F0, 6C (V1)
  178:  ADDIU     V1, V1, 4
  17C:  ADDIU     S1, S1, 1
  180:  SLT       V0, S1, S4
  184:  BNE       V0, R0, .o114
  188:  ADDIU     A0, A0, 4
        .o18C
  18C:  COPY      A0, S0
  190:  JAL       $Function_80218058_17
  194:  SW        A3, 28 (SP)
  198:  LW        A3, 28 (SP)
  19C:  ADDIU     A3, A3, 1
  1A0:  SLTI      V0, A3, 4
  1A4:  BNE       V0, R0, .o84
  1A8:  ADDIU     S0, S0, 1E0
  1AC:  LI        V0, 1
  1B0:  SAW       V0, $End[780]
  1B8:  CLEAR     A3
        .o1BC
  1BC:  LA        V0, 8009A66C
  1C4:  COPY      T0, V0
  1C8:  LI        T1, 01004008
  1D0:  SW        T1, 18 (SP)
  1D4:  LI        T1, 06020004
  1DC:  LA        S5, $End[0]
  1E4:  SW        T1, 1C (SP)
  1E8:  LW        V1, 0 (T0)
  1EC:  LUI       V0, E700
  1F0:  COPY      A0, V1
  1F4:  ADDIU     V1, V1, 8
  1F8:  SW        V1, 0 (T0)
  1FC:  SW        V0, 0 (A0)
  200:  ADDIU     V0, V1, 8
  204:  SW        R0, 4 (A0)
  208:  SW        V0, 0 (T0)
  20C:  LUI       V0, DE00
  210:  SW        V0, 0 (V1)
  214:  LA        V0, $DisplayList_8021CF40_17
  21C:  SW        V0, 4 (V1)
        .o220
  220:  CLEAR     S1
  224:  LUI       V0, DE01
  228:  LWC1      F24, 94 (S5)
  22C:  LW        A0, 0 (T0)
  230:  LW        S4, 90 (S5)
  234:  ADDIU     T1, A0, 8
  238:  SW        T1, 10 (SP)
  23C:  LW        A2, 1DC (S5)
  240:  COPY      S3, T1
  244:  SW        V0, 0 (A0)
  248:  SLL       V1, A2, 5
  24C:  ADDIU     V0, V1, 8
  250:  ADDU      V0, A0, V0
  254:  ADDU      V1, T1, V1
  258:  SW        V0, 4 (A0)
  25C:  BLEZ      A2, .o480
  260:  SW        V1, 0 (T0)
  264:  ADDIU     V0, S4, FFFF
  268:  SLL       V0, V0, 2
  26C:  ADDU      V0, S5, V0
  270:  SW        V0, 14 (SP)
  274:  COPY      A1, S1
  278:  COPY      S8, S1
  27C:  COPY      S7, S1
  280:  COPY      S6, S1
  284:  COPY      S2, S5
  288:  ADDIU     S0, A0, 16
        .o28C
  28C:  MTC1      S1, F2
  290:  NOP
  294:  CVT.S.W   F2, F2
  298:  MTC1      S4, F0
  29C:  NOP
  2A0:  CVT.S.W   F0, F0
  2A4:  MUL.S     F2, F2, F0
  2A8:  NOP
  2AC:  MTC1      A2, F0
  2B0:  NOP
  2B4:  CVT.S.W   F0, F0
  2B8:  LWC1      F26, 98 (S2)
  2BC:  LWC1      F28, 9C (S2)
  2C0:  LWC1      F30, A0 (S2)
  2C4:  DIV.S     F2, F2, F0
  2C8:  TRUNC.W.S F10, F2
  2CC:  MFC1      A0, F10
  2D0:  NOP
  2D4:  MTC1      A0, F0
  2D8:  NOP
  2DC:  CVT.S.W   F0, F0
  2E0:  ADDIU     V1, A0, 1
  2E4:  SLT       V0, V1, S4
  2E8:  BNE       V0, R0, .o300
  2EC:  SUB.S     F6, F2, F0
  2F0:  LW        T1, 14 (SP)
  2F4:  LWC1      F22, 6C (T1)
  2F8:  BEQ       R0, R0, .o38C
  2FC:  MOV.S     F12, F22
        .o300
  300:  SLL       V0, V1, 2
  304:  ADDU      V0, S5, V0
  308:  LWC1      F4, 6C (V0)
  30C:  SLL       V0, A0, 2
  310:  ADDU      V0, S5, V0
  314:  LWC1      F12, 6C (V0)
  318:  SUB.S     F2, F4, F12
  31C:  LIF       F0, 180.0
  324:  NOP
  328:  C.LT.S    F0, F2
  32C:  NOP
  330:  BC1F      .o34C
  334:  NOP
  338:  LIF       F10, 360.0
  340:  NOP
  344:  SUB.S     F4, F4, F10
  348:  SUB.S     F2, F4, F12
        .o34C
  34C:  LIF       F0, -180.0
  354:  NOP
  358:  C.LT.S    F2, F0
  35C:  NOP
  360:  BC1FL     .o37C
  364:  SUB.S     F0, F4, F12
  368:  LIF       F10, 360.0
  370:  NOP
  374:  ADD.S     F4, F4, F10
  378:  SUB.S     F0, F4, F12
        .o37C
  37C:  MUL.S     F0, F0, F6
  380:  NOP
  384:  ADD.S     F22, F0, F12
  388:  MOV.S     F12, F22
        .o38C
  38C:  SW        A1, 20 (SP)
  390:  SW        A2, 24 (SP)
  394:  SW        A3, 28 (SP)
  398:  JAL       ~Func:sin_deg
  39C:  SW        T0, 2C (SP)
  3A0:  MUL.S     F20, F0, F24
  3A4:  NOP
  3A8:  JAL       ~Func:cos_deg
  3AC:  MOV.S     F12, F22
  3B0:  NEG.S     F0, F0
  3B4:  MUL.S     F0, F0, F24
  3B8:  NOP
  3BC:  ADD.S     F4, F26, F20
  3C0:  ADD.S     F2, F28, F0
  3C4:  SUB.S     F20, F26, F20
  3C8:  ADDIU     S2, S2, C
  3CC:  ADDIU     S1, S1, 1
  3D0:  SUB.S     F0, F28, F0
  3D4:  TRUNC.W.S F10, F4
  3D8:  MFC1      V0, F10
  3DC:  NOP
  3E0:  SH        V0, 0 (S3)
  3E4:  TRUNC.W.S F10, F2
  3E8:  MFC1      V0, F10
  3EC:  TRUNC.W.S F10, F30
  3F0:  MFC1      V1, F10
  3F4:  ADDIU     S3, S3, 10
  3F8:  SH        V0, FFF4 (S0)
  3FC:  SH        V1, FFF6 (S0)
  400:  SH        S6, FFFA (S0)
  404:  SH        R0, FFFC (S0)
  408:  SB        S7, FFFE (S0)
  40C:  SB        S8, FFFF (S0)
  410:  LW        A1, 20 (SP)
  414:  TRUNC.W.S F10, F20
  418:  MFC1      V0, F10
  41C:  SB        A1, 0 (S0)
  420:  ADDIU     S0, S0, 10
  424:  SH        V0, 0 (S3)
  428:  TRUNC.W.S F10, F0
  42C:  MFC1      V0, F10
  430:  NOP
  434:  SH        V0, FFF4 (S0)
  438:  LI        V0, 400
  43C:  SH        V1, FFF6 (S0)
  440:  SH        S6, FFFA (S0)
  444:  SH        V0, FFFC (S0)
  448:  SB        S7, FFFE (S0)
  44C:  SB        S8, FFFF (S0)
  450:  SB        A1, 0 (S0)
  454:  ADDIU     S0, S0, 10
  458:  ADDIU     S3, S3, 10
  45C:  ADDIU     A1, A1, 1E
  460:  ADDIU     S8, S8, 78
  464:  ADDIU     S7, S7, 32
  468:  LW        A2, 24 (SP)
  46C:  LW        A3, 28 (SP)
  470:  LW        T0, 2C (SP)
  474:  SLT       V0, S1, A2
  478:  BNE       V0, R0, .o28C
  47C:  ADDIU     S6, S6, 140
        .o480
  480:  ADDIU     A1, A2, FFFF
  484:  BLEZ      A1, .o4D8
  488:  CLEAR     S1
  48C:  LI        A2, 00020406
  494:  LW        A0, 10 (SP)
        .o498
  498:  LW        V1, 0 (T0)
  49C:  ADDIU     S1, S1, 1
  4A0:  COPY      V0, V1
  4A4:  ADDIU     V1, V1, 8
  4A8:  SW        A0, 4 (V0)
  4AC:  SW        V1, 0 (T0)
  4B0:  LW        T1, 18 (SP)
  4B4:  ADDIU     A0, A0, 20
  4B8:  SW        T1, 0 (V0)
  4BC:  ADDIU     V0, V1, 8
  4C0:  SW        V0, 0 (T0)
  4C4:  LW        T1, 1C (SP)
  4C8:  SLT       V0, S1, A1
  4CC:  SW        A2, 4 (V1)
  4D0:  BNE       V0, R0, .o498
  4D4:  SW        T1, 0 (V1)
        .o4D8
  4D8:  ADDIU     A3, A3, 1
  4DC:  SLTI      V0, A3, 4
  4E0:  BNE       V0, R0, .o220
  4E4:  ADDIU     S5, S5, 1E0
  4E8:  LA        V1, 8009A66C
  4F0:  LW        V0, 0 (V1)
  4F4:  COPY      A0, V0
  4F8:  ADDIU     V0, V0, 8
  4FC:  SW        V0, 0 (V1)
  500:  LUI       V0, E700
  504:  SW        V0, 0 (A0)
  508:  SW        R0, 4 (A0)
        .o50C
  50C:  LW        RA, 54 (SP)
  510:  LW        S8, 50 (SP)
  514:  LW        S7, 4C (SP)
  518:  LW        S6, 48 (SP)
  51C:  LW        S5, 44 (SP)
  520:  LW        S4, 40 (SP)
  524:  LW        S3, 3C (SP)
  528:  LW        S2, 38 (SP)
  52C:  LW        S1, 34 (SP)
  530:  LW        S0, 30 (SP)
  534:  LDC1      F30, 80 (SP)
  538:  LDC1      F28, 78 (SP)
  53C:  LDC1      F26, 70 (SP)
  540:  LDC1      F24, 68 (SP)
  544:  LDC1      F22, 60 (SP)
  548:  LDC1      F20, 58 (SP)
  54C:  JR        RA
  550:  ADDIU     SP, SP, 88
}

#new:Function $Function_802188B0_17 {
    0:  ADDIU     SP, SP, FFD8
    4:  LA        V0, $Function_8021835C_17
    C:  SW        V0, 1C (SP)
   10:  LI        V0, A
   14:  SW        V0, 14 (SP)
   18:  LI        V0, 1
   1C:  ADDIU     A0, SP, 10
   20:  SW        RA, 20 (SP)
   24:  SW        R0, 18 (SP)
   28:  JAL       ~Func:queue_render_task
   2C:  SW        V0, 10 (SP)
   30:  LW        RA, 20 (SP)
   34:  JR        RA
   38:  ADDIU     SP, SP, 28
}

#new:Function $Function_802188EC_17 {
    0:  SAW       R0, $End[780]
    8:  JR        RA
    C:  LI        V0, 2
}

#new:Function $Function_802188FC_17 {
    0:  ADDIU     SP, SP, FFE8
    4:  LI        V0, FFFF
    8:  LA        A1, $Function_802188B0_17
   10:  SW        RA, 10 (SP)
   14:  SAW       V0, $End[780]
   1C:  JAL       ~Func:create_generic_entity_world
   20:  CLEAR     A0
   24:  LW        RA, 10 (SP)
   28:  LI        V0, 2
   2C:  JR        RA
   30:  ADDIU     SP, SP, 18
}

#new:Function $Function_80218930_17 {
    0:  ADDIU     SP, SP, FFC0
    4:  SW        S1, 14 (SP)
    8:  COPY      S1, A0
    C:  SW        RA, 28 (SP)
   10:  SW        S5, 24 (SP)
   14:  SW        S4, 20 (SP)
   18:  SW        S3, 1C (SP)
   1C:  SW        S2, 18 (SP)
   20:  SW        S0, 10 (SP)
   24:  SDC1      F22, 38 (SP)
   28:  SDC1      F20, 30 (SP)
   2C:  LW        S0, C (S1)
   30:  LW        A1, 0 (S0)
   34:  JAL       ~Func:get_variable
   38:  ADDIU     S0, S0, 4
   3C:  LW        A1, 0 (S0)
   40:  ADDIU     S0, S0, 4
   44:  LW        S4, C (V0)
   48:  JAL       ~Func:get_variable
   4C:  COPY      A0, S1
   50:  LW        A1, 0 (S0)
   54:  ADDIU     S0, S0, 4
   58:  COPY      A0, S1
   5C:  JAL       ~Func:get_variable
   60:  COPY      S5, V0
   64:  LW        A1, 0 (S0)
   68:  ADDIU     S0, S0, 4
   6C:  COPY      A0, S1
   70:  JAL       ~Func:get_variable
   74:  COPY      S2, V0
   78:  LW        A1, 0 (S0)
   7C:  ADDIU     S0, S0, 4
   80:  MTC1      V0, F22
   84:  NOP
   88:  CVT.S.W   F22, F22
   8C:  JAL       ~Func:get_variable
   90:  COPY      A0, S1
   94:  LW        A1, 0 (S0)
   98:  ADDIU     S0, S0, 4
   9C:  COPY      A0, S1
   A0:  JAL       ~Func:get_variable
   A4:  COPY      S3, V0
   A8:  COPY      A0, S1
   AC:  LW        A1, 0 (S0)
   B0:  JAL       ~Func:get_variable
   B4:  COPY      S1, V0
   B8:  MOV.S     F12, F22
   BC:  JAL       ~Func:cos_deg
   C0:  COPY      S0, V0
   C4:  MTC1      S3, F20
   C8:  NOP
   CC:  CVT.S.W   F20, F20
   D0:  MUL.S     F0, F0, F20
   D4:  NOP
   D8:  MTC1      S5, F2
   DC:  NOP
   E0:  CVT.S.W   F2, F2
   E4:  SUB.S     F2, F2, F0
   E8:  MOV.S     F12, F22
   EC:  JAL       ~Func:sin_deg
   F0:  SWC1      F2, 4 (S4)
   F4:  MUL.S     F0, F0, F20
   F8:  NOP
   FC:  LIF       F2, 0.009938965
  108:  MTC1      S0, F4
  10C:  NOP
  110:  CVT.S.W   F4, F4
  114:  MUL.S     F4, F4, F2
  118:  NOP
  11C:  ADDU      S2, S2, S1
  120:  MTC1      S2, F2
  124:  NOP
  128:  CVT.S.W   F2, F2
  12C:  SUB.S     F2, F2, F0
  130:  SWC1      F4, 10 (S4)
  134:  SWC1      F2, 8 (S4)
  138:  LW        RA, 28 (SP)
  13C:  LW        S5, 24 (SP)
  140:  LW        S4, 20 (SP)
  144:  LW        S3, 1C (SP)
  148:  LW        S2, 18 (SP)
  14C:  LW        S1, 14 (SP)
  150:  LW        S0, 10 (SP)
  154:  LDC1      F22, 38 (SP)
  158:  LDC1      F20, 30 (SP)
  15C:  LI        V0, 2
  160:  JR        RA
  164:  ADDIU     SP, SP, 40
}

#new:Function $Function_80218A98_17 {
    0:  ADDIU     SP, SP, FFE0
    4:  LA        V1, $???_80222B68_17
    C:  SW        RA, 18 (SP)
   10:  LW        V0, 0 (V1)
   14:  ADDIU     A0, V0, 1
   18:  BEQ       A1, R0, .o4C
   1C:  SW        A0, 0 (V1)
   20:  JAL       ~Func:sfx_play_sound
   24:  LI        A0, D4
   28:  LI        V0, 8
   2C:  SW        V0, 10 (SP)
   30:  CLEAR     A0
   34:  LI        A1, 8B
   38:  COPY      A2, A0
   3C:  JAL       ~Func:bgm_set_song
   40:  LI        A3, 1F4
   44:  BEQ       R0, R0, .o94
   48:  CLEAR     V0
        .o4C
   4C:  LI        V0, 50
   50:  BEQ       A0, V0, .o68
   54:  LI        V0, 154
   58:  BEQ       A0, V0, .o78
   5C:  LI        V0, 8
   60:  BEQ       R0, R0, .o94
   64:  CLEAR     V0
        .o68
   68:  JAL       ~Func:bgm_init_music_players
   6C:  NOP
   70:  BEQ       R0, R0, .o94
   74:  CLEAR     V0
        .o78
   78:  SW        V0, 10 (SP)
   7C:  CLEAR     A0
   80:  LI        A1, D
   84:  LI        A2, 1
   88:  JAL       ~Func:bgm_set_song
   8C:  LI        A3, 1F4
   90:  LI        V0, 2
        .o94
   94:  LW        RA, 18 (SP)
   98:  JR        RA
   9C:  ADDIU     SP, SP, 20
}

#new:Function $Function_80218B38_17 {
    0:  ADDIU     SP, SP, FFE0
    4:  SW        S1, 14 (SP)
    8:  COPY      S1, A0
    C:  SW        RA, 18 (SP)
   10:  SW        S0, 10 (SP)
   14:  LW        S0, C (S1)
   18:  LW        A1, 0 (S0)
   1C:  JAL       ~Func:get_variable
   20:  ADDIU     S0, S0, 4
   24:  SLL       V0, V0, 2
   28:  LW        A1, 0 (S0)
   2C:  LTW       A2, V0 ($IntTable_80222D48_17)
   38:  JAL       ~Func:set_variable
   3C:  COPY      A0, S1
   40:  LW        RA, 18 (SP)
   44:  LW        S1, 14 (SP)
   48:  LW        S0, 10 (SP)
   4C:  LI        V0, 2
   50:  JR        RA
   54:  ADDIU     SP, SP, 20
}

#new:Function $Function_80218B90_17 {
    0:  ADDIU     SP, SP, FFE0
    4:  SW        S1, 14 (SP)
    8:  COPY      S1, A0
    C:  SW        RA, 18 (SP)
   10:  SW        S0, 10 (SP)
   14:  LW        S0, C (S1)
   18:  LW        A1, 0 (S0)
   1C:  JAL       ~Func:get_variable
   20:  ADDIU     S0, S0, 4
   24:  SLL       V0, V0, 2
   28:  LW        A1, 0 (S0)
   2C:  LTW       A2, V0 ($IntTable_80222E20_17)
   38:  JAL       ~Func:set_variable
   3C:  COPY      A0, S1
   40:  LW        RA, 18 (SP)
   44:  LW        S1, 14 (SP)
   48:  LW        S0, 10 (SP)
   4C:  LI        V0, 2
   50:  JR        RA
   54:  ADDIU     SP, SP, 20
}

#new:Function $Function_80218BE8_17 {
    0:  ADDIU     SP, SP, FFC0
    4:  SW        S2, 18 (SP)
    8:  COPY      S2, A0
    C:  SW        RA, 28 (SP)
   10:  SW        S5, 24 (SP)
   14:  SW        S4, 20 (SP)
   18:  SW        S3, 1C (SP)
   1C:  SW        S1, 14 (SP)
   20:  SW        S0, 10 (SP)
   24:  SDC1      F22, 38 (SP)
   28:  SDC1      F20, 30 (SP)
   2C:  LW        S0, C (S2)
   30:  LW        A1, 0 (S0)
   34:  JAL       ~Func:get_variable
   38:  ADDIU     S0, S0, 4
   3C:  COPY      S5, V0
   40:  LW        A1, 0 (S0)
   44:  ADDIU     S0, S0, 4
   48:  JAL       ~Func:get_variable
   4C:  COPY      A0, S2
   50:  COPY      S4, V0
   54:  LW        A1, 0 (S0)
   58:  ADDIU     S0, S0, 4
   5C:  JAL       ~Func:get_variable
   60:  COPY      A0, S2
   64:  LW        A1, 0 (S0)
   68:  ADDIU     S0, S0, 4
   6C:  MTC1      V0, F22
   70:  NOP
   74:  CVT.S.W   F22, F22
   78:  JAL       ~Func:get_variable
   7C:  COPY      A0, S2
   80:  COPY      A0, S2
   84:  LW        A1, 0 (S0)
   88:  JAL       ~Func:get_variable
   8C:  COPY      S3, V0
   90:  MOV.S     F12, F22
   94:  JAL       ~Func:cos_deg
   98:  COPY      S1, V0
   9C:  MTC1      S3, F20
   A0:  NOP
   A4:  CVT.S.W   F20, F20
   A8:  MUL.S     F0, F0, F20
   AC:  NOP
   B0:  MTC1      S5, F2
   B4:  NOP
   B8:  CVT.S.W   F2, F2
   BC:  SUB.S     F2, F2, F0
   C0:  ADDIU     S0, S0, 4
   C4:  TRUNC.W.S F4, F2
   C8:  MFC1      S5, F4
   CC:  JAL       ~Func:sin_deg
   D0:  MOV.S     F12, F22
   D4:  MUL.S     F0, F0, F20
   D8:  NOP
   DC:  LW        A1, 0 (S0)
   E0:  ADDIU     S0, S0, 4
   E4:  ADDU      S1, S4, S1
   E8:  MTC1      S1, F2
   EC:  NOP
   F0:  CVT.S.W   F2, F2
   F4:  SUB.S     F2, F2, F0
   F8:  COPY      A0, S2
   FC:  TRUNC.W.S F4, F2
  100:  MFC1      S4, F4
  104:  JAL       ~Func:set_variable
  108:  COPY      A2, S5
  10C:  COPY      A0, S2
  110:  LW        A1, 0 (S0)
  114:  JAL       ~Func:set_variable
  118:  COPY      A2, S4
  11C:  LW        RA, 28 (SP)
  120:  LW        S5, 24 (SP)
  124:  LW        S4, 20 (SP)
  128:  LW        S3, 1C (SP)
  12C:  LW        S2, 18 (SP)
  130:  LW        S1, 14 (SP)
  134:  LW        S0, 10 (SP)
  138:  LDC1      F22, 38 (SP)
  13C:  LDC1      F20, 30 (SP)
  140:  LI        V0, 2
  144:  JR        RA
  148:  ADDIU     SP, SP, 40
}

#new:Function $Function_80218DF0_17 {
    0:  ADDIU     SP, SP, FFE0
    4:  SW        S1, 14 (SP)
    8:  COPY      S1, A0
    C:  SW        RA, 18 (SP)
   10:  SW        S0, 10 (SP)
   14:  LW        S0, C (S1)
   18:  LW        A1, 0 (S0)
   1C:  JAL       ~Func:get_variable
   20:  ADDIU     S0, S0, 4
   24:  LW        A1, 0 (S0)
   28:  LW        S0, C (V0)
   2C:  JAL       ~Func:get_float_variable
   30:  COPY      A0, S1
   34:  SWC1      F0, 2C (S0)
   38:  SWC1      F0, 30 (S0)
   3C:  LW        RA, 18 (SP)
   40:  LW        S1, 14 (SP)
   44:  LW        S0, 10 (SP)
   48:  LI        V0, 2
   4C:  JR        RA
   50:  ADDIU     SP, SP, 20
}

#new:AnimatedModelNode $AnimatedModelNode_8021A120_17 {
@Position   0.000000 0.000000 0.000000
@Rotation   0.000000 0.000000 0.000000
@ModelID    00000058 
}

#new:AnimatedModelNode $AnimatedModelNode_8021A14C_17 {
@Position   0.000000 0.000000 0.000000
@Rotation   1.367840 0.000000 -0.049440
@Next       $AnimatedModelNode_8021A120_17 
@ModelID    00000057 
}

#new:AnimatedModelNode $AnimatedModelNode_8021A178_17 {
@Position   0.000000 0.000000 0.000000
@Rotation   0.000000 0.000000 0.000000
@Next       $AnimatedModelNode_8021A14C_17 
@ModelID    00000056 
}

#new:AnimatedModelNode $AnimatedModelNode_8021A1A4_17 {
@Position   0.000000 0.000000 0.000000
@Rotation   0.000000 0.000000 0.000000
@Next       $AnimatedModelNode_8021A178_17 
@ModelID    00000055 
}

#new:AnimatedModelNode $AnimatedModelNode_8021A1D0_17 {
@Position   0.000000 0.000000 0.000000
@Rotation   0.000000 0.000000 0.000000
@Next       $AnimatedModelNode_8021A1A4_17 
@ModelID    00000054 
}

#new:AnimatedModelNode $AnimatedModelNode_8021A1FC_17 {
@Position   0.000000 0.000000 0.000000
@Rotation   0.000000 0.000000 0.000000
@Next       $AnimatedModelNode_8021A1D0_17 
@ModelID    00000053 
}

#new:AnimatedModelNode $AnimatedModelNode_8021A228_17 {
@Position   0.000000 0.000000 0.000000
@Rotation   0.000000 0.000000 0.000000
@Next       $AnimatedModelNode_8021A1FC_17 
@ModelID    00000052 
}

#new:AnimatedModelNode $AnimatedModelNode_8021A254_17 {
@Position   0.000000 0.000000 0.000000
@Rotation   0.000000 0.000000 0.000000
@Next       $AnimatedModelNode_8021A228_17 
@ModelID    00000051 
}

#new:AnimatedModelNode $AnimatedModelNode_8021A280_17 {
@Position   0.000000 0.000000 0.000000
@Rotation   0.000000 0.000000 0.000000
@Next       $AnimatedModelNode_8021A254_17 
@ModelID    00000050 
}

#new:AnimatedModelNode $AnimatedModelNode_8021A2AC_17 {
@Position   0.000000 0.000000 0.000000
@Rotation   0.000000 0.000000 0.000000
@Next       $AnimatedModelNode_8021A280_17 
@ModelID    0000004F 
}

#new:AnimatedModelNode $AnimatedModelNode_8021A2D8_17 {
@Position   0.000000 0.000000 0.000000
@Rotation   0.000000 0.000000 0.000000
@Next       $AnimatedModelNode_8021A2AC_17 
@ModelID    0000004E 
}

#new:AnimatedModelNode $AnimatedModelNode_8021A304_17 {
@Position   0.000000 0.000000 0.000000
@Rotation   0.000000 0.000000 0.000000
@Child      $AnimatedModelNode_8021A2D8_17 
}

#new:AnimatedModelTree $AnimatedModelTree_8021A330_17 {
$AnimatedModelNode_8021A304_17 $AnimatedModelNode_8021A2D8_17 $AnimatedModelNode_8021A2AC_17 $AnimatedModelNode_8021A280_17 $AnimatedModelNode_8021A254_17 $AnimatedModelNode_8021A228_17 $AnimatedModelNode_8021A1FC_17 $AnimatedModelNode_8021A1D0_17 
$AnimatedModelNode_8021A1A4_17 $AnimatedModelNode_8021A178_17 $AnimatedModelNode_8021A14C_17 $AnimatedModelNode_8021A120_17 00000000 
}

#new:ModelAnimation $ModelAnimation_8021A364_17 {
	SetRotation ( 0001s 0.0 0.0 0.0 )
	SetPosition ( 0001s    0`s    0`s    0`s )
	SetScale    ( 0001s 1.0 1.0 1.0 )
	SetRotation ( 0002s 0.0 0.0 0.0 )
	SetPosition ( 0002s    0`s    0`s    0`s )
	SetScale    ( 0002s 1.0 1.0 1.0 )
	SetRotation ( 0003s 0.0 0.0 0.0 )
	SetPosition ( 0003s    0`s    0`s    0`s )
	SetScale    ( 0003s 1.0 1.0 1.0 )
	SetRotation ( 0004s 0.0 0.0 0.0 )
	SetPosition ( 0004s    0`s    0`s    0`s )
	SetScale    ( 0004s 1.0 1.0 1.0 )
	SetRotation ( 0005s 0.0 0.0 0.0 )
	SetPosition ( 0005s    0`s    0`s    0`s )
	SetScale    ( 0005s 1.0 1.0 1.0 )
	SetRotation ( 0006s 0.0 0.0 0.0 )
	SetPosition ( 0006s    0`s    0`s    0`s )
	SetScale    ( 0006s 1.0 1.0 1.0 )
	SetRotation ( 0007s 0.0 0.0 0.0 )
	SetPosition ( 0007s    0`s    0`s    0`s )
	SetScale    ( 0007s 1.0 1.0 1.0 )
	SetRotation ( 0008s 0.0 0.0 0.0 )
	SetPosition ( 0008s    0`s    0`s    0`s )
	SetScale    ( 0008s 1.0 1.0 1.0 )
	SetRotation ( 0009s 0.0 0.0 0.0 )
	SetPosition ( 0009s    0`s    0`s    0`s )
	SetScale    ( 0009s 1.0 1.0 1.0 )
	SetRotation ( 000As 0.0 0.0 0.0 )
	SetPosition ( 000As    0`s    0`s    0`s )
	SetScale    ( 000As 1.0 1.0 1.0 )
	SetRotation ( 000Bs 1.37 0.0 -0.05 )
	SetPosition ( 000Bs    0`s    0`s    0`s )
	SetScale    ( 000Bs 1.0 1.0 1.0 )
	SetRotation ( 000Cs 0.0 0.0 0.0 )
	SetPosition ( 000Cs    0`s    0`s    0`s )
	SetScale    ( 000Cs 1.0 1.0 1.0 )
	Wait        ( 0001s )
	SetRotation ( 0002s -13.765 -0.705 -5.855 )
	SetPosition ( 0002s    1`s   32`s   -4`s )
	SetRotation ( 0003s -14.7 -1.65 -12.745 )
	SetPosition ( 0003s    5`s   44`s   -6`s )
	SetRotation ( 0004s -3.525 -0.195 -6.355 )
	SetPosition ( 0004s    2`s   27`s   -1`s )
	SetRotation ( 0005s 0.85 0.2 -26.46 )
	SetPosition ( 0005s   19`s   80`s    0`s )
	SetRotation ( 0006s 7.655 3.335 -47.095 )
	SetPosition ( 0006s   53`s  121`s    9`s )
	SetRotation ( 0007s 17.75 3.71 -23.43 )
	SetPosition ( 0007s   18`s   66`s   14`s )
	SetRotation ( 0008s 86.99 12.745 -13.43 )
	SetPosition ( 0008s   10`s   39`s   43`s )
	SetRotation ( 0009s 8.045 -0.285 4.015 )
	SetPosition ( 0009s    0`s    6`s    1`s )
	SetRotation ( 000As 2.775 -0.495 20.25 )
	SetPosition ( 000As    1`s   -7`s    0`s )
	SetRotation ( 000Bs 1.72 -0.27 9.94 )
	SetPosition ( 000Bs   -1`s    1`s    0`s )
	SetRotation ( 000Cs -4.86 0.14 3.325 )
	SetPosition ( 000Cs    0`s    9`s    0`s )
	Wait        ( 0001s )
	SetRotation ( 0002s -27.395 -2.78 -11.375 )
	SetPosition ( 0002s    5`s   62`s  -13`s )
	SetRotation ( 0003s -28.735 -6.42 -24.705 )
	SetPosition ( 0003s   18`s   84`s  -20`s )
	SetRotation ( 0004s -7.005 -0.775 -12.68 )
	SetPosition ( 0004s    6`s   54`s   -3`s )
	SetRotation ( 0005s 1.525 0.76 -52.91 )
	SetPosition ( 0005s   68`s  145`s    2`s )
	SetRotation ( 0006s -169.555 168.795 85.96 )
	SetPosition ( 0006s  171`s  164`s   31`s )
	SetRotation ( 0007s 32.885 13.97 -45.095 )
	SetPosition ( 0007s   56`s  114`s   43`s )
	SetRotation ( 0008s 0.0 153.82 -180.0 )
	SetPosition ( 0008s   17`s    8`s   76`s )
	SetRotation ( 0009s 16.05 -1.125 7.945 )
	SetPosition ( 0009s   -1`s   13`s    3`s )
	SetRotation ( 000As 5.21 -1.92 40.46 )
	SetPosition ( 000As    8`s  -13`s   -1`s )
	SetRotation ( 000Bs 2.025 -0.595 19.925 )
	SetPosition ( 000Bs   -2`s    3`s    0`s )
	SetRotation ( 000Cs -9.7 0.565 6.635 )
	SetPosition ( 000Cs    0`s   17`s   -1`s )
	Wait        ( 0001s )
	SetRotation ( 0002s -40.815 -6.09 -16.27 )
	SetPosition ( 0002s   11`s   88`s  -27`s )
	SetRotation ( 0003s -41.725 -13.855 -35.365 )
	SetPosition ( 0003s   36`s  116`s  -42`s )
	SetRotation ( 0004s -10.4 -1.745 -18.965 )
	SetPosition ( 0004s   13`s   79`s   -7`s )
	SetRotation ( 0005s 1.875 1.555 -79.355 )
	SetPosition ( 0005s  137`s  182`s    4`s )
	SetRotation ( 0006s -173.635 161.44 37.595 )
	SetPosition ( 0006s  275`s  107`s   50`s )
	SetRotation ( 0007s 44.01 28.87 -64.995 )
	SetPosition ( 0007s  106`s  131`s   81`s )
	SetRotation ( 0008s -86.985 12.745 13.43 )
	SetPosition ( 0008s    9`s  -12`s   41`s )
	SetRotation ( 0009s 23.98 -2.495 11.725 )
	SetPosition ( 0009s   -2`s   20`s    4`s )
	SetRotation ( 000As 7.005 -4.1 60.63 )
	SetPosition ( 000As   19`s  -16`s   -2`s )
	SetRotation ( 000Bs 2.265 -0.975 29.915 )
	SetPosition ( 000Bs   -1`s    5`s    0`s )
	SetRotation ( 000Cs -14.505 1.26 9.89 )
	SetPosition ( 000Cs   -1`s   25`s   -1`s )
	Wait        ( 0001s )
	SetRotation ( 0002s -54.035 -10.43 -20.295 )
	SetPosition ( 0002s   19`s  110`s  -45`s )
	SetRotation ( 0003s -53.68 -23.385 -44.48 )
	SetPosition ( 0003s   59`s  137`s  -68`s )
	SetRotation ( 0004s -13.675 -3.07 -25.19 )
	SetPosition ( 0004s   21`s  103`s  -11`s )
	SetRotation ( 0005s -178.17 177.575 74.185 )
	SetPosition ( 0005s  211`s  185`s    7`s )
	SetRotation ( 0006s 177.735 159.635 -12.605 )
	SetPosition ( 0006s  297`s   -6`s   54`s )
	SetRotation ( 0007s 49.84 46.41 -85.405 )
	SetPosition ( 0007s  154`s  111`s  118`s )
	SetRotation ( 0008s 0.0 0.0 0.0 )
	SetPosition ( 0008s    3`s   35`s   16`s )
	SetRotation ( 0009s 31.82 -4.38 15.285 )
	SetPosition ( 0009s   -2`s   26`s    4`s )
	SetRotation ( 000As 7.945 -6.765 80.8 )
	SetPosition ( 000As   34`s  -13`s   -4`s )
	SetRotation ( 000Bs 2.44 -1.385 39.9 )
	SetPosition ( 000Bs    1`s    7`s    0`s )
	SetRotation ( 000Cs -19.275 2.225 13.085 )
	SetPosition ( 000Cs   -1`s   33`s   -2`s )
	Wait        ( 0001s )
	SetRotation ( 0002s -67.165 -15.565 -23.265 )
	SetPosition ( 0002s   28`s  126`s  -65`s )
	SetRotation ( 0003s -64.925 -34.445 -51.965 )
	SetPosition ( 0003s   82`s  146`s  -95`s )
	SetRotation ( 0004s -16.795 -4.745 -31.335 )
	SetPosition ( 0004s   31`s  125`s  -17`s )
	SetRotation ( 0005s -178.59 176.81 47.71 )
	SetPosition ( 0005s  274`s  157`s    9`s )
	SetRotation ( 0006s 170.76 164.7 -62.055 )
	SetPosition ( 0006s  223`s  -97`s   40`s )
	SetRotation ( 0007s -135.47 115.71 66.17 )
	SetPosition ( 0007s  189`s   63`s  145`s )
	SetRotation ( 0008s 86.99 12.745 -13.43 )
	SetPosition ( 0008s   13`s   72`s   59`s )
	SetRotation ( 0009s 39.555 -6.725 18.57 )
	SetPosition ( 0009s   -2`s   31`s    4`s )
	SetRotation ( 000As 7.895 -9.585 101.07 )
	SetPosition ( 000As   51`s   -4`s   -7`s )
	SetRotation ( 000Bs 2.535 -1.82 49.89 )
	SetPosition ( 000Bs    4`s   10`s   -1`s )
	SetRotation ( 000Cs -23.98 3.46 16.18 )
	SetPosition ( 000Cs   -1`s   40`s   -2`s )
	Wait        ( 0001s )
	SetRotation ( 0002s -80.42 -21.23 -25.0 )
	SetPosition ( 0002s   37`s  136`s  -87`s )
	SetRotation ( 0003s -76.13 -46.57 -57.585 )
	SetPosition ( 0003s  104`s  143`s -120`s )
	SetRotation ( 0004s -19.725 -6.74 -37.4 )
	SetPosition ( 0004s   42`s  144`s  -23`s )
	SetRotation ( 0005s -179.315 176.315 21.205 )
	SetPosition ( 0005s  314`s  104`s   10`s )
	SetRotation ( 0006s -9.87 6.985 70.51 )
	SetPosition ( 0006s  102`s -100`s   18`s )
	SetRotation ( 0007s 180.0 105.05 0.0 )
	SetPosition ( 0007s  204`s    0`s  156`s )
	SetRotation ( 0008s 0.0 153.82 -180.0 )
	SetPosition ( 0008s   21`s   39`s   92`s )
	SetRotation ( 0009s 47.195 -9.49 21.52 )
	SetPosition ( 0009s   -2`s   36`s    4`s )
	SetRotation ( 000As 6.855 -12.215 121.53 )
	SetPosition ( 000As   66`s    9`s   -9`s )
	SetRotation ( 000Bs 2.555 -2.265 59.875 )
	SetPosition ( 000Bs    9`s   13`s   -1`s )
	SetRotation ( 000Cs -28.625 4.935 19.175 )
	SetPosition ( 000Cs   -2`s   46`s   -3`s )
	Wait        ( 0001s )
	SetRotation ( 0002s -94.095 -27.12 -25.305 )
	SetPosition ( 0002s   46`s  140`s -107`s )
	SetRotation ( 0003s -88.76 -59.315 -60.385 )
	SetPosition ( 0003s  122`s  129`s -141`s )
	SetRotation ( 0004s -22.44 -9.025 -43.39 )
	SetPosition ( 0004s   55`s  160`s  -30`s )
	SetRotation ( 0005s 179.825 176.195 -5.305 )
	SetPosition ( 0005s  323`s   40`s   10`s )
	SetRotation ( 0006s -4.17 0.87 23.59 )
	SetPosition ( 0006s   15`s   -8`s    2`s )
	SetPosition ( 0007s  204`s    1`s  156`s )
	SetRotation ( 0008s -86.985 12.745 13.43 )
	SetPosition ( 0008s   13`s   16`s   58`s )
	SetRotation ( 0009s 54.75 -12.615 24.1 )
	SetPosition ( 0009s   -1`s   40`s    3`s )
	SetRotation ( 000As 4.92 -14.315 142.235 )
	SetPosition ( 000As   78`s   29`s  -11`s )
	SetRotation ( 000Bs 2.5 -2.705 69.87 )
	SetPosition ( 000Bs   14`s   17`s   -1`s )
	SetRotation ( 000Cs -33.195 6.645 22.05 )
	SetPosition ( 000Cs   -2`s   52`s   -3`s )
	Wait        ( 0001s )
	SetRotation ( 0002s -108.56 -32.9 -23.97 )
	SetPosition ( 0002s   54`s  137`s -127`s )
	SetRotation ( 0003s 72.27 -107.965 124.085 )
	SetPosition ( 0003s  134`s  108`s -155`s )
	SetRotation ( 0004s -24.915 -11.575 -49.305 )
	SetPosition ( 0004s   69`s  174`s  -38`s )
	SetRotation ( 0005s 178.995 176.475 -31.815 )
	SetPosition ( 0005s  298`s  -20`s    9`s )
	SetRotation ( 0006s 4.17 0.87 -23.59 )
	SetPosition ( 0006s   21`s  120`s    3`s )
	SetPosition ( 0007s  204`s    2`s  156`s )
	SetRotation ( 0008s 0.0 0.0 0.0 )
	SetPosition ( 0008s    7`s   62`s   33`s )
	SetRotation ( 0009s 62.27 -16.045 26.265 )
	SetPosition ( 0009s   -1`s   43`s    2`s )
	SetRotation ( 000As 2.325 -15.61 163.165 )
	SetPosition ( 000As   86`s   53`s  -12`s )
	SetRotation ( 000Bs 2.37 -3.135 79.865 )
	SetPosition ( 000Bs   20`s   21`s   -2`s )
	SetRotation ( 000Cs -37.695 8.58 24.79 )
	SetPosition ( 000Cs   -2`s   57`s   -3`s )
	Wait        ( 0001s )
	SetRotation ( 0002s -124.24 -38.175 -20.75 )
	SetPosition ( 0002s   61`s  128`s -143`s )
	SetRotation ( 0003s 17.34 -98.31 164.985 )
	SetPosition ( 0003s  139`s   82`s -160`s )
	SetRotation ( 0004s -27.13 -14.37 -55.17 )
	SetPosition ( 0004s   84`s  185`s  -47`s )
	SetRotation ( 0005s 178.38 177.09 -58.305 )
	SetPosition ( 0005s  246`s  -63`s    8`s )
	SetRotation ( 0006s 9.87 6.985 -70.515 )
	SetPosition ( 0006s  115`s  204`s   21`s )
	SetPosition ( 0007s  204`s    1`s  156`s )
	SetRotation ( 0008s 86.99 12.745 -13.43 )
	SetPosition ( 0008s   17`s   97`s   76`s )
	SetRotation ( 0009s 69.795 -19.72 27.985 )
	SetPosition ( 0009s    0`s   44`s    1`s )
	SetRotation ( 000As -0.59 -15.915 -175.79 )
	SetPosition ( 000As   87`s   78`s  -12`s )
	SetRotation ( 000Bs 2.165 -3.53 89.87 )
	SetPosition ( 000Bs   27`s   26`s   -2`s )
	SetRotation ( 000Cs -42.12 10.715 27.38 )
	SetPosition ( 000Cs   -2`s   61`s   -3`s )
	Wait        ( 0001s )
	SetRotation ( 0002s 38.56 -137.5 164.51 )
	SetPosition ( 0002s   66`s  115`s -155`s )
	SetRotation ( 0003s -61.425 -104.01 -130.215 )
	SetPosition ( 0003s  135`s   55`s -156`s )
	SetRotation ( 0004s -29.075 -17.365 -61.0 )
	SetPosition ( 0004s  100`s  193`s  -55`s )
	SetRotation ( 0005s 178.1 177.92 -84.775 )
	SetPosition ( 0005s  176`s  -78`s    5`s )
	SetRotation ( 0006s -170.76 164.7 62.055 )
	SetPosition ( 0006s  238`s  191`s   43`s )
	SetPosition ( 0007s  204`s    0`s  156`s )
	SetRotation ( 0008s 0.0 153.82 -180.0 )
	SetPosition ( 0008s   25`s   62`s  109`s )
	SetRotation ( 0009s 77.4 -23.58 29.205 )
	SetPosition ( 0009s    0`s   44`s    0`s )
	SetRotation ( 000As -3.42 -15.205 -154.77 )
	SetPosition ( 000As   82`s  103`s  -11`s )
	SetRotation ( 000Bs 1.89 -3.885 99.88 )
	SetPosition ( 000Bs   33`s   32`s   -3`s )
	SetRotation ( 000Cs -46.48 13.045 29.815 )
	SetPosition ( 000Cs   -2`s   64`s   -3`s )
	Wait        ( 0001s )
	SetRotation ( 0002s 19.795 -134.62 171.66 )
	SetPosition ( 0002s   69`s   98`s -162`s )
	SetRotation ( 0003s -86.12 -116.4 -119.825 )
	SetPosition ( 0003s  125`s   32`s -143`s )
	SetRotation ( 0004s -30.71 -20.535 -66.825 )
	SetPosition ( 0004s  117`s  197`s  -65`s )
	SetRotation ( 0005s -1.78 1.215 68.775 )
	SetPosition ( 0005s  105`s  -59`s    3`s )
	SetRotation ( 0006s -177.735 159.635 12.605 )
	SetPosition ( 0006s  308`s   91`s   56`s )
	SetRotation ( 0008s -86.985 12.745 13.43 )
	SetPosition ( 0008s   17`s   36`s   74`s )
	SetRotation ( 0009s 85.155 -27.55 29.88 )
	SetPosition ( 0009s    0`s   43`s   -1`s )
	SetRotation ( 000As -5.785 -13.555 -133.925 )
	SetPosition ( 000As   70`s  126`s   -9`s )
	SetRotation ( 000Bs 1.57 -4.19 109.89 )
	SetPosition ( 000Bs   40`s   39`s   -3`s )
	SetRotation ( 000Cs -50.78 15.545 32.09 )
	SetPosition ( 000Cs   -2`s   67`s   -3`s )
	Wait        ( 0001s )
	SetRotation ( 0002s 0.0 -133.605 -180.0 )
	SetPosition ( 0002s   70`s   79`s -164`s )
	SetRotation ( 0003s 80.06 -50.775 58.93 )
	SetPosition ( 0003s  107`s   16`s -124`s )
	SetRotation ( 0004s -32.03 -23.85 -72.685 )
	SetPosition ( 0004s  133`s  198`s  -74`s )
	SetRotation ( 0005s -1.29 0.495 42.325 )
	SetPosition ( 0005s   47`s  -11`s    1`s )
	SetRotation ( 0006s 173.635 161.44 -37.595 )
	SetPosition ( 0006s  280`s  -26`s   51`s )
	SetRotation ( 0008s 0.0 0.0 0.0 )
	SetPosition ( 0008s   11`s   80`s   49`s )
	SetRotation ( 0009s 93.18 -31.575 29.95 )
	SetPosition ( 0009s    1`s   41`s   -3`s )
	SetRotation ( 000As -7.385 -11.21 -113.315 )
	SetPosition ( 000As   54`s  143`s   -7`s )
	SetRotation ( 000Bs 1.19 -4.425 119.91 )
	SetPosition ( 000Bs   46`s   45`s   -3`s )
	SetRotation ( 000Cs -55.03 18.2 34.19 )
	SetPosition ( 000Cs   -2`s   69`s   -3`s )
	Wait        ( 0001s )
	SetRotation ( 0002s -19.795 -134.62 -171.66 )
	SetPosition ( 0002s   69`s   60`s -161`s )
	SetRotation ( 0003s 68.615 -38.39 54.07 )
	SetPosition ( 0003s   86`s   10`s  -99`s )
	SetRotation ( 0004s -33.0 -27.27 -78.63 )
	SetPosition ( 0004s  150`s  196`s  -83`s )
	SetRotation ( 0005s -0.525 0.075 15.875 )
	SetPosition ( 0005s   14`s   57`s    0`s )
	SetRotation ( 0006s 169.555 168.795 -85.96 )
	SetPosition ( 0006s  174`s  -83`s   31`s )
	SetRotation ( 0008s 86.985 12.745 -13.43 )
	SetPosition ( 0008s   21`s  114`s   92`s )
	SetRotation ( 0009s 101.575 -35.56 29.33 )
	SetPosition ( 0009s    2`s   38`s   -4`s )
	SetRotation ( 000As -8.04 -8.455 -92.94 )
	SetPosition ( 000As   35`s  154`s   -4`s )
	SetRotation ( 000Bs 0.775 -4.6 129.935 )
	SetPosition ( 000Bs   52`s   52`s   -4`s )
	SetRotation ( 000Cs -59.25 21.0 36.105 )
	Wait        ( 0001s )
	SetRotation ( 0002s -38.56 -137.5 -164.51 )
	SetPosition ( 0002s   65`s   41`s -152`s )
	SetRotation ( 0003s 57.48 -26.92 47.16 )
	SetPosition ( 0003s   63`s   15`s  -73`s )
	SetRotation ( 0004s -33.585 -30.76 -84.705 )
	SetPosition ( 0004s  167`s  192`s  -92`s )
	SetRotation ( 0005s 0.35 0.03 -10.585 )
	SetPosition ( 0005s   14`s  134`s    0`s )
	SetRotation ( 0006s -7.655 3.335 47.085 )
	SetPosition ( 0006s   61`s  -40`s   11`s )
	SetRotation ( 0008s 0.0 153.82 -180.0 )
	SetPosition ( 0008s   29`s   77`s  126`s )
	SetRotation ( 0009s 110.48 -39.43 27.93 )
	SetPosition ( 0009s    3`s   34`s   -6`s )
	SetRotation ( 000As -7.68 -5.66 -72.725 )
	SetPosition ( 000As   14`s  158`s   -1`s )
	SetRotation ( 000Bs 0.345 -4.7 139.96 )
	SetPosition ( 000Bs   56`s   60`s   -4`s )
	SetRotation ( 000Cs -63.45 23.925 37.835 )
	Wait        ( 0001s )
	SetRotation ( 0002s 124.23 -38.175 20.75 )
	SetPosition ( 0002s   59`s   25`s -139`s )
	SetRotation ( 0003s 45.82 -16.825 38.58 )
	SetPosition ( 0003s   42`s   32`s  -48`s )
	SetRotation ( 0004s 146.26 -145.71 89.025 )
	SetPosition ( 0004s  183`s  184`s -101`s )
	SetRotation ( 0005s 1.15 0.385 -37.035 )
	SetPosition ( 0005s   46`s  203`s    1`s )
	SetRotation ( 0006s 0.0 0.0 0.0 )
	SetPosition ( 0006s   17`s   75`s    3`s )
	SetRotation ( 0008s -86.985 12.745 13.43 )
	SetPosition ( 0008s   21`s   49`s   91`s )
	SetRotation ( 0009s 120.04 -43.065 25.65 )
	SetPosition ( 0009s    3`s   29`s   -7`s )
	SetRotation ( 000As -6.38 -3.155 -52.565 )
	SetPosition ( 000As   -5`s  155`s    0`s )
	SetRotation ( 000Bs -0.105 -4.715 149.985 )
	SetPosition ( 000Bs   60`s   66`s   -4`s )
	SetRotation ( 000Cs -67.655 26.96 39.365 )
	SetPosition ( 000Cs   -2`s   68`s   -3`s )
	Wait        ( 0001s )
	SetRotation ( 0002s 108.56 -32.9 23.97 )
	SetPosition ( 0002s   52`s   11`s -122`s )
	SetRotation ( 0003s 33.185 -8.635 28.42 )
	SetPosition ( 0003s   23`s   58`s  -27`s )
	SetRotation ( 0004s 146.585 -142.195 82.475 )
	SetPosition ( 0004s  198`s  174`s -110`s )
	SetRotation ( 0005s 1.71 1.055 -63.485 )
	SetPosition ( 0005s  105`s  249`s    3`s )
	SetRotation ( 0006s 7.655 3.335 -47.095 )
	SetPosition ( 0006s   72`s  186`s   13`s )
	SetRotation ( 0008s 0.0 0.0 0.0 )
	SetPosition ( 0008s   15`s   91`s   66`s )
	SetRotation ( 0009s 130.39 -46.355 22.39 )
	SetPosition ( 0009s    4`s   24`s   -8`s )
	SetRotation ( 000As -4.3 -1.25 -32.38 )
	SetPosition ( 000As  -22`s  145`s    3`s )
	SetRotation ( 000Bs -0.55 -4.66 160.01 )
	SetPosition ( 000Bs   63`s   73`s   -4`s )
	SetRotation ( 000Cs -71.89 30.085 40.675 )
	SetPosition ( 000Cs   -2`s   67`s   -3`s )
	Wait        ( 0001s )
	SetRotation ( 0002s 94.09 -27.115 25.305 )
	SetPosition ( 0002s   44`s    3`s -103`s )
	SetRotation ( 0003s 19.47 -2.915 16.85 )
	SetPosition ( 0003s   11`s   92`s  -13`s )
	SetRotation ( 0004s 147.46 -138.73 75.56 )
	SetPosition ( 0004s  212`s  161`s -118`s )
	SetRotation ( 0005s 1.91 1.91 -89.94 )
	SetPosition ( 0005s  177`s  264`s    5`s )
	SetRotation ( 0006s -169.555 168.795 85.96 )
	SetPosition ( 0006s  191`s  220`s   34`s )
	SetRotation ( 0008s 86.985 12.745 -13.43 )
	SetPosition ( 0008s   25`s  123`s  109`s )
	SetRotation ( 0009s 141.63 -49.145 18.08 )
	SetPosition ( 0009s    4`s   19`s   -9`s )
	SetRotation ( 000As -1.69 -0.18 -12.155 )
	SetPosition ( 000As  -34`s  130`s    4`s )
	SetRotation ( 000Bs -0.975 -4.53 170.035 )
	SetPosition ( 000Bs   64`s   80`s   -5`s )
	SetRotation ( 000Cs -76.185 33.29 41.755 )
	SetPosition ( 000Cs   -2`s   65`s   -2`s )
	Wait        ( 0001s )
	SetRotation ( 0002s 80.42 -21.23 25.0 )
	SetPosition ( 0002s   35`s    0`s  -83`s )
	SetRotation ( 0003s 4.935 -0.185 4.285 )
	SetPosition ( 0003s    6`s  131`s   -7`s )
	SetRotation ( 0004s 148.96 -135.375 68.175 )
	SetPosition ( 0004s  226`s  145`s -125`s )
	SetRotation ( 0005s -178.295 177.245 63.6 )
	SetPosition ( 0005s  248`s  245`s    8`s )
	SetRotation ( 0006s -173.635 161.44 37.595 )
	SetPosition ( 0006s  296`s  153`s   53`s )
	SetRotation ( 0008s 0.0 153.82 -180.0 )
	SetPosition ( 0008s   33`s   84`s  142`s )
	SetRotation ( 0009s 153.77 -51.3 12.77 )
	SetPosition ( 0009s    4`s   13`s   -9`s )
	SetRotation ( 000As 1.13 -0.08 8.1 )
	SetPosition ( 000As  -39`s  112`s    5`s )
	SetRotation ( 000Bs -1.375 -4.32 -179.955 )
	SetPosition ( 000Bs   64`s   86`s   -5`s )
	SetRotation ( 000Cs -80.58 36.55 42.565 )
	SetPosition ( 000Cs   -1`s   63`s   -2`s )
	Wait        ( 0001s )
	SetRotation ( 0002s 67.165 -15.565 23.265 )
	SetPosition ( 0002s   27`s    0`s  -63`s )
	SetRotation ( 0003s -9.84 -0.74 -8.55 )
	SetPosition ( 0003s    9`s  169`s  -10`s )
	SetRotation ( 0004s 151.18 -132.195 60.21 )
	SetPosition ( 0004s  237`s  126`s -132`s )
	SetRotation ( 0005s -178.855 176.575 37.11 )
	SetPosition ( 0005s  304`s  195`s   10`s )
	SetRotation ( 0006s 177.735 159.635 -12.605 )
	SetPosition ( 0006s  319`s   29`s   58`s )
	SetRotation ( 0008s -86.985 12.745 13.43 )
	SetPosition ( 0008s   25`s   54`s  107`s )
	SetRotation ( 0009s 166.665 -52.665 6.62 )
	SetPosition ( 0009s    4`s    6`s   -9`s )
	SetRotation ( 000As 3.81 -0.965 28.34 )
	SetPosition ( 000As  -39`s   93`s    5`s )
	SetRotation ( 000Bs -1.725 -4.05 -169.94 )
	SetPosition ( 000Bs   62`s   91`s   -5`s )
	SetRotation ( 000Cs -85.115 39.86 43.1 )
	SetPosition ( 000Cs   -1`s   60`s   -2`s )
	Wait        ( 0001s )
	SetRotation ( 0002s 54.035 -10.43 20.295 )
	SetPosition ( 0002s   19`s    6`s  -45`s )
	SetRotation ( 0003s -24.155 -4.505 -20.845 )
	SetPosition ( 0003s   19`s  203`s  -22`s )
	SetRotation ( 0004s 154.21 -129.27 51.555 )
	SetPosition ( 0004s  248`s  104`s -137`s )
	SetRotation ( 0005s -179.655 176.215 10.605 )
	SetPosition ( 0005s  332`s  125`s   11`s )
	SetRotation ( 0006s 170.76 164.7 -62.055 )
	SetPosition ( 0006s  246`s  -70`s   44`s )
	SetRotation ( 0008s 0.0 0.0 0.0 )
	SetPosition ( 0008s   19`s   95`s   82`s )
	SetRotation ( 0009s -180.0 -53.13 0.0 )
	SetPosition ( 0009s    4`s    0`s   -9`s )
	SetRotation ( 000As 6.025 -2.715 48.53 )
	SetPosition ( 000As  -33`s   76`s    4`s )
	SetRotation ( 000Bs -2.03 -3.72 -159.925 )
	SetPosition ( 000Bs   59`s   96`s   -5`s )
	SetRotation ( 000Cs -89.845 43.185 43.29 )
	SetPosition ( 000Cs   -1`s   56`s   -1`s )
	Wait        ( 0001s )
	SetRotation ( 0002s 40.815 -6.09 16.27 )
	SetPosition ( 0002s   12`s   16`s  -29`s )
	SetRotation ( 0003s -37.52 -11.115 -31.975 )
	SetPosition ( 0003s   36`s  229`s  -42`s )
	SetRotation ( 0004s 158.14 -126.695 42.1 )
	SetPosition ( 0004s  256`s   80`s -142`s )
	SetRotation ( 0005s 179.48 176.26 -15.91 )
	SetPosition ( 0005s  327`s   49`s   10`s )
	SetRotation ( 0006s -9.87 6.985 70.51 )
	SetPosition ( 0006s  125`s  -81`s   22`s )
	SetRotation ( 0008s 86.985 12.745 -13.43 )
	SetPosition ( 0008s   29`s  124`s  125`s )
	SetPosition ( 0009s    4`s    1`s   -9`s )
	SetRotation ( 000As 7.495 -5.12 68.695 )
	SetPosition ( 000As  -23`s   63`s    3`s )
	SetRotation ( 000Bs -2.27 -3.35 -149.92 )
	SetPosition ( 000Bs   55`s   99`s   -5`s )
	SetRotation ( 000Cs -94.84 46.515 43.1 )
	SetPosition ( 000Cs   -1`s   52`s   -1`s )
	Wait        ( 0001s )
	SetRotation ( 0002s 27.395 -2.78 11.375 )
	SetPosition ( 0002s    7`s   30`s  -18`s )
	SetRotation ( 0003s -49.8 -20.01 -41.615 )
	SetPosition ( 0003s   57`s  245`s  -66`s )
	SetRotation ( 0004s 162.985 -124.575 31.8 )
	SetPosition ( 0004s  263`s   54`s -146`s )
	SetRotation ( 0005s 178.715 176.685 -42.41 )
	SetPosition ( 0005s  290`s  -16`s    9`s )
	SetRotation ( 0006s -4.17 0.87 23.59 )
	SetPosition ( 0006s   39`s    0`s    7`s )
	SetRotation ( 0008s 0.0 153.82 180.0 )
	SetPosition ( 0008s   37`s   84`s  159`s )
	SetPosition ( 0009s    4`s    2`s   -9`s )
	SetRotation ( 000As 8.045 -7.89 88.895 )
	SetPosition ( 000As   -9`s   54`s    1`s )
	SetRotation ( 000Bs -2.44 -2.935 -139.92 )
	SetPosition ( 000Bs   49`s  101`s   -5`s )
	SetRotation ( 000Cs -100.195 49.82 42.445 )
	SetPosition ( 000Cs    0`s   47`s   -1`s )
	Wait        ( 0001s )
	SetRotation ( 0002s 13.765 -0.705 5.855 )
	SetPosition ( 0002s    5`s   45`s  -12`s )
	SetRotation ( 0003s -61.22 -30.62 -49.66 )
	SetPosition ( 0003s   81`s  248`s  -93`s )
	SetRotation ( 0004s 165.495 -123.775 26.805 )
	SetPosition ( 0004s  266`s   50`s -147`s )
	SetRotation ( 0005s 178.225 177.41 -68.895 )
	SetPosition ( 0005s  230`s  -60`s    7`s )
	SetRotation ( 0006s 4.17 0.87 -23.59 )
	SetPosition ( 0006s   44`s  120`s    8`s )
	SetRotation ( 0008s -86.985 12.745 13.43 )
	SetPosition ( 0008s   28`s   53`s  124`s )
	SetPosition ( 0009s    4`s    1`s   -9`s )
	SetRotation ( 000As 7.595 -10.675 109.225 )
	SetPosition ( 000As    3`s   51`s    0`s )
	SetRotation ( 000Bs -2.54 -2.495 -129.925 )
	SetPosition ( 000Bs   42`s  102`s   -5`s )
	SetRotation ( 000Cs -106.0 53.065 41.235 )
	SetPosition ( 000Cs    0`s   41`s    0`s )
	Wait        ( 0001s )
	SetRotation ( 0002s 0.0 0.0 0.0 )
	SetPosition ( 0002s    4`s   61`s  -11`s )
	SetRotation ( 0003s -72.335 -42.44 -55.955 )
	SetPosition ( 0003s  104`s  238`s -119`s )
	SetRotation ( 0004s 168.175 -123.11 21.66 )
	SetPosition ( 0004s  268`s   44`s -149`s )
	SetRotation ( 0005s -1.905 1.735 84.645 )
	SetPosition ( 0005s  158`s  -73`s    5`s )
	SetRotation ( 0006s 9.87 6.985 -70.515 )
	SetPosition ( 0006s  139`s  196`s   25`s )
	SetRotation ( 0008s 0.0 0.0 0.0 )
	SetPosition ( 0008s   23`s   92`s   99`s )
	SetPosition ( 0009s    4`s    0`s   -9`s )
	SetRotation ( 000As 6.175 -13.13 129.78 )
	SetPosition ( 000As   16`s   54`s   -2`s )
	SetRotation ( 000Bs -2.555 -2.05 -119.935 )
	SetPosition ( 000Bs   35`s  101`s   -5`s )
	SetRotation ( 000Cs -112.405 56.205 39.345 )
	SetPosition ( 000Cs    0`s   35`s    0`s )
	Wait        ( 0001s )
	SetRotation ( 0002s -13.765 -0.705 -5.855 )
	SetPosition ( 0002s    6`s   76`s  -15`s )
	SetRotation ( 0003s -84.23 -55.025 -59.905 )
	SetPosition ( 0003s  123`s  216`s -142`s )
	SetRotation ( 0004s 170.995 -122.585 16.375 )
	SetPosition ( 0004s  270`s   37`s -150`s )
	SetRotation ( 0005s -1.625 0.905 58.195 )
	SetPosition ( 0005s   90`s  -53`s    3`s )
	SetRotation ( 0006s -170.76 164.7 62.055 )
	SetPosition ( 0006s  261`s  173`s   47`s )
	SetRotation ( 0008s 86.985 12.745 -13.43 )
	SetPosition ( 0008s   33`s  121`s  142`s )
	SetRotation ( 000As 3.94 -14.94 150.585 )
	SetPosition ( 000As   24`s   61`s   -3`s )
	SetRotation ( 000Bs -2.5 -1.61 -109.945 )
	SetPosition ( 000Bs   26`s   98`s   -5`s )
	SetRotation ( 000Cs -119.58 59.205 36.61 )
	SetPosition ( 000Cs    0`s   28`s    0`s )
	Wait        ( 0001s )
	SetRotation ( 0002s -27.395 -2.78 -11.375 )
	SetPosition ( 0002s   10`s   89`s  -25`s )
	SetRotation ( 0003s 80.025 -112.135 121.085 )
	SetPosition ( 0003s  138`s  186`s -158`s )
	SetRotation ( 0004s 173.93 -122.205 10.98 )
	SetPosition ( 0004s  272`s   27`s -151`s )
	SetRotation ( 0005s -1.0 0.29 31.745 )
	SetPosition ( 0005s   41`s   -6`s    1`s )
	SetRotation ( 0006s -177.735 159.635 12.605 )
	SetPosition ( 0006s  330`s   64`s   60`s )
	SetRotation ( 0008s 0.0 153.82 180.0 )
	SetPosition ( 0008s   40`s   79`s  175`s )
	SetRotation ( 000As 1.175 -15.855 171.58 )
	SetPosition ( 000As   28`s   70`s   -3`s )
	SetRotation ( 000Bs -2.365 -1.185 -99.96 )
	SetPosition ( 000Bs   16`s   94`s   -5`s )
	SetRotation ( 000Cs -127.715 61.98 32.855 )
	SetPosition ( 000Cs    0`s   21`s    0`s )
	Wait        ( 0001s )
	SetRotation ( 0002s -40.82 -6.09 -16.27 )
	SetPosition ( 0002s   16`s   97`s  -39`s )
	SetRotation ( 0003s 44.595 -100.56 142.385 )
	SetPosition ( 0003s  145`s  149`s -167`s )
	SetRotation ( 0004s 176.95 -121.975 5.505 )
	SetPosition ( 0004s  273`s   14`s -151`s )
	SetRotation ( 0005s -0.18 0.01 5.285 )
	SetPosition ( 0005s   20`s   56`s    0`s )
	SetRotation ( 0006s 173.635 161.44 -37.595 )
	SetPosition ( 0006s  302`s  -62`s   54`s )
	SetRotation ( 0008s -86.985 12.745 13.43 )
	SetPosition ( 0008s   32`s   46`s  140`s )
	SetRotation ( 000As -1.755 -15.75 -167.365 )
	SetPosition ( 000As   26`s   81`s   -3`s )
	SetRotation ( 000Bs -2.16 -0.79 -89.97 )
	SetPosition ( 000Bs    7`s   87`s   -5`s )
	SetRotation ( 000Cs -137.025 64.44 27.87 )
	SetPosition ( 000Cs    0`s   12`s    0`s )
	Wait        ( 0001s )
	SetRotation ( 0002s -54.035 -10.43 -20.295 )
	SetPosition ( 0002s   24`s  101`s  -56`s )
	SetRotation ( 0003s -44.595 -100.565 -142.38 )
	SetPosition ( 0003s  144`s  110`s -166`s )
	SetRotation ( 0004s -180.0 -121.89 0.0 )
	SetPosition ( 0004s  274`s    0`s -152`s )
	SetRotation ( 0005s 0.69 0.13 -21.165 )
	SetPosition ( 0005s   33`s  121`s    1`s )
	SetRotation ( 0006s 169.555 168.795 -85.96 )
	SetPosition ( 0006s  194`s -129`s   35`s )
	SetRotation ( 0008s 0.0 0.0 0.0 )
	SetPosition ( 0008s   26`s   84`s  115`s )
	SetRotation ( 000As -4.44 -14.645 -146.405 )
	SetPosition ( 000As   17`s   91`s   -2`s )
	SetRotation ( 000Bs -1.89 -0.435 -79.98 )
	SetPosition ( 000Bs   -2`s   78`s   -5`s )
	SetRotation ( 000Cs -147.67 66.48 21.515 )
	SetPosition ( 000Cs    0`s    3`s    0`s )
	Wait        ( 0001s )
	SetRotation ( 0002s -67.165 -15.565 -23.265 )
	SetPosition ( 0002s   32`s   99`s  -76`s )
	SetRotation ( 0003s -80.025 -112.135 -121.085 )
	SetPosition ( 0003s  135`s   73`s -156`s )
	SetPosition ( 0004s  275`s    1`s -152`s )
	SetRotation ( 0005s 1.41 0.625 -47.62 )
	SetPosition ( 0005s   77`s  172`s    2`s )
	SetRotation ( 0006s -7.655 3.335 47.085 )
	SetPosition ( 0006s   80`s  -95`s   14`s )
	SetRotation ( 0008s 86.985 12.745 -13.43 )
	SetPosition ( 0008s   36`s  111`s  158`s )
	SetRotation ( 000As -6.535 -12.685 -125.65 )
	SetPosition ( 000As    3`s   97`s    0`s )
	SetRotation ( 000Bs -1.565 -0.135 -69.995 )
	SetPosition ( 000Bs  -12`s   68`s   -5`s )
	SetRotation ( 000Cs -156.005 67.595 16.19 )
	SetPosition ( 000Cs    0`s    6`s    0`s )
	Wait        ( 0001s )
	SetRotation ( 0002s -80.42 -21.23 -25.0 )
	SetPosition ( 0002s   42`s   91`s  -98`s )
	SetRotation ( 0003s 84.23 -55.025 59.905 )
	SetPosition ( 0003s  120`s   42`s -138`s )
	SetPosition ( 0004s  275`s    2`s -153`s )
	SetRotation ( 0005s 1.835 1.385 -74.065 )
	SetPosition ( 0005s  143`s  197`s    4`s )
	SetRotation ( 0006s 0.0 0.0 0.0 )
	SetPosition ( 0006s   34`s   10`s    6`s )
	SetRotation ( 0008s 0.0 153.82 180.0 )
	SetPosition ( 0008s   44`s   67`s  192`s )
	SetRotation ( 000As -7.765 -10.14 -105.145 )
	SetPosition ( 000As  -14`s   98`s    2`s )
	SetRotation ( 000Bs -1.185 0.105 -60.01 )
	SetPosition ( 000Bs  -22`s   55`s   -6`s )
	SetRotation ( 000Cs -164.94 68.385 10.265 )
	SetPosition ( 000Cs    0`s    8`s    1`s )
	Wait        ( 0001s )
	SetRotation ( 0002s -98.775 -21.565 22.78 )
	SetPosition ( 0002s    7`s   14`s -112`s )
	SetRotation ( 0003s 72.335 -42.44 55.955 )
	SetPosition ( 0003s  100`s   20`s -115`s )
	SetPosition ( 0004s  276`s    1`s -153`s )
	SetRotation ( 0005s -178.13 177.745 79.48 )
	SetPosition ( 0005s  217`s  189`s    7`s )
	SetPosition ( 0006s   34`s   13`s    6`s )
	SetRotation ( 0008s -86.985 12.745 13.43 )
	SetPosition ( 0008s   36`s   33`s  157`s )
	SetRotation ( 000As -8.02 -7.325 -84.845 )
	SetPosition ( 000As  -35`s   93`s    4`s )
	SetRotation ( 000Bs 0.62 0.32 -18.365 )
	SetPosition ( 000Bs  -49`s   35`s   -5`s )
	SetRotation ( 000Cs -174.295 68.81 3.915 )
	SetPosition ( 000Cs    0`s    9`s    1`s )
	Wait        ( 0001s )
	SetRotation ( 0002s 68.71 -170.57 -112.82 )
	SetPosition ( 0002s   37`s  -65`s -100`s )
	SetRotation ( 0003s 61.22 -30.62 49.66 )
	SetPosition ( 0003s   78`s    9`s  -89`s )
	SetPosition ( 0004s  277`s    0`s -154`s )
	SetRotation ( 0005s -178.48 176.95 53.01 )
	SetPosition ( 0005s  284`s  148`s    9`s )
	SetPosition ( 0006s   34`s   16`s    6`s )
	SetRotation ( 0008s 0.0 0.0 0.0 )
	SetPosition ( 0008s   30`s   68`s  132`s )
	SetRotation ( 000As -7.27 -4.605 -64.66 )
	SetPosition ( 000As  -55`s   81`s    7`s )
	SetRotation ( 000Bs 2.11 -0.715 23.255 )
	SetPosition ( 000Bs  -54`s    4`s   -6`s )
	SetRotation ( 000Cs 176.195 68.845 -2.61 )
	Wait        ( 0001s )
	SetRotation ( 0002s 68.03 172.37 -71.785 )
	SetPosition ( 0002s  114`s -100`s  -67`s )
	SetRotation ( 0003s 49.8 -20.01 41.615 )
	SetPosition ( 0003s   55`s    9`s  -64`s )
	SetRotation ( 0005s -179.15 176.39 26.515 )
	SetPosition ( 0005s  329`s   81`s   10`s )
	SetPosition ( 0006s   34`s   17`s    6`s )
	SetRotation ( 0008s 86.985 12.745 -13.43 )
	SetPosition ( 0008s   40`s   93`s  175`s )
	SetRotation ( 000As -5.635 -2.305 -44.495 )
	SetPosition ( 000As  -73`s   63`s   10`s )
	SetRotation ( 000Bs 2.54 -2.485 64.875 )
	SetPosition ( 000Bs  -36`s  -20`s   -8`s )
	SetRotation ( 000Cs 166.785 68.5 -9.025 )
	SetPosition ( 000Cs    0`s    6`s    1`s )
	Wait        ( 0001s )
	SetRotation ( 0002s 79.36 159.27 -27.955 )
	SetPosition ( 0002s  192`s  -69`s  -33`s )
	SetRotation ( 0003s 37.52 -11.115 31.975 )
	SetPosition ( 0003s   36`s   21`s  -41`s )
	SetRotation ( 0005s 180.0 176.185 0.0 )
	SetPosition ( 0005s  345`s    0`s   11`s )
	SetPosition ( 0006s   34`s   16`s    6`s )
	SetRotation ( 0008s 0.0 153.82 180.0 )
	SetPosition ( 0008s   48`s   47`s  208`s )
	SetRotation ( 000As -3.305 -0.71 -24.295 )
	SetPosition ( 000As  -88`s   40`s   12`s )
	SetRotation ( 000Bs 1.685 -4.09 106.55 )
	SetPosition ( 000Bs   -5`s  -28`s   -9`s )
	SetRotation ( 000Cs 157.755 67.78 -15.05 )
	SetPosition ( 000Cs    0`s    3`s    1`s )
	Wait        ( 0001s )
	SetRotation ( 0002s 97.665 158.045 19.79 )
	SetPosition ( 0002s  227`s   11`s  -18`s )
	SetRotation ( 0003s 24.155 -4.505 20.845 )
	SetPosition ( 0003s   21`s   41`s  -24`s )
	SetPosition ( 0005s  345`s    3`s   11`s )
	SetPosition ( 0006s   34`s   13`s    6`s )
	SetRotation ( 0008s -86.985 12.745 13.43 )
	SetPosition ( 0008s   40`s   11`s  174`s )
	SetRotation ( 000As -0.57 -0.02 -4.05 )
	SetPosition ( 000As  -96`s   27`s   13`s )
	SetRotation ( 000Bs -0.03 -4.72 148.315 )
	SetPosition ( 000Bs   20`s  -15`s  -10`s )
	SetRotation ( 000Cs 163.115 68.255 -11.49 )
	SetPosition ( 000Cs    0`s    5`s    0`s )
	Wait        ( 0001s )
	SetRotation ( 0002s 110.835 169.56 64.53 )
	SetPosition ( 0002s  197`s   96`s  -31`s )
	SetRotation ( 0003s 9.84 -0.74 8.55 )
	SetPosition ( 0003s   13`s   67`s  -15`s )
	SetPosition ( 0005s  345`s    6`s   11`s )
	SetPosition ( 0006s   34`s   10`s    6`s )
	SetRotation ( 0008s 0.0 0.0 0.0 )
	SetPosition ( 0008s   34`s   44`s  149`s )
	SetRotation ( 000As 2.24 -0.32 16.205 )
	SetPosition ( 000As  -98`s   12`s   13`s )
	SetRotation ( 000Bs -1.725 -4.05 -169.94 )
	SetPosition ( 000Bs   27`s   10`s  -10`s )
	SetRotation ( 000Cs 168.645 68.6 -7.765 )
	Wait        ( 0001s )
	SetRotation ( 0002s -67.705 -6.58 -74.395 )
	SetPosition ( 0002s  118`s  140`s  -65`s )
	SetRotation ( 0003s -4.935 -0.185 -4.285 )
	SetPosition ( 0003s   14`s   94`s  -16`s )
	SetPosition ( 0005s  345`s    7`s   11`s )
	SetPosition ( 0006s   34`s   11`s    6`s )
	SetRotation ( 0008s 86.985 12.745 -13.43 )
	SetPosition ( 0008s   44`s   66`s  192`s )
	SetRotation ( 000As 4.765 -1.57 36.425 )
	SetPosition ( 000As  -94`s   -3`s   13`s )
	SetRotation ( 000Bs -1.62 -4.15 -173.275 )
	SetPosition ( 000Bs   27`s    9`s  -10`s )
	SetRotation ( 000Cs 174.295 68.81 -3.915 )
	SetPosition ( 000Cs    0`s    3`s    0`s )
	Wait        ( 0001s )
	SetRotation ( 0002s -78.335 -20.195 -30.885 )
	SetPosition ( 0002s   35`s  112`s -101`s )
	SetRotation ( 0003s -19.47 -2.915 -16.85 )
	SetPosition ( 0003s   22`s  120`s  -25`s )
	SetPosition ( 0005s  345`s    6`s   11`s )
	SetPosition ( 0006s   34`s   12`s    6`s )
	SetRotation ( 0008s 0.0 153.82 180.0 )
	SetPosition ( 0008s   52`s   18`s  225`s )
	SetRotation ( 000As 6.71 -3.615 56.595 )
	SetPosition ( 000As  -84`s  -17`s   11`s )
	SetRotation ( 000Bs -1.495 -4.24 -176.615 )
	SetPosition ( 000Bs   27`s    7`s  -10`s )
	SetRotation ( 000Cs 180.0 68.88 0.0 )
	SetPosition ( 000Cs    0`s    0`s    0`s )
	Wait        ( 0001s )
	SetRotation ( 0002s -96.54 -22.305 16.79 )
	SetPosition ( 0002s   -6`s   28`s -119`s )
	SetRotation ( 0003s -33.19 -8.635 -28.42 )
	SetPosition ( 0003s   36`s  139`s  -42`s )
	SetPosition ( 0005s  345`s    3`s   11`s )
	SetPosition ( 0006s   34`s   11`s    6`s )
	SetRotation ( 0008s -86.985 12.745 13.43 )
	SetPosition ( 0008s   44`s  -20`s  190`s )
	SetRotation ( 000As 7.83 -6.205 76.765 )
	SetPosition ( 000As  -70`s  -29`s    9`s )
	SetRotation ( 000Bs -1.375 -4.32 -179.955 )
	SetPosition ( 000Bs   27`s    3`s  -10`s )
	Wait        ( 0001s )
	SetRotation ( 0002s 69.675 -168.575 -118.145 )
	SetPosition ( 0002s   15`s  -66`s -109`s )
	SetRotation ( 0003s -45.82 -16.825 -38.58 )
	SetPosition ( 0003s   57`s  148`s  -65`s )
	SetPosition ( 0005s  345`s    0`s   11`s )
	SetPosition ( 0006s   34`s   10`s    6`s )
	SetRotation ( 0008s 0.0 0.0 0.0 )
	SetPosition ( 0008s   38`s    9`s  165`s )
	SetRotation ( 000As 7.99 -9.025 97.0 )
	SetPosition ( 000As  -54`s  -35`s    7`s )
	SetPosition ( 000Bs   27`s    0`s  -10`s )
	Wait        ( 0001s )
	SetRotation ( 0003s -57.48 -26.92 -47.16 )
	SetPosition ( 0003s   80`s  147`s  -92`s )
	SetPosition ( 0005s  345`s    1`s   11`s )
	SetRotation ( 000As 7.14 -11.72 117.415 )
	SetPosition ( 000As  -38`s  -29`s    5`s )
	Wait        ( 0001s )
	SetRotation ( 0003s -68.615 -38.39 -54.07 )
	SetPosition ( 0003s  103`s  133`s -119`s )
	SetPosition ( 0005s  345`s    2`s   11`s )
	SetRotation ( 000As 5.37 -13.95 138.07 )
	SetPosition ( 000As  -24`s  -18`s    3`s )
	Wait        ( 0001s )
	SetRotation ( 0003s -80.065 -50.775 -58.93 )
	SetPosition ( 0003s  124`s  107`s -143`s )
	SetPosition ( 0005s  345`s    1`s   11`s )
	SetRotation ( 000As 2.88 -15.425 158.96 )
	SetPosition ( 000As  -14`s   -7`s    2`s )
	Wait        ( 0001s )
	SetRotation ( 0003s 86.12 -116.4 119.825 )
	SetPosition ( 0003s  140`s   71`s -161`s )
	SetPosition ( 0005s  345`s    0`s   11`s )
	SetRotation ( 000As 0.0 -15.94 180.0 )
	SetPosition ( 000As  -10`s    0`s    1`s )
	Wait        ( 0001s )
	RestoreReadPos  
	End         
}

#new:AnimatedModelNode $AnimatedModelNode_8021C308_17 {
@Position   102.000000 99.000000 -10.000000
@Rotation   0.000000 0.000000 22.885220
@DisplayList   $AnimatedModelNode_8021C308_17 
}

#new:AnimatedModelNode $AnimatedModelNode_8021C334_17 {
@Position   137.000000 94.000000 -10.000000
@Rotation   0.000000 0.000000 60.481583
@Next       $AnimatedModelNode_8021C308_17 
@DisplayList   $AnimatedModelNode_8021C308_17 
}

#new:AnimatedModelNode $AnimatedModelNode_8021C360_17 {
@Position   127.000000 56.000000 -10.000000
@Rotation   0.000000 0.000000 -29.751884
@Next       $AnimatedModelNode_8021C334_17 
@DisplayList   $AnimatedModelNode_8021C308_17 
}

#new:AnimatedModelNode $AnimatedModelNode_8021C38C_17 {
@Position   106.000000 23.000000 -10.000000
@Rotation   0.000000 0.000000 -19.995728
@Next       $AnimatedModelNode_8021C360_17 
@DisplayList   $AnimatedModelNode_8021C308_17 
}

#new:AnimatedModelNode $AnimatedModelNode_8021C3B8_17 {
@Position   122.000000 -13.000000 -10.000000
@Rotation   0.000000 0.000000 29.999084
@Next       $AnimatedModelNode_8021C38C_17 
@DisplayList   $AnimatedModelNode_8021C308_17 
}

#new:AnimatedModelNode $AnimatedModelNode_8021C3E4_17 {
@Position   120.000000 108.000000 -11.000000
@Rotation   0.000000 0.000000 115.607162
@Next       $AnimatedModelNode_8021C3B8_17 
@DisplayList   $AnimatedModelNode_8021C308_17 
}

#new:AnimatedModelNode $AnimatedModelNode_8021C410_17 {
@Position   140.000000 73.000000 -11.000000
@Rotation   0.000000 0.000000 15.359355
@Next       $AnimatedModelNode_8021C3E4_17 
@DisplayList   $AnimatedModelNode_8021C308_17 
}

#new:AnimatedModelNode $AnimatedModelNode_8021C43C_17 {
@Position   112.000000 42.000000 -11.000000
@Rotation   0.000000 0.000000 -44.875027
@Next       $AnimatedModelNode_8021C410_17 
@DisplayList   $AnimatedModelNode_8021C308_17 
}

#new:AnimatedModelNode $AnimatedModelNode_8021C468_17 {
@Position   110.000000 3.000000 -11.000000
@Rotation   0.000000 0.000000 4.998932
@Next       $AnimatedModelNode_8021C43C_17 
@DisplayList   $AnimatedModelNode_8021C308_17 
}

#new:AnimatedModelNode $AnimatedModelNode_8021C494_17 {
@Position   0.000000 0.000000 0.000000
@Rotation   0.000000 0.000000 0.000000
@Child      $AnimatedModelNode_8021C468_17 
}

#new:AnimatedModelTree $AnimatedModelTree_8021C4C0_17 {
$AnimatedModelNode_8021C494_17 $AnimatedModelNode_8021C468_17 $AnimatedModelNode_8021C43C_17 $AnimatedModelNode_8021C410_17 $AnimatedModelNode_8021C3E4_17 $AnimatedModelNode_8021C3B8_17 $AnimatedModelNode_8021C38C_17 $AnimatedModelNode_8021C360_17 
$AnimatedModelNode_8021C334_17 $AnimatedModelNode_8021C308_17 00000000 
}

#new:AnimatedModelNode $AnimatedModelNode_8021C4F0_17 {
@Position   62.000000 53.000000 -20.000000
@Rotation   0.000000 0.000000 71.523178
@DisplayList   $AnimatedModelNode_8021C4F0_17 
}

#new:AnimatedModelNode $AnimatedModelNode_8021C51C_17 {
@Position   97.000000 51.000000 -20.000000
@Rotation   0.000000 0.000000 71.781364
@Next       $AnimatedModelNode_8021C4F0_17 
@DisplayList   $AnimatedModelNode_8021C4F0_17 
}

#new:AnimatedModelNode $AnimatedModelNode_8021C548_17 {
@Position   75.000000 19.000000 -20.000000
@Rotation   0.000000 0.000000 -55.625477
@Next       $AnimatedModelNode_8021C51C_17 
@DisplayList   $AnimatedModelNode_8021C4F0_17 
}

#new:AnimatedModelNode $AnimatedModelNode_8021C574_17 {
@Position   69.000000 -19.000000 -20.000000
@Rotation   0.000000 0.000000 0.670186
@Next       $AnimatedModelNode_8021C548_17 
@DisplayList   $AnimatedModelNode_8021C4F0_17 
}

#new:AnimatedModelNode $AnimatedModelNode_8021C5A0_17 {
@Position   76.000000 62.000000 -21.000000
@Rotation   0.000000 0.000000 135.482040
@Next       $AnimatedModelNode_8021C574_17 
@DisplayList   $AnimatedModelNode_8021C4F0_17 
}

#new:AnimatedModelNode $AnimatedModelNode_8021C5CC_17 {
@Position   96.000000 28.000000 -21.000000
@Rotation   0.000000 0.000000 8.075197
@Next       $AnimatedModelNode_8021C5A0_17 
@DisplayList   $AnimatedModelNode_8021C4F0_17 
}

#new:AnimatedModelNode $AnimatedModelNode_8021C5F8_17 {
@Position   67.000000 0.000000 -21.000000
@Rotation   0.000000 0.000000 -29.328897
@Next       $AnimatedModelNode_8021C5CC_17 
@DisplayList   $AnimatedModelNode_8021C4F0_17 
}

#new:AnimatedModelNode $AnimatedModelNode_8021C624_17 {
@Position   0.000000 0.000000 0.000000
@Rotation   0.000000 0.000000 0.000000
@Child      $AnimatedModelNode_8021C5F8_17 
}

#new:AnimatedModelTree $AnimatedModelTree_8021C650_17 {
$AnimatedModelNode_8021C624_17 $AnimatedModelNode_8021C5F8_17 $AnimatedModelNode_8021C5CC_17 $AnimatedModelNode_8021C5A0_17 $AnimatedModelNode_8021C574_17 $AnimatedModelNode_8021C548_17 $AnimatedModelNode_8021C51C_17 $AnimatedModelNode_8021C4F0_17 
00000000 
}

#new:AnimatedModelNode $AnimatedModelNode_8021C678_17 {
@Position   132.000000 -5.000000 -5.000000
@Rotation   0.000000 0.000000 165.157013
@DisplayList   $AnimatedModelNode_8021C678_17 
}

#new:AnimatedModelNode $AnimatedModelNode_8021C6A4_17 {
@Position   98.000000 4.000000 -5.000000
@Rotation   0.000000 0.000000 -80.120239
@Next       $AnimatedModelNode_8021C678_17 
@DisplayList   $AnimatedModelNode_8021C678_17 
}

#new:AnimatedModelNode $AnimatedModelNode_8021C6D0_17 {
@Position   129.000000 -26.000000 -6.000000
@Rotation   0.000000 0.000000 125.160072
@Next       $AnimatedModelNode_8021C6A4_17 
@DisplayList   $AnimatedModelNode_8021C678_17 
}

#new:AnimatedModelNode $AnimatedModelNode_8021C6FC_17 {
@Position   120.000000 12.000000 -6.000000
@Rotation   0.000000 0.000000 -154.983368
@Next       $AnimatedModelNode_8021C6D0_17 
@DisplayList   $AnimatedModelNode_8021C678_17 
}

#new:AnimatedModelNode $AnimatedModelNode_8021C728_17 {
@Position   87.000000 -13.000000 -6.000000
@Rotation   0.000000 0.000000 -39.749748
@Next       $AnimatedModelNode_8021C6FC_17 
@DisplayList   $AnimatedModelNode_8021C678_17 
}

#new:AnimatedModelNode $AnimatedModelNode_8021C754_17 {
@Position   0.000000 0.000000 0.000000
@Rotation   0.000000 0.000000 0.000000
@Child      $AnimatedModelNode_8021C728_17 
}

#new:AnimatedModelTree $AnimatedModelTree_8021C780_17 {
$AnimatedModelNode_8021C754_17 $AnimatedModelNode_8021C728_17 $AnimatedModelNode_8021C6FC_17 $AnimatedModelNode_8021C6D0_17 $AnimatedModelNode_8021C6A4_17 $AnimatedModelNode_8021C678_17 00000000 
}

#new:IntTable $IntTable_8021C940_17 {
00000000 00000000 00000000 00000000 00000000 00000000 00000000 00000000 
00000000 00000001 11000000 00000000 00000000 00000000 00000000 00000000 
00000000 00000011 21100000 00000000 00000000 00000000 00000000 00000000 
00000000 00000012 22100000 00000000 00000000 00000000 00000000 00000000 
00000000 00000112 22110000 00000000 00000000 00000000 00000000 00000000 
00000000 00000122 22210000 00000000 00000000 00000000 00000000 00000000 
00000000 00001122 22211000 00000000 00000000 00000000 00000000 00000000 
00000000 00001222 22221000 00000000 00000000 00000000 00000000 00000000 
33333333 33311222 22221133 33333333 33333333 33333333 33333333 33333333 
33333333 33312222 22222133 33333333 33333333 33333333 33333333 33333333 
33333333 33112222 22222113 33333333 33333333 33333333 33333333 33333333 
44444444 44444444 44444444 44444444 44444444 44444444 44444444 44444444 
44444444 44444444 44444444 44444444 44444444 44444444 44444444 44444444 
44444444 44444444 44444444 44444444 44444444 44444444 44444444 44444444 
44444444 44444444 44444444 44444444 44444444 44444444 44444444 44444444 
44444444 44444444 44444444 44444444 44444444 44444444 44444444 44444444 
44444444 44444444 44444444 44444444 44444444 44444444 44444444 44444444 
44444444 44444444 44444444 44444444 44444444 44444444 44444444 44444444 
44444444 44444444 44444444 44444444 44444444 44444444 44444444 44444444 
44444444 44444444 44444444 44444444 44444444 44444444 44444444 44444444 
44444444 44444444 44444444 44444444 44444444 44444444 44444444 44444444 
33333333 33333333 33333333 33333333 33333333 31122222 22222113 33333333 
33333333 33333333 33333333 33333333 33333333 33122222 22222133 33333333 
33333333 33333333 33333333 33333333 33333333 33112222 22221133 33333333 
00000000 00000000 00000000 00000000 00000000 00012222 22221000 00000000 
00000000 00000000 00000000 00000000 00000000 00011222 22211000 00000000 
00000000 00000000 00000000 00000000 00000000 00001222 22210000 00000000 
00000000 00000000 00000000 00000000 00000000 00001122 22110000 00000000 
00000000 00000000 00000000 00000000 00000000 00000122 22100000 00000000 
00000000 00000000 00000000 00000000 00000000 00000112 21100000 00000000 
00000000 00000000 00000000 00000000 00000000 00000011 11000000 00000000 
00000000 00000000 00000000 00000000 00000000 00000000 00000000 00000000 
}

#new:IntTable $IntTable_8021CD40_17 {
014041C1 E7390241 044F0000 00000000 00000000 00000000 00000000 00000000 
00000000 00000000 00000000 00000000 00000000 00000000 00000000 00000000 
00000000 00000000 00000000 00000000 00000000 00000000 00000000 00000000 
00000000 00000000 00000000 00000000 00000000 00000000 00000000 00000000 
00000000 00000000 00000000 00000000 00000000 00000000 00000000 00000000 
00000000 00000000 00000000 00000000 00000000 00000000 00000000 00000000 
00000000 00000000 00000000 00000000 00000000 00000000 00000000 00000000 
00000000 00000000 00000000 00000000 00000000 00000000 00000000 00000000 
00000000 00000000 00000000 00000000 00000000 00000000 00000000 00000000 
00000000 00000000 00000000 00000000 00000000 00000000 00000000 00000000 
00000000 00000000 00000000 00000000 00000000 00000000 00000000 00000000 
00000000 00000000 00000000 00000000 00000000 00000000 00000000 00000000 
00000000 00000000 00000000 00000000 00000000 00000000 00000000 00000000 
00000000 00000000 00000000 00000000 00000000 00000000 00000000 00000000 
00000000 00000000 00000000 00000000 00000000 00000000 00000000 00000000 
00000000 00000000 00000000 00000000 00000000 00000000 00000000 00000000 
}

#new:DisplayList $DisplayList_8021CF40_17 {
G_RDPPIPESYNC
G_TEXTURE        (G_TX_RENDERTILE, 0.999985, 0.999985, 0, true)
G_SetOtherMode_H (G_MDSFT_CYCLETYPE, G_CYC_1CYCLE)
G_SetOtherMode_H (G_MDSFT_TEXTPERSP, 1)
G_SetOtherMode_H (G_MDSFT_TEXTDETAIL, G_TD_CLAMP)
G_SetOtherMode_H (G_MDSFT_TEXTLOD, G_TL_TILE)
G_SetOtherMode_H (G_MDSFT_TEXTFILT, G_TF_BILERP)
G_SetOtherMode_H (G_MDSFT_TEXTCONV, G_TC_FILT)
G_SetOtherMode_L (G_MDSFT_RENDERMODE, ...
	                  AA_EN, Z_CMP, Z_UPD, CVG_DST_FULL, CVG_X_ALPHA, ZMODE_OPA, ...
	                  G_BL_CLR_IN, G_BL_A_IN, G_BL_CLR_MEM, G_BL_A_MEM, ...
	                  G_BL_CLR_IN, G_BL_A_IN, G_BL_CLR_MEM, G_BL_A_MEM)
G_SETCOMBINE     (G_CCMUX_0, G_CCMUX_0, G_CCMUX_0, G_CCMUX_TEXEL0, ...
	                  G_ACMUX_0, G_ACMUX_0, G_ACMUX_0, G_ACMUX_TEXEL0, ...
	                  G_CCMUX_0, G_CCMUX_0, G_CCMUX_0, G_CCMUX_TEXEL0, ...
	                  G_ACMUX_0, G_ACMUX_0, G_ACMUX_0, G_ACMUX_TEXEL0)
G_SetOtherMode_H (G_MDSFT_TEXTLUT, G_TT_RGBA16)
G_SETIMG         (RGBA-16, 1`, $IntTable_8021CD40_17)
G_RDPTILESYNC
G_SETTILE        (G_TX_LOADTILE, 0, 0, 0, 100, 0, 0, 0, 0, 0, 0, 0) % invalid format (0:0)
G_RDPLOADSYNC
G_LOADTLUT       (G_TX_LOADTILE, 16`)
G_RDPPIPESYNC
G_SETIMG         (CI-8, 32`, $IntTable_8021C940_17)
G_SETTILE        (G_TX_LOADTILE, CI-8, 4, 0, 0, 2, 5, 0, 0, 6, 0)
G_RDPLOADSYNC
G_LOADTILE       (G_TX_LOADTILE, 0.000000, 0.000000, 31.500000, 31.000000)
G_RDPPIPESYNC
G_SETTILE        (G_TX_RENDERTILE, CI-4, 4, 0, 0, 2, 5, 0, 0, 6, 0)
G_SETTILESIZE    (G_TX_RENDERTILE, 0, 0, 64`, 32`)
G_GEOMETRYMODE   (Clear, ALL)
G_GEOMETRYMODE   (Set, G_ZBUFFER, G_SHADE)
G_ENDDL
}

#new:IdleAnimations $IdleAnimations_8021D018_17 {
.Status:Normal    00790003
.Status:Stone     00790000
.Status:Sleep     0079000A
.Status:Poison    00790003
.Status:Stop      00790000
.Status:Static    00790000
.Status:Paralyze  00790000
.Status:Paralyze  00790000
.Status:Dizzy     0079000A
.Status:End
}

#new:IdleAnimations $IdleAnimations_8021D064_17 {
.Status:Normal    00790004
.Status:Stone     00790000
.Status:Sleep     00790004
.Status:Poison    00790004
.Status:Stop      00790000
.Status:Static    00790000
.Status:Paralyze  00790000
.Status:Paralyze  00790000
.Status:Dizzy     0079000C
.Status:End
}

#new:IdleAnimations $IdleAnimations_8021D0B0_17 {
.Status:Normal    00790010
.Status:Stop      00790000
.Status:End
}

#new:DefenseTable $DefenseTable_8021D0C4_17 {
.Element:Normal 00000000
.Element:Water  00000000
.Element:Ice    00000000
.Element:Fire   00000063
.Element:Blast  00000000
.Element:End
}

#new:DefenseTable $DefenseTable_8021D0F0_17 {
.Element:Normal 00000000
.Element:Water  FFFFFFFE
.Element:Ice    FFFFFFFE
.Element:Fire   00000063
.Element:Blast  00000000
.Element:End
}

#new:DefenseTable $DefenseTable_8021D11C_17 {
.Element:Normal 00000000
.Element:Water  00000000
.Element:Ice    00000000
.Element:Fire   00000063
.Element:Blast  00000000
.Element:End
}

#new:StatusTable $StatusTable_8021D148_17 {
.Status:Normal      0`
.Status:Default     0`
.Status:Sleep      25`
.Status:Poison      0`
.Status:Frozen      0`
.Status:Dizzy      25`
.Status:Fear        0`
.Status:Static      0`
.Status:Paralyze   40`
.Status:Shrink      0`
.Status:Stop       40`
.Status:DefaultTurnMod    0`
.Status:SleepTurnMod     -1`
.Status:PoisonTurnMod     0`
.Status:FrozenTurnMod     0`
.Status:DizzyTurnMod     -1`
.Status:FearTurnMod       0`
.Status:StaticTurnMod     0`
.Status:ParalyzeTurnMod  -1`
.Status:ShrinkTurnMod    -1`
.Status:StopTurnMod      -2`
.Status:End
}

#new:PartsTable $PartsTable_8021D1F4_17 {
00120000 01000000 002800FF $IdleAnimations_8021D018_17 $DefenseTable_8021D0C4_17 00000000 00000000 00F80000 00000000 
00800009 02000000 002800FF 00000000 $DefenseTable_8021D0C4_17 00000000 00000000 00F80000 00000000 
}

#new:Script $Script_Init_8021D264_17 {
    0:  UseArray  $End[788] 
    C:  Call  EnableGroup       ( 00000017 .True )
   20:  Call  EnableGroup       ( 0000001C .False )
   34:  Call  SetActorVar       ( .Actor:Self 00000000 00000000 )
   4C:  Call  SetActorVar       ( .Actor:Self 00000005 00000000 )
   64:  Call  SetActorVar       ( .Actor:Self 00000006 00000000 )
   7C:  Call  SetActorVar       ( .Actor:Self 0000000B 00000000 )
   94:  Call  SetActorVar       ( .Actor:Self 0000000D 00000000 )
   AC:  Call  SetActorVar       ( .Actor:Self 00000001 00000000 )
   C4:  Call  SetActorVar       ( .Actor:Self 00000002 00000000 )
   DC:  Set   *Var0  0000001E 
   EC:  Call  SetActorVar       ( .Actor:Self 0000000D *Var0 )
  104:  Call  SetActorVar       ( .Actor:Self 00000007 00790003 )
  11C:  Call  SetActorVar       ( .Actor:Self 00000008 00790009 )
  134:  Call  ForceHomePos      ( .Actor:Self  61`  61`  0` )
  150:  Call  LoadAnimatedModel ( 00000000 $AnimatedModelTree_8021C4C0_17 )
  164:  Call  OverrideBattleDmaDest ( $End[9230] )
  174:  Call  LoadBattleDmaData ( 00000000 )
  184:  Call  PlayModelAnimation    ( 00000000 $End[9230] )
  198:  Call  SetAnimatedModelRootPosition  ( 00000000 00000000 00000000 00000000 )
  1B4:  Call  SetAnimatorFlags  ( 00000000 00000080 00000001 )
  1CC:  Call  LoadAnimatedModel ( 00000001 $AnimatedModelTree_8021C650_17 )
  1E0:  Call  OverrideBattleDmaDest ( $End[6230] )
  1F0:  Call  LoadBattleDmaData ( 0000001F )
  200:  Call  PlayModelAnimation    ( 00000001 $End[6230] )
  214:  Call  SetAnimatedModelRootPosition  ( 00000001 00000000 00000000 00000000 )
  230:  Call  SetAnimatorFlags  ( 00000001 00000080 00000001 )
  248:  Call  LoadAnimatedModel ( 00000002 $AnimatedModelTree_8021C650_17 )
  25C:  Call  OverrideBattleDmaDest ( $End[3230] )
  26C:  Call  LoadBattleDmaData ( 0000001F )
  27C:  Call  PlayModelAnimation    ( 00000002 $End[3230] )
  290:  Call  SetAnimatedModelRootPosition  ( 00000002 00000032 0000000E 00000014 )
  2AC:  Call  SetAnimatorFlags  ( 00000002 00000080 00000001 )
  2C4:  Call  LoadAnimatedModel ( 00000003 $AnimatedModelTree_8021C780_17 )
  2D8:  Call  OverrideBattleDmaDest ( $End[1230] )
  2E8:  Call  LoadBattleDmaData ( 00000022 )
  2F8:  Call  PlayModelAnimation    ( 00000003 $End[1230] )
  30C:  Call  SetAnimatedModelRootPosition  ( 00000003 00000000 00000000 00000003 )
  328:  Call  SetAnimatorFlags  ( 00000003 00000080 00000001 )
  340:  Call  SummonEnemy       ( $SpecialFormation_8021FF04_17 00000000 )
  354:  Call  SummonEnemy       ( $SpecialFormation_8021FF20_17 00000000 )
  368:  Wait  2`
  374:  Exec  $Script_8021DEEC_17 
  380:  Call  CreateNpc ( 00000000 00B70000 )
  394:  Call  SetNpcYaw ( 00000000  90` )
  3A8:  Call  SetNpcPos ( 00000000  -300`  0`  0` )
  3C4:  Call  BindTakeTurn      ( .Actor:Self $Script_TakeTurn_8021FC10_17 )
  3D8:  Call  BindIdle  ( .Actor:Self $Script_Idle_8021D6EC_17 )
  3EC:  Call  BindHandleEvent   ( .Actor:Self $Script_HandleEvent_8021F5A4_17 )
  400:  Call  BindNextTurn      ( .Actor:Self $Script_NextTurn_8021D8EC_17 )
  414:  Call  ForceHomePos      ( .Actor:Enemy1  57`  57`  0` )
  430:  Call  ForceHomePos      ( .Actor:Enemy2  107`  71`  20` )
  44C:  Call  HPBarToHome       ( .Actor:Enemy1 )
  45C:  Call  HPBarToHome       ( .Actor:Enemy2 )
  46C:  Call  $Function_802188FC_17 ( )
  478:  Return
  480:  End
}

#new:Script $Script_Idle_8021D6EC_17 {
    0:  Label  0
    C:  Call  GetActorHP    ( .Actor:Self *Var0 )
   20:  If  *Var0  ==  00000000 
   30:  	Goto  63
   3C:  EndIf
   44:  Call  GetActorVar   ( .Actor:Enemy0 00000000 *Var0 )
   5C:  If  *Var0  ==  00000000 
   6C:  	Goto  63
   78:  EndIf
   80:  Call  GetActorVar   ( .Actor:Self 00000005 *Var0 )
   98:  If  *Var0  !=  00000000 
   A8:  	Goto  63
   B4:  EndIf
   BC:  Call  GetActorVar   ( .Actor:Self 0000000D *Var0 )
   D4:  Sub   *Var0  00000001 
   E4:  Call  SetActorVar   ( .Actor:Self 0000000D *Var0 )
   FC:  If  *Var0  !=  00000000 
  10C:  	Goto  63
  118:  EndIf
  120:  Call  GetActorVar   ( .Actor:Self 0000000C *Var0 )
  138:  Add   *Var0  00000001 
  148:  If  *Var0  >=  00000003 
  158:  	Set   *Var0  00000000 
  168:  EndIf
  170:  Set   *Var0  0000001E 
  180:  Call  SetActorVar   ( .Actor:Self 0000000D *Var0 )
  198:  Call  OverrideBattleDmaDest ( $End[9230] )
  1A8:  Call  LoadBattleDmaData     ( 00000001 )
  1B8:  Call  PlayModelAnimation    ( 00000000 $End[9230] )
  1CC:  Label  63
  1D8:  Wait  1`
  1E4:  Goto  0
  1F0:  Return
  1F8:  End
}

#new:Script $Script_NextTurn_8021D8EC_17 {
    0:  Call  GetBattlePhase    ( *Var0 )
   10:  Switch  *Var0 
   1C:  	Case  ==  0000000D 
   28:  		Call  GetActorVar   ( .Actor:Self 00000000 *Var0 )
   40:  		If  *Var0  ==  00000001 
   50:  			Call  GetActorVar   ( .Actor:Self 00000002 *Var0 )
   68:  			If  *Var0  !&  00000001 
   78:  				ConstOR  *Var0 00000001 
   88:  				Call  SetActorVar   ( .Actor:Self 00000002 *Var0 )
   A0:  				ExecWait  $Script_8021D9C8_17 
   AC:  			EndIf
   B4:  		EndIf
   BC:  	Default
   C4:  EndSwitch
   CC:  Return
   D4:  End
}

#new:Script $Script_8021D9C8_17 {
    0:  Call  UseIdleAnimation  ( .Actor:Self .False )
   14:  Call  EnableIdleScript  ( .Actor:Self 00000000 )
   28:  Call  802535B4  ( 00000000 )
   38:  Call  SpeakToPlayer     ( 00000000 FFFFFFFF FFFFFFFF 00000000 00100104 ) % Mario! You shan't fight alone! Kolorado to the res ...
   58:  Thread
   60:  	Loop  00000009 
   6C:  		Call  PlaySoundAtNpc    ( 00000000 000020BA 00000000 )
   84:  		Wait  2`
   90:  		Call  PlaySoundAtNpc    ( 00000000 000003B4 00000000 )
   A8:  		Wait  2`
   B4:  	EndLoop
   BC:  EndThread
   C4:  Call  SetNpcAnimation   ( 00000000 00B70002 )
   D8:  Call  SetNpcAnimationSpeed  ( 00000000 *Fixed[2.0] )
   EC:  Call  SetNpcSpeed       ( 00000000 *Fixed[10.0] )
  100:  Call  NpcMoveTo ( 00000000  70`  0`  0` )
  11C:  Call  PlaySoundAtNpc    ( 00000000 000000E8 00000000 )
  134:  Call  SetNpcAnimationSpeed  ( 00000000 *Fixed[1.0] )
  148:  Call  SetNpcJumpscale   ( 00000000 *Fixed[1.0] )
  15C:  Call  SetNpcAnimation   ( 00000000 00B70006 )
  170:  Thread
  178:  	Loop  0000000A 
  184:  		Call  GetNpcPos     ( 00000000 *Var0 *Var1 *Var2 )
  1A0:  		Call  PlayEffect    ( ~FX:SmokeBurst:Black *Var0 *Var1 *Var2 *Fixed[1.0] 00000014 00000000 00000000 00000000 00000000 00000000 00000000 00000000 )
  1E4:  		Wait  2`
  1F0:  	EndLoop
  1F8:  EndThread
  200:  Call  NpcJump0  ( 00000000  70`  180`  0`  20` )
  220:  Call  SpeakToPlayer ( 00000000 FFFFFFFF FFFFFFFF 00000000 00100105 ) % Ow ow OW!! HOT!!!! Oh, it burns! Really!
  240:  Call  SetNpcYaw ( 00000000  270` )
  254:  Call  SetNpcPos ( 00000000  50`  180`  0` )
  270:  Thread
  278:  	Loop  0000000A 
  284:  		Call  GetNpcPos     ( 00000000 *Var0 *Var1 *Var2 )
  2A0:  		Call  PlayEffect    ( ~FX:SmokeBurst:Black *Var0 *Var1 *Var2 *Fixed[1.0] 00000014 00000000 00000000 00000000 00000000 00000000 00000000 00000000 )
  2E4:  		Wait  2`
  2F0:  	EndLoop
  2F8:  EndThread
  300:  Call  NpcJump0  ( 00000000  50`  0`  0`  20` )
  320:  Call  NpcJump0  ( 00000000  50`  0`  0`  6` )
  340:  Call  NpcJump0  ( 00000000  50`  0`  0`  3` )
  360:  Wait  8`
  36C:  Call  SetNpcAnimation   ( 00000000 00B70005 )
  380:  Call  SetNpcJumpscale   ( 00000000 *Fixed[0.7] )
  394:  Call  NpcJump0  ( 00000000  50`  0`  0`  12` )
  3B4:  Thread
  3BC:  	Loop  00000004 
  3C8:  		Call  PlaySoundAtNpc    ( 00000000 000020BA 00000000 )
  3E0:  		Wait  2`
  3EC:  		Call  PlaySoundAtNpc    ( 00000000 000003B4 00000000 )
  404:  		Wait  2`
  410:  	EndLoop
  418:  EndThread
  420:  Call  SetNpcAnimation   ( 00000000 00B70003 )
  434:  Call  SetNpcSpeed       ( 00000000 *Fixed[8.0] )
  448:  Call  NpcMoveTo ( 00000000  -60`  0`  0` )
  464:  Call  SpeakToPlayer     ( 00000000 00B70004 00B70001 00000005 00100106 ) % So sorry, old chap, but that's all I can do at the ...
  484:  Call  PlaySoundAtActor  ( .Actor:Self 00000174 )
  498:  Call  SetNpcAnimation   ( 00000000 00B70003 )
  4AC:  Call  SetNpcSpeed       ( 00000000 *Fixed[6.0] )
  4C0:  Call  NpcMoveTo ( 00000000  -300`  0`  0` )
  4DC:  Call  802535B4  ( 00000001 )
  4EC:  Call  EnableIdleScript  ( .Actor:Self 00000001 )
  500:  Call  UseIdleAnimation  ( .Actor:Self .True )
  514:  Return
  51C:  End
}

#new:Script $Script_8021DEEC_17 {
    0:  UseArray  $End[788] 
    C:  Label  0
   18:  Call  GetAnimatedPositionByTreeIndex    ( 00000000 0000000A *Var0 *Var1 *Var2 )
   38:  Call  SetPartPos    ( .Actor:Enemy0 00000001 *Var0 *Var1 *Var2 )
   58:  Call  GetAnimatedRotationByTreeIndex    ( 00000000 0000000A *Var0 *Var1 *Var2 )
   78:  Call  SetPartRotation       ( .Actor:Enemy0 00000001 *Var0 00000000 *Var2 )
   98:  Call  $Function_802188EC_17 ( )
   A4:  Call  GetAnimatedPositionByTreeIndex    ( 00000000 0000000A *Var0 *Var1 *Var2 )
   C4:  Sub   *Var2  00000002 
   D4:  Call  $Function_8021812C_17 ( 00000000 00000000 *Var0 *Var1 *Var2 )
   F4:  Call  GetAnimatedRotationByTreeIndex    ( 00000000 0000000A *Var0 *Var1 *Var2 )
  114:  Add   *Var2  0000005A 
  124:  Call  $Function_80218224_17 ( 00000000 00000000 *Var0 00000000 *Var2 )
  144:  Call  $Function_802182E4_17 ( 00000000 00000000 00000001 00000001 00000001 )
  164:  Call  GetAnimatedPositionByTreeIndex    ( 00000000 00000005 *Var0 *Var1 *Var2 )
  184:  Call  $Function_8021812C_17 ( 00000000 00000001 *Var0 *Var1 *Var2 )
  1A4:  Call  GetAnimatedRotationByTreeIndex    ( 00000000 00000005 *Var0 *Var1 *Var2 )
  1C4:  Call  $Function_80218224_17 ( 00000000 00000001 *Var0 *Var1 *Var2 )
  1E4:  Call  $Function_802182E4_17 ( 00000000 00000001 *Fixed[0.71484375] *Fixed[0.71484375] *Fixed[1.0] )
  204:  Call  GetAnimatedPositionByTreeIndex    ( 00000000 00000009 *Var0 *Var1 *Var2 )
  224:  Call  $Function_8021812C_17 ( 00000000 00000002 *Var0 *Var1 *Var2 )
  244:  Call  GetAnimatedRotationByTreeIndex    ( 00000000 00000009 *Var0 *Var1 *Var2 )
  264:  Call  $Function_80218224_17 ( 00000000 00000002 *Var0 *Var1 *Var2 )
  284:  Call  $Function_802182E4_17 ( 00000000 00000002 *Fixed[0.71484375] *Fixed[0.71484375] *Fixed[1.0] )
  2A4:  Call  GetAnimatedPositionByTreeIndex    ( 00000000 00000004 *Var0 *Var1 *Var2 )
  2C4:  Call  $Function_8021812C_17 ( 00000000 00000003 *Var0 *Var1 *Var2 )
  2E4:  Call  GetAnimatedRotationByTreeIndex    ( 00000000 00000004 *Var0 *Var1 *Var2 )
  304:  Call  $Function_80218224_17 ( 00000000 00000003 *Var0 *Var1 *Var2 )
  324:  Call  $Function_802182E4_17 ( 00000000 00000003 *Fixed[0.71484375] *Fixed[0.71484375] *Fixed[1.0] )
  344:  Call  GetAnimatedPositionByTreeIndex    ( 00000000 00000008 *Var0 *Var1 *Var2 )
  364:  Call  $Function_8021812C_17 ( 00000000 00000004 *Var0 *Var1 *Var2 )
  384:  Call  GetAnimatedRotationByTreeIndex    ( 00000000 00000008 *Var0 *Var1 *Var2 )
  3A4:  Call  $Function_80218224_17 ( 00000000 00000004 *Var0 *Var1 *Var2 )
  3C4:  Call  $Function_802182E4_17 ( 00000000 00000004 *Fixed[0.71484375] *Fixed[0.71484375] *Fixed[1.0] )
  3E4:  Call  GetAnimatedPositionByTreeIndex    ( 00000000 00000003 *Var0 *Var1 *Var2 )
  404:  Call  $Function_8021812C_17 ( 00000000 00000005 *Var0 *Var1 *Var2 )
  424:  Call  GetAnimatedRotationByTreeIndex    ( 00000000 00000003 *Var0 *Var1 *Var2 )
  444:  Call  $Function_80218224_17 ( 00000000 00000005 *Var0 *Var1 *Var2 )
  464:  Call  $Function_802182E4_17 ( 00000000 00000005 *Fixed[0.71484375] *Fixed[0.71484375] *Fixed[1.0] )
  484:  Call  GetAnimatedPositionByTreeIndex    ( 00000000 00000007 *Var0 *Var1 *Var2 )
  4A4:  Call  $Function_8021812C_17 ( 00000000 00000006 *Var0 *Var1 *Var2 )
  4C4:  Call  GetAnimatedRotationByTreeIndex    ( 00000000 00000007 *Var0 *Var1 *Var2 )
  4E4:  Call  $Function_80218224_17 ( 00000000 00000006 *Var0 *Var1 *Var2 )
  504:  Call  $Function_802182E4_17 ( 00000000 00000006 *Fixed[0.71484375] *Fixed[0.71484375] *Fixed[1.0] )
  524:  Call  GetAnimatedPositionByTreeIndex    ( 00000000 00000002 *Var0 *Var1 *Var2 )
  544:  Call  $Function_8021812C_17 ( 00000000 00000007 *Var0 *Var1 *Var2 )
  564:  Call  GetAnimatedRotationByTreeIndex    ( 00000000 00000002 *Var0 *Var1 *Var2 )
  584:  Call  $Function_80218224_17 ( 00000000 00000007 *Var0 *Var1 *Var2 )
  5A4:  Call  $Function_802182E4_17 ( 00000000 00000007 *Fixed[0.71484375] *Fixed[0.71484375] *Fixed[1.0] )
  5C4:  Call  GetAnimatedPositionByTreeIndex    ( 00000000 00000006 *Var0 *Var1 *Var2 )
  5E4:  Call  $Function_8021812C_17 ( 00000000 00000008 *Var0 *Var1 *Var2 )
  604:  Call  GetAnimatedRotationByTreeIndex    ( 00000000 00000006 *Var0 *Var1 *Var2 )
  624:  Call  $Function_80218224_17 ( 00000000 00000008 *Var0 *Var1 *Var2 )
  644:  Call  $Function_802182E4_17 ( 00000000 00000008 *Fixed[0.71484375] *Fixed[0.71484375] *Fixed[1.0] )
  664:  Call  GetAnimatedPositionByTreeIndex    ( 00000001 00000008 *Var0 *Var1 *Var2 )
  684:  Call  SetPartPos    ( .Actor:Enemy1 00000001 *Var0 *Var1 *Var2 )
  6A4:  Sub   *Var0  00000008 
  6B4:  Call  SetPartPos    ( .Actor:Enemy1 00000002 *Var0 *Var1 *Var2 )
  6D4:  Call  GetAnimatedRotationByTreeIndex    ( 00000001 00000008 *Var0 *Var1 *Var2 )
  6F4:  Call  SetPartRotation       ( .Actor:Enemy1 00000001 *Var0 00000000 *Var2 )
  714:  Call  GetAnimatedPositionByTreeIndex    ( 00000001 00000008 *Var0 *Var1 *Var2 )
  734:  Sub   *Var2  00000002 
  744:  Call  $Function_8021812C_17 ( 00000001 00000000 *Var0 *Var1 *Var2 )
  764:  Call  GetAnimatedRotationByTreeIndex    ( 00000001 00000008 *Var0 *Var1 *Var2 )
  784:  Add   *Var2  0000005A 
  794:  Call  $Function_80218224_17 ( 00000001 00000000 *Var0 00000000 *Var2 )
  7B4:  Call  $Function_802182E4_17 ( 00000001 00000000 00000001 00000001 00000001 )
  7D4:  Call  GetAnimatedPositionByTreeIndex    ( 00000001 00000004 *Var0 *Var1 *Var2 )
  7F4:  Sub   *Var2  00000002 
  804:  Call  $Function_8021812C_17 ( 00000001 00000001 *Var0 *Var1 *Var2 )
  824:  Call  GetAnimatedRotationByTreeIndex    ( 00000001 00000004 *Var0 *Var1 *Var2 )
  844:  Call  $Function_80218224_17 ( 00000001 00000001 *Var0 *Var1 *Var2 )
  864:  Call  $Function_802182E4_17 ( 00000001 00000001 *Fixed[0.71484375] *Fixed[0.71484375] *Fixed[1.0] )
  884:  Call  GetAnimatedPositionByTreeIndex    ( 00000001 00000007 *Var0 *Var1 *Var2 )
  8A4:  Call  $Function_8021812C_17 ( 00000001 00000002 *Var0 *Var1 *Var2 )
  8C4:  Call  GetAnimatedRotationByTreeIndex    ( 00000001 00000007 *Var0 *Var1 *Var2 )
  8E4:  Call  $Function_80218224_17 ( 00000001 00000002 *Var0 *Var1 *Var2 )
  904:  Call  $Function_802182E4_17 ( 00000001 00000002 *Fixed[0.71484375] *Fixed[0.71484375] *Fixed[1.0] )
  924:  Call  GetAnimatedPositionByTreeIndex    ( 00000001 00000003 *Var0 *Var1 *Var2 )
  944:  Call  $Function_8021812C_17 ( 00000001 00000003 *Var0 *Var1 *Var2 )
  964:  Call  GetAnimatedRotationByTreeIndex    ( 00000001 00000003 *Var0 *Var1 *Var2 )
  984:  Call  $Function_80218224_17 ( 00000001 00000003 *Var0 *Var1 *Var2 )
  9A4:  Call  $Function_802182E4_17 ( 00000001 00000003 *Fixed[0.71484375] *Fixed[0.71484375] *Fixed[1.0] )
  9C4:  Call  GetAnimatedPositionByTreeIndex    ( 00000001 00000006 *Var0 *Var1 *Var2 )
  9E4:  Call  $Function_8021812C_17 ( 00000001 00000004 *Var0 *Var1 *Var2 )
  A04:  Call  GetAnimatedRotationByTreeIndex    ( 00000001 00000006 *Var0 *Var1 *Var2 )
  A24:  Call  $Function_80218224_17 ( 00000001 00000004 *Var0 *Var1 *Var2 )
  A44:  Call  $Function_802182E4_17 ( 00000001 00000004 *Fixed[0.71484375] *Fixed[0.71484375] *Fixed[1.0] )
  A64:  Call  GetAnimatedPositionByTreeIndex    ( 00000001 00000002 *Var0 *Var1 *Var2 )
  A84:  Call  $Function_8021812C_17 ( 00000001 00000005 *Var0 *Var1 *Var2 )
  AA4:  Call  GetAnimatedRotationByTreeIndex    ( 00000001 00000002 *Var0 *Var1 *Var2 )
  AC4:  Call  $Function_80218224_17 ( 00000001 00000005 *Var0 *Var1 *Var2 )
  AE4:  Call  $Function_802182E4_17 ( 00000001 00000005 *Fixed[0.71484375] *Fixed[0.71484375] *Fixed[1.0] )
  B04:  Call  GetAnimatedPositionByTreeIndex    ( 00000001 00000005 *Var0 *Var1 *Var2 )
  B24:  Call  $Function_8021812C_17 ( 00000001 00000006 *Var0 *Var1 *Var2 )
  B44:  Call  GetAnimatedRotationByTreeIndex    ( 00000001 00000005 *Var0 *Var1 *Var2 )
  B64:  Call  $Function_80218224_17 ( 00000001 00000006 *Var0 *Var1 *Var2 )
  B84:  Call  $Function_802182E4_17 ( 00000001 00000006 *Fixed[0.71484375] *Fixed[0.71484375] *Fixed[1.0] )
  BA4:  Call  GetAnimatedPositionByTreeIndex    ( 00000002 00000008 *Var0 *Var1 *Var2 )
  BC4:  Call  SetPartPos    ( .Actor:Enemy2 00000001 *Var0 *Var1 *Var2 )
  BE4:  Call  SetPartPos    ( .Actor:Enemy2 00000002 *Var0 *Var1 *Var2 )
  C04:  Call  GetAnimatedRotationByTreeIndex    ( 00000002 00000008 *Var0 *Var1 *Var2 )
  C24:  Call  SetPartRotation       ( .Actor:Enemy2 00000001 *Var0 00000000 *Var2 )
  C44:  Call  GetAnimatedPositionByTreeIndex    ( 00000002 00000008 *Var0 *Var1 *Var2 )
  C64:  Sub   *Var2  00000002 
  C74:  Call  $Function_8021812C_17 ( 00000002 00000000 *Var0 *Var1 *Var2 )
  C94:  Call  GetAnimatedRotationByTreeIndex    ( 00000002 00000008 *Var0 *Var1 *Var2 )
  CB4:  Add   *Var2  0000005A 
  CC4:  Call  $Function_80218224_17 ( 00000002 00000000 *Var0 00000000 *Var2 )
  CE4:  Call  $Function_802182E4_17 ( 00000002 00000000 00000001 00000001 00000001 )
  D04:  Call  GetAnimatedPositionByTreeIndex    ( 00000002 00000004 *Var0 *Var1 *Var2 )
  D24:  Sub   *Var2  00000002 
  D34:  Call  $Function_8021812C_17 ( 00000002 00000001 *Var0 *Var1 *Var2 )
  D54:  Call  GetAnimatedRotationByTreeIndex    ( 00000002 00000004 *Var0 *Var1 *Var2 )
  D74:  Call  $Function_80218224_17 ( 00000002 00000001 *Var0 *Var1 *Var2 )
  D94:  Call  $Function_802182E4_17 ( 00000002 00000001 *Fixed[0.71484375] *Fixed[0.71484375] *Fixed[1.0] )
  DB4:  Call  GetAnimatedPositionByTreeIndex    ( 00000002 00000007 *Var0 *Var1 *Var2 )
  DD4:  Call  $Function_8021812C_17 ( 00000002 00000002 *Var0 *Var1 *Var2 )
  DF4:  Call  GetAnimatedRotationByTreeIndex    ( 00000002 00000007 *Var0 *Var1 *Var2 )
  E14:  Call  $Function_80218224_17 ( 00000002 00000002 *Var0 *Var1 *Var2 )
  E34:  Call  $Function_802182E4_17 ( 00000002 00000002 *Fixed[0.71484375] *Fixed[0.71484375] *Fixed[1.0] )
  E54:  Call  GetAnimatedPositionByTreeIndex    ( 00000002 00000003 *Var0 *Var1 *Var2 )
  E74:  Call  $Function_8021812C_17 ( 00000002 00000003 *Var0 *Var1 *Var2 )
  E94:  Call  GetAnimatedRotationByTreeIndex    ( 00000002 00000003 *Var0 *Var1 *Var2 )
  EB4:  Call  $Function_80218224_17 ( 00000002 00000003 *Var0 *Var1 *Var2 )
  ED4:  Call  $Function_802182E4_17 ( 00000002 00000003 *Fixed[0.71484375] *Fixed[0.71484375] *Fixed[1.0] )
  EF4:  Call  GetAnimatedPositionByTreeIndex    ( 00000002 00000006 *Var0 *Var1 *Var2 )
  F14:  Call  $Function_8021812C_17 ( 00000002 00000004 *Var0 *Var1 *Var2 )
  F34:  Call  GetAnimatedRotationByTreeIndex    ( 00000002 00000006 *Var0 *Var1 *Var2 )
  F54:  Call  $Function_80218224_17 ( 00000002 00000004 *Var0 *Var1 *Var2 )
  F74:  Call  $Function_802182E4_17 ( 00000002 00000004 *Fixed[0.71484375] *Fixed[0.71484375] *Fixed[1.0] )
  F94:  Call  GetAnimatedPositionByTreeIndex    ( 00000002 00000002 *Var0 *Var1 *Var2 )
  FB4:  Call  $Function_8021812C_17 ( 00000002 00000005 *Var0 *Var1 *Var2 )
  FD4:  Call  GetAnimatedRotationByTreeIndex    ( 00000002 00000002 *Var0 *Var1 *Var2 )
  FF4:  Call  $Function_80218224_17 ( 00000002 00000005 *Var0 *Var1 *Var2 )
 1014:  Call  $Function_802182E4_17 ( 00000002 00000005 *Fixed[0.71484375] *Fixed[0.71484375] *Fixed[1.0] )
 1034:  Call  GetAnimatedPositionByTreeIndex    ( 00000002 00000005 *Var0 *Var1 *Var2 )
 1054:  Call  $Function_8021812C_17 ( 00000002 00000006 *Var0 *Var1 *Var2 )
 1074:  Call  GetAnimatedRotationByTreeIndex    ( 00000002 00000005 *Var0 *Var1 *Var2 )
 1094:  Call  $Function_80218224_17 ( 00000002 00000006 *Var0 *Var1 *Var2 )
 10B4:  Call  $Function_802182E4_17 ( 00000002 00000006 *Fixed[0.71484375] *Fixed[0.71484375] *Fixed[1.0] )
 10D4:  Call  GetAnimatedPositionByTreeIndex    ( 00000003 00000004 *Var0 *Var1 *Var2 )
 10F4:  Call  $Function_8021812C_17 ( 00000003 00000000 *Var0 *Var1 *Var2 )
 1114:  Call  GetAnimatedRotationByTreeIndex    ( 00000003 00000004 *Var0 *Var1 *Var2 )
 1134:  Call  $Function_80218224_17 ( 00000003 00000000 *Var0 *Var1 *Var2 )
 1154:  Call  $Function_802182E4_17 ( 00000003 00000000 *Fixed[0.71484375] *Fixed[0.71484375] *Fixed[1.0] )
 1174:  Call  GetAnimatedPositionByTreeIndex    ( 00000003 00000006 *Var0 *Var1 *Var2 )
 1194:  Call  $Function_8021812C_17 ( 00000003 00000001 *Var0 *Var1 *Var2 )
 11B4:  Call  GetAnimatedRotationByTreeIndex    ( 00000003 00000006 *Var0 *Var1 *Var2 )
 11D4:  Call  $Function_80218224_17 ( 00000003 00000001 *Var0 *Var1 *Var2 )
 11F4:  Call  $Function_802182E4_17 ( 00000003 00000001 *Fixed[0.71484375] *Fixed[0.71484375] *Fixed[1.0] )
 1214:  Call  GetAnimatedPositionByTreeIndex    ( 00000003 00000003 *Var0 *Var1 *Var2 )
 1234:  Call  $Function_8021812C_17 ( 00000003 00000002 *Var0 *Var1 *Var2 )
 1254:  Call  GetAnimatedRotationByTreeIndex    ( 00000003 00000003 *Var0 *Var1 *Var2 )
 1274:  Call  $Function_80218224_17 ( 00000003 00000002 *Var0 *Var1 *Var2 )
 1294:  Call  $Function_802182E4_17 ( 00000003 00000002 *Fixed[0.71484375] *Fixed[0.71484375] *Fixed[1.0] )
 12B4:  Call  GetAnimatedPositionByTreeIndex    ( 00000003 00000005 *Var0 *Var1 *Var2 )
 12D4:  Call  $Function_8021812C_17 ( 00000003 00000003 *Var0 *Var1 *Var2 )
 12F4:  Call  GetAnimatedRotationByTreeIndex    ( 00000003 00000005 *Var0 *Var1 *Var2 )
 1314:  Call  $Function_80218224_17 ( 00000003 00000003 *Var0 *Var1 *Var2 )
 1334:  Call  $Function_802182E4_17 ( 00000003 00000003 *Fixed[0.71484375] *Fixed[0.71484375] *Fixed[1.0] )
 1354:  Call  GetAnimatedPositionByTreeIndex    ( 00000003 00000002 *Var0 *Var1 *Var2 )
 1374:  Call  $Function_8021812C_17 ( 00000003 00000004 *Var0 *Var1 *Var2 )
 1394:  Call  GetAnimatedRotationByTreeIndex    ( 00000003 00000002 *Var0 *Var1 *Var2 )
 13B4:  Call  $Function_80218224_17 ( 00000003 00000004 *Var0 *Var1 *Var2 )
 13D4:  Call  $Function_802182E4_17 ( 00000003 00000004 *Fixed[0.71484375] *Fixed[0.71484375] *Fixed[1.0] )
 13F4:  Call  GetActorVar   ( .Actor:Self 00000006 *Var0 )
 140C:  If  *Var0  !=  00000000 
 141C:  	Call  GetAnimatedPositionByTreeIndex    ( 00000000 0000000A *Var1 *Var2 *Var3 )
 143C:  	Call  GetAnimatedRotationByTreeIndex    ( 00000000 0000000A *Var4 *Var5 *Var6 )
 145C:  	Set   *Var7  0000001E 
 146C:  	Set   *Var8  FFFFFFE2 
 147C:  	Call  GetActorVar   ( .Actor:Self 0000000A *Var9 )
 1494:  	Call  $Function_80218930_17 ( *Var0 *Var1 *Var2 *Var6 *Var7 *Var8 *Var9 )
 14BC:  EndIf
 14C4:  Call  GetActorVar   ( .Actor:Enemy1 00000006 *Var0 )
 14DC:  If  *Var0  !=  00000000 
 14EC:  	Call  GetAnimatedPositionByTreeIndex    ( 00000001 00000008 *Var1 *Var2 *Var3 )
 150C:  	Call  GetAnimatedRotationByTreeIndex    ( 00000001 00000008 *Var4 *Var5 *Var6 )
 152C:  	Set   *Var7  0000000A 
 153C:  	Set   *Var8  FFFFFFF1 
 154C:  	Call  GetActorVar   ( .Actor:Enemy1 0000000A *Var9 )
 1564:  	Call  $Function_80218930_17 ( *Var0 *Var1 *Var2 *Var6 *Var7 *Var8 *Var9 )
 158C:  EndIf
 1594:  Call  GetActorVar   ( .Actor:Enemy2 00000006 *Var0 )
 15AC:  If  *Var0  !=  00000000 
 15BC:  	Call  GetAnimatedPositionByTreeIndex    ( 00000002 00000008 *Var1 *Var2 *Var3 )
 15DC:  	Call  GetAnimatedRotationByTreeIndex    ( 00000002 00000008 *Var4 *Var5 *Var6 )
 15FC:  	Set   *Var7  0000000A 
 160C:  	Set   *Var8  FFFFFFF1 
 161C:  	Call  GetActorVar   ( .Actor:Enemy2 0000000A *Var9 )
 1634:  	Call  $Function_80218930_17 ( *Var0 *Var1 *Var2 *Var6 *Var7 *Var8 *Var9 )
 165C:  EndIf
 1664:  Wait  1`
 1670:  Call  GetActorFlags ( .Actor:Self *Var0 )
 1684:  If  *Var0  !&  00400000 
 1694:  	Goto  0
 16A0:  EndIf
 16A8:  Return
 16B0:  End
}

#new:Script $Script_HandleEvent_8021F5A4_17 {
    0:  Call  UseIdleAnimation  ( .Actor:Self .False )
   14:  Call  EnableIdleScript  ( .Actor:Self 00000000 )
   28:  Call  SetAnimatorFlags  ( 00000000 00040000 00000000 )
   40:  Call  GetLastElement    ( *VarE )
   50:  Call  GetLastEvent      ( .Actor:Self *Var0 )
   64:  Switch  *Var0 
   70:  	Case  ==  .Event:BeginFirstStrike % 38
   7C:  	Case  ==  .Event:HitCombo % 9
   88:  		ExecWait  $Script_802235AC_17 
   94:  		ExecWait  $Script_80223D78_17 
   A0:  	Case  ==  .Event:Hit % A
   AC:  		ExecWait  $Script_80223764_17 
   B8:  		ExecWait  $Script_80223D78_17 
   C4:  	Case  ==  .Event:Death % 20
   D0:  		ExecWait  $Script_DoDeath_17 
   DC:  		Return
   E4:  	Case  ==  .Event:BurnHit % E
   F0:  		If  *VarE  &  00000002 
  100:  			ExecWait  $Script_8021F9E8_17 
  10C:  		Else
  114:  			ExecWait  $Script_80223764_17 
  120:  			ExecWait  $Script_80223D78_17 
  12C:  		EndIf
  134:  	Case  ==  .Event:BurnDeath % 24
  140:  		ExecWait  $Script_DoDeath_17 
  14C:  		Return
  154:  	Case  ==  .Event:SpinSmashHit % B
  160:  		ExecWait  $Script_80223764_17 
  16C:  		ExecWait  $Script_80223D78_17 
  178:  	Case  ==  .Event:SpinSmashDeath % 21
  184:  		ExecWait  $Script_DoDeath_17 
  190:  		Return
  198:  	Case  ==  .Event:ShockHit % 2F
  1A4:  		SetConst  *Var0  00000001 
  1B4:  		SetConst  *Var1  00790009 
  1C4:  		ExecWait  DoShockHit 
  1D0:  	Case  ==  .Event:ShockDeath % 26
  1DC:  		ExecWait  $Script_DoDeath_17 
  1E8:  		Return
  1F0:  	Case  ==  00000017 % 17
  1FC:  		If  *VarE  !&  00000002 
  20C:  			ExecWait  $Script_802235AC_17 
  218:  			ExecWait  $Script_80223D78_17 
  224:  		EndIf
  22C:  	Case  ==  .Event:Immune % 19
  238:  		If  *VarE  !&  00000002 
  248:  			ExecWait  $Script_80223764_17 
  254:  			ExecWait  $Script_80223D78_17 
  260:  		EndIf
  268:  	Case  ==  .Event:AirLiftFailed % 1F
  274:  	Case  ==  .Event:SpikeTaunt % 1B
  280:  	Case  ==  .Event:EndFirstStrike % 35
  28C:  	Case  ==  .Event:RecoverStatus % 31
  298:  		Call  SetAnimatorFlags  ( 00000000 00040000 00000000 )
  2B0:  	Case  ==  00000030 % 30
  2BC:  		SetConst  *Var0  00000001 
  2CC:  		SetConst  *Var1  00790009 
  2DC:  		ExecWait  DoNormalHit 
  2E8:  		Wait  1000`
  2F4:  	Default
  2FC:  EndSwitch
  304:  Call  GetActorVar   ( .Actor:Self 00000000 *Var0 )
  31C:  If  *Var0  ==  00000000 
  32C:  	Call  ForceHomePos  ( .Actor:Self  61`  61`  0` )
  348:  Else
  350:  	Call  GetActorVar   ( .Actor:Self 00000005 *Var1 )
  368:  	If  *Var1  ==  00000001 
  378:  		Call  ForceHomePos  ( .Actor:Self  61`  61`  0` )
  394:  	Else
  39C:  		Call  ForceHomePos  ( .Actor:Self  83`  67`  0` )
  3B8:  	EndIf
  3C0:  EndIf
  3C8:  Call  GetStatusFlags    ( .Actor:Self *Var0 )
  3DC:  If  *Var0  &  ~Flags:StatusFlags:Stop % 200000
  3EC:  	Call  SetAnimatorFlags  ( 00000000 00040000 00000001 )
  404:  EndIf
  40C:  Call  EnableIdleScript  ( .Actor:Self 00000001 )
  420:  Call  UseIdleAnimation  ( .Actor:Self .True )
  434:  Return
  43C:  End
}

#new:Script $Script_8021F9E8_17 {
    0:  Thread
    8:  	Wait  1`
   14:  	Call  GetActorVar   ( .Actor:Self 00000000 *Var0 )
   2C:  	If  *Var0  ==  00000000 
   3C:  		Goto  A
   48:  	EndIf
   50:  	Call  GetActorVar   ( .Actor:Self 00000005 *Var2 )
   68:  	If  *Var2  ==  00000001 
   78:  		Goto  A
   84:  	EndIf
   8C:  	Set   *Var0  00000200 
   9C:  	ExecWait  $Script_80222EF0_17 
   A8:  	Label  A
   B4:  EndThread
   BC:  Call  GetActorVar   ( .Actor:Self 00000000 *Var0 )
   D4:  If  *Var0  !=  00000000 
   E4:  	Call  GetActorVar   ( .Actor:Self 00000005 *Var0 )
   FC:  	If  *Var0  ==  00000000 
  10C:  		Call  OverrideBattleDmaDest ( $End[9230] )
  11C:  		Call  LoadBattleDmaData ( 0000000E )
  12C:  		Call  PlayModelAnimation    ( 00000000 $End[9230] )
  140:  		Call  SetActorVar       ( .Actor:Self 00000007 00790003 )
  158:  		Call  SetActorVar       ( .Actor:Self 00000008 00790009 )
  170:  		Call  SetIdleAnimations ( .Actor:Self 00000001 $IdleAnimations_8021D064_17 )
  188:  		Call  SetDefenseTable   ( .Actor:Self 00000001 $DefenseTable_8021D0F0_17 )
  1A0:  		Call  SetDefenseTable   ( .Actor:Self 00000002 $DefenseTable_8021D0F0_17 )
  1B8:  		Thread
  1C0:  			Wait  14`
  1CC:  			Call  OverrideBattleDmaDest ( $End[9230] )
  1DC:  			Call  LoadBattleDmaData     ( 00000000 )
  1EC:  			Call  PlayModelAnimation    ( 00000000 $End[9230] )
  200:  		EndThread
  208:  	EndIf
  210:  EndIf
  218:  Return
  220:  End
}

#new:Script $Script_TakeTurn_8021FC10_17 {
    0:  Call  GetActorFlags ( .Actor:Self *Var0 )
   14:  If  *Var0  &  00400000 
   24:  	Return
   2C:  EndIf
   34:  Call  GetActorVar   ( .Actor:Self 00000000 *Var0 )
   4C:  Switch  *Var0 
   58:  	Case  ==  00000000 
   64:  		ExecWait  $Script_8021FF3C_17 
   70:  	Default
   78:  		Call  GetActorVar   ( .Actor:Self 00000005 *Var0 )
   90:  		If  *Var0  ==  00000001 
   A0:  			ExecWait  $Script_802204B0_17 
   AC:  		Else
   B4:  			Call  GetActorVar   ( .Actor:Self 0000000B *Var0 )
   CC:  			Sub   *Var0  00000001 
   DC:  			Call  SetActorVar   ( .Actor:Self 0000000B *Var0 )
   F4:  			If  *Var0  <=  00000000 
  104:  				Call  EnableIdleScript      ( .Actor:Self 00000000 )
  118:  				Call  UseBattleCamPreset    ( 00000013 )
  128:  				Call  SetBattleCamTarget    (  80`  70`  0` )
  140:  				Call  SetBattleCamZoom      (  300` )
  150:  				Call  SetBattleCamOffsetZ   (  30` )
  160:  				Call  MoveBattleCamOver     (  30` )
  170:  				Wait  30`
  17C:  				Loop  0000000A 
  188:  					Call  OverrideBattleDmaDest ( $End[9230] )
  198:  					Call  LoadBattleDmaData     ( 00000001 )
  1A8:  					Call  PlayModelAnimation    ( 00000000 $End[9230] )
  1BC:  					Wait  4`
  1C8:  				EndLoop
  1D0:  				Call  UseBattleCamPreset    ( 00000002 )
  1E0:  				Call  MoveBattleCamOver     (  15` )
  1F0:  				Call  PlaySoundAtActor      ( .Actor:Self 000003BB )
  204:  				Set   *Var0  00000200 
  214:  				ExecWait  $Script_80222EF0_17 
  220:  				Call  SetAnimation  ( .Actor:Self 00000001 00790004 )
  238:  				Call  OverrideBattleDmaDest ( $End[9230] )
  248:  				Call  LoadBattleDmaData     ( 0000000E )
  258:  				Call  PlayModelAnimation    ( 00000000 $End[9230] )
  26C:  				Wait  14`
  278:  				Call  OverrideBattleDmaDest ( $End[9230] )
  288:  				Call  LoadBattleDmaData     ( 00000000 )
  298:  				Call  PlayModelAnimation    ( 00000000 $End[9230] )
  2AC:  				Call  EnableIdleScript      ( .Actor:Self 00000001 )
  2C0:  			EndIf
  2C8:  		EndIf
  2D0:  EndSwitch
  2D8:  Return
  2E0:  End
}

#new:Vector3D $Vector3D_8021FEF8_17 {
260` 0` 0`
}

#new:SpecialFormation $SpecialFormation_8021FF04_17 {
$LavaBud_17 $Vector3D_8021FEF8_17 00000050 00000001 00000000 00000000 00000000 
}

#new:SpecialFormation $SpecialFormation_8021FF20_17 {
$LavaBud_17 $Vector3D_8021FEF8_17 00000046 00000002 00000032 0000000E 00000014 
}

#new:Script $Script_8021FF3C_17 {
    0:  Call  UseIdleAnimation  ( .Actor:Self .False )
   14:  Call  SetTargetActor    ( .Actor:Self .Actor:Player )
   28:  Thread
   30:  	Wait  8`
   3C:  	Call  UseBattleCamPreset    ( 00000013 )
   4C:  	Call  SetBattleCamTarget    (  80`  70`  0` )
   64:  	Call  SetBattleCamZoom      (  300` )
   74:  	Call  SetBattleCamOffsetZ   (  30` )
   84:  	Call  MoveBattleCamOver     (  45` )
   94:  	Wait  57`
   A0:  	Call  UseBattleCamPreset    ( 00000002 )
   B0:  	Call  MoveBattleCamOver     (  15` )
   C0:  EndThread
   C8:  Call  OverrideBattleDmaDest ( $End[9230] )
   D8:  Call  LoadBattleDmaData ( 00000002 )
   E8:  Call  PlayModelAnimation    ( 00000000 $End[9230] )
   FC:  Wait  14`
  108:  Call  SetAnimation      ( .Actor:Self 00000001 00790005 )
  120:  Wait  10`
  12C:  Call  PlaySoundAtActor  ( .Actor:Self 000003C1 )
  140:  Wait  45`
  14C:  Call  SetAnimation      ( .Actor:Self 00000001 00790006 )
  164:  Call  GetPartOffset     ( .Actor:Self 00000001 *Var0 *Var1 *Var2 )
  184:  Sub   *Var0  00000032 
  194:  Sub   *Var1  0000000F 
  1A4:  Call  SetGoalToTarget   ( .Actor:Self )
  1B4:  Call  GetGoalPos        ( .Actor:Self *Var3 *Var4 *Var5 )
  1D0:  Sub   *Var3  00000028 
  1E0:  Set   *Var4  FFFFFFF6 
  1F0:  Call  PlayEffect        ( 00000063 00000001 *Var0 *Var1 *Var2 *Var3 *Var4 *Var5 *Fixed[1.0] 00000014 00000014 00000000 00000000 00000000 )
  234:  Call  PlaySoundAtActor  ( .Actor:Self 000003C3 )
  248:  Wait  19`
  254:  Call  GetGoalPos        ( .Actor:Self *Var3 *Var4 *Var5 )
  270:  Call  PlayEffect        ( ~FX:EmitterVolume:Embers *Var3 00000000 *Var5 00000032 00000032 *Fixed[1.0] 00000028 00000037 *Fixed[1.0] *Fixed[1.0] 00000000 00000000 )
  2B4:  Call  OverrideBattleDmaDest ( $End[9230] )
  2C4:  Call  LoadBattleDmaData ( 00000003 )
  2D4:  Call  PlayModelAnimation    ( 00000000 $End[9230] )
  2E8:  Call  EnemyTestTarget   ( .Actor:Self *VarA ~Flags:DamageType:Fire 00000000 00000001 00000010 )
  30C:  Switch  *VarA 
  318:  	CaseOR  ==  .HitResult:Miss % 6
  324:  	CaseOR  ==  .HitResult:Lucky % 5
  330:  		Call  SetAnimation  ( .Actor:Self 00000001 00790003 )
  348:  		Wait  19`
  354:  		Call  OverrideBattleDmaDest ( $End[9230] )
  364:  		Call  LoadBattleDmaData     ( 00000000 )
  374:  		Call  PlayModelAnimation    ( 00000000 $End[9230] )
  388:  		If  *VarA  ==  .HitResult:Lucky % 5
  398:  			Call  EnemyTestTarget   ( .Actor:Self *Var0 ~Flags:DamageType:TriggerLucky 00000000 00000000 00000000 )
  3BC:  		EndIf
  3C4:  		Wait  15`
  3D0:  		Call  UseBattleCamPreset    ( 00000002 )
  3E0:  		Call  EnableIdleScript      ( .Actor:Self 00000001 )
  3F4:  		Call  UseIdleAnimation      ( .Actor:Self .True )
  408:  		Return
  410:  	EndCaseGroup
  418:  EndSwitch
  420:  Wait  2`
  42C:  Call  SetGoalToTarget   ( .Actor:Self )
  43C:  Call  EnemyDamageTarget ( .Actor:Self *Var0 ~Flags:DamageType:Fire 0000FFFF 00000000 00000005 00000020 )
  464:  Set   *VarF  *Var0 
  474:  Switch  *VarF 
  480:  	CaseOR  ==  .HitResult:Hit % 0
  48C:  	CaseOR  ==  .HitResult:QuakeImmune % 2
  498:  	CaseOR  ==  0000000A % A
  4A4:  		Call  SetAnimation  ( .Actor:Self 00000001 00790003 )
  4BC:  		Wait  19`
  4C8:  		Call  OverrideBattleDmaDest ( $End[9230] )
  4D8:  		Call  LoadBattleDmaData     ( 00000000 )
  4E8:  		Call  PlayModelAnimation    ( 00000000 $End[9230] )
  4FC:  		If  *VarF  ==  0000000A % A
  50C:  			Return
  514:  		EndIf
  51C:  		Call  UseBattleCamPreset    ( 00000002 )
  52C:  	EndCaseGroup
  534:  EndSwitch
  53C:  Call  EnableIdleScript  ( .Actor:Self 00000001 )
  550:  Call  UseIdleAnimation  ( .Actor:Self .True )
  564:  Return
  56C:  End
}

#new:Script $Script_802204B0_17 {
    0:  Call  UseIdleAnimation  ( .Actor:Self .False )
   14:  Call  SetTargetActor    ( .Actor:Self .Actor:Player )
   28:  Thread
   30:  	Wait  8`
   3C:  	Call  UseBattleCamPreset    ( 00000013 )
   4C:  	Call  SetBattleCamTarget    (  80`  70`  0` )
   64:  	Call  SetBattleCamZoom      (  300` )
   74:  	Call  SetBattleCamOffsetZ   (  30` )
   84:  	Call  MoveBattleCamOver     (  45` )
   94:  	Wait  54`
   A0:  	Call  UseBattleCamPreset    ( 00000002 )
   B0:  	Call  MoveBattleCamOver     (  15` )
   C0:  EndThread
   C8:  Call  OverrideBattleDmaDest ( $End[9230] )
   D8:  Call  LoadBattleDmaData ( 00000002 )
   E8:  Call  PlayModelAnimation    ( 00000000 $End[9230] )
   FC:  Wait  14`
  108:  Call  SetAnimation      ( .Actor:Self 00000001 0079000E )
  120:  Wait  10`
  12C:  Call  PlaySoundAtActor  ( .Actor:Self 000003C1 )
  140:  Wait  45`
  14C:  Call  SetAnimation      ( .Actor:Self 00000001 00790008 )
  164:  Call  GetPartOffset     ( .Actor:Self 00000001 *Var0 *Var1 *Var2 )
  184:  Sub   *Var0  00000028 
  194:  Set   *Var1  FFFFFFF6 
  1A4:  Call  SetGoalToTarget   ( .Actor:Self )
  1B4:  Call  GetGoalPos        ( .Actor:Self *Var3 *Var4 *Var5 )
  1D0:  Call  PlayEffect        ( 00000063 00000000 *Var0 *Var1 *Var2 *Var3 *Var4 *Var5 *Fixed[1.0] 00000010 00000028 00000000 00000000 00000000 )
  214:  Call  PlaySoundAtActor  ( .Actor:Self 000003C4 )
  228:  Wait  15`
  234:  Thread
  23C:  	Wait  24`
  248:  	Call  PlayEffect    ( ~FX:EmitterVolume:Embers *Var3 00000000 *Var5 00000032 00000032 *Fixed[1.0] 00000028 00000037 *Fixed[1.0] *Fixed[1.0] 00000000 00000000 )
  28C:  EndThread
  294:  Call  EnemyTestTarget   ( .Actor:Self *VarA ~Flags:DamageType:Fire 00000000 00000001 00000010 )
  2B8:  Switch  *VarA 
  2C4:  	CaseOR  ==  .HitResult:Miss % 6
  2D0:  	CaseOR  ==  .HitResult:Lucky % 5
  2DC:  		Wait  20`
  2E8:  		Call  OverrideBattleDmaDest ( $End[9230] )
  2F8:  		Call  LoadBattleDmaData     ( 00000003 )
  308:  		Call  PlayModelAnimation    ( 00000000 $End[9230] )
  31C:  		Call  SetAnimation  ( .Actor:Self 00000001 00790007 )
  334:  		Wait  19`
  340:  		Call  SetAnimation  ( .Actor:Self 00000001 00790004 )
  358:  		Call  OverrideBattleDmaDest ( $End[9230] )
  368:  		Call  LoadBattleDmaData     ( 00000000 )
  378:  		Call  PlayModelAnimation    ( 00000000 $End[9230] )
  38C:  		If  *VarA  ==  .HitResult:Lucky % 5
  39C:  			Call  EnemyTestTarget   ( .Actor:Self *Var0 ~Flags:DamageType:TriggerLucky 00000000 00000000 00000000 )
  3C0:  		EndIf
  3C8:  		Wait  15`
  3D4:  		Call  UseBattleCamPreset    ( 00000002 )
  3E4:  		Call  EnableIdleScript      ( .Actor:Self 00000001 )
  3F8:  		Call  UseIdleAnimation      ( .Actor:Self .True )
  40C:  		Return
  414:  	EndCaseGroup
  41C:  EndSwitch
  424:  Wait  2`
  430:  Call  SetGoalToTarget   ( .Actor:Self )
  440:  Call  EnemyDamageTarget ( .Actor:Self *Var0 ~Flags:DamageType:Fire 0000FFFF 00000000 00000007 00000020 )
  468:  Wait  20`
  474:  Call  OverrideBattleDmaDest ( $End[9230] )
  484:  Call  LoadBattleDmaData ( 00000003 )
  494:  Call  PlayModelAnimation    ( 00000000 $End[9230] )
  4A8:  Call  SetAnimation      ( .Actor:Self 00000001 00790007 )
  4C0:  Wait  19`
  4CC:  Call  SetAnimation      ( .Actor:Self 00000001 00790004 )
  4E4:  Call  OverrideBattleDmaDest ( $End[9230] )
  4F4:  Call  LoadBattleDmaData ( 00000000 )
  504:  Call  PlayModelAnimation    ( 00000000 $End[9230] )
  518:  If  *VarF  ==  0000000A 
  528:  	Return
  530:  EndIf
  538:  Call  UseBattleCamPreset    ( 00000002 )
  548:  Call  EnableIdleScript      ( .Actor:Self 00000001 )
  55C:  Call  UseIdleAnimation      ( .Actor:Self .True )
  570:  Return
  578:  End
}

#new:Script $Script_DoDeath_17 {
    0:  Call  SetActorVar       ( .Actor:Self 00000001 00000001 )
   18:  ExecWait  $Script_80223764_17 
   24:  Label  0
   30:  Call  GetBattleFlags    ( *Var0 )
   40:  If  *Var0  &  00000100 
   50:  	Wait  1`
   5C:  	Goto  0
   68:  EndIf
   70:  Call  GetActorVar   ( .Actor:Self 00000000 *Var2 )
   88:  If  *Var2  ==  00000000 
   98:  	Call  ClearStatusEffects    ( .Actor:Self )
   A8:  	Call  ClearStatusEffects    ( .Actor:Enemy1 )
   B8:  	Call  ClearStatusEffects    ( .Actor:Enemy2 )
   C8:  	Call  SetAnimatorFlags      ( 00000000 00040000 00000000 )
   E0:  	Call  GetActorVar   ( .Actor:Enemy1 00000000 *Var0 )
   F8:  	Call  SetAnimatorFlags      ( *Var0 00040000 00000000 )
  110:  	Call  GetActorVar   ( .Actor:Enemy2 00000000 *Var0 )
  128:  	Call  SetAnimatorFlags      ( *Var0 00040000 00000000 )
  140:  	Call  CancelEnemyTurn       ( 00000001 )
  150:  	Call  UseBattleCamPreset    ( 00000013 )
  160:  	Call  SetBattleCamTarget    (  90`  90`  0` )
  178:  	Call  SetBattleCamZoom      (  360` )
  188:  	Call  SetBattleCamOffsetZ   (  0` )
  198:  	Call  MoveBattleCamOver     (  240` )
  1A8:  	Call  OverrideBattleDmaDest ( $End[9230] )
  1B8:  	Call  LoadBattleDmaData     ( 00000009 )
  1C8:  	Call  PlayModelAnimation    ( 00000000 $End[9230] )
  1DC:  	Call  OverrideBattleDmaDest ( $End[1230] )
  1EC:  	Call  LoadBattleDmaData     ( 00000023 )
  1FC:  	Call  PlayModelAnimation    ( 00000003 $End[1230] )
  210:  	Wait  10`
  21C:  	Call  OverrideBattleDmaDest ( $End[6230] )
  22C:  	Call  LoadBattleDmaData     ( 00000018 )
  23C:  	Call  PlayModelAnimation    ( 00000001 $End[6230] )
  250:  	Wait  5`
  25C:  	Call  OverrideBattleDmaDest ( $End[3230] )
  26C:  	Call  LoadBattleDmaData     ( 00000018 )
  27C:  	Call  PlayModelAnimation    ( 00000002 $End[3230] )
  290:  	Wait  4`
  29C:  	Thread
  2A4:  		Call  PlaySound ( 000003BC )
  2B4:  		Call  ShakeCam  ( .Cam:Battle 00000000  119` *Fixed[0.3] )
  2D0:  		Call  PlaySound ( 000007BC )
  2E0:  	EndThread
  2E8:  	Call  $Function_80218000_17 ( 00000050 000000EA )
  2FC:  	Call  8027D32C  ( FFFFFF81 )
  30C:  	Call  8027D32C  ( 00000201 )
  31C:  	Call  8027D32C  ( 00000202 )
  32C:  	Call  SetAnimation      ( .Actor:Self 00000001 0079000D )
  344:  	Call  OverrideBattleDmaDest ( $End[9230] )
  354:  	Call  LoadBattleDmaData ( 0000000A )
  364:  	Call  PlayModelAnimation    ( 00000000 $End[9230] )
  378:  	Thread
  380:  		Call  PlaySoundAtActor  ( .Actor:Self 000003C6 )
  394:  		Wait  35`
  3A0:  		Set   *Var0  00000000 
  3B0:  		Set   *Var1  00000000 
  3C0:  		Loop
  3CC:  			Call  GetAnimatedModelRootPosition  ( 00000000 *Var2 *Var3 *Var4 )
  3E8:  			Add   *Var3  *Var1 
  3F8:  			Call  SetAnimatedModelRootPosition  ( 00000000 *Var2 *Var3 *Var4 )
  414:  			Call  $Function_80218B38_17 ( *Var0 *Var1 )
  428:  			Add   *Var0  00000001 
  438:  			Wait  1`
  444:  			If  *Var1  ==  00000063 
  454:  				BreakLoop
  45C:  			EndIf
  464:  		EndLoop
  46C:  	EndThread
  474:  	Wait  10`
  480:  	Call  SetAnimation  ( .Actor:Enemy1 00000001 007B000D )
  498:  	Call  OverrideBattleDmaDest ( $End[6230] )
  4A8:  	Call  LoadBattleDmaData     ( 00000019 )
  4B8:  	Call  PlayModelAnimation    ( 00000001 $End[6230] )
  4CC:  	Thread
  4D4:  		Wait  45`
  4E0:  		Set   *Var0  00000000 
  4F0:  		Set   *Var1  00000000 
  500:  		Loop
  50C:  			Call  GetAnimatedModelRootPosition  ( 00000001 *Var2 *Var3 *Var4 )
  528:  			Add   *Var3  *Var1 
  538:  			Call  SetAnimatedModelRootPosition  ( 00000001 *Var2 *Var3 *Var4 )
  554:  			Call  $Function_80218B90_17 ( *Var0 *Var1 )
  568:  			Add   *Var0  00000001 
  578:  			Wait  1`
  584:  			If  *Var1  ==  00000063 
  594:  				BreakLoop
  59C:  			EndIf
  5A4:  		EndLoop
  5AC:  	EndThread
  5B4:  	Wait  5`
  5C0:  	Call  SetAnimation  ( .Actor:Enemy2 00000001 007B000D )
  5D8:  	Call  OverrideBattleDmaDest ( $End[3230] )
  5E8:  	Call  LoadBattleDmaData     ( 00000019 )
  5F8:  	Call  PlayModelAnimation    ( 00000002 $End[3230] )
  60C:  	Thread
  614:  		Wait  45`
  620:  		Set   *Var0  00000000 
  630:  		Set   *Var1  00000000 
  640:  		Loop
  64C:  			Call  GetAnimatedModelRootPosition  ( 00000002 *Var2 *Var3 *Var4 )
  668:  			Add   *Var3  *Var1 
  678:  			Call  SetAnimatedModelRootPosition  ( 00000002 *Var2 *Var3 *Var4 )
  694:  			Call  $Function_80218B90_17 ( *Var0 *Var1 )
  6A8:  			Add   *Var0  00000001 
  6B8:  			Wait  1`
  6C4:  			If  *Var1  ==  00000063 
  6D4:  				BreakLoop
  6DC:  			EndIf
  6E4:  		EndLoop
  6EC:  	EndThread
  6F4:  	Wait  35`
  700:  	Call  UseBattleCamPreset    ( 00000013 )
  710:  	Call  SetBattleCamTarget    (  90`  90`  0` )
  728:  	Call  SetBattleCamZoom      (  360` )
  738:  	Call  SetBattleCamOffsetZ   (  -45` )
  748:  	Call  MoveBattleCamOver     (  110` )
  758:  	Wait  60`
  764:  	Call  SetAnimatedModelRootPosition  ( 00000000 00000000 FFFFFF06 00000000 )
  780:  	Call  SetAnimatedModelRootPosition  ( 00000001 00000000 FFFFFF06 00000000 )
  79C:  	Call  SetAnimatedModelRootPosition  ( 00000002 00000000 FFFFFF06 00000000 )
  7B8:  	Call  SetActorPos   ( .Actor:Self  100`  0`  0` )
  7D4:  	Call  DropStarPoints        ( .Actor:Self )
  7E4:  	Call  PlaySoundAtActor      ( .Actor:Self .Sound:Death )
  7F8:  	Call  ForceHomePos  ( .Actor:Self  61`  61`  0` )
  814:  	Wait  65`
  820:  	Call  UseBattleCamPreset    ( 00000013 )
  830:  	Call  GetActorPos   ( .Actor:Player *Var0 *Var1 *Var2 )
  84C:  	Call  SetBattleCamTarget    ( *Var0 *Var1 *Var2 )
  864:  	Call  SetBattleCamZoom      (  240` )
  874:  	Call  SetBattleCamOffsetZ   (  40` )
  884:  	Call  MoveBattleCamOver     (  20` )
  894:  	Wait  20`
  8A0:  	Thread
  8A8:  		Call  $Function_80218A98_17 ( )
  8B4:  	EndThread
  8BC:  	Wait  80`
  8C8:  	Thread
  8D0:  		Call  PlaySound ( 000003BC )
  8E0:  		Call  ShakeCam  ( .Cam:Battle 00000000  165` *Fixed[1.2] )
  8FC:  		Call  PlaySound ( 000007BC )
  90C:  	EndThread
  914:  	Call  $Function_80218000_17 ( 00000050 0000012C )
  928:  	Call  UseIdleAnimation  ( .Actor:Player .False )
  93C:  	Call  SetAnimation      ( .Actor:Player 00000000 0001002A )
  954:  	Wait  20`
  960:  	Call  PlaySoundAtActor  ( .Actor:Player 00000263 )
  974:  	Call  GetActorPos       ( .Actor:Player *Var0 *Var1 *Var2 )
  990:  	Add   *Var1  00000014 
  9A0:  	Call  PlayEffect        ( ~FX:EmoteIcon:Question 00000000 *Var0 *Var1 *Var2 00000014 0000013B 0000001E 00000000 00000000 00000000 00000000 00000000 )
  9E4:  	Call  GetActorPos       ( .Actor:Partner *Var0 *Var1 *Var2 )
  A00:  	Add   *Var1  0000000A 
  A10:  	Call  PlayEffect        ( ~FX:EmoteIcon:Question 00000000 *Var0 *Var1 *Var2 00000014 0000013B 0000001E 00000000 00000000 00000000 00000000 00000000 )
  A54:  	Wait  50`
  A60:  	Call  UseBattleCamPreset    ( 00000013 )
  A70:  	Call  SetBattleCamTarget    (  90`  90`  0` )
  A88:  	Call  SetBattleCamZoom  (  360` )
  A98:  	Call  SetBattleCamOffsetZ   (  -60` )
  AA8:  	Call  MoveBattleCamOver (  30` )
  AB8:  	Wait  40`
  AC4:  	Call  UseBattleCamPreset    ( 00000013 )
  AD4:  	Call  SetBattleCamTarget    (  90`  90`  0` )
  AEC:  	Call  SetBattleCamZoom  (  200` )
  AFC:  	Call  SetBattleCamOffsetZ   (  -60` )
  B0C:  	Call  MoveBattleCamOver (  40` )
  B1C:  	Wait  40`
  B28:  	Thread
  B30:  		Call  UseIdleAnimation  ( .Actor:Player .False )
  B44:  		Call  SetAnimation      ( .Actor:Player 00000000 0001002B )
  B5C:  		Wait  40`
  B68:  		Call  UseIdleAnimation  ( .Actor:Player .True )
  B7C:  	EndThread
  B84:  	Call  UseBattleCamPreset    ( 00000013 )
  B94:  	Call  SetBattleCamTarget    (  30`  90`  0` )
  BAC:  	Call  SetBattleCamZoom      (  460` )
  BBC:  	Call  SetBattleCamOffsetZ   (  0` )
  BCC:  	Call  MoveBattleCamOver     (  30` )
  BDC:  	Call  $Function_80218000_17 ( 000000B4 00000010 )
  BF0:  	Thread
  BF8:  		Call  ShakeCam  ( .Cam:Battle 00000000  4` *Fixed[3.0] )
  C14:  		Call  ShakeCam  ( .Cam:Battle 00000000  10` *Fixed[1.0] )
  C30:  	EndThread
  C38:  	ChildThread
  C40:  		Wait  50`
  C4C:  		Call  UseBattleCamPreset    ( 00000013 )
  C5C:  		Call  SetBattleCamTarget    (  90`  90`  0` )
  C74:  		Call  SetBattleCamZoom      (  360` )
  C84:  		Call  SetBattleCamOffsetZ   (  0` )
  C94:  		Call  MoveBattleCamOver     (  40` )
  CA4:  		Wait  85`
  CB0:  	EndChildThread
  CB8:  	Call  SetActorVar   ( .Actor:Self 00000000 00000001 )
  CD0:  	Call  SetActorVar   ( .Actor:Self 00000007 00790004 )
  CE8:  	Call  SetActorVar   ( .Actor:Self 00000008 0079000A )
  D00:  	Call  SetActorVar   ( .Actor:Enemy1 00000007 007B0004 )
  D18:  	Call  SetActorVar   ( .Actor:Enemy1 00000008 007B000B )
  D30:  	Call  SetActorVar   ( .Actor:Enemy2 00000007 007B0004 )
  D48:  	Call  SetActorVar   ( .Actor:Enemy2 00000008 007B000B )
  D60:  	Call  SetIdleAnimations ( .Actor:Self 00000001 $IdleAnimations_802250D4_17 )
  D78:  	Call  SetIdleAnimations ( .Actor:Enemy1 00000001 $IdleAnimations_802250D4_17 )
  D90:  	Call  SetIdleAnimations ( .Actor:Enemy2 00000001 $IdleAnimations_802250D4_17 )
  DA8:  	Call  SetDefenseTable   ( .Actor:Self 00000001 $DefenseTable_8021D0F0_17 )
  DC0:  	Call  SetDefenseTable   ( .Actor:Self 00000002 $DefenseTable_8021D0F0_17 )
  DD8:  	Call  SetDefenseTable   ( .Actor:Enemy1 00000001 $DefenseTable_80225128_17 )
  DF0:  	Call  SetDefenseTable   ( .Actor:Enemy1 00000002 $DefenseTable_80225128_17 )
  E08:  	Call  SetDefenseTable   ( .Actor:Enemy2 00000001 $DefenseTable_80225128_17 )
  E20:  	Call  SetDefenseTable   ( .Actor:Enemy2 00000002 $DefenseTable_80225128_17 )
  E38:  	Call  8026D5A4      ( FFFFFF81 00000001 00000002 00000001 )
  E54:  	Call  8026D5A4      ( FFFFFF81 00000002 00000002 00000001 )
  E70:  	Call  8026D5A4      ( 00000201 00000001 00000002 00000001 )
  E8C:  	Call  8026D5A4      ( 00000201 00000002 00000002 00000001 )
  EA8:  	Call  8026D5A4      ( 00000202 00000001 00000002 00000001 )
  EC4:  	Call  8026D5A4      ( 00000202 00000002 00000002 00000001 )
  EE0:  	Call  SetPartFlagBits   ( .Actor:Enemy1 00000002 00002000 .False )
  EFC:  	Call  SetPartFlagBits   ( .Actor:Enemy2 00000002 00002000 .False )
  F18:  	Set   *Var0  00000200 
  F28:  	ExecWait  $Script_80222EF0_17 
  F34:  	Call  SetAnimation  ( .Actor:Self 00000001 00790004 )
  F4C:  	Set   *Var0  00000201 
  F5C:  	ExecWait  $Script_80222EF0_17 
  F68:  	Call  SetAnimation  ( .Actor:Enemy1 00000001 007B0004 )
  F80:  	Set   *Var0  00000202 
  F90:  	ExecWait  $Script_80222EF0_17 
  F9C:  	Call  SetAnimation  ( .Actor:Enemy2 00000001 007B0004 )
  FB4:  	Call  SetActorType  ( .Actor:Self 000000B4 )
  FC8:  	Call  SetActorType  ( .Actor:Enemy1 000000B6 )
  FDC:  	Call  SetActorType  ( .Actor:Enemy2 000000B6 )
  FF0:  	Call  SetActorFlagBits  ( .Actor:Self 00001000 .True )
 1008:  	Call  SetActorFlagBits  ( .Actor:Enemy1 00001000 .True )
 1020:  	Call  SetActorFlagBits  ( .Actor:Enemy2 00001000 .True )
 1038:  	Call  GetEnemyMaxHP ( .Actor:Self *Var0 )
 104C:  	Call  SetEnemyHP    ( .Actor:Self *Var0 )
 1060:  	Call  GetEnemyMaxHP ( .Actor:Enemy1 *Var0 )
 1074:  	Call  SetEnemyHP    ( .Actor:Enemy1 *Var0 )
 1088:  	Call  GetEnemyMaxHP ( .Actor:Enemy2 *Var0 )
 109C:  	Call  SetEnemyHP    ( .Actor:Enemy2 *Var0 )
 10B0:  	Call  EnableModel   ( 0000004E .True )
 10C4:  	Call  EnableModel   ( 0000004F .True )
 10D8:  	Call  EnableModel   ( 00000050 .True )
 10EC:  	Call  EnableModel   ( 00000051 .True )
 1100:  	Call  EnableModel   ( 00000052 .True )
 1114:  	Call  EnableModel   ( 00000053 .True )
 1128:  	Call  EnableModel   ( 00000054 .True )
 113C:  	Call  EnableModel   ( 00000055 .True )
 1150:  	Call  EnableModel   ( 00000057 .True )
 1164:  	Call  EnableModel   ( 00000058 .True )
 1178:  	Call  PlaySoundAtActor  ( .Actor:Self 000003C5 )
 118C:  	Call  PlayEffect    ( ~FX:EmitterVolume:Embers 00000064 00000000 00000000 00000046 00000050 *Fixed[2.5] 00000050 00000037 *Fixed[2.0] *Fixed[2.0] 00000000 00000000 )
 11D0:  	Call  LoadAnimatedModel ( 00000004 $AnimatedModelTree_8021A330_17 )
 11E4:  	Call  PlayModelAnimation    ( 00000004 $ModelAnimation_8021A364_17 )
 11F8:  	Call  SetAnimatedModelRootPosition  ( 00000004 00000000 00000000 00000000 )
 1214:  	Call  EnableGroup   ( 00000017 .False )
 1228:  	Call  EnableGroup   ( 0000001C .True )
 123C:  	Thread
 1244:  		Wait  45`
 1250:  		Call  DeleteAnimatedModel   ( 00000004 )
 1260:  	EndThread
 1268:  	Call  OverrideBattleDmaDest ( $End[9230] )
 1278:  	Call  LoadBattleDmaData     ( 0000000C )
 1288:  	Call  PlayModelAnimation    ( 00000000 $End[9230] )
 129C:  	Call  SetAnimatedModelRootPosition  ( 00000000 00000000 00000000 00000000 )
 12B8:  	Wait  5`
 12C4:  	Call  SetAnimatedModelRootPosition  ( 00000002 00000032 0000000E 00000014 )
 12E0:  	Call  OverrideBattleDmaDest ( $End[3230] )
 12F0:  	Call  LoadBattleDmaData     ( 0000001C )
 1300:  	Call  PlayModelAnimation    ( 00000002 $End[3230] )
 1314:  	Wait  10`
 1320:  	Call  SetAnimatedModelRootPosition  ( 00000001 00000000 00000000 00000000 )
 133C:  	Call  OverrideBattleDmaDest ( $End[6230] )
 134C:  	Call  LoadBattleDmaData     ( 0000001C )
 135C:  	Call  PlayModelAnimation    ( 00000001 $End[6230] )
 1370:  	Wait  45`
 137C:  	Call  SetAnimatedModelRootPosition  ( 00000003 00000000 00000000 00000000 )
 1398:  	Call  OverrideBattleDmaDest ( $End[1230] )
 13A8:  	Call  LoadBattleDmaData     ( 00000024 )
 13B8:  	Call  PlayModelAnimation    ( 00000003 $End[1230] )
 13CC:  	Call  OverrideBattleDmaDest ( $End[9230] )
 13DC:  	Call  LoadBattleDmaData     ( 00000000 )
 13EC:  	Call  PlayModelAnimation    ( 00000000 $End[9230] )
 1400:  	Call  SetAnimation  ( .Actor:Self 00000001 0079000E )
 1418:  	Wait  5`
 1424:  	Call  OverrideBattleDmaDest ( $End[3230] )
 1434:  	Call  LoadBattleDmaData     ( 0000001F )
 1444:  	Call  PlayModelAnimation    ( 00000002 $End[3230] )
 1458:  	Wait  10`
 1464:  	Call  OverrideBattleDmaDest ( $End[6230] )
 1474:  	Call  LoadBattleDmaData     ( 0000001F )
 1484:  	Call  PlayModelAnimation    ( 00000001 $End[6230] )
 1498:  	Wait  30`
 14A4:  	Call  OverrideBattleDmaDest ( $End[1230] )
 14B4:  	Call  LoadBattleDmaData     ( 00000022 )
 14C4:  	Call  PlayModelAnimation    ( 00000003 $End[1230] )
 14D8:  	Call  GetEnemyMaxHP ( .Actor:Enemy1 *Var0 )
 14EC:  	Call  SetEnemyHP    ( .Actor:Enemy1 *Var0 )
 1500:  	Call  GetEnemyMaxHP ( .Actor:Enemy2 *Var0 )
 1514:  	Call  SetEnemyHP    ( .Actor:Enemy2 *Var0 )
 1528:  	Call  SetActorVar   ( .Actor:Self 00000001 00000000 )
 1540:  	Call  EnableIdleScript      ( .Actor:Self 00000001 )
 1554:  	Call  UseIdleAnimation      ( .Actor:Self .True )
 1568:  Else
 1570:  	Call  8027D32C  ( 00000201 )
 1580:  	Call  8027D32C  ( 00000202 )
 1590:  	Set   *Var0  00000203 
 15A0:  	ExecWait  $Script_80222B6C_17 
 15AC:  	Set   *Var0  00000204 
 15BC:  	ExecWait  $Script_80222B6C_17 
 15C8:  	Call  OverrideBattleDmaDest ( $End[1230] )
 15D8:  	Call  LoadBattleDmaData     ( 00000023 )
 15E8:  	Call  PlayModelAnimation    ( 00000003 $End[1230] )
 15FC:  	Thread
 1604:  		Call  PlaySound ( 000003BC )
 1614:  		Call  ShakeCam  ( .Cam:Battle 00000000  100` *Fixed[0.5] )
 1630:  		Call  ShakeCam  ( .Cam:Battle 00000000  8` *Fixed[0.2] )
 164C:  		Call  PlaySound ( 000007BC )
 165C:  	EndThread
 1664:  	Call  $Function_80218000_17 ( 00000050 000000D8 )
 1678:  	Thread
 1680:  		Call  PlaySoundAtActor  ( .Actor:Self 000003CC )
 1694:  		Call  GetActorVar       ( .Actor:Self 00000005 *Var0 )
 16AC:  		If  *Var0  ==  00000000 
 16BC:  			Call  OverrideBattleDmaDest ( $End[9230] )
 16CC:  			Call  LoadBattleDmaData     ( 00000008 )
 16DC:  			Call  PlayModelAnimation    ( 00000000 $End[9230] )
 16F0:  		Else
 16F8:  			Call  OverrideBattleDmaDest ( $End[9230] )
 1708:  			Call  LoadBattleDmaData     ( 00000009 )
 1718:  			Call  PlayModelAnimation    ( 00000000 $End[9230] )
 172C:  		EndIf
 1734:  		Wait  19`
 1740:  		Call  8027D32C  ( FFFFFF81 )
 1750:  		Call  OverrideBattleDmaDest ( $End[9230] )
 1760:  		Call  LoadBattleDmaData     ( 0000000A )
 1770:  		Call  PlayModelAnimation    ( 00000000 $End[9230] )
 1784:  		Call  GetActorVar   ( .Actor:Self 00000005 *Var0 )
 179C:  		If  *Var0  ==  00000001 
 17AC:  			Call  PlayEffect    ( ~FX:EmitterVolume:Embers 00000069 0000003C 00000002 00000050 0000003C *Fixed[1.8] 0000005A 00000064 *Fixed[1.5] *Fixed[1.5] 00000000 00000000 )
 17F0:  		EndIf
 17F8:  		Wait  121`
 1804:  		Call  PlaySoundAtActor  ( .Actor:Self 000003CD )
 1818:  		Call  SetAnimation      ( .Actor:Self 00000001 0079000A )
 1830:  		Call  OverrideBattleDmaDest ( $End[9230] )
 1840:  		Call  LoadBattleDmaData ( 0000000B )
 1850:  		Call  PlayModelAnimation    ( 00000000 $End[9230] )
 1864:  		Wait  30`
 1870:  		Call  GetActorVar       ( .Actor:Self 0000000A *Var0 )
 1888:  		Set   *Var1  00000064 
 1898:  		Loop  00000032 
 18A4:  			Sub   *Var1  00000002 
 18B4:  			SetF  *Var2  *Var0 
 18C4:  			MulF  *Var2  *Var1 
 18D4:  			MulF  *Var2  *Fixed[0.01] 
 18E4:  			Call  SetActorVar   ( .Actor:Self 0000000A *Var2 )
 18FC:  			Wait  1`
 1908:  		EndLoop
 1910:  	EndThread
 1918:  	Thread
 1920:  		Wait  12`
 192C:  		Call  GetActorVar   ( .Actor:Enemy1 00000005 *Var0 )
 1944:  		If  *Var0  ==  00000000 
 1954:  			Call  OverrideBattleDmaDest ( $End[6230] )
 1964:  			Call  LoadBattleDmaData     ( 00000017 )
 1974:  			Call  PlayModelAnimation    ( 00000001 $End[6230] )
 1988:  		Else
 1990:  			Call  OverrideBattleDmaDest ( $End[6230] )
 19A0:  			Call  LoadBattleDmaData     ( 00000018 )
 19B0:  			Call  PlayModelAnimation    ( 00000001 $End[6230] )
 19C4:  		EndIf
 19CC:  		Wait  19`
 19D8:  		Call  OverrideBattleDmaDest ( $End[6230] )
 19E8:  		Call  LoadBattleDmaData     ( 00000019 )
 19F8:  		Call  PlayModelAnimation    ( 00000001 $End[6230] )
 1A0C:  		Call  GetActorVar   ( .Actor:Enemy1 00000005 *Var0 )
 1A24:  		If  *Var0  ==  00000001 
 1A34:  			Call  PlayEffect    ( ~FX:EmitterVolume:Embers 00000043 0000001E 00000002 00000032 00000028 *Fixed[1.3] 0000001E 00000046 *Fixed[1.2] *Fixed[1.2] 00000000 00000000 )
 1A78:  		EndIf
 1A80:  		Wait  96`
 1A8C:  		Call  OverrideBattleDmaDest ( $End[6230] )
 1A9C:  		Call  LoadBattleDmaData     ( 0000001A )
 1AAC:  		Call  PlayModelAnimation    ( 00000001 $End[6230] )
 1AC0:  		Wait  30`
 1ACC:  		Call  GetActorVar   ( .Actor:Enemy1 0000000A *Var0 )
 1AE4:  		Set   *Var1  00000064 
 1AF4:  		Loop  00000032 
 1B00:  			Sub   *Var1  00000002 
 1B10:  			SetF  *Var2  *Var0 
 1B20:  			MulF  *Var2  *Var1 
 1B30:  			MulF  *Var2  *Fixed[0.01] 
 1B40:  			Call  SetActorVar   ( .Actor:Enemy1 0000000A *Var2 )
 1B58:  			Wait  1`
 1B64:  		EndLoop
 1B6C:  	EndThread
 1B74:  	Thread
 1B7C:  		Wait  5`
 1B88:  		Call  GetActorVar   ( .Actor:Enemy2 00000005 *Var0 )
 1BA0:  		If  *Var0  ==  00000000 
 1BB0:  			Call  OverrideBattleDmaDest ( $End[3230] )
 1BC0:  			Call  LoadBattleDmaData     ( 00000017 )
 1BD0:  			Call  PlayModelAnimation    ( 00000002 $End[3230] )
 1BE4:  		Else
 1BEC:  			Call  OverrideBattleDmaDest ( $End[3230] )
 1BFC:  			Call  LoadBattleDmaData     ( 00000018 )
 1C0C:  			Call  PlayModelAnimation    ( 00000002 $End[3230] )
 1C20:  		EndIf
 1C28:  		Wait  19`
 1C34:  		Call  OverrideBattleDmaDest ( $End[3230] )
 1C44:  		Call  LoadBattleDmaData     ( 00000019 )
 1C54:  		Call  PlayModelAnimation    ( 00000002 $End[3230] )
 1C68:  		Call  GetActorVar   ( .Actor:Enemy2 00000005 *Var0 )
 1C80:  		If  *Var0  ==  00000001 
 1C90:  			Call  PlayEffect    ( ~FX:EmitterVolume:Embers 00000078 00000023 00000005 00000032 00000028 *Fixed[1.3] 0000001E 00000046 *Fixed[1.2] *Fixed[1.2] 00000000 00000000 )
 1CD4:  		EndIf
 1CDC:  		Wait  96`
 1CE8:  		Call  OverrideBattleDmaDest ( $End[3230] )
 1CF8:  		Call  LoadBattleDmaData     ( 0000001A )
 1D08:  		Call  PlayModelAnimation    ( 00000002 $End[3230] )
 1D1C:  		Wait  30`
 1D28:  		Call  GetActorVar   ( .Actor:Enemy2 0000000A *Var0 )
 1D40:  		Set   *Var1  00000064 
 1D50:  		Loop  00000032 
 1D5C:  			Sub   *Var1  00000002 
 1D6C:  			SetF  *Var2  *Var0 
 1D7C:  			MulF  *Var2  *Var1 
 1D8C:  			MulF  *Var2  *Fixed[0.01] 
 1D9C:  			Call  SetActorVar   ( .Actor:Enemy2 0000000A *Var2 )
 1DB4:  			Wait  1`
 1DC0:  		EndLoop
 1DC8:  	EndThread
 1DD0:  	Thread
 1DD8:  		Wait  150`
 1DE4:  		Set   *Var0  0000000E 
 1DF4:  		Loop  0000000E 
 1E00:  			Sub   *Var0  00000001 
 1E10:  			Call  SetAnimatedModelRootPosition  ( 00000002 00000032 *Var0 00000014 )
 1E2C:  			Wait  2`
 1E38:  		EndLoop
 1E40:  	EndThread
 1E48:  	Wait  212`
 1E54:  	Call  PlaySoundAtActor  ( .Actor:Self 000020EA )
 1E68:  	Call  SetAnimation  ( .Actor:Self 00000001 0079000F )
 1E80:  	Call  SetAnimation  ( .Actor:Enemy1 00000001 007B000F )
 1E98:  	Call  SetAnimation  ( .Actor:Enemy2 00000001 007B000F )
 1EB0:  	Call  PlayEffect    ( ~FX:ShockWave:White FFFFFFC4 00000000 00000002 00000000 00000000 00000000 00000000 00000000 00000000 00000000 00000000 00000000 )
 1EF4:  	Thread
 1EFC:  		Call  $Function_80218000_17 ( 000000B4 00000010 )
 1F10:  		Call  ShakeCam  ( .Cam:Battle 00000000  5` *Fixed[4.0] )
 1F2C:  	EndThread
 1F34:  	Wait  3`
 1F40:  	Call  SetActorPos       ( .Actor:Self  -60`  0`  0` )
 1F5C:  	Call  DropStarPoints    ( .Actor:Self )
 1F6C:  	Call  PlaySoundAtActor  ( .Actor:Self .Sound:Death )
 1F80:  	Wait  15`
 1F8C:  	Call  GetActorVar       ( .Actor:Self 00000006 *Var0 )
 1FA4:  	If  *Var0  !=  00000000 
 1FB4:  		Call  SetActorVar   ( .Actor:Self 00000006 00000000 )
 1FCC:  		Call  RemoveEffect  ( *Var0 )
 1FDC:  	EndIf
 1FE4:  	Call  GetActorVar   ( .Actor:Enemy1 00000006 *Var0 )
 1FFC:  	If  *Var0  !=  00000000 
 200C:  		Call  SetActorVar   ( .Actor:Enemy1 00000006 00000000 )
 2024:  		Call  RemoveEffect  ( *Var0 )
 2034:  	EndIf
 203C:  	Call  GetActorVar   ( .Actor:Enemy2 00000006 *Var0 )
 2054:  	If  *Var0  !=  00000000 
 2064:  		Call  SetActorVar   ( .Actor:Enemy2 00000006 00000000 )
 207C:  		Call  RemoveEffect  ( *Var0 )
 208C:  	EndIf
 2094:  	Wait  5`
 20A0:  	Call  SetActorFlagBits  ( .Actor:Enemy0 00400000 .True )
 20B8:  	Call  SetPartFlagBits   ( .Actor:Enemy0 00000001 00020000 .True )
 20D4:  	Call  SetPartFlagBits   ( .Actor:Enemy0 00000002 00020000 .True )
 20F0:  	Call  SetActorFlagBits  ( .Actor:Enemy1 00400000 .True )
 2108:  	Call  SetActorFlagBits  ( .Actor:Enemy2 00400000 .True )
 2120:  EndIf
 2128:  Return
 2130:  End
}

#new:Unknown $???_80222B68_17 {
00000000 
}

#new:Script $Script_80222B6C_17 {
    0:  Call  ActorExists   ( *Var0 *Var1 )
   14:  If  *Var1  ==  .False 
   24:  	Return
   2C:  EndIf
   34:  Call  GetActorHP    ( *Var0 *Var1 )
   48:  If  *Var1  ==  00000000 
   58:  	Return
   60:  EndIf
   68:  Thread
   70:  	Call  SetAnimation  ( *Var0 00000001 007A0003 )
   88:  	Wait  10`
   94:  	Set   *Var2  00000000 
   A4:  	Loop  00000018 
   B0:  		Call  SetPartRotation   ( *Var0 00000001 00000000 *Var2 00000000 )
   D0:  		Add   *Var2  0000001E 
   E0:  		Wait  1`
   EC:  	EndLoop
   F4:  	Call  GetActorPos   ( *Var0 *Var3 *Var4 *Var5 )
  110:  	Call  PlayEffect    ( ~FX:BigSmokePuff *Var3 *Var4 *Var5 00000000 00000000 00000000 00000000 00000000 00000000 00000000 00000000 00000000 00000000 )
  154:  	Set   *Var3  00000000 
  164:  	Loop  0000000C 
  170:  		Call  SetPartRotation   ( *Var0 00000001 *Var3 *Var2 00000000 )
  190:  		Add   *Var3  00000008 
  1A0:  		Wait  1`
  1AC:  	EndLoop
  1B4:  	Call  RemoveActor   ( *Var0 )
  1C4:  EndThread
  1CC:  Return
  1D4:  End
}

#new:IntTable $IntTable_80222D48_17 {
FFFFFFFF 00000000 FFFFFFFF FFFFFFFF FFFFFFFF FFFFFFFF FFFFFFFE FFFFFFFF 
FFFFFFFE FFFFFFFE FFFFFFFE FFFFFFFE FFFFFFFD FFFFFFFE FFFFFFFD FFFFFFFD 
FFFFFFFD FFFFFFFD FFFFFFFD FFFFFFFD FFFFFFFC FFFFFFFC FFFFFFFD FFFFFFFC 
FFFFFFFC FFFFFFFC FFFFFFFB FFFFFFFC FFFFFFFC FFFFFFFB FFFFFFFB FFFFFFFB 
FFFFFFFC FFFFFFFB FFFFFFFA FFFFFFFB FFFFFFFB FFFFFFFA FFFFFFFB FFFFFFFA 
FFFFFFFB FFFFFFFA FFFFFFFA FFFFFFFA FFFFFFFA FFFFFFFA FFFFFFF9 FFFFFFFA 
FFFFFFFA FFFFFFF9 FFFFFFFA FFFFFFF9 FFFFFFFA 00000063 
}

#new:IntTable $IntTable_80222E20_17 {
FFFFFFFF 00000000 FFFFFFFF 00000000 FFFFFFFF FFFFFFFF FFFFFFFF FFFFFFFE 
FFFFFFFF FFFFFFFE FFFFFFFE FFFFFFFF FFFFFFFD FFFFFFFE FFFFFFFE FFFFFFFD 
FFFFFFFE FFFFFFFD FFFFFFFD FFFFFFFD FFFFFFFD FFFFFFFC FFFFFFFD FFFFFFFC 
FFFFFFFC FFFFFFFD FFFFFFFB FFFFFFFC FFFFFFFC FFFFFFFD FFFFFFFB FFFFFFFB 
FFFFFFFB FFFFFFFB FFFFFFFB FFFFFFFB FFFFFFFB FFFFFFFA FFFFFFFB FFFFFFFA 
FFFFFFFA FFFFFFFA FFFFFFFA FFFFFFFA FFFFFFF9 FFFFFFFA FFFFFFF9 FFFFFFF9 
FFFFFFF9 FFFFFFF9 FFFFFFF9 00000063 
}

#new:Script $Script_80222EF0_17 {
    0:  Switch  *Var0 
    C:  	Case  ==  00000201 
   18:  		Call  SetActorVar       ( .Actor:Enemy1 0000000A 00000023 )
   30:  		Call  GetAnimatedPositionByTreeIndex    ( 00000001 00000008 *Var1 *Var2 *Var3 )
   50:  		Call  GetAnimatedRotationByTreeIndex    ( 00000001 00000008 *Var4 *Var5 *Var6 )
   70:  		Set   *Var7  0000000A 
   80:  		Set   *Var8  FFFFFFF1 
   90:  		Call  $Function_80218BE8_17 ( *Var1 *Var2 *Var6 *Var7 *Var8 *Var3 *Var4 )
   B8:  		Call  GetPartOffset     ( .Actor:Enemy1 00000001 *Var0 *Var1 *Var2 )
   D8:  		Sub   *Var2  00000003 
   E8:  		Call  PlayEffect        ( ~FX:Fire:LargeRed *Var3 *Var4 *Var2 *Fixed[0.3] *VarA 00000000 00000000 00000000 00000000 00000000 00000000 00000000 )
  12C:  		Call  SetActorVar       ( .Actor:Enemy1 00000006 *VarA )
  144:  		Call  SetIdleAnimations ( .Actor:Enemy1 00000001 $IdleAnimations_802250D4_17 )
  15C:  		Call  SetDefenseTable   ( .Actor:Enemy1 00000001 $DefenseTable_80225128_17 )
  174:  		Call  SetDefenseTable   ( .Actor:Enemy1 00000002 $DefenseTable_80225128_17 )
  18C:  		Call  SetPartEventBits  ( .Actor:Enemy1 00000001 00000002 .True )
  1A8:  		Call  SetPartEventBits  ( .Actor:Enemy1 00000002 00000002 .True )
  1C4:  		Call  SetActorVar       ( .Actor:Enemy1 00000007 007B0004 )
  1DC:  		Call  SetActorVar       ( .Actor:Enemy1 00000008 007B000B )
  1F4:  		Call  SetActorVar       ( .Actor:Enemy1 00000005 00000001 )
  20C:  		Call  SetPartFlagBits   ( .Actor:Enemy1 00000002 00020000 .False )
  228:  		Call  SetActorFlagBits  ( .Actor:Enemy1 00040000 .False )
  240:  	Case  ==  00000202 
  24C:  		Call  SetActorVar       ( .Actor:Enemy2 0000000A 00000023 )
  264:  		Call  GetAnimatedPositionByTreeIndex    ( 00000002 00000008 *Var1 *Var2 *Var3 )
  284:  		Call  GetAnimatedRotationByTreeIndex    ( 00000002 00000008 *Var4 *Var5 *Var6 )
  2A4:  		Set   *Var7  0000000A 
  2B4:  		Set   *Var8  FFFFFFF1 
  2C4:  		Call  $Function_80218BE8_17 ( *Var1 *Var2 *Var6 *Var7 *Var8 *Var3 *Var4 )
  2EC:  		Call  GetPartOffset     ( .Actor:Enemy2 00000001 *Var0 *Var1 *Var2 )
  30C:  		Sub   *Var2  00000003 
  31C:  		Call  PlayEffect        ( ~FX:Fire:LargeRed *Var3 *Var4 *Var2 *Fixed[0.3] *VarA 00000000 00000000 00000000 00000000 00000000 00000000 00000000 )
  360:  		Call  SetActorVar       ( .Actor:Enemy2 00000006 *VarA )
  378:  		Call  SetIdleAnimations ( .Actor:Enemy2 00000001 $IdleAnimations_802250D4_17 )
  390:  		Call  SetDefenseTable   ( .Actor:Enemy2 00000001 $DefenseTable_80225128_17 )
  3A8:  		Call  SetDefenseTable   ( .Actor:Enemy2 00000002 $DefenseTable_80225128_17 )
  3C0:  		Call  SetPartEventBits  ( .Actor:Enemy2 00000001 00000002 .True )
  3DC:  		Call  SetPartEventBits  ( .Actor:Enemy2 00000002 00000002 .True )
  3F8:  		Call  SetActorVar       ( .Actor:Enemy2 00000007 007B0004 )
  410:  		Call  SetActorVar       ( .Actor:Enemy2 00000008 007B000B )
  428:  		Call  SetActorVar       ( .Actor:Enemy2 00000005 00000001 )
  440:  		Call  SetPartFlagBits   ( .Actor:Enemy2 00000002 00020000 .False )
  45C:  		Call  SetActorFlagBits  ( .Actor:Enemy2 00040000 .False )
  474:  	Default
  47C:  		Call  SetActorVar       ( .Actor:Enemy0 0000000A 00000046 )
  494:  		Call  GetAnimatedPositionByTreeIndex    ( 00000000 0000000A *Var1 *Var2 *Var3 )
  4B4:  		Call  GetAnimatedRotationByTreeIndex    ( 00000000 0000000A *Var4 *Var5 *Var6 )
  4D4:  		Set   *Var7  0000001E 
  4E4:  		Set   *Var8  FFFFFFE2 
  4F4:  		Call  $Function_80218BE8_17 ( *Var1 *Var2 *Var6 *Var7 *Var8 *Var3 *Var4 )
  51C:  		Call  GetPartOffset     ( .Actor:Enemy0 00000001 *Var0 *Var1 *Var2 )
  53C:  		Sub   *Var2  00000003 
  54C:  		Call  PlayEffect        ( ~FX:Fire:LargeRed *Var3 *Var4 *Var2 *Fixed[0.7] *VarA 00000000 00000000 00000000 00000000 00000000 00000000 00000000 )
  590:  		Call  SetActorVar       ( .Actor:Enemy0 00000006 *VarA )
  5A8:  		Call  SetIdleAnimations ( .Actor:Enemy0 00000001 $IdleAnimations_8021D064_17 )
  5C0:  		Call  SetDefenseTable   ( .Actor:Enemy0 00000001 $DefenseTable_8021D0F0_17 )
  5D8:  		Call  SetDefenseTable   ( .Actor:Enemy0 00000002 $DefenseTable_8021D0F0_17 )
  5F0:  		Call  SetPartEventBits  ( .Actor:Enemy0 00000001 00000002 .True )
  60C:  		Call  SetPartEventBits  ( .Actor:Enemy0 00000002 00000002 .True )
  628:  		Call  SetActorVar       ( .Actor:Enemy0 00000007 00790004 )
  640:  		Call  SetActorVar       ( .Actor:Enemy0 00000008 0079000A )
  658:  		Call  SetActorVar       ( .Actor:Enemy0 00000005 00000001 )
  670:  		Call  ForceHomePos      ( .Actor:Self  61`  61`  0` )
  68C:  		Call  SetActorFlagBits  ( .Actor:Self 00040000 .False )
  6A4:  EndSwitch
  6AC:  Return
  6B4:  End
}

#new:Script $Script_802235AC_17 {
    0:  Call  GetActorVar   ( .Actor:Self 00000008 *Var0 )
   18:  Call  SetAnimation  ( .Actor:Self 00000001 *Var0 )
   30:  Call  GetActorVar   ( .Actor:Self 00000005 *Var0 )
   48:  If  *Var0  ==  00000002 
   58:  	Call  GetLastDamage ( .Actor:Self *Var0 )
   6C:  	If  *Var0  <  00000004 
   7C:  		Call  OverrideBattleDmaDest ( $End[9230] )
   8C:  		Call  LoadBattleDmaData     ( 00000005 )
   9C:  	Else
   A4:  		Call  OverrideBattleDmaDest ( $End[9230] )
   B4:  		Call  LoadBattleDmaData     ( 00000004 )
   C4:  	EndIf
   CC:  	Call  PlayModelAnimation    ( 00000000 $End[9230] )
   E0:  	Wait  29`
   EC:  	Wait  14`
   F8:  Else
  100:  	Call  GetLastDamage ( .Actor:Self *Var0 )
  114:  	If  *Var0  <  00000004 
  124:  		Call  OverrideBattleDmaDest ( $End[9230] )
  134:  		Call  LoadBattleDmaData     ( 00000007 )
  144:  	Else
  14C:  		Call  OverrideBattleDmaDest ( $End[9230] )
  15C:  		Call  LoadBattleDmaData     ( 00000006 )
  16C:  	EndIf
  174:  	Call  PlayModelAnimation    ( 00000000 $End[9230] )
  188:  	Wait  29`
  194:  	Wait  14`
  1A0:  EndIf
  1A8:  Return
  1B0:  End
}

#new:Script $Script_80223764_17 {
    0:  ExecWait  $Script_80223780_17 
    C:  Return
   14:  End
}

#new:Script $Script_80223780_17 {
    0:  Call  GetActorVar   ( .Actor:Self 00000008 *Var0 )
   18:  Call  SetAnimation  ( .Actor:Self 00000001 *Var0 )
   30:  Call  GetActorVar   ( .Actor:Self 00000000 *Var0 )
   48:  If  *Var0  ==  00000000 
   58:  	Call  GetLastDamage ( .Actor:Self *Var0 )
   6C:  	If  *Var0  <  00000004 
   7C:  		Call  OverrideBattleDmaDest ( $End[9230] )
   8C:  		Call  LoadBattleDmaData     ( 00000007 )
   9C:  	Else
   A4:  		Call  OverrideBattleDmaDest ( $End[9230] )
   B4:  		Call  LoadBattleDmaData     ( 00000006 )
   C4:  	EndIf
   CC:  	Call  PlayModelAnimation    ( 00000000 $End[9230] )
   E0:  	Wait  29`
   EC:  	Wait  14`
   F8:  	Return
  100:  EndIf
  108:  If  *VarE  &  0000000C 
  118:  	Call  GetActorVar   ( .Actor:Self 00000005 *Var0 )
  130:  	If  *Var0  ==  00000000 
  140:  		Call  GetLastDamage ( .Actor:Self *Var0 )
  154:  		If  *Var0  <  00000004 
  164:  			Call  OverrideBattleDmaDest ( $End[9230] )
  174:  			Call  LoadBattleDmaData     ( 00000005 )
  184:  		Else
  18C:  			Call  OverrideBattleDmaDest ( $End[9230] )
  19C:  			Call  LoadBattleDmaData     ( 00000004 )
  1AC:  		EndIf
  1B4:  		Call  PlayModelAnimation    ( 00000000 $End[9230] )
  1C8:  		Wait  29`
  1D4:  		Wait  14`
  1E0:  	Else
  1E8:  		Call  SetActorVar   ( .Actor:Self 0000000B 00000002 )
  200:  		Call  OverrideBattleDmaDest ( $End[9230] )
  210:  		Call  LoadBattleDmaData     ( 00000006 )
  220:  		Call  PlayModelAnimation    ( 00000000 $End[9230] )
  234:  		Call  GetActorVar   ( .Actor:Self 00000006 *Var0 )
  24C:  		If  *Var0  !=  00000000 
  25C:  			Call  RemoveEffect  ( *Var0 )
  26C:  			Call  SetActorVar   ( .Actor:Self 00000006 00000000 )
  284:  			Call  GetActorPos   ( .Actor:Self *Var0 *Var1 *Var2 )
  2A0:  			Call  PlayEffect    ( ~FX:ColdBreath:PuffUp *Var0 *Var1 *Var2 *Fixed[3.0] 00000032 00000000 00000000 00000000 00000000 00000000 00000000 00000000 )
  2E4:  		EndIf
  2EC:  		Call  SetIdleAnimations ( .Actor:Self 00000001 $IdleAnimations_8021D0B0_17 )
  304:  		Call  SetDefenseTable   ( .Actor:Self 00000001 $DefenseTable_8021D11C_17 )
  31C:  		Call  SetDefenseTable   ( .Actor:Self 00000002 $DefenseTable_8021D11C_17 )
  334:  		Call  SetActorVar       ( .Actor:Self 00000007 0079000A )
  34C:  		Call  SetActorVar       ( .Actor:Self 00000008 00790009 )
  364:  		Call  SetPartEventBits  ( .Actor:Self 00000001 00000002 .False )
  380:  		Call  SetPartEventBits  ( .Actor:Self 00000002 00000002 .False )
  39C:  		Wait  29`
  3A8:  		Call  PlaySoundAtActor  ( .Actor:Self 000003C8 )
  3BC:  		Call  OverrideBattleDmaDest ( $End[9230] )
  3CC:  		Call  LoadBattleDmaData ( 0000000D )
  3DC:  		Call  PlayModelAnimation    ( 00000000 $End[9230] )
  3F0:  		Wait  14`
  3FC:  		Call  SetActorVar       ( .Actor:Self 00000005 00000000 )
  414:  	EndIf
  41C:  Else
  424:  	Call  GetActorVar   ( .Actor:Self 00000005 *Var0 )
  43C:  	If  *Var0  ==  00000000 
  44C:  		Call  GetLastDamage ( .Actor:Self *Var0 )
  460:  		If  *Var0  <  00000004 
  470:  			Call  OverrideBattleDmaDest ( $End[9230] )
  480:  			Call  LoadBattleDmaData     ( 00000005 )
  490:  		Else
  498:  			Call  OverrideBattleDmaDest ( $End[9230] )
  4A8:  			Call  LoadBattleDmaData     ( 00000004 )
  4B8:  		EndIf
  4C0:  		Call  PlayModelAnimation    ( 00000000 $End[9230] )
  4D4:  		Wait  29`
  4E0:  		Wait  14`
  4EC:  	Else
  4F4:  		Call  GetLastDamage ( .Actor:Self *Var0 )
  508:  		If  *Var0  <  00000004 
  518:  			Call  OverrideBattleDmaDest ( $End[9230] )
  528:  			Call  LoadBattleDmaData     ( 00000007 )
  538:  		Else
  540:  			Call  OverrideBattleDmaDest ( $End[9230] )
  550:  			Call  LoadBattleDmaData     ( 00000006 )
  560:  		EndIf
  568:  		Call  PlayModelAnimation    ( 00000000 $End[9230] )
  57C:  		Call  PlayEffect    ( ~FX:EmitterVolume:Embers 00000050 00000032 00000000 0000003C 00000032 *Fixed[1.5] 00000024 0000002A *Fixed[0.8] *Fixed[0.8] 00000000 00000000 )
  5C0:  		Wait  29`
  5CC:  		Wait  14`
  5D8:  	EndIf
  5E0:  EndIf
  5E8:  Return
  5F0:  End
}

#new:Script $Script_80223D78_17 {
    0:  Call  GetActorVar   ( .Actor:Self 00000007 *Var0 )
   18:  Call  SetAnimation  ( .Actor:Self 00000001 *Var0 )
   30:  Call  GetActorVar   ( .Actor:Self 00000000 *Var0 )
   48:  If  *Var0  ==  00000000 
   58:  	Call  OverrideBattleDmaDest ( $End[9230] )
   68:  	Call  LoadBattleDmaData     ( 00000000 )
   78:  	Call  PlayModelAnimation    ( 00000000 $End[9230] )
   8C:  	Return
   94:  EndIf
   9C:  Call  GetActorVar   ( .Actor:Self 00000005 *Var0 )
   B4:  If  *Var0  ==  00000000 
   C4:  	Call  OverrideBattleDmaDest ( $End[9230] )
   D4:  	Call  LoadBattleDmaData     ( 00000001 )
   E4:  	Call  PlayModelAnimation    ( 00000000 $End[9230] )
   F8:  Else
  100:  	Call  OverrideBattleDmaDest ( $End[9230] )
  110:  	Call  LoadBattleDmaData     ( 00000000 )
  120:  	Call  PlayModelAnimation    ( 00000000 $End[9230] )
  134:  EndIf
  13C:  Return
  144:  End
}

#new:Actor $PetitPiranha_17 {
% stats
[Index]        B7b 
[Level]         0`b 
[MaxHP]         1`b 
[Coins]         0`b 
[Flags]       00000200 
[StatusTable] $StatusTable_80223F50_17 
% ai
[PartsCount]    1`s 
[PartsTable]  $PartsTable_80223FFC_17 
[Script]      $Script_Init_80224048_17 
% move effectiveness
[Escape]        0`b 
[Item]          0`b 
[AirLift]       0`b 
[Hurricane]     0`b % Bow's "Spook" as well
[UpAndAway]     0`b 
[PowerBounce]  80`b 
[SpinSmash]     0`b % weight (0-4)
% ui positions
[Size]         30`b  30`b % width height
[HealthBar]     0`b   0`b % dx dy
[StatusTurn]  -10`b  20`b % dx dy
[StatusIcon]   10`b  20`b % dx dy
}

#new:IdleAnimations $IdleAnimations_802250C0_17 {
.Status:Normal    007B0003
.Status:Stop      007B0002
.Status:End
}

#new:IdleAnimations $IdleAnimations_802250D4_17 {
.Status:Normal    007B0004
.Status:Stop      007B0002
.Status:End
}

#new:IdleAnimations $IdleAnimations_802250E8_17 {
.Status:Normal    007B000F
.Status:Stop      007B000F
.Status:End
}

#new:DefenseTable $DefenseTable_802250FC_17 {
.Element:Normal 00000000
.Element:Water  00000000
.Element:Ice    00000000
.Element:Fire   00000063
.Element:Blast  00000000
.Element:End
}

#new:DefenseTable $DefenseTable_80225128_17 {
.Element:Normal 00000000
.Element:Water  FFFFFFFE
.Element:Ice    FFFFFFFE
.Element:Fire   00000063
.Element:Blast  00000000
.Element:End
}

#new:DefenseTable $DefenseTable_80225154_17 {
.Element:Normal 00000000
.Element:Water  00000000
.Element:Ice    00000000
.Element:Fire   00000063
.Element:Blast  00000000
.Element:End
}

#new:StatusTable $StatusTable_80225180_17 {
.Status:Normal      0`
.Status:Default     0`
.Status:Sleep      75`
.Status:Poison      0`
.Status:Frozen      0`
.Status:Dizzy      30`
.Status:Fear        0`
.Status:Static      0`
.Status:Paralyze   75`
.Status:Shrink      0`
.Status:Stop       60`
.Status:DefaultTurnMod    0`
.Status:SleepTurnMod     -1`
.Status:PoisonTurnMod     0`
.Status:FrozenTurnMod     0`
.Status:DizzyTurnMod     -1`
.Status:FearTurnMod       0`
.Status:StaticTurnMod     0`
.Status:ParalyzeTurnMod  -1`
.Status:ShrinkTurnMod    -1`
.Status:StopTurnMod      -2`
.Status:End
}

#new:PartsTable $PartsTable_8022522C_17 {
00120000 01000000 000000FF $IdleAnimations_802250C0_17 $DefenseTable_802250FC_17 00000000 00000000 00F80000 00000000 
00900021 02000000 000000FF 00000000 $DefenseTable_802250FC_17 00000000 00000000 00F80000 00000000 
}

#new:Actor $LavaBud_17 {
% stats
[Index]        B5b 
[Level]         0`b 
[MaxHP]         8`b 
[Coins]         0`b 
[Flags]       00000000 
[StatusTable] $StatusTable_80225180_17 
% ai
[PartsCount]    2`s 
[PartsTable]  $PartsTable_8022522C_17 
[Script]      $Script_Init_8022529C_17 
% move effectiveness
[Escape]        0`b 
[Item]          0`b 
[AirLift]       0`b 
[Hurricane]     0`b % Bow's "Spook" as well
[UpAndAway]     0`b 
[PowerBounce]  80`b 
[SpinSmash]     4`b % weight (0-4)
% ui positions
[Size]         30`b  30`b % width height
[HealthBar]    10`b -42`b % dx dy
[StatusTurn]  -18`b  10`b % dx dy
[StatusIcon]    0`b   0`b % dx dy
}

#new:Script $Script_Init_8022529C_17 {
    0:  UseArray  $End[890] 
    C:  Call  SetActorVar   ( .Actor:Self 00000005 00000000 )
   24:  Call  SetActorVar   ( .Actor:Self 00000006 00000000 )
   3C:  Call  SetActorVar   ( .Actor:Self 00000009 00000000 )
   54:  Call  SetActorVar   ( .Actor:Self 00000004 00000000 )
   6C:  Call  SetActorVar   ( .Actor:Self 0000000B 00000000 )
   84:  Call  SetActorVar   ( .Actor:Self 0000000D 00000000 )
   9C:  Call  RandInt       ( 00000014 *Var0 )
   B0:  Add   *Var0  0000000F 
   C0:  Call  SetActorVar   ( .Actor:Self 0000000D *Var0 )
   D8:  Call  SetActorVar   ( .Actor:Self 00000007 007B0003 )
   F0:  Call  SetActorVar   ( .Actor:Self 00000008 007B0009 )
  108:  Call  BindTakeTurn  ( .Actor:Self $Script_TakeTurn_80225D98_17 )
  11C:  Call  BindIdle      ( .Actor:Self $Script_Idle_802253F0_17 )
  130:  Call  BindHandleEvent   ( .Actor:Self $Script_HandleEvent_80225738_17 )
  144:  Return
  14C:  End
}

#new:Script $Script_Idle_802253F0_17 {
    0:  Label  0
    C:  Call  GetActorHP    ( .Actor:Enemy0 *Var0 )
   20:  If  *Var0  ==  00000000 
   30:  	Goto  63
   3C:  EndIf
   44:  Call  GetActorFlags ( .Actor:Self *Var0 )
   58:  If  *Var0  &  00400000 
   68:  	Goto  63
   74:  EndIf
   7C:  Call  GetActorVar   ( .Actor:Self 00000005 *Var0 )
   94:  If  *Var0  !=  00000002 
   A4:  	Goto  63
   B0:  EndIf
   B8:  Label  A
   C4:  Call  GetActorVar   ( .Actor:Self 0000000D *Var0 )
   DC:  Sub   *Var0  00000001 
   EC:  Call  SetActorVar   ( .Actor:Self 0000000D *Var0 )
  104:  If  *Var0  !=  00000000 
  114:  	Goto  63
  120:  EndIf
  128:  Call  GetActorVar   ( .Actor:Self 0000000C *Var0 )
  140:  Add   *Var0  00000001 
  150:  If  *Var0  >=  00000003 
  160:  	Set   *Var0  00000000 
  170:  EndIf
  178:  Call  SetActorVar   ( .Actor:Self 0000000C *Var0 )
  190:  Switch  *Var0 
  19C:  	Case  ==  00000000 
  1A8:  		Call  RandInt   ( 00000032 *Var0 )
  1BC:  		Add   *Var0  00000019 
  1CC:  	Case  ==  00000001 
  1D8:  		Call  RandInt   ( 00000028 *Var0 )
  1EC:  		Add   *Var0  00000014 
  1FC:  	Default
  204:  		Call  RandInt   ( 00000003 *Var0 )
  218:  		Add   *Var0  00000003 
  228:  EndSwitch
  230:  Call  SetActorVar   ( .Actor:Self 0000000D *Var0 )
  248:  Call  GetActorVar   ( .Actor:Self 00000000 *Var0 )
  260:  If  *Var0  ==  00000001 
  270:  	Call  OverrideBattleDmaDest ( $End[6230] )
  280:  Else
  288:  	Call  OverrideBattleDmaDest ( $End[3230] )
  298:  EndIf
  2A0:  Call  LoadBattleDmaData ( 0000001E )
  2B0:  ExecWait  $Script_802256E0_17 
  2BC:  Label  63
  2C8:  Wait  1`
  2D4:  Goto  0
  2E0:  Return
  2E8:  End
}

#new:Script $Script_802256E0_17 {
    0:  If  *Var0  ==  00000001 
   10:  	Call  PlayModelAnimation    ( *Var0 $End[6230] )
   24:  Else
   2C:  	Call  PlayModelAnimation    ( *Var0 $End[3230] )
   40:  EndIf
   48:  Return
   50:  End
}

#new:Script $Script_HandleEvent_80225738_17 {
    0:  Call  UseIdleAnimation  ( .Actor:Self .False )
   14:  Call  EnableIdleScript  ( .Actor:Self 00000000 )
   28:  Call  GetActorVar       ( .Actor:Self 00000000 *Var0 )
   40:  Call  SetAnimatorFlags  ( *Var0 00040000 00000000 )
   58:  Call  GetLastElement    ( *VarE )
   68:  Call  GetLastEvent      ( .Actor:Self *Var0 )
   7C:  Switch  *Var0 
   88:  	Case  ==  .Event:BeginFirstStrike % 38
   94:  	Case  ==  .Event:HitCombo % 9
   A0:  		ExecWait  $Script_802270B4_17 
   AC:  	Case  ==  .Event:Hit % A
   B8:  		ExecWait  $Script_802275E4_17 
   C4:  	Case  ==  .Event:BurnHit % E
   D0:  		If  *VarE  &  00000002 
   E0:  			ExecWait  $Script_80225AA8_17 
   EC:  		Else
   F4:  			ExecWait  $Script_802275E4_17 
  100:  		EndIf
  108:  	Case  ==  .Event:BurnDeath % 24
  114:  		ExecWait  $Script_80226B58_17 
  120:  	Case  ==  .Event:SpinSmashHit % B
  12C:  		ExecWait  $Script_802275E4_17 
  138:  	Case  ==  .Event:SpinSmashDeath % 21
  144:  		ExecWait  $Script_80226B58_17 
  150:  	Case  ==  .Event:ShockHit % 2F
  15C:  		SetConst  *Var0  00000001 
  16C:  		Call  GetActorVar   ( .Actor:Self 00000008 *Var1 )
  184:  		ExecWait  DoShockHit 
  190:  	Case  ==  .Event:ShockDeath % 26
  19C:  		ExecWait  DoShockHit 
  1A8:  	Case  ==  00000017 % 17
  1B4:  		If  *VarE  !&  00000002 
  1C4:  			ExecWait  $Script_802270B4_17 
  1D0:  		EndIf
  1D8:  	Case  ==  .Event:Immune % 19
  1E4:  		If  *VarE  !&  00000002 
  1F4:  			ExecWait  $Script_802275E4_17 
  200:  		EndIf
  208:  	Case  ==  .Event:AirLiftFailed % 1F
  214:  	Case  ==  .Event:SpikeTaunt % 1B
  220:  	Case  ==  .Event:Death % 20
  22C:  		ExecWait  $Script_80226B58_17 
  238:  	Case  ==  .Event:EndFirstStrike % 35
  244:  	Case  ==  .Event:RecoverStatus % 31
  250:  		Call  GetActorVar       ( .Actor:Self 00000000 *Var0 )
  268:  		Call  SetAnimatorFlags  ( *Var0 00040000 00000000 )
  280:  	Case  ==  00000030 % 30
  28C:  		SetConst  *Var0  00000001 
  29C:  		Call  GetActorVar   ( .Actor:Self 00000008 *Var1 )
  2B4:  		ExecWait  DoNormalHit 
  2C0:  		Wait  1000`
  2CC:  	Default
  2D4:  EndSwitch
  2DC:  Call  GetStatusFlags    ( .Actor:Self *Var0 )
  2F0:  If  *Var0  &  ~Flags:StatusFlags:Stop % 200000
  300:  	Call  GetActorVar       ( .Actor:Self 00000000 *Var0 )
  318:  	Call  SetAnimatorFlags  ( *Var0 00040000 00000001 )
  330:  EndIf
  338:  Call  EnableIdleScript  ( .Actor:Self 00000001 )
  34C:  Call  UseIdleAnimation  ( .Actor:Self .True )
  360:  Return
  368:  End
}

#new:Script $Script_80225AA8_17 {
    0:  Thread
    8:  	Wait  1`
   14:  	Call  GetActorVar   ( .Actor:Enemy0 00000000 *Var0 )
   2C:  	If  *Var0  ==  00000000 
   3C:  		Goto  A
   48:  	EndIf
   50:  	Call  GetActorVar   ( .Actor:Self 00000005 *Var2 )
   68:  	If  *Var2  ==  00000001 
   78:  		Goto  A
   84:  	EndIf
   8C:  	Call  GetActorVar   ( .Actor:Self 00000000 *Var0 )
   A4:  	If  *Var0  ==  00000001 
   B4:  		Set   *Var0  00000201 
   C4:  	Else
   CC:  		Set   *Var0  00000202 
   DC:  	EndIf
   E4:  	ExecWait  $Script_80222EF0_17 
   F0:  	Label  A
   FC:  EndThread
  104:  Call  GetActorVar   ( .Actor:Enemy0 00000000 *Var0 )
  11C:  If  *Var0  !=  00000000 
  12C:  	Call  GetActorVar   ( .Actor:Self 00000005 *Var0 )
  144:  	If  *Var0  ==  00000002 
  154:  		Call  GetActorVar   ( .Actor:Self 00000000 *Var0 )
  16C:  		If  *Var0  ==  00000001 
  17C:  			Call  OverrideBattleDmaDest ( $End[6230] )
  18C:  		Else
  194:  			Call  OverrideBattleDmaDest ( $End[3230] )
  1A4:  		EndIf
  1AC:  		Call  LoadBattleDmaData ( 0000001D )
  1BC:  		ExecWait  $Script_802256E0_17 
  1C8:  		Call  SetActorVar       ( .Actor:Self 00000007 007B0003 )
  1E0:  		Call  SetActorVar       ( .Actor:Self 00000008 007B0009 )
  1F8:  		Call  SetIdleAnimations ( .Actor:Self 00000001 $IdleAnimations_802250D4_17 )
  210:  		Call  SetDefenseTable   ( .Actor:Self 00000001 $DefenseTable_80225128_17 )
  228:  		Call  SetDefenseTable   ( .Actor:Self 00000002 $DefenseTable_80225128_17 )
  240:  		Thread
  248:  			Wait  14`
  254:  			Call  GetActorVar   ( .Actor:Self 00000000 *Var0 )
  26C:  			If  *Var0  ==  00000001 
  27C:  				Call  OverrideBattleDmaDest ( $End[6230] )
  28C:  			Else
  294:  				Call  OverrideBattleDmaDest ( $End[3230] )
  2A4:  			EndIf
  2AC:  			Call  LoadBattleDmaData ( 0000001F )
  2BC:  			ExecWait  $Script_802256E0_17 
  2C8:  		EndThread
  2D0:  	EndIf
  2D8:  EndIf
  2E0:  Return
  2E8:  End
}

#new:Script $Script_TakeTurn_80225D98_17 {
    0:  Call  GetActorFlags ( .Actor:Self *Var0 )
   14:  If  *Var0  &  00400000 
   24:  	Return
   2C:  EndIf
   34:  Call  GetActorVar   ( .Actor:Enemy0 00000000 *Var0 )
   4C:  If  *Var0  ==  00000000 
   5C:  	Call  GetActorVar   ( .Actor:Self 00000005 *Var0 )
   74:  	If  *Var0  ==  00000002 
   84:  		Return
   8C:  	EndIf
   94:  	ExecWait  $Script_ShootBombs_17 
   A0:  Else
   A8:  	Call  GetActorVar   ( .Actor:Self 00000004 *Var1 )
   C0:  	If  *Var1  !=  00000000 
   D0:  		Sub   *Var1  00000001 
   E0:  		Call  SetActorVar   ( .Actor:Self 00000004 *Var1 )
   F8:  		Return
  100:  	EndIf
  108:  	Call  GetActorVar   ( .Actor:Self 00000005 *Var0 )
  120:  	If  *Var0  ==  00000001 
  130:  		If  *Var1  !=  00000000 
  140:  			Return
  148:  		EndIf
  150:  		Call  SetActorVar   ( .Actor:Self 00000004 00000001 )
  168:  		ExecWait  $Script_8022646C_17 
  174:  	Else
  17C:  		Call  GetActorVar   ( .Actor:Self 0000000B *Var0 )
  194:  		Sub   *Var0  00000001 
  1A4:  		Call  SetActorVar   ( .Actor:Self 0000000B *Var0 )
  1BC:  		If  *Var0  <=  00000000 
  1CC:  			Call  EnableIdleScript  ( .Actor:Self 00000000 )
  1E0:  			Call  GetActorVar       ( .Actor:Self 00000000 *Var0 )
  1F8:  			If  *Var0  ==  00000001 
  208:  				Call  UseBattleCamPreset    ( 00000013 )
  218:  				Call  SetBattleCamTarget    (  40`  30`  0` )
  230:  				Call  SetBattleCamZoom      (  270` )
  240:  				Call  SetBattleCamOffsetZ   (  20` )
  250:  				Call  MoveBattleCamOver     (  30` )
  260:  			Else
  268:  				Call  UseBattleCamPreset    ( 00000013 )
  278:  				Call  SetBattleCamTarget    (  110`  35`  0` )
  290:  				Call  SetBattleCamZoom      (  300` )
  2A0:  				Call  SetBattleCamOffsetZ   (  20` )
  2B0:  				Call  MoveBattleCamOver     (  30` )
  2C0:  			EndIf
  2C8:  			Wait  30`
  2D4:  			Loop  0000000A 
  2E0:  				If  *Var0  ==  00000001 
  2F0:  					Call  OverrideBattleDmaDest ( $End[6230] )
  300:  				Else
  308:  					Call  OverrideBattleDmaDest ( $End[3230] )
  318:  				EndIf
  320:  				Call  LoadBattleDmaData ( 0000001E )
  330:  				ExecWait  $Script_802256E0_17 
  33C:  				Wait  4`
  348:  			EndLoop
  350:  			Call  UseBattleCamPreset    ( 00000002 )
  360:  			Call  MoveBattleCamOver     (  15` )
  370:  			Call  GetEnemyMaxHP ( .Actor:Self *Var0 )
  384:  			Call  SetEnemyHP    ( .Actor:Self *Var0 )
  398:  			Call  SetAnimation  ( .Actor:Self 00000001 007B0004 )
  3B0:  			Call  GetActorVar   ( .Actor:Self 00000000 *Var0 )
  3C8:  			If  *Var0  ==  00000001 
  3D8:  				Set   *Var0  00000201 
  3E8:  			Else
  3F0:  				Set   *Var0  00000202 
  400:  			EndIf
  408:  			Call  PlaySoundAtActor  ( *Var0 000020BF )
  41C:  			ExecWait  $Script_80222EF0_17 
  428:  			Call  GetActorVar       ( .Actor:Self 00000000 *Var0 )
  440:  			If  *Var0  ==  00000001 
  450:  				Call  OverrideBattleDmaDest ( $End[6230] )
  460:  			Else
  468:  				Call  OverrideBattleDmaDest ( $End[3230] )
  478:  			EndIf
  480:  			Call  LoadBattleDmaData ( 0000001D )
  490:  			ExecWait  $Script_802256E0_17 
  49C:  			Wait  14`
  4A8:  			If  *Var0  ==  00000001 
  4B8:  				Call  OverrideBattleDmaDest ( $End[6230] )
  4C8:  			Else
  4D0:  				Call  OverrideBattleDmaDest ( $End[3230] )
  4E0:  			EndIf
  4E8:  			Call  LoadBattleDmaData ( 0000001F )
  4F8:  			ExecWait  $Script_802256E0_17 
  504:  			Call  GetEnemyMaxHP     ( .Actor:Self *Var0 )
  518:  			Call  SetEnemyHP        ( .Actor:Self *Var0 )
  52C:  			Call  EnableIdleScript  ( .Actor:Self 00000001 )
  540:  		EndIf
  548:  	EndIf
  550:  EndIf
  558:  ExecWait  $Script_8022630C_17 
  564:  Return
  56C:  End
}

#new:Script $Script_8022630C_17 {
    0:  Call  GetActorVar   ( .Actor:Self 00000007 *Var0 )
   18:  Call  SetAnimation  ( .Actor:Self 00000001 *Var0 )
   30:  Call  GetActorVar   ( .Actor:Self 00000000 *Var0 )
   48:  Call  GetActorVar   ( .Actor:Enemy0 00000000 *Var3 )
   60:  Call  GetActorVar   ( .Actor:Self 00000005 *Var3 )
   78:  If  *Var3  ==  00000002 
   88:  	If  *Var0  ==  00000001 
   98:  		Call  OverrideBattleDmaDest ( $End[6230] )
   A8:  	Else
   B0:  		Call  OverrideBattleDmaDest ( $End[3230] )
   C0:  	EndIf
   C8:  	Call  LoadBattleDmaData ( 0000001E )
   D8:  	ExecWait  $Script_802256E0_17 
   E4:  Else
   EC:  	If  *Var0  ==  00000001 
   FC:  		Call  OverrideBattleDmaDest ( $End[6230] )
  10C:  	Else
  114:  		Call  OverrideBattleDmaDest ( $End[3230] )
  124:  	EndIf
  12C:  	Call  LoadBattleDmaData ( 0000001F )
  13C:  	ExecWait  $Script_802256E0_17 
  148:  EndIf
  150:  Return
  158:  End
}

#new:Script $Script_8022646C_17 {
    0:  Call  GetActorVar   ( .Actor:Self 00000005 *Var0 )
   18:  If  *Var0  ==  00000002 
   28:  	Return
   30:  EndIf
   38:  Call  GetActorVar   ( .Actor:Self 00000009 *Var0 )
   50:  If  *Var0  !=  00000000 
   60:  	Return
   68:  EndIf
   70:  Call  UseIdleAnimation  ( .Actor:Self .False )
   84:  Thread
   8C:  	Call  GetActorPos   ( .Actor:Self *Var0 *Var1 *Var2 )
   A8:  	Wait  8`
   B4:  	Call  UseBattleCamPreset    ( 00000013 )
   C4:  	Call  SetBattleCamTarget    ( *Var0 *Var1 *Var2 )
   DC:  	Call  SetBattleCamZoom      (  300` )
   EC:  	Call  SetBattleCamOffsetZ   (  30` )
   FC:  	Call  MoveBattleCamOver     (  30` )
  10C:  	Wait  45`
  118:  	Call  UseBattleCamPreset    ( 00000002 )
  128:  	Call  MoveBattleCamOver     (  20` )
  138:  EndThread
  140:  Call  GetActorVar   ( .Actor:Self 00000000 *Var0 )
  158:  If  *Var0  ==  00000001 
  168:  	Call  OverrideBattleDmaDest ( $End[6230] )
  178:  Else
  180:  	Call  OverrideBattleDmaDest ( $End[3230] )
  190:  EndIf
  198:  Call  LoadBattleDmaData ( 00000012 )
  1A8:  ExecWait  $Script_802256E0_17 
  1B4:  Thread
  1BC:  	Wait  20`
  1C8:  	Call  SetAnimation  ( .Actor:Self 00000001 007B0007 )
  1E0:  	Wait  34`
  1EC:  	Call  SetAnimation  ( .Actor:Self 00000001 007B0008 )
  204:  	Wait  10`
  210:  	Call  SetAnimation  ( .Actor:Self 00000001 007B0004 )
  228:  	If  *Var0  ==  00000001 
  238:  		Call  OverrideBattleDmaDest ( $End[6230] )
  248:  	Else
  250:  		Call  OverrideBattleDmaDest ( $End[3230] )
  260:  	EndIf
  268:  	Call  LoadBattleDmaData ( 0000001F )
  278:  	ExecWait  $Script_802256E0_17 
  284:  EndThread
  28C:  Wait  56`
  298:  If  *Var0  ==  00000001 
  2A8:  	Call  SummonEnemy   ( $SpecialFormation_80226B04_17 00000000 )
  2BC:  Else
  2C4:  	Call  SummonEnemy   ( $SpecialFormation_80226B20_17 00000000 )
  2D8:  EndIf
  2E0:  Set   *Var5  *Var0 
  2F0:  Call  GetActorVar   ( .Actor:Self 00000009 *Var0 )
  308:  Add   *Var0  00000001 
  318:  Call  SetActorVar   ( .Actor:Self 00000009 *Var0 )
  330:  Call  GetActorVar   ( .Actor:Self 00000000 *Var0 )
  348:  If  *Var0  ==  00000001 
  358:  	Call  SetActorVar   ( *Var5 00000000 00000201 )
  370:  Else
  378:  	Call  SetActorVar   ( *Var5 00000000 00000202 )
  390:  EndIf
  398:  Call  GetPartOffset ( .Actor:Self 00000001 *Var0 *Var1 *Var2 )
  3B8:  Sub   *Var0  0000000F 
  3C8:  Sub   *Var1  0000000F 
  3D8:  Call  SetActorPos   ( *Var5 *Var0 *Var1 *Var2 )
  3F4:  Sub   *Var0  0000001E 
  404:  Sub   *Var1  0000000F 
  414:  Call  PlaySoundAtActor  ( *Var5 000003C9 )
  428:  Call  GetActorVar   ( .Actor:Self 00000000 *Var9 )
  440:  If  *Var9  ==  00000001 
  450:  	Call  GetActorPos   ( *Var5 *Var0 *Var1 *Var2 )
  46C:  	Set   *Var0  FFFFFFF4 
  47C:  	Set   *Var1  00000050 
  48C:  	Call  SetGoalPos    ( *Var5 *Var0 *Var1 *Var2 )
  4A8:  	Call  SetHomePos    ( *Var5 *Var0 *Var1 *Var2 )
  4C4:  	Call  SetActorSpeed ( *Var5 *Fixed[4.0] )
  4D8:  	Call  SetActorJumpGravity   ( *Var5 *Fixed[1.0] )
  4EC:  	Call  FlyToGoal     ( *Var5  24`  -42` .Easing:QuarticOut )
  508:  Else
  510:  	Call  GetActorPos   ( *Var5 *Var0 *Var1 *Var2 )
  52C:  	Set   *Var0  00000012 
  53C:  	Set   *Var1  0000001C 
  54C:  	Call  SetGoalPos    ( *Var5 *Var0 *Var1 *Var2 )
  568:  	Call  SetHomePos    ( *Var5 *Var0 *Var1 *Var2 )
  584:  	Call  SetActorSpeed ( *Var5 *Fixed[5.0] )
  598:  	Call  SetActorJumpGravity   ( *Var5 *Fixed[1.2] )
  5AC:  	Call  FlyToGoal     ( *Var5  16`  -15` .Easing:CubicOut )
  5C8:  EndIf
  5D0:  Call  HPBarToHome   ( *Var5 )
  5E0:  Call  GetActorVar   ( .Actor:Self 00000000 *Var0 )
  5F8:  If  *Var0  ==  00000001 
  608:  	Call  OverrideBattleDmaDest ( $End[6230] )
  618:  Else
  620:  	Call  OverrideBattleDmaDest ( $End[3230] )
  630:  EndIf
  638:  Call  LoadBattleDmaData ( 0000001F )
  648:  ExecWait  $Script_802256E0_17 
  654:  Call  EnableIdleScript  ( .Actor:Self 00000001 )
  668:  Call  UseIdleAnimation  ( .Actor:Self .True )
  67C:  Return
  684:  End
}

#new:Vector3D $Vector3D_80226AF8_17 {
260` 0` 0`
}

#new:SpecialFormation $SpecialFormation_80226B04_17 {
$PetitPiranha_17 $Vector3D_80226AF8_17 0000005F FFFFFFF4 00000055 00000000 00000000 
}

#new:SpecialFormation $SpecialFormation_80226B20_17 {
$PetitPiranha_17 $Vector3D_80226AF8_17 0000005E 00000012 00000026 00000000 00000000 
}

#new:SpecialFormation $SpecialFormation_80226B3C_17 {
$PetitPiranhaBomb_17 $Vector3D_80226AF8_17 0000005F 00000000 00000000 00000000 00000000 
}

#new:Script $Script_80226B58_17 {
    0:  Call  GetActorVar   ( .Actor:Enemy0 00000000 *Var0 )
   18:  If  *Var0  !=  00000000 
   28:  	Call  GetActorVar   ( .Actor:Self 00000005 *Var0 )
   40:  	If  *Var0  ==  00000002 
   50:  		ExecWait  $Script_802275E4_17 
   5C:  		Return
   64:  	EndIf
   6C:  	Call  GetActorVar   ( .Actor:Self 00000008 *Var0 )
   84:  	Call  SetAnimation  ( .Actor:Self 00000001 *Var0 )
   9C:  	Call  GetActorVar   ( .Actor:Self 00000000 *Var0 )
   B4:  	If  *Var0  ==  00000001 
   C4:  		Call  OverrideBattleDmaDest ( $End[6230] )
   D4:  	Else
   DC:  		Call  OverrideBattleDmaDest ( $End[3230] )
   EC:  	EndIf
   F4:  	Call  LoadBattleDmaData ( 00000015 )
  104:  	ExecWait  $Script_802256E0_17 
  110:  	Call  SetActorVar       ( .Actor:Self 0000000B 00000002 )
  128:  	Call  GetActorVar       ( .Actor:Self 00000006 *Var0 )
  140:  	If  *Var0  !=  00000000 
  150:  		Call  RemoveEffect  ( *Var0 )
  160:  		Call  SetActorVar   ( .Actor:Self 00000006 00000000 )
  178:  	EndIf
  180:  	Call  SetIdleAnimations ( .Actor:Self 00000001 $IdleAnimations_802250E8_17 )
  198:  	Call  SetDefenseTable   ( .Actor:Self 00000001 $DefenseTable_80225154_17 )
  1B0:  	Call  SetDefenseTable   ( .Actor:Self 00000002 $DefenseTable_80225154_17 )
  1C8:  	Call  SetActorVar       ( .Actor:Self 00000007 007B000F )
  1E0:  	Call  SetActorVar       ( .Actor:Self 00000008 007B0009 )
  1F8:  	Call  SetAnimation      ( .Actor:Self 00000001 007B000F )
  210:  	Call  SetPartEventBits  ( .Actor:Self 00000001 00000002 .False )
  22C:  	Call  SetPartEventBits  ( .Actor:Self 00000002 00000002 .False )
  248:  	Wait  29`
  254:  	Call  PlaySoundAtActor  ( .Actor:Self 000003C7 )
  268:  	Call  GetActorVar       ( .Actor:Self 00000000 *Var0 )
  280:  	If  *Var0  ==  00000001 
  290:  		Call  OverrideBattleDmaDest ( $End[6230] )
  2A0:  	Else
  2A8:  		Call  OverrideBattleDmaDest ( $End[3230] )
  2B8:  	EndIf
  2C0:  	Call  LoadBattleDmaData ( 0000001B )
  2D0:  	ExecWait  $Script_802256E0_17 
  2DC:  	Wait  14`
  2E8:  	Call  SetActorVar       ( .Actor:Self 00000005 00000002 )
  300:  	Call  GetActorVar       ( .Actor:Enemy0 00000001 *VarF )
  318:  	If  *VarF  ==  00000000 
  328:  		ExecWait  $Script_8022630C_17 
  334:  	EndIf
  33C:  	Return
  344:  EndIf
  34C:  Call  GetActorVar   ( .Actor:Self 00000005 *Var0 )
  364:  If  *Var0  ==  00000000 
  374:  	Call  GetActorVar   ( .Actor:Self 00000000 *Var0 )
  38C:  	If  *Var0  ==  00000001 
  39C:  		Call  OverrideBattleDmaDest ( $End[6230] )
  3AC:  	Else
  3B4:  		Call  OverrideBattleDmaDest ( $End[3230] )
  3C4:  	EndIf
  3CC:  	Call  LoadBattleDmaData ( 00000015 )
  3DC:  	ExecWait  $Script_802256E0_17 
  3E8:  	Call  SetIdleAnimations ( .Actor:Self 00000001 $IdleAnimations_802250E8_17 )
  400:  	Call  SetActorVar       ( .Actor:Self 00000007 007B000F )
  418:  	Call  SetActorVar       ( .Actor:Self 00000008 007B0009 )
  430:  	Wait  29`
  43C:  	Call  PlaySoundAtActor  ( .Actor:Self 000003C7 )
  450:  	Call  GetActorVar       ( .Actor:Self 00000000 *Var0 )
  468:  	If  *Var0  ==  00000001 
  478:  		Call  OverrideBattleDmaDest ( $End[6230] )
  488:  	Else
  490:  		Call  OverrideBattleDmaDest ( $End[3230] )
  4A0:  	EndIf
  4A8:  	Call  LoadBattleDmaData ( 0000001B )
  4B8:  	ExecWait  $Script_802256E0_17 
  4C4:  	Wait  14`
  4D0:  	Call  SetActorVar       ( .Actor:Self 00000005 00000002 )
  4E8:  	ExecWait  $Script_8022630C_17 
  4F4:  	Call  SetPartFlagBits   ( .Actor:Self 00000002 00022000 .True )
  510:  	Call  SetActorFlagBits  ( .Actor:Self 00040000 .True )
  528:  Else
  530:  	ExecWait  $Script_802275E4_17 
  53C:  	Return
  544:  EndIf
  54C:  Return
  554:  End
}

#new:Script $Script_802270B4_17 {
    0:  Call  GetActorVar   ( .Actor:Self 00000008 *Var0 )
   18:  Call  SetAnimation  ( .Actor:Self 00000001 *Var0 )
   30:  Call  GetActorVar   ( .Actor:Self 00000000 *Var0 )
   48:  Call  GetActorVar   ( .Actor:Enemy0 00000000 *Var1 )
   60:  If  *Var1  ==  00000000 
   70:  	Call  GetActorVar   ( .Actor:Self 00000005 *Var5 )
   88:  	If  *Var5  !=  00000002 
   98:  		Call  GetLastDamage ( .Actor:Self *Var5 )
   AC:  		If  *Var5  <  00000004 
   BC:  			If  *Var0  ==  00000001 
   CC:  				Call  OverrideBattleDmaDest ( $End[6230] )
   DC:  			Else
   E4:  				Call  OverrideBattleDmaDest ( $End[3230] )
   F4:  			EndIf
   FC:  			Call  LoadBattleDmaData ( 00000016 )
  10C:  		Else
  114:  			If  *Var0  ==  00000001 
  124:  				Call  OverrideBattleDmaDest ( $End[6230] )
  134:  			Else
  13C:  				Call  OverrideBattleDmaDest ( $End[3230] )
  14C:  			EndIf
  154:  			Call  LoadBattleDmaData ( 00000015 )
  164:  		EndIf
  16C:  		ExecWait  $Script_802256E0_17 
  178:  		Wait  29`
  184:  	Else
  18C:  		Call  GetLastDamage ( .Actor:Self *Var5 )
  1A0:  		If  *Var5  <  00000004 
  1B0:  			If  *Var0  ==  00000001 
  1C0:  				Call  OverrideBattleDmaDest ( $End[6230] )
  1D0:  			Else
  1D8:  				Call  OverrideBattleDmaDest ( $End[3230] )
  1E8:  			EndIf
  1F0:  			Call  LoadBattleDmaData ( 00000014 )
  200:  		Else
  208:  			If  *Var0  ==  00000001 
  218:  				Call  OverrideBattleDmaDest ( $End[6230] )
  228:  			Else
  230:  				Call  OverrideBattleDmaDest ( $End[3230] )
  240:  			EndIf
  248:  			Call  LoadBattleDmaData ( 00000013 )
  258:  		EndIf
  260:  		ExecWait  $Script_802256E0_17 
  26C:  		Wait  29`
  278:  	EndIf
  280:  Else
  288:  	Call  GetActorVar   ( .Actor:Self 00000005 *Var5 )
  2A0:  	If  *Var5  ==  00000001 
  2B0:  		Call  GetLastDamage ( .Actor:Self *Var5 )
  2C4:  		If  *Var5  <  00000004 
  2D4:  			If  *Var0  ==  00000001 
  2E4:  				Call  OverrideBattleDmaDest ( $End[6230] )
  2F4:  			Else
  2FC:  				Call  OverrideBattleDmaDest ( $End[3230] )
  30C:  			EndIf
  314:  			Call  LoadBattleDmaData ( 00000016 )
  324:  		Else
  32C:  			If  *Var0  ==  00000001 
  33C:  				Call  OverrideBattleDmaDest ( $End[6230] )
  34C:  			Else
  354:  				Call  OverrideBattleDmaDest ( $End[3230] )
  364:  			EndIf
  36C:  			Call  LoadBattleDmaData ( 00000015 )
  37C:  		EndIf
  384:  		ExecWait  $Script_802256E0_17 
  390:  		Wait  29`
  39C:  	Else
  3A4:  		Call  GetLastDamage ( .Actor:Self *Var5 )
  3B8:  		If  *Var5  <  00000004 
  3C8:  			If  *Var0  ==  00000001 
  3D8:  				Call  OverrideBattleDmaDest ( $End[6230] )
  3E8:  			Else
  3F0:  				Call  OverrideBattleDmaDest ( $End[3230] )
  400:  			EndIf
  408:  			Call  LoadBattleDmaData ( 00000014 )
  418:  		Else
  420:  			If  *Var0  ==  00000001 
  430:  				Call  OverrideBattleDmaDest ( $End[6230] )
  440:  			Else
  448:  				Call  OverrideBattleDmaDest ( $End[3230] )
  458:  			EndIf
  460:  			Call  LoadBattleDmaData ( 00000013 )
  470:  		EndIf
  478:  		ExecWait  $Script_802256E0_17 
  484:  		Call  GetActorPos   ( .Actor:Self *Var1 *Var2 *Var3 )
  4A0:  		Sub   *Var2  00000019 
  4B0:  		Add   *Var3  00000002 
  4C0:  		Call  PlayEffect    ( ~FX:EmitterVolume:Embers *Var1 *Var2 *Var3 00000028 00000032 *Fixed[1.2] 00000018 0000002A *Fixed[0.8] *Fixed[0.6] 00000000 00000000 )
  504:  		Wait  29`
  510:  	EndIf
  518:  EndIf
  520:  Return
  528:  End
}

#new:Script $Script_802275E4_17 {
    0:  Call  GetActorVar   ( .Actor:Self 00000008 *Var0 )
   18:  Call  SetAnimation  ( .Actor:Self 00000001 *Var0 )
   30:  Call  GetActorVar   ( .Actor:Self 00000000 *Var0 )
   48:  Call  GetActorVar   ( .Actor:Enemy0 00000000 *Var5 )
   60:  If  *Var5  ==  00000000 
   70:  	Call  GetActorVar   ( .Actor:Self 00000005 *Var5 )
   88:  	If  *Var5  ==  00000000 
   98:  		Call  GetLastDamage ( .Actor:Self *Var5 )
   AC:  		If  *Var5  <  00000004 
   BC:  			If  *Var0  ==  00000001 
   CC:  				Call  OverrideBattleDmaDest ( $End[6230] )
   DC:  			Else
   E4:  				Call  OverrideBattleDmaDest ( $End[3230] )
   F4:  			EndIf
   FC:  			Call  LoadBattleDmaData ( 00000016 )
  10C:  		Else
  114:  			If  *Var0  ==  00000001 
  124:  				Call  OverrideBattleDmaDest ( $End[6230] )
  134:  			Else
  13C:  				Call  OverrideBattleDmaDest ( $End[3230] )
  14C:  			EndIf
  154:  			Call  LoadBattleDmaData ( 00000015 )
  164:  		EndIf
  16C:  		ExecWait  $Script_802256E0_17 
  178:  		Wait  29`
  184:  	Else
  18C:  		Call  GetLastDamage ( .Actor:Self *Var5 )
  1A0:  		If  *Var5  <  00000004 
  1B0:  			If  *Var0  ==  00000001 
  1C0:  				Call  OverrideBattleDmaDest ( $End[6230] )
  1D0:  			Else
  1D8:  				Call  OverrideBattleDmaDest ( $End[3230] )
  1E8:  			EndIf
  1F0:  			Call  LoadBattleDmaData ( 00000014 )
  200:  		Else
  208:  			If  *Var0  ==  00000001 
  218:  				Call  OverrideBattleDmaDest ( $End[6230] )
  228:  			Else
  230:  				Call  OverrideBattleDmaDest ( $End[3230] )
  240:  			EndIf
  248:  			Call  LoadBattleDmaData ( 00000013 )
  258:  		EndIf
  260:  		ExecWait  $Script_802256E0_17 
  26C:  		Wait  29`
  278:  	EndIf
  280:  Else
  288:  	If  *VarE  &  0000000C 
  298:  		Call  GetActorVar   ( .Actor:Self 00000005 *Var3 )
  2B0:  		If  *Var3  ==  00000002 
  2C0:  			Call  GetLastDamage ( .Actor:Self *Var5 )
  2D4:  			If  *Var5  <  00000004 
  2E4:  				If  *Var0  ==  00000001 
  2F4:  					Call  OverrideBattleDmaDest ( $End[6230] )
  304:  				Else
  30C:  					Call  OverrideBattleDmaDest ( $End[3230] )
  31C:  				EndIf
  324:  				Call  LoadBattleDmaData ( 00000014 )
  334:  			Else
  33C:  				If  *Var0  ==  00000001 
  34C:  					Call  OverrideBattleDmaDest ( $End[6230] )
  35C:  				Else
  364:  					Call  OverrideBattleDmaDest ( $End[3230] )
  374:  				EndIf
  37C:  				Call  LoadBattleDmaData ( 00000013 )
  38C:  			EndIf
  394:  			ExecWait  $Script_802256E0_17 
  3A0:  			Wait  29`
  3AC:  		Else
  3B4:  			If  *Var0  ==  00000001 
  3C4:  				Call  OverrideBattleDmaDest ( $End[6230] )
  3D4:  			Else
  3DC:  				Call  OverrideBattleDmaDest ( $End[3230] )
  3EC:  			EndIf
  3F4:  			Call  LoadBattleDmaData ( 00000015 )
  404:  			ExecWait  $Script_802256E0_17 
  410:  			Call  SetActorVar       ( .Actor:Self 0000000B 00000002 )
  428:  			Call  GetActorVar       ( .Actor:Self 00000006 *Var0 )
  440:  			If  *Var0  !=  00000000 
  450:  				Call  RemoveEffect  ( *Var0 )
  460:  				Call  SetActorVar   ( .Actor:Self 00000006 00000000 )
  478:  				Call  GetActorPos   ( .Actor:Self *Var0 *Var1 *Var2 )
  494:  				Call  PlayEffect    ( ~FX:ColdBreath:PuffUp *Var0 *Var1 *Var2 *Fixed[2.0] 0000002D 00000000 00000000 00000000 00000000 00000000 00000000 00000000 )
  4D8:  			EndIf
  4E0:  			Call  SetIdleAnimations ( .Actor:Self 00000001 $IdleAnimations_802250E8_17 )
  4F8:  			Call  SetDefenseTable   ( .Actor:Self 00000001 $DefenseTable_80225154_17 )
  510:  			Call  SetDefenseTable   ( .Actor:Self 00000002 $DefenseTable_80225154_17 )
  528:  			Call  SetActorVar       ( .Actor:Self 00000007 007B000F )
  540:  			Call  SetActorVar       ( .Actor:Self 00000008 007B0009 )
  558:  			Call  SetAnimation      ( .Actor:Self 00000001 007B000F )
  570:  			Call  SetPartEventBits  ( .Actor:Self 00000001 00000002 .False )
  58C:  			Call  SetPartEventBits  ( .Actor:Self 00000002 00000002 .False )
  5A8:  			Wait  29`
  5B4:  			Call  PlaySoundAtActor  ( .Actor:Self 000003C7 )
  5C8:  			Call  GetActorVar       ( .Actor:Self 00000000 *Var0 )
  5E0:  			If  *Var0  ==  00000001 
  5F0:  				Call  OverrideBattleDmaDest ( $End[6230] )
  600:  			Else
  608:  				Call  OverrideBattleDmaDest ( $End[3230] )
  618:  			EndIf
  620:  			Call  LoadBattleDmaData ( 0000001B )
  630:  			ExecWait  $Script_802256E0_17 
  63C:  			Wait  14`
  648:  			Call  SetActorVar       ( .Actor:Self 00000005 00000002 )
  660:  		EndIf
  668:  	Else
  670:  		Call  GetActorVar   ( .Actor:Self 00000005 *Var3 )
  688:  		If  *Var3  ==  00000002 
  698:  			Call  GetLastDamage ( .Actor:Self *Var5 )
  6AC:  			If  *Var5  ==  00000000 
  6BC:  				Return
  6C4:  			EndIf
  6CC:  			Call  GetLastDamage ( .Actor:Self *Var5 )
  6E0:  			If  *Var5  <  00000004 
  6F0:  				If  *Var0  ==  00000001 
  700:  					Call  OverrideBattleDmaDest ( $End[6230] )
  710:  				Else
  718:  					Call  OverrideBattleDmaDest ( $End[3230] )
  728:  				EndIf
  730:  				Call  LoadBattleDmaData ( 00000014 )
  740:  			Else
  748:  				If  *Var0  ==  00000001 
  758:  					Call  OverrideBattleDmaDest ( $End[6230] )
  768:  				Else
  770:  					Call  OverrideBattleDmaDest ( $End[3230] )
  780:  				EndIf
  788:  				Call  LoadBattleDmaData ( 00000013 )
  798:  			EndIf
  7A0:  			ExecWait  $Script_802256E0_17 
  7AC:  			Wait  29`
  7B8:  		Else
  7C0:  			Call  GetLastDamage ( .Actor:Self *Var5 )
  7D4:  			If  *Var5  <  00000004 
  7E4:  				If  *Var0  ==  00000001 
  7F4:  					Call  OverrideBattleDmaDest ( $End[6230] )
  804:  				Else
  80C:  					Call  OverrideBattleDmaDest ( $End[3230] )
  81C:  				EndIf
  824:  				Call  LoadBattleDmaData ( 00000016 )
  834:  			Else
  83C:  				If  *Var0  ==  00000001 
  84C:  					Call  OverrideBattleDmaDest ( $End[6230] )
  85C:  				Else
  864:  					Call  OverrideBattleDmaDest ( $End[3230] )
  874:  				EndIf
  87C:  				Call  LoadBattleDmaData ( 00000015 )
  88C:  			EndIf
  894:  			ExecWait  $Script_802256E0_17 
  8A0:  			Call  GetActorPos   ( .Actor:Self *Var1 *Var2 *Var3 )
  8BC:  			Sub   *Var2  00000019 
  8CC:  			Add   *Var3  00000002 
  8DC:  			Call  PlayEffect    ( ~FX:EmitterVolume:Embers *Var1 *Var2 *Var3 00000028 00000032 *Fixed[1.2] 00000018 0000002A *Fixed[0.8] *Fixed[0.6] 00000000 00000000 )
  920:  			Wait  29`
  92C:  		EndIf
  934:  	EndIf
  93C:  EndIf
  944:  Call  GetActorVar   ( .Actor:Enemy0 00000001 *VarF )
  95C:  If  *VarF  ==  00000000 
  96C:  	ExecWait  $Script_8022630C_17 
  978:  EndIf
  980:  Return
  988:  End
}

#new:Script $Script_ShootBombs_17 {
    0:  Call  UseIdleAnimation  ( .Actor:Self .False )
   14:  Thread
   1C:  	Wait  8`
   28:  	Call  GetActorPos   ( .Actor:Self *Var0 *Var1 *Var2 )
   44:  	Sub   *Var1  00000019 
   54:  	Call  UseBattleCamPreset    ( 00000013 )
   64:  	Call  SetBattleCamTarget    ( *Var0 *Var1 *Var2 )
   7C:  	Call  SetBattleCamZoom      (  350` )
   8C:  	Call  SetBattleCamOffsetZ   (  30` )
   9C:  	Call  MoveBattleCamOver     (  30` )
   AC:  	Wait  45`
   B8:  	Call  UseBattleCamPreset    ( 00000002 )
   C8:  	Call  MoveBattleCamOver     (  20` )
   D8:  EndThread
   E0:  Call  GetActorVar   ( .Actor:Self 00000000 *Var0 )
   F8:  If  *Var0  ==  00000001 
  108:  	Call  OverrideBattleDmaDest ( $End[6230] )
  118:  Else
  120:  	Call  OverrideBattleDmaDest ( $End[3230] )
  130:  EndIf
  138:  Call  LoadBattleDmaData ( 00000012 )
  148:  ExecWait  $Script_802256E0_17 
  154:  Thread
  15C:  	Wait  20`
  168:  	Call  SetAnimation  ( .Actor:Self 00000001 007B0005 )
  180:  	Wait  39`
  18C:  	Call  SetAnimation  ( .Actor:Self 00000001 007B0006 )
  1A4:  	Wait  5`
  1B0:  	Call  SetAnimation  ( .Actor:Self 00000001 007B0003 )
  1C8:  	If  *Var0  ==  00000001 
  1D8:  		Call  OverrideBattleDmaDest ( $End[6230] )
  1E8:  	Else
  1F0:  		Call  OverrideBattleDmaDest ( $End[3230] )
  200:  	EndIf
  208:  	Call  LoadBattleDmaData ( 0000001F )
  218:  	ExecWait  $Script_802256E0_17 
  224:  EndThread
  22C:  Wait  56`
  238:  Call  SummonEnemy       ( $SpecialFormation_80226B3C_17 00000000 )
  24C:  Set   *Var5  *Var0 
  25C:  Call  GetPartOffset     ( .Actor:Self 00000001 *Var0 *Var1 *Var2 )
  27C:  Sub   *Var0  0000000F 
  28C:  Sub   *Var1  0000000F 
  29C:  Call  SetActorPos       ( *Var5 *Var0 *Var1 *Var2 )
  2B8:  Sub   *Var0  0000001E 
  2C8:  Sub   *Var1  0000000F 
  2D8:  Call  SetAnimation      ( *Var5 00000001 007A0005 )
  2F0:  Call  SetGoalPos        ( *Var5 *Var0 *Var1 *Var2 )
  30C:  Call  SetActorSpeed     ( *Var5 *Fixed[6.0] )
  320:  Call  SetActorJumpGravity   ( *Var5 *Fixed[1.8] )
  334:  Call  PlaySoundAtActor  ( *Var5 000003CB )
  348:  Call  SetTargetActor    ( *Var5 .Actor:Player )
  35C:  Call  SetGoalToTarget   ( *Var5 )
  36C:  Call  EnemyTestTarget   ( *Var5 *Var9 ~Flags:DamageType:0 00000000 00000001 00000010 )
  390:  Switch  *Var9 
  39C:  	CaseOR  ==  .HitResult:Miss % 6
  3A8:  	CaseOR  ==  .HitResult:Lucky % 5
  3B4:  		Call  SetGoalToTarget       ( *Var5 )
  3C4:  		Call  GetGoalPos    ( *Var5 *Var0 *Var1 *Var2 )
  3E0:  		Set   *Var0  FFFFFF4C 
  3F0:  		Call  SetGoalPos    ( *Var5 *Var0 *Var1 *Var2 )
  40C:  		Call  SetActorSpeed ( *Var5 *Fixed[13.0] )
  420:  		Call  SetActorJumpGravity   ( *Var5 *Fixed[1.8] )
  434:  		Call  FlyToGoal     ( *Var5  0`  0` .Easing:Linear )
  450:  		If  *Var9  ==  .HitResult:Lucky % 5
  460:  			Call  EnemyTestTarget   ( *Var5 *Var0 ~Flags:DamageType:TriggerLucky 00000000 00000000 00000000 )
  484:  		EndIf
  48C:  		Call  UseBattleCamPreset    ( 00000002 )
  49C:  		Call  RemoveActor   ( *Var5 )
  4AC:  		Return
  4B4:  	EndCaseGroup
  4BC:  EndSwitch
  4C4:  Call  SetTargetActor    ( *Var5 .Actor:Player )
  4D8:  Call  SetGoalToTarget   ( *Var5 )
  4E8:  Call  SetActorSpeed     ( *Var5 *Fixed[13.0] )
  4FC:  Call  SetActorJumpGravity   ( *Var5 *Fixed[1.8] )
  510:  Call  FlyToGoal ( *Var5  0`  0` .Easing:Linear )
  52C:  Wait  2`
  538:  Call  SetGoalToTarget   ( *Var5 )
  548:  Call  SetTargetActor    ( .Actor:Self .Actor:Player )
  55C:  Call  SetGoalToTarget   ( .Actor:Self )
  56C:  Call  EnemyDamageTarget ( .Actor:Self *Var9 ~Flags:DamageType:Fire 0000FFFF 00000000 00000004 00000020 )
  594:  Switch  *Var9 
  5A0:  	CaseOR  ==  .HitResult:Hit % 0
  5AC:  	CaseOR  ==  .HitResult:QuakeImmune % 2
  5B8:  	CaseOR  ==  0000000A % A
  5C4:  		Call  SetPartFlagBits   ( *Var5 00000001 00000001 .True )
  5E0:  		Call  SetGoalToTarget   ( *Var5 )
  5F0:  		Call  GetGoalPos        ( *Var5 *Var0 *Var1 *Var2 )
  60C:  		Set   *Var1  0000000A 
  61C:  		Add   *Var2  00000002 
  62C:  		Call  PlayEffect        ( ~FX:Fire:TinyBlue *Var0 *Var1 *Var2 *Fixed[0.3] *VarA 00000000 00000000 00000000 00000000 00000000 00000000 00000000 )
  670:  		Call  MakeLerp  ( 00000078 0000000A 00000014 .Easing:QuadraticIn )
  68C:  		Loop
  698:  			Call  UpdateLerp ( )
  6A4:  			MulF  *Var0  *Fixed[0.01] 
  6B4:  			Call  $Function_80218DF0_17 ( *VarA *Var0 )
  6C8:  			Wait  1`
  6D4:  			If  *Var1  ==  00000000 
  6E4:  				BreakLoop
  6EC:  			EndIf
  6F4:  		EndLoop
  6FC:  		Wait  1`
  708:  		Call  RemoveEffect  ( *VarA )
  718:  		Call  RemoveActor   ( *Var5 )
  728:  		Wait  15`
  734:  		If  *Var9  ==  0000000A % A
  744:  			Return
  74C:  		EndIf
  754:  		Call  UseBattleCamPreset    ( 00000002 )
  764:  	EndCaseGroup
  76C:  EndSwitch
  774:  Call  EnableIdleScript  ( .Actor:Self 00000001 )
  788:  Call  UseIdleAnimation  ( .Actor:Self .True )
  79C:  Return
  7A4:  End
}

#new:IdleAnimations $IdleAnimations_80228720_17 {
.Status:Normal    007A0001
.Status:Stone     007A0000
.Status:Sleep     007A0000
.Status:Poison    007A0001
.Status:Stop      007A0000
.Status:Static    007A0000
.Status:Paralyze  007A0000
.Status:Paralyze  007A0000
.Status:Dizzy     007A0001
.Status:Dizzy     007A0001
.Status:End
}

#new:DefenseTable $DefenseTable_80228774_17 {
.Element:Normal 00000000
.Element:Water  FFFFFFFE
.Element:Ice    FFFFFFFE
.Element:Fire   00000063
.Element:Blast  00000000
.Element:End
}

#new:StatusTable $StatusTable_802287A0_17 {
.Status:Normal      0`
.Status:Default     0`
.Status:Sleep       0`
.Status:Poison      0`
.Status:Frozen      0`
.Status:Dizzy       0`
.Status:Fear        0`
.Status:Static      0`
.Status:Paralyze    0`
.Status:Shrink      0`
.Status:Stop        0`
.Status:DefaultTurnMod    0`
.Status:SleepTurnMod      0`
.Status:PoisonTurnMod     0`
.Status:FrozenTurnMod     0`
.Status:DizzyTurnMod      0`
.Status:FearTurnMod       0`
.Status:StaticTurnMod     0`
.Status:ParalyzeTurnMod   0`
.Status:ShrinkTurnMod     0`
.Status:StopTurnMod       0`
.Status:End
}

#new:PartsTable $PartsTable_8022884C_17 {
00800000 01000000 001800FF $IdleAnimations_80228720_17 $DefenseTable_80228774_17 00000002 00000002 FEEA0000 00000000 
}

#new:Actor $PetitPiranhaBomb_17 {
% stats
[Index]        B8b 
[Level]         0`b 
[MaxHP]         1`b 
[Coins]         0`b 
[Flags]       00000200 
[StatusTable] $StatusTable_802287A0_17 
% ai
[PartsCount]    1`s 
[PartsTable]  $PartsTable_8022884C_17 
[Script]      $Script_Init_80228898_17 
% move effectiveness
[Escape]        0`b 
[Item]          0`b 
[AirLift]       0`b 
[Hurricane]     0`b % Bow's "Spook" as well
[UpAndAway]     0`b 
[PowerBounce]  80`b 
[SpinSmash]     0`b % weight (0-4)
% ui positions
[Size]         30`b  30`b % width height
[HealthBar]     0`b   0`b % dx dy
[StatusTurn]  -10`b  20`b % dx dy
[StatusIcon]   10`b  20`b % dx dy
}

#new:Script $Script_Init_80228898_17 {
    0:  Call  BindTakeTurn      ( .Actor:Self $Script_TakeTurn_8022894C_17 )
   14:  Call  BindIdle  ( .Actor:Self $Script_Idle_802288E4_17 )
   28:  Call  BindHandleEvent   ( .Actor:Self $Script_HandleEvent_80228918_17 )
   3C:  Return
   44:  End
}

#new:Script $Script_Idle_802288E4_17 {
    0:  Label  0
    C:  Wait  1`
   18:  Goto  0
   24:  Return
   2C:  End
}

#new:Script $Script_HandleEvent_80228918_17 {
    0:  Label  0
    C:  Wait  1`
   18:  Goto  0
   24:  Return
   2C:  End
}

#new:Script $Script_TakeTurn_8022894C_17 {
    0:  Label  0
    C:  Wait  1`
   18:  Goto  0
   24:  Return
   2C:  End
}

#new:ConstDouble $ConstDouble_8022AC40_17 {
90.000000d
}

