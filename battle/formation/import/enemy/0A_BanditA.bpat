% Automatically dumped from section 0A

#new:Actor $0A_BanditA {
% stats
[Index]        13b 
[Level]         9`b 
[MaxHP]         5`b 
[Coins]         1`b 
[Flags]       00000000 
[StatusTable] $StatusTable_8021D5C0_0A 
% ai
[PartsCount]    2`s 
[PartsTable]  $PartsTable_8021D66C_0A 
[Script]      $Script_Init_8021D750_0A 
% move effectiveness
[Escape]       40`b 
[Item]         90`b 
[AirLift]      90`b 
[Hurricane]    90`b % Bow's "Spook" as well
[UpAndAway]    95`b 
[PowerBounce]  80`b 
[SpinSmash]     0`b % weight (0-4)
% ui positions
[Size]         26`b  32`b % width height
[HealthBar]     0`b   0`b % dx dy
[StatusTurn]  -10`b  25`b % dx dy
[StatusIcon]   10`b  25`b % dx dy
}

#new:IdleAnimations $IdleAnimations_8021D510_0A {
.Status:Normal    00320001
.Status:Stone     00320000
.Status:Sleep     00320010
.Status:Poison    00320001
.Status:Stop      00320000
.Status:Static    00320001
.Status:Paralyze  00320000
.Status:Dizzy     00320011
.Status:Fear      00320011
.Status:End
}

#new:IdleAnimations $IdleAnimations_8021D55C_0A {
.Status:Normal    00320002
.Status:Stone     00320004
.Status:Sleep     00320010
.Status:Poison    00320002
.Status:Stop      00320004
.Status:Static    00320002
.Status:Paralyze  00320004
.Status:Dizzy     00320011
.Status:Fear      00320011
.Status:End
}

#new:IdleAnimations $IdleAnimations_8021D5A8_0A {
.Status:Normal    00320014
.Status:End
}

#new:DefenseTable $DefenseTable_8021D5B4_0A {
.Element:Normal 00000000
.Element:End
}

#new:StatusTable $StatusTable_8021D5C0_0A {
.Status:Normal      0`
.Status:Default     0`
.Status:Sleep      70`
.Status:Poison     20`
.Status:Frozen    100`
.Status:Dizzy      90`
.Status:Fear       50`
.Status:Static     30`
.Status:Paralyze  100`
.Status:Shrink     90`
.Status:Stop      100`
.Status:DefaultTurnMod    0`
.Status:SleepTurnMod      0`
.Status:PoisonTurnMod     0`
.Status:FrozenTurnMod     0`
.Status:DizzyTurnMod      0`
.Status:FearTurnMod       0`
.Status:StaticTurnMod     0`
.Status:ParalyzeTurnMod   1`
.Status:ShrinkTurnMod     0`
.Status:StopTurnMod       0`
.Status:End
}

#new:PartsTable $PartsTable_8021D66C_0A {
00800000 01000000 FE1C00FF $IdleAnimations_8021D510_0A $DefenseTable_8021D5B4_0A 00000000 00000000 00F40000 00000000 
00020001 02001E00 000000FF $IdleAnimations_8021D5A8_0A $DefenseTable_8021D5B4_0A 00000000 00000000 00000000 00000000 
}

#new:PartsTable $PartsTable_8021D6B4_0A {
00020000 02000000 000000FF $IdleAnimations_8021D5A8_0A $DefenseTable_8021D5B4_0A 00000000 00000000 00000000 00000000 
}

#new:Actor $BanditB_0A {
% stats
[Index]        13b 
[Level]         9`b 
[MaxHP]         5`b 
[Coins]         1`b 
[Flags]       00600000 
[StatusTable] $StatusTable_8021D5C0_0A 
% ai
[PartsCount]    1`s 
[PartsTable]  $PartsTable_8021D6B4_0A 
[Script]      $Script_Init_8021D7C4_0A 
% move effectiveness
[Escape]       40`b 
[Item]         90`b 
[AirLift]      90`b 
[Hurricane]    90`b % Bow's "Spook" as well
[UpAndAway]    95`b 
[PowerBounce]  80`b 
[SpinSmash]     0`b % weight (0-4)
% ui positions
[Size]         26`b  32`b % width height
[HealthBar]     0`b   0`b % dx dy
[StatusTurn]  -10`b  25`b % dx dy
[StatusIcon]   10`b  25`b % dx dy
}

#new:Vector3D $Vector3D_8021D728_0A {
0` -1000` 0`
}

#new:SpecialFormation $SpecialFormation_8021D734_0A {
$BanditB_0A $Vector3D_8021D728_0A 00000000 00000000 00000000 00000000 00000000 
}

#new:Script $Script_Init_8021D750_0A {
    0:  Call  BindTakeTurn  ( .Actor:Self $Script_TakeTurn_8021E900_0A )
   14:  Call  BindIdle      ( .Actor:Self $Script_Idle_8021D810_0A )
   28:  Call  BindHandleEvent   ( .Actor:Self $Script_HandleEvent_8021DF88_0A )
   3C:  Call  SetActorVar   ( .Actor:Self 00000000 00000000 )
   54:  Return
   5C:  End
}

#new:Script $Script_HandleEvent_8021D7B4_0A {
    0:  Return
    8:  End
}

#new:Script $Script_Init_8021D7C4_0A {
    0:  Call  BindTakeTurn      ( .Actor:Self $Script_HandleEvent_8021D7B4_0A )
   14:  Call  BindIdle  ( .Actor:Self $Script_HandleEvent_8021D7B4_0A )
   28:  Call  BindHandleEvent   ( .Actor:Self $Script_HandleEvent_8021D7B4_0A )
   3C:  Return
   44:  End
}

#new:Script $Script_Idle_8021D810_0A {
    0:  Return
    8:  End
}

#new:Script $Script_8021D820_0A {
    0:  Call  GetActorVar   ( .Actor:Self 00000000 *Var0 )
   18:  Switch  *Var0 
   24:  	Case  ==  00000000 
   30:  	Case  ==  00000001 
   3C:  		Call  SetActorVar   ( .Actor:Self 00000000 00000000 )
   54:  		Call  SetIdleAnimations ( .Actor:Self 00000001 $IdleAnimations_8021D510_0A )
   6C:  		Call  SetPartFlagBits   ( .Actor:Self 00000002 00100000 .False )
   88:  		Call  SummonEnemy   ( $SpecialFormation_8021D734_0A 00000000 )
   9C:  		Set   *VarA  *Var0 
   AC:  		Call  GetPartOffset ( .Actor:Self 00000002 *Var1 *Var2 *Var3 )
   CC:  		Call  SetActorPos   ( *VarA *Var1 *Var2 *Var3 )
   E8:  		Call  SetPartFlagBits   ( .Actor:Self 00000002 00000001 .True )
  104:  		Call  GetActorVar   ( .Actor:Self 00000001 *Var0 )
  11C:  		Call  SetActorVar   ( *VarA 00000001 *Var0 )
  134:  		Call  SetActorJumpGravity   ( *VarA *Fixed[1.0] )
  148:  		Call  RandInt       ( 00000168 *Var0 )
  15C:  		Call  GetActorPos   ( .Actor:Self *Var1 *Var2 *Var3 )
  178:  		Add   *Var2  0000001E 
  188:  		Call  SetActorPos   ( *VarA *Var1 *Var2 *Var3 )
  1A4:  		Call  SetActorSounds    ( *VarA .ActorSound:Jump 00000000 00000000 )
  1C0:  		Call  AddVectorPolar    ( *Var1 *Var3 *Fixed[40.0] *Var0 )
  1DC:  		Call  SetGoalPos    ( *VarA *Var1  0` *Var3 )
  1F8:  		Call  JumpToGoal    ( *VarA  20` .False .True .False )
  218:  		Call  PlaySoundAtActor  ( *VarA 00000212 )
  22C:  		Call  AddVectorPolar    ( *Var1 *Var3 *Fixed[20.0] *Var0 )
  248:  		Call  SetGoalPos    ( *VarA *Var1  0` *Var3 )
  264:  		Call  JumpToGoal    ( *VarA  10` .False .True .False )
  284:  		Call  PlaySoundAtActor  ( *VarA 00000212 )
  298:  		Call  AddVectorPolar    ( *Var1 *Var3 *Fixed[10.0] *Var0 )
  2B4:  		Call  SetGoalPos    ( *VarA *Var1  0` *Var3 )
  2D0:  		Call  JumpToGoal    ( *VarA  5` .False .True .False )
  2F0:  		Call  PlaySoundAtActor  ( *VarA 00000212 )
  304:  		Loop
  310:  			Call  GetBattleFlags    ( *Var1 )
  320:  			If  *Var1  &  00080000 
  330:  				BreakLoop
  338:  			EndIf
  340:  			If  *Var1  !&  00000100 
  350:  				BreakLoop
  358:  			EndIf
  360:  			Wait  1`
  36C:  		EndLoop
  374:  		Wait  15`
  380:  		Call  SetActorJumpGravity   ( *VarA *Fixed[1.0] )
  394:  		Call  SetActorSpeed ( *VarA *Fixed[6.0] )
  3A8:  		Set   *Var0  FFFFFFBA 
  3B8:  		Set   *Var1  00000000 
  3C8:  		Set   *Var2  0000000A 
  3D8:  		Label  5
  3E4:  		Call  GetActorPos   ( *VarA *Var3 *Var4 *Var5 )
  400:  		If  *Var3  ==  *Var0 
  410:  			Goto  A
  41C:  		EndIf
  424:  		If  *Var3  <  *Var0 
  434:  			Set   *Var4  *Var0 
  444:  			Sub   *Var4  *Var3 
  454:  			If  *Var4  <  0000001E 
  464:  				Call  SetGoalPos        ( *VarA *Var0 *Var1 *Var2 )
  480:  				Call  JumpToGoal        ( *VarA  5` .False .True .False )
  4A0:  				Call  PlaySoundAtActor  ( *VarA 00000212 )
  4B4:  			Else
  4BC:  				Set   *Var4  *Var3 
  4CC:  				Add   *Var3  0000001E 
  4DC:  				Call  SetGoalPos        ( *VarA *Var3 *Var1 *Var2 )
  4F8:  				Call  JumpToGoal        ( *VarA  0` .False .True .False )
  518:  				Call  PlaySoundAtActor  ( *VarA 00000212 )
  52C:  			EndIf
  534:  		Else
  53C:  			Set   *Var4  *Var3 
  54C:  			Sub   *Var4  *Var0 
  55C:  			If  *Var4  <  0000001E 
  56C:  				Call  SetGoalPos        ( *VarA *Var0 *Var1 *Var2 )
  588:  				Call  JumpToGoal        ( *VarA  5` .False .True .False )
  5A8:  				Call  PlaySoundAtActor  ( *VarA 00000212 )
  5BC:  			Else
  5C4:  				Sub   *Var3  0000001E 
  5D4:  				Call  SetGoalPos        ( *VarA *Var3 *Var1 *Var2 )
  5F0:  				Call  JumpToGoal        ( *VarA  0` .False .True .False )
  610:  				Call  PlaySoundAtActor  ( *VarA 00000212 )
  624:  			EndIf
  62C:  		EndIf
  634:  		Goto  5
  640:  		Label  A
  64C:  		Call  EnableActorBlur   ( *VarA 00000001 )
  660:  		Call  SetTargetActor    ( *VarA .Actor:Player )
  674:  		Call  SetGoalToTarget   ( *VarA )
  684:  		Call  JumpToGoal    ( *VarA  15` .False .False .False )
  6A4:  		Call  GetGoalPos    ( *VarA *Var0 *Var1 *Var2 )
  6C0:  		Call  PlayEffect    ( ~FX:SmallGoldSparkle *Var0 *Var1 *Var2 *Fixed[1.0] 00000000 00000000 00000000 00000000 00000000 00000000 00000000 00000000 )
  704:  		Call  PlaySoundAtActor  ( *VarA 00000211 )
  718:  		Call  GetActorVar   ( *VarA 00000001 *Var0 )
  730:  		Call  AddCoin       ( *Var0 )
  740:  		Call  RemoveActor   ( *VarA )
  750:  EndSwitch
  758:  Return
  760:  End
}

#new:Script $Script_HandleEvent_8021DF88_0A {
    0:  UseArray  $End[0] 
    C:  Call  UseIdleAnimation  ( .Actor:Self .False )
   20:  Call  EnableIdleScript  ( .Actor:Self 00000000 )
   34:  Call  GetLastEvent      ( .Actor:Self *Var0 )
   48:  Switch  *Var0 
   54:  	Case  ==  .Event:HitCombo % 9
   60:  		Exec  $Script_8021D820_0A *Array[0] 
   70:  		SetConst  *Var0  00000001 
   80:  		SetConst  *Var1  00320009 
   90:  		ExecWait  DoNormalHit 
   9C:  		Loop
   A8:  			DoesScriptExist  *Array[0] *Var0 
   B8:  			If  *Var0  ==  00000000 
   C8:  				BreakLoop
   D0:  			EndIf
   D8:  			Wait  1`
   E4:  		EndLoop
   EC:  	CaseOR  ==  .Event:Hit % A
   F8:  	CaseOR  ==  .Event:SpinSmashLaunchHit % 11
  104:  		Exec  $Script_8021D820_0A *Array[0] 
  114:  		SetConst  *Var0  00000001 
  124:  		SetConst  *Var1  00320009 
  134:  		ExecWait  DoNormalHit 
  140:  		Loop
  14C:  			DoesScriptExist  *Array[0] *Var0 
  15C:  			If  *Var0  ==  00000000 
  16C:  				BreakLoop
  174:  			EndIf
  17C:  			Wait  1`
  188:  		EndLoop
  190:  	EndCaseGroup
  198:  	Case  ==  .Event:BurnHit % E
  1A4:  		Exec  $Script_8021D820_0A *Array[0] 
  1B4:  		SetConst  *Var0  00000001 
  1C4:  		SetConst  *Var1  0032000A 
  1D4:  		SetConst  *Var2  0032000B 
  1E4:  		ExecWait  DoBurnHit 
  1F0:  		Loop
  1FC:  			DoesScriptExist  *Array[0] *Var0 
  20C:  			If  *Var0  ==  00000000 
  21C:  				BreakLoop
  224:  			EndIf
  22C:  			Wait  1`
  238:  		EndLoop
  240:  	Case  ==  .Event:BurnDeath % 24
  24C:  		Exec  $Script_8021D820_0A *Array[0] 
  25C:  		SetConst  *Var0  00000001 
  26C:  		SetConst  *Var1  0032000A 
  27C:  		SetConst  *Var2  0032000B 
  28C:  		ExecWait  DoBurnHit 
  298:  		SetConst  *Var0  00000001 
  2A8:  		SetConst  *Var1  0032000B 
  2B8:  		ExecWait  DoDeath 
  2C4:  		Loop
  2D0:  			DoesScriptExist  *Array[0] *Var0 
  2E0:  			If  *Var0  ==  00000000 
  2F0:  				BreakLoop
  2F8:  			EndIf
  300:  			Wait  1`
  30C:  		EndLoop
  314:  		Return
  31C:  	Case  ==  .Event:SpinSmashHit % B
  328:  		Exec  $Script_8021D820_0A *Array[0] 
  338:  		SetConst  *Var0  00000001 
  348:  		SetConst  *Var1  00320009 
  358:  		ExecWait  DoSpinSmashHit 
  364:  		Loop
  370:  			DoesScriptExist  *Array[0] *Var0 
  380:  			If  *Var0  ==  00000000 
  390:  				BreakLoop
  398:  			EndIf
  3A0:  			Wait  1`
  3AC:  		EndLoop
  3B4:  	Case  ==  .Event:SpinSmashDeath % 21
  3C0:  		Exec  $Script_8021D820_0A *Array[0] 
  3D0:  		SetConst  *Var0  00000001 
  3E0:  		SetConst  *Var1  00320009 
  3F0:  		ExecWait  DoSpinSmashHit 
  3FC:  		SetConst  *Var0  00000001 
  40C:  		SetConst  *Var1  00320009 
  41C:  		ExecWait  DoDeath 
  428:  		Loop
  434:  			DoesScriptExist  *Array[0] *Var0 
  444:  			If  *Var0  ==  00000000 
  454:  				BreakLoop
  45C:  			EndIf
  464:  			Wait  1`
  470:  		EndLoop
  478:  		Return
  480:  	Case  ==  .Event:ShockHit % 2F
  48C:  		SetConst  *Var0  00000001 
  49C:  		SetConst  *Var1  00320009 
  4AC:  		ExecWait  DoShockHit 
  4B8:  		SetConst  *Var0  00000001 
  4C8:  		SetConst  *Var1  00320009 
  4D8:  		ExecWait  DoJumpBack 
  4E4:  		SetConst  *Var0  00000001 
  4F4:  		SetConst  *Var1  00320007 
  504:  		ExecWait  DoReturnHome 
  510:  		Call  SetActorJumpGravity   ( .Actor:Self *Fixed[1.6] )
  524:  		Call  JumpToGoal    ( .Actor:Self  5` .False .True .False )
  544:  	Case  ==  .Event:ShockDeath % 26
  550:  		SetConst  *Var0  00000001 
  560:  		SetConst  *Var1  00320009 
  570:  		ExecWait  DoShockHit 
  57C:  		SetConst  *Var0  00000001 
  58C:  		SetConst  *Var1  00320009 
  59C:  		ExecWait  DoDeath 
  5A8:  		Return
  5B0:  	CaseOR  ==  00000017 % 17
  5BC:  	CaseOR  ==  .Event:Immune % 19
  5C8:  	CaseOR  ==  .Event:AirLiftFailed % 1F
  5D4:  		Call  GetActorVar   ( .Actor:Self 00000000 *Var0 )
  5EC:  		Switch  *Var0 
  5F8:  			Case  ==  00000000 
  604:  				SetConst  *Var1  00320001 
  614:  			Case  ==  00000001 
  620:  				SetConst  *Var1  00320002 
  630:  		EndSwitch
  638:  		SetConst  *Var0  00000001 
  648:  		ExecWait  DoImmune 
  654:  	EndCaseGroup
  65C:  	CaseOR  ==  .Event:Death % 20
  668:  	CaseOR  ==  00000025 % 25
  674:  		Exec  $Script_8021D820_0A *Array[0] 
  684:  		SetConst  *Var0  00000001 
  694:  		SetConst  *Var1  00320009 
  6A4:  		ExecWait  DoNormalHit 
  6B0:  		Wait  10`
  6BC:  		SetConst  *Var0  00000001 
  6CC:  		SetConst  *Var1  00320009 
  6DC:  		ExecWait  DoDeath 
  6E8:  		Loop
  6F4:  			DoesScriptExist  *Array[0] *Var0 
  704:  			If  *Var0  ==  00000000 
  714:  				BreakLoop
  71C:  			EndIf
  724:  			Wait  1`
  730:  		EndLoop
  738:  		Return
  740:  	EndCaseGroup
  748:  	Case  ==  .Event:RecoverStatus % 31
  754:  		SetConst  *Var0  00000001 
  764:  		SetConst  *Var1  00320001 
  774:  		ExecWait  DoRecover 
  780:  	Case  ==  .Event:ScareAway % 39
  78C:  		Exec  $Script_8021D820_0A *Array[0] 
  79C:  		SetConst  *Var0  00000001 
  7AC:  		SetConst  *Var1  00320007 
  7BC:  		SetConst  *Var2  00320009 
  7CC:  		ExecWait  DoScareAway 
  7D8:  		Loop
  7E4:  			DoesScriptExist  *Array[0] *Var0 
  7F4:  			If  *Var0  ==  00000000 
  804:  				BreakLoop
  80C:  			EndIf
  814:  			Wait  1`
  820:  		EndLoop
  828:  		Return
  830:  	Case  ==  .Event:BeginAirLift % 3A
  83C:  		Exec  $Script_8021D820_0A *Array[0] 
  84C:  		SetConst  *Var0  00000001 
  85C:  		SetConst  *Var1  00320009 
  86C:  		ExecWait  DoAirLift 
  878:  		Loop
  884:  			DoesScriptExist  *Array[0] *Var0 
  894:  			If  *Var0  ==  00000000 
  8A4:  				BreakLoop
  8AC:  			EndIf
  8B4:  			Wait  1`
  8C0:  		EndLoop
  8C8:  	Case  ==  .Event:BlowAway % 16
  8D4:  		SetConst  *Var0  00000001 
  8E4:  		SetConst  *Var1  00320009 
  8F4:  		SetConst  *Var2  00040000 
  904:  		ExecWait  DoBlowAway 
  910:  		Return
  918:  	Default
  920:  EndSwitch
  928:  Call  SetAnimation      ( .Actor:Self 00000001 00320001 )
  940:  Call  EnableIdleScript  ( .Actor:Self 00000001 )
  954:  Call  UseIdleAnimation  ( .Actor:Self .True )
  968:  Return
  970:  End
}

#new:Script $Script_TakeTurn_8021E900_0A {
    0:  Call  UseIdleAnimation  ( .Actor:Self .False )
   14:  Call  EnableIdleScript  ( .Actor:Self 00000000 )
   28:  Call  SetTargetActor    ( .Actor:Self .Actor:Player )
   3C:  Call  GetActorVar       ( .Actor:Self 00000000 *Var0 )
   54:  If  *Var0  ==  00000001 
   64:  	Call  SetActorYaw   ( .Actor:Self  180` )
   78:  	Call  SetAnimation  ( .Actor:Self 00000001 00320008 )
   90:  	Wait  30`
   9C:  	Call  SetActorSpeed ( .Actor:Self *Fixed[10.0] )
   B0:  	Call  SetGoalPos    ( .Actor:Self  300`  0`  0` )
   CC:  	Call  RunToGoal     ( .Actor:Self  0` .False )
   E4:  	Call  SetBattleFlagBits ( 00040000 .True )
   F8:  	Call  8027D32C      ( FFFFFF81 )
  108:  	Call  RemoveActor   ( .Actor:Self )
  118:  	Return
  120:  EndIf
  128:  Call  UseBattleCamPreset    ( 0000003F )
  138:  Call  BattleCamTargetActor  ( .Actor:Self )
  148:  Call  8024ECF8  ( FFFFFFFF 00000001 00000000 )
  160:  Call  GetBattlePhase        ( *Var0 )
  170:  If  *Var0  ==  00000001 
  180:  	Call  SetGoalToTarget   ( .Actor:Self )
  190:  	Call  GetGoalPos        ( .Actor:Self *Var0 *Var1 *Var2 )
  1AC:  	Add   *Var0  00000032 
  1BC:  	Set   *Var1  00000000 
  1CC:  	Call  SetActorPos       ( .Actor:Self *Var0 *Var1 *Var2 )
  1E8:  Else
  1F0:  	Call  SetAnimation  ( .Actor:Self 00000001 00320007 )
  208:  	Call  SetGoalToTarget   ( .Actor:Self )
  218:  	Call  AddGoalPos    ( .Actor:Self  50`  0`  0` )
  234:  	Call  SetActorSpeed ( .Actor:Self *Fixed[6.0] )
  248:  	Call  RunToGoal     ( .Actor:Self  0` .False )
  260:  	Call  SetAnimation  ( .Actor:Self 00000001 00320001 )
  278:  	Wait  6`
  284:  EndIf
  28C:  Call  SetActorSpeed     ( .Actor:Self *Fixed[2.0] )
  2A0:  Call  SetAnimation      ( .Actor:Self 00000001 00320005 )
  2B8:  Call  SetGoalToTarget   ( .Actor:Self )
  2C8:  Call  AddGoalPos        ( .Actor:Self  35`  0`  0` )
  2E4:  Call  RunToGoal ( .Actor:Self  0` .False )
  2FC:  Call  PlaySoundAtActor  ( .Actor:Self 000020C2 )
  310:  Call  SetActorSounds    ( .Actor:Self .ActorSound:Walk 00000000 00000000 )
  32C:  Call  EnemyTestTarget   ( .Actor:Self *Var0 ~Flags:DamageType:0 00000000 00000001 00000010 )
  350:  Switch  *Var0 
  35C:  	CaseOR  ==  .HitResult:Miss % 6
  368:  	CaseOR  ==  .HitResult:Lucky % 5
  374:  		Set   *VarA  *Var0 
  384:  		Call  SetAnimation  ( .Actor:Self 00000001 0032000D )
  39C:  		Call  SetGoalToTarget       ( .Actor:Self )
  3AC:  		Call  SetActorSpeed ( .Actor:Self *Fixed[8.0] )
  3C0:  		Call  RunToGoal     ( .Actor:Self  0` .False )
  3D8:  		Call  ResetAllActorSounds   ( .Actor:Self )
  3E8:  		Call  SetActorSpeed ( .Actor:Self *Fixed[6.0] )
  3FC:  		Call  SetActorJumpGravity   ( .Actor:Self *Fixed[0.5] )
  410:  		Call  GetActorPos   ( .Actor:Self *Var0 *Var1 *Var2 )
  42C:  		Sub   *Var0  0000001E 
  43C:  		Call  SetGoalPos    ( .Actor:Self *Var0 *Var1 *Var2 )
  458:  		Call  JumpToGoal    ( .Actor:Self  8` .False .True .False )
  478:  		Sub   *Var0  00000014 
  488:  		Call  SetGoalPos    ( .Actor:Self *Var0 *Var1 *Var2 )
  4A4:  		Call  JumpToGoal    ( .Actor:Self  8` .False .True .False )
  4C4:  		Wait  5`
  4D0:  		If  *VarA  ==  .HitResult:Lucky % 5
  4E0:  			Call  EnemyTestTarget   ( .Actor:Self *Var0 ~Flags:DamageType:TriggerLucky 00000000 00000000 00000000 )
  504:  		EndIf
  50C:  		Wait  5`
  518:  		Call  UseBattleCamPreset    ( 00000002 )
  528:  		Call  YieldTurn ( )
  534:  		Call  SetActorYaw   ( .Actor:Self  180` )
  548:  		Call  AddActorDecoration    ( .Actor:Self 00000001 00000000 .Decoration:Sweat )
  564:  		Call  SetAnimation  ( .Actor:Self 00000001 00320007 )
  57C:  		Call  SetGoalToHome ( .Actor:Self )
  58C:  		Call  SetActorSpeed ( .Actor:Self *Fixed[8.0] )
  5A0:  		Call  RunToGoal     ( .Actor:Self  0` .False )
  5B8:  		Call  SetAnimation  ( .Actor:Self 00000001 00320001 )
  5D0:  		Call  RemoveActorDecoration ( .Actor:Self 00000001 00000000 )
  5E8:  		Call  SetActorYaw   ( .Actor:Self  0` )
  5FC:  		Call  EnableIdleScript      ( .Actor:Self 00000001 )
  610:  		Call  UseIdleAnimation      ( .Actor:Self .True )
  624:  		Return
  62C:  	EndCaseGroup
  634:  EndSwitch
  63C:  Call  SetAnimation      ( .Actor:Self 00000001 0032000D )
  654:  Call  SetGoalToTarget   ( .Actor:Self )
  664:  Call  SetActorSpeed     ( .Actor:Self *Fixed[8.0] )
  678:  Call  RunToGoal ( .Actor:Self  0` .False )
  690:  Call  ResetAllActorSounds   ( .Actor:Self )
  6A0:  Wait  2`
  6AC:  Call  EnemyDamageTarget ( .Actor:Self *Var0 ~Flags:DamageType:0 00000000 00000000 00000002 00000020 )
  6D4:  Switch  *Var0 
  6E0:  	CaseOR  ==  .HitResult:Hit % 0
  6EC:  	CaseOR  ==  .HitResult:QuakeImmune % 2
  6F8:  		Call  GetLastDamage ( .Actor:Player *Var0 )
  70C:  		If  *Var0  <=  00000000 
  71C:  			Set   *Var0  00000001 
  72C:  			Goto  A
  738:  		EndIf
  740:  		Call  GetBattleFlags    ( *Var0 )
  750:  		If  *Var0  &  80000000 
  760:  			Set   *Var0  00000001 
  770:  			Goto  A
  77C:  		EndIf
  784:  		Call  GetStatusFlags    ( .Actor:Self *Var0 )
  798:  		If  *Var0  &  ~Flags:StatusFlags:Shrink % 80000
  7A8:  			Set   *Var0  00000000 
  7B8:  			Goto  A
  7C4:  		EndIf
  7CC:  		Call  GetStatusFlags    ( .Actor:Player *Var0 )
  7E0:  		If  *Var0  &  ~Flags:StatusFlags:Stone % 100000
  7F0:  			Set   *Var0  00000000 
  800:  			Goto  A
  80C:  		EndIf
  814:  		Call  AddCoin   ( 00000000 )
  824:  		Switch  *Var0 
  830:  			Case  ==  00000000 
  83C:  				Set   *Var0  00000001 
  84C:  			Case  <  0000000A 
  858:  				Call  SetActorVar   ( .Actor:Self 00000001 *Var0 )
  870:  				Set   *Var0  00000002 
  880:  			Case  >=  0000000A 
  88C:  				Call  SetActorVar   ( .Actor:Self 00000001 0000000A )
  8A4:  				Set   *Var0  00000002 
  8B4:  		EndSwitch
  8BC:  		Label  A
  8C8:  		Switch  *Var0 
  8D4:  			Case  ==  00000000 
  8E0:  				Call  GetGoalPos    ( .Actor:Self *Var0 *Var1 *Var2 )
  8FC:  				Add   *Var0  0000001E 
  90C:  				Set   *Var1  00000000 
  91C:  				Call  SetActorJumpGravity   ( .Actor:Self *Fixed[1.8] )
  930:  				Call  SetGoalPos    ( .Actor:Self *Var0 *Var1 *Var2 )
  94C:  				Call  JumpToGoal    ( .Actor:Self  10` .False .True .False )
  96C:  				Call  SetAnimation  ( .Actor:Self 00000001 00320001 )
  984:  				Wait  20`
  990:  				Call  SetAnimation  ( .Actor:Self 00000001 00320007 )
  9A8:  			Case  ==  00000001 
  9B4:  				Call  GetGoalPos    ( .Actor:Self *Var0 *Var1 *Var2 )
  9D0:  				Add   *Var0  0000001E 
  9E0:  				Set   *Var1  00000000 
  9F0:  				Call  SetActorJumpGravity   ( .Actor:Self *Fixed[1.8] )
  A04:  				Call  SetGoalPos    ( .Actor:Self *Var0 *Var1 *Var2 )
  A20:  				Call  JumpToGoal    ( .Actor:Self  10` .False .True .False )
  A40:  				Call  SetAnimation  ( .Actor:Self 00000001 0032000E )
  A58:  				Wait  20`
  A64:  				Call  PlaySoundAtActor      ( .Actor:Self 000020C3 )
  A78:  				Call  SetAnimation  ( .Actor:Self 00000001 00320010 )
  A90:  				Wait  20`
  A9C:  				Call  SetAnimation  ( .Actor:Self 00000001 00320007 )
  AB4:  			Default
  ABC:  				Call  SetGoalToTarget   ( .Actor:Self )
  ACC:  				Call  GetGoalPos    ( .Actor:Self *VarA *VarB *VarC )
  AE8:  				Add   *VarA  0000001E 
  AF8:  				Set   *VarB  00000000 
  B08:  				Call  GetActorVar   ( .Actor:Self 00000001 *Var0 )
  B20:  				Mul   *Var0  FFFFFFFF 
  B30:  				Call  AddCoin       ( *Var0 )
  B40:  				Thread
  B48:  					Call  SetPartFlagBits   ( .Actor:Self 00000002 00100000 .True )
  B64:  					Call  SetPartFlagBits   ( .Actor:Self 00000002 00000001 .False )
  B80:  					Call  GetActorPos       ( .Actor:Player *Var0 *Var1 *Var2 )
  B9C:  					Call  SetPartPos        ( .Actor:Self 00000002 *Var0 *Var1 *Var2 )
  BBC:  					Call  SetPartJumpGravity    ( .Actor:Self 00000002 *Fixed[1.0] )
  BD4:  					Add   *VarB  0000001E 
  BE4:  					Call  JumpPartTo        ( .Actor:Self 00000002 *VarA *VarB *VarC  22` .True )
  C0C:  					Call  SetPartFlagBits   ( .Actor:Self 00000002 00100000 .False )
  C28:  				EndThread
  C30:  				Thread
  C38:  					Call  GetActorVar   ( .Actor:Self 00000001 *Var0 )
  C50:  					Loop  *Var0 
  C5C:  						Call  PlaySoundAtActor  ( .Actor:Self 00000212 )
  C70:  						Wait  1`
  C7C:  					EndLoop
  C84:  				EndThread
  C8C:  				Call  SetActorJumpGravity   ( .Actor:Self *Fixed[1.8] )
  CA0:  				Call  SetGoalPos    ( .Actor:Self *VarA *VarB *VarC )
  CBC:  				Call  JumpToGoal    ( .Actor:Self  10` .False .True .False )
  CDC:  				Call  SetIdleAnimations     ( .Actor:Self 00000001 $IdleAnimations_8021D55C_0A )
  CF4:  				Call  SetAnimation  ( .Actor:Self 00000001 0032000E )
  D0C:  				Call  SetActorVar   ( .Actor:Self 00000000 00000001 )
  D24:  				Wait  7`
  D30:  				Call  SetAnimation  ( .Actor:Self 00000001 0032000F )
  D48:  				Wait  20`
  D54:  				Call  SetAnimation  ( .Actor:Self 00000001 00320008 )
  D6C:  		EndSwitch
  D74:  		Call  UseBattleCamPreset    ( 00000002 )
  D84:  		Call  YieldTurn ( )
  D90:  		Call  SetGoalToHome ( .Actor:Self )
  DA0:  		Call  SetActorSpeed ( .Actor:Self *Fixed[8.0] )
  DB4:  		Call  RunToGoal     ( .Actor:Self  0` .False )
  DCC:  	EndCaseGroup
  DD4:  EndSwitch
  DDC:  Call  EnableIdleScript  ( .Actor:Self 00000001 )
  DF0:  Call  UseIdleAnimation  ( .Actor:Self .True )
  E04:  Return
  E0C:  End
}

