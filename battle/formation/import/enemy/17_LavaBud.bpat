% Automatically dumped from section 17

#new:Actor $17_LavaBud {
% stats
[Index]        B5b 
[Level]         0`b 
[MaxHP]         8`b 
[Coins]         0`b 
[Flags]       00000000 
[StatusTable] $StatusTable_80225180_17 
% ai
[PartsCount]    2`s 
[PartsTable]  $PartsTable_8022522C_17 
[Script]      $Script_Init_8022529C_17 
% move effectiveness
[Escape]        0`b 
[Item]          0`b 
[AirLift]       0`b 
[Hurricane]     0`b % Bow's "Spook" as well
[UpAndAway]     0`b 
[PowerBounce]  80`b 
[SpinSmash]     4`b % weight (0-4)
% ui positions
[Size]         30`b  30`b % width height
[HealthBar]    10`b -42`b % dx dy
[StatusTurn]  -18`b  10`b % dx dy
[StatusIcon]    0`b   0`b % dx dy
}

#new:Function $Function_80218DF0_17 {
    0:  ADDIU     SP, SP, FFE0
    4:  SW        S1, 14 (SP)
    8:  COPY      S1, A0
    C:  SW        RA, 18 (SP)
   10:  SW        S0, 10 (SP)
   14:  LW        S0, C (S1)
   18:  LW        A1, 0 (S0)
   1C:  JAL       ~Func:get_variable
   20:  ADDIU     S0, S0, 4
   24:  LW        A1, 0 (S0)
   28:  LW        S0, C (V0)
   2C:  JAL       ~Func:get_float_variable
   30:  COPY      A0, S1
   34:  SWC1      F0, 2C (S0)
   38:  SWC1      F0, 30 (S0)
   3C:  LW        RA, 18 (SP)
   40:  LW        S1, 14 (SP)
   44:  LW        S0, 10 (SP)
   48:  LI        V0, 2
   4C:  JR        RA
   50:  ADDIU     SP, SP, 20
}

#new:Script $Script_80222EF0_17 {
    0:  Switch  *Var0 
    C:  	Case  ==  00000201 
   18:  		Call  SetActorVar       ( .Actor:Enemy1 0000000A 00000023 )
   30:  		Call  GetAnimatedPositionByTreeIndex    ( 00000001 00000008 *Var1 *Var2 *Var3 )
   50:  		Call  GetAnimatedRotationByTreeIndex    ( 00000001 00000008 *Var4 *Var5 *Var6 )
   70:  		Set   *Var7  0000000A 
   80:  		Set   *Var8  FFFFFFF1 
   90:  		Call  $Function_80218BE8_17 ( *Var1 *Var2 *Var6 *Var7 *Var8 *Var3 *Var4 )
   B8:  		Call  GetPartOffset     ( .Actor:Enemy1 00000001 *Var0 *Var1 *Var2 )
   D8:  		Sub   *Var2  00000003 
   E8:  		Call  PlayEffect        ( ~FX:Fire:LargeRed *Var3 *Var4 *Var2 *Fixed[0.3] *VarA 00000000 00000000 00000000 00000000 00000000 00000000 00000000 )
  12C:  		Call  SetActorVar       ( .Actor:Enemy1 00000006 *VarA )
  144:  		Call  SetIdleAnimations ( .Actor:Enemy1 00000001 $IdleAnimations_802250D4_17 )
  15C:  		Call  SetDefenseTable   ( .Actor:Enemy1 00000001 $DefenseTable_80225128_17 )
  174:  		Call  SetDefenseTable   ( .Actor:Enemy1 00000002 $DefenseTable_80225128_17 )
  18C:  		Call  SetPartEventBits  ( .Actor:Enemy1 00000001 00000002 .True )
  1A8:  		Call  SetPartEventBits  ( .Actor:Enemy1 00000002 00000002 .True )
  1C4:  		Call  SetActorVar       ( .Actor:Enemy1 00000007 007B0004 )
  1DC:  		Call  SetActorVar       ( .Actor:Enemy1 00000008 007B000B )
  1F4:  		Call  SetActorVar       ( .Actor:Enemy1 00000005 00000001 )
  20C:  		Call  SetPartFlagBits   ( .Actor:Enemy1 00000002 00020000 .False )
  228:  		Call  SetActorFlagBits  ( .Actor:Enemy1 00040000 .False )
  240:  	Case  ==  00000202 
  24C:  		Call  SetActorVar       ( .Actor:Enemy2 0000000A 00000023 )
  264:  		Call  GetAnimatedPositionByTreeIndex    ( 00000002 00000008 *Var1 *Var2 *Var3 )
  284:  		Call  GetAnimatedRotationByTreeIndex    ( 00000002 00000008 *Var4 *Var5 *Var6 )
  2A4:  		Set   *Var7  0000000A 
  2B4:  		Set   *Var8  FFFFFFF1 
  2C4:  		Call  $Function_80218BE8_17 ( *Var1 *Var2 *Var6 *Var7 *Var8 *Var3 *Var4 )
  2EC:  		Call  GetPartOffset     ( .Actor:Enemy2 00000001 *Var0 *Var1 *Var2 )
  30C:  		Sub   *Var2  00000003 
  31C:  		Call  PlayEffect        ( ~FX:Fire:LargeRed *Var3 *Var4 *Var2 *Fixed[0.3] *VarA 00000000 00000000 00000000 00000000 00000000 00000000 00000000 )
  360:  		Call  SetActorVar       ( .Actor:Enemy2 00000006 *VarA )
  378:  		Call  SetIdleAnimations ( .Actor:Enemy2 00000001 $IdleAnimations_802250D4_17 )
  390:  		Call  SetDefenseTable   ( .Actor:Enemy2 00000001 $DefenseTable_80225128_17 )
  3A8:  		Call  SetDefenseTable   ( .Actor:Enemy2 00000002 $DefenseTable_80225128_17 )
  3C0:  		Call  SetPartEventBits  ( .Actor:Enemy2 00000001 00000002 .True )
  3DC:  		Call  SetPartEventBits  ( .Actor:Enemy2 00000002 00000002 .True )
  3F8:  		Call  SetActorVar       ( .Actor:Enemy2 00000007 007B0004 )
  410:  		Call  SetActorVar       ( .Actor:Enemy2 00000008 007B000B )
  428:  		Call  SetActorVar       ( .Actor:Enemy2 00000005 00000001 )
  440:  		Call  SetPartFlagBits   ( .Actor:Enemy2 00000002 00020000 .False )
  45C:  		Call  SetActorFlagBits  ( .Actor:Enemy2 00040000 .False )
  474:  	Default
  47C:  		Call  SetActorVar       ( .Actor:Enemy0 0000000A 00000046 )
  494:  		Call  GetAnimatedPositionByTreeIndex    ( 00000000 0000000A *Var1 *Var2 *Var3 )
  4B4:  		Call  GetAnimatedRotationByTreeIndex    ( 00000000 0000000A *Var4 *Var5 *Var6 )
  4D4:  		Set   *Var7  0000001E 
  4E4:  		Set   *Var8  FFFFFFE2 
  4F4:  		Call  $Function_80218BE8_17 ( *Var1 *Var2 *Var6 *Var7 *Var8 *Var3 *Var4 )
  51C:  		Call  GetPartOffset     ( .Actor:Enemy0 00000001 *Var0 *Var1 *Var2 )
  53C:  		Sub   *Var2  00000003 
  54C:  		Call  PlayEffect        ( ~FX:Fire:LargeRed *Var3 *Var4 *Var2 *Fixed[0.7] *VarA 00000000 00000000 00000000 00000000 00000000 00000000 00000000 )
  590:  		Call  SetActorVar       ( .Actor:Enemy0 00000006 *VarA )
  5A8:  		Call  SetIdleAnimations ( .Actor:Enemy0 00000001 $IdleAnimations_8021D064_17 )
  5C0:  		Call  SetDefenseTable   ( .Actor:Enemy0 00000001 $DefenseTable_8021D0F0_17 )
  5D8:  		Call  SetDefenseTable   ( .Actor:Enemy0 00000002 $DefenseTable_8021D0F0_17 )
  5F0:  		Call  SetPartEventBits  ( .Actor:Enemy0 00000001 00000002 .True )
  60C:  		Call  SetPartEventBits  ( .Actor:Enemy0 00000002 00000002 .True )
  628:  		Call  SetActorVar       ( .Actor:Enemy0 00000007 00790004 )
  640:  		Call  SetActorVar       ( .Actor:Enemy0 00000008 0079000A )
  658:  		Call  SetActorVar       ( .Actor:Enemy0 00000005 00000001 )
  670:  		Call  ForceHomePos      ( .Actor:Self  61`  61`  0` )
  68C:  		Call  SetActorFlagBits  ( .Actor:Self 00040000 .False )
  6A4:  EndSwitch
  6AC:  Return
  6B4:  End
}

#new:Actor $PetitPiranha_17 {
% stats
[Index]        B7b 
[Level]         0`b 
[MaxHP]         1`b 
[Coins]         0`b 
[Flags]       00000200 
[StatusTable] $StatusTable_80223F50_17 
% ai
[PartsCount]    1`s 
[PartsTable]  $PartsTable_80223FFC_17 
[Script]      $Script_Init_80224048_17 
% move effectiveness
[Escape]        0`b 
[Item]          0`b 
[AirLift]       0`b 
[Hurricane]     0`b % Bow's "Spook" as well
[UpAndAway]     0`b 
[PowerBounce]  80`b 
[SpinSmash]     0`b % weight (0-4)
% ui positions
[Size]         30`b  30`b % width height
[HealthBar]     0`b   0`b % dx dy
[StatusTurn]  -10`b  20`b % dx dy
[StatusIcon]   10`b  20`b % dx dy
}

#new:IdleAnimations $IdleAnimations_802250C0_17 {
.Status:Normal    007B0003
.Status:Stop      007B0002
.Status:End
}

#new:IdleAnimations $IdleAnimations_802250D4_17 {
.Status:Normal    007B0004
.Status:Stop      007B0002
.Status:End
}

#new:IdleAnimations $IdleAnimations_802250E8_17 {
.Status:Normal    007B000F
.Status:Stop      007B000F
.Status:End
}

#new:DefenseTable $DefenseTable_802250FC_17 {
.Element:Normal 00000000
.Element:Water  00000000
.Element:Ice    00000000
.Element:Fire   00000063
.Element:Blast  00000000
.Element:End
}

#new:DefenseTable $DefenseTable_80225128_17 {
.Element:Normal 00000000
.Element:Water  FFFFFFFE
.Element:Ice    FFFFFFFE
.Element:Fire   00000063
.Element:Blast  00000000
.Element:End
}

#new:DefenseTable $DefenseTable_80225154_17 {
.Element:Normal 00000000
.Element:Water  00000000
.Element:Ice    00000000
.Element:Fire   00000063
.Element:Blast  00000000
.Element:End
}

#new:StatusTable $StatusTable_80225180_17 {
.Status:Normal      0`
.Status:Default     0`
.Status:Sleep      75`
.Status:Poison      0`
.Status:Frozen      0`
.Status:Dizzy      30`
.Status:Fear        0`
.Status:Static      0`
.Status:Paralyze   75`
.Status:Shrink      0`
.Status:Stop       60`
.Status:DefaultTurnMod    0`
.Status:SleepTurnMod     -1`
.Status:PoisonTurnMod     0`
.Status:FrozenTurnMod     0`
.Status:DizzyTurnMod     -1`
.Status:FearTurnMod       0`
.Status:StaticTurnMod     0`
.Status:ParalyzeTurnMod  -1`
.Status:ShrinkTurnMod    -1`
.Status:StopTurnMod      -2`
.Status:End
}

#new:PartsTable $PartsTable_8022522C_17 {
00120000 01000000 000000FF $IdleAnimations_802250C0_17 $DefenseTable_802250FC_17 00000000 00000000 00F80000 00000000 
00900021 02000000 000000FF 00000000 $DefenseTable_802250FC_17 00000000 00000000 00F80000 00000000 
}

#new:Script $Script_Init_8022529C_17 {
    0:  UseArray  $End[890] 
    C:  Call  SetActorVar   ( .Actor:Self 00000005 00000000 )
   24:  Call  SetActorVar   ( .Actor:Self 00000006 00000000 )
   3C:  Call  SetActorVar   ( .Actor:Self 00000009 00000000 )
   54:  Call  SetActorVar   ( .Actor:Self 00000004 00000000 )
   6C:  Call  SetActorVar   ( .Actor:Self 0000000B 00000000 )
   84:  Call  SetActorVar   ( .Actor:Self 0000000D 00000000 )
   9C:  Call  RandInt       ( 00000014 *Var0 )
   B0:  Add   *Var0  0000000F 
   C0:  Call  SetActorVar   ( .Actor:Self 0000000D *Var0 )
   D8:  Call  SetActorVar   ( .Actor:Self 00000007 007B0003 )
   F0:  Call  SetActorVar   ( .Actor:Self 00000008 007B0009 )
  108:  Call  BindTakeTurn  ( .Actor:Self $Script_TakeTurn_80225D98_17 )
  11C:  Call  BindIdle      ( .Actor:Self $Script_Idle_802253F0_17 )
  130:  Call  BindHandleEvent   ( .Actor:Self $Script_HandleEvent_80225738_17 )
  144:  Return
  14C:  End
}

#new:Script $Script_Idle_802253F0_17 {
    0:  Label  0
    C:  Call  GetActorHP    ( .Actor:Enemy0 *Var0 )
   20:  If  *Var0  ==  00000000 
   30:  	Goto  63
   3C:  EndIf
   44:  Call  GetActorFlags ( .Actor:Self *Var0 )
   58:  If  *Var0  &  00400000 
   68:  	Goto  63
   74:  EndIf
   7C:  Call  GetActorVar   ( .Actor:Self 00000005 *Var0 )
   94:  If  *Var0  !=  00000002 
   A4:  	Goto  63
   B0:  EndIf
   B8:  Label  A
   C4:  Call  GetActorVar   ( .Actor:Self 0000000D *Var0 )
   DC:  Sub   *Var0  00000001 
   EC:  Call  SetActorVar   ( .Actor:Self 0000000D *Var0 )
  104:  If  *Var0  !=  00000000 
  114:  	Goto  63
  120:  EndIf
  128:  Call  GetActorVar   ( .Actor:Self 0000000C *Var0 )
  140:  Add   *Var0  00000001 
  150:  If  *Var0  >=  00000003 
  160:  	Set   *Var0  00000000 
  170:  EndIf
  178:  Call  SetActorVar   ( .Actor:Self 0000000C *Var0 )
  190:  Switch  *Var0 
  19C:  	Case  ==  00000000 
  1A8:  		Call  RandInt   ( 00000032 *Var0 )
  1BC:  		Add   *Var0  00000019 
  1CC:  	Case  ==  00000001 
  1D8:  		Call  RandInt   ( 00000028 *Var0 )
  1EC:  		Add   *Var0  00000014 
  1FC:  	Default
  204:  		Call  RandInt   ( 00000003 *Var0 )
  218:  		Add   *Var0  00000003 
  228:  EndSwitch
  230:  Call  SetActorVar   ( .Actor:Self 0000000D *Var0 )
  248:  Call  GetActorVar   ( .Actor:Self 00000000 *Var0 )
  260:  If  *Var0  ==  00000001 
  270:  	Call  OverrideBattleDmaDest ( $End[6230] )
  280:  Else
  288:  	Call  OverrideBattleDmaDest ( $End[3230] )
  298:  EndIf
  2A0:  Call  LoadBattleDmaData ( 0000001E )
  2B0:  ExecWait  $Script_802256E0_17 
  2BC:  Label  63
  2C8:  Wait  1`
  2D4:  Goto  0
  2E0:  Return
  2E8:  End
}

#new:Script $Script_802256E0_17 {
    0:  If  *Var0  ==  00000001 
   10:  	Call  PlayModelAnimation    ( *Var0 $End[6230] )
   24:  Else
   2C:  	Call  PlayModelAnimation    ( *Var0 $End[3230] )
   40:  EndIf
   48:  Return
   50:  End
}

#new:Script $Script_HandleEvent_80225738_17 {
    0:  Call  UseIdleAnimation  ( .Actor:Self .False )
   14:  Call  EnableIdleScript  ( .Actor:Self 00000000 )
   28:  Call  GetActorVar       ( .Actor:Self 00000000 *Var0 )
   40:  Call  SetAnimatorFlags  ( *Var0 00040000 00000000 )
   58:  Call  GetLastElement    ( *VarE )
   68:  Call  GetLastEvent      ( .Actor:Self *Var0 )
   7C:  Switch  *Var0 
   88:  	Case  ==  .Event:BeginFirstStrike % 38
   94:  	Case  ==  .Event:HitCombo % 9
   A0:  		ExecWait  $Script_802270B4_17 
   AC:  	Case  ==  .Event:Hit % A
   B8:  		ExecWait  $Script_802275E4_17 
   C4:  	Case  ==  .Event:BurnHit % E
   D0:  		If  *VarE  &  00000002 
   E0:  			ExecWait  $Script_80225AA8_17 
   EC:  		Else
   F4:  			ExecWait  $Script_802275E4_17 
  100:  		EndIf
  108:  	Case  ==  .Event:BurnDeath % 24
  114:  		ExecWait  $Script_80226B58_17 
  120:  	Case  ==  .Event:SpinSmashHit % B
  12C:  		ExecWait  $Script_802275E4_17 
  138:  	Case  ==  .Event:SpinSmashDeath % 21
  144:  		ExecWait  $Script_80226B58_17 
  150:  	Case  ==  .Event:ShockHit % 2F
  15C:  		SetConst  *Var0  00000001 
  16C:  		Call  GetActorVar   ( .Actor:Self 00000008 *Var1 )
  184:  		ExecWait  DoShockHit 
  190:  	Case  ==  .Event:ShockDeath % 26
  19C:  		ExecWait  DoShockHit 
  1A8:  	Case  ==  00000017 % 17
  1B4:  		If  *VarE  !&  00000002 
  1C4:  			ExecWait  $Script_802270B4_17 
  1D0:  		EndIf
  1D8:  	Case  ==  .Event:Immune % 19
  1E4:  		If  *VarE  !&  00000002 
  1F4:  			ExecWait  $Script_802275E4_17 
  200:  		EndIf
  208:  	Case  ==  .Event:AirLiftFailed % 1F
  214:  	Case  ==  .Event:SpikeTaunt % 1B
  220:  	Case  ==  .Event:Death % 20
  22C:  		ExecWait  $Script_80226B58_17 
  238:  	Case  ==  .Event:EndFirstStrike % 35
  244:  	Case  ==  .Event:RecoverStatus % 31
  250:  		Call  GetActorVar       ( .Actor:Self 00000000 *Var0 )
  268:  		Call  SetAnimatorFlags  ( *Var0 00040000 00000000 )
  280:  	Case  ==  00000030 % 30
  28C:  		SetConst  *Var0  00000001 
  29C:  		Call  GetActorVar   ( .Actor:Self 00000008 *Var1 )
  2B4:  		ExecWait  DoNormalHit 
  2C0:  		Wait  1000`
  2CC:  	Default
  2D4:  EndSwitch
  2DC:  Call  GetStatusFlags    ( .Actor:Self *Var0 )
  2F0:  If  *Var0  &  ~Flags:StatusFlags:Stop % 200000
  300:  	Call  GetActorVar       ( .Actor:Self 00000000 *Var0 )
  318:  	Call  SetAnimatorFlags  ( *Var0 00040000 00000001 )
  330:  EndIf
  338:  Call  EnableIdleScript  ( .Actor:Self 00000001 )
  34C:  Call  UseIdleAnimation  ( .Actor:Self .True )
  360:  Return
  368:  End
}

#new:Script $Script_80225AA8_17 {
    0:  Thread
    8:  	Wait  1`
   14:  	Call  GetActorVar   ( .Actor:Enemy0 00000000 *Var0 )
   2C:  	If  *Var0  ==  00000000 
   3C:  		Goto  A
   48:  	EndIf
   50:  	Call  GetActorVar   ( .Actor:Self 00000005 *Var2 )
   68:  	If  *Var2  ==  00000001 
   78:  		Goto  A
   84:  	EndIf
   8C:  	Call  GetActorVar   ( .Actor:Self 00000000 *Var0 )
   A4:  	If  *Var0  ==  00000001 
   B4:  		Set   *Var0  00000201 
   C4:  	Else
   CC:  		Set   *Var0  00000202 
   DC:  	EndIf
   E4:  	ExecWait  $Script_80222EF0_17 
   F0:  	Label  A
   FC:  EndThread
  104:  Call  GetActorVar   ( .Actor:Enemy0 00000000 *Var0 )
  11C:  If  *Var0  !=  00000000 
  12C:  	Call  GetActorVar   ( .Actor:Self 00000005 *Var0 )
  144:  	If  *Var0  ==  00000002 
  154:  		Call  GetActorVar   ( .Actor:Self 00000000 *Var0 )
  16C:  		If  *Var0  ==  00000001 
  17C:  			Call  OverrideBattleDmaDest ( $End[6230] )
  18C:  		Else
  194:  			Call  OverrideBattleDmaDest ( $End[3230] )
  1A4:  		EndIf
  1AC:  		Call  LoadBattleDmaData ( 0000001D )
  1BC:  		ExecWait  $Script_802256E0_17 
  1C8:  		Call  SetActorVar       ( .Actor:Self 00000007 007B0003 )
  1E0:  		Call  SetActorVar       ( .Actor:Self 00000008 007B0009 )
  1F8:  		Call  SetIdleAnimations ( .Actor:Self 00000001 $IdleAnimations_802250D4_17 )
  210:  		Call  SetDefenseTable   ( .Actor:Self 00000001 $DefenseTable_80225128_17 )
  228:  		Call  SetDefenseTable   ( .Actor:Self 00000002 $DefenseTable_80225128_17 )
  240:  		Thread
  248:  			Wait  14`
  254:  			Call  GetActorVar   ( .Actor:Self 00000000 *Var0 )
  26C:  			If  *Var0  ==  00000001 
  27C:  				Call  OverrideBattleDmaDest ( $End[6230] )
  28C:  			Else
  294:  				Call  OverrideBattleDmaDest ( $End[3230] )
  2A4:  			EndIf
  2AC:  			Call  LoadBattleDmaData ( 0000001F )
  2BC:  			ExecWait  $Script_802256E0_17 
  2C8:  		EndThread
  2D0:  	EndIf
  2D8:  EndIf
  2E0:  Return
  2E8:  End
}

#new:Script $Script_TakeTurn_80225D98_17 {
    0:  Call  GetActorFlags ( .Actor:Self *Var0 )
   14:  If  *Var0  &  00400000 
   24:  	Return
   2C:  EndIf
   34:  Call  GetActorVar   ( .Actor:Enemy0 00000000 *Var0 )
   4C:  If  *Var0  ==  00000000 
   5C:  	Call  GetActorVar   ( .Actor:Self 00000005 *Var0 )
   74:  	If  *Var0  ==  00000002 
   84:  		Return
   8C:  	EndIf
   94:  	ExecWait  $Script_ShootBombs_17 
   A0:  Else
   A8:  	Call  GetActorVar   ( .Actor:Self 00000004 *Var1 )
   C0:  	If  *Var1  !=  00000000 
   D0:  		Sub   *Var1  00000001 
   E0:  		Call  SetActorVar   ( .Actor:Self 00000004 *Var1 )
   F8:  		Return
  100:  	EndIf
  108:  	Call  GetActorVar   ( .Actor:Self 00000005 *Var0 )
  120:  	If  *Var0  ==  00000001 
  130:  		If  *Var1  !=  00000000 
  140:  			Return
  148:  		EndIf
  150:  		Call  SetActorVar   ( .Actor:Self 00000004 00000001 )
  168:  		ExecWait  $Script_8022646C_17 
  174:  	Else
  17C:  		Call  GetActorVar   ( .Actor:Self 0000000B *Var0 )
  194:  		Sub   *Var0  00000001 
  1A4:  		Call  SetActorVar   ( .Actor:Self 0000000B *Var0 )
  1BC:  		If  *Var0  <=  00000000 
  1CC:  			Call  EnableIdleScript  ( .Actor:Self 00000000 )
  1E0:  			Call  GetActorVar       ( .Actor:Self 00000000 *Var0 )
  1F8:  			If  *Var0  ==  00000001 
  208:  				Call  UseBattleCamPreset    ( 00000013 )
  218:  				Call  SetBattleCamTarget    (  40`  30`  0` )
  230:  				Call  SetBattleCamZoom      (  270` )
  240:  				Call  SetBattleCamOffsetZ   (  20` )
  250:  				Call  MoveBattleCamOver     (  30` )
  260:  			Else
  268:  				Call  UseBattleCamPreset    ( 00000013 )
  278:  				Call  SetBattleCamTarget    (  110`  35`  0` )
  290:  				Call  SetBattleCamZoom      (  300` )
  2A0:  				Call  SetBattleCamOffsetZ   (  20` )
  2B0:  				Call  MoveBattleCamOver     (  30` )
  2C0:  			EndIf
  2C8:  			Wait  30`
  2D4:  			Loop  0000000A 
  2E0:  				If  *Var0  ==  00000001 
  2F0:  					Call  OverrideBattleDmaDest ( $End[6230] )
  300:  				Else
  308:  					Call  OverrideBattleDmaDest ( $End[3230] )
  318:  				EndIf
  320:  				Call  LoadBattleDmaData ( 0000001E )
  330:  				ExecWait  $Script_802256E0_17 
  33C:  				Wait  4`
  348:  			EndLoop
  350:  			Call  UseBattleCamPreset    ( 00000002 )
  360:  			Call  MoveBattleCamOver     (  15` )
  370:  			Call  GetEnemyMaxHP ( .Actor:Self *Var0 )
  384:  			Call  SetEnemyHP    ( .Actor:Self *Var0 )
  398:  			Call  SetAnimation  ( .Actor:Self 00000001 007B0004 )
  3B0:  			Call  GetActorVar   ( .Actor:Self 00000000 *Var0 )
  3C8:  			If  *Var0  ==  00000001 
  3D8:  				Set   *Var0  00000201 
  3E8:  			Else
  3F0:  				Set   *Var0  00000202 
  400:  			EndIf
  408:  			Call  PlaySoundAtActor  ( *Var0 000020BF )
  41C:  			ExecWait  $Script_80222EF0_17 
  428:  			Call  GetActorVar       ( .Actor:Self 00000000 *Var0 )
  440:  			If  *Var0  ==  00000001 
  450:  				Call  OverrideBattleDmaDest ( $End[6230] )
  460:  			Else
  468:  				Call  OverrideBattleDmaDest ( $End[3230] )
  478:  			EndIf
  480:  			Call  LoadBattleDmaData ( 0000001D )
  490:  			ExecWait  $Script_802256E0_17 
  49C:  			Wait  14`
  4A8:  			If  *Var0  ==  00000001 
  4B8:  				Call  OverrideBattleDmaDest ( $End[6230] )
  4C8:  			Else
  4D0:  				Call  OverrideBattleDmaDest ( $End[3230] )
  4E0:  			EndIf
  4E8:  			Call  LoadBattleDmaData ( 0000001F )
  4F8:  			ExecWait  $Script_802256E0_17 
  504:  			Call  GetEnemyMaxHP     ( .Actor:Self *Var0 )
  518:  			Call  SetEnemyHP        ( .Actor:Self *Var0 )
  52C:  			Call  EnableIdleScript  ( .Actor:Self 00000001 )
  540:  		EndIf
  548:  	EndIf
  550:  EndIf
  558:  ExecWait  $Script_8022630C_17 
  564:  Return
  56C:  End
}

#new:Script $Script_8022630C_17 {
    0:  Call  GetActorVar   ( .Actor:Self 00000007 *Var0 )
   18:  Call  SetAnimation  ( .Actor:Self 00000001 *Var0 )
   30:  Call  GetActorVar   ( .Actor:Self 00000000 *Var0 )
   48:  Call  GetActorVar   ( .Actor:Enemy0 00000000 *Var3 )
   60:  Call  GetActorVar   ( .Actor:Self 00000005 *Var3 )
   78:  If  *Var3  ==  00000002 
   88:  	If  *Var0  ==  00000001 
   98:  		Call  OverrideBattleDmaDest ( $End[6230] )
   A8:  	Else
   B0:  		Call  OverrideBattleDmaDest ( $End[3230] )
   C0:  	EndIf
   C8:  	Call  LoadBattleDmaData ( 0000001E )
   D8:  	ExecWait  $Script_802256E0_17 
   E4:  Else
   EC:  	If  *Var0  ==  00000001 
   FC:  		Call  OverrideBattleDmaDest ( $End[6230] )
  10C:  	Else
  114:  		Call  OverrideBattleDmaDest ( $End[3230] )
  124:  	EndIf
  12C:  	Call  LoadBattleDmaData ( 0000001F )
  13C:  	ExecWait  $Script_802256E0_17 
  148:  EndIf
  150:  Return
  158:  End
}

#new:Script $Script_8022646C_17 {
    0:  Call  GetActorVar   ( .Actor:Self 00000005 *Var0 )
   18:  If  *Var0  ==  00000002 
   28:  	Return
   30:  EndIf
   38:  Call  GetActorVar   ( .Actor:Self 00000009 *Var0 )
   50:  If  *Var0  !=  00000000 
   60:  	Return
   68:  EndIf
   70:  Call  UseIdleAnimation  ( .Actor:Self .False )
   84:  Thread
   8C:  	Call  GetActorPos   ( .Actor:Self *Var0 *Var1 *Var2 )
   A8:  	Wait  8`
   B4:  	Call  UseBattleCamPreset    ( 00000013 )
   C4:  	Call  SetBattleCamTarget    ( *Var0 *Var1 *Var2 )
   DC:  	Call  SetBattleCamZoom      (  300` )
   EC:  	Call  SetBattleCamOffsetZ   (  30` )
   FC:  	Call  MoveBattleCamOver     (  30` )
  10C:  	Wait  45`
  118:  	Call  UseBattleCamPreset    ( 00000002 )
  128:  	Call  MoveBattleCamOver     (  20` )
  138:  EndThread
  140:  Call  GetActorVar   ( .Actor:Self 00000000 *Var0 )
  158:  If  *Var0  ==  00000001 
  168:  	Call  OverrideBattleDmaDest ( $End[6230] )
  178:  Else
  180:  	Call  OverrideBattleDmaDest ( $End[3230] )
  190:  EndIf
  198:  Call  LoadBattleDmaData ( 00000012 )
  1A8:  ExecWait  $Script_802256E0_17 
  1B4:  Thread
  1BC:  	Wait  20`
  1C8:  	Call  SetAnimation  ( .Actor:Self 00000001 007B0007 )
  1E0:  	Wait  34`
  1EC:  	Call  SetAnimation  ( .Actor:Self 00000001 007B0008 )
  204:  	Wait  10`
  210:  	Call  SetAnimation  ( .Actor:Self 00000001 007B0004 )
  228:  	If  *Var0  ==  00000001 
  238:  		Call  OverrideBattleDmaDest ( $End[6230] )
  248:  	Else
  250:  		Call  OverrideBattleDmaDest ( $End[3230] )
  260:  	EndIf
  268:  	Call  LoadBattleDmaData ( 0000001F )
  278:  	ExecWait  $Script_802256E0_17 
  284:  EndThread
  28C:  Wait  56`
  298:  If  *Var0  ==  00000001 
  2A8:  	Call  SummonEnemy   ( $SpecialFormation_80226B04_17 00000000 )
  2BC:  Else
  2C4:  	Call  SummonEnemy   ( $SpecialFormation_80226B20_17 00000000 )
  2D8:  EndIf
  2E0:  Set   *Var5  *Var0 
  2F0:  Call  GetActorVar   ( .Actor:Self 00000009 *Var0 )
  308:  Add   *Var0  00000001 
  318:  Call  SetActorVar   ( .Actor:Self 00000009 *Var0 )
  330:  Call  GetActorVar   ( .Actor:Self 00000000 *Var0 )
  348:  If  *Var0  ==  00000001 
  358:  	Call  SetActorVar   ( *Var5 00000000 00000201 )
  370:  Else
  378:  	Call  SetActorVar   ( *Var5 00000000 00000202 )
  390:  EndIf
  398:  Call  GetPartOffset ( .Actor:Self 00000001 *Var0 *Var1 *Var2 )
  3B8:  Sub   *Var0  0000000F 
  3C8:  Sub   *Var1  0000000F 
  3D8:  Call  SetActorPos   ( *Var5 *Var0 *Var1 *Var2 )
  3F4:  Sub   *Var0  0000001E 
  404:  Sub   *Var1  0000000F 
  414:  Call  PlaySoundAtActor  ( *Var5 000003C9 )
  428:  Call  GetActorVar   ( .Actor:Self 00000000 *Var9 )
  440:  If  *Var9  ==  00000001 
  450:  	Call  GetActorPos   ( *Var5 *Var0 *Var1 *Var2 )
  46C:  	Set   *Var0  FFFFFFF4 
  47C:  	Set   *Var1  00000050 
  48C:  	Call  SetGoalPos    ( *Var5 *Var0 *Var1 *Var2 )
  4A8:  	Call  SetHomePos    ( *Var5 *Var0 *Var1 *Var2 )
  4C4:  	Call  SetActorSpeed ( *Var5 *Fixed[4.0] )
  4D8:  	Call  SetActorJumpGravity   ( *Var5 *Fixed[1.0] )
  4EC:  	Call  FlyToGoal     ( *Var5  24`  -42` .Easing:QuarticOut )
  508:  Else
  510:  	Call  GetActorPos   ( *Var5 *Var0 *Var1 *Var2 )
  52C:  	Set   *Var0  00000012 
  53C:  	Set   *Var1  0000001C 
  54C:  	Call  SetGoalPos    ( *Var5 *Var0 *Var1 *Var2 )
  568:  	Call  SetHomePos    ( *Var5 *Var0 *Var1 *Var2 )
  584:  	Call  SetActorSpeed ( *Var5 *Fixed[5.0] )
  598:  	Call  SetActorJumpGravity   ( *Var5 *Fixed[1.2] )
  5AC:  	Call  FlyToGoal     ( *Var5  16`  -15` .Easing:CubicOut )
  5C8:  EndIf
  5D0:  Call  HPBarToHome   ( *Var5 )
  5E0:  Call  GetActorVar   ( .Actor:Self 00000000 *Var0 )
  5F8:  If  *Var0  ==  00000001 
  608:  	Call  OverrideBattleDmaDest ( $End[6230] )
  618:  Else
  620:  	Call  OverrideBattleDmaDest ( $End[3230] )
  630:  EndIf
  638:  Call  LoadBattleDmaData ( 0000001F )
  648:  ExecWait  $Script_802256E0_17 
  654:  Call  EnableIdleScript  ( .Actor:Self 00000001 )
  668:  Call  UseIdleAnimation  ( .Actor:Self .True )
  67C:  Return
  684:  End
}

#new:Vector3D $Vector3D_80226AF8_17 {
260` 0` 0`
}

#new:SpecialFormation $SpecialFormation_80226B04_17 {
$PetitPiranha_17 $Vector3D_80226AF8_17 0000005F FFFFFFF4 00000055 00000000 00000000 
}

#new:SpecialFormation $SpecialFormation_80226B20_17 {
$PetitPiranha_17 $Vector3D_80226AF8_17 0000005E 00000012 00000026 00000000 00000000 
}

#new:SpecialFormation $SpecialFormation_80226B3C_17 {
$PetitPiranhaBomb_17 $Vector3D_80226AF8_17 0000005F 00000000 00000000 00000000 00000000 
}

#new:Script $Script_80226B58_17 {
    0:  Call  GetActorVar   ( .Actor:Enemy0 00000000 *Var0 )
   18:  If  *Var0  !=  00000000 
   28:  	Call  GetActorVar   ( .Actor:Self 00000005 *Var0 )
   40:  	If  *Var0  ==  00000002 
   50:  		ExecWait  $Script_802275E4_17 
   5C:  		Return
   64:  	EndIf
   6C:  	Call  GetActorVar   ( .Actor:Self 00000008 *Var0 )
   84:  	Call  SetAnimation  ( .Actor:Self 00000001 *Var0 )
   9C:  	Call  GetActorVar   ( .Actor:Self 00000000 *Var0 )
   B4:  	If  *Var0  ==  00000001 
   C4:  		Call  OverrideBattleDmaDest ( $End[6230] )
   D4:  	Else
   DC:  		Call  OverrideBattleDmaDest ( $End[3230] )
   EC:  	EndIf
   F4:  	Call  LoadBattleDmaData ( 00000015 )
  104:  	ExecWait  $Script_802256E0_17 
  110:  	Call  SetActorVar       ( .Actor:Self 0000000B 00000002 )
  128:  	Call  GetActorVar       ( .Actor:Self 00000006 *Var0 )
  140:  	If  *Var0  !=  00000000 
  150:  		Call  RemoveEffect  ( *Var0 )
  160:  		Call  SetActorVar   ( .Actor:Self 00000006 00000000 )
  178:  	EndIf
  180:  	Call  SetIdleAnimations ( .Actor:Self 00000001 $IdleAnimations_802250E8_17 )
  198:  	Call  SetDefenseTable   ( .Actor:Self 00000001 $DefenseTable_80225154_17 )
  1B0:  	Call  SetDefenseTable   ( .Actor:Self 00000002 $DefenseTable_80225154_17 )
  1C8:  	Call  SetActorVar       ( .Actor:Self 00000007 007B000F )
  1E0:  	Call  SetActorVar       ( .Actor:Self 00000008 007B0009 )
  1F8:  	Call  SetAnimation      ( .Actor:Self 00000001 007B000F )
  210:  	Call  SetPartEventBits  ( .Actor:Self 00000001 00000002 .False )
  22C:  	Call  SetPartEventBits  ( .Actor:Self 00000002 00000002 .False )
  248:  	Wait  29`
  254:  	Call  PlaySoundAtActor  ( .Actor:Self 000003C7 )
  268:  	Call  GetActorVar       ( .Actor:Self 00000000 *Var0 )
  280:  	If  *Var0  ==  00000001 
  290:  		Call  OverrideBattleDmaDest ( $End[6230] )
  2A0:  	Else
  2A8:  		Call  OverrideBattleDmaDest ( $End[3230] )
  2B8:  	EndIf
  2C0:  	Call  LoadBattleDmaData ( 0000001B )
  2D0:  	ExecWait  $Script_802256E0_17 
  2DC:  	Wait  14`
  2E8:  	Call  SetActorVar       ( .Actor:Self 00000005 00000002 )
  300:  	Call  GetActorVar       ( .Actor:Enemy0 00000001 *VarF )
  318:  	If  *VarF  ==  00000000 
  328:  		ExecWait  $Script_8022630C_17 
  334:  	EndIf
  33C:  	Return
  344:  EndIf
  34C:  Call  GetActorVar   ( .Actor:Self 00000005 *Var0 )
  364:  If  *Var0  ==  00000000 
  374:  	Call  GetActorVar   ( .Actor:Self 00000000 *Var0 )
  38C:  	If  *Var0  ==  00000001 
  39C:  		Call  OverrideBattleDmaDest ( $End[6230] )
  3AC:  	Else
  3B4:  		Call  OverrideBattleDmaDest ( $End[3230] )
  3C4:  	EndIf
  3CC:  	Call  LoadBattleDmaData ( 00000015 )
  3DC:  	ExecWait  $Script_802256E0_17 
  3E8:  	Call  SetIdleAnimations ( .Actor:Self 00000001 $IdleAnimations_802250E8_17 )
  400:  	Call  SetActorVar       ( .Actor:Self 00000007 007B000F )
  418:  	Call  SetActorVar       ( .Actor:Self 00000008 007B0009 )
  430:  	Wait  29`
  43C:  	Call  PlaySoundAtActor  ( .Actor:Self 000003C7 )
  450:  	Call  GetActorVar       ( .Actor:Self 00000000 *Var0 )
  468:  	If  *Var0  ==  00000001 
  478:  		Call  OverrideBattleDmaDest ( $End[6230] )
  488:  	Else
  490:  		Call  OverrideBattleDmaDest ( $End[3230] )
  4A0:  	EndIf
  4A8:  	Call  LoadBattleDmaData ( 0000001B )
  4B8:  	ExecWait  $Script_802256E0_17 
  4C4:  	Wait  14`
  4D0:  	Call  SetActorVar       ( .Actor:Self 00000005 00000002 )
  4E8:  	ExecWait  $Script_8022630C_17 
  4F4:  	Call  SetPartFlagBits   ( .Actor:Self 00000002 00022000 .True )
  510:  	Call  SetActorFlagBits  ( .Actor:Self 00040000 .True )
  528:  Else
  530:  	ExecWait  $Script_802275E4_17 
  53C:  	Return
  544:  EndIf
  54C:  Return
  554:  End
}

#new:Script $Script_802270B4_17 {
    0:  Call  GetActorVar   ( .Actor:Self 00000008 *Var0 )
   18:  Call  SetAnimation  ( .Actor:Self 00000001 *Var0 )
   30:  Call  GetActorVar   ( .Actor:Self 00000000 *Var0 )
   48:  Call  GetActorVar   ( .Actor:Enemy0 00000000 *Var1 )
   60:  If  *Var1  ==  00000000 
   70:  	Call  GetActorVar   ( .Actor:Self 00000005 *Var5 )
   88:  	If  *Var5  !=  00000002 
   98:  		Call  GetLastDamage ( .Actor:Self *Var5 )
   AC:  		If  *Var5  <  00000004 
   BC:  			If  *Var0  ==  00000001 
   CC:  				Call  OverrideBattleDmaDest ( $End[6230] )
   DC:  			Else
   E4:  				Call  OverrideBattleDmaDest ( $End[3230] )
   F4:  			EndIf
   FC:  			Call  LoadBattleDmaData ( 00000016 )
  10C:  		Else
  114:  			If  *Var0  ==  00000001 
  124:  				Call  OverrideBattleDmaDest ( $End[6230] )
  134:  			Else
  13C:  				Call  OverrideBattleDmaDest ( $End[3230] )
  14C:  			EndIf
  154:  			Call  LoadBattleDmaData ( 00000015 )
  164:  		EndIf
  16C:  		ExecWait  $Script_802256E0_17 
  178:  		Wait  29`
  184:  	Else
  18C:  		Call  GetLastDamage ( .Actor:Self *Var5 )
  1A0:  		If  *Var5  <  00000004 
  1B0:  			If  *Var0  ==  00000001 
  1C0:  				Call  OverrideBattleDmaDest ( $End[6230] )
  1D0:  			Else
  1D8:  				Call  OverrideBattleDmaDest ( $End[3230] )
  1E8:  			EndIf
  1F0:  			Call  LoadBattleDmaData ( 00000014 )
  200:  		Else
  208:  			If  *Var0  ==  00000001 
  218:  				Call  OverrideBattleDmaDest ( $End[6230] )
  228:  			Else
  230:  				Call  OverrideBattleDmaDest ( $End[3230] )
  240:  			EndIf
  248:  			Call  LoadBattleDmaData ( 00000013 )
  258:  		EndIf
  260:  		ExecWait  $Script_802256E0_17 
  26C:  		Wait  29`
  278:  	EndIf
  280:  Else
  288:  	Call  GetActorVar   ( .Actor:Self 00000005 *Var5 )
  2A0:  	If  *Var5  ==  00000001 
  2B0:  		Call  GetLastDamage ( .Actor:Self *Var5 )
  2C4:  		If  *Var5  <  00000004 
  2D4:  			If  *Var0  ==  00000001 
  2E4:  				Call  OverrideBattleDmaDest ( $End[6230] )
  2F4:  			Else
  2FC:  				Call  OverrideBattleDmaDest ( $End[3230] )
  30C:  			EndIf
  314:  			Call  LoadBattleDmaData ( 00000016 )
  324:  		Else
  32C:  			If  *Var0  ==  00000001 
  33C:  				Call  OverrideBattleDmaDest ( $End[6230] )
  34C:  			Else
  354:  				Call  OverrideBattleDmaDest ( $End[3230] )
  364:  			EndIf
  36C:  			Call  LoadBattleDmaData ( 00000015 )
  37C:  		EndIf
  384:  		ExecWait  $Script_802256E0_17 
  390:  		Wait  29`
  39C:  	Else
  3A4:  		Call  GetLastDamage ( .Actor:Self *Var5 )
  3B8:  		If  *Var5  <  00000004 
  3C8:  			If  *Var0  ==  00000001 
  3D8:  				Call  OverrideBattleDmaDest ( $End[6230] )
  3E8:  			Else
  3F0:  				Call  OverrideBattleDmaDest ( $End[3230] )
  400:  			EndIf
  408:  			Call  LoadBattleDmaData ( 00000014 )
  418:  		Else
  420:  			If  *Var0  ==  00000001 
  430:  				Call  OverrideBattleDmaDest ( $End[6230] )
  440:  			Else
  448:  				Call  OverrideBattleDmaDest ( $End[3230] )
  458:  			EndIf
  460:  			Call  LoadBattleDmaData ( 00000013 )
  470:  		EndIf
  478:  		ExecWait  $Script_802256E0_17 
  484:  		Call  GetActorPos   ( .Actor:Self *Var1 *Var2 *Var3 )
  4A0:  		Sub   *Var2  00000019 
  4B0:  		Add   *Var3  00000002 
  4C0:  		Call  PlayEffect    ( ~FX:EmitterVolume:Embers *Var1 *Var2 *Var3 00000028 00000032 *Fixed[1.2] 00000018 0000002A *Fixed[0.8] *Fixed[0.6] 00000000 00000000 )
  504:  		Wait  29`
  510:  	EndIf
  518:  EndIf
  520:  Return
  528:  End
}

#new:Script $Script_802275E4_17 {
    0:  Call  GetActorVar   ( .Actor:Self 00000008 *Var0 )
   18:  Call  SetAnimation  ( .Actor:Self 00000001 *Var0 )
   30:  Call  GetActorVar   ( .Actor:Self 00000000 *Var0 )
   48:  Call  GetActorVar   ( .Actor:Enemy0 00000000 *Var5 )
   60:  If  *Var5  ==  00000000 
   70:  	Call  GetActorVar   ( .Actor:Self 00000005 *Var5 )
   88:  	If  *Var5  ==  00000000 
   98:  		Call  GetLastDamage ( .Actor:Self *Var5 )
   AC:  		If  *Var5  <  00000004 
   BC:  			If  *Var0  ==  00000001 
   CC:  				Call  OverrideBattleDmaDest ( $End[6230] )
   DC:  			Else
   E4:  				Call  OverrideBattleDmaDest ( $End[3230] )
   F4:  			EndIf
   FC:  			Call  LoadBattleDmaData ( 00000016 )
  10C:  		Else
  114:  			If  *Var0  ==  00000001 
  124:  				Call  OverrideBattleDmaDest ( $End[6230] )
  134:  			Else
  13C:  				Call  OverrideBattleDmaDest ( $End[3230] )
  14C:  			EndIf
  154:  			Call  LoadBattleDmaData ( 00000015 )
  164:  		EndIf
  16C:  		ExecWait  $Script_802256E0_17 
  178:  		Wait  29`
  184:  	Else
  18C:  		Call  GetLastDamage ( .Actor:Self *Var5 )
  1A0:  		If  *Var5  <  00000004 
  1B0:  			If  *Var0  ==  00000001 
  1C0:  				Call  OverrideBattleDmaDest ( $End[6230] )
  1D0:  			Else
  1D8:  				Call  OverrideBattleDmaDest ( $End[3230] )
  1E8:  			EndIf
  1F0:  			Call  LoadBattleDmaData ( 00000014 )
  200:  		Else
  208:  			If  *Var0  ==  00000001 
  218:  				Call  OverrideBattleDmaDest ( $End[6230] )
  228:  			Else
  230:  				Call  OverrideBattleDmaDest ( $End[3230] )
  240:  			EndIf
  248:  			Call  LoadBattleDmaData ( 00000013 )
  258:  		EndIf
  260:  		ExecWait  $Script_802256E0_17 
  26C:  		Wait  29`
  278:  	EndIf
  280:  Else
  288:  	If  *VarE  &  0000000C 
  298:  		Call  GetActorVar   ( .Actor:Self 00000005 *Var3 )
  2B0:  		If  *Var3  ==  00000002 
  2C0:  			Call  GetLastDamage ( .Actor:Self *Var5 )
  2D4:  			If  *Var5  <  00000004 
  2E4:  				If  *Var0  ==  00000001 
  2F4:  					Call  OverrideBattleDmaDest ( $End[6230] )
  304:  				Else
  30C:  					Call  OverrideBattleDmaDest ( $End[3230] )
  31C:  				EndIf
  324:  				Call  LoadBattleDmaData ( 00000014 )
  334:  			Else
  33C:  				If  *Var0  ==  00000001 
  34C:  					Call  OverrideBattleDmaDest ( $End[6230] )
  35C:  				Else
  364:  					Call  OverrideBattleDmaDest ( $End[3230] )
  374:  				EndIf
  37C:  				Call  LoadBattleDmaData ( 00000013 )
  38C:  			EndIf
  394:  			ExecWait  $Script_802256E0_17 
  3A0:  			Wait  29`
  3AC:  		Else
  3B4:  			If  *Var0  ==  00000001 
  3C4:  				Call  OverrideBattleDmaDest ( $End[6230] )
  3D4:  			Else
  3DC:  				Call  OverrideBattleDmaDest ( $End[3230] )
  3EC:  			EndIf
  3F4:  			Call  LoadBattleDmaData ( 00000015 )
  404:  			ExecWait  $Script_802256E0_17 
  410:  			Call  SetActorVar       ( .Actor:Self 0000000B 00000002 )
  428:  			Call  GetActorVar       ( .Actor:Self 00000006 *Var0 )
  440:  			If  *Var0  !=  00000000 
  450:  				Call  RemoveEffect  ( *Var0 )
  460:  				Call  SetActorVar   ( .Actor:Self 00000006 00000000 )
  478:  				Call  GetActorPos   ( .Actor:Self *Var0 *Var1 *Var2 )
  494:  				Call  PlayEffect    ( ~FX:ColdBreath:PuffUp *Var0 *Var1 *Var2 *Fixed[2.0] 0000002D 00000000 00000000 00000000 00000000 00000000 00000000 00000000 )
  4D8:  			EndIf
  4E0:  			Call  SetIdleAnimations ( .Actor:Self 00000001 $IdleAnimations_802250E8_17 )
  4F8:  			Call  SetDefenseTable   ( .Actor:Self 00000001 $DefenseTable_80225154_17 )
  510:  			Call  SetDefenseTable   ( .Actor:Self 00000002 $DefenseTable_80225154_17 )
  528:  			Call  SetActorVar       ( .Actor:Self 00000007 007B000F )
  540:  			Call  SetActorVar       ( .Actor:Self 00000008 007B0009 )
  558:  			Call  SetAnimation      ( .Actor:Self 00000001 007B000F )
  570:  			Call  SetPartEventBits  ( .Actor:Self 00000001 00000002 .False )
  58C:  			Call  SetPartEventBits  ( .Actor:Self 00000002 00000002 .False )
  5A8:  			Wait  29`
  5B4:  			Call  PlaySoundAtActor  ( .Actor:Self 000003C7 )
  5C8:  			Call  GetActorVar       ( .Actor:Self 00000000 *Var0 )
  5E0:  			If  *Var0  ==  00000001 
  5F0:  				Call  OverrideBattleDmaDest ( $End[6230] )
  600:  			Else
  608:  				Call  OverrideBattleDmaDest ( $End[3230] )
  618:  			EndIf
  620:  			Call  LoadBattleDmaData ( 0000001B )
  630:  			ExecWait  $Script_802256E0_17 
  63C:  			Wait  14`
  648:  			Call  SetActorVar       ( .Actor:Self 00000005 00000002 )
  660:  		EndIf
  668:  	Else
  670:  		Call  GetActorVar   ( .Actor:Self 00000005 *Var3 )
  688:  		If  *Var3  ==  00000002 
  698:  			Call  GetLastDamage ( .Actor:Self *Var5 )
  6AC:  			If  *Var5  ==  00000000 
  6BC:  				Return
  6C4:  			EndIf
  6CC:  			Call  GetLastDamage ( .Actor:Self *Var5 )
  6E0:  			If  *Var5  <  00000004 
  6F0:  				If  *Var0  ==  00000001 
  700:  					Call  OverrideBattleDmaDest ( $End[6230] )
  710:  				Else
  718:  					Call  OverrideBattleDmaDest ( $End[3230] )
  728:  				EndIf
  730:  				Call  LoadBattleDmaData ( 00000014 )
  740:  			Else
  748:  				If  *Var0  ==  00000001 
  758:  					Call  OverrideBattleDmaDest ( $End[6230] )
  768:  				Else
  770:  					Call  OverrideBattleDmaDest ( $End[3230] )
  780:  				EndIf
  788:  				Call  LoadBattleDmaData ( 00000013 )
  798:  			EndIf
  7A0:  			ExecWait  $Script_802256E0_17 
  7AC:  			Wait  29`
  7B8:  		Else
  7C0:  			Call  GetLastDamage ( .Actor:Self *Var5 )
  7D4:  			If  *Var5  <  00000004 
  7E4:  				If  *Var0  ==  00000001 
  7F4:  					Call  OverrideBattleDmaDest ( $End[6230] )
  804:  				Else
  80C:  					Call  OverrideBattleDmaDest ( $End[3230] )
  81C:  				EndIf
  824:  				Call  LoadBattleDmaData ( 00000016 )
  834:  			Else
  83C:  				If  *Var0  ==  00000001 
  84C:  					Call  OverrideBattleDmaDest ( $End[6230] )
  85C:  				Else
  864:  					Call  OverrideBattleDmaDest ( $End[3230] )
  874:  				EndIf
  87C:  				Call  LoadBattleDmaData ( 00000015 )
  88C:  			EndIf
  894:  			ExecWait  $Script_802256E0_17 
  8A0:  			Call  GetActorPos   ( .Actor:Self *Var1 *Var2 *Var3 )
  8BC:  			Sub   *Var2  00000019 
  8CC:  			Add   *Var3  00000002 
  8DC:  			Call  PlayEffect    ( ~FX:EmitterVolume:Embers *Var1 *Var2 *Var3 00000028 00000032 *Fixed[1.2] 00000018 0000002A *Fixed[0.8] *Fixed[0.6] 00000000 00000000 )
  920:  			Wait  29`
  92C:  		EndIf
  934:  	EndIf
  93C:  EndIf
  944:  Call  GetActorVar   ( .Actor:Enemy0 00000001 *VarF )
  95C:  If  *VarF  ==  00000000 
  96C:  	ExecWait  $Script_8022630C_17 
  978:  EndIf
  980:  Return
  988:  End
}

#new:Script $Script_ShootBombs_17 {
    0:  Call  UseIdleAnimation  ( .Actor:Self .False )
   14:  Thread
   1C:  	Wait  8`
   28:  	Call  GetActorPos   ( .Actor:Self *Var0 *Var1 *Var2 )
   44:  	Sub   *Var1  00000019 
   54:  	Call  UseBattleCamPreset    ( 00000013 )
   64:  	Call  SetBattleCamTarget    ( *Var0 *Var1 *Var2 )
   7C:  	Call  SetBattleCamZoom      (  350` )
   8C:  	Call  SetBattleCamOffsetZ   (  30` )
   9C:  	Call  MoveBattleCamOver     (  30` )
   AC:  	Wait  45`
   B8:  	Call  UseBattleCamPreset    ( 00000002 )
   C8:  	Call  MoveBattleCamOver     (  20` )
   D8:  EndThread
   E0:  Call  GetActorVar   ( .Actor:Self 00000000 *Var0 )
   F8:  If  *Var0  ==  00000001 
  108:  	Call  OverrideBattleDmaDest ( $End[6230] )
  118:  Else
  120:  	Call  OverrideBattleDmaDest ( $End[3230] )
  130:  EndIf
  138:  Call  LoadBattleDmaData ( 00000012 )
  148:  ExecWait  $Script_802256E0_17 
  154:  Thread
  15C:  	Wait  20`
  168:  	Call  SetAnimation  ( .Actor:Self 00000001 007B0005 )
  180:  	Wait  39`
  18C:  	Call  SetAnimation  ( .Actor:Self 00000001 007B0006 )
  1A4:  	Wait  5`
  1B0:  	Call  SetAnimation  ( .Actor:Self 00000001 007B0003 )
  1C8:  	If  *Var0  ==  00000001 
  1D8:  		Call  OverrideBattleDmaDest ( $End[6230] )
  1E8:  	Else
  1F0:  		Call  OverrideBattleDmaDest ( $End[3230] )
  200:  	EndIf
  208:  	Call  LoadBattleDmaData ( 0000001F )
  218:  	ExecWait  $Script_802256E0_17 
  224:  EndThread
  22C:  Wait  56`
  238:  Call  SummonEnemy       ( $SpecialFormation_80226B3C_17 00000000 )
  24C:  Set   *Var5  *Var0 
  25C:  Call  GetPartOffset     ( .Actor:Self 00000001 *Var0 *Var1 *Var2 )
  27C:  Sub   *Var0  0000000F 
  28C:  Sub   *Var1  0000000F 
  29C:  Call  SetActorPos       ( *Var5 *Var0 *Var1 *Var2 )
  2B8:  Sub   *Var0  0000001E 
  2C8:  Sub   *Var1  0000000F 
  2D8:  Call  SetAnimation      ( *Var5 00000001 007A0005 )
  2F0:  Call  SetGoalPos        ( *Var5 *Var0 *Var1 *Var2 )
  30C:  Call  SetActorSpeed     ( *Var5 *Fixed[6.0] )
  320:  Call  SetActorJumpGravity   ( *Var5 *Fixed[1.8] )
  334:  Call  PlaySoundAtActor  ( *Var5 000003CB )
  348:  Call  SetTargetActor    ( *Var5 .Actor:Player )
  35C:  Call  SetGoalToTarget   ( *Var5 )
  36C:  Call  EnemyTestTarget   ( *Var5 *Var9 ~Flags:DamageType:0 00000000 00000001 00000010 )
  390:  Switch  *Var9 
  39C:  	CaseOR  ==  .HitResult:Miss % 6
  3A8:  	CaseOR  ==  .HitResult:Lucky % 5
  3B4:  		Call  SetGoalToTarget       ( *Var5 )
  3C4:  		Call  GetGoalPos    ( *Var5 *Var0 *Var1 *Var2 )
  3E0:  		Set   *Var0  FFFFFF4C 
  3F0:  		Call  SetGoalPos    ( *Var5 *Var0 *Var1 *Var2 )
  40C:  		Call  SetActorSpeed ( *Var5 *Fixed[13.0] )
  420:  		Call  SetActorJumpGravity   ( *Var5 *Fixed[1.8] )
  434:  		Call  FlyToGoal     ( *Var5  0`  0` .Easing:Linear )
  450:  		If  *Var9  ==  .HitResult:Lucky % 5
  460:  			Call  EnemyTestTarget   ( *Var5 *Var0 ~Flags:DamageType:TriggerLucky 00000000 00000000 00000000 )
  484:  		EndIf
  48C:  		Call  UseBattleCamPreset    ( 00000002 )
  49C:  		Call  RemoveActor   ( *Var5 )
  4AC:  		Return
  4B4:  	EndCaseGroup
  4BC:  EndSwitch
  4C4:  Call  SetTargetActor    ( *Var5 .Actor:Player )
  4D8:  Call  SetGoalToTarget   ( *Var5 )
  4E8:  Call  SetActorSpeed     ( *Var5 *Fixed[13.0] )
  4FC:  Call  SetActorJumpGravity   ( *Var5 *Fixed[1.8] )
  510:  Call  FlyToGoal ( *Var5  0`  0` .Easing:Linear )
  52C:  Wait  2`
  538:  Call  SetGoalToTarget   ( *Var5 )
  548:  Call  SetTargetActor    ( .Actor:Self .Actor:Player )
  55C:  Call  SetGoalToTarget   ( .Actor:Self )
  56C:  Call  EnemyDamageTarget ( .Actor:Self *Var9 ~Flags:DamageType:Fire 0000FFFF 00000000 00000004 00000020 )
  594:  Switch  *Var9 
  5A0:  	CaseOR  ==  .HitResult:Hit % 0
  5AC:  	CaseOR  ==  .HitResult:QuakeImmune % 2
  5B8:  	CaseOR  ==  0000000A % A
  5C4:  		Call  SetPartFlagBits   ( *Var5 00000001 00000001 .True )
  5E0:  		Call  SetGoalToTarget   ( *Var5 )
  5F0:  		Call  GetGoalPos        ( *Var5 *Var0 *Var1 *Var2 )
  60C:  		Set   *Var1  0000000A 
  61C:  		Add   *Var2  00000002 
  62C:  		Call  PlayEffect        ( ~FX:Fire:TinyBlue *Var0 *Var1 *Var2 *Fixed[0.3] *VarA 00000000 00000000 00000000 00000000 00000000 00000000 00000000 )
  670:  		Call  MakeLerp  ( 00000078 0000000A 00000014 .Easing:QuadraticIn )
  68C:  		Loop
  698:  			Call  UpdateLerp ( )
  6A4:  			MulF  *Var0  *Fixed[0.01] 
  6B4:  			Call  $Function_80218DF0_17 ( *VarA *Var0 )
  6C8:  			Wait  1`
  6D4:  			If  *Var1  ==  00000000 
  6E4:  				BreakLoop
  6EC:  			EndIf
  6F4:  		EndLoop
  6FC:  		Wait  1`
  708:  		Call  RemoveEffect  ( *VarA )
  718:  		Call  RemoveActor   ( *Var5 )
  728:  		Wait  15`
  734:  		If  *Var9  ==  0000000A % A
  744:  			Return
  74C:  		EndIf
  754:  		Call  UseBattleCamPreset    ( 00000002 )
  764:  	EndCaseGroup
  76C:  EndSwitch
  774:  Call  EnableIdleScript  ( .Actor:Self 00000001 )
  788:  Call  UseIdleAnimation  ( .Actor:Self .True )
  79C:  Return
  7A4:  End
}

#new:IdleAnimations $IdleAnimations_80228720_17 {
.Status:Normal    007A0001
.Status:Stone     007A0000
.Status:Sleep     007A0000
.Status:Poison    007A0001
.Status:Stop      007A0000
.Status:Static    007A0000
.Status:Paralyze  007A0000
.Status:Paralyze  007A0000
.Status:Dizzy     007A0001
.Status:Dizzy     007A0001
.Status:End
}

#new:DefenseTable $DefenseTable_80228774_17 {
.Element:Normal 00000000
.Element:Water  FFFFFFFE
.Element:Ice    FFFFFFFE
.Element:Fire   00000063
.Element:Blast  00000000
.Element:End
}

#new:StatusTable $StatusTable_802287A0_17 {
.Status:Normal      0`
.Status:Default     0`
.Status:Sleep       0`
.Status:Poison      0`
.Status:Frozen      0`
.Status:Dizzy       0`
.Status:Fear        0`
.Status:Static      0`
.Status:Paralyze    0`
.Status:Shrink      0`
.Status:Stop        0`
.Status:DefaultTurnMod    0`
.Status:SleepTurnMod      0`
.Status:PoisonTurnMod     0`
.Status:FrozenTurnMod     0`
.Status:DizzyTurnMod      0`
.Status:FearTurnMod       0`
.Status:StaticTurnMod     0`
.Status:ParalyzeTurnMod   0`
.Status:ShrinkTurnMod     0`
.Status:StopTurnMod       0`
.Status:End
}

#new:PartsTable $PartsTable_8022884C_17 {
00800000 01000000 001800FF $IdleAnimations_80228720_17 $DefenseTable_80228774_17 00000002 00000002 FEEA0000 00000000 
}

#new:Actor $PetitPiranhaBomb_17 {
% stats
[Index]        B8b 
[Level]         0`b 
[MaxHP]         1`b 
[Coins]         0`b 
[Flags]       00000200 
[StatusTable] $StatusTable_802287A0_17 
% ai
[PartsCount]    1`s 
[PartsTable]  $PartsTable_8022884C_17 
[Script]      $Script_Init_80228898_17 
% move effectiveness
[Escape]        0`b 
[Item]          0`b 
[AirLift]       0`b 
[Hurricane]     0`b % Bow's "Spook" as well
[UpAndAway]     0`b 
[PowerBounce]  80`b 
[SpinSmash]     0`b % weight (0-4)
% ui positions
[Size]         30`b  30`b % width height
[HealthBar]     0`b   0`b % dx dy
[StatusTurn]  -10`b  20`b % dx dy
[StatusIcon]   10`b  20`b % dx dy
}

#new:Script $Script_Init_80228898_17 {
    0:  Call  BindTakeTurn      ( .Actor:Self $Script_TakeTurn_8022894C_17 )
   14:  Call  BindIdle  ( .Actor:Self $Script_Idle_802288E4_17 )
   28:  Call  BindHandleEvent   ( .Actor:Self $Script_HandleEvent_80228918_17 )
   3C:  Return
   44:  End
}

#new:Script $Script_Idle_802288E4_17 {
    0:  Label  0
    C:  Wait  1`
   18:  Goto  0
   24:  Return
   2C:  End
}

#new:Script $Script_HandleEvent_80228918_17 {
    0:  Label  0
    C:  Wait  1`
   18:  Goto  0
   24:  Return
   2C:  End
}

#new:Script $Script_TakeTurn_8022894C_17 {
    0:  Label  0
    C:  Wait  1`
   18:  Goto  0
   24:  Return
   2C:  End
}

