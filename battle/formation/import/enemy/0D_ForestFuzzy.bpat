% Automatically dumped from section 0D

#new:Actor $0D_ForestFuzzy {
% stats
[Index]        1Ab 
[Level]        11`b 
[MaxHP]         6`b 
[Coins]         1`b 
[Flags]       00000000 
[StatusTable] $StatusTable_802183CC_0D 
% ai
[PartsCount]    1`s 
[PartsTable]  $PartsTable_80218478_0D 
[Script]      $Script_Init_80218510_0D 
% move effectiveness
[Escape]       40`b 
[Item]         85`b 
[AirLift]      90`b 
[Hurricane]    90`b % Bow's "Spook" as well
[UpAndAway]    95`b 
[PowerBounce] 100`b 
[SpinSmash]     0`b % weight (0-4)
% ui positions
[Size]         33`b  28`b % width height
[HealthBar]     0`b   0`b % dx dy
[StatusTurn]  -10`b  20`b % dx dy
[StatusIcon]   10`b  20`b % dx dy
}

#new:Function $Function_80218000_0D {
    0:  ADDIU     SP, SP, FFD8
    4:  SW        S1, 14 (SP)
    8:  COPY      S1, A0
    C:  SW        RA, 20 (SP)
   10:  SW        S3, 1C (SP)
   14:  SW        S2, 18 (SP)
   18:  SW        S0, 10 (SP)
   1C:  LW        S0, C (S1)
   20:  LW        A1, 0 (S0)
   24:  JAL       ~Func:get_variable
   28:  ADDIU     S0, S0, 4
   2C:  LW        A1, 0 (S0)
   30:  ADDIU     S0, S0, 4
   34:  COPY      A0, S1
   38:  JAL       ~Func:get_variable
   3C:  COPY      S3, V0
   40:  LW        A1, 0 (S0)
   44:  ADDIU     S0, S0, 4
   48:  COPY      A0, S1
   4C:  JAL       ~Func:get_variable
   50:  COPY      S2, V0
   54:  COPY      A0, S1
   58:  LW        A1, 0 (S0)
   5C:  JAL       ~Func:get_variable
   60:  COPY      S0, V0
   64:  MTC1      S3, F12
   68:  NOP
   6C:  CVT.S.W   F12, F12
   70:  MTC1      S2, F14
   74:  NOP
   78:  CVT.S.W   F14, F14
   7C:  MTC1      S0, F0
   80:  NOP
   84:  CVT.S.W   F0, F0
   88:  MFC1      A2, F0
   8C:  JAL       802D7460
   90:  COPY      A3, V0
   94:  LW        RA, 20 (SP)
   98:  LW        S3, 1C (SP)
   9C:  LW        S2, 18 (SP)
   A0:  LW        S1, 14 (SP)
   A4:  LW        S0, 10 (SP)
   A8:  LI        V0, 2
   AC:  JR        RA
   B0:  ADDIU     SP, SP, 28
}

#new:Function $Function_802180B4_0D {
    0:  ADDIU     SP, SP, FFD8
    4:  SW        S1, 14 (SP)
    8:  COPY      S1, A0
    C:  SW        RA, 20 (SP)
   10:  SW        S3, 1C (SP)
   14:  SW        S2, 18 (SP)
   18:  SW        S0, 10 (SP)
   1C:  LW        S0, C (S1)
   20:  LW        A1, 0 (S0)
   24:  JAL       ~Func:get_variable
   28:  ADDIU     S0, S0, 4
   2C:  LW        A1, 0 (S0)
   30:  ADDIU     S0, S0, 4
   34:  COPY      A0, S1
   38:  JAL       ~Func:get_variable
   3C:  COPY      S3, V0
   40:  LW        A1, 0 (S0)
   44:  ADDIU     S0, S0, 4
   48:  COPY      A0, S1
   4C:  JAL       ~Func:get_variable
   50:  COPY      S2, V0
   54:  COPY      A0, S1
   58:  LW        A1, 0 (S0)
   5C:  JAL       ~Func:get_variable
   60:  COPY      S0, V0
   64:  MTC1      S3, F12
   68:  NOP
   6C:  CVT.S.W   F12, F12
   70:  MTC1      S2, F14
   74:  NOP
   78:  CVT.S.W   F14, F14
   7C:  MTC1      S0, F0
   80:  NOP
   84:  CVT.S.W   F0, F0
   88:  MFC1      A2, F0
   8C:  JAL       802D74C0
   90:  COPY      A3, V0
   94:  LW        RA, 20 (SP)
   98:  LW        S3, 1C (SP)
   9C:  LW        S2, 18 (SP)
   A0:  LW        S1, 14 (SP)
   A4:  LW        S0, 10 (SP)
   A8:  LI        V0, 2
   AC:  JR        RA
   B0:  ADDIU     SP, SP, 28
}

#new:DefenseTable $DefenseTable_802183C0_0D {
.Element:Normal 00000000
.Element:End
}

#new:StatusTable $StatusTable_802183CC_0D {
.Status:Normal      0`
.Status:Default     0`
.Status:Sleep      95`
.Status:Poison     90`
.Status:Frozen      0`
.Status:Dizzy      90`
.Status:Fear        0`
.Status:Static     70`
.Status:Paralyze   75`
.Status:Shrink     75`
.Status:Stop       90`
.Status:DefaultTurnMod    0`
.Status:SleepTurnMod     -1`
.Status:PoisonTurnMod     0`
.Status:FrozenTurnMod     0`
.Status:DizzyTurnMod      0`
.Status:FearTurnMod       0`
.Status:StaticTurnMod     0`
.Status:ParalyzeTurnMod   0`
.Status:ShrinkTurnMod     0`
.Status:StopTurnMod       0`
.Status:End
}

#new:PartsTable $PartsTable_80218478_0D {
00800000 01000000 001400FF $IdleAnimations_802184C4_0D $DefenseTable_802183C0_0D 00000000 00000000 00F60000 00000000 
}

#new:Actor $ForestFuzzy_0D {
% stats
[Index]        1Ab 
[Level]        11`b 
[MaxHP]         6`b 
[Coins]         1`b 
[Flags]       00000000 
[StatusTable] $StatusTable_802183CC_0D 
% ai
[PartsCount]    1`s 
[PartsTable]  $PartsTable_80218478_0D 
[Script]      $Script_Init_80218510_0D 
% move effectiveness
[Escape]       40`b 
[Item]         85`b 
[AirLift]      90`b 
[Hurricane]    90`b % Bow's "Spook" as well
[UpAndAway]    95`b 
[PowerBounce] 100`b 
[SpinSmash]     0`b % weight (0-4)
% ui positions
[Size]         33`b  28`b % width height
[HealthBar]     0`b   0`b % dx dy
[StatusTurn]  -10`b  20`b % dx dy
[StatusIcon]   10`b  20`b % dx dy
}

#new:IdleAnimations $IdleAnimations_802184C4_0D {
.Status:Normal    002B0101
.Status:Stone     002B0100
.Status:Sleep     002B010E
.Status:Poison    002B0101
.Status:Stop      002B0100
.Status:Static    002B0101
.Status:Paralyze  002B0100
.Status:Dizzy     002B010F
.Status:Fear      002B010F
.Status:End
}

#new:Script $Script_Init_80218510_0D {
    0:  Call  BindTakeTurn  ( .Actor:Self $Script_TakeTurn_8021A61C_0D )
   14:  Call  BindIdle      ( .Actor:Self $Script_Idle_80218574_0D )
   28:  Call  BindHandleEvent   ( .Actor:Self $Script_HandleEvent_80218584_0D )
   3C:  Call  SetActorVar   ( .Actor:Self 00000000 00000000 )
   54:  Return
   5C:  End
}

#new:Script $Script_Idle_80218574_0D {
    0:  Return
    8:  End
}

#new:Script $Script_HandleEvent_80218584_0D {
    0:  Call  UseIdleAnimation  ( .Actor:Self .False )
   14:  Call  EnableIdleScript  ( .Actor:Self 00000000 )
   28:  Call  SetActorScale     ( .Actor:Self *Fixed[1.0] *Fixed[1.0] *Fixed[1.0] )
   44:  Call  SetActorDispOffset    ( .Actor:Self 00000000 00000000 00000000 )
   60:  Call  GetLastEvent      ( .Actor:Self *Var0 )
   74:  Switch  *Var0 
   80:  	CaseOR  ==  .Event:HitCombo % 9
   8C:  	CaseOR  ==  .Event:Hit % A
   98:  		Call  GetLastElement    ( *Var0 )
   A8:  		If  *Var0  &  00000020 
   B8:  			SetConst  *Var0  00000001 
   C8:  			SetConst  *Var1  002B0113 
   D8:  		Else
   E0:  			SetConst  *Var0  00000001 
   F0:  			SetConst  *Var1  002B0108 
  100:  		EndIf
  108:  		ExecWait  DoNormalHit 
  114:  	EndCaseGroup
  11C:  	Case  ==  .Event:BurnHit % E
  128:  		SetConst  *Var0  00000001 
  138:  		SetConst  *Var1  002B0110 
  148:  		SetConst  *Var2  002B0112 
  158:  		ExecWait  DoBurnHit 
  164:  	Case  ==  .Event:BurnDeath % 24
  170:  		SetConst  *Var0  00000001 
  180:  		SetConst  *Var1  002B0110 
  190:  		SetConst  *Var2  002B0112 
  1A0:  		ExecWait  DoBurnHit 
  1AC:  		SetConst  *Var0  00000001 
  1BC:  		SetConst  *Var1  002B0112 
  1CC:  		ExecWait  DoDeath 
  1D8:  		Return
  1E0:  	Case  ==  .Event:SpinSmashHit % B
  1EC:  		SetConst  *Var0  00000001 
  1FC:  		SetConst  *Var1  002B0108 
  20C:  		ExecWait  DoSpinSmashHit 
  218:  	Case  ==  .Event:SpinSmashDeath % 21
  224:  		SetConst  *Var0  00000001 
  234:  		SetConst  *Var1  002B0108 
  244:  		ExecWait  DoSpinSmashHit 
  250:  		SetConst  *Var0  00000001 
  260:  		SetConst  *Var1  002B0108 
  270:  		ExecWait  DoDeath 
  27C:  		Return
  284:  	Case  ==  .Event:ShockHit % 2F
  290:  		Call  80269470 ( )
  29C:  		SetConst  *Var0  00000001 
  2AC:  		SetConst  *Var1  002B0113 
  2BC:  		ExecWait  DoShockHit 
  2C8:  		SetConst  *Var0  00000001 
  2D8:  		SetConst  *Var1  002B0113 
  2E8:  		ExecWait  DoJumpBack 
  2F4:  		Call  JumpToGoal    ( .Actor:Self  5` .False .True .False )
  314:  		SetConst  *Var0  00000001 
  324:  		SetConst  *Var1  002B0103 
  334:  		ExecWait  8029C0A4 
  340:  		Call  SetActorJumpGravity   ( .Actor:Self *Fixed[1.6] )
  354:  		Call  JumpToGoal    ( .Actor:Self  5` .False .True .False )
  374:  	Case  ==  .Event:ShockDeath % 26
  380:  		Call  80269470 ( )
  38C:  		SetConst  *Var0  00000001 
  39C:  		SetConst  *Var1  002B0113 
  3AC:  		ExecWait  DoShockHit 
  3B8:  		SetConst  *Var0  00000001 
  3C8:  		SetConst  *Var1  002B0113 
  3D8:  		ExecWait  DoDeath 
  3E4:  		Return
  3EC:  	CaseOR  ==  00000017 % 17
  3F8:  	CaseOR  ==  .Event:Immune % 19
  404:  		SetConst  *Var0  00000001 
  414:  		SetConst  *Var1  002B0101 
  424:  		ExecWait  DoImmune 
  430:  	EndCaseGroup
  438:  	Case  ==  .Event:Death % 20
  444:  		Call  GetLastElement    ( *Var0 )
  454:  		If  *Var0  &  00000020 
  464:  			SetConst  *Var0  00000001 
  474:  			SetConst  *Var1  002B0113 
  484:  			ExecWait  DoNormalHit 
  490:  			Wait  10`
  49C:  			SetConst  *Var0  00000001 
  4AC:  			SetConst  *Var1  002B0113 
  4BC:  			ExecWait  DoDeath 
  4C8:  		Else
  4D0:  			SetConst  *Var0  00000001 
  4E0:  			SetConst  *Var1  002B0108 
  4F0:  			ExecWait  DoNormalHit 
  4FC:  			Wait  10`
  508:  			SetConst  *Var0  00000001 
  518:  			SetConst  *Var1  002B0108 
  528:  			ExecWait  DoDeath 
  534:  		EndIf
  53C:  		Return
  544:  	Case  ==  .Event:RecoverStatus % 31
  550:  		SetConst  *Var0  00000001 
  560:  		SetConst  *Var1  002B0101 
  570:  		ExecWait  DoRecover 
  57C:  	Case  ==  .Event:ScareAway % 39
  588:  		SetConst  *Var0  00000001 
  598:  		SetConst  *Var1  002B0103 
  5A8:  		SetConst  *Var2  002B0109 
  5B8:  		ExecWait  DoScareAway 
  5C4:  		Return
  5CC:  	Case  ==  .Event:BeginAirLift % 3A
  5D8:  		SetConst  *Var0  00000001 
  5E8:  		SetConst  *Var1  002B0103 
  5F8:  		ExecWait  DoAirLift 
  604:  	Case  ==  .Event:BlowAway % 16
  610:  		SetConst  *Var0  00000001 
  620:  		SetConst  *Var1  002B0103 
  630:  		ExecWait  DoBlowAway 
  63C:  		Return
  644:  	Case  ==  .Event:AirLiftFailed % 1F
  650:  		SetConst  *Var0  00000001 
  660:  		SetConst  *Var1  002B0101 
  670:  		ExecWait  DoImmune 
  67C:  	Default
  684:  EndSwitch
  68C:  Call  EnableIdleScript  ( .Actor:Self 00000001 )
  6A0:  Call  UseIdleAnimation  ( .Actor:Self .True )
  6B4:  Return
  6BC:  End
}

#new:Script $Script_80218C48_0D {
    0:  Call  UseIdleAnimation      ( .Actor:Self .False )
   14:  Call  EnableIdleScript      ( .Actor:Self 00000000 )
   28:  Call  UseBattleCamPreset    ( 00000013 )
   38:  Call  GetActorPos   ( .Actor:Self *Var0 *Var1 *Var2 )
   54:  Call  SetBattleCamTarget    ( *Var0 *Var1 *Var2 )
   6C:  Call  SetBattleCamZoom      (  330` )
   7C:  Call  SetBattleCamOffsetZ   (  30` )
   8C:  Call  MoveBattleCamOver     (  20` )
   9C:  Wait  20`
   A8:  Call  SetActorDispOffset    ( .Actor:Self 00000000 00000000 00000000 )
   C4:  Call  UseBattleCamPreset    ( 00000001 )
   D4:  Thread
   DC:  	Wait  30`
   E8:  	Call  PlaySoundAtActor  ( .Actor:Self 0000206E )
   FC:  	Wait  30`
  108:  	Loop  00000004 
  114:  		Call  PlaySoundAtActor  ( .Actor:Self 0000206F )
  128:  		Wait  11`
  134:  	EndLoop
  13C:  	Call  PlaySoundAtActor  ( .Actor:Self 00002070 )
  150:  EndThread
  158:  Call  SetAnimation  ( .Actor:Self 00000001 002B010D )
  170:  Wait  130`
  17C:  Call  SetAnimation  ( .Actor:Self 00000001 002B0102 )
  194:  Call  SummonEnemy   ( $SpecialFormation_8021A800_0D 00000000 )
  1A8:  Call  GetActorPos   ( .Actor:Self *Var1 *Var2 *Var3 )
  1C4:  Call  SetActorPos   ( *Var0 *Var1 *Var2 *Var3 )
  1E0:  Call  SetGoalToIndex        ( *Var0 *VarA )
  1F4:  Call  UseBattleCamPreset    ( 00000002 )
  204:  Call  MoveBattleCamOver     (  20` )
  214:  Thread
  21C:  	Call  SetAnimation  ( .Actor:Self 00000001 002B0102 )
  234:  	Call  SetActorJumpGravity   ( .Actor:Self *Fixed[1.4] )
  248:  	Call  GetActorPos   ( .Actor:Self *Var1 *Var2 *Var3 )
  264:  	Call  SetGoalPos    ( .Actor:Self *Var1 *Var2 *Var3 )
  280:  	Call  JumpToGoal    ( .Actor:Self  14` .False .True .False )
  2A0:  EndThread
  2A8:  Wait  1`
  2B4:  Call  SetAnimation  ( *Var0 00000001 002B0102 )
  2CC:  Call  SetActorJumpGravity   ( *Var0 *Fixed[1.4] )
  2E0:  Call  JumpToGoal    ( *Var0  14` .False .True .False )
  300:  Call  GetActorPos   ( *Var0 *Var1 *Var2 *Var3 )
  31C:  Call  ForceHomePos  ( *Var0 *Var1 *Var2 *Var3 )
  338:  Call  HPBarToHome   ( *Var0 )
  348:  Call  SetAnimation  ( *Var0 00000001 002B0101 )
  360:  Call  GetActorVar   ( .Actor:Self 00000000 *Var1 )
  378:  Switch  *Var1 
  384:  	Case  ==  00000000 
  390:  		Call  SetActorVar   ( *Var0 00000000 00000001 )
  3A8:  	Case  ==  00000001 
  3B4:  		Call  SetActorVar   ( *Var0 00000000 00000002 )
  3CC:  EndSwitch
  3D4:  Call  EnableIdleScript  ( .Actor:Self 00000001 )
  3E8:  Call  UseIdleAnimation  ( .Actor:Self .True )
  3FC:  Return
  404:  End
}

#new:Script $Script_80219054_0D {
    0:  Call  UseIdleAnimation  ( .Actor:Self .False )
   14:  Call  EnableIdleScript  ( .Actor:Self 00000000 )
   28:  Call  UseBattleCamPreset    ( 0000003F )
   38:  Call  BattleCamTargetActor  ( .Actor:Self )
   48:  Call  8024ECF8  ( FFFFFFFF 00000001 00000000 )
   60:  Call  GetBattlePhase    ( *Var0 )
   70:  If  *Var0  ==  00000001 
   80:  	Call  SetGoalToTarget   ( .Actor:Self )
   90:  	Call  GetGoalPos        ( .Actor:Self *Var0 *Var1 *Var2 )
   AC:  	Add   *Var0  00000032 
   BC:  	Set   *Var1  00000000 
   CC:  	Call  SetActorPos       ( .Actor:Self *Var0 *Var1 *Var2 )
   E8:  	Goto  64
   F4:  EndIf
   FC:  Call  SetTargetActor    ( .Actor:Self .Actor:Player )
  110:  Call  SetAnimation      ( .Actor:Self 00000001 002B0103 )
  128:  Call  SetGoalToTarget   ( .Actor:Self )
  138:  Call  GetGoalPos        ( .Actor:Self *Var0 *Var1 *Var2 )
  154:  Add   *Var0  00000032 
  164:  Set   *Var1  00000000 
  174:  Call  SetActorSpeed     ( .Actor:Self *Fixed[6.0] )
  188:  Call  SetActorJumpGravity   ( .Actor:Self *Fixed[1.8] )
  19C:  ExecWait  8029C12C 
  1A8:  Call  SetAnimation      ( .Actor:Self 00000001 002B0101 )
  1C0:  Label  64
  1CC:  Call  SetActorDispOffset    ( .Actor:Self 00000000 0000000A 00000000 )
  1E8:  Call  SetAnimation      ( .Actor:Self 00000001 002B0104 )
  200:  Call  SetActorDispOffset    ( .Actor:Self 00000000 00000009 00000000 )
  21C:  Wait  1`
  228:  Call  SetActorDispOffset    ( .Actor:Self 00000000 00000008 00000000 )
  244:  Wait  5`
  250:  Call  EnemyTestTarget   ( .Actor:Self *Var0 ~Flags:DamageType:IgnoreDefense 00000000 00000001 00000010 )
  274:  Switch  *Var0 
  280:  	CaseOR  ==  .HitResult:Miss % 6
  28C:  	CaseOR  ==  .HitResult:Lucky % 5
  298:  		Set   *VarA  *Var0 
  2A8:  		Call  SetGoalToTarget       ( .Actor:Self )
  2B8:  		Call  GetGoalPos    ( .Actor:Self *Var0 *Var1 *Var2 )
  2D4:  		Sub   *Var0  00000005 
  2E4:  		Set   *Var1  00000000 
  2F4:  		Sub   *Var2  00000005 
  304:  		Call  SetActorJumpGravity   ( .Actor:Self *Fixed[3.0] )
  318:  		Call  SetAnimation  ( .Actor:Self 00000001 002B0105 )
  330:  		Call  SetGoalPos    ( .Actor:Self *Var0 *Var1 *Var2 )
  34C:  		Call  JumpToGoal    ( .Actor:Self  11` .False .True .False )
  36C:  		Call  SetActorDispOffset    ( .Actor:Self 00000000 00000000 00000000 )
  388:  		Call  SetAnimation  ( .Actor:Self 00000001 002B0109 )
  3A0:  		Call  GetGoalPos    ( .Actor:Self *Var0 *Var1 *Var2 )
  3BC:  		Sub   *Var0  00000014 
  3CC:  		Call  SetActorJumpGravity   ( .Actor:Self *Fixed[3.0] )
  3E0:  		Call  SetGoalPos    ( .Actor:Self *Var0 *Var1 *Var2 )
  3FC:  		Call  JumpToGoal    ( .Actor:Self  6` .False .True .False )
  41C:  		Call  GetGoalPos    ( .Actor:Self *Var0 *Var1 *Var2 )
  438:  		Sub   *Var0  0000000F 
  448:  		Call  SetActorJumpGravity   ( .Actor:Self *Fixed[3.0] )
  45C:  		Call  SetGoalPos    ( .Actor:Self *Var0 *Var1 *Var2 )
  478:  		Call  JumpToGoal    ( .Actor:Self  5` .False .True .False )
  498:  		Call  GetGoalPos    ( .Actor:Self *Var0 *Var1 *Var2 )
  4B4:  		Wait  4`
  4C0:  		Wait  5`
  4CC:  		If  *VarA  ==  .HitResult:Lucky % 5
  4DC:  			Call  EnemyTestTarget   ( .Actor:Self *Var0 ~Flags:DamageType:TriggerLucky 00000000 00000000 00000000 )
  500:  		EndIf
  508:  		Wait  5`
  514:  		Call  UseBattleCamPreset    ( 00000002 )
  524:  		Call  YieldTurn ( )
  530:  		Call  SetActorYaw       ( .Actor:Self  180` )
  544:  		Call  AddActorDecoration    ( .Actor:Self 00000001 00000000 .Decoration:Sweat )
  560:  		Call  SetAnimation      ( .Actor:Self 00000001 002B0103 )
  578:  		Call  SetGoalToHome     ( .Actor:Self )
  588:  		Call  GetGoalPos        ( .Actor:Self *Var0 *Var1 *Var2 )
  5A4:  		Call  SetActorSpeed     ( .Actor:Self *Fixed[8.0] )
  5B8:  		Call  SetActorJumpGravity   ( .Actor:Self *Fixed[1.8] )
  5CC:  		ExecWait  8029C12C 
  5D8:  		Call  RemoveActorDecoration ( .Actor:Self 00000001 00000000 )
  5F0:  		Call  SetActorYaw       ( .Actor:Self  0` )
  604:  		Call  EnableIdleScript  ( .Actor:Self 00000001 )
  618:  		Call  UseIdleAnimation  ( .Actor:Self .True )
  62C:  		Return
  634:  	EndCaseGroup
  63C:  	Case  ==  .HitResult:HitStatic % 7
  648:  		Call  GetStatusFlags    ( .Actor:Self *Var0 )
  65C:  		If  *Var0  &  ~Flags:StatusFlags:Static % 2000
  66C:  			Set   *Flag[00]  .False 
  67C:  		Else
  684:  			Set   *Flag[00]  .True 
  694:  		EndIf
  69C:  EndSwitch
  6A4:  Call  SetGoalToTarget   ( .Actor:Self )
  6B4:  Call  AddGoalPos        ( .Actor:Self  -3`  -12`  -15` )
  6D0:  Call  SetActorJumpGravity   ( .Actor:Self *Fixed[3.0] )
  6E4:  Call  SetAnimation      ( .Actor:Self 00000001 002B0105 )
  6FC:  Call  JumpToGoal        ( .Actor:Self  8` .False .True .False )
  71C:  If  *Flag[00]  ==  .True 
  72C:  	Call  EnemyDamageTarget ( .Actor:Self *Var0 ~Flags:DamageType:IgnoreDefense 00000000 00000000 00000000 00000020 )
  754:  	Return
  75C:  EndIf
  764:  Wait  10`
  770:  Call  UseIdleAnimation  ( .Actor:Player .False )
  784:  Call  SetAnimation  ( .Actor:Player 00000000 0003000C )
  79C:  Call  PlaySoundAtActor  ( .Actor:Self 000003E0 )
  7B0:  Call  SetAnimation  ( .Actor:Self 00000001 002B0107 )
  7C8:  Wait  21`
  7D4:  Call  SetAnimation  ( .Actor:Self 00000001 002B0100 )
  7EC:  Call  SetActorRotation  ( .Actor:Self 00000000 00000000 0000014A )
  808:  Call  PlaySoundAtActor  ( .Actor:Self 000003E0 )
  81C:  Call  SetActorDispOffset    ( .Actor:Self FFFFFFFD FFFFFFFE 00000000 )
  838:  Call  SetActorScale ( .Actor:Self *Fixed[1.0] *Fixed[1.0] *Fixed[1.0] )
  854:  Wait  1`
  860:  Call  SetActorScale ( .Actor:Self *Fixed[0.9] *Fixed[1.2] *Fixed[1.0] )
  87C:  Wait  1`
  888:  Call  SetActorScale ( .Actor:Self *Fixed[0.8] *Fixed[1.3] *Fixed[1.0] )
  8A4:  Wait  1`
  8B0:  Call  SetActorScale ( .Actor:Self *Fixed[0.7] *Fixed[1.4] *Fixed[1.0] )
  8CC:  Wait  1`
  8D8:  Call  SetActorScale ( .Actor:Self *Fixed[0.7] *Fixed[1.5] *Fixed[1.0] )
  8F4:  Wait  2`
  900:  Call  SetActorScale ( .Actor:Self *Fixed[0.6] *Fixed[1.6] *Fixed[1.0] )
  91C:  Wait  10`
  928:  Wait  2`
  934:  Call  UseIdleAnimation  ( .Actor:Player .True )
  948:  Call  EnemyDamageTarget ( .Actor:Self *VarA ~Flags:DamageType:IgnoreDefense 00000000 00000000 00000001 00000020 )
  970:  Call  SetActorDispOffset    ( .Actor:Self 00000000 00000000 00000000 )
  98C:  Call  SetAnimation  ( .Actor:Self 00000001 002B0101 )
  9A4:  Call  UseBattleCamPreset    ( 00000002 )
  9B4:  Call  GetLastDamage ( .Actor:Player *Var3 )
  9C8:  If  *Var3  !=  00000000 
  9D8:  	Call  PlaySoundAtActor  ( .Actor:Self 0000206D )
  9EC:  	Call  PlaySoundAtActor  ( .Actor:Self 00000214 )
  A00:  	Call  GetActorPos       ( .Actor:Self *Var0 *Var1 *Var2 )
  A1C:  	Add   *Var1  0000000A 
  A2C:  	Call  $Function_80218000_0D ( *Var0 *Var1 *Var2 *Var3 )
  A48:  	Thread
  A50:  		Wait  15`
  A5C:  		Call  PlaySoundAtActor      ( .Actor:Self 0000025C )
  A70:  		Call  $Function_802180B4_0D ( *Var0 *Var1 *Var2 *Var3 )
  A8C:  	EndThread
  A94:  	Add   *Var0  00000014 
  AA4:  	Add   *Var1  00000014 
  AB4:  	Call  PlayEffect    ( ~FX:Recover:HP *Var0 *Var1 *Var2 *Var3 00000000 00000000 00000000 00000000 00000000 00000000 00000000 00000000 )
  AF8:  	Call  GetActorHP    ( .Actor:Self *Var0 )
  B0C:  	Add   *Var0  *Var3 
  B1C:  	Call  SetEnemyHP    ( .Actor:Self *Var0 )
  B30:  EndIf
  B38:  Thread
  B40:  	Call  SetActorScale     ( .Actor:Self *Fixed[1.6] *Fixed[0.6] *Fixed[1.0] )
  B5C:  	Call  SetActorRotationOffset    ( .Actor:Self 00000000 0000000A 00000000 )
  B78:  	Wait  1`
  B84:  	Call  SetActorRotation  ( .Actor:Self 00000000 00000000 0000014A )
  BA0:  	Wait  1`
  BAC:  	Call  SetActorScale     ( .Actor:Self *Fixed[0.7] *Fixed[1.5] *Fixed[1.0] )
  BC8:  	Call  SetActorRotation  ( .Actor:Self 00000000 00000000 0000012C )
  BE4:  	Wait  1`
  BF0:  	Call  SetActorRotation  ( .Actor:Self 00000000 00000000 0000010E )
  C0C:  	Wait  1`
  C18:  	Call  SetActorScale     ( .Actor:Self *Fixed[1.0] *Fixed[0.7] *Fixed[1.0] )
  C34:  	Call  SetActorRotation  ( .Actor:Self 00000000 00000000 000000F0 )
  C50:  	Wait  1`
  C5C:  	Call  SetActorRotation  ( .Actor:Self 00000000 00000000 000000D2 )
  C78:  	Wait  1`
  C84:  	Call  SetActorScale     ( .Actor:Self *Fixed[0.7] *Fixed[1.4] *Fixed[1.0] )
  CA0:  	Call  SetActorRotation  ( .Actor:Self 00000000 00000000 000000B4 )
  CBC:  	Wait  2`
  CC8:  	Call  SetActorScale     ( .Actor:Self *Fixed[1.0] *Fixed[0.7] *Fixed[1.0] )
  CE4:  	Wait  2`
  CF0:  	Call  SetActorScale     ( .Actor:Self *Fixed[1.2] *Fixed[0.5] *Fixed[1.0] )
  D0C:  EndThread
  D14:  Call  GetGoalPos    ( .Actor:Self *Var0 *Var1 *Var2 )
  D30:  Add   *Var0  00000028 
  D40:  Set   *Var1  00000000 
  D50:  Call  SetActorJumpGravity   ( .Actor:Self *Fixed[1.8] )
  D64:  Call  SetGoalPos    ( .Actor:Self *Var0 *Var1 *Var2 )
  D80:  Call  JumpToGoal    ( .Actor:Self  10` .False .True .False )
  DA0:  Call  SetActorScale ( .Actor:Self *Fixed[1.4] *Fixed[0.2] *Fixed[1.0] )
  DBC:  Wait  1`
  DC8:  Thread
  DD0:  	Wait  1`
  DDC:  	Call  SetActorScale     ( .Actor:Self *Fixed[1.2] *Fixed[0.5] *Fixed[1.0] )
  DF8:  	Call  SetActorRotation  ( .Actor:Self 00000000 00000000 00000096 )
  E14:  	Wait  1`
  E20:  	Call  SetActorScale     ( .Actor:Self *Fixed[1.0] *Fixed[1.0] *Fixed[1.0] )
  E3C:  	Call  SetActorRotation  ( .Actor:Self 00000000 00000000 00000078 )
  E58:  	Wait  1`
  E64:  	Call  SetActorRotation  ( .Actor:Self 00000000 00000000 0000005A )
  E80:  	Wait  1`
  E8C:  	Call  SetActorRotation  ( .Actor:Self 00000000 00000000 0000003C )
  EA8:  	Wait  1`
  EB4:  	Call  SetActorRotation  ( .Actor:Self 00000000 00000000 0000001E )
  ED0:  	Wait  1`
  EDC:  	Call  SetActorRotation  ( .Actor:Self 00000000 00000000 00000000 )
  EF8:  	Call  SetActorRotationOffset    ( .Actor:Self 00000000 00000000 00000000 )
  F14:  EndThread
  F1C:  Call  GetGoalPos    ( .Actor:Self *Var0 *Var1 *Var2 )
  F38:  Add   *Var0  0000001E 
  F48:  Call  SetGoalPos    ( .Actor:Self *Var0 *Var1 *Var2 )
  F64:  Call  JumpToGoal    ( .Actor:Self  8` .False .True .False )
  F84:  Wait  5`
  F90:  Call  YieldTurn ( )
  F9C:  Call  SetActorDispOffset    ( .Actor:Self 00000000 00000000 00000000 )
  FB8:  Call  SetAnimation  ( .Actor:Self 00000001 002B0103 )
  FD0:  Call  SetGoalToHome ( .Actor:Self )
  FE0:  Call  GetGoalPos    ( .Actor:Self *Var0 *Var1 *Var2 )
  FFC:  Call  SetActorSpeed ( .Actor:Self *Fixed[8.0] )
 1010:  Call  SetActorJumpGravity   ( .Actor:Self *Fixed[1.8] )
 1024:  ExecWait  8029C12C 
 1030:  Call  SetAnimation  ( .Actor:Self 00000001 002B0101 )
 1048:  Call  EnableIdleScript      ( .Actor:Self 00000001 )
 105C:  Call  UseIdleAnimation      ( .Actor:Self .True )
 1070:  Return
 1078:  End
}

#new:Script $Script_8021A0D4_0D {
    0:  Set   *Flag[01]  .False 
   10:  Set   *Flag[02]  .False 
   20:  Set   *Flag[03]  .False 
   30:  Set   *Flag[04]  .False 
   40:  Call  EnemyCreateTargetList ( 00008002 )
   50:  Call  InitTargetIterator ( )
   5C:  Label  0
   68:  Call  GetOwnerTarget        ( *Var0 *Var5 )
   7C:  Call  GetIndexFromHome      ( *Var0 *Var5 )
   90:  Mod   *Var5  00000004 
   A0:  Switch  *Var5 
   AC:  	Case  ==  00000000 
   B8:  		Set   *Flag[01]  .True 
   C8:  	Case  ==  00000001 
   D4:  		Set   *Flag[02]  .True 
   E4:  	Case  ==  00000002 
   F0:  		Set   *Flag[03]  .True 
  100:  	Case  ==  00000003 
  10C:  		Set   *Flag[04]  .True 
  11C:  EndSwitch
  124:  Call  ChooseNextTarget  ( .Iter:Next *Var0 )
  138:  If  *Var0  !=  FFFFFFFF 
  148:  	Goto  0
  154:  EndIf
  15C:  Set   *VarA  FFFFFFFF 
  16C:  Set   *VarB  FFFFFFFF 
  17C:  Call  GetIndexFromHome  ( .Actor:Self *Var0 )
  190:  Switch  *Var0 
  19C:  	Case  ==  00000000 
  1A8:  		If  *Flag[02]  ==  .False 
  1B8:  			Set   *VarA  00000001 
  1C8:  		EndIf
  1D0:  	Case  ==  00000001 
  1DC:  		If  *Flag[01]  ==  .False 
  1EC:  			Set   *VarA  00000000 
  1FC:  		EndIf
  204:  		If  *Flag[03]  ==  .False 
  214:  			If  *VarA  ==  FFFFFFFF 
  224:  				Set   *VarA  00000002 
  234:  			Else
  23C:  				Set   *VarB  00000002 
  24C:  			EndIf
  254:  		EndIf
  25C:  	Case  ==  00000002 
  268:  		If  *Flag[02]  ==  .False 
  278:  			Set   *VarA  00000001 
  288:  		EndIf
  290:  		If  *Flag[04]  ==  .False 
  2A0:  			If  *VarA  ==  FFFFFFFF 
  2B0:  				Set   *VarA  00000003 
  2C0:  			Else
  2C8:  				Set   *VarB  00000003 
  2D8:  			EndIf
  2E0:  		EndIf
  2E8:  	Case  ==  00000003 
  2F4:  		If  *Flag[03]  ==  .False 
  304:  			Set   *VarA  00000002 
  314:  		EndIf
  31C:  EndSwitch
  324:  If  *VarB  !=  FFFFFFFF 
  334:  	Call  RandInt   ( 000003E8 *Var0 )
  348:  	If  *Var0  <  000001F4 
  358:  		Set   *VarA  *VarB 
  368:  	EndIf
  370:  EndIf
  378:  Return
  380:  End
}

#new:Script $Script_8021A45C_0D {
    0:  Set   *Var9  00000000 
   10:  Call  EnemyCreateTargetList ( 00008002 )
   20:  Call  InitTargetIterator ( )
   2C:  Label  0
   38:  Call  GetOwnerTarget        ( *Var0 *Var1 )
   4C:  Call  GetOriginalActorType  ( *Var0 *Var2 )
   60:  Switch  *Var2 
   6C:  	CaseOR  ==  0000001A 
   78:  	CaseOR  ==  00000029 
   84:  		Call  GetStatusFlags    ( *Var0 *Var3 )
   98:  		If  *Var3  !&  ~Flags:StatusFlags:Sleep|Frozen|Fear|Paralyze|Dizzy|Stone|Stop % 35D000
   A8:  			Call  GetActorVar   ( *Var0 00000000 *Var3 )
   C0:  			If  *Var3  !=  00000002 
   D0:  				Add   *Var9  00000001 
   E0:  			EndIf
   E8:  		EndIf
   F0:  	EndCaseGroup
   F8:  	Case  ==  0000002A 
  104:  		Call  GetStatusFlags    ( *Var0 *Var3 )
  118:  		If  *Var3  !&  ~Flags:StatusFlags:Sleep|Frozen|Fear|Paralyze|Dizzy|Stone|Stop % 35D000
  128:  			Call  GetActorVar   ( *Var0 00000001 *Var3 )
  140:  			If  *Var3  <  00000002 
  150:  				Add   *Var9  00000001 
  160:  			EndIf
  168:  		EndIf
  170:  EndSwitch
  178:  Call  ChooseNextTarget  ( .Iter:Next *Var0 )
  18C:  If  *Var0  !=  FFFFFFFF 
  19C:  	Goto  0
  1A8:  EndIf
  1B0:  Return
  1B8:  End
}

#new:Script $Script_TakeTurn_8021A61C_0D {
    0:  Call  GetBattlePhase    ( *Var0 )
   10:  If  *Var0  ==  00000001 
   20:  	ExecWait  $Script_80219054_0D 
   2C:  	Return
   34:  EndIf
   3C:  Call  GetActorVar   ( .Actor:Self 00000000 *Var0 )
   54:  If  *Var0  ==  00000002 
   64:  	ExecWait  $Script_80219054_0D 
   70:  	Return
   78:  EndIf
   80:  ExecWait  $Script_8021A0D4_0D 
   8C:  If  *VarA  ==  FFFFFFFF 
   9C:  	ExecWait  $Script_80219054_0D 
   A8:  	Return
   B0:  EndIf
   B8:  ExecWait  $Script_8021A45C_0D 
   C4:  Switch  *Var9 
   D0:  	Case  ==  00000001 
   DC:  		Call  RandInt   ( 000003E8 *Var0 )
   F0:  		If  *Var0  <  0000012C 
  100:  			ExecWait  $Script_80218C48_0D 
  10C:  			Return
  114:  		EndIf
  11C:  	Case  ==  00000002 
  128:  		Call  RandInt   ( 000003E8 *Var0 )
  13C:  		If  *Var0  <  00000096 
  14C:  			ExecWait  $Script_80218C48_0D 
  158:  			Return
  160:  		EndIf
  168:  	Case  ==  00000003 
  174:  		Call  RandInt   ( 000003E8 *Var0 )
  188:  		If  *Var0  <  00000064 
  198:  			ExecWait  $Script_80218C48_0D 
  1A4:  			Return
  1AC:  		EndIf
  1B4:  EndSwitch
  1BC:  ExecWait  $Script_80219054_0D 
  1C8:  Return
  1D0:  End
}

#new:Vector3D $Vector3D_8021A7F4_0D {
0` -1000` 0`
}

#new:SpecialFormation $SpecialFormation_8021A800_0D {
$ForestFuzzy_0D $Vector3D_8021A7F4_0D 00000000 00000000 00000000 00000000 00000000 
}

