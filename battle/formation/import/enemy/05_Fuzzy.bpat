% Automatically dumped from section 05

#new:Actor $05_Fuzzy {
% stats
[Index]         Ab 
[Level]         6`b 
[MaxHP]         3`b 
[Coins]         1`b 
[Flags]       00000000 
[StatusTable] $StatusTable_8022205C_05 
% ai
[PartsCount]    1`s 
[PartsTable]  $PartsTable_80222108_05 
[Script]      $Script_Init_802221A0_05 
% move effectiveness
[Escape]       50`b 
[Item]         95`b 
[AirLift]      95`b 
[Hurricane]    95`b % Bow's "Spook" as well
[UpAndAway]    95`b 
[PowerBounce] 100`b 
[SpinSmash]     0`b % weight (0-4)
% ui positions
[Size]         33`b  28`b % width height
[HealthBar]     0`b   0`b % dx dy
[StatusTurn]  -10`b  20`b % dx dy
[StatusIcon]   10`b  20`b % dx dy
}

#new:Function $Function_802188B0_05 {
    0:  ADDIU     SP, SP, FFD8
    4:  SW        S1, 14 (SP)
    8:  COPY      S1, A0
    C:  SW        RA, 20 (SP)
   10:  SW        S3, 1C (SP)
   14:  SW        S2, 18 (SP)
   18:  SW        S0, 10 (SP)
   1C:  LW        S0, C (S1)
   20:  LW        A1, 0 (S0)
   24:  JAL       ~Func:get_variable
   28:  ADDIU     S0, S0, 4
   2C:  LW        A1, 0 (S0)
   30:  ADDIU     S0, S0, 4
   34:  COPY      A0, S1
   38:  JAL       ~Func:get_variable
   3C:  COPY      S3, V0
   40:  LW        A1, 0 (S0)
   44:  ADDIU     S0, S0, 4
   48:  COPY      A0, S1
   4C:  JAL       ~Func:get_variable
   50:  COPY      S2, V0
   54:  COPY      A0, S1
   58:  LW        A1, 0 (S0)
   5C:  JAL       ~Func:get_variable
   60:  COPY      S0, V0
   64:  MTC1      S3, F12
   68:  NOP
   6C:  CVT.S.W   F12, F12
   70:  MTC1      S2, F14
   74:  NOP
   78:  CVT.S.W   F14, F14
   7C:  MTC1      S0, F0
   80:  NOP
   84:  CVT.S.W   F0, F0
   88:  MFC1      A2, F0
   8C:  JAL       802D7460
   90:  COPY      A3, V0
   94:  LW        RA, 20 (SP)
   98:  LW        S3, 1C (SP)
   9C:  LW        S2, 18 (SP)
   A0:  LW        S1, 14 (SP)
   A4:  LW        S0, 10 (SP)
   A8:  LI        V0, 2
   AC:  JR        RA
   B0:  ADDIU     SP, SP, 28
}

#new:Function $Function_80218964_05 {
    0:  ADDIU     SP, SP, FFD8
    4:  SW        S1, 14 (SP)
    8:  COPY      S1, A0
    C:  SW        RA, 20 (SP)
   10:  SW        S3, 1C (SP)
   14:  SW        S2, 18 (SP)
   18:  SW        S0, 10 (SP)
   1C:  LW        S0, C (S1)
   20:  LW        A1, 0 (S0)
   24:  JAL       ~Func:get_variable
   28:  ADDIU     S0, S0, 4
   2C:  LW        A1, 0 (S0)
   30:  ADDIU     S0, S0, 4
   34:  COPY      A0, S1
   38:  JAL       ~Func:get_variable
   3C:  COPY      S3, V0
   40:  LW        A1, 0 (S0)
   44:  ADDIU     S0, S0, 4
   48:  COPY      A0, S1
   4C:  JAL       ~Func:get_variable
   50:  COPY      S2, V0
   54:  COPY      A0, S1
   58:  LW        A1, 0 (S0)
   5C:  JAL       ~Func:get_variable
   60:  COPY      S0, V0
   64:  MTC1      S3, F12
   68:  NOP
   6C:  CVT.S.W   F12, F12
   70:  MTC1      S2, F14
   74:  NOP
   78:  CVT.S.W   F14, F14
   7C:  MTC1      S0, F0
   80:  NOP
   84:  CVT.S.W   F0, F0
   88:  MFC1      A2, F0
   8C:  JAL       802D74C0
   90:  COPY      A3, V0
   94:  LW        RA, 20 (SP)
   98:  LW        S3, 1C (SP)
   9C:  LW        S2, 18 (SP)
   A0:  LW        S1, 14 (SP)
   A4:  LW        S0, 10 (SP)
   A8:  LI        V0, 2
   AC:  JR        RA
   B0:  ADDIU     SP, SP, 28
}

#new:DefenseTable $DefenseTable_80222050_05 {
.Element:Normal 00000000
.Element:End
}

#new:StatusTable $StatusTable_8022205C_05 {
.Status:Normal      0`
.Status:Default     0`
.Status:Sleep      95`
.Status:Poison     90`
.Status:Frozen    100`
.Status:Dizzy      90`
.Status:Fear        0`
.Status:Static     70`
.Status:Paralyze   75`
.Status:Shrink     75`
.Status:Stop      100`
.Status:DefaultTurnMod    0`
.Status:SleepTurnMod      0`
.Status:PoisonTurnMod     0`
.Status:FrozenTurnMod     0`
.Status:DizzyTurnMod      0`
.Status:FearTurnMod       0`
.Status:StaticTurnMod     0`
.Status:ParalyzeTurnMod   0`
.Status:ShrinkTurnMod     0`
.Status:StopTurnMod       0`
.Status:End
}

#new:PartsTable $PartsTable_80222108_05 {
00800000 01000000 001400FF $IdleAnimations_80222154_05 $DefenseTable_80222050_05 00000000 00000000 00F60000 00000000 
}

#new:IdleAnimations $IdleAnimations_80222154_05 {
.Status:Normal    002B0001
.Status:Stone     002B0000
.Status:Sleep     002B000E
.Status:Poison    002B0001
.Status:Stop      002B0000
.Status:Static    002B0001
.Status:Paralyze  002B0000
.Status:Dizzy     002B000F
.Status:Fear      002B000F
.Status:End
}

#new:Script $Script_Init_802221A0_05 {
    0:  Call  BindTakeTurn      ( .Actor:Self $Script_TakeTurn_80222860_05 )
   14:  Call  BindIdle  ( .Actor:Self $Script_Idle_802221EC_05 )
   28:  Call  BindHandleEvent   ( .Actor:Self $Script_HandleEvent_802221FC_05 )
   3C:  Return
   44:  End
}

#new:Script $Script_Idle_802221EC_05 {
    0:  Return
    8:  End
}

#new:Script $Script_HandleEvent_802221FC_05 {
    0:  Call  UseIdleAnimation  ( .Actor:Self .False )
   14:  Call  EnableIdleScript  ( .Actor:Self 00000000 )
   28:  Call  SetActorScale     ( .Actor:Self *Fixed[1.0] *Fixed[1.0] *Fixed[1.0] )
   44:  Call  GetLastEvent      ( .Actor:Self *Var0 )
   58:  Switch  *Var0 
   64:  	CaseOR  ==  .Event:HitCombo % 9
   70:  	CaseOR  ==  .Event:Hit % A
   7C:  		Call  GetLastElement    ( *Var0 )
   8C:  		If  *Var0  &  00000020 
   9C:  			SetConst  *Var0  00000001 
   AC:  			SetConst  *Var1  002B0013 
   BC:  		Else
   C4:  			SetConst  *Var0  00000001 
   D4:  			SetConst  *Var1  002B0008 
   E4:  		EndIf
   EC:  		ExecWait  DoNormalHit 
   F8:  	EndCaseGroup
  100:  	Case  ==  .Event:BurnHit % E
  10C:  		SetConst  *Var0  00000001 
  11C:  		SetConst  *Var1  002B0010 
  12C:  		SetConst  *Var2  002B0012 
  13C:  		ExecWait  DoBurnHit 
  148:  	Case  ==  .Event:BurnDeath % 24
  154:  		SetConst  *Var0  00000001 
  164:  		SetConst  *Var1  002B0010 
  174:  		SetConst  *Var2  002B0012 
  184:  		ExecWait  DoBurnHit 
  190:  		SetConst  *Var0  00000001 
  1A0:  		SetConst  *Var1  002B0012 
  1B0:  		ExecWait  DoDeath 
  1BC:  		Return
  1C4:  	Case  ==  .Event:SpinSmashHit % B
  1D0:  		SetConst  *Var0  00000001 
  1E0:  		SetConst  *Var1  002B0008 
  1F0:  		ExecWait  DoSpinSmashHit 
  1FC:  	Case  ==  .Event:SpinSmashDeath % 21
  208:  		SetConst  *Var0  00000001 
  218:  		SetConst  *Var1  002B0008 
  228:  		ExecWait  DoSpinSmashHit 
  234:  		SetConst  *Var0  00000001 
  244:  		SetConst  *Var1  002B0008 
  254:  		ExecWait  DoDeath 
  260:  		Return
  268:  	Case  ==  .Event:ShockHit % 2F
  274:  		SetConst  *Var0  00000001 
  284:  		SetConst  *Var1  002B0013 
  294:  		ExecWait  DoShockHit 
  2A0:  		SetConst  *Var0  00000001 
  2B0:  		SetConst  *Var1  002B0013 
  2C0:  		ExecWait  DoJumpBack 
  2CC:  		Call  JumpToGoal    ( .Actor:Self  5` .False .True .False )
  2EC:  		SetConst  *Var0  00000001 
  2FC:  		SetConst  *Var1  002B0003 
  30C:  		ExecWait  8029C0A4 
  318:  		Call  SetActorJumpGravity   ( .Actor:Self *Fixed[1.6] )
  32C:  		Call  JumpToGoal    ( .Actor:Self  5` .False .True .False )
  34C:  	Case  ==  .Event:ShockDeath % 26
  358:  		SetConst  *Var0  00000001 
  368:  		SetConst  *Var1  002B0013 
  378:  		ExecWait  DoShockHit 
  384:  		SetConst  *Var0  00000001 
  394:  		SetConst  *Var1  002B0008 
  3A4:  		ExecWait  DoDeath 
  3B0:  		Return
  3B8:  	CaseOR  ==  00000017 % 17
  3C4:  	CaseOR  ==  .Event:Immune % 19
  3D0:  	CaseOR  ==  .Event:AirLiftFailed % 1F
  3DC:  		SetConst  *Var0  00000001 
  3EC:  		SetConst  *Var1  002B0001 
  3FC:  		ExecWait  DoImmune 
  408:  	EndCaseGroup
  410:  	Case  ==  .Event:Death % 20
  41C:  		Call  GetLastElement    ( *Var0 )
  42C:  		If  *Var0  &  00000020 
  43C:  			SetConst  *Var0  00000001 
  44C:  			SetConst  *Var1  002B0013 
  45C:  			ExecWait  DoNormalHit 
  468:  			Wait  10`
  474:  			SetConst  *Var0  00000001 
  484:  			SetConst  *Var1  002B0013 
  494:  			ExecWait  DoDeath 
  4A0:  		Else
  4A8:  			SetConst  *Var0  00000001 
  4B8:  			SetConst  *Var1  002B0008 
  4C8:  			ExecWait  DoNormalHit 
  4D4:  			Wait  10`
  4E0:  			SetConst  *Var0  00000001 
  4F0:  			SetConst  *Var1  002B0008 
  500:  			ExecWait  DoDeath 
  50C:  		EndIf
  514:  		Return
  51C:  	Case  ==  .Event:RecoverStatus % 31
  528:  		SetConst  *Var0  00000001 
  538:  		SetConst  *Var1  002B0001 
  548:  		ExecWait  DoRecover 
  554:  	Case  ==  .Event:ScareAway % 39
  560:  		SetConst  *Var0  00000001 
  570:  		SetConst  *Var1  002B0003 
  580:  		SetConst  *Var2  002B0009 
  590:  		ExecWait  DoScareAway 
  59C:  		Return
  5A4:  	Case  ==  .Event:BeginAirLift % 3A
  5B0:  		SetConst  *Var0  00000001 
  5C0:  		SetConst  *Var1  002B0003 
  5D0:  		ExecWait  DoAirLift 
  5DC:  	Case  ==  .Event:BlowAway % 16
  5E8:  		SetConst  *Var0  00000001 
  5F8:  		SetConst  *Var1  002B0003 
  608:  		ExecWait  DoBlowAway 
  614:  		Return
  61C:  	Default
  624:  EndSwitch
  62C:  Call  EnableIdleScript  ( .Actor:Self 00000001 )
  640:  Call  UseIdleAnimation  ( .Actor:Self .True )
  654:  Return
  65C:  End
}

#new:Script $Script_TakeTurn_80222860_05 {
    0:  Call  UseIdleAnimation  ( .Actor:Self .False )
   14:  Call  EnableIdleScript  ( .Actor:Self 00000000 )
   28:  Call  SetTargetActor    ( .Actor:Self .Actor:Player )
   3C:  Call  UseBattleCamPreset    ( 0000003F )
   4C:  Call  BattleCamTargetActor  ( .Actor:Self )
   5C:  Call  8024ECF8  ( FFFFFFFF 00000001 00000000 )
   74:  Call  GetBattlePhase    ( *Var0 )
   84:  If  *Var0  ==  00000001 
   94:  	Call  SetGoalToTarget   ( .Actor:Self )
   A4:  	Call  GetGoalPos        ( .Actor:Self *Var0 *Var1 *Var2 )
   C0:  	Add   *Var0  00000032 
   D0:  	Set   *Var1  00000000 
   E0:  	Call  SetActorPos       ( .Actor:Self *Var0 *Var1 *Var2 )
   FC:  	Goto  64
  108:  EndIf
  110:  Call  SetAnimation      ( .Actor:Self 00000001 002B0003 )
  128:  Call  SetGoalToTarget   ( .Actor:Self )
  138:  Call  GetGoalPos        ( .Actor:Self *Var0 *Var1 *Var2 )
  154:  Add   *Var0  00000032 
  164:  Set   *Var1  00000000 
  174:  Call  SetActorSpeed     ( .Actor:Self *Fixed[6.0] )
  188:  Call  SetActorJumpGravity   ( .Actor:Self *Fixed[1.8] )
  19C:  ExecWait  8029C12C 
  1A8:  Call  SetAnimation      ( .Actor:Self 00000001 002B0001 )
  1C0:  Label  64
  1CC:  Call  SetActorDispOffset    ( .Actor:Self 00000000 0000000A 00000000 )
  1E8:  Call  SetAnimation      ( .Actor:Self 00000001 002B0004 )
  200:  Call  SetActorDispOffset    ( .Actor:Self 00000000 00000009 00000000 )
  21C:  Wait  1`
  228:  Call  SetActorDispOffset    ( .Actor:Self 00000000 00000008 00000000 )
  244:  Wait  5`
  250:  Call  EnemyTestTarget   ( .Actor:Self *Var0 ~Flags:DamageType:IgnoreDefense 00000000 00000001 00000010 )
  274:  Switch  *Var0 
  280:  	CaseOR  ==  .HitResult:Miss % 6
  28C:  	CaseOR  ==  .HitResult:Lucky % 5
  298:  		Set   *VarA  *Var0 
  2A8:  		Call  SetGoalToTarget       ( .Actor:Self )
  2B8:  		Call  GetGoalPos    ( .Actor:Self *Var0 *Var1 *Var2 )
  2D4:  		Sub   *Var0  00000005 
  2E4:  		Set   *Var1  00000000 
  2F4:  		Sub   *Var2  00000005 
  304:  		Call  SetActorJumpGravity   ( .Actor:Self *Fixed[3.0] )
  318:  		Call  SetAnimation  ( .Actor:Self 00000001 002B0005 )
  330:  		Call  SetGoalPos    ( .Actor:Self *Var0 *Var1 *Var2 )
  34C:  		Call  JumpToGoal    ( .Actor:Self  11` .False .True .False )
  36C:  		Call  SetActorDispOffset    ( .Actor:Self 00000000 00000000 00000000 )
  388:  		Call  SetAnimation  ( .Actor:Self 00000001 002B0009 )
  3A0:  		Call  GetGoalPos    ( .Actor:Self *Var0 *Var1 *Var2 )
  3BC:  		Sub   *Var0  00000014 
  3CC:  		Call  SetActorJumpGravity   ( .Actor:Self *Fixed[3.0] )
  3E0:  		Call  SetGoalPos    ( .Actor:Self *Var0 *Var1 *Var2 )
  3FC:  		Call  JumpToGoal    ( .Actor:Self  6` .False .True .False )
  41C:  		Call  GetGoalPos    ( .Actor:Self *Var0 *Var1 *Var2 )
  438:  		Sub   *Var0  0000000F 
  448:  		Call  SetActorJumpGravity   ( .Actor:Self *Fixed[3.0] )
  45C:  		Call  SetGoalPos    ( .Actor:Self *Var0 *Var1 *Var2 )
  478:  		Call  JumpToGoal    ( .Actor:Self  5` .False .True .False )
  498:  		Call  GetGoalPos    ( .Actor:Self *Var0 *Var1 *Var2 )
  4B4:  		Wait  4`
  4C0:  		Wait  5`
  4CC:  		If  *VarA  ==  .HitResult:Lucky % 5
  4DC:  			Call  EnemyTestTarget   ( .Actor:Self *Var0 ~Flags:DamageType:TriggerLucky 00000000 00000000 00000000 )
  500:  		EndIf
  508:  		Wait  5`
  514:  		Call  UseBattleCamPreset    ( 00000002 )
  524:  		Call  YieldTurn ( )
  530:  		Call  SetActorYaw       ( .Actor:Self  180` )
  544:  		Call  AddActorDecoration    ( .Actor:Self 00000001 00000000 .Decoration:Sweat )
  560:  		Call  SetAnimation      ( .Actor:Self 00000001 002B0003 )
  578:  		Call  SetGoalToHome     ( .Actor:Self )
  588:  		Call  GetGoalPos        ( .Actor:Self *Var0 *Var1 *Var2 )
  5A4:  		Call  SetActorSpeed     ( .Actor:Self *Fixed[8.0] )
  5B8:  		Call  SetActorJumpGravity   ( .Actor:Self *Fixed[1.8] )
  5CC:  		ExecWait  8029C12C 
  5D8:  		Call  RemoveActorDecoration ( .Actor:Self 00000001 00000000 )
  5F0:  		Call  SetActorYaw       ( .Actor:Self  0` )
  604:  		Call  EnableIdleScript  ( .Actor:Self 00000001 )
  618:  		Call  UseIdleAnimation  ( .Actor:Self .True )
  62C:  		Return
  634:  	EndCaseGroup
  63C:  	Case  ==  .HitResult:HitStatic % 7
  648:  		Call  GetStatusFlags    ( .Actor:Self *Var0 )
  65C:  		If  *Var0  &  ~Flags:StatusFlags:Static % 2000
  66C:  			Set   *Flag[00]  .False 
  67C:  		Else
  684:  			Set   *Flag[00]  .True 
  694:  		EndIf
  69C:  EndSwitch
  6A4:  Call  SetGoalToTarget   ( .Actor:Self )
  6B4:  Call  AddGoalPos        ( .Actor:Self  -3`  -12`  -15` )
  6D0:  Call  SetActorJumpGravity   ( .Actor:Self *Fixed[3.0] )
  6E4:  Call  SetAnimation      ( .Actor:Self 00000001 002B0005 )
  6FC:  Call  JumpToGoal        ( .Actor:Self  8` .False .True .False )
  71C:  If  *Flag[00]  ==  .True 
  72C:  	Call  EnemyDamageTarget ( .Actor:Self *Var0 ~Flags:DamageType:IgnoreDefense 00000000 00000000 00000000 00000020 )
  754:  	Return
  75C:  EndIf
  764:  Wait  10`
  770:  Call  UseIdleAnimation  ( .Actor:Player .False )
  784:  Call  SetAnimation  ( .Actor:Player 00000000 0003000C )
  79C:  Call  PlaySoundAtActor  ( .Actor:Self 000003E0 )
  7B0:  Call  SetAnimation  ( .Actor:Self 00000001 002B0007 )
  7C8:  Wait  21`
  7D4:  Call  SetAnimation  ( .Actor:Self 00000001 002B0000 )
  7EC:  Call  SetActorRotation  ( .Actor:Self 00000000 00000000 0000014A )
  808:  Call  PlaySoundAtActor  ( .Actor:Self 000003E0 )
  81C:  Call  SetActorDispOffset    ( .Actor:Self FFFFFFFD FFFFFFFE 00000000 )
  838:  Call  SetActorScale ( .Actor:Self *Fixed[1.0] *Fixed[1.0] *Fixed[1.0] )
  854:  Wait  1`
  860:  Call  SetActorScale ( .Actor:Self *Fixed[0.9] *Fixed[1.2] *Fixed[1.0] )
  87C:  Wait  1`
  888:  Call  SetActorScale ( .Actor:Self *Fixed[0.8] *Fixed[1.3] *Fixed[1.0] )
  8A4:  Wait  1`
  8B0:  Call  SetActorScale ( .Actor:Self *Fixed[0.7] *Fixed[1.4] *Fixed[1.0] )
  8CC:  Wait  1`
  8D8:  Call  SetActorScale ( .Actor:Self *Fixed[0.7] *Fixed[1.5] *Fixed[1.0] )
  8F4:  Wait  2`
  900:  Call  SetActorScale ( .Actor:Self *Fixed[0.6] *Fixed[1.6] *Fixed[1.0] )
  91C:  Wait  10`
  928:  Wait  2`
  934:  Call  EnemyDamageTarget ( .Actor:Self *Var0 ~Flags:DamageType:IgnoreDefense 00000000 00000000 00000001 00000020 )
  95C:  Call  SetActorDispOffset    ( .Actor:Self 00000000 00000000 00000000 )
  978:  Call  SetAnimation  ( .Actor:Self 00000001 002B0001 )
  990:  Switch  *Var0 
  99C:  	CaseOR  ==  .HitResult:Hit % 0
  9A8:  	CaseOR  ==  .HitResult:QuakeImmune % 2
  9B4:  		Call  UseBattleCamPreset    ( 00000002 )
  9C4:  		Call  GetLastDamage ( .Actor:Player *Var3 )
  9D8:  		If  *Var3  !=  00000000 
  9E8:  			Call  PlaySoundAtActor  ( .Actor:Self 0000206D )
  9FC:  			Call  PlaySoundAtActor  ( .Actor:Self 00000214 )
  A10:  			Call  GetActorPos       ( .Actor:Self *Var0 *Var1 *Var2 )
  A2C:  			Add   *Var1  0000000A 
  A3C:  			Call  $Function_802188B0_05 ( *Var0 *Var1 *Var2 *Var3 )
  A58:  			Thread
  A60:  				Wait  15`
  A6C:  				Call  PlaySoundAtActor      ( .Actor:Self 0000025C )
  A80:  				Call  $Function_80218964_05 ( *Var0 *Var1 *Var2 *Var3 )
  A9C:  			EndThread
  AA4:  			Add   *Var0  00000014 
  AB4:  			Add   *Var1  00000014 
  AC4:  			Call  PlayEffect    ( ~FX:Recover:HP *Var0 *Var1 *Var2 *Var3 00000000 00000000 00000000 00000000 00000000 00000000 00000000 00000000 )
  B08:  			Call  GetActorHP    ( .Actor:Self *Var0 )
  B1C:  			Add   *Var0  *Var3 
  B2C:  			Call  SetEnemyHP    ( .Actor:Self *Var0 )
  B40:  		EndIf
  B48:  		Thread
  B50:  			Call  SetActorScale     ( .Actor:Self *Fixed[1.6] *Fixed[0.6] *Fixed[1.0] )
  B6C:  			Call  SetActorRotationOffset    ( .Actor:Self 00000000 0000000A 00000000 )
  B88:  			Wait  1`
  B94:  			Call  SetActorRotation  ( .Actor:Self 00000000 00000000 0000014A )
  BB0:  			Wait  1`
  BBC:  			Call  SetActorScale     ( .Actor:Self *Fixed[0.7] *Fixed[1.5] *Fixed[1.0] )
  BD8:  			Call  SetActorRotation  ( .Actor:Self 00000000 00000000 0000012C )
  BF4:  			Wait  1`
  C00:  			Call  SetActorRotation  ( .Actor:Self 00000000 00000000 0000010E )
  C1C:  			Wait  1`
  C28:  			Call  SetActorScale     ( .Actor:Self *Fixed[1.0] *Fixed[0.7] *Fixed[1.0] )
  C44:  			Call  SetActorRotation  ( .Actor:Self 00000000 00000000 000000F0 )
  C60:  			Wait  1`
  C6C:  			Call  SetActorRotation  ( .Actor:Self 00000000 00000000 000000D2 )
  C88:  			Wait  1`
  C94:  			Call  SetActorScale     ( .Actor:Self *Fixed[0.7] *Fixed[1.4] *Fixed[1.0] )
  CB0:  			Call  SetActorRotation  ( .Actor:Self 00000000 00000000 000000B4 )
  CCC:  			Wait  2`
  CD8:  			Call  SetActorScale     ( .Actor:Self *Fixed[1.0] *Fixed[0.7] *Fixed[1.0] )
  CF4:  			Wait  2`
  D00:  			Call  SetActorScale     ( .Actor:Self *Fixed[1.2] *Fixed[0.5] *Fixed[1.0] )
  D1C:  		EndThread
  D24:  		Call  GetGoalPos    ( .Actor:Self *Var0 *Var1 *Var2 )
  D40:  		Add   *Var0  00000028 
  D50:  		Set   *Var1  00000000 
  D60:  		Call  SetActorJumpGravity   ( .Actor:Self *Fixed[1.8] )
  D74:  		Call  SetGoalPos    ( .Actor:Self *Var0 *Var1 *Var2 )
  D90:  		Call  JumpToGoal    ( .Actor:Self  10` .False .True .False )
  DB0:  		Call  SetActorScale ( .Actor:Self *Fixed[1.4] *Fixed[0.2] *Fixed[1.0] )
  DCC:  		Wait  1`
  DD8:  		Thread
  DE0:  			Wait  1`
  DEC:  			Call  SetActorScale     ( .Actor:Self *Fixed[1.2] *Fixed[0.5] *Fixed[1.0] )
  E08:  			Call  SetActorRotation  ( .Actor:Self 00000000 00000000 00000096 )
  E24:  			Wait  1`
  E30:  			Call  SetActorScale     ( .Actor:Self *Fixed[1.0] *Fixed[1.0] *Fixed[1.0] )
  E4C:  			Call  SetActorRotation  ( .Actor:Self 00000000 00000000 00000078 )
  E68:  			Wait  1`
  E74:  			Call  SetActorRotation  ( .Actor:Self 00000000 00000000 0000005A )
  E90:  			Wait  1`
  E9C:  			Call  SetActorRotation  ( .Actor:Self 00000000 00000000 0000003C )
  EB8:  			Wait  1`
  EC4:  			Call  SetActorRotation  ( .Actor:Self 00000000 00000000 0000001E )
  EE0:  			Wait  1`
  EEC:  			Call  SetActorRotation  ( .Actor:Self 00000000 00000000 00000000 )
  F08:  			Call  SetActorRotationOffset    ( .Actor:Self 00000000 00000000 00000000 )
  F24:  		EndThread
  F2C:  		Call  GetGoalPos    ( .Actor:Self *Var0 *Var1 *Var2 )
  F48:  		Add   *Var0  0000001E 
  F58:  		Call  SetGoalPos    ( .Actor:Self *Var0 *Var1 *Var2 )
  F74:  		Call  JumpToGoal    ( .Actor:Self  8` .False .True .False )
  F94:  		Wait  5`
  FA0:  		Call  YieldTurn ( )
  FAC:  		Call  SetActorDispOffset    ( .Actor:Self 00000000 00000000 00000000 )
  FC8:  		Call  SetAnimation  ( .Actor:Self 00000001 002B0003 )
  FE0:  		Call  SetGoalToHome ( .Actor:Self )
  FF0:  		Call  GetGoalPos    ( .Actor:Self *Var0 *Var1 *Var2 )
 100C:  		Call  SetActorSpeed ( .Actor:Self *Fixed[8.0] )
 1020:  		Call  SetActorJumpGravity   ( .Actor:Self *Fixed[1.8] )
 1034:  		ExecWait  8029C12C 
 1040:  		Call  SetAnimation  ( .Actor:Self 00000001 002B0001 )
 1058:  	EndCaseGroup
 1060:  EndSwitch
 1068:  Call  EnableIdleScript  ( .Actor:Self 00000001 )
 107C:  Call  UseIdleAnimation  ( .Actor:Self .True )
 1090:  Return
 1098:  End
}

