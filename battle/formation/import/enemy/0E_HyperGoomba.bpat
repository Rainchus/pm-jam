% Automatically dumped from section 0E

#new:Actor $0E_HyperGoomba {
% stats
[Index]        1Bb 
[Level]        12`b 
[MaxHP]         7`b 
[Coins]         1`b 
[Flags]       00000000 
[StatusTable] $StatusTable_8021877C_0E 
% ai
[PartsCount]    1`s 
[PartsTable]  $PartsTable_80218828_0E 
[Script]      $Script_Init_802188C0_0E 
% move effectiveness
[Escape]       60`b 
[Item]         80`b 
[AirLift]      90`b 
[Hurricane]    90`b % Bow's "Spook" as well
[UpAndAway]    95`b 
[PowerBounce] 100`b 
[SpinSmash]     0`b % weight (0-4)
% ui positions
[Size]         24`b  24`b % width height
[HealthBar]     0`b   0`b % dx dy
[StatusTurn]  -10`b  20`b % dx dy
[StatusIcon]   10`b  20`b % dx dy
}

#new:Function $Function_80218000_0E {
    0:  ADDIU     SP, SP, FFE0
    4:  SW        S1, 14 (SP)
    8:  COPY      S1, A0
    C:  SW        RA, 18 (SP)
   10:  SW        S0, 10 (SP)
   14:  LW        S0, C (S1)
   18:  LW        A1, 0 (S0)
   1C:  JAL       ~Func:get_variable
   20:  ADDIU     S0, S0, 4
   24:  COPY      A0, S1
   28:  LW        A1, 0 (S0)
   2C:  JAL       ~Func:get_variable
   30:  COPY      S0, V0
   34:  COPY      A0, S0
   38:  JAL       ~Func:start_rumble
   3C:  COPY      A1, V0
   40:  LW        RA, 18 (SP)
   44:  LW        S1, 14 (SP)
   48:  LW        S0, 10 (SP)
   4C:  LI        V0, 2
   50:  JR        RA
   54:  ADDIU     SP, SP, 20
}

#new:Function $Function_80218058_0E {
    0:  ADDIU     SP, SP, FFD8
    4:  SDC1      F22, 20 (SP)
    8:  MOV.S     F22, F12
    C:  SDC1      F20, 18 (SP)
   10:  SW        RA, 10 (SP)
   14:  JAL       ~Func:length2D
   18:  MOV.S     F20, F14
   1C:  TRUNC.W.S F6, F20
   20:  MFC1      V0, F6
   24:  NOP
   28:  BLTZL     V0, .o30
   2C:  SUBU      V0, R0, V0
        .o30
   30:  MTC1      V0, F2
   34:  NOP
   38:  CVT.S.W   F2, F2
   3C:  DIV.S     F4, F2, F0
   40:  CLEAR     A0
   44:  LI        A2, 5A
   48:  COPY      A1, A0
   4C:  LA        A3, $FloatTable_8021A4BC_0E
   54:  ANDI      V0, A2, FFFF
        .o58
   58:  ANDI      V1, A0, FFFF
   5C:  SUBU      V0, V0, V1
   60:  SRL       V1, V0, 1F
   64:  ADDU      V0, V0, V1
   68:  SRA       V0, V0, 1
   6C:  ADDU      V1, A0, V0
   70:  ANDI      V0, V1, FFFF
   74:  SLL       V0, V0, 2
   78:  ADDU      V0, V0, A3
   7C:  LWC1      F0, 0 (V0)
   80:  C.LT.S    F0, F4
   84:  NOP
   88:  BC1FL     .o94
   8C:  COPY      A2, V1
   90:  COPY      A0, V1
        .o94
   94:  ADDIU     A1, A1, 1
   98:  ANDI      V0, A1, FFFF
   9C:  SLTIU     V0, V0, 7
   A0:  BNE       V0, R0, .o58
   A4:  ANDI      V0, A2, FFFF
   A8:  ANDI      V0, A0, FFFF
   AC:  SLL       V0, V0, 2
   B0:  ANDI      V1, A2, FFFF
   B4:  LTF       F2, V0 ($FloatTable_8021A4BC_0E)
   C0:  SLL       V1, V1, 2
   C4:  SUB.S     F2, F2, F4
   C8:  LTF       F0, V1 ($FloatTable_8021A4BC_0E)
   D4:  SUB.S     F0, F0, F4
   D8:  ABS.S     F2, F2
   DC:  ABS.S     F0, F0
   E0:  C.LT.S    F2, F0
   E4:  NOP
   E8:  BC1F      .oF4
   EC:  COPY      V1, A2
   F0:  COPY      V1, A0
        .oF4
   F4:  MTC1      R0, F0
   F8:  NOP
   FC:  C.LT.S    F22, F0
  100:  NOP
  104:  BC1F      .o130
  108:  NOP
  10C:  C.LE.S    F0, F20
  110:  NOP
  114:  BC1F      .o128
  118:  LI        V0, B4
  11C:  SUBU      V1, V0, V1
  120:  MTC1      R0, F0
  124:  NOP
        .o128
  128:  C.LT.S    F22, F0
  12C:  NOP
        .o130
  130:  BC1F      .o148
  134:  NOP
  138:  C.LT.S    F20, F0
  13C:  NOP
  140:  BC1TL     .o148
  144:  ADDIU     V1, V1, B4
        .o148
  148:  MTC1      R0, F0
  14C:  NOP
  150:  C.LE.S    F0, F22
  154:  NOP
  158:  BC1F      .o174
  15C:  NOP
  160:  C.LT.S    F20, F0
  164:  NOP
  168:  BC1F      .o174
  16C:  LI        V0, 168
  170:  SUBU      V1, V0, V1
        .o174
  174:  LW        RA, 10 (SP)
  178:  LDC1      F22, 20 (SP)
  17C:  LDC1      F20, 18 (SP)
  180:  ANDI      V0, V1, FFFF
  184:  JR        RA
  188:  ADDIU     SP, SP, 28
}

#new:Function $Function_802181E4_0E {
    0:  ADDIU     SP, SP, FFD8
    4:  SW        S4, 20 (SP)
    8:  COPY      S4, A0
    C:  SW        RA, 24 (SP)
   10:  SW        S3, 1C (SP)
   14:  SW        S2, 18 (SP)
   18:  SW        S1, 14 (SP)
   1C:  SW        S0, 10 (SP)
   20:  LW        S2, C (S4)
   24:  LW        A1, 0 (S2)
   28:  JAL       ~Func:get_variable
   2C:  ADDIU     S2, S2, 4
   30:  LW        A1, 0 (S2)
   34:  ADDIU     S2, S2, 4
   38:  COPY      A0, S4
   3C:  JAL       ~Func:get_variable
   40:  COPY      S0, V0
   44:  LW        A1, 0 (S2)
   48:  ADDIU     S2, S2, 4
   4C:  COPY      A0, S4
   50:  JAL       ~Func:get_variable
   54:  COPY      S1, V0
   58:  COPY      S3, V0
   5C:  LW        A1, 0 (S2)
   60:  ADDIU     S2, S2, 4
   64:  COPY      A0, S4
   68:  JAL       ~Func:get_variable
   6C:  SUBU      S3, S3, S0
   70:  COPY      S0, V0
   74:  COPY      A0, S4
   78:  LW        A1, 0 (S2)
   7C:  JAL       ~Func:get_variable
   80:  SUBU      S0, S0, S1
   84:  BNE       S3, R0, .oA0
   88:  NOP
   8C:  BNE       S0, R0, .oA0
   90:  COPY      A0, S4
   94:  LW        A1, 0 (S2)
   98:  BEQ       R0, R0, .oC8
   9C:  COPY      A2, V0
        .oA0
   A0:  MTC1      S3, F12
   A4:  NOP
   A8:  CVT.S.W   F12, F12
   AC:  MTC1      S0, F14
   B0:  NOP
   B4:  JAL       $Function_80218058_0E
   B8:  CVT.S.W   F14, F14
   BC:  COPY      A0, S4
   C0:  LW        A1, 0 (S2)
   C4:  ADDIU     A2, V0, FFA6
        .oC8
   C8:  JAL       ~Func:set_variable
   CC:  NOP
   D0:  LI        V0, 2
   D4:  LW        RA, 24 (SP)
   D8:  LW        S4, 20 (SP)
   DC:  LW        S3, 1C (SP)
   E0:  LW        S2, 18 (SP)
   E4:  LW        S1, 14 (SP)
   E8:  LW        S0, 10 (SP)
   EC:  JR        RA
   F0:  ADDIU     SP, SP, 28
}

#new:DefenseTable $DefenseTable_80218770_0E {
.Element:Normal 00000000
.Element:End
}

#new:StatusTable $StatusTable_8021877C_0E {
.Status:Normal      0`
.Status:Default     0`
.Status:Sleep      80`
.Status:Poison    100`
.Status:Frozen      0`
.Status:Dizzy      80`
.Status:Fear      100`
.Status:Static    100`
.Status:Paralyze  100`
.Status:Shrink     80`
.Status:Stop       90`
.Status:DefaultTurnMod    0`
.Status:SleepTurnMod      0`
.Status:PoisonTurnMod     0`
.Status:FrozenTurnMod     0`
.Status:DizzyTurnMod      0`
.Status:FearTurnMod       0`
.Status:StaticTurnMod     0`
.Status:ParalyzeTurnMod   0`
.Status:ShrinkTurnMod     0`
.Status:StopTurnMod       0`
.Status:End
}

#new:PartsTable $PartsTable_80218828_0E {
00800000 01000000 001600FF $IdleAnimations_80219818_0E $DefenseTable_80218770_0E 00000000 00000000 00F60000 00000000 
}

#new:IdleAnimations $IdleAnimations_80218874_0E {
.Status:Normal    00260208
.Status:Stone     00260200
.Status:Sleep     00260208
.Status:Poison    00260208
.Status:Stop      00260200
.Status:Static    00260208
.Status:Paralyze  00260200
.Status:Dizzy     00260207
.Status:Fear      00260207
.Status:End
}

#new:Script $Script_Init_802188C0_0E {
    0:  Call  BindIdle      ( .Actor:Self $Script_Idle_802198FC_0E )
   14:  Call  BindHandleEvent   ( .Actor:Self $Script_HandleEvent_80219BD8_0E )
   28:  Call  BindTakeTurn  ( .Actor:Self $Script_TakeTurn_802195F0_0E )
   3C:  Call  BindNextTurn  ( .Actor:Self $Script_NextTurn_80218950_0E )
   50:  Call  SetActorVar   ( .Actor:Self 00000000 00000000 )
   68:  Call  SetActorVar   ( .Actor:Self 00000001 00000000 )
   80:  Return
   88:  End
}

#new:Script $Script_NextTurn_80218950_0E {
    0:  Call  GetBattlePhase    ( *Var0 )
   10:  Switch  *Var0 
   1C:  	Case  ==  0000000A 
   28:  	Case  ==  0000000C 
   34:  	Case  ==  0000000B 
   40:  		Call  SetBattleVar  ( 00000001 00000000 )
   54:  		Call  SetActorVar   ( .Actor:Self 00000001 00000001 )
   6C:  EndSwitch
   74:  Return
   7C:  End
}

#new:Script $Script_802189D4_0E {
    0:  Call  UseIdleAnimation  ( .Actor:Self .False )
   14:  Call  EnableIdleScript  ( .Actor:Self 00000000 )
   28:  Call  SetTargetActor    ( .Actor:Self .Actor:Player )
   3C:  Call  SetGoalToTarget   ( .Actor:Self )
   4C:  Call  GetActorVar       ( .Actor:Self 00000000 *Var0 )
   64:  If  *Var0  ==  00000000 
   74:  	Call  UseBattleCamPreset    ( 0000000E )
   84:  	Call  BattleCamTargetActor  ( .Actor:Self )
   94:  	Call  MoveBattleCamOver (  20` )
   A4:  	Wait  20`
   B0:  	Call  PlaySoundAtActor  ( .Actor:Self .Sound:PowerUp )
   C4:  	Call  GetActorPos       ( .Actor:Self *Var0 *Var1 *Var2 )
   E0:  	Add   *Var1  0000000A 
   F0:  	Call  PlayEffect        ( ~FX:EnergyIn:LongStreaks1 *Var0 *Var1 *Var2 *Fixed[1.0] 0000002D 00000000 00000000 00000000 00000000 00000000 00000000 00000000 )
  134:  	Call  SetAnimation      ( .Actor:Self 00000001 00260203 )
  14C:  	Wait  30`
  158:  	Call  UseBattleCamPreset    ( 00000002 )
  168:  	Call  MoveBattleCamOver (  20` )
  178:  	Call  GetActorPos       ( .Actor:Self *Var0 *Var1 *Var2 )
  194:  	Call  SetActorJumpGravity   ( .Actor:Self *Fixed[1.0] )
  1A8:  	Call  SetGoalPos        ( .Actor:Self *Var0  0` *Var2 )
  1C4:  	Call  JumpToGoal        ( .Actor:Self  20` .False .True .False )
  1E4:  	Call  PlaySoundAtActor  ( .Actor:Self 000020DD )
  1F8:  	Call  $Function_80218000_0E ( 00000080 0000000A )
  20C:  	Thread
  214:  		Call  ShakeCam  ( .Cam:Battle 00000000  5` *Fixed[0.5] )
  230:  	EndThread
  238:  	Call  SetActorVar       ( .Actor:Self 00000000 00000001 )
  250:  	Call  SetIdleAnimations ( .Actor:Self 00000001 $IdleAnimations_80218874_0E )
  268:  	Call  SetAnimation      ( .Actor:Self 00000001 00260201 )
  280:  	Call  EnableActorGlow   ( .Actor:Self .True )
  294:  	Call  SetPartEventBits  ( .Actor:Self 00000001 00400000 .True )
  2B0:  	Wait  2`
  2BC:  	Call  EnableIdleScript  ( .Actor:Self 00000001 )
  2D0:  	Call  UseIdleAnimation  ( .Actor:Self .True )
  2E4:  	Return
  2EC:  EndIf
  2F4:  Call  UseBattleCamPreset    ( 0000003F )
  304:  Call  BattleCamTargetActor  ( .Actor:Self )
  314:  Call  8024ECF8  ( FFFFFFFF 00000001 00000000 )
  32C:  Loop  00000014 
  338:  	Call  SetActorDispOffset    ( .Actor:Self 00000001 00000000 00000000 )
  354:  	Wait  1`
  360:  	Call  SetActorDispOffset    ( .Actor:Self FFFFFFFF 00000000 00000000 )
  37C:  	Wait  1`
  388:  EndLoop
  390:  Call  SetActorDispOffset    ( .Actor:Self 00000000 00000000 00000000 )
  3AC:  Call  EnemyTestTarget       ( .Actor:Self *Var0 ~Flags:DamageType:0 00000000 00000001 00000010 )
  3D0:  Switch  *Var0 
  3DC:  	CaseOR  ==  .HitResult:Miss % 6
  3E8:  	CaseOR  ==  .HitResult:Lucky % 5
  3F4:  		Set   *VarA  *Var0 
  404:  		Thread
  40C:  			Loop
  418:  				Call  GetActorPos   ( .Actor:Player *Var0 *Var1 *Var2 )
  434:  				Add   *Var0  0000001E 
  444:  				Call  GetActorPos   ( .Actor:Self *Var3 *Var4 *Var5 )
  460:  				If  *Var0  >  *Var3 
  470:  					BreakLoop
  478:  				EndIf
  480:  				Wait  1`
  48C:  			EndLoop
  494:  			Call  UseBattleCamPreset    ( 00000001 )
  4A4:  			If  *VarA  ==  .HitResult:Lucky % 5
  4B4:  				Call  EnemyTestTarget   ( .Actor:Self *Var0 ~Flags:DamageType:TriggerLucky 00000000 00000000 00000000 )
  4D8:  			EndIf
  4E0:  			Wait  15`
  4EC:  			Call  UseBattleCamPreset    ( 00000002 )
  4FC:  		EndThread
  504:  		Call  SetActorRotationOffset    ( .Actor:Self 00000000 0000000C 00000000 )
  520:  		Call  SetActorRotation  ( .Actor:Self 00000000 00000000 00000050 )
  53C:  		Call  SetActorSounds    ( .Actor:Self .ActorSound:Jump 0000010F 00000000 )
  558:  		Call  SetGoalToTarget   ( .Actor:Self )
  568:  		Call  AddGoalPos        ( .Actor:Self  -200`  0`  0` )
  584:  		Call  SetActorJumpGravity   ( .Actor:Self *Fixed[0.01] )
  598:  		Call  SetActorSpeed     ( .Actor:Self *Fixed[15.0] )
  5AC:  		Call  JumpToGoal        ( .Actor:Self  0` .False .True .False )
  5CC:  		Call  ResetAllActorSounds   ( .Actor:Self )
  5DC:  		Call  SetActorRotationOffset    ( .Actor:Self 00000000 00000000 00000000 )
  5F8:  		Call  SetActorRotation  ( .Actor:Self 00000000 00000000 00000000 )
  614:  		Call  GetActorPos       ( .Actor:Self *Var0 *Var1 *Var2 )
  630:  		Call  SetActorPos       ( .Actor:Self *Var0  0` *Var2 )
  64C:  		Wait  20`
  658:  		Call  EnableActorGlow   ( .Actor:Self .False )
  66C:  		Call  SetPartEventBits  ( .Actor:Self 00000001 00400000 .False )
  688:  		Call  YieldTurn ( )
  694:  		Call  SetActorPos       ( .Actor:Self  300`  0`  0` )
  6B0:  		Call  AddActorDecoration    ( .Actor:Self 00000001 00000000 .Decoration:Sweat )
  6CC:  		Call  SetAnimation      ( .Actor:Self 00000001 00260203 )
  6E4:  		Call  SetActorSpeed     ( .Actor:Self *Fixed[8.0] )
  6F8:  		Call  SetGoalToHome     ( .Actor:Self )
  708:  		Call  RunToGoal ( .Actor:Self  0` .False )
  720:  		Call  SetAnimation      ( .Actor:Self 00000001 00260201 )
  738:  		Call  RemoveActorDecoration ( .Actor:Self 00000001 00000000 )
  750:  		Call  SetActorVar       ( .Actor:Self 00000000 00000000 )
  768:  		Call  SetIdleAnimations ( .Actor:Self 00000001 $IdleAnimations_80219818_0E )
  780:  		Call  EnableIdleScript  ( .Actor:Self 00000001 )
  794:  		Call  UseIdleAnimation  ( .Actor:Self .True )
  7A8:  		Return
  7B0:  	EndCaseGroup
  7B8:  EndSwitch
  7C0:  Call  SetActorSounds    ( .Actor:Self .ActorSound:Jump 0000010F 00000000 )
  7DC:  Call  SetActorRotationOffset    ( .Actor:Self 00000000 0000000C 00000000 )
  7F8:  Call  SetActorRotation  ( .Actor:Self 00000000 00000000 00000050 )
  814:  Call  SetGoalToTarget   ( .Actor:Self )
  824:  Call  SetActorJumpGravity       ( .Actor:Self *Fixed[0.01] )
  838:  Call  SetActorSpeed     ( .Actor:Self *Fixed[15.0] )
  84C:  Call  JumpToGoal        ( .Actor:Self  0` .False .True .False )
  86C:  Wait  2`
  878:  Call  EnemyDamageTarget ( .Actor:Self *Var0 ~Flags:DamageType:0 00000000 00000000 00000008 00000020 )
  8A0:  Switch  *Var0 
  8AC:  	CaseOR  ==  .HitResult:Hit % 0
  8B8:  	CaseOR  ==  .HitResult:QuakeImmune % 2
  8C4:  		Thread
  8CC:  			Call  SetActorRotationOffset    ( .Actor:Self 00000000 0000000C 00000000 )
  8E8:  			Set   *Var0  00000050 
  8F8:  			Loop  0000003C 
  904:  				Add   *Var0  00000012 
  914:  				Call  SetActorRotation  ( .Actor:Self 00000000 00000000 *Var0 )
  930:  				Wait  1`
  93C:  			EndLoop
  944:  			Call  SetActorRotationOffset    ( .Actor:Self 00000000 00000000 00000000 )
  960:  			Call  SetActorRotation  ( .Actor:Self 00000000 00000000 00000000 )
  97C:  		EndThread
  984:  		Call  UseBattleCamPreset    ( 00000002 )
  994:  		Call  ResetAllActorSounds   ( .Actor:Self )
  9A4:  		Call  SetActorJumpGravity   ( .Actor:Self *Fixed[0.8] )
  9B8:  		Call  GetActorPos   ( .Actor:Self *Var0 *Var1 *Var2 )
  9D4:  		Set   *Var1  00000000 
  9E4:  		Sub   *Var0  00000032 
  9F4:  		Call  SetGoalPos    ( .Actor:Self *Var0 *Var1 *Var2 )
  A10:  		Call  JumpToGoal    ( .Actor:Self  30` .False .True .False )
  A30:  		Sub   *Var0  00000028 
  A40:  		Call  SetGoalPos    ( .Actor:Self *Var0 *Var1 *Var2 )
  A5C:  		Call  JumpToGoal    ( .Actor:Self  20` .False .True .False )
  A7C:  		Sub   *Var0  0000001E 
  A8C:  		Call  SetGoalPos    ( .Actor:Self *Var0 *Var1 *Var2 )
  AA8:  		Call  JumpToGoal    ( .Actor:Self  10` .False .True .False )
  AC8:  		Wait  10`
  AD4:  		Call  EnableActorGlow       ( .Actor:Self .False )
  AE8:  		Call  SetPartEventBits      ( .Actor:Self 00000001 00400000 .False )
  B04:  		Call  YieldTurn ( )
  B10:  		Call  SetActorYaw   ( .Actor:Self  180` )
  B24:  		Call  SetAnimation  ( .Actor:Self 00000001 00260203 )
  B3C:  		Call  SetActorSpeed ( .Actor:Self *Fixed[8.0] )
  B50:  		Call  SetGoalToHome ( .Actor:Self )
  B60:  		Call  RunToGoal     ( .Actor:Self  0` .False )
  B78:  		Call  SetAnimation  ( .Actor:Self 00000001 00260201 )
  B90:  		Call  SetActorYaw   ( .Actor:Self  0` )
  BA4:  		Call  SetActorVar   ( .Actor:Self 00000000 00000000 )
  BBC:  		Call  SetIdleAnimations     ( .Actor:Self 00000001 $IdleAnimations_80219818_0E )
  BD4:  	EndCaseGroup
  BDC:  EndSwitch
  BE4:  Call  EnableIdleScript  ( .Actor:Self 00000001 )
  BF8:  Call  UseIdleAnimation  ( .Actor:Self .True )
  C0C:  Return
  C14:  End
}

#new:Script $Script_TakeTurn_802195F0_0E {
    0:  Call  GetBattlePhase    ( *Var0 )
   10:  If  *Var0  ==  00000001 
   20:  	Call  SetBattleVar  ( 00000001 00000001 )
   34:  	ExecWait  $Script_TakeTurn_8021A628_0E 
   40:  	Return
   48:  EndIf
   50:  Call  GetActorVar   ( .Actor:Self 00000000 *Var0 )
   68:  If  *Var0  ==  00000001 
   78:  	ExecWait  $Script_802189D4_0E 
   84:  	Return
   8C:  EndIf
   94:  Call  GetBattleVar  ( 00000001 *Var0 )
   A8:  Switch  *Var0 
   B4:  	Case  ==  00000000 
   C0:  		Call  GetActorVar   ( .Actor:Self 00000001 *Var0 )
   D8:  		If  *Var0  ==  00000000 
   E8:  			Call  RandInt   ( 000003E8 *Var0 )
   FC:  			If  *Var0  <  000002EE 
  10C:  				Call  SetBattleVar  ( 00000001 00000002 )
  120:  				ExecWait  $Script_802189D4_0E 
  12C:  			Else
  134:  				Call  SetBattleVar  ( 00000001 00000001 )
  148:  				ExecWait  $Script_TakeTurn_8021A628_0E 
  154:  			EndIf
  15C:  		Else
  164:  			Call  RandInt   ( 000003E8 *Var0 )
  178:  			If  *Var0  <  000001F4 
  188:  				Call  SetBattleVar  ( 00000001 00000002 )
  19C:  				ExecWait  $Script_802189D4_0E 
  1A8:  			Else
  1B0:  				Call  SetBattleVar  ( 00000001 00000001 )
  1C4:  				ExecWait  $Script_TakeTurn_8021A628_0E 
  1D0:  			EndIf
  1D8:  		EndIf
  1E0:  	Case  ==  00000001 
  1EC:  		ExecWait  $Script_TakeTurn_8021A628_0E 
  1F8:  	Case  ==  00000002 
  204:  		ExecWait  $Script_802189D4_0E 
  210:  EndSwitch
  218:  Return
  220:  End
}

#new:IdleAnimations $IdleAnimations_80219818_0E {
.Status:Normal    00260201
.Status:Stone     00260200
.Status:Sleep     00260208
.Status:Poison    00260201
.Status:Stop      00260200
.Status:Static    00260201
.Status:Paralyze  00260200
.Status:Dizzy     00260207
.Status:Fear      00260207
.Status:End
}

#new:IdleAnimations $IdleAnimations_80219864_0E {
.Status:Normal    00260203
.Status:Stone     00260200
.Status:Sleep     00260208
.Status:Poison    00260201
.Status:Stop      00260200
.Status:Static    00260203
.Status:Paralyze  00260200
.Status:Dizzy     00260207
.Status:Fear      00260207
.Status:End
}

#new:Script $Script_Idle_802198FC_0E {
    0:  Label  A
    C:  Call  RandInt   ( 00000050 *Var0 )
   20:  Add   *Var0  00000050 
   30:  Loop  *Var0 
   3C:  	Label  0
   48:  	Call  GetStatusFlags    ( .Actor:Self *Var1 )
   5C:  	If  *Var1  &  ~Flags:StatusFlags:Sleep|Frozen|Fear|Paralyze|Dizzy|Stone|Stop % 35D000
   6C:  		Wait  1`
   78:  		Goto  0
   84:  	EndIf
   8C:  	Wait  1`
   98:  EndLoop
   A0:  Call  GetActorPos       ( .Actor:Self *Var0 *Var1 *Var2 )
   BC:  Add   *Var0  00000005 
   CC:  Call  SetActorIdleSpeed ( .Actor:Self *Fixed[1.0] )
   E0:  Call  SetIdleAnimations ( .Actor:Self 00000001 $IdleAnimations_80219864_0E )
   F8:  Call  SetIdleGoal       ( .Actor:Self *Var0 *Var1 *Var2 )
  114:  Call  IdleRunToGoal     ( .Actor:Self  0` )
  128:  Call  SetIdleAnimations ( .Actor:Self 00000001 $IdleAnimations_80219818_0E )
  140:  Loop  00000014 
  14C:  	Label  1
  158:  	Call  GetStatusFlags    ( .Actor:Self *Var1 )
  16C:  	If  *Var1  &  ~Flags:StatusFlags:Sleep|Frozen|Fear|Paralyze|Dizzy|Stone|Stop % 35D000
  17C:  		Wait  1`
  188:  		Goto  1
  194:  	EndIf
  19C:  	Wait  1`
  1A8:  EndLoop
  1B0:  Call  GetActorPos       ( .Actor:Self *Var0 *Var1 *Var2 )
  1CC:  Sub   *Var0  00000005 
  1DC:  Call  SetActorIdleSpeed ( .Actor:Self *Fixed[1.0] )
  1F0:  Call  SetIdleAnimations ( .Actor:Self 00000001 $IdleAnimations_80219864_0E )
  208:  Call  SetIdleGoal       ( .Actor:Self *Var0 *Var1 *Var2 )
  224:  Call  IdleRunToGoal     ( .Actor:Self  0` )
  238:  Call  SetIdleAnimations ( .Actor:Self 00000001 $IdleAnimations_80219818_0E )
  250:  Loop  00000050 
  25C:  	Label  2
  268:  	Call  GetStatusFlags    ( .Actor:Self *Var1 )
  27C:  	If  *Var1  &  ~Flags:StatusFlags:Sleep|Frozen|Fear|Paralyze|Dizzy|Stone|Stop % 35D000
  28C:  		Wait  1`
  298:  		Goto  2
  2A4:  	EndIf
  2AC:  	Wait  1`
  2B8:  EndLoop
  2C0:  Goto  A
  2CC:  Return
  2D4:  End
}

#new:Script $Script_HandleEvent_80219BD8_0E {
    0:  Call  UseIdleAnimation  ( .Actor:Self .False )
   14:  Call  EnableIdleScript  ( .Actor:Self 00000000 )
   28:  Call  SetActorScale     ( .Actor:Self *Fixed[1.0] *Fixed[1.0] *Fixed[1.0] )
   44:  Call  GetLastEvent      ( .Actor:Self *Var0 )
   58:  Switch  *Var0 
   64:  	CaseOR  ==  .Event:HitCombo % 9
   70:  	CaseOR  ==  .Event:Hit % A
   7C:  		SetConst  *Var0  00000001 
   8C:  		SetConst  *Var1  00260205 
   9C:  		ExecWait  DoNormalHit 
   A8:  	EndCaseGroup
   B0:  	Case  ==  .Event:BurnHit % E
   BC:  		SetConst  *Var0  00000001 
   CC:  		SetConst  *Var1  00260209 
   DC:  		SetConst  *Var2  0026020A 
   EC:  		ExecWait  DoBurnHit 
   F8:  	Case  ==  .Event:BurnDeath % 24
  104:  		SetConst  *Var0  00000001 
  114:  		SetConst  *Var1  00260209 
  124:  		SetConst  *Var2  0026020A 
  134:  		ExecWait  DoBurnHit 
  140:  		SetConst  *Var0  00000001 
  150:  		SetConst  *Var1  0026020A 
  160:  		ExecWait  DoDeath 
  16C:  		Return
  174:  	Case  ==  .Event:SpinSmashHit % B
  180:  		SetConst  *Var0  00000001 
  190:  		SetConst  *Var1  00260205 
  1A0:  		ExecWait  DoSpinSmashHit 
  1AC:  	Case  ==  .Event:SpinSmashDeath % 21
  1B8:  		SetConst  *Var0  00000001 
  1C8:  		SetConst  *Var1  00260205 
  1D8:  		ExecWait  DoSpinSmashHit 
  1E4:  		SetConst  *Var0  00000001 
  1F4:  		SetConst  *Var1  00260206 
  204:  		ExecWait  DoDeath 
  210:  		Return
  218:  	Case  ==  .Event:ShockHit % 2F
  224:  		Call  SetActorRotationOffset    ( .Actor:Self 00000000 00000000 00000000 )
  240:  		Call  SetActorRotation  ( .Actor:Self 00000000 00000000 00000000 )
  25C:  		Call  EnableActorGlow   ( .Actor:Self .False )
  270:  		Call  SetPartEventBits  ( .Actor:Self 00000001 00400000 .False )
  28C:  		Call  SetActorVar       ( .Actor:Self 00000000 00000000 )
  2A4:  		Call  SetIdleAnimations ( .Actor:Self 00000001 $IdleAnimations_80219818_0E )
  2BC:  		SetConst  *Var0  00000001 
  2CC:  		SetConst  *Var1  0026020E 
  2DC:  		ExecWait  DoShockHit 
  2E8:  		SetConst  *Var0  00000001 
  2F8:  		SetConst  *Var1  00260205 
  308:  		ExecWait  DoJumpBack 
  314:  		Call  JumpToGoal        ( .Actor:Self  5` .False .True .False )
  334:  		Call  SetAnimationRate  ( .Actor:Self 00000001 *Fixed[2.0] )
  34C:  		Call  SetAnimation      ( .Actor:Self 00000001 00260207 )
  364:  		Call  SetGoalToHome     ( .Actor:Self )
  374:  		Call  SetActorSpeed     ( .Actor:Self *Fixed[8.0] )
  388:  		Call  RunToGoal ( .Actor:Self  0` .False )
  3A0:  		Call  SetAnimationRate  ( .Actor:Self 00000001 *Fixed[1.0] )
  3B8:  		Wait  5`
  3C4:  		Call  SetAnimation      ( .Actor:Self 00000001 00260201 )
  3DC:  		Call  SetActorJumpGravity       ( .Actor:Self *Fixed[1.6] )
  3F0:  		Call  JumpToGoal        ( .Actor:Self  5` .False .True .False )
  410:  	Case  ==  .Event:ShockDeath % 26
  41C:  		Call  SetActorRotationOffset    ( .Actor:Self 00000000 00000000 00000000 )
  438:  		Call  SetActorRotation  ( .Actor:Self 00000000 00000000 00000000 )
  454:  		Call  EnableActorGlow   ( .Actor:Self .False )
  468:  		Call  SetPartEventBits  ( .Actor:Self 00000001 00400000 .False )
  484:  		Call  SetActorVar       ( .Actor:Self 00000000 00000000 )
  49C:  		Call  SetIdleAnimations ( .Actor:Self 00000001 $IdleAnimations_80219818_0E )
  4B4:  		SetConst  *Var0  00000001 
  4C4:  		SetConst  *Var1  0026020E 
  4D4:  		ExecWait  DoShockHit 
  4E0:  		SetConst  *Var0  00000001 
  4F0:  		SetConst  *Var1  00260206 
  500:  		ExecWait  DoDeath 
  50C:  		Return
  514:  	Case  ==  .Event:StarBeam % 13
  520:  		Call  GetActorVar   ( .Actor:Self 00000000 *Var0 )
  538:  		If  *Var0  ==  00000001 
  548:  			Call  SetActorRotationOffset    ( .Actor:Self 00000000 00000000 00000000 )
  564:  			Call  SetActorRotation  ( .Actor:Self 00000000 00000000 00000000 )
  580:  			Call  EnableActorGlow   ( .Actor:Self .False )
  594:  			Call  SetPartEventBits  ( .Actor:Self 00000001 00400000 .False )
  5B0:  			Call  SetActorVar       ( .Actor:Self 00000000 00000000 )
  5C8:  			Call  SetIdleAnimations ( .Actor:Self 00000001 $IdleAnimations_80219818_0E )
  5E0:  		EndIf
  5E8:  		SetConst  *Var0  00000001 
  5F8:  		SetConst  *Var1  00260201 
  608:  		ExecWait  DoImmune 
  614:  	CaseOR  ==  00000017 % 17
  620:  	CaseOR  ==  .Event:Immune % 19
  62C:  	CaseOR  ==  .Event:AirLiftFailed % 1F
  638:  		SetConst  *Var0  00000001 
  648:  		SetConst  *Var1  00260201 
  658:  		ExecWait  DoImmune 
  664:  	EndCaseGroup
  66C:  	Case  ==  .Event:Death % 20
  678:  		SetConst  *Var0  00000001 
  688:  		SetConst  *Var1  00260205 
  698:  		ExecWait  DoNormalHit 
  6A4:  		Wait  10`
  6B0:  		SetConst  *Var0  00000001 
  6C0:  		SetConst  *Var1  00260206 
  6D0:  		ExecWait  DoDeath 
  6DC:  		Return
  6E4:  	Case  ==  .Event:EndFirstStrike % 35
  6F0:  		Call  SetAnimationRate  ( .Actor:Self 00000001 *Fixed[2.0] )
  708:  		Call  SetAnimation  ( .Actor:Self 00000001 00260203 )
  720:  		Call  SetGoalToHome ( .Actor:Self )
  730:  		Call  SetActorSpeed ( .Actor:Self *Fixed[4.0] )
  744:  		Call  RunToGoal     ( .Actor:Self  0` .False )
  75C:  		Call  SetAnimationRate  ( .Actor:Self 00000001 *Fixed[1.0] )
  774:  		Call  HPBarToHome   ( .Actor:Self )
  784:  	Case  ==  .Event:RecoverStatus % 31
  790:  		SetConst  *Var0  00000001 
  7A0:  		SetConst  *Var1  00260201 
  7B0:  		ExecWait  DoRecover 
  7BC:  	Case  ==  .Event:ScareAway % 39
  7C8:  		SetConst  *Var0  00000001 
  7D8:  		SetConst  *Var1  00260203 
  7E8:  		SetConst  *Var2  00260205 
  7F8:  		ExecWait  DoScareAway 
  804:  		Return
  80C:  	Case  ==  .Event:BeginAirLift % 3A
  818:  		SetConst  *Var0  00000001 
  828:  		SetConst  *Var1  00260203 
  838:  		ExecWait  DoAirLift 
  844:  	Case  ==  .Event:BlowAway % 16
  850:  		SetConst  *Var0  00000001 
  860:  		SetConst  *Var1  00260205 
  870:  		ExecWait  DoBlowAway 
  87C:  		Return
  884:  	Default
  88C:  EndSwitch
  894:  Call  SetAnimation      ( .Actor:Self 00000001 00260201 )
  8AC:  Call  EnableIdleScript  ( .Actor:Self 00000001 )
  8C0:  Call  UseIdleAnimation  ( .Actor:Self .True )
  8D4:  Return
  8DC:  End
}

#new:FloatTable $FloatTable_8021A4BC_0E {
0.0      0.017452 0.034899 0.052336 0.069756 0.087156 0.104528 0.121869
0.139173 0.156434 0.173648 0.190809 0.207912 0.224951 0.241922 0.258819
0.275637 0.292372 0.309017 0.325568 0.34202  0.358368 0.374607 0.390731
0.406737 0.422618 0.438371 0.45399  0.469472 0.48481  0.5      0.515038
0.529919 0.544639 0.559193 0.573576 0.587785 0.601815 0.615661 0.62932
0.642788 0.656059 0.669131 0.681998 0.694658 0.707107 0.71934  0.731354
0.743145 0.75471  0.766044 0.777146 0.788011 0.798636 0.809017 0.819152
0.829038 0.838671 0.848048 0.857167 0.866025 0.87462  0.882948 0.891007
0.898794 0.906308 0.913545 0.920505 0.927184 0.93358  0.939693 0.945519
0.951057 0.956305 0.961262 0.965926 0.970296 0.97437  0.978148 0.981627
0.984808 0.987688 0.990268 0.992546 0.994522 0.996195 0.997564 0.99863
0.999391 0.999848 1.0
}

#new:Script $Script_TakeTurn_8021A628_0E {
    0:  Call  UseIdleAnimation  ( .Actor:Self .False )
   14:  Call  EnableIdleScript  ( .Actor:Self 00000000 )
   28:  Call  SetTargetActor    ( .Actor:Self .Actor:Player )
   3C:  Call  UseBattleCamPreset    ( 0000003F )
   4C:  Call  BattleCamTargetActor  ( .Actor:Self )
   5C:  Call  8024ECF8  ( FFFFFFFF 00000001 00000000 )
   74:  Call  SetAnimation      ( .Actor:Self 00000001 00260203 )
   8C:  Call  SetGoalToTarget   ( .Actor:Self )
   9C:  Call  AddGoalPos        ( .Actor:Self  50`  0`  0` )
   B8:  Call  SetActorSpeed     ( .Actor:Self *Fixed[6.0] )
   CC:  Call  RunToGoal ( .Actor:Self  0` .False )
   E4:  Call  SetAnimation      ( .Actor:Self 00000001 00260201 )
   FC:  Call  SetActorDispOffset    ( .Actor:Self 00000000 FFFFFFFF 00000000 )
  118:  Wait  1`
  124:  Call  SetActorDispOffset    ( .Actor:Self 00000000 FFFFFFFE 00000000 )
  140:  Wait  5`
  14C:  Call  SetActorDispOffset    ( .Actor:Self 00000000 00000000 00000000 )
  168:  Call  SetAnimation      ( .Actor:Self 00000001 00260204 )
  180:  Call  EnemyTestTarget   ( .Actor:Self *Var0 ~Flags:DamageType:0 00000000 00000001 00000010 )
  1A4:  Switch  *Var0 
  1B0:  	CaseOR  ==  .HitResult:Miss % 6
  1BC:  	CaseOR  ==  .HitResult:Lucky % 5
  1C8:  		Set   *VarA  *Var0 
  1D8:  		Call  SetGoalToTarget   ( .Actor:Self )
  1E8:  		Call  GetGoalPos        ( .Actor:Self *Var0 *Var1 *Var2 )
  204:  		Sub   *Var0  0000000A 
  214:  		Set   *Var1  0000000A 
  224:  		Add   *Var2  00000003 
  234:  		Call  SetGoalPos        ( .Actor:Self *Var0 *Var1 *Var2 )
  250:  		Call  SetActorJumpGravity   ( .Actor:Self *Fixed[1.2] )
  264:  		Thread
  26C:  			Call  GetActorPos   ( .Actor:Self *Var1 *Var2 *Var0 )
  288:  			Set   *Var0  00000000 
  298:  			Loop  00000010 
  2A4:  				Call  GetActorPos   ( .Actor:Self *Var4 *Var5 *Var6 )
  2C0:  				Call  $Function_802181E4_0E ( *Var1 *Var2 *Var4 *Var5 *Var0 )
  2E0:  				Call  SetActorRotation      ( .Actor:Self 00000000 00000000 *Var0 )
  2FC:  				Set   *Var1  *Var4 
  30C:  				Set   *Var2  *Var5 
  31C:  				Set   *Var3  *Var6 
  32C:  				Wait  1`
  338:  			EndLoop
  340:  		EndThread
  348:  		Thread
  350:  			Wait  6`
  35C:  			Call  SetAnimation  ( .Actor:Self 00000001 00260204 )
  374:  		EndThread
  37C:  		Call  JumpToGoal    ( .Actor:Self  16` .False .True .False )
  39C:  		Call  SetAnimation  ( .Actor:Self 00000001 00260208 )
  3B4:  		Call  SetActorScale ( .Actor:Self *Fixed[1.1] *Fixed[0.8] *Fixed[1.0] )
  3D0:  		Call  SetActorDispOffset    ( .Actor:Self 00000000 00000005 00000000 )
  3EC:  		Wait  1`
  3F8:  		Call  SetActorScale ( .Actor:Self *Fixed[1.3] *Fixed[0.5] *Fixed[1.0] )
  414:  		Call  SetActorDispOffset    ( .Actor:Self 00000000 FFFFFFFE 00000000 )
  430:  		Wait  1`
  43C:  		Call  SetActorScale ( .Actor:Self *Fixed[1.0] *Fixed[1.0] *Fixed[1.0] )
  458:  		Call  SetActorDispOffset    ( .Actor:Self 00000000 00000007 00000000 )
  474:  		Call  SetAnimation  ( .Actor:Self 00000001 00260205 )
  48C:  		Wait  5`
  498:  		If  *VarA  ==  .HitResult:Lucky % 5
  4A8:  			Call  EnemyTestTarget   ( .Actor:Self *Var0 ~Flags:DamageType:TriggerLucky 00000000 00000000 00000000 )
  4CC:  		EndIf
  4D4:  		Wait  5`
  4E0:  		Call  SetActorDispOffset    ( .Actor:Self 00000000 00000000 00000000 )
  4FC:  		Call  SetAnimation      ( .Actor:Self 00000001 00260204 )
  514:  		Call  SetGoalToTarget   ( .Actor:Self )
  524:  		Call  GetGoalPos        ( .Actor:Self *Var0 *Var1 *Var2 )
  540:  		Add   *Var0  00000014 
  550:  		Set   *Var1  00000000 
  560:  		Call  SetGoalPos        ( .Actor:Self *Var0 *Var1 *Var2 )
  57C:  		Call  SetActorJumpGravity   ( .Actor:Self *Fixed[2.0] )
  590:  		Thread
  598:  			Wait  4`
  5A4:  			Set   *Var0  000000B4 
  5B4:  			Loop  00000004 
  5C0:  				Sub   *Var0  0000002D 
  5D0:  				Call  SetActorRotation  ( .Actor:Self 00000000 00000000 *Var0 )
  5EC:  				Wait  1`
  5F8:  			EndLoop
  600:  			Call  SetAnimation  ( .Actor:Self 00000001 00260204 )
  618:  		EndThread
  620:  		Call  JumpToGoal        ( .Actor:Self  15` .False .True .False )
  640:  		Call  SetAnimation      ( .Actor:Self 00000001 00260207 )
  658:  		Wait  5`
  664:  		Call  UseBattleCamPreset    ( 00000002 )
  674:  		Call  YieldTurn ( )
  680:  		Call  SetActorYaw       ( .Actor:Self  180` )
  694:  		Call  AddActorDecoration    ( .Actor:Self 00000001 00000000 .Decoration:Sweat )
  6B0:  		Call  SetAnimationRate  ( .Actor:Self 00000001 *Fixed[2.0] )
  6C8:  		Call  SetGoalToHome     ( .Actor:Self )
  6D8:  		Call  SetActorSpeed     ( .Actor:Self *Fixed[8.0] )
  6EC:  		Call  RunToGoal ( .Actor:Self  0` .False )
  704:  		Call  SetAnimationRate  ( .Actor:Self 00000001 *Fixed[1.0] )
  71C:  		Call  SetActorYaw       ( .Actor:Self  0` )
  730:  		Wait  5`
  73C:  		Call  SetAnimation      ( .Actor:Self 00000001 00260201 )
  754:  		Call  SetActorJumpGravity   ( .Actor:Self *Fixed[1.6] )
  768:  		Call  JumpToGoal        ( .Actor:Self  5` .False .True .False )
  788:  		Call  RemoveActorDecoration ( .Actor:Self 00000001 00000000 )
  7A0:  		Call  EnableIdleScript  ( .Actor:Self 00000001 )
  7B4:  		Call  UseIdleAnimation  ( .Actor:Self .True )
  7C8:  		Return
  7D0:  	EndCaseGroup
  7D8:  	Default
  7E0:  		Call  SetGoalToTarget       ( .Actor:Self )
  7F0:  		Call  SetActorJumpGravity   ( .Actor:Self *Fixed[1.2] )
  804:  		Thread
  80C:  			Call  GetActorPos   ( .Actor:Self *Var1 *Var2 *Var0 )
  828:  			Set   *Var0  00000000 
  838:  			Loop  00000010 
  844:  				Call  GetActorPos   ( .Actor:Self *Var4 *Var5 *Var6 )
  860:  				Call  $Function_802181E4_0E ( *Var1 *Var2 *Var4 *Var5 *Var0 )
  880:  				Call  SetActorRotation      ( .Actor:Self 00000000 00000000 *Var0 )
  89C:  				Set   *Var1  *Var4 
  8AC:  				Set   *Var2  *Var5 
  8BC:  				Set   *Var3  *Var6 
  8CC:  				Wait  1`
  8D8:  			EndLoop
  8E0:  		EndThread
  8E8:  		Thread
  8F0:  			Wait  6`
  8FC:  			Call  SetAnimation  ( .Actor:Self 00000001 00260204 )
  914:  		EndThread
  91C:  		Call  JumpToGoal    ( .Actor:Self  16` .False .True .False )
  93C:  		Call  SetAnimation  ( .Actor:Self 00000001 0026020B )
  954:  		Call  SetActorScale ( .Actor:Self *Fixed[1.1] *Fixed[0.8] *Fixed[1.0] )
  970:  		Wait  1`
  97C:  		Call  SetActorScale ( .Actor:Self *Fixed[1.3] *Fixed[0.5] *Fixed[1.0] )
  998:  		Wait  1`
  9A4:  EndSwitch
  9AC:  Call  EnemyDamageTarget ( .Actor:Self *Var0 ~Flags:DamageType:0 00000000 00000000 00000001 00000020 )
  9D4:  Switch  *Var0 
  9E0:  	CaseOR  ==  .HitResult:Hit % 0
  9EC:  	CaseOR  ==  .HitResult:QuakeImmune % 2
  9F8:  		Call  UseBattleCamPreset    ( 00000002 )
  A08:  		Call  SetActorScale ( .Actor:Self *Fixed[1.1] *Fixed[0.8] *Fixed[1.0] )
  A24:  		Wait  1`
  A30:  		Call  SetActorScale ( .Actor:Self *Fixed[1.0] *Fixed[1.0] *Fixed[1.0] )
  A4C:  		Wait  1`
  A58:  		Call  SetActorRotation      ( .Actor:Self 00000000 00000000 00000000 )
  A74:  		Call  SetActorDispOffset    ( .Actor:Self 00000000 00000000 00000000 )
  A90:  		Call  SetAnimation  ( .Actor:Self 00000001 00260201 )
  AA8:  		Call  GetGoalPos    ( .Actor:Self *Var0 *Var1 *Var2 )
  AC4:  		Add   *Var0  00000028 
  AD4:  		Set   *Var1  00000000 
  AE4:  		Call  SetActorJumpGravity   ( .Actor:Self *Fixed[1.8] )
  AF8:  		Call  SetGoalPos    ( .Actor:Self *Var0 *Var1 *Var2 )
  B14:  		Call  JumpToGoal    ( .Actor:Self  10` .False .True .False )
  B34:  		Add   *Var0  0000001E 
  B44:  		Call  SetGoalPos    ( .Actor:Self *Var0 *Var1 *Var2 )
  B60:  		Call  JumpToGoal    ( .Actor:Self  8` .False .True .False )
  B80:  		Add   *Var0  00000014 
  B90:  		Call  SetGoalPos    ( .Actor:Self *Var0 *Var1 *Var2 )
  BAC:  		Call  JumpToGoal    ( .Actor:Self  6` .False .True .False )
  BCC:  		Call  SetAnimation  ( .Actor:Self 00000001 00260201 )
  BE4:  		Wait  3`
  BF0:  		Call  YieldTurn ( )
  BFC:  		Call  SetAnimationRate      ( .Actor:Self 00000001 *Fixed[2.0] )
  C14:  		Call  SetAnimation  ( .Actor:Self 00000001 00260203 )
  C2C:  		Call  SetGoalToHome ( .Actor:Self )
  C3C:  		Call  SetActorSpeed ( .Actor:Self *Fixed[8.0] )
  C50:  		Call  RunToGoal     ( .Actor:Self  0` .False )
  C68:  		Call  SetAnimationRate      ( .Actor:Self 00000001 *Fixed[1.0] )
  C80:  	EndCaseGroup
  C88:  EndSwitch
  C90:  Call  EnableIdleScript  ( .Actor:Self 00000001 )
  CA4:  Call  UseIdleAnimation  ( .Actor:Self .True )
  CB8:  Return
  CC0:  End
}

