% Automatically dumped from section 22

#new:Actor $22_HammerBros {
% stats
[Index]        4Bb 
[Level]        27`b 
[MaxHP]        12`b 
[Coins]         2`b 
[Flags]       00000000 
[StatusTable] $StatusTable_8021E4F4_22 
% ai
[PartsCount]    6`s 
[PartsTable]  $PartsTable_8021E5A0_22 
[Script]      $Script_Init_8021E6A0_22 
% move effectiveness
[Escape]       30`b 
[Item]         40`b 
[AirLift]      75`b 
[Hurricane]    60`b % Bow's "Spook" as well
[UpAndAway]    95`b 
[PowerBounce]  80`b 
[SpinSmash]     0`b % weight (0-4)
% ui positions
[Size]         28`b  38`b % width height
[HealthBar]     0`b   0`b % dx dy
[StatusTurn]  -10`b  20`b % dx dy
[StatusIcon]   10`b  35`b % dx dy
}

#new:IdleAnimations $IdleAnimations_8021E490_22 {
.Status:Normal    005A0002
.Status:Stone     005A0000
.Status:Sleep     005A0011
.Status:Poison    005A0002
.Status:Stop      005A0000
.Status:Static    005A0002
.Status:Paralyze  005A0000
.Status:Dizzy     005A0012
.Status:Fear      005A0012
.Status:End
}

#new:IdleAnimations $IdleAnimations_8021E4DC_22 {
.Status:Normal    005A000D
.Status:End
}

#new:DefenseTable $DefenseTable_8021E4E8_22 {
.Element:Normal 00000001
.Element:End
}

#new:StatusTable $StatusTable_8021E4F4_22 {
.Status:Normal      0`
.Status:Default     0`
.Status:Sleep      50`
.Status:Poison     60`
.Status:Frozen      0`
.Status:Dizzy      70`
.Status:Fear        0`
.Status:Static     80`
.Status:Paralyze   70`
.Status:Shrink     70`
.Status:Stop       80`
.Status:DefaultTurnMod    0`
.Status:SleepTurnMod     -1`
.Status:PoisonTurnMod     0`
.Status:FrozenTurnMod     0`
.Status:DizzyTurnMod     -1`
.Status:FearTurnMod       0`
.Status:StaticTurnMod     0`
.Status:ParalyzeTurnMod   0`
.Status:ShrinkTurnMod     0`
.Status:StopTurnMod      -2`
.Status:End
}

#new:PartsTable $PartsTable_8021E5A0_22 {
00800000 01000000 FD2300FF $IdleAnimations_8021E490_22 $DefenseTable_8021E4E8_22 00000000 00000000 FDF60000 00000000 
00120001 02000000 000000FF $IdleAnimations_8021E4DC_22 $DefenseTable_8021E4E8_22 00000000 00000000 00000000 00000000 
00120001 03000000 000000FF $IdleAnimations_8021E4DC_22 $DefenseTable_8021E4E8_22 00000000 00000000 00000000 00000000 
00120001 04000000 000000FF $IdleAnimations_8021E4DC_22 $DefenseTable_8021E4E8_22 00000000 00000000 00000000 00000000 
00120001 05000000 000000FF $IdleAnimations_8021E4DC_22 $DefenseTable_8021E4E8_22 00000000 00000000 00000000 00000000 
00120001 06000000 000000FF $IdleAnimations_8021E4DC_22 $DefenseTable_8021E4E8_22 00000000 00000000 00000000 00000000 
}

#new:Script $Script_Init_8021E6A0_22 {
    0:  Call  BindTakeTurn  ( .Actor:Self $Script_TakeTurn_8022028C_22 )
   14:  Call  BindIdle      ( .Actor:Self $Script_Idle_8021E704_22 )
   28:  Call  BindHandleEvent   ( .Actor:Self $Script_HandleEvent_8021E860_22 )
   3C:  Call  SetActorVar   ( .Actor:Self 00000008 00000000 )
   54:  Return
   5C:  End
}

#new:Script $Script_Idle_8021E704_22 {
    0:  Label  0
    C:  Call  GetStatusFlags    ( .Actor:Self *Var0 )
   20:  Switch  *Var0 
   2C:  	Case  &  ~Flags:StatusFlags:Sleep % 1000
   38:  		Call  SetTargetOffset   ( .Actor:Self 00000001  -5`  15` )
   54:  		Call  8027D4C8  ( FFFFFF81 00000001 00000000 00000000 )
   70:  	Default
   78:  		Call  GetActorVar   ( .Actor:Self 00000008 *Var0 )
   90:  		Switch  *Var0 
   9C:  			Case  ==  00000000 
   A8:  				Call  SetTargetOffset   ( .Actor:Self 00000001  -3`  35` )
   C4:  				Call  8027D4C8  ( FFFFFF81 00000001 FFFFFFFD FFFFFFF6 )
   E0:  			Case  ==  00000001 
   EC:  				Call  SetTargetOffset   ( .Actor:Self 00000001  -5`  15` )
  108:  				Call  8027D4C8  ( FFFFFF81 00000001 00000000 00000000 )
  124:  		EndSwitch
  12C:  EndSwitch
  134:  Wait  1`
  140:  Goto  0
  14C:  Return
  154:  End
}

#new:Script $Script_HandleEvent_8021E860_22 {
    0:  Call  UseIdleAnimation  ( .Actor:Self .False )
   14:  Call  EnableIdleScript  ( .Actor:Self 00000000 )
   28:  Call  GetLastEvent      ( .Actor:Self *Var0 )
   3C:  Switch  *Var0 
   48:  	CaseOR  ==  .Event:HitCombo % 9
   54:  	CaseOR  ==  .Event:Hit % A
   60:  		SetConst  *Var0  00000001 
   70:  		SetConst  *Var1  005A000E 
   80:  		ExecWait  DoNormalHit 
   8C:  	EndCaseGroup
   94:  	Case  ==  .Event:BurnHit % E
   A0:  		SetConst  *Var0  00000001 
   B0:  		SetConst  *Var1  005A000F 
   C0:  		SetConst  *Var2  005A0010 
   D0:  		ExecWait  DoBurnHit 
   DC:  	Case  ==  .Event:BurnDeath % 24
   E8:  		SetConst  *Var0  00000001 
   F8:  		SetConst  *Var1  005A000F 
  108:  		SetConst  *Var2  005A0010 
  118:  		ExecWait  DoBurnHit 
  124:  		SetConst  *Var0  00000001 
  134:  		SetConst  *Var1  005A0010 
  144:  		ExecWait  DoDeath 
  150:  		Return
  158:  	Case  ==  .Event:SpinSmashHit % B
  164:  		SetConst  *Var0  00000001 
  174:  		SetConst  *Var1  005A000E 
  184:  		ExecWait  DoSpinSmashHit 
  190:  	Case  ==  .Event:SpinSmashDeath % 21
  19C:  		SetConst  *Var0  00000001 
  1AC:  		SetConst  *Var1  005A000E 
  1BC:  		ExecWait  DoSpinSmashHit 
  1C8:  		SetConst  *Var0  00000001 
  1D8:  		SetConst  *Var1  005A000E 
  1E8:  		ExecWait  DoDeath 
  1F4:  		Return
  1FC:  	CaseOR  ==  00000017 % 17
  208:  	CaseOR  ==  .Event:Immune % 19
  214:  		SetConst  *Var0  00000001 
  224:  		SetConst  *Var1  005A0015 
  234:  		ExecWait  DoImmune 
  240:  		Call  GetStatusFlags    ( .Actor:Self *Var0 )
  254:  		If  *Var0  !&  ~Flags:StatusFlags:Sleep|Frozen|Fear|Paralyze|Dizzy|Stone|Stop % 35D000
  264:  			Call  SetAnimation  ( .Actor:Self 00000001 005A0017 )
  27C:  			Wait  10`
  288:  		EndIf
  290:  	EndCaseGroup
  298:  	Case  ==  .Event:Death % 20
  2A4:  		SetConst  *Var0  00000001 
  2B4:  		SetConst  *Var1  005A000E 
  2C4:  		ExecWait  DoNormalHit 
  2D0:  		Wait  10`
  2DC:  		SetConst  *Var0  00000001 
  2EC:  		SetConst  *Var1  005A000E 
  2FC:  		ExecWait  DoDeath 
  308:  		Return
  310:  	Case  ==  .Event:RecoverStatus % 31
  31C:  		SetConst  *Var0  00000001 
  32C:  		SetConst  *Var1  005A0002 
  33C:  		ExecWait  DoRecover 
  348:  	Case  ==  .Event:ScareAway % 39
  354:  		SetConst  *Var0  00000001 
  364:  		SetConst  *Var1  005A0007 
  374:  		SetConst  *Var2  005A000E 
  384:  		ExecWait  DoScareAway 
  390:  		Return
  398:  	Case  ==  .Event:BeginAirLift % 3A
  3A4:  		SetConst  *Var0  00000001 
  3B4:  		SetConst  *Var1  005A0007 
  3C4:  		ExecWait  DoAirLift 
  3D0:  	Case  ==  .Event:BlowAway % 16
  3DC:  		Call  GetStatusFlags    ( .Actor:Self *Var0 )
  3F0:  		If  *Var0  !&  ~Flags:StatusFlags:Sleep|Frozen|Fear|Paralyze|Dizzy|Stone|Stop % 35D000
  400:  			If  *Var0  &  ~Flags:StatusFlags:Shrink % 80000
  410:  				Call  SetActorDispOffset    ( .Actor:Self FFFFFFFE 00000001 00000000 )
  42C:  			Else
  434:  				Call  SetActorDispOffset    ( .Actor:Self FFFFFFFB 00000003 00000000 )
  450:  			EndIf
  458:  		EndIf
  460:  		SetConst  *Var0  00000001 
  470:  		SetConst  *Var1  005A000E 
  480:  		ExecWait  DoBlowAway 
  48C:  		Return
  494:  	Case  ==  .Event:AirLiftFailed % 1F
  4A0:  		SetConst  *Var0  00000001 
  4B0:  		SetConst  *Var1  005A0002 
  4C0:  		ExecWait  DoImmune 
  4CC:  	Default
  4D4:  EndSwitch
  4DC:  Call  EnableIdleScript  ( .Actor:Self 00000001 )
  4F0:  Call  UseIdleAnimation  ( .Actor:Self .True )
  504:  Return
  50C:  End
}

#new:Script $Script_8021ED74_22 {
    0:  Call  UseIdleAnimation  ( .Actor:Self .False )
   14:  Call  EnableIdleScript  ( .Actor:Self 00000000 )
   28:  Call  SetTargetActor    ( .Actor:Self .Actor:Player )
   3C:  Call  GetBattlePhase    ( *Var0 )
   4C:  If  *Var0  ==  00000001 
   5C:  	Call  UseBattleCamPreset    ( 00000002 )
   6C:  	Call  MoveBattleCamOver     (  1` )
   7C:  EndIf
   84:  Call  GetBattlePhase    ( *Var0 )
   94:  If  *Var0  ==  00000001 
   A4:  	ChildThread
   AC:  		Set   *Var0  00000000 
   BC:  		Label  0
   C8:  		Add   *Var0  00000014 
   D8:  		Mod   *Var0  00000168 
   E8:  		Call  SetPartRotation   ( .Actor:Self 00000002 00000000 00000000 *Var0 )
  108:  		Wait  1`
  114:  		Goto  0
  120:  	EndChildThread
  128:  	Call  SetPartPos        ( .Actor:Self 00000002  0`  50`  0` )
  148:  	Call  SetPartFlagBits   ( .Actor:Self 00000002 00000001 .False )
  164:  	Call  SetAnimation      ( .Actor:Self 00000001 005A000C )
  17C:  	Goto  64
  188:  EndIf
  190:  ChildThread
  198:  	Set   *Var0  00000000 
  1A8:  	Label  0
  1B4:  	Add   *Var0  00000014 
  1C4:  	Mod   *Var0  00000168 
  1D4:  	Call  SetPartRotation   ( .Actor:Self 00000002 00000000 00000000 *Var0 )
  1F4:  	Wait  1`
  200:  	Goto  0
  20C:  EndChildThread
  214:  Call  GetActorPos   ( .Actor:Self *Var0 *Var1 *Var2 )
  230:  Sub   *Var0  00000017 
  240:  Add   *Var1  00000017 
  250:  Sub   *Var2  00000002 
  260:  Call  SetPartPos    ( .Actor:Self 00000002 *Var0 *Var1 *Var2 )
  280:  Call  SetAnimation  ( .Actor:Self 00000001 005A000C )
  298:  Wait  8`
  2A4:  Call  SetPartFlagBits   ( .Actor:Self 00000002 00000001 .False )
  2C0:  Label  64
  2CC:  Thread
  2D4:  	Wait  15`
  2E0:  	Call  SetAnimation  ( .Actor:Self 00000001 005A0002 )
  2F8:  EndThread
  300:  Call  GetStatusFlags    ( .Actor:Self *Var0 )
  314:  If  *Var0  &  ~Flags:StatusFlags:Shrink % 80000
  324:  	Call  SetPartScale  ( .Actor:Self 00000002 *Fixed[0.4] *Fixed[0.4] *Fixed[0.4] )
  344:  Else
  34C:  	Call  SetPartScale  ( .Actor:Self 00000002 *Fixed[1.0] *Fixed[1.0] *Fixed[1.0] )
  36C:  EndIf
  374:  Call  EnemyTestTarget   ( .Actor:Self *Var0 ~Flags:DamageType:0 00000000 00000001 00000010 )
  398:  Switch  *Var0 
  3A4:  	CaseOR  ==  .HitResult:Miss % 6
  3B0:  	CaseOR  ==  .HitResult:Lucky % 5
  3BC:  		Set   *VarA  *Var0 
  3CC:  		Call  SetPartSounds     ( .Actor:Self 00000002 .ActorSound:Jump 00000000 00000000 )
  3EC:  		Call  PlaySoundAtPart   ( .Actor:Self 00000002 000002E9 )
  404:  		Call  SetGoalToTarget   ( .Actor:Self )
  414:  		Call  GetGoalPos        ( .Actor:Self *Var0 *Var1 *Var2 )
  430:  		Sub   *Var0  00000014 
  440:  		Set   *Var1  0000000A 
  450:  		Call  SetPartJumpGravity    ( .Actor:Self 00000002 *Fixed[1.3] )
  468:  		Call  JumpPartTo        ( .Actor:Self 00000002 *Var0 *Var1 *Var2  15` .True )
  490:  		If  *VarA  ==  .HitResult:Lucky % 5
  4A0:  			Call  EnemyTestTarget   ( .Actor:Self *VarA ~Flags:DamageType:TriggerLucky 00000000 00000000 00000000 )
  4C4:  		EndIf
  4CC:  		Sub   *Var0  00000028 
  4DC:  		Call  JumpPartTo        ( .Actor:Self 00000002 *Var0 *Var1 *Var2  15` .True )
  504:  		Sub   *Var0  0000001E 
  514:  		Call  JumpPartTo        ( .Actor:Self 00000002 *Var0 *Var1 *Var2  10` .True )
  53C:  		Sub   *Var0  00000014 
  54C:  		Call  JumpPartTo        ( .Actor:Self 00000002 *Var0 *Var1 *Var2  5` .True )
  574:  		Call  SetPartFlagBits   ( .Actor:Self 00000002 00000001 .True )
  590:  		Wait  15`
  59C:  		Call  YieldTurn ( )
  5A8:  		Call  AddActorDecoration    ( .Actor:Self 00000001 00000000 .Decoration:Sweat )
  5C4:  		Wait  20`
  5D0:  		Call  RemoveActorDecoration ( .Actor:Self 00000001 00000000 )
  5E8:  		Call  EnableIdleScript  ( .Actor:Self 00000001 )
  5FC:  		Call  UseIdleAnimation  ( .Actor:Self .True )
  610:  		Return
  618:  	EndCaseGroup
  620:  EndSwitch
  628:  Call  SetPartSounds     ( .Actor:Self 00000002 .ActorSound:Jump 00000000 00000000 )
  648:  Call  PlaySoundAtPart   ( .Actor:Self 00000002 000002E9 )
  660:  Call  SetGoalToTarget   ( .Actor:Self )
  670:  Call  GetGoalPos        ( .Actor:Self *Var0 *Var1 *Var2 )
  68C:  Call  SetPartJumpGravity    ( .Actor:Self 00000002 *Fixed[1.3] )
  6A4:  Call  JumpPartTo        ( .Actor:Self 00000002 *Var0 *Var1 *Var2  15` .True )
  6CC:  Wait  2`
  6D8:  Call  EnemyDamageTarget ( .Actor:Self *Var0 ~Flags:DamageType:NoContact 00000000 ~DebuffType:Shrink:3:50` 00000005 00000020 )
  700:  Switch  *Var0 
  70C:  	CaseOR  ==  .HitResult:Hit % 0
  718:  	CaseOR  ==  .HitResult:QuakeImmune % 2
  724:  		Call  GetPartOffset ( .Actor:Self 00000002 *Var0 *Var1 *Var2 )
  744:  		Sub   *Var0  00000032 
  754:  		Set   *Var1  0000000A 
  764:  		Call  JumpPartTo    ( .Actor:Self 00000002 *Var0 *Var1 *Var2  20` .True )
  78C:  		Sub   *Var0  0000001E 
  79C:  		Call  JumpPartTo    ( .Actor:Self 00000002 *Var0 *Var1 *Var2  10` .True )
  7C4:  		Sub   *Var0  00000014 
  7D4:  		Call  JumpPartTo    ( .Actor:Self 00000002 *Var0 *Var1 *Var2  5` .True )
  7FC:  		Call  SetPartFlagBits   ( .Actor:Self 00000002 00000001 .True )
  818:  		Wait  20`
  824:  		Call  YieldTurn ( )
  830:  	EndCaseGroup
  838:  EndSwitch
  840:  Call  EnableIdleScript  ( .Actor:Self 00000001 )
  854:  Call  UseIdleAnimation  ( .Actor:Self .True )
  868:  Return
  870:  End
}

#new:Script $Script_8021F5EC_22 {
    0:  Call  SetAnimationRate  ( .Actor:Self 00000001 *Fixed[2.0] )
   18:  Call  SetAnimation  ( .Actor:Self 00000001 005A0002 )
   30:  Call  SetAnimation  ( .Actor:Self 00000001 005A000C )
   48:  Wait  4`
   54:  Call  SetPartFlagBits   ( .Actor:Self *Var0 00000001 .False )
   70:  Call  SetPartSounds ( .Actor:Self *Var0 .ActorSound:Jump 00000000 00000000 )
   90:  Call  PlaySoundAtPart   ( .Actor:Self *Var0 000002E9 )
   A8:  Call  SetGoalToTarget   ( .Actor:Self )
   B8:  Call  GetGoalPos    ( .Actor:Self *Var1 *Var2 *Var3 )
   D4:  Set   *Var2  0000000A 
   E4:  Call  RandInt       ( 0000003C *Var4 )
   F8:  Set   *Var5  0000001E 
  108:  Sub   *Var5  *Var4 
  118:  Add   *Var1  *Var5 
  128:  Call  SetPartJumpGravity    ( .Actor:Self *Var0 *Fixed[1.3] )
  140:  Call  JumpPartTo    ( .Actor:Self *Var0 *Var1 *Var2 *Var3  15` .True )
  168:  Sub   *Var1  00000032 
  178:  Set   *Var2  0000000A 
  188:  Call  JumpPartTo    ( .Actor:Self *Var0 *Var1 *Var2 *Var3  20` .True )
  1B0:  Sub   *Var1  0000001E 
  1C0:  Call  JumpPartTo    ( .Actor:Self *Var0 *Var1 *Var2 *Var3  10` .True )
  1E8:  Sub   *Var1  00000014 
  1F8:  Call  JumpPartTo    ( .Actor:Self *Var0 *Var1 *Var2 *Var3  5` .True )
  220:  Call  SetPartFlagBits   ( .Actor:Self *Var0 00000001 .True )
  23C:  Return
  244:  End
}

#new:Script $Script_8021F838_22 {
    0:  Call  SetAnimationRate  ( .Actor:Self 00000001 *Fixed[2.0] )
   18:  Call  SetAnimation  ( .Actor:Self 00000001 005A0002 )
   30:  Call  SetAnimation  ( .Actor:Self 00000001 005A000C )
   48:  Wait  4`
   54:  Call  SetPartFlagBits   ( .Actor:Self *Var0 00000001 .False )
   70:  Call  SetPartSounds ( .Actor:Self *Var0 .ActorSound:Jump 00000000 00000000 )
   90:  Call  PlaySoundAtPart   ( .Actor:Self *Var0 000002E9 )
   A8:  Call  SetGoalToTarget   ( .Actor:Self )
   B8:  Call  GetGoalPos    ( .Actor:Self *Var1 *Var2 *Var3 )
   D4:  Call  SetPartJumpGravity    ( .Actor:Self *Var0 *Fixed[1.3] )
   EC:  Call  JumpPartTo    ( .Actor:Self *Var0 *Var1 *Var2 *Var3  15` .True )
  114:  Sub   *Var1  00000032 
  124:  Set   *Var2  0000000A 
  134:  Call  JumpPartTo    ( .Actor:Self *Var0 *Var1 *Var2 *Var3  20` .True )
  15C:  Sub   *Var1  0000001E 
  16C:  Call  JumpPartTo    ( .Actor:Self *Var0 *Var1 *Var2 *Var3  10` .True )
  194:  Sub   *Var1  00000014 
  1A4:  Call  JumpPartTo    ( .Actor:Self *Var0 *Var1 *Var2 *Var3  5` .True )
  1CC:  Call  SetPartFlagBits   ( .Actor:Self *Var0 00000001 .True )
  1E8:  Return
  1F0:  End
}

#new:Script $Script_8021FA30_22 {
    0:  Call  UseIdleAnimation  ( .Actor:Self .False )
   14:  Call  EnableIdleScript  ( .Actor:Self 00000000 )
   28:  Call  SetTargetActor    ( .Actor:Self .Actor:Player )
   3C:  Thread
   44:  	Set   *Var0  00000000 
   54:  	Loop  00000064 
   60:  		Add   *Var0  00000014 
   70:  		Mod   *Var0  00000168 
   80:  		Call  SetPartRotation   ( .Actor:Self 00000002 00000000 00000000 *Var0 )
   A0:  		Call  SetPartRotation   ( .Actor:Self 00000003 00000000 00000000 *Var0 )
   C0:  		Call  SetPartRotation   ( .Actor:Self 00000004 00000000 00000000 *Var0 )
   E0:  		Call  SetPartRotation   ( .Actor:Self 00000005 00000000 00000000 *Var0 )
  100:  		Call  SetPartRotation   ( .Actor:Self 00000006 00000000 00000000 *Var0 )
  120:  		Wait  1`
  12C:  	EndLoop
  134:  EndThread
  13C:  Call  GetActorPos   ( .Actor:Self *Var0 *Var1 *Var2 )
  158:  Sub   *Var0  00000017 
  168:  Add   *Var1  00000017 
  178:  Sub   *Var2  00000002 
  188:  Call  SetPartPos    ( .Actor:Self 00000002 *Var0 *Var1 *Var2 )
  1A8:  Call  SetPartPos    ( .Actor:Self 00000003 *Var0 *Var1 *Var2 )
  1C8:  Call  SetPartPos    ( .Actor:Self 00000004 *Var0 *Var1 *Var2 )
  1E8:  Call  SetPartPos    ( .Actor:Self 00000005 *Var0 *Var1 *Var2 )
  208:  Call  SetPartPos    ( .Actor:Self 00000006 *Var0 *Var1 *Var2 )
  228:  Call  GetStatusFlags    ( .Actor:Self *Var0 )
  23C:  If  *Var0  &  ~Flags:StatusFlags:Shrink % 80000
  24C:  	Call  SetPartScale  ( .Actor:Self 00000002 *Fixed[0.4] *Fixed[0.4] *Fixed[0.4] )
  26C:  	Call  SetPartScale  ( .Actor:Self 00000003 *Fixed[0.4] *Fixed[0.4] *Fixed[0.4] )
  28C:  	Call  SetPartScale  ( .Actor:Self 00000004 *Fixed[0.4] *Fixed[0.4] *Fixed[0.4] )
  2AC:  	Call  SetPartScale  ( .Actor:Self 00000005 *Fixed[0.4] *Fixed[0.4] *Fixed[0.4] )
  2CC:  	Call  SetPartScale  ( .Actor:Self 00000006 *Fixed[0.4] *Fixed[0.4] *Fixed[0.4] )
  2EC:  Else
  2F4:  	Call  SetPartScale  ( .Actor:Self 00000002 *Fixed[1.0] *Fixed[1.0] *Fixed[1.0] )
  314:  	Call  SetPartScale  ( .Actor:Self 00000003 *Fixed[1.0] *Fixed[1.0] *Fixed[1.0] )
  334:  	Call  SetPartScale  ( .Actor:Self 00000004 *Fixed[1.0] *Fixed[1.0] *Fixed[1.0] )
  354:  	Call  SetPartScale  ( .Actor:Self 00000005 *Fixed[1.0] *Fixed[1.0] *Fixed[1.0] )
  374:  	Call  SetPartScale  ( .Actor:Self 00000006 *Fixed[1.0] *Fixed[1.0] *Fixed[1.0] )
  394:  EndIf
  39C:  Call  EnemyTestTarget   ( .Actor:Self *Var0 ~Flags:DamageType:0 00000000 00000001 00000010 )
  3C0:  Switch  *Var0 
  3CC:  	CaseOR  ==  .HitResult:Miss % 6
  3D8:  	CaseOR  ==  .HitResult:Lucky % 5
  3E4:  		Set   *VarA  *Var0 
  3F4:  		Set   *Var0  00000002 
  404:  		Exec  $Script_8021F5EC_22 
  410:  		Wait  5`
  41C:  		Set   *Var0  00000003 
  42C:  		Exec  $Script_8021F5EC_22 
  438:  		Wait  5`
  444:  		Set   *Var0  00000004 
  454:  		Exec  $Script_8021F5EC_22 
  460:  		Wait  5`
  46C:  		Set   *Var0  00000005 
  47C:  		Exec  $Script_8021F5EC_22 
  488:  		Wait  5`
  494:  		Set   *Var0  00000006 
  4A4:  		Exec  $Script_8021F5EC_22 
  4B0:  		Wait  5`
  4BC:  		Wait  20`
  4C8:  		Call  SetAnimation  ( .Actor:Self 00000001 005A0002 )
  4E0:  		If  *VarA  ==  00000005 
  4F0:  			Call  EnemyTestTarget   ( .Actor:Self *Var0 ~Flags:DamageType:TriggerLucky 00000000 00000000 00000000 )
  514:  		EndIf
  51C:  		Wait  15`
  528:  		Call  YieldTurn ( )
  534:  		Call  AddActorDecoration    ( .Actor:Self 00000001 00000000 .Decoration:Sweat )
  550:  		Wait  20`
  55C:  		Call  RemoveActorDecoration ( .Actor:Self 00000001 00000000 )
  574:  		Call  EnableIdleScript      ( .Actor:Self 00000001 )
  588:  		Call  UseIdleAnimation      ( .Actor:Self .True )
  59C:  		Return
  5A4:  	EndCaseGroup
  5AC:  EndSwitch
  5B4:  Thread
  5BC:  	Set   *Var0  00000002 
  5CC:  	Exec  $Script_8021F838_22 
  5D8:  	Wait  5`
  5E4:  	Set   *Var0  00000003 
  5F4:  	Exec  $Script_8021F838_22 
  600:  	Wait  5`
  60C:  	Set   *Var0  00000004 
  61C:  	Exec  $Script_8021F838_22 
  628:  	Wait  5`
  634:  	Set   *Var0  00000005 
  644:  	Exec  $Script_8021F838_22 
  650:  	Wait  5`
  65C:  	Set   *Var0  00000006 
  66C:  	Exec  $Script_8021F838_22 
  678:  EndThread
  680:  Wait  21`
  68C:  Wait  2`
  698:  Call  EnemyDamageTarget ( .Actor:Self *Var0 ~Flags:DamageType:NoContact 00000000 00000000 00000002 00000010 )
  6C0:  Wait  5`
  6CC:  Wait  2`
  6D8:  Call  EnemyDamageTarget ( .Actor:Self *Var0 ~Flags:DamageType:NoContact 00000000 00000000 00000002 00000040 )
  700:  Wait  5`
  70C:  Wait  2`
  718:  Call  EnemyDamageTarget ( .Actor:Self *Var0 ~Flags:DamageType:NoContact 00000000 00000000 00000002 00000040 )
  740:  Wait  5`
  74C:  Call  SetAnimation      ( .Actor:Self 00000001 005A0002 )
  764:  Wait  2`
  770:  Call  EnemyDamageTarget ( .Actor:Self *Var0 ~Flags:DamageType:NoContact 00000000 00000000 00000002 00000040 )
  798:  Wait  5`
  7A4:  Wait  2`
  7B0:  Call  EnemyDamageTarget ( .Actor:Self *Var0 ~Flags:DamageType:NoContact 00000000 ~DebuffType:Shrink:3:50` 00000002 00000020 )
  7D8:  Switch  *Var0 
  7E4:  	CaseOR  ==  .HitResult:Hit % 0
  7F0:  	CaseOR  ==  .HitResult:QuakeImmune % 2
  7FC:  		Wait  20`
  808:  		Call  YieldTurn ( )
  814:  	EndCaseGroup
  81C:  EndSwitch
  824:  Call  EnableIdleScript  ( .Actor:Self 00000001 )
  838:  Call  UseIdleAnimation  ( .Actor:Self .True )
  84C:  Return
  854:  End
}

#new:Script $Script_TakeTurn_8022028C_22 {
    0:  Call  GetActorHP    ( .Actor:Self *Var0 )
   14:  Call  GetEnemyMaxHP ( .Actor:Self *Var1 )
   28:  MulF  *Var0  *Fixed[100.0] 
   38:  DivF  *Var0  *Var1 
   48:  If  *Var0  >  00000022 
   58:  	ExecWait  $Script_8021ED74_22 
   64:  Else
   6C:  	ExecWait  $Script_8021FA30_22 
   78:  EndIf
   80:  Return
   88:  End
}

