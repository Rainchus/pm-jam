% Automatically dumped from section 1C

#new:Actor $1C_Swoopula {
% stats
[Index]        3Ab 
[Level]        22`b 
[MaxHP]         8`b 
[Coins]         1`b 
[Flags]       00000800 
[StatusTable] $StatusTable_8021B86C_1C 
% ai
[PartsCount]    1`s 
[PartsTable]  $PartsTable_8021B918_1C 
[Script]      $Script_Init_8021B9FC_1C 
% move effectiveness
[Escape]       30`b 
[Item]         70`b 
[AirLift]      95`b 
[Hurricane]    95`b % Bow's "Spook" as well
[UpAndAway]    95`b 
[PowerBounce]  80`b 
[SpinSmash]     0`b % weight (0-4)
% ui positions
[Size]         31`b  24`b % width height
[HealthBar]     0`b   0`b % dx dy
[StatusTurn]  -10`b -20`b % dx dy
[StatusIcon]   10`b -20`b % dx dy
}

#new:Function $Function_802180D0_1C {
    0:  ADDIU     SP, SP, FFD8
    4:  SW        S1, 14 (SP)
    8:  COPY      S1, A0
    C:  SW        RA, 20 (SP)
   10:  SW        S3, 1C (SP)
   14:  SW        S2, 18 (SP)
   18:  SW        S0, 10 (SP)
   1C:  LW        S0, C (S1)
   20:  LW        A1, 0 (S0)
   24:  JAL       ~Func:get_variable
   28:  ADDIU     S0, S0, 4
   2C:  LW        A1, 0 (S0)
   30:  ADDIU     S0, S0, 4
   34:  COPY      A0, S1
   38:  JAL       ~Func:get_variable
   3C:  COPY      S3, V0
   40:  LW        A1, 0 (S0)
   44:  ADDIU     S0, S0, 4
   48:  COPY      A0, S1
   4C:  JAL       ~Func:get_variable
   50:  COPY      S2, V0
   54:  COPY      A0, S1
   58:  LW        A1, 0 (S0)
   5C:  JAL       ~Func:get_variable
   60:  COPY      S0, V0
   64:  LW        A0, 148 (S1)
   68:  JAL       ~Func:get_actor
   6C:  COPY      S1, V0
   70:  COPY      V1, V0
   74:  LW        V0, 8 (V1)
   78:  LBU       V0, 24 (V0)
   7C:  LW        A0, 8 (V1)
   80:  SUBU      S3, S3, V0
   84:  SB        S3, 194 (V1)
   88:  LBU       V0, 25 (A0)
   8C:  SUBU      S2, S2, V0
   90:  SB        S2, 195 (V1)
   94:  LBU       V0, 26 (A0)
   98:  SUBU      S0, S0, V0
   9C:  SB        S0, 196 (V1)
   A0:  LBU       A0, 27 (A0)
   A4:  SUBU      S1, S1, A0
   A8:  SB        S1, 197 (V1)
   AC:  LW        RA, 20 (SP)
   B0:  LW        S3, 1C (SP)
   B4:  LW        S2, 18 (SP)
   B8:  LW        S1, 14 (SP)
   BC:  LW        S0, 10 (SP)
   C0:  LI        V0, 2
   C4:  JR        RA
   C8:  ADDIU     SP, SP, 28
}

#new:Function $Function_8021819C_1C {
    0:  ADDIU     SP, SP, FFD8
    4:  SW        S1, 14 (SP)
    8:  COPY      S1, A0
    C:  SW        RA, 20 (SP)
   10:  SW        S3, 1C (SP)
   14:  SW        S2, 18 (SP)
   18:  SW        S0, 10 (SP)
   1C:  LW        S0, C (S1)
   20:  LW        A1, 0 (S0)
   24:  JAL       ~Func:get_variable
   28:  ADDIU     S0, S0, 4
   2C:  LW        A1, 0 (S0)
   30:  ADDIU     S0, S0, 4
   34:  COPY      A0, S1
   38:  JAL       ~Func:get_variable
   3C:  COPY      S3, V0
   40:  LW        A1, 0 (S0)
   44:  ADDIU     S0, S0, 4
   48:  COPY      A0, S1
   4C:  JAL       ~Func:get_variable
   50:  COPY      S2, V0
   54:  COPY      A0, S1
   58:  LW        A1, 0 (S0)
   5C:  JAL       ~Func:get_variable
   60:  COPY      S0, V0
   64:  MTC1      S3, F12
   68:  NOP
   6C:  CVT.S.W   F12, F12
   70:  MTC1      S2, F14
   74:  NOP
   78:  CVT.S.W   F14, F14
   7C:  MTC1      S0, F0
   80:  NOP
   84:  CVT.S.W   F0, F0
   88:  MFC1      A2, F0
   8C:  JAL       802D7460
   90:  COPY      A3, V0
   94:  LW        RA, 20 (SP)
   98:  LW        S3, 1C (SP)
   9C:  LW        S2, 18 (SP)
   A0:  LW        S1, 14 (SP)
   A4:  LW        S0, 10 (SP)
   A8:  LI        V0, 2
   AC:  JR        RA
   B0:  ADDIU     SP, SP, 28
}

#new:Function $Function_80218250_1C {
    0:  ADDIU     SP, SP, FFD8
    4:  SW        S1, 14 (SP)
    8:  COPY      S1, A0
    C:  SW        RA, 20 (SP)
   10:  SW        S3, 1C (SP)
   14:  SW        S2, 18 (SP)
   18:  SW        S0, 10 (SP)
   1C:  LW        S0, C (S1)
   20:  LW        A1, 0 (S0)
   24:  JAL       ~Func:get_variable
   28:  ADDIU     S0, S0, 4
   2C:  LW        A1, 0 (S0)
   30:  ADDIU     S0, S0, 4
   34:  COPY      A0, S1
   38:  JAL       ~Func:get_variable
   3C:  COPY      S3, V0
   40:  LW        A1, 0 (S0)
   44:  ADDIU     S0, S0, 4
   48:  COPY      A0, S1
   4C:  JAL       ~Func:get_variable
   50:  COPY      S2, V0
   54:  COPY      A0, S1
   58:  LW        A1, 0 (S0)
   5C:  JAL       ~Func:get_variable
   60:  COPY      S0, V0
   64:  MTC1      S3, F12
   68:  NOP
   6C:  CVT.S.W   F12, F12
   70:  MTC1      S2, F14
   74:  NOP
   78:  CVT.S.W   F14, F14
   7C:  MTC1      S0, F0
   80:  NOP
   84:  CVT.S.W   F0, F0
   88:  MFC1      A2, F0
   8C:  JAL       802D74C0
   90:  COPY      A3, V0
   94:  LW        RA, 20 (SP)
   98:  LW        S3, 1C (SP)
   9C:  LW        S2, 18 (SP)
   A0:  LW        S1, 14 (SP)
   A4:  LW        S0, 10 (SP)
   A8:  LI        V0, 2
   AC:  JR        RA
   B0:  ADDIU     SP, SP, 28
}

#new:DefenseTable $DefenseTable_8021B860_1C {
.Element:Normal 00000000
.Element:End
}

#new:StatusTable $StatusTable_8021B86C_1C {
.Status:Normal      0`
.Status:Default     0`
.Status:Sleep      60`
.Status:Poison     60`
.Status:Frozen      0`
.Status:Dizzy     100`
.Status:Fear        0`
.Status:Static     80`
.Status:Paralyze   80`
.Status:Shrink     75`
.Status:Stop       85`
.Status:DefaultTurnMod    0`
.Status:SleepTurnMod      0`
.Status:PoisonTurnMod     0`
.Status:FrozenTurnMod     0`
.Status:DizzyTurnMod      1`
.Status:FearTurnMod       0`
.Status:StaticTurnMod     0`
.Status:ParalyzeTurnMod   0`
.Status:ShrinkTurnMod     0`
.Status:StopTurnMod       0`
.Status:End
}

#new:PartsTable $PartsTable_8021B918_1C {
00800000 01000000 001D00FF $IdleAnimations_8021B964_1C $DefenseTable_8021B860_1C 00000000 00000000 010F0000 00000000 
}

#new:IdleAnimations $IdleAnimations_8021B964_1C {
.Status:Normal    0034010C
.Status:Stone     0034010B
.Status:Sleep     0034010F
.Status:Poison    0034010C
.Status:Stop      0034010B
.Status:Static    0034010C
.Status:Paralyze  0034010B
.Status:Dizzy     00340110
.Status:Fear      00340110
.Status:End
}

#new:IdleAnimations $IdleAnimations_8021B9B0_1C {
.Status:Normal    00340102
.Status:Stone     00340101
.Status:Sleep     00340113
.Status:Poison    00340102
.Status:Stop      00340101
.Status:Static    00340102
.Status:Paralyze  00340101
.Status:Dizzy     00340114
.Status:Fear      00340114
.Status:End
}

#new:Script $Script_Init_8021B9FC_1C {
    0:  Call  BindTakeTurn  ( .Actor:Self $Script_TakeTurn_8021E7B4_1C )
   14:  Call  BindIdle      ( .Actor:Self $Script_Idle_8021BA60_1C )
   28:  Call  BindHandleEvent   ( .Actor:Self $Script_HandleEvent_8021C414_1C )
   3C:  Call  SetActorVar   ( .Actor:Self 00000008 00000000 )
   54:  Return
   5C:  End
}

#new:Script $Script_Idle_8021BA60_1C {
    0:  Return
    8:  End
}

#new:Script $Script_8021BA70_1C {
    0:  Call  GetActorVar   ( .Actor:Self 00000008 *Var0 )
   18:  Switch  *Var0 
   24:  	Case  ==  00000000 
   30:  		Call  SetAnimation  ( .Actor:Self 00000001 00340102 )
   48:  		Call  SetActorSpeed ( .Actor:Self *Fixed[8.0] )
   5C:  		Call  SetGoalToHome ( .Actor:Self )
   6C:  		Call  AddGoalPos    ( .Actor:Self  0`  -24`  0` )
   88:  		Call  FlyToGoal     ( .Actor:Self  0`  1` .Easing:SinOut )
   A4:  		Call  SetActorFlagBits  ( .Actor:Self 00000800 .True )
   BC:  		Call  SetIdleAnimations ( .Actor:Self 00000001 $IdleAnimations_8021B964_1C )
   D4:  		Call  SetAnimation  ( .Actor:Self 00000001 0034010C )
   EC:  		Call  GetActorPos   ( .Actor:Self *Var0 *Var1 *Var2 )
  108:  		Add   *Var1  00000018 
  118:  		Call  SetActorPos   ( .Actor:Self *Var0 *Var1 *Var2 )
  134:  		Call  HPBarToHome   ( .Actor:Self )
  144:  	Case  ==  00000001 
  150:  		Call  SetAnimation  ( .Actor:Self 00000001 00340102 )
  168:  		Call  SetActorSpeed ( .Actor:Self *Fixed[8.0] )
  17C:  		Call  SetGoalToHome ( .Actor:Self )
  18C:  		Call  FlyToGoal     ( .Actor:Self  0`  1` .Easing:SinOut )
  1A8:  EndSwitch
  1B0:  Return
  1B8:  End
}

#new:Script $Script_8021BC30_1C {
    0:  Call  UseIdleAnimation  ( .Actor:Self .False )
   14:  Call  EnableIdleScript  ( .Actor:Self 00000000 )
   28:  Call  GetLastEvent      ( .Actor:Self *Var0 )
   3C:  Switch  *Var0 
   48:  	CaseOR  ==  .Event:HitCombo % 9
   54:  	CaseOR  ==  .Event:Hit % A
   60:  		SetConst  *Var0  00000001 
   70:  		SetConst  *Var1  00340115 
   80:  		ExecWait  DoNormalHit 
   8C:  	EndCaseGroup
   94:  	Case  ==  .Event:BurnHit % E
   A0:  		SetConst  *Var0  00000001 
   B0:  		SetConst  *Var1  00340117 
   C0:  		SetConst  *Var2  00340118 
   D0:  		ExecWait  DoBurnHit 
   DC:  	Case  ==  .Event:BurnDeath % 24
   E8:  		SetConst  *Var0  00000001 
   F8:  		SetConst  *Var1  00340117 
  108:  		SetConst  *Var2  00340118 
  118:  		ExecWait  DoBurnHit 
  124:  		SetConst  *Var0  00000001 
  134:  		SetConst  *Var1  00340118 
  144:  		ExecWait  DoDeath 
  150:  		Return
  158:  	Case  ==  .Event:ShockHit % 2F
  164:  		Call  80269470 ( )
  170:  		SetConst  *Var0  00000001 
  180:  		SetConst  *Var1  00340115 
  190:  		ExecWait  DoShockHit 
  19C:  		Call  UseBattleCamPreset    ( 00000002 )
  1AC:  		ExecWait  $Script_8021BA70_1C 
  1B8:  	Case  ==  .Event:ShockDeath % 26
  1C4:  		Call  80269470 ( )
  1D0:  		SetConst  *Var0  00000001 
  1E0:  		SetConst  *Var1  00340115 
  1F0:  		ExecWait  DoShockHit 
  1FC:  		Thread
  204:  			Wait  30`
  210:  			Call  UseBattleCamPreset    ( 00000002 )
  220:  		EndThread
  228:  		SetConst  *Var0  00000001 
  238:  		SetConst  *Var1  00340115 
  248:  		ExecWait  DoDeath 
  254:  		Return
  25C:  	CaseOR  ==  00000017 % 17
  268:  	CaseOR  ==  .Event:Immune % 19
  274:  	CaseOR  ==  .Event:AirLiftFailed % 1F
  280:  		SetConst  *Var0  00000001 
  290:  		SetConst  *Var1  00340102 
  2A0:  		ExecWait  DoImmune 
  2AC:  	EndCaseGroup
  2B4:  	Case  ==  .Event:Death % 20
  2C0:  		SetConst  *Var0  00000001 
  2D0:  		SetConst  *Var1  00340115 
  2E0:  		ExecWait  DoNormalHit 
  2EC:  		Wait  10`
  2F8:  		SetConst  *Var0  00000001 
  308:  		SetConst  *Var1  00340115 
  318:  		ExecWait  DoDeath 
  324:  		Return
  32C:  	Case  ==  .Event:RecoverStatus % 31
  338:  		SetConst  *Var0  00000001 
  348:  		SetConst  *Var1  00340102 
  358:  		ExecWait  DoRecover 
  364:  	Case  ==  .Event:ScareAway % 39
  370:  		Call  SetActorFlagBits  ( .Actor:Self 00000200 .False )
  388:  		SetConst  *Var0  00000001 
  398:  		SetConst  *Var1  00340102 
  3A8:  		SetConst  *Var2  00340115 
  3B8:  		ExecWait  DoScareAway 
  3C4:  		Return
  3CC:  	Case  ==  .Event:BeginAirLift % 3A
  3D8:  		SetConst  *Var0  00000001 
  3E8:  		SetConst  *Var1  00340102 
  3F8:  		ExecWait  DoAirLift 
  404:  	Case  ==  .Event:BlowAway % 16
  410:  		SetConst  *Var0  00000001 
  420:  		SetConst  *Var1  00340115 
  430:  		ExecWait  DoBlowAway 
  43C:  		Return
  444:  EndSwitch
  44C:  Call  EnableIdleScript  ( .Actor:Self 00000001 )
  460:  Call  UseIdleAnimation  ( .Actor:Self .True )
  474:  Return
  47C:  End
}

#new:Script $Script_8021C0B4_1C {
    0:  Call  8027D32C      ( FFFFFF81 )
   10:  Call  GetLastDamage ( .Actor:Self *Var0 )
   24:  If  *Var0  <=  00000000 
   34:  	Return
   3C:  EndIf
   44:  Call  SetActorFlagBits      ( .Actor:Self 00000800 .False )
   5C:  Call  SetAnimation  ( .Actor:Self 00000001 00340102 )
   74:  Call  SetActorDispOffset    ( .Actor:Self 00000000 00000000 00000000 )
   90:  Call  GetActorPos   ( .Actor:Self *Var0 *Var1 *Var2 )
   AC:  Sub   *Var1  00000018 
   BC:  Call  SetActorPos   ( .Actor:Self *Var0 *Var1 *Var2 )
   D8:  Call  GetActorVar   ( .Actor:Self 00000000 *VarA )
   F0:  If  *VarA  ==  FFFFFFFF 
  100:  	Call  SetHomePos    ( .Actor:Self *Var0  45` *Var2 )
  11C:  	Call  SetActorJumpGravity   ( .Actor:Self *Fixed[0.8] )
  130:  	Call  SetGoalToHome ( .Actor:Self )
  140:  	Call  JumpToGoal    ( .Actor:Self  15` .False .False .False )
  160:  	Call  JumpToGoal    ( .Actor:Self  10` .False .False .False )
  180:  Else
  188:  	Call  SetActorJumpGravity   ( .Actor:Self *Fixed[0.8] )
  19C:  	Call  SetGoalPos    ( .Actor:Self *Var0  45` *Var2 )
  1B8:  	Call  JumpToGoal    ( .Actor:Self  15` .False .False .False )
  1D8:  	Call  GetIndexFromPos       ( .Actor:Self *VarA )
  1EC:  	Mod   *VarA  00000004 
  1FC:  	Add   *VarA  00000004 
  20C:  	Call  SetGoalToIndex        ( .Actor:Self *VarA )
  220:  	Call  GetGoalPos    ( .Actor:Self *VarA *VarB *VarC )
  23C:  	Call  SetHomePos    ( .Actor:Self *VarA *VarB *VarC )
  258:  	Call  SetActorJumpGravity   ( .Actor:Self *Fixed[0.8] )
  26C:  	Call  SetGoalToHome ( .Actor:Self )
  27C:  	Call  JumpToGoal    ( .Actor:Self  10` .False .False .False )
  29C:  EndIf
  2A4:  Call  8027D4C8  ( FFFFFF81 00000001 00000000 FFFFFFF6 )
  2C0:  Call  SetTargetOffset   ( .Actor:Self 00000001  0`  22` )
  2DC:  Call  $Function_802180D0_1C ( FFFFFFF6 00000014 0000000A 00000014 )
  2F8:  Call  SetIdleAnimations ( .Actor:Self 00000001 $IdleAnimations_8021B9B0_1C )
  310:  Call  SetActorFlagBits  ( .Actor:Self 00000200 .True )
  328:  Call  HPBarToHome       ( .Actor:Self )
  338:  Call  SetActorVar       ( .Actor:Self 00000008 00000001 )
  350:  Return
  358:  End
}

#new:Script $Script_HandleEvent_8021C414_1C {
    0:  Call  GetActorVar   ( .Actor:Self 00000008 *Var0 )
   18:  If  *Var0  ==  00000001 
   28:  	ExecWait  $Script_8021BC30_1C 
   34:  	Return
   3C:  EndIf
   44:  Call  UseIdleAnimation  ( .Actor:Self .False )
   58:  Call  EnableIdleScript  ( .Actor:Self 00000000 )
   6C:  Call  GetLastEvent      ( .Actor:Self *Var0 )
   80:  Switch  *Var0 
   8C:  	Case  ==  .Event:HitCombo % 9
   98:  		Call  GetBattlePhase    ( *Var0 )
   A8:  		If  *Var0  ==  00000001 
   B8:  			SetConst  *Var0  00000001 
   C8:  			SetConst  *Var1  00340115 
   D8:  			ExecWait  DoNormalHit 
   E4:  		Else
   EC:  			SetConst  *Var0  00000001 
   FC:  			SetConst  *Var1  0034010E 
  10C:  			ExecWait  DoNormalHit 
  118:  		EndIf
  120:  	Case  ==  .Event:Hit % A
  12C:  		Call  GetBattlePhase    ( *Var0 )
  13C:  		If  *Var0  ==  00000001 
  14C:  			SetConst  *Var0  00000001 
  15C:  			SetConst  *Var1  00340115 
  16C:  			ExecWait  DoNormalHit 
  178:  		Else
  180:  			SetConst  *Var0  00000001 
  190:  			SetConst  *Var1  0034010E 
  1A0:  			ExecWait  DoNormalHit 
  1AC:  			ExecWait  $Script_8021C0B4_1C 
  1B8:  		EndIf
  1C0:  	Case  ==  .Event:BurnHit % E
  1CC:  		Call  GetBattlePhase    ( *Var0 )
  1DC:  		If  *Var0  ==  00000001 
  1EC:  			SetConst  *Var0  00000001 
  1FC:  			SetConst  *Var1  00340117 
  20C:  			SetConst  *Var2  00340118 
  21C:  			ExecWait  DoBurnHit 
  228:  		Else
  230:  			SetConst  *Var0  00000001 
  240:  			SetConst  *Var1  00340111 
  250:  			SetConst  *Var2  00340112 
  260:  			ExecWait  DoBurnHit 
  26C:  			ExecWait  $Script_8021C0B4_1C 
  278:  		EndIf
  280:  	Case  ==  .Event:BurnDeath % 24
  28C:  		Call  GetBattlePhase    ( *Var0 )
  29C:  		If  *Var0  ==  00000001 
  2AC:  			SetConst  *Var0  00000001 
  2BC:  			SetConst  *Var1  00340117 
  2CC:  			SetConst  *Var2  00340118 
  2DC:  			ExecWait  DoBurnHit 
  2E8:  			SetConst  *Var0  00000001 
  2F8:  			SetConst  *Var1  00340118 
  308:  			ExecWait  DoDeath 
  314:  		Else
  31C:  			SetConst  *Var0  00000001 
  32C:  			SetConst  *Var1  00340111 
  33C:  			SetConst  *Var2  00340112 
  34C:  			ExecWait  DoBurnHit 
  358:  			SetConst  *Var0  00000001 
  368:  			SetConst  *Var1  00340112 
  378:  			ExecWait  DoDeath 
  384:  		EndIf
  38C:  		Return
  394:  	Case  ==  .Event:ShockHit % 2F
  3A0:  		Call  80269470 ( )
  3AC:  		SetConst  *Var0  00000001 
  3BC:  		SetConst  *Var1  00340115 
  3CC:  		ExecWait  8029A76C 
  3D8:  		Call  UseBattleCamPreset    ( 00000002 )
  3E8:  		ExecWait  $Script_8021BA70_1C 
  3F4:  	Case  ==  .Event:ShockDeath % 26
  400:  		Call  80269470 ( )
  40C:  		SetConst  *Var0  00000001 
  41C:  		SetConst  *Var1  00340115 
  42C:  		ExecWait  8029A76C 
  438:  		Thread
  440:  			Wait  30`
  44C:  			Call  UseBattleCamPreset    ( 00000002 )
  45C:  		EndThread
  464:  		SetConst  *Var0  00000001 
  474:  		SetConst  *Var1  00340115 
  484:  		ExecWait  DoDeath 
  490:  		Return
  498:  	CaseOR  ==  00000017 % 17
  4A4:  	CaseOR  ==  .Event:Immune % 19
  4B0:  		SetConst  *Var0  00000001 
  4C0:  		SetConst  *Var1  0034010C 
  4D0:  		ExecWait  DoImmune 
  4DC:  	EndCaseGroup
  4E4:  	Case  ==  .Event:Death % 20
  4F0:  		Call  GetBattlePhase    ( *Var0 )
  500:  		If  *Var0  ==  00000001 
  510:  			SetConst  *Var0  00000001 
  520:  			SetConst  *Var1  00340115 
  530:  			ExecWait  DoNormalHit 
  53C:  			Wait  10`
  548:  			SetConst  *Var0  00000001 
  558:  			SetConst  *Var1  00340115 
  568:  			ExecWait  DoDeath 
  574:  		Else
  57C:  			SetConst  *Var0  00000001 
  58C:  			SetConst  *Var1  0034010E 
  59C:  			ExecWait  DoNormalHit 
  5A8:  			Wait  10`
  5B4:  			SetConst  *Var0  00000001 
  5C4:  			SetConst  *Var1  0034010E 
  5D4:  			ExecWait  DoDeath 
  5E0:  		EndIf
  5E8:  		Return
  5F0:  	Case  ==  .Event:BeginFirstStrike % 38
  5FC:  		Call  SetActorFlagBits  ( .Actor:Self 00000800 .False )
  614:  		Call  SetIdleAnimations ( .Actor:Self 00000001 $IdleAnimations_8021B9B0_1C )
  62C:  		Call  SetAnimation      ( .Actor:Self 00000001 00340102 )
  644:  		Call  SetActorPos       ( .Actor:Self  20`  0`  0` )
  660:  		Call  HPBarToCurrent    ( .Actor:Self )
  670:  	Case  ==  .Event:EndFirstStrike % 35
  67C:  		ExecWait  $Script_8021BA70_1C 
  688:  		Call  HPBarToHome   ( .Actor:Self )
  698:  	Case  ==  .Event:RecoverStatus % 31
  6A4:  	Case  ==  .Event:ScareAway % 39
  6B0:  		Call  SetActorFlagBits      ( .Actor:Self 00000200 .True )
  6C8:  		Call  SetActorFlagBits      ( .Actor:Self 00000800 .False )
  6E0:  		Call  SetActorDispOffset    ( .Actor:Self 00000000 FFFFFFE8 00000000 )
  6FC:  		SetConst  *Var0  00000001 
  70C:  		SetConst  *Var1  00340102 
  71C:  		SetConst  *Var2  00340115 
  72C:  		ExecWait  DoScareAway 
  738:  		Return
  740:  EndSwitch
  748:  Call  EnableIdleScript  ( .Actor:Self 00000001 )
  75C:  Call  UseIdleAnimation  ( .Actor:Self .True )
  770:  Return
  778:  End
}

#new:Script $Script_8021CB94_1C {
    0:  Call  UseIdleAnimation  ( .Actor:Self .False )
   14:  Call  EnableIdleScript  ( .Actor:Self 00000000 )
   28:  Call  SetTargetActor    ( .Actor:Self .Actor:Player )
   3C:  Call  GetBattlePhase    ( *Var0 )
   4C:  If  *Var0  ==  00000001 
   5C:  	Call  SetAnimation  ( .Actor:Self 00000001 00340102 )
   74:  	Call  SetGoalToTarget   ( .Actor:Self )
   84:  	Call  AddGoalPos    ( .Actor:Self  50`  10`  0` )
   A0:  	Call  SetActorSpeed ( .Actor:Self *Fixed[8.0] )
   B4:  	Call  GetGoalPos    ( .Actor:Self *Var0 *Var1 *Var2 )
   D0:  	Call  SetActorPos   ( .Actor:Self *Var0 *Var1 *Var2 )
   EC:  Else
   F4:  	Call  UseBattleCamPreset    ( 0000003F )
  104:  	Call  BattleCamTargetActor  ( .Actor:Self )
  114:  	Call  8024ECF8      ( FFFFFFFF 00000001 00000000 )
  12C:  	Call  SetAnimation  ( .Actor:Self 00000001 00340102 )
  144:  	Call  SetGoalToTarget       ( .Actor:Self )
  154:  	Call  AddGoalPos    ( .Actor:Self  50`  10`  0` )
  170:  	Call  SetActorSpeed ( .Actor:Self *Fixed[8.0] )
  184:  	Call  FlyToGoal     ( .Actor:Self  0`  -4` .Easing:Linear )
  1A0:  EndIf
  1A8:  Call  EnemyTestTarget   ( .Actor:Self *Var0 ~Flags:DamageType:IgnoreDefense 00000000 00000002 00000010 )
  1CC:  Switch  *Var0 
  1D8:  	CaseOR  ==  .HitResult:Miss % 6
  1E4:  	CaseOR  ==  .HitResult:Lucky % 5
  1F0:  		Set   *VarA  *Var0 
  200:  		Wait  10`
  20C:  		Call  SetActorSpeed ( .Actor:Self *Fixed[5.0] )
  220:  		Call  SetActorJumpGravity   ( .Actor:Self *Fixed[1.8] )
  234:  		Call  SetAnimation  ( .Actor:Self 00000001 00340106 )
  24C:  		Call  GetActorPos   ( .Actor:Self *Var0 *Var1 *Var2 )
  268:  		Call  SetGoalPos    ( .Actor:Self *Var0 *Var1 *Var2 )
  284:  		Call  JumpToGoal    ( .Actor:Self  10` .False .False .False )
  2A4:  		Call  SetGoalToTarget   ( .Actor:Self )
  2B4:  		Call  GetGoalPos    ( .Actor:Self *Var0 *Var1 *Var2 )
  2D0:  		Sub   *Var0  00000032 
  2E0:  		Call  SetGoalPos    ( .Actor:Self *Var0 *Var1 *Var2 )
  2FC:  		Call  SetActorSpeed ( .Actor:Self *Fixed[8.0] )
  310:  		Call  SetAnimation  ( .Actor:Self 00000001 00340106 )
  328:  		Call  FlyToGoal     ( .Actor:Self  0`  -10` .Easing:Linear )
  344:  		Call  SetAnimationRate  ( .Actor:Self 00000001 *Fixed[10.0] )
  35C:  		Wait  15`
  368:  		Call  SetAnimationRate  ( .Actor:Self 00000001 *Fixed[1.0] )
  380:  		If  *VarA  ==  .HitResult:Lucky % 5
  390:  			Call  EnemyTestTarget   ( .Actor:Self *Var0 ~Flags:DamageType:TriggerLucky 00000000 00000000 00000000 )
  3B4:  		EndIf
  3BC:  		Call  YieldTurn ( )
  3C8:  		Call  UseBattleCamPreset    ( 00000002 )
  3D8:  		Call  SetActorYaw   ( .Actor:Self  180` )
  3EC:  		Call  AddActorDecoration    ( .Actor:Self 00000001 00000000 .Decoration:Sweat )
  408:  		ExecWait  $Script_8021BA70_1C 
  414:  		Call  RemoveActorDecoration ( .Actor:Self 00000001 00000000 )
  42C:  		Call  SetActorYaw   ( .Actor:Self  0` )
  440:  		Call  EnableIdleScript      ( .Actor:Self 00000001 )
  454:  		Call  UseIdleAnimation      ( .Actor:Self .True )
  468:  		Return
  470:  	EndCaseGroup
  478:  	Case  ==  .HitResult:HitStatic % 7
  484:  		Call  GetStatusFlags    ( .Actor:Self *Var0 )
  498:  		If  *Var0  &  ~Flags:StatusFlags:Static % 2000
  4A8:  			Set   *Flag[00]  .False 
  4B8:  		Else
  4C0:  			Set   *Flag[00]  .True 
  4D0:  		EndIf
  4D8:  EndSwitch
  4E0:  Wait  10`
  4EC:  Call  SetActorSpeed ( .Actor:Self *Fixed[5.0] )
  500:  Call  SetActorJumpGravity   ( .Actor:Self *Fixed[1.8] )
  514:  Call  SetAnimation  ( .Actor:Self 00000001 00340106 )
  52C:  Call  GetActorPos   ( .Actor:Self *Var0 *Var1 *Var2 )
  548:  Call  SetGoalPos    ( .Actor:Self *Var0 *Var1 *Var2 )
  564:  Call  JumpToGoal    ( .Actor:Self  10` .False .False .False )
  584:  Call  SetGoalToTarget       ( .Actor:Self )
  594:  Call  AddGoalPos    ( .Actor:Self  -4`  -8`  -15` )
  5B0:  Call  SetActorSpeed ( .Actor:Self *Fixed[8.0] )
  5C4:  Call  SetAnimation  ( .Actor:Self 00000001 00340106 )
  5DC:  Call  FlyToGoal     ( .Actor:Self  0`  -10` .Easing:Linear )
  5F8:  If  *Flag[00]  ==  .True 
  608:  	Call  EnemyDamageTarget ( .Actor:Self *Var0 ~Flags:DamageType:IgnoreDefense 00000000 00000000 00000000 00000020 )
  630:  	Return
  638:  EndIf
  640:  Call  GetStatusFlags    ( .Actor:Player *Var0 )
  654:  If  *Var0  &  ~Flags:StatusFlags:Stone % 100000
  664:  	Wait  10`
  670:  	Loop  00000002 
  67C:  		Call  SetAnimation  ( .Actor:Self 00000001 00340102 )
  694:  		Wait  21`
  6A0:  		Loop  00000002 
  6AC:  			Call  PlaySoundAtActor  ( .Actor:Self 000003E0 )
  6C0:  			Call  SetActorScale ( .Actor:Self *Fixed[1.0] *Fixed[1.0] *Fixed[1.0] )
  6DC:  			Wait  1`
  6E8:  			Call  SetActorScale ( .Actor:Self *Fixed[0.9] *Fixed[1.2] *Fixed[1.0] )
  704:  			Wait  1`
  710:  			Call  SetActorScale ( .Actor:Self *Fixed[0.8] *Fixed[1.3] *Fixed[1.0] )
  72C:  			Wait  1`
  738:  			Call  SetActorScale ( .Actor:Self *Fixed[0.7] *Fixed[1.4] *Fixed[1.0] )
  754:  			Wait  1`
  760:  			Call  SetActorScale ( .Actor:Self *Fixed[0.7] *Fixed[1.5] *Fixed[1.0] )
  77C:  			Wait  1`
  788:  			Call  SetActorScale ( .Actor:Self *Fixed[0.7] *Fixed[1.4] *Fixed[1.0] )
  7A4:  			Wait  1`
  7B0:  			Call  SetActorScale ( .Actor:Self *Fixed[0.8] *Fixed[1.3] *Fixed[1.0] )
  7CC:  			Wait  1`
  7D8:  			Call  SetActorScale ( .Actor:Self *Fixed[0.9] *Fixed[1.2] *Fixed[1.0] )
  7F4:  			Wait  1`
  800:  			Call  SetActorScale ( .Actor:Self *Fixed[1.0] *Fixed[1.0] *Fixed[1.0] )
  81C:  			Wait  1`
  828:  		EndLoop
  830:  		Wait  5`
  83C:  		Call  SetActorScale ( .Actor:Self *Fixed[1.0] *Fixed[1.0] *Fixed[1.0] )
  858:  		Wait  1`
  864:  		Call  SetActorScale ( .Actor:Self *Fixed[0.9] *Fixed[1.2] *Fixed[1.0] )
  880:  		Wait  1`
  88C:  		Call  SetActorScale ( .Actor:Self *Fixed[0.8] *Fixed[1.3] *Fixed[1.0] )
  8A8:  		Wait  1`
  8B4:  		Call  SetActorScale ( .Actor:Self *Fixed[0.7] *Fixed[1.4] *Fixed[1.0] )
  8D0:  		Wait  1`
  8DC:  		Call  SetActorScale ( .Actor:Self *Fixed[0.7] *Fixed[1.5] *Fixed[1.0] )
  8F8:  		Wait  2`
  904:  		Call  SetActorScale ( .Actor:Self *Fixed[0.6] *Fixed[1.6] *Fixed[1.0] )
  920:  		Wait  10`
  92C:  		Call  SetActorScale ( .Actor:Self *Fixed[1.0] *Fixed[1.0] *Fixed[1.0] )
  948:  		Wait  2`
  954:  		Call  EnemyDamageTarget ( .Actor:Self *Var0 ~Flags:DamageType:IgnoreDefense 00000000 00000000 00000002 00000040 )
  97C:  		Wait  30`
  988:  	EndLoop
  990:  Else
  998:  	Call  ShowMessageBox    ( 00000031 00007FFF )
  9AC:  	Call  802694A4  ( 00000001 )
  9BC:  	Call  LoadActionCommand ( .ActionCommand:StopLeech )
  9CC:  	Call  802A9000 ( )
  9D8:  	Call  SetupMashMeter    ( 00000001 0000001E 00000000 00000000 00000000 00000000 )
  9FC:  	Wait  10`
  A08:  	Call  SetBattleFlagBits ( 00004000 .False )
  A1C:  	Call  802A9110  ( 00000000 00007FFF 00000003 )
  A34:  	Set   *VarD  00000000 
  A44:  	Loop  00000005 
  A50:  		Call  SetAnimation  ( .Actor:Self 00000001 00340102 )
  A68:  		Set   *Flag[00]  .False 
  A78:  		Loop  00000015 
  A84:  			Call  GetActionSuccessCopy  ( *Var1 )
  A94:  			If  *Var1  ==  00000001 
  AA4:  				Set   *Flag[00]  .True 
  AB4:  				BreakLoop
  ABC:  			EndIf
  AC4:  			Wait  1`
  AD0:  		EndLoop
  AD8:  		If  *Flag[00]  ==  .True 
  AE8:  			Call  UseIdleAnimation  ( .Actor:Player .True )
  AFC:  			BreakLoop
  B04:  		EndIf
  B0C:  		Call  UseIdleAnimation  ( .Actor:Player .False )
  B20:  		Call  SetAnimation      ( .Actor:Player 00000000 0003000C )
  B38:  		Loop  00000002 
  B44:  			Call  PlaySoundAtActor  ( .Actor:Self 000003E0 )
  B58:  			Call  SetActorScale     ( .Actor:Self *Fixed[1.0] *Fixed[1.0] *Fixed[1.0] )
  B74:  			Set   *Flag[00]  .False 
  B84:  			Loop  00000001 
  B90:  				Call  GetActionSuccessCopy  ( *Var1 )
  BA0:  				If  *Var1  ==  00000001 
  BB0:  					Set   *Flag[00]  .True 
  BC0:  					BreakLoop
  BC8:  				EndIf
  BD0:  				Wait  1`
  BDC:  			EndLoop
  BE4:  			If  *Flag[00]  ==  .True 
  BF4:  				Call  UseIdleAnimation  ( .Actor:Player .True )
  C08:  				BreakLoop
  C10:  			EndIf
  C18:  			Call  SetActorScale ( .Actor:Self *Fixed[0.9] *Fixed[1.2] *Fixed[1.0] )
  C34:  			Set   *Flag[00]  .False 
  C44:  			Loop  00000001 
  C50:  				Call  GetActionSuccessCopy  ( *Var1 )
  C60:  				If  *Var1  ==  00000001 
  C70:  					Set   *Flag[00]  .True 
  C80:  					BreakLoop
  C88:  				EndIf
  C90:  				Wait  1`
  C9C:  			EndLoop
  CA4:  			If  *Flag[00]  ==  .True 
  CB4:  				Call  UseIdleAnimation  ( .Actor:Player .True )
  CC8:  				BreakLoop
  CD0:  			EndIf
  CD8:  			Call  SetActorScale ( .Actor:Self *Fixed[0.8] *Fixed[1.3] *Fixed[1.0] )
  CF4:  			Set   *Flag[00]  .False 
  D04:  			Loop  00000001 
  D10:  				Call  GetActionSuccessCopy  ( *Var1 )
  D20:  				If  *Var1  ==  00000001 
  D30:  					Set   *Flag[00]  .True 
  D40:  					BreakLoop
  D48:  				EndIf
  D50:  				Wait  1`
  D5C:  			EndLoop
  D64:  			If  *Flag[00]  ==  .True 
  D74:  				Call  UseIdleAnimation  ( .Actor:Player .True )
  D88:  				BreakLoop
  D90:  			EndIf
  D98:  			Call  SetActorScale ( .Actor:Self *Fixed[0.7] *Fixed[1.4] *Fixed[1.0] )
  DB4:  			Set   *Flag[00]  .False 
  DC4:  			Loop  00000001 
  DD0:  				Call  GetActionSuccessCopy  ( *Var1 )
  DE0:  				If  *Var1  ==  00000001 
  DF0:  					Set   *Flag[00]  .True 
  E00:  					BreakLoop
  E08:  				EndIf
  E10:  				Wait  1`
  E1C:  			EndLoop
  E24:  			If  *Flag[00]  ==  .True 
  E34:  				Call  UseIdleAnimation  ( .Actor:Player .True )
  E48:  				BreakLoop
  E50:  			EndIf
  E58:  			Call  SetActorScale ( .Actor:Self *Fixed[0.7] *Fixed[1.5] *Fixed[1.0] )
  E74:  			Set   *Flag[00]  .False 
  E84:  			Loop  00000001 
  E90:  				Call  GetActionSuccessCopy  ( *Var1 )
  EA0:  				If  *Var1  ==  00000001 
  EB0:  					Set   *Flag[00]  .True 
  EC0:  					BreakLoop
  EC8:  				EndIf
  ED0:  				Wait  1`
  EDC:  			EndLoop
  EE4:  			If  *Flag[00]  ==  .True 
  EF4:  				Call  UseIdleAnimation  ( .Actor:Player .True )
  F08:  				BreakLoop
  F10:  			EndIf
  F18:  			Call  SetActorScale ( .Actor:Self *Fixed[0.7] *Fixed[1.4] *Fixed[1.0] )
  F34:  			Set   *Flag[00]  .False 
  F44:  			Loop  00000001 
  F50:  				Call  GetActionSuccessCopy  ( *Var1 )
  F60:  				If  *Var1  ==  00000001 
  F70:  					Set   *Flag[00]  .True 
  F80:  					BreakLoop
  F88:  				EndIf
  F90:  				Wait  1`
  F9C:  			EndLoop
  FA4:  			If  *Flag[00]  ==  .True 
  FB4:  				Call  UseIdleAnimation  ( .Actor:Player .True )
  FC8:  				BreakLoop
  FD0:  			EndIf
  FD8:  			Call  SetActorScale ( .Actor:Self *Fixed[0.8] *Fixed[1.3] *Fixed[1.0] )
  FF4:  			Set   *Flag[00]  .False 
 1004:  			Loop  00000001 
 1010:  				Call  GetActionSuccessCopy  ( *Var1 )
 1020:  				If  *Var1  ==  00000001 
 1030:  					Set   *Flag[00]  .True 
 1040:  					BreakLoop
 1048:  				EndIf
 1050:  				Wait  1`
 105C:  			EndLoop
 1064:  			If  *Flag[00]  ==  .True 
 1074:  				Call  UseIdleAnimation  ( .Actor:Player .True )
 1088:  				BreakLoop
 1090:  			EndIf
 1098:  			Call  SetActorScale ( .Actor:Self *Fixed[0.9] *Fixed[1.2] *Fixed[1.0] )
 10B4:  			Set   *Flag[00]  .False 
 10C4:  			Loop  00000001 
 10D0:  				Call  GetActionSuccessCopy  ( *Var1 )
 10E0:  				If  *Var1  ==  00000001 
 10F0:  					Set   *Flag[00]  .True 
 1100:  					BreakLoop
 1108:  				EndIf
 1110:  				Wait  1`
 111C:  			EndLoop
 1124:  			If  *Flag[00]  ==  .True 
 1134:  				Call  UseIdleAnimation  ( .Actor:Player .True )
 1148:  				BreakLoop
 1150:  			EndIf
 1158:  			Call  SetActorScale ( .Actor:Self *Fixed[1.0] *Fixed[1.0] *Fixed[1.0] )
 1174:  			Set   *Flag[00]  .False 
 1184:  			Loop  00000001 
 1190:  				Call  GetActionSuccessCopy  ( *Var1 )
 11A0:  				If  *Var1  ==  00000001 
 11B0:  					Set   *Flag[00]  .True 
 11C0:  					BreakLoop
 11C8:  				EndIf
 11D0:  				Wait  1`
 11DC:  			EndLoop
 11E4:  			If  *Flag[00]  ==  .True 
 11F4:  				Call  UseIdleAnimation  ( .Actor:Player .True )
 1208:  				BreakLoop
 1210:  			EndIf
 1218:  		EndLoop
 1220:  		If  *Flag[00]  ==  .True 
 1230:  			BreakLoop
 1238:  		EndIf
 1240:  		Set   *Flag[00]  .False 
 1250:  		Loop  00000005 
 125C:  			Call  GetActionSuccessCopy  ( *Var1 )
 126C:  			If  *Var1  ==  00000001 
 127C:  				Set   *Flag[00]  .True 
 128C:  				BreakLoop
 1294:  			EndIf
 129C:  			Wait  1`
 12A8:  		EndLoop
 12B0:  		If  *Flag[00]  ==  .True 
 12C0:  			Call  UseIdleAnimation  ( .Actor:Player .True )
 12D4:  			BreakLoop
 12DC:  		EndIf
 12E4:  		Call  PlaySoundAtActor  ( .Actor:Self 000003E0 )
 12F8:  		Call  SetActorScale     ( .Actor:Self *Fixed[1.0] *Fixed[1.0] *Fixed[1.0] )
 1314:  		Set   *Flag[00]  .False 
 1324:  		Loop  00000001 
 1330:  			Call  GetActionSuccessCopy  ( *Var1 )
 1340:  			If  *Var1  ==  00000001 
 1350:  				Set   *Flag[00]  .True 
 1360:  				BreakLoop
 1368:  			EndIf
 1370:  			Wait  1`
 137C:  		EndLoop
 1384:  		If  *Flag[00]  ==  .True 
 1394:  			Call  UseIdleAnimation  ( .Actor:Player .True )
 13A8:  			BreakLoop
 13B0:  		EndIf
 13B8:  		Call  SetActorScale ( .Actor:Self *Fixed[0.9] *Fixed[1.2] *Fixed[1.0] )
 13D4:  		Set   *Flag[00]  .False 
 13E4:  		Loop  00000001 
 13F0:  			Call  GetActionSuccessCopy  ( *Var1 )
 1400:  			If  *Var1  ==  00000001 
 1410:  				Set   *Flag[00]  .True 
 1420:  				BreakLoop
 1428:  			EndIf
 1430:  			Wait  1`
 143C:  		EndLoop
 1444:  		If  *Flag[00]  ==  .True 
 1454:  			Call  UseIdleAnimation  ( .Actor:Player .True )
 1468:  			BreakLoop
 1470:  		EndIf
 1478:  		Call  SetActorScale ( .Actor:Self *Fixed[0.8] *Fixed[1.3] *Fixed[1.0] )
 1494:  		Set   *Flag[00]  .False 
 14A4:  		Loop  00000001 
 14B0:  			Call  GetActionSuccessCopy  ( *Var1 )
 14C0:  			If  *Var1  ==  00000001 
 14D0:  				Set   *Flag[00]  .True 
 14E0:  				BreakLoop
 14E8:  			EndIf
 14F0:  			Wait  1`
 14FC:  		EndLoop
 1504:  		If  *Flag[00]  ==  .True 
 1514:  			Call  UseIdleAnimation  ( .Actor:Player .True )
 1528:  			BreakLoop
 1530:  		EndIf
 1538:  		Call  SetActorScale ( .Actor:Self *Fixed[0.7] *Fixed[1.4] *Fixed[1.0] )
 1554:  		Set   *Flag[00]  .False 
 1564:  		Loop  00000001 
 1570:  			Call  GetActionSuccessCopy  ( *Var1 )
 1580:  			If  *Var1  ==  00000001 
 1590:  				Set   *Flag[00]  .True 
 15A0:  				BreakLoop
 15A8:  			EndIf
 15B0:  			Wait  1`
 15BC:  		EndLoop
 15C4:  		If  *Flag[00]  ==  .True 
 15D4:  			Call  UseIdleAnimation  ( .Actor:Player .True )
 15E8:  			BreakLoop
 15F0:  		EndIf
 15F8:  		Call  SetActorScale ( .Actor:Self *Fixed[0.7] *Fixed[1.5] *Fixed[1.0] )
 1614:  		Set   *Flag[00]  .False 
 1624:  		Loop  00000002 
 1630:  			Call  GetActionSuccessCopy  ( *Var1 )
 1640:  			If  *Var1  ==  00000001 
 1650:  				Set   *Flag[00]  .True 
 1660:  				BreakLoop
 1668:  			EndIf
 1670:  			Wait  1`
 167C:  		EndLoop
 1684:  		If  *Flag[00]  ==  .True 
 1694:  			Call  UseIdleAnimation  ( .Actor:Player .True )
 16A8:  			BreakLoop
 16B0:  		EndIf
 16B8:  		Call  SetActorScale ( .Actor:Self *Fixed[0.6] *Fixed[1.6] *Fixed[1.0] )
 16D4:  		Set   *Flag[00]  .False 
 16E4:  		Loop  0000000A 
 16F0:  			Call  GetActionSuccessCopy  ( *Var1 )
 1700:  			If  *Var1  ==  00000001 
 1710:  				Set   *Flag[00]  .True 
 1720:  				BreakLoop
 1728:  			EndIf
 1730:  			Wait  1`
 173C:  		EndLoop
 1744:  		If  *Flag[00]  ==  .True 
 1754:  			Call  UseIdleAnimation  ( .Actor:Player .True )
 1768:  			BreakLoop
 1770:  		EndIf
 1778:  		Call  SetActorScale ( .Actor:Self *Fixed[1.0] *Fixed[1.0] *Fixed[1.0] )
 1794:  		Set   *Flag[00]  .False 
 17A4:  		Loop  00000002 
 17B0:  			Call  GetActionSuccessCopy  ( *Var1 )
 17C0:  			If  *Var1  ==  00000001 
 17D0:  				Set   *Flag[00]  .True 
 17E0:  				BreakLoop
 17E8:  			EndIf
 17F0:  			Wait  1`
 17FC:  		EndLoop
 1804:  		If  *Flag[00]  ==  .True 
 1814:  			Call  UseIdleAnimation  ( .Actor:Player .True )
 1828:  			BreakLoop
 1830:  		EndIf
 1838:  		Call  UseIdleAnimation  ( .Actor:Player .True )
 184C:  		Call  EnemyDamageTarget ( .Actor:Self *Var0 ~Flags:DamageType:Unblockable|IgnoreDefense 00000000 00000000 00000002 00000040 )
 1874:  		Call  GetLastDamage     ( .Actor:Player *Var3 )
 1888:  		If  *Var3  !=  00000000 
 1898:  			Call  PlaySoundAtActor  ( .Actor:Self 0000206D )
 18AC:  			Call  PlaySoundAtActor  ( .Actor:Self 00000214 )
 18C0:  			Call  GetActorPos       ( .Actor:Self *Var0 *Var1 *Var2 )
 18DC:  			Add   *Var1  0000000F 
 18EC:  			Call  $Function_8021819C_1C ( *Var0 *Var1 *Var2 *Var3 )
 1908:  			Thread
 1910:  				Wait  15`
 191C:  				Call  PlaySoundAtActor      ( .Actor:Self 0000025C )
 1930:  				Call  $Function_80218250_1C ( *Var0 *Var1 *Var2 *Var3 )
 194C:  			EndThread
 1954:  			Add   *Var0  00000014 
 1964:  			Add   *Var1  00000014 
 1974:  			Call  PlayEffect    ( ~FX:Recover:HP *Var0 *Var1 *Var2 *Var3 00000000 00000000 00000000 00000000 00000000 00000000 00000000 00000000 )
 19B8:  			Call  GetActorHP    ( .Actor:Self *Var0 )
 19CC:  			Add   *Var0  *Var3 
 19DC:  			Call  SetEnemyHP    ( .Actor:Self *Var0 )
 19F0:  		Else
 19F8:  			Add   *VarD  00000001 
 1A08:  			If  *VarD  >  00000001 
 1A18:  				Call  80269470 ( )
 1A24:  				BreakLoop
 1A2C:  			EndIf
 1A34:  		EndIf
 1A3C:  		Call  GetPlayerHP   ( *Var1 )
 1A4C:  		If  *Var1  ==  00000000 
 1A5C:  			Call  80269470 ( )
 1A68:  			BreakLoop
 1A70:  		EndIf
 1A78:  		Set   *Flag[00]  .False 
 1A88:  		Loop  0000001E 
 1A94:  			Call  GetActionSuccessCopy  ( *Var1 )
 1AA4:  			If  *Var1  ==  00000001 
 1AB4:  				Set   *Flag[00]  .True 
 1AC4:  				BreakLoop
 1ACC:  			EndIf
 1AD4:  			Wait  1`
 1AE0:  		EndLoop
 1AE8:  		If  *Flag[00]  ==  .True 
 1AF8:  			BreakLoop
 1B00:  		EndIf
 1B08:  	EndLoop
 1B10:  	Call  80269470 ( )
 1B1C:  	Call  SetActorScale ( .Actor:Self *Fixed[1.0] *Fixed[1.0] *Fixed[1.0] )
 1B38:  EndIf
 1B40:  Call  UseBattleCamPreset    ( 00000002 )
 1B50:  Call  SetGoalToTarget   ( .Actor:Self )
 1B60:  Call  AddGoalPos        ( .Actor:Self  50`  10`  0` )
 1B7C:  Call  SetActorSpeed     ( .Actor:Self *Fixed[8.0] )
 1B90:  Call  SetAnimation      ( .Actor:Self 00000001 00340102 )
 1BA8:  Call  FlyToGoal ( .Actor:Self  0`  -10` .Easing:Linear )
 1BC4:  Wait  10`
 1BD0:  Call  YieldTurn ( )
 1BDC:  ExecWait  $Script_8021BA70_1C 
 1BE8:  Call  EnableIdleScript  ( .Actor:Self 00000001 )
 1BFC:  Call  UseIdleAnimation  ( .Actor:Self .True )
 1C10:  Return
 1C18:  End
}

#new:Script $Script_TakeTurn_8021E7B4_1C {
    0:  Call  GetActorVar   ( .Actor:Self 00000008 *Var0 )
   18:  If  *Var0  ==  00000001 
   28:  	ExecWait  $Script_8021CB94_1C 
   34:  	Return
   3C:  EndIf
   44:  Call  UseIdleAnimation  ( .Actor:Self .False )
   58:  Call  EnableIdleScript  ( .Actor:Self 00000000 )
   6C:  Call  SetTargetActor    ( .Actor:Self .Actor:Player )
   80:  Call  UseBattleCamPreset    ( 0000003F )
   90:  Call  BattleCamTargetActor  ( .Actor:Self )
   A0:  Call  8024ECF8  ( FFFFFFFF 00000001 00000000 )
   B8:  Call  SetAnimation      ( .Actor:Self 00000001 00340102 )
   D0:  Call  SetActorFlagBits  ( .Actor:Self 00000800 .False )
   E8:  Call  GetActorPos       ( .Actor:Self *Var0 *Var1 *Var2 )
  104:  Sub   *Var1  00000018 
  114:  Call  SetActorPos       ( .Actor:Self *Var0 *Var1 *Var2 )
  130:  Call  EnemyTestTarget   ( .Actor:Self *Var0 ~Flags:DamageType:IgnoreDefense 00000000 00000002 00000010 )
  154:  Switch  *Var0 
  160:  	CaseOR  ==  .HitResult:Miss % 6
  16C:  	CaseOR  ==  .HitResult:Lucky % 5
  178:  		Set   *VarA  *Var0 
  188:  		Wait  10`
  194:  		Call  SetActorSpeed ( .Actor:Self *Fixed[5.0] )
  1A8:  		Call  SetActorJumpGravity   ( .Actor:Self *Fixed[1.8] )
  1BC:  		Call  SetAnimation  ( .Actor:Self 00000001 00340106 )
  1D4:  		Call  SetGoalToTarget   ( .Actor:Self )
  1E4:  		Call  GetGoalPos    ( .Actor:Self *Var0 *Var1 *Var2 )
  200:  		Call  AddGoalPos    ( .Actor:Self  -50`  0`  0` )
  21C:  		Call  SetActorSpeed ( .Actor:Self *Fixed[8.0] )
  230:  		Call  SetAnimation  ( .Actor:Self 00000001 00340106 )
  248:  		Call  FlyToGoal     ( .Actor:Self  0`  -40` .Easing:Linear )
  264:  		Call  SetAnimationRate  ( .Actor:Self 00000001 *Fixed[10.0] )
  27C:  		Wait  15`
  288:  		Call  SetAnimationRate  ( .Actor:Self 00000001 *Fixed[1.0] )
  2A0:  		If  *VarA  ==  .HitResult:Lucky % 5
  2B0:  			Call  EnemyTestTarget   ( .Actor:Self *Var0 ~Flags:DamageType:TriggerLucky 00000000 00000000 00000000 )
  2D4:  		EndIf
  2DC:  		Call  YieldTurn ( )
  2E8:  		Call  UseBattleCamPreset    ( 00000002 )
  2F8:  		Call  SetActorYaw   ( .Actor:Self  180` )
  30C:  		Call  AddActorDecoration    ( .Actor:Self 00000001 00000000 .Decoration:Sweat )
  328:  		ExecWait  $Script_8021BA70_1C 
  334:  		Call  RemoveActorDecoration ( .Actor:Self 00000001 00000000 )
  34C:  		Call  SetActorYaw   ( .Actor:Self  0` )
  360:  		Call  EnableIdleScript      ( .Actor:Self 00000001 )
  374:  		Call  UseIdleAnimation      ( .Actor:Self .True )
  388:  		Return
  390:  	EndCaseGroup
  398:  	Case  ==  .HitResult:HitStatic % 7
  3A4:  		Call  GetStatusFlags    ( .Actor:Self *Var0 )
  3B8:  		If  *Var0  &  ~Flags:StatusFlags:Static % 2000
  3C8:  			Set   *Flag[00]  .False 
  3D8:  		Else
  3E0:  			Set   *Flag[00]  .True 
  3F0:  		EndIf
  3F8:  EndSwitch
  400:  Wait  10`
  40C:  Call  SetActorSpeed ( .Actor:Self *Fixed[5.0] )
  420:  Call  SetActorJumpGravity   ( .Actor:Self *Fixed[1.8] )
  434:  Call  SetAnimation  ( .Actor:Self 00000001 00340106 )
  44C:  Call  SetGoalToTarget       ( .Actor:Self )
  45C:  Call  AddGoalPos    ( .Actor:Self  -4`  -8`  -15` )
  478:  Call  SetActorSpeed ( .Actor:Self *Fixed[8.0] )
  48C:  Call  SetAnimation  ( .Actor:Self 00000001 00340106 )
  4A4:  Call  FlyToGoal     ( .Actor:Self  0`  -40` .Easing:Linear )
  4C0:  If  *Flag[00]  ==  .True 
  4D0:  	Call  EnemyDamageTarget ( .Actor:Self *Var0 ~Flags:DamageType:IgnoreDefense 00000000 00000000 00000000 00000020 )
  4F8:  	Return
  500:  EndIf
  508:  Call  GetStatusFlags    ( .Actor:Player *Var0 )
  51C:  If  *Var0  &  ~Flags:StatusFlags:Stone % 100000
  52C:  	Wait  10`
  538:  	Loop  00000002 
  544:  		Call  SetAnimation  ( .Actor:Self 00000001 00340102 )
  55C:  		Wait  21`
  568:  		Loop  00000002 
  574:  			Call  PlaySoundAtActor  ( .Actor:Self 000003E0 )
  588:  			Call  SetActorScale ( .Actor:Self *Fixed[1.0] *Fixed[1.0] *Fixed[1.0] )
  5A4:  			Wait  1`
  5B0:  			Call  SetActorScale ( .Actor:Self *Fixed[0.9] *Fixed[1.2] *Fixed[1.0] )
  5CC:  			Wait  1`
  5D8:  			Call  SetActorScale ( .Actor:Self *Fixed[0.8] *Fixed[1.3] *Fixed[1.0] )
  5F4:  			Wait  1`
  600:  			Call  SetActorScale ( .Actor:Self *Fixed[0.7] *Fixed[1.4] *Fixed[1.0] )
  61C:  			Wait  1`
  628:  			Call  SetActorScale ( .Actor:Self *Fixed[0.7] *Fixed[1.5] *Fixed[1.0] )
  644:  			Wait  1`
  650:  			Call  SetActorScale ( .Actor:Self *Fixed[0.7] *Fixed[1.4] *Fixed[1.0] )
  66C:  			Wait  1`
  678:  			Call  SetActorScale ( .Actor:Self *Fixed[0.8] *Fixed[1.3] *Fixed[1.0] )
  694:  			Wait  1`
  6A0:  			Call  SetActorScale ( .Actor:Self *Fixed[0.9] *Fixed[1.2] *Fixed[1.0] )
  6BC:  			Wait  1`
  6C8:  			Call  SetActorScale ( .Actor:Self *Fixed[1.0] *Fixed[1.0] *Fixed[1.0] )
  6E4:  			Wait  1`
  6F0:  		EndLoop
  6F8:  		Wait  5`
  704:  		Call  PlaySoundAtActor  ( .Actor:Self 000003E0 )
  718:  		Call  SetActorScale ( .Actor:Self *Fixed[1.0] *Fixed[1.0] *Fixed[1.0] )
  734:  		Wait  1`
  740:  		Call  SetActorScale ( .Actor:Self *Fixed[0.9] *Fixed[1.2] *Fixed[1.0] )
  75C:  		Wait  1`
  768:  		Call  SetActorScale ( .Actor:Self *Fixed[0.8] *Fixed[1.3] *Fixed[1.0] )
  784:  		Wait  1`
  790:  		Call  SetActorScale ( .Actor:Self *Fixed[0.7] *Fixed[1.4] *Fixed[1.0] )
  7AC:  		Wait  1`
  7B8:  		Call  SetActorScale ( .Actor:Self *Fixed[0.7] *Fixed[1.5] *Fixed[1.0] )
  7D4:  		Wait  2`
  7E0:  		Call  SetActorScale ( .Actor:Self *Fixed[0.6] *Fixed[1.6] *Fixed[1.0] )
  7FC:  		Wait  10`
  808:  		Call  SetActorScale ( .Actor:Self *Fixed[1.0] *Fixed[1.0] *Fixed[1.0] )
  824:  		Wait  2`
  830:  		Call  EnemyDamageTarget ( .Actor:Self *Var0 ~Flags:DamageType:IgnoreDefense 00000000 00000000 00000002 00000040 )
  858:  		Wait  30`
  864:  	EndLoop
  86C:  Else
  874:  	Call  ShowMessageBox    ( 00000031 00007FFF )
  888:  	Call  802694A4  ( 00000001 )
  898:  	Call  LoadActionCommand ( .ActionCommand:StopLeech )
  8A8:  	Call  802A9000 ( )
  8B4:  	Call  SetupMashMeter    ( 00000001 0000001E 00000000 00000000 00000000 00000000 )
  8D8:  	Wait  10`
  8E4:  	Call  SetBattleFlagBits ( 00004000 .False )
  8F8:  	Call  802A9110  ( 00000000 00007FFF 00000003 )
  910:  	Set   *VarD  00000000 
  920:  	Loop  00000005 
  92C:  		Call  SetAnimation  ( .Actor:Self 00000001 00340102 )
  944:  		Set   *Flag[00]  .False 
  954:  		Loop  00000015 
  960:  			Call  GetActionSuccessCopy  ( *Var1 )
  970:  			If  *Var1  ==  00000001 
  980:  				Set   *Flag[00]  .True 
  990:  				BreakLoop
  998:  			EndIf
  9A0:  			Wait  1`
  9AC:  		EndLoop
  9B4:  		If  *Flag[00]  ==  .True 
  9C4:  			Call  UseIdleAnimation  ( .Actor:Player .True )
  9D8:  			BreakLoop
  9E0:  		EndIf
  9E8:  		Call  SetAnimation      ( .Actor:Player 00000000 0003000C )
  A00:  		Call  UseIdleAnimation  ( .Actor:Player .False )
  A14:  		Call  PlaySoundAtActor  ( .Actor:Self 000003E0 )
  A28:  		Call  SetActorScale     ( .Actor:Self *Fixed[1.0] *Fixed[1.0] *Fixed[1.0] )
  A44:  		Set   *Flag[00]  .False 
  A54:  		Loop  00000001 
  A60:  			Call  GetActionSuccessCopy  ( *Var1 )
  A70:  			If  *Var1  ==  00000001 
  A80:  				Set   *Flag[00]  .True 
  A90:  				BreakLoop
  A98:  			EndIf
  AA0:  			Wait  1`
  AAC:  		EndLoop
  AB4:  		If  *Flag[00]  ==  .True 
  AC4:  			Call  UseIdleAnimation  ( .Actor:Player .True )
  AD8:  			BreakLoop
  AE0:  		EndIf
  AE8:  		Call  SetActorScale ( .Actor:Self *Fixed[0.9] *Fixed[1.2] *Fixed[1.0] )
  B04:  		Set   *Flag[00]  .False 
  B14:  		Loop  00000001 
  B20:  			Call  GetActionSuccessCopy  ( *Var1 )
  B30:  			If  *Var1  ==  00000001 
  B40:  				Set   *Flag[00]  .True 
  B50:  				BreakLoop
  B58:  			EndIf
  B60:  			Wait  1`
  B6C:  		EndLoop
  B74:  		If  *Flag[00]  ==  .True 
  B84:  			Call  UseIdleAnimation  ( .Actor:Player .True )
  B98:  			BreakLoop
  BA0:  		EndIf
  BA8:  		Call  SetActorScale ( .Actor:Self *Fixed[0.8] *Fixed[1.3] *Fixed[1.0] )
  BC4:  		Set   *Flag[00]  .False 
  BD4:  		Loop  00000001 
  BE0:  			Call  GetActionSuccessCopy  ( *Var1 )
  BF0:  			If  *Var1  ==  00000001 
  C00:  				Set   *Flag[00]  .True 
  C10:  				BreakLoop
  C18:  			EndIf
  C20:  			Wait  1`
  C2C:  		EndLoop
  C34:  		If  *Flag[00]  ==  .True 
  C44:  			Call  UseIdleAnimation  ( .Actor:Player .True )
  C58:  			BreakLoop
  C60:  		EndIf
  C68:  		Call  SetActorScale ( .Actor:Self *Fixed[0.7] *Fixed[1.4] *Fixed[1.0] )
  C84:  		Set   *Flag[00]  .False 
  C94:  		Loop  00000001 
  CA0:  			Call  GetActionSuccessCopy  ( *Var1 )
  CB0:  			If  *Var1  ==  00000001 
  CC0:  				Set   *Flag[00]  .True 
  CD0:  				BreakLoop
  CD8:  			EndIf
  CE0:  			Wait  1`
  CEC:  		EndLoop
  CF4:  		If  *Flag[00]  ==  .True 
  D04:  			Call  UseIdleAnimation  ( .Actor:Player .True )
  D18:  			BreakLoop
  D20:  		EndIf
  D28:  		Call  SetActorScale ( .Actor:Self *Fixed[0.7] *Fixed[1.5] *Fixed[1.0] )
  D44:  		Set   *Flag[00]  .False 
  D54:  		Loop  00000002 
  D60:  			Call  GetActionSuccessCopy  ( *Var1 )
  D70:  			If  *Var1  ==  00000001 
  D80:  				Set   *Flag[00]  .True 
  D90:  				BreakLoop
  D98:  			EndIf
  DA0:  			Wait  1`
  DAC:  		EndLoop
  DB4:  		If  *Flag[00]  ==  .True 
  DC4:  			Call  UseIdleAnimation  ( .Actor:Player .True )
  DD8:  			BreakLoop
  DE0:  		EndIf
  DE8:  		Call  SetActorScale ( .Actor:Self *Fixed[0.6] *Fixed[1.6] *Fixed[1.0] )
  E04:  		Set   *Flag[00]  .False 
  E14:  		Loop  0000000A 
  E20:  			Call  GetActionSuccessCopy  ( *Var1 )
  E30:  			If  *Var1  ==  00000001 
  E40:  				Set   *Flag[00]  .True 
  E50:  				BreakLoop
  E58:  			EndIf
  E60:  			Wait  1`
  E6C:  		EndLoop
  E74:  		If  *Flag[00]  ==  .True 
  E84:  			Call  UseIdleAnimation  ( .Actor:Player .True )
  E98:  			BreakLoop
  EA0:  		EndIf
  EA8:  		Call  SetActorScale ( .Actor:Self *Fixed[1.0] *Fixed[1.0] *Fixed[1.0] )
  EC4:  		Set   *Flag[00]  .False 
  ED4:  		Loop  00000002 
  EE0:  			Call  GetActionSuccessCopy  ( *Var1 )
  EF0:  			If  *Var1  ==  00000001 
  F00:  				Set   *Flag[00]  .True 
  F10:  				BreakLoop
  F18:  			EndIf
  F20:  			Wait  1`
  F2C:  		EndLoop
  F34:  		If  *Flag[00]  ==  .True 
  F44:  			Call  UseIdleAnimation  ( .Actor:Player .True )
  F58:  			BreakLoop
  F60:  		EndIf
  F68:  		Call  UseIdleAnimation  ( .Actor:Player .True )
  F7C:  		Call  EnemyDamageTarget ( .Actor:Self *Var0 ~Flags:DamageType:Unblockable|IgnoreDefense 00000000 00000000 00000002 00000040 )
  FA4:  		Call  GetLastDamage     ( .Actor:Player *Var3 )
  FB8:  		If  *Var3  !=  00000000 
  FC8:  			Call  PlaySoundAtActor  ( .Actor:Self 0000206D )
  FDC:  			Call  PlaySoundAtActor  ( .Actor:Self 00000214 )
  FF0:  			Call  GetActorPos       ( .Actor:Self *Var0 *Var1 *Var2 )
 100C:  			Add   *Var1  0000000F 
 101C:  			Call  $Function_8021819C_1C ( *Var0 *Var1 *Var2 *Var3 )
 1038:  			Thread
 1040:  				Wait  15`
 104C:  				Call  PlaySoundAtActor      ( .Actor:Self 0000025C )
 1060:  				Call  $Function_80218250_1C ( *Var0 *Var1 *Var2 *Var3 )
 107C:  			EndThread
 1084:  			Add   *Var0  00000014 
 1094:  			Add   *Var1  00000014 
 10A4:  			Call  PlayEffect    ( ~FX:Recover:HP *Var0 *Var1 *Var2 *Var3 00000000 00000000 00000000 00000000 00000000 00000000 00000000 00000000 )
 10E8:  			Call  GetActorHP    ( .Actor:Self *Var0 )
 10FC:  			Add   *Var0  *Var3 
 110C:  			Call  SetEnemyHP    ( .Actor:Self *Var0 )
 1120:  		Else
 1128:  			Add   *VarD  00000001 
 1138:  			If  *VarD  >  00000001 
 1148:  				Call  80269470 ( )
 1154:  				BreakLoop
 115C:  			EndIf
 1164:  		EndIf
 116C:  		Call  GetPlayerHP   ( *Var1 )
 117C:  		If  *Var1  ==  00000000 
 118C:  			Call  80269470 ( )
 1198:  			BreakLoop
 11A0:  		EndIf
 11A8:  		Set   *Flag[00]  .False 
 11B8:  		Loop  00000023 
 11C4:  			Call  GetActionSuccessCopy  ( *Var1 )
 11D4:  			If  *Var1  ==  00000001 
 11E4:  				Set   *Flag[00]  .True 
 11F4:  				BreakLoop
 11FC:  			EndIf
 1204:  			Wait  1`
 1210:  		EndLoop
 1218:  		If  *Flag[00]  ==  .True 
 1228:  			BreakLoop
 1230:  		EndIf
 1238:  	EndLoop
 1240:  	Call  80269470 ( )
 124C:  	Call  SetActorScale ( .Actor:Self *Fixed[1.0] *Fixed[1.0] *Fixed[1.0] )
 1268:  EndIf
 1270:  Call  UseBattleCamPreset    ( 00000002 )
 1280:  Call  SetGoalToTarget   ( .Actor:Self )
 1290:  Call  AddGoalPos        ( .Actor:Self  50`  10`  0` )
 12AC:  Call  SetActorSpeed     ( .Actor:Self *Fixed[8.0] )
 12C0:  Call  SetAnimation      ( .Actor:Self 00000001 00340102 )
 12D8:  Call  FlyToGoal ( .Actor:Self  0`  -10` .Easing:Linear )
 12F4:  Wait  10`
 1300:  Call  YieldTurn ( )
 130C:  ExecWait  $Script_8021BA70_1C 
 1318:  Call  EnableIdleScript  ( .Actor:Self 00000001 )
 132C:  Call  UseIdleAnimation  ( .Actor:Self .True )
 1340:  Return
 1348:  Call  EnableIdleScript  ( .Actor:Self 00000001 )
 135C:  Call  UseIdleAnimation  ( .Actor:Self .True )
 1370:  Return
 1378:  End
}

