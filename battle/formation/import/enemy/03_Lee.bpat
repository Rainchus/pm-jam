% Automatically dumped from section 03

#new:Actor $03_Lee {
% stats
[Index]        7Eb 
[Level]         0`b 
[MaxHP]        20`b 
[Coins]         0`b 
[Flags]       00000000 
[StatusTable] $StatusTable_8021D3D0_03 
% ai
[PartsCount]    1`s 
[PartsTable]  $PartsTable_8021D47C_03 
[Script]      $Script_Init_8021D4C8_03 
% move effectiveness
[Escape]      100`b 
[Item]          0`b 
[AirLift]       0`b 
[Hurricane]     0`b % Bow's "Spook" as well
[UpAndAway]     0`b 
[PowerBounce]  90`b 
[SpinSmash]     0`b % weight (0-4)
% ui positions
[Size]         36`b  36`b % width height
[HealthBar]     0`b   0`b % dx dy
[StatusTurn]  -10`b  20`b % dx dy
[StatusIcon]   10`b  20`b % dx dy
}

#new:Function $Function_802180D0_03 {
    0:  LI        V1, B
    4:  LA        V0, $End[2C]
        .oC
    C:  SW        R0, 0 (V0)
   10:  ADDIU     V1, V1, FFFF
   14:  BGEZ      V1, .oC
   18:  ADDIU     V0, V0, FFFC
   1C:  LI        V0, FFFF
   20:  SAW       V0, $End[30]
   28:  JR        RA
   2C:  LI        V0, 2
}

#new:Function $Function_80218100_03 {
    0:  ADDIU     SP, SP, FFA0
    4:  SW        S5, 54 (SP)
    8:  COPY      S5, A0
    C:  SW        S4, 50 (SP)
   10:  LA        S4, 8010F290
   18:  LA        A1, $End[30]
   20:  SW        RA, 58 (SP)
   24:  SW        S3, 4C (SP)
   28:  SW        S2, 48 (SP)
   2C:  SW        S1, 44 (SP)
   30:  SW        S0, 40 (SP)
   34:  LW        V0, 0 (A1)
   38:  LW        S3, 98 (S5)
   3C:  BGEZ      V0, .o54
   40:  LI        V1, 1
   44:  LI        V0, 2
   48:  SLLV      A0, S3, V0
   4C:  BEQ       R0, R0, .o1D0
   50:  SW        S3, 0 (A1)
        .o54
   54:  BEQ       V0, S3, .o88
   58:  SLL       V1, S3, 2
   5C:  LA        V0, $End[0]
   64:  ADDU      A0, V1, V0
   68:  LW        V0, 0 (A0)
   6C:  BNE       V0, R0, .o8C
   70:  LI        S1, B
   74:  LI        V0, 2
   78:  LI        V1, 1
   7C:  SW        S3, 0 (A1)
   80:  BEQ       R0, R0, .o1DC
   84:  SW        V1, 0 (A0)
        .o88
   88:  LI        S1, B
        .o8C
   8C:  ADDIU     V0, SP, 3C
        .o90
   90:  SW        S1, 0 (V0)
   94:  ADDIU     S1, S1, FFFF
   98:  BGEZ      S1, .o90
   9C:  ADDIU     V0, V0, FFFC
   A0:  CLEAR     S1
   A4:  ADDIU     S2, SP, 10
        .oA8
   A8:  JAL       ~Func:rand_int
   AC:  LI        A0, B
   B0:  LI        A0, B
   B4:  JAL       ~Func:rand_int
   B8:  COPY      S0, V0
   BC:  SLL       S0, S0, 2
   C0:  ADDU      S0, S2, S0
   C4:  SLL       V0, V0, 2
   C8:  ADDU      V0, S2, V0
   CC:  LW        A0, 0 (S0)
   D0:  LW        V1, 0 (V0)
   D4:  ADDIU     S1, S1, 1
   D8:  SW        V1, 0 (S0)
   DC:  SW        A0, 0 (V0)
   E0:  SLTI      V0, S1, 64
   E4:  BNE       V0, R0, .oA8
   E8:  LI        T0, 5
   EC:  CLEAR     S1
   F0:  LI        A3, A
   F4:  LI        A2, B
   F8:  LA        A1, $End[0]
  100:  ADDIU     V1, SP, 10
        .o104
  104:  LW        A0, 0 (V1)
  108:  SLL       V0, A0, 3
  10C:  ADDU      V0, S4, V0
  110:  LBU       V0, 14 (V0)
  114:  BEQL      V0, R0, .o154
  118:  ADDIU     S1, S1, 1
  11C:  BEQL      A0, T0, .o154
  120:  ADDIU     S1, S1, 1
  124:  BEQL      A0, A3, .o154
  128:  ADDIU     S1, S1, 1
  12C:  BEQL      A0, A2, .o154
  130:  ADDIU     S1, S1, 1
  134:  BEQL      A0, S3, .o154
  138:  ADDIU     S1, S1, 1
  13C:  SLL       V0, A0, 2
  140:  ADDU      V0, V0, A1
  144:  LW        V0, 0 (V0)
  148:  BEQ       V0, R0, .o164
  14C:  SLTI      V0, S1, C
  150:  ADDIU     S1, S1, 1
        .o154
  154:  SLTI      V0, S1, C
  158:  BNE       V0, R0, .o104
  15C:  ADDIU     V1, V1, 4
  160:  SLTI      V0, S1, C
        .o164
  164:  BEQ       V0, R0, .o1A0
  168:  SLL       V1, A0, 2
  16C:  LI        V0, 1
  170:  STW       V0, V1 ($End[0])
  17C:  SLL       V0, A0, 3
  180:  ADDU      V0, S4, V0
  184:  SAW       A0, $End[30]
  18C:  SW        A0, 98 (S5)
  190:  LB        V1, 15 (V0)
  194:  LI        V0, 2
  198:  BEQ       R0, R0, .o1DC
  19C:  SW        V1, 9C (S5)
        .o1A0
  1A0:  LI        S1, B
  1A4:  LA        V0, $End[2C]
        .o1AC
  1AC:  SW        R0, 0 (V0)
  1B0:  ADDIU     S1, S1, FFFF
  1B4:  BGEZ      S1, .o1AC
  1B8:  ADDIU     V0, V0, FFFC
  1BC:  LI        V0, 2
  1C0:  SLLV      A0, S3, V0
  1C4:  LI        V1, 1
  1C8:  SAW       S3, $End[30]
        .o1D0
  1D0:  STW       V1, A0 ($End[0])
        .o1DC
  1DC:  LW        RA, 58 (SP)
  1E0:  LW        S5, 54 (SP)
  1E4:  LW        S4, 50 (SP)
  1E8:  LW        S3, 4C (SP)
  1EC:  LW        S2, 48 (SP)
  1F0:  LW        S1, 44 (SP)
  1F4:  LW        S0, 40 (SP)
  1F8:  JR        RA
  1FC:  ADDIU     SP, SP, 60
}

#new:Function $Function_80218300_03 {
    0:  ADDIU     SP, SP, FFB8
    4:  SW        S4, 20 (SP)
    8:  COPY      S4, A0
    C:  SW        S0, 10 (SP)
   10:  SW        RA, 24 (SP)
   14:  SW        S3, 1C (SP)
   18:  SW        S2, 18 (SP)
   1C:  SW        S1, 14 (SP)
   20:  SDC1      F26, 40 (SP)
   24:  SDC1      F24, 38 (SP)
   28:  SDC1      F22, 30 (SP)
   2C:  SDC1      F20, 28 (SP)
   30:  LW        A0, 148 (S4)
   34:  LW        S2, C (S4)
   38:  JAL       ~Func:get_actor
   3C:  COPY      S0, A1
   40:  COPY      S3, V0
   44:  BEQ       S0, R0, .o8C
   48:  ADDIU     S1, S3, C
   4C:  LW        A1, 0 (S2)
   50:  ADDIU     S2, S2, 4
   54:  JAL       ~Func:get_variable
   58:  COPY      A0, S4
   5C:  SH        V0, 70 (S3)
   60:  LW        A1, 0 (S2)
   64:  JAL       ~Func:get_variable
   68:  COPY      A0, S4
   6C:  SH        V0, 72 (S3)
   70:  SW        R0, 74 (S4)
   74:  SW        R0, 70 (S4)
   78:  LH        V1, 72 (S3)
   7C:  LI        V0, 1
   80:  BNE       V1, V0, .o8C
   84:  LI        V0, 2
   88:  SW        V0, 70 (S4)
        .o8C
   8C:  LW        V0, 70 (S4)
   90:  BNE       V0, R0, .o470
   94:  NOP
   98:  LWC1      F0, 144 (S3)
   9C:  LWC1      F24, C (S1)
   A0:  LWC1      F26, 14 (S1)
   A4:  SWC1      F0, 0 (S1)
   A8:  LWC1      F0, 148 (S3)
   AC:  MFC1      A2, F24
   B0:  MFC1      A3, F26
   B4:  LWC1      F22, 0 (S1)
   B8:  SWC1      F0, 4 (S1)
   BC:  LWC1      F20, 14C (S3)
   C0:  MOV.S     F12, F22
   C4:  MOV.S     F14, F20
   C8:  JAL       ~Func:atan2
   CC:  SWC1      F20, 8 (S1)
   D0:  MOV.S     F12, F22
   D4:  MFC1      A2, F24
   D8:  MFC1      A3, F26
   DC:  MOV.S     F14, F20
   E0:  JAL       ~Func:dist2D
   E4:  SWC1      F0, 48 (S1)
   E8:  LH        V0, 64 (S1)
   EC:  MOV.S     F4, F0
   F0:  BNE       V0, R0, .o13C
   F4:  SWC1      F4, 4C (S1)
   F8:  LWC1      F0, 40 (S1)
   FC:  LWC1      F2, 40 (S1)
  100:  DIV.S     F0, F4, F0
  104:  TRUNC.W.S F10, F0
  108:  MFC1      V1, F10
  10C:  NOP
  110:  SLL       V0, V1, 10
  114:  SRA       V0, V0, 10
  118:  MTC1      V0, F0
  11C:  NOP
  120:  CVT.S.W   F0, F0
  124:  MUL.S     F0, F0, F2
  128:  NOP
  12C:  MOV.S     F2, F4
  130:  SH        V1, 64 (S1)
  134:  BEQ       R0, R0, .o170
  138:  SUB.S     F8, F2, F0
        .o13C
  13C:  MTC1      V0, F2
  140:  NOP
  144:  CVT.S.W   F2, F2
  148:  LH        V0, 64 (S1)
  14C:  DIV.S     F2, F4, F2
  150:  MTC1      V0, F0
  154:  NOP
  158:  CVT.S.W   F0, F0
  15C:  MUL.S     F0, F0, F2
  160:  NOP
  164:  LWC1      F4, 4C (S1)
  168:  SWC1      F2, 40 (S1)
  16C:  SUB.S     F8, F4, F0
        .o170
  170:  LH        V1, 64 (S1)
  174:  BEQ       V1, R0, .o860
  178:  LI        V0, 2
  17C:  LH        V0, 64 (S1)
  180:  LWC1      F2, C (S1)
  184:  LIF       F0, 3.14159
  190:  LWC1      F4, 0 (S1)
  194:  MTC1      V0, F6
  198:  NOP
  19C:  CVT.S.W   F6, F6
  1A0:  DIV.S     F0, F0, F6
  1A4:  SUB.S     F2, F2, F4
  1A8:  SWC1      F0, 3C (S1)
  1AC:  MTC1      V1, F0
  1B0:  NOP
  1B4:  CVT.S.W   F0, F0
  1B8:  DIV.S     F2, F2, F0
  1BC:  LWC1      F0, 10 (S1)
  1C0:  SWC1      F2, 30 (S1)
  1C4:  LWC1      F2, 4 (S1)
  1C8:  SW        R0, 44 (S1)
  1CC:  SUB.S     F0, F0, F2
  1D0:  LWC1      F4, 14 (S1)
  1D4:  MOV.S     F2, F6
  1D8:  DIV.S     F0, F0, F2
  1DC:  SWC1      F0, 34 (S1)
  1E0:  MOV.S     F0, F6
  1E4:  DIV.S     F0, F8, F0
  1E8:  LWC1      F2, 8 (S1)
  1EC:  LH        V0, 66 (S1)
  1F0:  SUB.S     F4, F4, F2
  1F4:  LWC1      F2, 40 (S1)
  1F8:  SLTI      V0, V0, 3
  1FC:  ADD.S     F2, F2, F0
  200:  DIV.S     F4, F4, F6
  204:  SWC1      F4, 38 (S1)
  208:  BEQ       V0, R0, .o320
  20C:  SWC1      F2, 40 (S1)
  210:  LH        V0, 64 (S1)
  214:  LI        V1, 168
  218:  BNE       V0, R0, .o224
  21C:  DIV       V1, V0
  220:  BREAK     1C00
        .o224
  224:  LI        AT, FFFF
  228:  BNE       V0, AT, .o23C
  22C:  LUI       AT, 8000
  230:  BNE       V1, AT, .o23C
  234:  NOP
  238:  BREAK     1800
        .o23C
  23C:  MFLO      V1
  240:  LWC1      F8, 4C (S1)
  244:  LIF       F3, 2.8125
  24C:  MTC1      R0, F2
  250:  CVT.D.S   F0, F8
  254:  SUB.D     F0, F0, F2
  258:  LIF       F3, 2.375
  260:  MTC1      R0, F2
  264:  CVT.S.D   F8, F0
  268:  CVT.D.S   F0, F8
  26C:  DIV.D     F0, F0, F2
  270:  CVT.S.D   F8, F0
  274:  LAD       F2, $ConstDouble_80232AF0_03
  27C:  CVT.D.S   F0, F8
  280:  ADD.D     F0, F0, F2
  284:  LIF       F2, 90.0
  28C:  CVT.S.D   F8, F0
  290:  MTC1      V1, F0
  294:  NOP
  298:  CVT.S.W   F0, F0
  29C:  LH        V1, 66 (S1)
  2A0:  LI        V0, 2
  2A4:  SWC1      F2, 24 (S1)
  2A8:  SWC1      F8, 50 (S1)
  2AC:  BNE       V1, V0, .o2D0
  2B0:  SWC1      F0, 28 (S1)
  2B4:  LAD       F2, $ConstDouble_80232AF8_03
  2BC:  CVT.D.S   F0, F8
  2C0:  MUL.D     F0, F0, F2
  2C4:  NOP
  2C8:  CVT.S.D   F0, F0
  2CC:  SWC1      F0, 50 (S1)
        .o2D0
  2D0:  LWC1      F12, 24 (S1)
  2D4:  LIF       F0, 6.28318
  2E0:  LWC1      F20, 44 (S1)
  2E4:  LWC1      F22, 3C (S1)
  2E8:  SW        R0, 18 (S1)
  2EC:  MUL.S     F12, F12, F0
  2F0:  NOP
  2F4:  SW        R0, 1C (S1)
  2F8:  CVT.D.S   F20, F20
  2FC:  LIF       F0, 360.0
  304:  CVT.D.S   F22, F22
  308:  JAL       ~Func:sin_rad
  30C:  DIV.S     F12, F12, F0
  310:  LAD       F2, $ConstDouble_80232B00_03
  318:  BEQ       R0, R0, .o430
  31C:  CVT.D.S   F0, F0
        .o320
  320:  LH        V0, 64 (S1)
  324:  LI        V1, 168
  328:  BNE       V0, R0, .o334
  32C:  DIV       V1, V0
  330:  BREAK     1C00
        .o334
  334:  LI        AT, FFFF
  338:  BNE       V0, AT, .o34C
  33C:  LUI       AT, 8000
  340:  BNE       V1, AT, .o34C
  344:  NOP
  348:  BREAK     1800
        .o34C
  34C:  MFLO      V1
  350:  LWC1      F8, 4C (S1)
  354:  LIF       F3, 2.8125
  35C:  MTC1      R0, F2
  360:  CVT.D.S   F0, F8
  364:  SUB.D     F0, F0, F2
  368:  LIF       F3, 2.375
  370:  MTC1      R0, F2
  374:  CVT.S.D   F8, F0
  378:  CVT.D.S   F0, F8
  37C:  DIV.D     F0, F0, F2
  380:  CVT.S.D   F8, F0
  384:  LAD       F2, $ConstDouble_80232B08_03
  38C:  CVT.D.S   F0, F8
  390:  ADD.D     F0, F0, F2
  394:  LIF       F2, 90.0
  39C:  CVT.S.D   F8, F0
  3A0:  MTC1      V1, F0
  3A4:  NOP
  3A8:  CVT.S.W   F0, F0
  3AC:  LH        V1, 66 (S1)
  3B0:  LI        V0, 4
  3B4:  SWC1      F2, 24 (S1)
  3B8:  SWC1      F8, 50 (S1)
  3BC:  BNE       V1, V0, .o3E4
  3C0:  SWC1      F0, 28 (S1)
  3C4:  LIF       F3, 1.90625
  3CC:  MTC1      R0, F2
  3D0:  CVT.D.S   F0, F8
  3D4:  MUL.D     F0, F0, F2
  3D8:  NOP
  3DC:  CVT.S.D   F0, F0
  3E0:  SWC1      F0, 50 (S1)
        .o3E4
  3E4:  LWC1      F12, 24 (S1)
  3E8:  LIF       F0, 6.28318
  3F4:  LWC1      F20, 44 (S1)
  3F8:  LWC1      F22, 3C (S1)
  3FC:  SW        R0, 18 (S1)
  400:  MUL.S     F12, F12, F0
  404:  NOP
  408:  SW        R0, 1C (S1)
  40C:  CVT.D.S   F20, F20
  410:  LIF       F0, 360.0
  418:  CVT.D.S   F22, F22
  41C:  JAL       ~Func:sin_rad
  420:  DIV.S     F12, F12, F0
  424:  LAD       F2, $ConstDouble_80232B10_03
  42C:  CVT.D.S   F0, F0
        .o430
  430:  MUL.D     F0, F0, F2
  434:  NOP
  438:  MUL.D     F0, F0, F22
  43C:  NOP
  440:  ADD.D     F0, F0, F22
  444:  ADD.D     F20, F20, F0
  448:  CVT.S.D   F20, F20
  44C:  SWC1      F20, 44 (S1)
  450:  LI        A0, FF81
  454:  LW        A2, 58 (S1)
  458:  JAL       ~Func:set_animation
  45C:  LI        A1, 1
  460:  JAL       ~Func:sfx_play_sound
  464:  LI        A0, 2081
  468:  LI        V0, 1
  46C:  SW        V0, 70 (S4)
        .o470
  470:  LW        V1, 70 (S4)
  474:  LI        V0, 2
  478:  BEQ       V1, V0, .o6D0
  47C:  LI        V0, 1
  480:  SLTI      V0, V1, 3
  484:  BEQ       V0, R0, .o49C
  488:  LI        V0, 1
  48C:  BEQ       V1, V0, .o4B0
  490:  CLEAR     V0
  494:  BEQ       R0, R0, .o860
  498:  NOP
        .o49C
  49C:  LI        V0, 3
  4A0:  BEQ       V1, V0, .o78C
  4A4:  CLEAR     V0
  4A8:  BEQ       R0, R0, .o860
  4AC:  NOP
        .o4B0
  4B0:  LWC1      F2, 44 (S1)
  4B4:  LIF       F0, 1.570795
  4C0:  NOP
  4C4:  C.LT.S    F0, F2
  4C8:  NOP
  4CC:  BC1F      .o4E0
  4D0:  LI        A0, FF81
  4D4:  LW        A2, 5C (S1)
  4D8:  JAL       ~Func:set_animation
  4DC:  LI        A1, 1
        .o4E0
  4E0:  LWC1      F6, 0 (S1)
  4E4:  LWC1      F0, 30 (S1)
  4E8:  LWC1      F4, 4 (S1)
  4EC:  LWC1      F22, 144 (S3)
  4F0:  ADD.S     F6, F6, F0
  4F4:  LWC1      F0, 34 (S1)
  4F8:  LWC1      F2, 38 (S1)
  4FC:  ADD.S     F4, F4, F0
  500:  LWC1      F0, 8 (S1)
  504:  LWC1      F20, 148 (S3)
  508:  ADD.S     F0, F0, F2
  50C:  SWC1      F6, 0 (S1)
  510:  SWC1      F4, 4 (S1)
  514:  SWC1      F0, 8 (S1)
  518:  LWC1      F0, 148 (S3)
  51C:  MOV.S     F2, F6
  520:  SWC1      F0, 18 (S1)
  524:  SWC1      F2, 144 (S3)
  528:  JAL       ~Func:sin_rad
  52C:  LWC1      F12, 44 (S1)
  530:  LWC1      F2, 50 (S1)
  534:  MUL.S     F2, F2, F0
  538:  NOP
  53C:  LWC1      F0, 4 (S1)
  540:  ADD.S     F0, F0, F2
  544:  SWC1      F0, 148 (S3)
  548:  LWC1      F0, 8 (S1)
  54C:  SWC1      F0, 14C (S3)
  550:  LWC1      F2, 10 (S1)
  554:  LWC1      F0, 148 (S3)
  558:  C.LT.S    F0, F2
  55C:  NOP
  560:  BC1F      .o580
  564:  MOV.S     F12, F22
  568:  LH        V0, 64 (S1)
  56C:  SLTI      V0, V0, 3
  570:  BNEL      V0, R0, .o57C
  574:  SWC1      F2, 148 (S3)
  578:  MOV.S     F12, F22
        .o57C
  57C:  LWC1      F0, 148 (S3)
        .o580
  580:  LW        A2, 144 (S3)
  584:  NEG.S     F0, F0
  588:  MFC1      A3, F0
  58C:  JAL       ~Func:atan2
  590:  NEG.S     F14, F20
  594:  NEG.S     F0, F0
  598:  SWC1      F0, 164 (S3)
  59C:  LH        V0, 66 (S1)
  5A0:  LWC1      F0, 148 (S3)
  5A4:  SLTI      V0, V0, 3
  5A8:  BEQ       V0, R0, .o5F8
  5AC:  SWC1      F0, 1C (S1)
  5B0:  LWC1      F12, 24 (S1)
  5B4:  LIF       F0, 6.28318
  5C0:  LWC1      F20, 44 (S1)
  5C4:  MUL.S     F12, F12, F0
  5C8:  NOP
  5CC:  LWC1      F22, 3C (S1)
  5D0:  CVT.D.S   F20, F20
  5D4:  LIF       F0, 360.0
  5DC:  CVT.D.S   F22, F22
  5E0:  JAL       ~Func:sin_rad
  5E4:  DIV.S     F12, F12, F0
  5E8:  LAD       F2, $ConstDouble_80232B18_03
  5F0:  BEQ       R0, R0, .o63C
  5F4:  CVT.D.S   F0, F0
        .o5F8
  5F8:  LWC1      F12, 24 (S1)
  5FC:  LIF       F0, 6.28318
  608:  LWC1      F20, 44 (S1)
  60C:  MUL.S     F12, F12, F0
  610:  NOP
  614:  LWC1      F22, 3C (S1)
  618:  CVT.D.S   F20, F20
  61C:  LIF       F0, 360.0
  624:  CVT.D.S   F22, F22
  628:  JAL       ~Func:sin_rad
  62C:  DIV.S     F12, F12, F0
  630:  LAD       F2, $ConstDouble_80232B20_03
  638:  CVT.D.S   F0, F0
        .o63C
  63C:  MUL.D     F0, F0, F2
  640:  NOP
  644:  MUL.D     F0, F0, F22
  648:  NOP
  64C:  ADD.D     F0, F0, F22
  650:  ADD.D     F20, F20, F0
  654:  CVT.S.D   F20, F20
  658:  SWC1      F20, 44 (S1)
  65C:  LWC1      F12, 24 (S1)
  660:  LWC1      F0, 28 (S1)
  664:  ADD.S     F12, F12, F0
  668:  JAL       ~Func:clamp_angle
  66C:  SWC1      F12, 24 (S1)
  670:  LHU       V0, 64 (S1)
  674:  SWC1      F0, 24 (S1)
  678:  ADDIU     V0, V0, FFFF
  67C:  SH        V0, 64 (S1)
  680:  SLL       V0, V0, 10
  684:  BNE       V0, R0, .o860
  688:  CLEAR     V0
  68C:  LWC1      F0, 10 (S1)
  690:  LI        A0, FF81
  694:  SWC1      F0, 148 (S3)
  698:  LWC1      F0, 18 (S1)
  69C:  LWC1      F2, 1C (S1)
  6A0:  LW        A2, 60 (S1)
  6A4:  SUB.S     F0, F0, F2
  6A8:  LIF       F2, 1.8
  6B4:  LI        A1, 1
  6B8:  SWC1      F2, 3C (S1)
  6BC:  NEG.S     F0, F0
  6C0:  JAL       ~Func:set_animation
  6C4:  SWC1      F0, 44 (S1)
  6C8:  BEQ       R0, R0, .o860
  6CC:  LI        V0, 1
        .o6D0
  6D0:  SH        V0, 64 (S1)
  6D4:  LH        V0, 64 (S1)
  6D8:  LI        V1, 168
  6DC:  BNE       V0, R0, .o6E8
  6E0:  DIV       V1, V0
  6E4:  BREAK     1C00
        .o6E8
  6E8:  LI        AT, FFFF
  6EC:  BNE       V0, AT, .o700
  6F0:  LUI       AT, 8000
  6F4:  BNE       V1, AT, .o700
  6F8:  NOP
  6FC:  BREAK     1800
        .o700
  700:  MFLO      V1
  704:  LWC1      F2, 18 (S1)
  708:  LWC1      F0, 1C (S1)
  70C:  LIF       F8, 1.8
  718:  LWC1      F4, 1C (S1)
  71C:  SUB.S     F2, F2, F0
  720:  LWC1      F0, 18 (S1)
  724:  LIF       F6, 90.0
  72C:  SUB.S     F0, F0, F4
  730:  SWC1      F8, 3C (S1)
  734:  SWC1      F6, 24 (S1)
  738:  NEG.S     F2, F2
  73C:  SWC1      F2, 44 (S1)
  740:  LAD       F2, $ConstDouble_80232B28_03
  748:  ABS.S     F0, F0
  74C:  CVT.D.S   F0, F0
  750:  DIV.D     F0, F0, F2
  754:  CVT.S.D   F0, F0
  758:  SWC1      F0, 50 (S1)
  75C:  MTC1      V1, F0
  760:  NOP
  764:  CVT.S.W   F0, F0
  768:  SWC1      F0, 28 (S1)
  76C:  LWC1      F0, 144 (S3)
  770:  SWC1      F0, 0 (S1)
  774:  LWC1      F0, 148 (S3)
  778:  SWC1      F0, 4 (S1)
  77C:  LWC1      F0, 14C (S3)
  780:  LI        V0, 3
  784:  SWC1      F0, 8 (S1)
  788:  SW        V0, 70 (S4)
        .o78C
  78C:  LWC1      F12, 24 (S1)
  790:  LIF       F22, 6.28318
  79C:  NOP
  7A0:  MUL.S     F12, F12, F22
  7A4:  NOP
  7A8:  LWC1      F20, 0 (S1)
  7AC:  LIF       F24, 360.0
  7B4:  CVT.D.S   F20, F20
  7B8:  JAL       ~Func:sin_rad
  7BC:  DIV.S     F12, F12, F24
  7C0:  LWC1      F2, 50 (S1)
  7C4:  MUL.S     F2, F2, F0
  7C8:  NOP
  7CC:  LWC1      F12, 24 (S1)
  7D0:  MUL.S     F12, F12, F22
  7D4:  NOP
  7D8:  LAD       F0, $ConstDouble_80232B30_03
  7E0:  CVT.D.S   F2, F2
  7E4:  DIV.D     F2, F2, F0
  7E8:  ADD.D     F20, F20, F2
  7EC:  DIV.S     F12, F12, F24
  7F0:  CVT.S.D   F20, F20
  7F4:  JAL       ~Func:sin_rad
  7F8:  SWC1      F20, 0 (S1)
  7FC:  LWC1      F2, 50 (S1)
  800:  MUL.S     F2, F2, F0
  804:  NOP
  808:  LWC1      F12, 24 (S1)
  80C:  LWC1      F0, 28 (S1)
  810:  ADD.S     F12, F12, F0
  814:  LWC1      F0, 4 (S1)
  818:  SUB.S     F0, F0, F2
  81C:  SWC1      F12, 24 (S1)
  820:  JAL       ~Func:clamp_angle
  824:  SWC1      F0, 4 (S1)
  828:  LWC1      F2, 0 (S1)
  82C:  SWC1      F0, 24 (S1)
  830:  SWC1      F2, 144 (S3)
  834:  LWC1      F0, 4 (S1)
  838:  SWC1      F0, 148 (S3)
  83C:  LWC1      F0, 8 (S1)
  840:  SWC1      F0, 14C (S3)
  844:  LHU       V1, 64 (S1)
  848:  ADDIU     V1, V1, FFFF
  84C:  SH        V1, 64 (S1)
  850:  SLL       V1, V1, 10
  854:  BEQ       V1, R0, .o860
  858:  LI        V0, 1
  85C:  CLEAR     V0
        .o860
  860:  LW        RA, 24 (SP)
  864:  LW        S4, 20 (SP)
  868:  LW        S3, 1C (SP)
  86C:  LW        S2, 18 (SP)
  870:  LW        S1, 14 (SP)
  874:  LW        S0, 10 (SP)
  878:  LDC1      F26, 40 (SP)
  87C:  LDC1      F24, 38 (SP)
  880:  LDC1      F22, 30 (SP)
  884:  LDC1      F20, 28 (SP)
  888:  JR        RA
  88C:  ADDIU     SP, SP, 48
}

#new:Function $Function_80218B90_03 {
    0:  ADDIU     SP, SP, FFC8
    4:  SW        S2, 20 (SP)
    8:  COPY      S2, A0
    C:  SW        RA, 28 (SP)
   10:  SW        S3, 24 (SP)
   14:  SW        S1, 1C (SP)
   18:  SW        S0, 18 (SP)
   1C:  SDC1      F20, 30 (SP)
   20:  LW        A0, 148 (S2)
   24:  JAL       ~Func:get_actor
   28:  COPY      S0, A1
   2C:  COPY      S1, V0
   30:  BEQ       S0, R0, .o3C
   34:  ADDIU     S3, S1, C
   38:  SW        R0, 70 (S2)
        .o3C
   3C:  LW        V0, 70 (S2)
   40:  BNE       V0, R0, .o64
   44:  LI        V0, 1
   48:  LWC1      F0, 144 (S1)
   4C:  LWC1      F2, 148 (S1)
   50:  LWC1      F4, 14C (S1)
   54:  SWC1      F0, C (S1)
   58:  SWC1      F2, 10 (S1)
   5C:  SWC1      F4, 14 (S1)
   60:  SW        V0, 70 (S2)
        .o64
   64:  LWC1      F0, 50 (S1)
   68:  MTC1      R0, F20
   6C:  NOP
   70:  C.LT.S    F20, F0
   74:  NOP
   78:  BC1F      .o90
   7C:  LI        A0, FF81
   80:  LW        A2, 64 (S1)
   84:  JAL       ~Func:set_animation
   88:  LI        A1, 1
   8C:  LWC1      F0, 50 (S1)
        .o90
   90:  C.LT.S    F0, F20
   94:  NOP
   98:  BC1F      .oAC
   9C:  LI        A0, FF81
   A0:  LW        A2, 68 (S1)
   A4:  JAL       ~Func:set_animation
   A8:  LI        A1, 1
        .oAC
   AC:  LWC1      F4, 10 (S1)
   B0:  LWC1      F0, 50 (S1)
   B4:  LW        A1, 4C (S1)
   B8:  ADD.S     F4, F4, F0
   BC:  LWC1      F2, 48 (S1)
   C0:  LW        A2, 54 (S1)
   C4:  SUB.S     F0, F0, F2
   C8:  COPY      A0, S3
   CC:  SWC1      F4, 10 (S1)
   D0:  JAL       ~Func:add_xz_vec3f
   D4:  SWC1      F0, 50 (S1)
   D8:  LWC1      F0, 10 (S1)
   DC:  LWC1      F2, 14 (S1)
   E0:  SWC1      F0, 148 (S1)
   E4:  LWC1      F0, C (S1)
   E8:  LWC1      F4, 148 (S1)
   EC:  SWC1      F2, 14C (S1)
   F0:  C.LT.S    F4, F20
   F4:  NOP
   F8:  BC1T      .o108
   FC:  SWC1      F0, 144 (S1)
  100:  BEQ       R0, R0, .o134
  104:  CLEAR     V0
        .o108
  108:  LWC1      F0, 18C (S1)
  10C:  SWC1      F20, 148 (S1)
  110:  SWC1      F0, 10 (SP)
  114:  LW        A1, 144 (S1)
  118:  LW        A2, 148 (S1)
  11C:  LW        A3, 14C (S1)
  120:  JAL       ~Func:play_movement_dust_effects
  124:  LI        A0, 2
  128:  JAL       ~Func:sfx_play_sound
  12C:  LI        A0, 148
  130:  LI        V0, 1
        .o134
  134:  LW        RA, 28 (SP)
  138:  LW        S3, 24 (SP)
  13C:  LW        S2, 20 (SP)
  140:  LW        S1, 1C (SP)
  144:  LW        S0, 18 (SP)
  148:  LDC1      F20, 30 (SP)
  14C:  JR        RA
  150:  ADDIU     SP, SP, 38
}

#new:Function $Function_80218CE4_03 {
    0:  ADDIU     SP, SP, FFE8
    4:  SW        S0, 10 (SP)
    8:  COPY      S0, A0
    C:  SW        RA, 14 (SP)
   10:  JAL       ~Func:get_actor
   14:  LW        A0, 148 (S0)
   18:  JAL       ~Func:get_actor
   1C:  LH        A0, 428 (V0)
   20:  COPY      A0, V0
   24:  LW        V0, 0 (A0)
   28:  ANDI      V0, V0, 800
   2C:  BNE       V0, R0, .o58
   30:  NOP
   34:  LBU       V0, 191 (A0)
   38:  LW        V1, 88 (S0)
   3C:  SRL       V0, V0, 1
   40:  ADDU      V1, V1, V0
   44:  SW        V1, 88 (S0)
   48:  LBU       V0, 191 (A0)
   4C:  SRL       V0, V0, 2
   50:  BEQ       R0, R0, .o78
   54:  ADDU      V1, V1, V0
        .o58
   58:  LBU       V0, 191 (A0)
   5C:  LW        V1, 88 (S0)
   60:  SRL       V0, V0, 1
   64:  SUBU      V1, V1, V0
   68:  SW        V1, 88 (S0)
   6C:  LBU       V0, 191 (A0)
   70:  SRL       V0, V0, 2
   74:  SUBU      V1, V1, V0
        .o78
   78:  SW        V1, 88 (S0)
   7C:  LBU       V1, 191 (A0)
   80:  LBU       A0, 190 (A0)
   84:  SLT       V0, V1, A0
   88:  BNEL      V0, R0, .o90
   8C:  COPY      V1, A0
        .o90
   90:  ADDIU     V0, V1, 7E
   94:  SW        V0, 90 (S0)
   98:  LW        RA, 14 (SP)
   9C:  LW        S0, 10 (SP)
   A0:  LI        V0, 2
   A4:  JR        RA
   A8:  ADDIU     SP, SP, 18
}

#new:Function $Function_80218D90_03 {
    0:  ADDIU     SP, SP, FFD8
    4:  SW        S0, 18 (SP)
    8:  COPY      S0, A0
    C:  LUI       A1, 42D4
   10:  LUI       A2, 4310
   14:  CLEAR     A0
   18:  SW        RA, 20 (SP)
   1C:  SW        S1, 1C (SP)
   20:  LW        S1, C (S0)
   24:  LIF       F0, 1.0
   2C:  CLEAR     A3
   30:  SW        R0, 14 (SP)
   34:  JAL       ~Func:playFX_6C
   38:  SWC1      F0, 10 (SP)
   3C:  COPY      A0, S0
   40:  LW        A1, 0 (S1)
   44:  JAL       ~Func:set_variable
   48:  COPY      A2, V0
   4C:  LW        RA, 20 (SP)
   50:  LW        S1, 1C (SP)
   54:  LW        S0, 18 (SP)
   58:  LI        V0, 2
   5C:  JR        RA
   60:  ADDIU     SP, SP, 28
}

#new:Function $Function_80218E2C_03 {
    0:  ADDIU     SP, SP, FFE8
    4:  SW        RA, 10 (SP)
    8:  LW        V0, C (A0)
    C:  JAL       ~Func:get_variable
   10:  LW        A1, 0 (V0)
   14:  COPY      A0, V0
   18:  LW        V0, C (A0)
   1C:  LIF       F0, 144.0
   24:  NOP
   28:  SWC1      F0, 8 (V0)
   2C:  LW        V1, 0 (A0)
   30:  ORI       V1, V1, 10
   34:  SW        V1, 0 (A0)
   38:  LW        RA, 10 (SP)
   3C:  LI        V0, 2
   40:  JR        RA
   44:  ADDIU     SP, SP, 18
}

#new:Function $Function_80218E74_03 {
    0:  ADDIU     SP, SP, FFD8
    4:  SW        S1, 14 (SP)
    8:  COPY      S1, A0
    C:  SW        RA, 20 (SP)
   10:  SW        S3, 1C (SP)
   14:  SW        S2, 18 (SP)
   18:  SW        S0, 10 (SP)
   1C:  LW        S0, C (S1)
   20:  LW        A1, 0 (S0)
   24:  JAL       ~Func:get_variable
   28:  ADDIU     S0, S0, 4
   2C:  LW        A1, 0 (S0)
   30:  ADDIU     S0, S0, 4
   34:  COPY      A0, S1
   38:  JAL       ~Func:get_variable
   3C:  COPY      S3, V0
   40:  LW        A1, 0 (S0)
   44:  ADDIU     S0, S0, 4
   48:  COPY      A0, S1
   4C:  JAL       ~Func:get_variable
   50:  COPY      S2, V0
   54:  COPY      A0, S1
   58:  LW        A1, 0 (S0)
   5C:  JAL       ~Func:get_variable
   60:  COPY      S0, V0
   64:  LW        A0, 148 (S1)
   68:  JAL       ~Func:get_actor
   6C:  COPY      S1, V0
   70:  COPY      V1, V0
   74:  LW        V0, 8 (V1)
   78:  LBU       V0, 24 (V0)
   7C:  LW        A0, 8 (V1)
   80:  SUBU      S3, S3, V0
   84:  SB        S3, 194 (V1)
   88:  LBU       V0, 25 (A0)
   8C:  SUBU      S2, S2, V0
   90:  SB        S2, 195 (V1)
   94:  LBU       V0, 26 (A0)
   98:  SUBU      S0, S0, V0
   9C:  SB        S0, 196 (V1)
   A0:  LBU       A0, 27 (A0)
   A4:  SUBU      S1, S1, A0
   A8:  SB        S1, 197 (V1)
   AC:  LW        RA, 20 (SP)
   B0:  LW        S3, 1C (SP)
   B4:  LW        S2, 18 (SP)
   B8:  LW        S1, 14 (SP)
   BC:  LW        S0, 10 (SP)
   C0:  LI        V0, 2
   C4:  JR        RA
   C8:  ADDIU     SP, SP, 28
}

#new:Function $Function_80218F40_03 {
    0:  ADDIU     SP, SP, FFD8
    4:  SW        RA, 24 (SP)
    8:  SW        S2, 20 (SP)
    C:  SW        S1, 1C (SP)
   10:  SW        S0, 18 (SP)
   14:  LW        A0, 148 (A0)
   18:  JAL       ~Func:get_actor
   1C:  COPY      S0, A1
   20:  COPY      S1, V0
   24:  BEQ       S0, R0, .o44
   28:  ADDIU     S2, S1, C
   2C:  LWC1      F0, 144 (S1)
   30:  LWC1      F2, 148 (S1)
   34:  LWC1      F4, 14C (S1)
   38:  SWC1      F0, C (S1)
   3C:  SWC1      F2, 10 (S1)
   40:  SWC1      F4, 14 (S1)
        .o44
   44:  LW        A1, 4C (S1)
   48:  LW        A2, 54 (S1)
   4C:  JAL       ~Func:add_xz_vec3f
   50:  COPY      A0, S2
   54:  LWC1      F2, 4C (S1)
   58:  LIF       F0, 4.0
   60:  NOP
   64:  C.LT.S    F2, F0
   68:  NOP
   6C:  BC1F      .o8C
   70:  CLEAR     A0
   74:  LWC1      F0, 54 (S1)
   78:  SWC1      F0, 10 (SP)
   7C:  LW        A1, C (S1)
   80:  LW        A2, 10 (S1)
   84:  BEQ       R0, R0, .oA4
   88:  LW        A3, 14 (S1)
        .o8C
   8C:  LWC1      F0, 54 (S1)
   90:  SWC1      F0, 10 (SP)
   94:  LW        A1, C (S1)
   98:  LW        A2, 10 (S1)
   9C:  LW        A3, 14 (S1)
   A0:  LI        A0, 1
        .oA4
   A4:  JAL       ~Func:play_movement_dust_effects
   A8:  NOP
   AC:  LWC1      F0, 40 (S2)
   B0:  LIF       F3, 1.9375
   B8:  MTC1      R0, F2
   BC:  CVT.D.S   F0, F0
   C0:  DIV.D     F0, F0, F2
   C4:  LWC1      F2, 0 (S2)
   C8:  CVT.S.D   F0, F0
   CC:  SWC1      F0, 40 (S2)
   D0:  SWC1      F2, 144 (S1)
   D4:  LWC1      F0, 4 (S2)
   D8:  SWC1      F0, 148 (S1)
   DC:  LWC1      F0, 8 (S2)
   E0:  SWC1      F0, 14C (S1)
   E4:  LWC1      F0, 40 (S2)
   E8:  LIF       F3, 1.875
   F0:  MTC1      R0, F2
   F4:  CVT.D.S   F0, F0
   F8:  C.LT.D    F0, F2
   FC:  NOP
  100:  BC1T      .o10C
  104:  LI        V0, 2
  108:  CLEAR     V0
        .o10C
  10C:  LW        RA, 24 (SP)
  110:  LW        S2, 20 (SP)
  114:  LW        S1, 1C (SP)
  118:  LW        S0, 18 (SP)
  11C:  JR        RA
  120:  ADDIU     SP, SP, 28
}

#new:Function $Function_80219064_03 {
    0:  ADDIU     SP, SP, FFD8
    4:  SW        RA, 24 (SP)
    8:  SW        S2, 20 (SP)
    C:  SW        S1, 1C (SP)
   10:  SW        S0, 18 (SP)
   14:  LW        A0, 148 (A0)
   18:  JAL       ~Func:get_actor
   1C:  COPY      S0, A1
   20:  COPY      S1, V0
   24:  BEQ       S0, R0, .o44
   28:  ADDIU     S2, S1, C
   2C:  LWC1      F0, 144 (S1)
   30:  LWC1      F2, 148 (S1)
   34:  LWC1      F4, 14C (S1)
   38:  SWC1      F0, C (S1)
   3C:  SWC1      F2, 10 (S1)
   40:  SWC1      F4, 14 (S1)
        .o44
   44:  LW        A1, 4C (S1)
   48:  LW        A2, 54 (S1)
   4C:  JAL       ~Func:add_xz_vec3f
   50:  COPY      A0, S2
   54:  LWC1      F2, 4C (S1)
   58:  LIF       F0, 4.0
   60:  NOP
   64:  C.LT.S    F2, F0
   68:  NOP
   6C:  BC1F      .o8C
   70:  CLEAR     A0
   74:  LWC1      F0, 54 (S1)
   78:  SWC1      F0, 10 (SP)
   7C:  LW        A1, C (S1)
   80:  LW        A2, 10 (S1)
   84:  BEQ       R0, R0, .oA4
   88:  LW        A3, 14 (S1)
        .o8C
   8C:  LWC1      F0, 54 (S1)
   90:  SWC1      F0, 10 (SP)
   94:  LW        A1, C (S1)
   98:  LW        A2, 10 (S1)
   9C:  LW        A3, 14 (S1)
   A0:  LI        A0, 1
        .oA4
   A4:  JAL       ~Func:play_movement_dust_effects
   A8:  NOP
   AC:  LWC1      F0, 40 (S2)
   B0:  LIF       F3, 1.9375
   B8:  MTC1      R0, F2
   BC:  CVT.D.S   F0, F0
   C0:  DIV.D     F0, F0, F2
   C4:  LWC1      F2, 0 (S2)
   C8:  CVT.S.D   F0, F0
   CC:  SWC1      F0, 40 (S2)
   D0:  SWC1      F2, 144 (S1)
   D4:  LWC1      F0, 4 (S2)
   D8:  SWC1      F0, 148 (S1)
   DC:  LWC1      F0, 8 (S2)
   E0:  SWC1      F0, 14C (S1)
   E4:  LWC1      F0, 40 (S2)
   E8:  LIF       F3, 1.875
   F0:  MTC1      R0, F2
   F4:  CVT.D.S   F0, F0
   F8:  C.LT.D    F0, F2
   FC:  NOP
  100:  BC1T      .o10C
  104:  LI        V0, 2
  108:  CLEAR     V0
        .o10C
  10C:  LW        RA, 24 (SP)
  110:  LW        S2, 20 (SP)
  114:  LW        S1, 1C (SP)
  118:  LW        S0, 18 (SP)
  11C:  JR        RA
  120:  ADDIU     SP, SP, 28
}

#new:Function $Function_80219188_03 {
    0:  ADDIU     SP, SP, FFB8
    4:  SW        RA, 2C (SP)
    8:  SW        S2, 28 (SP)
    C:  SW        S1, 24 (SP)
   10:  SW        S0, 20 (SP)
   14:  SDC1      F24, 40 (SP)
   18:  SDC1      F22, 38 (SP)
   1C:  SDC1      F20, 30 (SP)
   20:  LW        A0, 148 (A0)
   24:  JAL       ~Func:get_actor
   28:  COPY      S0, A1
   2C:  COPY      S1, V0
   30:  BEQ       S0, R0, .o128
   34:  ADDIU     S2, S1, C
   38:  JAL       ~Func:heap_malloc
   3C:  LI        A0, 20
   40:  COPY      S0, V0
   44:  LI        V0, 1
   48:  ADDIU     A1, S1, 144
   4C:  ADDIU     A2, S1, 148
   50:  SW        S0, 94 (S1)
   54:  SW        V0, 4 (S0)
   58:  SW        R0, 8 (S0)
   5C:  SW        V0, C (S0)
   60:  SW        R0, 10 (S0)
   64:  LB        V1, 210 (S1)
   68:  LI        V0, A
   6C:  BEQ       V1, V0, .o84
   70:  ADDIU     A3, S1, 14C
   74:  LIF       F0, 1.0
   7C:  BEQ       R0, R0, .o98
   80:  SWC1      F0, 10 (SP)
        .o84
   84:  LIF       F0, 0.39804688
   90:  NOP
   94:  SWC1      F0, 10 (SP)
        .o98
   98:  LI        V0, 5
   9C:  SW        V0, 14 (SP)
   A0:  SW        R0, 18 (SP)
   A4:  LW        A1, 0 (A1)
   A8:  LW        A2, 0 (A2)
   AC:  LW        A3, 0 (A3)
   B0:  JAL       ~Func:playFX_73
   B4:  CLEAR     A0
   B8:  ADDIU     A1, S1, 144
   BC:  SW        V0, 14 (S0)
   C0:  LB        V0, 210 (S1)
   C4:  LI        V1, A
   C8:  BEQ       V0, V1, .oE0
   CC:  ADDIU     A3, S1, 14C
   D0:  LIF       F0, 1.0
   D8:  BEQ       R0, R0, .oF4
   DC:  SWC1      F0, 10 (SP)
        .oE0
   E0:  LIF       F0, 0.39804688
   EC:  NOP
   F0:  SWC1      F0, 10 (SP)
        .oF4
   F4:  LI        V0, 5
   F8:  SW        V0, 14 (SP)
   FC:  SW        R0, 18 (SP)
  100:  LW        A1, 0 (A1)
  104:  LUI       A2, C47A
  108:  LW        A3, 0 (A3)
  10C:  JAL       ~Func:playFX_73
  110:  LI        A0, 1
  114:  SW        V0, 18 (S0)
  118:  LI        V0, 1
  11C:  SW        V0, 0 (S0)
  120:  LB        V0, 210 (S1)
  124:  SW        V0, 1C (S0)
        .o128
  128:  LW        S0, 88 (S2)
  12C:  LW        V0, 0 (S0)
  130:  BEQ       V0, R0, .o458
  134:  LI        V0, 2
  138:  LW        V0, 4 (S0)
  13C:  BEQ       V0, R0, .o174
  140:  LI        V0, 8
  144:  LB        V1, 210 (S1)
  148:  BEQ       V1, V0, .o174
  14C:  NOP
  150:  LW        V0, 8 (S0)
  154:  ADDIU     V0, V0, F
  158:  MTC1      V0, F12
  15C:  NOP
  160:  CVT.S.W   F12, F12
  164:  JAL       ~Func:clamp_angle
  168:  SW        V0, 8 (S0)
  16C:  TRUNC.W.S F6, F0
  170:  SWC1      F6, 8 (S0)
        .o174
  174:  LIF       F0, 6.28318
  180:  LWC1      F12, 8 (S0)
  184:  CVT.S.W   F12, F12
  188:  MUL.S     F12, F12, F0
  18C:  NOP
  190:  LIF       F0, 360.0
  198:  JAL       ~Func:sin_rad
  19C:  DIV.S     F12, F12, F0
  1A0:  LIF       F2, 3.0
  1A8:  NOP
  1AC:  MUL.S     F0, F0, F2
  1B0:  NOP
  1B4:  LH        V0, 152 (S1)
  1B8:  MTC1      V0, F2
  1BC:  NOP
  1C0:  CVT.S.W   F2, F2
  1C4:  TRUNC.W.S F6, F0
  1C8:  MFC1      V1, F6
  1CC:  NOP
  1D0:  SLL       V0, V1, 18
  1D4:  LWC1      F0, 148 (S1)
  1D8:  SRA       V0, V0, 18
  1DC:  SB        V1, 19A (S1)
  1E0:  ADD.S     F0, F0, F2
  1E4:  MTC1      V0, F2
  1E8:  NOP
  1EC:  CVT.S.W   F2, F2
  1F0:  LH        V0, 150 (S1)
  1F4:  ADD.S     F0, F0, F2
  1F8:  LI        V1, A
  1FC:  MTC1      V0, F2
  200:  NOP
  204:  CVT.S.W   F2, F2
  208:  CVT.D.S   F4, F0
  20C:  LWC1      F0, 144 (S1)
  210:  LB        V0, 210 (S1)
  214:  ADD.S     F22, F0, F2
  218:  LAD       F0, $ConstDouble_80232B38_03
  220:  BEQL      V0, V1, .o23C
  224:  ADD.D     F0, F4, F0
  228:  LIF       F1, 2.625
  230:  MTC1      R0, F0
  234:  NOP
  238:  ADD.D     F0, F4, F0
        .o23C
  23C:  CVT.S.D   F20, F0
  240:  LH        V0, 154 (S1)
  244:  LWC1      F0, 14C (S1)
  248:  MTC1      V0, F2
  24C:  NOP
  250:  CVT.S.W   F2, F2
  254:  LW        V0, C (S0)
  258:  BEQ       V0, R0, .o3C0
  25C:  ADD.S     F24, F0, F2
  260:  LW        V1, 10 (S0)
  264:  BEQ       V1, R0, .o27C
  268:  LI        V0, 1
  26C:  BEQ       V1, V0, .o318
  270:  NOP
  274:  BEQ       R0, R0, .o3F8
  278:  NOP
        .o27C
  27C:  LW        V0, 14 (S0)
  280:  BNE       V0, R0, .o2DC
  284:  LI        V0, A
  288:  LB        V1, 210 (S1)
  28C:  BEQ       V1, V0, .o2A4
  290:  NOP
  294:  LIF       F0, 1.0
  29C:  BEQ       R0, R0, .o2B8
  2A0:  SWC1      F0, 10 (SP)
        .o2A4
  2A4:  LIF       F0, 0.39804688
  2B0:  NOP
  2B4:  SWC1      F0, 10 (SP)
        .o2B8
  2B8:  CLEAR     A0
  2BC:  MFC1      A1, F22
  2C0:  MFC1      A2, F20
  2C4:  MFC1      A3, F24
  2C8:  LI        V0, 5
  2CC:  SW        V0, 14 (SP)
  2D0:  JAL       ~Func:playFX_73
  2D4:  SW        R0, 18 (SP)
  2D8:  SW        V0, 14 (S0)
        .o2DC
  2DC:  LW        V1, 18 (S0)
  2E0:  BEQ       V1, R0, .o2F8
  2E4:  NOP
  2E8:  LW        V0, 0 (V1)
  2EC:  ORI       V0, V0, 10
  2F0:  SW        V0, 0 (V1)
  2F4:  SW        R0, 18 (S0)
        .o2F8
  2F8:  LW        V0, 14 (S0)
  2FC:  LW        V0, C (V0)
  300:  SWC1      F22, 4 (V0)
  304:  LW        V0, 14 (S0)
  308:  LW        V0, C (V0)
  30C:  SWC1      F20, 8 (V0)
  310:  BEQ       R0, R0, .o3B4
  314:  LW        V0, 14 (S0)
        .o318
  318:  LW        V1, 14 (S0)
  31C:  BEQ       V1, R0, .o334
  320:  NOP
  324:  LW        V0, 0 (V1)
  328:  ORI       V0, V0, 10
  32C:  SW        V0, 0 (V1)
  330:  SW        R0, 14 (S0)
        .o334
  334:  LW        V0, 18 (S0)
  338:  BNE       V0, R0, .o39C
  33C:  NOP
  340:  LB        V1, 210 (S1)
  344:  LI        V0, A
  348:  BEQ       V1, V0, .o360
  34C:  NOP
  350:  LIF       F0, 1.0
  358:  BEQ       R0, R0, .o374
  35C:  SWC1      F0, 10 (SP)
        .o360
  360:  LIF       F0, 0.39804688
  36C:  NOP
  370:  SWC1      F0, 10 (SP)
        .o374
  374:  LI        A0, 1
  378:  MFC1      A1, F22
  37C:  MFC1      A2, F20
  380:  MFC1      A3, F24
  384:  LI        V0, 5
  388:  SW        V0, 14 (SP)
  38C:  JAL       ~Func:playFX_73
  390:  SW        R0, 18 (SP)
  394:  SW        V0, 18 (S0)
  398:  LW        V0, 18 (S0)
        .o39C
  39C:  LW        V0, C (V0)
  3A0:  SWC1      F22, 4 (V0)
  3A4:  LW        V0, 18 (S0)
  3A8:  LW        V0, C (V0)
  3AC:  SWC1      F20, 8 (V0)
  3B0:  LW        V0, 18 (S0)
        .o3B4
  3B4:  LW        V0, C (V0)
  3B8:  BEQ       R0, R0, .o3F8
  3BC:  SWC1      F24, C (V0)
        .o3C0
  3C0:  LW        V1, 14 (S0)
  3C4:  BEQ       V1, R0, .o3DC
  3C8:  NOP
  3CC:  LW        V0, 0 (V1)
  3D0:  ORI       V0, V0, 10
  3D4:  SW        V0, 0 (V1)
  3D8:  SW        R0, 14 (S0)
        .o3DC
  3DC:  LW        V1, 18 (S0)
  3E0:  BEQ       V1, R0, .o3F8
  3E4:  NOP
  3E8:  LW        V0, 0 (V1)
  3EC:  ORI       V0, V0, 10
  3F0:  SW        V0, 0 (V1)
  3F4:  SW        R0, 18 (S0)
        .o3F8
  3F8:  LB        V1, 210 (S1)
  3FC:  LW        V0, 1C (S0)
  400:  BEQ       V0, V1, .o454
  404:  CLEAR     V0
  408:  LW        V0, C (S0)
  40C:  BEQ       V0, R0, .o454
  410:  CLEAR     V0
  414:  LW        V1, 14 (S0)
  418:  BEQ       V1, R0, .o430
  41C:  NOP
  420:  LW        V0, 0 (V1)
  424:  ORI       V0, V0, 10
  428:  SW        V0, 0 (V1)
  42C:  SW        R0, 14 (S0)
        .o430
  430:  LW        V1, 18 (S0)
  434:  BEQ       V1, R0, .o44C
  438:  NOP
  43C:  LW        V0, 0 (V1)
  440:  ORI       V0, V0, 10
  444:  SW        V0, 0 (V1)
  448:  SW        R0, 18 (S0)
        .o44C
  44C:  LB        V1, 210 (S1)
  450:  CLEAR     V0
        .o454
  454:  SW        V1, 1C (S0)
        .o458
  458:  LW        RA, 2C (SP)
  45C:  LW        S2, 28 (SP)
  460:  LW        S1, 24 (SP)
  464:  LW        S0, 20 (SP)
  468:  LDC1      F24, 40 (SP)
  46C:  LDC1      F22, 38 (SP)
  470:  LDC1      F20, 30 (SP)
  474:  JR        RA
  478:  ADDIU     SP, SP, 48
}

#new:Function $Function_80219604_03 {
    0:  ADDIU     SP, SP, FFE8
    4:  SW        RA, 10 (SP)
    8:  JAL       ~Func:get_actor
    C:  LW        A0, 148 (A0)
   10:  LW        A0, 94 (V0)
   14:  LW        V1, 14 (A0)
   18:  BEQ       V1, R0, .o2C
   1C:  SW        R0, 0 (A0)
   20:  LW        V0, 0 (V1)
   24:  ORI       V0, V0, 10
   28:  SW        V0, 0 (V1)
        .o2C
   2C:  LW        V1, 18 (A0)
   30:  BEQ       V1, R0, .o44
   34:  NOP
   38:  LW        V0, 0 (V1)
   3C:  ORI       V0, V0, 10
   40:  SW        V0, 0 (V1)
        .o44
   44:  LW        RA, 10 (SP)
   48:  LI        V0, 2
   4C:  JR        RA
   50:  ADDIU     SP, SP, 18
}

#new:Function $Function_80219658_03 {
    0:  ADDIU     SP, SP, FFE0
    4:  SW        S0, 10 (SP)
    8:  COPY      S0, A0
    C:  SW        RA, 18 (SP)
   10:  SW        S1, 14 (SP)
   14:  LW        A0, 148 (S0)
   18:  JAL       ~Func:get_actor
   1C:  LW        S1, C (S0)
   20:  COPY      A0, S0
   24:  LW        A1, 0 (S1)
   28:  JAL       ~Func:get_variable
   2C:  LW        S0, 94 (V0)
   30:  SW        V0, 4 (S0)
   34:  LW        RA, 18 (SP)
   38:  LW        S1, 14 (SP)
   3C:  LW        S0, 10 (SP)
   40:  LI        V0, 2
   44:  JR        RA
   48:  ADDIU     SP, SP, 20
}

#new:Function $Function_802196A4_03 {
    0:  ADDIU     SP, SP, FFE0
    4:  SW        S0, 10 (SP)
    8:  COPY      S0, A0
    C:  SW        RA, 18 (SP)
   10:  SW        S1, 14 (SP)
   14:  LW        A0, 148 (S0)
   18:  JAL       ~Func:get_actor
   1C:  LW        S1, C (S0)
   20:  COPY      A0, S0
   24:  LW        A1, 0 (S1)
   28:  JAL       ~Func:get_variable
   2C:  LW        S0, 94 (V0)
   30:  SW        V0, C (S0)
   34:  LW        RA, 18 (SP)
   38:  LW        S1, 14 (SP)
   3C:  LW        S0, 10 (SP)
   40:  LI        V0, 2
   44:  JR        RA
   48:  ADDIU     SP, SP, 20
}

#new:Function $Function_802196F0_03 {
    0:  ADDIU     SP, SP, FFE0
    4:  SW        S0, 10 (SP)
    8:  COPY      S0, A0
    C:  SW        RA, 18 (SP)
   10:  SW        S1, 14 (SP)
   14:  LW        A0, 148 (S0)
   18:  JAL       ~Func:get_actor
   1C:  LW        S1, C (S0)
   20:  COPY      A0, S0
   24:  LW        A1, 0 (S1)
   28:  JAL       ~Func:get_variable
   2C:  LW        S0, 94 (V0)
   30:  SW        V0, 10 (S0)
   34:  LW        RA, 18 (SP)
   38:  LW        S1, 14 (SP)
   3C:  LW        S0, 10 (SP)
   40:  LI        V0, 2
   44:  JR        RA
   48:  ADDIU     SP, SP, 20
}

#new:Function $Function_8021973C_03 {
    0:  ADDIU     SP, SP, FFE8
    4:  SW        RA, 10 (SP)
    8:  JAL       ~Func:mdl_set_all_fog_mode
    C:  LI        A0, 1
   10:  CLEAR     A0
   14:  LI        V0, 1
   18:  COPY      A1, A0
   1C:  COPY      A2, A0
   20:  LAW       V1, 801512F0
   28:  COPY      A3, A0
   2C:  JAL       ~Func:set_background_color_blend
   30:  SB        V0, 0 (V1)
   34:  LW        RA, 10 (SP)
   38:  LI        V0, 2
   3C:  JR        RA
   40:  ADDIU     SP, SP, 18
}

#new:Function $Function_80219780_03 {
    0:  ADDIU     SP, SP, FFE8
    4:  SW        RA, 10 (SP)
    8:  LW        V0, C (A0)
    C:  JAL       ~Func:get_variable
   10:  LW        A1, 0 (V0)
   14:  CLEAR     A0
   18:  COPY      A1, A0
   1C:  COPY      A2, A0
   20:  JAL       ~Func:set_background_color_blend
   24:  ANDI      A3, V0, FF
   28:  LW        RA, 10 (SP)
   2C:  LI        V0, 2
   30:  JR        RA
   34:  ADDIU     SP, SP, 18
}

#new:Function $Function_GetPartner_03 {
    0:  ADDIU     SP, SP, FFE0
    4:  SW        S2, 18 (SP)
    8:  COPY      S2, A0
    C:  SW        S1, 14 (SP)
   10:  LA        S1, 8010F290
   18:  SW        RA, 1C (SP)
   1C:  SW        S0, 10 (SP)
   20:  LW        S0, C (S2)
   24:  LB        A2, 12 (S1)
   28:  LW        A1, 0 (S0)
   2C:  JAL       ~Func:set_variable
   30:  ADDIU     S0, S0, 4
   34:  LB        V0, 12 (S1)
   38:  LW        A1, 0 (S0)
   3C:  SLL       V0, V0, 3
   40:  ADDU      V0, V0, S1
   44:  LB        A2, 15 (V0)
   48:  JAL       ~Func:set_variable
   4C:  COPY      A0, S2
   50:  LW        RA, 1C (SP)
   54:  LW        S2, 18 (SP)
   58:  LW        S1, 14 (SP)
   5C:  LW        S0, 10 (SP)
   60:  LI        V0, 2
   64:  JR        RA
   68:  ADDIU     SP, SP, 20
}

#new:Function $Function_80219824_03 {
    0:  ADDIU     SP, SP, FFE8
    4:  SW        S0, 10 (SP)
    8:  COPY      S0, A0
    C:  SW        RA, 14 (SP)
   10:  LW        V0, C (S0)
   14:  JAL       ~Func:get_variable
   18:  LW        A1, 0 (V0)
   1C:  LW        A0, 148 (S0)
   20:  JAL       ~Func:get_actor
   24:  COPY      S0, V0
   28:  COPY      V1, V0
   2C:  ADDIU     S0, S0, FFFF
   30:  SLTIU     V0, S0, 9
   34:  BEQ       V0, R0, .oB0
   38:  CLEAR     A0
   3C:  SLL       V0, S0, 2
   40:  LTW       V0, V0 ($JumpTable_80232B40_03)
   4C:  JR        V0
   50:  NOP
% LBL: from $JumpTable_80232B40_03 , entry 0`
   54:  LA        A0, $SpecialFormation_80220524_03
   58:  BEQ       R0, R0, .oB0
   5C:  RESERVED
% LBL: from $JumpTable_80232B40_03 , entry 1`
   60:  LA        A0, $SpecialFormation_80222274_03
   64:  BEQ       R0, R0, .oB0
   68:  RESERVED
% LBL: from $JumpTable_80232B40_03 , entry 2`
   6C:  LA        A0, $SpecialFormation_8022336C_03
   70:  BEQ       R0, R0, .oB0
   74:  RESERVED
% LBL: from $JumpTable_80232B40_03 , entry 3`
   78:  LA        A0, $SpecialFormation_802243F4_03
   7C:  BEQ       R0, R0, .oB0
   80:  RESERVED
% LBL: from $JumpTable_80232B40_03 , entry 8`
   84:  LA        A0, $SpecialFormation_80225958_03
   88:  BEQ       R0, R0, .oB0
   8C:  RESERVED
% LBL: from $JumpTable_80232B40_03 , entry 5`
   90:  LA        A0, $SpecialFormation_80226960_03
   94:  BEQ       R0, R0, .oB0
   98:  RESERVED
% LBL: from $JumpTable_80232B40_03 , entry 6`
   9C:  LA        A0, $SpecialFormation_802283F0_03
   A0:  BEQ       R0, R0, .oB0
   A4:  RESERVED
% LBL: from $JumpTable_80232B40_03 , entry 7`
   A8:  LA        A0, $SpecialFormation_8022972C_03
% LBL: from $JumpTable_80232B40_03 , entry 4`
        .oB0
   B0:  LB        V1, 1F1 (V1)
   B4:  ADDIU     V1, V1, A
   B8:  SW        V1, 8 (A0)
   BC:  LW        RA, 14 (SP)
   C0:  LW        S0, 10 (SP)
   C4:  LI        V0, 2
   C8:  JR        RA
   CC:  ADDIU     SP, SP, 18
}

#new:IdleAnimations $IdleAnimations_8021D360_03 {
.Status:Normal    00A40002
.Status:Stone     00A40000
.Status:Sleep     00A4000E
.Status:Poison    00A40002
.Status:Stop      00A40000
.Status:Static    00A40002
.Status:Paralyze  00A40000
.Status:Dizzy     00A4000F
.Status:Dizzy     00A4000F
.Status:End
}

#new:IdleAnimations $IdleAnimations_8021D3AC_03 {
.Status:Normal    00A4000B
.Status:End
}

#new:DefenseTable $DefenseTable_8021D3C4_03 {
.Element:Normal 00000000
.Element:End
}

#new:StatusTable $StatusTable_8021D3D0_03 {
.Status:Normal      0`
.Status:Default     0`
.Status:Sleep      60`
.Status:Poison      0`
.Status:Frozen      0`
.Status:Dizzy      75`
.Status:Fear        0`
.Status:Static     75`
.Status:Paralyze   75`
.Status:Shrink     75`
.Status:Stop       75`
.Status:DefaultTurnMod    0`
.Status:SleepTurnMod     -1`
.Status:PoisonTurnMod     0`
.Status:FrozenTurnMod     0`
.Status:DizzyTurnMod     -1`
.Status:FearTurnMod       0`
.Status:StaticTurnMod    -1`
.Status:ParalyzeTurnMod  -1`
.Status:ShrinkTurnMod    -1`
.Status:StopTurnMod      -1`
.Status:End
}

#new:PartsTable $PartsTable_8021D47C_03 {
00800000 01000000 FB1900FF $IdleAnimations_8021D360_03 $DefenseTable_8021D3C4_03 00000000 00000000 FEF60000 00000000 
}

#new:Script $Script_Init_8021D4C8_03 {
    0:  Call  BindTakeTurn  ( .Actor:Self $Script_TakeTurn_80229F9C_03 )
   14:  Call  BindIdle      ( .Actor:Self $Script_Idle_8021D5B4_03 )
   28:  Call  BindHandleEvent   ( .Actor:Self $Script_HandleEvent_8021D600_03 )
   3C:  Call  BindNextTurn  ( .Actor:Self $Script_NextTurn_8022A038_03 )
   50:  Call  SetActorVar   ( .Actor:Self 00000008 00000000 )
   68:  Call  SetActorVar   ( .Actor:Self 00000000 00000000 )
   80:  Thread
   88:  	Call  8026BF48  ( 00000001 )
   98:  	ExecWait  $Script_CopyPartner_03 
   A4:  	Call  8026BF48  ( 00000000 )
   B4:  EndThread
   BC:  Call  $Function_802180D0_03 ( )
   C8:  Call  SetBattleFlagBits ( 00800000 .True )
   DC:  Return
   E4:  End
}

#new:Script $Script_Idle_8021D5B4_03 {
    0:  Return
    8:  End
}

#new:Script $Script_8021D5C4_03 {
    0:  SetConst  *Var0  00000001 
   10:  SetConst  *Var1  00A40004 
   20:  ExecWait  DoReturnHome 
   2C:  Return
   34:  End
}

#new:Script $Script_HandleEvent_8021D600_03 {
    0:  Call  SetActorVar       ( .Actor:Self 00000000 00000001 )
   18:  Call  UseIdleAnimation  ( .Actor:Self .False )
   2C:  Call  EnableIdleScript  ( .Actor:Self 00000000 )
   40:  Call  GetLastEvent      ( .Actor:Self *Var0 )
   54:  Switch  *Var0 
   60:  	CaseOR  ==  .Event:HitCombo % 9
   6C:  	CaseOR  ==  .Event:Hit % A
   78:  		SetConst  *Var0  00000001 
   88:  		SetConst  *Var1  00A4000B 
   98:  		ExecWait  DoNormalHit 
   A4:  	EndCaseGroup
   AC:  	Case  ==  .Event:BurnHit % E
   B8:  		SetConst  *Var0  00000001 
   C8:  		SetConst  *Var1  00A4000D 
   D8:  		SetConst  *Var2  FFFFFFFF 
   E8:  		ExecWait  DoBurnHit 
   F4:  	Case  ==  .Event:BurnDeath % 24
  100:  		SetConst  *Var0  00000001 
  110:  		SetConst  *Var1  00A4000D 
  120:  		SetConst  *Var2  FFFFFFFF 
  130:  		ExecWait  DoBurnHit 
  13C:  		SetConst  *Var0  00000001 
  14C:  		SetConst  *Var1  00A4000D 
  15C:  		ExecWait  DoDeath 
  168:  		Return
  170:  	Case  ==  .Event:SpinSmashHit % B
  17C:  		SetConst  *Var0  00000001 
  18C:  		SetConst  *Var1  00A4000B 
  19C:  		ExecWait  DoSpinSmashHit 
  1A8:  	Case  ==  .Event:SpinSmashDeath % 21
  1B4:  		SetConst  *Var0  00000001 
  1C4:  		SetConst  *Var1  00A4000B 
  1D4:  		ExecWait  DoSpinSmashHit 
  1E0:  		SetConst  *Var0  00000001 
  1F0:  		SetConst  *Var1  00A4000B 
  200:  		ExecWait  DoDeath 
  20C:  		Return
  214:  	Case  ==  .Event:ShockHit % 2F
  220:  		Call  ResetAllActorSounds   ( .Actor:Self )
  230:  		SetConst  *Var0  00000001 
  240:  		SetConst  *Var1  00A4000B 
  250:  		ExecWait  DoShockHit 
  25C:  		SetConst  *Var0  00000001 
  26C:  		SetConst  *Var1  00A4000B 
  27C:  		ExecWait  DoJumpBack 
  288:  		ExecWait  $Script_8021D5C4_03 
  294:  	Case  ==  .Event:ShockDeath % 26
  2A0:  		SetConst  *Var0  00000001 
  2B0:  		SetConst  *Var1  00A4000B 
  2C0:  		ExecWait  DoShockHit 
  2CC:  		SetConst  *Var0  00000001 
  2DC:  		SetConst  *Var1  00A4000B 
  2EC:  		ExecWait  DoDeath 
  2F8:  		Return
  300:  	CaseOR  ==  00000017 % 17
  30C:  	CaseOR  ==  .Event:Immune % 19
  318:  	CaseOR  ==  .Event:AirLiftFailed % 1F
  324:  		SetConst  *Var0  00000001 
  334:  		SetConst  *Var1  00A40002 
  344:  		ExecWait  DoImmune 
  350:  	EndCaseGroup
  358:  	Case  ==  .Event:Death % 20
  364:  		SetConst  *Var0  00000001 
  374:  		SetConst  *Var1  00A4000B 
  384:  		ExecWait  DoNormalHit 
  390:  		Wait  10`
  39C:  		SetConst  *Var0  00000001 
  3AC:  		SetConst  *Var1  00A4000B 
  3BC:  		ExecWait  DoDeath 
  3C8:  		Return
  3D0:  	Case  ==  .Event:RecoverStatus % 31
  3DC:  		SetConst  *Var0  00000001 
  3EC:  		SetConst  *Var1  00A40002 
  3FC:  		ExecWait  DoRecover 
  408:  	Case  ==  .Event:ScareAway % 39
  414:  		SetConst  *Var0  00000001 
  424:  		SetConst  *Var1  00A40004 
  434:  		SetConst  *Var2  00A4000B 
  444:  		ExecWait  DoScareAway 
  450:  		Return
  458:  	Case  ==  .Event:BeginAirLift % 3A
  464:  		SetConst  *Var0  00000001 
  474:  		SetConst  *Var1  00A40004 
  484:  		ExecWait  DoAirLift 
  490:  	Case  ==  .Event:BlowAway % 16
  49C:  		SetConst  *Var0  00000001 
  4AC:  		SetConst  *Var1  00A4000B 
  4BC:  		ExecWait  DoBlowAway 
  4C8:  		Return
  4D0:  	Default
  4D8:  EndSwitch
  4E0:  Call  EnableIdleScript  ( .Actor:Self 00000001 )
  4F4:  Call  UseIdleAnimation  ( .Actor:Self .True )
  508:  Return
  510:  End
}

#new:Script $Script_FlyingTackle_03 {
    0:  Call  UseIdleAnimation  ( .Actor:Self .False )
   14:  Call  EnableIdleScript  ( .Actor:Self 00000000 )
   28:  Call  SetActorVar       ( .Actor:Self 00000008 00000000 )
   40:  Call  SetTargetActor    ( .Actor:Self .Actor:Player )
   54:  Call  UseBattleCamPreset    ( 0000003F )
   64:  Call  BattleCamTargetActor  ( .Actor:Self )
   74:  Call  8024ECF8  ( FFFFFFFF 00000001 00000000 )
   8C:  Call  SetAnimation      ( .Actor:Self 00000001 00A40008 )
   A4:  Wait  20`
   B0:  Call  SetActorSounds    ( .Actor:Self .ActorSound:Jump 000002CB 00000000 )
   CC:  Call  EnemyTestTarget   ( .Actor:Self *Var0 ~Flags:DamageType:0 00000000 00000001 00000010 )
   F0:  Switch  *Var0 
   FC:  	CaseOR  ==  .HitResult:Miss % 6
  108:  	CaseOR  ==  .HitResult:Lucky % 5
  114:  		Set   *VarA  *Var0 
  124:  		Call  UseBattleCamPreset    ( 00000002 )
  134:  		Call  MoveBattleCamOver (  20` )
  144:  		Call  SetAnimation      ( .Actor:Self 00000001 00A40009 )
  15C:  		Call  SetGoalToTarget   ( .Actor:Self )
  16C:  		Call  AddGoalPos        ( .Actor:Self  -100`  0`  0` )
  188:  		Call  SetActorJumpGravity   ( .Actor:Self *Fixed[0.3] )
  19C:  		Call  JumpToGoal        ( .Actor:Self  17` .False .True .False )
  1BC:  		If  *VarA  ==  .HitResult:Lucky % 5
  1CC:  			Call  EnemyTestTarget   ( .Actor:Self *Var0 ~Flags:DamageType:TriggerLucky 00000000 00000000 00000000 )
  1F0:  		EndIf
  1F8:  		Wait  10`
  204:  		Call  GetActorPos       ( .Actor:Self *Var0 *Var1 *Var2 )
  220:  		Call  SetActorPos       ( .Actor:Self *Var0  0` *Var2 )
  23C:  		Call  SetAnimation      ( .Actor:Self 00000001 00A40002 )
  254:  		Call  ResetActorSounds  ( .Actor:Self .ActorSound:Jump )
  268:  		Wait  15`
  274:  		Call  YieldTurn ( )
  280:  		Call  SetActorYaw       ( .Actor:Self  180` )
  294:  		Call  AddActorDecoration    ( .Actor:Self 00000001 00000000 .Decoration:Sweat )
  2B0:  		ExecWait  $Script_8021D5C4_03 
  2BC:  		Call  RemoveActorDecoration ( .Actor:Self 00000001 00000000 )
  2D4:  		Call  SetActorYaw       ( .Actor:Self  0` )
  2E8:  		Call  EnableIdleScript  ( .Actor:Self 00000001 )
  2FC:  		Call  UseIdleAnimation  ( .Actor:Self .True )
  310:  		Return
  318:  	EndCaseGroup
  320:  EndSwitch
  328:  Call  SetAnimation      ( .Actor:Self 00000001 00A40009 )
  340:  Call  SetGoalToTarget   ( .Actor:Self )
  350:  Call  GetStatusFlags    ( .Actor:Self *VarA )
  364:  If  *VarA  &  ~Flags:StatusFlags:Shrink % 80000
  374:  	Call  AddGoalPos    ( .Actor:Self *Fixed[4.0] *Fixed[-6.0]  0` )
  390:  Else
  398:  	Call  AddGoalPos    ( .Actor:Self  10`  -15`  0` )
  3B4:  EndIf
  3BC:  Call  SetActorJumpGravity   ( .Actor:Self *Fixed[0.3] )
  3D0:  Call  JumpToGoal        ( .Actor:Self  12` .False .True .False )
  3F0:  Wait  2`
  3FC:  Call  SetGoalToTarget   ( .Actor:Self )
  40C:  Call  EnemyDamageTarget ( .Actor:Self *Var0 ~Flags:DamageType:0 00000000 00000000 00000005 00000020 )
  434:  Switch  *Var0 
  440:  	CaseOR  ==  .HitResult:Hit % 0
  44C:  	CaseOR  ==  .HitResult:QuakeImmune % 2
  458:  		Call  UseBattleCamPreset    ( 00000002 )
  468:  		Call  ResetActorSounds      ( .Actor:Self .ActorSound:Jump )
  47C:  		Call  SetAnimation  ( .Actor:Self 00000001 00A4000A )
  494:  		Call  GetActorPos   ( .Actor:Self *Var0 *Var1 *Var2 )
  4B0:  		Call  SetActorJumpGravity   ( .Actor:Self *Fixed[0.5] )
  4C4:  		Add   *Var0  0000001E 
  4D4:  		Call  SetGoalPos    ( .Actor:Self *Var0  0` *Var2 )
  4F0:  		Call  JumpToGoal    ( .Actor:Self  20` .False .True .False )
  510:  		Add   *Var0  00000014 
  520:  		Call  SetGoalPos    ( .Actor:Self *Var0  0` *Var2 )
  53C:  		Call  JumpToGoal    ( .Actor:Self  10` .False .True .False )
  55C:  		Wait  10`
  568:  		Call  YieldTurn ( )
  574:  		ExecWait  $Script_8021D5C4_03 
  580:  	EndCaseGroup
  588:  EndSwitch
  590:  Call  EnableIdleScript  ( .Actor:Self 00000001 )
  5A4:  Call  UseIdleAnimation  ( .Actor:Self .True )
  5B8:  Return
  5C0:  End
}

#new:Script $Script_8021E0E0_03 {
    0:  Call  GetActorVar   ( .Actor:Self 00000000 *Var0 )
   18:  Call  RemoveActor   ( *Var0 )
   28:  Return
   30:  End
}

#new:Script $Script_8021E118_03 {
    0:  Call  UseIdleAnimation  ( .Actor:Self .False )
   14:  Call  8027D32C  ( FFFFFF81 )
   24:  Call  SetAnimation      ( .Actor:Self *Var0 *Var1 )
   3C:  Wait  30`
   48:  Call  GetActorVar       ( .Actor:Self 00000000 *VarA )
   60:  Call  UseIdleAnimation  ( *VarA .False )
   74:  Call  8027D32C  ( *VarA )
   84:  Call  CopyStatusEffects ( .Actor:Self *VarA )
   98:  Call  PlaySoundAtActor  ( .Actor:Self .Sound:SmokeBurst )
   AC:  Thread
   B4:  	Call  GetActorPos   ( .Actor:Self *Var0 *Var1 *Var2 )
   D0:  	Add   *Var1  00000003 
   E0:  	Add   *Var2  00000005 
   F0:  	Loop  00000003 
   FC:  		Call  PlayEffect    ( ~FX:BigSmokePuff *Var0 *Var1 *Var2 00000000 00000000 00000000 00000000 00000000 00000000 00000000 00000000 00000000 00000000 )
  140:  		Wait  3`
  14C:  	EndLoop
  154:  EndThread
  15C:  Wait  5`
  168:  Call  GetActorHP        ( .Actor:Self *VarB )
  17C:  Call  SetEnemyHP        ( *VarA *VarB )
  190:  Call  CopyBuffs ( .Actor:Self *VarA )
  1A4:  Call  GetActorPos       ( .Actor:Self *VarB *VarC *VarD )
  1C0:  Call  SetActorPos       ( *VarA *VarB *VarC *VarD )
  1DC:  Call  SetPartFlagBits   ( *VarA 00000001 00800000 .True )
  1F8:  Call  SetPartFlagBits   ( *VarA 00000001 00020001 .False )
  214:  Call  SetActorFlagBits  ( *VarA 00400004 .False )
  22C:  Call  SetActorFlagBits  ( .Actor:Self 00000004 .True )
  244:  Call  SetActorVar       ( *VarA 00000008 00000002 )
  25C:  Call  SetPartFlagBits   ( .Actor:Self *Var0 00000001 .True )
  278:  Call  SetIdleAnimations ( *VarA 00000001 $IdleAnimations_8021D3AC_03 )
  290:  Call  SetAnimation      ( *VarA 00000001 00A4000B )
  2A8:  Wait  30`
  2B4:  Call  UseBattleCamPreset    ( 00000002 )
  2C4:  Call  GetActorPos       ( *VarA *VarB *VarC *VarD )
  2E0:  If  *VarC  >  00000000 
  2F0:  	Set   *VarC  00000000 
  300:  	Call  SetActorJumpGravity   ( *VarA *Fixed[0.5] )
  314:  	Call  SetActorSounds        ( *VarA .ActorSound:Jump 00000301 00000000 )
  330:  	Call  SetGoalPos    ( *VarA *VarB *VarC *VarD )
  34C:  	Call  JumpToGoal    ( *VarA  15` .False .True .False )
  36C:  	Call  ResetActorSounds      ( *VarA .ActorSound:Jump )
  380:  	Call  SetGoalPos    ( *VarA *VarB *VarC *VarD )
  39C:  	Call  JumpToGoal    ( *VarA  10` .False .True .False )
  3BC:  	Call  SetGoalPos    ( *VarA *VarB *VarC *VarD )
  3D8:  	Call  JumpToGoal    ( *VarA  5` .False .True .False )
  3F8:  EndIf
  400:  Call  ForceHomePos  ( *VarA *VarB *VarC *VarD )
  41C:  Call  HPBarToHome   ( *VarA )
  42C:  Call  SetIdleAnimations ( *VarA 00000001 $IdleAnimations_8021D360_03 )
  444:  Call  SetAnimation  ( *VarA 00000001 00A40002 )
  45C:  Call  SetActorPos   ( .Actor:Self  0`  -1000`  0` )
  478:  Call  ForceHomePos  ( .Actor:Self  0`  -1000`  0` )
  494:  Call  HPBarToHome   ( .Actor:Self )
  4A4:  Call  RemoveActor   ( .Actor:Self )
  4B4:  Return
  4BC:  End
}

#new:Script $Script_8021E5DC_03 {
    0:  Call  8027D32C      ( FFFFFF81 )
   10:  Set   *VarA  *Var0 
   20:  Set   *VarB  *Var1 
   30:  Set   *VarC  *Var2 
   40:  Call  SetActorRotation      ( .Actor:Self 00000000 00000000 00000000 )
   5C:  Call  SetActorScale ( .Actor:Self *Fixed[1.0] *Fixed[1.0] *Fixed[1.0] )
   78:  Call  SetActorDispOffset    ( .Actor:Self 00000000 00000000 00000000 )
   94:  Call  SetAnimation  ( .Actor:Self *VarA *VarB )
   AC:  Call  GetGoalPos    ( .Actor:Self *Var0 *Var1 *Var2 )
   C8:  Add   *Var0  0000000F 
   D8:  Add   *Var1  0000000A 
   E8:  Call  SetActorJumpGravity   ( .Actor:Self *Fixed[0.1] )
   FC:  Call  SetAnimation  ( .Actor:Self *VarA *VarB )
  114:  Call  SetGoalPos    ( .Actor:Self *Var0 *Var1 *Var2 )
  130:  Call  JumpToGoal    ( .Actor:Self  5` .False .False .False )
  150:  Set   *Var0  *VarA 
  160:  Set   *Var1  *VarB 
  170:  ExecWait  DoShockHit 
  17C:  Call  UseBattleCamPreset    ( 00000002 )
  18C:  Thread
  194:  	Call  SetActorRotationOffset    ( .Actor:Self 00000000 *VarC 00000000 )
  1B0:  	Set   *Var0  00000000 
  1C0:  	Loop  0000000F 
  1CC:  		Add   *Var0  FFFFFFD0 
  1DC:  		Call  SetActorRotation  ( .Actor:Self 00000000 00000000 *Var0 )
  1F8:  		Wait  1`
  204:  	EndLoop
  20C:  	Call  SetActorRotationOffset    ( .Actor:Self 00000000 00000000 00000000 )
  228:  EndThread
  230:  Call  GetActorPos   ( .Actor:Self *Var0 *Var1 *Var2 )
  24C:  Add   *Var0  0000003C 
  25C:  Set   *Var1  00000000 
  26C:  Call  SetActorJumpGravity   ( .Actor:Self *Fixed[1.4] )
  280:  Call  SetGoalPos    ( .Actor:Self *Var0 *Var1 *Var2 )
  29C:  Call  JumpToGoal    ( .Actor:Self  15` .False .True .False )
  2BC:  Add   *Var0  00000014 
  2CC:  Call  SetGoalPos    ( .Actor:Self *Var0 *Var1 *Var2 )
  2E8:  Call  JumpToGoal    ( .Actor:Self  10` .False .True .False )
  308:  Add   *Var0  0000000A 
  318:  Call  SetGoalPos    ( .Actor:Self *Var0 *Var1 *Var2 )
  334:  Call  JumpToGoal    ( .Actor:Self  4` .False .True .False )
  354:  Return
  35C:  End
}

#new:Vector3D $Vector3D_8021E940_03 {
0` -1000` 0`
}

#new:IdleAnimations $IdleAnimations_8021E94C_03 {
.Status:Normal    00090001
.Status:Stone     00090000
.Status:Sleep     00090000
.Status:Poison    00090001
.Status:Stop      00090000
.Status:Static    00090001
.Status:Paralyze  00090000
.Status:Dizzy     00090014
.Status:Fear      00090014
.Status:End
}

#new:DefenseTable $DefenseTable_8021E998_03 {
.Element:Normal 00000000
.Element:End
}

#new:StatusTable $StatusTable_8021E9A4_03 {
.Status:Normal      0`
.Status:Default     0`
.Status:Sleep      60`
.Status:Poison      0`
.Status:Frozen      0`
.Status:Dizzy      75`
.Status:Fear        0`
.Status:Static      0`
.Status:Paralyze   75`
.Status:Shrink     80`
.Status:Stop       90`
.Status:DefaultTurnMod    0`
.Status:SleepTurnMod     -1`
.Status:PoisonTurnMod     0`
.Status:FrozenTurnMod     0`
.Status:DizzyTurnMod     -1`
.Status:FearTurnMod       0`
.Status:StaticTurnMod     0`
.Status:ParalyzeTurnMod   0`
.Status:ShrinkTurnMod     0`
.Status:StopTurnMod      -1`
.Status:End
}

#new:PartsTable $PartsTable_8021EA50_03 {
00800000 01000000 001400FF $IdleAnimations_8021E94C_03 $DefenseTable_8021E998_03 00000000 00000000 FFF70000 00000000 
}

#new:Actor $LeeGoombario_03 {
% stats
[Index]        7Fb 
[Level]         0`b 
[MaxHP]        20`b 
[Coins]         0`b 
[Flags]       00000000 
[StatusTable] $StatusTable_8021E9A4_03 
% ai
[PartsCount]    1`s 
[PartsTable]  $PartsTable_8021EA50_03 
[Script]      $Script_Init_Goombario_03 
% move effectiveness
[Escape]      100`b 
[Item]          0`b 
[AirLift]       0`b 
[Hurricane]     0`b % Bow's "Spook" as well
[UpAndAway]     0`b 
[PowerBounce]  90`b 
[SpinSmash]     0`b % weight (0-4)
% ui positions
[Size]         29`b  26`b % width height
[HealthBar]     0`b   0`b % dx dy
[StatusTurn]  -10`b  20`b % dx dy
[StatusIcon]   10`b  20`b % dx dy
}

#new:Script $Script_Init_Goombario_03 {
    0:  Call  BindTakeTurn  ( .Actor:Self $Script_TakeTurn_802203F4_03 )
   14:  Call  BindIdle      ( .Actor:Self $Script_Idle_8021EB14_03 )
   28:  Call  BindHandleEvent   ( .Actor:Self $Script_HandleEvent_8021EB24_03 )
   3C:  Call  BindNextTurn  ( .Actor:Self $Script_NextTurn_80220450_03 )
   50:  Call  SetActorVar   ( .Actor:Self 00000002 00000001 )
   68:  Return
   70:  End
}

#new:Script $Script_Idle_8021EB14_03 {
    0:  Return
    8:  End
}

#new:Script $Script_HandleEvent_8021EB24_03 {
    0:  Call  UseIdleAnimation  ( .Actor:Self .False )
   14:  Call  EnableIdleScript  ( .Actor:Self 00000000 )
   28:  Call  GetLastEvent      ( .Actor:Self *Var0 )
   3C:  Switch  *Var0 
   48:  	CaseOR  ==  .Event:HitCombo % 9
   54:  	CaseOR  ==  .Event:Hit % A
   60:  		SetConst  *Var0  00000001 
   70:  		SetConst  *Var1  0009000A 
   80:  		ExecWait  DoNormalHit 
   8C:  	EndCaseGroup
   94:  	Case  ==  .Event:BurnHit % E
   A0:  		SetConst  *Var0  00000001 
   B0:  		SetConst  *Var1  0009000B 
   C0:  		SetConst  *Var2  0009000C 
   D0:  		ExecWait  DoBurnHit 
   DC:  	Case  ==  .Event:BurnDeath % 24
   E8:  		SetConst  *Var0  00000001 
   F8:  		SetConst  *Var1  0009000B 
  108:  		SetConst  *Var2  0009000C 
  118:  		ExecWait  DoBurnHit 
  124:  		ExecWait  $Script_8021E0E0_03 
  130:  		Wait  10`
  13C:  		SetConst  *Var0  00000001 
  14C:  		SetConst  *Var1  0009000C 
  15C:  		ExecWait  DoDeath 
  168:  		Return
  170:  	Case  ==  .Event:SpinSmashHit % B
  17C:  		SetConst  *Var0  00000001 
  18C:  		SetConst  *Var1  0009000A 
  19C:  		ExecWait  DoSpinSmashHit 
  1A8:  	Case  ==  .Event:SpinSmashDeath % 21
  1B4:  		ExecWait  $Script_8021E0E0_03 
  1C0:  		SetConst  *Var0  00000001 
  1D0:  		SetConst  *Var1  0009000A 
  1E0:  		ExecWait  DoSpinSmashHit 
  1EC:  		SetConst  *Var0  00000001 
  1FC:  		SetConst  *Var1  0009000A 
  20C:  		ExecWait  DoDeath 
  218:  		Return
  220:  	Case  ==  .Event:ShockHit % 2F
  22C:  		SetConst  *Var0  00000001 
  23C:  		SetConst  *Var1  0009000A 
  24C:  		Set   *Var2  0000000C 
  25C:  		ExecWait  $Script_8021E5DC_03 
  268:  		Call  SetGoalToHome ( .Actor:Self )
  278:  		Call  SetActorSpeed ( .Actor:Self *Fixed[8.0] )
  28C:  		Call  SetAnimation  ( .Actor:Self 00000001 00090003 )
  2A4:  		Call  RunToGoal     ( .Actor:Self  0` .False )
  2BC:  	Case  ==  .Event:ShockDeath % 26
  2C8:  		ExecWait  $Script_8021E0E0_03 
  2D4:  		SetConst  *Var0  00000001 
  2E4:  		SetConst  *Var1  0009000A 
  2F4:  		Set   *Var2  0000000C 
  304:  		ExecWait  $Script_8021E5DC_03 
  310:  		SetConst  *Var0  00000001 
  320:  		SetConst  *Var1  0009000A 
  330:  		ExecWait  DoDeath 
  33C:  		Return
  344:  	CaseOR  ==  00000017 % 17
  350:  	CaseOR  ==  .Event:Immune % 19
  35C:  	CaseOR  ==  .Event:AirLiftFailed % 1F
  368:  		SetConst  *Var0  00000001 
  378:  		SetConst  *Var1  00090001 
  388:  		ExecWait  DoImmune 
  394:  	EndCaseGroup
  39C:  	Case  ==  .Event:Death % 20
  3A8:  		ExecWait  $Script_8021E0E0_03 
  3B4:  		SetConst  *Var0  00000001 
  3C4:  		SetConst  *Var1  0009000A 
  3D4:  		ExecWait  DoNormalHit 
  3E0:  		Wait  10`
  3EC:  		SetConst  *Var0  00000001 
  3FC:  		SetConst  *Var1  0009000A 
  40C:  		ExecWait  DoDeath 
  418:  		Return
  420:  	Case  ==  .Event:RecoverStatus % 31
  42C:  		SetConst  *Var0  00000001 
  43C:  		SetConst  *Var1  00090001 
  44C:  		ExecWait  DoRecover 
  458:  	Case  ==  .Event:ScareAway % 39
  464:  		SetConst  *Var0  00000001 
  474:  		SetConst  *Var1  00090003 
  484:  		SetConst  *Var2  0009000A 
  494:  		ExecWait  DoScareAway 
  4A0:  		Return
  4A8:  	Case  ==  .Event:BeginAirLift % 3A
  4B4:  		SetConst  *Var0  00000001 
  4C4:  		SetConst  *Var1  00090003 
  4D4:  		ExecWait  DoAirLift 
  4E0:  	Case  ==  .Event:BlowAway % 16
  4EC:  		SetConst  *Var0  00000001 
  4FC:  		SetConst  *Var1  0009000A 
  50C:  		ExecWait  DoBlowAway 
  518:  		Return
  520:  	Default
  528:  EndSwitch
  530:  Call  EnableIdleScript  ( .Actor:Self 00000001 )
  544:  Call  UseIdleAnimation  ( .Actor:Self .True )
  558:  Return
  560:  End
}

#new:Script $Script_8021F08C_03 {
    0:  Call  UseBattleCamPreset    ( 00000002 )
   10:  Call  SetAnimation  ( .Actor:Self 00000001 00090001 )
   28:  Thread
   30:  	Call  SetActorRotationOffset    ( .Actor:Self 00000000 0000000C 00000000 )
   4C:  	Set   *Var0  000000B4 
   5C:  	Loop  0000000F 
   68:  		Sub   *Var0  0000003C 
   78:  		Call  SetActorRotation  ( .Actor:Self 00000000 00000000 *Var0 )
   94:  		Wait  1`
   A0:  	EndLoop
   A8:  	Call  SetAnimation  ( .Actor:Self 00000001 00090005 )
   C0:  	Call  SetActorRotation  ( .Actor:Self 00000000 00000000 00000000 )
   DC:  	Call  SetActorRotationOffset    ( .Actor:Self 00000000 00000000 00000000 )
   F8:  EndThread
  100:  Call  SetGoalToTarget   ( .Actor:Self )
  110:  Call  GetGoalPos        ( .Actor:Self *Var0 *Var1 *Var2 )
  12C:  Add   *Var0  0000003C 
  13C:  Set   *Var1  00000000 
  14C:  Call  SetActorJumpGravity   ( .Actor:Self *Fixed[1.0] )
  160:  Call  SetGoalPos        ( .Actor:Self *Var0 *Var1 *Var2 )
  17C:  Call  JumpToGoal        ( .Actor:Self  15` .False .True .False )
  19C:  Call  GetStatusFlags    ( .Actor:Self *VarA )
  1B0:  If  *VarA  &  ~Flags:StatusFlags:Shrink % 80000
  1C0:  	SetF  *Var5  *Fixed[7.2] 
  1D0:  Else
  1D8:  	Set   *Var5  00000012 
  1E8:  EndIf
  1F0:  Call  SetAnimation  ( .Actor:Self 00000001 00090007 )
  208:  Call  SetActorDispOffset    ( .Actor:Self 00000000 *Var5 00000000 )
  224:  Wait  1`
  230:  Call  SetActorRotation      ( .Actor:Self 00000000 00000000 00000000 )
  24C:  Call  SetActorDispOffset    ( .Actor:Self 00000000 00000000 00000000 )
  268:  Call  SetAnimation  ( .Actor:Self 00000001 00090001 )
  280:  Add   *Var0  00000014 
  290:  Call  SetGoalPos    ( .Actor:Self *Var0 *Var1 *Var2 )
  2AC:  Call  JumpToGoal    ( .Actor:Self  6` .False .True .False )
  2CC:  Call  SetAnimation  ( .Actor:Self 00000001 00090007 )
  2E4:  Call  SetActorDispOffset    ( .Actor:Self 00000000 *Var5 00000000 )
  300:  Wait  1`
  30C:  Add   *Var0  0000000A 
  31C:  Call  SetAnimation  ( .Actor:Self 00000001 00090001 )
  334:  Call  SetActorDispOffset    ( .Actor:Self 00000000 00000000 00000000 )
  350:  Call  SetGoalPos    ( .Actor:Self *Var0 *Var1 *Var2 )
  36C:  Call  JumpToGoal    ( .Actor:Self  4` .False .True .False )
  38C:  Call  SetAnimation  ( .Actor:Self 00000001 00090007 )
  3A4:  Call  SetActorDispOffset    ( .Actor:Self 00000000 *Var5 00000000 )
  3C0:  Wait  1`
  3CC:  Call  SetActorDispOffset    ( .Actor:Self 00000000 00000000 00000000 )
  3E8:  Call  SetAnimation  ( .Actor:Self 00000001 00090001 )
  400:  Wait  2`
  40C:  Call  SetGoalToHome ( .Actor:Self )
  41C:  Call  SetActorSpeed ( .Actor:Self *Fixed[8.0] )
  430:  Call  SetAnimation  ( .Actor:Self 00000001 00090003 )
  448:  Call  RunToGoal     ( .Actor:Self  0` .False )
  460:  Call  SetAnimation  ( .Actor:Self 00000001 00090001 )
  478:  Return
  480:  End
}

#new:Script $Script_8021F514_03 {
    0:  Call  UseBattleCamPreset    ( 0000003F )
   10:  Call  BattleCamTargetActor  ( .Actor:Self )
   20:  Call  8024ECF8      ( FFFFFFFF 00000001 00000000 )
   38:  Call  SetTargetActor        ( .Actor:Self .Actor:Player )
   4C:  Call  SetGoalToTarget       ( .Actor:Self )
   5C:  Call  AddGoalPos    ( .Actor:Self  70`  0`  0` )
   78:  Call  SetAnimation  ( .Actor:Self 00000001 00090003 )
   90:  Call  SetActorSpeed ( .Actor:Self *Fixed[5.0] )
   A4:  Call  RunToGoal     ( .Actor:Self  0` .False )
   BC:  Call  SetAnimation  ( .Actor:Self 00000001 00090001 )
   D4:  Return
   DC:  End
}

#new:Script $Script_8021F5F8_03 {
    0:  Call  SetGoalToTarget   ( .Actor:Self )
   10:  Call  GetGoalPos        ( .Actor:Self *VarB *VarC *VarD )
   2C:  Call  GetActorPos       ( .Actor:Self *VarC *VarD *VarE )
   48:  If  *VarB  >  *VarC 
   58:  	Sub   *VarB  *VarC 
   68:  Else
   70:  	Sub   *VarC  *VarB 
   80:  	Set   *VarB  *VarC 
   90:  EndIf
   98:  Sub   *VarB  00000014 
   A8:  DivF  *VarB  *Fixed[10.588867] 
   B8:  AddF  *VarB  0000000F 
   C8:  Set   *VarA  *VarB 
   D8:  Return
   E0:  End
}

#new:Script $Script_8021F6E0_03 {
    0:  Call  UseIdleAnimation  ( .Actor:Self .False )
   14:  Call  EnableIdleScript  ( .Actor:Self 00000000 )
   28:  ExecWait  $Script_8021F514_03 
   34:  ExecWait  $Script_8021F5F8_03 
   40:  Call  GetStatusFlags    ( .Actor:Self *VarA )
   54:  If  *VarA  &  ~Flags:StatusFlags:Shrink % 80000
   64:  	SetF  *Var0  *Fixed[7.2] 
   74:  	SetF  *Var1  *Fixed[7.6] 
   84:  	SetF  *Var1  *Fixed[3.6] 
   94:  Else
   9C:  	Set   *Var0  00000012 
   AC:  	Set   *Var1  00000013 
   BC:  	Set   *Var2  00000009 
   CC:  EndIf
   D4:  Call  SetAnimation      ( .Actor:Self 00000001 00090007 )
   EC:  Call  SetActorDispOffset    ( .Actor:Self 00000000 *Var0 00000000 )
  108:  Wait  5`
  114:  Call  SetActorDispOffset    ( .Actor:Self 00000000 *Var1 00000000 )
  130:  Wait  1`
  13C:  Call  SetAnimation      ( .Actor:Self 00000001 00090006 )
  154:  Call  SetActorDispOffset    ( .Actor:Self 00000000 *Var2 00000000 )
  170:  Call  SetGoalToTarget   ( .Actor:Self )
  180:  Call  AddGoalPos        ( .Actor:Self  0`  0`  5` )
  19C:  Call  SetJumpAnimations ( .Actor:Self 00000001 00090006 00090006 00090006 )
  1BC:  Call  $Function_80218300_03 ( *VarA 00000000 )
  1D0:  Call  EnemyTestTarget   ( .Actor:Self *Var0 ~Flags:DamageType:0 00000000 00000001 00000010 )
  1F4:  Switch  *Var0 
  200:  	CaseOR  ==  .HitResult:Miss % 6
  20C:  	CaseOR  ==  .HitResult:Lucky % 5
  218:  		Set   *VarA  *Var0 
  228:  		Call  SetJumpAnimations ( .Actor:Self 00000001 00090006 00090006 00090006 )
  248:  		Call  $Function_80218B90_03 ( )
  254:  		Thread
  25C:  			Call  ShakeCam  ( .Cam:Battle 00000000  5` *Fixed[1.0] )
  278:  		EndThread
  280:  		If  *VarA  ==  .HitResult:Lucky % 5
  290:  			Call  EnemyTestTarget   ( .Actor:Self *Var0 ~Flags:DamageType:TriggerLucky 00000000 00000000 00000000 )
  2B4:  		EndIf
  2BC:  		Wait  20`
  2C8:  		Call  YieldTurn ( )
  2D4:  		ExecWait  $Script_8021F08C_03 
  2E0:  		Call  EnableIdleScript  ( .Actor:Self 00000001 )
  2F4:  		Call  UseIdleAnimation  ( .Actor:Self .True )
  308:  		Return
  310:  	EndCaseGroup
  318:  EndSwitch
  320:  ChildThread
  328:  	Call  SetPartScale  ( .Actor:Self 00000001 *Fixed[1.1] *Fixed[0.8] *Fixed[1.0] )
  348:  	Wait  1`
  354:  	Call  SetPartScale  ( .Actor:Self 00000001 *Fixed[1.3] *Fixed[0.5] *Fixed[1.0] )
  374:  	Wait  1`
  380:  	Call  SetPartScale  ( .Actor:Self 00000001 *Fixed[1.0] *Fixed[1.0] *Fixed[1.0] )
  3A0:  EndChildThread
  3A8:  Wait  1`
  3B4:  Wait  2`
  3C0:  Call  GetActorVar   ( .Actor:Self 00000001 *Var9 )
  3D8:  Switch  *Var9 
  3E4:  	Case  ==  00000000 
  3F0:  		Call  EnemyDamageTarget ( .Actor:Self *Var0 ~Flags:DamageType:0 00000000 00000000 00000001 00000010 )
  418:  	Case  ==  00000001 
  424:  		Call  EnemyDamageTarget ( .Actor:Self *Var0 ~Flags:DamageType:0 00000000 00000000 00000002 00000010 )
  44C:  	Case  ==  00000002 
  458:  		Call  EnemyDamageTarget ( .Actor:Self *Var0 ~Flags:DamageType:0 00000000 00000000 00000003 00000010 )
  480:  EndSwitch
  488:  Call  GetActorHP    ( .Actor:Player *Var0 )
  49C:  If  *Var0  ==  00000000 
  4AC:  	Goto  64
  4B8:  EndIf
  4C0:  Set   *VarA  00000018 
  4D0:  Call  GetActorVar   ( .Actor:Self 00000001 *Var9 )
  4E8:  Switch  *Var9 
  4F4:  	Case  ==  00000000 
  500:  		Thread
  508:  			Wait  4`
  514:  			Set   *Var0  00000000 
  524:  			Loop  00000006 
  530:  				Add   *Var0  0000001E 
  540:  				Call  SetActorRotation  ( .Actor:Self 00000000 00000000 *Var0 )
  55C:  				Wait  1`
  568:  			EndLoop
  570:  		EndThread
  578:  		Call  SetGoalToTarget       ( .Actor:Self )
  588:  		Call  SetJumpAnimations     ( .Actor:Self 00000001 00090006 00090006 00090006 )
  5A8:  		Call  $Function_80218300_03 ( *VarA 00000003 )
  5BC:  	Case  ==  00000001 
  5C8:  		Thread
  5D0:  			Wait  4`
  5DC:  			Set   *Var0  00000000 
  5EC:  			Loop  00000006 
  5F8:  				Add   *Var0  0000001E 
  608:  				Call  SetActorRotation  ( .Actor:Self 00000000 00000000 *Var0 )
  624:  				Wait  1`
  630:  			EndLoop
  638:  		EndThread
  640:  		Call  SetGoalToTarget   ( .Actor:Self )
  650:  		Call  EnableActorBlur   ( .Actor:Self 00000001 )
  664:  		Call  SetJumpAnimations ( .Actor:Self 00000001 00090006 00090006 00090006 )
  684:  		Call  $Function_80218300_03 ( *VarA 00000003 )
  698:  		Call  EnableActorBlur   ( .Actor:Self 00000000 )
  6AC:  	Case  ==  00000002 
  6B8:  		Thread
  6C0:  			Wait  4`
  6CC:  			Set   *Var0  00000000 
  6DC:  			Loop  00000006 
  6E8:  				Add   *Var0  0000001E 
  6F8:  				Call  SetActorRotation  ( .Actor:Self 00000000 F1194D80 *Var0 )
  714:  				Wait  1`
  720:  			EndLoop
  728:  			Call  SetAnimation  ( .Actor:Self 00000001 00090006 )
  740:  		EndThread
  748:  		Thread
  750:  			Set   *Var0  00000000 
  760:  			Loop  *VarA 
  76C:  				Add   *Var0  00000085 
  77C:  				Call  SetActorRotation  ( .Actor:Self F1194D80 *Var0 F1194D80 )
  798:  				Wait  1`
  7A4:  			EndLoop
  7AC:  		EndThread
  7B4:  		Call  SetGoalToTarget   ( .Actor:Self )
  7C4:  		Call  EnableActorBlur   ( .Actor:Self 00000001 )
  7D8:  		Call  SetJumpAnimations ( .Actor:Self 00000001 00090006 00090006 00090006 )
  7F8:  		Call  $Function_80218300_03 ( *VarA 00000003 )
  80C:  		Call  EnableActorBlur   ( .Actor:Self 00000000 )
  820:  EndSwitch
  828:  ChildThread
  830:  	Call  SetPartScale  ( .Actor:Self 00000001 *Fixed[1.1] *Fixed[0.8] *Fixed[1.0] )
  850:  	Wait  1`
  85C:  	Call  SetPartScale  ( .Actor:Self 00000001 *Fixed[1.3] *Fixed[0.5] *Fixed[1.0] )
  87C:  	Wait  1`
  888:  	Call  SetPartScale  ( .Actor:Self 00000001 *Fixed[1.0] *Fixed[1.0] *Fixed[1.0] )
  8A8:  EndChildThread
  8B0:  Wait  1`
  8BC:  Wait  2`
  8C8:  Call  GetActorVar   ( .Actor:Self 00000001 *Var9 )
  8E0:  Switch  *Var9 
  8EC:  	Case  ==  00000000 
  8F8:  		Call  EnemyDamageTarget ( .Actor:Self *Var0 ~Flags:DamageType:0 00000000 00000000 00000001 00000020 )
  920:  	Case  ==  00000001 
  92C:  		Call  EnemyDamageTarget ( .Actor:Self *Var0 ~Flags:DamageType:0 00000000 00000000 00000002 00000020 )
  954:  	Case  ==  00000002 
  960:  		Call  EnemyDamageTarget ( .Actor:Self *Var0 ~Flags:DamageType:0 00000000 00000000 00000003 00000020 )
  988:  EndSwitch
  990:  Label  64
  99C:  Switch  *Var0 
  9A8:  	CaseOR  ==  .HitResult:Hit % 0
  9B4:  	CaseOR  ==  .HitResult:QuakeImmune % 2
  9C0:  		Call  YieldTurn ( )
  9CC:  		ExecWait  $Script_8021F08C_03 
  9D8:  	EndCaseGroup
  9E0:  EndSwitch
  9E8:  Call  EnableIdleScript  ( .Actor:Self 00000001 )
  9FC:  Call  UseIdleAnimation  ( .Actor:Self .True )
  A10:  Return
  A18:  End
}

#new:Script $Script_80220100_03 {
    0:  Call  UseIdleAnimation  ( .Actor:Self .False )
   14:  Call  EnableIdleScript  ( .Actor:Self 00000000 )
   28:  Call  SetActorJumpGravity   ( .Actor:Self *Fixed[1.8] )
   3C:  Call  GetActorPos       ( .Actor:Self *Var0 *Var1 *Var2 )
   58:  Call  SetGoalPos        ( .Actor:Self *Var0 *Var1 *Var2 )
   74:  Call  JumpToGoal        ( .Actor:Self  10` .False .True .False )
   94:  Wait  10`
   A0:  Call  SetTargetActor    ( .Actor:Self .Actor:Player )
   B4:  Call  SetGoalToTarget   ( .Actor:Self )
   C4:  Call  SetBattleFlagBits ( 00000004 .True )
   D8:  Call  $Function_80218D90_03 ( *Var5 )
   E8:  Wait  12`
   F4:  Call  SetCamEnabled     ( .Cam:Tattle .True )
  108:  Call  SetCamFlag80      ( .Cam:Tattle .False )
  11C:  Call  SetCamPerspective ( .Cam:Tattle 00000006  25`  16`  1024` )
  13C:  Call  SetCamViewport    ( .Cam:Tattle  37`  95`  138`  99` )
  15C:  Call  SetGoalToTarget   ( .Actor:Self )
  16C:  Call  GetGoalPos        ( .Actor:Self *Var0 *Var1 *Var2 )
  188:  Sub   *Var0  00000008 
  198:  Set   *Var1  00000000 
  1A8:  Call  $Function_80218CE4_03 ( )
  1B4:  Wait  1`
  1C0:  Call  802CAE50  ( 00000002 *Var0 *Var1 *Var2 )
  1DC:  Call  802CABE8  ( 00000002 00000000 *Var3 00000064 00000004 )
  1FC:  Wait  2`
  208:  Call  PlaySoundAtActor  ( .Actor:Self 00000282 )
  21C:  Call  SetCamFlag80      ( .Cam:Tattle .True )
  230:  Wait  10`
  23C:  Call  ActorSpeak        ( 001C0092 .Actor:Self 00000001 0009000F 00090001 ) % It's Mario, silly! He's here to save Princess Peac ...
  25C:  Call  $Function_80218E2C_03 ( *Var5 )
  26C:  Wait  12`
  278:  Call  SetCamEnabled     ( .Cam:Tattle .False )
  28C:  Wait  32`
  298:  Call  UseBattleCamPreset    ( 00000002 )
  2A8:  Call  SetBattleFlagBits ( 00000004 .False )
  2BC:  Call  EnableIdleScript  ( .Actor:Self 00000001 )
  2D0:  Call  UseIdleAnimation  ( .Actor:Self .True )
  2E4:  Return
  2EC:  End
}

#new:Script $Script_TakeTurn_802203F4_03 {
    0:  Call  RandInt   ( 00000064 *Var0 )
   14:  If  *Var0  <  00000028 
   24:  	ExecWait  $Script_80220100_03 
   30:  Else
   38:  	ExecWait  $Script_8021F6E0_03 
   44:  EndIf
   4C:  Return
   54:  End
}

#new:Script $Script_NextTurn_80220450_03 {
    0:  Call  GetBattlePhase    ( *Var0 )
   10:  Switch  *Var0 
   1C:  	Case  ==  0000000C 
   28:  		Call  GetActorVar   ( .Actor:Self 00000002 *Var0 )
   40:  		If  *Var0  >  00000000 
   50:  			Sub   *Var0  00000001 
   60:  			Call  SetActorVar   ( .Actor:Self 00000002 *Var0 )
   78:  			BreakCase
   80:  		EndIf
   88:  		SetConst  *Var0  00000001 
   98:  		SetConst  *Var1  0009000A 
   A8:  		ExecWait  $Script_8021E118_03 
   B4:  		Return
   BC:  EndSwitch
   C4:  Return
   CC:  End
}

#new:SpecialFormation $SpecialFormation_80220524_03 {
$LeeGoombario_03 $Vector3D_8021E940_03 00000000 00000000 00000000 00000000 00000000 
}

#new:IdleAnimations $IdleAnimations_80220540_03 {
.Status:Normal    000A0004
.Status:Stone     000A0000
.Status:Sleep     000A0000
.Status:Poison    000A0004
.Status:Stop      000A0000
.Status:Static    000A0004
.Status:Paralyze  000A0000
.Status:Dizzy     000A001C
.Status:Fear      000A001C
.Status:End
}

#new:IdleAnimations $IdleAnimations_8022058C_03 {
.Status:Normal    000A0019
.Status:Stone     000A0003
.Status:Sleep     000A0003
.Status:Poison    000A0019
.Status:Stop      000A0003
.Status:Static    000A0019
.Status:Paralyze  000A0003
.Status:Dizzy     000A0019
.Status:Fear      000A0019
.Status:End
}

#new:DefenseTable $DefenseTable_802205D8_03 {
.Element:Normal 00000001
.Element:End
}

#new:DefenseTable $DefenseTable_802205E4_03 {
.Element:Normal 00000000
.Element:End
}

#new:StatusTable $StatusTable_802205F0_03 {
.Status:Normal      0`
.Status:Default     0`
.Status:Sleep      60`
.Status:Poison      0`
.Status:Frozen      0`
.Status:Dizzy      75`
.Status:Fear        0`
.Status:Static      0`
.Status:Paralyze   75`
.Status:Shrink     80`
.Status:Stop       90`
.Status:DefaultTurnMod    0`
.Status:SleepTurnMod     -1`
.Status:PoisonTurnMod     0`
.Status:FrozenTurnMod     0`
.Status:DizzyTurnMod     -1`
.Status:FearTurnMod       0`
.Status:StaticTurnMod     0`
.Status:ParalyzeTurnMod   0`
.Status:ShrinkTurnMod     0`
.Status:StopTurnMod      -1`
.Status:End
}

#new:PartsTable $PartsTable_8022069C_03 {
00800000 01000000 FE2000FF $IdleAnimations_80220540_03 $DefenseTable_802205D8_03 00001000 00000000 00F00000 00000000 
}

#new:Actor $LeeKooper_03 {
% stats
[Index]        80b 
[Level]         0`b 
[MaxHP]        20`b 
[Coins]         0`b 
[Flags]       00000000 
[StatusTable] $StatusTable_802205F0_03 
% ai
[PartsCount]    1`s 
[PartsTable]  $PartsTable_8022069C_03 
[Script]      $Script_Init_Kooper_03 
% move effectiveness
[Escape]      100`b 
[Item]          0`b 
[AirLift]       0`b 
[Hurricane]     0`b % Bow's "Spook" as well
[UpAndAway]     0`b 
[PowerBounce]  90`b 
[SpinSmash]     0`b % weight (0-4)
% ui positions
[Size]         32`b  38`b % width height
[HealthBar]     0`b   0`b % dx dy
[StatusTurn]  -10`b  20`b % dx dy
[StatusIcon]   10`b  20`b % dx dy
}

#new:Script $Script_Init_Kooper_03 {
    0:  Call  BindTakeTurn  ( .Actor:Self $Script_TakeTurn_80221200_03 )
   14:  Call  BindIdle      ( .Actor:Self $Script_Idle_80220790_03 )
   28:  Call  BindHandleEvent   ( .Actor:Self $Script_HandleEvent_80220908_03 )
   3C:  Call  BindNextTurn  ( .Actor:Self $Script_NextTurn_802221A0_03 )
   50:  Call  SetActorVar   ( .Actor:Self 00000004 00000000 )
   68:  Call  SetActorVar   ( .Actor:Self 00000005 00000000 )
   80:  Call  SetActorVar   ( .Actor:Self 00000002 00000001 )
   98:  Return
   A0:  End
}

#new:Script $Script_Idle_80220790_03 {
    0:  Label  0
    C:  Call  GetActorVar   ( .Actor:Self 00000004 *Var0 )
   24:  Switch  *Var0 
   30:  	Case  ==  00000000 
   3C:  		Call  SetTargetOffset       ( .Actor:Self 00000001  -2`  38` )
   58:  		Call  8027D4C8  ( FFFFFF81 00000001 FFFFFFFD FFFFFFF7 )
   74:  		Call  $Function_80218E74_03 ( FFFFFFF6 00000019 0000000A 00000019 )
   90:  	Case  ==  00000001 
   9C:  		Call  SetTargetOffset       ( .Actor:Self 00000001  5`  15` )
   B8:  		Call  8027D4C8  ( FFFFFF81 00000001 00000000 FFFFFFFA )
   D4:  		Call  $Function_80218E74_03 ( FFFFFFF6 00000014 0000000A 00000014 )
   F0:  EndSwitch
   F8:  Wait  1`
  104:  Goto  0
  110:  Return
  118:  End
}

#new:IntTable $IntTable_802208B0_03 {
00000009 00000010 00000016 0000001A 0000001E 00000020 00000021 00000020 
0000001E 0000001A 00000016 00000010 00000009 00000000 00000004 00000006 
00000007 00000006 00000004 00000000 00000002 00000000 
}

#new:Script $Script_HandleEvent_80220908_03 {
    0:  Call  UseIdleAnimation  ( .Actor:Self .False )
   14:  Call  EnableIdleScript  ( .Actor:Self 00000000 )
   28:  Call  GetLastEvent      ( .Actor:Self *Var0 )
   3C:  Switch  *Var0 
   48:  	CaseOR  ==  .Event:HitCombo % 9
   54:  	CaseOR  ==  .Event:Hit % A
   60:  		SetConst  *Var0  00000001 
   70:  		SetConst  *Var1  000A0011 
   80:  		ExecWait  DoNormalHit 
   8C:  	EndCaseGroup
   94:  	Case  ==  .Event:BurnHit % E
   A0:  		SetConst  *Var0  00000001 
   B0:  		SetConst  *Var1  000A0012 
   C0:  		SetConst  *Var2  000A0013 
   D0:  		ExecWait  DoBurnHit 
   DC:  	Case  ==  .Event:BurnDeath % 24
   E8:  		SetConst  *Var0  00000001 
   F8:  		SetConst  *Var1  000A0012 
  108:  		SetConst  *Var2  000A0013 
  118:  		ExecWait  DoBurnHit 
  124:  		ExecWait  $Script_8021E0E0_03 
  130:  		SetConst  *Var0  00000001 
  140:  		SetConst  *Var1  000A0013 
  150:  		ExecWait  DoDeath 
  15C:  		Return
  164:  	Case  ==  .Event:SpinSmashHit % B
  170:  		SetConst  *Var0  00000001 
  180:  		SetConst  *Var1  000A0011 
  190:  		ExecWait  DoSpinSmashHit 
  19C:  	Case  ==  .Event:SpinSmashDeath % 21
  1A8:  		ExecWait  $Script_8021E0E0_03 
  1B4:  		SetConst  *Var0  00000001 
  1C4:  		SetConst  *Var1  000A0011 
  1D4:  		ExecWait  DoSpinSmashHit 
  1E0:  		SetConst  *Var0  00000001 
  1F0:  		SetConst  *Var1  000A0011 
  200:  		ExecWait  DoDeath 
  20C:  		Return
  214:  	Case  ==  .Event:FlipTrigger % D
  220:  		Call  SetActorVar       ( .Actor:Self 00000004 00000001 )
  238:  		Call  SetActorVar       ( .Actor:Self 00000005 00000001 )
  250:  		Call  SetDefenseTable   ( .Actor:Self 00000001 $DefenseTable_802205E4_03 )
  268:  		Call  SetIdleAnimations ( .Actor:Self 00000001 $IdleAnimations_8022058C_03 )
  280:  		Call  SetTargetOffset   ( .Actor:Self 00000001  5`  15` )
  29C:  		Call  8027D4C8  ( FFFFFF81 00000001 00000000 FFFFFFFA )
  2B8:  		Call  SetAnimation      ( .Actor:Self 00000001 000A0011 )
  2D0:  		Call  SetActorRotationOffset    ( .Actor:Self 00000000 0000000C 00000000 )
  2EC:  		Thread
  2F4:  			Wait  4`
  300:  			Call  SetActorRotation  ( .Actor:Self 00000000 00000000 0000001E )
  31C:  			Wait  1`
  328:  			Call  SetActorRotation  ( .Actor:Self 00000000 00000000 00000000 )
  344:  			Wait  1`
  350:  			Call  SetActorRotation  ( .Actor:Self 00000000 00000000 FFFFFFE2 )
  36C:  			Wait  1`
  378:  			Call  SetActorRotation  ( .Actor:Self 00000000 00000000 FFFFFFC4 )
  394:  			Wait  1`
  3A0:  			Call  SetActorRotation  ( .Actor:Self 00000000 00000000 FFFFFFB5 )
  3BC:  			Wait  1`
  3C8:  		EndThread
  3D0:  		UseIntBuffer  $IntTable_802208B0_03 
  3DC:  		Loop  00000016 
  3E8:  			Get1Int  *Var0 
  3F4:  			Call  SetActorDispOffset    ( .Actor:Self 00000000 *Var0 00000000 )
  410:  			Wait  1`
  41C:  		EndLoop
  424:  		Call  SetActorRotationOffset    ( .Actor:Self 00000000 00000000 00000000 )
  440:  		Call  SetActorRotation      ( .Actor:Self 00000000 00000000 00000000 )
  45C:  		Call  SetActorDispOffset    ( .Actor:Self 00000000 00000000 00000000 )
  478:  		Call  SetAnimation  ( .Actor:Self 00000001 000A0019 )
  490:  	CaseOR  ==  00000017 % 17
  49C:  	CaseOR  ==  .Event:Immune % 19
  4A8:  	CaseOR  ==  .Event:AirLiftFailed % 1F
  4B4:  		Call  GetActorVar   ( .Actor:Self 00000004 *Var0 )
  4CC:  		Switch  *Var0 
  4D8:  			Case  ==  00000000 
  4E4:  				SetConst  *Var0  00000001 
  4F4:  				SetConst  *Var1  000A0004 
  504:  			Case  ==  00000001 
  510:  				Call  SetAnimationRate  ( .Actor:Self 00000001 *Fixed[1.0] )
  528:  				SetConst  *Var0  00000001 
  538:  				SetConst  *Var1  000A0019 
  548:  		EndSwitch
  550:  		ExecWait  DoImmune 
  55C:  	EndCaseGroup
  564:  	Case  ==  .Event:Death % 20
  570:  		ExecWait  $Script_8021E0E0_03 
  57C:  		SetConst  *Var0  00000001 
  58C:  		SetConst  *Var1  000A0011 
  59C:  		ExecWait  DoNormalHit 
  5A8:  		Wait  10`
  5B4:  		SetConst  *Var0  00000001 
  5C4:  		SetConst  *Var1  000A0011 
  5D4:  		ExecWait  DoDeath 
  5E0:  		Return
  5E8:  	Case  ==  .Event:RecoverStatus % 31
  5F4:  		Call  GetActorVar   ( .Actor:Self 00000004 *Var0 )
  60C:  		If  *Var0  ==  00000001 
  61C:  			SetConst  *Var0  00000001 
  62C:  			SetConst  *Var1  000A0019 
  63C:  			ExecWait  DoImmune 
  648:  		Else
  650:  			SetConst  *Var0  00000001 
  660:  			SetConst  *Var1  000A0004 
  670:  			ExecWait  DoRecover 
  67C:  		EndIf
  684:  	Case  ==  .Event:ScareAway % 39
  690:  		SetConst  *Var0  00000001 
  6A0:  		SetConst  *Var1  000A0006 
  6B0:  		SetConst  *Var2  000A0011 
  6C0:  		ExecWait  DoScareAway 
  6CC:  		Return
  6D4:  	Case  ==  .Event:BeginAirLift % 3A
  6E0:  		Call  GetActorVar   ( .Actor:Self 00000004 *Var0 )
  6F8:  		Switch  *Var0 
  704:  			Case  ==  00000000 
  710:  				SetConst  *Var0  00000001 
  720:  				SetConst  *Var1  000A0006 
  730:  			Case  ==  00000001 
  73C:  				Call  SetAnimationRate  ( .Actor:Self 00000001 *Fixed[3.0] )
  754:  				SetConst  *Var0  00000001 
  764:  				SetConst  *Var1  000A0019 
  774:  		EndSwitch
  77C:  		ExecWait  DoAirLift 
  788:  	Case  ==  .Event:BlowAway % 16
  794:  		Call  GetActorVar   ( .Actor:Self 00000004 *Var0 )
  7AC:  		Switch  *Var0 
  7B8:  			Case  ==  00000000 
  7C4:  				Call  GetStatusFlags    ( .Actor:Self *Var0 )
  7D8:  				If  *Var0  !&  ~Flags:StatusFlags:Sleep|Frozen|Fear|Paralyze|Dizzy|Stone|Stop % 35D000
  7E8:  					If  *Var0  &  ~Flags:StatusFlags:Shrink % 80000
  7F8:  						Call  SetActorDispOffset    ( .Actor:Self 00000000 00000001 00000000 )
  814:  					Else
  81C:  						Call  SetActorDispOffset    ( .Actor:Self 00000000 00000003 00000000 )
  838:  					EndIf
  840:  				EndIf
  848:  				SetConst  *Var0  00000001 
  858:  				SetConst  *Var1  000A0006 
  868:  			Case  ==  00000001 
  874:  				SetConst  *Var0  00000001 
  884:  				SetConst  *Var1  000A0019 
  894:  		EndSwitch
  89C:  		ExecWait  DoBlowAway 
  8A8:  		Return
  8B0:  	Default
  8B8:  EndSwitch
  8C0:  Call  EnableIdleScript  ( .Actor:Self 00000001 )
  8D4:  Call  UseIdleAnimation  ( .Actor:Self .True )
  8E8:  Return
  8F0:  End
}

#new:Script $Script_TakeTurn_80221200_03 {
    0:  Call  UseIdleAnimation  ( .Actor:Self .False )
   14:  Call  EnableIdleScript  ( .Actor:Self 00000000 )
   28:  Call  SetTargetActor    ( .Actor:Self .Actor:Player )
   3C:  Call  GetActorVar       ( .Actor:Self 00000004 *Var0 )
   54:  If  *Var0  ==  00000001 
   64:  	Call  GetActorVar   ( .Actor:Self 00000005 *Var0 )
   7C:  	Sub   *Var0  00000001 
   8C:  	If  *Var0  >  00000000 
   9C:  		Call  SetActorVar   ( .Actor:Self 00000005 *Var0 )
   B4:  		Call  AddActorDecoration    ( .Actor:Self 00000001 00000000 .Decoration:Sweat )
   D0:  		Call  SetAnimationRate      ( .Actor:Self 00000001 *Fixed[3.0] )
   E8:  		Wait  30`
   F4:  		Call  SetAnimationRate      ( .Actor:Self 00000001 *Fixed[1.0] )
  10C:  		Call  RemoveActorDecoration ( .Actor:Self 00000001 00000000 )
  124:  	Else
  12C:  		Call  AddActorDecoration    ( .Actor:Self 00000001 00000000 .Decoration:Sweat )
  148:  		Call  SetAnimationRate      ( .Actor:Self 00000001 *Fixed[3.0] )
  160:  		Wait  20`
  16C:  		Call  SetAnimationRate      ( .Actor:Self 00000001 *Fixed[1.0] )
  184:  		Call  RemoveActorDecoration ( .Actor:Self 00000001 00000000 )
  19C:  		Call  SetAnimation  ( .Actor:Self 00000001 000A0019 )
  1B4:  		Set   *Var0  00000000 
  1C4:  		Call  SetActorRotationOffset    ( .Actor:Self 00000000 0000000C 00000000 )
  1E0:  		Thread
  1E8:  			Loop  00000005 
  1F4:  				Add   *Var0  0000000F 
  204:  				Call  SetActorRotation  ( .Actor:Self 00000000 00000000 *Var0 )
  220:  				Wait  1`
  22C:  			EndLoop
  234:  		EndThread
  23C:  		Call  GetActorPos       ( .Actor:Self *Var0 *Var1 *Var2 )
  258:  		Call  SetGoalPos        ( .Actor:Self *Var0 *Var1 *Var2 )
  274:  		Call  SetActorJumpGravity       ( .Actor:Self *Fixed[3.0] )
  288:  		Call  JumpToGoal        ( .Actor:Self  8` .False .True .False )
  2A8:  		Call  SetActorRotationOffset    ( .Actor:Self 00000000 00000000 00000000 )
  2C4:  		Call  SetActorRotation  ( .Actor:Self 00000000 00000000 00000000 )
  2E0:  		Call  SetActorDispOffset        ( .Actor:Self 00000000 00000000 00000000 )
  2FC:  		Call  SetAnimation      ( .Actor:Self 00000001 000A0004 )
  314:  		Call  SetActorVar       ( .Actor:Self 00000004 00000000 )
  32C:  		Call  SetDefenseTable   ( .Actor:Self 00000001 $DefenseTable_802205D8_03 )
  344:  		Call  SetIdleAnimations ( .Actor:Self 00000001 $IdleAnimations_80220540_03 )
  35C:  		Call  SetTargetOffset   ( .Actor:Self 00000001  -2`  38` )
  378:  		Call  8027D4C8  ( FFFFFF81 00000001 FFFFFFFD FFFFFFF7 )
  394:  	EndIf
  39C:  	Call  EnableIdleScript  ( .Actor:Self 00000001 )
  3B0:  	Call  UseIdleAnimation  ( .Actor:Self .True )
  3C4:  	Return
  3CC:  EndIf
  3D4:  Call  SetAnimation      ( .Actor:Self 00000001 000A000E )
  3EC:  Call  PlaySoundAtActor  ( .Actor:Self 00000000 )
  400:  Wait  15`
  40C:  Call  SetAnimation      ( .Actor:Self 00000001 000A000A )
  424:  Call  PlaySoundAtActor  ( .Actor:Self 0000200C )
  438:  Call  UseBattleCamPreset    ( 0000000E )
  448:  Call  BattleCamTargetActor  ( .Actor:Self )
  458:  Call  MoveBattleCamOver (  75` )
  468:  Call  8024ECF8  ( 00000001 00000001 00000001 )
  480:  Call  GetActorVar       ( .Actor:Self 00000001 *Var0 )
  498:  Switch  *Var0 
  4A4:  	Case  ==  00000000 
  4B0:  		Set   *Var0  0000000A 
  4C0:  	Case  ==  00000001 
  4CC:  		Set   *Var0  00000014 
  4DC:  	Case  ==  00000002 
  4E8:  		Set   *Var0  0000001E 
  4F8:  EndSwitch
  500:  Set   *Var9  00000000 
  510:  Loop  *Var0 
  51C:  	Add   *Var9  00000001 
  52C:  	Switch  *Var9 
  538:  		Case  <  00000014 
  544:  			Call  SetAnimation  ( .Actor:Self 00000001 000A000A )
  55C:  			Call  SetActorSpeed ( .Actor:Self *Fixed[10.0] )
  570:  		Case  ==  00000014 
  57C:  			Call  GetActorPos   ( .Actor:Self *Var4 *Var5 *Var6 )
  598:  			Call  PlayEffect    ( ~FX:SmokeImpact:Small *Var4 *Var5 *Var6 00000020 00000004 00000000 0000000A 00000000 00000000 00000000 00000000 00000000 )
  5DC:  		Case  <  00000028 
  5E8:  			Call  SetAnimation  ( .Actor:Self 00000001 000A000B )
  600:  			Call  SetActorSpeed ( .Actor:Self *Fixed[12.0] )
  614:  		Case  ==  00000028 
  620:  			Call  GetActorPos   ( .Actor:Self *Var4 *Var5 *Var6 )
  63C:  			Call  PlayEffect    ( ~FX:SmokeImpact:Small *Var4 *Var5 *Var6 00000020 00000004 00000000 0000000A 00000000 00000000 00000000 00000000 00000000 )
  680:  		Case  <  00000032 
  68C:  			Call  SetAnimation  ( .Actor:Self 00000001 000A000C )
  6A4:  			Call  SetActorSpeed ( .Actor:Self *Fixed[14.0] )
  6B8:  		Case  ==  00000032 
  6C4:  			Call  GetActorPos   ( .Actor:Self *Var4 *Var5 *Var6 )
  6E0:  			Call  PlayEffect    ( ~FX:SmokeImpact:Small *Var4 *Var5 *Var6 00000020 00000004 00000000 0000000A 00000000 00000000 00000000 00000000 00000000 )
  724:  		Case  <  0000003C 
  730:  			Call  SetAnimation  ( .Actor:Self 00000001 000A000D )
  748:  			Call  SetActorSpeed ( .Actor:Self *Fixed[16.0] )
  75C:  		Case  ==  0000003C 
  768:  			Call  GetActorPos   ( .Actor:Self *Var4 *Var5 *Var6 )
  784:  			Call  PlayEffect    ( ~FX:SmokeImpact:Small *Var4 *Var5 *Var6 00000020 00000004 00000000 0000000A 00000000 00000000 00000000 00000000 00000000 )
  7C8:  	EndSwitch
  7D0:  	Wait  1`
  7DC:  EndLoop
  7E4:  Call  PlaySoundAtActor  ( .Actor:Self 0000200A )
  7F8:  Call  SetActorSounds    ( .Actor:Self .ActorSound:Walk 00000000 00000000 )
  814:  Call  UseBattleCamPreset    ( 00000002 )
  824:  Call  MoveBattleCamOver (  15` )
  834:  Call  AddActorDecoration    ( .Actor:Self 00000000 00000000 .Decoration:GreySmokeTrail )
  850:  Call  SetGoalToTarget   ( .Actor:Self )
  860:  Call  RunToGoal ( .Actor:Self  0` .False )
  878:  Call  EnemyTestTarget   ( .Actor:Self *Var0 ~Flags:DamageType:0 00000000 00000001 00000010 )
  89C:  Switch  *Var0 
  8A8:  	CaseOR  ==  .HitResult:Miss % 6
  8B4:  	CaseOR  ==  .HitResult:Lucky % 5
  8C0:  		Set   *VarA  *Var0 
  8D0:  		Thread
  8D8:  			Call  $Function_80218F40_03 ( )
  8E4:  			Call  RemoveActorDecoration ( .Actor:Self 00000000 00000000 )
  8FC:  		EndThread
  904:  		Wait  4`
  910:  		Call  SetAnimation  ( .Actor:Self 00000001 000A0009 )
  928:  		Call  SetActorRotationOffset    ( .Actor:Self FFFFFFF8 00000000 00000000 )
  944:  		Set   *Var0  00000000 
  954:  		Loop  00000002 
  960:  			Add   *Var0  0000001E 
  970:  			Call  SetActorRotation  ( .Actor:Self 00000000 00000000 *Var0 )
  98C:  			Wait  1`
  998:  		EndLoop
  9A0:  		Wait  5`
  9AC:  		Call  GetActorPos   ( .Actor:Self *Var4 *Var5 *Var6 )
  9C8:  		Call  PlayEffect    ( ~FX:SmokeImpact:Small *Var4 *Var5 *Var6 00000010 00000004 00000000 0000000A 00000000 00000000 00000000 00000000 00000000 )
  A0C:  		Loop  00000005 
  A18:  			Add   *Var0  FFFFFFF4 
  A28:  			Call  SetActorRotation  ( .Actor:Self 00000000 00000000 *Var0 )
  A44:  			Wait  1`
  A50:  		EndLoop
  A58:  		Call  SetActorRotationOffset    ( .Actor:Self 00000000 00000000 00000000 )
  A74:  		Call  SetActorRotation  ( .Actor:Self 00000000 00000000 00000002 )
  A90:  		Wait  2`
  A9C:  		Call  SetActorRotation  ( .Actor:Self 00000000 00000000 FFFFFFFE )
  AB8:  		Wait  2`
  AC4:  		Call  SetActorRotation  ( .Actor:Self 00000000 00000000 00000000 )
  AE0:  		If  *VarA  ==  .HitResult:Lucky % 5
  AF0:  			Call  EnemyTestTarget   ( .Actor:Self *Var0 ~Flags:DamageType:TriggerLucky 00000000 00000000 00000000 )
  B14:  		EndIf
  B1C:  		Wait  10`
  B28:  		Call  SetAnimation      ( .Actor:Self 00000001 000A000F )
  B40:  		Wait  10`
  B4C:  		Call  UseBattleCamPreset    ( 00000002 )
  B5C:  		Call  YieldTurn ( )
  B68:  		Call  ResetAllActorSounds   ( .Actor:Self )
  B78:  		Call  SetAnimation      ( .Actor:Self 00000001 000A0006 )
  B90:  		Call  SetGoalToHome     ( .Actor:Self )
  BA0:  		Call  SetActorSpeed     ( .Actor:Self *Fixed[4.5] )
  BB4:  		Call  RunToGoal ( .Actor:Self  0` .False )
  BCC:  		Call  EnableIdleScript  ( .Actor:Self 00000001 )
  BE0:  		Call  UseIdleAnimation  ( .Actor:Self .True )
  BF4:  		Return
  BFC:  	EndCaseGroup
  C04:  EndSwitch
  C0C:  Call  RemoveActorDecoration ( .Actor:Self 00000000 00000000 )
  C24:  Call  GetActorVar   ( .Actor:Self 00000001 *Var9 )
  C3C:  Switch  *Var9 
  C48:  	Case  ==  00000000 
  C54:  		Wait  2`
  C60:  		Call  EnemyDamageTarget ( .Actor:Self *Var0 ~Flags:DamageType:0 0000FFFF 00000000 00000002 00000020 )
  C88:  	Case  ==  00000001 
  C94:  		Wait  2`
  CA0:  		Call  EnemyDamageTarget ( .Actor:Self *Var0 ~Flags:DamageType:0 0000FFFF 00000000 00000003 00000020 )
  CC8:  	Case  ==  00000002 
  CD4:  		Wait  2`
  CE0:  		Call  EnemyDamageTarget ( .Actor:Self *Var0 ~Flags:DamageType:0 0000FFFF 00000000 00000005 00000020 )
  D08:  EndSwitch
  D10:  Switch  *Var0 
  D1C:  	CaseOR  ==  .HitResult:Hit % 0
  D28:  	CaseOR  ==  .HitResult:QuakeImmune % 2
  D34:  		Call  UseBattleCamPreset    ( 00000002 )
  D44:  		Call  MoveBattleCamOver     (  8` )
  D54:  		Call  GetActorPos   ( .Actor:Self *Var0 *Var1 *Var2 )
  D70:  		Add   *Var0  0000003C 
  D80:  		Set   *Var1  00000000 
  D90:  		Call  SetActorJumpGravity   ( .Actor:Self *Fixed[1.4] )
  DA4:  		Call  SetGoalPos    ( .Actor:Self *Var0 *Var1 *Var2 )
  DC0:  		Call  JumpToGoal    ( .Actor:Self  20` .False .True .False )
  DE0:  		Add   *Var0  0000001E 
  DF0:  		Call  SetGoalPos    ( .Actor:Self *Var0 *Var1 *Var2 )
  E0C:  		Call  JumpToGoal    ( .Actor:Self  8` .False .True .False )
  E2C:  		Add   *Var0  00000014 
  E3C:  		Call  SetGoalPos    ( .Actor:Self *Var0 *Var1 *Var2 )
  E58:  		Call  JumpToGoal    ( .Actor:Self  6` .False .True .False )
  E78:  		Add   *Var0  0000000A 
  E88:  		Call  SetGoalPos    ( .Actor:Self *Var0 *Var1 *Var2 )
  EA4:  		Call  JumpToGoal    ( .Actor:Self  4` .False .True .False )
  EC4:  		Call  SetAnimation  ( .Actor:Self 00000001 000A000F )
  EDC:  		Wait  15`
  EE8:  		Call  YieldTurn ( )
  EF4:  		Call  ResetAllActorSounds   ( .Actor:Self )
  F04:  		Call  SetAnimation  ( .Actor:Self 00000001 000A0006 )
  F1C:  		Call  SetGoalToHome ( .Actor:Self )
  F2C:  		Call  SetActorSpeed ( .Actor:Self *Fixed[4.5] )
  F40:  		Call  RunToGoal     ( .Actor:Self  0` .False )
  F58:  	EndCaseGroup
  F60:  EndSwitch
  F68:  Call  EnableIdleScript  ( .Actor:Self 00000001 )
  F7C:  Call  UseIdleAnimation  ( .Actor:Self .True )
  F90:  Return
  F98:  End
}

#new:Script $Script_NextTurn_802221A0_03 {
    0:  Call  GetBattlePhase    ( *Var0 )
   10:  Switch  *Var0 
   1C:  	Case  ==  0000000C 
   28:  		Call  GetActorVar   ( .Actor:Self 00000002 *Var0 )
   40:  		If  *Var0  >  00000000 
   50:  			Sub   *Var0  00000001 
   60:  			Call  SetActorVar   ( .Actor:Self 00000002 *Var0 )
   78:  			BreakCase
   80:  		EndIf
   88:  		SetConst  *Var0  00000001 
   98:  		SetConst  *Var1  000A0011 
   A8:  		ExecWait  $Script_8021E118_03 
   B4:  		Return
   BC:  EndSwitch
   C4:  Return
   CC:  End
}

#new:SpecialFormation $SpecialFormation_80222274_03 {
$LeeKooper_03 $Vector3D_8021E940_03 00000000 00000000 00000000 00000000 00000000 
}

#new:IdleAnimations $IdleAnimations_80222290_03 {
.Status:Normal    000B0004
.Status:Stone     000B0000
.Status:Sleep     000B0000
.Status:Poison    000B0004
.Status:Stop      000B0000
.Status:Static    000B0004
.Status:Paralyze  000B0000
.Status:Dizzy     000B001E
.Status:Fear      000B001E
.Status:End
}

#new:DefenseTable $DefenseTable_802222DC_03 {
.Element:Normal 00000000
.Element:End
}

#new:StatusTable $StatusTable_802222E8_03 {
.Status:Normal      0`
.Status:Default     0`
.Status:Sleep      60`
.Status:Poison      0`
.Status:Frozen      0`
.Status:Dizzy      75`
.Status:Fear        0`
.Status:Static      0`
.Status:Paralyze   75`
.Status:Shrink     80`
.Status:Stop       90`
.Status:DefaultTurnMod    0`
.Status:SleepTurnMod     -1`
.Status:PoisonTurnMod     0`
.Status:FrozenTurnMod     0`
.Status:DizzyTurnMod     -1`
.Status:FearTurnMod       0`
.Status:StaticTurnMod     0`
.Status:ParalyzeTurnMod   0`
.Status:ShrinkTurnMod     0`
.Status:StopTurnMod      -1`
.Status:End
}

#new:PartsTable $PartsTable_80222394_03 {
00800000 01000000 001600FF $IdleAnimations_80222290_03 $DefenseTable_802222DC_03 00000000 00000000 FEF90000 00000000 
}

#new:Actor $LeeBombette_03 {
% stats
[Index]        81b 
[Level]         0`b 
[MaxHP]        20`b 
[Coins]         0`b 
[Flags]       00000000 
[StatusTable] $StatusTable_802222E8_03 
% ai
[PartsCount]    1`s 
[PartsTable]  $PartsTable_80222394_03 
[Script]      $Script_Init_LeeBombette_03 
% move effectiveness
[Escape]      100`b 
[Item]          0`b 
[AirLift]       0`b 
[Hurricane]     0`b % Bow's "Spook" as well
[UpAndAway]     0`b 
[PowerBounce]  90`b 
[SpinSmash]     0`b % weight (0-4)
% ui positions
[Size]         30`b  28`b % width height
[HealthBar]     0`b   0`b % dx dy
[StatusTurn]  -10`b  20`b % dx dy
[StatusIcon]   10`b  20`b % dx dy
}

#new:Script $Script_Init_LeeBombette_03 {
    0:  Call  BindTakeTurn  ( .Actor:Self $Script_TakeTurn_802229C4_03 )
   14:  Call  BindIdle      ( .Actor:Self $Script_Idle_80222458_03 )
   28:  Call  BindHandleEvent   ( .Actor:Self $Script_HandleEvent_80222468_03 )
   3C:  Call  BindNextTurn  ( .Actor:Self $Script_NextTurn_80223298_03 )
   50:  Call  SetActorVar   ( .Actor:Self 00000002 00000001 )
   68:  Return
   70:  End
}

#new:Script $Script_Idle_80222458_03 {
    0:  Return
    8:  End
}

#new:Script $Script_HandleEvent_80222468_03 {
    0:  Call  UseIdleAnimation  ( .Actor:Self .False )
   14:  Call  EnableIdleScript  ( .Actor:Self 00000000 )
   28:  Call  GetLastEvent      ( .Actor:Self *Var0 )
   3C:  Switch  *Var0 
   48:  	CaseOR  ==  .Event:HitCombo % 9
   54:  	CaseOR  ==  .Event:Hit % A
   60:  		SetConst  *Var0  00000001 
   70:  		SetConst  *Var1  000B0012 
   80:  		ExecWait  DoNormalHit 
   8C:  	EndCaseGroup
   94:  	Case  ==  .Event:BurnHit % E
   A0:  		SetConst  *Var0  00000001 
   B0:  		SetConst  *Var1  000B0013 
   C0:  		SetConst  *Var2  000B0014 
   D0:  		ExecWait  DoBurnHit 
   DC:  	Case  ==  .Event:BurnDeath % 24
   E8:  		SetConst  *Var0  00000001 
   F8:  		SetConst  *Var1  000B0013 
  108:  		SetConst  *Var2  000B0014 
  118:  		ExecWait  DoBurnHit 
  124:  		ExecWait  $Script_8021E0E0_03 
  130:  		SetConst  *Var0  00000001 
  140:  		SetConst  *Var1  000B0014 
  150:  		ExecWait  DoDeath 
  15C:  		Return
  164:  	Case  ==  .Event:SpinSmashHit % B
  170:  		SetConst  *Var0  00000001 
  180:  		SetConst  *Var1  000B0012 
  190:  		ExecWait  DoSpinSmashHit 
  19C:  	Case  ==  .Event:SpinSmashDeath % 21
  1A8:  		ExecWait  $Script_8021E0E0_03 
  1B4:  		SetConst  *Var0  00000001 
  1C4:  		SetConst  *Var1  000B0012 
  1D4:  		ExecWait  DoSpinSmashHit 
  1E0:  		SetConst  *Var0  00000001 
  1F0:  		SetConst  *Var1  000B0012 
  200:  		ExecWait  DoDeath 
  20C:  		Return
  214:  	Case  ==  .Event:ShockHit % 2F
  220:  		SetConst  *Var0  00000001 
  230:  		SetConst  *Var1  000B0012 
  240:  		Set   *Var2  0000000F 
  250:  		ExecWait  $Script_8021E5DC_03 
  25C:  		Call  SetAnimation  ( .Actor:Self 00000001 000B0008 )
  274:  		Call  SetGoalToHome ( .Actor:Self )
  284:  		Call  SetActorSpeed ( .Actor:Self *Fixed[5.0] )
  298:  		Call  RunToGoal     ( .Actor:Self  0` .False )
  2B0:  	Case  ==  .Event:ShockDeath % 26
  2BC:  		ExecWait  $Script_8021E0E0_03 
  2C8:  		SetConst  *Var0  00000001 
  2D8:  		SetConst  *Var1  000B0012 
  2E8:  		Set   *Var2  0000000F 
  2F8:  		ExecWait  $Script_8021E5DC_03 
  304:  		SetConst  *Var0  00000001 
  314:  		SetConst  *Var1  000B0014 
  324:  		ExecWait  DoDeath 
  330:  		Return
  338:  	CaseOR  ==  00000017 % 17
  344:  	CaseOR  ==  .Event:Immune % 19
  350:  	CaseOR  ==  .Event:AirLiftFailed % 1F
  35C:  		SetConst  *Var0  00000001 
  36C:  		SetConst  *Var1  000B0004 
  37C:  		ExecWait  DoImmune 
  388:  	EndCaseGroup
  390:  	Case  ==  .Event:Death % 20
  39C:  		ExecWait  $Script_8021E0E0_03 
  3A8:  		SetConst  *Var0  00000001 
  3B8:  		SetConst  *Var1  000B0012 
  3C8:  		ExecWait  DoNormalHit 
  3D4:  		Wait  10`
  3E0:  		SetConst  *Var0  00000001 
  3F0:  		SetConst  *Var1  000B0012 
  400:  		ExecWait  DoDeath 
  40C:  		Return
  414:  	Case  ==  .Event:RecoverStatus % 31
  420:  		SetConst  *Var0  00000001 
  430:  		SetConst  *Var1  000B0004 
  440:  		ExecWait  DoRecover 
  44C:  	Case  ==  .Event:ScareAway % 39
  458:  		SetConst  *Var0  00000001 
  468:  		SetConst  *Var1  000B0008 
  478:  		SetConst  *Var2  000B0012 
  488:  		ExecWait  DoScareAway 
  494:  		Return
  49C:  	Case  ==  .Event:BeginAirLift % 3A
  4A8:  		SetConst  *Var0  00000001 
  4B8:  		SetConst  *Var1  000B0008 
  4C8:  		ExecWait  DoAirLift 
  4D4:  	Case  ==  .Event:BlowAway % 16
  4E0:  		SetConst  *Var0  00000001 
  4F0:  		SetConst  *Var1  000B0012 
  500:  		ExecWait  DoBlowAway 
  50C:  		Return
  514:  	Default
  51C:  EndSwitch
  524:  Call  EnableIdleScript  ( .Actor:Self 00000001 )
  538:  Call  UseIdleAnimation  ( .Actor:Self .True )
  54C:  Return
  554:  End
}

#new:Script $Script_TakeTurn_802229C4_03 {
    0:  Call  UseIdleAnimation  ( .Actor:Self .False )
   14:  Call  EnableIdleScript  ( .Actor:Self 00000000 )
   28:  Wait  10`
   34:  Call  UseBattleCamPreset    ( 0000003F )
   44:  Call  BattleCamTargetActor  ( .Actor:Self )
   54:  Call  SetTargetActor    ( .Actor:Self .Actor:Player )
   68:  Call  SetGoalToTarget   ( .Actor:Self )
   78:  Call  AddGoalPos        ( .Actor:Self  40`  0`  0` )
   94:  Call  MoveBattleCamOver (  30` )
   A4:  Call  SetAnimation      ( .Actor:Self 00000001 000B0008 )
   BC:  Call  RunToGoal ( .Actor:Self  30` .False )
   D4:  Call  SetAnimation      ( .Actor:Self 00000001 000B0004 )
   EC:  Call  SetAnimation      ( .Actor:Self 00000001 000B000F )
  104:  Wait  15`
  110:  Call  SetActorSounds    ( .Actor:Self .ActorSound:Walk 00000000 00000000 )
  12C:  Call  PlaySoundAtActor  ( .Actor:Self 00002020 )
  140:  Call  EnemyTestTarget   ( .Actor:Self *Var0 ~Flags:DamageType:0 00000000 00000001 00000010 )
  164:  Switch  *Var0 
  170:  	CaseOR  ==  .HitResult:Miss % 6
  17C:  	CaseOR  ==  .HitResult:Lucky % 5
  188:  		Set   *VarA  *Var0 
  198:  		Call  SetGoalToTarget   ( .Actor:Self )
  1A8:  		Call  AddGoalPos    ( .Actor:Self  -10`  0`  0` )
  1C4:  		Call  SetAnimation  ( .Actor:Self 00000001 000B0010 )
  1DC:  		Call  RunToGoal     ( .Actor:Self  5` .False )
  1F4:  		Call  SetAnimation  ( .Actor:Self 00000001 000B0004 )
  20C:  		Thread
  214:  			Call  SetActorRotationOffset    ( .Actor:Self 00000000 0000000F 00000000 )
  230:  			Set   *Var0  00000000 
  240:  			Loop  0000000A 
  24C:  				Add   *Var0  00000048 
  25C:  				Call  SetActorRotation  ( .Actor:Self 00000000 00000000 *Var0 )
  278:  				Wait  1`
  284:  			EndLoop
  28C:  			Call  SetActorRotationOffset    ( .Actor:Self 00000000 00000000 00000000 )
  2A8:  		EndThread
  2B0:  		Call  AddGoalPos    ( .Actor:Self  -60`  0`  0` )
  2CC:  		Call  RunToGoal     ( .Actor:Self  10` .False )
  2E4:  		Call  SetAnimation  ( .Actor:Self 00000001 000B0004 )
  2FC:  		Thread
  304:  			Call  $Function_80219064_03 ( )
  310:  		EndThread
  318:  		If  *VarA  ==  .HitResult:Lucky % 5
  328:  			Call  EnemyTestTarget   ( .Actor:Self *Var0 ~Flags:DamageType:TriggerLucky 00000000 00000000 00000000 )
  34C:  		EndIf
  354:  		Wait  20`
  360:  		Call  UseBattleCamPreset    ( 00000002 )
  370:  		Call  YieldTurn ( )
  37C:  		Call  SetAnimation      ( .Actor:Self 00000001 000B0008 )
  394:  		Call  SetGoalToHome     ( .Actor:Self )
  3A4:  		Call  SetActorSpeed     ( .Actor:Self *Fixed[5.0] )
  3B8:  		Call  RunToGoal ( .Actor:Self  0` .False )
  3D0:  		Call  EnableIdleScript  ( .Actor:Self 00000001 )
  3E4:  		Call  UseIdleAnimation  ( .Actor:Self .True )
  3F8:  		Return
  400:  	EndCaseGroup
  408:  EndSwitch
  410:  Set   *VarA  *Var0 
  420:  Call  SetGoalToTarget   ( .Actor:Self )
  430:  Call  SetAnimation  ( .Actor:Self 00000001 000B0010 )
  448:  Call  RunToGoal     ( .Actor:Self  4` .False )
  460:  Call  GetActorVar   ( .Actor:Self 00000001 *Var9 )
  478:  Switch  *Var9 
  484:  	Case  ==  00000000 
  490:  		Wait  2`
  49C:  		Call  EnemyDamageTarget ( .Actor:Self *Var0 ~Flags:DamageType:0 00000000 00000000 00000002 00000020 )
  4C4:  	Case  ==  00000001 
  4D0:  		Wait  2`
  4DC:  		Call  EnemyDamageTarget ( .Actor:Self *Var0 ~Flags:DamageType:0 00000000 00000000 00000003 00000020 )
  504:  	Case  ==  00000002 
  510:  		Wait  2`
  51C:  		Call  EnemyDamageTarget ( .Actor:Self *Var0 ~Flags:DamageType:0 00000000 00000000 00000005 00000020 )
  544:  EndSwitch
  54C:  Switch  *Var0 
  558:  	CaseOR  ==  .HitResult:Hit % 0
  564:  	CaseOR  ==  .HitResult:QuakeImmune % 2
  570:  		Call  SetAnimation  ( .Actor:Self 00000001 000B0004 )
  588:  		Call  UseBattleCamPreset    ( 00000002 )
  598:  		Call  MoveBattleCamOver     (  8` )
  5A8:  		Call  SetAnimation  ( .Actor:Self 00000001 000B0011 )
  5C0:  		Call  GetGoalPos    ( .Actor:Self *Var0 *Var1 *Var2 )
  5DC:  		Add   *Var0  00000028 
  5EC:  		Set   *Var1  00000000 
  5FC:  		Call  SetActorJumpGravity   ( .Actor:Self *Fixed[1.4] )
  610:  		Call  SetGoalPos    ( .Actor:Self *Var0 *Var1 *Var2 )
  62C:  		Call  JumpToGoal    ( .Actor:Self  20` .False .True .False )
  64C:  		Call  SetAnimation  ( .Actor:Self 00000001 000B000E )
  664:  		Wait  1`
  670:  		Call  SetAnimation  ( .Actor:Self 00000001 000B0011 )
  688:  		Add   *Var0  00000028 
  698:  		Call  SetGoalPos    ( .Actor:Self *Var0 *Var1 *Var2 )
  6B4:  		Call  JumpToGoal    ( .Actor:Self  8` .False .True .False )
  6D4:  		Call  SetAnimation  ( .Actor:Self 00000001 000B000E )
  6EC:  		Wait  1`
  6F8:  		Call  SetAnimation  ( .Actor:Self 00000001 000B0011 )
  710:  		Add   *Var0  00000014 
  720:  		Call  SetGoalPos    ( .Actor:Self *Var0 *Var1 *Var2 )
  73C:  		Call  JumpToGoal    ( .Actor:Self  6` .False .True .False )
  75C:  		Call  SetAnimation  ( .Actor:Self 00000001 000B000E )
  774:  		Wait  1`
  780:  		Call  SetAnimation  ( .Actor:Self 00000001 000B0011 )
  798:  		Add   *Var0  0000000A 
  7A8:  		Call  SetGoalPos    ( .Actor:Self *Var0 *Var1 *Var2 )
  7C4:  		Call  JumpToGoal    ( .Actor:Self  4` .False .True .False )
  7E4:  		Call  SetAnimation  ( .Actor:Self 00000001 000B000E )
  7FC:  		Wait  1`
  808:  		Call  SetAnimation  ( .Actor:Self 00000001 000B0004 )
  820:  		Wait  8`
  82C:  		Call  YieldTurn ( )
  838:  		Call  SetAnimation  ( .Actor:Self 00000001 000B0008 )
  850:  		Call  SetGoalToHome ( .Actor:Self )
  860:  		Call  SetActorSpeed ( .Actor:Self *Fixed[5.0] )
  874:  		Call  RunToGoal     ( .Actor:Self  0` .False )
  88C:  	EndCaseGroup
  894:  EndSwitch
  89C:  Call  EnableIdleScript  ( .Actor:Self 00000001 )
  8B0:  Call  UseIdleAnimation  ( .Actor:Self .True )
  8C4:  Return
  8CC:  End
}

#new:Script $Script_NextTurn_80223298_03 {
    0:  Call  GetBattlePhase    ( *Var0 )
   10:  Switch  *Var0 
   1C:  	Case  ==  0000000C 
   28:  		Call  GetActorVar   ( .Actor:Self 00000002 *Var0 )
   40:  		If  *Var0  >  00000000 
   50:  			Sub   *Var0  00000001 
   60:  			Call  SetActorVar   ( .Actor:Self 00000002 *Var0 )
   78:  			BreakCase
   80:  		EndIf
   88:  		SetConst  *Var0  00000001 
   98:  		SetConst  *Var1  000B0012 
   A8:  		ExecWait  $Script_8021E118_03 
   B4:  		Return
   BC:  EndSwitch
   C4:  Return
   CC:  End
}

#new:SpecialFormation $SpecialFormation_8022336C_03 {
$LeeBombette_03 $Vector3D_8021E940_03 00000000 00000000 00000000 00000000 00000000 
}

#new:IdleAnimations $IdleAnimations_80223388_03 {
.Status:Normal    000C0001
.Status:Stone     000C0000
.Status:Sleep     000C0000
.Status:Poison    000C0001
.Status:Stop      000C0000
.Status:Static    000C0001
.Status:Paralyze  000C0000
.Status:Dizzy     000C0001
.Status:Fear      000C0001
.Status:End
}

#new:DefenseTable $DefenseTable_802233D4_03 {
.Element:Normal 00000001
.Element:End
}

#new:StatusTable $StatusTable_802233E0_03 {
.Status:Normal      0`
.Status:Default     0`
.Status:Sleep      60`
.Status:Poison      0`
.Status:Frozen      0`
.Status:Dizzy      75`
.Status:Fear        0`
.Status:Static      0`
.Status:Paralyze   75`
.Status:Shrink     80`
.Status:Stop       90`
.Status:DefaultTurnMod    0`
.Status:SleepTurnMod     -1`
.Status:PoisonTurnMod     0`
.Status:FrozenTurnMod     0`
.Status:DizzyTurnMod     -1`
.Status:FearTurnMod       0`
.Status:StaticTurnMod     0`
.Status:ParalyzeTurnMod   0`
.Status:ShrinkTurnMod     0`
.Status:StopTurnMod      -1`
.Status:End
}

#new:PartsTable $PartsTable_8022348C_03 {
00020000 01000000 FD2000FF $IdleAnimations_80223388_03 $DefenseTable_802233D4_03 00000000 00000000 00F00000 00000000 
00800001 02003200 FDEE00FF 00000000 $DefenseTable_802233D4_03 00000000 00000000 00F00000 00000000 
}

#new:Actor $LeeParakarry_03 {
% stats
[Index]        82b 
[Level]         0`b 
[MaxHP]        20`b 
[Coins]         0`b 
[Flags]       00000200 
[StatusTable] $StatusTable_802233E0_03 
% ai
[PartsCount]    2`s 
[PartsTable]  $PartsTable_8022348C_03 
[Script]      $Script_Init_Parakarry_03 
% move effectiveness
[Escape]      100`b 
[Item]          0`b 
[AirLift]       0`b 
[Hurricane]     0`b % Bow's "Spook" as well
[UpAndAway]     0`b 
[PowerBounce]  90`b 
[SpinSmash]     0`b % weight (0-4)
% ui positions
[Size]         38`b  38`b % width height
[HealthBar]     0`b   0`b % dx dy
[StatusTurn]  -10`b  20`b % dx dy
[StatusIcon]   10`b  20`b % dx dy
}

#new:Script $Script_Init_Parakarry_03 {
    0:  Call  BindTakeTurn  ( .Actor:Self $Script_TakeTurn_80224304_03 )
   14:  Call  BindIdle      ( .Actor:Self $Script_Idle_80223574_03 )
   28:  Call  BindHandleEvent   ( .Actor:Self $Script_HandleEvent_80223584_03 )
   3C:  Call  BindNextTurn  ( .Actor:Self $Script_NextTurn_80224320_03 )
   50:  Call  SetActorVar   ( .Actor:Self 00000002 00000001 )
   68:  Return
   70:  End
}

#new:Script $Script_Idle_80223574_03 {
    0:  Return
    8:  End
}

#new:Script $Script_HandleEvent_80223584_03 {
    0:  Call  UseIdleAnimation  ( .Actor:Self .False )
   14:  Call  EnableIdleScript  ( .Actor:Self 00000000 )
   28:  Call  GetLastEvent      ( .Actor:Self *Var0 )
   3C:  Switch  *Var0 
   48:  	CaseOR  ==  .Event:HitCombo % 9
   54:  	CaseOR  ==  .Event:Hit % A
   60:  		SetConst  *Var0  00000001 
   70:  		SetConst  *Var1  000C000E 
   80:  		ExecWait  DoNormalHit 
   8C:  	EndCaseGroup
   94:  	Case  ==  .Event:BurnHit % E
   A0:  		SetConst  *Var0  00000001 
   B0:  		SetConst  *Var1  000C000F 
   C0:  		SetConst  *Var2  000C0010 
   D0:  		ExecWait  DoBurnHit 
   DC:  	Case  ==  .Event:BurnDeath % 24
   E8:  		SetConst  *Var0  00000001 
   F8:  		SetConst  *Var1  000C000F 
  108:  		SetConst  *Var2  000C0010 
  118:  		ExecWait  DoBurnHit 
  124:  		ExecWait  $Script_8021E0E0_03 
  130:  		Wait  10`
  13C:  		SetConst  *Var0  00000001 
  14C:  		SetConst  *Var1  000C0010 
  15C:  		ExecWait  DoDeath 
  168:  		Return
  170:  	Case  ==  .Event:SpinSmashHit % B
  17C:  		SetConst  *Var0  00000001 
  18C:  		SetConst  *Var1  000C000E 
  19C:  		ExecWait  DoSpinSmashHit 
  1A8:  	Case  ==  .Event:SpinSmashDeath % 21
  1B4:  		ExecWait  $Script_8021E0E0_03 
  1C0:  		SetConst  *Var0  00000001 
  1D0:  		SetConst  *Var1  000C000E 
  1E0:  		ExecWait  DoSpinSmashHit 
  1EC:  		SetConst  *Var0  00000001 
  1FC:  		SetConst  *Var1  000C000E 
  20C:  		ExecWait  DoDeath 
  218:  		Return
  220:  	Case  ==  .Event:ShockHit % 2F
  22C:  		SetConst  *Var0  00000001 
  23C:  		SetConst  *Var1  000C000D 
  24C:  		Set   *Var2  00000016 
  25C:  		ExecWait  $Script_8021E5DC_03 
  268:  		Call  SetGoalToHome ( .Actor:Self )
  278:  		Call  SetActorSpeed ( .Actor:Self *Fixed[6.0] )
  28C:  		Call  SetAnimation  ( .Actor:Self 00000001 000C0003 )
  2A4:  		Call  FlyToGoal     ( .Actor:Self  0`  -5` .Easing:Linear )
  2C0:  	Case  ==  .Event:ShockDeath % 26
  2CC:  		ExecWait  $Script_8021E0E0_03 
  2D8:  		SetConst  *Var0  00000001 
  2E8:  		SetConst  *Var1  000C000D 
  2F8:  		Set   *Var2  00000016 
  308:  		ExecWait  $Script_8021E5DC_03 
  314:  		SetConst  *Var0  00000001 
  324:  		SetConst  *Var1  000C000E 
  334:  		ExecWait  DoDeath 
  340:  		Return
  348:  	CaseOR  ==  00000017 % 17
  354:  	CaseOR  ==  .Event:Immune % 19
  360:  	CaseOR  ==  .Event:AirLiftFailed % 1F
  36C:  		SetConst  *Var0  00000001 
  37C:  		SetConst  *Var1  000C0001 
  38C:  		ExecWait  DoImmune 
  398:  	EndCaseGroup
  3A0:  	Case  ==  .Event:Death % 20
  3AC:  		ExecWait  $Script_8021E0E0_03 
  3B8:  		SetConst  *Var0  00000001 
  3C8:  		SetConst  *Var1  000C000E 
  3D8:  		ExecWait  DoNormalHit 
  3E4:  		Wait  10`
  3F0:  		SetConst  *Var0  00000001 
  400:  		SetConst  *Var1  000C000E 
  410:  		ExecWait  DoDeath 
  41C:  		Return
  424:  	Case  ==  .Event:RecoverStatus % 31
  430:  		SetConst  *Var0  00000001 
  440:  		SetConst  *Var1  000C0001 
  450:  		ExecWait  DoRecover 
  45C:  	Case  ==  .Event:ScareAway % 39
  468:  		SetConst  *Var0  00000001 
  478:  		SetConst  *Var1  000C0003 
  488:  		SetConst  *Var2  000C000D 
  498:  		ExecWait  DoScareAway 
  4A4:  		Return
  4AC:  	Case  ==  .Event:BeginAirLift % 3A
  4B8:  		SetConst  *Var0  00000001 
  4C8:  		SetConst  *Var1  000C0003 
  4D8:  		ExecWait  DoAirLift 
  4E4:  	Case  ==  .Event:BlowAway % 16
  4F0:  		Call  GetStatusFlags    ( .Actor:Self *Var0 )
  504:  		If  *Var0  !&  ~Flags:StatusFlags:Sleep|Frozen|Fear|Paralyze|Dizzy|Stone|Stop % 35D000
  514:  			If  *Var0  &  ~Flags:StatusFlags:Shrink % 80000
  524:  				Call  SetActorDispOffset    ( .Actor:Self 00000000 00000001 00000000 )
  540:  			Else
  548:  				Call  SetActorDispOffset    ( .Actor:Self 00000000 00000003 00000000 )
  564:  			EndIf
  56C:  		EndIf
  574:  		SetConst  *Var0  00000001 
  584:  		SetConst  *Var1  000C000E 
  594:  		ExecWait  DoBlowAway 
  5A0:  		Return
  5A8:  	Default
  5B0:  EndSwitch
  5B8:  Call  EnableIdleScript  ( .Actor:Self 00000001 )
  5CC:  Call  UseIdleAnimation  ( .Actor:Self .True )
  5E0:  Return
  5E8:  End
}

#new:Script $Script_80223B74_03 {
    0:  Call  UseIdleAnimation  ( .Actor:Self .False )
   14:  Call  EnableIdleScript  ( .Actor:Self 00000000 )
   28:  Call  SetTargetActor    ( .Actor:Self .Actor:Player )
   3C:  Call  UseBattleCamPreset    ( 0000003F )
   4C:  Call  BattleCamTargetActor  ( .Actor:Self )
   5C:  Call  8024ECF8      ( FFFFFFFF 00000001 00000000 )
   74:  Call  SetAnimation  ( .Actor:Self 00000001 000C0003 )
   8C:  Call  SetGoalToTarget   ( .Actor:Self )
   9C:  Call  AddGoalPos    ( .Actor:Self  20`  0`  0` )
   B8:  Call  SetActorSpeed ( .Actor:Self *Fixed[4.0] )
   CC:  Call  FlyToGoal     ( .Actor:Self  0`  -10` .Easing:CosInOut )
   E8:  Call  SetAnimation  ( .Actor:Self 00000001 000C0000 )
  100:  Wait  3`
  10C:  Call  8024E664      ( 00000001 )
  11C:  Call  SetActorSounds    ( .Actor:Self .ActorSound:Fly 00000000 00000000 )
  138:  Call  PlaySoundAtActor  ( .Actor:Self 00002004 )
  14C:  Call  SetAnimation  ( .Actor:Self 00000001 000C0014 )
  164:  Call  AddGoalPos    ( .Actor:Self  0`  10`  0` )
  180:  Call  FlyToGoal     ( .Actor:Self  5`  0` .Easing:Linear )
  19C:  Wait  2`
  1A8:  Thread
  1B0:  	Wait  3`
  1BC:  	Call  SetAnimation  ( .Actor:Self 00000001 000C0004 )
  1D4:  EndThread
  1DC:  Call  AddGoalPos        ( .Actor:Self  40`  15`  0` )
  1F8:  Call  FlyToGoal ( .Actor:Self  20`  -20` .Easing:QuarticOut )
  214:  Call  PlaySoundAtActor  ( .Actor:Self 00002005 )
  228:  Call  EnableActorBlur   ( .Actor:Self 00000001 )
  23C:  Call  SetGoalToTarget   ( .Actor:Self )
  24C:  Call  SetAnimation      ( .Actor:Self 00000001 000C0005 )
  264:  Call  FlyToGoal ( .Actor:Self  5`  0` .Easing:Linear )
  280:  Call  EnemyTestTarget   ( .Actor:Self *Var0 ~Flags:DamageType:0 00000000 00000001 00000010 )
  2A4:  Switch  *Var0 
  2B0:  	CaseOR  ==  .HitResult:Miss % 6
  2BC:  	CaseOR  ==  .HitResult:Lucky % 5
  2C8:  		Set   *VarA  *Var0 
  2D8:  		Thread
  2E0:  			Wait  5`
  2EC:  			Call  SetAnimation  ( .Actor:Self 00000001 000C0001 )
  304:  		EndThread
  30C:  		Call  SetGoalToTarget   ( .Actor:Self )
  31C:  		Call  AddGoalPos        ( .Actor:Self  -40`  10`  0` )
  338:  		Call  FlyToGoal ( .Actor:Self  10`  -20` .Easing:QuadraticOut )
  354:  		If  *VarA  ==  .HitResult:Lucky % 5
  364:  			Call  EnemyTestTarget   ( .Actor:Self *Var0 ~Flags:DamageType:TriggerLucky 00000000 00000000 00000000 )
  388:  		EndIf
  390:  		Wait  20`
  39C:  		Call  EnableActorBlur   ( .Actor:Self 00000000 )
  3B0:  		Wait  15`
  3BC:  		Call  UseBattleCamPreset    ( 00000002 )
  3CC:  		Call  YieldTurn ( )
  3D8:  		Call  SetGoalToHome     ( .Actor:Self )
  3E8:  		Call  SetActorSpeed     ( .Actor:Self *Fixed[6.0] )
  3FC:  		Call  SetAnimation      ( .Actor:Self 00000001 000C0003 )
  414:  		Call  FlyToGoal ( .Actor:Self  0`  -5` .Easing:Linear )
  430:  		Call  EnableIdleScript  ( .Actor:Self 00000001 )
  444:  		Call  UseIdleAnimation  ( .Actor:Self .True )
  458:  		Return
  460:  	EndCaseGroup
  468:  EndSwitch
  470:  Call  EnableActorBlur   ( .Actor:Self 00000000 )
  484:  Call  SetAnimation      ( .Actor:Self 00000001 000C0006 )
  49C:  Wait  1`
  4A8:  Call  GetActorVar       ( .Actor:Self 00000001 *Var9 )
  4C0:  Switch  *Var9 
  4CC:  	Case  ==  00000000 
  4D8:  		Wait  2`
  4E4:  		Call  EnemyDamageTarget ( .Actor:Self *Var0 ~Flags:DamageType:0 00000000 00000000 00000002 00000020 )
  50C:  	Case  ==  00000001 
  518:  		Wait  2`
  524:  		Call  EnemyDamageTarget ( .Actor:Self *Var0 ~Flags:DamageType:0 00000000 00000000 00000003 00000020 )
  54C:  	Case  ==  00000002 
  558:  		Wait  2`
  564:  		Call  EnemyDamageTarget ( .Actor:Self *Var0 ~Flags:DamageType:0 00000000 00000000 00000005 00000020 )
  58C:  EndSwitch
  594:  Call  PlaySound ( 00000000 )
  5A4:  Switch  *Var0 
  5B0:  	CaseOR  ==  .HitResult:Hit % 0
  5BC:  	CaseOR  ==  .HitResult:QuakeImmune % 2
  5C8:  		Call  UseBattleCamPreset    ( 00000002 )
  5D8:  		Call  SetAnimation  ( .Actor:Self 00000001 000C0005 )
  5F0:  		Call  SetActorJumpGravity   ( .Actor:Self *Fixed[1.4] )
  604:  		Call  AddGoalPos    ( .Actor:Self  50`  0`  0` )
  620:  		Call  JumpToGoal    ( .Actor:Self  15` .False .False .False )
  640:  		Call  SetAnimation  ( .Actor:Self 00000001 000C0000 )
  658:  		Thread
  660:  			Wait  4`
  66C:  			Call  SetAnimation  ( .Actor:Self 00000001 000C0003 )
  684:  		EndThread
  68C:  		Call  AddGoalPos    ( .Actor:Self  30`  0`  0` )
  6A8:  		Call  JumpWithBounce    ( .Actor:Self  10` *Fixed[4.0] )
  6C0:  		Call  SetAnimation  ( .Actor:Self 00000001 000C0001 )
  6D8:  		Wait  6`
  6E4:  		Call  YieldTurn ( )
  6F0:  		Call  SetGoalToHome ( .Actor:Self )
  700:  		Call  SetActorSpeed ( .Actor:Self *Fixed[6.0] )
  714:  		Call  SetAnimation  ( .Actor:Self 00000001 000C0003 )
  72C:  		Call  FlyToGoal     ( .Actor:Self  0`  -5` .Easing:Linear )
  748:  	EndCaseGroup
  750:  EndSwitch
  758:  Call  EnableIdleScript  ( .Actor:Self 00000001 )
  76C:  Call  UseIdleAnimation  ( .Actor:Self .True )
  780:  Return
  788:  End
}

#new:Script $Script_TakeTurn_80224304_03 {
    0:  ExecWait  $Script_80223B74_03 
    C:  Return
   14:  End
}

#new:Script $Script_NextTurn_80224320_03 {
    0:  Call  GetBattlePhase    ( *Var0 )
   10:  Switch  *Var0 
   1C:  	Case  ==  0000000C 
   28:  		Call  GetActorVar   ( .Actor:Self 00000002 *Var0 )
   40:  		If  *Var0  >  00000000 
   50:  			Sub   *Var0  00000001 
   60:  			Call  SetActorVar   ( .Actor:Self 00000002 *Var0 )
   78:  			BreakCase
   80:  		EndIf
   88:  		SetConst  *Var0  00000001 
   98:  		SetConst  *Var1  000C000D 
   A8:  		ExecWait  $Script_8021E118_03 
   B4:  		Return
   BC:  EndSwitch
   C4:  Return
   CC:  End
}

#new:SpecialFormation $SpecialFormation_802243F4_03 {
$LeeParakarry_03 $Vector3D_8021E940_03 00000000 00000000 00000000 00000000 00000000 
}

#new:IdleAnimations $IdleAnimations_80224410_03 {
.Status:Normal    000D0001
.Status:Stone     000D0000
.Status:Sleep     000D0000
.Status:Poison    000D0001
.Status:Stop      000D0000
.Status:Static    000D0001
.Status:Paralyze  000D0000
.Status:Dizzy     000D001A
.Status:Fear      000D001A
.Status:End
}

#new:DefenseTable $DefenseTable_8022445C_03 {
.Element:Normal 00000000
.Element:End
}

#new:StatusTable $StatusTable_80224468_03 {
.Status:Normal      0`
.Status:Default     0`
.Status:Sleep      60`
.Status:Poison      0`
.Status:Frozen      0`
.Status:Dizzy      75`
.Status:Fear        0`
.Status:Static      0`
.Status:Paralyze   75`
.Status:Shrink     80`
.Status:Stop       90`
.Status:DefaultTurnMod    0`
.Status:SleepTurnMod     -1`
.Status:PoisonTurnMod     0`
.Status:FrozenTurnMod     0`
.Status:DizzyTurnMod     -1`
.Status:FearTurnMod       0`
.Status:StaticTurnMod     0`
.Status:ParalyzeTurnMod   0`
.Status:ShrinkTurnMod     0`
.Status:StopTurnMod      -1`
.Status:End
}

#new:PartsTable $PartsTable_80224514_03 {
00020000 01000000 001800FF $IdleAnimations_80224410_03 $DefenseTable_8022445C_03 00000000 00000000 00F60000 00000000 
00800001 02003200 00E600FF 00000000 $DefenseTable_8022445C_03 00000000 00000000 00F60000 00000000 
}

#new:Actor $LeeBow_03 {
% stats
[Index]        83b 
[Level]         0`b 
[MaxHP]        20`b 
[Coins]         0`b 
[Flags]       00000200 
[StatusTable] $StatusTable_80224468_03 
% ai
[PartsCount]    2`s 
[PartsTable]  $PartsTable_80224514_03 
[Script]      $Script_Init_Bow_03 
% move effectiveness
[Escape]      100`b 
[Item]          0`b 
[AirLift]       0`b 
[Hurricane]     0`b % Bow's "Spook" as well
[UpAndAway]     0`b 
[PowerBounce]  90`b 
[SpinSmash]     0`b % weight (0-4)
% ui positions
[Size]         36`b  29`b % width height
[HealthBar]     0`b   0`b % dx dy
[StatusTurn]  -10`b  20`b % dx dy
[StatusIcon]   10`b  20`b % dx dy
}

#new:Script $Script_Init_Bow_03 {
    0:  Call  BindTakeTurn  ( .Actor:Self $Script_TakeTurn_80224CA0_03 )
   14:  Call  BindIdle      ( .Actor:Self $Script_Idle_802245FC_03 )
   28:  Call  BindHandleEvent   ( .Actor:Self $Script_HandleEvent_8022460C_03 )
   3C:  Call  BindNextTurn  ( .Actor:Self $Script_NextTurn_80225884_03 )
   50:  Call  SetActorVar   ( .Actor:Self 00000002 00000001 )
   68:  Return
   70:  End
}

#new:Script $Script_Idle_802245FC_03 {
    0:  Return
    8:  End
}

#new:Script $Script_HandleEvent_8022460C_03 {
    0:  Call  UseIdleAnimation  ( .Actor:Self .False )
   14:  Call  EnableIdleScript  ( .Actor:Self 00000000 )
   28:  Call  GetLastEvent      ( .Actor:Self *Var0 )
   3C:  Switch  *Var0 
   48:  	CaseOR  ==  .Event:HitCombo % 9
   54:  	CaseOR  ==  .Event:Hit % A
   60:  		SetConst  *Var0  00000001 
   70:  		SetConst  *Var1  000D0015 
   80:  		ExecWait  DoNormalHit 
   8C:  	EndCaseGroup
   94:  	Case  ==  .Event:BurnHit % E
   A0:  		SetConst  *Var0  00000001 
   B0:  		SetConst  *Var1  000D0018 
   C0:  		SetConst  *Var2  000D0019 
   D0:  		ExecWait  DoBurnHit 
   DC:  	Case  ==  .Event:BurnDeath % 24
   E8:  		SetConst  *Var0  00000001 
   F8:  		SetConst  *Var1  000D0018 
  108:  		SetConst  *Var2  000D0019 
  118:  		ExecWait  DoBurnHit 
  124:  		ExecWait  $Script_8021E0E0_03 
  130:  		Wait  10`
  13C:  		SetConst  *Var0  00000001 
  14C:  		SetConst  *Var1  000D0019 
  15C:  		ExecWait  DoDeath 
  168:  		Return
  170:  	Case  ==  .Event:SpinSmashHit % B
  17C:  		SetConst  *Var0  00000001 
  18C:  		SetConst  *Var1  000D0015 
  19C:  		ExecWait  DoSpinSmashHit 
  1A8:  	Case  ==  .Event:SpinSmashDeath % 21
  1B4:  		ExecWait  $Script_8021E0E0_03 
  1C0:  		SetConst  *Var0  00000001 
  1D0:  		SetConst  *Var1  000D0015 
  1E0:  		ExecWait  DoSpinSmashHit 
  1EC:  		SetConst  *Var0  00000001 
  1FC:  		SetConst  *Var1  000D0015 
  20C:  		ExecWait  DoDeath 
  218:  		Return
  220:  	Case  ==  .Event:ShockHit % 2F
  22C:  		Call  UseBattleCamPreset    ( 00000002 )
  23C:  		SetConst  *Var0  00000001 
  24C:  		SetConst  *Var1  000D0015 
  25C:  		Set   *Var2  0000000E 
  26C:  		ExecWait  $Script_8021E5DC_03 
  278:  		Thread
  280:  			Set   *Var0  000000C8 
  290:  			Loop  00000014 
  29C:  				Sub   *Var0  0000000A 
  2AC:  				Call  SetPartAlpha  ( .Actor:Self 00000001 *Var0 )
  2C4:  				Wait  1`
  2D0:  			EndLoop
  2D8:  		EndThread
  2E0:  		Wait  10`
  2EC:  		Call  UseBattleCamPreset    ( 00000002 )
  2FC:  		Call  MoveBattleCamOver     (  60` )
  30C:  		Call  SetGoalToHome ( .Actor:Self )
  31C:  		Call  SetAnimation  ( .Actor:Self 00000001 000D0003 )
  334:  		Call  FlyToGoal     ( .Actor:Self  30`  0` .Easing:CosInOut )
  350:  		Call  SetAnimation  ( .Actor:Self 00000001 000D0001 )
  368:  		Set   *Var0  00000037 
  378:  		Loop  00000014 
  384:  			Add   *Var0  0000000A 
  394:  			Call  SetPartAlpha  ( .Actor:Self 00000001 *Var0 )
  3AC:  			Wait  1`
  3B8:  		EndLoop
  3C0:  		Call  SetPartAlpha  ( .Actor:Self 00000001 000000FF )
  3D8:  	Case  ==  .Event:ShockDeath % 26
  3E4:  		Call  UseBattleCamPreset    ( 00000002 )
  3F4:  		ExecWait  $Script_8021E0E0_03 
  400:  		SetConst  *Var0  00000001 
  410:  		SetConst  *Var1  000D0015 
  420:  		Set   *Var2  0000000E 
  430:  		ExecWait  $Script_8021E5DC_03 
  43C:  		SetConst  *Var0  00000001 
  44C:  		SetConst  *Var1  000D0015 
  45C:  		ExecWait  DoDeath 
  468:  		Return
  470:  	CaseOR  ==  00000017 % 17
  47C:  	CaseOR  ==  .Event:Immune % 19
  488:  	CaseOR  ==  .Event:AirLiftFailed % 1F
  494:  		SetConst  *Var0  00000001 
  4A4:  		SetConst  *Var1  000D0001 
  4B4:  		ExecWait  DoImmune 
  4C0:  	EndCaseGroup
  4C8:  	Case  ==  .Event:Death % 20
  4D4:  		ExecWait  $Script_8021E0E0_03 
  4E0:  		SetConst  *Var0  00000001 
  4F0:  		SetConst  *Var1  000D0015 
  500:  		ExecWait  DoNormalHit 
  50C:  		Wait  10`
  518:  		SetConst  *Var0  00000001 
  528:  		SetConst  *Var1  000D0015 
  538:  		ExecWait  DoDeath 
  544:  		Return
  54C:  	Case  ==  .Event:RecoverStatus % 31
  558:  		SetConst  *Var0  00000001 
  568:  		SetConst  *Var1  000D0001 
  578:  		ExecWait  DoRecover 
  584:  	Case  ==  .Event:ScareAway % 39
  590:  		SetConst  *Var0  00000001 
  5A0:  		SetConst  *Var1  000D0003 
  5B0:  		SetConst  *Var2  000D0015 
  5C0:  		ExecWait  DoScareAway 
  5CC:  		Return
  5D4:  	Case  ==  .Event:BeginAirLift % 3A
  5E0:  		SetConst  *Var0  00000001 
  5F0:  		SetConst  *Var1  000D0003 
  600:  		ExecWait  DoAirLift 
  60C:  	Case  ==  .Event:BlowAway % 16
  618:  		SetConst  *Var0  00000001 
  628:  		SetConst  *Var1  000D0015 
  638:  		ExecWait  DoBlowAway 
  644:  		Return
  64C:  	Default
  654:  EndSwitch
  65C:  Call  EnableIdleScript  ( .Actor:Self 00000001 )
  670:  Call  UseIdleAnimation  ( .Actor:Self .True )
  684:  Return
  68C:  End
}

#new:Script $Script_TakeTurn_80224CA0_03 {
    0:  Call  UseIdleAnimation  ( .Actor:Self .False )
   14:  Call  EnableIdleScript  ( .Actor:Self 00000000 )
   28:  Wait  10`
   34:  Thread
   3C:  	Set   *Var0  000000C8 
   4C:  	Loop  00000014 
   58:  		Sub   *Var0  0000000A 
   68:  		Call  SetPartAlpha  ( .Actor:Self 00000001 *Var0 )
   80:  		Wait  1`
   8C:  	EndLoop
   94:  EndThread
   9C:  Wait  10`
   A8:  Call  UseBattleCamPreset    ( 00000001 )
   B8:  Call  SetTargetActor        ( .Actor:Self .Actor:Player )
   CC:  Call  SetGoalToTarget       ( .Actor:Self )
   DC:  Thread
   E4:  	Call  SetAnimation      ( .Actor:Self 00000001 000D0003 )
   FC:  	Call  GetStatusFlags    ( .Actor:Self *VarA )
  110:  	If  *VarA  &  ~Flags:StatusFlags:Shrink % 80000
  120:  		Call  AddGoalPos    ( .Actor:Self  4`  -4`  0` )
  13C:  	Else
  144:  		Call  AddGoalPos    ( .Actor:Self  10`  -10`  0` )
  160:  	EndIf
  168:  	Call  FlyToGoal     ( .Actor:Self  30`  0` .Easing:CosInOut )
  184:  	Call  SetAnimation  ( .Actor:Self 00000001 000D0001 )
  19C:  EndThread
  1A4:  Wait  15`
  1B0:  Call  UseBattleCamPreset    ( 0000000F )
  1C0:  Call  BattleCamTargetActor  ( .Actor:Self )
  1D0:  Call  MoveBattleCamOver     (  30` )
  1E0:  Set   *Var0  00000037 
  1F0:  Loop  00000014 
  1FC:  	Add   *Var0  0000000A 
  20C:  	Call  SetPartAlpha  ( .Actor:Self 00000001 *Var0 )
  224:  	Wait  1`
  230:  EndLoop
  238:  Call  SetPartAlpha      ( .Actor:Self 00000001 000000FF )
  250:  Call  SetAnimation      ( .Actor:Self 00000001 000D0005 )
  268:  Wait  10`
  274:  Call  SetGoalToTarget   ( .Actor:Self )
  284:  Wait  15`
  290:  Call  EnemyTestTarget   ( .Actor:Self *Var0 ~Flags:DamageType:0 00000000 00000001 00000010 )
  2B4:  Switch  *Var0 
  2C0:  	CaseOR  ==  .HitResult:Miss % 6
  2CC:  	CaseOR  ==  .HitResult:Lucky % 5
  2D8:  		Set   *VarA  *Var0 
  2E8:  		Call  UseBattleCamPreset    ( 00000002 )
  2F8:  		Call  SetPartScale  ( .Actor:Self 00000001 *Fixed[1.4] *Fixed[1.4] *Fixed[1.0] )
  318:  		Call  SetAnimation  ( .Actor:Self 00000001 000D0007 )
  330:  		Wait  2`
  33C:  		Call  SetPartScale  ( .Actor:Self 00000001 *Fixed[1.0] *Fixed[1.0] *Fixed[1.0] )
  35C:  		Set   *Var0  00000000 
  36C:  		Loop  00000014 
  378:  			Add   *Var0  FFFFFFD3 
  388:  			Call  SetActorYaw   ( .Actor:Self *Var0 )
  39C:  			Wait  1`
  3A8:  		EndLoop
  3B0:  		Call  SetActorYaw   ( .Actor:Self  0` )
  3C4:  		If  *VarA  ==  .HitResult:Lucky % 5
  3D4:  			Call  EnemyTestTarget   ( .Actor:Self *Var0 ~Flags:DamageType:TriggerLucky 00000000 00000000 00000000 )
  3F8:  		EndIf
  400:  		Call  SetAnimation  ( .Actor:Self 00000001 000D001A )
  418:  		Call  AddActorDecoration    ( .Actor:Self 00000001 00000000 .Decoration:SeeingStars )
  434:  		Wait  30`
  440:  		Call  RemoveActorDecoration ( .Actor:Self 00000001 00000000 )
  458:  		Call  SetAnimation  ( .Actor:Self 00000001 000D0001 )
  470:  		Wait  10`
  47C:  		Call  YieldTurn ( )
  488:  		Thread
  490:  			Set   *Var0  000000C8 
  4A0:  			Loop  00000014 
  4AC:  				Sub   *Var0  0000000A 
  4BC:  				Call  SetPartAlpha  ( .Actor:Self 00000001 *Var0 )
  4D4:  				Wait  1`
  4E0:  			EndLoop
  4E8:  		EndThread
  4F0:  		Wait  10`
  4FC:  		Call  UseBattleCamPreset    ( 00000002 )
  50C:  		Call  MoveBattleCamOver     (  60` )
  51C:  		Call  SetGoalToHome ( .Actor:Self )
  52C:  		Call  SetAnimation  ( .Actor:Self 00000001 000D0003 )
  544:  		Call  FlyToGoal     ( .Actor:Self  30`  0` .Easing:CosInOut )
  560:  		Call  SetAnimation  ( .Actor:Self 00000001 000D0001 )
  578:  		Set   *Var0  00000037 
  588:  		Loop  00000014 
  594:  			Add   *Var0  0000000A 
  5A4:  			Call  SetPartAlpha  ( .Actor:Self 00000001 *Var0 )
  5BC:  			Wait  1`
  5C8:  		EndLoop
  5D0:  		Call  SetPartAlpha      ( .Actor:Self 00000001 000000FF )
  5E8:  		Call  EnableIdleScript  ( .Actor:Self 00000001 )
  5FC:  		Call  UseIdleAnimation  ( .Actor:Self .True )
  610:  		Return
  618:  	EndCaseGroup
  620:  EndSwitch
  628:  Set   *VarA  00000000 
  638:  Call  GetActorVar   ( .Actor:Self 00000001 *Var8 )
  650:  Switch  *Var8 
  65C:  	Case  ==  00000000 
  668:  		Set   *Var8  00000004 
  678:  	Case  ==  00000001 
  684:  		Set   *Var8  00000005 
  694:  	Case  ==  00000002 
  6A0:  		Set   *Var8  00000006 
  6B0:  EndSwitch
  6B8:  Set   *Var7  *Var8 
  6C8:  Loop  *Var7 
  6D4:  	Call  PlaySoundAtActor  ( .Actor:Self 00002019 )
  6E8:  	Add   *VarA  00000001 
  6F8:  	Call  SetPartScale      ( .Actor:Self 00000001 *Fixed[1.4] *Fixed[1.4] *Fixed[1.0] )
  718:  	If  *Flag[00]  ==  .False 
  728:  		Call  SetAnimation  ( .Actor:Self 00000001 000D0007 )
  740:  		Set   *Flag[00]  .True 
  750:  		If  *VarA  ==  *Var8 
  760:  			Call  80269EAC  ( 0000000C )
  770:  		Else
  778:  			Call  80269EAC  ( 0000000A )
  788:  		EndIf
  790:  	Else
  798:  		Call  SetAnimation  ( .Actor:Self 00000001 000D0008 )
  7B0:  		Set   *Flag[00]  .False 
  7C0:  		If  *VarA  ==  *Var8 
  7D0:  			Call  80269EAC  ( 0000000D )
  7E0:  		Else
  7E8:  			Call  80269EAC  ( 0000000B )
  7F8:  		EndIf
  800:  	EndIf
  808:  	Wait  2`
  814:  	Call  SetPartScale  ( .Actor:Self 00000001 *Fixed[1.0] *Fixed[1.0] *Fixed[1.0] )
  834:  	Thread
  83C:  		Call  ShakeCam  ( .Cam:Battle 00000000  2` *Fixed[0.5] )
  858:  		Call  ShakeCam  ( .Cam:Battle 00000000  2` *Fixed[1.5] )
  874:  		Call  ShakeCam  ( .Cam:Battle 00000000  1` *Fixed[0.5] )
  890:  		Call  ShakeCam  ( .Cam:Battle 00000000  1` *Fixed[0.2] )
  8AC:  	EndThread
  8B4:  	Call  GetActorVar   ( .Actor:Self 00000001 *Var9 )
  8CC:  	Switch  *Var9 
  8D8:  		Case  ==  00000000 
  8E4:  			Wait  2`
  8F0:  			Call  EnemyDamageTarget ( .Actor:Self *Var0 ~Flags:DamageType:0 00000000 00000000 00000001 00000010 )
  918:  		Case  ==  00000001 
  924:  			Wait  2`
  930:  			Call  EnemyDamageTarget ( .Actor:Self *Var0 ~Flags:DamageType:0 00000000 00000000 00000001 00000010 )
  958:  		Case  ==  00000002 
  964:  			Wait  2`
  970:  			Call  EnemyDamageTarget ( .Actor:Self *Var0 ~Flags:DamageType:0 00000000 00000000 00000001 00000010 )
  998:  	EndSwitch
  9A0:  	Wait  8`
  9AC:  	Call  SetAnimation  ( .Actor:Self 00000001 000D0001 )
  9C4:  	Call  GetActorHP    ( .Actor:Player *Var1 )
  9D8:  	If  *Var1  ==  00000000 
  9E8:  		BreakLoop
  9F0:  	EndIf
  9F8:  EndLoop
  A00:  Switch  *Var0 
  A0C:  	CaseOR  ==  .HitResult:Hit % 0
  A18:  	CaseOR  ==  .HitResult:QuakeImmune % 2
  A24:  		Wait  10`
  A30:  		Call  YieldTurn ( )
  A3C:  		Thread
  A44:  			Set   *Var0  000000C8 
  A54:  			Loop  00000014 
  A60:  				Sub   *Var0  0000000A 
  A70:  				Call  SetPartAlpha  ( .Actor:Self 00000001 *Var0 )
  A88:  				Wait  1`
  A94:  			EndLoop
  A9C:  		EndThread
  AA4:  		Wait  10`
  AB0:  		Call  UseBattleCamPreset    ( 00000002 )
  AC0:  		Call  MoveBattleCamOver     (  30` )
  AD0:  		Call  SetGoalToHome ( .Actor:Self )
  AE0:  		Call  SetAnimation  ( .Actor:Self 00000001 000D0003 )
  AF8:  		Call  FlyToGoal     ( .Actor:Self  30`  0` .Easing:CosInOut )
  B14:  		Call  SetAnimation  ( .Actor:Self 00000001 000D0001 )
  B2C:  		Set   *Var0  00000037 
  B3C:  		Loop  00000014 
  B48:  			Add   *Var0  0000000A 
  B58:  			Call  SetPartAlpha  ( .Actor:Self 00000001 *Var0 )
  B70:  			Wait  1`
  B7C:  		EndLoop
  B84:  		Call  SetPartAlpha  ( .Actor:Self 00000001 000000FF )
  B9C:  	EndCaseGroup
  BA4:  EndSwitch
  BAC:  Call  EnableIdleScript  ( .Actor:Self 00000001 )
  BC0:  Call  UseIdleAnimation  ( .Actor:Self .True )
  BD4:  Return
  BDC:  End
}

#new:Script $Script_NextTurn_80225884_03 {
    0:  Call  GetBattlePhase    ( *Var0 )
   10:  Switch  *Var0 
   1C:  	Case  ==  0000000C 
   28:  		Call  GetActorVar   ( .Actor:Self 00000002 *Var0 )
   40:  		If  *Var0  >  00000000 
   50:  			Sub   *Var0  00000001 
   60:  			Call  SetActorVar   ( .Actor:Self 00000002 *Var0 )
   78:  			BreakCase
   80:  		EndIf
   88:  		SetConst  *Var0  00000001 
   98:  		SetConst  *Var1  000D0015 
   A8:  		ExecWait  $Script_8021E118_03 
   B4:  		Return
   BC:  EndSwitch
   C4:  Return
   CC:  End
}

#new:SpecialFormation $SpecialFormation_80225958_03 {
$LeeBow_03 $Vector3D_8021E940_03 00000000 00000000 00000000 00000000 00000000 
}

#new:IdleAnimations $IdleAnimations_80225974_03 {
.Status:Normal    000E0001
.Status:Stone     000E0000
.Status:Sleep     000E0000
.Status:Poison    000E0001
.Status:Stop      000E0000
.Status:Static    000E0001
.Status:Paralyze  000E0000
.Status:Dizzy     000E000F
.Status:Fear      000E000F
.Status:End
}

#new:DefenseTable $DefenseTable_802259C0_03 {
.Element:Normal 00000000
.Element:Shock  00000063
.Element:End
}

#new:StatusTable $StatusTable_802259D4_03 {
.Status:Normal      0`
.Status:Default     0`
.Status:Sleep      60`
.Status:Poison      0`
.Status:Frozen      0`
.Status:Dizzy      75`
.Status:Fear        0`
.Status:Static      0`
.Status:Paralyze   75`
.Status:Shrink     80`
.Status:Stop       90`
.Status:DefaultTurnMod    0`
.Status:SleepTurnMod     -1`
.Status:PoisonTurnMod     0`
.Status:FrozenTurnMod     0`
.Status:DizzyTurnMod     -1`
.Status:FearTurnMod       0`
.Status:StaticTurnMod     0`
.Status:ParalyzeTurnMod   0`
.Status:ShrinkTurnMod     0`
.Status:StopTurnMod      -1`
.Status:End
}

#new:PartsTable $PartsTable_80225A80_03 {
00020000 01000000 FF1400FF $IdleAnimations_80225974_03 $DefenseTable_802259C0_03 00000080 00000000 00F80000 00000000 
00800001 02003200 FFE200FF 00000000 $DefenseTable_802259C0_03 00000080 00000000 00F80000 00000000 
}

#new:Actor $LeeWatt_03 {
% stats
[Index]        84b 
[Level]         0`b 
[MaxHP]        20`b 
[Coins]         0`b 
[Flags]       00000200 
[StatusTable] $StatusTable_802259D4_03 
% ai
[PartsCount]    2`s 
[PartsTable]  $PartsTable_80225A80_03 
[Script]      $Script_Init_Watt_03 
% move effectiveness
[Escape]      100`b 
[Item]          0`b 
[AirLift]       0`b 
[Hurricane]     0`b % Bow's "Spook" as well
[UpAndAway]     0`b 
[PowerBounce]  90`b 
[SpinSmash]     0`b % weight (0-4)
% ui positions
[Size]         34`b  28`b % width height
[HealthBar]     0`b   0`b % dx dy
[StatusTurn]  -10`b  20`b % dx dy
[StatusIcon]   10`b  20`b % dx dy
}

#new:Script $Script_Init_Watt_03 {
    0:  Call  BindTakeTurn  ( .Actor:Self $Script_TakeTurn_80226004_03 )
   14:  Call  BindIdle      ( .Actor:Self $Script_Idle_80225B68_03 )
   28:  Call  BindHandleEvent   ( .Actor:Self $Script_HandleEvent_80225B90_03 )
   3C:  Call  BindNextTurn  ( .Actor:Self $Script_NextTurn_80226880_03 )
   50:  Call  SetActorVar   ( .Actor:Self 00000002 00000001 )
   68:  Return
   70:  End
}

#new:Script $Script_Idle_80225B68_03 {
    0:  SetPriority  00000063 
    C:  Call  $Function_80219188_03 ( )
   18:  Return
   20:  End
}

#new:Script $Script_HandleEvent_80225B90_03 {
    0:  Call  UseIdleAnimation      ( .Actor:Self .False )
   14:  Call  $Function_80219658_03 ( 00000000 )
   24:  Call  $Function_802196A4_03 ( 00000001 )
   34:  Call  $Function_802196F0_03 ( 00000000 )
   44:  Call  GetLastEvent  ( .Actor:Self *Var0 )
   58:  Switch  *Var0 
   64:  	CaseOR  ==  .Event:HitCombo % 9
   70:  	CaseOR  ==  .Event:Hit % A
   7C:  		SetConst  *Var0  00000001 
   8C:  		SetConst  *Var1  000E000C 
   9C:  		ExecWait  DoNormalHit 
   A8:  	EndCaseGroup
   B0:  	Case  ==  .Event:BurnHit % E
   BC:  		SetConst  *Var0  00000001 
   CC:  		SetConst  *Var1  000E000D 
   DC:  		SetConst  *Var2  000E000E 
   EC:  		ExecWait  DoBurnHit 
   F8:  	Case  ==  .Event:BurnDeath % 24
  104:  		SetConst  *Var0  00000001 
  114:  		SetConst  *Var1  000E000D 
  124:  		SetConst  *Var2  000E000E 
  134:  		ExecWait  DoBurnHit 
  140:  		Call  $Function_80219604_03 ( )
  14C:  		ExecWait  $Script_8021E0E0_03 
  158:  		SetConst  *Var0  00000001 
  168:  		SetConst  *Var1  000E000E 
  178:  		ExecWait  DoDeath 
  184:  		Return
  18C:  	Case  ==  .Event:SpinSmashHit % B
  198:  		SetConst  *Var0  00000001 
  1A8:  		SetConst  *Var1  000E000C 
  1B8:  		ExecWait  DoSpinSmashHit 
  1C4:  	Case  ==  .Event:SpinSmashDeath % 21
  1D0:  		Call  $Function_80219604_03 ( )
  1DC:  		ExecWait  $Script_8021E0E0_03 
  1E8:  		SetConst  *Var0  00000001 
  1F8:  		SetConst  *Var1  000E000C 
  208:  		ExecWait  DoSpinSmashHit 
  214:  		SetConst  *Var0  00000001 
  224:  		SetConst  *Var1  000E000C 
  234:  		ExecWait  DoDeath 
  240:  		Return
  248:  	CaseOR  ==  00000017 % 17
  254:  	CaseOR  ==  .Event:Immune % 19
  260:  	CaseOR  ==  .Event:AirLiftFailed % 1F
  26C:  		SetConst  *Var0  00000001 
  27C:  		SetConst  *Var1  000E0001 
  28C:  		ExecWait  DoImmune 
  298:  	EndCaseGroup
  2A0:  	Case  ==  .Event:Death % 20
  2AC:  		Call  $Function_80219604_03 ( )
  2B8:  		ExecWait  $Script_8021E0E0_03 
  2C4:  		SetConst  *Var0  00000001 
  2D4:  		SetConst  *Var1  000E000C 
  2E4:  		ExecWait  DoNormalHit 
  2F0:  		Wait  10`
  2FC:  		SetConst  *Var0  00000001 
  30C:  		SetConst  *Var1  000E000C 
  31C:  		ExecWait  DoDeath 
  328:  		Return
  330:  	Case  ==  .Event:RecoverStatus % 31
  33C:  		SetConst  *Var0  00000001 
  34C:  		SetConst  *Var1  000E0001 
  35C:  		ExecWait  DoRecover 
  368:  	Case  ==  .Event:ScareAway % 39
  374:  		SetConst  *Var0  00000001 
  384:  		SetConst  *Var1  000E0003 
  394:  		SetConst  *Var2  000E000C 
  3A4:  		ExecWait  DoScareAway 
  3B0:  		Return
  3B8:  	Case  ==  .Event:BeginAirLift % 3A
  3C4:  		SetConst  *Var0  00000001 
  3D4:  		SetConst  *Var1  000E0003 
  3E4:  		ExecWait  DoAirLift 
  3F0:  	Case  ==  .Event:BlowAway % 16
  3FC:  		SetConst  *Var0  00000001 
  40C:  		SetConst  *Var1  000E000C 
  41C:  		ExecWait  DoBlowAway 
  428:  		Return
  430:  	Default
  438:  EndSwitch
  440:  Call  $Function_80219658_03 ( 00000001 )
  450:  Call  UseIdleAnimation      ( .Actor:Self .True )
  464:  Return
  46C:  End
}

#new:Script $Script_TakeTurn_80226004_03 {
    0:  Call  UseIdleAnimation  ( .Actor:Self .False )
   14:  Call  UseBattleCamPreset    ( 00000013 )
   24:  Call  GetActorPos       ( .Actor:Player *Var0 *Var1 *Var2 )
   40:  Call  SetBattleCamTarget    ( *Var0 *Var1 *Var2 )
   58:  Call  SetBattleCamZoom  (  350` )
   68:  Call  SetBattleCamOffsetZ   (  40` )
   78:  Call  MoveBattleCamOver (  80` )
   88:  Call  8024ECF8  ( FFFFFFFF 00000001 00000000 )
   A0:  Call  SetTargetActor    ( .Actor:Self .Actor:Player )
   B4:  Call  SetGoalToTarget   ( .Actor:Self )
   C4:  Call  SetAnimation      ( .Actor:Self 00000001 000E0003 )
   DC:  Call  $Function_802196F0_03 ( 00000001 )
   EC:  Call  AddGoalPos        ( .Actor:Self  15`  -10`  5` )
  108:  Call  FlyToGoal ( .Actor:Self  30`  0` .Easing:CosInOut )
  124:  Call  SetAnimation      ( .Actor:Self 00000001 000E0001 )
  13C:  Call  $Function_802196F0_03 ( 00000000 )
  14C:  Wait  5`
  158:  Call  $Function_80219658_03 ( 00000000 )
  168:  Call  AddGoalPos        ( .Actor:Self  25`  20`  0` )
  184:  Call  FlyToGoal ( .Actor:Self  15`  -20` .Easing:CosInOut )
  1A0:  Call  SetAnimation      ( .Actor:Self 00000001 000E0005 )
  1B8:  Call  SetGoalToTarget   ( .Actor:Self )
  1C8:  Call  FlyToGoal ( .Actor:Self  5`  0` .Easing:CosInOut )
  1E4:  Call  EnemyTestTarget   ( .Actor:Self *Var0 ~Flags:DamageType:0 00000000 00000001 00000010 )
  208:  Switch  *Var0 
  214:  	CaseOR  ==  .HitResult:Miss % 6
  220:  	CaseOR  ==  .HitResult:Lucky % 5
  22C:  		Set   *VarA  *Var0 
  23C:  		Thread
  244:  			Wait  5`
  250:  			Call  SetAnimation  ( .Actor:Self 00000001 000E0001 )
  268:  		EndThread
  270:  		Call  SetGoalToTarget   ( .Actor:Self )
  280:  		Call  AddGoalPos        ( .Actor:Self  -40`  10`  0` )
  29C:  		Call  FlyToGoal ( .Actor:Self  10`  -20` .Easing:QuadraticOut )
  2B8:  		If  *VarA  ==  .HitResult:Lucky % 5
  2C8:  			Call  EnemyTestTarget   ( .Actor:Self *Var0 ~Flags:DamageType:TriggerLucky 00000000 00000000 00000000 )
  2EC:  		EndIf
  2F4:  		Call  $Function_802196A4_03 ( 00000001 )
  304:  		Call  $Function_80219658_03 ( 00000001 )
  314:  		Wait  20`
  320:  		Call  UseBattleCamPreset    ( 00000002 )
  330:  		Call  YieldTurn ( )
  33C:  		Call  SetGoalToHome     ( .Actor:Self )
  34C:  		Call  SetAnimation      ( .Actor:Self 00000001 000E0003 )
  364:  		Call  FlyToGoal ( .Actor:Self  30`  0` .Easing:CosInOut )
  380:  		Call  SetAnimation      ( .Actor:Self 00000001 000E0001 )
  398:  		Call  UseIdleAnimation  ( .Actor:Self .True )
  3AC:  		Return
  3B4:  	EndCaseGroup
  3BC:  EndSwitch
  3C4:  Call  $Function_802196A4_03 ( 00000000 )
  3D4:  Set   *VarA  00000028 
  3E4:  Call  AddBattleCamZoom  (  -75` )
  3F4:  Call  MoveBattleCamOver ( *VarA )
  404:  Call  8024ECF8  ( 00000000 00000000 00000001 )
  41C:  Call  PlaySoundAtActor  ( .Actor:Self 00000289 )
  430:  Call  GetStatusFlags    ( .Actor:Self *Var0 )
  444:  If  *Var0  &  ~Flags:StatusFlags:Shrink % 80000
  454:  	Call  GetActorPos   ( .Actor:Self *Var0 *Var1 *Var2 )
  470:  	Add   *Var1  00000004 
  480:  	Call  PlayEffect    ( ~FX:RadialFlowIn:ElectricalWaves *Var0 *Var1 *Var2 *Fixed[0.52] *VarA 00000000 00000000 00000000 00000000 00000000 00000000 00000000 )
  4C4:  Else
  4CC:  	Call  GetActorPos   ( .Actor:Self *Var0 *Var1 *Var2 )
  4E8:  	Add   *Var1  0000000C 
  4F8:  	Call  PlayEffect    ( ~FX:RadialFlowIn:ElectricalWaves *Var0 *Var1 *Var2 *Fixed[1.3] *VarA 00000000 00000000 00000000 00000000 00000000 00000000 00000000 )
  53C:  EndIf
  544:  Call  $Function_8021973C_03 ( )
  550:  Set   *Var9  00000000 
  560:  Call  SetAnimation  ( .Actor:Self 00000001 000E0006 )
  578:  Loop  *VarA 
  584:  	Add   *Var9  00000003 
  594:  	If  *Var9  >  000000C8 
  5A4:  		Set   *Var9  000000C8 
  5B4:  	EndIf
  5BC:  	Call  $Function_80219780_03 ( *Var9 )
  5CC:  	Wait  1`
  5D8:  EndLoop
  5E0:  Call  SetAnimation      ( .Actor:Self 00000001 000E0001 )
  5F8:  Call  8026EA7C  ( FFFFFF81 00000001 00000009 )
  610:  Call  AddBattleCamZoom  (  75` )
  620:  Call  MoveBattleCamOver (  5` )
  630:  Thread
  638:  	Wait  2`
  644:  	Call  $Function_80219780_03 ( 00000000 )
  654:  EndThread
  65C:  Call  GetActorVar   ( .Actor:Self 00000001 *Var9 )
  674:  Switch  *Var9 
  680:  	Case  ==  00000000 
  68C:  		Wait  2`
  698:  		Call  EnemyDamageTarget ( .Actor:Self *Var0 ~Flags:DamageType:IgnoreDefense|Electric 0000FFFF 00000000 00000003 00000020 )
  6C0:  	Case  ==  00000001 
  6CC:  		Wait  2`
  6D8:  		Call  EnemyDamageTarget ( .Actor:Self *Var0 ~Flags:DamageType:IgnoreDefense|Electric 0000FFFF 00000000 00000004 00000020 )
  700:  	Case  ==  00000002 
  70C:  		Wait  2`
  718:  		Call  EnemyDamageTarget ( .Actor:Self *Var0 ~Flags:DamageType:IgnoreDefense|Electric 0000FFFF 00000000 00000005 00000020 )
  740:  EndSwitch
  748:  Switch  *Var0 
  754:  	CaseOR  ==  .HitResult:Hit % 0
  760:  	CaseOR  ==  .HitResult:QuakeImmune % 2
  76C:  		Call  UseBattleCamPreset    ( 00000002 )
  77C:  		Call  $Function_802196A4_03 ( 00000001 )
  78C:  		Call  $Function_80219658_03 ( 00000001 )
  79C:  		Call  AddGoalPos    ( .Actor:Self  25`  10`  0` )
  7B8:  		Call  FlyToGoal     ( .Actor:Self  15`  -10` .Easing:CosInOut )
  7D4:  		Wait  15`
  7E0:  		Call  YieldTurn ( )
  7EC:  		Call  SetGoalToHome ( .Actor:Self )
  7FC:  		Call  SetAnimation  ( .Actor:Self 00000001 000E0003 )
  814:  		Call  FlyToGoal     ( .Actor:Self  30`  0` .Easing:CosInOut )
  830:  		Call  SetAnimation  ( .Actor:Self 00000001 000E0001 )
  848:  	EndCaseGroup
  850:  EndSwitch
  858:  Call  UseIdleAnimation  ( .Actor:Self .True )
  86C:  Return
  874:  End
}

#new:Script $Script_NextTurn_80226880_03 {
    0:  Call  GetBattlePhase    ( *Var0 )
   10:  Switch  *Var0 
   1C:  	Case  ==  0000000C 
   28:  		Call  GetActorVar   ( .Actor:Self 00000002 *Var0 )
   40:  		If  *Var0  >  00000000 
   50:  			Sub   *Var0  00000001 
   60:  			Call  SetActorVar   ( .Actor:Self 00000002 *Var0 )
   78:  			BreakCase
   80:  		EndIf
   88:  		SetConst  *Var0  00000001 
   98:  		SetConst  *Var1  000E000C 
   A8:  		Call  $Function_80219604_03 ( )
   B4:  		ExecWait  $Script_8021E118_03 
   C0:  		Return
   C8:  EndSwitch
   D0:  Return
   D8:  End
}

#new:SpecialFormation $SpecialFormation_80226960_03 {
$LeeWatt_03 $Vector3D_8021E940_03 00000000 00000000 00000000 00000000 00000000 
}

#new:IdleAnimations $IdleAnimations_8022697C_03 {
.Status:Normal    000F0001
.Status:Stone     000F0000
.Status:Sleep     000F0000
.Status:Poison    000F0001
.Status:Stop      000F0000
.Status:Static    000F0001
.Status:Paralyze  000F0000
.Status:Dizzy     000F0010
.Status:Fear      000F0010
.Status:End
}

#new:DefenseTable $DefenseTable_802269C8_03 {
.Element:Normal 00000000
.Element:End
}

#new:StatusTable $StatusTable_802269D4_03 {
.Status:Normal      0`
.Status:Default     0`
.Status:Sleep      60`
.Status:Poison      0`
.Status:Frozen      0`
.Status:Dizzy      75`
.Status:Fear        0`
.Status:Static      0`
.Status:Paralyze   75`
.Status:Shrink     80`
.Status:Stop       90`
.Status:DefaultTurnMod    0`
.Status:SleepTurnMod     -1`
.Status:PoisonTurnMod     0`
.Status:FrozenTurnMod     0`
.Status:DizzyTurnMod     -1`
.Status:FearTurnMod       0`
.Status:StaticTurnMod     0`
.Status:ParalyzeTurnMod   0`
.Status:ShrinkTurnMod     0`
.Status:StopTurnMod      -1`
.Status:End
}

#new:PartsTable $PartsTable_80226A80_03 {
00800000 01000000 001800FF $IdleAnimations_8022697C_03 $DefenseTable_802269C8_03 00000000 00000000 00F40000 00000000 
}

#new:Actor $LeeSushie_03 {
% stats
[Index]        85b 
[Level]         0`b 
[MaxHP]        20`b 
[Coins]         0`b 
[Flags]       00000000 
[StatusTable] $StatusTable_802269D4_03 
% ai
[PartsCount]    1`s 
[PartsTable]  $PartsTable_80226A80_03 
[Script]      $Script_Init_Sushie_03 
% move effectiveness
[Escape]      100`b 
[Item]          0`b 
[AirLift]       0`b 
[Hurricane]     0`b % Bow's "Spook" as well
[UpAndAway]     0`b 
[PowerBounce]  90`b 
[SpinSmash]     0`b % weight (0-4)
% ui positions
[Size]         37`b  26`b % width height
[HealthBar]     0`b   0`b % dx dy
[StatusTurn]  -10`b  20`b % dx dy
[StatusIcon]   10`b  20`b % dx dy
}

#new:Script $Script_Init_Sushie_03 {
    0:  Call  BindTakeTurn  ( .Actor:Self $Script_TakeTurn_802270BC_03 )
   14:  Call  BindIdle      ( .Actor:Self $Script_Idle_80226B44_03 )
   28:  Call  BindHandleEvent   ( .Actor:Self $Script_HandleEvent_80226B54_03 )
   3C:  Call  BindNextTurn  ( .Actor:Self $Script_NextTurn_8022831C_03 )
   50:  Call  SetActorVar   ( .Actor:Self 00000002 00000001 )
   68:  Return
   70:  End
}

#new:Script $Script_Idle_80226B44_03 {
    0:  Return
    8:  End
}

#new:Script $Script_HandleEvent_80226B54_03 {
    0:  Call  UseIdleAnimation  ( .Actor:Self .False )
   14:  Call  EnableIdleScript  ( .Actor:Self 00000000 )
   28:  Call  GetLastEvent      ( .Actor:Self *Var0 )
   3C:  Switch  *Var0 
   48:  	CaseOR  ==  .Event:HitCombo % 9
   54:  	CaseOR  ==  .Event:Hit % A
   60:  		SetConst  *Var0  00000001 
   70:  		SetConst  *Var1  000F000D 
   80:  		ExecWait  DoNormalHit 
   8C:  	EndCaseGroup
   94:  	Case  ==  .Event:BurnHit % E
   A0:  		SetConst  *Var0  00000001 
   B0:  		SetConst  *Var1  000F000E 
   C0:  		SetConst  *Var2  000F000F 
   D0:  		ExecWait  DoBurnHit 
   DC:  	Case  ==  .Event:BurnDeath % 24
   E8:  		SetConst  *Var0  00000001 
   F8:  		SetConst  *Var1  000F000E 
  108:  		SetConst  *Var2  000F000F 
  118:  		ExecWait  DoBurnHit 
  124:  		ExecWait  $Script_8021E0E0_03 
  130:  		Wait  10`
  13C:  		SetConst  *Var0  00000001 
  14C:  		SetConst  *Var1  000F000F 
  15C:  		ExecWait  DoDeath 
  168:  		Return
  170:  	Case  ==  .Event:SpinSmashHit % B
  17C:  		SetConst  *Var0  00000001 
  18C:  		SetConst  *Var1  000F000D 
  19C:  		ExecWait  DoSpinSmashHit 
  1A8:  	Case  ==  .Event:SpinSmashDeath % 21
  1B4:  		ExecWait  $Script_8021E0E0_03 
  1C0:  		SetConst  *Var0  00000001 
  1D0:  		SetConst  *Var1  000F000D 
  1E0:  		ExecWait  DoSpinSmashHit 
  1EC:  		SetConst  *Var0  00000001 
  1FC:  		SetConst  *Var1  000F000D 
  20C:  		ExecWait  DoDeath 
  218:  		Return
  220:  	Case  ==  .Event:ShockHit % 2F
  22C:  		SetConst  *Var0  00000001 
  23C:  		SetConst  *Var1  000F000D 
  24C:  		Set   *Var2  00000014 
  25C:  		ExecWait  $Script_8021E5DC_03 
  268:  		Call  SetAnimation  ( .Actor:Self 00000001 000F0003 )
  280:  		Call  SetGoalToHome ( .Actor:Self )
  290:  		Call  SetActorSpeed ( .Actor:Self *Fixed[4.0] )
  2A4:  		Call  RunToGoal     ( .Actor:Self  0` .False )
  2BC:  	Case  ==  .Event:ShockDeath % 26
  2C8:  		ExecWait  $Script_8021E0E0_03 
  2D4:  		SetConst  *Var0  00000001 
  2E4:  		SetConst  *Var1  000F000D 
  2F4:  		Set   *Var2  00000014 
  304:  		ExecWait  $Script_8021E5DC_03 
  310:  		SetConst  *Var0  00000001 
  320:  		SetConst  *Var1  000F000D 
  330:  		ExecWait  DoDeath 
  33C:  		Return
  344:  	CaseOR  ==  00000017 % 17
  350:  	CaseOR  ==  .Event:Immune % 19
  35C:  	CaseOR  ==  .Event:AirLiftFailed % 1F
  368:  		SetConst  *Var0  00000001 
  378:  		SetConst  *Var1  000F0001 
  388:  		ExecWait  DoImmune 
  394:  	EndCaseGroup
  39C:  	Case  ==  .Event:Death % 20
  3A8:  		ExecWait  $Script_8021E0E0_03 
  3B4:  		SetConst  *Var0  00000001 
  3C4:  		SetConst  *Var1  000F000D 
  3D4:  		ExecWait  DoNormalHit 
  3E0:  		Wait  10`
  3EC:  		SetConst  *Var0  00000001 
  3FC:  		SetConst  *Var1  000F000D 
  40C:  		ExecWait  DoDeath 
  418:  		Return
  420:  	Case  ==  .Event:RecoverStatus % 31
  42C:  		SetConst  *Var0  00000001 
  43C:  		SetConst  *Var1  000F0001 
  44C:  		ExecWait  DoRecover 
  458:  	Case  ==  .Event:ScareAway % 39
  464:  		SetConst  *Var0  00000001 
  474:  		SetConst  *Var1  000F0003 
  484:  		SetConst  *Var2  000F000D 
  494:  		ExecWait  DoScareAway 
  4A0:  		Return
  4A8:  	Case  ==  .Event:BeginAirLift % 3A
  4B4:  		SetConst  *Var0  00000001 
  4C4:  		SetConst  *Var1  000F0003 
  4D4:  		ExecWait  DoAirLift 
  4E0:  	Case  ==  .Event:BlowAway % 16
  4EC:  		SetConst  *Var0  00000001 
  4FC:  		SetConst  *Var1  000F000D 
  50C:  		ExecWait  DoBlowAway 
  518:  		Return
  520:  	Default
  528:  EndSwitch
  530:  Call  EnableIdleScript  ( .Actor:Self 00000001 )
  544:  Call  UseIdleAnimation  ( .Actor:Self .True )
  558:  Return
  560:  End
}

#new:Script $Script_TakeTurn_802270BC_03 {
    0:  Call  UseIdleAnimation  ( .Actor:Self .False )
   14:  Call  EnableIdleScript  ( .Actor:Self 00000000 )
   28:  Call  UseBattleCamPreset    ( 0000003F )
   38:  Call  BattleCamTargetActor  ( .Actor:Self )
   48:  Call  8024ECF8  ( FFFFFFFF 00000001 00000000 )
   60:  Call  SetTargetActor    ( .Actor:Self .Actor:Player )
   74:  Call  SetGoalToTarget   ( .Actor:Self )
   84:  Call  AddGoalPos        ( .Actor:Self  70`  0`  0` )
   A0:  Call  GetActorPos       ( .Actor:Self *Var0 *Var1 *Var2 )
   BC:  Call  GetGoalPos        ( .Actor:Self *Var3 *Var4 *Var5 )
   D8:  Sub   *Var3  *Var0 
   E8:  Div   *Var3  *Fixed[3.0] 
   F8:  Set   *VarA  *Var3 
  108:  If  *VarA  <  00000000 
  118:  	Mul   *VarA  FFFFFFFF 
  128:  EndIf
  130:  Call  MoveBattleCamOver ( *VarA )
  140:  Call  SetAnimation      ( .Actor:Self 00000001 000F0003 )
  158:  Call  RunToGoal ( .Actor:Self *VarA .False )
  170:  Call  SetAnimation      ( .Actor:Self 00000001 000F0001 )
  188:  Wait  10`
  194:  Call  UseBattleCamPreset    ( 00000008 )
  1A4:  Call  BattleCamTargetActor  ( .Actor:Self )
  1B4:  Call  AddBattleCamZoom  (  -50` )
  1C4:  Call  MoveBattleCamOver (  30` )
  1D4:  Call  8024ECF8  ( 00000001 00000001 00000001 )
  1EC:  Call  SetAnimation      ( .Actor:Self 00000001 000F0004 )
  204:  Wait  15`
  210:  Call  SetAnimation      ( .Actor:Self 00000001 000F0008 )
  228:  Wait  15`
  234:  Call  EnemyTestTarget   ( .Actor:Self *Var0 ~Flags:DamageType:0 00000000 00000001 00000010 )
  258:  Switch  *Var0 
  264:  	CaseOR  ==  .HitResult:Miss % 6
  270:  	CaseOR  ==  .HitResult:Lucky % 5
  27C:  		Set   *VarA  *Var0 
  28C:  		Call  UseBattleCamPreset    ( 00000002 )
  29C:  		Call  MoveBattleCamOver     (  20` )
  2AC:  		Call  SetAnimation  ( .Actor:Self 00000001 000F0005 )
  2C4:  		Thread
  2CC:  			Call  SetActorRotationOffset    ( .Actor:Self 00000000 0000000C 00000000 )
  2E8:  			Set   *Var0  00000000 
  2F8:  			Loop  0000000A 
  304:  				Add   *Var0  00000024 
  314:  				Call  SetActorRotation  ( .Actor:Self 00000000 00000000 *Var0 )
  330:  				Wait  1`
  33C:  			EndLoop
  344:  			Call  SetActorRotation  ( .Actor:Self 00000000 00000000 00000014 )
  360:  		EndThread
  368:  		Thread
  370:  			Call  GetActorVar   ( .Actor:Self 00000001 *Var0 )
  388:  			Switch  *Var0 
  394:  				Case  ==  00000000 
  3A0:  					Wait  13`
  3AC:  					Call  SetPartScale  ( .Actor:Self 00000001 *Fixed[1.0] *Fixed[1.0] *Fixed[1.0] )
  3CC:  					Wait  1`
  3D8:  					Call  SetPartScale  ( .Actor:Self 00000001 *Fixed[1.0] *Fixed[1.0] *Fixed[1.0] )
  3F8:  					Wait  1`
  404:  					Call  SetPartScale  ( .Actor:Self 00000001 *Fixed[1.0] *Fixed[1.0] *Fixed[1.0] )
  424:  					Wait  1`
  430:  					Call  SetPartScale  ( .Actor:Self 00000001 *Fixed[1.0] *Fixed[1.0] *Fixed[1.0] )
  450:  					Wait  1`
  45C:  					Call  SetPartScale  ( .Actor:Self 00000001 *Fixed[1.0] *Fixed[1.0] *Fixed[1.0] )
  47C:  				Case  ==  00000001 
  488:  					Wait  13`
  494:  					Call  SetPartScale  ( .Actor:Self 00000001 *Fixed[1.05] *Fixed[1.05] *Fixed[1.05] )
  4B4:  					Wait  1`
  4C0:  					Call  SetPartScale  ( .Actor:Self 00000001 *Fixed[1.1] *Fixed[1.1] *Fixed[1.1] )
  4E0:  					Wait  1`
  4EC:  					Call  SetPartScale  ( .Actor:Self 00000001 *Fixed[1.15] *Fixed[1.15] *Fixed[1.15] )
  50C:  					Wait  1`
  518:  					Call  SetPartScale  ( .Actor:Self 00000001 *Fixed[1.2] *Fixed[1.2] *Fixed[1.2] )
  538:  					Wait  1`
  544:  					Call  SetPartScale  ( .Actor:Self 00000001 *Fixed[1.25] *Fixed[1.25] *Fixed[1.25] )
  564:  				Case  ==  00000002 
  570:  					Wait  13`
  57C:  					Call  SetPartScale  ( .Actor:Self 00000001 *Fixed[1.1] *Fixed[1.1] *Fixed[1.1] )
  59C:  					Wait  1`
  5A8:  					Call  SetPartScale  ( .Actor:Self 00000001 *Fixed[1.2] *Fixed[1.2] *Fixed[1.2] )
  5C8:  					Wait  1`
  5D4:  					Call  SetPartScale  ( .Actor:Self 00000001 *Fixed[1.3] *Fixed[1.3] *Fixed[1.3] )
  5F4:  					Wait  1`
  600:  					Call  SetPartScale  ( .Actor:Self 00000001 *Fixed[1.4] *Fixed[1.4] *Fixed[1.4] )
  620:  					Wait  1`
  62C:  					Call  SetPartScale  ( .Actor:Self 00000001 *Fixed[1.5] *Fixed[1.5] *Fixed[1.5] )
  64C:  			EndSwitch
  654:  		EndThread
  65C:  		Call  SetActorSounds    ( .Actor:Self .ActorSound:Jump 00000000 00000000 )
  678:  		Call  PlaySoundAtActor  ( .Actor:Self 00002034 )
  68C:  		Call  SetGoalToTarget   ( .Actor:Self )
  69C:  		Thread
  6A4:  			Call  SetAnimation  ( .Actor:Self 00000001 000F0005 )
  6BC:  			Wait  10`
  6C8:  			Call  SetAnimation  ( .Actor:Self 00000001 000F0006 )
  6E0:  		EndThread
  6E8:  		Call  SetActorJumpGravity       ( .Actor:Self *Fixed[1.0] )
  6FC:  		Call  JumpToGoal    ( .Actor:Self  20` .False .True .False )
  71C:  		Call  SetAnimation  ( .Actor:Self 00000001 000F0007 )
  734:  		Call  SetActorRotation  ( .Actor:Self 00000000 00000000 00000000 )
  750:  		Call  SetActorRotationOffset    ( .Actor:Self 00000000 00000000 00000000 )
  76C:  		Call  SetPartScale  ( .Actor:Self 00000001 *Fixed[1.0] *Fixed[1.0] *Fixed[1.0] )
  78C:  		Call  LandJump      ( .Actor:Self )
  79C:  		Call  PlaySoundAtActor  ( .Actor:Self 0000029A )
  7B0:  		Call  GetActorPos   ( .Actor:Self *Var0 *Var1 *Var2 )
  7CC:  		Call  SetGoalPos    ( .Actor:Self *Var0 *Var1 *Var2 )
  7E8:  		Call  AddGoalPos    ( .Actor:Self  -15`  0`  0` )
  804:  		Call  JumpToGoal    ( .Actor:Self  20` .False .True .False )
  824:  		Call  PlaySoundAtActor  ( .Actor:Self 0000029A )
  838:  		Call  AddGoalPos    ( .Actor:Self  -10`  0`  0` )
  854:  		Call  JumpToGoal    ( .Actor:Self  10` .False .True .False )
  874:  		Call  PlaySoundAtActor  ( .Actor:Self 0000029A )
  888:  		If  *VarA  ==  .HitResult:Lucky % 5
  898:  			Call  EnemyTestTarget   ( .Actor:Self *Var0 ~Flags:DamageType:TriggerLucky 00000000 00000000 00000000 )
  8BC:  		EndIf
  8C4:  		Wait  10`
  8D0:  		Call  UseBattleCamPreset    ( 00000002 )
  8E0:  		Call  YieldTurn ( )
  8EC:  		Call  SetAnimation      ( .Actor:Self 00000001 000F0003 )
  904:  		Call  SetGoalToHome     ( .Actor:Self )
  914:  		Call  SetActorSpeed     ( .Actor:Self *Fixed[4.0] )
  928:  		Call  RunToGoal ( .Actor:Self  0` .False )
  940:  		Call  EnableIdleScript  ( .Actor:Self 00000001 )
  954:  		Call  UseIdleAnimation  ( .Actor:Self .True )
  968:  		Return
  970:  	EndCaseGroup
  978:  EndSwitch
  980:  Call  UseBattleCamPreset    ( 00000002 )
  990:  Call  MoveBattleCamOver     (  10` )
  9A0:  Call  SetAnimation  ( .Actor:Self 00000001 000F0005 )
  9B8:  Thread
  9C0:  	Call  SetActorRotationOffset    ( .Actor:Self 00000000 0000000C 00000000 )
  9DC:  	Set   *Var0  00000000 
  9EC:  	Loop  0000000A 
  9F8:  		Add   *Var0  00000024 
  A08:  		Call  SetActorRotation  ( .Actor:Self 00000000 00000000 *Var0 )
  A24:  		Wait  1`
  A30:  	EndLoop
  A38:  	Call  SetActorRotation  ( .Actor:Self 00000000 00000000 00000014 )
  A54:  EndThread
  A5C:  Thread
  A64:  	Call  GetActorVar   ( .Actor:Self 00000001 *Var0 )
  A7C:  	Switch  *Var0 
  A88:  		Case  ==  00000000 
  A94:  			Wait  13`
  AA0:  			Call  SetPartScale  ( .Actor:Self 00000001 *Fixed[1.1] *Fixed[1.1] *Fixed[1.1] )
  AC0:  			Wait  1`
  ACC:  			Call  SetPartScale  ( .Actor:Self 00000001 *Fixed[1.1] *Fixed[1.1] *Fixed[1.1] )
  AEC:  			Wait  1`
  AF8:  			Call  SetPartScale  ( .Actor:Self 00000001 *Fixed[1.2] *Fixed[1.2] *Fixed[1.2] )
  B18:  			Wait  1`
  B24:  			Call  SetPartScale  ( .Actor:Self 00000001 *Fixed[1.2] *Fixed[1.2] *Fixed[1.2] )
  B44:  			Wait  1`
  B50:  			Call  SetPartScale  ( .Actor:Self 00000001 *Fixed[1.3] *Fixed[1.3] *Fixed[1.3] )
  B70:  		Case  ==  00000001 
  B7C:  			Wait  13`
  B88:  			Call  SetPartScale  ( .Actor:Self 00000001 *Fixed[1.15] *Fixed[1.15] *Fixed[1.15] )
  BA8:  			Wait  1`
  BB4:  			Call  SetPartScale  ( .Actor:Self 00000001 *Fixed[1.2] *Fixed[1.2] *Fixed[1.2] )
  BD4:  			Wait  1`
  BE0:  			Call  SetPartScale  ( .Actor:Self 00000001 *Fixed[1.35] *Fixed[1.35] *Fixed[1.35] )
  C00:  			Wait  1`
  C0C:  			Call  SetPartScale  ( .Actor:Self 00000001 *Fixed[1.4] *Fixed[1.4] *Fixed[1.4] )
  C2C:  			Wait  1`
  C38:  			Call  SetPartScale  ( .Actor:Self 00000001 *Fixed[1.55] *Fixed[1.55] *Fixed[1.55] )
  C58:  		Case  ==  00000002 
  C64:  			Wait  13`
  C70:  			Call  SetPartScale  ( .Actor:Self 00000001 *Fixed[1.2] *Fixed[1.2] *Fixed[1.2] )
  C90:  			Wait  1`
  C9C:  			Call  SetPartScale  ( .Actor:Self 00000001 *Fixed[1.3] *Fixed[1.3] *Fixed[1.3] )
  CBC:  			Wait  1`
  CC8:  			Call  SetPartScale  ( .Actor:Self 00000001 *Fixed[1.5] *Fixed[1.5] *Fixed[1.5] )
  CE8:  			Wait  1`
  CF4:  			Call  SetPartScale  ( .Actor:Self 00000001 *Fixed[1.6] *Fixed[1.6] *Fixed[1.6] )
  D14:  			Wait  1`
  D20:  			Call  SetPartScale  ( .Actor:Self 00000001 *Fixed[1.8] *Fixed[1.8] *Fixed[1.8] )
  D40:  	EndSwitch
  D48:  EndThread
  D50:  Call  SetActorSounds    ( .Actor:Self .ActorSound:Jump 00000000 00000000 )
  D6C:  Call  PlaySoundAtActor  ( .Actor:Self 00002034 )
  D80:  Call  SetGoalToTarget   ( .Actor:Self )
  D90:  Thread
  D98:  	Call  SetAnimation  ( .Actor:Self 00000001 000F0005 )
  DB0:  	Wait  10`
  DBC:  	Call  SetAnimation  ( .Actor:Self 00000001 000F0006 )
  DD4:  EndThread
  DDC:  Call  SetActorJumpGravity   ( .Actor:Self *Fixed[1.6] )
  DF0:  Call  JumpToGoal    ( .Actor:Self  20` .False .True .False )
  E10:  Call  SetAnimation  ( .Actor:Self 00000001 000F0007 )
  E28:  Call  SetActorRotation      ( .Actor:Self 00000000 00000000 00000000 )
  E44:  Call  SetActorRotationOffset    ( .Actor:Self 00000000 00000000 00000000 )
  E60:  Thread
  E68:  	Wait  3`
  E74:  	Call  SetPartScale  ( .Actor:Self 00000001 *Fixed[1.0] *Fixed[1.0] *Fixed[1.0] )
  E94:  EndThread
  E9C:  Call  GetActorVar   ( .Actor:Self 00000001 *VarA )
  EB4:  Switch  *VarA 
  EC0:  	Case  ==  00000000 
  ECC:  		Wait  2`
  ED8:  		Call  EnemyDamageTarget ( .Actor:Self *Var0 ~Flags:DamageType:0 00000000 00000000 00000003 00000020 )
  F00:  	Case  ==  00000001 
  F0C:  		Wait  2`
  F18:  		Call  EnemyDamageTarget ( .Actor:Self *Var0 ~Flags:DamageType:0 00000000 00000000 00000004 00000020 )
  F40:  	Case  ==  00000002 
  F4C:  		Wait  2`
  F58:  		Call  EnemyDamageTarget ( .Actor:Self *Var0 ~Flags:DamageType:0 00000000 00000000 00000005 00000020 )
  F80:  EndSwitch
  F88:  Switch  *Var0 
  F94:  	CaseOR  ==  .HitResult:Hit % 0
  FA0:  	CaseOR  ==  .HitResult:QuakeImmune % 2
  FAC:  		Call  SetAnimation  ( .Actor:Self 00000001 000F0006 )
  FC4:  		Call  GetActorPos   ( .Actor:Self *Var0 *Var1 *Var2 )
  FE0:  		Add   *Var0  0000003C 
  FF0:  		Set   *Var1  00000000 
 1000:  		Call  SetActorJumpGravity   ( .Actor:Self *Fixed[1.4] )
 1014:  		Call  SetGoalPos    ( .Actor:Self *Var0 *Var1 *Var2 )
 1030:  		Call  JumpToGoal    ( .Actor:Self  20` .False .True .False )
 1050:  		Call  PlaySoundAtActor  ( .Actor:Self 0000029A )
 1064:  		Add   *Var0  0000001E 
 1074:  		Call  SetGoalPos    ( .Actor:Self *Var0 *Var1 *Var2 )
 1090:  		Call  JumpToGoal    ( .Actor:Self  8` .False .True .False )
 10B0:  		Call  PlaySoundAtActor  ( .Actor:Self 0000029A )
 10C4:  		Add   *Var0  00000014 
 10D4:  		Call  SetGoalPos    ( .Actor:Self *Var0 *Var1 *Var2 )
 10F0:  		Call  JumpToGoal    ( .Actor:Self  6` .False .True .False )
 1110:  		Call  PlaySoundAtActor  ( .Actor:Self 0000029A )
 1124:  		Add   *Var0  0000000A 
 1134:  		Call  SetGoalPos    ( .Actor:Self *Var0 *Var1 *Var2 )
 1150:  		Call  JumpToGoal    ( .Actor:Self  4` .False .True .False )
 1170:  		Call  PlaySoundAtActor  ( .Actor:Self 0000029A )
 1184:  		Call  SetAnimation  ( .Actor:Self 00000001 000F0001 )
 119C:  		Wait  15`
 11A8:  		Call  UseBattleCamPreset    ( 00000002 )
 11B8:  		Call  YieldTurn ( )
 11C4:  		Call  SetAnimation  ( .Actor:Self 00000001 000F0003 )
 11DC:  		Call  SetGoalToHome ( .Actor:Self )
 11EC:  		Call  SetActorSpeed ( .Actor:Self *Fixed[4.0] )
 1200:  		Call  RunToGoal     ( .Actor:Self  0` .False )
 1218:  	EndCaseGroup
 1220:  EndSwitch
 1228:  Call  EnableIdleScript  ( .Actor:Self 00000001 )
 123C:  Call  UseIdleAnimation  ( .Actor:Self .True )
 1250:  Return
 1258:  End
}

#new:Script $Script_NextTurn_8022831C_03 {
    0:  Call  GetBattlePhase    ( *Var0 )
   10:  Switch  *Var0 
   1C:  	Case  ==  0000000C 
   28:  		Call  GetActorVar   ( .Actor:Self 00000002 *Var0 )
   40:  		If  *Var0  >  00000000 
   50:  			Sub   *Var0  00000001 
   60:  			Call  SetActorVar   ( .Actor:Self 00000002 *Var0 )
   78:  			BreakCase
   80:  		EndIf
   88:  		SetConst  *Var0  00000001 
   98:  		SetConst  *Var1  000F000D 
   A8:  		ExecWait  $Script_8021E118_03 
   B4:  		Return
   BC:  EndSwitch
   C4:  Return
   CC:  End
}

#new:SpecialFormation $SpecialFormation_802283F0_03 {
$LeeSushie_03 $Vector3D_8021E940_03 00000000 00000000 00000000 00000000 00000000 
}

#new:IdleAnimations $IdleAnimations_8022840C_03 {
.Status:Normal    00100001
.Status:Stone     00100000
.Status:Sleep     00100000
.Status:Poison    00100001
.Status:Stop      00100000
.Status:Static    00100001
.Status:Paralyze  00100000
.Status:Dizzy     00100008
.Status:Fear      00100001
.Status:End
}

#new:IdleAnimations $IdleAnimations_80228458_03 {
.Status:Normal    00100014
.Status:End
}

#new:DefenseTable $DefenseTable_80228464_03 {
.Element:Normal 00000000
.Element:End
}

#new:StatusTable $StatusTable_80228470_03 {
.Status:Normal      0`
.Status:Default     0`
.Status:Sleep      60`
.Status:Poison      0`
.Status:Frozen      0`
.Status:Dizzy      75`
.Status:Fear        0`
.Status:Static      0`
.Status:Paralyze   75`
.Status:Shrink     80`
.Status:Stop       90`
.Status:DefaultTurnMod    0`
.Status:SleepTurnMod     -1`
.Status:PoisonTurnMod     0`
.Status:FrozenTurnMod     0`
.Status:DizzyTurnMod     -1`
.Status:FearTurnMod       0`
.Status:StaticTurnMod     0`
.Status:ParalyzeTurnMod   0`
.Status:ShrinkTurnMod     0`
.Status:StopTurnMod      -1`
.Status:End
}

#new:PartsTable $PartsTable_8022851C_03 {
00800000 01000000 FD2100FF $IdleAnimations_8022840C_03 $DefenseTable_80228464_03 00000000 00000000 FEF60000 00000000 
00120001 03000000 000000FF $IdleAnimations_80228458_03 $DefenseTable_80228464_03 00000000 00000000 00000000 00000000 
}

#new:Actor $LeeLakilester_03 {
% stats
[Index]        86b 
[Level]         0`b 
[MaxHP]        20`b 
[Coins]         0`b 
[Flags]       00000200 
[StatusTable] $StatusTable_80228470_03 
% ai
[PartsCount]    2`s 
[PartsTable]  $PartsTable_8022851C_03 
[Script]      $Script_Init_Lakilester_03 
% move effectiveness
[Escape]      100`b 
[Item]          0`b 
[AirLift]       0`b 
[Hurricane]     0`b % Bow's "Spook" as well
[UpAndAway]     0`b 
[PowerBounce]  90`b 
[SpinSmash]     0`b % weight (0-4)
% ui positions
[Size]         44`b  40`b % width height
[HealthBar]     0`b   0`b % dx dy
[StatusTurn]  -10`b  20`b % dx dy
[StatusIcon]   10`b  20`b % dx dy
}

#new:Script $Script_Init_Lakilester_03 {
    0:  Call  BindTakeTurn  ( .Actor:Self $Script_TakeTurn_80228B78_03 )
   14:  Call  BindIdle      ( .Actor:Self $Script_Idle_80228604_03 )
   28:  Call  BindHandleEvent   ( .Actor:Self $Script_HandleEvent_80228614_03 )
   3C:  Call  BindNextTurn  ( .Actor:Self $Script_NextTurn_80229658_03 )
   50:  Call  SetActorVar   ( .Actor:Self 00000002 00000001 )
   68:  Return
   70:  End
}

#new:Script $Script_Idle_80228604_03 {
    0:  Return
    8:  End
}

#new:Script $Script_HandleEvent_80228614_03 {
    0:  Call  UseIdleAnimation  ( .Actor:Self .False )
   14:  Call  EnableIdleScript  ( .Actor:Self 00000000 )
   28:  Call  GetLastEvent      ( .Actor:Self *Var0 )
   3C:  Switch  *Var0 
   48:  	CaseOR  ==  .Event:HitCombo % 9
   54:  	CaseOR  ==  .Event:Hit % A
   60:  		SetConst  *Var0  00000001 
   70:  		SetConst  *Var1  0010000A 
   80:  		ExecWait  DoNormalHit 
   8C:  	EndCaseGroup
   94:  	Case  ==  .Event:BurnHit % E
   A0:  		SetConst  *Var0  00000001 
   B0:  		SetConst  *Var1  0010000C 
   C0:  		SetConst  *Var2  0010000D 
   D0:  		ExecWait  DoBurnHit 
   DC:  	Case  ==  .Event:BurnDeath % 24
   E8:  		SetConst  *Var0  00000001 
   F8:  		SetConst  *Var1  0010000C 
  108:  		SetConst  *Var2  0010000D 
  118:  		ExecWait  DoBurnHit 
  124:  		ExecWait  $Script_8021E0E0_03 
  130:  		Wait  10`
  13C:  		SetConst  *Var0  00000001 
  14C:  		SetConst  *Var1  0010000D 
  15C:  		ExecWait  DoDeath 
  168:  		Return
  170:  	Case  ==  .Event:SpinSmashHit % B
  17C:  		SetConst  *Var0  00000001 
  18C:  		SetConst  *Var1  0010000A 
  19C:  		ExecWait  DoSpinSmashHit 
  1A8:  	Case  ==  .Event:SpinSmashDeath % 21
  1B4:  		ExecWait  $Script_8021E0E0_03 
  1C0:  		SetConst  *Var0  00000001 
  1D0:  		SetConst  *Var1  0010000A 
  1E0:  		ExecWait  DoSpinSmashHit 
  1EC:  		SetConst  *Var0  00000001 
  1FC:  		SetConst  *Var1  0010000B 
  20C:  		ExecWait  DoDeath 
  218:  		Return
  220:  	Case  ==  .Event:ShockHit % 2F
  22C:  		SetConst  *Var0  00000001 
  23C:  		SetConst  *Var1  0010000A 
  24C:  		ExecWait  DoShockHit 
  258:  		SetConst  *Var0  00000001 
  268:  		SetConst  *Var1  0010000A 
  278:  		ExecWait  DoJumpBack 
  284:  		Call  SetAnimation  ( .Actor:Self 00000001 00100003 )
  29C:  		Call  SetGoalToHome ( .Actor:Self )
  2AC:  		Call  FlyToGoal     ( .Actor:Self  30`  0` .Easing:CosInOut )
  2C8:  	Case  ==  .Event:ShockDeath % 26
  2D4:  		ExecWait  $Script_8021E0E0_03 
  2E0:  		SetConst  *Var0  00000001 
  2F0:  		SetConst  *Var1  0010000A 
  300:  		ExecWait  DoShockHit 
  30C:  		SetConst  *Var0  00000001 
  31C:  		SetConst  *Var1  0010000B 
  32C:  		ExecWait  DoDeath 
  338:  		Return
  340:  	CaseOR  ==  00000017 % 17
  34C:  	CaseOR  ==  .Event:Immune % 19
  358:  	CaseOR  ==  .Event:AirLiftFailed % 1F
  364:  		SetConst  *Var0  00000001 
  374:  		SetConst  *Var1  00100001 
  384:  		ExecWait  DoImmune 
  390:  	EndCaseGroup
  398:  	Case  ==  .Event:Death % 20
  3A4:  		ExecWait  $Script_8021E0E0_03 
  3B0:  		SetConst  *Var0  00000001 
  3C0:  		SetConst  *Var1  0010000A 
  3D0:  		ExecWait  DoNormalHit 
  3DC:  		Wait  10`
  3E8:  		SetConst  *Var0  00000001 
  3F8:  		SetConst  *Var1  0010000B 
  408:  		ExecWait  DoDeath 
  414:  		Return
  41C:  	Case  ==  .Event:RecoverStatus % 31
  428:  		SetConst  *Var0  00000001 
  438:  		SetConst  *Var1  00100001 
  448:  		ExecWait  DoRecover 
  454:  	Case  ==  .Event:ScareAway % 39
  460:  		SetConst  *Var0  00000001 
  470:  		SetConst  *Var1  00100003 
  480:  		SetConst  *Var2  0010000A 
  490:  		ExecWait  DoScareAway 
  49C:  		Return
  4A4:  	Case  ==  .Event:BeginAirLift % 3A
  4B0:  		SetConst  *Var0  00000001 
  4C0:  		SetConst  *Var1  00100003 
  4D0:  		ExecWait  DoAirLift 
  4DC:  	Case  ==  .Event:BlowAway % 16
  4E8:  		SetConst  *Var0  00000001 
  4F8:  		SetConst  *Var1  0010000A 
  508:  		ExecWait  DoBlowAway 
  514:  		Return
  51C:  	Default
  524:  EndSwitch
  52C:  Call  EnableIdleScript  ( .Actor:Self 00000001 )
  540:  Call  UseIdleAnimation  ( .Actor:Self .True )
  554:  Return
  55C:  End
}

#new:Script $Script_TakeTurn_80228B78_03 {
    0:  Call  UseIdleAnimation  ( .Actor:Self .False )
   14:  Call  EnableIdleScript  ( .Actor:Self 00000000 )
   28:  Call  SetTargetActor    ( .Actor:Self .Actor:Player )
   3C:  Call  UseBattleCamPreset    ( 0000003F )
   4C:  Call  BattleCamTargetActor  ( .Actor:Self )
   5C:  Call  8024ECF8  ( FFFFFFFF 00000001 00000000 )
   74:  Call  SetAnimation      ( .Actor:Self 00000001 00100003 )
   8C:  Call  GetActorPos       ( .Actor:Self *Var0 *Var1 *Var2 )
   A8:  Call  SetGoalPos        ( .Actor:Self  20`  30` *Var2 )
   C4:  Call  FlyToGoal ( .Actor:Self  30`  0` .Easing:CosInOut )
   E0:  Call  SetAnimation      ( .Actor:Self 00000001 00100001 )
   F8:  Call  GetActorPos       ( .Actor:Self *Var0 *Var1 *Var2 )
  114:  Call  GetStatusFlags    ( .Actor:Self *VarA )
  128:  If  *VarA  &  ~Flags:StatusFlags:Shrink % 80000
  138:  	Add   *Var0  FFFFFFFF 
  148:  	Add   *Var1  00000004 
  158:  	Add   *Var2  00000002 
  168:  	Call  SetPartScale  ( .Actor:Self 00000003 *Fixed[0.4] *Fixed[0.4] *Fixed[0.4] )
  188:  Else
  190:  	Add   *Var0  FFFFFFFD 
  1A0:  	Add   *Var1  0000000A 
  1B0:  	Add   *Var2  00000005 
  1C0:  	Call  SetPartScale  ( .Actor:Self 00000003 *Fixed[1.0] *Fixed[1.0] *Fixed[1.0] )
  1E0:  EndIf
  1E8:  Call  SetPartPos    ( .Actor:Self 00000003 *Var0 *Var1 *Var2 )
  208:  Wait  1`
  214:  Call  SetPartFlagBits   ( .Actor:Self 00000003 00000001 .False )
  230:  Call  SetAnimation  ( .Actor:Self 00000003 00100014 )
  248:  Call  SetAnimation  ( .Actor:Self 00000001 0010000F )
  260:  Loop  00000004 
  26C:  	Call  GetStatusFlags    ( .Actor:Self *VarA )
  280:  	If  *VarA  &  ~Flags:StatusFlags:Shrink % 80000
  290:  		AddF  *Var1  *Fixed[2.4] 
  2A0:  	Else
  2A8:  		Add   *Var1  00000006 
  2B8:  	EndIf
  2C0:  	Call  SetPartPos    ( .Actor:Self 00000003 *Var0 *Var1 *Var2 )
  2E0:  	Wait  1`
  2EC:  EndLoop
  2F4:  Call  GetActorPos       ( .Actor:Self *Var0 *Var1 *Var2 )
  310:  Call  GetStatusFlags    ( .Actor:Self *VarA )
  324:  If  *VarA  &  ~Flags:StatusFlags:Shrink % 80000
  334:  	Add   *Var0  FFFFFFFD 
  344:  	Add   *Var1  00000010 
  354:  	Add   *Var2  00000002 
  364:  	SetF  *Var3  *Fixed[0.4] 
  374:  Else
  37C:  	Add   *Var0  FFFFFFF8 
  38C:  	Add   *Var1  00000028 
  39C:  	Add   *Var2  00000005 
  3AC:  	SetF  *Var3  *Fixed[1.0] 
  3BC:  EndIf
  3C4:  Call  PlayEffect        ( ~FX:EnergyIn:ShortStreaks *Var0 *Var1 *Var2 *Var3 0000001E 00000000 00000000 00000000 00000000 00000000 00000000 00000000 )
  408:  Call  PlaySoundAtActor  ( .Actor:Self 000002C5 )
  41C:  Thread
  424:  	Loop  0000000F 
  430:  		Call  SetActorDispOffset    ( .Actor:Self 00000001 00000000 00000000 )
  44C:  		Call  SetPartDispOffset     ( .Actor:Self 00000003 00000001 00000000 00000000 )
  46C:  		Wait  1`
  478:  		Call  SetActorDispOffset    ( .Actor:Self FFFFFFFF 00000000 00000000 )
  494:  		Call  SetPartDispOffset     ( .Actor:Self 00000003 FFFFFFFF 00000000 00000000 )
  4B4:  		Wait  1`
  4C0:  	EndLoop
  4C8:  	Call  SetActorDispOffset    ( .Actor:Self 00000000 00000000 00000000 )
  4E4:  	Call  SetPartDispOffset     ( .Actor:Self 00000003 00000000 00000000 00000000 )
  504:  EndThread
  50C:  Call  SetGoalToTarget   ( .Actor:Self )
  51C:  Wait  10`
  528:  Call  SetAnimation      ( .Actor:Self 00000001 00100010 )
  540:  Wait  10`
  54C:  Call  SetAnimation      ( .Actor:Self 00000001 00100011 )
  564:  Wait  10`
  570:  Call  SetAnimation      ( .Actor:Self 00000001 00100012 )
  588:  Wait  3`
  594:  Call  SetPartSounds     ( .Actor:Self 00000003 .ActorSound:Jump 00000000 00000000 )
  5B4:  Call  PlaySoundAtActor  ( .Actor:Self 0000201B )
  5C8:  Call  EnemyTestTarget   ( .Actor:Self *Var0 ~Flags:DamageType:0 00000000 00000001 00000010 )
  5EC:  Switch  *Var0 
  5F8:  	CaseOR  ==  .HitResult:Miss % 6
  604:  	CaseOR  ==  .HitResult:Lucky % 5
  610:  		Set   *VarA  *Var0 
  620:  		Call  SetAnimation  ( .Actor:Self 00000003 00100015 )
  638:  		Call  SetPartJumpGravity    ( .Actor:Self 00000003 *Fixed[1.5] )
  650:  		Call  GetGoalPos    ( .Actor:Self *Var0 *Var1 *Var2 )
  66C:  		Call  RandInt       ( 00000064 *Var3 )
  680:  		Sub   *Var3  00000032 
  690:  		Add   *Var0  *Var3 
  6A0:  		Call  JumpPartTo    ( .Actor:Self 00000003 *Var0  0` *Var2  20` .True )
  6C8:  		Thread
  6D0:  			Add   *Var0  FFFFFFCE 
  6E0:  			Call  JumpPartTo        ( .Actor:Self 00000003 *Var0  0` *Var2  15` .True )
  708:  			Call  SetPartFlagBits   ( .Actor:Self 00000003 00000001 .True )
  724:  		EndThread
  72C:  		If  *VarA  ==  .HitResult:Lucky % 5
  73C:  			Call  EnemyTestTarget   ( .Actor:Self *Var0 ~Flags:DamageType:TriggerLucky 00000000 00000000 00000000 )
  760:  		EndIf
  768:  		Wait  15`
  774:  		Call  YieldTurn ( )
  780:  		Call  UseBattleCamPreset    ( 00000002 )
  790:  		Call  MoveBattleCamOver (  60` )
  7A0:  		Call  SetAnimation      ( .Actor:Self 00000001 00100003 )
  7B8:  		Call  SetGoalToHome     ( .Actor:Self )
  7C8:  		Call  FlyToGoal ( .Actor:Self  30`  0` .Easing:CosInOut )
  7E4:  		Call  EnableIdleScript  ( .Actor:Self 00000001 )
  7F8:  		Call  UseIdleAnimation  ( .Actor:Self .True )
  80C:  		Return
  814:  	EndCaseGroup
  81C:  EndSwitch
  824:  Call  SetAnimation      ( .Actor:Self 00000003 00100015 )
  83C:  Call  SetPartJumpGravity    ( .Actor:Self 00000003 *Fixed[1.5] )
  854:  Call  SetGoalToTarget   ( .Actor:Self )
  864:  Call  GetGoalPos        ( .Actor:Self *Var0 *Var1 *Var2 )
  880:  Call  JumpPartTo        ( .Actor:Self 00000003 *Var0 *Var1 *Var2  20` .True )
  8A8:  Thread
  8B0:  	Add   *Var0  FFFFFFCE 
  8C0:  	Call  JumpPartTo        ( .Actor:Self 00000003 *Var0  0` *Var2  15` .True )
  8E8:  	Call  SetPartFlagBits   ( .Actor:Self 00000003 00000001 .True )
  904:  EndThread
  90C:  Call  GetActorVar   ( .Actor:Self 00000001 *Var9 )
  924:  Switch  *Var9 
  930:  	Case  ==  00000000 
  93C:  		Wait  2`
  948:  		Call  EnemyDamageTarget ( .Actor:Self *Var0 ~Flags:DamageType:NoContact 00000000 00000000 00000003 00000020 )
  970:  	Case  ==  00000001 
  97C:  		Wait  2`
  988:  		Call  EnemyDamageTarget ( .Actor:Self *Var0 ~Flags:DamageType:NoContact 00000000 00000000 00000004 00000020 )
  9B0:  	Case  ==  00000002 
  9BC:  		Wait  2`
  9C8:  		Call  EnemyDamageTarget ( .Actor:Self *Var0 ~Flags:DamageType:NoContact 00000000 00000000 00000005 00000020 )
  9F0:  EndSwitch
  9F8:  Switch  *Var0 
  A04:  	CaseOR  ==  .HitResult:Hit % 0
  A10:  	CaseOR  ==  .HitResult:QuakeImmune % 2
  A1C:  		Wait  15`
  A28:  		Call  YieldTurn ( )
  A34:  		Call  UseBattleCamPreset    ( 00000002 )
  A44:  		Call  MoveBattleCamOver (  8` )
  A54:  		Call  SetAnimation      ( .Actor:Self 00000001 00100003 )
  A6C:  		Call  SetGoalToHome     ( .Actor:Self )
  A7C:  		Call  FlyToGoal ( .Actor:Self  30`  0` .Easing:CosInOut )
  A98:  	EndCaseGroup
  AA0:  EndSwitch
  AA8:  Call  EnableIdleScript  ( .Actor:Self 00000001 )
  ABC:  Call  UseIdleAnimation  ( .Actor:Self .True )
  AD0:  Return
  AD8:  End
}

#new:Script $Script_NextTurn_80229658_03 {
    0:  Call  GetBattlePhase    ( *Var0 )
   10:  Switch  *Var0 
   1C:  	Case  ==  0000000C 
   28:  		Call  GetActorVar   ( .Actor:Self 00000002 *Var0 )
   40:  		If  *Var0  >  00000000 
   50:  			Sub   *Var0  00000001 
   60:  			Call  SetActorVar   ( .Actor:Self 00000002 *Var0 )
   78:  			BreakCase
   80:  		EndIf
   88:  		SetConst  *Var0  00000001 
   98:  		SetConst  *Var1  0010000A 
   A8:  		ExecWait  $Script_8021E118_03 
   B4:  		Return
   BC:  EndSwitch
   C4:  Return
   CC:  End
}

#new:SpecialFormation $SpecialFormation_8022972C_03 {
$LeeLakilester_03 $Vector3D_8021E940_03 00000000 00000000 00000000 00000000 00000000 
}

#new:Script $Script_CopyPartner_03 {
    0:  Call  UseIdleAnimation  ( .Actor:Self .False )
   14:  Call  EnableIdleScript  ( .Actor:Self 00000000 )
   28:  Call  UseBattleCamPreset    ( 0000000E )
   38:  Call  BattleCamTargetActor  ( .Actor:Self )
   48:  Call  MoveBattleCamOver (  15` )
   58:  Wait  15`
   64:  Call  ActorSpeak        ( 00020027 .Actor:Self 00000001 00A40006 00A40003 ) % I bet you've never seen a move like this before!
   84:  Wait  10`
   90:  Call  PlaySoundAtActor  ( .Actor:Self 000020B8 )
   A4:  Call  SetAnimation      ( .Actor:Self 00000001 00A40007 )
   BC:  Call  GetActorPos       ( .Actor:Self *Var0 *Var1 *Var2 )
   D8:  Call  GetStatusFlags    ( .Actor:Self *VarA )
   EC:  If  *VarA  &  ~Flags:StatusFlags:Shrink % 80000
   FC:  	Add   *Var1  00000008 
  10C:  	SetF  *Var3  *Fixed[0.4] 
  11C:  Else
  124:  	Add   *Var1  00000014 
  134:  	SetF  *Var3  *Fixed[1.0] 
  144:  EndIf
  14C:  Call  PlayEffect    ( 00000013 00000001 *Var0 *Var1 *Var2 *Var3 00000028 00000000 00000000 00000000 00000000 00000000 00000000 00000000 )
  190:  Call  $Function_8021973C_03 ( )
  19C:  Call  MakeLerp  ( 00000000 000000C8 00000014 .Easing:Linear )
  1B8:  Label  0
  1C4:  Call  UpdateLerp ( )
  1D0:  Call  $Function_80219780_03 ( *Var0 )
  1E0:  Wait  1`
  1EC:  If  *Var1  ==  00000001 
  1FC:  	Goto  0
  208:  EndIf
  210:  Wait  10`
  21C:  Call  $Function_GetPartner_03   ( *Var5 *Var6 )
  230:  Call  $Function_80218100_03 ( )
  23C:  Call  $Function_80219824_03     ( *Var5 )
  24C:  Switch  *Var5 
  258:  	Case  ==  00000001 
  264:  		Call  SummonEnemy   ( $SpecialFormation_80220524_03 00000000 )
  278:  	Case  ==  00000002 
  284:  		Call  SummonEnemy   ( $SpecialFormation_80222274_03 00000000 )
  298:  	Case  ==  00000003 
  2A4:  		Call  SummonEnemy   ( $SpecialFormation_8022336C_03 00000000 )
  2B8:  	Case  ==  00000004 
  2C4:  		Call  SummonEnemy   ( $SpecialFormation_802243F4_03 00000000 )
  2D8:  	Case  ==  00000009 
  2E4:  		Call  SummonEnemy   ( $SpecialFormation_80225958_03 00000000 )
  2F8:  	Case  ==  00000006 
  304:  		Call  SummonEnemy   ( $SpecialFormation_80226960_03 00000000 )
  318:  	Case  ==  00000007 
  324:  		Call  SummonEnemy   ( $SpecialFormation_802283F0_03 00000000 )
  338:  	Case  ==  00000008 
  344:  		Call  SummonEnemy   ( $SpecialFormation_8022972C_03 00000000 )
  358:  EndSwitch
  360:  Set   *VarA  *Var0 
  370:  Call  CopyStatusEffects ( .Actor:Self *VarA )
  384:  Call  PlaySoundAtActor  ( .Actor:Self .Sound:SmokeBurst )
  398:  Thread
  3A0:  	Call  GetActorPos   ( .Actor:Self *Var0 *Var1 *Var2 )
  3BC:  	Add   *Var1  00000003 
  3CC:  	Add   *Var2  00000005 
  3DC:  	Loop  00000003 
  3E8:  		Call  PlayEffect    ( ~FX:BigSmokePuff *Var0 *Var1 *Var2 00000000 00000000 00000000 00000000 00000000 00000000 00000000 00000000 00000000 00000000 )
  42C:  		Wait  3`
  438:  	EndLoop
  440:  EndThread
  448:  Wait  5`
  454:  Call  GetActorPos   ( .Actor:Self *Var0 *Var1 *Var2 )
  470:  Call  SetActorPos   ( *VarA *Var0 *Var1 *Var2 )
  48C:  Call  SetPartFlagBits   ( .Actor:Self 00000001 00020001 .True )
  4A8:  Call  SetPartFlagBits   ( .Actor:Self 00000001 00800000 .False )
  4C4:  Call  SetActorFlagBits  ( .Actor:Self 00400004 .True )
  4DC:  Call  GetActorHP    ( .Actor:Self *Var0 )
  4F0:  Call  SetEnemyHP    ( *VarA *Var0 )
  504:  Call  CopyBuffs     ( .Actor:Self *VarA )
  518:  Call  GetOwnerID    ( *Var0 )
  528:  Call  SetActorVar   ( *VarA 00000000 *Var0 )
  540:  Call  SetActorVar   ( *VarA 00000001 *Var6 )
  558:  Wait  20`
  564:  Call  UseBattleCamPreset    ( 00000002 )
  574:  Call  MoveBattleCamOver (  20` )
  584:  Thread
  58C:  	Call  MakeLerp  ( 000000C8 00000000 00000014 .Easing:Linear )
  5A8:  	Label  1
  5B4:  	Call  UpdateLerp ( )
  5C0:  	Call  $Function_80219780_03 ( *Var0 )
  5D0:  	Wait  1`
  5DC:  	If  *Var1  ==  00000001 
  5EC:  		Goto  1
  5F8:  	EndIf
  600:  EndThread
  608:  Call  SetActorSounds    ( *VarA .ActorSound:Jump 00000000 00000000 )
  624:  Switch  *Var5 
  630:  	Case  ==  00000008 
  63C:  		Call  GetActorPos   ( *VarA *Var0 *Var1 *Var2 )
  658:  		Call  SetActorJumpGravity   ( *VarA *Fixed[0.01] )
  66C:  		Call  SetGoalPos    ( *VarA *Var0  10` *Var2 )
  688:  		Call  JumpToGoal    ( *VarA  10` .False .False .False )
  6A8:  		Wait  10`
  6B4:  	CaseOR  ==  00000006 
  6C0:  	CaseOR  ==  00000009 
  6CC:  	CaseOR  ==  00000004 
  6D8:  		Call  GetActorPos   ( *VarA *Var0 *Var1 *Var2 )
  6F4:  		Call  SetActorJumpGravity   ( *VarA *Fixed[0.01] )
  708:  		Call  SetGoalPos    ( *VarA *Var0  30` *Var2 )
  724:  		Call  JumpToGoal    ( *VarA  20` .False .False .False )
  744:  	EndCaseGroup
  74C:  EndSwitch
  754:  Call  GetActorPos   ( *VarA *Var0 *Var1 *Var2 )
  770:  Call  ForceHomePos  ( *VarA *Var0 *Var1 *Var2 )
  78C:  Call  HPBarToHome   ( *VarA )
  79C:  Call  ResetActorSounds  ( *VarA .ActorSound:Jump )
  7B0:  Wait  20`
  7BC:  Call  SetActorPos   ( .Actor:Self  0`  -1000`  0` )
  7D8:  Call  ForceHomePos  ( .Actor:Self  0`  -1000`  0` )
  7F4:  Call  HPBarToHome   ( .Actor:Self )
  804:  Call  SetActorVar   ( .Actor:Self 00000008 00000001 )
  81C:  Call  EnableIdleScript  ( .Actor:Self 00000001 )
  830:  Call  UseIdleAnimation  ( .Actor:Self .True )
  844:  Return
  84C:  End
}

#new:Script $Script_TakeTurn_80229F9C_03 {
    0:  Call  GetActorVar   ( .Actor:Self 00000008 *Var0 )
   18:  Switch  *Var0 
   24:  	Case  ==  00000000 
   30:  		ExecWait  $Script_CopyPartner_03 
   3C:  	Case  ==  00000001 
   48:  	Case  ==  00000002 
   54:  		ExecWait  $Script_FlyingTackle_03 
   60:  	Case  ==  00000003 
   6C:  		Call  SetActorVar   ( .Actor:Self 00000008 00000002 )
   84:  EndSwitch
   8C:  Return
   94:  End
}

#new:Script $Script_NextTurn_8022A038_03 {
    0:  Call  UseIdleAnimation  ( .Actor:Self .False )
   14:  Call  EnableIdleScript  ( .Actor:Self 00000000 )
   28:  Call  GetBattlePhase    ( *Var0 )
   38:  Switch  *Var0 
   44:  	Case  ==  0000000C 
   50:  		Call  GetStatusFlags    ( .Actor:Self *Var0 )
   64:  		If  *Var0  &  ~Flags:StatusFlags:Sleep|Paralyze|Poison|Dizzy|Shrink|Stone|Stop % 3F1000
   74:  			BreakCase
   7C:  		EndIf
   84:  		Call  GetActorHP    ( .Actor:Self *Var0 )
   98:  		Call  GetEnemyMaxHP ( .Actor:Self *Var1 )
   AC:  		Div   *Var1  00000002 
   BC:  		If  *Var0  <=  *Var1 
   CC:  			Call  UseBattleCamPreset    ( 00000002 )
   DC:  			Call  MoveBattleCamOver     (  10` )
   EC:  			Call  GetActorVar   ( .Actor:Self 00000008 *Var0 )
  104:  			If  *Var0  ==  00000001 
  114:  				Call  ActorSpeak    ( 00020028 .Actor:Enemy1 00000001 00A40006 00A40003 ) % Ooh... You are strong, I'll give you that.
  134:  			Else
  13C:  				Call  ActorSpeak    ( 00020028 .Actor:Self 00000001 00A40006 00A40003 ) % Ooh... You are strong, I'll give you that.
  15C:  			EndIf
  164:  			BreakCase
  16C:  		EndIf
  174:  		Call  GetPlayerHP   ( *Var0 )
  184:  		If  *Var0  <=  00000005 
  194:  			Call  UseBattleCamPreset    ( 00000002 )
  1A4:  			Call  MoveBattleCamOver     (  10` )
  1B4:  			Call  ActorSpeak    ( 00020029 .Actor:Self 00000001 00A40006 00A40003 ) % Mario, now I will finish you.
  1D4:  			BreakCase
  1DC:  		EndIf
  1E4:  EndSwitch
  1EC:  Call  EnableIdleScript  ( .Actor:Self 00000001 )
  200:  Call  UseIdleAnimation  ( .Actor:Self .True )
  214:  Return
  21C:  End
}

#new:ConstDouble $ConstDouble_80232AF0_03 {
47.000000d
}

#new:ConstDouble $ConstDouble_80232AF8_03 {
1.120000d
}

#new:ConstDouble $ConstDouble_80232B00_03 {
0.530000d
}

#new:ConstDouble $ConstDouble_80232B08_03 {
47.000000d
}

#new:ConstDouble $ConstDouble_80232B10_03 {
0.800000d
}

#new:ConstDouble $ConstDouble_80232B18_03 {
0.530000d
}

#new:ConstDouble $ConstDouble_80232B20_03 {
0.800000d
}

#new:ConstDouble $ConstDouble_80232B28_03 {
16.500000d
}

#new:ConstDouble $ConstDouble_80232B30_03 {
33.000000d
}

#new:ConstDouble $ConstDouble_80232B38_03 {
4.800000d
}

#new:JumpTable $JumpTable_80232B40_03 {
$Function_80219824_03[54] $Function_80219824_03[60] $Function_80219824_03[6C] $Function_80219824_03[78] 
$Function_80219824_03[B0] $Function_80219824_03[90] $Function_80219824_03[9C] $Function_80219824_03[A8] 
$Function_80219824_03[84] 
}

