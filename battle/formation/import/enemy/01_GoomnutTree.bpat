% Automatically dumped from section 01

#new:Actor $01_GoomnutTree {
% stats
[Index]        93b 
[Level]         1`b 
[MaxHP]        -1`b 
[Coins]         0`b 
[Flags]       02004004 
[StatusTable] $StatusTable_802232F0_01 
% ai
[PartsCount]    5`s 
[PartsTable]  $PartsTable_8022339C_01 
[Script]      $Script_Init_80223488_01 
% move effectiveness
[Escape]        0`b 
[Item]          0`b 
[AirLift]       0`b 
[Hurricane]     0`b % Bow's "Spook" as well
[UpAndAway]     0`b 
[PowerBounce]   0`b 
[SpinSmash]     4`b % weight (0-4)
% ui positions
[Size]          0`b   0`b % width height
[HealthBar]     0`b   0`b % dx dy
[StatusTurn]    0`b   0`b % dx dy
[StatusIcon]    0`b   0`b % dx dy
}

#new:Function $Function_80218B10_01 {
    0:  ADDIU     SP, SP, FFD0
    4:  SDC1      F20, 18 (SP)
    8:  MTC1      A1, F20
    C:  SDC1      F22, 20 (SP)
   10:  MTC1      A2, F22
   14:  SW        S0, 10 (SP)
   18:  SDC1      F24, 28 (SP)
   1C:  MTC1      A3, F24
   20:  SW        RA, 14 (SP)
   24:  JAL       ~Func:guMtxIdentF
   28:  COPY      S0, A0
   2C:  MUL.S     F22, F20, F22
   30:  NOP
   34:  MUL.S     F20, F20, F24
   38:  NOP
   3C:  LIF       F0, 1.0
   44:  NOP
   48:  SWC1      F0, 14 (S0)
   4C:  SWC1      F22, 10 (S0)
   50:  SWC1      F20, 18 (S0)
   54:  LW        RA, 14 (SP)
   58:  LW        S0, 10 (SP)
   5C:  LDC1      F24, 28 (SP)
   60:  LDC1      F22, 20 (SP)
   64:  LDC1      F20, 18 (SP)
   68:  JR        RA
   6C:  ADDIU     SP, SP, 30
}

#new:Function $Function_80218B80_01 {
    0:  ADDIU     SP, SP, FF78
    4:  SW        S1, 54 (SP)
    8:  COPY      S1, A0
    C:  SW        RA, 5C (SP)
   10:  SW        S2, 58 (SP)
   14:  SW        S0, 50 (SP)
   18:  SDC1      F28, 80 (SP)
   1C:  SDC1      F26, 78 (SP)
   20:  SDC1      F24, 70 (SP)
   24:  SDC1      F22, 68 (SP)
   28:  SDC1      F20, 60 (SP)
   2C:  LW        S0, C (S1)
   30:  LW        A1, 0 (S0)
   34:  JAL       ~Func:get_variable
   38:  ADDIU     S0, S0, 4
   3C:  JAL       ~Func:get_model_list_index_from_tree_index
   40:  COPY      A0, V0
   44:  LW        A1, 0 (S0)
   48:  ADDIU     S0, S0, 4
   4C:  COPY      A0, S1
   50:  JAL       ~Func:get_float_variable
   54:  COPY      S2, V0
   58:  LW        A1, 0 (S0)
   5C:  ADDIU     S0, S0, 4
   60:  COPY      A0, S1
   64:  JAL       ~Func:get_float_variable
   68:  MOV.S     F28, F0
   6C:  LW        A1, 0 (S0)
   70:  ADDIU     S0, S0, 4
   74:  COPY      A0, S1
   78:  JAL       ~Func:get_float_variable
   7C:  MOV.S     F26, F0
   80:  COPY      A0, S1
   84:  LW        A1, 0 (S0)
   88:  JAL       ~Func:get_float_variable
   8C:  MOV.S     F22, F0
   90:  COPY      A0, S2
   94:  JAL       ~Func:get_model_from_list_index
   98:  MOV.S     F24, F0
   9C:  COPY      S1, V0
   A0:  LHU       V0, 0 (S1)
   A4:  ANDI      V0, V0, 400
   A8:  BNE       V0, R0, .o124
   AC:  ADDIU     S0, S1, 58
   B0:  MTC1      R0, F20
   B4:  MFC1      A2, F22
   B8:  MFC1      A1, F20
   BC:  MFC1      A3, F20
   C0:  JAL       ~Func:guTranslateF
   C4:  COPY      A0, S0
   C8:  MFC1      A1, F28
   CC:  MFC1      A2, F26
   D0:  MFC1      A3, F24
   D4:  JAL       $Function_80218B10_01
   D8:  ADDIU     A0, SP, 10
   DC:  ADDIU     A0, SP, 10
   E0:  COPY      A1, S0
   E4:  JAL       ~Func:guMtxCatF
   E8:  COPY      A2, S0
   EC:  ADDIU     A0, SP, 10
   F0:  NEG.S     F22, F22
   F4:  MFC1      A1, F20
   F8:  MFC1      A2, F22
   FC:  JAL       ~Func:guTranslateF
  100:  COPY      A3, A1
  104:  ADDIU     A0, SP, 10
  108:  COPY      A1, S0
  10C:  JAL       ~Func:guMtxCatF
  110:  COPY      A2, A1
  114:  LHU       V0, 0 (S1)
  118:  ORI       V0, V0, 1400
  11C:  BEQ       R0, R0, .o19C
  120:  SH        V0, 0 (S1)
        .o124
  124:  MTC1      R0, F20
  128:  MFC1      A2, F22
  12C:  MFC1      A1, F20
  130:  MFC1      A3, F20
  134:  JAL       ~Func:guTranslateF
  138:  ADDIU     A0, SP, 10
  13C:  ADDIU     A0, SP, 10
  140:  ADDIU     S0, S1, 58
  144:  COPY      A1, S0
  148:  JAL       ~Func:guMtxCatF
  14C:  COPY      A2, S0
  150:  MFC1      A1, F28
  154:  MFC1      A2, F26
  158:  MFC1      A3, F24
  15C:  JAL       $Function_80218B10_01
  160:  ADDIU     A0, SP, 10
  164:  ADDIU     A0, SP, 10
  168:  COPY      A1, S0
  16C:  JAL       ~Func:guMtxCatF
  170:  COPY      A2, S0
  174:  ADDIU     A0, SP, 10
  178:  NEG.S     F22, F22
  17C:  MFC1      A1, F20
  180:  MFC1      A2, F22
  184:  JAL       ~Func:guTranslateF
  188:  COPY      A3, A1
  18C:  ADDIU     A0, SP, 10
  190:  COPY      A1, S0
  194:  JAL       ~Func:guMtxCatF
  198:  COPY      A2, A1
        .o19C
  19C:  LW        RA, 5C (SP)
  1A0:  LW        S2, 58 (SP)
  1A4:  LW        S1, 54 (SP)
  1A8:  LW        S0, 50 (SP)
  1AC:  LDC1      F28, 80 (SP)
  1B0:  LDC1      F26, 78 (SP)
  1B4:  LDC1      F24, 70 (SP)
  1B8:  LDC1      F22, 68 (SP)
  1BC:  LDC1      F20, 60 (SP)
  1C0:  LI        V0, 2
  1C4:  JR        RA
  1C8:  ADDIU     SP, SP, 88
}

#new:IdleAnimations $IdleAnimations_802232D0_01 {
.Status:Normal    00640000
.Status:End
}

#new:DefenseTable $DefenseTable_802232DC_01 {
.Element:Normal 00000000
.Element:Hammer 00000000
.Element:End
}

#new:StatusTable $StatusTable_802232F0_01 {
.Status:Normal      0`
.Status:Default     0`
.Status:Sleep       0`
.Status:Poison      0`
.Status:Frozen      0`
.Status:Dizzy       0`
.Status:Fear        0`
.Status:Static      0`
.Status:Paralyze    0`
.Status:Shrink      0`
.Status:Stop        0`
.Status:DefaultTurnMod    0`
.Status:SleepTurnMod      0`
.Status:PoisonTurnMod     0`
.Status:FrozenTurnMod     0`
.Status:DizzyTurnMod      0`
.Status:FearTurnMod       0`
.Status:StaticTurnMod     0`
.Status:ParalyzeTurnMod   0`
.Status:ShrinkTurnMod     0`
.Status:StopTurnMod       0`
.Status:End
}

#new:PartsTable $PartsTable_8022339C_01 {
00800000 01000000 000A00FF 00000000 $DefenseTable_802232DC_01 00000000 00000000 00000000 00000000 
00120000 02000000 000A00FF $IdleAnimations_802232D0_01 $DefenseTable_802232DC_01 00000000 00000000 00000000 00000000 
00120000 03000000 000A00FF $IdleAnimations_802232D0_01 $DefenseTable_802232DC_01 00000000 00000000 00000000 00000000 
00120000 04000000 000A00FF $IdleAnimations_802232D0_01 $DefenseTable_802232DC_01 00000000 00000000 00000000 00000000 
00120000 05000000 000A00FF $IdleAnimations_802232D0_01 $DefenseTable_802232DC_01 00000000 00000000 00000000 00000000 
}

#new:Script $Script_Init_80223488_01 {
    0:  Call  BindTakeTurn  ( .Actor:Self $Script_TakeTurn_80223804_01 )
   14:  Call  BindIdle      ( .Actor:Self $Script_Idle_80223678_01 )
   28:  Call  BindHandleEvent       ( .Actor:Self $Script_HandleEvent_80223688_01 )
   3C:  Call  SetActorVar   ( .Actor:Self 00000000 00000000 )
   54:  Call  SetActorVar   ( .Actor:Self 00000001 00000000 )
   6C:  Call  SetActorVar   ( .Actor:Self 00000002 00000000 )
   84:  Call  SetActorVar   ( .Actor:Self 00000003 00000000 )
   9C:  Call  SetActorVar   ( .Actor:Self 00000004 00000000 )
   B4:  Call  SetActorVar   ( .Actor:Self 00000005 00000000 )
   CC:  Call  SetActorVar   ( .Actor:Self 00000006 00000001 )
   E4:  Call  SetPartPos    ( .Actor:Self 00000002  10`  140`  10` )
  104:  Call  SetPartPos    ( .Actor:Self 00000003  -95`  140`  10` )
  124:  Call  SetPartPos    ( .Actor:Self 00000004  -115`  130`  0` )
  144:  Call  SetPartPos    ( .Actor:Self 00000005  -65`  118`  5` )
  164:  Call  SetPartScale  ( .Actor:Self 00000003 *Fixed[0.5] *Fixed[0.5] *Fixed[1.0] )
  184:  Call  SetPartScale  ( .Actor:Self 00000004 *Fixed[0.5] *Fixed[0.5] *Fixed[1.0] )
  1A4:  Call  SetPartScale  ( .Actor:Self 00000005 *Fixed[0.5] *Fixed[0.5] *Fixed[1.0] )
  1C4:  Call  SetPartTargetFlagBits ( .Actor:Self 00000001 00000004 .True )
  1E0:  Return
  1E8:  End
}

#new:Script $Script_Idle_80223678_01 {
    0:  Return
    8:  End
}

#new:Script $Script_HandleEvent_80223688_01 {
    0:  Call  UseIdleAnimation  ( .Actor:Self .False )
   14:  Call  EnableIdleScript  ( .Actor:Self 00000000 )
   28:  Call  GetLastElement    ( *VarE )
   38:  Call  GetLastEvent      ( .Actor:Self *Var0 )
   4C:  Switch  *Var0 
   58:  	CaseOR  ==  .Event:HitCombo % 9
   64:  	CaseOR  ==  00000017 % 17
   70:  		ExecWait  $Script_80223D90_01 
   7C:  	EndCaseGroup
   84:  	CaseOR  ==  .Event:Hit % A
   90:  	CaseOR  ==  .Event:Immune % 19
   9C:  		ExecWait  $Script_80223D90_01 
   A8:  		ExecWait  $Script_80223DBC_01 
   B4:  	EndCaseGroup
   BC:  	Case  ==  .Event:SpinSmashHit % B
   C8:  		ExecWait  $Script_80223D90_01 
   D4:  		ExecWait  $Script_80223DBC_01 
   E0:  	Case  ==  .Event:Death % 20
   EC:  		ExecWait  $Script_80223D90_01 
   F8:  	Case  ==  .Event:SpinSmashDeath % 21
  104:  		ExecWait  $Script_80223D90_01 
  110:  	Case  ==  .Event:SpikeContact % 2A
  11C:  	Case  ==  .Event:ShockHit % 2F
  128:  	Case  ==  .Event:EndFirstStrike % 35
  134:  	Default
  13C:  EndSwitch
  144:  Call  EnableIdleScript  ( .Actor:Self 00000001 )
  158:  Call  UseIdleAnimation  ( .Actor:Self .True )
  16C:  Return
  174:  End
}

#new:Script $Script_TakeTurn_80223804_01 {
    0:  Switch  *Var0 
    C:  	Case  ==  00000006 
   18:  		Return
   20:  EndSwitch
   28:  Switch  *Var0 
   34:  	Case  ==  00000000 
   40:  	Case  ==  0000000A 
   4C:  EndSwitch
   54:  Call  EnableIdleScript  ( .Actor:Self 00000001 )
   68:  Call  UseIdleAnimation  ( .Actor:Self .True )
   7C:  Return
   84:  End
}

#new:Script $Script_80223890_01 {
    0:  SetTimescale  *Fixed[2.0] 
    C:  UseIntBuffer  *Var0 
   18:  Get4Int  *Var1 *Var2 *Var3 *Var4 
   30:  Get1Int  *Var5 
   3C:  Call  GetActorPos   ( .Actor:Player *Var6 *VarF *Var8 )
   58:  Call  PlaySound     ( 00000165 )
   68:  Call  PlaySound     ( 00000166 )
   78:  Thread
   80:  	Set   *Flag[00]  .False 
   90:  	If  *Var1  !=  00000000 
   A0:  		Wait  1`
   AC:  		Loop  00000005 
   B8:  			UseIntBuffer  *Var1 
   C4:  			Get1Int  *Var2 
   D0:  			Loop  *Var2 
   DC:  				Get1Int  *Var3 
   E8:  				Call  $Function_80218B80_01 ( *Var3 *Fixed[0.1] *Fixed[0.2] *VarF 00000000 )
  108:  				If  *Flag[00]  ==  .False 
  118:  					Set   *Flag[00]  .True 
  128:  					Call  PlaySoundAtModel  ( *Var3 00000166 00000000 )
  140:  				EndIf
  148:  			EndLoop
  150:  			Wait  1`
  15C:  			UseIntBuffer  *Var1 
  168:  			Get1Int  *Var2 
  174:  			Loop  *Var2 
  180:  				Get1Int  *Var3 
  18C:  				Call  $Function_80218B80_01 ( *Var3 *Fixed[0.1] *Fixed[-0.2] *VarF 00000000 )
  1AC:  			EndLoop
  1B4:  			Wait  1`
  1C0:  		EndLoop
  1C8:  		UseIntBuffer  *Var1 
  1D4:  		Get1Int  *Var2 
  1E0:  		Loop  *Var2 
  1EC:  			Get1Int  *Var3 
  1F8:  			Call  TranslateModel    ( *Var3 00000000 00000000 00000000 )
  214:  		EndLoop
  21C:  		Wait  1`
  228:  	EndIf
  230:  EndThread
  238:  Thread
  240:  	Set   *Flag[00]  .False 
  250:  	If  *Var2  !=  00000000 
  260:  		Loop  00000005 
  26C:  			UseIntBuffer  *Var2 
  278:  			Get1Int  *Var3 
  284:  			Loop  *Var3 
  290:  				Get1Int  *Var4 
  29C:  				Call  $Function_80218B80_01 ( *Var4 *Fixed[0.1] *Fixed[0.2] *VarF 00000000 )
  2BC:  				If  *Flag[00]  ==  .False 
  2CC:  					Set   *Flag[00]  .True 
  2DC:  					Call  PlaySoundAtModel  ( *Var4 00000165 00000000 )
  2F4:  				EndIf
  2FC:  			EndLoop
  304:  			Wait  1`
  310:  			UseIntBuffer  *Var2 
  31C:  			Get1Int  *Var3 
  328:  			Loop  *Var3 
  334:  				Get1Int  *Var4 
  340:  				Call  $Function_80218B80_01 ( *Var4 *Fixed[0.1] *Fixed[-0.2] *VarF 00000000 )
  360:  			EndLoop
  368:  			Wait  1`
  374:  		EndLoop
  37C:  		UseIntBuffer  *Var2 
  388:  		Get1Int  *Var3 
  394:  		Loop  *Var3 
  3A0:  			Get1Int  *Var4 
  3AC:  			Call  TranslateModel    ( *Var4 00000000 00000000 00000000 )
  3C8:  		EndLoop
  3D0:  		Wait  1`
  3DC:  	EndIf
  3E4:  EndThread
  3EC:  Thread
  3F4:  	If  *Var4  !=  00000000 
  404:  		UseIntBuffer  *Var4 
  410:  		Get1Int  *Var5 
  41C:  		Loop  *Var5 
  428:  			Get3Int  *Var6 *Var7 *Var8 
  43C:  			Call  PlayEffect    ( ~FX:DropLeaves:Random *Var6 *Var7 *Var8 00000064 00000000 00000000 00000000 00000000 00000000 00000000 00000000 00000000 )
  480:  		EndLoop
  488:  	EndIf
  490:  EndThread
  498:  Wait  15`
  4A4:  Return
  4AC:  End
}

#new:Script $Script_80223D90_01 {
    0:  Set   *Var0  $???_80223D7C_01 
   10:  ExecWait  $Script_80223890_01 
   1C:  Return
   24:  End
}

#new:Script $Script_80223DBC_01 {
    0:  Call  PlayEffect    ( ~FX:DropLeaves:Random FFFFFFE7 00000078 00000000 0000005A 00000000 00000000 00000000 00000000 00000000 00000000 00000000 00000000 )
   44:  Call  GetActorVar   ( .Actor:Self 00000005 *Var0 )
   5C:  If  *Var0  !=  00000000 
   6C:  	Return
   74:  EndIf
   7C:  Call  UseBattleCamPreset    ( 0000000F )
   8C:  Call  BattleCamTargetActor  ( .Actor:Enemy0 )
   9C:  Wait  20`
   A8:  Call  SetActorVar   ( .Actor:Self 00000005 00000001 )
   C0:  Call  ActorExists   ( .Actor:Enemy0 *Var0 )
   D4:  If  *Var0  ==  .False 
   E4:  	Call  SetGoalPos        ( .Actor:Self  10`  0`  10` )
  100:  	Call  SetPartFlagBits   ( .Actor:Self 00000002 00000001 .False )
  11C:  	Call  PlaySoundAtPart   ( .Actor:Self 00000002 00000301 )
  134:  	Call  SetPartJumpGravity    ( .Actor:Self 00000002 *Fixed[0.8] )
  14C:  	Call  SetPartMoveSpeed  ( .Actor:Self 00000002 *Fixed[4.0] )
  164:  	Call  FallPartTo        ( .Actor:Self 00000002  10`  20`  10`  20` )
  188:  	Call  JumpPartTo        ( .Actor:Self 00000002  30`  20`  10`  10` .True )
  1B0:  	Call  JumpPartTo        ( .Actor:Self 00000002  40`  20`  10`  5` .True )
  1D8:  	Loop  00000014 
  1E4:  		Call  SetPartFlagBits   ( .Actor:Self 00000002 00000001 .False )
  200:  		Wait  1`
  20C:  		Call  SetPartFlagBits   ( .Actor:Self 00000002 00000001 .True )
  228:  		Wait  1`
  234:  	EndLoop
  23C:  	Return
  244:  EndIf
  24C:  Call  PlaySoundAtPart   ( .Actor:Self 00000002 00000301 )
  264:  Call  SetPartJumpGravity    ( .Actor:Self 00000002 *Fixed[0.8] )
  27C:  Call  SetPartMoveSpeed  ( .Actor:Self 00000002 *Fixed[4.0] )
  294:  Call  GetStatusFlags    ( .Actor:Enemy0 *Var0 )
  2A8:  If  *Var0  !&  ~Flags:StatusFlags:Shrink % 80000
  2B8:  	Call  FallPartTo    ( .Actor:Self 00000002  10`  80`  10`  10` )
  2DC:  Else
  2E4:  	Call  FallPartTo    ( .Actor:Self 00000002  10`  32`  10`  10` )
  308:  EndIf
  310:  Call  UseBattleCamPreset    ( 00000002 )
  320:  Call  MoveBattleCamOver (  30` )
  330:  Call  SetOwnerTarget    ( .Actor:Enemy0 00000002 )
  344:  Call  SetGoalToTarget   ( .Actor:Self )
  354:  Call  EnemyDamageTarget ( .Actor:Self *Var0 ~Flags:DamageType:IgnoreDefense 00000000 00000000 00000003 00000020 )
  37C:  Call  ActorExists       ( .Actor:Enemy1 *Var0 )
  390:  If  *Var0  ==  .False 
  3A0:  	Call  GetPartOffset ( .Actor:Self 00000002 *Var0 *Var1 *Var2 )
  3C0:  	Add   *Var0  00000041 
  3D0:  	Set   *Var1  00000014 
  3E0:  	Call  SetPartJumpGravity    ( .Actor:Self 00000002 *Fixed[0.7] )
  3F8:  	Call  JumpPartTo    ( .Actor:Self 00000002 *Var0 *Var1 *Var2  20` .True )
  420:  	Add   *Var0  0000000C 
  430:  	Call  JumpPartTo    ( .Actor:Self 00000002 *Var0 *Var1 *Var2  8` .True )
  458:  	Loop  00000014 
  464:  		Call  SetPartFlagBits   ( .Actor:Self 00000002 00000001 .False )
  480:  		Wait  1`
  48C:  		Call  SetPartFlagBits   ( .Actor:Self 00000002 00000001 .True )
  4A8:  		Wait  1`
  4B4:  	EndLoop
  4BC:  	Return
  4C4:  EndIf
  4CC:  Call  GetActorPos       ( .Actor:Enemy1 *Var0 *Var1 *Var2 )
  4E8:  Call  GetStatusFlags    ( .Actor:Enemy1 *Var3 )
  4FC:  If  *Var3  !&  ~Flags:StatusFlags:Shrink % 80000
  50C:  	Add   *Var1  00000032 
  51C:  Else
  524:  	Add   *Var1  00000014 
  534:  EndIf
  53C:  Call  SetPartJumpGravity    ( .Actor:Self 00000002 *Fixed[0.7] )
  554:  Call  JumpPartTo        ( .Actor:Self 00000002 *Var0 *Var1 *Var2  20` .True )
  57C:  Call  SetOwnerTarget    ( .Actor:Enemy1 00000001 )
  590:  Call  SetGoalToTarget   ( .Actor:Self )
  5A0:  Call  EnemyDamageTarget ( .Actor:Self *Var0 ~Flags:DamageType:IgnoreDefense 00000000 00000000 00000003 00000020 )
  5C8:  Call  ActorExists       ( .Actor:Enemy2 *Var0 )
  5DC:  If  *Var0  ==  .False 
  5EC:  	Call  GetPartOffset ( .Actor:Self 00000002 *Var0 *Var1 *Var2 )
  60C:  	Add   *Var0  00000023 
  61C:  	Set   *Var1  00000014 
  62C:  	Call  SetPartJumpGravity    ( .Actor:Self 00000002 *Fixed[0.7] )
  644:  	Call  JumpPartTo    ( .Actor:Self 00000002 *Var0 *Var1 *Var2  20` .True )
  66C:  	Add   *Var0  0000000C 
  67C:  	Call  JumpPartTo    ( .Actor:Self 00000002 *Var0 *Var1 *Var2  8` .True )
  6A4:  	Loop  00000014 
  6B0:  		Call  SetPartFlagBits   ( .Actor:Self 00000002 00000001 .False )
  6CC:  		Wait  1`
  6D8:  		Call  SetPartFlagBits   ( .Actor:Self 00000002 00000001 .True )
  6F4:  		Wait  1`
  700:  	EndLoop
  708:  	Return
  710:  EndIf
  718:  Call  GetActorPos       ( .Actor:Enemy2 *Var0 *Var1 *Var2 )
  734:  Call  GetStatusFlags    ( .Actor:Enemy2 *Var3 )
  748:  If  *Var3  !&  ~Flags:StatusFlags:Shrink % 80000
  758:  	Add   *Var1  00000032 
  768:  Else
  770:  	Add   *Var1  00000014 
  780:  EndIf
  788:  Call  SetPartJumpGravity    ( .Actor:Self 00000002 *Fixed[0.7] )
  7A0:  Call  JumpPartTo        ( .Actor:Self 00000002 *Var0 *Var1 *Var2  20` .True )
  7C8:  Call  SetOwnerTarget    ( .Actor:Enemy2 00000001 )
  7DC:  Call  SetGoalToTarget   ( .Actor:Self )
  7EC:  Call  EnemyDamageTarget ( .Actor:Self *Var0 ~Flags:DamageType:IgnoreDefense 00000000 00000000 00000003 00000020 )
  814:  Call  GetPartOffset     ( .Actor:Self 00000002 *Var0 *Var1 *Var2 )
  834:  Add   *Var0  00000014 
  844:  Set   *Var1  00000014 
  854:  Call  SetPartJumpGravity    ( .Actor:Self 00000002 *Fixed[0.7] )
  86C:  Call  JumpPartTo        ( .Actor:Self 00000002 *Var0 *Var1 *Var2  20` .True )
  894:  Add   *Var0  0000000C 
  8A4:  Call  JumpPartTo        ( .Actor:Self 00000002 *Var0 *Var1 *Var2  8` .True )
  8CC:  Loop  00000014 
  8D8:  	Call  SetPartFlagBits   ( .Actor:Self 00000002 00000001 .False )
  8F4:  	Wait  1`
  900:  	Call  SetPartFlagBits   ( .Actor:Self 00000002 00000001 .True )
  91C:  	Wait  1`
  928:  EndLoop
  930:  Return
  938:  End
}

