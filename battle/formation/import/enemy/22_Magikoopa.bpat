% Automatically dumped from section 22

#new:Actor $22_Magikoopa {
% stats
[Index]        4Db 
[Level]        26`b 
[MaxHP]        11`b 
[Coins]         2`b 
[Flags]       00000000 
[StatusTable] $StatusTable_80224F38_22 
% ai
[PartsCount]    1`s 
[PartsTable]  $PartsTable_80225090_22 
[Script]      $Script_Init_80225D60_22 
% move effectiveness
[Escape]       40`b 
[Item]         40`b 
[AirLift]      80`b 
[Hurricane]    70`b % Bow's "Spook" as well
[UpAndAway]    95`b 
[PowerBounce]  80`b 
[SpinSmash]     0`b % weight (0-4)
% ui positions
[Size]         36`b  40`b % width height
[HealthBar]     0`b   0`b % dx dy
[StatusTurn]  -10`b  20`b % dx dy
[StatusIcon]   10`b  32`b % dx dy
}

#new:Function $Function_80218200_22 {
    0:  ADDIU     SP, SP, FFA0
    4:  SW        S1, 24 (SP)
    8:  COPY      S1, A0
    C:  SW        RA, 28 (SP)
   10:  SW        S0, 20 (SP)
   14:  SDC1      F30, 58 (SP)
   18:  SDC1      F28, 50 (SP)
   1C:  SDC1      F26, 48 (SP)
   20:  SDC1      F24, 40 (SP)
   24:  SDC1      F22, 38 (SP)
   28:  SDC1      F20, 30 (SP)
   2C:  LW        S0, C (S1)
   30:  LW        A1, 0 (S0)
   34:  JAL       ~Func:get_float_variable
   38:  ADDIU     S0, S0, 4
   3C:  LW        A1, 0 (S0)
   40:  ADDIU     S0, S0, 4
   44:  COPY      A0, S1
   48:  JAL       ~Func:get_float_variable
   4C:  MOV.S     F30, F0
   50:  LW        A1, 0 (S0)
   54:  ADDIU     S0, S0, 4
   58:  COPY      A0, S1
   5C:  JAL       ~Func:get_float_variable
   60:  MOV.S     F20, F0
   64:  LW        A1, 0 (S0)
   68:  ADDIU     S0, S0, 4
   6C:  COPY      A0, S1
   70:  JAL       ~Func:get_float_variable
   74:  MOV.S     F28, F0
   78:  LW        A1, 0 (S0)
   7C:  ADDIU     S0, S0, 4
   80:  COPY      A0, S1
   84:  JAL       ~Func:get_float_variable
   88:  MOV.S     F26, F0
   8C:  LW        A1, 0 (S0)
   90:  ADDIU     S0, S0, 4
   94:  COPY      A0, S1
   98:  JAL       ~Func:get_float_variable
   9C:  MOV.S     F24, F0
   A0:  COPY      A0, S1
   A4:  LW        A1, 0 (S0)
   A8:  JAL       ~Func:get_variable
   AC:  MOV.S     F22, F0
   B0:  LW        A0, 148 (S1)
   B4:  JAL       ~Func:get_actor
   B8:  COPY      S0, V0
   BC:  CVT.D.S   F20, F20
   C0:  MFC1      A1, F30
   C4:  LIF       F1, 2.3125
   CC:  MTC1      R0, F0
   D0:  MFC1      A3, F28
   D4:  ADD.D     F20, F20, F0
   D8:  CLEAR     A0
   DC:  SW        S0, 1C (SP)
   E0:  CVT.S.D   F20, F20
   E4:  MFC1      A2, F20
   E8:  COPY      S0, V0
   EC:  SWC1      F26, 10 (SP)
   F0:  SWC1      F24, 14 (SP)
   F4:  JAL       ~Func:playFX_12
   F8:  SWC1      F22, 18 (SP)
   FC:  COPY      A0, V0
  100:  LB        V1, 210 (S0)
  104:  LI        V0, A
  108:  BNE       V1, V0, .o128
  10C:  NOP
  110:  LW        V0, C (A0)
  114:  LIF       F0, 0.39804688
  120:  NOP
  124:  SWC1      F0, 28 (V0)
        .o128
  128:  LW        RA, 28 (SP)
  12C:  LW        S1, 24 (SP)
  130:  LW        S0, 20 (SP)
  134:  LDC1      F30, 58 (SP)
  138:  LDC1      F28, 50 (SP)
  13C:  LDC1      F26, 48 (SP)
  140:  LDC1      F24, 40 (SP)
  144:  LDC1      F22, 38 (SP)
  148:  LDC1      F20, 30 (SP)
  14C:  LI        V0, 2
  150:  JR        RA
  154:  ADDIU     SP, SP, 60
}

#new:Function $Function_80218358_22 {
    0:  ADDIU     SP, SP, FFB8
    4:  SW        S2, 18 (SP)
    8:  COPY      S2, A0
    C:  SW        RA, 28 (SP)
   10:  SW        S5, 24 (SP)
   14:  SW        S4, 20 (SP)
   18:  SW        S3, 1C (SP)
   1C:  SW        S1, 14 (SP)
   20:  SW        S0, 10 (SP)
   24:  SDC1      F24, 40 (SP)
   28:  SDC1      F22, 38 (SP)
   2C:  SDC1      F20, 30 (SP)
   30:  LW        S0, C (S2)
   34:  LW        S4, 0 (S0)
   38:  ADDIU     S0, S0, 4
   3C:  JAL       ~Func:get_variable
   40:  COPY      A1, S4
   44:  COPY      S3, V0
   48:  LW        S5, 0 (S0)
   4C:  ADDIU     S0, S0, 4
   50:  LW        A1, 0 (S0)
   54:  ADDIU     S0, S0, 4
   58:  JAL       ~Func:get_float_variable
   5C:  COPY      A0, S2
   60:  LW        A1, 0 (S0)
   64:  ADDIU     S0, S0, 4
   68:  COPY      A0, S2
   6C:  JAL       ~Func:get_float_variable
   70:  MOV.S     F24, F0
   74:  LW        A1, 0 (S0)
   78:  ADDIU     S0, S0, 4
   7C:  COPY      A0, S2
   80:  JAL       ~Func:get_variable
   84:  MOV.S     F20, F0
   88:  LW        A1, 0 (S0)
   8C:  ADDIU     S0, S0, 4
   90:  COPY      A0, S2
   94:  JAL       ~Func:get_variable
   98:  COPY      S1, V0
   9C:  COPY      A0, S2
   A0:  LW        A1, 0 (S0)
   A4:  JAL       ~Func:get_float_variable
   A8:  COPY      S0, V0
   AC:  LIF       F2, 180.0
   B4:  LIF       F4, 3.141592
   C0:  DIV.S     F0, F0, F2
   C4:  MUL.S     F22, F0, F4
   C8:  NOP
   CC:  SUB.S     F20, F20, F24
   D0:  LIF       F0, 0.5
   D8:  NOP
   DC:  MUL.S     F20, F20, F0
   E0:  NOP
   E4:  BEQ       S0, R0, .o104
   E8:  SLT       V0, S1, S3
   EC:  BEQ       V0, R0, .o104
   F0:  COPY      A0, S2
   F4:  COPY      S3, S1
   F8:  COPY      A1, S4
   FC:  JAL       ~Func:set_variable
  100:  COPY      A2, S1
        .o104
  104:  LIF       F0, 3.141592
  110:  MTC1      S3, F12
  114:  NOP
  118:  CVT.S.W   F12, F12
  11C:  MUL.S     F12, F12, F0
  120:  NOP
  124:  MTC1      S1, F0
  128:  NOP
  12C:  CVT.S.W   F0, F0
  130:  DIV.S     F12, F12, F0
  134:  JAL       ~Func:cos_rad
  138:  ADD.S     F12, F12, F22
  13C:  MUL.S     F0, F20, F0
  140:  NOP
  144:  ADD.S     F2, F24, F20
  148:  SUB.S     F2, F2, F0
  14C:  COPY      A0, S2
  150:  MFC1      A2, F2
  154:  JAL       ~Func:set_float_variable
  158:  COPY      A1, S5
  15C:  LW        RA, 28 (SP)
  160:  LW        S5, 24 (SP)
  164:  LW        S4, 20 (SP)
  168:  LW        S3, 1C (SP)
  16C:  LW        S2, 18 (SP)
  170:  LW        S1, 14 (SP)
  174:  LW        S0, 10 (SP)
  178:  LDC1      F24, 40 (SP)
  17C:  LDC1      F22, 38 (SP)
  180:  LDC1      F20, 30 (SP)
  184:  LI        V0, 2
  188:  JR        RA
  18C:  ADDIU     SP, SP, 48
}

#new:Function $Function_80218638_22 {
    0:  ADDIU     SP, SP, FFE0
    4:  SW        S1, 14 (SP)
    8:  COPY      S1, A0
    C:  SW        RA, 18 (SP)
   10:  SW        S0, 10 (SP)
   14:  LW        S0, C (S1)
   18:  LW        A1, 0 (S0)
   1C:  JAL       ~Func:get_variable
   20:  ADDIU     S0, S0, 4
   24:  COPY      A0, V0
   28:  LI        V0, FF81
   2C:  BNE       A0, V0, .o38
   30:  NOP
   34:  LW        A0, 148 (S1)
        .o38
   38:  JAL       ~Func:get_actor
   3C:  NOP
   40:  COPY      A0, V0
   44:  LBU       V1, 136 (A0)
   48:  LI        V0, 47
   4C:  BEQ       V1, V0, .o7C
   50:  SLT       V0, V1, V0
   54:  BNEL      V0, R0, .o9C
   58:  COPY      A0, S1
   5C:  SLTI      V0, V1, 65
   60:  BEQ       V0, R0, .o98
   64:  SLTI      V0, V1, 4D
   68:  BNE       V0, R0, .o9C
   6C:  COPY      A0, S1
   70:  LW        A1, 0 (S0)
   74:  BEQ       R0, R0, .oA4
   78:  LI        A2, FFFF
        .o7C
   7C:  LW        V1, A8 (A0)
   80:  LI        V0, 1
   84:  BNE       V1, V0, .o9C
   88:  COPY      A0, S1
   8C:  LW        A1, 0 (S0)
   90:  BEQ       R0, R0, .oA4
   94:  LI        A2, FFFF
        .o98
   98:  COPY      A0, S1
        .o9C
   9C:  LW        A1, 0 (S0)
   A0:  CLEAR     A2
        .oA4
   A4:  JAL       ~Func:set_variable
   A8:  NOP
   AC:  LW        RA, 18 (SP)
   B0:  LW        S1, 14 (SP)
   B4:  LW        S0, 10 (SP)
   B8:  LI        V0, 2
   BC:  JR        RA
   C0:  ADDIU     SP, SP, 20
}

#new:DefenseTable $DefenseTable_80224F20_22 {
.Element:Normal 00000000
.Element:End
}

#new:StatusTable $StatusTable_80224F38_22 {
.Status:Normal      0`
.Status:Default     0`
.Status:Sleep      40`
.Status:Poison     50`
.Status:Frozen      0`
.Status:Dizzy      75`
.Status:Fear        0`
.Status:Static     50`
.Status:Paralyze   75`
.Status:Shrink     60`
.Status:Stop       80`
.Status:DefaultTurnMod    0`
.Status:SleepTurnMod     -1`
.Status:PoisonTurnMod     0`
.Status:FrozenTurnMod     0`
.Status:DizzyTurnMod     -1`
.Status:FearTurnMod       0`
.Status:StaticTurnMod     0`
.Status:ParalyzeTurnMod  -1`
.Status:ShrinkTurnMod    -1`
.Status:StopTurnMod      -2`
.Status:End
}

#new:PartsTable $PartsTable_80225090_22 {
00800000 01000000 022300FF $IdleAnimations_80225170_22 $DefenseTable_80224F20_22 00000000 00000000 FBF40000 00000000 
}

#new:IdleAnimations $IdleAnimations_80225170_22 {
.Status:Normal    00560001
.Status:Stone     00560000
.Status:Sleep     00560008
.Status:Poison    00560001
.Status:Stop      00560000
.Status:Static    00560001
.Status:Paralyze  00560000
.Status:Dizzy     00560007
.Status:Fear      00560007
.Status:End
}

#new:IdleAnimations $IdleAnimations_802251BC_22 {
.Status:Normal    00570001
.Status:Stone     00570000
.Status:Sleep     00570008
.Status:Poison    00570001
.Status:Stop      00570000
.Status:Static    00570001
.Status:Paralyze  00570000
.Status:Dizzy     00570007
.Status:Fear      00570007
.Status:End
}

#new:Script $Script_Idle_80225214_22 {
    0:  Set   *VarF  00000000 
   10:  Label  0
   1C:  Call  GetActorVar   ( .Actor:Self 00000009 *Var0 )
   34:  Call  ActorExists   ( *Var0 *Var1 )
   48:  If  *Var1  ==  .True 
   58:  	Call  $Function_80218358_22 ( *VarF *Var1 *Fixed[254.0] *Fixed[100.0] 00000014 00000000 00000000 )
   80:  	Add   *VarF  00000001 
   90:  	Call  GetActorFlags ( .Actor:Self *Var2 )
   A4:  	If  *Var2  &  00000200 
   B4:  		Call  SetPartAlpha  ( .Actor:Self 00000002 *Var1 )
   CC:  		Call  SetPartAlpha  ( *Var0 00000001 *Var1 )
   E4:  	Else
   EC:  		Call  SetPartAlpha  ( .Actor:Self 00000001 *Var1 )
  104:  		Call  SetPartAlpha  ( *Var0 00000001 *Var1 )
  11C:  	EndIf
  124:  Else
  12C:  	Set   *VarF  00000000 
  13C:  	Call  GetActorFlags ( .Actor:Self *Var2 )
  150:  	If  *Var2  &  00000200 
  160:  		Call  SetPartAlpha  ( .Actor:Self 00000002 000000FF )
  178:  	Else
  180:  		Call  SetPartAlpha  ( .Actor:Self 00000001 000000FF )
  198:  	EndIf
  1A0:  EndIf
  1A8:  Wait  1`
  1B4:  Goto  0
  1C0:  Return
  1C8:  End
}

#new:Script $Script_RunAway_22 {
    0:  Call  UseIdleAnimation  ( .Actor:Self .False )
   14:  Call  EnableIdleScript  ( .Actor:Self 00000000 )
   28:  Call  8027D32C  ( FFFFFF81 )
   38:  Call  GetLastEvent      ( .Actor:Self *Var0 )
   4C:  If  *Var0  !=  .Event:ScareAway % 39
   5C:  	Call  UseBattleCamPreset    ( 0000000E )
   6C:  	Call  BattleCamTargetActor  ( .Actor:Self )
   7C:  	Call  MoveBattleCamOver     (  15` )
   8C:  	Wait  15`
   98:  	Call  UseBattleCamPreset    ( 00000001 )
   A8:  EndIf
   B0:  Call  SetActorSpeed ( .Actor:Self *Fixed[1.0] )
   C4:  Call  GetActorPos   ( .Actor:Self *Var0 *Var1 *Var2 )
   E0:  Add   *Var0  00000014 
   F0:  Call  SetGoalPos    ( .Actor:Self *Var0 *Var1 *Var2 )
  10C:  Call  RunToGoal     ( .Actor:Self  0` .False )
  124:  Wait  10`
  130:  Call  SetActorYaw   ( .Actor:Self  180` )
  144:  Call  EnableActorBlur       ( .Actor:Self 00000001 )
  158:  Call  SetActorSpeed ( .Actor:Self *Fixed[10.0] )
  16C:  Call  GetActorPos   ( .Actor:Self *Var0 *Var1 *Var2 )
  188:  Add   *Var0  000000C8 
  198:  Call  SetGoalPos    ( .Actor:Self *Var0 *Var1 *Var2 )
  1B4:  Call  RunToGoal     ( .Actor:Self  0` .False )
  1CC:  Call  YieldTurn ( )
  1D8:  Call  UseBattleCamPreset    ( 00000002 )
  1E8:  ExecWait  ForceNextTarget 
  1F4:  Call  8027D32C      ( FFFFFF81 )
  204:  Call  RemoveActor   ( .Actor:Self )
  214:  Return
  21C:  End
}

#new:Script $Script_NextTurn_80225D10_22 {
    0:  Call  GetActorVar   ( .Actor:Self 00000000 *Var0 )
   18:  ConstAND  *Var0 FFFFFFFE 
   28:  Call  SetActorVar   ( .Actor:Self 00000000 *Var0 )
   40:  Return
   48:  End
}

#new:Script $Script_Init_80225D60_22 {
    0:  Call  BindIdle      ( .Actor:Self $Script_Idle_80225214_22 )
   14:  Call  BindTakeTurn  ( .Actor:Self $Script_TakeTurn_8022B784_22 )
   28:  Call  BindHandleEvent   ( .Actor:Self $Script_HandleEvent_80226338_22 )
   3C:  Call  BindNextTurn  ( .Actor:Self $Script_NextTurn_80225D10_22 )
   50:  Call  GetBattleVar  ( 00000002 *Var0 )
   64:  If  *Var0  ==  00000000 
   74:  	Call  SetBattleVar  ( 00000002 FFFFFFFF )
   88:  EndIf
   90:  Call  SetActorVar   ( .Actor:Self 00000000 00000000 )
   A8:  Call  SetActorVar   ( .Actor:Self 00000001 00000000 )
   C0:  Call  SetActorVar   ( .Actor:Self 00000002 00000000 )
   D8:  Call  SetActorVar   ( .Actor:Self 00000003 00000000 )
   F0:  Call  SetActorVar   ( .Actor:Self 00000004 00000000 )
  108:  Call  SetActorVar   ( .Actor:Self 00000005 00000000 )
  120:  Call  SetActorVar   ( .Actor:Self 00000006 00000000 )
  138:  Call  SetActorVar   ( .Actor:Self 00000007 00000000 )
  150:  Call  SetActorVar   ( .Actor:Self 00000008 00000000 )
  168:  Call  SetActorVar   ( .Actor:Self 00000009 FFFFFFFF )
  180:  Call  SetActorVar   ( .Actor:Self 0000000A 00000000 )
  198:  Call  SetActorVar   ( .Actor:Self 0000000B FFFFFFFF )
  1B0:  Return
  1B8:  End
}

#new:Script $Script_802260CC_22 {
    0:  Call  GetActorVar   ( .Actor:Self 00000001 *Var0 )
   18:  If  *Var0  ==  00000001 
   28:  	Return
   30:  EndIf
   38:  Call  GetActorVar   ( .Actor:Self 00000009 *Var0 )
   50:  Call  ActorExists   ( *Var0 *Var1 )
   64:  If  *Var1  ==  .False 
   74:  	Return
   7C:  EndIf
   84:  Call  SetActorVar       ( .Actor:Self 0000000A 00000000 )
   9C:  Call  GetLastElement    ( *VarA )
   AC:  If  *VarA  &  20000000 
   BC:  	Label  0
   C8:  	Call  GetBattleFlags    ( *VarA )
   D8:  	If  *VarA  &  00000100 
   E8:  		Wait  1`
   F4:  		Goto  0
  100:  	EndIf
  108:  EndIf
  110:  Call  GetActorVar   ( .Actor:Self 00000009 *Var0 )
  128:  Call  SetActorVar   ( .Actor:Self 00000009 FFFFFFFF )
  140:  Call  GetActorFlags ( .Actor:Self *VarA )
  154:  If  *VarA  &  00000200 
  164:  	Call  SetPartEventBits  ( .Actor:Self 00000002 00400000 .False )
  180:  Else
  188:  	Call  SetPartEventBits  ( .Actor:Self 00000001 00400000 .False )
  1A4:  EndIf
  1AC:  Call  GetActorPos   ( *Var0 *Var1 *Var2 *Var3 )
  1C8:  Call  RemoveActor   ( *Var0 )
  1D8:  Thread
  1E0:  	Add   *Var3  00000002 
  1F0:  	Loop  00000002 
  1FC:  		Call  PlayEffect    ( ~FX:BigSmokePuff *Var1 *Var2 *Var3 00000000 00000000 00000000 00000000 00000000 00000000 00000000 00000000 00000000 00000000 )
  240:  		Wait  2`
  24C:  	EndLoop
  254:  EndThread
  25C:  Return
  264:  End
}

#new:Script $Script_HandleEvent_80226338_22 {
    0:  Call  UseIdleAnimation  ( .Actor:Self .False )
   14:  Call  EnableIdleScript  ( .Actor:Self 00000000 )
   28:  Call  SetPartAlpha      ( .Actor:Self 00000001 000000FF )
   40:  Call  GetLastEvent      ( .Actor:Self *Var0 )
   54:  Switch  *Var0 
   60:  	Case  ==  .Event:HitCombo % 9
   6C:  		Call  GetActorVar   ( .Actor:Self 00000000 *Var0 )
   84:  		ConstOR  *Var0 00000001 
   94:  		Call  SetActorVar   ( .Actor:Self 00000000 *Var0 )
   AC:  		SetConst  *Var0  00000001 
   BC:  		SetConst  *Var1  00560004 
   CC:  		ExecWait  DoNormalHit 
   D8:  	CaseOR  ==  .Event:Hit % A
   E4:  	CaseOR  ==  .Event:UpAndAway % 3D
   F0:  		SetConst  *Var0  00000001 
  100:  		SetConst  *Var1  00560004 
  110:  		ExecWait  DoNormalHit 
  11C:  		ExecWait  $Script_802260CC_22 
  128:  	EndCaseGroup
  130:  	Case  ==  .Event:BurnHit % E
  13C:  		SetConst  *Var0  00000001 
  14C:  		SetConst  *Var1  00560005 
  15C:  		SetConst  *Var2  00560006 
  16C:  		ExecWait  DoBurnHit 
  178:  		ExecWait  $Script_802260CC_22 
  184:  	Case  ==  .Event:BurnDeath % 24
  190:  		SetConst  *Var0  00000001 
  1A0:  		SetConst  *Var1  00560005 
  1B0:  		SetConst  *Var2  00560006 
  1C0:  		ExecWait  DoBurnHit 
  1CC:  		ExecWait  $Script_802260CC_22 
  1D8:  		SetConst  *Var0  00000001 
  1E8:  		SetConst  *Var1  00560006 
  1F8:  		ExecWait  DoDeath 
  204:  		Return
  20C:  	Case  ==  .Event:SpinSmashHit % B
  218:  		SetConst  *Var0  00000001 
  228:  		SetConst  *Var1  00560004 
  238:  		ExecWait  DoSpinSmashHit 
  244:  		ExecWait  $Script_802260CC_22 
  250:  	Case  ==  .Event:SpinSmashDeath % 21
  25C:  		SetConst  *Var0  00000001 
  26C:  		SetConst  *Var1  00560004 
  27C:  		ExecWait  DoSpinSmashHit 
  288:  		ExecWait  $Script_802260CC_22 
  294:  		SetConst  *Var0  00000001 
  2A4:  		SetConst  *Var1  00560004 
  2B4:  		ExecWait  DoDeath 
  2C0:  		Return
  2C8:  	Case  ==  00000017 % 17
  2D4:  		SetConst  *Var0  00000001 
  2E4:  		SetConst  *Var1  00560001 
  2F4:  		ExecWait  DoImmune 
  300:  	Case  ==  .Event:Immune % 19
  30C:  		SetConst  *Var0  00000001 
  31C:  		SetConst  *Var1  00560001 
  32C:  		ExecWait  DoImmune 
  338:  		Call  GetActorVar   ( .Actor:Self 00000000 *Var0 )
  350:  		If  *Var0  &  00000001 
  360:  			ExecWait  $Script_802260CC_22 
  36C:  			Return
  374:  		EndIf
  37C:  		Call  GetStatusFlags    ( .Actor:Self *Var0 )
  390:  		If  *Var0  !=  ~Flags:StatusFlags:0 % 0
  3A0:  			ExecWait  $Script_802260CC_22 
  3AC:  		EndIf
  3B4:  	Case  ==  .Event:Death % 20
  3C0:  		SetConst  *Var0  00000001 
  3D0:  		SetConst  *Var1  00560004 
  3E0:  		ExecWait  DoNormalHit 
  3EC:  		ExecWait  $Script_802260CC_22 
  3F8:  		Wait  10`
  404:  		SetConst  *Var0  00000001 
  414:  		SetConst  *Var1  00560004 
  424:  		ExecWait  DoDeath 
  430:  		Return
  438:  	Case  ==  .Event:RecoverStatus % 31
  444:  		SetConst  *Var0  00000001 
  454:  		SetConst  *Var1  00560001 
  464:  		ExecWait  DoRecover 
  470:  	Case  ==  .Event:ScareAway % 39
  47C:  		ExecWait  $Script_802260CC_22 
  488:  		Call  SetAnimation  ( .Actor:Self 00000001 00560004 )
  4A0:  		Call  SetActorJumpGravity   ( .Actor:Self *Fixed[1.5] )
  4B4:  		Call  GetActorPos   ( .Actor:Self *Var0 *Var1 *Var2 )
  4D0:  		Call  SetGoalPos    ( .Actor:Self *Var0 *Var1 *Var2 )
  4EC:  		Call  JumpToGoal    ( .Actor:Self  15` .False .True .False )
  50C:  		Wait  15`
  518:  		Call  SetAnimation  ( .Actor:Self 00000001 00560002 )
  530:  		ExecWait  $Script_RunAway_22 
  53C:  		Return
  544:  	Case  ==  .Event:BeginAirLift % 3A
  550:  		SetConst  *Var0  00000001 
  560:  		SetConst  *Var1  00560002 
  570:  		ExecWait  DoAirLift 
  57C:  	Case  ==  .Event:BlowAway % 16
  588:  		ExecWait  $Script_802260CC_22 
  594:  		Call  GetStatusFlags    ( .Actor:Self *Var0 )
  5A8:  		If  *Var0  !&  ~Flags:StatusFlags:Sleep|Frozen|Fear|Paralyze|Dizzy|Stone|Stop % 35D000
  5B8:  			If  *Var0  &  ~Flags:StatusFlags:Shrink % 80000
  5C8:  				Call  SetPartDispOffset ( .Actor:Self 00000001 00000000 00000002 00000000 )
  5E8:  			Else
  5F0:  				Call  SetPartDispOffset ( .Actor:Self 00000001 FFFFFFFC 00000005 00000000 )
  610:  			EndIf
  618:  		EndIf
  620:  		SetConst  *Var0  00000001 
  630:  		SetConst  *Var1  00560004 
  640:  		ExecWait  DoBlowAway 
  64C:  		Return
  654:  	Case  ==  .Event:AirLiftFailed % 1F
  660:  		SetConst  *Var0  00000001 
  670:  		SetConst  *Var1  00560001 
  680:  		ExecWait  DoImmune 
  68C:  	Case  ==  .Event:StarBeam % 13
  698:  		SetConst  *Var0  00000001 
  6A8:  		SetConst  *Var1  00560004 
  6B8:  		ExecWait  DoNormalHit 
  6C4:  		ExecWait  $Script_802260CC_22 
  6D0:  	Default
  6D8:  EndSwitch
  6E0:  Call  EnableIdleScript  ( .Actor:Self 00000001 )
  6F4:  Call  UseIdleAnimation  ( .Actor:Self .True )
  708:  Return
  710:  End
}

#new:Script $Script_HealOne_22 {
    0:  Call  SetActorVar       ( .Actor:Self 0000000A 00000000 )
   18:  Call  SetActorVar       ( .Actor:Self 0000000B 00000000 )
   30:  Call  AddActorVar       ( .Actor:Self 00000004 00000001 )
   48:  Call  UseIdleAnimation  ( .Actor:Self .False )
   5C:  Call  EnableIdleScript  ( .Actor:Self 00000000 )
   70:  Call  SetTargetActor    ( .Actor:Self .Actor:Player )
   84:  Call  UseBattleCamPreset    ( 0000000E )
   94:  Call  BattleCamTargetActor  ( .Actor:Self )
   A4:  Call  MoveBattleCamOver (  15` )
   B4:  Wait  15`
   C0:  Call  GetActorFlags     ( .Actor:Self *Var0 )
   D4:  If  *Var0  !&  00000200 
   E4:  	Call  SetAnimation  ( .Actor:Self 00000001 00560002 )
   FC:  Else
  104:  	Call  SetAnimation  ( .Actor:Self 00000002 00570002 )
  11C:  EndIf
  124:  Wait  5`
  130:  Call  PlaySoundAtActor  ( .Actor:Self .Sound:SpellCast1 )
  144:  Call  GetActorFlags     ( .Actor:Self *Var0 )
  158:  If  *Var0  !&  00000200 
  168:  	Call  GetActorPos       ( .Actor:Self *Var0 *Var1 *Var2 )
  184:  	Call  GetStatusFlags    ( .Actor:Self *VarA )
  198:  	If  *VarA  &  ~Flags:StatusFlags:Shrink % 80000
  1A8:  		Sub   *Var0  00000006 
  1B8:  		Add   *Var1  0000000C 
  1C8:  		Sub   *Var2  00000002 
  1D8:  		Call  PlayEffect    ( ~FX:RadialFlowOut:RedEnergy *Var0 *Var1 *Var2 *Fixed[0.12] 0000001E 00000000 00000000 00000000 00000000 00000000 00000000 00000000 )
  21C:  	Else
  224:  		Sub   *Var0  00000010 
  234:  		Add   *Var1  0000001F 
  244:  		Sub   *Var2  00000002 
  254:  		Call  PlayEffect    ( ~FX:RadialFlowOut:RedEnergy *Var0 *Var1 *Var2 *Fixed[0.3] 0000001E 00000000 00000000 00000000 00000000 00000000 00000000 00000000 )
  298:  	EndIf
  2A0:  Else
  2A8:  	Call  GetActorPos       ( .Actor:Self *Var0 *Var1 *Var2 )
  2C4:  	Call  GetStatusFlags    ( .Actor:Self *VarA )
  2D8:  	If  *VarA  &  ~Flags:StatusFlags:Shrink % 80000
  2E8:  		Sub   *Var0  0000000C 
  2F8:  		Add   *Var1  0000000E 
  308:  		Sub   *Var2  00000002 
  318:  		Call  PlayEffect    ( ~FX:RadialFlowOut:RedEnergy *Var0 *Var1 *Var2 *Fixed[0.12] 0000001E 00000000 00000000 00000000 00000000 00000000 00000000 00000000 )
  35C:  	Else
  364:  		Sub   *Var0  0000001E 
  374:  		Add   *Var1  00000024 
  384:  		Sub   *Var2  00000002 
  394:  		Call  PlayEffect    ( ~FX:RadialFlowOut:RedEnergy *Var0 *Var1 *Var2 *Fixed[0.3] 0000001E 00000000 00000000 00000000 00000000 00000000 00000000 00000000 )
  3D8:  	EndIf
  3E0:  EndIf
  3E8:  Wait  30`
  3F4:  Call  GetActorFlags ( .Actor:Self *Var0 )
  408:  If  *Var0  !&  00000200 
  418:  	Call  SetAnimation  ( .Actor:Self 00000001 00560001 )
  430:  Else
  438:  	Call  SetAnimation  ( .Actor:Self 00000002 00570001 )
  450:  EndIf
  458:  Wait  5`
  464:  Thread
  46C:  	Wait  5`
  478:  	Call  PlaySoundAtActor  ( *VarB 0000206D )
  48C:  	Call  PlaySoundAtActor  ( *VarB 00000214 )
  4A0:  	Wait  30`
  4AC:  	Call  PlaySoundAtActor  ( *VarB 0000025C )
  4C0:  EndThread
  4C8:  Thread
  4D0:  	Call  8026BF48  ( 00000001 )
  4E0:  	Call  HealActor ( *VarB 00000005 .False )
  4F8:  	Call  8026BF48  ( 00000000 )
  508:  EndThread
  510:  Call  WaitForBuffDone ( )
  51C:  Call  UseBattleCamPreset    ( 00000002 )
  52C:  Call  MoveBattleCamOver (  10` )
  53C:  Wait  10`
  548:  Call  YieldTurn ( )
  554:  Call  EnableIdleScript  ( .Actor:Self 00000001 )
  568:  Call  UseIdleAnimation  ( .Actor:Self .True )
  57C:  Return
  584:  End
}

#new:Script $Script_HealAll_22 {
    0:  Call  SetActorVar       ( .Actor:Self 0000000A 00000000 )
   18:  Call  SetActorVar       ( .Actor:Self 0000000B 00000001 )
   30:  Call  AddActorVar       ( .Actor:Self 00000003 00000001 )
   48:  Call  UseIdleAnimation  ( .Actor:Self .False )
   5C:  Call  EnableIdleScript  ( .Actor:Self 00000000 )
   70:  Call  SetTargetActor    ( .Actor:Self .Actor:Player )
   84:  Call  UseBattleCamPreset    ( 0000000E )
   94:  Call  BattleCamTargetActor  ( .Actor:Self )
   A4:  Call  MoveBattleCamOver (  15` )
   B4:  Wait  15`
   C0:  Call  GetActorFlags     ( .Actor:Self *Var0 )
   D4:  If  *Var0  !&  00000200 
   E4:  	Call  SetAnimation  ( .Actor:Self 00000001 00560002 )
   FC:  Else
  104:  	Call  SetAnimation  ( .Actor:Self 00000002 00570002 )
  11C:  EndIf
  124:  Wait  5`
  130:  Call  PlaySoundAtActor  ( .Actor:Self .Sound:SpellCast1 )
  144:  Call  GetActorFlags     ( .Actor:Self *Var0 )
  158:  If  *Var0  !&  00000200 
  168:  	Call  GetActorPos       ( .Actor:Self *Var0 *Var1 *Var2 )
  184:  	Call  GetStatusFlags    ( .Actor:Self *VarA )
  198:  	If  *VarA  &  ~Flags:StatusFlags:Shrink % 80000
  1A8:  		Sub   *Var0  00000006 
  1B8:  		Add   *Var1  0000000C 
  1C8:  		Sub   *Var2  00000002 
  1D8:  		Call  PlayEffect    ( ~FX:RadialFlowOut:RedEnergy *Var0 *Var1 *Var2 *Fixed[0.12] 0000001E 00000000 00000000 00000000 00000000 00000000 00000000 00000000 )
  21C:  	Else
  224:  		Sub   *Var0  00000010 
  234:  		Add   *Var1  0000001F 
  244:  		Sub   *Var2  00000002 
  254:  		Call  PlayEffect    ( ~FX:RadialFlowOut:RedEnergy *Var0 *Var1 *Var2 *Fixed[0.3] 0000001E 00000000 00000000 00000000 00000000 00000000 00000000 00000000 )
  298:  	EndIf
  2A0:  Else
  2A8:  	Call  GetActorPos       ( .Actor:Self *Var0 *Var1 *Var2 )
  2C4:  	Call  GetStatusFlags    ( .Actor:Self *VarA )
  2D8:  	If  *VarA  &  ~Flags:StatusFlags:Shrink % 80000
  2E8:  		Sub   *Var0  0000000C 
  2F8:  		Add   *Var1  0000000E 
  308:  		Sub   *Var2  00000002 
  318:  		Call  PlayEffect    ( ~FX:RadialFlowOut:RedEnergy *Var0 *Var1 *Var2 *Fixed[0.12] 0000001E 00000000 00000000 00000000 00000000 00000000 00000000 00000000 )
  35C:  	Else
  364:  		Sub   *Var0  0000001E 
  374:  		Add   *Var1  00000024 
  384:  		Sub   *Var2  00000002 
  394:  		Call  PlayEffect    ( ~FX:RadialFlowOut:RedEnergy *Var0 *Var1 *Var2 *Fixed[0.3] 0000001E 00000000 00000000 00000000 00000000 00000000 00000000 00000000 )
  3D8:  	EndIf
  3E0:  EndIf
  3E8:  Wait  30`
  3F4:  Call  GetActorFlags ( .Actor:Self *Var0 )
  408:  If  *Var0  !&  00000200 
  418:  	Call  SetAnimation  ( .Actor:Self 00000001 00560001 )
  430:  Else
  438:  	Call  SetAnimation  ( .Actor:Self 00000002 00570001 )
  450:  EndIf
  458:  Wait  5`
  464:  Call  EnemyCreateTargetList ( 00008002 )
  474:  Call  InitTargetIterator ( )
  480:  Label  0
  48C:  Set   *Flag[00]  .False 
  49C:  Call  GetOwnerTarget        ( *Var0 *Var1 )
  4B0:  Call  GetOriginalActorType  ( *Var0 *Var1 )
  4C4:  If  *Var1  ==  00000047 
  4D4:  	Call  GetActorVar   ( *Var0 00000008 *Var1 )
  4EC:  	If  *Var1  ==  00000001 
  4FC:  		Set   *Flag[00]  .True 
  50C:  	EndIf
  514:  EndIf
  51C:  If  *Flag[00]  ==  .False 
  52C:  	Thread
  534:  		Wait  5`
  540:  		Call  PlaySoundAtActor  ( *Var0 0000206D )
  554:  		Call  PlaySoundAtActor  ( *Var0 00000214 )
  568:  		Wait  30`
  574:  		Call  PlaySoundAtActor  ( *Var0 0000025C )
  588:  	EndThread
  590:  	Thread
  598:  		Call  8026BF48  ( 00000001 )
  5A8:  		Call  HealActor ( *Var0 00000003 .True )
  5C0:  		Call  8026BF48  ( 00000000 )
  5D0:  	EndThread
  5D8:  EndIf
  5E0:  Call  ChooseNextTarget  ( .Iter:Next *Var0 )
  5F4:  If  *Var0  !=  FFFFFFFF 
  604:  	Goto  0
  610:  EndIf
  618:  Call  WaitForBuffDone ( )
  624:  Wait  1`
  630:  Call  UseBattleCamPreset    ( 00000002 )
  640:  Call  MoveBattleCamOver (  10` )
  650:  Wait  10`
  65C:  Call  YieldTurn ( )
  668:  Call  EnableIdleScript  ( .Actor:Self 00000001 )
  67C:  Call  UseIdleAnimation  ( .Actor:Self .True )
  690:  Return
  698:  End
}

#new:Script $Script_ShapeSpell_22 {
    0:  Call  SetActorVar   ( .Actor:Self 0000000B 00000002 )
   18:  Set   *Flag[00]  .False 
   28:  Set   *Flag[01]  .False 
   38:  Call  GetActorVar   ( .Actor:Self 0000000A *Var0 )
   50:  If  *Var0  ==  00000001 
   60:  	Set   *Flag[00]  .True 
   70:  	Call  GetActorVar   ( .Actor:Self 00000009 *VarA )
   88:  EndIf
   90:  Call  GetActorFlags ( .Actor:Self *Var0 )
   A4:  If  *Var0  &  00000200 
   B4:  	Set   *Flag[01]  .True 
   C4:  EndIf
   CC:  Call  UseIdleAnimation  ( .Actor:Self .False )
   E0:  If  *Flag[00]  ==  .True 
   F0:  	Call  UseIdleAnimation  ( *VarA .False )
  104:  EndIf
  10C:  Call  SetTargetActor    ( .Actor:Self .Actor:Player )
  120:  Call  GetBattlePhase    ( *Var0 )
  130:  If  *Var0  ==  00000001 
  140:  	Call  UseBattleCamPreset    ( 00000002 )
  150:  	Call  MoveBattleCamOver     (  1` )
  160:  Else
  168:  	Call  UseBattleCamPreset    ( 00000002 )
  178:  	Call  MoveBattleCamOver     (  10` )
  188:  EndIf
  190:  Call  PlaySoundAtActor  ( .Actor:Self .Sound:SpellCast1 )
  1A4:  If  *Flag[01]  ==  .False 
  1B4:  	If  *Flag[00]  ==  .True 
  1C4:  		Call  SetAnimation  ( *VarA 00000001 00560002 )
  1DC:  		Call  GetActorPos   ( *VarA *Var0 *Var1 *Var2 )
  1F8:  		Sub   *Var0  00000011 
  208:  		Add   *Var1  00000021 
  218:  		Call  PlayEffect    ( ~FX:GatherMagic:Pink *Var0 *Var1 *Var2 *Fixed[0.5] 0000001E 00000000 00000000 00000000 00000000 00000000 00000000 00000000 )
  25C:  	EndIf
  264:  	Call  SetAnimation      ( .Actor:Self 00000001 00560002 )
  27C:  	Call  GetActorPos       ( .Actor:Self *Var0 *Var1 *Var2 )
  298:  	Call  GetStatusFlags    ( .Actor:Self *Var3 )
  2AC:  	If  *Var3  &  ~Flags:StatusFlags:Shrink % 80000
  2BC:  		Sub   *Var0  00000006 
  2CC:  		Add   *Var1  0000000D 
  2DC:  	Else
  2E4:  		Sub   *Var0  00000011 
  2F4:  		Add   *Var1  00000021 
  304:  	EndIf
  30C:  	Call  PlayEffect    ( ~FX:GatherMagic:Pink *Var0 *Var1 *Var2 *Fixed[0.5] 0000001E 00000000 00000000 00000000 00000000 00000000 00000000 00000000 )
  350:  Else
  358:  	If  *Flag[00]  ==  .True 
  368:  		Call  SetAnimation  ( *VarA 00000001 00570002 )
  380:  		Call  GetActorPos   ( *VarA *Var0 *Var1 *Var2 )
  39C:  		Sub   *Var0  0000001E 
  3AC:  		Add   *Var1  00000024 
  3BC:  		Call  PlayEffect    ( ~FX:GatherMagic:Pink *Var0 *Var1 *Var2 *Fixed[0.5] 0000001E 00000000 00000000 00000000 00000000 00000000 00000000 00000000 )
  400:  	EndIf
  408:  	Call  SetAnimation      ( .Actor:Self 00000002 00570002 )
  420:  	Call  GetActorPos       ( .Actor:Self *Var0 *Var1 *Var2 )
  43C:  	Call  GetStatusFlags    ( .Actor:Self *Var3 )
  450:  	If  *Var3  &  ~Flags:StatusFlags:Shrink % 80000
  460:  		Sub   *Var0  0000000C 
  470:  		Add   *Var1  0000000E 
  480:  	Else
  488:  		Sub   *Var0  0000001E 
  498:  		Add   *Var1  00000024 
  4A8:  	EndIf
  4B0:  	Call  PlayEffect    ( ~FX:GatherMagic:Pink *Var0 *Var1 *Var2 *Fixed[0.5] 0000001E 00000000 00000000 00000000 00000000 00000000 00000000 00000000 )
  4F4:  EndIf
  4FC:  Wait  30`
  508:  Call  EnemyTestTarget   ( .Actor:Self *Var9 ~Flags:DamageType:0 00000000 00000001 00000010 )
  52C:  Switch  *Var9 
  538:  	CaseOR  ==  .HitResult:Miss % 6
  544:  	CaseOR  ==  .HitResult:Lucky % 5
  550:  		If  *Flag[00]  ==  .True 
  560:  			Call  PlaySoundAtActor  ( *VarA .Sound:SpellCast2 )
  574:  		EndIf
  57C:  		Call  PlaySoundAtActor  ( .Actor:Self .Sound:SpellCast2 )
  590:  		If  *Flag[01]  ==  .False 
  5A0:  			If  *Flag[00]  ==  .True 
  5B0:  				Call  SetAnimation  ( *VarA 00000001 00560003 )
  5C8:  			EndIf
  5D0:  			Call  SetAnimation  ( .Actor:Self 00000001 00560003 )
  5E8:  		Else
  5F0:  			If  *Flag[00]  ==  .True 
  600:  				Call  SetAnimation  ( *VarA 00000001 00570003 )
  618:  			EndIf
  620:  			Call  SetAnimation  ( .Actor:Self 00000002 00570003 )
  638:  		EndIf
  640:  		Wait  5`
  64C:  		Call  SetGoalToTarget   ( .Actor:Self )
  65C:  		Call  GetGoalPos        ( .Actor:Self *Var4 *Var5 *Var6 )
  678:  		Sub   *Var4  00000032 
  688:  		Set   *Var5  00000000 
  698:  		If  *Flag[01]  ==  .False 
  6A8:  			If  *Flag[00]  ==  .True 
  6B8:  				Call  GetActorPos   ( *VarA *Var0 *Var1 *Var2 )
  6D4:  				Sub   *Var0  00000014 
  6E4:  				Add   *Var1  00000014 
  6F4:  				Call  $Function_80218200_22 ( *Var0 *Var1 *Var6 *Var4 *Var5 *Var6 0000001E )
  71C:  			EndIf
  724:  			Call  GetActorPos       ( .Actor:Self *Var0 *Var1 *Var2 )
  740:  			Call  GetStatusFlags    ( .Actor:Self *Var3 )
  754:  			If  *Var3  &  ~Flags:StatusFlags:Shrink % 80000
  764:  				Sub   *Var0  00000008 
  774:  				Add   *Var1  00000008 
  784:  			Else
  78C:  				Sub   *Var0  00000014 
  79C:  				Add   *Var1  00000014 
  7AC:  			EndIf
  7B4:  			Call  $Function_80218200_22 ( *Var0 *Var1 *Var6 *Var4 *Var5 *Var6 0000001E )
  7DC:  		Else
  7E4:  			If  *Flag[00]  ==  .True 
  7F4:  				Call  GetActorPos   ( *VarA *Var0 *Var1 *Var2 )
  810:  				Sub   *Var0  00000014 
  820:  				Add   *Var1  00000014 
  830:  				Call  $Function_80218200_22 ( *Var0 *Var1 *Var6 *Var4 *Var5 *Var6 0000001E )
  858:  			EndIf
  860:  			Call  GetActorPos       ( .Actor:Self *Var0 *Var1 *Var2 )
  87C:  			Call  GetStatusFlags    ( .Actor:Self *Var3 )
  890:  			If  *Var3  &  ~Flags:StatusFlags:Shrink % 80000
  8A0:  				Sub   *Var0  00000008 
  8B0:  				Add   *Var1  00000008 
  8C0:  			Else
  8C8:  				Sub   *Var0  00000014 
  8D8:  				Add   *Var1  00000014 
  8E8:  			EndIf
  8F0:  			Call  $Function_80218200_22 ( *Var0 *Var1 *Var6 *Var4 *Var5 *Var6 0000001E )
  918:  		EndIf
  920:  		Wait  50`
  92C:  		If  *Var9  ==  .HitResult:Lucky % 5
  93C:  			Call  EnemyTestTarget   ( .Actor:Self *Var0 ~Flags:DamageType:TriggerLucky 00000000 00000000 00000000 )
  960:  		EndIf
  968:  		Wait  15`
  974:  		Call  YieldTurn ( )
  980:  		Call  UseIdleAnimation  ( .Actor:Self .True )
  994:  		If  *Flag[00]  ==  .True 
  9A4:  			Call  UseIdleAnimation  ( *VarA .True )
  9B8:  		EndIf
  9C0:  		Return
  9C8:  	EndCaseGroup
  9D0:  EndSwitch
  9D8:  If  *Flag[00]  ==  .True 
  9E8:  	Call  PlaySoundAtActor  ( *VarA .Sound:SpellCast2 )
  9FC:  EndIf
  A04:  Call  PlaySoundAtActor  ( .Actor:Self .Sound:SpellCast2 )
  A18:  If  *Flag[01]  ==  .False 
  A28:  	If  *Flag[00]  ==  .True 
  A38:  		Call  SetAnimation  ( *VarA 00000001 00560003 )
  A50:  	EndIf
  A58:  	Call  SetAnimation  ( .Actor:Self 00000001 00560003 )
  A70:  Else
  A78:  	If  *Flag[00]  ==  .True 
  A88:  		Call  SetAnimation  ( *VarA 00000001 00570003 )
  AA0:  	EndIf
  AA8:  	Call  SetAnimation  ( .Actor:Self 00000002 00570003 )
  AC0:  EndIf
  AC8:  Wait  5`
  AD4:  Call  SetGoalToTarget   ( .Actor:Self )
  AE4:  Call  GetGoalPos        ( .Actor:Self *Var4 *Var5 *Var6 )
  B00:  If  *Flag[01]  ==  .False 
  B10:  	If  *Flag[00]  ==  .True 
  B20:  		Call  GetActorPos   ( *VarA *Var0 *Var1 *Var2 )
  B3C:  		Sub   *Var0  00000014 
  B4C:  		Add   *Var1  00000014 
  B5C:  		Call  $Function_80218200_22 ( *Var0 *Var1 *Var6 *Var4 *Var5 *Var6 00000014 )
  B84:  	EndIf
  B8C:  	Call  GetActorPos       ( .Actor:Self *Var0 *Var1 *Var2 )
  BA8:  	Call  GetStatusFlags    ( .Actor:Self *Var3 )
  BBC:  	If  *Var3  &  ~Flags:StatusFlags:Shrink % 80000
  BCC:  		Sub   *Var0  00000008 
  BDC:  		Add   *Var1  00000008 
  BEC:  	Else
  BF4:  		Sub   *Var0  00000014 
  C04:  		Add   *Var1  00000014 
  C14:  	EndIf
  C1C:  	Call  $Function_80218200_22 ( *Var0 *Var1 *Var6 *Var4 *Var5 *Var6 00000014 )
  C44:  Else
  C4C:  	If  *Flag[00]  ==  .True 
  C5C:  		Call  GetActorPos   ( *VarA *Var0 *Var1 *Var2 )
  C78:  		Sub   *Var0  00000014 
  C88:  		Add   *Var1  00000014 
  C98:  		Call  $Function_80218200_22 ( *Var0 *Var1 *Var6 *Var4 *Var5 *Var6 00000014 )
  CC0:  	EndIf
  CC8:  	Call  GetActorPos       ( .Actor:Self *Var0 *Var1 *Var2 )
  CE4:  	Call  GetStatusFlags    ( .Actor:Self *Var3 )
  CF8:  	If  *Var3  &  ~Flags:StatusFlags:Shrink % 80000
  D08:  		Sub   *Var0  00000008 
  D18:  		Add   *Var1  00000008 
  D28:  	Else
  D30:  		Sub   *Var0  00000014 
  D40:  		Add   *Var1  00000014 
  D50:  	EndIf
  D58:  	Call  $Function_80218200_22 ( *Var0 *Var1 *Var6 *Var4 *Var5 *Var6 00000014 )
  D80:  EndIf
  D88:  Wait  18`
  D94:  If  *Flag[00]  ==  .True 
  DA4:  	Wait  2`
  DB0:  	Call  EnemyDamageTarget ( .Actor:Self *Var0 ~Flags:DamageType:NoContact|Magic 00000000 00000000 00000006 00000020 )
  DD8:  Else
  DE0:  	Wait  2`
  DEC:  	Call  EnemyDamageTarget ( .Actor:Self *Var0 ~Flags:DamageType:NoContact|Magic 00000000 00000000 00000006 00000020 )
  E14:  EndIf
  E1C:  Switch  *Var0 
  E28:  	CaseOR  ==  .HitResult:Hit % 0
  E34:  	CaseOR  ==  .HitResult:QuakeImmune % 2
  E40:  		Wait  20`
  E4C:  		Call  YieldTurn ( )
  E58:  	EndCaseGroup
  E60:  EndSwitch
  E68:  Call  UseIdleAnimation  ( .Actor:Self .True )
  E7C:  If  *Flag[00]  ==  .True 
  E8C:  	Call  UseIdleAnimation  ( *VarA .True )
  EA0:  EndIf
  EA8:  Return
  EB0:  End
}

#new:Script $Script_80228DA4_22 {
    0:  Call  EnemyCreateTargetList ( 00008002 )
   10:  Call  InitTargetIterator ( )
   1C:  Label  0
   28:  Call  GetOwnerTarget        ( *Var0 *Var1 )
   3C:  Call  GetIndexFromHome      ( *Var0 *Var1 )
   50:  Mod   *Var1  00000004 
   60:  Switch  *Var1 
   6C:  	Case  ==  00000000 
   78:  		Set   *Flag[0B]  .True 
   88:  	Case  ==  00000001 
   94:  		Set   *Flag[0C]  .True 
   A4:  	Case  ==  00000002 
   B0:  		Set   *Flag[0D]  .True 
   C0:  	Case  ==  00000003 
   CC:  		Set   *Flag[0E]  .True 
   DC:  EndSwitch
   E4:  Call  ChooseNextTarget  ( .Iter:Next *Var0 )
   F8:  If  *Var0  !=  FFFFFFFF 
  108:  	Goto  0
  114:  EndIf
  11C:  Set   *Var0  FFFFFFFF 
  12C:  Call  GetIndexFromHome  ( .Actor:Self *Var1 )
  140:  Mod   *Var1  00000004 
  150:  Switch  *Var1 
  15C:  	Case  ==  00000000 
  168:  		If  *Flag[0C]  ==  .False 
  178:  			Set   *Var0  00000001 
  188:  		EndIf
  190:  	Case  ==  00000001 
  19C:  		If  *Flag[0B]  ==  .False 
  1AC:  			Set   *Var0  00000000 
  1BC:  		EndIf
  1C4:  		If  *Flag[0D]  ==  .False 
  1D4:  			Set   *Var0  00000002 
  1E4:  		EndIf
  1EC:  	Case  ==  00000002 
  1F8:  		If  *Flag[0C]  ==  .False 
  208:  			Set   *Var0  00000001 
  218:  		EndIf
  220:  		If  *Flag[0E]  ==  .False 
  230:  			Set   *Var0  00000003 
  240:  		EndIf
  248:  	Case  ==  00000003 
  254:  		If  *Flag[0D]  ==  .False 
  264:  			Set   *Var0  00000002 
  274:  		EndIf
  27C:  EndSwitch
  284:  If  *Var0  !=  FFFFFFFF 
  294:  	Call  GetActorFlags ( .Actor:Self *Var1 )
  2A8:  	If  *Var1  &  00000200 
  2B8:  		Add   *Var0  00000004 
  2C8:  	EndIf
  2D0:  EndIf
  2D8:  Return
  2E0:  End
}

#new:Script $Script_HandleEvent_8022908C_22 {
    0:  Return
    8:  End
}

#new:Script $Script_Init_8022909C_22 {
    0:  Call  BindHandleEvent   ( .Actor:Self $Script_HandleEvent_8022908C_22 )
   14:  Call  SetActorVar       ( .Actor:Self 00000001 00000001 )
   2C:  Return
   34:  End
}

#new:Script $Script_Init_802290D8_22 {
    0:  Call  BindHandleEvent   ( .Actor:Self $Script_HandleEvent_8022908C_22 )
   14:  Call  SetActorVar       ( .Actor:Self 00000001 00000001 )
   2C:  Return
   34:  End
}

#new:DefenseTable $DefenseTable_80229114_22 {
.Element:Normal 00000000
.Element:End
}

#new:DefenseTable $DefenseTable_80229120_22 {
.Element:Normal 00000000
.Element:End
}

#new:StatusTable $StatusTable_8022912C_22 {
.Status:Normal      0`
.Status:Default     0`
.Status:Sleep       0`
.Status:Poison      0`
.Status:Frozen      0`
.Status:Dizzy       0`
.Status:Fear        0`
.Status:Static      0`
.Status:Paralyze    0`
.Status:Shrink      0`
.Status:Stop        0`
.Status:DefaultTurnMod    0`
.Status:SleepTurnMod      0`
.Status:PoisonTurnMod     0`
.Status:FrozenTurnMod     0`
.Status:DizzyTurnMod      0`
.Status:FearTurnMod       0`
.Status:StaticTurnMod     0`
.Status:ParalyzeTurnMod   0`
.Status:ShrinkTurnMod     0`
.Status:StopTurnMod       0`
.Status:End
}

#new:StatusTable $StatusTable_802291D8_22 {
.Status:Normal      0`
.Status:Default     0`
.Status:Sleep       0`
.Status:Poison      0`
.Status:Frozen      0`
.Status:Dizzy       0`
.Status:Fear        0`
.Status:Static      0`
.Status:Paralyze    0`
.Status:Shrink      0`
.Status:Stop        0`
.Status:DefaultTurnMod    0`
.Status:SleepTurnMod      0`
.Status:PoisonTurnMod     0`
.Status:FrozenTurnMod     0`
.Status:DizzyTurnMod      0`
.Status:FearTurnMod       0`
.Status:StaticTurnMod     0`
.Status:ParalyzeTurnMod   0`
.Status:ShrinkTurnMod     0`
.Status:StopTurnMod       0`
.Status:End
}

#new:PartsTable $PartsTable_80229284_22 {
00800000 01000000 022300FF $IdleAnimations_80225170_22 $DefenseTable_80229114_22 00000020 00000000 FBF40000 00000000 
}

#new:PartsTable $PartsTable_802292A8_22 {
00800000 01000000 F62300FF $IdleAnimations_802251BC_22 $DefenseTable_80229120_22 00000020 00000000 00F80000 00000000 
}

#new:Actor $Magiclone_22 {
% stats
[Index]        4Fb 
[Level]        26`b 
[MaxHP]        11`b 
[Coins]         0`b 
[Flags]       00200000 
[StatusTable] $StatusTable_8022912C_22 
% ai
[PartsCount]    1`s 
[PartsTable]  $PartsTable_80229284_22 
[Script]      $Script_Init_8022909C_22 
% move effectiveness
[Escape]       40`b 
[Item]          0`b 
[AirLift]       0`b 
[Hurricane]     0`b % Bow's "Spook" as well
[UpAndAway]     0`b 
[PowerBounce]  75`b 
[SpinSmash]     0`b % weight (0-4)
% ui positions
[Size]         36`b  40`b % width height
[HealthBar]     0`b   0`b % dx dy
[StatusTurn]  -10`b  20`b % dx dy
[StatusIcon]   10`b  32`b % dx dy
}

#new:Actor $FlyingMagiclone_22 {
% stats
[Index]        50b 
[Level]        26`b 
[MaxHP]        11`b 
[Coins]         2`b 
[Flags]       00200200 
[StatusTable] $StatusTable_802291D8_22 
% ai
[PartsCount]    1`s 
[PartsTable]  $PartsTable_802292A8_22 
[Script]      $Script_Init_802290D8_22 
% move effectiveness
[Escape]       40`b 
[Item]          0`b 
[AirLift]       0`b 
[Hurricane]     0`b % Bow's "Spook" as well
[UpAndAway]     0`b 
[PowerBounce]  75`b 
[SpinSmash]     0`b % weight (0-4)
% ui positions
[Size]         48`b  40`b % width height
[HealthBar]     0`b   0`b % dx dy
[StatusTurn]  -25`b  20`b % dx dy
[StatusIcon]    1`b  34`b % dx dy
}

#new:Vector3D $Vector3D_8022931C_22 {
0` -1000` 0`
}

#new:SpecialFormation $SpecialFormation_80229328_22 {
$Magiclone_22 $Vector3D_8022931C_22 00000000 00000000 00000000 00000000 00000000 
}

#new:SpecialFormation $SpecialFormation_80229344_22 {
$FlyingMagiclone_22 $Vector3D_8022931C_22 00000000 00000000 00000000 00000000 00000000 
}

#new:Script $Script_MakeCopy_22 {
    0:  Call  CountPlayerTargets    ( .Actor:Self 00008002 *Var0 )
   18:  If  *Var0  ==  00000001 
   28:  	ExecWait  $Script_RunAway_22 
   34:  	Return
   3C:  EndIf
   44:  Call  SetActorVar   ( .Actor:Self 0000000A 00000001 )
   5C:  Call  SetActorVar   ( .Actor:Self 0000000B 00000003 )
   74:  Set   *Flag[00]  .False 
   84:  Call  GetActorFlags ( .Actor:Self *Var0 )
   98:  If  *Var0  &  00000200 
   A8:  	Set   *Flag[00]  .True 
   B8:  EndIf
   C0:  If  *Flag[00]  ==  .False 
   D0:  	Call  SummonEnemy   ( $SpecialFormation_80229328_22 00000000 )
   E4:  Else
   EC:  	Call  SummonEnemy   ( $SpecialFormation_80229344_22 00000000 )
  100:  EndIf
  108:  Call  SetActorVar       ( .Actor:Self 00000009 *Var0 )
  120:  Set   *VarA  *Var0 
  130:  Call  EnableIdleScript  ( .Actor:Self 00000000 )
  144:  Call  EnableIdleScript  ( *VarA 00000000 )
  158:  Call  UseIdleAnimation  ( .Actor:Self .False )
  16C:  Call  UseIdleAnimation  ( *VarA .False )
  180:  Call  SetTargetActor    ( .Actor:Self .Actor:Player )
  194:  Call  UseBattleCamPreset    ( 0000000E )
  1A4:  Call  BattleCamTargetActor  ( .Actor:Self )
  1B4:  Call  MoveBattleCamOver (  25` )
  1C4:  Wait  25`
  1D0:  Call  PlaySoundAtActor  ( .Actor:Self .Sound:SpellCast3 )
  1E4:  If  *Flag[00]  ==  .False 
  1F4:  	Call  SetAnimation  ( .Actor:Self 00000001 00560002 )
  20C:  	Call  SetAnimation  ( *VarA 00000001 00560002 )
  224:  	Call  GetActorPos   ( .Actor:Self *Var0 *Var1 *Var2 )
  240:  	Add   *Var1  00000017 
  250:  Else
  258:  	Call  SetAnimation  ( .Actor:Self 00000002 00570002 )
  270:  	Call  SetAnimation  ( *VarA 00000001 00570002 )
  288:  	Call  GetActorPos   ( .Actor:Self *Var0 *Var1 *Var2 )
  2A4:  	Add   *Var1  00000017 
  2B4:  EndIf
  2BC:  Call  PlayEffect        ( ~FX:EnergyIn:Stars *Var0 *Var1 *Var2 *Fixed[1.0] 0000001E 00000000 00000000 00000000 00000000 00000000 00000000 00000000 )
  300:  Wait  10`
  30C:  Call  EnableIdleScript  ( .Actor:Self 00000001 )
  320:  Call  EnableIdleScript  ( *Var9 00000001 )
  334:  Wait  30`
  340:  Call  GetActorPos       ( .Actor:Self *Var0 *Var1 *Var2 )
  35C:  Add   *Var2  FFFFFFFD 
  36C:  Call  SetActorPos       ( *VarA *Var0 *Var1 *Var2 )
  388:  Set   *Var9  *VarA 
  398:  Wait  15`
  3A4:  Call  UseBattleCamPreset    ( 00000002 )
  3B4:  Call  MoveBattleCamOver (  30` )
  3C4:  Call  PlaySoundAtActor  ( .Actor:Self .Sound:SpellCast4 )
  3D8:  Call  PlaySoundAtActor  ( *Var9 .Sound:SpellCast4 )
  3EC:  Call  SetPartFlagBits   ( *Var9 00000001 00800000 .False )
  408:  Call  RandInt   ( 000003E8 *Var0 )
  41C:  If  *Var0  <  000001F4 
  42C:  	Call  SetActorSpeed     ( .Actor:Self *Fixed[2.0] )
  440:  	ExecWait  $Script_80228DA4_22 
  44C:  	Call  SetGoalToIndex    ( .Actor:Self *Var0 )
  460:  	Call  FlyToGoal ( .Actor:Self  0`  0` .Easing:Linear )
  47C:  Else
  484:  	Call  SetActorSpeed     ( *Var9 *Fixed[2.0] )
  498:  	ExecWait  $Script_80228DA4_22 
  4A4:  	Call  SetGoalToIndex    ( *Var9 *Var0 )
  4B8:  	Call  FlyToGoal ( *Var9  0`  0` .Easing:Linear )
  4D4:  EndIf
  4DC:  Call  SetPartFlagBits   ( *Var9 00000001 00800000 .True )
  4F8:  Call  GetActorHP    ( .Actor:Self *Var0 )
  50C:  Call  SetEnemyHP    ( *Var9 *Var0 )
  520:  Call  GetActorPos   ( .Actor:Self *Var0 *Var1 *Var2 )
  53C:  Call  ForceHomePos  ( .Actor:Self *Var0 *Var1 *Var2 )
  558:  Call  HPBarToHome   ( .Actor:Self )
  568:  Call  GetActorPos   ( *Var9 *Var0 *Var1 *Var2 )
  584:  Call  ForceHomePos  ( *Var9 *Var0 *Var1 *Var2 )
  5A0:  Call  HPBarToHome   ( *Var9 )
  5B0:  If  *Flag[00]  ==  .False 
  5C0:  	Call  SetPartEventBits  ( .Actor:Self 00000001 00400000 .True )
  5DC:  Else
  5E4:  	Call  SetPartEventBits  ( .Actor:Self 00000002 00400000 .True )
  600:  EndIf
  608:  If  *Flag[00]  ==  .False 
  618:  	Call  SetAnimation  ( .Actor:Self 00000001 00560001 )
  630:  	Call  SetAnimation  ( *Var9 00000001 00560001 )
  648:  Else
  650:  	Call  SetAnimation  ( .Actor:Self 00000002 00570001 )
  668:  	Call  SetAnimation  ( *Var9 00000001 00570001 )
  680:  EndIf
  688:  Call  UseIdleAnimation  ( .Actor:Self .True )
  69C:  Call  UseIdleAnimation  ( *Var9 .True )
  6B0:  Return
  6B8:  End
}

#new:Script $Script_BoostAttack_22 {
    0:  Set   *Flag[00]  .False 
   10:  Label  A
   1C:  Call  EnemyCreateTargetList ( 00008002 )
   2C:  Call  InitTargetIterator ( )
   38:  Label  0
   44:  Call  GetOwnerTarget    ( *Var0 *Var1 )
   58:  Call  GetIndexFromHome  ( *Var0 *Var1 )
   6C:  Call  GetBattleVar      ( 00000002 *Var2 )
   80:  If  *Var1  >  *Var2 
   90:  	Call  $Function_80218638_22 ( *Var0 *Var3 )
   A4:  	If  *Var3  ==  00000000 
   B4:  		Call  GetActorAttackBoost   ( *Var0 *Var4 )
   C8:  		If  *Var4  <  00000003 
   D8:  			Set   *Var8  *Var0 
   E8:  			Call  SetBattleVar  ( 00000002 *Var1 )
   FC:  			Goto  64
  108:  		EndIf
  110:  	EndIf
  118:  EndIf
  120:  Call  ChooseNextTarget  ( .Iter:Next *Var0 )
  134:  If  *Var0  !=  FFFFFFFF 
  144:  	Goto  0
  150:  EndIf
  158:  If  *Flag[00]  ==  .False 
  168:  	Set   *Flag[00]  .True 
  178:  	Call  SetBattleVar  ( 00000002 FFFFFFFF )
  18C:  	Goto  A
  198:  EndIf
  1A0:  Call  CountPlayerTargets    ( .Actor:Self 00008002 *Var0 )
  1B8:  If  *Var0  ==  00000001 
  1C8:  	ExecWait  $Script_RunAway_22 
  1D4:  	Return
  1DC:  EndIf
  1E4:  ExecWait  $Script_ShapeSpell_22 
  1F0:  Return
  1F8:  Label  64
  204:  Call  SetActorVar       ( .Actor:Self 0000000A 00000000 )
  21C:  Call  SetActorVar       ( .Actor:Self 0000000B 00000004 )
  234:  Call  AddActorVar       ( .Actor:Self 00000005 00000001 )
  24C:  Call  UseIdleAnimation  ( .Actor:Self .False )
  260:  Call  EnableIdleScript  ( .Actor:Self 00000000 )
  274:  Call  SetTargetActor    ( .Actor:Self .Actor:Player )
  288:  Call  UseBattleCamPreset    ( 0000000E )
  298:  Call  BattleCamTargetActor  ( .Actor:Self )
  2A8:  Call  MoveBattleCamOver (  15` )
  2B8:  Wait  15`
  2C4:  Call  GetActorFlags     ( .Actor:Self *Var0 )
  2D8:  If  *Var0  !&  00000200 
  2E8:  	Call  SetAnimation  ( .Actor:Self 00000001 00560002 )
  300:  Else
  308:  	Call  SetAnimation  ( .Actor:Self 00000002 00570002 )
  320:  EndIf
  328:  Wait  5`
  334:  Call  PlaySoundAtActor  ( .Actor:Self .Sound:SpellCast1 )
  348:  Call  GetActorFlags     ( .Actor:Self *Var0 )
  35C:  If  *Var0  !&  00000200 
  36C:  	Call  GetActorPos       ( .Actor:Self *Var0 *Var1 *Var2 )
  388:  	Call  GetStatusFlags    ( .Actor:Self *VarA )
  39C:  	If  *VarA  &  ~Flags:StatusFlags:Shrink % 80000
  3AC:  		Sub   *Var0  00000006 
  3BC:  		Add   *Var1  0000000C 
  3CC:  		Sub   *Var2  00000002 
  3DC:  		Call  PlayEffect    ( ~FX:RadialFlowOut:YellowEnergy *Var0 *Var1 *Var2 *Fixed[0.12] 0000001E 00000000 00000000 00000000 00000000 00000000 00000000 00000000 )
  420:  	Else
  428:  		Sub   *Var0  00000010 
  438:  		Add   *Var1  0000001F 
  448:  		Sub   *Var2  00000002 
  458:  		Call  PlayEffect    ( ~FX:RadialFlowOut:YellowEnergy *Var0 *Var1 *Var2 *Fixed[0.3] 0000001E 00000000 00000000 00000000 00000000 00000000 00000000 00000000 )
  49C:  	EndIf
  4A4:  Else
  4AC:  	Call  GetActorPos       ( .Actor:Self *Var0 *Var1 *Var2 )
  4C8:  	Call  GetStatusFlags    ( .Actor:Self *VarA )
  4DC:  	If  *VarA  &  ~Flags:StatusFlags:Shrink % 80000
  4EC:  		Sub   *Var0  0000000C 
  4FC:  		Add   *Var1  0000000E 
  50C:  		Sub   *Var2  00000002 
  51C:  		Call  PlayEffect    ( ~FX:RadialFlowOut:YellowEnergy *Var0 *Var1 *Var2 *Fixed[0.12] 0000001E 00000000 00000000 00000000 00000000 00000000 00000000 00000000 )
  560:  	Else
  568:  		Sub   *Var0  0000001E 
  578:  		Add   *Var1  00000024 
  588:  		Sub   *Var2  00000002 
  598:  		Call  PlayEffect    ( ~FX:RadialFlowOut:YellowEnergy *Var0 *Var1 *Var2 *Fixed[0.3] 0000001E 00000000 00000000 00000000 00000000 00000000 00000000 00000000 )
  5DC:  	EndIf
  5E4:  EndIf
  5EC:  Wait  30`
  5F8:  Call  GetActorFlags ( .Actor:Self *Var0 )
  60C:  If  *Var0  !&  00000200 
  61C:  	Call  SetAnimation  ( .Actor:Self 00000001 00560001 )
  634:  Else
  63C:  	Call  SetAnimation  ( .Actor:Self 00000002 00570001 )
  654:  EndIf
  65C:  Wait  5`
  668:  Thread
  670:  	Wait  10`
  67C:  	Call  PlaySoundAtActor  ( *Var8 000002DD )
  690:  EndThread
  698:  Thread
  6A0:  	Call  8026BF48      ( 00000001 )
  6B0:  	Call  BoostAttack   ( *Var8 00000001 )
  6C4:  	Call  8026BF48      ( 00000000 )
  6D4:  EndThread
  6DC:  Call  WaitForBuffDone ( )
  6E8:  Call  UseBattleCamPreset    ( 00000002 )
  6F8:  Wait  10`
  704:  Call  YieldTurn ( )
  710:  Call  EnableIdleScript      ( .Actor:Self 00000001 )
  724:  Call  UseIdleAnimation      ( .Actor:Self .True )
  738:  Return
  740:  End
}

#new:Script $Script_BoostDefense_22 {
    0:  Set   *Flag[00]  .False 
   10:  Label  A
   1C:  Call  EnemyCreateTargetList ( 00008002 )
   2C:  Call  InitTargetIterator ( )
   38:  Label  0
   44:  Call  GetOwnerTarget    ( *Var0 *Var1 )
   58:  Call  GetIndexFromHome  ( *Var0 *Var1 )
   6C:  Call  GetBattleVar      ( 00000002 *Var2 )
   80:  If  *Var1  >  *Var2 
   90:  	Call  $Function_80218638_22 ( *Var0 *Var3 )
   A4:  	If  *Var3  ==  00000000 
   B4:  		Call  GetActorDefenseBoost  ( *Var0 *Var4 )
   C8:  		If  *Var4  <  00000003 
   D8:  			Set   *Var8  *Var0 
   E8:  			Call  SetBattleVar  ( 00000002 *Var1 )
   FC:  			Goto  64
  108:  		EndIf
  110:  	EndIf
  118:  EndIf
  120:  Call  ChooseNextTarget  ( .Iter:Next *Var0 )
  134:  If  *Var0  !=  FFFFFFFF 
  144:  	Goto  0
  150:  EndIf
  158:  If  *Flag[00]  ==  .False 
  168:  	Set   *Flag[00]  .True 
  178:  	Call  SetBattleVar  ( 00000002 FFFFFFFF )
  18C:  	Goto  A
  198:  EndIf
  1A0:  Call  CountPlayerTargets    ( .Actor:Self 00008002 *Var0 )
  1B8:  If  *Var0  ==  00000001 
  1C8:  	ExecWait  $Script_RunAway_22 
  1D4:  	Return
  1DC:  EndIf
  1E4:  ExecWait  $Script_ShapeSpell_22 
  1F0:  Return
  1F8:  Label  64
  204:  Call  SetActorVar       ( .Actor:Self 0000000A 00000000 )
  21C:  Call  SetActorVar       ( .Actor:Self 0000000B 00000005 )
  234:  Call  AddActorVar       ( .Actor:Self 00000006 00000001 )
  24C:  Call  UseIdleAnimation  ( .Actor:Self .False )
  260:  Call  EnableIdleScript  ( .Actor:Self 00000000 )
  274:  Call  SetTargetActor    ( .Actor:Self .Actor:Player )
  288:  Call  UseBattleCamPreset    ( 0000000E )
  298:  Call  BattleCamTargetActor  ( .Actor:Self )
  2A8:  Call  MoveBattleCamOver (  15` )
  2B8:  Wait  15`
  2C4:  Call  GetActorFlags     ( .Actor:Self *Var0 )
  2D8:  If  *Var0  !&  00000200 
  2E8:  	Call  SetAnimation  ( .Actor:Self 00000001 00560002 )
  300:  Else
  308:  	Call  SetAnimation  ( .Actor:Self 00000002 00570002 )
  320:  EndIf
  328:  Wait  5`
  334:  Call  PlaySoundAtActor  ( .Actor:Self .Sound:SpellCast1 )
  348:  Call  GetActorFlags     ( .Actor:Self *Var0 )
  35C:  If  *Var0  !&  00000200 
  36C:  	Call  GetActorPos       ( .Actor:Self *Var0 *Var1 *Var2 )
  388:  	Call  GetStatusFlags    ( .Actor:Self *VarA )
  39C:  	If  *VarA  &  ~Flags:StatusFlags:Shrink % 80000
  3AC:  		Sub   *Var0  00000006 
  3BC:  		Add   *Var1  0000000C 
  3CC:  		Sub   *Var2  00000002 
  3DC:  		Call  PlayEffect    ( ~FX:RadialFlowOut:YellowEnergy *Var0 *Var1 *Var2 *Fixed[0.12] 0000001E 00000000 00000000 00000000 00000000 00000000 00000000 00000000 )
  420:  	Else
  428:  		Sub   *Var0  00000010 
  438:  		Add   *Var1  0000001F 
  448:  		Sub   *Var2  00000002 
  458:  		Call  PlayEffect    ( ~FX:RadialFlowOut:YellowEnergy *Var0 *Var1 *Var2 *Fixed[0.3] 0000001E 00000000 00000000 00000000 00000000 00000000 00000000 00000000 )
  49C:  	EndIf
  4A4:  Else
  4AC:  	Call  GetActorPos       ( .Actor:Self *Var0 *Var1 *Var2 )
  4C8:  	Call  GetStatusFlags    ( .Actor:Self *VarA )
  4DC:  	If  *VarA  &  ~Flags:StatusFlags:Shrink % 80000
  4EC:  		Sub   *Var0  0000000C 
  4FC:  		Add   *Var1  0000000E 
  50C:  		Sub   *Var2  00000002 
  51C:  		Call  PlayEffect    ( ~FX:RadialFlowOut:YellowEnergy *Var0 *Var1 *Var2 *Fixed[0.12] 0000001E 00000000 00000000 00000000 00000000 00000000 00000000 00000000 )
  560:  	Else
  568:  		Sub   *Var0  0000001E 
  578:  		Add   *Var1  00000024 
  588:  		Sub   *Var2  00000002 
  598:  		Call  PlayEffect    ( ~FX:RadialFlowOut:YellowEnergy *Var0 *Var1 *Var2 *Fixed[0.3] 0000001E 00000000 00000000 00000000 00000000 00000000 00000000 00000000 )
  5DC:  	EndIf
  5E4:  EndIf
  5EC:  Wait  30`
  5F8:  Call  GetActorFlags ( .Actor:Self *Var0 )
  60C:  If  *Var0  !&  00000200 
  61C:  	Call  SetAnimation  ( .Actor:Self 00000001 00560001 )
  634:  Else
  63C:  	Call  SetAnimation  ( .Actor:Self 00000002 00570001 )
  654:  EndIf
  65C:  Wait  5`
  668:  Thread
  670:  	Wait  10`
  67C:  	Call  PlaySoundAtActor  ( *Var8 000002DD )
  690:  EndThread
  698:  Thread
  6A0:  	Call  8026BF48      ( 00000001 )
  6B0:  	Call  BoostDefense  ( *Var8 00000001 )
  6C4:  	Call  8026BF48      ( 00000000 )
  6D4:  EndThread
  6DC:  Call  WaitForBuffDone ( )
  6E8:  Call  UseBattleCamPreset    ( 00000002 )
  6F8:  Wait  10`
  704:  Call  YieldTurn ( )
  710:  Call  EnableIdleScript      ( .Actor:Self 00000001 )
  724:  Call  UseIdleAnimation      ( .Actor:Self .True )
  738:  Return
  740:  End
}

#new:Script $Script_Electrify_22 {
    0:  Set   *Flag[00]  .False 
   10:  Label  A
   1C:  Call  EnemyCreateTargetList ( 00008002 )
   2C:  Call  InitTargetIterator ( )
   38:  Label  0
   44:  Call  GetOwnerTarget    ( *Var0 *Var1 )
   58:  Call  GetIndexFromHome  ( *Var0 *Var1 )
   6C:  Call  GetBattleVar      ( 00000002 *Var2 )
   80:  If  *Var1  >  *Var2 
   90:  	Call  $Function_80218638_22 ( *Var0 *Var3 )
   A4:  	If  *Var3  ==  00000000 
   B4:  		Call  GetStatusFlags    ( *Var0 *Var4 )
   C8:  		If  *Var4  !&  ~Flags:StatusFlags:Static|Transparent % 4002000
   D8:  			Set   *Var8  *Var0 
   E8:  			Call  SetBattleVar  ( 00000002 *Var1 )
   FC:  			Goto  64
  108:  		EndIf
  110:  	EndIf
  118:  EndIf
  120:  Call  ChooseNextTarget  ( .Iter:Next *Var0 )
  134:  If  *Var0  !=  FFFFFFFF 
  144:  	Goto  0
  150:  EndIf
  158:  If  *Flag[00]  ==  .False 
  168:  	Set   *Flag[00]  .True 
  178:  	Call  SetBattleVar  ( 00000002 FFFFFFFF )
  18C:  	Goto  A
  198:  EndIf
  1A0:  Call  CountPlayerTargets    ( .Actor:Self 00008002 *Var0 )
  1B8:  If  *Var0  ==  00000001 
  1C8:  	ExecWait  $Script_RunAway_22 
  1D4:  	Return
  1DC:  EndIf
  1E4:  ExecWait  $Script_ShapeSpell_22 
  1F0:  Return
  1F8:  Label  64
  204:  Call  SetActorVar       ( .Actor:Self 0000000A 00000000 )
  21C:  Call  SetActorVar       ( .Actor:Self 0000000B 00000006 )
  234:  Call  AddActorVar       ( .Actor:Self 00000007 00000001 )
  24C:  Call  UseIdleAnimation  ( .Actor:Self .False )
  260:  Call  EnableIdleScript  ( .Actor:Self 00000000 )
  274:  Call  SetTargetActor    ( .Actor:Self .Actor:Player )
  288:  Call  UseBattleCamPreset    ( 0000000E )
  298:  Call  BattleCamTargetActor  ( .Actor:Self )
  2A8:  Call  MoveBattleCamOver (  15` )
  2B8:  Wait  15`
  2C4:  Call  GetActorFlags     ( .Actor:Self *Var0 )
  2D8:  If  *Var0  !&  00000200 
  2E8:  	Call  SetAnimation  ( .Actor:Self 00000001 00560002 )
  300:  Else
  308:  	Call  SetAnimation  ( .Actor:Self 00000002 00570002 )
  320:  EndIf
  328:  Wait  5`
  334:  Call  PlaySoundAtActor  ( .Actor:Self 000002F0 )
  348:  Call  GetActorFlags     ( .Actor:Self *Var0 )
  35C:  If  *Var0  !&  00000200 
  36C:  	Call  GetActorPos       ( .Actor:Self *Var0 *Var1 *Var2 )
  388:  	Call  GetStatusFlags    ( .Actor:Self *VarA )
  39C:  	If  *VarA  &  ~Flags:StatusFlags:Shrink % 80000
  3AC:  		Sub   *Var0  00000006 
  3BC:  		Add   *Var1  0000000C 
  3CC:  		Sub   *Var2  00000002 
  3DC:  		Call  PlayEffect    ( ~FX:SnakingStatic *Var0 *Var1 *Var2 *Fixed[0.12] 0000001E 00000000 00000000 00000000 00000000 00000000 00000000 00000000 )
  420:  	Else
  428:  		Sub   *Var0  00000010 
  438:  		Add   *Var1  0000001F 
  448:  		Sub   *Var2  00000002 
  458:  		Call  PlayEffect    ( ~FX:SnakingStatic *Var0 *Var1 *Var2 *Fixed[0.3] 0000001E 00000000 00000000 00000000 00000000 00000000 00000000 00000000 )
  49C:  	EndIf
  4A4:  Else
  4AC:  	Call  GetActorPos       ( .Actor:Self *Var0 *Var1 *Var2 )
  4C8:  	Call  GetStatusFlags    ( .Actor:Self *VarA )
  4DC:  	If  *VarA  &  ~Flags:StatusFlags:Shrink % 80000
  4EC:  		Sub   *Var0  0000000C 
  4FC:  		Add   *Var1  0000000E 
  50C:  		Sub   *Var2  00000002 
  51C:  		Call  PlayEffect    ( ~FX:SnakingStatic *Var0 *Var1 *Var2 *Fixed[0.12] 0000001E 00000000 00000000 00000000 00000000 00000000 00000000 00000000 )
  560:  	Else
  568:  		Sub   *Var0  0000001E 
  578:  		Add   *Var1  00000024 
  588:  		Sub   *Var2  00000002 
  598:  		Call  PlayEffect    ( ~FX:SnakingStatic *Var0 *Var1 *Var2 *Fixed[0.3] 0000001E 00000000 00000000 00000000 00000000 00000000 00000000 00000000 )
  5DC:  	EndIf
  5E4:  EndIf
  5EC:  Wait  30`
  5F8:  Call  GetActorFlags ( .Actor:Self *Var0 )
  60C:  If  *Var0  !&  00000200 
  61C:  	Call  SetAnimation  ( .Actor:Self 00000001 00560001 )
  634:  Else
  63C:  	Call  SetAnimation  ( .Actor:Self 00000002 00570001 )
  654:  EndIf
  65C:  Wait  5`
  668:  Thread
  670:  	Wait  10`
  67C:  	Loop  00000004 
  688:  		Call  PlaySoundAtActor  ( *Var8 000003D2 )
  69C:  		Call  RandInt   ( 00000003 *Var0 )
  6B0:  		Add   *Var0  00000003 
  6C0:  		Wait  *Var0 
  6CC:  	EndLoop
  6D4:  EndThread
  6DC:  Thread
  6E4:  	Call  8026BF48  ( 00000001 )
  6F4:  	Call  ElectrifyActor    ( *Var8 00000003 )
  708:  	Call  8026BF48  ( 00000000 )
  718:  EndThread
  720:  Call  WaitForBuffDone ( )
  72C:  Call  UseBattleCamPreset    ( 00000002 )
  73C:  Wait  10`
  748:  Call  YieldTurn ( )
  754:  Call  EnableIdleScript      ( .Actor:Self 00000001 )
  768:  Call  UseIdleAnimation      ( .Actor:Self .True )
  77C:  Return
  784:  End
}

#new:Script $Script_Vanish_22 {
    0:  Set   *Flag[00]  .False 
   10:  Label  A
   1C:  Call  EnemyCreateTargetList ( 00008002 )
   2C:  Call  InitTargetIterator ( )
   38:  Label  0
   44:  Call  GetOwnerTarget    ( *Var0 *Var1 )
   58:  Call  GetIndexFromHome  ( *Var0 *Var1 )
   6C:  Call  GetBattleVar      ( 00000002 *Var2 )
   80:  If  *Var1  >  *Var2 
   90:  	Call  $Function_80218638_22 ( *Var0 *Var3 )
   A4:  	If  *Var3  ==  00000000 
   B4:  		Call  GetStatusFlags    ( *Var0 *Var4 )
   C8:  		If  *Var4  !&  ~Flags:StatusFlags:Static|Transparent % 4002000
   D8:  			Set   *Var8  *Var0 
   E8:  			Call  SetBattleVar  ( 00000002 *Var1 )
   FC:  			Goto  64
  108:  		EndIf
  110:  	EndIf
  118:  EndIf
  120:  Call  ChooseNextTarget  ( .Iter:Next *Var0 )
  134:  If  *Var0  !=  FFFFFFFF 
  144:  	Goto  0
  150:  EndIf
  158:  If  *Flag[00]  ==  .False 
  168:  	Set   *Flag[00]  .True 
  178:  	Call  SetBattleVar  ( 00000002 FFFFFFFF )
  18C:  	Goto  A
  198:  EndIf
  1A0:  Call  CountPlayerTargets    ( .Actor:Self 00008002 *Var0 )
  1B8:  If  *Var0  ==  00000001 
  1C8:  	ExecWait  $Script_RunAway_22 
  1D4:  	Return
  1DC:  EndIf
  1E4:  ExecWait  $Script_ShapeSpell_22 
  1F0:  Return
  1F8:  Label  64
  204:  Call  SetActorVar       ( .Actor:Self 0000000A 00000000 )
  21C:  Call  SetActorVar       ( .Actor:Self 0000000B 00000007 )
  234:  Call  AddActorVar       ( .Actor:Self 00000008 00000001 )
  24C:  Call  UseIdleAnimation  ( .Actor:Self .False )
  260:  Call  EnableIdleScript  ( .Actor:Self 00000000 )
  274:  Call  SetTargetActor    ( .Actor:Self .Actor:Player )
  288:  Call  UseBattleCamPreset    ( 0000000E )
  298:  Call  BattleCamTargetActor  ( .Actor:Self )
  2A8:  Call  MoveBattleCamOver (  15` )
  2B8:  Wait  15`
  2C4:  Call  GetActorFlags     ( .Actor:Self *Var0 )
  2D8:  If  *Var0  !&  00000200 
  2E8:  	Call  SetAnimation  ( .Actor:Self 00000001 00560002 )
  300:  Else
  308:  	Call  SetAnimation  ( .Actor:Self 00000002 00570002 )
  320:  EndIf
  328:  Wait  5`
  334:  Call  PlaySoundAtActor  ( .Actor:Self .Sound:SpellCast1 )
  348:  Call  GetActorFlags     ( .Actor:Self *Var0 )
  35C:  If  *Var0  !&  00000200 
  36C:  	Call  GetActorPos       ( .Actor:Self *Var0 *Var1 *Var2 )
  388:  	Call  GetStatusFlags    ( .Actor:Self *VarA )
  39C:  	If  *VarA  &  ~Flags:StatusFlags:Shrink % 80000
  3AC:  		Sub   *Var0  00000006 
  3BC:  		Add   *Var1  0000000C 
  3CC:  		Sub   *Var2  00000002 
  3DC:  		Call  PlayEffect    ( ~FX:RadialFlowOut:WhiteWaves *Var0 *Var1 *Var2 *Fixed[0.12] 0000001E 00000000 00000000 00000000 00000000 00000000 00000000 00000000 )
  420:  	Else
  428:  		Sub   *Var0  00000010 
  438:  		Add   *Var1  0000001F 
  448:  		Sub   *Var2  00000002 
  458:  		Call  PlayEffect    ( ~FX:RadialFlowOut:WhiteWaves *Var0 *Var1 *Var2 *Fixed[0.3] 0000001E 00000000 00000000 00000000 00000000 00000000 00000000 00000000 )
  49C:  	EndIf
  4A4:  Else
  4AC:  	Call  GetActorPos       ( .Actor:Self *Var0 *Var1 *Var2 )
  4C8:  	Call  GetStatusFlags    ( .Actor:Self *VarA )
  4DC:  	If  *VarA  &  ~Flags:StatusFlags:Shrink % 80000
  4EC:  		Sub   *Var0  0000000C 
  4FC:  		Add   *Var1  0000000E 
  50C:  		Sub   *Var2  00000002 
  51C:  		Call  PlayEffect    ( ~FX:RadialFlowOut:WhiteWaves *Var0 *Var1 *Var2 *Fixed[0.12] 0000001E 00000000 00000000 00000000 00000000 00000000 00000000 00000000 )
  560:  	Else
  568:  		Sub   *Var0  0000001E 
  578:  		Add   *Var1  00000024 
  588:  		Sub   *Var2  00000002 
  598:  		Call  PlayEffect    ( ~FX:RadialFlowOut:WhiteWaves *Var0 *Var1 *Var2 *Fixed[0.3] 0000001E 00000000 00000000 00000000 00000000 00000000 00000000 00000000 )
  5DC:  	EndIf
  5E4:  EndIf
  5EC:  Wait  30`
  5F8:  Call  GetActorFlags ( .Actor:Self *Var0 )
  60C:  If  *Var0  !&  00000200 
  61C:  	Call  SetAnimation  ( .Actor:Self 00000001 00560001 )
  634:  Else
  63C:  	Call  SetAnimation  ( .Actor:Self 00000002 00570001 )
  654:  EndIf
  65C:  Wait  5`
  668:  Thread
  670:  	Wait  10`
  67C:  	Call  PlaySoundAtActor  ( *Var8 000002DB )
  690:  EndThread
  698:  Thread
  6A0:  	Call  8026BF48      ( 00000001 )
  6B0:  	Call  VanishActor   ( *Var8 00000002 )
  6C4:  	Call  8026BF48      ( 00000000 )
  6D4:  EndThread
  6DC:  Call  WaitForBuffDone ( )
  6E8:  Call  UseBattleCamPreset    ( 00000002 )
  6F8:  Wait  10`
  704:  Call  YieldTurn ( )
  710:  Call  EnableIdleScript      ( .Actor:Self 00000001 )
  724:  Call  UseIdleAnimation      ( .Actor:Self .True )
  738:  Return
  740:  End
}

#new:Script $Script_TakeTurn_8022B784_22 {
    0:  Call  GetBattlePhase    ( *Var0 )
   10:  If  *Var0  ==  00000001 
   20:  	ExecWait  $Script_ShapeSpell_22 
   2C:  	Return
   34:  EndIf
   3C:  Call  GetActorVar   ( .Actor:Self 0000000A *Var0 )
   54:  If  *Var0  ==  00000001 
   64:  	Goto  14
   70:  EndIf
   78:  Set   *VarA  00000000 
   88:  Call  EnemyCreateTargetList ( 00008002 )
   98:  Call  InitTargetIterator ( )
   A4:  Label  0
   B0:  Set   *Flag[00]  .False 
   C0:  Call  GetOwnerTarget        ( *Var0 *Var1 )
   D4:  Call  GetOriginalActorType  ( *Var0 *Var1 )
   E8:  If  *Var1  ==  00000047 
   F8:  	Call  GetActorVar   ( *Var0 00000008 *Var1 )
  110:  	If  *Var1  ==  00000001 
  120:  		Set   *Flag[00]  .True 
  130:  	EndIf
  138:  EndIf
  140:  Call  GetActorHP    ( *Var0 *Var2 )
  154:  Call  GetEnemyMaxHP ( *Var0 *Var3 )
  168:  MulF  *Var2  *Fixed[100.0] 
  178:  DivF  *Var2  *Var3 
  188:  If  *Flag[00]  ==  .False 
  198:  	If  *Var2  <=  00000019 
  1A8:  		Call  RandInt   ( 00000063 *Var4 )
  1BC:  		Add   *Var4  00000001 
  1CC:  		If  *Var4  <  0000004B 
  1DC:  			Add   *VarA  00000001 
  1EC:  			Set   *VarB  *Var0 
  1FC:  		EndIf
  204:  	EndIf
  20C:  EndIf
  214:  Call  ChooseNextTarget  ( .Iter:Next *Var0 )
  228:  If  *Var0  !=  FFFFFFFF 
  238:  	Goto  0
  244:  EndIf
  24C:  If  *VarA  >  00000000 
  25C:  	Goto  A
  268:  EndIf
  270:  Set   *VarA  00000000 
  280:  Call  EnemyCreateTargetList ( 00008002 )
  290:  Call  InitTargetIterator ( )
  29C:  Label  1
  2A8:  Set   *Flag[00]  .False 
  2B8:  Call  GetOwnerTarget        ( *Var0 *Var1 )
  2CC:  Call  GetOriginalActorType  ( *Var0 *Var1 )
  2E0:  If  *Var1  ==  00000047 
  2F0:  	Call  GetActorVar   ( *Var0 00000008 *Var1 )
  308:  	If  *Var1  ==  00000001 
  318:  		Set   *Flag[00]  .True 
  328:  	EndIf
  330:  EndIf
  338:  Call  GetActorHP    ( *Var0 *Var2 )
  34C:  Call  GetEnemyMaxHP ( *Var0 *Var3 )
  360:  MulF  *Var2  *Fixed[100.0] 
  370:  DivF  *Var2  *Var3 
  380:  If  *Flag[00]  ==  .False 
  390:  	If  *Var2  <=  00000014 
  3A0:  		Call  RandInt   ( 00000063 *Var4 )
  3B4:  		Add   *Var4  00000001 
  3C4:  		If  *Var4  <  00000050 
  3D4:  			Add   *VarA  00000001 
  3E4:  			Set   *VarB  *Var0 
  3F4:  		EndIf
  3FC:  	EndIf
  404:  EndIf
  40C:  Call  ChooseNextTarget  ( .Iter:Next *Var0 )
  420:  If  *Var0  !=  FFFFFFFF 
  430:  	Goto  1
  43C:  EndIf
  444:  If  *VarA  >  00000000 
  454:  	Goto  A
  460:  EndIf
  468:  Set   *VarA  00000000 
  478:  Call  EnemyCreateTargetList ( 00008002 )
  488:  Call  InitTargetIterator ( )
  494:  Label  2
  4A0:  Set   *Flag[00]  .False 
  4B0:  Call  GetOwnerTarget        ( *Var0 *Var1 )
  4C4:  Call  GetOriginalActorType  ( *Var0 *Var1 )
  4D8:  If  *Var1  ==  00000047 
  4E8:  	Call  GetActorVar   ( *Var0 00000008 *Var1 )
  500:  	If  *Var1  ==  00000001 
  510:  		Set   *Flag[00]  .True 
  520:  	EndIf
  528:  EndIf
  530:  Call  GetActorHP    ( *Var0 *Var2 )
  544:  Call  GetEnemyMaxHP ( *Var0 *Var3 )
  558:  MulF  *Var2  *Fixed[100.0] 
  568:  DivF  *Var2  *Var3 
  578:  If  *Flag[00]  ==  .False 
  588:  	If  *Var2  <=  0000000F 
  598:  		Call  RandInt   ( 00000063 *Var4 )
  5AC:  		Add   *Var4  00000001 
  5BC:  		If  *Var4  <  00000064 
  5CC:  			Add   *VarA  00000001 
  5DC:  			Set   *VarB  *Var0 
  5EC:  		EndIf
  5F4:  	EndIf
  5FC:  EndIf
  604:  Call  ChooseNextTarget  ( .Iter:Next *Var0 )
  618:  If  *Var0  !=  FFFFFFFF 
  628:  	Goto  2
  634:  EndIf
  63C:  If  *VarA  >  00000000 
  64C:  	Goto  A
  658:  EndIf
  660:  Goto  14
  66C:  Label  A
  678:  Call  CountPlayerTargets    ( .Actor:Self 00008002 *Var0 )
  690:  If  *Var0  ==  00000001 
  6A0:  	ExecWait  $Script_RunAway_22 
  6AC:  	Return
  6B4:  EndIf
  6BC:  If  *VarA  ==  00000001 
  6CC:  	Call  GetActorVar   ( .Actor:Self 00000004 *Var0 )
  6E4:  	If  *Var0  <  00000002 
  6F4:  		Call  RandInt   ( 000003E8 *Var0 )
  708:  		If  *Var0  <  000001F4 
  718:  			ExecWait  $Script_HealOne_22 
  724:  			Return
  72C:  		EndIf
  734:  	Else
  73C:  		Call  GetActorVar   ( .Actor:Self 00000003 *Var0 )
  754:  		If  *Var0  <  00000002 
  764:  			Call  RandInt   ( 000003E8 *Var0 )
  778:  			If  *Var0  <  000001F4 
  788:  				ExecWait  $Script_HealAll_22 
  794:  				Return
  79C:  			EndIf
  7A4:  		EndIf
  7AC:  	EndIf
  7B4:  Else
  7BC:  	Call  GetActorVar   ( .Actor:Self 00000003 *Var0 )
  7D4:  	If  *Var0  <  00000002 
  7E4:  		Call  RandInt   ( 000003E8 *Var0 )
  7F8:  		If  *Var0  <  000001F4 
  808:  			ExecWait  $Script_HealAll_22 
  814:  			Return
  81C:  		EndIf
  824:  	Else
  82C:  		Call  GetActorVar   ( .Actor:Self 00000004 *Var0 )
  844:  		If  *Var0  <  00000002 
  854:  			SetF  *Var9  *Fixed[100.0] 
  864:  			Call  EnemyCreateTargetList ( 00008002 )
  874:  			Call  InitTargetIterator ( )
  880:  			Label  B
  88C:  			Set   *Flag[00]  .False 
  89C:  			Call  GetOwnerTarget        ( *Var0 *Var1 )
  8B0:  			Call  GetOriginalActorType  ( *Var0 *Var1 )
  8C4:  			If  *Var1  ==  00000047 
  8D4:  				Call  GetActorVar   ( *Var0 00000008 *Var1 )
  8EC:  				If  *Var1  ==  00000001 
  8FC:  					Set   *Flag[00]  .True 
  90C:  				EndIf
  914:  			EndIf
  91C:  			Call  GetActorHP    ( *Var0 *Var2 )
  930:  			Call  GetEnemyMaxHP ( *Var0 *Var3 )
  944:  			MulF  *Var2  *Fixed[100.0] 
  954:  			DivF  *Var2  *Var3 
  964:  			If  *Flag[00]  ==  .False 
  974:  				If  *Var2  <=  *Var9 
  984:  					SetF  *Var9  *Var2 
  994:  					Set   *VarB  *Var0 
  9A4:  				EndIf
  9AC:  			EndIf
  9B4:  			Call  ChooseNextTarget  ( .Iter:Next *Var0 )
  9C8:  			If  *Var0  !=  FFFFFFFF 
  9D8:  				Goto  B
  9E4:  			EndIf
  9EC:  			Call  RandInt   ( 000003E8 *Var0 )
  A00:  			If  *Var0  <  000001F4 
  A10:  				ExecWait  $Script_HealOne_22 
  A1C:  				Return
  A24:  			EndIf
  A2C:  		EndIf
  A34:  	EndIf
  A3C:  EndIf
  A44:  Label  14
  A50:  Set   *VarA  0000000A 
  A60:  Set   *VarB  0000000A 
  A70:  Set   *VarC  0000000A 
  A80:  Set   *VarD  0000000A 
  A90:  Set   *VarE  0000000A 
  AA0:  Set   *VarF  0000000A 
  AB0:  Call  GetActorVar   ( .Actor:Self 0000000A *Var0 )
  AC8:  If  *Var0  ==  00000001 
  AD8:  	Set   *VarA  00000064 
  AE8:  	Set   *VarB  00000000 
  AF8:  	Set   *VarC  00000000 
  B08:  	Set   *VarD  00000000 
  B18:  	Set   *VarE  00000000 
  B28:  	Set   *VarF  00000000 
  B38:  	Goto  7B
  B44:  Else
  B4C:  	ExecWait  $Script_80228DA4_22 
  B58:  	If  *Var0  ==  FFFFFFFF 
  B68:  		Set   *VarB  00000000 
  B78:  	EndIf
  B80:  EndIf
  B88:  Call  GetStatusFlags    ( .Actor:Self *Var0 )
  B9C:  If  *Var0  !=  ~Flags:StatusFlags:0 % 0
  BAC:  	Set   *VarB  00000000 
  BBC:  EndIf
  BC4:  Call  GetActorVar   ( .Actor:Self 0000000B *Var0 )
  BDC:  Switch  *Var0 
  BE8:  	Case  ==  00000004 
  BF4:  		Call  GetActorVar   ( .Actor:Self 00000005 *Var1 )
  C0C:  		If  *Var1  <  00000003 
  C1C:  			Call  RandInt   ( 00000063 *Var0 )
  C30:  			Add   *Var0  00000001 
  C40:  			If  *Var0  <=  00000032 
  C50:  				Set   *VarA  00000000 
  C60:  				Set   *VarB  00000000 
  C70:  				Set   *VarC  00000064 
  C80:  				Set   *VarD  00000000 
  C90:  				Set   *VarE  00000000 
  CA0:  				Set   *VarF  00000000 
  CB0:  			EndIf
  CB8:  		EndIf
  CC0:  	Case  ==  00000005 
  CCC:  		Call  GetActorVar   ( .Actor:Self 00000006 *Var1 )
  CE4:  		If  *Var1  <  00000003 
  CF4:  			Call  RandInt   ( 00000063 *Var0 )
  D08:  			Add   *Var0  00000001 
  D18:  			If  *Var0  <=  00000032 
  D28:  				Set   *VarA  00000000 
  D38:  				Set   *VarB  00000000 
  D48:  				Set   *VarC  00000000 
  D58:  				Set   *VarD  00000064 
  D68:  				Set   *VarE  00000000 
  D78:  				Set   *VarF  00000000 
  D88:  			EndIf
  D90:  		EndIf
  D98:  EndSwitch
  DA0:  Call  GetActorVar   ( .Actor:Self 00000005 *Var0 )
  DB8:  If  *Var0  >=  00000003 
  DC8:  	Set   *VarC  00000000 
  DD8:  EndIf
  DE0:  Call  GetActorVar   ( .Actor:Self 00000006 *Var0 )
  DF8:  If  *Var0  >=  00000003 
  E08:  	Set   *VarD  00000000 
  E18:  EndIf
  E20:  Call  GetActorVar   ( .Actor:Self 00000007 *Var0 )
  E38:  If  *Var0  >=  00000003 
  E48:  	Set   *VarE  00000000 
  E58:  EndIf
  E60:  Call  GetActorVar   ( .Actor:Self 00000008 *Var0 )
  E78:  If  *Var0  >=  00000003 
  E88:  	Set   *VarF  00000000 
  E98:  EndIf
  EA0:  Label  7B
  EAC:  Set   *Var9  00000000 
  EBC:  Add   *Var9  *VarA 
  ECC:  Add   *Var9  *VarB 
  EDC:  Add   *Var9  *VarC 
  EEC:  Add   *Var9  *VarD 
  EFC:  Add   *Var9  *VarE 
  F0C:  Add   *Var9  *VarF 
  F1C:  Sub   *Var9  00000001 
  F2C:  Call  RandInt   ( *Var9 *Var0 )
  F40:  Add   *Var0  00000001 
  F50:  If  *Var0  <=  *VarA 
  F60:  	ExecWait  $Script_ShapeSpell_22 
  F6C:  	Return
  F74:  EndIf
  F7C:  Add   *VarA  *VarB 
  F8C:  If  *Var0  <=  *VarA 
  F9C:  	ExecWait  $Script_MakeCopy_22 
  FA8:  	Return
  FB0:  EndIf
  FB8:  Add   *VarA  *VarC 
  FC8:  If  *Var0  <=  *VarA 
  FD8:  	ExecWait  $Script_BoostAttack_22 
  FE4:  	Return
  FEC:  EndIf
  FF4:  Add   *VarA  *VarD 
 1004:  If  *Var0  <=  *VarA 
 1014:  	ExecWait  $Script_BoostDefense_22 
 1020:  	Return
 1028:  EndIf
 1030:  Add   *VarA  *VarE 
 1040:  If  *Var0  <=  *VarA 
 1050:  	ExecWait  $Script_Electrify_22 
 105C:  	Return
 1064:  EndIf
 106C:  ExecWait  $Script_Vanish_22 
 1078:  Return
 1080:  End
}

