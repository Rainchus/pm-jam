% Automatically dumped from section 05

#new:Actor $05_KentCKoopa {
% stats
[Index]        B9b 
[Level]        55`b 
[MaxHP]        70`b 
[Coins]         0`b 
[Flags]       00000000 
[StatusTable] $StatusTable_80227A08_05 
% ai
[PartsCount]    9`s 
[PartsTable]  $PartsTable_80227AB4_05 
[Script]      $Script_Init_80227C20_05 
% move effectiveness
[Escape]        0`b 
[Item]          0`b 
[AirLift]       0`b 
[Hurricane]     0`b % Bow's "Spook" as well
[UpAndAway]     0`b 
[PowerBounce]  70`b 
[SpinSmash]     0`b % weight (0-4)
% ui positions
[Size]         90`b  70`b % width height
[HealthBar]     0`b   0`b % dx dy
[StatusTurn]  -26`b  38`b % dx dy
[StatusIcon]    2`b  63`b % dx dy
}

#new:Function $Function_80218B50_05 {
    0:  ADDIU     SP, SP, FFE0
    4:  SW        S1, 14 (SP)
    8:  COPY      S1, A0
    C:  SW        RA, 18 (SP)
   10:  SW        S0, 10 (SP)
   14:  LW        S0, C (S1)
   18:  LW        A1, 0 (S0)
   1C:  JAL       ~Func:get_variable
   20:  ADDIU     S0, S0, 4
   24:  COPY      A0, S1
   28:  LW        A1, 0 (S0)
   2C:  JAL       ~Func:get_variable
   30:  COPY      S0, V0
   34:  COPY      A0, S0
   38:  JAL       ~Func:start_rumble
   3C:  COPY      A1, V0
   40:  LW        RA, 18 (SP)
   44:  LW        S1, 14 (SP)
   48:  LW        S0, 10 (SP)
   4C:  LI        V0, 2
   50:  JR        RA
   54:  ADDIU     SP, SP, 20
}

#new:Function $Function_80218BA8_05 {
    0:  ADDIU     SP, SP, FFD8
    4:  SW        S1, 14 (SP)
    8:  COPY      S1, A0
    C:  SW        RA, 20 (SP)
   10:  SW        S3, 1C (SP)
   14:  SW        S2, 18 (SP)
   18:  SW        S0, 10 (SP)
   1C:  LW        S0, C (S1)
   20:  LW        A1, 0 (S0)
   24:  JAL       ~Func:get_variable
   28:  ADDIU     S0, S0, 4
   2C:  LW        A1, 0 (S0)
   30:  ADDIU     S0, S0, 4
   34:  COPY      A0, S1
   38:  JAL       ~Func:get_variable
   3C:  COPY      S3, V0
   40:  LW        A1, 0 (S0)
   44:  ADDIU     S0, S0, 4
   48:  COPY      A0, S1
   4C:  JAL       ~Func:get_variable
   50:  COPY      S2, V0
   54:  COPY      A0, S1
   58:  LW        A1, 0 (S0)
   5C:  JAL       ~Func:get_variable
   60:  COPY      S0, V0
   64:  LW        A0, 148 (S1)
   68:  JAL       ~Func:get_actor
   6C:  COPY      S1, V0
   70:  COPY      V1, V0
   74:  LW        V0, 8 (V1)
   78:  LBU       V0, 24 (V0)
   7C:  LW        A0, 8 (V1)
   80:  SUBU      S3, S3, V0
   84:  SB        S3, 194 (V1)
   88:  LBU       V0, 25 (A0)
   8C:  SUBU      S2, S2, V0
   90:  SB        S2, 195 (V1)
   94:  LBU       V0, 26 (A0)
   98:  SUBU      S0, S0, V0
   9C:  SB        S0, 196 (V1)
   A0:  LBU       A0, 27 (A0)
   A4:  SUBU      S1, S1, A0
   A8:  SB        S1, 197 (V1)
   AC:  LW        RA, 20 (SP)
   B0:  LW        S3, 1C (SP)
   B4:  LW        S2, 18 (SP)
   B8:  LW        S1, 14 (SP)
   BC:  LW        S0, 10 (SP)
   C0:  LI        V0, 2
   C4:  JR        RA
   C8:  ADDIU     SP, SP, 28
}

#new:Function $Function_80218C74_05 {
    0:  ADDIU     SP, SP, FFB8
    4:  SW        S1, 14 (SP)
    8:  COPY      S1, A0
    C:  SW        RA, 24 (SP)
   10:  SW        S4, 20 (SP)
   14:  SW        S3, 1C (SP)
   18:  SW        S2, 18 (SP)
   1C:  SW        S0, 10 (SP)
   20:  SDC1      F26, 40 (SP)
   24:  SDC1      F24, 38 (SP)
   28:  SDC1      F22, 30 (SP)
   2C:  SDC1      F20, 28 (SP)
   30:  LW        S0, C (S1)
   34:  LW        A1, 0 (S0)
   38:  JAL       ~Func:get_variable
   3C:  ADDIU     S0, S0, 4
   40:  COPY      A0, S1
   44:  LW        A1, 0 (S0)
   48:  JAL       ~Func:get_variable
   4C:  COPY      S2, V0
   50:  LI        A0, 168
   54:  JAL       ~Func:rand_int
   58:  COPY      S3, V0
   5C:  MTC1      V0, F22
   60:  NOP
   64:  CVT.S.W   F22, F22
   68:  LIF       F24, 46.0
   70:  JAL       ~Func:cos_deg
   74:  MOV.S     F12, F22
   78:  MUL.S     F0, F0, F24
   7C:  NOP
   80:  MTC1      S2, F20
   84:  NOP
   88:  CVT.S.W   F20, F20
   8C:  ADD.S     F0, F20, F0
   90:  TRUNC.W.S F2, F0
   94:  MFC1      S2, F2
   98:  JAL       ~Func:sin_deg
   9C:  MOV.S     F12, F22
   A0:  MUL.S     F0, F0, F24
   A4:  NOP
   A8:  MTC1      S3, F24
   AC:  NOP
   B0:  CVT.S.W   F24, F24
   B4:  ADD.S     F0, F24, F0
   B8:  LIF       F26, 62.0
   C0:  TRUNC.W.S F2, F0
   C4:  MFC1      S3, F2
   C8:  JAL       ~Func:cos_deg
   CC:  MOV.S     F12, F22
   D0:  MUL.S     F0, F0, F26
   D4:  NOP
   D8:  ADD.S     F20, F20, F0
   DC:  TRUNC.W.S F2, F20
   E0:  MFC1      S4, F2
   E4:  JAL       ~Func:sin_deg
   E8:  MOV.S     F12, F22
   EC:  MUL.S     F0, F0, F26
   F0:  NOP
   F4:  ADDIU     S0, S0, 4
   F8:  LW        A1, 0 (S0)
   FC:  ADDIU     S0, S0, 4
  100:  ADD.S     F24, F24, F0
  104:  COPY      A2, S2
  108:  TRUNC.W.S F2, F24
  10C:  MFC1      S2, F2
  110:  JAL       ~Func:set_variable
  114:  COPY      A0, S1
  118:  LW        A1, 0 (S0)
  11C:  ADDIU     S0, S0, 4
  120:  COPY      A0, S1
  124:  JAL       ~Func:set_variable
  128:  COPY      A2, S3
  12C:  LW        A1, 0 (S0)
  130:  ADDIU     S0, S0, 4
  134:  COPY      A0, S1
  138:  JAL       ~Func:set_variable
  13C:  COPY      A2, S4
  140:  COPY      A0, S1
  144:  LW        A1, 0 (S0)
  148:  JAL       ~Func:set_variable
  14C:  COPY      A2, S2
  150:  LW        RA, 24 (SP)
  154:  LW        S4, 20 (SP)
  158:  LW        S3, 1C (SP)
  15C:  LW        S2, 18 (SP)
  160:  LW        S1, 14 (SP)
  164:  LW        S0, 10 (SP)
  168:  LDC1      F26, 40 (SP)
  16C:  LDC1      F24, 38 (SP)
  170:  LDC1      F22, 30 (SP)
  174:  LDC1      F20, 28 (SP)
  178:  LI        V0, 2
  17C:  JR        RA
  180:  ADDIU     SP, SP, 48
}

#new:IntTable $IntTable_80227910_05 {
00000009 00000010 00000016 0000001A 0000001E 00000020 00000021 00000020 
0000001E 0000001A 00000016 00000010 00000009 00000000 00000004 00000006 
00000007 00000006 00000004 00000000 00000002 00000000 
}

#new:IdleAnimations $IdleAnimations_80227968_05 {
.Status:Normal    00470001
.Status:Stone     00470000
.Status:Sleep     00470013
.Status:Poison    00470001
.Status:Stop      00470000
.Status:Static    00470000
.Status:Paralyze  00470000
.Status:Dizzy     00470014
.Status:Fear      00470000
.Status:End
}

#new:IdleAnimations $IdleAnimations_802279B4_05 {
.Status:Normal    0047001A
.Status:Stop      00470019
.Status:Paralyze  00470019
.Status:End
}

#new:IdleAnimations $IdleAnimations_802279D0_05 {
.Status:Normal    00D50000
.Status:End
}

#new:DefenseTable $DefenseTable_802279DC_05 {
.Element:Normal 00000006
.Element:Blast  00000006
.Element:End
}

#new:DefenseTable $DefenseTable_802279F0_05 {
.Element:Normal 00000003
.Element:End
}

#new:DefenseTable $DefenseTable_802279FC_05 {
.Element:Normal 00000000
.Element:End
}

#new:StatusTable $StatusTable_80227A08_05 {
.Status:Normal      0`
.Status:Default     0`
.Status:Sleep      80`
.Status:Poison      0`
.Status:Frozen      0`
.Status:Dizzy      30`
.Status:Fear        0`
.Status:Static      0`
.Status:Paralyze   30`
.Status:Shrink     40`
.Status:Stop       50`
.Status:DefaultTurnMod    0`
.Status:SleepTurnMod      1`
.Status:PoisonTurnMod     0`
.Status:FrozenTurnMod     0`
.Status:DizzyTurnMod     -1`
.Status:FearTurnMod       0`
.Status:StaticTurnMod     0`
.Status:ParalyzeTurnMod  -1`
.Status:ShrinkTurnMod    -1`
.Status:StopTurnMod      -2`
.Status:End
}

#new:PartsTable $PartsTable_80227AB4_05 {
00800000 01000000 003C00FF $IdleAnimations_80227968_05 $DefenseTable_802279DC_05 00001000 00000000 00000000 00000000 
00020000 020C3D00 00EC00FF 00000000 $DefenseTable_802279F0_05 00000000 00000000 00000000 00000000 
00020000 032D0000 BA1A00FF 00000000 $DefenseTable_802279FC_05 00000000 00000000 00000000 00000000 
00120003 04000000 000000FF $IdleAnimations_802279D0_05 $DefenseTable_802279FC_05 00000000 00000000 00000000 00000000 
00120003 05000000 000000FF $IdleAnimations_802279D0_05 $DefenseTable_802279FC_05 00000000 00000000 00000000 00000000 
00120003 06000000 000000FF $IdleAnimations_802279D0_05 $DefenseTable_802279FC_05 00000000 00000000 00000000 00000000 
00120003 07000000 000000FF $IdleAnimations_802279D0_05 $DefenseTable_802279FC_05 00000000 00000000 00000000 00000000 
00120003 08000000 000000FF $IdleAnimations_802279D0_05 $DefenseTable_802279FC_05 00000000 00000000 00000000 00000000 
00120003 09000000 000000FF $IdleAnimations_802279D0_05 $DefenseTable_802279FC_05 00000000 00000000 00000000 00000000 
}

#new:Script $Script_Init_80227C20_05 {
    0:  Call  8027D434      ( FFFFFF81 00000003 00000046 )
   18:  Call  SetPartSize   ( .Actor:Self 00000003  30`  30` )
   34:  Call  BindTakeTurn  ( .Actor:Self $Script_TakeTurn_80228A7C_05 )
   48:  Call  BindIdle      ( .Actor:Self $Script_Idle_80227DD4_05 )
   5C:  Call  BindHandleEvent   ( .Actor:Self $Script_HandleEvent_80227E08_05 )
   70:  Call  BindNextTurn  ( .Actor:Self $Script_NextTurn_80227D2C_05 )
   84:  Call  SetActorVar   ( .Actor:Self 00000000 00000000 )
   9C:  Call  SetActorVar   ( .Actor:Self 00000001 0047001C )
   B4:  Call  SetActorVar   ( .Actor:Self 00000002 00000000 )
   CC:  Call  SetActorVar   ( .Actor:Self 00000003 00000014 )
   E4:  Call  SetActorVar   ( .Actor:Self 00000004 00000002 )
   FC:  Return
  104:  End
}

#new:Script $Script_NextTurn_80227D2C_05 {
    0:  Call  UseIdleAnimation  ( .Actor:Self .False )
   14:  Call  EnableIdleScript  ( .Actor:Self 00000000 )
   28:  Call  GetBattlePhase    ( *Var0 )
   38:  Switch  *Var0 
   44:  	Case  ==  0000000A 
   50:  		Call  SetActorVar   ( .Actor:Self 00000004 00000002 )
   68:  EndSwitch
   70:  Call  EnableIdleScript  ( .Actor:Self 00000001 )
   84:  Call  UseIdleAnimation  ( .Actor:Self .True )
   98:  Return
   A0:  End
}

#new:Script $Script_Idle_80227DD4_05 {
    0:  Label  0
    C:  Wait  1`
   18:  Goto  0
   24:  Return
   2C:  End
}

#new:Script $Script_HandleEvent_80227E08_05 {
    0:  Call  UseIdleAnimation  ( .Actor:Self .False )
   14:  Call  EnableIdleScript  ( .Actor:Self 00000000 )
   28:  Call  GetLastElement    ( *VarE )
   38:  Call  GetLastEvent      ( .Actor:Self *VarD )
   4C:  Switch  *VarD 
   58:  	Case  ==  .Event:BeginFirstStrike % 38
   64:  	Case  ==  .Event:HitCombo % 9
   70:  		SetConst  *Var0  00000001 
   80:  		Call  GetActorVar   ( .Actor:Self 00000001 *Var1 )
   98:  		ExecWait  DoNormalHit 
   A4:  	Case  ==  .Event:Hit % A
   B0:  		SetConst  *Var0  00000001 
   C0:  		Call  GetActorVar   ( .Actor:Self 00000001 *Var1 )
   D8:  		ExecWait  DoNormalHit 
   E4:  		Call  SetActorVar   ( .Actor:Self 00000004 00000002 )
   FC:  	Case  ==  .Event:Death % 20
  108:  		SetConst  *Var0  00000001 
  118:  		Call  GetActorVar   ( .Actor:Self 00000001 *Var1 )
  130:  		ExecWait  DoNormalHit 
  13C:  		Wait  10`
  148:  		SetConst  *Var0  00000001 
  158:  		Call  GetActorVar   ( .Actor:Self 00000001 *Var1 )
  170:  		ExecWait  DoDeath 
  17C:  		Return
  184:  	Case  ==  .Event:BurnHit % E
  190:  		Call  SetActorVar   ( .Actor:Self 00000004 00000002 )
  1A8:  		Call  GetActorVar   ( .Actor:Self 00000000 *Var0 )
  1C0:  		If  *Var0  ==  00000000 
  1D0:  			Set   *Var0  00000001 
  1E0:  			Set   *Var1  00470015 
  1F0:  			Set   *Var2  00470016 
  200:  			ExecWait  DoBurnHit 
  20C:  		Else
  214:  			Set   *Var0  00000001 
  224:  			Set   *Var1  00470017 
  234:  			Set   *Var2  00470018 
  244:  			ExecWait  DoBurnHit 
  250:  		EndIf
  258:  	Case  ==  .Event:BurnDeath % 24
  264:  		Call  GetActorVar   ( .Actor:Self 00000000 *Var0 )
  27C:  		If  *Var0  ==  00000000 
  28C:  			Set   *Var0  00000001 
  29C:  			Set   *Var1  00470015 
  2AC:  			Set   *Var2  00470016 
  2BC:  		Else
  2C4:  			Set   *Var0  00000001 
  2D4:  			Set   *Var1  00470017 
  2E4:  			Set   *Var2  00470018 
  2F4:  		EndIf
  2FC:  		ExecWait  DoBurnHit 
  308:  		Wait  10`
  314:  		SetConst  *Var0  00000001 
  324:  		SetConst  *Var1  *Var2 
  334:  		ExecWait  DoDeath 
  340:  		Return
  348:  	Case  ==  .Event:SpinSmashHit % B
  354:  		Call  SetActorVar   ( .Actor:Self 00000004 00000002 )
  36C:  		Call  GetActorVar   ( .Actor:Self 00000000 *Var0 )
  384:  		If  *Var0  ==  00000000 
  394:  			SetConst  *Var0  00000001 
  3A4:  			Call  GetActorVar   ( .Actor:Self 00000001 *Var1 )
  3BC:  			ExecWait  DoNormalHit 
  3C8:  		Else
  3D0:  			SetConst  *Var0  00000001 
  3E0:  			Call  GetActorVar   ( .Actor:Self 00000001 *Var1 )
  3F8:  			ExecWait  $Script_8022B158_05 
  404:  		EndIf
  40C:  	Case  ==  .Event:SpinSmashDeath % 21
  418:  		Call  GetActorVar   ( .Actor:Self 00000000 *Var0 )
  430:  		If  *Var0  ==  00000000 
  440:  			SetConst  *Var0  00000001 
  450:  			Call  GetActorVar   ( .Actor:Self 00000001 *Var1 )
  468:  			ExecWait  DoNormalHit 
  474:  			SetConst  *Var0  00000001 
  484:  			Call  GetActorVar   ( .Actor:Self 00000001 *Var1 )
  49C:  			ExecWait  DoDeath 
  4A8:  			Return
  4B0:  		Else
  4B8:  			SetConst  *Var0  00000001 
  4C8:  			Call  GetActorVar   ( .Actor:Self 00000001 *Var1 )
  4E0:  			ExecWait  $Script_8022B204_05 
  4EC:  			Return
  4F4:  		EndIf
  4FC:  	Case  ==  .Event:ShockHit % 2F
  508:  		SetConst  *Var0  00000001 
  518:  		Call  GetActorVar   ( .Actor:Self 00000001 *Var1 )
  530:  		ExecWait  DoShockHit 
  53C:  		SetConst  *Var0  00000001 
  54C:  		Call  GetActorVar   ( .Actor:Self 00000001 *Var1 )
  564:  		ExecWait  DoJumpBack 
  570:  		SetConst  *Var0  00000001 
  580:  		Call  GetActorVar   ( .Actor:Self 00000001 *Var1 )
  598:  		ExecWait  DoReturnHome 
  5A4:  	Case  ==  .Event:ShockDeath % 26
  5B0:  		SetConst  *Var0  00000001 
  5C0:  		Call  GetActorVar   ( .Actor:Self 00000001 *Var1 )
  5D8:  		ExecWait  DoShockHit 
  5E4:  		SetConst  *Var0  00000001 
  5F4:  		Call  GetActorVar   ( .Actor:Self 00000001 *Var1 )
  60C:  		ExecWait  DoJumpBack 
  618:  		SetConst  *Var0  00000001 
  628:  		Call  GetActorVar   ( .Actor:Self 00000001 *Var1 )
  640:  		ExecWait  DoDeath 
  64C:  		Return
  654:  	Case  ==  00000017 % 17
  660:  		Call  GetActorVar   ( .Actor:Self 00000000 *Var0 )
  678:  		If  *Var0  ==  00000000 
  688:  			SetConst  *Var0  00000001 
  698:  			SetConst  *Var1  00470009 
  6A8:  			ExecWait  DoImmune 
  6B4:  		Else
  6BC:  			SetConst  *Var0  00000001 
  6CC:  			SetConst  *Var1  0047001A 
  6DC:  			ExecWait  DoImmune 
  6E8:  		EndIf
  6F0:  	Case  ==  .Event:Immune % 19
  6FC:  		Call  SetActorVar   ( .Actor:Self 00000004 00000002 )
  714:  		Call  GetActorVar   ( .Actor:Self 00000000 *Var0 )
  72C:  		If  *Var0  ==  00000000 
  73C:  			SetConst  *Var0  00000001 
  74C:  			SetConst  *Var1  00470009 
  75C:  			ExecWait  DoImmune 
  768:  			Call  GetStatusFlags    ( .Actor:Self *Var2 )
  77C:  			If  *Var2  ==  ~Flags:StatusFlags:0 % 0
  78C:  				Wait  20`
  798:  				Call  SetAnimation  ( .Actor:Self 00000001 0047000C )
  7B0:  				Wait  8`
  7BC:  			EndIf
  7C4:  		Else
  7CC:  			SetConst  *Var0  00000001 
  7DC:  			SetConst  *Var1  0047001A 
  7EC:  			ExecWait  DoImmune 
  7F8:  		EndIf
  800:  	Case  ==  .Event:AirLiftFailed % 1F
  80C:  		Call  GetActorVar   ( .Actor:Self 00000000 *Var0 )
  824:  		If  *Var0  ==  00000000 
  834:  			Set   *Var1  00470001 
  844:  		Else
  84C:  			Set   *Var1  0047001A 
  85C:  		EndIf
  864:  		Set   *Var0  00000001 
  874:  		ExecWait  DoImmune 
  880:  	Case  ==  .Event:EndFirstStrike % 35
  88C:  		ExecWait  $Script_8022AD84_05 
  898:  		Call  HPBarToHome   ( .Actor:Self )
  8A8:  	Case  ==  .Event:RecoverStatus % 31
  8B4:  		Call  GetActorVar   ( .Actor:Self 00000000 *Var0 )
  8CC:  		If  *Var0  ==  00000000 
  8DC:  			SetConst  *Var1  00470001 
  8EC:  			SetConst  *Var0  00000001 
  8FC:  			ExecWait  DoRecover 
  908:  		Else
  910:  			SetConst  *Var0  00000001 
  920:  			SetConst  *Var1  0047001A 
  930:  			ExecWait  DoImmune 
  93C:  		EndIf
  944:  	Case  ==  .Event:FlipTrigger % D
  950:  		Call  GetActorVar   ( .Actor:Self 00000000 *Var0 )
  968:  		If  *Var0  ==  00000001 
  978:  			SetConst  *Var0  00000001 
  988:  			SetConst  *Var1  00470012 
  998:  			ExecWait  DoNormalHit 
  9A4:  			Return
  9AC:  		EndIf
  9B4:  		Call  GetActorVar   ( .Actor:Self 00000004 *Var0 )
  9CC:  		If  *Var0  >  00000000 
  9DC:  			Sub   *Var0  00000001 
  9EC:  			Call  SetActorVar   ( .Actor:Self 00000004 *Var0 )
  A04:  		EndIf
  A0C:  		Call  80269E80  ( *Var0 )
  A1C:  		If  *Var0  ==  00000016 
  A2C:  			Call  SetActorVar   ( .Actor:Self 00000004 00000000 )
  A44:  		EndIf
  A4C:  		Call  GetActorVar   ( .Actor:Self 00000004 *Var0 )
  A64:  		If  *Var0  ==  00000000 
  A74:  			Call  GetBattleFlags    ( *VarD )
  A84:  			If  *VarD  &  00000020 
  A94:  				Call  SetActorVar   ( .Actor:Self 00000004 00000002 )
  AAC:  			EndIf
  AB4:  			ExecWait  $Script_FlipOver_KentC_05 
  AC0:  		Else
  AC8:  			Call  GetBattleFlags    ( *VarD )
  AD8:  			If  *VarD  &  00000020 
  AE8:  				Call  SetActorVar   ( .Actor:Self 00000004 00000002 )
  B00:  				Call  GetLastDamage ( .Actor:Self *Var0 )
  B14:  				If  *Var0  >  00000000 
  B24:  					SetConst  *Var0  00000001 
  B34:  					SetConst  *Var1  0047001C 
  B44:  					ExecWait  DoNormalHit 
  B50:  				Else
  B58:  					SetConst  *Var0  00000001 
  B68:  					SetConst  *Var1  00470009 
  B78:  					ExecWait  DoImmune 
  B84:  					Call  GetStatusFlags    ( .Actor:Self *Var2 )
  B98:  					If  *Var2  ==  ~Flags:StatusFlags:0 % 0
  BA8:  						Wait  20`
  BB4:  						Call  SetAnimation  ( .Actor:Self 00000001 0047000C )
  BCC:  						Wait  8`
  BD8:  					EndIf
  BE0:  				EndIf
  BE8:  			Else
  BF0:  				SetConst  *Var0  00000001 
  C00:  				SetConst  *Var1  0047001C 
  C10:  				ExecWait  DoNormalHit 
  C1C:  			EndIf
  C24:  		EndIf
  C2C:  	Default
  C34:  EndSwitch
  C3C:  Call  EnableIdleScript  ( .Actor:Self 00000001 )
  C50:  Call  UseIdleAnimation  ( .Actor:Self .True )
  C64:  Return
  C6C:  End
}

#new:Script $Script_TakeTurn_80228A7C_05 {
    0:  Call  SetActorVar   ( .Actor:Self 00000004 00000002 )
   18:  Call  GetActorVar   ( .Actor:Self 00000000 *Var0 )
   30:  If  *Var0  ==  00000001 
   40:  	Call  UseIdleAnimation  ( .Actor:Self .False )
   54:  	Call  EnableIdleScript  ( .Actor:Self 00000000 )
   68:  	Call  UseBattleCamPreset    ( 0000000E )
   78:  	Call  SetBattleCamZoom  (  200` )
   88:  	Call  SetBattleCamOffsetZ   (  20` )
   98:  	Call  BattleCamTargetActor  ( .Actor:Self )
   A8:  	Call  MoveBattleCamOver (  25` )
   B8:  	Call  GetActorVar       ( .Actor:Self 00000002 *Var0 )
   D0:  	Sub   *Var0  00000001 
   E0:  	Call  SetActorVar       ( .Actor:Self 00000002 *Var0 )
   F8:  	If  *Var0  >  00000000 
  108:  		Call  GetActorPos       ( .Actor:Self *Var0 *Var1 *Var2 )
  124:  		Add   *Var0  00000024 
  134:  		Add   *Var1  00000012 
  144:  		Call  SetAnimationRate  ( .Actor:Self 00000001 *Fixed[3.0] )
  15C:  		Loop  00000005 
  168:  			Call  PlayEffect    ( ~FX:Sweat:Large *Var0 *Var1 *Var2 00000001 000000E1 0000000A 00000000 00000000 00000000 00000000 00000000 00000000 )
  1AC:  			Wait  5`
  1B8:  		EndLoop
  1C0:  		Wait  30`
  1CC:  		Call  SetAnimationRate  ( .Actor:Self 00000001 *Fixed[1.0] )
  1E4:  		Call  UseBattleCamPreset    ( 00000002 )
  1F4:  		Call  MoveBattleCamOver (  20` )
  204:  		Call  EnableIdleScript  ( .Actor:Self 00000001 )
  218:  		Call  UseIdleAnimation  ( .Actor:Self .True )
  22C:  		Return
  234:  	Else
  23C:  		Call  GetActorPos       ( .Actor:Self *Var0 *Var1 *Var2 )
  258:  		Add   *Var0  00000024 
  268:  		Add   *Var1  00000012 
  278:  		Call  SetAnimationRate  ( .Actor:Self 00000001 *Fixed[3.0] )
  290:  		Loop  00000005 
  29C:  			Call  PlayEffect    ( ~FX:Sweat:Large *Var0 *Var1 *Var2 00000001 000000E1 0000000A 00000000 00000000 00000000 00000000 00000000 00000000 )
  2E0:  			Wait  5`
  2EC:  		EndLoop
  2F4:  		Call  SetAnimationRate  ( .Actor:Self 00000001 *Fixed[3.0] )
  30C:  		Wait  30`
  318:  		Call  UseBattleCamPreset    ( 00000002 )
  328:  		Call  MoveBattleCamOver (  15` )
  338:  		Call  SetAnimationRate  ( .Actor:Self 00000001 *Fixed[1.0] )
  350:  		Call  SetAnimation      ( .Actor:Self 00000001 00470019 )
  368:  		Thread
  370:  			Wait  3`
  37C:  			Call  GetStatusFlags    ( .Actor:Self *Var0 )
  390:  			If  *Var0  !&  ~Flags:StatusFlags:Shrink % 80000
  3A0:  				Call  SetActorRotationOffset    ( .Actor:Self 00000000 0000001B 00000000 )
  3BC:  			Else
  3C4:  				Call  SetActorRotationOffset    ( .Actor:Self 00000000 0000000A 00000000 )
  3E0:  			EndIf
  3E8:  			Set   *Var0  00000000 
  3F8:  			Loop  00000005 
  404:  				Add   *Var0  00000024 
  414:  				Call  SetActorRotation  ( .Actor:Self 00000000 00000000 *Var0 )
  430:  				Wait  1`
  43C:  			EndLoop
  444:  		EndThread
  44C:  		Call  SetActorJumpGravity   ( .Actor:Self *Fixed[1.0] )
  460:  		Call  GetActorPos       ( .Actor:Self *Var0 *Var1 *Var2 )
  47C:  		Call  SetGoalPos        ( .Actor:Self *Var0 *Var1 *Var2 )
  498:  		Call  JumpToGoal        ( .Actor:Self  15` .False .True .False )
  4B8:  		Call  GetStatusFlags    ( .Actor:Self *Var3 )
  4CC:  		If  *Var3  !&  ~Flags:StatusFlags:Shrink % 80000
  4DC:  			Call  $Function_80218B50_05 ( 00000050 0000000E )
  4F0:  			Call  ShakeCam  ( .Cam:Battle 00000000  2` *Fixed[0.5] )
  50C:  		EndIf
  514:  		Wait  3`
  520:  		Call  SetActorRotation  ( .Actor:Self 00000000 00000000 00000000 )
  53C:  		Call  SetActorRotationOffset    ( .Actor:Self 00000000 00000000 00000000 )
  558:  		Call  SetAnimation      ( .Actor:Self 00000001 0047000C )
  570:  		Wait  10`
  57C:  		Call  SetDefenseTable   ( .Actor:Self 00000001 $DefenseTable_802279DC_05 )
  594:  		Call  SetEnemyTargetOffset      ( .Actor:Self 00000001  0`  60` )
  5B0:  		Call  SetPartFlagBits   ( .Actor:Self 00000003 00020000 .True )
  5CC:  		Call  SetPartFlagBits   ( .Actor:Self 00000003 00800000 .False )
  5E8:  		Call  SetPartFlags      ( .Actor:Self 00000002 00020004 )
  600:  		Call  SetPartFlags      ( .Actor:Self 00000001 00800004 )
  618:  		Call  SetIdleAnimations ( .Actor:Self 00000001 $IdleAnimations_80227968_05 )
  630:  		Call  $Function_80218BA8_05     ( FFFFFFE6 00000026 00000002 0000003F )
  64C:  		Call  SetActorVar       ( .Actor:Self 00000000 00000000 )
  664:  		Call  SetActorVar       ( .Actor:Self 00000001 0047001C )
  67C:  	EndIf
  684:  EndIf
  68C:  Call  RandInt   ( 00000064 *Var0 )
  6A0:  If  *Var0  <  00000032 
  6B0:  	Call  GetStatusFlags    ( .Actor:Partner *Var0 )
  6C4:  	If  *Var0  !&  ~Flags:StatusFlags:KO % 1000000
  6D4:  		ExecWait  $Script_ShellToss_KentC_05 
  6E0:  	Else
  6E8:  		ExecWait  $Script_Tackle_KentC_05 
  6F4:  	EndIf
  6FC:  Else
  704:  	ExecWait  $Script_Tackle_KentC_05 
  710:  EndIf
  718:  Return
  720:  End
}

#new:Script $Script_ShellToss_KentC_05 {
    0:  Call  UseIdleAnimation  ( .Actor:Self .False )
   14:  Call  EnableIdleScript  ( .Actor:Self 00000000 )
   28:  Call  SetTargetActor    ( .Actor:Self .Actor:Player )
   3C:  Call  UseBattleCamPreset    ( 0000000E )
   4C:  Call  SetBattleCamZoom  (  200` )
   5C:  Call  SetBattleCamOffsetZ   (  20` )
   6C:  Call  BattleCamTargetActor  ( .Actor:Self )
   7C:  Call  MoveBattleCamOver (  25` )
   8C:  Wait  20`
   98:  Call  SetAnimation      ( .Actor:Self 00000001 0047000B )
   B0:  Wait  10`
   BC:  Thread
   C4:  	Call  GetActorPos   ( .Actor:Self *Var0 *Var1 *Var2 )
   E0:  	Add   *Var1  00000004 
   F0:  	Call  PlayEffect    ( ~FX:SmokeImpact:Small *Var0 *Var1 *Var2 00000020 00000004 00000000 0000000A 00000000 00000000 00000000 00000000 00000000 )
  134:  	Wait  3`
  140:  	Call  PlayEffect    ( ~FX:SmokeImpact:Small *Var0 *Var1 *Var2 00000020 00000004 00000000 0000000A 00000000 00000000 00000000 00000000 00000000 )
  184:  	Wait  2`
  190:  	Call  PlayEffect    ( ~FX:SmokeImpact:Small *Var0 *Var1 *Var2 00000020 00000004 00000000 0000000A 00000000 00000000 00000000 00000000 00000000 )
  1D4:  EndThread
  1DC:  Call  SetActorSounds    ( .Actor:Self .ActorSound:Walk 00000000 00000000 )
  1F8:  Call  PlaySoundAtActor  ( .Actor:Self 00000370 )
  20C:  Call  SetAnimation      ( .Actor:Self 00000001 0047000A )
  224:  Wait  10`
  230:  Call  EnemyTestTarget   ( .Actor:Self *VarA ~Flags:DamageType:0 00000000 00000003 00000010 )
  254:  Switch  *VarA 
  260:  	CaseOR  ==  .HitResult:Miss % 6
  26C:  	CaseOR  ==  .HitResult:Lucky % 5
  278:  		Call  SetTargetActor    ( .Actor:Self .Actor:Partner )
  28C:  		Call  EnemyTestTarget   ( .Actor:Self *VarB ~Flags:DamageType:0 00000000 00000003 00000010 )
  2B0:  		Switch  *VarB 
  2BC:  			Case  ==  .HitResult:Miss % 6
  2C8:  				Call  UseBattleCamPreset    ( 00000002 )
  2D8:  				Call  MoveBattleCamOver (  30` )
  2E8:  				Call  SetGoalToTarget   ( .Actor:Self )
  2F8:  				Call  GetGoalPos    ( .Actor:Self *Var0 *Var1 *Var2 )
  314:  				Sub   *Var0  00000028 
  324:  				Call  SetGoalPos    ( .Actor:Self *Var0 *Var1 *Var2 )
  340:  				Call  SetActorSpeed ( .Actor:Self *Fixed[5.0] )
  354:  				Call  SetGoalPos    ( .Actor:Self  -240`  0` *Var2 )
  370:  				Call  RunToGoal     ( .Actor:Self  0` .False )
  388:  				Call  SetActorPos   ( .Actor:Self  240`  0` *Var2 )
  3A4:  				Call  SetGoalToHome ( .Actor:Self )
  3B4:  				Call  RunToGoal     ( .Actor:Self  0` .False )
  3CC:  				Call  ResetAllActorSounds   ( .Actor:Self )
  3DC:  				Call  StopSound     ( 00000370 )
  3EC:  				Call  SetAnimation  ( .Actor:Self 00000001 0047000C )
  404:  				Wait  8`
  410:  				Call  YieldTurn ( )
  41C:  				Call  SetAnimation  ( .Actor:Self 00000001 00470001 )
  434:  				Call  EnableIdleScript  ( .Actor:Self 00000001 )
  448:  				Call  UseIdleAnimation  ( .Actor:Self .True )
  45C:  				Return
  464:  			Default
  46C:  				Call  GetStatusFlags    ( .Actor:Player *Var0 )
  480:  				If  *Var0  !&  ~Flags:StatusFlags:Sleep|Frozen|Fear|Paralyze|Dizzy|Stone|Stop|Transparent % 435D000
  490:  					Call  UseIdleAnimation  ( .Actor:Player .False )
  4A4:  					Call  SetAnimation      ( .Actor:Player 00000000 0001002B )
  4BC:  				EndIf
  4C4:  				Call  UseBattleCamPreset    ( 00000013 )
  4D4:  				Call  SetBattleCamTarget    (  -25`  60`  0` )
  4EC:  				Call  SetBattleCamZoom  (  460` )
  4FC:  				Call  SetBattleCamOffsetZ   (  0` )
  50C:  				Call  MoveBattleCamOver (  50` )
  51C:  				Call  SetTargetActor    ( .Actor:Self .Actor:Player )
  530:  				Call  SetGoalToTarget   ( .Actor:Self )
  540:  				Call  GetGoalPos        ( .Actor:Self *Var0 *Var1 *Var2 )
  55C:  				Call  GetStatusFlags    ( .Actor:Self *Var3 )
  570:  				If  *Var3  !&  ~Flags:StatusFlags:Shrink % 80000
  580:  					Add   *Var0  00000020 
  590:  				Else
  598:  					Add   *Var0  0000000C 
  5A8:  				EndIf
  5B0:  				Set   *Var1  00000000 
  5C0:  				Call  SetActorSpeed ( .Actor:Self *Fixed[5.0] )
  5D4:  				Call  SetGoalPos    ( .Actor:Self *Var0 *Var1 *Var2 )
  5F0:  				Call  RunToGoal     ( .Actor:Self  0` .False )
  608:  				If  *VarA  ==  .HitResult:Lucky % 5
  618:  					Call  EnemyTestTarget   ( .Actor:Self *Var0 ~Flags:DamageType:TriggerLucky 00000000 00000000 00000000 )
  63C:  				EndIf
  644:  				Set   *VarA  00000001 
  654:  		EndSwitch
  65C:  	EndCaseGroup
  664:  	Default
  66C:  		Call  UseBattleCamPreset    ( 00000013 )
  67C:  		Call  SetBattleCamTarget    (  -25`  60`  0` )
  694:  		Call  SetBattleCamZoom      (  460` )
  6A4:  		Call  SetBattleCamOffsetZ   (  0` )
  6B4:  		Call  MoveBattleCamOver     (  50` )
  6C4:  		Call  UseIdleAnimation      ( .Actor:Player .False )
  6D8:  		Call  GetStatusFlags        ( .Actor:Player *Var0 )
  6EC:  		If  *Var0  !&  ~Flags:StatusFlags:Sleep|Frozen|Fear|Paralyze|Dizzy|Stone|Stop|Transparent % 435D000
  6FC:  			Call  SetAnimation  ( .Actor:Player 00000000 0001002B )
  714:  		EndIf
  71C:  		Call  SetGoalToTarget   ( .Actor:Self )
  72C:  		Call  GetGoalPos        ( .Actor:Self *Var0 *Var1 *Var2 )
  748:  		Call  GetStatusFlags    ( .Actor:Self *Var3 )
  75C:  		If  *Var3  !&  ~Flags:StatusFlags:Shrink % 80000
  76C:  			Add   *Var0  00000020 
  77C:  		Else
  784:  			Add   *Var0  0000000C 
  794:  		EndIf
  79C:  		Set   *Var1  00000000 
  7AC:  		Call  SetActorSpeed     ( .Actor:Self *Fixed[5.0] )
  7C0:  		Call  SetGoalPos        ( .Actor:Self *Var0 *Var1 *Var2 )
  7DC:  		Call  RunToGoal ( .Actor:Self  0` .False )
  7F4:  		Call  SetGoalToTarget   ( .Actor:Self )
  804:  		Call  GetStatusFlags    ( .Actor:Self *VarE )
  818:  		If  *VarE  !&  ~Flags:StatusFlags:Shrink % 80000
  828:  			Call  80269EAC  ( 00000018 )
  838:  		EndIf
  840:  		Call  EnemyDamageTarget ( .Actor:Self *VarF ~Flags:DamageType:0 0000FFFF 00000000 00000003 00000020 )
  868:  		Set   *VarA  00000000 
  878:  		If  *VarE  !&  ~Flags:StatusFlags:Shrink % 80000
  888:  			Call  GetBattleFlags    ( *Var0 )
  898:  			If  *Var0  !&  80000000 
  8A8:  				Call  GetStatusFlags    ( .Actor:Player *Var0 )
  8BC:  				If  *Var0  !&  ~Flags:StatusFlags:Stone % 100000
  8CC:  					Set   *VarA  00000001 
  8DC:  				EndIf
  8E4:  			EndIf
  8EC:  		EndIf
  8F4:  EndSwitch
  8FC:  If  *VarA  !=  00000000 
  90C:  	Call  SetTargetActor    ( .Actor:Self .Actor:Partner )
  920:  	Call  SetGoalToTarget   ( .Actor:Self )
  930:  	Call  GetGoalPos        ( .Actor:Self *Var0 *Var1 *Var2 )
  94C:  	Add   *Var0  00000020 
  95C:  	Call  SetActorSpeed     ( .Actor:Self *Fixed[5.0] )
  970:  	Call  SetGoalPos        ( .Actor:Self *Var0  0` *Var2 )
  98C:  	Call  RunToGoal ( .Actor:Self  0` .False )
  9A4:  	Call  SetGoalToTarget   ( .Actor:Self )
  9B4:  	Call  80269EAC  ( 00000019 )
  9C4:  	Call  EnemyDamageTarget ( .Actor:Self *Var0 ~Flags:DamageType:0 0000FFFF 00000000 00000003 00000020 )
  9EC:  	Call  GetBattleFlags    ( *Var0 )
  9FC:  	If  *Var0  !&  80000000 
  A0C:  		Call  SetGoalToTarget   ( .Actor:Self )
  A1C:  		Call  GetGoalPos    ( .Actor:Self *Var0 *Var1 *Var2 )
  A38:  		Call  SetGoalPos    ( .Actor:Self  -240`  0` *Var2 )
  A54:  		Call  RunToGoal     ( .Actor:Self  0` .False )
  A6C:  		Call  UseBattleCamPreset    ( 00000002 )
  A7C:  		Call  MoveBattleCamOver (  20` )
  A8C:  		Call  SetActorPos   ( .Actor:Self  240`  0` *Var2 )
  AA8:  		Call  SetGoalToHome ( .Actor:Self )
  AB8:  		Call  RunToGoal     ( .Actor:Self  0` .False )
  AD0:  		Call  ResetAllActorSounds   ( .Actor:Self )
  AE0:  		Call  StopSound     ( 00000370 )
  AF0:  		Call  SetAnimation  ( .Actor:Self 00000001 0047000C )
  B08:  		Wait  8`
  B14:  		Call  YieldTurn ( )
  B20:  		Call  SetAnimation  ( .Actor:Self 00000001 00470001 )
  B38:  		Call  EnableIdleScript  ( .Actor:Self 00000001 )
  B4C:  		Call  UseIdleAnimation  ( .Actor:Self .True )
  B60:  		Return
  B68:  	Else
  B70:  		Call  UseBattleCamPreset    ( 00000013 )
  B80:  		Call  SetBattleCamTarget    (  -45`  60`  0` )
  B98:  		Call  SetBattleCamZoom      (  460` )
  BA8:  		Call  SetBattleCamOffsetZ   (  0` )
  BB8:  		Call  MoveBattleCamOver     (  30` )
  BC8:  	EndIf
  BD0:  EndIf
  BD8:  Call  GetActorPos   ( .Actor:Self *Var0 *Var1 *Var2 )
  BF4:  Add   *Var0  0000001E 
  C04:  Set   *Var1  00000000 
  C14:  Call  SetActorJumpGravity   ( .Actor:Self *Fixed[1.8] )
  C28:  Call  SetGoalPos    ( .Actor:Self *Var0 *Var1 *Var2 )
  C44:  Call  JumpToGoal    ( .Actor:Self  8` .False .True .False )
  C64:  Thread
  C6C:  	Call  GetStatusFlags    ( .Actor:Self *Var3 )
  C80:  	If  *Var3  !&  ~Flags:StatusFlags:Shrink % 80000
  C90:  		Call  $Function_80218B50_05 ( 00000050 0000000E )
  CA4:  		Call  ShakeCam  ( .Cam:Battle 00000000  1` *Fixed[0.5] )
  CC0:  	EndIf
  CC8:  EndThread
  CD0:  Add   *Var0  00000010 
  CE0:  Call  SetGoalPos    ( .Actor:Self *Var0 *Var1 *Var2 )
  CFC:  Call  JumpToGoal    ( .Actor:Self  6` .False .True .False )
  D1C:  Thread
  D24:  	Call  GetStatusFlags    ( .Actor:Self *Var3 )
  D38:  	If  *Var3  !&  ~Flags:StatusFlags:Shrink % 80000
  D48:  		Call  $Function_80218B50_05 ( 00000050 0000000E )
  D5C:  		Call  ShakeCam  ( .Cam:Battle 00000000  1` *Fixed[0.5] )
  D78:  	EndIf
  D80:  EndThread
  D88:  Add   *Var0  0000000A 
  D98:  Call  SetGoalPos    ( .Actor:Self *Var0 *Var1 *Var2 )
  DB4:  Call  JumpToGoal    ( .Actor:Self  4` .False .True .False )
  DD4:  Thread
  DDC:  	Call  GetStatusFlags    ( .Actor:Self *Var3 )
  DF0:  	If  *Var3  !&  ~Flags:StatusFlags:Shrink % 80000
  E00:  		Call  $Function_80218B50_05 ( 00000050 0000000E )
  E14:  		Call  ShakeCam  ( .Cam:Battle 00000000  1` *Fixed[0.5] )
  E30:  	EndIf
  E38:  EndThread
  E40:  Call  ResetAllActorSounds   ( .Actor:Self )
  E50:  Call  StopSound ( 00000370 )
  E60:  Call  SetAnimation      ( .Actor:Self 00000001 0047000C )
  E78:  Wait  8`
  E84:  Call  YieldTurn ( )
  E90:  Call  UseBattleCamPreset    ( 00000002 )
  EA0:  Call  MoveBattleCamOver (  20` )
  EB0:  SetConst  *Var0  00000001 
  EC0:  SetConst  *Var1  00470004 
  ED0:  ExecWait  DoReturnHome 
  EDC:  Call  SetAnimation      ( .Actor:Self 00000001 00470001 )
  EF4:  Call  EnableIdleScript  ( .Actor:Self 00000001 )
  F08:  Call  UseIdleAnimation  ( .Actor:Self .True )
  F1C:  Return
  F24:  End
}

#new:Script $Script_Tackle_KentC_05 {
    0:  Call  UseIdleAnimation  ( .Actor:Self .False )
   14:  Call  EnableIdleScript  ( .Actor:Self 00000000 )
   28:  Call  SetTargetActor    ( .Actor:Self .Actor:Player )
   3C:  Call  UseBattleCamPreset    ( 0000003F )
   4C:  Call  SetBattleCamZoom  (  280` )
   5C:  Call  BattleCamTargetActor  ( .Actor:Self )
   6C:  Call  MoveBattleCamOver (  20` )
   7C:  Call  8024ECF8  ( FFFFFFFF 00000001 00000000 )
   94:  Call  SetGoalToTarget   ( .Actor:Self )
   A4:  Call  GetGoalPos        ( .Actor:Self *Var0 *Var1 *Var2 )
   C0:  Add   *Var0  00000032 
   D0:  Set   *Var1  00000000 
   E0:  Call  SetActorSpeed     ( .Actor:Self *Fixed[3.0] )
   F4:  Call  SetAnimation      ( .Actor:Self 00000001 00470003 )
  10C:  Call  SetGoalPos        ( .Actor:Self *Var0 *Var1 *Var2 )
  128:  Call  RunToGoal ( .Actor:Self  0` .False )
  140:  Call  SetAnimation      ( .Actor:Self 00000001 00470001 )
  158:  Wait  8`
  164:  Call  PlaySoundAtActor  ( .Actor:Self 000003E7 )
  178:  Call  EnemyTestTarget   ( .Actor:Self *Var0 ~Flags:DamageType:0 00000000 00000001 00000010 )
  19C:  Switch  *Var0 
  1A8:  	CaseOR  ==  .HitResult:Miss % 6
  1B4:  	CaseOR  ==  .HitResult:Lucky % 5
  1C0:  		Set   *VarA  *Var0 
  1D0:  		Call  SetAnimation  ( .Actor:Self 00000001 00470006 )
  1E8:  		Thread
  1F0:  			Wait  7`
  1FC:  			Call  SetAnimation  ( .Actor:Self 00000001 00470007 )
  214:  			Wait  4`
  220:  			Call  SetAnimation  ( .Actor:Self 00000001 00470008 )
  238:  		EndThread
  240:  		Call  SetActorJumpGravity   ( .Actor:Self *Fixed[1.0] )
  254:  		Call  SetGoalToTarget   ( .Actor:Self )
  264:  		Call  GetGoalPos        ( .Actor:Self *Var0 *Var1 *Var2 )
  280:  		Sub   *Var0  00000014 
  290:  		Set   *Var1  00000000 
  2A0:  		Call  SetGoalPos        ( .Actor:Self *Var0 *Var1 *Var2 )
  2BC:  		Call  JumpToGoal        ( .Actor:Self  20` .False .True .False )
  2DC:  		Call  PlaySoundAtActor  ( .Actor:Self 000020EC )
  2F0:  		Thread
  2F8:  			Call  GetStatusFlags    ( .Actor:Self *Var3 )
  30C:  			If  *Var3  !&  ~Flags:StatusFlags:Shrink % 80000
  31C:  				Call  $Function_80218B50_05 ( 00000050 0000000E )
  330:  				Call  ShakeCam  ( .Cam:Battle 00000000  1` *Fixed[0.5] )
  34C:  			EndIf
  354:  		EndThread
  35C:  		Sub   *Var0  0000000F 
  36C:  		Call  SetActorJumpGravity   ( .Actor:Self *Fixed[1.0] )
  380:  		Call  SetGoalPos        ( .Actor:Self *Var0 *Var1 *Var2 )
  39C:  		Call  JumpToGoal        ( .Actor:Self  12` .False .True .False )
  3BC:  		Call  PlaySoundAtActor  ( .Actor:Self 000020EC )
  3D0:  		Thread
  3D8:  			Call  GetStatusFlags    ( .Actor:Self *Var3 )
  3EC:  			If  *Var3  !&  ~Flags:StatusFlags:Shrink % 80000
  3FC:  				Call  $Function_80218B50_05 ( 00000050 0000000E )
  410:  				Call  ShakeCam  ( .Cam:Battle 00000000  1` *Fixed[0.5] )
  42C:  			EndIf
  434:  		EndThread
  43C:  		Call  SetAnimation  ( .Actor:Self 00000001 00470001 )
  454:  		Sub   *Var0  0000000A 
  464:  		Call  SetGoalPos    ( .Actor:Self *Var0 *Var1 *Var2 )
  480:  		Call  JumpToGoal    ( .Actor:Self  8` .False .True .False )
  4A0:  		Call  PlaySoundAtActor  ( .Actor:Self 000020EC )
  4B4:  		Thread
  4BC:  			Call  GetStatusFlags    ( .Actor:Self *Var3 )
  4D0:  			If  *Var3  !&  ~Flags:StatusFlags:Shrink % 80000
  4E0:  				Call  $Function_80218B50_05 ( 00000050 0000000E )
  4F4:  				Call  ShakeCam  ( .Cam:Battle 00000000  1` *Fixed[0.5] )
  510:  			EndIf
  518:  		EndThread
  520:  		Wait  8`
  52C:  		If  *VarA  ==  .HitResult:Lucky % 5
  53C:  			Call  EnemyTestTarget   ( .Actor:Self *Var0 ~Flags:DamageType:TriggerLucky 00000000 00000000 00000000 )
  560:  		EndIf
  568:  		Call  UseBattleCamPreset    ( 00000002 )
  578:  		Call  MoveBattleCamOver     (  20` )
  588:  		Set   *Var3  00000000 
  598:  		Loop  0000000C 
  5A4:  			Add   *Var3  0000000F 
  5B4:  			Call  SetActorYaw   ( .Actor:Self *Var3 )
  5C8:  			Wait  1`
  5D4:  		EndLoop
  5DC:  		Call  SetGoalToHome ( .Actor:Self )
  5EC:  		Call  SetActorSpeed ( .Actor:Self *Fixed[6.0] )
  600:  		Call  SetAnimation  ( .Actor:Self 00000001 00470004 )
  618:  		Call  SetPartYaw    ( .Actor:Self 00000001  180` )
  630:  		Call  AddActorDecoration    ( .Actor:Self 00000001 00000000 .Decoration:Sweat )
  64C:  		Call  RunToGoal     ( .Actor:Self  0` .False )
  664:  		Call  SetAnimation  ( .Actor:Self 00000001 00470001 )
  67C:  		Call  RemoveActorDecoration ( .Actor:Self 00000001 00000000 )
  694:  		Set   *Var3  000000B4 
  6A4:  		Loop  0000000F 
  6B0:  			Sub   *Var3  0000000C 
  6C0:  			Call  SetActorYaw   ( .Actor:Self *Var3 )
  6D4:  			Wait  1`
  6E0:  		EndLoop
  6E8:  		Call  SetActorYaw       ( .Actor:Self  0` )
  6FC:  		Call  EnableIdleScript  ( .Actor:Self 00000001 )
  710:  		Call  UseIdleAnimation  ( .Actor:Self .True )
  724:  		Return
  72C:  	EndCaseGroup
  734:  EndSwitch
  73C:  Call  SetAnimation  ( .Actor:Self 00000001 00470006 )
  754:  Thread
  75C:  	Wait  5`
  768:  	Call  SetAnimation  ( .Actor:Self 00000001 00470007 )
  780:  	Wait  2`
  78C:  	Call  SetAnimation  ( .Actor:Self 00000001 00470008 )
  7A4:  EndThread
  7AC:  Call  SetActorJumpGravity   ( .Actor:Self *Fixed[1.3] )
  7C0:  Call  SetGoalToTarget   ( .Actor:Self )
  7D0:  Call  JumpToGoal        ( .Actor:Self  14` .False .True .False )
  7F0:  Wait  2`
  7FC:  Call  SetGoalToTarget   ( .Actor:Self )
  80C:  Call  GetStatusFlags    ( .Actor:Self *VarF )
  820:  If  *VarF  !&  ~Flags:StatusFlags:Shrink % 80000
  830:  	Call  80269EAC  ( 00000018 )
  840:  EndIf
  848:  Call  EnemyDamageTarget ( .Actor:Self *VarF ~Flags:DamageType:0 0000FFFF 00000000 0000000A 00000020 )
  870:  Switch  *VarF 
  87C:  	CaseOR  ==  .HitResult:Hit % 0
  888:  	CaseOR  ==  .HitResult:QuakeImmune % 2
  894:  	CaseOR  ==  0000000A % A
  8A0:  		Call  UseBattleCamPreset    ( 00000002 )
  8B0:  		Call  MoveBattleCamOver     (  30` )
  8C0:  		Call  GetBattleFlags        ( *Var0 )
  8D0:  		If  *Var0  !&  80000000 
  8E0:  			Call  GetStatusFlags    ( .Actor:Player *Var0 )
  8F4:  			If  *Var0  !&  ~Flags:StatusFlags:Stone % 100000
  904:  				Call  GetStatusFlags    ( .Actor:Self *VarE )
  918:  				If  *VarE  !&  ~Flags:StatusFlags:Shrink % 80000
  928:  					Call  LandJump  ( .Actor:Self )
  938:  					Call  PlaySoundAtActor  ( .Actor:Self 000020EC )
  94C:  				EndIf
  954:  			EndIf
  95C:  		EndIf
  964:  		Thread
  96C:  			Call  $Function_80218B50_05 ( 00000050 0000000E )
  980:  			Call  GetStatusFlags        ( .Actor:Self *Var3 )
  994:  			If  *Var3  !&  ~Flags:StatusFlags:Shrink % 80000
  9A4:  				Call  $Function_80218B50_05 ( 00000050 0000000E )
  9B8:  				Call  ShakeCam  ( .Cam:Battle 00000000  1` *Fixed[0.5] )
  9D4:  			EndIf
  9DC:  		EndThread
  9E4:  		Thread
  9EC:  			Wait  5`
  9F8:  			Call  SetAnimation  ( .Actor:Self 00000001 00470006 )
  A10:  		EndThread
  A18:  		Call  GetActorPos       ( .Actor:Self *Var0 *Var1 *Var2 )
  A34:  		Add   *Var0  00000028 
  A44:  		Set   *Var1  00000000 
  A54:  		Call  SetActorJumpGravity   ( .Actor:Self *Fixed[1.0] )
  A68:  		Call  SetGoalPos        ( .Actor:Self *Var0 *Var1 *Var2 )
  A84:  		Call  JumpToGoal        ( .Actor:Self  12` .False .True .False )
  AA4:  		Call  PlaySoundAtActor  ( .Actor:Self 000020EC )
  AB8:  		Thread
  AC0:  			Call  GetStatusFlags    ( .Actor:Self *Var3 )
  AD4:  			If  *Var3  !&  ~Flags:StatusFlags:Shrink % 80000
  AE4:  				Call  $Function_80218B50_05 ( 00000050 0000000E )
  AF8:  				Call  ShakeCam  ( .Cam:Battle 00000000  1` *Fixed[0.5] )
  B14:  			EndIf
  B1C:  		EndThread
  B24:  		Call  SetAnimation  ( .Actor:Self 00000001 00470001 )
  B3C:  		Add   *Var0  00000014 
  B4C:  		Call  SetGoalPos    ( .Actor:Self *Var0 *Var1 *Var2 )
  B68:  		Call  JumpToGoal    ( .Actor:Self  8` .False .True .False )
  B88:  		Call  PlaySoundAtActor  ( .Actor:Self 000020EC )
  B9C:  		Thread
  BA4:  			Call  GetStatusFlags    ( .Actor:Self *Var3 )
  BB8:  			If  *Var3  !&  ~Flags:StatusFlags:Shrink % 80000
  BC8:  				Call  $Function_80218B50_05 ( 00000050 0000000E )
  BDC:  				Call  ShakeCam  ( .Cam:Battle 00000000  1` *Fixed[0.5] )
  BF8:  			EndIf
  C00:  		EndThread
  C08:  		Wait  8`
  C14:  		If  *VarF  ==  0000000A % A
  C24:  			Return
  C2C:  		EndIf
  C34:  		Call  UseBattleCamPreset    ( 00000002 )
  C44:  		Call  MoveBattleCamOver     (  20` )
  C54:  		ExecWait  $Script_8022AD84_05 
  C60:  	Case  ==  00000003 % 3
  C6C:  	EndCaseGroup
  C74:  EndSwitch
  C7C:  Call  EnableIdleScript  ( .Actor:Self 00000001 )
  C90:  Call  UseIdleAnimation  ( .Actor:Self .True )
  CA4:  Return
  CAC:  End
}

#new:Script $Script_8022AD84_05 {
    0:  SetConst  *Var0  00000001 
   10:  SetConst  *Var1  00470004 
   20:  ExecWait  DoReturnHome 
   2C:  Return
   34:  End
}

#new:Script $Script_FlipOver_KentC_05 {
    0:  Call  SetEnemyTargetOffset  ( .Actor:Self 00000001  0`  40` )
   1C:  Call  SetDefenseTable   ( .Actor:Self 00000001 $DefenseTable_802279F0_05 )
   34:  Call  SetIdleAnimations ( .Actor:Self 00000001 $IdleAnimations_802279B4_05 )
   4C:  Call  $Function_80218BA8_05 ( FFFFFFE8 0000002F 00000017 00000025 )
   68:  Call  SetAnimation      ( .Actor:Self 00000001 0047001C )
   80:  Call  SetActorVar       ( .Actor:Self 00000000 00000001 )
   98:  Call  SetActorVar       ( .Actor:Self 00000001 00470012 )
   B0:  Thread
   B8:  	Wait  4`
   C4:  	Call  GetStatusFlags    ( .Actor:Self *Var0 )
   D8:  	If  *Var0  !&  ~Flags:StatusFlags:Shrink % 80000
   E8:  		Call  SetActorRotationOffset    ( .Actor:Self 00000000 00000023 00000000 )
  104:  	Else
  10C:  		Call  SetActorRotationOffset    ( .Actor:Self 00000000 0000000E 00000000 )
  128:  	EndIf
  130:  	Set   *Var0  00000000 
  140:  	Loop  00000005 
  14C:  		Sub   *Var0  00000012 
  15C:  		Call  SetActorRotation  ( .Actor:Self 00000000 00000000 *Var0 )
  178:  		Wait  1`
  184:  	EndLoop
  18C:  EndThread
  194:  UseIntBuffer  $IntTable_80227910_05 
  1A0:  Loop  00000016 
  1AC:  	Get1Int  *Var0 
  1B8:  	Call  SetActorDispOffset    ( .Actor:Self 00000000 *Var0 00000000 )
  1D4:  	If  *Var0  ==  00000000 
  1E4:  		Thread
  1EC:  			Call  GetStatusFlags    ( .Actor:Self *Var3 )
  200:  			If  *Var3  !&  ~Flags:StatusFlags:Shrink % 80000
  210:  				Call  $Function_80218B50_05 ( 00000050 0000000E )
  224:  				Call  ShakeCam  ( .Cam:Battle 00000000  1` *Fixed[0.5] )
  240:  			EndIf
  248:  		EndThread
  250:  	EndIf
  258:  	Wait  1`
  264:  EndLoop
  26C:  Call  SetActorRotationOffset    ( .Actor:Self 00000000 00000000 00000000 )
  288:  Call  SetActorRotation  ( .Actor:Self 00000000 00000000 00000000 )
  2A4:  Call  SetActorDispOffset        ( .Actor:Self 00000000 00000000 00000000 )
  2C0:  Call  SetAnimation      ( .Actor:Self 00000001 0047001D )
  2D8:  Wait  1`
  2E4:  Call  SetAnimation      ( .Actor:Self 00000001 0047001E )
  2FC:  Call  SetPartFlagBits   ( .Actor:Self 00000003 00020000 .False )
  318:  Call  SetPartFlagBits   ( .Actor:Self 00000003 00800000 .True )
  334:  Call  SetPartFlags      ( .Actor:Self 00000002 00000004 )
  34C:  Call  SetPartFlags      ( .Actor:Self 00000001 00020004 )
  364:  Call  SetActorVar       ( .Actor:Self 00000002 00000001 )
  37C:  Wait  8`
  388:  Return
  390:  End
}

#new:Script $Script_8022B158_05 {
    0:  Call  SetAnimation  ( .Actor:Self *Var0 *Var1 )
   18:  Set   *VarA  00000005 
   28:  ExecWait  $Script_8022B2E8_05 
   34:  Set   *Var2  00000000 
   44:  Loop  00000024 
   50:  	Add   *Var2  0000001E 
   60:  	Call  SetActorYaw   ( .Actor:Self *Var2 )
   74:  	Wait  1`
   80:  EndLoop
   88:  Call  SetActorYaw   ( .Actor:Self  0` )
   9C:  Return
   A4:  End
}

#new:Script $Script_8022B204_05 {
    0:  Call  SetAnimation  ( .Actor:Self *Var0 *Var1 )
   18:  Set   *VarA  00000000 
   28:  ExecWait  $Script_8022B2E8_05 
   34:  Set   *Var2  00000000 
   44:  Loop  00000030 
   50:  	Add   *Var2  0000001E 
   60:  	Call  SetActorYaw   ( .Actor:Self *Var2 )
   74:  	Wait  1`
   80:  EndLoop
   88:  Call  SetActorYaw   ( .Actor:Self  0` )
   9C:  Wait  10`
   A8:  Set   *Var0  00000001 
   B8:  Set   *Var1  FFFFFFFF 
   C8:  ExecWait  DoDeath 
   D4:  Return
   DC:  End
}

#new:Script $Script_8022B2E8_05 {
    0:  Call  GetStatusFlags    ( .Actor:Self *Var3 )
   14:  If  *Var3  &  ~Flags:StatusFlags:Shrink % 80000
   24:  	Return
   2C:  EndIf
   34:  Call  GetActorVar   ( .Actor:Self 00000003 *Var3 )
   4C:  Call  GetLastDamage ( .Actor:Self *Var4 )
   60:  If  *Var4  >  *Var3 
   70:  	Set   *Var4  *Var3 
   80:  EndIf
   88:  If  *Var4  >  00000006 
   98:  	Set   *Var4  00000006 
   A8:  EndIf
   B0:  If  *Var4  >  00000000 
   C0:  	Thread
   C8:  		Sub   *Var3  *Var4 
   D8:  		Call  SetActorVar   ( .Actor:Self 00000003 *Var3 )
   F0:  		Set   *Var5  00000004 
  100:  		Loop  *Var4 
  10C:  			Exec  $Script_8022B444_05 
  118:  			Add   *Var5  00000001 
  128:  			Wait  *VarA 
  134:  		EndLoop
  13C:  	EndThread
  144:  EndIf
  14C:  Return
  154:  End
}

#new:Script $Script_8022B444_05 {
    0:  Call  PlaySoundAtPart   ( .Actor:Self *Var5 00000212 )
   18:  Call  GetActorPos       ( .Actor:Self *Var6 *Var7 *Var8 )
   34:  Call  SetPartPos        ( .Actor:Self *Var5 *Var6  35` *Var8 )
   54:  Call  $Function_80218C74_05 ( *Var6 *Var8 *Var0 *Var1 *Var2 *Var3 )
   78:  Call  SetPartFlagBits   ( .Actor:Self *Var5 00000001 .False )
   94:  Call  SetPartJumpGravity    ( .Actor:Self *Var5 *Fixed[1.0] )
   AC:  Call  JumpPartTo        ( .Actor:Self *Var5 *Var0  0` *Var1  18` .True )
   D4:  Call  JumpPartTo        ( .Actor:Self *Var5 *Var2  0` *Var3  9` .True )
   FC:  Wait  10`
  108:  Loop  0000000A 
  114:  	Call  SetPartFlagBits   ( .Actor:Self *Var5 00000001 .False )
  130:  	Wait  1`
  13C:  	Call  SetPartFlagBits   ( .Actor:Self *Var5 00000001 .True )
  158:  	Wait  1`
  164:  EndLoop
  16C:  Call  PlaySoundAtPart   ( .Actor:Self *Var5 00000211 )
  184:  Call  AddCoin   ( 00000001 )
  194:  Return
  19C:  End
}

