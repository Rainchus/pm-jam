#import SpriteAnimations.mpat
#import bis_06NPC.mpat

#define .oobYPositionRespawn -400

#define .switch1HitFlagIndex 0

#define .switchGroup2Switch1FlagIndex 1
#define .switchGroup2Switch2FlagIndex 2
#define .switchGroup1CombinedFlagIndex 3

#define .switch4HitFlagIndex 4

%defined in bis_06NPC.mpat
% #define .swooper0DeathFlag 5
% #define .swooper1DeathFlag 6
% #define .swooper2DeathFlag 7
% #define .swooper3DeathFlag 8
% #define .swooper4DeathFlag 9

%i cant come up with a better implementation...2 flags for each switch it is
#define .gate5Switch1Flag 10
#define .gate5Switch2Flag 11
#define .gate5Switch3Flag 12
#define .gate5Switch4Flag 13

#define .gate5Switch1Flag2 14
#define .gate5Switch2Flag2 15
#define .gate5Switch3Flag2 16
#define .gate5Switch4Flag2 17

#new:Header $Header {
	[MainScript] $Script_Main
	[Background] 80200000
	[EntryList] $EntryList
	[EntryCount] 2
}

#new:EntryList $EntryList {
	~Vec4f:Entry0
	~Vec4f:Entry1
}

#new:Function_Init $Function_Init {
	PUSH    RA
	LIA     A0, 800B0CF0
	LIA     A1, "bon_tex"
	JAL     800654F0 % sprintf
	RESERVED

	LI a0, 800D9668
	LI a1, "hos_bg"
	JAL     800654F0 % sprintf
	RESERVED
	
	CLEAR  V0
	JPOP   RA
}

#new:Script $Script_SetupMusic {
	Call FadeOutMusic  ( 00000000 500` ) % usually between 500-1000
	Call ClearAmbientSounds ( 250` )
	Call SetMusicTrack ( 0 .Song:ShiverMountain 0 8 )
	Call FadeInMusic ( 0 .Song:ShiverMountain 0 5` 0 0 )
	Return
	End
}

#new:Script $Script_EnterMap {
	Return
	End
}

#new:Script $Script_CreateExitTriggers {
	Return
	End
}

#new:Script $CheckIfFallenOOB {
	Thread
		Loop
			Call GetPlayerPos ( *Var0 *Var1 *Var2 )
			If *Var1 < .oobYPositionRespawn
				Call SetPlayerPos ( ~Vec3d:RespawnMarker )
			EndIf
			Wait 1`
		EndLoop
	EndThread
	Return
	End
}

#new:Script $Script_Switch1Hit {
	Call ModifyColliderFlags ( .ORFlags ~Collider:gate1 .collisionInActiveFlag ) %turn gate collision off
	Set *Var0 0
	Set *Var1 0
	Set *Var2 0
	Loop 20`
		Call TranslateGroup ( ~Model:Gate1Group *Var0 *Var1 *Var2 )
		Add *Var1 -3`
		Wait 1`
	EndLoop
	Call  EnableGroup ( ~Model:Gate1Group .False )
	Return
	End
}

#new:Script $Script_SwitchGroup2 {
	If *AreaFlag[.switchGroup2Switch1FlagIndex] == 1
		If *AreaFlag[.switchGroup2Switch2FlagIndex] == 1
			Call ModifyColliderFlags ( .ORFlags ~Collider:gate2 .collisionInActiveFlag ) %turn gate collision off
			Set *Var0 0
			Set *Var1 0
			Set *Var2 0
			Loop 20`
				Call TranslateGroup ( ~Model:Gate2Group *Var0 *Var1 *Var2 )
				Add *Var1 -3`
				Wait 1`
			EndLoop
			Call  EnableGroup ( ~Model:Gate2Group .False )
		EndIf
	EndIf
	Return
	End
}

#new:Script $Script_Switch4Hit {
	Call ModifyColliderFlags ( .ORFlags ~Collider:gate3 .collisionInActiveFlag ) %turn gate collision off
	Set *Var0 0
	Set *Var1 0
	Set *Var2 0
	Loop 20`
		Call TranslateGroup ( ~Model:Gate3Group *Var0 *Var1 *Var2 )
		Add *Var1 -3`
		Wait 1`
	EndLoop
	Call  EnableGroup ( ~Model:Gate3Group .False )
	Return
	End
}

#new:Script $ClearAllGate5SwitchFlag {
	Set *AreaFlag[.gate5Switch1Flag] = 0
	Set *AreaFlag[.gate5Switch2Flag] = 0
	Set *AreaFlag[.gate5Switch3Flag] = 0
	Set *AreaFlag[.gate5Switch4Flag] = 0
	Set *AreaFlag[.gate5Switch1Flag2] = 0
	Set *AreaFlag[.gate5Switch2Flag2] = 0
	Set *AreaFlag[.gate5Switch3Flag2] = 0
	Set *AreaFlag[.gate5Switch4Flag2] = 0
	Return
	End
}

#new:Script $Gate5OpenCheck {
	Thread
		Loop
			If *AreaFlag[.gate5Switch2Flag2] == 1
				If *AreaFlag[.gate5Switch3Flag2] == 1
					If *AreaFlag[.gate5Switch4Flag2] == 1
						If *AreaFlag[.gate5Switch1Flag2] == 1
							Call ModifyColliderFlags ( .ORFlags ~Collider:gate5 .collisionInActiveFlag ) %turn gate collision off
							Set *Var0 0
							Set *Var1 0
							Set *Var2 0
							Loop 20`
								Call TranslateGroup ( ~Model:Gate5Group *Var0 *Var1 *Var2 )
								Add *Var1 -3`
								Wait 1`
							EndLoop
							Call  EnableGroup ( ~Model:Gate5Group .False )
						EndIf
					EndIf
				EndIf
			EndIf
			Wait 1
		EndLoop
	EndThread
	Return
	End
}

#new:Script $Script_SwitchGroup5Switch1 {
	If *AreaFlag[.gate5Switch1Flag2] == 1
		Return
	EndIf
	If *AreaFlag[.gate5Switch3Flag2] == 0
		If *AreaFlag[.gate5Switch4Flag2] == 0
			Call PlaySoundAtModel (~Model:FinalSwitchCube .Sound:Correct 0)
			Set *AreaFlag[.gate5Switch1Flag2] 1
		Else
			Call PlaySoundAtModel (~Model:FinalSwitchCube .Sound:Wrong 0)
			ExecWait $ClearAllGate5SwitchFlag
		EndIf
	Else
		Call PlaySoundAtModel (~Model:FinalSwitchCube .Sound:Wrong 0)
		ExecWait $ClearAllGate5SwitchFlag
	EndIf
	Return
	End
}

#new:Script $Script_SwitchGroup5Switch2 {
	If *AreaFlag[.gate5Switch2Flag2] == 1
		Return
	EndIf
	If *AreaFlag[.gate5Switch1Flag2] == 1
		If *AreaFlag[.gate5Switch3Flag2] == 0
			If *AreaFlag[.gate5Switch4Flag2] == 0
				Call PlaySoundAtModel (~Model:FinalSwitchCube .Sound:Correct 0)
				Set *AreaFlag[.gate5Switch2Flag2] 1
			Else
				Call PlaySoundAtModel (~Model:FinalSwitchCube .Sound:Wrong 0)
				ExecWait $ClearAllGate5SwitchFlag
			EndIf
		Else
			Call PlaySoundAtModel (~Model:FinalSwitchCube .Sound:Wrong 0)
			ExecWait $ClearAllGate5SwitchFlag
		EndIf
	Else
		Call PlaySoundAtModel (~Model:FinalSwitchCube .Sound:Wrong 0)
		ExecWait $ClearAllGate5SwitchFlag
	EndIf
	Return
	End
}

#new:Script $Script_SwitchGroup5Switch3 {
	If *AreaFlag[.gate5Switch3Flag2] == 1
		Return
	EndIf
	If *AreaFlag[.gate5Switch1Flag2] == 1
		If *AreaFlag[.gate5Switch2Flag2] == 1
			If *AreaFlag[.gate5Switch4Flag2] == 0
				Call PlaySoundAtModel (~Model:FinalSwitchCube .Sound:Correct 0)
				Set *AreaFlag[.gate5Switch3Flag2] 1
			Else
				Call PlaySoundAtModel (~Model:FinalSwitchCube .Sound:Wrong 0)
				ExecWait $ClearAllGate5SwitchFlag
			EndIf
		Else
			Call PlaySoundAtModel (~Model:FinalSwitchCube .Sound:Wrong 0)
			ExecWait $ClearAllGate5SwitchFlag
		EndIf
	Else
		Call PlaySoundAtModel (~Model:FinalSwitchCube .Sound:Wrong 0)
		ExecWait $ClearAllGate5SwitchFlag
	EndIf
	Return
	End
}

#new:Script $Script_SwitchGroup5Switch4 {
	If *AreaFlag[.gate5Switch4Flag2] == 1
		Return
	EndIf
	If *AreaFlag[.gate5Switch1Flag2] == 1
		If *AreaFlag[.gate5Switch2Flag2] == 1
			If *AreaFlag[.gate5Switch3Flag2] == 1
				Call PlaySoundAtModel (~Model:FinalSwitchCube .Sound:Correct 0)
				Set *AreaFlag[.gate5Switch4Flag2] 1
			Else
				Call PlaySoundAtModel (~Model:FinalSwitchCube .Sound:Wrong 0)
				ExecWait $ClearAllGate5SwitchFlag
			EndIf
		Else
			Call PlaySoundAtModel (~Model:FinalSwitchCube .Sound:Wrong 0)
			ExecWait $ClearAllGate5SwitchFlag
		EndIf
	Else
		Call PlaySoundAtModel (~Model:FinalSwitchCube .Sound:Wrong 0)
		ExecWait $ClearAllGate5SwitchFlag
	EndIf
	Return
	End
}

#new:Script $Script_SwooperHit {
	Call ModifyColliderFlags ( .ORFlags ~Collider:gate4 .collisionInActiveFlag ) %turn gate collision off
	Set *Var0 0
	Set *Var1 0
	Set *Var2 0
	Loop 20`
		Call TranslateGroup ( ~Model:Gate4Group *Var0 *Var1 *Var2 )
		Add *Var1 -3`
		Wait 1`
	EndLoop
	Call  EnableGroup ( ~Model:Gate4Group .False )
	Return
	End
}

#new:Script $MakeEntities {
	Call  MakeEntity    ( .Entity:BlueSwitch ~Vec4d:Gate1Switch1 80000000 )
	Call  AssignAreaFlag    ( .switch1HitFlagIndex )
	Bind  $Script_Switch1Hit .Trigger:AreaFlagSet *AreaFlag[.switch1HitFlagIndex] 00000001 00000000

	Call  MakeEntity    ( .Entity:BlueSwitch ~Vec4d:Gate2Switch1 80000000 )
	Call  AssignAreaFlag    ( .switchGroup2Switch1FlagIndex )
	Bind  $Script_SwitchGroup2 .Trigger:AreaFlagSet *AreaFlag[.switchGroup2Switch1FlagIndex] 00000001 00000000

	Call  MakeEntity    ( .Entity:BlueSwitch ~Vec4d:Gate2Switch2 80000000 )
	Call  AssignAreaFlag    ( .switchGroup2Switch2FlagIndex )
	Bind  $Script_SwitchGroup2 .Trigger:AreaFlagSet *AreaFlag[.switchGroup2Switch2FlagIndex] 00000001 00000000

	Call  MakeEntity    ( .Entity:BlueSwitch ~Vec4d:Gate3Switch1 80000000 )
	Call  AssignAreaFlag    ( .switch4HitFlagIndex )
	Bind  $Script_Switch4Hit .Trigger:AreaFlagSet *AreaFlag[.switch4HitFlagIndex] 00000001 00000000

	% Call  MakeEntity    ( .Entity:BlueSwitch ~Vec4d:Gate4Switch1 80000000 )
	% Call  AssignAreaFlag    ( .swooper0DeathFlag )
	Bind  $Script_SwooperHit .Trigger:AreaFlagSet *AreaFlag[.swooper0DeathFlag] 00000001 00000000
	%Call  MakeEntity    ( .Entity:Signpost ~Vec4d:Sign 80000000 )

	Call  MakeEntity    ( .Entity:RedSwitch ~Vec4d:Gate5Switch1 80000000 )
	Call  AssignAreaFlag    ( .gate5Switch1Flag )
	Bind  $Script_SwitchGroup5Switch1 .Trigger:AreaFlagSet *AreaFlag[.gate5Switch1Flag] 00000001 00000000

	Call  MakeEntity    ( .Entity:RedSwitch ~Vec4d:Gate5Switch2 80000000 )
	Call  AssignAreaFlag    ( .gate5Switch2Flag )
	Bind  $Script_SwitchGroup5Switch2 .Trigger:AreaFlagSet *AreaFlag[.gate5Switch2Flag] 00000001 00000000

	Call  MakeEntity    ( .Entity:RedSwitch ~Vec4d:Gate5Switch3 80000000 )
	Call  AssignAreaFlag    ( .gate5Switch3Flag )
	Bind  $Script_SwitchGroup5Switch3 .Trigger:AreaFlagSet *AreaFlag[.gate5Switch3Flag] 00000001 00000000

	Call  MakeEntity    ( .Entity:RedSwitch ~Vec4d:Gate5Switch4 80000000 )
	Call  AssignAreaFlag    ( .gate5Switch4Flag )
	Bind  $Script_SwitchGroup5Switch4 .Trigger:AreaFlagSet *AreaFlag[.gate5Switch4Flag] 00000001 00000000

	Call MakeEntity ( .Entity:RedBlock ~Vec4d:ItemBox .Item:AttackPiece2 80000000 )
	Call AssignBlockFlag   ( *Flag_block_bis_06 )

	Call  MakeEntity    ( .Entity:BlueWarpPipe ~Vec4d:Pipe ~Entry:Entry1 $Script_802549D0 ~Index:*Flag_block_bis_06 80000000 )
	
	Return
	End
}

#new:ASCII $Ascii_bis_04 {
	"bis_04"
}

#new:Script $Script_802549D0 {
	Set *GameByte[009] 0 %turn off hook for hammer throw killing enemies
	Set *GB_StoryProgress FFFFFFA2
	Call  GotoMap   ( $Ascii_bis_04 00000000 )
	Wait  100`
	Return
	End
}

#new:Script $checkIfStarlowUpgradeString {
	Loop
		If *Flag_block_bis_06 == 1
			%Call ShowMessageAtScreenPos    ( 001D00DA  160`  40` ) % This is a Super Block. With this, you can upgrade  ...
			Call $upgradeStarlow ()
			BreakLoop
		EndIf
		Wait 1
	EndLoop
	
	Return
	End
}


#new:Script $Script_Main {
    Set  *GB_WorldLocation  .Location:GoombaRoad
    Call SetCamPerspective  ( .Cam:Default 00000003 00000019 00000010 00001000 )
    Call SetCamBGColor      ( .Cam:Default 00000000 00000000 00000000 )
    Call SetCamEnabled      ( .Cam:Default .True )
    Call SetCamLeadPlayer   ( .Cam:Default .False )
	Call MakeTransformGroup    ( ~Model:Gate1Group )
	Call MakeNpcs ( .False $NpcGroupList_Swoopers )
	Set *GameByte[009] 1 %first strike always kills enemy
    % Set *Var0 1
    % Thread
    %     Loop
    %         Call  $ScrApi_Set2DBool ( *Var0 )
    %         Wait 60`
    %         Call $ScrApi_XORVar ( *Var0 1 ) %Var0 ^ 1
    %     EndLoop
    % EndThread
	Exec $MakeEntities
	Exec $CheckIfFallenOOB
	Exec $checkIfStarlowUpgradeString
	Exec $Gate5OpenCheck
    Exec $Script_SetupMusic
    Exec $Script_EnterMap
    Return
    End
}