% Script File: omo_10.mscr
% Decoded from: 0 to 4E80 (omo_10)

#define .NpcID:TrainStationToad_00  00
#define .NpcID:TrainStationToad_01  01

#new:Function $Function_80240000
{
    0:  LA        V1, 800B1D80
    8:  LHU       V0, 2 (V1)
    C:  ANDI      V0, V0, FFFE
   10:  SH        V0, 2 (V1)
   14:  JR        RA
   18:  LI        V0, 2
}

#new:Function $Function_8024001C
{
    0:  ADDIU     SP, SP, FFC8
    4:  SW        S1, 14 (SP)
    8:  COPY      S1, A0
    C:  SW        RA, 1C (SP)
   10:  SW        S2, 18 (SP)
   14:  SW        S0, 10 (SP)
   18:  SDC1      F24, 30 (SP)
   1C:  SDC1      F22, 28 (SP)
   20:  SDC1      F20, 20 (SP)
   24:  LW        S0, C (S1)
   28:  LW        S2, 0 (S0)
   2C:  ADDIU     S0, S0, 4
   30:  LW        A1, 0 (S0)
   34:  JAL       ~Func:get_float_variable
   38:  ADDIU     S0, S0, 4
   3C:  LW        A1, 0 (S0)
   40:  ADDIU     S0, S0, 4
   44:  COPY      A0, S1
   48:  JAL       ~Func:get_float_variable
   4C:  MOV.S     F24, F0
   50:  LW        A1, 0 (S0)
   54:  ADDIU     S0, S0, 4
   58:  COPY      A0, S1
   5C:  JAL       ~Func:get_float_variable
   60:  MOV.S     F22, F0
   64:  COPY      A0, S1
   68:  LW        A1, 0 (S0)
   6C:  JAL       ~Func:get_float_variable
   70:  MOV.S     F20, F0
   74:  MOV.S     F12, F24
   78:  MFC1      A2, F20
   7C:  MFC1      A3, F0
   80:  JAL       ~Func:atan2
   84:  MOV.S     F14, F22
   88:  JAL       ~Func:clamp_angle
   8C:  MOV.S     F12, F0
   90:  COPY      A0, S1
   94:  MFC1      A2, F0
   98:  JAL       ~Func:set_float_variable
   9C:  COPY      A1, S2
   A0:  LW        RA, 1C (SP)
   A4:  LW        S2, 18 (SP)
   A8:  LW        S1, 14 (SP)
   AC:  LW        S0, 10 (SP)
   B0:  LDC1      F24, 30 (SP)
   B4:  LDC1      F22, 28 (SP)
   B8:  LDC1      F20, 20 (SP)
   BC:  LI        V0, 2
   C0:  JR        RA
   C4:  ADDIU     SP, SP, 38
}

#new:Function $Function_802400E4
{
    0:  ADDIU     SP, SP, FFD8
    4:  SW        S1, 14 (SP)
    8:  COPY      S1, A0
    C:  SW        RA, 18 (SP)
   10:  SW        S0, 10 (SP)
   14:  SDC1      F20, 20 (SP)
   18:  LW        S0, C (S1)
   1C:  LW        A1, 0 (S0)
   20:  JAL       ~Func:get_float_variable
   24:  ADDIU     S0, S0, 4
   28:  LW        A1, 0 (S0)
   2C:  ADDIU     S0, S0, 4
   30:  COPY      A0, S1
   34:  JAL       ~Func:get_float_variable
   38:  MOV.S     F20, F0
   3C:  C.LT.S    F0, F20
   40:  NOP
   44:  BC1F      .o58
   48:  COPY      A0, S1
   4C:  LW        A1, 0 (S0)
   50:  BEQ       R0, R0, .o60
   54:  LI        A2, 1
        .o58
   58:  LW        A1, 0 (S0)
   5C:  CLEAR     A2
        .o60
   60:  JAL       ~Func:set_variable
   64:  NOP
   68:  LW        RA, 18 (SP)
   6C:  LW        S1, 14 (SP)
   70:  LW        S0, 10 (SP)
   74:  LDC1      F20, 20 (SP)
   78:  LI        V0, 2
   7C:  JR        RA
   80:  ADDIU     SP, SP, 28
}

#new:Function $Function_80240168
{
    0:  ADDIU     SP, SP, FFE0
    4:  SW        S2, 18 (SP)
    8:  COPY      S2, A0
    C:  SW        RA, 1C (SP)
   10:  SW        S1, 14 (SP)
   14:  SW        S0, 10 (SP)
   18:  LW        S0, C (S2)
   1C:  LW        A1, 0 (S0)
   20:  JAL       ~Func:get_variable
   24:  ADDIU     S0, S0, 4
   28:  LW        A1, 0 (S0)
   2C:  ADDIU     S0, S0, 4
   30:  COPY      A0, S2
   34:  JAL       ~Func:get_variable
   38:  COPY      S1, V0
   3C:  COPY      A0, S2
   40:  LW        A1, 0 (S0)
   44:  JAL       ~Func:get_variable
   48:  COPY      S0, V0
   4C:  MULT      S0, V0
   50:  LI        V0, 2
   54:  LW        V1, 138 (S2)
   58:  MFLO      A2
   5C:  ADDU      S1, S1, A2
   60:  SLLV      S1, S1, V0
   64:  ADDU      V1, V1, S1
   68:  SW        V1, 138 (S2)
   6C:  LW        RA, 1C (SP)
   70:  LW        S2, 18 (SP)
   74:  LW        S1, 14 (SP)
   78:  LW        S0, 10 (SP)
   7C:  JR        RA
   80:  ADDIU     SP, SP, 20
}

#new:Function $Function_802401EC
{
    0:  ADDIU     SP, SP, FFC8
    4:  SW        S1, 14 (SP)
    8:  COPY      S1, A0
    C:  SW        RA, 18 (SP)
   10:  SW        S0, 10 (SP)
   14:  SDC1      F24, 30 (SP)
   18:  SDC1      F22, 28 (SP)
   1C:  SDC1      F20, 20 (SP)
   20:  LW        S0, C (S1)
   24:  LW        A1, 0 (S0)
   28:  JAL       ~Func:get_float_variable
   2C:  ADDIU     S0, S0, 4
   30:  LW        A1, 0 (S0)
   34:  ADDIU     S0, S0, 4
   38:  COPY      A0, S1
   3C:  JAL       ~Func:get_float_variable
   40:  MOV.S     F24, F0
   44:  LW        A1, 0 (S0)
   48:  ADDIU     S0, S0, 4
   4C:  COPY      A0, S1
   50:  JAL       ~Func:get_float_variable
   54:  MOV.S     F22, F0
   58:  COPY      A0, S1
   5C:  LW        A1, 0 (S0)
   60:  JAL       ~Func:get_float_variable
   64:  MOV.S     F20, F0
   68:  LA        V0, 8010EFC8
   70:  SWC1      F24, 28 (V0)
   74:  SWC1      F22, 2C (V0)
   78:  SWC1      F20, 30 (V0)
   7C:  SWC1      F0, 80 (V0)
   80:  LW        RA, 18 (SP)
   84:  LW        S1, 14 (SP)
   88:  LW        S0, 10 (SP)
   8C:  LDC1      F24, 30 (SP)
   90:  LDC1      F22, 28 (SP)
   94:  LDC1      F20, 20 (SP)
   98:  LI        V0, 2
   9C:  JR        RA
   A0:  ADDIU     SP, SP, 38
}

#new:Function $Function_80240290
{
    0:  ADDIU     SP, SP, FFC0
    4:  SW        S1, 14 (SP)
    8:  COPY      S1, A0
    C:  SW        RA, 1C (SP)
   10:  SW        S2, 18 (SP)
   14:  SW        S0, 10 (SP)
   18:  SDC1      F26, 38 (SP)
   1C:  SDC1      F24, 30 (SP)
   20:  SDC1      F22, 28 (SP)
   24:  SDC1      F20, 20 (SP)
   28:  LW        S0, C (S1)
   2C:  LW        A1, 0 (S0)
   30:  JAL       ~Func:get_variable
   34:  ADDIU     S0, S0, 4
   38:  LW        A1, 0 (S0)
   3C:  ADDIU     S0, S0, 4
   40:  COPY      A0, S1
   44:  JAL       ~Func:get_float_variable
   48:  COPY      S2, V0
   4C:  LW        A1, 0 (S0)
   50:  ADDIU     S0, S0, 4
   54:  COPY      A0, S1
   58:  JAL       ~Func:get_float_variable
   5C:  MOV.S     F26, F0
   60:  LW        A1, 0 (S0)
   64:  ADDIU     S0, S0, 4
   68:  COPY      A0, S1
   6C:  JAL       ~Func:get_float_variable
   70:  MOV.S     F24, F0
   74:  COPY      A0, S1
   78:  LW        A1, 0 (S0)
   7C:  JAL       ~Func:get_float_variable
   80:  MOV.S     F20, F0
   84:  COPY      A0, S2
   88:  JAL       ~Func:get_npc_safe
   8C:  MOV.S     F22, F0
   90:  COPY      A0, V0
   94:  SWC1      F26, 38 (A0)
   98:  MOV.S     F0, F26
   9C:  SWC1      F24, 3C (A0)
   A0:  MOV.S     F2, F24
   A4:  SWC1      F20, 40 (A0)
   A8:  MOV.S     F4, F20
   AC:  LW        V1, 0 (A0)
   B0:  LUI       A1, 1
   B4:  SWC1      F22, C (A0)
   B8:  SWC1      F0, 6C (A0)
   BC:  SWC1      F2, 70 (A0)
   C0:  SWC1      F4, 74 (A0)
   C4:  OR        V1, V1, A1
   C8:  SW        V1, 0 (A0)
   CC:  LW        RA, 1C (SP)
   D0:  LW        S2, 18 (SP)
   D4:  LW        S1, 14 (SP)
   D8:  LW        S0, 10 (SP)
   DC:  LDC1      F26, 38 (SP)
   E0:  LDC1      F24, 30 (SP)
   E4:  LDC1      F22, 28 (SP)
   E8:  LDC1      F20, 20 (SP)
   EC:  LI        V0, 2
   F0:  JR        RA
   F4:  ADDIU     SP, SP, 40
}

#new:Function $Function_80240388
{
    0:  ADDIU     SP, SP, FFB8
    4:  SW        S2, 18 (SP)
    8:  COPY      S2, A0
    C:  SW        RA, 28 (SP)
   10:  SW        S5, 24 (SP)
   14:  SW        S4, 20 (SP)
   18:  SW        S3, 1C (SP)
   1C:  SW        S1, 14 (SP)
   20:  SW        S0, 10 (SP)
   24:  SDC1      F24, 40 (SP)
   28:  SDC1      F22, 38 (SP)
   2C:  SDC1      F20, 30 (SP)
   30:  LW        S0, C (S2)
   34:  LW        S4, 0 (S0)
   38:  ADDIU     S0, S0, 4
   3C:  JAL       ~Func:get_variable
   40:  COPY      A1, S4
   44:  COPY      S3, V0
   48:  LW        S5, 0 (S0)
   4C:  ADDIU     S0, S0, 4
   50:  LW        A1, 0 (S0)
   54:  ADDIU     S0, S0, 4
   58:  JAL       ~Func:get_float_variable
   5C:  COPY      A0, S2
   60:  LW        A1, 0 (S0)
   64:  ADDIU     S0, S0, 4
   68:  COPY      A0, S2
   6C:  JAL       ~Func:get_float_variable
   70:  MOV.S     F24, F0
   74:  LW        A1, 0 (S0)
   78:  ADDIU     S0, S0, 4
   7C:  COPY      A0, S2
   80:  JAL       ~Func:get_variable
   84:  MOV.S     F20, F0
   88:  LW        A1, 0 (S0)
   8C:  ADDIU     S0, S0, 4
   90:  COPY      A0, S2
   94:  JAL       ~Func:get_variable
   98:  COPY      S1, V0
   9C:  COPY      A0, S2
   A0:  LW        A1, 0 (S0)
   A4:  JAL       ~Func:get_float_variable
   A8:  COPY      S0, V0
   AC:  LIF       F2, 180.0
   B4:  LIF       F4, 3.141592
   C0:  DIV.S     F0, F0, F2
   C4:  MUL.S     F22, F0, F4
   C8:  NOP
   CC:  SUB.S     F20, F20, F24
   D0:  LIF       F0, 0.5
   D8:  NOP
   DC:  MUL.S     F20, F20, F0
   E0:  NOP
   E4:  BEQ       S0, R0, .o104
   E8:  SLT       V0, S1, S3
   EC:  BEQ       V0, R0, .o104
   F0:  COPY      A0, S2
   F4:  COPY      S3, S1
   F8:  COPY      A1, S4
   FC:  JAL       ~Func:set_variable
  100:  COPY      A2, S1
        .o104
  104:  LIF       F0, 3.141592
  110:  MTC1      S3, F12
  114:  NOP
  118:  CVT.S.W   F12, F12
  11C:  MUL.S     F12, F12, F0
  120:  NOP
  124:  MTC1      S1, F0
  128:  NOP
  12C:  CVT.S.W   F0, F0
  130:  DIV.S     F12, F12, F0
  134:  JAL       ~Func:cos_rad
  138:  ADD.S     F12, F12, F22
  13C:  MUL.S     F0, F20, F0
  140:  NOP
  144:  ADD.S     F2, F24, F20
  148:  SUB.S     F2, F2, F0
  14C:  COPY      A0, S2
  150:  MFC1      A2, F2
  154:  JAL       ~Func:set_float_variable
  158:  COPY      A1, S5
  15C:  LW        RA, 28 (SP)
  160:  LW        S5, 24 (SP)
  164:  LW        S4, 20 (SP)
  168:  LW        S3, 1C (SP)
  16C:  LW        S2, 18 (SP)
  170:  LW        S1, 14 (SP)
  174:  LW        S0, 10 (SP)
  178:  LDC1      F24, 40 (SP)
  17C:  LDC1      F22, 38 (SP)
  180:  LDC1      F20, 30 (SP)
  184:  LI        V0, 2
  188:  JR        RA
  18C:  ADDIU     SP, SP, 48
}

#new:Function $Function_80240518
{
    0:  LA        V1, 8007419C
    8:  LW        V0, 0 (V1)
    C:  SW        R0, 84 (A0)
   10:  LW        V0, 10 (V0)
   14:  ANDI      V0, V0, 8000
   18:  BEQ       V0, R0, .o24
   1C:  LI        V0, 1
   20:  SW        V0, 84 (A0)
        .o24
   24:  LW        V0, 0 (V1)
   28:  LW        V0, 10 (V0)
   2C:  ANDI      V0, V0, 4000
   30:  BEQ       V0, R0, .o3C
   34:  LI        V0, 1
   38:  SW        V0, 84 (A0)
        .o3C
   3C:  JR        RA
   40:  LI        V0, 2
}

#new:Function $Function_8024055C
{
    0:  ADDIU     SP, SP, FFE8
    4:  SW        S0, 10 (SP)
    8:  COPY      S0, A0
    C:  SW        RA, 14 (SP)
   10:  LW        V1, A8 (S0)
   14:  LW        V0, 88 (S0)
   18:  ADDU      V1, V1, V0
   1C:  BGEZ      V1, .o30
   20:  SW        V1, A8 (S0)
   24:  LUI       V0, 2
   28:  BEQ       R0, R0, .o40
   2C:  ADDU      V0, V1, V0
        .o30
   30:  LUI       A0, 2
   34:  SLT       V0, A0, V1
   38:  BEQ       V0, R0, .o44
   3C:  SUBU      V0, V1, A0
        .o40
   40:  SW        V0, A8 (S0)
        .o44
   44:  LW        V1, AC (S0)
   48:  LW        V0, 8C (S0)
   4C:  ADDU      V1, V1, V0
   50:  BGEZ      V1, .o64
   54:  SW        V1, AC (S0)
   58:  LUI       V0, 2
   5C:  BEQ       R0, R0, .o74
   60:  ADDU      V0, V1, V0
        .o64
   64:  LUI       A0, 2
   68:  SLT       V0, A0, V1
   6C:  BEQ       V0, R0, .o78
   70:  SUBU      V0, V1, A0
        .o74
   74:  SW        V0, AC (S0)
        .o78
   78:  LW        V1, B0 (S0)
   7C:  LW        V0, 90 (S0)
   80:  ADDU      V1, V1, V0
   84:  BGEZ      V1, .o98
   88:  SW        V1, B0 (S0)
   8C:  LUI       V0, 2
   90:  BEQ       R0, R0, .oA8
   94:  ADDU      V0, V1, V0
        .o98
   98:  LUI       A0, 2
   9C:  SLT       V0, A0, V1
   A0:  BEQ       V0, R0, .oAC
   A4:  SUBU      V0, V1, A0
        .oA8
   A8:  SW        V0, B0 (S0)
        .oAC
   AC:  LW        V1, B4 (S0)
   B0:  LW        V0, 94 (S0)
   B4:  ADDU      V1, V1, V0
   B8:  BGEZ      V1, .oCC
   BC:  SW        V1, B4 (S0)
   C0:  LUI       V0, 2
   C4:  BEQ       R0, R0, .oDC
   C8:  ADDU      V0, V1, V0
        .oCC
   CC:  LUI       A0, 2
   D0:  SLT       V0, A0, V1
   D4:  BEQ       V0, R0, .oE0
   D8:  SUBU      V0, V1, A0
        .oDC
   DC:  SW        V0, B4 (S0)
        .oE0
   E0:  LW        A0, 84 (S0)
   E4:  JAL       ~Func:set_main_pan_u
   E8:  LW        A1, A8 (S0)
   EC:  LW        A0, 84 (S0)
   F0:  JAL       ~Func:set_main_pan_v
   F4:  LW        A1, AC (S0)
   F8:  LW        A0, 84 (S0)
   FC:  JAL       ~Func:set_aux_pan_u
  100:  LW        A1, B0 (S0)
  104:  LW        A0, 84 (S0)
  108:  JAL       ~Func:set_aux_pan_v
  10C:  LW        A1, B4 (S0)
  110:  LW        RA, 14 (SP)
  114:  LW        S0, 10 (SP)
  118:  CLEAR     V0
  11C:  JR        RA
  120:  ADDIU     SP, SP, 18
}

#new:Function $Function_80240680
{
    0:  ADDIU     SP, SP, FFE8
    4:  SW        S0, 10 (SP)
    8:  COPY      S0, A0
    C:  BEQ       A1, R0, .o24
   10:  SW        RA, 14 (SP)
   14:  SW        R0, 70 (S0)
   18:  SW        R0, 74 (S0)
   1C:  SW        R0, 78 (S0)
   20:  SW        R0, 7C (S0)
        .o24
   24:  LW        V0, 70 (S0)
   28:  BNE       V0, R0, .o64
   2C:  NOP
   30:  LW        V1, A8 (S0)
   34:  LW        V0, 88 (S0)
   38:  ADDU      V1, V1, V0
   3C:  BGEZ      V1, .o50
   40:  SW        V1, A8 (S0)
   44:  LUI       V0, 2
   48:  BEQ       R0, R0, .o60
   4C:  ADDU      V0, V1, V0
        .o50
   50:  LUI       A0, 2
   54:  SLT       V0, A0, V1
   58:  BEQ       V0, R0, .o64
   5C:  SUBU      V0, V1, A0
        .o60
   60:  SW        V0, A8 (S0)
        .o64
   64:  LW        V0, 74 (S0)
   68:  BNE       V0, R0, .oA4
   6C:  NOP
   70:  LW        V1, AC (S0)
   74:  LW        V0, 8C (S0)
   78:  ADDU      V1, V1, V0
   7C:  BGEZ      V1, .o90
   80:  SW        V1, AC (S0)
   84:  LUI       V0, 2
   88:  BEQ       R0, R0, .oA0
   8C:  ADDU      V0, V1, V0
        .o90
   90:  LUI       A0, 2
   94:  SLT       V0, A0, V1
   98:  BEQ       V0, R0, .oA4
   9C:  SUBU      V0, V1, A0
        .oA0
   A0:  SW        V0, AC (S0)
        .oA4
   A4:  LW        V0, 78 (S0)
   A8:  BNE       V0, R0, .oE4
   AC:  NOP
   B0:  LW        V1, B0 (S0)
   B4:  LW        V0, 90 (S0)
   B8:  ADDU      V1, V1, V0
   BC:  BGEZ      V1, .oD0
   C0:  SW        V1, B0 (S0)
   C4:  LUI       V0, 2
   C8:  BEQ       R0, R0, .oE0
   CC:  ADDU      V0, V1, V0
        .oD0
   D0:  LUI       A0, 2
   D4:  SLT       V0, A0, V1
   D8:  BEQ       V0, R0, .oE4
   DC:  SUBU      V0, V1, A0
        .oE0
   E0:  SW        V0, B0 (S0)
        .oE4
   E4:  LW        V0, 7C (S0)
   E8:  BNE       V0, R0, .o124
   EC:  NOP
   F0:  LW        V1, B4 (S0)
   F4:  LW        V0, 94 (S0)
   F8:  ADDU      V1, V1, V0
   FC:  BGEZ      V1, .o110
  100:  SW        V1, B4 (S0)
  104:  LUI       V0, 2
  108:  BEQ       R0, R0, .o120
  10C:  ADDU      V0, V1, V0
        .o110
  110:  LUI       A0, 2
  114:  SLT       V0, A0, V1
  118:  BEQ       V0, R0, .o124
  11C:  SUBU      V0, V1, A0
        .o120
  120:  SW        V0, B4 (S0)
        .o124
  124:  LW        A0, 84 (S0)
  128:  JAL       ~Func:set_main_pan_u
  12C:  LW        A1, A8 (S0)
  130:  LW        A0, 84 (S0)
  134:  JAL       ~Func:set_main_pan_v
  138:  LW        A1, AC (S0)
  13C:  LW        A0, 84 (S0)
  140:  JAL       ~Func:set_aux_pan_u
  144:  LW        A1, B0 (S0)
  148:  LW        A0, 84 (S0)
  14C:  JAL       ~Func:set_aux_pan_v
  150:  LW        A1, B4 (S0)
  154:  LW        V0, 70 (S0)
  158:  LW        V1, 78 (S0)
  15C:  LW        A0, 98 (S0)
  160:  ADDIU     V0, V0, 1
  164:  SW        V0, 70 (S0)
  168:  LW        V0, 74 (S0)
  16C:  ADDIU     V1, V1, 1
  170:  SW        V1, 78 (S0)
  174:  LW        V1, 70 (S0)
  178:  ADDIU     V0, V0, 1
  17C:  SW        V0, 74 (S0)
  180:  LW        V0, 7C (S0)
  184:  SLT       V1, V1, A0
  188:  ADDIU     V0, V0, 1
  18C:  BNE       V1, R0, .o198
  190:  SW        V0, 7C (S0)
  194:  SW        R0, 70 (S0)
        .o198
  198:  LW        V0, 74 (S0)
  19C:  LW        V1, 9C (S0)
  1A0:  SLT       V0, V0, V1
  1A4:  BEQL      V0, R0, .o1AC
  1A8:  SW        R0, 74 (S0)
        .o1AC
  1AC:  LW        V0, 78 (S0)
  1B0:  LW        V1, A0 (S0)
  1B4:  SLT       V0, V0, V1
  1B8:  BEQL      V0, R0, .o1C0
  1BC:  SW        R0, 78 (S0)
        .o1C0
  1C0:  LW        V0, 7C (S0)
  1C4:  LW        V1, A4 (S0)
  1C8:  SLT       V0, V0, V1
  1CC:  BEQL      V0, R0, .o1D4
  1D0:  SW        R0, 7C (S0)
        .o1D4
  1D4:  LW        RA, 14 (SP)
  1D8:  LW        S0, 10 (SP)
  1DC:  CLEAR     V0
  1E0:  JR        RA
  1E4:  ADDIU     SP, SP, 18
}

PADDING: 80240868 to 80240870 (00000868 to 00000870)
00000000 00000000

#new:EntryList $EntryList
{
	~Vec4f:Entry0 % -330.0    0.0  330.0   45.0
	~Vec4f:Entry1 %  330.0    0.0  330.0  315.0
	~Vec4f:Entry2 % -330.0   10.0 -330.0  135.0
	~Vec4f:Entry3 %  330.0   10.0 -330.0  225.0
}

#new:Header $Header
{
	[MainScript]  $Script_Main
	[EntryList]   $EntryList
	[EntryCount]  00000004
	[Background]  80200000
	[MapTattle]   001900E2
}

#new:Script $Script_802408F0
{
    0:  Call  GetLoadType   ( *Var1 )
   10:  If  *Var1  ==  00000001
   20:  	Call  SetMusicTrack ( 00000000 .Song:ShyGuyToybox 00000000 00000008 )
   3C:  Else
   44:  	Call  GetEntryID    ( *Var0 )
   54:  	Switch  *Var0
   60:  		Case  ~Entry:Entry0  to  ~Entry:Entry1
   70:  			Call  SetMusicTrack ( 00000000 .Song:ShyGuyToybox 00000000 00000008 )
   8C:  		Default
   94:  			Call  SetMusicTrack ( 00000000 .Song:ToyboxTrain 00000000 00000008 )
   B0:  	EndSwitch
   B8:  EndIf
   C0:  Return
   C8:  End
}

#new:Script $Script_ExitWalk_802409C0
{
    0:  SetGroup  0000001B
    C:  Call  UseExitHeading    ( 0000003C ~Entry:Entry0 )
   20:  Exec  ExitWalk
   2C:  Call  GotoMap   ( $ASCII_80244E40 00000001 ) % omo_11
   40:  Wait  100`
   4C:  Return
   54:  End
}

#new:Script $Script_ExitWalk_80240A1C
{
    0:  SetGroup  0000001B
    C:  Call  UseExitHeading    ( 0000003C ~Entry:Entry1 )
   20:  Exec  ExitWalk
   2C:  Call  GotoMap   ( $ASCII_80244E48 00000000 ) % omo_02
   40:  Wait  100`
   4C:  Return
   54:  End
}

#new:Script $Script_80240A78
{
    0:  Bind  $Script_ExitWalk_802409C0 .Trigger:FloorAbove ~Collider:deili4 00000001 00000000
   1C:  Bind  $Script_ExitWalk_80240A1C .Trigger:FloorAbove ~Collider:deili1 00000001 00000000
   38:  Return
   40:  End
}

#new:Script $Script_EnterWalk_80240AC0
{
    0:  Call  GetLoadType   ( *Var1 )
   10:  If  *Var1  ==  00000001
   20:  	Exec  EnterSavePoint
   2C:  	Exec  $Script_80240A78
   38:  	Return
   40:  EndIf
   48:  Call  GetEntryID    ( *Var0 )
   58:  Switch  *Var0
   64:  	Case  ~Entry:Entry0  to  ~Entry:Entry1
   74:  		Set   *Var0  $Script_80240A78
   84:  		Exec  EnterWalk
   90:  		Wait  1`
   9C:  	Default
   A4:  		Exec  $Script_80240A78
   B0:  		Wait  3`
   BC:  EndSwitch
   C4:  Return
   CC:  End
}

#new:Script_Main $Script_Main
{
    0:  Set   *GB_WorldLocation  .Location:ShyGuysToybox
   10:  Call  SetSpriteShading  ( .Shading:None )
   20:  Call  SetCamPerspective ( .Cam:Default 00000003  25`  16`  4096` )
   40:  Call  SetCamBGColor     ( .Cam:Default  0`  0`  0` )
   5C:  Call  SetCamLeadPlayer  ( .Cam:Default .False )
   70:  Call  SetCamEnabled     ( .Cam:Default .True )
   84:  Call  MakeNpcs  ( .True $NpcGroupList_80244D54 )
   98:  ExecWait  $Script_MakeEntities
   A4:  ExecWait  $Script_80241078
   B0:  ExecWait  $Script_802408F0
   BC:  ExecWait  $Script_802446D0
   C8:  Exec  $Script_EnterWalk_80240AC0
   D4:  Wait  1`
   E0:  Return
   E8:  End
}

PADDING: 80240C84 to 80240C90 (00000C84 to 00000C90)
00000000 00000000 00000000

#new:Script $Script_80240C90
{
    0:  Label  0
    C:  Call  MakeLerp      ( 00000000 FFFFFE98 00000064 .Easing:Linear )
   28:  Label  1
   34:  Call  UpdateLerp ( )
   40:  Call  RotateModel   ( ~Model:ha1 *Var0 00000000 00000000 00000001 )
   60:  Call  RotateModel   ( ~Model:ha2 *Var0 00000000 00000000 00000001 )
   80:  Call  RotateModel   ( ~Model:ha3 *Var0 00000000 00000000 00000001 )
   A0:  Call  RotateModel   ( ~Model:ha4 *Var0 00000000 00000000 00000001 )
   C0:  Call  RotateModel   ( ~Model:ha5 *Var0 00000000 00000000 00000001 )
   E0:  Wait  1`
   EC:  If  *Var1  ==  00000001
   FC:  	Goto  1
  108:  EndIf
  110:  Goto  0
  11C:  Return
  124:  End
}

#new:Script $Script_80240DBC
{
    0:  Label  0
    C:  Call  MakeLerp      ( 00000000 000000A0 0000003C .Easing:CosInOut )
   28:  Label  1
   34:  Call  UpdateLerp ( )
   40:  Call  RotateModel   ( ~Model:m1_1 *Var0 00000000 FFFFFFFF 00000000 )
   60:  Call  RotateModel   ( ~Model:m1_2 *Var0 00000000 00000001 00000000 )
   80:  Call  RotateModel   ( ~Model:m2_1 *Var0 00000000 FFFFFFFF 00000000 )
   A0:  Call  RotateModel   ( ~Model:m2_2 *Var0 00000000 00000001 00000000 )
   C0:  Wait  1`
   CC:  If  *Var1  ==  00000001
   DC:  	Goto  1
   E8:  EndIf
   F0:  Call  MakeLerp      ( 000000A0 00000000 0000003C .Easing:CosInOut )
  10C:  Label  2
  118:  Call  UpdateLerp ( )
  124:  Call  RotateModel   ( ~Model:m1_1 *Var0 00000000 FFFFFFFF 00000000 )
  144:  Call  RotateModel   ( ~Model:m1_2 *Var0 00000000 00000001 00000000 )
  164:  Call  RotateModel   ( ~Model:m2_1 *Var0 00000000 FFFFFFFF 00000000 )
  184:  Call  RotateModel   ( ~Model:m2_2 *Var0 00000000 00000001 00000000 )
  1A4:  Wait  2`
  1B0:  If  *Var1  ==  00000001
  1C0:  	Goto  2
  1CC:  EndIf
  1D4:  Goto  0
  1E0:  Return
  1E8:  End
}

#new:Script $Script_80240FAC
{
    0:  Label  0
    C:  Call  MakeLerp      ( 00000000 FFFFFE98 00000064 .Easing:Linear )
   28:  Label  1
   34:  Call  UpdateLerp ( )
   40:  Call  RotateModel   ( ~Model:hari1 *Var0 00000000 00000000 00000001 )
   60:  Call  RotateModel   ( ~Model:hari2 *Var0 00000000 00000000 00000001 )
   80:  Wait  1`
   8C:  If  *Var1  ==  00000001
   9C:  	Goto  1
   A8:  EndIf
   B0:  Goto  0
   BC:  Return
   C4:  End
}

#new:Script $Script_80241078
{
    0:  Exec  $Script_80240C90
    C:  Exec  $Script_80240DBC
   18:  Exec  $Script_80240FAC
   24:  Return
   2C:  End
}

PADDING: 802410AC to 802410B0 (000010AC to 000010B0)
00000000

#new:Script $Script_802410B0
{
    0:  NewArray  00000014 *Var0
   10:  UseArray  *Var0
   1C:  SetF  *Array[2]  *Fixed[0.0]
   2C:  SetF  *Array[3]  *Fixed[0.0]
   3C:  SetF  *Array[7]  *Fixed[0.0]
   4C:  SetF  *Array[8]  *Fixed[0.0]
   5C:  SetF  *Array[E]  *Fixed[0.0]
   6C:  SetF  *Array[F]  *Fixed[0.0]
   7C:  SetF  *Array[10]  *Fixed[0.0]
   8C:  Set   *AreaFlag[003]  .False
   9C:  Label  0
   A8:  Switch  *MapVar[0]
   B4:  	Case  ==  00000000
   C0:  		UseIntBuffer  *MapVar[1]
   CC:  		Get3Int  *Var0 *Var1 *Var2
   E0:  		SetF  *Array[0]  *Var0
   F0:  		SetF  *Array[1]  *Var1
  100:  		Call  AddVectorPolar    ( *Array[0] *Array[1] *Fixed[40.0] *Var2 )
  11C:  		SetF  *Array[5]  *Var0
  12C:  		SetF  *Array[6]  *Var1
  13C:  		SetF  *Var3  *Var2
  14C:  		AddF  *Var3  *Fixed[180.0]
  15C:  		Call  AddVectorPolar    ( *Array[5] *Array[6] *Fixed[40.0] *Var3 )
  178:  		SetF  *Array[B]  *Var0
  188:  		SetF  *Array[C]  *Var1
  198:  		SetF  *MapVar[B]  *Array[B]
  1A8:  		SetF  *MapVar[C]  *Array[C]
  1B8:  		SetF  *MapVar[D]  *Var2
  1C8:  		SetF  *Array[11]  *Fixed[0.0]
  1D8:  		Label  B
  1E4:  		Get2Int  *Var2 *Var3
  1F4:  		If  *Var2  ==  FFFFFFFF
  204:  			Goto  C
  210:  		EndIf
  218:  		Call  GetDist2D ( *Var4 *Var0 *Var1 *Var2 *Var3 )
  238:  		AddF  *Array[11]  *Var4
  248:  		SetF  *Var0  *Var2
  258:  		SetF  *Var1  *Var3
  268:  		Goto  B
  274:  		Label  C
  280:  		SubF  *Array[11]  *Fixed[40.0]
  290:  		SetF  *Array[A]  *Fixed[0.0]
  2A0:  		SetF  *Array[D]  *Fixed[0.0]
  2B0:  		Set   *Array[12]  00000000
  2C0:  		If  *MapFlag[00]  ==  .True
  2D0:  			Set   *MapVar[0]  00000001
  2E0:  		EndIf
  2E8:  	Case  ==  00000001
  2F4:  		UseIntBuffer  *MapVar[1]
  300:  		Call  $Function_80240168    ( 00000003 00000000 00000000 )
  318:  		Get2Int  *Var0 *Var1
  328:  		If  *Var0  ==  FFFFFFFF
  338:  			Set   *MapVar[0]  00000064
  348:  			Set   *MapFlag[00]  .False
  358:  		Else
  360:  			SetF  *Array[2]  *Var0
  370:  			SetF  *Array[3]  *Var1
  380:  			Set   *Array[4]  00000001
  390:  			SetF  *Array[7]  *Var0
  3A0:  			SetF  *Array[8]  *Var1
  3B0:  			Set   *Array[9]  00000001
  3C0:  			Set   *MapVar[0]  0000000A
  3D0:  		EndIf
  3D8:  	Case  ==  0000000A
  3E4:  		Switch  *MapVar[2]
  3F0:  			Case  ==  00000000
  3FC:  				SetF  *Array[A]  *Fixed[10.0]
  40C:  			Case  ==  00000001
  418:  				Call  $Function_80240388    ( *Array[12] *Array[A] *Fixed[0.0] *Fixed[10.0] 00000064 00000001 *Fixed[0.0] )
  440:  				Add   *Array[12]  00000001
  450:  			Case  ==  00000002
  45C:  				Set   *Var0  *Array[D]
  46C:  				Set   *Var1  *Array[11]
  47C:  				Call  $Function_80240388    ( *Var0 *Array[A] *Fixed[10.0] *Fixed[2.0] *Var1 00000000 *Fixed[0.0] )
  4A4:  			Case  ==  00000003
  4B0:  				Set   *Var0  *Array[D]
  4C0:  				Set   *Var1  *Array[11]
  4D0:  				Div   *Var1  00000002
  4E0:  				Call  $Function_80240388    ( *Var0 *Array[A] *Fixed[1.0] *Fixed[10.0] *Var1 00000000 *Fixed[0.0] )
  508:  		EndSwitch
  510:  		Call  GetDist2D ( *Var0 *Array[0] *Array[1] *Array[2] *Array[3] )
  530:  		Call  $Function_802400E4    ( *Var0 *Array[A] *Var2 )
  548:  		If  *Var2  ==  00000001
  558:  			Call  $Function_8024001C    ( *Var0 *Array[0] *Array[1] *Array[2] *Array[3] )
  578:  			Call  AddVectorPolar        ( *Array[0] *Array[1] *Array[A] *Var0 )
  594:  		Else
  59C:  			SetF  *Var1  *Array[A]
  5AC:  			SubF  *Var1  *Var0
  5BC:  			SetF  *Array[0]  *Array[2]
  5CC:  			SetF  *Array[1]  *Array[3]
  5DC:  			UseIntBuffer  *MapVar[1]
  5E8:  			Call  $Function_80240168    ( 00000003 00000002 *Array[4] )
  600:  			Get2Int  *Array[2] *Array[3]
  610:  			Add   *Array[4]  00000001
  620:  			If  *Array[2]  ==  FFFFFFFF
  630:  				Set   *MapVar[0]  00000064
  640:  				Set   *MapFlag[00]  .False
  650:  				Set   *Flag[01]  .True
  660:  			Else
  668:  				Call  $Function_8024001C    ( *Var0 *Array[0] *Array[1] *Array[2] *Array[3] )
  688:  				Call  AddVectorPolar        ( *Array[0] *Array[1] *Var1 *Var0 )
  6A4:  			EndIf
  6AC:  		EndIf
  6B4:  		Call  GetDist2D ( *Var0 *Array[5] *Array[6] *Array[7] *Array[8] )
  6D4:  		Call  $Function_802400E4    ( *Var0 *Array[A] *Var2 )
  6EC:  		If  *Var2  ==  00000001
  6FC:  			Call  $Function_8024001C    ( *Var0 *Array[5] *Array[6] *Array[7] *Array[8] )
  71C:  			Call  AddVectorPolar        ( *Array[5] *Array[6] *Array[A] *Var0 )
  738:  		Else
  740:  			SetF  *Var1  *Array[A]
  750:  			SubF  *Var1  *Var0
  760:  			SetF  *Array[5]  *Array[7]
  770:  			SetF  *Array[6]  *Array[8]
  780:  			UseIntBuffer  *MapVar[1]
  78C:  			Call  $Function_80240168    ( 00000003 00000002 *Array[9] )
  7A4:  			Get2Int  *Array[7] *Array[8]
  7B4:  			Add   *Array[9]  00000001
  7C4:  			If  *Array[7]  ==  FFFFFFFF
  7D4:  				Set   *MapVar[0]  00000064
  7E4:  				Set   *MapFlag[00]  .False
  7F4:  				Set   *Flag[01]  .False
  804:  			Else
  80C:  				Call  $Function_8024001C    ( *Var0 *Array[5] *Array[6] *Array[7] *Array[8] )
  82C:  				Call  AddVectorPolar        ( *Array[5] *Array[6] *Var1 *Var0 )
  848:  			EndIf
  850:  		EndIf
  858:  		If  *MapVar[0]  ==  00000064
  868:  			If  *Flag[01]  ==  .True
  878:  				Call  $Function_8024001C    ( *Var0 *Array[0] *Array[1] *Array[5] *Array[6] )
  898:  				SetF  *Array[5]  *Array[0]
  8A8:  				SetF  *Array[6]  *Array[1]
  8B8:  				Call  AddVectorPolar        ( *Array[5] *Array[6] *Fixed[80.0] *Var0 )
  8D4:  			Else
  8DC:  				Call  $Function_8024001C    ( *Var0 *Array[5] *Array[6] *Array[0] *Array[1] )
  8FC:  				SetF  *Array[0]  *Array[5]
  90C:  				SetF  *Array[1]  *Array[6]
  91C:  				Call  AddVectorPolar        ( *Array[0] *Array[1] *Fixed[80.0] *Var0 )
  938:  			EndIf
  940:  		EndIf
  948:  		SetF  *Var0  *Array[0]
  958:  		SetF  *Var1  *Array[1]
  968:  		AddF  *Var0  *Array[5]
  978:  		AddF  *Var1  *Array[6]
  988:  		DivF  *Var0  *Fixed[2.0]
  998:  		DivF  *Var1  *Fixed[2.0]
  9A8:  		Call  $Function_8024001C    ( *Var2 *Array[5] *Array[6] *Array[0] *Array[1] )
  9C8:  		SetF  *MapVar[B]  *Var0
  9D8:  		SetF  *MapVar[C]  *Var1
  9E8:  		SetF  *MapVar[D]  *Var2
  9F8:  		Call  GetDist2D ( *Var3 *Var0 *Var1 *Array[B] *Array[C] )
  A18:  		AddF  *Array[D]  *Var3
  A28:  		SetF  *Array[E]  *Array[D]
  A38:  		MulF  *Array[E]  *Fixed[1.4326172]
  A48:  		If  *Flag[00]  ==  .False
  A58:  			SetF  *Var0  *Array[A]
  A68:  			If  *Var0  <  00000001
  A78:  				SetF  *Var0  *Fixed[1.0]
  A88:  			EndIf
  A90:  			DivF  *Var0  *Fixed[3.0]
  AA0:  			SubF  *Array[F]  *Var0
  AB0:  			If  *Array[F]  <  FFFFFFF6
  AC0:  				SetF  *Array[F]  *Fixed[-10.0]
  AD0:  				Set   *Flag[00]  .True
  AE0:  				If  *AreaFlag[003]  ==  .False
  AF0:  					Call  PlaySound ( 000001FF )
  B00:  				Else
  B08:  					Call  PlaySound ( 00000084 )
  B18:  				EndIf
  B20:  			EndIf
  B28:  		Else
  B30:  			SetF  *Var0  *Array[A]
  B40:  			If  *Var0  <  00000001
  B50:  				SetF  *Var0  *Fixed[1.0]
  B60:  			EndIf
  B68:  			DivF  *Var0  *Fixed[3.0]
  B78:  			AddF  *Array[F]  *Var0
  B88:  			If  *Array[F]  >  0000000A
  B98:  				SetF  *Array[F]  *Fixed[10.0]
  BA8:  				Set   *Flag[00]  .False
  BB8:  				If  *AreaFlag[003]  ==  .False
  BC8:  					Call  PlaySound ( 000001FE )
  BD8:  					Set   *AreaFlag[003]  .True
  BE8:  				Else
  BF0:  					Call  PlaySound ( 000001FE )
  C00:  					Set   *AreaFlag[003]  .False
  C10:  				EndIf
  C18:  			EndIf
  C20:  		EndIf
  C28:  		SetF  *Var0  *MapVar[B]
  C38:  		SetF  *Var1  *MapVar[C]
  C48:  		SetF  *Var2  *MapVar[D]
  C58:  		Call  AddVectorPolar        ( *Var0 *Var1 *Fixed[15.0] *Var2 )
  C74:  		Call  $Function_802401EC    ( *Var0 00000032 *Var1 *MapVar[D] )
  C90:  		SetF  *Var0  *MapVar[B]
  CA0:  		SetF  *Var1  *MapVar[C]
  CB0:  		SetF  *Var2  *MapVar[D]
  CC0:  		AddF  *Var2  *Fixed[180.0]
  CD0:  		Call  AddVectorPolar        ( *Var0 *Var1 *Fixed[15.0] *Var2 )
  CEC:  		Call  $Function_80240290    ( FFFFFFFC *Var0 00000032 *Var1 *MapVar[D] )
  D0C:  		SetF  *Var0  *MapVar[B]
  D1C:  		SetF  *Var1  *MapVar[C]
  D2C:  		SetF  *Var2  *MapVar[D]
  D3C:  		If  *Var2  <  000000B4
  D4C:  			AddF  *Var2  *Fixed[90.0]
  D5C:  		Else
  D64:  			SubF  *Var2  *Fixed[90.0]
  D74:  		EndIf
  D7C:  		Call  AddVectorPolar        ( *Var0 *Var1 *Fixed[20.0] *Var2 )
  D98:  		Call  $Function_80240290    ( 00000000 *Var0 00000032 *Var1 *MapVar[D] )
  DB8:  	Case  ==  00000064
  DC4:  EndSwitch
  DCC:  Call  TranslateGroup    ( ~Model:p2 *Fixed[79.1] *Fixed[-27.93] *Fixed[-29.53] )
  DE8:  Call  TranslateGroup    ( ~Model:p3 *Fixed[-35.1] *Fixed[-27.93] *Fixed[-29.53] )
  E04:  Call  RotateGroup       ( ~Model:p2 *Fixed[-45.0] *Fixed[0.0] *Fixed[0.0] *Fixed[1.0] )
  E24:  Call  RotateGroup       ( ~Model:p3 *Fixed[45.0] *Fixed[0.0] *Fixed[0.0] *Fixed[1.0] )
  E44:  Call  TranslateGroup    ( ~Model:p5 *Fixed[40.5] *Fixed[-20.0] *Fixed[-0.4] )
  E60:  Call  TranslateGroup    ( ~Model:p6 *Fixed[-39.5] *Fixed[-20.0] *Fixed[-0.4] )
  E7C:  Call  TranslateGroup    ( ~Model:popo *MapVar[B] *Fixed[10.0] *MapVar[C] )
  E98:  If  *MapVar[D]  <  000000B4
  EA8:  	SetF  *Var1  *MapVar[D]
  EB8:  	SubF  *Var1  *Fixed[90.0]
  EC8:  	Call  RotateGroup   ( ~Model:popo *Var1 *Fixed[0.0] *Fixed[-1.0] *Fixed[0.0] )
  EE8:  Else
  EF0:  	SetF  *Var1  *MapVar[D]
  F00:  	SubF  *Var1  *Fixed[180.0]
  F10:  	SubF  *Var1  *Fixed[90.0]
  F20:  	Call  RotateGroup   ( ~Model:popo *Var1 *Fixed[0.0] *Fixed[-1.0] *Fixed[0.0] )
  F40:  EndIf
  F48:  Call  RotateGroup       ( ~Model:p2 *Fixed[45.0] *Fixed[0.0] *Fixed[0.0] *Fixed[1.0] )
  F68:  Call  RotateGroup       ( ~Model:p3 *Fixed[-45.0] *Fixed[0.0] *Fixed[0.0] *Fixed[1.0] )
  F88:  Call  TranslateGroup    ( ~Model:p2 *Fixed[-79.1] *Fixed[27.93] *Fixed[29.53] )
  FA4:  Call  TranslateGroup    ( ~Model:p3 *Fixed[35.1] *Fixed[27.93] *Fixed[29.53] )
  FC0:  Call  TranslateGroup    ( ~Model:p5 *Fixed[-40.5] *Fixed[20.0] *Fixed[0.4] )
  FDC:  Call  TranslateGroup    ( ~Model:p6 *Fixed[39.5] *Fixed[20.0] *Fixed[0.4] )
  FF8:  If  *MapVar[D]  <  000000B4
 1008:  	Call  RotateGroup   ( ~Model:p5 *Array[E] *Fixed[0.0] *Fixed[0.0] *Fixed[-1.0] )
 1028:  	Call  RotateGroup   ( ~Model:p6 *Array[E] *Fixed[0.0] *Fixed[0.0] *Fixed[-1.0] )
 1048:  Else
 1050:  	Call  RotateGroup   ( ~Model:p5 *Array[E] *Fixed[0.0] *Fixed[0.0] *Fixed[1.0] )
 1070:  	Call  RotateGroup   ( ~Model:p6 *Array[E] *Fixed[0.0] *Fixed[0.0] *Fixed[1.0] )
 1090:  EndIf
 1098:  Call  TranslateGroup    ( ~Model:p2 *Fixed[0.0] *Array[F] *Fixed[0.0] )
 10B4:  SetF  *Var0  *Array[F]
 10C4:  MulF  *Var0  *Fixed[-1.0]
 10D4:  Call  TranslateGroup    ( ~Model:p3 *Fixed[0.0] *Var0 *Fixed[0.0] )
 10F0:  SetF  *Var0  *Array[A]
 1100:  If  *Var0  <  00000001
 1110:  	SetF  *Var0  *Fixed[1.0]
 1120:  EndIf
 1128:  AddF  *Array[10]  *Var0
 1138:  If  *Array[10]  >  00000168
 1148:  	SubF  *Array[10]  *Fixed[360.0]
 1158:  EndIf
 1160:  Call  RotateGroup   ( ~Model:p4 *Array[10] *Fixed[0.0] *Fixed[1.0] *Fixed[0.0] )
 1180:  SetF  *Array[B]  *MapVar[B]
 1190:  SetF  *Array[C]  *MapVar[C]
 11A0:  Wait  1`
 11AC:  Goto  0
 11B8:  Return
 11C0:  End
}

#new:Script $Script_80242278
{
    0:  Label  0
    C:  Call  GetPlayerPos  ( *Var0 *Var1 *Var2 )
   24:  Call  SetCamTarget  ( .Cam:Default *Var0  0` *Var2 )
   40:  Wait  1`
   4C:  Goto  0
   58:  Return
   60:  End
}

#new:Script $Script_802422E0
{
    0:  Call  GetPlayerPos  ( *Var0 *Var1 *Var2 )
   18:  Call  MakeLerp      ( 00000000 *Var1 0000002D .Easing:Linear )
   34:  Loop
   40:  	Call  UpdateLerp ( )
   4C:  	Call  GetPlayerPos  ( *Var2 *Var3 *Var4 )
   64:  	Call  SetCamTarget  ( .Cam:Default *Var2 *Var0 *Var4 )
   80:  	Wait  1`
   8C:  	If  *Var1  ==  00000000
   9C:  		BreakLoop
   A4:  	EndIf
   AC:  EndLoop
   B4:  Return
   BC:  End
}

#new:Script $Script_802423A4
{
    0:  Call  GetPlayerPos  ( *Var0 *Var1 *Var2 )
   18:  Call  MakeLerp      ( *Var1 00000000 00000028 .Easing:Linear )
   34:  Loop
   40:  	Call  UpdateLerp ( )
   4C:  	Call  GetPlayerPos  ( *Var2 *Var3 *Var4 )
   64:  	Call  SetCamTarget  ( .Cam:Default *Var2 *Var0 *Var4 )
   80:  	Wait  1`
   8C:  	If  *Var1  ==  00000000
   9C:  		BreakLoop
   A4:  	EndIf
   AC:  EndLoop
   B4:  Loop
   C0:  	Call  GetPlayerPos  ( *Var0 *Var1 *Var2 )
   D8:  	Call  SetCamTarget  ( .Cam:Default *Var0  0` *Var2 )
   F4:  	Wait  1`
  100:  EndLoop
  108:  Return
  110:  End
}

#new:Script $Script_802424BC
{
    0:  Call  SetNpcFlagBits    ( .NpcID:TrainStationToad_00 00000140 .True )
   18:  Call  SetNpcFlagBits    ( .Npc:Partner 00000140 .True )
   30:  Thread
   38:  	UseIntBuffer  *Var0
   44:  	Get3Int  *Var1 *Var2 *Var3
   58:  	Call  AddVectorPolar    ( *Var1 *Var2 *Fixed[15.0] *Var3 )
   74:  	Call  SetPlayerAnimation    ( .PlayerAnim:Walking )
   84:  	Call  SetPlayerSpeed    ( *Fixed[4.0] )
   94:  	Call  PlayerMoveTo      ( *Var1 *Var2  0` )
   AC:  	Call  SetPlayerSpeed    ( *Fixed[0.7] )
   BC:  	Call  PlayerMoveTo      ( *Var1 *Var2  0` )
   D4:  	Call  SetPlayerPos      ( *Var1  50` *Var2 )
   EC:  	Call  SetPlayerAnimation    ( 00010002 )
   FC:  	Call  InterpPlayerYaw   ( *Var3  0` )
  110:  EndThread
  118:  Wait  5`
  124:  UseIntBuffer  *Var0
  130:  Get3Int  *Var1 *Var2 *Var3
  144:  SetF  *VarA  *Var3
  154:  AddF  *Var3  *Fixed[180.0]
  164:  Call  AddVectorPolar    ( *Var1 *Var2 *Fixed[15.0] *Var3 )
  180:  Call  SetNpcJumpscale   ( .Npc:Partner *Fixed[0.7] )
  194:  Call  NpcJump0  ( .Npc:Partner *Var1  50` *Var2  10` )
  1B4:  Call  SetNpcSpeed       ( .Npc:Partner *Fixed[0.5] )
  1C8:  Call  NpcMoveTo ( .Npc:Partner *Var1 *Var2  0` )
  1E4:  Call  SetNpcAnimation   ( .Npc:Partner 00000106 )
  1F8:  Call  InterpNpcYaw      ( .Npc:Partner *VarA  0` )
  210:  Wait  5`
  21C:  UseIntBuffer  *Var0
  228:  Get3Int  *Var1 *Var2 *Var3
  23C:  SetF  *VarA  *Var3
  24C:  If  *Var3  <  000000B4
  25C:  	AddF  *Var3  *Fixed[90.0]
  26C:  Else
  274:  	SubF  *Var3  *Fixed[90.0]
  284:  EndIf
  28C:  SetF  *Var4  *Var1
  29C:  SetF  *Var5  *Var2
  2AC:  SetF  *Var6  *Var3
  2BC:  Call  AddVectorPolar    ( *Var1 *Var2 *Fixed[100.0] *Var3 )
  2D8:  Call  SetNpcSpeed   ( .NpcID:TrainStationToad_00 *Fixed[3.0] )
  2EC:  Call  SetNpcAnimation   ( .NpcID:TrainStationToad_00 008C0003 )
  300:  Call  NpcMoveTo     ( .NpcID:TrainStationToad_00 *Var1 *Var2  0` )
  31C:  Call  SetNpcAnimation   ( .NpcID:TrainStationToad_00 008C0001 )
  330:  Call  AddVectorPolar    ( *Var4 *Var5 *Fixed[20.0] *Var6 )
  34C:  Call  SetNpcJumpscale   ( .NpcID:TrainStationToad_00 *Fixed[0.7] )
  360:  Call  NpcJump0      ( .NpcID:TrainStationToad_00 *Var4  50` *Var5  10` )
  380:  Call  InterpNpcYaw  ( .NpcID:TrainStationToad_00 *VarA  0` )
  398:  Call  SpeakToPlayer ( .NpcID:TrainStationToad_00 008C0004 008C0001 00000005 000F0009 ) % We're leaving! All aboard!
  3B8:  Call  PlaySound     ( 00000083 )
  3C8:  Call  SetMusicTrack ( 00000000 .Song:ToyboxTrain 00000000 00000008 )
  3E4:  Wait  10`
  3F0:  Return
  3F8:  End
}

#new:Script $Script_802428BC
{
    0:  Call  StopSound ( 00000083 )
   10:  Call  SetMusicTrack     ( 00000000 .Song:ShyGuyToybox 00000000 00000008 )
   2C:  Call  SetNpcFlagBits    ( .NpcID:TrainStationToad_00 00000140 .True )
   44:  Call  SetNpcFlagBits    ( .Npc:Partner 00000140 .True )
   5C:  SetF  *Var0  *MapVar[B]
   6C:  SetF  *Var1  *MapVar[C]
   7C:  SetF  *Var2  *MapVar[D]
   8C:  If  *Var2  <  000000B4
   9C:  	AddF  *Var2  *Fixed[90.0]
   AC:  Else
   B4:  	SubF  *Var2  *Fixed[90.0]
   C4:  EndIf
   CC:  Call  AddVectorPolar    ( *Var0 *Var1 *Fixed[100.0] *Var2 )
   E8:  Thread
   F0:  	Call  SetNpcJumpscale   ( .NpcID:TrainStationToad_00 *Fixed[1.0] )
  104:  	Call  NpcJump0  ( .NpcID:TrainStationToad_00 *Var0  50` *Var1  10` )
  124:  	Call  SetNpcAnimation   ( .NpcID:TrainStationToad_00 008C0003 )
  138:  	Call  SetNpcSpeed       ( .NpcID:TrainStationToad_00 *Fixed[2.0] )
  14C:  	UseIntBuffer  *Var9
  158:  	Get2Int  *Var3 *Var4
  168:  	Call  NpcMoveTo ( .NpcID:TrainStationToad_00 *Var3 *Var4  0` )
  184:  	Call  SetNpcAnimation   ( .NpcID:TrainStationToad_00 008C0001 )
  198:  	Call  InterpNpcYaw      ( .NpcID:TrainStationToad_00  270`  15` )
  1B0:  	Call  SetNpcFlagBits    ( .NpcID:TrainStationToad_00 00000140 .False )
  1C8:  EndThread
  1D0:  Wait  10`
  1DC:  Thread
  1E4:  	AddF  *Var2  *Fixed[60.0]
  1F4:  	Call  AddVectorPolar        ( *Var0 *Var1 *Fixed[20.0] *Var2 )
  210:  	Call  SetPlayerAnimation    ( .PlayerAnim:Walking )
  220:  	Call  SetPlayerSpeed        ( *Fixed[3.0] )
  230:  	Call  PlayerMoveTo  ( *Var0 *Var1  0` )
  248:  	Call  SetPlayerAnimation    ( 00010002 )
  258:  EndThread
  260:  Wait  10`
  26C:  Sub   *Var1  0000001E
  27C:  Call  SetNpcAnimation   ( .Npc:Partner 00000102 )
  290:  Call  SetNpcSpeed       ( .Npc:Partner *Fixed[2.5] )
  2A4:  Call  NpcMoveTo ( .Npc:Partner *Var0 *Var1  0` )
  2C0:  Call  SetNpcAnimation   ( .Npc:Partner 00000106 )
  2D4:  Call  SetNpcFlagBits    ( .Npc:Partner 00000140 .False )
  2EC:  Return
  2F4:  End
}

#new:Script $Script_80242BB8
{
    0:  Switch  *AreaByte[6]
    C:  	Case  ==  00000000
   18:  		Call  GotoMapSpecial    ( $ASCII_80244E68 00000003 00000001 ) % omo_03
   30:  	Case  ==  00000001
   3C:  		Call  GotoMapSpecial    ( $ASCII_80244E60 00000003 00000001 ) % omo_06
   54:  	Case  ==  00000002
   60:  		Call  GotoMapSpecial    ( $ASCII_80244E58 00000002 00000001 ) % omo_08
   78:  	Case  ==  00000003
   84:  		Call  GotoMapSpecial    ( $ASCII_80244E50 00000003 00000001 ) % omo_10
   9C:  EndSwitch
   A4:  Wait  100`
   B0:  Return
   B8:  End
}

#new:Script $Script_80242C78
{
    0:  Switch  *AreaByte[5]
    C:  	Case  00000000  to  00000001
   1C:  		Switch  *AreaByte[6]
   28:  			Case  ==  00000000
   34:  				Call  GotoMapSpecial    ( $ASCII_80244E68 00000002 00000001 ) % omo_03
   4C:  			Case  ==  00000001
   58:  				Call  GotoMapSpecial    ( $ASCII_80244E60 00000002 00000001 ) % omo_06
   70:  			Case  ==  00000002
   7C:  				Call  GotoMapSpecial    ( $ASCII_80244E58 00000001 00000001 ) % omo_08
   94:  			Case  ==  00000003
   A0:  				Call  GotoMapSpecial    ( $ASCII_80244E50 00000002 00000001 ) % omo_10
   B8:  		EndSwitch
   C0:  	Case  ==  00000002
   CC:  		Switch  *AreaByte[6]
   D8:  			Case  ==  00000000
   E4:  				Call  GotoMapSpecial    ( $ASCII_80244E68 00000002 00000001 ) % omo_03
   FC:  			Case  ==  00000001
  108:  				If  *GF_OMO03_BlueSwitchActivated  ==  .True
  118:  					Call  GotoMapSpecial    ( $ASCII_80244E60 00000002 00000001 ) % omo_06
  130:  				Else
  138:  					Call  GotoMapSpecial    ( $ASCII_80244E68 00000002 00000001 ) % omo_03
  150:  				EndIf
  158:  			Case  ==  00000003
  164:  				Call  GotoMapSpecial    ( $ASCII_80244E50 00000002 00000001 ) % omo_10
  17C:  		EndSwitch
  184:  	Case  ==  00000003
  190:  		Switch  *AreaByte[6]
  19C:  			Case  ==  00000000
  1A8:  				Call  GotoMapSpecial    ( $ASCII_80244E68 00000002 00000001 ) % omo_03
  1C0:  			Case  ==  00000001
  1CC:  				If  *GF_OMO03_BlueSwitchActivated  ==  .True
  1DC:  					Call  GotoMapSpecial    ( $ASCII_80244E60 00000002 00000001 ) % omo_06
  1F4:  				Else
  1FC:  					Call  GotoMapSpecial    ( $ASCII_80244E68 00000002 00000001 ) % omo_03
  214:  				EndIf
  21C:  			Case  ==  00000002
  228:  				If  *GF_OMO03_BlueSwitchActivated  ==  .True
  238:  					Call  GotoMapSpecial    ( $ASCII_80244E58 00000001 00000001 ) % omo_08
  250:  				Else
  258:  					Call  GotoMapSpecial    ( $ASCII_80244E68 00000002 00000001 ) % omo_03
  270:  				EndIf
  278:  		EndSwitch
  280:  EndSwitch
  288:  Wait  100`
  294:  Return
  29C:  End
}

#new:Script $Script_80242F1C
{
    0:  Label  A
    C:  Wait  1`
   18:  Call  $Function_80240518 ( )
   24:  If  *Var0  !=  00000001
   34:  	Goto  A
   40:  EndIf
   48:  If  *AreaFlag[002]  ==  .False
   58:  	ExecWait  $Script_80242BB8
   64:  Else
   6C:  	ExecWait  $Script_80242C78
   78:  EndIf
   80:  Return
   88:  End
}

#new:Script $Script_80242FAC
{
    0:  Call  SetTexPanner      ( ~Model:y_a 00000002 )
   14:  Call  EnableTexPanning  ( ~Model:y_a .True )
   28:  Set   *MapVar[9]  00008000
   38:  Thread
   40:  	Loop
   4C:  		Call  SetTexPanOffset   ( 00000002 00000000 *MapVar[9] 00000000 )
   68:  		Wait  1`
   74:  	EndLoop
   7C:  EndThread
   84:  Set   *Var5  00000000
   94:  Label  0
   A0:  Add   *Var5  00000002
   B0:  If  *Var5  >  00000168
   C0:  	Sub   *Var5  00000168
   D0:  EndIf
   D8:  Call  RotateModel   ( ~Model:y_a *Var5 00000000 00000000 FFFFFFFF )
   F8:  Wait  1`
  104:  If  *MapFlag[01]  ==  .True
  114:  	Goto  A
  120:  EndIf
  128:  Goto  0
  134:  Label  A
  140:  If  *AreaFlag[002]  ==  .False
  150:  	Set   *Var2  0000010E
  160:  	Call  EnableTexPanning  ( ~Model:y_c2 .False )
  174:  	Call  EnableTexPanning  ( ~Model:y_b2 .True )
  188:  Else
  190:  	Set   *Var2  0000005A
  1A0:  	Call  EnableTexPanning  ( ~Model:y_b2 .False )
  1B4:  	Call  EnableTexPanning  ( ~Model:y_c2 .True )
  1C8:  EndIf
  1D0:  If  *Var2  <  *Var5
  1E0:  	Add   *Var2  00000168
  1F0:  EndIf
  1F8:  Set   *Var6  *AreaFlag[002]
  208:  Call  MakeLerp  ( *Var5 *Var2 0000003C .Easing:CosFastOvershoot )
  224:  Call  UpdateLerp ( )
  230:  Set   *Var4  FFFFFFFF
  240:  Label  B
  24C:  Call  UpdateLerp ( )
  258:  If  *Var2  <  *Var0
  268:  	Set   *Var3  00000000
  278:  Else
  280:  	Set   *Var3  00000001
  290:  EndIf
  298:  If  *Var4  !=  FFFFFFFF
  2A8:  	If  *Var3  !=  *Var4
  2B8:  		Call  PlaySound ( 000001F9 )
  2C8:  	EndIf
  2D0:  EndIf
  2D8:  Set   *Var4  *Var3
  2E8:  Call  RotateModel   ( ~Model:y_a *Var0 00000000 00000000 FFFFFFFF )
  308:  Wait  1`
  314:  If  *AreaFlag[002]  !=  *Var6
  324:  	Goto  15
  330:  EndIf
  338:  If  *Var1  ==  00000001
  348:  	Goto  B
  354:  EndIf
  35C:  Call  PlaySound ( 000001FA )
  36C:  If  *AreaFlag[002]  ==  .False
  37C:  	Set   *MapVar[9]  00004000
  38C:  Else
  394:  	Set   *MapVar[9]  0000C000
  3A4:  EndIf
  3AC:  Label  14
  3B8:  Wait  1`
  3C4:  If  *AreaFlag[002]  ==  *Var6
  3D4:  	Goto  14
  3E0:  EndIf
  3E8:  Label  15
  3F4:  Set   *Var5  *Var0
  404:  Goto  A
  410:  Return
  418:  End
}

#new:Script $Script_802433CC
{
    0:  Call  GetCurrentPartner ( *Var0 )
   10:  If  *Var0  !=  00000000
   20:  	Call  GetCurrentPartnerID   ( *Var0 )
   30:  	If  *Var0  ==  .Partner:Parakarry % 4
   40:  		Return
   48:  	EndIf
   50:  EndIf
   58:  If  *MapFlag[01]  ==  .True
   68:  	If  *AreaFlag[002]  ==  .False
   78:  		Return
   80:  	EndIf
   88:  EndIf
   90:  Set   *MapFlag[01]  .True
   A0:  Set   *AreaFlag[002]  .False
   B0:  Call  MakeLerp  ( 00000000 FFFFFFEE 0000000F .Easing:Linear )
   CC:  Label  0
   D8:  Call  UpdateLerp ( )
   E4:  Call  TranslateModel    ( ~Model:y_b1 00000000 *Var0 00000000 )
  100:  Call  TranslateModel    ( ~Model:y_b2 00000000 *Var0 00000000 )
  11C:  Call  UpdateColliderTransform   ( ~Collider:o920 )
  12C:  Call  UpdateColliderTransform   ( ~Collider:o921 )
  13C:  Wait  1`
  148:  If  *Var1  ==  00000001
  158:  	Goto  0
  164:  EndIf
  16C:  Call  MakeLerp  ( FFFFFFEE 00000000 0000000F .Easing:Linear )
  188:  Label  1
  194:  Call  UpdateLerp ( )
  1A0:  Call  TranslateModel    ( ~Model:y_b1 00000000 *Var0 00000000 )
  1BC:  Call  TranslateModel    ( ~Model:y_b2 00000000 *Var0 00000000 )
  1D8:  Call  UpdateColliderTransform   ( ~Collider:o920 )
  1E8:  Call  UpdateColliderTransform   ( ~Collider:o921 )
  1F8:  Wait  1`
  204:  If  *Var1  ==  00000001
  214:  	Goto  1
  220:  EndIf
  228:  Return
  230:  End
}

#new:Script $Script_80243604
{
    0:  Call  GetCurrentPartner ( *Var0 )
   10:  If  *Var0  !=  00000000
   20:  	Call  GetCurrentPartnerID   ( *Var0 )
   30:  	If  *Var0  ==  .Partner:Parakarry % 4
   40:  		Return
   48:  	EndIf
   50:  EndIf
   58:  If  *MapFlag[01]  ==  .True
   68:  	If  *AreaFlag[002]  ==  .True
   78:  		Return
   80:  	EndIf
   88:  EndIf
   90:  Set   *MapFlag[01]  .True
   A0:  Set   *AreaFlag[002]  .True
   B0:  Call  MakeLerp  ( 00000000 FFFFFFEE 0000000F .Easing:Linear )
   CC:  Label  0
   D8:  Call  UpdateLerp ( )
   E4:  Call  TranslateModel    ( ~Model:y_c1 00000000 *Var0 00000000 )
  100:  Call  TranslateModel    ( ~Model:y_c2 00000000 *Var0 00000000 )
  11C:  Call  UpdateColliderTransform   ( ~Collider:o923 )
  12C:  Call  UpdateColliderTransform   ( ~Collider:o924 )
  13C:  Wait  1`
  148:  If  *Var1  ==  00000001
  158:  	Goto  0
  164:  EndIf
  16C:  Call  MakeLerp  ( FFFFFFEE 00000000 0000000F .Easing:Linear )
  188:  Label  1
  194:  Call  UpdateLerp ( )
  1A0:  Call  TranslateModel    ( ~Model:y_c1 00000000 *Var0 00000000 )
  1BC:  Call  TranslateModel    ( ~Model:y_c2 00000000 *Var0 00000000 )
  1D8:  Call  UpdateColliderTransform   ( ~Collider:o923 )
  1E8:  Call  UpdateColliderTransform   ( ~Collider:o924 )
  1F8:  Wait  1`
  204:  If  *Var1  ==  00000001
  214:  	Goto  1
  220:  EndIf
  228:  Return
  230:  End
}

#new:Script $Script_UpdateTexturePan_8024383C
{
    0:  SetGroup  00000000
    C:  If  *Var5  ==  00000001
   1C:  	If  *Var6  ==  00000001
   2C:  		If  *Var7  ==  00000001
   3C:  			If  *Var8  ==  00000001
   4C:  				Call  $Function_8024055C ( )
   58:  				Return
   60:  			EndIf
   68:  		EndIf
   70:  	EndIf
   78:  EndIf
   80:  Call  $Function_80240680 ( )
   8C:  Return
   94:  End
}

#new:Script $Script_802438D8
{
    0:  Set   *MapFlag[01]  .False
   10:  Set   *MapFlag[0A]  .False
   20:  Exec  $Script_80242FAC
   2C:  Call  ParentColliderToModel ( ~Collider:o920 ~Model:y_b1 )
   40:  Call  ParentColliderToModel ( ~Collider:o921 ~Model:y_b2 )
   54:  Call  ParentColliderToModel ( ~Collider:o923 ~Model:y_c1 )
   68:  Call  ParentColliderToModel ( ~Collider:o924 ~Model:y_c2 )
   7C:  Bind  $Script_802433CC .Trigger:FloorTouch ~Collider:o920 00000001 00000000
   98:  Bind  $Script_802433CC .Trigger:WallHammer ~Collider:o921 00000001 00000000
   B4:  Bind  $Script_80243604 .Trigger:FloorTouch ~Collider:o923 00000001 00000000
   D0:  Bind  $Script_80243604 .Trigger:WallHammer ~Collider:o924 00000001 00000000
   EC:  Thread
   F4:  	Set   *Var0  00000001
  104:  	Set   *Var1  FFFFFBB4
  114:  	Set   *Var2  00000000
  124:  	Set   *Var3  00000000
  134:  	Set   *Var4  00000000
  144:  	Set   *Var5  00000001
  154:  	Set   *Var6  00000001
  164:  	Set   *Var7  00000001
  174:  	Set   *Var8  00000001
  184:  	Set   *Var9  00000000
  194:  	Set   *VarA  00000000
  1A4:  	Set   *VarB  00000000
  1B4:  	Set   *VarC  00000000
  1C4:  	Exec  $Script_UpdateTexturePan_8024383C
  1D0:  EndThread
  1D8:  Return
  1E0:  End
}

#new:Unknown $???_80243AC0
{
	0000000A FFFFFF97
}

#new:Unknown $???_80243AC8
{
	F24A7170 F2473487 F24BE280 F24C6B4F F2473487 F24E9480 F246A528 F251F729
	F2429C51 FFFFFFFF FFFFFFFF FFFFFFFF
}

#new:Script $Script_80243AF8
{
    0:  Call  FadeOutMusic  ( 00000000 00000BB8 )
   14:  Call  DisablePlayerInput    ( .True )
   24:  Call  DisablePartnerAI      ( 00000000 )
   34:  Call  SetNpcAnimation       ( .Npc:Partner 00000106 )
   48:  Wait  10`
   54:  Call  DisablePlayerPhysics  ( .True )
   64:  Exec  $Script_802423A4
   70:  Set   *AreaByte[5]  00000003
   80:  Set   *Var0  $???_80243AC8
   90:  ExecWait  $Script_802424BC
   9C:  Call  ModifyColliderFlags   ( 00000000 ~Collider:o961 7FFFFE00 )
   B4:  Set   *MapVar[0]  00000000
   C4:  Set   *MapVar[1]  $???_80243AC8
   D4:  Set   *MapVar[2]  00000001
   E4:  Set   *MapFlag[00]  .True
   F4:  Label  A
  100:  If  *MapVar[B]  <  0000015E
  110:  	Wait  1`
  11C:  	Goto  A
  128:  EndIf
  130:  Call  GotoMap   ( $ASCII_80244E70 00000000 ) % omo_16
  144:  Set   *GB_OMO_TrainDestination  00000003
  154:  Wait  100`
  160:  Return
  168:  End
}

#new:Unknown $???_80243C68
{
	F24A7170 F2473487 F24EB280 F2487792 F2473487 F2466080 F246A528 F244F4D4
	F244F3C0 F242FDD8 F2429C51 FFFFFFFF FFFFFFFF FFFFFFFF
}

#new:Script $Script_80243CA0
{
    0:  Call  FadeOutMusic  ( 00000000 00000BB8 )
   14:  Call  DisablePlayerInput    ( .True )
   24:  Call  DisablePartnerAI      ( 00000000 )
   34:  Call  SetNpcAnimation       ( .Npc:Partner 00000106 )
   48:  Wait  10`
   54:  Call  DisablePlayerPhysics  ( .True )
   64:  Exec  $Script_802423A4
   70:  Set   *AreaByte[5]  00000003
   80:  Set   *Var0  $???_80243C68
   90:  ExecWait  $Script_802424BC
   9C:  Call  ModifyColliderFlags   ( 00000000 ~Collider:o961 7FFFFE00 )
   B4:  Set   *MapVar[0]  00000000
   C4:  Set   *MapVar[1]  $???_80243C68
   D4:  Set   *MapVar[2]  00000001
   E4:  Set   *MapFlag[00]  .True
   F4:  Label  A
  100:  If  *MapVar[B]  >  FFFFFEA2
  110:  	Wait  1`
  11C:  	Goto  A
  128:  EndIf
  130:  Call  GotoMap   ( $ASCII_80244E70 00000001 ) % omo_16
  144:  Set   *GB_OMO_TrainDestination  00000002
  154:  Wait  100`
  160:  Return
  168:  End
}

#new:Unknown $???_80243E10
{
	F250F60B F243CEBC F24DEA2E F25000B7 F244F44A F24E9480 F246A528 F24C6B4F
	F2473487 F249D16C F247348B FFFFFFFF FFFFFFFF FFFFFFFF
}

#new:Unknown $???_80243E48
{
	F250F60B F243CEBC F24DEA2E F25000B7 F244F44A F24E9480 F246A528 F24C6B4F
	F2473487 F2487792 F2473487 F2466080 F246A528 F244F4D4 F244F3C0 F242FDD8
	F2429C51 FFFFFFFF FFFFFFFF FFFFFFFF
}

#new:Script $Script_80243E98
{
    0:  Call  DisablePlayerInput    ( .True )
   10:  Call  DisablePlayerPhysics  ( .True )
   20:  Call  SetPlayerActionState  ( .ActionState:Land )
   30:  Call  DisablePartnerAI      ( 00000000 )
   40:  Call  ModifyColliderFlags   ( 00000000 ~Collider:o961 7FFFFE00 )
   58:  If  *AreaByte[6]  ==  00000003
   68:  	Set   *MapVar[0]  00000000
   78:  	Set   *MapVar[1]  $???_80243E10
   88:  	Set   *MapVar[2]  00000002
   98:  	Exec  $Script_802410B0
   A4:  	Set   *MapFlag[00]  .True
   B4:  	Wait  1`
   C0:  	Exec  $Script_80242278 *VarB
   D0:  	Label  A
   DC:  	If  *MapFlag[00]  ==  .True
   EC:  		Wait  1`
   F8:  		Goto  A
  104:  	EndIf
  10C:  	Wait  20`
  118:  	Kill  *VarB
  124:  	Exec  $Script_802422E0
  130:  	Call  $Function_80240000 ( )
  13C:  	Set   *Var9  $???_80243AC0
  14C:  	ExecWait  $Script_802428BC
  158:  	Call  SpeakToPlayer ( .NpcID:TrainStationToad_00 008C0004 008C0001 00000000 000F0011 ) % Station stop: Red Station! Welcome to Red Station, ...
  178:  	Call  ModifyColliderFlags   ( 00000001 ~Collider:o961 7FFFFE00 )
  190:  	Call  DisablePlayerPhysics  ( .False )
  1A0:  	Call  EnablePartnerAI ( )
  1AC:  	Call  DisablePlayerInput    ( .False )
  1BC:  Else
  1C4:  	Exec  $Script_80242278
  1D0:  	Set   *MapVar[0]  00000000
  1E0:  	Set   *MapVar[1]  $???_80243E48
  1F0:  	Set   *MapVar[2]  00000000
  200:  	Exec  $Script_802410B0
  20C:  	Set   *MapFlag[00]  .True
  21C:  	Wait  1`
  228:  	Exec  $Script_80242F1C
  234:  	Label  14
  240:  	If  *MapVar[B]  >  FFFFFEA2
  250:  		Wait  1`
  25C:  		Goto  14
  268:  	EndIf
  270:  	Call  GotoMap   ( $ASCII_80244E70 00000001 ) % omo_16
  284:  	Set   *GB_OMO_TrainDestination  00000002
  294:  	Wait  100`
  2A0:  EndIf
  2A8:  Return
  2B0:  End
}

#new:Unknown $???_80244150
{
	F243FEF6 F243CEBC F24CAACD F244F4D4 F244F3C0 F2466080 F246A528 F2487792
	F2473487 F24B116C F247348B FFFFFFFF FFFFFFFF FFFFFFFF
}

#new:Unknown $???_80244188
{
	F243FEF6 F243CEBC F24CAACD F244F4D4 F244F3C0 F2466080 F246A528 F2487792
	F2473487 F24C6B4F F2473487 F24E9480 F246A528 F251F729 F2429C51 FFFFFFFF
	FFFFFFFF FFFFFFFF
}

#new:Script $Script_802441D0
{
    0:  Call  DisablePlayerInput    ( .True )
   10:  Call  DisablePlayerPhysics  ( .True )
   20:  Call  SetPlayerActionState  ( .ActionState:Land )
   30:  Call  DisablePartnerAI      ( 00000000 )
   40:  Call  ModifyColliderFlags   ( 00000000 ~Collider:o961 7FFFFE00 )
   58:  If  *AreaByte[6]  ==  00000003
   68:  	Set   *MapVar[0]  00000000
   78:  	Set   *MapVar[1]  $???_80244150
   88:  	Set   *MapVar[2]  00000002
   98:  	Exec  $Script_802410B0
   A4:  	Set   *MapFlag[00]  .True
   B4:  	Wait  1`
   C0:  	Exec  $Script_80242278 *VarB
   D0:  	Label  A
   DC:  	If  *MapFlag[00]  ==  .True
   EC:  		Wait  1`
   F8:  		Goto  A
  104:  	EndIf
  10C:  	Wait  20`
  118:  	Kill  *VarB
  124:  	Exec  $Script_802422E0
  130:  	Call  $Function_80240000 ( )
  13C:  	Set   *Var9  $???_80243AC0
  14C:  	ExecWait  $Script_802428BC
  158:  	Call  SpeakToPlayer ( .NpcID:TrainStationToad_00 008C0004 008C0001 00000000 000F0011 ) % Station stop: Red Station! Welcome to Red Station, ...
  178:  	Call  ModifyColliderFlags   ( 00000001 ~Collider:o961 7FFFFE00 )
  190:  	Call  DisablePlayerPhysics  ( .False )
  1A0:  	Call  EnablePartnerAI ( )
  1AC:  	Call  DisablePlayerInput    ( .False )
  1BC:  Else
  1C4:  	Exec  $Script_80242278
  1D0:  	Set   *MapVar[0]  00000000
  1E0:  	Set   *MapVar[1]  $???_80244188
  1F0:  	Set   *MapVar[2]  00000000
  200:  	Exec  $Script_802410B0
  20C:  	Set   *MapFlag[00]  .True
  21C:  	Wait  1`
  228:  	Exec  $Script_80242F1C
  234:  	Label  14
  240:  	If  *MapVar[B]  <  0000015E
  250:  		Wait  1`
  25C:  		Goto  14
  268:  	EndIf
  270:  	Call  GotoMap   ( $ASCII_80244E70 00000000 ) % omo_16
  284:  	Set   *GB_OMO_TrainDestination  00000003
  294:  	Wait  100`
  2A0:  EndIf
  2A8:  Return
  2B0:  End
}

#new:IntTable $IntTable_80244488
{
	00000002 00000001 00000000
}

#new:IntTable $IntTable_80244494
{
	00000000 00000001 00000002
}

#new:Script $Script_802444A0
{
    0:  If  *MapFlag[01]  ==  .False
   10:  	Call  SpeakToPlayer ( .NpcID:TrainStationToad_00 008C0004 008C0001 00000000 000F0006 ) % Which way are you heading? Press one of those swit ...
   30:  Else
   38:  	If  *AreaFlag[002]  ==  .False
   48:  		Call  SpeakToPlayer ( .NpcID:TrainStationToad_00 008C0004 008C0001 00000000 000F0007 ) % Where would you like to go?
   68:  		Call  ShowChoice    ( 001E0043 ) % Green Station Pink Station Blue Station Don't get  ...
   78:  		If  *Var0  !=  00000003
   88:  			Call  CloseMessage ( )
   94:  			UseIntBuffer  $IntTable_80244488
   A0:  			Add   *Var0  00000001
   B0:  			Loop  *Var0
   BC:  				Get1Int  *Var1
   C8:  			EndLoop
   D0:  			Set   *AreaByte[6]  *Var1
   E0:  			ExecWait  $Script_80243CA0
   EC:  		Else
   F4:  			Call  ContinueSpeech    ( .NpcID:TrainStationToad_00 008C0004 008C0001 00000000 000F0008 ) % Please ride with us again, OK?
  114:  		EndIf
  11C:  	Else
  124:  		Call  SpeakToPlayer ( .NpcID:TrainStationToad_00 008C0004 008C0001 00000000 000F0007 ) % Where would you like to go?
  144:  		Call  ShowChoice    ( 001E0042 ) % Blue Station Pink Station Green Station Don't get  ...
  154:  		If  *Var0  !=  00000003
  164:  			Call  CloseMessage ( )
  170:  			UseIntBuffer  $IntTable_80244494
  17C:  			Add   *Var0  00000001
  18C:  			Loop  *Var0
  198:  				Get1Int  *Var1
  1A4:  			EndLoop
  1AC:  			Set   *AreaByte[6]  *Var1
  1BC:  			ExecWait  $Script_80243AF8
  1C8:  		Else
  1D0:  			Call  ContinueSpeech    ( .NpcID:TrainStationToad_00 008C0004 008C0001 00000000 000F0008 ) % Please ride with us again, OK?
  1F0:  		EndIf
  1F8:  	EndIf
  200:  EndIf
  208:  Return
  210:  End
}

#new:Unknown $???_802446B8
{
	F24A7170 F2473487 F24BE280 FFFFFFFF FFFFFFFF FFFFFFFF
}

#new:Script $Script_802446D0
{
    0:  ExecWait  $Script_802438D8
    C:  Call  GetLoadType   ( *Var1 )
   1C:  If  *Var1  ==  00000001
   2C:  	Set   *MapVar[0]  00000000
   3C:  	Set   *MapVar[1]  $???_802446B8
   4C:  	Set   *MapVar[2]  00000000
   5C:  	Exec  $Script_802410B0
   68:  	Set   *MapFlag[00]  .True
   78:  Else
   80:  	Call  GetEntryID    ( *Var0 )
   90:  	Switch  *Var0
   9C:  		Case  ==  ~Entry:Entry2
   A8:  			Exec  $Script_802441D0
   B4:  		Case  ==  ~Entry:Entry3
   C0:  			Exec  $Script_80243E98
   CC:  		Default
   D4:  			Set   *MapVar[0]  00000000
   E4:  			Set   *MapVar[1]  $???_802446B8
   F4:  			Set   *MapVar[2]  00000000
  104:  			Exec  $Script_802410B0
  110:  			Set   *MapFlag[00]  .True
  120:  	EndSwitch
  128:  EndIf
  130:  Return
  138:  End
}

#new:Script $Script_80244810
{
    0:  Return
    8:  End
}

#new:NpcSettings $NpcSettings_80244820
{
	00000000 00200018 $Script_80244810 00000000 00000000 00000000 00000000 00000000
	00000000 00000000 00630000
}

#new:Script $Script_Interact_8024484C
{
    0:  Call  DisablePlayerInput    ( .True )
   10:  ExecWait  $Script_802444A0
   1C:  Call  DisablePlayerInput    ( .False )
   2C:  Return
   34:  End
}

#new:Script $Script_Init_80244888
{
    0:  Call  BindNpcInteract   ( .Npc:Self $Script_Interact_8024484C )
   14:  Return
   1C:  End
}

#new:Script $Script_Interact_802448AC
{
    0:  Switch  *GB_StoryProgress
    C:  	Case  <  .Story:Ch4_WattJoinedParty % 2
   18:  		Call  SpeakToPlayer ( .Npc:Self 008C0404 008C0401 00000000 000F0031 ) % The other day, I saw a gang of Shy Guys carrying a ...
   38:  	Case  <  .Story:Ch4_DefeatedGeneralGuy % 4
   44:  		Call  SpeakToPlayer ( .Npc:Self 008C0404 008C0401 00000000 000F0032 ) % You beat that weird, giggling ghost that likes the ...
   64:  	Default
   6C:  		Call  SpeakToPlayer ( .Npc:Self 008C0404 008C0401 00000000 000F0033 ) % Oh. I see. The Shy Guys were holding a Star Spirit ...
   8C:  EndSwitch
   94:  Return
   9C:  End
}

#new:Script $Script_Init_80244950
{
    0:  Call  BindNpcInteract   ( .Npc:Self $Script_Interact_802448AC )
   14:  Return
   1C:  End
}

#new:NpcGroup $NpcGroup_80244974
{
	.NpcID:TrainStationToad_00 $NpcSettings_80244820 ~Vec3f:NPC_TrainStationToad_00 % 10 50 -105
	00400D05 $Script_Init_80244888 00000000 00000000 0000010E
	~NoDrops
	~Movement:NPC_TrainStationToad_00
	~AnimationTable:NPC_TrainStationToad_00 % .Sprite:TrainStationToad
	00000000 00000000 00000000 001A00B8 % He's an employee of the Toy Box station. The emplo ...
	%
	% $NpcGroup_80244974[1F0]
	.NpcID:TrainStationToad_01 $NpcSettings_80244820 ~Vec3f:NPC_TrainStationToad_01 % -50 0 80
	00400D05 $Script_Init_80244950 00000000 00000000 0000005A
	~NoDrops
	~Movement:NPC_TrainStationToad_01
	~AnimationTable:NPC_TrainStationToad_01 % .Sprite:TrainStationToad
	00000000 00000000 00000000 001A00B8 % He's an employee of the Toy Box station. The emplo ...
}

#new:NpcGroupList $NpcGroupList_80244D54
{
	00000002 $NpcGroup_80244974 00000000
	00000000 00000000 00000000
}

PADDING: 80244D6C to 80244D70 (00004D6C to 00004D70)
00000000

#new:Script $Script_MakeEntities
{
    0:  Call  MakeEntity    ( .Entity:HiddenYellowBlock ~Vec4d:Entity80244D70 .Item:SuperShroom 80000000 )
   28:  Call  AssignBlockFlag   ( *GF_OMO10_HiddenItem_SuperShroom )
   38:  Call  MakeEntity    ( .Entity:HealingBlock ~Vec4d:Entity80244DA8 80000000 )
   5C:  Call  MakeEntity    ( .Entity:SavePoint ~Vec4d:Entity80244DCC 80000000 )
   80:  Call  MakeEntity    ( .Entity:HiddenPanel ~Vec4d:Entity80244DF0 ~Model:soto 80000000 )
   A8:  Call  AssignPanelFlag   ( *GF_OMO10_HiddenPanel )
   B8:  Return
   C0:  End
}

PADDING: 80244E38 to 80244E40 (00004E38 to 00004E40)
00000000 00000000

#new:ASCII $ASCII_80244E40
{
	"omo_11"
}

#new:ASCII $ASCII_80244E48
{
	"omo_02"
}

#new:ASCII $ASCII_80244E50
{
	"omo_10"
}

#new:ASCII $ASCII_80244E58
{
	"omo_08"
}

#new:ASCII $ASCII_80244E60
{
	"omo_06"
}

#new:ASCII $ASCII_80244E68
{
	"omo_03"
}

#new:ASCII $ASCII_80244E70
{
	"omo_16"
}

PADDING: 80244E78 to 80244E80 (00004E78 to 00004E80)
00000000 00000000

