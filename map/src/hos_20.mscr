% Script File: hos_20.mscr
% Decoded from: 0 to 1630 (hos_20)


#new:Function $Function_80240000
{
    0:  ADDIU     SP, SP, FFE8
    4:  SW        S0, 10 (SP)
    8:  COPY      S0, A0
    C:  SW        RA, 14 (SP)
   10:  LW        V1, A8 (S0)
   14:  LW        V0, 88 (S0)
   18:  ADDU      V1, V1, V0
   1C:  BGEZ      V1, .o30
   20:  SW        V1, A8 (S0)
   24:  LUI       V0, 2
   28:  BEQ       R0, R0, .o40
   2C:  ADDU      V0, V1, V0
        .o30
   30:  LUI       A0, 2
   34:  SLT       V0, A0, V1
   38:  BEQ       V0, R0, .o44
   3C:  SUBU      V0, V1, A0
        .o40
   40:  SW        V0, A8 (S0)
        .o44
   44:  LW        V1, AC (S0)
   48:  LW        V0, 8C (S0)
   4C:  ADDU      V1, V1, V0
   50:  BGEZ      V1, .o64
   54:  SW        V1, AC (S0)
   58:  LUI       V0, 2
   5C:  BEQ       R0, R0, .o74
   60:  ADDU      V0, V1, V0
        .o64
   64:  LUI       A0, 2
   68:  SLT       V0, A0, V1
   6C:  BEQ       V0, R0, .o78
   70:  SUBU      V0, V1, A0
        .o74
   74:  SW        V0, AC (S0)
        .o78
   78:  LW        V1, B0 (S0)
   7C:  LW        V0, 90 (S0)
   80:  ADDU      V1, V1, V0
   84:  BGEZ      V1, .o98
   88:  SW        V1, B0 (S0)
   8C:  LUI       V0, 2
   90:  BEQ       R0, R0, .oA8
   94:  ADDU      V0, V1, V0
        .o98
   98:  LUI       A0, 2
   9C:  SLT       V0, A0, V1
   A0:  BEQ       V0, R0, .oAC
   A4:  SUBU      V0, V1, A0
        .oA8
   A8:  SW        V0, B0 (S0)
        .oAC
   AC:  LW        V1, B4 (S0)
   B0:  LW        V0, 94 (S0)
   B4:  ADDU      V1, V1, V0
   B8:  BGEZ      V1, .oCC
   BC:  SW        V1, B4 (S0)
   C0:  LUI       V0, 2
   C4:  BEQ       R0, R0, .oDC
   C8:  ADDU      V0, V1, V0
        .oCC
   CC:  LUI       A0, 2
   D0:  SLT       V0, A0, V1
   D4:  BEQ       V0, R0, .oE0
   D8:  SUBU      V0, V1, A0
        .oDC
   DC:  SW        V0, B4 (S0)
        .oE0
   E0:  LW        A0, 84 (S0)
   E4:  JAL       ~Func:set_main_pan_u
   E8:  LW        A1, A8 (S0)
   EC:  LW        A0, 84 (S0)
   F0:  JAL       ~Func:set_main_pan_v
   F4:  LW        A1, AC (S0)
   F8:  LW        A0, 84 (S0)
   FC:  JAL       ~Func:set_aux_pan_u
  100:  LW        A1, B0 (S0)
  104:  LW        A0, 84 (S0)
  108:  JAL       ~Func:set_aux_pan_v
  10C:  LW        A1, B4 (S0)
  110:  LW        RA, 14 (SP)
  114:  LW        S0, 10 (SP)
  118:  CLEAR     V0
  11C:  JR        RA
  120:  ADDIU     SP, SP, 18
}

#new:Function $Function_80240124
{
    0:  ADDIU     SP, SP, FFE8
    4:  SW        S0, 10 (SP)
    8:  COPY      S0, A0
    C:  BEQ       A1, R0, .o24
   10:  SW        RA, 14 (SP)
   14:  SW        R0, 70 (S0)
   18:  SW        R0, 74 (S0)
   1C:  SW        R0, 78 (S0)
   20:  SW        R0, 7C (S0)
        .o24
   24:  LW        V0, 70 (S0)
   28:  BNE       V0, R0, .o64
   2C:  NOP
   30:  LW        V1, A8 (S0)
   34:  LW        V0, 88 (S0)
   38:  ADDU      V1, V1, V0
   3C:  BGEZ      V1, .o50
   40:  SW        V1, A8 (S0)
   44:  LUI       V0, 2
   48:  BEQ       R0, R0, .o60
   4C:  ADDU      V0, V1, V0
        .o50
   50:  LUI       A0, 2
   54:  SLT       V0, A0, V1
   58:  BEQ       V0, R0, .o64
   5C:  SUBU      V0, V1, A0
        .o60
   60:  SW        V0, A8 (S0)
        .o64
   64:  LW        V0, 74 (S0)
   68:  BNE       V0, R0, .oA4
   6C:  NOP
   70:  LW        V1, AC (S0)
   74:  LW        V0, 8C (S0)
   78:  ADDU      V1, V1, V0
   7C:  BGEZ      V1, .o90
   80:  SW        V1, AC (S0)
   84:  LUI       V0, 2
   88:  BEQ       R0, R0, .oA0
   8C:  ADDU      V0, V1, V0
        .o90
   90:  LUI       A0, 2
   94:  SLT       V0, A0, V1
   98:  BEQ       V0, R0, .oA4
   9C:  SUBU      V0, V1, A0
        .oA0
   A0:  SW        V0, AC (S0)
        .oA4
   A4:  LW        V0, 78 (S0)
   A8:  BNE       V0, R0, .oE4
   AC:  NOP
   B0:  LW        V1, B0 (S0)
   B4:  LW        V0, 90 (S0)
   B8:  ADDU      V1, V1, V0
   BC:  BGEZ      V1, .oD0
   C0:  SW        V1, B0 (S0)
   C4:  LUI       V0, 2
   C8:  BEQ       R0, R0, .oE0
   CC:  ADDU      V0, V1, V0
        .oD0
   D0:  LUI       A0, 2
   D4:  SLT       V0, A0, V1
   D8:  BEQ       V0, R0, .oE4
   DC:  SUBU      V0, V1, A0
        .oE0
   E0:  SW        V0, B0 (S0)
        .oE4
   E4:  LW        V0, 7C (S0)
   E8:  BNE       V0, R0, .o124
   EC:  NOP
   F0:  LW        V1, B4 (S0)
   F4:  LW        V0, 94 (S0)
   F8:  ADDU      V1, V1, V0
   FC:  BGEZ      V1, .o110
  100:  SW        V1, B4 (S0)
  104:  LUI       V0, 2
  108:  BEQ       R0, R0, .o120
  10C:  ADDU      V0, V1, V0
        .o110
  110:  LUI       A0, 2
  114:  SLT       V0, A0, V1
  118:  BEQ       V0, R0, .o124
  11C:  SUBU      V0, V1, A0
        .o120
  120:  SW        V0, B4 (S0)
        .o124
  124:  LW        A0, 84 (S0)
  128:  JAL       ~Func:set_main_pan_u
  12C:  LW        A1, A8 (S0)
  130:  LW        A0, 84 (S0)
  134:  JAL       ~Func:set_main_pan_v
  138:  LW        A1, AC (S0)
  13C:  LW        A0, 84 (S0)
  140:  JAL       ~Func:set_aux_pan_u
  144:  LW        A1, B0 (S0)
  148:  LW        A0, 84 (S0)
  14C:  JAL       ~Func:set_aux_pan_v
  150:  LW        A1, B4 (S0)
  154:  LW        V0, 70 (S0)
  158:  LW        V1, 78 (S0)
  15C:  LW        A0, 98 (S0)
  160:  ADDIU     V0, V0, 1
  164:  SW        V0, 70 (S0)
  168:  LW        V0, 74 (S0)
  16C:  ADDIU     V1, V1, 1
  170:  SW        V1, 78 (S0)
  174:  LW        V1, 70 (S0)
  178:  ADDIU     V0, V0, 1
  17C:  SW        V0, 74 (S0)
  180:  LW        V0, 7C (S0)
  184:  SLT       V1, V1, A0
  188:  ADDIU     V0, V0, 1
  18C:  BNE       V1, R0, .o198
  190:  SW        V0, 7C (S0)
  194:  SW        R0, 70 (S0)
        .o198
  198:  LW        V0, 74 (S0)
  19C:  LW        V1, 9C (S0)
  1A0:  SLT       V0, V0, V1
  1A4:  BEQL      V0, R0, .o1AC
  1A8:  SW        R0, 74 (S0)
        .o1AC
  1AC:  LW        V0, 78 (S0)
  1B0:  LW        V1, A0 (S0)
  1B4:  SLT       V0, V0, V1
  1B8:  BEQL      V0, R0, .o1C0
  1BC:  SW        R0, 78 (S0)
        .o1C0
  1C0:  LW        V0, 7C (S0)
  1C4:  LW        V1, A4 (S0)
  1C8:  SLT       V0, V0, V1
  1CC:  BEQL      V0, R0, .o1D4
  1D0:  SW        R0, 7C (S0)
        .o1D4
  1D4:  LW        RA, 14 (SP)
  1D8:  LW        S0, 10 (SP)
  1DC:  CLEAR     V0
  1E0:  JR        RA
  1E4:  ADDIU     SP, SP, 18
}

PADDING: 8024030C to 80240310 (0000030C to 00000310)
00000000

#new:Function $Function_80240310
{
    0:  LA        V1, 8007419C
    8:  LW        V0, 0 (V1)
    C:  SW        R0, A4 (A0)
   10:  LW        V0, 10 (V0)
   14:  ANDI      V0, V0, 8000
   18:  BEQ       V0, R0, .o24
   1C:  LI        V0, 1
   20:  SW        V0, A4 (A0)
        .o24
   24:  LW        V0, 0 (V1)
   28:  LW        V0, 10 (V0)
   2C:  ANDI      V0, V0, 4000
   30:  BEQ       V0, R0, .o3C
   34:  LI        V0, 1
   38:  SW        V0, A4 (A0)
        .o3C
   3C:  JR        RA
   40:  LI        V0, 2
}

PADDING: 80240354 to 80240360 (00000354 to 00000360)
00000000 00000000 00000000

#new:EntryList $EntryList
{
	~Vec4f:Entry0 % -400.0    0.0    0.0  135.0
	~Vec4f:Entry1 %    0.0    0.0    0.0  135.0
	~Vec4f:Entry2 %  400.0    0.0    0.0  225.0
}

#new:Header $Header
{
	[MainScript]  $Script_Main
	[EntryList]   $EntryList
	[EntryCount]  00000003
	[Background]  00000000
	[MapTattle]   00000000
}

#new:Script $Script_UpdateTexturePan_802403D0
{
    0:  SetGroup  00000000
    C:  If  *Var5  ==  00000001
   1C:  	If  *Var6  ==  00000001
   2C:  		If  *Var7  ==  00000001
   3C:  			If  *Var8  ==  00000001
   4C:  				Call  $Function_80240000 ( )
   58:  				Return
   60:  			EndIf
   68:  		EndIf
   70:  	EndIf
   78:  EndIf
   80:  Call  $Function_80240124 ( )
   8C:  Return
   94:  End
}

#new:Script $Script_8024046C
{
    0:  SetGroup  00000000
    C:  Call  GetEntryID    ( *Var0 )
   1C:  If  *Var0  ==  ~Entry:Entry2
   2C:  	Call  RotateModel   ( ~Model:h1 000000B4 00000000 00000000 00000001 )
   4C:  	Call  RotateModel   ( ~Model:h2 000000B4 00000000 00000000 00000001 )
   6C:  	Call  RotateModel   ( ~Model:h3 000000B4 00000000 00000000 00000001 )
   8C:  	Call  RotateModel   ( ~Model:h4 000000B4 00000000 00000000 00000001 )
   AC:  EndIf
   B4:  Call  EnableTexPanning  ( ~Model:h1 .True )
   C8:  Call  EnableTexPanning  ( ~Model:h2 .True )
   DC:  Call  EnableTexPanning  ( ~Model:h3 .True )
   F0:  Call  EnableTexPanning  ( ~Model:h4 .True )
  104:  Thread
  10C:  	Set   *Var0  0000000C
  11C:  	Set   *Var1  FFFFF800
  12C:  	Set   *Var2  FFFFF800
  13C:  	Set   *Var3  00000000
  14C:  	Set   *Var4  00000000
  15C:  	Set   *Var5  00000001
  16C:  	Set   *Var6  00000001
  17C:  	Set   *Var7  00000000
  18C:  	Set   *Var8  00000000
  19C:  	Set   *Var9  00000000
  1AC:  	Set   *VarA  00000000
  1BC:  	Set   *VarB  00000000
  1CC:  	Set   *VarC  00000000
  1DC:  	Exec  $Script_UpdateTexturePan_802403D0
  1E8:  EndThread
  1F0:  Thread
  1F8:  	Set   *Var0  0000000B
  208:  	Set   *Var1  FFFFE800
  218:  	Set   *Var2  00000000
  228:  	Set   *Var3  00000000
  238:  	Set   *Var4  00000000
  248:  	Set   *Var5  00000001
  258:  	Set   *Var6  00000000
  268:  	Set   *Var7  00000000
  278:  	Set   *Var8  00000000
  288:  	Set   *Var9  00000000
  298:  	Set   *VarA  00000000
  2A8:  	Set   *VarB  00000000
  2B8:  	Set   *VarC  00000000
  2C8:  	Exec  $Script_UpdateTexturePan_802403D0
  2D4:  EndThread
  2DC:  Thread
  2E4:  	Set   *Var0  0000000D
  2F4:  	Set   *Var1  00000000
  304:  	Set   *Var2  FFFFEC00
  314:  	Set   *Var3  00000000
  324:  	Set   *Var4  00000000
  334:  	Set   *Var5  00000000
  344:  	Set   *Var6  00000001
  354:  	Set   *Var7  00000000
  364:  	Set   *Var8  00000000
  374:  	Set   *Var9  00000000
  384:  	Set   *VarA  00000000
  394:  	Set   *VarB  00000000
  3A4:  	Set   *VarC  00000000
  3B4:  	Exec  $Script_UpdateTexturePan_802403D0
  3C0:  EndThread
  3C8:  Thread
  3D0:  	Set   *Var0  0000000A
  3E0:  	Set   *Var1  00000400
  3F0:  	Set   *Var2  FFFFF400
  400:  	Set   *Var3  00000000
  410:  	Set   *Var4  00000000
  420:  	Set   *Var5  00000001
  430:  	Set   *Var6  00000001
  440:  	Set   *Var7  00000000
  450:  	Set   *Var8  00000000
  460:  	Set   *Var9  00000000
  470:  	Set   *VarA  00000000
  480:  	Set   *VarB  00000000
  490:  	Set   *VarC  00000000
  4A0:  	Exec  $Script_UpdateTexturePan_802403D0
  4AC:  EndThread
  4B4:  Return
  4BC:  End
}

#new:Script_Main $Script_Main
{
    0:  Call  SetSpriteShading  ( .Shading:None )
   10:  Call  SetCamPerspective ( .Cam:Default 00000003  25`  16`  4096` )
   30:  Call  SetCamBGColor     ( .Cam:Default  0`  0`  0` )
   4C:  Call  SetCamEnabled     ( .Cam:Default .True )
   60:  Exec  $Script_8024046C
   6C:  Call  GetEntryID        ( *Var0 )
   7C:  Switch  *Var0
   88:  	Case  ==  ~Entry:Entry0
   94:  		Exec  $Script_80240D00
   A0:  	Case  ==  ~Entry:Entry1
   AC:  		Exec  $Script_802410DC
   B8:  	Case  ==  ~Entry:Entry2
   C4:  		Exec  $Script_802412F4
   D0:  EndSwitch
   D8:  Return
   E0:  End
}

PADDING: 80240A18 to 80240A20 (00000A18 to 00000A20)
00000000 00000000

#new:Script $Script_80240A20
{
    0:  Thread
    8:  	Set   *Var4  000000B9
   18:  	Set   *Var5  00000032
   28:  	Loop
   34:  		Set   *Var3  *Var4
   44:  		Set   *Var4  *Var5
   54:  		Set   *Var5  *Var3
   64:  		Call  MakeLerp  ( *Var3 *Var4 0000001E .Easing:CosInOut )
   80:  		Loop
   8C:  			Call  UpdateLerp ( )
   98:  			DivF  *Var0  0000000A
   A8:  			Call  SetCamPitch   ( .Cam:Default *Var0 *Fixed[-3.0] )
   C0:  			Wait  1`
   CC:  			If  *Var1  ==  00000000
   DC:  				BreakLoop
   E4:  			EndIf
   EC:  		EndLoop
   F4:  	EndLoop
   FC:  EndThread
  104:  Set   *Var4  FFFFFFEC
  114:  Set   *Var5  00000050
  124:  Call  GetEntryID    ( *Var8 )
  134:  Loop
  140:  	Set   *Var3  *Var4
  150:  	Set   *Var4  *Var5
  160:  	Set   *Var5  *Var3
  170:  	Call  MakeLerp  ( *Var3 *Var4 0000001E .Easing:CosInOut )
  18C:  	Loop
  198:  		Call  UpdateLerp ( )
  1A4:  		SetF  *Var2  *Var0
  1B4:  		MulF  *Var2  *Fixed[0.1]
  1C4:  		Call  TranslateGroup    ( ~Model:ry *MapVar[A] *Var2 00000000 )
  1E0:  		Call  RotateGroup       ( ~Model:ry *MapVar[B] 00000000 00000001 00000000 )
  200:  		Call  GetModelCenter    ( ~Model:ry3 )
  210:  		Call  SetPlayerPos      ( *Var0 *Var1 *Var2 )
  228:  		If  *Var8  !=  ~Entry:Entry2
  238:  			Add   *Var0  FFFFFFF6
  248:  		Else
  250:  			Add   *Var0  0000000A
  260:  		EndIf
  268:  		Add   *Var2  00000005
  278:  		Call  SetNpcPos ( .Npc:Partner *Var0 *Var1 *Var2 )
  294:  		Wait  1`
  2A0:  		If  *Var1  ==  00000000
  2B0:  			BreakLoop
  2B8:  		EndIf
  2C0:  	EndLoop
  2C8:  EndLoop
  2D0:  Return
  2D8:  End
}

#new:Script $Script_80240D00
{
    0:  Call  DisablePlayerInput    ( .True )
   10:  Call  DisablePlayerPhysics  ( .True )
   20:  Call  SetPlayerActionState  ( .ActionState:Land )
   30:  Call  InterpPlayerYaw   (  135`  0` )
   44:  Call  DisablePartnerAI  ( 00000000 )
   54:  Call  SetNpcFlagBits    ( .Npc:Partner 00000200 .False )
   6C:  Call  SetNpcYaw ( .Npc:Partner  90` )
   80:  Call  UseSettingsFrom   ( .Cam:Default  0`  0`  0` )
   9C:  Call  SetPanTarget      ( .Cam:Default  0`  0`  0` )
   B8:  Call  SetCamPitch       ( .Cam:Default *Fixed[18.5] *Fixed[-3.0] )
   D0:  Call  SetCamSpeed       ( .Cam:Default *Fixed[90.0] )
   E4:  Call  PanToTarget       ( .Cam:Default 00000000 00000001 )
   FC:  Set   *MapVar[A]  FFFFFED4
  10C:  Set   *MapVar[B]  00000000
  11C:  Exec  $Script_80240A20
  128:  Wait  1`
  134:  Call  PlaySound ( 0000017C )
  144:  If  *GB_StoryProgress  <  0000005D % 5D
  154:  	Call  MakeLerp  ( FFFFFED4 00000000 00000078 .Easing:QuadraticOut )
  170:  	Loop
  17C:  		Call  UpdateLerp ( )
  188:  		Set   *MapVar[A]  *Var0
  198:  		Wait  1`
  1A4:  		If  *Var1  ==  00000000
  1B4:  			BreakLoop
  1BC:  		EndIf
  1C4:  	EndLoop
  1CC:  	Wait  100`
  1D8:  	Call  PlaySound ( 0000057C )
  1E8:  	Call  GotoMap   ( $ASCII_80241618 00000003 ) % hos_00
  1FC:  Else
  204:  	Thread
  20C:  		Call  MakeLerp  ( FFFFFED4 00000000 00000078 .Easing:QuadraticOut )
  228:  		Loop
  234:  			Call  UpdateLerp ( )
  240:  			Set   *MapVar[A]  *Var0
  250:  			Wait  1`
  25C:  			If  *Var1  ==  00000000
  26C:  				BreakLoop
  274:  			EndIf
  27C:  		EndLoop
  284:  		Wait  75`
  290:  		Call  PlaySound ( 0000057C )
  2A0:  		Call  PlaySound ( 000020A1 )
  2B0:  		Call  MakeLerp  ( 00000000 0000012C 0000003C .Easing:CubicIn )
  2CC:  		Loop
  2D8:  			Call  UpdateLerp ( )
  2E4:  			Set   *MapVar[A]  *Var0
  2F4:  			Wait  1`
  300:  			If  *Var1  ==  00000000
  310:  				BreakLoop
  318:  			EndIf
  320:  		EndLoop
  328:  		Wait  20`
  334:  	EndThread
  33C:  	Wait  60`
  348:  	Loop  000000D7
  354:  		Wait  1`
  360:  		Call  $Function_80240310 ( )
  36C:  		If  *Var8  ==  00000001
  37C:  			BreakLoop
  384:  		EndIf
  38C:  	EndLoop
  394:  	Call  PlaySound ( 0000057C )
  3A4:  	Call  GotoMap   ( $ASCII_80241610 00000004 ) % kpa_60
  3B8:  EndIf
  3C0:  Wait  100`
  3CC:  Return
  3D4:  End
}

#new:Script $Script_802410DC
{
    0:  Call  DisablePlayerInput    ( .True )
   10:  Call  DisablePlayerPhysics  ( .True )
   20:  Call  SetPlayerActionState  ( .ActionState:Land )
   30:  Call  InterpPlayerYaw       (  135`  0` )
   44:  Call  DisablePartnerAI      ( 00000000 )
   54:  Call  SetNpcFlagBits        ( .Npc:Partner 00000200 .False )
   6C:  Call  SetNpcYaw     ( .Npc:Partner  90` )
   80:  Call  UseSettingsFrom       ( .Cam:Default  0`  0`  0` )
   9C:  Call  SetPanTarget  ( .Cam:Default  0`  0`  0` )
   B8:  Call  SetCamPitch   ( .Cam:Default *Fixed[18.5] *Fixed[-3.0] )
   D0:  Call  SetCamSpeed   ( .Cam:Default *Fixed[90.0] )
   E4:  Call  PanToTarget   ( .Cam:Default 00000000 00000001 )
   FC:  Call  PlaySound     ( 0000017C )
  10C:  Set   *MapVar[A]  00000000
  11C:  Set   *MapVar[B]  00000000
  12C:  Exec  $Script_80240A20
  138:  Wait  100`
  144:  Call  PlaySound     ( 0000057C )
  154:  Call  PlaySound     ( 000020A1 )
  164:  Call  MakeLerp      ( 00000000 0000012C 0000003C .Easing:CubicIn )
  180:  Loop
  18C:  	Call  UpdateLerp ( )
  198:  	Set   *MapVar[A]  *Var0
  1A8:  	Wait  1`
  1B4:  	If  *Var1  ==  00000000
  1C4:  		BreakLoop
  1CC:  	EndIf
  1D4:  EndLoop
  1DC:  Wait  20`
  1E8:  Call  GotoMap   ( $ASCII_80241620 00000003 ) % osr_03
  1FC:  Wait  100`
  208:  Return
  210:  End
}

#new:Script $Script_802412F4
{
    0:  Call  DisablePlayerInput    ( .True )
   10:  Call  DisablePlayerPhysics  ( .True )
   20:  Call  SetPlayerActionState  ( .ActionState:Land )
   30:  Call  InterpPlayerYaw   (  225`  0` )
   44:  Call  DisablePartnerAI  ( 00000000 )
   54:  Call  SetNpcFlagBits    ( .Npc:Partner 00000200 .False )
   6C:  Call  SetNpcYaw ( .Npc:Partner  270` )
   80:  Call  UseSettingsFrom   ( .Cam:Default  0`  0`  0` )
   9C:  Call  SetPanTarget      ( .Cam:Default  0`  0`  0` )
   B8:  Call  SetCamPitch       ( .Cam:Default *Fixed[18.5] *Fixed[-3.0] )
   D0:  Call  SetCamSpeed       ( .Cam:Default *Fixed[90.0] )
   E4:  Call  PanToTarget       ( .Cam:Default 00000000 00000001 )
   FC:  Set   *MapVar[A]  0000012C
  10C:  Set   *MapVar[B]  000000B4
  11C:  Exec  $Script_80240A20
  128:  Wait  2`
  134:  Call  PlaySound ( 0000017C )
  144:  Thread
  14C:  	Call  MakeLerp  ( 0000012C 00000000 00000078 .Easing:QuadraticOut )
  168:  	Loop
  174:  		Call  UpdateLerp ( )
  180:  		Set   *MapVar[A]  *Var0
  190:  		Wait  1`
  19C:  		If  *Var1  ==  00000000
  1AC:  			BreakLoop
  1B4:  		EndIf
  1BC:  	EndLoop
  1C4:  	Wait  75`
  1D0:  	Call  PlaySound ( 0000057C )
  1E0:  	Call  PlaySound ( 000020A1 )
  1F0:  	Call  MakeLerp  ( 00000000 FFFFFED4 0000003C .Easing:CubicIn )
  20C:  	Loop
  218:  		Call  UpdateLerp ( )
  224:  		Set   *MapVar[A]  *Var0
  234:  		Wait  1`
  240:  		If  *Var1  ==  00000000
  250:  			BreakLoop
  258:  		EndIf
  260:  	EndLoop
  268:  	Wait  20`
  274:  EndThread
  27C:  Wait  60`
  288:  Loop  000000D7
  294:  	Wait  1`
  2A0:  	Call  $Function_80240310 ( )
  2AC:  	If  *Var8  ==  00000001
  2BC:  		BreakLoop
  2C4:  	EndIf
  2CC:  EndLoop
  2D4:  Call  PlaySound ( 0000057C )
  2E4:  Call  GotoMap   ( $ASCII_80241628 00000001 ) % hos_05
  2F8:  Wait  100`
  304:  Return
  30C:  End
}

PADDING: 80241608 to 80241610 (00001608 to 00001610)
00000000 00000000

#new:ASCII $ASCII_80241610
{
	"kpa_60"
}

#new:ASCII $ASCII_80241618
{
	"hos_00"
}

#new:ASCII $ASCII_80241620
{
	"osr_03"
}

#new:ASCII $ASCII_80241628
{
	"hos_05"
}

