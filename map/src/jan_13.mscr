% Script File: jan_13.mscr
% Decoded from: 0 to 38A0 (jan_13)


#new:Function $Function_80240000
{
    0:  ADDIU     SP, SP, FFB8
    4:  SW        S1, 14 (SP)
    8:  LA        S1, $???_80240850
   10:  SW        RA, 20 (SP)
   14:  SW        S3, 1C (SP)
   18:  SW        S2, 18 (SP)
   1C:  SW        S0, 10 (SP)
   20:  SDC1      F26, 40 (SP)
   24:  SDC1      F24, 38 (SP)
   28:  SDC1      F22, 30 (SP)
   2C:  SDC1      F20, 28 (SP)
   30:  LHU       V0, 0 (S1)
   34:  LAD       F0, $ConstDouble_80243880
   3C:  MTC1      V0, F12
   40:  NOP
   44:  CVT.S.W   F12, F12
   48:  CVT.D.S   F12, F12
   4C:  MUL.D     F12, F12, F0
   50:  NOP
   54:  JAL       ~Func:sin_rad
   58:  CVT.S.D   F12, F12
   5C:  LHU       V0, 0 (S1)
   60:  LAD       F22, $ConstDouble_80243888
   68:  MTC1      V0, F12
   6C:  NOP
   70:  CVT.S.W   F12, F12
   74:  CVT.D.S   F12, F12
   78:  MUL.D     F12, F12, F22
   7C:  NOP
   80:  LIF       F26, 1.0
   88:  NOP
   8C:  ADD.S     F20, F0, F26
   90:  LAD       F24, $ConstDouble_80243890
   98:  CVT.D.S   F20, F20
   9C:  MUL.D     F20, F20, F24
   A0:  NOP
   A4:  LAD       F0, $ConstDouble_80243898
   AC:  ADD.D     F20, F20, F0
   B0:  JAL       ~Func:sin_rad
   B4:  CVT.S.D   F12, F12
   B8:  ADD.S     F0, F0, F26
   BC:  CVT.D.S   F0, F0
   C0:  MUL.D     F0, F0, F22
   C4:  NOP
   C8:  ADD.D     F20, F20, F0
   CC:  LUI       S3, 1
   D0:  CVT.S.D   F20, F20
   D4:  CVT.D.S   F0, F20
   D8:  MUL.D     F0, F0, F24
   DC:  NOP
   E0:  ORI       S3, S3, 1630
   E4:  LA        S2, 8009A674
   EC:  LA        S0, 800741F0
   F4:  LIF       F3, 1.75
   FC:  MTC1      R0, F2
  100:  LHU       A0, 0 (S0)
  104:  LW        V0, 0 (S2)
  108:  SLL       A0, A0, 6
  10C:  ADD.D     F0, F0, F2
  110:  ADDU      A0, A0, S3
  114:  ADDU      A0, V0, A0
  118:  CVT.S.D   F0, F0
  11C:  MFC1      A1, F0
  120:  MFC1      A2, F20
  124:  JAL       ~Func:guScale
  128:  COPY      A3, A1
  12C:  LUI       A1, DA38
  130:  LA        A0, 8009A66C
  138:  ORI       A1, A1, 1
  13C:  LW        V0, 0 (A0)
  140:  LHU       V1, 0 (S0)
  144:  COPY      A2, V0
  148:  ADDIU     V0, V0, 8
  14C:  SW        V0, 0 (A0)
  150:  ADDIU     V0, V1, 1
  154:  ANDI      V1, V1, FFFF
  158:  SLL       V1, V1, 6
  15C:  ADDU      V1, V1, S3
  160:  SW        A1, 0 (A2)
  164:  SH        V0, 0 (S0)
  168:  LW        V0, 0 (S2)
  16C:  LHU       A0, 0 (S1)
  170:  ADDU      V0, V0, V1
  174:  ADDIU     A0, A0, 1
  178:  SW        V0, 4 (A2)
  17C:  SH        A0, 0 (S1)
  180:  LW        RA, 20 (SP)
  184:  LW        S3, 1C (SP)
  188:  LW        S2, 18 (SP)
  18C:  LW        S1, 14 (SP)
  190:  LW        S0, 10 (SP)
  194:  LDC1      F26, 40 (SP)
  198:  LDC1      F24, 38 (SP)
  19C:  LDC1      F22, 30 (SP)
  1A0:  LDC1      F20, 28 (SP)
  1A4:  JR        RA
  1A8:  ADDIU     SP, SP, 48
}

#new:Function $Function_802401AC
{
    0:  LWC1      F2, 88 (A0)
    4:  CVT.S.W   F2, F2
    8:  LIF       F4, 100.0
   10:  LIF       F6, 1024.0
   18:  DIV.S     F2, F2, F4
   1C:  MUL.S     F2, F2, F6
   20:  NOP
   24:  LWC1      F0, 88 (A0)
   28:  CVT.S.W   F0, F0
   2C:  DIV.S     F0, F0, F4
   30:  MUL.S     F0, F0, F6
   34:  NOP
   38:  LIF       F4, -2.3E8
   44:  NOP
   48:  ADD.S     F2, F2, F4
   4C:  ADD.S     F0, F0, F4
   50:  TRUNC.W.S F8, F2
   54:  SWC1      F8, 8C (A0)
   58:  TRUNC.W.S F8, F0
   5C:  SWC1      F8, 90 (A0)
   60:  JR        RA
   64:  LI        V0, 2
}

#new:Function $Function_80240214
{
    0:  ADDIU     SP, SP, FFD8
    4:  SW        S1, 1C (SP)
    8:  COPY      S1, A0
    C:  SW        RA, 20 (SP)
   10:  SW        S0, 18 (SP)
   14:  LW        S0, C (S1)
   18:  LW        V0, 0 (S0)
   1C:  BEQ       V0, R0, .o8C
   20:  ADDIU     S0, S0, 4
   24:  LW        A1, 0 (S0)
   28:  JAL       ~Func:get_variable
   2C:  ADDIU     S0, S0, 4
   30:  SW        V0, 70 (S1)
   34:  LW        A1, 0 (S0)
   38:  ADDIU     S0, S0, 4
   3C:  JAL       ~Func:get_variable
   40:  COPY      A0, S1
   44:  SW        V0, 74 (S1)
   48:  LW        A1, 0 (S0)
   4C:  JAL       ~Func:get_variable
   50:  COPY      A0, S1
   54:  LI        A0, 4E
   58:  CLEAR     A1
   5C:  LWC1      F0, 70 (S1)
   60:  CVT.S.W   F0, F0
   64:  LWC1      F2, 74 (S1)
   68:  CVT.S.W   F2, F2
   6C:  MFC1      A2, F0
   70:  MFC1      A3, F2
   74:  MTC1      V0, F0
   78:  NOP
   7C:  CVT.S.W   F0, F0
   80:  SW        V0, 78 (S1)
   84:  JAL       ~Func:sfx_adjust_env_sound_pos
   88:  SWC1      F0, 10 (SP)
        .o8C
   8C:  LW        RA, 20 (SP)
   90:  LW        S1, 1C (SP)
   94:  LW        S0, 18 (SP)
   98:  LI        V0, 2
   9C:  JR        RA
   A0:  ADDIU     SP, SP, 28
}

#new:Function $Function_802402B8
{
    0:  ADDIU     SP, SP, FFD0
    4:  SW        S2, 18 (SP)
    8:  COPY      S2, A0
    C:  SW        RA, 1C (SP)
   10:  SW        S1, 14 (SP)
   14:  SW        S0, 10 (SP)
   18:  SDC1      F22, 28 (SP)
   1C:  SDC1      F20, 20 (SP)
   20:  LW        S1, 84 (S2)
   24:  LW        V0, 88 (S2)
   28:  LW        S0, 8C (S2)
   2C:  SLTI      V0, V0, FF9D
   30:  BNEL      V0, R0, .oAC
   34:  ADDIU     S0, S0, 19
   38:  LA        V0, 8010EFC8
   40:  LWC1      F20, 80 (V0)
   44:  LIF       F0, 180.0
   4C:  LIF       F2, 3.141592
   58:  DIV.S     F20, F20, F0
   5C:  MUL.S     F20, F20, F2
   60:  NOP
   64:  LIF       F22, 25.0
   6C:  JAL       ~Func:sin_rad
   70:  MOV.S     F12, F20
   74:  MUL.S     F0, F0, F22
   78:  NOP
   7C:  MOV.S     F12, F20
   80:  TRUNC.W.S F4, F0
   84:  MFC1      V0, F4
   88:  JAL       ~Func:cos_rad
   8C:  SUBU      S1, S1, V0
   90:  NEG.S     F0, F0
   94:  MUL.S     F0, F0, F22
   98:  NOP
   9C:  TRUNC.W.S F4, F0
   A0:  MFC1      V0, F4
   A4:  NOP
   A8:  SUBU      S0, S0, V0
        .oAC
   AC:  SW        S1, 84 (S2)
   B0:  SW        S0, 8C (S2)
   B4:  LW        RA, 1C (SP)
   B8:  LW        S2, 18 (SP)
   BC:  LW        S1, 14 (SP)
   C0:  LW        S0, 10 (SP)
   C4:  LDC1      F22, 28 (SP)
   C8:  LDC1      F20, 20 (SP)
   CC:  LI        V0, 2
   D0:  JR        RA
   D4:  ADDIU     SP, SP, 30
}

#new:Function $Function_80240390
{
    0:  ADDIU     SP, SP, FFD0
    4:  SDC1      F20, 18 (SP)
    8:  MTC1      A1, F20
    C:  SDC1      F22, 20 (SP)
   10:  MTC1      A2, F22
   14:  SW        S0, 10 (SP)
   18:  SDC1      F24, 28 (SP)
   1C:  MTC1      A3, F24
   20:  SW        RA, 14 (SP)
   24:  JAL       ~Func:guMtxIdentF
   28:  COPY      S0, A0
   2C:  MUL.S     F22, F20, F22
   30:  NOP
   34:  MUL.S     F20, F20, F24
   38:  NOP
   3C:  LIF       F0, 1.0
   44:  NOP
   48:  SWC1      F0, 14 (S0)
   4C:  SWC1      F22, 10 (S0)
   50:  SWC1      F20, 18 (S0)
   54:  LW        RA, 14 (SP)
   58:  LW        S0, 10 (SP)
   5C:  LDC1      F24, 28 (SP)
   60:  LDC1      F22, 20 (SP)
   64:  LDC1      F20, 18 (SP)
   68:  JR        RA
   6C:  ADDIU     SP, SP, 30
}

#new:Function $Function_80240400
{
    0:  ADDIU     SP, SP, FF78
    4:  SW        S1, 54 (SP)
    8:  COPY      S1, A0
    C:  SW        RA, 5C (SP)
   10:  SW        S2, 58 (SP)
   14:  SW        S0, 50 (SP)
   18:  SDC1      F28, 80 (SP)
   1C:  SDC1      F26, 78 (SP)
   20:  SDC1      F24, 70 (SP)
   24:  SDC1      F22, 68 (SP)
   28:  SDC1      F20, 60 (SP)
   2C:  LW        S0, C (S1)
   30:  LW        A1, 0 (S0)
   34:  JAL       ~Func:get_variable
   38:  ADDIU     S0, S0, 4
   3C:  JAL       ~Func:get_model_list_index_from_tree_index
   40:  COPY      A0, V0
   44:  LW        A1, 0 (S0)
   48:  ADDIU     S0, S0, 4
   4C:  COPY      A0, S1
   50:  JAL       ~Func:get_float_variable
   54:  COPY      S2, V0
   58:  LW        A1, 0 (S0)
   5C:  ADDIU     S0, S0, 4
   60:  COPY      A0, S1
   64:  JAL       ~Func:get_float_variable
   68:  MOV.S     F28, F0
   6C:  LW        A1, 0 (S0)
   70:  ADDIU     S0, S0, 4
   74:  COPY      A0, S1
   78:  JAL       ~Func:get_float_variable
   7C:  MOV.S     F26, F0
   80:  COPY      A0, S1
   84:  LW        A1, 0 (S0)
   88:  JAL       ~Func:get_float_variable
   8C:  MOV.S     F22, F0
   90:  COPY      A0, S2
   94:  JAL       ~Func:get_model_from_list_index
   98:  MOV.S     F24, F0
   9C:  COPY      S1, V0
   A0:  LHU       V0, 0 (S1)
   A4:  ANDI      V0, V0, 400
   A8:  BNE       V0, R0, .o124
   AC:  ADDIU     S0, S1, 58
   B0:  MTC1      R0, F20
   B4:  MFC1      A2, F22
   B8:  MFC1      A1, F20
   BC:  MFC1      A3, F20
   C0:  JAL       ~Func:guTranslateF
   C4:  COPY      A0, S0
   C8:  MFC1      A1, F28
   CC:  MFC1      A2, F26
   D0:  MFC1      A3, F24
   D4:  JAL       $Function_80240390
   D8:  ADDIU     A0, SP, 10
   DC:  ADDIU     A0, SP, 10
   E0:  COPY      A1, S0
   E4:  JAL       ~Func:guMtxCatF
   E8:  COPY      A2, S0
   EC:  ADDIU     A0, SP, 10
   F0:  NEG.S     F22, F22
   F4:  MFC1      A1, F20
   F8:  MFC1      A2, F22
   FC:  JAL       ~Func:guTranslateF
  100:  COPY      A3, A1
  104:  ADDIU     A0, SP, 10
  108:  COPY      A1, S0
  10C:  JAL       ~Func:guMtxCatF
  110:  COPY      A2, A1
  114:  LHU       V0, 0 (S1)
  118:  ORI       V0, V0, 1400
  11C:  BEQ       R0, R0, .o19C
  120:  SH        V0, 0 (S1)
        .o124
  124:  MTC1      R0, F20
  128:  MFC1      A2, F22
  12C:  MFC1      A1, F20
  130:  MFC1      A3, F20
  134:  JAL       ~Func:guTranslateF
  138:  ADDIU     A0, SP, 10
  13C:  ADDIU     A0, SP, 10
  140:  ADDIU     S0, S1, 58
  144:  COPY      A1, S0
  148:  JAL       ~Func:guMtxCatF
  14C:  COPY      A2, S0
  150:  MFC1      A1, F28
  154:  MFC1      A2, F26
  158:  MFC1      A3, F24
  15C:  JAL       $Function_80240390
  160:  ADDIU     A0, SP, 10
  164:  ADDIU     A0, SP, 10
  168:  COPY      A1, S0
  16C:  JAL       ~Func:guMtxCatF
  170:  COPY      A2, S0
  174:  ADDIU     A0, SP, 10
  178:  NEG.S     F22, F22
  17C:  MFC1      A1, F20
  180:  MFC1      A2, F22
  184:  JAL       ~Func:guTranslateF
  188:  COPY      A3, A1
  18C:  ADDIU     A0, SP, 10
  190:  COPY      A1, S0
  194:  JAL       ~Func:guMtxCatF
  198:  COPY      A2, A1
        .o19C
  19C:  LW        RA, 5C (SP)
  1A0:  LW        S2, 58 (SP)
  1A4:  LW        S1, 54 (SP)
  1A8:  LW        S0, 50 (SP)
  1AC:  LDC1      F28, 80 (SP)
  1B0:  LDC1      F26, 78 (SP)
  1B4:  LDC1      F24, 70 (SP)
  1B8:  LDC1      F22, 68 (SP)
  1BC:  LDC1      F20, 60 (SP)
  1C0:  LI        V0, 2
  1C4:  JR        RA
  1C8:  ADDIU     SP, SP, 88
}

PADDING: 802405CC to 802405D0 (000005CC to 000005D0)
00000000

#new:EntryList $EntryList
{
	~Vec4f:Entry0 % -300.0    0.0  120.0    0.0
	~Vec4f:Entry1 %   55.0    0.0 -120.0  180.0
}

#new:Header $Header
{
	[MainScript]  $Script_Main_EnterWalk
	[EntryList]   $EntryList
	[EntryCount]  00000002
	[Background]  80200000
	[MapTattle]   001900FB
}

#new:Script $Script_ExitWalk_80240630
{
    0:  SetGroup  0000001B
    C:  Call  UseExitHeading    ( 0000003C ~Entry:Entry1 )
   20:  Exec  ExitWalk
   2C:  Call  GotoMap   ( $ASCII_80243870 00000000 ) % jan_14
   40:  Wait  100`
   4C:  Return
   54:  End
}

#new:Script $Script_ExitWalk_8024068C
{
    0:  SetGroup  0000001B
    C:  Call  UseExitHeading    ( 0000003C ~Entry:Entry0 )
   20:  Exec  ExitWalk
   2C:  Call  GotoMap   ( $ASCII_80243878 00000001 ) % jan_12
   40:  Wait  100`
   4C:  Return
   54:  End
}

#new:Script $Script_802406E8
{
    0:  Bind  $Script_ExitWalk_8024068C .Trigger:FloorAbove ~Collider:deilis 00000001 00000000
   1C:  Bind  $Script_ExitWalk_80240630 .Trigger:FloorAbove ~Collider:deilin 00000001 00000000
   38:  Return
   40:  End
}

#new:Script_Main $Script_Main_EnterWalk
{
    0:  Set   *GB_WorldLocation  .Location:JadeJungle
   10:  Call  SetSpriteShading  ( .Shading:None )
   20:  Call  SetCamPerspective ( .Cam:Default 00000003  25`  16`  4096` )
   40:  Call  SetCamBGColor     ( .Cam:Default  0`  0`  0` )
   5C:  Call  SetCamEnabled     ( .Cam:Default .True )
   70:  Exec  $Script_MakeEntities
   7C:  Exec  $Script_80242438
   88:  Exec  $Script_80243744
   94:  Call  ModifyColliderFlags   ( 00000000 ~Collider:deilits 7FFFFE00 )
   AC:  Call  ModifyColliderFlags   ( 00000000 ~Collider:deilitn 7FFFFE00 )
   C4:  Set   *Var0  $Script_802406E8
   D4:  Exec  EnterWalk
   E0:  Call  SetMusicTrack     ( 00000000 .Song:DeepJungle 00000000 00000008 )
   FC:  Call  PlayAmbientSounds ( .AmbientSounds:Jungle )
  10C:  Return
  114:  End
}

PADDING: 8024084C to 80240850 (0000084C to 00000850)
00000000

#new:Unknown $???_80240850
{
	00000000
}

#new:Script $Script_80240854
{
    0:  Set   *VarA  *Var0
   10:  Set   *VarB  *Var1
   20:  Set   *VarD  *Var2
   30:  Set   *Var0  00000000
   40:  Set   *Var1  00000000
   50:  Loop
   5C:  	If  *VarB  ==  *MapVar[0]
   6C:  		Add   *Var0  0000000A
   7C:  	Else
   84:  		Add   *Var0  FFFFFFF6
   94:  	EndIf
   9C:  	If  *Var0  <  FFFFFFF6
   AC:  		Set   *Var0  FFFFFFF6
   BC:  	EndIf
   C4:  	If  *Var0  >  0000000A
   D4:  		Set   *Var0  0000000A
   E4:  	EndIf
   EC:  	Add   *Var1  *Var0
   FC:  	If  *Var1  <  00000000
  10C:  		Set   *Var1  00000000
  11C:  	EndIf
  124:  	If  *Var1  >  00000064
  134:  		Set   *Var1  00000064
  144:  	EndIf
  14C:  	Call  $Function_802401AC ( )
  158:  	If  *Var1  ==  00000000
  168:  		If  *VarD  !=  00000000
  178:  		EndIf
  180:  		Call  EnableModel   ( *VarA .False )
  194:  	Else
  19C:  		If  *VarD  !=  00000000
  1AC:  		EndIf
  1B4:  		Call  EnableModel   ( *VarA .True )
  1C8:  		Call  ScaleModel    ( *VarA *Var3 *Var2 *Var3 )
  1E4:  	EndIf
  1EC:  	Wait  1`
  1F8:  EndLoop
  200:  Return
  208:  End
}

#new:Script $Script_80240A64
{
    0:  Call  $Function_802401AC ( )
    C:  If  *Var3  <  *Fixed[1.0]
   1C:  	SetF  *Var4  *Var3
   2C:  Else
   34:  	SetF  *Var4  *Fixed[1.0]
   44:  EndIf
   4C:  Call  ScaleModel    ( *VarA *Var4 *Var2 *Var3 )
   68:  Return
   70:  End
}

#new:Script $Script_80240ADC
{
    0:  Set   *VarA  *Var0
   10:  Set   *VarB  *Var1
   20:  Set   *VarD  *Var2
   30:  Set   *Var0  00000000
   40:  Set   *Var1  00000000
   50:  If  *GF_JAN13_SolvedBlockPuzzle  ==  .True
   60:  	Goto  A
   6C:  EndIf
   74:  Loop
   80:  	If  *MapVar[0]  ==  00000005
   90:  		If  *AreaByte[2]  ==  00000001
   A0:  			Add   *Var0  0000000A
   B0:  		Else
   B8:  			Add   *Var0  FFFFFFF6
   C8:  		EndIf
   D0:  	Else
   D8:  		Add   *Var0  FFFFFFF6
   E8:  	EndIf
   F0:  	If  *Var0  <  FFFFFFF6
  100:  		Set   *Var0  FFFFFFF6
  110:  	EndIf
  118:  	If  *Var0  >  0000000A
  128:  		Set   *Var0  0000000A
  138:  	EndIf
  140:  	Add   *Var1  *Var0
  150:  	If  *Var1  <  00000032
  160:  		Set   *Var1  00000032
  170:  	EndIf
  178:  	If  *Var1  >  00000046
  188:  		Set   *Var1  00000046
  198:  	EndIf
  1A0:  	If  *Var1  ==  00000000
  1B0:  		Call  EnableModel   ( *VarA .False )
  1C4:  		Wait  1`
  1D0:  	Else
  1D8:  		Call  EnableModel   ( *VarA .True )
  1EC:  		ExecWait  $Script_80240A64
  1F8:  	EndIf
  200:  	If  *AreaByte[2]  ==  00000002
  210:  		BreakLoop
  218:  	EndIf
  220:  EndLoop
  228:  Set   *Var0  0000000A
  238:  Loop
  244:  	If  *MapVar[0]  ==  00000005
  254:  		Add   *Var1  *Var0
  264:  		If  *Var1  >  0000012C
  274:  			Set   *Var1  0000012C
  284:  		EndIf
  28C:  		ExecWait  $Script_80240A64
  298:  	Else
  2A0:  		Wait  1`
  2AC:  	EndIf
  2B4:  	If  *GF_JAN13_SolvedBlockPuzzle  !=  .False
  2C4:  		BreakLoop
  2CC:  	EndIf
  2D4:  EndLoop
  2DC:  Set   *Var0  FFFFFFF9
  2EC:  Loop  0000001C
  2F8:  	Add   *Var1  *Var0
  308:  	ExecWait  $Script_80240A64
  314:  EndLoop
  31C:  Label  A
  328:  If  *MapVar[0]  ==  00000005
  338:  	Add   *Var0  0000000A
  348:  Else
  350:  	Add   *Var0  FFFFFFF6
  360:  EndIf
  368:  If  *Var0  <  FFFFFFF6
  378:  	Set   *Var0  FFFFFFF6
  388:  EndIf
  390:  If  *Var0  >  0000000A
  3A0:  	Set   *Var0  0000000A
  3B0:  EndIf
  3B8:  Add   *Var1  *Var0
  3C8:  If  *Var1  <  00000000
  3D8:  	Set   *Var1  00000000
  3E8:  EndIf
  3F0:  If  *Var1  >  00000064
  400:  	Set   *Var1  00000064
  410:  EndIf
  418:  If  *Var1  ==  00000000
  428:  	Call  EnableModel   ( *VarA .False )
  43C:  	Wait  1`
  448:  Else
  450:  	Call  EnableModel   ( *VarA .True )
  464:  	ExecWait  $Script_80240A64
  470:  EndIf
  478:  Goto  A
  484:  Return
  48C:  End
}

#new:IntTable $IntTable_80240F70
{
	00000138 00000000 0000000C 000000ED 00000000 FFFFFFDA 00000089 00000000
	0000003E FFFFFEE0 00000000 FFFFFFDA FFFFFFDA 00000000 0000000C 00000025
	00000000 FFFFFF76
}

#new:Script $Script_80240FB8
{
    0:  If  *AreaByte[3]  !=  *MapVar[0]
   10:  	Set   *AreaByte[3]  *MapVar[0]
   20:  	Set   *MapFlag[0A]  .False
   30:  	Call  StopSound ( 8000001C )
   40:  	Call  StopSound ( 8000001D )
   50:  	If  *MapVar[0]  ==  00000005
   60:  		If  *GF_JAN13_SolvedBlockPuzzle  ==  .False
   70:  			Return
   78:  		EndIf
   80:  	Else
   88:  		If  *MapVar[0]  ==  00000006
   98:  			Return
   A0:  		EndIf
   A8:  	EndIf
   B0:  	Call  PlaySound ( 8000001C )
   C0:  	Set   *MapFlag[0A]  .True
   D0:  	Set   *Var0  *MapVar[0]
   E0:  	Add   *Var0  00000001
   F0:  	UseIntBuffer  $IntTable_80240F70
   FC:  	Loop  *Var0
  108:  		Get3Int  *Var1 *Var2 *Var3
  11C:  	EndLoop
  124:  	Call  $Function_80240214    ( *MapFlag[0A] *Var1 *Var2 *Var3 )
  140:  EndIf
  148:  Return
  150:  End
}

#new:Script $Script_80241110
{
    0:  Call  PlaySoundAtCollider   ( ~Collider:o33 00000191 00000000 )
   18:  Call  ShakeCam  ( .Cam:Default 00000000  5` *Fixed[1.5] )
   34:  Return
   3C:  End
}

#new:Script $Script_80241154
{
    0:  Set   *Flag[00]  .False
   10:  Set   *AreaByte[2]  00000000
   20:  Set   *AreaByte[3]  FFFFFFFF
   30:  Exec  $Script_80240FB8
   3C:  Label  0
   48:  If  *GF_JAN13_SolvedBlockPuzzle  ==  .True
   58:  	If  *Flag[00]  ==  .False
   68:  		Call  EnableModel   ( ~Model:o33 .False )
   7C:  		Call  ModifyColliderFlags   ( 00000000 ~Collider:o33 7FFFFE00 )
   94:  		Call  SetPushBlock  ( 00000000  15`  0` 00000000 )
   B0:  		Call  SetPushBlock  ( 00000000  16`  0` 00000000 )
   CC:  		Call  SetPushBlock  ( 00000000  17`  0` 00000000 )
   E8:  		Call  SetPushBlock  ( 00000000  18`  0` 00000000 )
  104:  		Call  SetPushBlock  ( 00000000  19`  0` 00000000 )
  120:  		Call  SetPushBlock  ( 00000000  15`  1` 00000000 )
  13C:  		Call  SetPushBlock  ( 00000000  16`  1` 00000000 )
  158:  		Call  SetPushBlock  ( 00000000  17`  1` 00000000 )
  174:  		Call  SetPushBlock  ( 00000000  18`  1` 00000000 )
  190:  		Call  SetPushBlock  ( 00000000  19`  1` 00000000 )
  1AC:  		Call  SetPushBlock  ( 00000000  15`  2` 00000000 )
  1C8:  		Call  SetPushBlock  ( 00000000  16`  2` 00000000 )
  1E4:  		Call  SetPushBlock  ( 00000000  17`  2` 00000000 )
  200:  		Call  SetPushBlock  ( 00000000  18`  2` 00000000 )
  21C:  		Call  SetPushBlock  ( 00000000  19`  2` 00000000 )
  238:  		Set   *Flag[00]  .True
  248:  	EndIf
  250:  EndIf
  258:  Call  GetPushBlock  ( 00000000  28`  6` *Var0 )
  274:  If  *Var0  ==  00000000
  284:  	Set   *MapVar[0]  00000000
  294:  	Goto  1
  2A0:  EndIf
  2A8:  Call  GetPushBlock  ( 00000000  25`  4` *Var0 )
  2C4:  If  *Var0  ==  00000000
  2D4:  	Set   *MapVar[0]  00000001
  2E4:  	Goto  1
  2F0:  EndIf
  2F8:  Call  GetPushBlock  ( 00000000  21`  8` *Var0 )
  314:  If  *Var0  ==  00000000
  324:  	Set   *MapVar[0]  00000002
  334:  	Goto  1
  340:  EndIf
  348:  Call  GetPushBlock  ( 00000000  4`  4` *Var0 )
  364:  If  *Var0  ==  00000000
  374:  	Set   *MapVar[0]  00000003
  384:  	Goto  1
  390:  EndIf
  398:  Call  GetPushBlock  ( 00000000  14`  6` *Var0 )
  3B4:  If  *Var0  ==  00000000
  3C4:  	Set   *MapVar[0]  00000004
  3D4:  	Goto  1
  3E0:  EndIf
  3E8:  If  *GF_JAN13_SolvedBlockPuzzle  ==  .False
  3F8:  	Call  DisablePlayerInput    ( .True )
  408:  	Call  SetPushBlock  ( 00000000  15`  0` 00000000 )
  424:  	Call  SetPushBlock  ( 00000000  16`  0` 00000000 )
  440:  	Call  SetPushBlock  ( 00000000  17`  0` 00000000 )
  45C:  	Call  SetPushBlock  ( 00000000  18`  0` 00000000 )
  478:  	Call  SetPushBlock  ( 00000000  19`  0` 00000000 )
  494:  	Call  SetPushBlock  ( 00000000  15`  1` 00000000 )
  4B0:  	Call  SetPushBlock  ( 00000000  16`  1` 00000000 )
  4CC:  	Call  SetPushBlock  ( 00000000  17`  1` 00000000 )
  4E8:  	Call  SetPushBlock  ( 00000000  18`  1` 00000000 )
  504:  	Call  SetPushBlock  ( 00000000  19`  1` 00000000 )
  520:  	Call  SetPushBlock  ( 00000000  15`  2` 00000000 )
  53C:  	Call  SetPushBlock  ( 00000000  16`  2` 00000000 )
  558:  	Call  SetPushBlock  ( 00000000  17`  2` 00000000 )
  574:  	Call  SetPushBlock  ( 00000000  18`  2` 00000000 )
  590:  	Call  SetPushBlock  ( 00000000  19`  2` 00000000 )
  5AC:  	Set   *MapVar[0]  00000005
  5BC:  	Wait  30`
  5C8:  	Loop  00000002
  5D4:  		Exec  $Script_80241110
  5E0:  		Call  RotateModel   ( ~Model:o33 00000003 00000000 *Fixed[0.2] 00000001 )
  600:  		Wait  8`
  60C:  		Call  RotateModel   ( ~Model:o33 FFFFFFFD 00000000 *Fixed[0.2] 00000001 )
  62C:  		Wait  8`
  638:  	EndLoop
  640:  	Thread
  648:  		Call  PlaySoundAtPlayer ( 00000262 00000000 )
  65C:  		Call  ShowEmote ( 00000000 .Emote:Exclamation  0`  20` .False  0`  0`  0`  0` )
  68C:  		Call  GetModelCenter    ( ~Model:o33 )
  69C:  		Call  802D2884  ( *Var0 *Var2 00000004 )
  6B4:  		Call  GetPlayerPos      ( *Var3 *Var1 *Var2 )
  6CC:  		Set   *Var4  *Var0
  6DC:  		Set   *Var5  *Var0
  6EC:  		Sub   *Var4  00000078
  6FC:  		Add   *Var5  00000078
  70C:  		Switch  *Var3
  718:  			Case  *Var4  to  *Var5
  728:  				Add   *Var0  *Var3
  738:  				Div   *Var0  00000002
  748:  		EndSwitch
  750:  		Call  UseSettingsFrom   ( .Cam:Default *Var0 *Var1 *Var2 )
  76C:  		Call  SetPanTarget      ( .Cam:Default *Var0 *Var1 *Var2 )
  788:  		Call  SetCamDistance    ( .Cam:Default  400` )
  79C:  		Call  SetCamSpeed       ( .Cam:Default *Fixed[3.0] )
  7B0:  		Call  PanToTarget       ( .Cam:Default 00000000 00000001 )
  7C8:  	EndThread
  7D0:  	Loop  00000003
  7DC:  		Exec  $Script_80241110
  7E8:  		Call  RotateModel   ( ~Model:o33 00000005 00000000 *Fixed[0.2] 00000001 )
  808:  		Wait  5`
  814:  		Call  RotateModel   ( ~Model:o33 FFFFFFFB 00000000 *Fixed[0.2] 00000001 )
  834:  		Wait  5`
  840:  	EndLoop
  848:  	Loop  00000007
  854:  		Exec  $Script_80241110
  860:  		Call  RotateModel   ( ~Model:o33 00000007 00000000 *Fixed[0.2] 00000001 )
  880:  		Wait  3`
  88C:  		Call  RotateModel   ( ~Model:o33 FFFFFFF9 00000000 *Fixed[0.2] 00000001 )
  8AC:  		Wait  3`
  8B8:  	EndLoop
  8C0:  	Loop  00000008
  8CC:  		Call  RandInt   ( 00000002 *Var0 )
  8E0:  		Switch  *Var0
  8EC:  			Case  ==  00000000
  8F8:  				Call  PlayEffect    ( ~FX:Steam:SmallOutward 00000008 00000000 FFFFFFAE 00000000 00000000 00000000 00000000 00000000 00000000 00000000 00000000 00000000 )
  93C:  			Case  ==  00000001
  948:  				Call  PlayEffect    ( ~FX:Steam:SmallOutward 00000026 00000000 FFFFFFC2 00000000 00000000 00000000 00000000 00000000 00000000 00000000 00000000 00000000 )
  98C:  			Case  ==  00000002
  998:  				Call  PlayEffect    ( ~FX:Steam:SmallOutward 0000004E 00000000 FFFFFFB3 00000000 00000000 00000000 00000000 00000000 00000000 00000000 00000000 00000000 )
  9DC:  		EndSwitch
  9E4:  		Exec  $Script_80241110
  9F0:  		Call  RotateModel   ( ~Model:o33 0000000A 00000000 *Fixed[0.2] 00000001 )
  A10:  		Wait  3`
  A1C:  		Call  RotateModel   ( ~Model:o33 FFFFFFF6 00000000 *Fixed[0.2] 00000001 )
  A3C:  		Wait  3`
  A48:  	EndLoop
  A50:  	Thread
  A58:  		Call  ShakeCam  ( .Cam:Default 00000000  15` *Fixed[0.4] )
  A74:  	EndThread
  A7C:  	Call  PlaySoundAt   ( 8000001D 00000000 00000025 00000000 FFFFFF76 )
  A9C:  	Set   *AreaByte[2]  00000001
  AAC:  	Thread
  AB4:  		Loop  000000C8
  AC0:  			Call  RotateModel   ( ~Model:o33 0000000A 00000000 *Fixed[0.2] 00000001 )
  AE0:  			Wait  3`
  AEC:  			Call  RotateModel   ( ~Model:o33 FFFFFFF6 00000000 *Fixed[0.2] 00000001 )
  B0C:  			Wait  3`
  B18:  		EndLoop
  B20:  	EndThread
  B28:  	Set   *Var0  00000000
  B38:  	Loop  00000012
  B44:  		Add   *Var0  00000003
  B54:  		Call  TranslateModel    ( ~Model:o33 00000000 *Var0 00000000 )
  B70:  		Wait  1`
  B7C:  	EndLoop
  B84:  	Loop  0000003C
  B90:  		Call  TranslateModel    ( ~Model:o33 00000000 *Var0 00000000 )
  BAC:  		Wait  1`
  BB8:  	EndLoop
  BC0:  	Set   *AreaByte[2]  00000002
  BD0:  	Loop  00000019
  BDC:  		Add   *Var0  00000008
  BEC:  		Call  TranslateModel    ( ~Model:o33 00000000 *Var0 00000000 )
  C08:  		Wait  1`
  C14:  	EndLoop
  C1C:  	Set   *Var0  000000C8
  C2C:  	Set   *Var1  00000000
  C3C:  	Set   *Var2  00000000
  C4C:  	Loop  0000003C
  C58:  		Add   *Var1  00000001
  C68:  		Sub   *Var0  *Var1
  C78:  		Add   *Var2  0000000A
  C88:  		Add   *Var2  FFFFFFF6
  C98:  		Call  TranslateModel    ( ~Model:o33 FFFFFF38 *Var0 FFFFFE0C )
  CB4:  		Call  RotateModel       ( ~Model:o33 *Var2 FFFFFFFF *Fixed[0.1] *Fixed[0.1] )
  CD4:  		Wait  1`
  CE0:  	EndLoop
  CE8:  	Call  EnableModel   ( ~Model:o33 .False )
  CFC:  	Call  ModifyColliderFlags   ( 00000000 ~Collider:o33 7FFFFE00 )
  D14:  	Set   *GF_JAN13_SolvedBlockPuzzle  .True
  D24:  	Set   *Flag[00]  .True
  D34:  	Call  ResetCam  ( .Cam:Default *Fixed[5.0] )
  D48:  	Call  DisablePlayerInput    ( .False )
  D58:  Else
  D60:  	Call  GetPushBlock  ( 00000000  17`  0` *Var0 )
  D7C:  	If  *Var0  ==  00000000
  D8C:  		Set   *MapVar[0]  00000005
  D9C:  		Goto  1
  DA8:  	EndIf
  DB0:  EndIf
  DB8:  Set   *MapVar[0]  00000006
  DC8:  Label  1
  DD4:  Exec  $Script_80240FB8
  DE0:  Wait  1`
  DEC:  Goto  0
  DF8:  Return
  E00:  End
}

#new:Script $Script_80241F5C
{
    0:  Loop
    C:  	Call  GetPlayerPos  ( *Var0 *Var1 *Var2 )
   24:  	Call  GetGridIndexFromPos   ( 00000000 *Var0 *Var1 *Var2 *Var3 *Var4 )
   48:  	Set   *Var5  00000000
   58:  	If  *MapVar[0]  ==  00000000
   68:  		If  *Var3  ==  0000001C
   78:  			If  *Var4  ==  00000006
   88:  				Set   *Var5  00000001
   98:  			EndIf
   A0:  		EndIf
   A8:  	EndIf
   B0:  	If  *MapVar[0]  ==  00000001
   C0:  		If  *Var3  ==  00000019
   D0:  			If  *Var4  ==  00000004
   E0:  				Set   *Var5  00000001
   F0:  			EndIf
   F8:  		EndIf
  100:  	EndIf
  108:  	If  *MapVar[0]  ==  00000002
  118:  		If  *Var3  ==  00000015
  128:  			If  *Var4  ==  00000008
  138:  				Set   *Var5  00000001
  148:  			EndIf
  150:  		EndIf
  158:  	EndIf
  160:  	If  *MapVar[0]  ==  00000003
  170:  		If  *Var3  ==  00000004
  180:  			If  *Var4  ==  00000004
  190:  				Set   *Var5  00000001
  1A0:  			EndIf
  1A8:  		EndIf
  1B0:  	EndIf
  1B8:  	If  *MapVar[0]  ==  00000004
  1C8:  		If  *Var3  ==  0000000E
  1D8:  			If  *Var4  ==  00000006
  1E8:  				Set   *Var5  00000001
  1F8:  			EndIf
  200:  		EndIf
  208:  	EndIf
  210:  	If  *MapVar[0]  ==  00000005
  220:  		If  *Var3  ==  00000011
  230:  			If  *Var4  ==  00000000
  240:  				Set   *Var5  00000001
  250:  			EndIf
  258:  		EndIf
  260:  	EndIf
  268:  	If  *MapVar[0]  ==  00000005
  278:  		If  *Var3  ==  00000010
  288:  			If  *Var4  ==  00000000
  298:  				Set   *Var5  00000001
  2A8:  			EndIf
  2B0:  		EndIf
  2B8:  	EndIf
  2C0:  	If  *MapVar[0]  ==  00000005
  2D0:  		If  *Var3  ==  00000012
  2E0:  			If  *Var4  ==  00000000
  2F0:  				Set   *Var5  00000001
  300:  			EndIf
  308:  		EndIf
  310:  	EndIf
  318:  	If  *MapVar[0]  ==  00000005
  328:  		If  *Var3  ==  00000013
  338:  			If  *Var4  ==  00000000
  348:  				Set   *Var5  00000001
  358:  			EndIf
  360:  		EndIf
  368:  	EndIf
  370:  	If  *Var5  ==  00000001
  380:  		Call  DisablePlayerInput    ( .True )
  390:  		Call  $Function_802402B8 ( )
  39C:  		Call  802D2B6C ( )
  3A8:  		Loop  0000000A
  3B4:  			Call  GetPlayerPos  ( *Var3 *Var4 *Var5 )
  3CC:  			If  *Var4  <  00000028
  3DC:  				AddF  *Var4  00000006
  3EC:  			EndIf
  3F4:  			MulF  *Var3  0000000A
  404:  			MulF  *Var5  0000000A
  414:  			AddF  *Var3  *Var0
  424:  			AddF  *Var5  *Var2
  434:  			DivF  *Var3  0000000B
  444:  			DivF  *Var5  0000000B
  454:  			Call  SetPlayerPos  ( *Var3 *Var4 *Var5 )
  46C:  			Call  SetPlayerAnimation    ( 0001002E )
  47C:  			Wait  1`
  488:  		EndLoop
  490:  		Call  SetPlayerAnimation    ( 00010002 )
  4A0:  		Call  DisablePlayerInput    ( .False )
  4B0:  	EndIf
  4B8:  	Wait  1`
  4C4:  EndLoop
  4CC:  Return
  4D4:  End
}

#new:Script $Script_80242438
{
    0:  Call  CreatePushBlockGrid   ( 00000000 ~PushGrid:Grid_80242438 00000000 )
   28:  Call  SetPushBlock  ( 00000000  7`  5` 00000001 )
   44:  Call  SetPushBlock  ( 00000000  13`  9` 00000001 )
   60:  Call  SetPushBlock  ( 00000000  16`  5` 00000001 )
   7C:  Call  SetPushBlock  ( 00000000  21`  2` 00000001 )
   98:  Call  SetPushBlock  ( 00000000  22`  4` 00000001 )
   B4:  Call  SetPushBlock  ( 00000000  26`  6` 00000001 )
   D0:  Call  SetPushBlock  ( 00000000  27`  7` 00000001 )
   EC:  Call  SetPushBlock  ( 00000000  15`  0` 00000002 )
  108:  Call  SetPushBlock  ( 00000000  16`  0` 00000002 )
  124:  Call  SetPushBlock  ( 00000000  17`  0` 00000002 )
  140:  Call  SetPushBlock  ( 00000000  18`  0` 00000002 )
  15C:  Call  SetPushBlock  ( 00000000  19`  0` 00000002 )
  178:  Call  SetPushBlock  ( 00000000  15`  1` 00000002 )
  194:  Call  SetPushBlock  ( 00000000  16`  1` 00000002 )
  1B0:  Call  SetPushBlock  ( 00000000  17`  1` 00000002 )
  1CC:  Call  SetPushBlock  ( 00000000  18`  1` 00000002 )
  1E8:  Call  SetPushBlock  ( 00000000  19`  1` 00000002 )
  204:  Call  SetPushBlock  ( 00000000  15`  2` 00000002 )
  220:  Call  SetPushBlock  ( 00000000  16`  2` 00000002 )
  23C:  Call  SetPushBlock  ( 00000000  17`  2` 00000002 )
  258:  Call  SetPushBlock  ( 00000000  18`  2` 00000002 )
  274:  Call  SetPushBlock  ( 00000000  19`  2` 00000002 )
  290:  Set   *Var0  00000000
  2A0:  Loop  00000020
  2AC:  	Call  SetPushBlock  ( 00000000 *Var0  0` 00000002 )
  2C8:  	Add   *Var0  00000001
  2D8:  EndLoop
  2E0:  Set   *Var0  00000000
  2F0:  Loop  0000000F
  2FC:  	Call  SetPushBlock  ( 00000000 *Var0  1` 00000002 )
  318:  	Add   *Var0  00000001
  328:  EndLoop
  330:  Set   *Var0  00000014
  340:  Loop  0000000C
  34C:  	Call  SetPushBlock  ( 00000000 *Var0  1` 00000002 )
  368:  	Add   *Var0  00000001
  378:  EndLoop
  380:  Set   *Var0  00000000
  390:  Loop  00000003
  39C:  	Call  SetPushBlock  ( 00000000 *Var0  2` 00000002 )
  3B8:  	Add   *Var0  00000001
  3C8:  EndLoop
  3D0:  Set   *Var0  0000000A
  3E0:  Loop  00000004
  3EC:  	Call  SetPushBlock  ( 00000000 *Var0  2` 00000002 )
  408:  	Add   *Var0  00000001
  418:  EndLoop
  420:  Set   *Var0  0000001A
  430:  Loop  00000006
  43C:  	Call  SetPushBlock  ( 00000000 *Var0  2` 00000002 )
  458:  	Add   *Var0  00000001
  468:  EndLoop
  470:  Set   *Var0  00000000
  480:  Loop  00000002
  48C:  	Call  SetPushBlock  ( 00000000 *Var0  3` 00000002 )
  4A8:  	Add   *Var0  00000001
  4B8:  EndLoop
  4C0:  Set   *Var0  0000000A
  4D0:  Loop  00000004
  4DC:  	Call  SetPushBlock  ( 00000000 *Var0  3` 00000002 )
  4F8:  	Add   *Var0  00000001
  508:  EndLoop
  510:  Exec  $Script_80241154
  51C:  Set   *Var0  0000002E
  52C:  Set   *Var1  00000000
  53C:  Set   *Var2  00000013
  54C:  Call  ModifyColliderFlags   ( 00000000 *Var2 7FFFFE00 )
  564:  Exec  $Script_80240854
  570:  Set   *Var0  00000030
  580:  Set   *Var1  00000001
  590:  Set   *Var2  00000014
  5A0:  Call  ModifyColliderFlags   ( 00000000 *Var2 7FFFFE00 )
  5B8:  Exec  $Script_80240854
  5C4:  Set   *Var0  00000032
  5D4:  Set   *Var1  00000002
  5E4:  Set   *Var2  00000015
  5F4:  Call  ModifyColliderFlags   ( 00000000 *Var2 7FFFFE00 )
  60C:  Exec  $Script_80240854
  618:  Set   *Var0  00000034
  628:  Set   *Var1  00000003
  638:  Set   *Var2  00000016
  648:  Call  ModifyColliderFlags   ( 00000000 *Var2 7FFFFE00 )
  660:  Exec  $Script_80240854
  66C:  Set   *Var0  00000036
  67C:  Set   *Var1  00000004
  68C:  Set   *Var2  00000017
  69C:  Call  ModifyColliderFlags   ( 00000000 *Var2 7FFFFE00 )
  6B4:  Exec  $Script_80240854
  6C0:  Set   *Var0  00000038
  6D0:  Set   *Var1  00000005
  6E0:  Set   *Var2  0000001A
  6F0:  Call  ModifyColliderFlags   ( 00000000 *Var2 7FFFFE00 )
  708:  Exec  $Script_80240ADC
  714:  Exec  $Script_80241F5C
  720:  Call  EnableTexPanning  ( ~Model:o72 .True )
  734:  Call  EnableTexPanning  ( ~Model:o73 .True )
  748:  Call  EnableTexPanning  ( ~Model:o74 .True )
  75C:  Call  EnableTexPanning  ( ~Model:o75 .True )
  770:  Call  EnableTexPanning  ( ~Model:o76 .True )
  784:  Call  EnableTexPanning  ( ~Model:o71 .True )
  798:  Call  SetModelCustomGfx ( ~Model:o72 00000000 FFFFFFFF )
  7B0:  Call  SetModelCustomGfx ( ~Model:o73 00000000 FFFFFFFF )
  7C8:  Call  SetModelCustomGfx ( ~Model:o74 00000000 FFFFFFFF )
  7E0:  Call  SetModelCustomGfx ( ~Model:o75 00000000 FFFFFFFF )
  7F8:  Call  SetModelCustomGfx ( ~Model:o76 00000000 FFFFFFFF )
  810:  Call  SetModelCustomGfx ( ~Model:o71 00000000 FFFFFFFF )
  828:  Call  SetCustomGfxBuilders  ( 00000000 $Function_80240000 00000000 )
  840:  Set   *Var0  00000000
  850:  Loop
  85C:  	Sub   *Var0  000007D0
  86C:  	If  *Var0  <  FFFF0000
  87C:  		Add   *Var0  00010000
  88C:  	EndIf
  894:  	Call  SetTexPanOffset   ( 00000001 00000000 00000000 *Var0 )
  8B0:  	Wait  1`
  8BC:  EndLoop
  8C4:  Return
  8CC:  End
}

PADDING: 80242D0C to 80242D10 (00002D0C to 00002D10)
00000000

% Origin: HEURISTIC
#new:Script $Script_SearchBush_80242D10
{
    0:  UseIntBuffer  *Var0
    C:  Get4Int  *Var1 *Var2 *Var3 *Var4
   24:  Call  GetPlayerPos  ( *Var5 *VarF *Var7 )
   3C:  Thread
   44:  	Set   *Flag[00]  .False
   54:  	If  *Var1  !=  00000000
   64:  		Loop  00000005
   70:  			UseIntBuffer  *Var1
   7C:  			Get1Int  *Var2
   88:  			Loop  *Var2
   94:  				Get1Int  *Var3
   A0:  				Call  $Function_80240400    ( *Var3 *Fixed[0.1] 00000001 *VarF 00000000 )
   C0:  				If  *Flag[00]  ==  .False
   D0:  					Set   *Flag[00]  .True
   E0:  					Call  PlaySoundAtModel  ( *Var3 .Sound:SearchBush 00000000 )
   F8:  				EndIf
  100:  			EndLoop
  108:  			Wait  1`
  114:  			UseIntBuffer  *Var1
  120:  			Get1Int  *Var2
  12C:  			Loop  *Var2
  138:  				Get1Int  *Var3
  144:  				Call  $Function_80240400    ( *Var3 *Fixed[0.1] FFFFFFFF *VarF 00000000 )
  164:  			EndLoop
  16C:  			Wait  1`
  178:  		EndLoop
  180:  		UseIntBuffer  *Var1
  18C:  		Get1Int  *Var2
  198:  		Loop  *Var2
  1A4:  			Get1Int  *Var3
  1B0:  			Call  TranslateModel    ( *Var3 00000000 00000000 00000000 )
  1CC:  		EndLoop
  1D4:  		Wait  1`
  1E0:  	EndIf
  1E8:  EndThread
  1F0:  Thread
  1F8:  	If  *Var2  !=  00000000
  208:  		UseIntBuffer  *Var2
  214:  		Get1Int  *Var3
  220:  		Loop  *Var3
  22C:  			Get1Int  *Var4
  238:  			Get3Int  *Var5 *Var6 *Var7
  24C:  			Get3Int  *Var8 *Var9 *VarA
  260:  			If  *VarA  ==  00000000
  270:  				Call  DropItemEntity    ( *Var4 *Var5 *Var6 *Var7 *Var8 *Var9 )
  294:  			Else
  29C:  				Call  GetValueByRef ( *VarA *VarB )
  2B0:  				If  *VarB  ==  00000000
  2C0:  					Call  SetValueByRef     ( *VarA 00000001 )
  2D4:  					Call  DropItemEntity    ( *Var4 *Var5 *Var6 *Var7 *Var8 *Var9 )
  2F8:  				EndIf
  300:  			EndIf
  308:  		EndLoop
  310:  	EndIf
  318:  EndThread
  320:  Wait  15`
  32C:  If  *Var4  !=  00000000
  33C:  	ExecWait  *Var4
  348:  EndIf
  350:  Return
  358:  End
}

#new:Script $Script_ShakeTree_80243070
{
    0:  SetTimescale  *Fixed[2.0]
    C:  UseIntBuffer  *Var0
   18:  Get4Int  *Var1 *Var2 *Var3 *Var4
   30:  Get1Int  *Var5
   3C:  Call  GetPlayerPos  ( *Var6 *VarF *Var8 )
   54:  Call  PlaySound     ( 00000165 )
   64:  Call  PlaySound     ( 00000166 )
   74:  Thread
   7C:  	Set   *Flag[00]  .False
   8C:  	If  *Var1  !=  00000000
   9C:  		Wait  1`
   A8:  		Loop  00000005
   B4:  			UseIntBuffer  *Var1
   C0:  			Get1Int  *Var2
   CC:  			Loop  *Var2
   D8:  				Get1Int  *Var3
   E4:  				Call  $Function_80240400    ( *Var3 *Fixed[0.1] *Fixed[0.2] *VarF 00000000 )
  104:  				If  *Flag[00]  ==  .False
  114:  					Set   *Flag[00]  .True
  124:  					Call  PlaySoundAtModel  ( *Var3 00000166 00000000 )
  13C:  				EndIf
  144:  			EndLoop
  14C:  			Wait  1`
  158:  			UseIntBuffer  *Var1
  164:  			Get1Int  *Var2
  170:  			Loop  *Var2
  17C:  				Get1Int  *Var3
  188:  				Call  $Function_80240400    ( *Var3 *Fixed[0.1] *Fixed[-0.2] *VarF 00000000 )
  1A8:  			EndLoop
  1B0:  			Wait  1`
  1BC:  		EndLoop
  1C4:  		UseIntBuffer  *Var1
  1D0:  		Get1Int  *Var2
  1DC:  		Loop  *Var2
  1E8:  			Get1Int  *Var3
  1F4:  			Call  TranslateModel    ( *Var3 00000000 00000000 00000000 )
  210:  		EndLoop
  218:  		Wait  1`
  224:  	EndIf
  22C:  EndThread
  234:  Thread
  23C:  	Set   *Flag[00]  .False
  24C:  	If  *Var2  !=  00000000
  25C:  		Loop  00000005
  268:  			UseIntBuffer  *Var2
  274:  			Get1Int  *Var3
  280:  			Loop  *Var3
  28C:  				Get1Int  *Var4
  298:  				Call  $Function_80240400    ( *Var4 *Fixed[0.1] *Fixed[0.2] *VarF 00000000 )
  2B8:  				If  *Flag[00]  ==  .False
  2C8:  					Set   *Flag[00]  .True
  2D8:  					Call  PlaySoundAtModel  ( *Var4 00000165 00000000 )
  2F0:  				EndIf
  2F8:  			EndLoop
  300:  			Wait  1`
  30C:  			UseIntBuffer  *Var2
  318:  			Get1Int  *Var3
  324:  			Loop  *Var3
  330:  				Get1Int  *Var4
  33C:  				Call  $Function_80240400    ( *Var4 *Fixed[0.1] *Fixed[-0.2] *VarF 00000000 )
  35C:  			EndLoop
  364:  			Wait  1`
  370:  		EndLoop
  378:  		UseIntBuffer  *Var2
  384:  		Get1Int  *Var3
  390:  		Loop  *Var3
  39C:  			Get1Int  *Var4
  3A8:  			Call  TranslateModel    ( *Var4 00000000 00000000 00000000 )
  3C4:  		EndLoop
  3CC:  		Wait  1`
  3D8:  	EndIf
  3E0:  EndThread
  3E8:  Thread
  3F0:  	If  *Var3  !=  00000000
  400:  		UseIntBuffer  *Var3
  40C:  		Get1Int  *Var4
  418:  		Loop  *Var4
  424:  			Get1Int  *Var5
  430:  			Get3Int  *Var6 *Var7 *Var8
  444:  			Get3Int  *Var9 *VarA *VarB
  458:  			If  *VarB  ==  00000000
  468:  				Call  DropItemEntity    ( *Var5 *Var6 *Var7 *Var8 *Var9 *VarA )
  48C:  			Else
  494:  				Call  GetValueByRef ( *VarB *VarC )
  4A8:  				If  *VarC  ==  00000000
  4B8:  					Call  SetValueByRef     ( *VarB 00000001 )
  4CC:  					Call  DropItemEntity    ( *Var5 *Var6 *Var7 *Var8 *Var9 *VarA )
  4F0:  				EndIf
  4F8:  			EndIf
  500:  		EndLoop
  508:  	EndIf
  510:  EndThread
  518:  Thread
  520:  	If  *Var4  !=  00000000
  530:  		UseIntBuffer  *Var4
  53C:  		Get1Int  *Var5
  548:  		Loop  *Var5
  554:  			Get3Int  *Var6 *Var7 *Var8
  568:  			Call  PlayEffect    ( ~FX:DropLeaves:Random *Var6 *Var7 *Var8 00000064 00000000 00000000 00000000 00000000 00000000 00000000 00000000 00000000 )
  5AC:  		EndLoop
  5B4:  	EndIf
  5BC:  EndThread
  5C4:  If  *Var5  !=  00000000
  5D4:  	ExecWait  *Var5
  5E0:  EndIf
  5E8:  Wait  15`
  5F4:  Return
  5FC:  End
}

#new:TreeModelList $TreeModelList_Tree1_Leaves
{
	00000003 ~Model:o54 ~Model:o55 ~Model:o56
}

#new:TreeModelList $TreeModelList_Tree1_Trunk
{
	00000001 ~Model:o53
}

#new:TreeDropList $TreeDropList_Tree1
{
	00000001
	.Item:Coin ~Vec3d:Tree1_Drop1 .ItemSpawnMode:Fall_SpawnOnce *GF_JAN13_Tree1_Coin 00000000
}

#new:TreeEffectVectors $TreeEffectVectors_Tree1
{
	00000002
	~Vec3f:TreeFX_Tree1_0 %    -388     114     -77
	~Vec3f:TreeFX_Tree1_1 %    -303     114     -87
}

#new:ShakeTreeEvent $ShakeTreeEvent_Tree1
{
	$TreeModelList_Tree1_Leaves
	$TreeModelList_Tree1_Trunk
	$TreeDropList_Tree1
	$TreeEffectVectors_Tree1
	00000000
}

#new:TriggerCoord $TriggerCoord_802436DC
{
	~BombPos:Bomb_802436DC % -348.000000 0.000000 -107.000000 0.000000
}

#new:TreeModelList $TreeModelList_Tree2_Leaves
{
	00000003 ~Model:o50 ~Model:o51 ~Model:o52
}

#new:TreeModelList $TreeModelList_Tree2_Trunk
{
	00000001 ~Model:o49
}

#new:TreeEffectVectors $TreeEffectVectors_Tree2
{
	00000002
	~Vec3f:TreeFX_Tree2_0 %     264     114     -81
	~Vec3f:TreeFX_Tree2_1 %     349     114     -91
}

#new:ShakeTreeEvent $ShakeTreeEvent_Tree2
{
	$TreeModelList_Tree2_Leaves
	$TreeModelList_Tree2_Trunk
	00000000
	$TreeEffectVectors_Tree2
	00000000
}

#new:TriggerCoord $TriggerCoord_80243734
{
	~BombPos:Bomb_80243734 % 304.000000 0.000000 -111.000000 0.000000
}

#new:Script $Script_80243744
{
    0:  Set   *Var0  $ShakeTreeEvent_Tree1
   10:  Bind  $Script_ShakeTree_80243070 .Trigger:WallHammer ~Collider:o113 00000001 00000000
   2C:  Bind  $Script_ShakeTree_80243070 .Trigger:PointBomb $TriggerCoord_802436DC 00000001 00000000
   48:  Set   *Var0  $ShakeTreeEvent_Tree2
   58:  Bind  $Script_ShakeTree_80243070 .Trigger:WallHammer ~Collider:o110 00000001 00000000
   74:  Bind  $Script_ShakeTree_80243070 .Trigger:PointBomb $TriggerCoord_80243734 00000001 00000000
   90:  Return
   98:  End
}

PADDING: 802437E4 to 802437F0 (000037E4 to 000037F0)
00000000 00000000 00000000

#new:Script $Script_MakeEntities
{
    0:  Call  MakeEntity        ( .Entity:PinkFlower ~Vec4d:Entity802437F0 80000000 )
   24:  Call  MakeEntity        ( .Entity:HiddenYellowBlock ~Vec4d:Entity80243814 .Item:VoltShroom 80000000 )
   4C:  Call  AssignBlockFlag   ( *GF_JAN13_HiddenItem_VoltShroom )
   5C:  Call  UseDynamicShadow  ( .True )
   6C:  Return
   74:  End
}

PADDING: 8024386C to 80243870 (0000386C to 00003870)
00000000

#new:ASCII $ASCII_80243870
{
	"jan_14"
}

#new:ASCII $ASCII_80243878
{
	"jan_12"
}

#new:ConstDouble $ConstDouble_80243880
{
	0.020000d
}

#new:ConstDouble $ConstDouble_80243888
{
	0.100000d
}

#new:ConstDouble $ConstDouble_80243890
{
	0.300000d
}

#new:ConstDouble $ConstDouble_80243898
{
	0.600000d
}

